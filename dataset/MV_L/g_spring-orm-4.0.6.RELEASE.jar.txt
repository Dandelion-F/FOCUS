org/springframework/orm/jpa/support/OpenEntityManagerInViewFilter/doFilterInternal(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)#org/springframework/dao/DataAccessResourceFailureException/DataAccessResourceFailureException(java.lang.String,java.lang.Throwable)
org/springframework/orm/jpa/support/OpenEntityManagerInViewFilter/doFilterInternal(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)#org/springframework/orm/jpa/support/OpenEntityManagerInViewFilter/isAsyncDispatch(javax.servlet.http.HttpServletRequest)
org/springframework/orm/jpa/support/OpenEntityManagerInViewFilter/doFilterInternal(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)#javax/servlet/FilterChain/doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)
org/springframework/orm/jpa/support/OpenEntityManagerInViewFilter/doFilterInternal(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/springframework/orm/jpa/support/OpenEntityManagerInViewFilter/doFilterInternal(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)#org/springframework/transaction/support/TransactionSynchronizationManager/unbindResource(java.lang.Object)
org/springframework/orm/jpa/support/OpenEntityManagerInViewFilter/doFilterInternal(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)#org/springframework/transaction/support/TransactionSynchronizationManager/hasResource(java.lang.Object)
org/springframework/orm/jpa/support/OpenEntityManagerInViewFilter/doFilterInternal(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)#org/springframework/web/context/request/async/WebAsyncManager/registerDeferredResultInterceptor(java.lang.Object,org.springframework.web.context.request.async.DeferredResultProcessingInterceptor)
org/springframework/orm/jpa/support/OpenEntityManagerInViewFilter/doFilterInternal(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)#org/springframework/web/context/request/async/WebAsyncManager/registerCallableInterceptor(java.lang.Object,org.springframework.web.context.request.async.CallableProcessingInterceptor)
org/springframework/orm/jpa/support/OpenEntityManagerInViewFilter/doFilterInternal(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)#org/springframework/transaction/support/TransactionSynchronizationManager/bindResource(java.lang.Object,java.lang.Object)
org/springframework/orm/jpa/support/OpenEntityManagerInViewFilter/doFilterInternal(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)#org/springframework/orm/jpa/support/OpenEntityManagerInViewFilter/isAsyncStarted(javax.servlet.http.HttpServletRequest)
org/springframework/orm/jpa/support/OpenEntityManagerInViewFilter/doFilterInternal(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)#org/springframework/orm/jpa/support/OpenEntityManagerInViewFilter/getAlreadyFilteredAttributeName()
org/springframework/orm/jpa/support/OpenEntityManagerInViewFilter/doFilterInternal(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)#org/springframework/web/context/request/async/WebAsyncUtils/getAsyncManager(javax.servlet.ServletRequest)
org/springframework/orm/hibernate4/HibernateTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#org/hibernate/SessionBuilder/openSession()
org/springframework/orm/hibernate4/HibernateTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#org/springframework/orm/hibernate4/HibernateTransactionManager$HibernateTransactionObject/setSession(org.hibernate.Session)
org/springframework/orm/hibernate4/HibernateTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#org/springframework/jdbc/datasource/ConnectionHolder/isSynchronizedWithTransaction()
org/springframework/orm/hibernate4/HibernateTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#org/hibernate/FlushMode/equals(java.lang.Object)
org/springframework/orm/hibernate4/HibernateTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#org/springframework/orm/hibernate4/HibernateTransactionManager$HibernateTransactionObject/isNewSession()
org/springframework/orm/hibernate4/HibernateTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#org/apache/commons/logging/Log/debug(java.lang.Object,java.lang.Throwable)
org/springframework/orm/hibernate4/HibernateTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/springframework/orm/hibernate4/HibernateTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#org/hibernate/Session/getTransaction()
org/springframework/orm/hibernate4/HibernateTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#org/hibernate/Transaction/isActive()
org/springframework/orm/hibernate4/HibernateTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#org/hibernate/Session/setFlushMode(org.hibernate.FlushMode)
org/springframework/orm/hibernate4/HibernateTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#org/hibernate/Transaction/setTimeout(int)
org/springframework/orm/hibernate4/HibernateTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#org/springframework/jdbc/datasource/ConnectionHolder/setTimeoutInSeconds(int)
org/springframework/orm/hibernate4/HibernateTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#org/springframework/orm/hibernate4/SessionHolder/isSynchronizedWithTransaction()
org/springframework/orm/hibernate4/HibernateTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#org/springframework/orm/hibernate4/HibernateTransactionManager$HibernateTransactionObject/isNewSessionHolder()
org/springframework/orm/hibernate4/HibernateTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#org/springframework/orm/hibernate4/HibernateTransactionManager$HibernateTransactionObject/getSessionHolder()
org/springframework/orm/hibernate4/HibernateTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#java/lang/StringBuilder/append(java.lang.String)
org/springframework/orm/hibernate4/HibernateTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#org/hibernate/SessionBuilder/interceptor(org.hibernate.Interceptor)
org/springframework/orm/hibernate4/HibernateTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#org/hibernate/Transaction/begin()
org/springframework/orm/hibernate4/HibernateTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#org/apache/commons/logging/Log/isDebugEnabled()
org/springframework/orm/hibernate4/HibernateTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#org/hibernate/Session/getFlushMode()
org/springframework/orm/hibernate4/HibernateTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#org/hibernate/engine/spi/SessionImplementor/connection()
org/springframework/orm/hibernate4/HibernateTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#org/hibernate/Session/beginTransaction()
org/springframework/orm/hibernate4/HibernateTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#org/springframework/transaction/TransactionDefinition/getIsolationLevel()
org/springframework/orm/hibernate4/HibernateTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#org/springframework/transaction/InvalidIsolationLevelException/InvalidIsolationLevelException(java.lang.String)
org/springframework/orm/hibernate4/HibernateTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#org/hibernate/SessionFactory/openSession()
org/springframework/orm/hibernate4/HibernateTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#org/springframework/transaction/IllegalTransactionStateException/IllegalTransactionStateException(java.lang.String)
org/springframework/orm/hibernate4/HibernateTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#org/springframework/transaction/CannotCreateTransactionException/CannotCreateTransactionException(java.lang.String,java.lang.Throwable)
org/springframework/orm/hibernate4/HibernateTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#org/springframework/orm/hibernate4/HibernateTransactionManager$HibernateTransactionObject/setPreviousIsolationLevel(java.lang.Integer)
org/springframework/orm/hibernate4/HibernateTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#java/lang/StringBuilder/StringBuilder()
org/springframework/orm/hibernate4/HibernateTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#org/springframework/orm/hibernate4/SessionHolder/setSynchronizedWithTransaction(boolean)
org/springframework/orm/hibernate4/HibernateTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#org/springframework/orm/hibernate4/HibernateTransactionManager/determineTimeout(org.springframework.transaction.TransactionDefinition)
org/springframework/orm/hibernate4/HibernateTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#org/hibernate/Transaction/rollback()
org/springframework/orm/hibernate4/HibernateTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#org/springframework/jdbc/datasource/ConnectionHolder/ConnectionHolder(java.sql.Connection)
org/springframework/orm/hibernate4/HibernateTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#org/springframework/transaction/support/TransactionSynchronizationManager/bindResource(java.lang.Object,java.lang.Object)
org/springframework/orm/hibernate4/HibernateTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#java/lang/StringBuilder/append(java.lang.Object)
org/springframework/orm/hibernate4/HibernateTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#org/springframework/jdbc/datasource/DataSourceUtils/prepareConnectionForTransaction(java.sql.Connection,org.springframework.transaction.TransactionDefinition)
org/springframework/orm/hibernate4/HibernateTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#org/springframework/orm/hibernate4/HibernateTransactionManager$HibernateTransactionObject/getConnectionHolder()
org/springframework/orm/hibernate4/HibernateTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#org/springframework/orm/hibernate4/HibernateTransactionManager$HibernateTransactionObject/hasConnectionHolder()
org/springframework/orm/hibernate4/HibernateTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#org/springframework/transaction/TransactionDefinition/isReadOnly()
org/springframework/orm/hibernate4/HibernateTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#org/hibernate/SessionFactory/withOptions()
org/springframework/orm/hibernate4/HibernateTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#java/lang/StringBuilder/toString()
org/springframework/orm/hibernate4/HibernateTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#org/springframework/orm/hibernate4/HibernateTransactionManager$HibernateTransactionObject/setConnectionHolder(org.springframework.jdbc.datasource.ConnectionHolder)
org/springframework/orm/hibernate4/HibernateTransactionManager/doRollback(org.springframework.transaction.support.DefaultTransactionStatus)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/springframework/orm/hibernate4/HibernateTransactionManager/doRollback(org.springframework.transaction.support.DefaultTransactionStatus)#org/springframework/transaction/support/DefaultTransactionStatus/getTransaction()
org/springframework/orm/hibernate4/HibernateTransactionManager/doRollback(org.springframework.transaction.support.DefaultTransactionStatus)#org/springframework/transaction/TransactionSystemException/TransactionSystemException(java.lang.String,java.lang.Throwable)
org/springframework/orm/hibernate4/HibernateTransactionManager/doRollback(org.springframework.transaction.support.DefaultTransactionStatus)#java/lang/StringBuilder/StringBuilder()
org/springframework/orm/hibernate4/HibernateTransactionManager/doRollback(org.springframework.transaction.support.DefaultTransactionStatus)#org/hibernate/Transaction/rollback()
org/springframework/orm/hibernate4/HibernateTransactionManager/doRollback(org.springframework.transaction.support.DefaultTransactionStatus)#java/lang/StringBuilder/append(java.lang.Object)
org/springframework/orm/hibernate4/HibernateTransactionManager/doRollback(org.springframework.transaction.support.DefaultTransactionStatus)#org/springframework/orm/hibernate4/HibernateTransactionManager$HibernateTransactionObject/isNewSession()
org/springframework/orm/hibernate4/HibernateTransactionManager/doRollback(org.springframework.transaction.support.DefaultTransactionStatus)#org/springframework/transaction/support/DefaultTransactionStatus/isDebug()
org/springframework/orm/hibernate4/HibernateTransactionManager/doRollback(org.springframework.transaction.support.DefaultTransactionStatus)#java/lang/StringBuilder/toString()
org/springframework/orm/hibernate4/HibernateTransactionManager/doRollback(org.springframework.transaction.support.DefaultTransactionStatus)#org/hibernate/Session/clear()
org/springframework/orm/hibernate4/HibernateTransactionManager/doRollback(org.springframework.transaction.support.DefaultTransactionStatus)#org/springframework/orm/hibernate4/HibernateTransactionManager$HibernateTransactionObject/getSessionHolder()
org/springframework/orm/hibernate4/HibernateTransactionManager/doRollback(org.springframework.transaction.support.DefaultTransactionStatus)#java/lang/StringBuilder/append(java.lang.String)
org/springframework/orm/hibernate4/HibernateTransactionManager/doCommit(org.springframework.transaction.support.DefaultTransactionStatus)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/springframework/orm/hibernate4/HibernateTransactionManager/doCommit(org.springframework.transaction.support.DefaultTransactionStatus)#org/springframework/transaction/TransactionSystemException/TransactionSystemException(java.lang.String,java.lang.Throwable)
org/springframework/orm/hibernate4/HibernateTransactionManager/doCommit(org.springframework.transaction.support.DefaultTransactionStatus)#java/lang/StringBuilder/StringBuilder()
org/springframework/orm/hibernate4/HibernateTransactionManager/doCommit(org.springframework.transaction.support.DefaultTransactionStatus)#java/lang/StringBuilder/append(java.lang.Object)
org/springframework/orm/hibernate4/HibernateTransactionManager/doCommit(org.springframework.transaction.support.DefaultTransactionStatus)#org/springframework/transaction/support/DefaultTransactionStatus/isDebug()
org/springframework/orm/hibernate4/HibernateTransactionManager/doCommit(org.springframework.transaction.support.DefaultTransactionStatus)#java/lang/StringBuilder/toString()
org/springframework/orm/hibernate4/HibernateTransactionManager/doCommit(org.springframework.transaction.support.DefaultTransactionStatus)#org/springframework/orm/hibernate4/HibernateTransactionManager$HibernateTransactionObject/getSessionHolder()
org/springframework/orm/hibernate4/HibernateTransactionManager/doCommit(org.springframework.transaction.support.DefaultTransactionStatus)#java/lang/StringBuilder/append(java.lang.String)
org/springframework/orm/hibernate4/HibernateTransactionManager/doCommit(org.springframework.transaction.support.DefaultTransactionStatus)#org/springframework/transaction/support/DefaultTransactionStatus/getTransaction()
org/springframework/orm/hibernate4/HibernateTransactionManager/doCommit(org.springframework.transaction.support.DefaultTransactionStatus)#org/hibernate/Transaction/commit()
org/springframework/orm/hibernate4/HibernateTransactionManager/doSetRollbackOnly(org.springframework.transaction.support.DefaultTransactionStatus)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/springframework/orm/hibernate4/HibernateTransactionManager/doSetRollbackOnly(org.springframework.transaction.support.DefaultTransactionStatus)#org/springframework/transaction/support/DefaultTransactionStatus/getTransaction()
org/springframework/orm/hibernate4/HibernateTransactionManager/doSetRollbackOnly(org.springframework.transaction.support.DefaultTransactionStatus)#org/springframework/orm/hibernate4/HibernateTransactionManager$HibernateTransactionObject/setRollbackOnly()
org/springframework/orm/hibernate4/HibernateTransactionManager/doSetRollbackOnly(org.springframework.transaction.support.DefaultTransactionStatus)#java/lang/StringBuilder/StringBuilder()
org/springframework/orm/hibernate4/HibernateTransactionManager/doSetRollbackOnly(org.springframework.transaction.support.DefaultTransactionStatus)#java/lang/StringBuilder/append(java.lang.Object)
org/springframework/orm/hibernate4/HibernateTransactionManager/doSetRollbackOnly(org.springframework.transaction.support.DefaultTransactionStatus)#org/springframework/transaction/support/DefaultTransactionStatus/isDebug()
org/springframework/orm/hibernate4/HibernateTransactionManager/doSetRollbackOnly(org.springframework.transaction.support.DefaultTransactionStatus)#java/lang/StringBuilder/toString()
org/springframework/orm/hibernate4/HibernateTransactionManager/doSetRollbackOnly(org.springframework.transaction.support.DefaultTransactionStatus)#org/springframework/orm/hibernate4/HibernateTransactionManager$HibernateTransactionObject/getSessionHolder()
org/springframework/orm/hibernate4/HibernateTransactionManager/doSetRollbackOnly(org.springframework.transaction.support.DefaultTransactionStatus)#java/lang/StringBuilder/append(java.lang.String)
org/springframework/orm/hibernate4/HibernateTransactionManager/doCleanupAfterCompletion(java.lang.Object)#org/hibernate/Session/setFlushMode(org.hibernate.FlushMode)
org/springframework/orm/hibernate4/HibernateTransactionManager/doCleanupAfterCompletion(java.lang.Object)#org/springframework/transaction/support/TransactionSynchronizationManager/unbindResource(java.lang.Object)
org/springframework/orm/hibernate4/HibernateTransactionManager/doCleanupAfterCompletion(java.lang.Object)#org/apache/commons/logging/Log/isDebugEnabled()
org/springframework/orm/hibernate4/HibernateTransactionManager/doCleanupAfterCompletion(java.lang.Object)#org/hibernate/engine/spi/SessionImplementor/connection()
org/springframework/orm/hibernate4/HibernateTransactionManager/doCleanupAfterCompletion(java.lang.Object)#java/lang/StringBuilder/StringBuilder()
org/springframework/orm/hibernate4/HibernateTransactionManager/doCleanupAfterCompletion(java.lang.Object)#org/springframework/jdbc/datasource/DataSourceUtils/resetConnectionAfterTransaction(java.sql.Connection,java.lang.Integer)
org/springframework/orm/hibernate4/HibernateTransactionManager/doCleanupAfterCompletion(java.lang.Object)#org/springframework/orm/hibernate4/HibernateTransactionManager$HibernateTransactionObject/isNewSession()
org/springframework/orm/hibernate4/HibernateTransactionManager/doCleanupAfterCompletion(java.lang.Object)#org/springframework/orm/hibernate4/HibernateTransactionManager$HibernateTransactionObject/getPreviousIsolationLevel()
org/springframework/orm/hibernate4/HibernateTransactionManager/doCleanupAfterCompletion(java.lang.Object)#java/lang/StringBuilder/toString()
org/springframework/orm/hibernate4/HibernateTransactionManager/doCleanupAfterCompletion(java.lang.Object)#org/apache/commons/logging/Log/debug(java.lang.Object,java.lang.Throwable)
org/springframework/orm/hibernate4/HibernateTransactionManager/doCleanupAfterCompletion(java.lang.Object)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/springframework/orm/hibernate4/HibernateTransactionManager/doCleanupAfterCompletion(java.lang.Object)#org/springframework/orm/hibernate4/HibernateTransactionManager$HibernateTransactionObject/isNewSessionHolder()
org/springframework/orm/hibernate4/HibernateTransactionManager/doCleanupAfterCompletion(java.lang.Object)#org/springframework/orm/hibernate4/HibernateTransactionManager$HibernateTransactionObject/getSessionHolder()
org/springframework/orm/hibernate4/HibernateTransactionManager/doCleanupAfterCompletion(java.lang.Object)#java/lang/StringBuilder/append(java.lang.String)
org/springframework/orm/hibernate4/HibernateTransactionManager/doCleanupAfterCompletion(java.lang.Object)#org/hibernate/Session/disconnect()
org/springframework/orm/hibernate4/HibernateTransactionManager/doCleanupAfterCompletion(java.lang.Object)#java/lang/StringBuilder/append(java.lang.Object)
org/springframework/orm/hibernate4/HibernateTransactionManager/doCleanupAfterCompletion(java.lang.Object)#org/hibernate/Session/isConnected()
org/springframework/orm/hibernate4/HibernateTransactionManager/doGetTransaction()#org/apache/commons/logging/Log/debug(java.lang.Object)
org/springframework/orm/hibernate4/HibernateTransactionManager/doGetTransaction()#org/springframework/dao/DataAccessResourceFailureException/DataAccessResourceFailureException(java.lang.String,java.lang.Throwable)
org/springframework/orm/hibernate4/HibernateTransactionManager/doGetTransaction()#org/apache/commons/logging/Log/isDebugEnabled()
org/springframework/orm/hibernate4/HibernateTransactionManager/doGetTransaction()#org/springframework/transaction/support/TransactionSynchronizationManager/getResource(java.lang.Object)
org/springframework/orm/hibernate4/HibernateTransactionManager/doGetTransaction()#org/springframework/orm/hibernate4/HibernateTransactionManager$HibernateTransactionObject/setExistingSession(org.hibernate.Session)
org/springframework/orm/hibernate4/HibernateTransactionManager/doGetTransaction()#org/springframework/orm/hibernate4/HibernateTransactionManager$HibernateTransactionObject/setSessionHolder(org.springframework.orm.hibernate4.SessionHolder)
org/springframework/orm/hibernate4/HibernateTransactionManager/doGetTransaction()#java/lang/StringBuilder/append(java.lang.String)
org/springframework/orm/hibernate4/HibernateTransactionManager/doGetTransaction()#org/springframework/orm/hibernate4/HibernateTransactionManager$HibernateTransactionObject/setSavepointAllowed(boolean)
org/springframework/orm/hibernate4/HibernateTransactionManager/doGetTransaction()#org/springframework/orm/hibernate4/HibernateTransactionManager$HibernateTransactionObject/HibernateTransactionObject(org.springframework.orm.hibernate4.HibernateTransactionManager,org.springframework.orm.hibernate4.HibernateTransactionManager$1)
org/springframework/orm/hibernate4/HibernateTransactionManager/doGetTransaction()#java/lang/StringBuilder/StringBuilder()
org/springframework/orm/hibernate4/HibernateTransactionManager/doGetTransaction()#org/springframework/orm/hibernate4/HibernateTransactionManager/isNestedTransactionAllowed()
org/springframework/orm/hibernate4/HibernateTransactionManager/doGetTransaction()#java/lang/StringBuilder/append(java.lang.Object)
org/springframework/orm/hibernate4/HibernateTransactionManager/doGetTransaction()#org/hibernate/SessionFactory/getCurrentSession()
org/springframework/orm/hibernate4/HibernateTransactionManager/doGetTransaction()#java/lang/StringBuilder/toString()
org/springframework/orm/hibernate4/HibernateTransactionManager/doGetTransaction()#org/springframework/orm/hibernate4/HibernateTransactionManager$HibernateTransactionObject/setConnectionHolder(org.springframework.jdbc.datasource.ConnectionHolder)
org/springframework/orm/jpa/support/PersistenceAnnotationBeanPostProcessor/LocatorDelegate/lookup(java.lang.String,java.lang.Class)#org/springframework/jndi/JndiLocatorDelegate/setJndiTemplate(org.springframework.jndi.JndiTemplate)
org/springframework/orm/jpa/support/PersistenceAnnotationBeanPostProcessor/LocatorDelegate/lookup(java.lang.String,java.lang.Class)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/springframework/orm/jpa/support/PersistenceAnnotationBeanPostProcessor/LocatorDelegate/lookup(java.lang.String,java.lang.Class)#org/springframework/jndi/JndiLocatorDelegate/setResourceRef(boolean)
org/springframework/orm/jpa/support/PersistenceAnnotationBeanPostProcessor/LocatorDelegate/lookup(java.lang.String,java.lang.Class)#java/lang/StringBuilder/append(java.lang.String)
org/springframework/orm/jpa/support/PersistenceAnnotationBeanPostProcessor/LocatorDelegate/lookup(java.lang.String,java.lang.Class)#org/springframework/jndi/JndiLocatorDelegate/setJndiEnvironment(java.util.Properties)
org/springframework/orm/jpa/support/PersistenceAnnotationBeanPostProcessor/LocatorDelegate/lookup(java.lang.String,java.lang.Class)#org/springframework/jndi/JndiLocatorDelegate/lookup(java.lang.String,java.lang.Class)
org/springframework/orm/jpa/support/PersistenceAnnotationBeanPostProcessor/LocatorDelegate/lookup(java.lang.String,java.lang.Class)#java/lang/StringBuilder/StringBuilder()
org/springframework/orm/jpa/support/PersistenceAnnotationBeanPostProcessor/LocatorDelegate/lookup(java.lang.String,java.lang.Class)#org/springframework/jndi/JndiLocatorDelegate/JndiLocatorDelegate()
org/springframework/orm/jpa/support/PersistenceAnnotationBeanPostProcessor/LocatorDelegate/lookup(java.lang.String,java.lang.Class)#java/lang/StringBuilder/toString()
org/springframework/orm/jpa/support/PersistenceAnnotationBeanPostProcessor/LocatorDelegate/lookup(java.lang.String,java.lang.Class)#java/lang/StringBuilder/append(java.lang.Object)
org/springframework/orm/jpa/support/PersistenceAnnotationBeanPostProcessor/LocatorDelegate/lookup(java.lang.String,java.lang.Class)#java/lang/Object/getClass()
org/springframework/orm/hibernate4/HibernateTemplate/36/doInHibernate(org.hibernate.Session)#org/hibernate/Criteria/list()
org/springframework/orm/hibernate4/HibernateTemplate/36/doInHibernate(org.hibernate.Session)#org/hibernate/Criteria/add(org.hibernate.criterion.Criterion)
org/springframework/orm/hibernate4/HibernateTemplate/36/doInHibernate(org.hibernate.Session)#org/hibernate/Criteria/setFirstResult(int)
org/springframework/orm/hibernate4/HibernateTemplate/36/doInHibernate(org.hibernate.Session)#org/hibernate/Session/createCriteria(java.lang.Class)
org/springframework/orm/hibernate4/HibernateTemplate/36/doInHibernate(org.hibernate.Session)#org/springframework/orm/hibernate4/HibernateTemplate$36/doInHibernate(org.hibernate.Session)
org/springframework/orm/hibernate4/HibernateTemplate/36/doInHibernate(org.hibernate.Session)#java/lang/Object/getClass()
org/springframework/orm/hibernate4/HibernateTemplate/36/doInHibernate(org.hibernate.Session)#org/hibernate/criterion/Example/create(java.lang.Object)
org/springframework/orm/hibernate4/HibernateTemplate/36/doInHibernate(org.hibernate.Session)#org/hibernate/Session/createCriteria(java.lang.String)
org/springframework/orm/hibernate4/HibernateTemplate/36/doInHibernate(org.hibernate.Session)#org/hibernate/Criteria/setMaxResults(int)
org/springframework/orm/hibernate4/SpringSessionContext/currentSession()#org/springframework/transaction/support/TransactionSynchronizationManager/registerSynchronization(org.springframework.transaction.support.TransactionSynchronization)
org/springframework/orm/hibernate4/SpringSessionContext/currentSession()#org/springframework/transaction/support/TransactionSynchronizationManager/isCurrentTransactionReadOnly()
org/springframework/orm/hibernate4/SpringSessionContext/currentSession()#org/hibernate/Session/getFlushMode()
org/springframework/orm/hibernate4/SpringSessionContext/currentSession()#org/springframework/orm/hibernate4/SessionHolder/setSynchronizedWithTransaction(boolean)
org/springframework/orm/hibernate4/SpringSessionContext/currentSession()#org/hibernate/FlushMode/equals(java.lang.Object)
org/springframework/orm/hibernate4/SpringSessionContext/currentSession()#org/springframework/transaction/support/TransactionSynchronizationManager/isSynchronizationActive()
org/springframework/orm/hibernate4/SpringSessionContext/currentSession()#org/hibernate/context/spi/CurrentSessionContext/currentSession()
org/springframework/orm/hibernate4/SpringSessionContext/currentSession()#org/hibernate/HibernateException/HibernateException(java.lang.String)
org/springframework/orm/hibernate4/SpringSessionContext/currentSession()#org/hibernate/Session/setFlushMode(org.hibernate.FlushMode)
org/springframework/orm/hibernate4/SpringSessionContext/currentSession()#org/springframework/orm/hibernate4/SessionHolder/isSynchronizedWithTransaction()
org/springframework/orm/hibernate4/SpringSessionContext/currentSession()#org/springframework/transaction/support/TransactionSynchronizationManager/getResource(java.lang.Object)
org/springframework/orm/hibernate3/HibernateTemplate/36/doInHibernate(org.hibernate.Session)#org/hibernate/Criteria/list()
org/springframework/orm/hibernate3/HibernateTemplate/36/doInHibernate(org.hibernate.Session)#org/hibernate/Criteria/add(org.hibernate.criterion.Criterion)
org/springframework/orm/hibernate3/HibernateTemplate/36/doInHibernate(org.hibernate.Session)#org/hibernate/Criteria/setFirstResult(int)
org/springframework/orm/hibernate3/HibernateTemplate/36/doInHibernate(org.hibernate.Session)#java/lang/Object/getClass()
org/springframework/orm/hibernate3/HibernateTemplate/36/doInHibernate(org.hibernate.Session)#org/hibernate/criterion/Example/create(java.lang.Object)
org/springframework/orm/hibernate3/HibernateTemplate/36/doInHibernate(org.hibernate.Session)#org/springframework/orm/hibernate3/HibernateTemplate$36/doInHibernate(org.hibernate.Session)
org/springframework/orm/hibernate3/HibernateTemplate/36/doInHibernate(org.hibernate.Session)#org/hibernate/Session/createCriteria(java.lang.Class)
org/springframework/orm/hibernate3/HibernateTemplate/36/doInHibernate(org.hibernate.Session)#org/hibernate/Session/createCriteria(java.lang.String)
org/springframework/orm/hibernate3/HibernateTemplate/36/doInHibernate(org.hibernate.Session)#org/hibernate/Criteria/setMaxResults(int)
org/springframework/orm/jpa/LocalContainerEntityManagerFactoryBean/createNativeEntityManagerFactory()#org/apache/commons/logging/Log/isInfoEnabled()
org/springframework/orm/jpa/LocalContainerEntityManagerFactoryBean/createNativeEntityManagerFactory()#org/apache/commons/logging/Log/info(java.lang.Object)
org/springframework/orm/jpa/LocalContainerEntityManagerFactoryBean/createNativeEntityManagerFactory()#java/lang/Class/getName()
org/springframework/orm/jpa/LocalContainerEntityManagerFactoryBean/createNativeEntityManagerFactory()#org/springframework/util/ClassUtils/resolveClassName(java.lang.String,java.lang.ClassLoader)
org/springframework/orm/jpa/LocalContainerEntityManagerFactoryBean/createNativeEntityManagerFactory()#java/lang/StringBuilder/StringBuilder()
org/springframework/orm/jpa/LocalContainerEntityManagerFactoryBean/createNativeEntityManagerFactory()#org/springframework/beans/BeanUtils/instantiateClass(java.lang.Class)
org/springframework/orm/jpa/LocalContainerEntityManagerFactoryBean/createNativeEntityManagerFactory()#javax/persistence/spi/PersistenceProvider/createContainerEntityManagerFactory(javax.persistence.spi.PersistenceUnitInfo,java.util.Map)
org/springframework/orm/jpa/LocalContainerEntityManagerFactoryBean/createNativeEntityManagerFactory()#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/springframework/orm/jpa/LocalContainerEntityManagerFactoryBean/createNativeEntityManagerFactory()#java/lang/Object/getClass()
org/springframework/orm/jpa/LocalContainerEntityManagerFactoryBean/createNativeEntityManagerFactory()#javax/persistence/spi/PersistenceUnitInfo/getPersistenceProviderClassName()
org/springframework/orm/jpa/LocalContainerEntityManagerFactoryBean/createNativeEntityManagerFactory()#javax/persistence/spi/PersistenceUnitInfo/getPersistenceUnitName()
org/springframework/orm/jpa/LocalContainerEntityManagerFactoryBean/createNativeEntityManagerFactory()#org/springframework/orm/jpa/LocalContainerEntityManagerFactoryBean/getPersistenceProvider()
org/springframework/orm/jpa/LocalContainerEntityManagerFactoryBean/createNativeEntityManagerFactory()#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/springframework/orm/jpa/LocalContainerEntityManagerFactoryBean/createNativeEntityManagerFactory()#java/lang/StringBuilder/append(java.lang.String)
org/springframework/orm/jpa/LocalContainerEntityManagerFactoryBean/createNativeEntityManagerFactory()#org/springframework/orm/jpa/LocalContainerEntityManagerFactoryBean/getBeanClassLoader()
org/springframework/orm/jpa/LocalContainerEntityManagerFactoryBean/createNativeEntityManagerFactory()#org/springframework/orm/jpa/LocalContainerEntityManagerFactoryBean/getJpaPropertyMap()
org/springframework/orm/jpa/LocalContainerEntityManagerFactoryBean/createNativeEntityManagerFactory()#org/springframework/orm/jpa/LocalContainerEntityManagerFactoryBean/getJpaVendorAdapter()
org/springframework/orm/jpa/LocalContainerEntityManagerFactoryBean/createNativeEntityManagerFactory()#java/lang/StringBuilder/toString()
org/springframework/orm/jdo/LocalPersistenceManagerFactoryBean/afterPropertiesSet()#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/springframework/orm/jdo/LocalPersistenceManagerFactoryBean/afterPropertiesSet()#java/lang/StringBuilder/append(java.lang.String)
org/springframework/orm/jdo/LocalPersistenceManagerFactoryBean/afterPropertiesSet()#org/springframework/util/CollectionUtils/mergePropertiesIntoMap(java.util.Properties,java.util.Map)
org/springframework/orm/jdo/LocalPersistenceManagerFactoryBean/afterPropertiesSet()#org/apache/commons/logging/Log/info(java.lang.Object)
org/springframework/orm/jdo/LocalPersistenceManagerFactoryBean/afterPropertiesSet()#java/util/HashMap/HashMap()
org/springframework/orm/jdo/LocalPersistenceManagerFactoryBean/afterPropertiesSet()#java/lang/StringBuilder/StringBuilder()
org/springframework/orm/jdo/LocalPersistenceManagerFactoryBean/afterPropertiesSet()#javax/jdo/PersistenceManagerFactory/getConnectionFactory()
org/springframework/orm/jdo/LocalPersistenceManagerFactoryBean/afterPropertiesSet()#java/lang/StringBuilder/append(java.lang.Object)
org/springframework/orm/jdo/LocalPersistenceManagerFactoryBean/afterPropertiesSet()#java/lang/StringBuilder/toString()
org/springframework/orm/jdo/LocalPersistenceManagerFactoryBean/afterPropertiesSet()#org/springframework/core/io/support/PropertiesLoaderUtils/loadProperties(org.springframework.core.io.Resource)
org/springframework/orm/jdo/LocalPersistenceManagerFactoryBean/afterPropertiesSet()#org/apache/commons/logging/Log/isInfoEnabled()
org/springframework/orm/jdo/LocalPersistenceManagerFactoryBean/afterPropertiesSet()#java/util/Map/putAll(java.util.Map)
org/springframework/orm/jdo/LocalPersistenceManagerFactoryBean/afterPropertiesSet()#java/util/Map/isEmpty()
org/springframework/orm/jpa/JpaTransactionManager/doCleanupAfterCompletion(java.lang.Object)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/springframework/orm/jpa/JpaTransactionManager/doCleanupAfterCompletion(java.lang.Object)#java/lang/StringBuilder/append(java.lang.String)
org/springframework/orm/jpa/JpaTransactionManager/doCleanupAfterCompletion(java.lang.Object)#org/apache/commons/logging/Log/isDebugEnabled()
org/springframework/orm/jpa/JpaTransactionManager/doCleanupAfterCompletion(java.lang.Object)#java/lang/StringBuilder/StringBuilder()
org/springframework/orm/jpa/JpaTransactionManager/doCleanupAfterCompletion(java.lang.Object)#java/lang/StringBuilder/append(java.lang.Object)
org/springframework/orm/jpa/JpaTransactionManager/doCleanupAfterCompletion(java.lang.Object)#org/springframework/transaction/support/TransactionSynchronizationManager/unbindResource(java.lang.Object)
org/springframework/orm/jpa/JpaTransactionManager/doCleanupAfterCompletion(java.lang.Object)#org/springframework/orm/jpa/JpaTransactionManager$JpaTransactionObject/getConnectionHolder()
org/springframework/orm/jpa/JpaTransactionManager/doCleanupAfterCompletion(java.lang.Object)#org/springframework/orm/jpa/JpaTransactionManager$JpaTransactionObject/getEntityManagerHolder()
org/springframework/orm/jpa/JpaTransactionManager/doCleanupAfterCompletion(java.lang.Object)#org/springframework/orm/jpa/JpaTransactionManager$JpaTransactionObject/hasConnectionHolder()
org/springframework/orm/jpa/JpaTransactionManager/doCleanupAfterCompletion(java.lang.Object)#org/springframework/orm/jpa/JpaTransactionManager$JpaTransactionObject/isNewEntityManagerHolder()
org/springframework/orm/jpa/JpaTransactionManager/doCleanupAfterCompletion(java.lang.Object)#org/springframework/jdbc/datasource/ConnectionHolder/getConnectionHandle()
org/springframework/orm/jpa/JpaTransactionManager/doCleanupAfterCompletion(java.lang.Object)#org/springframework/transaction/support/TransactionSynchronizationManager/unbindResourceIfPossible(java.lang.Object)
org/springframework/orm/jpa/JpaTransactionManager/doCleanupAfterCompletion(java.lang.Object)#org/apache/commons/logging/Log/error(java.lang.Object,java.lang.Throwable)
org/springframework/orm/jpa/JpaTransactionManager/doCleanupAfterCompletion(java.lang.Object)#java/lang/StringBuilder/toString()
org/springframework/orm/jpa/JpaTransactionManager/doCleanupAfterCompletion(java.lang.Object)#org/springframework/orm/jpa/JpaTransactionManager$JpaTransactionObject/getTransactionData()
org/springframework/orm/jpa/JpaTransactionManager/doCommit(org.springframework.transaction.support.DefaultTransactionStatus)#java/lang/StringBuilder/append(java.lang.String)
org/springframework/orm/jpa/JpaTransactionManager/doCommit(org.springframework.transaction.support.DefaultTransactionStatus)#org/springframework/transaction/support/DefaultTransactionStatus/getTransaction()
org/springframework/orm/jpa/JpaTransactionManager/doCommit(org.springframework.transaction.support.DefaultTransactionStatus)#org/springframework/orm/jpa/JpaTransactionManager$JpaTransactionObject/getEntityManagerHolder()
org/springframework/orm/jpa/JpaTransactionManager/doCommit(org.springframework.transaction.support.DefaultTransactionStatus)#javax/persistence/EntityTransaction/commit()
org/springframework/orm/jpa/JpaTransactionManager/doCommit(org.springframework.transaction.support.DefaultTransactionStatus)#javax/persistence/EntityManager/getTransaction()
org/springframework/orm/jpa/JpaTransactionManager/doCommit(org.springframework.transaction.support.DefaultTransactionStatus)#org/springframework/transaction/TransactionSystemException/TransactionSystemException(java.lang.String,java.lang.Throwable)
org/springframework/orm/jpa/JpaTransactionManager/doCommit(org.springframework.transaction.support.DefaultTransactionStatus)#java/lang/StringBuilder/StringBuilder()
org/springframework/orm/jpa/JpaTransactionManager/doCommit(org.springframework.transaction.support.DefaultTransactionStatus)#org/springframework/transaction/support/DefaultTransactionStatus/isDebug()
org/springframework/orm/jpa/JpaTransactionManager/doCommit(org.springframework.transaction.support.DefaultTransactionStatus)#java/lang/StringBuilder/toString()
org/springframework/orm/jpa/JpaTransactionManager/doCommit(org.springframework.transaction.support.DefaultTransactionStatus)#org/springframework/orm/jpa/JpaDialect/translateExceptionIfPossible(java.lang.RuntimeException)
org/springframework/orm/jpa/JpaTransactionManager/doCommit(org.springframework.transaction.support.DefaultTransactionStatus)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/springframework/orm/jpa/JpaTransactionManager/doCommit(org.springframework.transaction.support.DefaultTransactionStatus)#org/springframework/dao/support/DataAccessUtils/translateIfNecessary(java.lang.RuntimeException,org.springframework.dao.support.PersistenceExceptionTranslator)
org/springframework/orm/jpa/JpaTransactionManager/doCommit(org.springframework.transaction.support.DefaultTransactionStatus)#java/lang/StringBuilder/append(java.lang.Object)
org/springframework/orm/jpa/JpaTransactionManager/doCommit(org.springframework.transaction.support.DefaultTransactionStatus)#javax/persistence/RollbackException/getCause()
org/springframework/orm/jpa/JpaTransactionManager/doRollback(org.springframework.transaction.support.DefaultTransactionStatus)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/springframework/orm/jpa/JpaTransactionManager/doRollback(org.springframework.transaction.support.DefaultTransactionStatus)#javax/persistence/EntityTransaction/isActive()
org/springframework/orm/jpa/JpaTransactionManager/doRollback(org.springframework.transaction.support.DefaultTransactionStatus)#java/lang/StringBuilder/append(java.lang.String)
org/springframework/orm/jpa/JpaTransactionManager/doRollback(org.springframework.transaction.support.DefaultTransactionStatus)#org/springframework/transaction/support/DefaultTransactionStatus/getTransaction()
org/springframework/orm/jpa/JpaTransactionManager/doRollback(org.springframework.transaction.support.DefaultTransactionStatus)#javax/persistence/EntityManager/getTransaction()
org/springframework/orm/jpa/JpaTransactionManager/doRollback(org.springframework.transaction.support.DefaultTransactionStatus)#org/springframework/transaction/TransactionSystemException/TransactionSystemException(java.lang.String,java.lang.Throwable)
org/springframework/orm/jpa/JpaTransactionManager/doRollback(org.springframework.transaction.support.DefaultTransactionStatus)#java/lang/StringBuilder/StringBuilder()
org/springframework/orm/jpa/JpaTransactionManager/doRollback(org.springframework.transaction.support.DefaultTransactionStatus)#java/lang/StringBuilder/append(java.lang.Object)
org/springframework/orm/jpa/JpaTransactionManager/doRollback(org.springframework.transaction.support.DefaultTransactionStatus)#org/springframework/transaction/support/DefaultTransactionStatus/isDebug()
org/springframework/orm/jpa/JpaTransactionManager/doRollback(org.springframework.transaction.support.DefaultTransactionStatus)#java/lang/StringBuilder/toString()
org/springframework/orm/jpa/JpaTransactionManager/doRollback(org.springframework.transaction.support.DefaultTransactionStatus)#org/springframework/orm/jpa/JpaTransactionManager$JpaTransactionObject/isNewEntityManagerHolder()
org/springframework/orm/jpa/JpaTransactionManager/doRollback(org.springframework.transaction.support.DefaultTransactionStatus)#org/springframework/orm/jpa/JpaTransactionManager$JpaTransactionObject/getEntityManagerHolder()
org/springframework/orm/jpa/JpaTransactionManager/doRollback(org.springframework.transaction.support.DefaultTransactionStatus)#javax/persistence/EntityTransaction/rollback()
org/springframework/orm/jpa/JpaTransactionManager/doRollback(org.springframework.transaction.support.DefaultTransactionStatus)#javax/persistence/EntityManager/clear()
org/springframework/orm/jpa/JpaTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#org/springframework/orm/jpa/EntityManagerHolder/setSynchronizedWithTransaction(boolean)
org/springframework/orm/jpa/JpaTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#org/apache/commons/logging/Log/isDebugEnabled()
org/springframework/orm/jpa/JpaTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#org/springframework/orm/jpa/JpaTransactionManager$JpaTransactionObject/setEntityManagerHolder(org.springframework.orm.jpa.EntityManagerHolder,boolean)
org/springframework/orm/jpa/JpaTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#java/lang/StringBuilder/StringBuilder()
org/springframework/orm/jpa/JpaTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#org/springframework/transaction/support/TransactionSynchronizationManager/bindResource(java.lang.Object,java.lang.Object)
org/springframework/orm/jpa/JpaTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#java/lang/StringBuilder/append(java.lang.Object)
org/springframework/orm/jpa/JpaTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#org/springframework/transaction/TransactionDefinition/isReadOnly()
org/springframework/orm/jpa/JpaTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#java/lang/StringBuilder/toString()
org/springframework/orm/jpa/JpaTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#org/springframework/orm/jpa/JpaTransactionManager$JpaTransactionObject/setTransactionData(java.lang.Object)
org/springframework/orm/jpa/JpaTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/springframework/orm/jpa/JpaTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#org/springframework/jdbc/datasource/ConnectionHolder/setTimeoutInSeconds(int)
org/springframework/orm/jpa/JpaTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#java/lang/StringBuilder/append(java.lang.String)
org/springframework/orm/jpa/JpaTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#org/springframework/orm/jpa/JpaTransactionManager$JpaTransactionObject/getConnectionHolder()
org/springframework/orm/jpa/JpaTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#org/springframework/orm/jpa/JpaTransactionManager$JpaTransactionObject/getEntityManagerHolder()
org/springframework/orm/jpa/JpaTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#org/springframework/orm/jpa/JpaTransactionManager$JpaTransactionObject/hasConnectionHolder()
org/springframework/orm/jpa/JpaTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#org/springframework/orm/jpa/JpaTransactionManager$JpaTransactionObject/isNewEntityManagerHolder()
org/springframework/orm/jpa/JpaTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#org/springframework/orm/jpa/JpaTransactionManager$JpaTransactionObject/setConnectionHolder(org.springframework.jdbc.datasource.ConnectionHolder)
org/springframework/orm/jpa/JpaTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#org/springframework/jdbc/datasource/ConnectionHolder/isSynchronizedWithTransaction()
org/springframework/orm/jpa/JpaTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#org/springframework/jdbc/datasource/ConnectionHolder/ConnectionHolder(org.springframework.jdbc.datasource.ConnectionHandle)
org/springframework/orm/jpa/JpaTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#org/springframework/jdbc/datasource/ConnectionHolder/getConnectionHandle()
org/springframework/orm/jpa/JpaTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#org/springframework/transaction/IllegalTransactionStateException/IllegalTransactionStateException(java.lang.String)
org/springframework/orm/jpa/JpaTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#org/springframework/transaction/CannotCreateTransactionException/CannotCreateTransactionException(java.lang.String,java.lang.Throwable)
org/springframework/orm/jpa/JpaTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#org/springframework/orm/jpa/EntityManagerHolder/setTimeoutInSeconds(int)
org/springframework/orm/jpa/JpaTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#org/springframework/orm/jpa/EntityManagerHolder/isSynchronizedWithTransaction()
org/springframework/orm/jpa/JpaTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#org/springframework/orm/jpa/JpaTransactionManager$1/1(org.springframework.orm.jpa.JpaTransactionManager,org.springframework.transaction.TransactionDefinition,int)
org/springframework/orm/jpa/JpaTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#org/springframework/orm/jpa/JpaTransactionManager/determineTimeout(org.springframework.transaction.TransactionDefinition)
org/springframework/orm/jpa/JpaTransactionManager/doGetTransaction()#org/apache/commons/logging/Log/debug(java.lang.Object)
org/springframework/orm/jpa/JpaTransactionManager/doGetTransaction()#org/springframework/orm/jpa/JpaTransactionManager$JpaTransactionObject/JpaTransactionObject(org.springframework.orm.jpa.JpaTransactionManager,org.springframework.orm.jpa.JpaTransactionManager$1)
org/springframework/orm/jpa/JpaTransactionManager/doGetTransaction()#java/lang/StringBuilder/append(java.lang.String)
org/springframework/orm/jpa/JpaTransactionManager/doGetTransaction()#org/springframework/orm/jpa/JpaTransactionManager$JpaTransactionObject/setConnectionHolder(org.springframework.jdbc.datasource.ConnectionHolder)
org/springframework/orm/jpa/JpaTransactionManager/doGetTransaction()#org/springframework/transaction/support/TransactionSynchronizationManager/getResource(java.lang.Object)
org/springframework/orm/jpa/JpaTransactionManager/doGetTransaction()#org/springframework/orm/jpa/JpaTransactionManager$JpaTransactionObject/setEntityManagerHolder(org.springframework.orm.jpa.EntityManagerHolder,boolean)
org/springframework/orm/jpa/JpaTransactionManager/doGetTransaction()#java/lang/StringBuilder/StringBuilder()
org/springframework/orm/jpa/JpaTransactionManager/doGetTransaction()#java/lang/StringBuilder/append(java.lang.Object)
org/springframework/orm/jpa/JpaTransactionManager/doGetTransaction()#org/springframework/orm/jpa/JpaTransactionManager$JpaTransactionObject/setSavepointAllowed(boolean)
org/springframework/orm/jpa/JpaTransactionManager/doGetTransaction()#java/lang/StringBuilder/toString()
org/springframework/orm/jpa/JpaTransactionManager/doGetTransaction()#org/apache/commons/logging/Log/isDebugEnabled()
org/springframework/orm/jpa/JpaTransactionManager/doGetTransaction()#org/springframework/orm/jpa/JpaTransactionManager/isNestedTransactionAllowed()
org/springframework/orm/jpa/JpaTransactionManager/doSetRollbackOnly(org.springframework.transaction.support.DefaultTransactionStatus)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/springframework/orm/jpa/JpaTransactionManager/doSetRollbackOnly(org.springframework.transaction.support.DefaultTransactionStatus)#java/lang/StringBuilder/append(java.lang.String)
org/springframework/orm/jpa/JpaTransactionManager/doSetRollbackOnly(org.springframework.transaction.support.DefaultTransactionStatus)#org/springframework/transaction/support/DefaultTransactionStatus/getTransaction()
org/springframework/orm/jpa/JpaTransactionManager/doSetRollbackOnly(org.springframework.transaction.support.DefaultTransactionStatus)#org/springframework/orm/jpa/JpaTransactionManager$JpaTransactionObject/getEntityManagerHolder()
org/springframework/orm/jpa/JpaTransactionManager/doSetRollbackOnly(org.springframework.transaction.support.DefaultTransactionStatus)#java/lang/StringBuilder/StringBuilder()
org/springframework/orm/jpa/JpaTransactionManager/doSetRollbackOnly(org.springframework.transaction.support.DefaultTransactionStatus)#java/lang/StringBuilder/append(java.lang.Object)
org/springframework/orm/jpa/JpaTransactionManager/doSetRollbackOnly(org.springframework.transaction.support.DefaultTransactionStatus)#org/springframework/orm/jpa/JpaTransactionManager$JpaTransactionObject/setRollbackOnly()
org/springframework/orm/jpa/JpaTransactionManager/doSetRollbackOnly(org.springframework.transaction.support.DefaultTransactionStatus)#org/springframework/transaction/support/DefaultTransactionStatus/isDebug()
org/springframework/orm/jpa/JpaTransactionManager/doSetRollbackOnly(org.springframework.transaction.support.DefaultTransactionStatus)#java/lang/StringBuilder/toString()
org/springframework/orm/jpa/DefaultJpaDialect/beginTransaction(javax.persistence.EntityManager,org.springframework.transaction.TransactionDefinition)#java/lang/Class/getSimpleName()
org/springframework/orm/jpa/DefaultJpaDialect/beginTransaction(javax.persistence.EntityManager,org.springframework.transaction.TransactionDefinition)#org/springframework/transaction/InvalidIsolationLevelException/InvalidIsolationLevelException(java.lang.String)
org/springframework/orm/jpa/DefaultJpaDialect/beginTransaction(javax.persistence.EntityManager,org.springframework.transaction.TransactionDefinition)#java/lang/StringBuilder/StringBuilder()
org/springframework/orm/jpa/DefaultJpaDialect/beginTransaction(javax.persistence.EntityManager,org.springframework.transaction.TransactionDefinition)#java/lang/Object/getClass()
org/springframework/orm/jpa/DefaultJpaDialect/beginTransaction(javax.persistence.EntityManager,org.springframework.transaction.TransactionDefinition)#java/lang/StringBuilder/toString()
org/springframework/orm/jpa/DefaultJpaDialect/beginTransaction(javax.persistence.EntityManager,org.springframework.transaction.TransactionDefinition)#javax/persistence/EntityTransaction/begin()
org/springframework/orm/jpa/DefaultJpaDialect/beginTransaction(javax.persistence.EntityManager,org.springframework.transaction.TransactionDefinition)#java/lang/StringBuilder/append(java.lang.String)
org/springframework/orm/jpa/DefaultJpaDialect/beginTransaction(javax.persistence.EntityManager,org.springframework.transaction.TransactionDefinition)#javax/persistence/EntityManager/getTransaction()
org/springframework/orm/jpa/DefaultJpaDialect/beginTransaction(javax.persistence.EntityManager,org.springframework.transaction.TransactionDefinition)#org/springframework/transaction/TransactionDefinition/getIsolationLevel()
org/springframework/orm/hibernate3/HibernateTemplate/doExecute(org.springframework.orm.hibernate3.HibernateCallback,boolean,boolean)#org/springframework/orm/hibernate3/HibernateTemplate/convertHibernateAccessException(org.hibernate.HibernateException)
org/springframework/orm/hibernate3/HibernateTemplate/doExecute(org.springframework.orm.hibernate3.HibernateCallback,boolean,boolean)#org/springframework/orm/hibernate3/HibernateTemplate/getSessionFactory()
org/springframework/orm/hibernate3/HibernateTemplate/doExecute(org.springframework.orm.hibernate3.HibernateCallback,boolean,boolean)#org/springframework/orm/hibernate3/HibernateTemplate/disableFilters(org.hibernate.Session)
org/springframework/orm/hibernate3/HibernateTemplate/doExecute(org.springframework.orm.hibernate3.HibernateCallback,boolean,boolean)#org/hibernate/Session/setFlushMode(org.hibernate.FlushMode)
org/springframework/orm/hibernate3/HibernateTemplate/doExecute(org.springframework.orm.hibernate3.HibernateCallback,boolean,boolean)#org/springframework/orm/hibernate3/HibernateTemplate/getEntityInterceptor()
org/springframework/orm/hibernate3/HibernateTemplate/doExecute(org.springframework.orm.hibernate3.HibernateCallback,boolean,boolean)#org/springframework/orm/hibernate3/HibernateTemplate/flushIfNecessary(org.hibernate.Session,boolean)
org/springframework/orm/hibernate3/HibernateTemplate/doExecute(org.springframework.orm.hibernate3.HibernateCallback,boolean,boolean)#org/springframework/util/Assert/notNull(java.lang.Object,java.lang.String)
org/springframework/orm/hibernate3/HibernateTemplate/doExecute(org.springframework.orm.hibernate3.HibernateCallback,boolean,boolean)#org/springframework/orm/hibernate3/HibernateTemplate/convertJdbcAccessException(java.sql.SQLException)
org/springframework/orm/hibernate3/HibernateTemplate/doExecute(org.springframework.orm.hibernate3.HibernateCallback,boolean,boolean)#org/springframework/orm/hibernate3/HibernateTemplate/applyFlushMode(org.hibernate.Session,boolean)
org/springframework/orm/hibernate3/HibernateTemplate/doExecute(org.springframework.orm.hibernate3.HibernateCallback,boolean,boolean)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/springframework/orm/hibernate3/HibernateTemplate/doExecute(org.springframework.orm.hibernate3.HibernateCallback,boolean,boolean)#org/springframework/orm/hibernate3/HibernateTemplate/enableFilters(org.hibernate.Session)
org/springframework/orm/hibernate3/support/IdTransferringMergeEventListener/entityIsTransient(org.hibernate.event.MergeEvent,java.util.Map)#org/hibernate/event/MergeEvent/getEntity()
org/springframework/orm/hibernate3/support/IdTransferringMergeEventListener/entityIsTransient(org.hibernate.event.MergeEvent,java.util.Map)#org/hibernate/event/MergeEvent/getSession()
org/springframework/orm/hibernate3/support/IdTransferringMergeEventListener/entityIsTransient(org.hibernate.event.MergeEvent,java.util.Map)#org/hibernate/persister/entity/EntityPersister/getIdentifier(java.lang.Object,org.hibernate.EntityMode)
org/springframework/orm/hibernate3/support/IdTransferringMergeEventListener/entityIsTransient(org.hibernate.event.MergeEvent,java.util.Map)#org/hibernate/engine/SessionImplementor/getEntityPersister(java.lang.String,java.lang.Object)
org/springframework/orm/hibernate3/support/IdTransferringMergeEventListener/entityIsTransient(org.hibernate.event.MergeEvent,java.util.Map)#org/hibernate/event/MergeEvent/getOriginal()
org/springframework/orm/hibernate3/support/IdTransferringMergeEventListener/entityIsTransient(org.hibernate.event.MergeEvent,java.util.Map)#org/hibernate/persister/entity/EntityPersister/setIdentifier(java.lang.Object,java.io.Serializable,org.hibernate.EntityMode)
org/springframework/orm/hibernate3/support/IdTransferringMergeEventListener/entityIsTransient(org.hibernate.event.MergeEvent,java.util.Map)#org/hibernate/event/MergeEvent/getResult()
org/springframework/orm/hibernate3/support/IdTransferringMergeEventListener/entityIsTransient(org.hibernate.event.MergeEvent,java.util.Map)#org/hibernate/engine/SessionImplementor/getEntityMode()
org/springframework/orm/hibernate3/support/IdTransferringMergeEventListener/entityIsTransient(org.hibernate.event.MergeEvent,java.util.Map)#org/hibernate/event/def/DefaultMergeEventListener/entityIsTransient(org.hibernate.event.MergeEvent,java.util.Map)
org/springframework/orm/hibernate3/support/IdTransferringMergeEventListener/entityIsTransient(org.hibernate.event.MergeEvent,java.util.Map)#org/hibernate/event/MergeEvent/getEntityName()
org/springframework/orm/hibernate3/support/OpenSessionInViewFilter/doFilterInternal(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)#org/springframework/orm/hibernate3/support/OpenSessionInViewFilter/getAlreadyFilteredAttributeName()
org/springframework/orm/hibernate3/support/OpenSessionInViewFilter/doFilterInternal(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)#org/springframework/orm/hibernate3/support/OpenSessionInViewFilter/isAsyncDispatch(javax.servlet.http.HttpServletRequest)
org/springframework/orm/hibernate3/support/OpenSessionInViewFilter/doFilterInternal(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)#org/springframework/transaction/support/TransactionSynchronizationManager/hasResource(java.lang.Object)
org/springframework/orm/hibernate3/support/OpenSessionInViewFilter/doFilterInternal(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)#org/springframework/web/context/request/async/WebAsyncUtils/getAsyncManager(javax.servlet.ServletRequest)
org/springframework/orm/hibernate3/support/OpenSessionInViewFilter/doFilterInternal(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)#org/springframework/util/Assert/state(boolean,java.lang.String)
org/springframework/orm/hibernate3/support/OpenSessionInViewFilter/doFilterInternal(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)#javax/servlet/FilterChain/doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)
org/springframework/orm/hibernate3/support/OpenSessionInViewFilter/doFilterInternal(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/springframework/orm/hibernate3/support/OpenSessionInViewFilter/doFilterInternal(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)#org/springframework/orm/hibernate3/support/OpenSessionInViewFilter/isAsyncStarted(javax.servlet.http.HttpServletRequest)
org/springframework/orm/hibernate3/support/OpenSessionInViewFilter/doFilterInternal(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)#org/springframework/transaction/support/TransactionSynchronizationManager/unbindResource(java.lang.Object)
org/springframework/orm/hibernate3/support/OpenSessionInViewFilter/doFilterInternal(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)#org/springframework/web/context/request/async/WebAsyncManager/registerDeferredResultInterceptor(java.lang.Object,org.springframework.web.context.request.async.DeferredResultProcessingInterceptor)
org/springframework/orm/hibernate3/support/OpenSessionInViewFilter/doFilterInternal(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)#org/springframework/web/context/request/async/WebAsyncManager/registerCallableInterceptor(java.lang.Object,org.springframework.web.context.request.async.CallableProcessingInterceptor)
org/springframework/orm/hibernate3/support/OpenSessionInViewFilter/doFilterInternal(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)#org/springframework/transaction/support/TransactionSynchronizationManager/bindResource(java.lang.Object,java.lang.Object)
org/springframework/orm/hibernate3/FilterDefinitionFactoryBean/setParameterTypes(java.util.Map)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/springframework/orm/hibernate3/FilterDefinitionFactoryBean/setParameterTypes(java.util.Map)#java/util/Iterator/hasNext()
org/springframework/orm/hibernate3/FilterDefinitionFactoryBean/setParameterTypes(java.util.Map)#java/util/Map$Entry/getKey()
org/springframework/orm/hibernate3/FilterDefinitionFactoryBean/setParameterTypes(java.util.Map)#java/util/Map/size()
org/springframework/orm/hibernate3/FilterDefinitionFactoryBean/setParameterTypes(java.util.Map)#org/hibernate/type/TypeResolver/heuristicType(java.lang.String)
org/springframework/orm/hibernate3/FilterDefinitionFactoryBean/setParameterTypes(java.util.Map)#java/util/Map$Entry/getValue()
org/springframework/orm/hibernate3/FilterDefinitionFactoryBean/setParameterTypes(java.util.Map)#java/util/Map/entrySet()
org/springframework/orm/hibernate3/FilterDefinitionFactoryBean/setParameterTypes(java.util.Map)#java/util/Iterator/next()
org/springframework/orm/hibernate3/FilterDefinitionFactoryBean/setParameterTypes(java.util.Map)#java/util/HashMap/HashMap()
org/springframework/orm/hibernate3/FilterDefinitionFactoryBean/setParameterTypes(java.util.Map)#java/util/HashMap/HashMap(int)
org/springframework/orm/hibernate3/FilterDefinitionFactoryBean/setParameterTypes(java.util.Map)#java/util/Set/iterator()
org/springframework/orm/hibernate3/LocalSessionFactoryBean/buildSessionFactory()#java/lang/ThreadLocal/remove()
org/springframework/orm/hibernate3/LocalSessionFactoryBean/buildSessionFactory()#org/hibernate/cfg/Configuration/setNamingStrategy(org.hibernate.cfg.NamingStrategy)
org/springframework/orm/hibernate3/LocalSessionFactoryBean/buildSessionFactory()#org/hibernate/cfg/Configuration/getEventListeners()
org/springframework/orm/hibernate3/LocalSessionFactoryBean/buildSessionFactory()#java/lang/Thread/currentThread()
org/springframework/orm/hibernate3/LocalSessionFactoryBean/buildSessionFactory()#java/util/Collection/size()
org/springframework/orm/hibernate3/LocalSessionFactoryBean/buildSessionFactory()#java/util/Iterator/next()
org/springframework/orm/hibernate3/LocalSessionFactoryBean/buildSessionFactory()#org/hibernate/cfg/Configuration/setProperty(java.lang.String,java.lang.String)
org/springframework/orm/hibernate3/LocalSessionFactoryBean/buildSessionFactory()#org/hibernate/cfg/Configuration/getProperty(java.lang.String)
org/springframework/orm/hibernate3/LocalSessionFactoryBean/buildSessionFactory()#org/springframework/core/io/ClassPathResource/ClassPathResource(java.lang.String,java.lang.ClassLoader)
org/springframework/orm/hibernate3/LocalSessionFactoryBean/buildSessionFactory()#java/lang/Thread/getContextClassLoader()
org/springframework/orm/hibernate3/LocalSessionFactoryBean/buildSessionFactory()#org/springframework/orm/hibernate3/LocalSessionFactoryBean/isUseTransactionAwareDataSource()
org/springframework/orm/hibernate3/LocalSessionFactoryBean/buildSessionFactory()#java/lang/StringBuilder/toString()
org/springframework/orm/hibernate3/LocalSessionFactoryBean/buildSessionFactory()#org/hibernate/cfg/Configuration/buildMappings()
org/springframework/orm/hibernate3/LocalSessionFactoryBean/buildSessionFactory()#org/hibernate/event/EventListeners/getListenerClassFor(java.lang.String)
org/springframework/orm/hibernate3/LocalSessionFactoryBean/buildSessionFactory()#org/hibernate/cfg/Configuration/configure(java.net.URL)
org/springframework/orm/hibernate3/LocalSessionFactoryBean/buildSessionFactory()#java/lang/Object/equals(java.lang.Object)
org/springframework/orm/hibernate3/LocalSessionFactoryBean/buildSessionFactory()#org/hibernate/cfg/Configuration/setCacheConcurrencyStrategy(java.lang.String,java.lang.String)
org/springframework/orm/hibernate3/LocalSessionFactoryBean/buildSessionFactory()#java/util/Properties/getProperty(java.lang.String)
org/springframework/orm/hibernate3/LocalSessionFactoryBean/buildSessionFactory()#org/hibernate/cfg/Configuration/addCacheableFile(java.io.File)
org/springframework/orm/hibernate3/LocalSessionFactoryBean/buildSessionFactory()#java/util/Iterator/hasNext()
org/springframework/orm/hibernate3/LocalSessionFactoryBean/buildSessionFactory()#java/io/File/isDirectory()
org/springframework/orm/hibernate3/LocalSessionFactoryBean/buildSessionFactory()#org/hibernate/cfg/Configuration/setListener(java.lang.String,java.lang.Object)
org/springframework/orm/hibernate3/LocalSessionFactoryBean/buildSessionFactory()#org/hibernate/cfg/Configuration/setCollectionCacheConcurrencyStrategy(java.lang.String,java.lang.String)
org/springframework/orm/hibernate3/LocalSessionFactoryBean/buildSessionFactory()#org/hibernate/cfg/Configuration/createMappings()
org/springframework/orm/hibernate3/LocalSessionFactoryBean/buildSessionFactory()#org/hibernate/cfg/Configuration/setListeners(java.lang.String,java.lang.Object[])
org/springframework/orm/hibernate3/LocalSessionFactoryBean/buildSessionFactory()#java/lang/StringBuilder/append(java.lang.String)
org/springframework/orm/hibernate3/LocalSessionFactoryBean/buildSessionFactory()#java/util/Map$Entry/getKey()
org/springframework/orm/hibernate3/LocalSessionFactoryBean/buildSessionFactory()#java/lang/String/trim()
org/springframework/orm/hibernate3/LocalSessionFactoryBean/buildSessionFactory()#org/hibernate/cfg/Configuration/addJar(java.io.File)
org/springframework/orm/hibernate3/LocalSessionFactoryBean/buildSessionFactory()#java/lang/Thread/setContextClassLoader(java.lang.ClassLoader)
org/springframework/orm/hibernate3/LocalSessionFactoryBean/buildSessionFactory()#java/lang/ThreadLocal/set(java.lang.Object)
org/springframework/orm/hibernate3/LocalSessionFactoryBean/buildSessionFactory()#org/hibernate/cfg/Configuration/addInputStream(java.io.InputStream)
org/springframework/orm/hibernate3/LocalSessionFactoryBean/buildSessionFactory()#java/lang/reflect/Array/newInstance(java.lang.Class,int)
org/springframework/orm/hibernate3/LocalSessionFactoryBean/buildSessionFactory()#org/hibernate/cfg/Mappings/addTypeDef(java.lang.String,java.lang.String,java.util.Properties)
org/springframework/orm/hibernate3/LocalSessionFactoryBean/buildSessionFactory()#org/springframework/util/StringUtils/commaDelimitedListToStringArray(java.lang.String)
org/springframework/orm/hibernate3/LocalSessionFactoryBean/buildSessionFactory()#org/springframework/core/io/Resource/getFile()
org/springframework/orm/hibernate3/LocalSessionFactoryBean/buildSessionFactory()#org/springframework/core/io/Resource/getInputStream()
org/springframework/orm/hibernate3/LocalSessionFactoryBean/buildSessionFactory()#org/apache/commons/logging/Log/info(java.lang.Object)
org/springframework/orm/hibernate3/LocalSessionFactoryBean/buildSessionFactory()#org/hibernate/cfg/Configuration/setCollectionCacheConcurrencyStrategy(java.lang.String,java.lang.String,java.lang.String)
org/springframework/orm/hibernate3/LocalSessionFactoryBean/buildSessionFactory()#org/hibernate/cfg/Configuration/addProperties(java.util.Properties)
org/springframework/orm/hibernate3/LocalSessionFactoryBean/buildSessionFactory()#java/util/Properties/propertyNames()
org/springframework/orm/hibernate3/LocalSessionFactoryBean/buildSessionFactory()#org/hibernate/cfg/Configuration/setCacheConcurrencyStrategy(java.lang.String,java.lang.String,java.lang.String)
org/springframework/orm/hibernate3/LocalSessionFactoryBean/buildSessionFactory()#java/util/Collection/toArray(java.lang.Object[])
org/springframework/orm/hibernate3/LocalSessionFactoryBean/buildSessionFactory()#java/lang/Class/getName()
org/springframework/orm/hibernate3/LocalSessionFactoryBean/buildSessionFactory()#java/lang/StringBuilder/StringBuilder()
org/springframework/orm/hibernate3/LocalSessionFactoryBean/buildSessionFactory()#org/springframework/core/io/Resource/getURL()
org/springframework/orm/hibernate3/LocalSessionFactoryBean/buildSessionFactory()#org/springframework/orm/hibernate3/LocalSessionFactoryBean/getDataSource()
org/springframework/orm/hibernate3/LocalSessionFactoryBean/buildSessionFactory()#java/util/Set/iterator()
org/springframework/orm/hibernate3/LocalSessionFactoryBean/buildSessionFactory()#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/springframework/orm/hibernate3/LocalSessionFactoryBean/buildSessionFactory()#org/hibernate/cfg/Configuration/addFilterDefinition(org.hibernate.engine.FilterDefinition)
org/springframework/orm/hibernate3/LocalSessionFactoryBean/buildSessionFactory()#java/lang/StringBuilder/append(java.lang.Object)
org/springframework/orm/hibernate3/LocalSessionFactoryBean/buildSessionFactory()#org/hibernate/cfg/Configuration/addDirectory(java.io.File)
org/springframework/orm/hibernate3/LocalSessionFactoryBean/buildSessionFactory()#java/util/Map$Entry/getValue()
org/springframework/orm/hibernate3/LocalSessionFactoryBean/buildSessionFactory()#java/util/Enumeration/hasMoreElements()
org/springframework/orm/hibernate3/LocalSessionFactoryBean/buildSessionFactory()#java/util/Map/entrySet()
org/springframework/orm/hibernate3/LocalSessionFactoryBean/buildSessionFactory()#java/util/Enumeration/nextElement()
org/springframework/orm/hibernate3/LocalSessionFactoryBean/buildSessionFactory()#org/hibernate/cfg/Configuration/setInterceptor(org.hibernate.Interceptor)
org/springframework/orm/hibernate3/LocalSessionFactoryBean/buildSessionFactory()#org/springframework/orm/hibernate3/LocalSessionFactoryBean/isExposeTransactionAwareSessionFactory()
org/springframework/orm/hibernate4/support/OpenSessionInViewFilter/doFilterInternal(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)#org/springframework/orm/hibernate4/support/OpenSessionInViewFilter/isAsyncStarted(javax.servlet.http.HttpServletRequest)
org/springframework/orm/hibernate4/support/OpenSessionInViewFilter/doFilterInternal(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)#org/springframework/transaction/support/TransactionSynchronizationManager/hasResource(java.lang.Object)
org/springframework/orm/hibernate4/support/OpenSessionInViewFilter/doFilterInternal(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)#org/springframework/transaction/support/TransactionSynchronizationManager/bindResource(java.lang.Object,java.lang.Object)
org/springframework/orm/hibernate4/support/OpenSessionInViewFilter/doFilterInternal(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)#org/springframework/web/context/request/async/WebAsyncUtils/getAsyncManager(javax.servlet.ServletRequest)
org/springframework/orm/hibernate4/support/OpenSessionInViewFilter/doFilterInternal(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)#javax/servlet/FilterChain/doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)
org/springframework/orm/hibernate4/support/OpenSessionInViewFilter/doFilterInternal(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/springframework/orm/hibernate4/support/OpenSessionInViewFilter/doFilterInternal(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)#org/springframework/orm/hibernate4/support/OpenSessionInViewFilter/getAlreadyFilteredAttributeName()
org/springframework/orm/hibernate4/support/OpenSessionInViewFilter/doFilterInternal(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)#org/springframework/transaction/support/TransactionSynchronizationManager/unbindResource(java.lang.Object)
org/springframework/orm/hibernate4/support/OpenSessionInViewFilter/doFilterInternal(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)#org/springframework/orm/hibernate4/support/OpenSessionInViewFilter/isAsyncDispatch(javax.servlet.http.HttpServletRequest)
org/springframework/orm/hibernate4/support/OpenSessionInViewFilter/doFilterInternal(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)#org/springframework/web/context/request/async/WebAsyncManager/registerDeferredResultInterceptor(java.lang.Object,org.springframework.web.context.request.async.DeferredResultProcessingInterceptor)
org/springframework/orm/hibernate4/support/OpenSessionInViewFilter/doFilterInternal(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)#org/springframework/web/context/request/async/WebAsyncManager/registerCallableInterceptor(java.lang.Object,org.springframework.web.context.request.async.CallableProcessingInterceptor)
org/springframework/orm/hibernate4/LocalSessionFactoryBean/afterPropertiesSet()#org/springframework/orm/hibernate4/LocalSessionFactoryBuilder/addInputStream(java.io.InputStream)
org/springframework/orm/hibernate4/LocalSessionFactoryBean/afterPropertiesSet()#org/springframework/orm/hibernate4/LocalSessionFactoryBuilder/addDirectory(java.io.File)
org/springframework/orm/hibernate4/LocalSessionFactoryBean/afterPropertiesSet()#org/springframework/orm/hibernate4/LocalSessionFactoryBuilder/addJar(java.io.File)
org/springframework/orm/hibernate4/LocalSessionFactoryBean/afterPropertiesSet()#org/springframework/orm/hibernate4/LocalSessionFactoryBuilder/setInterceptor(org.hibernate.Interceptor)
org/springframework/orm/hibernate4/LocalSessionFactoryBean/afterPropertiesSet()#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/springframework/orm/hibernate4/LocalSessionFactoryBean/afterPropertiesSet()#org/springframework/orm/hibernate4/LocalSessionFactoryBuilder/configure(java.net.URL)
org/springframework/orm/hibernate4/LocalSessionFactoryBean/afterPropertiesSet()#java/io/File/isDirectory()
org/springframework/orm/hibernate4/LocalSessionFactoryBean/afterPropertiesSet()#java/lang/StringBuilder/append(java.lang.String)
org/springframework/orm/hibernate4/LocalSessionFactoryBean/afterPropertiesSet()#java/lang/String/trim()
org/springframework/orm/hibernate4/LocalSessionFactoryBean/afterPropertiesSet()#org/springframework/orm/hibernate4/LocalSessionFactoryBuilder/addProperties(java.util.Properties)
org/springframework/orm/hibernate4/LocalSessionFactoryBean/afterPropertiesSet()#org/springframework/orm/hibernate4/LocalSessionFactoryBuilder/addCacheableFile(java.io.File)
org/springframework/orm/hibernate4/LocalSessionFactoryBean/afterPropertiesSet()#org/springframework/core/io/Resource/getFile()
org/springframework/orm/hibernate4/LocalSessionFactoryBean/afterPropertiesSet()#org/springframework/core/io/Resource/getInputStream()
org/springframework/orm/hibernate4/LocalSessionFactoryBean/afterPropertiesSet()#java/lang/StringBuilder/StringBuilder()
org/springframework/orm/hibernate4/LocalSessionFactoryBean/afterPropertiesSet()#org/springframework/core/io/Resource/getURL()
org/springframework/orm/hibernate4/LocalSessionFactoryBean/afterPropertiesSet()#org/springframework/core/io/ClassPathResource/ClassPathResource(java.lang.String,java.lang.ClassLoader)
org/springframework/orm/hibernate4/LocalSessionFactoryBean/afterPropertiesSet()#org/springframework/core/io/support/ResourcePatternResolver/getClassLoader()
org/springframework/orm/hibernate4/LocalSessionFactoryBean/afterPropertiesSet()#java/lang/StringBuilder/append(java.lang.Object)
org/springframework/orm/hibernate4/LocalSessionFactoryBean/afterPropertiesSet()#org/springframework/orm/hibernate4/LocalSessionFactoryBuilder/setNamingStrategy(org.hibernate.cfg.NamingStrategy)
org/springframework/orm/hibernate4/LocalSessionFactoryBean/afterPropertiesSet()#java/lang/StringBuilder/toString()
org/springframework/orm/hibernate4/support/OpenSessionInViewInterceptor/preHandle(org.springframework.web.context.request.WebRequest)#java/lang/Integer/intValue()
org/springframework/orm/hibernate4/support/OpenSessionInViewInterceptor/preHandle(org.springframework.web.context.request.WebRequest)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/springframework/orm/hibernate4/support/OpenSessionInViewInterceptor/preHandle(org.springframework.web.context.request.WebRequest)#org/springframework/web/context/request/WebRequest/setAttribute(java.lang.String,java.lang.Object,int)
org/springframework/orm/hibernate4/support/OpenSessionInViewInterceptor/preHandle(org.springframework.web.context.request.WebRequest)#org/springframework/web/context/request/async/WebAsyncManager/hasConcurrentResult()
org/springframework/orm/hibernate4/support/OpenSessionInViewInterceptor/preHandle(org.springframework.web.context.request.WebRequest)#org/springframework/web/context/request/async/WebAsyncUtils/getAsyncManager(org.springframework.web.context.request.WebRequest)
org/springframework/orm/hibernate4/support/OpenSessionInViewInterceptor/preHandle(org.springframework.web.context.request.WebRequest)#org/springframework/transaction/support/TransactionSynchronizationManager/hasResource(java.lang.Object)
org/springframework/orm/hibernate4/support/OpenSessionInViewInterceptor/preHandle(org.springframework.web.context.request.WebRequest)#org/springframework/transaction/support/TransactionSynchronizationManager/bindResource(java.lang.Object,java.lang.Object)
org/springframework/orm/hibernate4/support/OpenSessionInViewInterceptor/preHandle(org.springframework.web.context.request.WebRequest)#java/lang/Integer/valueOf(int)
org/springframework/orm/hibernate4/support/OpenSessionInViewInterceptor/preHandle(org.springframework.web.context.request.WebRequest)#org/springframework/web/context/request/WebRequest/getAttribute(java.lang.String,int)
org/springframework/orm/hibernate4/support/OpenSessionInViewInterceptor/preHandle(org.springframework.web.context.request.WebRequest)#org/springframework/web/context/request/async/WebAsyncManager/registerDeferredResultInterceptor(java.lang.Object,org.springframework.web.context.request.async.DeferredResultProcessingInterceptor)
org/springframework/orm/hibernate4/support/OpenSessionInViewInterceptor/preHandle(org.springframework.web.context.request.WebRequest)#org/springframework/web/context/request/async/WebAsyncManager/registerCallableInterceptor(java.lang.Object,org.springframework.web.context.request.async.CallableProcessingInterceptor)
org/springframework/orm/jpa/EntityManagerFactoryUtils/doGetTransactionalEntityManager(javax.persistence.EntityManagerFactory,java.util.Map,boolean)#org/springframework/transaction/support/TransactionSynchronizationManager/registerSynchronization(org.springframework.transaction.support.TransactionSynchronization)
org/springframework/orm/jpa/EntityManagerFactoryUtils/doGetTransactionalEntityManager(javax.persistence.EntityManagerFactory,java.util.Map,boolean)#org/springframework/orm/jpa/EntityManagerHolder/setSynchronizedWithTransaction(boolean)
org/springframework/orm/jpa/EntityManagerFactoryUtils/doGetTransactionalEntityManager(javax.persistence.EntityManagerFactory,java.util.Map,boolean)#javax/persistence/EntityManagerFactory/createEntityManager(java.util.Map)
org/springframework/orm/jpa/EntityManagerFactoryUtils/doGetTransactionalEntityManager(javax.persistence.EntityManagerFactory,java.util.Map,boolean)#org/springframework/orm/jpa/EntityManagerFactoryUtils$TransactionScopedEntityManagerSynchronization/TransactionScopedEntityManagerSynchronization(org.springframework.orm.jpa.EntityManagerHolder,javax.persistence.EntityManagerFactory)
org/springframework/orm/jpa/EntityManagerFactoryUtils/doGetTransactionalEntityManager(javax.persistence.EntityManagerFactory,java.util.Map,boolean)#org/springframework/util/CollectionUtils/isEmpty(java.util.Map)
org/springframework/orm/jpa/EntityManagerFactoryUtils/doGetTransactionalEntityManager(javax.persistence.EntityManagerFactory,java.util.Map,boolean)#javax/persistence/EntityManagerFactory/createEntityManager()
org/springframework/orm/jpa/EntityManagerFactoryUtils/doGetTransactionalEntityManager(javax.persistence.EntityManagerFactory,java.util.Map,boolean)#javax/persistence/EntityManager/joinTransaction()
org/springframework/orm/jpa/EntityManagerFactoryUtils/doGetTransactionalEntityManager(javax.persistence.EntityManagerFactory,java.util.Map,boolean)#org/apache/commons/logging/Log/debug(java.lang.Object,java.lang.Throwable)
org/springframework/orm/jpa/EntityManagerFactoryUtils/doGetTransactionalEntityManager(javax.persistence.EntityManagerFactory,java.util.Map,boolean)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/springframework/orm/jpa/EntityManagerFactoryUtils/doGetTransactionalEntityManager(javax.persistence.EntityManagerFactory,java.util.Map,boolean)#org/springframework/transaction/support/TransactionSynchronizationManager/unbindResource(java.lang.Object)
org/springframework/orm/jpa/EntityManagerFactoryUtils/doGetTransactionalEntityManager(javax.persistence.EntityManagerFactory,java.util.Map,boolean)#org/springframework/orm/jpa/EntityManagerHolder/isOpen()
org/springframework/orm/jpa/EntityManagerFactoryUtils/doGetTransactionalEntityManager(javax.persistence.EntityManagerFactory,java.util.Map,boolean)#org/springframework/orm/jpa/EntityManagerHolder/requested()
org/springframework/orm/jpa/EntityManagerFactoryUtils/doGetTransactionalEntityManager(javax.persistence.EntityManagerFactory,java.util.Map,boolean)#org/springframework/transaction/support/TransactionSynchronizationManager/getResource(java.lang.Object)
org/springframework/orm/jpa/EntityManagerFactoryUtils/doGetTransactionalEntityManager(javax.persistence.EntityManagerFactory,java.util.Map,boolean)#org/springframework/util/Assert/notNull(java.lang.Object,java.lang.String)
org/springframework/orm/jpa/EntityManagerFactoryUtils/doGetTransactionalEntityManager(javax.persistence.EntityManagerFactory,java.util.Map,boolean)#org/springframework/orm/jpa/EntityManagerFactoryUtils$TransactionalEntityManagerSynchronization/TransactionalEntityManagerSynchronization(org.springframework.orm.jpa.EntityManagerHolder,javax.persistence.EntityManagerFactory,java.lang.Object,boolean)
org/springframework/orm/jpa/EntityManagerFactoryUtils/doGetTransactionalEntityManager(javax.persistence.EntityManagerFactory,java.util.Map,boolean)#org/springframework/transaction/support/TransactionSynchronizationManager/bindResource(java.lang.Object,java.lang.Object)
org/springframework/orm/jpa/EntityManagerFactoryUtils/doGetTransactionalEntityManager(javax.persistence.EntityManagerFactory,java.util.Map,boolean)#org/springframework/util/ReflectionUtils/invokeMethod(java.lang.reflect.Method,java.lang.Object,java.lang.Object[])
org/springframework/orm/jpa/EntityManagerFactoryUtils/doGetTransactionalEntityManager(javax.persistence.EntityManagerFactory,java.util.Map,boolean)#org/springframework/transaction/support/TransactionSynchronizationManager/isSynchronizationActive()
org/springframework/orm/jpa/EntityManagerFactoryUtils/doGetTransactionalEntityManager(javax.persistence.EntityManagerFactory,java.util.Map,boolean)#org/springframework/orm/jpa/EntityManagerHolder/isSynchronizedWithTransaction()
org/springframework/orm/hibernate3/support/OpenSessionInViewInterceptor/preHandle(org.springframework.web.context.request.WebRequest)#java/lang/Integer/intValue()
org/springframework/orm/hibernate3/support/OpenSessionInViewInterceptor/preHandle(org.springframework.web.context.request.WebRequest)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/springframework/orm/hibernate3/support/OpenSessionInViewInterceptor/preHandle(org.springframework.web.context.request.WebRequest)#org/springframework/web/context/request/async/WebAsyncManager/hasConcurrentResult()
org/springframework/orm/hibernate3/support/OpenSessionInViewInterceptor/preHandle(org.springframework.web.context.request.WebRequest)#org/springframework/web/context/request/WebRequest/getAttribute(java.lang.String,int)
org/springframework/orm/hibernate3/support/OpenSessionInViewInterceptor/preHandle(org.springframework.web.context.request.WebRequest)#org/springframework/orm/hibernate3/support/OpenSessionInViewInterceptor/getJdbcExceptionTranslator()
org/springframework/orm/hibernate3/support/OpenSessionInViewInterceptor/preHandle(org.springframework.web.context.request.WebRequest)#org/springframework/transaction/support/TransactionSynchronizationManager/hasResource(java.lang.Object)
org/springframework/orm/hibernate3/support/OpenSessionInViewInterceptor/preHandle(org.springframework.web.context.request.WebRequest)#java/lang/Integer/valueOf(int)
org/springframework/orm/hibernate3/support/OpenSessionInViewInterceptor/preHandle(org.springframework.web.context.request.WebRequest)#org/springframework/web/context/request/WebRequest/setAttribute(java.lang.String,java.lang.Object,int)
org/springframework/orm/hibernate3/support/OpenSessionInViewInterceptor/preHandle(org.springframework.web.context.request.WebRequest)#org/springframework/orm/hibernate3/support/OpenSessionInViewInterceptor/getEntityInterceptor()
org/springframework/orm/hibernate3/support/OpenSessionInViewInterceptor/preHandle(org.springframework.web.context.request.WebRequest)#org/springframework/orm/hibernate3/support/OpenSessionInViewInterceptor/getSessionFactory()
org/springframework/orm/hibernate3/support/OpenSessionInViewInterceptor/preHandle(org.springframework.web.context.request.WebRequest)#org/springframework/orm/hibernate3/support/OpenSessionInViewInterceptor/applyFlushMode(org.hibernate.Session,boolean)
org/springframework/orm/hibernate3/support/OpenSessionInViewInterceptor/preHandle(org.springframework.web.context.request.WebRequest)#org/springframework/web/context/request/async/WebAsyncUtils/getAsyncManager(org.springframework.web.context.request.WebRequest)
org/springframework/orm/hibernate3/support/OpenSessionInViewInterceptor/preHandle(org.springframework.web.context.request.WebRequest)#org/springframework/web/context/request/async/WebAsyncManager/registerDeferredResultInterceptor(java.lang.Object,org.springframework.web.context.request.async.DeferredResultProcessingInterceptor)
org/springframework/orm/hibernate3/support/OpenSessionInViewInterceptor/preHandle(org.springframework.web.context.request.WebRequest)#org/springframework/web/context/request/async/WebAsyncManager/registerCallableInterceptor(java.lang.Object,org.springframework.web.context.request.async.CallableProcessingInterceptor)
org/springframework/orm/hibernate3/support/OpenSessionInViewInterceptor/preHandle(org.springframework.web.context.request.WebRequest)#org/springframework/transaction/support/TransactionSynchronizationManager/bindResource(java.lang.Object,java.lang.Object)
org/springframework/orm/hibernate3/annotation/AnnotationSessionFactoryBean/scanPackages(org.hibernate.cfg.Configuration)#org/springframework/core/type/classreading/CachingMetadataReaderFactory/CachingMetadataReaderFactory(org.springframework.core.io.ResourceLoader)
org/springframework/orm/hibernate3/annotation/AnnotationSessionFactoryBean/scanPackages(org.hibernate.cfg.Configuration)#java/lang/StringBuilder/append(java.lang.String)
org/springframework/orm/hibernate3/annotation/AnnotationSessionFactoryBean/scanPackages(org.hibernate.cfg.Configuration)#java/lang/String/length()
org/springframework/orm/hibernate3/annotation/AnnotationSessionFactoryBean/scanPackages(org.hibernate.cfg.Configuration)#org/springframework/core/io/support/ResourcePatternResolver/getResources(java.lang.String)
org/springframework/orm/hibernate3/annotation/AnnotationSessionFactoryBean/scanPackages(org.hibernate.cfg.Configuration)#java/lang/String/substring(int,int)
org/springframework/orm/hibernate3/annotation/AnnotationSessionFactoryBean/scanPackages(org.hibernate.cfg.Configuration)#java/lang/StringBuilder/StringBuilder()
org/springframework/orm/hibernate3/annotation/AnnotationSessionFactoryBean/scanPackages(org.hibernate.cfg.Configuration)#org/springframework/core/io/support/ResourcePatternResolver/getClassLoader()
org/springframework/orm/hibernate3/annotation/AnnotationSessionFactoryBean/scanPackages(org.hibernate.cfg.Configuration)#org/springframework/core/type/classreading/MetadataReader/getClassMetadata()
org/springframework/orm/hibernate3/annotation/AnnotationSessionFactoryBean/scanPackages(org.hibernate.cfg.Configuration)#java/util/TreeSet/TreeSet()
org/springframework/orm/hibernate3/annotation/AnnotationSessionFactoryBean/scanPackages(org.hibernate.cfg.Configuration)#org/hibernate/MappingException/MappingException(java.lang.String,java.lang.Throwable)
org/springframework/orm/hibernate3/annotation/AnnotationSessionFactoryBean/scanPackages(org.hibernate.cfg.Configuration)#org/springframework/util/ClassUtils/convertClassNameToResourcePath(java.lang.String)
org/springframework/orm/hibernate3/annotation/AnnotationSessionFactoryBean/scanPackages(org.hibernate.cfg.Configuration)#java/util/Iterator/hasNext()
org/springframework/orm/hibernate3/annotation/AnnotationSessionFactoryBean/scanPackages(org.hibernate.cfg.Configuration)#org/hibernate/cfg/Configuration/addPackage(java.lang.String)
org/springframework/orm/hibernate3/annotation/AnnotationSessionFactoryBean/scanPackages(org.hibernate.cfg.Configuration)#java/util/Iterator/next()
org/springframework/orm/hibernate3/annotation/AnnotationSessionFactoryBean/scanPackages(org.hibernate.cfg.Configuration)#org/springframework/core/type/classreading/MetadataReaderFactory/getMetadataReader(org.springframework.core.io.Resource)
org/springframework/orm/hibernate3/annotation/AnnotationSessionFactoryBean/scanPackages(org.hibernate.cfg.Configuration)#org/hibernate/cfg/Configuration/addAnnotatedClass(java.lang.Class)
org/springframework/orm/hibernate3/annotation/AnnotationSessionFactoryBean/scanPackages(org.hibernate.cfg.Configuration)#java/lang/ClassLoader/loadClass(java.lang.String)
org/springframework/orm/hibernate3/annotation/AnnotationSessionFactoryBean/scanPackages(org.hibernate.cfg.Configuration)#org/springframework/core/io/Resource/isReadable()
org/springframework/orm/hibernate3/annotation/AnnotationSessionFactoryBean/scanPackages(org.hibernate.cfg.Configuration)#java/util/Set/iterator()
org/springframework/orm/hibernate3/annotation/AnnotationSessionFactoryBean/scanPackages(org.hibernate.cfg.Configuration)#java/util/Set/add(java.lang.Object)
org/springframework/orm/hibernate3/annotation/AnnotationSessionFactoryBean/scanPackages(org.hibernate.cfg.Configuration)#org/springframework/core/type/ClassMetadata/getClassName()
org/springframework/orm/hibernate3/annotation/AnnotationSessionFactoryBean/scanPackages(org.hibernate.cfg.Configuration)#java/lang/StringBuilder/toString()
org/springframework/orm/hibernate3/annotation/AnnotationSessionFactoryBean/scanPackages(org.hibernate.cfg.Configuration)#java/lang/String/endsWith(java.lang.String)
org/springframework/orm/jpa/AbstractEntityManagerFactoryBean/createEntityManagerFactoryProxy(javax.persistence.EntityManagerFactory)#java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)
org/springframework/orm/jpa/AbstractEntityManagerFactoryBean/createEntityManagerFactoryProxy(javax.persistence.EntityManagerFactory)#java/util/Set/addAll(java.util.Collection)
org/springframework/orm/jpa/AbstractEntityManagerFactoryBean/createEntityManagerFactoryProxy(javax.persistence.EntityManagerFactory)#java/util/LinkedHashSet/LinkedHashSet()
org/springframework/orm/jpa/AbstractEntityManagerFactoryBean/createEntityManagerFactoryProxy(javax.persistence.EntityManagerFactory)#org/springframework/orm/jpa/AbstractEntityManagerFactoryBean$ManagedEntityManagerFactoryInvocationHandler/ManagedEntityManagerFactoryInvocationHandler(org.springframework.orm.jpa.AbstractEntityManagerFactoryBean)
org/springframework/orm/jpa/AbstractEntityManagerFactoryBean/createEntityManagerFactoryProxy(javax.persistence.EntityManagerFactory)#org/springframework/util/ClassUtils/getAllInterfacesForClassAsSet(java.lang.Class,java.lang.ClassLoader)
org/springframework/orm/jpa/AbstractEntityManagerFactoryBean/createEntityManagerFactoryProxy(javax.persistence.EntityManagerFactory)#java/lang/StringBuilder/StringBuilder()
org/springframework/orm/jpa/AbstractEntityManagerFactoryBean/createEntityManagerFactoryProxy(javax.persistence.EntityManagerFactory)#java/util/Set/toArray(java.lang.Object[])
org/springframework/orm/jpa/AbstractEntityManagerFactoryBean/createEntityManagerFactoryProxy(javax.persistence.EntityManagerFactory)#java/util/Set/add(java.lang.Object)
org/springframework/orm/jpa/AbstractEntityManagerFactoryBean/createEntityManagerFactoryProxy(javax.persistence.EntityManagerFactory)#java/lang/StringBuilder/toString()
org/springframework/orm/jpa/AbstractEntityManagerFactoryBean/createEntityManagerFactoryProxy(javax.persistence.EntityManagerFactory)#java/util/Set/size()
org/springframework/orm/jpa/AbstractEntityManagerFactoryBean/createEntityManagerFactoryProxy(javax.persistence.EntityManagerFactory)#java/lang/reflect/Proxy/newProxyInstance(java.lang.ClassLoader,java.lang.Class[],java.lang.reflect.InvocationHandler)
org/springframework/orm/jpa/AbstractEntityManagerFactoryBean/createEntityManagerFactoryProxy(javax.persistence.EntityManagerFactory)#java/lang/StringBuilder/append(java.lang.String)
org/springframework/orm/jpa/AbstractEntityManagerFactoryBean/createEntityManagerFactoryProxy(javax.persistence.EntityManagerFactory)#java/lang/StringBuilder/append(java.lang.Object)
org/springframework/orm/jpa/AbstractEntityManagerFactoryBean/createEntityManagerFactoryProxy(javax.persistence.EntityManagerFactory)#java/lang/Object/getClass()
org/springframework/orm/jpa/AbstractEntityManagerFactoryBean/afterPropertiesSet()#java/util/Map/put(java.lang.Object,java.lang.Object)
org/springframework/orm/jpa/AbstractEntityManagerFactoryBean/afterPropertiesSet()#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/springframework/orm/jpa/AbstractEntityManagerFactoryBean/afterPropertiesSet()#org/springframework/util/ClassUtils/isVisible(java.lang.Class,java.lang.ClassLoader)
org/springframework/orm/jpa/AbstractEntityManagerFactoryBean/afterPropertiesSet()#java/util/Iterator/hasNext()
org/springframework/orm/jpa/AbstractEntityManagerFactoryBean/afterPropertiesSet()#java/util/Map$Entry/getKey()
org/springframework/orm/jpa/AbstractEntityManagerFactoryBean/afterPropertiesSet()#java/util/Iterator/next()
org/springframework/orm/jpa/AbstractEntityManagerFactoryBean/afterPropertiesSet()#java/util/Set/iterator()
org/springframework/orm/jpa/AbstractEntityManagerFactoryBean/afterPropertiesSet()#java/util/Map/containsKey(java.lang.Object)
org/springframework/orm/jpa/AbstractEntityManagerFactoryBean/afterPropertiesSet()#java/util/Map/entrySet()
org/springframework/orm/jpa/AbstractEntityManagerFactoryBean/afterPropertiesSet()#java/util/Map$Entry/getValue()
org/springframework/orm/jpa/AbstractEntityManagerFactoryBean/invokeProxyMethod(java.lang.reflect.Method,java.lang.Object[])#java/lang/Class/isAssignableFrom(java.lang.Class)
org/springframework/orm/jpa/AbstractEntityManagerFactoryBean/invokeProxyMethod(java.lang.reflect.Method,java.lang.Object[])#javax/persistence/EntityManagerFactory/createEntityManager()
org/springframework/orm/jpa/AbstractEntityManagerFactoryBean/invokeProxyMethod(java.lang.reflect.Method,java.lang.Object[])#java/lang/Object/toString()
org/springframework/orm/jpa/AbstractEntityManagerFactoryBean/invokeProxyMethod(java.lang.reflect.Method,java.lang.Object[])#javax/persistence/EntityManagerFactory/createEntityManager(java.util.Map)
org/springframework/orm/jpa/AbstractEntityManagerFactoryBean/invokeProxyMethod(java.lang.reflect.Method,java.lang.Object[])#java/lang/Class/isEnum()
org/springframework/orm/jpa/AbstractEntityManagerFactoryBean/invokeProxyMethod(java.lang.reflect.Method,java.lang.Object[])#java/lang/String/equals(java.lang.Object)
org/springframework/orm/jpa/AbstractEntityManagerFactoryBean/invokeProxyMethod(java.lang.reflect.Method,java.lang.Object[])#java/lang/reflect/Method/getName()
org/springframework/orm/jpa/AbstractEntityManagerFactoryBean/invokeProxyMethod(java.lang.reflect.Method,java.lang.Object[])#java/lang/reflect/Method/getDeclaringClass()
org/springframework/orm/jpa/AbstractEntityManagerFactoryBean/invokeProxyMethod(java.lang.reflect.Method,java.lang.Object[])#java/lang/Object/getClass()
org/springframework/orm/jpa/AbstractEntityManagerFactoryBean/invokeProxyMethod(java.lang.reflect.Method,java.lang.Object[])#java/lang/reflect/Method/invoke(java.lang.Object,java.lang.Object[])
org/springframework/orm/hibernate3/HibernateInterceptor/invoke(org.aopalliance.intercept.MethodInvocation)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/springframework/orm/hibernate3/HibernateInterceptor/invoke(org.aopalliance.intercept.MethodInvocation)#org/hibernate/Session/setFlushMode(org.hibernate.FlushMode)
org/springframework/orm/hibernate3/HibernateInterceptor/invoke(org.aopalliance.intercept.MethodInvocation)#org/springframework/orm/hibernate3/HibernateInterceptor/getSessionFactory()
org/springframework/orm/hibernate3/HibernateInterceptor/invoke(org.aopalliance.intercept.MethodInvocation)#org/springframework/orm/hibernate3/HibernateInterceptor/applyFlushMode(org.hibernate.Session,boolean)
org/springframework/orm/hibernate3/HibernateInterceptor/invoke(org.aopalliance.intercept.MethodInvocation)#org/springframework/orm/hibernate3/HibernateInterceptor/disableFilters(org.hibernate.Session)
org/springframework/orm/hibernate3/HibernateInterceptor/invoke(org.aopalliance.intercept.MethodInvocation)#org/springframework/transaction/support/TransactionSynchronizationManager/getResource(java.lang.Object)
org/springframework/orm/hibernate3/HibernateInterceptor/invoke(org.aopalliance.intercept.MethodInvocation)#org/springframework/transaction/support/TransactionSynchronizationManager/bindResource(java.lang.Object,java.lang.Object)
org/springframework/orm/hibernate3/HibernateInterceptor/invoke(org.aopalliance.intercept.MethodInvocation)#org/springframework/orm/hibernate3/HibernateInterceptor/enableFilters(org.hibernate.Session)
org/springframework/orm/hibernate3/HibernateInterceptor/invoke(org.aopalliance.intercept.MethodInvocation)#org/springframework/transaction/support/TransactionSynchronizationManager/unbindResource(java.lang.Object)
org/springframework/orm/hibernate3/HibernateInterceptor/invoke(org.aopalliance.intercept.MethodInvocation)#org/springframework/orm/hibernate3/HibernateInterceptor/convertHibernateAccessException(org.hibernate.HibernateException)
org/springframework/orm/hibernate3/HibernateInterceptor/invoke(org.aopalliance.intercept.MethodInvocation)#org/springframework/orm/hibernate3/HibernateInterceptor/flushIfNecessary(org.hibernate.Session,boolean)
org/springframework/orm/hibernate3/HibernateInterceptor/invoke(org.aopalliance.intercept.MethodInvocation)#org/aopalliance/intercept/MethodInvocation/proceed()
org/springframework/orm/jdo/TransactionAwarePersistenceManagerFactoryProxy/PersistenceManagerFactoryInvocationHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#org/springframework/orm/jdo/TransactionAwarePersistenceManagerFactoryProxy$PersistenceManagerInvocationHandler/PersistenceManagerInvocationHandler(javax.jdo.PersistenceManager,javax.jdo.PersistenceManagerFactory)
org/springframework/orm/jdo/TransactionAwarePersistenceManagerFactoryProxy/PersistenceManagerFactoryInvocationHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/lang/reflect/Proxy/newProxyInstance(java.lang.ClassLoader,java.lang.Class[],java.lang.reflect.InvocationHandler)
org/springframework/orm/jdo/TransactionAwarePersistenceManagerFactoryProxy/PersistenceManagerFactoryInvocationHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/lang/reflect/InvocationTargetException/getTargetException()
org/springframework/orm/jdo/TransactionAwarePersistenceManagerFactoryProxy/PersistenceManagerFactoryInvocationHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/lang/System/identityHashCode(java.lang.Object)
org/springframework/orm/jdo/TransactionAwarePersistenceManagerFactoryProxy/PersistenceManagerFactoryInvocationHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/lang/String/equals(java.lang.Object)
org/springframework/orm/jdo/TransactionAwarePersistenceManagerFactoryProxy/PersistenceManagerFactoryInvocationHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/lang/reflect/Method/getName()
org/springframework/orm/jdo/TransactionAwarePersistenceManagerFactoryProxy/PersistenceManagerFactoryInvocationHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/lang/Boolean/valueOf(boolean)
org/springframework/orm/jdo/TransactionAwarePersistenceManagerFactoryProxy/PersistenceManagerFactoryInvocationHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#org/springframework/util/ClassUtils/getAllInterfacesForClass(java.lang.Class,java.lang.ClassLoader)
org/springframework/orm/jdo/TransactionAwarePersistenceManagerFactoryProxy/PersistenceManagerFactoryInvocationHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/lang/Integer/valueOf(int)
org/springframework/orm/jdo/TransactionAwarePersistenceManagerFactoryProxy/PersistenceManagerFactoryInvocationHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/lang/reflect/Method/invoke(java.lang.Object,java.lang.Object[])
org/springframework/orm/jdo/TransactionAwarePersistenceManagerFactoryProxy/PersistenceManagerFactoryInvocationHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/lang/Object/getClass()
org/springframework/orm/jdo/TransactionAwarePersistenceManagerFactoryProxy/PersistenceManagerFactoryInvocationHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/lang/Class/getClassLoader()
org/springframework/orm/jpa/support/PersistenceAnnotationBeanPostProcessor/getPersistenceContext(java.lang.String,boolean)#java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)
org/springframework/orm/jpa/support/PersistenceAnnotationBeanPostProcessor/getPersistenceContext(java.lang.String,boolean)#java/lang/StringBuilder/append(java.lang.String)
org/springframework/orm/jpa/support/PersistenceAnnotationBeanPostProcessor/getPersistenceContext(java.lang.String,boolean)#java/util/Map/get(java.lang.Object)
org/springframework/orm/jpa/support/PersistenceAnnotationBeanPostProcessor/getPersistenceContext(java.lang.String,boolean)#java/util/Map/size()
org/springframework/orm/jpa/support/PersistenceAnnotationBeanPostProcessor/getPersistenceContext(java.lang.String,boolean)#java/util/Map/values()
org/springframework/orm/jpa/support/PersistenceAnnotationBeanPostProcessor/getPersistenceContext(java.lang.String,boolean)#java/util/Iterator/next()
org/springframework/orm/jpa/support/PersistenceAnnotationBeanPostProcessor/getPersistenceContext(java.lang.String,boolean)#java/lang/StringBuilder/StringBuilder()
org/springframework/orm/jpa/support/PersistenceAnnotationBeanPostProcessor/getPersistenceContext(java.lang.String,boolean)#java/util/Collection/iterator()
org/springframework/orm/jpa/support/PersistenceAnnotationBeanPostProcessor/getPersistenceContext(java.lang.String,boolean)#java/lang/StringBuilder/toString()
org/springframework/orm/jpa/support/PersistenceAnnotationBeanPostProcessor/getPersistenceContext(java.lang.String,boolean)#java/lang/String/equals(java.lang.Object)
org/springframework/orm/jpa/support/PersistenceAnnotationBeanPostProcessor/findPersistenceMetadata(java.lang.String,java.lang.Class)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/springframework/orm/jpa/support/PersistenceAnnotationBeanPostProcessor/findPersistenceMetadata(java.lang.String,java.lang.Class)#java/lang/Class/getSuperclass()
org/springframework/orm/jpa/support/PersistenceAnnotationBeanPostProcessor/findPersistenceMetadata(java.lang.String,java.lang.Class)#java/lang/Class/getDeclaredMethods()
org/springframework/orm/jpa/support/PersistenceAnnotationBeanPostProcessor/findPersistenceMetadata(java.lang.String,java.lang.Class)#java/lang/StringBuilder/append(java.lang.String)
org/springframework/orm/jpa/support/PersistenceAnnotationBeanPostProcessor/findPersistenceMetadata(java.lang.String,java.lang.Class)#org/springframework/orm/jpa/support/PersistenceAnnotationBeanPostProcessor$PersistenceElement/PersistenceElement(org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor,java.lang.reflect.Member,java.beans.PropertyDescriptor)
org/springframework/orm/jpa/support/PersistenceAnnotationBeanPostProcessor/findPersistenceMetadata(java.lang.String,java.lang.Class)#java/lang/reflect/Method/getModifiers()
org/springframework/orm/jpa/support/PersistenceAnnotationBeanPostProcessor/findPersistenceMetadata(java.lang.String,java.lang.Class)#java/lang/reflect/Method/getAnnotation(java.lang.Class)
org/springframework/orm/jpa/support/PersistenceAnnotationBeanPostProcessor/findPersistenceMetadata(java.lang.String,java.lang.Class)#java/util/Map/get(java.lang.Object)
org/springframework/orm/jpa/support/PersistenceAnnotationBeanPostProcessor/findPersistenceMetadata(java.lang.String,java.lang.Class)#org/springframework/beans/BeanUtils/findPropertyForMethod(java.lang.reflect.Method)
org/springframework/orm/jpa/support/PersistenceAnnotationBeanPostProcessor/findPersistenceMetadata(java.lang.String,java.lang.Class)#java/lang/reflect/Modifier/isStatic(int)
org/springframework/orm/jpa/support/PersistenceAnnotationBeanPostProcessor/findPersistenceMetadata(java.lang.String,java.lang.Class)#java/util/LinkedList/addAll(int,java.util.Collection)
org/springframework/orm/jpa/support/PersistenceAnnotationBeanPostProcessor/findPersistenceMetadata(java.lang.String,java.lang.Class)#java/lang/reflect/Field/getModifiers()
org/springframework/orm/jpa/support/PersistenceAnnotationBeanPostProcessor/findPersistenceMetadata(java.lang.String,java.lang.Class)#java/lang/reflect/Field/getAnnotation(java.lang.Class)
org/springframework/orm/jpa/support/PersistenceAnnotationBeanPostProcessor/findPersistenceMetadata(java.lang.String,java.lang.Class)#java/lang/StringBuilder/toString()
org/springframework/orm/jpa/support/PersistenceAnnotationBeanPostProcessor/findPersistenceMetadata(java.lang.String,java.lang.Class)#org/springframework/util/StringUtils/hasLength(java.lang.String)
org/springframework/orm/jpa/support/PersistenceAnnotationBeanPostProcessor/findPersistenceMetadata(java.lang.String,java.lang.Class)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/springframework/orm/jpa/support/PersistenceAnnotationBeanPostProcessor/findPersistenceMetadata(java.lang.String,java.lang.Class)#java/lang/reflect/Method/equals(java.lang.Object)
org/springframework/orm/jpa/support/PersistenceAnnotationBeanPostProcessor/findPersistenceMetadata(java.lang.String,java.lang.Class)#java/util/LinkedList/add(java.lang.Object)
org/springframework/orm/jpa/support/PersistenceAnnotationBeanPostProcessor/findPersistenceMetadata(java.lang.String,java.lang.Class)#java/lang/Class/getName()
org/springframework/orm/jpa/support/PersistenceAnnotationBeanPostProcessor/findPersistenceMetadata(java.lang.String,java.lang.Class)#org/springframework/beans/factory/annotation/InjectionMetadata/InjectionMetadata(java.lang.Class,java.util.Collection)
org/springframework/orm/jpa/support/PersistenceAnnotationBeanPostProcessor/findPersistenceMetadata(java.lang.String,java.lang.Class)#java/util/LinkedList/LinkedList()
org/springframework/orm/jpa/support/PersistenceAnnotationBeanPostProcessor/findPersistenceMetadata(java.lang.String,java.lang.Class)#org/springframework/beans/factory/annotation/InjectionMetadata/needsRefresh(org.springframework.beans.factory.annotation.InjectionMetadata,java.lang.Class)
org/springframework/orm/jpa/support/PersistenceAnnotationBeanPostProcessor/findPersistenceMetadata(java.lang.String,java.lang.Class)#java/lang/StringBuilder/StringBuilder()
org/springframework/orm/jpa/support/PersistenceAnnotationBeanPostProcessor/findPersistenceMetadata(java.lang.String,java.lang.Class)#java/lang/reflect/Method/getParameterTypes()
org/springframework/orm/jpa/support/PersistenceAnnotationBeanPostProcessor/findPersistenceMetadata(java.lang.String,java.lang.Class)#org/springframework/util/ClassUtils/getMostSpecificMethod(java.lang.reflect.Method,java.lang.Class)
org/springframework/orm/jpa/support/PersistenceAnnotationBeanPostProcessor/findPersistenceMetadata(java.lang.String,java.lang.Class)#java/lang/StringBuilder/append(java.lang.Object)
org/springframework/orm/jpa/support/PersistenceAnnotationBeanPostProcessor/findPersistenceMetadata(java.lang.String,java.lang.Class)#java/lang/Class/getDeclaredFields()
org/springframework/orm/jpa/support/PersistenceAnnotationBeanPostProcessor/getPersistenceUnit(java.lang.String)#java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)
org/springframework/orm/jpa/support/PersistenceAnnotationBeanPostProcessor/getPersistenceUnit(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/springframework/orm/jpa/support/PersistenceAnnotationBeanPostProcessor/getPersistenceUnit(java.lang.String)#java/util/Map/get(java.lang.Object)
org/springframework/orm/jpa/support/PersistenceAnnotationBeanPostProcessor/getPersistenceUnit(java.lang.String)#java/util/Map/size()
org/springframework/orm/jpa/support/PersistenceAnnotationBeanPostProcessor/getPersistenceUnit(java.lang.String)#java/util/Map/values()
org/springframework/orm/jpa/support/PersistenceAnnotationBeanPostProcessor/getPersistenceUnit(java.lang.String)#java/util/Iterator/next()
org/springframework/orm/jpa/support/PersistenceAnnotationBeanPostProcessor/getPersistenceUnit(java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/springframework/orm/jpa/support/PersistenceAnnotationBeanPostProcessor/getPersistenceUnit(java.lang.String)#java/util/Collection/iterator()
org/springframework/orm/jpa/support/PersistenceAnnotationBeanPostProcessor/getPersistenceUnit(java.lang.String)#java/lang/StringBuilder/toString()
org/springframework/orm/jpa/support/PersistenceAnnotationBeanPostProcessor/getPersistenceUnit(java.lang.String)#java/lang/String/equals(java.lang.Object)
org/springframework/orm/jpa/vendor/HibernateJpaDialect/convertHibernateAccessException(org.hibernate.HibernateException)#org/hibernate/PessimisticLockException/getSQL()
org/springframework/orm/jpa/vendor/HibernateJpaDialect/convertHibernateAccessException(org.hibernate.HibernateException)#org/springframework/dao/InvalidDataAccessResourceUsageException/InvalidDataAccessResourceUsageException(java.lang.String,java.lang.Throwable)
org/springframework/orm/jpa/vendor/HibernateJpaDialect/convertHibernateAccessException(org.hibernate.HibernateException)#org/hibernate/exception/LockAcquisitionException/getSQL()
org/springframework/orm/jpa/vendor/HibernateJpaDialect/convertHibernateAccessException(org.hibernate.HibernateException)#java/lang/Class/isInstance(java.lang.Object)
org/springframework/orm/jpa/vendor/HibernateJpaDialect/convertHibernateAccessException(org.hibernate.HibernateException)#org/springframework/dao/QueryTimeoutException/QueryTimeoutException(java.lang.String,java.lang.Throwable)
org/springframework/orm/jpa/vendor/HibernateJpaDialect/convertHibernateAccessException(org.hibernate.HibernateException)#org/hibernate/HibernateException/getMessage()
org/springframework/orm/jpa/vendor/HibernateJpaDialect/convertHibernateAccessException(org.hibernate.HibernateException)#org/hibernate/exception/ConstraintViolationException/getConstraintName()
org/springframework/orm/jpa/vendor/HibernateJpaDialect/convertHibernateAccessException(org.hibernate.HibernateException)#org/hibernate/HibernateException/getCause()
org/springframework/orm/jpa/vendor/HibernateJpaDialect/convertHibernateAccessException(org.hibernate.HibernateException)#org/hibernate/StaleObjectStateException/getIdentifier()
org/springframework/orm/jpa/vendor/HibernateJpaDialect/convertHibernateAccessException(org.hibernate.HibernateException)#org/springframework/dao/DataIntegrityViolationException/DataIntegrityViolationException(java.lang.String,java.lang.Throwable)
org/springframework/orm/jpa/vendor/HibernateJpaDialect/convertHibernateAccessException(org.hibernate.HibernateException)#org/springframework/dao/IncorrectResultSizeDataAccessException/IncorrectResultSizeDataAccessException(java.lang.String,int,java.lang.Throwable)
org/springframework/orm/jpa/vendor/HibernateJpaDialect/convertHibernateAccessException(org.hibernate.HibernateException)#org/hibernate/exception/DataException/getSQL()
org/springframework/orm/jpa/vendor/HibernateJpaDialect/convertHibernateAccessException(org.hibernate.HibernateException)#org/springframework/dao/DataAccessResourceFailureException/DataAccessResourceFailureException(java.lang.String,java.lang.Throwable)
org/springframework/orm/jpa/vendor/HibernateJpaDialect/convertHibernateAccessException(org.hibernate.HibernateException)#org/springframework/dao/InvalidDataAccessApiUsageException/InvalidDataAccessApiUsageException(java.lang.String,java.lang.Throwable)
org/springframework/orm/jpa/vendor/HibernateJpaDialect/convertHibernateAccessException(org.hibernate.HibernateException)#org/springframework/dao/PessimisticLockingFailureException/PessimisticLockingFailureException(java.lang.String,java.lang.Throwable)
org/springframework/orm/jpa/vendor/HibernateJpaDialect/convertHibernateAccessException(org.hibernate.HibernateException)#org/springframework/dao/CannotAcquireLockException/CannotAcquireLockException(java.lang.String,java.lang.Throwable)
org/springframework/orm/jpa/vendor/HibernateJpaDialect/convertHibernateAccessException(org.hibernate.HibernateException)#java/lang/StringBuilder/append(java.lang.String)
org/springframework/orm/jpa/vendor/HibernateJpaDialect/convertHibernateAccessException(org.hibernate.HibernateException)#org/hibernate/UnresolvableObjectException/getIdentifier()
org/springframework/orm/jpa/vendor/HibernateJpaDialect/convertHibernateAccessException(org.hibernate.HibernateException)#org/hibernate/WrongClassException/getIdentifier()
org/springframework/orm/jpa/vendor/HibernateJpaDialect/convertHibernateAccessException(org.hibernate.HibernateException)#org/hibernate/UnresolvableObjectException/getEntityName()
org/springframework/orm/jpa/vendor/HibernateJpaDialect/convertHibernateAccessException(org.hibernate.HibernateException)#org/hibernate/WrongClassException/getEntityName()
org/springframework/orm/jpa/vendor/HibernateJpaDialect/convertHibernateAccessException(org.hibernate.HibernateException)#org/hibernate/QueryTimeoutException/getSQL()
org/springframework/orm/jpa/vendor/HibernateJpaDialect/convertHibernateAccessException(org.hibernate.HibernateException)#org/hibernate/exception/SQLGrammarException/getSQL()
org/springframework/orm/jpa/vendor/HibernateJpaDialect/convertHibernateAccessException(org.hibernate.HibernateException)#java/lang/StringBuilder/StringBuilder()
org/springframework/orm/jpa/vendor/HibernateJpaDialect/convertHibernateAccessException(org.hibernate.HibernateException)#org/hibernate/exception/ConstraintViolationException/getSQL()
org/springframework/orm/jpa/vendor/HibernateJpaDialect/convertHibernateAccessException(org.hibernate.HibernateException)#org/springframework/dao/DuplicateKeyException/DuplicateKeyException(java.lang.String,java.lang.Throwable)
org/springframework/orm/jpa/vendor/HibernateJpaDialect/convertHibernateAccessException(org.hibernate.HibernateException)#java/lang/StringBuilder/toString()
org/springframework/orm/jpa/vendor/HibernateJpaDialect/convertHibernateAccessException(org.hibernate.HibernateException)#org/hibernate/StaleObjectStateException/getEntityName()
org/springframework/orm/hibernate3/support/BlobSerializableType/deepCopy(java.lang.Object)#org/hibernate/HibernateException/HibernateException(java.lang.String,java.lang.Throwable)
org/springframework/orm/hibernate3/support/BlobSerializableType/deepCopy(java.lang.Object)#java/io/ByteArrayOutputStream/ByteArrayOutputStream(int)
org/springframework/orm/hibernate3/support/BlobSerializableType/deepCopy(java.lang.Object)#java/io/ByteArrayInputStream/ByteArrayInputStream(byte[])
org/springframework/orm/hibernate3/support/BlobSerializableType/deepCopy(java.lang.Object)#java/io/ObjectInputStream/readObject()
org/springframework/orm/hibernate3/support/BlobSerializableType/deepCopy(java.lang.Object)#java/io/ObjectOutputStream/writeObject(java.lang.Object)
org/springframework/orm/hibernate3/support/BlobSerializableType/deepCopy(java.lang.Object)#java/io/ObjectInputStream/close()
org/springframework/orm/hibernate3/support/BlobSerializableType/deepCopy(java.lang.Object)#java/io/ObjectInputStream/ObjectInputStream(java.io.InputStream)
org/springframework/orm/hibernate3/support/BlobSerializableType/deepCopy(java.lang.Object)#java/io/ObjectOutputStream/close()
org/springframework/orm/hibernate3/support/BlobSerializableType/deepCopy(java.lang.Object)#java/io/ObjectOutputStream/ObjectOutputStream(java.io.OutputStream)
org/springframework/orm/hibernate3/support/BlobSerializableType/deepCopy(java.lang.Object)#java/io/ByteArrayOutputStream/toByteArray()
org/springframework/orm/jpa/SharedEntityManagerCreator/DeferredQueryInvocationHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/lang/reflect/InvocationTargetException/getTargetException()
org/springframework/orm/jpa/SharedEntityManagerCreator/DeferredQueryInvocationHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/lang/Class/isInstance(java.lang.Object)
org/springframework/orm/jpa/SharedEntityManagerCreator/DeferredQueryInvocationHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/lang/String/equals(java.lang.Object)
org/springframework/orm/jpa/SharedEntityManagerCreator/DeferredQueryInvocationHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/lang/Boolean/valueOf(boolean)
org/springframework/orm/jpa/SharedEntityManagerCreator/DeferredQueryInvocationHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/lang/Integer/valueOf(int)
org/springframework/orm/jpa/SharedEntityManagerCreator/DeferredQueryInvocationHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/lang/reflect/Method/invoke(java.lang.Object,java.lang.Object[])
org/springframework/orm/jpa/SharedEntityManagerCreator/DeferredQueryInvocationHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/lang/Object/hashCode()
org/springframework/orm/jpa/SharedEntityManagerCreator/DeferredQueryInvocationHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/util/Set/contains(java.lang.Object)
org/springframework/orm/jpa/SharedEntityManagerCreator/DeferredQueryInvocationHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/lang/reflect/Method/getName()
org/springframework/orm/jpa/persistenceunit/PersistenceUnitReader/readPersistenceUnitInfos(java.lang.String[])#java/lang/Object/toString()
org/springframework/orm/jpa/persistenceunit/PersistenceUnitReader/readPersistenceUnitInfos(java.lang.String[])#java/lang/StringBuilder/append(java.lang.String)
org/springframework/orm/jpa/persistenceunit/PersistenceUnitReader/readPersistenceUnitInfos(java.lang.String[])#org/springframework/core/io/support/ResourcePatternResolver/getResources(java.lang.String)
org/springframework/orm/jpa/persistenceunit/PersistenceUnitReader/readPersistenceUnitInfos(java.lang.String[])#java/util/List/size()
org/springframework/orm/jpa/persistenceunit/PersistenceUnitReader/readPersistenceUnitInfos(java.lang.String[])#org/springframework/core/io/Resource/getInputStream()
org/springframework/orm/jpa/persistenceunit/PersistenceUnitReader/readPersistenceUnitInfos(java.lang.String[])#org/springframework/util/xml/SimpleSaxErrorHandler/SimpleSaxErrorHandler(org.apache.commons.logging.Log)
org/springframework/orm/jpa/persistenceunit/PersistenceUnitReader/readPersistenceUnitInfos(java.lang.String[])#java/io/InputStream/close()
org/springframework/orm/jpa/persistenceunit/PersistenceUnitReader/readPersistenceUnitInfos(java.lang.String[])#java/lang/StringBuilder/StringBuilder()
org/springframework/orm/jpa/persistenceunit/PersistenceUnitReader/readPersistenceUnitInfos(java.lang.String[])#java/util/List/toArray(java.lang.Object[])
org/springframework/orm/jpa/persistenceunit/PersistenceUnitReader/readPersistenceUnitInfos(java.lang.String[])#java/util/LinkedList/LinkedList()
org/springframework/orm/jpa/persistenceunit/PersistenceUnitReader/readPersistenceUnitInfos(java.lang.String[])#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/springframework/orm/jpa/persistenceunit/PersistenceUnitReader/readPersistenceUnitInfos(java.lang.String[])#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String,java.lang.Throwable)
org/springframework/orm/jpa/persistenceunit/PersistenceUnitReader/readPersistenceUnitInfos(java.lang.String[])#java/lang/StringBuilder/toString()
org/springframework/orm/jpa/persistenceunit/PersistenceUnitReader/parsePersistenceUnitInfo(org.w3c.dom.Element,java.lang.String,java.net.URL)#org/springframework/orm/jpa/persistenceunit/SpringPersistenceUnitInfo/setExcludeUnlistedClasses(boolean)
org/springframework/orm/jpa/persistenceunit/PersistenceUnitReader/parsePersistenceUnitInfo(org.w3c.dom.Element,java.lang.String,java.net.URL)#javax/persistence/SharedCacheMode/valueOf(java.lang.String)
org/springframework/orm/jpa/persistenceunit/PersistenceUnitReader/parsePersistenceUnitInfo(org.w3c.dom.Element,java.lang.String,java.net.URL)#java/lang/String/trim()
org/springframework/orm/jpa/persistenceunit/PersistenceUnitReader/parsePersistenceUnitInfo(org.w3c.dom.Element,java.lang.String,java.net.URL)#org/springframework/util/StringUtils/hasText(java.lang.String)
org/springframework/orm/jpa/persistenceunit/PersistenceUnitReader/parsePersistenceUnitInfo(org.w3c.dom.Element,java.lang.String,java.net.URL)#javax/persistence/spi/PersistenceUnitTransactionType/valueOf(java.lang.String)
org/springframework/orm/jpa/persistenceunit/PersistenceUnitReader/parsePersistenceUnitInfo(org.w3c.dom.Element,java.lang.String,java.net.URL)#org/springframework/orm/jpa/persistenceunit/SpringPersistenceUnitInfo/setJtaDataSource(javax.sql.DataSource)
org/springframework/orm/jpa/persistenceunit/PersistenceUnitReader/parsePersistenceUnitInfo(org.w3c.dom.Element,java.lang.String,java.net.URL)#org/springframework/jdbc/datasource/lookup/DataSourceLookup/getDataSource(java.lang.String)
org/springframework/orm/jpa/persistenceunit/PersistenceUnitReader/parsePersistenceUnitInfo(org.w3c.dom.Element,java.lang.String,java.net.URL)#org/springframework/orm/jpa/persistenceunit/SpringPersistenceUnitInfo/setPersistenceUnitName(java.lang.String)
org/springframework/orm/jpa/persistenceunit/PersistenceUnitReader/parsePersistenceUnitInfo(org.w3c.dom.Element,java.lang.String,java.net.URL)#org/springframework/util/xml/DomUtils/getTextValue(org.w3c.dom.Element)
org/springframework/orm/jpa/persistenceunit/PersistenceUnitReader/parsePersistenceUnitInfo(org.w3c.dom.Element,java.lang.String,java.net.URL)#org/springframework/orm/jpa/persistenceunit/SpringPersistenceUnitInfo/setSharedCacheMode(javax.persistence.SharedCacheMode)
org/springframework/orm/jpa/persistenceunit/PersistenceUnitReader/parsePersistenceUnitInfo(org.w3c.dom.Element,java.lang.String,java.net.URL)#org/springframework/orm/jpa/persistenceunit/SpringPersistenceUnitInfo/setPersistenceUnitRootUrl(java.net.URL)
org/springframework/orm/jpa/persistenceunit/PersistenceUnitReader/parsePersistenceUnitInfo(org.w3c.dom.Element,java.lang.String,java.net.URL)#org/springframework/util/xml/DomUtils/getChildElementByTagName(org.w3c.dom.Element,java.lang.String)
org/springframework/orm/jpa/persistenceunit/PersistenceUnitReader/parsePersistenceUnitInfo(org.w3c.dom.Element,java.lang.String,java.net.URL)#java/lang/Boolean/valueOf(java.lang.String)
org/springframework/orm/jpa/persistenceunit/PersistenceUnitReader/parsePersistenceUnitInfo(org.w3c.dom.Element,java.lang.String,java.net.URL)#org/springframework/orm/jpa/persistenceunit/SpringPersistenceUnitInfo/setPersistenceXMLSchemaVersion(java.lang.String)
org/springframework/orm/jpa/persistenceunit/PersistenceUnitReader/parsePersistenceUnitInfo(org.w3c.dom.Element,java.lang.String,java.net.URL)#org/springframework/orm/jpa/persistenceunit/SpringPersistenceUnitInfo/setTransactionType(javax.persistence.spi.PersistenceUnitTransactionType)
org/springframework/orm/jpa/persistenceunit/PersistenceUnitReader/parsePersistenceUnitInfo(org.w3c.dom.Element,java.lang.String,java.net.URL)#org/w3c/dom/Element/getAttribute(java.lang.String)
org/springframework/orm/jpa/persistenceunit/PersistenceUnitReader/parsePersistenceUnitInfo(org.w3c.dom.Element,java.lang.String,java.net.URL)#javax/persistence/ValidationMode/valueOf(java.lang.String)
org/springframework/orm/jpa/persistenceunit/PersistenceUnitReader/parsePersistenceUnitInfo(org.w3c.dom.Element,java.lang.String,java.net.URL)#org/springframework/orm/jpa/persistenceunit/SpringPersistenceUnitInfo/setPersistenceProviderClassName(java.lang.String)
org/springframework/orm/jpa/persistenceunit/PersistenceUnitReader/parsePersistenceUnitInfo(org.w3c.dom.Element,java.lang.String,java.net.URL)#org/springframework/orm/jpa/persistenceunit/SpringPersistenceUnitInfo/setNonJtaDataSource(javax.sql.DataSource)
org/springframework/orm/jpa/persistenceunit/PersistenceUnitReader/parsePersistenceUnitInfo(org.w3c.dom.Element,java.lang.String,java.net.URL)#org/springframework/util/xml/DomUtils/getChildElementValueByTagName(org.w3c.dom.Element,java.lang.String)
org/springframework/orm/jpa/persistenceunit/PersistenceUnitReader/parsePersistenceUnitInfo(org.w3c.dom.Element,java.lang.String,java.net.URL)#java/lang/Boolean/booleanValue()
org/springframework/orm/jpa/persistenceunit/PersistenceUnitReader/parsePersistenceUnitInfo(org.w3c.dom.Element,java.lang.String,java.net.URL)#org/springframework/orm/jpa/persistenceunit/SpringPersistenceUnitInfo/setValidationMode(javax.persistence.ValidationMode)
org/springframework/orm/jpa/persistenceunit/PersistenceUnitReader/parseJarFiles(org.w3c.dom.Element,org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo)#org/springframework/orm/jpa/persistenceunit/SpringPersistenceUnitInfo/getPersistenceUnitRootUrl()
org/springframework/orm/jpa/persistenceunit/PersistenceUnitReader/parseJarFiles(org.w3c.dom.Element,org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo)#java/net/URL/URL(java.net.URL,java.lang.String)
org/springframework/orm/jpa/persistenceunit/PersistenceUnitReader/parseJarFiles(org.w3c.dom.Element,org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo)#java/util/Iterator/hasNext()
org/springframework/orm/jpa/persistenceunit/PersistenceUnitReader/parseJarFiles(org.w3c.dom.Element,org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo)#org/apache/commons/logging/Log/warn(java.lang.Object)
org/springframework/orm/jpa/persistenceunit/PersistenceUnitReader/parseJarFiles(org.w3c.dom.Element,org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo)#org/springframework/util/StringUtils/hasText(java.lang.String)
org/springframework/orm/jpa/persistenceunit/PersistenceUnitReader/parseJarFiles(org.w3c.dom.Element,org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo)#org/springframework/orm/jpa/persistenceunit/SpringPersistenceUnitInfo/addJarFileUrl(java.net.URL)
org/springframework/orm/jpa/persistenceunit/PersistenceUnitReader/parseJarFiles(org.w3c.dom.Element,org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo)#org/springframework/orm/jpa/persistenceunit/SpringPersistenceUnitInfo/getPersistenceUnitName()
org/springframework/orm/jpa/persistenceunit/PersistenceUnitReader/parseJarFiles(org.w3c.dom.Element,org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo)#org/springframework/core/io/support/ResourcePatternResolver/getResources(java.lang.String)
org/springframework/orm/jpa/persistenceunit/PersistenceUnitReader/parseJarFiles(org.w3c.dom.Element,org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo)#java/util/Iterator/next()
org/springframework/orm/jpa/persistenceunit/PersistenceUnitReader/parseJarFiles(org.w3c.dom.Element,org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo)#java/lang/StringBuilder/toString()
org/springframework/orm/jpa/persistenceunit/PersistenceUnitReader/parseJarFiles(org.w3c.dom.Element,org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo)#java/lang/StringBuilder/append(java.lang.String)
org/springframework/orm/jpa/persistenceunit/PersistenceUnitReader/parseJarFiles(org.w3c.dom.Element,org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo)#java/lang/String/trim()
org/springframework/orm/jpa/persistenceunit/PersistenceUnitReader/parseJarFiles(org.w3c.dom.Element,org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo)#java/lang/StringBuilder/StringBuilder()
org/springframework/orm/jpa/persistenceunit/PersistenceUnitReader/parseJarFiles(org.w3c.dom.Element,org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo)#org/springframework/core/io/Resource/getURL()
org/springframework/orm/jpa/persistenceunit/PersistenceUnitReader/parseJarFiles(org.w3c.dom.Element,org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo)#org/springframework/core/io/Resource/exists()
org/springframework/orm/jpa/persistenceunit/PersistenceUnitReader/parseJarFiles(org.w3c.dom.Element,org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo)#org/springframework/util/xml/DomUtils/getChildElementsByTagName(org.w3c.dom.Element,java.lang.String)
org/springframework/orm/jpa/persistenceunit/PersistenceUnitReader/parseJarFiles(org.w3c.dom.Element,org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo)#java/util/List/iterator()
org/springframework/orm/jpa/persistenceunit/PersistenceUnitReader/parseJarFiles(org.w3c.dom.Element,org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo)#org/springframework/util/xml/DomUtils/getTextValue(org.w3c.dom.Element)
org/springframework/orm/jpa/persistenceunit/PersistenceUnitReader/determinePersistenceUnitRootUrl(org.springframework.core.io.Resource)#java/net/URL/toExternalForm()
org/springframework/orm/jpa/persistenceunit/PersistenceUnitReader/determinePersistenceUnitRootUrl(org.springframework.core.io.Resource)#java/lang/StringBuilder/append(java.lang.String)
org/springframework/orm/jpa/persistenceunit/PersistenceUnitReader/determinePersistenceUnitRootUrl(org.springframework.core.io.Resource)#org/apache/commons/logging/Log/isInfoEnabled()
org/springframework/orm/jpa/persistenceunit/PersistenceUnitReader/determinePersistenceUnitRootUrl(org.springframework.core.io.Resource)#org/apache/commons/logging/Log/info(java.lang.Object)
org/springframework/orm/jpa/persistenceunit/PersistenceUnitReader/determinePersistenceUnitRootUrl(org.springframework.core.io.Resource)#org/springframework/util/ResourceUtils/extractJarFileURL(java.net.URL)
org/springframework/orm/jpa/persistenceunit/PersistenceUnitReader/determinePersistenceUnitRootUrl(org.springframework.core.io.Resource)#java/lang/String/substring(int,int)
org/springframework/orm/jpa/persistenceunit/PersistenceUnitReader/determinePersistenceUnitRootUrl(org.springframework.core.io.Resource)#java/lang/String/lastIndexOf(java.lang.String)
org/springframework/orm/jpa/persistenceunit/PersistenceUnitReader/determinePersistenceUnitRootUrl(org.springframework.core.io.Resource)#java/lang/String/length()
org/springframework/orm/jpa/persistenceunit/PersistenceUnitReader/determinePersistenceUnitRootUrl(org.springframework.core.io.Resource)#java/net/URL/URL(java.lang.String)
org/springframework/orm/jpa/persistenceunit/PersistenceUnitReader/determinePersistenceUnitRootUrl(org.springframework.core.io.Resource)#java/lang/StringBuilder/StringBuilder()
org/springframework/orm/jpa/persistenceunit/PersistenceUnitReader/determinePersistenceUnitRootUrl(org.springframework.core.io.Resource)#org/springframework/core/io/Resource/getURL()
org/springframework/orm/jpa/persistenceunit/PersistenceUnitReader/determinePersistenceUnitRootUrl(org.springframework.core.io.Resource)#java/lang/String/lastIndexOf(int)
org/springframework/orm/jpa/persistenceunit/PersistenceUnitReader/determinePersistenceUnitRootUrl(org.springframework.core.io.Resource)#org/springframework/util/ResourceUtils/isJarURL(java.net.URL)
org/springframework/orm/jpa/persistenceunit/PersistenceUnitReader/determinePersistenceUnitRootUrl(org.springframework.core.io.Resource)#org/springframework/core/io/Resource/getFilename()
org/springframework/orm/jpa/persistenceunit/PersistenceUnitReader/determinePersistenceUnitRootUrl(org.springframework.core.io.Resource)#java/lang/StringBuilder/append(java.lang.Object)
org/springframework/orm/jpa/persistenceunit/PersistenceUnitReader/determinePersistenceUnitRootUrl(org.springframework.core.io.Resource)#java/lang/String/contains(java.lang.CharSequence)
org/springframework/orm/jpa/persistenceunit/PersistenceUnitReader/determinePersistenceUnitRootUrl(org.springframework.core.io.Resource)#java/lang/StringBuilder/toString()
org/springframework/orm/jpa/persistenceunit/PersistenceUnitReader/determinePersistenceUnitRootUrl(org.springframework.core.io.Resource)#java/lang/String/endsWith(java.lang.String)
org/springframework/orm/jdo/support/SpringPersistenceManagerProxyBean/PersistenceManagerInvocationHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/lang/StringBuilder/append(java.lang.String)
org/springframework/orm/jdo/support/SpringPersistenceManagerProxyBean/PersistenceManagerInvocationHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/lang/reflect/InvocationTargetException/getTargetException()
org/springframework/orm/jdo/support/SpringPersistenceManagerProxyBean/PersistenceManagerInvocationHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/lang/System/identityHashCode(java.lang.Object)
org/springframework/orm/jdo/support/SpringPersistenceManagerProxyBean/PersistenceManagerInvocationHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/lang/String/equals(java.lang.Object)
org/springframework/orm/jdo/support/SpringPersistenceManagerProxyBean/PersistenceManagerInvocationHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/lang/reflect/Method/getName()
org/springframework/orm/jdo/support/SpringPersistenceManagerProxyBean/PersistenceManagerInvocationHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/lang/Boolean/valueOf(boolean)
org/springframework/orm/jdo/support/SpringPersistenceManagerProxyBean/PersistenceManagerInvocationHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/lang/Integer/valueOf(int)
org/springframework/orm/jdo/support/SpringPersistenceManagerProxyBean/PersistenceManagerInvocationHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/lang/StringBuilder/append(java.lang.Object)
org/springframework/orm/jdo/support/SpringPersistenceManagerProxyBean/PersistenceManagerInvocationHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/lang/reflect/Method/invoke(java.lang.Object,java.lang.Object[])
org/springframework/orm/jdo/support/SpringPersistenceManagerProxyBean/PersistenceManagerInvocationHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/lang/StringBuilder/toString()
org/springframework/orm/jdo/support/SpringPersistenceManagerProxyBean/PersistenceManagerInvocationHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/lang/StringBuilder/StringBuilder()
org/springframework/orm/jpa/LocalEntityManagerFactoryBean/createNativeEntityManagerFactory()#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/springframework/orm/jpa/LocalEntityManagerFactoryBean/createNativeEntityManagerFactory()#org/springframework/orm/jpa/LocalEntityManagerFactoryBean/getPersistenceProvider()
org/springframework/orm/jpa/LocalEntityManagerFactoryBean/createNativeEntityManagerFactory()#org/apache/commons/logging/Log/isInfoEnabled()
org/springframework/orm/jpa/LocalEntityManagerFactoryBean/createNativeEntityManagerFactory()#javax/persistence/spi/PersistenceProvider/createEntityManagerFactory(java.lang.String,java.util.Map)
org/springframework/orm/jpa/LocalEntityManagerFactoryBean/createNativeEntityManagerFactory()#org/apache/commons/logging/Log/info(java.lang.Object)
org/springframework/orm/jpa/LocalEntityManagerFactoryBean/createNativeEntityManagerFactory()#java/lang/StringBuilder/StringBuilder()
org/springframework/orm/jpa/LocalEntityManagerFactoryBean/createNativeEntityManagerFactory()#java/lang/StringBuilder/toString()
org/springframework/orm/jpa/LocalEntityManagerFactoryBean/createNativeEntityManagerFactory()#java/lang/StringBuilder/append(java.lang.String)
org/springframework/orm/jpa/LocalEntityManagerFactoryBean/createNativeEntityManagerFactory()#org/springframework/orm/jpa/LocalEntityManagerFactoryBean/getJpaPropertyMap()
org/springframework/orm/jpa/LocalEntityManagerFactoryBean/createNativeEntityManagerFactory()#org/springframework/orm/jpa/LocalEntityManagerFactoryBean/getPersistenceUnitName()
org/springframework/orm/jpa/LocalEntityManagerFactoryBean/createNativeEntityManagerFactory()#java/lang/StringBuilder/append(java.lang.Object)
org/springframework/orm/jpa/LocalEntityManagerFactoryBean/createNativeEntityManagerFactory()#javax/persistence/Persistence/createEntityManagerFactory(java.lang.String,java.util.Map)
org/springframework/orm/jpa/ExtendedEntityManagerCreator/createProxy(javax.persistence.EntityManager,java.lang.Class,java.lang.ClassLoader,org.springframework.dao.support.PersistenceExceptionTranslator,java.lang.Boolean,boolean,boolean)#java/util/Set/addAll(java.util.Collection)
org/springframework/orm/jpa/ExtendedEntityManagerCreator/createProxy(javax.persistence.EntityManager,java.lang.Class,java.lang.ClassLoader,org.springframework.dao.support.PersistenceExceptionTranslator,java.lang.Boolean,boolean,boolean)#java/util/LinkedHashSet/LinkedHashSet()
org/springframework/orm/jpa/ExtendedEntityManagerCreator/createProxy(javax.persistence.EntityManager,java.lang.Class,java.lang.ClassLoader,org.springframework.dao.support.PersistenceExceptionTranslator,java.lang.Boolean,boolean,boolean)#org/springframework/orm/jpa/ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler/ExtendedEntityManagerInvocationHandler(javax.persistence.EntityManager,org.springframework.dao.support.PersistenceExceptionTranslator,java.lang.Boolean,boolean,boolean,org.springframework.orm.jpa.ExtendedEntityManagerCreator$1)
org/springframework/orm/jpa/ExtendedEntityManagerCreator/createProxy(javax.persistence.EntityManager,java.lang.Class,java.lang.ClassLoader,org.springframework.dao.support.PersistenceExceptionTranslator,java.lang.Boolean,boolean,boolean)#org/springframework/util/ClassUtils/getAllInterfacesForClassAsSet(java.lang.Class,java.lang.ClassLoader)
org/springframework/orm/jpa/ExtendedEntityManagerCreator/createProxy(javax.persistence.EntityManager,java.lang.Class,java.lang.ClassLoader,org.springframework.dao.support.PersistenceExceptionTranslator,java.lang.Boolean,boolean,boolean)#org/springframework/util/Assert/notNull(java.lang.Object,java.lang.String)
org/springframework/orm/jpa/ExtendedEntityManagerCreator/createProxy(javax.persistence.EntityManager,java.lang.Class,java.lang.ClassLoader,org.springframework.dao.support.PersistenceExceptionTranslator,java.lang.Boolean,boolean,boolean)#java/util/Set/toArray(java.lang.Object[])
org/springframework/orm/jpa/ExtendedEntityManagerCreator/createProxy(javax.persistence.EntityManager,java.lang.Class,java.lang.ClassLoader,org.springframework.dao.support.PersistenceExceptionTranslator,java.lang.Boolean,boolean,boolean)#java/util/Set/add(java.lang.Object)
org/springframework/orm/jpa/ExtendedEntityManagerCreator/createProxy(javax.persistence.EntityManager,java.lang.Class,java.lang.ClassLoader,org.springframework.dao.support.PersistenceExceptionTranslator,java.lang.Boolean,boolean,boolean)#java/util/Set/size()
org/springframework/orm/jpa/ExtendedEntityManagerCreator/createProxy(javax.persistence.EntityManager,java.lang.Class,java.lang.ClassLoader,org.springframework.dao.support.PersistenceExceptionTranslator,java.lang.Boolean,boolean,boolean)#java/lang/reflect/Proxy/newProxyInstance(java.lang.ClassLoader,java.lang.Class[],java.lang.reflect.InvocationHandler)
org/springframework/orm/jpa/ExtendedEntityManagerCreator/createProxy(javax.persistence.EntityManager,java.lang.Class,java.lang.ClassLoader,org.springframework.dao.support.PersistenceExceptionTranslator,java.lang.Boolean,boolean,boolean)#java/lang/Object/getClass()
org/springframework/orm/jpa/ExtendedEntityManagerCreator/createProxy(javax.persistence.EntityManager,java.lang.Class,java.lang.ClassLoader,org.springframework.dao.support.PersistenceExceptionTranslator,java.lang.Boolean,boolean,boolean)#java/lang/Class/getClassLoader()
org/springframework/orm/hibernate4/LocalSessionFactoryBuilder/scanPackages(java.lang.String[])#org/springframework/core/type/classreading/CachingMetadataReaderFactory/CachingMetadataReaderFactory(org.springframework.core.io.ResourceLoader)
org/springframework/orm/hibernate4/LocalSessionFactoryBuilder/scanPackages(java.lang.String[])#java/util/Iterator/hasNext()
org/springframework/orm/hibernate4/LocalSessionFactoryBuilder/scanPackages(java.lang.String[])#java/lang/StringBuilder/append(java.lang.String)
org/springframework/orm/hibernate4/LocalSessionFactoryBuilder/scanPackages(java.lang.String[])#java/lang/String/length()
org/springframework/orm/hibernate4/LocalSessionFactoryBuilder/scanPackages(java.lang.String[])#org/springframework/core/io/support/ResourcePatternResolver/getResources(java.lang.String)
org/springframework/orm/hibernate4/LocalSessionFactoryBuilder/scanPackages(java.lang.String[])#org/springframework/orm/hibernate4/LocalSessionFactoryBuilder/addPackage(java.lang.String)
org/springframework/orm/hibernate4/LocalSessionFactoryBuilder/scanPackages(java.lang.String[])#java/lang/ClassLoader/loadClass(java.lang.String)
org/springframework/orm/hibernate4/LocalSessionFactoryBuilder/scanPackages(java.lang.String[])#java/lang/String/substring(int,int)
org/springframework/orm/hibernate4/LocalSessionFactoryBuilder/scanPackages(java.lang.String[])#java/lang/StringBuilder/StringBuilder()
org/springframework/orm/hibernate4/LocalSessionFactoryBuilder/scanPackages(java.lang.String[])#org/springframework/core/io/support/ResourcePatternResolver/getClassLoader()
org/springframework/orm/hibernate4/LocalSessionFactoryBuilder/scanPackages(java.lang.String[])#org/springframework/orm/hibernate4/LocalSessionFactoryBuilder/addAnnotatedClass(java.lang.Class)
org/springframework/orm/hibernate4/LocalSessionFactoryBuilder/scanPackages(java.lang.String[])#org/springframework/core/type/classreading/MetadataReader/getClassMetadata()
org/springframework/orm/hibernate4/LocalSessionFactoryBuilder/scanPackages(java.lang.String[])#java/util/TreeSet/TreeSet()
org/springframework/orm/hibernate4/LocalSessionFactoryBuilder/scanPackages(java.lang.String[])#org/hibernate/MappingException/MappingException(java.lang.String,java.lang.Throwable)
org/springframework/orm/hibernate4/LocalSessionFactoryBuilder/scanPackages(java.lang.String[])#org/springframework/util/ClassUtils/convertClassNameToResourcePath(java.lang.String)
org/springframework/orm/hibernate4/LocalSessionFactoryBuilder/scanPackages(java.lang.String[])#java/util/Iterator/next()
org/springframework/orm/hibernate4/LocalSessionFactoryBuilder/scanPackages(java.lang.String[])#org/springframework/core/type/classreading/MetadataReaderFactory/getMetadataReader(org.springframework.core.io.Resource)
org/springframework/orm/hibernate4/LocalSessionFactoryBuilder/scanPackages(java.lang.String[])#org/springframework/core/io/Resource/isReadable()
org/springframework/orm/hibernate4/LocalSessionFactoryBuilder/scanPackages(java.lang.String[])#java/util/Set/iterator()
org/springframework/orm/hibernate4/LocalSessionFactoryBuilder/scanPackages(java.lang.String[])#java/util/Set/add(java.lang.Object)
org/springframework/orm/hibernate4/LocalSessionFactoryBuilder/scanPackages(java.lang.String[])#org/springframework/core/type/ClassMetadata/getClassName()
org/springframework/orm/hibernate4/LocalSessionFactoryBuilder/scanPackages(java.lang.String[])#java/lang/StringBuilder/toString()
org/springframework/orm/hibernate4/LocalSessionFactoryBuilder/scanPackages(java.lang.String[])#java/lang/String/endsWith(java.lang.String)
org/springframework/orm/hibernate4/LocalSessionFactoryBuilder/setJtaTransactionManager(java.lang.Object)#org/springframework/transaction/jta/JtaTransactionManager/getTransactionManager()
org/springframework/orm/hibernate4/LocalSessionFactoryBuilder/setJtaTransactionManager(java.lang.Object)#java/lang/StringBuilder/append(java.lang.String)
org/springframework/orm/hibernate4/LocalSessionFactoryBuilder/setJtaTransactionManager(java.lang.Object)#org/springframework/util/ClassUtils/isPresent(java.lang.String,java.lang.ClassLoader)
org/springframework/orm/hibernate4/LocalSessionFactoryBuilder/setJtaTransactionManager(java.lang.Object)#org/hibernate/engine/transaction/internal/jta/CMTTransactionFactory/CMTTransactionFactory()
org/springframework/orm/hibernate4/LocalSessionFactoryBuilder/setJtaTransactionManager(java.lang.Object)#java/util/Properties/put(java.lang.Object,java.lang.Object)
org/springframework/orm/hibernate4/LocalSessionFactoryBuilder/setJtaTransactionManager(java.lang.Object)#org/springframework/orm/hibernate4/LocalSessionFactoryBuilder/getProperties()
org/springframework/orm/hibernate4/LocalSessionFactoryBuilder/setJtaTransactionManager(java.lang.Object)#java/lang/StringBuilder/StringBuilder()
org/springframework/orm/hibernate4/LocalSessionFactoryBuilder/setJtaTransactionManager(java.lang.Object)#org/springframework/transaction/jta/JtaTransactionManager/getTransactionSynchronizationRegistry()
org/springframework/orm/hibernate4/LocalSessionFactoryBuilder/setJtaTransactionManager(java.lang.Object)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/springframework/orm/hibernate4/LocalSessionFactoryBuilder/setJtaTransactionManager(java.lang.Object)#java/lang/StringBuilder/toString()
org/springframework/orm/hibernate4/LocalSessionFactoryBuilder/setJtaTransactionManager(java.lang.Object)#org/springframework/transaction/jta/JtaTransactionManager/getUserTransaction()
org/springframework/orm/hibernate4/LocalSessionFactoryBuilder/setJtaTransactionManager(java.lang.Object)#java/lang/Class/getName()
org/springframework/orm/hibernate4/LocalSessionFactoryBuilder/setJtaTransactionManager(java.lang.Object)#org/springframework/util/Assert/notNull(java.lang.Object,java.lang.String)
org/springframework/orm/hibernate4/LocalSessionFactoryBuilder/setJtaTransactionManager(java.lang.Object)#java/lang/Object/getClass()
org/springframework/orm/hibernate4/LocalSessionFactoryBuilder/setJtaTransactionManager(java.lang.Object)#java/lang/Class/getClassLoader()
org/springframework/orm/hibernate3/SessionFactoryUtils/convertHibernateAccessException(org.hibernate.HibernateException)#org/hibernate/PessimisticLockException/getSQL()
org/springframework/orm/hibernate3/SessionFactoryUtils/convertHibernateAccessException(org.hibernate.HibernateException)#org/springframework/dao/DataIntegrityViolationException/DataIntegrityViolationException(java.lang.String,java.lang.Throwable)
org/springframework/orm/hibernate3/SessionFactoryUtils/convertHibernateAccessException(org.hibernate.HibernateException)#java/lang/StringBuilder/append(java.lang.String)
org/springframework/orm/hibernate3/SessionFactoryUtils/convertHibernateAccessException(org.hibernate.HibernateException)#org/springframework/dao/InvalidDataAccessResourceUsageException/InvalidDataAccessResourceUsageException(java.lang.String,java.lang.Throwable)
org/springframework/orm/hibernate3/SessionFactoryUtils/convertHibernateAccessException(org.hibernate.HibernateException)#org/hibernate/exception/LockAcquisitionException/getSQL()
org/springframework/orm/hibernate3/SessionFactoryUtils/convertHibernateAccessException(org.hibernate.HibernateException)#org/springframework/dao/QueryTimeoutException/QueryTimeoutException(java.lang.String,java.lang.Throwable)
org/springframework/orm/hibernate3/SessionFactoryUtils/convertHibernateAccessException(org.hibernate.HibernateException)#org/hibernate/exception/ConstraintViolationException/getConstraintName()
org/springframework/orm/hibernate3/SessionFactoryUtils/convertHibernateAccessException(org.hibernate.HibernateException)#org/springframework/dao/IncorrectResultSizeDataAccessException/IncorrectResultSizeDataAccessException(java.lang.String,int,java.lang.Throwable)
org/springframework/orm/hibernate3/SessionFactoryUtils/convertHibernateAccessException(org.hibernate.HibernateException)#org/hibernate/exception/DataException/getSQL()
org/springframework/orm/hibernate3/SessionFactoryUtils/convertHibernateAccessException(org.hibernate.HibernateException)#org/springframework/dao/DataAccessResourceFailureException/DataAccessResourceFailureException(java.lang.String,java.lang.Throwable)
org/springframework/orm/hibernate3/SessionFactoryUtils/convertHibernateAccessException(org.hibernate.HibernateException)#org/springframework/dao/InvalidDataAccessApiUsageException/InvalidDataAccessApiUsageException(java.lang.String,java.lang.Throwable)
org/springframework/orm/hibernate3/SessionFactoryUtils/convertHibernateAccessException(org.hibernate.HibernateException)#org/springframework/dao/PessimisticLockingFailureException/PessimisticLockingFailureException(java.lang.String,java.lang.Throwable)
org/springframework/orm/hibernate3/SessionFactoryUtils/convertHibernateAccessException(org.hibernate.HibernateException)#org/springframework/dao/CannotAcquireLockException/CannotAcquireLockException(java.lang.String,java.lang.Throwable)
org/springframework/orm/hibernate3/SessionFactoryUtils/convertHibernateAccessException(org.hibernate.HibernateException)#org/hibernate/QueryTimeoutException/getSQL()
org/springframework/orm/hibernate3/SessionFactoryUtils/convertHibernateAccessException(org.hibernate.HibernateException)#org/hibernate/exception/SQLGrammarException/getSQL()
org/springframework/orm/hibernate3/SessionFactoryUtils/convertHibernateAccessException(org.hibernate.HibernateException)#java/lang/StringBuilder/StringBuilder()
org/springframework/orm/hibernate3/SessionFactoryUtils/convertHibernateAccessException(org.hibernate.HibernateException)#org/hibernate/exception/ConstraintViolationException/getSQL()
org/springframework/orm/hibernate3/SessionFactoryUtils/convertHibernateAccessException(org.hibernate.HibernateException)#org/hibernate/HibernateException/getMessage()
org/springframework/orm/hibernate3/SessionFactoryUtils/convertHibernateAccessException(org.hibernate.HibernateException)#java/lang/StringBuilder/toString()
org/springframework/orm/hibernate3/SessionFactoryUtils/convertHibernateAccessException(org.hibernate.HibernateException)#org/springframework/dao/DuplicateKeyException/DuplicateKeyException(java.lang.String,java.lang.Throwable)
org/springframework/orm/hibernate3/SessionFactoryUtils/doGetSession(org.hibernate.SessionFactory,org.hibernate.Interceptor,org.springframework.jdbc.support.SQLExceptionTranslator,boolean)#org/hibernate/FlushMode/lessThan(org.hibernate.FlushMode)
org/springframework/orm/hibernate3/SessionFactoryUtils/doGetSession(org.hibernate.SessionFactory,org.hibernate.Interceptor,org.springframework.jdbc.support.SQLExceptionTranslator,boolean)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/springframework/orm/hibernate3/SessionFactoryUtils/doGetSession(org.hibernate.SessionFactory,org.hibernate.Interceptor,org.springframework.jdbc.support.SQLExceptionTranslator,boolean)#org/hibernate/Session/setFlushMode(org.hibernate.FlushMode)
org/springframework/orm/hibernate3/SessionFactoryUtils/doGetSession(org.hibernate.SessionFactory,org.hibernate.Interceptor,org.springframework.jdbc.support.SQLExceptionTranslator,boolean)#org/springframework/orm/hibernate3/SessionHolder/isSynchronizedWithTransaction()
org/springframework/orm/hibernate3/SessionFactoryUtils/doGetSession(org.hibernate.SessionFactory,org.hibernate.Interceptor,org.springframework.jdbc.support.SQLExceptionTranslator,boolean)#org/springframework/transaction/support/TransactionSynchronizationManager/isCurrentTransactionReadOnly()
org/springframework/orm/hibernate3/SessionFactoryUtils/doGetSession(org.hibernate.SessionFactory,org.hibernate.Interceptor,org.springframework.jdbc.support.SQLExceptionTranslator,boolean)#org/hibernate/Session/getFlushMode()
org/springframework/orm/hibernate3/SessionFactoryUtils/doGetSession(org.hibernate.SessionFactory,org.hibernate.Interceptor,org.springframework.jdbc.support.SQLExceptionTranslator,boolean)#org/springframework/transaction/support/TransactionSynchronizationManager/getResource(java.lang.Object)
org/springframework/orm/hibernate3/SessionFactoryUtils/doGetSession(org.hibernate.SessionFactory,org.hibernate.Interceptor,org.springframework.jdbc.support.SQLExceptionTranslator,boolean)#org/hibernate/SessionFactory/openSession(org.hibernate.Interceptor)
org/springframework/orm/hibernate3/SessionFactoryUtils/doGetSession(org.hibernate.SessionFactory,org.hibernate.Interceptor,org.springframework.jdbc.support.SQLExceptionTranslator,boolean)#org/springframework/transaction/support/TransactionSynchronizationManager/isSynchronizationActive()
org/springframework/orm/hibernate3/SessionFactoryUtils/doGetSession(org.hibernate.SessionFactory,org.hibernate.Interceptor,org.springframework.jdbc.support.SQLExceptionTranslator,boolean)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/springframework/orm/hibernate3/SessionFactoryUtils/doGetSession(org.hibernate.SessionFactory,org.hibernate.Interceptor,org.springframework.jdbc.support.SQLExceptionTranslator,boolean)#org/springframework/transaction/support/TransactionSynchronizationManager/registerSynchronization(org.springframework.transaction.support.TransactionSynchronization)
org/springframework/orm/hibernate3/SessionFactoryUtils/doGetSession(org.hibernate.SessionFactory,org.hibernate.Interceptor,org.springframework.jdbc.support.SQLExceptionTranslator,boolean)#org/springframework/orm/hibernate3/SessionHolder/setSynchronizedWithTransaction(boolean)
org/springframework/orm/hibernate3/SessionFactoryUtils/doGetSession(org.hibernate.SessionFactory,org.hibernate.Interceptor,org.springframework.jdbc.support.SQLExceptionTranslator,boolean)#org/hibernate/SessionFactory/openSession()
org/springframework/orm/hibernate3/SessionFactoryUtils/doGetSession(org.hibernate.SessionFactory,org.hibernate.Interceptor,org.springframework.jdbc.support.SQLExceptionTranslator,boolean)#org/springframework/util/Assert/notNull(java.lang.Object,java.lang.String)
org/springframework/orm/hibernate3/SessionFactoryUtils/doGetSession(org.hibernate.SessionFactory,org.hibernate.Interceptor,org.springframework.jdbc.support.SQLExceptionTranslator,boolean)#org/springframework/transaction/support/TransactionSynchronizationManager/bindResource(java.lang.Object,java.lang.Object)
org/springframework/orm/hibernate3/SessionFactoryUtils/getJtaSynchronizedSession(org.springframework.orm.hibernate3.SessionHolder,org.hibernate.SessionFactory,org.springframework.jdbc.support.SQLExceptionTranslator)#org/hibernate/FlushMode/lessThan(org.hibernate.FlushMode)
org/springframework/orm/hibernate3/SessionFactoryUtils/getJtaSynchronizedSession(org.springframework.orm.hibernate3.SessionHolder,org.hibernate.SessionFactory,org.springframework.jdbc.support.SQLExceptionTranslator)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/springframework/orm/hibernate3/SessionFactoryUtils/getJtaSynchronizedSession(org.springframework.orm.hibernate3.SessionHolder,org.hibernate.SessionFactory,org.springframework.jdbc.support.SQLExceptionTranslator)#org/hibernate/Session/setFlushMode(org.hibernate.FlushMode)
org/springframework/orm/hibernate3/SessionFactoryUtils/getJtaSynchronizedSession(org.springframework.orm.hibernate3.SessionHolder,org.hibernate.SessionFactory,org.springframework.jdbc.support.SQLExceptionTranslator)#javax/transaction/Transaction/getStatus()
org/springframework/orm/hibernate3/SessionFactoryUtils/getJtaSynchronizedSession(org.springframework.orm.hibernate3.SessionHolder,org.hibernate.SessionFactory,org.springframework.jdbc.support.SQLExceptionTranslator)#org/hibernate/Session/getFlushMode()
org/springframework/orm/hibernate3/SessionFactoryUtils/getJtaSynchronizedSession(org.springframework.orm.hibernate3.SessionHolder,org.hibernate.SessionFactory,org.springframework.jdbc.support.SQLExceptionTranslator)#javax/transaction/Transaction/registerSynchronization(javax.transaction.Synchronization)
org/springframework/orm/hibernate3/SessionFactoryUtils/getJtaSynchronizedSession(org.springframework.orm.hibernate3.SessionHolder,org.hibernate.SessionFactory,org.springframework.jdbc.support.SQLExceptionTranslator)#org/springframework/orm/hibernate3/SessionHolder/setSynchronizedWithTransaction(boolean)
org/springframework/orm/hibernate3/SessionFactoryUtils/getJtaSynchronizedSession(org.springframework.orm.hibernate3.SessionHolder,org.hibernate.SessionFactory,org.springframework.jdbc.support.SQLExceptionTranslator)#org/springframework/transaction/jta/SpringJtaSynchronizationAdapter/SpringJtaSynchronizationAdapter(org.springframework.transaction.support.TransactionSynchronization,javax.transaction.TransactionManager)
org/springframework/orm/hibernate3/SessionFactoryUtils/getJtaSynchronizedSession(org.springframework.orm.hibernate3.SessionHolder,org.hibernate.SessionFactory,org.springframework.jdbc.support.SQLExceptionTranslator)#javax/transaction/TransactionManager/getTransaction()
org/springframework/orm/hibernate3/SessionFactoryUtils/getJtaSynchronizedSession(org.springframework.orm.hibernate3.SessionHolder,org.hibernate.SessionFactory,org.springframework.jdbc.support.SQLExceptionTranslator)#org/springframework/dao/DataAccessResourceFailureException/DataAccessResourceFailureException(java.lang.String,java.lang.Throwable)
org/springframework/orm/hibernate3/SessionFactoryUtils/getJtaSynchronizedSession(org.springframework.orm.hibernate3.SessionHolder,org.hibernate.SessionFactory,org.springframework.jdbc.support.SQLExceptionTranslator)#org/springframework/orm/hibernate3/SessionHolder/isSynchronizedWithTransaction()
org/springframework/orm/hibernate3/SessionFactoryUtils/processDeferredClose(org.hibernate.SessionFactory)#java/lang/ThreadLocal/remove()
org/springframework/orm/hibernate3/SessionFactoryUtils/processDeferredClose(org.hibernate.SessionFactory)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/springframework/orm/hibernate3/SessionFactoryUtils/processDeferredClose(org.hibernate.SessionFactory)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/springframework/orm/hibernate3/SessionFactoryUtils/processDeferredClose(org.hibernate.SessionFactory)#java/util/Iterator/hasNext()
org/springframework/orm/hibernate3/SessionFactoryUtils/processDeferredClose(org.hibernate.SessionFactory)#java/lang/StringBuilder/append(java.lang.String)
org/springframework/orm/hibernate3/SessionFactoryUtils/processDeferredClose(org.hibernate.SessionFactory)#java/util/Map/isEmpty()
org/springframework/orm/hibernate3/SessionFactoryUtils/processDeferredClose(org.hibernate.SessionFactory)#java/lang/StringBuilder/StringBuilder()
org/springframework/orm/hibernate3/SessionFactoryUtils/processDeferredClose(org.hibernate.SessionFactory)#java/util/Set/iterator()
org/springframework/orm/hibernate3/SessionFactoryUtils/processDeferredClose(org.hibernate.SessionFactory)#java/util/Map/containsKey(java.lang.Object)
org/springframework/orm/hibernate3/SessionFactoryUtils/processDeferredClose(org.hibernate.SessionFactory)#org/springframework/util/Assert/notNull(java.lang.Object,java.lang.String)
org/springframework/orm/hibernate3/SessionFactoryUtils/processDeferredClose(org.hibernate.SessionFactory)#java/lang/StringBuilder/append(java.lang.Object)
org/springframework/orm/hibernate3/SessionFactoryUtils/processDeferredClose(org.hibernate.SessionFactory)#java/util/Map/remove(java.lang.Object)
org/springframework/orm/hibernate3/SessionFactoryUtils/processDeferredClose(org.hibernate.SessionFactory)#java/lang/StringBuilder/toString()
org/springframework/orm/hibernate3/SessionFactoryUtils/processDeferredClose(org.hibernate.SessionFactory)#java/util/Iterator/next()
org/springframework/orm/hibernate3/SessionFactoryUtils/processDeferredClose(org.hibernate.SessionFactory)#java/lang/ThreadLocal/get()
org/springframework/orm/jpa/ExtendedEntityManagerCreator/ExtendedEntityManagerInvocationHandler/doJoinTransaction(boolean)#javax/persistence/TransactionRequiredException/TransactionRequiredException(java.lang.String)
org/springframework/orm/jpa/ExtendedEntityManagerCreator/ExtendedEntityManagerInvocationHandler/doJoinTransaction(boolean)#javax/persistence/EntityTransaction/isActive()
org/springframework/orm/jpa/ExtendedEntityManagerCreator/ExtendedEntityManagerInvocationHandler/doJoinTransaction(boolean)#java/lang/StringBuilder/append(java.lang.String)
org/springframework/orm/jpa/ExtendedEntityManagerCreator/ExtendedEntityManagerInvocationHandler/doJoinTransaction(boolean)#org/springframework/orm/jpa/ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler/enlistInCurrentTransaction()
org/springframework/orm/jpa/ExtendedEntityManagerCreator/ExtendedEntityManagerInvocationHandler/doJoinTransaction(boolean)#javax/persistence/EntityManager/getTransaction()
org/springframework/orm/jpa/ExtendedEntityManagerCreator/ExtendedEntityManagerInvocationHandler/doJoinTransaction(boolean)#org/springframework/transaction/support/TransactionSynchronizationManager/hasResource(java.lang.Object)
org/springframework/orm/jpa/ExtendedEntityManagerCreator/ExtendedEntityManagerInvocationHandler/doJoinTransaction(boolean)#java/lang/StringBuilder/StringBuilder()
org/springframework/orm/jpa/ExtendedEntityManagerCreator/ExtendedEntityManagerInvocationHandler/doJoinTransaction(boolean)#java/lang/StringBuilder/toString()
org/springframework/orm/jpa/ExtendedEntityManagerCreator/ExtendedEntityManagerInvocationHandler/doJoinTransaction(boolean)#javax/persistence/EntityManager/joinTransaction()
org/springframework/orm/jpa/ExtendedEntityManagerCreator/ExtendedEntityManagerInvocationHandler/doJoinTransaction(boolean)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/springframework/orm/jpa/ExtendedEntityManagerCreator/ExtendedEntityManagerInvocationHandler/doJoinTransaction(boolean)#java/lang/StringBuilder/append(java.lang.Object)
org/springframework/orm/jpa/ExtendedEntityManagerCreator/ExtendedEntityManagerInvocationHandler/doJoinTransaction(boolean)#org/springframework/transaction/support/TransactionSynchronizationManager/isSynchronizationActive()
org/springframework/orm/jpa/ExtendedEntityManagerCreator/ExtendedEntityManagerInvocationHandler/enlistInCurrentTransaction()#org/apache/commons/logging/Log/debug(java.lang.Object)
org/springframework/orm/jpa/ExtendedEntityManagerCreator/ExtendedEntityManagerInvocationHandler/enlistInCurrentTransaction()#org/springframework/transaction/support/TransactionSynchronizationManager/registerSynchronization(org.springframework.transaction.support.TransactionSynchronization)
org/springframework/orm/jpa/ExtendedEntityManagerCreator/ExtendedEntityManagerInvocationHandler/enlistInCurrentTransaction()#org/apache/commons/logging/Log/isDebugEnabled()
org/springframework/orm/jpa/ExtendedEntityManagerCreator/ExtendedEntityManagerInvocationHandler/enlistInCurrentTransaction()#javax/persistence/EntityManager/getTransaction()
org/springframework/orm/jpa/ExtendedEntityManagerCreator/ExtendedEntityManagerInvocationHandler/enlistInCurrentTransaction()#org/springframework/transaction/support/TransactionSynchronizationManager/bindResource(java.lang.Object,java.lang.Object)
org/springframework/orm/jpa/ExtendedEntityManagerCreator/ExtendedEntityManagerInvocationHandler/enlistInCurrentTransaction()#java/lang/StringBuilder/append(java.lang.Object)
org/springframework/orm/jpa/ExtendedEntityManagerCreator/ExtendedEntityManagerInvocationHandler/enlistInCurrentTransaction()#java/lang/StringBuilder/toString()
org/springframework/orm/jpa/ExtendedEntityManagerCreator/ExtendedEntityManagerInvocationHandler/enlistInCurrentTransaction()#javax/persistence/EntityTransaction/begin()
org/springframework/orm/jpa/ExtendedEntityManagerCreator/ExtendedEntityManagerInvocationHandler/enlistInCurrentTransaction()#java/lang/StringBuilder/append(java.lang.String)
org/springframework/orm/jpa/ExtendedEntityManagerCreator/ExtendedEntityManagerInvocationHandler/enlistInCurrentTransaction()#java/lang/StringBuilder/StringBuilder()
org/springframework/orm/jpa/ExtendedEntityManagerCreator/ExtendedEntityManagerInvocationHandler/enlistInCurrentTransaction()#org/springframework/orm/jpa/ExtendedEntityManagerCreator$ExtendedEntityManagerSynchronization/ExtendedEntityManagerSynchronization(javax.persistence.EntityManager,org.springframework.dao.support.PersistenceExceptionTranslator)
org/springframework/orm/jpa/ExtendedEntityManagerCreator/ExtendedEntityManagerInvocationHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/lang/Class/isInterface()
org/springframework/orm/jpa/ExtendedEntityManagerCreator/ExtendedEntityManagerInvocationHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/springframework/orm/jpa/ExtendedEntityManagerCreator/ExtendedEntityManagerInvocationHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/lang/reflect/InvocationTargetException/getTargetException()
org/springframework/orm/jpa/ExtendedEntityManagerCreator/ExtendedEntityManagerInvocationHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#org/springframework/transaction/support/TransactionSynchronizationManager/getResource(java.lang.Object)
org/springframework/orm/jpa/ExtendedEntityManagerCreator/ExtendedEntityManagerInvocationHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/lang/Class/isInstance(java.lang.Object)
org/springframework/orm/jpa/ExtendedEntityManagerCreator/ExtendedEntityManagerInvocationHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/lang/String/equals(java.lang.Object)
org/springframework/orm/jpa/ExtendedEntityManagerCreator/ExtendedEntityManagerInvocationHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/lang/Boolean/valueOf(boolean)
org/springframework/orm/jpa/ExtendedEntityManagerCreator/ExtendedEntityManagerInvocationHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/lang/reflect/Method/getDeclaringClass()
org/springframework/orm/jpa/ExtendedEntityManagerCreator/ExtendedEntityManagerInvocationHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/lang/reflect/Method/invoke(java.lang.Object,java.lang.Object[])
org/springframework/orm/jpa/ExtendedEntityManagerCreator/ExtendedEntityManagerInvocationHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#org/springframework/transaction/support/TransactionSynchronizationManager/hasResource(java.lang.Object)
org/springframework/orm/jpa/ExtendedEntityManagerCreator/ExtendedEntityManagerInvocationHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/lang/Object/hashCode()
org/springframework/orm/jpa/ExtendedEntityManagerCreator/ExtendedEntityManagerInvocationHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/lang/reflect/Method/getName()
org/springframework/orm/jpa/ExtendedEntityManagerCreator/ExtendedEntityManagerInvocationHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#org/springframework/orm/jpa/ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler/doJoinTransaction(boolean)
org/springframework/orm/jpa/ExtendedEntityManagerCreator/ExtendedEntityManagerInvocationHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/lang/Integer/valueOf(int)
org/springframework/orm/jpa/SharedEntityManagerCreator/SharedEntityManagerInvocationHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/springframework/orm/jpa/SharedEntityManagerCreator/SharedEntityManagerInvocationHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#javax/persistence/TransactionRequiredException/TransactionRequiredException(java.lang.String)
org/springframework/orm/jpa/SharedEntityManagerCreator/SharedEntityManagerInvocationHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#org/springframework/orm/jpa/SharedEntityManagerCreator$DeferredQueryInvocationHandler/DeferredQueryInvocationHandler(javax.persistence.Query,javax.persistence.EntityManager)
org/springframework/orm/jpa/SharedEntityManagerCreator/SharedEntityManagerInvocationHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#org/springframework/util/CollectionUtils/isEmpty(java.util.Map)
org/springframework/orm/jpa/SharedEntityManagerCreator/SharedEntityManagerInvocationHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/lang/Class/isInstance(java.lang.Object)
org/springframework/orm/jpa/SharedEntityManagerCreator/SharedEntityManagerInvocationHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/lang/StringBuilder/StringBuilder()
org/springframework/orm/jpa/SharedEntityManagerCreator/SharedEntityManagerInvocationHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/lang/Integer/valueOf(int)
org/springframework/orm/jpa/SharedEntityManagerCreator/SharedEntityManagerInvocationHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/lang/reflect/Method/invoke(java.lang.Object,java.lang.Object[])
org/springframework/orm/jpa/SharedEntityManagerCreator/SharedEntityManagerInvocationHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/lang/StringBuilder/toString()
org/springframework/orm/jpa/SharedEntityManagerCreator/SharedEntityManagerInvocationHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#javax/persistence/EntityManagerFactory/createEntityManager()
org/springframework/orm/jpa/SharedEntityManagerCreator/SharedEntityManagerInvocationHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#org/apache/commons/logging/Log/debug(java.lang.Object)
org/springframework/orm/jpa/SharedEntityManagerCreator/SharedEntityManagerInvocationHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/lang/reflect/Proxy/newProxyInstance(java.lang.ClassLoader,java.lang.Class[],java.lang.reflect.InvocationHandler)
org/springframework/orm/jpa/SharedEntityManagerCreator/SharedEntityManagerInvocationHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#javax/persistence/EntityManagerFactory/createEntityManager(java.util.Map)
org/springframework/orm/jpa/SharedEntityManagerCreator/SharedEntityManagerInvocationHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/lang/StringBuilder/append(java.lang.String)
org/springframework/orm/jpa/SharedEntityManagerCreator/SharedEntityManagerInvocationHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/lang/reflect/InvocationTargetException/getTargetException()
org/springframework/orm/jpa/SharedEntityManagerCreator/SharedEntityManagerInvocationHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/lang/Class/getMethod(java.lang.String,java.lang.Class[])
org/springframework/orm/jpa/SharedEntityManagerCreator/SharedEntityManagerInvocationHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/lang/String/equals(java.lang.Object)
org/springframework/orm/jpa/SharedEntityManagerCreator/SharedEntityManagerInvocationHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/lang/Object/hashCode()
org/springframework/orm/jpa/SharedEntityManagerCreator/SharedEntityManagerInvocationHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/util/Set/contains(java.lang.Object)
org/springframework/orm/jpa/SharedEntityManagerCreator/SharedEntityManagerInvocationHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/lang/reflect/Method/getName()
org/springframework/orm/jpa/SharedEntityManagerCreator/SharedEntityManagerInvocationHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/lang/Boolean/valueOf(boolean)
org/springframework/orm/jpa/SharedEntityManagerCreator/SharedEntityManagerInvocationHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#org/springframework/util/ClassUtils/getAllInterfacesForClass(java.lang.Class,java.lang.ClassLoader)
org/springframework/orm/jpa/SharedEntityManagerCreator/SharedEntityManagerInvocationHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/lang/StringBuilder/append(java.lang.Object)
org/springframework/orm/jpa/SharedEntityManagerCreator/SharedEntityManagerInvocationHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/lang/Object/getClass()
org/springframework/orm/jpa/support/OpenEntityManagerInViewInterceptor/preHandle(org.springframework.web.context.request.WebRequest)#java/lang/Integer/intValue()
org/springframework/orm/jpa/support/OpenEntityManagerInViewInterceptor/preHandle(org.springframework.web.context.request.WebRequest)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/springframework/orm/jpa/support/OpenEntityManagerInViewInterceptor/preHandle(org.springframework.web.context.request.WebRequest)#org/springframework/web/context/request/async/WebAsyncManager/hasConcurrentResult()
org/springframework/orm/jpa/support/OpenEntityManagerInViewInterceptor/preHandle(org.springframework.web.context.request.WebRequest)#org/springframework/web/context/request/WebRequest/getAttribute(java.lang.String,int)
org/springframework/orm/jpa/support/OpenEntityManagerInViewInterceptor/preHandle(org.springframework.web.context.request.WebRequest)#org/springframework/web/context/request/async/WebAsyncUtils/getAsyncManager(org.springframework.web.context.request.WebRequest)
org/springframework/orm/jpa/support/OpenEntityManagerInViewInterceptor/preHandle(org.springframework.web.context.request.WebRequest)#org/springframework/orm/jpa/support/OpenEntityManagerInViewInterceptor/createEntityManager()
org/springframework/orm/jpa/support/OpenEntityManagerInViewInterceptor/preHandle(org.springframework.web.context.request.WebRequest)#org/springframework/transaction/support/TransactionSynchronizationManager/bindResource(java.lang.Object,java.lang.Object)
org/springframework/orm/jpa/support/OpenEntityManagerInViewInterceptor/preHandle(org.springframework.web.context.request.WebRequest)#java/lang/Integer/valueOf(int)
org/springframework/orm/jpa/support/OpenEntityManagerInViewInterceptor/preHandle(org.springframework.web.context.request.WebRequest)#org/springframework/orm/jpa/support/OpenEntityManagerInViewInterceptor/getEntityManagerFactory()
org/springframework/orm/jpa/support/OpenEntityManagerInViewInterceptor/preHandle(org.springframework.web.context.request.WebRequest)#org/springframework/web/context/request/WebRequest/setAttribute(java.lang.String,java.lang.Object,int)
org/springframework/orm/jpa/support/OpenEntityManagerInViewInterceptor/preHandle(org.springframework.web.context.request.WebRequest)#org/springframework/dao/DataAccessResourceFailureException/DataAccessResourceFailureException(java.lang.String,java.lang.Throwable)
org/springframework/orm/jpa/support/OpenEntityManagerInViewInterceptor/preHandle(org.springframework.web.context.request.WebRequest)#org/springframework/transaction/support/TransactionSynchronizationManager/hasResource(java.lang.Object)
org/springframework/orm/jpa/support/OpenEntityManagerInViewInterceptor/preHandle(org.springframework.web.context.request.WebRequest)#org/springframework/web/context/request/async/WebAsyncManager/registerDeferredResultInterceptor(java.lang.Object,org.springframework.web.context.request.async.DeferredResultProcessingInterceptor)
org/springframework/orm/jpa/support/OpenEntityManagerInViewInterceptor/preHandle(org.springframework.web.context.request.WebRequest)#org/springframework/web/context/request/async/WebAsyncManager/registerCallableInterceptor(java.lang.Object,org.springframework.web.context.request.async.CallableProcessingInterceptor)
org/springframework/orm/jdo/PersistenceManagerFactoryUtils/applyTransactionTimeout(javax.jdo.Query,javax.jdo.PersistenceManagerFactory)#org/springframework/orm/jdo/PersistenceManagerHolder/getTimeToLiveInMillis()
org/springframework/orm/jdo/PersistenceManagerFactoryUtils/applyTransactionTimeout(javax.jdo.Query,javax.jdo.PersistenceManagerFactory)#javax/jdo/Query/setDatastoreWriteTimeoutMillis(java.lang.Integer)
org/springframework/orm/jdo/PersistenceManagerFactoryUtils/applyTransactionTimeout(javax.jdo.Query,javax.jdo.PersistenceManagerFactory)#org/springframework/transaction/support/TransactionSynchronizationManager/getResource(java.lang.Object)
org/springframework/orm/jdo/PersistenceManagerFactoryUtils/applyTransactionTimeout(javax.jdo.Query,javax.jdo.PersistenceManagerFactory)#org/springframework/util/Assert/notNull(java.lang.Object,java.lang.String)
org/springframework/orm/jdo/PersistenceManagerFactoryUtils/applyTransactionTimeout(javax.jdo.Query,javax.jdo.PersistenceManagerFactory)#java/lang/Integer/valueOf(int)
org/springframework/orm/jdo/PersistenceManagerFactoryUtils/applyTransactionTimeout(javax.jdo.Query,javax.jdo.PersistenceManagerFactory)#java/util/Collection/contains(java.lang.Object)
org/springframework/orm/jdo/PersistenceManagerFactoryUtils/applyTransactionTimeout(javax.jdo.Query,javax.jdo.PersistenceManagerFactory)#javax/jdo/Query/setDatastoreReadTimeoutMillis(java.lang.Integer)
org/springframework/orm/jdo/PersistenceManagerFactoryUtils/applyTransactionTimeout(javax.jdo.Query,javax.jdo.PersistenceManagerFactory)#org/springframework/orm/jdo/PersistenceManagerHolder/hasTimeout()
org/springframework/orm/jdo/PersistenceManagerFactoryUtils/applyTransactionTimeout(javax.jdo.Query,javax.jdo.PersistenceManagerFactory)#javax/jdo/PersistenceManagerFactory/supportedOptions()
org/springframework/orm/jdo/PersistenceManagerFactoryUtils/doGetPersistenceManager(javax.jdo.PersistenceManagerFactory,boolean)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/springframework/orm/jdo/PersistenceManagerFactoryUtils/doGetPersistenceManager(javax.jdo.PersistenceManagerFactory,boolean)#org/springframework/orm/jdo/PersistenceManagerHolder/isSynchronizedWithTransaction()
org/springframework/orm/jdo/PersistenceManagerFactoryUtils/doGetPersistenceManager(javax.jdo.PersistenceManagerFactory,boolean)#org/springframework/transaction/support/TransactionSynchronizationManager/getResource(java.lang.Object)
org/springframework/orm/jdo/PersistenceManagerFactoryUtils/doGetPersistenceManager(javax.jdo.PersistenceManagerFactory,boolean)#org/springframework/orm/jdo/PersistenceManagerHolder/setSynchronizedWithTransaction(boolean)
org/springframework/orm/jdo/PersistenceManagerFactoryUtils/doGetPersistenceManager(javax.jdo.PersistenceManagerFactory,boolean)#org/springframework/orm/jdo/PersistenceManagerFactoryUtils$PersistenceManagerSynchronization/PersistenceManagerSynchronization(org.springframework.orm.jdo.PersistenceManagerHolder,javax.jdo.PersistenceManagerFactory,boolean)
org/springframework/orm/jdo/PersistenceManagerFactoryUtils/doGetPersistenceManager(javax.jdo.PersistenceManagerFactory,boolean)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/springframework/orm/jdo/PersistenceManagerFactoryUtils/doGetPersistenceManager(javax.jdo.PersistenceManagerFactory,boolean)#org/springframework/transaction/support/TransactionSynchronizationManager/registerSynchronization(org.springframework.transaction.support.TransactionSynchronization)
org/springframework/orm/jdo/PersistenceManagerFactoryUtils/doGetPersistenceManager(javax.jdo.PersistenceManagerFactory,boolean)#org/springframework/util/Assert/notNull(java.lang.Object,java.lang.String)
org/springframework/orm/jdo/PersistenceManagerFactoryUtils/doGetPersistenceManager(javax.jdo.PersistenceManagerFactory,boolean)#org/springframework/transaction/support/TransactionSynchronizationManager/bindResource(java.lang.Object,java.lang.Object)
org/springframework/orm/jdo/PersistenceManagerFactoryUtils/doGetPersistenceManager(javax.jdo.PersistenceManagerFactory,boolean)#javax/jdo/PersistenceManagerFactory/getPersistenceManager()
org/springframework/orm/jdo/PersistenceManagerFactoryUtils/doGetPersistenceManager(javax.jdo.PersistenceManagerFactory,boolean)#org/springframework/transaction/support/TransactionSynchronizationManager/isSynchronizationActive()
org/springframework/orm/jpa/persistenceunit/ClassFileTransformerAdapter/transform(java.lang.ClassLoader,java.lang.String,java.lang.Class,java.security.ProtectionDomain,byte[])#org/apache/commons/logging/Log/debug(java.lang.Object)
org/springframework/orm/jpa/persistenceunit/ClassFileTransformerAdapter/transform(java.lang.ClassLoader,java.lang.String,java.lang.Class,java.security.ProtectionDomain,byte[])#java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)
org/springframework/orm/jpa/persistenceunit/ClassFileTransformerAdapter/transform(java.lang.ClassLoader,java.lang.String,java.lang.Class,java.security.ProtectionDomain,byte[])#java/lang/StringBuilder/append(java.lang.String)
org/springframework/orm/jpa/persistenceunit/ClassFileTransformerAdapter/transform(java.lang.ClassLoader,java.lang.String,java.lang.Class,java.security.ProtectionDomain,byte[])#java/lang/StringBuilder/append(int)
org/springframework/orm/jpa/persistenceunit/ClassFileTransformerAdapter/transform(java.lang.ClassLoader,java.lang.String,java.lang.Class,java.security.ProtectionDomain,byte[])#org/apache/commons/logging/Log/isDebugEnabled()
org/springframework/orm/jpa/persistenceunit/ClassFileTransformerAdapter/transform(java.lang.ClassLoader,java.lang.String,java.lang.Class,java.security.ProtectionDomain,byte[])#java/lang/Class/getName()
org/springframework/orm/jpa/persistenceunit/ClassFileTransformerAdapter/transform(java.lang.ClassLoader,java.lang.String,java.lang.Class,java.security.ProtectionDomain,byte[])#org/apache/commons/logging/Log/isWarnEnabled()
org/springframework/orm/jpa/persistenceunit/ClassFileTransformerAdapter/transform(java.lang.ClassLoader,java.lang.String,java.lang.Class,java.security.ProtectionDomain,byte[])#java/lang/StringBuilder/StringBuilder()
org/springframework/orm/jpa/persistenceunit/ClassFileTransformerAdapter/transform(java.lang.ClassLoader,java.lang.String,java.lang.Class,java.security.ProtectionDomain,byte[])#org/apache/commons/logging/Log/error(java.lang.Object,java.lang.Throwable)
org/springframework/orm/jpa/persistenceunit/ClassFileTransformerAdapter/transform(java.lang.ClassLoader,java.lang.String,java.lang.Class,java.security.ProtectionDomain,byte[])#java/lang/Object/getClass()
org/springframework/orm/jpa/persistenceunit/ClassFileTransformerAdapter/transform(java.lang.ClassLoader,java.lang.String,java.lang.Class,java.security.ProtectionDomain,byte[])#java/lang/StringBuilder/toString()
org/springframework/orm/jpa/persistenceunit/ClassFileTransformerAdapter/transform(java.lang.ClassLoader,java.lang.String,java.lang.Class,java.security.ProtectionDomain,byte[])#org/apache/commons/logging/Log/warn(java.lang.Object,java.lang.Throwable)
org/springframework/orm/jpa/persistenceunit/ClassFileTransformerAdapter/transform(java.lang.ClassLoader,java.lang.String,java.lang.Class,java.security.ProtectionDomain,byte[])#javax/persistence/spi/ClassTransformer/transform(java.lang.ClassLoader,java.lang.String,java.lang.Class,java.security.ProtectionDomain,byte[])
org/springframework/orm/jdo/JdoTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#org/springframework/orm/jdo/JdoTransactionManager$JdoTransactionObject/setConnectionHolder(org.springframework.jdbc.datasource.ConnectionHolder)
org/springframework/orm/jdo/JdoTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/springframework/orm/jdo/JdoTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#org/springframework/orm/jdo/PersistenceManagerHolder/isSynchronizedWithTransaction()
org/springframework/orm/jdo/JdoTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#org/apache/commons/logging/Log/isDebugEnabled()
org/springframework/orm/jdo/JdoTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#java/lang/StringBuilder/StringBuilder()
org/springframework/orm/jdo/JdoTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#org/springframework/orm/jdo/JdoTransactionManager$1/1(org.springframework.orm.jdo.JdoTransactionManager,org.springframework.transaction.TransactionDefinition,int)
org/springframework/orm/jdo/JdoTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#org/springframework/transaction/support/TransactionSynchronizationManager/bindResource(java.lang.Object,java.lang.Object)
org/springframework/orm/jdo/JdoTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#org/springframework/orm/jdo/JdoTransactionManager$JdoTransactionObject/getConnectionHolder()
org/springframework/orm/jdo/JdoTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#org/springframework/orm/jdo/JdoTransactionManager$JdoTransactionObject/setPersistenceManagerHolder(org.springframework.orm.jdo.PersistenceManagerHolder,boolean)
org/springframework/orm/jdo/JdoTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#org/springframework/transaction/TransactionDefinition/isReadOnly()
org/springframework/orm/jdo/JdoTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#org/springframework/jdbc/datasource/ConnectionHolder/setTimeoutInSeconds(int)
org/springframework/orm/jdo/JdoTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#java/lang/StringBuilder/append(java.lang.String)
org/springframework/orm/jdo/JdoTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#org/springframework/orm/jdo/JdoTransactionManager$JdoTransactionObject/getPersistenceManagerHolder()
org/springframework/orm/jdo/JdoTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#org/springframework/orm/jdo/JdoTransactionManager$JdoTransactionObject/isNewPersistenceManagerHolder()
org/springframework/orm/jdo/JdoTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#org/springframework/orm/jdo/JdoTransactionManager$JdoTransactionObject/setTransactionData(java.lang.Object)
org/springframework/orm/jdo/JdoTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#org/springframework/jdbc/datasource/ConnectionHolder/isSynchronizedWithTransaction()
org/springframework/orm/jdo/JdoTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#org/springframework/orm/jdo/PersistenceManagerHolder/setTimeoutInSeconds(int)
org/springframework/orm/jdo/JdoTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#javax/jdo/PersistenceManager/currentTransaction()
org/springframework/orm/jdo/JdoTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#org/springframework/jdbc/datasource/ConnectionHolder/getConnectionHandle()
org/springframework/orm/jdo/JdoTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#org/springframework/jdbc/datasource/ConnectionHolder/ConnectionHolder(org.springframework.jdbc.datasource.ConnectionHandle)
org/springframework/orm/jdo/JdoTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#org/springframework/orm/jdo/JdoTransactionManager/determineTimeout(org.springframework.transaction.TransactionDefinition)
org/springframework/orm/jdo/JdoTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#org/springframework/orm/jdo/PersistenceManagerHolder/setSynchronizedWithTransaction(boolean)
org/springframework/orm/jdo/JdoTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#org/springframework/transaction/IllegalTransactionStateException/IllegalTransactionStateException(java.lang.String)
org/springframework/orm/jdo/JdoTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#org/springframework/transaction/CannotCreateTransactionException/CannotCreateTransactionException(java.lang.String,java.lang.Throwable)
org/springframework/orm/jdo/JdoTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#java/lang/StringBuilder/append(java.lang.Object)
org/springframework/orm/jdo/JdoTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#javax/jdo/PersistenceManagerFactory/getPersistenceManager()
org/springframework/orm/jdo/JdoTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#java/lang/StringBuilder/toString()
org/springframework/orm/jdo/JdoTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#org/springframework/orm/jdo/JdoTransactionManager$JdoTransactionObject/hasConnectionHolder()
org/springframework/orm/jdo/JdoTransactionManager/doRollback(org.springframework.transaction.support.DefaultTransactionStatus)#java/lang/StringBuilder/append(java.lang.String)
org/springframework/orm/jdo/JdoTransactionManager/doRollback(org.springframework.transaction.support.DefaultTransactionStatus)#org/springframework/transaction/support/DefaultTransactionStatus/getTransaction()
org/springframework/orm/jdo/JdoTransactionManager/doRollback(org.springframework.transaction.support.DefaultTransactionStatus)#org/springframework/orm/jdo/JdoTransactionManager$JdoTransactionObject/getPersistenceManagerHolder()
org/springframework/orm/jdo/JdoTransactionManager/doRollback(org.springframework.transaction.support.DefaultTransactionStatus)#javax/jdo/Transaction/isActive()
org/springframework/orm/jdo/JdoTransactionManager/doRollback(org.springframework.transaction.support.DefaultTransactionStatus)#javax/jdo/PersistenceManager/currentTransaction()
org/springframework/orm/jdo/JdoTransactionManager/doRollback(org.springframework.transaction.support.DefaultTransactionStatus)#org/springframework/transaction/TransactionSystemException/TransactionSystemException(java.lang.String,java.lang.Throwable)
org/springframework/orm/jdo/JdoTransactionManager/doRollback(org.springframework.transaction.support.DefaultTransactionStatus)#java/lang/StringBuilder/StringBuilder()
org/springframework/orm/jdo/JdoTransactionManager/doRollback(org.springframework.transaction.support.DefaultTransactionStatus)#java/lang/StringBuilder/append(java.lang.Object)
org/springframework/orm/jdo/JdoTransactionManager/doRollback(org.springframework.transaction.support.DefaultTransactionStatus)#org/springframework/transaction/support/DefaultTransactionStatus/isDebug()
org/springframework/orm/jdo/JdoTransactionManager/doRollback(org.springframework.transaction.support.DefaultTransactionStatus)#java/lang/StringBuilder/toString()
org/springframework/orm/jdo/JdoTransactionManager/doRollback(org.springframework.transaction.support.DefaultTransactionStatus)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/springframework/orm/jdo/JdoTransactionManager/doRollback(org.springframework.transaction.support.DefaultTransactionStatus)#javax/jdo/Transaction/rollback()
org/springframework/orm/jdo/JdoTransactionManager/doGetTransaction()#org/springframework/orm/jdo/JdoTransactionManager$JdoTransactionObject/setConnectionHolder(org.springframework.jdbc.datasource.ConnectionHolder)
org/springframework/orm/jdo/JdoTransactionManager/doGetTransaction()#org/apache/commons/logging/Log/debug(java.lang.Object)
org/springframework/orm/jdo/JdoTransactionManager/doGetTransaction()#java/lang/StringBuilder/append(java.lang.String)
org/springframework/orm/jdo/JdoTransactionManager/doGetTransaction()#org/springframework/orm/jdo/JdoTransactionManager$JdoTransactionObject/JdoTransactionObject(org.springframework.orm.jdo.JdoTransactionManager,org.springframework.orm.jdo.JdoTransactionManager$1)
org/springframework/orm/jdo/JdoTransactionManager/doGetTransaction()#org/springframework/transaction/support/TransactionSynchronizationManager/getResource(java.lang.Object)
org/springframework/orm/jdo/JdoTransactionManager/doGetTransaction()#java/lang/StringBuilder/StringBuilder()
org/springframework/orm/jdo/JdoTransactionManager/doGetTransaction()#org/springframework/orm/jdo/JdoTransactionManager/isNestedTransactionAllowed()
org/springframework/orm/jdo/JdoTransactionManager/doGetTransaction()#java/lang/StringBuilder/append(java.lang.Object)
org/springframework/orm/jdo/JdoTransactionManager/doGetTransaction()#org/springframework/orm/jdo/JdoTransactionManager$JdoTransactionObject/setPersistenceManagerHolder(org.springframework.orm.jdo.PersistenceManagerHolder,boolean)
org/springframework/orm/jdo/JdoTransactionManager/doGetTransaction()#java/lang/StringBuilder/toString()
org/springframework/orm/jdo/JdoTransactionManager/doGetTransaction()#org/springframework/orm/jdo/JdoTransactionManager$JdoTransactionObject/setSavepointAllowed(boolean)
org/springframework/orm/jdo/JdoTransactionManager/doGetTransaction()#org/apache/commons/logging/Log/isDebugEnabled()
org/springframework/orm/jdo/JdoTransactionManager/doCommit(org.springframework.transaction.support.DefaultTransactionStatus)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/springframework/orm/jdo/JdoTransactionManager/doCommit(org.springframework.transaction.support.DefaultTransactionStatus)#java/lang/StringBuilder/append(java.lang.String)
org/springframework/orm/jdo/JdoTransactionManager/doCommit(org.springframework.transaction.support.DefaultTransactionStatus)#org/springframework/transaction/support/DefaultTransactionStatus/getTransaction()
org/springframework/orm/jdo/JdoTransactionManager/doCommit(org.springframework.transaction.support.DefaultTransactionStatus)#org/springframework/orm/jdo/JdoTransactionManager$JdoTransactionObject/getPersistenceManagerHolder()
org/springframework/orm/jdo/JdoTransactionManager/doCommit(org.springframework.transaction.support.DefaultTransactionStatus)#javax/jdo/PersistenceManager/currentTransaction()
org/springframework/orm/jdo/JdoTransactionManager/doCommit(org.springframework.transaction.support.DefaultTransactionStatus)#java/lang/StringBuilder/StringBuilder()
org/springframework/orm/jdo/JdoTransactionManager/doCommit(org.springframework.transaction.support.DefaultTransactionStatus)#javax/jdo/Transaction/commit()
org/springframework/orm/jdo/JdoTransactionManager/doCommit(org.springframework.transaction.support.DefaultTransactionStatus)#java/lang/StringBuilder/append(java.lang.Object)
org/springframework/orm/jdo/JdoTransactionManager/doCommit(org.springframework.transaction.support.DefaultTransactionStatus)#org/springframework/transaction/support/DefaultTransactionStatus/isDebug()
org/springframework/orm/jdo/JdoTransactionManager/doCommit(org.springframework.transaction.support.DefaultTransactionStatus)#java/lang/StringBuilder/toString()
org/springframework/orm/jdo/JdoTransactionManager/doSetRollbackOnly(org.springframework.transaction.support.DefaultTransactionStatus)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/springframework/orm/jdo/JdoTransactionManager/doSetRollbackOnly(org.springframework.transaction.support.DefaultTransactionStatus)#java/lang/StringBuilder/append(java.lang.String)
org/springframework/orm/jdo/JdoTransactionManager/doSetRollbackOnly(org.springframework.transaction.support.DefaultTransactionStatus)#org/springframework/transaction/support/DefaultTransactionStatus/getTransaction()
org/springframework/orm/jdo/JdoTransactionManager/doSetRollbackOnly(org.springframework.transaction.support.DefaultTransactionStatus)#org/springframework/orm/jdo/JdoTransactionManager$JdoTransactionObject/getPersistenceManagerHolder()
org/springframework/orm/jdo/JdoTransactionManager/doSetRollbackOnly(org.springframework.transaction.support.DefaultTransactionStatus)#org/springframework/orm/jdo/JdoTransactionManager$JdoTransactionObject/setRollbackOnly()
org/springframework/orm/jdo/JdoTransactionManager/doSetRollbackOnly(org.springframework.transaction.support.DefaultTransactionStatus)#java/lang/StringBuilder/StringBuilder()
org/springframework/orm/jdo/JdoTransactionManager/doSetRollbackOnly(org.springframework.transaction.support.DefaultTransactionStatus)#java/lang/StringBuilder/append(java.lang.Object)
org/springframework/orm/jdo/JdoTransactionManager/doSetRollbackOnly(org.springframework.transaction.support.DefaultTransactionStatus)#org/springframework/transaction/support/DefaultTransactionStatus/isDebug()
org/springframework/orm/jdo/JdoTransactionManager/doSetRollbackOnly(org.springframework.transaction.support.DefaultTransactionStatus)#java/lang/StringBuilder/toString()
org/springframework/orm/jdo/JdoTransactionManager/doCleanupAfterCompletion(java.lang.Object)#java/lang/StringBuilder/append(java.lang.String)
org/springframework/orm/jdo/JdoTransactionManager/doCleanupAfterCompletion(java.lang.Object)#org/springframework/transaction/support/TransactionSynchronizationManager/unbindResource(java.lang.Object)
org/springframework/orm/jdo/JdoTransactionManager/doCleanupAfterCompletion(java.lang.Object)#org/apache/commons/logging/Log/isDebugEnabled()
org/springframework/orm/jdo/JdoTransactionManager/doCleanupAfterCompletion(java.lang.Object)#org/springframework/orm/jdo/JdoTransactionManager$JdoTransactionObject/getTransactionData()
org/springframework/orm/jdo/JdoTransactionManager/doCleanupAfterCompletion(java.lang.Object)#java/lang/StringBuilder/StringBuilder()
org/springframework/orm/jdo/JdoTransactionManager/doCleanupAfterCompletion(java.lang.Object)#org/springframework/orm/jdo/JdoTransactionManager$JdoTransactionObject/getConnectionHolder()
org/springframework/orm/jdo/JdoTransactionManager/doCleanupAfterCompletion(java.lang.Object)#org/apache/commons/logging/Log/debug(java.lang.Object,java.lang.Throwable)
org/springframework/orm/jdo/JdoTransactionManager/doCleanupAfterCompletion(java.lang.Object)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/springframework/orm/jdo/JdoTransactionManager/doCleanupAfterCompletion(java.lang.Object)#org/springframework/orm/jdo/JdoTransactionManager$JdoTransactionObject/getPersistenceManagerHolder()
org/springframework/orm/jdo/JdoTransactionManager/doCleanupAfterCompletion(java.lang.Object)#org/springframework/orm/jdo/JdoTransactionManager$JdoTransactionObject/isNewPersistenceManagerHolder()
org/springframework/orm/jdo/JdoTransactionManager/doCleanupAfterCompletion(java.lang.Object)#org/springframework/jdbc/datasource/ConnectionHolder/getConnectionHandle()
org/springframework/orm/jdo/JdoTransactionManager/doCleanupAfterCompletion(java.lang.Object)#java/lang/StringBuilder/append(java.lang.Object)
org/springframework/orm/jdo/JdoTransactionManager/doCleanupAfterCompletion(java.lang.Object)#java/lang/StringBuilder/toString()
org/springframework/orm/jdo/JdoTransactionManager/doCleanupAfterCompletion(java.lang.Object)#org/springframework/orm/jdo/JdoTransactionManager$JdoTransactionObject/hasConnectionHolder()
org/springframework/orm/hibernate4/SessionFactoryUtils/convertHibernateAccessException(org.hibernate.HibernateException)#org/hibernate/PessimisticLockException/getSQL()
org/springframework/orm/hibernate4/SessionFactoryUtils/convertHibernateAccessException(org.hibernate.HibernateException)#org/springframework/dao/DataIntegrityViolationException/DataIntegrityViolationException(java.lang.String,java.lang.Throwable)
org/springframework/orm/hibernate4/SessionFactoryUtils/convertHibernateAccessException(org.hibernate.HibernateException)#java/lang/StringBuilder/append(java.lang.String)
org/springframework/orm/hibernate4/SessionFactoryUtils/convertHibernateAccessException(org.hibernate.HibernateException)#org/springframework/dao/InvalidDataAccessResourceUsageException/InvalidDataAccessResourceUsageException(java.lang.String,java.lang.Throwable)
org/springframework/orm/hibernate4/SessionFactoryUtils/convertHibernateAccessException(org.hibernate.HibernateException)#org/hibernate/HibernateException/getMessage()
org/springframework/orm/hibernate4/SessionFactoryUtils/convertHibernateAccessException(org.hibernate.HibernateException)#org/hibernate/HibernateException/getCause()
org/springframework/orm/hibernate4/SessionFactoryUtils/convertHibernateAccessException(org.hibernate.HibernateException)#org/springframework/dao/IncorrectResultSizeDataAccessException/IncorrectResultSizeDataAccessException(java.lang.String,int,java.lang.Throwable)
org/springframework/orm/hibernate4/SessionFactoryUtils/convertHibernateAccessException(org.hibernate.HibernateException)#org/hibernate/exception/DataException/getSQL()
org/springframework/orm/hibernate4/SessionFactoryUtils/convertHibernateAccessException(org.hibernate.HibernateException)#org/springframework/dao/DataAccessResourceFailureException/DataAccessResourceFailureException(java.lang.String,java.lang.Throwable)
org/springframework/orm/hibernate4/SessionFactoryUtils/convertHibernateAccessException(org.hibernate.HibernateException)#org/springframework/dao/InvalidDataAccessApiUsageException/InvalidDataAccessApiUsageException(java.lang.String,java.lang.Throwable)
org/springframework/orm/hibernate4/SessionFactoryUtils/convertHibernateAccessException(org.hibernate.HibernateException)#org/springframework/dao/PessimisticLockingFailureException/PessimisticLockingFailureException(java.lang.String,java.lang.Throwable)
org/springframework/orm/hibernate4/SessionFactoryUtils/convertHibernateAccessException(org.hibernate.HibernateException)#org/springframework/dao/CannotAcquireLockException/CannotAcquireLockException(java.lang.String,java.lang.Throwable)
org/springframework/orm/hibernate4/SessionFactoryUtils/convertHibernateAccessException(org.hibernate.HibernateException)#org/hibernate/exception/LockAcquisitionException/getSQL()
org/springframework/orm/hibernate4/SessionFactoryUtils/convertHibernateAccessException(org.hibernate.HibernateException)#org/hibernate/exception/SQLGrammarException/getSQL()
org/springframework/orm/hibernate4/SessionFactoryUtils/convertHibernateAccessException(org.hibernate.HibernateException)#org/hibernate/QueryTimeoutException/getSQL()
org/springframework/orm/hibernate4/SessionFactoryUtils/convertHibernateAccessException(org.hibernate.HibernateException)#java/lang/StringBuilder/StringBuilder()
org/springframework/orm/hibernate4/SessionFactoryUtils/convertHibernateAccessException(org.hibernate.HibernateException)#org/hibernate/exception/ConstraintViolationException/getSQL()
org/springframework/orm/hibernate4/SessionFactoryUtils/convertHibernateAccessException(org.hibernate.HibernateException)#org/springframework/dao/QueryTimeoutException/QueryTimeoutException(java.lang.String,java.lang.Throwable)
org/springframework/orm/hibernate4/SessionFactoryUtils/convertHibernateAccessException(org.hibernate.HibernateException)#org/hibernate/exception/ConstraintViolationException/getConstraintName()
org/springframework/orm/hibernate4/SessionFactoryUtils/convertHibernateAccessException(org.hibernate.HibernateException)#java/lang/StringBuilder/toString()
org/springframework/orm/hibernate4/SessionFactoryUtils/convertHibernateAccessException(org.hibernate.HibernateException)#org/springframework/dao/DuplicateKeyException/DuplicateKeyException(java.lang.String,java.lang.Throwable)
org/springframework/orm/jpa/persistenceunit/DefaultPersistenceUnitManager/buildDefaultPersistenceUnitInfo()#javax/persistence/PersistenceException/PersistenceException(java.lang.String,java.lang.Throwable)
org/springframework/orm/jpa/persistenceunit/DefaultPersistenceUnitManager/buildDefaultPersistenceUnitInfo()#org/springframework/util/ClassUtils/convertClassNameToResourcePath(java.lang.String)
org/springframework/orm/jpa/persistenceunit/DefaultPersistenceUnitManager/buildDefaultPersistenceUnitInfo()#java/lang/StringBuilder/append(java.lang.String)
org/springframework/orm/jpa/persistenceunit/DefaultPersistenceUnitManager/buildDefaultPersistenceUnitInfo()#org/springframework/core/io/support/ResourcePatternResolver/getResources(java.lang.String)
org/springframework/orm/jpa/persistenceunit/DefaultPersistenceUnitManager/buildDefaultPersistenceUnitInfo()#org/springframework/core/type/classreading/MetadataReaderFactory/getMetadataReader(org.springframework.core.io.Resource)
org/springframework/orm/jpa/persistenceunit/DefaultPersistenceUnitManager/buildDefaultPersistenceUnitInfo()#org/springframework/util/ResourceUtils/extractJarFileURL(java.net.URL)
org/springframework/orm/jpa/persistenceunit/DefaultPersistenceUnitManager/buildDefaultPersistenceUnitInfo()#org/springframework/core/io/Resource/isReadable()
org/springframework/orm/jpa/persistenceunit/DefaultPersistenceUnitManager/buildDefaultPersistenceUnitInfo()#org/springframework/util/ResourceUtils/isJarURL(java.net.URL)
org/springframework/orm/jpa/persistenceunit/DefaultPersistenceUnitManager/buildDefaultPersistenceUnitInfo()#org/springframework/orm/jpa/persistenceunit/SpringPersistenceUnitInfo/setPersistenceUnitName(java.lang.String)
org/springframework/orm/jpa/persistenceunit/DefaultPersistenceUnitManager/buildDefaultPersistenceUnitInfo()#org/springframework/core/type/classreading/MetadataReader/getClassMetadata()
org/springframework/orm/jpa/persistenceunit/DefaultPersistenceUnitManager/buildDefaultPersistenceUnitInfo()#org/springframework/core/type/classreading/CachingMetadataReaderFactory/CachingMetadataReaderFactory(org.springframework.core.io.ResourceLoader)
org/springframework/orm/jpa/persistenceunit/DefaultPersistenceUnitManager/buildDefaultPersistenceUnitInfo()#org/springframework/orm/jpa/persistenceunit/SpringPersistenceUnitInfo/addMappingFileName(java.lang.String)
org/springframework/orm/jpa/persistenceunit/DefaultPersistenceUnitManager/buildDefaultPersistenceUnitInfo()#org/springframework/orm/jpa/persistenceunit/SpringPersistenceUnitInfo/getPersistenceUnitRootUrl()
org/springframework/orm/jpa/persistenceunit/DefaultPersistenceUnitManager/buildDefaultPersistenceUnitInfo()#org/springframework/orm/jpa/persistenceunit/SpringPersistenceUnitInfo/setExcludeUnlistedClasses(boolean)
org/springframework/orm/jpa/persistenceunit/DefaultPersistenceUnitManager/buildDefaultPersistenceUnitInfo()#org/springframework/orm/jpa/persistenceunit/SpringPersistenceUnitInfo/addManagedClassName(java.lang.String)
org/springframework/orm/jpa/persistenceunit/DefaultPersistenceUnitManager/buildDefaultPersistenceUnitInfo()#java/lang/StringBuilder/StringBuilder()
org/springframework/orm/jpa/persistenceunit/DefaultPersistenceUnitManager/buildDefaultPersistenceUnitInfo()#org/springframework/core/io/Resource/getURL()
org/springframework/orm/jpa/persistenceunit/DefaultPersistenceUnitManager/buildDefaultPersistenceUnitInfo()#org/springframework/orm/jpa/persistenceunit/SpringPersistenceUnitInfo/setPersistenceUnitRootUrl(java.net.URL)
org/springframework/orm/jpa/persistenceunit/DefaultPersistenceUnitManager/buildDefaultPersistenceUnitInfo()#org/springframework/core/type/ClassMetadata/getClassName()
org/springframework/orm/jpa/persistenceunit/DefaultPersistenceUnitManager/buildDefaultPersistenceUnitInfo()#java/lang/StringBuilder/toString()
org/springframework/orm/jpa/persistenceunit/DefaultPersistenceUnitManager/obtainDefaultPersistenceUnitInfo()#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/springframework/orm/jpa/persistenceunit/DefaultPersistenceUnitManager/obtainDefaultPersistenceUnitInfo()#java/util/Map/isEmpty()
org/springframework/orm/jpa/persistenceunit/DefaultPersistenceUnitManager/obtainDefaultPersistenceUnitInfo()#java/util/Map/size()
org/springframework/orm/jpa/persistenceunit/DefaultPersistenceUnitManager/obtainDefaultPersistenceUnitInfo()#java/util/Map/values()
org/springframework/orm/jpa/persistenceunit/DefaultPersistenceUnitManager/obtainDefaultPersistenceUnitInfo()#java/util/Iterator/next()
org/springframework/orm/jpa/persistenceunit/DefaultPersistenceUnitManager/obtainDefaultPersistenceUnitInfo()#java/util/Set/isEmpty()
org/springframework/orm/jpa/persistenceunit/DefaultPersistenceUnitManager/obtainDefaultPersistenceUnitInfo()#java/lang/StringBuilder/StringBuilder()
org/springframework/orm/jpa/persistenceunit/DefaultPersistenceUnitManager/obtainDefaultPersistenceUnitInfo()#java/util/Map/clear()
org/springframework/orm/jpa/persistenceunit/DefaultPersistenceUnitManager/obtainDefaultPersistenceUnitInfo()#java/util/Collection/iterator()
org/springframework/orm/jpa/persistenceunit/DefaultPersistenceUnitManager/obtainDefaultPersistenceUnitInfo()#java/lang/StringBuilder/toString()
org/springframework/orm/jpa/persistenceunit/DefaultPersistenceUnitManager/obtainDefaultPersistenceUnitInfo()#org/springframework/util/ObjectUtils/nullSafeToString(java.lang.Object[])
org/springframework/orm/jpa/persistenceunit/DefaultPersistenceUnitManager/obtainDefaultPersistenceUnitInfo()#java/lang/StringBuilder/append(java.lang.String)
org/springframework/orm/jpa/persistenceunit/DefaultPersistenceUnitManager/readPersistenceUnitInfos()#java/lang/StringBuilder/StringBuilder()
org/springframework/orm/jpa/persistenceunit/DefaultPersistenceUnitManager/readPersistenceUnitInfos()#java/util/List/add(java.lang.Object)
org/springframework/orm/jpa/persistenceunit/DefaultPersistenceUnitManager/readPersistenceUnitInfos()#java/lang/StringBuilder/toString()
org/springframework/orm/jpa/persistenceunit/DefaultPersistenceUnitManager/readPersistenceUnitInfos()#java/lang/StringBuilder/append(java.lang.String)
org/springframework/orm/jpa/persistenceunit/DefaultPersistenceUnitManager/readPersistenceUnitInfos()#org/apache/commons/logging/Log/isInfoEnabled()
org/springframework/orm/jpa/persistenceunit/DefaultPersistenceUnitManager/readPersistenceUnitInfos()#org/springframework/orm/jpa/persistenceunit/SpringPersistenceUnitInfo/getPersistenceUnitName()
org/springframework/orm/jpa/persistenceunit/DefaultPersistenceUnitManager/readPersistenceUnitInfos()#org/apache/commons/logging/Log/info(java.lang.Object)
org/springframework/orm/jpa/persistenceunit/DefaultPersistenceUnitManager/readPersistenceUnitInfos()#java/lang/String/equals(java.lang.Object)
org/springframework/orm/jpa/persistenceunit/DefaultPersistenceUnitManager/readPersistenceUnitInfos()#java/util/LinkedList/LinkedList()
org/springframework/orm/jpa/persistenceunit/DefaultPersistenceUnitManager/preparePersistenceUnitInfos()#java/util/Map/put(java.lang.Object,java.lang.Object)
org/springframework/orm/jpa/persistenceunit/DefaultPersistenceUnitManager/preparePersistenceUnitInfos()#java/util/Iterator/hasNext()
org/springframework/orm/jpa/persistenceunit/DefaultPersistenceUnitManager/preparePersistenceUnitInfos()#org/springframework/orm/jpa/persistenceunit/SpringPersistenceUnitInfo/getPersistenceUnitName()
org/springframework/orm/jpa/persistenceunit/DefaultPersistenceUnitManager/preparePersistenceUnitInfos()#javax/persistence/spi/PersistenceUnitInfo/getPersistenceUnitRootUrl()
org/springframework/orm/jpa/persistenceunit/DefaultPersistenceUnitManager/preparePersistenceUnitInfos()#java/lang/StringBuilder/StringBuilder()
org/springframework/orm/jpa/persistenceunit/DefaultPersistenceUnitManager/preparePersistenceUnitInfos()#org/springframework/orm/jpa/persistenceunit/SpringPersistenceUnitInfo/setNonJtaDataSource(javax.sql.DataSource)
org/springframework/orm/jpa/persistenceunit/DefaultPersistenceUnitManager/preparePersistenceUnitInfos()#org/springframework/core/io/support/ResourcePatternResolver/getClassLoader()
org/springframework/orm/jpa/persistenceunit/DefaultPersistenceUnitManager/preparePersistenceUnitInfos()#org/springframework/orm/jpa/persistenceunit/SpringPersistenceUnitInfo/getJtaDataSource()
org/springframework/orm/jpa/persistenceunit/DefaultPersistenceUnitManager/preparePersistenceUnitInfos()#java/util/List/iterator()
org/springframework/orm/jpa/persistenceunit/DefaultPersistenceUnitManager/preparePersistenceUnitInfos()#org/springframework/orm/jpa/persistenceunit/SpringPersistenceUnitInfo/setValidationMode(javax.persistence.ValidationMode)
org/springframework/orm/jpa/persistenceunit/DefaultPersistenceUnitManager/preparePersistenceUnitInfos()#java/lang/StringBuilder/toString()
org/springframework/orm/jpa/persistenceunit/DefaultPersistenceUnitManager/preparePersistenceUnitInfos()#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/springframework/orm/jpa/persistenceunit/DefaultPersistenceUnitManager/preparePersistenceUnitInfos()#org/springframework/orm/jpa/persistenceunit/SpringPersistenceUnitInfo/getPersistenceUnitRootUrl()
org/springframework/orm/jpa/persistenceunit/DefaultPersistenceUnitManager/preparePersistenceUnitInfos()#org/springframework/orm/jpa/persistenceunit/SpringPersistenceUnitInfo/getNonJtaDataSource()
org/springframework/orm/jpa/persistenceunit/DefaultPersistenceUnitManager/preparePersistenceUnitInfos()#java/lang/StringBuilder/append(java.lang.String)
org/springframework/orm/jpa/persistenceunit/DefaultPersistenceUnitManager/preparePersistenceUnitInfos()#java/util/Map/get(java.lang.Object)
org/springframework/orm/jpa/persistenceunit/DefaultPersistenceUnitManager/preparePersistenceUnitInfos()#java/util/Iterator/next()
org/springframework/orm/jpa/persistenceunit/DefaultPersistenceUnitManager/preparePersistenceUnitInfos()#org/springframework/orm/jpa/persistenceunit/SpringPersistenceUnitInfo/setJtaDataSource(javax.sql.DataSource)
org/springframework/orm/jpa/persistenceunit/DefaultPersistenceUnitManager/preparePersistenceUnitInfos()#java/util/Map/clear()
org/springframework/orm/jpa/persistenceunit/DefaultPersistenceUnitManager/preparePersistenceUnitInfos()#java/lang/StringBuilder/append(java.lang.Object)
org/springframework/orm/jpa/persistenceunit/DefaultPersistenceUnitManager/preparePersistenceUnitInfos()#java/util/Set/clear()
org/springframework/orm/jpa/persistenceunit/DefaultPersistenceUnitManager/preparePersistenceUnitInfos()#org/springframework/orm/jpa/persistenceunit/SpringPersistenceUnitInfo/setSharedCacheMode(javax.persistence.SharedCacheMode)
org/springframework/orm/jpa/persistenceunit/DefaultPersistenceUnitManager/preparePersistenceUnitInfos()#org/springframework/orm/jpa/persistenceunit/SpringPersistenceUnitInfo/setPersistenceUnitRootUrl(java.net.URL)
org/springframework/orm/jpa/persistenceunit/DefaultPersistenceUnitManager/preparePersistenceUnitInfos()#java/util/Set/add(java.lang.Object)
org/springframework/orm/hibernate3/HibernateTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#org/springframework/orm/hibernate3/HibernateTransactionManager$HibernateTransactionObject/setConnectionHolder(org.springframework.jdbc.datasource.ConnectionHolder)
org/springframework/orm/hibernate3/HibernateTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#org/hibernate/FlushMode/lessThan(org.hibernate.FlushMode)
org/springframework/orm/hibernate3/HibernateTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#org/springframework/orm/hibernate3/HibernateTransactionManager$HibernateTransactionObject/setPreviousIsolationLevel(java.lang.Integer)
org/springframework/orm/hibernate3/HibernateTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#org/hibernate/Session/connection()
org/springframework/orm/hibernate3/HibernateTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#org/springframework/transaction/TransactionDefinition/isReadOnly()
org/springframework/orm/hibernate3/HibernateTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#org/apache/commons/logging/Log/debug(java.lang.Object,java.lang.Throwable)
org/springframework/orm/hibernate3/HibernateTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/springframework/orm/hibernate3/HibernateTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#org/hibernate/Session/getTransaction()
org/springframework/orm/hibernate3/HibernateTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#org/hibernate/Transaction/isActive()
org/springframework/orm/hibernate3/HibernateTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#org/hibernate/Session/setFlushMode(org.hibernate.FlushMode)
org/springframework/orm/hibernate3/HibernateTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#org/hibernate/Transaction/setTimeout(int)
org/springframework/orm/hibernate3/HibernateTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#org/springframework/orm/hibernate3/HibernateTransactionManager$HibernateTransactionObject/setSession(org.hibernate.Session)
org/springframework/orm/hibernate3/HibernateTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#org/springframework/orm/hibernate3/HibernateTransactionManager$HibernateTransactionObject/getSessionHolder()
org/springframework/orm/hibernate3/HibernateTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#org/springframework/orm/hibernate3/HibernateTransactionManager$HibernateTransactionObject/isNewSessionHolder()
org/springframework/orm/hibernate3/HibernateTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#org/springframework/orm/hibernate3/SessionHolder/isSynchronizedWithTransaction()
org/springframework/orm/hibernate3/HibernateTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#org/springframework/jdbc/datasource/ConnectionHolder/setTimeoutInSeconds(int)
org/springframework/orm/hibernate3/HibernateTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#java/lang/StringBuilder/append(java.lang.String)
org/springframework/orm/hibernate3/HibernateTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#org/hibernate/Transaction/begin()
org/springframework/orm/hibernate3/HibernateTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#org/apache/commons/logging/Log/isDebugEnabled()
org/springframework/orm/hibernate3/HibernateTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#org/hibernate/Session/getFlushMode()
org/springframework/orm/hibernate3/HibernateTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#org/springframework/jdbc/datasource/ConnectionHolder/isSynchronizedWithTransaction()
org/springframework/orm/hibernate3/HibernateTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#org/hibernate/Session/beginTransaction()
org/springframework/orm/hibernate3/HibernateTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#org/springframework/transaction/TransactionDefinition/getIsolationLevel()
org/springframework/orm/hibernate3/HibernateTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#org/springframework/transaction/InvalidIsolationLevelException/InvalidIsolationLevelException(java.lang.String)
org/springframework/orm/hibernate3/HibernateTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#org/springframework/orm/hibernate3/SessionHolder/setSynchronizedWithTransaction(boolean)
org/springframework/orm/hibernate3/HibernateTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#org/hibernate/SessionFactory/openSession()
org/springframework/orm/hibernate3/HibernateTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#org/springframework/transaction/IllegalTransactionStateException/IllegalTransactionStateException(java.lang.String)
org/springframework/orm/hibernate3/HibernateTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#org/springframework/transaction/CannotCreateTransactionException/CannotCreateTransactionException(java.lang.String,java.lang.Throwable)
org/springframework/orm/hibernate3/HibernateTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#org/hibernate/SessionFactory/openSession(org.hibernate.Interceptor)
org/springframework/orm/hibernate3/HibernateTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#java/lang/StringBuilder/StringBuilder()
org/springframework/orm/hibernate3/HibernateTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#org/springframework/orm/hibernate3/HibernateTransactionManager/determineTimeout(org.springframework.transaction.TransactionDefinition)
org/springframework/orm/hibernate3/HibernateTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#org/hibernate/Transaction/rollback()
org/springframework/orm/hibernate3/HibernateTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#org/springframework/jdbc/datasource/ConnectionHolder/ConnectionHolder(java.sql.Connection)
org/springframework/orm/hibernate3/HibernateTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#org/springframework/transaction/support/TransactionSynchronizationManager/bindResource(java.lang.Object,java.lang.Object)
org/springframework/orm/hibernate3/HibernateTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#java/lang/StringBuilder/append(java.lang.Object)
org/springframework/orm/hibernate3/HibernateTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#org/springframework/jdbc/datasource/DataSourceUtils/prepareConnectionForTransaction(java.sql.Connection,org.springframework.transaction.TransactionDefinition)
org/springframework/orm/hibernate3/HibernateTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#org/springframework/orm/hibernate3/HibernateTransactionManager$HibernateTransactionObject/getConnectionHolder()
org/springframework/orm/hibernate3/HibernateTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#org/springframework/orm/hibernate3/HibernateTransactionManager$HibernateTransactionObject/isNewSession()
org/springframework/orm/hibernate3/HibernateTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#java/lang/StringBuilder/toString()
org/springframework/orm/hibernate3/HibernateTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)#org/springframework/orm/hibernate3/HibernateTransactionManager$HibernateTransactionObject/hasConnectionHolder()
org/springframework/orm/hibernate3/HibernateTransactionManager/doCommit(org.springframework.transaction.support.DefaultTransactionStatus)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/springframework/orm/hibernate3/HibernateTransactionManager/doCommit(org.springframework.transaction.support.DefaultTransactionStatus)#org/springframework/orm/hibernate3/HibernateTransactionManager$HibernateTransactionObject/getSessionHolder()
org/springframework/orm/hibernate3/HibernateTransactionManager/doCommit(org.springframework.transaction.support.DefaultTransactionStatus)#java/lang/StringBuilder/append(java.lang.String)
org/springframework/orm/hibernate3/HibernateTransactionManager/doCommit(org.springframework.transaction.support.DefaultTransactionStatus)#org/springframework/transaction/TransactionSystemException/TransactionSystemException(java.lang.String,java.lang.Throwable)
org/springframework/orm/hibernate3/HibernateTransactionManager/doCommit(org.springframework.transaction.support.DefaultTransactionStatus)#java/lang/StringBuilder/StringBuilder()
org/springframework/orm/hibernate3/HibernateTransactionManager/doCommit(org.springframework.transaction.support.DefaultTransactionStatus)#org/springframework/transaction/support/DefaultTransactionStatus/isDebug()
org/springframework/orm/hibernate3/HibernateTransactionManager/doCommit(org.springframework.transaction.support.DefaultTransactionStatus)#java/lang/StringBuilder/toString()
org/springframework/orm/hibernate3/HibernateTransactionManager/doCommit(org.springframework.transaction.support.DefaultTransactionStatus)#org/springframework/transaction/support/DefaultTransactionStatus/getTransaction()
org/springframework/orm/hibernate3/HibernateTransactionManager/doCommit(org.springframework.transaction.support.DefaultTransactionStatus)#org/hibernate/Transaction/commit()
org/springframework/orm/hibernate3/HibernateTransactionManager/doRollback(org.springframework.transaction.support.DefaultTransactionStatus)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/springframework/orm/hibernate3/HibernateTransactionManager/doRollback(org.springframework.transaction.support.DefaultTransactionStatus)#org/springframework/orm/hibernate3/HibernateTransactionManager$HibernateTransactionObject/getSessionHolder()
org/springframework/orm/hibernate3/HibernateTransactionManager/doRollback(org.springframework.transaction.support.DefaultTransactionStatus)#org/springframework/transaction/support/DefaultTransactionStatus/getTransaction()
org/springframework/orm/hibernate3/HibernateTransactionManager/doRollback(org.springframework.transaction.support.DefaultTransactionStatus)#org/springframework/transaction/TransactionSystemException/TransactionSystemException(java.lang.String,java.lang.Throwable)
org/springframework/orm/hibernate3/HibernateTransactionManager/doRollback(org.springframework.transaction.support.DefaultTransactionStatus)#java/lang/StringBuilder/StringBuilder()
org/springframework/orm/hibernate3/HibernateTransactionManager/doRollback(org.springframework.transaction.support.DefaultTransactionStatus)#org/hibernate/Transaction/rollback()
org/springframework/orm/hibernate3/HibernateTransactionManager/doRollback(org.springframework.transaction.support.DefaultTransactionStatus)#org/springframework/orm/hibernate3/HibernateTransactionManager$HibernateTransactionObject/isNewSession()
org/springframework/orm/hibernate3/HibernateTransactionManager/doRollback(org.springframework.transaction.support.DefaultTransactionStatus)#org/springframework/transaction/support/DefaultTransactionStatus/isDebug()
org/springframework/orm/hibernate3/HibernateTransactionManager/doRollback(org.springframework.transaction.support.DefaultTransactionStatus)#java/lang/StringBuilder/toString()
org/springframework/orm/hibernate3/HibernateTransactionManager/doRollback(org.springframework.transaction.support.DefaultTransactionStatus)#org/hibernate/Session/clear()
org/springframework/orm/hibernate3/HibernateTransactionManager/doRollback(org.springframework.transaction.support.DefaultTransactionStatus)#java/lang/StringBuilder/append(java.lang.String)
org/springframework/orm/hibernate3/HibernateTransactionManager/doCleanupAfterCompletion(java.lang.Object)#org/hibernate/Session/setFlushMode(org.hibernate.FlushMode)
org/springframework/orm/hibernate3/HibernateTransactionManager/doCleanupAfterCompletion(java.lang.Object)#java/lang/StringBuilder/append(java.lang.String)
org/springframework/orm/hibernate3/HibernateTransactionManager/doCleanupAfterCompletion(java.lang.Object)#org/apache/commons/logging/Log/isDebugEnabled()
org/springframework/orm/hibernate3/HibernateTransactionManager/doCleanupAfterCompletion(java.lang.Object)#java/lang/StringBuilder/StringBuilder()
org/springframework/orm/hibernate3/HibernateTransactionManager/doCleanupAfterCompletion(java.lang.Object)#org/springframework/jdbc/datasource/DataSourceUtils/resetConnectionAfterTransaction(java.sql.Connection,java.lang.Integer)
org/springframework/orm/hibernate3/HibernateTransactionManager/doCleanupAfterCompletion(java.lang.Object)#org/hibernate/Session/disconnect()
org/springframework/orm/hibernate3/HibernateTransactionManager/doCleanupAfterCompletion(java.lang.Object)#org/hibernate/Session/connection()
org/springframework/orm/hibernate3/HibernateTransactionManager/doCleanupAfterCompletion(java.lang.Object)#org/springframework/orm/hibernate3/HibernateTransactionManager$HibernateTransactionObject/isNewSession()
org/springframework/orm/hibernate3/HibernateTransactionManager/doCleanupAfterCompletion(java.lang.Object)#org/springframework/orm/hibernate3/HibernateTransactionManager$HibernateTransactionObject/getPreviousIsolationLevel()
org/springframework/orm/hibernate3/HibernateTransactionManager/doCleanupAfterCompletion(java.lang.Object)#java/lang/StringBuilder/toString()
org/springframework/orm/hibernate3/HibernateTransactionManager/doCleanupAfterCompletion(java.lang.Object)#org/apache/commons/logging/Log/debug(java.lang.Object,java.lang.Throwable)
org/springframework/orm/hibernate3/HibernateTransactionManager/doCleanupAfterCompletion(java.lang.Object)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/springframework/orm/hibernate3/HibernateTransactionManager/doCleanupAfterCompletion(java.lang.Object)#org/springframework/orm/hibernate3/HibernateTransactionManager$HibernateTransactionObject/isNewSessionHolder()
org/springframework/orm/hibernate3/HibernateTransactionManager/doCleanupAfterCompletion(java.lang.Object)#org/springframework/orm/hibernate3/HibernateTransactionManager$HibernateTransactionObject/getSessionHolder()
org/springframework/orm/hibernate3/HibernateTransactionManager/doCleanupAfterCompletion(java.lang.Object)#org/springframework/transaction/support/TransactionSynchronizationManager/unbindResource(java.lang.Object)
org/springframework/orm/hibernate3/HibernateTransactionManager/doCleanupAfterCompletion(java.lang.Object)#org/hibernate/Session/isConnected()
org/springframework/orm/hibernate3/HibernateTransactionManager/doGetTransaction()#org/springframework/orm/hibernate3/HibernateTransactionManager$HibernateTransactionObject/setConnectionHolder(org.springframework.jdbc.datasource.ConnectionHolder)
org/springframework/orm/hibernate3/HibernateTransactionManager/doGetTransaction()#org/apache/commons/logging/Log/debug(java.lang.Object)
org/springframework/orm/hibernate3/HibernateTransactionManager/doGetTransaction()#java/lang/StringBuilder/append(java.lang.String)
org/springframework/orm/hibernate3/HibernateTransactionManager/doGetTransaction()#org/springframework/orm/hibernate3/HibernateTransactionManager$HibernateTransactionObject/HibernateTransactionObject(org.springframework.orm.hibernate3.HibernateTransactionManager,org.springframework.orm.hibernate3.HibernateTransactionManager$1)
org/springframework/orm/hibernate3/HibernateTransactionManager/doGetTransaction()#org/springframework/transaction/support/TransactionSynchronizationManager/getResource(java.lang.Object)
org/springframework/orm/hibernate3/HibernateTransactionManager/doGetTransaction()#org/springframework/orm/hibernate3/HibernateTransactionManager$HibernateTransactionObject/setExistingSession(org.hibernate.Session)
org/springframework/orm/hibernate3/HibernateTransactionManager/doGetTransaction()#java/lang/StringBuilder/StringBuilder()
org/springframework/orm/hibernate3/HibernateTransactionManager/doGetTransaction()#org/springframework/orm/hibernate3/HibernateTransactionManager/isNestedTransactionAllowed()
org/springframework/orm/hibernate3/HibernateTransactionManager/doGetTransaction()#org/hibernate/SessionFactory/getCurrentSession()
org/springframework/orm/hibernate3/HibernateTransactionManager/doGetTransaction()#org/springframework/orm/hibernate3/HibernateTransactionManager$HibernateTransactionObject/setSessionHolder(org.springframework.orm.hibernate3.SessionHolder)
org/springframework/orm/hibernate3/HibernateTransactionManager/doGetTransaction()#java/lang/StringBuilder/toString()
org/springframework/orm/hibernate3/HibernateTransactionManager/doGetTransaction()#org/springframework/dao/DataAccessResourceFailureException/DataAccessResourceFailureException(java.lang.String,java.lang.Throwable)
org/springframework/orm/hibernate3/HibernateTransactionManager/doGetTransaction()#org/apache/commons/logging/Log/isDebugEnabled()
org/springframework/orm/hibernate3/HibernateTransactionManager/doGetTransaction()#org/springframework/orm/hibernate3/HibernateTransactionManager$HibernateTransactionObject/setSavepointAllowed(boolean)
