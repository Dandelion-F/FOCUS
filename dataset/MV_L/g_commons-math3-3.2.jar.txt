org/apache/commons/math3/analysis/interpolation/MicrosphereInterpolatingFunction/value(double[])#java/util/Iterator/hasNext()
org/apache/commons/math3/analysis/interpolation/MicrosphereInterpolatingFunction/value(double[])#java/util/Map$Entry/getKey()
org/apache/commons/math3/analysis/interpolation/MicrosphereInterpolatingFunction/value(double[])#org/apache/commons/math3/analysis/interpolation/MicrosphereInterpolatingFunction$MicrosphereSurfaceElement/normal()
org/apache/commons/math3/analysis/interpolation/MicrosphereInterpolatingFunction/value(double[])#java/util/Set/iterator()
org/apache/commons/math3/analysis/interpolation/MicrosphereInterpolatingFunction/value(double[])#org/apache/commons/math3/analysis/interpolation/MicrosphereInterpolatingFunction$MicrosphereSurfaceElement/sample()
org/apache/commons/math3/analysis/interpolation/MicrosphereInterpolatingFunction/value(double[])#org/apache/commons/math3/analysis/interpolation/MicrosphereInterpolatingFunction$MicrosphereSurfaceElement/reset()
org/apache/commons/math3/analysis/interpolation/MicrosphereInterpolatingFunction/value(double[])#java/util/Map$Entry/getValue()
org/apache/commons/math3/analysis/interpolation/MicrosphereInterpolatingFunction/value(double[])#java/util/Map/entrySet()
org/apache/commons/math3/analysis/interpolation/MicrosphereInterpolatingFunction/value(double[])#java/util/Iterator/next()
org/apache/commons/math3/analysis/interpolation/MicrosphereInterpolatingFunction/value(double[])#java/lang/Double/doubleValue()
org/apache/commons/math3/analysis/interpolation/MicrosphereInterpolatingFunction/value(double[])#java/util/List/iterator()
org/apache/commons/math3/analysis/interpolation/MicrosphereInterpolatingFunction/value(double[])#org/apache/commons/math3/analysis/interpolation/MicrosphereInterpolatingFunction$MicrosphereSurfaceElement/store(double,java.util.Map$Entry)
org/apache/commons/math3/analysis/interpolation/MicrosphereInterpolatingFunction/value(double[])#org/apache/commons/math3/analysis/interpolation/MicrosphereInterpolatingFunction$MicrosphereSurfaceElement/illumination()
org/apache/commons/math3/genetics/CycleCrossover/mate(org.apache.commons.math3.genetics.AbstractListChromosome,org.apache.commons.math3.genetics.AbstractListChromosome)#java/lang/Integer/intValue()
org/apache/commons/math3/genetics/CycleCrossover/mate(org.apache.commons.math3.genetics.AbstractListChromosome,org.apache.commons.math3.genetics.AbstractListChromosome)#java/util/ArrayList/ArrayList(int)
org/apache/commons/math3/genetics/CycleCrossover/mate(org.apache.commons.math3.genetics.AbstractListChromosome,org.apache.commons.math3.genetics.AbstractListChromosome)#java/util/ArrayList/ArrayList(java.util.Collection)
org/apache/commons/math3/genetics/CycleCrossover/mate(org.apache.commons.math3.genetics.AbstractListChromosome,org.apache.commons.math3.genetics.AbstractListChromosome)#java/util/Iterator/hasNext()
org/apache/commons/math3/genetics/CycleCrossover/mate(org.apache.commons.math3.genetics.AbstractListChromosome,org.apache.commons.math3.genetics.AbstractListChromosome)#java/util/Set/size()
org/apache/commons/math3/genetics/CycleCrossover/mate(org.apache.commons.math3.genetics.AbstractListChromosome,org.apache.commons.math3.genetics.AbstractListChromosome)#java/util/Iterator/next()
org/apache/commons/math3/genetics/CycleCrossover/mate(org.apache.commons.math3.genetics.AbstractListChromosome,org.apache.commons.math3.genetics.AbstractListChromosome)#java/util/List/clear()
org/apache/commons/math3/genetics/CycleCrossover/mate(org.apache.commons.math3.genetics.AbstractListChromosome,org.apache.commons.math3.genetics.AbstractListChromosome)#java/util/List/add(java.lang.Object)
org/apache/commons/math3/genetics/CycleCrossover/mate(org.apache.commons.math3.genetics.AbstractListChromosome,org.apache.commons.math3.genetics.AbstractListChromosome)#java/util/List/indexOf(java.lang.Object)
org/apache/commons/math3/genetics/CycleCrossover/mate(org.apache.commons.math3.genetics.AbstractListChromosome,org.apache.commons.math3.genetics.AbstractListChromosome)#java/util/Set/addAll(java.util.Collection)
org/apache/commons/math3/genetics/CycleCrossover/mate(org.apache.commons.math3.genetics.AbstractListChromosome,org.apache.commons.math3.genetics.AbstractListChromosome)#java/util/HashSet/HashSet(int)
org/apache/commons/math3/genetics/CycleCrossover/mate(org.apache.commons.math3.genetics.AbstractListChromosome,org.apache.commons.math3.genetics.AbstractListChromosome)#java/util/Set/contains(java.lang.Object)
org/apache/commons/math3/genetics/CycleCrossover/mate(org.apache.commons.math3.genetics.AbstractListChromosome,org.apache.commons.math3.genetics.AbstractListChromosome)#java/lang/Integer/valueOf(int)
org/apache/commons/math3/genetics/CycleCrossover/mate(org.apache.commons.math3.genetics.AbstractListChromosome,org.apache.commons.math3.genetics.AbstractListChromosome)#java/util/List/get(int)
org/apache/commons/math3/genetics/CycleCrossover/mate(org.apache.commons.math3.genetics.AbstractListChromosome,org.apache.commons.math3.genetics.AbstractListChromosome)#java/util/List/iterator()
org/apache/commons/math3/genetics/CycleCrossover/mate(org.apache.commons.math3.genetics.AbstractListChromosome,org.apache.commons.math3.genetics.AbstractListChromosome)#java/util/List/set(int,java.lang.Object)
org/apache/commons/math3/ode/nonstiff/EmbeddedRungeKuttaIntegrator/integrate(org.apache.commons.math3.ode.ExpandableStatefulODE,double)#org/apache/commons/math3/ode/nonstiff/RungeKuttaStepInterpolator/copy()
org/apache/commons/math3/ode/nonstiff/EmbeddedRungeKuttaIntegrator/integrate(org.apache.commons.math3.ode.ExpandableStatefulODE,double)#[D/clone()
org/apache/commons/math3/ode/nonstiff/EmbeddedRungeKuttaIntegrator/integrate(org.apache.commons.math3.ode.ExpandableStatefulODE,double)#org/apache/commons/math3/ode/nonstiff/EmbeddedRungeKuttaIntegrator/setEquations(org.apache.commons.math3.ode.ExpandableStatefulODE)
org/apache/commons/math3/ode/nonstiff/EmbeddedRungeKuttaIntegrator/integrate(org.apache.commons.math3.ode.ExpandableStatefulODE,double)#org/apache/commons/math3/ode/nonstiff/EmbeddedRungeKuttaIntegrator/initIntegration(double,double[],double)
org/apache/commons/math3/ode/nonstiff/EmbeddedRungeKuttaIntegrator/integrate(org.apache.commons.math3.ode.ExpandableStatefulODE,double)#org/apache/commons/math3/ode/nonstiff/EmbeddedRungeKuttaIntegrator/filterStep(double,boolean,boolean)
org/apache/commons/math3/ode/nonstiff/EmbeddedRungeKuttaIntegrator/integrate(org.apache.commons.math3.ode.ExpandableStatefulODE,double)#org/apache/commons/math3/ode/nonstiff/EmbeddedRungeKuttaIntegrator/computeDerivatives(double,double[],double[])
org/apache/commons/math3/ode/nonstiff/EmbeddedRungeKuttaIntegrator/integrate(org.apache.commons.math3.ode.ExpandableStatefulODE,double)#org/apache/commons/math3/ode/nonstiff/EmbeddedRungeKuttaIntegrator/acceptStep(org.apache.commons.math3.ode.sampling.AbstractStepInterpolator,double[],double[],double)
org/apache/commons/math3/ode/nonstiff/EmbeddedRungeKuttaIntegrator/integrate(org.apache.commons.math3.ode.ExpandableStatefulODE,double)#org/apache/commons/math3/ode/nonstiff/EmbeddedRungeKuttaIntegrator/resetInternalState()
org/apache/commons/math3/ode/nonstiff/EmbeddedRungeKuttaIntegrator/integrate(org.apache.commons.math3.ode.ExpandableStatefulODE,double)#org/apache/commons/math3/ode/nonstiff/EmbeddedRungeKuttaIntegrator/initializeStep(boolean,int,double[],double,double[],double[],double[],double[])
org/apache/commons/math3/ode/nonstiff/EmbeddedRungeKuttaIntegrator/integrate(org.apache.commons.math3.ode.ExpandableStatefulODE,double)#org/apache/commons/math3/ode/nonstiff/EmbeddedRungeKuttaIntegrator/sanityChecks(org.apache.commons.math3.ode.ExpandableStatefulODE,double)
org/apache/commons/math3/ode/nonstiff/EmbeddedRungeKuttaIntegrator/integrate(org.apache.commons.math3.ode.ExpandableStatefulODE,double)#java/lang/System/arraycopy(java.lang.Object,int,java.lang.Object,int,int)
org/apache/commons/math3/ode/nonstiff/EmbeddedRungeKuttaIntegrator/integrate(org.apache.commons.math3.ode.ExpandableStatefulODE,double)#org/apache/commons/math3/ode/nonstiff/RungeKuttaStepInterpolator/storeTime(double)
org/apache/commons/math3/stat/clustering/KMeansPlusPlusClusterer/cluster(java.util.Collection,int,int)#java/util/ArrayList/ArrayList()
org/apache/commons/math3/stat/clustering/KMeansPlusPlusClusterer/cluster(java.util.Collection,int,int)#java/util/Iterator/hasNext()
org/apache/commons/math3/stat/clustering/KMeansPlusPlusClusterer/cluster(java.util.Collection,int,int)#java/util/List/isEmpty()
org/apache/commons/math3/stat/clustering/KMeansPlusPlusClusterer/cluster(java.util.Collection,int,int)#java/util/Collection/size()
org/apache/commons/math3/stat/clustering/KMeansPlusPlusClusterer/cluster(java.util.Collection,int,int)#java/util/List/add(java.lang.Object)
org/apache/commons/math3/stat/clustering/KMeansPlusPlusClusterer/cluster(java.util.Collection,int,int)#java/lang/Integer/valueOf(int)
org/apache/commons/math3/stat/clustering/KMeansPlusPlusClusterer/cluster(java.util.Collection,int,int)#java/util/Iterator/next()
org/apache/commons/math3/stat/clustering/KMeansPlusPlusClusterer/cluster(java.util.Collection,int,int)#java/util/List/iterator()
org/apache/commons/math3/stat/clustering/KMeansPlusPlusClusterer/cluster(java.util.Collection,int,int)#org/apache/commons/math3/stat/clustering/KMeansPlusPlusClusterer$EmptyClusterStrategy/ordinal()
org/apache/commons/math3/stat/Frequency/toString()#java/util/Iterator/hasNext()
org/apache/commons/math3/stat/Frequency/toString()#java/lang/StringBuilder/append(java.lang.String)
org/apache/commons/math3/stat/Frequency/toString()#java/util/TreeMap/keySet()
org/apache/commons/math3/stat/Frequency/toString()#java/util/Iterator/next()
org/apache/commons/math3/stat/Frequency/toString()#java/lang/StringBuilder/append(long)
org/apache/commons/math3/stat/Frequency/toString()#java/lang/StringBuilder/StringBuilder()
org/apache/commons/math3/stat/Frequency/toString()#java/util/Set/iterator()
org/apache/commons/math3/stat/Frequency/toString()#java/lang/StringBuilder/append(char)
org/apache/commons/math3/stat/Frequency/toString()#java/text/NumberFormat/format(double)
org/apache/commons/math3/stat/Frequency/toString()#java/lang/StringBuilder/toString()
org/apache/commons/math3/stat/Frequency/toString()#java/lang/StringBuilder/append(java.lang.Object)
org/apache/commons/math3/stat/Frequency/toString()#java/text/NumberFormat/getPercentInstance()
org/apache/commons/math3/stat/Frequency/getCumFreq(java.lang.Comparable)#java/util/TreeMap/comparator()
org/apache/commons/math3/stat/Frequency/getCumFreq(java.lang.Comparable)#java/util/Iterator/hasNext()
org/apache/commons/math3/stat/Frequency/getCumFreq(java.lang.Comparable)#java/lang/Integer/longValue()
org/apache/commons/math3/stat/Frequency/getCumFreq(java.lang.Comparable)#java/util/TreeMap/get(java.lang.Object)
org/apache/commons/math3/stat/Frequency/getCumFreq(java.lang.Comparable)#org/apache/commons/math3/stat/Frequency$NaturalComparator/NaturalComparator(org.apache.commons.math3.stat.Frequency$1)
org/apache/commons/math3/stat/Frequency/getCumFreq(java.lang.Comparable)#java/util/TreeMap/firstKey()
org/apache/commons/math3/stat/Frequency/getCumFreq(java.lang.Comparable)#java/util/Iterator/next()
org/apache/commons/math3/stat/Frequency/getCumFreq(java.lang.Comparable)#java/lang/Long/longValue()
org/apache/commons/math3/stat/Frequency/getCumFreq(java.lang.Comparable)#java/util/Comparator/compare(java.lang.Object,java.lang.Object)
org/apache/commons/math3/stat/Frequency/getCumFreq(java.lang.Comparable)#java/util/TreeMap/lastKey()
org/apache/commons/math3/fraction/FractionFormat/parse(java.lang.String,java.text.ParsePosition)#java/text/ParsePosition/setIndex(int)
org/apache/commons/math3/fraction/FractionFormat/parse(java.lang.String,java.text.ParsePosition)#org/apache/commons/math3/fraction/FractionFormat/parseNextCharacter(java.lang.String,java.text.ParsePosition)
org/apache/commons/math3/fraction/FractionFormat/parse(java.lang.String,java.text.ParsePosition)#org/apache/commons/math3/fraction/FractionFormat/getDenominatorFormat()
org/apache/commons/math3/fraction/FractionFormat/parse(java.lang.String,java.text.ParsePosition)#java/text/NumberFormat/parse(java.lang.String,java.text.ParsePosition)
org/apache/commons/math3/fraction/FractionFormat/parse(java.lang.String,java.text.ParsePosition)#java/text/ParsePosition/setErrorIndex(int)
org/apache/commons/math3/fraction/FractionFormat/parse(java.lang.String,java.text.ParsePosition)#org/apache/commons/math3/fraction/FractionFormat/parseAndIgnoreWhitespace(java.lang.String,java.text.ParsePosition)
org/apache/commons/math3/fraction/FractionFormat/parse(java.lang.String,java.text.ParsePosition)#java/text/ParsePosition/getIndex()
org/apache/commons/math3/fraction/FractionFormat/parse(java.lang.String,java.text.ParsePosition)#java/lang/Number/intValue()
org/apache/commons/math3/fraction/FractionFormat/parse(java.lang.String,java.text.ParsePosition)#org/apache/commons/math3/fraction/FractionFormat/getNumeratorFormat()
org/apache/commons/math3/optimization/linear/SimplexTableau/getSolution()#java/lang/Integer/intValue()
org/apache/commons/math3/optimization/linear/SimplexTableau/getSolution()#java/lang/StringBuilder/append(java.lang.String)
org/apache/commons/math3/optimization/linear/SimplexTableau/getSolution()#java/lang/StringBuilder/append(int)
org/apache/commons/math3/optimization/linear/SimplexTableau/getSolution()#java/util/Set/contains(java.lang.Object)
org/apache/commons/math3/optimization/linear/SimplexTableau/getSolution()#java/util/HashSet/HashSet()
org/apache/commons/math3/optimization/linear/SimplexTableau/getSolution()#java/util/Set/add(java.lang.Object)
org/apache/commons/math3/optimization/linear/SimplexTableau/getSolution()#java/lang/StringBuilder/StringBuilder()
org/apache/commons/math3/optimization/linear/SimplexTableau/getSolution()#java/lang/StringBuilder/toString()
org/apache/commons/math3/optimization/linear/SimplexTableau/getSolution()#java/util/List/indexOf(java.lang.Object)
org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolver/doSolve()#org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolver/verifySequence(double,double,double)
org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolver/doSolve()#org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolver/computeObjectiveValue(double)
org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolver/doSolve()#org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolver/getStartValue()
org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolver/doSolve()#org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolver/getAbsoluteAccuracy()
org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolver/doSolve()#org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolver/getRelativeAccuracy()
org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolver/doSolve()#java/lang/Double/isNaN(double)
org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolver/doSolve()#org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolver/getMax()
org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolver/doSolve()#java/lang/System/arraycopy(java.lang.Object,int,java.lang.Object,int,int)
org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolver/doSolve()#org/apache/commons/math3/analysis/solvers/AllowedSolution/ordinal()
org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolver/doSolve()#org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolver/getFunctionValueAccuracy()
org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolver/doSolve()#org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolver/getMin()
org/apache/commons/math3/optimization/general/LevenbergMarquardtOptimizer/doOptimize()#org/apache/commons/math3/optimization/general/LevenbergMarquardtOptimizer/computeResiduals(double[])
org/apache/commons/math3/optimization/general/LevenbergMarquardtOptimizer/doOptimize()#org/apache/commons/math3/optimization/general/LevenbergMarquardtOptimizer/getConvergenceChecker()
org/apache/commons/math3/optimization/general/LevenbergMarquardtOptimizer/doOptimize()#org/apache/commons/math3/optimization/general/LevenbergMarquardtOptimizer/computeObjectiveValue(double[])
org/apache/commons/math3/optimization/general/LevenbergMarquardtOptimizer/doOptimize()#org/apache/commons/math3/optimization/general/LevenbergMarquardtOptimizer/setCost(double)
org/apache/commons/math3/optimization/general/LevenbergMarquardtOptimizer/doOptimize()#org/apache/commons/math3/optimization/general/LevenbergMarquardtOptimizer/getStartPoint()
org/apache/commons/math3/optimization/general/LevenbergMarquardtOptimizer/doOptimize()#org/apache/commons/math3/optimization/general/LevenbergMarquardtOptimizer/getWeightSquareRoot()
org/apache/commons/math3/optimization/general/LevenbergMarquardtOptimizer/doOptimize()#org/apache/commons/math3/optimization/general/LevenbergMarquardtOptimizer/computeCost(double[])
org/apache/commons/math3/optimization/general/LevenbergMarquardtOptimizer/doOptimize()#java/lang/Double/valueOf(double)
org/apache/commons/math3/optimization/general/LevenbergMarquardtOptimizer/doOptimize()#org/apache/commons/math3/optimization/general/LevenbergMarquardtOptimizer/computeWeightedJacobian(double[])
org/apache/commons/math3/optimization/general/LevenbergMarquardtOptimizer/doOptimize()#org/apache/commons/math3/optimization/general/LevenbergMarquardtOptimizer/getTarget()
org/apache/commons/math3/optim/linear/SimplexSolver/getPivotRow(org.apache.commons.math3.optim.linear.SimplexTableau,int)#java/util/Iterator/hasNext()
org/apache/commons/math3/optim/linear/SimplexSolver/getPivotRow(org.apache.commons.math3.optim.linear.SimplexTableau,int)#java/lang/Integer/equals(java.lang.Object)
org/apache/commons/math3/optim/linear/SimplexSolver/getPivotRow(org.apache.commons.math3.optim.linear.SimplexTableau,int)#java/util/List/iterator()
org/apache/commons/math3/optim/linear/SimplexSolver/getPivotRow(org.apache.commons.math3.optim.linear.SimplexTableau,int)#org/apache/commons/math3/optim/linear/SimplexSolver/getMaxEvaluations()
org/apache/commons/math3/optim/linear/SimplexSolver/getPivotRow(org.apache.commons.math3.optim.linear.SimplexTableau,int)#java/lang/Integer/intValue()
org/apache/commons/math3/optim/linear/SimplexSolver/getPivotRow(org.apache.commons.math3.optim.linear.SimplexTableau,int)#org/apache/commons/math3/optim/linear/SimplexSolver/getEvaluations()
org/apache/commons/math3/optim/linear/SimplexSolver/getPivotRow(org.apache.commons.math3.optim.linear.SimplexTableau,int)#java/util/ArrayList/ArrayList()
org/apache/commons/math3/optim/linear/SimplexSolver/getPivotRow(org.apache.commons.math3.optim.linear.SimplexTableau,int)#java/lang/Double/compare(double,double)
org/apache/commons/math3/optim/linear/SimplexSolver/getPivotRow(org.apache.commons.math3.optim.linear.SimplexTableau,int)#java/util/List/size()
org/apache/commons/math3/optim/linear/SimplexSolver/getPivotRow(org.apache.commons.math3.optim.linear.SimplexTableau,int)#java/util/Iterator/next()
org/apache/commons/math3/optim/linear/SimplexSolver/getPivotRow(org.apache.commons.math3.optim.linear.SimplexTableau,int)#java/util/List/add(java.lang.Object)
org/apache/commons/math3/optim/linear/SimplexSolver/getPivotRow(org.apache.commons.math3.optim.linear.SimplexTableau,int)#java/lang/Integer/valueOf(int)
org/apache/commons/math3/optim/linear/SimplexSolver/getPivotRow(org.apache.commons.math3.optim.linear.SimplexTableau,int)#java/util/List/get(int)
org/apache/commons/math3/linear/AbstractRealMatrix/power(int)#java/util/ArrayList/iterator()
org/apache/commons/math3/linear/AbstractRealMatrix/power(int)#java/lang/Integer/intValue()
org/apache/commons/math3/linear/AbstractRealMatrix/power(int)#java/util/ArrayList/ArrayList()
org/apache/commons/math3/linear/AbstractRealMatrix/power(int)#java/util/Iterator/hasNext()
org/apache/commons/math3/linear/AbstractRealMatrix/power(int)#java/lang/Integer/toBinaryString(int)
org/apache/commons/math3/linear/AbstractRealMatrix/power(int)#java/util/Iterator/next()
org/apache/commons/math3/linear/AbstractRealMatrix/power(int)#java/util/ArrayList/add(java.lang.Object)
org/apache/commons/math3/linear/AbstractRealMatrix/power(int)#java/lang/Integer/valueOf(int)
org/apache/commons/math3/linear/AbstractRealMatrix/power(int)#java/lang/String/toCharArray()
org/apache/commons/math3/optim/nonlinear/vector/jacobian/GaussNewtonOptimizer/doOptimize()#org/apache/commons/math3/optim/nonlinear/vector/jacobian/GaussNewtonOptimizer/getStartPoint()
org/apache/commons/math3/optim/nonlinear/vector/jacobian/GaussNewtonOptimizer/doOptimize()#org/apache/commons/math3/optim/nonlinear/vector/jacobian/GaussNewtonOptimizer/getTarget()
org/apache/commons/math3/optim/nonlinear/vector/jacobian/GaussNewtonOptimizer/doOptimize()#org/apache/commons/math3/optim/nonlinear/vector/jacobian/GaussNewtonOptimizer/getIterations()
org/apache/commons/math3/optim/nonlinear/vector/jacobian/GaussNewtonOptimizer/doOptimize()#org/apache/commons/math3/optim/nonlinear/vector/jacobian/GaussNewtonOptimizer/computeResiduals(double[])
org/apache/commons/math3/optim/nonlinear/vector/jacobian/GaussNewtonOptimizer/doOptimize()#org/apache/commons/math3/optim/nonlinear/vector/jacobian/GaussNewtonOptimizer/getWeight()
org/apache/commons/math3/optim/nonlinear/vector/jacobian/GaussNewtonOptimizer/doOptimize()#org/apache/commons/math3/optim/nonlinear/vector/jacobian/GaussNewtonOptimizer/computeCost(double[])
org/apache/commons/math3/optim/nonlinear/vector/jacobian/GaussNewtonOptimizer/doOptimize()#org/apache/commons/math3/optim/nonlinear/vector/jacobian/GaussNewtonOptimizer/computeWeightedJacobian(double[])
org/apache/commons/math3/optim/nonlinear/vector/jacobian/GaussNewtonOptimizer/doOptimize()#org/apache/commons/math3/optim/nonlinear/vector/jacobian/GaussNewtonOptimizer/getConvergenceChecker()
org/apache/commons/math3/optim/nonlinear/vector/jacobian/GaussNewtonOptimizer/doOptimize()#org/apache/commons/math3/optim/nonlinear/vector/jacobian/GaussNewtonOptimizer/computeObjectiveValue(double[])
org/apache/commons/math3/optim/nonlinear/vector/jacobian/GaussNewtonOptimizer/doOptimize()#org/apache/commons/math3/optim/nonlinear/vector/jacobian/GaussNewtonOptimizer/setCost(double)
org/apache/commons/math3/optim/nonlinear/vector/jacobian/GaussNewtonOptimizer/doOptimize()#org/apache/commons/math3/optim/nonlinear/vector/jacobian/GaussNewtonOptimizer/incrementIterationCount()
org/apache/commons/math3/optim/linear/SimplexTableau/getSolution()#java/lang/Integer/intValue()
org/apache/commons/math3/optim/linear/SimplexTableau/getSolution()#java/lang/StringBuilder/append(java.lang.String)
org/apache/commons/math3/optim/linear/SimplexTableau/getSolution()#java/lang/StringBuilder/append(int)
org/apache/commons/math3/optim/linear/SimplexTableau/getSolution()#java/util/HashSet/HashSet()
org/apache/commons/math3/optim/linear/SimplexTableau/getSolution()#java/util/Set/contains(java.lang.Object)
org/apache/commons/math3/optim/linear/SimplexTableau/getSolution()#java/lang/StringBuilder/StringBuilder()
org/apache/commons/math3/optim/linear/SimplexTableau/getSolution()#java/util/Set/add(java.lang.Object)
org/apache/commons/math3/optim/linear/SimplexTableau/getSolution()#java/lang/StringBuilder/toString()
org/apache/commons/math3/optim/linear/SimplexTableau/getSolution()#java/util/List/indexOf(java.lang.Object)
org/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer/doOptimize()#org/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer/getMaxEvaluations()
org/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer/doOptimize()#org/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer/getIterations()
org/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer/doOptimize()#org/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer$Formula/ordinal()
org/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer/doOptimize()#[D/clone()
org/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer/doOptimize()#org/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer/getConvergenceChecker()
org/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer/doOptimize()#org/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer/computeObjectiveValue(double[])
org/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer/doOptimize()#org/apache/commons/math3/analysis/solvers/UnivariateSolver/getEvaluations()
org/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer/doOptimize()#org/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer/incrementIterationCount()
org/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer/doOptimize()#org/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer/getGoalType()
org/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer/doOptimize()#org/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer/getStartPoint()
org/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer/doOptimize()#org/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer/computeObjectiveGradient(double[])
org/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer/doOptimize()#org/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer$LineSearchFunction/LineSearchFunction(org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer,double[],double[])
org/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer/doOptimize()#org/apache/commons/math3/analysis/solvers/UnivariateSolver/solve(int,org.apache.commons.math3.analysis.UnivariateFunction,double,double,double)
org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer/doOptimize()#org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer/getTarget()
org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer/doOptimize()#org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer/computeResiduals(double[])
org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer/doOptimize()#org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer/getWeightSquareRoot()
org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer/doOptimize()#org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer/getConvergenceChecker()
org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer/doOptimize()#org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer/computeObjectiveValue(double[])
org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer/doOptimize()#org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer/setCost(double)
org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer/doOptimize()#org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer/incrementIterationCount()
org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer/doOptimize()#org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer/getStartPoint()
org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer/doOptimize()#org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer/getIterations()
org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer/doOptimize()#java/lang/Double/valueOf(double)
org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer/doOptimize()#org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer/computeCost(double[])
org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer/doOptimize()#org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer/computeWeightedJacobian(double[])
org/apache/commons/math3/distribution/AbstractRealDistribution/inverseCumulativeProbability(double)#org/apache/commons/math3/distribution/AbstractRealDistribution/isSupportConnected()
org/apache/commons/math3/distribution/AbstractRealDistribution/inverseCumulativeProbability(double)#org/apache/commons/math3/distribution/AbstractRealDistribution/getNumericalMean()
org/apache/commons/math3/distribution/AbstractRealDistribution/inverseCumulativeProbability(double)#java/lang/Double/valueOf(double)
org/apache/commons/math3/distribution/AbstractRealDistribution/inverseCumulativeProbability(double)#org/apache/commons/math3/distribution/AbstractRealDistribution$1/1(org.apache.commons.math3.distribution.AbstractRealDistribution,double)
org/apache/commons/math3/distribution/AbstractRealDistribution/inverseCumulativeProbability(double)#java/lang/Integer/valueOf(int)
org/apache/commons/math3/distribution/AbstractRealDistribution/inverseCumulativeProbability(double)#org/apache/commons/math3/distribution/AbstractRealDistribution/cumulativeProbability(double)
org/apache/commons/math3/distribution/AbstractRealDistribution/inverseCumulativeProbability(double)#org/apache/commons/math3/distribution/AbstractRealDistribution/getNumericalVariance()
org/apache/commons/math3/distribution/AbstractRealDistribution/inverseCumulativeProbability(double)#java/lang/Double/isNaN(double)
org/apache/commons/math3/distribution/AbstractRealDistribution/inverseCumulativeProbability(double)#org/apache/commons/math3/distribution/AbstractRealDistribution/getSupportUpperBound()
org/apache/commons/math3/distribution/AbstractRealDistribution/inverseCumulativeProbability(double)#org/apache/commons/math3/distribution/AbstractRealDistribution/getSupportLowerBound()
org/apache/commons/math3/distribution/AbstractRealDistribution/inverseCumulativeProbability(double)#java/lang/Double/isInfinite(double)
org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer/doOptimize()#java/lang/Math/min(double,double)
org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer/doOptimize()#java/lang/Double/valueOf(double)
org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer/doOptimize()#org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer$FitnessFunction/access$000(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$FitnessFunction,double[])
org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer/doOptimize()#java/lang/Math/abs(double)
org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer/doOptimize()#org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer$FitnessFunction/FitnessFunction(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer)
org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer/doOptimize()#java/lang/Math/max(double,double)
org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer/doOptimize()#org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer$FitnessFunction/setValueRange(double)
org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer/doOptimize()#java/lang/Math/exp(double)
org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer/doOptimize()#org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer/getConvergenceChecker()
org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer/doOptimize()#org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer$FitnessFunction/value(double[])
org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer/doOptimize()#java/util/List/add(java.lang.Object)
org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer/doOptimize()#org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer$FitnessFunction/isFeasible(double[])
org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer/doOptimize()#org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer/incrementIterationCount()
org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer/doOptimize()#org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer/getGoalType()
org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer/doOptimize()#org/apache/commons/math3/optim/nonlinear/scalar/GoalType/equals(java.lang.Object)
org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer/doOptimize()#org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer/getStartPoint()
org/apache/commons/math3/util/TransformerMap/equals(java.lang.Object)#java/lang/Object/equals(java.lang.Object)
org/apache/commons/math3/util/TransformerMap/equals(java.lang.Object)#java/util/Iterator/hasNext()
org/apache/commons/math3/util/TransformerMap/equals(java.lang.Object)#java/util/Map$Entry/getKey()
org/apache/commons/math3/util/TransformerMap/equals(java.lang.Object)#java/util/Map/get(java.lang.Object)
org/apache/commons/math3/util/TransformerMap/equals(java.lang.Object)#java/util/Map/size()
org/apache/commons/math3/util/TransformerMap/equals(java.lang.Object)#java/util/Iterator/next()
org/apache/commons/math3/util/TransformerMap/equals(java.lang.Object)#java/util/Set/iterator()
org/apache/commons/math3/util/TransformerMap/equals(java.lang.Object)#java/util/Map$Entry/getValue()
org/apache/commons/math3/util/TransformerMap/equals(java.lang.Object)#java/util/Map/entrySet()
org/apache/commons/math3/optimization/linear/SimplexSolver/getPivotRow(org.apache.commons.math3.optimization.linear.SimplexTableau,int)#java/util/ArrayList/ArrayList()
org/apache/commons/math3/optimization/linear/SimplexSolver/getPivotRow(org.apache.commons.math3.optimization.linear.SimplexTableau,int)#java/lang/Double/compare(double,double)
org/apache/commons/math3/optimization/linear/SimplexSolver/getPivotRow(org.apache.commons.math3.optimization.linear.SimplexTableau,int)#java/util/Iterator/hasNext()
org/apache/commons/math3/optimization/linear/SimplexSolver/getPivotRow(org.apache.commons.math3.optimization.linear.SimplexTableau,int)#org/apache/commons/math3/optimization/linear/SimplexSolver/getIterations()
org/apache/commons/math3/optimization/linear/SimplexSolver/getPivotRow(org.apache.commons.math3.optimization.linear.SimplexTableau,int)#java/lang/Integer/equals(java.lang.Object)
org/apache/commons/math3/optimization/linear/SimplexSolver/getPivotRow(org.apache.commons.math3.optimization.linear.SimplexTableau,int)#java/util/List/size()
org/apache/commons/math3/optimization/linear/SimplexSolver/getPivotRow(org.apache.commons.math3.optimization.linear.SimplexTableau,int)#java/util/Iterator/next()
org/apache/commons/math3/optimization/linear/SimplexSolver/getPivotRow(org.apache.commons.math3.optimization.linear.SimplexTableau,int)#java/util/List/add(java.lang.Object)
org/apache/commons/math3/optimization/linear/SimplexSolver/getPivotRow(org.apache.commons.math3.optimization.linear.SimplexTableau,int)#java/util/List/iterator()
org/apache/commons/math3/optimization/linear/SimplexSolver/getPivotRow(org.apache.commons.math3.optimization.linear.SimplexTableau,int)#java/lang/Integer/intValue()
org/apache/commons/math3/optimization/linear/SimplexSolver/getPivotRow(org.apache.commons.math3.optimization.linear.SimplexTableau,int)#java/lang/Integer/valueOf(int)
org/apache/commons/math3/optimization/linear/SimplexSolver/getPivotRow(org.apache.commons.math3.optimization.linear.SimplexTableau,int)#java/util/List/get(int)
org/apache/commons/math3/optimization/linear/SimplexSolver/getPivotRow(org.apache.commons.math3.optimization.linear.SimplexTableau,int)#org/apache/commons/math3/optimization/linear/SimplexSolver/getMaxIterations()
org/apache/commons/math3/ode/nonstiff/AdamsBashforthIntegrator/integrate(org.apache.commons.math3.ode.ExpandableStatefulODE,double)#org/apache/commons/math3/ode/nonstiff/AdamsBashforthIntegrator/resetInternalState()
org/apache/commons/math3/ode/nonstiff/AdamsBashforthIntegrator/integrate(org.apache.commons.math3.ode.ExpandableStatefulODE,double)#org/apache/commons/math3/ode/nonstiff/AdamsBashforthIntegrator/updateHighOrderDerivativesPhase2(double[],double[],org.apache.commons.math3.linear.Array2DRowRealMatrix)
org/apache/commons/math3/ode/nonstiff/AdamsBashforthIntegrator/integrate(org.apache.commons.math3.ode.ExpandableStatefulODE,double)#org/apache/commons/math3/ode/nonstiff/AdamsBashforthIntegrator/setEquations(org.apache.commons.math3.ode.ExpandableStatefulODE)
org/apache/commons/math3/ode/nonstiff/AdamsBashforthIntegrator/integrate(org.apache.commons.math3.ode.ExpandableStatefulODE,double)#org/apache/commons/math3/ode/nonstiff/AdamsBashforthIntegrator/start(double,double[],double)
org/apache/commons/math3/ode/nonstiff/AdamsBashforthIntegrator/integrate(org.apache.commons.math3.ode.ExpandableStatefulODE,double)#org/apache/commons/math3/ode/nonstiff/AdamsBashforthIntegrator/initIntegration(double,double[],double)
org/apache/commons/math3/ode/nonstiff/AdamsBashforthIntegrator/integrate(org.apache.commons.math3.ode.ExpandableStatefulODE,double)#[D/clone()
org/apache/commons/math3/ode/nonstiff/AdamsBashforthIntegrator/integrate(org.apache.commons.math3.ode.ExpandableStatefulODE,double)#org/apache/commons/math3/ode/sampling/NordsieckStepInterpolator/getInterpolatedState()
org/apache/commons/math3/ode/nonstiff/AdamsBashforthIntegrator/integrate(org.apache.commons.math3.ode.ExpandableStatefulODE,double)#org/apache/commons/math3/ode/nonstiff/AdamsBashforthIntegrator/filterStep(double,boolean,boolean)
org/apache/commons/math3/ode/nonstiff/AdamsBashforthIntegrator/integrate(org.apache.commons.math3.ode.ExpandableStatefulODE,double)#org/apache/commons/math3/ode/nonstiff/AdamsBashforthIntegrator/computeDerivatives(double,double[],double[])
org/apache/commons/math3/ode/nonstiff/AdamsBashforthIntegrator/integrate(org.apache.commons.math3.ode.ExpandableStatefulODE,double)#org/apache/commons/math3/ode/nonstiff/AdamsBashforthIntegrator/updateHighOrderDerivativesPhase1(org.apache.commons.math3.linear.Array2DRowRealMatrix)
org/apache/commons/math3/ode/nonstiff/AdamsBashforthIntegrator/integrate(org.apache.commons.math3.ode.ExpandableStatefulODE,double)#org/apache/commons/math3/ode/sampling/NordsieckStepInterpolator/getInterpolatedSecondaryState(int)
org/apache/commons/math3/ode/nonstiff/AdamsBashforthIntegrator/integrate(org.apache.commons.math3.ode.ExpandableStatefulODE,double)#org/apache/commons/math3/ode/nonstiff/AdamsBashforthIntegrator/getExpandable()
org/apache/commons/math3/ode/nonstiff/AdamsBashforthIntegrator/integrate(org.apache.commons.math3.ode.ExpandableStatefulODE,double)#org/apache/commons/math3/ode/nonstiff/AdamsBashforthIntegrator/sanityChecks(org.apache.commons.math3.ode.ExpandableStatefulODE,double)
org/apache/commons/math3/ode/nonstiff/AdamsBashforthIntegrator/integrate(org.apache.commons.math3.ode.ExpandableStatefulODE,double)#org/apache/commons/math3/ode/nonstiff/AdamsBashforthIntegrator/computeStepGrowShrinkFactor(double)
org/apache/commons/math3/ode/nonstiff/AdamsBashforthIntegrator/integrate(org.apache.commons.math3.ode.ExpandableStatefulODE,double)#org/apache/commons/math3/ode/sampling/NordsieckStepInterpolator/storeTime(double)
org/apache/commons/math3/ode/nonstiff/AdamsBashforthIntegrator/integrate(org.apache.commons.math3.ode.ExpandableStatefulODE,double)#org/apache/commons/math3/ode/nonstiff/AdamsBashforthIntegrator/acceptStep(org.apache.commons.math3.ode.sampling.AbstractStepInterpolator,double[],double[],double)
org/apache/commons/math3/ode/nonstiff/AdamsBashforthIntegrator/integrate(org.apache.commons.math3.ode.ExpandableStatefulODE,double)#org/apache/commons/math3/ode/sampling/NordsieckStepInterpolator/setInterpolatedTime(double)
org/apache/commons/math3/ode/nonstiff/AdamsBashforthIntegrator/integrate(org.apache.commons.math3.ode.ExpandableStatefulODE,double)#org/apache/commons/math3/ode/sampling/NordsieckStepInterpolator/shift()
org/apache/commons/math3/linear/AbstractFieldMatrix/power(int)#java/lang/Integer/intValue()
org/apache/commons/math3/linear/AbstractFieldMatrix/power(int)#java/util/ArrayList/ArrayList()
org/apache/commons/math3/linear/AbstractFieldMatrix/power(int)#java/util/ArrayList/ArrayList(int)
org/apache/commons/math3/linear/AbstractFieldMatrix/power(int)#java/util/Iterator/hasNext()
org/apache/commons/math3/linear/AbstractFieldMatrix/power(int)#java/lang/Integer/toBinaryString(int)
org/apache/commons/math3/linear/AbstractFieldMatrix/power(int)#java/util/Iterator/next()
org/apache/commons/math3/linear/AbstractFieldMatrix/power(int)#java/util/ArrayList/add(int,java.lang.Object)
org/apache/commons/math3/linear/AbstractFieldMatrix/power(int)#java/util/ArrayList/iterator()
org/apache/commons/math3/linear/AbstractFieldMatrix/power(int)#java/util/ArrayList/add(java.lang.Object)
org/apache/commons/math3/linear/AbstractFieldMatrix/power(int)#java/lang/Integer/valueOf(int)
org/apache/commons/math3/linear/AbstractFieldMatrix/power(int)#java/lang/String/toCharArray()
org/apache/commons/math3/linear/AbstractFieldMatrix/power(int)#java/util/ArrayList/get(int)
org/apache/commons/math3/analysis/integration/gauss/LegendreHighPrecisionRuleFactory/computeRule(int)#org/apache/commons/math3/analysis/integration/gauss/LegendreHighPrecisionRuleFactory/getRuleInternal(int)
org/apache/commons/math3/analysis/integration/gauss/LegendreHighPrecisionRuleFactory/computeRule(int)#java/math/BigDecimal/BigDecimal(int,java.math.MathContext)
org/apache/commons/math3/analysis/integration/gauss/LegendreHighPrecisionRuleFactory/computeRule(int)#java/math/BigDecimal/divide(java.math.BigDecimal,java.math.MathContext)
org/apache/commons/math3/analysis/integration/gauss/LegendreHighPrecisionRuleFactory/computeRule(int)#java/math/BigDecimal/ulp()
org/apache/commons/math3/analysis/integration/gauss/LegendreHighPrecisionRuleFactory/computeRule(int)#java/math/BigDecimal/signum()
org/apache/commons/math3/analysis/integration/gauss/LegendreHighPrecisionRuleFactory/computeRule(int)#java/math/BigDecimal/negate(java.math.MathContext)
org/apache/commons/math3/analysis/integration/gauss/LegendreHighPrecisionRuleFactory/computeRule(int)#java/math/BigDecimal/multiply(java.math.BigDecimal,java.math.MathContext)
org/apache/commons/math3/analysis/integration/gauss/LegendreHighPrecisionRuleFactory/computeRule(int)#java/math/BigDecimal/multiply(java.math.BigDecimal)
org/apache/commons/math3/analysis/integration/gauss/LegendreHighPrecisionRuleFactory/computeRule(int)#java/math/BigDecimal/subtract(java.math.BigDecimal,java.math.MathContext)
org/apache/commons/math3/analysis/integration/gauss/LegendreHighPrecisionRuleFactory/computeRule(int)#java/math/BigDecimal/pow(int,java.math.MathContext)
org/apache/commons/math3/analysis/integration/gauss/LegendreHighPrecisionRuleFactory/computeRule(int)#java/math/BigDecimal/add(java.math.BigDecimal,java.math.MathContext)
org/apache/commons/math3/analysis/integration/gauss/LegendreHighPrecisionRuleFactory/computeRule(int)#java/math/BigDecimal/compareTo(java.math.BigDecimal)
org/apache/commons/math3/util/CompositeFormat/parseNumber(java.lang.String,double,java.text.ParsePosition)#java/text/ParsePosition/setIndex(int)
org/apache/commons/math3/util/CompositeFormat/parseNumber(java.lang.String,double,java.text.ParsePosition)#java/lang/Double/valueOf(double)
org/apache/commons/math3/util/CompositeFormat/parseNumber(java.lang.String,double,java.text.ParsePosition)#java/lang/String/compareTo(java.lang.String)
org/apache/commons/math3/util/CompositeFormat/parseNumber(java.lang.String,double,java.text.ParsePosition)#java/lang/String/length()
org/apache/commons/math3/util/CompositeFormat/parseNumber(java.lang.String,double,java.text.ParsePosition)#java/lang/String/substring(int,int)
org/apache/commons/math3/util/CompositeFormat/parseNumber(java.lang.String,double,java.text.ParsePosition)#java/lang/StringBuilder/StringBuilder()
org/apache/commons/math3/util/CompositeFormat/parseNumber(java.lang.String,double,java.text.ParsePosition)#java/lang/StringBuilder/append(char)
org/apache/commons/math3/util/CompositeFormat/parseNumber(java.lang.String,double,java.text.ParsePosition)#java/lang/StringBuilder/length()
org/apache/commons/math3/util/CompositeFormat/parseNumber(java.lang.String,double,java.text.ParsePosition)#java/lang/StringBuilder/append(double)
org/apache/commons/math3/util/CompositeFormat/parseNumber(java.lang.String,double,java.text.ParsePosition)#java/text/ParsePosition/getIndex()
org/apache/commons/math3/util/CompositeFormat/parseNumber(java.lang.String,double,java.text.ParsePosition)#java/lang/StringBuilder/toString()
org/apache/commons/math3/ml/clustering/DBSCANClusterer/cluster(java.util.Collection)#java/util/Iterator/hasNext()
org/apache/commons/math3/ml/clustering/DBSCANClusterer/cluster(java.util.Collection)#java/util/Map/get(java.lang.Object)
org/apache/commons/math3/ml/clustering/DBSCANClusterer/cluster(java.util.Collection)#java/util/List/add(java.lang.Object)
org/apache/commons/math3/ml/clustering/DBSCANClusterer/cluster(java.util.Collection)#java/util/Collection/iterator()
org/apache/commons/math3/ml/clustering/DBSCANClusterer/cluster(java.util.Collection)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/commons/math3/ml/clustering/DBSCANClusterer/cluster(java.util.Collection)#java/util/ArrayList/ArrayList()
org/apache/commons/math3/ml/clustering/DBSCANClusterer/cluster(java.util.Collection)#java/util/List/size()
org/apache/commons/math3/ml/clustering/DBSCANClusterer/cluster(java.util.Collection)#java/util/Iterator/next()
org/apache/commons/math3/ml/clustering/DBSCANClusterer/cluster(java.util.Collection)#java/util/HashMap/HashMap()
org/apache/commons/math3/linear/SymmLQ/solveInPlace(org.apache.commons.math3.linear.RealLinearOperator,org.apache.commons.math3.linear.RealLinearOperator,org.apache.commons.math3.linear.RealVector,org.apache.commons.math3.linear.RealVector,boolean,double)#org/apache/commons/math3/linear/SymmLQ/checkParameters(org.apache.commons.math3.linear.RealLinearOperator,org.apache.commons.math3.linear.RealLinearOperator,org.apache.commons.math3.linear.RealVector,org.apache.commons.math3.linear.RealVector)
org/apache/commons/math3/linear/SymmLQ/solveInPlace(org.apache.commons.math3.linear.RealLinearOperator,org.apache.commons.math3.linear.RealLinearOperator,org.apache.commons.math3.linear.RealVector,org.apache.commons.math3.linear.RealVector,boolean,double)#org/apache/commons/math3/linear/SymmLQ$State/hasConverged()
org/apache/commons/math3/linear/SymmLQ/solveInPlace(org.apache.commons.math3.linear.RealLinearOperator,org.apache.commons.math3.linear.RealLinearOperator,org.apache.commons.math3.linear.RealVector,org.apache.commons.math3.linear.RealVector,boolean,double)#org/apache/commons/math3/linear/SymmLQ$State/bEqualsNullVector()
org/apache/commons/math3/linear/SymmLQ/solveInPlace(org.apache.commons.math3.linear.RealLinearOperator,org.apache.commons.math3.linear.RealLinearOperator,org.apache.commons.math3.linear.RealVector,org.apache.commons.math3.linear.RealVector,boolean,double)#org/apache/commons/math3/linear/SymmLQ$State/State(org.apache.commons.math3.linear.RealLinearOperator,org.apache.commons.math3.linear.RealLinearOperator,org.apache.commons.math3.linear.RealVector,boolean,double,double,boolean)
org/apache/commons/math3/linear/SymmLQ/solveInPlace(org.apache.commons.math3.linear.RealLinearOperator,org.apache.commons.math3.linear.RealLinearOperator,org.apache.commons.math3.linear.RealVector,org.apache.commons.math3.linear.RealVector,boolean,double)#org/apache/commons/math3/linear/SymmLQ$State/betaEqualsZero()
org/apache/commons/math3/linear/SymmLQ/solveInPlace(org.apache.commons.math3.linear.RealLinearOperator,org.apache.commons.math3.linear.RealLinearOperator,org.apache.commons.math3.linear.RealVector,org.apache.commons.math3.linear.RealVector,boolean,double)#org/apache/commons/math3/linear/SymmLQ$State/refineSolution(org.apache.commons.math3.linear.RealVector)
org/apache/commons/math3/linear/SymmLQ/solveInPlace(org.apache.commons.math3.linear.RealLinearOperator,org.apache.commons.math3.linear.RealLinearOperator,org.apache.commons.math3.linear.RealVector,org.apache.commons.math3.linear.RealVector,boolean,double)#org/apache/commons/math3/linear/SymmLQ/getIterationManager()
org/apache/commons/math3/linear/SymmLQ/solveInPlace(org.apache.commons.math3.linear.RealLinearOperator,org.apache.commons.math3.linear.RealLinearOperator,org.apache.commons.math3.linear.RealVector,org.apache.commons.math3.linear.RealVector,boolean,double)#org/apache/commons/math3/linear/SymmLQ$State/update()
org/apache/commons/math3/linear/SymmLQ/solveInPlace(org.apache.commons.math3.linear.RealLinearOperator,org.apache.commons.math3.linear.RealLinearOperator,org.apache.commons.math3.linear.RealVector,org.apache.commons.math3.linear.RealVector,boolean,double)#org/apache/commons/math3/linear/SymmLQ$State/getNormOfResidual()
org/apache/commons/math3/linear/SymmLQ/solveInPlace(org.apache.commons.math3.linear.RealLinearOperator,org.apache.commons.math3.linear.RealLinearOperator,org.apache.commons.math3.linear.RealVector,org.apache.commons.math3.linear.RealVector,boolean,double)#org/apache/commons/math3/linear/SymmLQ$State/init()
org/apache/commons/math3/fraction/ProperFractionFormat/parse(java.lang.String,java.text.ParsePosition)#org/apache/commons/math3/fraction/ProperFractionFormat/getNumeratorFormat()
org/apache/commons/math3/fraction/ProperFractionFormat/parse(java.lang.String,java.text.ParsePosition)#java/text/ParsePosition/setIndex(int)
org/apache/commons/math3/fraction/ProperFractionFormat/parse(java.lang.String,java.text.ParsePosition)#org/apache/commons/math3/fraction/ProperFractionFormat/parseAndIgnoreWhitespace(java.lang.String,java.text.ParsePosition)
org/apache/commons/math3/fraction/ProperFractionFormat/parse(java.lang.String,java.text.ParsePosition)#java/lang/Number/intValue()
org/apache/commons/math3/fraction/ProperFractionFormat/parse(java.lang.String,java.text.ParsePosition)#java/text/ParsePosition/setErrorIndex(int)
org/apache/commons/math3/fraction/ProperFractionFormat/parse(java.lang.String,java.text.ParsePosition)#org/apache/commons/math3/fraction/ProperFractionFormat/parseNextCharacter(java.lang.String,java.text.ParsePosition)
org/apache/commons/math3/fraction/ProperFractionFormat/parse(java.lang.String,java.text.ParsePosition)#org/apache/commons/math3/fraction/ProperFractionFormat/getDenominatorFormat()
org/apache/commons/math3/fraction/ProperFractionFormat/parse(java.lang.String,java.text.ParsePosition)#java/text/NumberFormat/parse(java.lang.String,java.text.ParsePosition)
org/apache/commons/math3/fraction/ProperFractionFormat/parse(java.lang.String,java.text.ParsePosition)#java/text/ParsePosition/getIndex()
org/apache/commons/math3/fraction/ProperFractionFormat/parse(java.lang.String,java.text.ParsePosition)#java/lang/Math/abs(int)
org/apache/commons/math3/optimization/direct/CMAESOptimizer/doOptimize()#org/apache/commons/math3/optimization/direct/CMAESOptimizer/getGoalType()
org/apache/commons/math3/optimization/direct/CMAESOptimizer/doOptimize()#org/apache/commons/math3/optimization/direct/CMAESOptimizer/getStartPoint()
org/apache/commons/math3/optimization/direct/CMAESOptimizer/doOptimize()#java/lang/Math/abs(double)
org/apache/commons/math3/optimization/direct/CMAESOptimizer/doOptimize()#java/lang/Math/max(double,double)
org/apache/commons/math3/optimization/direct/CMAESOptimizer/doOptimize()#java/lang/Math/min(double,double)
org/apache/commons/math3/optimization/direct/CMAESOptimizer/doOptimize()#java/lang/Double/valueOf(double)
org/apache/commons/math3/optimization/direct/CMAESOptimizer/doOptimize()#org/apache/commons/math3/optimization/GoalType/equals(java.lang.Object)
org/apache/commons/math3/optimization/direct/CMAESOptimizer/doOptimize()#org/apache/commons/math3/optimization/direct/CMAESOptimizer$FitnessFunction/isFeasible(double[])
org/apache/commons/math3/optimization/direct/CMAESOptimizer/doOptimize()#java/lang/Math/exp(double)
org/apache/commons/math3/optimization/direct/CMAESOptimizer/doOptimize()#java/util/List/add(java.lang.Object)
org/apache/commons/math3/optimization/direct/CMAESOptimizer/doOptimize()#org/apache/commons/math3/optimization/direct/CMAESOptimizer$FitnessFunction/access$000(org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction,double[])
org/apache/commons/math3/optimization/direct/CMAESOptimizer/doOptimize()#org/apache/commons/math3/optimization/direct/CMAESOptimizer$FitnessFunction/setValueRange(double)
org/apache/commons/math3/optimization/direct/CMAESOptimizer/doOptimize()#org/apache/commons/math3/optimization/direct/CMAESOptimizer$FitnessFunction/value(double[])
org/apache/commons/math3/optimization/direct/CMAESOptimizer/doOptimize()#org/apache/commons/math3/optimization/direct/CMAESOptimizer/getConvergenceChecker()
org/apache/commons/math3/optimization/direct/CMAESOptimizer/doOptimize()#org/apache/commons/math3/optimization/direct/CMAESOptimizer$FitnessFunction/FitnessFunction(org.apache.commons.math3.optimization.direct.CMAESOptimizer)
org/apache/commons/math3/distribution/AbstractIntegerDistribution/inverseCumulativeProbability(double)#java/lang/Math/ceil(double)
org/apache/commons/math3/distribution/AbstractIntegerDistribution/inverseCumulativeProbability(double)#org/apache/commons/math3/distribution/AbstractIntegerDistribution/getNumericalVariance()
org/apache/commons/math3/distribution/AbstractIntegerDistribution/inverseCumulativeProbability(double)#java/lang/Double/valueOf(double)
org/apache/commons/math3/distribution/AbstractIntegerDistribution/inverseCumulativeProbability(double)#org/apache/commons/math3/distribution/AbstractIntegerDistribution/getSupportUpperBound()
org/apache/commons/math3/distribution/AbstractIntegerDistribution/inverseCumulativeProbability(double)#java/lang/Double/isNaN(double)
org/apache/commons/math3/distribution/AbstractIntegerDistribution/inverseCumulativeProbability(double)#java/lang/Double/isInfinite(double)
org/apache/commons/math3/distribution/AbstractIntegerDistribution/inverseCumulativeProbability(double)#java/lang/Integer/valueOf(int)
org/apache/commons/math3/distribution/AbstractIntegerDistribution/inverseCumulativeProbability(double)#org/apache/commons/math3/distribution/AbstractIntegerDistribution/getNumericalMean()
org/apache/commons/math3/distribution/AbstractIntegerDistribution/inverseCumulativeProbability(double)#org/apache/commons/math3/distribution/AbstractIntegerDistribution/getSupportLowerBound()
org/apache/commons/math3/dfp/DfpDec/nextAfter(org.apache.commons.math3.dfp.Dfp)#org/apache/commons/math3/dfp/DfpDec/getZero()
org/apache/commons/math3/dfp/DfpDec/nextAfter(org.apache.commons.math3.dfp.Dfp)#org/apache/commons/math3/dfp/DfpDec/intLog10()
org/apache/commons/math3/dfp/DfpDec/nextAfter(org.apache.commons.math3.dfp.Dfp)#org/apache/commons/math3/dfp/DfpDec/power10(int)
org/apache/commons/math3/dfp/DfpDec/nextAfter(org.apache.commons.math3.dfp.Dfp)#org/apache/commons/math3/dfp/DfpDec/subtract(org.apache.commons.math3.dfp.Dfp)
org/apache/commons/math3/dfp/DfpDec/nextAfter(org.apache.commons.math3.dfp.Dfp)#org/apache/commons/math3/dfp/DfpDec/power10K(int)
org/apache/commons/math3/dfp/DfpDec/nextAfter(org.apache.commons.math3.dfp.Dfp)#org/apache/commons/math3/dfp/DfpDec/lessThan(org.apache.commons.math3.dfp.Dfp)
org/apache/commons/math3/dfp/DfpDec/nextAfter(org.apache.commons.math3.dfp.Dfp)#org/apache/commons/math3/dfp/DfpDec/equals(java.lang.Object)
org/apache/commons/math3/dfp/DfpDec/nextAfter(org.apache.commons.math3.dfp.Dfp)#org/apache/commons/math3/dfp/DfpDec/dotrap(int,java.lang.String,org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp)
org/apache/commons/math3/dfp/DfpDec/nextAfter(org.apache.commons.math3.dfp.Dfp)#org/apache/commons/math3/dfp/DfpDec/add(org.apache.commons.math3.dfp.Dfp)
org/apache/commons/math3/dfp/DfpDec/nextAfter(org.apache.commons.math3.dfp.Dfp)#org/apache/commons/math3/dfp/DfpDec/copysign(org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp)
org/apache/commons/math3/dfp/DfpDec/nextAfter(org.apache.commons.math3.dfp.Dfp)#org/apache/commons/math3/dfp/DfpDec/classify()
org/apache/commons/math3/dfp/DfpDec/nextAfter(org.apache.commons.math3.dfp.Dfp)#org/apache/commons/math3/dfp/DfpDec/getField()
org/apache/commons/math3/ml/clustering/KMeansPlusPlusClusterer/cluster(java.util.Collection)#java/util/ArrayList/ArrayList()
org/apache/commons/math3/ml/clustering/KMeansPlusPlusClusterer/cluster(java.util.Collection)#org/apache/commons/math3/ml/clustering/KMeansPlusPlusClusterer$EmptyClusterStrategy/ordinal()
org/apache/commons/math3/ml/clustering/KMeansPlusPlusClusterer/cluster(java.util.Collection)#java/util/List/isEmpty()
org/apache/commons/math3/ml/clustering/KMeansPlusPlusClusterer/cluster(java.util.Collection)#java/util/List/add(java.lang.Object)
org/apache/commons/math3/ml/clustering/KMeansPlusPlusClusterer/cluster(java.util.Collection)#java/util/List/iterator()
org/apache/commons/math3/ml/clustering/KMeansPlusPlusClusterer/cluster(java.util.Collection)#java/util/Iterator/hasNext()
org/apache/commons/math3/ml/clustering/KMeansPlusPlusClusterer/cluster(java.util.Collection)#org/apache/commons/math3/ml/clustering/CentroidCluster/getPoints()
org/apache/commons/math3/ml/clustering/KMeansPlusPlusClusterer/cluster(java.util.Collection)#java/util/Collection/size()
org/apache/commons/math3/ml/clustering/KMeansPlusPlusClusterer/cluster(java.util.Collection)#java/util/Iterator/next()
org/apache/commons/math3/ml/clustering/KMeansPlusPlusClusterer/cluster(java.util.Collection)#java/lang/Integer/valueOf(int)
org/apache/commons/math3/ml/clustering/KMeansPlusPlusClusterer/getPointFromLargestVarianceCluster(java.util.Collection)#java/util/List/isEmpty()
org/apache/commons/math3/ml/clustering/KMeansPlusPlusClusterer/getPointFromLargestVarianceCluster(java.util.Collection)#java/util/Iterator/next()
org/apache/commons/math3/ml/clustering/KMeansPlusPlusClusterer/getPointFromLargestVarianceCluster(java.util.Collection)#org/apache/commons/math3/ml/clustering/KMeansPlusPlusClusterer/distance(org.apache.commons.math3.ml.clustering.Clusterable,org.apache.commons.math3.ml.clustering.Clusterable)
org/apache/commons/math3/ml/clustering/KMeansPlusPlusClusterer/getPointFromLargestVarianceCluster(java.util.Collection)#java/util/Iterator/hasNext()
org/apache/commons/math3/ml/clustering/KMeansPlusPlusClusterer/getPointFromLargestVarianceCluster(java.util.Collection)#org/apache/commons/math3/ml/clustering/CentroidCluster/getPoints()
org/apache/commons/math3/ml/clustering/KMeansPlusPlusClusterer/getPointFromLargestVarianceCluster(java.util.Collection)#java/util/List/remove(int)
org/apache/commons/math3/ml/clustering/KMeansPlusPlusClusterer/getPointFromLargestVarianceCluster(java.util.Collection)#java/util/List/size()
org/apache/commons/math3/ml/clustering/KMeansPlusPlusClusterer/getPointFromLargestVarianceCluster(java.util.Collection)#java/util/List/iterator()
org/apache/commons/math3/ml/clustering/KMeansPlusPlusClusterer/getPointFromLargestVarianceCluster(java.util.Collection)#java/util/Collection/iterator()
org/apache/commons/math3/ode/nonstiff/RungeKuttaIntegrator/integrate(org.apache.commons.math3.ode.ExpandableStatefulODE,double)#org/apache/commons/math3/ode/nonstiff/RungeKuttaIntegrator/setEquations(org.apache.commons.math3.ode.ExpandableStatefulODE)
org/apache/commons/math3/ode/nonstiff/RungeKuttaIntegrator/integrate(org.apache.commons.math3.ode.ExpandableStatefulODE,double)#org/apache/commons/math3/ode/nonstiff/RungeKuttaStepInterpolator/copy()
org/apache/commons/math3/ode/nonstiff/RungeKuttaIntegrator/integrate(org.apache.commons.math3.ode.ExpandableStatefulODE,double)#org/apache/commons/math3/ode/nonstiff/RungeKuttaIntegrator/computeDerivatives(double,double[],double[])
org/apache/commons/math3/ode/nonstiff/RungeKuttaIntegrator/integrate(org.apache.commons.math3.ode.ExpandableStatefulODE,double)#java/lang/System/arraycopy(java.lang.Object,int,java.lang.Object,int,int)
org/apache/commons/math3/ode/nonstiff/RungeKuttaIntegrator/integrate(org.apache.commons.math3.ode.ExpandableStatefulODE,double)#org/apache/commons/math3/ode/nonstiff/RungeKuttaIntegrator/acceptStep(org.apache.commons.math3.ode.sampling.AbstractStepInterpolator,double[],double[],double)
org/apache/commons/math3/ode/nonstiff/RungeKuttaIntegrator/integrate(org.apache.commons.math3.ode.ExpandableStatefulODE,double)#[D/clone()
org/apache/commons/math3/ode/nonstiff/RungeKuttaIntegrator/integrate(org.apache.commons.math3.ode.ExpandableStatefulODE,double)#org/apache/commons/math3/ode/nonstiff/RungeKuttaIntegrator/sanityChecks(org.apache.commons.math3.ode.ExpandableStatefulODE,double)
org/apache/commons/math3/ode/nonstiff/RungeKuttaIntegrator/integrate(org.apache.commons.math3.ode.ExpandableStatefulODE,double)#org/apache/commons/math3/ode/nonstiff/RungeKuttaIntegrator/initIntegration(double,double[],double)
org/apache/commons/math3/ode/nonstiff/RungeKuttaIntegrator/integrate(org.apache.commons.math3.ode.ExpandableStatefulODE,double)#org/apache/commons/math3/ode/nonstiff/RungeKuttaStepInterpolator/storeTime(double)
org/apache/commons/math3/optimization/general/NonLinearConjugateGradientOptimizer/doOptimize()#org/apache/commons/math3/optimization/general/NonLinearConjugateGradientOptimizer/computeObjectiveValue(double[])
org/apache/commons/math3/optimization/general/NonLinearConjugateGradientOptimizer/doOptimize()#org/apache/commons/math3/optimization/general/NonLinearConjugateGradientOptimizer/getGoalType()
org/apache/commons/math3/optimization/general/NonLinearConjugateGradientOptimizer/doOptimize()#org/apache/commons/math3/optimization/general/NonLinearConjugateGradientOptimizer/getStartPoint()
org/apache/commons/math3/optimization/general/NonLinearConjugateGradientOptimizer/doOptimize()#org/apache/commons/math3/optimization/general/NonLinearConjugateGradientOptimizer/getMaxEvaluations()
org/apache/commons/math3/optimization/general/NonLinearConjugateGradientOptimizer/doOptimize()#org/apache/commons/math3/analysis/solvers/UnivariateSolver/solve(int,org.apache.commons.math3.analysis.UnivariateFunction,double,double,double)
org/apache/commons/math3/optimization/general/NonLinearConjugateGradientOptimizer/doOptimize()#org/apache/commons/math3/analysis/solvers/UnivariateSolver/getEvaluations()
org/apache/commons/math3/optimization/general/NonLinearConjugateGradientOptimizer/doOptimize()#org/apache/commons/math3/optimization/general/NonLinearConjugateGradientOptimizer$LineSearchFunction/LineSearchFunction(org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer,double[])
org/apache/commons/math3/optimization/general/NonLinearConjugateGradientOptimizer/doOptimize()#org/apache/commons/math3/optimization/general/NonLinearConjugateGradientOptimizer/getConvergenceChecker()
org/apache/commons/math3/optimization/general/NonLinearConjugateGradientOptimizer/doOptimize()#[D/clone()
org/apache/commons/math3/optimization/general/NonLinearConjugateGradientOptimizer/doOptimize()#org/apache/commons/math3/optimization/general/NonLinearConjugateGradientOptimizer/computeObjectiveGradient(double[])
org/apache/commons/math3/ode/nonstiff/GraggBulirschStoerIntegrator/integrate(org.apache.commons.math3.ode.ExpandableStatefulODE,double)#org/apache/commons/math3/ode/nonstiff/GraggBulirschStoerIntegrator/filterStep(double,boolean,boolean)
org/apache/commons/math3/ode/nonstiff/GraggBulirschStoerIntegrator/integrate(org.apache.commons.math3.ode.ExpandableStatefulODE,double)#org/apache/commons/math3/ode/nonstiff/GraggBulirschStoerIntegrator/initializeStep(boolean,int,double[],double,double[],double[],double[],double[])
org/apache/commons/math3/ode/nonstiff/GraggBulirschStoerIntegrator/integrate(org.apache.commons.math3.ode.ExpandableStatefulODE,double)#[D/clone()
org/apache/commons/math3/ode/nonstiff/GraggBulirschStoerIntegrator/integrate(org.apache.commons.math3.ode.ExpandableStatefulODE,double)#org/apache/commons/math3/ode/nonstiff/GraggBulirschStoerIntegrator/sanityChecks(org.apache.commons.math3.ode.ExpandableStatefulODE,double)
org/apache/commons/math3/ode/nonstiff/GraggBulirschStoerIntegrator/integrate(org.apache.commons.math3.ode.ExpandableStatefulODE,double)#org/apache/commons/math3/ode/nonstiff/GraggBulirschStoerIntegrator/initIntegration(double,double[],double)
org/apache/commons/math3/ode/nonstiff/GraggBulirschStoerIntegrator/integrate(org.apache.commons.math3.ode.ExpandableStatefulODE,double)#org/apache/commons/math3/ode/nonstiff/GraggBulirschStoerIntegrator/setEquations(org.apache.commons.math3.ode.ExpandableStatefulODE)
org/apache/commons/math3/ode/nonstiff/GraggBulirschStoerIntegrator/integrate(org.apache.commons.math3.ode.ExpandableStatefulODE,double)#org/apache/commons/math3/ode/nonstiff/GraggBulirschStoerIntegrator/acceptStep(org.apache.commons.math3.ode.sampling.AbstractStepInterpolator,double[],double[],double)
org/apache/commons/math3/ode/nonstiff/GraggBulirschStoerIntegrator/integrate(org.apache.commons.math3.ode.ExpandableStatefulODE,double)#org/apache/commons/math3/ode/nonstiff/GraggBulirschStoerIntegrator/getMaxStep()
org/apache/commons/math3/ode/nonstiff/GraggBulirschStoerIntegrator/integrate(org.apache.commons.math3.ode.ExpandableStatefulODE,double)#org/apache/commons/math3/ode/nonstiff/GraggBulirschStoerIntegrator/computeDerivatives(double,double[],double[])
org/apache/commons/math3/ode/nonstiff/GraggBulirschStoerIntegrator/integrate(org.apache.commons.math3.ode.ExpandableStatefulODE,double)#org/apache/commons/math3/ode/nonstiff/GraggBulirschStoerIntegrator/resetInternalState()
org/apache/commons/math3/ode/nonstiff/GraggBulirschStoerIntegrator/integrate(org.apache.commons.math3.ode.ExpandableStatefulODE,double)#java/lang/System/arraycopy(java.lang.Object,int,java.lang.Object,int,int)
org/apache/commons/math3/ode/AbstractIntegrator/acceptStep(org.apache.commons.math3.ode.sampling.AbstractStepInterpolator,double[],double[],double)#java/util/SortedSet/iterator()
org/apache/commons/math3/ode/AbstractIntegrator/acceptStep(org.apache.commons.math3.ode.sampling.AbstractStepInterpolator,double[],double[],double)#java/util/SortedSet/isEmpty()
org/apache/commons/math3/ode/AbstractIntegrator/acceptStep(org.apache.commons.math3.ode.sampling.AbstractStepInterpolator,double[],double[],double)#java/util/SortedSet/add(java.lang.Object)
org/apache/commons/math3/ode/AbstractIntegrator/acceptStep(org.apache.commons.math3.ode.sampling.AbstractStepInterpolator,double[],double[],double)#java/util/Iterator/remove()
org/apache/commons/math3/ode/AbstractIntegrator/acceptStep(org.apache.commons.math3.ode.sampling.AbstractStepInterpolator,double[],double[],double)#java/util/Iterator/hasNext()
org/apache/commons/math3/ode/AbstractIntegrator/acceptStep(org.apache.commons.math3.ode.sampling.AbstractStepInterpolator,double[],double[],double)#java/util/TreeSet/TreeSet(java.util.Comparator)
org/apache/commons/math3/ode/AbstractIntegrator/acceptStep(org.apache.commons.math3.ode.sampling.AbstractStepInterpolator,double[],double[],double)#java/util/Iterator/next()
org/apache/commons/math3/ode/AbstractIntegrator/acceptStep(org.apache.commons.math3.ode.sampling.AbstractStepInterpolator,double[],double[],double)#org/apache/commons/math3/ode/AbstractIntegrator$1/1(org.apache.commons.math3.ode.AbstractIntegrator,int)
org/apache/commons/math3/ode/AbstractIntegrator/acceptStep(org.apache.commons.math3.ode.sampling.AbstractStepInterpolator,double[],double[],double)#[D/clone()
org/apache/commons/math3/ode/AbstractIntegrator/acceptStep(org.apache.commons.math3.ode.sampling.AbstractStepInterpolator,double[],double[],double)#java/util/Collection/iterator()
org/apache/commons/math3/ode/AbstractIntegrator/acceptStep(org.apache.commons.math3.ode.sampling.AbstractStepInterpolator,double[],double[],double)#java/lang/System/arraycopy(java.lang.Object,int,java.lang.Object,int,int)
org/apache/commons/math3/genetics/OrderedCrossover/mate(org.apache.commons.math3.genetics.AbstractListChromosome,org.apache.commons.math3.genetics.AbstractListChromosome)#java/util/ArrayList/ArrayList(int)
org/apache/commons/math3/genetics/OrderedCrossover/mate(org.apache.commons.math3.genetics.AbstractListChromosome,org.apache.commons.math3.genetics.AbstractListChromosome)#java/util/List/subList(int,int)
org/apache/commons/math3/genetics/OrderedCrossover/mate(org.apache.commons.math3.genetics.AbstractListChromosome,org.apache.commons.math3.genetics.AbstractListChromosome)#java/util/Collections/rotate(java.util.List,int)
org/apache/commons/math3/genetics/OrderedCrossover/mate(org.apache.commons.math3.genetics.AbstractListChromosome,org.apache.commons.math3.genetics.AbstractListChromosome)#java/util/List/addAll(java.util.Collection)
org/apache/commons/math3/genetics/OrderedCrossover/mate(org.apache.commons.math3.genetics.AbstractListChromosome,org.apache.commons.math3.genetics.AbstractListChromosome)#java/util/List/add(java.lang.Object)
org/apache/commons/math3/genetics/OrderedCrossover/mate(org.apache.commons.math3.genetics.AbstractListChromosome,org.apache.commons.math3.genetics.AbstractListChromosome)#java/util/List/get(int)
org/apache/commons/math3/genetics/OrderedCrossover/mate(org.apache.commons.math3.genetics.AbstractListChromosome,org.apache.commons.math3.genetics.AbstractListChromosome)#java/util/Set/add(java.lang.Object)
org/apache/commons/math3/genetics/OrderedCrossover/mate(org.apache.commons.math3.genetics.AbstractListChromosome,org.apache.commons.math3.genetics.AbstractListChromosome)#java/util/Set/addAll(java.util.Collection)
org/apache/commons/math3/genetics/OrderedCrossover/mate(org.apache.commons.math3.genetics.AbstractListChromosome,org.apache.commons.math3.genetics.AbstractListChromosome)#java/util/HashSet/HashSet(int)
org/apache/commons/math3/genetics/OrderedCrossover/mate(org.apache.commons.math3.genetics.AbstractListChromosome,org.apache.commons.math3.genetics.AbstractListChromosome)#java/util/Set/contains(java.lang.Object)
org/apache/commons/math3/analysis/solvers/BaseSecantSolver/doSolve()#org/apache/commons/math3/analysis/solvers/BaseSecantSolver/getRelativeAccuracy()
org/apache/commons/math3/analysis/solvers/BaseSecantSolver/doSolve()#org/apache/commons/math3/analysis/solvers/BaseSecantSolver/computeObjectiveValue(double)
org/apache/commons/math3/analysis/solvers/BaseSecantSolver/doSolve()#org/apache/commons/math3/analysis/solvers/BaseSecantSolver$Method/ordinal()
org/apache/commons/math3/analysis/solvers/BaseSecantSolver/doSolve()#org/apache/commons/math3/analysis/solvers/BaseSecantSolver/getAbsoluteAccuracy()
org/apache/commons/math3/analysis/solvers/BaseSecantSolver/doSolve()#org/apache/commons/math3/analysis/solvers/BaseSecantSolver/getMin()
org/apache/commons/math3/analysis/solvers/BaseSecantSolver/doSolve()#org/apache/commons/math3/analysis/solvers/BaseSecantSolver/getFunctionValueAccuracy()
org/apache/commons/math3/analysis/solvers/BaseSecantSolver/doSolve()#org/apache/commons/math3/analysis/solvers/BaseSecantSolver/verifyBracketing(double,double)
org/apache/commons/math3/analysis/solvers/BaseSecantSolver/doSolve()#org/apache/commons/math3/analysis/solvers/BaseSecantSolver/getMax()
org/apache/commons/math3/analysis/solvers/BaseSecantSolver/doSolve()#org/apache/commons/math3/analysis/solvers/AllowedSolution/ordinal()
org/apache/commons/math3/random/RandomDataGenerator/nextSecureHexString(int)#java/lang/Integer/intValue()
org/apache/commons/math3/random/RandomDataGenerator/nextSecureHexString(int)#java/security/MessageDigest/digest()
org/apache/commons/math3/random/RandomDataGenerator/nextSecureHexString(int)#java/security/MessageDigest/reset()
org/apache/commons/math3/random/RandomDataGenerator/nextSecureHexString(int)#java/lang/StringBuilder/append(java.lang.String)
org/apache/commons/math3/random/RandomDataGenerator/nextSecureHexString(int)#java/lang/Integer/toHexString(int)
org/apache/commons/math3/random/RandomDataGenerator/nextSecureHexString(int)#java/lang/String/substring(int,int)
org/apache/commons/math3/random/RandomDataGenerator/nextSecureHexString(int)#java/lang/StringBuilder/StringBuilder()
org/apache/commons/math3/random/RandomDataGenerator/nextSecureHexString(int)#java/security/SecureRandom/nextBytes(byte[])
org/apache/commons/math3/random/RandomDataGenerator/nextSecureHexString(int)#java/lang/Integer/valueOf(int)
org/apache/commons/math3/random/RandomDataGenerator/nextSecureHexString(int)#java/security/MessageDigest/getInstance(java.lang.String)
org/apache/commons/math3/random/RandomDataGenerator/nextSecureHexString(int)#java/lang/String/length()
org/apache/commons/math3/random/RandomDataGenerator/nextSecureHexString(int)#java/lang/StringBuilder/toString()
org/apache/commons/math3/random/RandomDataGenerator/nextSecureHexString(int)#java/security/MessageDigest/update(byte[])
org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet/followLoop(org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node,org.apache.commons.math3.geometry.partitioning.utilities.AVLTree)#java/util/ArrayList/ArrayList()
org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet/followLoop(org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node,org.apache.commons.math3.geometry.partitioning.utilities.AVLTree)#org/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node/getNext()
org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet/followLoop(org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node,org.apache.commons.math3.geometry.partitioning.utilities.AVLTree)#org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet$ComparableSegment/compareTo(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$ComparableSegment)
org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet/followLoop(org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node,org.apache.commons.math3.geometry.partitioning.utilities.AVLTree)#java/util/ArrayList/add(java.lang.Object)
org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet/followLoop(org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node,org.apache.commons.math3.geometry.partitioning.utilities.AVLTree)#java/util/ArrayList/size()
org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet/followLoop(org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node,org.apache.commons.math3.geometry.partitioning.utilities.AVLTree)#org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet$ComparableSegment/getEnd()
org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet/followLoop(org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node,org.apache.commons.math3.geometry.partitioning.utilities.AVLTree)#org/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node/getElement()
org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet/followLoop(org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node,org.apache.commons.math3.geometry.partitioning.utilities.AVLTree)#org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet$ComparableSegment/getStart()
org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet/followLoop(org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node,org.apache.commons.math3.geometry.partitioning.utilities.AVLTree)#org/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node/delete()
org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet/followLoop(org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node,org.apache.commons.math3.geometry.partitioning.utilities.AVLTree)#org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet$ComparableSegment/ComparableSegment(org.apache.commons.math3.geometry.euclidean.twod.Vector2D,double,double)
org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet/getVertices()#java/util/ArrayList/ArrayList()
org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet/getVertices()#java/util/Iterator/hasNext()
org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet/getVertices()#org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet$ComparableSegment/getLine()
org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet/getVertices()#java/util/Iterator/next()
org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet/getVertices()#java/util/ArrayList/size()
org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet/getVertices()#org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet$SegmentsBuilder/getSorted()
org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet/getVertices()#java/util/List/get(int)
org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet/getVertices()#java/util/ArrayList/iterator()
org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet/getVertices()#org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet/getTree(boolean)
org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet/getVertices()#org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet$SegmentsBuilder/SegmentsBuilder()
org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet/getVertices()#org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet$ComparableSegment/getStart()
org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet/getVertices()#java/util/List/size()
org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet/getVertices()#java/util/ArrayList/add(java.lang.Object)
org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet/getVertices()#[[Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;/clone()
org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet/getVertices()#java/util/List/iterator()
org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet/insertEdges(double,org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.List)#org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet$Edge/split(org.apache.commons.math3.geometry.euclidean.twod.Line)
org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet/insertEdges(double,org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.List)#org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet$Vertex/getLocation()
org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet/insertEdges(double,org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.List)#java/util/ArrayList/ArrayList()
org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet/insertEdges(double,org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.List)#java/util/Iterator/hasNext()
org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet/insertEdges(double,org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.List)#java/util/List/size()
org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet/insertEdges(double,org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.List)#org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet$Edge/setNode(org.apache.commons.math3.geometry.partitioning.BSPTree)
org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet/insertEdges(double,org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.List)#org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet$Vertex/getIncoming()
org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet/insertEdges(double,org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.List)#org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet$Edge/getStart()
org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet/insertEdges(double,org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.List)#java/util/List/add(java.lang.Object)
org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet/insertEdges(double,org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.List)#org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet$Edge/getLine()
org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet/insertEdges(double,org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.List)#java/util/List/iterator()
org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet/insertEdges(double,org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.List)#org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet$Edge/getNode()
org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet/insertEdges(double,org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.List)#org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet$Edge/getEnd()
org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet/insertEdges(double,org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.List)#java/util/List/isEmpty()
org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet/insertEdges(double,org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.List)#java/util/Iterator/next()
org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet/insertEdges(double,org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.List)#org/apache/commons/math3/geometry/partitioning/Side/ordinal()
org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet/insertEdges(double,org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.List)#org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet$Vertex/getOutgoing()
org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet/insertEdges(double,org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.List)#java/util/List/get(int)
org/apache/commons/math3/linear/RealMatrixFormat/parse(java.lang.String,java.text.ParsePosition)#java/util/ArrayList/ArrayList()
org/apache/commons/math3/linear/RealMatrixFormat/parse(java.lang.String,java.text.ParsePosition)#java/text/ParsePosition/setIndex(int)
org/apache/commons/math3/linear/RealMatrixFormat/parse(java.lang.String,java.text.ParsePosition)#java/util/Iterator/hasNext()
org/apache/commons/math3/linear/RealMatrixFormat/parse(java.lang.String,java.text.ParsePosition)#java/util/List/size()
org/apache/commons/math3/linear/RealMatrixFormat/parse(java.lang.String,java.text.ParsePosition)#java/util/Iterator/next()
org/apache/commons/math3/linear/RealMatrixFormat/parse(java.lang.String,java.text.ParsePosition)#java/util/List/add(java.lang.Object)
org/apache/commons/math3/linear/RealMatrixFormat/parse(java.lang.String,java.text.ParsePosition)#java/util/List/get(int)
org/apache/commons/math3/linear/RealMatrixFormat/parse(java.lang.String,java.text.ParsePosition)#java/util/List/iterator()
org/apache/commons/math3/linear/RealMatrixFormat/parse(java.lang.String,java.text.ParsePosition)#java/text/ParsePosition/getIndex()
org/apache/commons/math3/linear/RealMatrixFormat/parse(java.lang.String,java.text.ParsePosition)#java/lang/Number/doubleValue()
org/apache/commons/math3/linear/RealMatrixFormat/parse(java.lang.String,java.text.ParsePosition)#java/lang/String/trim()
org/apache/commons/math3/linear/RealMatrixFormat/parse(java.lang.String,java.text.ParsePosition)#java/util/List/isEmpty()
org/apache/commons/math3/linear/RealMatrixFormat/parse(java.lang.String,java.text.ParsePosition)#java/lang/String/length()
org/apache/commons/math3/fraction/ProperBigFractionFormat/parse(java.lang.String,java.text.ParsePosition)#java/text/ParsePosition/setIndex(int)
org/apache/commons/math3/fraction/ProperBigFractionFormat/parse(java.lang.String,java.text.ParsePosition)#java/math/BigInteger/compareTo(java.math.BigInteger)
org/apache/commons/math3/fraction/ProperBigFractionFormat/parse(java.lang.String,java.text.ParsePosition)#java/math/BigInteger/add(java.math.BigInteger)
org/apache/commons/math3/fraction/ProperBigFractionFormat/parse(java.lang.String,java.text.ParsePosition)#org/apache/commons/math3/fraction/ProperBigFractionFormat/parseNextBigInteger(java.lang.String,java.text.ParsePosition)
org/apache/commons/math3/fraction/ProperBigFractionFormat/parse(java.lang.String,java.text.ParsePosition)#org/apache/commons/math3/fraction/ProperBigFractionFormat/parseNextCharacter(java.lang.String,java.text.ParsePosition)
org/apache/commons/math3/fraction/ProperBigFractionFormat/parse(java.lang.String,java.text.ParsePosition)#java/math/BigInteger/negate()
org/apache/commons/math3/fraction/ProperBigFractionFormat/parse(java.lang.String,java.text.ParsePosition)#java/text/ParsePosition/setErrorIndex(int)
org/apache/commons/math3/fraction/ProperBigFractionFormat/parse(java.lang.String,java.text.ParsePosition)#java/text/ParsePosition/getIndex()
org/apache/commons/math3/fraction/ProperBigFractionFormat/parse(java.lang.String,java.text.ParsePosition)#java/math/BigInteger/multiply(java.math.BigInteger)
org/apache/commons/math3/fraction/ProperBigFractionFormat/parse(java.lang.String,java.text.ParsePosition)#org/apache/commons/math3/fraction/ProperBigFractionFormat/parseAndIgnoreWhitespace(java.lang.String,java.text.ParsePosition)
org/apache/commons/math3/fraction/ProperBigFractionFormat/format(org.apache.commons.math3.fraction.BigFraction,java.lang.StringBuffer,java.text.FieldPosition)#java/lang/StringBuffer/append(char)
org/apache/commons/math3/fraction/ProperBigFractionFormat/format(org.apache.commons.math3.fraction.BigFraction,java.lang.StringBuffer,java.text.FieldPosition)#java/math/BigInteger/compareTo(java.math.BigInteger)
org/apache/commons/math3/fraction/ProperBigFractionFormat/format(org.apache.commons.math3.fraction.BigFraction,java.lang.StringBuffer,java.text.FieldPosition)#java/math/BigInteger/remainder(java.math.BigInteger)
org/apache/commons/math3/fraction/ProperBigFractionFormat/format(org.apache.commons.math3.fraction.BigFraction,java.lang.StringBuffer,java.text.FieldPosition)#java/text/FieldPosition/setBeginIndex(int)
org/apache/commons/math3/fraction/ProperBigFractionFormat/format(org.apache.commons.math3.fraction.BigFraction,java.lang.StringBuffer,java.text.FieldPosition)#org/apache/commons/math3/fraction/ProperBigFractionFormat/getDenominatorFormat()
org/apache/commons/math3/fraction/ProperBigFractionFormat/format(org.apache.commons.math3.fraction.BigFraction,java.lang.StringBuffer,java.text.FieldPosition)#java/math/BigInteger/divide(java.math.BigInteger)
org/apache/commons/math3/fraction/ProperBigFractionFormat/format(org.apache.commons.math3.fraction.BigFraction,java.lang.StringBuffer,java.text.FieldPosition)#java/math/BigInteger/negate()
org/apache/commons/math3/fraction/ProperBigFractionFormat/format(org.apache.commons.math3.fraction.BigFraction,java.lang.StringBuffer,java.text.FieldPosition)#org/apache/commons/math3/fraction/ProperBigFractionFormat/getNumeratorFormat()
org/apache/commons/math3/fraction/ProperBigFractionFormat/format(org.apache.commons.math3.fraction.BigFraction,java.lang.StringBuffer,java.text.FieldPosition)#java/text/NumberFormat/format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)
org/apache/commons/math3/fraction/ProperBigFractionFormat/format(org.apache.commons.math3.fraction.BigFraction,java.lang.StringBuffer,java.text.FieldPosition)#java/lang/StringBuffer/append(java.lang.String)
org/apache/commons/math3/fraction/ProperBigFractionFormat/format(org.apache.commons.math3.fraction.BigFraction,java.lang.StringBuffer,java.text.FieldPosition)#java/math/BigInteger/equals(java.lang.Object)
org/apache/commons/math3/fraction/ProperBigFractionFormat/format(org.apache.commons.math3.fraction.BigFraction,java.lang.StringBuffer,java.text.FieldPosition)#java/text/FieldPosition/setEndIndex(int)
org/apache/commons/math3/stat/clustering/DBSCANClusterer/cluster(java.util.Collection)#java/util/Map/get(java.lang.Object)
org/apache/commons/math3/stat/clustering/DBSCANClusterer/cluster(java.util.Collection)#java/util/List/add(java.lang.Object)
org/apache/commons/math3/stat/clustering/DBSCANClusterer/cluster(java.util.Collection)#java/util/Collection/iterator()
org/apache/commons/math3/stat/clustering/DBSCANClusterer/cluster(java.util.Collection)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/commons/math3/stat/clustering/DBSCANClusterer/cluster(java.util.Collection)#java/util/ArrayList/ArrayList()
org/apache/commons/math3/stat/clustering/DBSCANClusterer/cluster(java.util.Collection)#java/util/Iterator/hasNext()
org/apache/commons/math3/stat/clustering/DBSCANClusterer/cluster(java.util.Collection)#java/util/List/size()
org/apache/commons/math3/stat/clustering/DBSCANClusterer/cluster(java.util.Collection)#java/util/Iterator/next()
org/apache/commons/math3/stat/clustering/DBSCANClusterer/cluster(java.util.Collection)#java/util/HashMap/HashMap()
org/apache/commons/math3/stat/ranking/NaturalRanking/rank(double[])#java/util/ArrayList/ArrayList()
org/apache/commons/math3/stat/ranking/NaturalRanking/rank(double[])#java/lang/Double/compare(double,double)
org/apache/commons/math3/stat/ranking/NaturalRanking/rank(double[])#org/apache/commons/math3/stat/ranking/NaturalRanking$IntDoublePair/getValue()
org/apache/commons/math3/stat/ranking/NaturalRanking/rank(double[])#org/apache/commons/math3/stat/ranking/NaNStrategy/ordinal()
org/apache/commons/math3/stat/ranking/NaturalRanking/rank(double[])#java/util/Arrays/sort(java.lang.Object[])
org/apache/commons/math3/stat/ranking/NaturalRanking/rank(double[])#org/apache/commons/math3/stat/ranking/NaturalRanking$IntDoublePair/getPosition()
org/apache/commons/math3/stat/ranking/NaturalRanking/rank(double[])#org/apache/commons/math3/stat/ranking/NaturalRanking$IntDoublePair/IntDoublePair(double,int)
org/apache/commons/math3/stat/ranking/NaturalRanking/rank(double[])#java/util/List/size()
org/apache/commons/math3/stat/ranking/NaturalRanking/rank(double[])#java/util/List/add(java.lang.Object)
org/apache/commons/math3/stat/ranking/NaturalRanking/rank(double[])#java/lang/Integer/valueOf(int)
org/apache/commons/math3/distribution/fitting/MultivariateNormalMixtureExpectationMaximization/fit(org.apache.commons.math3.distribution.MixtureMultivariateNormalDistribution,int,double)#org/apache/commons/math3/distribution/MixtureMultivariateNormalDistribution/getComponents()
org/apache/commons/math3/distribution/fitting/MultivariateNormalMixtureExpectationMaximization/fit(org.apache.commons.math3.distribution.MixtureMultivariateNormalDistribution,int,double)#java/lang/Double/valueOf(double)
org/apache/commons/math3/distribution/fitting/MultivariateNormalMixtureExpectationMaximization/fit(org.apache.commons.math3.distribution.MixtureMultivariateNormalDistribution,int,double)#java/lang/Math/abs(double)
org/apache/commons/math3/distribution/fitting/MultivariateNormalMixtureExpectationMaximization/fit(org.apache.commons.math3.distribution.MixtureMultivariateNormalDistribution,int,double)#org/apache/commons/math3/distribution/MixtureMultivariateNormalDistribution/density(double[])
org/apache/commons/math3/distribution/fitting/MultivariateNormalMixtureExpectationMaximization/fit(org.apache.commons.math3.distribution.MixtureMultivariateNormalDistribution,int,double)#java/util/List/size()
org/apache/commons/math3/distribution/fitting/MultivariateNormalMixtureExpectationMaximization/fit(org.apache.commons.math3.distribution.MixtureMultivariateNormalDistribution,int,double)#java/lang/Math/log(double)
org/apache/commons/math3/distribution/fitting/MultivariateNormalMixtureExpectationMaximization/fit(org.apache.commons.math3.distribution.MixtureMultivariateNormalDistribution,int,double)#java/lang/Double/doubleValue()
org/apache/commons/math3/distribution/fitting/MultivariateNormalMixtureExpectationMaximization/fit(org.apache.commons.math3.distribution.MixtureMultivariateNormalDistribution,int,double)#java/lang/Integer/valueOf(int)
org/apache/commons/math3/distribution/fitting/MultivariateNormalMixtureExpectationMaximization/fit(org.apache.commons.math3.distribution.MixtureMultivariateNormalDistribution,int,double)#java/util/List/get(int)
org/apache/commons/math3/ode/nonstiff/AdamsMoultonIntegrator/integrate(org.apache.commons.math3.ode.ExpandableStatefulODE,double)#org/apache/commons/math3/ode/nonstiff/AdamsMoultonIntegrator/computeStepGrowShrinkFactor(double)
org/apache/commons/math3/ode/nonstiff/AdamsMoultonIntegrator/integrate(org.apache.commons.math3.ode.ExpandableStatefulODE,double)#org/apache/commons/math3/ode/nonstiff/AdamsMoultonIntegrator/acceptStep(org.apache.commons.math3.ode.sampling.AbstractStepInterpolator,double[],double[],double)
org/apache/commons/math3/ode/nonstiff/AdamsMoultonIntegrator/integrate(org.apache.commons.math3.ode.ExpandableStatefulODE,double)#org/apache/commons/math3/ode/nonstiff/AdamsMoultonIntegrator/computeDerivatives(double,double[],double[])
org/apache/commons/math3/ode/nonstiff/AdamsMoultonIntegrator/integrate(org.apache.commons.math3.ode.ExpandableStatefulODE,double)#org/apache/commons/math3/ode/nonstiff/AdamsMoultonIntegrator/getExpandable()
org/apache/commons/math3/ode/nonstiff/AdamsMoultonIntegrator/integrate(org.apache.commons.math3.ode.ExpandableStatefulODE,double)#java/lang/System/arraycopy(java.lang.Object,int,java.lang.Object,int,int)
org/apache/commons/math3/ode/nonstiff/AdamsMoultonIntegrator/integrate(org.apache.commons.math3.ode.ExpandableStatefulODE,double)#org/apache/commons/math3/ode/nonstiff/AdamsMoultonIntegrator/setEquations(org.apache.commons.math3.ode.ExpandableStatefulODE)
org/apache/commons/math3/ode/nonstiff/AdamsMoultonIntegrator/integrate(org.apache.commons.math3.ode.ExpandableStatefulODE,double)#org/apache/commons/math3/ode/nonstiff/AdamsMoultonIntegrator/start(double,double[],double)
org/apache/commons/math3/ode/nonstiff/AdamsMoultonIntegrator/integrate(org.apache.commons.math3.ode.ExpandableStatefulODE,double)#org/apache/commons/math3/linear/Array2DRowRealMatrix/walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)
org/apache/commons/math3/ode/nonstiff/AdamsMoultonIntegrator/integrate(org.apache.commons.math3.ode.ExpandableStatefulODE,double)#org/apache/commons/math3/ode/nonstiff/AdamsMoultonIntegrator/initIntegration(double,double[],double)
org/apache/commons/math3/ode/nonstiff/AdamsMoultonIntegrator/integrate(org.apache.commons.math3.ode.ExpandableStatefulODE,double)#org/apache/commons/math3/ode/sampling/NordsieckStepInterpolator/getInterpolatedSecondaryState(int)
org/apache/commons/math3/ode/nonstiff/AdamsMoultonIntegrator/integrate(org.apache.commons.math3.ode.ExpandableStatefulODE,double)#org/apache/commons/math3/ode/nonstiff/AdamsMoultonIntegrator/filterStep(double,boolean,boolean)
org/apache/commons/math3/ode/nonstiff/AdamsMoultonIntegrator/integrate(org.apache.commons.math3.ode.ExpandableStatefulODE,double)#org/apache/commons/math3/ode/nonstiff/AdamsMoultonIntegrator/resetInternalState()
org/apache/commons/math3/ode/nonstiff/AdamsMoultonIntegrator/integrate(org.apache.commons.math3.ode.ExpandableStatefulODE,double)#org/apache/commons/math3/ode/nonstiff/AdamsMoultonIntegrator$Corrector/Corrector(org.apache.commons.math3.ode.nonstiff.AdamsMoultonIntegrator,double[],double[],double[])
org/apache/commons/math3/ode/nonstiff/AdamsMoultonIntegrator/integrate(org.apache.commons.math3.ode.ExpandableStatefulODE,double)#[D/clone()
org/apache/commons/math3/ode/nonstiff/AdamsMoultonIntegrator/integrate(org.apache.commons.math3.ode.ExpandableStatefulODE,double)#org/apache/commons/math3/ode/nonstiff/AdamsMoultonIntegrator/updateHighOrderDerivativesPhase1(org.apache.commons.math3.linear.Array2DRowRealMatrix)
org/apache/commons/math3/ode/nonstiff/AdamsMoultonIntegrator/integrate(org.apache.commons.math3.ode.ExpandableStatefulODE,double)#org/apache/commons/math3/ode/sampling/NordsieckStepInterpolator/getInterpolatedState()
org/apache/commons/math3/ode/nonstiff/AdamsMoultonIntegrator/integrate(org.apache.commons.math3.ode.ExpandableStatefulODE,double)#org/apache/commons/math3/ode/nonstiff/AdamsMoultonIntegrator/updateHighOrderDerivativesPhase2(double[],double[],org.apache.commons.math3.linear.Array2DRowRealMatrix)
org/apache/commons/math3/ode/nonstiff/AdamsMoultonIntegrator/integrate(org.apache.commons.math3.ode.ExpandableStatefulODE,double)#org/apache/commons/math3/ode/sampling/NordsieckStepInterpolator/storeTime(double)
org/apache/commons/math3/ode/nonstiff/AdamsMoultonIntegrator/integrate(org.apache.commons.math3.ode.ExpandableStatefulODE,double)#org/apache/commons/math3/ode/nonstiff/AdamsMoultonIntegrator/sanityChecks(org.apache.commons.math3.ode.ExpandableStatefulODE,double)
org/apache/commons/math3/ode/nonstiff/AdamsMoultonIntegrator/integrate(org.apache.commons.math3.ode.ExpandableStatefulODE,double)#org/apache/commons/math3/ode/sampling/NordsieckStepInterpolator/setInterpolatedTime(double)
org/apache/commons/math3/ode/nonstiff/AdamsMoultonIntegrator/integrate(org.apache.commons.math3.ode.ExpandableStatefulODE,double)#org/apache/commons/math3/ode/sampling/NordsieckStepInterpolator/shift()
