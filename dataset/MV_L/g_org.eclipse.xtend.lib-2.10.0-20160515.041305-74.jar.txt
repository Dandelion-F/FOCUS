org/eclipse/xtend/lib/annotations/FinalFieldsConstructorProcessor/Util/8/appendTo(org.eclipse.xtend2.lib.StringConcatenationClient$TargetStringConcatenation)#java/util/Iterator/hasNext()
org/eclipse/xtend/lib/annotations/FinalFieldsConstructorProcessor/Util/8/appendTo(org.eclipse.xtend2.lib.StringConcatenationClient$TargetStringConcatenation)#org/eclipse/xtend2/lib/StringConcatenationClient$TargetStringConcatenation/newLineIfNotEmpty()
org/eclipse/xtend/lib/annotations/FinalFieldsConstructorProcessor/Util/8/appendTo(org.eclipse.xtend2.lib.StringConcatenationClient$TargetStringConcatenation)#java/util/Iterator/next()
org/eclipse/xtend/lib/annotations/FinalFieldsConstructorProcessor/Util/8/appendTo(org.eclipse.xtend2.lib.StringConcatenationClient$TargetStringConcatenation)#org/eclipse/xtend/lib/macro/declaration/MutableParameterDeclaration/getSimpleName()
org/eclipse/xtend/lib/annotations/FinalFieldsConstructorProcessor/Util/8/appendTo(org.eclipse.xtend2.lib.StringConcatenationClient$TargetStringConcatenation)#org/eclipse/xtend/lib/annotations/FinalFieldsConstructorProcessor$Util$8$1/1(org.eclipse.xtend.lib.annotations.FinalFieldsConstructorProcessor$Util$8)
org/eclipse/xtend/lib/annotations/FinalFieldsConstructorProcessor/Util/8/appendTo(org.eclipse.xtend2.lib.StringConcatenationClient$TargetStringConcatenation)#org/eclipse/xtext/xbase/lib/IterableExtensions/join(java.lang.Iterable,java.lang.CharSequence,org.eclipse.xtext.xbase.lib.Functions$Function1)
org/eclipse/xtend/lib/annotations/FinalFieldsConstructorProcessor/Util/8/appendTo(org.eclipse.xtend2.lib.StringConcatenationClient$TargetStringConcatenation)#java/util/HashMap/get(java.lang.Object)
org/eclipse/xtend/lib/annotations/FinalFieldsConstructorProcessor/Util/8/appendTo(org.eclipse.xtend2.lib.StringConcatenationClient$TargetStringConcatenation)#org/eclipse/xtend2/lib/StringConcatenationClient$TargetStringConcatenation/append(java.lang.Object)
org/eclipse/xtend/lib/annotations/FinalFieldsConstructorProcessor/Util/8/appendTo(org.eclipse.xtend2.lib.StringConcatenationClient$TargetStringConcatenation)#org/eclipse/xtend/lib/macro/declaration/MutableFieldDeclaration/getSimpleName()
org/eclipse/xtend/lib/annotations/FinalFieldsConstructorProcessor/Util/8/appendTo(org.eclipse.xtend2.lib.StringConcatenationClient$TargetStringConcatenation)#org/eclipse/xtend/lib/macro/declaration/MutableConstructorDeclaration/getDeclaringType()
org/eclipse/xtend/lib/annotations/FinalFieldsConstructorProcessor/Util/8/appendTo(org.eclipse.xtend2.lib.StringConcatenationClient$TargetStringConcatenation)#java/lang/Iterable/iterator()
org/eclipse/xtend/lib/annotations/FinalFieldsConstructorProcessor/Util/8/appendTo(org.eclipse.xtend2.lib.StringConcatenationClient$TargetStringConcatenation)#org/eclipse/xtend2/lib/StringConcatenationClient$TargetStringConcatenation/append(java.lang.Object,java.lang.String)
org/eclipse/xtend/lib/annotations/FinalFieldsConstructorProcessor/Util/8/appendTo(org.eclipse.xtend2.lib.StringConcatenationClient$TargetStringConcatenation)#org/eclipse/xtend/lib/annotations/FinalFieldsConstructorProcessor$Util/getFinalFields(org.eclipse.xtend.lib.macro.declaration.MutableTypeDeclaration)
org/eclipse/xtend/lib/annotations/ToStringProcessor/doTransform(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration,org.eclipse.xtend.lib.macro.TransformationContext)#org/eclipse/xtend/lib/annotations/ToStringProcessor$Util/hasToString(org.eclipse.xtend.lib.macro.declaration.ClassDeclaration)
org/eclipse/xtend/lib/annotations/ToStringProcessor/doTransform(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration,org.eclipse.xtend.lib.macro.TransformationContext)#com/google/common/base/Objects/equal(java.lang.Object,java.lang.Object)
org/eclipse/xtend/lib/annotations/ToStringProcessor/doTransform(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration,org.eclipse.xtend.lib.macro.TransformationContext)#org/eclipse/xtend/lib/macro/TransformationContext/findTypeGlobally(java.lang.Class)
org/eclipse/xtend/lib/annotations/ToStringProcessor/doTransform(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration,org.eclipse.xtend.lib.macro.TransformationContext)#org/eclipse/xtext/xbase/lib/IterableExtensions/filter(java.lang.Iterable,org.eclipse.xtext.xbase.lib.Functions$Function1)
org/eclipse/xtend/lib/annotations/ToStringProcessor/doTransform(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration,org.eclipse.xtend.lib.macro.TransformationContext)#org/eclipse/xtend/lib/macro/declaration/MutableClassDeclaration/getExtendedClass()
org/eclipse/xtend/lib/annotations/ToStringProcessor/doTransform(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration,org.eclipse.xtend.lib.macro.TransformationContext)#org/eclipse/xtend/lib/annotations/ToStringProcessor$1/1(org.eclipse.xtend.lib.annotations.ToStringProcessor,org.eclipse.xtend.lib.macro.TransformationContext)
org/eclipse/xtend/lib/annotations/ToStringProcessor/doTransform(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration,org.eclipse.xtend.lib.macro.TransformationContext)#org/eclipse/xtend/lib/macro/declaration/MutableClassDeclaration/findAnnotation(org.eclipse.xtend.lib.macro.declaration.Type)
org/eclipse/xtend/lib/annotations/ToStringProcessor/doTransform(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration,org.eclipse.xtend.lib.macro.TransformationContext)#org/eclipse/xtend/lib/macro/TransformationContext/getObject()
org/eclipse/xtend/lib/annotations/ToStringProcessor/doTransform(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration,org.eclipse.xtend.lib.macro.TransformationContext)#org/eclipse/xtend/lib/macro/declaration/MutableClassDeclaration/getDeclaredFields()
org/eclipse/xtend/lib/annotations/ToStringProcessor/doTransform(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration,org.eclipse.xtend.lib.macro.TransformationContext)#org/eclipse/xtend/lib/macro/TransformationContext/addWarning(org.eclipse.xtend.lib.macro.declaration.Element,java.lang.String)
org/eclipse/xtend/lib/annotations/ToStringProcessor/doTransform(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration,org.eclipse.xtend.lib.macro.TransformationContext)#org/eclipse/xtend/lib/annotations/ToStringProcessor$Util/addToString(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration,java.lang.Iterable,org.eclipse.xtend.lib.annotations.ToStringConfiguration)
org/eclipse/xtend/lib/annotations/ToStringProcessor/doTransform(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration,org.eclipse.xtend.lib.macro.TransformationContext)#org/eclipse/xtend/lib/annotations/ToStringProcessor$Util/Util(org.eclipse.xtend.lib.macro.TransformationContext)
org/eclipse/xtend/lib/annotations/ToStringProcessor/doTransform(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration,org.eclipse.xtend.lib.macro.TransformationContext)#org/eclipse/xtend/lib/annotations/ToStringProcessor$Util/addReflectiveToString(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration,org.eclipse.xtend.lib.annotations.ToStringConfiguration)
org/eclipse/xtend/lib/annotations/EqualsHashCodeProcessor/Util/11/1/appendTo(org.eclipse.xtend2.lib.StringConcatenationClient$TargetStringConcatenation)#org/eclipse/xtend2/lib/StringConcatenationClient$TargetStringConcatenation/append(java.lang.Object)
org/eclipse/xtend/lib/annotations/EqualsHashCodeProcessor/Util/11/1/appendTo(org.eclipse.xtend2.lib.StringConcatenationClient$TargetStringConcatenation)#java/util/Iterator/hasNext()
org/eclipse/xtend/lib/annotations/EqualsHashCodeProcessor/Util/11/1/appendTo(org.eclipse.xtend2.lib.StringConcatenationClient$TargetStringConcatenation)#org/eclipse/xtend/lib/annotations/EqualsHashCodeProcessor$Util/contributeToHashCode(org.eclipse.xtend.lib.macro.declaration.FieldDeclaration)
org/eclipse/xtend/lib/annotations/EqualsHashCodeProcessor/Util/11/1/appendTo(org.eclipse.xtend2.lib.StringConcatenationClient$TargetStringConcatenation)#java/lang/Iterable/iterator()
org/eclipse/xtend/lib/annotations/EqualsHashCodeProcessor/Util/11/1/appendTo(org.eclipse.xtend2.lib.StringConcatenationClient$TargetStringConcatenation)#org/eclipse/xtend2/lib/StringConcatenationClient$TargetStringConcatenation/append(java.lang.Object,java.lang.String)
org/eclipse/xtend/lib/annotations/EqualsHashCodeProcessor/Util/11/1/appendTo(org.eclipse.xtend2.lib.StringConcatenationClient$TargetStringConcatenation)#org/eclipse/xtend/lib/annotations/EqualsHashCodeProcessor$Util$11/access$1(org.eclipse.xtend.lib.annotations.EqualsHashCodeProcessor$Util$11)
org/eclipse/xtend/lib/annotations/EqualsHashCodeProcessor/Util/11/1/appendTo(org.eclipse.xtend2.lib.StringConcatenationClient$TargetStringConcatenation)#org/eclipse/xtend2/lib/StringConcatenationClient$TargetStringConcatenation/newLineIfNotEmpty()
org/eclipse/xtend/lib/annotations/EqualsHashCodeProcessor/Util/11/1/appendTo(org.eclipse.xtend2.lib.StringConcatenationClient$TargetStringConcatenation)#org/eclipse/xtend2/lib/StringConcatenationClient$TargetStringConcatenation/newLine()
org/eclipse/xtend/lib/annotations/EqualsHashCodeProcessor/Util/11/1/appendTo(org.eclipse.xtend2.lib.StringConcatenationClient$TargetStringConcatenation)#java/util/Iterator/next()
org/eclipse/xtend/lib/annotations/FinalFieldsConstructorProcessor/Util/makeFinalFieldsConstructor(org.eclipse.xtend.lib.macro.declaration.MutableConstructorDeclaration)#org/eclipse/xtend2/lib/StringConcatenation/toString()
org/eclipse/xtend/lib/annotations/FinalFieldsConstructorProcessor/Util/makeFinalFieldsConstructor(org.eclipse.xtend.lib.macro.declaration.MutableConstructorDeclaration)#java/util/ArrayList/isEmpty()
org/eclipse/xtend/lib/annotations/FinalFieldsConstructorProcessor/Util/makeFinalFieldsConstructor(org.eclipse.xtend.lib.macro.declaration.MutableConstructorDeclaration)#java/util/regex/Matcher/matches()
org/eclipse/xtend/lib/annotations/FinalFieldsConstructorProcessor/Util/makeFinalFieldsConstructor(org.eclipse.xtend.lib.macro.declaration.MutableConstructorDeclaration)#org/eclipse/xtend/lib/macro/TransformationContext/findTypeGlobally(java.lang.Class)
org/eclipse/xtend/lib/annotations/FinalFieldsConstructorProcessor/Util/makeFinalFieldsConstructor(org.eclipse.xtend.lib.macro.declaration.MutableConstructorDeclaration)#org/eclipse/xtend2/lib/StringConcatenation/StringConcatenation()
org/eclipse/xtend/lib/annotations/FinalFieldsConstructorProcessor/Util/makeFinalFieldsConstructor(org.eclipse.xtend.lib.macro.declaration.MutableConstructorDeclaration)#java/util/Collections/unmodifiableList(java.util.List)
org/eclipse/xtend/lib/annotations/FinalFieldsConstructorProcessor/Util/makeFinalFieldsConstructor(org.eclipse.xtend.lib.macro.declaration.MutableConstructorDeclaration)#org/eclipse/xtend/lib/annotations/FinalFieldsConstructorProcessor$Util/getConstructorAlreadyExistsMessage(org.eclipse.xtend.lib.macro.declaration.MutableTypeDeclaration)
org/eclipse/xtend/lib/annotations/FinalFieldsConstructorProcessor/Util/makeFinalFieldsConstructor(org.eclipse.xtend.lib.macro.declaration.MutableConstructorDeclaration)#org/eclipse/xtend/lib/annotations/FinalFieldsConstructorProcessor$Util/getFinalFieldsConstructorArgumentTypes(org.eclipse.xtend.lib.macro.declaration.MutableTypeDeclaration)
org/eclipse/xtend/lib/annotations/FinalFieldsConstructorProcessor/Util/makeFinalFieldsConstructor(org.eclipse.xtend.lib.macro.declaration.MutableConstructorDeclaration)#org/eclipse/xtend/lib/macro/declaration/MutableConstructorDeclaration/findAnnotation(org.eclipse.xtend.lib.macro.declaration.Type)
org/eclipse/xtend/lib/annotations/FinalFieldsConstructorProcessor/Util/makeFinalFieldsConstructor(org.eclipse.xtend.lib.macro.declaration.MutableConstructorDeclaration)#org/eclipse/xtend/lib/macro/TransformationContext/addWarning(org.eclipse.xtend.lib.macro.declaration.Element,java.lang.String)
org/eclipse/xtend/lib/annotations/FinalFieldsConstructorProcessor/Util/makeFinalFieldsConstructor(org.eclipse.xtend.lib.macro.declaration.MutableConstructorDeclaration)#org/eclipse/xtext/xbase/lib/IterableExtensions/isEmpty(java.lang.Iterable)
org/eclipse/xtend/lib/annotations/FinalFieldsConstructorProcessor/Util/makeFinalFieldsConstructor(org.eclipse.xtend.lib.macro.declaration.MutableConstructorDeclaration)#java/util/regex/Pattern/matcher(java.lang.CharSequence)
org/eclipse/xtend/lib/annotations/FinalFieldsConstructorProcessor/Util/makeFinalFieldsConstructor(org.eclipse.xtend.lib.macro.declaration.MutableConstructorDeclaration)#org/eclipse/xtend/lib/annotations/FinalFieldsConstructorProcessor$Util$8/8(org.eclipse.xtend.lib.annotations.FinalFieldsConstructorProcessor$Util,java.lang.Iterable,org.eclipse.xtend.lib.macro.declaration.MutableConstructorDeclaration,java.util.HashMap)
org/eclipse/xtend/lib/annotations/FinalFieldsConstructorProcessor/Util/makeFinalFieldsConstructor(org.eclipse.xtend.lib.macro.declaration.MutableConstructorDeclaration)#org/eclipse/xtend/lib/macro/declaration/ResolvedConstructor/getResolvedParameters()
org/eclipse/xtend/lib/annotations/FinalFieldsConstructorProcessor/Util/makeFinalFieldsConstructor(org.eclipse.xtend.lib.macro.declaration.MutableConstructorDeclaration)#org/eclipse/xtend/lib/annotations/FinalFieldsConstructorProcessor$Util$6/6(org.eclipse.xtend.lib.annotations.FinalFieldsConstructorProcessor$Util,org.eclipse.xtend.lib.macro.declaration.MutableConstructorDeclaration)
org/eclipse/xtend/lib/annotations/FinalFieldsConstructorProcessor/Util/makeFinalFieldsConstructor(org.eclipse.xtend.lib.macro.declaration.MutableConstructorDeclaration)#java/lang/Object/toString()
org/eclipse/xtend/lib/annotations/FinalFieldsConstructorProcessor/Util/makeFinalFieldsConstructor(org.eclipse.xtend.lib.macro.declaration.MutableConstructorDeclaration)#org/eclipse/xtend/lib/annotations/FinalFieldsConstructorProcessor$Util$7/7(org.eclipse.xtend.lib.annotations.FinalFieldsConstructorProcessor$Util,org.eclipse.xtend.lib.macro.declaration.MutableConstructorDeclaration,java.util.HashMap)
org/eclipse/xtend/lib/annotations/FinalFieldsConstructorProcessor/Util/makeFinalFieldsConstructor(org.eclipse.xtend.lib.macro.declaration.MutableConstructorDeclaration)#org/eclipse/xtend/lib/macro/TransformationContext/addError(org.eclipse.xtend.lib.macro.declaration.Element,java.lang.String)
org/eclipse/xtend/lib/annotations/FinalFieldsConstructorProcessor/Util/makeFinalFieldsConstructor(org.eclipse.xtend.lib.macro.declaration.MutableConstructorDeclaration)#org/eclipse/xtend/lib/macro/declaration/MutableConstructorDeclaration/getBody()
org/eclipse/xtend/lib/annotations/FinalFieldsConstructorProcessor/Util/makeFinalFieldsConstructor(org.eclipse.xtend.lib.macro.declaration.MutableConstructorDeclaration)#org/eclipse/xtext/xbase/lib/CollectionLiterals/newHashMap(org.eclipse.xtext.xbase.lib.Pair[])
org/eclipse/xtend/lib/annotations/FinalFieldsConstructorProcessor/Util/makeFinalFieldsConstructor(org.eclipse.xtend.lib.macro.declaration.MutableConstructorDeclaration)#org/eclipse/xtend/lib/annotations/FinalFieldsConstructorProcessor$Util/getSuperConstructor(org.eclipse.xtend.lib.macro.declaration.TypeDeclaration)
org/eclipse/xtend/lib/annotations/FinalFieldsConstructorProcessor/Util/makeFinalFieldsConstructor(org.eclipse.xtend.lib.macro.declaration.MutableConstructorDeclaration)#org/eclipse/xtend/lib/macro/declaration/MutableConstructorDeclaration/getParameters()
org/eclipse/xtend/lib/annotations/FinalFieldsConstructorProcessor/Util/makeFinalFieldsConstructor(org.eclipse.xtend.lib.macro.declaration.MutableConstructorDeclaration)#org/eclipse/xtend/lib/annotations/FinalFieldsConstructorProcessor$Util/hasFinalFieldsConstructor(org.eclipse.xtend.lib.macro.declaration.MutableTypeDeclaration)
org/eclipse/xtend/lib/annotations/FinalFieldsConstructorProcessor/Util/makeFinalFieldsConstructor(org.eclipse.xtend.lib.macro.declaration.MutableConstructorDeclaration)#org/eclipse/xtend/lib/macro/declaration/MutableConstructorDeclaration/getDeclaringType()
org/eclipse/xtend/lib/annotations/FinalFieldsConstructorProcessor/Util/makeFinalFieldsConstructor(org.eclipse.xtend.lib.macro.declaration.MutableConstructorDeclaration)#org/eclipse/xtend/lib/macro/declaration/MutableConstructorDeclaration/setBody(org.eclipse.xtend2.lib.StringConcatenationClient)
org/eclipse/xtend/lib/annotations/FinalFieldsConstructorProcessor/Util/makeFinalFieldsConstructor(org.eclipse.xtend.lib.macro.declaration.MutableConstructorDeclaration)#org/eclipse/xtext/xbase/lib/IterableExtensions/forEach(java.lang.Iterable,org.eclipse.xtext.xbase.lib.Procedures$Procedure1)
org/eclipse/xtend/lib/annotations/FinalFieldsConstructorProcessor/Util/makeFinalFieldsConstructor(org.eclipse.xtend.lib.macro.declaration.MutableConstructorDeclaration)#org/eclipse/xtend/lib/annotations/FinalFieldsConstructorProcessor$Util/getFinalFields(org.eclipse.xtend.lib.macro.declaration.MutableTypeDeclaration)
org/eclipse/xtend/lib/annotations/FinalFieldsConstructorProcessor/Util/makeFinalFieldsConstructor(org.eclipse.xtend.lib.macro.declaration.MutableConstructorDeclaration)#org/eclipse/xtext/xbase/lib/CollectionLiterals/newArrayList(java.lang.Object[])
org/eclipse/xtend/lib/annotations/FinalFieldsConstructorProcessor/Util/makeFinalFieldsConstructor(org.eclipse.xtend.lib.macro.declaration.MutableConstructorDeclaration)#org/eclipse/xtend2/lib/StringConcatenation/append(java.lang.Object)
org/eclipse/xtend/lib/annotations/FinalFieldsConstructorProcessor/Util/addFinalFieldsConstructor(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration)#org/eclipse/xtend2/lib/StringConcatenation/toString()
org/eclipse/xtend/lib/annotations/FinalFieldsConstructorProcessor/Util/addFinalFieldsConstructor(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration)#org/eclipse/xtend/lib/macro/TransformationContext/addError(org.eclipse.xtend.lib.macro.declaration.Element,java.lang.String)
org/eclipse/xtend/lib/annotations/FinalFieldsConstructorProcessor/Util/addFinalFieldsConstructor(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration)#java/util/ArrayList/isEmpty()
org/eclipse/xtend/lib/annotations/FinalFieldsConstructorProcessor/Util/addFinalFieldsConstructor(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration)#org/eclipse/xtend/lib/macro/TransformationContext/findTypeGlobally(java.lang.Class)
org/eclipse/xtend/lib/annotations/FinalFieldsConstructorProcessor/Util/addFinalFieldsConstructor(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration)#org/eclipse/xtend/lib/annotations/FinalFieldsConstructorProcessor$Util/hasFinalFieldsConstructor(org.eclipse.xtend.lib.macro.declaration.MutableTypeDeclaration)
org/eclipse/xtend/lib/annotations/FinalFieldsConstructorProcessor/Util/addFinalFieldsConstructor(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration)#org/eclipse/xtend/lib/annotations/FinalFieldsConstructorProcessor$Util/getConstructorAlreadyExistsMessage(org.eclipse.xtend.lib.macro.declaration.MutableTypeDeclaration)
org/eclipse/xtend/lib/annotations/FinalFieldsConstructorProcessor/Util/addFinalFieldsConstructor(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration)#org/eclipse/xtend/lib/macro/declaration/MutableClassDeclaration/findAnnotation(org.eclipse.xtend.lib.macro.declaration.Type)
org/eclipse/xtend/lib/annotations/FinalFieldsConstructorProcessor/Util/addFinalFieldsConstructor(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration)#org/eclipse/xtend/lib/annotations/FinalFieldsConstructorProcessor$Util/getFinalFieldsConstructorArgumentTypes(org.eclipse.xtend.lib.macro.declaration.MutableTypeDeclaration)
org/eclipse/xtend/lib/annotations/FinalFieldsConstructorProcessor/Util/addFinalFieldsConstructor(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration)#org/eclipse/xtend/lib/macro/TransformationContext/addWarning(org.eclipse.xtend.lib.macro.declaration.Element,java.lang.String)
org/eclipse/xtend/lib/annotations/FinalFieldsConstructorProcessor/Util/addFinalFieldsConstructor(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration)#org/eclipse/xtend/lib/annotations/FinalFieldsConstructorProcessor$Util$5/5(org.eclipse.xtend.lib.annotations.FinalFieldsConstructorProcessor$Util)
org/eclipse/xtend/lib/annotations/FinalFieldsConstructorProcessor/Util/addFinalFieldsConstructor(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration)#org/eclipse/xtend2/lib/StringConcatenation/append(java.lang.Object)
org/eclipse/xtend/lib/annotations/FinalFieldsConstructorProcessor/Util/addFinalFieldsConstructor(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration)#org/eclipse/xtend/lib/macro/declaration/MutableClassDeclaration/addConstructor(org.eclipse.xtext.xbase.lib.Procedures$Procedure1)
org/eclipse/xtend/lib/annotations/FinalFieldsConstructorProcessor/Util/addFinalFieldsConstructor(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration)#org/eclipse/xtend2/lib/StringConcatenation/StringConcatenation()
org/eclipse/xtend/lib/annotations/EqualsHashCodeProcessor/doTransform(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration,org.eclipse.xtend.lib.macro.TransformationContext)#org/eclipse/xtend/lib/annotations/EqualsHashCodeProcessor$Util/hasSuperHashCode(org.eclipse.xtend.lib.macro.declaration.ClassDeclaration)
org/eclipse/xtend/lib/annotations/EqualsHashCodeProcessor/doTransform(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration,org.eclipse.xtend.lib.macro.TransformationContext)#org/eclipse/xtend/lib/annotations/EqualsHashCodeProcessor$Util/hasSuperEquals(org.eclipse.xtend.lib.macro.declaration.ClassDeclaration)
org/eclipse/xtend/lib/annotations/EqualsHashCodeProcessor/doTransform(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration,org.eclipse.xtend.lib.macro.TransformationContext)#org/eclipse/xtend/lib/annotations/EqualsHashCodeProcessor$Util/hasHashCode(org.eclipse.xtend.lib.macro.declaration.ClassDeclaration)
org/eclipse/xtend/lib/annotations/EqualsHashCodeProcessor/doTransform(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration,org.eclipse.xtend.lib.macro.TransformationContext)#org/eclipse/xtend/lib/annotations/EqualsHashCodeProcessor$Util/addHashCode(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration,java.lang.Iterable,boolean)
org/eclipse/xtend/lib/annotations/EqualsHashCodeProcessor/doTransform(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration,org.eclipse.xtend.lib.macro.TransformationContext)#org/eclipse/xtend/lib/annotations/EqualsHashCodeProcessor$Util/hasEquals(org.eclipse.xtend.lib.macro.declaration.ClassDeclaration)
org/eclipse/xtend/lib/annotations/EqualsHashCodeProcessor/doTransform(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration,org.eclipse.xtend.lib.macro.TransformationContext)#org/eclipse/xtend/lib/annotations/EqualsHashCodeProcessor$Util/Util(org.eclipse.xtend.lib.macro.TransformationContext)
org/eclipse/xtend/lib/annotations/EqualsHashCodeProcessor/doTransform(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration,org.eclipse.xtend.lib.macro.TransformationContext)#org/eclipse/xtend/lib/macro/declaration/MutableClassDeclaration/findAnnotation(org.eclipse.xtend.lib.macro.declaration.Type)
org/eclipse/xtend/lib/annotations/EqualsHashCodeProcessor/doTransform(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration,org.eclipse.xtend.lib.macro.TransformationContext)#org/eclipse/xtend/lib/macro/declaration/MutableClassDeclaration/getDeclaredFields()
org/eclipse/xtend/lib/annotations/EqualsHashCodeProcessor/doTransform(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration,org.eclipse.xtend.lib.macro.TransformationContext)#org/eclipse/xtend/lib/macro/TransformationContext/addWarning(org.eclipse.xtend.lib.macro.declaration.Element,java.lang.String)
org/eclipse/xtend/lib/annotations/EqualsHashCodeProcessor/doTransform(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration,org.eclipse.xtend.lib.macro.TransformationContext)#org/eclipse/xtend/lib/macro/TransformationContext/findTypeGlobally(java.lang.Class)
org/eclipse/xtend/lib/annotations/EqualsHashCodeProcessor/doTransform(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration,org.eclipse.xtend.lib.macro.TransformationContext)#org/eclipse/xtend/lib/annotations/EqualsHashCodeProcessor$Util/addEquals(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration,java.lang.Iterable,boolean)
org/eclipse/xtend/lib/annotations/EqualsHashCodeProcessor/doTransform(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration,org.eclipse.xtend.lib.macro.TransformationContext)#org/eclipse/xtend/lib/annotations/EqualsHashCodeProcessor$1/1(org.eclipse.xtend.lib.annotations.EqualsHashCodeProcessor,org.eclipse.xtend.lib.macro.TransformationContext)
org/eclipse/xtend/lib/annotations/EqualsHashCodeProcessor/doTransform(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration,org.eclipse.xtend.lib.macro.TransformationContext)#org/eclipse/xtext/xbase/lib/IterableExtensions/filter(java.lang.Iterable,org.eclipse.xtext.xbase.lib.Functions$Function1)
org/eclipse/xtend/lib/annotations/ToStringProcessor/Util/1/apply(org.eclipse.xtend.lib.macro.declaration.MutableMethodDeclaration)#org/eclipse/xtend/lib/macro/declaration/MutableMethodDeclaration/setReturnType(org.eclipse.xtend.lib.macro.declaration.TypeReference)
org/eclipse/xtend/lib/annotations/ToStringProcessor/Util/1/apply(org.eclipse.xtend.lib.macro.declaration.MutableMethodDeclaration)#org/eclipse/xtend/lib/macro/declaration/MutableMethodDeclaration/setBody(org.eclipse.xtend2.lib.StringConcatenationClient)
org/eclipse/xtend/lib/annotations/ToStringProcessor/Util/1/apply(org.eclipse.xtend.lib.macro.declaration.MutableMethodDeclaration)#org/eclipse/xtend/lib/annotations/ToStringProcessor$Util/access$0(org.eclipse.xtend.lib.annotations.ToStringProcessor$Util)
org/eclipse/xtend/lib/annotations/ToStringProcessor/Util/1/apply(org.eclipse.xtend.lib.macro.declaration.MutableMethodDeclaration)#org/eclipse/xtend/lib/macro/TransformationContext/getPrimarySourceElement(org.eclipse.xtend.lib.macro.declaration.Element)
org/eclipse/xtend/lib/annotations/ToStringProcessor/Util/1/apply(org.eclipse.xtend.lib.macro.declaration.MutableMethodDeclaration)#org/eclipse/xtend/lib/macro/TransformationContext/newAnnotationReference(java.lang.Class)
org/eclipse/xtend/lib/annotations/ToStringProcessor/Util/1/apply(org.eclipse.xtend.lib.macro.declaration.MutableMethodDeclaration)#org/eclipse/xtend/lib/macro/declaration/MutableMethodDeclaration/addAnnotation(org.eclipse.xtend.lib.macro.declaration.AnnotationReference)
org/eclipse/xtend/lib/annotations/ToStringProcessor/Util/1/apply(org.eclipse.xtend.lib.macro.declaration.MutableMethodDeclaration)#org/eclipse/xtend/lib/macro/TransformationContext/setPrimarySourceElement(org.eclipse.xtend.lib.macro.declaration.MutableElement,org.eclipse.xtend.lib.macro.declaration.Element)
org/eclipse/xtend/lib/annotations/ToStringProcessor/Util/1/apply(org.eclipse.xtend.lib.macro.declaration.MutableMethodDeclaration)#org/eclipse/xtend/lib/annotations/ToStringProcessor$Util$1$1/1(org.eclipse.xtend.lib.annotations.ToStringProcessor$Util$1,org.eclipse.xtend.lib.annotations.ToStringConfiguration)
org/eclipse/xtend/lib/annotations/ToStringProcessor/Util/1/apply(org.eclipse.xtend.lib.macro.declaration.MutableMethodDeclaration)#org/eclipse/xtend/lib/macro/TransformationContext/getString()
org/eclipse/xtend/lib/annotations/ToStringProcessor/Util/2/apply(org.eclipse.xtend.lib.macro.declaration.MutableMethodDeclaration)#org/eclipse/xtend/lib/macro/declaration/MutableMethodDeclaration/setReturnType(org.eclipse.xtend.lib.macro.declaration.TypeReference)
org/eclipse/xtend/lib/annotations/ToStringProcessor/Util/2/apply(org.eclipse.xtend.lib.macro.declaration.MutableMethodDeclaration)#org/eclipse/xtend/lib/macro/declaration/MutableMethodDeclaration/setBody(org.eclipse.xtend2.lib.StringConcatenationClient)
org/eclipse/xtend/lib/annotations/ToStringProcessor/Util/2/apply(org.eclipse.xtend.lib.macro.declaration.MutableMethodDeclaration)#org/eclipse/xtend/lib/macro/TransformationContext/getString()
org/eclipse/xtend/lib/annotations/ToStringProcessor/Util/2/apply(org.eclipse.xtend.lib.macro.declaration.MutableMethodDeclaration)#org/eclipse/xtend/lib/annotations/ToStringProcessor$Util/access$0(org.eclipse.xtend.lib.annotations.ToStringProcessor$Util)
org/eclipse/xtend/lib/annotations/ToStringProcessor/Util/2/apply(org.eclipse.xtend.lib.macro.declaration.MutableMethodDeclaration)#org/eclipse/xtend/lib/macro/TransformationContext/getPrimarySourceElement(org.eclipse.xtend.lib.macro.declaration.Element)
org/eclipse/xtend/lib/annotations/ToStringProcessor/Util/2/apply(org.eclipse.xtend.lib.macro.declaration.MutableMethodDeclaration)#org/eclipse/xtend/lib/macro/TransformationContext/newAnnotationReference(java.lang.Class)
org/eclipse/xtend/lib/annotations/ToStringProcessor/Util/2/apply(org.eclipse.xtend.lib.macro.declaration.MutableMethodDeclaration)#org/eclipse/xtend/lib/macro/declaration/MutableMethodDeclaration/addAnnotation(org.eclipse.xtend.lib.macro.declaration.AnnotationReference)
org/eclipse/xtend/lib/annotations/ToStringProcessor/Util/2/apply(org.eclipse.xtend.lib.macro.declaration.MutableMethodDeclaration)#org/eclipse/xtend/lib/annotations/ToStringProcessor$Util$2$1/1(org.eclipse.xtend.lib.annotations.ToStringProcessor$Util$2,org.eclipse.xtend.lib.annotations.ToStringConfiguration,java.lang.Iterable)
org/eclipse/xtend/lib/annotations/ToStringProcessor/Util/2/apply(org.eclipse.xtend.lib.macro.declaration.MutableMethodDeclaration)#org/eclipse/xtend/lib/macro/TransformationContext/setPrimarySourceElement(org.eclipse.xtend.lib.macro.declaration.MutableElement,org.eclipse.xtend.lib.macro.declaration.Element)
org/eclipse/xtend/lib/annotations/EqualsHashCodeProcessor/Util/contributeToEquals(org.eclipse.xtend.lib.macro.declaration.FieldDeclaration)#org/eclipse/xtend/lib/macro/declaration/FieldDeclaration/getType()
org/eclipse/xtend/lib/annotations/EqualsHashCodeProcessor/Util/contributeToEquals(org.eclipse.xtend.lib.macro.declaration.FieldDeclaration)#org/eclipse/xtend/lib/annotations/EqualsHashCodeProcessor$Util$7/7(org.eclipse.xtend.lib.annotations.EqualsHashCodeProcessor$Util,org.eclipse.xtend.lib.macro.declaration.FieldDeclaration)
org/eclipse/xtend/lib/annotations/EqualsHashCodeProcessor/Util/contributeToEquals(org.eclipse.xtend.lib.macro.declaration.FieldDeclaration)#com/google/common/base/Objects/equal(java.lang.Object,java.lang.Object)
org/eclipse/xtend/lib/annotations/EqualsHashCodeProcessor/Util/contributeToEquals(org.eclipse.xtend.lib.macro.declaration.FieldDeclaration)#org/eclipse/xtend/lib/annotations/EqualsHashCodeProcessor$Util$6/6(org.eclipse.xtend.lib.annotations.EqualsHashCodeProcessor$Util,org.eclipse.xtend.lib.macro.declaration.FieldDeclaration)
org/eclipse/xtend/lib/annotations/EqualsHashCodeProcessor/Util/contributeToEquals(org.eclipse.xtend.lib.macro.declaration.FieldDeclaration)#org/eclipse/xtend/lib/annotations/EqualsHashCodeProcessor$Util$5/5(org.eclipse.xtend.lib.annotations.EqualsHashCodeProcessor$Util,org.eclipse.xtend.lib.macro.declaration.FieldDeclaration)
org/eclipse/xtend/lib/annotations/EqualsHashCodeProcessor/Util/contributeToEquals(org.eclipse.xtend.lib.macro.declaration.FieldDeclaration)#org/eclipse/xtend/lib/annotations/EqualsHashCodeProcessor$Util/orObject(org.eclipse.xtend.lib.macro.declaration.TypeReference)
org/eclipse/xtend/lib/annotations/EqualsHashCodeProcessor/Util/contributeToEquals(org.eclipse.xtend.lib.macro.declaration.FieldDeclaration)#org/eclipse/xtend/lib/annotations/EqualsHashCodeProcessor$Util$4/4(org.eclipse.xtend.lib.annotations.EqualsHashCodeProcessor$Util,org.eclipse.xtend.lib.macro.declaration.FieldDeclaration)
org/eclipse/xtend/lib/annotations/EqualsHashCodeProcessor/Util/contributeToEquals(org.eclipse.xtend.lib.macro.declaration.FieldDeclaration)#java/lang/Class/getName()
org/eclipse/xtend/lib/annotations/EqualsHashCodeProcessor/Util/contributeToEquals(org.eclipse.xtend.lib.macro.declaration.FieldDeclaration)#org/eclipse/xtend/lib/macro/declaration/TypeReference/getName()
org/eclipse/xtend/lib/annotations/EqualsHashCodeProcessor/Util/contributeToHashCode(org.eclipse.xtend.lib.macro.declaration.FieldDeclaration)#org/eclipse/xtend/lib/macro/declaration/FieldDeclaration/getType()
org/eclipse/xtend/lib/annotations/EqualsHashCodeProcessor/Util/contributeToHashCode(org.eclipse.xtend.lib.macro.declaration.FieldDeclaration)#com/google/common/base/Objects/equal(java.lang.Object,java.lang.Object)
org/eclipse/xtend/lib/annotations/EqualsHashCodeProcessor/Util/contributeToHashCode(org.eclipse.xtend.lib.macro.declaration.FieldDeclaration)#org/eclipse/xtend/lib/annotations/EqualsHashCodeProcessor$Util/orObject(org.eclipse.xtend.lib.macro.declaration.TypeReference)
org/eclipse/xtend/lib/annotations/EqualsHashCodeProcessor/Util/contributeToHashCode(org.eclipse.xtend.lib.macro.declaration.FieldDeclaration)#java/lang/Class/getName()
org/eclipse/xtend/lib/annotations/EqualsHashCodeProcessor/Util/contributeToHashCode(org.eclipse.xtend.lib.macro.declaration.FieldDeclaration)#org/eclipse/xtend/lib/macro/declaration/TypeReference/getName()
org/eclipse/xtend/lib/annotations/EqualsHashCodeProcessor/Util/contributeToHashCode(org.eclipse.xtend.lib.macro.declaration.FieldDeclaration)#org/eclipse/xtend/lib/annotations/EqualsHashCodeProcessor$Util$16/16(org.eclipse.xtend.lib.annotations.EqualsHashCodeProcessor$Util,org.eclipse.xtend.lib.macro.declaration.FieldDeclaration)
org/eclipse/xtend/lib/annotations/EqualsHashCodeProcessor/Util/contributeToHashCode(org.eclipse.xtend.lib.macro.declaration.FieldDeclaration)#org/eclipse/xtend/lib/annotations/EqualsHashCodeProcessor$Util$15/15(org.eclipse.xtend.lib.annotations.EqualsHashCodeProcessor$Util,org.eclipse.xtend.lib.macro.declaration.FieldDeclaration)
org/eclipse/xtend/lib/annotations/EqualsHashCodeProcessor/Util/contributeToHashCode(org.eclipse.xtend.lib.macro.declaration.FieldDeclaration)#org/eclipse/xtend/lib/annotations/EqualsHashCodeProcessor$Util$14/14(org.eclipse.xtend.lib.annotations.EqualsHashCodeProcessor$Util,org.eclipse.xtend.lib.macro.declaration.FieldDeclaration)
org/eclipse/xtend/lib/annotations/EqualsHashCodeProcessor/Util/contributeToHashCode(org.eclipse.xtend.lib.macro.declaration.FieldDeclaration)#org/eclipse/xtend/lib/annotations/EqualsHashCodeProcessor$Util$13/13(org.eclipse.xtend.lib.annotations.EqualsHashCodeProcessor$Util,org.eclipse.xtend.lib.macro.declaration.FieldDeclaration)
org/eclipse/xtend/lib/annotations/EqualsHashCodeProcessor/Util/contributeToHashCode(org.eclipse.xtend.lib.macro.declaration.FieldDeclaration)#org/eclipse/xtend/lib/annotations/EqualsHashCodeProcessor$Util$12/12(org.eclipse.xtend.lib.annotations.EqualsHashCodeProcessor$Util,org.eclipse.xtend.lib.macro.declaration.FieldDeclaration)
org/eclipse/xtend/lib/annotations/EqualsHashCodeProcessor/Util/contributeToHashCode(org.eclipse.xtend.lib.macro.declaration.FieldDeclaration)#org/eclipse/xtend/lib/annotations/EqualsHashCodeProcessor$Util$17/17(org.eclipse.xtend.lib.annotations.EqualsHashCodeProcessor$Util,org.eclipse.xtend.lib.macro.declaration.FieldDeclaration)
org/eclipse/xtend/lib/annotations/DataProcessor/doTransform(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration,org.eclipse.xtend.lib.macro.TransformationContext)#org/eclipse/xtend/lib/annotations/EqualsHashCodeProcessor$Util/hasSuperHashCode(org.eclipse.xtend.lib.macro.declaration.ClassDeclaration)
org/eclipse/xtend/lib/annotations/DataProcessor/doTransform(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration,org.eclipse.xtend.lib.macro.TransformationContext)#org/eclipse/xtend/lib/annotations/DataProcessor$Util/getDataFields(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration)
org/eclipse/xtend/lib/annotations/DataProcessor/doTransform(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration,org.eclipse.xtend.lib.macro.TransformationContext)#org/eclipse/xtend/lib/annotations/EqualsHashCodeProcessor$Util/hasSuperEquals(org.eclipse.xtend.lib.macro.declaration.ClassDeclaration)
org/eclipse/xtend/lib/annotations/DataProcessor/doTransform(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration,org.eclipse.xtend.lib.macro.TransformationContext)#org/eclipse/xtend/lib/annotations/EqualsHashCodeProcessor$Util/hasHashCode(org.eclipse.xtend.lib.macro.declaration.ClassDeclaration)
org/eclipse/xtend/lib/annotations/DataProcessor/doTransform(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration,org.eclipse.xtend.lib.macro.TransformationContext)#org/eclipse/xtend/lib/annotations/ToStringProcessor$Util/getToStringConfig(org.eclipse.xtend.lib.macro.declaration.ClassDeclaration)
org/eclipse/xtend/lib/annotations/DataProcessor/doTransform(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration,org.eclipse.xtend.lib.macro.TransformationContext)#org/eclipse/xtend/lib/annotations/ToStringProcessor$Util/addReflectiveToString(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration,org.eclipse.xtend.lib.annotations.ToStringConfiguration)
org/eclipse/xtend/lib/annotations/DataProcessor/doTransform(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration,org.eclipse.xtend.lib.macro.TransformationContext)#org/eclipse/xtend/lib/annotations/EqualsHashCodeProcessor$Util/hasEquals(org.eclipse.xtend.lib.macro.declaration.ClassDeclaration)
org/eclipse/xtend/lib/annotations/DataProcessor/doTransform(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration,org.eclipse.xtend.lib.macro.TransformationContext)#org/eclipse/xtend/lib/annotations/EqualsHashCodeProcessor$Util/Util(org.eclipse.xtend.lib.macro.TransformationContext)
org/eclipse/xtend/lib/annotations/DataProcessor/doTransform(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration,org.eclipse.xtend.lib.macro.TransformationContext)#org/eclipse/xtext/xbase/lib/IterableExtensions/forEach(java.lang.Iterable,org.eclipse.xtext.xbase.lib.Procedures$Procedure1)
org/eclipse/xtend/lib/annotations/DataProcessor/doTransform(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration,org.eclipse.xtend.lib.macro.TransformationContext)#org/eclipse/xtend/lib/macro/declaration/MutableClassDeclaration/findAnnotation(org.eclipse.xtend.lib.macro.declaration.Type)
org/eclipse/xtend/lib/annotations/DataProcessor/doTransform(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration,org.eclipse.xtend.lib.macro.TransformationContext)#org/eclipse/xtend/lib/annotations/DataProcessor$2/2(org.eclipse.xtend.lib.annotations.DataProcessor,org.eclipse.xtend.lib.annotations.AccessorsProcessor$Util)
org/eclipse/xtend/lib/annotations/DataProcessor/doTransform(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration,org.eclipse.xtend.lib.macro.TransformationContext)#org/eclipse/xtend/lib/annotations/DataProcessor$Util/Util(org.eclipse.xtend.lib.macro.TransformationContext)
org/eclipse/xtend/lib/annotations/DataProcessor/doTransform(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration,org.eclipse.xtend.lib.macro.TransformationContext)#org/eclipse/xtend/lib/annotations/ToStringProcessor$Util/Util(org.eclipse.xtend.lib.macro.TransformationContext)
org/eclipse/xtend/lib/annotations/DataProcessor/doTransform(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration,org.eclipse.xtend.lib.macro.TransformationContext)#org/eclipse/xtend/lib/annotations/EqualsHashCodeProcessor$Util/addHashCode(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration,java.lang.Iterable,boolean)
org/eclipse/xtend/lib/annotations/DataProcessor/doTransform(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration,org.eclipse.xtend.lib.macro.TransformationContext)#org/eclipse/xtend/lib/annotations/ToStringProcessor$Util/hasToString(org.eclipse.xtend.lib.macro.declaration.ClassDeclaration)
org/eclipse/xtend/lib/annotations/DataProcessor/doTransform(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration,org.eclipse.xtend.lib.macro.TransformationContext)#org/eclipse/xtend/lib/macro/TransformationContext/findTypeGlobally(java.lang.Class)
org/eclipse/xtend/lib/annotations/DataProcessor/doTransform(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration,org.eclipse.xtend.lib.macro.TransformationContext)#org/eclipse/xtend/lib/annotations/EqualsHashCodeProcessor$Util/addEquals(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration,java.lang.Iterable,boolean)
org/eclipse/xtend/lib/annotations/DataProcessor/doTransform(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration,org.eclipse.xtend.lib.macro.TransformationContext)#org/eclipse/xtend/lib/annotations/FinalFieldsConstructorProcessor$Util/getSuperConstructor(org.eclipse.xtend.lib.macro.declaration.TypeDeclaration)
org/eclipse/xtend/lib/annotations/DataProcessor/doTransform(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration,org.eclipse.xtend.lib.macro.TransformationContext)#org/eclipse/xtend/lib/annotations/DataProcessor$1/1(org.eclipse.xtend.lib.annotations.DataProcessor,org.eclipse.xtend.lib.macro.TransformationContext)
org/eclipse/xtend/lib/annotations/DataProcessor/doTransform(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration,org.eclipse.xtend.lib.macro.TransformationContext)#org/eclipse/xtend/lib/annotations/AccessorsProcessor$Util/Util(org.eclipse.xtend.lib.macro.TransformationContext)
org/eclipse/xtend/lib/annotations/DataProcessor/doTransform(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration,org.eclipse.xtend.lib.macro.TransformationContext)#org/eclipse/xtend/lib/annotations/FinalFieldsConstructorProcessor$Util/addFinalFieldsConstructor(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration)
org/eclipse/xtend/lib/annotations/DataProcessor/doTransform(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration,org.eclipse.xtend.lib.macro.TransformationContext)#org/eclipse/xtend/lib/annotations/FinalFieldsConstructorProcessor$Util/needsFinalFieldConstructor(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration)
org/eclipse/xtend/lib/annotations/DataProcessor/doTransform(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration,org.eclipse.xtend.lib.macro.TransformationContext)#org/eclipse/xtend/lib/annotations/ToStringProcessor$Util/addToString(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration,java.lang.Iterable,org.eclipse.xtend.lib.annotations.ToStringConfiguration)
org/eclipse/xtend/lib/annotations/DataProcessor/doTransform(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration,org.eclipse.xtend.lib.macro.TransformationContext)#org/eclipse/xtend/lib/annotations/FinalFieldsConstructorProcessor$Util/Util(org.eclipse.xtend.lib.macro.TransformationContext)
org/eclipse/xtend/lib/PropertyProcessor/doTransform(org.eclipse.xtend.lib.macro.declaration.MutableFieldDeclaration,org.eclipse.xtend.lib.macro.TransformationContext)#org/eclipse/xtext/xbase/lib/StringExtensions/toFirstLower(java.lang.String)
org/eclipse/xtend/lib/PropertyProcessor/doTransform(org.eclipse.xtend.lib.macro.declaration.MutableFieldDeclaration,org.eclipse.xtend.lib.macro.TransformationContext)#org/eclipse/xtend/lib/macro/declaration/MutableFieldDeclaration/getSimpleName()
org/eclipse/xtend/lib/PropertyProcessor/doTransform(org.eclipse.xtend.lib.macro.declaration.MutableFieldDeclaration,org.eclipse.xtend.lib.macro.TransformationContext)#org/eclipse/xtend/lib/annotations/AccessorsProcessor$Util/addGetter(org.eclipse.xtend.lib.macro.declaration.MutableFieldDeclaration,org.eclipse.xtend.lib.macro.declaration.Visibility)
org/eclipse/xtend/lib/PropertyProcessor/doTransform(org.eclipse.xtend.lib.macro.declaration.MutableFieldDeclaration,org.eclipse.xtend.lib.macro.TransformationContext)#org/eclipse/xtend/lib/macro/declaration/MutableFieldDeclaration/isFinal()
org/eclipse/xtend/lib/PropertyProcessor/doTransform(org.eclipse.xtend.lib.macro.declaration.MutableFieldDeclaration,org.eclipse.xtend.lib.macro.TransformationContext)#org/eclipse/xtend/lib/annotations/AccessorsProcessor$Util/hasGetter(org.eclipse.xtend.lib.macro.declaration.FieldDeclaration)
org/eclipse/xtend/lib/PropertyProcessor/doTransform(org.eclipse.xtend.lib.macro.declaration.MutableFieldDeclaration,org.eclipse.xtend.lib.macro.TransformationContext)#java/lang/StringBuilder/append(java.lang.String)
org/eclipse/xtend/lib/PropertyProcessor/doTransform(org.eclipse.xtend.lib.macro.declaration.MutableFieldDeclaration,org.eclipse.xtend.lib.macro.TransformationContext)#org/eclipse/xtend/lib/macro/declaration/MutableFieldDeclaration/setSimpleName(java.lang.String)
org/eclipse/xtend/lib/PropertyProcessor/doTransform(org.eclipse.xtend.lib.macro.declaration.MutableFieldDeclaration,org.eclipse.xtend.lib.macro.TransformationContext)#org/eclipse/xtend/lib/annotations/AccessorsProcessor$Util/Util(org.eclipse.xtend.lib.macro.TransformationContext)
org/eclipse/xtend/lib/PropertyProcessor/doTransform(org.eclipse.xtend.lib.macro.declaration.MutableFieldDeclaration,org.eclipse.xtend.lib.macro.TransformationContext)#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/eclipse/xtend/lib/PropertyProcessor/doTransform(org.eclipse.xtend.lib.macro.declaration.MutableFieldDeclaration,org.eclipse.xtend.lib.macro.TransformationContext)#org/eclipse/xtend/lib/annotations/AccessorsProcessor$Util/hasSetter(org.eclipse.xtend.lib.macro.declaration.FieldDeclaration)
org/eclipse/xtend/lib/PropertyProcessor/doTransform(org.eclipse.xtend.lib.macro.declaration.MutableFieldDeclaration,org.eclipse.xtend.lib.macro.TransformationContext)#java/lang/StringBuilder/toString()
org/eclipse/xtend/lib/PropertyProcessor/doTransform(org.eclipse.xtend.lib.macro.declaration.MutableFieldDeclaration,org.eclipse.xtend.lib.macro.TransformationContext)#org/eclipse/xtend/lib/annotations/AccessorsProcessor$Util/addSetter(org.eclipse.xtend.lib.macro.declaration.MutableFieldDeclaration,org.eclipse.xtend.lib.macro.declaration.Visibility)
org/eclipse/xtend/lib/annotations/EqualsHashCodeProcessor/Util/1/apply(org.eclipse.xtend.lib.macro.declaration.MethodDeclaration)#org/eclipse/xtend/lib/macro/declaration/MethodDeclaration/getParameters()
org/eclipse/xtend/lib/annotations/EqualsHashCodeProcessor/Util/1/apply(org.eclipse.xtend.lib.macro.declaration.MethodDeclaration)#com/google/common/base/Objects/equal(java.lang.Object,java.lang.Object)
org/eclipse/xtend/lib/annotations/EqualsHashCodeProcessor/Util/1/apply(org.eclipse.xtend.lib.macro.declaration.MethodDeclaration)#org/eclipse/xtend/lib/macro/declaration/ParameterDeclaration/getType()
org/eclipse/xtend/lib/annotations/EqualsHashCodeProcessor/Util/1/apply(org.eclipse.xtend.lib.macro.declaration.MethodDeclaration)#org/eclipse/xtext/xbase/lib/IterableExtensions/head(java.lang.Iterable)
org/eclipse/xtend/lib/annotations/EqualsHashCodeProcessor/Util/1/apply(org.eclipse.xtend.lib.macro.declaration.MethodDeclaration)#org/eclipse/xtext/xbase/lib/IterableExtensions/size(java.lang.Iterable)
org/eclipse/xtend/lib/annotations/EqualsHashCodeProcessor/Util/1/apply(org.eclipse.xtend.lib.macro.declaration.MethodDeclaration)#java/lang/Boolean/valueOf(boolean)
org/eclipse/xtend/lib/annotations/EqualsHashCodeProcessor/Util/1/apply(org.eclipse.xtend.lib.macro.declaration.MethodDeclaration)#org/eclipse/xtend/lib/macro/TransformationContext/getObject()
org/eclipse/xtend/lib/annotations/EqualsHashCodeProcessor/Util/1/apply(org.eclipse.xtend.lib.macro.declaration.MethodDeclaration)#org/eclipse/xtend/lib/annotations/EqualsHashCodeProcessor$Util/access$0(org.eclipse.xtend.lib.annotations.EqualsHashCodeProcessor$Util)
org/eclipse/xtend/lib/annotations/EqualsHashCodeProcessor/Util/1/apply(org.eclipse.xtend.lib.macro.declaration.MethodDeclaration)#org/eclipse/xtend/lib/macro/declaration/MethodDeclaration/getSimpleName()
org/eclipse/xtend/lib/annotations/EqualsHashCodeProcessor/Util/2/apply(org.eclipse.xtend.lib.macro.declaration.MutableMethodDeclaration)#org/eclipse/xtend/lib/macro/declaration/MutableMethodDeclaration/setReturnType(org.eclipse.xtend.lib.macro.declaration.TypeReference)
org/eclipse/xtend/lib/annotations/EqualsHashCodeProcessor/Util/2/apply(org.eclipse.xtend.lib.macro.declaration.MutableMethodDeclaration)#org/eclipse/xtend/lib/annotations/EqualsHashCodeProcessor$Util$2$1/1(org.eclipse.xtend.lib.annotations.EqualsHashCodeProcessor$Util$2,boolean,org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration,java.lang.Iterable)
org/eclipse/xtend/lib/annotations/EqualsHashCodeProcessor/Util/2/apply(org.eclipse.xtend.lib.macro.declaration.MutableMethodDeclaration)#org/eclipse/xtend/lib/macro/declaration/MutableMethodDeclaration/setBody(org.eclipse.xtend2.lib.StringConcatenationClient)
org/eclipse/xtend/lib/annotations/EqualsHashCodeProcessor/Util/2/apply(org.eclipse.xtend.lib.macro.declaration.MutableMethodDeclaration)#org/eclipse/xtend/lib/macro/declaration/MutableMethodDeclaration/addParameter(java.lang.String,org.eclipse.xtend.lib.macro.declaration.TypeReference)
org/eclipse/xtend/lib/annotations/EqualsHashCodeProcessor/Util/2/apply(org.eclipse.xtend.lib.macro.declaration.MutableMethodDeclaration)#org/eclipse/xtend/lib/macro/TransformationContext/getPrimarySourceElement(org.eclipse.xtend.lib.macro.declaration.Element)
org/eclipse/xtend/lib/annotations/EqualsHashCodeProcessor/Util/2/apply(org.eclipse.xtend.lib.macro.declaration.MutableMethodDeclaration)#org/eclipse/xtend/lib/macro/TransformationContext/newAnnotationReference(java.lang.Class)
org/eclipse/xtend/lib/annotations/EqualsHashCodeProcessor/Util/2/apply(org.eclipse.xtend.lib.macro.declaration.MutableMethodDeclaration)#org/eclipse/xtend/lib/annotations/EqualsHashCodeProcessor$Util/access$0(org.eclipse.xtend.lib.annotations.EqualsHashCodeProcessor$Util)
org/eclipse/xtend/lib/annotations/EqualsHashCodeProcessor/Util/2/apply(org.eclipse.xtend.lib.macro.declaration.MutableMethodDeclaration)#org/eclipse/xtend/lib/macro/declaration/MutableMethodDeclaration/addAnnotation(org.eclipse.xtend.lib.macro.declaration.AnnotationReference)
org/eclipse/xtend/lib/annotations/EqualsHashCodeProcessor/Util/2/apply(org.eclipse.xtend.lib.macro.declaration.MutableMethodDeclaration)#org/eclipse/xtend/lib/macro/TransformationContext/getObject()
org/eclipse/xtend/lib/annotations/EqualsHashCodeProcessor/Util/2/apply(org.eclipse.xtend.lib.macro.declaration.MutableMethodDeclaration)#org/eclipse/xtend/lib/macro/TransformationContext/getPrimitiveBoolean()
org/eclipse/xtend/lib/annotations/EqualsHashCodeProcessor/Util/2/apply(org.eclipse.xtend.lib.macro.declaration.MutableMethodDeclaration)#org/eclipse/xtend/lib/macro/TransformationContext/setPrimarySourceElement(org.eclipse.xtend.lib.macro.declaration.MutableElement,org.eclipse.xtend.lib.macro.declaration.Element)
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/10/apply(org.eclipse.xtend.lib.macro.declaration.ResolvedMethod)#org/eclipse/xtend/lib/macro/declaration/ResolvedMethod/getResolvedParameters()
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/10/apply(org.eclipse.xtend.lib.macro.declaration.ResolvedMethod)#org/eclipse/xtext/xbase/lib/Conversions/unwrapArray(java.lang.Object,java.lang.Class)
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/10/apply(org.eclipse.xtend.lib.macro.declaration.ResolvedMethod)#com/google/common/base/Objects/equal(java.lang.Object,java.lang.Object)
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/10/apply(org.eclipse.xtend.lib.macro.declaration.ResolvedMethod)#org/eclipse/xtend/lib/macro/declaration/ResolvedMethod/getDeclaration()
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/10/apply(org.eclipse.xtend.lib.macro.declaration.ResolvedMethod)#org/eclipse/xtend/lib/macro/declaration/MethodDeclaration/getSimpleName()
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/10/apply(org.eclipse.xtend.lib.macro.declaration.ResolvedMethod)#org/eclipse/xtext/xbase/lib/IterableExtensions/map(java.lang.Iterable,org.eclipse.xtext.xbase.lib.Functions$Function1)
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/10/apply(org.eclipse.xtend.lib.macro.declaration.ResolvedMethod)#java/lang/Boolean/valueOf(boolean)
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/10/apply(org.eclipse.xtend.lib.macro.declaration.ResolvedMethod)#org/eclipse/xtend/lib/macro/declaration/TypeDeclaration/findDeclaredMethod(java.lang.String,org.eclipse.xtend.lib.macro.declaration.TypeReference[])
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/10/apply(org.eclipse.xtend.lib.macro.declaration.ResolvedMethod)#org/eclipse/xtend/lib/annotations/DelegateProcessor$Util$10$1/1(org.eclipse.xtend.lib.annotations.DelegateProcessor$Util$10)
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/10/apply(org.eclipse.xtend.lib.macro.declaration.ResolvedMethod)#org/eclipse/xtend/lib/macro/declaration/MemberDeclaration/getDeclaringType()
org/eclipse/xtend/lib/annotations/AccessorsProcessor/Util/getPossibleGetterNames(org.eclipse.xtend.lib.macro.declaration.FieldDeclaration)#org/eclipse/xtend/lib/macro/declaration/FieldDeclaration/getType()
org/eclipse/xtend/lib/annotations/AccessorsProcessor/Util/getPossibleGetterNames(org.eclipse.xtend.lib.macro.declaration.FieldDeclaration)#org/eclipse/xtend/lib/annotations/AccessorsProcessor$Util$4/4(org.eclipse.xtend.lib.annotations.AccessorsProcessor$Util,org.eclipse.xtend.lib.macro.declaration.FieldDeclaration)
org/eclipse/xtend/lib/annotations/AccessorsProcessor/Util/getPossibleGetterNames(org.eclipse.xtend.lib.macro.declaration.FieldDeclaration)#org/eclipse/xtend/lib/macro/declaration/FieldDeclaration/getSimpleName()
org/eclipse/xtend/lib/annotations/AccessorsProcessor/Util/getPossibleGetterNames(org.eclipse.xtend.lib.macro.declaration.FieldDeclaration)#org/eclipse/xtend/lib/annotations/AccessorsProcessor$Util/isBooleanType(org.eclipse.xtend.lib.macro.declaration.TypeReference)
org/eclipse/xtend/lib/annotations/AccessorsProcessor/Util/getPossibleGetterNames(org.eclipse.xtend.lib.macro.declaration.FieldDeclaration)#java/lang/String/charAt(int)
org/eclipse/xtend/lib/annotations/AccessorsProcessor/Util/getPossibleGetterNames(org.eclipse.xtend.lib.macro.declaration.FieldDeclaration)#java/util/ArrayList/add(java.lang.Object)
org/eclipse/xtend/lib/annotations/AccessorsProcessor/Util/getPossibleGetterNames(org.eclipse.xtend.lib.macro.declaration.FieldDeclaration)#java/lang/String/startsWith(java.lang.String)
org/eclipse/xtend/lib/annotations/AccessorsProcessor/Util/getPossibleGetterNames(org.eclipse.xtend.lib.macro.declaration.FieldDeclaration)#org/eclipse/xtext/xbase/lib/CollectionLiterals/newArrayList(java.lang.Object[])
org/eclipse/xtend/lib/annotations/AccessorsProcessor/Util/getPossibleGetterNames(org.eclipse.xtend.lib.macro.declaration.FieldDeclaration)#java/lang/String/length()
org/eclipse/xtend/lib/annotations/AccessorsProcessor/Util/getPossibleGetterNames(org.eclipse.xtend.lib.macro.declaration.FieldDeclaration)#org/eclipse/xtext/xbase/lib/ListExtensions/map(java.util.List,org.eclipse.xtext.xbase.lib.Functions$Function1)
org/eclipse/xtend/lib/annotations/AccessorsProcessor/Util/getPossibleGetterNames(org.eclipse.xtend.lib.macro.declaration.FieldDeclaration)#org/eclipse/xtend/lib/annotations/AccessorsProcessor$Util/orObject(org.eclipse.xtend.lib.macro.declaration.TypeReference)
org/eclipse/xtend/lib/annotations/AccessorsProcessor/Util/getPossibleGetterNames(org.eclipse.xtend.lib.macro.declaration.FieldDeclaration)#java/util/Collections/unmodifiableList(java.util.List)
org/eclipse/xtend/lib/annotations/AccessorsProcessor/Util/getPossibleGetterNames(org.eclipse.xtend.lib.macro.declaration.FieldDeclaration)#java/lang/Character/isUpperCase(char)
org/eclipse/xtend/lib/annotations/AccessorsProcessor/Util/getPossibleGetterNames(org.eclipse.xtend.lib.macro.declaration.FieldDeclaration)#java/util/ArrayList/addAll(java.util.Collection)
org/eclipse/xtend/lib/annotations/EqualsHashCodeProcessor/Util/2/1/appendTo(org.eclipse.xtend2.lib.StringConcatenationClient$TargetStringConcatenation)#org/eclipse/xtend2/lib/StringConcatenationClient$TargetStringConcatenation/append(java.lang.Object)
org/eclipse/xtend/lib/annotations/EqualsHashCodeProcessor/Util/2/1/appendTo(org.eclipse.xtend2.lib.StringConcatenationClient$TargetStringConcatenation)#org/eclipse/xtend/lib/annotations/EqualsHashCodeProcessor$Util/access$1(org.eclipse.xtend.lib.annotations.EqualsHashCodeProcessor$Util,org.eclipse.xtend.lib.macro.declaration.ClassDeclaration)
org/eclipse/xtend/lib/annotations/EqualsHashCodeProcessor/Util/2/1/appendTo(org.eclipse.xtend2.lib.StringConcatenationClient$TargetStringConcatenation)#java/util/Iterator/hasNext()
org/eclipse/xtend/lib/annotations/EqualsHashCodeProcessor/Util/2/1/appendTo(org.eclipse.xtend2.lib.StringConcatenationClient$TargetStringConcatenation)#org/eclipse/xtend2/lib/StringConcatenationClient$TargetStringConcatenation/newLineIfNotEmpty()
org/eclipse/xtend/lib/annotations/EqualsHashCodeProcessor/Util/2/1/appendTo(org.eclipse.xtend2.lib.StringConcatenationClient$TargetStringConcatenation)#org/eclipse/xtend/lib/annotations/EqualsHashCodeProcessor$Util/contributeToEquals(org.eclipse.xtend.lib.macro.declaration.FieldDeclaration)
org/eclipse/xtend/lib/annotations/EqualsHashCodeProcessor/Util/2/1/appendTo(org.eclipse.xtend2.lib.StringConcatenationClient$TargetStringConcatenation)#java/lang/Iterable/iterator()
org/eclipse/xtend/lib/annotations/EqualsHashCodeProcessor/Util/2/1/appendTo(org.eclipse.xtend2.lib.StringConcatenationClient$TargetStringConcatenation)#org/eclipse/xtend2/lib/StringConcatenationClient$TargetStringConcatenation/append(java.lang.Object,java.lang.String)
org/eclipse/xtend/lib/annotations/EqualsHashCodeProcessor/Util/2/1/appendTo(org.eclipse.xtend2.lib.StringConcatenationClient$TargetStringConcatenation)#org/eclipse/xtend/lib/annotations/EqualsHashCodeProcessor$Util$2/access$1(org.eclipse.xtend.lib.annotations.EqualsHashCodeProcessor$Util$2)
org/eclipse/xtend/lib/annotations/EqualsHashCodeProcessor/Util/2/1/appendTo(org.eclipse.xtend2.lib.StringConcatenationClient$TargetStringConcatenation)#org/eclipse/xtend2/lib/StringConcatenationClient$TargetStringConcatenation/newLine()
org/eclipse/xtend/lib/annotations/EqualsHashCodeProcessor/Util/2/1/appendTo(org.eclipse.xtend2.lib.StringConcatenationClient$TargetStringConcatenation)#java/util/Iterator/next()
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/15/apply(org.eclipse.xtend.lib.macro.declaration.MutableMethodDeclaration)#org/eclipse/xtext/xbase/lib/CollectionLiterals/newHashMap(org.eclipse.xtext.xbase.lib.Pair[])
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/15/apply(org.eclipse.xtend.lib.macro.declaration.MutableMethodDeclaration)#org/eclipse/xtend/lib/annotations/DelegateProcessor$Util$15$2/2(org.eclipse.xtend.lib.annotations.DelegateProcessor$Util$15,java.util.HashMap)
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/15/apply(org.eclipse.xtend.lib.macro.declaration.MutableMethodDeclaration)#org/eclipse/xtend/lib/annotations/DelegateProcessor$Util$15$3/3(org.eclipse.xtend.lib.annotations.DelegateProcessor$Util$15,java.util.HashMap,org.eclipse.xtend.lib.macro.declaration.MutableMethodDeclaration)
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/15/apply(org.eclipse.xtend.lib.macro.declaration.MutableMethodDeclaration)#org/eclipse/xtend/lib/macro/TransformationContext/getPrimarySourceElement(org.eclipse.xtend.lib.macro.declaration.Element)
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/15/apply(org.eclipse.xtend.lib.macro.declaration.MutableMethodDeclaration)#org/eclipse/xtext/xbase/lib/IterableExtensions/map(java.lang.Iterable,org.eclipse.xtext.xbase.lib.Functions$Function1)
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/15/apply(org.eclipse.xtend.lib.macro.declaration.MutableMethodDeclaration)#org/eclipse/xtend/lib/annotations/DelegateProcessor$Util$15$4/4(org.eclipse.xtend.lib.annotations.DelegateProcessor$Util$15,org.eclipse.xtend.lib.macro.declaration.ResolvedMethod,org.eclipse.xtend.lib.macro.declaration.MutableMemberDeclaration,org.eclipse.xtend.lib.macro.declaration.MethodDeclaration)
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/15/apply(org.eclipse.xtend.lib.macro.declaration.MutableMethodDeclaration)#org/eclipse/xtend/lib/macro/declaration/ResolvedMethod/getResolvedParameters()
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/15/apply(org.eclipse.xtend.lib.macro.declaration.MutableMethodDeclaration)#org/eclipse/xtend/lib/macro/declaration/ResolvedMethod/getResolvedExceptionTypes()
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/15/apply(org.eclipse.xtend.lib.macro.declaration.MutableMethodDeclaration)#org/eclipse/xtend/lib/macro/declaration/ResolvedMethod/getResolvedReturnType()
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/15/apply(org.eclipse.xtend.lib.macro.declaration.MutableMethodDeclaration)#org/eclipse/xtend/lib/annotations/DelegateProcessor$Util$15$1/1(org.eclipse.xtend.lib.annotations.DelegateProcessor$Util$15,org.eclipse.xtend.lib.macro.declaration.MutableMethodDeclaration,java.util.HashMap)
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/15/apply(org.eclipse.xtend.lib.macro.declaration.MutableMethodDeclaration)#org/eclipse/xtend/lib/macro/declaration/MutableMethodDeclaration/setReturnType(org.eclipse.xtend.lib.macro.declaration.TypeReference)
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/15/apply(org.eclipse.xtend.lib.macro.declaration.MutableMethodDeclaration)#org/eclipse/xtext/xbase/lib/Conversions/unwrapArray(java.lang.Object,java.lang.Class)
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/15/apply(org.eclipse.xtend.lib.macro.declaration.MutableMethodDeclaration)#org/eclipse/xtend/lib/macro/declaration/MutableMethodDeclaration/setBody(org.eclipse.xtend2.lib.StringConcatenationClient)
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/15/apply(org.eclipse.xtend.lib.macro.declaration.MutableMethodDeclaration)#org/eclipse/xtend/lib/macro/declaration/MutableMethodDeclaration/setExceptions(org.eclipse.xtend.lib.macro.declaration.TypeReference[])
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/15/apply(org.eclipse.xtend.lib.macro.declaration.MutableMethodDeclaration)#org/eclipse/xtend/lib/macro/declaration/MutableMethodDeclaration/setVarArgs(boolean)
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/15/apply(org.eclipse.xtend.lib.macro.declaration.MutableMethodDeclaration)#org/eclipse/xtend/lib/annotations/DelegateProcessor$Util/replace(org.eclipse.xtend.lib.macro.declaration.TypeReference,java.util.Map)
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/15/apply(org.eclipse.xtend.lib.macro.declaration.MutableMethodDeclaration)#org/eclipse/xtext/xbase/lib/IterableExtensions/forEach(java.lang.Iterable,org.eclipse.xtext.xbase.lib.Procedures$Procedure1)
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/15/apply(org.eclipse.xtend.lib.macro.declaration.MutableMethodDeclaration)#org/eclipse/xtend/lib/macro/declaration/MethodDeclaration/isVarArgs()
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/15/apply(org.eclipse.xtend.lib.macro.declaration.MutableMethodDeclaration)#org/eclipse/xtend/lib/macro/declaration/ResolvedMethod/getResolvedTypeParameters()
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/15/apply(org.eclipse.xtend.lib.macro.declaration.MutableMethodDeclaration)#org/eclipse/xtend/lib/annotations/DelegateProcessor$Util/access$0(org.eclipse.xtend.lib.annotations.DelegateProcessor$Util)
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/15/apply(org.eclipse.xtend.lib.macro.declaration.MutableMethodDeclaration)#org/eclipse/xtend/lib/macro/TransformationContext/setPrimarySourceElement(org.eclipse.xtend.lib.macro.declaration.MutableElement,org.eclipse.xtend.lib.macro.declaration.Element)
org/eclipse/xtend/lib/DataProcessor/Util/3/apply(org.eclipse.xtend.lib.macro.declaration.MutableMethodDeclaration)#org/eclipse/xtend/lib/macro/declaration/MutableMethodDeclaration/setReturnType(org.eclipse.xtend.lib.macro.declaration.TypeReference)
org/eclipse/xtend/lib/DataProcessor/Util/3/apply(org.eclipse.xtend.lib.macro.declaration.MutableMethodDeclaration)#org/eclipse/xtend/lib/macro/declaration/MutableMethodDeclaration/setBody(org.eclipse.xtend2.lib.StringConcatenationClient)
org/eclipse/xtend/lib/DataProcessor/Util/3/apply(org.eclipse.xtend.lib.macro.declaration.MutableMethodDeclaration)#org/eclipse/xtend/lib/DataProcessor$Util/access$0(org.eclipse.xtend.lib.DataProcessor$Util)
org/eclipse/xtend/lib/DataProcessor/Util/3/apply(org.eclipse.xtend.lib.macro.declaration.MutableMethodDeclaration)#org/eclipse/xtend/lib/macro/TransformationContext/getString()
org/eclipse/xtend/lib/DataProcessor/Util/3/apply(org.eclipse.xtend.lib.macro.declaration.MutableMethodDeclaration)#org/eclipse/xtend/lib/macro/TransformationContext/getPrimarySourceElement(org.eclipse.xtend.lib.macro.declaration.Element)
org/eclipse/xtend/lib/DataProcessor/Util/3/apply(org.eclipse.xtend.lib.macro.declaration.MutableMethodDeclaration)#org/eclipse/xtend/lib/macro/TransformationContext/newAnnotationReference(java.lang.Class)
org/eclipse/xtend/lib/DataProcessor/Util/3/apply(org.eclipse.xtend.lib.macro.declaration.MutableMethodDeclaration)#org/eclipse/xtend/lib/DataProcessor$Util$3$1/1(org.eclipse.xtend.lib.DataProcessor$Util$3)
org/eclipse/xtend/lib/DataProcessor/Util/3/apply(org.eclipse.xtend.lib.macro.declaration.MutableMethodDeclaration)#org/eclipse/xtend/lib/macro/declaration/MutableMethodDeclaration/addAnnotation(org.eclipse.xtend.lib.macro.declaration.AnnotationReference)
org/eclipse/xtend/lib/DataProcessor/Util/3/apply(org.eclipse.xtend.lib.macro.declaration.MutableMethodDeclaration)#org/eclipse/xtend/lib/macro/TransformationContext/setPrimarySourceElement(org.eclipse.xtend.lib.macro.declaration.MutableElement,org.eclipse.xtend.lib.macro.declaration.Element)
org/eclipse/xtend/lib/annotations/AccessorsProcessor/Util/5/apply(org.eclipse.xtend.lib.macro.declaration.MutableMethodDeclaration)#org/eclipse/xtend/lib/macro/declaration/MutableMethodDeclaration/setReturnType(org.eclipse.xtend.lib.macro.declaration.TypeReference)
org/eclipse/xtend/lib/annotations/AccessorsProcessor/Util/5/apply(org.eclipse.xtend.lib.macro.declaration.MutableMethodDeclaration)#org/eclipse/xtend/lib/macro/declaration/MutableMethodDeclaration/setVisibility(org.eclipse.xtend.lib.macro.declaration.Visibility)
org/eclipse/xtend/lib/annotations/AccessorsProcessor/Util/5/apply(org.eclipse.xtend.lib.macro.declaration.MutableMethodDeclaration)#org/eclipse/xtend/lib/annotations/AccessorsProcessor$Util/access$1(org.eclipse.xtend.lib.annotations.AccessorsProcessor$Util)
org/eclipse/xtend/lib/annotations/AccessorsProcessor/Util/5/apply(org.eclipse.xtend.lib.macro.declaration.MutableMethodDeclaration)#org/eclipse/xtend/lib/macro/declaration/MutableMethodDeclaration/setBody(org.eclipse.xtend2.lib.StringConcatenationClient)
org/eclipse/xtend/lib/annotations/AccessorsProcessor/Util/5/apply(org.eclipse.xtend.lib.macro.declaration.MutableMethodDeclaration)#org/eclipse/xtend/lib/macro/declaration/MutableMethodDeclaration/setStatic(boolean)
org/eclipse/xtend/lib/annotations/AccessorsProcessor/Util/5/apply(org.eclipse.xtend.lib.macro.declaration.MutableMethodDeclaration)#org/eclipse/xtend/lib/annotations/AccessorsProcessor$Util$5$1/1(org.eclipse.xtend.lib.annotations.AccessorsProcessor$Util$5,org.eclipse.xtend.lib.macro.declaration.MutableFieldDeclaration)
org/eclipse/xtend/lib/annotations/AccessorsProcessor/Util/5/apply(org.eclipse.xtend.lib.macro.declaration.MutableMethodDeclaration)#org/eclipse/xtend/lib/macro/TransformationContext/getPrimarySourceElement(org.eclipse.xtend.lib.macro.declaration.Element)
org/eclipse/xtend/lib/annotations/AccessorsProcessor/Util/5/apply(org.eclipse.xtend.lib.macro.declaration.MutableMethodDeclaration)#org/eclipse/xtend/lib/macro/TransformationContext/newAnnotationReference(java.lang.Class)
org/eclipse/xtend/lib/annotations/AccessorsProcessor/Util/5/apply(org.eclipse.xtend.lib.macro.declaration.MutableMethodDeclaration)#org/eclipse/xtend/lib/macro/declaration/MutableMethodDeclaration/addAnnotation(org.eclipse.xtend.lib.macro.declaration.AnnotationReference)
org/eclipse/xtend/lib/annotations/AccessorsProcessor/Util/5/apply(org.eclipse.xtend.lib.macro.declaration.MutableMethodDeclaration)#org/eclipse/xtend/lib/macro/declaration/MutableFieldDeclaration/isStatic()
org/eclipse/xtend/lib/annotations/AccessorsProcessor/Util/5/apply(org.eclipse.xtend.lib.macro.declaration.MutableMethodDeclaration)#org/eclipse/xtend/lib/annotations/AccessorsProcessor$Util/access$2(org.eclipse.xtend.lib.annotations.AccessorsProcessor$Util,org.eclipse.xtend.lib.macro.declaration.TypeReference)
org/eclipse/xtend/lib/annotations/AccessorsProcessor/Util/5/apply(org.eclipse.xtend.lib.macro.declaration.MutableMethodDeclaration)#org/eclipse/xtend/lib/macro/declaration/MutableFieldDeclaration/getType()
org/eclipse/xtend/lib/annotations/AccessorsProcessor/Util/5/apply(org.eclipse.xtend.lib.macro.declaration.MutableMethodDeclaration)#org/eclipse/xtend/lib/macro/TransformationContext/setPrimarySourceElement(org.eclipse.xtend.lib.macro.declaration.MutableElement,org.eclipse.xtend.lib.macro.declaration.Element)
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/15/1/apply(org.eclipse.xtend.lib.macro.declaration.ResolvedTypeParameter)#org/eclipse/xtend/lib/macro/declaration/ResolvedTypeParameter/getResolvedUpperBounds()
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/15/1/apply(org.eclipse.xtend.lib.macro.declaration.ResolvedTypeParameter)#org/eclipse/xtend/lib/macro/TransformationContext/newTypeReference(org.eclipse.xtend.lib.macro.declaration.Type,org.eclipse.xtend.lib.macro.declaration.TypeReference[])
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/15/1/apply(org.eclipse.xtend.lib.macro.declaration.ResolvedTypeParameter)#org/eclipse/xtend/lib/annotations/DelegateProcessor$Util$15/access$1(org.eclipse.xtend.lib.annotations.DelegateProcessor$Util$15)
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/15/1/apply(org.eclipse.xtend.lib.macro.declaration.ResolvedTypeParameter)#org/eclipse/xtext/xbase/lib/Conversions/unwrapArray(java.lang.Object,java.lang.Class)
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/15/1/apply(org.eclipse.xtend.lib.macro.declaration.ResolvedTypeParameter)#org/eclipse/xtend/lib/macro/declaration/MutableTypeParameterDeclaration/setUpperBounds(java.lang.Iterable)
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/15/1/apply(org.eclipse.xtend.lib.macro.declaration.ResolvedTypeParameter)#org/eclipse/xtend/lib/macro/declaration/TypeParameterDeclaration/getSimpleName()
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/15/1/apply(org.eclipse.xtend.lib.macro.declaration.ResolvedTypeParameter)#java/util/HashMap/put(java.lang.Object,java.lang.Object)
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/15/1/apply(org.eclipse.xtend.lib.macro.declaration.ResolvedTypeParameter)#org/eclipse/xtend/lib/annotations/DelegateProcessor$Util$15$1$1/1(org.eclipse.xtend.lib.annotations.DelegateProcessor$Util$15$1,java.util.HashMap)
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/15/1/apply(org.eclipse.xtend.lib.macro.declaration.ResolvedTypeParameter)#org/eclipse/xtend/lib/macro/declaration/MutableMethodDeclaration/addTypeParameter(java.lang.String,org.eclipse.xtend.lib.macro.declaration.TypeReference[])
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/15/1/apply(org.eclipse.xtend.lib.macro.declaration.ResolvedTypeParameter)#org/eclipse/xtext/xbase/lib/IterableExtensions/map(java.lang.Iterable,org.eclipse.xtext.xbase.lib.Functions$Function1)
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/15/1/apply(org.eclipse.xtend.lib.macro.declaration.ResolvedTypeParameter)#org/eclipse/xtend/lib/macro/declaration/ResolvedTypeParameter/getDeclaration()
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/15/1/apply(org.eclipse.xtend.lib.macro.declaration.ResolvedTypeParameter)#org/eclipse/xtend/lib/macro/declaration/MutableTypeParameterDeclaration/getUpperBounds()
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/15/1/apply(org.eclipse.xtend.lib.macro.declaration.ResolvedTypeParameter)#org/eclipse/xtend/lib/annotations/DelegateProcessor$Util/access$0(org.eclipse.xtend.lib.annotations.DelegateProcessor$Util)
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/replace(org.eclipse.xtend.lib.macro.declaration.TypeReference,org.eclipse.xtend.lib.macro.declaration.TypeReference,org.eclipse.xtend.lib.macro.declaration.TypeReference)#org/eclipse/xtend/lib/macro/declaration/TypeReference/isWildCard()
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/replace(org.eclipse.xtend.lib.macro.declaration.TypeReference,org.eclipse.xtend.lib.macro.declaration.TypeReference,org.eclipse.xtend.lib.macro.declaration.TypeReference)#org/eclipse/xtend/lib/macro/TransformationContext/newTypeReference(org.eclipse.xtend.lib.macro.declaration.Type,org.eclipse.xtend.lib.macro.declaration.TypeReference[])
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/replace(org.eclipse.xtend.lib.macro.declaration.TypeReference,org.eclipse.xtend.lib.macro.declaration.TypeReference,org.eclipse.xtend.lib.macro.declaration.TypeReference)#org/eclipse/xtend/lib/annotations/DelegateProcessor$Util$17/17(org.eclipse.xtend.lib.annotations.DelegateProcessor$Util,org.eclipse.xtend.lib.macro.declaration.TypeReference,org.eclipse.xtend.lib.macro.declaration.TypeReference)
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/replace(org.eclipse.xtend.lib.macro.declaration.TypeReference,org.eclipse.xtend.lib.macro.declaration.TypeReference,org.eclipse.xtend.lib.macro.declaration.TypeReference)#org/eclipse/xtend/lib/macro/TransformationContext/newWildcardTypeReferenceWithLowerBound(org.eclipse.xtend.lib.macro.declaration.TypeReference)
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/replace(org.eclipse.xtend.lib.macro.declaration.TypeReference,org.eclipse.xtend.lib.macro.declaration.TypeReference,org.eclipse.xtend.lib.macro.declaration.TypeReference)#org/eclipse/xtend/lib/macro/TransformationContext/newWildcardTypeReference(org.eclipse.xtend.lib.macro.declaration.TypeReference)
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/replace(org.eclipse.xtend.lib.macro.declaration.TypeReference,org.eclipse.xtend.lib.macro.declaration.TypeReference,org.eclipse.xtend.lib.macro.declaration.TypeReference)#org/eclipse/xtend/lib/macro/declaration/TypeReference/getUpperBound()
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/replace(org.eclipse.xtend.lib.macro.declaration.TypeReference,org.eclipse.xtend.lib.macro.declaration.TypeReference,org.eclipse.xtend.lib.macro.declaration.TypeReference)#org/eclipse/xtend/lib/macro/declaration/TypeReference/getArrayComponentType()
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/replace(org.eclipse.xtend.lib.macro.declaration.TypeReference,org.eclipse.xtend.lib.macro.declaration.TypeReference,org.eclipse.xtend.lib.macro.declaration.TypeReference)#org/eclipse/xtend/lib/macro/TransformationContext/newArrayTypeReference(org.eclipse.xtend.lib.macro.declaration.TypeReference)
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/replace(org.eclipse.xtend.lib.macro.declaration.TypeReference,org.eclipse.xtend.lib.macro.declaration.TypeReference,org.eclipse.xtend.lib.macro.declaration.TypeReference)#org/eclipse/xtext/xbase/lib/Conversions/unwrapArray(java.lang.Object,java.lang.Class)
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/replace(org.eclipse.xtend.lib.macro.declaration.TypeReference,org.eclipse.xtend.lib.macro.declaration.TypeReference,org.eclipse.xtend.lib.macro.declaration.TypeReference)#org/eclipse/xtend/lib/macro/declaration/TypeReference/isArray()
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/replace(org.eclipse.xtend.lib.macro.declaration.TypeReference,org.eclipse.xtend.lib.macro.declaration.TypeReference,org.eclipse.xtend.lib.macro.declaration.TypeReference)#org/eclipse/xtend/lib/macro/declaration/TypeReference/getType()
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/replace(org.eclipse.xtend.lib.macro.declaration.TypeReference,org.eclipse.xtend.lib.macro.declaration.TypeReference,org.eclipse.xtend.lib.macro.declaration.TypeReference)#com/google/common/base/Objects/equal(java.lang.Object,java.lang.Object)
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/replace(org.eclipse.xtend.lib.macro.declaration.TypeReference,org.eclipse.xtend.lib.macro.declaration.TypeReference,org.eclipse.xtend.lib.macro.declaration.TypeReference)#org/eclipse/xtend/lib/macro/declaration/TypeReference/getLowerBound()
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/replace(org.eclipse.xtend.lib.macro.declaration.TypeReference,org.eclipse.xtend.lib.macro.declaration.TypeReference,org.eclipse.xtend.lib.macro.declaration.TypeReference)#java/util/List/isEmpty()
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/replace(org.eclipse.xtend.lib.macro.declaration.TypeReference,org.eclipse.xtend.lib.macro.declaration.TypeReference,org.eclipse.xtend.lib.macro.declaration.TypeReference)#org/eclipse/xtext/xbase/lib/ListExtensions/map(java.util.List,org.eclipse.xtext.xbase.lib.Functions$Function1)
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/replace(org.eclipse.xtend.lib.macro.declaration.TypeReference,org.eclipse.xtend.lib.macro.declaration.TypeReference,org.eclipse.xtend.lib.macro.declaration.TypeReference)#org/eclipse/xtend/lib/macro/declaration/TypeReference/isAnyType()
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/replace(org.eclipse.xtend.lib.macro.declaration.TypeReference,org.eclipse.xtend.lib.macro.declaration.TypeReference,org.eclipse.xtend.lib.macro.declaration.TypeReference)#org/eclipse/xtend/lib/macro/declaration/TypeReference/getActualTypeArguments()
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/replace(org.eclipse.xtend.lib.macro.declaration.TypeReference,org.eclipse.xtend.lib.macro.declaration.TypeReference,org.eclipse.xtend.lib.macro.declaration.TypeReference)#org/eclipse/xtend/lib/macro/TransformationContext/getObject()
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/replace(org.eclipse.xtend.lib.macro.declaration.TypeReference,org.eclipse.xtend.lib.macro.declaration.TypeReference,org.eclipse.xtend.lib.macro.declaration.TypeReference)#org/eclipse/xtend/lib/annotations/DelegateProcessor$Util/replace(org.eclipse.xtend.lib.macro.declaration.TypeReference,org.eclipse.xtend.lib.macro.declaration.TypeReference,org.eclipse.xtend.lib.macro.declaration.TypeReference)
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/isObjectMethod(org.eclipse.xtend.lib.macro.declaration.ResolvedMethod)#org/eclipse/xtend/lib/macro/declaration/ResolvedMethod/getResolvedParameters()
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/isObjectMethod(org.eclipse.xtend.lib.macro.declaration.ResolvedMethod)#com/google/common/base/Objects/equal(java.lang.Object,java.lang.Object)
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/isObjectMethod(org.eclipse.xtend.lib.macro.declaration.ResolvedMethod)#org/eclipse/xtext/xbase/lib/IterableExtensions/toList(java.lang.Iterable)
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/isObjectMethod(org.eclipse.xtend.lib.macro.declaration.ResolvedMethod)#java/util/List/isEmpty()
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/isObjectMethod(org.eclipse.xtend.lib.macro.declaration.ResolvedMethod)#org/eclipse/xtend/lib/macro/declaration/MethodDeclaration/getSimpleName()
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/isObjectMethod(org.eclipse.xtend.lib.macro.declaration.ResolvedMethod)#org/eclipse/xtext/xbase/lib/CollectionLiterals/newArrayList(java.lang.Object[])
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/isObjectMethod(org.eclipse.xtend.lib.macro.declaration.ResolvedMethod)#org/eclipse/xtend/lib/annotations/DelegateProcessor$Util$14/14(org.eclipse.xtend.lib.annotations.DelegateProcessor$Util)
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/isObjectMethod(org.eclipse.xtend.lib.macro.declaration.ResolvedMethod)#org/eclipse/xtend/lib/macro/declaration/ResolvedMethod/getDeclaration()
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/isObjectMethod(org.eclipse.xtend.lib.macro.declaration.ResolvedMethod)#java/util/Collections/unmodifiableList(java.util.List)
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/isObjectMethod(org.eclipse.xtend.lib.macro.declaration.ResolvedMethod)#org/eclipse/xtend/lib/macro/TransformationContext/getObject()
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/isObjectMethod(org.eclipse.xtend.lib.macro.declaration.ResolvedMethod)#org/eclipse/xtext/xbase/lib/IterableExtensions/map(java.lang.Iterable,org.eclipse.xtext.xbase.lib.Functions$Function1)
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/areListedInterfacesValid(org.eclipse.xtend.lib.macro.declaration.MemberDeclaration)#org/eclipse/xtend2/lib/StringConcatenation/StringConcatenation()
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/areListedInterfacesValid(org.eclipse.xtend.lib.macro.declaration.MemberDeclaration)#java/util/Iterator/next()
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/areListedInterfacesValid(org.eclipse.xtend.lib.macro.declaration.MemberDeclaration)#org/eclipse/xtend/lib/annotations/DelegateProcessor$Util$3/3(org.eclipse.xtend.lib.annotations.DelegateProcessor$Util,org.eclipse.xtend.lib.macro.declaration.TypeReference)
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/areListedInterfacesValid(org.eclipse.xtend.lib.macro.declaration.MemberDeclaration)#org/eclipse/xtend2/lib/StringConcatenation/append(java.lang.Object,java.lang.String)
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/areListedInterfacesValid(org.eclipse.xtend.lib.macro.declaration.MemberDeclaration)#org/eclipse/xtend2/lib/StringConcatenation/append(java.lang.Object)
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/areListedInterfacesValid(org.eclipse.xtend.lib.macro.declaration.MemberDeclaration)#org/eclipse/xtend/lib/macro/TransformationContext/newSelfTypeReference(org.eclipse.xtend.lib.macro.declaration.Type)
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/areListedInterfacesValid(org.eclipse.xtend.lib.macro.declaration.MemberDeclaration)#org/eclipse/xtend2/lib/StringConcatenation/toString()
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/areListedInterfacesValid(org.eclipse.xtend.lib.macro.declaration.MemberDeclaration)#com/google/common/collect/Sets$SetView/isEmpty()
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/areListedInterfacesValid(org.eclipse.xtend.lib.macro.declaration.MemberDeclaration)#org/eclipse/xtend/lib/macro/TransformationContext/addError(org.eclipse.xtend.lib.macro.declaration.Element,java.lang.String)
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/areListedInterfacesValid(org.eclipse.xtend.lib.macro.declaration.MemberDeclaration)#java/util/Iterator/hasNext()
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/areListedInterfacesValid(org.eclipse.xtend.lib.macro.declaration.MemberDeclaration)#com/google/common/collect/Sets/intersection(java.util.Set,java.util.Set)
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/areListedInterfacesValid(org.eclipse.xtend.lib.macro.declaration.MemberDeclaration)#org/eclipse/xtend/lib/macro/declaration/TypeReference/getSimpleName()
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/areListedInterfacesValid(org.eclipse.xtend.lib.macro.declaration.MemberDeclaration)#org/eclipse/xtext/xbase/lib/IterableExtensions/exists(java.lang.Iterable,org.eclipse.xtext.xbase.lib.Functions$Function1)
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/areListedInterfacesValid(org.eclipse.xtend.lib.macro.declaration.MemberDeclaration)#java/util/Set/isEmpty()
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/areListedInterfacesValid(org.eclipse.xtend.lib.macro.declaration.MemberDeclaration)#org/eclipse/xtend/lib/annotations/DelegateProcessor$Util/getImplementedInterfaces(org.eclipse.xtend.lib.macro.declaration.TypeReference)
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/areListedInterfacesValid(org.eclipse.xtend.lib.macro.declaration.MemberDeclaration)#org/eclipse/xtend/lib/annotations/DelegateProcessor$Util/listedInterfaces(org.eclipse.xtend.lib.macro.declaration.MemberDeclaration)
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/areListedInterfacesValid(org.eclipse.xtend.lib.macro.declaration.MemberDeclaration)#org/eclipse/xtend/lib/annotations/DelegateProcessor$Util$4/4(org.eclipse.xtend.lib.annotations.DelegateProcessor$Util,org.eclipse.xtend.lib.macro.declaration.TypeReference)
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/areListedInterfacesValid(org.eclipse.xtend.lib.macro.declaration.MemberDeclaration)#java/util/Set/iterator()
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/areListedInterfacesValid(org.eclipse.xtend.lib.macro.declaration.MemberDeclaration)#org/eclipse/xtend/lib/annotations/DelegateProcessor$Util/getType(org.eclipse.xtend.lib.macro.declaration.MemberDeclaration)
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/areListedInterfacesValid(org.eclipse.xtend.lib.macro.declaration.MemberDeclaration)#org/eclipse/xtend/lib/macro/declaration/MemberDeclaration/getDeclaringType()
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/_delegateAccess(org.eclipse.xtend.lib.macro.declaration.MethodDeclaration,org.eclipse.xtend.lib.macro.declaration.MethodDeclaration)#org/eclipse/xtend/lib/macro/declaration/MethodDeclaration/getParameters()
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/_delegateAccess(org.eclipse.xtend.lib.macro.declaration.MethodDeclaration,org.eclipse.xtend.lib.macro.declaration.MethodDeclaration)#com/google/common/base/Objects/equal(java.lang.Object,java.lang.Object)
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/_delegateAccess(org.eclipse.xtend.lib.macro.declaration.MethodDeclaration,org.eclipse.xtend.lib.macro.declaration.MethodDeclaration)#org/eclipse/xtext/xbase/lib/IterableExtensions/toList(java.lang.Iterable)
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/_delegateAccess(org.eclipse.xtend.lib.macro.declaration.MethodDeclaration,org.eclipse.xtend.lib.macro.declaration.MethodDeclaration)#org/eclipse/xtend2/lib/StringConcatenation/StringConcatenation()
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/_delegateAccess(org.eclipse.xtend.lib.macro.declaration.MethodDeclaration,org.eclipse.xtend.lib.macro.declaration.MethodDeclaration)#org/eclipse/xtend/lib/macro/declaration/MethodDeclaration/getSimpleName()
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/_delegateAccess(org.eclipse.xtend.lib.macro.declaration.MethodDeclaration,org.eclipse.xtend.lib.macro.declaration.MethodDeclaration)#org/eclipse/xtend/lib/macro/TransformationContext/newTypeReference(java.lang.Class,org.eclipse.xtend.lib.macro.declaration.TypeReference[])
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/_delegateAccess(org.eclipse.xtend.lib.macro.declaration.MethodDeclaration,org.eclipse.xtend.lib.macro.declaration.MethodDeclaration)#org/eclipse/xtend/lib/macro/TransformationContext/getString()
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/_delegateAccess(org.eclipse.xtend.lib.macro.declaration.MethodDeclaration,org.eclipse.xtend.lib.macro.declaration.MethodDeclaration)#org/eclipse/xtend/lib/macro/TransformationContext/newWildcardTypeReference()
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/_delegateAccess(org.eclipse.xtend.lib.macro.declaration.MethodDeclaration,org.eclipse.xtend.lib.macro.declaration.MethodDeclaration)#org/eclipse/xtend/lib/annotations/DelegateProcessor$Util$18/18(org.eclipse.xtend.lib.annotations.DelegateProcessor$Util)
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/_delegateAccess(org.eclipse.xtend.lib.macro.declaration.MethodDeclaration,org.eclipse.xtend.lib.macro.declaration.MethodDeclaration)#org/eclipse/xtend/lib/annotations/DelegateProcessor$Util$19/19(org.eclipse.xtend.lib.annotations.DelegateProcessor$Util)
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/_delegateAccess(org.eclipse.xtend.lib.macro.declaration.MethodDeclaration,org.eclipse.xtend.lib.macro.declaration.MethodDeclaration)#org/eclipse/xtend/lib/annotations/DelegateProcessor$Util$20/20(org.eclipse.xtend.lib.annotations.DelegateProcessor$Util)
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/_delegateAccess(org.eclipse.xtend.lib.macro.declaration.MethodDeclaration,org.eclipse.xtend.lib.macro.declaration.MethodDeclaration)#java/util/Collections/unmodifiableList(java.util.List)
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/_delegateAccess(org.eclipse.xtend.lib.macro.declaration.MethodDeclaration,org.eclipse.xtend.lib.macro.declaration.MethodDeclaration)#org/eclipse/xtend2/lib/StringConcatenation/append(java.lang.Object,java.lang.String)
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/_delegateAccess(org.eclipse.xtend.lib.macro.declaration.MethodDeclaration,org.eclipse.xtend.lib.macro.declaration.MethodDeclaration)#org/eclipse/xtext/xbase/lib/IterableExtensions/join(java.lang.Iterable,java.lang.CharSequence,org.eclipse.xtext.xbase.lib.Functions$Function1)
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/_delegateAccess(org.eclipse.xtend.lib.macro.declaration.MethodDeclaration,org.eclipse.xtend.lib.macro.declaration.MethodDeclaration)#org/eclipse/xtend/lib/macro/TransformationContext/getObject()
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/_delegateAccess(org.eclipse.xtend.lib.macro.declaration.MethodDeclaration,org.eclipse.xtend.lib.macro.declaration.MethodDeclaration)#org/eclipse/xtext/xbase/lib/IterableExtensions/map(java.lang.Iterable,org.eclipse.xtext.xbase.lib.Functions$Function1)
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/_delegateAccess(org.eclipse.xtend.lib.macro.declaration.MethodDeclaration,org.eclipse.xtend.lib.macro.declaration.MethodDeclaration)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/_delegateAccess(org.eclipse.xtend.lib.macro.declaration.MethodDeclaration,org.eclipse.xtend.lib.macro.declaration.MethodDeclaration)#org/eclipse/xtend/lib/macro/TransformationContext/newArrayTypeReference(org.eclipse.xtend.lib.macro.declaration.TypeReference)
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/_delegateAccess(org.eclipse.xtend.lib.macro.declaration.MethodDeclaration,org.eclipse.xtend.lib.macro.declaration.MethodDeclaration)#org/eclipse/xtext/xbase/lib/CollectionLiterals/newArrayList(java.lang.Object[])
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/_delegateAccess(org.eclipse.xtend.lib.macro.declaration.MethodDeclaration,org.eclipse.xtend.lib.macro.declaration.MethodDeclaration)#org/eclipse/xtend2/lib/StringConcatenation/append(java.lang.Object)
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/hasValidSignature(org.eclipse.xtend.lib.macro.declaration.MethodDeclaration)#org/eclipse/xtend/lib/macro/declaration/MethodDeclaration/getParameters()
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/hasValidSignature(org.eclipse.xtend.lib.macro.declaration.MethodDeclaration)#org/eclipse/xtend/lib/macro/TransformationContext/addError(org.eclipse.xtend.lib.macro.declaration.Element,java.lang.String)
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/hasValidSignature(org.eclipse.xtend.lib.macro.declaration.MethodDeclaration)#com/google/common/base/Objects/equal(java.lang.Object,java.lang.Object)
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/hasValidSignature(org.eclipse.xtend.lib.macro.declaration.MethodDeclaration)#org/eclipse/xtext/xbase/lib/IterableExtensions/toList(java.lang.Iterable)
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/hasValidSignature(org.eclipse.xtend.lib.macro.declaration.MethodDeclaration)#java/util/Collections/unmodifiableList(java.util.List)
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/hasValidSignature(org.eclipse.xtend.lib.macro.declaration.MethodDeclaration)#org/eclipse/xtend/lib/annotations/DelegateProcessor$Util$1/1(org.eclipse.xtend.lib.annotations.DelegateProcessor$Util)
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/hasValidSignature(org.eclipse.xtend.lib.macro.declaration.MethodDeclaration)#org/eclipse/xtend/lib/macro/TransformationContext/newTypeReference(java.lang.Class,org.eclipse.xtend.lib.macro.declaration.TypeReference[])
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/hasValidSignature(org.eclipse.xtend.lib.macro.declaration.MethodDeclaration)#org/eclipse/xtend/lib/macro/TransformationContext/newArrayTypeReference(org.eclipse.xtend.lib.macro.declaration.TypeReference)
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/hasValidSignature(org.eclipse.xtend.lib.macro.declaration.MethodDeclaration)#org/eclipse/xtext/xbase/lib/CollectionLiterals/newArrayList(java.lang.Object[])
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/hasValidSignature(org.eclipse.xtend.lib.macro.declaration.MethodDeclaration)#org/eclipse/xtend/lib/macro/TransformationContext/getString()
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/hasValidSignature(org.eclipse.xtend.lib.macro.declaration.MethodDeclaration)#org/eclipse/xtend/lib/macro/TransformationContext/newWildcardTypeReference()
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/hasValidSignature(org.eclipse.xtend.lib.macro.declaration.MethodDeclaration)#org/eclipse/xtend/lib/macro/TransformationContext/getObject()
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/hasValidSignature(org.eclipse.xtend.lib.macro.declaration.MethodDeclaration)#org/eclipse/xtext/xbase/lib/IterableExtensions/map(java.lang.Iterable,org.eclipse.xtext.xbase.lib.Functions$Function1)
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/getMethodsToImplement(org.eclipse.xtend.lib.macro.declaration.MemberDeclaration)#org/eclipse/xtend/lib/annotations/DelegateProcessor$Util$9/9(org.eclipse.xtend.lib.annotations.DelegateProcessor$Util)
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/getMethodsToImplement(org.eclipse.xtend.lib.macro.declaration.MemberDeclaration)#org/eclipse/xtend/lib/annotations/DelegateProcessor$Util/getDelegatedInterfaces(org.eclipse.xtend.lib.macro.declaration.MemberDeclaration)
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/getMethodsToImplement(org.eclipse.xtend.lib.macro.declaration.MemberDeclaration)#org/eclipse/xtext/xbase/lib/IterableExtensions/filter(java.lang.Iterable,org.eclipse.xtext.xbase.lib.Functions$Function1)
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/getMethodsToImplement(org.eclipse.xtend.lib.macro.declaration.MemberDeclaration)#java/util/Map/values()
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/getMethodsToImplement(org.eclipse.xtend.lib.macro.declaration.MemberDeclaration)#org/eclipse/xtext/xbase/lib/IterableExtensions/groupBy(java.lang.Iterable,org.eclipse.xtext.xbase.lib.Functions$Function1)
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/getMethodsToImplement(org.eclipse.xtend.lib.macro.declaration.MemberDeclaration)#com/google/common/collect/Iterables/concat(java.lang.Iterable)
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/getMethodsToImplement(org.eclipse.xtend.lib.macro.declaration.MemberDeclaration)#org/eclipse/xtext/xbase/lib/IterableExtensions/map(java.lang.Iterable,org.eclipse.xtext.xbase.lib.Functions$Function1)
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/getMethodsToImplement(org.eclipse.xtend.lib.macro.declaration.MemberDeclaration)#org/eclipse/xtend/lib/annotations/DelegateProcessor$Util$10/10(org.eclipse.xtend.lib.annotations.DelegateProcessor$Util,org.eclipse.xtend.lib.macro.declaration.MemberDeclaration)
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/getMethodsToImplement(org.eclipse.xtend.lib.macro.declaration.MemberDeclaration)#org/eclipse/xtext/xbase/lib/IterableExtensions/toSet(java.lang.Iterable)
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/getMethodsToImplement(org.eclipse.xtend.lib.macro.declaration.MemberDeclaration)#org/eclipse/xtend/lib/annotations/DelegateProcessor$Util$11/11(org.eclipse.xtend.lib.annotations.DelegateProcessor$Util)
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/getMethodsToImplement(org.eclipse.xtend.lib.macro.declaration.MemberDeclaration)#org/eclipse/xtend/lib/annotations/DelegateProcessor$Util$12/12(org.eclipse.xtend.lib.annotations.DelegateProcessor$Util)
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/getMethodsToImplement(org.eclipse.xtend.lib.macro.declaration.MemberDeclaration)#org/eclipse/xtend/lib/annotations/DelegateProcessor$Util$13/13(org.eclipse.xtend.lib.annotations.DelegateProcessor$Util)
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/hasDelegationConflicts(org.eclipse.xtend.lib.macro.declaration.MemberDeclaration)#org/eclipse/xtend2/lib/StringConcatenation/toString()
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/hasDelegationConflicts(org.eclipse.xtend.lib.macro.declaration.MemberDeclaration)#org/eclipse/xtend/lib/annotations/DelegateProcessor$Util/getDelegatedInterfaces(org.eclipse.xtend.lib.macro.declaration.MemberDeclaration)
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/hasDelegationConflicts(org.eclipse.xtend.lib.macro.declaration.MemberDeclaration)#org/eclipse/xtend/lib/macro/declaration/TypeReference/getSimpleName()
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/hasDelegationConflicts(org.eclipse.xtend.lib.macro.declaration.MemberDeclaration)#java/util/Iterator/next()
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/hasDelegationConflicts(org.eclipse.xtend.lib.macro.declaration.MemberDeclaration)#java/util/Set/iterator()
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/hasDelegationConflicts(org.eclipse.xtend.lib.macro.declaration.MemberDeclaration)#org/eclipse/xtend2/lib/StringConcatenation/append(java.lang.Object,java.lang.String)
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/hasDelegationConflicts(org.eclipse.xtend.lib.macro.declaration.MemberDeclaration)#org/eclipse/xtend/lib/macro/declaration/MemberDeclaration/getSimpleName()
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/hasDelegationConflicts(org.eclipse.xtend.lib.macro.declaration.MemberDeclaration)#org/eclipse/xtend2/lib/StringConcatenation/append(java.lang.Object)
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/hasDelegationConflicts(org.eclipse.xtend.lib.macro.declaration.MemberDeclaration)#org/eclipse/xtend/lib/macro/TransformationContext/addError(org.eclipse.xtend.lib.macro.declaration.Element,java.lang.String)
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/hasDelegationConflicts(org.eclipse.xtend.lib.macro.declaration.MemberDeclaration)#java/util/Iterator/hasNext()
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/hasDelegationConflicts(org.eclipse.xtend.lib.macro.declaration.MemberDeclaration)#org/eclipse/xtend2/lib/StringConcatenation/StringConcatenation()
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/hasDelegationConflicts(org.eclipse.xtend.lib.macro.declaration.MemberDeclaration)#org/eclipse/xtend/lib/annotations/DelegateProcessor$Util/otherDelegates(org.eclipse.xtend.lib.macro.declaration.MemberDeclaration)
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/hasDelegationConflicts(org.eclipse.xtend.lib.macro.declaration.MemberDeclaration)#java/lang/Iterable/iterator()
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/hasDelegationConflicts(org.eclipse.xtend.lib.macro.declaration.MemberDeclaration)#java/util/Set/contains(java.lang.Object)
org/eclipse/xtend/lib/DataProcessor/doTransform(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration,org.eclipse.xtend.lib.macro.TransformationContext)#org/eclipse/xtend/lib/annotations/EqualsHashCodeProcessor$Util/hasSuperHashCode(org.eclipse.xtend.lib.macro.declaration.ClassDeclaration)
org/eclipse/xtend/lib/DataProcessor/doTransform(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration,org.eclipse.xtend.lib.macro.TransformationContext)#org/eclipse/xtend/lib/annotations/EqualsHashCodeProcessor$Util/hasSuperEquals(org.eclipse.xtend.lib.macro.declaration.ClassDeclaration)
org/eclipse/xtend/lib/DataProcessor/doTransform(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration,org.eclipse.xtend.lib.macro.TransformationContext)#org/eclipse/xtend/lib/annotations/EqualsHashCodeProcessor$Util/hasEquals(org.eclipse.xtend.lib.macro.declaration.ClassDeclaration)
org/eclipse/xtend/lib/DataProcessor/doTransform(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration,org.eclipse.xtend.lib.macro.TransformationContext)#org/eclipse/xtend/lib/annotations/EqualsHashCodeProcessor$Util/Util(org.eclipse.xtend.lib.macro.TransformationContext)
org/eclipse/xtend/lib/DataProcessor/doTransform(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration,org.eclipse.xtend.lib.macro.TransformationContext)#org/eclipse/xtend/lib/annotations/EqualsHashCodeProcessor$Util/addEquals(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration,java.lang.Iterable,boolean)
org/eclipse/xtend/lib/DataProcessor/doTransform(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration,org.eclipse.xtend.lib.macro.TransformationContext)#org/eclipse/xtend/lib/DataProcessor$Util/getDataFields(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration)
org/eclipse/xtend/lib/DataProcessor/doTransform(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration,org.eclipse.xtend.lib.macro.TransformationContext)#org/eclipse/xtext/xbase/lib/IterableExtensions/forEach(java.lang.Iterable,org.eclipse.xtext.xbase.lib.Procedures$Procedure1)
org/eclipse/xtend/lib/DataProcessor/doTransform(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration,org.eclipse.xtend.lib.macro.TransformationContext)#org/eclipse/xtend/lib/annotations/FinalFieldsConstructorProcessor$Util/Util(org.eclipse.xtend.lib.macro.TransformationContext)
org/eclipse/xtend/lib/DataProcessor/doTransform(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration,org.eclipse.xtend.lib.macro.TransformationContext)#org/eclipse/xtend/lib/annotations/ToStringProcessor$Util/Util(org.eclipse.xtend.lib.macro.TransformationContext)
org/eclipse/xtend/lib/DataProcessor/doTransform(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration,org.eclipse.xtend.lib.macro.TransformationContext)#org/eclipse/xtend/lib/DataProcessor$2/2(org.eclipse.xtend.lib.DataProcessor,org.eclipse.xtend.lib.annotations.AccessorsProcessor$Util)
org/eclipse/xtend/lib/DataProcessor/doTransform(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration,org.eclipse.xtend.lib.macro.TransformationContext)#org/eclipse/xtend/lib/annotations/EqualsHashCodeProcessor$Util/hasHashCode(org.eclipse.xtend.lib.macro.declaration.ClassDeclaration)
org/eclipse/xtend/lib/DataProcessor/doTransform(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration,org.eclipse.xtend.lib.macro.TransformationContext)#org/eclipse/xtend/lib/DataProcessor$1/1(org.eclipse.xtend.lib.DataProcessor)
org/eclipse/xtend/lib/DataProcessor/doTransform(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration,org.eclipse.xtend.lib.macro.TransformationContext)#org/eclipse/xtend/lib/annotations/EqualsHashCodeProcessor$Util/addHashCode(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration,java.lang.Iterable,boolean)
org/eclipse/xtend/lib/DataProcessor/doTransform(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration,org.eclipse.xtend.lib.macro.TransformationContext)#org/eclipse/xtend/lib/annotations/ToStringProcessor$Util/hasToString(org.eclipse.xtend.lib.macro.declaration.ClassDeclaration)
org/eclipse/xtend/lib/DataProcessor/doTransform(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration,org.eclipse.xtend.lib.macro.TransformationContext)#org/eclipse/xtend/lib/annotations/AccessorsProcessor$Util/Util(org.eclipse.xtend.lib.macro.TransformationContext)
org/eclipse/xtend/lib/DataProcessor/doTransform(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration,org.eclipse.xtend.lib.macro.TransformationContext)#org/eclipse/xtend/lib/annotations/FinalFieldsConstructorProcessor$Util/addFinalFieldsConstructor(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration)
org/eclipse/xtend/lib/DataProcessor/doTransform(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration,org.eclipse.xtend.lib.macro.TransformationContext)#org/eclipse/xtend/lib/DataProcessor$Util/Util(org.eclipse.xtend.lib.macro.TransformationContext)
org/eclipse/xtend/lib/DataProcessor/doTransform(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration,org.eclipse.xtend.lib.macro.TransformationContext)#org/eclipse/xtend/lib/annotations/FinalFieldsConstructorProcessor$Util/needsFinalFieldConstructor(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration)
org/eclipse/xtend/lib/DataProcessor/doTransform(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration,org.eclipse.xtend.lib.macro.TransformationContext)#org/eclipse/xtend/lib/DataProcessor$Util/addDataToString(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration)
org/eclipse/xtend/lib/annotations/AccessorsProcessor/Util/8/apply(org.eclipse.xtend.lib.macro.declaration.MutableMethodDeclaration)#org/eclipse/xtend/lib/macro/declaration/MutableFieldDeclaration/getSimpleName()
org/eclipse/xtend/lib/annotations/AccessorsProcessor/Util/8/apply(org.eclipse.xtend.lib.macro.declaration.MutableMethodDeclaration)#org/eclipse/xtend/lib/macro/declaration/MutableMethodDeclaration/setReturnType(org.eclipse.xtend.lib.macro.declaration.TypeReference)
org/eclipse/xtend/lib/annotations/AccessorsProcessor/Util/8/apply(org.eclipse.xtend.lib.macro.declaration.MutableMethodDeclaration)#org/eclipse/xtend/lib/macro/declaration/MutableMethodDeclaration/setVisibility(org.eclipse.xtend.lib.macro.declaration.Visibility)
org/eclipse/xtend/lib/annotations/AccessorsProcessor/Util/8/apply(org.eclipse.xtend.lib.macro.declaration.MutableMethodDeclaration)#org/eclipse/xtend/lib/annotations/AccessorsProcessor$Util/access$1(org.eclipse.xtend.lib.annotations.AccessorsProcessor$Util)
org/eclipse/xtend/lib/annotations/AccessorsProcessor/Util/8/apply(org.eclipse.xtend.lib.macro.declaration.MutableMethodDeclaration)#org/eclipse/xtend/lib/macro/declaration/MutableMethodDeclaration/setBody(org.eclipse.xtend2.lib.StringConcatenationClient)
org/eclipse/xtend/lib/annotations/AccessorsProcessor/Util/8/apply(org.eclipse.xtend.lib.macro.declaration.MutableMethodDeclaration)#org/eclipse/xtend/lib/macro/declaration/MutableMethodDeclaration/setStatic(boolean)
org/eclipse/xtend/lib/annotations/AccessorsProcessor/Util/8/apply(org.eclipse.xtend.lib.macro.declaration.MutableMethodDeclaration)#org/eclipse/xtend/lib/macro/declaration/MutableMethodDeclaration/addParameter(java.lang.String,org.eclipse.xtend.lib.macro.declaration.TypeReference)
org/eclipse/xtend/lib/annotations/AccessorsProcessor/Util/8/apply(org.eclipse.xtend.lib.macro.declaration.MutableMethodDeclaration)#org/eclipse/xtend/lib/macro/TransformationContext/getPrimarySourceElement(org.eclipse.xtend.lib.macro.declaration.Element)
org/eclipse/xtend/lib/annotations/AccessorsProcessor/Util/8/apply(org.eclipse.xtend.lib.macro.declaration.MutableMethodDeclaration)#org/eclipse/xtend/lib/macro/TransformationContext/getPrimitiveVoid()
org/eclipse/xtend/lib/annotations/AccessorsProcessor/Util/8/apply(org.eclipse.xtend.lib.macro.declaration.MutableMethodDeclaration)#org/eclipse/xtend/lib/macro/declaration/MutableFieldDeclaration/isStatic()
org/eclipse/xtend/lib/annotations/AccessorsProcessor/Util/8/apply(org.eclipse.xtend.lib.macro.declaration.MutableMethodDeclaration)#org/eclipse/xtend/lib/annotations/AccessorsProcessor$Util/access$2(org.eclipse.xtend.lib.annotations.AccessorsProcessor$Util,org.eclipse.xtend.lib.macro.declaration.TypeReference)
org/eclipse/xtend/lib/annotations/AccessorsProcessor/Util/8/apply(org.eclipse.xtend.lib.macro.declaration.MutableMethodDeclaration)#org/eclipse/xtend/lib/annotations/AccessorsProcessor$Util$8$1/1(org.eclipse.xtend.lib.annotations.AccessorsProcessor$Util$8,org.eclipse.xtend.lib.macro.declaration.MutableFieldDeclaration,org.eclipse.xtend.lib.macro.declaration.MutableParameterDeclaration)
org/eclipse/xtend/lib/annotations/AccessorsProcessor/Util/8/apply(org.eclipse.xtend.lib.macro.declaration.MutableMethodDeclaration)#org/eclipse/xtend/lib/macro/declaration/MutableFieldDeclaration/getType()
org/eclipse/xtend/lib/annotations/AccessorsProcessor/Util/8/apply(org.eclipse.xtend.lib.macro.declaration.MutableMethodDeclaration)#org/eclipse/xtend/lib/macro/TransformationContext/setPrimarySourceElement(org.eclipse.xtend.lib.macro.declaration.MutableElement,org.eclipse.xtend.lib.macro.declaration.Element)
org/eclipse/xtend/lib/annotations/AccessorsProcessor/_transform(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration,org.eclipse.xtend.lib.macro.TransformationContext)#org/eclipse/xtend/lib/annotations/AccessorsProcessor$2/2(org.eclipse.xtend.lib.annotations.AccessorsProcessor,org.eclipse.xtend.lib.macro.TransformationContext)
org/eclipse/xtend/lib/annotations/AccessorsProcessor/_transform(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration,org.eclipse.xtend.lib.macro.TransformationContext)#org/eclipse/xtend/lib/annotations/AccessorsProcessor$3/3(org.eclipse.xtend.lib.annotations.AccessorsProcessor,org.eclipse.xtend.lib.macro.TransformationContext)
org/eclipse/xtend/lib/annotations/AccessorsProcessor/_transform(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration,org.eclipse.xtend.lib.macro.TransformationContext)#org/eclipse/xtend/lib/macro/TransformationContext/findTypeGlobally(java.lang.Class)
org/eclipse/xtend/lib/annotations/AccessorsProcessor/_transform(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration,org.eclipse.xtend.lib.macro.TransformationContext)#org/eclipse/xtext/xbase/lib/IterableExtensions/filter(java.lang.Iterable,org.eclipse.xtext.xbase.lib.Functions$Function1)
org/eclipse/xtend/lib/annotations/AccessorsProcessor/_transform(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration,org.eclipse.xtend.lib.macro.TransformationContext)#org/eclipse/xtend/lib/annotations/FinalFieldsConstructorProcessor$Util/addFinalFieldsConstructor(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration)
org/eclipse/xtend/lib/annotations/AccessorsProcessor/_transform(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration,org.eclipse.xtend.lib.macro.TransformationContext)#org/eclipse/xtend/lib/annotations/FinalFieldsConstructorProcessor$Util/needsFinalFieldConstructor(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration)
org/eclipse/xtend/lib/annotations/AccessorsProcessor/_transform(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration,org.eclipse.xtend.lib.macro.TransformationContext)#org/eclipse/xtext/xbase/lib/IterableExtensions/forEach(java.lang.Iterable,org.eclipse.xtext.xbase.lib.Procedures$Procedure1)
org/eclipse/xtend/lib/annotations/AccessorsProcessor/_transform(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration,org.eclipse.xtend.lib.macro.TransformationContext)#org/eclipse/xtend/lib/macro/declaration/MutableClassDeclaration/findAnnotation(org.eclipse.xtend.lib.macro.declaration.Type)
org/eclipse/xtend/lib/annotations/AccessorsProcessor/_transform(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration,org.eclipse.xtend.lib.macro.TransformationContext)#org/eclipse/xtend/lib/macro/declaration/MutableClassDeclaration/getDeclaredFields()
org/eclipse/xtend/lib/annotations/AccessorsProcessor/_transform(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration,org.eclipse.xtend.lib.macro.TransformationContext)#org/eclipse/xtend/lib/annotations/FinalFieldsConstructorProcessor$Util/Util(org.eclipse.xtend.lib.macro.TransformationContext)
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/15/4/appendTo(org.eclipse.xtend2.lib.StringConcatenationClient$TargetStringConcatenation)#org/eclipse/xtend/lib/annotations/DelegateProcessor$Util/returnIfNeeded(org.eclipse.xtend.lib.macro.declaration.ResolvedMethod)
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/15/4/appendTo(org.eclipse.xtend2.lib.StringConcatenationClient$TargetStringConcatenation)#org/eclipse/xtend/lib/annotations/DelegateProcessor$Util$15$4$1/1(org.eclipse.xtend.lib.annotations.DelegateProcessor$Util$15$4)
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/15/4/appendTo(org.eclipse.xtend2.lib.StringConcatenationClient$TargetStringConcatenation)#org/eclipse/xtext/xbase/lib/IterableExtensions/join(java.lang.Iterable,java.lang.CharSequence,org.eclipse.xtext.xbase.lib.Functions$Function1)
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/15/4/appendTo(org.eclipse.xtend2.lib.StringConcatenationClient$TargetStringConcatenation)#org/eclipse/xtend2/lib/StringConcatenationClient$TargetStringConcatenation/append(java.lang.Object)
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/15/4/appendTo(org.eclipse.xtend2.lib.StringConcatenationClient$TargetStringConcatenation)#org/eclipse/xtend/lib/macro/declaration/MethodDeclaration/getParameters()
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/15/4/appendTo(org.eclipse.xtend2.lib.StringConcatenationClient$TargetStringConcatenation)#org/eclipse/xtend/lib/annotations/DelegateProcessor$Util$15/access$1(org.eclipse.xtend.lib.annotations.DelegateProcessor$Util$15)
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/15/4/appendTo(org.eclipse.xtend2.lib.StringConcatenationClient$TargetStringConcatenation)#org/eclipse/xtend2/lib/StringConcatenationClient$TargetStringConcatenation/newLineIfNotEmpty()
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/15/4/appendTo(org.eclipse.xtend2.lib.StringConcatenationClient$TargetStringConcatenation)#org/eclipse/xtend/lib/annotations/DelegateProcessor$Util/delegateAccess(org.eclipse.xtend.lib.macro.declaration.MemberDeclaration,org.eclipse.xtend.lib.macro.declaration.MethodDeclaration)
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/15/4/appendTo(org.eclipse.xtend2.lib.StringConcatenationClient$TargetStringConcatenation)#org/eclipse/xtend2/lib/StringConcatenationClient$TargetStringConcatenation/append(java.lang.Object,java.lang.String)
org/eclipse/xtend/lib/annotations/DelegateProcessor/Util/15/4/appendTo(org.eclipse.xtend2.lib.StringConcatenationClient$TargetStringConcatenation)#org/eclipse/xtend/lib/macro/declaration/MethodDeclaration/getSimpleName()
org/eclipse/xtend/lib/annotations/EqualsHashCodeProcessor/Util/11/apply(org.eclipse.xtend.lib.macro.declaration.MutableMethodDeclaration)#org/eclipse/xtend/lib/macro/TransformationContext/getPrimitiveInt()
org/eclipse/xtend/lib/annotations/EqualsHashCodeProcessor/Util/11/apply(org.eclipse.xtend.lib.macro.declaration.MutableMethodDeclaration)#org/eclipse/xtend/lib/macro/declaration/MutableMethodDeclaration/setReturnType(org.eclipse.xtend.lib.macro.declaration.TypeReference)
org/eclipse/xtend/lib/annotations/EqualsHashCodeProcessor/Util/11/apply(org.eclipse.xtend.lib.macro.declaration.MutableMethodDeclaration)#org/eclipse/xtend/lib/macro/declaration/MutableMethodDeclaration/setBody(org.eclipse.xtend2.lib.StringConcatenationClient)
org/eclipse/xtend/lib/annotations/EqualsHashCodeProcessor/Util/11/apply(org.eclipse.xtend.lib.macro.declaration.MutableMethodDeclaration)#org/eclipse/xtend/lib/macro/TransformationContext/getPrimarySourceElement(org.eclipse.xtend.lib.macro.declaration.Element)
org/eclipse/xtend/lib/annotations/EqualsHashCodeProcessor/Util/11/apply(org.eclipse.xtend.lib.macro.declaration.MutableMethodDeclaration)#org/eclipse/xtend/lib/macro/TransformationContext/newAnnotationReference(java.lang.Class)
org/eclipse/xtend/lib/annotations/EqualsHashCodeProcessor/Util/11/apply(org.eclipse.xtend.lib.macro.declaration.MutableMethodDeclaration)#org/eclipse/xtend/lib/annotations/EqualsHashCodeProcessor$Util/access$0(org.eclipse.xtend.lib.annotations.EqualsHashCodeProcessor$Util)
org/eclipse/xtend/lib/annotations/EqualsHashCodeProcessor/Util/11/apply(org.eclipse.xtend.lib.macro.declaration.MutableMethodDeclaration)#org/eclipse/xtend/lib/macro/declaration/MutableMethodDeclaration/addAnnotation(org.eclipse.xtend.lib.macro.declaration.AnnotationReference)
org/eclipse/xtend/lib/annotations/EqualsHashCodeProcessor/Util/11/apply(org.eclipse.xtend.lib.macro.declaration.MutableMethodDeclaration)#org/eclipse/xtend/lib/annotations/EqualsHashCodeProcessor$Util$11$1/1(org.eclipse.xtend.lib.annotations.EqualsHashCodeProcessor$Util$11,boolean,java.lang.Iterable)
org/eclipse/xtend/lib/annotations/EqualsHashCodeProcessor/Util/11/apply(org.eclipse.xtend.lib.macro.declaration.MutableMethodDeclaration)#org/eclipse/xtend/lib/macro/TransformationContext/setPrimarySourceElement(org.eclipse.xtend.lib.macro.declaration.MutableElement,org.eclipse.xtend.lib.macro.declaration.Element)
