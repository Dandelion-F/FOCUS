org/apache/commons/codec/digest/Md5Crypt/md5Crypt(byte[],java.lang.String,java.lang.String)#java/util/regex/Pattern/compile(java.lang.String)
org/apache/commons/codec/digest/Md5Crypt/md5Crypt(byte[],java.lang.String,java.lang.String)#java/security/MessageDigest/digest()
org/apache/commons/codec/digest/Md5Crypt/md5Crypt(byte[],java.lang.String,java.lang.String)#java/security/MessageDigest/reset()
org/apache/commons/codec/digest/Md5Crypt/md5Crypt(byte[],java.lang.String,java.lang.String)#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/apache/commons/codec/digest/Md5Crypt/md5Crypt(byte[],java.lang.String,java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/apache/commons/codec/digest/Md5Crypt/md5Crypt(byte[],java.lang.String,java.lang.String)#java/lang/String/replace(java.lang.CharSequence,java.lang.CharSequence)
org/apache/commons/codec/digest/Md5Crypt/md5Crypt(byte[],java.lang.String,java.lang.String)#java/lang/String/getBytes(java.nio.charset.Charset)
org/apache/commons/codec/digest/Md5Crypt/md5Crypt(byte[],java.lang.String,java.lang.String)#java/util/regex/Matcher/find()
org/apache/commons/codec/digest/Md5Crypt/md5Crypt(byte[],java.lang.String,java.lang.String)#java/util/regex/Pattern/matcher(java.lang.CharSequence)
org/apache/commons/codec/digest/Md5Crypt/md5Crypt(byte[],java.lang.String,java.lang.String)#java/util/regex/Matcher/group(int)
org/apache/commons/codec/digest/Md5Crypt/md5Crypt(byte[],java.lang.String,java.lang.String)#java/security/MessageDigest/update(byte)
org/apache/commons/codec/digest/Md5Crypt/md5Crypt(byte[],java.lang.String,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/apache/commons/codec/digest/Md5Crypt/md5Crypt(byte[],java.lang.String,java.lang.String)#java/util/Arrays/fill(byte[],byte)
org/apache/commons/codec/digest/Md5Crypt/md5Crypt(byte[],java.lang.String,java.lang.String)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/commons/codec/digest/Md5Crypt/md5Crypt(byte[],java.lang.String,java.lang.String)#java/security/MessageDigest/update(byte[],int,int)
org/apache/commons/codec/digest/Md5Crypt/md5Crypt(byte[],java.lang.String,java.lang.String)#java/lang/StringBuilder/toString()
org/apache/commons/codec/digest/Md5Crypt/md5Crypt(byte[],java.lang.String,java.lang.String)#java/security/MessageDigest/update(byte[])
org/apache/commons/codec/language/bm/PhoneticEngine/encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)#java/util/ArrayList/ArrayList()
org/apache/commons/codec/language/bm/PhoneticEngine/encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)#java/lang/String/split(java.lang.String)
org/apache/commons/codec/language/bm/PhoneticEngine/encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)#org/apache/commons/codec/language/bm/PhoneticEngine$RulesApplication/invoke()
org/apache/commons/codec/language/bm/PhoneticEngine/encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)#java/util/List/addAll(java.util.Collection)
org/apache/commons/codec/language/bm/PhoneticEngine/encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)#java/util/Iterator/next()
org/apache/commons/codec/language/bm/PhoneticEngine/encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)#java/lang/String/equals(java.lang.Object)
org/apache/commons/codec/language/bm/PhoneticEngine/encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)#java/lang/String/substring(int,int)
org/apache/commons/codec/language/bm/PhoneticEngine/encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)#java/util/List/add(java.lang.Object)
org/apache/commons/codec/language/bm/PhoneticEngine/encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)#java/lang/String/startsWith(java.lang.String)
org/apache/commons/codec/language/bm/PhoneticEngine/encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/commons/codec/language/bm/PhoneticEngine/encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)#java/lang/StringBuilder/toString()
org/apache/commons/codec/language/bm/PhoneticEngine/encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/apache/commons/codec/language/bm/PhoneticEngine/encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)#java/lang/StringBuilder/substring(int)
org/apache/commons/codec/language/bm/PhoneticEngine/encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)#java/util/Iterator/hasNext()
org/apache/commons/codec/language/bm/PhoneticEngine/encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)#org/apache/commons/codec/language/bm/NameType/ordinal()
org/apache/commons/codec/language/bm/PhoneticEngine/encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)#org/apache/commons/codec/language/bm/PhoneticEngine$RulesApplication/getI()
org/apache/commons/codec/language/bm/PhoneticEngine/encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)#java/lang/StringBuilder/append(java.lang.String)
org/apache/commons/codec/language/bm/PhoneticEngine/encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)#java/lang/String/trim()
org/apache/commons/codec/language/bm/PhoneticEngine/encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)#java/util/List/removeAll(java.util.Collection)
org/apache/commons/codec/language/bm/PhoneticEngine/encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)#org/apache/commons/codec/language/bm/PhoneticEngine$PhonemeBuilder/empty(org.apache.commons.codec.language.bm.Languages$LanguageSet)
org/apache/commons/codec/language/bm/PhoneticEngine/encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)#java/lang/String/toLowerCase(java.util.Locale)
org/apache/commons/codec/language/bm/PhoneticEngine/encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)#java/lang/String/length()
org/apache/commons/codec/language/bm/PhoneticEngine/encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)#java/util/Arrays/asList(java.lang.Object[])
org/apache/commons/codec/language/bm/PhoneticEngine/encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)#java/util/Map/get(java.lang.Object)
org/apache/commons/codec/language/bm/PhoneticEngine/encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)#java/util/List/size()
org/apache/commons/codec/language/bm/PhoneticEngine/encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)#org/apache/commons/codec/language/bm/PhoneticEngine$RulesApplication/getPhonemeBuilder()
org/apache/commons/codec/language/bm/PhoneticEngine/encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)#java/lang/StringBuilder/StringBuilder()
org/apache/commons/codec/language/bm/PhoneticEngine/encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)#org/apache/commons/codec/language/bm/PhoneticEngine$RulesApplication/RulesApplication(java.util.Map,java.lang.CharSequence,org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder,int,int)
org/apache/commons/codec/language/bm/PhoneticEngine/encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)#java/util/Set/iterator()
org/apache/commons/codec/language/bm/PhoneticEngine/encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)#java/lang/String/substring(int)
org/apache/commons/codec/language/bm/PhoneticEngine/encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)#java/lang/String/replace(char,char)
org/apache/commons/codec/language/bm/PhoneticEngine/encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)#org/apache/commons/codec/language/bm/PhoneticEngine$PhonemeBuilder/makeString()
org/apache/commons/codec/language/bm/PhoneticEngine/encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)#java/util/List/iterator()
org/apache/commons/codec/language/bm/PhoneticEngine/applyFinalRules(org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder,java.util.Map)#java/lang/String/subSequence(int,int)
org/apache/commons/codec/language/bm/PhoneticEngine/applyFinalRules(org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder,java.util.Map)#org/apache/commons/codec/language/bm/Rule$Phoneme/mergeWithLanguage(org.apache.commons.codec.language.bm.Languages$LanguageSet)
org/apache/commons/codec/language/bm/PhoneticEngine/applyFinalRules(org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder,java.util.Map)#org/apache/commons/codec/language/bm/Rule$Phoneme/getPhonemeText()
org/apache/commons/codec/language/bm/PhoneticEngine/applyFinalRules(org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder,java.util.Map)#org/apache/commons/codec/language/bm/PhoneticEngine$RulesApplication/invoke()
org/apache/commons/codec/language/bm/PhoneticEngine/applyFinalRules(org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder,java.util.Map)#org/apache/commons/codec/language/bm/Rule$Phoneme/getLanguages()
org/apache/commons/codec/language/bm/PhoneticEngine/applyFinalRules(org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder,java.util.Map)#org/apache/commons/codec/language/bm/PhoneticEngine$RulesApplication/getPhonemeBuilder()
org/apache/commons/codec/language/bm/PhoneticEngine/applyFinalRules(org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder,java.util.Map)#org/apache/commons/codec/language/bm/PhoneticEngine$RulesApplication/RulesApplication(java.util.Map,java.lang.CharSequence,org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder,int,int)
org/apache/commons/codec/language/bm/PhoneticEngine/applyFinalRules(org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder,java.util.Map)#java/util/Set/iterator()
org/apache/commons/codec/language/bm/PhoneticEngine/applyFinalRules(org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder,java.util.Map)#java/util/Map/containsKey(java.lang.Object)
org/apache/commons/codec/language/bm/PhoneticEngine/applyFinalRules(org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder,java.util.Map)#java/lang/NullPointerException/NullPointerException(java.lang.String)
org/apache/commons/codec/language/bm/PhoneticEngine/applyFinalRules(org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder,java.util.Map)#java/util/TreeMap/TreeMap(java.util.Comparator)
org/apache/commons/codec/language/bm/PhoneticEngine/applyFinalRules(org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder,java.util.Map)#java/util/Map/remove(java.lang.Object)
org/apache/commons/codec/language/bm/PhoneticEngine/applyFinalRules(org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder,java.util.Map)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/commons/codec/language/bm/PhoneticEngine/applyFinalRules(org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder,java.util.Map)#org/apache/commons/codec/language/bm/PhoneticEngine$PhonemeBuilder/getPhonemes()
org/apache/commons/codec/language/bm/PhoneticEngine/applyFinalRules(org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder,java.util.Map)#org/apache/commons/codec/language/bm/PhoneticEngine$PhonemeBuilder/append(java.lang.CharSequence)
org/apache/commons/codec/language/bm/PhoneticEngine/applyFinalRules(org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder,java.util.Map)#java/util/Iterator/hasNext()
org/apache/commons/codec/language/bm/PhoneticEngine/applyFinalRules(org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder,java.util.Map)#org/apache/commons/codec/language/bm/PhoneticEngine$RulesApplication/getI()
org/apache/commons/codec/language/bm/PhoneticEngine/applyFinalRules(org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder,java.util.Map)#org/apache/commons/codec/language/bm/PhoneticEngine$PhonemeBuilder/empty(org.apache.commons.codec.language.bm.Languages$LanguageSet)
org/apache/commons/codec/language/bm/PhoneticEngine/applyFinalRules(org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder,java.util.Map)#java/lang/String/length()
org/apache/commons/codec/language/bm/PhoneticEngine/applyFinalRules(org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder,java.util.Map)#java/lang/CharSequence/toString()
org/apache/commons/codec/language/bm/PhoneticEngine/applyFinalRules(org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder,java.util.Map)#java/util/Map/isEmpty()
org/apache/commons/codec/language/bm/PhoneticEngine/applyFinalRules(org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder,java.util.Map)#java/util/Iterator/next()
org/apache/commons/codec/language/bm/PhoneticEngine/applyFinalRules(org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder,java.util.Map)#java/util/Map/keySet()
org/apache/commons/codec/language/bm/PhoneticEngine/applyFinalRules(org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder,java.util.Map)#org/apache/commons/codec/language/bm/PhoneticEngine$PhonemeBuilder/PhonemeBuilder(java.util.Set,org.apache.commons.codec.language.bm.PhoneticEngine$1)
org/apache/commons/codec/language/bm/PhoneticEngine/applyFinalRules(org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder,java.util.Map)#org/apache/commons/codec/language/bm/PhoneticEngine$RulesApplication/isFound()
org/apache/commons/codec/language/Metaphone/metaphone(java.lang.String)#java/lang/String/toUpperCase(java.util.Locale)
org/apache/commons/codec/language/Metaphone/metaphone(java.lang.String)#java/lang/StringBuilder/StringBuilder(int)
org/apache/commons/codec/language/Metaphone/metaphone(java.lang.String)#java/lang/StringBuilder/append(char[])
org/apache/commons/codec/language/Metaphone/metaphone(java.lang.String)#java/lang/StringBuilder/append(char)
org/apache/commons/codec/language/Metaphone/metaphone(java.lang.String)#java/lang/String/toCharArray()
org/apache/commons/codec/language/Metaphone/metaphone(java.lang.String)#java/lang/StringBuilder/length()
org/apache/commons/codec/language/Metaphone/metaphone(java.lang.String)#java/lang/String/indexOf(int)
org/apache/commons/codec/language/Metaphone/metaphone(java.lang.String)#java/lang/StringBuilder/toString()
org/apache/commons/codec/language/Metaphone/metaphone(java.lang.String)#java/lang/StringBuilder/setLength(int)
org/apache/commons/codec/language/Metaphone/metaphone(java.lang.String)#java/lang/String/length()
org/apache/commons/codec/language/Metaphone/metaphone(java.lang.String)#java/lang/StringBuilder/append(char[],int,int)
org/apache/commons/codec/language/Metaphone/metaphone(java.lang.String)#java/lang/StringBuilder/setCharAt(int,char)
org/apache/commons/codec/language/Metaphone/metaphone(java.lang.String)#java/lang/StringBuilder/charAt(int)
org/apache/commons/codec/language/Nysiis/nysiis(java.lang.String)#java/lang/String/charAt(int)
org/apache/commons/codec/language/Nysiis/nysiis(java.lang.String)#java/lang/String/length()
org/apache/commons/codec/language/Nysiis/nysiis(java.lang.String)#java/lang/StringBuilder/deleteCharAt(int)
org/apache/commons/codec/language/Nysiis/nysiis(java.lang.String)#java/lang/StringBuilder/StringBuilder(int)
org/apache/commons/codec/language/Nysiis/nysiis(java.lang.String)#java/lang/String/substring(int,int)
org/apache/commons/codec/language/Nysiis/nysiis(java.lang.String)#java/util/regex/Matcher/replaceFirst(java.lang.String)
org/apache/commons/codec/language/Nysiis/nysiis(java.lang.String)#java/lang/StringBuilder/append(char)
org/apache/commons/codec/language/Nysiis/nysiis(java.lang.String)#java/lang/String/toCharArray()
org/apache/commons/codec/language/Nysiis/nysiis(java.lang.String)#java/lang/StringBuilder/length()
org/apache/commons/codec/language/Nysiis/nysiis(java.lang.String)#java/util/regex/Pattern/matcher(java.lang.CharSequence)
org/apache/commons/codec/language/Nysiis/nysiis(java.lang.String)#java/lang/Math/min(int,int)
org/apache/commons/codec/language/Nysiis/nysiis(java.lang.String)#java/lang/System/arraycopy(java.lang.Object,int,java.lang.Object,int,int)
org/apache/commons/codec/language/Nysiis/nysiis(java.lang.String)#java/lang/StringBuilder/charAt(int)
org/apache/commons/codec/language/Nysiis/nysiis(java.lang.String)#java/lang/StringBuilder/toString()
org/apache/commons/codec/net/RFC1522Codec/decodeText(java.lang.String)#java/lang/String/equalsIgnoreCase(java.lang.String)
org/apache/commons/codec/net/RFC1522Codec/decodeText(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/apache/commons/codec/net/RFC1522Codec/decodeText(java.lang.String)#java/lang/String/length()
org/apache/commons/codec/net/RFC1522Codec/decodeText(java.lang.String)#java/lang/String/String(byte[],java.lang.String)
org/apache/commons/codec/net/RFC1522Codec/decodeText(java.lang.String)#java/lang/String/equals(java.lang.Object)
org/apache/commons/codec/net/RFC1522Codec/decodeText(java.lang.String)#java/lang/String/substring(int,int)
org/apache/commons/codec/net/RFC1522Codec/decodeText(java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/apache/commons/codec/net/RFC1522Codec/decodeText(java.lang.String)#java/lang/String/startsWith(java.lang.String)
org/apache/commons/codec/net/RFC1522Codec/decodeText(java.lang.String)#java/lang/String/indexOf(int,int)
org/apache/commons/codec/net/RFC1522Codec/decodeText(java.lang.String)#java/lang/StringBuilder/toString()
org/apache/commons/codec/net/RFC1522Codec/decodeText(java.lang.String)#java/lang/String/endsWith(java.lang.String)
org/apache/commons/codec/language/bm/Languages/SomeLanguages/restrictTo(org.apache.commons.codec.language.bm.Languages$LanguageSet)#java/util/Iterator/hasNext()
org/apache/commons/codec/language/bm/Languages/SomeLanguages/restrictTo(org.apache.commons.codec.language.bm.Languages$LanguageSet)#java/util/Set/size()
org/apache/commons/codec/language/bm/Languages/SomeLanguages/restrictTo(org.apache.commons.codec.language.bm.Languages$LanguageSet)#java/util/HashSet/HashSet(int)
org/apache/commons/codec/language/bm/Languages/SomeLanguages/restrictTo(org.apache.commons.codec.language.bm.Languages$LanguageSet)#org/apache/commons/codec/language/bm/Languages$SomeLanguages/from(java.util.Set)
org/apache/commons/codec/language/bm/Languages/SomeLanguages/restrictTo(org.apache.commons.codec.language.bm.Languages$LanguageSet)#java/util/Iterator/next()
org/apache/commons/codec/language/bm/Languages/SomeLanguages/restrictTo(org.apache.commons.codec.language.bm.Languages$LanguageSet)#java/util/Set/contains(java.lang.Object)
org/apache/commons/codec/language/bm/Languages/SomeLanguages/restrictTo(org.apache.commons.codec.language.bm.Languages$LanguageSet)#java/util/Set/iterator()
org/apache/commons/codec/language/bm/Languages/SomeLanguages/restrictTo(org.apache.commons.codec.language.bm.Languages$LanguageSet)#java/lang/Math/min(int,int)
org/apache/commons/codec/language/bm/Languages/SomeLanguages/restrictTo(org.apache.commons.codec.language.bm.Languages$LanguageSet)#java/util/Set/add(java.lang.Object)
org/apache/commons/codec/language/ColognePhonetic/colognePhonetic(java.lang.String)#org/apache/commons/codec/language/ColognePhonetic$CologneInputBuffer/length()
org/apache/commons/codec/language/ColognePhonetic/colognePhonetic(java.lang.String)#org/apache/commons/codec/language/ColognePhonetic$CologneInputBuffer/CologneInputBuffer(org.apache.commons.codec.language.ColognePhonetic,char[])
org/apache/commons/codec/language/ColognePhonetic/colognePhonetic(java.lang.String)#org/apache/commons/codec/language/ColognePhonetic$CologneOutputBuffer/CologneOutputBuffer(org.apache.commons.codec.language.ColognePhonetic,int)
org/apache/commons/codec/language/ColognePhonetic/colognePhonetic(java.lang.String)#java/lang/String/length()
org/apache/commons/codec/language/ColognePhonetic/colognePhonetic(java.lang.String)#org/apache/commons/codec/language/ColognePhonetic$CologneInputBuffer/addLeft(char)
org/apache/commons/codec/language/ColognePhonetic/colognePhonetic(java.lang.String)#org/apache/commons/codec/language/ColognePhonetic$CologneInputBuffer/removeNext()
org/apache/commons/codec/language/ColognePhonetic/colognePhonetic(java.lang.String)#org/apache/commons/codec/language/ColognePhonetic$CologneOutputBuffer/addRight(char)
org/apache/commons/codec/language/ColognePhonetic/colognePhonetic(java.lang.String)#java/lang/String/toCharArray()
org/apache/commons/codec/language/ColognePhonetic/colognePhonetic(java.lang.String)#org/apache/commons/codec/language/ColognePhonetic$CologneInputBuffer/getNextChar()
org/apache/commons/codec/language/ColognePhonetic/colognePhonetic(java.lang.String)#org/apache/commons/codec/language/ColognePhonetic$CologneOutputBuffer/toString()
org/apache/commons/codec/digest/UnixCrypt/crypt(byte[],java.lang.String)#java/util/Random/nextInt(int)
org/apache/commons/codec/digest/UnixCrypt/crypt(byte[],java.lang.String)#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/apache/commons/codec/digest/UnixCrypt/crypt(byte[],java.lang.String)#java/util/Random/Random()
org/apache/commons/codec/digest/UnixCrypt/crypt(byte[],java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/apache/commons/codec/digest/UnixCrypt/crypt(byte[],java.lang.String)#java/lang/StringBuilder/append(char)
org/apache/commons/codec/digest/UnixCrypt/crypt(byte[],java.lang.String)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/commons/codec/digest/UnixCrypt/crypt(byte[],java.lang.String)#java/lang/StringBuilder/setCharAt(int,char)
org/apache/commons/codec/digest/UnixCrypt/crypt(byte[],java.lang.String)#java/lang/String/matches(java.lang.String)
org/apache/commons/codec/digest/UnixCrypt/crypt(byte[],java.lang.String)#java/lang/StringBuilder/toString()
org/apache/commons/codec/digest/UnixCrypt/crypt(byte[],java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/apache/commons/codec/digest/UnixCrypt/crypt(byte[],java.lang.String)#java/lang/String/charAt(int)
org/apache/commons/codec/language/bm/Lang/guessLanguages(java.lang.String)#org/apache/commons/codec/language/bm/Lang$LangRule/access$100(org.apache.commons.codec.language.bm.Lang$LangRule)
org/apache/commons/codec/language/bm/Lang/guessLanguages(java.lang.String)#org/apache/commons/codec/language/bm/Lang$LangRule/access$200(org.apache.commons.codec.language.bm.Lang$LangRule)
org/apache/commons/codec/language/bm/Lang/guessLanguages(java.lang.String)#java/lang/Object/equals(java.lang.Object)
org/apache/commons/codec/language/bm/Lang/guessLanguages(java.lang.String)#java/util/Iterator/hasNext()
org/apache/commons/codec/language/bm/Lang/guessLanguages(java.lang.String)#java/lang/String/toLowerCase(java.util.Locale)
org/apache/commons/codec/language/bm/Lang/guessLanguages(java.lang.String)#java/util/Set/removeAll(java.util.Collection)
org/apache/commons/codec/language/bm/Lang/guessLanguages(java.lang.String)#java/util/Iterator/next()
org/apache/commons/codec/language/bm/Lang/guessLanguages(java.lang.String)#org/apache/commons/codec/language/bm/Lang$LangRule/matches(java.lang.String)
org/apache/commons/codec/language/bm/Lang/guessLanguages(java.lang.String)#java/util/List/iterator()
org/apache/commons/codec/language/bm/Lang/guessLanguages(java.lang.String)#java/util/HashSet/HashSet(java.util.Collection)
org/apache/commons/codec/language/bm/Lang/guessLanguages(java.lang.String)#java/util/Set/retainAll(java.util.Collection)
org/apache/commons/codec/language/bm/Lang/guessLanguages(java.lang.String)#org/apache/commons/codec/language/bm/Languages$LanguageSet/from(java.util.Set)
org/apache/commons/codec/language/bm/Lang/loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)#java/util/ArrayList/ArrayList()
org/apache/commons/codec/language/bm/Lang/loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)#java/lang/String/split(java.lang.String)
org/apache/commons/codec/language/bm/Lang/loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)#org/apache/commons/codec/language/bm/Lang$LangRule/LangRule(java.util.regex.Pattern,java.util.Set,boolean,org.apache.commons.codec.language.bm.Lang$1)
org/apache/commons/codec/language/bm/Lang/loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)#java/util/Scanner/Scanner(java.io.InputStream,java.lang.String)
org/apache/commons/codec/language/bm/Lang/loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)#java/lang/String/substring(int,int)
org/apache/commons/codec/language/bm/Lang/loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)#java/lang/ClassLoader/getResourceAsStream(java.lang.String)
org/apache/commons/codec/language/bm/Lang/loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)#java/util/List/add(java.lang.Object)
org/apache/commons/codec/language/bm/Lang/loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)#java/lang/String/startsWith(java.lang.String)
org/apache/commons/codec/language/bm/Lang/loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/commons/codec/language/bm/Lang/loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)#java/lang/Class/getClassLoader()
org/apache/commons/codec/language/bm/Lang/loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)#java/util/HashSet/HashSet(java.util.Collection)
org/apache/commons/codec/language/bm/Lang/loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/apache/commons/codec/language/bm/Lang/loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)#java/util/Scanner/close()
org/apache/commons/codec/language/bm/Lang/loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)#java/util/regex/Pattern/compile(java.lang.String)
org/apache/commons/codec/language/bm/Lang/loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)#java/lang/StringBuilder/append(java.lang.String)
org/apache/commons/codec/language/bm/Lang/loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)#java/lang/String/trim()
org/apache/commons/codec/language/bm/Lang/loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)#java/util/Scanner/hasNextLine()
org/apache/commons/codec/language/bm/Lang/loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)#java/lang/String/length()
org/apache/commons/codec/language/bm/Lang/loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)#java/util/Arrays/asList(java.lang.Object[])
org/apache/commons/codec/language/bm/Lang/loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)#java/lang/String/equals(java.lang.Object)
org/apache/commons/codec/language/bm/Lang/loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)#java/util/Scanner/nextLine()
org/apache/commons/codec/language/bm/Lang/loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)#java/lang/StringBuilder/StringBuilder()
org/apache/commons/codec/language/bm/Lang/loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)#java/lang/String/indexOf(java.lang.String)
org/apache/commons/codec/language/bm/Lang/loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)#java/lang/StringBuilder/toString()
org/apache/commons/codec/language/bm/Lang/loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)#java/lang/String/endsWith(java.lang.String)
org/apache/commons/codec/language/DaitchMokotoffSoundex/soundex(java.lang.String,boolean)#java/util/ArrayList/ArrayList()
org/apache/commons/codec/language/DaitchMokotoffSoundex/soundex(java.lang.String,boolean)#org/apache/commons/codec/language/DaitchMokotoffSoundex$Branch/toString()
org/apache/commons/codec/language/DaitchMokotoffSoundex/soundex(java.lang.String,boolean)#java/lang/Character/isWhitespace(char)
org/apache/commons/codec/language/DaitchMokotoffSoundex/soundex(java.lang.String,boolean)#org/apache/commons/codec/language/DaitchMokotoffSoundex$Branch/processNextReplacement(java.lang.String,boolean)
org/apache/commons/codec/language/DaitchMokotoffSoundex/soundex(java.lang.String,boolean)#java/util/Set/addAll(java.util.Collection)
org/apache/commons/codec/language/DaitchMokotoffSoundex/soundex(java.lang.String,boolean)#java/util/LinkedHashSet/LinkedHashSet()
org/apache/commons/codec/language/DaitchMokotoffSoundex/soundex(java.lang.String,boolean)#org/apache/commons/codec/language/DaitchMokotoffSoundex$Branch/finish()
org/apache/commons/codec/language/DaitchMokotoffSoundex/soundex(java.lang.String,boolean)#org/apache/commons/codec/language/DaitchMokotoffSoundex$Rule/getReplacements(java.lang.String,boolean)
org/apache/commons/codec/language/DaitchMokotoffSoundex/soundex(java.lang.String,boolean)#java/util/Iterator/next()
org/apache/commons/codec/language/DaitchMokotoffSoundex/soundex(java.lang.String,boolean)#java/util/Set/iterator()
org/apache/commons/codec/language/DaitchMokotoffSoundex/soundex(java.lang.String,boolean)#java/util/List/add(java.lang.Object)
org/apache/commons/codec/language/DaitchMokotoffSoundex/soundex(java.lang.String,boolean)#java/util/List/iterator()
org/apache/commons/codec/language/DaitchMokotoffSoundex/soundex(java.lang.String,boolean)#java/util/Set/clear()
org/apache/commons/codec/language/DaitchMokotoffSoundex/soundex(java.lang.String,boolean)#java/util/Set/add(java.lang.Object)
org/apache/commons/codec/language/DaitchMokotoffSoundex/soundex(java.lang.String,boolean)#org/apache/commons/codec/language/DaitchMokotoffSoundex$Rule/getPatternLength()
org/apache/commons/codec/language/DaitchMokotoffSoundex/soundex(java.lang.String,boolean)#java/util/Iterator/hasNext()
org/apache/commons/codec/language/DaitchMokotoffSoundex/soundex(java.lang.String,boolean)#org/apache/commons/codec/language/DaitchMokotoffSoundex$Rule/matches(java.lang.String)
org/apache/commons/codec/language/DaitchMokotoffSoundex/soundex(java.lang.String,boolean)#java/util/Set/size()
org/apache/commons/codec/language/DaitchMokotoffSoundex/soundex(java.lang.String,boolean)#java/lang/String/charAt(int)
org/apache/commons/codec/language/DaitchMokotoffSoundex/soundex(java.lang.String,boolean)#java/lang/String/length()
org/apache/commons/codec/language/DaitchMokotoffSoundex/soundex(java.lang.String,boolean)#java/util/Map/get(java.lang.Object)
org/apache/commons/codec/language/DaitchMokotoffSoundex/soundex(java.lang.String,boolean)#java/lang/Character/valueOf(char)
org/apache/commons/codec/language/DaitchMokotoffSoundex/soundex(java.lang.String,boolean)#org/apache/commons/codec/language/DaitchMokotoffSoundex$Branch/Branch(org.apache.commons.codec.language.DaitchMokotoffSoundex$1)
org/apache/commons/codec/language/DaitchMokotoffSoundex/soundex(java.lang.String,boolean)#java/lang/String/substring(int)
org/apache/commons/codec/language/DaitchMokotoffSoundex/soundex(java.lang.String,boolean)#java/util/List/clear()
org/apache/commons/codec/language/DaitchMokotoffSoundex/soundex(java.lang.String,boolean)#org/apache/commons/codec/language/DaitchMokotoffSoundex$Branch/createBranch()
org/apache/commons/codec/language/DaitchMokotoffSoundex/parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)#org/apache/commons/codec/language/DaitchMokotoffSoundex$Rule/access$000(org.apache.commons.codec.language.DaitchMokotoffSoundex$Rule)
org/apache/commons/codec/language/DaitchMokotoffSoundex/parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)#java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)
org/apache/commons/codec/language/DaitchMokotoffSoundex/parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)#java/lang/String/split(java.lang.String)
org/apache/commons/codec/language/DaitchMokotoffSoundex/parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)#org/apache/commons/codec/language/DaitchMokotoffSoundex$Rule/Rule(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
org/apache/commons/codec/language/DaitchMokotoffSoundex/parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)#java/util/Scanner/nextLine()
org/apache/commons/codec/language/DaitchMokotoffSoundex/parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)#java/lang/String/substring(int,int)
org/apache/commons/codec/language/DaitchMokotoffSoundex/parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)#java/util/List/add(java.lang.Object)
org/apache/commons/codec/language/DaitchMokotoffSoundex/parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)#java/lang/String/startsWith(java.lang.String)
org/apache/commons/codec/language/DaitchMokotoffSoundex/parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/commons/codec/language/DaitchMokotoffSoundex/parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)#java/lang/String/contains(java.lang.CharSequence)
org/apache/commons/codec/language/DaitchMokotoffSoundex/parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/commons/codec/language/DaitchMokotoffSoundex/parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)#java/util/ArrayList/ArrayList()
org/apache/commons/codec/language/DaitchMokotoffSoundex/parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)#java/lang/StringBuilder/append(java.lang.String)
org/apache/commons/codec/language/DaitchMokotoffSoundex/parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)#java/lang/String/charAt(int)
org/apache/commons/codec/language/DaitchMokotoffSoundex/parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)#java/lang/String/trim()
org/apache/commons/codec/language/DaitchMokotoffSoundex/parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)#java/lang/StringBuilder/append(int)
org/apache/commons/codec/language/DaitchMokotoffSoundex/parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)#java/util/Scanner/hasNextLine()
org/apache/commons/codec/language/DaitchMokotoffSoundex/parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)#java/lang/String/length()
org/apache/commons/codec/language/DaitchMokotoffSoundex/parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)#java/util/Map/get(java.lang.Object)
org/apache/commons/codec/language/DaitchMokotoffSoundex/parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)#java/lang/StringBuilder/StringBuilder()
org/apache/commons/codec/language/DaitchMokotoffSoundex/parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)#java/lang/String/indexOf(java.lang.String)
org/apache/commons/codec/language/DaitchMokotoffSoundex/parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)#java/lang/Character/valueOf(char)
org/apache/commons/codec/language/DaitchMokotoffSoundex/parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)#java/lang/StringBuilder/toString()
org/apache/commons/codec/language/DaitchMokotoffSoundex/parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)#java/lang/String/endsWith(java.lang.String)
org/apache/commons/codec/language/DaitchMokotoffSoundex/<clinit>()#java/util/Scanner/close()
org/apache/commons/codec/language/DaitchMokotoffSoundex/<clinit>()#org/apache/commons/codec/language/DaitchMokotoffSoundex$1/1()
org/apache/commons/codec/language/DaitchMokotoffSoundex/<clinit>()#java/util/Iterator/hasNext()
org/apache/commons/codec/language/DaitchMokotoffSoundex/<clinit>()#java/util/Scanner/Scanner(java.io.InputStream,java.lang.String)
org/apache/commons/codec/language/DaitchMokotoffSoundex/<clinit>()#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/commons/codec/language/DaitchMokotoffSoundex/<clinit>()#java/util/Map/entrySet()
org/apache/commons/codec/language/DaitchMokotoffSoundex/<clinit>()#java/util/Iterator/next()
org/apache/commons/codec/language/DaitchMokotoffSoundex/<clinit>()#java/util/Collections/sort(java.util.List,java.util.Comparator)
org/apache/commons/codec/language/DaitchMokotoffSoundex/<clinit>()#java/util/HashMap/HashMap()
org/apache/commons/codec/language/DaitchMokotoffSoundex/<clinit>()#java/lang/ClassLoader/getResourceAsStream(java.lang.String)
org/apache/commons/codec/language/DaitchMokotoffSoundex/<clinit>()#java/util/Set/iterator()
org/apache/commons/codec/language/DaitchMokotoffSoundex/<clinit>()#java/util/Map$Entry/getValue()
org/apache/commons/codec/language/DaitchMokotoffSoundex/<clinit>()#java/lang/Class/getClassLoader()
org/apache/commons/codec/language/DaitchMokotoffSoundex/cleanup(java.lang.String)#java/lang/Character/toLowerCase(char)
org/apache/commons/codec/language/DaitchMokotoffSoundex/cleanup(java.lang.String)#java/lang/Character/isWhitespace(char)
org/apache/commons/codec/language/DaitchMokotoffSoundex/cleanup(java.lang.String)#java/util/Map/get(java.lang.Object)
org/apache/commons/codec/language/DaitchMokotoffSoundex/cleanup(java.lang.String)#java/util/Map/containsKey(java.lang.Object)
org/apache/commons/codec/language/DaitchMokotoffSoundex/cleanup(java.lang.String)#java/lang/StringBuilder/append(char)
org/apache/commons/codec/language/DaitchMokotoffSoundex/cleanup(java.lang.String)#java/lang/String/toCharArray()
org/apache/commons/codec/language/DaitchMokotoffSoundex/cleanup(java.lang.String)#java/lang/Character/charValue()
org/apache/commons/codec/language/DaitchMokotoffSoundex/cleanup(java.lang.String)#java/lang/StringBuilder/toString()
org/apache/commons/codec/language/DaitchMokotoffSoundex/cleanup(java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/apache/commons/codec/language/DaitchMokotoffSoundex/cleanup(java.lang.String)#java/lang/Character/valueOf(char)
org/apache/commons/codec/digest/Sha2Crypt/sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)#java/util/regex/Matcher/group(int)
org/apache/commons/codec/digest/Sha2Crypt/sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)#java/security/MessageDigest/digest()
org/apache/commons/codec/digest/Sha2Crypt/sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)#java/security/MessageDigest/reset()
org/apache/commons/codec/digest/Sha2Crypt/sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)#java/lang/Math/max(int,int)
org/apache/commons/codec/digest/Sha2Crypt/sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/apache/commons/codec/digest/Sha2Crypt/sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/apache/commons/codec/digest/Sha2Crypt/sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)#java/lang/Integer/parseInt(java.lang.String)
org/apache/commons/codec/digest/Sha2Crypt/sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)#java/lang/String/getBytes(java.nio.charset.Charset)
org/apache/commons/codec/digest/Sha2Crypt/sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)#java/util/regex/Matcher/find()
org/apache/commons/codec/digest/Sha2Crypt/sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)#java/util/regex/Pattern/matcher(java.lang.CharSequence)
org/apache/commons/codec/digest/Sha2Crypt/sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/apache/commons/codec/digest/Sha2Crypt/sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)#java/util/Arrays/fill(byte[],byte)
org/apache/commons/codec/digest/Sha2Crypt/sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)#java/lang/StringBuilder/append(int)
org/apache/commons/codec/digest/Sha2Crypt/sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/commons/codec/digest/Sha2Crypt/sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)#java/security/MessageDigest/update(byte[],int,int)
org/apache/commons/codec/digest/Sha2Crypt/sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)#java/lang/Math/min(int,int)
org/apache/commons/codec/digest/Sha2Crypt/sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)#java/lang/System/arraycopy(java.lang.Object,int,java.lang.Object,int,int)
org/apache/commons/codec/digest/Sha2Crypt/sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)#java/lang/StringBuilder/toString()
org/apache/commons/codec/digest/Sha2Crypt/sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)#java/security/MessageDigest/update(byte[])
org/apache/commons/codec/language/bm/Languages/getInstance(java.lang.String)#java/util/Scanner/close()
org/apache/commons/codec/language/bm/Languages/getInstance(java.lang.String)#java/util/Scanner/nextLine()
org/apache/commons/codec/language/bm/Languages/getInstance(java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/apache/commons/codec/language/bm/Languages/getInstance(java.lang.String)#java/lang/ClassLoader/getResourceAsStream(java.lang.String)
org/apache/commons/codec/language/bm/Languages/getInstance(java.lang.String)#java/lang/String/startsWith(java.lang.String)
org/apache/commons/codec/language/bm/Languages/getInstance(java.lang.String)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/commons/codec/language/bm/Languages/getInstance(java.lang.String)#java/lang/Class/getClassLoader()
org/apache/commons/codec/language/bm/Languages/getInstance(java.lang.String)#java/util/HashSet/HashSet()
org/apache/commons/codec/language/bm/Languages/getInstance(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/apache/commons/codec/language/bm/Languages/getInstance(java.lang.String)#java/lang/String/trim()
org/apache/commons/codec/language/bm/Languages/getInstance(java.lang.String)#java/util/Scanner/hasNextLine()
org/apache/commons/codec/language/bm/Languages/getInstance(java.lang.String)#java/lang/String/length()
org/apache/commons/codec/language/bm/Languages/getInstance(java.lang.String)#java/util/Scanner/Scanner(java.io.InputStream,java.lang.String)
org/apache/commons/codec/language/bm/Languages/getInstance(java.lang.String)#java/util/Set/add(java.lang.Object)
org/apache/commons/codec/language/bm/Languages/getInstance(java.lang.String)#java/util/Collections/unmodifiableSet(java.util.Set)
org/apache/commons/codec/language/bm/Languages/getInstance(java.lang.String)#java/lang/StringBuilder/toString()
org/apache/commons/codec/language/bm/Languages/getInstance(java.lang.String)#java/lang/String/endsWith(java.lang.String)
org/apache/commons/codec/language/bm/PhoneticEngine/PhonemeBuilder/makeString()#java/lang/StringBuilder/append(java.lang.CharSequence)
org/apache/commons/codec/language/bm/PhoneticEngine/PhonemeBuilder/makeString()#org/apache/commons/codec/language/bm/Rule$Phoneme/getPhonemeText()
org/apache/commons/codec/language/bm/PhoneticEngine/PhonemeBuilder/makeString()#java/util/Iterator/hasNext()
org/apache/commons/codec/language/bm/PhoneticEngine/PhonemeBuilder/makeString()#java/lang/StringBuilder/append(java.lang.String)
org/apache/commons/codec/language/bm/PhoneticEngine/PhonemeBuilder/makeString()#java/util/Iterator/next()
org/apache/commons/codec/language/bm/PhoneticEngine/PhonemeBuilder/makeString()#java/lang/StringBuilder/StringBuilder()
org/apache/commons/codec/language/bm/PhoneticEngine/PhonemeBuilder/makeString()#java/util/Set/iterator()
org/apache/commons/codec/language/bm/PhoneticEngine/PhonemeBuilder/makeString()#java/lang/StringBuilder/length()
org/apache/commons/codec/language/bm/PhoneticEngine/PhonemeBuilder/makeString()#java/lang/StringBuilder/toString()
org/apache/commons/codec/language/bm/PhoneticEngine/PhonemeBuilder/apply(org.apache.commons.codec.language.bm.Rule$PhonemeExpr,int)#org/apache/commons/codec/language/bm/Rule$Phoneme/Phoneme(org.apache.commons.codec.language.bm.Rule$Phoneme,org.apache.commons.codec.language.bm.Rule$Phoneme,org.apache.commons.codec.language.bm.Languages$LanguageSet)
org/apache/commons/codec/language/bm/PhoneticEngine/PhonemeBuilder/apply(org.apache.commons.codec.language.bm.Rule$PhonemeExpr,int)#org/apache/commons/codec/language/bm/Languages$LanguageSet/restrictTo(org.apache.commons.codec.language.bm.Languages$LanguageSet)
org/apache/commons/codec/language/bm/PhoneticEngine/PhonemeBuilder/apply(org.apache.commons.codec.language.bm.Rule$PhonemeExpr,int)#java/util/Set/size()
org/apache/commons/codec/language/bm/PhoneticEngine/PhonemeBuilder/apply(org.apache.commons.codec.language.bm.Rule$PhonemeExpr,int)#java/util/Set/addAll(java.util.Collection)
org/apache/commons/codec/language/bm/PhoneticEngine/PhonemeBuilder/apply(org.apache.commons.codec.language.bm.Rule$PhonemeExpr,int)#org/apache/commons/codec/language/bm/Languages$LanguageSet/isEmpty()
org/apache/commons/codec/language/bm/PhoneticEngine/PhonemeBuilder/apply(org.apache.commons.codec.language.bm.Rule$PhonemeExpr,int)#org/apache/commons/codec/language/bm/Rule$Phoneme/getLanguages()
org/apache/commons/codec/language/bm/PhoneticEngine/PhonemeBuilder/apply(org.apache.commons.codec.language.bm.Rule$PhonemeExpr,int)#java/util/Iterator/next()
org/apache/commons/codec/language/bm/PhoneticEngine/PhonemeBuilder/apply(org.apache.commons.codec.language.bm.Rule$PhonemeExpr,int)#java/lang/Iterable/iterator()
org/apache/commons/codec/language/bm/PhoneticEngine/PhonemeBuilder/apply(org.apache.commons.codec.language.bm.Rule$PhonemeExpr,int)#java/util/Set/iterator()
org/apache/commons/codec/language/bm/PhoneticEngine/PhonemeBuilder/apply(org.apache.commons.codec.language.bm.Rule$PhonemeExpr,int)#java/util/LinkedHashSet/LinkedHashSet(int)
org/apache/commons/codec/language/bm/PhoneticEngine/PhonemeBuilder/apply(org.apache.commons.codec.language.bm.Rule$PhonemeExpr,int)#java/util/Set/clear()
org/apache/commons/codec/language/bm/PhoneticEngine/PhonemeBuilder/apply(org.apache.commons.codec.language.bm.Rule$PhonemeExpr,int)#java/util/Set/add(java.lang.Object)
org/apache/commons/codec/language/bm/PhoneticEngine/PhonemeBuilder/apply(org.apache.commons.codec.language.bm.Rule$PhonemeExpr,int)#java/util/Iterator/hasNext()
org/apache/commons/codec/language/bm/PhoneticEngine/PhonemeBuilder/apply(org.apache.commons.codec.language.bm.Rule$PhonemeExpr,int)#org/apache/commons/codec/language/bm/Rule$PhonemeExpr/getPhonemes()
org/apache/commons/codec/language/bm/Rule/parsePhonemeExpr(java.lang.String)#java/util/ArrayList/ArrayList()
org/apache/commons/codec/language/bm/Rule/parsePhonemeExpr(java.lang.String)#java/lang/String/split(java.lang.String)
org/apache/commons/codec/language/bm/Rule/parsePhonemeExpr(java.lang.String)#java/lang/String/length()
org/apache/commons/codec/language/bm/Rule/parsePhonemeExpr(java.lang.String)#java/lang/String/substring(int,int)
org/apache/commons/codec/language/bm/Rule/parsePhonemeExpr(java.lang.String)#java/util/List/add(java.lang.Object)
org/apache/commons/codec/language/bm/Rule/parsePhonemeExpr(java.lang.String)#java/lang/String/endsWith(java.lang.String)
org/apache/commons/codec/language/bm/Rule/parsePhonemeExpr(java.lang.String)#org/apache/commons/codec/language/bm/Rule$Phoneme/Phoneme(java.lang.CharSequence,org.apache.commons.codec.language.bm.Languages$LanguageSet)
org/apache/commons/codec/language/bm/Rule/parsePhonemeExpr(java.lang.String)#java/lang/String/startsWith(java.lang.String)
org/apache/commons/codec/language/bm/Rule/parsePhonemeExpr(java.lang.String)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/commons/codec/language/bm/Rule/parsePhonemeExpr(java.lang.String)#org/apache/commons/codec/language/bm/Rule$PhonemeList/PhonemeList(java.util.List)
org/apache/commons/codec/language/bm/Rule/<clinit>()#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/commons/codec/language/bm/Rule/<clinit>()#java/lang/StringBuilder/append(java.lang.String)
org/apache/commons/codec/language/bm/Rule/<clinit>()#java/util/Collections/unmodifiableMap(java.util.Map)
org/apache/commons/codec/language/bm/Rule/<clinit>()#org/apache/commons/codec/language/bm/Rule$1/1()
org/apache/commons/codec/language/bm/Rule/<clinit>()#java/lang/StringBuilder/StringBuilder()
org/apache/commons/codec/language/bm/Rule/<clinit>()#java/util/Set/iterator()
org/apache/commons/codec/language/bm/Rule/<clinit>()#org/apache/commons/codec/language/bm/RuleType/equals(java.lang.Object)
org/apache/commons/codec/language/bm/Rule/<clinit>()#java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)
org/apache/commons/codec/language/bm/Rule/<clinit>()#org/apache/commons/codec/language/bm/NameType/values()
org/apache/commons/codec/language/bm/Rule/<clinit>()#java/util/Iterator/hasNext()
org/apache/commons/codec/language/bm/Rule/<clinit>()#java/util/EnumMap/EnumMap(java.lang.Class)
org/apache/commons/codec/language/bm/Rule/<clinit>()#java/util/Iterator/next()
org/apache/commons/codec/language/bm/Rule/<clinit>()#java/util/HashMap/HashMap()
org/apache/commons/codec/language/bm/Rule/<clinit>()#org/apache/commons/codec/language/bm/RuleType/values()
org/apache/commons/codec/language/bm/Rule/<clinit>()#java/lang/StringBuilder/toString()
org/apache/commons/codec/language/bm/Rule/pattern(java.lang.String)#org/apache/commons/codec/language/bm/Rule$9/9(java.lang.String,boolean)
org/apache/commons/codec/language/bm/Rule/pattern(java.lang.String)#org/apache/commons/codec/language/bm/Rule$10/10(java.lang.String)
org/apache/commons/codec/language/bm/Rule/pattern(java.lang.String)#java/lang/String/length()
org/apache/commons/codec/language/bm/Rule/pattern(java.lang.String)#org/apache/commons/codec/language/bm/Rule$4/4(java.lang.String)
org/apache/commons/codec/language/bm/Rule/pattern(java.lang.String)#java/lang/String/substring(int,int)
org/apache/commons/codec/language/bm/Rule/pattern(java.lang.String)#org/apache/commons/codec/language/bm/Rule$5/5(java.lang.String)
org/apache/commons/codec/language/bm/Rule/pattern(java.lang.String)#org/apache/commons/codec/language/bm/Rule$3/3()
org/apache/commons/codec/language/bm/Rule/pattern(java.lang.String)#java/lang/String/startsWith(java.lang.String)
org/apache/commons/codec/language/bm/Rule/pattern(java.lang.String)#java/lang/String/contains(java.lang.CharSequence)
org/apache/commons/codec/language/bm/Rule/pattern(java.lang.String)#org/apache/commons/codec/language/bm/Rule$7/7(java.lang.String,boolean)
org/apache/commons/codec/language/bm/Rule/pattern(java.lang.String)#org/apache/commons/codec/language/bm/Rule$8/8(java.lang.String,boolean)
org/apache/commons/codec/language/bm/Rule/pattern(java.lang.String)#java/lang/String/endsWith(java.lang.String)
org/apache/commons/codec/language/bm/Rule/pattern(java.lang.String)#java/lang/String/substring(int)
org/apache/commons/codec/language/bm/Rule/pattern(java.lang.String)#org/apache/commons/codec/language/bm/Rule$6/6(java.lang.String)
org/apache/commons/codec/language/bm/Rule/parsePhoneme(java.lang.String)#java/lang/String/split(java.lang.String)
org/apache/commons/codec/language/bm/Rule/parsePhoneme(java.lang.String)#org/apache/commons/codec/language/bm/Languages$LanguageSet/from(java.util.Set)
org/apache/commons/codec/language/bm/Rule/parsePhoneme(java.lang.String)#java/lang/String/substring(int,int)
org/apache/commons/codec/language/bm/Rule/parsePhoneme(java.lang.String)#java/lang/String/indexOf(java.lang.String)
org/apache/commons/codec/language/bm/Rule/parsePhoneme(java.lang.String)#org/apache/commons/codec/language/bm/Rule$Phoneme/Phoneme(java.lang.CharSequence,org.apache.commons.codec.language.bm.Languages$LanguageSet)
org/apache/commons/codec/language/bm/Rule/parsePhoneme(java.lang.String)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/commons/codec/language/bm/Rule/parsePhoneme(java.lang.String)#java/util/HashSet/HashSet(java.util.Collection)
org/apache/commons/codec/language/bm/Rule/parsePhoneme(java.lang.String)#java/lang/String/endsWith(java.lang.String)
org/apache/commons/codec/language/bm/Rule/parsePhoneme(java.lang.String)#java/lang/String/length()
org/apache/commons/codec/language/bm/Rule/parsePhoneme(java.lang.String)#java/util/Arrays/asList(java.lang.Object[])
org/apache/commons/codec/language/bm/Rule/parseRules(java.util.Scanner,java.lang.String)#java/lang/String/split(java.lang.String)
org/apache/commons/codec/language/bm/Rule/parseRules(java.util.Scanner,java.lang.String)#java/lang/StringBuilder/append(int)
org/apache/commons/codec/language/bm/Rule/parseRules(java.util.Scanner,java.lang.String)#java/util/Map/putAll(java.util.Map)
org/apache/commons/codec/language/bm/Rule/parseRules(java.util.Scanner,java.lang.String)#java/util/HashMap/HashMap()
org/apache/commons/codec/language/bm/Rule/parseRules(java.util.Scanner,java.lang.String)#java/util/Scanner/nextLine()
org/apache/commons/codec/language/bm/Rule/parseRules(java.util.Scanner,java.lang.String)#java/lang/String/substring(int,int)
org/apache/commons/codec/language/bm/Rule/parseRules(java.util.Scanner,java.lang.String)#java/util/List/add(java.lang.Object)
org/apache/commons/codec/language/bm/Rule/parseRules(java.util.Scanner,java.lang.String)#java/lang/String/startsWith(java.lang.String)
org/apache/commons/codec/language/bm/Rule/parseRules(java.util.Scanner,java.lang.String)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/commons/codec/language/bm/Rule/parseRules(java.util.Scanner,java.lang.String)#java/lang/String/contains(java.lang.CharSequence)
org/apache/commons/codec/language/bm/Rule/parseRules(java.util.Scanner,java.lang.String)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/commons/codec/language/bm/Rule/parseRules(java.util.Scanner,java.lang.String)#java/util/ArrayList/ArrayList()
org/apache/commons/codec/language/bm/Rule/parseRules(java.util.Scanner,java.lang.String)#org/apache/commons/codec/language/bm/Rule$2/2(java.lang.String,java.lang.String,java.lang.String,org.apache.commons.codec.language.bm.Rule$PhonemeExpr,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
org/apache/commons/codec/language/bm/Rule/parseRules(java.util.Scanner,java.lang.String)#java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)
org/apache/commons/codec/language/bm/Rule/parseRules(java.util.Scanner,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/apache/commons/codec/language/bm/Rule/parseRules(java.util.Scanner,java.lang.String)#java/lang/String/trim()
org/apache/commons/codec/language/bm/Rule/parseRules(java.util.Scanner,java.lang.String)#java/util/Scanner/hasNextLine()
org/apache/commons/codec/language/bm/Rule/parseRules(java.util.Scanner,java.lang.String)#java/lang/String/length()
org/apache/commons/codec/language/bm/Rule/parseRules(java.util.Scanner,java.lang.String)#java/util/Map/get(java.lang.Object)
org/apache/commons/codec/language/bm/Rule/parseRules(java.util.Scanner,java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/apache/commons/codec/language/bm/Rule/parseRules(java.util.Scanner,java.lang.String)#java/lang/String/indexOf(java.lang.String)
org/apache/commons/codec/language/bm/Rule/parseRules(java.util.Scanner,java.lang.String)#java/lang/String/substring(int)
org/apache/commons/codec/language/bm/Rule/parseRules(java.util.Scanner,java.lang.String)#java/lang/StringBuilder/toString()
org/apache/commons/codec/language/bm/Rule/parseRules(java.util.Scanner,java.lang.String)#java/lang/String/endsWith(java.lang.String)
