io/corbel/resources/rem/dao/DefaultKeyNormalizer/normalize(io.corbel.resources.rem.model.RestorResourceUri)#com/google/common/base/Joiner/join(java.lang.Object,java.lang.Object,java.lang.Object[])
io/corbel/resources/rem/dao/DefaultKeyNormalizer/normalize(io.corbel.resources.rem.model.RestorResourceUri)#io/corbel/resources/rem/model/RestorResourceUri/getDomain()
io/corbel/resources/rem/dao/DefaultKeyNormalizer/normalize(io.corbel.resources.rem.model.RestorResourceUri)#com/google/common/base/Joiner/on(java.lang.String)
io/corbel/resources/rem/dao/DefaultKeyNormalizer/normalize(io.corbel.resources.rem.model.RestorResourceUri)#io/corbel/resources/rem/model/RestorResourceUri/getMediaType()
io/corbel/resources/rem/dao/DefaultKeyNormalizer/normalize(io.corbel.resources.rem.model.RestorResourceUri)#java/lang/String/replace(java.lang.CharSequence,java.lang.CharSequence)
io/corbel/resources/rem/dao/DefaultKeyNormalizer/normalize(io.corbel.resources.rem.model.RestorResourceUri)#io/corbel/resources/rem/model/RestorResourceUri/getTypeId()
io/corbel/resources/rem/dao/DefaultKeyNormalizer/normalize(io.corbel.resources.rem.model.RestorResourceUri)#java/lang/String/startsWith(java.lang.String)
io/corbel/resources/rem/dao/DefaultKeyNormalizer/normalize(io.corbel.resources.rem.model.RestorResourceUri)#io/corbel/resources/rem/model/RestorResourceUri/getType()
io/corbel/resources/rem/dao/DefaultKeyNormalizer/normalize(io.corbel.resources.rem.model.RestorResourceUri)#java/lang/String/endsWith(java.lang.String)
io/corbel/resources/rem/dao/DefaultKeyNormalizer/normalize(io.corbel.resources.rem.model.RestorResourceUri,java.lang.String)#com/google/common/base/Joiner/join(java.lang.Object,java.lang.Object,java.lang.Object[])
io/corbel/resources/rem/dao/DefaultKeyNormalizer/normalize(io.corbel.resources.rem.model.RestorResourceUri,java.lang.String)#io/corbel/resources/rem/model/RestorResourceUri/getDomain()
io/corbel/resources/rem/dao/DefaultKeyNormalizer/normalize(io.corbel.resources.rem.model.RestorResourceUri,java.lang.String)#com/google/common/base/Joiner/on(char)
io/corbel/resources/rem/dao/DefaultKeyNormalizer/normalize(io.corbel.resources.rem.model.RestorResourceUri,java.lang.String)#io/corbel/resources/rem/model/RestorResourceUri/getType()
io/corbel/resources/rem/i18n/I18nDeleteRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/resources/rem/request/RequestParameters/getHeaders()
io/corbel/resources/rem/i18n/I18nDeleteRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/resources/rem/i18n/I18nBaseRem/getLanguage(javax.ws.rs.core.MultivaluedMap)
io/corbel/resources/rem/i18n/I18nDeleteRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#java/util/Optional/orElse(T)
io/corbel/resources/rem/i18n/I18nDeleteRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#java/util/Optional/ofNullable(T)
io/corbel/resources/rem/i18n/I18nDeleteRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#java/util/Optional/map(java.util.function.Function)
io/corbel/resources/rem/i18n/I18nDeleteRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/resources/rem/i18n/api/I18nErrorResponseFactory/errorNotLanguageHeader()
io/corbel/resources/rem/i18n/I18nDeleteRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/resources/rem/i18n/api/I18nErrorResponseFactory/getInstance()
io/corbel/resources/rem/acl/AclPutRemTest/testPutRelation()#io/corbel/resources/rem/request/RequestParameters/getOptionalApiParameters()
io/corbel/resources/rem/acl/AclPutRemTest/testPutRelation()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/acl/AclPutRemTest/testPutRelation()#javax/ws/rs/core/Response/getEntity()
io/corbel/resources/rem/acl/AclPutRemTest/testPutRelation()#io/corbel/resources/rem/service/AclResourcesService/isAuthorized(java.lang.String,io.corbel.lib.token.TokenInfo,java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.model.AclPermission)
io/corbel/resources/rem/acl/AclPutRemTest/testPutRelation()#io/corbel/resources/rem/request/ResourceId/ResourceId(java.lang.String)
io/corbel/resources/rem/acl/AclPutRemTest/testPutRelation()#io/corbel/resources/rem/acl/AclBaseRem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)
io/corbel/resources/rem/acl/AclPutRemTest/testPutRelation()#org/mockito/Matchers/eq(T)
io/corbel/resources/rem/acl/AclPutRemTest/testPutRelation()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/resources/rem/acl/AclPutRemTest/testPutRelation()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/resources/rem/acl/AclPutRemTest/testPutRelation()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/acl/AclPutRemTest/testPutRelation()#io/corbel/resources/rem/service/AclResourcesService/putRelation(io.corbel.resources.rem.Rem,java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.lang.Object,java.util.List)
io/corbel/resources/rem/acl/AclPutRemTest/testPutRelation()#java/util/Optional/of(T)
io/corbel/resources/rem/acl/AclPutRemTest/testPutRelation()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/resources/rem/acl/AclPutRemTest/testPutRelation()#io/corbel/resources/rem/request/RelationParameters/getPredicateResource()
io/corbel/resources/rem/acl/AclPutRemTest/testPutRelation()#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/rem/acl/AclPutRemTest/testPutRelation()#org/mockito/Matchers/any()
io/corbel/resources/rem/acl/AclPutRemTest/testPutRelation()#java/util/Optional/empty()
io/corbel/resources/rem/acl/AclPutRemTest/testPutResourceEmptyObject()#javax/ws/rs/core/Response/getEntity()
io/corbel/resources/rem/acl/AclPutRemTest/testPutResourceEmptyObject()#io/corbel/resources/rem/service/AclResourcesService/getResourceIfIsAuthorized(java.lang.String,io.corbel.lib.token.TokenInfo,java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.model.AclPermission)
io/corbel/resources/rem/acl/AclPutRemTest/testPutResourceEmptyObject()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/acl/AclPutRemTest/testPutResourceEmptyObject()#java/io/ByteArrayInputStream/ByteArrayInputStream(byte[])
io/corbel/resources/rem/acl/AclPutRemTest/testPutResourceEmptyObject()#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/rem/acl/AclPutRemTest/testPutResourceEmptyObject()#java/util/Optional/empty()
io/corbel/resources/rem/acl/AclPutRemTest/testPutResourceEmptyObject()#io/corbel/resources/rem/acl/AclTestUtils/getEntity(java.lang.String,java.lang.String)
io/corbel/resources/rem/acl/AclPutRemTest/testPutResourceEmptyObject()#java/lang/String/getBytes()
io/corbel/resources/rem/acl/AclPutRemTest/testPutResourceEmptyObject()#org/mockito/Matchers/eq(T)
io/corbel/resources/rem/acl/AclPutRemTest/testPutResourceEmptyObject()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/resources/rem/acl/AclPutRemTest/testPutResourceEmptyObject()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/acl/AclPutRemTest/testPutResourceEmptyObject()#java/lang/Enum/toString()
io/corbel/resources/rem/acl/AclPutRemTest/testPutResourceEmptyObject()#java/util/Optional/of(T)
io/corbel/resources/rem/acl/AclPutRemTest/testPutResourceEmptyObject()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/resources/rem/acl/AclPutRemTest/testPutResourceEmptyObject()#io/corbel/resources/rem/acl/AclBaseRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)
io/corbel/resources/rem/acl/AclPutRemTest/testPutResourceEmptyObject()#io/corbel/resources/rem/request/RequestParameters/getAcceptedMediaTypes()
io/corbel/resources/rem/acl/AclPutRemTest/setUp()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/acl/AclPutRemTest/setUp()#io/corbel/resources/rem/request/RequestParameters/getTokenInfo()
io/corbel/resources/rem/acl/AclPutRemTest/setUp()#java/util/Collections/singletonList(T)
io/corbel/resources/rem/acl/AclPutRemTest/setUp()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/acl/AclPutRemTest/setUp()#io/corbel/lib/token/TokenInfo/getUserId()
io/corbel/resources/rem/acl/AclPutRemTest/setUp()#io/corbel/resources/rem/service/AclResourcesService/getResource(io.corbel.resources.rem.Rem,java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.List)
io/corbel/resources/rem/acl/AclPutRemTest/setUp()#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/rem/acl/AclPutRemTest/setUp()#org/mockito/Matchers/any()
io/corbel/resources/rem/acl/AclPutRemTest/setUp()#io/corbel/resources/rem/acl/AclBaseRem/setRemService(io.corbel.resources.rem.service.RemService)
io/corbel/resources/rem/acl/AclPutRemTest/setUp()#io/corbel/lib/token/TokenInfo/getGroups()
io/corbel/resources/rem/acl/AclPutRemTest/setUp()#org/mockito/Matchers/eq(T)
io/corbel/resources/rem/acl/AclPutRemTest/setUp()#io/corbel/resources/rem/request/RequestParameters/getRequestedDomain()
io/corbel/resources/rem/acl/AclPutRemTest/setUp()#io/corbel/resources/rem/acl/AclPutRem/AclPutRem(io.corbel.resources.rem.service.AclResourcesService,java.util.List)
io/corbel/resources/rem/acl/AclPutRemTest/testPutRelationNoUserId()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/acl/AclPutRemTest/testPutRelationNoUserId()#io/corbel/resources/rem/request/RequestParameters/getTokenInfo()
io/corbel/resources/rem/acl/AclPutRemTest/testPutRelationNoUserId()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/acl/AclPutRemTest/testPutRelationNoUserId()#io/corbel/lib/token/TokenInfo/getUserId()
io/corbel/resources/rem/acl/AclPutRemTest/testPutRelationNoUserId()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/resources/rem/acl/AclPutRemTest/testPutRelationNoUserId()#io/corbel/resources/rem/acl/AclBaseRem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)
io/corbel/resources/rem/acl/AclPutRemTest/testPutRelationNoUserId()#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/rem/acl/AclPutRemTest/testPutRelationNoUserId()#java/util/Optional/empty()
io/corbel/resources/rem/acl/AclPutRemTest/testPutRelationNoUserId()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/resources/rem/acl/AclPutRemTest/testPutRelationWithWildcardInOrigin()#io/corbel/resources/rem/request/RequestParameters/getOptionalApiParameters()
io/corbel/resources/rem/acl/AclPutRemTest/testPutRelationWithWildcardInOrigin()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/acl/AclPutRemTest/testPutRelationWithWildcardInOrigin()#io/corbel/resources/rem/request/ResourceId/ResourceId(java.lang.String)
io/corbel/resources/rem/acl/AclPutRemTest/testPutRelationWithWildcardInOrigin()#io/corbel/resources/rem/acl/AclBaseRem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)
io/corbel/resources/rem/acl/AclPutRemTest/testPutRelationWithWildcardInOrigin()#java/util/Optional/empty()
io/corbel/resources/rem/acl/AclPutRemTest/testPutRelationWithWildcardInOrigin()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/resources/rem/acl/AclPutRemTest/testPutRelationWithWildcardInOrigin()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/resources/rem/acl/AclPutRemTest/testPutRelationWithWildcardInOrigin()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/acl/AclPutRemTest/testPutRelationWithWildcardInOrigin()#java/util/Optional/of(T)
io/corbel/resources/rem/acl/AclPutRemTest/testPutRelationWithWildcardInOrigin()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/resources/rem/acl/AclPutRemTest/testPutRelationWithWildcardInOrigin()#io/corbel/resources/rem/request/RelationParameters/getPredicateResource()
io/corbel/resources/rem/acl/AclPutRemTest/testPutRelationWithWildcardInOrigin()#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/rem/acl/AclPutRemTest/testUpdateResourceObject()#javax/ws/rs/core/Response/getEntity()
io/corbel/resources/rem/acl/AclPutRemTest/testUpdateResourceObject()#java/io/ByteArrayInputStream/ByteArrayInputStream(byte[])
io/corbel/resources/rem/acl/AclPutRemTest/testUpdateResourceObject()#io/corbel/resources/rem/service/AclResourcesService/updateResource(io.corbel.resources.rem.Rem,java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.lang.Object,java.util.List)
io/corbel/resources/rem/acl/AclPutRemTest/testUpdateResourceObject()#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/rem/acl/AclPutRemTest/testUpdateResourceObject()#io/corbel/resources/rem/acl/AclTestUtils/getEntity(java.lang.String,java.lang.String)
io/corbel/resources/rem/acl/AclPutRemTest/testUpdateResourceObject()#java/lang/String/getBytes()
io/corbel/resources/rem/acl/AclPutRemTest/testUpdateResourceObject()#org/mockito/Matchers/eq(T)
io/corbel/resources/rem/acl/AclPutRemTest/testUpdateResourceObject()#com/google/gson/JsonElement/toString()
io/corbel/resources/rem/acl/AclPutRemTest/testUpdateResourceObject()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/resources/rem/acl/AclPutRemTest/testUpdateResourceObject()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/acl/AclPutRemTest/testUpdateResourceObject()#java/lang/Enum/toString()
io/corbel/resources/rem/acl/AclPutRemTest/testUpdateResourceObject()#io/corbel/resources/rem/acl/AclTestUtils/getEntityWithoutAcl()
io/corbel/resources/rem/acl/AclPutRemTest/testUpdateResourceObject()#java/util/Collections/singletonList(T)
io/corbel/resources/rem/acl/AclPutRemTest/testUpdateResourceObject()#io/corbel/resources/rem/service/AclResourcesService/getResourceIfIsAuthorized(java.lang.String,io.corbel.lib.token.TokenInfo,java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.model.AclPermission)
io/corbel/resources/rem/acl/AclPutRemTest/testUpdateResourceObject()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/resources/rem/acl/AclPutRemTest/testUpdateResourceObject()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/acl/AclPutRemTest/testUpdateResourceObject()#java/util/Optional/of(T)
io/corbel/resources/rem/acl/AclPutRemTest/testUpdateResourceObject()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/resources/rem/acl/AclPutRemTest/testUpdateResourceObject()#io/corbel/resources/rem/acl/AclBaseRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)
io/corbel/resources/rem/acl/AclPutRemTest/testUpdateResourceObject()#io/corbel/resources/rem/request/RequestParameters/getAcceptedMediaTypes()
io/corbel/resources/rem/acl/AclPutRemTest/testUpdateResourceObject()#org/mockito/Matchers/any()
io/corbel/resources/rem/acl/AclPutRemTest/testUpdateResourceObject()#java/util/Optional/empty()
io/corbel/resources/rem/acl/AclPutRemTest/testPutResourceNoUserId()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/acl/AclPutRemTest/testPutResourceNoUserId()#io/corbel/resources/rem/request/RequestParameters/getTokenInfo()
io/corbel/resources/rem/acl/AclPutRemTest/testPutResourceNoUserId()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/acl/AclPutRemTest/testPutResourceNoUserId()#io/corbel/lib/token/TokenInfo/getUserId()
io/corbel/resources/rem/acl/AclPutRemTest/testPutResourceNoUserId()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/resources/rem/acl/AclPutRemTest/testPutResourceNoUserId()#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/rem/acl/AclPutRemTest/testPutResourceNoUserId()#io/corbel/resources/rem/acl/AclBaseRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)
io/corbel/resources/rem/acl/AclPutRemTest/testPutResourceNoUserId()#java/util/Optional/empty()
io/corbel/resources/rem/acl/AclPutRemTest/testPutResourceNoUserId()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/iam/auth/provider/AbstractOAuth2Provider/exchangeForAccessGrant(io.corbel.iam.auth.OauthParams)#io/corbel/iam/auth/OauthParams/getCode()
io/corbel/iam/auth/provider/AbstractOAuth2Provider/exchangeForAccessGrant(io.corbel.iam.auth.OauthParams)#io/corbel/iam/exception/ExchangeOauthCodeException/ExchangeOauthCodeException(java.lang.String)
io/corbel/iam/auth/provider/AbstractOAuth2Provider/exchangeForAccessGrant(io.corbel.iam.auth.OauthParams)#io/corbel/iam/auth/OauthParams/getRedirectUri()
io/corbel/iam/auth/provider/AbstractOAuth2Provider/exchangeForAccessGrant(io.corbel.iam.auth.OauthParams)#org/springframework/social/oauth2/OAuth2Operations/exchangeForAccess(java.lang.String,java.lang.String,org.springframework.util.MultiValueMap)
io/corbel/iam/auth/provider/AbstractOAuth2Provider/exchangeForAccessGrant(io.corbel.iam.auth.OauthParams)#org/springframework/social/connect/support/OAuth2ConnectionFactory/getOAuthOperations()
io/corbel/iam/auth/provider/AbstractOAuth2Provider/exchangeForAccessGrant(io.corbel.iam.auth.OauthParams)#org/springframework/core/NestedRuntimeException/getMessage()
io/corbel/iam/auth/provider/AbstractOAuth2Provider/exchangeForAccessGrant(io.corbel.iam.auth.OauthParams)#org/slf4j/Logger/warn(java.lang.String,java.lang.Throwable)
io/corbel/iam/auth/provider/AbstractOAuth2Provider/throwMissingParameterException(java.lang.String)#io/corbel/iam/exception/MissingOAuthParamsException/MissingOAuthParamsException(java.lang.String)
io/corbel/iam/auth/provider/AbstractOAuth2Provider/setConfiguration(java.util.Map)#java/util/Map/get(java.lang.Object)
io/corbel/iam/auth/provider/AbstractOAuth2Provider/validateParams(io.corbel.iam.auth.OauthParams)#io/corbel/iam/auth/OauthParams/getCode()
io/corbel/iam/auth/provider/AbstractOAuth2Provider/validateParams(io.corbel.iam.auth.OauthParams)#io/corbel/iam/auth/provider/AbstractOAuth2Provider/throwMissingParameterException(java.lang.String)
io/corbel/iam/auth/provider/AbstractOAuth2Provider/validateParams(io.corbel.iam.auth.OauthParams)#io/corbel/iam/auth/OauthParams/getRedirectUri()
io/corbel/iam/auth/provider/AbstractOAuth2Provider/validateParams(io.corbel.iam.auth.OauthParams)#io/corbel/iam/auth/OauthParams/getAccessToken()
io/corbel/iam/auth/provider/AbstractOAuth2Provider/getAccessGrant(io.corbel.iam.auth.OauthParams)#io/corbel/iam/auth/OauthParams/getCode()
io/corbel/iam/auth/provider/AbstractOAuth2Provider/getAccessGrant(io.corbel.iam.auth.OauthParams)#org/springframework/social/oauth2/AccessGrant/AccessGrant(java.lang.String)
io/corbel/iam/auth/provider/AbstractOAuth2Provider/getAccessGrant(io.corbel.iam.auth.OauthParams)#io/corbel/iam/auth/provider/AbstractOAuth2Provider/exchangeForAccessGrant(io.corbel.iam.auth.OauthParams)
io/corbel/iam/auth/provider/AbstractOAuth2Provider/getAccessGrant(io.corbel.iam.auth.OauthParams)#io/corbel/iam/auth/provider/AbstractOAuth2Provider/validateParams(io.corbel.iam.auth.OauthParams)
io/corbel/iam/auth/provider/AbstractOAuth2Provider/getAccessGrant(io.corbel.iam.auth.OauthParams)#io/corbel/iam/auth/OauthParams/getAccessToken()
io/corbel/iam/auth/provider/AbstractOAuth2Provider/getAuthUrl(java.lang.String)#org/springframework/social/connect/support/OAuth2ConnectionFactory/getOAuthOperations()
io/corbel/iam/auth/provider/AbstractOAuth2Provider/getAuthUrl(java.lang.String)#io/corbel/iam/auth/provider/Provider/UrlGenerator/generateUrl(java.lang.String,java.lang.String,java.lang.String)
io/corbel/iam/auth/provider/AbstractOAuth2Provider/getAuthUrl(java.lang.String)#org/springframework/social/oauth2/OAuth2Parameters/OAuth2Parameters()
io/corbel/iam/auth/provider/AbstractOAuth2Provider/getAuthUrl(java.lang.String)#org/springframework/social/oauth2/OAuth2Parameters/setRedirectUri(java.lang.String)
io/corbel/iam/auth/provider/AbstractOAuth2Provider/getAuthUrl(java.lang.String)#org/springframework/social/oauth2/OAuth2Operations/buildAuthorizeUrl(org.springframework.social.oauth2.GrantType,org.springframework.social.oauth2.OAuth2Parameters)
io/corbel/resources/rem/restor/RestorDeleteRem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional)#io/corbel/resources/rem/request/RequestParameters/getCustomParameterValue(java.lang.String)
io/corbel/resources/rem/restor/RestorDeleteRem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional)#java/util/Optional/ofNullable(T)
io/corbel/resources/rem/restor/RestorDeleteRem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional)#java/util/Optional/map(java.util.function.Function)
io/corbel/resources/rem/restor/RestorDeleteRem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional)#java/util/Optional/orElseGet(java.util.function.Supplier)
io/corbel/resources/rem/restor/RestorDeleteRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#javax/ws/rs/core/Response/noContent()
io/corbel/resources/rem/restor/RestorDeleteRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#javax/ws/rs/core/Response/ResponseBuilder/build()
io/corbel/resources/rem/restor/RestorDeleteRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/resources/rem/restor/AbstractRestorRem/getMediaType(io.corbel.resources.rem.request.RequestParameters)
io/corbel/resources/rem/restor/RestorDeleteRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/resources/rem/request/ResourceId/getId()
io/corbel/resources/rem/restor/RestorDeleteRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/resources/rem/dao/RestorDao/deleteObject(io.corbel.resources.rem.model.RestorResourceUri)
io/corbel/resources/rem/restor/RestorDeleteRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/resources/rem/request/RequestParameters/getRequestedDomain()
io/corbel/resources/rem/restor/RestorDeleteRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/resources/rem/model/RestorResourceUri/RestorResourceUri(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
io/corbel/iam/service/DefaultGroupService/create(io.corbel.iam.model.Group)#io/corbel/iam/model/Group/setId(java.lang.String)
io/corbel/iam/service/DefaultGroupService/create(io.corbel.iam.model.Group)#io/corbel/iam/exception/GroupAlreadyExistsException/GroupAlreadyExistsException(java.lang.String)
io/corbel/iam/service/DefaultGroupService/create(io.corbel.iam.model.Group)#io/corbel/iam/model/Group/getName()
io/corbel/iam/service/DefaultGroupService/create(io.corbel.iam.model.Group)#io/corbel/iam/service/DefaultGroupService/checkScopes(java.util.Collection)
io/corbel/iam/service/DefaultGroupService/create(io.corbel.iam.model.Group)#io/corbel/iam/model/Group/getScopes()
io/corbel/iam/service/DefaultGroupService/create(io.corbel.iam.model.Group)#org/springframework/data/mongodb/repository/MongoRepository/insert(S)
io/corbel/iam/service/DefaultGroupService/create(io.corbel.iam.model.Group)#io/corbel/iam/model/Group/getDomain()
io/corbel/iam/service/DefaultGroupService/getById(java.lang.String,java.lang.String)#java/util/Optional/ofNullable(T)
io/corbel/iam/service/DefaultGroupService/getById(java.lang.String,java.lang.String)#io/corbel/iam/repository/GroupRepository/findByIdAndDomain(java.lang.String,java.lang.String)
io/corbel/iam/service/DefaultGroupService/delete(java.lang.String,java.lang.String)#io/corbel/iam/repository/GroupRepository/deleteByIdAndDomain(java.lang.String,java.lang.String)
io/corbel/iam/service/DefaultGroupService/getAll(java.lang.String,java.util.List,io.corbel.lib.queries.request.Pagination,io.corbel.lib.queries.request.Sort)#io/corbel/iam/repository/GroupRepositoryCustom/findByDomain(java.lang.String,java.util.List,io.corbel.lib.queries.request.Pagination,io.corbel.lib.queries.request.Sort)
io/corbel/iam/service/DefaultGroupService/addScopes(java.lang.String,java.lang.String[])#io/corbel/iam/repository/HasScopesRepository/addScopes(ID,java.lang.String[])
io/corbel/iam/service/DefaultGroupService/addScopes(java.lang.String,java.lang.String[])#java/util/Arrays/asList(T[])
io/corbel/iam/service/DefaultGroupService/addScopes(java.lang.String,java.lang.String[])#io/corbel/iam/service/DefaultGroupService/checkScopes(java.util.Collection)
io/corbel/iam/service/DefaultGroupService/removeScopes(java.lang.String,java.lang.String[])#io/corbel/iam/repository/HasScopesRepository/removeScopes(ID,java.lang.String[])
io/corbel/iam/service/DefaultGroupService/checkScopes(java.util.Collection)#java/util/stream/Stream/collect(java.util.stream.Collector)
io/corbel/iam/service/DefaultGroupService/checkScopes(java.util.Collection)#java/util/Collection/stream()
io/corbel/iam/service/DefaultGroupService/checkScopes(java.util.Collection)#java/util/stream/Collectors/joining(java.lang.CharSequence)
io/corbel/iam/service/DefaultGroupService/checkScopes(java.util.Collection)#java/util/stream/Stream/filter(java.util.function.Predicate)
io/corbel/iam/service/DefaultGroupService/checkScopes(java.util.Collection)#java/lang/String/isEmpty()
io/corbel/iam/service/DefaultGroupService/checkScopes(java.util.Collection)#io/corbel/iam/exception/NotExistentScopeException/NotExistentScopeException(java.lang.String)
io/corbel/iam/service/DefaultGroupService/checkScopes(java.util.Collection)#org/springframework/util/CollectionUtils/isEmpty(java.util.Collection)
io/corbel/iam/service/DefaultGroupService/getGroupScopes(java.lang.String,java.util.Collection)#java/util/Collection/stream()
io/corbel/iam/service/DefaultGroupService/getGroupScopes(java.lang.String,java.util.Collection)#java/util/stream/Stream/forEach(java.util.function.Consumer)
io/corbel/iam/service/DefaultGroupService/getGroupScopes(java.lang.String,java.util.Collection)#java/util/HashSet/HashSet()
io/corbel/iam/service/DefaultGroupService/getById(java.lang.String)#org/springframework/data/repository/CrudRepository/findOne(ID)
io/corbel/iam/service/DefaultGroupService/getById(java.lang.String)#java/util/Optional/ofNullable(T)
io/corbel/resources/rem/acl/AclPostManagedCollectionRem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional)#java/util/Optional/filter(java.util.function.Predicate)
io/corbel/resources/rem/acl/AclPostManagedCollectionRem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional)#java/util/Optional/map(java.util.function.Function)
io/corbel/resources/rem/acl/AclPostManagedCollectionRem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional)#java/util/Optional/orElseGet(java.util.function.Supplier)
io/corbel/resources/rem/health/ElasticSearchHealthCheck/check()#com/codahale/metrics/health/HealthCheck/Result/healthy(java.lang.String)
io/corbel/resources/rem/health/ElasticSearchHealthCheck/check()#com/codahale/metrics/health/HealthCheck/Result/healthy()
io/corbel/resources/rem/health/ElasticSearchHealthCheck/check()#com/codahale/metrics/health/HealthCheck/Result/unhealthy(java.lang.String)
io/corbel/resources/rem/health/ElasticSearchHealthCheck/check()#java/util/List/isEmpty()
io/corbel/resources/rem/health/ElasticSearchHealthCheck/check()#org/elasticsearch/client/transport/TransportClient/connectedNodes()
io/corbel/iam/auth/rule/ClientSideAuthenticationAllowedAuthorizationRuleTest/setup()#io/corbel/iam/auth/rule/ClientSideAuthenticationAllowedAuthorizationRule/ClientSideAuthenticationAllowedAuthorizationRule()
io/corbel/iam/auth/rule/ClientSideAuthenticationAllowedAuthorizationRuleTest/testWithoutAttribute()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/auth/rule/ClientSideAuthenticationAllowedAuthorizationRuleTest/testWithoutAttribute()#io/corbel/iam/auth/AuthorizationRequestContext/hasPrincipal()
io/corbel/iam/auth/rule/ClientSideAuthenticationAllowedAuthorizationRuleTest/testWithoutAttribute()#io/corbel/iam/auth/AuthorizationRequestContext/getIssuerClient()
io/corbel/iam/auth/rule/ClientSideAuthenticationAllowedAuthorizationRuleTest/testWithoutAttribute()#io/corbel/iam/auth/rule/ClientSideAuthenticationAllowedAuthorizationRule/process(io.corbel.iam.auth.AuthorizationRequestContext)
io/corbel/iam/auth/rule/ClientSideAuthenticationAllowedAuthorizationRuleTest/testWithoutAttribute()#org/mockito/Mockito/when(T)
io/corbel/iam/auth/rule/ClientSideAuthenticationAllowedAuthorizationRuleTest/testWithoutAttribute()#io/corbel/iam/model/Client/getClientSideAuthentication()
io/corbel/iam/auth/rule/ClientSideAuthenticationAllowedAuthorizationRuleTest/testWithFalseAttributeButNotPrn()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/auth/rule/ClientSideAuthenticationAllowedAuthorizationRuleTest/testWithFalseAttributeButNotPrn()#io/corbel/iam/auth/AuthorizationRequestContext/hasPrincipal()
io/corbel/iam/auth/rule/ClientSideAuthenticationAllowedAuthorizationRuleTest/testWithFalseAttributeButNotPrn()#io/corbel/iam/auth/AuthorizationRequestContext/getIssuerClient()
io/corbel/iam/auth/rule/ClientSideAuthenticationAllowedAuthorizationRuleTest/testWithFalseAttributeButNotPrn()#io/corbel/iam/auth/rule/ClientSideAuthenticationAllowedAuthorizationRule/process(io.corbel.iam.auth.AuthorizationRequestContext)
io/corbel/iam/auth/rule/ClientSideAuthenticationAllowedAuthorizationRuleTest/testWithFalseAttributeButNotPrn()#org/mockito/Mockito/when(T)
io/corbel/iam/auth/rule/ClientSideAuthenticationAllowedAuthorizationRuleTest/testWithFalseAttributeButNotPrn()#io/corbel/iam/model/Client/getClientSideAuthentication()
io/corbel/iam/auth/rule/ClientSideAuthenticationAllowedAuthorizationRuleTest/testOk()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/auth/rule/ClientSideAuthenticationAllowedAuthorizationRuleTest/testOk()#io/corbel/iam/auth/AuthorizationRequestContext/hasPrincipal()
io/corbel/iam/auth/rule/ClientSideAuthenticationAllowedAuthorizationRuleTest/testOk()#io/corbel/iam/auth/AuthorizationRequestContext/getIssuerClient()
io/corbel/iam/auth/rule/ClientSideAuthenticationAllowedAuthorizationRuleTest/testOk()#io/corbel/iam/auth/rule/ClientSideAuthenticationAllowedAuthorizationRule/process(io.corbel.iam.auth.AuthorizationRequestContext)
io/corbel/iam/auth/rule/ClientSideAuthenticationAllowedAuthorizationRuleTest/testOk()#org/mockito/Mockito/when(T)
io/corbel/iam/auth/rule/ClientSideAuthenticationAllowedAuthorizationRuleTest/testOk()#io/corbel/iam/model/Client/getClientSideAuthentication()
io/corbel/iam/auth/rule/ClientSideAuthenticationAllowedAuthorizationRuleTest/testWithFalseAttribute()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/auth/rule/ClientSideAuthenticationAllowedAuthorizationRuleTest/testWithFalseAttribute()#io/corbel/iam/auth/AuthorizationRequestContext/hasPrincipal()
io/corbel/iam/auth/rule/ClientSideAuthenticationAllowedAuthorizationRuleTest/testWithFalseAttribute()#io/corbel/iam/auth/AuthorizationRequestContext/getIssuerClient()
io/corbel/iam/auth/rule/ClientSideAuthenticationAllowedAuthorizationRuleTest/testWithFalseAttribute()#io/corbel/iam/auth/rule/ClientSideAuthenticationAllowedAuthorizationRule/process(io.corbel.iam.auth.AuthorizationRequestContext)
io/corbel/iam/auth/rule/ClientSideAuthenticationAllowedAuthorizationRuleTest/testWithFalseAttribute()#org/mockito/Mockito/when(T)
io/corbel/iam/auth/rule/ClientSideAuthenticationAllowedAuthorizationRuleTest/testWithFalseAttribute()#io/corbel/iam/model/Client/getClientSideAuthentication()
io/corbel/webfs/WebfsRunner/main(java.lang.String[])#io/corbel/webfs/WebfsRunner/WebfsRunner()
io/corbel/webfs/WebfsRunner/main(java.lang.String[])#org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)
io/corbel/webfs/WebfsRunner/main(java.lang.String[])#io/corbel/lib/ws/cli/ServiceRunner/run(java.lang.String[])
io/corbel/webfs/WebfsRunner/configureService(io.dropwizard.setup.Environment,org.springframework.context.ApplicationContext)#com/codahale/metrics/health/HealthCheckRegistry/register(java.lang.String,com.codahale.metrics.health.HealthCheck)
io/corbel/webfs/WebfsRunner/configureService(io.dropwizard.setup.Environment,org.springframework.context.ApplicationContext)#io/dropwizard/setup/Environment/jersey()
io/corbel/webfs/WebfsRunner/configureService(io.dropwizard.setup.Environment,org.springframework.context.ApplicationContext)#io/corbel/lib/ws/health/BasicHealthCheck/BasicHealthCheck()
io/corbel/webfs/WebfsRunner/configureService(io.dropwizard.setup.Environment,org.springframework.context.ApplicationContext)#io/corbel/lib/ws/cli/ServiceRunnerWithVersionResource/configureService(io.dropwizard.setup.Environment,org.springframework.context.ApplicationContext)
io/corbel/webfs/WebfsRunner/configureService(io.dropwizard.setup.Environment,org.springframework.context.ApplicationContext)#org/springframework/beans/factory/BeanFactory/getBean(java.lang.Class)
io/corbel/webfs/WebfsRunner/configureService(io.dropwizard.setup.Environment,org.springframework.context.ApplicationContext)#io/dropwizard/setup/Environment/healthChecks()
io/corbel/webfs/WebfsRunner/configureService(io.dropwizard.setup.Environment,org.springframework.context.ApplicationContext)#io/dropwizard/jersey/setup/JerseyEnvironment/register(java.lang.Object)
io/corbel/evci/converter/DomainObjectJsonMessageConverterFactory/createConverter(java.lang.reflect.Type)#io/corbel/evci/converter/DomainObjectJsonMessageConverter/DomainObjectJsonMessageConverter(java.lang.reflect.Type,com.fasterxml.jackson.databind.ObjectMapper)
io/corbel/resources/rem/resmi/RestorGetRemTest/testGetNotExistsResource()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/resmi/RestorGetRemTest/testGetNotExistsResource()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/resmi/RestorGetRemTest/testGetNotExistsResource()#io/corbel/resources/rem/request/ResourceId/ResourceId(java.lang.String)
io/corbel/resources/rem/resmi/RestorGetRemTest/testGetNotExistsResource()#java/util/Arrays/asList(T[])
io/corbel/resources/rem/resmi/RestorGetRemTest/testGetNotExistsResource()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/resources/rem/resmi/RestorGetRemTest/testGetNotExistsResource()#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/rem/resmi/RestorGetRemTest/testGetNotExistsResource()#io/corbel/resources/rem/request/RequestParameters/getAcceptedMediaTypes()
io/corbel/resources/rem/resmi/RestorGetRemTest/testGetNotExistsResource()#io/corbel/resources/rem/restor/RestorGetRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)
io/corbel/resources/rem/resmi/RestorGetRemTest/testGetNotExistsResource()#java/util/Optional/empty()
io/corbel/resources/rem/resmi/RestorGetRemTest/testGetNotExistsResource()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/resources/rem/resmi/RestorGetRemTest/setup()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/resources/rem/resmi/RestorGetRemTest/setup()#io/corbel/resources/rem/restor/RestorGetRem/RestorGetRem(io.corbel.resources.rem.dao.RestorDao)
io/corbel/resources/rem/resmi/RestorGetRemTest/testGetOkResource()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/resmi/RestorGetRemTest/testGetOkResource()#org/springframework/util/MimeType/toString()
io/corbel/resources/rem/resmi/RestorGetRemTest/testGetOkResource()#io/corbel/resources/rem/dao/RestorDao/getObject(io.corbel.resources.rem.model.RestorResourceUri)
io/corbel/resources/rem/resmi/RestorGetRemTest/testGetOkResource()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/resmi/RestorGetRemTest/testGetOkResource()#io/corbel/resources/rem/request/ResourceId/ResourceId(java.lang.String)
io/corbel/resources/rem/resmi/RestorGetRemTest/testGetOkResource()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/resources/rem/resmi/RestorGetRemTest/testGetOkResource()#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/rem/resmi/RestorGetRemTest/testGetOkResource()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/resources/rem/resmi/RestorGetRemTest/testGetOkResource()#io/corbel/resources/rem/request/RequestParameters/getAcceptedMediaTypes()
io/corbel/resources/rem/resmi/RestorGetRemTest/testGetOkResource()#io/corbel/resources/rem/restor/RestorGetRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)
io/corbel/resources/rem/resmi/RestorGetRemTest/testGetOkResource()#java/util/Optional/empty()
io/corbel/resources/rem/resmi/RestorGetRemTest/testGetOkResource()#javax/ws/rs/core/Response/getHeaderString(java.lang.String)
io/corbel/resources/rem/resmi/RestorGetRemTest/testGetOkResource()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/resources/rem/resmi/RestorGetRemTest/testGetOkResource()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/resources/rem/resmi/RestorGetRemTest/testGetOkResource()#java/lang/Object/toString()
io/corbel/resources/rem/resmi/RestorGetRemTest/testGetOkResource()#javax/ws/rs/core/MultivaluedMap/getFirst(K)
io/corbel/resources/rem/resmi/RestorGetRemTest/testGetOkResource()#io/corbel/resources/rem/request/RequestParameters/getRequestedDomain()
io/corbel/resources/rem/resmi/RestorGetRemTest/testGetOkResource()#io/corbel/resources/rem/model/RestorResourceUri/RestorResourceUri(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
io/corbel/resources/rem/resmi/RestorGetRemTest/testGetOkResource()#io/corbel/resources/rem/model/RestorObject/RestorObject(java.lang.String,java.io.InputStream,java.lang.Long,java.lang.String)
io/corbel/resources/rem/resmi/RestorGetRemTest/testGetOkResource()#javax/ws/rs/core/Response/getMetadata()
io/corbel/resources/rem/resmi/RestorGetRemTest/testGetOkResource()#java/util/Arrays/asList(T[])
io/corbel/resources/rem/service/DefaultImageOperationsService/IMOperationFactory/create()#org/im4java/core/IMOperation/IMOperation()
io/corbel/resources/rem/acl/query/AclQueryBuilderTest/getListQueryLiteral(java.lang.String)#java/lang/Enum/name()
io/corbel/resources/rem/acl/query/AclQueryBuilderTest/getListQueryLiteral(java.lang.String)#java/util/Arrays/asList(T[])
io/corbel/resources/rem/acl/query/AclQueryBuilderTest/getListQueryLiteral(java.lang.String)#io/corbel/lib/queries/QueryNodeImpl/QueryNodeImpl(io.corbel.lib.queries.request.QueryOperator,java.lang.String,io.corbel.lib.queries.request.QueryLiteral)
io/corbel/resources/rem/acl/query/AclQueryBuilderTest/getListQueryLiteral(java.lang.String)#io/corbel/lib/queries/StringQueryLiteral/StringQueryLiteral(java.lang.String)
io/corbel/resources/rem/acl/query/AclQueryBuilderTest/getListQueryLiteral(java.lang.String)#io/corbel/lib/queries/ListQueryLiteral/ListQueryLiteral(java.util.List)
io/corbel/resources/rem/acl/query/AclQueryBuilderTest/testWithUserId()#org/fest/assertions/api/BooleanAssert/isTrue()
io/corbel/resources/rem/acl/query/AclQueryBuilderTest/testWithUserId()#io/corbel/resources/rem/acl/query/AclQueryBuilderTest/getResourceQuery(io.corbel.lib.queries.request.QueryNode)
io/corbel/resources/rem/acl/query/AclQueryBuilderTest/testWithUserId()#io/corbel/resources/rem/acl/query/AclQueryBuilderTest/getListQueryLiteral(java.lang.String)
io/corbel/resources/rem/acl/query/AclQueryBuilderTest/testWithUserId()#org/fest/assertions/api/Assertions/assertThat(boolean)
io/corbel/resources/rem/acl/query/AclQueryBuilderTest/testWithUserId()#io/corbel/resources/rem/acl/query/AclQueryBuilder/AclQueryBuilder(java.util.Optional,java.util.Collection)
io/corbel/resources/rem/acl/query/AclQueryBuilderTest/testWithUserId()#io/corbel/resources/rem/acl/query/AclQueryBuilder/build(java.util.List)
io/corbel/resources/rem/acl/query/AclQueryBuilderTest/testWithUserId()#java/util/Collections/emptyList()
io/corbel/resources/rem/acl/query/AclQueryBuilderTest/testWithUserId()#java/util/List/contains(java.lang.Object)
io/corbel/resources/rem/acl/query/AclQueryBuilderTest/testWithGroups()#org/fest/assertions/api/BooleanAssert/isTrue()
io/corbel/resources/rem/acl/query/AclQueryBuilderTest/testWithGroups()#io/corbel/resources/rem/acl/query/AclQueryBuilderTest/getResourceQuery(io.corbel.lib.queries.request.QueryNode)
io/corbel/resources/rem/acl/query/AclQueryBuilderTest/testWithGroups()#io/corbel/resources/rem/acl/query/AclQueryBuilderTest/getListQueryLiteral(java.lang.String)
io/corbel/resources/rem/acl/query/AclQueryBuilderTest/testWithGroups()#org/fest/assertions/api/Assertions/assertThat(boolean)
io/corbel/resources/rem/acl/query/AclQueryBuilderTest/testWithGroups()#io/corbel/resources/rem/acl/query/AclQueryBuilder/AclQueryBuilder(java.util.Optional,java.util.Collection)
io/corbel/resources/rem/acl/query/AclQueryBuilderTest/testWithGroups()#io/corbel/resources/rem/acl/query/AclQueryBuilder/build(java.util.List)
io/corbel/resources/rem/acl/query/AclQueryBuilderTest/testWithGroups()#java/util/Collections/emptyList()
io/corbel/resources/rem/acl/query/AclQueryBuilderTest/testWithGroups()#java/util/Optional/empty()
io/corbel/resources/rem/acl/query/AclQueryBuilderTest/testWithGroups()#java/util/List/contains(java.lang.Object)
io/corbel/resources/rem/acl/query/AclQueryBuilderTest/testWithQueries()#io/corbel/resources/rem/acl/query/AclQueryBuilderTest/getResourceQuery(io.corbel.lib.queries.request.QueryNode)
io/corbel/resources/rem/acl/query/AclQueryBuilderTest/testWithQueries()#io/corbel/resources/rem/acl/query/AclQueryBuilderTest/getListQueryLiteral(java.lang.String)
io/corbel/resources/rem/acl/query/AclQueryBuilderTest/testWithQueries()#io/corbel/resources/rem/acl/query/AclQueryBuilder/AclQueryBuilder(java.util.Optional,java.util.Collection)
io/corbel/resources/rem/acl/query/AclQueryBuilderTest/testWithQueries()#io/corbel/resources/rem/acl/query/AclQueryBuilder/build(java.util.List)
io/corbel/resources/rem/acl/query/AclQueryBuilderTest/testWithQueries()#java/util/Arrays/asList(T[])
io/corbel/resources/rem/acl/query/AclQueryBuilderTest/testWithQueries()#io/corbel/resources/rem/acl/query/AclQueryBuilderTest/getTestQueryLiteral()
io/corbel/resources/rem/acl/query/AclQueryBuilderTest/testWithQueries()#java/lang/Iterable/forEach(java.util.function.Consumer)
io/corbel/resources/rem/acl/query/AclQueryBuilderTest/getTestQueryLiteral()#io/corbel/lib/queries/QueryNodeImpl/QueryNodeImpl(io.corbel.lib.queries.request.QueryOperator,java.lang.String,io.corbel.lib.queries.request.QueryLiteral)
io/corbel/resources/rem/acl/query/AclQueryBuilderTest/getTestQueryLiteral()#io/corbel/lib/queries/StringQueryLiteral/StringQueryLiteral(java.lang.String)
io/corbel/resources/rem/acl/query/AclQueryBuilderTest/getResourceQuery(io.corbel.lib.queries.request.QueryNode)#io/corbel/lib/queries/request/ResourceQuery/addQueryNode(io.corbel.lib.queries.request.QueryNode)
io/corbel/resources/rem/acl/query/AclQueryBuilderTest/getResourceQuery(io.corbel.lib.queries.request.QueryNode)#io/corbel/lib/queries/request/ResourceQuery/ResourceQuery()
io/corbel/resources/rem/service/WithSearchResmiService/condicionalUpdateRelation(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject,java.util.List)#io/corbel/resources/rem/service/WithSearchResmiService/indexInSearchService(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject)
io/corbel/resources/rem/service/WithSearchResmiService/condicionalUpdateRelation(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject,java.util.List)#io/corbel/resources/rem/service/DefaultResmiService/condicionalUpdateRelation(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject,java.util.List)
io/corbel/resources/rem/service/WithSearchResmiService/condicionalUpdateRelation(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject,java.util.List)#io/corbel/resources/rem/model/ResourceUri/getTypeId()
io/corbel/resources/rem/service/WithSearchResmiService/condicionalUpdateRelation(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject,java.util.List)#com/google/gson/JsonObject/addProperty(java.lang.String,java.lang.String)
io/corbel/resources/rem/service/WithSearchResmiService/indexInSearchService(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject)#io/corbel/resources/rem/search/ResmiSearch/indexDocument(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject)
io/corbel/resources/rem/service/WithSearchResmiService/indexInSearchService(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject)#io/corbel/resources/rem/service/SearchableFieldsRegistry/getFieldsFromResourceUri(io.corbel.resources.rem.model.ResourceUri)
io/corbel/resources/rem/service/WithSearchResmiService/indexInSearchService(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject)#io/corbel/resources/rem/service/WithSearchResmiService/pickJSonFields(com.google.gson.JsonObject,java.util.Set)
io/corbel/resources/rem/service/WithSearchResmiService/indexInSearchService(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject)#java/util/Set/isEmpty()
io/corbel/resources/rem/service/WithSearchResmiService/initSearchableFieldsRegistry()#java/util/Collection/stream()
io/corbel/resources/rem/service/WithSearchResmiService/initSearchableFieldsRegistry()#java/util/stream/Stream/forEach(java.util.function.Consumer)
io/corbel/resources/rem/service/WithSearchResmiService/initSearchableFieldsRegistry()#io/corbel/resources/rem/service/WithSearchResmiService/getSearchableFields()
io/corbel/resources/rem/service/WithSearchResmiService/pickJSonFields(com.google.gson.JsonObject,java.util.Set)#java/util/Collection/stream()
io/corbel/resources/rem/service/WithSearchResmiService/pickJSonFields(com.google.gson.JsonObject,java.util.Set)#java/util/Set/contains(java.lang.Object)
io/corbel/resources/rem/service/WithSearchResmiService/pickJSonFields(com.google.gson.JsonObject,java.util.Set)#java/util/stream/Stream/forEach(java.util.function.Consumer)
io/corbel/resources/rem/service/WithSearchResmiService/pickJSonFields(com.google.gson.JsonObject,java.util.Set)#com/google/gson/JsonObject/JsonObject()
io/corbel/resources/rem/service/WithSearchResmiService/pickJSonFields(com.google.gson.JsonObject,java.util.Set)#java/util/stream/Stream/filter(java.util.function.Predicate)
io/corbel/resources/rem/service/WithSearchResmiService/pickJSonFields(com.google.gson.JsonObject,java.util.Set)#java/util/Set/add(E)
io/corbel/resources/rem/service/WithSearchResmiService/aggregate(io.corbel.resources.rem.model.ResourceUri,io.corbel.resources.rem.request.CollectionParameters)#java/util/Optional/get()
io/corbel/resources/rem/service/WithSearchResmiService/aggregate(io.corbel.resources.rem.model.ResourceUri,io.corbel.resources.rem.request.CollectionParameters)#io/corbel/resources/rem/service/WithSearchResmiService/countWithSearchService(io.corbel.resources.rem.model.ResourceUri,io.corbel.resources.rem.request.CollectionParameters)
io/corbel/resources/rem/service/WithSearchResmiService/aggregate(io.corbel.resources.rem.model.ResourceUri,io.corbel.resources.rem.request.CollectionParameters)#io/corbel/resources/rem/request/CollectionParameters/getAggregation()
io/corbel/resources/rem/service/WithSearchResmiService/aggregate(io.corbel.resources.rem.model.ResourceUri,io.corbel.resources.rem.request.CollectionParameters)#io/corbel/resources/rem/service/DefaultResmiService/aggregate(io.corbel.resources.rem.model.ResourceUri,io.corbel.resources.rem.request.CollectionParameters)
io/corbel/resources/rem/service/WithSearchResmiService/aggregate(io.corbel.resources.rem.model.ResourceUri,io.corbel.resources.rem.request.CollectionParameters)#com/google/gson/Gson/toJsonTree(java.lang.Object)
io/corbel/resources/rem/service/WithSearchResmiService/aggregate(io.corbel.resources.rem.model.ResourceUri,io.corbel.resources.rem.request.CollectionParameters)#java/util/Optional/isPresent()
io/corbel/resources/rem/service/WithSearchResmiService/aggregate(io.corbel.resources.rem.model.ResourceUri,io.corbel.resources.rem.request.CollectionParameters)#io/corbel/lib/queries/request/Aggregation/getOperator()
io/corbel/resources/rem/service/WithSearchResmiService/aggregate(io.corbel.resources.rem.model.ResourceUri,io.corbel.resources.rem.request.CollectionParameters)#io/corbel/resources/rem/request/CollectionParameters/getSearch()
io/corbel/resources/rem/service/WithSearchResmiService/deleteInSearchService(io.corbel.resources.rem.model.ResourceUri,java.util.List)#io/corbel/resources/rem/model/GenericDocument/getId()
io/corbel/resources/rem/service/WithSearchResmiService/deleteInSearchService(io.corbel.resources.rem.model.ResourceUri,java.util.List)#io/corbel/resources/rem/service/SearchableFieldsRegistry/getFieldsFromResourceUri(io.corbel.resources.rem.model.ResourceUri)
io/corbel/resources/rem/service/WithSearchResmiService/deleteInSearchService(io.corbel.resources.rem.model.ResourceUri,java.util.List)#java/util/Set/isEmpty()
io/corbel/resources/rem/service/WithSearchResmiService/deleteInSearchService(io.corbel.resources.rem.model.ResourceUri,java.util.List)#io/corbel/resources/rem/model/ResourceUri/setRelationId(java.lang.String)
io/corbel/resources/rem/service/WithSearchResmiService/deleteInSearchService(io.corbel.resources.rem.model.ResourceUri,java.util.List)#io/corbel/resources/rem/search/ResmiSearch/deleteDocument(io.corbel.resources.rem.model.ResourceUri)
io/corbel/resources/rem/service/WithSearchResmiService/getSearchableFields()#io/corbel/resources/rem/model/ResourceUri/ResourceUri(java.lang.String,java.lang.String)
io/corbel/resources/rem/service/WithSearchResmiService/getSearchableFields()#io/corbel/resources/rem/dao/MongoResmiDao/findAll(io.corbel.resources.rem.model.ResourceUri,java.lang.Class)
io/corbel/resources/rem/service/WithSearchResmiService/deleteInSearchService(io.corbel.resources.rem.model.ResourceUri)#io/corbel/resources/rem/service/SearchableFieldsRegistry/getFieldsFromResourceUri(io.corbel.resources.rem.model.ResourceUri)
io/corbel/resources/rem/service/WithSearchResmiService/deleteInSearchService(io.corbel.resources.rem.model.ResourceUri)#java/util/Set/isEmpty()
io/corbel/resources/rem/service/WithSearchResmiService/deleteInSearchService(io.corbel.resources.rem.model.ResourceUri)#io/corbel/resources/rem/search/ResmiSearch/deleteDocument(io.corbel.resources.rem.model.ResourceUri)
io/corbel/resources/rem/service/WithSearchResmiService/addRelationQuery(io.corbel.resources.rem.model.ResourceUri,java.util.List)#io/corbel/lib/queries/request/ResourceQuery/addQueryNode(io.corbel.lib.queries.request.QueryNode)
io/corbel/resources/rem/service/WithSearchResmiService/addRelationQuery(io.corbel.resources.rem.model.ResourceUri,java.util.List)#io/corbel/lib/queries/builder/ResourceQueryBuilder/build()
io/corbel/resources/rem/service/WithSearchResmiService/addRelationQuery(io.corbel.resources.rem.model.ResourceUri,java.util.List)#io/corbel/lib/queries/builder/ResourceQueryBuilder/ResourceQueryBuilder()
io/corbel/resources/rem/service/WithSearchResmiService/addRelationQuery(io.corbel.resources.rem.model.ResourceUri,java.util.List)#java/util/List/isEmpty()
io/corbel/resources/rem/service/WithSearchResmiService/addRelationQuery(io.corbel.resources.rem.model.ResourceUri,java.util.List)#io/corbel/resources/rem/model/ResourceUri/getTypeId()
io/corbel/resources/rem/service/WithSearchResmiService/addRelationQuery(io.corbel.resources.rem.model.ResourceUri,java.util.List)#io/corbel/resources/rem/model/ResourceUri/isRelationWildcard()
io/corbel/resources/rem/service/WithSearchResmiService/addRelationQuery(io.corbel.resources.rem.model.ResourceUri,java.util.List)#io/corbel/lib/queries/QueryNodeImpl/QueryNodeImpl(io.corbel.lib.queries.request.QueryOperator,java.lang.String,io.corbel.lib.queries.request.QueryLiteral)
io/corbel/resources/rem/service/WithSearchResmiService/addRelationQuery(io.corbel.resources.rem.model.ResourceUri,java.util.List)#io/corbel/resources/rem/model/ResourceUri/isRelation()
io/corbel/resources/rem/service/WithSearchResmiService/addRelationQuery(io.corbel.resources.rem.model.ResourceUri,java.util.List)#io/corbel/lib/queries/StringQueryLiteral/StringQueryLiteral(java.lang.String)
io/corbel/resources/rem/service/WithSearchResmiService/addRelationQuery(io.corbel.resources.rem.model.ResourceUri,java.util.List)#java/util/List/add(E)
io/corbel/resources/rem/service/WithSearchResmiService/findInSearchService(io.corbel.resources.rem.model.ResourceUri,io.corbel.resources.rem.request.CollectionParameters)#io/corbel/resources/rem/service/WithSearchResmiService/addRelationQuery(io.corbel.resources.rem.model.ResourceUri,java.util.List)
io/corbel/resources/rem/service/WithSearchResmiService/findInSearchService(io.corbel.resources.rem.model.ResourceUri,io.corbel.resources.rem.request.CollectionParameters)#io/corbel/resources/rem/search/ResmiSearch/search(io.corbel.resources.rem.model.ResourceUri,java.lang.String,java.util.Map,int,int)
io/corbel/resources/rem/service/WithSearchResmiService/findInSearchService(io.corbel.resources.rem.model.ResourceUri,io.corbel.resources.rem.request.CollectionParameters)#io/corbel/resources/rem/request/CollectionParameters/getSort()
io/corbel/resources/rem/service/WithSearchResmiService/findInSearchService(io.corbel.resources.rem.model.ResourceUri,io.corbel.resources.rem.request.CollectionParameters)#io/corbel/resources/rem/service/WithSearchResmiService/findRelation(io.corbel.resources.rem.model.ResourceUri,java.util.Optional)
io/corbel/resources/rem/service/WithSearchResmiService/findInSearchService(io.corbel.resources.rem.model.ResourceUri,io.corbel.resources.rem.request.CollectionParameters)#io/corbel/resources/rem/service/WithSearchResmiService/buildCollectionParametersForBinding(io.corbel.resources.rem.request.CollectionParameters,com.google.gson.JsonArray)
io/corbel/resources/rem/service/WithSearchResmiService/findInSearchService(io.corbel.resources.rem.model.ResourceUri,io.corbel.resources.rem.request.CollectionParameters)#java/util/Optional/of(T)
io/corbel/resources/rem/service/WithSearchResmiService/findInSearchService(io.corbel.resources.rem.model.ResourceUri,io.corbel.resources.rem.request.CollectionParameters)#io/corbel/resources/rem/request/CollectionParameters/getQueries()
io/corbel/resources/rem/service/WithSearchResmiService/findInSearchService(io.corbel.resources.rem.model.ResourceUri,io.corbel.resources.rem.request.CollectionParameters)#io/corbel/resources/rem/request/CollectionParameters/getSearch()
io/corbel/resources/rem/service/WithSearchResmiService/findInSearchService(io.corbel.resources.rem.model.ResourceUri,io.corbel.resources.rem.request.CollectionParameters)#java/util/Optional/isPresent()
io/corbel/resources/rem/service/WithSearchResmiService/findInSearchService(io.corbel.resources.rem.model.ResourceUri,io.corbel.resources.rem.request.CollectionParameters)#java/util/Optional/orElseGet(java.util.function.Supplier)
io/corbel/resources/rem/service/WithSearchResmiService/findInSearchService(io.corbel.resources.rem.model.ResourceUri,io.corbel.resources.rem.request.CollectionParameters)#io/corbel/lib/queries/request/Pagination/getPage()
io/corbel/resources/rem/service/WithSearchResmiService/findInSearchService(io.corbel.resources.rem.model.ResourceUri,io.corbel.resources.rem.request.CollectionParameters)#io/corbel/lib/queries/request/Search/indexFieldsOnly()
io/corbel/resources/rem/service/WithSearchResmiService/findInSearchService(io.corbel.resources.rem.model.ResourceUri,io.corbel.resources.rem.request.CollectionParameters)#java/util/Optional/get()
io/corbel/resources/rem/service/WithSearchResmiService/findInSearchService(io.corbel.resources.rem.model.ResourceUri,io.corbel.resources.rem.request.CollectionParameters)#io/corbel/lib/queries/request/Pagination/getPageSize()
io/corbel/resources/rem/service/WithSearchResmiService/findInSearchService(io.corbel.resources.rem.model.ResourceUri,io.corbel.resources.rem.request.CollectionParameters)#io/corbel/resources/rem/request/CollectionParameters/getPagination()
io/corbel/resources/rem/service/WithSearchResmiService/findInSearchService(io.corbel.resources.rem.model.ResourceUri,io.corbel.resources.rem.request.CollectionParameters)#io/corbel/lib/queries/request/Search/getParams()
io/corbel/resources/rem/service/WithSearchResmiService/findInSearchService(io.corbel.resources.rem.model.ResourceUri,io.corbel.resources.rem.request.CollectionParameters)#io/corbel/resources/rem/service/WithSearchResmiService/findCollection(io.corbel.resources.rem.model.ResourceUri,java.util.Optional)
io/corbel/resources/rem/service/WithSearchResmiService/findInSearchService(io.corbel.resources.rem.model.ResourceUri,io.corbel.resources.rem.request.CollectionParameters)#io/corbel/lib/queries/request/Search/getText()
io/corbel/resources/rem/service/WithSearchResmiService/findInSearchService(io.corbel.resources.rem.model.ResourceUri,io.corbel.resources.rem.request.CollectionParameters)#io/corbel/resources/rem/service/WithSearchResmiService/buildRelationParametersForBinding(io.corbel.resources.rem.request.CollectionParameters,com.google.gson.JsonArray)
io/corbel/resources/rem/service/WithSearchResmiService/findInSearchService(io.corbel.resources.rem.model.ResourceUri,io.corbel.resources.rem.request.CollectionParameters)#io/corbel/resources/rem/service/WithSearchResmiService/orderResult(com.google.gson.JsonArray,com.google.gson.JsonArray)
io/corbel/resources/rem/service/WithSearchResmiService/findInSearchService(io.corbel.resources.rem.model.ResourceUri,io.corbel.resources.rem.request.CollectionParameters)#io/corbel/resources/rem/search/ResmiSearch/search(io.corbel.resources.rem.model.ResourceUri,java.lang.String,java.util.List,io.corbel.lib.queries.request.Pagination,java.util.Optional)
io/corbel/resources/rem/service/WithSearchResmiService/findInSearchService(io.corbel.resources.rem.model.ResourceUri,io.corbel.resources.rem.request.CollectionParameters)#io/corbel/lib/queries/request/Search/getTemplate()
io/corbel/resources/rem/service/WithSearchResmiService/findInSearchService(io.corbel.resources.rem.model.ResourceUri,io.corbel.resources.rem.request.CollectionParameters)#io/corbel/resources/rem/model/ResourceUri/isRelation()
io/corbel/resources/rem/service/WithSearchResmiService/countWithSearchService(io.corbel.resources.rem.model.ResourceUri,io.corbel.resources.rem.request.CollectionParameters)#java/util/Optional/get()
io/corbel/resources/rem/service/WithSearchResmiService/countWithSearchService(io.corbel.resources.rem.model.ResourceUri,io.corbel.resources.rem.request.CollectionParameters)#io/corbel/resources/rem/service/WithSearchResmiService/addRelationQuery(io.corbel.resources.rem.model.ResourceUri,java.util.List)
io/corbel/resources/rem/service/WithSearchResmiService/countWithSearchService(io.corbel.resources.rem.model.ResourceUri,io.corbel.resources.rem.request.CollectionParameters)#io/corbel/lib/queries/request/Search/getParams()
io/corbel/resources/rem/service/WithSearchResmiService/countWithSearchService(io.corbel.resources.rem.model.ResourceUri,io.corbel.resources.rem.request.CollectionParameters)#io/corbel/lib/queries/request/Search/getText()
io/corbel/resources/rem/service/WithSearchResmiService/countWithSearchService(io.corbel.resources.rem.model.ResourceUri,io.corbel.resources.rem.request.CollectionParameters)#io/corbel/resources/rem/request/CollectionParameters/getSearch()
io/corbel/resources/rem/service/WithSearchResmiService/countWithSearchService(io.corbel.resources.rem.model.ResourceUri,io.corbel.resources.rem.request.CollectionParameters)#io/corbel/lib/queries/request/Search/getTemplate()
io/corbel/resources/rem/service/WithSearchResmiService/countWithSearchService(io.corbel.resources.rem.model.ResourceUri,io.corbel.resources.rem.request.CollectionParameters)#io/corbel/resources/rem/search/ResmiSearch/count(io.corbel.resources.rem.model.ResourceUri,java.lang.String,java.util.List)
io/corbel/resources/rem/service/WithSearchResmiService/countWithSearchService(io.corbel.resources.rem.model.ResourceUri,io.corbel.resources.rem.request.CollectionParameters)#java/util/Optional/isPresent()
io/corbel/resources/rem/service/WithSearchResmiService/countWithSearchService(io.corbel.resources.rem.model.ResourceUri,io.corbel.resources.rem.request.CollectionParameters)#java/util/Optional/orElseGet(java.util.function.Supplier)
io/corbel/resources/rem/service/WithSearchResmiService/countWithSearchService(io.corbel.resources.rem.model.ResourceUri,io.corbel.resources.rem.request.CollectionParameters)#io/corbel/resources/rem/search/ResmiSearch/count(io.corbel.resources.rem.model.ResourceUri,java.lang.String,java.util.Map)
io/corbel/resources/rem/service/WithSearchResmiService/countWithSearchService(io.corbel.resources.rem.model.ResourceUri,io.corbel.resources.rem.request.CollectionParameters)#io/corbel/resources/rem/request/CollectionParameters/getQueries()
io/corbel/resources/rem/service/WithSearchResmiService/conditionalUpdateResource(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject,java.util.List)#io/corbel/resources/rem/service/WithSearchResmiService/indexInSearchService(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject)
io/corbel/resources/rem/service/WithSearchResmiService/conditionalUpdateResource(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject,java.util.List)#io/corbel/resources/rem/service/DefaultResmiService/conditionalUpdateResource(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject,java.util.List)
io/corbel/resources/rem/service/WithSearchResmiService/findRelation(io.corbel.resources.rem.model.ResourceUri,java.util.Optional)#java/util/Optional/get()
io/corbel/resources/rem/service/WithSearchResmiService/findRelation(io.corbel.resources.rem.model.ResourceUri,java.util.Optional)#io/corbel/resources/rem/service/WithSearchResmiService/findInSearchService(io.corbel.resources.rem.model.ResourceUri,io.corbel.resources.rem.request.CollectionParameters)
io/corbel/resources/rem/service/WithSearchResmiService/findRelation(io.corbel.resources.rem.model.ResourceUri,java.util.Optional)#java/util/Optional/flatMap(java.util.function.Function)
io/corbel/resources/rem/service/WithSearchResmiService/findRelation(io.corbel.resources.rem.model.ResourceUri,java.util.Optional)#io/corbel/resources/rem/service/DefaultResmiService/findRelation(io.corbel.resources.rem.model.ResourceUri,java.util.Optional)
io/corbel/resources/rem/service/WithSearchResmiService/updateResource(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject)#io/corbel/resources/rem/service/WithSearchResmiService/indexInSearchService(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject)
io/corbel/resources/rem/service/WithSearchResmiService/updateResource(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject)#io/corbel/resources/rem/service/DefaultResmiService/updateResource(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject)
io/corbel/resources/rem/service/WithSearchResmiService/findCollection(io.corbel.resources.rem.model.ResourceUri,java.util.Optional)#java/util/Optional/get()
io/corbel/resources/rem/service/WithSearchResmiService/findCollection(io.corbel.resources.rem.model.ResourceUri,java.util.Optional)#io/corbel/resources/rem/service/WithSearchResmiService/findInSearchService(io.corbel.resources.rem.model.ResourceUri,io.corbel.resources.rem.request.CollectionParameters)
io/corbel/resources/rem/service/WithSearchResmiService/findCollection(io.corbel.resources.rem.model.ResourceUri,java.util.Optional)#java/util/Optional/flatMap(java.util.function.Function)
io/corbel/resources/rem/service/WithSearchResmiService/findCollection(io.corbel.resources.rem.model.ResourceUri,java.util.Optional)#io/corbel/resources/rem/service/DefaultResmiService/findCollection(io.corbel.resources.rem.model.ResourceUri,java.util.Optional)
io/corbel/resources/rem/service/WithSearchResmiService/deleteResource(io.corbel.resources.rem.model.ResourceUri)#io/corbel/resources/rem/service/WithSearchResmiService/deleteInSearchService(io.corbel.resources.rem.model.ResourceUri)
io/corbel/resources/rem/service/WithSearchResmiService/deleteResource(io.corbel.resources.rem.model.ResourceUri)#io/corbel/resources/rem/service/DefaultResmiService/deleteResource(io.corbel.resources.rem.model.ResourceUri)
io/corbel/resources/rem/service/WithSearchResmiService/buildRelationParametersForBinding(io.corbel.resources.rem.request.CollectionParameters,com.google.gson.JsonArray)#java/util/ArrayList/ArrayList()
io/corbel/resources/rem/service/WithSearchResmiService/buildRelationParametersForBinding(io.corbel.resources.rem.request.CollectionParameters,com.google.gson.JsonArray)#io/corbel/resources/rem/request/RelationParametersImpl/RelationParametersImpl(io.corbel.lib.queries.request.Pagination,java.util.Optional,java.util.Optional,java.util.Optional,java.util.Optional,java.util.Optional,java.util.Optional)
io/corbel/resources/rem/service/WithSearchResmiService/buildRelationParametersForBinding(io.corbel.resources.rem.request.CollectionParameters,com.google.gson.JsonArray)#io/corbel/lib/queries/builder/ResourceQueryBuilder/build()
io/corbel/resources/rem/service/WithSearchResmiService/buildRelationParametersForBinding(io.corbel.resources.rem.request.CollectionParameters,com.google.gson.JsonArray)#io/corbel/resources/rem/request/CollectionParameters/getPagination()
io/corbel/resources/rem/service/WithSearchResmiService/buildRelationParametersForBinding(io.corbel.resources.rem.request.CollectionParameters,com.google.gson.JsonArray)#java/util/Collections/singletonList(T)
io/corbel/resources/rem/service/WithSearchResmiService/buildRelationParametersForBinding(io.corbel.resources.rem.request.CollectionParameters,com.google.gson.JsonArray)#io/corbel/lib/queries/builder/ResourceQueryBuilder/ResourceQueryBuilder()
io/corbel/resources/rem/service/WithSearchResmiService/buildRelationParametersForBinding(io.corbel.resources.rem.request.CollectionParameters,com.google.gson.JsonArray)#io/corbel/resources/rem/request/CollectionParameters/getSort()
io/corbel/resources/rem/service/WithSearchResmiService/buildRelationParametersForBinding(io.corbel.resources.rem.request.CollectionParameters,com.google.gson.JsonArray)#io/corbel/lib/queries/request/Pagination/setPage(int)
io/corbel/resources/rem/service/WithSearchResmiService/buildRelationParametersForBinding(io.corbel.resources.rem.request.CollectionParameters,com.google.gson.JsonArray)#java/util/Optional/of(T)
io/corbel/resources/rem/service/WithSearchResmiService/buildRelationParametersForBinding(io.corbel.resources.rem.request.CollectionParameters,com.google.gson.JsonArray)#java/util/Optional/empty()
io/corbel/resources/rem/service/WithSearchResmiService/buildRelationParametersForBinding(io.corbel.resources.rem.request.CollectionParameters,com.google.gson.JsonArray)#io/corbel/lib/queries/builder/ResourceQueryBuilder/add(java.lang.String,java.util.List,io.corbel.lib.queries.request.QueryOperator)
io/corbel/resources/rem/service/WithSearchResmiService/buildRelationParametersForBinding(io.corbel.resources.rem.request.CollectionParameters,com.google.gson.JsonArray)#com/google/gson/JsonElement/getAsString()
io/corbel/resources/rem/service/WithSearchResmiService/buildRelationParametersForBinding(io.corbel.resources.rem.request.CollectionParameters,com.google.gson.JsonArray)#com/google/gson/JsonObject/get(java.lang.String)
io/corbel/resources/rem/service/WithSearchResmiService/buildRelationParametersForBinding(io.corbel.resources.rem.request.CollectionParameters,com.google.gson.JsonArray)#io/corbel/lib/queries/StringQueryLiteral/StringQueryLiteral(java.lang.String)
io/corbel/resources/rem/service/WithSearchResmiService/buildRelationParametersForBinding(io.corbel.resources.rem.request.CollectionParameters,com.google.gson.JsonArray)#java/util/List/add(E)
io/corbel/resources/rem/service/WithSearchResmiService/orderResult(com.google.gson.JsonArray,com.google.gson.JsonArray)#java/util/stream/Stream/map(java.util.function.Function)
io/corbel/resources/rem/service/WithSearchResmiService/orderResult(com.google.gson.JsonArray,com.google.gson.JsonArray)#java/util/stream/Stream/sorted(java.util.Comparator)
io/corbel/resources/rem/service/WithSearchResmiService/orderResult(com.google.gson.JsonArray,com.google.gson.JsonArray)#java/util/stream/StreamSupport/stream(java.util.Spliterator,boolean)
io/corbel/resources/rem/service/WithSearchResmiService/orderResult(com.google.gson.JsonArray,com.google.gson.JsonArray)#java/lang/Iterable/spliterator()
io/corbel/resources/rem/service/WithSearchResmiService/orderResult(com.google.gson.JsonArray,com.google.gson.JsonArray)#java/util/HashMap/HashMap()
io/corbel/resources/rem/service/WithSearchResmiService/orderResult(com.google.gson.JsonArray,com.google.gson.JsonArray)#java/util/stream/Stream/forEach(java.util.function.Consumer)
io/corbel/resources/rem/service/WithSearchResmiService/orderResult(com.google.gson.JsonArray,com.google.gson.JsonArray)#com/google/gson/JsonArray/JsonArray()
io/corbel/resources/rem/service/WithSearchResmiService/orderResult(com.google.gson.JsonArray,com.google.gson.JsonArray)#java/util/stream/Stream/forEachOrdered(java.util.function.Consumer)
io/corbel/resources/rem/service/WithSearchResmiService/buildCollectionParametersForBinding(io.corbel.resources.rem.request.CollectionParameters,com.google.gson.JsonArray)#java/util/ArrayList/ArrayList()
io/corbel/resources/rem/service/WithSearchResmiService/buildCollectionParametersForBinding(io.corbel.resources.rem.request.CollectionParameters,com.google.gson.JsonArray)#io/corbel/lib/queries/builder/ResourceQueryBuilder/build()
io/corbel/resources/rem/service/WithSearchResmiService/buildCollectionParametersForBinding(io.corbel.resources.rem.request.CollectionParameters,com.google.gson.JsonArray)#java/util/Collections/singletonList(T)
io/corbel/resources/rem/service/WithSearchResmiService/buildCollectionParametersForBinding(io.corbel.resources.rem.request.CollectionParameters,com.google.gson.JsonArray)#io/corbel/lib/queries/builder/ResourceQueryBuilder/ResourceQueryBuilder()
io/corbel/resources/rem/service/WithSearchResmiService/buildCollectionParametersForBinding(io.corbel.resources.rem.request.CollectionParameters,com.google.gson.JsonArray)#io/corbel/resources/rem/request/CollectionParameters/getSort()
io/corbel/resources/rem/service/WithSearchResmiService/buildCollectionParametersForBinding(io.corbel.resources.rem.request.CollectionParameters,com.google.gson.JsonArray)#io/corbel/lib/queries/request/Pagination/setPage(int)
io/corbel/resources/rem/service/WithSearchResmiService/buildCollectionParametersForBinding(io.corbel.resources.rem.request.CollectionParameters,com.google.gson.JsonArray)#java/util/Optional/of(T)
io/corbel/resources/rem/service/WithSearchResmiService/buildCollectionParametersForBinding(io.corbel.resources.rem.request.CollectionParameters,com.google.gson.JsonArray)#java/util/Optional/empty()
io/corbel/resources/rem/service/WithSearchResmiService/buildCollectionParametersForBinding(io.corbel.resources.rem.request.CollectionParameters,com.google.gson.JsonArray)#io/corbel/lib/queries/builder/ResourceQueryBuilder/add(java.lang.String,java.util.List,io.corbel.lib.queries.request.QueryOperator)
io/corbel/resources/rem/service/WithSearchResmiService/buildCollectionParametersForBinding(io.corbel.resources.rem.request.CollectionParameters,com.google.gson.JsonArray)#com/google/gson/JsonElement/getAsString()
io/corbel/resources/rem/service/WithSearchResmiService/buildCollectionParametersForBinding(io.corbel.resources.rem.request.CollectionParameters,com.google.gson.JsonArray)#com/google/gson/JsonObject/get(java.lang.String)
io/corbel/resources/rem/service/WithSearchResmiService/buildCollectionParametersForBinding(io.corbel.resources.rem.request.CollectionParameters,com.google.gson.JsonArray)#io/corbel/resources/rem/request/CollectionParameters/getPagination()
io/corbel/resources/rem/service/WithSearchResmiService/buildCollectionParametersForBinding(io.corbel.resources.rem.request.CollectionParameters,com.google.gson.JsonArray)#io/corbel/resources/rem/request/CollectionParametersImpl/CollectionParametersImpl(io.corbel.lib.queries.request.Pagination,java.util.Optional,java.util.Optional,java.util.Optional,java.util.Optional,java.util.Optional)
io/corbel/resources/rem/service/WithSearchResmiService/buildCollectionParametersForBinding(io.corbel.resources.rem.request.CollectionParameters,com.google.gson.JsonArray)#io/corbel/lib/queries/StringQueryLiteral/StringQueryLiteral(java.lang.String)
io/corbel/resources/rem/service/WithSearchResmiService/buildCollectionParametersForBinding(io.corbel.resources.rem.request.CollectionParameters,com.google.gson.JsonArray)#java/util/List/add(E)
io/corbel/resources/rem/service/WithSearchResmiService/addSearchableFields(io.corbel.resources.rem.model.SearchResource)#io/corbel/resources/rem/model/ResourceUri/ResourceUri(java.lang.String,java.lang.String)
io/corbel/resources/rem/service/WithSearchResmiService/addSearchableFields(io.corbel.resources.rem.model.SearchResource)#io/corbel/resources/rem/dao/ResmiDao/saveResource(io.corbel.resources.rem.model.ResourceUri,java.lang.Object)
io/corbel/resources/rem/service/WithSearchResmiService/addSearchableFields(io.corbel.resources.rem.model.SearchResource)#io/corbel/resources/rem/service/SearchableFieldsRegistry/addFields(io.corbel.resources.rem.model.SearchResource)
io/corbel/resources/rem/service/WithSearchResmiService/saveResource(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject,java.util.Optional)#io/corbel/resources/rem/service/WithSearchResmiService/indexInSearchService(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject)
io/corbel/resources/rem/service/WithSearchResmiService/saveResource(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject,java.util.Optional)#io/corbel/resources/rem/model/ResourceUri/setTypeId(java.lang.String)
io/corbel/resources/rem/service/WithSearchResmiService/saveResource(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject,java.util.Optional)#io/corbel/resources/rem/service/DefaultResmiService/saveResource(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject,java.util.Optional)
io/corbel/resources/rem/service/WithSearchResmiService/saveResource(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject,java.util.Optional)#com/google/gson/JsonElement/getAsString()
io/corbel/resources/rem/service/WithSearchResmiService/saveResource(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject,java.util.Optional)#com/google/gson/JsonObject/get(java.lang.String)
io/corbel/resources/rem/service/WithSearchResmiService/deleteRelation(io.corbel.resources.rem.model.ResourceUri,java.util.Optional)#io/corbel/resources/rem/dao/ResmiDao/deleteRelation(io.corbel.resources.rem.model.ResourceUri,java.util.Optional)
io/corbel/resources/rem/service/WithSearchResmiService/deleteRelation(io.corbel.resources.rem.model.ResourceUri,java.util.Optional)#io/corbel/resources/rem/service/WithSearchResmiService/deleteInSearchService(io.corbel.resources.rem.model.ResourceUri,java.util.List)
io/corbel/resources/rem/service/WithSearchResmiService/deleteCollection(io.corbel.resources.rem.model.ResourceUri,java.util.Optional)#io/corbel/resources/rem/dao/ResmiDao/deleteCollection(io.corbel.resources.rem.model.ResourceUri,java.util.Optional)
io/corbel/resources/rem/service/WithSearchResmiService/deleteCollection(io.corbel.resources.rem.model.ResourceUri,java.util.Optional)#io/corbel/resources/rem/service/WithSearchResmiService/deleteInSearchService(io.corbel.resources.rem.model.ResourceUri,java.util.List)
io/corbel/resources/rem/service/WithSearchResmiService/upsertRelation(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject)#io/corbel/resources/rem/service/DefaultResmiService/upsertRelation(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject)
io/corbel/resources/rem/service/WithSearchResmiService/upsertRelation(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject)#io/corbel/resources/rem/service/WithSearchResmiService/indexInSearchService(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject)
io/corbel/resources/rem/service/WithSearchResmiService/upsertRelation(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject)#io/corbel/resources/rem/model/ResourceUri/getTypeId()
io/corbel/resources/rem/service/WithSearchResmiService/upsertRelation(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject)#com/google/gson/JsonObject/addProperty(java.lang.String,java.lang.String)
io/corbel/iam/auth/google/api/impl/GoogleTemplate/getMessageConverters()#java/util/ArrayList/ArrayList()
io/corbel/iam/auth/google/api/impl/GoogleTemplate/getMessageConverters()#org/springframework/http/converter/ByteArrayHttpMessageConverter/ByteArrayHttpMessageConverter()
io/corbel/iam/auth/google/api/impl/GoogleTemplate/getMessageConverters()#com/fasterxml/jackson/databind/ObjectMapper/ObjectMapper()
io/corbel/iam/auth/google/api/impl/GoogleTemplate/getMessageConverters()#com/fasterxml/jackson/databind/ObjectMapper/configure(com.fasterxml.jackson.databind.DeserializationFeature,boolean)
io/corbel/iam/auth/google/api/impl/GoogleTemplate/getMessageConverters()#org/springframework/http/converter/json/MappingJackson2HttpMessageConverter/MappingJackson2HttpMessageConverter()
io/corbel/iam/auth/google/api/impl/GoogleTemplate/getMessageConverters()#java/util/List/add(E)
io/corbel/iam/auth/google/api/impl/GoogleTemplate/getMessageConverters()#org/springframework/http/converter/json/AbstractJackson2HttpMessageConverter/setObjectMapper(com.fasterxml.jackson.databind.ObjectMapper)
io/corbel/iam/auth/google/api/impl/GoogleTemplate/getMessageConverters()#org/springframework/http/converter/FormHttpMessageConverter/FormHttpMessageConverter()
io/corbel/iam/auth/google/api/impl/GoogleTemplate/getMessageConverters()#org/springframework/http/converter/ResourceHttpMessageConverter/ResourceHttpMessageConverter()
io/corbel/iam/auth/google/api/impl/GoogleTemplate/getMessageConverters()#com/fasterxml/jackson/databind/ObjectMapper/setSerializationInclusion(com.fasterxml.jackson.annotation.JsonInclude.Include)
io/corbel/iam/auth/google/api/impl/GoogleTemplate/getMessageConverters()#org/springframework/http/converter/FormHttpMessageConverter/addPartConverter(org.springframework.http.converter.HttpMessageConverter)
io/corbel/iam/auth/google/api/impl/GoogleTemplate/getMessageConverters()#com/fasterxml/jackson/databind/ObjectMapper/configure(com.fasterxml.jackson.databind.SerializationFeature,boolean)
io/corbel/iam/auth/google/api/impl/GoogleTemplate/initialize()#org/springframework/social/oauth2/AbstractOAuth2ApiBinding/isAuthorized()
io/corbel/iam/auth/google/api/impl/GoogleTemplate/initialize()#io/corbel/iam/auth/google/api/userinfo/impl/UserInfoTemplate/UserInfoTemplate(org.springframework.web.client.RestTemplate,boolean)
io/corbel/iam/auth/google/api/impl/GoogleTemplate/initialize()#org/springframework/social/oauth2/AbstractOAuth2ApiBinding/getRestTemplate()
io/corbel/oauth/api/SignoutResourceTest/testSingoutWithCookie()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/oauth/api/SignoutResourceTest/testSingoutWithCookie()#io/corbel/oauth/session/SessionCookieFactory/destroyCookie(java.lang.String)
io/corbel/oauth/api/SignoutResourceTest/testSingoutWithCookie()#org/mockito/Mockito/when(T)
io/corbel/oauth/api/SignoutResourceTest/testSingoutWithCookie()#javax/ws/rs/core/NewCookie/NewCookie(java.lang.String,java.lang.String)
io/corbel/oauth/api/SignoutResourceTest/testSingoutWithCookie()#java/util/Map/get(java.lang.Object)
io/corbel/oauth/api/SignoutResourceTest/testSingoutWithCookie()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/oauth/api/SignoutResourceTest/testSingoutWithCookie()#javax/ws/rs/client/WebTarget/request()
io/corbel/oauth/api/SignoutResourceTest/testSingoutWithCookie()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/oauth/api/SignoutResourceTest/testSingoutWithCookie()#javax/ws/rs/core/Cookie/Cookie(java.lang.String,java.lang.String)
io/corbel/oauth/api/SignoutResourceTest/testSingoutWithCookie()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/oauth/api/SignoutResourceTest/testSingoutWithCookie()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/oauth/api/SignoutResourceTest/testSingoutWithCookie()#javax/ws/rs/client/Invocation/Builder/cookie(javax.ws.rs.core.Cookie)
io/corbel/oauth/api/SignoutResourceTest/testSingoutWithCookie()#javax/ws/rs/core/Response/getCookies()
io/corbel/oauth/api/SignoutResourceTest/testSingoutWithCookie()#javax/ws/rs/client/SyncInvoker/get(java.lang.Class)
io/corbel/oauth/api/SignoutResourceTest/testSingoutWithCookie()#javax/ws/rs/core/Response/getStatus()
io/corbel/oauth/api/SignoutResourceTest/testSingoutWithCookie()#org/fest/assertions/api/Assertions/assertThat(T)
io/corbel/oauth/api/SignoutResourceTest/testSingoutWithCookie()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/oauth/api/SignoutResourceTest/testSingoutWithoutCookie()#org/fest/assertions/api/MapAssert/isEmpty()
io/corbel/oauth/api/SignoutResourceTest/testSingoutWithoutCookie()#javax/ws/rs/core/Response/getCookies()
io/corbel/oauth/api/SignoutResourceTest/testSingoutWithoutCookie()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/oauth/api/SignoutResourceTest/testSingoutWithoutCookie()#javax/ws/rs/client/WebTarget/request()
io/corbel/oauth/api/SignoutResourceTest/testSingoutWithoutCookie()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/oauth/api/SignoutResourceTest/testSingoutWithoutCookie()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/oauth/api/SignoutResourceTest/testSingoutWithoutCookie()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/oauth/api/SignoutResourceTest/testSingoutWithoutCookie()#javax/ws/rs/client/SyncInvoker/get(java.lang.Class)
io/corbel/oauth/api/SignoutResourceTest/testSingoutWithoutCookie()#org/fest/assertions/api/Assertions/assertThat(java.util.Map)
io/corbel/oauth/api/SignoutResourceTest/testSingoutWithoutCookie()#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/rem/dao/JsonRelation/create(java.lang.String,java.lang.String,com.google.gson.JsonObject)#java/util/Map/Entry/getValue()
io/corbel/resources/rem/dao/JsonRelation/create(java.lang.String,java.lang.String,com.google.gson.JsonObject)#io/corbel/resources/rem/dao/JsonRelation/isIgnoreField(java.lang.String)
io/corbel/resources/rem/dao/JsonRelation/create(java.lang.String,java.lang.String,com.google.gson.JsonObject)#java/util/Map/Entry/getKey()
io/corbel/resources/rem/dao/JsonRelation/create(java.lang.String,java.lang.String,com.google.gson.JsonObject)#io/corbel/resources/rem/dao/JsonRelation/create(java.lang.String,java.lang.String)
io/corbel/resources/rem/dao/JsonRelation/create(java.lang.String,java.lang.String,com.google.gson.JsonObject)#com/google/gson/JsonObject/entrySet()
io/corbel/resources/rem/dao/JsonRelation/create(java.lang.String,java.lang.String,com.google.gson.JsonObject)#com/google/gson/JsonObject/add(java.lang.String,com.google.gson.JsonElement)
io/corbel/resources/rem/dao/JsonRelation/isIgnoreField(java.lang.String)#java/util/Arrays/asList(T[])
io/corbel/resources/rem/dao/JsonRelation/isIgnoreField(java.lang.String)#java/util/List/contains(java.lang.Object)
io/corbel/resources/rem/dao/JsonRelation/create(java.lang.String,java.lang.String)#com/google/gson/JsonObject/addProperty(java.lang.String,java.lang.String)
io/corbel/resources/rem/dao/JsonRelation/create(java.lang.String,java.lang.String)#com/google/gson/JsonObject/JsonObject()
io/corbel/resources/rem/dao/JsonRelation/validateUri(java.lang.String)#java/lang/String/split(java.lang.String)
io/corbel/resources/href/DefaultLinkGeneratorTest/testGenerateRelationLinks()#org/fest/assertions/api/BooleanAssert/isTrue()
io/corbel/resources/href/DefaultLinkGeneratorTest/testGenerateRelationLinks()#com/google/gson/JsonObject/has(java.lang.String)
io/corbel/resources/href/DefaultLinkGeneratorTest/testGenerateRelationLinks()#org/fest/assertions/api/Assertions/assertThat(boolean)
io/corbel/resources/href/DefaultLinkGeneratorTest/testGenerateRelationLinks()#java/util/Map/get(java.lang.Object)
io/corbel/resources/href/DefaultLinkGeneratorTest/testGenerateRelationLinks()#org/fest/assertions/api/BooleanAssert/isEqualTo(boolean)
io/corbel/resources/href/DefaultLinkGeneratorTest/testGenerateRelationLinks()#java/util/Arrays/asList(T[])
io/corbel/resources/href/DefaultLinkGeneratorTest/testGenerateRelationLinks()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/resources/href/DefaultLinkGeneratorTest/testGenerateRelationLinks()#com/google/gson/JsonElement/getAsJsonObject()
io/corbel/resources/href/DefaultLinkGeneratorTest/testGenerateRelationLinks()#java/util/Map/put(K,V)
io/corbel/resources/href/DefaultLinkGeneratorTest/testGenerateRelationLinks()#com/google/gson/JsonElement/getAsJsonArray()
io/corbel/resources/href/DefaultLinkGeneratorTest/testGenerateRelationLinks()#com/google/gson/JsonObject/add(java.lang.String,com.google.gson.JsonElement)
io/corbel/resources/href/DefaultLinkGeneratorTest/testGenerateRelationLinks()#com/google/gson/JsonObject/get(java.lang.String)
io/corbel/resources/href/DefaultLinkGeneratorTest/testGenerateRelationLinks()#java/util/HashMap/HashMap()
io/corbel/resources/href/DefaultLinkGeneratorTest/testGenerateRelationLinks()#java/util/Optional/of(T)
io/corbel/resources/href/DefaultLinkGeneratorTest/testGenerateRelationLinks()#com/google/gson/JsonPrimitive/JsonPrimitive(java.lang.String)
io/corbel/resources/href/DefaultLinkGeneratorTest/testGenerateRelationLinks()#io/corbel/resources/href/DefaultLinkGenerator/addResourceLinks(com.google.gson.JsonObject,java.net.URI,java.util.Optional)
io/corbel/resources/href/DefaultLinkGeneratorTest/testGenerateRelationLinks()#java/util/Map/containsKey(java.lang.Object)
io/corbel/resources/href/DefaultLinkGeneratorTest/testGenerateRelationLinks()#com/google/gson/JsonObject/JsonObject()
io/corbel/resources/href/DefaultLinkGeneratorTest/testGenerateRelationLinks()#java/util/HashSet/HashSet(java.util.Collection)
io/corbel/resources/href/DefaultLinkGeneratorTest/testGenerateRelationLinks()#com/google/gson/JsonElement/getAsString()
io/corbel/resources/href/DefaultLinkGeneratorTest/testGenerateRelationLinks()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/resources/href/DefaultLinkGeneratorTest/setup()#io/corbel/resources/href/DefaultLinkGenerator/DefaultLinkGenerator()
io/corbel/resources/href/DefaultLinkGeneratorTest/testEmptyLinsk()#com/google/gson/JsonObject/has(java.lang.String)
io/corbel/resources/href/DefaultLinkGeneratorTest/testEmptyLinsk()#org/fest/assertions/api/BooleanAssert/isFalse()
io/corbel/resources/href/DefaultLinkGeneratorTest/testEmptyLinsk()#org/fest/assertions/api/Assertions/assertThat(boolean)
io/corbel/resources/href/DefaultLinkGeneratorTest/testEmptyLinsk()#com/google/gson/JsonObject/JsonObject()
io/corbel/resources/href/DefaultLinkGeneratorTest/testEmptyLinsk()#java/util/Optional/empty()
io/corbel/resources/href/DefaultLinkGeneratorTest/testEmptyLinsk()#com/google/gson/JsonObject/add(java.lang.String,com.google.gson.JsonElement)
io/corbel/resources/href/DefaultLinkGeneratorTest/testEmptyLinsk()#com/google/gson/JsonPrimitive/JsonPrimitive(java.lang.String)
io/corbel/resources/href/DefaultLinkGeneratorTest/testEmptyLinsk()#io/corbel/resources/href/DefaultLinkGenerator/addResourceLinks(com.google.gson.JsonObject,java.net.URI,java.util.Optional)
io/corbel/resources/href/DefaultLinkGeneratorTest/testGenerateSelfLinkFromId()#org/fest/assertions/api/BooleanAssert/isTrue()
io/corbel/resources/href/DefaultLinkGeneratorTest/testGenerateSelfLinkFromId()#com/google/gson/JsonObject/has(java.lang.String)
io/corbel/resources/href/DefaultLinkGeneratorTest/testGenerateSelfLinkFromId()#org/fest/assertions/api/Assertions/assertThat(boolean)
io/corbel/resources/href/DefaultLinkGeneratorTest/testGenerateSelfLinkFromId()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/resources/href/DefaultLinkGeneratorTest/testGenerateSelfLinkFromId()#com/google/gson/JsonElement/getAsJsonObject()
io/corbel/resources/href/DefaultLinkGeneratorTest/testGenerateSelfLinkFromId()#com/google/gson/JsonObject/JsonObject()
io/corbel/resources/href/DefaultLinkGeneratorTest/testGenerateSelfLinkFromId()#java/util/Optional/empty()
io/corbel/resources/href/DefaultLinkGeneratorTest/testGenerateSelfLinkFromId()#com/google/gson/JsonElement/getAsJsonArray()
io/corbel/resources/href/DefaultLinkGeneratorTest/testGenerateSelfLinkFromId()#com/google/gson/JsonObject/add(java.lang.String,com.google.gson.JsonElement)
io/corbel/resources/href/DefaultLinkGeneratorTest/testGenerateSelfLinkFromId()#com/google/gson/JsonPrimitive/JsonPrimitive(java.lang.String)
io/corbel/resources/href/DefaultLinkGeneratorTest/testGenerateSelfLinkFromId()#io/corbel/resources/href/DefaultLinkGenerator/addResourceLinks(com.google.gson.JsonObject,java.net.URI,java.util.Optional)
io/corbel/resources/href/DefaultLinkGeneratorTest/testGenerateSelfLinkFromId()#com/google/gson/JsonElement/getAsString()
io/corbel/resources/href/DefaultLinkGeneratorTest/testGenerateSelfLinkFromId()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/resources/href/DefaultLinkGeneratorTest/testGenerateSelfLinkFromId()#com/google/gson/JsonArray/get(int)
io/corbel/resources/href/DefaultLinkGeneratorTest/testGenerateSelfLinkFromId()#com/google/gson/JsonObject/get(java.lang.String)
io/corbel/resources/rem/dao/ResmiDaoHelper/renameIds(com.google.gson.JsonObject,boolean)#com/google/gson/JsonObject/remove(java.lang.String)
io/corbel/resources/rem/dao/ResmiDaoHelper/renameIds(com.google.gson.JsonObject,boolean)#com/google/gson/JsonObject/add(java.lang.String,com.google.gson.JsonElement)
io/corbel/resources/rem/dao/ResmiDaoHelper/renameIds(com.google.gson.JsonObject,boolean)#com/google/gson/JsonObject/get(java.lang.String)
io/corbel/resources/rem/dao/ResmiDaoHelper/renameIds(com.google.gson.JsonArray,boolean)#com/google/gson/JsonElement/isJsonObject()
io/corbel/resources/rem/dao/ResmiDaoHelper/renameIds(com.google.gson.JsonArray,boolean)#io/corbel/resources/rem/dao/ResmiDaoHelper/renameIds(com.google.gson.JsonObject,boolean)
io/corbel/resources/rem/dao/ResmiDaoHelper/renameIds(com.google.gson.JsonArray,boolean)#com/google/gson/JsonElement/getAsJsonObject()
io/corbel/iam/auth/provider/TwitterProviderTest/before()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/iam/auth/provider/TwitterProviderTest/before()#java/util/Map/put(K,V)
io/corbel/iam/auth/provider/TwitterProviderTest/before()#io/corbel/iam/auth/provider/TwitterProvider/TwitterProvider(io.corbel.iam.repository.IdentityRepository)
io/corbel/iam/auth/provider/TwitterProviderTest/before()#io/corbel/iam/auth/provider/Provider/setConfiguration(java.util.Map)
io/corbel/iam/auth/provider/TwitterProviderTest/before()#java/util/HashMap/HashMap()
io/corbel/iam/auth/provider/TwitterProviderTest/getAuthUrlTest()#java/util/regex/Matcher/group(int)
io/corbel/iam/auth/provider/TwitterProviderTest/getAuthUrlTest()#java/util/regex/Pattern/compile(java.lang.String)
io/corbel/iam/auth/provider/TwitterProviderTest/getAuthUrlTest()#java/net/URI/URI(java.lang.String)
io/corbel/iam/auth/provider/TwitterProviderTest/getAuthUrlTest()#java/io/PrintStream/println(java.lang.String)
io/corbel/iam/auth/provider/TwitterProviderTest/getAuthUrlTest()#java/net/URI/getQuery()
io/corbel/iam/auth/provider/TwitterProviderTest/getAuthUrlTest()#io/corbel/iam/auth/provider/Provider/getAuthUrl(java.lang.String)
io/corbel/iam/auth/provider/TwitterProviderTest/getAuthUrlTest()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/iam/auth/provider/TwitterProviderTest/getAuthUrlTest()#java/util/regex/Matcher/find()
io/corbel/iam/auth/provider/TwitterProviderTest/getAuthUrlTest()#java/util/regex/Pattern/matcher(java.lang.CharSequence)
io/corbel/iam/auth/provider/TwitterProviderTest/getAuthUrlTest()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/iam/auth/google/connect/GoogleConnectionFactory/extractProviderUserId(org.springframework.social.oauth2.AccessGrant)#org/springframework/social/connect/ConnectionFactory/getApiAdapter()
io/corbel/iam/auth/google/connect/GoogleConnectionFactory/extractProviderUserId(org.springframework.social.oauth2.AccessGrant)#io/corbel/iam/auth/google/connect/GoogleServiceProvider/getApi(java.lang.String)
io/corbel/iam/auth/google/connect/GoogleConnectionFactory/extractProviderUserId(org.springframework.social.oauth2.AccessGrant)#org/springframework/social/connect/ConnectionFactory/getServiceProvider()
io/corbel/iam/auth/google/connect/GoogleConnectionFactory/extractProviderUserId(org.springframework.social.oauth2.AccessGrant)#org/springframework/social/connect/UserProfile/getUsername()
io/corbel/iam/auth/google/connect/GoogleConnectionFactory/extractProviderUserId(org.springframework.social.oauth2.AccessGrant)#org/springframework/social/connect/ApiAdapter/fetchUserProfile(A)
io/corbel/iam/auth/google/connect/GoogleConnectionFactory/extractProviderUserId(org.springframework.social.oauth2.AccessGrant)#org/springframework/social/oauth2/AccessGrant/getAccessToken()
io/corbel/iam/service/DefaultEventsServiceTest/testSendNotificationEvent()#io/corbel/iam/service/EventsService/sendNotificationEvent(java.lang.String,java.lang.String,java.lang.String,java.util.Map)
io/corbel/iam/service/DefaultEventsServiceTest/testSendNotificationEvent()#io/corbel/eventbus/service/EventBus/dispatch(io.corbel.eventbus.Event)
io/corbel/iam/service/DefaultEventsServiceTest/testSendNotificationEvent()#org/mockito/Mockito/verify(T)
io/corbel/iam/service/DefaultEventsServiceTest/testSendNotificationEvent()#java/util/HashMap/HashMap()
io/corbel/iam/service/DefaultEventsServiceTest/testSendNotificationEvent()#io/corbel/event/NotificationEvent/setProperties(java.util.Map)
io/corbel/iam/service/DefaultEventsServiceTest/testSendNotificationEvent()#io/corbel/event/NotificationEvent/NotificationEvent(java.lang.String,java.lang.String,java.lang.String)
io/corbel/iam/service/DefaultEventsServiceTest/testSendDomainDeletedEvent()#io/corbel/eventbus/service/EventBus/dispatch(io.corbel.eventbus.Event)
io/corbel/iam/service/DefaultEventsServiceTest/testSendDomainDeletedEvent()#org/mockito/Mockito/verify(T)
io/corbel/iam/service/DefaultEventsServiceTest/testSendDomainDeletedEvent()#io/corbel/iam/service/EventsService/sendDomainDeletedEvent(java.lang.String)
io/corbel/iam/service/DefaultEventsServiceTest/testSendDomainDeletedEvent()#io/corbel/event/DomainDeletedEvent/DomainDeletedEvent(java.lang.String)
io/corbel/iam/service/DefaultEventsServiceTest/testSendUserModifiedEvent()#io/corbel/iam/service/EventsService/sendUserModifiedEvent(io.corbel.iam.model.User)
io/corbel/iam/service/DefaultEventsServiceTest/testSendUserModifiedEvent()#io/corbel/event/UserModifiedEvent/UserModifiedEvent(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Set,java.util.Set)
io/corbel/iam/service/DefaultEventsServiceTest/testSendUserModifiedEvent()#io/corbel/eventbus/service/EventBus/dispatch(io.corbel.eventbus.Event)
io/corbel/iam/service/DefaultEventsServiceTest/testSendUserModifiedEvent()#org/mockito/Mockito/verify(T)
io/corbel/iam/service/DefaultEventsServiceTest/testSendDeviceCreateEvent()#io/corbel/eventbus/service/EventBus/dispatch(io.corbel.eventbus.Event)
io/corbel/iam/service/DefaultEventsServiceTest/testSendDeviceCreateEvent()#org/mockito/Mockito/verify(T)
io/corbel/iam/service/DefaultEventsServiceTest/testSendDeviceCreateEvent()#io/corbel/event/DeviceEvent/DeviceEvent(io.corbel.event.DeviceEvent.Type,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
io/corbel/iam/service/DefaultEventsServiceTest/testSendDeviceCreateEvent()#io/corbel/iam/service/EventsService/sendDeviceCreateEvent(io.corbel.iam.model.Device)
io/corbel/iam/service/DefaultEventsServiceTest/testSendUserAuthenticationEvent()#io/corbel/eventbus/service/EventBus/dispatch(io.corbel.eventbus.Event)
io/corbel/iam/service/DefaultEventsServiceTest/testSendUserAuthenticationEvent()#io/corbel/event/UserAuthenticationEvent/UserAuthenticationEvent(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Set,java.util.Set)
io/corbel/iam/service/DefaultEventsServiceTest/testSendUserAuthenticationEvent()#org/mockito/Mockito/verify(T)
io/corbel/iam/service/DefaultEventsServiceTest/testSendUserAuthenticationEvent()#io/corbel/iam/service/EventsService/sendUserAuthenticationEvent(io.corbel.iam.model.User)
io/corbel/iam/service/DefaultEventsServiceTest/testSendClientAuthenticationEvent()#io/corbel/eventbus/service/EventBus/dispatch(io.corbel.eventbus.Event)
io/corbel/iam/service/DefaultEventsServiceTest/testSendClientAuthenticationEvent()#org/mockito/Mockito/verify(T)
io/corbel/iam/service/DefaultEventsServiceTest/testSendClientAuthenticationEvent()#io/corbel/iam/service/EventsService/sendClientAuthenticationEvent(java.lang.String,java.lang.String)
io/corbel/iam/service/DefaultEventsServiceTest/testSendClientAuthenticationEvent()#io/corbel/event/AuthorizationEvent/clientAuthenticationEvent(java.lang.String,java.lang.String)
io/corbel/iam/service/DefaultEventsServiceTest/setUp()#io/corbel/iam/model/Device/getUserId()
io/corbel/iam/service/DefaultEventsServiceTest/setUp()#org/mockito/Mockito/when(T)
io/corbel/iam/service/DefaultEventsServiceTest/setUp()#io/corbel/iam/model/Device/getUid()
io/corbel/iam/service/DefaultEventsServiceTest/setUp()#io/corbel/iam/model/User/getScopes()
io/corbel/iam/service/DefaultEventsServiceTest/setUp()#io/corbel/iam/model/User/getDomain()
io/corbel/iam/service/DefaultEventsServiceTest/setUp()#io/corbel/iam/model/Device/getType()
io/corbel/iam/service/DefaultEventsServiceTest/setUp()#io/corbel/iam/model/Entity/getId()
io/corbel/iam/service/DefaultEventsServiceTest/setUp()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/service/DefaultEventsServiceTest/setUp()#io/corbel/iam/model/User/getProperties()
io/corbel/iam/service/DefaultEventsServiceTest/setUp()#io/corbel/iam/model/User/getFirstName()
io/corbel/iam/service/DefaultEventsServiceTest/setUp()#io/corbel/iam/model/User/getGroups()
io/corbel/iam/service/DefaultEventsServiceTest/setUp()#io/corbel/iam/model/User/getEmail()
io/corbel/iam/service/DefaultEventsServiceTest/setUp()#io/corbel/iam/model/Device/getName()
io/corbel/iam/service/DefaultEventsServiceTest/setUp()#io/corbel/iam/model/User/getUsername()
io/corbel/iam/service/DefaultEventsServiceTest/setUp()#io/corbel/iam/model/User/getLastName()
io/corbel/iam/service/DefaultEventsServiceTest/setUp()#io/corbel/iam/model/Device/isNotificationEnabled()
io/corbel/iam/service/DefaultEventsServiceTest/setUp()#io/corbel/iam/service/DefaultEventsService/DefaultEventsService(io.corbel.eventbus.service.EventBus)
io/corbel/iam/service/DefaultEventsServiceTest/setUp()#io/corbel/iam/model/User/getProfileUrl()
io/corbel/iam/service/DefaultEventsServiceTest/setUp()#io/corbel/iam/model/User/getCountry()
io/corbel/iam/service/DefaultEventsServiceTest/setUp()#io/corbel/iam/model/Device/getNotificationUri()
io/corbel/iam/service/DefaultEventsServiceTest/setUp()#io/corbel/iam/model/Device/getDomain()
io/corbel/iam/service/DefaultEventsServiceTest/setUp()#io/corbel/iam/model/User/getPhoneNumber()
io/corbel/iam/service/DefaultEventsServiceTest/testSendCreateScope()#io/corbel/event/ScopeUpdateEvent/createScopeEvent(java.lang.String,java.lang.String)
io/corbel/iam/service/DefaultEventsServiceTest/testSendCreateScope()#io/corbel/eventbus/service/EventBus/dispatch(io.corbel.eventbus.Event)
io/corbel/iam/service/DefaultEventsServiceTest/testSendCreateScope()#org/mockito/Mockito/verify(T)
io/corbel/iam/service/DefaultEventsServiceTest/testSendCreateScope()#io/corbel/iam/service/EventsService/sendCreateScope(java.lang.String)
io/corbel/iam/service/DefaultEventsServiceTest/testSendUserDeletedEvent()#io/corbel/eventbus/service/EventBus/dispatch(io.corbel.eventbus.Event)
io/corbel/iam/service/DefaultEventsServiceTest/testSendUserDeletedEvent()#io/corbel/iam/service/EventsService/sendUserDeletedEvent(io.corbel.iam.model.User,java.lang.String)
io/corbel/iam/service/DefaultEventsServiceTest/testSendUserDeletedEvent()#org/mockito/Mockito/verify(T)
io/corbel/iam/service/DefaultEventsServiceTest/testSendUserDeletedEvent()#io/corbel/iam/model/User/User()
io/corbel/iam/service/DefaultEventsServiceTest/testSendUserDeletedEvent()#io/corbel/event/UserDeletedEvent/UserDeletedEvent(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
io/corbel/iam/service/DefaultEventsServiceTest/testSendDeviceDeleteEvent()#io/corbel/eventbus/service/EventBus/dispatch(io.corbel.eventbus.Event)
io/corbel/iam/service/DefaultEventsServiceTest/testSendDeviceDeleteEvent()#org/mockito/Mockito/verify(T)
io/corbel/iam/service/DefaultEventsServiceTest/testSendDeviceDeleteEvent()#io/corbel/event/DeviceEvent/DeviceEvent(io.corbel.event.DeviceEvent.Type,java.lang.String,java.lang.String,java.lang.String)
io/corbel/iam/service/DefaultEventsServiceTest/testSendDeviceDeleteEvent()#io/corbel/iam/service/EventsService/sendDeviceDeleteEvent(java.lang.String,java.lang.String,java.lang.String)
io/corbel/iam/service/DefaultEventsServiceTest/testSendDeviceUpdateEvent()#io/corbel/eventbus/service/EventBus/dispatch(io.corbel.eventbus.Event)
io/corbel/iam/service/DefaultEventsServiceTest/testSendDeviceUpdateEvent()#org/mockito/Mockito/verify(T)
io/corbel/iam/service/DefaultEventsServiceTest/testSendDeviceUpdateEvent()#io/corbel/iam/service/EventsService/sendDeviceUpdateEvent(io.corbel.iam.model.Device)
io/corbel/iam/service/DefaultEventsServiceTest/testSendDeviceUpdateEvent()#io/corbel/event/DeviceEvent/DeviceEvent(io.corbel.event.DeviceEvent.Type,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
io/corbel/iam/service/DefaultEventsServiceTest/testSendDeleteScope()#io/corbel/eventbus/service/EventBus/dispatch(io.corbel.eventbus.Event)
io/corbel/iam/service/DefaultEventsServiceTest/testSendDeleteScope()#org/mockito/Mockito/verify(T)
io/corbel/iam/service/DefaultEventsServiceTest/testSendDeleteScope()#io/corbel/iam/service/EventsService/sendDeleteScope(java.lang.String)
io/corbel/iam/service/DefaultEventsServiceTest/testSendDeleteScope()#io/corbel/event/ScopeUpdateEvent/deleteScopeEvent(java.lang.String,java.lang.String)
io/corbel/iam/service/DefaultEventsServiceTest/testSendUserCreatedEvent()#io/corbel/eventbus/service/EventBus/dispatch(io.corbel.eventbus.Event)
io/corbel/iam/service/DefaultEventsServiceTest/testSendUserCreatedEvent()#org/mockito/Mockito/verify(T)
io/corbel/iam/service/DefaultEventsServiceTest/testSendUserCreatedEvent()#io/corbel/event/UserCreatedEvent/UserCreatedEvent(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Set,java.util.Set)
io/corbel/iam/service/DefaultEventsServiceTest/testSendUserCreatedEvent()#io/corbel/iam/service/EventsService/sendUserCreatedEvent(io.corbel.iam.model.User)
io/corbel/iam/api/ScopeResourceTest/testCreateBadScope()#org/mockito/Mockito/doThrow(java.lang.Class)
io/corbel/iam/api/ScopeResourceTest/testCreateBadScope()#io/corbel/iam/model/Entity/getId()
io/corbel/iam/api/ScopeResourceTest/testCreateBadScope()#org/mockito/stubbing/Stubber/when(T)
io/corbel/iam/api/ScopeResourceTest/testCreateBadScope()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/iam/api/ScopeResourceTest/testCreateBadScope()#javax/ws/rs/client/WebTarget/request()
io/corbel/iam/api/ScopeResourceTest/testCreateBadScope()#javax/ws/rs/core/Response/getStatus()
io/corbel/iam/api/ScopeResourceTest/testCreateBadScope()#org/mockito/ArgumentCaptor/capture()
io/corbel/iam/api/ScopeResourceTest/testCreateBadScope()#javax/ws/rs/client/Entity/json(T)
io/corbel/iam/api/ScopeResourceTest/testCreateBadScope()#org/mockito/Matchers/any()
io/corbel/iam/api/ScopeResourceTest/testCreateBadScope()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/iam/api/ScopeResourceTest/testCreateBadScope()#javax/ws/rs/client/SyncInvoker/post(javax.ws.rs.client.Entity,java.lang.Class)
io/corbel/iam/api/ScopeResourceTest/testCreateBadScope()#javax/ws/rs/core/Response/Status/getStatusCode()
io/corbel/iam/api/ScopeResourceTest/testCreateBadScope()#org/mockito/ArgumentCaptor/getValue()
io/corbel/iam/api/ScopeResourceTest/testCreateBadScope()#io/corbel/iam/service/ScopeService/create(io.corbel.iam.model.Scope)
io/corbel/iam/api/ScopeResourceTest/testCreateBadScope()#org/mockito/ArgumentCaptor/forClass(java.lang.Class)
io/corbel/iam/api/ScopeResourceTest/testCreateBadScope()#org/mockito/Mockito/verify(T)
io/corbel/iam/api/ScopeResourceTest/testCreateBadScope()#org/junit/Assert/assertEquals(long,long)
io/corbel/iam/api/ScopeResourceTest/testCreateBadScope()#org/junit/Assert/assertEquals(java.lang.Object,java.lang.Object)
io/corbel/iam/api/ScopeResourceTest/testCreateScopeWithParameters()#io/corbel/iam/model/Entity/getId()
io/corbel/iam/api/ScopeResourceTest/testCreateScopeWithParameters()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/iam/api/ScopeResourceTest/testCreateScopeWithParameters()#javax/ws/rs/client/WebTarget/request()
io/corbel/iam/api/ScopeResourceTest/testCreateScopeWithParameters()#org/junit/Assert/assertTrue(boolean)
io/corbel/iam/api/ScopeResourceTest/testCreateScopeWithParameters()#javax/ws/rs/core/Response/getStatus()
io/corbel/iam/api/ScopeResourceTest/testCreateScopeWithParameters()#org/mockito/ArgumentCaptor/capture()
io/corbel/iam/api/ScopeResourceTest/testCreateScopeWithParameters()#javax/ws/rs/client/Entity/json(T)
io/corbel/iam/api/ScopeResourceTest/testCreateScopeWithParameters()#javax/ws/rs/core/Response/getHeaderString(java.lang.String)
io/corbel/iam/api/ScopeResourceTest/testCreateScopeWithParameters()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/iam/api/ScopeResourceTest/testCreateScopeWithParameters()#javax/ws/rs/core/Response/Status/getStatusCode()
io/corbel/iam/api/ScopeResourceTest/testCreateScopeWithParameters()#org/mockito/ArgumentCaptor/getValue()
io/corbel/iam/api/ScopeResourceTest/testCreateScopeWithParameters()#io/corbel/iam/service/ScopeService/create(io.corbel.iam.model.Scope)
io/corbel/iam/api/ScopeResourceTest/testCreateScopeWithParameters()#org/mockito/ArgumentCaptor/forClass(java.lang.Class)
io/corbel/iam/api/ScopeResourceTest/testCreateScopeWithParameters()#org/mockito/Mockito/verify(T)
io/corbel/iam/api/ScopeResourceTest/testCreateScopeWithParameters()#org/junit/Assert/assertEquals(long,long)
io/corbel/iam/api/ScopeResourceTest/testCreateScopeWithParameters()#org/junit/Assert/assertEquals(java.lang.Object,java.lang.Object)
io/corbel/iam/api/ScopeResourceTest/testCreateScopeWithParameters()#java/lang/String/endsWith(java.lang.String)
io/corbel/iam/api/ScopeResourceTest/testCreateScopeWithParameters()#javax/ws/rs/client/SyncInvoker/post(javax.ws.rs.client.Entity,java.lang.Class)
io/corbel/iam/api/ScopeResourceTest/setup()#org/mockito/Mockito/reset(T[])
io/corbel/iam/api/ScopeResourceTest/testGetScope()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/api/ScopeResourceTest/testGetScope()#org/mockito/Mockito/when(T)
io/corbel/iam/api/ScopeResourceTest/testGetScope()#org/mockito/Mockito/verify(T)
io/corbel/iam/api/ScopeResourceTest/testGetScope()#javax/ws/rs/client/WebTarget/request(javax.ws.rs.core.MediaType[])
io/corbel/iam/api/ScopeResourceTest/testGetScope()#io/corbel/iam/service/ScopeService/getScope(java.lang.String)
io/corbel/iam/api/ScopeResourceTest/testGetScope()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/iam/api/ScopeResourceTest/testGetScope()#javax/ws/rs/client/SyncInvoker/get(java.lang.Class)
io/corbel/iam/api/ScopeResourceTest/testGetScope()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/iam/api/ScopeResourceTest/testGetScope()#io/corbel/iam/model/Scope/Scope(java.lang.String,java.lang.String,java.lang.String,java.util.Set,java.util.Set,com.google.gson.JsonObject)
io/corbel/iam/api/ScopeResourceTest/testGetScope()#org/mockito/Matchers/eq(T)
io/corbel/iam/api/ScopeResourceTest/testGetScope()#org/junit/Assert/assertEquals(java.lang.Object,java.lang.Object)
io/corbel/iam/api/ScopeResourceTest/testGetUnknownScope()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/api/ScopeResourceTest/testGetUnknownScope()#javax/ws/rs/core/Response/Status/getStatusCode()
io/corbel/iam/api/ScopeResourceTest/testGetUnknownScope()#org/mockito/Mockito/when(T)
io/corbel/iam/api/ScopeResourceTest/testGetUnknownScope()#org/mockito/Mockito/verify(T)
io/corbel/iam/api/ScopeResourceTest/testGetUnknownScope()#javax/ws/rs/client/WebTarget/request(javax.ws.rs.core.MediaType[])
io/corbel/iam/api/ScopeResourceTest/testGetUnknownScope()#io/corbel/iam/service/ScopeService/getScope(java.lang.String)
io/corbel/iam/api/ScopeResourceTest/testGetUnknownScope()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/iam/api/ScopeResourceTest/testGetUnknownScope()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/iam/api/ScopeResourceTest/testGetUnknownScope()#javax/ws/rs/client/SyncInvoker/get(java.lang.Class)
io/corbel/iam/api/ScopeResourceTest/testGetUnknownScope()#javax/ws/rs/core/Response/getStatus()
io/corbel/iam/api/ScopeResourceTest/testGetUnknownScope()#org/mockito/Matchers/eq(T)
io/corbel/iam/api/ScopeResourceTest/testGetUnknownScope()#org/junit/Assert/assertEquals(long,long)
io/corbel/iam/api/ScopeResourceTest/testDeleteScope()#javax/ws/rs/core/Response/Status/getStatusCode()
io/corbel/iam/api/ScopeResourceTest/testDeleteScope()#org/mockito/Mockito/verify(T)
io/corbel/iam/api/ScopeResourceTest/testDeleteScope()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/iam/api/ScopeResourceTest/testDeleteScope()#javax/ws/rs/client/WebTarget/request()
io/corbel/iam/api/ScopeResourceTest/testDeleteScope()#javax/ws/rs/core/Response/getStatus()
io/corbel/iam/api/ScopeResourceTest/testDeleteScope()#io/corbel/iam/service/ScopeService/delete(java.lang.String)
io/corbel/iam/api/ScopeResourceTest/testDeleteScope()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/iam/api/ScopeResourceTest/testDeleteScope()#javax/ws/rs/client/SyncInvoker/delete(java.lang.Class)
io/corbel/iam/api/ScopeResourceTest/testDeleteScope()#org/mockito/Matchers/eq(T)
io/corbel/iam/api/ScopeResourceTest/testDeleteScope()#org/junit/Assert/assertEquals(long,long)
io/corbel/iam/api/ScopeResourceTest/testCreateScopeWithoutParameters()#io/corbel/iam/model/Entity/getId()
io/corbel/iam/api/ScopeResourceTest/testCreateScopeWithoutParameters()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/iam/api/ScopeResourceTest/testCreateScopeWithoutParameters()#javax/ws/rs/client/WebTarget/request()
io/corbel/iam/api/ScopeResourceTest/testCreateScopeWithoutParameters()#org/junit/Assert/assertTrue(boolean)
io/corbel/iam/api/ScopeResourceTest/testCreateScopeWithoutParameters()#javax/ws/rs/core/Response/getStatus()
io/corbel/iam/api/ScopeResourceTest/testCreateScopeWithoutParameters()#org/mockito/ArgumentCaptor/capture()
io/corbel/iam/api/ScopeResourceTest/testCreateScopeWithoutParameters()#javax/ws/rs/client/Entity/json(T)
io/corbel/iam/api/ScopeResourceTest/testCreateScopeWithoutParameters()#javax/ws/rs/core/Response/getHeaderString(java.lang.String)
io/corbel/iam/api/ScopeResourceTest/testCreateScopeWithoutParameters()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/iam/api/ScopeResourceTest/testCreateScopeWithoutParameters()#javax/ws/rs/core/Response/Status/getStatusCode()
io/corbel/iam/api/ScopeResourceTest/testCreateScopeWithoutParameters()#org/mockito/ArgumentCaptor/getValue()
io/corbel/iam/api/ScopeResourceTest/testCreateScopeWithoutParameters()#io/corbel/iam/service/ScopeService/create(io.corbel.iam.model.Scope)
io/corbel/iam/api/ScopeResourceTest/testCreateScopeWithoutParameters()#org/mockito/ArgumentCaptor/forClass(java.lang.Class)
io/corbel/iam/api/ScopeResourceTest/testCreateScopeWithoutParameters()#org/mockito/Mockito/verify(T)
io/corbel/iam/api/ScopeResourceTest/testCreateScopeWithoutParameters()#org/junit/Assert/assertEquals(long,long)
io/corbel/iam/api/ScopeResourceTest/testCreateScopeWithoutParameters()#org/junit/Assert/assertEquals(java.lang.Object,java.lang.Object)
io/corbel/iam/api/ScopeResourceTest/testCreateScopeWithoutParameters()#java/lang/String/endsWith(java.lang.String)
io/corbel/iam/api/ScopeResourceTest/testCreateScopeWithoutParameters()#javax/ws/rs/client/SyncInvoker/post(javax.ws.rs.client.Entity,java.lang.Class)
io/corbel/resources/rem/service/DefaultAclConfigurationService/createConfiguration(java.net.URI,io.corbel.resources.rem.model.ManagedCollection)#io/corbel/resources/rem/service/DefaultAclConfigurationService/getResmiPostRem()
io/corbel/resources/rem/service/DefaultAclConfigurationService/createConfiguration(java.net.URI,io.corbel.resources.rem.model.ManagedCollection)#java/util/Collections/emptyList()
io/corbel/resources/rem/service/DefaultAclConfigurationService/createConfiguration(java.net.URI,io.corbel.resources.rem.model.ManagedCollection)#io/corbel/resources/rem/request/builder/RequestParametersBuilder/build()
io/corbel/resources/rem/service/DefaultAclConfigurationService/createConfiguration(java.net.URI,io.corbel.resources.rem.model.ManagedCollection)#com/google/gson/Gson/toJsonTree(java.lang.Object)
io/corbel/resources/rem/service/DefaultAclConfigurationService/createConfiguration(java.net.URI,io.corbel.resources.rem.model.ManagedCollection)#io/corbel/resources/rem/service/AclResourcesService/saveResource(io.corbel.resources.rem.Rem,io.corbel.resources.rem.request.RequestParameters,java.lang.String,java.net.URI,java.lang.Object,java.util.List)
io/corbel/resources/rem/service/DefaultAclConfigurationService/createConfiguration(java.net.URI,io.corbel.resources.rem.model.ManagedCollection)#com/google/gson/JsonElement/getAsJsonObject()
io/corbel/resources/rem/service/DefaultAclConfigurationService/createConfiguration(java.net.URI,io.corbel.resources.rem.model.ManagedCollection)#io/corbel/resources/rem/request/builder/RequestParametersBuilder/RequestParametersBuilder(java.lang.String)
io/corbel/resources/rem/service/DefaultAclConfigurationService/getConfiguration(java.lang.String,java.lang.String)#io/corbel/lib/queries/builder/ResourceQueryBuilder/add(java.lang.String,java.lang.String)
io/corbel/resources/rem/service/DefaultAclConfigurationService/getConfiguration(java.lang.String,java.lang.String)#io/corbel/lib/queries/builder/ResourceQueryBuilder/build()
io/corbel/resources/rem/service/DefaultAclConfigurationService/getConfiguration(java.lang.String,java.lang.String)#io/corbel/lib/queries/builder/QueryParametersBuilder/condition(io.corbel.lib.queries.request.ResourceQuery)
io/corbel/resources/rem/service/DefaultAclConfigurationService/getConfiguration(java.lang.String,java.lang.String)#io/corbel/lib/queries/builder/QueryParametersBuilder/build()
io/corbel/resources/rem/service/DefaultAclConfigurationService/getConfiguration(java.lang.String,java.lang.String)#io/corbel/resources/rem/service/DefaultAclConfigurationService/getResourceWithParameters(java.lang.String,io.corbel.resources.rem.request.RequestParameters)
io/corbel/resources/rem/service/DefaultAclConfigurationService/getConfiguration(java.lang.String,java.lang.String)#io/corbel/resources/rem/request/builder/RequestParametersBuilder/build()
io/corbel/resources/rem/service/DefaultAclConfigurationService/getConfiguration(java.lang.String,java.lang.String)#io/corbel/resources/rem/request/CollectionParametersImpl/CollectionParametersImpl(io.corbel.lib.queries.jaxrs.QueryParameters)
io/corbel/resources/rem/service/DefaultAclConfigurationService/getConfiguration(java.lang.String,java.lang.String)#io/corbel/resources/rem/request/builder/RequestParametersBuilder/RequestParametersBuilder(java.lang.String)
io/corbel/resources/rem/service/DefaultAclConfigurationService/getConfiguration(java.lang.String,java.lang.String)#io/corbel/resources/rem/request/builder/RequestParametersBuilder/apiParameters(E)
io/corbel/resources/rem/service/DefaultAclConfigurationService/getConfiguration(java.lang.String,java.lang.String)#io/corbel/lib/queries/builder/ResourceQueryBuilder/ResourceQueryBuilder()
io/corbel/resources/rem/service/DefaultAclConfigurationService/getConfiguration(java.lang.String,java.lang.String)#io/corbel/lib/queries/builder/QueryParametersBuilder/QueryParametersBuilder()
io/corbel/resources/rem/service/DefaultAclConfigurationService/addAclConfiguration(java.lang.String)#java/util/stream/Stream/anyMatch(java.util.function.Predicate)
io/corbel/resources/rem/service/DefaultAclConfigurationService/addAclConfiguration(java.lang.String)#java/lang/Iterable/forEach(java.util.function.Consumer)
io/corbel/resources/rem/service/DefaultAclConfigurationService/addAclConfiguration(java.lang.String)#java/util/Collection/stream()
io/corbel/resources/rem/service/DefaultAclConfigurationService/addAclConfiguration(java.lang.String)#io/corbel/resources/rem/service/RemService/getRegisteredRemDescriptions()
io/corbel/resources/rem/service/DefaultAclConfigurationService/getConfigurations(java.lang.String)#io/corbel/resources/rem/service/AclResourcesService/getCollection(io.corbel.resources.rem.Rem,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.List)
io/corbel/resources/rem/service/DefaultAclConfigurationService/getConfigurations(java.lang.String)#io/corbel/lib/queries/builder/ResourceQueryBuilder/add(java.lang.String,java.lang.String)
io/corbel/resources/rem/service/DefaultAclConfigurationService/getConfigurations(java.lang.String)#io/corbel/lib/queries/builder/ResourceQueryBuilder/build()
io/corbel/resources/rem/service/DefaultAclConfigurationService/getConfigurations(java.lang.String)#io/corbel/lib/queries/builder/QueryParametersBuilder/build()
io/corbel/resources/rem/service/DefaultAclConfigurationService/getConfigurations(java.lang.String)#java/util/Collections/emptyList()
io/corbel/resources/rem/service/DefaultAclConfigurationService/getConfigurations(java.lang.String)#io/corbel/resources/rem/request/CollectionParametersImpl/CollectionParametersImpl(io.corbel.lib.queries.jaxrs.QueryParameters)
io/corbel/resources/rem/service/DefaultAclConfigurationService/getConfigurations(java.lang.String)#io/corbel/resources/rem/request/builder/RequestParametersBuilder/RequestParametersBuilder(java.lang.String)
io/corbel/resources/rem/service/DefaultAclConfigurationService/getConfigurations(java.lang.String)#io/corbel/lib/queries/builder/QueryParametersBuilder/queries(io.corbel.lib.queries.request.ResourceQuery[])
io/corbel/resources/rem/service/DefaultAclConfigurationService/getConfigurations(java.lang.String)#io/corbel/resources/rem/request/builder/RequestParametersBuilder/apiParameters(E)
io/corbel/resources/rem/service/DefaultAclConfigurationService/getConfigurations(java.lang.String)#io/corbel/lib/queries/builder/ResourceQueryBuilder/ResourceQueryBuilder()
io/corbel/resources/rem/service/DefaultAclConfigurationService/getConfigurations(java.lang.String)#io/corbel/lib/queries/builder/QueryParametersBuilder/QueryParametersBuilder()
io/corbel/resources/rem/service/DefaultAclConfigurationService/getConfigurations(java.lang.String)#io/corbel/resources/rem/service/DefaultAclConfigurationService/getResmiGetRem()
io/corbel/resources/rem/service/DefaultAclConfigurationService/getConfigurations(java.lang.String)#io/corbel/resources/rem/request/builder/RequestParametersBuilder/build()
io/corbel/resources/rem/service/DefaultAclConfigurationService/constructAclObjectWithDefaultPermission(java.lang.String)#java/lang/Enum/name()
io/corbel/resources/rem/service/DefaultAclConfigurationService/constructAclObjectWithDefaultPermission(java.lang.String)#org/springframework/util/StringUtils/isEmpty(java.lang.Object)
io/corbel/resources/rem/service/DefaultAclConfigurationService/constructAclObjectWithDefaultPermission(java.lang.String)#com/google/gson/JsonObject/add(java.lang.String,com.google.gson.JsonElement)
io/corbel/resources/rem/service/DefaultAclConfigurationService/constructAclObjectWithDefaultPermission(java.lang.String)#com/google/gson/JsonObject/addProperty(java.lang.String,java.lang.String)
io/corbel/resources/rem/service/DefaultAclConfigurationService/constructAclObjectWithDefaultPermission(java.lang.String)#com/google/gson/JsonObject/JsonObject()
io/corbel/resources/rem/service/DefaultAclConfigurationService/getConfiguration(java.lang.String)#io/corbel/resources/rem/service/DefaultAclConfigurationService/getResourceWithParameters(java.lang.String,io.corbel.resources.rem.request.RequestParameters)
io/corbel/resources/rem/service/DefaultAclConfigurationService/getConfiguration(java.lang.String)#io/corbel/resources/rem/request/builder/RequestParametersBuilder/build()
io/corbel/resources/rem/service/DefaultAclConfigurationService/getConfiguration(java.lang.String)#io/corbel/resources/rem/request/builder/RequestParametersBuilder/RequestParametersBuilder(java.lang.String)
io/corbel/resources/rem/service/DefaultAclConfigurationService/removeAclConfiguration(java.lang.String,java.lang.String)#java/util/stream/Stream/map(java.util.function.Function)
io/corbel/resources/rem/service/DefaultAclConfigurationService/removeAclConfiguration(java.lang.String,java.lang.String)#io/corbel/resources/rem/service/AclResourcesService/deleteResource(io.corbel.resources.rem.Rem,java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.List)
io/corbel/resources/rem/service/DefaultAclConfigurationService/removeAclConfiguration(java.lang.String,java.lang.String)#io/corbel/resources/rem/request/ResourceId/ResourceId(java.lang.String)
io/corbel/resources/rem/service/DefaultAclConfigurationService/removeAclConfiguration(java.lang.String,java.lang.String)#io/corbel/resources/rem/request/builder/RequestParametersBuilder/build()
io/corbel/resources/rem/service/DefaultAclConfigurationService/removeAclConfiguration(java.lang.String,java.lang.String)#java/util/stream/Stream/forEach(java.util.function.Consumer)
io/corbel/resources/rem/service/DefaultAclConfigurationService/removeAclConfiguration(java.lang.String,java.lang.String)#io/corbel/resources/rem/request/builder/RequestParametersBuilder/RequestParametersBuilder(java.lang.String)
io/corbel/resources/rem/service/DefaultAclConfigurationService/removeAclConfiguration(java.lang.String,java.lang.String)#io/corbel/resources/rem/service/DefaultAclConfigurationService/getResmiDeleteRem()
io/corbel/resources/rem/service/DefaultAclConfigurationService/removeAclConfiguration(java.lang.String,java.lang.String)#java/util/Collections/emptyList()
io/corbel/resources/rem/service/DefaultAclConfigurationService/removeAclConfiguration(java.lang.String,java.lang.String)#java/util/Collection/stream()
io/corbel/resources/rem/service/DefaultAclConfigurationService/getResmiPostRem()#io/corbel/resources/rem/service/RemService/getRem(java.lang.String)
io/corbel/resources/rem/service/DefaultAclConfigurationService/refreshRegistry()#java/util/Optional/get()
io/corbel/resources/rem/service/DefaultAclConfigurationService/refreshRegistry()#javax/ws/rs/core/Response/getEntity()
io/corbel/resources/rem/service/DefaultAclConfigurationService/refreshRegistry()#javax/ws/rs/core/Response/Status/getStatusCode()
io/corbel/resources/rem/service/DefaultAclConfigurationService/refreshRegistry()#java/util/Collections/emptyList()
io/corbel/resources/rem/service/DefaultAclConfigurationService/refreshRegistry()#java/util/Optional/of(T)
io/corbel/resources/rem/service/DefaultAclConfigurationService/refreshRegistry()#org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)
io/corbel/resources/rem/service/DefaultAclConfigurationService/refreshRegistry()#java/util/Optional/isPresent()
io/corbel/resources/rem/service/DefaultAclConfigurationService/refreshRegistry()#com/google/gson/JsonElement/toString()
io/corbel/resources/rem/service/DefaultAclConfigurationService/refreshRegistry()#java/util/Optional/filter(java.util.function.Predicate)
io/corbel/resources/rem/service/DefaultAclConfigurationService/refreshRegistry()#io/corbel/resources/rem/service/AclResourcesService/getCollection(io.corbel.resources.rem.Rem,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.List)
io/corbel/resources/rem/service/DefaultAclConfigurationService/refreshRegistry()#java/util/Optional/map(java.util.function.Function)
io/corbel/resources/rem/service/DefaultAclConfigurationService/refreshRegistry()#io/corbel/resources/rem/service/DefaultAclConfigurationService/getResmiGetRem()
io/corbel/resources/rem/service/DefaultAclConfigurationService/refreshRegistry()#io/corbel/resources/rem/request/builder/RequestParametersBuilder/build()
io/corbel/resources/rem/service/DefaultAclConfigurationService/refreshRegistry()#org/slf4j/Logger/error(java.lang.String,java.lang.Object)
io/corbel/resources/rem/service/DefaultAclConfigurationService/refreshRegistry()#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/rem/service/DefaultAclConfigurationService/refreshRegistry()#io/corbel/resources/rem/service/DefaultAclConfigurationService/addAclConfiguration(java.lang.String)
io/corbel/resources/rem/service/DefaultAclConfigurationService/refreshRegistry()#io/corbel/resources/rem/request/builder/RequestParametersBuilder/RequestParametersBuilder(java.lang.String)
io/corbel/resources/rem/service/DefaultAclConfigurationService/updateConfiguration(java.lang.String,io.corbel.resources.rem.model.ManagedCollection)#io/corbel/resources/rem/request/ResourceId/ResourceId(java.lang.String)
io/corbel/resources/rem/service/DefaultAclConfigurationService/updateConfiguration(java.lang.String,io.corbel.resources.rem.model.ManagedCollection)#java/util/Collections/emptyList()
io/corbel/resources/rem/service/DefaultAclConfigurationService/updateConfiguration(java.lang.String,io.corbel.resources.rem.model.ManagedCollection)#io/corbel/resources/rem/service/AclResourcesService/updateResource(io.corbel.resources.rem.Rem,java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.lang.Object,java.util.List)
io/corbel/resources/rem/service/DefaultAclConfigurationService/updateConfiguration(java.lang.String,io.corbel.resources.rem.model.ManagedCollection)#io/corbel/resources/rem/service/AclResourcesService/getResource(io.corbel.resources.rem.Rem,java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.List)
io/corbel/resources/rem/service/DefaultAclConfigurationService/updateConfiguration(java.lang.String,io.corbel.resources.rem.model.ManagedCollection)#com/google/gson/JsonElement/getAsJsonObject()
io/corbel/resources/rem/service/DefaultAclConfigurationService/updateConfiguration(java.lang.String,io.corbel.resources.rem.model.ManagedCollection)#io/corbel/resources/rem/request/builder/RequestParametersBuilder/RequestParametersBuilder(java.lang.String)
io/corbel/resources/rem/service/DefaultAclConfigurationService/updateConfiguration(java.lang.String,io.corbel.resources.rem.model.ManagedCollection)#io/corbel/resources/rem/service/DefaultAclConfigurationService/getResmiPutRem()
io/corbel/resources/rem/service/DefaultAclConfigurationService/updateConfiguration(java.lang.String,io.corbel.resources.rem.model.ManagedCollection)#io/corbel/lib/ws/api/error/ErrorResponseFactory/getInstance()
io/corbel/resources/rem/service/DefaultAclConfigurationService/updateConfiguration(java.lang.String,io.corbel.resources.rem.model.ManagedCollection)#io/corbel/resources/rem/service/DefaultAclConfigurationService/getResmiGetRem()
io/corbel/resources/rem/service/DefaultAclConfigurationService/updateConfiguration(java.lang.String,io.corbel.resources.rem.model.ManagedCollection)#io/corbel/resources/rem/request/builder/RequestParametersBuilder/build()
io/corbel/resources/rem/service/DefaultAclConfigurationService/updateConfiguration(java.lang.String,io.corbel.resources.rem.model.ManagedCollection)#com/google/gson/Gson/toJsonTree(java.lang.Object)
io/corbel/resources/rem/service/DefaultAclConfigurationService/updateConfiguration(java.lang.String,io.corbel.resources.rem.model.ManagedCollection)#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/rem/service/DefaultAclConfigurationService/updateConfiguration(java.lang.String,io.corbel.resources.rem.model.ManagedCollection)#io/corbel/lib/ws/api/error/ErrorResponseFactory/preconditionFailed(java.lang.String)
io/corbel/resources/rem/service/DefaultAclConfigurationService/updateConfiguration(java.lang.String,io.corbel.resources.rem.model.ManagedCollection)#org/springframework/http/HttpStatus/value()
io/corbel/resources/rem/service/DefaultAclConfigurationService/getResourceWithParameters(java.lang.String,io.corbel.resources.rem.request.RequestParameters)#io/corbel/resources/rem/request/ResourceId/ResourceId(java.lang.String)
io/corbel/resources/rem/service/DefaultAclConfigurationService/getResourceWithParameters(java.lang.String,io.corbel.resources.rem.request.RequestParameters)#java/util/Collections/emptyList()
io/corbel/resources/rem/service/DefaultAclConfigurationService/getResourceWithParameters(java.lang.String,io.corbel.resources.rem.request.RequestParameters)#io/corbel/resources/rem/service/AclResourcesService/getResource(io.corbel.resources.rem.Rem,java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.List)
io/corbel/resources/rem/service/DefaultAclConfigurationService/getResourceWithParameters(java.lang.String,io.corbel.resources.rem.request.RequestParameters)#io/corbel/resources/rem/service/DefaultAclConfigurationService/getResmiGetRem()
io/corbel/resources/rem/service/DefaultAclConfigurationService/getResmiGetRem()#io/corbel/resources/rem/service/RemService/getRem(java.lang.String)
io/corbel/resources/rem/service/DefaultAclConfigurationService/setResourcesWithDefaultPermission(java.lang.String,java.lang.String,java.lang.String)#io/corbel/resources/rem/service/DefaultAclConfigurationService/constructAclObjectWithDefaultPermission(java.lang.String)
io/corbel/resources/rem/service/DefaultAclConfigurationService/setResourcesWithDefaultPermission(java.lang.String,java.lang.String,java.lang.String)#io/corbel/resources/rem/Rem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional)
io/corbel/resources/rem/service/DefaultAclConfigurationService/setResourcesWithDefaultPermission(java.lang.String,java.lang.String,java.lang.String)#java/util/Optional/of(T)
io/corbel/resources/rem/service/DefaultAclConfigurationService/setResourcesWithDefaultPermission(java.lang.String,java.lang.String,java.lang.String)#io/corbel/resources/rem/request/builder/RequestParametersBuilder/build()
io/corbel/resources/rem/service/DefaultAclConfigurationService/setResourcesWithDefaultPermission(java.lang.String,java.lang.String,java.lang.String)#io/corbel/resources/rem/request/builder/RequestParametersBuilder/RequestParametersBuilder(java.lang.String)
io/corbel/resources/rem/service/DefaultAclConfigurationService/setResourcesWithDefaultPermission(java.lang.String,java.lang.String,java.lang.String)#io/corbel/resources/rem/service/DefaultAclConfigurationService/getResmiPutRem()
io/corbel/resources/rem/service/DefaultAclConfigurationService/getResmiDeleteRem()#io/corbel/resources/rem/service/RemService/getRem(java.lang.String)
io/corbel/resources/rem/service/DefaultAclConfigurationService/getResmiPutRem()#io/corbel/resources/rem/service/RemService/getRem(java.lang.String)
io/corbel/eworker/internal/AmqpEworkerRegistryTest/setup()#com/fasterxml/jackson/databind/ObjectMapper/ObjectMapper()
io/corbel/eworker/internal/AmqpEworkerRegistryTest/setup()#io/corbel/eworker/internal/AmqpEworkerRegistry/AmqpEworkerRegistry(io.corbel.evci.converter.DomainObjectJsonMessageConverterFactory,io.corbel.lib.rabbitmq.config.AmqpConfigurer,io.corbel.lib.rabbitmq.config.BackoffOptions,int,java.util.function.UnaryOperator)
io/corbel/eworker/internal/AmqpEworkerRegistryTest/setup()#io/corbel/evci/converter/DomainObjectJsonMessageConverterFactory/DomainObjectJsonMessageConverterFactory(com.fasterxml.jackson.databind.ObjectMapper)
io/corbel/eworker/internal/AmqpEworkerRegistryTest/setup()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/eworker/internal/AmqpEworkerRegistryTest/setup()#io/corbel/lib/rabbitmq/config/RabbitMQConfigurer/RabbitMQConfigurer(org.springframework.amqp.rabbit.core.RabbitAdmin,org.springframework.amqp.rabbit.connection.ConnectionFactory)
io/corbel/eworker/internal/AmqpEworkerRegistryTest/testDeclareEworker()#org/mockito/Mockito/verify(T,org.mockito.verification.VerificationMode)
io/corbel/eworker/internal/AmqpEworkerRegistryTest/testDeclareEworker()#io/corbel/evci/eworker/EworkerRegistry/registerEworker(io.corbel.evci.eworker.Eworker,java.lang.String,java.lang.String)
io/corbel/eworker/internal/AmqpEworkerRegistryTest/testDeclareEworker()#org/springframework/amqp/rabbit/core/RabbitAdmin/declareBinding(org.springframework.amqp.core.Binding)
io/corbel/eworker/internal/AmqpEworkerRegistryTest/testDeclareEworker()#org/springframework/amqp/rabbit/core/RabbitAdmin/declareQueue(org.springframework.amqp.core.Queue)
io/corbel/eworker/internal/AmqpEworkerRegistryTest/testDeclareEworker()#org/mockito/ArgumentCaptor/getAllValues()
io/corbel/eworker/internal/AmqpEworkerRegistryTest/testDeclareEworker()#java/util/List/get(int)
io/corbel/eworker/internal/AmqpEworkerRegistryTest/testDeclareEworker()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/eworker/internal/AmqpEworkerRegistryTest/testDeclareEworker()#org/mockito/Mockito/times(int)
io/corbel/eworker/internal/AmqpEworkerRegistryTest/testDeclareEworker()#org/mockito/ArgumentCaptor/forClass(java.lang.Class)
io/corbel/eworker/internal/AmqpEworkerRegistryTest/testDeclareEworker()#org/springframework/amqp/core/Queue/getName()
io/corbel/eworker/internal/AmqpEworkerRegistryTest/testDeclareEworker()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/eworker/internal/AmqpEworkerRegistryTest/testDeclareEworker()#org/mockito/ArgumentCaptor/capture()
io/corbel/oauth/api/ClientCredentialsAuthenticatorTest/before()#io/corbel/oauth/repository/ClientRepository/findByName(java.lang.String)
io/corbel/oauth/api/ClientCredentialsAuthenticatorTest/before()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/oauth/api/ClientCredentialsAuthenticatorTest/before()#io/corbel/oauth/model/Client/Client()
io/corbel/oauth/api/ClientCredentialsAuthenticatorTest/before()#io/corbel/oauth/model/Client/setKey(java.lang.String)
io/corbel/oauth/api/ClientCredentialsAuthenticatorTest/before()#io/corbel/oauth/api/auth/ClientCredentialsAuthenticator/ClientCredentialsAuthenticator(io.corbel.oauth.repository.ClientRepository)
io/corbel/oauth/api/ClientCredentialsAuthenticatorTest/before()#io/corbel/oauth/model/Client/setName(java.lang.String)
io/corbel/oauth/api/ClientCredentialsAuthenticatorTest/before()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/oauth/api/ClientCredentialsAuthenticatorTest/before()#org/mockito/Mockito/when(T)
io/corbel/oauth/api/ClientCredentialsAuthenticatorTest/authenticateClientMissingTest()#com/google/common/base/Optional/isPresent()
io/corbel/oauth/api/ClientCredentialsAuthenticatorTest/authenticateClientMissingTest()#org/fest/assertions/api/Assertions/assertThat(boolean)
io/corbel/oauth/api/ClientCredentialsAuthenticatorTest/authenticateClientMissingTest()#org/fest/assertions/api/BooleanAssert/isEqualTo(boolean)
io/corbel/oauth/api/ClientCredentialsAuthenticatorTest/authenticateClientMissingTest()#io/dropwizard/auth/basic/BasicCredentials/BasicCredentials(java.lang.String,java.lang.String)
io/corbel/oauth/api/ClientCredentialsAuthenticatorTest/authenticateClientMissingTest()#io/corbel/oauth/api/auth/ClientCredentialsAuthenticator/authenticate(io.dropwizard.auth.basic.BasicCredentials)
io/corbel/oauth/api/ClientCredentialsAuthenticatorTest/authenticateFailTest()#com/google/common/base/Optional/isPresent()
io/corbel/oauth/api/ClientCredentialsAuthenticatorTest/authenticateFailTest()#org/fest/assertions/api/Assertions/assertThat(boolean)
io/corbel/oauth/api/ClientCredentialsAuthenticatorTest/authenticateFailTest()#org/fest/assertions/api/BooleanAssert/isEqualTo(boolean)
io/corbel/oauth/api/ClientCredentialsAuthenticatorTest/authenticateFailTest()#io/dropwizard/auth/basic/BasicCredentials/BasicCredentials(java.lang.String,java.lang.String)
io/corbel/oauth/api/ClientCredentialsAuthenticatorTest/authenticateFailTest()#io/corbel/oauth/api/auth/ClientCredentialsAuthenticator/authenticate(io.dropwizard.auth.basic.BasicCredentials)
io/corbel/oauth/api/ClientCredentialsAuthenticatorTest/authenticateTest()#com/google/common/base/Optional/isPresent()
io/corbel/oauth/api/ClientCredentialsAuthenticatorTest/authenticateTest()#org/fest/assertions/api/Assertions/assertThat(boolean)
io/corbel/oauth/api/ClientCredentialsAuthenticatorTest/authenticateTest()#org/fest/assertions/api/BooleanAssert/isEqualTo(boolean)
io/corbel/oauth/api/ClientCredentialsAuthenticatorTest/authenticateTest()#io/dropwizard/auth/basic/BasicCredentials/BasicCredentials(java.lang.String,java.lang.String)
io/corbel/oauth/api/ClientCredentialsAuthenticatorTest/authenticateTest()#io/corbel/oauth/api/auth/ClientCredentialsAuthenticator/authenticate(io.dropwizard.auth.basic.BasicCredentials)
io/corbel/iam/api/DomainResource/getDomain(java.lang.String)#java/util/Optional/map(java.util.function.Function)
io/corbel/iam/api/DomainResource/getDomain(java.lang.String)#io/corbel/iam/service/DomainService/getDomain(java.lang.String)
io/corbel/iam/api/DomainResource/getDomain(java.lang.String)#java/util/Optional/orElseGet(java.util.function.Supplier)
io/corbel/iam/api/DomainResource/getAllDomains(java.lang.String,io.corbel.lib.queries.jaxrs.QueryParameters)#io/corbel/lib/queries/builder/ResourceQueryBuilder/build()
io/corbel/iam/api/DomainResource/getAllDomains(java.lang.String,io.corbel.lib.queries.jaxrs.QueryParameters)#io/corbel/lib/queries/builder/ResourceQueryBuilder/ResourceQueryBuilder(io.corbel.lib.queries.request.ResourceQuery)
io/corbel/iam/api/DomainResource/getAllDomains(java.lang.String,io.corbel.lib.queries.jaxrs.QueryParameters)#io/corbel/lib/queries/jaxrs/QueryParameters/getAggregation()
io/corbel/iam/api/DomainResource/getAllDomains(java.lang.String,io.corbel.lib.queries.jaxrs.QueryParameters)#java/util/Optional/orElse(T)
io/corbel/iam/api/DomainResource/getAllDomains(java.lang.String,io.corbel.lib.queries.jaxrs.QueryParameters)#io/corbel/lib/queries/jaxrs/QueryParameters/getQuery()
io/corbel/iam/api/DomainResource/getAllDomains(java.lang.String,io.corbel.lib.queries.jaxrs.QueryParameters)#java/util/Optional/map(java.util.function.Function)
io/corbel/iam/api/DomainResource/getAllDomains(java.lang.String,io.corbel.lib.queries.jaxrs.QueryParameters)#io/corbel/lib/queries/builder/ResourceQueryBuilder/add(java.lang.String,java.lang.String,io.corbel.lib.queries.request.QueryOperator)
io/corbel/iam/api/DomainResource/getAllDomains(java.lang.String,io.corbel.lib.queries.jaxrs.QueryParameters)#io/corbel/iam/api/DomainResource/generateDomainInIdRegex(java.lang.String)
io/corbel/iam/api/DomainResource/getAllDomains(java.lang.String,io.corbel.lib.queries.jaxrs.QueryParameters)#java/util/Optional/orElseGet(java.util.function.Supplier)
io/corbel/iam/api/DomainResource/deleteDomain(java.lang.String)#javax/ws/rs/core/Response/noContent()
io/corbel/iam/api/DomainResource/deleteDomain(java.lang.String)#javax/ws/rs/core/Response/ResponseBuilder/build()
io/corbel/iam/api/DomainResource/deleteDomain(java.lang.String)#io/corbel/iam/service/DomainService/delete(java.lang.String)
io/corbel/iam/api/DomainResource/modifyDomain(java.lang.String,io.corbel.iam.model.Domain)#javax/ws/rs/core/Response/noContent()
io/corbel/iam/api/DomainResource/modifyDomain(java.lang.String,io.corbel.iam.model.Domain)#javax/ws/rs/core/Response/ResponseBuilder/build()
io/corbel/iam/api/DomainResource/modifyDomain(java.lang.String,io.corbel.iam.model.Domain)#io/corbel/iam/model/Entity/setId(java.lang.String)
io/corbel/iam/api/DomainResource/modifyDomain(java.lang.String,io.corbel.iam.model.Domain)#io/corbel/iam/service/DomainService/update(io.corbel.iam.model.Domain)
io/corbel/iam/api/DomainResource/modifyDomain(java.lang.String,io.corbel.iam.model.Domain)#io/corbel/iam/api/DomainResource/addTrace(io.corbel.iam.model.TraceableEntity)
io/corbel/iam/api/DomainResource/createDomain(java.lang.String,javax.ws.rs.core.UriInfo,io.corbel.lib.ws.auth.AuthorizationInfo,io.corbel.iam.model.Domain)#io/corbel/iam/model/Entity/getId()
io/corbel/iam/api/DomainResource/createDomain(java.lang.String,javax.ws.rs.core.UriInfo,io.corbel.lib.ws.auth.AuthorizationInfo,io.corbel.iam.model.Domain)#io/corbel/lib/ws/api/error/ErrorResponseFactory/invalidEntity(io.corbel.lib.ws.model.Error)
io/corbel/iam/api/DomainResource/createDomain(java.lang.String,javax.ws.rs.core.UriInfo,io.corbel.lib.ws.auth.AuthorizationInfo,io.corbel.iam.model.Domain)#javax/ws/rs/core/UriBuilder/build(java.lang.Object[])
io/corbel/iam/api/DomainResource/createDomain(java.lang.String,javax.ws.rs.core.UriInfo,io.corbel.lib.ws.auth.AuthorizationInfo,io.corbel.iam.model.Domain)#io/corbel/lib/ws/model/Error/Error(java.lang.String,java.lang.String)
io/corbel/iam/api/DomainResource/createDomain(java.lang.String,javax.ws.rs.core.UriInfo,io.corbel.lib.ws.auth.AuthorizationInfo,io.corbel.iam.model.Domain)#javax/ws/rs/core/UriInfo/getAbsolutePathBuilder()
io/corbel/iam/api/DomainResource/createDomain(java.lang.String,javax.ws.rs.core.UriInfo,io.corbel.lib.ws.auth.AuthorizationInfo,io.corbel.iam.model.Domain)#io/corbel/iam/utils/Message/getMessage(java.lang.Object[])
io/corbel/iam/api/DomainResource/createDomain(java.lang.String,javax.ws.rs.core.UriInfo,io.corbel.lib.ws.auth.AuthorizationInfo,io.corbel.iam.model.Domain)#io/corbel/iam/api/IamErrorResponseFactory/getInstance()
io/corbel/iam/api/DomainResource/createDomain(java.lang.String,javax.ws.rs.core.UriInfo,io.corbel.lib.ws.auth.AuthorizationInfo,io.corbel.iam.model.Domain)#javax/ws/rs/core/UriBuilder/path(java.lang.String)
io/corbel/iam/api/DomainResource/createDomain(java.lang.String,javax.ws.rs.core.UriInfo,io.corbel.lib.ws.auth.AuthorizationInfo,io.corbel.iam.model.Domain)#javax/ws/rs/core/Response/created(java.net.URI)
io/corbel/iam/api/DomainResource/createDomain(java.lang.String,javax.ws.rs.core.UriInfo,io.corbel.lib.ws.auth.AuthorizationInfo,io.corbel.iam.model.Domain)#javax/ws/rs/core/Response/ResponseBuilder/build()
io/corbel/iam/api/DomainResource/createDomain(java.lang.String,javax.ws.rs.core.UriInfo,io.corbel.lib.ws.auth.AuthorizationInfo,io.corbel.iam.model.Domain)#io/corbel/iam/service/DomainService/insert(io.corbel.iam.model.Domain)
io/corbel/iam/api/DomainResource/createDomain(java.lang.String,javax.ws.rs.core.UriInfo,io.corbel.lib.ws.auth.AuthorizationInfo,io.corbel.iam.model.Domain)#java/util/Collections/emptySet()
io/corbel/iam/api/DomainResource/createDomain(java.lang.String,javax.ws.rs.core.UriInfo,io.corbel.lib.ws.auth.AuthorizationInfo,io.corbel.iam.model.Domain)#io/corbel/iam/model/Entity/setId(java.lang.String)
io/corbel/iam/api/DomainResource/createDomain(java.lang.String,javax.ws.rs.core.UriInfo,io.corbel.lib.ws.auth.AuthorizationInfo,io.corbel.iam.model.Domain)#io/corbel/iam/api/DomainResource/addTrace(io.corbel.iam.model.TraceableEntity)
io/corbel/iam/api/DomainResource/createDomain(java.lang.String,javax.ws.rs.core.UriInfo,io.corbel.lib.ws.auth.AuthorizationInfo,io.corbel.iam.model.Domain)#java/lang/String/contains(java.lang.CharSequence)
io/corbel/iam/api/DomainResource/createDomain(java.lang.String,javax.ws.rs.core.UriInfo,io.corbel.lib.ws.auth.AuthorizationInfo,io.corbel.iam.model.Domain)#io/corbel/iam/exception/DomainAlreadyExists/getDomain()
io/corbel/iam/api/DomainResource/createDomain(java.lang.String,javax.ws.rs.core.UriInfo,io.corbel.lib.ws.auth.AuthorizationInfo,io.corbel.iam.model.Domain)#io/corbel/iam/api/IamErrorResponseFactory/entityExists(io.corbel.iam.utils.Message,java.lang.String[])
io/corbel/iam/api/DomainResource/createDomain(java.lang.String,javax.ws.rs.core.UriInfo,io.corbel.lib.ws.auth.AuthorizationInfo,io.corbel.iam.model.Domain)#com/google/common/base/Strings/isNullOrEmpty(java.lang.String)
io/corbel/iam/api/DomainResource/createDomain(java.lang.String,javax.ws.rs.core.UriInfo,io.corbel.lib.ws.auth.AuthorizationInfo,io.corbel.iam.model.Domain)#javax/validation/ConstraintViolationException/ConstraintViolationException(java.util.Set)
io/corbel/iam/api/DomainResource/addTrace(io.corbel.iam.model.TraceableEntity)#io/corbel/iam/model/TraceableEntity/setCreatedBy(java.lang.String)
io/corbel/iam/api/DomainResource/addTrace(io.corbel.iam.model.TraceableEntity)#java/net/InetAddress/getLocalHost()
io/corbel/iam/api/DomainResource/addTrace(io.corbel.iam.model.TraceableEntity)#io/corbel/iam/model/TraceableEntity/setCreatedDate(java.util.Date)
io/corbel/iam/api/DomainResource/addTrace(io.corbel.iam.model.TraceableEntity)#java/util/Date/Date()
io/corbel/iam/api/DomainResource/addTrace(io.corbel.iam.model.TraceableEntity)#java/net/InetAddress/getHostName()
io/corbel/notifications/model/NotificationTemplateIdGenerator/generateId(io.corbel.notifications.model.NotificationTemplate)#io/corbel/notifications/model/NotificationTemplate/getName()
io/corbel/notifications/model/NotificationTemplateIdGenerator/generateId(io.corbel.notifications.model.NotificationTemplate)#io/corbel/notifications/model/NotificationTemplate/getDomain()
io/corbel/notifications/model/NotificationTemplateIdGenerator/generateId(io.corbel.notifications.model.NotificationTemplate)#io/corbel/notifications/utils/DomainNameIdGenerator/generateNotificationTemplateId(java.lang.String,java.lang.String)
io/corbel/resources/rem/i18n/I18nGetRemTest/testGetResource()#org/mockito/Mockito/verify(T)
io/corbel/resources/rem/i18n/I18nGetRemTest/testGetResource()#io/corbel/resources/rem/request/ResourceId/ResourceId(java.lang.String)
io/corbel/resources/rem/i18n/I18nGetRemTest/testGetResource()#io/corbel/resources/rem/Rem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)
io/corbel/resources/rem/i18n/I18nGetRemTest/testGetResource()#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/rem/i18n/I18nGetRemTest/testGetResource()#javax/ws/rs/core/MultivaluedHashMap/MultivaluedHashMap()
io/corbel/resources/rem/i18n/I18nGetRemTest/testGetResource()#java/util/Optional/empty()
io/corbel/resources/rem/i18n/I18nGetRemTest/testGetResource()#org/fest/assertions/api/Assertions/assertThat(T)
io/corbel/resources/rem/i18n/I18nGetRemTest/testGetResource()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/resources/rem/i18n/I18nGetRemTest/testGetResource()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/i18n/I18nGetRemTest/testGetResource()#io/corbel/resources/rem/request/RequestParameters/getHeaders()
io/corbel/resources/rem/i18n/I18nGetRemTest/testGetResource()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/resources/rem/i18n/I18nGetRemTest/testGetResource()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/i18n/I18nGetRemTest/testGetResource()#io/corbel/resources/rem/i18n/I18nGetRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)
io/corbel/resources/rem/i18n/I18nGetRemTest/testGetResource()#javax/ws/rs/core/MultivaluedMap/add(K,V)
io/corbel/resources/rem/i18n/I18nGetRemTest/testGetResourceLargeLanguage()#org/mockito/Mockito/verify(T)
io/corbel/resources/rem/i18n/I18nGetRemTest/testGetResourceLargeLanguage()#io/corbel/resources/rem/request/ResourceId/ResourceId(java.lang.String)
io/corbel/resources/rem/i18n/I18nGetRemTest/testGetResourceLargeLanguage()#org/mockito/AdditionalMatchers/not(T)
io/corbel/resources/rem/i18n/I18nGetRemTest/testGetResourceLargeLanguage()#io/corbel/resources/rem/Rem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)
io/corbel/resources/rem/i18n/I18nGetRemTest/testGetResourceLargeLanguage()#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/rem/i18n/I18nGetRemTest/testGetResourceLargeLanguage()#javax/ws/rs/core/MultivaluedHashMap/MultivaluedHashMap()
io/corbel/resources/rem/i18n/I18nGetRemTest/testGetResourceLargeLanguage()#java/util/Optional/empty()
io/corbel/resources/rem/i18n/I18nGetRemTest/testGetResourceLargeLanguage()#org/fest/assertions/api/Assertions/assertThat(T)
io/corbel/resources/rem/i18n/I18nGetRemTest/testGetResourceLargeLanguage()#org/mockito/Matchers/eq(T)
io/corbel/resources/rem/i18n/I18nGetRemTest/testGetResourceLargeLanguage()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/resources/rem/i18n/I18nGetRemTest/testGetResourceLargeLanguage()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/i18n/I18nGetRemTest/testGetResourceLargeLanguage()#io/corbel/resources/rem/request/RequestParameters/getHeaders()
io/corbel/resources/rem/i18n/I18nGetRemTest/testGetResourceLargeLanguage()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/resources/rem/i18n/I18nGetRemTest/testGetResourceLargeLanguage()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/i18n/I18nGetRemTest/testGetResourceLargeLanguage()#io/corbel/resources/rem/i18n/I18nGetRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)
io/corbel/resources/rem/i18n/I18nGetRemTest/testGetResourceLargeLanguage()#javax/ws/rs/core/MultivaluedMap/add(K,V)
io/corbel/resources/rem/i18n/I18nGetRemTest/setup()#io/corbel/resources/rem/request/RequestParameters/getApiParameters()
io/corbel/resources/rem/i18n/I18nGetRemTest/setup()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/i18n/I18nGetRemTest/setup()#io/corbel/resources/rem/service/RemService/getRem(java.lang.String,java.util.List,org.springframework.http.HttpMethod)
io/corbel/resources/rem/i18n/I18nGetRemTest/setup()#java/util/Arrays/asList(T[])
io/corbel/resources/rem/i18n/I18nGetRemTest/setup()#io/corbel/resources/rem/i18n/I18nBaseRem/setRemService(io.corbel.resources.rem.service.RemService)
io/corbel/resources/rem/i18n/I18nGetRemTest/setup()#java/net/URI/create(java.lang.String)
io/corbel/resources/rem/i18n/I18nGetRemTest/setup()#org/mockito/Matchers/eq(T)
io/corbel/resources/rem/i18n/I18nGetRemTest/setup()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/resources/rem/i18n/I18nGetRemTest/setup()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/i18n/I18nGetRemTest/setup()#org/mockito/Matchers/anyString()
io/corbel/resources/rem/i18n/I18nGetRemTest/testGetCollectionNotLanguage()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/i18n/I18nGetRemTest/testGetCollectionNotLanguage()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/resources/rem/i18n/I18nGetRemTest/testGetCollectionNotLanguage()#javax/ws/rs/core/MultivaluedHashMap/MultivaluedHashMap()
io/corbel/resources/rem/i18n/I18nGetRemTest/testGetCollectionNotLanguage()#java/util/Optional/empty()
io/corbel/resources/rem/i18n/I18nGetRemTest/testGetCollectionNotLanguage()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/resources/rem/i18n/I18nGetRemTest/testGetCollectionNotLanguage()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/i18n/I18nGetRemTest/testGetCollectionNotLanguage()#io/corbel/resources/rem/request/RequestParameters/getHeaders()
io/corbel/resources/rem/i18n/I18nGetRemTest/testGetCollectionNotLanguage()#io/corbel/resources/rem/i18n/I18nGetRem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional)
io/corbel/resources/rem/i18n/I18nGetRemTest/testGetCollectionNotLanguage()#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/rem/i18n/I18nGetRemTest/testGetCollection()#javax/ws/rs/core/Response/getEntity()
io/corbel/resources/rem/i18n/I18nGetRemTest/testGetCollection()#io/corbel/resources/rem/request/CollectionParameters/setQueries(java.util.Optional)
io/corbel/resources/rem/i18n/I18nGetRemTest/testGetCollection()#io/corbel/resources/rem/Rem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional)
io/corbel/resources/rem/i18n/I18nGetRemTest/testGetCollection()#java/util/Arrays/asList(T[])
io/corbel/resources/rem/i18n/I18nGetRemTest/testGetCollection()#java/util/Optional/of(T)
io/corbel/resources/rem/i18n/I18nGetRemTest/testGetCollection()#io/corbel/resources/rem/request/CollectionParameters/getQueries()
io/corbel/resources/rem/i18n/I18nGetRemTest/testGetCollection()#javax/ws/rs/core/MultivaluedHashMap/MultivaluedHashMap()
io/corbel/resources/rem/i18n/I18nGetRemTest/testGetCollection()#com/google/gson/JsonObject/JsonObject()
io/corbel/resources/rem/i18n/I18nGetRemTest/testGetCollection()#javax/ws/rs/core/MultivaluedMap/add(K,V)
io/corbel/resources/rem/i18n/I18nGetRemTest/testGetCollection()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/resources/rem/i18n/I18nGetRemTest/testGetCollection()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/i18n/I18nGetRemTest/testGetCollection()#io/corbel/resources/rem/request/RequestParameters/getHeaders()
io/corbel/resources/rem/i18n/I18nGetRemTest/testGetCollection()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/resources/rem/i18n/I18nGetRemTest/testGetCollection()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/i18n/I18nGetRemTest/testGetCollection()#com/google/gson/JsonArray/add(com.google.gson.JsonElement)
io/corbel/resources/rem/i18n/I18nGetRemTest/testGetCollection()#org/mockito/Mockito/verify(T)
io/corbel/resources/rem/i18n/I18nGetRemTest/testGetCollection()#io/corbel/resources/rem/i18n/I18nGetRem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional)
io/corbel/resources/rem/i18n/I18nGetRemTest/testGetCollection()#io/corbel/lib/queries/request/ResourceQuery/ResourceQuery()
io/corbel/resources/rem/i18n/I18nGetRemTest/testGetCollection()#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/rem/i18n/I18nGetRemTest/testGetCollection()#org/mockito/Matchers/any()
io/corbel/resources/rem/i18n/I18nGetRemTest/testGetCollection()#java/util/Optional/empty()
io/corbel/resources/rem/i18n/I18nGetRemTest/testGetCollection()#com/google/gson/JsonArray/JsonArray()
io/corbel/resources/rem/i18n/I18nGetRemTest/testGetCollection()#org/fest/assertions/api/Assertions/assertThat(T)
io/corbel/resources/rem/i18n/I18nGetRemTest/testGetCollectionLargeLanguage()#java/util/Optional/get()
io/corbel/resources/rem/i18n/I18nGetRemTest/testGetCollectionLargeLanguage()#javax/ws/rs/core/Response/getEntity()
io/corbel/resources/rem/i18n/I18nGetRemTest/testGetCollectionLargeLanguage()#org/mockito/ArgumentCaptor/getValue()
io/corbel/resources/rem/i18n/I18nGetRemTest/testGetCollectionLargeLanguage()#io/corbel/lib/queries/request/QueryLiteral/getLiteral()
io/corbel/resources/rem/i18n/I18nGetRemTest/testGetCollectionLargeLanguage()#io/corbel/resources/rem/Rem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional)
io/corbel/resources/rem/i18n/I18nGetRemTest/testGetCollectionLargeLanguage()#java/util/Arrays/asList(T[])
io/corbel/resources/rem/i18n/I18nGetRemTest/testGetCollectionLargeLanguage()#io/corbel/resources/rem/request/CollectionParameters/getQueries()
io/corbel/resources/rem/i18n/I18nGetRemTest/testGetCollectionLargeLanguage()#javax/ws/rs/core/MultivaluedHashMap/MultivaluedHashMap()
io/corbel/resources/rem/i18n/I18nGetRemTest/testGetCollectionLargeLanguage()#com/google/gson/JsonObject/JsonObject()
io/corbel/resources/rem/i18n/I18nGetRemTest/testGetCollectionLargeLanguage()#javax/ws/rs/core/MultivaluedMap/add(K,V)
io/corbel/resources/rem/i18n/I18nGetRemTest/testGetCollectionLargeLanguage()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/resources/rem/i18n/I18nGetRemTest/testGetCollectionLargeLanguage()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/i18n/I18nGetRemTest/testGetCollectionLargeLanguage()#io/corbel/resources/rem/request/RequestParameters/getHeaders()
io/corbel/resources/rem/i18n/I18nGetRemTest/testGetCollectionLargeLanguage()#java/lang/String/split(java.lang.String)
io/corbel/resources/rem/i18n/I18nGetRemTest/testGetCollectionLargeLanguage()#io/corbel/resources/rem/request/CollectionParameters/setQueries(java.util.Optional)
io/corbel/resources/rem/i18n/I18nGetRemTest/testGetCollectionLargeLanguage()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/resources/rem/i18n/I18nGetRemTest/testGetCollectionLargeLanguage()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/i18n/I18nGetRemTest/testGetCollectionLargeLanguage()#org/mockito/ArgumentCaptor/forClass(java.lang.Class)
io/corbel/resources/rem/i18n/I18nGetRemTest/testGetCollectionLargeLanguage()#com/google/gson/JsonArray/add(com.google.gson.JsonElement)
io/corbel/resources/rem/i18n/I18nGetRemTest/testGetCollectionLargeLanguage()#org/mockito/Mockito/verify(T)
io/corbel/resources/rem/i18n/I18nGetRemTest/testGetCollectionLargeLanguage()#io/corbel/lib/queries/request/QueryNode/getValue()
io/corbel/resources/rem/i18n/I18nGetRemTest/testGetCollectionLargeLanguage()#java/util/Iterator/next()
io/corbel/resources/rem/i18n/I18nGetRemTest/testGetCollectionLargeLanguage()#java/util/Optional/of(T)
io/corbel/resources/rem/i18n/I18nGetRemTest/testGetCollectionLargeLanguage()#io/corbel/resources/rem/i18n/I18nGetRem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional)
io/corbel/resources/rem/i18n/I18nGetRemTest/testGetCollectionLargeLanguage()#io/corbel/lib/queries/request/ResourceQuery/ResourceQuery()
io/corbel/resources/rem/i18n/I18nGetRemTest/testGetCollectionLargeLanguage()#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/rem/i18n/I18nGetRemTest/testGetCollectionLargeLanguage()#io/corbel/lib/queries/request/ResourceQuery/iterator()
io/corbel/resources/rem/i18n/I18nGetRemTest/testGetCollectionLargeLanguage()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/resources/rem/i18n/I18nGetRemTest/testGetCollectionLargeLanguage()#org/mockito/ArgumentCaptor/capture()
io/corbel/resources/rem/i18n/I18nGetRemTest/testGetCollectionLargeLanguage()#java/util/Optional/empty()
io/corbel/resources/rem/i18n/I18nGetRemTest/testGetCollectionLargeLanguage()#java/util/List/get(int)
io/corbel/resources/rem/i18n/I18nGetRemTest/testGetCollectionLargeLanguage()#com/google/gson/JsonArray/JsonArray()
io/corbel/resources/rem/i18n/I18nGetRemTest/testGetCollectionLargeLanguage()#org/fest/assertions/api/Assertions/assertThat(T)
io/corbel/resources/rem/i18n/I18nGetRemTest/testGetResourceNotLanguage()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/i18n/I18nGetRemTest/testGetResourceNotLanguage()#io/corbel/resources/rem/request/ResourceId/ResourceId(java.lang.String)
io/corbel/resources/rem/i18n/I18nGetRemTest/testGetResourceNotLanguage()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/resources/rem/i18n/I18nGetRemTest/testGetResourceNotLanguage()#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/rem/i18n/I18nGetRemTest/testGetResourceNotLanguage()#javax/ws/rs/core/MultivaluedHashMap/MultivaluedHashMap()
io/corbel/resources/rem/i18n/I18nGetRemTest/testGetResourceNotLanguage()#io/corbel/resources/rem/i18n/I18nGetRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)
io/corbel/resources/rem/i18n/I18nGetRemTest/testGetResourceNotLanguage()#java/util/Optional/empty()
io/corbel/resources/rem/i18n/I18nGetRemTest/testGetResourceNotLanguage()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/resources/rem/i18n/I18nGetRemTest/testGetResourceNotLanguage()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/i18n/I18nGetRemTest/testGetResourceNotLanguage()#io/corbel/resources/rem/request/RequestParameters/getHeaders()
io/corbel/iam/model/ScopeTest/singleScopeBadRulesTest()#io/corbel/iam/model/Entity/getId()
io/corbel/iam/model/ScopeTest/singleScopeBadRulesTest()#io/corbel/iam/model/ScopeTest/getBasicScope()
io/corbel/iam/model/ScopeTest/singleScopeBadRulesTest()#java/util/Set/isEmpty()
io/corbel/iam/model/ScopeTest/singleScopeBadRulesTest()#io/corbel/iam/model/Scope/getScopes()
io/corbel/iam/model/ScopeTest/singleScopeBadRulesTest()#io/corbel/iam/model/Scope/getAudience()
io/corbel/iam/model/ScopeTest/singleScopeBadRulesTest()#javax/validation/Validator/validate(T,java.lang.Class<?>[])
io/corbel/iam/model/ScopeTest/singleScopeBadRulesTest()#io/corbel/iam/model/Scope/Scope(java.lang.String,java.lang.String,java.lang.String,java.util.Set,java.util.Set,com.google.gson.JsonObject)
io/corbel/iam/model/ScopeTest/singleScopeBadRulesTest()#io/corbel/iam/model/Scope/getParameters()
io/corbel/iam/model/ScopeTest/singleScopeBadRulesTest()#junit/framework/Assert/assertFalse(boolean)
io/corbel/iam/model/ScopeTest/getBasicScope()#java/util/Set/add(E)
io/corbel/iam/model/ScopeTest/getBasicScope()#com/google/gson/JsonObject/JsonObject()
io/corbel/iam/model/ScopeTest/getBasicScope()#java/util/HashSet/HashSet()
io/corbel/iam/model/ScopeTest/getBasicScope()#io/corbel/iam/model/Scope/Scope(java.lang.String,java.lang.String,java.lang.String,java.util.Set,java.util.Set,com.google.gson.JsonObject)
io/corbel/iam/model/ScopeTest/setUp()#javax/validation/ValidatorFactory/getValidator()
io/corbel/iam/model/ScopeTest/setUp()#javax/validation/Validation/buildDefaultValidatorFactory()
io/corbel/iam/model/ScopeTest/singleScopeBadAudienceTest()#io/corbel/iam/model/Entity/getId()
io/corbel/iam/model/ScopeTest/singleScopeBadAudienceTest()#io/corbel/iam/model/ScopeTest/getBasicScope()
io/corbel/iam/model/ScopeTest/singleScopeBadAudienceTest()#java/util/Set/isEmpty()
io/corbel/iam/model/ScopeTest/singleScopeBadAudienceTest()#io/corbel/iam/model/Scope/getScopes()
io/corbel/iam/model/ScopeTest/singleScopeBadAudienceTest()#io/corbel/iam/model/Scope/getRules()
io/corbel/iam/model/ScopeTest/singleScopeBadAudienceTest()#javax/validation/Validator/validate(T,java.lang.Class<?>[])
io/corbel/iam/model/ScopeTest/singleScopeBadAudienceTest()#io/corbel/iam/model/Scope/Scope(java.lang.String,java.lang.String,java.lang.String,java.util.Set,java.util.Set,com.google.gson.JsonObject)
io/corbel/iam/model/ScopeTest/singleScopeBadAudienceTest()#io/corbel/iam/model/Scope/getParameters()
io/corbel/iam/model/ScopeTest/singleScopeBadAudienceTest()#junit/framework/Assert/assertFalse(boolean)
io/corbel/iam/model/ScopeTest/singleScopeBasicTest()#io/corbel/iam/model/Entity/getId()
io/corbel/iam/model/ScopeTest/singleScopeBasicTest()#io/corbel/iam/model/ScopeTest/getBasicScope()
io/corbel/iam/model/ScopeTest/singleScopeBasicTest()#java/util/Set/isEmpty()
io/corbel/iam/model/ScopeTest/singleScopeBasicTest()#io/corbel/iam/model/Scope/getScopes()
io/corbel/iam/model/ScopeTest/singleScopeBasicTest()#junit/framework/Assert/assertTrue(boolean)
io/corbel/iam/model/ScopeTest/singleScopeBasicTest()#io/corbel/iam/model/Scope/getAudience()
io/corbel/iam/model/ScopeTest/singleScopeBasicTest()#io/corbel/iam/model/Scope/getRules()
io/corbel/iam/model/ScopeTest/singleScopeBasicTest()#javax/validation/Validator/validate(T,java.lang.Class<?>[])
io/corbel/iam/model/ScopeTest/singleScopeBasicTest()#io/corbel/iam/model/Scope/Scope(java.lang.String,java.lang.String,java.lang.String,java.util.Set,java.util.Set,com.google.gson.JsonObject)
io/corbel/iam/model/ScopeTest/singleScopeBasicTest()#io/corbel/iam/model/Scope/getParameters()
io/corbel/iam/model/ClientCredential/hashCode()#java/util/Objects/hash(java.lang.Object[])
io/corbel/iam/model/ClientCredential/equals(java.lang.Object)#java/util/Objects/equals(java.lang.Object,java.lang.Object)
io/corbel/resources/rem/operation/ResizeHeight/apply(java.lang.String)#java/lang/Integer/parseInt(java.lang.String)
io/corbel/resources/rem/operation/ResizeHeight/apply(java.lang.String)#io/corbel/resources/rem/exception/ImageOperationsException/ImageOperationsException(java.lang.String,java.lang.Throwable)
io/corbel/resources/rem/operation/ResizeHeight/apply(java.lang.String)#io/corbel/resources/rem/exception/ImageOperationsException/ImageOperationsException(java.lang.String)
io/corbel/resources/rem/operation/ResizeHeight/apply(java.lang.String)#org/im4java/core/IMOps/resize(java.lang.Integer,java.lang.Integer,java.lang.String)
io/corbel/resources/rem/operation/ResizeHeight/apply(java.lang.String)#org/im4java/core/IMOperation/IMOperation()
io/corbel/resources/rem/resmi/ResmiPostRemTest/setup()#io/corbel/resources/rem/resmi/ResmiPostRem/ResmiPostRem(io.corbel.resources.rem.service.ResmiService)
io/corbel/resources/rem/resmi/ResmiPostRemTest/setup()#io/corbel/resources/rem/resmi/ResmiRemTest/setup()
io/corbel/resources/rem/resmi/ResmiPostRemTest/testMethodNotAllowed()#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/rem/resmi/ResmiPostRemTest/testMethodNotAllowed()#io/corbel/resources/rem/resmi/ResmiRemTest/getParametersWithEmptyUri()
io/corbel/resources/rem/resmi/ResmiPostRemTest/testMethodNotAllowed()#java/util/Optional/empty()
io/corbel/resources/rem/resmi/ResmiPostRemTest/testMethodNotAllowed()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/resources/rem/resmi/ResmiPostRemTest/testMethodNotAllowed()#io/corbel/resources/rem/Rem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)
io/corbel/resources/rem/resmi/ResmiPostRemTest/testMethodNotAllowed()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/resources/rem/resmi/ResmiPostRemTest/testInvalidPostCollection()#io/corbel/resources/rem/Rem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional)
io/corbel/resources/rem/resmi/ResmiPostRemTest/testInvalidPostCollection()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/resources/rem/resmi/ResmiPostRemTest/testInvalidPostCollection()#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/rem/resmi/ResmiPostRemTest/testInvalidPostCollection()#io/corbel/resources/rem/resmi/ResmiRemTest/getParametersWithEmptyUri()
io/corbel/resources/rem/resmi/ResmiPostRemTest/testInvalidPostCollection()#java/util/Optional/empty()
io/corbel/resources/rem/resmi/ResmiPostRemTest/testInvalidPostCollection()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/resources/rem/resmi/ResmiPostRemTest/testPostCollectionWithBadAttributeName()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/resmi/ResmiPostRemTest/testPostCollectionWithBadAttributeName()#io/corbel/resources/rem/request/RequestParameters/getTokenInfo()
io/corbel/resources/rem/resmi/ResmiPostRemTest/testPostCollectionWithBadAttributeName()#io/corbel/resources/rem/Rem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional)
io/corbel/resources/rem/resmi/ResmiPostRemTest/testPostCollectionWithBadAttributeName()#io/corbel/resources/rem/service/ResmiService/saveResource(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject,java.util.Optional)
io/corbel/resources/rem/resmi/ResmiPostRemTest/testPostCollectionWithBadAttributeName()#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/rem/resmi/ResmiPostRemTest/testPostCollectionWithBadAttributeName()#io/corbel/resources/rem/resmi/exception/StartsWithUnderscoreException/StartsWithUnderscoreException(java.lang.String)
io/corbel/resources/rem/resmi/ResmiPostRemTest/testPostCollectionWithBadAttributeName()#org/mockito/Matchers/eq(T)
io/corbel/resources/rem/resmi/ResmiPostRemTest/testPostCollectionWithBadAttributeName()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/resources/rem/resmi/ResmiPostRemTest/testPostCollectionWithBadAttributeName()#java/net/URI/URI(java.lang.String)
io/corbel/resources/rem/resmi/ResmiPostRemTest/testPostCollectionWithBadAttributeName()#io/corbel/resources/rem/resmi/ResmiRemTest/getTestResource()
io/corbel/resources/rem/resmi/ResmiPostRemTest/testPostCollectionWithBadAttributeName()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/resources/rem/resmi/ResmiPostRemTest/testPostCollectionWithBadAttributeName()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/resmi/ResmiPostRemTest/testPostCollectionWithBadAttributeName()#io/corbel/lib/token/TokenInfo/getUserId()
io/corbel/resources/rem/resmi/ResmiPostRemTest/testPostCollectionWithBadAttributeName()#org/mockito/stubbing/Stubber/when(T)
io/corbel/resources/rem/resmi/ResmiPostRemTest/testPostCollectionWithBadAttributeName()#java/util/Optional/of(T)
io/corbel/resources/rem/resmi/ResmiPostRemTest/testPostCollectionWithBadAttributeName()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/resources/rem/resmi/ResmiPostRemTest/testPostCollectionWithBadAttributeName()#org/mockito/Matchers/any()
io/corbel/resources/rem/resmi/ResmiPostRemTest/testPostCollectionWithBadAttributeName()#org/mockito/Mockito/doThrow(java.lang.Throwable)
io/corbel/resources/rem/resmi/ResmiPostRemTest/testPostCollectionWithUserToken()#io/corbel/resources/rem/model/ResourceUri/ResourceUri(java.lang.String,java.lang.String)
io/corbel/resources/rem/resmi/ResmiPostRemTest/testPostCollectionWithUserToken()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/resmi/ResmiPostRemTest/testPostCollectionWithUserToken()#io/corbel/resources/rem/request/RequestParameters/getTokenInfo()
io/corbel/resources/rem/resmi/ResmiPostRemTest/testPostCollectionWithUserToken()#io/corbel/resources/rem/Rem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional)
io/corbel/resources/rem/resmi/ResmiPostRemTest/testPostCollectionWithUserToken()#io/corbel/lib/token/TokenInfo/getUserId()
io/corbel/resources/rem/resmi/ResmiPostRemTest/testPostCollectionWithUserToken()#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/rem/resmi/ResmiPostRemTest/testPostCollectionWithUserToken()#org/mockito/Matchers/any()
io/corbel/resources/rem/resmi/ResmiPostRemTest/testPostCollectionWithUserToken()#org/mockito/Matchers/eq(T)
io/corbel/resources/rem/resmi/ResmiPostRemTest/testPostCollectionWithUserToken()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/resources/rem/resmi/ResmiPostRemTest/testPostCollectionWithUserToken()#java/net/URI/URI(java.lang.String)
io/corbel/resources/rem/resmi/ResmiPostRemTest/testPostCollectionWithUserToken()#io/corbel/resources/rem/resmi/ResmiRemTest/getTestResource()
io/corbel/resources/rem/resmi/ResmiPostRemTest/testPostCollectionWithUserToken()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/resources/rem/resmi/ResmiPostRemTest/testPostCollectionWithUserToken()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/resmi/ResmiPostRemTest/testPostCollectionWithUserToken()#io/corbel/resources/rem/request/RequestParameters/getRequestedDomain()
io/corbel/resources/rem/resmi/ResmiPostRemTest/testPostCollectionWithUserToken()#io/corbel/resources/rem/service/ResmiService/saveResource(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject,java.util.Optional)
io/corbel/resources/rem/resmi/ResmiPostRemTest/testPostCollectionWithUserToken()#java/util/Optional/of(T)
io/corbel/resources/rem/resmi/ResmiPostRemTest/testPostCollectionWithUserToken()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/resources/rem/resmi/ResmiPostRemTest/testPostCollectionWithClientToken()#io/corbel/resources/rem/model/ResourceUri/ResourceUri(java.lang.String,java.lang.String)
io/corbel/resources/rem/resmi/ResmiPostRemTest/testPostCollectionWithClientToken()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/resmi/ResmiPostRemTest/testPostCollectionWithClientToken()#io/corbel/resources/rem/request/RequestParameters/getTokenInfo()
io/corbel/resources/rem/resmi/ResmiPostRemTest/testPostCollectionWithClientToken()#io/corbel/resources/rem/Rem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional)
io/corbel/resources/rem/resmi/ResmiPostRemTest/testPostCollectionWithClientToken()#io/corbel/lib/token/TokenInfo/getUserId()
io/corbel/resources/rem/resmi/ResmiPostRemTest/testPostCollectionWithClientToken()#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/rem/resmi/ResmiPostRemTest/testPostCollectionWithClientToken()#org/mockito/Matchers/any()
io/corbel/resources/rem/resmi/ResmiPostRemTest/testPostCollectionWithClientToken()#org/mockito/Matchers/eq(T)
io/corbel/resources/rem/resmi/ResmiPostRemTest/testPostCollectionWithClientToken()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/resources/rem/resmi/ResmiPostRemTest/testPostCollectionWithClientToken()#java/net/URI/URI(java.lang.String)
io/corbel/resources/rem/resmi/ResmiPostRemTest/testPostCollectionWithClientToken()#io/corbel/resources/rem/resmi/ResmiRemTest/getTestResource()
io/corbel/resources/rem/resmi/ResmiPostRemTest/testPostCollectionWithClientToken()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/resources/rem/resmi/ResmiPostRemTest/testPostCollectionWithClientToken()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/resmi/ResmiPostRemTest/testPostCollectionWithClientToken()#io/corbel/resources/rem/request/RequestParameters/getRequestedDomain()
io/corbel/resources/rem/resmi/ResmiPostRemTest/testPostCollectionWithClientToken()#io/corbel/resources/rem/service/ResmiService/saveResource(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject,java.util.Optional)
io/corbel/resources/rem/resmi/ResmiPostRemTest/testPostCollectionWithClientToken()#java/util/Optional/of(T)
io/corbel/resources/rem/resmi/ResmiPostRemTest/testPostCollectionWithClientToken()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/resources/rem/eventbus/AclConfigurationEventHandler/getCollectionConfiguration(java.lang.String)#javax/ws/rs/core/Response/getEntity()
io/corbel/resources/rem/eventbus/AclConfigurationEventHandler/getCollectionConfiguration(java.lang.String)#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/rem/eventbus/AclConfigurationEventHandler/getCollectionConfiguration(java.lang.String)#org/springframework/http/HttpStatus/value()
io/corbel/resources/rem/eventbus/AclConfigurationEventHandler/getCollectionConfiguration(java.lang.String)#io/corbel/resources/rem/service/AclConfigurationService/getConfiguration(java.lang.String)
io/corbel/resources/rem/eventbus/AclConfigurationEventHandler/handle(io.corbel.event.ResourceEvent)#io/corbel/event/ResourceEvent/getResourceId()
io/corbel/resources/rem/eventbus/AclConfigurationEventHandler/handle(io.corbel.event.ResourceEvent)#io/corbel/resources/rem/service/AclConfigurationService/addAclConfiguration(java.lang.String)
io/corbel/resources/rem/eventbus/AclConfigurationEventHandler/handle(io.corbel.event.ResourceEvent)#io/corbel/event/ResourceEvent/getAction()
io/corbel/resources/rem/eventbus/AclConfigurationEventHandler/handle(io.corbel.event.ResourceEvent)#io/corbel/resources/rem/service/AclConfigurationService/removeAclConfiguration(java.lang.String,java.lang.String)
io/corbel/resources/rem/eventbus/AclConfigurationEventHandler/handle(io.corbel.event.ResourceEvent)#io/corbel/event/ResourceEvent/getType()
io/corbel/resources/rem/eventbus/AclConfigurationEventHandler/handle(io.corbel.event.ResourceEvent)#java/lang/String/substring(int)
io/corbel/resources/rem/eventbus/AclConfigurationEventHandler/handle(io.corbel.event.ResourceEvent)#io/corbel/resources/rem/service/AclConfigurationService/setResourcesWithDefaultPermission(java.lang.String,java.lang.String,java.lang.String)
io/corbel/resources/rem/eventbus/AclConfigurationEventHandler/handle(io.corbel.event.ResourceEvent)#com/google/gson/JsonObject/get(java.lang.String)
io/corbel/resources/rem/eventbus/AclConfigurationEventHandler/handle(io.corbel.event.ResourceEvent)#com/google/gson/JsonObject/has(java.lang.String)
io/corbel/resources/rem/eventbus/AclConfigurationEventHandler/handle(io.corbel.event.ResourceEvent)#io/corbel/resources/rem/eventbus/AclConfigurationEventHandler/getCollectionConfiguration(java.lang.String)
io/corbel/resources/rem/eventbus/AclConfigurationEventHandler/handle(io.corbel.event.ResourceEvent)#java/lang/String/equals(java.lang.Object)
io/corbel/resources/rem/eventbus/AclConfigurationEventHandler/handle(io.corbel.event.ResourceEvent)#io/corbel/resources/rem/service/AclConfigurationService/refreshRegistry()
io/corbel/resources/rem/eventbus/AclConfigurationEventHandler/handle(io.corbel.event.ResourceEvent)#java/lang/String/lastIndexOf(java.lang.String)
io/corbel/resources/rem/eventbus/AclConfigurationEventHandler/handle(io.corbel.event.ResourceEvent)#com/google/gson/JsonElement/getAsString()
io/corbel/resources/rem/i18n/api/I18nErrorResponseFactory/errorNotLanguageHeader()#io/corbel/lib/ws/model/Error/Error(java.lang.String,java.lang.String)
io/corbel/resources/rem/i18n/api/I18nErrorResponseFactory/errorNotLanguageHeader()#io/corbel/lib/ws/api/error/ErrorResponseFactory/badRequest(io.corbel.lib.ws.model.Error)
io/corbel/resources/rem/i18n/api/I18nErrorResponseFactory/errorNotLanguageHeader()#io/corbel/lib/ws/api/error/ErrorResponseFactory/getInstance()
io/corbel/resources/rem/i18n/api/I18nErrorResponseFactory/getInstance()#io/corbel/resources/rem/i18n/api/I18nErrorResponseFactory/I18nErrorResponseFactory()
io/corbel/iam/eventbus/DomainPublicScopesNotPublishedEventHandler/handle(io.corbel.event.DomainPublicScopesNotPublishedEvent)#java/util/Collections/emptySet()
io/corbel/iam/eventbus/DomainPublicScopesNotPublishedEventHandler/handle(io.corbel.event.DomainPublicScopesNotPublishedEvent)#org/springframework/data/repository/CrudRepository/findOne(ID)
io/corbel/iam/eventbus/DomainPublicScopesNotPublishedEventHandler/handle(io.corbel.event.DomainPublicScopesNotPublishedEvent)#io/corbel/iam/service/ScopeService/addAuthorizationRulesForPublicAccess(java.lang.String,java.util.Set)
io/corbel/iam/eventbus/DomainPublicScopesNotPublishedEventHandler/handle(io.corbel.event.DomainPublicScopesNotPublishedEvent)#io/corbel/iam/model/Domain/getPublicScopes()
io/corbel/iam/eventbus/DomainPublicScopesNotPublishedEventHandler/handle(io.corbel.event.DomainPublicScopesNotPublishedEvent)#io/corbel/eventbus/EventWithSpecificDomain/getDomain()
io/corbel/iam/eventbus/DomainPublicScopesNotPublishedEventHandler/handle(io.corbel.event.DomainPublicScopesNotPublishedEvent)#io/corbel/iam/service/ScopeService/getScopes(java.util.Collection)
io/corbel/resources/rem/resmi/ResmiRemTest/getTestResource()#com/google/gson/JsonObject/addProperty(java.lang.String,java.lang.String)
io/corbel/resources/rem/resmi/ResmiRemTest/getTestResource()#com/google/gson/JsonObject/JsonObject()
io/corbel/resources/rem/resmi/ResmiRemTest/getParameters(java.lang.String)#java/util/Optional/of(T)
io/corbel/resources/rem/resmi/ResmiRemTest/getParameters(java.lang.String)#io/corbel/resources/rem/resmi/ResmiRemTest/getParameters(java.util.Optional)
io/corbel/resources/rem/resmi/ResmiRemTest/setup()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/resources/rem/resmi/ResmiRemTest/getParametersWithEmptyUri()#io/corbel/resources/rem/resmi/ResmiRemTest/getParameters(java.lang.String)
io/corbel/resources/rem/resmi/ResmiRemTest/getParametersWithEmptyUri()#java/util/Optional/empty()
io/corbel/resources/rem/resmi/ResmiRemTest/getParameters(java.util.Optional)#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/resmi/ResmiRemTest/getParameters(java.util.Optional)#io/corbel/resources/rem/request/RequestParameters/getRequestedDomain()
io/corbel/resources/rem/resmi/ResmiRemTest/getParameters(java.util.Optional)#java/util/Optional/of(T)
io/corbel/resources/rem/resmi/ResmiRemTest/getParameters(java.util.Optional)#io/corbel/resources/rem/request/CollectionParameters/getQueries()
io/corbel/resources/rem/resmi/ResmiRemTest/getParameters(java.util.Optional)#io/corbel/resources/rem/request/RelationParameters/getPredicateResource()
io/corbel/resources/rem/resmi/ResmiRemTest/getParameters(java.util.Optional)#java/util/Optional/empty()
io/corbel/resources/rem/resmi/ResmiRemTest/getParameters(java.util.Optional)#io/corbel/resources/rem/request/RequestParameters/getOptionalApiParameters()
io/corbel/resources/rem/resmi/ResmiRemTest/getParameters(java.util.Optional)#io/corbel/resources/rem/request/RequestParameters/getApiParameters()
io/corbel/resources/rem/resmi/ResmiRemTest/getParameters(java.util.Optional)#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/resources/rem/resmi/ResmiRemTest/getParameters(java.util.Optional)#org/mockito/Mockito/when(T)
io/corbel/resources/rem/resmi/ResmiRemTest/getTestRelationData()#com/google/gson/JsonObject/addProperty(java.lang.String,java.lang.Boolean)
io/corbel/resources/rem/resmi/ResmiRemTest/getTestRelationData()#com/google/gson/JsonObject/addProperty(java.lang.String,java.lang.String)
io/corbel/resources/rem/resmi/ResmiRemTest/getTestRelationData()#com/google/gson/JsonObject/JsonObject()
io/corbel/iam/model/Entity/hashCode()#java/util/Objects/hash(java.lang.Object[])
io/corbel/iam/model/Entity/equals(java.lang.Object)#java/util/Objects/equals(java.lang.Object,java.lang.Object)
io/corbel/iam/auth/rule/VersionAuthorizationRule/process(io.corbel.iam.auth.AuthorizationRequestContext)#io/corbel/iam/model/Entity/getId()
io/corbel/iam/auth/rule/VersionAuthorizationRule/process(io.corbel.iam.auth.AuthorizationRequestContext)#com/github/zafarkhaja/semver/Version/valueOf(java.lang.String)
io/corbel/iam/auth/rule/VersionAuthorizationRule/process(io.corbel.iam.auth.AuthorizationRequestContext)#org/slf4j/Logger/error(java.lang.String,java.lang.Object[])
io/corbel/iam/auth/rule/VersionAuthorizationRule/process(io.corbel.iam.auth.AuthorizationRequestContext)#io/corbel/iam/auth/AuthorizationRequestContext/getIssuerClient()
io/corbel/iam/auth/rule/VersionAuthorizationRule/process(io.corbel.iam.auth.AuthorizationRequestContext)#io/corbel/iam/auth/AuthorizationRequestContext/hasVersion()
io/corbel/iam/auth/rule/VersionAuthorizationRule/process(io.corbel.iam.auth.AuthorizationRequestContext)#io/corbel/iam/model/Client/getVersion()
io/corbel/iam/auth/rule/VersionAuthorizationRule/process(io.corbel.iam.auth.AuthorizationRequestContext)#io/corbel/iam/auth/rule/VersionAuthorizationRule/throwInvalidVersionException(io.corbel.iam.auth.AuthorizationRequestContext)
io/corbel/iam/auth/rule/VersionAuthorizationRule/process(io.corbel.iam.auth.AuthorizationRequestContext)#com/github/zafarkhaja/semver/Version/satisfies(java.lang.String)
io/corbel/iam/auth/rule/VersionAuthorizationRule/process(io.corbel.iam.auth.AuthorizationRequestContext)#io/corbel/iam/auth/AuthorizationRequestContext/getVersion()
io/corbel/iam/auth/rule/VersionAuthorizationRule/throwInvalidVersionException(io.corbel.iam.auth.AuthorizationRequestContext)#io/corbel/iam/exception/InvalidVersionException/InvalidVersionException(java.lang.String)
io/corbel/iam/auth/rule/VersionAuthorizationRule/throwInvalidVersionException(io.corbel.iam.auth.AuthorizationRequestContext)#io/corbel/iam/auth/AuthorizationRequestContext/getIssuerClient()
io/corbel/iam/auth/rule/VersionAuthorizationRule/throwInvalidVersionException(io.corbel.iam.auth.AuthorizationRequestContext)#io/corbel/iam/utils/Message/getMessage(java.lang.Object[])
io/corbel/iam/auth/rule/VersionAuthorizationRule/throwInvalidVersionException(io.corbel.iam.auth.AuthorizationRequestContext)#io/corbel/iam/auth/AuthorizationRequestContext/getVersion()
io/corbel/iam/auth/rule/VersionAuthorizationRule/throwInvalidVersionException(io.corbel.iam.auth.AuthorizationRequestContext)#io/corbel/iam/model/Client/getVersion()
io/corbel/iam/auth/rule/PrincipalExistsAuthorizationRuleTest/testPrincipalExists()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/auth/rule/PrincipalExistsAuthorizationRuleTest/testPrincipalExists()#org/mockito/Mockito/when(T)
io/corbel/iam/auth/rule/PrincipalExistsAuthorizationRuleTest/testPrincipalExists()#io/corbel/iam/model/User/User()
io/corbel/iam/auth/rule/PrincipalExistsAuthorizationRuleTest/testPrincipalExists()#io/corbel/iam/auth/AuthorizationRequestContext/hasPrincipal()
io/corbel/iam/auth/rule/PrincipalExistsAuthorizationRuleTest/testPrincipalExists()#io/corbel/iam/auth/AuthorizationRequestContext/getPrincipal()
io/corbel/iam/auth/rule/PrincipalExistsAuthorizationRuleTest/testPrincipalExists()#io/corbel/iam/auth/rule/PrincipalExistsAuthorizationRule/process(io.corbel.iam.auth.AuthorizationRequestContext)
io/corbel/iam/auth/rule/PrincipalExistsAuthorizationRuleTest/testPrincipalNotExistsException()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/auth/rule/PrincipalExistsAuthorizationRuleTest/testPrincipalNotExistsException()#org/mockito/Mockito/when(T)
io/corbel/iam/auth/rule/PrincipalExistsAuthorizationRuleTest/testPrincipalNotExistsException()#java/lang/Throwable/getMessage()
io/corbel/iam/auth/rule/PrincipalExistsAuthorizationRuleTest/testPrincipalNotExistsException()#io/corbel/iam/auth/AuthorizationRequestContext/hasPrincipal()
io/corbel/iam/auth/rule/PrincipalExistsAuthorizationRuleTest/testPrincipalNotExistsException()#io/corbel/iam/auth/AuthorizationRequestContext/getIssuerClient()
io/corbel/iam/auth/rule/PrincipalExistsAuthorizationRuleTest/testPrincipalNotExistsException()#org/junit/Assert/fail()
io/corbel/iam/auth/rule/PrincipalExistsAuthorizationRuleTest/testPrincipalNotExistsException()#io/corbel/iam/utils/Message/getMessage(java.lang.Object[])
io/corbel/iam/auth/rule/PrincipalExistsAuthorizationRuleTest/testPrincipalNotExistsException()#io/corbel/iam/model/Client/setDomain(java.lang.String)
io/corbel/iam/auth/rule/PrincipalExistsAuthorizationRuleTest/testPrincipalNotExistsException()#org/junit/Assert/assertEquals(java.lang.Object,java.lang.Object)
io/corbel/iam/auth/rule/PrincipalExistsAuthorizationRuleTest/testPrincipalNotExistsException()#io/corbel/iam/auth/rule/PrincipalExistsAuthorizationRule/process(io.corbel.iam.auth.AuthorizationRequestContext)
io/corbel/iam/auth/rule/PrincipalExistsAuthorizationRuleTest/testPrincipalNotExistsException()#io/corbel/iam/auth/AuthorizationRequestContext/getPrincipalId()
io/corbel/iam/auth/rule/PrincipalExistsAuthorizationRuleTest/testPrincipalNotExistsException()#io/corbel/iam/model/Client/Client()
io/corbel/iam/auth/rule/PrincipalExistsAuthorizationRuleTest/setUp()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/iam/auth/rule/PrincipalExistsAuthorizationRuleTest/setUp()#io/corbel/iam/auth/rule/PrincipalExistsAuthorizationRule/PrincipalExistsAuthorizationRule()
io/corbel/iam/auth/rule/PrincipalExistsAuthorizationRuleTest/testNoPrincipalRequest()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/auth/rule/PrincipalExistsAuthorizationRuleTest/testNoPrincipalRequest()#org/mockito/Mockito/when(T)
io/corbel/iam/auth/rule/PrincipalExistsAuthorizationRuleTest/testNoPrincipalRequest()#io/corbel/iam/auth/AuthorizationRequestContext/hasPrincipal()
io/corbel/iam/auth/rule/PrincipalExistsAuthorizationRuleTest/testNoPrincipalRequest()#io/corbel/iam/auth/rule/PrincipalExistsAuthorizationRule/process(io.corbel.iam.auth.AuthorizationRequestContext)
io/corbel/iam/auth/JsonTokenAuthorizationRequestContextTest/testGetClient()#io/corbel/iam/model/Entity/getId()
io/corbel/iam/auth/JsonTokenAuthorizationRequestContextTest/testGetClient()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/iam/auth/JsonTokenAuthorizationRequestContextTest/testGetClient()#io/corbel/iam/auth/JsonTokenAuthorizationRequestContext/getIssuerClient()
io/corbel/iam/auth/JsonTokenAuthorizationRequestContextTest/testGetClient()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/iam/auth/JsonTokenAuthorizationRequestContextTest/setup()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/auth/JsonTokenAuthorizationRequestContextTest/setup()#net/oauth/jsontoken/JsonToken/getIssuer()
io/corbel/iam/auth/JsonTokenAuthorizationRequestContextTest/setup()#io/corbel/iam/model/Client/setScopes(java.util.Set)
io/corbel/iam/auth/JsonTokenAuthorizationRequestContextTest/setup()#org/springframework/data/repository/CrudRepository/findOne(ID)
io/corbel/iam/auth/JsonTokenAuthorizationRequestContextTest/setup()#io/corbel/iam/auth/JsonTokenAuthorizationRequestContext/JsonTokenAuthorizationRequestContext(io.corbel.iam.repository.ClientRepository,io.corbel.iam.repository.DomainRepository,io.corbel.iam.repository.UserRepository,net.oauth.jsontoken.JsonToken)
io/corbel/iam/auth/JsonTokenAuthorizationRequestContextTest/setup()#io/corbel/iam/model/Domain/setDescription(java.lang.String)
io/corbel/iam/auth/JsonTokenAuthorizationRequestContextTest/setup()#io/corbel/iam/model/Client/setDomain(java.lang.String)
io/corbel/iam/auth/JsonTokenAuthorizationRequestContextTest/setup()#io/corbel/iam/repository/UserRepository/findByUsernameAndDomain(java.lang.String,java.lang.String)
io/corbel/iam/auth/JsonTokenAuthorizationRequestContextTest/setup()#org/mockito/Mockito/when(T)
io/corbel/iam/auth/JsonTokenAuthorizationRequestContextTest/setup()#io/corbel/iam/model/Entity/setId(java.lang.String)
io/corbel/iam/auth/JsonTokenAuthorizationRequestContextTest/setup()#io/corbel/iam/model/Domain/Domain()
io/corbel/iam/auth/JsonTokenAuthorizationRequestContextTest/setup()#io/corbel/iam/model/User/User()
io/corbel/iam/auth/JsonTokenAuthorizationRequestContextTest/setup()#io/corbel/iam/model/Client/Client()
io/corbel/iam/auth/JsonTokenAuthorizationRequestContextTest/testGetPrincipal()#org/fest/assertions/api/Assertions/assertThat(boolean)
io/corbel/iam/auth/JsonTokenAuthorizationRequestContextTest/testGetPrincipal()#org/mockito/Mockito/when(T)
io/corbel/iam/auth/JsonTokenAuthorizationRequestContextTest/testGetPrincipal()#io/corbel/iam/auth/JsonTokenAuthorizationRequestContext/hasPrincipal()
io/corbel/iam/auth/JsonTokenAuthorizationRequestContextTest/testGetPrincipal()#io/corbel/iam/auth/JsonTokenAuthorizationRequestContext/getPrincipal()
io/corbel/iam/auth/JsonTokenAuthorizationRequestContextTest/testGetPrincipal()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/iam/auth/JsonTokenAuthorizationRequestContextTest/testGetPrincipal()#com/google/gson/JsonObject/JsonObject()
io/corbel/iam/auth/JsonTokenAuthorizationRequestContextTest/testGetPrincipal()#com/google/gson/JsonObject/add(java.lang.String,com.google.gson.JsonElement)
io/corbel/iam/auth/JsonTokenAuthorizationRequestContextTest/testGetPrincipal()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/iam/auth/JsonTokenAuthorizationRequestContextTest/testGetPrincipal()#io/corbel/iam/model/Entity/getId()
io/corbel/iam/auth/JsonTokenAuthorizationRequestContextTest/testGetPrincipal()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/auth/JsonTokenAuthorizationRequestContextTest/testGetPrincipal()#org/fest/assertions/api/BooleanAssert/isTrue()
io/corbel/iam/auth/JsonTokenAuthorizationRequestContextTest/testGetPrincipal()#com/google/gson/JsonPrimitive/JsonPrimitive(java.lang.String)
io/corbel/iam/auth/JsonTokenAuthorizationRequestContextTest/testGetPrincipal()#net/oauth/jsontoken/JsonToken/getPayloadAsJsonObject()
io/corbel/iam/auth/JsonTokenAuthorizationRequestContextTest/testGetRequestedDomainEmpty()#org/mockito/Mockito/when(T)
io/corbel/iam/auth/JsonTokenAuthorizationRequestContextTest/testGetRequestedDomainEmpty()#net/oauth/jsontoken/JsonToken/getPayloadAsJsonObject()
io/corbel/iam/auth/JsonTokenAuthorizationRequestContextTest/testGetRequestedDomainEmpty()#com/google/gson/JsonObject/JsonObject()
io/corbel/iam/auth/JsonTokenAuthorizationRequestContextTest/testGetRequestedDomainEmpty()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/iam/auth/JsonTokenAuthorizationRequestContextTest/testGetRequestedDomainEmpty()#io/corbel/iam/model/Entity/getId()
io/corbel/iam/auth/JsonTokenAuthorizationRequestContextTest/testGetRequestedDomainEmpty()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/auth/JsonTokenAuthorizationRequestContextTest/testGetRequestedDomainEmpty()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/iam/auth/JsonTokenAuthorizationRequestContextTest/testGetRequestedDomainEmpty()#io/corbel/iam/auth/JsonTokenAuthorizationRequestContext/getRequestedDomain()
io/corbel/iam/auth/JsonTokenAuthorizationRequestContextTest/testGetRequestedDomain()#org/mockito/Mockito/when(T)
io/corbel/iam/auth/JsonTokenAuthorizationRequestContextTest/testGetRequestedDomain()#com/google/gson/JsonObject/JsonObject()
io/corbel/iam/auth/JsonTokenAuthorizationRequestContextTest/testGetRequestedDomain()#com/google/gson/JsonObject/add(java.lang.String,com.google.gson.JsonElement)
io/corbel/iam/auth/JsonTokenAuthorizationRequestContextTest/testGetRequestedDomain()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/iam/auth/JsonTokenAuthorizationRequestContextTest/testGetRequestedDomain()#io/corbel/iam/model/Entity/getId()
io/corbel/iam/auth/JsonTokenAuthorizationRequestContextTest/testGetRequestedDomain()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/auth/JsonTokenAuthorizationRequestContextTest/testGetRequestedDomain()#com/google/gson/JsonPrimitive/JsonPrimitive(java.lang.String)
io/corbel/iam/auth/JsonTokenAuthorizationRequestContextTest/testGetRequestedDomain()#net/oauth/jsontoken/JsonToken/getPayloadAsJsonObject()
io/corbel/iam/auth/JsonTokenAuthorizationRequestContextTest/testGetRequestedDomain()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/iam/auth/JsonTokenAuthorizationRequestContextTest/testGetRequestedDomain()#io/corbel/iam/auth/JsonTokenAuthorizationRequestContext/getRequestedDomain()
io/corbel/iam/auth/JsonTokenAuthorizationRequestContextTest/testGetScopes()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/auth/JsonTokenAuthorizationRequestContextTest/testGetScopes()#java/lang/String/split(java.lang.String)
io/corbel/iam/auth/JsonTokenAuthorizationRequestContextTest/testGetScopes()#org/mockito/Mockito/when(T)
io/corbel/iam/auth/JsonTokenAuthorizationRequestContextTest/testGetScopes()#io/corbel/iam/auth/JsonTokenAuthorizationRequestContext/getRequestedScopes()
io/corbel/iam/auth/JsonTokenAuthorizationRequestContextTest/testGetScopes()#java/util/Arrays/asList(T[])
io/corbel/iam/auth/JsonTokenAuthorizationRequestContextTest/testGetScopes()#org/fest/assertions/api/Assertions/assertThat(java.lang.Iterable)
io/corbel/iam/auth/JsonTokenAuthorizationRequestContextTest/testGetScopes()#com/google/gson/JsonObject/JsonObject()
io/corbel/iam/auth/JsonTokenAuthorizationRequestContextTest/testGetScopes()#com/google/gson/JsonObject/add(java.lang.String,com.google.gson.JsonElement)
io/corbel/iam/auth/JsonTokenAuthorizationRequestContextTest/testGetScopes()#com/google/gson/JsonPrimitive/JsonPrimitive(java.lang.String)
io/corbel/iam/auth/JsonTokenAuthorizationRequestContextTest/testGetScopes()#net/oauth/jsontoken/JsonToken/getPayloadAsJsonObject()
io/corbel/iam/auth/JsonTokenAuthorizationRequestContextTest/testGetScopes()#java/util/HashSet/HashSet(java.util.Collection)
io/corbel/iam/auth/JsonTokenAuthorizationRequestContextTest/testGetScopes()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/iam/auth/JsonTokenAuthorizationRequestContextTest/testGetEmptyScopes()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/auth/JsonTokenAuthorizationRequestContextTest/testGetEmptyScopes()#org/mockito/Mockito/when(T)
io/corbel/iam/auth/JsonTokenAuthorizationRequestContextTest/testGetEmptyScopes()#io/corbel/iam/auth/JsonTokenAuthorizationRequestContext/getRequestedScopes()
io/corbel/iam/auth/JsonTokenAuthorizationRequestContextTest/testGetEmptyScopes()#net/oauth/jsontoken/JsonToken/getPayloadAsJsonObject()
io/corbel/iam/auth/JsonTokenAuthorizationRequestContextTest/testGetEmptyScopes()#org/fest/assertions/api/Assertions/assertThat(java.lang.Iterable)
io/corbel/iam/auth/JsonTokenAuthorizationRequestContextTest/testGetEmptyScopes()#com/google/gson/JsonObject/JsonObject()
io/corbel/iam/auth/JsonTokenAuthorizationRequestContextTest/testGetEmptyScopes()#org/fest/assertions/api/AbstractIterableAssert/isEmpty()
io/corbel/iam/auth/JsonTokenAuthorizationRequestContextTest/testGetVersion()#org/fest/assertions/api/Assertions/assertThat(boolean)
io/corbel/iam/auth/JsonTokenAuthorizationRequestContextTest/testGetVersion()#org/mockito/Mockito/when(T)
io/corbel/iam/auth/JsonTokenAuthorizationRequestContextTest/testGetVersion()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/iam/auth/JsonTokenAuthorizationRequestContextTest/testGetVersion()#io/corbel/iam/auth/JsonTokenAuthorizationRequestContext/hasVersion()
io/corbel/iam/auth/JsonTokenAuthorizationRequestContextTest/testGetVersion()#com/google/gson/JsonObject/JsonObject()
io/corbel/iam/auth/JsonTokenAuthorizationRequestContextTest/testGetVersion()#io/corbel/iam/auth/JsonTokenAuthorizationRequestContext/getVersion()
io/corbel/iam/auth/JsonTokenAuthorizationRequestContextTest/testGetVersion()#com/google/gson/JsonObject/add(java.lang.String,com.google.gson.JsonElement)
io/corbel/iam/auth/JsonTokenAuthorizationRequestContextTest/testGetVersion()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/iam/auth/JsonTokenAuthorizationRequestContextTest/testGetVersion()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/auth/JsonTokenAuthorizationRequestContextTest/testGetVersion()#org/fest/assertions/api/BooleanAssert/isTrue()
io/corbel/iam/auth/JsonTokenAuthorizationRequestContextTest/testGetVersion()#com/google/gson/JsonPrimitive/JsonPrimitive(java.lang.String)
io/corbel/iam/auth/JsonTokenAuthorizationRequestContextTest/testGetVersion()#net/oauth/jsontoken/JsonToken/getPayloadAsJsonObject()
io/corbel/iam/auth/JsonTokenAuthorizationRequestContextTest/testGetDomain()#io/corbel/iam/model/Entity/getId()
io/corbel/iam/auth/JsonTokenAuthorizationRequestContextTest/testGetDomain()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/iam/auth/JsonTokenAuthorizationRequestContextTest/testGetDomain()#io/corbel/iam/auth/JsonTokenAuthorizationRequestContext/getIssuerClientDomain()
io/corbel/iam/auth/JsonTokenAuthorizationRequestContextTest/testGetDomain()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/resources/href/LinksBuilder/ResourceLinksBuilder/buildSelfLink()#io/corbel/resources/href/Link/Link(java.lang.String,java.lang.String)
io/corbel/resources/href/LinksBuilder/ResourceLinksBuilder/buildSelfLink()#java/util/List/add(E)
io/corbel/resources/href/LinksBuilder/ResourceLinksBuilder/buildSelfLink()#java/net/URI/toASCIIString()
io/corbel/resources/href/LinksBuilder/ResourceLinksBuilder/buildRelationLink(java.lang.String)#javax/ws/rs/core/UriBuilder/fromUri(java.net.URI)
io/corbel/resources/href/LinksBuilder/ResourceLinksBuilder/buildRelationLink(java.lang.String)#io/corbel/resources/href/Link/Link(java.lang.String,java.lang.String)
io/corbel/resources/href/LinksBuilder/ResourceLinksBuilder/buildRelationLink(java.lang.String)#java/util/List/add(E)
io/corbel/resources/href/LinksBuilder/ResourceLinksBuilder/buildRelationLink(java.lang.String)#javax/ws/rs/core/UriBuilder/path(java.lang.String)
io/corbel/resources/href/LinksBuilder/ResourceLinksBuilder/buildRelationLink(java.lang.String)#javax/ws/rs/core/UriBuilder/buildFromEncoded(java.lang.Object[])
io/corbel/resources/href/LinksBuilder/ResourceLinksBuilder/buildRelationLink(java.lang.String)#java/net/URI/toASCIIString()
io/corbel/iam/service/DefaultMailServiceTest/testEmailValidationWithClientEmailValidationDisabled()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/service/DefaultMailServiceTest/testEmailValidationWithClientEmailValidationDisabled()#io/corbel/iam/service/DefaultMailService/sendMailValidation(java.lang.String,io.corbel.iam.model.User)
io/corbel/iam/service/DefaultMailServiceTest/testEmailValidationWithClientEmailValidationDisabled()#org/springframework/data/repository/CrudRepository/findOne(ID)
io/corbel/iam/service/DefaultMailServiceTest/testEmailValidationWithClientEmailValidationDisabled()#io/corbel/iam/model/Client/getEmailValidationEnabled()
io/corbel/iam/service/DefaultMailServiceTest/testEmailValidationWithClientEmailValidationDisabled()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/iam/service/DefaultMailServiceTest/testEmailValidationWithClientEmailValidationDisabled()#org/mockito/Mockito/when(T)
io/corbel/iam/service/DefaultMailServiceTest/testEmailValidationWithClientEmailValidationDisabled()#org/mockito/Mockito/verifyNoMoreInteractions(java.lang.Object[])
io/corbel/iam/service/DefaultMailServiceTest/testEmailValidationWithClientEmailValidationDisabled()#org/mockito/Mockito/verify(T)
io/corbel/iam/service/DefaultMailServiceTest/testSendMailResetPassword()#io/corbel/lib/token/TokenGrant/getAccessToken()
io/corbel/iam/service/DefaultMailServiceTest/testSendMailResetPassword()#org/mockito/Mockito/verify(T)
io/corbel/iam/service/DefaultMailServiceTest/testSendMailResetPassword()#org/springframework/data/repository/CrudRepository/findOne(ID)
io/corbel/iam/service/DefaultMailServiceTest/testSendMailResetPassword()#io/corbel/iam/model/Client/getResetUrl()
io/corbel/iam/service/DefaultMailServiceTest/testSendMailResetPassword()#io/corbel/lib/token/factory/TokenFactory/createToken(io.corbel.lib.token.TokenInfo,long,java.lang.String[])
io/corbel/iam/service/DefaultMailServiceTest/testSendMailResetPassword()#org/mockito/Matchers/any()
io/corbel/iam/service/DefaultMailServiceTest/testSendMailResetPassword()#org/mockito/Matchers/eq(long)
io/corbel/iam/service/DefaultMailServiceTest/testSendMailResetPassword()#io/corbel/iam/model/Client/getResetNotificationId()
io/corbel/iam/service/DefaultMailServiceTest/testSendMailResetPassword()#io/corbel/iam/model/Entity/getId()
io/corbel/iam/service/DefaultMailServiceTest/testSendMailResetPassword()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/service/DefaultMailServiceTest/testSendMailResetPassword()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/iam/service/DefaultMailServiceTest/testSendMailResetPassword()#org/mockito/Mockito/when(T)
io/corbel/iam/service/DefaultMailServiceTest/testSendMailResetPassword()#io/corbel/iam/service/DefaultMailService/sendMailResetPassword(java.lang.String,io.corbel.iam.model.User)
io/corbel/iam/service/DefaultMailServiceTest/setup()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/service/DefaultMailServiceTest/setup()#io/corbel/iam/service/DefaultMailService/DefaultMailService(io.corbel.iam.service.EventsService,io.corbel.iam.service.ScopeService,io.corbel.lib.token.factory.TokenFactory,io.corbel.iam.repository.ClientRepository,java.time.Clock,java.lang.String,long,java.lang.String,java.lang.String,java.lang.String,long,java.lang.String,java.lang.String)
io/corbel/iam/service/DefaultMailServiceTest/setup()#io/corbel/iam/model/User/User()
io/corbel/iam/service/DefaultMailServiceTest/setup()#io/corbel/iam/model/User/setFirstName(java.lang.String)
io/corbel/iam/service/DefaultMailServiceTest/setup()#io/corbel/iam/model/User/setEmail(java.lang.String)
io/corbel/iam/service/DefaultMailServiceTest/setup()#io/corbel/iam/model/User/setLastName(java.lang.String)
io/corbel/iam/service/DefaultMailServiceTest/setup()#io/corbel/iam/model/User/setDomain(java.lang.String)
io/corbel/iam/service/DefaultMailServiceTest/setup()#java/time/Clock/systemUTC()
io/corbel/iam/service/DefaultMailServiceTest/setup()#io/corbel/iam/service/UserService/findById(java.lang.String)
io/corbel/iam/service/DefaultMailServiceTest/setup()#org/mockito/Mockito/when(T)
io/corbel/iam/service/DefaultMailServiceTest/setup()#io/corbel/iam/model/Entity/setId(java.lang.String)
io/corbel/iam/service/DefaultMailServiceTest/testEmailValidationWithoutClientId()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/service/DefaultMailServiceTest/testEmailValidationWithoutClientId()#io/corbel/iam/service/DefaultMailService/sendMailValidation(java.lang.String,io.corbel.iam.model.User)
io/corbel/iam/service/DefaultMailServiceTest/testEmailValidationWithoutClientId()#org/mockito/Mockito/when(T)
io/corbel/iam/service/DefaultMailServiceTest/testEmailValidationWithoutClientId()#org/springframework/data/repository/CrudRepository/findOne(ID)
io/corbel/iam/service/DefaultMailServiceTest/testEmailValidationWithoutClientId()#org/mockito/Mockito/verifyNoMoreInteractions(java.lang.Object[])
io/corbel/iam/service/DefaultMailServiceTest/testEmailValidationWithoutClientId()#org/mockito/Mockito/verify(T)
io/corbel/iam/service/DefaultMailServiceTest/testSendMailResetPasswordWithoutClientId()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/service/DefaultMailServiceTest/testSendMailResetPasswordWithoutClientId()#org/springframework/data/repository/CrudRepository/findOne(ID)
io/corbel/iam/service/DefaultMailServiceTest/testSendMailResetPasswordWithoutClientId()#org/mockito/Mockito/when(T)
io/corbel/iam/service/DefaultMailServiceTest/testSendMailResetPasswordWithoutClientId()#io/corbel/iam/service/DefaultMailService/sendMailResetPassword(java.lang.String,io.corbel.iam.model.User)
io/corbel/iam/service/DefaultMailServiceTest/testSendMailResetPasswordWithoutClientId()#org/mockito/Mockito/verifyNoMoreInteractions(java.lang.Object[])
io/corbel/iam/service/DefaultMailServiceTest/testSendMailResetPasswordWithoutClientId()#org/mockito/Mockito/verify(T)
io/corbel/iam/service/DefaultMailServiceTest/testSendEmailValidationWithoutEmailValidationNotificationId()#org/mockito/Mockito/verify(T)
io/corbel/iam/service/DefaultMailServiceTest/testSendEmailValidationWithoutEmailValidationNotificationId()#org/springframework/data/repository/CrudRepository/findOne(ID)
io/corbel/iam/service/DefaultMailServiceTest/testSendEmailValidationWithoutEmailValidationNotificationId()#io/corbel/iam/model/Client/getResetUrl()
io/corbel/iam/service/DefaultMailServiceTest/testSendEmailValidationWithoutEmailValidationNotificationId()#io/corbel/lib/token/factory/TokenFactory/createToken(io.corbel.lib.token.TokenInfo,long,java.lang.String[])
io/corbel/iam/service/DefaultMailServiceTest/testSendEmailValidationWithoutEmailValidationNotificationId()#org/mockito/Matchers/any()
io/corbel/iam/service/DefaultMailServiceTest/testSendEmailValidationWithoutEmailValidationNotificationId()#org/mockito/Matchers/eq(long)
io/corbel/iam/service/DefaultMailServiceTest/testSendEmailValidationWithoutEmailValidationNotificationId()#io/corbel/iam/model/Client/getEmailValidationEnabled()
io/corbel/iam/service/DefaultMailServiceTest/testSendEmailValidationWithoutEmailValidationNotificationId()#io/corbel/iam/model/Entity/getId()
io/corbel/iam/service/DefaultMailServiceTest/testSendEmailValidationWithoutEmailValidationNotificationId()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/service/DefaultMailServiceTest/testSendEmailValidationWithoutEmailValidationNotificationId()#io/corbel/iam/model/Client/getEmailValidationNotificationId()
io/corbel/iam/service/DefaultMailServiceTest/testSendEmailValidationWithoutEmailValidationNotificationId()#io/corbel/iam/service/DefaultMailService/sendMailValidation(java.lang.String,io.corbel.iam.model.User)
io/corbel/iam/service/DefaultMailServiceTest/testSendEmailValidationWithoutEmailValidationNotificationId()#io/corbel/lib/token/TokenGrant/getAccessToken()
io/corbel/iam/service/DefaultMailServiceTest/testSendEmailValidationWithoutEmailValidationNotificationId()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/iam/service/DefaultMailServiceTest/testSendEmailValidationWithoutEmailValidationNotificationId()#org/mockito/Mockito/when(T)
io/corbel/iam/service/DefaultMailServiceTest/testSendEmailValidationWithoutEmailValidationNotificationId()#io/corbel/iam/model/Client/getEmailValidationUrl()
io/corbel/iam/service/DefaultMailServiceTest/testEmailValidation()#org/mockito/Mockito/verify(T)
io/corbel/iam/service/DefaultMailServiceTest/testEmailValidation()#org/springframework/data/repository/CrudRepository/findOne(ID)
io/corbel/iam/service/DefaultMailServiceTest/testEmailValidation()#io/corbel/iam/model/Client/getResetUrl()
io/corbel/iam/service/DefaultMailServiceTest/testEmailValidation()#io/corbel/lib/token/factory/TokenFactory/createToken(io.corbel.lib.token.TokenInfo,long,java.lang.String[])
io/corbel/iam/service/DefaultMailServiceTest/testEmailValidation()#org/mockito/Matchers/any()
io/corbel/iam/service/DefaultMailServiceTest/testEmailValidation()#org/mockito/Matchers/eq(long)
io/corbel/iam/service/DefaultMailServiceTest/testEmailValidation()#io/corbel/iam/model/Client/getEmailValidationEnabled()
io/corbel/iam/service/DefaultMailServiceTest/testEmailValidation()#io/corbel/iam/model/Entity/getId()
io/corbel/iam/service/DefaultMailServiceTest/testEmailValidation()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/service/DefaultMailServiceTest/testEmailValidation()#io/corbel/iam/model/Client/getEmailValidationNotificationId()
io/corbel/iam/service/DefaultMailServiceTest/testEmailValidation()#io/corbel/iam/service/DefaultMailService/sendMailValidation(java.lang.String,io.corbel.iam.model.User)
io/corbel/iam/service/DefaultMailServiceTest/testEmailValidation()#io/corbel/lib/token/TokenGrant/getAccessToken()
io/corbel/iam/service/DefaultMailServiceTest/testEmailValidation()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/iam/service/DefaultMailServiceTest/testEmailValidation()#org/mockito/Mockito/when(T)
io/corbel/iam/service/DefaultMailServiceTest/testEmailValidation()#io/corbel/iam/model/Client/getEmailValidationUrl()
io/corbel/iam/service/DefaultMailServiceTest/testSendMailResetPasswordWithoutResetNotificationId()#io/corbel/lib/token/TokenGrant/getAccessToken()
io/corbel/iam/service/DefaultMailServiceTest/testSendMailResetPasswordWithoutResetNotificationId()#org/mockito/Mockito/verify(T)
io/corbel/iam/service/DefaultMailServiceTest/testSendMailResetPasswordWithoutResetNotificationId()#org/springframework/data/repository/CrudRepository/findOne(ID)
io/corbel/iam/service/DefaultMailServiceTest/testSendMailResetPasswordWithoutResetNotificationId()#io/corbel/iam/model/Client/getResetUrl()
io/corbel/iam/service/DefaultMailServiceTest/testSendMailResetPasswordWithoutResetNotificationId()#io/corbel/lib/token/factory/TokenFactory/createToken(io.corbel.lib.token.TokenInfo,long,java.lang.String[])
io/corbel/iam/service/DefaultMailServiceTest/testSendMailResetPasswordWithoutResetNotificationId()#org/mockito/Matchers/any()
io/corbel/iam/service/DefaultMailServiceTest/testSendMailResetPasswordWithoutResetNotificationId()#org/mockito/Matchers/eq(long)
io/corbel/iam/service/DefaultMailServiceTest/testSendMailResetPasswordWithoutResetNotificationId()#io/corbel/iam/model/Client/getResetNotificationId()
io/corbel/iam/service/DefaultMailServiceTest/testSendMailResetPasswordWithoutResetNotificationId()#io/corbel/iam/model/Entity/getId()
io/corbel/iam/service/DefaultMailServiceTest/testSendMailResetPasswordWithoutResetNotificationId()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/service/DefaultMailServiceTest/testSendMailResetPasswordWithoutResetNotificationId()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/iam/service/DefaultMailServiceTest/testSendMailResetPasswordWithoutResetNotificationId()#org/mockito/Mockito/when(T)
io/corbel/iam/service/DefaultMailServiceTest/testSendMailResetPasswordWithoutResetNotificationId()#io/corbel/iam/service/DefaultMailService/sendMailResetPassword(java.lang.String,io.corbel.iam.model.User)
io/corbel/resources/rem/resmi/ResmiPutRemTest/updateCollectionTestWithCondition()#io/corbel/resources/rem/model/ResourceUri/ResourceUri(java.lang.String,java.lang.String)
io/corbel/resources/rem/resmi/ResmiPutRemTest/updateCollectionTestWithCondition()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/resmi/ResmiPutRemTest/updateCollectionTestWithCondition()#io/corbel/resources/rem/Rem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional)
io/corbel/resources/rem/resmi/ResmiPutRemTest/updateCollectionTestWithCondition()#com/google/gson/JsonPrimitive/JsonPrimitive(java.lang.String)
io/corbel/resources/rem/resmi/ResmiPutRemTest/updateCollectionTestWithCondition()#io/corbel/resources/rem/service/ResmiService/updateCollection(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject,java.util.List)
io/corbel/resources/rem/resmi/ResmiPutRemTest/updateCollectionTestWithCondition()#com/google/gson/JsonObject/JsonObject()
io/corbel/resources/rem/resmi/ResmiPutRemTest/updateCollectionTestWithCondition()#com/google/gson/JsonObject/add(java.lang.String,com.google.gson.JsonElement)
io/corbel/resources/rem/resmi/ResmiPutRemTest/updateCollectionTestWithCondition()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/resources/rem/resmi/ResmiPutRemTest/updateCollectionTestWithCondition()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/resources/rem/resmi/ResmiPutRemTest/updateCollectionTestWithCondition()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/resmi/ResmiPutRemTest/updateCollectionTestWithCondition()#java/util/Optional/of(T)
io/corbel/resources/rem/resmi/ResmiPutRemTest/updateCollectionTestWithCondition()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/resources/rem/resmi/ResmiPutRemTest/updateCollectionTestWithCondition()#io/corbel/resources/rem/resmi/ResmiPutRemTest/getCollectionParametersMockWithCondition(java.util.Optional)
io/corbel/resources/rem/resmi/ResmiPutRemTest/updateCollectionTestWithCondition()#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/rem/resmi/ResmiPutRemTest/updateCollectionTestWithFailCondition()#io/corbel/resources/rem/model/ResourceUri/ResourceUri(java.lang.String,java.lang.String)
io/corbel/resources/rem/resmi/ResmiPutRemTest/updateCollectionTestWithFailCondition()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/resmi/ResmiPutRemTest/updateCollectionTestWithFailCondition()#io/corbel/resources/rem/Rem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional)
io/corbel/resources/rem/resmi/ResmiPutRemTest/updateCollectionTestWithFailCondition()#com/google/gson/JsonPrimitive/JsonPrimitive(java.lang.String)
io/corbel/resources/rem/resmi/ResmiPutRemTest/updateCollectionTestWithFailCondition()#io/corbel/resources/rem/service/ResmiService/updateCollection(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject,java.util.List)
io/corbel/resources/rem/resmi/ResmiPutRemTest/updateCollectionTestWithFailCondition()#com/google/gson/JsonObject/JsonObject()
io/corbel/resources/rem/resmi/ResmiPutRemTest/updateCollectionTestWithFailCondition()#com/google/gson/JsonObject/add(java.lang.String,com.google.gson.JsonElement)
io/corbel/resources/rem/resmi/ResmiPutRemTest/updateCollectionTestWithFailCondition()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/resources/rem/resmi/ResmiPutRemTest/updateCollectionTestWithFailCondition()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/resources/rem/resmi/ResmiPutRemTest/updateCollectionTestWithFailCondition()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/resmi/ResmiPutRemTest/updateCollectionTestWithFailCondition()#java/util/Optional/of(T)
io/corbel/resources/rem/resmi/ResmiPutRemTest/updateCollectionTestWithFailCondition()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/resources/rem/resmi/ResmiPutRemTest/updateCollectionTestWithFailCondition()#io/corbel/resources/rem/resmi/ResmiPutRemTest/getCollectionParametersMockWithCondition(java.util.Optional)
io/corbel/resources/rem/resmi/ResmiPutRemTest/updateCollectionTestWithFailCondition()#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/rem/resmi/ResmiPutRemTest/getCollectionParametersMockWithCondition(java.util.Optional)#io/corbel/resources/rem/request/RequestParameters/getOptionalApiParameters()
io/corbel/resources/rem/resmi/ResmiPutRemTest/getCollectionParametersMockWithCondition(java.util.Optional)#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/resmi/ResmiPutRemTest/getCollectionParametersMockWithCondition(java.util.Optional)#io/corbel/resources/rem/request/CollectionParameters/getConditions()
io/corbel/resources/rem/resmi/ResmiPutRemTest/getCollectionParametersMockWithCondition(java.util.Optional)#java/util/Optional/of(T)
io/corbel/resources/rem/resmi/ResmiPutRemTest/getCollectionParametersMockWithCondition(java.util.Optional)#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/resources/rem/resmi/ResmiPutRemTest/getCollectionParametersMockWithCondition(java.util.Optional)#org/mockito/Mockito/when(T)
io/corbel/resources/rem/resmi/ResmiPutRemTest/testPutRelationWithData()#io/corbel/resources/rem/resmi/ResmiRemTest/getParameters(java.lang.String)
io/corbel/resources/rem/resmi/ResmiPutRemTest/testPutRelationWithData()#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/rem/resmi/ResmiPutRemTest/testPutRelationWithData()#io/corbel/resources/rem/Rem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)
io/corbel/resources/rem/resmi/ResmiPutRemTest/testPutRelationWithData()#io/corbel/resources/rem/resmi/ResmiRemTest/getTestRelationData()
io/corbel/resources/rem/resmi/ResmiPutRemTest/testPutRelationWithData()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/resources/rem/resmi/ResmiPutRemTest/testPutRelationWithData()#java/util/Optional/of(T)
io/corbel/resources/rem/resmi/ResmiPutRemTest/testPutRelationWithData()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/resources/rem/resmi/ResmiPutRemTest/updateCollectionTest()#io/corbel/resources/rem/Rem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional)
io/corbel/resources/rem/resmi/ResmiPutRemTest/updateCollectionTest()#com/google/gson/JsonPrimitive/JsonPrimitive(java.lang.String)
io/corbel/resources/rem/resmi/ResmiPutRemTest/updateCollectionTest()#com/google/gson/JsonObject/JsonObject()
io/corbel/resources/rem/resmi/ResmiPutRemTest/updateCollectionTest()#java/util/Optional/empty()
io/corbel/resources/rem/resmi/ResmiPutRemTest/updateCollectionTest()#com/google/gson/JsonObject/add(java.lang.String,com.google.gson.JsonElement)
io/corbel/resources/rem/resmi/ResmiPutRemTest/updateCollectionTest()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/resources/rem/resmi/ResmiPutRemTest/updateCollectionTest()#java/util/Optional/of(T)
io/corbel/resources/rem/resmi/ResmiPutRemTest/updateCollectionTest()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/resources/rem/resmi/ResmiPutRemTest/updateCollectionTest()#io/corbel/resources/rem/resmi/ResmiPutRemTest/getCollectionParametersMockWithCondition(java.util.Optional)
io/corbel/resources/rem/resmi/ResmiPutRemTest/updateCollectionTest()#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/rem/resmi/ResmiPutRemTest/updateResourceTestWithFailCondition()#io/corbel/resources/rem/model/ResourceUri/ResourceUri(java.lang.String,java.lang.String,java.lang.String)
io/corbel/resources/rem/resmi/ResmiPutRemTest/updateResourceTestWithFailCondition()#com/google/gson/JsonPrimitive/JsonPrimitive(java.lang.String)
io/corbel/resources/rem/resmi/ResmiPutRemTest/updateResourceTestWithFailCondition()#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/rem/resmi/ResmiPutRemTest/updateResourceTestWithFailCondition()#io/corbel/resources/rem/service/ResmiService/conditionalUpdateResource(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject,java.util.List)
io/corbel/resources/rem/resmi/ResmiPutRemTest/updateResourceTestWithFailCondition()#com/google/gson/JsonObject/JsonObject()
io/corbel/resources/rem/resmi/ResmiPutRemTest/updateResourceTestWithFailCondition()#com/google/gson/JsonObject/add(java.lang.String,com.google.gson.JsonElement)
io/corbel/resources/rem/resmi/ResmiPutRemTest/updateResourceTestWithFailCondition()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/resources/rem/resmi/ResmiPutRemTest/updateResourceTestWithFailCondition()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/resmi/ResmiPutRemTest/updateResourceTestWithFailCondition()#io/corbel/resources/rem/resmi/ResmiPutRemTest/getResourceParametersMockWithCondition(java.util.Optional)
io/corbel/resources/rem/resmi/ResmiPutRemTest/updateResourceTestWithFailCondition()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/resources/rem/resmi/ResmiPutRemTest/updateResourceTestWithFailCondition()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/resmi/ResmiPutRemTest/updateResourceTestWithFailCondition()#io/corbel/resources/rem/Rem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)
io/corbel/resources/rem/resmi/ResmiPutRemTest/updateResourceTestWithFailCondition()#java/util/Optional/of(T)
io/corbel/resources/rem/resmi/ResmiPutRemTest/updateResourceTestWithFailCondition()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/resources/rem/resmi/ResmiPutRemTest/updateMissingTest()#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/rem/resmi/ResmiPutRemTest/updateMissingTest()#io/corbel/resources/rem/resmi/ResmiRemTest/getParametersWithEmptyUri()
io/corbel/resources/rem/resmi/ResmiPutRemTest/updateMissingTest()#java/util/Optional/empty()
io/corbel/resources/rem/resmi/ResmiPutRemTest/updateMissingTest()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/resources/rem/resmi/ResmiPutRemTest/updateMissingTest()#io/corbel/resources/rem/Rem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)
io/corbel/resources/rem/resmi/ResmiPutRemTest/updateMissingTest()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/resources/rem/resmi/ResmiPutRemTest/testPutRelationWithUnderscoreInAttributeNameTest()#io/corbel/resources/rem/resmi/ResmiRemTest/getParameters(java.lang.String)
io/corbel/resources/rem/resmi/ResmiPutRemTest/testPutRelationWithUnderscoreInAttributeNameTest()#io/corbel/resources/rem/service/ResmiService/upsertRelation(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject)
io/corbel/resources/rem/resmi/ResmiPutRemTest/testPutRelationWithUnderscoreInAttributeNameTest()#org/mockito/stubbing/Stubber/when(T)
io/corbel/resources/rem/resmi/ResmiPutRemTest/testPutRelationWithUnderscoreInAttributeNameTest()#java/util/Optional/ofNullable(T)
io/corbel/resources/rem/resmi/ResmiPutRemTest/testPutRelationWithUnderscoreInAttributeNameTest()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/resources/rem/resmi/ResmiPutRemTest/testPutRelationWithUnderscoreInAttributeNameTest()#com/google/gson/JsonPrimitive/JsonPrimitive(java.lang.String)
io/corbel/resources/rem/resmi/ResmiPutRemTest/testPutRelationWithUnderscoreInAttributeNameTest()#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/rem/resmi/ResmiPutRemTest/testPutRelationWithUnderscoreInAttributeNameTest()#org/mockito/Matchers/eq(T)
io/corbel/resources/rem/resmi/ResmiPutRemTest/testPutRelationWithUnderscoreInAttributeNameTest()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/resources/rem/resmi/ResmiPutRemTest/testPutRelationWithUnderscoreInAttributeNameTest()#io/corbel/resources/rem/resmi/exception/StartsWithUnderscoreException/StartsWithUnderscoreException(java.lang.String)
io/corbel/resources/rem/resmi/ResmiPutRemTest/testPutRelationWithUnderscoreInAttributeNameTest()#com/google/gson/JsonObject/JsonObject()
io/corbel/resources/rem/resmi/ResmiPutRemTest/testPutRelationWithUnderscoreInAttributeNameTest()#org/mockito/Matchers/any()
io/corbel/resources/rem/resmi/ResmiPutRemTest/testPutRelationWithUnderscoreInAttributeNameTest()#org/mockito/Mockito/doThrow(java.lang.Throwable)
io/corbel/resources/rem/resmi/ResmiPutRemTest/testPutRelationWithUnderscoreInAttributeNameTest()#io/corbel/resources/rem/Rem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)
io/corbel/resources/rem/resmi/ResmiPutRemTest/testPutRelationWithUnderscoreInAttributeNameTest()#com/google/gson/JsonObject/add(java.lang.String,com.google.gson.JsonElement)
io/corbel/resources/rem/resmi/ResmiPutRemTest/getResourceParametersMockWithCondition(java.util.Optional)#io/corbel/resources/rem/request/RequestParameters/getOptionalApiParameters()
io/corbel/resources/rem/resmi/ResmiPutRemTest/getResourceParametersMockWithCondition(java.util.Optional)#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/resmi/ResmiPutRemTest/getResourceParametersMockWithCondition(java.util.Optional)#io/corbel/resources/rem/request/RequestParameters/getRequestedDomain()
io/corbel/resources/rem/resmi/ResmiPutRemTest/getResourceParametersMockWithCondition(java.util.Optional)#java/util/Optional/of(T)
io/corbel/resources/rem/resmi/ResmiPutRemTest/getResourceParametersMockWithCondition(java.util.Optional)#io/corbel/resources/rem/request/ResourceParameters/getConditions()
io/corbel/resources/rem/resmi/ResmiPutRemTest/getResourceParametersMockWithCondition(java.util.Optional)#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/resources/rem/resmi/ResmiPutRemTest/getResourceParametersMockWithCondition(java.util.Optional)#org/mockito/Mockito/when(T)
io/corbel/resources/rem/resmi/ResmiPutRemTest/testPutRelation()#io/corbel/resources/rem/resmi/ResmiRemTest/getParameters(java.lang.String)
io/corbel/resources/rem/resmi/ResmiPutRemTest/testPutRelation()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/resources/rem/resmi/ResmiPutRemTest/testPutRelation()#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/rem/resmi/ResmiPutRemTest/testPutRelation()#java/util/Optional/empty()
io/corbel/resources/rem/resmi/ResmiPutRemTest/testPutRelation()#io/corbel/resources/rem/Rem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)
io/corbel/resources/rem/resmi/ResmiPutRemTest/testPutRelation()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/resources/rem/resmi/ResmiPutRemTest/updateResourceWithUnderscoreInAttributeNameTest()#io/corbel/resources/rem/resmi/ResmiPutRemTest/getResourceParametersMockWithCondition(java.util.Optional)
io/corbel/resources/rem/resmi/ResmiPutRemTest/updateResourceWithUnderscoreInAttributeNameTest()#org/mockito/stubbing/Stubber/when(T)
io/corbel/resources/rem/resmi/ResmiPutRemTest/updateResourceWithUnderscoreInAttributeNameTest()#com/google/gson/JsonPrimitive/JsonPrimitive(java.lang.String)
io/corbel/resources/rem/resmi/ResmiPutRemTest/updateResourceWithUnderscoreInAttributeNameTest()#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/rem/resmi/ResmiPutRemTest/updateResourceWithUnderscoreInAttributeNameTest()#org/mockito/Matchers/eq(T)
io/corbel/resources/rem/resmi/ResmiPutRemTest/updateResourceWithUnderscoreInAttributeNameTest()#com/google/gson/JsonObject/add(java.lang.String,com.google.gson.JsonElement)
io/corbel/resources/rem/resmi/ResmiPutRemTest/updateResourceWithUnderscoreInAttributeNameTest()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/resources/rem/resmi/ResmiPutRemTest/updateResourceWithUnderscoreInAttributeNameTest()#io/corbel/resources/rem/Rem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)
io/corbel/resources/rem/resmi/ResmiPutRemTest/updateResourceWithUnderscoreInAttributeNameTest()#java/util/Optional/of(T)
io/corbel/resources/rem/resmi/ResmiPutRemTest/updateResourceWithUnderscoreInAttributeNameTest()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/resources/rem/resmi/ResmiPutRemTest/updateResourceWithUnderscoreInAttributeNameTest()#io/corbel/resources/rem/resmi/exception/StartsWithUnderscoreException/StartsWithUnderscoreException(java.lang.String)
io/corbel/resources/rem/resmi/ResmiPutRemTest/updateResourceWithUnderscoreInAttributeNameTest()#com/google/gson/JsonObject/JsonObject()
io/corbel/resources/rem/resmi/ResmiPutRemTest/updateResourceWithUnderscoreInAttributeNameTest()#io/corbel/resources/rem/service/ResmiService/updateResource(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject)
io/corbel/resources/rem/resmi/ResmiPutRemTest/updateResourceWithUnderscoreInAttributeNameTest()#org/mockito/Matchers/any()
io/corbel/resources/rem/resmi/ResmiPutRemTest/updateResourceWithUnderscoreInAttributeNameTest()#java/util/Optional/empty()
io/corbel/resources/rem/resmi/ResmiPutRemTest/updateResourceWithUnderscoreInAttributeNameTest()#org/mockito/Mockito/doThrow(java.lang.Throwable)
io/corbel/resources/rem/resmi/ResmiPutRemTest/setup()#io/corbel/resources/rem/resmi/ResmiRemTest/setup()
io/corbel/resources/rem/resmi/ResmiPutRemTest/setup()#io/corbel/resources/rem/resmi/ResmiPutRem/ResmiPutRem(io.corbel.resources.rem.service.ResmiService)
io/corbel/resources/rem/resmi/ResmiPutRemTest/updateResourceTest()#io/corbel/resources/rem/resmi/ResmiPutRemTest/getResourceParametersMockWithCondition(java.util.Optional)
io/corbel/resources/rem/resmi/ResmiPutRemTest/updateResourceTest()#com/google/gson/JsonPrimitive/JsonPrimitive(java.lang.String)
io/corbel/resources/rem/resmi/ResmiPutRemTest/updateResourceTest()#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/rem/resmi/ResmiPutRemTest/updateResourceTest()#com/google/gson/JsonObject/JsonObject()
io/corbel/resources/rem/resmi/ResmiPutRemTest/updateResourceTest()#java/util/Optional/empty()
io/corbel/resources/rem/resmi/ResmiPutRemTest/updateResourceTest()#com/google/gson/JsonObject/add(java.lang.String,com.google.gson.JsonElement)
io/corbel/resources/rem/resmi/ResmiPutRemTest/updateResourceTest()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/resources/rem/resmi/ResmiPutRemTest/updateResourceTest()#io/corbel/resources/rem/Rem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)
io/corbel/resources/rem/resmi/ResmiPutRemTest/updateResourceTest()#java/util/Optional/of(T)
io/corbel/resources/rem/resmi/ResmiPutRemTest/updateResourceTest()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/resources/rem/resmi/ResmiPutRemTest/testInvalidUriPutRelation()#io/corbel/resources/rem/resmi/ResmiRemTest/getParameters(java.lang.String)
io/corbel/resources/rem/resmi/ResmiPutRemTest/testInvalidUriPutRelation()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/resources/rem/resmi/ResmiPutRemTest/testInvalidUriPutRelation()#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/rem/resmi/ResmiPutRemTest/testInvalidUriPutRelation()#java/util/Optional/empty()
io/corbel/resources/rem/resmi/ResmiPutRemTest/testInvalidUriPutRelation()#io/corbel/resources/rem/Rem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)
io/corbel/resources/rem/resmi/ResmiPutRemTest/testInvalidUriPutRelation()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/resources/rem/resmi/ResmiPutRemTest/testNullUriPutRelation()#io/corbel/resources/rem/resmi/ResmiRemTest/getTestResource()
io/corbel/resources/rem/resmi/ResmiPutRemTest/testNullUriPutRelation()#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/rem/resmi/ResmiPutRemTest/testNullUriPutRelation()#io/corbel/resources/rem/resmi/ResmiRemTest/getParametersWithEmptyUri()
io/corbel/resources/rem/resmi/ResmiPutRemTest/testNullUriPutRelation()#io/corbel/resources/rem/Rem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)
io/corbel/resources/rem/resmi/ResmiPutRemTest/testNullUriPutRelation()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/resources/rem/resmi/ResmiPutRemTest/testNullUriPutRelation()#java/util/Optional/of(T)
io/corbel/resources/rem/resmi/ResmiPutRemTest/testNullUriPutRelation()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/resources/rem/resmi/ResmiPutRemTest/updateResourceTestWithCondition()#io/corbel/resources/rem/model/ResourceUri/ResourceUri(java.lang.String,java.lang.String,java.lang.String)
io/corbel/resources/rem/resmi/ResmiPutRemTest/updateResourceTestWithCondition()#com/google/gson/JsonPrimitive/JsonPrimitive(java.lang.String)
io/corbel/resources/rem/resmi/ResmiPutRemTest/updateResourceTestWithCondition()#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/rem/resmi/ResmiPutRemTest/updateResourceTestWithCondition()#io/corbel/resources/rem/service/ResmiService/conditionalUpdateResource(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject,java.util.List)
io/corbel/resources/rem/resmi/ResmiPutRemTest/updateResourceTestWithCondition()#com/google/gson/JsonObject/JsonObject()
io/corbel/resources/rem/resmi/ResmiPutRemTest/updateResourceTestWithCondition()#com/google/gson/JsonObject/add(java.lang.String,com.google.gson.JsonElement)
io/corbel/resources/rem/resmi/ResmiPutRemTest/updateResourceTestWithCondition()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/resources/rem/resmi/ResmiPutRemTest/updateResourceTestWithCondition()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/resmi/ResmiPutRemTest/updateResourceTestWithCondition()#io/corbel/resources/rem/resmi/ResmiPutRemTest/getResourceParametersMockWithCondition(java.util.Optional)
io/corbel/resources/rem/resmi/ResmiPutRemTest/updateResourceTestWithCondition()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/resources/rem/resmi/ResmiPutRemTest/updateResourceTestWithCondition()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/resmi/ResmiPutRemTest/updateResourceTestWithCondition()#io/corbel/resources/rem/Rem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)
io/corbel/resources/rem/resmi/ResmiPutRemTest/updateResourceTestWithCondition()#java/util/Optional/of(T)
io/corbel/resources/rem/resmi/ResmiPutRemTest/updateResourceTestWithCondition()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/oauth/TestUtils/createUserTest(io.corbel.oauth.model.Role)#io/corbel/oauth/model/User/setUsername(java.lang.String)
io/corbel/oauth/TestUtils/createUserTest(io.corbel.oauth.model.Role)#io/corbel/oauth/model/User/setAvatarUri(java.lang.String)
io/corbel/oauth/TestUtils/createUserTest(io.corbel.oauth.model.Role)#io/corbel/oauth/model/User/User()
io/corbel/oauth/TestUtils/createUserTest(io.corbel.oauth.model.Role)#io/corbel/oauth/model/User/setEmail(java.lang.String)
io/corbel/oauth/TestUtils/createUserTest(io.corbel.oauth.model.Role)#io/corbel/oauth/model/User/setDomain(java.lang.String)
io/corbel/oauth/TestUtils/createUserTest(io.corbel.oauth.model.Role)#io/corbel/oauth/model/User/setRole(io.corbel.oauth.model.Role)
io/corbel/oauth/TestUtils/createUserTest(io.corbel.oauth.model.Role)#io/corbel/oauth/model/User/setPassword(java.lang.String)
io/corbel/oauth/TestUtils/createUserTest(io.corbel.oauth.model.Role)#io/corbel/oauth/model/User/setId(java.lang.String)
io/corbel/oauth/TestUtils/getProfileUserTest()#io/corbel/oauth/model/User/setUsername(java.lang.String)
io/corbel/oauth/TestUtils/getProfileUserTest()#io/corbel/oauth/model/User/setAvatarUri(java.lang.String)
io/corbel/oauth/TestUtils/getProfileUserTest()#io/corbel/oauth/model/User/User()
io/corbel/oauth/TestUtils/getProfileUserTest()#io/corbel/oauth/model/User/setEmail(java.lang.String)
io/corbel/oauth/TestUtils/getProfileUserTest()#java/util/LinkedHashMap/LinkedHashMap()
io/corbel/oauth/TestUtils/getProfileUserTest()#io/corbel/oauth/model/User/setProperties(java.util.Map)
io/corbel/resources/rem/acl/AclBaseRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/resources/rem/acl/AclBaseRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)
io/corbel/resources/rem/acl/AclBaseRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#java/util/Optional/empty()
io/corbel/resources/rem/acl/AclBaseRem/collectionWithAcl(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional,java.util.Optional)#io/corbel/lib/ws/api/error/ErrorResponseFactory/getInstance()
io/corbel/resources/rem/acl/AclBaseRem/collectionWithAcl(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional,java.util.Optional)#io/corbel/lib/ws/api/error/ErrorResponseFactory/methodNotAllowed()
io/corbel/resources/rem/acl/AclBaseRem/getExcludedRems(java.util.Optional)#java/util/List/addAll(java.util.Collection)
io/corbel/resources/rem/acl/AclBaseRem/getExcludedRems(java.util.Optional)#java/util/Optional/ifPresent(java.util.function.Consumer)
io/corbel/resources/rem/acl/AclBaseRem/getExcludedRems(java.util.Optional)#com/google/common/collect/Lists/newArrayList(E[])
io/corbel/resources/rem/acl/AclBaseRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#io/corbel/resources/rem/acl/AclBaseRem/resourceWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)
io/corbel/resources/rem/acl/AclBaseRem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional,java.util.Optional)#io/corbel/resources/rem/acl/AclBaseRem/collectionWithAcl(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional,java.util.Optional)
io/corbel/resources/rem/acl/AclBaseRem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional)#java/util/Optional/empty()
io/corbel/resources/rem/acl/AclBaseRem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional)#io/corbel/resources/rem/acl/AclBaseRem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional,java.util.Optional)
io/corbel/resources/rem/acl/AclBaseRem/resourceWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#io/corbel/lib/ws/api/error/ErrorResponseFactory/getInstance()
io/corbel/resources/rem/acl/AclBaseRem/resourceWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#io/corbel/lib/ws/api/error/ErrorResponseFactory/methodNotAllowed()
io/corbel/resources/rem/acl/AclBaseRem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/resources/rem/acl/AclBaseRem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)
io/corbel/resources/rem/acl/AclBaseRem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#java/util/Optional/empty()
io/corbel/resources/rem/acl/AclBaseRem/relationWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#io/corbel/lib/ws/api/error/ErrorResponseFactory/getInstance()
io/corbel/resources/rem/acl/AclBaseRem/relationWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#io/corbel/lib/ws/api/error/ErrorResponseFactory/methodNotAllowed()
io/corbel/resources/rem/acl/AclBaseRem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#io/corbel/resources/rem/acl/AclBaseRem/relationWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)
io/corbel/iam/api/IamErrorResponseFactory/unauthorizedGroupDeletion(java.lang.String)#io/corbel/lib/ws/model/Error/Error(java.lang.String,java.lang.String)
io/corbel/iam/api/IamErrorResponseFactory/unauthorizedGroupDeletion(java.lang.String)#io/corbel/iam/utils/Message/getMessage(java.lang.Object[])
io/corbel/iam/api/IamErrorResponseFactory/unauthorizedGroupDeletion(java.lang.String)#io/corbel/lib/ws/api/error/ErrorResponseFactory/unauthorized(io.corbel.lib.ws.model.Error)
io/corbel/iam/api/IamErrorResponseFactory/noSuchPrincipal(java.lang.String)#io/corbel/lib/ws/model/Error/Error(java.lang.String,java.lang.String)
io/corbel/iam/api/IamErrorResponseFactory/noSuchPrincipal(java.lang.String)#io/corbel/lib/ws/api/error/ErrorResponseFactory/unauthorized(io.corbel.lib.ws.model.Error)
io/corbel/iam/api/IamErrorResponseFactory/identityExists(io.corbel.iam.utils.Message,java.lang.String[])#io/corbel/lib/ws/model/Error/Error(java.lang.String,java.lang.String)
io/corbel/iam/api/IamErrorResponseFactory/identityExists(io.corbel.iam.utils.Message,java.lang.String[])#io/corbel/iam/utils/Message/getMessage(java.lang.Object[])
io/corbel/iam/api/IamErrorResponseFactory/identityExists(io.corbel.iam.utils.Message,java.lang.String[])#io/corbel/lib/ws/api/error/ErrorResponseFactory/conflict(io.corbel.lib.ws.model.Error)
io/corbel/iam/api/IamErrorResponseFactory/getInstance()#io/corbel/iam/api/IamErrorResponseFactory/IamErrorResponseFactory()
io/corbel/iam/api/IamErrorResponseFactory/entityExists(io.corbel.iam.utils.Message,java.lang.String[])#io/corbel/lib/ws/model/Error/Error(java.lang.String,java.lang.String)
io/corbel/iam/api/IamErrorResponseFactory/entityExists(io.corbel.iam.utils.Message,java.lang.String[])#io/corbel/iam/utils/Message/getMessage(java.lang.Object[])
io/corbel/iam/api/IamErrorResponseFactory/entityExists(io.corbel.iam.utils.Message,java.lang.String[])#io/corbel/lib/ws/api/error/ErrorResponseFactory/conflict(io.corbel.lib.ws.model.Error)
io/corbel/iam/api/IamErrorResponseFactory/invalidArgument(java.lang.String)#io/corbel/lib/ws/model/Error/Error(java.lang.String,java.lang.String)
io/corbel/iam/api/IamErrorResponseFactory/invalidArgument(java.lang.String)#io/corbel/lib/ws/api/error/ErrorResponseFactory/badRequest(io.corbel.lib.ws.model.Error)
io/corbel/iam/api/IamErrorResponseFactory/unauthorizedGroupUpdate(java.lang.String)#io/corbel/lib/ws/model/Error/Error(java.lang.String,java.lang.String)
io/corbel/iam/api/IamErrorResponseFactory/unauthorizedGroupUpdate(java.lang.String)#io/corbel/iam/utils/Message/getMessage(java.lang.Object[])
io/corbel/iam/api/IamErrorResponseFactory/unauthorizedGroupUpdate(java.lang.String)#io/corbel/lib/ws/api/error/ErrorResponseFactory/unauthorized(io.corbel.lib.ws.model.Error)
io/corbel/iam/api/IamErrorResponseFactory/invalidOAuthService(java.lang.String)#io/corbel/lib/ws/model/Error/Error(java.lang.String,java.lang.String)
io/corbel/iam/api/IamErrorResponseFactory/invalidOAuthService(java.lang.String)#io/corbel/lib/ws/api/error/ErrorResponseFactory/badRequest(io.corbel.lib.ws.model.Error)
io/corbel/iam/api/IamErrorResponseFactory/invalidOAuthService(java.lang.String)#io/corbel/iam/utils/Message/getMessage(java.lang.Object[])
io/corbel/iam/api/IamErrorResponseFactory/missingAssertion()#io/corbel/lib/ws/api/error/ErrorResponseFactory/badRequest(io.corbel.lib.ws.model.Error)
io/corbel/iam/api/IamErrorResponseFactory/unsupportedVersion(java.lang.String)#io/corbel/lib/ws/api/error/ErrorResponseFactory/forbidden(io.corbel.lib.ws.model.Error)
io/corbel/iam/api/IamErrorResponseFactory/unsupportedVersion(java.lang.String)#io/corbel/lib/ws/model/Error/Error(java.lang.String,java.lang.String)
io/corbel/iam/api/IamErrorResponseFactory/scopesNotExist(java.lang.String)#io/corbel/lib/ws/model/Error/Error(java.lang.String,java.lang.String)
io/corbel/iam/api/IamErrorResponseFactory/scopesNotExist(java.lang.String)#io/corbel/lib/ws/api/error/ErrorResponseFactory/badRequest(io.corbel.lib.ws.model.Error)
io/corbel/iam/api/IamErrorResponseFactory/domainQueryParamNotAllowed()#io/corbel/lib/ws/model/Error/Error(java.lang.String,java.lang.String)
io/corbel/iam/api/IamErrorResponseFactory/domainQueryParamNotAllowed()#io/corbel/lib/ws/api/error/ErrorResponseFactory/badRequest(io.corbel.lib.ws.model.Error)
io/corbel/iam/api/IamErrorResponseFactory/domainQueryParamNotAllowed()#io/corbel/iam/utils/Message/getMessage(java.lang.Object[])
io/corbel/iam/api/IamErrorResponseFactory/missingOauthParms()#io/corbel/lib/ws/api/error/ErrorResponseFactory/badRequest(io.corbel.lib.ws.model.Error)
io/corbel/iam/api/IamErrorResponseFactory/notSupportedGrantType(java.lang.String)#io/corbel/lib/ws/model/Error/Error(java.lang.String,java.lang.String)
io/corbel/iam/api/IamErrorResponseFactory/notSupportedGrantType(java.lang.String)#io/corbel/lib/ws/api/error/ErrorResponseFactory/badRequest(io.corbel.lib.ws.model.Error)
io/corbel/iam/api/IamErrorResponseFactory/notSupportedGrantType(java.lang.String)#io/corbel/iam/utils/Message/getMessage(java.lang.Object[])
io/corbel/iam/api/IamErrorResponseFactory/missingBasicParms()#io/corbel/lib/ws/api/error/ErrorResponseFactory/badRequest(io.corbel.lib.ws.model.Error)
io/corbel/iam/api/IamErrorResponseFactory/groupNotExists(java.lang.String)#io/corbel/lib/ws/model/Error/Error(java.lang.String,java.lang.String)
io/corbel/iam/api/IamErrorResponseFactory/groupNotExists(java.lang.String)#io/corbel/lib/ws/api/error/ErrorResponseFactory/notfound(io.corbel.lib.ws.model.Error)
io/corbel/iam/api/IamErrorResponseFactory/groupNotExists(java.lang.String)#io/corbel/iam/utils/Message/getMessage(java.lang.Object[])
io/corbel/iam/api/IamErrorResponseFactory/scopeIdNotAllowed(java.lang.String)#io/corbel/lib/ws/model/Error/Error(java.lang.String,java.lang.String)
io/corbel/iam/api/IamErrorResponseFactory/scopeIdNotAllowed(java.lang.String)#io/corbel/lib/ws/api/error/ErrorResponseFactory/badRequest(io.corbel.lib.ws.model.Error)
io/corbel/iam/api/IamErrorResponseFactory/scopeIdNotAllowed(java.lang.String)#io/corbel/iam/utils/Message/getMessage(java.lang.Object[])
io/corbel/iam/api/IamErrorResponseFactory/scopesNotAllowed(java.lang.String)#io/corbel/lib/ws/api/error/ErrorResponseFactory/forbidden(io.corbel.lib.ws.model.Error)
io/corbel/iam/api/IamErrorResponseFactory/scopesNotAllowed(java.lang.String)#io/corbel/lib/ws/model/Error/Error(java.lang.String,java.lang.String)
io/corbel/iam/api/IamErrorResponseFactory/scopesNotAllowed(java.lang.String)#io/corbel/iam/utils/Message/getMessage(java.lang.Object[])
io/corbel/iam/api/IamErrorResponseFactory/groupAlreadyExists(java.lang.String)#io/corbel/lib/ws/model/Error/Error(java.lang.String,java.lang.String)
io/corbel/iam/api/IamErrorResponseFactory/groupAlreadyExists(java.lang.String)#io/corbel/iam/utils/Message/getMessage(java.lang.Object[])
io/corbel/iam/api/IamErrorResponseFactory/groupAlreadyExists(java.lang.String)#io/corbel/lib/ws/api/error/ErrorResponseFactory/conflict(io.corbel.lib.ws.model.Error)
io/corbel/iam/api/IamErrorResponseFactory/missingGrantType()#io/corbel/lib/ws/api/error/ErrorResponseFactory/badRequest(io.corbel.lib.ws.model.Error)
io/corbel/iam/api/IamErrorResponseFactory/oauthServiceDuplicated(io.corbel.iam.utils.Message,java.lang.String[])#io/corbel/lib/ws/model/Error/Error(java.lang.String,java.lang.String)
io/corbel/iam/api/IamErrorResponseFactory/oauthServiceDuplicated(io.corbel.iam.utils.Message,java.lang.String[])#io/corbel/iam/utils/Message/getMessage(java.lang.Object[])
io/corbel/iam/api/IamErrorResponseFactory/oauthServiceDuplicated(io.corbel.iam.utils.Message,java.lang.String[])#io/corbel/lib/ws/api/error/ErrorResponseFactory/conflict(io.corbel.lib.ws.model.Error)
io/corbel/iam/api/IamErrorResponseFactory/domainNotExists(java.lang.String)#io/corbel/lib/ws/model/Error/Error(java.lang.String,java.lang.String)
io/corbel/iam/api/IamErrorResponseFactory/domainNotExists(java.lang.String)#io/corbel/lib/ws/api/error/ErrorResponseFactory/badRequest(io.corbel.lib.ws.model.Error)
io/corbel/iam/api/IamErrorResponseFactory/domainNotExists(java.lang.String)#io/corbel/iam/utils/Message/getMessage(java.lang.Object[])
io/corbel/iam/api/UserResourceDevicesTest/testGetUserDevices()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/api/UserResourceDevicesTest/testGetUserDevices()#org/mockito/Mockito/verify(T,org.mockito.verification.VerificationMode)
io/corbel/iam/api/UserResourceDevicesTest/testGetUserDevices()#io/corbel/iam/model/Device/setDomain(java.lang.String)
io/corbel/iam/api/UserResourceDevicesTest/testGetUserDevices()#java/util/Collections/singletonList(T)
io/corbel/iam/api/UserResourceDevicesTest/testGetUserDevices()#io/corbel/iam/model/Device/Device()
io/corbel/iam/api/UserResourceDevicesTest/testGetUserDevices()#io/corbel/iam/api/UserResourceTestBase/createTestUser()
io/corbel/iam/api/UserResourceDevicesTest/testGetUserDevices()#org/mockito/Matchers/any()
io/corbel/iam/api/UserResourceDevicesTest/testGetUserDevices()#org/fest/assertions/api/Assertions/assertThat(java.util.List)
io/corbel/iam/api/UserResourceDevicesTest/testGetUserDevices()#io/corbel/iam/service/DeviceService/getByUserId(java.lang.String,io.corbel.lib.queries.jaxrs.QueryParameters)
io/corbel/iam/api/UserResourceDevicesTest/testGetUserDevices()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/iam/api/UserResourceDevicesTest/testGetUserDevices()#org/mockito/Mockito/when(T)
io/corbel/iam/api/UserResourceDevicesTest/testGetUserDevices()#io/corbel/iam/api/UserResourceTestBase/apiCall(java.lang.String,java.lang.String)
io/corbel/iam/api/UserResourceDevicesTest/testGetUserDevices()#io/corbel/iam/model/Device/setNotificationUri(java.lang.String)
io/corbel/iam/api/UserResourceDevicesTest/testGetUserDevices()#io/corbel/iam/model/Device/setNotificationEnabled(java.lang.Boolean)
io/corbel/iam/api/UserResourceDevicesTest/testGetUserDevices()#io/corbel/iam/model/Device/setName(java.lang.String)
io/corbel/iam/api/UserResourceDevicesTest/testGetUserDevices()#javax/ws/rs/core/Response/readEntity(javax.ws.rs.core.GenericType)
io/corbel/iam/api/UserResourceDevicesTest/testGetUserDevices()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/iam/api/UserResourceDevicesTest/testGetUserDevices()#javax/ws/rs/client/SyncInvoker/get(java.lang.Class)
io/corbel/iam/api/UserResourceDevicesTest/testGetUserDevices()#javax/ws/rs/core/Response/getStatus()
io/corbel/iam/api/UserResourceDevicesTest/testGetUserDevices()#org/mockito/Mockito/only()
io/corbel/iam/api/UserResourceDevicesTest/testGetUserDevices()#io/corbel/iam/model/Device/setType(java.lang.String)
io/corbel/iam/api/UserResourceDevicesTest/testGetUserDevices()#io/corbel/iam/service/UserService/findById(java.lang.String)
io/corbel/iam/api/UserResourceDevicesTest/testGetUserDevices()#org/mockito/Matchers/eq(T)
io/corbel/iam/api/UserResourceDevicesTest/testGetUserDevices()#io/corbel/iam/api/UserResourceDevicesTest/testGetUserDevices()/$anonymous1/()
io/corbel/iam/api/UserResourceDevicesTest/testGetUserDevices()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/iam/api/UserResourceDevicesTest/testPutDeviceWithConnectionDate()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/api/UserResourceDevicesTest/testPutDeviceWithConnectionDate()#org/mockito/Mockito/verify(T,org.mockito.verification.VerificationMode)
io/corbel/iam/api/UserResourceDevicesTest/testPutDeviceWithConnectionDate()#io/corbel/iam/model/Device/setDomain(java.lang.String)
io/corbel/iam/api/UserResourceDevicesTest/testPutDeviceWithConnectionDate()#io/corbel/iam/model/Device/Device()
io/corbel/iam/api/UserResourceDevicesTest/testPutDeviceWithConnectionDate()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/iam/api/UserResourceDevicesTest/testPutDeviceWithConnectionDate()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/iam/api/UserResourceDevicesTest/testPutDeviceWithConnectionDate()#javax/ws/rs/client/Entity/json(T)
io/corbel/iam/api/UserResourceDevicesTest/testPutDeviceWithConnectionDate()#io/corbel/iam/api/UserResourceTestBase/createTestUser()
io/corbel/iam/api/UserResourceDevicesTest/testPutDeviceWithConnectionDate()#io/corbel/iam/service/DeviceService/update(io.corbel.iam.model.Device,boolean)
io/corbel/iam/api/UserResourceDevicesTest/testPutDeviceWithConnectionDate()#javax/ws/rs/core/Response/getHeaderString(java.lang.String)
io/corbel/iam/api/UserResourceDevicesTest/testPutDeviceWithConnectionDate()#io/corbel/lib/ws/auth/AuthorizationInfo/getDeviceId()
io/corbel/iam/api/UserResourceDevicesTest/testPutDeviceWithConnectionDate()#io/corbel/iam/service/UserService/findById(java.lang.String)
io/corbel/iam/api/UserResourceDevicesTest/testPutDeviceWithConnectionDate()#org/mockito/Mockito/when(T)
io/corbel/iam/api/UserResourceDevicesTest/testPutDeviceWithConnectionDate()#io/corbel/iam/api/UserResourceTestBase/apiCall(java.lang.String,java.lang.String)
io/corbel/iam/api/UserResourceDevicesTest/testPutDeviceWithConnectionDate()#io/corbel/iam/model/Device/setNotificationUri(java.lang.String)
io/corbel/iam/api/UserResourceDevicesTest/testPutDeviceWithConnectionDate()#io/corbel/iam/model/Device/setNotificationEnabled(java.lang.Boolean)
io/corbel/iam/api/UserResourceDevicesTest/testPutDeviceWithConnectionDate()#io/corbel/iam/model/Device/setName(java.lang.String)
io/corbel/iam/api/UserResourceDevicesTest/testPutDeviceWithConnectionDate()#javax/ws/rs/client/SyncInvoker/put(javax.ws.rs.client.Entity,java.lang.Class)
io/corbel/iam/api/UserResourceDevicesTest/testPutDeviceWithConnectionDate()#javax/ws/rs/core/Response/getStatus()
io/corbel/iam/api/UserResourceDevicesTest/testPutDeviceWithConnectionDate()#org/mockito/Mockito/only()
io/corbel/iam/api/UserResourceDevicesTest/testPutDeviceWithConnectionDate()#io/corbel/iam/model/Device/setUid(java.lang.String)
io/corbel/iam/api/UserResourceDevicesTest/testPutDeviceWithConnectionDate()#io/corbel/iam/model/Device/setType(java.lang.String)
io/corbel/iam/api/UserResourceDevicesTest/testPutDeviceWithConnectionDate()#org/fest/assertions/api/StringAssert/contains(java.lang.String)
io/corbel/iam/api/UserResourceDevicesTest/testPutDeviceWithConnectionDate()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/iam/api/UserResourceDevicesTest/testPutDeviceNotUserExist()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/api/UserResourceDevicesTest/testPutDeviceNotUserExist()#io/corbel/iam/model/Device/setDomain(java.lang.String)
io/corbel/iam/api/UserResourceDevicesTest/testPutDeviceNotUserExist()#org/mockito/Mockito/verifyNoMoreInteractions(java.lang.Object[])
io/corbel/iam/api/UserResourceDevicesTest/testPutDeviceNotUserExist()#io/corbel/iam/model/Device/Device()
io/corbel/iam/api/UserResourceDevicesTest/testPutDeviceNotUserExist()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/iam/api/UserResourceDevicesTest/testPutDeviceNotUserExist()#javax/ws/rs/client/Entity/json(T)
io/corbel/iam/api/UserResourceDevicesTest/testPutDeviceNotUserExist()#io/corbel/iam/service/UserService/findById(java.lang.String)
io/corbel/iam/api/UserResourceDevicesTest/testPutDeviceNotUserExist()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/iam/api/UserResourceDevicesTest/testPutDeviceNotUserExist()#org/mockito/Mockito/when(T)
io/corbel/iam/api/UserResourceDevicesTest/testPutDeviceNotUserExist()#io/corbel/iam/api/UserResourceTestBase/apiCall(java.lang.String,java.lang.String)
io/corbel/iam/api/UserResourceDevicesTest/testPutDeviceNotUserExist()#io/corbel/iam/model/Device/setNotificationUri(java.lang.String)
io/corbel/iam/api/UserResourceDevicesTest/testPutDeviceNotUserExist()#io/corbel/iam/model/Device/setNotificationEnabled(java.lang.Boolean)
io/corbel/iam/api/UserResourceDevicesTest/testPutDeviceNotUserExist()#io/corbel/iam/model/Device/setName(java.lang.String)
io/corbel/iam/api/UserResourceDevicesTest/testPutDeviceNotUserExist()#javax/ws/rs/client/SyncInvoker/put(javax.ws.rs.client.Entity,java.lang.Class)
io/corbel/iam/api/UserResourceDevicesTest/testPutDeviceNotUserExist()#javax/ws/rs/core/Response/getStatus()
io/corbel/iam/api/UserResourceDevicesTest/testPutDeviceNotUserExist()#io/corbel/iam/model/Device/setUid(java.lang.String)
io/corbel/iam/api/UserResourceDevicesTest/testPutDeviceNotUserExist()#io/corbel/iam/model/Device/setType(java.lang.String)
io/corbel/iam/api/UserResourceDevicesTest/testGetUserDevicesNotFound()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/api/UserResourceDevicesTest/testGetUserDevicesNotFound()#org/mockito/Mockito/verifyNoMoreInteractions(java.lang.Object[])
io/corbel/iam/api/UserResourceDevicesTest/testGetUserDevicesNotFound()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/iam/api/UserResourceDevicesTest/testGetUserDevicesNotFound()#io/corbel/iam/service/UserService/findById(java.lang.String)
io/corbel/iam/api/UserResourceDevicesTest/testGetUserDevicesNotFound()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/iam/api/UserResourceDevicesTest/testGetUserDevicesNotFound()#org/mockito/Mockito/when(T)
io/corbel/iam/api/UserResourceDevicesTest/testGetUserDevicesNotFound()#io/corbel/iam/api/UserResourceTestBase/apiCall(java.lang.String,java.lang.String)
io/corbel/iam/api/UserResourceDevicesTest/testGetUserDevicesNotFound()#javax/ws/rs/client/SyncInvoker/get(java.lang.Class)
io/corbel/iam/api/UserResourceDevicesTest/testGetUserDevicesNotFound()#javax/ws/rs/core/Response/getStatus()
io/corbel/iam/api/UserResourceDevicesTest/testPutDeviceAdminInOtherDomain()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/api/UserResourceDevicesTest/testPutDeviceAdminInOtherDomain()#io/corbel/iam/model/Device/setDomain(java.lang.String)
io/corbel/iam/api/UserResourceDevicesTest/testPutDeviceAdminInOtherDomain()#io/corbel/lib/ws/auth/AuthorizationInfo/getDomainId()
io/corbel/iam/api/UserResourceDevicesTest/testPutDeviceAdminInOtherDomain()#org/mockito/Mockito/verifyNoMoreInteractions(java.lang.Object[])
io/corbel/iam/api/UserResourceDevicesTest/testPutDeviceAdminInOtherDomain()#io/corbel/iam/model/Device/Device()
io/corbel/iam/api/UserResourceDevicesTest/testPutDeviceAdminInOtherDomain()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/iam/api/UserResourceDevicesTest/testPutDeviceAdminInOtherDomain()#javax/ws/rs/client/Entity/json(T)
io/corbel/iam/api/UserResourceDevicesTest/testPutDeviceAdminInOtherDomain()#io/corbel/iam/api/UserResourceTestBase/createTestUser()
io/corbel/iam/api/UserResourceDevicesTest/testPutDeviceAdminInOtherDomain()#io/corbel/iam/service/UserService/findById(java.lang.String)
io/corbel/iam/api/UserResourceDevicesTest/testPutDeviceAdminInOtherDomain()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/iam/api/UserResourceDevicesTest/testPutDeviceAdminInOtherDomain()#org/mockito/Mockito/when(T)
io/corbel/iam/api/UserResourceDevicesTest/testPutDeviceAdminInOtherDomain()#io/corbel/iam/api/UserResourceTestBase/apiCall(java.lang.String,java.lang.String)
io/corbel/iam/api/UserResourceDevicesTest/testPutDeviceAdminInOtherDomain()#io/corbel/iam/model/Device/setNotificationUri(java.lang.String)
io/corbel/iam/api/UserResourceDevicesTest/testPutDeviceAdminInOtherDomain()#io/corbel/iam/model/Device/setNotificationEnabled(java.lang.Boolean)
io/corbel/iam/api/UserResourceDevicesTest/testPutDeviceAdminInOtherDomain()#io/corbel/iam/model/Device/setName(java.lang.String)
io/corbel/iam/api/UserResourceDevicesTest/testPutDeviceAdminInOtherDomain()#javax/ws/rs/client/SyncInvoker/put(javax.ws.rs.client.Entity,java.lang.Class)
io/corbel/iam/api/UserResourceDevicesTest/testPutDeviceAdminInOtherDomain()#javax/ws/rs/core/Response/getStatus()
io/corbel/iam/api/UserResourceDevicesTest/testPutDeviceAdminInOtherDomain()#io/corbel/iam/model/Device/setUid(java.lang.String)
io/corbel/iam/api/UserResourceDevicesTest/testPutDeviceAdminInOtherDomain()#io/corbel/iam/model/Device/setType(java.lang.String)
io/corbel/iam/api/UserResourceDevicesTest/testPutDevice()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/api/UserResourceDevicesTest/testPutDevice()#org/mockito/Mockito/verify(T,org.mockito.verification.VerificationMode)
io/corbel/iam/api/UserResourceDevicesTest/testPutDevice()#io/corbel/iam/model/Device/setDomain(java.lang.String)
io/corbel/iam/api/UserResourceDevicesTest/testPutDevice()#io/corbel/iam/model/Device/Device()
io/corbel/iam/api/UserResourceDevicesTest/testPutDevice()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/iam/api/UserResourceDevicesTest/testPutDevice()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/iam/api/UserResourceDevicesTest/testPutDevice()#javax/ws/rs/client/Entity/json(T)
io/corbel/iam/api/UserResourceDevicesTest/testPutDevice()#io/corbel/iam/api/UserResourceTestBase/createTestUser()
io/corbel/iam/api/UserResourceDevicesTest/testPutDevice()#io/corbel/iam/service/DeviceService/update(io.corbel.iam.model.Device,boolean)
io/corbel/iam/api/UserResourceDevicesTest/testPutDevice()#javax/ws/rs/core/Response/getHeaderString(java.lang.String)
io/corbel/iam/api/UserResourceDevicesTest/testPutDevice()#io/corbel/iam/service/UserService/findById(java.lang.String)
io/corbel/iam/api/UserResourceDevicesTest/testPutDevice()#org/mockito/Mockito/when(T)
io/corbel/iam/api/UserResourceDevicesTest/testPutDevice()#io/corbel/iam/api/UserResourceTestBase/apiCall(java.lang.String,java.lang.String)
io/corbel/iam/api/UserResourceDevicesTest/testPutDevice()#io/corbel/iam/model/Device/setNotificationUri(java.lang.String)
io/corbel/iam/api/UserResourceDevicesTest/testPutDevice()#io/corbel/iam/model/Device/setNotificationEnabled(java.lang.Boolean)
io/corbel/iam/api/UserResourceDevicesTest/testPutDevice()#io/corbel/iam/model/Device/setName(java.lang.String)
io/corbel/iam/api/UserResourceDevicesTest/testPutDevice()#javax/ws/rs/client/SyncInvoker/put(javax.ws.rs.client.Entity,java.lang.Class)
io/corbel/iam/api/UserResourceDevicesTest/testPutDevice()#javax/ws/rs/core/Response/getStatus()
io/corbel/iam/api/UserResourceDevicesTest/testPutDevice()#org/mockito/Mockito/only()
io/corbel/iam/api/UserResourceDevicesTest/testPutDevice()#io/corbel/iam/model/Device/setUid(java.lang.String)
io/corbel/iam/api/UserResourceDevicesTest/testPutDevice()#io/corbel/iam/model/Device/setType(java.lang.String)
io/corbel/iam/api/UserResourceDevicesTest/testPutDevice()#org/fest/assertions/api/StringAssert/contains(java.lang.String)
io/corbel/iam/api/UserResourceDevicesTest/testPutDevice()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/iam/api/UserResourceDevicesTest/testGetDevice()#org/mockito/Mockito/verify(T,org.mockito.verification.VerificationMode)
io/corbel/iam/api/UserResourceDevicesTest/testGetDevice()#io/corbel/iam/model/Device/setDomain(java.lang.String)
io/corbel/iam/api/UserResourceDevicesTest/testGetDevice()#io/corbel/iam/model/DeviceResponse/getName()
io/corbel/iam/api/UserResourceDevicesTest/testGetDevice()#io/corbel/iam/service/DeviceService/getByUidAndUserId(java.lang.String,java.lang.String,java.lang.String)
io/corbel/iam/api/UserResourceDevicesTest/testGetDevice()#org/fest/assertions/api/BooleanAssert/isEqualTo(boolean)
io/corbel/iam/api/UserResourceDevicesTest/testGetDevice()#io/corbel/iam/model/Device/Device()
io/corbel/iam/api/UserResourceDevicesTest/testGetDevice()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/iam/api/UserResourceDevicesTest/testGetDevice()#io/corbel/iam/model/DeviceResponse/isNotificationEnabled()
io/corbel/iam/api/UserResourceDevicesTest/testGetDevice()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/iam/api/UserResourceDevicesTest/testGetDevice()#io/corbel/iam/api/UserResourceTestBase/createTestUser()
io/corbel/iam/api/UserResourceDevicesTest/testGetDevice()#org/fest/assertions/api/Assertions/assertThat(java.lang.Boolean)
io/corbel/iam/api/UserResourceDevicesTest/testGetDevice()#javax/ws/rs/core/Response/readEntity(java.lang.Class)
io/corbel/iam/api/UserResourceDevicesTest/testGetDevice()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/iam/api/UserResourceDevicesTest/testGetDevice()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/iam/api/UserResourceDevicesTest/testGetDevice()#io/corbel/iam/model/Entity/getId()
io/corbel/iam/api/UserResourceDevicesTest/testGetDevice()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/api/UserResourceDevicesTest/testGetDevice()#org/mockito/Mockito/when(T)
io/corbel/iam/api/UserResourceDevicesTest/testGetDevice()#io/corbel/iam/api/UserResourceTestBase/apiCall(java.lang.String,java.lang.String)
io/corbel/iam/api/UserResourceDevicesTest/testGetDevice()#io/corbel/iam/model/Device/setNotificationUri(java.lang.String)
io/corbel/iam/api/UserResourceDevicesTest/testGetDevice()#io/corbel/iam/model/Device/setNotificationEnabled(java.lang.Boolean)
io/corbel/iam/api/UserResourceDevicesTest/testGetDevice()#io/corbel/iam/model/Device/setName(java.lang.String)
io/corbel/iam/api/UserResourceDevicesTest/testGetDevice()#javax/ws/rs/client/SyncInvoker/get(java.lang.Class)
io/corbel/iam/api/UserResourceDevicesTest/testGetDevice()#javax/ws/rs/core/Response/getStatus()
io/corbel/iam/api/UserResourceDevicesTest/testGetDevice()#org/mockito/Mockito/only()
io/corbel/iam/api/UserResourceDevicesTest/testGetDevice()#io/corbel/iam/model/Device/setUid(java.lang.String)
io/corbel/iam/api/UserResourceDevicesTest/testGetDevice()#io/corbel/iam/model/Device/setType(java.lang.String)
io/corbel/iam/api/UserResourceDevicesTest/testGetDevice()#io/corbel/iam/model/DeviceResponse/getNotificationUri()
io/corbel/iam/api/UserResourceDevicesTest/testGetDevice()#io/corbel/iam/service/UserService/findById(java.lang.String)
io/corbel/iam/api/UserResourceDevicesTest/testDeleteDeviceInOtherDomain()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/api/UserResourceDevicesTest/testDeleteDeviceInOtherDomain()#io/corbel/lib/ws/auth/AuthorizationInfo/getDomainId()
io/corbel/iam/api/UserResourceDevicesTest/testDeleteDeviceInOtherDomain()#org/mockito/Mockito/verifyNoMoreInteractions(java.lang.Object[])
io/corbel/iam/api/UserResourceDevicesTest/testDeleteDeviceInOtherDomain()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/iam/api/UserResourceDevicesTest/testDeleteDeviceInOtherDomain()#javax/ws/rs/core/Response/getStatus()
io/corbel/iam/api/UserResourceDevicesTest/testDeleteDeviceInOtherDomain()#io/corbel/iam/api/UserResourceTestBase/createTestUser()
io/corbel/iam/api/UserResourceDevicesTest/testDeleteDeviceInOtherDomain()#javax/ws/rs/client/SyncInvoker/delete(java.lang.Class)
io/corbel/iam/api/UserResourceDevicesTest/testDeleteDeviceInOtherDomain()#io/corbel/iam/service/UserService/findById(java.lang.String)
io/corbel/iam/api/UserResourceDevicesTest/testDeleteDeviceInOtherDomain()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/iam/api/UserResourceDevicesTest/testDeleteDeviceInOtherDomain()#org/mockito/Mockito/when(T)
io/corbel/iam/api/UserResourceDevicesTest/testDeleteDeviceInOtherDomain()#io/corbel/iam/api/UserResourceTestBase/apiCall(java.lang.String,java.lang.String)
io/corbel/iam/api/UserResourceDevicesTest/setUp()#javax/servlet/http/HttpServletRequest/getHeader(java.lang.String)
io/corbel/iam/api/UserResourceDevicesTest/setUp()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/api/UserResourceDevicesTest/setUp()#io/corbel/lib/ws/auth/AuthorizationRequestFilter/checkTokenAccessRules(io.corbel.lib.ws.auth.AuthorizationInfo,javax.ws.rs.container.ContainerRequestContext,java.lang.String)
io/corbel/iam/api/UserResourceDevicesTest/setUp()#io/corbel/lib/ws/auth/AuthorizationInfo/getDomainId()
io/corbel/iam/api/UserResourceDevicesTest/setUp()#org/mockito/stubbing/Stubber/when(T)
io/corbel/iam/api/UserResourceDevicesTest/setUp()#com/google/common/base/Optional/of(T)
io/corbel/iam/api/UserResourceDevicesTest/setUp()#io/corbel/lib/ws/auth/AuthorizationRequestFilter/getRequest()
io/corbel/iam/api/UserResourceDevicesTest/setUp()#org/mockito/Mockito/doReturn(java.lang.Object)
io/corbel/iam/api/UserResourceDevicesTest/setUp()#org/mockito/Matchers/any()
io/corbel/iam/api/UserResourceDevicesTest/setUp()#org/mockito/Mockito/reset(T[])
io/corbel/iam/api/UserResourceDevicesTest/setUp()#io/dropwizard/auth/Authenticator/authenticate(C)
io/corbel/iam/api/UserResourceDevicesTest/setUp()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/iam/api/UserResourceDevicesTest/setUp()#org/mockito/Mockito/when(T)
io/corbel/iam/api/UserResourceDevicesTest/setUp()#org/mockito/Mockito/doNothing()
io/corbel/iam/api/UserResourceDevicesTest/setUp()#io/corbel/lib/ws/auth/AuthorizationInfo/getClientId()
io/corbel/iam/api/UserResourceDevicesTest/setUp()#java/util/Optional/ofNullable(T)
io/corbel/iam/api/UserResourceDevicesTest/setUp()#io/corbel/lib/ws/auth/AuthorizationInfo/getUserId()
io/corbel/iam/api/UserResourceDevicesTest/setUp()#org/mockito/Matchers/eq(T)
io/corbel/iam/api/UserResourceDevicesTest/setUp()#io/corbel/iam/service/DomainService/getDomain(java.lang.String)
io/corbel/iam/api/UserResourceDevicesTest/testDeleteDeviceUserNotFound()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/api/UserResourceDevicesTest/testDeleteDeviceUserNotFound()#org/mockito/Mockito/verifyNoMoreInteractions(java.lang.Object[])
io/corbel/iam/api/UserResourceDevicesTest/testDeleteDeviceUserNotFound()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/iam/api/UserResourceDevicesTest/testDeleteDeviceUserNotFound()#javax/ws/rs/core/Response/getStatus()
io/corbel/iam/api/UserResourceDevicesTest/testDeleteDeviceUserNotFound()#javax/ws/rs/client/SyncInvoker/delete(java.lang.Class)
io/corbel/iam/api/UserResourceDevicesTest/testDeleteDeviceUserNotFound()#io/corbel/iam/service/UserService/findById(java.lang.String)
io/corbel/iam/api/UserResourceDevicesTest/testDeleteDeviceUserNotFound()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/iam/api/UserResourceDevicesTest/testDeleteDeviceUserNotFound()#org/mockito/Mockito/when(T)
io/corbel/iam/api/UserResourceDevicesTest/testDeleteDeviceUserNotFound()#io/corbel/iam/api/UserResourceTestBase/apiCall(java.lang.String,java.lang.String)
io/corbel/iam/api/UserResourceDevicesTest/testGetUserDevicesInOtherDomain()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/api/UserResourceDevicesTest/testGetUserDevicesInOtherDomain()#io/corbel/lib/ws/auth/AuthorizationInfo/getDomainId()
io/corbel/iam/api/UserResourceDevicesTest/testGetUserDevicesInOtherDomain()#org/mockito/Mockito/verifyNoMoreInteractions(java.lang.Object[])
io/corbel/iam/api/UserResourceDevicesTest/testGetUserDevicesInOtherDomain()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/iam/api/UserResourceDevicesTest/testGetUserDevicesInOtherDomain()#io/corbel/iam/api/UserResourceTestBase/createTestUser()
io/corbel/iam/api/UserResourceDevicesTest/testGetUserDevicesInOtherDomain()#io/corbel/iam/service/UserService/findById(java.lang.String)
io/corbel/iam/api/UserResourceDevicesTest/testGetUserDevicesInOtherDomain()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/iam/api/UserResourceDevicesTest/testGetUserDevicesInOtherDomain()#org/mockito/Mockito/when(T)
io/corbel/iam/api/UserResourceDevicesTest/testGetUserDevicesInOtherDomain()#io/corbel/iam/api/UserResourceTestBase/apiCall(java.lang.String,java.lang.String)
io/corbel/iam/api/UserResourceDevicesTest/testGetUserDevicesInOtherDomain()#javax/ws/rs/client/SyncInvoker/get(java.lang.Class)
io/corbel/iam/api/UserResourceDevicesTest/testGetUserDevicesInOtherDomain()#javax/ws/rs/core/Response/getStatus()
io/corbel/iam/api/UserResourceDevicesTest/testDeleteDevice()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/api/UserResourceDevicesTest/testDeleteDevice()#org/mockito/Mockito/verify(T,org.mockito.verification.VerificationMode)
io/corbel/iam/api/UserResourceDevicesTest/testDeleteDevice()#io/corbel/iam/service/DeviceService/deleteByUidAndUserId(java.lang.String,java.lang.String,java.lang.String)
io/corbel/iam/api/UserResourceDevicesTest/testDeleteDevice()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/iam/api/UserResourceDevicesTest/testDeleteDevice()#javax/ws/rs/core/Response/getStatus()
io/corbel/iam/api/UserResourceDevicesTest/testDeleteDevice()#io/corbel/iam/api/UserResourceTestBase/createTestUser()
io/corbel/iam/api/UserResourceDevicesTest/testDeleteDevice()#io/corbel/iam/service/UserService/findById(java.lang.String)
io/corbel/iam/api/UserResourceDevicesTest/testDeleteDevice()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/iam/api/UserResourceDevicesTest/testDeleteDevice()#org/mockito/Mockito/when(T)
io/corbel/iam/api/UserResourceDevicesTest/testDeleteDevice()#io/corbel/iam/api/UserResourceTestBase/apiCall(java.lang.String,java.lang.String)
io/corbel/iam/api/UserResourceDevicesTest/testDeleteDevice()#org/mockito/Mockito/only()
io/corbel/iam/api/UserResourceDevicesTest/testDeleteDevice()#javax/ws/rs/client/SyncInvoker/delete(java.lang.Class)
io/corbel/iam/api/UserResourceDevicesTest/testGetDeviceNotFound()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/api/UserResourceDevicesTest/testGetDeviceNotFound()#org/mockito/Mockito/verifyNoMoreInteractions(java.lang.Object[])
io/corbel/iam/api/UserResourceDevicesTest/testGetDeviceNotFound()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/iam/api/UserResourceDevicesTest/testGetDeviceNotFound()#io/corbel/iam/service/UserService/findById(java.lang.String)
io/corbel/iam/api/UserResourceDevicesTest/testGetDeviceNotFound()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/iam/api/UserResourceDevicesTest/testGetDeviceNotFound()#org/mockito/Mockito/when(T)
io/corbel/iam/api/UserResourceDevicesTest/testGetDeviceNotFound()#io/corbel/iam/api/UserResourceTestBase/apiCall(java.lang.String,java.lang.String)
io/corbel/iam/api/UserResourceDevicesTest/testGetDeviceNotFound()#javax/ws/rs/client/SyncInvoker/get(java.lang.Class)
io/corbel/iam/api/UserResourceDevicesTest/testGetDeviceNotFound()#javax/ws/rs/core/Response/getStatus()
io/corbel/iam/api/UserResourceDevicesTest/testGetDeviceInOtherDomain()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/api/UserResourceDevicesTest/testGetDeviceInOtherDomain()#io/corbel/iam/model/Device/setDomain(java.lang.String)
io/corbel/iam/api/UserResourceDevicesTest/testGetDeviceInOtherDomain()#io/corbel/lib/ws/auth/AuthorizationInfo/getDomainId()
io/corbel/iam/api/UserResourceDevicesTest/testGetDeviceInOtherDomain()#io/corbel/iam/model/Device/Device()
io/corbel/iam/api/UserResourceDevicesTest/testGetDeviceInOtherDomain()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/iam/api/UserResourceDevicesTest/testGetDeviceInOtherDomain()#io/corbel/iam/api/UserResourceTestBase/createTestUser()
io/corbel/iam/api/UserResourceDevicesTest/testGetDeviceInOtherDomain()#io/corbel/iam/model/Device/setType(java.lang.String)
io/corbel/iam/api/UserResourceDevicesTest/testGetDeviceInOtherDomain()#io/corbel/iam/service/UserService/findById(java.lang.String)
io/corbel/iam/api/UserResourceDevicesTest/testGetDeviceInOtherDomain()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/iam/api/UserResourceDevicesTest/testGetDeviceInOtherDomain()#org/mockito/Mockito/when(T)
io/corbel/iam/api/UserResourceDevicesTest/testGetDeviceInOtherDomain()#io/corbel/iam/api/UserResourceTestBase/apiCall(java.lang.String,java.lang.String)
io/corbel/iam/api/UserResourceDevicesTest/testGetDeviceInOtherDomain()#io/corbel/iam/service/DeviceService/getByUidAndUserId(java.lang.String,java.lang.String,java.lang.String)
io/corbel/iam/api/UserResourceDevicesTest/testGetDeviceInOtherDomain()#org/mockito/Mockito/verifyNoMoreInteractions(java.lang.Object[])
io/corbel/iam/api/UserResourceDevicesTest/testGetDeviceInOtherDomain()#io/corbel/iam/model/Device/setNotificationUri(java.lang.String)
io/corbel/iam/api/UserResourceDevicesTest/testGetDeviceInOtherDomain()#io/corbel/iam/model/Device/setNotificationEnabled(java.lang.Boolean)
io/corbel/iam/api/UserResourceDevicesTest/testGetDeviceInOtherDomain()#io/corbel/iam/model/Device/setName(java.lang.String)
io/corbel/iam/api/UserResourceDevicesTest/testGetDeviceInOtherDomain()#javax/ws/rs/client/SyncInvoker/get(java.lang.Class)
io/corbel/iam/api/UserResourceDevicesTest/testGetDeviceInOtherDomain()#javax/ws/rs/core/Response/getStatus()
io/corbel/oauth/api/UsernameResourceTest/testExistUser()#io/corbel/oauth/service/UserService/existsByUsernameAndDomain(java.lang.String,java.lang.String)
io/corbel/oauth/api/UsernameResourceTest/testExistUser()#org/mockito/Mockito/when(T)
io/corbel/oauth/api/UsernameResourceTest/testExistUser()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/oauth/api/UsernameResourceTest/testExistUser()#javax/ws/rs/client/WebTarget/request()
io/corbel/oauth/api/UsernameResourceTest/testExistUser()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/oauth/api/UsernameResourceTest/testExistUser()#javax/ws/rs/core/Response/getStatus()
io/corbel/oauth/api/UsernameResourceTest/testExistUser()#io/corbel/oauth/api/UserResourceTestBase/createTestUser()
io/corbel/oauth/api/UsernameResourceTest/testExistUser()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/oauth/api/UsernameResourceTest/testExistUser()#javax/ws/rs/client/SyncInvoker/head()
io/corbel/oauth/api/UsernameResourceTest/testExistUser()#io/corbel/oauth/service/UserService/getUser(java.lang.String)
io/corbel/oauth/api/UsernameResourceTest/testExistUser()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/oauth/api/UsernameResourceTest/testExistUser()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/oauth/api/UsernameResourceTest/testExistUser()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/oauth/api/UsernameResourceTest/testGetUserIdByUsernameOK()#io/corbel/oauth/model/User/getId()
io/corbel/oauth/api/UsernameResourceTest/testGetUserIdByUsernameOK()#org/mockito/Mockito/when(T)
io/corbel/oauth/api/UsernameResourceTest/testGetUserIdByUsernameOK()#org/mockito/Mockito/times(int)
io/corbel/oauth/api/UsernameResourceTest/testGetUserIdByUsernameOK()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/oauth/api/UsernameResourceTest/testGetUserIdByUsernameOK()#javax/ws/rs/client/WebTarget/request()
io/corbel/oauth/api/UsernameResourceTest/testGetUserIdByUsernameOK()#javax/ws/rs/client/SyncInvoker/get(java.lang.Class)
io/corbel/oauth/api/UsernameResourceTest/testGetUserIdByUsernameOK()#io/corbel/oauth/api/UserResourceTestBase/createTestUser()
io/corbel/oauth/api/UsernameResourceTest/testGetUserIdByUsernameOK()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/oauth/api/UsernameResourceTest/testGetUserIdByUsernameOK()#org/junit/Assert/assertEquals(java.lang.Object,java.lang.Object)
io/corbel/oauth/api/UsernameResourceTest/testGetUserIdByUsernameOK()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/oauth/api/UsernameResourceTest/testGetUserIdByUsernameOK()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/oauth/api/UsernameResourceTest/testGetUserIdByUsernameOK()#org/mockito/Mockito/verify(T,org.mockito.verification.VerificationMode)
io/corbel/oauth/api/UsernameResourceTest/testGetUserIdByUsernameOK()#io/corbel/oauth/service/UserService/findByUserNameAndDomain(java.lang.String,java.lang.String)
io/corbel/oauth/api/UsernameResourceTest/testNotExistUser()#io/corbel/oauth/service/UserService/existsByUsernameAndDomain(java.lang.String,java.lang.String)
io/corbel/oauth/api/UsernameResourceTest/testNotExistUser()#org/mockito/Mockito/when(T)
io/corbel/oauth/api/UsernameResourceTest/testNotExistUser()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/oauth/api/UsernameResourceTest/testNotExistUser()#javax/ws/rs/client/WebTarget/request()
io/corbel/oauth/api/UsernameResourceTest/testNotExistUser()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/oauth/api/UsernameResourceTest/testNotExistUser()#javax/ws/rs/core/Response/getStatus()
io/corbel/oauth/api/UsernameResourceTest/testNotExistUser()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/oauth/api/UsernameResourceTest/testNotExistUser()#javax/ws/rs/client/SyncInvoker/head()
io/corbel/oauth/api/UsernameResourceTest/testNotExistUser()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/oauth/api/UsernameResourceTest/testNotExistUser()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/oauth/api/UsernameResourceTest/testNotExistUser()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/oauth/api/UsernameResourceTest/testGetUserIdByUsernameKO()#io/corbel/oauth/service/UserService/findByUserNameAndDomain(java.lang.String,java.lang.String)
io/corbel/oauth/api/UsernameResourceTest/testGetUserIdByUsernameKO()#org/joda/time/Instant/now()
io/corbel/oauth/api/UsernameResourceTest/testGetUserIdByUsernameKO()#org/mockito/Mockito/when(T)
io/corbel/oauth/api/UsernameResourceTest/testGetUserIdByUsernameKO()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/oauth/api/UsernameResourceTest/testGetUserIdByUsernameKO()#javax/ws/rs/client/WebTarget/request()
io/corbel/oauth/api/UsernameResourceTest/testGetUserIdByUsernameKO()#javax/ws/rs/core/Response/getStatus()
io/corbel/oauth/api/UsernameResourceTest/testGetUserIdByUsernameKO()#org/joda/time/base/AbstractInstant/toString()
io/corbel/oauth/api/UsernameResourceTest/testGetUserIdByUsernameKO()#io/corbel/oauth/api/UserResourceTestBase/createTestUser()
io/corbel/oauth/api/UsernameResourceTest/testGetUserIdByUsernameKO()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/oauth/api/UsernameResourceTest/testGetUserIdByUsernameKO()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/oauth/api/UsernameResourceTest/testGetUserIdByUsernameKO()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/oauth/api/UsernameResourceTest/testGetUserIdByUsernameKO()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/oauth/api/UsernameResourceTest/testGetUserIdByUsernameKO()#javax/ws/rs/client/SyncInvoker/get()
io/corbel/oauth/api/UsernameResourceTest/testGetUserIdByUsernameKO()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/iam/ioc/IamProviderIoc/getTwitterProvider(io.corbel.iam.repository.IdentityRepository)#io/corbel/iam/auth/provider/TwitterProvider/TwitterProvider(io.corbel.iam.repository.IdentityRepository)
io/corbel/iam/ioc/IamProviderIoc/getGoogleProvider(io.corbel.iam.repository.IdentityRepository)#io/corbel/iam/auth/provider/GoogleProvider/GoogleProvider(io.corbel.iam.repository.IdentityRepository)
io/corbel/iam/ioc/IamProviderIoc/getFacebookProvider(io.corbel.iam.repository.IdentityRepository)#io/corbel/iam/auth/provider/FacebookProvider/FacebookProvider(io.corbel.iam.repository.IdentityRepository)
io/corbel/iam/ioc/IamProviderIoc/getCorbelProvider(io.corbel.iam.repository.IdentityRepository)#io/corbel/iam/auth/provider/OAuthServerProvider/OAuthServerProvider(io.corbel.iam.repository.IdentityRepository)
io/corbel/iam/model/TokenGrant/hashCode()#java/util/Objects/hash(java.lang.Object[])
io/corbel/iam/model/TokenGrant/equals(java.lang.Object)#java/util/Objects/equals(java.lang.Object,java.lang.Object)
io/corbel/resources/rem/ImagePutRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#javax/ws/rs/core/Response/noContent()
io/corbel/resources/rem/ImagePutRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#javax/ws/rs/core/Response/ResponseBuilder/build()
io/corbel/resources/rem/ImagePutRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#org/slf4j/Logger/warn(java.lang.String)
io/corbel/resources/rem/ImagePutRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/resources/rem/service/ImageCacheService/removeFromCache(io.corbel.resources.rem.Rem,io.corbel.resources.rem.request.RequestParameters,io.corbel.resources.rem.request.ResourceId,java.lang.String)
io/corbel/resources/rem/ImagePutRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/resources/rem/Rem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)
io/corbel/resources/rem/ImagePutRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/resources/rem/service/RemService/getRem(java.lang.String)
io/corbel/resources/rem/ImagePutRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/lib/ws/api/error/ErrorResponseFactory/notFound()
io/corbel/resources/rem/ImagePutRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/lib/ws/api/error/ErrorResponseFactory/getInstance()
io/corbel/iam/auth/google/connect/GoogleAdapter/setConnectionValues(io.corbel.iam.auth.google.api.Google,org.springframework.social.connect.ConnectionValues)#io/corbel/iam/auth/google/api/userinfo/GoogleUserInfo/getLink()
io/corbel/iam/auth/google/connect/GoogleAdapter/setConnectionValues(io.corbel.iam.auth.google.api.Google,org.springframework.social.connect.ConnectionValues)#io/corbel/iam/auth/google/api/userinfo/GoogleUserInfo/getId()
io/corbel/iam/auth/google/connect/GoogleAdapter/setConnectionValues(io.corbel.iam.auth.google.api.Google,org.springframework.social.connect.ConnectionValues)#io/corbel/iam/auth/google/api/userinfo/GoogleUserInfo/getProfilePictureUrl()
io/corbel/iam/auth/google/connect/GoogleAdapter/setConnectionValues(io.corbel.iam.auth.google.api.Google,org.springframework.social.connect.ConnectionValues)#io/corbel/iam/auth/google/api/Google/userOperations()
io/corbel/iam/auth/google/connect/GoogleAdapter/setConnectionValues(io.corbel.iam.auth.google.api.Google,org.springframework.social.connect.ConnectionValues)#org/springframework/social/connect/ConnectionValues/setProfileUrl(java.lang.String)
io/corbel/iam/auth/google/connect/GoogleAdapter/setConnectionValues(io.corbel.iam.auth.google.api.Google,org.springframework.social.connect.ConnectionValues)#org/springframework/social/connect/ConnectionValues/setDisplayName(java.lang.String)
io/corbel/iam/auth/google/connect/GoogleAdapter/setConnectionValues(io.corbel.iam.auth.google.api.Google,org.springframework.social.connect.ConnectionValues)#io/corbel/iam/auth/google/api/userinfo/GoogleUserInfo/getName()
io/corbel/iam/auth/google/connect/GoogleAdapter/setConnectionValues(io.corbel.iam.auth.google.api.Google,org.springframework.social.connect.ConnectionValues)#io/corbel/iam/auth/google/api/userinfo/UserInfoOperations/getUserInfo()
io/corbel/iam/auth/google/connect/GoogleAdapter/setConnectionValues(io.corbel.iam.auth.google.api.Google,org.springframework.social.connect.ConnectionValues)#org/springframework/social/connect/ConnectionValues/setImageUrl(java.lang.String)
io/corbel/iam/auth/google/connect/GoogleAdapter/setConnectionValues(io.corbel.iam.auth.google.api.Google,org.springframework.social.connect.ConnectionValues)#org/springframework/social/connect/ConnectionValues/setProviderUserId(java.lang.String)
io/corbel/iam/auth/google/connect/GoogleAdapter/updateStatus(io.corbel.iam.auth.google.api.Google,java.lang.String)#java/lang/UnsupportedOperationException/UnsupportedOperationException()
io/corbel/iam/auth/google/connect/GoogleAdapter/fetchUserProfile(io.corbel.iam.auth.google.api.Google)#org/springframework/social/connect/UserProfileBuilder/setFirstName(java.lang.String)
io/corbel/iam/auth/google/connect/GoogleAdapter/fetchUserProfile(io.corbel.iam.auth.google.api.Google)#org/springframework/social/connect/UserProfileBuilder/setEmail(java.lang.String)
io/corbel/iam/auth/google/connect/GoogleAdapter/fetchUserProfile(io.corbel.iam.auth.google.api.Google)#org/springframework/social/connect/UserProfileBuilder/setLastName(java.lang.String)
io/corbel/iam/auth/google/connect/GoogleAdapter/fetchUserProfile(io.corbel.iam.auth.google.api.Google)#io/corbel/iam/auth/google/api/userinfo/GoogleUserInfo/getFirstName()
io/corbel/iam/auth/google/connect/GoogleAdapter/fetchUserProfile(io.corbel.iam.auth.google.api.Google)#io/corbel/iam/auth/google/api/userinfo/GoogleUserInfo/getLastName()
io/corbel/iam/auth/google/connect/GoogleAdapter/fetchUserProfile(io.corbel.iam.auth.google.api.Google)#org/springframework/social/connect/UserProfileBuilder/setName(java.lang.String)
io/corbel/iam/auth/google/connect/GoogleAdapter/fetchUserProfile(io.corbel.iam.auth.google.api.Google)#org/springframework/social/connect/UserProfileBuilder/UserProfileBuilder()
io/corbel/iam/auth/google/connect/GoogleAdapter/fetchUserProfile(io.corbel.iam.auth.google.api.Google)#io/corbel/iam/auth/google/api/userinfo/GoogleUserInfo/getName()
io/corbel/iam/auth/google/connect/GoogleAdapter/fetchUserProfile(io.corbel.iam.auth.google.api.Google)#org/springframework/social/connect/UserProfileBuilder/setUsername(java.lang.String)
io/corbel/iam/auth/google/connect/GoogleAdapter/fetchUserProfile(io.corbel.iam.auth.google.api.Google)#io/corbel/iam/auth/google/api/userinfo/GoogleUserInfo/getEmail()
io/corbel/iam/auth/google/connect/GoogleAdapter/fetchUserProfile(io.corbel.iam.auth.google.api.Google)#io/corbel/iam/auth/google/api/Google/userOperations()
io/corbel/iam/auth/google/connect/GoogleAdapter/fetchUserProfile(io.corbel.iam.auth.google.api.Google)#org/springframework/social/connect/UserProfileBuilder/build()
io/corbel/iam/auth/google/connect/GoogleAdapter/fetchUserProfile(io.corbel.iam.auth.google.api.Google)#io/corbel/iam/auth/google/api/userinfo/UserInfoOperations/getUserInfo()
io/corbel/notifications/service/EmailNotificationsService/send(io.corbel.notifications.model.Domain,io.corbel.notifications.model.NotificationTemplate,java.lang.String[])#io/corbel/notifications/service/EmailNotificationsService/send(io.corbel.notifications.model.Domain,io.corbel.notifications.model.NotificationTemplate,java.lang.String,java.lang.String[])
io/corbel/notifications/service/EmailNotificationsService/send(io.corbel.notifications.model.Domain,io.corbel.notifications.model.NotificationTemplate,java.lang.String,java.lang.String[])#java/util/stream/Stream/map(java.util.function.Function)
io/corbel/notifications/service/EmailNotificationsService/send(io.corbel.notifications.model.Domain,io.corbel.notifications.model.NotificationTemplate,java.lang.String,java.lang.String[])#javax/mail/Transport/send(javax.mail.Message)
io/corbel/notifications/service/EmailNotificationsService/send(io.corbel.notifications.model.Domain,io.corbel.notifications.model.NotificationTemplate,java.lang.String,java.lang.String[])#java/util/stream/Stream/collect(java.util.stream.Collector)
io/corbel/notifications/service/EmailNotificationsService/send(io.corbel.notifications.model.Domain,io.corbel.notifications.model.NotificationTemplate,java.lang.String,java.lang.String[])#javax/mail/internet/MimeMessage/setContent(java.lang.Object,java.lang.String)
io/corbel/notifications/service/EmailNotificationsService/send(io.corbel.notifications.model.Domain,io.corbel.notifications.model.NotificationTemplate,java.lang.String,java.lang.String[])#java/lang/Throwable/getMessage()
io/corbel/notifications/service/EmailNotificationsService/send(io.corbel.notifications.model.Domain,io.corbel.notifications.model.NotificationTemplate,java.lang.String,java.lang.String[])#java/util/Arrays/asList(T[])
io/corbel/notifications/service/EmailNotificationsService/send(io.corbel.notifications.model.Domain,io.corbel.notifications.model.NotificationTemplate,java.lang.String,java.lang.String[])#java/util/Properties/Properties()
io/corbel/notifications/service/EmailNotificationsService/send(io.corbel.notifications.model.Domain,io.corbel.notifications.model.NotificationTemplate,java.lang.String,java.lang.String[])#javax/mail/internet/MimeMessage/MimeMessage(javax.mail.Session)
io/corbel/notifications/service/EmailNotificationsService/send(io.corbel.notifications.model.Domain,io.corbel.notifications.model.NotificationTemplate,java.lang.String,java.lang.String[])#org/slf4j/Logger/error(java.lang.String,java.lang.Object,java.lang.Object)
io/corbel/notifications/service/EmailNotificationsService/send(io.corbel.notifications.model.Domain,io.corbel.notifications.model.NotificationTemplate,java.lang.String,java.lang.String[])#java/nio/charset/Charset/toString()
io/corbel/notifications/service/EmailNotificationsService/send(io.corbel.notifications.model.Domain,io.corbel.notifications.model.NotificationTemplate,java.lang.String,java.lang.String[])#javax/mail/Message/addRecipient(javax.mail.Message.RecipientType,javax.mail.Address)
io/corbel/notifications/service/EmailNotificationsService/send(io.corbel.notifications.model.Domain,io.corbel.notifications.model.NotificationTemplate,java.lang.String,java.lang.String[])#io/corbel/notifications/model/NotificationTemplate/getTitle()
io/corbel/notifications/service/EmailNotificationsService/send(io.corbel.notifications.model.Domain,io.corbel.notifications.model.NotificationTemplate,java.lang.String,java.lang.String[])#javax/mail/internet/InternetAddress/parse(java.lang.String)
io/corbel/notifications/service/EmailNotificationsService/send(io.corbel.notifications.model.Domain,io.corbel.notifications.model.NotificationTemplate,java.lang.String,java.lang.String[])#io/corbel/notifications/model/NotificationTemplate/getText()
io/corbel/notifications/service/EmailNotificationsService/send(io.corbel.notifications.model.Domain,io.corbel.notifications.model.NotificationTemplate,java.lang.String,java.lang.String[])#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
io/corbel/notifications/service/EmailNotificationsService/send(io.corbel.notifications.model.Domain,io.corbel.notifications.model.NotificationTemplate,java.lang.String,java.lang.String[])#java/util/Properties/setProperty(java.lang.String,java.lang.String)
io/corbel/notifications/service/EmailNotificationsService/send(io.corbel.notifications.model.Domain,io.corbel.notifications.model.NotificationTemplate,java.lang.String,java.lang.String[])#javax/mail/Session/getDefaultInstance(java.util.Properties,javax.mail.Authenticator)
io/corbel/notifications/service/EmailNotificationsService/send(io.corbel.notifications.model.Domain,io.corbel.notifications.model.NotificationTemplate,java.lang.String,java.lang.String[])#java/util/Arrays/toString(java.lang.Object[])
io/corbel/notifications/service/EmailNotificationsService/send(io.corbel.notifications.model.Domain,io.corbel.notifications.model.NotificationTemplate,java.lang.String,java.lang.String[])#javax/mail/internet/MimeMessage/setFrom(javax.mail.Address)
io/corbel/notifications/service/EmailNotificationsService/send(io.corbel.notifications.model.Domain,io.corbel.notifications.model.NotificationTemplate,java.lang.String,java.lang.String[])#io/corbel/notifications/model/NotificationTemplate/getSender()
io/corbel/notifications/service/EmailNotificationsService/send(io.corbel.notifications.model.Domain,io.corbel.notifications.model.NotificationTemplate,java.lang.String,java.lang.String[])#javax/mail/internet/MimeMessage/setSubject(java.lang.String,java.lang.String)
io/corbel/notifications/service/EmailNotificationsService/send(io.corbel.notifications.model.Domain,io.corbel.notifications.model.NotificationTemplate,java.lang.String,java.lang.String[])#org/slf4j/Logger/info(java.lang.String)
io/corbel/notifications/service/EmailNotificationsService/send(io.corbel.notifications.model.Domain,io.corbel.notifications.model.NotificationTemplate,java.lang.String,java.lang.String[])#java/util/Collection/stream()
io/corbel/notifications/service/EmailNotificationsService/send(io.corbel.notifications.model.Domain,io.corbel.notifications.model.NotificationTemplate,java.lang.String,java.lang.String[])#java/util/stream/Collectors/toList()
io/corbel/notifications/service/EmailNotificationsService/send(io.corbel.notifications.model.Domain,io.corbel.notifications.model.NotificationTemplate,java.lang.String,java.lang.String[])#java/util/stream/Stream/filter(java.util.function.Predicate)
io/corbel/notifications/service/EmailNotificationsService/send(io.corbel.notifications.model.Domain,io.corbel.notifications.model.NotificationTemplate,java.lang.String,java.lang.String[])#javax/mail/internet/MimeMessage/setReplyTo(javax.mail.Address[])
io/corbel/notifications/model/NotificationTemplateApi/equals(java.lang.Object)#java/lang/String/equals(java.lang.Object)
io/corbel/notifications/model/NotificationTemplateApi/equals(java.lang.Object)#java/lang/Object/getClass()
io/corbel/notifications/model/NotificationTemplateApi/hashCode()#java/lang/String/hashCode()
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/mockResponseWithAcl(java.lang.String)#io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/mockResponse(java.lang.String)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/mockResponse(java.lang.String)#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/mockResponse(java.lang.String)#javax/ws/rs/core/Response/getEntity()
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/mockResponse(java.lang.String)#javax/ws/rs/core/Response/Status/getStatusCode()
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/mockResponse(java.lang.String)#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/mockResponse(java.lang.String)#com/google/gson/JsonParser/parse(java.lang.String)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/mockResponse(java.lang.String)#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/mockResponse(java.lang.String)#org/mockito/Mockito/when(T)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testNotAllowed()#org/fest/assertions/api/BooleanAssert/isFalse()
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testNotAllowed()#org/fest/assertions/api/Assertions/assertThat(boolean)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testNotAllowed()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testNotAllowed()#io/corbel/resources/rem/Rem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional,java.util.Optional)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testNotAllowed()#io/corbel/resources/rem/Rem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testNotAllowed()#io/corbel/resources/rem/service/DefaultAclResourcesService/isAuthorized(java.lang.String,io.corbel.lib.token.TokenInfo,java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.model.AclPermission)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testNotAllowed()#io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/mockResponseWithEmptyAcl()
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testNotAllowed()#org/mockito/Matchers/eq(T)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testNotAllowed()#io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/mockNotFoundResponse()
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testNotAllowed()#org/mockito/Matchers/any()
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testNotAllowed()#java/util/Optional/empty()
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testNotAllowedWithoutAclObject()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testNotAllowedWithoutAclObject()#io/corbel/resources/rem/Rem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testNotAllowedWithoutAclObject()#io/corbel/resources/rem/service/DefaultAclResourcesService/isAuthorized(java.lang.String,io.corbel.lib.token.TokenInfo,java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.model.AclPermission)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testNotAllowedWithoutAclObject()#org/mockito/Matchers/eq(T)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testNotAllowedWithoutAclObject()#io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/mockNotFoundResponse()
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testNotAllowedWithoutAclObject()#io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/mockResponse()
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testNotAllowedWithoutAclObject()#io/corbel/resources/rem/Rem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional,java.util.Optional)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testNotAllowedWithoutAclObject()#org/mockito/Matchers/any()
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testNotAllowedWithoutAclObject()#java/util/Optional/empty()
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollectionByDomainAdmin()#javax/ws/rs/core/Response/getEntity()
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollectionByDomainAdmin()#javax/ws/rs/core/Response/Status/getStatusCode()
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollectionByDomainAdmin()#java/util/Collections/singletonList(T)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollectionByDomainAdmin()#io/corbel/resources/rem/service/DefaultAclResourcesService/isManagedBy(java.lang.String,io.corbel.lib.token.TokenInfo,java.lang.String)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollectionByDomainAdmin()#java/util/Collections/emptyList()
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollectionByDomainAdmin()#io/corbel/resources/rem/Rem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional,java.util.Optional)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollectionByDomainAdmin()#io/corbel/resources/rem/Rem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollectionByDomainAdmin()#io/corbel/resources/rem/service/RemService/getRem(java.lang.String)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollectionByDomainAdmin()#org/mockito/Matchers/any()
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollectionByDomainAdmin()#com/google/gson/JsonArray/JsonArray()
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollectionByDomainAdmin()#org/mockito/Matchers/eq(T)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollectionByDomainAdmin()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollectionByDomainAdmin()#org/fest/assertions/api/BooleanAssert/isTrue()
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollectionByDomainAdmin()#org/fest/assertions/api/Assertions/assertThat(boolean)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollectionByDomainAdmin()#io/corbel/resources/rem/model/ManagedCollection/ManagedCollection()
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollectionByDomainAdmin()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollectionByDomainAdmin()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollectionByDomainAdmin()#com/google/gson/JsonArray/add(com.google.gson.JsonElement)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollectionByDomainAdmin()#org/mockito/Mockito/verifyNoMoreInteractions(java.lang.Object[])
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollectionByDomainAdmin()#org/mockito/Mockito/verify(T)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollectionByDomainAdmin()#com/google/gson/Gson/toJsonTree(java.lang.Object)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollectionByDomainAdmin()#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/mockResponseWithEmptyAcl()#io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/mockResponse(java.lang.String)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testAllowedWithUserId()#org/fest/assertions/api/BooleanAssert/isTrue()
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testAllowedWithUserId()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testAllowedWithUserId()#io/corbel/resources/rem/Rem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional,java.util.Optional)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testAllowedWithUserId()#io/corbel/resources/rem/Rem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testAllowedWithUserId()#io/corbel/resources/rem/service/DefaultAclResourcesService/isAuthorized(java.lang.String,io.corbel.lib.token.TokenInfo,java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.model.AclPermission)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testAllowedWithUserId()#org/mockito/Matchers/eq(T)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testAllowedWithUserId()#io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/mockNotFoundResponse()
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testAllowedWithUserId()#org/fest/assertions/api/Assertions/assertThat(boolean)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testAllowedWithUserId()#io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/mockResponseWithAcl(java.lang.String)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testAllowedWithUserId()#org/mockito/Matchers/any()
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testAllowedWithUserId()#java/util/Optional/empty()
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testNotAllowedWithBadAcl()#org/fest/assertions/api/BooleanAssert/isFalse()
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testNotAllowedWithBadAcl()#org/fest/assertions/api/Assertions/assertThat(boolean)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testNotAllowedWithBadAcl()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testNotAllowedWithBadAcl()#io/corbel/resources/rem/Rem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional,java.util.Optional)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testNotAllowedWithBadAcl()#io/corbel/resources/rem/Rem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testNotAllowedWithBadAcl()#io/corbel/resources/rem/service/DefaultAclResourcesService/isAuthorized(java.lang.String,io.corbel.lib.token.TokenInfo,java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.model.AclPermission)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testNotAllowedWithBadAcl()#io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/mockResponseWithBadAcl(java.lang.String)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testNotAllowedWithBadAcl()#org/mockito/Matchers/eq(T)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testNotAllowedWithBadAcl()#io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/mockNotFoundResponse()
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testNotAllowedWithBadAcl()#org/mockito/Matchers/any()
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testNotAllowedWithBadAcl()#java/util/Optional/empty()
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testNotAllowedWithUserId()#org/fest/assertions/api/BooleanAssert/isFalse()
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testNotAllowedWithUserId()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testNotAllowedWithUserId()#io/corbel/resources/rem/Rem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional,java.util.Optional)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testNotAllowedWithUserId()#io/corbel/resources/rem/Rem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testNotAllowedWithUserId()#io/corbel/resources/rem/service/DefaultAclResourcesService/isAuthorized(java.lang.String,io.corbel.lib.token.TokenInfo,java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.model.AclPermission)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testNotAllowedWithUserId()#org/mockito/Matchers/eq(T)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testNotAllowedWithUserId()#io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/mockNotFoundResponse()
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testNotAllowedWithUserId()#org/fest/assertions/api/Assertions/assertThat(boolean)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testNotAllowedWithUserId()#io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/mockResponseWithAcl(java.lang.String)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testNotAllowedWithUserId()#org/mockito/Matchers/any()
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testNotAllowedWithUserId()#java/util/Optional/empty()
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollectionByGroupDomainAdmin()#javax/ws/rs/core/Response/getEntity()
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollectionByGroupDomainAdmin()#javax/ws/rs/core/Response/Status/getStatusCode()
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollectionByGroupDomainAdmin()#java/util/Collections/singletonList(T)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollectionByGroupDomainAdmin()#io/corbel/resources/rem/service/DefaultAclResourcesService/isManagedBy(java.lang.String,io.corbel.lib.token.TokenInfo,java.lang.String)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollectionByGroupDomainAdmin()#java/util/Collections/emptyList()
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollectionByGroupDomainAdmin()#io/corbel/resources/rem/Rem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional,java.util.Optional)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollectionByGroupDomainAdmin()#io/corbel/resources/rem/Rem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollectionByGroupDomainAdmin()#io/corbel/resources/rem/service/RemService/getRem(java.lang.String)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollectionByGroupDomainAdmin()#org/mockito/Matchers/any()
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollectionByGroupDomainAdmin()#com/google/gson/JsonArray/JsonArray()
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollectionByGroupDomainAdmin()#org/mockito/Matchers/eq(T)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollectionByGroupDomainAdmin()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollectionByGroupDomainAdmin()#org/fest/assertions/api/BooleanAssert/isTrue()
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollectionByGroupDomainAdmin()#org/fest/assertions/api/Assertions/assertThat(boolean)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollectionByGroupDomainAdmin()#io/corbel/resources/rem/model/ManagedCollection/ManagedCollection()
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollectionByGroupDomainAdmin()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollectionByGroupDomainAdmin()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollectionByGroupDomainAdmin()#com/google/gson/JsonArray/add(com.google.gson.JsonElement)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollectionByGroupDomainAdmin()#org/mockito/Mockito/verifyNoMoreInteractions(java.lang.Object[])
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollectionByGroupDomainAdmin()#org/mockito/Mockito/verify(T)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollectionByGroupDomainAdmin()#com/google/gson/Gson/toJsonTree(java.lang.Object)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollectionByGroupDomainAdmin()#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testFailedManagedCollection()#java/util/Optional/get()
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testFailedManagedCollection()#org/fest/assertions/api/Assertions/assertThat(boolean)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testFailedManagedCollection()#io/corbel/lib/queries/request/QueryLiteral/getLiteral()
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testFailedManagedCollection()#io/corbel/resources/rem/Rem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional,java.util.Optional)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testFailedManagedCollection()#io/corbel/resources/rem/request/CollectionParameters/getQueries()
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testFailedManagedCollection()#io/corbel/lib/queries/request/QueryNode/getField()
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testFailedManagedCollection()#org/mockito/Matchers/eq(T)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testFailedManagedCollection()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testFailedManagedCollection()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testFailedManagedCollection()#io/corbel/resources/rem/request/RequestParameters/getOptionalApiParameters()
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testFailedManagedCollection()#javax/ws/rs/core/Response/getStatusInfo()
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testFailedManagedCollection()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testFailedManagedCollection()#org/fest/assertions/api/BooleanAssert/isTrue()
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testFailedManagedCollection()#java/lang/Object/toString()
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testFailedManagedCollection()#javax/ws/rs/core/Response/Status/getStatusCode()
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testFailedManagedCollection()#org/mockito/ArgumentCaptor/getValue()
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testFailedManagedCollection()#java/util/Set/size()
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testFailedManagedCollection()#io/corbel/resources/rem/service/DefaultAclResourcesService/isManagedBy(java.lang.String,io.corbel.lib.token.TokenInfo,java.lang.String)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testFailedManagedCollection()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testFailedManagedCollection()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testFailedManagedCollection()#io/corbel/lib/queries/request/ResourceQuery/getFilters()
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testFailedManagedCollection()#org/mockito/ArgumentCaptor/forClass(java.lang.Class)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testFailedManagedCollection()#org/mockito/Mockito/verifyNoMoreInteractions(java.lang.Object[])
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testFailedManagedCollection()#org/mockito/Mockito/verify(T)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testFailedManagedCollection()#io/corbel/lib/queries/request/QueryNode/getValue()
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testFailedManagedCollection()#io/corbel/resources/rem/Rem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testFailedManagedCollection()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testFailedManagedCollection()#java/lang/String/equals(java.lang.Object)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testFailedManagedCollection()#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testFailedManagedCollection()#io/corbel/resources/rem/service/RemService/getRem(java.lang.String)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testFailedManagedCollection()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testFailedManagedCollection()#org/mockito/ArgumentCaptor/capture()
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testFailedManagedCollection()#org/mockito/Matchers/any()
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testFailedManagedCollection()#java/util/List/get(int)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollectionByGroup()#javax/ws/rs/core/Response/getEntity()
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollectionByGroup()#javax/ws/rs/core/Response/Status/getStatusCode()
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollectionByGroup()#java/util/Collections/singletonList(T)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollectionByGroup()#io/corbel/resources/rem/service/DefaultAclResourcesService/isManagedBy(java.lang.String,io.corbel.lib.token.TokenInfo,java.lang.String)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollectionByGroup()#java/util/Collections/emptyList()
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollectionByGroup()#io/corbel/resources/rem/Rem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional,java.util.Optional)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollectionByGroup()#io/corbel/resources/rem/service/RemService/getRem(java.lang.String)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollectionByGroup()#org/mockito/Matchers/any()
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollectionByGroup()#com/google/gson/JsonArray/JsonArray()
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollectionByGroup()#org/mockito/Matchers/eq(T)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollectionByGroup()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollectionByGroup()#org/fest/assertions/api/BooleanAssert/isTrue()
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollectionByGroup()#org/fest/assertions/api/Assertions/assertThat(boolean)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollectionByGroup()#io/corbel/resources/rem/model/ManagedCollection/ManagedCollection()
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollectionByGroup()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollectionByGroup()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollectionByGroup()#com/google/gson/JsonArray/add(com.google.gson.JsonElement)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollectionByGroup()#org/mockito/Mockito/verifyNoMoreInteractions(java.lang.Object[])
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollectionByGroup()#org/mockito/Mockito/verify(T)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollectionByGroup()#com/google/gson/Gson/toJsonTree(java.lang.Object)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollectionByGroup()#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testAllowedWithGroupId()#org/fest/assertions/api/BooleanAssert/isTrue()
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testAllowedWithGroupId()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testAllowedWithGroupId()#io/corbel/resources/rem/Rem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional,java.util.Optional)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testAllowedWithGroupId()#io/corbel/resources/rem/Rem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testAllowedWithGroupId()#io/corbel/resources/rem/service/DefaultAclResourcesService/isAuthorized(java.lang.String,io.corbel.lib.token.TokenInfo,java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.model.AclPermission)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testAllowedWithGroupId()#org/mockito/Matchers/eq(T)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testAllowedWithGroupId()#io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/mockNotFoundResponse()
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testAllowedWithGroupId()#org/fest/assertions/api/Assertions/assertThat(boolean)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testAllowedWithGroupId()#io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/mockResponseWithAcl(java.lang.String)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testAllowedWithGroupId()#org/mockito/Matchers/any()
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testAllowedWithGroupId()#java/util/Optional/empty()
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testAllowedWithAll()#org/fest/assertions/api/BooleanAssert/isTrue()
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testAllowedWithAll()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testAllowedWithAll()#io/corbel/resources/rem/Rem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional,java.util.Optional)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testAllowedWithAll()#io/corbel/resources/rem/Rem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testAllowedWithAll()#io/corbel/resources/rem/service/DefaultAclResourcesService/isAuthorized(java.lang.String,io.corbel.lib.token.TokenInfo,java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.model.AclPermission)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testAllowedWithAll()#org/mockito/Matchers/eq(T)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testAllowedWithAll()#io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/mockNotFoundResponse()
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testAllowedWithAll()#org/fest/assertions/api/Assertions/assertThat(boolean)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testAllowedWithAll()#io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/mockResponseWithAcl(java.lang.String)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testAllowedWithAll()#org/mockito/Matchers/any()
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testAllowedWithAll()#java/util/Optional/empty()
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollectionNotByUser()#java/util/Optional/get()
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollectionNotByUser()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollectionNotByUser()#javax/ws/rs/core/Response/getEntity()
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollectionNotByUser()#org/fest/assertions/api/BooleanAssert/isFalse()
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollectionNotByUser()#io/corbel/lib/queries/request/QueryLiteral/getLiteral()
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollectionNotByUser()#java/util/Collections/emptyList()
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollectionNotByUser()#io/corbel/resources/rem/Rem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional,java.util.Optional)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollectionNotByUser()#io/corbel/resources/rem/request/CollectionParameters/getQueries()
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollectionNotByUser()#io/corbel/lib/queries/request/QueryNode/getField()
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollectionNotByUser()#com/google/gson/JsonArray/JsonArray()
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollectionNotByUser()#org/mockito/Matchers/eq(T)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollectionNotByUser()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollectionNotByUser()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollectionNotByUser()#io/corbel/resources/rem/request/RequestParametersImpl/RequestParametersImpl(E,io.corbel.lib.token.TokenInfo,java.lang.String,java.util.List,java.lang.Long,javax.ws.rs.core.MultivaluedMap,javax.ws.rs.core.MultivaluedMap)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollectionNotByUser()#io/corbel/resources/rem/request/RequestParameters/getOptionalApiParameters()
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollectionNotByUser()#javax/ws/rs/core/Response/getStatusInfo()
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollectionNotByUser()#java/lang/Object/toString()
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollectionNotByUser()#javax/ws/rs/core/Response/Status/getStatusCode()
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollectionNotByUser()#org/mockito/ArgumentCaptor/getValue()
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollectionNotByUser()#org/fest/assertions/api/Assertions/assertThat(boolean)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollectionNotByUser()#io/corbel/resources/rem/model/ManagedCollection/ManagedCollection()
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollectionNotByUser()#java/util/Set/size()
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollectionNotByUser()#io/corbel/resources/rem/service/DefaultAclResourcesService/isManagedBy(java.lang.String,io.corbel.lib.token.TokenInfo,java.lang.String)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollectionNotByUser()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollectionNotByUser()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollectionNotByUser()#io/corbel/lib/queries/request/ResourceQuery/getFilters()
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollectionNotByUser()#org/mockito/ArgumentCaptor/forClass(java.lang.Class)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollectionNotByUser()#com/google/gson/JsonArray/add(com.google.gson.JsonElement)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollectionNotByUser()#org/mockito/Mockito/verifyNoMoreInteractions(java.lang.Object[])
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollectionNotByUser()#org/mockito/Mockito/verify(T)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollectionNotByUser()#io/corbel/lib/queries/request/QueryNode/getValue()
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollectionNotByUser()#io/corbel/resources/rem/Rem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollectionNotByUser()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollectionNotByUser()#java/lang/String/equals(java.lang.Object)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollectionNotByUser()#com/google/gson/Gson/toJsonTree(java.lang.Object)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollectionNotByUser()#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollectionNotByUser()#io/corbel/resources/rem/service/RemService/getRem(java.lang.String)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollectionNotByUser()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollectionNotByUser()#org/mockito/ArgumentCaptor/capture()
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollectionNotByUser()#org/mockito/Matchers/any()
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollectionNotByUser()#java/util/List/get(int)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/mockResponse()#io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/mockResponse(java.lang.String)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/setUp()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/setUp()#io/corbel/lib/token/TokenInfo/getDomainId()
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/setUp()#io/corbel/lib/token/TokenInfo/getUserId()
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/setUp()#io/corbel/resources/rem/service/RemService/getRem(java.lang.String)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/setUp()#io/corbel/lib/token/TokenInfo/getGroups()
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/setUp()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/setUp()#io/corbel/resources/rem/service/DefaultAclResourcesService/setRemService(io.corbel.resources.rem.service.RemService)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/mockResponseWithBadAcl(java.lang.String)#io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/mockResponse(java.lang.String)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollection()#io/corbel/resources/rem/request/RequestParameters/getOptionalApiParameters()
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollection()#java/util/Optional/get()
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollection()#javax/ws/rs/core/Response/getEntity()
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollection()#java/util/Collections/emptyList()
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollection()#io/corbel/resources/rem/Rem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional,java.util.Optional)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollection()#io/corbel/resources/rem/request/CollectionParameters/getQueries()
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollection()#io/corbel/lib/queries/request/QueryNode/getField()
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollection()#com/google/gson/JsonArray/JsonArray()
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollection()#org/mockito/Matchers/eq(T)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollection()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollection()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollection()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollection()#org/fest/assertions/api/BooleanAssert/isTrue()
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollection()#java/lang/Object/toString()
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollection()#javax/ws/rs/core/Response/Status/getStatusCode()
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollection()#org/mockito/ArgumentCaptor/getValue()
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollection()#org/fest/assertions/api/Assertions/assertThat(boolean)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollection()#io/corbel/resources/rem/model/ManagedCollection/ManagedCollection()
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollection()#java/util/Collections/singletonList(T)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollection()#io/corbel/lib/queries/request/QueryLiteral/getLiteral()
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollection()#java/util/Set/size()
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollection()#io/corbel/resources/rem/service/DefaultAclResourcesService/isManagedBy(java.lang.String,io.corbel.lib.token.TokenInfo,java.lang.String)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollection()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollection()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollection()#io/corbel/lib/queries/request/ResourceQuery/getFilters()
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollection()#org/mockito/ArgumentCaptor/forClass(java.lang.Class)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollection()#com/google/gson/JsonArray/add(com.google.gson.JsonElement)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollection()#org/mockito/Mockito/verifyNoMoreInteractions(java.lang.Object[])
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollection()#org/mockito/Mockito/verify(T)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollection()#io/corbel/lib/queries/request/QueryNode/getValue()
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollection()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollection()#java/lang/String/equals(java.lang.Object)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollection()#com/google/gson/Gson/toJsonTree(java.lang.Object)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollection()#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollection()#io/corbel/resources/rem/service/RemService/getRem(java.lang.String)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollection()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollection()#org/mockito/ArgumentCaptor/capture()
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollection()#org/mockito/Matchers/any()
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testManagedCollection()#java/util/List/get(int)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testNotAllowedOperationWithUserId()#org/fest/assertions/api/BooleanAssert/isFalse()
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testNotAllowedOperationWithUserId()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testNotAllowedOperationWithUserId()#io/corbel/resources/rem/Rem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional,java.util.Optional)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testNotAllowedOperationWithUserId()#io/corbel/resources/rem/Rem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testNotAllowedOperationWithUserId()#io/corbel/resources/rem/service/DefaultAclResourcesService/isAuthorized(java.lang.String,io.corbel.lib.token.TokenInfo,java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.model.AclPermission)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testNotAllowedOperationWithUserId()#org/mockito/Matchers/eq(T)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testNotAllowedOperationWithUserId()#io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/mockNotFoundResponse()
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testNotAllowedOperationWithUserId()#org/fest/assertions/api/Assertions/assertThat(boolean)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testNotAllowedOperationWithUserId()#io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/mockResponseWithAcl(java.lang.String)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testNotAllowedOperationWithUserId()#org/mockito/Matchers/any()
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testNotAllowedOperationWithUserId()#java/util/Optional/empty()
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/mockNotFoundResponse()#javax/ws/rs/core/Response/getStatusInfo()
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/mockNotFoundResponse()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/mockNotFoundResponse()#javax/ws/rs/core/Response/Status/getStatusCode()
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/mockNotFoundResponse()#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/mockNotFoundResponse()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/mockNotFoundResponse()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testNotAllowedWithGroupId()#org/fest/assertions/api/BooleanAssert/isFalse()
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testNotAllowedWithGroupId()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testNotAllowedWithGroupId()#io/corbel/resources/rem/Rem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional,java.util.Optional)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testNotAllowedWithGroupId()#io/corbel/resources/rem/Rem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testNotAllowedWithGroupId()#io/corbel/resources/rem/service/DefaultAclResourcesService/isAuthorized(java.lang.String,io.corbel.lib.token.TokenInfo,java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.model.AclPermission)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testNotAllowedWithGroupId()#org/mockito/Matchers/eq(T)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testNotAllowedWithGroupId()#io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/mockNotFoundResponse()
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testNotAllowedWithGroupId()#org/fest/assertions/api/Assertions/assertThat(boolean)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testNotAllowedWithGroupId()#io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/mockResponseWithAcl(java.lang.String)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testNotAllowedWithGroupId()#org/mockito/Matchers/any()
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testNotAllowedWithGroupId()#java/util/Optional/empty()
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testNotAllowedOperationWithAll()#org/fest/assertions/api/BooleanAssert/isFalse()
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testNotAllowedOperationWithAll()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testNotAllowedOperationWithAll()#io/corbel/resources/rem/Rem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional,java.util.Optional)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testNotAllowedOperationWithAll()#io/corbel/resources/rem/Rem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testNotAllowedOperationWithAll()#io/corbel/resources/rem/service/DefaultAclResourcesService/isAuthorized(java.lang.String,io.corbel.lib.token.TokenInfo,java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.model.AclPermission)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testNotAllowedOperationWithAll()#org/mockito/Matchers/eq(T)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testNotAllowedOperationWithAll()#io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/mockNotFoundResponse()
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testNotAllowedOperationWithAll()#org/fest/assertions/api/Assertions/assertThat(boolean)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testNotAllowedOperationWithAll()#io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/mockResponseWithAcl(java.lang.String)
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testNotAllowedOperationWithAll()#org/mockito/Matchers/any()
io/corbel/resources/rem/service/DefaultAclResourcesServiceTest/testNotAllowedOperationWithAll()#java/util/Optional/empty()
io/corbel/iam/eventbus/DeviceDeletedEventHandler/getAllTokensIdByDeviceId(java.lang.String)#java/util/stream/Stream/map(java.util.function.Function)
io/corbel/iam/eventbus/DeviceDeletedEventHandler/getAllTokensIdByDeviceId(java.lang.String)#java/util/Collection/stream()
io/corbel/iam/eventbus/DeviceDeletedEventHandler/getAllTokensIdByDeviceId(java.lang.String)#io/corbel/iam/repository/UserTokenRepository/findByDeviceId(java.lang.String)
io/corbel/iam/eventbus/DeviceDeletedEventHandler/invalidateToken(java.lang.String)#org/springframework/data/repository/CrudRepository/delete(ID)
io/corbel/iam/eventbus/DeviceDeletedEventHandler/invalidateToken(java.lang.String)#io/corbel/lib/ws/auth/repository/AuthorizationRulesRepository/deleteByToken(java.lang.String)
io/corbel/iam/eventbus/DeviceDeletedEventHandler/handle(io.corbel.event.DeviceEvent)#io/corbel/event/DeviceEvent/getDeviceId()
io/corbel/iam/eventbus/DeviceDeletedEventHandler/handle(io.corbel.event.DeviceEvent)#java/lang/Enum/equals(java.lang.Object)
io/corbel/iam/eventbus/DeviceDeletedEventHandler/handle(io.corbel.event.DeviceEvent)#io/corbel/iam/eventbus/DeviceDeletedEventHandler/getAllTokensIdByDeviceId(java.lang.String)
io/corbel/iam/eventbus/DeviceDeletedEventHandler/handle(io.corbel.event.DeviceEvent)#io/corbel/event/DeviceEvent/getType()
io/corbel/iam/eventbus/DeviceDeletedEventHandler/handle(io.corbel.event.DeviceEvent)#java/util/stream/Stream/forEach(java.util.function.Consumer)
io/corbel/resources/rem/service/DefaultImageOperationsServiceTest/applyConversionTest()#io/corbel/resources/rem/service/DefaultImageOperationsService/IMOperationFactory/create()
io/corbel/resources/rem/service/DefaultImageOperationsServiceTest/applyConversionTest()#java/util/Collections/singletonList(T)
io/corbel/resources/rem/service/DefaultImageOperationsServiceTest/applyConversionTest()#org/im4java/core/Operation/addRawArgs(java.lang.String[])
io/corbel/resources/rem/service/DefaultImageOperationsServiceTest/applyConversionTest()#org/im4java/core/IMOperation/addSubOperation(org.im4java.core.Operation)
io/corbel/resources/rem/service/DefaultImageOperationsServiceTest/applyConversionTest()#io/corbel/resources/rem/service/DefaultImageOperationsService/applyConversion(java.util.List,java.io.InputStream,java.io.OutputStream,java.util.Optional,java.lang.String)
io/corbel/resources/rem/service/DefaultImageOperationsServiceTest/applyConversionTest()#org/mockito/Matchers/any()
io/corbel/resources/rem/service/DefaultImageOperationsServiceTest/applyConversionTest()#org/im4java/core/Operation/addImage(java.lang.String[])
io/corbel/resources/rem/service/DefaultImageOperationsServiceTest/applyConversionTest()#org/mockito/Mockito/verify(T,org.mockito.verification.VerificationMode)
io/corbel/resources/rem/service/DefaultImageOperationsServiceTest/applyConversionTest()#io/corbel/resources/rem/service/DefaultImageOperationsService/ConvertCmdFactory/create(java.io.InputStream,java.io.OutputStream)
io/corbel/resources/rem/service/DefaultImageOperationsServiceTest/applyConversionTest()#org/mockito/Mockito/times(int)
io/corbel/resources/rem/service/DefaultImageOperationsServiceTest/applyConversionTest()#org/mockito/ArgumentCaptor/forClass(java.lang.Class)
io/corbel/resources/rem/service/DefaultImageOperationsServiceTest/applyConversionTest()#org/mockito/Mockito/verify(T)
io/corbel/resources/rem/service/DefaultImageOperationsServiceTest/applyConversionTest()#org/im4java/core/ImageCommand/run(org.im4java.core.Operation,java.lang.Object[])
io/corbel/resources/rem/service/DefaultImageOperationsServiceTest/applyConversionTest()#org/mockito/ArgumentCaptor/capture()
io/corbel/resources/rem/service/DefaultImageOperationsServiceTest/applyConversionTest()#org/mockito/Matchers/eq(T)
io/corbel/resources/rem/service/DefaultImageOperationsServiceTest/applyConversionTest()#io/corbel/resources/rem/model/ImageOperationDescription/ImageOperationDescription(java.lang.String,java.lang.String)
io/corbel/resources/rem/service/DefaultImageOperationsServiceTest/applyConversionWithUnknownOperationTest()#org/mockito/Mockito/verify(T,org.mockito.verification.VerificationMode)
io/corbel/resources/rem/service/DefaultImageOperationsServiceTest/applyConversionWithUnknownOperationTest()#io/corbel/resources/rem/service/DefaultImageOperationsService/IMOperationFactory/create()
io/corbel/resources/rem/service/DefaultImageOperationsServiceTest/applyConversionWithUnknownOperationTest()#java/util/Collections/singletonList(T)
io/corbel/resources/rem/service/DefaultImageOperationsServiceTest/applyConversionWithUnknownOperationTest()#org/im4java/core/Operation/addRawArgs(java.lang.String[])
io/corbel/resources/rem/service/DefaultImageOperationsServiceTest/applyConversionWithUnknownOperationTest()#io/corbel/resources/rem/service/DefaultImageOperationsService/applyConversion(java.util.List,java.io.InputStream,java.io.OutputStream,java.util.Optional,java.lang.String)
io/corbel/resources/rem/service/DefaultImageOperationsServiceTest/applyConversionWithUnknownOperationTest()#org/mockito/Matchers/any()
io/corbel/resources/rem/service/DefaultImageOperationsServiceTest/applyConversionWithUnknownOperationTest()#org/im4java/core/Operation/addImage(java.lang.String[])
io/corbel/resources/rem/service/DefaultImageOperationsServiceTest/applyConversionWithUnknownOperationTest()#org/mockito/Mockito/times(int)
io/corbel/resources/rem/service/DefaultImageOperationsServiceTest/applyConversionWithUnknownOperationTest()#org/mockito/Mockito/verify(T)
io/corbel/resources/rem/service/DefaultImageOperationsServiceTest/applyConversionWithUnknownOperationTest()#org/mockito/Matchers/eq(T)
io/corbel/resources/rem/service/DefaultImageOperationsServiceTest/applyConversionWithUnknownOperationTest()#io/corbel/resources/rem/model/ImageOperationDescription/ImageOperationDescription(java.lang.String,java.lang.String)
io/corbel/resources/rem/service/DefaultImageOperationsServiceTest/setUp()#com/google/common/collect/ImmutableMap/Builder/build()
io/corbel/resources/rem/service/DefaultImageOperationsServiceTest/setUp()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/service/DefaultImageOperationsServiceTest/setUp()#io/corbel/resources/rem/service/DefaultImageOperationsService/ConvertCmdFactory/create(java.io.InputStream,java.io.OutputStream)
io/corbel/resources/rem/service/DefaultImageOperationsServiceTest/setUp()#io/corbel/resources/rem/service/DefaultImageOperationsService/IMOperationFactory/create()
io/corbel/resources/rem/service/DefaultImageOperationsServiceTest/setUp()#io/corbel/resources/rem/service/DefaultImageOperationsService/DefaultImageOperationsService(io.corbel.resources.rem.service.DefaultImageOperationsService.IMOperationFactory,io.corbel.resources.rem.service.DefaultImageOperationsService.ConvertCmdFactory,java.util.Map)
io/corbel/resources/rem/service/DefaultImageOperationsServiceTest/setUp()#io/corbel/resources/rem/operation/ImageOperation/apply(java.lang.String)
io/corbel/resources/rem/service/DefaultImageOperationsServiceTest/setUp()#org/mockito/Matchers/anyInt()
io/corbel/resources/rem/service/DefaultImageOperationsServiceTest/setUp()#com/google/common/collect/ImmutableMap/Builder/put(K,V)
io/corbel/resources/rem/service/DefaultImageOperationsServiceTest/setUp()#org/mockito/Matchers/any()
io/corbel/resources/rem/service/DefaultImageOperationsServiceTest/setUp()#java/io/InputStream/read(byte[],int,int)
io/corbel/resources/rem/service/DefaultImageOperationsServiceTest/setUp()#com/google/common/collect/ImmutableMap/builder()
io/corbel/resources/rem/service/DefaultImageOperationsServiceTest/setUp()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/resources/rem/service/DefaultImageOperationsServiceTest/setUp()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/service/DefaultImageOperationsServiceTest/afterTesting()#org/mockito/Mockito/verifyNoMoreInteractions(java.lang.Object[])
io/corbel/resources/rem/service/DefaultImageOperationsServiceTest/applyConversionWithFormatTest()#io/corbel/resources/rem/service/DefaultImageOperationsService/IMOperationFactory/create()
io/corbel/resources/rem/service/DefaultImageOperationsServiceTest/applyConversionWithFormatTest()#org/im4java/core/Operation/addRawArgs(java.lang.String[])
io/corbel/resources/rem/service/DefaultImageOperationsServiceTest/applyConversionWithFormatTest()#java/util/Collections/emptyList()
io/corbel/resources/rem/service/DefaultImageOperationsServiceTest/applyConversionWithFormatTest()#org/im4java/core/IMOperation/addSubOperation(org.im4java.core.Operation)
io/corbel/resources/rem/service/DefaultImageOperationsServiceTest/applyConversionWithFormatTest()#io/corbel/resources/rem/service/DefaultImageOperationsService/applyConversion(java.util.List,java.io.InputStream,java.io.OutputStream,java.util.Optional,java.lang.String)
io/corbel/resources/rem/service/DefaultImageOperationsServiceTest/applyConversionWithFormatTest()#org/mockito/Matchers/any()
io/corbel/resources/rem/service/DefaultImageOperationsServiceTest/applyConversionWithFormatTest()#org/mockito/Matchers/eq(T)
io/corbel/resources/rem/service/DefaultImageOperationsServiceTest/applyConversionWithFormatTest()#org/im4java/core/Operation/addImage(java.lang.String[])
io/corbel/resources/rem/service/DefaultImageOperationsServiceTest/applyConversionWithFormatTest()#org/mockito/Mockito/verify(T,org.mockito.verification.VerificationMode)
io/corbel/resources/rem/service/DefaultImageOperationsServiceTest/applyConversionWithFormatTest()#io/corbel/resources/rem/service/DefaultImageOperationsService/ConvertCmdFactory/create(java.io.InputStream,java.io.OutputStream)
io/corbel/resources/rem/service/DefaultImageOperationsServiceTest/applyConversionWithFormatTest()#org/mockito/Mockito/times(int)
io/corbel/resources/rem/service/DefaultImageOperationsServiceTest/applyConversionWithFormatTest()#org/mockito/ArgumentCaptor/forClass(java.lang.Class)
io/corbel/resources/rem/service/DefaultImageOperationsServiceTest/applyConversionWithFormatTest()#org/mockito/Mockito/verify(T)
io/corbel/resources/rem/service/DefaultImageOperationsServiceTest/applyConversionWithFormatTest()#org/im4java/core/ImageCommand/run(org.im4java.core.Operation,java.lang.Object[])
io/corbel/resources/rem/service/DefaultImageOperationsServiceTest/applyConversionWithFormatTest()#org/mockito/ArgumentCaptor/capture()
io/corbel/resources/rem/service/DefaultImageOperationsServiceTest/applyConversionWithUnknownOperationButFormatTest()#org/mockito/Mockito/verify(T,org.mockito.verification.VerificationMode)
io/corbel/resources/rem/service/DefaultImageOperationsServiceTest/applyConversionWithUnknownOperationButFormatTest()#io/corbel/resources/rem/service/DefaultImageOperationsService/IMOperationFactory/create()
io/corbel/resources/rem/service/DefaultImageOperationsServiceTest/applyConversionWithUnknownOperationButFormatTest()#java/util/Collections/singletonList(T)
io/corbel/resources/rem/service/DefaultImageOperationsServiceTest/applyConversionWithUnknownOperationButFormatTest()#org/im4java/core/Operation/addRawArgs(java.lang.String[])
io/corbel/resources/rem/service/DefaultImageOperationsServiceTest/applyConversionWithUnknownOperationButFormatTest()#io/corbel/resources/rem/service/DefaultImageOperationsService/applyConversion(java.util.List,java.io.InputStream,java.io.OutputStream,java.util.Optional,java.lang.String)
io/corbel/resources/rem/service/DefaultImageOperationsServiceTest/applyConversionWithUnknownOperationButFormatTest()#org/mockito/Matchers/any()
io/corbel/resources/rem/service/DefaultImageOperationsServiceTest/applyConversionWithUnknownOperationButFormatTest()#org/im4java/core/Operation/addImage(java.lang.String[])
io/corbel/resources/rem/service/DefaultImageOperationsServiceTest/applyConversionWithUnknownOperationButFormatTest()#org/mockito/Mockito/times(int)
io/corbel/resources/rem/service/DefaultImageOperationsServiceTest/applyConversionWithUnknownOperationButFormatTest()#org/mockito/Mockito/verify(T)
io/corbel/resources/rem/service/DefaultImageOperationsServiceTest/applyConversionWithUnknownOperationButFormatTest()#org/mockito/Matchers/eq(T)
io/corbel/resources/rem/service/DefaultImageOperationsServiceTest/applyConversionWithUnknownOperationButFormatTest()#io/corbel/resources/rem/model/ImageOperationDescription/ImageOperationDescription(java.lang.String,java.lang.String)
io/corbel/iam/service/DefaultCaptchaService/verifyRequestCaptcha(java.lang.String,java.lang.String,java.lang.String)#java/util/Optional/orElse(T)
io/corbel/iam/service/DefaultCaptchaService/verifyRequestCaptcha(java.lang.String,java.lang.String,java.lang.String)#java/util/Optional/map(java.util.function.Function)
io/corbel/iam/service/DefaultCaptchaService/verifyRequestCaptcha(java.lang.String,java.lang.String,java.lang.String)#io/corbel/iam/service/DomainService/getDomain(java.lang.String)
io/corbel/iam/service/DefaultDeviceServiceTest/testDeleteByIdAndUserId()#io/corbel/iam/service/DefaultDeviceService/deleteByUidAndUserId(java.lang.String,java.lang.String,java.lang.String)
io/corbel/iam/service/DefaultDeviceServiceTest/testDeleteByIdAndUserId()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/service/DefaultDeviceServiceTest/testDeleteByIdAndUserId()#org/mockito/Mockito/verify(T)
io/corbel/iam/service/DefaultDeviceServiceTest/testDeleteByIdAndUserId()#io/corbel/iam/repository/DeviceRepository/deleteById(java.lang.String)
io/corbel/iam/service/DefaultDeviceServiceTest/testDeleteByIdAndUserId()#io/corbel/iam/service/EventsService/sendDeviceDeleteEvent(java.lang.String,java.lang.String,java.lang.String)
io/corbel/iam/service/DefaultDeviceServiceTest/testDeleteByIdAndUserId()#org/mockito/Mockito/when(T)
io/corbel/iam/service/DefaultDeviceServiceTest/testDeleteByIdAndUserId()#org/mockito/Matchers/anyString()
io/corbel/iam/service/DefaultDeviceServiceTest/testGetDeviceByUserIdWithNullQuery()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/service/DefaultDeviceServiceTest/testGetDeviceByUserIdWithNullQuery()#io/corbel/lib/queries/builder/ResourceQueryBuilder/add(java.lang.String,java.lang.String)
io/corbel/iam/service/DefaultDeviceServiceTest/testGetDeviceByUserIdWithNullQuery()#io/corbel/lib/queries/builder/ResourceQueryBuilder/build()
io/corbel/iam/service/DefaultDeviceServiceTest/testGetDeviceByUserIdWithNullQuery()#io/corbel/lib/queries/jaxrs/QueryParameters/getQueries()
io/corbel/iam/service/DefaultDeviceServiceTest/testGetDeviceByUserIdWithNullQuery()#io/corbel/lib/queries/jaxrs/QueryParameters/getPagination()
io/corbel/iam/service/DefaultDeviceServiceTest/testGetDeviceByUserIdWithNullQuery()#java/util/LinkedList/LinkedList()
io/corbel/iam/service/DefaultDeviceServiceTest/testGetDeviceByUserIdWithNullQuery()#java/util/List/add(E)
io/corbel/iam/service/DefaultDeviceServiceTest/testGetDeviceByUserIdWithNullQuery()#java/util/Optional/empty()
io/corbel/iam/service/DefaultDeviceServiceTest/testGetDeviceByUserIdWithNullQuery()#org/fest/assertions/api/Assertions/assertThat(java.util.List)
io/corbel/iam/service/DefaultDeviceServiceTest/testGetDeviceByUserIdWithNullQuery()#io/corbel/lib/queries/mongo/repository/GenericFindRepository/find(java.util.List,io.corbel.lib.queries.request.Pagination,io.corbel.lib.queries.request.Sort)
io/corbel/iam/service/DefaultDeviceServiceTest/testGetDeviceByUserIdWithNullQuery()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/iam/service/DefaultDeviceServiceTest/testGetDeviceByUserIdWithNullQuery()#io/corbel/lib/queries/builder/ResourceQueryBuilder/ResourceQueryBuilder()
io/corbel/iam/service/DefaultDeviceServiceTest/testGetDeviceByUserIdWithNullQuery()#io/corbel/iam/service/DefaultDeviceService/getByUserId(java.lang.String,io.corbel.lib.queries.jaxrs.QueryParameters)
io/corbel/iam/service/DefaultDeviceServiceTest/testGetDeviceByUserIdWithNullQuery()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/iam/service/DefaultDeviceServiceTest/testGetDeviceByUserIdWithNullQuery()#org/mockito/Mockito/when(T)
io/corbel/iam/service/DefaultDeviceServiceTest/testGetDeviceByUserIdWithNullQuery()#io/corbel/lib/queries/jaxrs/QueryParameters/getSort()
io/corbel/iam/service/DefaultDeviceServiceTest/testGetDeviceByUserIdWithNullQuery()#java/util/Optional/of(T)
io/corbel/iam/service/DefaultDeviceServiceTest/setUp()#io/corbel/iam/service/DefaultDeviceService/DefaultDeviceService(io.corbel.iam.repository.DeviceRepository,io.corbel.lib.mongo.IdGenerator,io.corbel.iam.service.EventsService,java.time.Clock)
io/corbel/iam/service/DefaultDeviceServiceTest/setUp()#java/time/ZoneId/systemDefault()
io/corbel/iam/service/DefaultDeviceServiceTest/setUp()#java/time/Clock/fixed(java.time.Instant,java.time.ZoneId)
io/corbel/iam/service/DefaultDeviceServiceTest/testGetDeviceByMultipleUserIdWithOtherUserSearch()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/service/DefaultDeviceServiceTest/testGetDeviceByMultipleUserIdWithOtherUserSearch()#io/corbel/lib/queries/builder/ResourceQueryBuilder/add(java.lang.String,java.lang.String)
io/corbel/iam/service/DefaultDeviceServiceTest/testGetDeviceByMultipleUserIdWithOtherUserSearch()#io/corbel/lib/queries/builder/ResourceQueryBuilder/build()
io/corbel/iam/service/DefaultDeviceServiceTest/testGetDeviceByMultipleUserIdWithOtherUserSearch()#io/corbel/lib/queries/jaxrs/QueryParameters/getQueries()
io/corbel/iam/service/DefaultDeviceServiceTest/testGetDeviceByMultipleUserIdWithOtherUserSearch()#io/corbel/lib/queries/jaxrs/QueryParameters/getPagination()
io/corbel/iam/service/DefaultDeviceServiceTest/testGetDeviceByMultipleUserIdWithOtherUserSearch()#java/util/LinkedList/LinkedList()
io/corbel/iam/service/DefaultDeviceServiceTest/testGetDeviceByMultipleUserIdWithOtherUserSearch()#java/util/List/add(E)
io/corbel/iam/service/DefaultDeviceServiceTest/testGetDeviceByMultipleUserIdWithOtherUserSearch()#org/fest/assertions/api/Assertions/assertThat(java.util.List)
io/corbel/iam/service/DefaultDeviceServiceTest/testGetDeviceByMultipleUserIdWithOtherUserSearch()#io/corbel/lib/queries/mongo/repository/GenericFindRepository/find(java.util.List,io.corbel.lib.queries.request.Pagination,io.corbel.lib.queries.request.Sort)
io/corbel/iam/service/DefaultDeviceServiceTest/testGetDeviceByMultipleUserIdWithOtherUserSearch()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/iam/service/DefaultDeviceServiceTest/testGetDeviceByMultipleUserIdWithOtherUserSearch()#io/corbel/lib/queries/builder/ResourceQueryBuilder/ResourceQueryBuilder()
io/corbel/iam/service/DefaultDeviceServiceTest/testGetDeviceByMultipleUserIdWithOtherUserSearch()#io/corbel/iam/service/DefaultDeviceService/getByUserId(java.lang.String,io.corbel.lib.queries.jaxrs.QueryParameters)
io/corbel/iam/service/DefaultDeviceServiceTest/testGetDeviceByMultipleUserIdWithOtherUserSearch()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/iam/service/DefaultDeviceServiceTest/testGetDeviceByMultipleUserIdWithOtherUserSearch()#org/mockito/Mockito/when(T)
io/corbel/iam/service/DefaultDeviceServiceTest/testGetDeviceByMultipleUserIdWithOtherUserSearch()#io/corbel/lib/queries/jaxrs/QueryParameters/getSort()
io/corbel/iam/service/DefaultDeviceServiceTest/testGetDeviceByMultipleUserIdWithOtherUserSearch()#java/util/Optional/of(T)
io/corbel/iam/service/DefaultDeviceServiceTest/testDeleteByIdAndUserIdNotExist()#io/corbel/iam/service/DefaultDeviceService/deleteByUidAndUserId(java.lang.String,java.lang.String,java.lang.String)
io/corbel/iam/service/DefaultDeviceServiceTest/testDeleteByIdAndUserIdNotExist()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/service/DefaultDeviceServiceTest/testDeleteByIdAndUserIdNotExist()#org/mockito/Mockito/verify(T,org.mockito.verification.VerificationMode)
io/corbel/iam/service/DefaultDeviceServiceTest/testDeleteByIdAndUserIdNotExist()#org/mockito/Mockito/verify(T)
io/corbel/iam/service/DefaultDeviceServiceTest/testDeleteByIdAndUserIdNotExist()#org/mockito/Mockito/never()
io/corbel/iam/service/DefaultDeviceServiceTest/testDeleteByIdAndUserIdNotExist()#io/corbel/iam/repository/DeviceRepository/deleteById(java.lang.String)
io/corbel/iam/service/DefaultDeviceServiceTest/testDeleteByIdAndUserIdNotExist()#io/corbel/iam/service/EventsService/sendDeviceDeleteEvent(java.lang.String,java.lang.String,java.lang.String)
io/corbel/iam/service/DefaultDeviceServiceTest/testDeleteByIdAndUserIdNotExist()#org/mockito/Mockito/when(T)
io/corbel/iam/service/DefaultDeviceServiceTest/testDeleteByIdAndUserIdNotExist()#org/mockito/Matchers/anyString()
io/corbel/iam/service/DefaultDeviceServiceTest/testGetDeviceByUserIdWithOtherUserSearch()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/service/DefaultDeviceServiceTest/testGetDeviceByUserIdWithOtherUserSearch()#io/corbel/lib/queries/builder/ResourceQueryBuilder/add(java.lang.String,java.lang.String)
io/corbel/iam/service/DefaultDeviceServiceTest/testGetDeviceByUserIdWithOtherUserSearch()#io/corbel/lib/queries/builder/ResourceQueryBuilder/build()
io/corbel/iam/service/DefaultDeviceServiceTest/testGetDeviceByUserIdWithOtherUserSearch()#io/corbel/lib/queries/jaxrs/QueryParameters/getQueries()
io/corbel/iam/service/DefaultDeviceServiceTest/testGetDeviceByUserIdWithOtherUserSearch()#io/corbel/lib/queries/jaxrs/QueryParameters/getPagination()
io/corbel/iam/service/DefaultDeviceServiceTest/testGetDeviceByUserIdWithOtherUserSearch()#java/util/LinkedList/LinkedList()
io/corbel/iam/service/DefaultDeviceServiceTest/testGetDeviceByUserIdWithOtherUserSearch()#java/util/List/add(E)
io/corbel/iam/service/DefaultDeviceServiceTest/testGetDeviceByUserIdWithOtherUserSearch()#org/fest/assertions/api/Assertions/assertThat(java.util.List)
io/corbel/iam/service/DefaultDeviceServiceTest/testGetDeviceByUserIdWithOtherUserSearch()#io/corbel/lib/queries/mongo/repository/GenericFindRepository/find(java.util.List,io.corbel.lib.queries.request.Pagination,io.corbel.lib.queries.request.Sort)
io/corbel/iam/service/DefaultDeviceServiceTest/testGetDeviceByUserIdWithOtherUserSearch()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/iam/service/DefaultDeviceServiceTest/testGetDeviceByUserIdWithOtherUserSearch()#io/corbel/lib/queries/builder/ResourceQueryBuilder/ResourceQueryBuilder()
io/corbel/iam/service/DefaultDeviceServiceTest/testGetDeviceByUserIdWithOtherUserSearch()#io/corbel/iam/service/DefaultDeviceService/getByUserId(java.lang.String,io.corbel.lib.queries.jaxrs.QueryParameters)
io/corbel/iam/service/DefaultDeviceServiceTest/testGetDeviceByUserIdWithOtherUserSearch()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/iam/service/DefaultDeviceServiceTest/testGetDeviceByUserIdWithOtherUserSearch()#org/mockito/Mockito/when(T)
io/corbel/iam/service/DefaultDeviceServiceTest/testGetDeviceByUserIdWithOtherUserSearch()#io/corbel/lib/queries/jaxrs/QueryParameters/getSort()
io/corbel/iam/service/DefaultDeviceServiceTest/testGetDeviceByUserIdWithOtherUserSearch()#java/util/Optional/of(T)
io/corbel/iam/service/DefaultDeviceServiceTest/testAddDeviceByIdAndUserId()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/service/DefaultDeviceServiceTest/testAddDeviceByIdAndUserId()#io/corbel/iam/model/DeviceIdGenerator/generateId(io.corbel.iam.model.Device)
io/corbel/iam/service/DefaultDeviceServiceTest/testAddDeviceByIdAndUserId()#io/corbel/iam/service/DefaultDeviceService/update(io.corbel.iam.model.Device)
io/corbel/iam/service/DefaultDeviceServiceTest/testAddDeviceByIdAndUserId()#java/util/Date/Date(long)
io/corbel/iam/service/DefaultDeviceServiceTest/testAddDeviceByIdAndUserId()#org/fest/assertions/api/Assertions/assertThat(T)
io/corbel/iam/service/DefaultDeviceServiceTest/testAddDeviceByIdAndUserId()#io/corbel/iam/service/EventsService/sendDeviceCreateEvent(io.corbel.iam.model.Device)
io/corbel/iam/service/DefaultDeviceServiceTest/testAddDeviceByIdAndUserId()#java/time/Instant/toEpochMilli()
io/corbel/iam/service/DefaultDeviceServiceTest/testAddDeviceByIdAndUserId()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/iam/service/DefaultDeviceServiceTest/testAddDeviceByIdAndUserId()#org/mockito/Mockito/when(T)
io/corbel/iam/service/DefaultDeviceServiceTest/testAddDeviceByIdAndUserId()#io/corbel/iam/model/Entity/setId(java.lang.String)
io/corbel/iam/service/DefaultDeviceServiceTest/testAddDeviceByIdAndUserId()#io/corbel/iam/model/Device/getFirstConnection()
io/corbel/iam/service/DefaultDeviceServiceTest/testAddDeviceByIdAndUserId()#org/fest/assertions/api/Assertions/assertThat(java.util.Date)
io/corbel/iam/service/DefaultDeviceServiceTest/testAddDeviceByIdAndUserId()#org/mockito/Mockito/verify(T)
io/corbel/iam/service/DefaultDeviceServiceTest/testAddDeviceByIdAndUserId()#io/corbel/lib/mongo/repository/PartialUpdateRepository/upsert(ID,E)
io/corbel/iam/service/DefaultDeviceServiceTest/testAddDeviceByIdAndUserId()#io/corbel/iam/model/Device/Device()
io/corbel/iam/service/DefaultDeviceServiceTest/testUpdateDeviceByIdAndUserId()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/service/DefaultDeviceServiceTest/testUpdateDeviceByIdAndUserId()#io/corbel/iam/model/DeviceIdGenerator/generateId(io.corbel.iam.model.Device)
io/corbel/iam/service/DefaultDeviceServiceTest/testUpdateDeviceByIdAndUserId()#org/fest/assertions/api/AbstractAssert/isNull()
io/corbel/iam/service/DefaultDeviceServiceTest/testUpdateDeviceByIdAndUserId()#io/corbel/iam/service/DefaultDeviceService/update(io.corbel.iam.model.Device)
io/corbel/iam/service/DefaultDeviceServiceTest/testUpdateDeviceByIdAndUserId()#io/corbel/iam/service/EventsService/sendDeviceUpdateEvent(io.corbel.iam.model.Device)
io/corbel/iam/service/DefaultDeviceServiceTest/testUpdateDeviceByIdAndUserId()#org/fest/assertions/api/Assertions/assertThat(T)
io/corbel/iam/service/DefaultDeviceServiceTest/testUpdateDeviceByIdAndUserId()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/iam/service/DefaultDeviceServiceTest/testUpdateDeviceByIdAndUserId()#org/mockito/Mockito/when(T)
io/corbel/iam/service/DefaultDeviceServiceTest/testUpdateDeviceByIdAndUserId()#io/corbel/iam/model/Entity/setId(java.lang.String)
io/corbel/iam/service/DefaultDeviceServiceTest/testUpdateDeviceByIdAndUserId()#io/corbel/iam/model/Device/getFirstConnection()
io/corbel/iam/service/DefaultDeviceServiceTest/testUpdateDeviceByIdAndUserId()#org/fest/assertions/api/Assertions/assertThat(java.util.Date)
io/corbel/iam/service/DefaultDeviceServiceTest/testUpdateDeviceByIdAndUserId()#org/mockito/Mockito/verify(T)
io/corbel/iam/service/DefaultDeviceServiceTest/testUpdateDeviceByIdAndUserId()#io/corbel/lib/mongo/repository/PartialUpdateRepository/upsert(ID,E)
io/corbel/iam/service/DefaultDeviceServiceTest/testUpdateDeviceByIdAndUserId()#io/corbel/iam/model/Device/Device()
io/corbel/iam/service/DefaultDeviceServiceTest/testGetDeviceByUserIdWithTypeQuery()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/service/DefaultDeviceServiceTest/testGetDeviceByUserIdWithTypeQuery()#io/corbel/lib/queries/builder/ResourceQueryBuilder/add(java.lang.String,java.lang.String)
io/corbel/iam/service/DefaultDeviceServiceTest/testGetDeviceByUserIdWithTypeQuery()#io/corbel/lib/queries/builder/ResourceQueryBuilder/build()
io/corbel/iam/service/DefaultDeviceServiceTest/testGetDeviceByUserIdWithTypeQuery()#io/corbel/lib/queries/jaxrs/QueryParameters/getQueries()
io/corbel/iam/service/DefaultDeviceServiceTest/testGetDeviceByUserIdWithTypeQuery()#io/corbel/lib/queries/jaxrs/QueryParameters/getPagination()
io/corbel/iam/service/DefaultDeviceServiceTest/testGetDeviceByUserIdWithTypeQuery()#java/util/LinkedList/LinkedList()
io/corbel/iam/service/DefaultDeviceServiceTest/testGetDeviceByUserIdWithTypeQuery()#java/util/List/add(E)
io/corbel/iam/service/DefaultDeviceServiceTest/testGetDeviceByUserIdWithTypeQuery()#org/fest/assertions/api/Assertions/assertThat(java.util.List)
io/corbel/iam/service/DefaultDeviceServiceTest/testGetDeviceByUserIdWithTypeQuery()#io/corbel/lib/queries/mongo/repository/GenericFindRepository/find(java.util.List,io.corbel.lib.queries.request.Pagination,io.corbel.lib.queries.request.Sort)
io/corbel/iam/service/DefaultDeviceServiceTest/testGetDeviceByUserIdWithTypeQuery()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/iam/service/DefaultDeviceServiceTest/testGetDeviceByUserIdWithTypeQuery()#io/corbel/lib/queries/builder/ResourceQueryBuilder/ResourceQueryBuilder()
io/corbel/iam/service/DefaultDeviceServiceTest/testGetDeviceByUserIdWithTypeQuery()#io/corbel/iam/service/DefaultDeviceService/getByUserId(java.lang.String,io.corbel.lib.queries.jaxrs.QueryParameters)
io/corbel/iam/service/DefaultDeviceServiceTest/testGetDeviceByUserIdWithTypeQuery()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/iam/service/DefaultDeviceServiceTest/testGetDeviceByUserIdWithTypeQuery()#org/mockito/Mockito/when(T)
io/corbel/iam/service/DefaultDeviceServiceTest/testGetDeviceByUserIdWithTypeQuery()#io/corbel/lib/queries/jaxrs/QueryParameters/getSort()
io/corbel/iam/service/DefaultDeviceServiceTest/testGetDeviceByUserIdWithTypeQuery()#java/util/Optional/of(T)
io/corbel/iam/service/DefaultDeviceServiceTest/testGetDeviceByIdAndUserId()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/service/DefaultDeviceServiceTest/testGetDeviceByIdAndUserId()#io/corbel/iam/repository/DeviceRepository/findById(java.lang.String)
io/corbel/iam/service/DefaultDeviceServiceTest/testGetDeviceByIdAndUserId()#io/corbel/iam/service/DefaultDeviceService/getByUidAndUserId(java.lang.String,java.lang.String,java.lang.String)
io/corbel/iam/service/DefaultDeviceServiceTest/testGetDeviceByIdAndUserId()#org/fest/assertions/api/Assertions/assertThat(T)
io/corbel/iam/service/DefaultDeviceServiceTest/testGetDeviceByIdAndUserId()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/iam/service/DefaultDeviceServiceTest/testGetDeviceByIdAndUserId()#org/mockito/Mockito/when(T)
io/corbel/iam/service/DefaultDeviceServiceTest/testGetDeviceByIdAndUserId()#org/mockito/Matchers/anyString()
io/corbel/iam/service/DefaultDeviceServiceTest/testGetDeviceById()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/service/DefaultDeviceServiceTest/testGetDeviceById()#org/mockito/Mockito/when(T)
io/corbel/iam/service/DefaultDeviceServiceTest/testGetDeviceById()#org/springframework/data/repository/CrudRepository/findOne(ID)
io/corbel/iam/service/DefaultDeviceServiceTest/testGetDeviceById()#io/corbel/iam/service/DefaultDeviceService/get(java.lang.String)
io/corbel/iam/service/DefaultDeviceServiceTest/testGetDeviceById()#org/fest/assertions/api/Assertions/assertThat(T)
io/corbel/iam/service/DefaultDeviceServiceTest/testGetDeviceById()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/iam/service/DefaultDeviceServiceTest/testDeleteByUserId()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/service/DefaultDeviceServiceTest/testDeleteByUserId()#io/corbel/iam/repository/DeviceRepository/deleteByUserId(java.lang.String)
io/corbel/iam/service/DefaultDeviceServiceTest/testDeleteByUserId()#java/util/Collections/singletonList(T)
io/corbel/iam/service/DefaultDeviceServiceTest/testDeleteByUserId()#org/mockito/Mockito/verify(T)
io/corbel/iam/service/DefaultDeviceServiceTest/testDeleteByUserId()#io/corbel/iam/model/User/User()
io/corbel/iam/service/DefaultDeviceServiceTest/testDeleteByUserId()#io/corbel/iam/service/DefaultDeviceService/deleteByUserId(io.corbel.iam.model.User)
io/corbel/iam/service/DefaultDeviceServiceTest/testDeleteByUserId()#org/fest/assertions/api/Assertions/assertThat(java.util.List)
io/corbel/iam/service/DefaultDeviceServiceTest/testDeleteByUserId()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/iam/service/DefaultDeviceServiceTest/testDeleteByUserId()#org/mockito/Mockito/when(T)
io/corbel/iam/service/DefaultDeviceServiceTest/testDeleteByUserId()#io/corbel/iam/model/Entity/setId(java.lang.String)
io/corbel/oauth/service/DefaultMailChangePasswordService/sendMailChangePassword(io.corbel.oauth.model.Client,java.lang.String,java.lang.String)#com/google/common/collect/ImmutableMap/of(K,V)
io/corbel/oauth/service/DefaultMailChangePasswordService/sendMailChangePassword(io.corbel.oauth.model.Client,java.lang.String,java.lang.String)#java/util/Optional/orElse(T)
io/corbel/oauth/service/DefaultMailChangePasswordService/sendMailChangePassword(io.corbel.oauth.model.Client,java.lang.String,java.lang.String)#java/util/Optional/ofNullable(T)
io/corbel/oauth/service/DefaultMailChangePasswordService/sendMailChangePassword(io.corbel.oauth.model.Client,java.lang.String,java.lang.String)#io/corbel/oauth/model/Client/getDomain()
io/corbel/oauth/service/DefaultMailChangePasswordService/sendMailChangePassword(io.corbel.oauth.model.Client,java.lang.String,java.lang.String)#io/corbel/oauth/service/SendNotificationService/sendNotification(java.lang.String,java.lang.String,java.lang.String,java.util.Map)
io/corbel/oauth/service/DefaultMailChangePasswordService/sendMailChangePassword(io.corbel.oauth.model.Client,java.lang.String,java.lang.String)#io/corbel/oauth/model/Client/getChangePasswordNotificationId()
io/corbel/iam/model/Domain/removeScope(java.lang.String)#java/util/Set/remove(java.lang.Object)
io/corbel/iam/model/Domain/hashCode()#java/lang/String/hashCode()
io/corbel/iam/model/Domain/hashCode()#java/util/Set/hashCode()
io/corbel/iam/model/Domain/hashCode()#io/corbel/iam/model/TraceableEntity/hashCode()
io/corbel/iam/model/Domain/hashCode()#java/util/Map/hashCode()
io/corbel/iam/model/Domain/addPublicScope(java.lang.String)#java/util/Set/add(E)
io/corbel/iam/model/Domain/equals(java.lang.Object)#java/lang/String/equals(java.lang.Object)
io/corbel/iam/model/Domain/equals(java.lang.Object)#java/util/Set/equals(java.lang.Object)
io/corbel/iam/model/Domain/equals(java.lang.Object)#io/corbel/iam/model/TraceableEntity/equals(java.lang.Object)
io/corbel/iam/model/Domain/equals(java.lang.Object)#java/util/Map/equals(java.lang.Object)
io/corbel/iam/model/Domain/equals(java.lang.Object)#java/lang/Object/getClass()
io/corbel/iam/model/Domain/addScope(java.lang.String)#java/util/Set/add(E)
io/corbel/iam/model/Domain/removePublicScope(java.lang.String)#java/util/Set/remove(java.lang.Object)
io/corbel/resources/rem/service/InMemorySearchResourceRegistryTest/setup()#io/corbel/resources/rem/service/InMemorySearchableFieldsRegistry/InMemorySearchableFieldsRegistry()
io/corbel/resources/rem/service/InMemorySearchResourceRegistryTest/registryTest()#io/corbel/resources/rem/service/InMemorySearchableFieldsRegistry/getFieldsFromType(java.lang.String,java.lang.String)
io/corbel/resources/rem/service/InMemorySearchResourceRegistryTest/registryTest()#io/corbel/resources/rem/service/InMemorySearchableFieldsRegistry/addFields(io.corbel.resources.rem.model.SearchResource)
io/corbel/resources/rem/service/InMemorySearchResourceRegistryTest/registryTest()#io/corbel/resources/rem/model/SearchResource/SearchResource(java.lang.String,java.lang.String,java.util.Set)
io/corbel/resources/rem/service/InMemorySearchResourceRegistryTest/registryTest()#java/util/Arrays/asList(T[])
io/corbel/resources/rem/service/InMemorySearchResourceRegistryTest/registryTest()#org/fest/assertions/api/Assertions/assertThat(java.lang.Iterable)
io/corbel/resources/rem/service/InMemorySearchResourceRegistryTest/registryTest()#org/fest/assertions/api/AbstractIterableAssert/isEmpty()
io/corbel/resources/rem/service/InMemorySearchResourceRegistryTest/registryTest()#java/util/HashSet/HashSet(java.util.Collection)
io/corbel/resources/rem/service/InMemorySearchResourceRegistryTest/registryTest()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/iam/service/DefaultDomainService/getDomainsAggregation(io.corbel.lib.queries.request.ResourceQuery,io.corbel.lib.queries.request.Aggregation)#java/lang/Enum/equals(java.lang.Object)
io/corbel/iam/service/DefaultDomainService/getDomainsAggregation(io.corbel.lib.queries.request.ResourceQuery,io.corbel.lib.queries.request.Aggregation)#io/corbel/lib/queries/request/Aggregation/getOperator()
io/corbel/iam/service/DefaultDomainService/getDomainsAggregation(io.corbel.lib.queries.request.ResourceQuery,io.corbel.lib.queries.request.Aggregation)#io/corbel/lib/queries/request/AggregationResultsFactory/countResult(long)
io/corbel/iam/service/DefaultDomainService/getDomainsAggregation(io.corbel.lib.queries.request.ResourceQuery,io.corbel.lib.queries.request.Aggregation)#io/corbel/lib/queries/mongo/repository/GenericFindRepository/count(io.corbel.lib.queries.request.ResourceQuery)
io/corbel/iam/service/DefaultDomainService/getDomainsAggregation(io.corbel.lib.queries.request.ResourceQuery,io.corbel.lib.queries.request.Aggregation)#io/corbel/iam/exception/InvalidAggregationException/InvalidAggregationException()
io/corbel/iam/service/DefaultDomainService/getDomain(java.lang.String)#org/springframework/data/repository/CrudRepository/findOne(ID)
io/corbel/iam/service/DefaultDomainService/getDomain(java.lang.String)#java/util/Optional/ofNullable(T)
io/corbel/iam/service/DefaultDomainService/update(io.corbel.iam.model.Domain)#io/corbel/iam/model/Entity/getId()
io/corbel/iam/service/DefaultDomainService/update(io.corbel.iam.model.Domain)#io/corbel/iam/service/DefaultDomainService/sendUpdateDomainPublicScopesEvent(java.lang.String)
io/corbel/iam/service/DefaultDomainService/update(io.corbel.iam.model.Domain)#io/corbel/lib/mongo/repository/PartialUpdateRepository/patch(E,java.lang.String[])
io/corbel/iam/service/DefaultDomainService/getAll(io.corbel.lib.queries.request.ResourceQuery,io.corbel.lib.queries.request.Pagination,io.corbel.lib.queries.request.Sort)#io/corbel/lib/queries/mongo/repository/GenericFindRepository/find(io.corbel.lib.queries.request.ResourceQuery,io.corbel.lib.queries.request.Pagination,io.corbel.lib.queries.request.Sort)
io/corbel/iam/service/DefaultDomainService/sendUpdateDomainPublicScopesEvent(java.lang.String)#io/corbel/iam/service/EventsService/sendUpdateDomainPublicScopesEvent(java.lang.String)
io/corbel/iam/service/DefaultDomainService/delete(java.lang.String)#io/corbel/iam/service/EventsService/sendDomainDeletedEvent(java.lang.String)
io/corbel/iam/service/DefaultDomainService/delete(java.lang.String)#io/corbel/iam/service/DefaultDomainService/sendUpdateDomainPublicScopesEvent(java.lang.String)
io/corbel/iam/service/DefaultDomainService/delete(java.lang.String)#org/springframework/data/repository/CrudRepository/delete(ID)
io/corbel/iam/service/DefaultDomainService/scopesAllowedInDomain(java.util.Set,io.corbel.iam.model.Domain)#java/util/stream/Stream/map(java.util.function.Function)
io/corbel/iam/service/DefaultDomainService/scopesAllowedInDomain(java.util.Set,io.corbel.iam.model.Domain)#java/util/stream/Collectors/toSet()
io/corbel/iam/service/DefaultDomainService/scopesAllowedInDomain(java.util.Set,io.corbel.iam.model.Domain)#java/util/Collection/stream()
io/corbel/iam/service/DefaultDomainService/scopesAllowedInDomain(java.util.Set,io.corbel.iam.model.Domain)#io/corbel/iam/service/ScopeService/expandScopes(java.util.Collection)
io/corbel/iam/service/DefaultDomainService/scopesAllowedInDomain(java.util.Set,io.corbel.iam.model.Domain)#java/util/Set/isEmpty()
io/corbel/iam/service/DefaultDomainService/scopesAllowedInDomain(java.util.Set,io.corbel.iam.model.Domain)#java/util/Set/containsAll(java.util.Collection)
io/corbel/iam/service/DefaultDomainService/scopesAllowedInDomain(java.util.Set,io.corbel.iam.model.Domain)#io/corbel/iam/model/Domain/getScopes()
io/corbel/iam/service/DefaultDomainService/scopesAllowedInDomain(java.util.Set,io.corbel.iam.model.Domain)#java/util/stream/Stream/collect(java.util.stream.Collector)
io/corbel/iam/service/DefaultDomainService/oAuthServiceAllowedInDomain(java.lang.String,io.corbel.iam.model.Domain)#java/util/Map/get(java.lang.Object)
io/corbel/iam/service/DefaultDomainService/oAuthServiceAllowedInDomain(java.lang.String,io.corbel.iam.model.Domain)#io/corbel/iam/model/Domain/getAuthConfigurations()
io/corbel/iam/service/DefaultDomainService/oAuthServiceAllowedInDomain(java.lang.String,io.corbel.iam.model.Domain)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
io/corbel/iam/service/DefaultDomainService/insert(io.corbel.iam.model.Domain)#io/corbel/iam/model/Entity/getId()
io/corbel/iam/service/DefaultDomainService/insert(io.corbel.iam.model.Domain)#org/springframework/data/mongodb/repository/MongoRepository/insert(S)
io/corbel/iam/service/DefaultDomainService/insert(io.corbel.iam.model.Domain)#io/corbel/iam/service/DefaultDomainService/sendUpdateDomainPublicScopesEvent(java.lang.String)
io/corbel/iam/service/DefaultDomainService/insert(io.corbel.iam.model.Domain)#io/corbel/iam/exception/DomainAlreadyExists/DomainAlreadyExists(java.lang.String)
io/corbel/resources/rem/resmi/ResmiDeleteRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/resources/rem/resmi/AbstractResmiRem/buildResourceUri(java.lang.String,java.lang.String,java.lang.String)
io/corbel/resources/rem/resmi/ResmiDeleteRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/resources/rem/request/ResourceId/getId()
io/corbel/resources/rem/resmi/ResmiDeleteRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/resources/rem/request/RequestParameters/getRequestedDomain()
io/corbel/resources/rem/resmi/ResmiDeleteRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/resources/rem/resmi/AbstractResmiRem/noContent()
io/corbel/resources/rem/resmi/ResmiDeleteRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/resources/rem/service/ResmiService/deleteResource(io.corbel.resources.rem.model.ResourceUri)
io/corbel/resources/rem/resmi/ResmiDeleteRem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional)#io/corbel/resources/rem/request/RequestParameters/getOptionalApiParameters()
io/corbel/resources/rem/resmi/ResmiDeleteRem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional)#io/corbel/resources/rem/resmi/AbstractResmiRem/buildCollectionUri(java.lang.String,java.lang.String)
io/corbel/resources/rem/resmi/ResmiDeleteRem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional)#java/util/Optional/flatMap(java.util.function.Function)
io/corbel/resources/rem/resmi/ResmiDeleteRem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional)#io/corbel/resources/rem/service/ResmiService/deleteCollection(io.corbel.resources.rem.model.ResourceUri,java.util.Optional)
io/corbel/resources/rem/resmi/ResmiDeleteRem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional)#io/corbel/resources/rem/request/RequestParameters/getRequestedDomain()
io/corbel/resources/rem/resmi/ResmiDeleteRem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional)#io/corbel/resources/rem/resmi/AbstractResmiRem/noContent()
io/corbel/resources/rem/resmi/ResmiDeleteRem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/resources/rem/request/RequestParameters/getOptionalApiParameters()
io/corbel/resources/rem/resmi/ResmiDeleteRem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/resources/rem/request/ResourceId/isWildcard()
io/corbel/resources/rem/resmi/ResmiDeleteRem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/resources/rem/request/ResourceId/getId()
io/corbel/resources/rem/resmi/ResmiDeleteRem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/resources/rem/request/RequestParameters/getRequestedDomain()
io/corbel/resources/rem/resmi/ResmiDeleteRem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/resources/rem/model/ResourceUri/getRelationId()
io/corbel/resources/rem/resmi/ResmiDeleteRem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/lib/ws/api/error/ErrorResponseFactory/getInstance()
io/corbel/resources/rem/resmi/ResmiDeleteRem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/lib/ws/api/error/ErrorResponseFactory/methodNotAllowed()
io/corbel/resources/rem/resmi/ResmiDeleteRem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/resources/rem/service/ResmiService/deleteRelation(io.corbel.resources.rem.model.ResourceUri,java.util.Optional)
io/corbel/resources/rem/resmi/ResmiDeleteRem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#java/util/Optional/flatMap(java.util.function.Function)
io/corbel/resources/rem/resmi/ResmiDeleteRem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/resources/rem/resmi/AbstractResmiRem/buildRelationUri(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Optional)
io/corbel/resources/rem/resmi/ResmiDeleteRem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/resources/rem/resmi/AbstractResmiRem/noContent()
io/corbel/evci/client/DefaultEvciClientTest/setup()#com/fasterxml/jackson/databind/ObjectMapper/ObjectMapper()
io/corbel/evci/client/DefaultEvciClientTest/setup()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/evci/client/DefaultEvciClientTest/setup()#io/corbel/evci/client/DefaultEvciClient/DefaultEvciClient(io.corbel.evci.service.EventsService,com.fasterxml.jackson.databind.ObjectMapper)
io/corbel/evci/client/DefaultEvciClientTest/test()#org/mockito/ArgumentCaptor/getValue()
io/corbel/evci/client/DefaultEvciClientTest/test()#io/corbel/evci/client/EvciClient/convertAndSend(java.lang.String,java.lang.Object)
io/corbel/evci/client/DefaultEvciClientTest/test()#io/corbel/evci/client/DefaultEvciClientTest/TestBean/TestBean()
io/corbel/evci/client/DefaultEvciClientTest/test()#io/corbel/evci/service/EventsService/registerEvent(java.lang.String,com.fasterxml.jackson.databind.JsonNode)
io/corbel/evci/client/DefaultEvciClientTest/test()#com/fasterxml/jackson/databind/JsonNode/toString()
io/corbel/evci/client/DefaultEvciClientTest/test()#org/mockito/Matchers/eq(T)
io/corbel/evci/client/DefaultEvciClientTest/test()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/evci/client/DefaultEvciClientTest/test()#org/mockito/ArgumentCaptor/forClass(java.lang.Class)
io/corbel/evci/client/DefaultEvciClientTest/test()#org/mockito/Mockito/verify(T)
io/corbel/evci/client/DefaultEvciClientTest/test()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/evci/client/DefaultEvciClientTest/test()#org/mockito/ArgumentCaptor/capture()
io/corbel/oauth/service/DefaultSendNotificationServiceTest/testSendNotification()#io/corbel/event/NotificationEvent/getNotificationId()
io/corbel/oauth/service/DefaultSendNotificationServiceTest/testSendNotification()#org/mockito/ArgumentCaptor/getValue()
io/corbel/oauth/service/DefaultSendNotificationServiceTest/testSendNotification()#io/corbel/eventbus/service/EventBus/dispatch(io.corbel.eventbus.Event)
io/corbel/oauth/service/DefaultSendNotificationServiceTest/testSendNotification()#io/corbel/event/NotificationEvent/getProperties()
io/corbel/oauth/service/DefaultSendNotificationServiceTest/testSendNotification()#org/fest/assertions/api/Assertions/assertThat(java.util.Map)
io/corbel/oauth/service/DefaultSendNotificationServiceTest/testSendNotification()#io/corbel/oauth/service/SendNotificationService/sendNotification(java.lang.String,java.lang.String,java.lang.String,java.util.Map)
io/corbel/oauth/service/DefaultSendNotificationServiceTest/testSendNotification()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/oauth/service/DefaultSendNotificationServiceTest/testSendNotification()#org/mockito/ArgumentCaptor/forClass(java.lang.Class)
io/corbel/oauth/service/DefaultSendNotificationServiceTest/testSendNotification()#org/mockito/Mockito/verify(T)
io/corbel/oauth/service/DefaultSendNotificationServiceTest/testSendNotification()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/oauth/service/DefaultSendNotificationServiceTest/testSendNotification()#org/mockito/ArgumentCaptor/capture()
io/corbel/oauth/service/DefaultSendNotificationServiceTest/testSendNotification()#io/corbel/event/NotificationEvent/getRecipient()
io/corbel/oauth/service/DefaultSendNotificationServiceTest/testSendNotification()#io/corbel/eventbus/EventWithSpecificDomain/getDomain()
io/corbel/oauth/service/DefaultSendNotificationServiceTest/setup()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/oauth/service/DefaultSendNotificationServiceTest/setup()#io/corbel/oauth/service/DefaultSendNotificationService/DefaultSendNotificationService(io.corbel.eventbus.service.EventBus)
io/corbel/resources/rem/service/DefaultServiceLocator/resolve(java.lang.Class)#java/util/Map/get(java.lang.Object)
io/corbel/resources/rem/service/DefaultServiceLocator/resolve(java.lang.Class)#java/util/Optional/ofNullable(T)
io/corbel/resources/rem/service/DefaultServiceLocator/publish(java.lang.Class,T)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
io/corbel/resources/rem/service/DefaultServiceLocator/publish(java.lang.Class,T)#java/util/Map/containsKey(java.lang.Object)
io/corbel/resources/rem/service/DefaultServiceLocator/publish(java.lang.Class,T)#java/util/Map/put(K,V)
io/corbel/notifications/handler/DefaultSenderNotificationsServiceTest/setUp()#io/corbel/notifications/service/DefaultSenderNotificationsService/DefaultSenderNotificationsService(io.corbel.notifications.template.NotificationFiller,io.corbel.notifications.service.NotificationsDispatcher,io.corbel.notifications.repository.NotificationRepository,io.corbel.notifications.repository.DomainRepository,java.lang.String,java.lang.String)
io/corbel/notifications/handler/DefaultSenderNotificationsServiceTest/testTreatEvent()#io/corbel/event/NotificationEvent/getNotificationId()
io/corbel/notifications/handler/DefaultSenderNotificationsServiceTest/testTreatEvent()#io/corbel/notifications/service/SenderNotificationsService/sendNotification(java.lang.String,java.lang.String,java.util.Map,java.lang.String[])
io/corbel/notifications/handler/DefaultSenderNotificationsServiceTest/testTreatEvent()#org/mockito/Mockito/when(T)
io/corbel/notifications/handler/DefaultSenderNotificationsServiceTest/testTreatEvent()#org/mockito/Mockito/times(int)
io/corbel/notifications/handler/DefaultSenderNotificationsServiceTest/testTreatEvent()#io/corbel/event/NotificationEvent/getProperties()
io/corbel/notifications/handler/DefaultSenderNotificationsServiceTest/testTreatEvent()#io/corbel/event/NotificationEvent/getRecipient()
io/corbel/notifications/handler/DefaultSenderNotificationsServiceTest/testTreatEvent()#io/corbel/eventbus/EventWithSpecificDomain/setDomain(java.lang.String)
io/corbel/notifications/handler/DefaultSenderNotificationsServiceTest/testTreatEvent()#io/corbel/notifications/utils/DomainNameIdGenerator/generateNotificationTemplateId(java.lang.String,java.lang.String)
io/corbel/notifications/handler/DefaultSenderNotificationsServiceTest/testTreatEvent()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/notifications/handler/DefaultSenderNotificationsServiceTest/testTreatEvent()#io/corbel/notifications/model/NotificationTemplate/NotificationTemplate()
io/corbel/notifications/handler/DefaultSenderNotificationsServiceTest/testTreatEvent()#io/corbel/notifications/model/Domain/Domain()
io/corbel/notifications/handler/DefaultSenderNotificationsServiceTest/testTreatEvent()#org/mockito/Mockito/verify(T,org.mockito.verification.VerificationMode)
io/corbel/notifications/handler/DefaultSenderNotificationsServiceTest/testTreatEvent()#io/corbel/notifications/template/NotificationFiller/fill(io.corbel.notifications.model.NotificationTemplate,java.util.Map)
io/corbel/notifications/handler/DefaultSenderNotificationsServiceTest/testTreatEvent()#io/corbel/event/NotificationEvent/NotificationEvent(java.lang.String,java.lang.String)
io/corbel/notifications/handler/DefaultSenderNotificationsServiceTest/testTreatEvent()#org/springframework/data/repository/CrudRepository/findOne(ID)
io/corbel/notifications/handler/DefaultSenderNotificationsServiceTest/testTreatEvent()#io/corbel/notifications/service/NotificationsDispatcher/send(io.corbel.notifications.model.Domain,io.corbel.notifications.model.NotificationTemplate,java.lang.String,java.lang.String[])
io/corbel/notifications/handler/DefaultSenderNotificationsServiceTest/testTreatEvent()#io/corbel/event/NotificationEvent/setProperties(java.util.Map)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/updateMulti(java.lang.String,com.google.gson.JsonObject,java.util.Optional)#io/corbel/resources/rem/dao/DefaultMongoResmiDao/getQueryFromResourceQuery(java.util.Optional,java.util.Optional)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/updateMulti(java.lang.String,com.google.gson.JsonObject,java.util.Optional)#org/springframework/data/mongodb/core/MongoOperations/updateMulti(org.springframework.data.mongodb.core.query.Query,org.springframework.data.mongodb.core.query.Update,java.lang.Class,java.lang.String)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/updateMulti(java.lang.String,com.google.gson.JsonObject,java.util.Optional)#java/util/Optional/empty()
io/corbel/resources/rem/dao/DefaultMongoResmiDao/updateMulti(java.lang.String,com.google.gson.JsonObject,java.util.Optional)#io/corbel/resources/rem/dao/DefaultMongoResmiDao/updateFromJsonObject(com.google.gson.JsonObject,java.util.Optional)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/toHistogramEntry(com.mongodb.DBObject,java.lang.String[])#org/bson/BSONObject/get(java.lang.String)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/toHistogramEntry(com.mongodb.DBObject,java.lang.String[])#org/bson/BSONObject/keySet()
io/corbel/resources/rem/dao/DefaultMongoResmiDao/toHistogramEntry(com.mongodb.DBObject,java.lang.String[])#java/util/Collections/singletonMap(K,V)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/toHistogramEntry(com.mongodb.DBObject,java.lang.String[])#java/util/Collection/stream()
io/corbel/resources/rem/dao/DefaultMongoResmiDao/toHistogramEntry(com.mongodb.DBObject,java.lang.String[])#io/corbel/lib/queries/request/HistogramEntry/HistogramEntry(long,java.util.Map)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/toHistogramEntry(com.mongodb.DBObject,java.lang.String[])#java/util/stream/Stream/filter(java.util.function.Predicate)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/toHistogramEntry(com.mongodb.DBObject,java.lang.String[])#java/util/stream/Stream/forEach(java.util.function.Consumer)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/toHistogramEntry(com.mongodb.DBObject,java.lang.String[])#java/util/HashMap/HashMap(int)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/toHistogramEntry(com.mongodb.DBObject,java.lang.String[])#java/lang/Number/longValue()
io/corbel/resources/rem/dao/DefaultMongoResmiDao/aggregate(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,java.util.Optional,java.util.Optional,java.util.Optional,java.lang.Class,org.springframework.data.mongodb.core.aggregation.AggregationOperation[])#java/lang/Enum/toString()
io/corbel/resources/rem/dao/DefaultMongoResmiDao/aggregate(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,java.util.Optional,java.util.Optional,java.util.Optional,java.lang.Class,org.springframework.data.mongodb.core.aggregation.AggregationOperation[])#io/corbel/resources/rem/dao/DefaultMongoResmiDao/getMongoCollectionName(io.corbel.resources.rem.model.ResourceUri)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/aggregate(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,java.util.Optional,java.util.Optional,java.util.Optional,java.lang.Class,org.springframework.data.mongodb.core.aggregation.AggregationOperation[])#io/corbel/resources/rem/dao/DefaultMongoResmiDao/withAllowDiskUseOption(org.springframework.data.mongodb.core.aggregation.Aggregation)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/aggregate(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,java.util.Optional,java.util.Optional,java.util.Optional,java.lang.Class,org.springframework.data.mongodb.core.aggregation.AggregationOperation[])#org/springframework/data/mongodb/core/MongoOperations/aggregate(org.springframework.data.mongodb.core.aggregation.Aggregation,java.lang.String,java.lang.Class)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/aggregate(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,java.util.Optional,java.util.Optional,java.util.Optional,java.lang.Class,org.springframework.data.mongodb.core.aggregation.AggregationOperation[])#io/corbel/resources/rem/dao/builder/MongoAggregationBuilder/sort(java.lang.String,java.lang.String)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/aggregate(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,java.util.Optional,java.util.Optional,java.util.Optional,java.lang.Class,org.springframework.data.mongodb.core.aggregation.AggregationOperation[])#java/util/Arrays/asList(T[])
io/corbel/resources/rem/dao/DefaultMongoResmiDao/aggregate(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,java.util.Optional,java.util.Optional,java.util.Optional,java.lang.Class,org.springframework.data.mongodb.core.aggregation.AggregationOperation[])#io/corbel/resources/rem/dao/builder/MongoAggregationBuilder/build()
io/corbel/resources/rem/dao/DefaultMongoResmiDao/aggregate(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,java.util.Optional,java.util.Optional,java.util.Optional,java.lang.Class,org.springframework.data.mongodb.core.aggregation.AggregationOperation[])#java/lang/Iterable/forEach(java.util.function.Consumer)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/aggregate(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,java.util.Optional,java.util.Optional,java.util.Optional,java.lang.Class,org.springframework.data.mongodb.core.aggregation.AggregationOperation[])#org/springframework/data/mongodb/core/aggregation/AggregationResults/getMappedResults()
io/corbel/resources/rem/dao/DefaultMongoResmiDao/aggregate(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,java.util.Optional,java.util.Optional,java.util.Optional,java.lang.Class,org.springframework.data.mongodb.core.aggregation.AggregationOperation[])#io/corbel/lib/queries/request/Sort/getDirection()
io/corbel/resources/rem/dao/DefaultMongoResmiDao/aggregate(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,java.util.Optional,java.util.Optional,java.util.Optional,java.lang.Class,org.springframework.data.mongodb.core.aggregation.AggregationOperation[])#java/util/Optional/get()
io/corbel/resources/rem/dao/DefaultMongoResmiDao/aggregate(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,java.util.Optional,java.util.Optional,java.util.Optional,java.lang.Class,org.springframework.data.mongodb.core.aggregation.AggregationOperation[])#io/corbel/resources/rem/dao/builder/MongoAggregationBuilder/match(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,java.util.Optional)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/aggregate(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,java.util.Optional,java.util.Optional,java.util.Optional,java.lang.Class,org.springframework.data.mongodb.core.aggregation.AggregationOperation[])#io/corbel/resources/rem/dao/builder/MongoAggregationBuilder/MongoAggregationBuilder()
io/corbel/resources/rem/dao/DefaultMongoResmiDao/aggregate(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,java.util.Optional,java.util.Optional,java.util.Optional,java.lang.Class,org.springframework.data.mongodb.core.aggregation.AggregationOperation[])#io/corbel/lib/queries/request/Sort/getField()
io/corbel/resources/rem/dao/DefaultMongoResmiDao/aggregate(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,java.util.Optional,java.util.Optional,java.util.Optional,java.lang.Class,org.springframework.data.mongodb.core.aggregation.AggregationOperation[])#java/util/Optional/isPresent()
io/corbel/resources/rem/dao/DefaultMongoResmiDao/aggregate(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,java.util.Optional,java.util.Optional,java.util.Optional,java.lang.Class,org.springframework.data.mongodb.core.aggregation.AggregationOperation[])#io/corbel/resources/rem/dao/builder/MongoAggregationBuilder/pagination(io.corbel.lib.queries.request.Pagination)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/findAllAndRemove(io.corbel.resources.rem.model.ResourceUri,org.springframework.data.mongodb.core.query.Criteria,java.lang.Class)#io/corbel/resources/rem/dao/DefaultMongoResmiDao/getMongoCollectionName(io.corbel.resources.rem.model.ResourceUri)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/findAllAndRemove(io.corbel.resources.rem.model.ResourceUri,org.springframework.data.mongodb.core.query.Criteria,java.lang.Class)#org/springframework/data/mongodb/core/MongoOperations/findAllAndRemove(org.springframework.data.mongodb.core.query.Query,java.lang.Class,java.lang.String)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/findAllAndRemove(io.corbel.resources.rem.model.ResourceUri,org.springframework.data.mongodb.core.query.Criteria,java.lang.Class)#org/springframework/data/mongodb/core/query/Query/Query(org.springframework.data.mongodb.core.query.CriteriaDefinition)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/getRelationQuery(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,java.util.Optional,java.util.Optional,java.util.Optional)#org/apache/commons/lang3/StringUtils/isNoneEmpty(java.lang.CharSequence[])
io/corbel/resources/rem/dao/DefaultMongoResmiDao/getRelationQuery(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,java.util.Optional,java.util.Optional,java.util.Optional)#java/util/Optional/orElse(T)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/getRelationQuery(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,java.util.Optional,java.util.Optional,java.util.Optional)#io/corbel/resources/rem/dao/MongoResmiQueryBuilder/relationDestinationId(java.lang.String)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/getRelationQuery(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,java.util.Optional,java.util.Optional,java.util.Optional)#io/corbel/resources/rem/dao/MongoResmiQueryBuilder/query(java.util.List)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/getRelationQuery(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,java.util.Optional,java.util.Optional,java.util.Optional)#io/corbel/resources/rem/model/ResourceUri/getRelationId()
io/corbel/resources/rem/dao/DefaultMongoResmiDao/getRelationQuery(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,java.util.Optional,java.util.Optional,java.util.Optional)#io/corbel/resources/rem/dao/MongoResmiQueryBuilder/MongoResmiQueryBuilder()
io/corbel/resources/rem/dao/DefaultMongoResmiDao/getRelationQuery(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,java.util.Optional,java.util.Optional,java.util.Optional)#java/util/Optional/isPresent()
io/corbel/resources/rem/dao/DefaultMongoResmiDao/getRelationQuery(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,java.util.Optional,java.util.Optional,java.util.Optional)#org/springframework/data/mongodb/core/query/Field/exclude(java.lang.String)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/getRelationQuery(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,java.util.Optional,java.util.Optional,java.util.Optional)#io/corbel/resources/rem/dao/MongoResmiQueryBuilder/textSearch(java.lang.String)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/getRelationQuery(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,java.util.Optional,java.util.Optional,java.util.Optional)#java/util/Optional/get()
io/corbel/resources/rem/dao/DefaultMongoResmiDao/getRelationQuery(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,java.util.Optional,java.util.Optional,java.util.Optional)#io/corbel/resources/rem/resmi/exception/InvalidApiParamException/InvalidApiParamException(java.lang.String)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/getRelationQuery(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,java.util.Optional,java.util.Optional,java.util.Optional)#java/util/regex/PatternSyntaxException/getMessage()
io/corbel/resources/rem/dao/DefaultMongoResmiDao/getRelationQuery(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,java.util.Optional,java.util.Optional,java.util.Optional)#org/springframework/data/mongodb/core/query/Query/fields()
io/corbel/resources/rem/dao/DefaultMongoResmiDao/getRelationQuery(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,java.util.Optional,java.util.Optional,java.util.Optional)#io/corbel/lib/queries/builder/QueryBuilder/pagination(io.corbel.lib.queries.request.Pagination)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/getRelationQuery(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,java.util.Optional,java.util.Optional,java.util.Optional)#io/corbel/lib/queries/builder/QueryBuilder/sort(io.corbel.lib.queries.request.Sort)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/getRelationQuery(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,java.util.Optional,java.util.Optional,java.util.Optional)#io/corbel/resources/rem/dao/MongoResmiQueryBuilder/relationSubjectId(io.corbel.resources.rem.model.ResourceUri)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/getRelationQuery(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,java.util.Optional,java.util.Optional,java.util.Optional)#io/corbel/lib/queries/mongo/builder/MongoQueryBuilder/build()
io/corbel/resources/rem/dao/DefaultMongoResmiDao/findAll(io.corbel.resources.rem.model.ResourceUri,java.lang.Class)#io/corbel/resources/rem/dao/DefaultMongoResmiDao/getMongoCollectionName(io.corbel.resources.rem.model.ResourceUri)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/findAll(io.corbel.resources.rem.model.ResourceUri,java.lang.Class)#org/springframework/data/mongodb/core/MongoOperations/findAll(java.lang.Class,java.lang.String)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/conditionalUpdateResource(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject,java.util.List)#io/corbel/resources/rem/dao/DefaultMongoResmiDao/getMongoCollectionName(io.corbel.resources.rem.model.ResourceUri)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/conditionalUpdateResource(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject,java.util.List)#io/corbel/resources/rem/model/ResourceUri/getTypeId()
io/corbel/resources/rem/dao/DefaultMongoResmiDao/conditionalUpdateResource(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject,java.util.List)#java/util/Optional/of(T)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/conditionalUpdateResource(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject,java.util.List)#io/corbel/resources/rem/dao/DefaultMongoResmiDao/findAndModify(java.lang.String,java.util.Optional,com.google.gson.JsonObject,boolean,java.util.Optional)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/min(io.corbel.resources.rem.model.ResourceUri,java.util.List,java.lang.String)#org/bson/BSONObject/get(java.lang.String)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/min(io.corbel.resources.rem.model.ResourceUri,java.util.List,java.lang.String)#org/springframework/data/mongodb/core/aggregation/Aggregation/group(java.lang.String[])
io/corbel/resources/rem/dao/DefaultMongoResmiDao/min(io.corbel.resources.rem.model.ResourceUri,java.util.List,java.lang.String)#org/springframework/data/mongodb/core/aggregation/GroupOperation/min(java.lang.String)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/min(io.corbel.resources.rem.model.ResourceUri,java.util.List,java.lang.String)#org/springframework/data/mongodb/core/aggregation/GroupOperation/GroupOperationBuilder/as(java.lang.String)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/min(io.corbel.resources.rem.model.ResourceUri,java.util.List,java.lang.String)#java/util/List/isEmpty()
io/corbel/resources/rem/dao/DefaultMongoResmiDao/min(io.corbel.resources.rem.model.ResourceUri,java.util.List,java.lang.String)#java/util/Optional/ofNullable(T)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/min(io.corbel.resources.rem.model.ResourceUri,java.util.List,java.lang.String)#io/corbel/resources/rem/dao/DefaultMongoResmiDao/aggregate(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,org.springframework.data.mongodb.core.aggregation.AggregationOperation[])
io/corbel/resources/rem/dao/DefaultMongoResmiDao/min(io.corbel.resources.rem.model.ResourceUri,java.util.List,java.lang.String)#io/corbel/lib/queries/request/AggregationResultsFactory/minResult(java.util.Optional)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/min(io.corbel.resources.rem.model.ResourceUri,java.util.List,java.lang.String)#java/util/Optional/empty()
io/corbel/resources/rem/dao/DefaultMongoResmiDao/min(io.corbel.resources.rem.model.ResourceUri,java.util.List,java.lang.String)#java/util/List/get(int)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/getMongoCollectionName(io.corbel.resources.rem.model.ResourceUri)#java/util/Optional/orElse(T)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/getMongoCollectionName(io.corbel.resources.rem.model.ResourceUri)#java/util/Optional/ofNullable(T)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/getMongoCollectionName(io.corbel.resources.rem.model.ResourceUri)#java/util/Optional/map(java.util.function.Function)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/getMongoCollectionName(io.corbel.resources.rem.model.ResourceUri)#io/corbel/resources/rem/model/ResourceUri/getType()
io/corbel/resources/rem/dao/DefaultMongoResmiDao/getMongoCollectionName(io.corbel.resources.rem.model.ResourceUri)#io/corbel/resources/rem/dao/NamespaceNormalizer/normalize(java.lang.String)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/getMongoCollectionName(io.corbel.resources.rem.model.ResourceUri)#io/corbel/resources/rem/model/ResourceUri/getDomain()
io/corbel/resources/rem/dao/DefaultMongoResmiDao/getCollectionQuery(java.util.Optional,java.util.Optional,java.util.Optional,java.util.Optional)#org/apache/commons/lang3/StringUtils/isNoneEmpty(java.lang.CharSequence[])
io/corbel/resources/rem/dao/DefaultMongoResmiDao/getCollectionQuery(java.util.Optional,java.util.Optional,java.util.Optional,java.util.Optional)#java/util/Optional/orElse(T)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/getCollectionQuery(java.util.Optional,java.util.Optional,java.util.Optional,java.util.Optional)#io/corbel/resources/rem/dao/MongoResmiQueryBuilder/query(java.util.List)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/getCollectionQuery(java.util.Optional,java.util.Optional,java.util.Optional,java.util.Optional)#io/corbel/resources/rem/dao/MongoResmiQueryBuilder/MongoResmiQueryBuilder()
io/corbel/resources/rem/dao/DefaultMongoResmiDao/getCollectionQuery(java.util.Optional,java.util.Optional,java.util.Optional,java.util.Optional)#java/util/Optional/isPresent()
io/corbel/resources/rem/dao/DefaultMongoResmiDao/getCollectionQuery(java.util.Optional,java.util.Optional,java.util.Optional,java.util.Optional)#io/corbel/lib/queries/mongo/builder/MongoQueryBuilder/build()
io/corbel/resources/rem/dao/DefaultMongoResmiDao/getCollectionQuery(java.util.Optional,java.util.Optional,java.util.Optional,java.util.Optional)#io/corbel/resources/rem/dao/MongoResmiQueryBuilder/textSearch(java.lang.String)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/getCollectionQuery(java.util.Optional,java.util.Optional,java.util.Optional,java.util.Optional)#java/util/Optional/get()
io/corbel/resources/rem/dao/DefaultMongoResmiDao/getCollectionQuery(java.util.Optional,java.util.Optional,java.util.Optional,java.util.Optional)#io/corbel/resources/rem/resmi/exception/InvalidApiParamException/InvalidApiParamException(java.lang.String)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/getCollectionQuery(java.util.Optional,java.util.Optional,java.util.Optional,java.util.Optional)#java/util/regex/PatternSyntaxException/getMessage()
io/corbel/resources/rem/dao/DefaultMongoResmiDao/getCollectionQuery(java.util.Optional,java.util.Optional,java.util.Optional,java.util.Optional)#io/corbel/lib/queries/builder/QueryBuilder/pagination(io.corbel.lib.queries.request.Pagination)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/getCollectionQuery(java.util.Optional,java.util.Optional,java.util.Optional,java.util.Optional)#io/corbel/lib/queries/builder/QueryBuilder/sort(io.corbel.lib.queries.request.Sort)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/updateResource(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject)#io/corbel/resources/rem/dao/DefaultMongoResmiDao/getMongoCollectionName(io.corbel.resources.rem.model.ResourceUri)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/updateResource(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject)#io/corbel/resources/rem/model/ResourceUri/getTypeId()
io/corbel/resources/rem/dao/DefaultMongoResmiDao/updateResource(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject)#java/util/Optional/of(T)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/updateResource(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject)#io/corbel/resources/rem/dao/DefaultMongoResmiDao/findAndModify(java.lang.String,java.util.Optional,com.google.gson.JsonObject,boolean,java.util.Optional)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/updateResource(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject)#java/util/Optional/empty()
io/corbel/resources/rem/dao/DefaultMongoResmiDao/ensureExpireIndex(io.corbel.resources.rem.model.ResourceUri)#io/corbel/resources/rem/dao/DefaultMongoResmiDao/getMongoCollectionName(io.corbel.resources.rem.model.ResourceUri)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/ensureExpireIndex(io.corbel.resources.rem.model.ResourceUri)#org/springframework/data/mongodb/core/index/Index/Index()
io/corbel/resources/rem/dao/DefaultMongoResmiDao/ensureExpireIndex(io.corbel.resources.rem.model.ResourceUri)#org/springframework/data/mongodb/core/IndexOperations/ensureIndex(org.springframework.data.mongodb.core.index.IndexDefinition)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/ensureExpireIndex(io.corbel.resources.rem.model.ResourceUri)#org/springframework/data/mongodb/core/index/Index/expire(long)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/ensureExpireIndex(io.corbel.resources.rem.model.ResourceUri)#org/springframework/data/mongodb/core/index/Index/on(java.lang.String,org.springframework.data.domain.Sort.Direction)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/ensureExpireIndex(io.corbel.resources.rem.model.ResourceUri)#org/springframework/data/mongodb/core/MongoOperations/indexOps(java.lang.String)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/updateCollection(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject,java.util.List)#io/corbel/resources/rem/dao/DefaultMongoResmiDao/updateMulti(java.lang.String,com.google.gson.JsonObject,java.util.Optional)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/updateCollection(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject,java.util.List)#io/corbel/resources/rem/dao/DefaultMongoResmiDao/getMongoCollectionName(io.corbel.resources.rem.model.ResourceUri)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/updateCollection(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject,java.util.List)#java/util/Optional/of(T)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/findAndRemove(io.corbel.resources.rem.model.ResourceUri,org.springframework.data.mongodb.core.query.Criteria)#io/corbel/resources/rem/dao/DefaultMongoResmiDao/getMongoCollectionName(io.corbel.resources.rem.model.ResourceUri)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/findAndRemove(io.corbel.resources.rem.model.ResourceUri,org.springframework.data.mongodb.core.query.Criteria)#org/springframework/data/mongodb/core/MongoOperations/findAndRemove(org.springframework.data.mongodb.core.query.Query,java.lang.Class,java.lang.String)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/findAndRemove(io.corbel.resources.rem.model.ResourceUri,org.springframework.data.mongodb.core.query.Criteria)#org/springframework/data/mongodb/core/query/Query/Query(org.springframework.data.mongodb.core.query.CriteriaDefinition)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/withAllowDiskUseOption(org.springframework.data.mongodb.core.aggregation.Aggregation)#org/springframework/data/mongodb/core/aggregation/AggregationOptions/Builder/Builder()
io/corbel/resources/rem/dao/DefaultMongoResmiDao/withAllowDiskUseOption(org.springframework.data.mongodb.core.aggregation.Aggregation)#org/springframework/data/mongodb/core/aggregation/AggregationOptions/Builder/allowDiskUse(boolean)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/withAllowDiskUseOption(org.springframework.data.mongodb.core.aggregation.Aggregation)#org/springframework/data/mongodb/core/aggregation/Aggregation/withOptions(org.springframework.data.mongodb.core.aggregation.AggregationOptions)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/withAllowDiskUseOption(org.springframework.data.mongodb.core.aggregation.Aggregation)#org/springframework/data/mongodb/core/aggregation/AggregationOptions/Builder/build()
io/corbel/resources/rem/dao/DefaultMongoResmiDao/sum(io.corbel.resources.rem.model.ResourceUri,java.util.List,java.lang.String)#org/springframework/data/mongodb/core/aggregation/Aggregation/group(java.lang.String[])
io/corbel/resources/rem/dao/DefaultMongoResmiDao/sum(io.corbel.resources.rem.model.ResourceUri,java.util.List,java.lang.String)#org/springframework/data/mongodb/core/aggregation/GroupOperation/count()
io/corbel/resources/rem/dao/DefaultMongoResmiDao/sum(io.corbel.resources.rem.model.ResourceUri,java.util.List,java.lang.String)#org/springframework/data/mongodb/core/aggregation/GroupOperation/GroupOperationBuilder/as(java.lang.String)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/sum(io.corbel.resources.rem.model.ResourceUri,java.util.List,java.lang.String)#java/util/Optional/ofNullable(T)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/sum(io.corbel.resources.rem.model.ResourceUri,java.util.List,java.lang.String)#io/corbel/resources/rem/dao/DefaultMongoResmiDao/aggregate(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,org.springframework.data.mongodb.core.aggregation.AggregationOperation[])
io/corbel/resources/rem/dao/DefaultMongoResmiDao/sum(io.corbel.resources.rem.model.ResourceUri,java.util.List,java.lang.String)#io/corbel/lib/queries/request/AggregationResultsFactory/sumResult(java.util.Optional)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/sum(io.corbel.resources.rem.model.ResourceUri,java.util.List,java.lang.String)#io/corbel/resources/rem/dao/DefaultMongoResmiDao/getAggregationResultValue(java.lang.String,java.util.List,io.corbel.resources.rem.model.ResourceUri,java.lang.String)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/sum(io.corbel.resources.rem.model.ResourceUri,java.util.List,java.lang.String)#org/springframework/data/mongodb/core/aggregation/GroupOperation/sum(java.lang.String)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/saveResource(io.corbel.resources.rem.model.ResourceUri,java.lang.Object)#io/corbel/resources/rem/dao/DefaultMongoResmiDao/getMongoCollectionName(io.corbel.resources.rem.model.ResourceUri)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/saveResource(io.corbel.resources.rem.model.ResourceUri,java.lang.Object)#org/springframework/data/mongodb/core/MongoOperations/save(java.lang.Object,java.lang.String)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/findCollectionAsStream(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,java.util.Optional,java.util.Optional,java.util.Optional,java.lang.Class)#org/springframework/data/util/StreamUtils/createStreamFromIterator(java.util.Iterator)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/findCollectionAsStream(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,java.util.Optional,java.util.Optional,java.util.Optional,java.lang.Class)#org/springframework/data/mongodb/core/MongoOperations/stream(org.springframework.data.mongodb.core.query.Query,java.lang.Class,java.lang.String)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/findCollectionAsStream(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,java.util.Optional,java.util.Optional,java.util.Optional,java.lang.Class)#io/corbel/resources/rem/dao/DefaultMongoResmiDao/getMongoCollectionName(io.corbel.resources.rem.model.ResourceUri)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/findCollectionAsStream(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,java.util.Optional,java.util.Optional,java.util.Optional,java.lang.Class)#io/corbel/resources/rem/dao/DefaultMongoResmiDao/getCollectionQuery(java.util.Optional,java.util.Optional,java.util.Optional,java.util.Optional)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/getQueryFromResourceQuery(java.util.Optional,java.util.Optional)#java/util/Optional/get()
io/corbel/resources/rem/dao/DefaultMongoResmiDao/getQueryFromResourceQuery(java.util.Optional,java.util.Optional)#java/util/Optional/orElse(T)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/getQueryFromResourceQuery(java.util.Optional,java.util.Optional)#io/corbel/resources/rem/dao/MongoResmiQueryBuilder/query(java.util.List)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/getQueryFromResourceQuery(java.util.Optional,java.util.Optional)#java/util/Optional/map(java.util.function.Function)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/getQueryFromResourceQuery(java.util.Optional,java.util.Optional)#io/corbel/resources/rem/dao/MongoResmiQueryBuilder/MongoResmiQueryBuilder()
io/corbel/resources/rem/dao/DefaultMongoResmiDao/getQueryFromResourceQuery(java.util.Optional,java.util.Optional)#java/util/Optional/isPresent()
io/corbel/resources/rem/dao/DefaultMongoResmiDao/getQueryFromResourceQuery(java.util.Optional,java.util.Optional)#io/corbel/lib/queries/mongo/builder/MongoQueryBuilder/build()
io/corbel/resources/rem/dao/DefaultMongoResmiDao/findRelationAsStream(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,java.util.Optional,java.util.Optional,java.util.Optional,java.lang.Class)#io/corbel/resources/rem/dao/DefaultMongoResmiDao/getMongoCollectionName(io.corbel.resources.rem.model.ResourceUri)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/findRelationAsStream(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,java.util.Optional,java.util.Optional,java.util.Optional,java.lang.Class)#org/springframework/data/util/StreamUtils/createStreamFromIterator(java.util.Iterator)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/findRelationAsStream(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,java.util.Optional,java.util.Optional,java.util.Optional,java.lang.Class)#org/springframework/data/mongodb/core/MongoOperations/stream(org.springframework.data.mongodb.core.query.Query,java.lang.Class,java.lang.String)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/findRelationAsStream(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,java.util.Optional,java.util.Optional,java.util.Optional,java.lang.Class)#io/corbel/resources/rem/dao/DefaultMongoResmiDao/getRelationQuery(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,java.util.Optional,java.util.Optional,java.util.Optional)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/moveRelation(io.corbel.resources.rem.model.ResourceUri,io.corbel.resources.rem.dao.RelationMoveOperation)#io/corbel/resources/rem/dao/ResmiOrder/moveRelation(io.corbel.resources.rem.model.ResourceUri,io.corbel.resources.rem.dao.RelationMoveOperation)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/findResource(io.corbel.resources.rem.model.ResourceUri,java.lang.Class)#io/corbel/resources/rem/dao/DefaultMongoResmiDao/getMongoCollectionName(io.corbel.resources.rem.model.ResourceUri)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/findResource(io.corbel.resources.rem.model.ResourceUri,java.lang.Class)#io/corbel/resources/rem/model/ResourceUri/getTypeId()
io/corbel/resources/rem/dao/DefaultMongoResmiDao/findResource(io.corbel.resources.rem.model.ResourceUri,java.lang.Class)#org/springframework/data/mongodb/core/MongoOperations/findById(java.lang.Object,java.lang.Class,java.lang.String)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/histogram(io.corbel.resources.rem.model.ResourceUri,java.util.List,java.util.Optional,java.util.Optional,java.lang.String)#org/springframework/data/mongodb/core/aggregation/Aggregation/sort(org.springframework.data.domain.Sort.Direction,java.lang.String[])
io/corbel/resources/rem/dao/DefaultMongoResmiDao/histogram(io.corbel.resources.rem.model.ResourceUri,java.util.List,java.util.Optional,java.util.Optional,java.lang.String)#java/util/stream/Stream/collect(java.util.stream.Collector)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/histogram(io.corbel.resources.rem.model.ResourceUri,java.util.List,java.util.Optional,java.util.Optional,java.lang.String)#org/springframework/data/mongodb/core/aggregation/GroupOperation/GroupOperationBuilder/as(java.lang.String)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/histogram(io.corbel.resources.rem.model.ResourceUri,java.util.List,java.util.Optional,java.util.Optional,java.lang.String)#java/util/List/toArray(T[])
io/corbel/resources/rem/dao/DefaultMongoResmiDao/histogram(io.corbel.resources.rem.model.ResourceUri,java.util.List,java.util.Optional,java.util.Optional,java.lang.String)#org/springframework/data/mongodb/core/aggregation/Aggregation/limit(long)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/histogram(io.corbel.resources.rem.model.ResourceUri,java.util.List,java.util.Optional,java.util.Optional,java.lang.String)#io/corbel/lib/queries/request/AggregationResultsFactory/histogramResult(io.corbel.lib.queries.request.HistogramEntry[])
io/corbel/resources/rem/dao/DefaultMongoResmiDao/histogram(io.corbel.resources.rem.model.ResourceUri,java.util.List,java.util.Optional,java.util.Optional,java.lang.String)#java/util/List/size()
io/corbel/resources/rem/dao/DefaultMongoResmiDao/histogram(io.corbel.resources.rem.model.ResourceUri,java.util.List,java.util.Optional,java.util.Optional,java.lang.String)#io/corbel/resources/rem/dao/DefaultMongoResmiDao/aggregate(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,org.springframework.data.mongodb.core.aggregation.AggregationOperation[])
io/corbel/resources/rem/dao/DefaultMongoResmiDao/histogram(io.corbel.resources.rem.model.ResourceUri,java.util.List,java.util.Optional,java.util.Optional,java.lang.String)#org/springframework/data/mongodb/core/aggregation/Fields/field(java.lang.String,java.lang.String)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/histogram(io.corbel.resources.rem.model.ResourceUri,java.util.List,java.util.Optional,java.util.Optional,java.lang.String)#io/corbel/resources/rem/dao/DefaultMongoResmiDao/histogram(io/corbel/resources/rem/model/ResourceUri,java/util/List,java/util/Optional,java/util/Optional,java/lang/String)/$anonymous1/(com.mongodb.DBObject)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/histogram(io.corbel.resources.rem.model.ResourceUri,java.util.List,java.util.Optional,java.util.Optional,java.lang.String)#io/corbel/lib/queries/request/Pagination/getPage()
io/corbel/resources/rem/dao/DefaultMongoResmiDao/histogram(io.corbel.resources.rem.model.ResourceUri,java.util.List,java.util.Optional,java.util.Optional,java.lang.String)#java/util/stream/Stream/map(java.util.function.Function)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/histogram(io.corbel.resources.rem.model.ResourceUri,java.util.List,java.util.Optional,java.util.Optional,java.lang.String)#io/corbel/lib/queries/request/Sort/getDirection()
io/corbel/resources/rem/dao/DefaultMongoResmiDao/histogram(io.corbel.resources.rem.model.ResourceUri,java.util.List,java.util.Optional,java.util.Optional,java.lang.String)#java/util/Optional/get()
io/corbel/resources/rem/dao/DefaultMongoResmiDao/histogram(io.corbel.resources.rem.model.ResourceUri,java.util.List,java.util.Optional,java.util.Optional,java.lang.String)#io/corbel/lib/queries/request/Pagination/getPageSize()
io/corbel/resources/rem/dao/DefaultMongoResmiDao/histogram(io.corbel.resources.rem.model.ResourceUri,java.util.List,java.util.Optional,java.util.Optional,java.lang.String)#org/springframework/data/mongodb/core/aggregation/Aggregation/skip(int)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/histogram(io.corbel.resources.rem.model.ResourceUri,java.util.List,java.util.Optional,java.util.Optional,java.lang.String)#java/util/Collection/stream()
io/corbel/resources/rem/dao/DefaultMongoResmiDao/histogram(io.corbel.resources.rem.model.ResourceUri,java.util.List,java.util.Optional,java.util.Optional,java.lang.String)#java/util/stream/Collectors/toList()
io/corbel/resources/rem/dao/DefaultMongoResmiDao/histogram(io.corbel.resources.rem.model.ResourceUri,java.util.List,java.util.Optional,java.util.Optional,java.lang.String)#org/springframework/data/mongodb/core/aggregation/Aggregation/group(org.springframework.data.mongodb.core.aggregation.Fields)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/histogram(io.corbel.resources.rem.model.ResourceUri,java.util.List,java.util.Optional,java.util.Optional,java.lang.String)#java/util/Optional/ofNullable(T)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/histogram(io.corbel.resources.rem.model.ResourceUri,java.util.List,java.util.Optional,java.util.Optional,java.lang.String)#org/springframework/data/mongodb/core/aggregation/GroupOperation/push(java.lang.String)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/histogram(io.corbel.resources.rem.model.ResourceUri,java.util.List,java.util.Optional,java.util.Optional,java.lang.String)#org/springframework/data/mongodb/core/aggregation/Fields/from(org.springframework.data.mongodb.core.aggregation.Field[])
io/corbel/resources/rem/dao/DefaultMongoResmiDao/histogram(io.corbel.resources.rem.model.ResourceUri,java.util.List,java.util.Optional,java.util.Optional,java.lang.String)#org/apache/commons/lang3/ArrayUtils/add(T[],T)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/histogram(io.corbel.resources.rem.model.ResourceUri,java.util.List,java.util.Optional,java.util.Optional,java.lang.String)#com/mongodb/BasicDBObject/BasicDBObject(java.lang.String,java.lang.Object)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/histogram(io.corbel.resources.rem.model.ResourceUri,java.util.List,java.util.Optional,java.util.Optional,java.lang.String)#io/corbel/lib/queries/request/Sort/getField()
io/corbel/resources/rem/dao/DefaultMongoResmiDao/histogram(io.corbel.resources.rem.model.ResourceUri,java.util.List,java.util.Optional,java.util.Optional,java.lang.String)#org/apache/commons/lang3/ArrayUtils/addAll(T[],T[])
io/corbel/resources/rem/dao/DefaultMongoResmiDao/histogram(io.corbel.resources.rem.model.ResourceUri,java.util.List,java.util.Optional,java.util.Optional,java.lang.String)#java/util/Optional/isPresent()
io/corbel/resources/rem/dao/DefaultMongoResmiDao/max(io.corbel.resources.rem.model.ResourceUri,java.util.List,java.lang.String)#org/bson/BSONObject/get(java.lang.String)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/max(io.corbel.resources.rem.model.ResourceUri,java.util.List,java.lang.String)#org/springframework/data/mongodb/core/aggregation/Aggregation/group(java.lang.String[])
io/corbel/resources/rem/dao/DefaultMongoResmiDao/max(io.corbel.resources.rem.model.ResourceUri,java.util.List,java.lang.String)#org/springframework/data/mongodb/core/aggregation/GroupOperation/GroupOperationBuilder/as(java.lang.String)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/max(io.corbel.resources.rem.model.ResourceUri,java.util.List,java.lang.String)#java/util/List/isEmpty()
io/corbel/resources/rem/dao/DefaultMongoResmiDao/max(io.corbel.resources.rem.model.ResourceUri,java.util.List,java.lang.String)#io/corbel/lib/queries/request/AggregationResultsFactory/maxResult(java.util.Optional)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/max(io.corbel.resources.rem.model.ResourceUri,java.util.List,java.lang.String)#java/util/Optional/ofNullable(T)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/max(io.corbel.resources.rem.model.ResourceUri,java.util.List,java.lang.String)#io/corbel/resources/rem/dao/DefaultMongoResmiDao/aggregate(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,org.springframework.data.mongodb.core.aggregation.AggregationOperation[])
io/corbel/resources/rem/dao/DefaultMongoResmiDao/max(io.corbel.resources.rem.model.ResourceUri,java.util.List,java.lang.String)#org/springframework/data/mongodb/core/aggregation/GroupOperation/max(java.lang.String)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/max(io.corbel.resources.rem.model.ResourceUri,java.util.List,java.lang.String)#java/util/Optional/empty()
io/corbel/resources/rem/dao/DefaultMongoResmiDao/max(io.corbel.resources.rem.model.ResourceUri,java.util.List,java.lang.String)#java/util/List/get(int)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/deleteResource(io.corbel.resources.rem.model.ResourceUri)#org/springframework/data/mongodb/core/query/Criteria/is(java.lang.Object)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/deleteResource(io.corbel.resources.rem.model.ResourceUri)#io/corbel/resources/rem/dao/DefaultMongoResmiDao/findAndRemove(io.corbel.resources.rem.model.ResourceUri,org.springframework.data.mongodb.core.query.Criteria)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/deleteResource(io.corbel.resources.rem.model.ResourceUri)#org/springframework/data/mongodb/core/query/Criteria/where(java.lang.String)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/deleteResource(io.corbel.resources.rem.model.ResourceUri)#io/corbel/resources/rem/model/ResourceUri/getTypeId()
io/corbel/resources/rem/dao/DefaultMongoResmiDao/count(io.corbel.resources.rem.model.ResourceUri,java.util.List)#io/corbel/resources/rem/dao/DefaultMongoResmiDao/getMongoCollectionName(io.corbel.resources.rem.model.ResourceUri)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/count(io.corbel.resources.rem.model.ResourceUri,java.util.List)#java/lang/Object/toString()
io/corbel/resources/rem/dao/DefaultMongoResmiDao/count(io.corbel.resources.rem.model.ResourceUri,java.util.List)#io/corbel/resources/rem/dao/MongoResmiQueryBuilder/query(java.util.List)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/count(io.corbel.resources.rem.model.ResourceUri,java.util.List)#org/springframework/data/mongodb/core/query/Query/getQueryObject()
io/corbel/resources/rem/dao/DefaultMongoResmiDao/count(io.corbel.resources.rem.model.ResourceUri,java.util.List)#io/corbel/resources/rem/dao/MongoResmiQueryBuilder/MongoResmiQueryBuilder()
io/corbel/resources/rem/dao/DefaultMongoResmiDao/count(io.corbel.resources.rem.model.ResourceUri,java.util.List)#io/corbel/lib/queries/builder/QueryBuilder/build()
io/corbel/resources/rem/dao/DefaultMongoResmiDao/count(io.corbel.resources.rem.model.ResourceUri,java.util.List)#org/springframework/data/mongodb/core/query/Query/fields()
io/corbel/resources/rem/dao/DefaultMongoResmiDao/count(io.corbel.resources.rem.model.ResourceUri,java.util.List)#io/corbel/resources/rem/model/ResourceUri/isRelation()
io/corbel/resources/rem/dao/DefaultMongoResmiDao/count(io.corbel.resources.rem.model.ResourceUri,java.util.List)#org/springframework/data/mongodb/core/query/Field/exclude(java.lang.String)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/count(io.corbel.resources.rem.model.ResourceUri,java.util.List)#org/slf4j/Logger/debug(java.lang.String)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/count(io.corbel.resources.rem.model.ResourceUri,java.util.List)#org/springframework/data/mongodb/core/MongoOperations/count(org.springframework.data.mongodb.core.query.Query,java.lang.String)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/count(io.corbel.resources.rem.model.ResourceUri,java.util.List)#io/corbel/lib/queries/request/AggregationResultsFactory/countResult(long)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/count(io.corbel.resources.rem.model.ResourceUri,java.util.List)#io/corbel/resources/rem/dao/MongoResmiQueryBuilder/relationSubjectId(io.corbel.resources.rem.model.ResourceUri)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/existsResources(io.corbel.resources.rem.model.ResourceUri)#io/corbel/resources/rem/dao/DefaultMongoResmiDao/getMongoCollectionName(io.corbel.resources.rem.model.ResourceUri)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/existsResources(io.corbel.resources.rem.model.ResourceUri)#org/springframework/data/mongodb/core/query/Criteria/is(java.lang.Object)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/existsResources(io.corbel.resources.rem.model.ResourceUri)#org/springframework/data/mongodb/core/query/Criteria/where(java.lang.String)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/existsResources(io.corbel.resources.rem.model.ResourceUri)#io/corbel/resources/rem/model/ResourceUri/getTypeId()
io/corbel/resources/rem/dao/DefaultMongoResmiDao/existsResources(io.corbel.resources.rem.model.ResourceUri)#org/springframework/data/mongodb/core/query/Query/query(org.springframework.data.mongodb.core.query.CriteriaDefinition)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/existsResources(io.corbel.resources.rem.model.ResourceUri)#org/springframework/data/mongodb/core/MongoOperations/exists(org.springframework.data.mongodb.core.query.Query,java.lang.String)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/aggregate(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,org.springframework.data.mongodb.core.aggregation.AggregationOperation[])#io/corbel/resources/rem/dao/DefaultMongoResmiDao/aggregate(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,java.util.Optional,java.util.Optional,java.util.Optional,java.lang.Class,org.springframework.data.mongodb.core.aggregation.AggregationOperation[])
io/corbel/resources/rem/dao/DefaultMongoResmiDao/aggregate(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,org.springframework.data.mongodb.core.aggregation.AggregationOperation[])#java/util/Optional/empty()
io/corbel/resources/rem/dao/DefaultMongoResmiDao/findAndModify(java.lang.String,java.util.Optional,com.google.gson.JsonObject,boolean,java.util.Optional)#org/springframework/data/mongodb/core/FindAndModifyOptions/upsert(boolean)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/findAndModify(java.lang.String,java.util.Optional,com.google.gson.JsonObject,boolean,java.util.Optional)#io/corbel/resources/rem/dao/DefaultMongoResmiDao/getQueryFromResourceQuery(java.util.Optional,java.util.Optional)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/findAndModify(java.lang.String,java.util.Optional,com.google.gson.JsonObject,boolean,java.util.Optional)#org/springframework/data/mongodb/core/query/Criteria/where(java.lang.String)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/findAndModify(java.lang.String,java.util.Optional,com.google.gson.JsonObject,boolean,java.util.Optional)#org/springframework/data/mongodb/core/query/Query/query(org.springframework.data.mongodb.core.query.CriteriaDefinition)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/findAndModify(java.lang.String,java.util.Optional,com.google.gson.JsonObject,boolean,java.util.Optional)#org/springframework/data/mongodb/core/query/Criteria/exists(boolean)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/findAndModify(java.lang.String,java.util.Optional,com.google.gson.JsonObject,boolean,java.util.Optional)#org/springframework/data/mongodb/core/MongoOperations/findAndModify(org.springframework.data.mongodb.core.query.Query,org.springframework.data.mongodb.core.query.Update,org.springframework.data.mongodb.core.FindAndModifyOptions,java.lang.Class,java.lang.String)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/findAndModify(java.lang.String,java.util.Optional,com.google.gson.JsonObject,boolean,java.util.Optional)#java/util/Optional/isPresent()
io/corbel/resources/rem/dao/DefaultMongoResmiDao/findAndModify(java.lang.String,java.util.Optional,com.google.gson.JsonObject,boolean,java.util.Optional)#io/corbel/resources/rem/dao/DefaultMongoResmiDao/updateFromJsonObject(com.google.gson.JsonObject,java.util.Optional)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/findAndModify(java.lang.String,java.util.Optional,com.google.gson.JsonObject,boolean,java.util.Optional)#org/springframework/data/mongodb/core/FindAndModifyOptions/returnNew(boolean)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/findAndModify(java.lang.String,java.util.Optional,com.google.gson.JsonObject,boolean,java.util.Optional)#org/springframework/data/mongodb/core/FindAndModifyOptions/options()
io/corbel/resources/rem/dao/DefaultMongoResmiDao/conditionalUpdateRelation(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject,java.util.List)#io/corbel/resources/rem/dao/DefaultMongoResmiDao/findModifyRelation(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject,java.util.List)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/average(io.corbel.resources.rem.model.ResourceUri,java.util.List,java.lang.String)#org/springframework/data/mongodb/core/aggregation/Aggregation/group(java.lang.String[])
io/corbel/resources/rem/dao/DefaultMongoResmiDao/average(io.corbel.resources.rem.model.ResourceUri,java.util.List,java.lang.String)#org/springframework/data/mongodb/core/aggregation/GroupOperation/avg(java.lang.String)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/average(io.corbel.resources.rem.model.ResourceUri,java.util.List,java.lang.String)#org/springframework/data/mongodb/core/aggregation/GroupOperation/count()
io/corbel/resources/rem/dao/DefaultMongoResmiDao/average(io.corbel.resources.rem.model.ResourceUri,java.util.List,java.lang.String)#io/corbel/lib/queries/request/AggregationResultsFactory/averageResult(java.util.Optional)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/average(io.corbel.resources.rem.model.ResourceUri,java.util.List,java.lang.String)#org/springframework/data/mongodb/core/aggregation/GroupOperation/GroupOperationBuilder/as(java.lang.String)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/average(io.corbel.resources.rem.model.ResourceUri,java.util.List,java.lang.String)#java/util/List/isEmpty()
io/corbel/resources/rem/dao/DefaultMongoResmiDao/average(io.corbel.resources.rem.model.ResourceUri,java.util.List,java.lang.String)#java/util/Optional/ofNullable(T)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/average(io.corbel.resources.rem.model.ResourceUri,java.util.List,java.lang.String)#io/corbel/resources/rem/dao/DefaultMongoResmiDao/aggregate(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,org.springframework.data.mongodb.core.aggregation.AggregationOperation[])
io/corbel/resources/rem/dao/DefaultMongoResmiDao/average(io.corbel.resources.rem.model.ResourceUri,java.util.List,java.lang.String)#java/util/Optional/empty()
io/corbel/resources/rem/dao/DefaultMongoResmiDao/average(io.corbel.resources.rem.model.ResourceUri,java.util.List,java.lang.String)#io/corbel/resources/rem/dao/DefaultMongoResmiDao/fieldNotExists(io.corbel.resources.rem.model.ResourceUri,java.lang.String,java.util.List,java.lang.String)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/average(io.corbel.resources.rem.model.ResourceUri,java.util.List,java.lang.String)#io/corbel/resources/rem/dao/DefaultMongoResmiDao/getAggregationResultValue(java.lang.String,java.util.List,io.corbel.resources.rem.model.ResourceUri,java.lang.String)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/deleteRelation(io.corbel.resources.rem.model.ResourceUri,java.util.Optional)#java/util/stream/Stream/map(java.util.function.Function)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/deleteRelation(io.corbel.resources.rem.model.ResourceUri,java.util.Optional)#org/springframework/data/mongodb/core/query/Criteria/is(java.lang.Object)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/deleteRelation(io.corbel.resources.rem.model.ResourceUri,java.util.Optional)#java/util/stream/Stream/collect(java.util.stream.Collector)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/deleteRelation(io.corbel.resources.rem.model.ResourceUri,java.util.Optional)#java/util/Optional/orElse(T)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/deleteRelation(io.corbel.resources.rem.model.ResourceUri,java.util.Optional)#io/corbel/resources/rem/model/ResourceUri/getTypeId()
io/corbel/resources/rem/dao/DefaultMongoResmiDao/deleteRelation(io.corbel.resources.rem.model.ResourceUri,java.util.Optional)#io/corbel/resources/rem/model/ResourceUri/isTypeWildcard()
io/corbel/resources/rem/dao/DefaultMongoResmiDao/deleteRelation(io.corbel.resources.rem.model.ResourceUri,java.util.Optional)#io/corbel/lib/queries/mongo/builder/CriteriaBuilder/buildFromResourceQueries(java.util.List)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/deleteRelation(io.corbel.resources.rem.model.ResourceUri,java.util.Optional)#org/springframework/data/mongodb/core/query/Criteria/and(java.lang.String)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/deleteRelation(io.corbel.resources.rem.model.ResourceUri,java.util.Optional)#java/util/Collections/emptyList()
io/corbel/resources/rem/dao/DefaultMongoResmiDao/deleteRelation(io.corbel.resources.rem.model.ResourceUri,java.util.Optional)#java/util/Collection/stream()
io/corbel/resources/rem/dao/DefaultMongoResmiDao/deleteRelation(io.corbel.resources.rem.model.ResourceUri,java.util.Optional)#java/util/stream/Collectors/toList()
io/corbel/resources/rem/dao/DefaultMongoResmiDao/deleteRelation(io.corbel.resources.rem.model.ResourceUri,java.util.Optional)#io/corbel/resources/rem/dao/DefaultMongoResmiDao/findAllAndRemove(io.corbel.resources.rem.model.ResourceUri,org.springframework.data.mongodb.core.query.Criteria,java.lang.Class)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/deleteRelation(io.corbel.resources.rem.model.ResourceUri,java.util.Optional)#io/corbel/resources/rem/model/ResourceUri/getRelationId()
io/corbel/resources/rem/dao/DefaultMongoResmiDao/fieldNotExists(io.corbel.resources.rem.model.ResourceUri,java.lang.String,java.util.List,java.lang.String)#org/springframework/data/mongodb/core/MongoOperations/count(org.springframework.data.mongodb.core.query.Query,java.lang.String)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/fieldNotExists(io.corbel.resources.rem.model.ResourceUri,java.lang.String,java.util.List,java.lang.String)#org/bson/BSONObject/get(java.lang.String)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/fieldNotExists(io.corbel.resources.rem.model.ResourceUri,java.lang.String,java.util.List,java.lang.String)#io/corbel/resources/rem/dao/DefaultMongoResmiDao/getMongoCollectionName(io.corbel.resources.rem.model.ResourceUri)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/fieldNotExists(io.corbel.resources.rem.model.ResourceUri,java.lang.String,java.util.List,java.lang.String)#java/lang/Object/equals(java.lang.Object)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/fieldNotExists(io.corbel.resources.rem.model.ResourceUri,java.lang.String,java.util.List,java.lang.String)#org/springframework/data/mongodb/core/query/Criteria/where(java.lang.String)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/fieldNotExists(io.corbel.resources.rem.model.ResourceUri,java.lang.String,java.util.List,java.lang.String)#org/springframework/data/mongodb/core/query/Query/query(org.springframework.data.mongodb.core.query.CriteriaDefinition)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/fieldNotExists(io.corbel.resources.rem.model.ResourceUri,java.lang.String,java.util.List,java.lang.String)#org/springframework/data/mongodb/core/query/Criteria/exists(boolean)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/fieldNotExists(io.corbel.resources.rem.model.ResourceUri,java.lang.String,java.util.List,java.lang.String)#java/util/List/get(int)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/upsertRelation(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject)#io/corbel/resources/rem/dao/ResmiOrder/addNextOrderInRelation(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/upsertRelation(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject)#io/corbel/resources/rem/dao/JsonRelation/create(java.lang.String,java.lang.String,com.google.gson.JsonObject)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/upsertRelation(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject)#io/corbel/resources/rem/model/ResourceUri/getTypeId()
io/corbel/resources/rem/dao/DefaultMongoResmiDao/upsertRelation(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject)#java/util/Optional/ofNullable(T)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/upsertRelation(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject)#io/corbel/resources/rem/dao/DefaultMongoResmiDao/existsResources(io.corbel.resources.rem.model.ResourceUri)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/upsertRelation(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject)#io/corbel/resources/rem/dao/DefaultMongoResmiDao/findAndModify(java.lang.String,java.util.Optional,com.google.gson.JsonObject,boolean,java.util.Optional)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/upsertRelation(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject)#io/corbel/resources/rem/model/ResourceUri/getType()
io/corbel/resources/rem/dao/DefaultMongoResmiDao/upsertRelation(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject)#com/google/gson/JsonObject/JsonObject()
io/corbel/resources/rem/dao/DefaultMongoResmiDao/upsertRelation(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject)#java/util/Optional/empty()
io/corbel/resources/rem/dao/DefaultMongoResmiDao/upsertRelation(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject)#io/corbel/resources/rem/dao/DefaultMongoResmiDao/findModifyOrCreateRelation(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/upsertRelation(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject)#io/corbel/resources/rem/model/ResourceUri/getDomain()
io/corbel/resources/rem/dao/DefaultMongoResmiDao/upsertRelation(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject)#com/google/gson/JsonElement/getAsString()
io/corbel/resources/rem/dao/DefaultMongoResmiDao/upsertRelation(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject)#com/google/gson/JsonObject/get(java.lang.String)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/upsertRelation(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject)#io/corbel/resources/rem/dao/DefaultMongoResmiDao/getMongoCollectionName(io.corbel.resources.rem.model.ResourceUri)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/upsertRelation(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject)#io/corbel/resources/rem/model/ResourceUri/ResourceUri(java.lang.String,java.lang.String,java.lang.String)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/upsertRelation(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject)#com/google/gson/JsonObject/has(java.lang.String)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/upsertRelation(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject)#io/corbel/resources/rem/dao/NotFoundException/NotFoundException(java.lang.String)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/upsertRelation(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject)#io/corbel/resources/rem/model/ResourceUri/getRelationId()
io/corbel/resources/rem/dao/DefaultMongoResmiDao/deleteCollection(io.corbel.resources.rem.model.ResourceUri,java.util.Optional)#java/util/Optional/orElse(T)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/deleteCollection(io.corbel.resources.rem.model.ResourceUri,java.util.Optional)#java/util/Collections/emptyList()
io/corbel/resources/rem/dao/DefaultMongoResmiDao/deleteCollection(io.corbel.resources.rem.model.ResourceUri,java.util.Optional)#io/corbel/resources/rem/dao/DefaultMongoResmiDao/findAllAndRemove(io.corbel.resources.rem.model.ResourceUri,org.springframework.data.mongodb.core.query.Criteria,java.lang.Class)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/deleteCollection(io.corbel.resources.rem.model.ResourceUri,java.util.Optional)#io/corbel/lib/queries/mongo/builder/CriteriaBuilder/buildFromResourceQueries(java.util.List)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/findCollection(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,java.util.Optional,java.util.Optional,java.util.Optional,java.lang.Class)#org/slf4j/Logger/debug(java.lang.String)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/findCollection(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,java.util.Optional,java.util.Optional,java.util.Optional,java.lang.Class)#java/lang/Object/toString()
io/corbel/resources/rem/dao/DefaultMongoResmiDao/findCollection(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,java.util.Optional,java.util.Optional,java.util.Optional,java.lang.Class)#org/springframework/data/mongodb/core/MongoOperations/find(org.springframework.data.mongodb.core.query.Query,java.lang.Class,java.lang.String)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/findCollection(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,java.util.Optional,java.util.Optional,java.util.Optional,java.lang.Class)#org/springframework/data/mongodb/core/query/Query/getQueryObject()
io/corbel/resources/rem/dao/DefaultMongoResmiDao/findCollection(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,java.util.Optional,java.util.Optional,java.util.Optional,java.lang.Class)#io/corbel/resources/rem/dao/DefaultMongoResmiDao/getMongoCollectionName(io.corbel.resources.rem.model.ResourceUri)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/findCollection(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,java.util.Optional,java.util.Optional,java.util.Optional,java.lang.Class)#io/corbel/resources/rem/dao/DefaultMongoResmiDao/getCollectionQuery(java.util.Optional,java.util.Optional,java.util.Optional,java.util.Optional)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/getAggregationResultValue(java.lang.String,java.util.List,io.corbel.resources.rem.model.ResourceUri,java.lang.String)#org/bson/BSONObject/get(java.lang.String)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/getAggregationResultValue(java.lang.String,java.util.List,io.corbel.resources.rem.model.ResourceUri,java.lang.String)#java/util/List/isEmpty()
io/corbel/resources/rem/dao/DefaultMongoResmiDao/getAggregationResultValue(java.lang.String,java.util.List,io.corbel.resources.rem.model.ResourceUri,java.lang.String)#java/util/Optional/ofNullable(T)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/getAggregationResultValue(java.lang.String,java.util.List,io.corbel.resources.rem.model.ResourceUri,java.lang.String)#java/util/Optional/map(java.util.function.Function)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/getAggregationResultValue(java.lang.String,java.util.List,io.corbel.resources.rem.model.ResourceUri,java.lang.String)#io/corbel/resources/rem/dao/DefaultMongoResmiDao/isValidAggregationResult(com.mongodb.DBObject,io.corbel.resources.rem.model.ResourceUri,java.lang.String,java.lang.String)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/getAggregationResultValue(java.lang.String,java.util.List,io.corbel.resources.rem.model.ResourceUri,java.lang.String)#java/util/Optional/empty()
io/corbel/resources/rem/dao/DefaultMongoResmiDao/getAggregationResultValue(java.lang.String,java.util.List,io.corbel.resources.rem.model.ResourceUri,java.lang.String)#java/util/List/get(int)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/findModifyOrCreateRelation(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject)#org/springframework/data/mongodb/core/FindAndModifyOptions/upsert(boolean)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/findModifyOrCreateRelation(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject)#io/corbel/resources/rem/dao/DefaultMongoResmiDao/getMongoCollectionName(io.corbel.resources.rem.model.ResourceUri)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/findModifyOrCreateRelation(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject)#org/springframework/data/mongodb/core/query/Criteria/is(java.lang.Object)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/findModifyOrCreateRelation(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject)#org/springframework/data/mongodb/core/query/Criteria/where(java.lang.String)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/findModifyOrCreateRelation(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject)#org/springframework/data/mongodb/core/MongoOperations/save(java.lang.Object,java.lang.String)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/findModifyOrCreateRelation(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject)#io/corbel/resources/rem/model/ResourceUri/getTypeId()
io/corbel/resources/rem/dao/DefaultMongoResmiDao/findModifyOrCreateRelation(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject)#io/corbel/resources/rem/model/ResourceUri/getRelationId()
io/corbel/resources/rem/dao/DefaultMongoResmiDao/findModifyOrCreateRelation(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject)#org/springframework/data/mongodb/core/query/Criteria/and(java.lang.String)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/findModifyOrCreateRelation(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject)#io/corbel/resources/rem/dao/DefaultMongoResmiDao/updateFromJsonObject(com.google.gson.JsonObject,java.util.Optional)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/findModifyOrCreateRelation(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject)#org/springframework/data/mongodb/core/FindAndModifyOptions/returnNew(boolean)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/findModifyOrCreateRelation(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject)#org/springframework/data/mongodb/core/FindAndModifyOptions/options()
io/corbel/resources/rem/dao/DefaultMongoResmiDao/findModifyOrCreateRelation(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject)#org/springframework/data/mongodb/core/MongoOperations/findAndModify(org.springframework.data.mongodb.core.query.Query,org.springframework.data.mongodb.core.query.Update,org.springframework.data.mongodb.core.FindAndModifyOptions,java.lang.Class,java.lang.String)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/findModifyOrCreateRelation(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject)#org/springframework/data/mongodb/core/query/Query/Query(org.springframework.data.mongodb.core.query.CriteriaDefinition)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/findModifyOrCreateRelation(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject)#java/util/Optional/empty()
io/corbel/resources/rem/dao/DefaultMongoResmiDao/findModifyOrCreateRelation(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject)#org/springframework/data/mongodb/core/query/Update/set(java.lang.String,java.lang.Object)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/isValidAggregationResult(com.mongodb.DBObject,io.corbel.resources.rem.model.ResourceUri,java.lang.String,java.lang.String)#org/bson/BSONObject/get(java.lang.String)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/isValidAggregationResult(com.mongodb.DBObject,io.corbel.resources.rem.model.ResourceUri,java.lang.String,java.lang.String)#java/lang/Object/equals(java.lang.Object)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/isValidAggregationResult(com.mongodb.DBObject,io.corbel.resources.rem.model.ResourceUri,java.lang.String,java.lang.String)#io/corbel/resources/rem/dao/DefaultMongoResmiDao/collectionHasAtLeastOneEntryWithNumericInField(io.corbel.resources.rem.model.ResourceUri,java.lang.String)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/findRelation(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,java.util.Optional,java.util.Optional,java.util.Optional,java.lang.Class)#org/slf4j/Logger/debug(java.lang.String)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/findRelation(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,java.util.Optional,java.util.Optional,java.util.Optional,java.lang.Class)#io/corbel/resources/rem/dao/DefaultMongoResmiDao/getMongoCollectionName(io.corbel.resources.rem.model.ResourceUri)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/findRelation(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,java.util.Optional,java.util.Optional,java.util.Optional,java.lang.Class)#java/lang/Object/toString()
io/corbel/resources/rem/dao/DefaultMongoResmiDao/findRelation(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,java.util.Optional,java.util.Optional,java.util.Optional,java.lang.Class)#org/springframework/data/mongodb/core/MongoOperations/find(org.springframework.data.mongodb.core.query.Query,java.lang.Class,java.lang.String)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/findRelation(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,java.util.Optional,java.util.Optional,java.util.Optional,java.lang.Class)#org/springframework/data/mongodb/core/query/Query/getQueryObject()
io/corbel/resources/rem/dao/DefaultMongoResmiDao/findRelation(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,java.util.Optional,java.util.Optional,java.util.Optional,java.lang.Class)#io/corbel/resources/rem/dao/DefaultMongoResmiDao/getRelationQuery(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,java.util.Optional,java.util.Optional,java.util.Optional)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/dropIndex(io.corbel.resources.rem.model.ResourceUri,java.lang.String)#io/corbel/resources/rem/dao/DefaultMongoResmiDao/getMongoCollectionName(io.corbel.resources.rem.model.ResourceUri)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/dropIndex(io.corbel.resources.rem.model.ResourceUri,java.lang.String)#org/springframework/data/mongodb/core/IndexOperations/dropIndex(java.lang.String)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/dropIndex(io.corbel.resources.rem.model.ResourceUri,java.lang.String)#org/springframework/data/mongodb/core/MongoOperations/indexOps(java.lang.String)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/collectionHasAtLeastOneEntryWithNumericInField(io.corbel.resources.rem.model.ResourceUri,java.lang.String)#org/springframework/data/mongodb/core/MongoOperations/count(org.springframework.data.mongodb.core.query.Query,java.lang.String)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/collectionHasAtLeastOneEntryWithNumericInField(io.corbel.resources.rem.model.ResourceUri,java.lang.String)#io/corbel/resources/rem/dao/DefaultMongoResmiDao/getMongoCollectionName(io.corbel.resources.rem.model.ResourceUri)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/collectionHasAtLeastOneEntryWithNumericInField(io.corbel.resources.rem.model.ResourceUri,java.lang.String)#org/springframework/data/mongodb/core/query/Criteria/where(java.lang.String)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/collectionHasAtLeastOneEntryWithNumericInField(io.corbel.resources.rem.model.ResourceUri,java.lang.String)#org/springframework/data/mongodb/core/query/Criteria/type(int)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/collectionHasAtLeastOneEntryWithNumericInField(io.corbel.resources.rem.model.ResourceUri,java.lang.String)#org/springframework/data/mongodb/core/query/Query/query(org.springframework.data.mongodb.core.query.CriteriaDefinition)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/collectionHasAtLeastOneEntryWithNumericInField(io.corbel.resources.rem.model.ResourceUri,java.lang.String)#org/springframework/data/mongodb/core/query/Criteria/orOperator(org.springframework.data.mongodb.core.query.Criteria[])
io/corbel/resources/rem/dao/DefaultMongoResmiDao/ensureIndex(io.corbel.resources.rem.model.ResourceUri,org.springframework.data.mongodb.core.index.IndexDefinition)#io/corbel/resources/rem/dao/DefaultMongoResmiDao/getMongoCollectionName(io.corbel.resources.rem.model.ResourceUri)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/ensureIndex(io.corbel.resources.rem.model.ResourceUri,org.springframework.data.mongodb.core.index.IndexDefinition)#org/springframework/data/mongodb/core/IndexOperations/ensureIndex(org.springframework.data.mongodb.core.index.IndexDefinition)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/ensureIndex(io.corbel.resources.rem.model.ResourceUri,org.springframework.data.mongodb.core.index.IndexDefinition)#org/springframework/data/mongodb/core/MongoOperations/indexOps(java.lang.String)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/updateFromJsonObject(com.google.gson.JsonObject,java.util.Optional)#com/google/gson/JsonElement/isJsonObject()
io/corbel/resources/rem/dao/DefaultMongoResmiDao/updateFromJsonObject(com.google.gson.JsonObject,java.util.Optional)#com/google/gson/JsonObject/has(java.lang.String)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/updateFromJsonObject(com.google.gson.JsonObject,java.util.Optional)#java/util/Map/Entry/getValue()
io/corbel/resources/rem/dao/DefaultMongoResmiDao/updateFromJsonObject(com.google.gson.JsonObject,java.util.Optional)#com/google/gson/JsonElement/getAsJsonPrimitive()
io/corbel/resources/rem/dao/DefaultMongoResmiDao/updateFromJsonObject(com.google.gson.JsonObject,java.util.Optional)#com/google/gson/JsonElement/getAsLong()
io/corbel/resources/rem/dao/DefaultMongoResmiDao/updateFromJsonObject(com.google.gson.JsonObject,java.util.Optional)#java/util/Collection/stream()
io/corbel/resources/rem/dao/DefaultMongoResmiDao/updateFromJsonObject(com.google.gson.JsonObject,java.util.Optional)#java/util/Map/Entry/getKey()
io/corbel/resources/rem/dao/DefaultMongoResmiDao/updateFromJsonObject(com.google.gson.JsonObject,java.util.Optional)#io/corbel/lib/mongo/utils/GsonUtil/getPrimitive(com.google.gson.JsonPrimitive)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/updateFromJsonObject(com.google.gson.JsonObject,java.util.Optional)#java/util/Optional/isPresent()
io/corbel/resources/rem/dao/DefaultMongoResmiDao/updateFromJsonObject(com.google.gson.JsonObject,java.util.Optional)#com/google/gson/JsonObject/get(java.lang.String)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/updateFromJsonObject(com.google.gson.JsonObject,java.util.Optional)#org/springframework/data/mongodb/core/query/Update/setOnInsert(java.lang.String,java.lang.Object)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/updateFromJsonObject(com.google.gson.JsonObject,java.util.Optional)#java/util/Map/forEach(java.util.function.BiConsumer)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/updateFromJsonObject(com.google.gson.JsonObject,java.util.Optional)#io/corbel/lib/mongo/JsonObjectMongoWriteConverter/convert(com.google.gson.JsonElement)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/updateFromJsonObject(com.google.gson.JsonObject,java.util.Optional)#com/google/gson/JsonObject/remove(java.lang.String)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/updateFromJsonObject(com.google.gson.JsonObject,java.util.Optional)#org/bson/BSONObject/toMap()
io/corbel/resources/rem/dao/DefaultMongoResmiDao/updateFromJsonObject(com.google.gson.JsonObject,java.util.Optional)#java/util/stream/Stream/filter(java.util.function.Predicate)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/updateFromJsonObject(com.google.gson.JsonObject,java.util.Optional)#java/util/Set/isEmpty()
io/corbel/resources/rem/dao/DefaultMongoResmiDao/updateFromJsonObject(com.google.gson.JsonObject,java.util.Optional)#org/springframework/data/mongodb/core/query/Update/inc(java.lang.String,java.lang.Number)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/updateFromJsonObject(com.google.gson.JsonObject,java.util.Optional)#org/springframework/data/mongodb/core/query/Update/Update()
io/corbel/resources/rem/dao/DefaultMongoResmiDao/updateFromJsonObject(com.google.gson.JsonObject,java.util.Optional)#java/util/stream/Stream/forEach(java.util.function.Consumer)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/updateFromJsonObject(com.google.gson.JsonObject,java.util.Optional)#com/google/gson/JsonObject/getAsJsonObject(java.lang.String)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/updateFromJsonObject(com.google.gson.JsonObject,java.util.Optional)#org/springframework/data/mongodb/core/query/Update/set(java.lang.String,java.lang.Object)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/updateFromJsonObject(com.google.gson.JsonObject,java.util.Optional)#com/google/gson/JsonObject/entrySet()
io/corbel/resources/rem/dao/DefaultMongoResmiDao/findModifyRelation(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject,java.util.List)#org/springframework/data/mongodb/core/FindAndModifyOptions/upsert(boolean)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/findModifyRelation(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject,java.util.List)#io/corbel/resources/rem/dao/DefaultMongoResmiDao/getMongoCollectionName(io.corbel.resources.rem.model.ResourceUri)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/findModifyRelation(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject,java.util.List)#org/springframework/data/mongodb/core/query/Criteria/is(java.lang.Object)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/findModifyRelation(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject,java.util.List)#org/springframework/data/mongodb/core/query/Query/addCriteria(org.springframework.data.mongodb.core.query.CriteriaDefinition)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/findModifyRelation(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject,java.util.List)#org/springframework/data/mongodb/core/query/Criteria/where(java.lang.String)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/findModifyRelation(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject,java.util.List)#io/corbel/resources/rem/model/ResourceUri/getTypeId()
io/corbel/resources/rem/dao/DefaultMongoResmiDao/findModifyRelation(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject,java.util.List)#io/corbel/resources/rem/dao/MongoResmiQueryBuilder/query(java.util.List)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/findModifyRelation(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject,java.util.List)#io/corbel/resources/rem/model/ResourceUri/getRelationId()
io/corbel/resources/rem/dao/DefaultMongoResmiDao/findModifyRelation(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject,java.util.List)#io/corbel/resources/rem/dao/MongoResmiQueryBuilder/MongoResmiQueryBuilder()
io/corbel/resources/rem/dao/DefaultMongoResmiDao/findModifyRelation(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject,java.util.List)#io/corbel/lib/queries/builder/QueryBuilder/build()
io/corbel/resources/rem/dao/DefaultMongoResmiDao/findModifyRelation(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject,java.util.List)#org/springframework/data/mongodb/core/query/Criteria/and(java.lang.String)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/findModifyRelation(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject,java.util.List)#io/corbel/resources/rem/dao/DefaultMongoResmiDao/updateFromJsonObject(com.google.gson.JsonObject,java.util.Optional)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/findModifyRelation(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject,java.util.List)#org/springframework/data/mongodb/core/FindAndModifyOptions/returnNew(boolean)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/findModifyRelation(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject,java.util.List)#org/springframework/data/mongodb/core/FindAndModifyOptions/options()
io/corbel/resources/rem/dao/DefaultMongoResmiDao/findModifyRelation(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject,java.util.List)#org/springframework/data/mongodb/core/MongoOperations/findAndModify(org.springframework.data.mongodb.core.query.Query,org.springframework.data.mongodb.core.query.Update,org.springframework.data.mongodb.core.FindAndModifyOptions,java.lang.Class,java.lang.String)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/findModifyRelation(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject,java.util.List)#java/util/Optional/empty()
io/corbel/resources/rem/dao/DefaultMongoResmiDao/findModifyRelation(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject,java.util.List)#org/springframework/data/mongodb/core/query/Update/set(java.lang.String,java.lang.Object)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/combine(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,java.util.Optional,java.util.Optional,java.lang.String,java.lang.String)#java/util/Optional/get()
io/corbel/resources/rem/dao/DefaultMongoResmiDao/combine(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,java.util.Optional,java.util.Optional,java.lang.String,java.lang.String)#java/lang/Enum/toString()
io/corbel/resources/rem/dao/DefaultMongoResmiDao/combine(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,java.util.Optional,java.util.Optional,java.lang.String,java.lang.String)#io/corbel/resources/rem/dao/DefaultMongoResmiDao/getMongoCollectionName(io.corbel.resources.rem.model.ResourceUri)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/combine(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,java.util.Optional,java.util.Optional,java.lang.String,java.lang.String)#org/springframework/data/mongodb/core/MongoOperations/aggregate(org.springframework.data.mongodb.core.aggregation.Aggregation,java.lang.String,java.lang.Class)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/combine(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,java.util.Optional,java.util.Optional,java.lang.String,java.lang.String)#io/corbel/resources/rem/dao/builder/MongoAggregationBuilder/build()
io/corbel/resources/rem/dao/DefaultMongoResmiDao/combine(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,java.util.Optional,java.util.Optional,java.lang.String,java.lang.String)#io/corbel/resources/rem/resmi/exception/InvalidApiParamException/InvalidApiParamException(java.lang.String)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/combine(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,java.util.Optional,java.util.Optional,java.lang.String,java.lang.String)#io/corbel/resources/rem/dao/builder/MongoAggregationBuilder/match(io.corbel.resources.rem.model.ResourceUri,java.util.Optional)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/combine(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,java.util.Optional,java.util.Optional,java.lang.String,java.lang.String)#org/springframework/expression/spel/SpelParseException/getMessage()
io/corbel/resources/rem/dao/DefaultMongoResmiDao/combine(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,java.util.Optional,java.util.Optional,java.lang.String,java.lang.String)#org/springframework/data/mongodb/core/aggregation/AggregationResults/getMappedResults()
io/corbel/resources/rem/dao/DefaultMongoResmiDao/combine(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,java.util.Optional,java.util.Optional,java.lang.String,java.lang.String)#java/util/stream/Stream/map(java.util.function.Function)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/combine(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,java.util.Optional,java.util.Optional,java.lang.String,java.lang.String)#io/corbel/lib/queries/request/Sort/getDirection()
io/corbel/resources/rem/dao/DefaultMongoResmiDao/combine(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,java.util.Optional,java.util.Optional,java.lang.String,java.lang.String)#java/util/stream/Stream/collect(java.util.stream.Collector)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/combine(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,java.util.Optional,java.util.Optional,java.lang.String,java.lang.String)#io/corbel/resources/rem/dao/DefaultMongoResmiDao/withAllowDiskUseOption(org.springframework.data.mongodb.core.aggregation.Aggregation)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/combine(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,java.util.Optional,java.util.Optional,java.lang.String,java.lang.String)#io/corbel/resources/rem/utils/JsonUtils/convertToArray(java.util.List)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/combine(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,java.util.Optional,java.util.Optional,java.lang.String,java.lang.String)#io/corbel/resources/rem/dao/builder/MongoAggregationBuilder/sort(java.lang.String,java.lang.String)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/combine(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,java.util.Optional,java.util.Optional,java.lang.String,java.lang.String)#java/util/Collection/stream()
io/corbel/resources/rem/dao/DefaultMongoResmiDao/combine(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,java.util.Optional,java.util.Optional,java.lang.String,java.lang.String)#java/util/stream/Collectors/toList()
io/corbel/resources/rem/dao/DefaultMongoResmiDao/combine(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,java.util.Optional,java.util.Optional,java.lang.String,java.lang.String)#io/corbel/resources/rem/dao/builder/MongoAggregationBuilder/MongoAggregationBuilder()
io/corbel/resources/rem/dao/DefaultMongoResmiDao/combine(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,java.util.Optional,java.util.Optional,java.lang.String,java.lang.String)#io/corbel/lib/queries/request/Sort/getField()
io/corbel/resources/rem/dao/DefaultMongoResmiDao/combine(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,java.util.Optional,java.util.Optional,java.lang.String,java.lang.String)#io/corbel/resources/rem/dao/builder/MongoAggregationBuilder/projection(java.lang.String,java.lang.String)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/combine(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,java.util.Optional,java.util.Optional,java.lang.String,java.lang.String)#java/util/Optional/isPresent()
io/corbel/resources/rem/dao/DefaultMongoResmiDao/combine(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,java.util.Optional,java.util.Optional,java.lang.String,java.lang.String)#io/corbel/resources/rem/dao/builder/MongoAggregationBuilder/pagination(io.corbel.lib.queries.request.Pagination)
io/corbel/resources/rem/request/RelationParametersImpl/equals(java.lang.Object)#io/corbel/lib/queries/jaxrs/QueryParameters/equals(java.lang.Object)
io/corbel/resources/rem/request/RelationParametersImpl/equals(java.lang.Object)#java/util/Optional/equals(java.lang.Object)
io/corbel/resources/rem/request/RelationParametersImpl/equals(java.lang.Object)#java/lang/Object/getClass()
io/corbel/resources/rem/request/RelationParametersImpl/hashCode()#java/util/Optional/hashCode()
io/corbel/resources/rem/request/RelationParametersImpl/hashCode()#io/corbel/lib/queries/jaxrs/QueryParameters/hashCode()
io/corbel/resources/rem/resmi/ioc/ResmiIoc/getResmiPutRem(io.corbel.resources.rem.service.ResmiService)#io/corbel/resources/rem/resmi/ResmiPutRem/ResmiPutRem(io.corbel.resources.rem.service.ResmiService)
io/corbel/resources/rem/resmi/ioc/ResmiIoc/aggregationResultsFactory(com.google.gson.Gson)#io/corbel/lib/queries/request/JsonAggregationResultsFactory/JsonAggregationResultsFactory(com.google.gson.Gson)
io/corbel/resources/rem/resmi/ioc/ResmiIoc/resmiSearch(io.corbel.lib.queries.request.AggregationResultsFactory)#io/corbel/resources/rem/resmi/ioc/ResmiIoc/getNamespaceNormilizer()
io/corbel/resources/rem/resmi/ioc/ResmiIoc/resmiSearch(io.corbel.lib.queries.request.AggregationResultsFactory)#io/corbel/resources/rem/resmi/ioc/ResmiIoc/getElasticeSearchService()
io/corbel/resources/rem/resmi/ioc/ResmiIoc/resmiSearch(io.corbel.lib.queries.request.AggregationResultsFactory)#io/corbel/resources/rem/search/DefaultResmiSearch/DefaultResmiSearch(io.corbel.resources.rem.search.ElasticSearchService,io.corbel.resources.rem.dao.NamespaceNormalizer,java.lang.String,io.corbel.lib.queries.request.AggregationResultsFactory,java.time.Clock,java.lang.String)
io/corbel/resources/rem/resmi/ioc/ResmiIoc/resmiSearch(io.corbel.lib.queries.request.AggregationResultsFactory)#io/corbel/resources/rem/resmi/ioc/ResmiIoc/getClock()
io/corbel/resources/rem/resmi/ioc/ResmiIoc/getIdInjectorMongoEventListener()#io/corbel/lib/mongo/IdInjectorMongoEventListener/IdInjectorMongoEventListener()
io/corbel/resources/rem/resmi/ioc/ResmiIoc/getMongoResmiOrder()#io/corbel/resources/rem/resmi/ioc/ResmiIoc/getNamespaceNormilizer()
io/corbel/resources/rem/resmi/ioc/ResmiIoc/getMongoResmiOrder()#io/corbel/lib/mongo/config/DefaultMongoConfiguration/mongoTemplate()
io/corbel/resources/rem/resmi/ioc/ResmiIoc/getMongoResmiOrder()#io/corbel/resources/rem/dao/DefaultResmiOrder/DefaultResmiOrder(org.springframework.data.mongodb.core.MongoOperations,io.corbel.resources.rem.dao.NamespaceNormalizer)
io/corbel/resources/rem/resmi/ioc/ResmiIoc/getGson()#com/google/gson/Gson/Gson()
io/corbel/resources/rem/resmi/ioc/ResmiIoc/getResmiPostRem(io.corbel.resources.rem.service.ResmiService)#io/corbel/resources/rem/resmi/ResmiPostRem/ResmiPostRem(io.corbel.resources.rem.service.ResmiService)
io/corbel/resources/rem/resmi/ioc/ResmiIoc/getElasticSearchHealthCheck()#org/springframework/beans/factory/BeanFactory/getBean(java.lang.Class)
io/corbel/resources/rem/resmi/ioc/ResmiIoc/getElasticSearchHealthCheck()#io/corbel/resources/rem/health/ElasticSearchHealthCheck/ElasticSearchHealthCheck()
io/corbel/resources/rem/resmi/ioc/ResmiIoc/getElasticSearchHealthCheck()#java/lang/String/equalsIgnoreCase(java.lang.String)
io/corbel/resources/rem/resmi/ioc/ResmiIoc/getElasticSearchHealthCheck()#io/corbel/resources/rem/health/ElasticSearchHealthCheck/ElasticSearchHealthCheck(org.elasticsearch.client.Client)
io/corbel/resources/rem/resmi/ioc/ResmiIoc/getResmiDropIndex(io.corbel.resources.rem.service.ResmiService)#io/corbel/resources/rem/resmi/ResmiDropIndexRem/ResmiDropIndexRem(io.corbel.resources.rem.service.ResmiService)
io/corbel/resources/rem/resmi/ioc/ResmiIoc/getSearchableFieldsRegistry()#io/corbel/resources/rem/service/InMemorySearchableFieldsRegistry/InMemorySearchableFieldsRegistry()
io/corbel/resources/rem/resmi/ioc/ResmiIoc/getNamespaceNormilizer()#io/corbel/resources/rem/service/DefaultNamespaceNormalizer/DefaultNamespaceNormalizer()
io/corbel/resources/rem/resmi/ioc/ResmiIoc/resmiService(io.corbel.lib.queries.request.AggregationResultsFactory,io.corbel.resources.rem.dao.MongoResmiDao)#io/corbel/resources/rem/resmi/ioc/ResmiIoc/getSearchableFieldsRegistry()
io/corbel/resources/rem/resmi/ioc/ResmiIoc/resmiService(io.corbel.lib.queries.request.AggregationResultsFactory,io.corbel.resources.rem.dao.MongoResmiDao)#java/lang/String/equalsIgnoreCase(java.lang.String)
io/corbel/resources/rem/resmi/ioc/ResmiIoc/resmiService(io.corbel.lib.queries.request.AggregationResultsFactory,io.corbel.resources.rem.dao.MongoResmiDao)#io/corbel/resources/rem/service/TextSearchResmiService/TextSearchResmiService(io.corbel.resources.rem.dao.MongoResmiDao,java.time.Clock)
io/corbel/resources/rem/resmi/ioc/ResmiIoc/resmiService(io.corbel.lib.queries.request.AggregationResultsFactory,io.corbel.resources.rem.dao.MongoResmiDao)#io/corbel/resources/rem/resmi/ioc/ResmiIoc/resmiSearch(io.corbel.lib.queries.request.AggregationResultsFactory)
io/corbel/resources/rem/resmi/ioc/ResmiIoc/resmiService(io.corbel.lib.queries.request.AggregationResultsFactory,io.corbel.resources.rem.dao.MongoResmiDao)#io/corbel/resources/rem/service/DefaultResmiService/DefaultResmiService(io.corbel.resources.rem.dao.MongoResmiDao,java.time.Clock)
io/corbel/resources/rem/resmi/ioc/ResmiIoc/resmiService(io.corbel.lib.queries.request.AggregationResultsFactory,io.corbel.resources.rem.dao.MongoResmiDao)#io/corbel/resources/rem/resmi/ioc/ResmiIoc/getGson()
io/corbel/resources/rem/resmi/ioc/ResmiIoc/resmiService(io.corbel.lib.queries.request.AggregationResultsFactory,io.corbel.resources.rem.dao.MongoResmiDao)#io/corbel/resources/rem/service/WithSearchResmiService/WithSearchResmiService(io.corbel.resources.rem.dao.MongoResmiDao,io.corbel.resources.rem.search.ResmiSearch,io.corbel.resources.rem.service.SearchableFieldsRegistry,com.google.gson.Gson,java.time.Clock)
io/corbel/resources/rem/resmi/ioc/ResmiIoc/resmiService(io.corbel.lib.queries.request.AggregationResultsFactory,io.corbel.resources.rem.dao.MongoResmiDao)#io/corbel/resources/rem/resmi/ioc/ResmiIoc/getClock()
io/corbel/resources/rem/resmi/ioc/ResmiIoc/getJsonObjectMongoReadConverter()#io/corbel/lib/mongo/JsonObjectMongoReadConverter/JsonObjectMongoReadConverter(com.google.gson.Gson)
io/corbel/resources/rem/resmi/ioc/ResmiIoc/getJsonObjectMongoReadConverter()#io/corbel/resources/rem/resmi/ioc/ResmiIoc/getGson()
io/corbel/resources/rem/resmi/ioc/ResmiIoc/mongoResmiDao(io.corbel.lib.queries.request.AggregationResultsFactory,boolean)#io/corbel/resources/rem/dao/DefaultMongoResmiDao/DefaultMongoResmiDao(org.springframework.data.mongodb.core.MongoOperations,io.corbel.lib.mongo.JsonObjectMongoWriteConverter,io.corbel.resources.rem.dao.NamespaceNormalizer,io.corbel.resources.rem.dao.ResmiOrder,io.corbel.lib.queries.request.AggregationResultsFactory,boolean)
io/corbel/resources/rem/resmi/ioc/ResmiIoc/mongoResmiDao(io.corbel.lib.queries.request.AggregationResultsFactory,boolean)#io/corbel/resources/rem/resmi/ioc/ResmiIoc/getNamespaceNormilizer()
io/corbel/resources/rem/resmi/ioc/ResmiIoc/mongoResmiDao(io.corbel.lib.queries.request.AggregationResultsFactory,boolean)#io/corbel/resources/rem/resmi/ioc/ResmiIoc/getMongoResmiOrder()
io/corbel/resources/rem/resmi/ioc/ResmiIoc/mongoResmiDao(io.corbel.lib.queries.request.AggregationResultsFactory,boolean)#io/corbel/lib/mongo/config/DefaultMongoConfiguration/mongoTemplate()
io/corbel/resources/rem/resmi/ioc/ResmiIoc/mongoResmiDao(io.corbel.lib.queries.request.AggregationResultsFactory,boolean)#io/corbel/resources/rem/resmi/ioc/ResmiIoc/getJsonObjectMongoWriteConverter()
io/corbel/resources/rem/resmi/ioc/ResmiIoc/getElasticeSearchService()#io/corbel/resources/rem/search/DefaultElasticSearchService/DefaultElasticSearchService(org.elasticsearch.client.Client,com.google.gson.Gson)
io/corbel/resources/rem/resmi/ioc/ResmiIoc/getElasticeSearchService()#org/springframework/beans/factory/BeanFactory/getBean(java.lang.Class)
io/corbel/resources/rem/resmi/ioc/ResmiIoc/getElasticeSearchService()#io/corbel/resources/rem/resmi/ioc/ResmiIoc/getGson()
io/corbel/resources/rem/resmi/ioc/ResmiIoc/getResmiDeleteRem(io.corbel.resources.rem.service.ResmiService)#io/corbel/resources/rem/resmi/ResmiDeleteRem/ResmiDeleteRem(io.corbel.resources.rem.service.ResmiService)
io/corbel/resources/rem/resmi/ioc/ResmiIoc/getClock()#java/time/Clock/systemUTC()
io/corbel/resources/rem/resmi/ioc/ResmiIoc/getResmiGetRem(io.corbel.resources.rem.service.ResmiService)#io/corbel/resources/rem/resmi/ResmiGetRem/ResmiGetRem(io.corbel.resources.rem.service.ResmiService)
io/corbel/resources/rem/resmi/ioc/ResmiIoc/getJsonObjectMongoWriteConverter()#io/corbel/resources/rem/utils/ResmiJsonObjectMongoWriteConverter/ResmiJsonObjectMongoWriteConverter()
io/corbel/resources/rem/resmi/ioc/ResmiIoc/getResmiIndexRem(io.corbel.resources.rem.service.ResmiService)#io/corbel/resources/rem/resmi/ResmiIndexRem/ResmiIndexRem(io.corbel.resources.rem.service.ResmiService)
io/corbel/resources/rem/resmi/ioc/ResmiIoc/customConversions()#io/corbel/resources/rem/resmi/ioc/ResmiIoc/getJsonObjectMongoReadConverter()
io/corbel/resources/rem/resmi/ioc/ResmiIoc/customConversions()#java/util/Arrays/asList(T[])
io/corbel/resources/rem/resmi/ioc/ResmiIoc/customConversions()#io/corbel/resources/rem/resmi/ioc/ResmiIoc/getJsonObjectMongoWriteConverter()
io/corbel/resources/rem/resmi/ioc/ResmiIoc/customConversions()#org/springframework/data/mongodb/core/convert/CustomConversions/CustomConversions(java.util.List)
io/corbel/iam/repository/decorator/LowerCaseDecorator/emailQueryToLowerCase(io.corbel.lib.queries.request.ResourceQuery)#java/lang/Iterable/forEach(java.util.function.Consumer)
io/corbel/iam/repository/decorator/LowerCaseDecorator/existsByEmailAndDomain(java.lang.String,java.lang.String)#org/bouncycastle/util/Strings/toLowerCase(java.lang.String)
io/corbel/iam/repository/decorator/LowerCaseDecorator/existsByEmailAndDomain(java.lang.String,java.lang.String)#io/corbel/iam/repository/UserRepositoryCustom/existsByEmailAndDomain(java.lang.String,java.lang.String)
io/corbel/iam/repository/decorator/LowerCaseDecorator/emailUserToLowerCase(io.corbel.iam.model.User)#io/corbel/iam/model/User/setEmail(java.lang.String)
io/corbel/iam/repository/decorator/LowerCaseDecorator/emailUserToLowerCase(io.corbel.iam.model.User)#io/corbel/iam/model/User/getEmail()
io/corbel/iam/repository/decorator/LowerCaseDecorator/emailUserToLowerCase(io.corbel.iam.model.User)#org/bouncycastle/util/Strings/toLowerCase(java.lang.String)
io/corbel/iam/repository/decorator/LowerCaseDecorator/lowerCaseStringQueryLiteral(io.corbel.lib.queries.StringQueryLiteral)#org/bouncycastle/util/Strings/toLowerCase(java.lang.String)
io/corbel/iam/repository/decorator/LowerCaseDecorator/lowerCaseStringQueryLiteral(io.corbel.lib.queries.StringQueryLiteral)#io/corbel/lib/queries/request/QueryLiteral/getLiteral()
io/corbel/iam/repository/decorator/LowerCaseDecorator/lowerCaseStringQueryLiteral(io.corbel.lib.queries.StringQueryLiteral)#io/corbel/lib/queries/request/QueryLiteral/setLiteral(T)
io/corbel/iam/repository/decorator/LowerCaseDecorator/save(io.corbel.iam.model.User)#io/corbel/iam/repository/decorator/LowerCaseDecorator/emailUserToLowerCase(io.corbel.iam.model.User)
io/corbel/iam/repository/decorator/LowerCaseDecorator/save(io.corbel.iam.model.User)#org/springframework/data/repository/CrudRepository/save(S)
io/corbel/iam/repository/decorator/LowerCaseDecorator/save(java.lang.Iterable)#org/springframework/data/mongodb/repository/MongoRepository/save(java.lang.Iterable)
io/corbel/iam/repository/decorator/LowerCaseDecorator/save(java.lang.Iterable)#java/lang/Iterable/forEach(java.util.function.Consumer)
io/corbel/iam/repository/decorator/LowerCaseDecorator/count(io.corbel.lib.queries.request.ResourceQuery)#io/corbel/iam/repository/decorator/LowerCaseDecorator/emailQueryToLowerCase(io.corbel.lib.queries.request.ResourceQuery)
io/corbel/iam/repository/decorator/LowerCaseDecorator/count(io.corbel.lib.queries.request.ResourceQuery)#io/corbel/lib/queries/mongo/repository/GenericFindRepository/count(io.corbel.lib.queries.request.ResourceQuery)
io/corbel/iam/repository/decorator/LowerCaseDecorator/findByDomainAndEmail(java.lang.String,java.lang.String)#org/bouncycastle/util/Strings/toLowerCase(java.lang.String)
io/corbel/iam/repository/decorator/LowerCaseDecorator/findByDomainAndEmail(java.lang.String,java.lang.String)#io/corbel/iam/repository/UserRepository/findByDomainAndEmail(java.lang.String,java.lang.String)
io/corbel/iam/repository/decorator/LowerCaseDecorator/find(io.corbel.lib.queries.request.ResourceQuery,io.corbel.lib.queries.request.Pagination,io.corbel.lib.queries.request.Sort)#io/corbel/iam/repository/decorator/LowerCaseDecorator/emailQueryToLowerCase(io.corbel.lib.queries.request.ResourceQuery)
io/corbel/iam/repository/decorator/LowerCaseDecorator/find(io.corbel.lib.queries.request.ResourceQuery,io.corbel.lib.queries.request.Pagination,io.corbel.lib.queries.request.Sort)#io/corbel/lib/queries/mongo/repository/GenericFindRepository/find(io.corbel.lib.queries.request.ResourceQuery,io.corbel.lib.queries.request.Pagination,io.corbel.lib.queries.request.Sort)
io/corbel/iam/api/UsernameResourceTest/testExistUser()#io/corbel/iam/service/UserService/existsByUsernameAndDomain(java.lang.String,java.lang.String)
io/corbel/iam/api/UsernameResourceTest/testExistUser()#org/mockito/Mockito/when(T)
io/corbel/iam/api/UsernameResourceTest/testExistUser()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/iam/api/UsernameResourceTest/testExistUser()#javax/ws/rs/client/WebTarget/request()
io/corbel/iam/api/UsernameResourceTest/testExistUser()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/iam/api/UsernameResourceTest/testExistUser()#javax/ws/rs/core/Response/getStatus()
io/corbel/iam/api/UsernameResourceTest/testExistUser()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/iam/api/UsernameResourceTest/testExistUser()#javax/ws/rs/client/SyncInvoker/head()
io/corbel/iam/api/UsernameResourceTest/testExistUser()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/iam/api/UsernameResourceTest/testExistUser()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/api/UsernameResourceTest/testExistUser()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/iam/api/UsernameResourceTest/testNotExistUser()#io/corbel/iam/service/UserService/existsByUsernameAndDomain(java.lang.String,java.lang.String)
io/corbel/iam/api/UsernameResourceTest/testNotExistUser()#org/mockito/Mockito/when(T)
io/corbel/iam/api/UsernameResourceTest/testNotExistUser()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/iam/api/UsernameResourceTest/testNotExistUser()#javax/ws/rs/client/WebTarget/request()
io/corbel/iam/api/UsernameResourceTest/testNotExistUser()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/iam/api/UsernameResourceTest/testNotExistUser()#javax/ws/rs/core/Response/getStatus()
io/corbel/iam/api/UsernameResourceTest/testNotExistUser()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/iam/api/UsernameResourceTest/testNotExistUser()#javax/ws/rs/client/SyncInvoker/head()
io/corbel/iam/api/UsernameResourceTest/testNotExistUser()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/iam/api/UsernameResourceTest/testNotExistUser()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/api/UsernameResourceTest/testNotExistUser()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/iam/api/UsernameResourceTest/testGetUserIdByUsernameOK()#io/corbel/iam/service/UserService/findByDomainAndUsername(java.lang.String,java.lang.String)
io/corbel/iam/api/UsernameResourceTest/testGetUserIdByUsernameOK()#org/mockito/Mockito/verify(T,org.mockito.verification.VerificationMode)
io/corbel/iam/api/UsernameResourceTest/testGetUserIdByUsernameOK()#org/mockito/Mockito/when(T)
io/corbel/iam/api/UsernameResourceTest/testGetUserIdByUsernameOK()#org/mockito/Mockito/times(int)
io/corbel/iam/api/UsernameResourceTest/testGetUserIdByUsernameOK()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/iam/api/UsernameResourceTest/testGetUserIdByUsernameOK()#javax/ws/rs/client/WebTarget/request()
io/corbel/iam/api/UsernameResourceTest/testGetUserIdByUsernameOK()#javax/ws/rs/client/SyncInvoker/get(java.lang.Class)
io/corbel/iam/api/UsernameResourceTest/testGetUserIdByUsernameOK()#io/corbel/iam/api/UserResourceTestBase/createTestUser()
io/corbel/iam/api/UsernameResourceTest/testGetUserIdByUsernameOK()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/iam/api/UsernameResourceTest/testGetUserIdByUsernameOK()#org/junit/Assert/assertEquals(java.lang.Object,java.lang.Object)
io/corbel/iam/api/UsernameResourceTest/testGetUserIdByUsernameOK()#io/corbel/iam/model/Entity/getId()
io/corbel/iam/api/UsernameResourceTest/testGetUserIdByUsernameOK()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/api/UsernameResourceTest/testGetUserIdByUsernameOK()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/iam/api/UsernameResourceTest/testGetUserIdByUsernameKO()#io/corbel/iam/service/UserService/findByDomainAndUsername(java.lang.String,java.lang.String)
io/corbel/iam/api/UsernameResourceTest/testGetUserIdByUsernameKO()#org/joda/time/Instant/now()
io/corbel/iam/api/UsernameResourceTest/testGetUserIdByUsernameKO()#org/mockito/Mockito/when(T)
io/corbel/iam/api/UsernameResourceTest/testGetUserIdByUsernameKO()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/iam/api/UsernameResourceTest/testGetUserIdByUsernameKO()#javax/ws/rs/client/WebTarget/request()
io/corbel/iam/api/UsernameResourceTest/testGetUserIdByUsernameKO()#javax/ws/rs/core/Response/getStatus()
io/corbel/iam/api/UsernameResourceTest/testGetUserIdByUsernameKO()#io/corbel/iam/service/UserService/findUserDomain(java.lang.String)
io/corbel/iam/api/UsernameResourceTest/testGetUserIdByUsernameKO()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/iam/api/UsernameResourceTest/testGetUserIdByUsernameKO()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/iam/api/UsernameResourceTest/testGetUserIdByUsernameKO()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/api/UsernameResourceTest/testGetUserIdByUsernameKO()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/iam/api/UsernameResourceTest/testGetUserIdByUsernameKO()#javax/ws/rs/client/SyncInvoker/get()
io/corbel/iam/api/UsernameResourceTest/testGetUserIdByUsernameKO()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/iam/api/UsernameResourceTest/testGetUserIdByUsernameKO()#org/joda/time/base/AbstractInstant/toString()
io/corbel/iam/api/UsernameResourceTest/testGetUserIdByUsernameKO()#io/corbel/iam/api/UserResourceTestBase/createTestUser()
io/corbel/iam/auth/rule/AuthenticationTypeAllowedAuthorizationRule/process(io.corbel.iam.auth.AuthorizationRequestContext)#io/corbel/iam/auth/AuthorizationRequestContext/isOAuth()
io/corbel/iam/auth/rule/AuthenticationTypeAllowedAuthorizationRule/process(io.corbel.iam.auth.AuthorizationRequestContext)#io/corbel/iam/exception/UnauthorizedException/UnauthorizedException(java.lang.String)
io/corbel/iam/auth/rule/AuthenticationTypeAllowedAuthorizationRule/process(io.corbel.iam.auth.AuthorizationRequestContext)#io/corbel/iam/utils/Message/getMessage(java.lang.Object[])
io/corbel/iam/auth/rule/AuthenticationTypeAllowedAuthorizationRule/process(io.corbel.iam.auth.AuthorizationRequestContext)#io/corbel/iam/auth/AuthorizationRequestContext/getRequestedDomain()
io/corbel/iam/auth/rule/AuthenticationTypeAllowedAuthorizationRule/process(io.corbel.iam.auth.AuthorizationRequestContext)#java/util/Map/getOrDefault(java.lang.Object,V)
io/corbel/iam/auth/rule/AuthenticationTypeAllowedAuthorizationRule/process(io.corbel.iam.auth.AuthorizationRequestContext)#io/corbel/iam/auth/AuthorizationRequestContext/isBasic()
io/corbel/iam/auth/rule/AuthenticationTypeAllowedAuthorizationRule/process(io.corbel.iam.auth.AuthorizationRequestContext)#io/corbel/iam/model/Domain/getCapabilities()
io/corbel/resources/rem/dao/DefaultResmiOrderTest/moveToFirstTest()#io/corbel/resources/rem/model/ResourceUri/ResourceUri(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
io/corbel/resources/rem/dao/DefaultResmiOrderTest/moveToFirstTest()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/dao/DefaultResmiOrderTest/moveToFirstTest()#org/springframework/data/mongodb/core/MongoOperations/find(org.springframework.data.mongodb.core.query.Query,java.lang.Class,java.lang.String)
io/corbel/resources/rem/dao/DefaultResmiOrderTest/moveToFirstTest()#io/corbel/resources/rem/dao/RelationMoveOperation/RelationMoveOperation(long)
io/corbel/resources/rem/dao/DefaultResmiOrderTest/moveToFirstTest()#java/util/Arrays/asList(T[])
io/corbel/resources/rem/dao/DefaultResmiOrderTest/moveToFirstTest()#org/springframework/data/mongodb/core/query/Update/Update()
io/corbel/resources/rem/dao/DefaultResmiOrderTest/moveToFirstTest()#com/google/gson/JsonObject/JsonObject()
io/corbel/resources/rem/dao/DefaultResmiOrderTest/moveToFirstTest()#org/springframework/data/mongodb/core/query/Update/set(java.lang.String,java.lang.Object)
io/corbel/resources/rem/dao/DefaultResmiOrderTest/moveToFirstTest()#io/corbel/resources/rem/dao/DefaultResmiOrder/moveRelation(io.corbel.resources.rem.model.ResourceUri,io.corbel.resources.rem.dao.RelationMoveOperation)
io/corbel/resources/rem/dao/DefaultResmiOrderTest/moveToFirstTest()#org/mockito/Matchers/eq(T)
io/corbel/resources/rem/dao/DefaultResmiOrderTest/moveToFirstTest()#org/springframework/data/mongodb/core/MongoOperations/updateFirst(org.springframework.data.mongodb.core.query.Query,org.springframework.data.mongodb.core.query.Update,java.lang.String)
io/corbel/resources/rem/dao/DefaultResmiOrderTest/moveToFirstTest()#com/google/gson/JsonObject/addProperty(java.lang.String,java.lang.Number)
io/corbel/resources/rem/dao/DefaultResmiOrderTest/moveToFirstTest()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/dao/DefaultResmiOrderTest/moveToFirstTest()#org/mockito/Matchers/anyString()
io/corbel/resources/rem/dao/DefaultResmiOrderTest/moveToFirstTest()#org/mockito/Matchers/any(java.lang.Class)
io/corbel/resources/rem/dao/DefaultResmiOrderTest/moveToFirstTest()#org/mockito/Mockito/verify(T)
io/corbel/resources/rem/dao/DefaultResmiOrderTest/setup()#org/mockito/AdditionalAnswers/returnsFirstArg()
io/corbel/resources/rem/dao/DefaultResmiOrderTest/setup()#org/mockito/stubbing/OngoingStubbing/then(org.mockito.stubbing.Answer)
io/corbel/resources/rem/dao/DefaultResmiOrderTest/setup()#io/corbel/resources/rem/service/DefaultNamespaceNormalizer/normalize(java.lang.String)
io/corbel/resources/rem/dao/DefaultResmiOrderTest/setup()#io/corbel/resources/rem/dao/DefaultResmiOrder/DefaultResmiOrder(org.springframework.data.mongodb.core.MongoOperations,io.corbel.resources.rem.dao.NamespaceNormalizer)
io/corbel/resources/rem/dao/DefaultResmiOrderTest/setup()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/dao/DefaultResmiOrderTest/setup()#org/mockito/Matchers/anyString()
io/corbel/resources/rem/dao/DefaultResmiOrderTest/moveToMiddleTest()#io/corbel/resources/rem/model/ResourceUri/ResourceUri(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
io/corbel/resources/rem/dao/DefaultResmiOrderTest/moveToMiddleTest()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/dao/DefaultResmiOrderTest/moveToMiddleTest()#org/springframework/data/mongodb/core/MongoOperations/find(org.springframework.data.mongodb.core.query.Query,java.lang.Class,java.lang.String)
io/corbel/resources/rem/dao/DefaultResmiOrderTest/moveToMiddleTest()#io/corbel/resources/rem/dao/RelationMoveOperation/RelationMoveOperation(long)
io/corbel/resources/rem/dao/DefaultResmiOrderTest/moveToMiddleTest()#java/util/Arrays/asList(T[])
io/corbel/resources/rem/dao/DefaultResmiOrderTest/moveToMiddleTest()#org/springframework/data/mongodb/core/query/Update/Update()
io/corbel/resources/rem/dao/DefaultResmiOrderTest/moveToMiddleTest()#com/google/gson/JsonObject/JsonObject()
io/corbel/resources/rem/dao/DefaultResmiOrderTest/moveToMiddleTest()#org/springframework/data/mongodb/core/query/Update/set(java.lang.String,java.lang.Object)
io/corbel/resources/rem/dao/DefaultResmiOrderTest/moveToMiddleTest()#io/corbel/resources/rem/dao/DefaultResmiOrder/moveRelation(io.corbel.resources.rem.model.ResourceUri,io.corbel.resources.rem.dao.RelationMoveOperation)
io/corbel/resources/rem/dao/DefaultResmiOrderTest/moveToMiddleTest()#org/mockito/Matchers/eq(T)
io/corbel/resources/rem/dao/DefaultResmiOrderTest/moveToMiddleTest()#org/springframework/data/mongodb/core/MongoOperations/updateFirst(org.springframework.data.mongodb.core.query.Query,org.springframework.data.mongodb.core.query.Update,java.lang.String)
io/corbel/resources/rem/dao/DefaultResmiOrderTest/moveToMiddleTest()#com/google/gson/JsonObject/addProperty(java.lang.String,java.lang.Number)
io/corbel/resources/rem/dao/DefaultResmiOrderTest/moveToMiddleTest()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/dao/DefaultResmiOrderTest/moveToMiddleTest()#org/mockito/Matchers/anyString()
io/corbel/resources/rem/dao/DefaultResmiOrderTest/moveToMiddleTest()#org/mockito/Matchers/any(java.lang.Class)
io/corbel/resources/rem/dao/DefaultResmiOrderTest/moveToMiddleTest()#org/mockito/Mockito/verify(T)
io/corbel/resources/rem/dao/DefaultResmiOrderTest/moveToLastTest()#io/corbel/resources/rem/model/ResourceUri/ResourceUri(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
io/corbel/resources/rem/dao/DefaultResmiOrderTest/moveToLastTest()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/dao/DefaultResmiOrderTest/moveToLastTest()#org/springframework/data/mongodb/core/MongoOperations/find(org.springframework.data.mongodb.core.query.Query,java.lang.Class,java.lang.String)
io/corbel/resources/rem/dao/DefaultResmiOrderTest/moveToLastTest()#io/corbel/resources/rem/dao/RelationMoveOperation/RelationMoveOperation(long)
io/corbel/resources/rem/dao/DefaultResmiOrderTest/moveToLastTest()#java/util/Arrays/asList(T[])
io/corbel/resources/rem/dao/DefaultResmiOrderTest/moveToLastTest()#org/springframework/data/mongodb/core/query/Update/Update()
io/corbel/resources/rem/dao/DefaultResmiOrderTest/moveToLastTest()#com/google/gson/JsonObject/JsonObject()
io/corbel/resources/rem/dao/DefaultResmiOrderTest/moveToLastTest()#org/mockito/Matchers/eq(T)
io/corbel/resources/rem/dao/DefaultResmiOrderTest/moveToLastTest()#com/google/gson/JsonObject/addProperty(java.lang.String,java.lang.Number)
io/corbel/resources/rem/dao/DefaultResmiOrderTest/moveToLastTest()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/dao/DefaultResmiOrderTest/moveToLastTest()#org/mockito/Matchers/anyString()
io/corbel/resources/rem/dao/DefaultResmiOrderTest/moveToLastTest()#org/mockito/Matchers/any(java.lang.Class)
io/corbel/resources/rem/dao/DefaultResmiOrderTest/moveToLastTest()#org/mockito/Mockito/verify(T)
io/corbel/resources/rem/dao/DefaultResmiOrderTest/moveToLastTest()#org/springframework/data/mongodb/core/MongoOperations/findAndModify(org.springframework.data.mongodb.core.query.Query,org.springframework.data.mongodb.core.query.Update,org.springframework.data.mongodb.core.FindAndModifyOptions,java.lang.Class,java.lang.String)
io/corbel/resources/rem/dao/DefaultResmiOrderTest/moveToLastTest()#org/mockito/Matchers/any()
io/corbel/resources/rem/dao/DefaultResmiOrderTest/moveToLastTest()#org/springframework/data/mongodb/core/query/Update/set(java.lang.String,java.lang.Object)
io/corbel/resources/rem/dao/DefaultResmiOrderTest/moveToLastTest()#io/corbel/resources/rem/dao/DefaultResmiOrder/moveRelation(io.corbel.resources.rem.model.ResourceUri,io.corbel.resources.rem.dao.RelationMoveOperation)
io/corbel/resources/rem/dao/DefaultResmiOrderTest/moveToLastTest()#com/google/gson/JsonPrimitive/JsonPrimitive(java.lang.Number)
io/corbel/resources/rem/dao/DefaultResmiOrderTest/moveToLastTest()#org/springframework/data/mongodb/core/MongoOperations/updateFirst(org.springframework.data.mongodb.core.query.Query,org.springframework.data.mongodb.core.query.Update,java.lang.String)
io/corbel/resources/rem/dao/DefaultResmiOrderTest/moveToLastTest()#com/google/gson/JsonObject/add(java.lang.String,com.google.gson.JsonElement)
io/corbel/oauth/repository/decorator/UserRepositoryDecorator/findAll(org.springframework.data.domain.Example,org.springframework.data.domain.Sort)#org/springframework/data/mongodb/repository/MongoRepository/findAll(org.springframework.data.domain.Example,org.springframework.data.domain.Sort)
io/corbel/oauth/repository/decorator/UserRepositoryDecorator/upsert(java.lang.String,io.corbel.oauth.model.User)#io/corbel/lib/mongo/repository/PartialUpdateRepository/upsert(ID,E)
io/corbel/oauth/repository/decorator/UserRepositoryDecorator/count(org.springframework.data.domain.Example)#org/springframework/data/repository/query/QueryByExampleExecutor/count(org.springframework.data.domain.Example)
io/corbel/oauth/repository/decorator/UserRepositoryDecorator/exists(org.springframework.data.domain.Example)#org/springframework/data/repository/query/QueryByExampleExecutor/exists(org.springframework.data.domain.Example)
io/corbel/oauth/repository/decorator/UserRepositoryDecorator/findAll(org.springframework.data.domain.Example)#org/springframework/data/mongodb/repository/MongoRepository/findAll(org.springframework.data.domain.Example)
io/corbel/oauth/repository/decorator/UserRepositoryDecorator/findAll(org.springframework.data.domain.Sort)#org/springframework/data/mongodb/repository/MongoRepository/findAll(org.springframework.data.domain.Sort)
io/corbel/oauth/repository/decorator/UserRepositoryDecorator/findByUsernameAndDomain(java.lang.String,java.lang.String)#io/corbel/oauth/repository/UserRepository/findByUsernameAndDomain(java.lang.String,java.lang.String)
io/corbel/oauth/repository/decorator/UserRepositoryDecorator/insert(S)#org/springframework/data/mongodb/repository/MongoRepository/insert(S)
io/corbel/oauth/repository/decorator/UserRepositoryDecorator/patch(java.lang.String,io.corbel.oauth.model.User,java.lang.String[])#io/corbel/lib/mongo/repository/PartialUpdateRepository/patch(ID,E,java.lang.String[])
io/corbel/oauth/repository/decorator/UserRepositoryDecorator/count()#org/springframework/data/repository/CrudRepository/count()
io/corbel/oauth/repository/decorator/UserRepositoryDecorator/patch(io.corbel.oauth.model.User,java.lang.String[])#io/corbel/lib/mongo/repository/PartialUpdateRepository/patch(E,java.lang.String[])
io/corbel/oauth/repository/decorator/UserRepositoryDecorator/delete(io.corbel.oauth.model.User)#org/springframework/data/repository/CrudRepository/delete(T)
io/corbel/oauth/repository/decorator/UserRepositoryDecorator/findByUsername(java.lang.String)#io/corbel/oauth/repository/UserRepository/findByUsername(java.lang.String)
io/corbel/oauth/repository/decorator/UserRepositoryDecorator/findAll(org.springframework.data.domain.Pageable)#org/springframework/data/repository/PagingAndSortingRepository/findAll(org.springframework.data.domain.Pageable)
io/corbel/oauth/repository/decorator/UserRepositoryDecorator/delete(java.lang.Iterable)#org/springframework/data/repository/CrudRepository/delete(java.lang.Iterable)
io/corbel/oauth/repository/decorator/UserRepositoryDecorator/findByEmailAndDomain(java.lang.String,java.lang.String)#io/corbel/oauth/repository/UserRepository/findByEmailAndDomain(java.lang.String,java.lang.String)
io/corbel/oauth/repository/decorator/UserRepositoryDecorator/delete(java.lang.String)#org/springframework/data/repository/CrudRepository/delete(ID)
io/corbel/oauth/repository/decorator/UserRepositoryDecorator/findOne(org.springframework.data.domain.Example)#org/springframework/data/repository/query/QueryByExampleExecutor/findOne(org.springframework.data.domain.Example)
io/corbel/oauth/repository/decorator/UserRepositoryDecorator/deleteAll()#org/springframework/data/repository/CrudRepository/deleteAll()
io/corbel/oauth/repository/decorator/UserRepositoryDecorator/findById(java.lang.String)#io/corbel/oauth/repository/UserRepository/findById(java.lang.String)
io/corbel/oauth/repository/decorator/UserRepositoryDecorator/findAll(java.lang.Iterable)#org/springframework/data/repository/CrudRepository/findAll(java.lang.Iterable)
io/corbel/oauth/repository/decorator/UserRepositoryDecorator/existsByUsernameAndDomain(java.lang.String,java.lang.String)#io/corbel/oauth/repository/UserRepositoryCustom/existsByUsernameAndDomain(java.lang.String,java.lang.String)
io/corbel/oauth/repository/decorator/UserRepositoryDecorator/insert(java.lang.Iterable)#org/springframework/data/mongodb/repository/MongoRepository/insert(java.lang.Iterable)
io/corbel/oauth/repository/decorator/UserRepositoryDecorator/save(io.corbel.oauth.model.User)#org/springframework/data/repository/CrudRepository/save(S)
io/corbel/oauth/repository/decorator/UserRepositoryDecorator/findAll(org.springframework.data.domain.Example,org.springframework.data.domain.Pageable)#org/springframework/data/repository/query/QueryByExampleExecutor/findAll(org.springframework.data.domain.Example,org.springframework.data.domain.Pageable)
io/corbel/oauth/repository/decorator/UserRepositoryDecorator/exists(java.lang.String)#org/springframework/data/repository/CrudRepository/exists(ID)
io/corbel/oauth/repository/decorator/UserRepositoryDecorator/findByEmail(java.lang.String)#io/corbel/oauth/repository/UserRepository/findByEmail(java.lang.String)
io/corbel/oauth/repository/decorator/UserRepositoryDecorator/save(java.lang.Iterable)#org/springframework/data/mongodb/repository/MongoRepository/save(java.lang.Iterable)
io/corbel/oauth/repository/decorator/UserRepositoryDecorator/findAll()#org/springframework/data/mongodb/repository/MongoRepository/findAll()
io/corbel/oauth/repository/decorator/UserRepositoryDecorator/findOne(java.lang.String)#org/springframework/data/repository/CrudRepository/findOne(ID)
io/corbel/iam/service/DefaultAuthorizationService/publishScope(io.corbel.iam.model.TokenGrant,io.corbel.iam.auth.AuthorizationRequestContext)#io/corbel/iam/model/Entity/getId()
io/corbel/iam/service/DefaultAuthorizationService/publishScope(io.corbel.iam.model.TokenGrant,io.corbel.iam.auth.AuthorizationRequestContext)#io/corbel/iam/model/TokenGrant/getAccessToken()
io/corbel/iam/service/DefaultAuthorizationService/publishScope(io.corbel.iam.model.TokenGrant,io.corbel.iam.auth.AuthorizationRequestContext)#io/corbel/iam/service/ScopeService/fillScopes(java.util.Set,java.lang.String,java.lang.String,java.lang.String)
io/corbel/iam/service/DefaultAuthorizationService/publishScope(io.corbel.iam.model.TokenGrant,io.corbel.iam.auth.AuthorizationRequestContext)#io/corbel/iam/auth/AuthorizationRequestContext/getIssuerClientId()
io/corbel/iam/service/DefaultAuthorizationService/publishScope(io.corbel.iam.model.TokenGrant,io.corbel.iam.auth.AuthorizationRequestContext)#io/corbel/iam/auth/AuthorizationRequestContext/hasPrincipal()
io/corbel/iam/service/DefaultAuthorizationService/publishScope(io.corbel.iam.model.TokenGrant,io.corbel.iam.auth.AuthorizationRequestContext)#io/corbel/iam/auth/AuthorizationRequestContext/getPrincipal()
io/corbel/iam/service/DefaultAuthorizationService/publishScope(io.corbel.iam.model.TokenGrant,io.corbel.iam.auth.AuthorizationRequestContext)#io/corbel/iam/model/TokenGrant/getExpiresAt()
io/corbel/iam/service/DefaultAuthorizationService/publishScope(io.corbel.iam.model.TokenGrant,io.corbel.iam.auth.AuthorizationRequestContext)#io/corbel/iam/auth/AuthorizationRequestContext/getRequestedDomain()
io/corbel/iam/service/DefaultAuthorizationService/publishScope(io.corbel.iam.model.TokenGrant,io.corbel.iam.auth.AuthorizationRequestContext)#io/corbel/iam/auth/AuthorizationRequestContext/getExpandedRequestedScopes()
io/corbel/iam/service/DefaultAuthorizationService/publishScope(io.corbel.iam.model.TokenGrant,io.corbel.iam.auth.AuthorizationRequestContext)#io/corbel/iam/service/ScopeService/publishAuthorizationRules(java.lang.String,long,java.util.Set)
io/corbel/iam/service/DefaultAuthorizationService/grantAccess(io.corbel.iam.auth.AuthorizationRequestContext,io.corbel.iam.auth.BasicParams)#io/corbel/iam/model/Entity/getId()
io/corbel/iam/service/DefaultAuthorizationService/grantAccess(io.corbel.iam.auth.AuthorizationRequestContext,io.corbel.iam.auth.BasicParams)#io/corbel/iam/model/User/getUsername()
io/corbel/iam/service/DefaultAuthorizationService/grantAccess(io.corbel.iam.auth.AuthorizationRequestContext,io.corbel.iam.auth.BasicParams)#io/corbel/iam/auth/BasicParams/getPassword()
io/corbel/iam/service/DefaultAuthorizationService/grantAccess(io.corbel.iam.auth.AuthorizationRequestContext,io.corbel.iam.auth.BasicParams)#io/corbel/iam/service/UserService/findByDomainAndEmail(java.lang.String,java.lang.String)
io/corbel/iam/service/DefaultAuthorizationService/grantAccess(io.corbel.iam.auth.AuthorizationRequestContext,io.corbel.iam.auth.BasicParams)#io/corbel/iam/service/DefaultAuthorizationService/grantAccess(io.corbel.iam.auth.AuthorizationRequestContext,java.util.Optional)
io/corbel/iam/service/DefaultAuthorizationService/grantAccess(io.corbel.iam.auth.AuthorizationRequestContext,io.corbel.iam.auth.BasicParams)#io/corbel/iam/model/User/checkPassword(java.lang.String)
io/corbel/iam/service/DefaultAuthorizationService/grantAccess(io.corbel.iam.auth.AuthorizationRequestContext,io.corbel.iam.auth.BasicParams)#io/corbel/iam/auth/AuthorizationRequestContext/getRequestedDomain()
io/corbel/iam/service/DefaultAuthorizationService/grantAccess(io.corbel.iam.auth.AuthorizationRequestContext,io.corbel.iam.auth.BasicParams)#io/corbel/iam/utils/Message/getMessage(java.lang.Object[])
io/corbel/iam/service/DefaultAuthorizationService/grantAccess(io.corbel.iam.auth.AuthorizationRequestContext,io.corbel.iam.auth.BasicParams)#io/corbel/iam/auth/AuthorizationRequestContext/setPrincipalId(java.lang.String)
io/corbel/iam/service/DefaultAuthorizationService/grantAccess(io.corbel.iam.auth.AuthorizationRequestContext,io.corbel.iam.auth.BasicParams)#io/corbel/iam/service/UserService/findByDomainAndUsername(java.lang.String,java.lang.String)
io/corbel/iam/service/DefaultAuthorizationService/grantAccess(io.corbel.iam.auth.AuthorizationRequestContext,io.corbel.iam.auth.BasicParams)#io/corbel/iam/auth/BasicParams/getUsername()
io/corbel/iam/service/DefaultAuthorizationService/grantAccess(io.corbel.iam.auth.AuthorizationRequestContext,io.corbel.iam.auth.BasicParams)#io/corbel/iam/exception/NoSuchPrincipalException/NoSuchPrincipalException(java.lang.String)
io/corbel/iam/service/DefaultAuthorizationService/grantAccess(io.corbel.iam.auth.AuthorizationRequestContext,io.corbel.iam.auth.BasicParams)#java/util/Optional/of(T)
io/corbel/iam/service/DefaultAuthorizationService/getAccessToken(io.corbel.iam.auth.AuthorizationRequestContext)#io/corbel/iam/auth/AuthorizationRequestContext/getDeviceId()
io/corbel/iam/service/DefaultAuthorizationService/getAccessToken(io.corbel.iam.auth.AuthorizationRequestContext)#io/corbel/iam/model/Entity/getId()
io/corbel/iam/service/DefaultAuthorizationService/getAccessToken(io.corbel.iam.auth.AuthorizationRequestContext)#io/corbel/lib/token/TokenGrant/getAccessToken()
io/corbel/iam/service/DefaultAuthorizationService/getAccessToken(io.corbel.iam.auth.AuthorizationRequestContext)#io/corbel/iam/auth/AuthorizationRequestContext/getAuthorizationExpiration()
io/corbel/iam/service/DefaultAuthorizationService/getAccessToken(io.corbel.iam.auth.AuthorizationRequestContext)#java/util/Optional/ofNullable(T)
io/corbel/iam/service/DefaultAuthorizationService/getAccessToken(io.corbel.iam.auth.AuthorizationRequestContext)#io/corbel/iam/auth/AuthorizationRequestContext/hasPrincipal()
io/corbel/iam/service/DefaultAuthorizationService/getAccessToken(io.corbel.iam.auth.AuthorizationRequestContext)#java/util/Optional/ifPresent(java.util.function.Consumer)
io/corbel/iam/service/DefaultAuthorizationService/getAccessToken(io.corbel.iam.auth.AuthorizationRequestContext)#io/corbel/lib/token/TokenInfo/Builder/setGroups(java.util.Collection)
io/corbel/iam/service/DefaultAuthorizationService/getAccessToken(io.corbel.iam.auth.AuthorizationRequestContext)#io/corbel/iam/auth/AuthorizationRequestContext/getRequestedDomain()
io/corbel/iam/service/DefaultAuthorizationService/getAccessToken(io.corbel.iam.auth.AuthorizationRequestContext)#io/corbel/lib/token/TokenInfo/Builder/setDomainId(java.lang.String)
io/corbel/iam/service/DefaultAuthorizationService/getAccessToken(io.corbel.iam.auth.AuthorizationRequestContext)#io/corbel/lib/token/TokenInfo/Builder/setClientId(java.lang.String)
io/corbel/iam/service/DefaultAuthorizationService/getAccessToken(io.corbel.iam.auth.AuthorizationRequestContext)#io/corbel/lib/token/TokenInfo/newBuilder()
io/corbel/iam/service/DefaultAuthorizationService/getAccessToken(io.corbel.iam.auth.AuthorizationRequestContext)#io/corbel/lib/token/TokenInfo/Builder/setUserId(java.lang.String)
io/corbel/iam/service/DefaultAuthorizationService/getAccessToken(io.corbel.iam.auth.AuthorizationRequestContext)#io/corbel/lib/token/TokenInfo/Builder/setType(io.corbel.lib.token.model.TokenType)
io/corbel/iam/service/DefaultAuthorizationService/getAccessToken(io.corbel.iam.auth.AuthorizationRequestContext)#io/corbel/iam/model/User/getGroups()
io/corbel/iam/service/DefaultAuthorizationService/getAccessToken(io.corbel.iam.auth.AuthorizationRequestContext)#io/corbel/lib/token/TokenInfo/Builder/setState(java.lang.String)
io/corbel/iam/service/DefaultAuthorizationService/getAccessToken(io.corbel.iam.auth.AuthorizationRequestContext)#java/lang/Long/toString(long)
io/corbel/iam/service/DefaultAuthorizationService/getAccessToken(io.corbel.iam.auth.AuthorizationRequestContext)#io/corbel/lib/token/TokenInfo/Builder/build()
io/corbel/iam/service/DefaultAuthorizationService/getAccessToken(io.corbel.iam.auth.AuthorizationRequestContext)#io/corbel/lib/token/factory/TokenFactory/createToken(io.corbel.lib.token.TokenInfo,long,java.lang.String[])
io/corbel/iam/service/DefaultAuthorizationService/getAccessToken(io.corbel.iam.auth.AuthorizationRequestContext)#io/corbel/iam/auth/AuthorizationRequestContext/getPrincipal()
io/corbel/iam/service/DefaultAuthorizationService/getAccessToken(io.corbel.iam.auth.AuthorizationRequestContext)#io/corbel/iam/auth/AuthorizationRequestContext/getIssuerClient()
io/corbel/iam/service/DefaultAuthorizationService/grantAccess(io.corbel.iam.auth.AuthorizationRequestContext,java.util.Optional)#java/util/stream/Stream/map(java.util.function.Function)
io/corbel/iam/service/DefaultAuthorizationService/grantAccess(io.corbel.iam.auth.AuthorizationRequestContext,java.util.Optional)#io/corbel/iam/model/Entity/getId()
io/corbel/iam/service/DefaultAuthorizationService/grantAccess(io.corbel.iam.auth.AuthorizationRequestContext,java.util.Optional)#io/corbel/iam/model/User/getUserProfile()
io/corbel/iam/service/DefaultAuthorizationService/grantAccess(io.corbel.iam.auth.AuthorizationRequestContext,java.util.Optional)#java/util/stream/Collectors/toSet()
io/corbel/iam/service/DefaultAuthorizationService/grantAccess(io.corbel.iam.auth.AuthorizationRequestContext,java.util.Optional)#io/corbel/iam/model/TokenGrant/TokenGrant(java.lang.String,long,java.lang.String,java.util.Set)
io/corbel/iam/service/DefaultAuthorizationService/grantAccess(io.corbel.iam.auth.AuthorizationRequestContext,java.util.Optional)#java/util/Collection/stream()
io/corbel/iam/service/DefaultAuthorizationService/grantAccess(io.corbel.iam.auth.AuthorizationRequestContext,java.util.Optional)#io/corbel/iam/auth/AuthorizationRequestContext/getAuthorizationExpiration()
io/corbel/iam/service/DefaultAuthorizationService/grantAccess(io.corbel.iam.auth.AuthorizationRequestContext,java.util.Optional)#io/corbel/iam/auth/AuthorizationRequestContext/getIssuerClientId()
io/corbel/iam/service/DefaultAuthorizationService/grantAccess(io.corbel.iam.auth.AuthorizationRequestContext,java.util.Optional)#io/corbel/iam/service/DefaultAuthorizationService/updateDeviceLastConnection(java.lang.String,java.lang.String,java.lang.String)
io/corbel/iam/service/DefaultAuthorizationService/grantAccess(io.corbel.iam.auth.AuthorizationRequestContext,java.util.Optional)#io/corbel/iam/service/EventsService/sendUserAuthenticationEvent(io.corbel.iam.model.User)
io/corbel/iam/service/DefaultAuthorizationService/grantAccess(io.corbel.iam.auth.AuthorizationRequestContext,java.util.Optional)#io/corbel/iam/auth/AuthorizationRule/process(io.corbel.iam.auth.AuthorizationRequestContext)
io/corbel/iam/service/DefaultAuthorizationService/grantAccess(io.corbel.iam.auth.AuthorizationRequestContext,java.util.Optional)#io/corbel/iam/auth/AuthorizationRequestContext/getIssuerClientDomain()
io/corbel/iam/service/DefaultAuthorizationService/grantAccess(io.corbel.iam.auth.AuthorizationRequestContext,java.util.Optional)#io/corbel/iam/service/EventsService/sendClientAuthenticationEvent(java.lang.String,java.lang.String)
io/corbel/iam/service/DefaultAuthorizationService/grantAccess(io.corbel.iam.auth.AuthorizationRequestContext,java.util.Optional)#io/corbel/iam/auth/AuthorizationRequestContext/getExpandedRequestedScopes()
io/corbel/iam/service/DefaultAuthorizationService/grantAccess(io.corbel.iam.auth.AuthorizationRequestContext,java.util.Optional)#java/util/Optional/isPresent()
io/corbel/iam/service/DefaultAuthorizationService/grantAccess(io.corbel.iam.auth.AuthorizationRequestContext,java.util.Optional)#io/corbel/iam/service/DefaultAuthorizationService/storeUserToken(io.corbel.iam.model.TokenGrant,io.corbel.iam.model.User,java.lang.String,java.util.Set)
io/corbel/iam/service/DefaultAuthorizationService/grantAccess(io.corbel.iam.auth.AuthorizationRequestContext,java.util.Optional)#io/corbel/iam/auth/AuthorizationRequestContext/getTokenScopes()
io/corbel/iam/service/DefaultAuthorizationService/grantAccess(io.corbel.iam.auth.AuthorizationRequestContext,java.util.Optional)#io/corbel/iam/auth/AuthorizationRequestContext/getDeviceId()
io/corbel/iam/service/DefaultAuthorizationService/grantAccess(io.corbel.iam.auth.AuthorizationRequestContext,java.util.Optional)#java/util/Optional/get()
io/corbel/iam/service/DefaultAuthorizationService/grantAccess(io.corbel.iam.auth.AuthorizationRequestContext,java.util.Optional)#io/corbel/iam/service/RefreshTokenService/createRefreshToken(io.corbel.iam.auth.AuthorizationRequestContext,java.lang.String)
io/corbel/iam/service/DefaultAuthorizationService/grantAccess(io.corbel.iam.auth.AuthorizationRequestContext,java.util.Optional)#io/corbel/iam/service/DefaultAuthorizationService/publishScope(io.corbel.iam.model.TokenGrant,io.corbel.iam.auth.AuthorizationRequestContext)
io/corbel/iam/service/DefaultAuthorizationService/grantAccess(io.corbel.iam.auth.AuthorizationRequestContext,java.util.Optional)#java/util/stream/Stream/collect(java.util.stream.Collector)
io/corbel/iam/service/DefaultAuthorizationService/grantAccess(io.corbel.iam.auth.AuthorizationRequestContext,java.util.Optional)#io/corbel/iam/service/DefaultAuthorizationService/getAccessToken(io.corbel.iam.auth.AuthorizationRequestContext)
io/corbel/iam/service/DefaultAuthorizationService/grantAccess(io.corbel.iam.auth.AuthorizationRequestContext,java.util.Optional)#io/corbel/iam/model/User/getDomain()
io/corbel/iam/service/DefaultAuthorizationService/isAnExpiredException(java.lang.String)#org/joda/time/Instant/now()
io/corbel/iam/service/DefaultAuthorizationService/isAnExpiredException(java.lang.String)#net/oauth/jsontoken/JsonTokenParser/expirationIsValid(net.oauth.jsontoken.JsonToken,org.joda.time.Instant)
io/corbel/iam/service/DefaultAuthorizationService/isAnExpiredException(java.lang.String)#net/oauth/jsontoken/JsonTokenParser/deserialize(java.lang.String)
io/corbel/iam/service/DefaultAuthorizationService/isAnExpiredException(java.lang.String)#net/oauth/jsontoken/JsonTokenParser/issuedAtIsValid(net.oauth.jsontoken.JsonToken,org.joda.time.Instant)
io/corbel/iam/service/DefaultAuthorizationService/grantAccess(io.corbel.iam.auth.AuthorizationRequestContext,io.corbel.iam.auth.OauthParams)#java/util/Optional/get()
io/corbel/iam/service/DefaultAuthorizationService/grantAccess(io.corbel.iam.auth.AuthorizationRequestContext,io.corbel.iam.auth.OauthParams)#io/corbel/iam/model/Entity/getId()
io/corbel/iam/service/DefaultAuthorizationService/grantAccess(io.corbel.iam.auth.AuthorizationRequestContext,io.corbel.iam.auth.OauthParams)#io/corbel/iam/model/User/getUsername()
io/corbel/iam/service/DefaultAuthorizationService/grantAccess(io.corbel.iam.auth.AuthorizationRequestContext,io.corbel.iam.auth.OauthParams)#io/corbel/iam/exception/UnauthorizedException/UnauthorizedException(java.lang.String)
io/corbel/iam/service/DefaultAuthorizationService/grantAccess(io.corbel.iam.auth.AuthorizationRequestContext,io.corbel.iam.auth.OauthParams)#java/util/Optional/ofNullable(T)
io/corbel/iam/service/DefaultAuthorizationService/grantAccess(io.corbel.iam.auth.AuthorizationRequestContext,io.corbel.iam.auth.OauthParams)#io/corbel/iam/exception/NoSuchPrincipalException/NoSuchPrincipalException(java.lang.String)
io/corbel/iam/service/DefaultAuthorizationService/grantAccess(io.corbel.iam.auth.AuthorizationRequestContext,io.corbel.iam.auth.OauthParams)#io/corbel/iam/model/Client/getDomain()
io/corbel/iam/service/DefaultAuthorizationService/grantAccess(io.corbel.iam.auth.AuthorizationRequestContext,io.corbel.iam.auth.OauthParams)#io/corbel/iam/service/DefaultAuthorizationService/grantAccess(io.corbel.iam.auth.AuthorizationRequestContext,java.util.Optional)
io/corbel/iam/service/DefaultAuthorizationService/grantAccess(io.corbel.iam.auth.AuthorizationRequestContext,io.corbel.iam.auth.OauthParams)#io/corbel/iam/auth/AuthorizationRequestContext/getRequestedDomain()
io/corbel/iam/service/DefaultAuthorizationService/grantAccess(io.corbel.iam.auth.AuthorizationRequestContext,io.corbel.iam.auth.OauthParams)#io/corbel/iam/utils/Message/getMessage(java.lang.Object[])
io/corbel/iam/service/DefaultAuthorizationService/grantAccess(io.corbel.iam.auth.AuthorizationRequestContext,io.corbel.iam.auth.OauthParams)#java/util/Optional/isPresent()
io/corbel/iam/service/DefaultAuthorizationService/grantAccess(io.corbel.iam.auth.AuthorizationRequestContext,io.corbel.iam.auth.OauthParams)#io/corbel/iam/auth/AuthorizationRequestContext/setPrincipalId(java.lang.String)
io/corbel/iam/service/DefaultAuthorizationService/grantAccess(io.corbel.iam.auth.AuthorizationRequestContext,io.corbel.iam.auth.OauthParams)#io/corbel/iam/auth/AuthorizationRequestContext/getOAuthService()
io/corbel/iam/service/DefaultAuthorizationService/grantAccess(io.corbel.iam.auth.AuthorizationRequestContext,io.corbel.iam.auth.OauthParams)#java/lang/Throwable/getMessage()
io/corbel/iam/service/DefaultAuthorizationService/grantAccess(io.corbel.iam.auth.AuthorizationRequestContext,io.corbel.iam.auth.OauthParams)#io/corbel/iam/auth/provider/Provider/getIdentity(io.corbel.iam.auth.OauthParams,java.lang.String,java.lang.String)
io/corbel/iam/service/DefaultAuthorizationService/grantAccess(io.corbel.iam.auth.AuthorizationRequestContext,io.corbel.iam.auth.OauthParams)#java/util/Optional/map(java.util.function.Function)
io/corbel/iam/service/DefaultAuthorizationService/grantAccess(io.corbel.iam.auth.AuthorizationRequestContext,io.corbel.iam.auth.OauthParams)#io/corbel/iam/auth/provider/AuthorizationProviderFactory/getProvider(io.corbel.iam.model.Domain,java.lang.String)
io/corbel/iam/service/DefaultAuthorizationService/grantAccess(io.corbel.iam.auth.AuthorizationRequestContext,io.corbel.iam.auth.OauthParams)#io/corbel/iam/auth/AuthorizationRequestContext/getIssuerClient()
io/corbel/iam/service/DefaultAuthorizationService/authorize(java.lang.String,io.corbel.iam.auth.OauthParams)#io/corbel/iam/service/DefaultAuthorizationService/grantAccess(io.corbel.iam.auth.AuthorizationRequestContext,io.corbel.iam.auth.OauthParams)
io/corbel/iam/service/DefaultAuthorizationService/authorize(java.lang.String,io.corbel.iam.auth.OauthParams)#io/corbel/iam/exception/UnauthorizedException/UnauthorizedException(java.lang.String)
io/corbel/iam/service/DefaultAuthorizationService/authorize(java.lang.String,io.corbel.iam.auth.OauthParams)#java/lang/Throwable/getMessage()
io/corbel/iam/service/DefaultAuthorizationService/authorize(java.lang.String,io.corbel.iam.auth.OauthParams)#io/corbel/iam/service/DefaultAuthorizationService/logInvalidAssertion(java.lang.String,java.lang.RuntimeException)
io/corbel/iam/service/DefaultAuthorizationService/authorize(java.lang.String,io.corbel.iam.auth.OauthParams)#io/corbel/iam/service/DefaultAuthorizationService/getContext(java.lang.String)
io/corbel/iam/service/DefaultAuthorizationService/authorize(java.lang.String,io.corbel.iam.auth.OauthParams)#io/corbel/iam/service/DefaultAuthorizationService/checkOauthParams(io.corbel.iam.auth.AuthorizationRequestContext,io.corbel.iam.auth.OauthParams)
io/corbel/iam/service/DefaultAuthorizationService/checkBasicParams(io.corbel.iam.auth.AuthorizationRequestContext,io.corbel.iam.auth.BasicParams)#io/corbel/iam/auth/BasicParams/isMissing()
io/corbel/iam/service/DefaultAuthorizationService/checkBasicParams(io.corbel.iam.auth.AuthorizationRequestContext,io.corbel.iam.auth.BasicParams)#io/corbel/iam/exception/MissingBasicParamsException/MissingBasicParamsException(java.lang.String)
io/corbel/iam/service/DefaultAuthorizationService/checkBasicParams(io.corbel.iam.auth.AuthorizationRequestContext,io.corbel.iam.auth.BasicParams)#io/corbel/iam/auth/AuthorizationRequestContext/isBasic()
io/corbel/iam/service/DefaultAuthorizationService/updateDeviceLastConnection(java.lang.String,java.lang.String,java.lang.String)#io/corbel/iam/service/DeviceService/deviceConnect(java.lang.String,java.lang.String,java.lang.String)
io/corbel/iam/service/DefaultAuthorizationService/logInvalidAssertion(java.lang.String,java.lang.RuntimeException)#org/slf4j/Logger/warn(java.lang.String,java.lang.Object[])
io/corbel/iam/service/DefaultAuthorizationService/logInvalidAssertion(java.lang.String,java.lang.RuntimeException)#java/lang/Object/getClass()
io/corbel/iam/service/DefaultAuthorizationService/logInvalidAssertion(java.lang.String,java.lang.RuntimeException)#java/lang/Throwable/getMessage()
io/corbel/iam/service/DefaultAuthorizationService/logInvalidAssertion(java.lang.String,java.lang.RuntimeException)#java/lang/Class/getCanonicalName()
io/corbel/iam/service/DefaultAuthorizationService/refreshToken(io.corbel.iam.auth.AuthorizationRequestContext)#io/corbel/iam/model/User/getUsername()
io/corbel/iam/service/DefaultAuthorizationService/refreshToken(io.corbel.iam.auth.AuthorizationRequestContext)#io/corbel/iam/exception/UnauthorizedException/UnauthorizedException(java.lang.String)
io/corbel/iam/service/DefaultAuthorizationService/refreshToken(io.corbel.iam.auth.AuthorizationRequestContext)#io/corbel/iam/auth/AuthorizationRequestContext/getRefreshToken()
io/corbel/iam/service/DefaultAuthorizationService/refreshToken(io.corbel.iam.auth.AuthorizationRequestContext)#io/corbel/iam/auth/AuthorizationRequestContext/getPrincipalId()
io/corbel/iam/service/DefaultAuthorizationService/refreshToken(io.corbel.iam.auth.AuthorizationRequestContext)#java/util/Optional/of(T)
io/corbel/iam/service/DefaultAuthorizationService/refreshToken(io.corbel.iam.auth.AuthorizationRequestContext)#io/corbel/iam/service/RefreshTokenService/getUserFromRefreshToken(java.lang.String)
io/corbel/iam/service/DefaultAuthorizationService/refreshToken(io.corbel.iam.auth.AuthorizationRequestContext)#io/corbel/iam/service/DefaultAuthorizationService/grantAccess(io.corbel.iam.auth.AuthorizationRequestContext,java.util.Optional)
io/corbel/iam/service/DefaultAuthorizationService/refreshToken(io.corbel.iam.auth.AuthorizationRequestContext)#io/corbel/iam/utils/Message/getMessage(java.lang.Object[])
io/corbel/iam/service/DefaultAuthorizationService/refreshToken(io.corbel.iam.auth.AuthorizationRequestContext)#io/corbel/iam/auth/AuthorizationRequestContext/setPrincipalId(java.lang.String)
io/corbel/iam/service/DefaultAuthorizationService/getContext(java.lang.String)#io/corbel/iam/auth/AuthorizationRequestContextFactory/fromJsonToken(net.oauth.jsontoken.JsonToken)
io/corbel/iam/service/DefaultAuthorizationService/getContext(java.lang.String)#net/oauth/jsontoken/JsonTokenParser/verifyAndDeserialize(java.lang.String)
io/corbel/iam/service/DefaultAuthorizationService/getContext(java.lang.String)#io/corbel/iam/service/DefaultAuthorizationService/isAnExpiredException(java.lang.String)
io/corbel/iam/service/DefaultAuthorizationService/getContext(java.lang.String)#io/corbel/iam/exception/UnauthorizedTimeException/UnauthorizedTimeException(java.lang.String)
io/corbel/iam/service/DefaultAuthorizationService/getContext(java.lang.String)#java/lang/Throwable/getMessage()
io/corbel/iam/service/DefaultAuthorizationService/authorize(java.lang.String)#io/corbel/iam/auth/AuthorizationRequestContext/isOAuth()
io/corbel/iam/service/DefaultAuthorizationService/authorize(java.lang.String)#io/corbel/iam/exception/UnauthorizedException/UnauthorizedException(java.lang.String)
io/corbel/iam/service/DefaultAuthorizationService/authorize(java.lang.String)#io/corbel/iam/service/DefaultAuthorizationService/grantAccess(io.corbel.iam.auth.AuthorizationRequestContext,io.corbel.iam.auth.BasicParams)
io/corbel/iam/service/DefaultAuthorizationService/authorize(java.lang.String)#java/lang/Throwable/getMessage()
io/corbel/iam/service/DefaultAuthorizationService/authorize(java.lang.String)#java/util/Optional/ofNullable(T)
io/corbel/iam/service/DefaultAuthorizationService/authorize(java.lang.String)#io/corbel/iam/service/DefaultAuthorizationService/checkBasicParams(io.corbel.iam.auth.AuthorizationRequestContext,io.corbel.iam.auth.BasicParams)
io/corbel/iam/service/DefaultAuthorizationService/authorize(java.lang.String)#io/corbel/iam/auth/AuthorizationRequestContext/getPrincipal()
io/corbel/iam/service/DefaultAuthorizationService/authorize(java.lang.String)#io/corbel/iam/service/DefaultAuthorizationService/grantAccess(io.corbel.iam.auth.AuthorizationRequestContext,java.util.Optional)
io/corbel/iam/service/DefaultAuthorizationService/authorize(java.lang.String)#io/corbel/iam/service/DefaultAuthorizationService/getContext(java.lang.String)
io/corbel/iam/service/DefaultAuthorizationService/authorize(java.lang.String)#io/corbel/iam/auth/AuthorizationRequestContext/getBasicParams()
io/corbel/iam/service/DefaultAuthorizationService/authorize(java.lang.String)#io/corbel/iam/service/DefaultAuthorizationService/grantAccess(io.corbel.iam.auth.AuthorizationRequestContext,io.corbel.iam.auth.OauthParams)
io/corbel/iam/service/DefaultAuthorizationService/authorize(java.lang.String)#io/corbel/iam/auth/AuthorizationRequestContext/getOauthParams()
io/corbel/iam/service/DefaultAuthorizationService/authorize(java.lang.String)#io/corbel/iam/service/DefaultAuthorizationService/logInvalidAssertion(java.lang.String,java.lang.RuntimeException)
io/corbel/iam/service/DefaultAuthorizationService/authorize(java.lang.String)#io/corbel/iam/auth/AuthorizationRequestContext/hasRefreshToken()
io/corbel/iam/service/DefaultAuthorizationService/authorize(java.lang.String)#io/corbel/iam/service/DefaultAuthorizationService/refreshToken(io.corbel.iam.auth.AuthorizationRequestContext)
io/corbel/iam/service/DefaultAuthorizationService/authorize(java.lang.String)#io/corbel/iam/service/DefaultAuthorizationService/checkOauthParams(io.corbel.iam.auth.AuthorizationRequestContext,io.corbel.iam.auth.OauthParams)
io/corbel/iam/service/DefaultAuthorizationService/authorize(java.lang.String)#io/corbel/iam/auth/AuthorizationRequestContext/isBasic()
io/corbel/iam/service/DefaultAuthorizationService/storeUserToken(io.corbel.iam.model.TokenGrant,io.corbel.iam.model.User,java.lang.String,java.util.Set)#io/corbel/iam/model/Entity/getId()
io/corbel/iam/service/DefaultAuthorizationService/storeUserToken(io.corbel.iam.model.TokenGrant,io.corbel.iam.model.User,java.lang.String,java.util.Set)#io/corbel/iam/model/TokenGrant/getAccessToken()
io/corbel/iam/service/DefaultAuthorizationService/storeUserToken(io.corbel.iam.model.TokenGrant,io.corbel.iam.model.User,java.lang.String,java.util.Set)#io/corbel/iam/model/TokenGrant/getExpiresAt()
io/corbel/iam/service/DefaultAuthorizationService/storeUserToken(io.corbel.iam.model.TokenGrant,io.corbel.iam.model.User,java.lang.String,java.util.Set)#java/util/Date/Date(long)
io/corbel/iam/service/DefaultAuthorizationService/storeUserToken(io.corbel.iam.model.TokenGrant,io.corbel.iam.model.User,java.lang.String,java.util.Set)#io/corbel/iam/model/UserToken/UserToken(java.lang.String,java.lang.String,java.lang.String,java.util.Date,java.util.Set)
io/corbel/iam/service/DefaultAuthorizationService/storeUserToken(io.corbel.iam.model.TokenGrant,io.corbel.iam.model.User,java.lang.String,java.util.Set)#org/springframework/data/repository/CrudRepository/save(S)
io/corbel/iam/service/DefaultAuthorizationService/checkOauthParams(io.corbel.iam.auth.AuthorizationRequestContext,io.corbel.iam.auth.OauthParams)#io/corbel/iam/exception/MissingOAuthParamsException/MissingOAuthParamsException(java.lang.String)
io/corbel/iam/service/DefaultAuthorizationService/checkOauthParams(io.corbel.iam.auth.AuthorizationRequestContext,io.corbel.iam.auth.OauthParams)#io/corbel/iam/auth/AuthorizationRequestContext/isOAuth()
io/corbel/iam/service/DefaultAuthorizationService/checkOauthParams(io.corbel.iam.auth.AuthorizationRequestContext,io.corbel.iam.auth.OauthParams)#io/corbel/iam/auth/OauthParams/isMissing()
io/corbel/oauth/api/UserResourceTestBase/ContextInjectableProvider/configure()#org/glassfish/hk2/utilities/binding/AbstractBinder/bind(T)
io/corbel/oauth/api/UserResourceTestBase/ContextInjectableProvider/configure()#org/glassfish/hk2/utilities/binding/ScopedBindingBuilder/to(java.lang.Class)
io/corbel/resources/api/RemResource/putCollection(java.lang.String,java.lang.String,javax.ws.rs.core.Request,javax.ws.rs.core.UriInfo,io.corbel.lib.ws.auth.AuthorizationInfo,java.io.InputStream,javax.ws.rs.core.MediaType,io.corbel.lib.queries.jaxrs.QueryParameters)#io/corbel/resources/api/RemResource/getBaseUriWithType(javax.ws.rs.core.UriInfo,java.lang.String,java.lang.String)
io/corbel/resources/api/RemResource/putCollection(java.lang.String,java.lang.String,javax.ws.rs.core.Request,javax.ws.rs.core.UriInfo,io.corbel.lib.ws.auth.AuthorizationInfo,java.io.InputStream,javax.ws.rs.core.MediaType,io.corbel.lib.queries.jaxrs.QueryParameters)#io/corbel/resources/api/RemResource/getTokenInfo(io.corbel.lib.ws.auth.AuthorizationInfo)
io/corbel/resources/api/RemResource/putCollection(java.lang.String,java.lang.String,javax.ws.rs.core.Request,javax.ws.rs.core.UriInfo,io.corbel.lib.ws.auth.AuthorizationInfo,java.io.InputStream,javax.ws.rs.core.MediaType,io.corbel.lib.queries.jaxrs.QueryParameters)#io/corbel/resources/service/ResourcesService/collectionOperation(java.lang.String,java.lang.String,javax.ws.rs.core.Request,javax.ws.rs.core.UriInfo,io.corbel.lib.token.TokenInfo,java.net.URI,org.springframework.http.HttpMethod,io.corbel.lib.queries.jaxrs.QueryParameters,java.io.InputStream,javax.ws.rs.core.MediaType)
io/corbel/resources/api/RemResource/setProviders(javax.ws.rs.ext.Providers)#io/corbel/resources/service/ResourcesService/setProviders(javax.ws.rs.ext.Providers)
io/corbel/resources/api/RemResource/getResource(java.lang.String,java.lang.String,io.corbel.resources.rem.request.ResourceId,javax.ws.rs.core.Request,javax.ws.rs.core.UriInfo,io.corbel.lib.ws.auth.AuthorizationInfo,io.corbel.lib.queries.jaxrs.QueryParameters)#io/corbel/resources/api/RemResource/getBaseUriWithType(javax.ws.rs.core.UriInfo,java.lang.String,java.lang.String)
io/corbel/resources/api/RemResource/getResource(java.lang.String,java.lang.String,io.corbel.resources.rem.request.ResourceId,javax.ws.rs.core.Request,javax.ws.rs.core.UriInfo,io.corbel.lib.ws.auth.AuthorizationInfo,io.corbel.lib.queries.jaxrs.QueryParameters)#io/corbel/resources/api/RemResource/updateRequestWithLinksTypeAndUri(javax.ws.rs.core.Request,java.net.URI,java.lang.String)
io/corbel/resources/api/RemResource/getResource(java.lang.String,java.lang.String,io.corbel.resources.rem.request.ResourceId,javax.ws.rs.core.Request,javax.ws.rs.core.UriInfo,io.corbel.lib.ws.auth.AuthorizationInfo,io.corbel.lib.queries.jaxrs.QueryParameters)#io/corbel/resources/service/ResourcesService/resourceOperation(java.lang.String,java.lang.String,io.corbel.resources.rem.request.ResourceId,javax.ws.rs.core.Request,io.corbel.lib.queries.jaxrs.QueryParameters,javax.ws.rs.core.UriInfo,io.corbel.lib.token.TokenInfo,java.net.URI,org.springframework.http.HttpMethod,java.io.InputStream,javax.ws.rs.core.MediaType,java.lang.Long)
io/corbel/resources/api/RemResource/getResource(java.lang.String,java.lang.String,io.corbel.resources.rem.request.ResourceId,javax.ws.rs.core.Request,javax.ws.rs.core.UriInfo,io.corbel.lib.ws.auth.AuthorizationInfo,io.corbel.lib.queries.jaxrs.QueryParameters)#io/corbel/resources/api/RemResource/getTokenInfo(io.corbel.lib.ws.auth.AuthorizationInfo)
io/corbel/resources/api/RemResource/deleteResource(java.lang.String,java.lang.String,io.corbel.resources.rem.request.ResourceId,javax.ws.rs.core.Request,javax.ws.rs.core.UriInfo,io.corbel.lib.ws.auth.AuthorizationInfo,io.corbel.lib.queries.jaxrs.QueryParameters)#io/corbel/resources/api/RemResource/getBaseUriWithType(javax.ws.rs.core.UriInfo,java.lang.String,java.lang.String)
io/corbel/resources/api/RemResource/deleteResource(java.lang.String,java.lang.String,io.corbel.resources.rem.request.ResourceId,javax.ws.rs.core.Request,javax.ws.rs.core.UriInfo,io.corbel.lib.ws.auth.AuthorizationInfo,io.corbel.lib.queries.jaxrs.QueryParameters)#io/corbel/resources/service/ResourcesService/resourceOperation(java.lang.String,java.lang.String,io.corbel.resources.rem.request.ResourceId,javax.ws.rs.core.Request,io.corbel.lib.queries.jaxrs.QueryParameters,javax.ws.rs.core.UriInfo,io.corbel.lib.token.TokenInfo,java.net.URI,org.springframework.http.HttpMethod,java.io.InputStream,javax.ws.rs.core.MediaType,java.lang.Long)
io/corbel/resources/api/RemResource/deleteResource(java.lang.String,java.lang.String,io.corbel.resources.rem.request.ResourceId,javax.ws.rs.core.Request,javax.ws.rs.core.UriInfo,io.corbel.lib.ws.auth.AuthorizationInfo,io.corbel.lib.queries.jaxrs.QueryParameters)#io/corbel/resources/api/RemResource/getTokenInfo(io.corbel.lib.ws.auth.AuthorizationInfo)
io/corbel/resources/api/RemResource/getRelation(java.lang.String,java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,javax.ws.rs.core.Request,javax.ws.rs.core.UriInfo,io.corbel.lib.ws.auth.AuthorizationInfo,io.corbel.lib.queries.jaxrs.QueryParameters,java.lang.String)#io/corbel/resources/service/ResourcesService/relationOperation(java.lang.String,java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,javax.ws.rs.core.Request,javax.ws.rs.core.UriInfo,io.corbel.lib.token.TokenInfo,org.springframework.http.HttpMethod,io.corbel.lib.queries.jaxrs.QueryParameters,java.lang.String,java.io.InputStream,javax.ws.rs.core.MediaType)
io/corbel/resources/api/RemResource/getRelation(java.lang.String,java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,javax.ws.rs.core.Request,javax.ws.rs.core.UriInfo,io.corbel.lib.ws.auth.AuthorizationInfo,io.corbel.lib.queries.jaxrs.QueryParameters,java.lang.String)#io/corbel/resources/api/RemResource/updateRequestWithLinksTypeAndUri(javax.ws.rs.core.Request,java.net.URI,java.lang.String)
io/corbel/resources/api/RemResource/getRelation(java.lang.String,java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,javax.ws.rs.core.Request,javax.ws.rs.core.UriInfo,io.corbel.lib.ws.auth.AuthorizationInfo,io.corbel.lib.queries.jaxrs.QueryParameters,java.lang.String)#io/corbel/resources/api/RemResource/getBaseUri(javax.ws.rs.core.UriInfo,java.lang.String)
io/corbel/resources/api/RemResource/getRelation(java.lang.String,java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,javax.ws.rs.core.Request,javax.ws.rs.core.UriInfo,io.corbel.lib.ws.auth.AuthorizationInfo,io.corbel.lib.queries.jaxrs.QueryParameters,java.lang.String)#io/corbel/resources/api/RemResource/getTokenInfo(io.corbel.lib.ws.auth.AuthorizationInfo)
io/corbel/resources/api/RemResource/getBaseUriWithType(javax.ws.rs.core.UriInfo,java.lang.String,java.lang.String)#javax/ws/rs/core/UriBuilder/build(java.lang.Object[])
io/corbel/resources/api/RemResource/getBaseUriWithType(javax.ws.rs.core.UriInfo,java.lang.String,java.lang.String)#java/lang/Object/getClass()
io/corbel/resources/api/RemResource/getBaseUriWithType(javax.ws.rs.core.UriInfo,java.lang.String,java.lang.String)#javax/ws/rs/core/UriBuilder/path(java.lang.String)
io/corbel/resources/api/RemResource/getBaseUriWithType(javax.ws.rs.core.UriInfo,java.lang.String,java.lang.String)#javax/ws/rs/core/UriBuilder/path(java.lang.Class)
io/corbel/resources/api/RemResource/getBaseUriWithType(javax.ws.rs.core.UriInfo,java.lang.String,java.lang.String)#javax/ws/rs/core/UriInfo/getBaseUriBuilder()
io/corbel/resources/api/RemResource/putResource(java.lang.String,java.lang.String,io.corbel.resources.rem.request.ResourceId,javax.ws.rs.core.Request,javax.ws.rs.core.UriInfo,io.corbel.lib.ws.auth.AuthorizationInfo,java.io.InputStream,javax.ws.rs.core.MediaType,java.lang.Long,io.corbel.lib.queries.jaxrs.QueryParameters)#io/corbel/resources/api/RemResource/getBaseUriWithType(javax.ws.rs.core.UriInfo,java.lang.String,java.lang.String)
io/corbel/resources/api/RemResource/putResource(java.lang.String,java.lang.String,io.corbel.resources.rem.request.ResourceId,javax.ws.rs.core.Request,javax.ws.rs.core.UriInfo,io.corbel.lib.ws.auth.AuthorizationInfo,java.io.InputStream,javax.ws.rs.core.MediaType,java.lang.Long,io.corbel.lib.queries.jaxrs.QueryParameters)#io/corbel/resources/service/ResourcesService/resourceOperation(java.lang.String,java.lang.String,io.corbel.resources.rem.request.ResourceId,javax.ws.rs.core.Request,io.corbel.lib.queries.jaxrs.QueryParameters,javax.ws.rs.core.UriInfo,io.corbel.lib.token.TokenInfo,java.net.URI,org.springframework.http.HttpMethod,java.io.InputStream,javax.ws.rs.core.MediaType,java.lang.Long)
io/corbel/resources/api/RemResource/putResource(java.lang.String,java.lang.String,io.corbel.resources.rem.request.ResourceId,javax.ws.rs.core.Request,javax.ws.rs.core.UriInfo,io.corbel.lib.ws.auth.AuthorizationInfo,java.io.InputStream,javax.ws.rs.core.MediaType,java.lang.Long,io.corbel.lib.queries.jaxrs.QueryParameters)#io/corbel/resources/api/RemResource/getTokenInfo(io.corbel.lib.ws.auth.AuthorizationInfo)
io/corbel/resources/api/RemResource/updateRequestWithLinksTypeAndUri(javax.ws.rs.core.Request,java.net.URI,java.lang.String)#org/glassfish/jersey/server/ContainerRequest/setProperty(java.lang.String,java.lang.Object)
io/corbel/resources/api/RemResource/updateRequestWithLinksTypeAndUri(javax.ws.rs.core.Request,java.net.URI,java.lang.String)#org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)
io/corbel/resources/api/RemResource/putRelation(java.lang.String,java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,javax.ws.rs.core.Request,javax.ws.rs.core.UriInfo,io.corbel.lib.ws.auth.AuthorizationInfo,java.lang.String,java.io.InputStream,javax.ws.rs.core.MediaType,io.corbel.lib.queries.jaxrs.QueryParameters)#io/corbel/resources/api/RemResource/getTokenInfo(io.corbel.lib.ws.auth.AuthorizationInfo)
io/corbel/resources/api/RemResource/putRelation(java.lang.String,java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,javax.ws.rs.core.Request,javax.ws.rs.core.UriInfo,io.corbel.lib.ws.auth.AuthorizationInfo,java.lang.String,java.io.InputStream,javax.ws.rs.core.MediaType,io.corbel.lib.queries.jaxrs.QueryParameters)#io/corbel/resources/service/ResourcesService/relationOperation(java.lang.String,java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,javax.ws.rs.core.Request,javax.ws.rs.core.UriInfo,io.corbel.lib.token.TokenInfo,org.springframework.http.HttpMethod,io.corbel.lib.queries.jaxrs.QueryParameters,java.lang.String,java.io.InputStream,javax.ws.rs.core.MediaType)
io/corbel/resources/api/RemResource/postRelation(java.lang.String,java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,javax.ws.rs.core.Request,javax.ws.rs.core.UriInfo,io.corbel.lib.ws.auth.AuthorizationInfo,java.io.InputStream,javax.ws.rs.core.MediaType)#io/corbel/resources/api/RemResource/getTokenInfo(io.corbel.lib.ws.auth.AuthorizationInfo)
io/corbel/resources/api/RemResource/postRelation(java.lang.String,java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,javax.ws.rs.core.Request,javax.ws.rs.core.UriInfo,io.corbel.lib.ws.auth.AuthorizationInfo,java.io.InputStream,javax.ws.rs.core.MediaType)#io/corbel/resources/service/ResourcesService/relationOperation(java.lang.String,java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,javax.ws.rs.core.Request,javax.ws.rs.core.UriInfo,io.corbel.lib.token.TokenInfo,org.springframework.http.HttpMethod,io.corbel.lib.queries.jaxrs.QueryParameters,java.lang.String,java.io.InputStream,javax.ws.rs.core.MediaType)
io/corbel/resources/api/RemResource/deleteRelation(java.lang.String,java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,javax.ws.rs.core.Request,javax.ws.rs.core.UriInfo,io.corbel.lib.ws.auth.AuthorizationInfo,java.lang.String,io.corbel.lib.queries.jaxrs.QueryParameters)#io/corbel/resources/api/RemResource/getTokenInfo(io.corbel.lib.ws.auth.AuthorizationInfo)
io/corbel/resources/api/RemResource/deleteRelation(java.lang.String,java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,javax.ws.rs.core.Request,javax.ws.rs.core.UriInfo,io.corbel.lib.ws.auth.AuthorizationInfo,java.lang.String,io.corbel.lib.queries.jaxrs.QueryParameters)#io/corbel/resources/service/ResourcesService/relationOperation(java.lang.String,java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,javax.ws.rs.core.Request,javax.ws.rs.core.UriInfo,io.corbel.lib.token.TokenInfo,org.springframework.http.HttpMethod,io.corbel.lib.queries.jaxrs.QueryParameters,java.lang.String,java.io.InputStream,javax.ws.rs.core.MediaType)
io/corbel/resources/api/RemResource/deleteCollection(java.lang.String,java.lang.String,javax.ws.rs.core.Request,javax.ws.rs.core.UriInfo,io.corbel.lib.ws.auth.AuthorizationInfo,io.corbel.lib.queries.jaxrs.QueryParameters)#io/corbel/resources/api/RemResource/getBaseUriWithType(javax.ws.rs.core.UriInfo,java.lang.String,java.lang.String)
io/corbel/resources/api/RemResource/deleteCollection(java.lang.String,java.lang.String,javax.ws.rs.core.Request,javax.ws.rs.core.UriInfo,io.corbel.lib.ws.auth.AuthorizationInfo,io.corbel.lib.queries.jaxrs.QueryParameters)#io/corbel/resources/api/RemResource/getTokenInfo(io.corbel.lib.ws.auth.AuthorizationInfo)
io/corbel/resources/api/RemResource/deleteCollection(java.lang.String,java.lang.String,javax.ws.rs.core.Request,javax.ws.rs.core.UriInfo,io.corbel.lib.ws.auth.AuthorizationInfo,io.corbel.lib.queries.jaxrs.QueryParameters)#io/corbel/resources/service/ResourcesService/collectionOperation(java.lang.String,java.lang.String,javax.ws.rs.core.Request,javax.ws.rs.core.UriInfo,io.corbel.lib.token.TokenInfo,java.net.URI,org.springframework.http.HttpMethod,io.corbel.lib.queries.jaxrs.QueryParameters,java.io.InputStream,javax.ws.rs.core.MediaType)
io/corbel/resources/api/RemResource/postCollection(java.lang.String,java.lang.String,javax.ws.rs.core.Request,javax.ws.rs.core.UriInfo,io.corbel.lib.ws.auth.AuthorizationInfo,java.io.InputStream,javax.ws.rs.core.MediaType)#io/corbel/resources/api/RemResource/getBaseUriWithType(javax.ws.rs.core.UriInfo,java.lang.String,java.lang.String)
io/corbel/resources/api/RemResource/postCollection(java.lang.String,java.lang.String,javax.ws.rs.core.Request,javax.ws.rs.core.UriInfo,io.corbel.lib.ws.auth.AuthorizationInfo,java.io.InputStream,javax.ws.rs.core.MediaType)#io/corbel/resources/api/RemResource/getTokenInfo(io.corbel.lib.ws.auth.AuthorizationInfo)
io/corbel/resources/api/RemResource/postCollection(java.lang.String,java.lang.String,javax.ws.rs.core.Request,javax.ws.rs.core.UriInfo,io.corbel.lib.ws.auth.AuthorizationInfo,java.io.InputStream,javax.ws.rs.core.MediaType)#io/corbel/resources/service/ResourcesService/collectionOperation(java.lang.String,java.lang.String,javax.ws.rs.core.Request,javax.ws.rs.core.UriInfo,io.corbel.lib.token.TokenInfo,java.net.URI,org.springframework.http.HttpMethod,io.corbel.lib.queries.jaxrs.QueryParameters,java.io.InputStream,javax.ws.rs.core.MediaType)
io/corbel/resources/api/RemResource/getCollection(java.lang.String,java.lang.String,javax.ws.rs.core.Request,javax.ws.rs.core.UriInfo,io.corbel.lib.ws.auth.AuthorizationInfo,io.corbel.lib.queries.jaxrs.QueryParameters)#io/corbel/resources/api/RemResource/getBaseUriWithType(javax.ws.rs.core.UriInfo,java.lang.String,java.lang.String)
io/corbel/resources/api/RemResource/getCollection(java.lang.String,java.lang.String,javax.ws.rs.core.Request,javax.ws.rs.core.UriInfo,io.corbel.lib.ws.auth.AuthorizationInfo,io.corbel.lib.queries.jaxrs.QueryParameters)#io/corbel/resources/api/RemResource/getTokenInfo(io.corbel.lib.ws.auth.AuthorizationInfo)
io/corbel/resources/api/RemResource/getCollection(java.lang.String,java.lang.String,javax.ws.rs.core.Request,javax.ws.rs.core.UriInfo,io.corbel.lib.ws.auth.AuthorizationInfo,io.corbel.lib.queries.jaxrs.QueryParameters)#io/corbel/resources/api/RemResource/updateRequestWithLinksTypeAndUri(javax.ws.rs.core.Request,java.net.URI,java.lang.String)
io/corbel/resources/api/RemResource/getCollection(java.lang.String,java.lang.String,javax.ws.rs.core.Request,javax.ws.rs.core.UriInfo,io.corbel.lib.ws.auth.AuthorizationInfo,io.corbel.lib.queries.jaxrs.QueryParameters)#io/corbel/resources/service/ResourcesService/collectionOperation(java.lang.String,java.lang.String,javax.ws.rs.core.Request,javax.ws.rs.core.UriInfo,io.corbel.lib.token.TokenInfo,java.net.URI,org.springframework.http.HttpMethod,io.corbel.lib.queries.jaxrs.QueryParameters,java.io.InputStream,javax.ws.rs.core.MediaType)
io/corbel/resources/api/RemResource/getBaseUri(javax.ws.rs.core.UriInfo,java.lang.String)#javax/ws/rs/core/UriBuilder/build(java.lang.Object[])
io/corbel/resources/api/RemResource/getBaseUri(javax.ws.rs.core.UriInfo,java.lang.String)#java/lang/Object/getClass()
io/corbel/resources/api/RemResource/getBaseUri(javax.ws.rs.core.UriInfo,java.lang.String)#javax/ws/rs/core/UriBuilder/path(java.lang.Class)
io/corbel/resources/api/RemResource/getBaseUri(javax.ws.rs.core.UriInfo,java.lang.String)#javax/ws/rs/core/UriInfo/getBaseUriBuilder()
io/corbel/resources/api/RemResource/getTokenInfo(io.corbel.lib.ws.auth.AuthorizationInfo)#io/corbel/lib/token/reader/TokenReader/getInfo()
io/corbel/resources/api/RemResource/getTokenInfo(io.corbel.lib.ws.auth.AuthorizationInfo)#io/corbel/lib/ws/auth/AuthorizationInfo/getTokenReader()
io/corbel/notifications/NotificationsConsoleRunner/main(java.lang.String[])#io/corbel/lib/ws/log/LogbackUtils/setLogLevel(java.lang.String)
io/corbel/notifications/NotificationsConsoleRunner/main(java.lang.String[])#java/lang/Throwable/getMessage()
io/corbel/notifications/NotificationsConsoleRunner/main(java.lang.String[])#java/lang/System/exit(int)
io/corbel/notifications/NotificationsConsoleRunner/main(java.lang.String[])#io/corbel/lib/cli/console/Console/launch()
io/corbel/notifications/NotificationsConsoleRunner/main(java.lang.String[])#io/corbel/lib/cli/console/Console/runScripts(java.lang.String[])
io/corbel/notifications/NotificationsConsoleRunner/main(java.lang.String[])#io/corbel/notifications/NotificationsConsoleRunner/NotificationsConsoleRunner()
io/corbel/notifications/NotificationsConsoleRunner/main(java.lang.String[])#java/io/PrintStream/println(java.lang.String)
io/corbel/notifications/NotificationsConsoleRunner/createShell()#org/springframework/context/annotation/AnnotationConfigApplicationContext/AnnotationConfigApplicationContext(java.lang.Class<?>[])
io/corbel/notifications/NotificationsConsoleRunner/createShell()#org/springframework/context/support/AbstractApplicationContext/getBean(java.lang.Class)
io/corbel/notifications/NotificationsConsoleRunner/createShell()#java/lang/System/setProperty(java.lang.String,java.lang.String)
io/corbel/resources/rem/acl/AclPutManagedCollectionRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#java/util/Optional/map(java.util.function.Function)
io/corbel/resources/rem/acl/AclPutManagedCollectionRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#java/util/Optional/orElseGet(java.util.function.Supplier)
io/corbel/resources/rem/acl/AclPostRemTest/testEmptyObject()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/acl/AclPostRemTest/testEmptyObject()#java/net/URI/URI(java.lang.String)
io/corbel/resources/rem/acl/AclPostRemTest/testEmptyObject()#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/rem/acl/AclPostRemTest/testEmptyObject()#io/corbel/resources/rem/request/RequestParameters/getAcceptedMediaTypes()
io/corbel/resources/rem/acl/AclPostRemTest/testEmptyObject()#java/util/Optional/empty()
io/corbel/resources/rem/acl/AclPostRemTest/testEmptyObject()#io/corbel/resources/rem/acl/AclBaseRem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional,java.util.Optional)
io/corbel/resources/rem/acl/AclPostRemTest/testEmptyObject()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/resources/rem/acl/AclPostRemTest/testEmptyObject()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/resources/rem/acl/AclPostRemTest/testEmptyObject()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/acl/AclPostRemTest/testEmptyObject()#java/util/Optional/of(T)
io/corbel/resources/rem/acl/AclPostRemTest/testEmptyObject()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/resources/rem/acl/AclPostRemTest/testNoUserId()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/acl/AclPostRemTest/testNoUserId()#io/corbel/resources/rem/request/RequestParameters/getTokenInfo()
io/corbel/resources/rem/acl/AclPostRemTest/testNoUserId()#java/net/URI/URI(java.lang.String)
io/corbel/resources/rem/acl/AclPostRemTest/testNoUserId()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/acl/AclPostRemTest/testNoUserId()#io/corbel/lib/token/TokenInfo/getUserId()
io/corbel/resources/rem/acl/AclPostRemTest/testNoUserId()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/resources/rem/acl/AclPostRemTest/testNoUserId()#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/rem/acl/AclPostRemTest/testNoUserId()#java/util/Optional/empty()
io/corbel/resources/rem/acl/AclPostRemTest/testNoUserId()#io/corbel/resources/rem/acl/AclBaseRem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional,java.util.Optional)
io/corbel/resources/rem/acl/AclPostRemTest/testNoUserId()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/resources/rem/acl/AclPostRemTest/testCorrectNotJsonEntity()#java/net/URI/URI(java.lang.String)
io/corbel/resources/rem/acl/AclPostRemTest/testCorrectNotJsonEntity()#java/util/Collections/singletonList(T)
io/corbel/resources/rem/acl/AclPostRemTest/testCorrectNotJsonEntity()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/acl/AclPostRemTest/testCorrectNotJsonEntity()#org/mockito/Mockito/verify(T)
io/corbel/resources/rem/acl/AclPostRemTest/testCorrectNotJsonEntity()#java/io/ByteArrayInputStream/ByteArrayInputStream(byte[])
io/corbel/resources/rem/acl/AclPostRemTest/testCorrectNotJsonEntity()#java/util/Optional/of(T)
io/corbel/resources/rem/acl/AclPostRemTest/testCorrectNotJsonEntity()#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/rem/acl/AclPostRemTest/testCorrectNotJsonEntity()#io/corbel/resources/rem/service/AclResourcesService/saveResource(io.corbel.resources.rem.Rem,io.corbel.resources.rem.request.RequestParameters,java.lang.String,java.net.URI,java.lang.Object,java.util.List)
io/corbel/resources/rem/acl/AclPostRemTest/testCorrectNotJsonEntity()#java/util/Optional/empty()
io/corbel/resources/rem/acl/AclPostRemTest/testCorrectNotJsonEntity()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/acl/AclPostRemTest/testCorrectNotJsonEntity()#io/corbel/resources/rem/acl/AclTestUtils/getEntityWithoutAcl()
io/corbel/resources/rem/acl/AclPostRemTest/testCorrectNotJsonEntity()#com/google/gson/JsonObject/addProperty(java.lang.String,java.lang.String)
io/corbel/resources/rem/acl/AclPostRemTest/testCorrectNotJsonEntity()#com/google/gson/JsonObject/JsonObject()
io/corbel/resources/rem/acl/AclPostRemTest/testCorrectNotJsonEntity()#java/lang/String/getBytes()
io/corbel/resources/rem/acl/AclPostRemTest/testCorrectNotJsonEntity()#io/corbel/resources/rem/acl/AclBaseRem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional,java.util.Optional)
io/corbel/resources/rem/acl/AclPostRemTest/testCorrectNotJsonEntity()#com/google/gson/JsonElement/toString()
io/corbel/resources/rem/acl/AclPostRemTest/testCorrectNotJsonEntity()#com/google/gson/JsonObject/add(java.lang.String,com.google.gson.JsonElement)
io/corbel/resources/rem/acl/AclPostRemTest/setUp()#io/corbel/resources/rem/request/RequestParameters/getTokenInfo()
io/corbel/resources/rem/acl/AclPostRemTest/setUp()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/acl/AclPostRemTest/setUp()#io/corbel/resources/rem/service/AclResourcesService/updateResource(io.corbel.resources.rem.Rem,java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.lang.Object,java.util.List)
io/corbel/resources/rem/acl/AclPostRemTest/setUp()#javax/ws/rs/core/Response/getMetadata()
io/corbel/resources/rem/acl/AclPostRemTest/setUp()#io/corbel/resources/rem/service/AclResourcesService/getResource(io.corbel.resources.rem.Rem,java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.List)
io/corbel/resources/rem/acl/AclPostRemTest/setUp()#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/rem/acl/AclPostRemTest/setUp()#io/corbel/resources/rem/service/AclResourcesService/saveResource(io.corbel.resources.rem.Rem,io.corbel.resources.rem.request.RequestParameters,java.lang.String,java.net.URI,java.lang.Object,java.util.List)
io/corbel/resources/rem/acl/AclPostRemTest/setUp()#javax/ws/rs/core/MultivaluedMap/add(K,V)
io/corbel/resources/rem/acl/AclPostRemTest/setUp()#org/mockito/Matchers/any()
io/corbel/resources/rem/acl/AclPostRemTest/setUp()#io/corbel/resources/rem/acl/AclBaseRem/setRemService(io.corbel.resources.rem.service.RemService)
io/corbel/resources/rem/acl/AclPostRemTest/setUp()#org/mockito/Matchers/eq(T)
io/corbel/resources/rem/acl/AclPostRemTest/setUp()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/acl/AclPostRemTest/setUp()#io/corbel/resources/rem/acl/AclPostRem/AclPostRem(io.corbel.resources.rem.service.AclResourcesService,java.util.List)
io/corbel/resources/rem/acl/AclPostRemTest/setUp()#java/util/Collections/emptyList()
io/corbel/resources/rem/acl/AclPostRemTest/setUp()#io/corbel/lib/token/TokenInfo/getUserId()
io/corbel/resources/rem/acl/AclPostRemTest/testCorrectJsonEntity()#org/mockito/Mockito/verify(T,org.mockito.verification.VerificationMode)
io/corbel/resources/rem/acl/AclPostRemTest/testCorrectJsonEntity()#java/net/URI/URI(java.lang.String)
io/corbel/resources/rem/acl/AclPostRemTest/testCorrectJsonEntity()#java/util/Collections/singletonList(T)
io/corbel/resources/rem/acl/AclPostRemTest/testCorrectJsonEntity()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/acl/AclPostRemTest/testCorrectJsonEntity()#io/corbel/resources/rem/request/ResourceId/ResourceId(java.lang.String)
io/corbel/resources/rem/acl/AclPostRemTest/testCorrectJsonEntity()#java/io/ByteArrayInputStream/ByteArrayInputStream(byte[])
io/corbel/resources/rem/acl/AclPostRemTest/testCorrectJsonEntity()#io/corbel/resources/rem/service/AclResourcesService/updateResource(io.corbel.resources.rem.Rem,java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.lang.Object,java.util.List)
io/corbel/resources/rem/acl/AclPostRemTest/testCorrectJsonEntity()#java/util/Optional/of(T)
io/corbel/resources/rem/acl/AclPostRemTest/testCorrectJsonEntity()#io/corbel/resources/rem/service/AclResourcesService/saveResource(io.corbel.resources.rem.Rem,io.corbel.resources.rem.request.RequestParameters,java.lang.String,java.net.URI,java.lang.Object,java.util.List)
io/corbel/resources/rem/acl/AclPostRemTest/testCorrectJsonEntity()#java/util/Optional/empty()
io/corbel/resources/rem/acl/AclPostRemTest/testCorrectJsonEntity()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/acl/AclPostRemTest/testCorrectJsonEntity()#io/corbel/resources/rem/acl/AclTestUtils/getEntityWithoutAcl()
io/corbel/resources/rem/acl/AclPostRemTest/testCorrectJsonEntity()#org/mockito/Mockito/times(int)
io/corbel/resources/rem/acl/AclPostRemTest/testCorrectJsonEntity()#org/mockito/Mockito/verify(T)
io/corbel/resources/rem/acl/AclPostRemTest/testCorrectJsonEntity()#com/google/gson/JsonObject/addProperty(java.lang.String,java.lang.String)
io/corbel/resources/rem/acl/AclPostRemTest/testCorrectJsonEntity()#io/corbel/resources/rem/request/RequestParameters/getAcceptedMediaTypes()
io/corbel/resources/rem/acl/AclPostRemTest/testCorrectJsonEntity()#com/google/gson/JsonObject/JsonObject()
io/corbel/resources/rem/acl/AclPostRemTest/testCorrectJsonEntity()#java/lang/String/getBytes()
io/corbel/resources/rem/acl/AclPostRemTest/testCorrectJsonEntity()#io/corbel/resources/rem/acl/AclBaseRem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional,java.util.Optional)
io/corbel/resources/rem/acl/AclPostRemTest/testCorrectJsonEntity()#com/google/gson/JsonElement/toString()
io/corbel/resources/rem/acl/AclPostRemTest/testCorrectJsonEntity()#com/google/gson/JsonObject/add(java.lang.String,com.google.gson.JsonElement)
io/corbel/resources/rem/acl/AclPostRemTest/testExcludedRems()#java/net/URI/URI(java.lang.String)
io/corbel/resources/rem/acl/AclPostRemTest/testExcludedRems()#java/util/Collections/singletonList(T)
io/corbel/resources/rem/acl/AclPostRemTest/testExcludedRems()#org/mockito/Mockito/verify(T)
io/corbel/resources/rem/acl/AclPostRemTest/testExcludedRems()#java/io/ByteArrayInputStream/ByteArrayInputStream(byte[])
io/corbel/resources/rem/acl/AclPostRemTest/testExcludedRems()#java/util/Arrays/asList(T[])
io/corbel/resources/rem/acl/AclPostRemTest/testExcludedRems()#java/util/Optional/of(T)
io/corbel/resources/rem/acl/AclPostRemTest/testExcludedRems()#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/rem/acl/AclPostRemTest/testExcludedRems()#io/corbel/resources/rem/service/AclResourcesService/saveResource(io.corbel.resources.rem.Rem,io.corbel.resources.rem.request.RequestParameters,java.lang.String,java.net.URI,java.lang.Object,java.util.List)
io/corbel/resources/rem/acl/AclPostRemTest/testExcludedRems()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/acl/AclPostRemTest/testExcludedRems()#io/corbel/resources/rem/acl/AclTestUtils/getEntityWithoutAcl()
io/corbel/resources/rem/acl/AclPostRemTest/testExcludedRems()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/resources/rem/acl/AclPostRemTest/testExcludedRems()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/acl/AclPostRemTest/testExcludedRems()#com/google/gson/JsonObject/addProperty(java.lang.String,java.lang.String)
io/corbel/resources/rem/acl/AclPostRemTest/testExcludedRems()#com/google/gson/JsonObject/JsonObject()
io/corbel/resources/rem/acl/AclPostRemTest/testExcludedRems()#java/lang/String/getBytes()
io/corbel/resources/rem/acl/AclPostRemTest/testExcludedRems()#io/corbel/resources/rem/acl/AclBaseRem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional,java.util.Optional)
io/corbel/resources/rem/acl/AclPostRemTest/testExcludedRems()#com/google/gson/JsonElement/toString()
io/corbel/resources/rem/acl/AclPostRemTest/testExcludedRems()#com/google/gson/JsonObject/add(java.lang.String,com.google.gson.JsonElement)
io/corbel/evci/EvciService/configureService(io.dropwizard.setup.Environment,org.springframework.context.ApplicationContext)#com/codahale/metrics/health/HealthCheckRegistry/register(java.lang.String,com.codahale.metrics.health.HealthCheck)
io/corbel/evci/EvciService/configureService(io.dropwizard.setup.Environment,org.springframework.context.ApplicationContext)#io/dropwizard/setup/Environment/jersey()
io/corbel/evci/EvciService/configureService(io.dropwizard.setup.Environment,org.springframework.context.ApplicationContext)#io/corbel/lib/ws/health/BasicHealthCheck/BasicHealthCheck()
io/corbel/evci/EvciService/configureService(io.dropwizard.setup.Environment,org.springframework.context.ApplicationContext)#io/corbel/lib/ws/cli/ServiceRunnerWithVersionResource/configureService(io.dropwizard.setup.Environment,org.springframework.context.ApplicationContext)
io/corbel/evci/EvciService/configureService(io.dropwizard.setup.Environment,org.springframework.context.ApplicationContext)#org/springframework/beans/factory/BeanFactory/getBean(java.lang.Class)
io/corbel/evci/EvciService/configureService(io.dropwizard.setup.Environment,org.springframework.context.ApplicationContext)#io/dropwizard/setup/Environment/healthChecks()
io/corbel/evci/EvciService/configureService(io.dropwizard.setup.Environment,org.springframework.context.ApplicationContext)#io/dropwizard/jersey/setup/JerseyEnvironment/register(java.lang.Object)
io/corbel/resources/rem/service/DefaultImageCacheService/removeFromCollectionCache(io.corbel.resources.rem.Rem,io.corbel.resources.rem.request.RequestParameters,java.lang.String)#io/corbel/resources/rem/Rem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional)
io/corbel/resources/rem/service/DefaultImageCacheService/removeFromCollectionCache(io.corbel.resources.rem.Rem,io.corbel.resources.rem.request.RequestParameters,java.lang.String)#io/corbel/resources/rem/service/DefaultImageCacheService/getPrefix(java.lang.String)
io/corbel/resources/rem/service/DefaultImageCacheService/removeFromCollectionCache(io.corbel.resources.rem.Rem,io.corbel.resources.rem.request.RequestParameters,java.lang.String)#java/util/Optional/empty()
io/corbel/resources/rem/service/DefaultImageCacheService/removeFromCollectionCache(io.corbel.resources.rem.Rem,io.corbel.resources.rem.request.RequestParameters,java.lang.String)#io/corbel/resources/rem/service/DefaultImageCacheService/getCollectionParameters(java.lang.String,io.corbel.resources.rem.request.RequestParameters)
io/corbel/resources/rem/service/DefaultImageCacheService/createInputStream(java.io.File)#java/io/FileInputStream/FileInputStream(java.io.File)
io/corbel/resources/rem/service/DefaultImageCacheService/generateId(io.corbel.resources.rem.request.ResourceId,java.lang.String,java.lang.String,java.util.Optional)#io/corbel/resources/rem/request/ResourceId/getId()
io/corbel/resources/rem/service/DefaultImageCacheService/generateId(io.corbel.resources.rem.request.ResourceId,java.lang.String,java.lang.String,java.util.Optional)#java/util/Optional/map(java.util.function.Function)
io/corbel/resources/rem/service/DefaultImageCacheService/generateId(io.corbel.resources.rem.request.ResourceId,java.lang.String,java.lang.String,java.util.Optional)#io/corbel/resources/rem/service/DefaultImageCacheService/getPrefix(java.lang.String,java.lang.String)
io/corbel/resources/rem/service/DefaultImageCacheService/generateId(io.corbel.resources.rem.request.ResourceId,java.lang.String,java.lang.String,java.util.Optional)#java/util/Optional/orElse(T)
io/corbel/resources/rem/service/DefaultImageCacheService/generateId(io.corbel.resources.rem.request.ResourceId,java.lang.String,java.lang.String,java.util.Optional)#io/corbel/resources/rem/request/ResourceId/ResourceId(java.lang.String)
io/corbel/resources/rem/service/DefaultImageCacheService/getFromCache(io.corbel.resources.rem.Rem,io.corbel.resources.rem.request.ResourceId,java.lang.String,java.util.Optional,java.lang.String,io.corbel.resources.rem.request.RequestParameters)#javax/ws/rs/core/Response/getEntity()
io/corbel/resources/rem/service/DefaultImageCacheService/getFromCache(io.corbel.resources.rem.Rem,io.corbel.resources.rem.request.ResourceId,java.lang.String,java.util.Optional,java.lang.String,io.corbel.resources.rem.request.RequestParameters)#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/rem/service/DefaultImageCacheService/getFromCache(io.corbel.resources.rem.Rem,io.corbel.resources.rem.request.ResourceId,java.lang.String,java.util.Optional,java.lang.String,io.corbel.resources.rem.request.RequestParameters)#java/util/Optional/empty()
io/corbel/resources/rem/service/DefaultImageCacheService/getFromCache(io.corbel.resources.rem.Rem,io.corbel.resources.rem.request.ResourceId,java.lang.String,java.util.Optional,java.lang.String,io.corbel.resources.rem.request.RequestParameters)#io/corbel/resources/rem/Rem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)
io/corbel/resources/rem/service/DefaultImageCacheService/getFromCache(io.corbel.resources.rem.Rem,io.corbel.resources.rem.request.ResourceId,java.lang.String,java.util.Optional,java.lang.String,io.corbel.resources.rem.request.RequestParameters)#io/corbel/resources/rem/service/DefaultImageCacheService/generateId(io.corbel.resources.rem.request.ResourceId,java.lang.String,java.lang.String,java.util.Optional)
io/corbel/resources/rem/service/DefaultImageCacheService/removeFromCache(io.corbel.resources.rem.Rem,io.corbel.resources.rem.request.RequestParameters,io.corbel.resources.rem.request.ResourceId,java.lang.String)#io/corbel/resources/rem/request/ResourceId/getId()
io/corbel/resources/rem/service/DefaultImageCacheService/removeFromCache(io.corbel.resources.rem.Rem,io.corbel.resources.rem.request.RequestParameters,io.corbel.resources.rem.request.ResourceId,java.lang.String)#io/corbel/resources/rem/Rem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional)
io/corbel/resources/rem/service/DefaultImageCacheService/removeFromCache(io.corbel.resources.rem.Rem,io.corbel.resources.rem.request.RequestParameters,io.corbel.resources.rem.request.ResourceId,java.lang.String)#java/util/Optional/empty()
io/corbel/resources/rem/service/DefaultImageCacheService/removeFromCache(io.corbel.resources.rem.Rem,io.corbel.resources.rem.request.RequestParameters,io.corbel.resources.rem.request.ResourceId,java.lang.String)#io/corbel/resources/rem/service/DefaultImageCacheService/getPrefix(java.lang.String,java.lang.String)
io/corbel/resources/rem/service/DefaultImageCacheService/removeFromCache(io.corbel.resources.rem.Rem,io.corbel.resources.rem.request.RequestParameters,io.corbel.resources.rem.request.ResourceId,java.lang.String)#io/corbel/resources/rem/service/DefaultImageCacheService/getCollectionParameters(java.lang.String,io.corbel.resources.rem.request.RequestParameters)
io/corbel/resources/rem/service/DefaultImageCacheService/saveInCacheAsync(io.corbel.resources.rem.Rem,io.corbel.resources.rem.request.ResourceId,java.lang.String,java.util.Optional,java.lang.Long,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.io.File)#org/slf4j/Logger/warn(java.lang.String,java.lang.Object)
io/corbel/resources/rem/service/DefaultImageCacheService/saveInCacheAsync(io.corbel.resources.rem.Rem,io.corbel.resources.rem.request.ResourceId,java.lang.String,java.util.Optional,java.lang.Long,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.io.File)#io/corbel/resources/rem/service/DefaultImageCacheService/createInputStream(java.io.File)
io/corbel/resources/rem/service/DefaultImageCacheService/saveInCacheAsync(io.corbel.resources.rem.Rem,io.corbel.resources.rem.request.ResourceId,java.lang.String,java.util.Optional,java.lang.Long,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.io.File)#io/corbel/resources/rem/request/RequestParametersImplCustomContentLength/RequestParametersImplCustomContentLength(io.corbel.resources.rem.request.RequestParameters,java.lang.Long)
io/corbel/resources/rem/service/DefaultImageCacheService/saveInCacheAsync(io.corbel.resources.rem.Rem,io.corbel.resources.rem.request.ResourceId,java.lang.String,java.util.Optional,java.lang.Long,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.io.File)#java/io/File/delete()
io/corbel/resources/rem/service/DefaultImageCacheService/saveInCacheAsync(io.corbel.resources.rem.Rem,io.corbel.resources.rem.request.ResourceId,java.lang.String,java.util.Optional,java.lang.Long,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.io.File)#io/corbel/resources/rem/Rem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)
io/corbel/resources/rem/service/DefaultImageCacheService/saveInCacheAsync(io.corbel.resources.rem.Rem,io.corbel.resources.rem.request.ResourceId,java.lang.String,java.util.Optional,java.lang.Long,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.io.File)#io/corbel/resources/rem/service/DefaultImageCacheService/generateId(io.corbel.resources.rem.request.ResourceId,java.lang.String,java.lang.String,java.util.Optional)
io/corbel/resources/rem/service/DefaultImageCacheService/saveInCacheAsync(io.corbel.resources.rem.Rem,io.corbel.resources.rem.request.ResourceId,java.lang.String,java.util.Optional,java.lang.Long,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.io.File)#java/util/Optional/of(T)
io/corbel/resources/rem/service/DefaultImageCacheService/saveInCacheAsync(io.corbel.resources.rem.Rem,io.corbel.resources.rem.request.ResourceId,java.lang.String,java.util.Optional,java.lang.Long,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.io.File)#org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)
io/corbel/resources/rem/service/DefaultImageCacheService/saveInCacheAsync(io.corbel.resources.rem.Rem,io.corbel.resources.rem.request.ResourceId,java.lang.String,java.util.Optional,java.lang.Long,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.io.File)#java/io/File/getAbsolutePath()
io/corbel/resources/rem/service/DefaultImageCacheService/getCollectionParameters(java.lang.String,io.corbel.resources.rem.request.RequestParameters)#javax/ws/rs/core/MultivaluedMap/putSingle(K,V)
io/corbel/resources/rem/service/DefaultImageCacheService/getCollectionParameters(java.lang.String,io.corbel.resources.rem.request.RequestParameters)#io/corbel/resources/rem/request/RequestParameters/getHeaders()
io/corbel/resources/rem/service/DefaultImageCacheService/getCollectionParameters(java.lang.String,io.corbel.resources.rem.request.RequestParameters)#io/corbel/resources/rem/request/RequestParameters/getTokenInfo()
io/corbel/resources/rem/service/DefaultImageCacheService/getCollectionParameters(java.lang.String,io.corbel.resources.rem.request.RequestParameters)#io/corbel/resources/rem/request/CollectionParametersImpl/CollectionParametersImpl(io.corbel.lib.queries.request.Pagination,java.util.Optional,java.util.Optional,java.util.Optional,java.util.Optional,java.util.Optional)
io/corbel/resources/rem/service/DefaultImageCacheService/getCollectionParameters(java.lang.String,io.corbel.resources.rem.request.RequestParameters)#io/corbel/lib/queries/request/Pagination/Pagination(int,int)
io/corbel/resources/rem/service/DefaultImageCacheService/getCollectionParameters(java.lang.String,io.corbel.resources.rem.request.RequestParameters)#io/corbel/resources/rem/request/RequestParameters/getRequestedDomain()
io/corbel/resources/rem/service/DefaultImageCacheService/getCollectionParameters(java.lang.String,io.corbel.resources.rem.request.RequestParameters)#javax/ws/rs/core/MultivaluedHashMap/MultivaluedHashMap(javax.ws.rs.core.MultivaluedMap)
io/corbel/resources/rem/service/DefaultImageCacheService/getCollectionParameters(java.lang.String,io.corbel.resources.rem.request.RequestParameters)#io/corbel/resources/rem/request/RequestParameters/getAcceptedMediaTypes()
io/corbel/resources/rem/service/DefaultImageCacheService/getCollectionParameters(java.lang.String,io.corbel.resources.rem.request.RequestParameters)#java/util/Optional/empty()
io/corbel/resources/rem/service/DefaultImageCacheService/getCollectionParameters(java.lang.String,io.corbel.resources.rem.request.RequestParameters)#io/corbel/resources/rem/request/RequestParameters/getContentLength()
io/corbel/resources/rem/service/DefaultImageCacheService/getCollectionParameters(java.lang.String,io.corbel.resources.rem.request.RequestParameters)#io/corbel/resources/rem/request/RequestParametersImpl/RequestParametersImpl(E,io.corbel.lib.token.TokenInfo,java.lang.String,java.util.List,java.lang.Long,javax.ws.rs.core.MultivaluedMap,javax.ws.rs.core.MultivaluedMap)
io/corbel/resources/rem/service/DefaultImageCacheService/getCollectionParameters(java.lang.String,io.corbel.resources.rem.request.RequestParameters)#io/corbel/resources/rem/request/RequestParameters/getParams()
io/corbel/rem/internal/InMemoryRemRegistryTest/test()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/rem/internal/InMemoryRemRegistryTest/test()#org/springframework/http/MediaType/parseMediaType(java.lang.String)
io/corbel/rem/internal/InMemoryRemRegistryTest/test()#io/corbel/rem/internal/InMemoryRemRegistry/registerRem(io.corbel.resources.rem.Rem,java.lang.String,org.springframework.http.MediaType,org.springframework.http.HttpMethod[])
io/corbel/rem/internal/InMemoryRemRegistryTest/test()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/rem/internal/InMemoryRemRegistryTest/test()#io/corbel/rem/internal/InMemoryRemRegistry/getRem(java.lang.String,java.util.List,org.springframework.http.HttpMethod,java.util.List)
io/corbel/rem/internal/InMemoryRemRegistryTest/test()#java/util/Arrays/asList(T[])
io/corbel/rem/internal/InMemoryRemRegistryTest/test()#org/fest/assertions/api/Assertions/assertThat(T)
io/corbel/rem/internal/InMemoryRemRegistryTest/test()#io/corbel/rem/internal/InMemoryRemRegistry/InMemoryRemRegistry()
io/corbel/iam/jwt/ClientVerifierProviderTest/testValidHmacKey()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/jwt/ClientVerifierProviderTest/testValidHmacKey()#io/corbel/iam/model/ClientCredential/getKey()
io/corbel/iam/jwt/ClientVerifierProviderTest/testValidHmacKey()#org/fest/assertions/api/AbstractAssert/isNotNull()
io/corbel/iam/jwt/ClientVerifierProviderTest/testValidHmacKey()#io/corbel/iam/jwt/ClientVerifierProvider/findVerifier(java.lang.String,java.lang.String)
io/corbel/iam/jwt/ClientVerifierProviderTest/testValidHmacKey()#io/corbel/iam/repository/ClientRepositoryCustom/findCredentialById(java.lang.String)
io/corbel/iam/jwt/ClientVerifierProviderTest/testValidHmacKey()#org/fest/assertions/api/Assertions/assertThat(java.util.List)
io/corbel/iam/jwt/ClientVerifierProviderTest/testValidHmacKey()#io/corbel/iam/model/ClientCredential/getSignatureAlgorithm()
io/corbel/iam/jwt/ClientVerifierProviderTest/testValidHmacKey()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/iam/jwt/ClientVerifierProviderTest/testValidHmacKey()#org/mockito/Mockito/when(T)
io/corbel/iam/jwt/ClientVerifierProviderTest/setup()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/iam/jwt/ClientVerifierProviderTest/setup()#io/corbel/iam/jwt/ClientVerifierProvider/ClientVerifierProvider(io.corbel.iam.repository.ClientRepository)
io/corbel/iam/jwt/ClientVerifierProviderTest/testInvalidKey()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/jwt/ClientVerifierProviderTest/testInvalidKey()#org/fest/assertions/api/AbstractAssert/isNull()
io/corbel/iam/jwt/ClientVerifierProviderTest/testInvalidKey()#org/springframework/data/repository/CrudRepository/findOne(ID)
io/corbel/iam/jwt/ClientVerifierProviderTest/testInvalidKey()#io/corbel/iam/jwt/ClientVerifierProvider/findVerifier(java.lang.String,java.lang.String)
io/corbel/iam/jwt/ClientVerifierProviderTest/testInvalidKey()#org/fest/assertions/api/Assertions/assertThat(java.util.List)
io/corbel/iam/jwt/ClientVerifierProviderTest/testInvalidKey()#io/corbel/iam/model/Client/getKey()
io/corbel/iam/jwt/ClientVerifierProviderTest/testInvalidKey()#io/corbel/iam/model/Client/getSignatureAlgorithm()
io/corbel/iam/jwt/ClientVerifierProviderTest/testInvalidKey()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/iam/jwt/ClientVerifierProviderTest/testInvalidKey()#org/mockito/Mockito/when(T)
io/corbel/iam/jwt/ClientVerifierProviderTest/testClientNotFound()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/jwt/ClientVerifierProviderTest/testClientNotFound()#org/fest/assertions/api/AbstractAssert/isNull()
io/corbel/iam/jwt/ClientVerifierProviderTest/testClientNotFound()#org/mockito/Mockito/when(T)
io/corbel/iam/jwt/ClientVerifierProviderTest/testClientNotFound()#org/springframework/data/repository/CrudRepository/findOne(ID)
io/corbel/iam/jwt/ClientVerifierProviderTest/testClientNotFound()#io/corbel/iam/jwt/ClientVerifierProvider/findVerifier(java.lang.String,java.lang.String)
io/corbel/iam/jwt/ClientVerifierProviderTest/testClientNotFound()#org/fest/assertions/api/Assertions/assertThat(java.util.List)
io/corbel/iam/jwt/ClientVerifierProviderTest/testValidPublicKey()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/jwt/ClientVerifierProviderTest/testValidPublicKey()#io/corbel/iam/model/ClientCredential/getKey()
io/corbel/iam/jwt/ClientVerifierProviderTest/testValidPublicKey()#org/fest/assertions/api/AbstractAssert/isNotNull()
io/corbel/iam/jwt/ClientVerifierProviderTest/testValidPublicKey()#io/corbel/iam/jwt/ClientVerifierProvider/findVerifier(java.lang.String,java.lang.String)
io/corbel/iam/jwt/ClientVerifierProviderTest/testValidPublicKey()#io/corbel/iam/repository/ClientRepositoryCustom/findCredentialById(java.lang.String)
io/corbel/iam/jwt/ClientVerifierProviderTest/testValidPublicKey()#org/fest/assertions/api/Assertions/assertThat(java.util.List)
io/corbel/iam/jwt/ClientVerifierProviderTest/testValidPublicKey()#io/corbel/iam/model/ClientCredential/getSignatureAlgorithm()
io/corbel/iam/jwt/ClientVerifierProviderTest/testValidPublicKey()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/iam/jwt/ClientVerifierProviderTest/testValidPublicKey()#org/mockito/Mockito/when(T)
io/corbel/oauth/api/AuthorizeResource/createToken(java.lang.String,io.corbel.oauth.model.ResponseType,java.lang.String)#java/lang/Enum/name()
io/corbel/oauth/api/AuthorizeResource/createToken(java.lang.String,io.corbel.oauth.model.ResponseType,java.lang.String)#io/corbel/lib/token/TokenInfo/Builder/build()
io/corbel/oauth/api/AuthorizeResource/createToken(java.lang.String,io.corbel.oauth.model.ResponseType,java.lang.String)#io/corbel/oauth/token/TokenExpireTime/getTokenExpireTimeFromResponseType(io.corbel.lib.token.model.TokenType)
io/corbel/oauth/api/AuthorizeResource/createToken(java.lang.String,io.corbel.oauth.model.ResponseType,java.lang.String)#io/corbel/lib/token/factory/TokenFactory/createToken(io.corbel.lib.token.TokenInfo,long,java.lang.String[])
io/corbel/oauth/api/AuthorizeResource/createToken(java.lang.String,io.corbel.oauth.model.ResponseType,java.lang.String)#io/corbel/lib/token/model/TokenType/valueOf(java.lang.String)
io/corbel/oauth/api/AuthorizeResource/createToken(java.lang.String,io.corbel.oauth.model.ResponseType,java.lang.String)#io/corbel/lib/token/TokenInfo/Builder/setClientId(java.lang.String)
io/corbel/oauth/api/AuthorizeResource/createToken(java.lang.String,io.corbel.oauth.model.ResponseType,java.lang.String)#io/corbel/lib/token/TokenInfo/newBuilder()
io/corbel/oauth/api/AuthorizeResource/createToken(java.lang.String,io.corbel.oauth.model.ResponseType,java.lang.String)#io/corbel/lib/token/TokenInfo/Builder/setUserId(java.lang.String)
io/corbel/oauth/api/AuthorizeResource/createToken(java.lang.String,io.corbel.oauth.model.ResponseType,java.lang.String)#io/corbel/lib/token/TokenInfo/Builder/setType(io.corbel.lib.token.model.TokenType)
io/corbel/oauth/api/AuthorizeResource/signinWithEmail(java.lang.String,java.lang.String,java.lang.String)#io/corbel/oauth/service/UserService/getUserByEmailAndDomain(java.lang.String,java.lang.String)
io/corbel/oauth/api/AuthorizeResource/signinWithEmail(java.lang.String,java.lang.String,java.lang.String)#io/corbel/oauth/api/AuthorizeResource/signinInternal(io.corbel.oauth.model.User,java.lang.String)
io/corbel/oauth/api/AuthorizeResource/authorize(java.lang.String,java.lang.String,java.lang.String,io.corbel.lib.token.reader.TokenReader,java.lang.String)#io/corbel/oauth/model/ResponseType/fromString(java.lang.String)
io/corbel/oauth/api/AuthorizeResource/authorize(java.lang.String,java.lang.String,java.lang.String,io.corbel.lib.token.reader.TokenReader,java.lang.String)#io/corbel/oauth/service/ClientService/findByName(java.lang.String)
io/corbel/oauth/api/AuthorizeResource/authorize(java.lang.String,java.lang.String,java.lang.String,io.corbel.lib.token.reader.TokenReader,java.lang.String)#java/util/Optional/orElse(T)
io/corbel/oauth/api/AuthorizeResource/authorize(java.lang.String,java.lang.String,java.lang.String,io.corbel.lib.token.reader.TokenReader,java.lang.String)#java/util/Optional/map(java.util.function.Function)
io/corbel/oauth/api/AuthorizeResource/authorize(java.lang.String,java.lang.String,java.lang.String,io.corbel.lib.token.reader.TokenReader,java.lang.String)#io/corbel/lib/ws/model/Error/Error(java.lang.String,java.lang.String)
io/corbel/oauth/api/AuthorizeResource/authorize(java.lang.String,java.lang.String,java.lang.String,io.corbel.lib.token.reader.TokenReader,java.lang.String)#io/corbel/lib/ws/api/error/ErrorResponseFactory/notfound(io.corbel.lib.ws.model.Error)
io/corbel/oauth/api/AuthorizeResource/authorize(java.lang.String,java.lang.String,java.lang.String,io.corbel.lib.token.reader.TokenReader,java.lang.String)#io/corbel/lib/ws/api/error/ErrorResponseFactory/unauthorized()
io/corbel/oauth/api/AuthorizeResource/authorize(java.lang.String,java.lang.String,java.lang.String,io.corbel.lib.token.reader.TokenReader,java.lang.String)#io/corbel/lib/ws/api/error/ErrorResponseFactory/getInstance()
io/corbel/oauth/api/AuthorizeResource/authorize(java.lang.String,java.lang.String,java.lang.String,io.corbel.lib.token.reader.TokenReader,java.lang.String)#java/util/Optional/of(T)
io/corbel/oauth/api/AuthorizeResource/authorize(java.lang.String,java.lang.String,java.lang.String,io.corbel.lib.token.reader.TokenReader,java.lang.String)#io/corbel/oauth/api/AuthorizeResource/assertRequiredParameter(java.lang.Object,java.lang.String)
io/corbel/oauth/api/AuthorizeResource/tryLoginWithCookieSession(io.corbel.oauth.model.Client,java.lang.String,java.util.Optional,io.corbel.oauth.model.ResponseType,java.util.Optional)#java/util/Optional/orElse(T)
io/corbel/oauth/api/AuthorizeResource/tryLoginWithCookieSession(io.corbel.oauth.model.Client,java.lang.String,java.util.Optional,io.corbel.oauth.model.ResponseType,java.util.Optional)#io/corbel/oauth/api/AuthorizeResource/getTokenResponseFromSession(java.util.Optional,io.corbel.oauth.model.ResponseType,io.corbel.oauth.model.Client,java.lang.String,java.util.Optional)
io/corbel/oauth/api/AuthorizeResource/tryLoginWithCookieSession(io.corbel.oauth.model.Client,java.lang.String,java.util.Optional,io.corbel.oauth.model.ResponseType,java.util.Optional)#io/corbel/lib/ws/api/error/ErrorResponseFactory/unauthorized()
io/corbel/oauth/api/AuthorizeResource/tryLoginWithCookieSession(io.corbel.oauth.model.Client,java.lang.String,java.util.Optional,io.corbel.oauth.model.ResponseType,java.util.Optional)#io/corbel/lib/ws/api/error/ErrorResponseFactory/getInstance()
io/corbel/oauth/api/AuthorizeResource/tryLoginWithUserCredentials(java.lang.String,java.lang.String,io.corbel.oauth.model.Client,java.lang.String,io.corbel.oauth.model.ResponseType,java.util.Optional)#java/util/Optional/get()
io/corbel/oauth/api/AuthorizeResource/tryLoginWithUserCredentials(java.lang.String,java.lang.String,io.corbel.oauth.model.Client,java.lang.String,io.corbel.oauth.model.ResponseType,java.util.Optional)#io/corbel/oauth/api/AuthorizeResource/signinWithEmail(java.lang.String,java.lang.String,java.lang.String)
io/corbel/oauth/api/AuthorizeResource/tryLoginWithUserCredentials(java.lang.String,java.lang.String,io.corbel.oauth.model.Client,java.lang.String,io.corbel.oauth.model.ResponseType,java.util.Optional)#io/corbel/oauth/model/Client/getDomain()
io/corbel/oauth/api/AuthorizeResource/tryLoginWithUserCredentials(java.lang.String,java.lang.String,io.corbel.oauth.model.Client,java.lang.String,io.corbel.oauth.model.ResponseType,java.util.Optional)#io/corbel/lib/ws/api/error/ErrorResponseFactory/unauthorized()
io/corbel/oauth/api/AuthorizeResource/tryLoginWithUserCredentials(java.lang.String,java.lang.String,io.corbel.oauth.model.Client,java.lang.String,io.corbel.oauth.model.ResponseType,java.util.Optional)#java/util/Optional/isPresent()
io/corbel/oauth/api/AuthorizeResource/tryLoginWithUserCredentials(java.lang.String,java.lang.String,io.corbel.oauth.model.Client,java.lang.String,io.corbel.oauth.model.ResponseType,java.util.Optional)#io/corbel/oauth/api/AuthorizeResource/doResponse(java.lang.String,io.corbel.oauth.model.ResponseType,io.corbel.oauth.model.Client,java.lang.String,java.util.Optional)
io/corbel/oauth/api/AuthorizeResource/tryLoginWithUserCredentials(java.lang.String,java.lang.String,io.corbel.oauth.model.Client,java.lang.String,io.corbel.oauth.model.ResponseType,java.util.Optional)#io/corbel/oauth/api/AuthorizeResource/checkPostArguments(java.lang.String,java.lang.String,io.corbel.oauth.model.ResponseType,io.corbel.oauth.model.Client,java.lang.String)
io/corbel/oauth/api/AuthorizeResource/tryLoginWithUserCredentials(java.lang.String,java.lang.String,io.corbel.oauth.model.Client,java.lang.String,io.corbel.oauth.model.ResponseType,java.util.Optional)#io/corbel/oauth/api/AuthorizeResource/signinWithUsername(java.lang.String,java.lang.String,java.lang.String)
io/corbel/oauth/api/AuthorizeResource/tryLoginWithUserCredentials(java.lang.String,java.lang.String,io.corbel.oauth.model.Client,java.lang.String,io.corbel.oauth.model.ResponseType,java.util.Optional)#io/corbel/lib/ws/api/error/ErrorResponseFactory/getInstance()
io/corbel/oauth/api/AuthorizeResource/assertRequiredParameter(java.lang.Object,java.lang.String)#io/corbel/lib/ws/api/error/ErrorResponseFactory/missingParameter(java.lang.String)
io/corbel/oauth/api/AuthorizeResource/assertRequiredParameter(java.lang.Object,java.lang.String)#javax/ws/rs/WebApplicationException/WebApplicationException(javax.ws.rs.core.Response)
io/corbel/oauth/api/AuthorizeResource/assertRequiredParameter(java.lang.Object,java.lang.String)#io/corbel/lib/ws/api/error/ErrorResponseFactory/getInstance()
io/corbel/oauth/api/AuthorizeResource/assertRequiredParameter(java.lang.Object,java.lang.String)#org/apache/commons/lang3/StringUtils/isEmpty(java.lang.CharSequence)
io/corbel/oauth/api/AuthorizeResource/getTokenResponseFromSession(java.util.Optional,io.corbel.oauth.model.ResponseType,io.corbel.oauth.model.Client,java.lang.String,java.util.Optional)#org/slf4j/Logger/debug(java.lang.String)
io/corbel/oauth/api/AuthorizeResource/getTokenResponseFromSession(java.util.Optional,io.corbel.oauth.model.ResponseType,io.corbel.oauth.model.Client,java.lang.String,java.util.Optional)#java/util/Optional/get()
io/corbel/oauth/api/AuthorizeResource/getTokenResponseFromSession(java.util.Optional,io.corbel.oauth.model.ResponseType,io.corbel.oauth.model.Client,java.lang.String,java.util.Optional)#io/corbel/lib/token/reader/TokenReader/getInfo()
io/corbel/oauth/api/AuthorizeResource/getTokenResponseFromSession(java.util.Optional,io.corbel.oauth.model.ResponseType,io.corbel.oauth.model.Client,java.lang.String,java.util.Optional)#io/corbel/lib/token/TokenInfo/getUserId()
io/corbel/oauth/api/AuthorizeResource/getTokenResponseFromSession(java.util.Optional,io.corbel.oauth.model.ResponseType,io.corbel.oauth.model.Client,java.lang.String,java.util.Optional)#java/util/Optional/of(T)
io/corbel/oauth/api/AuthorizeResource/getTokenResponseFromSession(java.util.Optional,io.corbel.oauth.model.ResponseType,io.corbel.oauth.model.Client,java.lang.String,java.util.Optional)#java/util/Optional/empty()
io/corbel/oauth/api/AuthorizeResource/getTokenResponseFromSession(java.util.Optional,io.corbel.oauth.model.ResponseType,io.corbel.oauth.model.Client,java.lang.String,java.util.Optional)#java/util/Optional/isPresent()
io/corbel/oauth/api/AuthorizeResource/getTokenResponseFromSession(java.util.Optional,io.corbel.oauth.model.ResponseType,io.corbel.oauth.model.Client,java.lang.String,java.util.Optional)#io/corbel/oauth/api/AuthorizeResource/doResponse(java.lang.String,io.corbel.oauth.model.ResponseType,io.corbel.oauth.model.Client,java.lang.String,java.util.Optional)
io/corbel/oauth/api/AuthorizeResource/checkRedirectUri(io.corbel.oauth.model.Client,java.lang.String)#javax/ws/rs/WebApplicationException/WebApplicationException(javax.ws.rs.core.Response)
io/corbel/oauth/api/AuthorizeResource/checkRedirectUri(io.corbel.oauth.model.Client,java.lang.String)#io/corbel/lib/ws/api/error/ErrorResponseFactory/unauthorized(java.lang.String)
io/corbel/oauth/api/AuthorizeResource/checkRedirectUri(io.corbel.oauth.model.Client,java.lang.String)#io/corbel/lib/ws/api/error/ErrorResponseFactory/getInstance()
io/corbel/oauth/api/AuthorizeResource/checkRedirectUri(io.corbel.oauth.model.Client,java.lang.String)#io/corbel/oauth/service/ClientService/verifyRedirectUri(java.lang.String,io.corbel.oauth.model.Client)
io/corbel/oauth/api/AuthorizeResource/buildRedirectUri(java.lang.String,java.util.Optional,java.lang.String)#java/util/Optional/get()
io/corbel/oauth/api/AuthorizeResource/buildRedirectUri(java.lang.String,java.util.Optional,java.lang.String)#javax/ws/rs/core/UriBuilder/queryParam(java.lang.String,java.lang.Object[])
io/corbel/oauth/api/AuthorizeResource/buildRedirectUri(java.lang.String,java.util.Optional,java.lang.String)#javax/ws/rs/core/UriBuilder/build(java.lang.Object[])
io/corbel/oauth/api/AuthorizeResource/buildRedirectUri(java.lang.String,java.util.Optional,java.lang.String)#javax/ws/rs/core/UriBuilder/uri(java.net.URI)
io/corbel/oauth/api/AuthorizeResource/buildRedirectUri(java.lang.String,java.util.Optional,java.lang.String)#java/net/URI/create(java.lang.String)
io/corbel/oauth/api/AuthorizeResource/buildRedirectUri(java.lang.String,java.util.Optional,java.lang.String)#org/glassfish/jersey/uri/internal/JerseyUriBuilder/JerseyUriBuilder()
io/corbel/oauth/api/AuthorizeResource/buildRedirectUri(java.lang.String,java.util.Optional,java.lang.String)#java/util/Optional/isPresent()
io/corbel/oauth/api/AuthorizeResource/login(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,io.corbel.lib.token.reader.TokenReader,javax.ws.rs.core.MultivaluedMap)#io/corbel/oauth/model/ResponseType/fromString(java.lang.String)
io/corbel/oauth/api/AuthorizeResource/login(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,io.corbel.lib.token.reader.TokenReader,javax.ws.rs.core.MultivaluedMap)#io/corbel/oauth/service/ClientService/findByName(java.lang.String)
io/corbel/oauth/api/AuthorizeResource/login(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,io.corbel.lib.token.reader.TokenReader,javax.ws.rs.core.MultivaluedMap)#java/util/Optional/orElse(T)
io/corbel/oauth/api/AuthorizeResource/login(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,io.corbel.lib.token.reader.TokenReader,javax.ws.rs.core.MultivaluedMap)#java/util/Optional/ofNullable(T)
io/corbel/oauth/api/AuthorizeResource/login(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,io.corbel.lib.token.reader.TokenReader,javax.ws.rs.core.MultivaluedMap)#io/corbel/oauth/api/AuthorizeResource/assertRequiredParameter(java.lang.Object,java.lang.String)
io/corbel/oauth/api/AuthorizeResource/login(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,io.corbel.lib.token.reader.TokenReader,javax.ws.rs.core.MultivaluedMap)#java/util/Optional/map(java.util.function.Function)
io/corbel/oauth/api/AuthorizeResource/login(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,io.corbel.lib.token.reader.TokenReader,javax.ws.rs.core.MultivaluedMap)#io/corbel/lib/ws/api/error/ErrorResponseFactory/unauthorized()
io/corbel/oauth/api/AuthorizeResource/login(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,io.corbel.lib.token.reader.TokenReader,javax.ws.rs.core.MultivaluedMap)#io/corbel/lib/ws/api/error/ErrorResponseFactory/getInstance()
io/corbel/oauth/api/AuthorizeResource/assertValidResponseType(io.corbel.oauth.model.ResponseType)#io/corbel/lib/ws/api/error/ErrorMessage/getMessage(java.lang.Object[])
io/corbel/oauth/api/AuthorizeResource/assertValidResponseType(io.corbel.oauth.model.ResponseType)#javax/ws/rs/WebApplicationException/WebApplicationException(javax.ws.rs.core.Response)
io/corbel/oauth/api/AuthorizeResource/assertValidResponseType(io.corbel.oauth.model.ResponseType)#io/corbel/lib/ws/model/Error/Error(java.lang.String,java.lang.String)
io/corbel/oauth/api/AuthorizeResource/assertValidResponseType(io.corbel.oauth.model.ResponseType)#io/corbel/lib/ws/api/error/ErrorResponseFactory/badRequest(io.corbel.lib.ws.model.Error)
io/corbel/oauth/api/AuthorizeResource/assertValidResponseType(io.corbel.oauth.model.ResponseType)#io/corbel/lib/ws/api/error/ErrorResponseFactory/getInstance()
io/corbel/oauth/api/AuthorizeResource/checkPostArguments(java.lang.String,java.lang.String,io.corbel.oauth.model.ResponseType,io.corbel.oauth.model.Client,java.lang.String)#io/corbel/oauth/api/AuthorizeResource/assertRequiredParameter(java.lang.Object,java.lang.String)
io/corbel/oauth/api/AuthorizeResource/checkPostArguments(java.lang.String,java.lang.String,io.corbel.oauth.model.ResponseType,io.corbel.oauth.model.Client,java.lang.String)#io/corbel/oauth/api/AuthorizeResource/checkArguments(io.corbel.oauth.model.ResponseType,io.corbel.oauth.model.Client,java.lang.String)
io/corbel/oauth/api/AuthorizeResource/signinWithUsername(java.lang.String,java.lang.String,java.lang.String)#io/corbel/oauth/service/UserService/findByUserNameAndDomain(java.lang.String,java.lang.String)
io/corbel/oauth/api/AuthorizeResource/signinWithUsername(java.lang.String,java.lang.String,java.lang.String)#io/corbel/oauth/api/AuthorizeResource/signinInternal(io.corbel.oauth.model.User,java.lang.String)
io/corbel/oauth/api/AuthorizeResource/checkArguments(io.corbel.oauth.model.ResponseType,io.corbel.oauth.model.Client,java.lang.String)#io/corbel/oauth/api/AuthorizeResource/assertValidResponseType(io.corbel.oauth.model.ResponseType)
io/corbel/oauth/api/AuthorizeResource/checkArguments(io.corbel.oauth.model.ResponseType,io.corbel.oauth.model.Client,java.lang.String)#io/corbel/oauth/api/AuthorizeResource/assertRequiredParameter(java.lang.Object,java.lang.String)
io/corbel/oauth/api/AuthorizeResource/checkArguments(io.corbel.oauth.model.ResponseType,io.corbel.oauth.model.Client,java.lang.String)#io/corbel/oauth/api/AuthorizeResource/checkRedirectUri(io.corbel.oauth.model.Client,java.lang.String)
io/corbel/oauth/api/AuthorizeResource/doResponse(java.lang.String,io.corbel.oauth.model.ResponseType,io.corbel.oauth.model.Client,java.lang.String,java.util.Optional)#io/corbel/oauth/api/AuthorizeResource/createToken(java.lang.String,io.corbel.oauth.model.ResponseType,java.lang.String)
io/corbel/oauth/api/AuthorizeResource/doResponse(java.lang.String,io.corbel.oauth.model.ResponseType,io.corbel.oauth.model.Client,java.lang.String,java.util.Optional)#io/corbel/oauth/session/SessionCookieFactory/createCookie(java.lang.String)
io/corbel/oauth/api/AuthorizeResource/doResponse(java.lang.String,io.corbel.oauth.model.ResponseType,io.corbel.oauth.model.Client,java.lang.String,java.util.Optional)#javax/ws/rs/core/Response/ResponseBuilder/build()
io/corbel/oauth/api/AuthorizeResource/doResponse(java.lang.String,io.corbel.oauth.model.ResponseType,io.corbel.oauth.model.Client,java.lang.String,java.util.Optional)#io/corbel/lib/token/TokenGrant/getAccessToken()
io/corbel/oauth/api/AuthorizeResource/doResponse(java.lang.String,io.corbel.oauth.model.ResponseType,io.corbel.oauth.model.Client,java.lang.String,java.util.Optional)#javax/ws/rs/core/Response/ok()
io/corbel/oauth/api/AuthorizeResource/doResponse(java.lang.String,io.corbel.oauth.model.ResponseType,io.corbel.oauth.model.Client,java.lang.String,java.util.Optional)#java/lang/Throwable/getMessage()
io/corbel/oauth/api/AuthorizeResource/doResponse(java.lang.String,io.corbel.oauth.model.ResponseType,io.corbel.oauth.model.Client,java.lang.String,java.util.Optional)#javax/ws/rs/core/Response/ResponseBuilder/entity(java.lang.Object)
io/corbel/oauth/api/AuthorizeResource/doResponse(java.lang.String,io.corbel.oauth.model.ResponseType,io.corbel.oauth.model.Client,java.lang.String,java.util.Optional)#org/slf4j/Logger/error(java.lang.String,java.lang.Object,java.lang.Object)
io/corbel/oauth/api/AuthorizeResource/doResponse(java.lang.String,io.corbel.oauth.model.ResponseType,io.corbel.oauth.model.Client,java.lang.String,java.util.Optional)#io/corbel/oauth/session/SessionBuilder/createNewSession(java.lang.String,java.lang.String)
io/corbel/oauth/api/AuthorizeResource/doResponse(java.lang.String,io.corbel.oauth.model.ResponseType,io.corbel.oauth.model.Client,java.lang.String,java.util.Optional)#io/corbel/oauth/model/Client/getName()
io/corbel/oauth/api/AuthorizeResource/doResponse(java.lang.String,io.corbel.oauth.model.ResponseType,io.corbel.oauth.model.Client,java.lang.String,java.util.Optional)#javax/ws/rs/core/Response/ResponseBuilder/type(javax.ws.rs.core.MediaType)
io/corbel/oauth/api/AuthorizeResource/doResponse(java.lang.String,io.corbel.oauth.model.ResponseType,io.corbel.oauth.model.Client,java.lang.String,java.util.Optional)#io/corbel/oauth/api/AuthorizeResource/buildRedirectUri(java.lang.String,java.util.Optional,java.lang.String)
io/corbel/oauth/api/AuthorizeResource/doResponse(java.lang.String,io.corbel.oauth.model.ResponseType,io.corbel.oauth.model.Client,java.lang.String,java.util.Optional)#javax/ws/rs/core/Response/seeOther(java.net.URI)
io/corbel/oauth/api/AuthorizeResource/doResponse(java.lang.String,io.corbel.oauth.model.ResponseType,io.corbel.oauth.model.Client,java.lang.String,java.util.Optional)#javax/ws/rs/core/Response/ResponseBuilder/cookie(javax.ws.rs.core.NewCookie[])
io/corbel/oauth/api/AuthorizeResource/doResponse(java.lang.String,io.corbel.oauth.model.ResponseType,io.corbel.oauth.model.Client,java.lang.String,java.util.Optional)#javax/ws/rs/core/Response/status(javax.ws.rs.core.Response.Status)
io/corbel/oauth/api/AuthorizeResource/signinInternal(io.corbel.oauth.model.User,java.lang.String)#io/corbel/oauth/model/User/getId()
io/corbel/oauth/api/AuthorizeResource/signinInternal(io.corbel.oauth.model.User,java.lang.String)#java/util/Optional/of(T)
io/corbel/oauth/api/AuthorizeResource/signinInternal(io.corbel.oauth.model.User,java.lang.String)#io/corbel/oauth/model/User/checkPassword(java.lang.String)
io/corbel/oauth/api/AuthorizeResource/signinInternal(io.corbel.oauth.model.User,java.lang.String)#java/util/Optional/empty()
io/corbel/iam/api/TokenResourceTest/testGetIsAuthenticated()#io/corbel/iam/service/AuthorizationService/authorize(java.lang.String,io.corbel.iam.auth.OauthParams)
io/corbel/iam/api/TokenResourceTest/testGetIsAuthenticated()#org/mockito/Mockito/when(T)
io/corbel/iam/api/TokenResourceTest/testGetIsAuthenticated()#io/corbel/iam/model/TokenGrant/TokenGrant(java.lang.String,long,java.lang.String,java.util.Set)
io/corbel/iam/api/TokenResourceTest/testGetIsAuthenticated()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/iam/api/TokenResourceTest/testGetIsAuthenticated()#javax/ws/rs/client/SyncInvoker/get(java.lang.Class)
io/corbel/iam/api/TokenResourceTest/testGetIsAuthenticated()#io/corbel/iam/api/TokenResourceTest/checkResponseContainsToken(javax.ws.rs.core.Response,java.lang.String,java.lang.String)
io/corbel/iam/api/TokenResourceTest/testGetIsAuthenticated()#org/mockito/Matchers/any()
io/corbel/iam/api/TokenResourceTest/testGetIsAuthenticated()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/iam/api/TokenResourceTest/testGetIsAuthenticated()#org/mockito/Matchers/eq(T)
io/corbel/iam/api/TokenResourceTest/testGetIsAuthenticated()#javax/ws/rs/client/WebTarget/queryParam(java.lang.String,java.lang.Object[])
io/corbel/iam/api/TokenResourceTest/testGetIsAuthenticated()#javax/ws/rs/client/WebTarget/request()
io/corbel/iam/api/TokenResourceTest/testGetMissingGrantType()#io/corbel/iam/service/AuthorizationService/authorize(java.lang.String,io.corbel.iam.auth.OauthParams)
io/corbel/iam/api/TokenResourceTest/testGetMissingGrantType()#org/mockito/Mockito/when(T)
io/corbel/iam/api/TokenResourceTest/testGetMissingGrantType()#io/corbel/iam/model/TokenGrant/TokenGrant(java.lang.String,long,java.lang.String,java.util.Set)
io/corbel/iam/api/TokenResourceTest/testGetMissingGrantType()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/iam/api/TokenResourceTest/testGetMissingGrantType()#org/mockito/Matchers/any()
io/corbel/iam/api/TokenResourceTest/testGetMissingGrantType()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/iam/api/TokenResourceTest/testGetMissingGrantType()#org/mockito/Matchers/eq(T)
io/corbel/iam/api/TokenResourceTest/testGetMissingGrantType()#javax/ws/rs/client/WebTarget/queryParam(java.lang.String,java.lang.Object[])
io/corbel/iam/api/TokenResourceTest/testGetMissingGrantType()#javax/ws/rs/client/WebTarget/request()
io/corbel/iam/api/TokenResourceTest/testGetMissingGrantType()#io/corbel/iam/api/TokenResourceTest/checkErrorResponse(javax.ws.rs.core.Response,int,java.lang.String)
io/corbel/iam/api/TokenResourceTest/testGetMissingGrantType()#javax/ws/rs/client/SyncInvoker/get(java.lang.Class)
io/corbel/iam/api/TokenResourceTest/checkResponseContainsTokenWithCookie(javax.ws.rs.core.Response,java.lang.String,java.lang.String)#javax/ws/rs/core/Cookie/getValue()
io/corbel/iam/api/TokenResourceTest/checkResponseContainsTokenWithCookie(javax.ws.rs.core.Response,java.lang.String,java.lang.String)#javax/ws/rs/core/Response/getCookies()
io/corbel/iam/api/TokenResourceTest/checkResponseContainsTokenWithCookie(javax.ws.rs.core.Response,java.lang.String,java.lang.String)#java/util/Map/get(java.lang.Object)
io/corbel/iam/api/TokenResourceTest/checkResponseContainsTokenWithCookie(javax.ws.rs.core.Response,java.lang.String,java.lang.String)#org/fest/assertions/api/Assertions/assertThat(java.util.Map)
io/corbel/iam/api/TokenResourceTest/checkResponseContainsTokenWithCookie(javax.ws.rs.core.Response,java.lang.String,java.lang.String)#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/iam/api/TokenResourceTest/checkResponseContainsTokenWithCookie(javax.ws.rs.core.Response,java.lang.String,java.lang.String)#io/corbel/iam/api/TokenResourceTest/checkResponseContainsToken(javax.ws.rs.core.Response,java.lang.String,java.lang.String)
io/corbel/iam/api/TokenResourceTest/checkResponseContainsTokenWithCookie(javax.ws.rs.core.Response,java.lang.String,java.lang.String)#org/fest/assertions/api/MapAssert/isNotEmpty()
io/corbel/iam/api/TokenResourceTest/checkResponseContainsTokenWithCookie(javax.ws.rs.core.Response,java.lang.String,java.lang.String)#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/iam/api/TokenResourceTest/checkErrorResponse(javax.ws.rs.core.Response,int,java.lang.String)#io/corbel/lib/ws/model/Error/getError()
io/corbel/iam/api/TokenResourceTest/checkErrorResponse(javax.ws.rs.core.Response,int,java.lang.String)#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/iam/api/TokenResourceTest/checkErrorResponse(javax.ws.rs.core.Response,int,java.lang.String)#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/iam/api/TokenResourceTest/checkErrorResponse(javax.ws.rs.core.Response,int,java.lang.String)#javax/ws/rs/core/Response/getMediaType()
io/corbel/iam/api/TokenResourceTest/checkErrorResponse(javax.ws.rs.core.Response,int,java.lang.String)#org/fest/assertions/api/Assertions/assertThat(T)
io/corbel/iam/api/TokenResourceTest/checkErrorResponse(javax.ws.rs.core.Response,int,java.lang.String)#javax/ws/rs/core/Response/readEntity(java.lang.Class)
io/corbel/iam/api/TokenResourceTest/checkErrorResponse(javax.ws.rs.core.Response,int,java.lang.String)#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/iam/api/TokenResourceTest/checkErrorResponse(javax.ws.rs.core.Response,int,java.lang.String)#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/iam/api/TokenResourceTest/checkErrorResponse(javax.ws.rs.core.Response,int,java.lang.String)#org/fest/assertions/api/AbstractAssert/isNotNull()
io/corbel/iam/api/TokenResourceTest/checkErrorResponse(javax.ws.rs.core.Response,int,java.lang.String)#javax/ws/rs/core/Response/getStatus()
io/corbel/iam/api/TokenResourceTest/testGetWithCookieIsAuthenticated()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/iam/api/TokenResourceTest/testGetWithCookieIsAuthenticated()#io/corbel/iam/service/AuthorizationService/authorize(java.lang.String,io.corbel.iam.auth.OauthParams)
io/corbel/iam/api/TokenResourceTest/testGetWithCookieIsAuthenticated()#org/mockito/Mockito/when(T)
io/corbel/iam/api/TokenResourceTest/testGetWithCookieIsAuthenticated()#io/corbel/iam/model/TokenGrant/TokenGrant(java.lang.String,long,java.lang.String,java.util.Set)
io/corbel/iam/api/TokenResourceTest/testGetWithCookieIsAuthenticated()#io/corbel/iam/api/TokenResourceTest/checkResponseContainsTokenWithCookie(javax.ws.rs.core.Response,java.lang.String,java.lang.String)
io/corbel/iam/api/TokenResourceTest/testGetWithCookieIsAuthenticated()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/iam/api/TokenResourceTest/testGetWithCookieIsAuthenticated()#javax/ws/rs/client/SyncInvoker/get(java.lang.Class)
io/corbel/iam/api/TokenResourceTest/testGetWithCookieIsAuthenticated()#org/mockito/Matchers/any()
io/corbel/iam/api/TokenResourceTest/testGetWithCookieIsAuthenticated()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/iam/api/TokenResourceTest/testGetWithCookieIsAuthenticated()#org/mockito/Matchers/eq(T)
io/corbel/iam/api/TokenResourceTest/testGetWithCookieIsAuthenticated()#javax/ws/rs/client/WebTarget/queryParam(java.lang.String,java.lang.Object[])
io/corbel/iam/api/TokenResourceTest/testGetWithCookieIsAuthenticated()#javax/ws/rs/client/WebTarget/request()
io/corbel/iam/api/TokenResourceTest/testPostMissingGrantType()#javax/ws/rs/client/Entity/form(javax.ws.rs.core.MultivaluedMap)
io/corbel/iam/api/TokenResourceTest/testPostMissingGrantType()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/iam/api/TokenResourceTest/testPostMissingGrantType()#javax/ws/rs/client/WebTarget/request()
io/corbel/iam/api/TokenResourceTest/testPostMissingGrantType()#io/corbel/iam/api/TokenResourceTest/checkErrorResponse(javax.ws.rs.core.Response,int,java.lang.String)
io/corbel/iam/api/TokenResourceTest/testPostMissingGrantType()#javax/ws/rs/core/MultivaluedHashMap/MultivaluedHashMap()
io/corbel/iam/api/TokenResourceTest/testPostMissingGrantType()#javax/ws/rs/core/MultivaluedMap/add(K,V)
io/corbel/iam/api/TokenResourceTest/testPostMissingGrantType()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/iam/api/TokenResourceTest/testPostMissingGrantType()#javax/ws/rs/client/SyncInvoker/post(javax.ws.rs.client.Entity,java.lang.Class)
io/corbel/iam/api/TokenResourceTest/testPostReturnTokenOk()#javax/ws/rs/client/Entity/form(javax.ws.rs.core.MultivaluedMap)
io/corbel/iam/api/TokenResourceTest/testPostReturnTokenOk()#org/mockito/Mockito/when(T)
io/corbel/iam/api/TokenResourceTest/testPostReturnTokenOk()#io/corbel/iam/model/TokenGrant/TokenGrant(java.lang.String,long,java.lang.String,java.util.Set)
io/corbel/iam/api/TokenResourceTest/testPostReturnTokenOk()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/iam/api/TokenResourceTest/testPostReturnTokenOk()#javax/ws/rs/client/WebTarget/request()
io/corbel/iam/api/TokenResourceTest/testPostReturnTokenOk()#javax/ws/rs/core/MultivaluedHashMap/MultivaluedHashMap()
io/corbel/iam/api/TokenResourceTest/testPostReturnTokenOk()#io/corbel/iam/api/TokenResourceTest/checkResponseContainsToken(javax.ws.rs.core.Response,java.lang.String,java.lang.String)
io/corbel/iam/api/TokenResourceTest/testPostReturnTokenOk()#javax/ws/rs/core/MultivaluedMap/add(K,V)
io/corbel/iam/api/TokenResourceTest/testPostReturnTokenOk()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/iam/api/TokenResourceTest/testPostReturnTokenOk()#javax/ws/rs/client/SyncInvoker/post(javax.ws.rs.client.Entity,java.lang.Class)
io/corbel/iam/api/TokenResourceTest/testPostReturnTokenOk()#io/corbel/iam/service/AuthorizationService/authorize(java.lang.String)
io/corbel/iam/api/TokenResourceTest/testPostReturnTokenOk()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/api/TokenResourceTest/testPostReturnTokenOk()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/iam/api/TokenResourceTest/testUpgradeTokenMissingAssertion()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/iam/api/TokenResourceTest/testUpgradeTokenMissingAssertion()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/iam/api/TokenResourceTest/testUpgradeTokenMissingAssertion()#javax/ws/rs/client/WebTarget/request()
io/corbel/iam/api/TokenResourceTest/testUpgradeTokenMissingAssertion()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/iam/api/TokenResourceTest/testUpgradeTokenMissingAssertion()#io/corbel/iam/api/TokenResourceTest/checkErrorResponse(javax.ws.rs.core.Response,int,java.lang.String)
io/corbel/iam/api/TokenResourceTest/testUpgradeTokenMissingAssertion()#javax/ws/rs/client/SyncInvoker/get(java.lang.Class)
io/corbel/iam/api/TokenResourceTest/testPostBadSystemClock()#javax/ws/rs/client/Entity/form(javax.ws.rs.core.MultivaluedMap)
io/corbel/iam/api/TokenResourceTest/testPostBadSystemClock()#io/corbel/iam/service/AuthorizationService/authorize(java.lang.String)
io/corbel/iam/api/TokenResourceTest/testPostBadSystemClock()#org/mockito/Mockito/when(T)
io/corbel/iam/api/TokenResourceTest/testPostBadSystemClock()#javax/ws/rs/client/WebTarget/request()
io/corbel/iam/api/TokenResourceTest/testPostBadSystemClock()#io/corbel/iam/api/TokenResourceTest/checkErrorResponse(javax.ws.rs.core.Response,int,java.lang.String)
io/corbel/iam/api/TokenResourceTest/testPostBadSystemClock()#javax/ws/rs/core/MultivaluedHashMap/MultivaluedHashMap()
io/corbel/iam/api/TokenResourceTest/testPostBadSystemClock()#javax/ws/rs/core/MultivaluedMap/add(K,V)
io/corbel/iam/api/TokenResourceTest/testPostBadSystemClock()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/iam/api/TokenResourceTest/testPostBadSystemClock()#org/mockito/stubbing/OngoingStubbing/thenThrow(java.lang.Throwable[])
io/corbel/iam/api/TokenResourceTest/testPostBadSystemClock()#javax/ws/rs/client/SyncInvoker/post(javax.ws.rs.client.Entity,java.lang.Class)
io/corbel/iam/api/TokenResourceTest/testPostBadSystemClock()#io/corbel/iam/exception/UnauthorizedTimeException/UnauthorizedTimeException(java.lang.String)
io/corbel/iam/api/TokenResourceTest/testPostBadSystemClock()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/iam/api/TokenResourceTest/testGetState()#io/corbel/iam/service/AuthorizationService/authorize(java.lang.String,io.corbel.iam.auth.OauthParams)
io/corbel/iam/api/TokenResourceTest/testGetState()#java/net/URLEncoder/encode(java.lang.String,java.lang.String)
io/corbel/iam/api/TokenResourceTest/testGetState()#org/mockito/Mockito/when(T)
io/corbel/iam/api/TokenResourceTest/testGetState()#io/corbel/iam/model/TokenGrant/TokenGrant(java.lang.String,long,java.lang.String,java.util.Set)
io/corbel/iam/api/TokenResourceTest/testGetState()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/iam/api/TokenResourceTest/testGetState()#javax/ws/rs/client/SyncInvoker/get(java.lang.Class)
io/corbel/iam/api/TokenResourceTest/testGetState()#io/corbel/iam/api/TokenResourceTest/checkResponseContainsToken(javax.ws.rs.core.Response,java.lang.String,java.lang.String)
io/corbel/iam/api/TokenResourceTest/testGetState()#org/mockito/Matchers/any()
io/corbel/iam/api/TokenResourceTest/testGetState()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/iam/api/TokenResourceTest/testGetState()#org/mockito/Matchers/eq(T)
io/corbel/iam/api/TokenResourceTest/testGetState()#javax/ws/rs/client/WebTarget/queryParam(java.lang.String,java.lang.Object[])
io/corbel/iam/api/TokenResourceTest/testGetState()#javax/ws/rs/client/WebTarget/request()
io/corbel/iam/api/TokenResourceTest/testInvalidGrantTypeUpgradeToken()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/iam/api/TokenResourceTest/testInvalidGrantTypeUpgradeToken()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/iam/api/TokenResourceTest/testInvalidGrantTypeUpgradeToken()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/iam/api/TokenResourceTest/testInvalidGrantTypeUpgradeToken()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/iam/api/TokenResourceTest/testInvalidGrantTypeUpgradeToken()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/iam/api/TokenResourceTest/testInvalidGrantTypeUpgradeToken()#javax/ws/rs/client/WebTarget/queryParam(java.lang.String,java.lang.Object[])
io/corbel/iam/api/TokenResourceTest/testInvalidGrantTypeUpgradeToken()#javax/ws/rs/client/WebTarget/request()
io/corbel/iam/api/TokenResourceTest/testInvalidGrantTypeUpgradeToken()#javax/ws/rs/client/SyncInvoker/get(java.lang.Class)
io/corbel/iam/api/TokenResourceTest/testInvalidGrantTypeUpgradeToken()#javax/ws/rs/core/Response/getStatus()
io/corbel/iam/api/TokenResourceTest/testPostMissingAssertion()#javax/ws/rs/client/Entity/form(javax.ws.rs.core.MultivaluedMap)
io/corbel/iam/api/TokenResourceTest/testPostMissingAssertion()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/iam/api/TokenResourceTest/testPostMissingAssertion()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/iam/api/TokenResourceTest/testPostMissingAssertion()#javax/ws/rs/client/WebTarget/request()
io/corbel/iam/api/TokenResourceTest/testPostMissingAssertion()#io/corbel/iam/api/TokenResourceTest/checkErrorResponse(javax.ws.rs.core.Response,int,java.lang.String)
io/corbel/iam/api/TokenResourceTest/testPostMissingAssertion()#javax/ws/rs/core/MultivaluedHashMap/MultivaluedHashMap()
io/corbel/iam/api/TokenResourceTest/testPostMissingAssertion()#javax/ws/rs/core/MultivaluedMap/add(K,V)
io/corbel/iam/api/TokenResourceTest/testPostMissingAssertion()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/iam/api/TokenResourceTest/testPostMissingAssertion()#javax/ws/rs/client/SyncInvoker/post(javax.ws.rs.client.Entity,java.lang.Class)
io/corbel/iam/api/TokenResourceTest/testPostNotAuthorized()#javax/ws/rs/client/Entity/form(javax.ws.rs.core.MultivaluedMap)
io/corbel/iam/api/TokenResourceTest/testPostNotAuthorized()#io/corbel/iam/service/AuthorizationService/authorize(java.lang.String)
io/corbel/iam/api/TokenResourceTest/testPostNotAuthorized()#io/corbel/iam/exception/UnauthorizedException/UnauthorizedException(java.lang.String)
io/corbel/iam/api/TokenResourceTest/testPostNotAuthorized()#org/mockito/Mockito/when(T)
io/corbel/iam/api/TokenResourceTest/testPostNotAuthorized()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/iam/api/TokenResourceTest/testPostNotAuthorized()#javax/ws/rs/client/WebTarget/request()
io/corbel/iam/api/TokenResourceTest/testPostNotAuthorized()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/iam/api/TokenResourceTest/testPostNotAuthorized()#javax/ws/rs/core/MultivaluedMap/add(K,V)
io/corbel/iam/api/TokenResourceTest/testPostNotAuthorized()#org/mockito/stubbing/OngoingStubbing/thenThrow(java.lang.Throwable[])
io/corbel/iam/api/TokenResourceTest/testPostNotAuthorized()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/iam/api/TokenResourceTest/testPostNotAuthorized()#org/fest/assertions/api/AbstractAssert/isNotNull()
io/corbel/iam/api/TokenResourceTest/testPostNotAuthorized()#javax/ws/rs/core/Response/getStatus()
io/corbel/iam/api/TokenResourceTest/testPostNotAuthorized()#javax/ws/rs/core/Response/getMediaType()
io/corbel/iam/api/TokenResourceTest/testPostNotAuthorized()#javax/ws/rs/core/MultivaluedHashMap/MultivaluedHashMap()
io/corbel/iam/api/TokenResourceTest/testPostNotAuthorized()#org/fest/assertions/api/Assertions/assertThat(T)
io/corbel/iam/api/TokenResourceTest/testPostNotAuthorized()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/iam/api/TokenResourceTest/testPostNotAuthorized()#javax/ws/rs/client/SyncInvoker/post(javax.ws.rs.client.Entity,java.lang.Class)
io/corbel/iam/api/TokenResourceTest/testPostNotAuthorized()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/iam/api/TokenResourceTest/testUpgradeTokenPost()#javax/ws/rs/client/Entity/form(javax.ws.rs.core.MultivaluedMap)
io/corbel/iam/api/TokenResourceTest/testUpgradeTokenPost()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/iam/api/TokenResourceTest/testUpgradeTokenPost()#org/mockito/Mockito/verify(T)
io/corbel/iam/api/TokenResourceTest/testUpgradeTokenPost()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/iam/api/TokenResourceTest/testUpgradeTokenPost()#javax/ws/rs/client/WebTarget/request()
io/corbel/iam/api/TokenResourceTest/testUpgradeTokenPost()#javax/ws/rs/core/MultivaluedHashMap/MultivaluedHashMap()
io/corbel/iam/api/TokenResourceTest/testUpgradeTokenPost()#javax/ws/rs/core/MultivaluedMap/add(K,V)
io/corbel/iam/api/TokenResourceTest/testUpgradeTokenPost()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/iam/api/TokenResourceTest/testUpgradeTokenPost()#io/corbel/iam/service/UpgradeTokenService/getScopesFromTokenToUpgrade(java.lang.String)
io/corbel/iam/api/TokenResourceTest/testUpgradeTokenPost()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/iam/api/TokenResourceTest/testUpgradeTokenPost()#io/corbel/iam/service/UpgradeTokenService/upgradeToken(java.lang.String,io.corbel.lib.token.reader.TokenReader,java.util.Set)
io/corbel/iam/api/TokenResourceTest/testUpgradeTokenPost()#javax/ws/rs/core/Response/getStatus()
io/corbel/iam/api/TokenResourceTest/testUpgradeTokenPost()#javax/ws/rs/client/SyncInvoker/post(javax.ws.rs.client.Entity,java.lang.Class)
io/corbel/iam/api/TokenResourceTest/testUpgradeTokenPost()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/iam/api/TokenResourceTest/testGetMissingAssertionUpgradeToken()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/iam/api/TokenResourceTest/testGetMissingAssertionUpgradeToken()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/iam/api/TokenResourceTest/testGetMissingAssertionUpgradeToken()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/iam/api/TokenResourceTest/testGetMissingAssertionUpgradeToken()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/iam/api/TokenResourceTest/testGetMissingAssertionUpgradeToken()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/iam/api/TokenResourceTest/testGetMissingAssertionUpgradeToken()#javax/ws/rs/client/WebTarget/queryParam(java.lang.String,java.lang.Object[])
io/corbel/iam/api/TokenResourceTest/testGetMissingAssertionUpgradeToken()#javax/ws/rs/client/WebTarget/request()
io/corbel/iam/api/TokenResourceTest/testGetMissingAssertionUpgradeToken()#io/corbel/iam/api/TokenResourceTest/checkErrorResponse(javax.ws.rs.core.Response,int,java.lang.String)
io/corbel/iam/api/TokenResourceTest/testGetMissingAssertionUpgradeToken()#javax/ws/rs/client/SyncInvoker/get(java.lang.Class)
io/corbel/iam/api/TokenResourceTest/testGetMissingAssertionUpgradeToken()#javax/ws/rs/core/Response/getStatus()
io/corbel/iam/api/TokenResourceTest/setUp()#javax/servlet/http/HttpServletRequest/getHeader(java.lang.String)
io/corbel/iam/api/TokenResourceTest/setUp()#java/lang/Object/toString()
io/corbel/iam/api/TokenResourceTest/setUp()#io/corbel/lib/ws/auth/AuthorizationRequestFilter/checkTokenAccessRules(io.corbel.lib.ws.auth.AuthorizationInfo,javax.ws.rs.container.ContainerRequestContext,java.lang.String)
io/corbel/iam/api/TokenResourceTest/setUp()#javax/ws/rs/core/NewCookie/NewCookie(java.lang.String,java.lang.String)
io/corbel/iam/api/TokenResourceTest/setUp()#com/google/common/base/Optional/of(T)
io/corbel/iam/api/TokenResourceTest/setUp()#io/corbel/lib/ws/auth/AuthorizationRequestFilter/getRequest()
io/corbel/iam/api/TokenResourceTest/setUp()#org/mockito/Mockito/doReturn(java.lang.Object)
io/corbel/iam/api/TokenResourceTest/setUp()#org/mockito/Matchers/any()
io/corbel/iam/api/TokenResourceTest/setUp()#org/mockito/Mockito/reset(T[])
io/corbel/iam/api/TokenResourceTest/setUp()#org/mockito/Matchers/eq(T)
io/corbel/iam/api/TokenResourceTest/setUp()#io/corbel/lib/ws/auth/BearerTokenAuthenticator/authenticate(java.lang.String)
io/corbel/iam/api/TokenResourceTest/setUp()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/api/TokenResourceTest/setUp()#io/corbel/lib/token/reader/TokenReader/getInfo()
io/corbel/iam/api/TokenResourceTest/setUp()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/iam/api/TokenResourceTest/setUp()#org/mockito/Mockito/when(T)
io/corbel/iam/api/TokenResourceTest/setUp()#org/mockito/Mockito/doNothing()
io/corbel/iam/api/TokenResourceTest/setUp()#io/corbel/lib/ws/auth/AuthorizationInfo/getTokenReader()
io/corbel/iam/api/TokenResourceTest/setUp()#io/corbel/lib/token/TokenInfo/getUserId()
io/corbel/iam/api/TokenResourceTest/setUp()#org/mockito/stubbing/Stubber/when(T)
io/corbel/iam/api/TokenResourceTest/setUp()#org/mockito/Matchers/anyInt()
io/corbel/iam/api/TokenResourceTest/setUp()#io/corbel/iam/utils/TokenCookieFactory/createCookie(java.lang.String,int)
io/corbel/iam/api/TokenResourceTest/setUp()#io/dropwizard/auth/Authenticator/authenticate(C)
io/corbel/iam/api/TokenResourceTest/testUpgradeToken()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/iam/api/TokenResourceTest/testUpgradeToken()#org/mockito/Mockito/verify(T)
io/corbel/iam/api/TokenResourceTest/testUpgradeToken()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/iam/api/TokenResourceTest/testUpgradeToken()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/iam/api/TokenResourceTest/testUpgradeToken()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/iam/api/TokenResourceTest/testUpgradeToken()#javax/ws/rs/client/WebTarget/queryParam(java.lang.String,java.lang.Object[])
io/corbel/iam/api/TokenResourceTest/testUpgradeToken()#javax/ws/rs/client/WebTarget/request()
io/corbel/iam/api/TokenResourceTest/testUpgradeToken()#io/corbel/iam/service/UpgradeTokenService/getScopesFromTokenToUpgrade(java.lang.String)
io/corbel/iam/api/TokenResourceTest/testUpgradeToken()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/iam/api/TokenResourceTest/testUpgradeToken()#javax/ws/rs/client/SyncInvoker/get(java.lang.Class)
io/corbel/iam/api/TokenResourceTest/testUpgradeToken()#io/corbel/iam/service/UpgradeTokenService/upgradeToken(java.lang.String,io.corbel.lib.token.reader.TokenReader,java.util.Set)
io/corbel/iam/api/TokenResourceTest/testUpgradeToken()#javax/ws/rs/core/Response/getStatus()
io/corbel/iam/api/TokenResourceTest/testPostInvalidGrantType()#javax/ws/rs/client/Entity/form(javax.ws.rs.core.MultivaluedMap)
io/corbel/iam/api/TokenResourceTest/testPostInvalidGrantType()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/iam/api/TokenResourceTest/testPostInvalidGrantType()#javax/ws/rs/client/WebTarget/request()
io/corbel/iam/api/TokenResourceTest/testPostInvalidGrantType()#io/corbel/iam/api/TokenResourceTest/checkErrorResponse(javax.ws.rs.core.Response,int,java.lang.String)
io/corbel/iam/api/TokenResourceTest/testPostInvalidGrantType()#javax/ws/rs/core/MultivaluedHashMap/MultivaluedHashMap()
io/corbel/iam/api/TokenResourceTest/testPostInvalidGrantType()#javax/ws/rs/core/MultivaluedMap/add(K,V)
io/corbel/iam/api/TokenResourceTest/testPostInvalidGrantType()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/iam/api/TokenResourceTest/testPostInvalidGrantType()#javax/ws/rs/client/SyncInvoker/post(javax.ws.rs.client.Entity,java.lang.Class)
io/corbel/iam/api/TokenResourceTest/testGetMissingAssertion()#io/corbel/iam/service/AuthorizationService/authorize(java.lang.String,io.corbel.iam.auth.OauthParams)
io/corbel/iam/api/TokenResourceTest/testGetMissingAssertion()#org/mockito/Mockito/when(T)
io/corbel/iam/api/TokenResourceTest/testGetMissingAssertion()#io/corbel/iam/model/TokenGrant/TokenGrant(java.lang.String,long,java.lang.String,java.util.Set)
io/corbel/iam/api/TokenResourceTest/testGetMissingAssertion()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/iam/api/TokenResourceTest/testGetMissingAssertion()#org/mockito/Matchers/any()
io/corbel/iam/api/TokenResourceTest/testGetMissingAssertion()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/iam/api/TokenResourceTest/testGetMissingAssertion()#org/mockito/Matchers/eq(T)
io/corbel/iam/api/TokenResourceTest/testGetMissingAssertion()#javax/ws/rs/client/WebTarget/queryParam(java.lang.String,java.lang.Object[])
io/corbel/iam/api/TokenResourceTest/testGetMissingAssertion()#javax/ws/rs/client/WebTarget/request()
io/corbel/iam/api/TokenResourceTest/testGetMissingAssertion()#io/corbel/iam/api/TokenResourceTest/checkErrorResponse(javax.ws.rs.core.Response,int,java.lang.String)
io/corbel/iam/api/TokenResourceTest/testGetMissingAssertion()#javax/ws/rs/client/SyncInvoker/get(java.lang.Class)
io/corbel/iam/api/TokenResourceTest/checkResponseContainsToken(javax.ws.rs.core.Response,java.lang.String,java.lang.String)#io/corbel/iam/model/TokenGrant/getAccessToken()
io/corbel/iam/api/TokenResourceTest/checkResponseContainsToken(javax.ws.rs.core.Response,java.lang.String,java.lang.String)#io/corbel/iam/model/TokenGrant/getScopes()
io/corbel/iam/api/TokenResourceTest/checkResponseContainsToken(javax.ws.rs.core.Response,java.lang.String,java.lang.String)#org/fest/assertions/api/AbstractIterableAssert/containsExactly(T[])
io/corbel/iam/api/TokenResourceTest/checkResponseContainsToken(javax.ws.rs.core.Response,java.lang.String,java.lang.String)#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/iam/api/TokenResourceTest/checkResponseContainsToken(javax.ws.rs.core.Response,java.lang.String,java.lang.String)#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/iam/api/TokenResourceTest/checkResponseContainsToken(javax.ws.rs.core.Response,java.lang.String,java.lang.String)#javax/ws/rs/core/Response/getMediaType()
io/corbel/iam/api/TokenResourceTest/checkResponseContainsToken(javax.ws.rs.core.Response,java.lang.String,java.lang.String)#io/corbel/iam/model/TokenGrant/getExpiresAt()
io/corbel/iam/api/TokenResourceTest/checkResponseContainsToken(javax.ws.rs.core.Response,java.lang.String,java.lang.String)#org/fest/assertions/api/Assertions/assertThat(T)
io/corbel/iam/api/TokenResourceTest/checkResponseContainsToken(javax.ws.rs.core.Response,java.lang.String,java.lang.String)#org/fest/assertions/api/Assertions/assertThat(long)
io/corbel/iam/api/TokenResourceTest/checkResponseContainsToken(javax.ws.rs.core.Response,java.lang.String,java.lang.String)#javax/ws/rs/core/Response/readEntity(java.lang.Class)
io/corbel/iam/api/TokenResourceTest/checkResponseContainsToken(javax.ws.rs.core.Response,java.lang.String,java.lang.String)#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/iam/api/TokenResourceTest/checkResponseContainsToken(javax.ws.rs.core.Response,java.lang.String,java.lang.String)#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/iam/api/TokenResourceTest/checkResponseContainsToken(javax.ws.rs.core.Response,java.lang.String,java.lang.String)#io/corbel/iam/model/TokenGrant/getRefreshToken()
io/corbel/iam/api/TokenResourceTest/checkResponseContainsToken(javax.ws.rs.core.Response,java.lang.String,java.lang.String)#org/fest/assertions/api/LongAssert/isEqualTo(long)
io/corbel/iam/api/TokenResourceTest/checkResponseContainsToken(javax.ws.rs.core.Response,java.lang.String,java.lang.String)#org/fest/assertions/api/AbstractAssert/isNotNull()
io/corbel/iam/api/TokenResourceTest/checkResponseContainsToken(javax.ws.rs.core.Response,java.lang.String,java.lang.String)#org/fest/assertions/api/Assertions/assertThat(java.lang.Iterable)
io/corbel/iam/api/TokenResourceTest/checkResponseContainsToken(javax.ws.rs.core.Response,java.lang.String,java.lang.String)#javax/ws/rs/core/Response/getStatus()
io/corbel/iam/api/TokenResourceTest/testGetInvalidGrantType()#io/corbel/iam/service/AuthorizationService/authorize(java.lang.String,io.corbel.iam.auth.OauthParams)
io/corbel/iam/api/TokenResourceTest/testGetInvalidGrantType()#org/mockito/Mockito/when(T)
io/corbel/iam/api/TokenResourceTest/testGetInvalidGrantType()#io/corbel/iam/model/TokenGrant/TokenGrant(java.lang.String,long,java.lang.String,java.util.Set)
io/corbel/iam/api/TokenResourceTest/testGetInvalidGrantType()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/iam/api/TokenResourceTest/testGetInvalidGrantType()#org/mockito/Matchers/any()
io/corbel/iam/api/TokenResourceTest/testGetInvalidGrantType()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/iam/api/TokenResourceTest/testGetInvalidGrantType()#org/mockito/Matchers/eq(T)
io/corbel/iam/api/TokenResourceTest/testGetInvalidGrantType()#javax/ws/rs/client/WebTarget/queryParam(java.lang.String,java.lang.Object[])
io/corbel/iam/api/TokenResourceTest/testGetInvalidGrantType()#javax/ws/rs/client/WebTarget/request()
io/corbel/iam/api/TokenResourceTest/testGetInvalidGrantType()#io/corbel/iam/api/TokenResourceTest/checkErrorResponse(javax.ws.rs.core.Response,int,java.lang.String)
io/corbel/iam/api/TokenResourceTest/testGetInvalidGrantType()#javax/ws/rs/client/SyncInvoker/get(java.lang.Class)
io/corbel/iam/api/TokenResourceTest/testPostWithCookieReturnTokenOk()#javax/ws/rs/client/Entity/form(javax.ws.rs.core.MultivaluedMap)
io/corbel/iam/api/TokenResourceTest/testPostWithCookieReturnTokenOk()#org/mockito/Mockito/when(T)
io/corbel/iam/api/TokenResourceTest/testPostWithCookieReturnTokenOk()#io/corbel/iam/model/TokenGrant/TokenGrant(java.lang.String,long,java.lang.String,java.util.Set)
io/corbel/iam/api/TokenResourceTest/testPostWithCookieReturnTokenOk()#io/corbel/iam/api/TokenResourceTest/checkResponseContainsTokenWithCookie(javax.ws.rs.core.Response,java.lang.String,java.lang.String)
io/corbel/iam/api/TokenResourceTest/testPostWithCookieReturnTokenOk()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/iam/api/TokenResourceTest/testPostWithCookieReturnTokenOk()#javax/ws/rs/client/WebTarget/request()
io/corbel/iam/api/TokenResourceTest/testPostWithCookieReturnTokenOk()#javax/ws/rs/core/MultivaluedHashMap/MultivaluedHashMap()
io/corbel/iam/api/TokenResourceTest/testPostWithCookieReturnTokenOk()#javax/ws/rs/core/MultivaluedMap/add(K,V)
io/corbel/iam/api/TokenResourceTest/testPostWithCookieReturnTokenOk()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/iam/api/TokenResourceTest/testPostWithCookieReturnTokenOk()#javax/ws/rs/client/SyncInvoker/post(javax.ws.rs.client.Entity,java.lang.Class)
io/corbel/iam/api/TokenResourceTest/testPostWithCookieReturnTokenOk()#io/corbel/iam/service/AuthorizationService/authorize(java.lang.String)
io/corbel/iam/api/TokenResourceTest/testPostWithCookieReturnTokenOk()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/api/TokenResourceTest/testPostWithCookieReturnTokenOk()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/resources/rem/BaseRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#javax/ws/rs/core/Response/ResponseBuilder/build()
io/corbel/resources/rem/BaseRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#org/slf4j/Logger/warn(java.lang.String)
io/corbel/resources/rem/BaseRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#javax/ws/rs/core/Response/ResponseBuilder/entity(java.lang.Object)
io/corbel/resources/rem/BaseRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#java/lang/Class/getName()
io/corbel/resources/rem/BaseRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#javax/ws/rs/core/Response/ResponseBuilder/type(javax.ws.rs.core.MediaType)
io/corbel/resources/rem/BaseRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#java/lang/Object/getClass()
io/corbel/resources/rem/BaseRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#javax/ws/rs/core/Response/status(javax.ws.rs.core.Response.Status)
io/corbel/resources/rem/BaseRem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#javax/ws/rs/core/Response/ResponseBuilder/build()
io/corbel/resources/rem/BaseRem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#org/slf4j/Logger/warn(java.lang.String)
io/corbel/resources/rem/BaseRem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#javax/ws/rs/core/Response/ResponseBuilder/entity(java.lang.Object)
io/corbel/resources/rem/BaseRem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#java/lang/Class/getName()
io/corbel/resources/rem/BaseRem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#javax/ws/rs/core/Response/ResponseBuilder/type(javax.ws.rs.core.MediaType)
io/corbel/resources/rem/BaseRem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#java/lang/Object/getClass()
io/corbel/resources/rem/BaseRem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#javax/ws/rs/core/Response/status(javax.ws.rs.core.Response.Status)
io/corbel/resources/rem/BaseRem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional)#javax/ws/rs/core/Response/ResponseBuilder/build()
io/corbel/resources/rem/BaseRem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional)#org/slf4j/Logger/warn(java.lang.String)
io/corbel/resources/rem/BaseRem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional)#javax/ws/rs/core/Response/ResponseBuilder/entity(java.lang.Object)
io/corbel/resources/rem/BaseRem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional)#java/lang/Class/getName()
io/corbel/resources/rem/BaseRem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional)#javax/ws/rs/core/Response/ResponseBuilder/type(javax.ws.rs.core.MediaType)
io/corbel/resources/rem/BaseRem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional)#java/lang/Object/getClass()
io/corbel/resources/rem/BaseRem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional)#javax/ws/rs/core/Response/status(javax.ws.rs.core.Response.Status)
io/corbel/resources/rem/acl/AclGetRem/collectionWithAcl(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional,java.util.Optional)#io/corbel/resources/rem/service/AclResourcesService/getCollection(io.corbel.resources.rem.Rem,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.List)
io/corbel/resources/rem/acl/AclGetRem/collectionWithAcl(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional,java.util.Optional)#javax/ws/rs/core/Response/Status/getStatusCode()
io/corbel/resources/rem/acl/AclGetRem/collectionWithAcl(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional,java.util.Optional)#io/corbel/resources/rem/acl/AclBaseRem/getExcludedRems(java.util.Optional)
io/corbel/resources/rem/acl/AclGetRem/collectionWithAcl(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional,java.util.Optional)#io/corbel/resources/rem/request/RequestParameters/getRequestedDomain()
io/corbel/resources/rem/acl/AclGetRem/collectionWithAcl(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional,java.util.Optional)#io/corbel/resources/rem/service/RemService/getRem(java.lang.String,java.util.List,org.springframework.http.HttpMethod,java.util.List)
io/corbel/resources/rem/acl/AclGetRem/collectionWithAcl(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional,java.util.Optional)#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/rem/acl/AclGetRem/collectionWithAcl(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional,java.util.Optional)#javax/ws/rs/core/Response/ok(java.lang.Object)
io/corbel/resources/rem/acl/AclGetRem/collectionWithAcl(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional,java.util.Optional)#io/corbel/resources/rem/request/RequestParameters/getAcceptedMediaTypes()
io/corbel/resources/rem/acl/AclGetRem/collectionWithAcl(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional,java.util.Optional)#io/corbel/lib/ws/api/error/ErrorResponseFactory/getInstance()
io/corbel/resources/rem/acl/AclGetRem/collectionWithAcl(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional,java.util.Optional)#io/corbel/lib/ws/api/error/ErrorResponseFactory/methodNotAllowed()
io/corbel/resources/rem/acl/AclGetRem/collectionWithAcl(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional,java.util.Optional)#io/corbel/resources/rem/service/AclResourcesService/isManagedBy(java.lang.String,io.corbel.lib.token.TokenInfo,java.lang.String)
io/corbel/resources/rem/acl/AclGetRem/collectionWithAcl(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional,java.util.Optional)#io/corbel/resources/rem/request/RequestParameters/getTokenInfo()
io/corbel/resources/rem/acl/AclGetRem/collectionWithAcl(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional,java.util.Optional)#javax/ws/rs/core/Response/ResponseBuilder/build()
io/corbel/resources/rem/acl/AclGetRem/collectionWithAcl(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional,java.util.Optional)#javax/ws/rs/core/Response/getEntity()
io/corbel/resources/rem/acl/AclGetRem/collectionWithAcl(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional,java.util.Optional)#java/util/List/contains(java.lang.Object)
io/corbel/resources/rem/acl/AclGetRem/collectionWithAcl(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional,java.util.Optional)#io/corbel/resources/rem/acl/AclGetRem/addAclQueryParams(io.corbel.resources.rem.request.RequestParameters,io.corbel.lib.token.TokenInfo)
io/corbel/resources/rem/acl/AclGetRem/relationWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#io/corbel/resources/rem/service/AclResourcesService/getRelation(io.corbel.resources.rem.Rem,java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.List)
io/corbel/resources/rem/acl/AclGetRem/relationWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#io/corbel/resources/rem/request/RequestParameters/getTokenInfo()
io/corbel/resources/rem/acl/AclGetRem/relationWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#io/corbel/resources/rem/request/ResourceId/isWildcard()
io/corbel/resources/rem/acl/AclGetRem/relationWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#io/corbel/resources/rem/service/AclResourcesService/isAuthorized(java.lang.String,io.corbel.lib.token.TokenInfo,java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.model.AclPermission)
io/corbel/resources/rem/acl/AclGetRem/relationWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#java/util/Collections/singletonList(T)
io/corbel/resources/rem/acl/AclGetRem/relationWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#io/corbel/lib/ws/api/error/ErrorResponseFactory/forbidden()
io/corbel/resources/rem/acl/AclGetRem/relationWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#io/corbel/resources/rem/acl/AclBaseRem/getExcludedRems(java.util.Optional)
io/corbel/resources/rem/acl/AclGetRem/relationWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#io/corbel/resources/rem/request/RequestParameters/getRequestedDomain()
io/corbel/resources/rem/acl/AclGetRem/relationWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#io/corbel/resources/rem/service/RemService/getRem(java.lang.String,java.util.List,org.springframework.http.HttpMethod,java.util.List)
io/corbel/resources/rem/acl/AclGetRem/relationWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#io/corbel/resources/rem/request/RequestParameters/getAcceptedMediaTypes()
io/corbel/resources/rem/acl/AclGetRem/relationWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#io/corbel/lib/ws/api/error/ErrorResponseFactory/getInstance()
io/corbel/resources/rem/acl/AclGetRem/relationWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#io/corbel/lib/ws/api/error/ErrorResponseFactory/methodNotAllowed()
io/corbel/resources/rem/acl/AclGetRem/relationWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#io/corbel/lib/ws/api/error/ErrorResponseFactory/unauthorized(java.lang.String)
io/corbel/resources/rem/acl/AclGetRem/relationWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#io/corbel/resources/rem/utils/AclUtils/buildMessage(io.corbel.resources.rem.model.AclPermission)
io/corbel/resources/rem/acl/AclGetRem/addAclQueryParams(io.corbel.resources.rem.request.RequestParameters,io.corbel.lib.token.TokenInfo)#io/corbel/resources/rem/request/RequestParameters/getOptionalApiParameters()
io/corbel/resources/rem/acl/AclGetRem/addAclQueryParams(io.corbel.resources.rem.request.RequestParameters,io.corbel.lib.token.TokenInfo)#java/util/Optional/get()
io/corbel/resources/rem/acl/AclGetRem/addAclQueryParams(io.corbel.resources.rem.request.RequestParameters,io.corbel.lib.token.TokenInfo)#io/corbel/resources/rem/request/CollectionParameters/setQueries(java.util.Optional)
io/corbel/resources/rem/acl/AclGetRem/addAclQueryParams(io.corbel.resources.rem.request.RequestParameters,io.corbel.lib.token.TokenInfo)#io/corbel/resources/rem/acl/query/AclQueryBuilder/build(java.util.List)
io/corbel/resources/rem/acl/AclGetRem/addAclQueryParams(io.corbel.resources.rem.request.RequestParameters,io.corbel.lib.token.TokenInfo)#java/util/Optional/ofNullable(T)
io/corbel/resources/rem/acl/AclGetRem/addAclQueryParams(io.corbel.resources.rem.request.RequestParameters,io.corbel.lib.token.TokenInfo)#java/util/Optional/of(T)
io/corbel/resources/rem/acl/AclGetRem/addAclQueryParams(io.corbel.resources.rem.request.RequestParameters,io.corbel.lib.token.TokenInfo)#io/corbel/lib/token/TokenInfo/getGroups()
io/corbel/resources/rem/acl/AclGetRem/addAclQueryParams(io.corbel.resources.rem.request.RequestParameters,io.corbel.lib.token.TokenInfo)#java/util/Optional/isPresent()
io/corbel/resources/rem/acl/AclGetRem/addAclQueryParams(io.corbel.resources.rem.request.RequestParameters,io.corbel.lib.token.TokenInfo)#java/util/Optional/flatMap(java.util.function.Function)
io/corbel/resources/rem/acl/AclGetRem/addAclQueryParams(io.corbel.resources.rem.request.RequestParameters,io.corbel.lib.token.TokenInfo)#io/corbel/resources/rem/acl/query/AclQueryBuilder/AclQueryBuilder(java.util.Optional,java.util.Collection)
io/corbel/resources/rem/acl/AclGetRem/addAclQueryParams(io.corbel.resources.rem.request.RequestParameters,io.corbel.lib.token.TokenInfo)#java/util/Collections/emptyList()
io/corbel/resources/rem/acl/AclGetRem/addAclQueryParams(io.corbel.resources.rem.request.RequestParameters,io.corbel.lib.token.TokenInfo)#io/corbel/lib/token/TokenInfo/getUserId()
io/corbel/resources/rem/acl/AclGetRem/resourceWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#io/corbel/resources/rem/request/RequestParameters/getTokenInfo()
io/corbel/resources/rem/acl/AclGetRem/resourceWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#io/corbel/resources/rem/service/AclResourcesService/getResourceIfIsAuthorized(java.lang.String,io.corbel.lib.token.TokenInfo,java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.model.AclPermission)
io/corbel/resources/rem/acl/AclGetRem/resourceWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#io/corbel/lib/ws/api/error/ErrorResponseFactory/forbidden()
io/corbel/resources/rem/acl/AclGetRem/resourceWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#io/corbel/resources/rem/acl/AclBaseRem/getExcludedRems(java.util.Optional)
io/corbel/resources/rem/acl/AclGetRem/resourceWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#io/corbel/resources/rem/request/RequestParameters/getRequestedDomain()
io/corbel/resources/rem/acl/AclGetRem/resourceWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#java/util/Optional/map(java.util.function.Function)
io/corbel/resources/rem/acl/AclGetRem/resourceWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#io/corbel/lib/ws/api/error/ErrorResponseFactory/getInstance()
io/corbel/resources/rem/acl/AclGetRem/resourceWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#java/util/Optional/orElseGet(java.util.function.Supplier)
io/corbel/resources/rem/resmi/RestorPutRemTest/testDeleteOkResource()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/resmi/RestorPutRemTest/testDeleteOkResource()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/resmi/RestorPutRemTest/testDeleteOkResource()#io/corbel/resources/rem/request/ResourceId/ResourceId(java.lang.String)
io/corbel/resources/rem/resmi/RestorPutRemTest/testDeleteOkResource()#java/util/Arrays/asList(T[])
io/corbel/resources/rem/resmi/RestorPutRemTest/testDeleteOkResource()#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/rem/resmi/RestorPutRemTest/testDeleteOkResource()#io/corbel/resources/rem/request/RequestParameters/getAcceptedMediaTypes()
io/corbel/resources/rem/resmi/RestorPutRemTest/testDeleteOkResource()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/resources/rem/resmi/RestorPutRemTest/testDeleteOkResource()#java/util/Optional/of(T)
io/corbel/resources/rem/resmi/RestorPutRemTest/testDeleteOkResource()#io/corbel/resources/rem/restor/RestorPutRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)
io/corbel/resources/rem/resmi/RestorPutRemTest/testDeleteOkResource()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/resources/rem/resmi/RestorPutRemTest/setup()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/resources/rem/resmi/RestorPutRemTest/setup()#io/corbel/resources/rem/restor/RestorPutRem/RestorPutRem(io.corbel.resources.rem.dao.RestorDao)
io/corbel/resources/rem/resmi/RestorPutRemTest/testDeleteNullResource()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/resmi/RestorPutRemTest/testDeleteNullResource()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/resmi/RestorPutRemTest/testDeleteNullResource()#io/corbel/resources/rem/request/ResourceId/ResourceId(java.lang.String)
io/corbel/resources/rem/resmi/RestorPutRemTest/testDeleteNullResource()#java/util/Arrays/asList(T[])
io/corbel/resources/rem/resmi/RestorPutRemTest/testDeleteNullResource()#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/rem/resmi/RestorPutRemTest/testDeleteNullResource()#io/corbel/resources/rem/request/RequestParameters/getAcceptedMediaTypes()
io/corbel/resources/rem/resmi/RestorPutRemTest/testDeleteNullResource()#java/util/Optional/empty()
io/corbel/resources/rem/resmi/RestorPutRemTest/testDeleteNullResource()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/resources/rem/resmi/RestorPutRemTest/testDeleteNullResource()#io/corbel/resources/rem/restor/RestorPutRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)
io/corbel/resources/rem/resmi/RestorPutRemTest/testDeleteNullResource()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/resources/rem/service/DefaultImageOperationsService/ConvertCmdFactory/create(java.io.InputStream,java.io.OutputStream)#org/im4java/core/ConvertCmd/ConvertCmd()
io/corbel/resources/rem/service/DefaultImageOperationsService/ConvertCmdFactory/create(java.io.InputStream,java.io.OutputStream)#org/im4java/process/Pipe/Pipe(java.io.InputStream,java.io.OutputStream)
io/corbel/resources/rem/service/DefaultImageOperationsService/ConvertCmdFactory/create(java.io.InputStream,java.io.OutputStream)#org/im4java/process/ProcessStarter/setOutputConsumer(org.im4java.process.OutputConsumer)
io/corbel/resources/rem/service/DefaultImageOperationsService/ConvertCmdFactory/create(java.io.InputStream,java.io.OutputStream)#org/im4java/process/ProcessStarter/setInputProvider(org.im4java.process.InputProvider)
io/corbel/rem/internal/InMemoryHealthCheckRegistry/addHealthCheck(java.lang.String,com.codahale.metrics.health.HealthCheck)#java/util/Map/put(K,V)
io/corbel/oauth/api/UserResource/getAvatar(java.lang.String,io.corbel.lib.token.reader.TokenReader)#java/util/Optional/ofNullable(T)
io/corbel/oauth/api/UserResource/getAvatar(java.lang.String,io.corbel.lib.token.reader.TokenReader)#java/util/Optional/map(java.util.function.Function)
io/corbel/oauth/api/UserResource/getAvatar(java.lang.String,io.corbel.lib.token.reader.TokenReader)#io/corbel/oauth/api/UserResource/getUserFromIdAliases(java.lang.String,io.corbel.lib.token.reader.TokenReader)
io/corbel/oauth/api/UserResource/getAvatar(java.lang.String,io.corbel.lib.token.reader.TokenReader)#io/corbel/oauth/model/User/getAvatarUri()
io/corbel/oauth/api/UserResource/getAvatar(java.lang.String,io.corbel.lib.token.reader.TokenReader)#java/util/Optional/orElseGet(java.util.function.Supplier)
io/corbel/oauth/api/UserResource/generateValidationEmail(java.lang.String,io.corbel.lib.token.reader.TokenReader)#io/corbel/lib/token/reader/TokenReader/getInfo()
io/corbel/oauth/api/UserResource/generateValidationEmail(java.lang.String,io.corbel.lib.token.reader.TokenReader)#io/corbel/oauth/service/ClientService/findByName(java.lang.String)
io/corbel/oauth/api/UserResource/generateValidationEmail(java.lang.String,io.corbel.lib.token.reader.TokenReader)#java/util/Optional/orElse(T)
io/corbel/oauth/api/UserResource/generateValidationEmail(java.lang.String,io.corbel.lib.token.reader.TokenReader)#io/corbel/lib/token/TokenInfo/getClientId()
io/corbel/oauth/api/UserResource/generateValidationEmail(java.lang.String,io.corbel.lib.token.reader.TokenReader)#java/util/Optional/map(java.util.function.Function)
io/corbel/oauth/api/UserResource/generateValidationEmail(java.lang.String,io.corbel.lib.token.reader.TokenReader)#io/corbel/oauth/api/UserResource/getUserFromIdAliases(java.lang.String,io.corbel.lib.token.reader.TokenReader)
io/corbel/oauth/api/UserResource/generateValidationEmail(java.lang.String,io.corbel.lib.token.reader.TokenReader)#io/corbel/lib/ws/api/error/ErrorResponseFactory/notFound()
io/corbel/oauth/api/UserResource/generateValidationEmail(java.lang.String,io.corbel.lib.token.reader.TokenReader)#io/corbel/lib/ws/api/error/ErrorResponseFactory/getInstance()
io/corbel/oauth/api/UserResource/update(java.lang.String,io.corbel.lib.token.reader.TokenReader,io.corbel.oauth.model.User)#io/corbel/oauth/model/User/setEmailValidated(java.lang.Boolean)
io/corbel/oauth/api/UserResource/update(java.lang.String,io.corbel.lib.token.reader.TokenReader,io.corbel.oauth.model.User)#io/corbel/oauth/service/ClientService/findByName(java.lang.String)
io/corbel/oauth/api/UserResource/update(java.lang.String,io.corbel.lib.token.reader.TokenReader,io.corbel.oauth.model.User)#java/util/Optional/orElseThrow(java.util.function.Supplier)
io/corbel/oauth/api/UserResource/update(java.lang.String,io.corbel.lib.token.reader.TokenReader,io.corbel.oauth.model.User)#io/corbel/lib/ws/model/Error/Error(java.lang.String,java.lang.String)
io/corbel/oauth/api/UserResource/update(java.lang.String,io.corbel.lib.token.reader.TokenReader,io.corbel.oauth.model.User)#io/corbel/oauth/api/UserResource/checkUpdateUserRolePermissions(java.lang.String,io.corbel.oauth.model.Role)
io/corbel/oauth/api/UserResource/update(java.lang.String,io.corbel.lib.token.reader.TokenReader,io.corbel.oauth.model.User)#io/corbel/oauth/service/UserService/updateUser(io.corbel.oauth.model.User,io.corbel.oauth.model.User,io.corbel.oauth.model.Client)
io/corbel/oauth/api/UserResource/update(java.lang.String,io.corbel.lib.token.reader.TokenReader,io.corbel.oauth.model.User)#javax/ws/rs/core/Response/noContent()
io/corbel/oauth/api/UserResource/update(java.lang.String,io.corbel.lib.token.reader.TokenReader,io.corbel.oauth.model.User)#io/corbel/lib/token/reader/TokenReader/getInfo()
io/corbel/oauth/api/UserResource/update(java.lang.String,io.corbel.lib.token.reader.TokenReader,io.corbel.oauth.model.User)#io/corbel/oauth/model/User/getRole()
io/corbel/oauth/api/UserResource/update(java.lang.String,io.corbel.lib.token.reader.TokenReader,io.corbel.oauth.model.User)#javax/ws/rs/core/Response/ResponseBuilder/build()
io/corbel/oauth/api/UserResource/update(java.lang.String,io.corbel.lib.token.reader.TokenReader,io.corbel.oauth.model.User)#io/corbel/lib/token/TokenInfo/getUserId()
io/corbel/oauth/api/UserResource/update(java.lang.String,io.corbel.lib.token.reader.TokenReader,io.corbel.oauth.model.User)#io/corbel/lib/token/TokenInfo/getClientId()
io/corbel/oauth/api/UserResource/update(java.lang.String,io.corbel.lib.token.reader.TokenReader,io.corbel.oauth.model.User)#io/corbel/lib/ws/api/error/ErrorResponseFactory/badRequest(io.corbel.lib.ws.model.Error)
io/corbel/oauth/api/UserResource/update(java.lang.String,io.corbel.lib.token.reader.TokenReader,io.corbel.oauth.model.User)#io/corbel/oauth/api/UserResource/getUserFromIdAliases(java.lang.String,io.corbel.lib.token.reader.TokenReader)
io/corbel/oauth/api/UserResource/update(java.lang.String,io.corbel.lib.token.reader.TokenReader,io.corbel.oauth.model.User)#io/corbel/lib/ws/api/error/ErrorResponseFactory/getInstance()
io/corbel/oauth/api/UserResource/update(java.lang.String,io.corbel.lib.token.reader.TokenReader,io.corbel.oauth.model.User)#io/corbel/lib/ws/api/error/ErrorResponseFactory/conflict(io.corbel.lib.ws.model.Error)
io/corbel/oauth/api/UserResource/confirmEmail(java.lang.String,io.corbel.lib.token.reader.TokenReader)#io/corbel/lib/token/TokenInfo/getState()
io/corbel/oauth/api/UserResource/confirmEmail(java.lang.String,io.corbel.lib.token.reader.TokenReader)#javax/ws/rs/core/Response/ResponseBuilder/build()
io/corbel/oauth/api/UserResource/confirmEmail(java.lang.String,io.corbel.lib.token.reader.TokenReader)#io/corbel/oauth/service/UserService/confirmEmail(java.lang.String)
io/corbel/oauth/api/UserResource/confirmEmail(java.lang.String,io.corbel.lib.token.reader.TokenReader)#io/corbel/lib/ws/api/error/ErrorResponseFactory/badRequest()
io/corbel/oauth/api/UserResource/confirmEmail(java.lang.String,io.corbel.lib.token.reader.TokenReader)#io/corbel/lib/ws/api/error/ErrorResponseFactory/getInstance()
io/corbel/oauth/api/UserResource/confirmEmail(java.lang.String,io.corbel.lib.token.reader.TokenReader)#javax/ws/rs/core/Response/noContent()
io/corbel/oauth/api/UserResource/confirmEmail(java.lang.String,io.corbel.lib.token.reader.TokenReader)#io/corbel/lib/token/reader/TokenReader/getInfo()
io/corbel/oauth/api/UserResource/getUserFromIdAliases(java.lang.String,io.corbel.lib.token.reader.TokenReader)#io/corbel/lib/token/reader/TokenReader/getInfo()
io/corbel/oauth/api/UserResource/getUserFromIdAliases(java.lang.String,io.corbel.lib.token.reader.TokenReader)#io/corbel/oauth/model/User/getRole()
io/corbel/oauth/api/UserResource/getUserFromIdAliases(java.lang.String,io.corbel.lib.token.reader.TokenReader)#io/corbel/oauth/model/Role/canUpdate(io.corbel.oauth.model.Role)
io/corbel/oauth/api/UserResource/getUserFromIdAliases(java.lang.String,io.corbel.lib.token.reader.TokenReader)#io/corbel/lib/token/TokenInfo/getUserId()
io/corbel/oauth/api/UserResource/getUserFromIdAliases(java.lang.String,io.corbel.lib.token.reader.TokenReader)#java/lang/String/equals(java.lang.Object)
io/corbel/oauth/api/UserResource/getUserFromIdAliases(java.lang.String,io.corbel.lib.token.reader.TokenReader)#io/corbel/lib/ws/api/error/ErrorResponseFactory/notFound()
io/corbel/oauth/api/UserResource/getUserFromIdAliases(java.lang.String,io.corbel.lib.token.reader.TokenReader)#io/corbel/lib/ws/api/error/ErrorResponseFactory/getInstance()
io/corbel/oauth/api/UserResource/getUserFromIdAliases(java.lang.String,io.corbel.lib.token.reader.TokenReader)#io/corbel/oauth/service/UserService/getUser(java.lang.String)
io/corbel/oauth/api/UserResource/getUserFromIdAliases(java.lang.String,io.corbel.lib.token.reader.TokenReader)#javax/ws/rs/WebApplicationException/WebApplicationException(javax.ws.rs.core.Response)
io/corbel/oauth/api/UserResource/getUserFromIdAliases(java.lang.String,io.corbel.lib.token.reader.TokenReader)#io/corbel/oauth/model/User/getDomain()
io/corbel/oauth/api/UserResource/create(javax.ws.rs.core.UriInfo,io.corbel.oauth.model.Client,io.corbel.oauth.model.User)#io/corbel/oauth/model/User/setId(java.lang.String)
io/corbel/oauth/api/UserResource/create(javax.ws.rs.core.UriInfo,io.corbel.oauth.model.Client,io.corbel.oauth.model.User)#javax/ws/rs/core/UriBuilder/build(java.lang.Object[])
io/corbel/oauth/api/UserResource/create(javax.ws.rs.core.UriInfo,io.corbel.oauth.model.Client,io.corbel.oauth.model.User)#io/corbel/lib/ws/model/Error/Error(java.lang.String,java.lang.String)
io/corbel/oauth/api/UserResource/create(javax.ws.rs.core.UriInfo,io.corbel.oauth.model.Client,io.corbel.oauth.model.User)#javax/ws/rs/core/UriInfo/getAbsolutePathBuilder()
io/corbel/oauth/api/UserResource/create(javax.ws.rs.core.UriInfo,io.corbel.oauth.model.Client,io.corbel.oauth.model.User)#io/corbel/oauth/model/User/setRole(io.corbel.oauth.model.Role)
io/corbel/oauth/api/UserResource/create(javax.ws.rs.core.UriInfo,io.corbel.oauth.model.Client,io.corbel.oauth.model.User)#javax/ws/rs/core/UriBuilder/path(java.lang.String)
io/corbel/oauth/api/UserResource/create(javax.ws.rs.core.UriInfo,io.corbel.oauth.model.Client,io.corbel.oauth.model.User)#io/corbel/oauth/service/UserService/createUser(io.corbel.oauth.model.User,io.corbel.oauth.model.Client)
io/corbel/oauth/api/UserResource/create(javax.ws.rs.core.UriInfo,io.corbel.oauth.model.Client,io.corbel.oauth.model.User)#javax/ws/rs/core/Response/created(java.net.URI)
io/corbel/oauth/api/UserResource/create(javax.ws.rs.core.UriInfo,io.corbel.oauth.model.Client,io.corbel.oauth.model.User)#javax/ws/rs/core/Response/ResponseBuilder/build()
io/corbel/oauth/api/UserResource/create(javax.ws.rs.core.UriInfo,io.corbel.oauth.model.Client,io.corbel.oauth.model.User)#io/corbel/lib/ws/api/error/ErrorResponseFactory/getInstance()
io/corbel/oauth/api/UserResource/create(javax.ws.rs.core.UriInfo,io.corbel.oauth.model.Client,io.corbel.oauth.model.User)#io/corbel/lib/ws/api/error/ErrorResponseFactory/conflict(io.corbel.lib.ws.model.Error)
io/corbel/oauth/api/UserResource/delete(java.lang.String,io.corbel.lib.token.reader.TokenReader)#javax/ws/rs/core/Response/noContent()
io/corbel/oauth/api/UserResource/delete(java.lang.String,io.corbel.lib.token.reader.TokenReader)#javax/ws/rs/core/Response/ResponseBuilder/build()
io/corbel/oauth/api/UserResource/delete(java.lang.String,io.corbel.lib.token.reader.TokenReader)#io/corbel/oauth/service/UserService/deleteUser(java.lang.String)
io/corbel/oauth/api/UserResource/delete(java.lang.String,io.corbel.lib.token.reader.TokenReader)#io/corbel/oauth/model/User/getId()
io/corbel/oauth/api/UserResource/delete(java.lang.String,io.corbel.lib.token.reader.TokenReader)#io/corbel/oauth/api/UserResource/getUserFromIdAliases(java.lang.String,io.corbel.lib.token.reader.TokenReader)
io/corbel/oauth/api/UserResource/getUserProfile(java.lang.String,io.corbel.lib.token.reader.TokenReader)#javax/ws/rs/core/Response/ResponseBuilder/build()
io/corbel/oauth/api/UserResource/getUserProfile(java.lang.String,io.corbel.lib.token.reader.TokenReader)#io/corbel/oauth/model/User/getUserProfile()
io/corbel/oauth/api/UserResource/getUserProfile(java.lang.String,io.corbel.lib.token.reader.TokenReader)#javax/ws/rs/core/Response/ok()
io/corbel/oauth/api/UserResource/getUserProfile(java.lang.String,io.corbel.lib.token.reader.TokenReader)#javax/ws/rs/core/Response/ResponseBuilder/entity(java.lang.Object)
io/corbel/oauth/api/UserResource/getUserProfile(java.lang.String,io.corbel.lib.token.reader.TokenReader)#io/corbel/oauth/api/UserResource/getUserFromIdAliases(java.lang.String,io.corbel.lib.token.reader.TokenReader)
io/corbel/oauth/api/UserResource/getUserProfile(java.lang.String,io.corbel.lib.token.reader.TokenReader)#javax/ws/rs/core/Response/ResponseBuilder/type(javax.ws.rs.core.MediaType)
io/corbel/oauth/api/UserResource/get(java.lang.String,io.corbel.lib.token.reader.TokenReader)#javax/ws/rs/core/Response/ResponseBuilder/build()
io/corbel/oauth/api/UserResource/get(java.lang.String,io.corbel.lib.token.reader.TokenReader)#javax/ws/rs/core/Response/ok()
io/corbel/oauth/api/UserResource/get(java.lang.String,io.corbel.lib.token.reader.TokenReader)#javax/ws/rs/core/Response/ResponseBuilder/entity(java.lang.Object)
io/corbel/oauth/api/UserResource/get(java.lang.String,io.corbel.lib.token.reader.TokenReader)#io/corbel/oauth/api/UserResource/getUserFromIdAliases(java.lang.String,io.corbel.lib.token.reader.TokenReader)
io/corbel/oauth/api/UserResource/get(java.lang.String,io.corbel.lib.token.reader.TokenReader)#io/corbel/oauth/model/User/getUser()
io/corbel/oauth/api/UserResource/get(java.lang.String,io.corbel.lib.token.reader.TokenReader)#javax/ws/rs/core/Response/ResponseBuilder/type(javax.ws.rs.core.MediaType)
io/corbel/oauth/api/UserResource/checkUpdateUserRolePermissions(java.lang.String,io.corbel.oauth.model.Role)#io/corbel/oauth/model/User/getRole()
io/corbel/oauth/api/UserResource/checkUpdateUserRolePermissions(java.lang.String,io.corbel.oauth.model.Role)#io/corbel/lib/ws/api/error/ErrorResponseFactory/forbidden()
io/corbel/oauth/api/UserResource/checkUpdateUserRolePermissions(java.lang.String,io.corbel.oauth.model.Role)#javax/ws/rs/WebApplicationException/WebApplicationException(javax.ws.rs.core.Response)
io/corbel/oauth/api/UserResource/checkUpdateUserRolePermissions(java.lang.String,io.corbel.oauth.model.Role)#io/corbel/lib/ws/api/error/ErrorResponseFactory/getInstance()
io/corbel/oauth/api/UserResource/checkUpdateUserRolePermissions(java.lang.String,io.corbel.oauth.model.Role)#io/corbel/oauth/service/UserService/getUser(java.lang.String)
io/corbel/oauth/api/UserResource/checkUpdateUserRolePermissions(java.lang.String,io.corbel.oauth.model.Role)#io/corbel/oauth/model/Role/canChangeRoleTo(io.corbel.oauth.model.Role)
io/corbel/oauth/api/UserResource/generateResetPasswordEmail(io.corbel.oauth.model.Client,java.lang.String)#javax/ws/rs/core/Response/noContent()
io/corbel/oauth/api/UserResource/generateResetPasswordEmail(io.corbel.oauth.model.Client,java.lang.String)#javax/ws/rs/core/Response/ResponseBuilder/build()
io/corbel/oauth/api/UserResource/generateResetPasswordEmail(io.corbel.oauth.model.Client,java.lang.String)#io/corbel/oauth/service/UserService/sendMailResetPassword(java.lang.String,io.corbel.oauth.model.Client)
io/corbel/resources/rem/operation/ResizeWidth/apply(java.lang.String)#java/lang/Integer/parseInt(java.lang.String)
io/corbel/resources/rem/operation/ResizeWidth/apply(java.lang.String)#io/corbel/resources/rem/exception/ImageOperationsException/ImageOperationsException(java.lang.String,java.lang.Throwable)
io/corbel/resources/rem/operation/ResizeWidth/apply(java.lang.String)#io/corbel/resources/rem/exception/ImageOperationsException/ImageOperationsException(java.lang.String)
io/corbel/resources/rem/operation/ResizeWidth/apply(java.lang.String)#org/im4java/core/IMOps/resize(java.lang.Integer,java.lang.Integer,java.lang.String)
io/corbel/resources/rem/operation/ResizeWidth/apply(java.lang.String)#org/im4java/core/IMOperation/IMOperation()
io/corbel/iam/repository/DeviceRepositoryImpl/updateLastConnectionIfExist(java.lang.String,java.util.Date)#org/springframework/data/mongodb/core/FindAndModifyOptions/upsert(boolean)
io/corbel/iam/repository/DeviceRepositoryImpl/updateLastConnectionIfExist(java.lang.String,java.util.Date)#org/springframework/data/mongodb/core/query/Criteria/is(java.lang.Object)
io/corbel/iam/repository/DeviceRepositoryImpl/updateLastConnectionIfExist(java.lang.String,java.util.Date)#org/springframework/data/mongodb/core/FindAndModifyOptions/options()
io/corbel/iam/repository/DeviceRepositoryImpl/updateLastConnectionIfExist(java.lang.String,java.util.Date)#org/springframework/data/mongodb/core/query/Criteria/where(java.lang.String)
io/corbel/iam/repository/DeviceRepositoryImpl/updateLastConnectionIfExist(java.lang.String,java.util.Date)#org/springframework/data/mongodb/core/query/Query/query(org.springframework.data.mongodb.core.query.CriteriaDefinition)
io/corbel/iam/repository/DeviceRepositoryImpl/updateLastConnectionIfExist(java.lang.String,java.util.Date)#org/springframework/data/mongodb/core/query/Update/Update()
io/corbel/iam/repository/DeviceRepositoryImpl/updateLastConnectionIfExist(java.lang.String,java.util.Date)#org/springframework/data/mongodb/core/query/Update/set(java.lang.String,java.lang.Object)
io/corbel/iam/repository/DeviceRepositoryImpl/updateLastConnectionIfExist(java.lang.String,java.util.Date)#org/springframework/data/mongodb/core/MongoOperations/findAndModify(org.springframework.data.mongodb.core.query.Query,org.springframework.data.mongodb.core.query.Update,org.springframework.data.mongodb.core.FindAndModifyOptions,java.lang.Class)
io/corbel/resources/rem/search/DefaultResmiSearch/getIndexName(io.corbel.resources.rem.model.ResourceUri)#io/corbel/resources/rem/search/DefaultResmiSearch/getElasticSearchName(io.corbel.resources.rem.model.ResourceUri)
io/corbel/resources/rem/search/DefaultResmiSearch/getElasticSearchType(io.corbel.resources.rem.model.ResourceUri)#java/util/Optional/orElse(T)
io/corbel/resources/rem/search/DefaultResmiSearch/getElasticSearchType(io.corbel.resources.rem.model.ResourceUri)#java/util/Optional/ofNullable(T)
io/corbel/resources/rem/search/DefaultResmiSearch/getElasticSearchType(io.corbel.resources.rem.model.ResourceUri)#java/util/Optional/map(java.util.function.Function)
io/corbel/resources/rem/search/DefaultResmiSearch/getElasticSearchType(io.corbel.resources.rem.model.ResourceUri)#io/corbel/resources/rem/model/ResourceUri/getType()
io/corbel/resources/rem/search/DefaultResmiSearch/getElasticSearchType(io.corbel.resources.rem.model.ResourceUri)#io/corbel/resources/rem/dao/NamespaceNormalizer/normalize(java.lang.String)
io/corbel/resources/rem/search/DefaultResmiSearch/indexDocument(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject)#io/corbel/resources/rem/model/ResourceUri/isResource()
io/corbel/resources/rem/search/DefaultResmiSearch/indexDocument(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject)#io/corbel/resources/rem/model/ResourceUri/getTypeId()
io/corbel/resources/rem/search/DefaultResmiSearch/indexDocument(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject)#java/util/Optional/ofNullable(T)
io/corbel/resources/rem/search/DefaultResmiSearch/indexDocument(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject)#io/corbel/resources/rem/model/ResourceUri/getRelationId()
io/corbel/resources/rem/search/DefaultResmiSearch/indexDocument(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject)#java/util/Optional/ifPresent(java.util.function.Consumer)
io/corbel/resources/rem/search/DefaultResmiSearch/indexDocument(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject)#java/util/Optional/map(java.util.function.Function)
io/corbel/resources/rem/search/DefaultResmiSearch/count(io.corbel.resources.rem.model.ResourceUri,java.lang.String,java.util.List)#io/corbel/resources/rem/search/DefaultResmiSearch/getIndexName(io.corbel.resources.rem.model.ResourceUri)
io/corbel/resources/rem/search/DefaultResmiSearch/count(io.corbel.resources.rem.model.ResourceUri,java.lang.String,java.util.List)#io/corbel/resources/rem/search/DefaultResmiSearch/upsertResmiIndex(io.corbel.resources.rem.model.ResourceUri)
io/corbel/resources/rem/search/DefaultResmiSearch/count(io.corbel.resources.rem.model.ResourceUri,java.lang.String,java.util.List)#io/corbel/resources/rem/search/ElasticSearchService/count(java.lang.String,java.lang.String,java.lang.String,java.util.List)
io/corbel/resources/rem/search/DefaultResmiSearch/count(io.corbel.resources.rem.model.ResourceUri,java.lang.String,java.util.List)#io/corbel/resources/rem/search/DefaultResmiSearch/getElasticSearchType(io.corbel.resources.rem.model.ResourceUri)
io/corbel/resources/rem/search/DefaultResmiSearch/count(io.corbel.resources.rem.model.ResourceUri,java.lang.String,java.util.List)#io/corbel/lib/queries/request/AggregationResultsFactory/countResult(long)
io/corbel/resources/rem/search/DefaultResmiSearch/search(io.corbel.resources.rem.model.ResourceUri,java.lang.String,java.util.List,io.corbel.lib.queries.request.Pagination,java.util.Optional)#io/corbel/resources/rem/search/DefaultResmiSearch/getIndexName(io.corbel.resources.rem.model.ResourceUri)
io/corbel/resources/rem/search/DefaultResmiSearch/search(io.corbel.resources.rem.model.ResourceUri,java.lang.String,java.util.List,io.corbel.lib.queries.request.Pagination,java.util.Optional)#io/corbel/resources/rem/search/DefaultResmiSearch/upsertResmiIndex(io.corbel.resources.rem.model.ResourceUri)
io/corbel/resources/rem/search/DefaultResmiSearch/search(io.corbel.resources.rem.model.ResourceUri,java.lang.String,java.util.List,io.corbel.lib.queries.request.Pagination,java.util.Optional)#io/corbel/resources/rem/search/DefaultResmiSearch/getElasticSearchType(io.corbel.resources.rem.model.ResourceUri)
io/corbel/resources/rem/search/DefaultResmiSearch/search(io.corbel.resources.rem.model.ResourceUri,java.lang.String,java.util.List,io.corbel.lib.queries.request.Pagination,java.util.Optional)#com/google/gson/JsonArray/JsonArray()
io/corbel/resources/rem/search/DefaultResmiSearch/search(io.corbel.resources.rem.model.ResourceUri,java.lang.String,java.util.List,io.corbel.lib.queries.request.Pagination,java.util.Optional)#io/corbel/resources/rem/search/ElasticSearchService/search(java.lang.String,java.lang.String,java.lang.String,java.util.List,io.corbel.lib.queries.request.Pagination,java.util.Optional)
io/corbel/resources/rem/search/DefaultResmiSearch/deleteDocument(io.corbel.resources.rem.model.ResourceUri)#io/corbel/resources/rem/search/DefaultResmiSearch/getIndexName(io.corbel.resources.rem.model.ResourceUri)
io/corbel/resources/rem/search/DefaultResmiSearch/deleteDocument(io.corbel.resources.rem.model.ResourceUri)#io/corbel/resources/rem/search/DefaultResmiSearch/upsertResmiIndex(io.corbel.resources.rem.model.ResourceUri)
io/corbel/resources/rem/search/DefaultResmiSearch/deleteDocument(io.corbel.resources.rem.model.ResourceUri)#io/corbel/resources/rem/search/DefaultResmiSearch/getElasticSearchId(io.corbel.resources.rem.model.ResourceUri)
io/corbel/resources/rem/search/DefaultResmiSearch/deleteDocument(io.corbel.resources.rem.model.ResourceUri)#io/corbel/resources/rem/search/DefaultResmiSearch/getElasticSearchType(io.corbel.resources.rem.model.ResourceUri)
io/corbel/resources/rem/search/DefaultResmiSearch/deleteDocument(io.corbel.resources.rem.model.ResourceUri)#io/corbel/resources/rem/search/ElasticSearchService/deleteDocument(java.lang.String,java.lang.String,java.lang.String)
io/corbel/resources/rem/search/DefaultResmiSearch/createIndex(java.lang.String,java.lang.String,java.lang.String)#io/corbel/resources/rem/model/ResourceUri/ResourceUri(java.lang.String,java.lang.String)
io/corbel/resources/rem/search/DefaultResmiSearch/createIndex(java.lang.String,java.lang.String,java.lang.String)#io/corbel/resources/rem/search/DefaultResmiSearch/getIndexName(io.corbel.resources.rem.model.ResourceUri)
io/corbel/resources/rem/search/DefaultResmiSearch/createIndex(java.lang.String,java.lang.String,java.lang.String)#io/corbel/resources/rem/search/ElasticSearchService/createIndex(java.lang.String,java.lang.String)
io/corbel/resources/rem/search/DefaultResmiSearch/upsertResmiIndex(io.corbel.resources.rem.model.ResourceUri,java.lang.String,java.lang.String)#java/lang/Class/getResourceAsStream(java.lang.String)
io/corbel/resources/rem/search/DefaultResmiSearch/upsertResmiIndex(io.corbel.resources.rem.model.ResourceUri,java.lang.String,java.lang.String)#io/corbel/resources/rem/search/DefaultResmiSearch/getIndexName(io.corbel.resources.rem.model.ResourceUri)
io/corbel/resources/rem/search/DefaultResmiSearch/upsertResmiIndex(io.corbel.resources.rem.model.ResourceUri,java.lang.String,java.lang.String)#java/util/Scanner/Scanner(java.io.InputStream,java.lang.String)
io/corbel/resources/rem/search/DefaultResmiSearch/upsertResmiIndex(io.corbel.resources.rem.model.ResourceUri,java.lang.String,java.lang.String)#io/corbel/resources/rem/search/ElasticSearchService/indexExists(java.lang.String)
io/corbel/resources/rem/search/DefaultResmiSearch/upsertResmiIndex(io.corbel.resources.rem.model.ResourceUri,java.lang.String,java.lang.String)#java/time/Clock/millis()
io/corbel/resources/rem/search/DefaultResmiSearch/upsertResmiIndex(io.corbel.resources.rem.model.ResourceUri,java.lang.String,java.lang.String)#io/corbel/resources/rem/search/ElasticSearchService/setupMapping(java.lang.String,java.lang.String,java.lang.String)
io/corbel/resources/rem/search/DefaultResmiSearch/upsertResmiIndex(io.corbel.resources.rem.model.ResourceUri,java.lang.String,java.lang.String)#java/util/Scanner/next()
io/corbel/resources/rem/search/DefaultResmiSearch/upsertResmiIndex(io.corbel.resources.rem.model.ResourceUri,java.lang.String,java.lang.String)#io/corbel/resources/rem/search/ElasticSearchService/addAlias(java.lang.String,java.lang.String)
io/corbel/resources/rem/search/DefaultResmiSearch/upsertResmiIndex(io.corbel.resources.rem.model.ResourceUri,java.lang.String,java.lang.String)#java/util/Scanner/useDelimiter(java.lang.String)
io/corbel/resources/rem/search/DefaultResmiSearch/upsertResmiIndex(io.corbel.resources.rem.model.ResourceUri,java.lang.String,java.lang.String)#java/lang/String/toLowerCase()
io/corbel/resources/rem/search/DefaultResmiSearch/upsertResmiIndex(io.corbel.resources.rem.model.ResourceUri,java.lang.String,java.lang.String)#java/lang/Object/getClass()
io/corbel/resources/rem/search/DefaultResmiSearch/upsertResmiIndex(io.corbel.resources.rem.model.ResourceUri,java.lang.String,java.lang.String)#io/corbel/resources/rem/search/DefaultResmiSearch/getElasticSearchName(io.corbel.resources.rem.model.ResourceUri)
io/corbel/resources/rem/search/DefaultResmiSearch/upsertResmiIndex(io.corbel.resources.rem.model.ResourceUri,java.lang.String,java.lang.String)#io/corbel/resources/rem/search/ElasticSearchService/createIndex(java.lang.String,java.lang.String)
io/corbel/resources/rem/search/DefaultResmiSearch/upsertResmiIndex(io.corbel.resources.rem.model.ResourceUri)#io/corbel/resources/rem/search/DefaultResmiSearch/upsertResmiIndex(io.corbel.resources.rem.model.ResourceUri,java.lang.String,java.lang.String)
io/corbel/resources/rem/search/DefaultResmiSearch/getElasticSearchId(io.corbel.resources.rem.model.ResourceUri)#java/util/Optional/orElse(T)
io/corbel/resources/rem/search/DefaultResmiSearch/getElasticSearchId(io.corbel.resources.rem.model.ResourceUri)#io/corbel/resources/rem/model/ResourceUri/getTypeId()
io/corbel/resources/rem/search/DefaultResmiSearch/getElasticSearchId(io.corbel.resources.rem.model.ResourceUri)#java/util/Optional/ofNullable(T)
io/corbel/resources/rem/search/DefaultResmiSearch/getElasticSearchId(io.corbel.resources.rem.model.ResourceUri)#io/corbel/resources/rem/model/ResourceUri/getRelationId()
io/corbel/resources/rem/search/DefaultResmiSearch/getElasticSearchName(io.corbel.resources.rem.model.ResourceUri)#io/corbel/resources/rem/search/DefaultResmiSearch/getElasticSearchType(io.corbel.resources.rem.model.ResourceUri)
io/corbel/resources/rem/search/DefaultResmiSearch/getElasticSearchName(io.corbel.resources.rem.model.ResourceUri)#io/corbel/resources/rem/dao/NamespaceNormalizer/normalize(java.lang.String)
io/corbel/resources/rem/search/DefaultResmiSearch/getElasticSearchName(io.corbel.resources.rem.model.ResourceUri)#io/corbel/resources/rem/model/ResourceUri/getDomain()
io/corbel/resources/rem/search/DefaultResmiSearch/setupMapping(io.corbel.resources.rem.model.ResourceUri,java.lang.String)#io/corbel/resources/rem/search/DefaultResmiSearch/getIndexName(io.corbel.resources.rem.model.ResourceUri)
io/corbel/resources/rem/search/DefaultResmiSearch/setupMapping(io.corbel.resources.rem.model.ResourceUri,java.lang.String)#io/corbel/resources/rem/search/DefaultResmiSearch/getElasticSearchType(io.corbel.resources.rem.model.ResourceUri)
io/corbel/resources/rem/search/DefaultResmiSearch/setupMapping(io.corbel.resources.rem.model.ResourceUri,java.lang.String)#io/corbel/resources/rem/search/ElasticSearchService/setupMapping(java.lang.String,java.lang.String,java.lang.String)
io/corbel/resources/rem/search/DefaultResmiSearch/search(io.corbel.resources.rem.model.ResourceUri,java.lang.String,java.util.Map,int,int)#io/corbel/resources/rem/search/DefaultResmiSearch/getIndexName(io.corbel.resources.rem.model.ResourceUri)
io/corbel/resources/rem/search/DefaultResmiSearch/search(io.corbel.resources.rem.model.ResourceUri,java.lang.String,java.util.Map,int,int)#io/corbel/resources/rem/search/DefaultResmiSearch/upsertResmiIndex(io.corbel.resources.rem.model.ResourceUri)
io/corbel/resources/rem/search/DefaultResmiSearch/search(io.corbel.resources.rem.model.ResourceUri,java.lang.String,java.util.Map,int,int)#io/corbel/resources/rem/search/DefaultResmiSearch/getElasticSearchType(io.corbel.resources.rem.model.ResourceUri)
io/corbel/resources/rem/search/DefaultResmiSearch/search(io.corbel.resources.rem.model.ResourceUri,java.lang.String,java.util.Map,int,int)#io/corbel/resources/rem/search/ElasticSearchService/search(java.lang.String,java.lang.String,java.lang.String,java.util.Map,int,int)
io/corbel/resources/rem/search/DefaultResmiSearch/search(io.corbel.resources.rem.model.ResourceUri,java.lang.String,java.util.Map,int,int)#com/google/gson/JsonArray/JsonArray()
io/corbel/resources/rem/search/DefaultResmiSearch/count(io.corbel.resources.rem.model.ResourceUri,java.lang.String,java.util.Map)#io/corbel/resources/rem/search/ElasticSearchService/count(java.lang.String,java.lang.String,java.lang.String,java.util.Map)
io/corbel/resources/rem/search/DefaultResmiSearch/count(io.corbel.resources.rem.model.ResourceUri,java.lang.String,java.util.Map)#io/corbel/resources/rem/search/DefaultResmiSearch/getIndexName(io.corbel.resources.rem.model.ResourceUri)
io/corbel/resources/rem/search/DefaultResmiSearch/count(io.corbel.resources.rem.model.ResourceUri,java.lang.String,java.util.Map)#io/corbel/resources/rem/search/DefaultResmiSearch/upsertResmiIndex(io.corbel.resources.rem.model.ResourceUri)
io/corbel/resources/rem/search/DefaultResmiSearch/count(io.corbel.resources.rem.model.ResourceUri,java.lang.String,java.util.Map)#io/corbel/resources/rem/search/DefaultResmiSearch/getElasticSearchType(io.corbel.resources.rem.model.ResourceUri)
io/corbel/resources/rem/search/DefaultResmiSearch/count(io.corbel.resources.rem.model.ResourceUri,java.lang.String,java.util.Map)#io/corbel/lib/queries/request/AggregationResultsFactory/countResult(long)
io/corbel/iam/auth/BasicParams/createFromJWT(net.oauth.jsontoken.JsonToken)#io/corbel/iam/auth/BasicParams/getJWTAttribute(net.oauth.jsontoken.JsonToken,java.lang.String)
io/corbel/iam/auth/BasicParams/createFromJWT(net.oauth.jsontoken.JsonToken)#io/corbel/iam/auth/BasicParams/isEmpty()
io/corbel/iam/auth/BasicParams/createFromJWT(net.oauth.jsontoken.JsonToken)#io/corbel/iam/auth/BasicParams/BasicParams(java.lang.String,java.lang.String)
io/corbel/iam/auth/BasicParams/isMissing()#org/apache/commons/lang3/StringUtils/isBlank(java.lang.CharSequence)
io/corbel/iam/auth/BasicParams/getJWTAttribute(net.oauth.jsontoken.JsonToken,java.lang.String)#com/google/gson/JsonPrimitive/getAsString()
io/corbel/iam/auth/BasicParams/getJWTAttribute(net.oauth.jsontoken.JsonToken,java.lang.String)#net/oauth/jsontoken/JsonToken/getParamAsPrimitive(java.lang.String)
io/corbel/resources/rem/ioc/RemImageIoc/getImagePutRem(io.corbel.resources.rem.service.ImageCacheService)#io/corbel/resources/rem/ImagePutRem/ImagePutRem(io.corbel.resources.rem.service.ImageCacheService)
io/corbel/resources/rem/ioc/RemImageIoc/getCropOperation()#io/corbel/resources/rem/operation/Crop/Crop()
io/corbel/resources/rem/ioc/RemImageIoc/getCropFromCenterOperation()#io/corbel/resources/rem/operation/CropFromCenter/CropFromCenter()
io/corbel/resources/rem/ioc/RemImageIoc/getResizeheight()#io/corbel/resources/rem/operation/ResizeHeight/ResizeHeight()
io/corbel/resources/rem/ioc/RemImageIoc/getBlurOperation()#io/corbel/resources/rem/operation/Blur/Blur()
io/corbel/resources/rem/ioc/RemImageIoc/getResizeAndFillOperation()#io/corbel/resources/rem/operation/ResizeAndFill/ResizeAndFill()
io/corbel/resources/rem/ioc/RemImageIoc/getImageDeleteRem(io.corbel.resources.rem.service.ImageCacheService)#io/corbel/resources/rem/ImageDeleteRem/ImageDeleteRem(io.corbel.resources.rem.service.ImageCacheService)
io/corbel/resources/rem/ioc/RemImageIoc/getImageGetRem(io.corbel.resources.rem.service.ImageOperationsService,io.corbel.resources.rem.service.ImageCacheService)#io/corbel/resources/rem/ImageGetRem/ImageGetRem(io.corbel.resources.rem.service.ImageOperationsService,io.corbel.resources.rem.service.ImageCacheService,java.lang.String)
io/corbel/resources/rem/ioc/RemImageIoc/getImageGetRem(io.corbel.resources.rem.service.ImageOperationsService,io.corbel.resources.rem.service.ImageCacheService)#org/springframework/core/env/PropertyResolver/getProperty(java.lang.String,java.lang.String)
io/corbel/resources/rem/ioc/RemImageIoc/getImageOperationsService(java.util.List)#io/corbel/resources/rem/service/DefaultImageOperationsService/DefaultImageOperationsService(io.corbel.resources.rem.service.DefaultImageOperationsService.IMOperationFactory,io.corbel.resources.rem.service.DefaultImageOperationsService.ConvertCmdFactory,java.util.Map)
io/corbel/resources/rem/ioc/RemImageIoc/getImageOperationsService(java.util.List)#io/corbel/resources/rem/service/DefaultImageOperationsService/IMOperationFactory/IMOperationFactory()
io/corbel/resources/rem/ioc/RemImageIoc/getImageOperationsService(java.util.List)#io/corbel/resources/rem/ioc/RemImageIoc/getOperations(java.util.List)
io/corbel/resources/rem/ioc/RemImageIoc/getImageOperationsService(java.util.List)#io/corbel/resources/rem/service/DefaultImageOperationsService/ConvertCmdFactory/ConvertCmdFactory()
io/corbel/resources/rem/ioc/RemImageIoc/getResizeWidth()#io/corbel/resources/rem/operation/ResizeWidth/ResizeWidth()
io/corbel/resources/rem/ioc/RemImageIoc/getImageCacheService()#io/corbel/resources/rem/service/DefaultImageCacheService/DefaultImageCacheService(java.lang.String)
io/corbel/resources/rem/ioc/RemImageIoc/getImageCacheService()#org/springframework/core/env/PropertyResolver/getProperty(java.lang.String,java.lang.String)
io/corbel/resources/rem/ioc/RemImageIoc/getOperations(java.util.List)#java/util/stream/Stream/collect(java.util.stream.Collector)
io/corbel/resources/rem/ioc/RemImageIoc/getOperations(java.util.List)#java/util/Collection/stream()
io/corbel/resources/rem/ioc/RemImageIoc/getOperations(java.util.List)#java/util/stream/Collectors/toMap(java.util.function.Function,java.util.function.Function)
io/corbel/resources/rem/ioc/RemImageIoc/getResizeOperation()#io/corbel/resources/rem/operation/Resize/Resize()
io/corbel/resources/rem/ioc/RemImageIoc/getAutoOrientOperation()#io/corbel/resources/rem/operation/AutoOrient/AutoOrient()
io/corbel/resources/rem/model/ImageOperationDescription/equals(java.lang.Object)#java/lang/String/equals(java.lang.Object)
io/corbel/resources/rem/model/ImageOperationDescription/hashCode()#java/lang/String/hashCode()
io/corbel/iam/IamRunner/main(java.lang.String[])#io/corbel/iam/IamRunner/IamRunner()
io/corbel/iam/IamRunner/main(java.lang.String[])#io/corbel/lib/ws/cli/ServiceRunner/setCommandLine(io.corbel.lib.ws.cli.CommandLineI)
io/corbel/iam/IamRunner/main(java.lang.String[])#org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)
io/corbel/iam/IamRunner/main(java.lang.String[])#io/corbel/iam/IamRunner/getArtifactId()
io/corbel/iam/IamRunner/main(java.lang.String[])#io/corbel/lib/ws/cli/GenericConsole/GenericConsole(java.lang.String,java.lang.Class)
io/corbel/iam/IamRunner/main(java.lang.String[])#io/corbel/lib/ws/cli/ServiceRunner/run(java.lang.String[])
io/corbel/iam/IamRunner/configureService(io.dropwizard.setup.Environment,org.springframework.context.ApplicationContext)#com/codahale/metrics/health/HealthCheckRegistry/register(java.lang.String,com.codahale.metrics.health.HealthCheck)
io/corbel/iam/IamRunner/configureService(io.dropwizard.setup.Environment,org.springframework.context.ApplicationContext)#io/dropwizard/setup/Environment/jersey()
io/corbel/iam/IamRunner/configureService(io.dropwizard.setup.Environment,org.springframework.context.ApplicationContext)#io/corbel/lib/ws/health/BasicHealthCheck/BasicHealthCheck()
io/corbel/iam/IamRunner/configureService(io.dropwizard.setup.Environment,org.springframework.context.ApplicationContext)#io/corbel/lib/ws/cli/ServiceRunnerWithVersionResource/configureService(io.dropwizard.setup.Environment,org.springframework.context.ApplicationContext)
io/corbel/iam/IamRunner/configureService(io.dropwizard.setup.Environment,org.springframework.context.ApplicationContext)#org/springframework/beans/factory/BeanFactory/getBean(java.lang.Class)
io/corbel/iam/IamRunner/configureService(io.dropwizard.setup.Environment,org.springframework.context.ApplicationContext)#io/dropwizard/setup/Environment/healthChecks()
io/corbel/iam/IamRunner/configureService(io.dropwizard.setup.Environment,org.springframework.context.ApplicationContext)#io/dropwizard/jersey/setup/JerseyEnvironment/register(java.lang.Object)
io/corbel/evci/converter/DomainObjectJsonMessageConverter/fromMessage(org.springframework.amqp.core.Message)#java/lang/Object/equals(java.lang.Object)
io/corbel/evci/converter/DomainObjectJsonMessageConverter/fromMessage(org.springframework.amqp.core.Message)#org/slf4j/Logger/warn(java.lang.String)
io/corbel/evci/converter/DomainObjectJsonMessageConverter/fromMessage(org.springframework.amqp.core.Message)#com/fasterxml/jackson/databind/ObjectMapper/getTypeFactory()
io/corbel/evci/converter/DomainObjectJsonMessageConverter/fromMessage(org.springframework.amqp.core.Message)#com/fasterxml/jackson/databind/ObjectMapper/convertValue(java.lang.Object,com.fasterxml.jackson.databind.JavaType)
io/corbel/evci/converter/DomainObjectJsonMessageConverter/fromMessage(org.springframework.amqp.core.Message)#io/corbel/evci/model/EworkerMessage/getContent()
io/corbel/evci/converter/DomainObjectJsonMessageConverter/fromMessage(org.springframework.amqp.core.Message)#io/corbel/evci/converter/DomainObjectJsonMessageConverter/convertBytesToObject(byte[],java.lang.String,com.fasterxml.jackson.databind.JavaType)
io/corbel/evci/converter/DomainObjectJsonMessageConverter/fromMessage(org.springframework.amqp.core.Message)#com/fasterxml/jackson/databind/JavaType/getParameterSource()
io/corbel/evci/converter/DomainObjectJsonMessageConverter/fromMessage(org.springframework.amqp.core.Message)#org/springframework/amqp/core/MessageProperties/getContentType()
io/corbel/evci/converter/DomainObjectJsonMessageConverter/fromMessage(org.springframework.amqp.core.Message)#org/springframework/amqp/support/converter/MessageConversionException/MessageConversionException(java.lang.String,java.lang.Throwable)
io/corbel/evci/converter/DomainObjectJsonMessageConverter/fromMessage(org.springframework.amqp.core.Message)#org/springframework/amqp/support/converter/MessageConversionException/MessageConversionException(java.lang.String)
io/corbel/evci/converter/DomainObjectJsonMessageConverter/fromMessage(org.springframework.amqp.core.Message)#com/fasterxml/jackson/databind/type/TypeFactory/constructType(java.lang.reflect.Type)
io/corbel/evci/converter/DomainObjectJsonMessageConverter/fromMessage(org.springframework.amqp.core.Message)#org/springframework/amqp/core/Message/getBody()
io/corbel/evci/converter/DomainObjectJsonMessageConverter/fromMessage(org.springframework.amqp.core.Message)#java/lang/Object/getClass()
io/corbel/evci/converter/DomainObjectJsonMessageConverter/fromMessage(org.springframework.amqp.core.Message)#java/lang/String/contains(java.lang.CharSequence)
io/corbel/evci/converter/DomainObjectJsonMessageConverter/fromMessage(org.springframework.amqp.core.Message)#org/springframework/amqp/core/MessageProperties/getContentEncoding()
io/corbel/evci/converter/DomainObjectJsonMessageConverter/fromMessage(org.springframework.amqp.core.Message)#org/springframework/amqp/core/Message/getMessageProperties()
io/corbel/evci/converter/DomainObjectJsonMessageConverter/fromMessage(org.springframework.amqp.core.Message)#org/springframework/amqp/support/converter/AbstractJsonMessageConverter/getDefaultCharset()
io/corbel/evci/converter/DomainObjectJsonMessageConverter/convertBytesToObject(byte[],java.lang.String,com.fasterxml.jackson.databind.JavaType)#java/lang/String/String(byte[],java.lang.String)
io/corbel/evci/converter/DomainObjectJsonMessageConverter/convertBytesToObject(byte[],java.lang.String,com.fasterxml.jackson.databind.JavaType)#com/fasterxml/jackson/databind/ObjectMapper/readValue(java.lang.String,com.fasterxml.jackson.databind.JavaType)
io/corbel/evci/model/Header/equals(java.lang.Object)#java/lang/String/equals(java.lang.Object)
io/corbel/evci/model/Header/equals(java.lang.Object)#java/lang/Object/getClass()
io/corbel/evci/model/Header/hashCode()#java/lang/String/hashCode()
io/corbel/resources/ResourcesRunner/configureObjectMapper(com.fasterxml.jackson.databind.ObjectMapper)#com/fasterxml/jackson/databind/ObjectMapper/registerModule(com.fasterxml.jackson.databind.Module)
io/corbel/resources/ResourcesRunner/configureObjectMapper(com.fasterxml.jackson.databind.ObjectMapper)#io/corbel/lib/ws/cli/ServiceRunner/configureObjectMapper(com.fasterxml.jackson.databind.ObjectMapper)
io/corbel/resources/ResourcesRunner/configureObjectMapper(com.fasterxml.jackson.databind.ObjectMapper)#com/fasterxml/jackson/module/scala/DefaultScalaModule/DefaultScalaModule()
io/corbel/resources/ResourcesRunner/main(java.lang.String[])#io/corbel/lib/ws/cli/ServiceRunner/setCommandLine(io.corbel.lib.ws.cli.CommandLineI)
io/corbel/resources/ResourcesRunner/main(java.lang.String[])#io/corbel/resources/ResourcesRunner/ResourcesRunner()
io/corbel/resources/ResourcesRunner/main(java.lang.String[])#org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)
io/corbel/resources/ResourcesRunner/main(java.lang.String[])#io/corbel/resources/ResourcesRunner/createConsoleCommandLine(io.corbel.resources.ResourcesRunner)
io/corbel/resources/ResourcesRunner/main(java.lang.String[])#io/corbel/lib/ws/cli/ServiceRunner/run(java.lang.String[])
io/corbel/resources/ResourcesRunner/configureService(io.dropwizard.setup.Environment,org.springframework.context.ApplicationContext)#io/dropwizard/setup/Environment/jersey()
io/corbel/resources/ResourcesRunner/configureService(io.dropwizard.setup.Environment,org.springframework.context.ApplicationContext)#io/corbel/lib/ws/health/BasicHealthCheck/BasicHealthCheck()
io/corbel/resources/ResourcesRunner/configureService(io.dropwizard.setup.Environment,org.springframework.context.ApplicationContext)#io/corbel/lib/ws/cli/ServiceRunnerWithVersionResource/configureService(io.dropwizard.setup.Environment,org.springframework.context.ApplicationContext)
io/corbel/resources/ResourcesRunner/configureService(io.dropwizard.setup.Environment,org.springframework.context.ApplicationContext)#org/springframework/beans/factory/BeanFactory/getBean(java.lang.Class)
io/corbel/resources/ResourcesRunner/configureService(io.dropwizard.setup.Environment,org.springframework.context.ApplicationContext)#io/dropwizard/jersey/setup/JerseyEnvironment/register(java.lang.Class)
io/corbel/resources/ResourcesRunner/configureService(io.dropwizard.setup.Environment,org.springframework.context.ApplicationContext)#io/corbel/resources/rem/plugin/HealthCheckRegistry/getHealthChecks()
io/corbel/resources/ResourcesRunner/configureService(io.dropwizard.setup.Environment,org.springframework.context.ApplicationContext)#io/dropwizard/setup/Environment/healthChecks()
io/corbel/resources/ResourcesRunner/configureService(io.dropwizard.setup.Environment,org.springframework.context.ApplicationContext)#io/dropwizard/jersey/setup/JerseyEnvironment/register(java.lang.Object)
io/corbel/resources/ResourcesRunner/configureService(io.dropwizard.setup.Environment,org.springframework.context.ApplicationContext)#com/codahale/metrics/health/HealthCheckRegistry/register(java.lang.String,com.codahale.metrics.health.HealthCheck)
io/corbel/resources/ResourcesRunner/configureService(io.dropwizard.setup.Environment,org.springframework.context.ApplicationContext)#java/util/Map/forEach(java.util.function.BiConsumer)
io/corbel/resources/ResourcesRunner/createConsoleCommandLine(io.corbel.resources.ResourcesRunner)#io/corbel/resources/ResourcesRunner/getArtifactId()
io/corbel/resources/ResourcesRunner/createConsoleCommandLine(io.corbel.resources.ResourcesRunner)#io/corbel/lib/ws/cli/GenericConsole/GenericConsole(java.lang.String,java.lang.Class)
io/corbel/iam/repository/decorator/UserRepositoryDecorator/find(io.corbel.lib.queries.request.ResourceQuery,io.corbel.lib.queries.request.Pagination,io.corbel.lib.queries.request.Sort)#io/corbel/lib/queries/mongo/repository/GenericFindRepository/find(io.corbel.lib.queries.request.ResourceQuery,io.corbel.lib.queries.request.Pagination,io.corbel.lib.queries.request.Sort)
io/corbel/iam/repository/decorator/UserRepositoryDecorator/deleteByDomain(java.lang.String)#io/corbel/iam/repository/UserRepositoryCustom/deleteByDomain(java.lang.String)
io/corbel/iam/repository/decorator/UserRepositoryDecorator/count(org.springframework.data.domain.Example)#org/springframework/data/repository/query/QueryByExampleExecutor/count(org.springframework.data.domain.Example)
io/corbel/iam/repository/decorator/UserRepositoryDecorator/delete(java.lang.Iterable)#org/springframework/data/repository/CrudRepository/delete(java.lang.Iterable)
io/corbel/iam/repository/decorator/UserRepositoryDecorator/deleteAll()#org/springframework/data/repository/CrudRepository/deleteAll()
io/corbel/iam/repository/decorator/UserRepositoryDecorator/findByUsernameAndDomain(java.lang.String,java.lang.String)#io/corbel/iam/repository/UserRepository/findByUsernameAndDomain(java.lang.String,java.lang.String)
io/corbel/iam/repository/decorator/UserRepositoryDecorator/existsByUsernameAndDomain(java.lang.String,java.lang.String)#io/corbel/iam/repository/UserRepositoryCustom/existsByUsernameAndDomain(java.lang.String,java.lang.String)
io/corbel/iam/repository/decorator/UserRepositoryDecorator/findAll(java.lang.Iterable)#org/springframework/data/repository/CrudRepository/findAll(java.lang.Iterable)
io/corbel/iam/repository/decorator/UserRepositoryDecorator/insert(S)#org/springframework/data/mongodb/repository/MongoRepository/insert(S)
io/corbel/iam/repository/decorator/UserRepositoryDecorator/count(io.corbel.lib.queries.request.ResourceQuery)#io/corbel/lib/queries/mongo/repository/GenericFindRepository/count(io.corbel.lib.queries.request.ResourceQuery)
io/corbel/iam/repository/decorator/UserRepositoryDecorator/delete(io.corbel.iam.model.User)#org/springframework/data/repository/CrudRepository/delete(T)
io/corbel/iam/repository/decorator/UserRepositoryDecorator/findByDomainAndEmail(java.lang.String,java.lang.String)#io/corbel/iam/repository/UserRepository/findByDomainAndEmail(java.lang.String,java.lang.String)
io/corbel/iam/repository/decorator/UserRepositoryDecorator/addScopes(java.lang.String,java.lang.String[])#io/corbel/iam/repository/HasScopesRepository/addScopes(ID,java.lang.String[])
io/corbel/iam/repository/decorator/UserRepositoryDecorator/findAll(org.springframework.data.domain.Example,org.springframework.data.domain.Sort)#org/springframework/data/mongodb/repository/MongoRepository/findAll(org.springframework.data.domain.Example,org.springframework.data.domain.Sort)
io/corbel/iam/repository/decorator/UserRepositoryDecorator/findUserDomain(java.lang.String)#io/corbel/iam/repository/UserRepositoryCustom/findUserDomain(java.lang.String)
io/corbel/iam/repository/decorator/UserRepositoryDecorator/count()#org/springframework/data/repository/CrudRepository/count()
io/corbel/iam/repository/decorator/UserRepositoryDecorator/findById(java.lang.String)#io/corbel/iam/repository/UserRepository/findById(java.lang.String)
io/corbel/iam/repository/decorator/UserRepositoryDecorator/findOne(org.springframework.data.domain.Example)#org/springframework/data/repository/query/QueryByExampleExecutor/findOne(org.springframework.data.domain.Example)
io/corbel/iam/repository/decorator/UserRepositoryDecorator/findAll(org.springframework.data.domain.Pageable)#org/springframework/data/repository/PagingAndSortingRepository/findAll(org.springframework.data.domain.Pageable)
io/corbel/iam/repository/decorator/UserRepositoryDecorator/existsByEmailAndDomain(java.lang.String,java.lang.String)#io/corbel/iam/repository/UserRepositoryCustom/existsByEmailAndDomain(java.lang.String,java.lang.String)
io/corbel/iam/repository/decorator/UserRepositoryDecorator/delete(java.lang.String)#org/springframework/data/repository/CrudRepository/delete(ID)
io/corbel/iam/repository/decorator/UserRepositoryDecorator/findAll(org.springframework.data.domain.Example)#org/springframework/data/mongodb/repository/MongoRepository/findAll(org.springframework.data.domain.Example)
io/corbel/iam/repository/decorator/UserRepositoryDecorator/exists(org.springframework.data.domain.Example)#org/springframework/data/repository/query/QueryByExampleExecutor/exists(org.springframework.data.domain.Example)
io/corbel/iam/repository/decorator/UserRepositoryDecorator/findAll(org.springframework.data.domain.Sort)#org/springframework/data/mongodb/repository/MongoRepository/findAll(org.springframework.data.domain.Sort)
io/corbel/iam/repository/decorator/UserRepositoryDecorator/save(io.corbel.iam.model.User)#org/springframework/data/repository/CrudRepository/save(S)
io/corbel/iam/repository/decorator/UserRepositoryDecorator/insert(java.lang.Iterable)#org/springframework/data/mongodb/repository/MongoRepository/insert(java.lang.Iterable)
io/corbel/iam/repository/decorator/UserRepositoryDecorator/removeScopes(java.lang.String,java.lang.String[])#io/corbel/iam/repository/HasScopesRepository/removeScopes(ID,java.lang.String[])
io/corbel/iam/repository/decorator/UserRepositoryDecorator/find(java.util.List,io.corbel.lib.queries.request.Pagination,io.corbel.lib.queries.request.Sort)#io/corbel/lib/queries/mongo/repository/GenericFindRepository/find(java.util.List,io.corbel.lib.queries.request.Pagination,io.corbel.lib.queries.request.Sort)
io/corbel/iam/repository/decorator/UserRepositoryDecorator/exists(java.lang.String)#org/springframework/data/repository/CrudRepository/exists(ID)
io/corbel/iam/repository/decorator/UserRepositoryDecorator/findAll(org.springframework.data.domain.Example,org.springframework.data.domain.Pageable)#org/springframework/data/repository/query/QueryByExampleExecutor/findAll(org.springframework.data.domain.Example,org.springframework.data.domain.Pageable)
io/corbel/iam/repository/decorator/UserRepositoryDecorator/save(java.lang.Iterable)#org/springframework/data/mongodb/repository/MongoRepository/save(java.lang.Iterable)
io/corbel/iam/repository/decorator/UserRepositoryDecorator/removeScopes(java.lang.String[])#io/corbel/iam/repository/HasScopesRepository/removeScopes(java.lang.String[])
io/corbel/iam/repository/decorator/UserRepositoryDecorator/findOne(java.lang.String)#org/springframework/data/repository/CrudRepository/findOne(ID)
io/corbel/iam/repository/decorator/UserRepositoryDecorator/findAll()#org/springframework/data/mongodb/repository/MongoRepository/findAll()
io/corbel/oauth/repository/decorator/LowerCaseDecorator/patch(io.corbel.oauth.model.User,java.lang.String[])#io/corbel/oauth/repository/decorator/UserRepositoryDecorator/patch(io.corbel.oauth.model.User,java.lang.String[])
io/corbel/oauth/repository/decorator/LowerCaseDecorator/patch(io.corbel.oauth.model.User,java.lang.String[])#io/corbel/oauth/repository/decorator/LowerCaseDecorator/userToLowerCase(io.corbel.oauth.model.User)
io/corbel/oauth/repository/decorator/LowerCaseDecorator/upsert(java.lang.String,io.corbel.oauth.model.User)#io/corbel/oauth/repository/decorator/UserRepositoryDecorator/upsert(java.lang.String,io.corbel.oauth.model.User)
io/corbel/oauth/repository/decorator/LowerCaseDecorator/upsert(java.lang.String,io.corbel.oauth.model.User)#io/corbel/oauth/repository/decorator/LowerCaseDecorator/userToLowerCase(io.corbel.oauth.model.User)
io/corbel/oauth/repository/decorator/LowerCaseDecorator/delete(java.lang.Iterable)#java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)
io/corbel/oauth/repository/decorator/LowerCaseDecorator/findByEmailAndDomain(java.lang.String,java.lang.String)#java/lang/String/toLowerCase()
io/corbel/oauth/repository/decorator/LowerCaseDecorator/findByEmailAndDomain(java.lang.String,java.lang.String)#io/corbel/oauth/repository/decorator/UserRepositoryDecorator/findByEmailAndDomain(java.lang.String,java.lang.String)
io/corbel/oauth/repository/decorator/LowerCaseDecorator/findByUsernameAndDomain(java.lang.String,java.lang.String)#java/lang/String/toLowerCase()
io/corbel/oauth/repository/decorator/LowerCaseDecorator/findByUsernameAndDomain(java.lang.String,java.lang.String)#io/corbel/oauth/repository/decorator/UserRepositoryDecorator/findByUsernameAndDomain(java.lang.String,java.lang.String)
io/corbel/oauth/repository/decorator/LowerCaseDecorator/save(io.corbel.oauth.model.User)#io/corbel/oauth/repository/decorator/UserRepositoryDecorator/save(io.corbel.oauth.model.User)
io/corbel/oauth/repository/decorator/LowerCaseDecorator/save(io.corbel.oauth.model.User)#io/corbel/oauth/repository/decorator/LowerCaseDecorator/userToLowerCase(io.corbel.oauth.model.User)
io/corbel/oauth/repository/decorator/LowerCaseDecorator/userToLowerCase(io.corbel.oauth.model.User)#io/corbel/oauth/model/User/getUsername()
io/corbel/oauth/repository/decorator/LowerCaseDecorator/userToLowerCase(io.corbel.oauth.model.User)#io/corbel/oauth/model/User/getEmail()
io/corbel/oauth/repository/decorator/LowerCaseDecorator/userToLowerCase(io.corbel.oauth.model.User)#java/lang/String/toLowerCase()
io/corbel/oauth/repository/decorator/LowerCaseDecorator/userToLowerCase(io.corbel.oauth.model.User)#io/corbel/oauth/model/User/setUsername(java.lang.String)
io/corbel/oauth/repository/decorator/LowerCaseDecorator/userToLowerCase(io.corbel.oauth.model.User)#io/corbel/oauth/model/User/setEmail(java.lang.String)
io/corbel/oauth/repository/decorator/LowerCaseDecorator/findAll(java.lang.Iterable)#java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)
io/corbel/oauth/repository/decorator/LowerCaseDecorator/patch(java.lang.String,io.corbel.oauth.model.User,java.lang.String[])#io/corbel/oauth/repository/decorator/LowerCaseDecorator/userToLowerCase(io.corbel.oauth.model.User)
io/corbel/oauth/repository/decorator/LowerCaseDecorator/patch(java.lang.String,io.corbel.oauth.model.User,java.lang.String[])#io/corbel/oauth/repository/decorator/UserRepositoryDecorator/patch(java.lang.String,io.corbel.oauth.model.User,java.lang.String[])
io/corbel/oauth/repository/decorator/LowerCaseDecorator/findByEmail(java.lang.String)#java/lang/String/toLowerCase()
io/corbel/oauth/repository/decorator/LowerCaseDecorator/findByEmail(java.lang.String)#io/corbel/oauth/repository/decorator/UserRepositoryDecorator/findByEmail(java.lang.String)
io/corbel/oauth/repository/decorator/LowerCaseDecorator/findOne(java.lang.String)#java/lang/String/toLowerCase()
io/corbel/oauth/repository/decorator/LowerCaseDecorator/findOne(java.lang.String)#io/corbel/oauth/repository/decorator/UserRepositoryDecorator/findOne(java.lang.String)
io/corbel/oauth/repository/decorator/LowerCaseDecorator/delete(io.corbel.oauth.model.User)#io/corbel/oauth/repository/decorator/UserRepositoryDecorator/delete(io.corbel.oauth.model.User)
io/corbel/oauth/repository/decorator/LowerCaseDecorator/delete(io.corbel.oauth.model.User)#io/corbel/oauth/repository/decorator/LowerCaseDecorator/userToLowerCase(io.corbel.oauth.model.User)
io/corbel/oauth/repository/decorator/LowerCaseDecorator/findByUsername(java.lang.String)#io/corbel/oauth/repository/decorator/UserRepositoryDecorator/findByUsername(java.lang.String)
io/corbel/oauth/repository/decorator/LowerCaseDecorator/findByUsername(java.lang.String)#java/lang/String/toLowerCase()
io/corbel/oauth/repository/decorator/LowerCaseDecorator/delete(java.lang.String)#java/lang/String/toLowerCase()
io/corbel/oauth/repository/decorator/LowerCaseDecorator/delete(java.lang.String)#io/corbel/oauth/repository/decorator/UserRepositoryDecorator/delete(java.lang.String)
io/corbel/oauth/repository/decorator/LowerCaseDecorator/findById(java.lang.String)#io/corbel/oauth/repository/decorator/UserRepositoryDecorator/findById(java.lang.String)
io/corbel/oauth/repository/decorator/LowerCaseDecorator/exists(java.lang.String)#java/lang/String/toLowerCase()
io/corbel/oauth/repository/decorator/LowerCaseDecorator/exists(java.lang.String)#io/corbel/oauth/repository/decorator/UserRepositoryDecorator/exists(java.lang.String)
io/corbel/oauth/repository/decorator/LowerCaseDecorator/save(java.lang.Iterable)#java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)
io/corbel/resources/rem/service/TextSearchResmiService/findRelationDistinct(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,java.util.List,boolean)#java/util/Optional/flatMap(java.util.function.Function)
io/corbel/resources/rem/service/TextSearchResmiService/findRelationDistinct(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,java.util.List,boolean)#io/corbel/resources/rem/dao/MongoResmiDao/findRelationWithGroup(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,java.util.Optional,java.util.Optional,java.util.Optional,java.util.List,boolean)
io/corbel/resources/rem/service/TextSearchResmiService/findRelationDistinct(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,java.util.List,boolean)#java/util/Optional/map(java.util.function.Function)
io/corbel/resources/rem/service/TextSearchResmiService/findCollection(io.corbel.resources.rem.model.ResourceUri,java.util.Optional)#java/util/Optional/flatMap(java.util.function.Function)
io/corbel/resources/rem/service/TextSearchResmiService/findCollection(io.corbel.resources.rem.model.ResourceUri,java.util.Optional)#java/util/Optional/map(java.util.function.Function)
io/corbel/resources/rem/service/TextSearchResmiService/findCollection(io.corbel.resources.rem.model.ResourceUri,java.util.Optional)#io/corbel/resources/rem/dao/MongoResmiDao/findCollection(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,java.util.Optional,java.util.Optional,java.util.Optional)
io/corbel/resources/rem/service/TextSearchResmiService/findCollectionDistinct(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,java.util.List,boolean)#java/util/Optional/flatMap(java.util.function.Function)
io/corbel/resources/rem/service/TextSearchResmiService/findCollectionDistinct(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,java.util.List,boolean)#io/corbel/resources/rem/dao/MongoResmiDao/findCollectionWithGroup(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,java.util.Optional,java.util.Optional,java.util.Optional,java.util.List,boolean)
io/corbel/resources/rem/service/TextSearchResmiService/findCollectionDistinct(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,java.util.List,boolean)#java/util/Optional/map(java.util.function.Function)
io/corbel/resources/rem/service/TextSearchResmiService/findRelation(io.corbel.resources.rem.model.ResourceUri,java.util.Optional)#java/util/Optional/flatMap(java.util.function.Function)
io/corbel/resources/rem/service/TextSearchResmiService/findRelation(io.corbel.resources.rem.model.ResourceUri,java.util.Optional)#java/util/Optional/map(java.util.function.Function)
io/corbel/resources/rem/service/TextSearchResmiService/findRelation(io.corbel.resources.rem.model.ResourceUri,java.util.Optional)#io/corbel/resources/rem/dao/MongoResmiDao/findRelation(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,java.util.Optional,java.util.Optional,java.util.Optional)
io/corbel/oauth/OauthConsoleRunner/createShell()#org/springframework/context/annotation/AnnotationConfigApplicationContext/AnnotationConfigApplicationContext(java.lang.Class<?>[])
io/corbel/oauth/OauthConsoleRunner/createShell()#org/springframework/context/support/AbstractApplicationContext/getBean(java.lang.Class)
io/corbel/oauth/OauthConsoleRunner/createShell()#java/lang/System/setProperty(java.lang.String,java.lang.String)
io/corbel/oauth/OauthConsoleRunner/main(java.lang.String[])#io/corbel/lib/ws/log/LogbackUtils/setLogLevel(java.lang.String)
io/corbel/oauth/OauthConsoleRunner/main(java.lang.String[])#java/lang/Throwable/getMessage()
io/corbel/oauth/OauthConsoleRunner/main(java.lang.String[])#java/lang/System/exit(int)
io/corbel/oauth/OauthConsoleRunner/main(java.lang.String[])#org/slf4j/Logger/error(java.lang.String)
io/corbel/oauth/OauthConsoleRunner/main(java.lang.String[])#io/corbel/oauth/OauthConsoleRunner/OauthConsoleRunner()
io/corbel/oauth/OauthConsoleRunner/main(java.lang.String[])#io/corbel/lib/cli/console/Console/launch()
io/corbel/oauth/OauthConsoleRunner/main(java.lang.String[])#io/corbel/lib/cli/console/Console/runScripts(java.lang.String[])
io/corbel/oauth/api/TokenResourceTest/testBadClientSecret()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/oauth/api/TokenResourceTest/testBadClientSecret()#org/mockito/Mockito/when(T)
io/corbel/oauth/api/TokenResourceTest/testBadClientSecret()#javax/ws/rs/core/Response/getStatus()
io/corbel/oauth/api/TokenResourceTest/testBadClientSecret()#javax/ws/rs/core/MultivaluedMap/add(K,V)
io/corbel/oauth/api/TokenResourceTest/testBadClientSecret()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/oauth/api/TokenResourceTest/testBadClientSecret()#io/corbel/oauth/token/TokenExpireTime/getTokenExpireTimeFromResponseType(io.corbel.lib.token.model.TokenType)
io/corbel/oauth/api/TokenResourceTest/testBadClientSecret()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/oauth/api/TokenResourceTest/testBadClientSecret()#io/corbel/lib/token/factory/TokenFactory/createToken(io.corbel.lib.token.TokenInfo,long,java.lang.String[])
io/corbel/oauth/api/TokenResourceTest/testBadClientSecret()#io/corbel/oauth/api/TokenResourceTest/invokeResource(javax.ws.rs.core.MultivaluedMap)
io/corbel/oauth/api/TokenResourceTest/testBadClientSecret()#javax/ws/rs/core/MultivaluedHashMap/MultivaluedHashMap()
io/corbel/oauth/api/TokenResourceTest/testNotValidatedEmailToken()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/oauth/api/TokenResourceTest/testNotValidatedEmailToken()#io/corbel/oauth/model/User/setEmailValidated(java.lang.Boolean)
io/corbel/oauth/api/TokenResourceTest/testNotValidatedEmailToken()#org/mockito/Mockito/when(T)
io/corbel/oauth/api/TokenResourceTest/testNotValidatedEmailToken()#org/springframework/data/repository/CrudRepository/findOne(ID)
io/corbel/oauth/api/TokenResourceTest/testNotValidatedEmailToken()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/oauth/api/TokenResourceTest/testNotValidatedEmailToken()#io/corbel/oauth/model/User/User()
io/corbel/oauth/api/TokenResourceTest/testNotValidatedEmailToken()#javax/ws/rs/core/Response/getStatus()
io/corbel/oauth/api/TokenResourceTest/testNotValidatedEmailToken()#javax/ws/rs/core/MultivaluedMap/add(K,V)
io/corbel/oauth/api/TokenResourceTest/testNotValidatedEmailToken()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/oauth/api/TokenResourceTest/testNotValidatedEmailToken()#io/corbel/oauth/api/TokenResourceTest/invokeResource(javax.ws.rs.core.MultivaluedMap)
io/corbel/oauth/api/TokenResourceTest/testNotValidatedEmailToken()#javax/ws/rs/core/MultivaluedHashMap/MultivaluedHashMap()
io/corbel/oauth/api/TokenResourceTest/testOK()#org/mockito/Mockito/when(T)
io/corbel/oauth/api/TokenResourceTest/testOK()#javax/ws/rs/core/Response/getStatus()
io/corbel/oauth/api/TokenResourceTest/testOK()#javax/ws/rs/core/MultivaluedMap/add(K,V)
io/corbel/oauth/api/TokenResourceTest/testOK()#org/fest/assertions/api/Assertions/assertThat(T)
io/corbel/oauth/api/TokenResourceTest/testOK()#javax/ws/rs/core/Response/readEntity(java.lang.Class)
io/corbel/oauth/api/TokenResourceTest/testOK()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/oauth/api/TokenResourceTest/testOK()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/oauth/api/TokenResourceTest/testOK()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/oauth/api/TokenResourceTest/testOK()#io/corbel/lib/token/reader/TokenReader/getInfo()
io/corbel/oauth/api/TokenResourceTest/testOK()#io/corbel/oauth/token/TokenExpireTime/getTokenExpireTimeFromResponseType(io.corbel.lib.token.model.TokenType)
io/corbel/oauth/api/TokenResourceTest/testOK()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/oauth/api/TokenResourceTest/testOK()#io/corbel/lib/token/factory/TokenFactory/createToken(io.corbel.lib.token.TokenInfo,long,java.lang.String[])
io/corbel/oauth/api/TokenResourceTest/testOK()#io/corbel/oauth/api/TokenResourceTest/invokeResource(javax.ws.rs.core.MultivaluedMap)
io/corbel/oauth/api/TokenResourceTest/testOK()#javax/ws/rs/core/MultivaluedHashMap/MultivaluedHashMap()
io/corbel/oauth/api/TokenResourceTest/testValidatedEmailToken()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/oauth/api/TokenResourceTest/testValidatedEmailToken()#io/corbel/oauth/model/User/setEmailValidated(java.lang.Boolean)
io/corbel/oauth/api/TokenResourceTest/testValidatedEmailToken()#org/mockito/Mockito/when(T)
io/corbel/oauth/api/TokenResourceTest/testValidatedEmailToken()#org/springframework/data/repository/CrudRepository/findOne(ID)
io/corbel/oauth/api/TokenResourceTest/testValidatedEmailToken()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/oauth/api/TokenResourceTest/testValidatedEmailToken()#io/corbel/oauth/model/User/User()
io/corbel/oauth/api/TokenResourceTest/testValidatedEmailToken()#javax/ws/rs/core/Response/getStatus()
io/corbel/oauth/api/TokenResourceTest/testValidatedEmailToken()#javax/ws/rs/core/MultivaluedMap/add(K,V)
io/corbel/oauth/api/TokenResourceTest/testValidatedEmailToken()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/oauth/api/TokenResourceTest/testValidatedEmailToken()#io/corbel/oauth/api/TokenResourceTest/invokeResource(javax.ws.rs.core.MultivaluedMap)
io/corbel/oauth/api/TokenResourceTest/testValidatedEmailToken()#javax/ws/rs/core/MultivaluedHashMap/MultivaluedHashMap()
io/corbel/oauth/api/TokenResourceTest/testMissingGrantType()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/oauth/api/TokenResourceTest/testMissingGrantType()#javax/ws/rs/core/Response/getStatus()
io/corbel/oauth/api/TokenResourceTest/testMissingGrantType()#javax/ws/rs/core/MultivaluedMap/add(K,V)
io/corbel/oauth/api/TokenResourceTest/testMissingGrantType()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/oauth/api/TokenResourceTest/testMissingGrantType()#io/corbel/oauth/api/TokenResourceTest/invokeResource(javax.ws.rs.core.MultivaluedMap)
io/corbel/oauth/api/TokenResourceTest/testMissingGrantType()#javax/ws/rs/core/MultivaluedHashMap/MultivaluedHashMap()
io/corbel/oauth/api/TokenResourceTest/testInvalidCode()#org/mockito/Mockito/when(T)
io/corbel/oauth/api/TokenResourceTest/testInvalidCode()#io/corbel/lib/token/exception/TokenVerificationException/TokenVerificationException(java.lang.String)
io/corbel/oauth/api/TokenResourceTest/testInvalidCode()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/oauth/api/TokenResourceTest/testInvalidCode()#javax/ws/rs/core/Response/getStatus()
io/corbel/oauth/api/TokenResourceTest/testInvalidCode()#javax/ws/rs/core/MultivaluedMap/add(K,V)
io/corbel/oauth/api/TokenResourceTest/testInvalidCode()#io/corbel/lib/token/parser/TokenParser/parseAndVerify(java.lang.String)
io/corbel/oauth/api/TokenResourceTest/testInvalidCode()#org/mockito/stubbing/OngoingStubbing/thenThrow(java.lang.Throwable[])
io/corbel/oauth/api/TokenResourceTest/testInvalidCode()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/oauth/api/TokenResourceTest/testInvalidCode()#io/corbel/oauth/api/TokenResourceTest/invokeResource(javax.ws.rs.core.MultivaluedMap)
io/corbel/oauth/api/TokenResourceTest/testInvalidCode()#javax/ws/rs/core/MultivaluedHashMap/MultivaluedHashMap()
io/corbel/oauth/api/TokenResourceTest/testBadCredentials()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/oauth/api/TokenResourceTest/testBadCredentials()#javax/ws/rs/core/Response/getStatus()
io/corbel/oauth/api/TokenResourceTest/testBadCredentials()#javax/ws/rs/core/MultivaluedMap/add(K,V)
io/corbel/oauth/api/TokenResourceTest/testBadCredentials()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/oauth/api/TokenResourceTest/testBadCredentials()#io/corbel/oauth/api/TokenResourceTest/invokeResource(javax.ws.rs.core.MultivaluedMap)
io/corbel/oauth/api/TokenResourceTest/testBadCredentials()#javax/ws/rs/core/MultivaluedHashMap/MultivaluedHashMap()
io/corbel/oauth/api/TokenResourceTest/testInvalidGrantType()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/oauth/api/TokenResourceTest/testInvalidGrantType()#javax/ws/rs/core/Response/getStatus()
io/corbel/oauth/api/TokenResourceTest/testInvalidGrantType()#javax/ws/rs/core/MultivaluedMap/add(K,V)
io/corbel/oauth/api/TokenResourceTest/testInvalidGrantType()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/oauth/api/TokenResourceTest/testInvalidGrantType()#io/corbel/oauth/api/TokenResourceTest/invokeResource(javax.ws.rs.core.MultivaluedMap)
io/corbel/oauth/api/TokenResourceTest/testInvalidGrantType()#javax/ws/rs/core/MultivaluedHashMap/MultivaluedHashMap()
io/corbel/oauth/api/TokenResourceTest/setUp()#org/mockito/Mockito/when(T)
io/corbel/oauth/api/TokenResourceTest/setUp()#io/corbel/oauth/service/ClientService/findByName(java.lang.String)
io/corbel/oauth/api/TokenResourceTest/setUp()#io/corbel/oauth/service/ClientService/verifyClientSecret(java.lang.String,io.corbel.oauth.model.Client)
io/corbel/oauth/api/TokenResourceTest/setUp()#io/corbel/oauth/model/Client/Client()
io/corbel/oauth/api/TokenResourceTest/setUp()#io/corbel/oauth/model/Client/setKey(java.lang.String)
io/corbel/oauth/api/TokenResourceTest/setUp()#io/corbel/oauth/model/Client/setName(java.lang.String)
io/corbel/oauth/api/TokenResourceTest/setUp()#io/corbel/lib/token/reader/TokenReader/getInfo()
io/corbel/oauth/api/TokenResourceTest/setUp()#io/corbel/lib/token/TokenGrant/TokenGrant(java.lang.String,long)
io/corbel/oauth/api/TokenResourceTest/setUp()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/oauth/api/TokenResourceTest/setUp()#java/util/Optional/of(T)
io/corbel/oauth/api/TokenResourceTest/setUp()#io/corbel/oauth/token/TokenExpireTime/getTokenExpireTimeFromResponseType(io.corbel.lib.token.model.TokenType)
io/corbel/oauth/api/TokenResourceTest/setUp()#io/corbel/oauth/model/Client/setDomain(java.lang.String)
io/corbel/oauth/api/TokenResourceTest/setUp()#java/util/Optional/empty()
io/corbel/oauth/api/TokenResourceTest/setUp()#io/corbel/lib/token/parser/TokenParser/parseAndVerify(java.lang.String)
io/corbel/oauth/api/TokenResourceTest/invokeResource(javax.ws.rs.core.MultivaluedMap)#javax/ws/rs/client/Entity/form(javax.ws.rs.core.MultivaluedMap)
io/corbel/oauth/api/TokenResourceTest/invokeResource(javax.ws.rs.core.MultivaluedMap)#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/oauth/api/TokenResourceTest/invokeResource(javax.ws.rs.core.MultivaluedMap)#javax/ws/rs/client/WebTarget/request()
io/corbel/oauth/api/TokenResourceTest/invokeResource(javax.ws.rs.core.MultivaluedMap)#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/oauth/api/TokenResourceTest/invokeResource(javax.ws.rs.core.MultivaluedMap)#javax/ws/rs/client/SyncInvoker/post(javax.ws.rs.client.Entity,java.lang.Class)
io/corbel/oauth/api/TokenResourceTest/testNotUserAndValidatedEmailToken()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/oauth/api/TokenResourceTest/testNotUserAndValidatedEmailToken()#org/mockito/Mockito/when(T)
io/corbel/oauth/api/TokenResourceTest/testNotUserAndValidatedEmailToken()#org/springframework/data/repository/CrudRepository/findOne(ID)
io/corbel/oauth/api/TokenResourceTest/testNotUserAndValidatedEmailToken()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/oauth/api/TokenResourceTest/testNotUserAndValidatedEmailToken()#javax/ws/rs/core/Response/getStatus()
io/corbel/oauth/api/TokenResourceTest/testNotUserAndValidatedEmailToken()#javax/ws/rs/core/MultivaluedMap/add(K,V)
io/corbel/oauth/api/TokenResourceTest/testNotUserAndValidatedEmailToken()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/oauth/api/TokenResourceTest/testNotUserAndValidatedEmailToken()#io/corbel/oauth/api/TokenResourceTest/invokeResource(javax.ws.rs.core.MultivaluedMap)
io/corbel/oauth/api/TokenResourceTest/testNotUserAndValidatedEmailToken()#javax/ws/rs/core/MultivaluedHashMap/MultivaluedHashMap()
io/corbel/oauth/api/TokenResourceTest/testMissingCode()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/oauth/api/TokenResourceTest/testMissingCode()#javax/ws/rs/core/Response/getStatus()
io/corbel/oauth/api/TokenResourceTest/testMissingCode()#javax/ws/rs/core/MultivaluedMap/add(K,V)
io/corbel/oauth/api/TokenResourceTest/testMissingCode()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/oauth/api/TokenResourceTest/testMissingCode()#io/corbel/oauth/api/TokenResourceTest/invokeResource(javax.ws.rs.core.MultivaluedMap)
io/corbel/oauth/api/TokenResourceTest/testMissingCode()#javax/ws/rs/core/MultivaluedHashMap/MultivaluedHashMap()
io/corbel/resources/rem/restor/AbstractRestorRem/getMediaType(io.corbel.resources.rem.request.RequestParameters)#org/springframework/util/MimeType/toString()
io/corbel/resources/rem/restor/AbstractRestorRem/getMediaType(io.corbel.resources.rem.request.RequestParameters)#io/corbel/resources/rem/request/RequestParameters/getAcceptedMediaTypes()
io/corbel/resources/rem/restor/AbstractRestorRem/getMediaType(io.corbel.resources.rem.request.RequestParameters)#java/util/List/get(int)
io/corbel/resources/rem/utils/JsonUtils/convertToArray(java.util.List)#com/google/gson/JsonArray/add(com.google.gson.JsonElement)
io/corbel/resources/rem/utils/JsonUtils/convertToArray(java.util.List)#com/google/gson/JsonArray/JsonArray()
io/corbel/iam/api/ClientResource/addTrace(io.corbel.iam.model.TraceableEntity)#io/corbel/iam/model/TraceableEntity/setCreatedBy(java.lang.String)
io/corbel/iam/api/ClientResource/addTrace(io.corbel.iam.model.TraceableEntity)#java/net/InetAddress/getLocalHost()
io/corbel/iam/api/ClientResource/addTrace(io.corbel.iam.model.TraceableEntity)#io/corbel/iam/model/TraceableEntity/setCreatedDate(java.util.Date)
io/corbel/iam/api/ClientResource/addTrace(io.corbel.iam.model.TraceableEntity)#java/util/Date/Date()
io/corbel/iam/api/ClientResource/addTrace(io.corbel.iam.model.TraceableEntity)#java/net/InetAddress/getHostName()
io/corbel/iam/api/ClientResource/getClientsByDomain(java.lang.String,io.corbel.lib.queries.jaxrs.QueryParameters)#io/corbel/lib/queries/jaxrs/QueryParameters/getAggregation()
io/corbel/iam/api/ClientResource/getClientsByDomain(java.lang.String,io.corbel.lib.queries.jaxrs.QueryParameters)#java/util/Optional/orElse(T)
io/corbel/iam/api/ClientResource/getClientsByDomain(java.lang.String,io.corbel.lib.queries.jaxrs.QueryParameters)#io/corbel/lib/queries/jaxrs/QueryParameters/getQuery()
io/corbel/iam/api/ClientResource/getClientsByDomain(java.lang.String,io.corbel.lib.queries.jaxrs.QueryParameters)#java/util/Optional/map(java.util.function.Function)
io/corbel/iam/api/ClientResource/getClientsByDomain(java.lang.String,io.corbel.lib.queries.jaxrs.QueryParameters)#java/util/Optional/orElseGet(java.util.function.Supplier)
io/corbel/iam/api/ClientResource/getClient(java.lang.String,java.lang.String)#java/util/Optional/filter(java.util.function.Predicate)
io/corbel/iam/api/ClientResource/getClient(java.lang.String,java.lang.String)#io/corbel/iam/service/ClientService/find(java.lang.String)
io/corbel/iam/api/ClientResource/getClient(java.lang.String,java.lang.String)#java/util/Optional/map(java.util.function.Function)
io/corbel/iam/api/ClientResource/getClient(java.lang.String,java.lang.String)#java/util/Optional/orElseGet(java.util.function.Supplier)
io/corbel/iam/api/ClientResource/deleteClient(java.lang.String,java.lang.String)#javax/ws/rs/core/Response/noContent()
io/corbel/iam/api/ClientResource/deleteClient(java.lang.String,java.lang.String)#javax/ws/rs/core/Response/ResponseBuilder/build()
io/corbel/iam/api/ClientResource/deleteClient(java.lang.String,java.lang.String)#io/corbel/iam/service/ClientService/delete(java.lang.String,java.lang.String)
io/corbel/iam/api/ClientResource/createClient(javax.ws.rs.core.UriInfo,io.corbel.iam.model.Client,java.lang.String)#io/corbel/iam/model/Entity/getId()
io/corbel/iam/api/ClientResource/createClient(javax.ws.rs.core.UriInfo,io.corbel.iam.model.Client,java.lang.String)#io/corbel/iam/service/DomainService/scopesAllowedInDomain(java.util.Set,io.corbel.iam.model.Domain)
io/corbel/iam/api/ClientResource/createClient(javax.ws.rs.core.UriInfo,io.corbel.iam.model.Client,java.lang.String)#io/corbel/iam/model/Client/getScopes()
io/corbel/iam/api/ClientResource/createClient(javax.ws.rs.core.UriInfo,io.corbel.iam.model.Client,java.lang.String)#io/corbel/lib/ws/model/Error/Error(java.lang.String,java.lang.String)
io/corbel/iam/api/ClientResource/createClient(javax.ws.rs.core.UriInfo,io.corbel.iam.model.Client,java.lang.String)#io/corbel/iam/api/IamErrorResponseFactory/scopesNotAllowed(java.lang.String)
io/corbel/iam/api/ClientResource/createClient(javax.ws.rs.core.UriInfo,io.corbel.iam.model.Client,java.lang.String)#javax/ws/rs/core/UriInfo/getAbsolutePathBuilder()
io/corbel/iam/api/ClientResource/createClient(javax.ws.rs.core.UriInfo,io.corbel.iam.model.Client,java.lang.String)#io/corbel/iam/api/IamErrorResponseFactory/domainNotExists(java.lang.String)
io/corbel/iam/api/ClientResource/createClient(javax.ws.rs.core.UriInfo,io.corbel.iam.model.Client,java.lang.String)#io/corbel/iam/model/Client/setDomain(java.lang.String)
io/corbel/iam/api/ClientResource/createClient(javax.ws.rs.core.UriInfo,io.corbel.iam.model.Client,java.lang.String)#io/corbel/lib/ws/api/error/ErrorResponseFactory/conflict(io.corbel.lib.ws.model.Error)
io/corbel/iam/api/ClientResource/createClient(javax.ws.rs.core.UriInfo,io.corbel.iam.model.Client,java.lang.String)#javax/ws/rs/core/UriBuilder/path(java.lang.String)
io/corbel/iam/api/ClientResource/createClient(javax.ws.rs.core.UriInfo,io.corbel.iam.model.Client,java.lang.String)#java/util/Optional/get()
io/corbel/iam/api/ClientResource/createClient(javax.ws.rs.core.UriInfo,io.corbel.iam.model.Client,java.lang.String)#io/corbel/iam/api/ClientResource/addTrace(io.corbel.iam.model.TraceableEntity)
io/corbel/iam/api/ClientResource/createClient(javax.ws.rs.core.UriInfo,io.corbel.iam.model.Client,java.lang.String)#javax/ws/rs/core/Response/created(java.net.URI)
io/corbel/iam/api/ClientResource/createClient(javax.ws.rs.core.UriInfo,io.corbel.iam.model.Client,java.lang.String)#javax/ws/rs/core/Response/ResponseBuilder/build()
io/corbel/iam/api/ClientResource/createClient(javax.ws.rs.core.UriInfo,io.corbel.iam.model.Client,java.lang.String)#javax/ws/rs/core/UriBuilder/build(java.lang.Object[])
io/corbel/iam/api/ClientResource/createClient(javax.ws.rs.core.UriInfo,io.corbel.iam.model.Client,java.lang.String)#io/corbel/iam/service/ClientService/createClient(io.corbel.iam.model.Client)
io/corbel/iam/api/ClientResource/createClient(javax.ws.rs.core.UriInfo,io.corbel.iam.model.Client,java.lang.String)#io/corbel/iam/service/DomainService/getDomain(java.lang.String)
io/corbel/iam/api/ClientResource/createClient(javax.ws.rs.core.UriInfo,io.corbel.iam.model.Client,java.lang.String)#java/util/Optional/isPresent()
io/corbel/iam/api/ClientResource/createClient(javax.ws.rs.core.UriInfo,io.corbel.iam.model.Client,java.lang.String)#io/corbel/iam/api/IamErrorResponseFactory/getInstance()
io/corbel/iam/api/ClientResource/modifyClient(io.corbel.iam.model.Client,java.lang.String,java.lang.String)#io/corbel/iam/api/ClientResource/addTrace(io.corbel.iam.model.TraceableEntity)
io/corbel/iam/api/ClientResource/modifyClient(io.corbel.iam.model.Client,java.lang.String,java.lang.String)#javax/ws/rs/core/Response/noContent()
io/corbel/iam/api/ClientResource/modifyClient(io.corbel.iam.model.Client,java.lang.String,java.lang.String)#javax/ws/rs/core/Response/ResponseBuilder/build()
io/corbel/iam/api/ClientResource/modifyClient(io.corbel.iam.model.Client,java.lang.String,java.lang.String)#io/corbel/iam/model/Entity/setId(java.lang.String)
io/corbel/iam/api/ClientResource/modifyClient(io.corbel.iam.model.Client,java.lang.String,java.lang.String)#io/corbel/iam/service/ClientService/update(io.corbel.iam.model.Client)
io/corbel/iam/api/ClientResource/modifyClient(io.corbel.iam.model.Client,java.lang.String,java.lang.String)#io/corbel/iam/model/Client/setDomain(java.lang.String)
io/corbel/iam/api/UserResource/getDevice(java.lang.String,java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#io/corbel/iam/model/Entity/getId()
io/corbel/iam/api/UserResource/getDevice(java.lang.String,java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#javax/ws/rs/core/Response/ResponseBuilder/build()
io/corbel/iam/api/UserResource/getDevice(java.lang.String,java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#javax/ws/rs/core/Response/ok()
io/corbel/iam/api/UserResource/getDevice(java.lang.String,java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#io/corbel/iam/service/DeviceService/getByUidAndUserId(java.lang.String,java.lang.String,java.lang.String)
io/corbel/iam/api/UserResource/getDevice(java.lang.String,java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#io/corbel/lib/ws/auth/AuthorizationInfo/getUserId()
io/corbel/iam/api/UserResource/getDevice(java.lang.String,java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#javax/ws/rs/core/Response/ResponseBuilder/entity(java.lang.Object)
io/corbel/iam/api/UserResource/getDevice(java.lang.String,java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#io/corbel/iam/model/User/getDomain()
io/corbel/iam/api/UserResource/getDevice(java.lang.String,java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#io/corbel/lib/ws/api/error/ErrorResponseFactory/notFound()
io/corbel/iam/api/UserResource/getDevice(java.lang.String,java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#javax/ws/rs/core/Response/ResponseBuilder/type(java.lang.String)
io/corbel/iam/api/UserResource/getDevice(java.lang.String,java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#io/corbel/iam/model/DeviceResponse/DeviceResponse(io.corbel.iam.model.Device)
io/corbel/iam/api/UserResource/getDevice(java.lang.String,java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#io/corbel/iam/api/IamErrorResponseFactory/getInstance()
io/corbel/iam/api/UserResource/getDevice(java.lang.String,java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#io/corbel/iam/api/UserResource/getUserResolvingMeAndUserDomainVerifying(java.lang.String,java.lang.String,java.lang.String)
io/corbel/iam/api/UserResource/deleteGroupsToUser(java.lang.String,java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#javax/ws/rs/core/Response/noContent()
io/corbel/iam/api/UserResource/deleteGroupsToUser(java.lang.String,java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#javax/ws/rs/core/Response/ResponseBuilder/build()
io/corbel/iam/api/UserResource/deleteGroupsToUser(java.lang.String,java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#io/corbel/iam/model/User/deleteGroup(java.lang.String)
io/corbel/iam/api/UserResource/deleteGroupsToUser(java.lang.String,java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#io/corbel/lib/ws/auth/AuthorizationInfo/getUserId()
io/corbel/iam/api/UserResource/deleteGroupsToUser(java.lang.String,java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#io/corbel/iam/service/UserService/update(io.corbel.iam.model.User)
io/corbel/iam/api/UserResource/deleteGroupsToUser(java.lang.String,java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#io/corbel/lib/ws/api/error/ErrorResponseFactory/notFound()
io/corbel/iam/api/UserResource/deleteGroupsToUser(java.lang.String,java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#io/corbel/iam/api/UserResource/getUserResolvingMeAndUserDomainVerifying(java.lang.String,java.lang.String,java.lang.String)
io/corbel/iam/api/UserResource/deleteGroupsToUser(java.lang.String,java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#io/corbel/iam/service/DomainService/getDomain(java.lang.String)
io/corbel/iam/api/UserResource/deleteGroupsToUser(java.lang.String,java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#java/util/Optional/isPresent()
io/corbel/iam/api/UserResource/deleteGroupsToUser(java.lang.String,java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#io/corbel/iam/api/IamErrorResponseFactory/getInstance()
io/corbel/iam/api/UserResource/deleteUser(java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#javax/ws/rs/core/Response/noContent()
io/corbel/iam/api/UserResource/deleteUser(java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#javax/ws/rs/core/Response/ResponseBuilder/build()
io/corbel/iam/api/UserResource/deleteUser(java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#io/corbel/lib/ws/auth/AuthorizationInfo/getUserId()
io/corbel/iam/api/UserResource/deleteUser(java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#java/util/Optional/ifPresent(java.util.function.Consumer)
io/corbel/iam/api/UserResource/deleteUser(java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#io/corbel/iam/api/UserResource/resolveMeIdAliases(java.lang.String,java.lang.String)
io/corbel/iam/api/UserResource/filterQuery(java.util.Optional,io.corbel.lib.queries.request.ResourceQuery)#io/corbel/lib/queries/builder/ResourceQueryBuilder/add(java.lang.String,java.lang.String)
io/corbel/iam/api/UserResource/filterQuery(java.util.Optional,io.corbel.lib.queries.request.ResourceQuery)#io/corbel/lib/queries/builder/ResourceQueryBuilder/build()
io/corbel/iam/api/UserResource/filterQuery(java.util.Optional,io.corbel.lib.queries.request.ResourceQuery)#io/corbel/lib/queries/builder/ResourceQueryBuilder/ResourceQueryBuilder()
io/corbel/iam/api/UserResource/filterQuery(java.util.Optional,io.corbel.lib.queries.request.ResourceQuery)#io/corbel/lib/queries/request/ResourceQuery/getFilters()
io/corbel/iam/api/UserResource/filterQuery(java.util.Optional,io.corbel.lib.queries.request.ResourceQuery)#java/util/Optional/map(java.util.function.Function)
io/corbel/iam/api/UserResource/filterQuery(java.util.Optional,io.corbel.lib.queries.request.ResourceQuery)#java/util/Set/isEmpty()
io/corbel/iam/api/UserResource/filterQuery(java.util.Optional,io.corbel.lib.queries.request.ResourceQuery)#java/util/Optional/orElseGet(java.util.function.Supplier)
io/corbel/iam/api/UserResource/updateDevice(java.lang.String,java.lang.String,java.lang.String,io.corbel.iam.model.Device,io.corbel.lib.ws.auth.AuthorizationInfo,javax.ws.rs.core.UriInfo)#io/corbel/iam/model/Entity/getId()
io/corbel/iam/api/UserResource/updateDevice(java.lang.String,java.lang.String,java.lang.String,io.corbel.iam.model.Device,io.corbel.lib.ws.auth.AuthorizationInfo,javax.ws.rs.core.UriInfo)#io/corbel/iam/model/Device/setDomain(java.lang.String)
io/corbel/iam/api/UserResource/updateDevice(java.lang.String,java.lang.String,java.lang.String,io.corbel.iam.model.Device,io.corbel.lib.ws.auth.AuthorizationInfo,javax.ws.rs.core.UriInfo)#io/corbel/iam/model/Device/setUserId(java.lang.String)
io/corbel/iam/api/UserResource/updateDevice(java.lang.String,java.lang.String,java.lang.String,io.corbel.iam.model.Device,io.corbel.lib.ws.auth.AuthorizationInfo,javax.ws.rs.core.UriInfo)#io/corbel/iam/model/Device/getUid()
io/corbel/iam/api/UserResource/updateDevice(java.lang.String,java.lang.String,java.lang.String,io.corbel.iam.model.Device,io.corbel.lib.ws.auth.AuthorizationInfo,javax.ws.rs.core.UriInfo)#io/corbel/lib/ws/auth/AuthorizationInfo/getUserId()
io/corbel/iam/api/UserResource/updateDevice(java.lang.String,java.lang.String,java.lang.String,io.corbel.iam.model.Device,io.corbel.lib.ws.auth.AuthorizationInfo,javax.ws.rs.core.UriInfo)#javax/ws/rs/core/UriBuilder/build(java.lang.Object[])
io/corbel/iam/api/UserResource/updateDevice(java.lang.String,java.lang.String,java.lang.String,io.corbel.iam.model.Device,io.corbel.lib.ws.auth.AuthorizationInfo,javax.ws.rs.core.UriInfo)#java/lang/String/equals(java.lang.Object)
io/corbel/iam/api/UserResource/updateDevice(java.lang.String,java.lang.String,java.lang.String,io.corbel.iam.model.Device,io.corbel.lib.ws.auth.AuthorizationInfo,javax.ws.rs.core.UriInfo)#javax/ws/rs/core/UriInfo/getAbsolutePathBuilder()
io/corbel/iam/api/UserResource/updateDevice(java.lang.String,java.lang.String,java.lang.String,io.corbel.iam.model.Device,io.corbel.lib.ws.auth.AuthorizationInfo,javax.ws.rs.core.UriInfo)#io/corbel/iam/service/DeviceService/update(io.corbel.iam.model.Device,boolean)
io/corbel/iam/api/UserResource/updateDevice(java.lang.String,java.lang.String,java.lang.String,io.corbel.iam.model.Device,io.corbel.lib.ws.auth.AuthorizationInfo,javax.ws.rs.core.UriInfo)#io/corbel/iam/api/UserResource/ensureNoId(T)
io/corbel/iam/api/UserResource/updateDevice(java.lang.String,java.lang.String,java.lang.String,io.corbel.iam.model.Device,io.corbel.lib.ws.auth.AuthorizationInfo,javax.ws.rs.core.UriInfo)#io/corbel/lib/ws/auth/AuthorizationInfo/getDeviceId()
io/corbel/iam/api/UserResource/updateDevice(java.lang.String,java.lang.String,java.lang.String,io.corbel.iam.model.Device,io.corbel.lib.ws.auth.AuthorizationInfo,javax.ws.rs.core.UriInfo)#io/corbel/iam/model/Device/setUid(java.lang.String)
io/corbel/iam/api/UserResource/updateDevice(java.lang.String,java.lang.String,java.lang.String,io.corbel.iam.model.Device,io.corbel.lib.ws.auth.AuthorizationInfo,javax.ws.rs.core.UriInfo)#javax/ws/rs/core/Response/created(java.net.URI)
io/corbel/iam/api/UserResource/updateDevice(java.lang.String,java.lang.String,java.lang.String,io.corbel.iam.model.Device,io.corbel.lib.ws.auth.AuthorizationInfo,javax.ws.rs.core.UriInfo)#javax/ws/rs/core/Response/ResponseBuilder/build()
io/corbel/iam/api/UserResource/updateDevice(java.lang.String,java.lang.String,java.lang.String,io.corbel.iam.model.Device,io.corbel.lib.ws.auth.AuthorizationInfo,javax.ws.rs.core.UriInfo)#javax/ws/rs/core/UriBuilder/path(java.lang.String)
io/corbel/iam/api/UserResource/updateDevice(java.lang.String,java.lang.String,java.lang.String,io.corbel.iam.model.Device,io.corbel.lib.ws.auth.AuthorizationInfo,javax.ws.rs.core.UriInfo)#io/corbel/iam/api/UserResource/getUserResolvingMeAndUserDomainVerifying(java.lang.String,java.lang.String,java.lang.String)
io/corbel/iam/api/UserResource/getUserProfile(java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#java/util/Optional/get()
io/corbel/iam/api/UserResource/getUserProfile(java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#io/corbel/iam/model/Domain/getUserProfileFields()
io/corbel/iam/api/UserResource/getUserProfile(java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#java/lang/Throwable/getMessage()
io/corbel/iam/api/UserResource/getUserProfile(java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#java/util/Optional/map(java.util.function.Function)
io/corbel/iam/api/UserResource/getUserProfile(java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#io/corbel/lib/ws/model/Error/Error(java.lang.String,java.lang.String)
io/corbel/iam/api/UserResource/getUserProfile(java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#io/corbel/lib/ws/api/error/ErrorResponseFactory/notFound()
io/corbel/iam/api/UserResource/getUserProfile(java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#io/corbel/lib/ws/api/error/ErrorResponseFactory/serverError(io.corbel.lib.ws.model.Error)
io/corbel/iam/api/UserResource/getUserProfile(java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#io/corbel/iam/api/UserResource/getUserResolvingMeAndUserDomainVerifying(java.lang.String,java.lang.String,java.lang.String)
io/corbel/iam/api/UserResource/getUserProfile(java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#java/util/Optional/orElseGet(java.util.function.Supplier)
io/corbel/iam/api/UserResource/getUserProfile(java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#java/util/Optional/ofNullable(T)
io/corbel/iam/api/UserResource/getUserProfile(java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#io/corbel/lib/ws/auth/AuthorizationInfo/getUserId()
io/corbel/iam/api/UserResource/getUserProfile(java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#io/corbel/iam/service/UserService/getUserProfile(io.corbel.iam.model.User,java.util.Set)
io/corbel/iam/api/UserResource/getUserProfile(java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#io/corbel/iam/service/DomainService/getDomain(java.lang.String)
io/corbel/iam/api/UserResource/getUserProfile(java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#java/util/Optional/isPresent()
io/corbel/iam/api/UserResource/getUserProfile(java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#io/corbel/iam/api/IamErrorResponseFactory/getInstance()
io/corbel/iam/api/UserResource/confirmEmail(java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#io/corbel/lib/token/TokenInfo/getState()
io/corbel/iam/api/UserResource/confirmEmail(java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#javax/ws/rs/core/Response/ResponseBuilder/build()
io/corbel/iam/api/UserResource/confirmEmail(java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#io/corbel/iam/service/UserService/confirmEmail(java.lang.String,java.lang.String)
io/corbel/iam/api/UserResource/confirmEmail(java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#io/corbel/lib/ws/auth/AuthorizationInfo/getTokenReader()
io/corbel/iam/api/UserResource/confirmEmail(java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#io/corbel/lib/ws/api/error/ErrorResponseFactory/badRequest()
io/corbel/iam/api/UserResource/confirmEmail(java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#io/corbel/lib/ws/api/error/ErrorResponseFactory/getInstance()
io/corbel/iam/api/UserResource/confirmEmail(java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#javax/ws/rs/core/Response/noContent()
io/corbel/iam/api/UserResource/confirmEmail(java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#io/corbel/lib/token/reader/TokenReader/getInfo()
io/corbel/iam/api/UserResource/deleteDevice(java.lang.String,java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#io/corbel/iam/model/Entity/getId()
io/corbel/iam/api/UserResource/deleteDevice(java.lang.String,java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#javax/ws/rs/core/Response/ResponseBuilder/build()
io/corbel/iam/api/UserResource/deleteDevice(java.lang.String,java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#io/corbel/iam/service/DeviceService/deleteByUidAndUserId(java.lang.String,java.lang.String,java.lang.String)
io/corbel/iam/api/UserResource/deleteDevice(java.lang.String,java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#io/corbel/lib/ws/auth/AuthorizationInfo/getUserId()
io/corbel/iam/api/UserResource/deleteDevice(java.lang.String,java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#javax/ws/rs/core/Response/status(javax.ws.rs.core.Response.Status)
io/corbel/iam/api/UserResource/deleteDevice(java.lang.String,java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#io/corbel/iam/api/UserResource/getUserResolvingMeAndUserDomainVerifying(java.lang.String,java.lang.String,java.lang.String)
io/corbel/iam/api/UserResource/deleteAllMeSessions(java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#javax/ws/rs/core/Response/ResponseBuilder/build()
io/corbel/iam/api/UserResource/deleteAllMeSessions(java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#io/corbel/lib/ws/auth/AuthorizationInfo/getUserId()
io/corbel/iam/api/UserResource/deleteAllMeSessions(java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#io/corbel/iam/service/UserService/invalidateAllTokens(java.lang.String)
io/corbel/iam/api/UserResource/deleteAllMeSessions(java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#io/corbel/iam/api/UserResource/getUserResolvingMeAndUserDomainVerifying(java.lang.String,java.lang.String,java.lang.String)
io/corbel/iam/api/UserResource/deleteAllMeSessions(java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#io/corbel/iam/model/Entity/getId()
io/corbel/iam/api/UserResource/deleteAllMeSessions(java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#javax/ws/rs/core/Response/noContent()
io/corbel/iam/api/UserResource/getUsersAggregation(java.lang.String,io.corbel.lib.queries.request.ResourceQuery,io.corbel.lib.queries.request.Aggregation)#java/lang/Enum/equals(java.lang.Object)
io/corbel/iam/api/UserResource/getUsersAggregation(java.lang.String,io.corbel.lib.queries.request.ResourceQuery,io.corbel.lib.queries.request.Aggregation)#javax/ws/rs/core/Response/ResponseBuilder/build()
io/corbel/iam/api/UserResource/getUsersAggregation(java.lang.String,io.corbel.lib.queries.request.ResourceQuery,io.corbel.lib.queries.request.Aggregation)#javax/ws/rs/core/Response/ok()
io/corbel/iam/api/UserResource/getUsersAggregation(java.lang.String,io.corbel.lib.queries.request.ResourceQuery,io.corbel.lib.queries.request.Aggregation)#io/corbel/iam/service/UserService/countUsersByDomain(java.lang.String,io.corbel.lib.queries.request.ResourceQuery)
io/corbel/iam/api/UserResource/getUsersAggregation(java.lang.String,io.corbel.lib.queries.request.ResourceQuery,io.corbel.lib.queries.request.Aggregation)#javax/ws/rs/core/Response/ResponseBuilder/entity(java.lang.Object)
io/corbel/iam/api/UserResource/getUsersAggregation(java.lang.String,io.corbel.lib.queries.request.ResourceQuery,io.corbel.lib.queries.request.Aggregation)#io/corbel/lib/ws/model/Error/Error(java.lang.String,java.lang.String)
io/corbel/iam/api/UserResource/getUsersAggregation(java.lang.String,io.corbel.lib.queries.request.ResourceQuery,io.corbel.lib.queries.request.Aggregation)#javax/ws/rs/core/Response/ResponseBuilder/type(java.lang.String)
io/corbel/iam/api/UserResource/getUsersAggregation(java.lang.String,io.corbel.lib.queries.request.ResourceQuery,io.corbel.lib.queries.request.Aggregation)#io/corbel/iam/api/IamErrorResponseFactory/getInstance()
io/corbel/iam/api/UserResource/getUsersAggregation(java.lang.String,io.corbel.lib.queries.request.ResourceQuery,io.corbel.lib.queries.request.Aggregation)#io/corbel/lib/queries/request/AggregationResultsFactory/countResult(long)
io/corbel/iam/api/UserResource/getUsersAggregation(java.lang.String,io.corbel.lib.queries.request.ResourceQuery,io.corbel.lib.queries.request.Aggregation)#io/corbel/lib/ws/api/error/ErrorResponseFactory/badRequest(io.corbel.lib.ws.model.Error)
io/corbel/iam/api/UserResource/getUsersAggregation(java.lang.String,io.corbel.lib.queries.request.ResourceQuery,io.corbel.lib.queries.request.Aggregation)#io/corbel/lib/queries/request/Aggregation/getOperator()
io/corbel/iam/api/UserResource/postUserIdentity(java.lang.String,io.corbel.iam.model.Identity,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#io/corbel/iam/model/Entity/getId()
io/corbel/iam/api/UserResource/postUserIdentity(java.lang.String,io.corbel.iam.model.Identity,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#javax/ws/rs/core/Response/ResponseBuilder/build()
io/corbel/iam/api/UserResource/postUserIdentity(java.lang.String,io.corbel.iam.model.Identity,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#io/corbel/iam/api/UserResource/handleIdentityError(java.lang.Exception,io.corbel.iam.model.Identity)
io/corbel/iam/api/UserResource/postUserIdentity(java.lang.String,io.corbel.iam.model.Identity,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#io/corbel/iam/model/Identity/setDomain(java.lang.String)
io/corbel/iam/api/UserResource/postUserIdentity(java.lang.String,io.corbel.iam.model.Identity,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#io/corbel/iam/api/UserResource/addIdentity(io.corbel.iam.model.Identity)
io/corbel/iam/api/UserResource/postUserIdentity(java.lang.String,io.corbel.iam.model.Identity,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#javax/ws/rs/core/Response/status(javax.ws.rs.core.Response.Status)
io/corbel/iam/api/UserResource/postUserIdentity(java.lang.String,io.corbel.iam.model.Identity,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#io/corbel/iam/api/UserResource/getUserResolvingMeAndUserDomainVerifying(java.lang.String,java.lang.String,java.lang.String)
io/corbel/iam/api/UserResource/postUserIdentity(java.lang.String,io.corbel.iam.model.Identity,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#io/corbel/iam/model/Identity/setUserId(java.lang.String)
io/corbel/iam/api/UserResource/postUserIdentity(java.lang.String,io.corbel.iam.model.Identity,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#io/corbel/lib/ws/auth/AuthorizationInfo/getUserId()
io/corbel/iam/api/UserResource/updateUser(java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo,io.corbel.iam.model.User)#java/util/Optional/get()
io/corbel/iam/api/UserResource/updateUser(java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo,io.corbel.iam.model.User)#io/corbel/iam/model/Entity/getId()
io/corbel/iam/api/UserResource/updateUser(java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo,io.corbel.iam.model.User)#io/corbel/iam/model/User/getScopes()
io/corbel/iam/api/UserResource/updateUser(java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo,io.corbel.iam.model.User)#io/corbel/iam/service/UserService/update(io.corbel.iam.model.User)
io/corbel/iam/api/UserResource/updateUser(java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo,io.corbel.iam.model.User)#io/corbel/iam/api/IamErrorResponseFactory/scopesNotAllowed(java.lang.String)
io/corbel/iam/api/UserResource/updateUser(java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo,io.corbel.iam.model.User)#io/corbel/iam/model/User/setGroups(java.util.Set)
io/corbel/iam/api/UserResource/updateUser(java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo,io.corbel.iam.model.User)#io/corbel/iam/utils/Message/getMessage(java.lang.Object[])
io/corbel/iam/api/UserResource/updateUser(java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo,io.corbel.iam.model.User)#io/corbel/iam/api/UserResource/getUserResolvingMeAndUserDomainVerifying(java.lang.String,java.lang.String,java.lang.String)
io/corbel/iam/api/UserResource/updateUser(java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo,io.corbel.iam.model.User)#javax/ws/rs/core/Response/ResponseBuilder/build()
io/corbel/iam/api/UserResource/updateUser(java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo,io.corbel.iam.model.User)#io/corbel/iam/model/User/getEmail()
io/corbel/iam/api/UserResource/updateUser(java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo,io.corbel.iam.model.User)#io/corbel/lib/ws/api/error/ErrorResponseFactory/invalidEntity(java.lang.String)
io/corbel/iam/api/UserResource/updateUser(java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo,io.corbel.iam.model.User)#io/corbel/iam/model/User/updateUser(io.corbel.iam.model.User)
io/corbel/iam/api/UserResource/updateUser(java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo,io.corbel.iam.model.User)#java/util/Objects/equals(java.lang.Object,java.lang.Object)
io/corbel/iam/api/UserResource/updateUser(java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo,io.corbel.iam.model.User)#io/corbel/iam/service/UserService/sendValidationEmail(io.corbel.iam.model.User,java.lang.String)
io/corbel/iam/api/UserResource/updateUser(java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo,io.corbel.iam.model.User)#io/corbel/iam/model/User/setScopes(java.util.Set)
io/corbel/iam/api/UserResource/updateUser(java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo,io.corbel.iam.model.User)#io/corbel/iam/service/DomainService/scopesAllowedInDomain(java.util.Set,io.corbel.iam.model.Domain)
io/corbel/iam/api/UserResource/updateUser(java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo,io.corbel.iam.model.User)#io/corbel/lib/ws/auth/AuthorizationInfo/getClientId()
io/corbel/iam/api/UserResource/updateUser(java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo,io.corbel.iam.model.User)#io/corbel/lib/ws/auth/AuthorizationInfo/getUserId()
io/corbel/iam/api/UserResource/updateUser(java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo,io.corbel.iam.model.User)#java/lang/String/equals(java.lang.Object)
io/corbel/iam/api/UserResource/updateUser(java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo,io.corbel.iam.model.User)#io/corbel/lib/ws/model/Error/Error(java.lang.String,java.lang.String)
io/corbel/iam/api/UserResource/updateUser(java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo,io.corbel.iam.model.User)#io/corbel/lib/ws/api/error/ErrorResponseFactory/conflict(io.corbel.lib.ws.model.Error)
io/corbel/iam/api/UserResource/updateUser(java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo,io.corbel.iam.model.User)#javax/ws/rs/core/Response/status(javax.ws.rs.core.Response.Status)
io/corbel/iam/api/UserResource/updateUser(java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo,io.corbel.iam.model.User)#io/corbel/iam/service/DomainService/getDomain(java.lang.String)
io/corbel/iam/api/UserResource/updateUser(java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo,io.corbel.iam.model.User)#java/util/Optional/isPresent()
io/corbel/iam/api/UserResource/updateUser(java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo,io.corbel.iam.model.User)#io/corbel/iam/api/IamErrorResponseFactory/getInstance()
io/corbel/iam/api/UserResource/disconnect(java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#javax/ws/rs/core/Response/ResponseBuilder/build()
io/corbel/iam/api/UserResource/disconnect(java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#io/corbel/iam/service/UserService/signOut(java.lang.String)
io/corbel/iam/api/UserResource/disconnect(java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#io/corbel/lib/ws/auth/AuthorizationInfo/getUserId()
io/corbel/iam/api/UserResource/disconnect(java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#io/corbel/iam/api/UserResource/getUserResolvingMeAndUserDomainVerifying(java.lang.String,java.lang.String,java.lang.String)
io/corbel/iam/api/UserResource/disconnect(java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#io/corbel/iam/model/Entity/getId()
io/corbel/iam/api/UserResource/disconnect(java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#javax/ws/rs/core/Response/noContent()
io/corbel/iam/api/UserResource/setTracebleEntity(T,io.corbel.lib.ws.auth.AuthorizationInfo)#io/corbel/iam/model/TraceableEntity/setCreatedBy(java.lang.String)
io/corbel/iam/api/UserResource/setTracebleEntity(T,io.corbel.lib.ws.auth.AuthorizationInfo)#java/time/Clock/instant()
io/corbel/iam/api/UserResource/setTracebleEntity(T,io.corbel.lib.ws.auth.AuthorizationInfo)#io/corbel/iam/model/TraceableEntity/setCreatedDate(java.util.Date)
io/corbel/iam/api/UserResource/setTracebleEntity(T,io.corbel.lib.ws.auth.AuthorizationInfo)#java/util/Date/from(java.time.Instant)
io/corbel/iam/api/UserResource/setTracebleEntity(T,io.corbel.lib.ws.auth.AuthorizationInfo)#io/corbel/lib/ws/auth/AuthorizationInfo/getClientId()
io/corbel/iam/api/UserResource/setTracebleEntity(T,io.corbel.lib.ws.auth.AuthorizationInfo)#io/corbel/lib/ws/auth/AuthorizationInfo/getUserId()
io/corbel/iam/api/UserResource/getUsers(java.lang.String,io.corbel.lib.queries.jaxrs.QueryParameters)#java/util/stream/Stream/map(java.util.function.Function)
io/corbel/iam/api/UserResource/getUsers(java.lang.String,io.corbel.lib.queries.jaxrs.QueryParameters)#java/util/stream/Stream/collect(java.util.stream.Collector)
io/corbel/iam/api/UserResource/getUsers(java.lang.String,io.corbel.lib.queries.jaxrs.QueryParameters)#javax/ws/rs/core/Response/ok()
io/corbel/iam/api/UserResource/getUsers(java.lang.String,io.corbel.lib.queries.jaxrs.QueryParameters)#java/util/Optional/orElse(T)
io/corbel/iam/api/UserResource/getUsers(java.lang.String,io.corbel.lib.queries.jaxrs.QueryParameters)#io/corbel/lib/queries/jaxrs/QueryParameters/getSort()
io/corbel/iam/api/UserResource/getUsers(java.lang.String,io.corbel.lib.queries.jaxrs.QueryParameters)#javax/ws/rs/core/Response/ResponseBuilder/entity(java.lang.Object)
io/corbel/iam/api/UserResource/getUsers(java.lang.String,io.corbel.lib.queries.jaxrs.QueryParameters)#javax/ws/rs/core/Response/ResponseBuilder/type(java.lang.String)
io/corbel/iam/api/UserResource/getUsers(java.lang.String,io.corbel.lib.queries.jaxrs.QueryParameters)#java/util/Optional/isPresent()
io/corbel/iam/api/UserResource/getUsers(java.lang.String,io.corbel.lib.queries.jaxrs.QueryParameters)#io/corbel/iam/api/UserResource/getUsersAggregation(java.lang.String,io.corbel.lib.queries.request.ResourceQuery,io.corbel.lib.queries.request.Aggregation)
io/corbel/iam/api/UserResource/getUsers(java.lang.String,io.corbel.lib.queries.jaxrs.QueryParameters)#javax/ws/rs/core/Response/ResponseBuilder/build()
io/corbel/iam/api/UserResource/getUsers(java.lang.String,io.corbel.lib.queries.jaxrs.QueryParameters)#io/corbel/lib/queries/jaxrs/QueryParameters/getAggregation()
io/corbel/iam/api/UserResource/getUsers(java.lang.String,io.corbel.lib.queries.jaxrs.QueryParameters)#io/corbel/iam/service/UserService/findUsersByDomain(java.lang.String,io.corbel.lib.queries.request.ResourceQuery,io.corbel.lib.queries.request.Pagination,io.corbel.lib.queries.request.Sort)
io/corbel/iam/api/UserResource/getUsers(java.lang.String,io.corbel.lib.queries.jaxrs.QueryParameters)#io/corbel/lib/queries/jaxrs/QueryParameters/getQuery()
io/corbel/iam/api/UserResource/getUsers(java.lang.String,io.corbel.lib.queries.jaxrs.QueryParameters)#io/corbel/lib/queries/jaxrs/QueryParameters/getPagination()
io/corbel/iam/api/UserResource/getUsers(java.lang.String,io.corbel.lib.queries.jaxrs.QueryParameters)#java/util/Collection/stream()
io/corbel/iam/api/UserResource/getUsers(java.lang.String,io.corbel.lib.queries.jaxrs.QueryParameters)#java/util/stream/Collectors/toList()
io/corbel/iam/api/UserResource/generateResetPasswordEmail(java.lang.String,java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#javax/ws/rs/core/Response/noContent()
io/corbel/iam/api/UserResource/generateResetPasswordEmail(java.lang.String,java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#javax/ws/rs/core/Response/ResponseBuilder/build()
io/corbel/iam/api/UserResource/generateResetPasswordEmail(java.lang.String,java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#io/corbel/iam/service/UserService/sendMailResetPassword(java.lang.String,java.lang.String,java.lang.String)
io/corbel/iam/api/UserResource/generateResetPasswordEmail(java.lang.String,java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#io/corbel/lib/ws/auth/AuthorizationInfo/getClientId()
io/corbel/iam/api/UserResource/generateResetPasswordEmail(java.lang.String,java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#io/corbel/iam/service/CaptchaService/verifyRequestCaptcha(java.lang.String,java.lang.String,java.lang.String)
io/corbel/iam/api/UserResource/getUser(java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#javax/ws/rs/core/Response/ResponseBuilder/build()
io/corbel/iam/api/UserResource/getUser(java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#io/corbel/iam/model/User/getUserProfile()
io/corbel/iam/api/UserResource/getUser(java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#javax/ws/rs/core/Response/ok()
io/corbel/iam/api/UserResource/getUser(java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#io/corbel/lib/ws/auth/AuthorizationInfo/getUserId()
io/corbel/iam/api/UserResource/getUser(java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#javax/ws/rs/core/Response/ResponseBuilder/entity(java.lang.Object)
io/corbel/iam/api/UserResource/getUser(java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#javax/ws/rs/core/Response/ResponseBuilder/type(java.lang.String)
io/corbel/iam/api/UserResource/getUser(java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#io/corbel/iam/api/UserResource/getUserResolvingMeAndUserDomainVerifying(java.lang.String,java.lang.String,java.lang.String)
io/corbel/iam/api/UserResource/handleIdentityError(java.lang.Exception,io.corbel.iam.model.Identity)#io/corbel/iam/api/IamErrorResponseFactory/invalidOAuthService(java.lang.String)
io/corbel/iam/api/UserResource/handleIdentityError(java.lang.Exception,io.corbel.iam.model.Identity)#io/corbel/lib/ws/api/error/ErrorResponseFactory/serverError(java.lang.Throwable)
io/corbel/iam/api/UserResource/handleIdentityError(java.lang.Exception,io.corbel.iam.model.Identity)#io/corbel/iam/model/Identity/getUserId()
io/corbel/iam/api/UserResource/handleIdentityError(java.lang.Exception,io.corbel.iam.model.Identity)#java/lang/Throwable/getMessage()
io/corbel/iam/api/UserResource/handleIdentityError(java.lang.Exception,io.corbel.iam.model.Identity)#org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)
io/corbel/iam/api/UserResource/handleIdentityError(java.lang.Exception,io.corbel.iam.model.Identity)#io/corbel/iam/api/IamErrorResponseFactory/oauthServiceDuplicated(io.corbel.iam.utils.Message,java.lang.String[])
io/corbel/iam/api/UserResource/handleIdentityError(java.lang.Exception,io.corbel.iam.model.Identity)#io/corbel/iam/api/IamErrorResponseFactory/identityExists(io.corbel.iam.utils.Message,java.lang.String[])
io/corbel/iam/api/UserResource/handleIdentityError(java.lang.Exception,io.corbel.iam.model.Identity)#io/corbel/iam/api/IamErrorResponseFactory/getInstance()
io/corbel/iam/api/UserResource/handleIdentityError(java.lang.Exception,io.corbel.iam.model.Identity)#io/corbel/iam/api/IamErrorResponseFactory/invalidArgument(java.lang.String)
io/corbel/iam/api/UserResource/handleIdentityError(java.lang.Exception,io.corbel.iam.model.Identity)#io/corbel/iam/model/Identity/getOauthService()
io/corbel/iam/api/UserResource/handleIdentityError(java.lang.Exception,io.corbel.iam.model.Identity)#io/corbel/iam/model/Identity/getDomain()
io/corbel/iam/api/UserResource/handleIdentityError(java.lang.Exception,io.corbel.iam.model.Identity)#io/corbel/iam/model/Identity/getOauthId()
io/corbel/iam/api/UserResource/getUserIdentity(java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#javax/ws/rs/core/Response/ResponseBuilder/build()
io/corbel/iam/api/UserResource/getUserIdentity(java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#javax/ws/rs/core/Response/ok()
io/corbel/iam/api/UserResource/getUserIdentity(java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#io/corbel/lib/ws/auth/AuthorizationInfo/getUserId()
io/corbel/iam/api/UserResource/getUserIdentity(java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#javax/ws/rs/core/Response/ResponseBuilder/entity(java.lang.Object)
io/corbel/iam/api/UserResource/getUserIdentity(java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#javax/ws/rs/core/Response/ResponseBuilder/type(java.lang.String)
io/corbel/iam/api/UserResource/getUserIdentity(java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#io/corbel/iam/service/IdentityService/findUserIdentities(io.corbel.iam.model.User)
io/corbel/iam/api/UserResource/getUserIdentity(java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#io/corbel/iam/api/UserResource/getUserResolvingMeAndUserDomainVerifying(java.lang.String,java.lang.String,java.lang.String)
io/corbel/iam/api/UserResource/getDevices(io.corbel.lib.queries.jaxrs.QueryParameters,java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#java/util/stream/Stream/map(java.util.function.Function)
io/corbel/iam/api/UserResource/getDevices(io.corbel.lib.queries.jaxrs.QueryParameters,java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#io/corbel/iam/model/Entity/getId()
io/corbel/iam/api/UserResource/getDevices(io.corbel.lib.queries.jaxrs.QueryParameters,java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#javax/ws/rs/core/Response/ResponseBuilder/build()
io/corbel/iam/api/UserResource/getDevices(io.corbel.lib.queries.jaxrs.QueryParameters,java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#java/util/stream/Stream/collect(java.util.stream.Collector)
io/corbel/iam/api/UserResource/getDevices(io.corbel.lib.queries.jaxrs.QueryParameters,java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#javax/ws/rs/core/Response/ok()
io/corbel/iam/api/UserResource/getDevices(io.corbel.lib.queries.jaxrs.QueryParameters,java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#java/util/Optional/orElse(T)
io/corbel/iam/api/UserResource/getDevices(io.corbel.lib.queries.jaxrs.QueryParameters,java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#javax/ws/rs/core/Response/ResponseBuilder/entity(java.lang.Object)
io/corbel/iam/api/UserResource/getDevices(io.corbel.lib.queries.jaxrs.QueryParameters,java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#javax/ws/rs/core/Response/ResponseBuilder/type(java.lang.String)
io/corbel/iam/api/UserResource/getDevices(io.corbel.lib.queries.jaxrs.QueryParameters,java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#io/corbel/iam/service/DeviceService/getByUserId(java.lang.String,io.corbel.lib.queries.jaxrs.QueryParameters)
io/corbel/iam/api/UserResource/getDevices(io.corbel.lib.queries.jaxrs.QueryParameters,java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#io/corbel/iam/api/UserResource/getUserResolvingMeAndUserDomainVerifying(java.lang.String,java.lang.String,java.lang.String)
io/corbel/iam/api/UserResource/getDevices(io.corbel.lib.queries.jaxrs.QueryParameters,java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#java/util/Collections/emptyList()
io/corbel/iam/api/UserResource/getDevices(io.corbel.lib.queries.jaxrs.QueryParameters,java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#java/util/Collection/stream()
io/corbel/iam/api/UserResource/getDevices(io.corbel.lib.queries.jaxrs.QueryParameters,java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#java/util/stream/Collectors/toList()
io/corbel/iam/api/UserResource/getDevices(io.corbel.lib.queries.jaxrs.QueryParameters,java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#java/util/Optional/ofNullable(T)
io/corbel/iam/api/UserResource/getDevices(io.corbel.lib.queries.jaxrs.QueryParameters,java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#io/corbel/lib/ws/auth/AuthorizationInfo/getUserId()
io/corbel/iam/api/UserResource/deleteAllSessions(java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#javax/ws/rs/core/Response/ResponseBuilder/build()
io/corbel/iam/api/UserResource/deleteAllSessions(java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#io/corbel/lib/ws/auth/AuthorizationInfo/getUserId()
io/corbel/iam/api/UserResource/deleteAllSessions(java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#io/corbel/iam/service/UserService/invalidateAllTokens(java.lang.String)
io/corbel/iam/api/UserResource/deleteAllSessions(java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#io/corbel/iam/api/UserResource/getUserResolvingMeAndUserDomainVerifying(java.lang.String,java.lang.String,java.lang.String)
io/corbel/iam/api/UserResource/deleteAllSessions(java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#io/corbel/iam/model/Entity/getId()
io/corbel/iam/api/UserResource/deleteAllSessions(java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#javax/ws/rs/core/Response/noContent()
io/corbel/iam/api/UserResource/addIdentity(io.corbel.iam.model.Identity)#io/corbel/iam/model/Identity/getDomain()
io/corbel/iam/api/UserResource/addIdentity(io.corbel.iam.model.Identity)#io/corbel/iam/service/IdentityService/addIdentity(io.corbel.iam.model.Identity)
io/corbel/iam/api/UserResource/addIdentity(io.corbel.iam.model.Identity)#java/util/Optional/map(java.util.function.Function)
io/corbel/iam/api/UserResource/addIdentity(io.corbel.iam.model.Identity)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
io/corbel/iam/api/UserResource/addIdentity(io.corbel.iam.model.Identity)#java/util/Optional/ofNullable(T)
io/corbel/iam/api/UserResource/addIdentity(io.corbel.iam.model.Identity)#java/util/Optional/orElseThrow(java.util.function.Supplier)
io/corbel/iam/api/UserResource/addIdentity(io.corbel.iam.model.Identity)#io/corbel/iam/service/DomainService/getDomain(java.lang.String)
io/corbel/iam/api/UserResource/addIdentity(io.corbel.iam.model.Identity)#java/util/Optional/isPresent()
io/corbel/iam/api/UserResource/ensureNoId(T)#io/corbel/iam/model/Entity/setId(java.lang.String)
io/corbel/iam/api/UserResource/addGroupsToUser(java.lang.String,java.lang.String,java.util.Set,io.corbel.lib.ws.auth.AuthorizationInfo)#javax/ws/rs/core/Response/noContent()
io/corbel/iam/api/UserResource/addGroupsToUser(java.lang.String,java.lang.String,java.util.Set,io.corbel.lib.ws.auth.AuthorizationInfo)#javax/ws/rs/core/Response/ResponseBuilder/build()
io/corbel/iam/api/UserResource/addGroupsToUser(java.lang.String,java.lang.String,java.util.Set,io.corbel.lib.ws.auth.AuthorizationInfo)#io/corbel/lib/ws/auth/AuthorizationInfo/getUserId()
io/corbel/iam/api/UserResource/addGroupsToUser(java.lang.String,java.lang.String,java.util.Set,io.corbel.lib.ws.auth.AuthorizationInfo)#io/corbel/iam/service/UserService/update(io.corbel.iam.model.User)
io/corbel/iam/api/UserResource/addGroupsToUser(java.lang.String,java.lang.String,java.util.Set,io.corbel.lib.ws.auth.AuthorizationInfo)#io/corbel/lib/ws/api/error/ErrorResponseFactory/notFound()
io/corbel/iam/api/UserResource/addGroupsToUser(java.lang.String,java.lang.String,java.util.Set,io.corbel.lib.ws.auth.AuthorizationInfo)#io/corbel/iam/model/User/addGroups(java.util.Set)
io/corbel/iam/api/UserResource/addGroupsToUser(java.lang.String,java.lang.String,java.util.Set,io.corbel.lib.ws.auth.AuthorizationInfo)#io/corbel/iam/api/UserResource/getUserResolvingMeAndUserDomainVerifying(java.lang.String,java.lang.String,java.lang.String)
io/corbel/iam/api/UserResource/addGroupsToUser(java.lang.String,java.lang.String,java.util.Set,io.corbel.lib.ws.auth.AuthorizationInfo)#io/corbel/iam/service/DomainService/getDomain(java.lang.String)
io/corbel/iam/api/UserResource/addGroupsToUser(java.lang.String,java.lang.String,java.util.Set,io.corbel.lib.ws.auth.AuthorizationInfo)#java/util/Optional/isPresent()
io/corbel/iam/api/UserResource/addGroupsToUser(java.lang.String,java.lang.String,java.util.Set,io.corbel.lib.ws.auth.AuthorizationInfo)#io/corbel/iam/api/IamErrorResponseFactory/getInstance()
io/corbel/iam/api/UserResource/signOut(io.corbel.lib.ws.auth.AuthorizationInfo)#java/util/Optional/filter(java.util.function.Predicate)
io/corbel/iam/api/UserResource/signOut(io.corbel.lib.ws.auth.AuthorizationInfo)#java/util/Optional/map(java.util.function.Function)
io/corbel/iam/api/UserResource/signOut(io.corbel.lib.ws.auth.AuthorizationInfo)#io/corbel/iam/service/UserService/findById(java.lang.String)
io/corbel/iam/api/UserResource/signOut(io.corbel.lib.ws.auth.AuthorizationInfo)#java/util/Optional/orElseGet(java.util.function.Supplier)
io/corbel/iam/api/UserResource/signOut(io.corbel.lib.ws.auth.AuthorizationInfo)#java/util/Optional/ofNullable(T)
io/corbel/iam/api/UserResource/signOut(io.corbel.lib.ws.auth.AuthorizationInfo)#io/corbel/lib/ws/auth/AuthorizationInfo/getUserId()
io/corbel/iam/api/UserResource/checkingUserDomain(io.corbel.iam.model.User,java.lang.String)#javax/ws/rs/WebApplicationException/WebApplicationException(javax.ws.rs.core.Response)
io/corbel/iam/api/UserResource/checkingUserDomain(io.corbel.iam.model.User,java.lang.String)#io/corbel/lib/ws/api/error/ErrorResponseFactory/unauthorized(java.lang.String)
io/corbel/iam/api/UserResource/checkingUserDomain(io.corbel.iam.model.User,java.lang.String)#io/corbel/iam/api/UserResource/userDomainMatchAuthorizationDomain(io.corbel.iam.model.User,java.lang.String)
io/corbel/iam/api/UserResource/checkingUserDomain(io.corbel.iam.model.User,java.lang.String)#io/corbel/iam/api/IamErrorResponseFactory/getInstance()
io/corbel/iam/api/UserResource/postUser(java.lang.String,io.corbel.iam.model.UserWithIdentity,javax.ws.rs.core.UriInfo,io.corbel.lib.ws.auth.AuthorizationInfo,java.lang.String)#io/corbel/lib/ws/auth/AuthorizationInfo/getClientId()
io/corbel/iam/api/UserResource/postUser(java.lang.String,io.corbel.iam.model.UserWithIdentity,javax.ws.rs.core.UriInfo,io.corbel.lib.ws.auth.AuthorizationInfo,java.lang.String)#java/util/Optional/map(java.util.function.Function)
io/corbel/iam/api/UserResource/postUser(java.lang.String,io.corbel.iam.model.UserWithIdentity,javax.ws.rs.core.UriInfo,io.corbel.lib.ws.auth.AuthorizationInfo,java.lang.String)#io/corbel/iam/service/CaptchaService/verifyRequestCaptcha(java.lang.String,java.lang.String,java.lang.String)
io/corbel/iam/api/UserResource/postUser(java.lang.String,io.corbel.iam.model.UserWithIdentity,javax.ws.rs.core.UriInfo,io.corbel.lib.ws.auth.AuthorizationInfo,java.lang.String)#io/corbel/lib/ws/api/error/ErrorResponseFactory/unauthorized()
io/corbel/iam/api/UserResource/postUser(java.lang.String,io.corbel.iam.model.UserWithIdentity,javax.ws.rs.core.UriInfo,io.corbel.lib.ws.auth.AuthorizationInfo,java.lang.String)#java/util/Optional/orElseGet(java.util.function.Supplier)
io/corbel/iam/api/UserResource/postUser(java.lang.String,io.corbel.iam.model.UserWithIdentity,javax.ws.rs.core.UriInfo,io.corbel.lib.ws.auth.AuthorizationInfo,java.lang.String)#io/corbel/iam/service/DomainService/getDomain(java.lang.String)
io/corbel/iam/api/UserResource/postUser(java.lang.String,io.corbel.iam.model.UserWithIdentity,javax.ws.rs.core.UriInfo,io.corbel.lib.ws.auth.AuthorizationInfo,java.lang.String)#io/corbel/iam/api/IamErrorResponseFactory/getInstance()
io/corbel/iam/api/UserResource/userDomainMatchAuthorizationDomain(io.corbel.iam.model.User,java.lang.String)#java/util/Objects/equals(java.lang.Object,java.lang.Object)
io/corbel/iam/api/UserResource/userDomainMatchAuthorizationDomain(io.corbel.iam.model.User,java.lang.String)#io/corbel/iam/model/User/getDomain()
io/corbel/iam/api/UserResource/getAvatar(java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#io/corbel/iam/model/User/getProperties()
io/corbel/iam/api/UserResource/getAvatar(java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#javax/ws/rs/core/Response/ResponseBuilder/build()
io/corbel/iam/api/UserResource/getAvatar(java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#java/lang/Object/toString()
io/corbel/iam/api/UserResource/getAvatar(java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#java/net/URI/URI(java.lang.String)
io/corbel/iam/api/UserResource/getAvatar(java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#javax/ws/rs/core/Response/temporaryRedirect(java.net.URI)
io/corbel/iam/api/UserResource/getAvatar(java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#java/util/Map/get(java.lang.Object)
io/corbel/iam/api/UserResource/getAvatar(java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#io/corbel/lib/ws/auth/AuthorizationInfo/getUserId()
io/corbel/iam/api/UserResource/getAvatar(java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#io/corbel/lib/ws/model/Error/Error(java.lang.String,java.lang.String)
io/corbel/iam/api/UserResource/getAvatar(java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#io/corbel/lib/ws/api/error/ErrorResponseFactory/notfound(io.corbel.lib.ws.model.Error)
io/corbel/iam/api/UserResource/getAvatar(java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#io/corbel/iam/api/IamErrorResponseFactory/getInstance()
io/corbel/iam/api/UserResource/getAvatar(java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#io/corbel/iam/api/UserResource/getUserResolvingMeAndUserDomainVerifying(java.lang.String,java.lang.String,java.lang.String)
io/corbel/iam/api/UserResource/generateValidationEmail(java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#javax/ws/rs/core/Response/ResponseBuilder/build()
io/corbel/iam/api/UserResource/generateValidationEmail(java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#io/corbel/iam/service/UserService/sendValidationEmail(io.corbel.iam.model.User,java.lang.String)
io/corbel/iam/api/UserResource/generateValidationEmail(java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#javax/ws/rs/core/Response/ok()
io/corbel/iam/api/UserResource/generateValidationEmail(java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#io/corbel/iam/api/UserResource/getUserResolvingMeAndUserDomainVerifying(java.lang.String,java.lang.String,java.lang.String)
io/corbel/iam/api/UserResource/generateValidationEmail(java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#io/corbel/lib/ws/auth/AuthorizationInfo/getClientId()
io/corbel/iam/api/UserResource/generateValidationEmail(java.lang.String,java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo)#io/corbel/lib/ws/auth/AuthorizationInfo/getUserId()
io/corbel/iam/api/UserResource/getUserProfiles(java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo,io.corbel.lib.queries.jaxrs.QueryParameters)#java/util/Optional/get()
io/corbel/iam/api/UserResource/getUserProfiles(java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo,io.corbel.lib.queries.jaxrs.QueryParameters)#io/corbel/lib/queries/jaxrs/QueryParameters/getAggregation()
io/corbel/iam/api/UserResource/getUserProfiles(java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo,io.corbel.lib.queries.jaxrs.QueryParameters)#io/corbel/lib/queries/jaxrs/QueryParameters/getQuery()
io/corbel/iam/api/UserResource/getUserProfiles(java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo,io.corbel.lib.queries.jaxrs.QueryParameters)#java/util/Optional/map(java.util.function.Function)
io/corbel/iam/api/UserResource/getUserProfiles(java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo,io.corbel.lib.queries.jaxrs.QueryParameters)#io/corbel/lib/queries/request/ResourceQuery/ResourceQuery()
io/corbel/iam/api/UserResource/getUserProfiles(java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo,io.corbel.lib.queries.jaxrs.QueryParameters)#javax/ws/rs/core/Response/ok(java.lang.Object)
io/corbel/iam/api/UserResource/getUserProfiles(java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo,io.corbel.lib.queries.jaxrs.QueryParameters)#javax/ws/rs/core/Response/ResponseBuilder/type(java.lang.String)
io/corbel/iam/api/UserResource/getUserProfiles(java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo,io.corbel.lib.queries.jaxrs.QueryParameters)#java/util/Optional/orElseGet(java.util.function.Supplier)
io/corbel/iam/api/UserResource/getUserProfiles(java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo,io.corbel.lib.queries.jaxrs.QueryParameters)#io/corbel/iam/api/UserResource/getUsersAggregation(java.lang.String,io.corbel.lib.queries.request.ResourceQuery,io.corbel.lib.queries.request.Aggregation)
io/corbel/iam/api/UserResource/getUserProfiles(java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo,io.corbel.lib.queries.jaxrs.QueryParameters)#javax/ws/rs/core/Response/ResponseBuilder/build()
io/corbel/iam/api/UserResource/getUserProfiles(java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo,io.corbel.lib.queries.jaxrs.QueryParameters)#io/corbel/iam/api/UserResource/filterQuery(java.util.Optional,io.corbel.lib.queries.request.ResourceQuery)
io/corbel/iam/api/UserResource/getUserProfiles(java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo,io.corbel.lib.queries.jaxrs.QueryParameters)#java/util/Optional/orElse(T)
io/corbel/iam/api/UserResource/getUserProfiles(java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo,io.corbel.lib.queries.jaxrs.QueryParameters)#io/corbel/iam/service/DomainService/getDomain(java.lang.String)
io/corbel/iam/api/UserResource/getUserProfiles(java.lang.String,io.corbel.lib.ws.auth.AuthorizationInfo,io.corbel.lib.queries.jaxrs.QueryParameters)#java/util/Optional/isPresent()
io/corbel/iam/api/UserResource/resolveMeIdAliases(java.lang.String,java.lang.String)#java/util/Optional/ofNullable(T)
io/corbel/iam/api/UserResource/resolveMeIdAliases(java.lang.String,java.lang.String)#java/lang/String/equals(java.lang.Object)
io/corbel/iam/api/UserResource/resolveMeIdAliases(java.lang.String,java.lang.String)#io/corbel/iam/service/UserService/findById(java.lang.String)
io/corbel/iam/api/UserResource/getUserResolvingMeAndUserDomainVerifying(java.lang.String,java.lang.String,java.lang.String)#java/util/Optional/orElseThrow(java.util.function.Supplier)
io/corbel/iam/api/UserResource/getUserResolvingMeAndUserDomainVerifying(java.lang.String,java.lang.String,java.lang.String)#io/corbel/iam/api/UserResource/checkingUserDomain(io.corbel.iam.model.User,java.lang.String)
io/corbel/iam/api/UserResource/getUserResolvingMeAndUserDomainVerifying(java.lang.String,java.lang.String,java.lang.String)#io/corbel/iam/api/UserResource/resolveMeIdAliases(java.lang.String,java.lang.String)
io/corbel/iam/api/UserResource/getSession(io.corbel.lib.ws.auth.AuthorizationInfo)#io/corbel/lib/ws/auth/AuthorizationInfo/getToken()
io/corbel/iam/api/UserResource/getSession(io.corbel.lib.ws.auth.AuthorizationInfo)#java/util/Optional/ofNullable(T)
io/corbel/iam/api/UserResource/getSession(io.corbel.lib.ws.auth.AuthorizationInfo)#java/util/Optional/map(java.util.function.Function)
io/corbel/iam/api/UserResource/getSession(io.corbel.lib.ws.auth.AuthorizationInfo)#java/util/Optional/orElseGet(java.util.function.Supplier)
io/corbel/iam/auth/rule/RequestDomainAuthorizationRule/isCrossDomain(io.corbel.iam.auth.AuthorizationRequestContext)#io/corbel/iam/model/Entity/getId()
io/corbel/iam/auth/rule/RequestDomainAuthorizationRule/isCrossDomain(io.corbel.iam.auth.AuthorizationRequestContext)#java/util/Objects/equals(java.lang.Object,java.lang.Object)
io/corbel/iam/auth/rule/RequestDomainAuthorizationRule/isCrossDomain(io.corbel.iam.auth.AuthorizationRequestContext)#io/corbel/iam/auth/AuthorizationRequestContext/getRequestedDomain()
io/corbel/iam/auth/rule/RequestDomainAuthorizationRule/isCrossDomain(io.corbel.iam.auth.AuthorizationRequestContext)#io/corbel/iam/auth/AuthorizationRequestContext/getIssuerClientDomain()
io/corbel/iam/auth/rule/RequestDomainAuthorizationRule/isAllowedClientCrossDomain(io.corbel.iam.auth.AuthorizationRequestContext)#java/util/Optional/orElse(T)
io/corbel/iam/auth/rule/RequestDomainAuthorizationRule/isAllowedClientCrossDomain(io.corbel.iam.auth.AuthorizationRequestContext)#java/util/Optional/map(java.util.function.Function)
io/corbel/iam/auth/rule/RequestDomainAuthorizationRule/isAllowedClientCrossDomain(io.corbel.iam.auth.AuthorizationRequestContext)#io/corbel/iam/auth/AuthorizationRequestContext/getIssuerClientDomain()
io/corbel/iam/auth/rule/RequestDomainAuthorizationRule/isAllowedClientCrossDomain(io.corbel.iam.auth.AuthorizationRequestContext)#java/util/Optional/ofNullable(T)
io/corbel/iam/auth/rule/RequestDomainAuthorizationRule/isAllowedClientCrossDomain(io.corbel.iam.auth.AuthorizationRequestContext)#io/corbel/iam/model/Domain/getAllowedDomains()
io/corbel/iam/auth/rule/RequestDomainAuthorizationRule/isAllowedChildCrossDomain(io.corbel.iam.auth.AuthorizationRequestContext)#io/corbel/iam/model/Entity/getId()
io/corbel/iam/auth/rule/RequestDomainAuthorizationRule/isAllowedChildCrossDomain(io.corbel.iam.auth.AuthorizationRequestContext)#io/corbel/iam/auth/AuthorizationRequestContext/getRequestedDomain()
io/corbel/iam/auth/rule/RequestDomainAuthorizationRule/isAllowedChildCrossDomain(io.corbel.iam.auth.AuthorizationRequestContext)#java/lang/String/matches(java.lang.String)
io/corbel/iam/auth/rule/RequestDomainAuthorizationRule/isAllowedChildCrossDomain(io.corbel.iam.auth.AuthorizationRequestContext)#io/corbel/iam/auth/rule/RequestDomainAuthorizationRule/getChildrenDomainRegex(io.corbel.iam.auth.AuthorizationRequestContext)
io/corbel/iam/auth/rule/RequestDomainAuthorizationRule/process(io.corbel.iam.auth.AuthorizationRequestContext)#io/corbel/iam/auth/rule/RequestDomainAuthorizationRule/isCrossDomain(io.corbel.iam.auth.AuthorizationRequestContext)
io/corbel/iam/auth/rule/RequestDomainAuthorizationRule/process(io.corbel.iam.auth.AuthorizationRequestContext)#io/corbel/iam/exception/UnauthorizedException/UnauthorizedException(java.lang.String)
io/corbel/iam/auth/rule/RequestDomainAuthorizationRule/process(io.corbel.iam.auth.AuthorizationRequestContext)#io/corbel/iam/auth/rule/RequestDomainAuthorizationRule/isAllowedClientCrossDomain(io.corbel.iam.auth.AuthorizationRequestContext)
io/corbel/iam/auth/rule/RequestDomainAuthorizationRule/process(io.corbel.iam.auth.AuthorizationRequestContext)#io/corbel/iam/auth/rule/RequestDomainAuthorizationRule/isAllowedChildCrossDomain(io.corbel.iam.auth.AuthorizationRequestContext)
io/corbel/iam/auth/rule/RequestDomainAuthorizationRule/process(io.corbel.iam.auth.AuthorizationRequestContext)#io/corbel/iam/utils/Message/getMessage(java.lang.Object[])
io/corbel/iam/auth/rule/RequestDomainAuthorizationRule/getChildrenDomainRegex(io.corbel.iam.auth.AuthorizationRequestContext)#io/corbel/iam/model/Entity/getId()
io/corbel/iam/auth/rule/RequestDomainAuthorizationRule/getChildrenDomainRegex(io.corbel.iam.auth.AuthorizationRequestContext)#io/corbel/iam/auth/AuthorizationRequestContext/getIssuerClientDomain()
io/corbel/resources/rem/search/ElasticSearchResourceQueryBuilderTest/existsResourceQueryTest()#io/corbel/lib/queries/parser/JacksonQueryParser/parse(java.lang.String)
io/corbel/resources/rem/search/ElasticSearchResourceQueryBuilderTest/existsResourceQueryTest()#com/fasterxml/jackson/databind/JsonNode/toString()
io/corbel/resources/rem/search/ElasticSearchResourceQueryBuilderTest/existsResourceQueryTest()#io/corbel/resources/rem/search/ElasticSearchResourceQueryBuilder/build(java.lang.String,io.corbel.lib.queries.request.ResourceQuery)
io/corbel/resources/rem/search/ElasticSearchResourceQueryBuilderTest/existsResourceQueryTest()#org/junit/Assert/assertEquals(java.lang.Object,java.lang.Object)
io/corbel/resources/rem/search/ElasticSearchResourceQueryBuilderTest/existsResourceQueryTest()#org/elasticsearch/action/support/ToXContentToBytes/toString()
io/corbel/resources/rem/search/ElasticSearchResourceQueryBuilderTest/existsResourceQueryTest()#com/fasterxml/jackson/databind/JsonNode/get(java.lang.String)
io/corbel/resources/rem/search/ElasticSearchResourceQueryBuilderTest/existsResourceQueryTest()#io/corbel/lib/queries/parser/CustomJsonParser/readValueAsTree(java.lang.String)
io/corbel/resources/rem/search/ElasticSearchResourceQueryBuilderTest/rangesResourceQueryTest()#java/util/ArrayList/ArrayList()
io/corbel/resources/rem/search/ElasticSearchResourceQueryBuilderTest/rangesResourceQueryTest()#io/corbel/lib/queries/parser/JacksonQueryParser/parse(java.lang.String)
io/corbel/resources/rem/search/ElasticSearchResourceQueryBuilderTest/rangesResourceQueryTest()#com/fasterxml/jackson/databind/JsonNode/get(int)
io/corbel/resources/rem/search/ElasticSearchResourceQueryBuilderTest/rangesResourceQueryTest()#com/fasterxml/jackson/databind/JsonNode/toString()
io/corbel/resources/rem/search/ElasticSearchResourceQueryBuilderTest/rangesResourceQueryTest()#io/corbel/resources/rem/search/ElasticSearchResourceQueryBuilder/build(java.lang.String,java.util.List)
io/corbel/resources/rem/search/ElasticSearchResourceQueryBuilderTest/rangesResourceQueryTest()#java/util/List/add(E)
io/corbel/resources/rem/search/ElasticSearchResourceQueryBuilderTest/rangesResourceQueryTest()#org/junit/Assert/assertEquals(java.lang.Object,java.lang.Object)
io/corbel/resources/rem/search/ElasticSearchResourceQueryBuilderTest/rangesResourceQueryTest()#org/elasticsearch/action/support/ToXContentToBytes/toString()
io/corbel/resources/rem/search/ElasticSearchResourceQueryBuilderTest/rangesResourceQueryTest()#com/fasterxml/jackson/databind/JsonNode/get(java.lang.String)
io/corbel/resources/rem/search/ElasticSearchResourceQueryBuilderTest/rangesResourceQueryTest()#io/corbel/lib/queries/parser/CustomJsonParser/readValueAsTree(java.lang.String)
io/corbel/resources/rem/search/ElasticSearchResourceQueryBuilderTest/neqResourceQueryTest()#java/util/ArrayList/ArrayList()
io/corbel/resources/rem/search/ElasticSearchResourceQueryBuilderTest/neqResourceQueryTest()#io/corbel/lib/queries/parser/JacksonQueryParser/parse(java.lang.String)
io/corbel/resources/rem/search/ElasticSearchResourceQueryBuilderTest/neqResourceQueryTest()#com/fasterxml/jackson/databind/JsonNode/toString()
io/corbel/resources/rem/search/ElasticSearchResourceQueryBuilderTest/neqResourceQueryTest()#io/corbel/resources/rem/search/ElasticSearchResourceQueryBuilder/build(java.lang.String,java.util.List)
io/corbel/resources/rem/search/ElasticSearchResourceQueryBuilderTest/neqResourceQueryTest()#java/util/List/add(E)
io/corbel/resources/rem/search/ElasticSearchResourceQueryBuilderTest/neqResourceQueryTest()#org/junit/Assert/assertEquals(java.lang.Object,java.lang.Object)
io/corbel/resources/rem/search/ElasticSearchResourceQueryBuilderTest/neqResourceQueryTest()#org/elasticsearch/action/support/ToXContentToBytes/toString()
io/corbel/resources/rem/search/ElasticSearchResourceQueryBuilderTest/neqResourceQueryTest()#com/fasterxml/jackson/databind/JsonNode/get(java.lang.String)
io/corbel/resources/rem/search/ElasticSearchResourceQueryBuilderTest/neqResourceQueryTest()#io/corbel/lib/queries/parser/CustomJsonParser/readValueAsTree(java.lang.String)
io/corbel/resources/rem/search/ElasticSearchResourceQueryBuilderTest/setUp()#com/fasterxml/jackson/databind/ObjectMapper/getFactory()
io/corbel/resources/rem/search/ElasticSearchResourceQueryBuilderTest/setUp()#io/corbel/lib/queries/parser/JacksonQueryParser/JacksonQueryParser(io.corbel.lib.queries.parser.CustomJsonParser)
io/corbel/resources/rem/search/ElasticSearchResourceQueryBuilderTest/setUp()#com/fasterxml/jackson/databind/ObjectMapper/ObjectMapper()
io/corbel/resources/rem/search/ElasticSearchResourceQueryBuilderTest/setUp()#io/corbel/lib/queries/parser/CustomJsonParser/CustomJsonParser(com.fasterxml.jackson.core.JsonFactory)
io/corbel/resources/rem/search/ElasticSearchResourceQueryBuilderTest/eqResourceQueryTest()#io/corbel/lib/queries/parser/JacksonQueryParser/parse(java.lang.String)
io/corbel/resources/rem/search/ElasticSearchResourceQueryBuilderTest/eqResourceQueryTest()#com/fasterxml/jackson/databind/JsonNode/toString()
io/corbel/resources/rem/search/ElasticSearchResourceQueryBuilderTest/eqResourceQueryTest()#io/corbel/resources/rem/search/ElasticSearchResourceQueryBuilder/build(java.lang.String,io.corbel.lib.queries.request.ResourceQuery)
io/corbel/resources/rem/search/ElasticSearchResourceQueryBuilderTest/eqResourceQueryTest()#org/junit/Assert/assertEquals(java.lang.Object,java.lang.Object)
io/corbel/resources/rem/search/ElasticSearchResourceQueryBuilderTest/eqResourceQueryTest()#org/elasticsearch/action/support/ToXContentToBytes/toString()
io/corbel/resources/rem/search/ElasticSearchResourceQueryBuilderTest/eqResourceQueryTest()#com/fasterxml/jackson/databind/JsonNode/get(java.lang.String)
io/corbel/resources/rem/search/ElasticSearchResourceQueryBuilderTest/eqResourceQueryTest()#io/corbel/lib/queries/parser/CustomJsonParser/readValueAsTree(java.lang.String)
io/corbel/resources/rem/search/ElasticSearchResourceQueryBuilderTest/testNullResourceQuery()#io/corbel/lib/queries/parser/CustomJsonParser/readValueAsTree(java.lang.String)
io/corbel/resources/rem/search/ElasticSearchResourceQueryBuilderTest/testNullResourceQuery()#com/fasterxml/jackson/databind/JsonNode/toString()
io/corbel/resources/rem/search/ElasticSearchResourceQueryBuilderTest/testNullResourceQuery()#io/corbel/resources/rem/search/ElasticSearchResourceQueryBuilder/build(java.lang.String,io.corbel.lib.queries.request.ResourceQuery)
io/corbel/resources/rem/search/ElasticSearchResourceQueryBuilderTest/testNullResourceQuery()#org/junit/Assert/assertEquals(java.lang.Object,java.lang.Object)
io/corbel/resources/rem/search/ElasticSearchResourceQueryBuilderTest/testNullResourceQuery()#org/elasticsearch/action/support/ToXContentToBytes/toString()
io/corbel/resources/rem/search/ElasticSearchResourceQueryBuilderTest/ninResourceQueryTest()#io/corbel/lib/queries/parser/JacksonQueryParser/parse(java.lang.String)
io/corbel/resources/rem/search/ElasticSearchResourceQueryBuilderTest/ninResourceQueryTest()#com/fasterxml/jackson/databind/JsonNode/toString()
io/corbel/resources/rem/search/ElasticSearchResourceQueryBuilderTest/ninResourceQueryTest()#io/corbel/resources/rem/search/ElasticSearchResourceQueryBuilder/build(java.lang.String,io.corbel.lib.queries.request.ResourceQuery)
io/corbel/resources/rem/search/ElasticSearchResourceQueryBuilderTest/ninResourceQueryTest()#org/junit/Assert/assertEquals(java.lang.Object,java.lang.Object)
io/corbel/resources/rem/search/ElasticSearchResourceQueryBuilderTest/ninResourceQueryTest()#org/elasticsearch/action/support/ToXContentToBytes/toString()
io/corbel/resources/rem/search/ElasticSearchResourceQueryBuilderTest/ninResourceQueryTest()#com/fasterxml/jackson/databind/JsonNode/get(java.lang.String)
io/corbel/resources/rem/search/ElasticSearchResourceQueryBuilderTest/ninResourceQueryTest()#io/corbel/lib/queries/parser/CustomJsonParser/readValueAsTree(java.lang.String)
io/corbel/resources/rem/search/ElasticSearchResourceQueryBuilderTest/testEmptyResourceQuery()#io/corbel/lib/queries/parser/JacksonQueryParser/parse(java.lang.String)
io/corbel/resources/rem/search/ElasticSearchResourceQueryBuilderTest/testEmptyResourceQuery()#com/fasterxml/jackson/databind/JsonNode/toString()
io/corbel/resources/rem/search/ElasticSearchResourceQueryBuilderTest/testEmptyResourceQuery()#io/corbel/resources/rem/search/ElasticSearchResourceQueryBuilder/build(java.lang.String,io.corbel.lib.queries.request.ResourceQuery)
io/corbel/resources/rem/search/ElasticSearchResourceQueryBuilderTest/testEmptyResourceQuery()#org/junit/Assert/assertEquals(java.lang.Object,java.lang.Object)
io/corbel/resources/rem/search/ElasticSearchResourceQueryBuilderTest/testEmptyResourceQuery()#org/elasticsearch/action/support/ToXContentToBytes/toString()
io/corbel/resources/rem/search/ElasticSearchResourceQueryBuilderTest/testEmptyResourceQuery()#com/fasterxml/jackson/databind/JsonNode/get(java.lang.String)
io/corbel/resources/rem/search/ElasticSearchResourceQueryBuilderTest/testEmptyResourceQuery()#io/corbel/lib/queries/parser/CustomJsonParser/readValueAsTree(java.lang.String)
io/corbel/resources/rem/search/ElasticSearchResourceQueryBuilderTest/inResourceQueryTest()#io/corbel/lib/queries/parser/JacksonQueryParser/parse(java.lang.String)
io/corbel/resources/rem/search/ElasticSearchResourceQueryBuilderTest/inResourceQueryTest()#com/fasterxml/jackson/databind/JsonNode/toString()
io/corbel/resources/rem/search/ElasticSearchResourceQueryBuilderTest/inResourceQueryTest()#io/corbel/resources/rem/search/ElasticSearchResourceQueryBuilder/build(java.lang.String,io.corbel.lib.queries.request.ResourceQuery)
io/corbel/resources/rem/search/ElasticSearchResourceQueryBuilderTest/inResourceQueryTest()#org/junit/Assert/assertEquals(java.lang.Object,java.lang.Object)
io/corbel/resources/rem/search/ElasticSearchResourceQueryBuilderTest/inResourceQueryTest()#org/elasticsearch/action/support/ToXContentToBytes/toString()
io/corbel/resources/rem/search/ElasticSearchResourceQueryBuilderTest/inResourceQueryTest()#com/fasterxml/jackson/databind/JsonNode/get(java.lang.String)
io/corbel/resources/rem/search/ElasticSearchResourceQueryBuilderTest/inResourceQueryTest()#io/corbel/lib/queries/parser/CustomJsonParser/readValueAsTree(java.lang.String)
io/corbel/resources/rem/search/ElasticSearchResourceQueryBuilderTest/notexistsResourceQueryTest()#io/corbel/lib/queries/parser/JacksonQueryParser/parse(java.lang.String)
io/corbel/resources/rem/search/ElasticSearchResourceQueryBuilderTest/notexistsResourceQueryTest()#com/fasterxml/jackson/databind/JsonNode/toString()
io/corbel/resources/rem/search/ElasticSearchResourceQueryBuilderTest/notexistsResourceQueryTest()#io/corbel/resources/rem/search/ElasticSearchResourceQueryBuilder/build(java.lang.String,io.corbel.lib.queries.request.ResourceQuery)
io/corbel/resources/rem/search/ElasticSearchResourceQueryBuilderTest/notexistsResourceQueryTest()#org/junit/Assert/assertEquals(java.lang.Object,java.lang.Object)
io/corbel/resources/rem/search/ElasticSearchResourceQueryBuilderTest/notexistsResourceQueryTest()#org/elasticsearch/action/support/ToXContentToBytes/toString()
io/corbel/resources/rem/search/ElasticSearchResourceQueryBuilderTest/notexistsResourceQueryTest()#com/fasterxml/jackson/databind/JsonNode/get(java.lang.String)
io/corbel/resources/rem/search/ElasticSearchResourceQueryBuilderTest/notexistsResourceQueryTest()#io/corbel/lib/queries/parser/CustomJsonParser/readValueAsTree(java.lang.String)
io/corbel/resources/rem/request/ResourceId/isWildcard()#java/lang/String/equals(java.lang.Object)
io/corbel/resources/rem/request/ResourceId/equals(java.lang.Object)#java/lang/String/equals(java.lang.Object)
io/corbel/resources/rem/request/ResourceId/hashCode()#java/lang/String/hashCode()
io/corbel/iam/auth/provider/FacebookProvider/setConfiguration(java.util.Map)#java/util/Map/get(java.lang.Object)
io/corbel/iam/auth/provider/FacebookProvider/setConfiguration(java.util.Map)#io/corbel/iam/auth/provider/AbstractOAuth2Provider/setConfiguration(java.util.Map)
io/corbel/iam/auth/provider/FacebookProvider/setConfiguration(java.util.Map)#org/springframework/social/facebook/connect/FacebookConnectionFactory/FacebookConnectionFactory(java.lang.String,java.lang.String)
io/corbel/iam/auth/provider/FacebookProvider/getIdentity(io.corbel.iam.auth.OauthParams,java.lang.String,java.lang.String)#org/springframework/core/NestedRuntimeException/getMessage()
io/corbel/iam/auth/provider/FacebookProvider/getIdentity(io.corbel.iam.auth.OauthParams,java.lang.String,java.lang.String)#io/corbel/iam/exception/UnauthorizedException/UnauthorizedException(java.lang.String)
io/corbel/iam/auth/provider/FacebookProvider/getIdentity(io.corbel.iam.auth.OauthParams,java.lang.String,java.lang.String)#org/springframework/social/facebook/api/User/getId()
io/corbel/iam/auth/provider/FacebookProvider/getIdentity(io.corbel.iam.auth.OauthParams,java.lang.String,java.lang.String)#java/lang/Throwable/getMessage()
io/corbel/iam/auth/provider/FacebookProvider/getIdentity(io.corbel.iam.auth.OauthParams,java.lang.String,java.lang.String)#org/springframework/social/connect/Connection/getApi()
io/corbel/iam/auth/provider/FacebookProvider/getIdentity(io.corbel.iam.auth.OauthParams,java.lang.String,java.lang.String)#io/corbel/iam/exception/OauthServerConnectionException/OauthServerConnectionException(java.lang.String,java.lang.String)
io/corbel/iam/auth/provider/FacebookProvider/getIdentity(io.corbel.iam.auth.OauthParams,java.lang.String,java.lang.String)#io/corbel/iam/repository/IdentityRepository/findByOauthIdAndDomainAndOauthService(java.lang.String,java.lang.String,java.lang.String)
io/corbel/iam/auth/provider/FacebookProvider/getIdentity(io.corbel.iam.auth.OauthParams,java.lang.String,java.lang.String)#org/springframework/social/connect/support/OAuth2ConnectionFactory/createConnection(org.springframework.social.oauth2.AccessGrant)
io/corbel/iam/auth/provider/FacebookProvider/getIdentity(io.corbel.iam.auth.OauthParams,java.lang.String,java.lang.String)#org/slf4j/Logger/error(java.lang.String)
io/corbel/iam/auth/provider/FacebookProvider/getIdentity(io.corbel.iam.auth.OauthParams,java.lang.String,java.lang.String)#org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)
io/corbel/iam/auth/provider/FacebookProvider/getIdentity(io.corbel.iam.auth.OauthParams,java.lang.String,java.lang.String)#org/springframework/social/facebook/api/UserOperations/getUserProfile()
io/corbel/iam/auth/provider/FacebookProvider/getIdentity(io.corbel.iam.auth.OauthParams,java.lang.String,java.lang.String)#org/springframework/social/facebook/api/Facebook/userOperations()
io/corbel/iam/auth/provider/FacebookProvider/getIdentity(io.corbel.iam.auth.OauthParams,java.lang.String,java.lang.String)#org/springframework/social/connect/Connection/hasExpired()
io/corbel/iam/auth/provider/FacebookProvider/getIdentity(io.corbel.iam.auth.OauthParams,java.lang.String,java.lang.String)#io/corbel/iam/auth/provider/AbstractOAuth2Provider/getAccessGrant(io.corbel.iam.auth.OauthParams)
io/corbel/resources/service/DefaultResourcesService/collectionOperation(java.lang.String,java.lang.String,javax.ws.rs.core.Request,javax.ws.rs.core.UriInfo,io.corbel.lib.token.TokenInfo,java.net.URI,org.springframework.http.HttpMethod,io.corbel.lib.queries.jaxrs.QueryParameters,java.io.InputStream,javax.ws.rs.core.MediaType)#io/corbel/resources/service/DefaultResourcesService/getRequestAcceptedMediaTypes(javax.ws.rs.core.Request)
io/corbel/resources/service/DefaultResourcesService/collectionOperation(java.lang.String,java.lang.String,javax.ws.rs.core.Request,javax.ws.rs.core.UriInfo,io.corbel.lib.token.TokenInfo,java.net.URI,org.springframework.http.HttpMethod,io.corbel.lib.queries.jaxrs.QueryParameters,java.io.InputStream,javax.ws.rs.core.MediaType)#java/lang/Enum/equals(java.lang.Object)
io/corbel/resources/service/DefaultResourcesService/collectionOperation(java.lang.String,java.lang.String,javax.ws.rs.core.Request,javax.ws.rs.core.UriInfo,io.corbel.lib.token.TokenInfo,java.net.URI,org.springframework.http.HttpMethod,io.corbel.lib.queries.jaxrs.QueryParameters,java.io.InputStream,javax.ws.rs.core.MediaType)#io/corbel/lib/token/TokenInfo/getDomainId()
io/corbel/resources/service/DefaultResourcesService/collectionOperation(java.lang.String,java.lang.String,javax.ws.rs.core.Request,javax.ws.rs.core.UriInfo,io.corbel.lib.token.TokenInfo,java.net.URI,org.springframework.http.HttpMethod,io.corbel.lib.queries.jaxrs.QueryParameters,java.io.InputStream,javax.ws.rs.core.MediaType)#io/corbel/eventbus/service/EventBus/dispatch(io.corbel.eventbus.Event)
io/corbel/resources/service/DefaultResourcesService/collectionOperation(java.lang.String,java.lang.String,javax.ws.rs.core.Request,javax.ws.rs.core.UriInfo,io.corbel.lib.token.TokenInfo,java.net.URI,org.springframework.http.HttpMethod,io.corbel.lib.queries.jaxrs.QueryParameters,java.io.InputStream,javax.ws.rs.core.MediaType)#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/service/DefaultResourcesService/collectionOperation(java.lang.String,java.lang.String,javax.ws.rs.core.Request,javax.ws.rs.core.UriInfo,io.corbel.lib.token.TokenInfo,java.net.URI,org.springframework.http.HttpMethod,io.corbel.lib.queries.jaxrs.QueryParameters,java.io.InputStream,javax.ws.rs.core.MediaType)#org/slf4j/Logger/error(java.lang.String,java.lang.Object,java.lang.Object)
io/corbel/resources/service/DefaultResourcesService/collectionOperation(java.lang.String,java.lang.String,javax.ws.rs.core.Request,javax.ws.rs.core.UriInfo,io.corbel.lib.token.TokenInfo,java.net.URI,org.springframework.http.HttpMethod,io.corbel.lib.queries.jaxrs.QueryParameters,java.io.InputStream,javax.ws.rs.core.MediaType)#java/util/Optional/empty()
io/corbel/resources/service/DefaultResourcesService/collectionOperation(java.lang.String,java.lang.String,javax.ws.rs.core.Request,javax.ws.rs.core.UriInfo,io.corbel.lib.token.TokenInfo,java.net.URI,org.springframework.http.HttpMethod,io.corbel.lib.queries.jaxrs.QueryParameters,java.io.InputStream,javax.ws.rs.core.MediaType)#io/corbel/lib/ws/api/error/ErrorResponseFactory/getInstance()
io/corbel/resources/service/DefaultResourcesService/collectionOperation(java.lang.String,java.lang.String,javax.ws.rs.core.Request,javax.ws.rs.core.UriInfo,io.corbel.lib.token.TokenInfo,java.net.URI,org.springframework.http.HttpMethod,io.corbel.lib.queries.jaxrs.QueryParameters,java.io.InputStream,javax.ws.rs.core.MediaType)#io/corbel/resources/service/DefaultResourcesService/getDefaultQueryParameters()
io/corbel/resources/service/DefaultResourcesService/collectionOperation(java.lang.String,java.lang.String,javax.ws.rs.core.Request,javax.ws.rs.core.UriInfo,io.corbel.lib.token.TokenInfo,java.net.URI,org.springframework.http.HttpMethod,io.corbel.lib.queries.jaxrs.QueryParameters,java.io.InputStream,javax.ws.rs.core.MediaType)#java/lang/Object/toString()
io/corbel/resources/service/DefaultResourcesService/collectionOperation(java.lang.String,java.lang.String,javax.ws.rs.core.Request,javax.ws.rs.core.UriInfo,io.corbel.lib.token.TokenInfo,java.net.URI,org.springframework.http.HttpMethod,io.corbel.lib.queries.jaxrs.QueryParameters,java.io.InputStream,javax.ws.rs.core.MediaType)#javax/ws/rs/core/MultivaluedMap/getFirst(K)
io/corbel/resources/service/DefaultResourcesService/collectionOperation(java.lang.String,java.lang.String,javax.ws.rs.core.Request,javax.ws.rs.core.UriInfo,io.corbel.lib.token.TokenInfo,java.net.URI,org.springframework.http.HttpMethod,io.corbel.lib.queries.jaxrs.QueryParameters,java.io.InputStream,javax.ws.rs.core.MediaType)#io/corbel/lib/ws/api/error/ErrorResponseFactory/invalidEntity(java.lang.String)
io/corbel/resources/service/DefaultResourcesService/collectionOperation(java.lang.String,java.lang.String,javax.ws.rs.core.Request,javax.ws.rs.core.UriInfo,io.corbel.lib.token.TokenInfo,java.net.URI,org.springframework.http.HttpMethod,io.corbel.lib.queries.jaxrs.QueryParameters,java.io.InputStream,javax.ws.rs.core.MediaType)#io/corbel/lib/ws/api/error/ErrorResponseFactory/serverError(java.lang.Throwable)
io/corbel/resources/service/DefaultResourcesService/collectionOperation(java.lang.String,java.lang.String,javax.ws.rs.core.Request,javax.ws.rs.core.UriInfo,io.corbel.lib.token.TokenInfo,java.net.URI,org.springframework.http.HttpMethod,io.corbel.lib.queries.jaxrs.QueryParameters,java.io.InputStream,javax.ws.rs.core.MediaType)#javax/ws/rs/core/UriInfo/getQueryParameters()
io/corbel/resources/service/DefaultResourcesService/collectionOperation(java.lang.String,java.lang.String,javax.ws.rs.core.Request,javax.ws.rs.core.UriInfo,io.corbel.lib.token.TokenInfo,java.net.URI,org.springframework.http.HttpMethod,io.corbel.lib.queries.jaxrs.QueryParameters,java.io.InputStream,javax.ws.rs.core.MediaType)#io/corbel/event/ResourceEvent/createResourceEvent(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
io/corbel/resources/service/DefaultResourcesService/collectionOperation(java.lang.String,java.lang.String,javax.ws.rs.core.Request,javax.ws.rs.core.UriInfo,io.corbel.lib.token.TokenInfo,java.net.URI,org.springframework.http.HttpMethod,io.corbel.lib.queries.jaxrs.QueryParameters,java.io.InputStream,javax.ws.rs.core.MediaType)#io/corbel/lib/token/TokenInfo/getUserId()
io/corbel/resources/service/DefaultResourcesService/collectionOperation(java.lang.String,java.lang.String,javax.ws.rs.core.Request,javax.ws.rs.core.UriInfo,io.corbel.lib.token.TokenInfo,java.net.URI,org.springframework.http.HttpMethod,io.corbel.lib.queries.jaxrs.QueryParameters,java.io.InputStream,javax.ws.rs.core.MediaType)#io/corbel/resources/service/DefaultResourcesService/collectionParameters(java.lang.String,io.corbel.lib.queries.jaxrs.QueryParameters,io.corbel.lib.token.TokenInfo,java.util.List,javax.ws.rs.core.MultivaluedMap,javax.ws.rs.core.Request)
io/corbel/resources/service/DefaultResourcesService/collectionOperation(java.lang.String,java.lang.String,javax.ws.rs.core.Request,javax.ws.rs.core.UriInfo,io.corbel.lib.token.TokenInfo,java.net.URI,org.springframework.http.HttpMethod,io.corbel.lib.queries.jaxrs.QueryParameters,java.io.InputStream,javax.ws.rs.core.MediaType)#io/corbel/resources/rem/service/RemService/getRem(java.lang.String,java.util.List,org.springframework.http.HttpMethod)
io/corbel/resources/service/DefaultResourcesService/collectionOperation(java.lang.String,java.lang.String,javax.ws.rs.core.Request,javax.ws.rs.core.UriInfo,io.corbel.lib.token.TokenInfo,java.net.URI,org.springframework.http.HttpMethod,io.corbel.lib.queries.jaxrs.QueryParameters,java.io.InputStream,javax.ws.rs.core.MediaType)#java/util/Optional/ofNullable(T)
io/corbel/resources/service/DefaultResourcesService/collectionOperation(java.lang.String,java.lang.String,javax.ws.rs.core.Request,javax.ws.rs.core.UriInfo,io.corbel.lib.token.TokenInfo,java.net.URI,org.springframework.http.HttpMethod,io.corbel.lib.queries.jaxrs.QueryParameters,java.io.InputStream,javax.ws.rs.core.MediaType)#javax/ws/rs/core/Response/getMetadata()
io/corbel/resources/service/DefaultResourcesService/collectionOperation(java.lang.String,java.lang.String,javax.ws.rs.core.Request,javax.ws.rs.core.UriInfo,io.corbel.lib.token.TokenInfo,java.net.URI,org.springframework.http.HttpMethod,io.corbel.lib.queries.jaxrs.QueryParameters,java.io.InputStream,javax.ws.rs.core.MediaType)#io/corbel/resources/service/DefaultResourcesService/getEntity(java.util.Optional,io.corbel.resources.rem.Rem,javax.ws.rs.core.MediaType)
io/corbel/resources/service/DefaultResourcesService/collectionOperation(java.lang.String,java.lang.String,javax.ws.rs.core.Request,javax.ws.rs.core.UriInfo,io.corbel.lib.token.TokenInfo,java.net.URI,org.springframework.http.HttpMethod,io.corbel.lib.queries.jaxrs.QueryParameters,java.io.InputStream,javax.ws.rs.core.MediaType)#java/util/Map/containsKey(java.lang.Object)
io/corbel/resources/service/DefaultResourcesService/collectionOperation(java.lang.String,java.lang.String,javax.ws.rs.core.Request,javax.ws.rs.core.UriInfo,io.corbel.lib.token.TokenInfo,java.net.URI,org.springframework.http.HttpMethod,io.corbel.lib.queries.jaxrs.QueryParameters,java.io.InputStream,javax.ws.rs.core.MediaType)#io/corbel/lib/ws/api/error/ErrorResponseFactory/badRequest(io.corbel.lib.ws.api.error.ApiRequestException)
io/corbel/resources/service/DefaultResourcesService/collectionOperation(java.lang.String,java.lang.String,javax.ws.rs.core.Request,javax.ws.rs.core.UriInfo,io.corbel.lib.token.TokenInfo,java.net.URI,org.springframework.http.HttpMethod,io.corbel.lib.queries.jaxrs.QueryParameters,java.io.InputStream,javax.ws.rs.core.MediaType)#io/corbel/resources/rem/service/RemService/collection(io.corbel.resources.rem.Rem,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional)
io/corbel/resources/service/DefaultResourcesService/collectionOperation(java.lang.String,java.lang.String,javax.ws.rs.core.Request,javax.ws.rs.core.UriInfo,io.corbel.lib.token.TokenInfo,java.net.URI,org.springframework.http.HttpMethod,io.corbel.lib.queries.jaxrs.QueryParameters,java.io.InputStream,javax.ws.rs.core.MediaType)#com/fasterxml/jackson/core/JsonProcessingException/getOriginalMessage()
io/corbel/resources/service/DefaultResourcesService/resourceParameters(java.lang.String,io.corbel.lib.queries.jaxrs.QueryParameters,io.corbel.lib.token.TokenInfo,java.util.List,java.lang.Long,javax.ws.rs.core.MultivaluedMap,javax.ws.rs.core.Request)#io/corbel/resources/rem/request/RequestParametersImpl/RequestParametersImpl(E,io.corbel.lib.token.TokenInfo,java.lang.String,java.util.List,java.lang.Long,javax.ws.rs.core.MultivaluedMap,javax.ws.rs.core.MultivaluedMap)
io/corbel/resources/service/DefaultResourcesService/resourceParameters(java.lang.String,io.corbel.lib.queries.jaxrs.QueryParameters,io.corbel.lib.token.TokenInfo,java.util.List,java.lang.Long,javax.ws.rs.core.MultivaluedMap,javax.ws.rs.core.Request)#io/corbel/resources/rem/request/ResourceParametersImpl/ResourceParametersImpl(io.corbel.lib.queries.jaxrs.QueryParameters)
io/corbel/resources/service/DefaultResourcesService/resourceParameters(java.lang.String,io.corbel.lib.queries.jaxrs.QueryParameters,io.corbel.lib.token.TokenInfo,java.util.List,java.lang.Long,javax.ws.rs.core.MultivaluedMap,javax.ws.rs.core.Request)#io/corbel/resources/service/DefaultResourcesService/getHeadersFromRequest(javax.ws.rs.core.Request)
io/corbel/resources/service/DefaultResourcesService/collectionParameters(java.lang.String,io.corbel.lib.queries.jaxrs.QueryParameters,io.corbel.lib.token.TokenInfo,java.util.List,javax.ws.rs.core.MultivaluedMap,javax.ws.rs.core.Request)#io/corbel/resources/rem/request/RequestParametersImpl/RequestParametersImpl(E,io.corbel.lib.token.TokenInfo,java.lang.String,java.util.List,java.lang.Long,javax.ws.rs.core.MultivaluedMap,javax.ws.rs.core.MultivaluedMap)
io/corbel/resources/service/DefaultResourcesService/collectionParameters(java.lang.String,io.corbel.lib.queries.jaxrs.QueryParameters,io.corbel.lib.token.TokenInfo,java.util.List,javax.ws.rs.core.MultivaluedMap,javax.ws.rs.core.Request)#io/corbel/resources/rem/request/CollectionParametersImpl/CollectionParametersImpl(io.corbel.lib.queries.jaxrs.QueryParameters)
io/corbel/resources/service/DefaultResourcesService/collectionParameters(java.lang.String,io.corbel.lib.queries.jaxrs.QueryParameters,io.corbel.lib.token.TokenInfo,java.util.List,javax.ws.rs.core.MultivaluedMap,javax.ws.rs.core.Request)#io/corbel/resources/service/DefaultResourcesService/getHeadersFromRequest(javax.ws.rs.core.Request)
io/corbel/resources/service/DefaultResourcesService/getDefaultQueryParameters()#io/corbel/lib/queries/parser/QueryParametersParser/createQueryParameters(int,int,int,java.util.Optional,java.util.Optional,java.util.Optional,java.util.Optional,java.util.Optional)
io/corbel/resources/service/DefaultResourcesService/getDefaultQueryParameters()#java/util/Optional/empty()
io/corbel/resources/service/DefaultResourcesService/getRequestAcceptedMediaTypes(javax.ws.rs.core.Request)#com/google/common/collect/Lists/transform(java.util.List,com.google.common.base.Function)
io/corbel/resources/service/DefaultResourcesService/getRequestAcceptedMediaTypes(javax.ws.rs.core.Request)#org/glassfish/jersey/server/ContainerRequest/getAcceptableMediaTypes()
io/corbel/resources/service/DefaultResourcesService/sendEvent(org.springframework.http.HttpMethod,io.corbel.lib.token.TokenInfo,javax.ws.rs.core.Response,int,java.lang.String,java.lang.String,boolean)#io/corbel/lib/token/TokenInfo/getDomainId()
io/corbel/resources/service/DefaultResourcesService/sendEvent(org.springframework.http.HttpMethod,io.corbel.lib.token.TokenInfo,javax.ws.rs.core.Response,int,java.lang.String,java.lang.String,boolean)#io/corbel/eventbus/service/EventBus/dispatch(io.corbel.eventbus.Event)
io/corbel/resources/service/DefaultResourcesService/sendEvent(org.springframework.http.HttpMethod,io.corbel.lib.token.TokenInfo,javax.ws.rs.core.Response,int,java.lang.String,java.lang.String,boolean)#io/corbel/lib/token/TokenInfo/getUserId()
io/corbel/resources/service/DefaultResourcesService/sendEvent(org.springframework.http.HttpMethod,io.corbel.lib.token.TokenInfo,javax.ws.rs.core.Response,int,java.lang.String,java.lang.String,boolean)#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/service/DefaultResourcesService/sendEvent(org.springframework.http.HttpMethod,io.corbel.lib.token.TokenInfo,javax.ws.rs.core.Response,int,java.lang.String,java.lang.String,boolean)#io/corbel/event/ResourceEvent/updateResourceEvent(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
io/corbel/resources/service/DefaultResourcesService/sendEvent(org.springframework.http.HttpMethod,io.corbel.lib.token.TokenInfo,javax.ws.rs.core.Response,int,java.lang.String,java.lang.String,boolean)#io/corbel/event/ResourceEvent/deleteResourceEvent(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
io/corbel/resources/service/DefaultResourcesService/relationParameters(java.lang.String,io.corbel.lib.queries.jaxrs.QueryParameters,java.util.Optional,io.corbel.lib.token.TokenInfo,java.util.List,javax.ws.rs.core.MultivaluedMap,javax.ws.rs.core.Request)#io/corbel/resources/rem/request/RequestParametersImpl/RequestParametersImpl(E,io.corbel.lib.token.TokenInfo,java.lang.String,java.util.List,java.lang.Long,javax.ws.rs.core.MultivaluedMap,javax.ws.rs.core.MultivaluedMap)
io/corbel/resources/service/DefaultResourcesService/relationParameters(java.lang.String,io.corbel.lib.queries.jaxrs.QueryParameters,java.util.Optional,io.corbel.lib.token.TokenInfo,java.util.List,javax.ws.rs.core.MultivaluedMap,javax.ws.rs.core.Request)#io/corbel/resources/rem/request/RelationParametersImpl/RelationParametersImpl(io.corbel.lib.queries.jaxrs.QueryParameters,java.util.Optional)
io/corbel/resources/service/DefaultResourcesService/relationParameters(java.lang.String,io.corbel.lib.queries.jaxrs.QueryParameters,java.util.Optional,io.corbel.lib.token.TokenInfo,java.util.List,javax.ws.rs.core.MultivaluedMap,javax.ws.rs.core.Request)#io/corbel/resources/service/DefaultResourcesService/getHeadersFromRequest(javax.ws.rs.core.Request)
io/corbel/resources/service/DefaultResourcesService/getEntity(java.util.Optional,io.corbel.resources.rem.Rem,javax.ws.rs.core.MediaType)#java/util/Optional/get()
io/corbel/resources/service/DefaultResourcesService/getEntity(java.util.Optional,io.corbel.resources.rem.Rem,javax.ws.rs.core.MediaType)#org/slf4j/Logger/warn(java.lang.String,java.lang.Object,java.lang.Object)
io/corbel/resources/service/DefaultResourcesService/getEntity(java.util.Optional,io.corbel.resources.rem.Rem,javax.ws.rs.core.MediaType)#io/corbel/rem/internal/RemEntityTypeResolver/getEntityType(io.corbel.resources.rem.Rem)
io/corbel/resources/service/DefaultResourcesService/getEntity(java.util.Optional,io.corbel.resources.rem.Rem,javax.ws.rs.core.MediaType)#javax/ws/rs/ext/MessageBodyReader/readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.annotation.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)
io/corbel/resources/service/DefaultResourcesService/getEntity(java.util.Optional,io.corbel.resources.rem.Rem,javax.ws.rs.core.MediaType)#java/util/Optional/ofNullable(T)
io/corbel/resources/service/DefaultResourcesService/getEntity(java.util.Optional,io.corbel.resources.rem.Rem,javax.ws.rs.core.MediaType)#javax/ws/rs/ext/Providers/getMessageBodyReader(java.lang.Class,java.lang.reflect.Type,java.lang.annotation.Annotation[],javax.ws.rs.core.MediaType)
io/corbel/resources/service/DefaultResourcesService/getEntity(java.util.Optional,io.corbel.resources.rem.Rem,javax.ws.rs.core.MediaType)#java/util/Optional/empty()
io/corbel/resources/service/DefaultResourcesService/getEntity(java.util.Optional,io.corbel.resources.rem.Rem,javax.ws.rs.core.MediaType)#java/util/Optional/isPresent()
io/corbel/resources/service/DefaultResourcesService/resourceOperation(java.lang.String,java.lang.String,io.corbel.resources.rem.request.ResourceId,javax.ws.rs.core.Request,io.corbel.lib.queries.jaxrs.QueryParameters,javax.ws.rs.core.UriInfo,io.corbel.lib.token.TokenInfo,java.net.URI,org.springframework.http.HttpMethod,java.io.InputStream,javax.ws.rs.core.MediaType,java.lang.Long)#io/corbel/resources/rem/request/ResourceId/isWildcard()
io/corbel/resources/service/DefaultResourcesService/resourceOperation(java.lang.String,java.lang.String,io.corbel.resources.rem.request.ResourceId,javax.ws.rs.core.Request,io.corbel.lib.queries.jaxrs.QueryParameters,javax.ws.rs.core.UriInfo,io.corbel.lib.token.TokenInfo,java.net.URI,org.springframework.http.HttpMethod,java.io.InputStream,javax.ws.rs.core.MediaType,java.lang.Long)#io/corbel/resources/service/DefaultResourcesService/collectionOperation(java.lang.String,java.lang.String,javax.ws.rs.core.Request,javax.ws.rs.core.UriInfo,io.corbel.lib.token.TokenInfo,java.net.URI,org.springframework.http.HttpMethod,io.corbel.lib.queries.jaxrs.QueryParameters,java.io.InputStream,javax.ws.rs.core.MediaType)
io/corbel/resources/service/DefaultResourcesService/resourceOperation(java.lang.String,java.lang.String,io.corbel.resources.rem.request.ResourceId,javax.ws.rs.core.Request,io.corbel.lib.queries.jaxrs.QueryParameters,javax.ws.rs.core.UriInfo,io.corbel.lib.token.TokenInfo,java.net.URI,org.springframework.http.HttpMethod,java.io.InputStream,javax.ws.rs.core.MediaType,java.lang.Long)#javax/ws/rs/core/UriInfo/getQueryParameters()
io/corbel/resources/service/DefaultResourcesService/resourceOperation(java.lang.String,java.lang.String,io.corbel.resources.rem.request.ResourceId,javax.ws.rs.core.Request,io.corbel.lib.queries.jaxrs.QueryParameters,javax.ws.rs.core.UriInfo,io.corbel.lib.token.TokenInfo,java.net.URI,org.springframework.http.HttpMethod,java.io.InputStream,javax.ws.rs.core.MediaType,java.lang.Long)#io/corbel/resources/service/DefaultResourcesService/sendEvent(org.springframework.http.HttpMethod,io.corbel.lib.token.TokenInfo,javax.ws.rs.core.Response,int,java.lang.String,java.lang.String,boolean)
io/corbel/resources/service/DefaultResourcesService/resourceOperation(java.lang.String,java.lang.String,io.corbel.resources.rem.request.ResourceId,javax.ws.rs.core.Request,io.corbel.lib.queries.jaxrs.QueryParameters,javax.ws.rs.core.UriInfo,io.corbel.lib.token.TokenInfo,java.net.URI,org.springframework.http.HttpMethod,java.io.InputStream,javax.ws.rs.core.MediaType,java.lang.Long)#io/corbel/resources/rem/service/RemService/getRem(java.lang.String,java.util.List,org.springframework.http.HttpMethod)
io/corbel/resources/service/DefaultResourcesService/resourceOperation(java.lang.String,java.lang.String,io.corbel.resources.rem.request.ResourceId,javax.ws.rs.core.Request,io.corbel.lib.queries.jaxrs.QueryParameters,javax.ws.rs.core.UriInfo,io.corbel.lib.token.TokenInfo,java.net.URI,org.springframework.http.HttpMethod,java.io.InputStream,javax.ws.rs.core.MediaType,java.lang.Long)#java/util/Optional/ofNullable(T)
io/corbel/resources/service/DefaultResourcesService/resourceOperation(java.lang.String,java.lang.String,io.corbel.resources.rem.request.ResourceId,javax.ws.rs.core.Request,io.corbel.lib.queries.jaxrs.QueryParameters,javax.ws.rs.core.UriInfo,io.corbel.lib.token.TokenInfo,java.net.URI,org.springframework.http.HttpMethod,java.io.InputStream,javax.ws.rs.core.MediaType,java.lang.Long)#org/slf4j/Logger/error(java.lang.String,java.lang.Object,java.lang.Object)
io/corbel/resources/service/DefaultResourcesService/resourceOperation(java.lang.String,java.lang.String,io.corbel.resources.rem.request.ResourceId,javax.ws.rs.core.Request,io.corbel.lib.queries.jaxrs.QueryParameters,javax.ws.rs.core.UriInfo,io.corbel.lib.token.TokenInfo,java.net.URI,org.springframework.http.HttpMethod,java.io.InputStream,javax.ws.rs.core.MediaType,java.lang.Long)#java/util/Optional/empty()
io/corbel/resources/service/DefaultResourcesService/resourceOperation(java.lang.String,java.lang.String,io.corbel.resources.rem.request.ResourceId,javax.ws.rs.core.Request,io.corbel.lib.queries.jaxrs.QueryParameters,javax.ws.rs.core.UriInfo,io.corbel.lib.token.TokenInfo,java.net.URI,org.springframework.http.HttpMethod,java.io.InputStream,javax.ws.rs.core.MediaType,java.lang.Long)#io/corbel/lib/ws/api/error/ErrorResponseFactory/getInstance()
io/corbel/resources/service/DefaultResourcesService/resourceOperation(java.lang.String,java.lang.String,io.corbel.resources.rem.request.ResourceId,javax.ws.rs.core.Request,io.corbel.lib.queries.jaxrs.QueryParameters,javax.ws.rs.core.UriInfo,io.corbel.lib.token.TokenInfo,java.net.URI,org.springframework.http.HttpMethod,java.io.InputStream,javax.ws.rs.core.MediaType,java.lang.Long)#com/fasterxml/jackson/core/JsonProcessingException/getOriginalMessage()
io/corbel/resources/service/DefaultResourcesService/resourceOperation(java.lang.String,java.lang.String,io.corbel.resources.rem.request.ResourceId,javax.ws.rs.core.Request,io.corbel.lib.queries.jaxrs.QueryParameters,javax.ws.rs.core.UriInfo,io.corbel.lib.token.TokenInfo,java.net.URI,org.springframework.http.HttpMethod,java.io.InputStream,javax.ws.rs.core.MediaType,java.lang.Long)#io/corbel/resources/service/DefaultResourcesService/getRequestAcceptedMediaTypes(javax.ws.rs.core.Request)
io/corbel/resources/service/DefaultResourcesService/resourceOperation(java.lang.String,java.lang.String,io.corbel.resources.rem.request.ResourceId,javax.ws.rs.core.Request,io.corbel.lib.queries.jaxrs.QueryParameters,javax.ws.rs.core.UriInfo,io.corbel.lib.token.TokenInfo,java.net.URI,org.springframework.http.HttpMethod,java.io.InputStream,javax.ws.rs.core.MediaType,java.lang.Long)#io/corbel/resources/rem/service/RemService/resource(io.corbel.resources.rem.Rem,java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)
io/corbel/resources/service/DefaultResourcesService/resourceOperation(java.lang.String,java.lang.String,io.corbel.resources.rem.request.ResourceId,javax.ws.rs.core.Request,io.corbel.lib.queries.jaxrs.QueryParameters,javax.ws.rs.core.UriInfo,io.corbel.lib.token.TokenInfo,java.net.URI,org.springframework.http.HttpMethod,java.io.InputStream,javax.ws.rs.core.MediaType,java.lang.Long)#io/corbel/lib/ws/api/error/ErrorResponseFactory/invalidEntity(java.lang.String)
io/corbel/resources/service/DefaultResourcesService/resourceOperation(java.lang.String,java.lang.String,io.corbel.resources.rem.request.ResourceId,javax.ws.rs.core.Request,io.corbel.lib.queries.jaxrs.QueryParameters,javax.ws.rs.core.UriInfo,io.corbel.lib.token.TokenInfo,java.net.URI,org.springframework.http.HttpMethod,java.io.InputStream,javax.ws.rs.core.MediaType,java.lang.Long)#io/corbel/lib/ws/api/error/ErrorResponseFactory/serverError(java.lang.Throwable)
io/corbel/resources/service/DefaultResourcesService/resourceOperation(java.lang.String,java.lang.String,io.corbel.resources.rem.request.ResourceId,javax.ws.rs.core.Request,io.corbel.lib.queries.jaxrs.QueryParameters,javax.ws.rs.core.UriInfo,io.corbel.lib.token.TokenInfo,java.net.URI,org.springframework.http.HttpMethod,java.io.InputStream,javax.ws.rs.core.MediaType,java.lang.Long)#io/corbel/resources/rem/request/ResourceId/getId()
io/corbel/resources/service/DefaultResourcesService/resourceOperation(java.lang.String,java.lang.String,io.corbel.resources.rem.request.ResourceId,javax.ws.rs.core.Request,io.corbel.lib.queries.jaxrs.QueryParameters,javax.ws.rs.core.UriInfo,io.corbel.lib.token.TokenInfo,java.net.URI,org.springframework.http.HttpMethod,java.io.InputStream,javax.ws.rs.core.MediaType,java.lang.Long)#io/corbel/resources/service/DefaultResourcesService/resourceParameters(java.lang.String,io.corbel.lib.queries.jaxrs.QueryParameters,io.corbel.lib.token.TokenInfo,java.util.List,java.lang.Long,javax.ws.rs.core.MultivaluedMap,javax.ws.rs.core.Request)
io/corbel/resources/service/DefaultResourcesService/resourceOperation(java.lang.String,java.lang.String,io.corbel.resources.rem.request.ResourceId,javax.ws.rs.core.Request,io.corbel.lib.queries.jaxrs.QueryParameters,javax.ws.rs.core.UriInfo,io.corbel.lib.token.TokenInfo,java.net.URI,org.springframework.http.HttpMethod,java.io.InputStream,javax.ws.rs.core.MediaType,java.lang.Long)#io/corbel/resources/service/DefaultResourcesService/getEntity(java.util.Optional,io.corbel.resources.rem.Rem,javax.ws.rs.core.MediaType)
io/corbel/resources/service/DefaultResourcesService/resourceOperation(java.lang.String,java.lang.String,io.corbel.resources.rem.request.ResourceId,javax.ws.rs.core.Request,io.corbel.lib.queries.jaxrs.QueryParameters,javax.ws.rs.core.UriInfo,io.corbel.lib.token.TokenInfo,java.net.URI,org.springframework.http.HttpMethod,java.io.InputStream,javax.ws.rs.core.MediaType,java.lang.Long)#io/corbel/lib/ws/api/error/ErrorResponseFactory/badRequest(io.corbel.lib.ws.api.error.ApiRequestException)
io/corbel/resources/service/DefaultResourcesService/relationOperation(java.lang.String,java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,javax.ws.rs.core.Request,javax.ws.rs.core.UriInfo,io.corbel.lib.token.TokenInfo,org.springframework.http.HttpMethod,io.corbel.lib.queries.jaxrs.QueryParameters,java.lang.String,java.io.InputStream,javax.ws.rs.core.MediaType)#io/corbel/resources/rem/request/RequestParameters/getOptionalApiParameters()
io/corbel/resources/service/DefaultResourcesService/relationOperation(java.lang.String,java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,javax.ws.rs.core.Request,javax.ws.rs.core.UriInfo,io.corbel.lib.token.TokenInfo,org.springframework.http.HttpMethod,io.corbel.lib.queries.jaxrs.QueryParameters,java.lang.String,java.io.InputStream,javax.ws.rs.core.MediaType)#io/corbel/resources/service/DefaultResourcesService/getRequestAcceptedMediaTypes(javax.ws.rs.core.Request)
io/corbel/resources/service/DefaultResourcesService/relationOperation(java.lang.String,java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,javax.ws.rs.core.Request,javax.ws.rs.core.UriInfo,io.corbel.lib.token.TokenInfo,org.springframework.http.HttpMethod,io.corbel.lib.queries.jaxrs.QueryParameters,java.lang.String,java.io.InputStream,javax.ws.rs.core.MediaType)#io/corbel/resources/rem/request/ResourceId/getId()
io/corbel/resources/service/DefaultResourcesService/relationOperation(java.lang.String,java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,javax.ws.rs.core.Request,javax.ws.rs.core.UriInfo,io.corbel.lib.token.TokenInfo,org.springframework.http.HttpMethod,io.corbel.lib.queries.jaxrs.QueryParameters,java.lang.String,java.io.InputStream,javax.ws.rs.core.MediaType)#javax/ws/rs/core/UriInfo/getQueryParameters()
io/corbel/resources/service/DefaultResourcesService/relationOperation(java.lang.String,java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,javax.ws.rs.core.Request,javax.ws.rs.core.UriInfo,io.corbel.lib.token.TokenInfo,org.springframework.http.HttpMethod,io.corbel.lib.queries.jaxrs.QueryParameters,java.lang.String,java.io.InputStream,javax.ws.rs.core.MediaType)#java/util/Optional/flatMap(java.util.function.Function)
io/corbel/resources/service/DefaultResourcesService/relationOperation(java.lang.String,java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,javax.ws.rs.core.Request,javax.ws.rs.core.UriInfo,io.corbel.lib.token.TokenInfo,org.springframework.http.HttpMethod,io.corbel.lib.queries.jaxrs.QueryParameters,java.lang.String,java.io.InputStream,javax.ws.rs.core.MediaType)#io/corbel/resources/rem/service/RemService/relation(io.corbel.resources.rem.Rem,java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)
io/corbel/resources/service/DefaultResourcesService/relationOperation(java.lang.String,java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,javax.ws.rs.core.Request,javax.ws.rs.core.UriInfo,io.corbel.lib.token.TokenInfo,org.springframework.http.HttpMethod,io.corbel.lib.queries.jaxrs.QueryParameters,java.lang.String,java.io.InputStream,javax.ws.rs.core.MediaType)#io/corbel/resources/rem/service/RemService/getRem(java.lang.String,java.util.List,org.springframework.http.HttpMethod)
io/corbel/resources/service/DefaultResourcesService/relationOperation(java.lang.String,java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,javax.ws.rs.core.Request,javax.ws.rs.core.UriInfo,io.corbel.lib.token.TokenInfo,org.springframework.http.HttpMethod,io.corbel.lib.queries.jaxrs.QueryParameters,java.lang.String,java.io.InputStream,javax.ws.rs.core.MediaType)#java/util/Optional/ofNullable(T)
io/corbel/resources/service/DefaultResourcesService/relationOperation(java.lang.String,java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,javax.ws.rs.core.Request,javax.ws.rs.core.UriInfo,io.corbel.lib.token.TokenInfo,org.springframework.http.HttpMethod,io.corbel.lib.queries.jaxrs.QueryParameters,java.lang.String,java.io.InputStream,javax.ws.rs.core.MediaType)#io/corbel/resources/service/DefaultResourcesService/relationParameters(java.lang.String,io.corbel.lib.queries.jaxrs.QueryParameters,java.util.Optional,io.corbel.lib.token.TokenInfo,java.util.List,javax.ws.rs.core.MultivaluedMap,javax.ws.rs.core.Request)
io/corbel/resources/service/DefaultResourcesService/relationOperation(java.lang.String,java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,javax.ws.rs.core.Request,javax.ws.rs.core.UriInfo,io.corbel.lib.token.TokenInfo,org.springframework.http.HttpMethod,io.corbel.lib.queries.jaxrs.QueryParameters,java.lang.String,java.io.InputStream,javax.ws.rs.core.MediaType)#org/slf4j/Logger/error(java.lang.String,java.lang.Object,java.lang.Object)
io/corbel/resources/service/DefaultResourcesService/relationOperation(java.lang.String,java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,javax.ws.rs.core.Request,javax.ws.rs.core.UriInfo,io.corbel.lib.token.TokenInfo,org.springframework.http.HttpMethod,io.corbel.lib.queries.jaxrs.QueryParameters,java.lang.String,java.io.InputStream,javax.ws.rs.core.MediaType)#io/corbel/lib/ws/api/error/ErrorResponseFactory/getInstance()
io/corbel/resources/service/DefaultResourcesService/relationOperation(java.lang.String,java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,javax.ws.rs.core.Request,javax.ws.rs.core.UriInfo,io.corbel.lib.token.TokenInfo,org.springframework.http.HttpMethod,io.corbel.lib.queries.jaxrs.QueryParameters,java.lang.String,java.io.InputStream,javax.ws.rs.core.MediaType)#com/fasterxml/jackson/core/JsonProcessingException/getOriginalMessage()
io/corbel/resources/service/DefaultResourcesService/relationOperation(java.lang.String,java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,javax.ws.rs.core.Request,javax.ws.rs.core.UriInfo,io.corbel.lib.token.TokenInfo,org.springframework.http.HttpMethod,io.corbel.lib.queries.jaxrs.QueryParameters,java.lang.String,java.io.InputStream,javax.ws.rs.core.MediaType)#io/corbel/resources/service/DefaultResourcesService/getDefaultQueryParameters()
io/corbel/resources/service/DefaultResourcesService/relationOperation(java.lang.String,java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,javax.ws.rs.core.Request,javax.ws.rs.core.UriInfo,io.corbel.lib.token.TokenInfo,org.springframework.http.HttpMethod,io.corbel.lib.queries.jaxrs.QueryParameters,java.lang.String,java.io.InputStream,javax.ws.rs.core.MediaType)#io/corbel/lib/ws/api/error/ErrorResponseFactory/invalidEntity(java.lang.String)
io/corbel/resources/service/DefaultResourcesService/relationOperation(java.lang.String,java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,javax.ws.rs.core.Request,javax.ws.rs.core.UriInfo,io.corbel.lib.token.TokenInfo,org.springframework.http.HttpMethod,io.corbel.lib.queries.jaxrs.QueryParameters,java.lang.String,java.io.InputStream,javax.ws.rs.core.MediaType)#io/corbel/lib/ws/api/error/ErrorResponseFactory/serverError(java.lang.Throwable)
io/corbel/resources/service/DefaultResourcesService/relationOperation(java.lang.String,java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,javax.ws.rs.core.Request,javax.ws.rs.core.UriInfo,io.corbel.lib.token.TokenInfo,org.springframework.http.HttpMethod,io.corbel.lib.queries.jaxrs.QueryParameters,java.lang.String,java.io.InputStream,javax.ws.rs.core.MediaType)#io/corbel/resources/service/DefaultResourcesService/sendEvent(org.springframework.http.HttpMethod,io.corbel.lib.token.TokenInfo,javax.ws.rs.core.Response,int,java.lang.String,java.lang.String,boolean)
io/corbel/resources/service/DefaultResourcesService/relationOperation(java.lang.String,java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,javax.ws.rs.core.Request,javax.ws.rs.core.UriInfo,io.corbel.lib.token.TokenInfo,org.springframework.http.HttpMethod,io.corbel.lib.queries.jaxrs.QueryParameters,java.lang.String,java.io.InputStream,javax.ws.rs.core.MediaType)#java/util/Optional/orElse(T)
io/corbel/resources/service/DefaultResourcesService/relationOperation(java.lang.String,java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,javax.ws.rs.core.Request,javax.ws.rs.core.UriInfo,io.corbel.lib.token.TokenInfo,org.springframework.http.HttpMethod,io.corbel.lib.queries.jaxrs.QueryParameters,java.lang.String,java.io.InputStream,javax.ws.rs.core.MediaType)#io/corbel/resources/service/DefaultResourcesService/getEntity(java.util.Optional,io.corbel.resources.rem.Rem,javax.ws.rs.core.MediaType)
io/corbel/resources/service/DefaultResourcesService/relationOperation(java.lang.String,java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,javax.ws.rs.core.Request,javax.ws.rs.core.UriInfo,io.corbel.lib.token.TokenInfo,org.springframework.http.HttpMethod,io.corbel.lib.queries.jaxrs.QueryParameters,java.lang.String,java.io.InputStream,javax.ws.rs.core.MediaType)#io/corbel/lib/ws/api/error/ErrorResponseFactory/badRequest(io.corbel.lib.ws.api.error.ApiRequestException)
io/corbel/resources/service/DefaultResourcesService/getHeadersFromRequest(javax.ws.rs.core.Request)#org/slf4j/Logger/warn(java.lang.String)
io/corbel/resources/service/DefaultResourcesService/getHeadersFromRequest(javax.ws.rs.core.Request)#javax/ws/rs/core/MultivaluedHashMap/MultivaluedHashMap()
io/corbel/resources/service/DefaultResourcesService/getHeadersFromRequest(javax.ws.rs.core.Request)#org/glassfish/jersey/server/ContainerRequest/getRequestHeaders()
io/corbel/iam/scope/MustacheScopeFillStrategy/fill(com.google.gson.JsonObject,java.util.Map)#com/github/mustachejava/Mustache/execute(java.io.Writer,java.lang.Object)
io/corbel/iam/scope/MustacheScopeFillStrategy/fill(com.google.gson.JsonObject,java.util.Map)#java/io/StringReader/StringReader(java.lang.String)
io/corbel/iam/scope/MustacheScopeFillStrategy/fill(com.google.gson.JsonObject,java.util.Map)#java/lang/StringBuffer/toString()
io/corbel/iam/scope/MustacheScopeFillStrategy/fill(com.google.gson.JsonObject,java.util.Map)#org/codehaus/groovy/runtime/StringBufferWriter/StringBufferWriter(java.lang.StringBuffer)
io/corbel/iam/scope/MustacheScopeFillStrategy/fill(com.google.gson.JsonObject,java.util.Map)#com/google/gson/JsonParser/JsonParser()
io/corbel/iam/scope/MustacheScopeFillStrategy/fill(com.google.gson.JsonObject,java.util.Map)#com/github/mustachejava/MustacheFactory/compile(java.io.Reader,java.lang.String)
io/corbel/iam/scope/MustacheScopeFillStrategy/fill(com.google.gson.JsonObject,java.util.Map)#com/google/gson/JsonParser/parse(java.lang.String)
io/corbel/iam/scope/MustacheScopeFillStrategy/fill(com.google.gson.JsonObject,java.util.Map)#com/google/gson/JsonElement/toString()
io/corbel/iam/scope/MustacheScopeFillStrategy/fill(com.google.gson.JsonObject,java.util.Map)#java/lang/StringBuffer/StringBuffer()
io/corbel/iam/scope/MustacheScopeFillStrategy/fillScope(io.corbel.iam.model.Scope,java.util.Map)#io/corbel/iam/model/Entity/getId()
io/corbel/iam/scope/MustacheScopeFillStrategy/fillScope(io.corbel.iam.model.Scope,java.util.Map)#java/util/Set/size()
io/corbel/iam/scope/MustacheScopeFillStrategy/fillScope(io.corbel.iam.model.Scope,java.util.Map)#java/util/HashSet/HashSet(int)
io/corbel/iam/scope/MustacheScopeFillStrategy/fillScope(io.corbel.iam.model.Scope,java.util.Map)#io/corbel/iam/model/Scope/getType()
io/corbel/iam/scope/MustacheScopeFillStrategy/fillScope(io.corbel.iam.model.Scope,java.util.Map)#io/corbel/iam/scope/MustacheScopeFillStrategy/fill(com.google.gson.JsonObject,java.util.Map)
io/corbel/iam/scope/MustacheScopeFillStrategy/fillScope(io.corbel.iam.model.Scope,java.util.Map)#java/util/Set/add(E)
io/corbel/iam/scope/MustacheScopeFillStrategy/fillScope(io.corbel.iam.model.Scope,java.util.Map)#io/corbel/iam/model/Scope/getScopes()
io/corbel/iam/scope/MustacheScopeFillStrategy/fillScope(io.corbel.iam.model.Scope,java.util.Map)#io/corbel/iam/model/Scope/getAudience()
io/corbel/iam/scope/MustacheScopeFillStrategy/fillScope(io.corbel.iam.model.Scope,java.util.Map)#io/corbel/iam/model/Scope/getRules()
io/corbel/iam/scope/MustacheScopeFillStrategy/fillScope(io.corbel.iam.model.Scope,java.util.Map)#io/corbel/iam/model/Scope/Scope(java.lang.String,java.lang.String,java.lang.String,java.util.Set,java.util.Set,com.google.gson.JsonObject)
io/corbel/iam/scope/MustacheScopeFillStrategy/fillScope(io.corbel.iam.model.Scope,java.util.Map)#io/corbel/iam/model/Scope/getParameters()
io/corbel/iam/ioc/TokenVerifiersIoc/userExistsTokenVerifier(io.corbel.iam.repository.UserRepository)#io/corbel/iam/verifier/UserExistsTokenVerifier/UserExistsTokenVerifier(io.corbel.iam.repository.UserRepository)
io/corbel/oauth/api/UserResourceTestBase/before()#javax/servlet/http/HttpServletRequest/getHeader(java.lang.String)
io/corbel/oauth/api/UserResourceTestBase/before()#io/corbel/lib/token/TokenInfo/getDomainId()
io/corbel/oauth/api/UserResourceTestBase/before()#io/corbel/oauth/api/auth/TokenAuthenticator/authenticate(java.lang.String)
io/corbel/oauth/api/UserResourceTestBase/before()#io/corbel/lib/token/exception/TokenVerificationException/TokenVerificationException(java.lang.String)
io/corbel/oauth/api/UserResourceTestBase/before()#io/corbel/oauth/model/Client/Client()
io/corbel/oauth/api/UserResourceTestBase/before()#io/corbel/oauth/model/Client/setKey(java.lang.String)
io/corbel/oauth/api/UserResourceTestBase/before()#io/corbel/oauth/api/auth/ClientCredentialsAuthenticator/authenticate(io.dropwizard.auth.basic.BasicCredentials)
io/corbel/oauth/api/UserResourceTestBase/before()#org/mockito/Mockito/reset(T[])
io/corbel/oauth/api/UserResourceTestBase/before()#io/corbel/lib/token/reader/TokenReader/getToken()
io/corbel/oauth/api/UserResourceTestBase/before()#io/corbel/oauth/service/UserService/getUser(java.lang.String)
io/corbel/oauth/api/UserResourceTestBase/before()#io/corbel/oauth/model/Client/setName(java.lang.String)
io/corbel/oauth/api/UserResourceTestBase/before()#com/google/common/base/Optional/absent()
io/corbel/oauth/api/UserResourceTestBase/before()#io/corbel/oauth/repository/ClientRepository/findByName(java.lang.String)
io/corbel/oauth/api/UserResourceTestBase/before()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/oauth/api/UserResourceTestBase/before()#io/corbel/lib/token/TokenInfo/getTokenType()
io/corbel/oauth/api/UserResourceTestBase/before()#io/corbel/lib/token/reader/TokenReader/getInfo()
io/corbel/oauth/api/UserResourceTestBase/before()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/oauth/api/UserResourceTestBase/before()#org/mockito/Mockito/when(T)
io/corbel/oauth/api/UserResourceTestBase/before()#io/corbel/oauth/TestUtils/createUserTest(io.corbel.oauth.model.Role)
io/corbel/oauth/api/UserResourceTestBase/before()#io/corbel/lib/token/TokenInfo/getUserId()
io/corbel/oauth/api/UserResourceTestBase/before()#io/corbel/lib/token/TokenInfo/getClientId()
io/corbel/oauth/api/UserResourceTestBase/before()#io/dropwizard/auth/basic/BasicCredentials/BasicCredentials(java.lang.String,java.lang.String)
io/corbel/oauth/api/UserResourceTestBase/before()#com/google/common/base/Optional/of(T)
io/corbel/oauth/api/UserResourceTestBase/before()#io/corbel/oauth/model/Client/setDomain(java.lang.String)
io/corbel/oauth/api/UserResourceTestBase/before()#io/corbel/lib/token/parser/TokenParser/parseAndVerify(java.lang.String)
io/corbel/oauth/api/UserResourceTestBase/before()#org/mockito/Matchers/eq(T)
io/corbel/oauth/api/UserResourceTestBase/before()#org/mockito/stubbing/OngoingStubbing/thenThrow(java.lang.Throwable[])
io/corbel/oauth/api/UserResourceTestBase/createTestUser(io.corbel.oauth.model.User)#io/corbel/oauth/model/User/setUsername(java.lang.String)
io/corbel/oauth/api/UserResourceTestBase/createTestUser(io.corbel.oauth.model.User)#io/corbel/oauth/model/User/setEmail(java.lang.String)
io/corbel/oauth/api/UserResourceTestBase/createTestUser(io.corbel.oauth.model.User)#io/corbel/oauth/model/User/setDomain(java.lang.String)
io/corbel/oauth/api/UserResourceTestBase/createTestUser(io.corbel.oauth.model.User)#io/corbel/oauth/model/User/setPassword(java.lang.String)
io/corbel/oauth/api/UserResourceTestBase/createTestUser(io.corbel.oauth.model.User)#io/corbel/oauth/model/User/setId(java.lang.String)
io/corbel/oauth/api/UserResourceTestBase/createTestUser()#io/corbel/oauth/api/UserResourceTestBase/createTestUser(io.corbel.oauth.model.User)
io/corbel/oauth/api/UserResourceTestBase/createTestUser()#io/corbel/oauth/model/User/User()
io/corbel/resources/rem/dao/MongoResmiQueryBuilderTest/testBuildWithRelationAndQueryAndSortAndPagination()#org/bson/BSONObject/get(java.lang.String)
io/corbel/resources/rem/dao/MongoResmiQueryBuilderTest/testBuildWithRelationAndQueryAndSortAndPagination()#io/corbel/resources/rem/dao/MongoResmiQueryBuilder/relationSubjectId(io.corbel.resources.rem.request.ResourceId)
io/corbel/resources/rem/dao/MongoResmiQueryBuilderTest/testBuildWithRelationAndQueryAndSortAndPagination()#org/springframework/data/mongodb/core/query/Query/getSortObject()
io/corbel/resources/rem/dao/MongoResmiQueryBuilderTest/testBuildWithRelationAndQueryAndSortAndPagination()#java/util/Map/get(java.lang.Object)
io/corbel/resources/rem/dao/MongoResmiQueryBuilderTest/testBuildWithRelationAndQueryAndSortAndPagination()#org/springframework/data/mongodb/core/query/Query/getQueryObject()
io/corbel/resources/rem/dao/MongoResmiQueryBuilderTest/testBuildWithRelationAndQueryAndSortAndPagination()#io/corbel/resources/rem/dao/MongoResmiQueryBuilder/query(io.corbel.lib.queries.request.ResourceQuery)
io/corbel/resources/rem/dao/MongoResmiQueryBuilderTest/testBuildWithRelationAndQueryAndSortAndPagination()#io/corbel/resources/rem/dao/MongoResmiQueryBuilder/MongoResmiQueryBuilder()
io/corbel/resources/rem/dao/MongoResmiQueryBuilderTest/testBuildWithRelationAndQueryAndSortAndPagination()#org/junit/Assert/assertEquals(java.lang.Object,java.lang.Object)
io/corbel/resources/rem/dao/MongoResmiQueryBuilderTest/testBuildWithRelationAndQueryAndSortAndPagination()#java/lang/Object/toString()
io/corbel/resources/rem/dao/MongoResmiQueryBuilderTest/testBuildWithRelationAndQueryAndSortAndPagination()#java/lang/Object/equals(java.lang.Object)
io/corbel/resources/rem/dao/MongoResmiQueryBuilderTest/testBuildWithRelationAndQueryAndSortAndPagination()#org/bson/BSONObject/toMap()
io/corbel/resources/rem/dao/MongoResmiQueryBuilderTest/testBuildWithRelationAndQueryAndSortAndPagination()#org/junit/Assert/assertTrue(boolean)
io/corbel/resources/rem/dao/MongoResmiQueryBuilderTest/testBuildWithRelationAndQueryAndSortAndPagination()#io/corbel/lib/queries/builder/QueryBuilder/build()
io/corbel/resources/rem/dao/MongoResmiQueryBuilderTest/testBuildWithRelationAndQueryAndSortAndPagination()#java/lang/String/replace(java.lang.CharSequence,java.lang.CharSequence)
io/corbel/resources/rem/dao/MongoResmiQueryBuilderTest/testBuildWithRelationAndQueryAndSortAndPagination()#io/corbel/lib/queries/builder/QueryBuilder/pagination(io.corbel.lib.queries.request.Pagination)
io/corbel/resources/rem/dao/MongoResmiQueryBuilderTest/testBuildWithRelationAndQueryAndSortAndPagination()#io/corbel/lib/queries/builder/QueryBuilder/sort(io.corbel.lib.queries.request.Sort)
io/corbel/resources/rem/dao/MongoResmiQueryBuilderTest/testCreatedAtResourceQuery()#java/lang/Object/toString()
io/corbel/resources/rem/dao/MongoResmiQueryBuilderTest/testCreatedAtResourceQuery()#io/corbel/lib/queries/parser/JacksonQueryParser/parse(java.lang.String)
io/corbel/resources/rem/dao/MongoResmiQueryBuilderTest/testCreatedAtResourceQuery()#java/util/Map/get(java.lang.Object)
io/corbel/resources/rem/dao/MongoResmiQueryBuilderTest/testCreatedAtResourceQuery()#org/springframework/data/mongodb/core/query/Query/getQueryObject()
io/corbel/resources/rem/dao/MongoResmiQueryBuilderTest/testCreatedAtResourceQuery()#org/bson/BSONObject/toMap()
io/corbel/resources/rem/dao/MongoResmiQueryBuilderTest/testCreatedAtResourceQuery()#io/corbel/resources/rem/dao/MongoResmiQueryBuilder/query(io.corbel.lib.queries.request.ResourceQuery)
io/corbel/resources/rem/dao/MongoResmiQueryBuilderTest/testCreatedAtResourceQuery()#io/corbel/resources/rem/dao/MongoResmiQueryBuilder/MongoResmiQueryBuilder()
io/corbel/resources/rem/dao/MongoResmiQueryBuilderTest/testCreatedAtResourceQuery()#org/junit/Assert/assertEquals(java.lang.Object,java.lang.Object)
io/corbel/resources/rem/dao/MongoResmiQueryBuilderTest/testCreatedAtResourceQuery()#io/corbel/lib/queries/builder/QueryBuilder/build()
io/corbel/resources/rem/dao/MongoResmiQueryBuilderTest/testCreatedAtResourceQuery()#java/lang/String/replace(java.lang.CharSequence,java.lang.CharSequence)
io/corbel/resources/rem/dao/MongoResmiQueryBuilderTest/testBuildWithIdAndRelation()#java/lang/Object/equals(java.lang.Object)
io/corbel/resources/rem/dao/MongoResmiQueryBuilderTest/testBuildWithIdAndRelation()#io/corbel/resources/rem/dao/MongoResmiQueryBuilder/relationSubjectId(io.corbel.resources.rem.request.ResourceId)
io/corbel/resources/rem/dao/MongoResmiQueryBuilderTest/testBuildWithIdAndRelation()#java/util/Map/get(java.lang.Object)
io/corbel/resources/rem/dao/MongoResmiQueryBuilderTest/testBuildWithIdAndRelation()#org/springframework/data/mongodb/core/query/Query/getQueryObject()
io/corbel/resources/rem/dao/MongoResmiQueryBuilderTest/testBuildWithIdAndRelation()#io/corbel/resources/rem/dao/MongoResmiQueryBuilder/MongoResmiQueryBuilder()
io/corbel/resources/rem/dao/MongoResmiQueryBuilderTest/testBuildWithIdAndRelation()#io/corbel/lib/queries/mongo/builder/MongoQueryBuilder/build()
io/corbel/resources/rem/dao/MongoResmiQueryBuilderTest/testBuildWithIdAndRelation()#org/bson/BSONObject/toMap()
io/corbel/resources/rem/dao/MongoResmiQueryBuilderTest/testBuildWithIdAndRelation()#org/junit/Assert/assertTrue(boolean)
io/corbel/resources/rem/dao/MongoResmiQueryBuilderTest/testBuildWithWildCardAndRelation()#org/junit/Assert/assertFalse(boolean)
io/corbel/resources/rem/dao/MongoResmiQueryBuilderTest/testBuildWithWildCardAndRelation()#io/corbel/resources/rem/dao/MongoResmiQueryBuilder/relationSubjectId(io.corbel.resources.rem.request.ResourceId)
io/corbel/resources/rem/dao/MongoResmiQueryBuilderTest/testBuildWithWildCardAndRelation()#org/springframework/data/mongodb/core/query/Query/getQueryObject()
io/corbel/resources/rem/dao/MongoResmiQueryBuilderTest/testBuildWithWildCardAndRelation()#org/bson/BSONObject/toMap()
io/corbel/resources/rem/dao/MongoResmiQueryBuilderTest/testBuildWithWildCardAndRelation()#io/corbel/resources/rem/dao/MongoResmiQueryBuilder/MongoResmiQueryBuilder()
io/corbel/resources/rem/dao/MongoResmiQueryBuilderTest/testBuildWithWildCardAndRelation()#java/util/Map/containsKey(java.lang.Object)
io/corbel/resources/rem/dao/MongoResmiQueryBuilderTest/testBuildWithWildCardAndRelation()#io/corbel/lib/queries/mongo/builder/MongoQueryBuilder/build()
io/corbel/resources/rem/dao/MongoResmiQueryBuilderTest/testUpdatedAtResourceQuery()#java/lang/Object/toString()
io/corbel/resources/rem/dao/MongoResmiQueryBuilderTest/testUpdatedAtResourceQuery()#io/corbel/lib/queries/parser/JacksonQueryParser/parse(java.lang.String)
io/corbel/resources/rem/dao/MongoResmiQueryBuilderTest/testUpdatedAtResourceQuery()#java/util/Map/get(java.lang.Object)
io/corbel/resources/rem/dao/MongoResmiQueryBuilderTest/testUpdatedAtResourceQuery()#org/springframework/data/mongodb/core/query/Query/getQueryObject()
io/corbel/resources/rem/dao/MongoResmiQueryBuilderTest/testUpdatedAtResourceQuery()#org/bson/BSONObject/toMap()
io/corbel/resources/rem/dao/MongoResmiQueryBuilderTest/testUpdatedAtResourceQuery()#io/corbel/resources/rem/dao/MongoResmiQueryBuilder/query(io.corbel.lib.queries.request.ResourceQuery)
io/corbel/resources/rem/dao/MongoResmiQueryBuilderTest/testUpdatedAtResourceQuery()#io/corbel/resources/rem/dao/MongoResmiQueryBuilder/MongoResmiQueryBuilder()
io/corbel/resources/rem/dao/MongoResmiQueryBuilderTest/testUpdatedAtResourceQuery()#org/junit/Assert/assertEquals(java.lang.Object,java.lang.Object)
io/corbel/resources/rem/dao/MongoResmiQueryBuilderTest/testUpdatedAtResourceQuery()#io/corbel/lib/queries/builder/QueryBuilder/build()
io/corbel/resources/rem/dao/MongoResmiQueryBuilderTest/testUpdatedAtResourceQuery()#java/lang/String/replace(java.lang.CharSequence,java.lang.CharSequence)
io/corbel/resources/rem/dao/MongoResmiQueryBuilderTest/testWithISODateResourceQuery()#java/lang/Object/toString()
io/corbel/resources/rem/dao/MongoResmiQueryBuilderTest/testWithISODateResourceQuery()#io/corbel/lib/queries/parser/JacksonQueryParser/parse(java.lang.String)
io/corbel/resources/rem/dao/MongoResmiQueryBuilderTest/testWithISODateResourceQuery()#java/util/Map/get(java.lang.Object)
io/corbel/resources/rem/dao/MongoResmiQueryBuilderTest/testWithISODateResourceQuery()#org/springframework/data/mongodb/core/query/Query/getQueryObject()
io/corbel/resources/rem/dao/MongoResmiQueryBuilderTest/testWithISODateResourceQuery()#org/bson/BSONObject/toMap()
io/corbel/resources/rem/dao/MongoResmiQueryBuilderTest/testWithISODateResourceQuery()#io/corbel/resources/rem/dao/MongoResmiQueryBuilder/query(io.corbel.lib.queries.request.ResourceQuery)
io/corbel/resources/rem/dao/MongoResmiQueryBuilderTest/testWithISODateResourceQuery()#io/corbel/resources/rem/dao/MongoResmiQueryBuilder/MongoResmiQueryBuilder()
io/corbel/resources/rem/dao/MongoResmiQueryBuilderTest/testWithISODateResourceQuery()#org/junit/Assert/assertEquals(java.lang.Object,java.lang.Object)
io/corbel/resources/rem/dao/MongoResmiQueryBuilderTest/testWithISODateResourceQuery()#io/corbel/lib/queries/builder/QueryBuilder/build()
io/corbel/resources/rem/dao/MongoResmiQueryBuilderTest/testWithISODateResourceQuery()#java/lang/String/replace(java.lang.CharSequence,java.lang.CharSequence)
io/corbel/resources/rem/dao/MongoResmiQueryBuilderTest/testBuildWithIdAndPaginationAndNullSort()#io/corbel/resources/rem/dao/MongoResmiQueryBuilder/id(java.lang.String)
io/corbel/resources/rem/dao/MongoResmiQueryBuilderTest/testBuildWithIdAndPaginationAndNullSort()#org/springframework/data/mongodb/core/query/Query/getSortObject()
io/corbel/resources/rem/dao/MongoResmiQueryBuilderTest/testBuildWithIdAndPaginationAndNullSort()#org/junit/Assert/assertTrue(boolean)
io/corbel/resources/rem/dao/MongoResmiQueryBuilderTest/testBuildWithIdAndPaginationAndNullSort()#io/corbel/resources/rem/dao/MongoResmiQueryBuilder/MongoResmiQueryBuilder()
io/corbel/resources/rem/dao/MongoResmiQueryBuilderTest/testBuildWithIdAndPaginationAndNullSort()#io/corbel/lib/queries/mongo/builder/MongoQueryBuilder/pagination(io.corbel.lib.queries.request.Pagination)
io/corbel/resources/rem/dao/MongoResmiQueryBuilderTest/testBuildWithIdAndPaginationAndNullSort()#io/corbel/lib/queries/builder/QueryBuilder/build()
io/corbel/resources/rem/dao/MongoResmiQueryBuilderTest/testBuildWithIdAndPaginationAndNullSort()#io/corbel/lib/queries/builder/QueryBuilder/sort(io.corbel.lib.queries.request.Sort)
io/corbel/resources/rem/dao/MongoResmiQueryBuilderTest/testBuildWithIdAndPagination()#org/springframework/data/mongodb/core/query/Query/getLimit()
io/corbel/resources/rem/dao/MongoResmiQueryBuilderTest/testBuildWithIdAndPagination()#io/corbel/resources/rem/dao/MongoResmiQueryBuilder/id(java.lang.String)
io/corbel/resources/rem/dao/MongoResmiQueryBuilderTest/testBuildWithIdAndPagination()#org/springframework/data/mongodb/core/query/Query/getSkip()
io/corbel/resources/rem/dao/MongoResmiQueryBuilderTest/testBuildWithIdAndPagination()#org/junit/Assert/assertTrue(boolean)
io/corbel/resources/rem/dao/MongoResmiQueryBuilderTest/testBuildWithIdAndPagination()#io/corbel/resources/rem/dao/MongoResmiQueryBuilder/MongoResmiQueryBuilder()
io/corbel/resources/rem/dao/MongoResmiQueryBuilderTest/testBuildWithIdAndPagination()#io/corbel/lib/queries/mongo/builder/MongoQueryBuilder/pagination(io.corbel.lib.queries.request.Pagination)
io/corbel/resources/rem/dao/MongoResmiQueryBuilderTest/testBuildWithIdAndPagination()#io/corbel/lib/queries/builder/QueryBuilder/build()
io/corbel/resources/rem/dao/MongoResmiQueryBuilderTest/setUp()#com/fasterxml/jackson/databind/ObjectMapper/getFactory()
io/corbel/resources/rem/dao/MongoResmiQueryBuilderTest/setUp()#io/corbel/lib/queries/parser/JacksonQueryParser/parse(java.lang.String)
io/corbel/resources/rem/dao/MongoResmiQueryBuilderTest/setUp()#io/corbel/lib/queries/parser/JacksonQueryParser/JacksonQueryParser(io.corbel.lib.queries.parser.CustomJsonParser)
io/corbel/resources/rem/dao/MongoResmiQueryBuilderTest/setUp()#com/fasterxml/jackson/databind/ObjectMapper/ObjectMapper()
io/corbel/resources/rem/dao/MongoResmiQueryBuilderTest/setUp()#io/corbel/lib/queries/parser/CustomJsonParser/CustomJsonParser(com.fasterxml.jackson.core.JsonFactory)
io/corbel/resources/rem/dao/MongoResmiQueryBuilderTest/testBuildWithId()#java/lang/Object/equals(java.lang.Object)
io/corbel/resources/rem/dao/MongoResmiQueryBuilderTest/testBuildWithId()#io/corbel/resources/rem/dao/MongoResmiQueryBuilder/id(java.lang.String)
io/corbel/resources/rem/dao/MongoResmiQueryBuilderTest/testBuildWithId()#java/util/Map/get(java.lang.Object)
io/corbel/resources/rem/dao/MongoResmiQueryBuilderTest/testBuildWithId()#org/springframework/data/mongodb/core/query/Query/getQueryObject()
io/corbel/resources/rem/dao/MongoResmiQueryBuilderTest/testBuildWithId()#io/corbel/resources/rem/dao/MongoResmiQueryBuilder/MongoResmiQueryBuilder()
io/corbel/resources/rem/dao/MongoResmiQueryBuilderTest/testBuildWithId()#io/corbel/lib/queries/mongo/builder/MongoQueryBuilder/build()
io/corbel/resources/rem/dao/MongoResmiQueryBuilderTest/testBuildWithId()#org/bson/BSONObject/toMap()
io/corbel/resources/rem/dao/MongoResmiQueryBuilderTest/testBuildWithId()#org/junit/Assert/assertTrue(boolean)
io/corbel/resources/rem/dao/MongoResmiQueryBuilderTest/testNullResourceQuery()#org/bson/BSONObject/get(java.lang.String)
io/corbel/resources/rem/dao/MongoResmiQueryBuilderTest/testNullResourceQuery()#java/lang/Object/equals(java.lang.Object)
io/corbel/resources/rem/dao/MongoResmiQueryBuilderTest/testNullResourceQuery()#io/corbel/resources/rem/dao/MongoResmiQueryBuilder/relationSubjectId(io.corbel.resources.rem.request.ResourceId)
io/corbel/resources/rem/dao/MongoResmiQueryBuilderTest/testNullResourceQuery()#org/springframework/data/mongodb/core/query/Query/getSortObject()
io/corbel/resources/rem/dao/MongoResmiQueryBuilderTest/testNullResourceQuery()#java/util/Map/get(java.lang.Object)
io/corbel/resources/rem/dao/MongoResmiQueryBuilderTest/testNullResourceQuery()#org/springframework/data/mongodb/core/query/Query/getQueryObject()
io/corbel/resources/rem/dao/MongoResmiQueryBuilderTest/testNullResourceQuery()#io/corbel/resources/rem/dao/MongoResmiQueryBuilder/query(io.corbel.lib.queries.request.ResourceQuery)
io/corbel/resources/rem/dao/MongoResmiQueryBuilderTest/testNullResourceQuery()#io/corbel/resources/rem/dao/MongoResmiQueryBuilder/MongoResmiQueryBuilder()
io/corbel/resources/rem/dao/MongoResmiQueryBuilderTest/testNullResourceQuery()#io/corbel/lib/queries/builder/QueryBuilder/build()
io/corbel/resources/rem/dao/MongoResmiQueryBuilderTest/testNullResourceQuery()#org/bson/BSONObject/toMap()
io/corbel/resources/rem/dao/MongoResmiQueryBuilderTest/testNullResourceQuery()#org/junit/Assert/assertTrue(boolean)
io/corbel/resources/rem/dao/MongoResmiQueryBuilderTest/testNullResourceQuery()#io/corbel/lib/queries/builder/QueryBuilder/pagination(io.corbel.lib.queries.request.Pagination)
io/corbel/resources/rem/dao/MongoResmiQueryBuilderTest/testNullResourceQuery()#io/corbel/lib/queries/builder/QueryBuilder/sort(io.corbel.lib.queries.request.Sort)
io/corbel/resources/rem/dao/MongoResmiQueryBuilderTest/testBuildWithIdAndPaginationAndSort()#org/bson/BSONObject/get(java.lang.String)
io/corbel/resources/rem/dao/MongoResmiQueryBuilderTest/testBuildWithIdAndPaginationAndSort()#java/lang/Object/equals(java.lang.Object)
io/corbel/resources/rem/dao/MongoResmiQueryBuilderTest/testBuildWithIdAndPaginationAndSort()#io/corbel/resources/rem/dao/MongoResmiQueryBuilder/id(java.lang.String)
io/corbel/resources/rem/dao/MongoResmiQueryBuilderTest/testBuildWithIdAndPaginationAndSort()#org/springframework/data/mongodb/core/query/Query/getSortObject()
io/corbel/resources/rem/dao/MongoResmiQueryBuilderTest/testBuildWithIdAndPaginationAndSort()#org/junit/Assert/assertTrue(boolean)
io/corbel/resources/rem/dao/MongoResmiQueryBuilderTest/testBuildWithIdAndPaginationAndSort()#io/corbel/resources/rem/dao/MongoResmiQueryBuilder/MongoResmiQueryBuilder()
io/corbel/resources/rem/dao/MongoResmiQueryBuilderTest/testBuildWithIdAndPaginationAndSort()#io/corbel/lib/queries/mongo/builder/MongoQueryBuilder/pagination(io.corbel.lib.queries.request.Pagination)
io/corbel/resources/rem/dao/MongoResmiQueryBuilderTest/testBuildWithIdAndPaginationAndSort()#io/corbel/lib/queries/builder/QueryBuilder/build()
io/corbel/resources/rem/dao/MongoResmiQueryBuilderTest/testBuildWithIdAndPaginationAndSort()#io/corbel/lib/queries/builder/QueryBuilder/sort(io.corbel.lib.queries.request.Sort)
io/corbel/resources/rem/dao/MongoResmiQueryBuilderTest/testNullListResourceQuery()#org/bson/BSONObject/get(java.lang.String)
io/corbel/resources/rem/dao/MongoResmiQueryBuilderTest/testNullListResourceQuery()#java/lang/Object/equals(java.lang.Object)
io/corbel/resources/rem/dao/MongoResmiQueryBuilderTest/testNullListResourceQuery()#io/corbel/resources/rem/dao/MongoResmiQueryBuilder/relationSubjectId(io.corbel.resources.rem.request.ResourceId)
io/corbel/resources/rem/dao/MongoResmiQueryBuilderTest/testNullListResourceQuery()#org/springframework/data/mongodb/core/query/Query/getSortObject()
io/corbel/resources/rem/dao/MongoResmiQueryBuilderTest/testNullListResourceQuery()#java/util/Map/get(java.lang.Object)
io/corbel/resources/rem/dao/MongoResmiQueryBuilderTest/testNullListResourceQuery()#io/corbel/resources/rem/dao/MongoResmiQueryBuilder/query(java.util.List)
io/corbel/resources/rem/dao/MongoResmiQueryBuilderTest/testNullListResourceQuery()#org/springframework/data/mongodb/core/query/Query/getQueryObject()
io/corbel/resources/rem/dao/MongoResmiQueryBuilderTest/testNullListResourceQuery()#io/corbel/resources/rem/dao/MongoResmiQueryBuilder/MongoResmiQueryBuilder()
io/corbel/resources/rem/dao/MongoResmiQueryBuilderTest/testNullListResourceQuery()#io/corbel/lib/queries/builder/QueryBuilder/build()
io/corbel/resources/rem/dao/MongoResmiQueryBuilderTest/testNullListResourceQuery()#org/bson/BSONObject/toMap()
io/corbel/resources/rem/dao/MongoResmiQueryBuilderTest/testNullListResourceQuery()#org/junit/Assert/assertTrue(boolean)
io/corbel/resources/rem/dao/MongoResmiQueryBuilderTest/testNullListResourceQuery()#io/corbel/lib/queries/builder/QueryBuilder/pagination(io.corbel.lib.queries.request.Pagination)
io/corbel/resources/rem/dao/MongoResmiQueryBuilderTest/testNullListResourceQuery()#io/corbel/lib/queries/builder/QueryBuilder/sort(io.corbel.lib.queries.request.Sort)
io/corbel/resources/rem/i18n/I18nPutRemTest/testPutResource()#io/corbel/resources/rem/i18n/model/I18n/setValue(java.lang.String)
io/corbel/resources/rem/i18n/I18nPutRemTest/testPutResource()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/i18n/I18nPutRemTest/testPutResource()#io/corbel/resources/rem/request/ResourceId/getId()
io/corbel/resources/rem/i18n/I18nPutRemTest/testPutResource()#org/mockito/Mockito/verify(T)
io/corbel/resources/rem/i18n/I18nPutRemTest/testPutResource()#io/corbel/resources/rem/i18n/model/I18n/setKey(java.lang.String)
io/corbel/resources/rem/i18n/I18nPutRemTest/testPutResource()#com/google/gson/Gson/toJsonTree(java.lang.Object)
io/corbel/resources/rem/i18n/I18nPutRemTest/testPutResource()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/resources/rem/i18n/I18nPutRemTest/testPutResource()#io/corbel/resources/rem/i18n/model/I18n/setId(java.lang.String)
io/corbel/resources/rem/i18n/I18nPutRemTest/testPutResource()#org/fest/assertions/api/Assertions/assertThat(T)
io/corbel/resources/rem/i18n/I18nPutRemTest/testPutResource()#io/corbel/resources/rem/i18n/model/I18n/I18n()
io/corbel/resources/rem/i18n/I18nPutRemTest/testPutResource()#org/mockito/Matchers/eq(T)
io/corbel/resources/rem/i18n/I18nPutRemTest/testPutResource()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/resources/rem/i18n/I18nPutRemTest/testPutResource()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/resources/rem/i18n/I18nPutRemTest/testPutResource()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/i18n/I18nPutRemTest/testPutResource()#io/corbel/resources/rem/i18n/model/I18n/setLang(java.lang.String)
io/corbel/resources/rem/i18n/I18nPutRemTest/testPutResource()#io/corbel/resources/rem/request/ResourceId/ResourceId(java.lang.String)
io/corbel/resources/rem/i18n/I18nPutRemTest/testPutResource()#io/corbel/resources/rem/i18n/I18nPutRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)
io/corbel/resources/rem/i18n/I18nPutRemTest/testPutResource()#io/corbel/resources/rem/Rem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)
io/corbel/resources/rem/i18n/I18nPutRemTest/testPutResource()#java/util/Optional/of(T)
io/corbel/resources/rem/i18n/I18nPutRemTest/setup()#io/corbel/resources/rem/i18n/model/I18n/setValue(java.lang.String)
io/corbel/resources/rem/i18n/I18nPutRemTest/setup()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/i18n/I18nPutRemTest/setup()#io/corbel/resources/rem/i18n/model/I18n/setLang(java.lang.String)
io/corbel/resources/rem/i18n/I18nPutRemTest/setup()#io/corbel/resources/rem/service/RemService/getRem(java.lang.String,java.util.List,org.springframework.http.HttpMethod)
io/corbel/resources/rem/i18n/I18nPutRemTest/setup()#java/util/Arrays/asList(T[])
io/corbel/resources/rem/i18n/I18nPutRemTest/setup()#io/corbel/resources/rem/i18n/I18nBaseRem/setRemService(io.corbel.resources.rem.service.RemService)
io/corbel/resources/rem/i18n/I18nPutRemTest/setup()#io/corbel/resources/rem/i18n/I18nPutRem/I18nPutRem(com.google.gson.Gson)
io/corbel/resources/rem/i18n/I18nPutRemTest/setup()#org/mockito/Matchers/eq(T)
io/corbel/resources/rem/i18n/I18nPutRemTest/setup()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/resources/rem/i18n/I18nPutRemTest/setup()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/i18n/I18nPutRemTest/setup()#org/mockito/Matchers/anyString()
io/corbel/resources/rem/i18n/I18nPutRemTest/testPutResourceNotLanguage()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/i18n/I18nPutRemTest/testPutResourceNotLanguage()#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/rem/i18n/I18nPutRemTest/testPutResourceNotLanguage()#javax/ws/rs/core/MultivaluedHashMap/MultivaluedHashMap()
io/corbel/resources/rem/i18n/I18nPutRemTest/testPutResourceNotLanguage()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/resources/rem/i18n/I18nPutRemTest/testPutResourceNotLanguage()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/i18n/I18nPutRemTest/testPutResourceNotLanguage()#io/corbel/resources/rem/request/RequestParameters/getHeaders()
io/corbel/resources/rem/i18n/I18nPutRemTest/testPutResourceNotLanguage()#io/corbel/resources/rem/i18n/model/I18n/setLang(java.lang.String)
io/corbel/resources/rem/i18n/I18nPutRemTest/testPutResourceNotLanguage()#io/corbel/resources/rem/request/ResourceId/ResourceId(java.lang.String)
io/corbel/resources/rem/i18n/I18nPutRemTest/testPutResourceNotLanguage()#io/corbel/resources/rem/i18n/I18nPutRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)
io/corbel/resources/rem/i18n/I18nPutRemTest/testPutResourceNotLanguage()#java/util/Optional/of(T)
io/corbel/resources/rem/i18n/I18nPutRemTest/testPutResourceNotLanguage()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/resources/rem/i18n/I18nPutRemTest/testPutResourceNotValue()#io/corbel/resources/rem/i18n/model/I18n/setValue(java.lang.String)
io/corbel/resources/rem/i18n/I18nPutRemTest/testPutResourceNotValue()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/i18n/I18nPutRemTest/testPutResourceNotValue()#io/corbel/resources/rem/request/ResourceId/ResourceId(java.lang.String)
io/corbel/resources/rem/i18n/I18nPutRemTest/testPutResourceNotValue()#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/rem/i18n/I18nPutRemTest/testPutResourceNotValue()#javax/ws/rs/core/MultivaluedHashMap/MultivaluedHashMap()
io/corbel/resources/rem/i18n/I18nPutRemTest/testPutResourceNotValue()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/resources/rem/i18n/I18nPutRemTest/testPutResourceNotValue()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/i18n/I18nPutRemTest/testPutResourceNotValue()#io/corbel/resources/rem/request/RequestParameters/getHeaders()
io/corbel/resources/rem/i18n/I18nPutRemTest/testPutResourceNotValue()#io/corbel/resources/rem/i18n/I18nPutRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)
io/corbel/resources/rem/i18n/I18nPutRemTest/testPutResourceNotValue()#java/util/Optional/of(T)
io/corbel/resources/rem/i18n/I18nPutRemTest/testPutResourceNotValue()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/iam/api/EmailResourceTest/testGetUserByEmailKO()#org/joda/time/Instant/now()
io/corbel/iam/api/EmailResourceTest/testGetUserByEmailKO()#org/mockito/Mockito/when(T)
io/corbel/iam/api/EmailResourceTest/testGetUserByEmailKO()#io/corbel/iam/service/UserService/findByDomainAndEmail(java.lang.String,java.lang.String)
io/corbel/iam/api/EmailResourceTest/testGetUserByEmailKO()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/iam/api/EmailResourceTest/testGetUserByEmailKO()#javax/ws/rs/client/WebTarget/request()
io/corbel/iam/api/EmailResourceTest/testGetUserByEmailKO()#javax/ws/rs/core/Response/getStatus()
io/corbel/iam/api/EmailResourceTest/testGetUserByEmailKO()#io/corbel/iam/service/UserService/findUserDomain(java.lang.String)
io/corbel/iam/api/EmailResourceTest/testGetUserByEmailKO()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/iam/api/EmailResourceTest/testGetUserByEmailKO()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/iam/api/EmailResourceTest/testGetUserByEmailKO()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/api/EmailResourceTest/testGetUserByEmailKO()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/iam/api/EmailResourceTest/testGetUserByEmailKO()#javax/ws/rs/client/SyncInvoker/get()
io/corbel/iam/api/EmailResourceTest/testGetUserByEmailKO()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/iam/api/EmailResourceTest/testGetUserByEmailKO()#org/joda/time/base/AbstractInstant/toString()
io/corbel/iam/api/EmailResourceTest/testGetUserByEmailKO()#io/corbel/iam/api/UserResourceTestBase/createTestUser()
io/corbel/iam/api/EmailResourceTest/testNotExistsUserByEmail()#org/mockito/Mockito/when(T)
io/corbel/iam/api/EmailResourceTest/testNotExistsUserByEmail()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/iam/api/EmailResourceTest/testNotExistsUserByEmail()#javax/ws/rs/client/WebTarget/request()
io/corbel/iam/api/EmailResourceTest/testNotExistsUserByEmail()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/iam/api/EmailResourceTest/testNotExistsUserByEmail()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/iam/api/EmailResourceTest/testNotExistsUserByEmail()#javax/ws/rs/client/SyncInvoker/head()
io/corbel/iam/api/EmailResourceTest/testNotExistsUserByEmail()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/iam/api/EmailResourceTest/testNotExistsUserByEmail()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/api/EmailResourceTest/testNotExistsUserByEmail()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/iam/api/EmailResourceTest/testNotExistsUserByEmail()#io/corbel/iam/service/UserService/existsByEmailAndDomain(java.lang.String,java.lang.String)
io/corbel/iam/api/EmailResourceTest/testNotExistsUserByEmail()#javax/ws/rs/core/Response/getStatus()
io/corbel/iam/api/EmailResourceTest/testExistsUserByEmail()#org/mockito/Mockito/when(T)
io/corbel/iam/api/EmailResourceTest/testExistsUserByEmail()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/iam/api/EmailResourceTest/testExistsUserByEmail()#javax/ws/rs/client/WebTarget/request()
io/corbel/iam/api/EmailResourceTest/testExistsUserByEmail()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/iam/api/EmailResourceTest/testExistsUserByEmail()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/iam/api/EmailResourceTest/testExistsUserByEmail()#javax/ws/rs/client/SyncInvoker/head()
io/corbel/iam/api/EmailResourceTest/testExistsUserByEmail()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/iam/api/EmailResourceTest/testExistsUserByEmail()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/api/EmailResourceTest/testExistsUserByEmail()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/iam/api/EmailResourceTest/testExistsUserByEmail()#io/corbel/iam/service/UserService/existsByEmailAndDomain(java.lang.String,java.lang.String)
io/corbel/iam/api/EmailResourceTest/testExistsUserByEmail()#javax/ws/rs/core/Response/getStatus()
io/corbel/iam/api/EmailResourceTest/testGetUserByEmailOK()#org/mockito/Mockito/verify(T,org.mockito.verification.VerificationMode)
io/corbel/iam/api/EmailResourceTest/testGetUserByEmailOK()#org/mockito/Mockito/when(T)
io/corbel/iam/api/EmailResourceTest/testGetUserByEmailOK()#org/mockito/Mockito/times(int)
io/corbel/iam/api/EmailResourceTest/testGetUserByEmailOK()#io/corbel/iam/service/UserService/findByDomainAndEmail(java.lang.String,java.lang.String)
io/corbel/iam/api/EmailResourceTest/testGetUserByEmailOK()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/iam/api/EmailResourceTest/testGetUserByEmailOK()#javax/ws/rs/client/WebTarget/request()
io/corbel/iam/api/EmailResourceTest/testGetUserByEmailOK()#javax/ws/rs/client/SyncInvoker/get(java.lang.Class)
io/corbel/iam/api/EmailResourceTest/testGetUserByEmailOK()#io/corbel/iam/api/UserResourceTestBase/createTestUser()
io/corbel/iam/api/EmailResourceTest/testGetUserByEmailOK()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/iam/api/EmailResourceTest/testGetUserByEmailOK()#org/junit/Assert/assertEquals(java.lang.Object,java.lang.Object)
io/corbel/iam/api/EmailResourceTest/testGetUserByEmailOK()#io/corbel/iam/model/Entity/getId()
io/corbel/iam/api/EmailResourceTest/testGetUserByEmailOK()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/api/EmailResourceTest/testGetUserByEmailOK()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/notifications/api/NotificationsErrorResponseFactory/getInstance()#io/corbel/notifications/api/NotificationsErrorResponseFactory/NotificationsErrorResponseFactory()
io/corbel/iam/verifier/UserExistsTokenVerifier/verify(io.corbel.lib.token.reader.TokenReader)#io/corbel/lib/token/reader/TokenReader/getInfo()
io/corbel/iam/verifier/UserExistsTokenVerifier/verify(io.corbel.lib.token.reader.TokenReader)#io/corbel/lib/token/exception/TokenVerificationException/UserNotExists/UserNotExists()
io/corbel/iam/verifier/UserExistsTokenVerifier/verify(io.corbel.lib.token.reader.TokenReader)#io/corbel/lib/token/TokenInfo/getUserId()
io/corbel/iam/verifier/UserExistsTokenVerifier/verify(io.corbel.lib.token.reader.TokenReader)#org/springframework/data/repository/CrudRepository/findOne(ID)
io/corbel/iam/model/ClientIdGenerator/generateId(io.corbel.iam.model.Client)#com/google/common/base/Joiner/join(java.lang.Object,java.lang.Object,java.lang.Object[])
io/corbel/iam/model/ClientIdGenerator/generateId(io.corbel.iam.model.Client)#com/google/common/base/Joiner/on(java.lang.String)
io/corbel/iam/model/ClientIdGenerator/generateId(io.corbel.iam.model.Client)#io/corbel/iam/model/Client/getDomain()
io/corbel/iam/model/ClientIdGenerator/generateId(io.corbel.iam.model.Client)#io/corbel/lib/ws/digest/Digester/digest(java.lang.String)
io/corbel/iam/model/ClientIdGenerator/generateId(io.corbel.iam.model.Client)#io/corbel/iam/model/Client/getName()
io/corbel/oauth/model/User/removeProperty(java.lang.String)#java/util/Map/remove(java.lang.Object)
io/corbel/oauth/model/User/checkPassword(java.lang.String)#io/corbel/oauth/model/User/getSalt()
io/corbel/oauth/model/User/checkPassword(java.lang.String)#java/util/Objects/equals(java.lang.Object,java.lang.Object)
io/corbel/oauth/model/User/checkPassword(java.lang.String)#io/corbel/lib/ws/digest/Digester/digest(java.lang.String)
io/corbel/oauth/model/User/checkPassword(java.lang.String)#io/corbel/lib/ws/digest/DigesterFactory/md5(java.lang.String)
io/corbel/oauth/model/User/getUserWithOnlyId()#io/corbel/oauth/model/User/getId()
io/corbel/oauth/model/User/getUserWithOnlyId()#io/corbel/oauth/model/User/setId(java.lang.String)
io/corbel/oauth/model/User/getUserWithOnlyId()#io/corbel/oauth/model/User/User()
io/corbel/oauth/model/User/getUserProfile()#io/corbel/oauth/model/User/setUsername(java.lang.String)
io/corbel/oauth/model/User/getUserProfile()#io/corbel/oauth/model/User/setAvatarUri(java.lang.String)
io/corbel/oauth/model/User/getUserProfile()#io/corbel/oauth/model/User/User()
io/corbel/oauth/model/User/getUserProfile()#io/corbel/oauth/model/User/setEmail(java.lang.String)
io/corbel/oauth/model/User/getUserProfile()#io/corbel/oauth/model/User/setProperties(java.util.Map)
io/corbel/oauth/model/User/equals(java.lang.Object)#java/util/Objects/equals(java.lang.Object,java.lang.Object)
io/corbel/oauth/model/User/setPassword(java.lang.String)#io/corbel/lib/ws/digest/DigesterFactory/generateSalt()
io/corbel/oauth/model/User/setPassword(java.lang.String)#io/corbel/lib/ws/digest/Digester/digest(java.lang.String)
io/corbel/oauth/model/User/setPassword(java.lang.String)#io/corbel/lib/ws/digest/DigesterFactory/md5(java.lang.String)
io/corbel/oauth/model/User/updateFields(io.corbel.oauth.model.User)#io/corbel/oauth/model/User/getProperties()
io/corbel/oauth/model/User/updateFields(io.corbel.oauth.model.User)#io/corbel/oauth/model/User/setEmailValidated(java.lang.Boolean)
io/corbel/oauth/model/User/updateFields(io.corbel.oauth.model.User)#io/corbel/oauth/model/User/getPassword()
io/corbel/oauth/model/User/updateFields(io.corbel.oauth.model.User)#io/corbel/oauth/model/User/setUsername(java.lang.String)
io/corbel/oauth/model/User/updateFields(io.corbel.oauth.model.User)#java/util/Map/isEmpty()
io/corbel/oauth/model/User/updateFields(io.corbel.oauth.model.User)#java/util/Optional/ofNullable(T)
io/corbel/oauth/model/User/updateFields(io.corbel.oauth.model.User)#java/util/Optional/ifPresent(java.util.function.Consumer)
io/corbel/oauth/model/User/updateFields(io.corbel.oauth.model.User)#java/lang/String/equals(java.lang.Object)
io/corbel/oauth/model/User/updateFields(io.corbel.oauth.model.User)#io/corbel/oauth/model/User/setEmail(java.lang.String)
io/corbel/oauth/model/User/updateFields(io.corbel.oauth.model.User)#io/corbel/oauth/model/User/setRole(io.corbel.oauth.model.Role)
io/corbel/oauth/model/User/updateFields(io.corbel.oauth.model.User)#io/corbel/oauth/model/User/getAvatarUri()
io/corbel/oauth/model/User/updateFields(io.corbel.oauth.model.User)#java/util/Map/entrySet()
io/corbel/oauth/model/User/updateFields(io.corbel.oauth.model.User)#io/corbel/oauth/model/User/addProperty(java.lang.String,java.lang.Object)
io/corbel/oauth/model/User/updateFields(io.corbel.oauth.model.User)#io/corbel/oauth/model/User/getUsername()
io/corbel/oauth/model/User/updateFields(io.corbel.oauth.model.User)#io/corbel/oauth/model/User/getSalt()
io/corbel/oauth/model/User/updateFields(io.corbel.oauth.model.User)#io/corbel/oauth/model/User/getRole()
io/corbel/oauth/model/User/updateFields(io.corbel.oauth.model.User)#io/corbel/oauth/model/User/getEmail()
io/corbel/oauth/model/User/updateFields(io.corbel.oauth.model.User)#java/util/Map/Entry/getValue()
io/corbel/oauth/model/User/updateFields(io.corbel.oauth.model.User)#java/util/Map/Entry/getKey()
io/corbel/oauth/model/User/updateFields(io.corbel.oauth.model.User)#io/corbel/oauth/model/User/removeProperty(java.lang.String)
io/corbel/oauth/model/User/getUser()#io/corbel/oauth/model/User/setSalt(java.lang.String)
io/corbel/oauth/model/User/getUser()#io/corbel/oauth/model/User/setPassword(java.lang.String)
io/corbel/oauth/model/User/getUser()#io/corbel/oauth/model/User/setDomain(java.lang.String)
io/corbel/oauth/model/User/hashCode()#java/util/Objects/hash(java.lang.Object[])
io/corbel/oauth/model/User/addProperty(java.lang.String,java.lang.Object)#java/util/Map/put(K,V)
io/corbel/iam/repository/HasScopesRepositoryBase/removeScopes(ID,java.lang.String[])#org/springframework/data/mongodb/core/MongoOperations/updateFirst(org.springframework.data.mongodb.core.query.Query,org.springframework.data.mongodb.core.query.Update,java.lang.Class)
io/corbel/iam/repository/HasScopesRepositoryBase/removeScopes(ID,java.lang.String[])#org/springframework/data/mongodb/core/query/Criteria/is(java.lang.Object)
io/corbel/iam/repository/HasScopesRepositoryBase/removeScopes(ID,java.lang.String[])#org/springframework/data/mongodb/core/query/Criteria/where(java.lang.String)
io/corbel/iam/repository/HasScopesRepositoryBase/removeScopes(ID,java.lang.String[])#org/springframework/data/mongodb/core/query/Query/query(org.springframework.data.mongodb.core.query.CriteriaDefinition)
io/corbel/iam/repository/HasScopesRepositoryBase/removeScopes(ID,java.lang.String[])#org/springframework/data/mongodb/core/query/Update/Update()
io/corbel/iam/repository/HasScopesRepositoryBase/removeScopes(ID,java.lang.String[])#org/springframework/data/mongodb/core/query/Update/pullAll(java.lang.String,java.lang.Object[])
io/corbel/iam/repository/HasScopesRepositoryBase/addScopes(ID,java.lang.String[])#org/springframework/data/mongodb/core/MongoOperations/updateFirst(org.springframework.data.mongodb.core.query.Query,org.springframework.data.mongodb.core.query.Update,java.lang.Class)
io/corbel/iam/repository/HasScopesRepositoryBase/addScopes(ID,java.lang.String[])#org/springframework/data/mongodb/core/query/Update/addToSet(java.lang.String,java.lang.Object)
io/corbel/iam/repository/HasScopesRepositoryBase/addScopes(ID,java.lang.String[])#org/springframework/data/mongodb/core/query/Criteria/is(java.lang.Object)
io/corbel/iam/repository/HasScopesRepositoryBase/addScopes(ID,java.lang.String[])#org/springframework/data/mongodb/core/query/Criteria/where(java.lang.String)
io/corbel/iam/repository/HasScopesRepositoryBase/addScopes(ID,java.lang.String[])#java/util/Arrays/asList(T[])
io/corbel/iam/repository/HasScopesRepositoryBase/addScopes(ID,java.lang.String[])#org/springframework/data/mongodb/core/query/Query/query(org.springframework.data.mongodb.core.query.CriteriaDefinition)
io/corbel/iam/repository/HasScopesRepositoryBase/addScopes(ID,java.lang.String[])#com/mongodb/BasicDBObject/BasicDBObject(java.lang.String,java.lang.Object)
io/corbel/iam/repository/HasScopesRepositoryBase/addScopes(ID,java.lang.String[])#com/mongodb/BasicDBList/BasicDBList()
io/corbel/iam/repository/HasScopesRepositoryBase/addScopes(ID,java.lang.String[])#org/springframework/data/mongodb/core/query/Update/Update()
io/corbel/iam/repository/HasScopesRepositoryBase/addScopes(ID,java.lang.String[])#java/util/ArrayList/addAll(java.util.Collection)
io/corbel/iam/repository/HasScopesRepositoryBase/removeScopes(java.lang.String[])#org/springframework/data/mongodb/core/MongoOperations/updateMulti(org.springframework.data.mongodb.core.query.Query,org.springframework.data.mongodb.core.query.Update,java.lang.Class)
io/corbel/iam/repository/HasScopesRepositoryBase/removeScopes(java.lang.String[])#org/springframework/data/mongodb/core/query/Criteria/where(java.lang.String)
io/corbel/iam/repository/HasScopesRepositoryBase/removeScopes(java.lang.String[])#java/util/Arrays/asList(T[])
io/corbel/iam/repository/HasScopesRepositoryBase/removeScopes(java.lang.String[])#org/springframework/data/mongodb/core/query/Query/query(org.springframework.data.mongodb.core.query.CriteriaDefinition)
io/corbel/iam/repository/HasScopesRepositoryBase/removeScopes(java.lang.String[])#org/springframework/data/mongodb/core/query/Update/Update()
io/corbel/iam/repository/HasScopesRepositoryBase/removeScopes(java.lang.String[])#org/springframework/data/mongodb/core/query/Criteria/in(java.util.Collection)
io/corbel/iam/repository/HasScopesRepositoryBase/removeScopes(java.lang.String[])#org/springframework/data/mongodb/core/query/Update/pullAll(java.lang.String,java.lang.Object[])
io/corbel/resources/rem/acl/AclDeleteRem/relationWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#io/corbel/resources/rem/request/RequestParameters/getTokenInfo()
io/corbel/resources/rem/acl/AclDeleteRem/relationWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#io/corbel/resources/rem/request/ResourceId/isWildcard()
io/corbel/resources/rem/acl/AclDeleteRem/relationWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#io/corbel/resources/rem/service/AclResourcesService/isAuthorized(java.lang.String,io.corbel.lib.token.TokenInfo,java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.model.AclPermission)
io/corbel/resources/rem/acl/AclDeleteRem/relationWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#io/corbel/lib/ws/api/error/ErrorResponseFactory/forbidden()
io/corbel/resources/rem/acl/AclDeleteRem/relationWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#io/corbel/resources/rem/acl/AclBaseRem/getExcludedRems(java.util.Optional)
io/corbel/resources/rem/acl/AclDeleteRem/relationWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#io/corbel/resources/rem/service/AclResourcesService/deleteRelation(io.corbel.resources.rem.Rem,java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.List)
io/corbel/resources/rem/acl/AclDeleteRem/relationWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#io/corbel/resources/rem/request/RequestParameters/getRequestedDomain()
io/corbel/resources/rem/acl/AclDeleteRem/relationWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#io/corbel/resources/rem/service/RemService/getRem(java.lang.String,java.util.List,org.springframework.http.HttpMethod,java.util.List)
io/corbel/resources/rem/acl/AclDeleteRem/relationWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#io/corbel/resources/rem/request/RequestParameters/getAcceptedMediaTypes()
io/corbel/resources/rem/acl/AclDeleteRem/relationWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#io/corbel/lib/ws/api/error/ErrorResponseFactory/getInstance()
io/corbel/resources/rem/acl/AclDeleteRem/relationWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#io/corbel/lib/ws/api/error/ErrorResponseFactory/methodNotAllowed()
io/corbel/resources/rem/acl/AclDeleteRem/relationWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#io/corbel/lib/ws/api/error/ErrorResponseFactory/unauthorized(java.lang.String)
io/corbel/resources/rem/acl/AclDeleteRem/relationWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#io/corbel/resources/rem/utils/AclUtils/buildMessage(io.corbel.resources.rem.model.AclPermission)
io/corbel/resources/rem/acl/AclDeleteRem/resourceWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#io/corbel/resources/rem/request/RequestParameters/getTokenInfo()
io/corbel/resources/rem/acl/AclDeleteRem/resourceWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#io/corbel/resources/rem/service/AclResourcesService/deleteResource(io.corbel.resources.rem.Rem,java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.List)
io/corbel/resources/rem/acl/AclDeleteRem/resourceWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#io/corbel/resources/rem/service/AclResourcesService/isAuthorized(java.lang.String,io.corbel.lib.token.TokenInfo,java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.model.AclPermission)
io/corbel/resources/rem/acl/AclDeleteRem/resourceWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#io/corbel/lib/ws/api/error/ErrorResponseFactory/forbidden()
io/corbel/resources/rem/acl/AclDeleteRem/resourceWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#io/corbel/resources/rem/acl/AclBaseRem/getExcludedRems(java.util.Optional)
io/corbel/resources/rem/acl/AclDeleteRem/resourceWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#io/corbel/resources/rem/request/RequestParameters/getRequestedDomain()
io/corbel/resources/rem/acl/AclDeleteRem/resourceWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#io/corbel/resources/rem/service/RemService/getRem(java.lang.String,java.util.List,org.springframework.http.HttpMethod,java.util.List)
io/corbel/resources/rem/acl/AclDeleteRem/resourceWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#io/corbel/resources/rem/request/RequestParameters/getAcceptedMediaTypes()
io/corbel/resources/rem/acl/AclDeleteRem/resourceWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#io/corbel/lib/ws/api/error/ErrorResponseFactory/getInstance()
io/corbel/resources/rem/acl/AclDeleteRem/resourceWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#io/corbel/lib/ws/api/error/ErrorResponseFactory/unauthorized(java.lang.String)
io/corbel/resources/rem/acl/AclDeleteRem/resourceWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#io/corbel/resources/rem/utils/AclUtils/buildMessage(io.corbel.resources.rem.model.AclPermission)
io/corbel/notifications/service/NotificationsDispatcher/send(io.corbel.notifications.model.Domain,io.corbel.notifications.model.NotificationTemplate,java.lang.String,java.lang.String[])#io/corbel/notifications/model/NotificationTemplate/getType()
io/corbel/notifications/service/NotificationsDispatcher/send(io.corbel.notifications.model.Domain,io.corbel.notifications.model.NotificationTemplate,java.lang.String,java.lang.String[])#io/corbel/notifications/service/NotificationsService/send(io.corbel.notifications.model.Domain,io.corbel.notifications.model.NotificationTemplate,java.lang.String,java.lang.String[])
io/corbel/notifications/service/NotificationsDispatcher/send(io.corbel.notifications.model.Domain,io.corbel.notifications.model.NotificationTemplate,java.lang.String,java.lang.String[])#io/corbel/notifications/service/NotificationsServiceFactory/getNotificationService(java.lang.String)
io/corbel/iam/service/DefaultScopeService/prepareRules(io.corbel.iam.model.Scope[])#org/apache/commons/lang3/Validate/noNullElements(T[])
io/corbel/iam/service/DefaultScopeService/prepareRules(io.corbel.iam.model.Scope[])#java/util/Set/addAll(java.util.Collection)
io/corbel/iam/service/DefaultScopeService/prepareRules(io.corbel.iam.model.Scope[])#java/util/Map/get(java.lang.Object)
io/corbel/iam/service/DefaultScopeService/prepareRules(io.corbel.iam.model.Scope[])#java/util/HashMap/HashMap()
io/corbel/iam/service/DefaultScopeService/prepareRules(io.corbel.iam.model.Scope[])#io/corbel/iam/model/Scope/getAudience()
io/corbel/iam/service/DefaultScopeService/prepareRules(io.corbel.iam.model.Scope[])#java/util/HashSet/HashSet()
io/corbel/iam/service/DefaultScopeService/prepareRules(io.corbel.iam.model.Scope[])#io/corbel/iam/model/Scope/getRules()
io/corbel/iam/service/DefaultScopeService/prepareRules(io.corbel.iam.model.Scope[])#java/util/Map/put(K,V)
io/corbel/iam/service/DefaultScopeService/createParametersMap(java.lang.String[])#java/util/HashMap/HashMap()
io/corbel/iam/service/DefaultScopeService/createParametersMap(java.lang.String[])#java/util/Map/put(K,V)
io/corbel/iam/service/DefaultScopeService/createParametersMap(java.lang.String[])#java/lang/String/split(java.lang.String)
io/corbel/iam/service/DefaultScopeService/createParametersMap(java.lang.String[])#org/slf4j/Logger/warn(java.lang.String)
io/corbel/iam/service/DefaultScopeService/publishAuthorizationRules(java.lang.String,long,java.util.Set)#java/util/Map/Entry/getValue()
io/corbel/iam/service/DefaultScopeService/publishAuthorizationRules(java.lang.String,long,java.util.Set)#org/apache/commons/lang3/Validate/noNullElements(T)
io/corbel/iam/service/DefaultScopeService/publishAuthorizationRules(java.lang.String,long,java.util.Set)#java/util/Set/size()
io/corbel/iam/service/DefaultScopeService/publishAuthorizationRules(java.lang.String,long,java.util.Set)#io/corbel/lib/ws/auth/repository/AuthorizationRulesRepository/save(java.lang.String,long,com.google.gson.JsonObject[])
io/corbel/iam/service/DefaultScopeService/publishAuthorizationRules(java.lang.String,long,java.util.Set)#org/apache/commons/lang3/Validate/notNull(T)
io/corbel/iam/service/DefaultScopeService/publishAuthorizationRules(java.lang.String,long,java.util.Set)#java/util/Map/entrySet()
io/corbel/iam/service/DefaultScopeService/publishAuthorizationRules(java.lang.String,long,java.util.Set)#io/corbel/lib/ws/auth/repository/AuthorizationRulesRepository/getKeyForAuthorizationRules(java.lang.String,java.lang.String)
io/corbel/iam/service/DefaultScopeService/publishAuthorizationRules(java.lang.String,long,java.util.Set)#io/corbel/iam/service/DefaultScopeService/prepareRules(io.corbel.iam.model.Scope[])
io/corbel/iam/service/DefaultScopeService/publishAuthorizationRules(java.lang.String,long,java.util.Set)#java/util/Set/toArray(T[])
io/corbel/iam/service/DefaultScopeService/publishAuthorizationRules(java.lang.String,long,java.util.Set)#java/util/Map/Entry/getKey()
io/corbel/iam/service/DefaultScopeService/publishAuthorizationRules(java.lang.String,long,java.util.Set)#io/corbel/iam/service/DefaultScopeService/getMillisTo(long)
io/corbel/iam/service/DefaultScopeService/fillScope(io.corbel.iam.model.Scope,java.lang.String,java.lang.String,java.lang.String)#io/corbel/iam/scope/ScopeFillStrategy/fillScope(io.corbel.iam.model.Scope,java.util.Map)
io/corbel/iam/service/DefaultScopeService/fillScope(io.corbel.iam.model.Scope,java.lang.String,java.lang.String,java.lang.String)#io/corbel/iam/service/DefaultScopeService/fillParamsWithCustomParameters(io.corbel.iam.model.Scope,java.util.Map)
io/corbel/iam/service/DefaultScopeService/fillScope(io.corbel.iam.model.Scope,java.lang.String,java.lang.String,java.lang.String)#io/corbel/iam/service/DefaultScopeService/createDefaultParams(java.lang.String[])
io/corbel/iam/service/DefaultScopeService/fillScope(io.corbel.iam.model.Scope,java.lang.String,java.lang.String,java.lang.String)#org/apache/commons/lang3/Validate/notNull(T,java.lang.String,java.lang.Object[])
io/corbel/iam/service/DefaultScopeService/getScopes(java.util.Collection)#io/corbel/iam/service/DefaultScopeService/getScopes(java.lang.String[])
io/corbel/iam/service/DefaultScopeService/getScopes(java.util.Collection)#java/util/Collection/size()
io/corbel/iam/service/DefaultScopeService/getScopes(java.util.Collection)#org/springframework/util/CollectionUtils/isEmpty(java.util.Collection)
io/corbel/iam/service/DefaultScopeService/getScopes(java.util.Collection)#java/util/Collection/toArray(T[])
io/corbel/iam/service/DefaultScopeService/getScopes(java.util.Collection)#java/util/Collections/emptySet()
io/corbel/iam/service/DefaultScopeService/fillScopes(java.util.Set,java.lang.String,java.lang.String,java.lang.String)#java/util/stream/Stream/map(java.util.function.Function)
io/corbel/iam/service/DefaultScopeService/fillScopes(java.util.Set,java.lang.String,java.lang.String,java.lang.String)#java/util/stream/Stream/collect(java.util.stream.Collector)
io/corbel/iam/service/DefaultScopeService/fillScopes(java.util.Set,java.lang.String,java.lang.String,java.lang.String)#java/util/stream/Collectors/toSet()
io/corbel/iam/service/DefaultScopeService/fillScopes(java.util.Set,java.lang.String,java.lang.String,java.lang.String)#java/util/Collection/stream()
io/corbel/iam/service/DefaultScopeService/getMillisTo(long)#java/time/Clock/millis()
io/corbel/iam/service/DefaultScopeService/scopeHasCustomParameters(io.corbel.iam.model.Scope)#io/corbel/iam/model/Scope/getParameters()
io/corbel/iam/service/DefaultScopeService/addParams(java.util.Set,java.util.Optional)#java/util/stream/Stream/map(java.util.function.Function)
io/corbel/iam/service/DefaultScopeService/addParams(java.util.Set,java.util.Optional)#java/util/Optional/get()
io/corbel/iam/service/DefaultScopeService/addParams(java.util.Set,java.util.Optional)#java/util/Map/Entry/getValue()
io/corbel/iam/service/DefaultScopeService/addParams(java.util.Set,java.util.Optional)#java/util/stream/Stream/collect(java.util.stream.Collector)
io/corbel/iam/service/DefaultScopeService/addParams(java.util.Set,java.util.Optional)#java/lang/StringBuilder/append(java.lang.String)
io/corbel/iam/service/DefaultScopeService/addParams(java.util.Set,java.util.Optional)#java/util/stream/Collectors/toSet()
io/corbel/iam/service/DefaultScopeService/addParams(java.util.Set,java.util.Optional)#java/util/Collection/stream()
io/corbel/iam/service/DefaultScopeService/addParams(java.util.Set,java.util.Optional)#java/util/Map/Entry/getKey()
io/corbel/iam/service/DefaultScopeService/addParams(java.util.Set,java.util.Optional)#java/lang/StringBuilder/StringBuilder()
io/corbel/iam/service/DefaultScopeService/addParams(java.util.Set,java.util.Optional)#com/google/gson/JsonObject/entrySet()
io/corbel/iam/service/DefaultScopeService/addParams(java.util.Set,java.util.Optional)#java/util/Optional/isPresent()
io/corbel/iam/service/DefaultScopeService/addParams(java.util.Set,java.util.Optional)#com/google/gson/JsonElement/getAsString()
io/corbel/iam/service/DefaultScopeService/addParams(java.util.Set,java.util.Optional)#java/lang/StringBuilder/toString()
io/corbel/iam/service/DefaultScopeService/addAuthorizationRules(java.lang.String,java.util.Set,boolean)#java/util/Map/Entry/getValue()
io/corbel/iam/service/DefaultScopeService/addAuthorizationRules(java.lang.String,java.util.Set,boolean)#io/corbel/iam/service/DefaultScopeService/getRulesExpireTime(java.lang.String)
io/corbel/iam/service/DefaultScopeService/addAuthorizationRules(java.lang.String,java.util.Set,boolean)#io/corbel/lib/ws/auth/repository/AuthorizationRulesRepository/save(java.lang.String,long,com.google.gson.JsonObject[])
io/corbel/iam/service/DefaultScopeService/addAuthorizationRules(java.lang.String,java.util.Set,boolean)#io/corbel/lib/ws/auth/repository/AuthorizationRulesRepository/existsRules(java.lang.String)
io/corbel/iam/service/DefaultScopeService/addAuthorizationRules(java.lang.String,java.util.Set,boolean)#java/util/Map/Entry/getKey()
io/corbel/iam/service/DefaultScopeService/addAuthorizationRules(java.lang.String,java.util.Set,boolean)#java/util/Map/entrySet()
io/corbel/iam/service/DefaultScopeService/addAuthorizationRules(java.lang.String,java.util.Set,boolean)#io/corbel/lib/ws/auth/repository/AuthorizationRulesRepository/getKeyForAuthorizationRules(java.lang.String,java.lang.String)
io/corbel/iam/service/DefaultScopeService/addAuthorizationRules(java.lang.String,java.util.Set,boolean)#io/corbel/iam/service/DefaultScopeService/prepareRules(io.corbel.iam.model.Scope[])
io/corbel/iam/service/DefaultScopeService/addAuthorizationRules(java.lang.String,java.util.Set,boolean)#java/util/Set/toArray(T[])
io/corbel/iam/service/DefaultScopeService/addAuthorizationRules(java.lang.String,java.util.Set,boolean)#java/util/Set/size()
io/corbel/iam/service/DefaultScopeService/addAuthorizationRules(java.lang.String,java.util.Set,boolean)#io/corbel/lib/ws/auth/repository/AuthorizationRulesRepository/addRules(java.lang.String,com.google.gson.JsonObject[])
io/corbel/iam/service/DefaultScopeService/fillScopeCustomParameters(io.corbel.iam.model.Scope,java.lang.String[])#io/corbel/iam/model/Entity/getId()
io/corbel/iam/service/DefaultScopeService/fillScopeCustomParameters(io.corbel.iam.model.Scope,java.lang.String[])#io/corbel/iam/service/DefaultScopeService/createParametersMap(java.lang.String[])
io/corbel/iam/service/DefaultScopeService/fillScopeCustomParameters(io.corbel.iam.model.Scope,java.lang.String[])#io/corbel/iam/model/Scope/getType()
io/corbel/iam/service/DefaultScopeService/fillScopeCustomParameters(io.corbel.iam.model.Scope,java.lang.String[])#io/corbel/iam/model/Scope/getScopes()
io/corbel/iam/service/DefaultScopeService/fillScopeCustomParameters(io.corbel.iam.model.Scope,java.lang.String[])#com/google/gson/JsonElement/getAsJsonObject()
io/corbel/iam/service/DefaultScopeService/fillScopeCustomParameters(io.corbel.iam.model.Scope,java.lang.String[])#com/google/gson/JsonParser/JsonParser()
io/corbel/iam/service/DefaultScopeService/fillScopeCustomParameters(io.corbel.iam.model.Scope,java.lang.String[])#io/corbel/iam/model/Scope/getRules()
io/corbel/iam/service/DefaultScopeService/fillScopeCustomParameters(io.corbel.iam.model.Scope,java.lang.String[])#com/google/gson/JsonParser/parse(java.lang.String)
io/corbel/iam/service/DefaultScopeService/fillScopeCustomParameters(io.corbel.iam.model.Scope,java.lang.String[])#com/google/gson/JsonElement/toString()
io/corbel/iam/service/DefaultScopeService/fillScopeCustomParameters(io.corbel.iam.model.Scope,java.lang.String[])#java/lang/Iterable/forEach(java.util.function.Consumer)
io/corbel/iam/service/DefaultScopeService/fillScopeCustomParameters(io.corbel.iam.model.Scope,java.lang.String[])#io/corbel/iam/model/Scope/getAudience()
io/corbel/iam/service/DefaultScopeService/fillScopeCustomParameters(io.corbel.iam.model.Scope,java.lang.String[])#com/google/gson/JsonObject/entrySet()
io/corbel/iam/service/DefaultScopeService/fillScopeCustomParameters(io.corbel.iam.model.Scope,java.lang.String[])#io/corbel/iam/model/Scope/Scope(java.lang.String,java.lang.String,java.lang.String,java.util.Set,java.util.Set,com.google.gson.JsonObject)
io/corbel/iam/service/DefaultScopeService/fillScopeCustomParameters(io.corbel.iam.model.Scope,java.lang.String[])#io/corbel/iam/model/Scope/getParameters()
io/corbel/iam/service/DefaultScopeService/delete(java.lang.String)#org/springframework/data/repository/CrudRepository/delete(ID)
io/corbel/iam/service/DefaultScopeService/delete(java.lang.String)#io/corbel/iam/service/EventsService/sendDeleteScope(java.lang.String)
io/corbel/iam/service/DefaultScopeService/getScopes(java.lang.String[])#java/util/stream/Stream/map(java.util.function.Function)
io/corbel/iam/service/DefaultScopeService/getScopes(java.lang.String[])#java/util/ArrayList/ArrayList()
io/corbel/iam/service/DefaultScopeService/getScopes(java.lang.String[])#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
io/corbel/iam/service/DefaultScopeService/getScopes(java.lang.String[])#java/lang/String/split(java.lang.String)
io/corbel/iam/service/DefaultScopeService/getScopes(java.lang.String[])#java/util/stream/Collectors/toSet()
io/corbel/iam/service/DefaultScopeService/getScopes(java.lang.String[])#java/util/Collection/stream()
io/corbel/iam/service/DefaultScopeService/getScopes(java.lang.String[])#java/util/List/size()
io/corbel/iam/service/DefaultScopeService/getScopes(java.lang.String[])#java/util/Optional/ofNullable(T)
io/corbel/iam/service/DefaultScopeService/getScopes(java.lang.String[])#java/util/Optional/ifPresent(java.util.function.Consumer)
io/corbel/iam/service/DefaultScopeService/getScopes(java.lang.String[])#com/google/common/collect/Sets/newHashSet(E[])
io/corbel/iam/service/DefaultScopeService/getScopes(java.lang.String[])#io/corbel/iam/service/DefaultScopeService/getScope(java.lang.String)
io/corbel/iam/service/DefaultScopeService/getScopes(java.lang.String[])#com/google/common/collect/Sets/difference(java.util.Set,java.util.Set)
io/corbel/iam/service/DefaultScopeService/getScopes(java.lang.String[])#com/google/common/collect/Sets/newHashSet(java.lang.Iterable)
io/corbel/iam/service/DefaultScopeService/getScopes(java.lang.String[])#java/util/stream/Stream/collect(java.util.stream.Collector)
io/corbel/iam/service/DefaultScopeService/getRulesExpireTime(java.lang.String)#io/corbel/lib/ws/auth/repository/AuthorizationRulesRepository/getKeyForAuthorizationRules(java.lang.String,java.lang.String)
io/corbel/iam/service/DefaultScopeService/getRulesExpireTime(java.lang.String)#java/util/concurrent/TimeUnit/toMillis(long)
io/corbel/iam/service/DefaultScopeService/getRulesExpireTime(java.lang.String)#io/corbel/lib/ws/auth/repository/AuthorizationRulesRepository/getTimeToExpire(java.lang.String)
io/corbel/iam/service/DefaultScopeService/getScope(java.lang.String)#io/corbel/iam/repository/ScopeRepository/findOne(java.lang.String)
io/corbel/iam/service/DefaultScopeService/create(io.corbel.iam.model.Scope)#io/corbel/iam/model/Entity/getId()
io/corbel/iam/service/DefaultScopeService/create(io.corbel.iam.model.Scope)#java/lang/String/contains(java.lang.CharSequence)
io/corbel/iam/service/DefaultScopeService/create(io.corbel.iam.model.Scope)#org/springframework/data/repository/CrudRepository/save(S)
io/corbel/iam/service/DefaultScopeService/create(io.corbel.iam.model.Scope)#io/corbel/iam/service/EventsService/sendCreateScope(java.lang.String)
io/corbel/iam/service/DefaultScopeService/create(io.corbel.iam.model.Scope)#io/corbel/iam/model/Scope/getIdWithParameters()
io/corbel/iam/service/DefaultScopeService/create(io.corbel.iam.model.Scope)#io/corbel/iam/exception/ScopeAbsentIdException/ScopeAbsentIdException()
io/corbel/iam/service/DefaultScopeService/create(io.corbel.iam.model.Scope)#io/corbel/iam/exception/ScopeNameException/ScopeNameException()
io/corbel/iam/service/DefaultScopeService/expandScopes(java.util.Collection)#java/util/ArrayList/ArrayList(int)
io/corbel/iam/service/DefaultScopeService/expandScopes(java.util.Collection)#java/util/List/remove(int)
io/corbel/iam/service/DefaultScopeService/expandScopes(java.util.Collection)#org/apache/commons/lang3/Validate/noNullElements(T)
io/corbel/iam/service/DefaultScopeService/expandScopes(java.util.Collection)#java/util/Collections/emptySet()
io/corbel/iam/service/DefaultScopeService/expandScopes(java.util.Collection)#java/util/List/isEmpty()
io/corbel/iam/service/DefaultScopeService/expandScopes(java.util.Collection)#java/util/Set/add(E)
io/corbel/iam/service/DefaultScopeService/expandScopes(java.util.Collection)#io/corbel/iam/model/Scope/getScopes()
io/corbel/iam/service/DefaultScopeService/expandScopes(java.util.Collection)#io/corbel/iam/model/Scope/isComposed()
io/corbel/iam/service/DefaultScopeService/expandScopes(java.util.Collection)#io/corbel/iam/service/DefaultScopeService/addParams(java.util.Set,java.util.Optional)
io/corbel/iam/service/DefaultScopeService/expandScopes(java.util.Collection)#java/util/HashSet/HashSet()
io/corbel/iam/service/DefaultScopeService/expandScopes(java.util.Collection)#io/corbel/iam/model/Scope/getParameters()
io/corbel/iam/service/DefaultScopeService/expandScopes(java.util.Collection)#org/springframework/util/CollectionUtils/isEmpty(java.util.Collection)
io/corbel/iam/service/DefaultScopeService/expandScopes(java.util.Collection)#org/apache/commons/lang3/Validate/notNull(T)
io/corbel/iam/service/DefaultScopeService/expandScopes(java.util.Collection)#java/util/Collection/size()
io/corbel/iam/service/DefaultScopeService/expandScopes(java.util.Collection)#io/corbel/iam/service/DefaultScopeService/getScopes(java.util.Collection)
io/corbel/iam/service/DefaultScopeService/expandScopes(java.util.Collection)#java/util/Optional/ofNullable(T)
io/corbel/iam/service/DefaultScopeService/expandScopes(java.util.Collection)#java/util/List/addAll(java.util.Collection)
io/corbel/iam/service/DefaultScopeService/addAuthorizationRulesForPublicAccess(java.lang.String,java.util.Set)#java/util/stream/Stream/collect(java.util.stream.Collector)
io/corbel/iam/service/DefaultScopeService/addAuthorizationRulesForPublicAccess(java.lang.String,java.util.Set)#java/util/stream/Collectors/toSet()
io/corbel/iam/service/DefaultScopeService/addAuthorizationRulesForPublicAccess(java.lang.String,java.util.Set)#java/util/Collection/stream()
io/corbel/iam/service/DefaultScopeService/addAuthorizationRulesForPublicAccess(java.lang.String,java.util.Set)#io/corbel/iam/service/DefaultScopeService/addAuthorizationRules(java.lang.String,java.util.Set,boolean)
io/corbel/iam/service/DefaultScopeService/addAuthorizationRulesForPublicAccess(java.lang.String,java.util.Set)#java/util/stream/Stream/map(java.util.function.Function)
io/corbel/iam/service/DefaultScopeService/fillParamsWithCustomParameters(io.corbel.iam.model.Scope,java.util.Map)#java/util/Map/Entry/getValue()
io/corbel/iam/service/DefaultScopeService/fillParamsWithCustomParameters(io.corbel.iam.model.Scope,java.util.Map)#java/util/Map/Entry/getKey()
io/corbel/iam/service/DefaultScopeService/fillParamsWithCustomParameters(io.corbel.iam.model.Scope,java.util.Map)#com/google/gson/JsonObject/entrySet()
io/corbel/iam/service/DefaultScopeService/fillParamsWithCustomParameters(io.corbel.iam.model.Scope,java.util.Map)#java/util/Map/put(K,V)
io/corbel/iam/service/DefaultScopeService/fillParamsWithCustomParameters(io.corbel.iam.model.Scope,java.util.Map)#com/google/gson/JsonElement/getAsString()
io/corbel/iam/service/DefaultScopeService/fillParamsWithCustomParameters(io.corbel.iam.model.Scope,java.util.Map)#io/corbel/iam/model/Scope/getParameters()
io/corbel/iam/service/DefaultScopeService/addAuthorizationRules(java.lang.String,java.util.Set)#io/corbel/iam/service/DefaultScopeService/addAuthorizationRules(java.lang.String,java.util.Set,boolean)
io/corbel/iam/service/DefaultScopeService/createDefaultParams(java.lang.String[])#java/util/HashMap/HashMap(int)
io/corbel/iam/service/DefaultScopeService/createDefaultParams(java.lang.String[])#java/util/Map/put(K,V)
io/corbel/evci/service/DefaultEventService/registerEvent(java.lang.String,com.fasterxml.jackson.databind.JsonNode)#java/util/function/Function/apply(T)
io/corbel/evci/service/DefaultEventService/registerEvent(java.lang.String,com.fasterxml.jackson.databind.JsonNode)#org/springframework/amqp/core/AmqpTemplate/convertAndSend(java.lang.String,java.lang.String,java.lang.Object)
io/corbel/evci/eventbus/EvciEventHandlerTest/testGetEventType()#io/corbel/evci/eventbus/EvciEventHandler/getEventType()
io/corbel/evci/eventbus/EvciEventHandlerTest/testGetEventType()#org/fest/assertions/api/Assertions/assertThat(T)
io/corbel/evci/eventbus/EvciEventHandlerTest/testGetEventType()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/evci/eventbus/EvciEventHandlerTest/setUp()#com/fasterxml/jackson/databind/ObjectMapper/ObjectMapper()
io/corbel/evci/eventbus/EvciEventHandlerTest/setUp()#io/corbel/evci/eventbus/EvciEventHandler/EvciEventHandler(io.corbel.evci.service.EventsService,com.fasterxml.jackson.databind.ObjectMapper)
io/corbel/evci/eventbus/EvciEventHandlerTest/testData()#com/fasterxml/jackson/databind/JsonNode/asText()
io/corbel/evci/eventbus/EvciEventHandlerTest/testData()#org/mockito/Mockito/verify(T,org.mockito.verification.VerificationMode)
io/corbel/evci/eventbus/EvciEventHandlerTest/testData()#org/mockito/ArgumentCaptor/getValue()
io/corbel/evci/eventbus/EvciEventHandlerTest/testData()#io/corbel/evci/service/EventsService/registerEvent(java.lang.String,com.fasterxml.jackson.databind.JsonNode)
io/corbel/evci/eventbus/EvciEventHandlerTest/testData()#io/corbel/event/EvciEvent/setType(java.lang.String)
io/corbel/evci/eventbus/EvciEventHandlerTest/testData()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/evci/eventbus/EvciEventHandlerTest/testData()#com/fasterxml/jackson/databind/JsonNode/asInt()
io/corbel/evci/eventbus/EvciEventHandlerTest/testData()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/evci/eventbus/EvciEventHandlerTest/testData()#io/corbel/event/EvciEvent/EvciEvent()
io/corbel/evci/eventbus/EvciEventHandlerTest/testData()#io/corbel/evci/eventbus/EvciEventHandler/handle(io.corbel.event.EvciEvent)
io/corbel/evci/eventbus/EvciEventHandlerTest/testData()#com/fasterxml/jackson/databind/JsonNode/path(java.lang.String)
io/corbel/evci/eventbus/EvciEventHandlerTest/testData()#org/mockito/Mockito/times(int)
io/corbel/evci/eventbus/EvciEventHandlerTest/testData()#org/mockito/ArgumentCaptor/forClass(java.lang.Class)
io/corbel/evci/eventbus/EvciEventHandlerTest/testData()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/evci/eventbus/EvciEventHandlerTest/testData()#org/mockito/ArgumentCaptor/capture()
io/corbel/evci/eventbus/EvciEventHandlerTest/testData()#org/mockito/Matchers/eq(T)
io/corbel/evci/eventbus/EvciEventHandlerTest/testData()#io/corbel/eventbus/EventWithSpecificDomain/setDomain(java.lang.String)
io/corbel/evci/eventbus/EvciEventHandlerTest/testData()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/evci/eventbus/EvciEventHandlerTest/testData()#io/corbel/event/EvciEvent/setData(java.lang.String)
io/corbel/resources/rem/resmi/ResmiGetRem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/resources/rem/request/RequestParameters/getOptionalApiParameters()
io/corbel/resources/rem/resmi/ResmiGetRem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#java/util/Optional/get()
io/corbel/resources/rem/resmi/ResmiGetRem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/resources/rem/request/ResourceId/getId()
io/corbel/resources/rem/resmi/ResmiGetRem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#java/util/Optional/flatMap(java.util.function.Function)
io/corbel/resources/rem/resmi/ResmiGetRem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/resources/rem/service/ResmiService/findRelationDistinct(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,java.util.List,boolean)
io/corbel/resources/rem/resmi/ResmiGetRem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/lib/ws/api/error/ErrorResponseFactory/badRequest(io.corbel.lib.ws.model.Error)
io/corbel/resources/rem/resmi/ResmiGetRem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)
io/corbel/resources/rem/resmi/ResmiGetRem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/lib/ws/api/error/ErrorResponseFactory/getInstance()
io/corbel/resources/rem/resmi/ResmiGetRem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/resources/rem/resmi/ResmiGetRem/getDistinctFields(java.lang.String)
io/corbel/resources/rem/resmi/ResmiGetRem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/lib/ws/api/error/ErrorResponseFactory/serverError(java.lang.Throwable)
io/corbel/resources/rem/resmi/ResmiGetRem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/resources/rem/service/ResmiService/aggregate(io.corbel.resources.rem.model.ResourceUri,io.corbel.resources.rem.request.CollectionParameters)
io/corbel/resources/rem/resmi/ResmiGetRem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/resources/rem/request/RequestParameters/getRequestedDomain()
io/corbel/resources/rem/resmi/ResmiGetRem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#java/lang/Throwable/getMessage()
io/corbel/resources/rem/resmi/ResmiGetRem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/resources/rem/request/RequestParameters/getCustomParameterValue(java.lang.String)
io/corbel/resources/rem/resmi/ResmiGetRem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/resources/rem/resmi/AbstractResmiRem/buildResponseWithCustomEtag(com.google.gson.JsonElement)
io/corbel/resources/rem/resmi/ResmiGetRem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/lib/ws/model/Error/Error(java.lang.String,java.lang.String)
io/corbel/resources/rem/resmi/ResmiGetRem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/resources/rem/service/ResmiService/findRelation(io.corbel.resources.rem.model.ResourceUri,java.util.Optional)
io/corbel/resources/rem/resmi/ResmiGetRem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/resources/rem/resmi/AbstractResmiRem/buildRelationUri(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Optional)
io/corbel/resources/rem/resmi/ResmiGetRem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional)#io/corbel/resources/rem/request/RequestParameters/getOptionalApiParameters()
io/corbel/resources/rem/resmi/ResmiGetRem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional)#java/util/Optional/get()
io/corbel/resources/rem/resmi/ResmiGetRem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional)#io/corbel/resources/rem/resmi/AbstractResmiRem/buildCollectionUri(java.lang.String,java.lang.String)
io/corbel/resources/rem/resmi/ResmiGetRem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional)#io/corbel/lib/ws/api/error/ErrorResponseFactory/badRequest(io.corbel.lib.ws.model.Error)
io/corbel/resources/rem/resmi/ResmiGetRem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional)#org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)
io/corbel/resources/rem/resmi/ResmiGetRem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional)#io/corbel/resources/rem/service/ResmiService/findCollection(io.corbel.resources.rem.model.ResourceUri,java.util.Optional)
io/corbel/resources/rem/resmi/ResmiGetRem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional)#io/corbel/lib/ws/api/error/ErrorResponseFactory/getInstance()
io/corbel/resources/rem/resmi/ResmiGetRem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional)#io/corbel/resources/rem/resmi/ResmiGetRem/getDistinctFields(java.lang.String)
io/corbel/resources/rem/resmi/ResmiGetRem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional)#io/corbel/lib/ws/api/error/ErrorResponseFactory/serverError(java.lang.Throwable)
io/corbel/resources/rem/resmi/ResmiGetRem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional)#io/corbel/resources/rem/service/ResmiService/aggregate(io.corbel.resources.rem.model.ResourceUri,io.corbel.resources.rem.request.CollectionParameters)
io/corbel/resources/rem/resmi/ResmiGetRem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional)#java/util/Optional/flatMap(java.util.function.Function)
io/corbel/resources/rem/resmi/ResmiGetRem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional)#io/corbel/resources/rem/service/ResmiService/findCollectionDistinct(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,java.util.List,boolean)
io/corbel/resources/rem/resmi/ResmiGetRem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional)#io/corbel/resources/rem/request/RequestParameters/getRequestedDomain()
io/corbel/resources/rem/resmi/ResmiGetRem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional)#java/lang/Throwable/getMessage()
io/corbel/resources/rem/resmi/ResmiGetRem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional)#io/corbel/resources/rem/request/RequestParameters/getCustomParameterValue(java.lang.String)
io/corbel/resources/rem/resmi/ResmiGetRem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional)#io/corbel/resources/rem/resmi/AbstractResmiRem/buildResponseWithCustomEtag(com.google.gson.JsonElement)
io/corbel/resources/rem/resmi/ResmiGetRem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional)#io/corbel/lib/ws/model/Error/Error(java.lang.String,java.lang.String)
io/corbel/resources/rem/resmi/ResmiGetRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/resources/rem/resmi/AbstractResmiRem/buildResourceUri(java.lang.String,java.lang.String,java.lang.String)
io/corbel/resources/rem/resmi/ResmiGetRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/resources/rem/request/ResourceId/getId()
io/corbel/resources/rem/resmi/ResmiGetRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/resources/rem/request/RequestParameters/getRequestedDomain()
io/corbel/resources/rem/resmi/ResmiGetRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/resources/rem/service/ResmiService/findResource(io.corbel.resources.rem.model.ResourceUri)
io/corbel/resources/rem/resmi/ResmiGetRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/resources/rem/resmi/AbstractResmiRem/buildResponseWithCustomEtag(com.google.gson.JsonElement)
io/corbel/resources/rem/resmi/ResmiGetRem/getDistinctFields(java.lang.String)#java/util/stream/Stream/map(java.util.function.Function)
io/corbel/resources/rem/resmi/ResmiGetRem/getDistinctFields(java.lang.String)#java/lang/String/split(java.lang.String)
io/corbel/resources/rem/resmi/ResmiGetRem/getDistinctFields(java.lang.String)#java/util/stream/Stream/collect(java.util.stream.Collector)
io/corbel/resources/rem/resmi/ResmiGetRem/getDistinctFields(java.lang.String)#java/util/Arrays/asList(T[])
io/corbel/resources/rem/resmi/ResmiGetRem/getDistinctFields(java.lang.String)#java/util/Collection/stream()
io/corbel/resources/rem/resmi/ResmiGetRem/getDistinctFields(java.lang.String)#java/util/stream/Collectors/toList()
io/corbel/iam/service/DefaultRefreshTokenService/userTag(java.lang.String)#java/text/MessageFormat/format(java.lang.String,java.lang.Object[])
io/corbel/iam/service/DefaultRefreshTokenService/invalidateRefreshToken(java.lang.String,java.util.Optional)#java/util/Optional/get()
io/corbel/iam/service/DefaultRefreshTokenService/invalidateRefreshToken(java.lang.String,java.util.Optional)#io/corbel/iam/service/DefaultRefreshTokenService/userTag(java.lang.String)
io/corbel/iam/service/DefaultRefreshTokenService/invalidateRefreshToken(java.lang.String,java.util.Optional)#java/util/Optional/isPresent()
io/corbel/iam/service/DefaultRefreshTokenService/invalidateRefreshToken(java.lang.String,java.util.Optional)#io/corbel/lib/token/repository/CustomOneTimeAccessTokenRepository/deleteByTags(java.lang.String[])
io/corbel/iam/service/DefaultRefreshTokenService/invalidateRefreshToken(java.lang.String,java.util.Optional)#io/corbel/iam/service/DefaultRefreshTokenService/accessTokenTag(java.lang.String)
io/corbel/iam/service/DefaultRefreshTokenService/createRefreshToken(io.corbel.iam.auth.AuthorizationRequestContext,java.lang.String)#io/corbel/iam/auth/AuthorizationRequestContext/getDeviceId()
io/corbel/iam/service/DefaultRefreshTokenService/createRefreshToken(io.corbel.iam.auth.AuthorizationRequestContext,java.lang.String)#io/corbel/iam/model/Entity/getId()
io/corbel/iam/service/DefaultRefreshTokenService/createRefreshToken(io.corbel.iam.auth.AuthorizationRequestContext,java.lang.String)#io/corbel/lib/token/TokenGrant/getAccessToken()
io/corbel/iam/service/DefaultRefreshTokenService/createRefreshToken(io.corbel.iam.auth.AuthorizationRequestContext,java.lang.String)#io/corbel/iam/auth/AuthorizationRequestContext/hasPrincipal()
io/corbel/iam/service/DefaultRefreshTokenService/createRefreshToken(io.corbel.iam.auth.AuthorizationRequestContext,java.lang.String)#io/corbel/lib/token/TokenInfo/Builder/setGroups(java.util.Collection)
io/corbel/iam/service/DefaultRefreshTokenService/createRefreshToken(io.corbel.iam.auth.AuthorizationRequestContext,java.lang.String)#io/corbel/iam/service/DefaultRefreshTokenService/userTag(io.corbel.iam.auth.AuthorizationRequestContext)
io/corbel/iam/service/DefaultRefreshTokenService/createRefreshToken(io.corbel.iam.auth.AuthorizationRequestContext,java.lang.String)#java/lang/System/currentTimeMillis()
io/corbel/iam/service/DefaultRefreshTokenService/createRefreshToken(io.corbel.iam.auth.AuthorizationRequestContext,java.lang.String)#org/apache/commons/lang3/StringUtils/isEmpty(java.lang.CharSequence)
io/corbel/iam/service/DefaultRefreshTokenService/createRefreshToken(io.corbel.iam.auth.AuthorizationRequestContext,java.lang.String)#io/corbel/iam/service/DefaultRefreshTokenService/accessTokenTag(java.lang.String)
io/corbel/iam/service/DefaultRefreshTokenService/createRefreshToken(io.corbel.iam.auth.AuthorizationRequestContext,java.lang.String)#io/corbel/lib/token/TokenInfo/Builder/setClientId(java.lang.String)
io/corbel/iam/service/DefaultRefreshTokenService/createRefreshToken(io.corbel.iam.auth.AuthorizationRequestContext,java.lang.String)#io/corbel/lib/token/TokenInfo/newBuilder()
io/corbel/iam/service/DefaultRefreshTokenService/createRefreshToken(io.corbel.iam.auth.AuthorizationRequestContext,java.lang.String)#io/corbel/lib/token/TokenInfo/Builder/setUserId(java.lang.String)
io/corbel/iam/service/DefaultRefreshTokenService/createRefreshToken(io.corbel.iam.auth.AuthorizationRequestContext,java.lang.String)#io/corbel/lib/token/TokenInfo/Builder/setType(io.corbel.lib.token.model.TokenType)
io/corbel/iam/service/DefaultRefreshTokenService/createRefreshToken(io.corbel.iam.auth.AuthorizationRequestContext,java.lang.String)#io/corbel/iam/model/User/getGroups()
io/corbel/iam/service/DefaultRefreshTokenService/createRefreshToken(io.corbel.iam.auth.AuthorizationRequestContext,java.lang.String)#io/corbel/lib/token/TokenInfo/Builder/setState(java.lang.String)
io/corbel/iam/service/DefaultRefreshTokenService/createRefreshToken(io.corbel.iam.auth.AuthorizationRequestContext,java.lang.String)#io/corbel/lib/token/TokenInfo/Builder/setDeviceId(java.lang.String)
io/corbel/iam/service/DefaultRefreshTokenService/createRefreshToken(io.corbel.iam.auth.AuthorizationRequestContext,java.lang.String)#java/lang/Long/toString(long)
io/corbel/iam/service/DefaultRefreshTokenService/createRefreshToken(io.corbel.iam.auth.AuthorizationRequestContext,java.lang.String)#io/corbel/lib/token/TokenInfo/Builder/build()
io/corbel/iam/service/DefaultRefreshTokenService/createRefreshToken(io.corbel.iam.auth.AuthorizationRequestContext,java.lang.String)#io/corbel/lib/token/TokenInfo/Builder/setOneUseToken(boolean)
io/corbel/iam/service/DefaultRefreshTokenService/createRefreshToken(io.corbel.iam.auth.AuthorizationRequestContext,java.lang.String)#io/corbel/iam/auth/AuthorizationRequestContext/getIssuerClientId()
io/corbel/iam/service/DefaultRefreshTokenService/createRefreshToken(io.corbel.iam.auth.AuthorizationRequestContext,java.lang.String)#io/corbel/lib/token/factory/TokenFactory/createToken(io.corbel.lib.token.TokenInfo,long,java.lang.String[])
io/corbel/iam/service/DefaultRefreshTokenService/createRefreshToken(io.corbel.iam.auth.AuthorizationRequestContext,java.lang.String)#io/corbel/iam/auth/AuthorizationRequestContext/getPrincipal()
io/corbel/iam/service/DefaultRefreshTokenService/userTag(io.corbel.iam.auth.AuthorizationRequestContext)#io/corbel/iam/auth/AuthorizationRequestContext/getPrincipal()
io/corbel/iam/service/DefaultRefreshTokenService/userTag(io.corbel.iam.auth.AuthorizationRequestContext)#io/corbel/iam/model/Entity/getId()
io/corbel/iam/service/DefaultRefreshTokenService/userTag(io.corbel.iam.auth.AuthorizationRequestContext)#io/corbel/iam/service/DefaultRefreshTokenService/userTag(java.lang.String)
io/corbel/iam/service/DefaultRefreshTokenService/getUserFromRefreshToken(java.lang.String)#io/corbel/lib/token/reader/TokenReader/getInfo()
io/corbel/iam/service/DefaultRefreshTokenService/getUserFromRefreshToken(java.lang.String)#io/corbel/lib/token/TokenInfo/getUserId()
io/corbel/iam/service/DefaultRefreshTokenService/getUserFromRefreshToken(java.lang.String)#org/springframework/data/repository/CrudRepository/findOne(ID)
io/corbel/iam/service/DefaultRefreshTokenService/getUserFromRefreshToken(java.lang.String)#io/corbel/lib/token/parser/TokenParser/parseAndVerify(java.lang.String)
io/corbel/iam/service/DefaultRefreshTokenService/accessTokenTag(java.lang.String)#java/text/MessageFormat/format(java.lang.String,java.lang.Object[])
io/corbel/iam/auth/rule/MaxExpireAuthorizationRuleTest/testUnauthorized()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/auth/rule/MaxExpireAuthorizationRuleTest/testUnauthorized()#io/corbel/iam/auth/rule/MaxExpireAuthorizationRule/process(io.corbel.iam.auth.AuthorizationRequestContext)
io/corbel/iam/auth/rule/MaxExpireAuthorizationRuleTest/testUnauthorized()#org/mockito/Mockito/when(T)
io/corbel/iam/auth/rule/MaxExpireAuthorizationRuleTest/testUnauthorized()#java/util/Collections/singletonMap(K,V)
io/corbel/iam/auth/rule/MaxExpireAuthorizationRuleTest/testUnauthorized()#io/corbel/iam/auth/AuthorizationRequestContext/getAuthorizationExpiration()
io/corbel/iam/auth/rule/MaxExpireAuthorizationRuleTest/testUnauthorized()#java/lang/System/currentTimeMillis()
io/corbel/iam/auth/rule/MaxExpireAuthorizationRuleTest/testUnauthorized()#io/corbel/iam/model/Domain/getCapabilities()
io/corbel/iam/auth/rule/MaxExpireAuthorizationRuleTest/testOk()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/auth/rule/MaxExpireAuthorizationRuleTest/testOk()#io/corbel/iam/auth/rule/MaxExpireAuthorizationRule/process(io.corbel.iam.auth.AuthorizationRequestContext)
io/corbel/iam/auth/rule/MaxExpireAuthorizationRuleTest/testOk()#org/mockito/Mockito/when(T)
io/corbel/iam/auth/rule/MaxExpireAuthorizationRuleTest/testOk()#io/corbel/iam/auth/AuthorizationRequestContext/getAuthorizationExpiration()
io/corbel/iam/auth/rule/MaxExpireAuthorizationRuleTest/testOk()#java/lang/System/currentTimeMillis()
io/corbel/iam/auth/rule/MaxExpireAuthorizationRuleTest/testWrongExpirationTimeWithoutCapabilityDefined()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/auth/rule/MaxExpireAuthorizationRuleTest/testWrongExpirationTimeWithoutCapabilityDefined()#java/util/Collections/emptyMap()
io/corbel/iam/auth/rule/MaxExpireAuthorizationRuleTest/testWrongExpirationTimeWithoutCapabilityDefined()#org/mockito/Mockito/when(T)
io/corbel/iam/auth/rule/MaxExpireAuthorizationRuleTest/testWrongExpirationTimeWithoutCapabilityDefined()#org/mockito/Mockito/verify(T)
io/corbel/iam/auth/rule/MaxExpireAuthorizationRuleTest/testWrongExpirationTimeWithoutCapabilityDefined()#io/corbel/iam/auth/AuthorizationRequestContext/getAuthorizationExpiration()
io/corbel/iam/auth/rule/MaxExpireAuthorizationRuleTest/testWrongExpirationTimeWithoutCapabilityDefined()#org/mockito/Matchers/anyLong()
io/corbel/iam/auth/rule/MaxExpireAuthorizationRuleTest/testWrongExpirationTimeWithoutCapabilityDefined()#java/lang/System/currentTimeMillis()
io/corbel/iam/auth/rule/MaxExpireAuthorizationRuleTest/testWrongExpirationTimeWithoutCapabilityDefined()#io/corbel/iam/model/Domain/getCapabilities()
io/corbel/iam/auth/rule/MaxExpireAuthorizationRuleTest/testWrongExpirationTimeWithoutCapabilityDefined()#io/corbel/iam/auth/AuthorizationRequestContext/setAuthorizationExpiration(long)
io/corbel/iam/auth/rule/MaxExpireAuthorizationRuleTest/testWrongExpirationTimeWithoutCapabilityDefined()#io/corbel/iam/auth/rule/MaxExpireAuthorizationRule/process(io.corbel.iam.auth.AuthorizationRequestContext)
io/corbel/iam/auth/rule/MaxExpireAuthorizationRuleTest/testWrongExpirationTimeWithCapabilityDefined()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/auth/rule/MaxExpireAuthorizationRuleTest/testWrongExpirationTimeWithCapabilityDefined()#org/mockito/Mockito/when(T)
io/corbel/iam/auth/rule/MaxExpireAuthorizationRuleTest/testWrongExpirationTimeWithCapabilityDefined()#org/mockito/Mockito/verify(T)
io/corbel/iam/auth/rule/MaxExpireAuthorizationRuleTest/testWrongExpirationTimeWithCapabilityDefined()#java/util/Collections/singletonMap(K,V)
io/corbel/iam/auth/rule/MaxExpireAuthorizationRuleTest/testWrongExpirationTimeWithCapabilityDefined()#io/corbel/iam/auth/AuthorizationRequestContext/getAuthorizationExpiration()
io/corbel/iam/auth/rule/MaxExpireAuthorizationRuleTest/testWrongExpirationTimeWithCapabilityDefined()#org/mockito/Matchers/anyLong()
io/corbel/iam/auth/rule/MaxExpireAuthorizationRuleTest/testWrongExpirationTimeWithCapabilityDefined()#java/lang/System/currentTimeMillis()
io/corbel/iam/auth/rule/MaxExpireAuthorizationRuleTest/testWrongExpirationTimeWithCapabilityDefined()#io/corbel/iam/model/Domain/getCapabilities()
io/corbel/iam/auth/rule/MaxExpireAuthorizationRuleTest/testWrongExpirationTimeWithCapabilityDefined()#io/corbel/iam/auth/AuthorizationRequestContext/setAuthorizationExpiration(long)
io/corbel/iam/auth/rule/MaxExpireAuthorizationRuleTest/testWrongExpirationTimeWithCapabilityDefined()#io/corbel/iam/auth/rule/MaxExpireAuthorizationRule/process(io.corbel.iam.auth.AuthorizationRequestContext)
io/corbel/iam/auth/rule/MaxExpireAuthorizationRuleTest/setup()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/auth/rule/MaxExpireAuthorizationRuleTest/setup()#io/corbel/iam/auth/AuthorizationRequestContext/getRequestedDomain()
io/corbel/iam/auth/rule/MaxExpireAuthorizationRuleTest/setup()#io/corbel/iam/auth/rule/MaxExpireAuthorizationRule/MaxExpireAuthorizationRule(int)
io/corbel/iam/auth/rule/MaxExpireAuthorizationRuleTest/setup()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/iam/auth/rule/MaxExpireAuthorizationRuleTest/setup()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/plugin/ResmiRemPlugin/console()#org/springframework/beans/factory/BeanFactory/getBean(java.lang.Class)
io/corbel/resources/rem/plugin/ResmiRemPlugin/addHealthCheck(io.corbel.resources.rem.plugin.HealthCheckRegistry)#io/corbel/resources/rem/plugin/HealthCheckRegistry/addHealthCheck(java.lang.String,com.codahale.metrics.health.HealthCheck)
io/corbel/resources/rem/plugin/ResmiRemPlugin/addHealthCheck(io.corbel.resources.rem.plugin.HealthCheckRegistry)#org/springframework/beans/factory/BeanFactory/getBean(java.lang.String,java.lang.Class)
io/corbel/resources/rem/plugin/ResmiRemPlugin/register(io.corbel.resources.rem.RemRegistry)#org/springframework/http/MediaType/valueOf(java.lang.String)
io/corbel/resources/rem/plugin/ResmiRemPlugin/register(io.corbel.resources.rem.RemRegistry)#org/springframework/beans/factory/BeanFactory/getBean(java.lang.String,java.lang.Class)
io/corbel/resources/rem/plugin/ResmiRemPlugin/register(io.corbel.resources.rem.RemRegistry)#io/corbel/resources/rem/RemRegistry/registerRem(io.corbel.resources.rem.Rem,java.lang.String,org.springframework.http.MediaType,org.springframework.http.HttpMethod[])
io/corbel/resources/rem/plugin/ResmiRemPlugin/init()#org/springframework/context/annotation/AnnotationConfigApplicationContext/AnnotationConfigApplicationContext(java.lang.Class<?>[])
io/corbel/resources/rem/plugin/ResmiRemPlugin/init()#io/corbel/resources/rem/service/ServiceLocator/publish(java.lang.Class,T)
io/corbel/resources/rem/plugin/ResmiRemPlugin/init()#io/corbel/resources/rem/plugin/RemPlugin/init()
io/corbel/resources/rem/plugin/ResmiRemPlugin/init()#org/slf4j/Logger/info(java.lang.String)
io/corbel/resources/rem/plugin/ResmiRemPlugin/init()#org/springframework/beans/factory/BeanFactory/getBean(java.lang.Class)
io/corbel/resources/rem/plugin/ResmiRemPlugin/init()#io/corbel/lib/config/ConfigurationHelper/setConfigurationNamespace(java.lang.String)
io/corbel/iam/model/UserToken/equals(java.lang.Object)#java/util/Date/equals(java.lang.Object)
io/corbel/iam/model/UserToken/equals(java.lang.Object)#java/lang/String/equals(java.lang.Object)
io/corbel/iam/model/UserToken/equals(java.lang.Object)#java/util/Set/equals(java.lang.Object)
io/corbel/iam/model/UserToken/equals(java.lang.Object)#java/lang/Object/getClass()
io/corbel/iam/model/UserToken/hashCode()#java/lang/String/hashCode()
io/corbel/iam/model/UserToken/hashCode()#java/util/Set/hashCode()
io/corbel/iam/model/UserToken/hashCode()#java/util/Date/hashCode()
io/corbel/iam/service/DefaultIdentityService/deleteUserIdentities(io.corbel.iam.model.User)#io/corbel/iam/model/Entity/getId()
io/corbel/iam/service/DefaultIdentityService/deleteUserIdentities(io.corbel.iam.model.User)#io/corbel/iam/model/User/getDomain()
io/corbel/iam/service/DefaultIdentityService/deleteUserIdentities(io.corbel.iam.model.User)#io/corbel/iam/repository/IdentityRepositoryCustom/deleteByUserIdAndDomain(java.lang.String,java.lang.String)
io/corbel/iam/service/DefaultIdentityService/findUserIdentities(io.corbel.iam.model.User)#io/corbel/iam/model/Entity/getId()
io/corbel/iam/service/DefaultIdentityService/findUserIdentities(io.corbel.iam.model.User)#io/corbel/iam/model/User/getDomain()
io/corbel/iam/service/DefaultIdentityService/findUserIdentities(io.corbel.iam.model.User)#io/corbel/iam/repository/IdentityRepository/findByUserIdAndDomain(java.lang.String,java.lang.String)
io/corbel/iam/service/DefaultIdentityService/addIdentity(io.corbel.iam.model.Identity)#io/corbel/iam/model/Identity/getOauthService()
io/corbel/iam/service/DefaultIdentityService/addIdentity(io.corbel.iam.model.Identity)#io/corbel/iam/model/Identity/getDomain()
io/corbel/iam/service/DefaultIdentityService/addIdentity(io.corbel.iam.model.Identity)#io/corbel/iam/model/Identity/getUserId()
io/corbel/iam/service/DefaultIdentityService/addIdentity(io.corbel.iam.model.Identity)#io/corbel/iam/exception/DuplicatedOauthServiceIdentityException/DuplicatedOauthServiceIdentityException()
io/corbel/iam/service/DefaultIdentityService/addIdentity(io.corbel.iam.model.Identity)#io/corbel/iam/repository/IdentityRepositoryCustom/existsByDomainAndUserIdAndOauthService(java.lang.String,java.lang.String,java.lang.String)
io/corbel/iam/service/DefaultIdentityService/addIdentity(io.corbel.iam.model.Identity)#io/corbel/iam/exception/IdentityAlreadyExistsException/IdentityAlreadyExistsException()
io/corbel/iam/service/DefaultIdentityService/addIdentity(io.corbel.iam.model.Identity)#org/springframework/data/repository/CrudRepository/save(S)
io/corbel/resources/rem/model/RestorInputStream/close()#com/amazonaws/services/s3/model/S3Object/close()
io/corbel/resources/rem/model/RestorInputStream/read()#java/io/InputStream/read()
io/corbel/rem/internal/InMemoryRelationRegistryTest/testTypeRelation()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/rem/internal/InMemoryRelationRegistryTest/testTypeRelation()#io/corbel/rem/internal/InMemoryRelationRegistry/getTypeRelations(java.lang.String)
io/corbel/rem/internal/InMemoryRelationRegistryTest/testTypeRelation()#org/fest/assertions/api/Assertions/assertThat(java.lang.Iterable)
io/corbel/rem/internal/InMemoryRelationRegistryTest/setup()#io/corbel/rem/internal/InMemoryRelationRegistry/addRelationFields(java.lang.String,java.lang.String,java.util.Set)
io/corbel/rem/internal/InMemoryRelationRegistryTest/setup()#io/corbel/rem/internal/InMemoryRelationRegistry/InMemoryRelationRegistry()
io/corbel/rem/internal/InMemoryRelationRegistryTest/testRelationFields()#io/corbel/rem/internal/InMemoryRelationRegistry/getRelationFields(java.lang.String,java.lang.String)
io/corbel/rem/internal/InMemoryRelationRegistryTest/testRelationFields()#org/fest/assertions/api/Assertions/assertThat(java.lang.Iterable)
io/corbel/rem/internal/InMemoryRelationRegistryTest/testRelationFields()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/iam/auth/google/api/userinfo/impl/UserInfoTemplate/getUserInfo()#io/corbel/iam/auth/google/api/impl/AbstractGoogleApiOperations/requireAuthorization()
io/corbel/iam/auth/google/api/userinfo/impl/UserInfoTemplate/getUserInfo()#org/springframework/web/client/RestTemplate/getForObject(java.lang.String,java.lang.Class,java.lang.Object[])
io/corbel/iam/model/User/deleteGroup(java.lang.String)#java/util/Set/remove(java.lang.Object)
io/corbel/iam/model/User/addScope(java.lang.String)#java/util/Set/add(E)
io/corbel/iam/model/User/hashCode()#java/lang/String/hashCode()
io/corbel/iam/model/User/hashCode()#java/util/Set/hashCode()
io/corbel/iam/model/User/hashCode()#io/corbel/iam/model/TraceableEntity/hashCode()
io/corbel/iam/model/User/hashCode()#java/util/Map/hashCode()
io/corbel/iam/model/User/removeScope(java.lang.String)#java/util/Set/remove(java.lang.Object)
io/corbel/iam/model/User/getUserProfile()#io/corbel/iam/model/User/User(io.corbel.iam.model.User)
io/corbel/iam/model/User/getUserProfile()#io/corbel/iam/model/User/setPassword(java.lang.String)
io/corbel/iam/model/User/updateUser(io.corbel.iam.model.User)#io/corbel/iam/model/User/setPhoneNumber(java.lang.String)
io/corbel/iam/model/User/updateUser(io.corbel.iam.model.User)#io/corbel/iam/model/User/getScopes()
io/corbel/iam/model/User/updateUser(io.corbel.iam.model.User)#io/corbel/iam/model/User/getLastName()
io/corbel/iam/model/User/updateUser(io.corbel.iam.model.User)#java/util/Map/Entry/getKey()
io/corbel/iam/model/User/updateUser(io.corbel.iam.model.User)#io/corbel/lib/ws/model/ModelValidator/validateObject(java.lang.Object)
io/corbel/iam/model/User/updateUser(io.corbel.iam.model.User)#io/corbel/iam/model/User/setLastName(java.lang.String)
io/corbel/iam/model/User/updateUser(io.corbel.iam.model.User)#io/corbel/iam/model/User/setProfileUrl(java.lang.String)
io/corbel/iam/model/User/updateUser(io.corbel.iam.model.User)#io/corbel/iam/model/User/getProperties()
io/corbel/iam/model/User/updateUser(io.corbel.iam.model.User)#io/corbel/iam/model/User/getFirstName()
io/corbel/iam/model/User/updateUser(io.corbel.iam.model.User)#io/corbel/iam/model/User/getGroups()
io/corbel/iam/model/User/updateUser(io.corbel.iam.model.User)#io/corbel/iam/model/User/getEmail()
io/corbel/iam/model/User/updateUser(io.corbel.iam.model.User)#io/corbel/iam/model/User/setEmailValidated(java.lang.Boolean)
io/corbel/iam/model/User/updateUser(io.corbel.iam.model.User)#io/corbel/iam/model/User/getUsername()
io/corbel/iam/model/User/updateUser(io.corbel.iam.model.User)#java/util/Map/Entry/getValue()
io/corbel/iam/model/User/updateUser(io.corbel.iam.model.User)#io/corbel/iam/model/User/setScopes(java.util.Set)
io/corbel/iam/model/User/updateUser(io.corbel.iam.model.User)#io/corbel/iam/model/User/getPassword()
io/corbel/iam/model/User/updateUser(io.corbel.iam.model.User)#java/util/Map/isEmpty()
io/corbel/iam/model/User/updateUser(io.corbel.iam.model.User)#io/corbel/iam/model/User/setUsername(java.lang.String)
io/corbel/iam/model/User/updateUser(io.corbel.iam.model.User)#io/corbel/iam/model/User/setCountry(java.lang.String)
io/corbel/iam/model/User/updateUser(io.corbel.iam.model.User)#io/corbel/iam/model/User/removeProperty(java.lang.String)
io/corbel/iam/model/User/updateUser(io.corbel.iam.model.User)#io/corbel/iam/model/User/setFirstName(java.lang.String)
io/corbel/iam/model/User/updateUser(io.corbel.iam.model.User)#java/util/Set/isEmpty()
io/corbel/iam/model/User/updateUser(io.corbel.iam.model.User)#io/corbel/iam/model/User/setEmail(java.lang.String)
io/corbel/iam/model/User/updateUser(io.corbel.iam.model.User)#io/corbel/iam/model/User/setGroups(java.util.Set)
io/corbel/iam/model/User/updateUser(io.corbel.iam.model.User)#io/corbel/iam/model/User/getProfileUrl()
io/corbel/iam/model/User/updateUser(io.corbel.iam.model.User)#java/util/Map/entrySet()
io/corbel/iam/model/User/updateUser(io.corbel.iam.model.User)#io/corbel/iam/model/User/getCountry()
io/corbel/iam/model/User/updateUser(io.corbel.iam.model.User)#io/corbel/iam/model/User/addProperty(java.lang.String,java.lang.Object)
io/corbel/iam/model/User/updateUser(io.corbel.iam.model.User)#java/util/HashSet/HashSet(java.util.Collection)
io/corbel/iam/model/User/updateUser(io.corbel.iam.model.User)#io/corbel/iam/model/User/getPhoneNumber()
io/corbel/iam/model/User/getUserWithOnlyId()#io/corbel/iam/model/Entity/getId()
io/corbel/iam/model/User/getUserWithOnlyId()#io/corbel/iam/model/Entity/setId(java.lang.String)
io/corbel/iam/model/User/getUserWithOnlyId()#io/corbel/iam/model/User/setScopes(java.util.Set)
io/corbel/iam/model/User/getUserWithOnlyId()#io/corbel/iam/model/User/User()
io/corbel/iam/model/User/getUserWithOnlyId()#io/corbel/iam/model/User/setProperties(java.util.Map)
io/corbel/iam/model/User/equals(java.lang.Object)#java/lang/String/equals(java.lang.Object)
io/corbel/iam/model/User/equals(java.lang.Object)#java/util/Set/equals(java.lang.Object)
io/corbel/iam/model/User/equals(java.lang.Object)#io/corbel/iam/model/TraceableEntity/equals(java.lang.Object)
io/corbel/iam/model/User/equals(java.lang.Object)#java/util/Map/equals(java.lang.Object)
io/corbel/iam/model/User/removeProperty(java.lang.String)#java/util/Map/remove(java.lang.Object)
io/corbel/iam/model/User/setPassword(java.lang.String)#io/corbel/lib/ws/digest/DigesterFactory/generateSalt()
io/corbel/iam/model/User/setPassword(java.lang.String)#io/corbel/lib/ws/digest/Digester/digest(java.lang.String)
io/corbel/iam/model/User/setPassword(java.lang.String)#io/corbel/lib/ws/digest/DigesterFactory/md5(java.lang.String)
io/corbel/iam/model/User/addGroups(java.util.Set)#java/util/Set/addAll(java.util.Collection)
io/corbel/iam/model/User/checkPassword(java.lang.String)#io/corbel/iam/model/User/getSalt()
io/corbel/iam/model/User/checkPassword(java.lang.String)#java/util/Objects/equals(java.lang.Object,java.lang.Object)
io/corbel/iam/model/User/checkPassword(java.lang.String)#io/corbel/lib/ws/digest/Digester/digest(java.lang.String)
io/corbel/iam/model/User/checkPassword(java.lang.String)#io/corbel/lib/ws/digest/DigesterFactory/md5(java.lang.String)
io/corbel/iam/model/User/addProperty(java.lang.String,java.lang.Object)#java/util/Map/put(K,V)
io/corbel/resources/rem/i18n/I18nBaseRemTest/getEntry(java.lang.String,java.util.List)#java/util/AbstractMap/SimpleEntry/SimpleEntry(K,V)
io/corbel/resources/rem/i18n/I18nBaseRemTest/setup()#io/corbel/resources/rem/i18n/I18nBaseRemTest/setup()/$anonymous1/()
io/corbel/resources/rem/i18n/I18nBaseRemTest/testGetCollection()#io/corbel/resources/rem/i18n/I18nBaseRemTest/getEntry(java.lang.String,java.util.List)
io/corbel/resources/rem/i18n/I18nBaseRemTest/testGetCollection()#java/util/Arrays/asList(T[])
io/corbel/resources/rem/i18n/I18nBaseRemTest/testGetCollection()#com/google/common/collect/Sets/newHashSet(E[])
io/corbel/resources/rem/i18n/I18nBaseRemTest/testGetCollection()#java/lang/Iterable/forEach(java.util.function.Consumer)
io/corbel/iam/model/GroupIdGeneratorTest/testIdGeneration()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/model/GroupIdGeneratorTest/testIdGeneration()#io/corbel/iam/model/Group/setDomain(java.lang.String)
io/corbel/iam/model/GroupIdGeneratorTest/testIdGeneration()#io/corbel/iam/model/Group/Group()
io/corbel/iam/model/GroupIdGeneratorTest/testIdGeneration()#io/corbel/iam/model/Group/setName(java.lang.String)
io/corbel/iam/model/GroupIdGeneratorTest/testIdGeneration()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/iam/model/GroupIdGeneratorTest/testIdGeneration()#io/corbel/lib/ws/digest/Digester/digest(java.lang.String)
io/corbel/iam/model/GroupIdGeneratorTest/testIdGeneration()#io/corbel/iam/model/GroupIdGenerator/GroupIdGenerator(io.corbel.lib.ws.digest.Digester)
io/corbel/iam/model/GroupIdGeneratorTest/testIdGeneration()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/iam/model/GroupIdGeneratorTest/testIdGeneration()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/iam/model/GroupIdGeneratorTest/testIdGeneration()#org/mockito/Mockito/when(T)
io/corbel/iam/model/GroupIdGeneratorTest/testIdGeneration()#io/corbel/iam/model/GroupIdGenerator/generateId(io.corbel.iam.model.Group)
io/corbel/iam/model/GroupIdGeneratorTest/getIdString(io.corbel.iam.model.Group)#io/corbel/iam/model/Group/getDomain()
io/corbel/iam/model/GroupIdGeneratorTest/getIdString(io.corbel.iam.model.Group)#com/google/common/base/Joiner/join(java.lang.Object,java.lang.Object,java.lang.Object[])
io/corbel/iam/model/GroupIdGeneratorTest/getIdString(io.corbel.iam.model.Group)#io/corbel/iam/model/Group/getName()
io/corbel/iam/model/GroupIdGeneratorTest/getIdString(io.corbel.iam.model.Group)#com/google/common/base/Joiner/on(char)
io/corbel/iam/model/GroupIdGeneratorTest/testEqualIdGeneration()#io/corbel/lib/ws/digest/DigesterFactory/murmur3_32()
io/corbel/iam/model/GroupIdGeneratorTest/testEqualIdGeneration()#io/corbel/iam/model/Group/setDomain(java.lang.String)
io/corbel/iam/model/GroupIdGeneratorTest/testEqualIdGeneration()#io/corbel/iam/model/GroupIdGeneratorTest/getIdString(io.corbel.iam.model.Group)
io/corbel/iam/model/GroupIdGeneratorTest/testEqualIdGeneration()#io/corbel/iam/model/Group/Group()
io/corbel/iam/model/GroupIdGeneratorTest/testEqualIdGeneration()#io/corbel/iam/model/Group/setName(java.lang.String)
io/corbel/iam/model/GroupIdGeneratorTest/testEqualIdGeneration()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/iam/model/GroupIdGeneratorTest/testEqualIdGeneration()#io/corbel/lib/ws/digest/Digester/digest(java.lang.String)
io/corbel/iam/model/GroupIdGeneratorTest/testEqualIdGeneration()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/resources/rem/dao/builder/MongoAggregationBuilderTest/testSumProjection()#io/corbel/resources/rem/dao/builder/MongoAggregationBuilder/build()
io/corbel/resources/rem/dao/builder/MongoAggregationBuilderTest/testSumProjection()#org/springframework/data/mongodb/core/aggregation/Aggregation/toString()
io/corbel/resources/rem/dao/builder/MongoAggregationBuilderTest/testSumProjection()#io/corbel/resources/rem/dao/builder/MongoAggregationBuilder/projection(java.lang.String,java.lang.String)
io/corbel/resources/rem/dao/builder/MongoAggregationBuilderTest/testSumProjection()#org/junit/Assert/assertEquals(java.lang.Object,java.lang.Object)
io/corbel/resources/rem/dao/builder/MongoAggregationBuilderTest/testPagination()#io/corbel/lib/queries/request/Pagination/Pagination(int,int)
io/corbel/resources/rem/dao/builder/MongoAggregationBuilderTest/testPagination()#io/corbel/resources/rem/dao/builder/MongoAggregationBuilder/build()
io/corbel/resources/rem/dao/builder/MongoAggregationBuilderTest/testPagination()#org/springframework/data/mongodb/core/aggregation/Aggregation/toString()
io/corbel/resources/rem/dao/builder/MongoAggregationBuilderTest/testPagination()#io/corbel/resources/rem/dao/builder/MongoAggregationBuilder/pagination(io.corbel.lib.queries.request.Pagination)
io/corbel/resources/rem/dao/builder/MongoAggregationBuilderTest/testPagination()#org/junit/Assert/assertEquals(java.lang.Object,java.lang.Object)
io/corbel/resources/rem/dao/builder/MongoAggregationBuilderTest/testSort()#io/corbel/resources/rem/dao/builder/MongoAggregationBuilder/sort(java.lang.String,java.lang.String)
io/corbel/resources/rem/dao/builder/MongoAggregationBuilderTest/testSort()#io/corbel/resources/rem/dao/builder/MongoAggregationBuilder/build()
io/corbel/resources/rem/dao/builder/MongoAggregationBuilderTest/testSort()#org/springframework/data/mongodb/core/aggregation/Aggregation/toString()
io/corbel/resources/rem/dao/builder/MongoAggregationBuilderTest/testSort()#org/junit/Assert/assertEquals(java.lang.Object,java.lang.Object)
io/corbel/resources/rem/dao/builder/MongoAggregationBuilderTest/testPipeline()#io/corbel/resources/rem/model/ResourceUri/ResourceUri(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
io/corbel/resources/rem/dao/builder/MongoAggregationBuilderTest/testPipeline()#java/util/ArrayList/ArrayList()
io/corbel/resources/rem/dao/builder/MongoAggregationBuilderTest/testPipeline()#io/corbel/lib/queries/builder/ResourceQueryBuilder/add(java.lang.String,java.lang.String)
io/corbel/resources/rem/dao/builder/MongoAggregationBuilderTest/testPipeline()#io/corbel/lib/queries/builder/ResourceQueryBuilder/build()
io/corbel/resources/rem/dao/builder/MongoAggregationBuilderTest/testPipeline()#io/corbel/lib/queries/request/Pagination/Pagination(int,int)
io/corbel/resources/rem/dao/builder/MongoAggregationBuilderTest/testPipeline()#io/corbel/resources/rem/dao/builder/MongoAggregationBuilder/sort(java.lang.String,java.lang.String)
io/corbel/resources/rem/dao/builder/MongoAggregationBuilderTest/testPipeline()#java/util/Optional/of(T)
io/corbel/resources/rem/dao/builder/MongoAggregationBuilderTest/testPipeline()#io/corbel/resources/rem/dao/builder/MongoAggregationBuilder/build()
io/corbel/resources/rem/dao/builder/MongoAggregationBuilderTest/testPipeline()#io/corbel/resources/rem/dao/builder/MongoAggregationBuilder/match(io.corbel.resources.rem.model.ResourceUri,java.util.Optional)
io/corbel/resources/rem/dao/builder/MongoAggregationBuilderTest/testPipeline()#io/corbel/resources/rem/dao/builder/MongoAggregationBuilder/group(java.util.List)
io/corbel/resources/rem/dao/builder/MongoAggregationBuilderTest/testPipeline()#io/corbel/lib/queries/builder/ResourceQueryBuilder/ResourceQueryBuilder()
io/corbel/resources/rem/dao/builder/MongoAggregationBuilderTest/testPipeline()#org/springframework/data/mongodb/core/aggregation/Aggregation/toString()
io/corbel/resources/rem/dao/builder/MongoAggregationBuilderTest/testPipeline()#java/util/List/add(E)
io/corbel/resources/rem/dao/builder/MongoAggregationBuilderTest/testPipeline()#io/corbel/resources/rem/dao/builder/MongoAggregationBuilder/pagination(io.corbel.lib.queries.request.Pagination)
io/corbel/resources/rem/dao/builder/MongoAggregationBuilderTest/testPipeline()#org/junit/Assert/assertEquals(java.lang.Object,java.lang.Object)
io/corbel/resources/rem/dao/builder/MongoAggregationBuilderTest/testGroupWithMultipleFields()#java/util/ArrayList/ArrayList()
io/corbel/resources/rem/dao/builder/MongoAggregationBuilderTest/testGroupWithMultipleFields()#io/corbel/resources/rem/dao/builder/MongoAggregationBuilder/group(java.util.List)
io/corbel/resources/rem/dao/builder/MongoAggregationBuilderTest/testGroupWithMultipleFields()#io/corbel/resources/rem/dao/builder/MongoAggregationBuilder/build()
io/corbel/resources/rem/dao/builder/MongoAggregationBuilderTest/testGroupWithMultipleFields()#org/junit/Assert/assertEquals(java.lang.Object,java.lang.Object)
io/corbel/resources/rem/dao/builder/MongoAggregationBuilderTest/testGroupWithMultipleFields()#org/springframework/data/mongodb/core/aggregation/Aggregation/toString()
io/corbel/resources/rem/dao/builder/MongoAggregationBuilderTest/testGroupWithMultipleFields()#java/util/List/add(E)
io/corbel/resources/rem/dao/builder/MongoAggregationBuilderTest/setUp()#io/corbel/resources/rem/dao/builder/MongoAggregationBuilder/MongoAggregationBuilder()
io/corbel/resources/rem/dao/builder/MongoAggregationBuilderTest/testNoOperations()#io/corbel/resources/rem/dao/builder/MongoAggregationBuilder/build()
io/corbel/resources/rem/dao/builder/MongoAggregationBuilderTest/testMultiplyProjection()#io/corbel/resources/rem/dao/builder/MongoAggregationBuilder/build()
io/corbel/resources/rem/dao/builder/MongoAggregationBuilderTest/testMultiplyProjection()#org/springframework/data/mongodb/core/aggregation/Aggregation/toString()
io/corbel/resources/rem/dao/builder/MongoAggregationBuilderTest/testMultiplyProjection()#io/corbel/resources/rem/dao/builder/MongoAggregationBuilder/projection(java.lang.String,java.lang.String)
io/corbel/resources/rem/dao/builder/MongoAggregationBuilderTest/testMultiplyProjection()#org/junit/Assert/assertEquals(java.lang.Object,java.lang.Object)
io/corbel/resources/rem/dao/builder/MongoAggregationBuilderTest/testGroup()#java/util/ArrayList/ArrayList()
io/corbel/resources/rem/dao/builder/MongoAggregationBuilderTest/testGroup()#io/corbel/resources/rem/dao/builder/MongoAggregationBuilder/group(java.util.List)
io/corbel/resources/rem/dao/builder/MongoAggregationBuilderTest/testGroup()#io/corbel/resources/rem/dao/builder/MongoAggregationBuilder/build()
io/corbel/resources/rem/dao/builder/MongoAggregationBuilderTest/testGroup()#org/junit/Assert/assertEquals(java.lang.Object,java.lang.Object)
io/corbel/resources/rem/dao/builder/MongoAggregationBuilderTest/testGroup()#org/springframework/data/mongodb/core/aggregation/Aggregation/toString()
io/corbel/resources/rem/dao/builder/MongoAggregationBuilderTest/testGroup()#java/util/List/add(E)
io/corbel/resources/rem/dao/builder/MongoAggregationBuilderTest/testMatchWithEmptyTextSearch()#io/corbel/resources/rem/model/ResourceUri/ResourceUri(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
io/corbel/resources/rem/dao/builder/MongoAggregationBuilderTest/testMatchWithEmptyTextSearch()#io/corbel/resources/rem/dao/builder/MongoAggregationBuilder/match(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,java.util.Optional)
io/corbel/resources/rem/dao/builder/MongoAggregationBuilderTest/testMatchWithEmptyTextSearch()#java/util/ArrayList/ArrayList()
io/corbel/resources/rem/dao/builder/MongoAggregationBuilderTest/testMatchWithEmptyTextSearch()#io/corbel/lib/queries/builder/ResourceQueryBuilder/add(java.lang.String,java.lang.String)
io/corbel/resources/rem/dao/builder/MongoAggregationBuilderTest/testMatchWithEmptyTextSearch()#io/corbel/lib/queries/builder/ResourceQueryBuilder/build()
io/corbel/resources/rem/dao/builder/MongoAggregationBuilderTest/testMatchWithEmptyTextSearch()#io/corbel/lib/queries/builder/ResourceQueryBuilder/ResourceQueryBuilder()
io/corbel/resources/rem/dao/builder/MongoAggregationBuilderTest/testMatchWithEmptyTextSearch()#java/util/Optional/of(T)
io/corbel/resources/rem/dao/builder/MongoAggregationBuilderTest/testMatchWithEmptyTextSearch()#io/corbel/resources/rem/dao/builder/MongoAggregationBuilder/build()
io/corbel/resources/rem/dao/builder/MongoAggregationBuilderTest/testMatchWithEmptyTextSearch()#org/junit/Assert/assertEquals(java.lang.Object,java.lang.Object)
io/corbel/resources/rem/dao/builder/MongoAggregationBuilderTest/testMatchWithEmptyTextSearch()#org/springframework/data/mongodb/core/aggregation/Aggregation/toString()
io/corbel/resources/rem/dao/builder/MongoAggregationBuilderTest/testMatchWithEmptyTextSearch()#java/util/List/add(E)
io/corbel/resources/rem/dao/builder/MongoAggregationBuilderTest/testMatchWithTextSearch()#io/corbel/resources/rem/model/ResourceUri/ResourceUri(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
io/corbel/resources/rem/dao/builder/MongoAggregationBuilderTest/testMatchWithTextSearch()#io/corbel/resources/rem/dao/builder/MongoAggregationBuilder/match(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,java.util.Optional)
io/corbel/resources/rem/dao/builder/MongoAggregationBuilderTest/testMatchWithTextSearch()#java/util/ArrayList/ArrayList()
io/corbel/resources/rem/dao/builder/MongoAggregationBuilderTest/testMatchWithTextSearch()#io/corbel/lib/queries/builder/ResourceQueryBuilder/add(java.lang.String,java.lang.String)
io/corbel/resources/rem/dao/builder/MongoAggregationBuilderTest/testMatchWithTextSearch()#io/corbel/lib/queries/builder/ResourceQueryBuilder/build()
io/corbel/resources/rem/dao/builder/MongoAggregationBuilderTest/testMatchWithTextSearch()#io/corbel/lib/queries/builder/ResourceQueryBuilder/ResourceQueryBuilder()
io/corbel/resources/rem/dao/builder/MongoAggregationBuilderTest/testMatchWithTextSearch()#java/util/Optional/of(T)
io/corbel/resources/rem/dao/builder/MongoAggregationBuilderTest/testMatchWithTextSearch()#io/corbel/resources/rem/dao/builder/MongoAggregationBuilder/build()
io/corbel/resources/rem/dao/builder/MongoAggregationBuilderTest/testMatchWithTextSearch()#org/junit/Assert/assertEquals(java.lang.Object,java.lang.Object)
io/corbel/resources/rem/dao/builder/MongoAggregationBuilderTest/testMatchWithTextSearch()#org/springframework/data/mongodb/core/aggregation/Aggregation/toString()
io/corbel/resources/rem/dao/builder/MongoAggregationBuilderTest/testMatchWithTextSearch()#java/util/List/add(E)
io/corbel/resources/rem/dao/builder/MongoAggregationBuilderTest/testMatch()#io/corbel/resources/rem/model/ResourceUri/ResourceUri(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
io/corbel/resources/rem/dao/builder/MongoAggregationBuilderTest/testMatch()#java/util/ArrayList/ArrayList()
io/corbel/resources/rem/dao/builder/MongoAggregationBuilderTest/testMatch()#io/corbel/lib/queries/builder/ResourceQueryBuilder/add(java.lang.String,java.lang.String)
io/corbel/resources/rem/dao/builder/MongoAggregationBuilderTest/testMatch()#io/corbel/lib/queries/builder/ResourceQueryBuilder/build()
io/corbel/resources/rem/dao/builder/MongoAggregationBuilderTest/testMatch()#io/corbel/lib/queries/builder/ResourceQueryBuilder/ResourceQueryBuilder()
io/corbel/resources/rem/dao/builder/MongoAggregationBuilderTest/testMatch()#java/util/Optional/of(T)
io/corbel/resources/rem/dao/builder/MongoAggregationBuilderTest/testMatch()#io/corbel/resources/rem/dao/builder/MongoAggregationBuilder/build()
io/corbel/resources/rem/dao/builder/MongoAggregationBuilderTest/testMatch()#io/corbel/resources/rem/dao/builder/MongoAggregationBuilder/match(io.corbel.resources.rem.model.ResourceUri,java.util.Optional)
io/corbel/resources/rem/dao/builder/MongoAggregationBuilderTest/testMatch()#org/junit/Assert/assertEquals(java.lang.Object,java.lang.Object)
io/corbel/resources/rem/dao/builder/MongoAggregationBuilderTest/testMatch()#org/springframework/data/mongodb/core/aggregation/Aggregation/toString()
io/corbel/resources/rem/dao/builder/MongoAggregationBuilderTest/testMatch()#java/util/List/add(E)
io/corbel/resources/rem/dao/builder/MongoAggregationBuilderTest/testGroupWithFirst()#java/util/ArrayList/ArrayList()
io/corbel/resources/rem/dao/builder/MongoAggregationBuilderTest/testGroupWithFirst()#io/corbel/resources/rem/dao/builder/MongoAggregationBuilder/group(java.util.List,boolean)
io/corbel/resources/rem/dao/builder/MongoAggregationBuilderTest/testGroupWithFirst()#io/corbel/resources/rem/dao/builder/MongoAggregationBuilder/build()
io/corbel/resources/rem/dao/builder/MongoAggregationBuilderTest/testGroupWithFirst()#org/junit/Assert/assertEquals(java.lang.Object,java.lang.Object)
io/corbel/resources/rem/dao/builder/MongoAggregationBuilderTest/testGroupWithFirst()#org/springframework/data/mongodb/core/aggregation/Aggregation/toString()
io/corbel/resources/rem/dao/builder/MongoAggregationBuilderTest/testGroupWithFirst()#java/util/List/add(E)
io/corbel/resources/rem/format/ImageFormatTest/existingFormatTest()#java/lang/Enum/toString()
io/corbel/resources/rem/format/ImageFormatTest/existingFormatTest()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/resources/rem/format/ImageFormatTest/existingFormatTest()#io/corbel/resources/rem/format/ImageFormat/safeValueOf(java.lang.String)
io/corbel/resources/rem/format/ImageFormatTest/existingFormatTest()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/resources/rem/format/ImageFormatTest/existingFormatTestLowerCase()#java/lang/Enum/toString()
io/corbel/resources/rem/format/ImageFormatTest/existingFormatTestLowerCase()#java/lang/String/toUpperCase()
io/corbel/resources/rem/format/ImageFormatTest/existingFormatTestLowerCase()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/resources/rem/format/ImageFormatTest/existingFormatTestLowerCase()#io/corbel/resources/rem/format/ImageFormat/safeValueOf(java.lang.String)
io/corbel/resources/rem/format/ImageFormatTest/existingFormatTestLowerCase()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/resources/rem/format/ImageFormatTest/nonExistingFormatTest()#io/corbel/resources/rem/format/ImageFormat/safeValueOf(java.lang.String)
io/corbel/oauth/OauthRunner/main(java.lang.String[])#io/corbel/oauth/OauthRunner/OauthRunner()
io/corbel/oauth/OauthRunner/main(java.lang.String[])#io/corbel/lib/ws/cli/ServiceRunner/setCommandLine(io.corbel.lib.ws.cli.CommandLineI)
io/corbel/oauth/OauthRunner/main(java.lang.String[])#org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)
io/corbel/oauth/OauthRunner/main(java.lang.String[])#io/corbel/oauth/OauthRunner/getArtifactId()
io/corbel/oauth/OauthRunner/main(java.lang.String[])#io/corbel/lib/ws/cli/GenericConsole/GenericConsole(java.lang.String,java.lang.Class)
io/corbel/oauth/OauthRunner/main(java.lang.String[])#io/corbel/lib/ws/cli/ServiceRunner/run(java.lang.String[])
io/corbel/oauth/OauthRunner/configureService(io.dropwizard.setup.Environment,org.springframework.context.ApplicationContext)#com/codahale/metrics/health/HealthCheckRegistry/register(java.lang.String,com.codahale.metrics.health.HealthCheck)
io/corbel/oauth/OauthRunner/configureService(io.dropwizard.setup.Environment,org.springframework.context.ApplicationContext)#io/dropwizard/setup/Environment/jersey()
io/corbel/oauth/OauthRunner/configureService(io.dropwizard.setup.Environment,org.springframework.context.ApplicationContext)#io/corbel/lib/ws/health/BasicHealthCheck/BasicHealthCheck()
io/corbel/oauth/OauthRunner/configureService(io.dropwizard.setup.Environment,org.springframework.context.ApplicationContext)#io/corbel/lib/ws/cli/ServiceRunnerWithVersionResource/configureService(io.dropwizard.setup.Environment,org.springframework.context.ApplicationContext)
io/corbel/oauth/OauthRunner/configureService(io.dropwizard.setup.Environment,org.springframework.context.ApplicationContext)#org/springframework/beans/factory/BeanFactory/getBean(java.lang.Class)
io/corbel/oauth/OauthRunner/configureService(io.dropwizard.setup.Environment,org.springframework.context.ApplicationContext)#io/corbel/lib/token/provider/SessionProvider/getBinder()
io/corbel/oauth/OauthRunner/configureService(io.dropwizard.setup.Environment,org.springframework.context.ApplicationContext)#io/dropwizard/setup/Environment/healthChecks()
io/corbel/oauth/OauthRunner/configureService(io.dropwizard.setup.Environment,org.springframework.context.ApplicationContext)#io/dropwizard/jersey/setup/JerseyEnvironment/register(java.lang.Object)
io/corbel/resources/rem/plugin/ImageRemPlugin/init()#org/springframework/context/annotation/AnnotationConfigApplicationContext/AnnotationConfigApplicationContext(java.lang.Class<?>[])
io/corbel/resources/rem/plugin/ImageRemPlugin/init()#io/corbel/resources/rem/plugin/RemPlugin/init()
io/corbel/resources/rem/plugin/ImageRemPlugin/init()#org/slf4j/Logger/info(java.lang.String)
io/corbel/resources/rem/plugin/ImageRemPlugin/init()#io/corbel/lib/config/ConfigurationHelper/setConfigurationNamespace(java.lang.String)
io/corbel/resources/rem/plugin/ImageRemPlugin/register(io.corbel.resources.rem.RemRegistry)#org/springframework/core/env/EnvironmentCapable/getEnvironment()
io/corbel/resources/rem/plugin/ImageRemPlugin/register(io.corbel.resources.rem.RemRegistry)#io/corbel/resources/rem/plugin/ImageRemPlugin/registerRem(java.lang.String,org.springframework.http.HttpMethod,io.corbel.resources.rem.RemRegistry,java.lang.String)
io/corbel/resources/rem/plugin/ImageRemPlugin/register(io.corbel.resources.rem.RemRegistry)#org/springframework/core/env/PropertyResolver/getProperty(java.lang.String)
io/corbel/resources/rem/plugin/ImageRemPlugin/registerRem(java.lang.String,org.springframework.http.HttpMethod,io.corbel.resources.rem.RemRegistry,java.lang.String)#io/corbel/resources/rem/ImageBaseRem/setRemService(io.corbel.resources.rem.service.RemService)
io/corbel/resources/rem/plugin/ImageRemPlugin/registerRem(java.lang.String,org.springframework.http.HttpMethod,io.corbel.resources.rem.RemRegistry,java.lang.String)#org/springframework/http/MediaType/parseMediaType(java.lang.String)
io/corbel/resources/rem/plugin/ImageRemPlugin/registerRem(java.lang.String,org.springframework.http.HttpMethod,io.corbel.resources.rem.RemRegistry,java.lang.String)#org/springframework/beans/factory/BeanFactory/getBean(java.lang.String,java.lang.Class)
io/corbel/resources/rem/plugin/ImageRemPlugin/registerRem(java.lang.String,org.springframework.http.HttpMethod,io.corbel.resources.rem.RemRegistry,java.lang.String)#io/corbel/resources/rem/RemRegistry/registerRem(io.corbel.resources.rem.Rem,java.lang.String,org.springframework.http.MediaType,org.springframework.http.HttpMethod[])
io/corbel/notifications/service/SpringNotificationsServiceFactory/getNotificationService(java.lang.String)#org/springframework/beans/factory/BeanFactory/getBean(java.lang.String,java.lang.Class)
io/corbel/oauth/ioc/TokenVerifiersIoc/userExistsTokenVerifier(io.corbel.oauth.repository.UserRepository)#io/corbel/oauth/token/verifier/UserExistsTokenVerifier/UserExistsTokenVerifier(io.corbel.oauth.repository.UserRepository)
io/corbel/iam/service/DefaultUpgradeTokenService/publishScopes(java.util.Set,io.corbel.lib.token.reader.TokenReader)#io/corbel/iam/service/ScopeService/addAuthorizationRules(java.lang.String,java.util.Set)
io/corbel/iam/service/DefaultUpgradeTokenService/publishScopes(java.util.Set,io.corbel.lib.token.reader.TokenReader)#io/corbel/lib/token/reader/TokenReader/getToken()
io/corbel/iam/service/DefaultUpgradeTokenService/getUpgradedScopes(java.util.Set,io.corbel.lib.token.reader.TokenReader)#io/corbel/lib/token/reader/TokenReader/getInfo()
io/corbel/iam/service/DefaultUpgradeTokenService/getUpgradedScopes(java.util.Set,io.corbel.lib.token.reader.TokenReader)#io/corbel/iam/service/ScopeService/expandScopes(java.util.Collection)
io/corbel/iam/service/DefaultUpgradeTokenService/getUpgradedScopes(java.util.Set,io.corbel.lib.token.reader.TokenReader)#io/corbel/lib/token/TokenInfo/getDomainId()
io/corbel/iam/service/DefaultUpgradeTokenService/getUpgradedScopes(java.util.Set,io.corbel.lib.token.reader.TokenReader)#io/corbel/iam/service/ScopeService/fillScopes(java.util.Set,java.lang.String,java.lang.String,java.lang.String)
io/corbel/iam/service/DefaultUpgradeTokenService/getUpgradedScopes(java.util.Set,io.corbel.lib.token.reader.TokenReader)#io/corbel/lib/token/TokenInfo/getUserId()
io/corbel/iam/service/DefaultUpgradeTokenService/getUpgradedScopes(java.util.Set,io.corbel.lib.token.reader.TokenReader)#io/corbel/lib/token/TokenInfo/getClientId()
io/corbel/iam/service/DefaultUpgradeTokenService/getScopesFromTokenToUpgrade(java.lang.String)#com/google/gson/JsonObject/has(java.lang.String)
io/corbel/iam/service/DefaultUpgradeTokenService/getScopesFromTokenToUpgrade(java.lang.String)#java/lang/String/split(java.lang.String)
io/corbel/iam/service/DefaultUpgradeTokenService/getScopesFromTokenToUpgrade(java.lang.String)#io/corbel/iam/exception/UnauthorizedException/UnauthorizedException(java.lang.String)
io/corbel/iam/service/DefaultUpgradeTokenService/getScopesFromTokenToUpgrade(java.lang.String)#java/lang/Throwable/getMessage()
io/corbel/iam/service/DefaultUpgradeTokenService/getScopesFromTokenToUpgrade(java.lang.String)#net/oauth/jsontoken/JsonToken/getPayloadAsJsonObject()
io/corbel/iam/service/DefaultUpgradeTokenService/getScopesFromTokenToUpgrade(java.lang.String)#com/google/common/collect/Sets/newHashSet(E[])
io/corbel/iam/service/DefaultUpgradeTokenService/getScopesFromTokenToUpgrade(java.lang.String)#java/lang/String/isEmpty()
io/corbel/iam/service/DefaultUpgradeTokenService/getScopesFromTokenToUpgrade(java.lang.String)#com/google/gson/JsonElement/isJsonPrimitive()
io/corbel/iam/service/DefaultUpgradeTokenService/getScopesFromTokenToUpgrade(java.lang.String)#java/util/HashSet/HashSet()
io/corbel/iam/service/DefaultUpgradeTokenService/getScopesFromTokenToUpgrade(java.lang.String)#net/oauth/jsontoken/JsonTokenParser/verifyAndDeserialize(java.lang.String)
io/corbel/iam/service/DefaultUpgradeTokenService/getScopesFromTokenToUpgrade(java.lang.String)#com/google/gson/JsonElement/getAsString()
io/corbel/iam/service/DefaultUpgradeTokenService/getScopesFromTokenToUpgrade(java.lang.String)#com/google/gson/JsonObject/get(java.lang.String)
io/corbel/iam/service/DefaultUpgradeTokenService/upgradeToken(java.lang.String,io.corbel.lib.token.reader.TokenReader,java.util.Set)#io/corbel/iam/exception/UnauthorizedException/UnauthorizedException(java.lang.String)
io/corbel/iam/service/DefaultUpgradeTokenService/upgradeToken(java.lang.String,io.corbel.lib.token.reader.TokenReader,java.util.Set)#io/corbel/iam/service/DefaultUpgradeTokenService/publishScopes(java.util.Set,io.corbel.lib.token.reader.TokenReader)
io/corbel/iam/service/DefaultUpgradeTokenService/upgradeToken(java.lang.String,io.corbel.lib.token.reader.TokenReader,java.util.Set)#java/lang/Throwable/getMessage()
io/corbel/iam/service/DefaultUpgradeTokenService/upgradeToken(java.lang.String,io.corbel.lib.token.reader.TokenReader,java.util.Set)#io/corbel/iam/service/DefaultUpgradeTokenService/saveUserToken(java.lang.String,java.util.Set)
io/corbel/iam/service/DefaultUpgradeTokenService/upgradeToken(java.lang.String,io.corbel.lib.token.reader.TokenReader,java.util.Set)#io/corbel/iam/service/DefaultUpgradeTokenService/getUpgradedScopes(java.util.Set,io.corbel.lib.token.reader.TokenReader)
io/corbel/iam/service/DefaultUpgradeTokenService/upgradeToken(java.lang.String,io.corbel.lib.token.reader.TokenReader,java.util.Set)#io/corbel/lib/token/reader/TokenReader/getToken()
io/corbel/iam/service/DefaultUpgradeTokenService/upgradeToken(java.lang.String,io.corbel.lib.token.reader.TokenReader,java.util.Set)#java/util/HashSet/HashSet(java.util.Collection)
io/corbel/iam/service/DefaultUpgradeTokenService/saveUserToken(java.lang.String,java.util.Set)#java/util/stream/Stream/map(java.util.function.Function)
io/corbel/iam/service/DefaultUpgradeTokenService/saveUserToken(java.lang.String,java.util.Set)#java/util/stream/Stream/collect(java.util.stream.Collector)
io/corbel/iam/service/DefaultUpgradeTokenService/saveUserToken(java.lang.String,java.util.Set)#org/springframework/data/repository/CrudRepository/save(S)
io/corbel/iam/service/DefaultUpgradeTokenService/saveUserToken(java.lang.String,java.util.Set)#io/corbel/iam/repository/UserTokenRepository/findByToken(java.lang.String)
io/corbel/iam/service/DefaultUpgradeTokenService/saveUserToken(java.lang.String,java.util.Set)#java/util/Set/addAll(java.util.Collection)
io/corbel/iam/service/DefaultUpgradeTokenService/saveUserToken(java.lang.String,java.util.Set)#java/util/stream/Collectors/toSet()
io/corbel/iam/service/DefaultUpgradeTokenService/saveUserToken(java.lang.String,java.util.Set)#java/util/Collection/stream()
io/corbel/iam/service/DefaultUpgradeTokenService/saveUserToken(java.lang.String,java.util.Set)#io/corbel/iam/model/UserToken/getScopes()
io/corbel/iam/api/UserResourceTestBase/apiCall(java.lang.String,java.lang.String)#io/corbel/iam/api/UserResourceTestBase/apiCall(java.lang.String,java.lang.String,javax.ws.rs.core.MediaType)
io/corbel/iam/api/UserResourceTestBase/createTestUser()#io/corbel/iam/api/UserResourceTestBase/createTestUser(io.corbel.iam.model.User)
io/corbel/iam/api/UserResourceTestBase/createTestUser()#io/corbel/iam/model/User/User()
io/corbel/iam/api/UserResourceTestBase/getUserClient(java.lang.String)#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/iam/api/UserResourceTestBase/getUserClient(java.lang.String)#javax/ws/rs/client/WebTarget/request(java.lang.String[])
io/corbel/iam/api/UserResourceTestBase/getUserClient(java.lang.String)#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/iam/api/UserResourceTestBase/getUserClient(java.lang.String)#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/iam/api/UserResourceTestBase/getUserClient(java.lang.String)#io/corbel/iam/api/UserResourceTestBase/getTestRule()
io/corbel/iam/api/UserResourceTestBase/getUserProfile(java.lang.String)#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/iam/api/UserResourceTestBase/getUserProfile(java.lang.String)#javax/ws/rs/client/WebTarget/request(java.lang.String[])
io/corbel/iam/api/UserResourceTestBase/getUserProfile(java.lang.String)#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/iam/api/UserResourceTestBase/getUserProfile(java.lang.String)#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/iam/api/UserResourceTestBase/getUserProfile(java.lang.String)#io/corbel/iam/api/UserResourceTestBase/getTestRule()
io/corbel/iam/api/UserResourceTestBase/getTestUserToken()#io/corbel/iam/model/UserToken/setDeviceId(java.lang.String)
io/corbel/iam/api/UserResourceTestBase/getTestUserToken()#io/corbel/iam/api/UserResourceTestBase/createTestScopes()
io/corbel/iam/api/UserResourceTestBase/getTestUserToken()#io/corbel/iam/model/UserToken/setScopes(java.util.Set)
io/corbel/iam/api/UserResourceTestBase/getTestUserToken()#io/corbel/iam/model/UserToken/UserToken()
io/corbel/iam/api/UserResourceTestBase/getTestUserToken()#io/corbel/iam/model/UserToken/setToken(java.lang.String)
io/corbel/iam/api/UserResourceTestBase/getTestUserToken()#org/joda/time/base/BaseDateTime/getMillis()
io/corbel/iam/api/UserResourceTestBase/getTestUserToken()#java/util/Date/Date(long)
io/corbel/iam/api/UserResourceTestBase/getTestUserToken()#io/corbel/iam/model/UserToken/setUserId(java.lang.String)
io/corbel/iam/api/UserResourceTestBase/getTestUserToken()#org/joda/time/DateTime/now()
io/corbel/iam/api/UserResourceTestBase/getTestUserToken()#io/corbel/iam/model/UserToken/setExpireAt(java.util.Date)
io/corbel/iam/api/UserResourceTestBase/createTestUser(io.corbel.iam.model.User)#io/corbel/iam/model/Entity/setId(java.lang.String)
io/corbel/iam/api/UserResourceTestBase/createTestUser(io.corbel.iam.model.User)#io/corbel/iam/model/User/setScopes(java.util.Set)
io/corbel/iam/api/UserResourceTestBase/createTestUser(io.corbel.iam.model.User)#io/corbel/iam/model/User/setUsername(java.lang.String)
io/corbel/iam/api/UserResourceTestBase/createTestUser(io.corbel.iam.model.User)#io/corbel/iam/model/User/setPhoneNumber(java.lang.String)
io/corbel/iam/api/UserResourceTestBase/createTestUser(io.corbel.iam.model.User)#io/corbel/iam/model/User/setFirstName(java.lang.String)
io/corbel/iam/api/UserResourceTestBase/createTestUser(io.corbel.iam.model.User)#io/corbel/iam/model/User/setEmail(java.lang.String)
io/corbel/iam/api/UserResourceTestBase/createTestUser(io.corbel.iam.model.User)#io/corbel/iam/model/User/setLastName(java.lang.String)
io/corbel/iam/api/UserResourceTestBase/createTestUser(io.corbel.iam.model.User)#io/corbel/iam/model/User/setDomain(java.lang.String)
io/corbel/iam/api/UserResourceTestBase/createTestUser(io.corbel.iam.model.User)#io/corbel/iam/model/User/setProfileUrl(java.lang.String)
io/corbel/iam/api/UserResourceTestBase/createTestUser(io.corbel.iam.model.User)#io/corbel/iam/model/User/addProperty(java.lang.String,java.lang.Object)
io/corbel/iam/api/UserResourceTestBase/createTestScopes()#com/google/common/collect/Sets/newHashSet()
io/corbel/iam/api/UserResourceTestBase/createTestScopes()#java/util/Set/add(E)
io/corbel/iam/api/UserResourceTestBase/getTestUser()#io/corbel/iam/model/User/User()
io/corbel/iam/api/UserResourceTestBase/getTestUser()#io/corbel/iam/model/User/setScopes(java.util.Set)
io/corbel/iam/api/UserResourceTestBase/getTestUser()#io/corbel/iam/api/UserResourceTestBase/createTestUser(io.corbel.iam.model.User)
io/corbel/iam/api/UserResourceTestBase/apiCall(java.lang.String,java.lang.String,javax.ws.rs.core.MediaType)#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/iam/api/UserResourceTestBase/apiCall(java.lang.String,java.lang.String,javax.ws.rs.core.MediaType)#javax/ws/rs/client/WebTarget/request(javax.ws.rs.core.MediaType[])
io/corbel/iam/api/UserResourceTestBase/apiCall(java.lang.String,java.lang.String,javax.ws.rs.core.MediaType)#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/iam/api/UserResourceTestBase/apiCall(java.lang.String,java.lang.String,javax.ws.rs.core.MediaType)#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/iam/api/UserResourceTestBase/apiCall(java.lang.String,java.lang.String,javax.ws.rs.core.MediaType)#io/corbel/iam/api/UserResourceTestBase/getTestRule()
io/corbel/iam/api/UserResourceTestBase/getTestUserWithIdentity()#io/corbel/iam/model/Identity/setOauthService(java.lang.String)
io/corbel/iam/api/UserResourceTestBase/getTestUserWithIdentity()#io/corbel/iam/model/Identity/setOauthId(java.lang.String)
io/corbel/iam/api/UserResourceTestBase/getTestUserWithIdentity()#io/corbel/iam/model/UserWithIdentity/setIdentity(io.corbel.iam.model.Identity)
io/corbel/iam/api/UserResourceTestBase/getTestUserWithIdentity()#io/corbel/iam/model/User/setScopes(java.util.Set)
io/corbel/iam/api/UserResourceTestBase/getTestUserWithIdentity()#io/corbel/iam/api/UserResourceTestBase/createTestUser(io.corbel.iam.model.User)
io/corbel/iam/api/UserResourceTestBase/getTestUserWithIdentity()#io/corbel/iam/model/UserWithIdentity/UserWithIdentity()
io/corbel/iam/api/UserResourceTestBase/getTestUserWithIdentity()#io/corbel/iam/model/Identity/Identity()
io/corbel/iam/api/UserResourceTestBase/removeId(io.corbel.iam.model.User)#io/corbel/iam/model/Entity/setId(java.lang.String)
io/corbel/iam/api/UserResourceTestBase/addUserClient()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/iam/api/UserResourceTestBase/addUserClient()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/iam/api/UserResourceTestBase/addUserClient()#javax/ws/rs/client/WebTarget/request()
io/corbel/iam/api/UserResourceTestBase/addUserClient()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/iam/api/UserResourceTestBase/addUserClient()#io/corbel/iam/api/UserResourceTestBase/getTestRule()
io/corbel/iam/api/UserResourceTestBase/getUserClientInOtherEmail(java.lang.String)#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/iam/api/UserResourceTestBase/getUserClientInOtherEmail(java.lang.String)#javax/ws/rs/client/WebTarget/request(java.lang.String[])
io/corbel/iam/api/UserResourceTestBase/getUserClientInOtherEmail(java.lang.String)#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/iam/api/UserResourceTestBase/getUserClientInOtherEmail(java.lang.String)#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/iam/api/UserResourceTestBase/getUserClientInOtherEmail(java.lang.String)#io/corbel/iam/api/UserResourceTestBase/getTestRule()
io/corbel/iam/api/UserResourceTestBase/getUserClientMe()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/iam/api/UserResourceTestBase/getUserClientMe()#javax/ws/rs/client/WebTarget/request(java.lang.String[])
io/corbel/iam/api/UserResourceTestBase/getUserClientMe()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/iam/api/UserResourceTestBase/getUserClientMe()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/iam/api/UserResourceTestBase/getUserClientMe()#io/corbel/iam/api/UserResourceTestBase/getTestRule()
io/corbel/iam/model/Client/removeScope(java.lang.String)#java/util/Set/remove(java.lang.Object)
io/corbel/iam/model/Client/hashCode()#java/lang/String/hashCode()
io/corbel/iam/model/Client/hashCode()#java/util/Set/hashCode()
io/corbel/iam/model/Client/hashCode()#io/corbel/iam/model/TraceableEntity/hashCode()
io/corbel/iam/model/Client/hashCode()#java/lang/Boolean/hashCode()
io/corbel/iam/model/Client/hashCode()#java/lang/Enum/hashCode()
io/corbel/iam/model/Client/equals(java.lang.Object)#java/lang/Boolean/equals(java.lang.Object)
io/corbel/iam/model/Client/equals(java.lang.Object)#java/lang/String/equals(java.lang.Object)
io/corbel/iam/model/Client/equals(java.lang.Object)#java/util/Set/equals(java.lang.Object)
io/corbel/iam/model/Client/equals(java.lang.Object)#io/corbel/iam/model/TraceableEntity/equals(java.lang.Object)
io/corbel/iam/model/Client/addScope(java.lang.String)#java/util/Set/add(E)
io/corbel/iam/IamConsoleRunner/main(java.lang.String[])#io/corbel/lib/ws/log/LogbackUtils/setLogLevel(java.lang.String)
io/corbel/iam/IamConsoleRunner/main(java.lang.String[])#java/io/PrintStream/println(java.lang.String)
io/corbel/iam/IamConsoleRunner/main(java.lang.String[])#java/lang/Throwable/getMessage()
io/corbel/iam/IamConsoleRunner/main(java.lang.String[])#java/lang/System/exit(int)
io/corbel/iam/IamConsoleRunner/main(java.lang.String[])#io/corbel/iam/IamConsoleRunner/IamConsoleRunner()
io/corbel/iam/IamConsoleRunner/main(java.lang.String[])#io/corbel/lib/cli/console/Console/launch()
io/corbel/iam/IamConsoleRunner/main(java.lang.String[])#io/corbel/lib/cli/console/Console/runScripts(java.lang.String[])
io/corbel/iam/IamConsoleRunner/createShell()#org/springframework/context/annotation/AnnotationConfigApplicationContext/AnnotationConfigApplicationContext(java.lang.Class<?>[])
io/corbel/iam/IamConsoleRunner/createShell()#org/springframework/context/support/AbstractApplicationContext/getBean(java.lang.Class)
io/corbel/iam/IamConsoleRunner/createShell()#java/lang/System/setProperty(java.lang.String,java.lang.String)
io/corbel/iam/jwt/TokenUpgradeVerifierProvider/findVerifier(java.lang.String,java.lang.String)#net/oauth/jsontoken/crypto/HmacSHA256Verifier/HmacSHA256Verifier(byte[])
io/corbel/iam/jwt/TokenUpgradeVerifierProvider/findVerifier(java.lang.String,java.lang.String)#java/util/Collections/singletonList(T)
io/corbel/iam/jwt/TokenUpgradeVerifierProvider/findVerifier(java.lang.String,java.lang.String)#java/util/Collections/emptyList()
io/corbel/iam/jwt/TokenUpgradeVerifierProvider/findVerifier(java.lang.String,java.lang.String)#java/lang/String/equals(java.lang.Object)
io/corbel/iam/jwt/TokenUpgradeVerifierProvider/findVerifier(java.lang.String,java.lang.String)#java/lang/String/getBytes()
io/corbel/iam/api/GroupResourceTest/removeScopesFromUnauthorizedGroupTest()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/api/GroupResourceTest/removeScopesFromUnauthorizedGroupTest()#javax/ws/rs/core/Response/Status/getStatusCode()
io/corbel/iam/api/GroupResourceTest/removeScopesFromUnauthorizedGroupTest()#javax/ws/rs/client/SyncInvoker/delete()
io/corbel/iam/api/GroupResourceTest/removeScopesFromUnauthorizedGroupTest()#org/mockito/Mockito/when(T)
io/corbel/iam/api/GroupResourceTest/removeScopesFromUnauthorizedGroupTest()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/iam/api/GroupResourceTest/removeScopesFromUnauthorizedGroupTest()#javax/ws/rs/client/WebTarget/request()
io/corbel/iam/api/GroupResourceTest/removeScopesFromUnauthorizedGroupTest()#javax/ws/rs/core/Response/getStatus()
io/corbel/iam/api/GroupResourceTest/removeScopesFromUnauthorizedGroupTest()#io/corbel/iam/model/Group/Group(java.lang.String,java.lang.String,java.lang.String,java.util.Set)
io/corbel/iam/api/GroupResourceTest/removeScopesFromUnauthorizedGroupTest()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/iam/api/GroupResourceTest/removeScopesFromUnauthorizedGroupTest()#io/corbel/iam/service/GroupService/getById(java.lang.String)
io/corbel/iam/api/GroupResourceTest/removeScopesFromUnauthorizedGroupTest()#org/mockito/Matchers/eq(T)
io/corbel/iam/api/GroupResourceTest/removeScopesFromUnauthorizedGroupTest()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/iam/api/GroupResourceTest/removeScopesFromUnauthorizedGroupTest()#org/mockito/Mockito/verifyNoMoreInteractions(java.lang.Object[])
io/corbel/iam/api/GroupResourceTest/removeScopesFromUnauthorizedGroupTest()#org/mockito/Mockito/verify(T)
io/corbel/iam/api/GroupResourceTest/removeScopesFromUnauthorizedGroupTest()#java/util/Optional/of(T)
io/corbel/iam/api/GroupResourceTest/removeScopesFromUnauthorizedGroupTest()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/iam/api/GroupResourceTest/deleteUnauthorizedGroupTest()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/api/GroupResourceTest/deleteUnauthorizedGroupTest()#javax/ws/rs/core/Response/Status/getStatusCode()
io/corbel/iam/api/GroupResourceTest/deleteUnauthorizedGroupTest()#javax/ws/rs/client/SyncInvoker/delete()
io/corbel/iam/api/GroupResourceTest/deleteUnauthorizedGroupTest()#org/mockito/Mockito/when(T)
io/corbel/iam/api/GroupResourceTest/deleteUnauthorizedGroupTest()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/iam/api/GroupResourceTest/deleteUnauthorizedGroupTest()#javax/ws/rs/client/WebTarget/request()
io/corbel/iam/api/GroupResourceTest/deleteUnauthorizedGroupTest()#javax/ws/rs/core/Response/getStatus()
io/corbel/iam/api/GroupResourceTest/deleteUnauthorizedGroupTest()#io/corbel/iam/model/Group/Group(java.lang.String,java.lang.String,java.lang.String,java.util.Set)
io/corbel/iam/api/GroupResourceTest/deleteUnauthorizedGroupTest()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/iam/api/GroupResourceTest/deleteUnauthorizedGroupTest()#io/corbel/iam/service/GroupService/getById(java.lang.String)
io/corbel/iam/api/GroupResourceTest/deleteUnauthorizedGroupTest()#org/mockito/Matchers/eq(T)
io/corbel/iam/api/GroupResourceTest/deleteUnauthorizedGroupTest()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/iam/api/GroupResourceTest/deleteUnauthorizedGroupTest()#org/mockito/Mockito/verifyNoMoreInteractions(java.lang.Object[])
io/corbel/iam/api/GroupResourceTest/deleteUnauthorizedGroupTest()#org/mockito/Mockito/verify(T)
io/corbel/iam/api/GroupResourceTest/deleteUnauthorizedGroupTest()#java/util/Optional/of(T)
io/corbel/iam/api/GroupResourceTest/deleteUnauthorizedGroupTest()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/iam/api/GroupResourceTest/createGroupTest()#org/fest/assertions/api/Assertions/assertThat(boolean)
io/corbel/iam/api/GroupResourceTest/createGroupTest()#org/mockito/Mockito/when(T)
io/corbel/iam/api/GroupResourceTest/createGroupTest()#javax/ws/rs/client/WebTarget/request()
io/corbel/iam/api/GroupResourceTest/createGroupTest()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/iam/api/GroupResourceTest/createGroupTest()#javax/ws/rs/core/Response/getStatus()
io/corbel/iam/api/GroupResourceTest/createGroupTest()#com/fasterxml/jackson/databind/ObjectMapper/ObjectMapper()
io/corbel/iam/api/GroupResourceTest/createGroupTest()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/api/GroupResourceTest/createGroupTest()#org/fest/assertions/api/BooleanAssert/isTrue()
io/corbel/iam/api/GroupResourceTest/createGroupTest()#javax/ws/rs/core/Response/Status/getStatusCode()
io/corbel/iam/api/GroupResourceTest/createGroupTest()#javax/ws/rs/core/MultivaluedMap/getFirst(K)
io/corbel/iam/api/GroupResourceTest/createGroupTest()#io/corbel/iam/service/GroupService/create(io.corbel.iam.model.Group)
io/corbel/iam/api/GroupResourceTest/createGroupTest()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/iam/api/GroupResourceTest/createGroupTest()#io/corbel/iam/model/Group/Group(java.lang.String,java.lang.String,java.lang.String,java.util.Set)
io/corbel/iam/api/GroupResourceTest/createGroupTest()#javax/ws/rs/client/Entity/json(T)
io/corbel/iam/api/GroupResourceTest/createGroupTest()#io/corbel/iam/model/Group/getId()
io/corbel/iam/api/GroupResourceTest/createGroupTest()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/iam/api/GroupResourceTest/createGroupTest()#com/fasterxml/jackson/databind/ObjectWriter/writeValueAsString(java.lang.Object)
io/corbel/iam/api/GroupResourceTest/createGroupTest()#org/mockito/Matchers/eq(T)
io/corbel/iam/api/GroupResourceTest/createGroupTest()#javax/ws/rs/core/Response/getHeaders()
io/corbel/iam/api/GroupResourceTest/createGroupTest()#com/fasterxml/jackson/databind/ObjectMapper/writer()
io/corbel/iam/api/GroupResourceTest/createGroupTest()#java/lang/String/endsWith(java.lang.String)
io/corbel/iam/api/GroupResourceTest/createGroupTest()#javax/ws/rs/client/SyncInvoker/post(javax.ws.rs.client.Entity,java.lang.Class)
io/corbel/iam/api/GroupResourceTest/createGroupTest()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/iam/api/GroupResourceTest/addScopesToGroupTest()#io/corbel/iam/service/GroupService/addScopes(java.lang.String,java.lang.String[])
io/corbel/iam/api/GroupResourceTest/addScopesToGroupTest()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/api/GroupResourceTest/addScopesToGroupTest()#javax/ws/rs/core/Response/Status/getStatusCode()
io/corbel/iam/api/GroupResourceTest/addScopesToGroupTest()#java/util/Collections/singletonList(T)
io/corbel/iam/api/GroupResourceTest/addScopesToGroupTest()#org/mockito/Mockito/when(T)
io/corbel/iam/api/GroupResourceTest/addScopesToGroupTest()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/iam/api/GroupResourceTest/addScopesToGroupTest()#javax/ws/rs/client/WebTarget/request()
io/corbel/iam/api/GroupResourceTest/addScopesToGroupTest()#javax/ws/rs/core/Response/getStatus()
io/corbel/iam/api/GroupResourceTest/addScopesToGroupTest()#com/fasterxml/jackson/databind/ObjectMapper/ObjectMapper()
io/corbel/iam/api/GroupResourceTest/addScopesToGroupTest()#org/mockito/Matchers/any()
io/corbel/iam/api/GroupResourceTest/addScopesToGroupTest()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/iam/api/GroupResourceTest/addScopesToGroupTest()#io/corbel/iam/service/GroupService/getById(java.lang.String)
io/corbel/iam/api/GroupResourceTest/addScopesToGroupTest()#javax/ws/rs/client/SyncInvoker/put(javax.ws.rs.client.Entity)
io/corbel/iam/api/GroupResourceTest/addScopesToGroupTest()#org/mockito/Mockito/verifyNoMoreInteractions(java.lang.Object[])
io/corbel/iam/api/GroupResourceTest/addScopesToGroupTest()#org/mockito/Mockito/verify(T)
io/corbel/iam/api/GroupResourceTest/addScopesToGroupTest()#java/util/Optional/of(T)
io/corbel/iam/api/GroupResourceTest/addScopesToGroupTest()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/iam/api/GroupResourceTest/addScopesToGroupTest()#io/corbel/iam/model/Group/Group(java.lang.String,java.lang.String,java.lang.String,java.util.Set)
io/corbel/iam/api/GroupResourceTest/addScopesToGroupTest()#javax/ws/rs/client/Entity/json(T)
io/corbel/iam/api/GroupResourceTest/addScopesToGroupTest()#com/fasterxml/jackson/databind/ObjectWriter/writeValueAsString(java.lang.Object)
io/corbel/iam/api/GroupResourceTest/addScopesToGroupTest()#org/mockito/Matchers/eq(T)
io/corbel/iam/api/GroupResourceTest/addScopesToGroupTest()#com/fasterxml/jackson/databind/ObjectMapper/writer()
io/corbel/iam/api/GroupResourceTest/addScopesToGroupTest()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/iam/api/GroupResourceTest/getNonexistentGroupTest()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/api/GroupResourceTest/getNonexistentGroupTest()#javax/ws/rs/core/Response/Status/getStatusCode()
io/corbel/iam/api/GroupResourceTest/getNonexistentGroupTest()#org/mockito/Mockito/when(T)
io/corbel/iam/api/GroupResourceTest/getNonexistentGroupTest()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/iam/api/GroupResourceTest/getNonexistentGroupTest()#javax/ws/rs/client/WebTarget/request()
io/corbel/iam/api/GroupResourceTest/getNonexistentGroupTest()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/iam/api/GroupResourceTest/getNonexistentGroupTest()#java/util/Optional/empty()
io/corbel/iam/api/GroupResourceTest/getNonexistentGroupTest()#org/mockito/Matchers/eq(T)
io/corbel/iam/api/GroupResourceTest/getNonexistentGroupTest()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/iam/api/GroupResourceTest/getNonexistentGroupTest()#javax/ws/rs/client/SyncInvoker/get(java.lang.Class)
io/corbel/iam/api/GroupResourceTest/getNonexistentGroupTest()#javax/ws/rs/core/Response/getStatus()
io/corbel/iam/api/GroupResourceTest/getNonexistentGroupTest()#io/corbel/iam/service/GroupService/getById(java.lang.String,java.lang.String)
io/corbel/iam/api/GroupResourceTest/getNonexistentGroupTest()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/iam/api/GroupResourceTest/deleteGroupTest()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/api/GroupResourceTest/deleteGroupTest()#javax/ws/rs/core/Response/Status/getStatusCode()
io/corbel/iam/api/GroupResourceTest/deleteGroupTest()#javax/ws/rs/client/SyncInvoker/delete()
io/corbel/iam/api/GroupResourceTest/deleteGroupTest()#org/mockito/Mockito/when(T)
io/corbel/iam/api/GroupResourceTest/deleteGroupTest()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/iam/api/GroupResourceTest/deleteGroupTest()#javax/ws/rs/client/WebTarget/request()
io/corbel/iam/api/GroupResourceTest/deleteGroupTest()#io/corbel/iam/service/GroupService/delete(java.lang.String,java.lang.String)
io/corbel/iam/api/GroupResourceTest/deleteGroupTest()#javax/ws/rs/core/Response/getStatus()
io/corbel/iam/api/GroupResourceTest/deleteGroupTest()#io/corbel/iam/model/Group/Group(java.lang.String,java.lang.String,java.lang.String,java.util.Set)
io/corbel/iam/api/GroupResourceTest/deleteGroupTest()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/iam/api/GroupResourceTest/deleteGroupTest()#io/corbel/iam/service/GroupService/getById(java.lang.String)
io/corbel/iam/api/GroupResourceTest/deleteGroupTest()#org/mockito/Matchers/eq(T)
io/corbel/iam/api/GroupResourceTest/deleteGroupTest()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/iam/api/GroupResourceTest/deleteGroupTest()#org/mockito/Mockito/verifyNoMoreInteractions(java.lang.Object[])
io/corbel/iam/api/GroupResourceTest/deleteGroupTest()#org/mockito/Mockito/verify(T)
io/corbel/iam/api/GroupResourceTest/deleteGroupTest()#java/util/Optional/of(T)
io/corbel/iam/api/GroupResourceTest/deleteGroupTest()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/iam/api/GroupResourceTest/removeScopesFromInexistentGroupTest()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/api/GroupResourceTest/removeScopesFromInexistentGroupTest()#javax/ws/rs/core/Response/Status/getStatusCode()
io/corbel/iam/api/GroupResourceTest/removeScopesFromInexistentGroupTest()#javax/ws/rs/client/SyncInvoker/delete()
io/corbel/iam/api/GroupResourceTest/removeScopesFromInexistentGroupTest()#org/mockito/Mockito/when(T)
io/corbel/iam/api/GroupResourceTest/removeScopesFromInexistentGroupTest()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/iam/api/GroupResourceTest/removeScopesFromInexistentGroupTest()#javax/ws/rs/client/WebTarget/request()
io/corbel/iam/api/GroupResourceTest/removeScopesFromInexistentGroupTest()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/iam/api/GroupResourceTest/removeScopesFromInexistentGroupTest()#javax/ws/rs/core/Response/getStatus()
io/corbel/iam/api/GroupResourceTest/removeScopesFromInexistentGroupTest()#java/util/Optional/empty()
io/corbel/iam/api/GroupResourceTest/removeScopesFromInexistentGroupTest()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/iam/api/GroupResourceTest/removeScopesFromInexistentGroupTest()#io/corbel/iam/service/GroupService/getById(java.lang.String)
io/corbel/iam/api/GroupResourceTest/removeScopesFromInexistentGroupTest()#org/mockito/Matchers/eq(T)
io/corbel/iam/api/GroupResourceTest/removeScopesFromInexistentGroupTest()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/iam/api/GroupResourceTest/removeScopesFromInexistentGroupTest()#org/mockito/Mockito/verifyNoMoreInteractions(java.lang.Object[])
io/corbel/iam/api/GroupResourceTest/removeScopesFromInexistentGroupTest()#org/mockito/Mockito/verify(T)
io/corbel/iam/api/GroupResourceTest/createAlreadyExistingGroupTest()#javax/ws/rs/core/Response/Status/getStatusCode()
io/corbel/iam/api/GroupResourceTest/createAlreadyExistingGroupTest()#io/corbel/iam/exception/GroupAlreadyExistsException/GroupAlreadyExistsException(java.lang.String)
io/corbel/iam/api/GroupResourceTest/createAlreadyExistingGroupTest()#org/mockito/Mockito/when(T)
io/corbel/iam/api/GroupResourceTest/createAlreadyExistingGroupTest()#javax/ws/rs/client/WebTarget/request()
io/corbel/iam/api/GroupResourceTest/createAlreadyExistingGroupTest()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/iam/api/GroupResourceTest/createAlreadyExistingGroupTest()#javax/ws/rs/core/Response/getStatus()
io/corbel/iam/api/GroupResourceTest/createAlreadyExistingGroupTest()#com/fasterxml/jackson/databind/ObjectMapper/ObjectMapper()
io/corbel/iam/api/GroupResourceTest/createAlreadyExistingGroupTest()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/iam/api/GroupResourceTest/createAlreadyExistingGroupTest()#io/corbel/iam/service/GroupService/create(io.corbel.iam.model.Group)
io/corbel/iam/api/GroupResourceTest/createAlreadyExistingGroupTest()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/iam/api/GroupResourceTest/createAlreadyExistingGroupTest()#io/corbel/iam/model/Group/Group(java.lang.String,java.lang.String,java.lang.String,java.util.Set)
io/corbel/iam/api/GroupResourceTest/createAlreadyExistingGroupTest()#javax/ws/rs/client/Entity/json(T)
io/corbel/iam/api/GroupResourceTest/createAlreadyExistingGroupTest()#com/fasterxml/jackson/databind/ObjectWriter/writeValueAsString(java.lang.Object)
io/corbel/iam/api/GroupResourceTest/createAlreadyExistingGroupTest()#org/mockito/Matchers/eq(T)
io/corbel/iam/api/GroupResourceTest/createAlreadyExistingGroupTest()#org/mockito/stubbing/OngoingStubbing/thenThrow(java.lang.Throwable[])
io/corbel/iam/api/GroupResourceTest/createAlreadyExistingGroupTest()#com/fasterxml/jackson/databind/ObjectMapper/writer()
io/corbel/iam/api/GroupResourceTest/createAlreadyExistingGroupTest()#javax/ws/rs/client/SyncInvoker/post(javax.ws.rs.client.Entity,java.lang.Class)
io/corbel/iam/api/GroupResourceTest/createAlreadyExistingGroupTest()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/iam/api/GroupResourceTest/createGroupWithBadScopesTest()#javax/ws/rs/core/Response/Status/getStatusCode()
io/corbel/iam/api/GroupResourceTest/createGroupWithBadScopesTest()#org/mockito/stubbing/OngoingStubbing/thenThrow(java.lang.Class<? extends java.lang.Throwable>[])
io/corbel/iam/api/GroupResourceTest/createGroupWithBadScopesTest()#org/mockito/Mockito/when(T)
io/corbel/iam/api/GroupResourceTest/createGroupWithBadScopesTest()#javax/ws/rs/client/WebTarget/request()
io/corbel/iam/api/GroupResourceTest/createGroupWithBadScopesTest()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/iam/api/GroupResourceTest/createGroupWithBadScopesTest()#javax/ws/rs/core/Response/getStatus()
io/corbel/iam/api/GroupResourceTest/createGroupWithBadScopesTest()#com/fasterxml/jackson/databind/ObjectMapper/ObjectMapper()
io/corbel/iam/api/GroupResourceTest/createGroupWithBadScopesTest()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/iam/api/GroupResourceTest/createGroupWithBadScopesTest()#io/corbel/iam/service/GroupService/create(io.corbel.iam.model.Group)
io/corbel/iam/api/GroupResourceTest/createGroupWithBadScopesTest()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/iam/api/GroupResourceTest/createGroupWithBadScopesTest()#io/corbel/iam/model/Group/Group(java.lang.String,java.lang.String,java.lang.String,java.util.Set)
io/corbel/iam/api/GroupResourceTest/createGroupWithBadScopesTest()#javax/ws/rs/client/Entity/json(T)
io/corbel/iam/api/GroupResourceTest/createGroupWithBadScopesTest()#com/fasterxml/jackson/databind/ObjectWriter/writeValueAsString(java.lang.Object)
io/corbel/iam/api/GroupResourceTest/createGroupWithBadScopesTest()#org/mockito/Matchers/eq(T)
io/corbel/iam/api/GroupResourceTest/createGroupWithBadScopesTest()#com/fasterxml/jackson/databind/ObjectMapper/writer()
io/corbel/iam/api/GroupResourceTest/createGroupWithBadScopesTest()#javax/ws/rs/client/SyncInvoker/post(javax.ws.rs.client.Entity,java.lang.Class)
io/corbel/iam/api/GroupResourceTest/createGroupWithBadScopesTest()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/iam/api/GroupResourceTest/getAllGroupsTest()#org/fest/assertions/api/AbstractIterableAssert/hasSize(int)
io/corbel/iam/api/GroupResourceTest/getAllGroupsTest()#org/mockito/Mockito/when(T)
io/corbel/iam/api/GroupResourceTest/getAllGroupsTest()#java/util/Collections/emptyList()
io/corbel/iam/api/GroupResourceTest/getAllGroupsTest()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/iam/api/GroupResourceTest/getAllGroupsTest()#javax/ws/rs/client/WebTarget/request()
io/corbel/iam/api/GroupResourceTest/getAllGroupsTest()#javax/ws/rs/client/SyncInvoker/get(java.lang.Class)
io/corbel/iam/api/GroupResourceTest/getAllGroupsTest()#io/corbel/iam/service/GroupService/getAll(java.lang.String,java.util.List,io.corbel.lib.queries.request.Pagination,io.corbel.lib.queries.request.Sort)
io/corbel/iam/api/GroupResourceTest/getAllGroupsTest()#org/mockito/Matchers/any()
io/corbel/iam/api/GroupResourceTest/getAllGroupsTest()#org/fest/assertions/api/Assertions/assertThat(java.util.List)
io/corbel/iam/api/GroupResourceTest/getAllGroupsTest()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/iam/api/GroupResourceTest/deleteNonExistentGroupTest()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/api/GroupResourceTest/deleteNonExistentGroupTest()#javax/ws/rs/core/Response/Status/getStatusCode()
io/corbel/iam/api/GroupResourceTest/deleteNonExistentGroupTest()#javax/ws/rs/client/SyncInvoker/delete()
io/corbel/iam/api/GroupResourceTest/deleteNonExistentGroupTest()#org/mockito/Mockito/when(T)
io/corbel/iam/api/GroupResourceTest/deleteNonExistentGroupTest()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/iam/api/GroupResourceTest/deleteNonExistentGroupTest()#javax/ws/rs/client/WebTarget/request()
io/corbel/iam/api/GroupResourceTest/deleteNonExistentGroupTest()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/iam/api/GroupResourceTest/deleteNonExistentGroupTest()#javax/ws/rs/core/Response/getStatus()
io/corbel/iam/api/GroupResourceTest/deleteNonExistentGroupTest()#java/util/Optional/empty()
io/corbel/iam/api/GroupResourceTest/deleteNonExistentGroupTest()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/iam/api/GroupResourceTest/deleteNonExistentGroupTest()#io/corbel/iam/service/GroupService/getById(java.lang.String)
io/corbel/iam/api/GroupResourceTest/deleteNonExistentGroupTest()#org/mockito/Matchers/eq(T)
io/corbel/iam/api/GroupResourceTest/deleteNonExistentGroupTest()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/iam/api/GroupResourceTest/deleteNonExistentGroupTest()#org/mockito/Mockito/verifyNoMoreInteractions(java.lang.Object[])
io/corbel/iam/api/GroupResourceTest/deleteNonExistentGroupTest()#org/mockito/Mockito/verify(T)
io/corbel/iam/api/GroupResourceTest/getGroupTest()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/api/GroupResourceTest/getGroupTest()#org/mockito/Mockito/when(T)
io/corbel/iam/api/GroupResourceTest/getGroupTest()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/iam/api/GroupResourceTest/getGroupTest()#javax/ws/rs/client/WebTarget/request()
io/corbel/iam/api/GroupResourceTest/getGroupTest()#java/util/Optional/of(T)
io/corbel/iam/api/GroupResourceTest/getGroupTest()#javax/ws/rs/client/SyncInvoker/get(java.lang.Class)
io/corbel/iam/api/GroupResourceTest/getGroupTest()#io/corbel/iam/model/Group/Group(java.lang.String,java.lang.String,java.lang.String,java.util.Set)
io/corbel/iam/api/GroupResourceTest/getGroupTest()#org/mockito/Matchers/eq(T)
io/corbel/iam/api/GroupResourceTest/getGroupTest()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/iam/api/GroupResourceTest/getGroupTest()#io/corbel/iam/service/GroupService/getById(java.lang.String,java.lang.String)
io/corbel/iam/api/GroupResourceTest/getGroupTest()#org/fest/assertions/api/Assertions/assertThat(T)
io/corbel/iam/api/GroupResourceTest/getGroupTest()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/iam/api/GroupResourceTest/setUp()#javax/servlet/http/HttpServletRequest/getHeader(java.lang.String)
io/corbel/iam/api/GroupResourceTest/setUp()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/api/GroupResourceTest/setUp()#io/corbel/lib/ws/auth/CookieOAuthFactory/provide()
io/corbel/iam/api/GroupResourceTest/setUp()#io/corbel/lib/ws/auth/AuthorizationRequestFilter/checkTokenAccessRules(io.corbel.lib.ws.auth.AuthorizationInfo,javax.ws.rs.container.ContainerRequestContext,java.lang.String)
io/corbel/iam/api/GroupResourceTest/setUp()#io/corbel/lib/ws/auth/AuthorizationInfo/getDomainId()
io/corbel/iam/api/GroupResourceTest/setUp()#org/mockito/stubbing/Stubber/when(T)
io/corbel/iam/api/GroupResourceTest/setUp()#com/google/common/base/Optional/of(T)
io/corbel/iam/api/GroupResourceTest/setUp()#io/corbel/lib/ws/auth/AuthorizationRequestFilter/getRequest()
io/corbel/iam/api/GroupResourceTest/setUp()#org/mockito/Mockito/doReturn(java.lang.Object)
io/corbel/iam/api/GroupResourceTest/setUp()#org/mockito/Matchers/any()
io/corbel/iam/api/GroupResourceTest/setUp()#org/mockito/Mockito/reset(T[])
io/corbel/iam/api/GroupResourceTest/setUp()#org/mockito/Matchers/eq(T)
io/corbel/iam/api/GroupResourceTest/setUp()#io/corbel/lib/ws/auth/CookieOAuthFactory/clone(boolean)
io/corbel/iam/api/GroupResourceTest/setUp()#io/corbel/lib/ws/auth/BearerTokenAuthenticator/authenticate(java.lang.String)
io/corbel/iam/api/GroupResourceTest/setUp()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/iam/api/GroupResourceTest/setUp()#org/mockito/Mockito/when(T)
io/corbel/iam/api/GroupResourceTest/setUp()#org/mockito/Mockito/doNothing()
io/corbel/iam/api/GroupResourceTest/addInexistentScopesToGroupTest()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/api/GroupResourceTest/addInexistentScopesToGroupTest()#javax/ws/rs/core/Response/Status/getStatusCode()
io/corbel/iam/api/GroupResourceTest/addInexistentScopesToGroupTest()#java/util/Collections/singletonList(T)
io/corbel/iam/api/GroupResourceTest/addInexistentScopesToGroupTest()#org/mockito/Mockito/when(T)
io/corbel/iam/api/GroupResourceTest/addInexistentScopesToGroupTest()#org/mockito/stubbing/Stubber/when(T)
io/corbel/iam/api/GroupResourceTest/addInexistentScopesToGroupTest()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/iam/api/GroupResourceTest/addInexistentScopesToGroupTest()#javax/ws/rs/client/WebTarget/request()
io/corbel/iam/api/GroupResourceTest/addInexistentScopesToGroupTest()#javax/ws/rs/core/Response/getStatus()
io/corbel/iam/api/GroupResourceTest/addInexistentScopesToGroupTest()#com/fasterxml/jackson/databind/ObjectMapper/ObjectMapper()
io/corbel/iam/api/GroupResourceTest/addInexistentScopesToGroupTest()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/iam/api/GroupResourceTest/addInexistentScopesToGroupTest()#io/corbel/iam/service/GroupService/getById(java.lang.String)
io/corbel/iam/api/GroupResourceTest/addInexistentScopesToGroupTest()#io/corbel/iam/service/GroupService/addScopes(java.lang.String,java.lang.String[])
io/corbel/iam/api/GroupResourceTest/addInexistentScopesToGroupTest()#org/mockito/Mockito/doThrow(java.lang.Class)
io/corbel/iam/api/GroupResourceTest/addInexistentScopesToGroupTest()#javax/ws/rs/client/SyncInvoker/put(javax.ws.rs.client.Entity)
io/corbel/iam/api/GroupResourceTest/addInexistentScopesToGroupTest()#org/mockito/Mockito/verifyNoMoreInteractions(java.lang.Object[])
io/corbel/iam/api/GroupResourceTest/addInexistentScopesToGroupTest()#org/mockito/Mockito/verify(T)
io/corbel/iam/api/GroupResourceTest/addInexistentScopesToGroupTest()#java/util/Optional/of(T)
io/corbel/iam/api/GroupResourceTest/addInexistentScopesToGroupTest()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/iam/api/GroupResourceTest/addInexistentScopesToGroupTest()#io/corbel/iam/model/Group/Group(java.lang.String,java.lang.String,java.lang.String,java.util.Set)
io/corbel/iam/api/GroupResourceTest/addInexistentScopesToGroupTest()#javax/ws/rs/client/Entity/json(T)
io/corbel/iam/api/GroupResourceTest/addInexistentScopesToGroupTest()#com/fasterxml/jackson/databind/ObjectWriter/writeValueAsString(java.lang.Object)
io/corbel/iam/api/GroupResourceTest/addInexistentScopesToGroupTest()#org/mockito/Matchers/eq(T)
io/corbel/iam/api/GroupResourceTest/addInexistentScopesToGroupTest()#com/fasterxml/jackson/databind/ObjectMapper/writer()
io/corbel/iam/api/GroupResourceTest/addInexistentScopesToGroupTest()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/iam/api/GroupResourceTest/addScopesToInexistentGroupTest()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/api/GroupResourceTest/addScopesToInexistentGroupTest()#javax/ws/rs/core/Response/Status/getStatusCode()
io/corbel/iam/api/GroupResourceTest/addScopesToInexistentGroupTest()#java/util/Collections/singletonList(T)
io/corbel/iam/api/GroupResourceTest/addScopesToInexistentGroupTest()#org/mockito/Mockito/when(T)
io/corbel/iam/api/GroupResourceTest/addScopesToInexistentGroupTest()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/iam/api/GroupResourceTest/addScopesToInexistentGroupTest()#javax/ws/rs/client/WebTarget/request()
io/corbel/iam/api/GroupResourceTest/addScopesToInexistentGroupTest()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/iam/api/GroupResourceTest/addScopesToInexistentGroupTest()#javax/ws/rs/core/Response/getStatus()
io/corbel/iam/api/GroupResourceTest/addScopesToInexistentGroupTest()#com/fasterxml/jackson/databind/ObjectMapper/ObjectMapper()
io/corbel/iam/api/GroupResourceTest/addScopesToInexistentGroupTest()#javax/ws/rs/client/Entity/json(T)
io/corbel/iam/api/GroupResourceTest/addScopesToInexistentGroupTest()#java/util/Optional/empty()
io/corbel/iam/api/GroupResourceTest/addScopesToInexistentGroupTest()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/iam/api/GroupResourceTest/addScopesToInexistentGroupTest()#io/corbel/iam/service/GroupService/getById(java.lang.String)
io/corbel/iam/api/GroupResourceTest/addScopesToInexistentGroupTest()#javax/ws/rs/client/SyncInvoker/put(javax.ws.rs.client.Entity)
io/corbel/iam/api/GroupResourceTest/addScopesToInexistentGroupTest()#org/mockito/Mockito/verifyNoMoreInteractions(java.lang.Object[])
io/corbel/iam/api/GroupResourceTest/addScopesToInexistentGroupTest()#org/mockito/Mockito/verify(T)
io/corbel/iam/api/GroupResourceTest/addScopesToInexistentGroupTest()#com/fasterxml/jackson/databind/ObjectWriter/writeValueAsString(java.lang.Object)
io/corbel/iam/api/GroupResourceTest/addScopesToInexistentGroupTest()#org/mockito/Matchers/eq(T)
io/corbel/iam/api/GroupResourceTest/addScopesToInexistentGroupTest()#com/fasterxml/jackson/databind/ObjectMapper/writer()
io/corbel/iam/api/GroupResourceTest/addScopesToInexistentGroupTest()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/iam/api/GroupResourceTest/addScopesToUnauthorizedGroupTest()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/api/GroupResourceTest/addScopesToUnauthorizedGroupTest()#javax/ws/rs/core/Response/Status/getStatusCode()
io/corbel/iam/api/GroupResourceTest/addScopesToUnauthorizedGroupTest()#java/util/Collections/singletonList(T)
io/corbel/iam/api/GroupResourceTest/addScopesToUnauthorizedGroupTest()#org/mockito/Mockito/when(T)
io/corbel/iam/api/GroupResourceTest/addScopesToUnauthorizedGroupTest()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/iam/api/GroupResourceTest/addScopesToUnauthorizedGroupTest()#javax/ws/rs/client/WebTarget/request()
io/corbel/iam/api/GroupResourceTest/addScopesToUnauthorizedGroupTest()#javax/ws/rs/core/Response/getStatus()
io/corbel/iam/api/GroupResourceTest/addScopesToUnauthorizedGroupTest()#com/fasterxml/jackson/databind/ObjectMapper/ObjectMapper()
io/corbel/iam/api/GroupResourceTest/addScopesToUnauthorizedGroupTest()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/iam/api/GroupResourceTest/addScopesToUnauthorizedGroupTest()#io/corbel/iam/service/GroupService/getById(java.lang.String)
io/corbel/iam/api/GroupResourceTest/addScopesToUnauthorizedGroupTest()#javax/ws/rs/client/SyncInvoker/put(javax.ws.rs.client.Entity)
io/corbel/iam/api/GroupResourceTest/addScopesToUnauthorizedGroupTest()#org/mockito/Mockito/verifyNoMoreInteractions(java.lang.Object[])
io/corbel/iam/api/GroupResourceTest/addScopesToUnauthorizedGroupTest()#org/mockito/Mockito/verify(T)
io/corbel/iam/api/GroupResourceTest/addScopesToUnauthorizedGroupTest()#java/util/Optional/of(T)
io/corbel/iam/api/GroupResourceTest/addScopesToUnauthorizedGroupTest()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/iam/api/GroupResourceTest/addScopesToUnauthorizedGroupTest()#io/corbel/iam/model/Group/Group(java.lang.String,java.lang.String,java.lang.String,java.util.Set)
io/corbel/iam/api/GroupResourceTest/addScopesToUnauthorizedGroupTest()#javax/ws/rs/client/Entity/json(T)
io/corbel/iam/api/GroupResourceTest/addScopesToUnauthorizedGroupTest()#com/fasterxml/jackson/databind/ObjectWriter/writeValueAsString(java.lang.Object)
io/corbel/iam/api/GroupResourceTest/addScopesToUnauthorizedGroupTest()#org/mockito/Matchers/eq(T)
io/corbel/iam/api/GroupResourceTest/addScopesToUnauthorizedGroupTest()#com/fasterxml/jackson/databind/ObjectMapper/writer()
io/corbel/iam/api/GroupResourceTest/addScopesToUnauthorizedGroupTest()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/iam/api/GroupResourceTest/removeScopesFromGroupTest()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/api/GroupResourceTest/removeScopesFromGroupTest()#javax/ws/rs/core/Response/Status/getStatusCode()
io/corbel/iam/api/GroupResourceTest/removeScopesFromGroupTest()#javax/ws/rs/client/SyncInvoker/delete()
io/corbel/iam/api/GroupResourceTest/removeScopesFromGroupTest()#org/mockito/Mockito/when(T)
io/corbel/iam/api/GroupResourceTest/removeScopesFromGroupTest()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/iam/api/GroupResourceTest/removeScopesFromGroupTest()#javax/ws/rs/client/WebTarget/request()
io/corbel/iam/api/GroupResourceTest/removeScopesFromGroupTest()#javax/ws/rs/core/Response/getStatus()
io/corbel/iam/api/GroupResourceTest/removeScopesFromGroupTest()#io/corbel/iam/model/Group/Group(java.lang.String,java.lang.String,java.lang.String,java.util.Set)
io/corbel/iam/api/GroupResourceTest/removeScopesFromGroupTest()#io/corbel/iam/service/GroupService/removeScopes(java.lang.String,java.lang.String[])
io/corbel/iam/api/GroupResourceTest/removeScopesFromGroupTest()#org/mockito/Matchers/any()
io/corbel/iam/api/GroupResourceTest/removeScopesFromGroupTest()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/iam/api/GroupResourceTest/removeScopesFromGroupTest()#io/corbel/iam/service/GroupService/getById(java.lang.String)
io/corbel/iam/api/GroupResourceTest/removeScopesFromGroupTest()#org/mockito/Matchers/eq(T)
io/corbel/iam/api/GroupResourceTest/removeScopesFromGroupTest()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/iam/api/GroupResourceTest/removeScopesFromGroupTest()#org/mockito/Mockito/verifyNoMoreInteractions(java.lang.Object[])
io/corbel/iam/api/GroupResourceTest/removeScopesFromGroupTest()#org/mockito/Mockito/verify(T)
io/corbel/iam/api/GroupResourceTest/removeScopesFromGroupTest()#java/util/Optional/of(T)
io/corbel/iam/api/GroupResourceTest/removeScopesFromGroupTest()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/resources/ResourcesConsoleRunner/createShell()#java/util/Optional/orElse(T)
io/corbel/resources/ResourcesConsoleRunner/createShell()#java/util/Map/size()
io/corbel/resources/ResourcesConsoleRunner/createShell()#java/util/Optional/ofNullable(T)
io/corbel/resources/ResourcesConsoleRunner/createShell()#java/lang/System/getProperty(java.lang.String)
io/corbel/resources/ResourcesConsoleRunner/createShell()#java/lang/System/getenv(java.lang.String)
io/corbel/resources/ResourcesConsoleRunner/createShell()#org/springframework/context/support/AbstractApplicationContext/getBeansWithAnnotation(java.lang.Class)
io/corbel/resources/ResourcesConsoleRunner/createShell()#org/springframework/context/annotation/AnnotationConfigApplicationContext/AnnotationConfigApplicationContext(java.lang.Class<?>[])
io/corbel/resources/ResourcesConsoleRunner/createShell()#java/util/Map/forEach(java.util.function.BiConsumer)
io/corbel/resources/ResourcesConsoleRunner/createShell()#java/util/HashMap/HashMap(int)
io/corbel/resources/ResourcesConsoleRunner/createShell()#java/lang/System/setProperty(java.lang.String,java.lang.String)
io/corbel/resources/ResourcesConsoleRunner/main(java.lang.String[])#io/corbel/lib/ws/log/LogbackUtils/setLogLevel(java.lang.String)
io/corbel/resources/ResourcesConsoleRunner/main(java.lang.String[])#io/corbel/resources/ResourcesConsoleRunner/ResourcesConsoleRunner()
io/corbel/resources/ResourcesConsoleRunner/main(java.lang.String[])#java/io/PrintStream/println(java.lang.String)
io/corbel/resources/ResourcesConsoleRunner/main(java.lang.String[])#java/lang/Throwable/getMessage()
io/corbel/resources/ResourcesConsoleRunner/main(java.lang.String[])#java/lang/System/exit(int)
io/corbel/resources/ResourcesConsoleRunner/main(java.lang.String[])#io/corbel/lib/cli/console/Console/launch()
io/corbel/resources/ResourcesConsoleRunner/main(java.lang.String[])#io/corbel/lib/cli/console/Console/runScripts(java.lang.String[])
io/corbel/iam/auth/rule/ScopesAuthorizationRule/getAllowedScopes(java.util.Set,java.util.Set)#java/util/stream/Stream/map(java.util.function.Function)
io/corbel/iam/auth/rule/ScopesAuthorizationRule/getAllowedScopes(java.util.Set,java.util.Set)#java/util/stream/Stream/collect(java.util.stream.Collector)
io/corbel/iam/auth/rule/ScopesAuthorizationRule/getAllowedScopes(java.util.Set,java.util.Set)#java/util/stream/Collectors/toSet()
io/corbel/iam/auth/rule/ScopesAuthorizationRule/getAllowedScopes(java.util.Set,java.util.Set)#com/google/common/collect/Sets/intersection(java.util.Set,java.util.Set)
io/corbel/iam/auth/rule/ScopesAuthorizationRule/getAllowedScopes(java.util.Set,java.util.Set)#java/util/Collection/stream()
io/corbel/iam/auth/rule/ScopesAuthorizationRule/getAllowedScopes(java.util.Set,java.util.Set)#io/corbel/iam/service/ScopeService/expandScopes(java.util.Collection)
io/corbel/iam/auth/rule/ScopesAuthorizationRule/getAllowedScopes(java.util.Set,java.util.Set)#java/util/stream/Stream/filter(java.util.function.Predicate)
io/corbel/iam/auth/rule/ScopesAuthorizationRule/getRequestedScopes(io.corbel.iam.auth.AuthorizationRequestContext)#io/corbel/iam/model/User/getGroups()
io/corbel/iam/auth/rule/ScopesAuthorizationRule/getRequestedScopes(io.corbel.iam.auth.AuthorizationRequestContext)#io/corbel/iam/auth/AuthorizationRequestContext/hasPrincipal()
io/corbel/iam/auth/rule/ScopesAuthorizationRule/getRequestedScopes(io.corbel.iam.auth.AuthorizationRequestContext)#io/corbel/iam/auth/AuthorizationRequestContext/getRequestedDomain()
io/corbel/iam/auth/rule/ScopesAuthorizationRule/getRequestedScopes(io.corbel.iam.auth.AuthorizationRequestContext)#io/corbel/iam/service/GroupService/getGroupScopes(java.lang.String,java.util.Collection)
io/corbel/iam/auth/rule/ScopesAuthorizationRule/getRequestedScopes(io.corbel.iam.auth.AuthorizationRequestContext)#io/corbel/iam/model/Entity/getId()
io/corbel/iam/auth/rule/ScopesAuthorizationRule/getRequestedScopes(io.corbel.iam.auth.AuthorizationRequestContext)#com/google/common/collect/Sets/union(java.util.Set,java.util.Set)
io/corbel/iam/auth/rule/ScopesAuthorizationRule/getRequestedScopes(io.corbel.iam.auth.AuthorizationRequestContext)#io/corbel/iam/model/Client/getScopes()
io/corbel/iam/auth/rule/ScopesAuthorizationRule/getRequestedScopes(io.corbel.iam.auth.AuthorizationRequestContext)#io/corbel/iam/model/User/getScopes()
io/corbel/iam/auth/rule/ScopesAuthorizationRule/getRequestedScopes(io.corbel.iam.auth.AuthorizationRequestContext)#io/corbel/iam/auth/AuthorizationRequestContext/getPrincipal()
io/corbel/iam/auth/rule/ScopesAuthorizationRule/getRequestedScopes(io.corbel.iam.auth.AuthorizationRequestContext)#io/corbel/iam/auth/AuthorizationRequestContext/getIssuerClient()
io/corbel/iam/auth/rule/ScopesAuthorizationRule/checkRequestedScopes(java.util.Set,java.util.Set)#java/util/stream/Stream/map(java.util.function.Function)
io/corbel/iam/auth/rule/ScopesAuthorizationRule/checkRequestedScopes(java.util.Set,java.util.Set)#java/util/stream/Stream/collect(java.util.stream.Collector)
io/corbel/iam/auth/rule/ScopesAuthorizationRule/checkRequestedScopes(java.util.Set,java.util.Set)#io/corbel/iam/exception/UnauthorizedException/UnauthorizedException(java.lang.String)
io/corbel/iam/auth/rule/ScopesAuthorizationRule/checkRequestedScopes(java.util.Set,java.util.Set)#java/util/stream/Collectors/toSet()
io/corbel/iam/auth/rule/ScopesAuthorizationRule/checkRequestedScopes(java.util.Set,java.util.Set)#java/util/Collection/stream()
io/corbel/iam/auth/rule/ScopesAuthorizationRule/checkRequestedScopes(java.util.Set,java.util.Set)#java/util/Set/containsAll(java.util.Collection)
io/corbel/iam/auth/rule/ScopesAuthorizationRule/checkRequestedScopes(java.util.Set,java.util.Set)#com/google/common/collect/Sets/difference(java.util.Set,java.util.Set)
io/corbel/iam/auth/rule/ScopesAuthorizationRule/checkRequestedScopes(java.util.Set,java.util.Set)#io/corbel/iam/utils/Message/getMessage(java.lang.Object[])
io/corbel/iam/auth/rule/ScopesAuthorizationRule/process(io.corbel.iam.auth.AuthorizationRequestContext)#io/corbel/iam/auth/rule/ScopesAuthorizationRule/getAllowedScopes(java.util.Set,java.util.Set)
io/corbel/iam/auth/rule/ScopesAuthorizationRule/process(io.corbel.iam.auth.AuthorizationRequestContext)#io/corbel/iam/auth/rule/ScopesAuthorizationRule/getRequestedScopes(io.corbel.iam.auth.AuthorizationRequestContext)
io/corbel/iam/auth/rule/ScopesAuthorizationRule/process(io.corbel.iam.auth.AuthorizationRequestContext)#io/corbel/iam/model/Domain/getScopes()
io/corbel/iam/auth/rule/ScopesAuthorizationRule/process(io.corbel.iam.auth.AuthorizationRequestContext)#io/corbel/iam/auth/rule/ScopesAuthorizationRule/checkRequestedScopes(java.util.Set,java.util.Set)
io/corbel/iam/auth/rule/ScopesAuthorizationRule/process(io.corbel.iam.auth.AuthorizationRequestContext)#io/corbel/iam/service/ScopeService/expandScopes(java.util.Collection)
io/corbel/iam/auth/rule/ScopesAuthorizationRule/process(io.corbel.iam.auth.AuthorizationRequestContext)#io/corbel/iam/auth/AuthorizationRequestContext/getRequestedScopes()
io/corbel/iam/auth/rule/ScopesAuthorizationRule/process(io.corbel.iam.auth.AuthorizationRequestContext)#io/corbel/iam/auth/AuthorizationRequestContext/isCrossDomain()
io/corbel/iam/auth/rule/ScopesAuthorizationRule/process(io.corbel.iam.auth.AuthorizationRequestContext)#io/corbel/iam/auth/AuthorizationRequestContext/setExpandedRequestedScopes(java.util.Set)
io/corbel/iam/auth/rule/ScopesAuthorizationRule/process(io.corbel.iam.auth.AuthorizationRequestContext)#io/corbel/iam/auth/AuthorizationRequestContext/getRequestedDomain()
io/corbel/iam/auth/rule/ScopesAuthorizationRule/process(io.corbel.iam.auth.AuthorizationRequestContext)#java/util/Set/isEmpty()
io/corbel/iam/auth/rule/ScopesAuthorizationRule/process(io.corbel.iam.auth.AuthorizationRequestContext)#io/corbel/iam/auth/AuthorizationRequestContext/setTokenScopes(java.util.Set)
io/corbel/rem/internal/RemRegistryImplTest/testUriPatternPrefixMatchButExcludeRem()#io/corbel/rem/internal/InMemoryRemRegistry/registerRem(io.corbel.resources.rem.Rem,java.lang.String,org.springframework.http.HttpMethod[])
io/corbel/rem/internal/RemRegistryImplTest/testUriPatternPrefixMatchButExcludeRem()#org/fest/assertions/api/AbstractAssert/isNull()
io/corbel/rem/internal/RemRegistryImplTest/testUriPatternPrefixMatchButExcludeRem()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/rem/internal/RemRegistryImplTest/testUriPatternPrefixMatchButExcludeRem()#org/fest/assertions/api/Assertions/assertThat(T)
io/corbel/rem/internal/RemRegistryImplTest/testUriPatternPrefixMatchButExcludeRem()#io/corbel/rem/internal/InMemoryRemRegistry/getRem(java.lang.String,java.util.List,org.springframework.http.HttpMethod,java.util.List)
io/corbel/rem/internal/RemRegistryImplTest/testUriPatternPrefixMatchButExcludeRem()#java/util/Arrays/asList(T[])
io/corbel/rem/internal/RemRegistryImplTest/testTwoDistinticRegistry()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/rem/internal/RemRegistryImplTest/testTwoDistinticRegistry()#org/fest/assertions/api/Assertions/assertThat(T)
io/corbel/rem/internal/RemRegistryImplTest/testTwoDistinticRegistry()#io/corbel/rem/internal/InMemoryRemRegistry/registerRem(io.corbel.resources.rem.Rem,java.lang.String,org.springframework.http.MediaType,org.springframework.http.HttpMethod[])
io/corbel/rem/internal/RemRegistryImplTest/testTwoDistinticRegistry()#io/corbel/rem/internal/InMemoryRemRegistry/getRem(java.lang.String,java.util.List,org.springframework.http.HttpMethod,java.util.List)
io/corbel/rem/internal/RemRegistryImplTest/testTwoDistinticRegistry()#org/fest/assertions/api/AbstractAssert/isSameAs(A)
io/corbel/rem/internal/RemRegistryImplTest/testTwoDistinticRegistry()#java/util/Arrays/asList(T[])
io/corbel/rem/internal/RemRegistryImplTest/testUriPatternSufixMatch()#io/corbel/rem/internal/InMemoryRemRegistry/registerRem(io.corbel.resources.rem.Rem,java.lang.String,org.springframework.http.HttpMethod[])
io/corbel/rem/internal/RemRegistryImplTest/testUriPatternSufixMatch()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/rem/internal/RemRegistryImplTest/testUriPatternSufixMatch()#org/fest/assertions/api/Assertions/assertThat(T)
io/corbel/rem/internal/RemRegistryImplTest/testUriPatternSufixMatch()#io/corbel/rem/internal/InMemoryRemRegistry/getRem(java.lang.String,java.util.List,org.springframework.http.HttpMethod,java.util.List)
io/corbel/rem/internal/RemRegistryImplTest/testUriPatternSufixMatch()#org/fest/assertions/api/AbstractAssert/isSameAs(A)
io/corbel/rem/internal/RemRegistryImplTest/testUriPatternSufixMatch()#java/util/Arrays/asList(T[])
io/corbel/rem/internal/RemRegistryImplTest/testMatchingMediaType()#org/fest/assertions/api/AbstractAssert/isNull()
io/corbel/rem/internal/RemRegistryImplTest/testMatchingMediaType()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/rem/internal/RemRegistryImplTest/testMatchingMediaType()#org/springframework/http/MediaType/MediaType(java.lang.String,java.lang.String)
io/corbel/rem/internal/RemRegistryImplTest/testMatchingMediaType()#org/fest/assertions/api/Assertions/assertThat(T)
io/corbel/rem/internal/RemRegistryImplTest/testMatchingMediaType()#io/corbel/rem/internal/InMemoryRemRegistry/registerRem(io.corbel.resources.rem.Rem,java.lang.String,org.springframework.http.MediaType,org.springframework.http.HttpMethod[])
io/corbel/rem/internal/RemRegistryImplTest/testMatchingMediaType()#io/corbel/rem/internal/InMemoryRemRegistry/getRem(java.lang.String,java.util.List,org.springframework.http.HttpMethod,java.util.List)
io/corbel/rem/internal/RemRegistryImplTest/testMatchingMediaType()#org/fest/assertions/api/AbstractAssert/isSameAs(A)
io/corbel/rem/internal/RemRegistryImplTest/testMatchingMediaType()#java/util/Arrays/asList(T[])
io/corbel/rem/internal/RemRegistryImplTest/testSubsumedUriPatternPrefixes2()#io/corbel/rem/internal/InMemoryRemRegistry/registerRem(io.corbel.resources.rem.Rem,java.lang.String,org.springframework.http.HttpMethod[])
io/corbel/rem/internal/RemRegistryImplTest/testSubsumedUriPatternPrefixes2()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/rem/internal/RemRegistryImplTest/testSubsumedUriPatternPrefixes2()#org/fest/assertions/api/Assertions/assertThat(T)
io/corbel/rem/internal/RemRegistryImplTest/testSubsumedUriPatternPrefixes2()#io/corbel/rem/internal/InMemoryRemRegistry/getRem(java.lang.String,java.util.List,org.springframework.http.HttpMethod,java.util.List)
io/corbel/rem/internal/RemRegistryImplTest/testSubsumedUriPatternPrefixes2()#org/fest/assertions/api/AbstractAssert/isSameAs(A)
io/corbel/rem/internal/RemRegistryImplTest/testSubsumedUriPatternPrefixes2()#java/util/Arrays/asList(T[])
io/corbel/rem/internal/RemRegistryImplTest/testDubleRegistry()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/rem/internal/RemRegistryImplTest/testDubleRegistry()#org/fest/assertions/api/Assertions/assertThat(T)
io/corbel/rem/internal/RemRegistryImplTest/testDubleRegistry()#io/corbel/rem/internal/InMemoryRemRegistry/registerRem(io.corbel.resources.rem.Rem,java.lang.String,org.springframework.http.MediaType,org.springframework.http.HttpMethod[])
io/corbel/rem/internal/RemRegistryImplTest/testDubleRegistry()#io/corbel/rem/internal/InMemoryRemRegistry/getRem(java.lang.String,java.util.List,org.springframework.http.HttpMethod,java.util.List)
io/corbel/rem/internal/RemRegistryImplTest/testDubleRegistry()#org/fest/assertions/api/AbstractAssert/isSameAs(A)
io/corbel/rem/internal/RemRegistryImplTest/testDubleRegistry()#java/util/Arrays/asList(T[])
io/corbel/rem/internal/RemRegistryImplTest/testUriPatternSufixMatchButExcludeRem()#io/corbel/rem/internal/InMemoryRemRegistry/registerRem(io.corbel.resources.rem.Rem,java.lang.String,org.springframework.http.HttpMethod[])
io/corbel/rem/internal/RemRegistryImplTest/testUriPatternSufixMatchButExcludeRem()#org/fest/assertions/api/AbstractAssert/isNull()
io/corbel/rem/internal/RemRegistryImplTest/testUriPatternSufixMatchButExcludeRem()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/rem/internal/RemRegistryImplTest/testUriPatternSufixMatchButExcludeRem()#org/fest/assertions/api/Assertions/assertThat(T)
io/corbel/rem/internal/RemRegistryImplTest/testUriPatternSufixMatchButExcludeRem()#io/corbel/rem/internal/InMemoryRemRegistry/getRem(java.lang.String,java.util.List,org.springframework.http.HttpMethod,java.util.List)
io/corbel/rem/internal/RemRegistryImplTest/testUriPatternSufixMatchButExcludeRem()#java/util/Arrays/asList(T[])
io/corbel/rem/internal/RemRegistryImplTest/testUnmatch()#io/corbel/rem/internal/InMemoryRemRegistry/registerRem(io.corbel.resources.rem.Rem,java.lang.String,org.springframework.http.HttpMethod[])
io/corbel/rem/internal/RemRegistryImplTest/testUnmatch()#org/fest/assertions/api/AbstractAssert/isNull()
io/corbel/rem/internal/RemRegistryImplTest/testUnmatch()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/rem/internal/RemRegistryImplTest/testUnmatch()#org/fest/assertions/api/Assertions/assertThat(T)
io/corbel/rem/internal/RemRegistryImplTest/testUnmatch()#io/corbel/rem/internal/InMemoryRemRegistry/getRem(java.lang.String,java.util.List,org.springframework.http.HttpMethod,java.util.List)
io/corbel/rem/internal/RemRegistryImplTest/testUnmatch()#java/util/Arrays/asList(T[])
io/corbel/rem/internal/RemRegistryImplTest/testSubsumedUriPatternPrefixes()#io/corbel/rem/internal/InMemoryRemRegistry/registerRem(io.corbel.resources.rem.Rem,java.lang.String,org.springframework.http.HttpMethod[])
io/corbel/rem/internal/RemRegistryImplTest/testSubsumedUriPatternPrefixes()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/rem/internal/RemRegistryImplTest/testSubsumedUriPatternPrefixes()#org/fest/assertions/api/Assertions/assertThat(T)
io/corbel/rem/internal/RemRegistryImplTest/testSubsumedUriPatternPrefixes()#io/corbel/rem/internal/InMemoryRemRegistry/getRem(java.lang.String,java.util.List,org.springframework.http.HttpMethod,java.util.List)
io/corbel/rem/internal/RemRegistryImplTest/testSubsumedUriPatternPrefixes()#org/fest/assertions/api/AbstractAssert/isSameAs(A)
io/corbel/rem/internal/RemRegistryImplTest/testSubsumedUriPatternPrefixes()#java/util/Arrays/asList(T[])
io/corbel/rem/internal/RemRegistryImplTest/testSingleMediaType()#org/fest/assertions/api/AbstractAssert/isNull()
io/corbel/rem/internal/RemRegistryImplTest/testSingleMediaType()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/rem/internal/RemRegistryImplTest/testSingleMediaType()#org/fest/assertions/api/Assertions/assertThat(T)
io/corbel/rem/internal/RemRegistryImplTest/testSingleMediaType()#io/corbel/rem/internal/InMemoryRemRegistry/registerRem(io.corbel.resources.rem.Rem,java.lang.String,org.springframework.http.MediaType,org.springframework.http.HttpMethod[])
io/corbel/rem/internal/RemRegistryImplTest/testSingleMediaType()#io/corbel/rem/internal/InMemoryRemRegistry/getRem(java.lang.String,java.util.List,org.springframework.http.HttpMethod,java.util.List)
io/corbel/rem/internal/RemRegistryImplTest/testSingleMediaType()#org/fest/assertions/api/AbstractAssert/isSameAs(A)
io/corbel/rem/internal/RemRegistryImplTest/testSingleMediaType()#java/util/Arrays/asList(T[])
io/corbel/rem/internal/RemRegistryImplTest/setup()#io/corbel/rem/internal/InMemoryRemRegistry/InMemoryRemRegistry()
io/corbel/rem/internal/RemRegistryImplTest/testSingleMethod()#org/fest/assertions/api/AbstractAssert/isNull()
io/corbel/rem/internal/RemRegistryImplTest/testSingleMethod()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/rem/internal/RemRegistryImplTest/testSingleMethod()#org/fest/assertions/api/Assertions/assertThat(T)
io/corbel/rem/internal/RemRegistryImplTest/testSingleMethod()#io/corbel/rem/internal/InMemoryRemRegistry/registerRem(io.corbel.resources.rem.Rem,java.lang.String,org.springframework.http.MediaType,org.springframework.http.HttpMethod[])
io/corbel/rem/internal/RemRegistryImplTest/testSingleMethod()#io/corbel/rem/internal/InMemoryRemRegistry/getRem(java.lang.String,java.util.List,org.springframework.http.HttpMethod,java.util.List)
io/corbel/rem/internal/RemRegistryImplTest/testSingleMethod()#org/fest/assertions/api/AbstractAssert/isSameAs(A)
io/corbel/rem/internal/RemRegistryImplTest/testSingleMethod()#java/util/Arrays/asList(T[])
io/corbel/rem/internal/RemRegistryImplTest/testUriPatternPrefixMatch()#io/corbel/rem/internal/InMemoryRemRegistry/registerRem(io.corbel.resources.rem.Rem,java.lang.String,org.springframework.http.HttpMethod[])
io/corbel/rem/internal/RemRegistryImplTest/testUriPatternPrefixMatch()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/rem/internal/RemRegistryImplTest/testUriPatternPrefixMatch()#org/fest/assertions/api/Assertions/assertThat(T)
io/corbel/rem/internal/RemRegistryImplTest/testUriPatternPrefixMatch()#io/corbel/rem/internal/InMemoryRemRegistry/getRem(java.lang.String,java.util.List,org.springframework.http.HttpMethod,java.util.List)
io/corbel/rem/internal/RemRegistryImplTest/testUriPatternPrefixMatch()#org/fest/assertions/api/AbstractAssert/isSameAs(A)
io/corbel/rem/internal/RemRegistryImplTest/testUriPatternPrefixMatch()#java/util/Arrays/asList(T[])
io/corbel/rem/internal/RemRegistryImplTest/testMultipleMethod()#org/fest/assertions/api/AbstractAssert/isNull()
io/corbel/rem/internal/RemRegistryImplTest/testMultipleMethod()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/rem/internal/RemRegistryImplTest/testMultipleMethod()#org/fest/assertions/api/Assertions/assertThat(T)
io/corbel/rem/internal/RemRegistryImplTest/testMultipleMethod()#io/corbel/rem/internal/InMemoryRemRegistry/registerRem(io.corbel.resources.rem.Rem,java.lang.String,org.springframework.http.MediaType,org.springframework.http.HttpMethod[])
io/corbel/rem/internal/RemRegistryImplTest/testMultipleMethod()#io/corbel/rem/internal/InMemoryRemRegistry/getRem(java.lang.String,java.util.List,org.springframework.http.HttpMethod,java.util.List)
io/corbel/rem/internal/RemRegistryImplTest/testMultipleMethod()#org/fest/assertions/api/AbstractAssert/isSameAs(A)
io/corbel/rem/internal/RemRegistryImplTest/testMultipleMethod()#java/util/Arrays/asList(T[])
io/corbel/resources/rem/dao/RelationMoveOperationTest/posTest()#io/corbel/resources/rem/dao/RelationMoveOperation/create(java.lang.String)
io/corbel/resources/rem/dao/RelationMoveOperationTest/posTest()#io/corbel/resources/rem/dao/RelationMoveOperation/getValue()
io/corbel/resources/rem/dao/RelationMoveOperationTest/posTest()#org/junit/Assert/assertEquals(long,long)
io/corbel/resources/rem/dao/RelationMoveOperationTest/wrongOperationTest()#io/corbel/resources/rem/dao/RelationMoveOperation/create(java.lang.String)
io/corbel/resources/rem/dao/RelationMoveOperationTest/wrongFormatTest()#io/corbel/resources/rem/dao/RelationMoveOperation/create(java.lang.String)
io/corbel/evci/api/EventResourceTest/testRegisterEvent()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/evci/api/EventResourceTest/testRegisterEvent()#org/mockito/ArgumentCaptor/getValue()
io/corbel/evci/api/EventResourceTest/testRegisterEvent()#com/fasterxml/jackson/databind/JsonNode/get(java.lang.String)
io/corbel/evci/api/EventResourceTest/testRegisterEvent()#io/corbel/evci/service/EventsService/registerEvent(java.lang.String,com.fasterxml.jackson.databind.JsonNode)
io/corbel/evci/api/EventResourceTest/testRegisterEvent()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/evci/api/EventResourceTest/testRegisterEvent()#javax/ws/rs/client/WebTarget/request()
io/corbel/evci/api/EventResourceTest/testRegisterEvent()#javax/ws/rs/core/Response/getStatus()
io/corbel/evci/api/EventResourceTest/testRegisterEvent()#javax/ws/rs/client/Entity/json(T)
io/corbel/evci/api/EventResourceTest/testRegisterEvent()#com/fasterxml/jackson/databind/JsonNode/textValue()
io/corbel/evci/api/EventResourceTest/testRegisterEvent()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/evci/api/EventResourceTest/testRegisterEvent()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/evci/api/EventResourceTest/testRegisterEvent()#javax/ws/rs/client/SyncInvoker/post(javax.ws.rs.client.Entity,java.lang.Class)
io/corbel/evci/api/EventResourceTest/testRegisterEvent()#org/mockito/ArgumentCaptor/forClass(java.lang.Class)
io/corbel/evci/api/EventResourceTest/testRegisterEvent()#org/mockito/Mockito/verify(T)
io/corbel/evci/api/EventResourceTest/testRegisterEvent()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/evci/api/EventResourceTest/testRegisterEvent()#org/mockito/ArgumentCaptor/capture()
io/corbel/evci/api/EventResourceTest/testRegisterEvent()#org/mockito/Matchers/eq(T)
io/corbel/evci/api/EventResourceTest/testRegisterEvent()#org/junit/Assert/assertEquals(long,long)
io/corbel/evci/api/EventResourceTest/testRegisterFormParamsEvent()#javax/ws/rs/client/Entity/form(javax.ws.rs.core.MultivaluedMap)
io/corbel/evci/api/EventResourceTest/testRegisterFormParamsEvent()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/evci/api/EventResourceTest/testRegisterFormParamsEvent()#org/mockito/ArgumentCaptor/getValue()
io/corbel/evci/api/EventResourceTest/testRegisterFormParamsEvent()#com/fasterxml/jackson/databind/JsonNode/get(java.lang.String)
io/corbel/evci/api/EventResourceTest/testRegisterFormParamsEvent()#io/corbel/evci/service/EventsService/registerEvent(java.lang.String,com.fasterxml.jackson.databind.JsonNode)
io/corbel/evci/api/EventResourceTest/testRegisterFormParamsEvent()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/evci/api/EventResourceTest/testRegisterFormParamsEvent()#javax/ws/rs/client/WebTarget/request()
io/corbel/evci/api/EventResourceTest/testRegisterFormParamsEvent()#javax/ws/rs/core/Response/getStatus()
io/corbel/evci/api/EventResourceTest/testRegisterFormParamsEvent()#javax/ws/rs/core/MultivaluedHashMap/MultivaluedHashMap()
io/corbel/evci/api/EventResourceTest/testRegisterFormParamsEvent()#javax/ws/rs/core/MultivaluedMap/add(K,V)
io/corbel/evci/api/EventResourceTest/testRegisterFormParamsEvent()#com/fasterxml/jackson/databind/JsonNode/textValue()
io/corbel/evci/api/EventResourceTest/testRegisterFormParamsEvent()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/evci/api/EventResourceTest/testRegisterFormParamsEvent()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/evci/api/EventResourceTest/testRegisterFormParamsEvent()#javax/ws/rs/client/SyncInvoker/post(javax.ws.rs.client.Entity,java.lang.Class)
io/corbel/evci/api/EventResourceTest/testRegisterFormParamsEvent()#org/mockito/ArgumentCaptor/forClass(java.lang.Class)
io/corbel/evci/api/EventResourceTest/testRegisterFormParamsEvent()#org/mockito/Mockito/verify(T)
io/corbel/evci/api/EventResourceTest/testRegisterFormParamsEvent()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/evci/api/EventResourceTest/testRegisterFormParamsEvent()#org/mockito/ArgumentCaptor/capture()
io/corbel/evci/api/EventResourceTest/testRegisterFormParamsEvent()#org/mockito/Matchers/eq(T)
io/corbel/evci/api/EventResourceTest/testRegisterFormParamsEvent()#org/junit/Assert/assertEquals(long,long)
io/corbel/evci/api/EventResourceTest/setUp()#org/mockito/Mockito/reset(T[])
io/corbel/evci/api/EventResourceTest/testRegisterInvalidEvent()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/evci/api/EventResourceTest/testRegisterInvalidEvent()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/evci/api/EventResourceTest/testRegisterInvalidEvent()#javax/ws/rs/client/WebTarget/request()
io/corbel/evci/api/EventResourceTest/testRegisterInvalidEvent()#java/lang/Throwable/getCause()
io/corbel/evci/api/EventResourceTest/testRegisterInvalidEvent()#javax/ws/rs/client/Entity/json(T)
io/corbel/evci/api/EventResourceTest/testRegisterInvalidEvent()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/evci/api/EventResourceTest/testRegisterInvalidEvent()#javax/ws/rs/client/SyncInvoker/post(javax.ws.rs.client.Entity,java.lang.Class)
io/corbel/evci/api/EventResourceTest/testRegisterEmptyFormParamsEvent()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/evci/api/EventResourceTest/testRegisterEmptyFormParamsEvent()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/evci/api/EventResourceTest/testRegisterEmptyFormParamsEvent()#javax/ws/rs/client/WebTarget/request()
io/corbel/evci/api/EventResourceTest/testRegisterEmptyFormParamsEvent()#java/lang/Throwable/getCause()
io/corbel/evci/api/EventResourceTest/testRegisterEmptyFormParamsEvent()#javax/ws/rs/client/Entity/json(T)
io/corbel/evci/api/EventResourceTest/testRegisterEmptyFormParamsEvent()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/evci/api/EventResourceTest/testRegisterEmptyFormParamsEvent()#javax/ws/rs/client/SyncInvoker/post(javax.ws.rs.client.Entity,java.lang.Class)
io/corbel/evci/api/EventResourceTest/testRegisterFormParamsWithMultipleValueEvent()#javax/ws/rs/client/Entity/form(javax.ws.rs.core.MultivaluedMap)
io/corbel/evci/api/EventResourceTest/testRegisterFormParamsWithMultipleValueEvent()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/evci/api/EventResourceTest/testRegisterFormParamsWithMultipleValueEvent()#org/mockito/ArgumentCaptor/getValue()
io/corbel/evci/api/EventResourceTest/testRegisterFormParamsWithMultipleValueEvent()#com/fasterxml/jackson/databind/JsonNode/get(java.lang.String)
io/corbel/evci/api/EventResourceTest/testRegisterFormParamsWithMultipleValueEvent()#io/corbel/evci/service/EventsService/registerEvent(java.lang.String,com.fasterxml.jackson.databind.JsonNode)
io/corbel/evci/api/EventResourceTest/testRegisterFormParamsWithMultipleValueEvent()#javax/ws/rs/core/Response/getStatus()
io/corbel/evci/api/EventResourceTest/testRegisterFormParamsWithMultipleValueEvent()#javax/ws/rs/core/MultivaluedHashMap/MultivaluedHashMap()
io/corbel/evci/api/EventResourceTest/testRegisterFormParamsWithMultipleValueEvent()#com/fasterxml/jackson/databind/JsonNode/textValue()
io/corbel/evci/api/EventResourceTest/testRegisterFormParamsWithMultipleValueEvent()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/evci/api/EventResourceTest/testRegisterFormParamsWithMultipleValueEvent()#javax/ws/rs/client/SyncInvoker/post(javax.ws.rs.client.Entity,java.lang.Class)
io/corbel/evci/api/EventResourceTest/testRegisterFormParamsWithMultipleValueEvent()#org/mockito/ArgumentCaptor/forClass(java.lang.Class)
io/corbel/evci/api/EventResourceTest/testRegisterFormParamsWithMultipleValueEvent()#org/mockito/Mockito/verify(T)
io/corbel/evci/api/EventResourceTest/testRegisterFormParamsWithMultipleValueEvent()#com/fasterxml/jackson/databind/JsonNode/toString()
io/corbel/evci/api/EventResourceTest/testRegisterFormParamsWithMultipleValueEvent()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/evci/api/EventResourceTest/testRegisterFormParamsWithMultipleValueEvent()#javax/ws/rs/client/WebTarget/request()
io/corbel/evci/api/EventResourceTest/testRegisterFormParamsWithMultipleValueEvent()#java/util/Arrays/asList(T[])
io/corbel/evci/api/EventResourceTest/testRegisterFormParamsWithMultipleValueEvent()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/evci/api/EventResourceTest/testRegisterFormParamsWithMultipleValueEvent()#org/mockito/ArgumentCaptor/capture()
io/corbel/evci/api/EventResourceTest/testRegisterFormParamsWithMultipleValueEvent()#org/mockito/Matchers/eq(T)
io/corbel/evci/api/EventResourceTest/testRegisterFormParamsWithMultipleValueEvent()#org/junit/Assert/assertEquals(long,long)
io/corbel/evci/api/EventResourceTest/testRegisterFormParamsWithMultipleValueEvent()#javax/ws/rs/core/MultivaluedMap/addAll(K,java.util.List)
io/corbel/evci/api/EventResourceTest/testRegisterFormParamsWithMultipleValueEvent()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/evci/api/EventResourceTest/testRegisterEmptyEvent()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/evci/api/EventResourceTest/testRegisterEmptyEvent()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/evci/api/EventResourceTest/testRegisterEmptyEvent()#javax/ws/rs/client/WebTarget/request()
io/corbel/evci/api/EventResourceTest/testRegisterEmptyEvent()#java/lang/Throwable/getCause()
io/corbel/evci/api/EventResourceTest/testRegisterEmptyEvent()#javax/ws/rs/client/Entity/json(T)
io/corbel/evci/api/EventResourceTest/testRegisterEmptyEvent()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/evci/api/EventResourceTest/testRegisterEmptyEvent()#javax/ws/rs/client/SyncInvoker/post(javax.ws.rs.client.Entity,java.lang.Class)
io/corbel/notifications/NotificationsRunner/main(java.lang.String[])#org/springframework/context/annotation/AnnotationConfigApplicationContext/AnnotationConfigApplicationContext(java.lang.Class<?>[])
io/corbel/notifications/NotificationsRunner/main(java.lang.String[])#io/corbel/notifications/NotificationsService/NotificationsService(org.springframework.context.ApplicationContext)
io/corbel/notifications/NotificationsRunner/main(java.lang.String[])#org/springframework/core/env/EnvironmentCapable/getEnvironment()
io/corbel/notifications/NotificationsRunner/main(java.lang.String[])#io/corbel/notifications/NotificationsService/getArtifactId()
io/corbel/notifications/NotificationsRunner/main(java.lang.String[])#org/slf4j/Logger/info(java.lang.String)
io/corbel/notifications/NotificationsRunner/main(java.lang.String[])#io/corbel/lib/ws/cli/ServiceRunner/setCommandLine(io.corbel.lib.ws.cli.CommandLineI)
io/corbel/notifications/NotificationsRunner/main(java.lang.String[])#io/corbel/lib/ws/cli/GenericConsole/GenericConsole(java.lang.String,java.lang.Class)
io/corbel/notifications/NotificationsRunner/main(java.lang.String[])#org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)
io/corbel/notifications/NotificationsRunner/main(java.lang.String[])#java/lang/System/setProperty(java.lang.String,java.lang.String)
io/corbel/notifications/NotificationsRunner/main(java.lang.String[])#org/springframework/core/env/PropertyResolver/getProperty(java.lang.String,java.lang.Class)
io/corbel/notifications/NotificationsRunner/main(java.lang.String[])#io/corbel/lib/ws/cli/ServiceRunner/run(java.lang.String[])
io/corbel/iam/auth/provider/GoogleProviderTest/before()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/auth/provider/GoogleProviderTest/before()#io/corbel/iam/auth/provider/GoogleProvider/GoogleProvider(io.corbel.iam.repository.IdentityRepository)
io/corbel/iam/auth/provider/GoogleProviderTest/before()#io/corbel/iam/model/Identity/Identity()
io/corbel/iam/auth/provider/GoogleProviderTest/before()#io/corbel/iam/repository/IdentityRepository/findByOauthIdAndDomainAndOauthService(java.lang.String,java.lang.String,java.lang.String)
io/corbel/iam/auth/provider/GoogleProviderTest/before()#io/corbel/iam/model/Identity/setOauthId(java.lang.String)
io/corbel/iam/auth/provider/GoogleProviderTest/before()#java/util/Map/put(K,V)
io/corbel/iam/auth/provider/GoogleProviderTest/before()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/iam/auth/provider/GoogleProviderTest/before()#org/mockito/Mockito/when(T)
io/corbel/iam/auth/provider/GoogleProviderTest/before()#io/corbel/iam/auth/provider/Provider/setConfiguration(java.util.Map)
io/corbel/iam/auth/provider/GoogleProviderTest/before()#java/util/HashMap/HashMap()
io/corbel/iam/auth/provider/GoogleProviderTest/isAuthenticatedWithTokenTest()#io/corbel/iam/auth/OauthParams/OauthParams()
io/corbel/iam/auth/provider/GoogleProviderTest/isAuthenticatedWithTokenTest()#io/corbel/iam/auth/provider/Provider/getIdentity(io.corbel.iam.auth.OauthParams,java.lang.String,java.lang.String)
io/corbel/iam/auth/provider/GoogleProviderTest/isAuthenticatedWithTokenTest()#org/fest/assertions/api/AbstractAssert/isNotNull()
io/corbel/iam/auth/provider/GoogleProviderTest/isAuthenticatedWithTokenTest()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/iam/auth/provider/GoogleProviderTest/isAuthenticatedWithTokenTest()#org/fest/assertions/api/Assertions/assertThat(T)
io/corbel/iam/auth/provider/GoogleProviderTest/isAuthenticatedWithTokenTest()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/iam/auth/provider/GoogleProviderTest/isAuthenticatedWithTokenTest()#io/corbel/iam/auth/OauthParams/setAccessToken(java.lang.String)
io/corbel/iam/auth/provider/GoogleProviderTest/isAuthenticatedWithTokenTest()#io/corbel/iam/model/Identity/getOauthId()
io/corbel/iam/auth/provider/GoogleProviderTest/getAuthUrlTest()#java/net/URI/URI(java.lang.String)
io/corbel/iam/auth/provider/GoogleProviderTest/getAuthUrlTest()#java/io/PrintStream/println(java.lang.String)
io/corbel/iam/auth/provider/GoogleProviderTest/getAuthUrlTest()#io/corbel/iam/auth/provider/Provider/getAuthUrl(java.lang.String)
io/corbel/iam/auth/provider/GoogleProviderTest/getAuthUrlTest()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/iam/auth/provider/GoogleProviderTest/getAuthUrlTest()#java/net/URI/getHost()
io/corbel/iam/auth/provider/GoogleProviderTest/getAuthUrlTest()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/iam/auth/provider/GoogleProviderTest/isAuthenticatedWithCodeTest()#io/corbel/iam/auth/OauthParams/OauthParams()
io/corbel/iam/auth/provider/GoogleProviderTest/isAuthenticatedWithCodeTest()#io/corbel/iam/auth/OauthParams/setCode(java.lang.String)
io/corbel/iam/auth/provider/GoogleProviderTest/isAuthenticatedWithCodeTest()#io/corbel/iam/auth/provider/Provider/getIdentity(io.corbel.iam.auth.OauthParams,java.lang.String,java.lang.String)
io/corbel/iam/utils/UserDomainIdGenerator/generateDeviceId(java.lang.String,java.lang.String,java.lang.String)#com/google/common/base/Joiner/join(java.lang.Object,java.lang.Object,java.lang.Object[])
io/corbel/iam/utils/UserDomainIdGenerator/generateDeviceId(java.lang.String,java.lang.String,java.lang.String)#com/google/common/base/Joiner/on(java.lang.String)
io/corbel/iam/auth/provider/Provider/UrlGenerator/generateUrl(java.lang.String,java.lang.String,java.lang.String)#java/net/URLEncoder/encode(java.lang.String,java.lang.String)
io/corbel/iam/auth/provider/Provider/UrlGenerator/generateUrl(java.lang.String,java.lang.String,java.lang.String)#java/lang/String/contains(java.lang.CharSequence)
io/corbel/oauth/service/DefaultClientServiceTest/setup()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/oauth/service/DefaultClientServiceTest/setup()#io/corbel/oauth/model/Client/Client()
io/corbel/oauth/service/DefaultClientServiceTest/setup()#io/corbel/oauth/service/DefaultClientService/DefaultClientService(io.corbel.oauth.repository.ClientRepository)
io/corbel/oauth/service/DefaultClientServiceTest/setup()#io/corbel/oauth/model/Client/setRedirectRegexp(java.lang.String)
io/corbel/oauth/service/DefaultClientServiceTest/testRegexp()#org/fest/assertions/api/BooleanAssert/isTrue()
io/corbel/oauth/service/DefaultClientServiceTest/testRegexp()#org/fest/assertions/api/Assertions/assertThat(boolean)
io/corbel/oauth/service/DefaultClientServiceTest/testRegexp()#io/corbel/oauth/service/ClientService/verifyRedirectUri(java.lang.String,io.corbel.oauth.model.Client)
io/corbel/iam/auth/rule/ClientSideAuthenticationAllowedAuthorizationRule/process(io.corbel.iam.auth.AuthorizationRequestContext)#io/corbel/iam/auth/AuthorizationRequestContext/isOAuth()
io/corbel/iam/auth/rule/ClientSideAuthenticationAllowedAuthorizationRule/process(io.corbel.iam.auth.AuthorizationRequestContext)#io/corbel/iam/exception/UnauthorizedException/UnauthorizedException(java.lang.String)
io/corbel/iam/auth/rule/ClientSideAuthenticationAllowedAuthorizationRule/process(io.corbel.iam.auth.AuthorizationRequestContext)#io/corbel/iam/model/Client/getClientSideAuthentication()
io/corbel/iam/auth/rule/ClientSideAuthenticationAllowedAuthorizationRule/process(io.corbel.iam.auth.AuthorizationRequestContext)#io/corbel/iam/auth/AuthorizationRequestContext/hasPrincipal()
io/corbel/iam/auth/rule/ClientSideAuthenticationAllowedAuthorizationRule/process(io.corbel.iam.auth.AuthorizationRequestContext)#io/corbel/iam/auth/AuthorizationRequestContext/hasRefreshToken()
io/corbel/iam/auth/rule/ClientSideAuthenticationAllowedAuthorizationRule/process(io.corbel.iam.auth.AuthorizationRequestContext)#io/corbel/iam/auth/AuthorizationRequestContext/getIssuerClient()
io/corbel/iam/auth/rule/ClientSideAuthenticationAllowedAuthorizationRule/process(io.corbel.iam.auth.AuthorizationRequestContext)#io/corbel/iam/utils/Message/getMessage(java.lang.Object[])
io/corbel/iam/auth/rule/ClientSideAuthenticationAllowedAuthorizationRule/process(io.corbel.iam.auth.AuthorizationRequestContext)#io/corbel/iam/auth/AuthorizationRequestContext/isBasic()
io/corbel/resources/rem/acl/AclGetManagedCollectionRem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional)#io/corbel/resources/rem/service/AclConfigurationService/getConfigurations(java.lang.String)
io/corbel/resources/rem/acl/AclGetManagedCollectionRem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional)#io/corbel/resources/rem/request/RequestParameters/getRequestedDomain()
io/corbel/resources/rem/acl/AclGetManagedCollectionRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/resources/rem/request/ResourceId/getId()
io/corbel/resources/rem/acl/AclGetManagedCollectionRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/resources/rem/request/RequestParameters/getRequestedDomain()
io/corbel/resources/rem/acl/AclGetManagedCollectionRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/resources/rem/service/AclConfigurationService/getConfiguration(java.lang.String,java.lang.String)
io/corbel/oauth/service/DefaultMailResetPasswordService/createEmailResetPasswordToken(java.lang.String,java.lang.String)#io/corbel/lib/token/TokenGrant/getAccessToken()
io/corbel/oauth/service/DefaultMailResetPasswordService/createEmailResetPasswordToken(java.lang.String,java.lang.String)#io/corbel/lib/token/TokenInfo/Builder/build()
io/corbel/oauth/service/DefaultMailResetPasswordService/createEmailResetPasswordToken(java.lang.String,java.lang.String)#io/corbel/lib/token/TokenInfo/Builder/setOneUseToken(boolean)
io/corbel/oauth/service/DefaultMailResetPasswordService/createEmailResetPasswordToken(java.lang.String,java.lang.String)#io/corbel/lib/token/factory/TokenFactory/createToken(io.corbel.lib.token.TokenInfo,long,java.lang.String[])
io/corbel/oauth/service/DefaultMailResetPasswordService/createEmailResetPasswordToken(java.lang.String,java.lang.String)#io/corbel/oauth/mail/NotificationConfiguration/getTokenDurationInSeconds()
io/corbel/oauth/service/DefaultMailResetPasswordService/createEmailResetPasswordToken(java.lang.String,java.lang.String)#io/corbel/lib/token/TokenInfo/Builder/setClientId(java.lang.String)
io/corbel/oauth/service/DefaultMailResetPasswordService/createEmailResetPasswordToken(java.lang.String,java.lang.String)#io/corbel/lib/token/TokenInfo/newBuilder()
io/corbel/oauth/service/DefaultMailResetPasswordService/createEmailResetPasswordToken(java.lang.String,java.lang.String)#io/corbel/lib/token/TokenInfo/Builder/setUserId(java.lang.String)
io/corbel/oauth/service/DefaultMailResetPasswordService/createEmailResetPasswordToken(java.lang.String,java.lang.String)#io/corbel/lib/token/TokenInfo/Builder/setType(io.corbel.lib.token.model.TokenType)
io/corbel/oauth/service/DefaultMailResetPasswordService/sendMailResetPassword(io.corbel.oauth.model.Client,java.lang.String,java.lang.String)#com/google/common/collect/ImmutableMap/of(K,V)
io/corbel/oauth/service/DefaultMailResetPasswordService/sendMailResetPassword(io.corbel.oauth.model.Client,java.lang.String,java.lang.String)#io/corbel/oauth/model/Client/getResetUrl()
io/corbel/oauth/service/DefaultMailResetPasswordService/sendMailResetPassword(io.corbel.oauth.model.Client,java.lang.String,java.lang.String)#java/util/Optional/ofNullable(T)
io/corbel/oauth/service/DefaultMailResetPasswordService/sendMailResetPassword(io.corbel.oauth.model.Client,java.lang.String,java.lang.String)#io/corbel/oauth/service/DefaultMailResetPasswordService/createEmailResetPasswordToken(java.lang.String,java.lang.String)
io/corbel/oauth/service/DefaultMailResetPasswordService/sendMailResetPassword(io.corbel.oauth.model.Client,java.lang.String,java.lang.String)#io/corbel/oauth/model/Client/getDomain()
io/corbel/oauth/service/DefaultMailResetPasswordService/sendMailResetPassword(io.corbel.oauth.model.Client,java.lang.String,java.lang.String)#io/corbel/oauth/mail/NotificationConfiguration/getNotificationId()
io/corbel/oauth/service/DefaultMailResetPasswordService/sendMailResetPassword(io.corbel.oauth.model.Client,java.lang.String,java.lang.String)#java/lang/String/replace(java.lang.CharSequence,java.lang.CharSequence)
io/corbel/oauth/service/DefaultMailResetPasswordService/sendMailResetPassword(io.corbel.oauth.model.Client,java.lang.String,java.lang.String)#io/corbel/oauth/model/Client/getName()
io/corbel/oauth/service/DefaultMailResetPasswordService/sendMailResetPassword(io.corbel.oauth.model.Client,java.lang.String,java.lang.String)#io/corbel/oauth/service/SendNotificationService/sendNotification(java.lang.String,java.lang.String,java.lang.String,java.util.Map)
io/corbel/oauth/service/DefaultMailResetPasswordService/sendMailResetPassword(io.corbel.oauth.model.Client,java.lang.String,java.lang.String)#io/corbel/oauth/model/Client/getResetNotificationId()
io/corbel/oauth/service/DefaultMailResetPasswordService/sendMailResetPassword(io.corbel.oauth.model.Client,java.lang.String,java.lang.String)#io/corbel/oauth/mail/NotificationConfiguration/getClientUrl()
io/corbel/oauth/service/DefaultMailResetPasswordService/sendMailResetPassword(io.corbel.oauth.model.Client,java.lang.String,java.lang.String)#java/util/Optional/orElse(T)
io/corbel/oauth/service/DefaultUserServiceTest/testDeleteUser()#org/mockito/Mockito/verify(T,org.mockito.verification.VerificationMode)
io/corbel/oauth/service/DefaultUserServiceTest/testDeleteUser()#io/corbel/oauth/service/DefaultUserService/deleteUser(java.lang.String)
io/corbel/oauth/service/DefaultUserServiceTest/testDeleteUser()#org/mockito/Mockito/times(int)
io/corbel/oauth/service/DefaultUserServiceTest/testDeleteUser()#org/springframework/data/repository/CrudRepository/delete(ID)
io/corbel/oauth/service/DefaultUserServiceTest/testGetUser()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/oauth/service/DefaultUserServiceTest/testGetUser()#io/corbel/oauth/service/DefaultUserService/getUser(java.lang.String)
io/corbel/oauth/service/DefaultUserServiceTest/testGetUser()#org/springframework/data/repository/CrudRepository/findOne(ID)
io/corbel/oauth/service/DefaultUserServiceTest/testGetUser()#org/fest/assertions/api/Assertions/assertThat(T)
io/corbel/oauth/service/DefaultUserServiceTest/testGetUser()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/oauth/service/DefaultUserServiceTest/testGetUser()#org/mockito/Mockito/when(T)
io/corbel/oauth/service/DefaultUserServiceTest/testGetUser()#io/corbel/oauth/TestUtils/createUserTest(io.corbel.oauth.model.Role)
io/corbel/oauth/service/DefaultUserServiceTest/testSendMailResetPasswordWhenUserNotExists()#io/corbel/oauth/service/DefaultUserService/sendMailResetPassword(java.lang.String,io.corbel.oauth.model.Client)
io/corbel/oauth/service/DefaultUserServiceTest/testSendMailResetPasswordWhenUserNotExists()#org/mockito/Mockito/times(int)
io/corbel/oauth/service/DefaultUserServiceTest/testSendMailResetPasswordWhenUserNotExists()#org/mockito/Matchers/any()
io/corbel/oauth/service/DefaultUserServiceTest/testSendMailResetPasswordWhenUserNotExists()#org/mockito/Mockito/verify(T,org.mockito.verification.VerificationMode)
io/corbel/oauth/service/DefaultUserServiceTest/testSendMailResetPasswordWhenUserNotExists()#io/corbel/oauth/service/MailResetPasswordService/sendMailResetPassword(io.corbel.oauth.model.Client,java.lang.String,java.lang.String)
io/corbel/oauth/service/DefaultUserServiceTest/testVerifierUser()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/oauth/service/DefaultUserServiceTest/testVerifierUser()#org/fest/assertions/api/AbstractAssert/isNull()
io/corbel/oauth/service/DefaultUserServiceTest/testVerifierUser()#org/fest/assertions/api/AbstractAssert/isNotNull()
io/corbel/oauth/service/DefaultUserServiceTest/testVerifierUser()#io/corbel/oauth/repository/UserRepository/findByUsernameAndDomain(java.lang.String,java.lang.String)
io/corbel/oauth/service/DefaultUserServiceTest/testVerifierUser()#org/fest/assertions/api/Assertions/assertThat(T)
io/corbel/oauth/service/DefaultUserServiceTest/testVerifierUser()#io/corbel/oauth/service/DefaultUserService/findByUserNameAndDomain(java.lang.String,java.lang.String)
io/corbel/oauth/service/DefaultUserServiceTest/testVerifierUser()#org/mockito/Mockito/when(T)
io/corbel/oauth/service/DefaultUserServiceTest/testVerifierUser()#io/corbel/oauth/TestUtils/createUserTest(io.corbel.oauth.model.Role)
io/corbel/oauth/service/DefaultUserServiceTest/testSendMailWhenChangePassword()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/oauth/service/DefaultUserServiceTest/testSendMailWhenChangePassword()#io/corbel/oauth/model/User/getUsername()
io/corbel/oauth/service/DefaultUserServiceTest/testSendMailWhenChangePassword()#io/corbel/oauth/model/User/getEmail()
io/corbel/oauth/service/DefaultUserServiceTest/testSendMailWhenChangePassword()#io/corbel/oauth/model/User/getId()
io/corbel/oauth/service/DefaultUserServiceTest/testSendMailWhenChangePassword()#org/mockito/Mockito/verify(T)
io/corbel/oauth/service/DefaultUserServiceTest/testSendMailWhenChangePassword()#io/corbel/oauth/service/MailChangePasswordService/sendMailChangePassword(io.corbel.oauth.model.Client,java.lang.String,java.lang.String)
io/corbel/oauth/service/DefaultUserServiceTest/testSendMailWhenChangePassword()#org/springframework/data/repository/CrudRepository/findOne(ID)
io/corbel/oauth/service/DefaultUserServiceTest/testSendMailWhenChangePassword()#io/corbel/oauth/model/User/setPassword(java.lang.String)
io/corbel/oauth/service/DefaultUserServiceTest/testSendMailWhenChangePassword()#io/corbel/oauth/repository/UserRepository/findById(java.lang.String)
io/corbel/oauth/service/DefaultUserServiceTest/testSendMailWhenChangePassword()#io/corbel/oauth/model/User/setEmail(java.lang.String)
io/corbel/oauth/service/DefaultUserServiceTest/testSendMailWhenChangePassword()#io/corbel/oauth/service/DefaultUserService/updateUser(io.corbel.oauth.model.User,io.corbel.oauth.model.User,io.corbel.oauth.model.Client)
io/corbel/oauth/service/DefaultUserServiceTest/testSendMailWhenChangePassword()#org/mockito/Mockito/when(T)
io/corbel/oauth/service/DefaultUserServiceTest/testSendMailWhenChangePassword()#io/corbel/oauth/TestUtils/createUserTest(io.corbel.oauth.model.Role)
io/corbel/oauth/service/DefaultUserServiceTest/testGetUserProfile()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/oauth/service/DefaultUserServiceTest/testGetUserProfile()#io/corbel/oauth/service/DefaultUserService/getUser(java.lang.String)
io/corbel/oauth/service/DefaultUserServiceTest/testGetUserProfile()#org/springframework/data/repository/CrudRepository/findOne(ID)
io/corbel/oauth/service/DefaultUserServiceTest/testGetUserProfile()#org/fest/assertions/api/Assertions/assertThat(T)
io/corbel/oauth/service/DefaultUserServiceTest/testGetUserProfile()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/oauth/service/DefaultUserServiceTest/testGetUserProfile()#org/mockito/Mockito/when(T)
io/corbel/oauth/service/DefaultUserServiceTest/testGetUserProfile()#io/corbel/oauth/TestUtils/createUserTest(io.corbel.oauth.model.Role)
io/corbel/oauth/service/DefaultUserServiceTest/setup()#io/corbel/oauth/service/DefaultUserService/DefaultUserService(io.corbel.oauth.repository.UserRepository,io.corbel.oauth.service.MailValidationService,io.corbel.oauth.service.MailResetPasswordService,io.corbel.oauth.service.MailChangePasswordService)
io/corbel/oauth/service/DefaultUserServiceTest/setup()#io/corbel/oauth/model/Client/Client()
io/corbel/oauth/service/DefaultUserServiceTest/setup()#io/corbel/oauth/model/Client/setDomain(java.lang.String)
io/corbel/oauth/service/DefaultUserServiceTest/testExistsByUsernameAndDomain()#org/mockito/Mockito/verify(T)
io/corbel/oauth/service/DefaultUserServiceTest/testExistsByUsernameAndDomain()#io/corbel/oauth/repository/UserRepositoryCustom/existsByUsernameAndDomain(java.lang.String,java.lang.String)
io/corbel/oauth/service/DefaultUserServiceTest/testExistsByUsernameAndDomain()#io/corbel/oauth/service/DefaultUserService/existsByUsernameAndDomain(java.lang.String,java.lang.String)
io/corbel/oauth/service/DefaultUserServiceTest/testSendMailWhenChangeEmail()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/oauth/service/DefaultUserServiceTest/testSendMailWhenChangeEmail()#io/corbel/oauth/model/User/getEmail()
io/corbel/oauth/service/DefaultUserServiceTest/testSendMailWhenChangeEmail()#io/corbel/oauth/service/MailValidationService/sendMailValidation(io.corbel.oauth.model.Client,java.lang.String,java.lang.String)
io/corbel/oauth/service/DefaultUserServiceTest/testSendMailWhenChangeEmail()#io/corbel/oauth/model/User/getId()
io/corbel/oauth/service/DefaultUserServiceTest/testSendMailWhenChangeEmail()#org/mockito/Mockito/verify(T)
io/corbel/oauth/service/DefaultUserServiceTest/testSendMailWhenChangeEmail()#io/corbel/oauth/model/User/setPassword(java.lang.String)
io/corbel/oauth/service/DefaultUserServiceTest/testSendMailWhenChangeEmail()#io/corbel/oauth/repository/UserRepository/findById(java.lang.String)
io/corbel/oauth/service/DefaultUserServiceTest/testSendMailWhenChangeEmail()#io/corbel/oauth/model/User/setEmail(java.lang.String)
io/corbel/oauth/service/DefaultUserServiceTest/testSendMailWhenChangeEmail()#io/corbel/oauth/service/DefaultUserService/updateUser(io.corbel.oauth.model.User,io.corbel.oauth.model.User,io.corbel.oauth.model.Client)
io/corbel/oauth/service/DefaultUserServiceTest/testSendMailWhenChangeEmail()#org/mockito/Mockito/when(T)
io/corbel/oauth/service/DefaultUserServiceTest/testSendMailWhenChangeEmail()#io/corbel/oauth/TestUtils/createUserTest(io.corbel.oauth.model.Role)
io/corbel/oauth/service/DefaultUserServiceTest/testFindByUserNameAndDomain()#org/mockito/Mockito/verify(T)
io/corbel/oauth/service/DefaultUserServiceTest/testFindByUserNameAndDomain()#io/corbel/oauth/repository/UserRepository/findByUsernameAndDomain(java.lang.String,java.lang.String)
io/corbel/oauth/service/DefaultUserServiceTest/testFindByUserNameAndDomain()#io/corbel/oauth/service/DefaultUserService/findByUserNameAndDomain(java.lang.String,java.lang.String)
io/corbel/oauth/service/DefaultUserServiceTest/testSendMailResetPassword()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/oauth/service/DefaultUserServiceTest/testSendMailResetPassword()#io/corbel/oauth/service/MailResetPasswordService/sendMailResetPassword(io.corbel.oauth.model.Client,java.lang.String,java.lang.String)
io/corbel/oauth/service/DefaultUserServiceTest/testSendMailResetPassword()#io/corbel/oauth/model/User/getId()
io/corbel/oauth/service/DefaultUserServiceTest/testSendMailResetPassword()#org/mockito/Mockito/verify(T)
io/corbel/oauth/service/DefaultUserServiceTest/testSendMailResetPassword()#io/corbel/oauth/service/DefaultUserService/sendMailResetPassword(java.lang.String,io.corbel.oauth.model.Client)
io/corbel/oauth/service/DefaultUserServiceTest/testSendMailResetPassword()#io/corbel/oauth/repository/UserRepository/findByEmailAndDomain(java.lang.String,java.lang.String)
io/corbel/oauth/service/DefaultUserServiceTest/testSendMailResetPassword()#org/mockito/Mockito/when(T)
io/corbel/oauth/service/DefaultUserServiceTest/testSendMailResetPassword()#io/corbel/oauth/TestUtils/createUserTest(io.corbel.oauth.model.Role)
io/corbel/oauth/service/DefaultUserServiceTest/testCreateUser()#org/mockito/Mockito/verify(T,org.mockito.verification.VerificationMode)
io/corbel/oauth/service/DefaultUserServiceTest/testCreateUser()#io/corbel/oauth/service/DefaultUserService/createUser(io.corbel.oauth.model.User,io.corbel.oauth.model.Client)
io/corbel/oauth/service/DefaultUserServiceTest/testCreateUser()#org/mockito/stubbing/OngoingStubbing/thenAnswer(org.mockito.stubbing.Answer)
io/corbel/oauth/service/DefaultUserServiceTest/testCreateUser()#org/mockito/Mockito/times(int)
io/corbel/oauth/service/DefaultUserServiceTest/testCreateUser()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/oauth/service/DefaultUserServiceTest/testCreateUser()#org/springframework/data/repository/CrudRepository/save(S)
io/corbel/oauth/service/DefaultUserServiceTest/testCreateUser()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/oauth/service/DefaultUserServiceTest/testCreateUser()#org/mockito/Mockito/when(T)
io/corbel/oauth/service/DefaultUserServiceTest/testCreateUser()#io/corbel/oauth/TestUtils/createUserTest(io.corbel.oauth.model.Role)
io/corbel/resources/rem/acl/AclPutRem/relationWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#java/util/Optional/get()
io/corbel/resources/rem/acl/AclPutRem/relationWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#io/corbel/resources/rem/request/RequestParameters/getTokenInfo()
io/corbel/resources/rem/acl/AclPutRem/relationWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#io/corbel/resources/rem/request/ResourceId/isWildcard()
io/corbel/resources/rem/acl/AclPutRem/relationWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#io/corbel/resources/rem/service/AclResourcesService/isAuthorized(java.lang.String,io.corbel.lib.token.TokenInfo,java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.model.AclPermission)
io/corbel/resources/rem/acl/AclPutRem/relationWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#com/google/gson/JsonParser/parse(com.google.gson.stream.JsonReader)
io/corbel/resources/rem/acl/AclPutRem/relationWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#io/corbel/resources/rem/acl/AclBaseRem/getExcludedRems(java.util.Optional)
io/corbel/resources/rem/acl/AclPutRem/relationWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#io/corbel/lib/token/TokenInfo/getUserId()
io/corbel/resources/rem/acl/AclPutRem/relationWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#io/corbel/resources/rem/request/RequestParameters/getRequestedDomain()
io/corbel/resources/rem/acl/AclPutRem/relationWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#io/corbel/resources/rem/service/RemService/getRem(java.lang.String,java.util.List,org.springframework.http.HttpMethod,java.util.List)
io/corbel/resources/rem/acl/AclPutRem/relationWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#io/corbel/lib/ws/api/error/ErrorResponseFactory/badRequest()
io/corbel/resources/rem/acl/AclPutRem/relationWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#io/corbel/lib/ws/api/error/ErrorResponseFactory/getInstance()
io/corbel/resources/rem/acl/AclPutRem/relationWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#com/google/gson/stream/JsonReader/JsonReader(java.io.Reader)
io/corbel/resources/rem/acl/AclPutRem/relationWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#io/corbel/lib/ws/api/error/ErrorResponseFactory/forbidden()
io/corbel/resources/rem/acl/AclPutRem/relationWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#io/corbel/resources/rem/service/AclResourcesService/putRelation(io.corbel.resources.rem.Rem,java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.lang.Object,java.util.List)
io/corbel/resources/rem/acl/AclPutRem/relationWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#com/google/gson/JsonElement/getAsJsonObject()
io/corbel/resources/rem/acl/AclPutRem/relationWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#java/io/InputStreamReader/InputStreamReader(java.io.InputStream)
io/corbel/resources/rem/acl/AclPutRem/relationWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#io/corbel/lib/ws/api/error/ErrorResponseFactory/unauthorized(java.lang.String)
io/corbel/resources/rem/acl/AclPutRem/relationWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#io/corbel/resources/rem/utils/AclUtils/buildMessage(io.corbel.resources.rem.model.AclPermission)
io/corbel/resources/rem/acl/AclPutRem/relationWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#io/corbel/resources/rem/request/RequestParameters/getAcceptedMediaTypes()
io/corbel/resources/rem/acl/AclPutRem/relationWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#com/google/gson/JsonParser/JsonParser()
io/corbel/resources/rem/acl/AclPutRem/relationWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#io/corbel/lib/ws/api/error/ErrorResponseFactory/methodNotAllowed()
io/corbel/resources/rem/acl/AclPutRem/relationWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#java/util/Optional/isPresent()
io/corbel/resources/rem/acl/AclPutRem/resourceWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#java/util/Optional/get()
io/corbel/resources/rem/acl/AclPutRem/resourceWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#java/lang/Enum/toString()
io/corbel/resources/rem/acl/AclPutRem/resourceWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#javax/ws/rs/core/Response/Status/getStatusCode()
io/corbel/resources/rem/acl/AclPutRem/resourceWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#io/corbel/lib/ws/api/error/ErrorResponseFactory/forbidden()
io/corbel/resources/rem/acl/AclPutRem/resourceWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#io/corbel/resources/rem/acl/AclBaseRem/getExcludedRems(java.util.Optional)
io/corbel/resources/rem/acl/AclPutRem/resourceWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#io/corbel/lib/token/TokenInfo/getUserId()
io/corbel/resources/rem/acl/AclPutRem/resourceWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#io/corbel/lib/ws/api/error/ErrorResponseFactory/badRequest()
io/corbel/resources/rem/acl/AclPutRem/resourceWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#java/util/Optional/ifPresent(java.util.function.Consumer)
io/corbel/resources/rem/acl/AclPutRem/resourceWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/rem/acl/AclPutRem/resourceWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#java/util/Optional/empty()
io/corbel/resources/rem/acl/AclPutRem/resourceWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#java/util/List/contains(java.lang.Object)
io/corbel/resources/rem/acl/AclPutRem/resourceWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#io/corbel/lib/ws/api/error/ErrorResponseFactory/getInstance()
io/corbel/resources/rem/acl/AclPutRem/resourceWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#com/google/gson/JsonObject/add(java.lang.String,com.google.gson.JsonElement)
io/corbel/resources/rem/acl/AclPutRem/resourceWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#com/google/gson/stream/JsonReader/JsonReader(java.io.Reader)
io/corbel/resources/rem/acl/AclPutRem/resourceWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#io/corbel/resources/rem/request/RequestParameters/getTokenInfo()
io/corbel/resources/rem/acl/AclPutRem/resourceWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#javax/ws/rs/WebApplicationException/getResponse()
io/corbel/resources/rem/acl/AclPutRem/resourceWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#com/google/gson/JsonParser/parse(com.google.gson.stream.JsonReader)
io/corbel/resources/rem/acl/AclPutRem/resourceWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#java/util/Collections/singletonList(T)
io/corbel/resources/rem/acl/AclPutRem/resourceWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#io/corbel/resources/rem/service/AclResourcesService/getResourceIfIsAuthorized(java.lang.String,io.corbel.lib.token.TokenInfo,java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.model.AclPermission)
io/corbel/resources/rem/acl/AclPutRem/resourceWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#com/google/gson/JsonObject/remove(java.lang.String)
io/corbel/resources/rem/acl/AclPutRem/resourceWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#io/corbel/resources/rem/request/RequestParameters/getRequestedDomain()
io/corbel/resources/rem/acl/AclPutRem/resourceWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#io/corbel/resources/rem/service/AclResourcesService/updateResource(io.corbel.resources.rem.Rem,java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.lang.Object,java.util.List)
io/corbel/resources/rem/acl/AclPutRem/resourceWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#java/util/Optional/ofNullable(T)
io/corbel/resources/rem/acl/AclPutRem/resourceWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#io/corbel/resources/rem/service/RemService/getRem(java.lang.String,java.util.List,org.springframework.http.HttpMethod,java.util.List)
io/corbel/resources/rem/acl/AclPutRem/resourceWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#com/google/gson/JsonElement/getAsJsonObject()
io/corbel/resources/rem/acl/AclPutRem/resourceWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#java/io/InputStreamReader/InputStreamReader(java.io.InputStream)
io/corbel/resources/rem/acl/AclPutRem/resourceWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#io/corbel/lib/ws/api/error/ErrorResponseFactory/unauthorized(java.lang.String)
io/corbel/resources/rem/acl/AclPutRem/resourceWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#io/corbel/resources/rem/utils/AclUtils/buildMessage(io.corbel.resources.rem.model.AclPermission)
io/corbel/resources/rem/acl/AclPutRem/resourceWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#com/google/gson/JsonObject/addProperty(java.lang.String,java.lang.String)
io/corbel/resources/rem/acl/AclPutRem/resourceWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#io/corbel/resources/rem/request/RequestParameters/getAcceptedMediaTypes()
io/corbel/resources/rem/acl/AclPutRem/resourceWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#com/google/gson/JsonObject/JsonObject()
io/corbel/resources/rem/acl/AclPutRem/resourceWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#com/google/gson/JsonParser/JsonParser()
io/corbel/resources/rem/acl/AclPutRem/resourceWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#io/corbel/lib/ws/api/error/ErrorResponseFactory/methodNotAllowed()
io/corbel/resources/rem/acl/AclPutRem/resourceWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#java/util/Optional/isPresent()
io/corbel/resources/rem/acl/query/AclQueryBuilder/buildDefaultAclQueries()#java/util/stream/Stream/map(java.util.function.Function)
io/corbel/resources/rem/acl/query/AclQueryBuilder/buildDefaultAclQueries()#java/util/stream/Stream/collect(java.util.stream.Collector)
io/corbel/resources/rem/acl/query/AclQueryBuilder/buildDefaultAclQueries()#java/util/Collection/stream()
io/corbel/resources/rem/acl/query/AclQueryBuilder/buildDefaultAclQueries()#java/util/stream/Collectors/toList()
io/corbel/resources/rem/acl/query/AclQueryBuilder/build(java.util.List)#io/corbel/resources/rem/acl/query/AclQueryBuilder/buildDefaultAclQueries()
io/corbel/resources/rem/acl/query/AclQueryBuilder/build(java.util.List)#java/util/List/isEmpty()
io/corbel/resources/rem/acl/query/AclQueryBuilder/build(java.util.List)#java/util/Collection/stream()
io/corbel/resources/rem/acl/query/AclQueryBuilder/build(java.util.List)#java/util/LinkedList/LinkedList()
io/corbel/resources/rem/acl/query/AclQueryBuilder/build(java.util.List)#java/util/stream/Stream/forEach(java.util.function.Consumer)
io/corbel/resources/rem/acl/query/AclQueryBuilder/buildPermissionsInAclQueryNode(java.lang.String)#java/lang/Enum/name()
io/corbel/resources/rem/acl/query/AclQueryBuilder/buildPermissionsInAclQueryNode(java.lang.String)#java/util/Arrays/asList(T[])
io/corbel/resources/rem/acl/query/AclQueryBuilder/buildPermissionsInAclQueryNode(java.lang.String)#io/corbel/lib/queries/QueryNodeImpl/QueryNodeImpl(io.corbel.lib.queries.request.QueryOperator,java.lang.String,io.corbel.lib.queries.request.QueryLiteral)
io/corbel/resources/rem/acl/query/AclQueryBuilder/buildPermissionsInAclQueryNode(java.lang.String)#io/corbel/lib/queries/StringQueryLiteral/StringQueryLiteral(java.lang.String)
io/corbel/resources/rem/acl/query/AclQueryBuilder/buildPermissionsInAclQueryNode(java.lang.String)#io/corbel/lib/queries/ListQueryLiteral/ListQueryLiteral(java.util.List)
io/corbel/oauth/session/DefaultSessionCookieFactoryTest/testDestroy()#io/corbel/oauth/session/DefaultSessionCookieFactory/destroyCookie(java.lang.String)
io/corbel/oauth/session/DefaultSessionCookieFactoryTest/testDestroy()#javax/ws/rs/core/NewCookie/getMaxAge()
io/corbel/oauth/session/DefaultSessionCookieFactoryTest/testDestroy()#io/corbel/oauth/session/DefaultSessionCookieFactoryTest/assertCookieProperties(javax.ws.rs.core.NewCookie)
io/corbel/oauth/session/DefaultSessionCookieFactoryTest/testDestroy()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/oauth/session/DefaultSessionCookieFactoryTest/testDestroy()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/oauth/session/DefaultSessionCookieFactoryTest/setup()#io/corbel/oauth/session/DefaultSessionCookieFactory/DefaultSessionCookieFactory(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Boolean)
io/corbel/oauth/session/DefaultSessionCookieFactoryTest/testNullProperties()#javax/ws/rs/core/Cookie/getValue()
io/corbel/oauth/session/DefaultSessionCookieFactoryTest/testNullProperties()#io/corbel/oauth/session/DefaultSessionCookieFactory/createCookie(java.lang.String)
io/corbel/oauth/session/DefaultSessionCookieFactoryTest/testNullProperties()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/oauth/session/DefaultSessionCookieFactoryTest/testNullProperties()#io/corbel/oauth/session/DefaultSessionCookieFactory/DefaultSessionCookieFactory(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Boolean)
io/corbel/oauth/session/DefaultSessionCookieFactoryTest/testNullProperties()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/oauth/session/DefaultSessionCookieFactoryTest/testCookieCreation()#io/corbel/oauth/session/DefaultSessionCookieFactory/createCookie(java.lang.String)
io/corbel/oauth/session/DefaultSessionCookieFactoryTest/testCookieCreation()#io/corbel/oauth/session/DefaultSessionCookieFactoryTest/assertCookieProperties(javax.ws.rs.core.NewCookie)
io/corbel/oauth/session/DefaultSessionCookieFactoryTest/testCookieCreation()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/oauth/session/DefaultSessionCookieFactoryTest/testCookieCreation()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/oauth/session/DefaultSessionCookieFactoryTest/testCookieCreation()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/oauth/session/DefaultSessionCookieFactoryTest/testCookieCreation()#javax/ws/rs/core/NewCookie/getMaxAge()
io/corbel/oauth/session/DefaultSessionCookieFactoryTest/testCookieCreation()#javax/ws/rs/core/Cookie/getValue()
io/corbel/oauth/session/DefaultSessionCookieFactoryTest/assertCookieProperties(javax.ws.rs.core.NewCookie)#javax/ws/rs/core/Cookie/getDomain()
io/corbel/oauth/session/DefaultSessionCookieFactoryTest/assertCookieProperties(javax.ws.rs.core.NewCookie)#javax/ws/rs/core/Cookie/getPath()
io/corbel/oauth/session/DefaultSessionCookieFactoryTest/assertCookieProperties(javax.ws.rs.core.NewCookie)#javax/ws/rs/core/Cookie/getVersion()
io/corbel/oauth/session/DefaultSessionCookieFactoryTest/assertCookieProperties(javax.ws.rs.core.NewCookie)#javax/ws/rs/core/NewCookie/getComment()
io/corbel/oauth/session/DefaultSessionCookieFactoryTest/assertCookieProperties(javax.ws.rs.core.NewCookie)#javax/ws/rs/core/Cookie/getName()
io/corbel/oauth/session/DefaultSessionCookieFactoryTest/assertCookieProperties(javax.ws.rs.core.NewCookie)#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/oauth/session/DefaultSessionCookieFactoryTest/assertCookieProperties(javax.ws.rs.core.NewCookie)#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/oauth/session/DefaultSessionCookieFactoryTest/assertCookieProperties(javax.ws.rs.core.NewCookie)#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/oauth/session/DefaultSessionCookieFactoryTest/assertCookieProperties(javax.ws.rs.core.NewCookie)#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/resources/rem/resmi/ResmiIndexRem/createIndex(io.corbel.resources.rem.model.ResourceUri,java.util.Optional)#java/util/Optional/orElse(T)
io/corbel/resources/rem/resmi/ResmiIndexRem/createIndex(io.corbel.resources.rem.model.ResourceUri,java.util.Optional)#io/corbel/lib/ws/api/error/ErrorResponseFactory/badRequest()
io/corbel/resources/rem/resmi/ResmiIndexRem/createIndex(io.corbel.resources.rem.model.ResourceUri,java.util.Optional)#java/util/Optional/map(java.util.function.Function)
io/corbel/resources/rem/resmi/ResmiIndexRem/createIndex(io.corbel.resources.rem.model.ResourceUri,java.util.Optional)#io/corbel/lib/ws/api/error/ErrorResponseFactory/getInstance()
io/corbel/resources/rem/resmi/ResmiIndexRem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/resources/rem/model/ResourceUri/ResourceUri(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
io/corbel/resources/rem/resmi/ResmiIndexRem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/resources/rem/request/ResourceId/getId()
io/corbel/resources/rem/resmi/ResmiIndexRem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/resources/rem/request/RequestParameters/getRequestedDomain()
io/corbel/resources/rem/resmi/ResmiIndexRem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/resources/rem/resmi/ResmiIndexRem/createIndex(io.corbel.resources.rem.model.ResourceUri,java.util.Optional)
io/corbel/resources/rem/resmi/ResmiIndexRem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional)#io/corbel/resources/rem/model/ResourceUri/ResourceUri(java.lang.String,java.lang.String)
io/corbel/resources/rem/resmi/ResmiIndexRem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional)#io/corbel/resources/rem/request/RequestParameters/getRequestedDomain()
io/corbel/resources/rem/resmi/ResmiIndexRem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional)#io/corbel/resources/rem/resmi/ResmiIndexRem/createIndex(io.corbel.resources.rem.model.ResourceUri,java.util.Optional)
io/corbel/notifications/ioc/NotificationsIoc/getNotificationsServiceFactory()#io/corbel/notifications/service/SpringNotificationsServiceFactory/SpringNotificationsServiceFactory()
io/corbel/notifications/ioc/NotificationsIoc/getAndroidPushNotificationService()#io/corbel/notifications/service/AndroidPushNotificationsService/AndroidPushNotificationsService()
io/corbel/notifications/ioc/NotificationsIoc/getIosPushNotificationService()#io/corbel/notifications/service/IosPushNotificationsService/IosPushNotificationsService()
io/corbel/notifications/ioc/NotificationsIoc/getDomainResource(io.corbel.notifications.repository.DomainRepository)#io/corbel/notifications/api/DomainResource/DomainResource(io.corbel.notifications.repository.DomainRepository)
io/corbel/notifications/ioc/NotificationsIoc/getTemplateResource(io.corbel.notifications.repository.NotificationRepository,io.corbel.notifications.service.SenderNotificationsService)#io/corbel/notifications/api/NotificationsResource/NotificationsResource(io.corbel.notifications.repository.NotificationRepository,io.corbel.notifications.service.SenderNotificationsService)
io/corbel/notifications/ioc/NotificationsIoc/getTemplateFiller()#io/corbel/notifications/template/DefaultNotificationFiller/DefaultNotificationFiller()
io/corbel/notifications/ioc/NotificationsIoc/getMongoRepositoryFactory(org.springframework.data.mongodb.core.MongoOperations)#org/springframework/data/mongodb/repository/support/MongoRepositoryFactory/MongoRepositoryFactory(org.springframework.data.mongodb.core.MongoOperations)
io/corbel/notifications/ioc/NotificationsIoc/getNotificationsEventService(io.corbel.notifications.repository.NotificationRepository,io.corbel.notifications.service.NotificationsDispatcher,io.corbel.notifications.repository.DomainRepository)#io/corbel/notifications/service/DefaultSenderNotificationsService/DefaultSenderNotificationsService(io.corbel.notifications.template.NotificationFiller,io.corbel.notifications.service.NotificationsDispatcher,io.corbel.notifications.repository.NotificationRepository,io.corbel.notifications.repository.DomainRepository,java.lang.String,java.lang.String)
io/corbel/notifications/ioc/NotificationsIoc/getNotificationsEventService(io.corbel.notifications.repository.NotificationRepository,io.corbel.notifications.service.NotificationsDispatcher,io.corbel.notifications.repository.DomainRepository)#org/springframework/core/env/PropertyResolver/getProperty(java.lang.String)
io/corbel/notifications/ioc/NotificationsIoc/getNotificationsEventService(io.corbel.notifications.repository.NotificationRepository,io.corbel.notifications.service.NotificationsDispatcher,io.corbel.notifications.repository.DomainRepository)#io/corbel/notifications/ioc/NotificationsIoc/getTemplateFiller()
io/corbel/notifications/ioc/NotificationsIoc/getNotificationTemplateIdGeneratorMongoEventListener()#io/corbel/notifications/ioc/NotificationsIoc/getNotificationTemplateIdGenerator()
io/corbel/notifications/ioc/NotificationsIoc/getNotificationTemplateIdGeneratorMongoEventListener()#io/corbel/lib/mongo/IdGeneratorMongoEventListener/IdGeneratorMongoEventListener(io.corbel.lib.mongo.IdGenerator,java.lang.Class)
io/corbel/notifications/ioc/NotificationsIoc/getNotificationTemplateIdGenerator()#io/corbel/notifications/model/NotificationTemplateIdGenerator/NotificationTemplateIdGenerator()
io/corbel/notifications/ioc/NotificationsIoc/getNotificationsDispatcher(io.corbel.notifications.service.NotificationsServiceFactory)#io/corbel/notifications/service/NotificationsDispatcher/NotificationsDispatcher(io.corbel.notifications.service.NotificationsServiceFactory)
io/corbel/notifications/ioc/NotificationsIoc/getNotificationsShell(io.corbel.notifications.repository.NotificationRepository,io.corbel.notifications.repository.DomainRepository)#io/corbel/notifications/ioc/NotificationsIoc/getNotificationTemplateIdGenerator()
io/corbel/notifications/ioc/NotificationsIoc/getNotificationsService()#io/corbel/notifications/service/EmailNotificationsService/EmailNotificationsService(java.lang.String,java.lang.String)
io/corbel/notifications/ioc/NotificationsIoc/getNotificationsService()#org/springframework/core/env/PropertyResolver/getProperty(java.lang.String)
io/corbel/oauth/api/SignoutResource/signout(io.corbel.lib.token.reader.TokenReader)#javax/ws/rs/core/Response/noContent()
io/corbel/oauth/api/SignoutResource/signout(io.corbel.lib.token.reader.TokenReader)#javax/ws/rs/core/Response/ResponseBuilder/build()
io/corbel/oauth/api/SignoutResource/signout(io.corbel.lib.token.reader.TokenReader)#io/corbel/oauth/session/SessionCookieFactory/destroyCookie(java.lang.String)
io/corbel/oauth/api/SignoutResource/signout(io.corbel.lib.token.reader.TokenReader)#javax/ws/rs/core/Response/ResponseBuilder/cookie(javax.ws.rs.core.NewCookie[])
io/corbel/oauth/api/SignoutResource/signout(io.corbel.lib.token.reader.TokenReader)#io/corbel/lib/token/reader/TokenReader/getToken()
io/corbel/rem/internal/InMemoryRemRegistry/MediaTypeRegistryEntry/get(org.springframework.http.HttpMethod)#java/util/Map/get(java.lang.Object)
io/corbel/rem/internal/InMemoryRemRegistry/MediaTypeRegistryEntry/matches(org.springframework.http.MediaType)#org/springframework/http/MediaType/includes(org.springframework.http.MediaType)
io/corbel/rem/internal/InMemoryRemRegistry/MediaTypeRegistryEntry/add(io.corbel.resources.rem.Rem,org.springframework.http.HttpMethod[])#java/util/Map/put(K,V)
io/corbel/rem/internal/InMemoryRemRegistry/MediaTypeRegistryEntry/compareTo(io.corbel.rem.internal.InMemoryRemRegistry.MediaTypeRegistryEntry)#org/springframework/util/MimeType/compareTo(org.springframework.util.MimeType)
io/corbel/rem/internal/InMemoryRemRegistry/MediaTypeRegistryEntry/removeAndCheckIfEmpty(java.lang.Class)#java/util/stream/Stream/map(java.util.function.Function)
io/corbel/rem/internal/InMemoryRemRegistry/MediaTypeRegistryEntry/removeAndCheckIfEmpty(java.lang.Class)#java/util/stream/Stream/collect(java.util.stream.Collector)
io/corbel/rem/internal/InMemoryRemRegistry/MediaTypeRegistryEntry/removeAndCheckIfEmpty(java.lang.Class)#java/util/Map/isEmpty()
io/corbel/rem/internal/InMemoryRemRegistry/MediaTypeRegistryEntry/removeAndCheckIfEmpty(java.lang.Class)#java/util/stream/Stream/filter(java.util.function.Predicate)
io/corbel/rem/internal/InMemoryRemRegistry/MediaTypeRegistryEntry/removeAndCheckIfEmpty(java.lang.Class)#java/util/Map/entrySet()
io/corbel/rem/internal/InMemoryRemRegistry/MediaTypeRegistryEntry/removeAndCheckIfEmpty(java.lang.Class)#java/lang/Iterable/forEach(java.util.function.Consumer)
io/corbel/rem/internal/InMemoryRemRegistry/MediaTypeRegistryEntry/removeAndCheckIfEmpty(java.lang.Class)#java/util/Collection/stream()
io/corbel/rem/internal/InMemoryRemRegistry/MediaTypeRegistryEntry/removeAndCheckIfEmpty(java.lang.Class)#java/util/stream/Collectors/toList()
io/corbel/rem/internal/InMemoryRemRegistry/MediaTypeRegistryEntry/getRems()#java/util/Map/values()
io/corbel/resources/rem/ImageGetRemTest/imageFormatTest()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/ImageGetRemTest/imageFormatTest()#javax/ws/rs/core/Response/getEntity()
io/corbel/resources/rem/ImageGetRemTest/imageFormatTest()#io/corbel/resources/rem/ImageGetRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)
io/corbel/resources/rem/ImageGetRemTest/imageFormatTest()#io/corbel/resources/rem/request/RequestParameters/getCustomParameterValue(java.lang.String)
io/corbel/resources/rem/ImageGetRemTest/imageFormatTest()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/resources/rem/ImageGetRemTest/imageFormatTest()#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/rem/ImageGetRemTest/imageFormatTest()#javax/ws/rs/core/StreamingOutput/write(java.io.OutputStream)
io/corbel/resources/rem/ImageGetRemTest/imageFormatTest()#org/mockito/Matchers/anyListOf(java.lang.Class)
io/corbel/resources/rem/ImageGetRemTest/imageFormatTest()#org/fest/assertions/api/Assertions/assertThat(T)
io/corbel/resources/rem/ImageGetRemTest/imageFormatTest()#org/mockito/Matchers/eq(T)
io/corbel/resources/rem/ImageGetRemTest/imageFormatTest()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/resources/rem/ImageGetRemTest/imageFormatTest()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/ImageGetRemTest/imageFormatTest()#org/mockito/Matchers/any(java.lang.Class)
io/corbel/resources/rem/ImageGetRemTest/imageFormatTest()#org/mockito/Mockito/verify(T)
io/corbel/resources/rem/ImageGetRemTest/imageFormatTest()#org/mockito/Matchers/any()
io/corbel/resources/rem/ImageGetRemTest/imageFormatTest()#java/util/Optional/empty()
io/corbel/resources/rem/ImageGetRemTest/imageFormatTest()#org/fest/assertions/api/AbstractAssert/isInstanceOf(java.lang.Class)
io/corbel/resources/rem/ImageGetRemTest/imageFormatTest()#io/corbel/resources/rem/service/ImageOperationsService/applyConversion(java.util.List,java.io.InputStream,java.io.OutputStream,java.util.Optional,java.lang.String)
io/corbel/resources/rem/ImageGetRemTest/imageFormatTest()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/resources/rem/ImageGetRemTest/resourceCacheTest()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/ImageGetRemTest/resourceCacheTest()#org/mockito/ArgumentCaptor/getValue()
io/corbel/resources/rem/ImageGetRemTest/resourceCacheTest()#org/fest/assertions/api/BooleanAssert/isFalse()
io/corbel/resources/rem/ImageGetRemTest/resourceCacheTest()#org/fest/assertions/api/Assertions/assertThat(boolean)
io/corbel/resources/rem/ImageGetRemTest/resourceCacheTest()#io/corbel/resources/rem/ImageGetRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)
io/corbel/resources/rem/ImageGetRemTest/resourceCacheTest()#io/corbel/resources/rem/request/RequestParameters/getCustomParameterValue(java.lang.String)
io/corbel/resources/rem/ImageGetRemTest/resourceCacheTest()#org/mockito/ArgumentCaptor/capture()
io/corbel/resources/rem/ImageGetRemTest/resourceCacheTest()#org/fest/assertions/api/Assertions/assertThat(T)
io/corbel/resources/rem/ImageGetRemTest/resourceCacheTest()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/resources/rem/ImageGetRemTest/resourceCacheTest()#javax/ws/rs/core/Response/getEntity()
io/corbel/resources/rem/ImageGetRemTest/resourceCacheTest()#io/corbel/resources/rem/service/ImageCacheService/getFromCache(io.corbel.resources.rem.Rem,io.corbel.resources.rem.request.ResourceId,java.lang.String,java.util.Optional,java.lang.String,io.corbel.resources.rem.request.RequestParameters)
io/corbel/resources/rem/ImageGetRemTest/resourceCacheTest()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/resources/rem/ImageGetRemTest/resourceCacheTest()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/ImageGetRemTest/resourceCacheTest()#org/mockito/ArgumentCaptor/forClass(java.lang.Class)
io/corbel/resources/rem/ImageGetRemTest/resourceCacheTest()#org/mockito/Mockito/verifyNoMoreInteractions(java.lang.Object[])
io/corbel/resources/rem/ImageGetRemTest/resourceCacheTest()#org/mockito/Mockito/verify(T)
io/corbel/resources/rem/ImageGetRemTest/resourceCacheTest()#org/mockito/Matchers/any()
io/corbel/resources/rem/ImageGetRemTest/resourceCacheTest()#java/util/Optional/empty()
io/corbel/resources/rem/ImageGetRemTest/resourceCacheTest()#org/mockito/Matchers/eq(T)
io/corbel/resources/rem/ImageGetRemTest/resourceCacheTest()#java/util/Optional/isPresent()
io/corbel/resources/rem/ImageGetRemTest/resourceWidthTest()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/ImageGetRemTest/resourceWidthTest()#javax/ws/rs/core/Response/getEntity()
io/corbel/resources/rem/ImageGetRemTest/resourceWidthTest()#java/lang/Thread/sleep(long)
io/corbel/resources/rem/ImageGetRemTest/resourceWidthTest()#io/corbel/resources/rem/ImageGetRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)
io/corbel/resources/rem/ImageGetRemTest/resourceWidthTest()#io/corbel/resources/rem/request/RequestParameters/getCustomParameterValue(java.lang.String)
io/corbel/resources/rem/ImageGetRemTest/resourceWidthTest()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/resources/rem/ImageGetRemTest/resourceWidthTest()#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/rem/ImageGetRemTest/resourceWidthTest()#org/fest/assertions/api/Assertions/assertThat(T)
io/corbel/resources/rem/ImageGetRemTest/resourceWidthTest()#java/util/Collections/singletonList(T)
io/corbel/resources/rem/ImageGetRemTest/resourceWidthTest()#io/corbel/resources/rem/service/ImageCacheService/saveInCacheAsync(io.corbel.resources.rem.Rem,io.corbel.resources.rem.request.ResourceId,java.lang.String,java.util.Optional,java.lang.Long,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.io.File)
io/corbel/resources/rem/ImageGetRemTest/resourceWidthTest()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/resources/rem/ImageGetRemTest/resourceWidthTest()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/ImageGetRemTest/resourceWidthTest()#org/mockito/Matchers/any(java.lang.Class)
io/corbel/resources/rem/ImageGetRemTest/resourceWidthTest()#org/mockito/Mockito/verify(T)
io/corbel/resources/rem/ImageGetRemTest/resourceWidthTest()#org/mockito/Matchers/anyLong()
io/corbel/resources/rem/ImageGetRemTest/resourceWidthTest()#javax/ws/rs/core/StreamingOutput/write(java.io.OutputStream)
io/corbel/resources/rem/ImageGetRemTest/resourceWidthTest()#org/mockito/Matchers/any()
io/corbel/resources/rem/ImageGetRemTest/resourceWidthTest()#java/util/Optional/empty()
io/corbel/resources/rem/ImageGetRemTest/resourceWidthTest()#org/fest/assertions/api/AbstractAssert/isInstanceOf(java.lang.Class)
io/corbel/resources/rem/ImageGetRemTest/resourceWidthTest()#org/mockito/Matchers/eq(T)
io/corbel/resources/rem/ImageGetRemTest/resourceWidthTest()#io/corbel/resources/rem/model/ImageOperationDescription/ImageOperationDescription(java.lang.String,java.lang.String)
io/corbel/resources/rem/ImageGetRemTest/resourceWidthTest()#io/corbel/resources/rem/service/ImageOperationsService/applyConversion(java.util.List,java.io.InputStream,java.io.OutputStream,java.util.Optional,java.lang.String)
io/corbel/resources/rem/ImageGetRemTest/resourceWidthTest()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/resources/rem/ImageGetRemTest/before()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/ImageGetRemTest/before()#io/corbel/resources/rem/ImageBaseRem/setRemService(io.corbel.resources.rem.service.RemService)
io/corbel/resources/rem/ImageGetRemTest/before()#java/util/Collections/singletonList(T)
io/corbel/resources/rem/ImageGetRemTest/before()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/ImageGetRemTest/before()#io/corbel/resources/rem/Rem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)
io/corbel/resources/rem/ImageGetRemTest/before()#io/corbel/resources/rem/service/RemService/getRem(java.lang.String)
io/corbel/resources/rem/ImageGetRemTest/before()#javax/ws/rs/core/Response/ok(java.lang.Object)
io/corbel/resources/rem/ImageGetRemTest/before()#io/corbel/resources/rem/request/RequestParameters/getAcceptedMediaTypes()
io/corbel/resources/rem/ImageGetRemTest/before()#java/util/Optional/empty()
io/corbel/resources/rem/ImageGetRemTest/before()#io/corbel/resources/rem/ImageGetRem/ImageGetRem(io.corbel.resources.rem.service.ImageOperationsService,io.corbel.resources.rem.service.ImageCacheService,java.lang.String)
io/corbel/resources/rem/ImageGetRemTest/before()#javax/ws/rs/core/Response/ResponseBuilder/build()
io/corbel/resources/rem/ImageGetRemTest/resourceCacheTestWithFormat()#java/util/Optional/get()
io/corbel/resources/rem/ImageGetRemTest/resourceCacheTestWithFormat()#org/mockito/ArgumentCaptor/getValue()
io/corbel/resources/rem/ImageGetRemTest/resourceCacheTestWithFormat()#org/fest/assertions/api/Assertions/assertThat(boolean)
io/corbel/resources/rem/ImageGetRemTest/resourceCacheTestWithFormat()#io/corbel/resources/rem/ImageGetRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)
io/corbel/resources/rem/ImageGetRemTest/resourceCacheTestWithFormat()#io/corbel/resources/rem/request/RequestParameters/getCustomParameterValue(java.lang.String)
io/corbel/resources/rem/ImageGetRemTest/resourceCacheTestWithFormat()#org/mockito/ArgumentCaptor/capture()
io/corbel/resources/rem/ImageGetRemTest/resourceCacheTestWithFormat()#org/fest/assertions/api/Assertions/assertThat(T)
io/corbel/resources/rem/ImageGetRemTest/resourceCacheTestWithFormat()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/resources/rem/ImageGetRemTest/resourceCacheTestWithFormat()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/ImageGetRemTest/resourceCacheTestWithFormat()#org/fest/assertions/api/BooleanAssert/isTrue()
io/corbel/resources/rem/ImageGetRemTest/resourceCacheTestWithFormat()#javax/ws/rs/core/Response/getEntity()
io/corbel/resources/rem/ImageGetRemTest/resourceCacheTestWithFormat()#io/corbel/resources/rem/service/ImageCacheService/getFromCache(io.corbel.resources.rem.Rem,io.corbel.resources.rem.request.ResourceId,java.lang.String,java.util.Optional,java.lang.String,io.corbel.resources.rem.request.RequestParameters)
io/corbel/resources/rem/ImageGetRemTest/resourceCacheTestWithFormat()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/resources/rem/ImageGetRemTest/resourceCacheTestWithFormat()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/ImageGetRemTest/resourceCacheTestWithFormat()#org/mockito/ArgumentCaptor/forClass(java.lang.Class)
io/corbel/resources/rem/ImageGetRemTest/resourceCacheTestWithFormat()#org/mockito/Mockito/verifyNoMoreInteractions(java.lang.Object[])
io/corbel/resources/rem/ImageGetRemTest/resourceCacheTestWithFormat()#org/mockito/Mockito/verify(T)
io/corbel/resources/rem/ImageGetRemTest/resourceCacheTestWithFormat()#org/mockito/Matchers/any()
io/corbel/resources/rem/ImageGetRemTest/resourceCacheTestWithFormat()#java/util/Optional/empty()
io/corbel/resources/rem/ImageGetRemTest/resourceCacheTestWithFormat()#org/mockito/Matchers/eq(T)
io/corbel/resources/rem/ImageGetRemTest/resourceCacheTestWithFormat()#java/util/Optional/isPresent()
io/corbel/resources/rem/ImageGetRemTest/resourceHeightTest()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/ImageGetRemTest/resourceHeightTest()#javax/ws/rs/core/Response/getEntity()
io/corbel/resources/rem/ImageGetRemTest/resourceHeightTest()#java/lang/Thread/sleep(long)
io/corbel/resources/rem/ImageGetRemTest/resourceHeightTest()#io/corbel/resources/rem/ImageGetRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)
io/corbel/resources/rem/ImageGetRemTest/resourceHeightTest()#io/corbel/resources/rem/request/RequestParameters/getCustomParameterValue(java.lang.String)
io/corbel/resources/rem/ImageGetRemTest/resourceHeightTest()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/resources/rem/ImageGetRemTest/resourceHeightTest()#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/rem/ImageGetRemTest/resourceHeightTest()#org/fest/assertions/api/Assertions/assertThat(T)
io/corbel/resources/rem/ImageGetRemTest/resourceHeightTest()#java/util/Collections/singletonList(T)
io/corbel/resources/rem/ImageGetRemTest/resourceHeightTest()#io/corbel/resources/rem/service/ImageCacheService/saveInCacheAsync(io.corbel.resources.rem.Rem,io.corbel.resources.rem.request.ResourceId,java.lang.String,java.util.Optional,java.lang.Long,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.io.File)
io/corbel/resources/rem/ImageGetRemTest/resourceHeightTest()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/resources/rem/ImageGetRemTest/resourceHeightTest()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/ImageGetRemTest/resourceHeightTest()#org/mockito/Matchers/any(java.lang.Class)
io/corbel/resources/rem/ImageGetRemTest/resourceHeightTest()#org/mockito/Mockito/verify(T)
io/corbel/resources/rem/ImageGetRemTest/resourceHeightTest()#org/mockito/Matchers/anyLong()
io/corbel/resources/rem/ImageGetRemTest/resourceHeightTest()#javax/ws/rs/core/StreamingOutput/write(java.io.OutputStream)
io/corbel/resources/rem/ImageGetRemTest/resourceHeightTest()#org/mockito/Matchers/any()
io/corbel/resources/rem/ImageGetRemTest/resourceHeightTest()#java/util/Optional/empty()
io/corbel/resources/rem/ImageGetRemTest/resourceHeightTest()#org/fest/assertions/api/AbstractAssert/isInstanceOf(java.lang.Class)
io/corbel/resources/rem/ImageGetRemTest/resourceHeightTest()#org/mockito/Matchers/eq(T)
io/corbel/resources/rem/ImageGetRemTest/resourceHeightTest()#io/corbel/resources/rem/model/ImageOperationDescription/ImageOperationDescription(java.lang.String,java.lang.String)
io/corbel/resources/rem/ImageGetRemTest/resourceHeightTest()#io/corbel/resources/rem/service/ImageOperationsService/applyConversion(java.util.List,java.io.InputStream,java.io.OutputStream,java.util.Optional,java.lang.String)
io/corbel/resources/rem/ImageGetRemTest/resourceHeightTest()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/resources/rem/ImageGetRemTest/getParametersTest()#io/corbel/resources/rem/ImageGetRem/getParameters(java.lang.String)
io/corbel/resources/rem/ImageGetRemTest/getParametersTest()#java/util/Collections/singletonList(T)
io/corbel/resources/rem/ImageGetRemTest/getParametersTest()#java/util/List/size()
io/corbel/resources/rem/ImageGetRemTest/getParametersTest()#java/util/Arrays/asList(T[])
io/corbel/resources/rem/ImageGetRemTest/getParametersTest()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/resources/rem/ImageGetRemTest/getParametersTest()#java/util/List/get(int)
io/corbel/resources/rem/ImageGetRemTest/getParametersTest()#org/fest/assertions/api/Assertions/assertThat(java.util.List)
io/corbel/resources/rem/ImageGetRemTest/getParametersTest()#io/corbel/resources/rem/model/ImageOperationDescription/ImageOperationDescription(java.lang.String,java.lang.String)
io/corbel/resources/rem/ImageGetRemTest/getParametersTest()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/resources/rem/ImageGetRemTest/getParametersTest()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/resources/rem/ImageGetRemTest/resourceWithoutParamentersTest()#org/mockito/Mockito/doThrow(java.lang.Class)
io/corbel/resources/rem/ImageGetRemTest/resourceWithoutParamentersTest()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/ImageGetRemTest/resourceWithoutParamentersTest()#io/corbel/resources/rem/service/ImageCacheService/getFromCache(io.corbel.resources.rem.Rem,io.corbel.resources.rem.request.ResourceId,java.lang.String,java.util.Optional,java.lang.String,io.corbel.resources.rem.request.RequestParameters)
io/corbel/resources/rem/ImageGetRemTest/resourceWithoutParamentersTest()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/ImageGetRemTest/resourceWithoutParamentersTest()#io/corbel/resources/rem/ImageGetRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)
io/corbel/resources/rem/ImageGetRemTest/resourceWithoutParamentersTest()#org/mockito/stubbing/Stubber/when(T)
io/corbel/resources/rem/ImageGetRemTest/resourceWithoutParamentersTest()#io/corbel/resources/rem/request/RequestParameters/getCustomParameterValue(java.lang.String)
io/corbel/resources/rem/ImageGetRemTest/resourceWithoutParamentersTest()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/resources/rem/ImageGetRemTest/resourceWithoutParamentersTest()#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/rem/ImageGetRemTest/resourceWithoutParamentersTest()#org/mockito/Matchers/eq(T)
io/corbel/resources/rem/ImageGetRemTest/resourceWithoutParamentersTest()#org/mockito/Mockito/verifyNoMoreInteractions(java.lang.Object[])
io/corbel/resources/rem/ImageGetRemTest/resourceWithoutParamentersTest()#org/mockito/Mockito/verify(T)
io/corbel/resources/rem/ImageGetRemTest/resourceWithoutParamentersTest()#org/mockito/Matchers/any()
io/corbel/resources/rem/ImageGetRemTest/resourceWithoutParamentersTest()#java/util/Optional/empty()
io/corbel/resources/rem/ImageGetRemTest/resourceWithoutParamentersTest()#io/corbel/resources/rem/service/ImageOperationsService/applyConversion(java.util.List,java.io.InputStream,java.io.OutputStream,java.util.Optional,java.lang.String)
io/corbel/resources/rem/ImageGetRemTest/resourceWithoutParamentersTest()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/resources/href/DefaultLinkGenerator/addResourceLinks(com.google.gson.JsonObject,java.net.URI,java.util.Optional)#java/util/Optional/get()
io/corbel/resources/href/DefaultLinkGenerator/addResourceLinks(com.google.gson.JsonObject,java.net.URI,java.util.Optional)#io/corbel/resources/href/LinksBuilder/appendLinks(com.google.gson.JsonObject)
io/corbel/resources/href/DefaultLinkGenerator/addResourceLinks(com.google.gson.JsonObject,java.net.URI,java.util.Optional)#io/corbel/resources/href/LinksBuilder/typeUri(java.net.URI)
io/corbel/resources/href/DefaultLinkGenerator/addResourceLinks(com.google.gson.JsonObject,java.net.URI,java.util.Optional)#io/corbel/resources/href/LinksBuilder/LinksBuilder()
io/corbel/resources/href/DefaultLinkGenerator/addResourceLinks(com.google.gson.JsonObject,java.net.URI,java.util.Optional)#java/util/Optional/isPresent()
io/corbel/resources/href/DefaultLinkGenerator/addResourceLinks(com.google.gson.JsonObject,java.net.URI,java.util.Optional)#io/corbel/resources/href/DefaultLinkGenerator/addRelationsLink(java.util.Set,io.corbel.resources.href.LinksBuilder.ResourceLinksBuilder)
io/corbel/resources/href/DefaultLinkGenerator/addResourceLinks(com.google.gson.JsonObject,java.net.URI,java.util.Optional)#io/corbel/resources/href/DefaultLinkGenerator/addSelfLink(com.google.gson.JsonObject,io.corbel.resources.href.LinksBuilder.GroundLinksBuilder)
io/corbel/resources/href/DefaultLinkGenerator/addRelationsLink(java.util.Set,io.corbel.resources.href.LinksBuilder.ResourceLinksBuilder)#io/corbel/resources/href/LinksBuilder/ResourceLinksBuilder/buildRelationLink(java.lang.String)
io/corbel/resources/href/DefaultLinkGenerator/addSelfLink(com.google.gson.JsonObject,io.corbel.resources.href.LinksBuilder.GroundLinksBuilder)#io/corbel/resources/href/LinksBuilder/GroundLinksBuilder/id(java.lang.String)
io/corbel/resources/href/DefaultLinkGenerator/addSelfLink(com.google.gson.JsonObject,io.corbel.resources.href.LinksBuilder.GroundLinksBuilder)#com/google/gson/JsonObject/has(java.lang.String)
io/corbel/resources/href/DefaultLinkGenerator/addSelfLink(com.google.gson.JsonObject,io.corbel.resources.href.LinksBuilder.GroundLinksBuilder)#io/corbel/resources/href/LinksBuilder/ResourceLinksBuilder/buildSelfLink()
io/corbel/resources/href/DefaultLinkGenerator/addSelfLink(com.google.gson.JsonObject,io.corbel.resources.href.LinksBuilder.GroundLinksBuilder)#java/util/Optional/ofNullable(T)
io/corbel/resources/href/DefaultLinkGenerator/addSelfLink(com.google.gson.JsonObject,io.corbel.resources.href.LinksBuilder.GroundLinksBuilder)#com/google/gson/JsonElement/isJsonPrimitive()
io/corbel/resources/href/DefaultLinkGenerator/addSelfLink(com.google.gson.JsonObject,io.corbel.resources.href.LinksBuilder.GroundLinksBuilder)#com/google/gson/JsonElement/getAsString()
io/corbel/resources/href/DefaultLinkGenerator/addSelfLink(com.google.gson.JsonObject,io.corbel.resources.href.LinksBuilder.GroundLinksBuilder)#com/google/gson/JsonObject/get(java.lang.String)
io/corbel/iam/ioc/IamMongoIoc/customConversions()#io/corbel/lib/mongo/JsonObjectMongoReadConverter/JsonObjectMongoReadConverter(com.google.gson.Gson)
io/corbel/iam/ioc/IamMongoIoc/customConversions()#io/corbel/lib/mongo/JsonObjectMongoWriteConverter/JsonObjectMongoWriteConverter()
io/corbel/iam/ioc/IamMongoIoc/customConversions()#java/util/Arrays/asList(T[])
io/corbel/iam/ioc/IamMongoIoc/customConversions()#org/springframework/data/mongodb/core/convert/CustomConversions/CustomConversions(java.util.List)
io/corbel/iam/ioc/IamMongoIoc/customConversions()#io/corbel/iam/ioc/IamMongoIoc/getGson()
io/corbel/iam/ioc/IamMongoIoc/cacheManager(org.springframework.core.env.Environment)#com/google/common/cache/CacheBuilder/newBuilder()
io/corbel/iam/ioc/IamMongoIoc/cacheManager(org.springframework.core.env.Environment)#java/util/Arrays/asList(T[])
io/corbel/iam/ioc/IamMongoIoc/cacheManager(org.springframework.core.env.Environment)#com/google/common/cache/Cache/asMap()
io/corbel/iam/ioc/IamMongoIoc/cacheManager(org.springframework.core.env.Environment)#org/springframework/cache/concurrent/ConcurrentMapCache/ConcurrentMapCache(java.lang.String,java.util.concurrent.ConcurrentMap,boolean)
io/corbel/iam/ioc/IamMongoIoc/cacheManager(org.springframework.core.env.Environment)#com/google/common/cache/CacheBuilder/build()
io/corbel/iam/ioc/IamMongoIoc/cacheManager(org.springframework.core.env.Environment)#org/springframework/cache/support/SimpleCacheManager/SimpleCacheManager()
io/corbel/iam/ioc/IamMongoIoc/cacheManager(org.springframework.core.env.Environment)#org/springframework/core/env/PropertyResolver/getProperty(java.lang.String,java.lang.Class)
io/corbel/iam/ioc/IamMongoIoc/cacheManager(org.springframework.core.env.Environment)#com/google/common/cache/CacheBuilder/expireAfterWrite(long,java.util.concurrent.TimeUnit)
io/corbel/iam/ioc/IamMongoIoc/cacheManager(org.springframework.core.env.Environment)#org/springframework/cache/support/SimpleCacheManager/setCaches(java.util.Collection)
io/corbel/iam/ioc/IamMongoIoc/getGson()#com/google/gson/Gson/Gson()
io/corbel/iam/ioc/IamMongoIoc/getMongoIndexes()#io/corbel/iam/repository/MongoIndexes/MongoIndexes()
io/corbel/notifications/api/DomainResource/updateDomain(io.corbel.notifications.model.Domain,java.lang.String)#javax/ws/rs/core/Response/ResponseBuilder/build()
io/corbel/notifications/api/DomainResource/updateDomain(io.corbel.notifications.model.Domain,java.lang.String)#org/springframework/data/repository/CrudRepository/findOne(ID)
io/corbel/notifications/api/DomainResource/updateDomain(io.corbel.notifications.model.Domain,java.lang.String)#io/corbel/notifications/model/Domain/getId()
io/corbel/notifications/api/DomainResource/updateDomain(io.corbel.notifications.model.Domain,java.lang.String)#io/corbel/lib/ws/api/error/ErrorResponseFactory/notFound()
io/corbel/notifications/api/DomainResource/updateDomain(io.corbel.notifications.model.Domain,java.lang.String)#org/springframework/data/repository/CrudRepository/save(S)
io/corbel/notifications/api/DomainResource/updateDomain(io.corbel.notifications.model.Domain,java.lang.String)#io/corbel/notifications/model/Domain/updateDomain(io.corbel.notifications.model.Domain)
io/corbel/notifications/api/DomainResource/updateDomain(io.corbel.notifications.model.Domain,java.lang.String)#java/lang/String/equals(java.lang.Object)
io/corbel/notifications/api/DomainResource/updateDomain(io.corbel.notifications.model.Domain,java.lang.String)#io/corbel/lib/ws/api/error/ErrorResponseFactory/getInstance()
io/corbel/notifications/api/DomainResource/updateDomain(io.corbel.notifications.model.Domain,java.lang.String)#javax/ws/rs/core/Response/status(javax.ws.rs.core.Response.Status)
io/corbel/notifications/api/DomainResource/getDomain(java.lang.String)#io/corbel/notifications/api/NotificationsErrorResponseFactory/getInstance()
io/corbel/notifications/api/DomainResource/getDomain(java.lang.String)#javax/ws/rs/core/Response/ResponseBuilder/build()
io/corbel/notifications/api/DomainResource/getDomain(java.lang.String)#javax/ws/rs/core/Response/ok()
io/corbel/notifications/api/DomainResource/getDomain(java.lang.String)#org/springframework/data/repository/CrudRepository/findOne(ID)
io/corbel/notifications/api/DomainResource/getDomain(java.lang.String)#javax/ws/rs/core/Response/ResponseBuilder/entity(java.lang.Object)
io/corbel/notifications/api/DomainResource/getDomain(java.lang.String)#io/corbel/lib/ws/api/error/ErrorResponseFactory/notFound()
io/corbel/notifications/api/DomainResource/getDomain(java.lang.String)#javax/ws/rs/core/Response/ResponseBuilder/type(java.lang.String)
io/corbel/notifications/api/DomainResource/postDomain(io.corbel.notifications.model.Domain,java.lang.String,javax.ws.rs.core.UriInfo)#io/corbel/notifications/model/Domain/getId()
io/corbel/notifications/api/DomainResource/postDomain(io.corbel.notifications.model.Domain,java.lang.String,javax.ws.rs.core.UriInfo)#javax/ws/rs/core/UriBuilder/build(java.lang.Object[])
io/corbel/notifications/api/DomainResource/postDomain(io.corbel.notifications.model.Domain,java.lang.String,javax.ws.rs.core.UriInfo)#javax/ws/rs/core/UriInfo/getAbsolutePathBuilder()
io/corbel/notifications/api/DomainResource/postDomain(io.corbel.notifications.model.Domain,java.lang.String,javax.ws.rs.core.UriInfo)#io/corbel/notifications/model/Domain/setId(java.lang.String)
io/corbel/notifications/api/DomainResource/postDomain(io.corbel.notifications.model.Domain,java.lang.String,javax.ws.rs.core.UriInfo)#org/springframework/data/repository/CrudRepository/save(S)
io/corbel/notifications/api/DomainResource/postDomain(io.corbel.notifications.model.Domain,java.lang.String,javax.ws.rs.core.UriInfo)#javax/ws/rs/core/UriBuilder/path(java.lang.String)
io/corbel/notifications/api/DomainResource/postDomain(io.corbel.notifications.model.Domain,java.lang.String,javax.ws.rs.core.UriInfo)#javax/ws/rs/core/Response/created(java.net.URI)
io/corbel/notifications/api/DomainResource/postDomain(io.corbel.notifications.model.Domain,java.lang.String,javax.ws.rs.core.UriInfo)#javax/ws/rs/core/Response/ResponseBuilder/build()
io/corbel/notifications/api/DomainResource/deleteDomain(java.lang.String)#javax/ws/rs/core/Response/ResponseBuilder/build()
io/corbel/notifications/api/DomainResource/deleteDomain(java.lang.String)#org/springframework/data/repository/CrudRepository/delete(ID)
io/corbel/notifications/api/DomainResource/deleteDomain(java.lang.String)#javax/ws/rs/core/Response/status(javax.ws.rs.core.Response.Status)
io/corbel/resources/rem/acl/SetUpAclPutRemTest/testNoUserId()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/acl/SetUpAclPutRemTest/testNoUserId()#io/corbel/resources/rem/request/RequestParameters/getTokenInfo()
io/corbel/resources/rem/acl/SetUpAclPutRemTest/testNoUserId()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/acl/SetUpAclPutRemTest/testNoUserId()#io/corbel/lib/token/TokenInfo/getUserId()
io/corbel/resources/rem/acl/SetUpAclPutRemTest/testNoUserId()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/resources/rem/acl/SetUpAclPutRemTest/testNoUserId()#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/rem/acl/SetUpAclPutRemTest/testNoUserId()#io/corbel/resources/rem/acl/AclBaseRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)
io/corbel/resources/rem/acl/SetUpAclPutRemTest/testNoUserId()#java/util/Optional/empty()
io/corbel/resources/rem/acl/SetUpAclPutRemTest/testNoUserId()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/resources/rem/acl/SetUpAclPutRemTest/testEmptyObject()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/acl/SetUpAclPutRemTest/testEmptyObject()#java/io/InputStream/available()
io/corbel/resources/rem/acl/SetUpAclPutRemTest/testEmptyObject()#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/rem/acl/SetUpAclPutRemTest/testEmptyObject()#io/corbel/resources/rem/acl/AclBaseRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)
io/corbel/resources/rem/acl/SetUpAclPutRemTest/testEmptyObject()#java/util/Optional/empty()
io/corbel/resources/rem/acl/SetUpAclPutRemTest/testEmptyObject()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/resources/rem/acl/SetUpAclPutRemTest/testEmptyObject()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/resources/rem/acl/SetUpAclPutRemTest/testEmptyObject()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/acl/SetUpAclPutRemTest/testEmptyObject()#java/util/Optional/of(T)
io/corbel/resources/rem/acl/SetUpAclPutRemTest/testEmptyObject()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/resources/rem/acl/SetUpAclPutRemTest/testWritePermission()#javax/ws/rs/core/Response/getEntity()
io/corbel/resources/rem/acl/SetUpAclPutRemTest/testWritePermission()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/acl/SetUpAclPutRemTest/testWritePermission()#io/corbel/lib/ws/model/Error/getErrorDescription()
io/corbel/resources/rem/acl/SetUpAclPutRemTest/testWritePermission()#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/rem/acl/SetUpAclPutRemTest/testWritePermission()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/resources/rem/acl/SetUpAclPutRemTest/testWritePermission()#io/corbel/resources/rem/acl/AclBaseRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)
io/corbel/resources/rem/acl/SetUpAclPutRemTest/testWritePermission()#io/corbel/resources/rem/acl/SetUpAclPutRemTest/getEntityWithoutAcl()
io/corbel/resources/rem/acl/SetUpAclPutRemTest/testWritePermission()#java/util/Optional/empty()
io/corbel/resources/rem/acl/SetUpAclPutRemTest/testWritePermission()#io/corbel/resources/rem/acl/AclTestUtils/getEntity(java.lang.String,java.lang.String)
io/corbel/resources/rem/acl/SetUpAclPutRemTest/testWritePermission()#io/corbel/resources/rem/acl/SetUpAclPutRemTest/getError(javax.ws.rs.core.Response)
io/corbel/resources/rem/acl/SetUpAclPutRemTest/testWritePermission()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/acl/SetUpAclPutRemTest/testWritePermission()#java/lang/Enum/toString()
io/corbel/resources/rem/acl/SetUpAclPutRemTest/testWritePermission()#java/util/Optional/of(T)
io/corbel/resources/rem/acl/SetUpAclPutRemTest/testWritePermission()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/resources/rem/acl/SetUpAclPutRemTest/testWritePermission()#org/fest/assertions/api/StringAssert/contains(java.lang.String)
io/corbel/resources/rem/acl/SetUpAclPutRemTest/testWritePermission()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/resources/rem/acl/SetUpAclPutRemTest/getError(javax.ws.rs.core.Response)#javax/ws/rs/core/Response/getEntity()
io/corbel/resources/rem/acl/SetUpAclPutRemTest/testUpdateAclPermissionOverALLUsersAsNotAdmin()#io/corbel/resources/rem/acl/AclBaseRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)
io/corbel/resources/rem/acl/SetUpAclPutRemTest/testUpdateAclPermissionOverALLUsersAsNotAdmin()#io/corbel/resources/rem/service/AclResourcesService/isAuthorized(java.lang.String,io.corbel.lib.token.TokenInfo,java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.model.AclPermission)
io/corbel/resources/rem/acl/SetUpAclPutRemTest/testUpdateAclPermissionOverALLUsersAsNotAdmin()#io/corbel/resources/rem/service/AclResourcesService/updateResource(io.corbel.resources.rem.Rem,java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.lang.Object,java.util.List)
io/corbel/resources/rem/acl/SetUpAclPutRemTest/testUpdateAclPermissionOverALLUsersAsNotAdmin()#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/rem/acl/SetUpAclPutRemTest/testUpdateAclPermissionOverALLUsersAsNotAdmin()#io/corbel/resources/rem/acl/SetUpAclPutRemTest/getEntityAsInputStream(com.google.gson.JsonObject)
io/corbel/resources/rem/acl/SetUpAclPutRemTest/testUpdateAclPermissionOverALLUsersAsNotAdmin()#org/mockito/Matchers/any()
io/corbel/resources/rem/acl/SetUpAclPutRemTest/testUpdateAclPermissionOverALLUsersAsNotAdmin()#org/mockito/Matchers/eq(T)
io/corbel/resources/rem/acl/SetUpAclPutRemTest/testUpdateAclPermissionOverALLUsersAsNotAdmin()#com/google/gson/JsonObject/add(java.lang.String,com.google.gson.JsonElement)
io/corbel/resources/rem/acl/SetUpAclPutRemTest/testUpdateAclPermissionOverALLUsersAsNotAdmin()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/resources/rem/acl/SetUpAclPutRemTest/testUpdateAclPermissionOverALLUsersAsNotAdmin()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/acl/SetUpAclPutRemTest/testUpdateAclPermissionOverALLUsersAsNotAdmin()#java/lang/Enum/toString()
io/corbel/resources/rem/acl/SetUpAclPutRemTest/testUpdateAclPermissionOverALLUsersAsNotAdmin()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/resources/rem/acl/SetUpAclPutRemTest/testUpdateAclPermissionOverALLUsersAsNotAdmin()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/acl/SetUpAclPutRemTest/testUpdateAclPermissionOverALLUsersAsNotAdmin()#java/util/Optional/of(T)
io/corbel/resources/rem/acl/SetUpAclPutRemTest/testUpdateAclPermissionOverALLUsersAsNotAdmin()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/resources/rem/acl/SetUpAclPutRemTest/testUpdateAclPermissionOverALLUsersAsNotAdmin()#com/google/gson/JsonObject/addProperty(java.lang.String,java.lang.String)
io/corbel/resources/rem/acl/SetUpAclPutRemTest/testUpdateAclPermissionOverALLUsersAsNotAdmin()#com/google/gson/JsonObject/JsonObject()
io/corbel/resources/rem/acl/SetUpAclPutRemTest/testUserNotInAcl()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/acl/SetUpAclPutRemTest/testUserNotInAcl()#javax/ws/rs/core/Response/getEntity()
io/corbel/resources/rem/acl/SetUpAclPutRemTest/testUserNotInAcl()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/acl/SetUpAclPutRemTest/testUserNotInAcl()#io/corbel/lib/ws/model/Error/getErrorDescription()
io/corbel/resources/rem/acl/SetUpAclPutRemTest/testUserNotInAcl()#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/rem/acl/SetUpAclPutRemTest/testUserNotInAcl()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/resources/rem/acl/SetUpAclPutRemTest/testUserNotInAcl()#io/corbel/resources/rem/utils/AclUtils/buildMessage(io.corbel.resources.rem.model.AclPermission)
io/corbel/resources/rem/acl/SetUpAclPutRemTest/testUserNotInAcl()#io/corbel/resources/rem/acl/AclBaseRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)
io/corbel/resources/rem/acl/SetUpAclPutRemTest/testUserNotInAcl()#io/corbel/resources/rem/acl/SetUpAclPutRemTest/getEntityWithoutAcl()
io/corbel/resources/rem/acl/SetUpAclPutRemTest/testUserNotInAcl()#java/util/Optional/empty()
io/corbel/resources/rem/acl/SetUpAclPutRemTest/testUserNotInAcl()#io/corbel/resources/rem/acl/AclTestUtils/getEntity(java.lang.String,java.lang.String)
io/corbel/resources/rem/acl/SetUpAclPutRemTest/testUserNotInAcl()#io/corbel/resources/rem/acl/SetUpAclPutRemTest/getError(javax.ws.rs.core.Response)
io/corbel/resources/rem/acl/SetUpAclPutRemTest/testUserNotInAcl()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/resources/rem/acl/SetUpAclPutRemTest/testUserNotInAcl()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/resources/rem/acl/SetUpAclPutRemTest/testUserNotInAcl()#java/util/Optional/of(T)
io/corbel/resources/rem/acl/SetUpAclPutRemTest/testUserNotInAcl()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/resources/rem/acl/SetUpAclPutRemTest/testUpdateBadAclPermission()#io/corbel/resources/rem/acl/AclBaseRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)
io/corbel/resources/rem/acl/SetUpAclPutRemTest/testUpdateBadAclPermission()#io/corbel/resources/rem/service/AclResourcesService/isAuthorized(java.lang.String,io.corbel.lib.token.TokenInfo,java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.model.AclPermission)
io/corbel/resources/rem/acl/SetUpAclPutRemTest/testUpdateBadAclPermission()#java/io/ByteArrayInputStream/ByteArrayInputStream(byte[])
io/corbel/resources/rem/acl/SetUpAclPutRemTest/testUpdateBadAclPermission()#io/corbel/resources/rem/service/AclResourcesService/updateResource(io.corbel.resources.rem.Rem,java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.lang.Object,java.util.List)
io/corbel/resources/rem/acl/SetUpAclPutRemTest/testUpdateBadAclPermission()#java/util/Arrays/asList(T[])
io/corbel/resources/rem/acl/SetUpAclPutRemTest/testUpdateBadAclPermission()#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/rem/acl/SetUpAclPutRemTest/testUpdateBadAclPermission()#org/mockito/Matchers/any()
io/corbel/resources/rem/acl/SetUpAclPutRemTest/testUpdateBadAclPermission()#java/lang/String/getBytes()
io/corbel/resources/rem/acl/SetUpAclPutRemTest/testUpdateBadAclPermission()#org/mockito/Matchers/eq(T)
io/corbel/resources/rem/acl/SetUpAclPutRemTest/testUpdateBadAclPermission()#com/google/gson/JsonElement/toString()
io/corbel/resources/rem/acl/SetUpAclPutRemTest/testUpdateBadAclPermission()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/resources/rem/acl/SetUpAclPutRemTest/testUpdateBadAclPermission()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/acl/SetUpAclPutRemTest/testUpdateBadAclPermission()#java/lang/Enum/toString()
io/corbel/resources/rem/acl/SetUpAclPutRemTest/testUpdateBadAclPermission()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/resources/rem/acl/SetUpAclPutRemTest/testUpdateBadAclPermission()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/acl/SetUpAclPutRemTest/testUpdateBadAclPermission()#java/util/Optional/of(T)
io/corbel/resources/rem/acl/SetUpAclPutRemTest/testUpdateBadAclPermission()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/resources/rem/acl/SetUpAclPutRemTest/testUpdateBadAclPermission()#com/google/gson/JsonObject/addProperty(java.lang.String,java.lang.String)
io/corbel/resources/rem/acl/SetUpAclPutRemTest/testUpdateBadAclPermission()#com/google/gson/JsonObject/JsonObject()
io/corbel/resources/rem/acl/SetUpAclPutRemTest/testReadPermission()#javax/ws/rs/core/Response/getEntity()
io/corbel/resources/rem/acl/SetUpAclPutRemTest/testReadPermission()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/acl/SetUpAclPutRemTest/testReadPermission()#io/corbel/lib/ws/model/Error/getErrorDescription()
io/corbel/resources/rem/acl/SetUpAclPutRemTest/testReadPermission()#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/rem/acl/SetUpAclPutRemTest/testReadPermission()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/resources/rem/acl/SetUpAclPutRemTest/testReadPermission()#io/corbel/resources/rem/acl/AclBaseRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)
io/corbel/resources/rem/acl/SetUpAclPutRemTest/testReadPermission()#io/corbel/resources/rem/acl/SetUpAclPutRemTest/getEntityWithoutAcl()
io/corbel/resources/rem/acl/SetUpAclPutRemTest/testReadPermission()#java/util/Optional/empty()
io/corbel/resources/rem/acl/SetUpAclPutRemTest/testReadPermission()#io/corbel/resources/rem/acl/AclTestUtils/getEntity(java.lang.String,java.lang.String)
io/corbel/resources/rem/acl/SetUpAclPutRemTest/testReadPermission()#io/corbel/resources/rem/acl/SetUpAclPutRemTest/getError(javax.ws.rs.core.Response)
io/corbel/resources/rem/acl/SetUpAclPutRemTest/testReadPermission()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/acl/SetUpAclPutRemTest/testReadPermission()#java/lang/Enum/toString()
io/corbel/resources/rem/acl/SetUpAclPutRemTest/testReadPermission()#java/util/Optional/of(T)
io/corbel/resources/rem/acl/SetUpAclPutRemTest/testReadPermission()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/resources/rem/acl/SetUpAclPutRemTest/testReadPermission()#org/fest/assertions/api/StringAssert/contains(java.lang.String)
io/corbel/resources/rem/acl/SetUpAclPutRemTest/testReadPermission()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/resources/rem/acl/SetUpAclPutRemTest/getEntityAsInputStream(com.google.gson.JsonObject)#java/io/ByteArrayInputStream/ByteArrayInputStream(byte[])
io/corbel/resources/rem/acl/SetUpAclPutRemTest/getEntityAsInputStream(com.google.gson.JsonObject)#java/lang/String/getBytes()
io/corbel/resources/rem/acl/SetUpAclPutRemTest/getEntityAsInputStream(com.google.gson.JsonObject)#com/google/gson/JsonElement/toString()
io/corbel/resources/rem/acl/SetUpAclPutRemTest/getEntityWithoutAcl()#io/corbel/resources/rem/acl/AclTestUtils/getEntityWithoutAcl()
io/corbel/resources/rem/acl/SetUpAclPutRemTest/getEntityWithoutAcl()#io/corbel/resources/rem/acl/SetUpAclPutRemTest/getEntityAsInputStream(com.google.gson.JsonObject)
io/corbel/resources/rem/acl/SetUpAclPutRemTest/setUp()#javax/ws/rs/core/MultivaluedMap/putSingle(K,V)
io/corbel/resources/rem/acl/SetUpAclPutRemTest/setUp()#io/corbel/resources/rem/request/RequestParameters/getTokenInfo()
io/corbel/resources/rem/acl/SetUpAclPutRemTest/setUp()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/acl/SetUpAclPutRemTest/setUp()#io/corbel/resources/rem/request/RequestParameters/getRequestedDomain()
io/corbel/resources/rem/acl/SetUpAclPutRemTest/setUp()#io/corbel/resources/rem/service/AclResourcesService/getResource(io.corbel.resources.rem.Rem,java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.List)
io/corbel/resources/rem/acl/SetUpAclPutRemTest/setUp()#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/rem/acl/SetUpAclPutRemTest/setUp()#javax/ws/rs/core/MultivaluedHashMap/MultivaluedHashMap()
io/corbel/resources/rem/acl/SetUpAclPutRemTest/setUp()#org/glassfish/jersey/internal/util/collection/MultivaluedStringMap/MultivaluedStringMap()
io/corbel/resources/rem/acl/SetUpAclPutRemTest/setUp()#io/corbel/resources/rem/acl/AclBaseRem/setRemService(io.corbel.resources.rem.service.RemService)
io/corbel/resources/rem/acl/SetUpAclPutRemTest/setUp()#io/corbel/lib/token/TokenInfo/getGroups()
io/corbel/resources/rem/acl/SetUpAclPutRemTest/setUp()#org/mockito/Matchers/eq(T)
io/corbel/resources/rem/acl/SetUpAclPutRemTest/setUp()#io/corbel/resources/rem/request/RequestParameters/getParams()
io/corbel/resources/rem/acl/SetUpAclPutRemTest/setUp()#io/corbel/resources/rem/request/RequestParameters/getOptionalApiParameters()
io/corbel/resources/rem/acl/SetUpAclPutRemTest/setUp()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/acl/SetUpAclPutRemTest/setUp()#io/corbel/resources/rem/acl/SetUpAclPutRem/SetUpAclPutRem(io.corbel.resources.rem.service.AclResourcesService,java.util.List)
io/corbel/resources/rem/acl/SetUpAclPutRemTest/setUp()#io/corbel/resources/rem/request/RequestParameters/getHeaders()
io/corbel/resources/rem/acl/SetUpAclPutRemTest/setUp()#java/util/Collections/emptyList()
io/corbel/resources/rem/acl/SetUpAclPutRemTest/setUp()#io/corbel/lib/token/TokenInfo/getUserId()
io/corbel/resources/rem/acl/SetUpAclPutRemTest/setUp()#org/mockito/Matchers/any()
io/corbel/resources/rem/acl/SetUpAclPutRemTest/setUp()#java/util/Optional/empty()
io/corbel/resources/rem/acl/SetUpAclPutRemTest/testUpdateAclPermission()#io/corbel/resources/rem/service/AclResourcesService/isAuthorized(java.lang.String,io.corbel.lib.token.TokenInfo,java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.model.AclPermission)
io/corbel/resources/rem/acl/SetUpAclPutRemTest/testUpdateAclPermission()#java/io/ByteArrayInputStream/ByteArrayInputStream(byte[])
io/corbel/resources/rem/acl/SetUpAclPutRemTest/testUpdateAclPermission()#io/corbel/resources/rem/service/AclResourcesService/updateResource(io.corbel.resources.rem.Rem,java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.lang.Object,java.util.List)
io/corbel/resources/rem/acl/SetUpAclPutRemTest/testUpdateAclPermission()#java/util/Arrays/asList(T[])
io/corbel/resources/rem/acl/SetUpAclPutRemTest/testUpdateAclPermission()#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/rem/acl/SetUpAclPutRemTest/testUpdateAclPermission()#java/lang/String/getBytes()
io/corbel/resources/rem/acl/SetUpAclPutRemTest/testUpdateAclPermission()#org/mockito/Matchers/eq(T)
io/corbel/resources/rem/acl/SetUpAclPutRemTest/testUpdateAclPermission()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/resources/rem/acl/SetUpAclPutRemTest/testUpdateAclPermission()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/acl/SetUpAclPutRemTest/testUpdateAclPermission()#java/lang/Enum/toString()
io/corbel/resources/rem/acl/SetUpAclPutRemTest/testUpdateAclPermission()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/resources/rem/acl/SetUpAclPutRemTest/testUpdateAclPermission()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/acl/SetUpAclPutRemTest/testUpdateAclPermission()#java/util/Optional/of(T)
io/corbel/resources/rem/acl/SetUpAclPutRemTest/testUpdateAclPermission()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/resources/rem/acl/SetUpAclPutRemTest/testUpdateAclPermission()#com/google/gson/JsonObject/JsonObject()
io/corbel/resources/rem/acl/SetUpAclPutRemTest/testUpdateAclPermission()#io/corbel/resources/rem/acl/AclBaseRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)
io/corbel/resources/rem/acl/SetUpAclPutRemTest/testUpdateAclPermission()#com/google/gson/JsonObject/addProperty(java.lang.String,java.lang.String)
io/corbel/resources/rem/acl/SetUpAclPutRemTest/testUpdateAclPermission()#org/mockito/Matchers/any()
io/corbel/resources/rem/acl/SetUpAclPutRemTest/testUpdateAclPermission()#java/util/Optional/empty()
io/corbel/resources/rem/acl/SetUpAclPutRemTest/testUpdateAclPermission()#com/google/gson/JsonElement/toString()
io/corbel/resources/rem/acl/SetUpAclPutRemTest/testUpdateAclPermission()#com/google/gson/JsonObject/add(java.lang.String,com.google.gson.JsonElement)
io/corbel/oauth/filter/AuthFilterRegistrar/setApplicationContext(org.springframework.context.ApplicationContext)#org/slf4j/Logger/info(java.lang.String,java.lang.Object,java.lang.Object)
io/corbel/oauth/filter/AuthFilterRegistrar/setApplicationContext(org.springframework.context.ApplicationContext)#java/util/Map/values()
io/corbel/oauth/filter/AuthFilterRegistrar/setApplicationContext(org.springframework.context.ApplicationContext)#java/lang/Class/getName()
io/corbel/oauth/filter/AuthFilterRegistrar/setApplicationContext(org.springframework.context.ApplicationContext)#io/corbel/oauth/filter/FilterRegistry/registerFilter(io.corbel.oauth.filter.AuthFilter)
io/corbel/oauth/filter/AuthFilterRegistrar/setApplicationContext(org.springframework.context.ApplicationContext)#java/lang/Object/getClass()
io/corbel/oauth/filter/AuthFilterRegistrar/setApplicationContext(org.springframework.context.ApplicationContext)#org/springframework/beans/factory/ListableBeanFactory/getBeansOfType(java.lang.Class)
io/corbel/oauth/filter/AuthFilterRegistrar/setApplicationContext(org.springframework.context.ApplicationContext)#io/corbel/oauth/filter/AuthFilter/getDomain()
io/corbel/resources/rem/operation/ImageOperationsTest/operationTest(java.util.List,java.util.List,io.corbel.resources.rem.operation.ImageOperation)#io/corbel/resources/rem/operation/ImageOperation/apply(java.lang.String)
io/corbel/resources/rem/operation/ImageOperationsTest/operationTest(java.util.List,java.util.List,io.corbel.resources.rem.operation.ImageOperation)#org/im4java/core/Operation/getCmdArgs()
io/corbel/resources/rem/operation/ImageOperationsTest/operationTest(java.util.List,java.util.List,io.corbel.resources.rem.operation.ImageOperation)#java/util/List/size()
io/corbel/resources/rem/operation/ImageOperationsTest/operationTest(java.util.List,java.util.List,io.corbel.resources.rem.operation.ImageOperation)#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/resources/rem/operation/ImageOperationsTest/operationTest(java.util.List,java.util.List,io.corbel.resources.rem.operation.ImageOperation)#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/resources/rem/operation/ImageOperationsTest/operationTest(java.util.List,java.util.List,io.corbel.resources.rem.operation.ImageOperation)#java/util/AbstractCollection/toString()
io/corbel/resources/rem/operation/ImageOperationsTest/operationTest(java.util.List,java.util.List,io.corbel.resources.rem.operation.ImageOperation)#java/util/List/get(int)
io/corbel/resources/rem/operation/ImageOperationsTest/operationTest(java.util.List,java.util.List,io.corbel.resources.rem.operation.ImageOperation)#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/resources/rem/operation/ImageOperationsTest/operationTest(java.util.List,java.util.List,io.corbel.resources.rem.operation.ImageOperation)#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/resources/rem/operation/ImageOperationsTest/resizeHeightTest()#io/corbel/resources/rem/operation/ImageOperationsTest/operationTest(java.util.List,java.util.List,io.corbel.resources.rem.operation.ImageOperation)
io/corbel/resources/rem/operation/ImageOperationsTest/resizeHeightTest()#java/util/Collections/singletonList(T)
io/corbel/resources/rem/operation/ImageOperationsTest/resizeHeightTest()#io/corbel/resources/rem/operation/ResizeHeight/ResizeHeight()
io/corbel/resources/rem/operation/ImageOperationsTest/blurTest()#io/corbel/resources/rem/operation/ImageOperationsTest/operationTest(java.util.List,java.util.List,io.corbel.resources.rem.operation.ImageOperation)
io/corbel/resources/rem/operation/ImageOperationsTest/blurTest()#java/util/Collections/singletonList(T)
io/corbel/resources/rem/operation/ImageOperationsTest/blurTest()#io/corbel/resources/rem/operation/Blur/Blur()
io/corbel/resources/rem/operation/ImageOperationsTest/resizeAndFillTest()#io/corbel/resources/rem/operation/ImageOperationsTest/operationTest(java.util.List,java.util.List,io.corbel.resources.rem.operation.ImageOperation)
io/corbel/resources/rem/operation/ImageOperationsTest/resizeAndFillTest()#java/util/Collections/singletonList(T)
io/corbel/resources/rem/operation/ImageOperationsTest/resizeAndFillTest()#io/corbel/resources/rem/operation/ResizeAndFill/ResizeAndFill()
io/corbel/resources/rem/operation/ImageOperationsTest/blurTestDecimals()#io/corbel/resources/rem/operation/ImageOperationsTest/operationTest(java.util.List,java.util.List,io.corbel.resources.rem.operation.ImageOperation)
io/corbel/resources/rem/operation/ImageOperationsTest/blurTestDecimals()#java/util/Collections/singletonList(T)
io/corbel/resources/rem/operation/ImageOperationsTest/blurTestDecimals()#io/corbel/resources/rem/operation/Blur/Blur()
io/corbel/resources/rem/operation/ImageOperationsTest/cropFromCenterTest()#io/corbel/resources/rem/operation/ImageOperationsTest/operationTest(java.util.List,java.util.List,io.corbel.resources.rem.operation.ImageOperation)
io/corbel/resources/rem/operation/ImageOperationsTest/cropFromCenterTest()#java/util/Collections/singletonList(T)
io/corbel/resources/rem/operation/ImageOperationsTest/cropFromCenterTest()#io/corbel/resources/rem/operation/CropFromCenter/CropFromCenter()
io/corbel/resources/rem/operation/ImageOperationsTest/cropTest()#io/corbel/resources/rem/operation/ImageOperationsTest/operationTest(java.util.List,java.util.List,io.corbel.resources.rem.operation.ImageOperation)
io/corbel/resources/rem/operation/ImageOperationsTest/cropTest()#java/util/Collections/singletonList(T)
io/corbel/resources/rem/operation/ImageOperationsTest/cropTest()#io/corbel/resources/rem/operation/Crop/Crop()
io/corbel/resources/rem/operation/ImageOperationsTest/autoOrientFalseTest()#io/corbel/resources/rem/operation/ImageOperationsTest/operationTest(java.util.List,java.util.List,io.corbel.resources.rem.operation.ImageOperation)
io/corbel/resources/rem/operation/ImageOperationsTest/autoOrientFalseTest()#java/util/Collections/singletonList(T)
io/corbel/resources/rem/operation/ImageOperationsTest/autoOrientFalseTest()#io/corbel/resources/rem/operation/AutoOrient/AutoOrient()
io/corbel/resources/rem/operation/ImageOperationsTest/autoOrientTest()#io/corbel/resources/rem/operation/ImageOperationsTest/operationTest(java.util.List,java.util.List,io.corbel.resources.rem.operation.ImageOperation)
io/corbel/resources/rem/operation/ImageOperationsTest/autoOrientTest()#java/util/Collections/singletonList(T)
io/corbel/resources/rem/operation/ImageOperationsTest/autoOrientTest()#io/corbel/resources/rem/operation/AutoOrient/AutoOrient()
io/corbel/resources/rem/operation/ImageOperationsTest/resizeWidthTest()#io/corbel/resources/rem/operation/ImageOperationsTest/operationTest(java.util.List,java.util.List,io.corbel.resources.rem.operation.ImageOperation)
io/corbel/resources/rem/operation/ImageOperationsTest/resizeWidthTest()#java/util/Collections/singletonList(T)
io/corbel/resources/rem/operation/ImageOperationsTest/resizeWidthTest()#io/corbel/resources/rem/operation/ResizeWidth/ResizeWidth()
io/corbel/resources/rem/operation/ImageOperationsTest/resizeTest()#io/corbel/resources/rem/operation/ImageOperationsTest/operationTest(java.util.List,java.util.List,io.corbel.resources.rem.operation.ImageOperation)
io/corbel/resources/rem/operation/ImageOperationsTest/resizeTest()#java/util/Collections/singletonList(T)
io/corbel/resources/rem/operation/ImageOperationsTest/resizeTest()#io/corbel/resources/rem/operation/Resize/Resize()
io/corbel/resources/api/PluginInfoResource/getPluginsInfo()#java/util/ArrayList/ArrayList()
io/corbel/resources/api/PluginInfoResource/getPluginsInfo()#io/corbel/resources/api/PluginInfoResource/loadBuildMetadataProperties()
io/corbel/resources/api/PluginInfoResource/getPluginsInfo()#java/util/Collection/stream()
io/corbel/resources/api/PluginInfoResource/getPluginsInfo()#java/util/stream/Stream/forEach(java.util.function.Consumer)
io/corbel/resources/api/PluginInfoResource/getPluginInfo()#javax/ws/rs/core/Response/ResponseBuilder/build()
io/corbel/resources/api/PluginInfoResource/getPluginInfo()#javax/ws/rs/core/Response/ok()
io/corbel/resources/api/PluginInfoResource/getPluginInfo()#javax/ws/rs/core/Response/ResponseBuilder/entity(java.lang.Object)
io/corbel/resources/api/PluginInfoResource/loadBuildMetadataProperties()#org/slf4j/Logger/warn(java.lang.String,java.lang.Throwable)
io/corbel/resources/api/PluginInfoResource/loadBuildMetadataProperties()#java/util/Properties/Properties()
io/corbel/resources/api/PluginInfoResource/loadBuildMetadataProperties()#java/util/List/add(E)
io/corbel/resources/api/PluginInfoResource/loadBuildMetadataProperties()#java/util/Properties/load(java.io.InputStream)
io/corbel/resources/api/PluginInfoResource/loadBuildMetadataProperties()#java/lang/Class/getResourceAsStream(java.lang.String)
io/corbel/resources/api/PluginInfoResource/loadBuildMetadataProperties()#java/util/ArrayList/ArrayList()
io/corbel/resources/rem/operation/Blur/apply(java.lang.String)#java/util/regex/Matcher/matches()
io/corbel/resources/rem/operation/Blur/apply(java.lang.String)#org/im4java/core/IMOps/blur(java.lang.Double,java.lang.Double)
io/corbel/resources/rem/operation/Blur/apply(java.lang.String)#java/lang/Double/parseDouble(java.lang.String)
io/corbel/resources/rem/operation/Blur/apply(java.lang.String)#org/im4java/core/IMOperation/IMOperation()
io/corbel/resources/rem/operation/Blur/apply(java.lang.String)#io/corbel/resources/rem/operation/ImageOperation/getValues(java.lang.String,java.util.regex.Matcher)
io/corbel/resources/rem/operation/Blur/apply(java.lang.String)#java/util/List/get(int)
io/corbel/resources/rem/operation/Blur/apply(java.lang.String)#java/util/regex/Pattern/matcher(java.lang.CharSequence)
io/corbel/resources/rem/operation/Blur/apply(java.lang.String)#io/corbel/resources/rem/exception/ImageOperationsException/ImageOperationsException(java.lang.String,java.lang.Throwable)
io/corbel/resources/rem/operation/Blur/apply(java.lang.String)#io/corbel/resources/rem/exception/ImageOperationsException/ImageOperationsException(java.lang.String)
io/corbel/notifications/template/DefaultNotificationFiller/fill(io.corbel.notifications.model.NotificationTemplate,java.util.Map)#io/corbel/notifications/template/DefaultNotificationFiller/fill(io/corbel/notifications/model/NotificationTemplate,java/util/Map)/$anonymous1/()
io/corbel/notifications/template/DefaultNotificationFiller/fill(io.corbel.notifications.model.NotificationTemplate,java.util.Map)#org/springframework/util/ReflectionUtils/doWithFields(java.lang.Class,org.springframework.util.ReflectionUtils.FieldCallback,org.springframework.util.ReflectionUtils.FieldFilter)
io/corbel/notifications/template/DefaultNotificationFiller/fillContent(java.lang.String,java.util.Map)#com/github/mustachejava/Mustache/execute(java.io.Writer,java.lang.Object)
io/corbel/notifications/template/DefaultNotificationFiller/fillContent(java.lang.String,java.util.Map)#java/io/StringReader/StringReader(java.lang.String)
io/corbel/notifications/template/DefaultNotificationFiller/fillContent(java.lang.String,java.util.Map)#java/lang/StringBuffer/toString()
io/corbel/notifications/template/DefaultNotificationFiller/fillContent(java.lang.String,java.util.Map)#java/lang/String/isEmpty()
io/corbel/notifications/template/DefaultNotificationFiller/fillContent(java.lang.String,java.util.Map)#org/codehaus/groovy/runtime/StringBufferWriter/StringBufferWriter(java.lang.StringBuffer)
io/corbel/notifications/template/DefaultNotificationFiller/fillContent(java.lang.String,java.util.Map)#com/github/mustachejava/MustacheFactory/compile(java.io.Reader,java.lang.String)
io/corbel/notifications/template/DefaultNotificationFiller/fillContent(java.lang.String,java.util.Map)#java/lang/StringBuffer/StringBuffer()
io/corbel/notifications/service/IosPushNotificationsService/createApnsService(io.corbel.notifications.model.Domain)#com/notnoop/apns/ApnsServiceBuilder/withCert(java.io.InputStream,java.lang.String)
io/corbel/notifications/service/IosPushNotificationsService/createApnsService(io.corbel.notifications.model.Domain)#com/notnoop/apns/ApnsServiceBuilder/build()
io/corbel/notifications/service/IosPushNotificationsService/createApnsService(io.corbel.notifications.model.Domain)#java/util/Base64/getDecoder()
io/corbel/notifications/service/IosPushNotificationsService/createApnsService(io.corbel.notifications.model.Domain)#java/io/ByteArrayInputStream/ByteArrayInputStream(byte[])
io/corbel/notifications/service/IosPushNotificationsService/createApnsService(io.corbel.notifications.model.Domain)#io/corbel/notifications/model/Domain/getId()
io/corbel/notifications/service/IosPushNotificationsService/createApnsService(io.corbel.notifications.model.Domain)#io/corbel/notifications/model/Domain/isDevelopmentMode()
io/corbel/notifications/service/IosPushNotificationsService/createApnsService(io.corbel.notifications.model.Domain)#java/util/Map/put(K,V)
io/corbel/notifications/service/IosPushNotificationsService/createApnsService(io.corbel.notifications.model.Domain)#io/corbel/notifications/model/Domain/getIosNotificationsCertificate()
io/corbel/notifications/service/IosPushNotificationsService/createApnsService(io.corbel.notifications.model.Domain)#com/notnoop/apns/ApnsServiceBuilder/withSandboxDestination()
io/corbel/notifications/service/IosPushNotificationsService/createApnsService(io.corbel.notifications.model.Domain)#com/notnoop/apns/ApnsServiceBuilder/withProductionDestination()
io/corbel/notifications/service/IosPushNotificationsService/createApnsService(io.corbel.notifications.model.Domain)#java/util/Base64/Decoder/decode(byte[])
io/corbel/notifications/service/IosPushNotificationsService/createApnsService(io.corbel.notifications.model.Domain)#io/corbel/notifications/model/Domain/getIosNotificationsPassword()
io/corbel/notifications/service/IosPushNotificationsService/createApnsService(io.corbel.notifications.model.Domain)#java/lang/String/getBytes(java.nio.charset.Charset)
io/corbel/notifications/service/IosPushNotificationsService/createApnsService(io.corbel.notifications.model.Domain)#com/notnoop/apns/APNS/newService()
io/corbel/notifications/service/IosPushNotificationsService/send(io.corbel.notifications.model.Domain,io.corbel.notifications.model.NotificationTemplate,java.lang.String,java.lang.String[])#io/corbel/notifications/service/IosPushNotificationsService/send(io.corbel.notifications.model.Domain,io.corbel.notifications.model.NotificationTemplate,java.lang.String[])
io/corbel/notifications/service/IosPushNotificationsService/send(io.corbel.notifications.model.Domain,io.corbel.notifications.model.NotificationTemplate,java.lang.String[])#com/notnoop/apns/PayloadBuilder/alertTitle(java.lang.String)
io/corbel/notifications/service/IosPushNotificationsService/send(io.corbel.notifications.model.Domain,io.corbel.notifications.model.NotificationTemplate,java.lang.String[])#io/corbel/notifications/model/NotificationTemplate/getText()
io/corbel/notifications/service/IosPushNotificationsService/send(io.corbel.notifications.model.Domain,io.corbel.notifications.model.NotificationTemplate,java.lang.String[])#com/notnoop/apns/PayloadBuilder/alertBody(java.lang.String)
io/corbel/notifications/service/IosPushNotificationsService/send(io.corbel.notifications.model.Domain,io.corbel.notifications.model.NotificationTemplate,java.lang.String[])#com/notnoop/apns/PayloadBuilder/badge(int)
io/corbel/notifications/service/IosPushNotificationsService/send(io.corbel.notifications.model.Domain,io.corbel.notifications.model.NotificationTemplate,java.lang.String[])#java/util/Arrays/toString(java.lang.Object[])
io/corbel/notifications/service/IosPushNotificationsService/send(io.corbel.notifications.model.Domain,io.corbel.notifications.model.NotificationTemplate,java.lang.String[])#java/util/Map/get(java.lang.Object)
io/corbel/notifications/service/IosPushNotificationsService/send(io.corbel.notifications.model.Domain,io.corbel.notifications.model.NotificationTemplate,java.lang.String[])#org/slf4j/Logger/info(java.lang.String)
io/corbel/notifications/service/IosPushNotificationsService/send(io.corbel.notifications.model.Domain,io.corbel.notifications.model.NotificationTemplate,java.lang.String[])#java/lang/Throwable/getMessage()
io/corbel/notifications/service/IosPushNotificationsService/send(io.corbel.notifications.model.Domain,io.corbel.notifications.model.NotificationTemplate,java.lang.String[])#java/util/Arrays/asList(T[])
io/corbel/notifications/service/IosPushNotificationsService/send(io.corbel.notifications.model.Domain,io.corbel.notifications.model.NotificationTemplate,java.lang.String[])#org/slf4j/Logger/error(java.lang.String,java.lang.Object,java.lang.Object)
io/corbel/notifications/service/IosPushNotificationsService/send(io.corbel.notifications.model.Domain,io.corbel.notifications.model.NotificationTemplate,java.lang.String[])#java/util/Map/containsKey(java.lang.Object)
io/corbel/notifications/service/IosPushNotificationsService/send(io.corbel.notifications.model.Domain,io.corbel.notifications.model.NotificationTemplate,java.lang.String[])#io/corbel/notifications/model/NotificationTemplate/getTitle()
io/corbel/notifications/service/IosPushNotificationsService/send(io.corbel.notifications.model.Domain,io.corbel.notifications.model.NotificationTemplate,java.lang.String[])#com/notnoop/apns/PayloadBuilder/build()
io/corbel/notifications/service/IosPushNotificationsService/send(io.corbel.notifications.model.Domain,io.corbel.notifications.model.NotificationTemplate,java.lang.String[])#com/notnoop/apns/ApnsService/push(java.util.Collection,java.lang.String)
io/corbel/notifications/service/IosPushNotificationsService/send(io.corbel.notifications.model.Domain,io.corbel.notifications.model.NotificationTemplate,java.lang.String[])#io/corbel/notifications/model/Domain/getId()
io/corbel/notifications/service/IosPushNotificationsService/send(io.corbel.notifications.model.Domain,io.corbel.notifications.model.NotificationTemplate,java.lang.String[])#io/corbel/notifications/service/IosPushNotificationsService/createApnsService(io.corbel.notifications.model.Domain)
io/corbel/notifications/service/IosPushNotificationsService/send(io.corbel.notifications.model.Domain,io.corbel.notifications.model.NotificationTemplate,java.lang.String[])#com/notnoop/apns/APNS/newPayload()
io/corbel/iam/service/DefaultUserServiceTest/updateUser()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/service/DefaultUserServiceTest/updateUser()#io/corbel/iam/service/EventsService/sendUserModifiedEvent(io.corbel.iam.model.User)
io/corbel/iam/service/DefaultUserServiceTest/updateUser()#io/corbel/iam/service/DefaultUserService/update(io.corbel.iam.model.User)
io/corbel/iam/service/DefaultUserServiceTest/updateUser()#org/mockito/Mockito/when(T)
io/corbel/iam/service/DefaultUserServiceTest/updateUser()#org/mockito/Mockito/verify(T)
io/corbel/iam/service/DefaultUserServiceTest/updateUser()#org/springframework/data/repository/CrudRepository/save(S)
io/corbel/iam/service/DefaultUserServiceTest/testRemoveScopes()#io/corbel/iam/repository/HasScopesRepository/removeScopes(ID,java.lang.String[])
io/corbel/iam/service/DefaultUserServiceTest/testRemoveScopes()#io/corbel/iam/service/DefaultUserService/removeScopes(java.lang.String,java.lang.String[])
io/corbel/iam/service/DefaultUserServiceTest/testRemoveScopes()#org/mockito/Mockito/verify(T)
io/corbel/iam/service/DefaultUserServiceTest/testGetUserProfile()#io/corbel/iam/model/User/getEmail()
io/corbel/iam/service/DefaultUserServiceTest/testGetUserProfile()#org/fest/assertions/api/AbstractAssert/isNull()
io/corbel/iam/service/DefaultUserServiceTest/testGetUserProfile()#org/mockito/Mockito/when(T)
io/corbel/iam/service/DefaultUserServiceTest/testGetUserProfile()#org/fest/assertions/api/AbstractAssert/isNotEqualTo(A)
io/corbel/iam/service/DefaultUserServiceTest/testGetUserProfile()#io/corbel/iam/model/User/getLastName()
io/corbel/iam/service/DefaultUserServiceTest/testGetUserProfile()#io/corbel/iam/model/User/setLastName(java.lang.String)
io/corbel/iam/service/DefaultUserServiceTest/testGetUserProfile()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/service/DefaultUserServiceTest/testGetUserProfile()#io/corbel/iam/model/User/getFirstName()
io/corbel/iam/service/DefaultUserServiceTest/testGetUserProfile()#io/corbel/iam/model/User/User()
io/corbel/iam/service/DefaultUserServiceTest/testGetUserProfile()#java/util/Arrays/asList(T[])
io/corbel/iam/service/DefaultUserServiceTest/testGetUserProfile()#io/corbel/iam/model/User/setFirstName(java.lang.String)
io/corbel/iam/service/DefaultUserServiceTest/testGetUserProfile()#io/corbel/iam/service/DefaultUserService/getUserProfile(io.corbel.iam.model.User,java.util.Set)
io/corbel/iam/service/DefaultUserServiceTest/testGetUserProfile()#io/corbel/iam/model/User/setEmail(java.lang.String)
io/corbel/iam/service/DefaultUserServiceTest/testGetUserProfile()#io/corbel/iam/repository/UserRepository/findById(java.lang.String)
io/corbel/iam/service/DefaultUserServiceTest/testGetUserProfile()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/iam/service/DefaultUserServiceTest/testGetUserProfile()#io/corbel/iam/model/User/getDomain()
io/corbel/iam/service/DefaultUserServiceTest/testGetUserProfile()#org/fest/assertions/api/Assertions/assertThat(T)
io/corbel/iam/service/DefaultUserServiceTest/testGetUserProfile()#io/corbel/iam/model/User/setDomain(java.lang.String)
io/corbel/iam/service/DefaultUserServiceTest/testGetUserProfile()#java/util/HashSet/HashSet(java.util.Collection)
io/corbel/iam/service/DefaultUserServiceTest/testGetUserProfile()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/iam/service/DefaultUserServiceTest/setup()#com/google/gson/Gson/Gson()
io/corbel/iam/service/DefaultUserServiceTest/setup()#io/corbel/iam/service/DefaultUserService/DefaultUserService(io.corbel.iam.repository.UserRepository,io.corbel.iam.service.EventsService,io.corbel.iam.repository.UserTokenRepository,io.corbel.lib.ws.auth.repository.AuthorizationRulesRepository,io.corbel.iam.service.RefreshTokenService,io.corbel.iam.service.MailService,com.google.gson.Gson)
io/corbel/iam/service/DefaultUserServiceTest/testSignout()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/service/DefaultUserServiceTest/testSignout()#org/mockito/Mockito/when(T)
io/corbel/iam/service/DefaultUserServiceTest/testSignout()#io/corbel/lib/ws/auth/repository/AuthorizationRulesRepository/deleteByToken(java.lang.String)
io/corbel/iam/service/DefaultUserServiceTest/testSignout()#io/corbel/iam/repository/UserTokenRepository/findByUserId(java.lang.String)
io/corbel/iam/service/DefaultUserServiceTest/testSignout()#io/corbel/iam/model/UserToken/UserToken()
io/corbel/iam/service/DefaultUserServiceTest/testSignout()#java/util/Arrays/asList(T[])
io/corbel/iam/service/DefaultUserServiceTest/testSignout()#org/mockito/Mockito/never()
io/corbel/iam/service/DefaultUserServiceTest/testSignout()#io/corbel/iam/service/RefreshTokenService/invalidateRefreshToken(java.lang.String,java.util.Optional)
io/corbel/iam/service/DefaultUserServiceTest/testSignout()#org/mockito/Mockito/verify(T,org.mockito.verification.VerificationMode)
io/corbel/iam/service/DefaultUserServiceTest/testSignout()#io/corbel/iam/service/DefaultUserService/signOut(java.lang.String,java.util.Optional)
io/corbel/iam/service/DefaultUserServiceTest/testSignout()#org/springframework/data/repository/CrudRepository/delete(ID)
io/corbel/iam/service/DefaultUserServiceTest/testSignout()#org/mockito/Mockito/verify(T)
io/corbel/iam/service/DefaultUserServiceTest/testSignout()#io/corbel/iam/model/UserToken/setToken(java.lang.String)
io/corbel/iam/service/DefaultUserServiceTest/testSignout()#java/util/Optional/of(T)
io/corbel/iam/service/DefaultUserServiceTest/testCountUsersByDomain()#io/corbel/lib/queries/builder/ResourceQueryBuilder/build()
io/corbel/iam/service/DefaultUserServiceTest/testCountUsersByDomain()#io/corbel/lib/queries/builder/ResourceQueryBuilder/ResourceQueryBuilder()
io/corbel/iam/service/DefaultUserServiceTest/testCountUsersByDomain()#org/mockito/Mockito/only()
io/corbel/iam/service/DefaultUserServiceTest/testCountUsersByDomain()#org/mockito/Matchers/eq(T)
io/corbel/iam/service/DefaultUserServiceTest/testCountUsersByDomain()#org/mockito/Mockito/verify(T,org.mockito.verification.VerificationMode)
io/corbel/iam/service/DefaultUserServiceTest/testCountUsersByDomain()#io/corbel/lib/queries/builder/ResourceQueryBuilder/add(java.lang.String,java.lang.String)
io/corbel/iam/service/DefaultUserServiceTest/testCountUsersByDomain()#io/corbel/iam/service/DefaultUserService/countUsersByDomain(java.lang.String,io.corbel.lib.queries.request.ResourceQuery)
io/corbel/iam/service/DefaultUserServiceTest/testCountUsersByDomain()#io/corbel/lib/queries/mongo/repository/GenericFindRepository/count(io.corbel.lib.queries.request.ResourceQuery)
io/corbel/iam/service/DefaultUserServiceTest/createUser()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/service/DefaultUserServiceTest/createUser()#org/mockito/Mockito/when(T)
io/corbel/iam/service/DefaultUserServiceTest/createUser()#org/mockito/Mockito/verify(T)
io/corbel/iam/service/DefaultUserServiceTest/createUser()#io/corbel/iam/service/DefaultUserService/create(java.lang.String,io.corbel.iam.model.User)
io/corbel/iam/service/DefaultUserServiceTest/createUser()#org/springframework/data/repository/CrudRepository/save(S)
io/corbel/iam/service/DefaultUserServiceTest/createUser()#io/corbel/iam/service/EventsService/sendUserCreatedEvent(io.corbel.iam.model.User)
io/corbel/iam/service/DefaultUserServiceTest/testSendMailResetPasswordWithInexistentUser()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/service/DefaultUserServiceTest/testSendMailResetPasswordWithInexistentUser()#org/mockito/Mockito/verify(T,org.mockito.verification.VerificationMode)
io/corbel/iam/service/DefaultUserServiceTest/testSendMailResetPasswordWithInexistentUser()#org/mockito/Mockito/when(T)
io/corbel/iam/service/DefaultUserServiceTest/testSendMailResetPasswordWithInexistentUser()#io/corbel/iam/service/DefaultUserService/sendMailResetPassword(java.lang.String,java.lang.String,java.lang.String)
io/corbel/iam/service/DefaultUserServiceTest/testSendMailResetPasswordWithInexistentUser()#org/mockito/Mockito/never()
io/corbel/iam/service/DefaultUserServiceTest/testSendMailResetPasswordWithInexistentUser()#io/corbel/iam/service/MailService/sendMailResetPassword(java.lang.String,io.corbel.iam.model.User)
io/corbel/iam/service/DefaultUserServiceTest/testSendMailResetPasswordWithInexistentUser()#io/corbel/iam/repository/UserRepository/findByDomainAndEmail(java.lang.String,java.lang.String)
io/corbel/iam/service/DefaultUserServiceTest/testSendMailResetPasswordWithInexistentUser()#org/mockito/Matchers/any()
io/corbel/iam/service/DefaultUserServiceTest/testFindByDomainAndEmail()#org/mockito/Mockito/verify(T)
io/corbel/iam/service/DefaultUserServiceTest/testFindByDomainAndEmail()#io/corbel/iam/repository/UserRepository/findByDomainAndEmail(java.lang.String,java.lang.String)
io/corbel/iam/service/DefaultUserServiceTest/testFindByDomainAndEmail()#io/corbel/iam/service/DefaultUserService/findByDomainAndEmail(java.lang.String,java.lang.String)
io/corbel/iam/service/DefaultUserServiceTest/testFindByDomainAndUsername()#org/mockito/Mockito/verify(T)
io/corbel/iam/service/DefaultUserServiceTest/testFindByDomainAndUsername()#io/corbel/iam/service/DefaultUserService/findByDomainAndUsername(java.lang.String,java.lang.String)
io/corbel/iam/service/DefaultUserServiceTest/testFindByDomainAndUsername()#io/corbel/iam/repository/UserRepository/findByUsernameAndDomain(java.lang.String,java.lang.String)
io/corbel/iam/service/DefaultUserServiceTest/testGetSession()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/service/DefaultUserServiceTest/testGetSession()#io/corbel/iam/service/DefaultUserService/getSession(java.lang.String)
io/corbel/iam/service/DefaultUserServiceTest/testGetSession()#org/mockito/Mockito/when(T)
io/corbel/iam/service/DefaultUserServiceTest/testGetSession()#io/corbel/iam/model/UserToken/UserToken()
io/corbel/iam/service/DefaultUserServiceTest/testGetSession()#io/corbel/iam/model/UserToken/setToken(java.lang.String)
io/corbel/iam/service/DefaultUserServiceTest/testGetSession()#org/fest/assertions/api/Assertions/assertThat(T)
io/corbel/iam/service/DefaultUserServiceTest/testGetSession()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/iam/service/DefaultUserServiceTest/testGetSession()#io/corbel/iam/repository/UserTokenRepository/findByToken(java.lang.String)
io/corbel/iam/service/DefaultUserServiceTest/testAddScopes()#io/corbel/iam/repository/HasScopesRepository/addScopes(ID,java.lang.String[])
io/corbel/iam/service/DefaultUserServiceTest/testAddScopes()#org/mockito/Mockito/verify(T)
io/corbel/iam/service/DefaultUserServiceTest/testAddScopes()#io/corbel/iam/service/DefaultUserService/addScopes(java.lang.String,java.lang.String[])
io/corbel/iam/service/DefaultUserServiceTest/testGetUserProfileException()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/service/DefaultUserServiceTest/testGetUserProfileException()#org/mockito/Mockito/when(T)
io/corbel/iam/service/DefaultUserServiceTest/testGetUserProfileException()#io/corbel/iam/service/DefaultUserService/getUserProfile(io.corbel.iam.model.User,java.util.Set)
io/corbel/iam/service/DefaultUserServiceTest/testGetUserProfileException()#io/corbel/iam/repository/UserRepository/findById(java.lang.String)
io/corbel/iam/service/DefaultUserServiceTest/testGetUserProfileException()#io/corbel/iam/model/User/setDomain(java.lang.String)
io/corbel/iam/service/DefaultUserServiceTest/testGetUserProfileException()#java/util/HashSet/HashSet(java.util.Collection)
io/corbel/iam/service/DefaultUserServiceTest/testGetUserProfileException()#io/corbel/iam/model/User/User()
io/corbel/iam/service/DefaultUserServiceTest/testGetUserProfileException()#java/util/Arrays/asList(T[])
io/corbel/iam/service/DefaultUserServiceTest/testSendMailResetPassword()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/service/DefaultUserServiceTest/testSendMailResetPassword()#io/corbel/iam/model/User/User()
io/corbel/iam/service/DefaultUserServiceTest/testSendMailResetPassword()#io/corbel/iam/service/DefaultUserService/sendMailResetPassword(java.lang.String,java.lang.String,java.lang.String)
io/corbel/iam/service/DefaultUserServiceTest/testSendMailResetPassword()#io/corbel/iam/service/MailService/sendMailResetPassword(java.lang.String,io.corbel.iam.model.User)
io/corbel/iam/service/DefaultUserServiceTest/testSendMailResetPassword()#io/corbel/iam/repository/UserRepository/findByDomainAndEmail(java.lang.String,java.lang.String)
io/corbel/iam/service/DefaultUserServiceTest/testSendMailResetPassword()#org/mockito/Mockito/when(T)
io/corbel/iam/service/DefaultUserServiceTest/testSendMailResetPassword()#io/corbel/iam/model/Entity/setId(java.lang.String)
io/corbel/iam/service/DefaultUserServiceTest/testSendMailResetPassword()#org/mockito/Mockito/verifyNoMoreInteractions(java.lang.Object[])
io/corbel/iam/service/DefaultUserServiceTest/testSendMailResetPassword()#org/mockito/Mockito/verify(T)
io/corbel/iam/service/DefaultUserServiceTest/testSignoutAllNoTokens()#io/corbel/iam/service/RefreshTokenService/invalidateRefreshToken(java.lang.String)
io/corbel/iam/service/DefaultUserServiceTest/testSignoutAllNoTokens()#org/mockito/Mockito/verifyNoMoreInteractions(java.lang.Object[])
io/corbel/iam/service/DefaultUserServiceTest/testSignoutAllNoTokens()#org/mockito/Mockito/verify(T)
io/corbel/iam/service/DefaultUserServiceTest/testSignoutAllNoTokens()#io/corbel/iam/repository/UserTokenRepository/findByUserId(java.lang.String)
io/corbel/iam/service/DefaultUserServiceTest/testSignoutAllNoTokens()#io/corbel/iam/service/UserService/signOut(java.lang.String)
io/corbel/iam/service/DefaultUserServiceTest/testSignoutAll()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/service/DefaultUserServiceTest/testSignoutAll()#org/mockito/Mockito/when(T)
io/corbel/iam/service/DefaultUserServiceTest/testSignoutAll()#io/corbel/lib/ws/auth/repository/AuthorizationRulesRepository/deleteByToken(java.lang.String)
io/corbel/iam/service/DefaultUserServiceTest/testSignoutAll()#io/corbel/iam/model/UserToken/UserToken()
io/corbel/iam/service/DefaultUserServiceTest/testSignoutAll()#java/util/Arrays/asList(T[])
io/corbel/iam/service/DefaultUserServiceTest/testSignoutAll()#io/corbel/iam/model/UserToken/setToken(java.lang.String)
io/corbel/iam/service/DefaultUserServiceTest/testSignoutAll()#io/corbel/iam/service/RefreshTokenService/invalidateRefreshToken(java.lang.String)
io/corbel/iam/service/DefaultUserServiceTest/testSignoutAll()#org/springframework/data/repository/CrudRepository/delete(ID)
io/corbel/iam/service/DefaultUserServiceTest/testSignoutAll()#org/mockito/Mockito/verify(T)
io/corbel/iam/service/DefaultUserServiceTest/testSignoutAll()#io/corbel/iam/repository/UserTokenRepository/findByUserId(java.lang.String)
io/corbel/iam/service/DefaultUserServiceTest/testSignoutAll()#io/corbel/iam/service/UserService/signOut(java.lang.String)
io/corbel/resources/rem/service/DefaultResmiServiceTest/minTest()#io/corbel/resources/rem/model/ResourceUri/ResourceUri(java.lang.String,java.lang.String)
io/corbel/resources/rem/service/DefaultResmiServiceTest/minTest()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/service/DefaultResmiServiceTest/minTest()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/service/DefaultResmiServiceTest/minTest()#io/corbel/resources/rem/request/CollectionParameters/getAggregation()
io/corbel/resources/rem/service/DefaultResmiServiceTest/minTest()#io/corbel/resources/rem/request/CollectionParameters/getSearch()
io/corbel/resources/rem/service/DefaultResmiServiceTest/minTest()#io/corbel/resources/rem/dao/ResmiDao/min(io.corbel.resources.rem.model.ResourceUri,java.util.List,java.lang.String)
io/corbel/resources/rem/service/DefaultResmiServiceTest/minTest()#com/google/gson/JsonObject/JsonObject()
io/corbel/resources/rem/service/DefaultResmiServiceTest/minTest()#java/util/Optional/empty()
io/corbel/resources/rem/service/DefaultResmiServiceTest/minTest()#org/fest/assertions/api/Assertions/assertThat(T)
io/corbel/resources/rem/service/DefaultResmiServiceTest/minTest()#org/mockito/Matchers/eq(T)
io/corbel/resources/rem/service/DefaultResmiServiceTest/minTest()#io/corbel/lib/queries/request/Min/Min(java.lang.String)
io/corbel/resources/rem/service/DefaultResmiServiceTest/minTest()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/resources/rem/service/DefaultResmiServiceTest/minTest()#java/util/Optional/of(T)
io/corbel/resources/rem/service/DefaultResmiServiceTest/minTest()#io/corbel/resources/rem/service/DefaultResmiService/aggregate(io.corbel.resources.rem.model.ResourceUri,io.corbel.resources.rem.request.CollectionParameters)
io/corbel/resources/rem/service/DefaultResmiServiceTest/maxTest()#io/corbel/resources/rem/model/ResourceUri/ResourceUri(java.lang.String,java.lang.String)
io/corbel/resources/rem/service/DefaultResmiServiceTest/maxTest()#io/corbel/lib/queries/request/Max/Max(java.lang.String)
io/corbel/resources/rem/service/DefaultResmiServiceTest/maxTest()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/service/DefaultResmiServiceTest/maxTest()#io/corbel/resources/rem/request/CollectionParameters/getAggregation()
io/corbel/resources/rem/service/DefaultResmiServiceTest/maxTest()#io/corbel/resources/rem/request/CollectionParameters/getSearch()
io/corbel/resources/rem/service/DefaultResmiServiceTest/maxTest()#com/google/gson/JsonObject/JsonObject()
io/corbel/resources/rem/service/DefaultResmiServiceTest/maxTest()#java/util/Optional/empty()
io/corbel/resources/rem/service/DefaultResmiServiceTest/maxTest()#org/fest/assertions/api/Assertions/assertThat(T)
io/corbel/resources/rem/service/DefaultResmiServiceTest/maxTest()#org/mockito/Matchers/eq(T)
io/corbel/resources/rem/service/DefaultResmiServiceTest/maxTest()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/resources/rem/service/DefaultResmiServiceTest/maxTest()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/service/DefaultResmiServiceTest/maxTest()#io/corbel/resources/rem/dao/ResmiDao/max(io.corbel.resources.rem.model.ResourceUri,java.util.List,java.lang.String)
io/corbel/resources/rem/service/DefaultResmiServiceTest/maxTest()#java/util/Optional/of(T)
io/corbel/resources/rem/service/DefaultResmiServiceTest/maxTest()#io/corbel/resources/rem/service/DefaultResmiService/aggregate(io.corbel.resources.rem.model.ResourceUri,io.corbel.resources.rem.request.CollectionParameters)
io/corbel/resources/rem/service/DefaultResmiServiceTest/countCollectionTest()#io/corbel/resources/rem/model/ResourceUri/ResourceUri(java.lang.String,java.lang.String)
io/corbel/resources/rem/service/DefaultResmiServiceTest/countCollectionTest()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/service/DefaultResmiServiceTest/countCollectionTest()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/service/DefaultResmiServiceTest/countCollectionTest()#io/corbel/resources/rem/request/CollectionParameters/getAggregation()
io/corbel/resources/rem/service/DefaultResmiServiceTest/countCollectionTest()#io/corbel/resources/rem/request/CollectionParameters/getSearch()
io/corbel/resources/rem/service/DefaultResmiServiceTest/countCollectionTest()#com/google/gson/JsonObject/JsonObject()
io/corbel/resources/rem/service/DefaultResmiServiceTest/countCollectionTest()#io/corbel/lib/queries/request/Count/Count(java.lang.String)
io/corbel/resources/rem/service/DefaultResmiServiceTest/countCollectionTest()#java/util/Optional/empty()
io/corbel/resources/rem/service/DefaultResmiServiceTest/countCollectionTest()#org/fest/assertions/api/Assertions/assertThat(T)
io/corbel/resources/rem/service/DefaultResmiServiceTest/countCollectionTest()#org/mockito/Matchers/eq(T)
io/corbel/resources/rem/service/DefaultResmiServiceTest/countCollectionTest()#java/util/Optional/of(T)
io/corbel/resources/rem/service/DefaultResmiServiceTest/countCollectionTest()#io/corbel/resources/rem/service/DefaultResmiService/aggregate(io.corbel.resources.rem.model.ResourceUri,io.corbel.resources.rem.request.CollectionParameters)
io/corbel/resources/rem/service/DefaultResmiServiceTest/countCollectionTest()#io/corbel/resources/rem/dao/ResmiDao/count(io.corbel.resources.rem.model.ResourceUri,java.util.List)
io/corbel/resources/rem/service/DefaultResmiServiceTest/countCollectionTest()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/resources/rem/service/DefaultResmiServiceTest/findRelationTest()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/service/DefaultResmiServiceTest/findRelationTest()#io/corbel/resources/rem/model/ResourceUri/ResourceUri(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
io/corbel/resources/rem/service/DefaultResmiServiceTest/findRelationTest()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/service/DefaultResmiServiceTest/findRelationTest()#io/corbel/resources/rem/service/DefaultResmiService/findRelation(io.corbel.resources.rem.model.ResourceUri,java.util.Optional)
io/corbel/resources/rem/service/DefaultResmiServiceTest/findRelationTest()#java/util/Optional/of(T)
io/corbel/resources/rem/service/DefaultResmiServiceTest/findRelationTest()#io/corbel/resources/rem/request/RelationParameters/getPredicateResource()
io/corbel/resources/rem/service/DefaultResmiServiceTest/findRelationTest()#io/corbel/resources/rem/request/CollectionParameters/getSearch()
io/corbel/resources/rem/service/DefaultResmiServiceTest/findRelationTest()#com/google/gson/JsonObject/JsonObject()
io/corbel/resources/rem/service/DefaultResmiServiceTest/findRelationTest()#org/mockito/Matchers/eq(T)
io/corbel/resources/rem/service/DefaultResmiServiceTest/findRelationTest()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/resources/rem/service/DefaultResmiServiceTest/findRelationTest()#org/mockito/Matchers/any()
io/corbel/resources/rem/service/DefaultResmiServiceTest/findRelationTest()#java/util/Optional/empty()
io/corbel/resources/rem/service/DefaultResmiServiceTest/findRelationTest()#io/corbel/resources/rem/dao/MongoResmiDao/findRelation(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,java.util.Optional,java.util.Optional,java.util.Optional)
io/corbel/resources/rem/service/DefaultResmiServiceTest/findRelationTest()#org/fest/assertions/api/Assertions/assertThat(T)
io/corbel/resources/rem/service/DefaultResmiServiceTest/createRelationTest()#io/corbel/resources/rem/service/DefaultResmiService/upsertRelation(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject)
io/corbel/resources/rem/service/DefaultResmiServiceTest/createRelationTest()#io/corbel/resources/rem/model/ResourceUri/ResourceUri(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
io/corbel/resources/rem/service/DefaultResmiServiceTest/createRelationTest()#org/mockito/Mockito/verify(T)
io/corbel/resources/rem/service/DefaultResmiServiceTest/createRelationTest()#io/corbel/resources/rem/dao/ResmiDao/upsertRelation(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject)
io/corbel/resources/rem/service/DefaultResmiServiceTest/createRelationTest()#org/fest/assertions/api/AbstractAssert/isNotNull()
io/corbel/resources/rem/service/DefaultResmiServiceTest/createRelationTest()#com/google/gson/JsonObject/JsonObject()
io/corbel/resources/rem/service/DefaultResmiServiceTest/createRelationTest()#org/fest/assertions/api/Assertions/assertThat(T)
io/corbel/resources/rem/service/DefaultResmiServiceTest/createRelationTest()#com/google/gson/JsonObject/get(java.lang.String)
io/corbel/resources/rem/service/DefaultResmiServiceTest/createRelationWithUnderscoreTest()#io/corbel/resources/rem/service/DefaultResmiService/upsertRelation(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject)
io/corbel/resources/rem/service/DefaultResmiServiceTest/createRelationWithUnderscoreTest()#io/corbel/resources/rem/model/ResourceUri/ResourceUri(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
io/corbel/resources/rem/service/DefaultResmiServiceTest/createRelationWithUnderscoreTest()#com/google/gson/JsonPrimitive/JsonPrimitive(java.lang.String)
io/corbel/resources/rem/service/DefaultResmiServiceTest/createRelationWithUnderscoreTest()#com/google/gson/JsonObject/JsonObject()
io/corbel/resources/rem/service/DefaultResmiServiceTest/createRelationWithUnderscoreTest()#com/google/gson/JsonObject/add(java.lang.String,com.google.gson.JsonElement)
io/corbel/resources/rem/service/DefaultResmiServiceTest/findResourceByIdTest()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/service/DefaultResmiServiceTest/findResourceByIdTest()#io/corbel/resources/rem/model/ResourceUri/ResourceUri(java.lang.String,java.lang.String,java.lang.String)
io/corbel/resources/rem/service/DefaultResmiServiceTest/findResourceByIdTest()#io/corbel/resources/rem/dao/MongoResmiDao/findResource(io.corbel.resources.rem.model.ResourceUri)
io/corbel/resources/rem/service/DefaultResmiServiceTest/findResourceByIdTest()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/service/DefaultResmiServiceTest/findResourceByIdTest()#io/corbel/resources/rem/request/CollectionParameters/getSearch()
io/corbel/resources/rem/service/DefaultResmiServiceTest/findResourceByIdTest()#com/google/gson/JsonObject/JsonObject()
io/corbel/resources/rem/service/DefaultResmiServiceTest/findResourceByIdTest()#java/util/Optional/empty()
io/corbel/resources/rem/service/DefaultResmiServiceTest/findResourceByIdTest()#org/fest/assertions/api/Assertions/assertThat(T)
io/corbel/resources/rem/service/DefaultResmiServiceTest/findResourceByIdTest()#io/corbel/resources/rem/service/DefaultResmiService/findResource(io.corbel.resources.rem.model.ResourceUri)
io/corbel/resources/rem/service/DefaultResmiServiceTest/findResourceByIdTest()#org/mockito/Matchers/eq(T)
io/corbel/resources/rem/service/DefaultResmiServiceTest/findResourceByIdTest()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/resources/rem/service/DefaultResmiServiceTest/findTest()#io/corbel/resources/rem/model/ResourceUri/ResourceUri(java.lang.String,java.lang.String)
io/corbel/resources/rem/service/DefaultResmiServiceTest/findTest()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/service/DefaultResmiServiceTest/findTest()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/service/DefaultResmiServiceTest/findTest()#io/corbel/resources/rem/service/DefaultResmiService/findCollection(io.corbel.resources.rem.model.ResourceUri,java.util.Optional)
io/corbel/resources/rem/service/DefaultResmiServiceTest/findTest()#java/util/Optional/of(T)
io/corbel/resources/rem/service/DefaultResmiServiceTest/findTest()#org/fest/assertions/api/Assertions/assertThat(java.lang.Iterable)
io/corbel/resources/rem/service/DefaultResmiServiceTest/findTest()#io/corbel/resources/rem/request/CollectionParameters/getSearch()
io/corbel/resources/rem/service/DefaultResmiServiceTest/findTest()#com/google/gson/JsonArray/JsonArray()
io/corbel/resources/rem/service/DefaultResmiServiceTest/findTest()#org/mockito/Matchers/eq(T)
io/corbel/resources/rem/service/DefaultResmiServiceTest/findTest()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/resources/rem/service/DefaultResmiServiceTest/findTest()#org/mockito/Matchers/any()
io/corbel/resources/rem/service/DefaultResmiServiceTest/findTest()#java/util/Optional/empty()
io/corbel/resources/rem/service/DefaultResmiServiceTest/findTest()#io/corbel/resources/rem/dao/MongoResmiDao/findCollection(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,java.util.Optional,java.util.Optional,java.util.Optional)
io/corbel/resources/rem/service/DefaultResmiServiceTest/ensureCollectionIndexTest()#io/corbel/resources/rem/model/ResourceUri/ResourceUri(java.lang.String,java.lang.String)
io/corbel/resources/rem/service/DefaultResmiServiceTest/ensureCollectionIndexTest()#io/corbel/resources/rem/service/DefaultResmiService/ensureIndex(io.corbel.resources.rem.model.ResourceUri,org.springframework.data.mongodb.core.index.IndexDefinition)
io/corbel/resources/rem/service/DefaultResmiServiceTest/ensureCollectionIndexTest()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/resources/rem/service/DefaultResmiServiceTest/ensureCollectionIndexTest()#org/mockito/Mockito/verify(T)
io/corbel/resources/rem/service/DefaultResmiServiceTest/ensureCollectionIndexTest()#io/corbel/resources/rem/dao/MongoResmiDao/ensureIndex(io.corbel.resources.rem.model.ResourceUri,org.springframework.data.mongodb.core.index.IndexDefinition)
io/corbel/resources/rem/service/DefaultResmiServiceTest/ensureRelationIndexTest()#io/corbel/resources/rem/model/ResourceUri/ResourceUri(java.lang.String,java.lang.String)
io/corbel/resources/rem/service/DefaultResmiServiceTest/ensureRelationIndexTest()#io/corbel/resources/rem/service/DefaultResmiService/ensureIndex(io.corbel.resources.rem.model.ResourceUri,org.springframework.data.mongodb.core.index.IndexDefinition)
io/corbel/resources/rem/service/DefaultResmiServiceTest/ensureRelationIndexTest()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/resources/rem/service/DefaultResmiServiceTest/ensureRelationIndexTest()#org/mockito/Mockito/verify(T)
io/corbel/resources/rem/service/DefaultResmiServiceTest/ensureRelationIndexTest()#io/corbel/resources/rem/dao/MongoResmiDao/ensureIndex(io.corbel.resources.rem.model.ResourceUri,org.springframework.data.mongodb.core.index.IndexDefinition)
io/corbel/resources/rem/service/DefaultResmiServiceTest/ensureRelationIndexTest()#io/corbel/resources/rem/model/ResourceUri/setRelation(java.lang.String)
io/corbel/resources/rem/service/DefaultResmiServiceTest/averageTest()#io/corbel/resources/rem/model/ResourceUri/ResourceUri(java.lang.String,java.lang.String)
io/corbel/resources/rem/service/DefaultResmiServiceTest/averageTest()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/service/DefaultResmiServiceTest/averageTest()#io/corbel/resources/rem/request/CollectionParameters/getAggregation()
io/corbel/resources/rem/service/DefaultResmiServiceTest/averageTest()#com/google/gson/JsonObject/JsonObject()
io/corbel/resources/rem/service/DefaultResmiServiceTest/averageTest()#java/util/Optional/empty()
io/corbel/resources/rem/service/DefaultResmiServiceTest/averageTest()#org/fest/assertions/api/Assertions/assertThat(T)
io/corbel/resources/rem/service/DefaultResmiServiceTest/averageTest()#org/mockito/Matchers/eq(T)
io/corbel/resources/rem/service/DefaultResmiServiceTest/averageTest()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/resources/rem/service/DefaultResmiServiceTest/averageTest()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/service/DefaultResmiServiceTest/averageTest()#io/corbel/resources/rem/dao/ResmiDao/average(io.corbel.resources.rem.model.ResourceUri,java.util.List,java.lang.String)
io/corbel/resources/rem/service/DefaultResmiServiceTest/averageTest()#java/util/Optional/of(T)
io/corbel/resources/rem/service/DefaultResmiServiceTest/averageTest()#io/corbel/resources/rem/service/DefaultResmiService/aggregate(io.corbel.resources.rem.model.ResourceUri,io.corbel.resources.rem.request.CollectionParameters)
io/corbel/resources/rem/service/DefaultResmiServiceTest/averageTest()#io/corbel/resources/rem/request/CollectionParameters/getSearch()
io/corbel/resources/rem/service/DefaultResmiServiceTest/averageTest()#io/corbel/lib/queries/request/Average/Average(java.lang.String)
io/corbel/resources/rem/service/DefaultResmiServiceTest/deleteRelationTest()#io/corbel/resources/rem/model/ResourceUri/ResourceUri(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
io/corbel/resources/rem/service/DefaultResmiServiceTest/deleteRelationTest()#java/util/Optional/empty()
io/corbel/resources/rem/service/DefaultResmiServiceTest/deleteRelationTest()#io/corbel/resources/rem/service/DefaultResmiService/deleteRelation(io.corbel.resources.rem.model.ResourceUri,java.util.Optional)
io/corbel/resources/rem/service/DefaultResmiServiceTest/deleteRelationTest()#org/mockito/Mockito/verify(T)
io/corbel/resources/rem/service/DefaultResmiServiceTest/deleteRelationTest()#io/corbel/resources/rem/dao/ResmiDao/deleteRelation(io.corbel.resources.rem.model.ResourceUri,java.util.Optional)
io/corbel/resources/rem/service/DefaultResmiServiceTest/deleteResourceByIdTest()#io/corbel/resources/rem/model/ResourceUri/ResourceUri(java.lang.String,java.lang.String,java.lang.String)
io/corbel/resources/rem/service/DefaultResmiServiceTest/deleteResourceByIdTest()#io/corbel/resources/rem/service/DefaultResmiService/deleteResource(io.corbel.resources.rem.model.ResourceUri)
io/corbel/resources/rem/service/DefaultResmiServiceTest/deleteResourceByIdTest()#org/mockito/Mockito/verify(T)
io/corbel/resources/rem/service/DefaultResmiServiceTest/deleteResourceByIdTest()#io/corbel/resources/rem/dao/ResmiDao/deleteResource(io.corbel.resources.rem.model.ResourceUri)
io/corbel/resources/rem/service/DefaultResmiServiceTest/saveResourceTest()#io/corbel/resources/rem/model/ResourceUri/ResourceUri(java.lang.String,java.lang.String)
io/corbel/resources/rem/service/DefaultResmiServiceTest/saveResourceTest()#org/mockito/Mockito/verify(T)
io/corbel/resources/rem/service/DefaultResmiServiceTest/saveResourceTest()#java/util/Optional/of(T)
io/corbel/resources/rem/service/DefaultResmiServiceTest/saveResourceTest()#org/fest/assertions/api/AbstractAssert/isNotNull()
io/corbel/resources/rem/service/DefaultResmiServiceTest/saveResourceTest()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/resources/rem/service/DefaultResmiServiceTest/saveResourceTest()#com/google/gson/JsonObject/JsonObject()
io/corbel/resources/rem/service/DefaultResmiServiceTest/saveResourceTest()#org/fest/assertions/api/StringAssert/startsWith(java.lang.String)
io/corbel/resources/rem/service/DefaultResmiServiceTest/saveResourceTest()#io/corbel/resources/rem/service/DefaultResmiService/saveResource(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject,java.util.Optional)
io/corbel/resources/rem/service/DefaultResmiServiceTest/saveResourceTest()#org/fest/assertions/api/Assertions/assertThat(T)
io/corbel/resources/rem/service/DefaultResmiServiceTest/saveResourceTest()#io/corbel/resources/rem/dao/ResmiDao/saveResource(io.corbel.resources.rem.model.ResourceUri,java.lang.Object)
io/corbel/resources/rem/service/DefaultResmiServiceTest/saveResourceTest()#com/google/gson/JsonElement/getAsString()
io/corbel/resources/rem/service/DefaultResmiServiceTest/saveResourceTest()#com/google/gson/JsonObject/get(java.lang.String)
io/corbel/resources/rem/service/DefaultResmiServiceTest/saveResourceWithUnderscoreTest()#io/corbel/resources/rem/model/ResourceUri/ResourceUri(java.lang.String,java.lang.String)
io/corbel/resources/rem/service/DefaultResmiServiceTest/saveResourceWithUnderscoreTest()#java/util/Optional/of(T)
io/corbel/resources/rem/service/DefaultResmiServiceTest/saveResourceWithUnderscoreTest()#com/google/gson/JsonPrimitive/JsonPrimitive(java.lang.String)
io/corbel/resources/rem/service/DefaultResmiServiceTest/saveResourceWithUnderscoreTest()#com/google/gson/JsonObject/JsonObject()
io/corbel/resources/rem/service/DefaultResmiServiceTest/saveResourceWithUnderscoreTest()#io/corbel/resources/rem/service/DefaultResmiService/saveResource(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject,java.util.Optional)
io/corbel/resources/rem/service/DefaultResmiServiceTest/saveResourceWithUnderscoreTest()#com/google/gson/JsonObject/add(java.lang.String,com.google.gson.JsonElement)
io/corbel/resources/rem/service/DefaultResmiServiceTest/upsertWithUnderscoreTest()#io/corbel/resources/rem/model/ResourceUri/ResourceUri(java.lang.String,java.lang.String,java.lang.String)
io/corbel/resources/rem/service/DefaultResmiServiceTest/upsertWithUnderscoreTest()#io/corbel/resources/rem/service/DefaultResmiService/updateResource(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject)
io/corbel/resources/rem/service/DefaultResmiServiceTest/upsertWithUnderscoreTest()#com/google/gson/JsonPrimitive/JsonPrimitive(java.lang.String)
io/corbel/resources/rem/service/DefaultResmiServiceTest/upsertWithUnderscoreTest()#com/google/gson/JsonObject/JsonObject()
io/corbel/resources/rem/service/DefaultResmiServiceTest/upsertWithUnderscoreTest()#com/google/gson/JsonObject/add(java.lang.String,com.google.gson.JsonElement)
io/corbel/resources/rem/service/DefaultResmiServiceTest/setup()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/service/DefaultResmiServiceTest/setup()#io/corbel/resources/rem/request/CollectionParameters/getPagination()
io/corbel/resources/rem/service/DefaultResmiServiceTest/setup()#java/util/Optional/ofNullable(T)
io/corbel/resources/rem/service/DefaultResmiServiceTest/setup()#io/corbel/resources/rem/request/CollectionParameters/getQueries()
io/corbel/resources/rem/service/DefaultResmiServiceTest/setup()#io/corbel/resources/rem/request/CollectionParameters/getSearch()
io/corbel/resources/rem/service/DefaultResmiServiceTest/setup()#java/util/Optional/empty()
io/corbel/resources/rem/service/DefaultResmiServiceTest/setup()#org/mockito/Mockito/reset(T[])
io/corbel/resources/rem/service/DefaultResmiServiceTest/setup()#java/time/Clock/systemUTC()
io/corbel/resources/rem/service/DefaultResmiServiceTest/setup()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/service/DefaultResmiServiceTest/setup()#io/corbel/resources/rem/request/CollectionParameters/getSort()
io/corbel/resources/rem/service/DefaultResmiServiceTest/setup()#io/corbel/resources/rem/service/DefaultResmiService/DefaultResmiService(io.corbel.resources.rem.dao.MongoResmiDao,java.time.Clock)
io/corbel/resources/rem/service/DefaultResmiServiceTest/setup()#io/corbel/resources/rem/request/CollectionParameters/getAggregation()
io/corbel/resources/rem/service/DefaultResmiServiceTest/moveElementTest()#org/mockito/Mockito/verify(T)
io/corbel/resources/rem/service/DefaultResmiServiceTest/moveElementTest()#io/corbel/resources/rem/dao/RelationMoveOperation/RelationMoveOperation(long)
io/corbel/resources/rem/service/DefaultResmiServiceTest/moveElementTest()#io/corbel/resources/rem/dao/ResmiDao/moveRelation(io.corbel.resources.rem.model.ResourceUri,io.corbel.resources.rem.dao.RelationMoveOperation)
io/corbel/resources/rem/service/DefaultResmiServiceTest/moveElementTest()#io/corbel/resources/rem/model/ResourceUri/ResourceUri(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
io/corbel/resources/rem/service/DefaultResmiServiceTest/moveElementTest()#io/corbel/resources/rem/service/DefaultResmiService/moveRelation(io.corbel.resources.rem.model.ResourceUri,io.corbel.resources.rem.dao.RelationMoveOperation)
io/corbel/resources/rem/service/DefaultResmiServiceTest/countRelationTest()#io/corbel/resources/rem/model/ResourceUri/ResourceUri(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
io/corbel/resources/rem/service/DefaultResmiServiceTest/countRelationTest()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/service/DefaultResmiServiceTest/countRelationTest()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/service/DefaultResmiServiceTest/countRelationTest()#io/corbel/resources/rem/request/CollectionParameters/getAggregation()
io/corbel/resources/rem/service/DefaultResmiServiceTest/countRelationTest()#io/corbel/resources/rem/request/CollectionParameters/getSearch()
io/corbel/resources/rem/service/DefaultResmiServiceTest/countRelationTest()#com/google/gson/JsonObject/JsonObject()
io/corbel/resources/rem/service/DefaultResmiServiceTest/countRelationTest()#io/corbel/lib/queries/request/Count/Count(java.lang.String)
io/corbel/resources/rem/service/DefaultResmiServiceTest/countRelationTest()#java/util/Optional/empty()
io/corbel/resources/rem/service/DefaultResmiServiceTest/countRelationTest()#org/fest/assertions/api/Assertions/assertThat(T)
io/corbel/resources/rem/service/DefaultResmiServiceTest/countRelationTest()#org/mockito/Matchers/eq(T)
io/corbel/resources/rem/service/DefaultResmiServiceTest/countRelationTest()#java/util/Optional/of(T)
io/corbel/resources/rem/service/DefaultResmiServiceTest/countRelationTest()#io/corbel/resources/rem/service/DefaultResmiService/aggregate(io.corbel.resources.rem.model.ResourceUri,io.corbel.resources.rem.request.CollectionParameters)
io/corbel/resources/rem/service/DefaultResmiServiceTest/countRelationTest()#io/corbel/resources/rem/dao/ResmiDao/count(io.corbel.resources.rem.model.ResourceUri,java.util.List)
io/corbel/resources/rem/service/DefaultResmiServiceTest/countRelationTest()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/resources/rem/service/DefaultResmiServiceTest/upsertTest()#io/corbel/resources/rem/model/ResourceUri/ResourceUri(java.lang.String,java.lang.String,java.lang.String)
io/corbel/resources/rem/service/DefaultResmiServiceTest/upsertTest()#org/mockito/Mockito/verify(T)
io/corbel/resources/rem/service/DefaultResmiServiceTest/upsertTest()#io/corbel/resources/rem/service/DefaultResmiService/updateResource(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject)
io/corbel/resources/rem/service/DefaultResmiServiceTest/upsertTest()#org/fest/assertions/api/AbstractAssert/isNotNull()
io/corbel/resources/rem/service/DefaultResmiServiceTest/upsertTest()#com/google/gson/JsonObject/JsonObject()
io/corbel/resources/rem/service/DefaultResmiServiceTest/upsertTest()#io/corbel/resources/rem/dao/ResmiDao/updateResource(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject)
io/corbel/resources/rem/service/DefaultResmiServiceTest/upsertTest()#org/fest/assertions/api/Assertions/assertThat(T)
io/corbel/resources/rem/service/DefaultResmiServiceTest/upsertTest()#com/google/gson/JsonObject/get(java.lang.String)
io/corbel/resources/rem/service/DefaultResmiServiceTest/upsertWithDatesTest()#io/corbel/resources/rem/model/ResourceUri/ResourceUri(java.lang.String,java.lang.String,java.lang.String)
io/corbel/resources/rem/service/DefaultResmiServiceTest/upsertWithDatesTest()#org/fest/assertions/api/LongAssert/isNotEqualTo(long)
io/corbel/resources/rem/service/DefaultResmiServiceTest/upsertWithDatesTest()#org/mockito/Mockito/verify(T)
io/corbel/resources/rem/service/DefaultResmiServiceTest/upsertWithDatesTest()#io/corbel/resources/rem/service/DefaultResmiService/updateResource(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject)
io/corbel/resources/rem/service/DefaultResmiServiceTest/upsertWithDatesTest()#org/fest/assertions/api/AbstractAssert/isNotNull()
io/corbel/resources/rem/service/DefaultResmiServiceTest/upsertWithDatesTest()#com/google/gson/JsonObject/JsonObject()
io/corbel/resources/rem/service/DefaultResmiServiceTest/upsertWithDatesTest()#io/corbel/resources/rem/dao/ResmiDao/updateResource(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject)
io/corbel/resources/rem/service/DefaultResmiServiceTest/upsertWithDatesTest()#org/fest/assertions/api/Assertions/assertThat(T)
io/corbel/resources/rem/service/DefaultResmiServiceTest/upsertWithDatesTest()#org/fest/assertions/api/Assertions/assertThat(long)
io/corbel/resources/rem/service/DefaultResmiServiceTest/upsertWithDatesTest()#com/google/gson/JsonObject/addProperty(java.lang.String,java.lang.Number)
io/corbel/resources/rem/service/DefaultResmiServiceTest/upsertWithDatesTest()#com/google/gson/JsonElement/getAsString()
io/corbel/resources/rem/service/DefaultResmiServiceTest/upsertWithDatesTest()#com/google/gson/JsonObject/get(java.lang.String)
io/corbel/resources/rem/service/DefaultResmiServiceTest/upsertWithDatesTest()#io/corbel/resources/rem/service/DefaultResmiServiceTest/extractMillis(java.lang.String)
io/corbel/resources/rem/service/DefaultResmiServiceTest/extractMillis(java.lang.String)#java/text/DateFormat/parse(java.lang.String)
io/corbel/resources/rem/service/DefaultResmiServiceTest/extractMillis(java.lang.String)#java/lang/String/replace(java.lang.CharSequence,java.lang.CharSequence)
io/corbel/resources/rem/service/DefaultResmiServiceTest/extractMillis(java.lang.String)#java/util/Date/getTime()
io/corbel/iam/service/DefaultEventsService/sendUserAuthenticationEvent(io.corbel.iam.model.User)#io/corbel/iam/model/User/getUsername()
io/corbel/iam/service/DefaultEventsService/sendUserAuthenticationEvent(io.corbel.iam.model.User)#io/corbel/eventbus/service/EventBus/dispatch(io.corbel.eventbus.Event)
io/corbel/iam/service/DefaultEventsService/sendUserAuthenticationEvent(io.corbel.iam.model.User)#io/corbel/event/UserAuthenticationEvent/UserAuthenticationEvent(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Set,java.util.Set)
io/corbel/iam/service/DefaultEventsService/sendUserAuthenticationEvent(io.corbel.iam.model.User)#io/corbel/iam/model/User/getScopes()
io/corbel/iam/service/DefaultEventsService/sendUserAuthenticationEvent(io.corbel.iam.model.User)#io/corbel/iam/model/User/getLastName()
io/corbel/iam/service/DefaultEventsService/sendUserAuthenticationEvent(io.corbel.iam.model.User)#io/corbel/iam/model/User/getDomain()
io/corbel/iam/service/DefaultEventsService/sendUserAuthenticationEvent(io.corbel.iam.model.User)#io/corbel/iam/model/User/getProfileUrl()
io/corbel/iam/service/DefaultEventsService/sendUserAuthenticationEvent(io.corbel.iam.model.User)#io/corbel/iam/model/User/getCountry()
io/corbel/iam/service/DefaultEventsService/sendUserAuthenticationEvent(io.corbel.iam.model.User)#io/corbel/iam/model/User/getPhoneNumber()
io/corbel/iam/service/DefaultEventsService/sendUserAuthenticationEvent(io.corbel.iam.model.User)#io/corbel/iam/model/Entity/getId()
io/corbel/iam/service/DefaultEventsService/sendUserAuthenticationEvent(io.corbel.iam.model.User)#io/corbel/iam/model/User/getProperties()
io/corbel/iam/service/DefaultEventsService/sendUserAuthenticationEvent(io.corbel.iam.model.User)#io/corbel/iam/model/User/getFirstName()
io/corbel/iam/service/DefaultEventsService/sendUserAuthenticationEvent(io.corbel.iam.model.User)#io/corbel/iam/model/User/getGroups()
io/corbel/iam/service/DefaultEventsService/sendUserAuthenticationEvent(io.corbel.iam.model.User)#io/corbel/iam/model/User/getEmail()
io/corbel/iam/service/DefaultEventsService/sendDomainDeletedEvent(java.lang.String)#io/corbel/eventbus/service/EventBus/dispatch(io.corbel.eventbus.Event)
io/corbel/iam/service/DefaultEventsService/sendDomainDeletedEvent(java.lang.String)#io/corbel/event/DomainDeletedEvent/DomainDeletedEvent(java.lang.String)
io/corbel/iam/service/DefaultEventsService/sendDeviceCreateEvent(io.corbel.iam.model.Device)#io/corbel/iam/model/Device/getUserId()
io/corbel/iam/service/DefaultEventsService/sendDeviceCreateEvent(io.corbel.iam.model.Device)#io/corbel/iam/model/Device/getName()
io/corbel/iam/service/DefaultEventsService/sendDeviceCreateEvent(io.corbel.iam.model.Device)#io/corbel/eventbus/service/EventBus/dispatch(io.corbel.eventbus.Event)
io/corbel/iam/service/DefaultEventsService/sendDeviceCreateEvent(io.corbel.iam.model.Device)#io/corbel/iam/model/Device/getUid()
io/corbel/iam/service/DefaultEventsService/sendDeviceCreateEvent(io.corbel.iam.model.Device)#io/corbel/iam/model/Device/getType()
io/corbel/iam/service/DefaultEventsService/sendDeviceCreateEvent(io.corbel.iam.model.Device)#io/corbel/event/DeviceEvent/DeviceEvent(io.corbel.event.DeviceEvent.Type,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
io/corbel/iam/service/DefaultEventsService/sendDeviceCreateEvent(io.corbel.iam.model.Device)#io/corbel/iam/model/Device/getDomain()
io/corbel/iam/service/DefaultEventsService/sendCreateScope(java.lang.String)#io/corbel/event/ScopeUpdateEvent/createScopeEvent(java.lang.String,java.lang.String)
io/corbel/iam/service/DefaultEventsService/sendCreateScope(java.lang.String)#io/corbel/eventbus/service/EventBus/dispatch(io.corbel.eventbus.Event)
io/corbel/iam/service/DefaultEventsService/sendDeviceDeleteEvent(java.lang.String,java.lang.String,java.lang.String)#io/corbel/eventbus/service/EventBus/dispatch(io.corbel.eventbus.Event)
io/corbel/iam/service/DefaultEventsService/sendDeviceDeleteEvent(java.lang.String,java.lang.String,java.lang.String)#io/corbel/event/DeviceEvent/DeviceEvent(io.corbel.event.DeviceEvent.Type,java.lang.String,java.lang.String,java.lang.String)
io/corbel/iam/service/DefaultEventsService/sendClientAuthenticationEvent(java.lang.String,java.lang.String)#io/corbel/eventbus/service/EventBus/dispatch(io.corbel.eventbus.Event)
io/corbel/iam/service/DefaultEventsService/sendClientAuthenticationEvent(java.lang.String,java.lang.String)#io/corbel/event/AuthorizationEvent/clientAuthenticationEvent(java.lang.String,java.lang.String)
io/corbel/iam/service/DefaultEventsService/sendUserCreatedEvent(io.corbel.iam.model.User)#io/corbel/iam/model/User/getUsername()
io/corbel/iam/service/DefaultEventsService/sendUserCreatedEvent(io.corbel.iam.model.User)#io/corbel/eventbus/service/EventBus/dispatch(io.corbel.eventbus.Event)
io/corbel/iam/service/DefaultEventsService/sendUserCreatedEvent(io.corbel.iam.model.User)#io/corbel/iam/model/User/getScopes()
io/corbel/iam/service/DefaultEventsService/sendUserCreatedEvent(io.corbel.iam.model.User)#io/corbel/iam/model/User/getLastName()
io/corbel/iam/service/DefaultEventsService/sendUserCreatedEvent(io.corbel.iam.model.User)#io/corbel/iam/model/User/getDomain()
io/corbel/iam/service/DefaultEventsService/sendUserCreatedEvent(io.corbel.iam.model.User)#io/corbel/iam/model/User/getProfileUrl()
io/corbel/iam/service/DefaultEventsService/sendUserCreatedEvent(io.corbel.iam.model.User)#io/corbel/event/UserCreatedEvent/UserCreatedEvent(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Set,java.util.Set)
io/corbel/iam/service/DefaultEventsService/sendUserCreatedEvent(io.corbel.iam.model.User)#io/corbel/iam/model/User/getCountry()
io/corbel/iam/service/DefaultEventsService/sendUserCreatedEvent(io.corbel.iam.model.User)#io/corbel/iam/model/User/getPhoneNumber()
io/corbel/iam/service/DefaultEventsService/sendUserCreatedEvent(io.corbel.iam.model.User)#io/corbel/iam/model/Entity/getId()
io/corbel/iam/service/DefaultEventsService/sendUserCreatedEvent(io.corbel.iam.model.User)#io/corbel/iam/model/User/getProperties()
io/corbel/iam/service/DefaultEventsService/sendUserCreatedEvent(io.corbel.iam.model.User)#io/corbel/iam/model/User/getFirstName()
io/corbel/iam/service/DefaultEventsService/sendUserCreatedEvent(io.corbel.iam.model.User)#io/corbel/iam/model/User/getGroups()
io/corbel/iam/service/DefaultEventsService/sendUserCreatedEvent(io.corbel.iam.model.User)#io/corbel/iam/model/User/getEmail()
io/corbel/iam/service/DefaultEventsService/sendUserDeletedEvent(io.corbel.iam.model.User,java.lang.String)#io/corbel/iam/model/User/getEmail()
io/corbel/iam/service/DefaultEventsService/sendUserDeletedEvent(io.corbel.iam.model.User,java.lang.String)#io/corbel/eventbus/service/EventBus/dispatch(io.corbel.eventbus.Event)
io/corbel/iam/service/DefaultEventsService/sendUserDeletedEvent(io.corbel.iam.model.User,java.lang.String)#io/corbel/iam/model/User/getLastName()
io/corbel/iam/service/DefaultEventsService/sendUserDeletedEvent(io.corbel.iam.model.User,java.lang.String)#io/corbel/event/UserDeletedEvent/UserDeletedEvent(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
io/corbel/iam/service/DefaultEventsService/sendUserDeletedEvent(io.corbel.iam.model.User,java.lang.String)#io/corbel/iam/model/Entity/getId()
io/corbel/iam/service/DefaultEventsService/sendUserDeletedEvent(io.corbel.iam.model.User,java.lang.String)#io/corbel/iam/model/User/getFirstName()
io/corbel/iam/service/DefaultEventsService/sendNotificationEvent(java.lang.String,java.lang.String,java.lang.String,java.util.Map)#io/corbel/eventbus/service/EventBus/dispatch(io.corbel.eventbus.Event)
io/corbel/iam/service/DefaultEventsService/sendNotificationEvent(java.lang.String,java.lang.String,java.lang.String,java.util.Map)#io/corbel/event/NotificationEvent/setProperties(java.util.Map)
io/corbel/iam/service/DefaultEventsService/sendNotificationEvent(java.lang.String,java.lang.String,java.lang.String,java.util.Map)#io/corbel/event/NotificationEvent/NotificationEvent(java.lang.String,java.lang.String,java.lang.String)
io/corbel/iam/service/DefaultEventsService/sendNotificationEvent(java.lang.String,java.lang.String,java.lang.String,java.util.Map)#org/slf4j/Logger/info(java.lang.String,java.lang.Object)
io/corbel/iam/service/DefaultEventsService/sendUserModifiedEvent(io.corbel.iam.model.User)#io/corbel/iam/model/User/getUsername()
io/corbel/iam/service/DefaultEventsService/sendUserModifiedEvent(io.corbel.iam.model.User)#io/corbel/event/UserModifiedEvent/UserModifiedEvent(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Set,java.util.Set)
io/corbel/iam/service/DefaultEventsService/sendUserModifiedEvent(io.corbel.iam.model.User)#io/corbel/eventbus/service/EventBus/dispatch(io.corbel.eventbus.Event)
io/corbel/iam/service/DefaultEventsService/sendUserModifiedEvent(io.corbel.iam.model.User)#io/corbel/iam/model/User/getScopes()
io/corbel/iam/service/DefaultEventsService/sendUserModifiedEvent(io.corbel.iam.model.User)#io/corbel/iam/model/User/getLastName()
io/corbel/iam/service/DefaultEventsService/sendUserModifiedEvent(io.corbel.iam.model.User)#io/corbel/iam/model/User/getDomain()
io/corbel/iam/service/DefaultEventsService/sendUserModifiedEvent(io.corbel.iam.model.User)#io/corbel/iam/model/User/getProfileUrl()
io/corbel/iam/service/DefaultEventsService/sendUserModifiedEvent(io.corbel.iam.model.User)#io/corbel/iam/model/User/getCountry()
io/corbel/iam/service/DefaultEventsService/sendUserModifiedEvent(io.corbel.iam.model.User)#io/corbel/iam/model/User/getPhoneNumber()
io/corbel/iam/service/DefaultEventsService/sendUserModifiedEvent(io.corbel.iam.model.User)#io/corbel/iam/model/Entity/getId()
io/corbel/iam/service/DefaultEventsService/sendUserModifiedEvent(io.corbel.iam.model.User)#io/corbel/iam/model/User/getProperties()
io/corbel/iam/service/DefaultEventsService/sendUserModifiedEvent(io.corbel.iam.model.User)#io/corbel/iam/model/User/getFirstName()
io/corbel/iam/service/DefaultEventsService/sendUserModifiedEvent(io.corbel.iam.model.User)#io/corbel/iam/model/User/getGroups()
io/corbel/iam/service/DefaultEventsService/sendUserModifiedEvent(io.corbel.iam.model.User)#io/corbel/iam/model/User/getEmail()
io/corbel/iam/service/DefaultEventsService/sendUpdateDomainPublicScopesEvent(java.lang.String)#io/corbel/eventbus/service/EventBus/dispatch(io.corbel.eventbus.Event)
io/corbel/iam/service/DefaultEventsService/sendUpdateDomainPublicScopesEvent(java.lang.String)#io/corbel/event/DomainPublicScopesNotPublishedEvent/DomainPublicScopesNotPublishedEvent(java.lang.String)
io/corbel/iam/service/DefaultEventsService/sendDeviceUpdateEvent(io.corbel.iam.model.Device)#io/corbel/iam/model/Device/getUserId()
io/corbel/iam/service/DefaultEventsService/sendDeviceUpdateEvent(io.corbel.iam.model.Device)#io/corbel/iam/model/Device/getName()
io/corbel/iam/service/DefaultEventsService/sendDeviceUpdateEvent(io.corbel.iam.model.Device)#io/corbel/eventbus/service/EventBus/dispatch(io.corbel.eventbus.Event)
io/corbel/iam/service/DefaultEventsService/sendDeviceUpdateEvent(io.corbel.iam.model.Device)#io/corbel/iam/model/Device/getUid()
io/corbel/iam/service/DefaultEventsService/sendDeviceUpdateEvent(io.corbel.iam.model.Device)#io/corbel/iam/model/Device/getType()
io/corbel/iam/service/DefaultEventsService/sendDeviceUpdateEvent(io.corbel.iam.model.Device)#io/corbel/event/DeviceEvent/DeviceEvent(io.corbel.event.DeviceEvent.Type,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
io/corbel/iam/service/DefaultEventsService/sendDeviceUpdateEvent(io.corbel.iam.model.Device)#io/corbel/iam/model/Device/getDomain()
io/corbel/iam/service/DefaultEventsService/sendDeleteScope(java.lang.String)#io/corbel/eventbus/service/EventBus/dispatch(io.corbel.eventbus.Event)
io/corbel/iam/service/DefaultEventsService/sendDeleteScope(java.lang.String)#io/corbel/event/ScopeUpdateEvent/deleteScopeEvent(java.lang.String,java.lang.String)
io/corbel/iam/api/ScopeResource/getScope(java.lang.String,java.lang.String)#io/corbel/iam/service/ScopeService/getScope(java.lang.String)
io/corbel/iam/api/ScopeResource/getScope(java.lang.String,java.lang.String)#java/util/Optional/ofNullable(T)
io/corbel/iam/api/ScopeResource/getScope(java.lang.String,java.lang.String)#java/util/Optional/map(java.util.function.Function)
io/corbel/iam/api/ScopeResource/getScope(java.lang.String,java.lang.String)#java/util/Optional/orElseGet(java.util.function.Supplier)
io/corbel/iam/api/ScopeResource/createScope(java.lang.String,javax.ws.rs.core.UriInfo,io.corbel.iam.model.Scope)#io/corbel/iam/model/Entity/getId()
io/corbel/iam/api/ScopeResource/createScope(java.lang.String,javax.ws.rs.core.UriInfo,io.corbel.iam.model.Scope)#io/corbel/iam/api/IamErrorResponseFactory/scopeIdNotAllowed(java.lang.String)
io/corbel/iam/api/ScopeResource/createScope(java.lang.String,javax.ws.rs.core.UriInfo,io.corbel.iam.model.Scope)#javax/ws/rs/core/UriBuilder/build(java.lang.Object[])
io/corbel/iam/api/ScopeResource/createScope(java.lang.String,javax.ws.rs.core.UriInfo,io.corbel.iam.model.Scope)#javax/ws/rs/core/UriInfo/getAbsolutePathBuilder()
io/corbel/iam/api/ScopeResource/createScope(java.lang.String,javax.ws.rs.core.UriInfo,io.corbel.iam.model.Scope)#io/corbel/iam/api/IamErrorResponseFactory/getInstance()
io/corbel/iam/api/ScopeResource/createScope(java.lang.String,javax.ws.rs.core.UriInfo,io.corbel.iam.model.Scope)#javax/ws/rs/core/UriBuilder/path(java.lang.String)
io/corbel/iam/api/ScopeResource/createScope(java.lang.String,javax.ws.rs.core.UriInfo,io.corbel.iam.model.Scope)#javax/ws/rs/core/Response/created(java.net.URI)
io/corbel/iam/api/ScopeResource/createScope(java.lang.String,javax.ws.rs.core.UriInfo,io.corbel.iam.model.Scope)#javax/ws/rs/core/Response/ResponseBuilder/build()
io/corbel/iam/api/ScopeResource/createScope(java.lang.String,javax.ws.rs.core.UriInfo,io.corbel.iam.model.Scope)#io/corbel/lib/ws/api/error/ErrorResponseFactory/missingParameter(java.lang.String)
io/corbel/iam/api/ScopeResource/createScope(java.lang.String,javax.ws.rs.core.UriInfo,io.corbel.iam.model.Scope)#io/corbel/iam/service/ScopeService/create(io.corbel.iam.model.Scope)
io/corbel/iam/api/ScopeResource/deleteScope(java.lang.String,java.lang.String)#javax/ws/rs/core/Response/noContent()
io/corbel/iam/api/ScopeResource/deleteScope(java.lang.String,java.lang.String)#javax/ws/rs/core/Response/ResponseBuilder/build()
io/corbel/iam/api/ScopeResource/deleteScope(java.lang.String,java.lang.String)#io/corbel/iam/service/ScopeService/delete(java.lang.String)
io/corbel/iam/model/UserWithIdentity/getIdentity()#io/corbel/iam/model/Identity/Identity(io.corbel.iam.model.Identity)
io/corbel/iam/model/UserWithIdentity/getIdentity()#io/corbel/iam/model/UserWithIdentity/synchronizeIdentityWithUser(io.corbel.iam.model.Identity)
io/corbel/iam/model/UserWithIdentity/synchronizeIdentityWithUser(io.corbel.iam.model.Identity)#io/corbel/iam/model/Entity/getId()
io/corbel/iam/model/UserWithIdentity/synchronizeIdentityWithUser(io.corbel.iam.model.Identity)#io/corbel/iam/model/Identity/setDomain(java.lang.String)
io/corbel/iam/model/UserWithIdentity/synchronizeIdentityWithUser(io.corbel.iam.model.Identity)#io/corbel/iam/model/Identity/setUserId(java.lang.String)
io/corbel/iam/model/UserWithIdentity/synchronizeIdentityWithUser(io.corbel.iam.model.Identity)#io/corbel/iam/model/User/getDomain()
io/corbel/iam/auth/oauthserver/connect/OAuthServerServiceProvider/getTemplate(java.lang.String,java.lang.String,java.lang.String)#org/springframework/social/oauth2/OAuth2Template/setUseParametersForClientAuthentication(boolean)
io/corbel/iam/auth/oauthserver/connect/OAuthServerServiceProvider/getTemplate(java.lang.String,java.lang.String,java.lang.String)#org/springframework/social/oauth2/OAuth2Template/OAuth2Template(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
io/corbel/iam/auth/oauthserver/connect/OAuthServerServiceProvider/getApi(java.lang.String)#io/corbel/iam/auth/oauthserver/api/impl/OAuthServerTemplate/OAuthServerTemplate(java.lang.String,java.lang.String)
io/corbel/oauth/token/verifier/UserExistsTokenVerifierTest/testOk()#io/corbel/lib/token/TokenInfo/getUserId()
io/corbel/oauth/token/verifier/UserExistsTokenVerifierTest/testOk()#org/springframework/data/repository/CrudRepository/findOne(ID)
io/corbel/oauth/token/verifier/UserExistsTokenVerifierTest/testOk()#io/corbel/oauth/model/User/User()
io/corbel/oauth/token/verifier/UserExistsTokenVerifierTest/testOk()#io/corbel/oauth/token/verifier/UserExistsTokenVerifier/verify(io.corbel.lib.token.reader.TokenReader)
io/corbel/oauth/token/verifier/UserExistsTokenVerifierTest/testOk()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/oauth/token/verifier/UserExistsTokenVerifierTest/testOk()#io/corbel/lib/token/reader/TokenReader/getInfo()
io/corbel/oauth/token/verifier/UserExistsTokenVerifierTest/testOk()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/oauth/token/verifier/UserExistsTokenVerifierTest/testOk()#org/mockito/Mockito/when(T)
io/corbel/oauth/token/verifier/UserExistsTokenVerifierTest/testUserNotExists()#io/corbel/lib/token/TokenInfo/getUserId()
io/corbel/oauth/token/verifier/UserExistsTokenVerifierTest/testUserNotExists()#org/springframework/data/repository/CrudRepository/findOne(ID)
io/corbel/oauth/token/verifier/UserExistsTokenVerifierTest/testUserNotExists()#io/corbel/oauth/token/verifier/UserExistsTokenVerifier/verify(io.corbel.lib.token.reader.TokenReader)
io/corbel/oauth/token/verifier/UserExistsTokenVerifierTest/testUserNotExists()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/oauth/token/verifier/UserExistsTokenVerifierTest/testUserNotExists()#io/corbel/lib/token/reader/TokenReader/getInfo()
io/corbel/oauth/token/verifier/UserExistsTokenVerifierTest/testUserNotExists()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/oauth/token/verifier/UserExistsTokenVerifierTest/testUserNotExists()#org/mockito/Mockito/when(T)
io/corbel/oauth/token/verifier/UserExistsTokenVerifierTest/setup()#io/corbel/oauth/token/verifier/UserExistsTokenVerifier/UserExistsTokenVerifier(io.corbel.oauth.repository.UserRepository)
io/corbel/iam/service/DefaultClientServiceTest/testFailedFind()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/service/DefaultClientServiceTest/testFailedFind()#org/junit/Assert/assertFalse(boolean)
io/corbel/iam/service/DefaultClientServiceTest/testFailedFind()#org/mockito/Mockito/when(T)
io/corbel/iam/service/DefaultClientServiceTest/testFailedFind()#org/springframework/data/repository/CrudRepository/findOne(ID)
io/corbel/iam/service/DefaultClientServiceTest/testFailedFind()#java/util/Optional/isPresent()
io/corbel/iam/service/DefaultClientServiceTest/testFailedFind()#io/corbel/iam/service/ClientService/find(java.lang.String)
io/corbel/iam/service/DefaultClientServiceTest/testFailedFind()#org/mockito/Mockito/verify(T)
io/corbel/iam/service/DefaultClientServiceTest/testFind()#java/util/Optional/get()
io/corbel/iam/service/DefaultClientServiceTest/testFind()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/service/DefaultClientServiceTest/testFind()#org/springframework/data/repository/CrudRepository/findOne(ID)
io/corbel/iam/service/DefaultClientServiceTest/testFind()#org/junit/Assert/assertTrue(boolean)
io/corbel/iam/service/DefaultClientServiceTest/testFind()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/iam/service/DefaultClientServiceTest/testFind()#org/mockito/Mockito/when(T)
io/corbel/iam/service/DefaultClientServiceTest/testFind()#io/corbel/iam/service/ClientService/find(java.lang.String)
io/corbel/iam/service/DefaultClientServiceTest/testFind()#org/mockito/Mockito/verify(T)
io/corbel/iam/service/DefaultClientServiceTest/testFind()#java/util/Optional/isPresent()
io/corbel/iam/service/DefaultClientServiceTest/testFind()#org/junit/Assert/assertEquals(java.lang.Object,java.lang.Object)
io/corbel/iam/service/DefaultClientServiceTest/testCreate()#org/springframework/data/mongodb/repository/MongoRepository/insert(S)
io/corbel/iam/service/DefaultClientServiceTest/testCreate()#org/mockito/ArgumentCaptor/getValue()
io/corbel/iam/service/DefaultClientServiceTest/testCreate()#io/corbel/iam/service/ClientService/createClient(io.corbel.iam.model.Client)
io/corbel/iam/service/DefaultClientServiceTest/testCreate()#org/mockito/ArgumentCaptor/capture()
io/corbel/iam/service/DefaultClientServiceTest/testCreate()#io/corbel/iam/model/Client/getName()
io/corbel/iam/service/DefaultClientServiceTest/testCreate()#org/junit/Assert/assertEquals(java.lang.Object,java.lang.Object)
io/corbel/iam/service/DefaultClientServiceTest/testCreate()#io/corbel/iam/service/DefaultClientServiceTest/getClient()
io/corbel/iam/service/DefaultClientServiceTest/testCreate()#org/mockito/ArgumentCaptor/forClass(java.lang.Class)
io/corbel/iam/service/DefaultClientServiceTest/testCreate()#org/mockito/Mockito/verify(T)
io/corbel/iam/service/DefaultClientServiceTest/testDelete()#org/mockito/Mockito/verify(T)
io/corbel/iam/service/DefaultClientServiceTest/testDelete()#io/corbel/iam/repository/ClientRepositoryCustom/delete(java.lang.String,java.lang.String)
io/corbel/iam/service/DefaultClientServiceTest/testDelete()#io/corbel/iam/service/ClientService/delete(java.lang.String,java.lang.String)
io/corbel/iam/service/DefaultClientServiceTest/setUp()#io/corbel/iam/service/DefaultClientService/DefaultClientService(io.corbel.iam.repository.ClientRepository,io.corbel.lib.queries.request.AggregationResultsFactory)
io/corbel/iam/service/DefaultClientServiceTest/getClient()#io/corbel/iam/model/Client/setName(java.lang.String)
io/corbel/iam/service/DefaultClientServiceTest/getClient()#io/corbel/iam/model/Entity/setId(java.lang.String)
io/corbel/iam/service/DefaultClientServiceTest/getClient()#io/corbel/iam/model/Client/Client()
io/corbel/iam/service/DefaultClientServiceTest/testUpdate()#org/mockito/Mockito/verify(T)
io/corbel/iam/service/DefaultClientServiceTest/testUpdate()#io/corbel/iam/service/ClientService/update(io.corbel.iam.model.Client)
io/corbel/iam/service/DefaultClientServiceTest/testUpdate()#io/corbel/lib/mongo/repository/PartialUpdateRepository/patch(E,java.lang.String[])
io/corbel/iam/service/DefaultClientServiceTest/testUpdate()#io/corbel/iam/service/DefaultClientServiceTest/getClient()
io/corbel/eworker/internal/AmqpEworkerRegistry/registerEworker(io.corbel.evci.eworker.Eworker,java.lang.String,java.lang.String,boolean,int)#java/lang/Class/getGenericInterfaces()
io/corbel/eworker/internal/AmqpEworkerRegistry/registerEworker(io.corbel.evci.eworker.Eworker,java.lang.String,java.lang.String,boolean,int)#org/springframework/amqp/rabbit/listener/adapter/MessageListenerAdapter/setDefaultListenerMethod(java.lang.String)
io/corbel/eworker/internal/AmqpEworkerRegistry/registerEworker(io.corbel.evci.eworker.Eworker,java.lang.String,java.lang.String,boolean,int)#io/corbel/lib/rabbitmq/config/AmqpConfigurer/queue(java.lang.String,java.util.function.Function<org.springframework.amqp.core.Queue,org.springframework.amqp.core.Queue>[])
io/corbel/eworker/internal/AmqpEworkerRegistry/registerEworker(io.corbel.evci.eworker.Eworker,java.lang.String,java.lang.String,boolean,int)#java/util/function/Function/apply(T)
io/corbel/eworker/internal/AmqpEworkerRegistry/registerEworker(io.corbel.evci.eworker.Eworker,java.lang.String,java.lang.String,boolean,int)#java/util/Optional/of(T)
io/corbel/eworker/internal/AmqpEworkerRegistry/registerEworker(io.corbel.evci.eworker.Eworker,java.lang.String,java.lang.String,boolean,int)#io/corbel/evci/converter/DomainObjectJsonMessageConverterFactory/createConverter(java.lang.reflect.Type)
io/corbel/eworker/internal/AmqpEworkerRegistry/registerEworker(io.corbel.evci.eworker.Eworker,java.lang.String,java.lang.String,boolean,int)#java/lang/reflect/ParameterizedType/getActualTypeArguments()
io/corbel/eworker/internal/AmqpEworkerRegistry/registerEworker(io.corbel.evci.eworker.Eworker,java.lang.String,java.lang.String,boolean,int)#io/corbel/lib/rabbitmq/config/AmqpConfigurer/setDeadLetterExchange(java.lang.String)
io/corbel/eworker/internal/AmqpEworkerRegistry/registerEworker(io.corbel.evci.eworker.Eworker,java.lang.String,java.lang.String,boolean,int)#io/corbel/lib/rabbitmq/config/AmqpConfigurer/queue(java.lang.String)
io/corbel/eworker/internal/AmqpEworkerRegistry/registerEworker(io.corbel.evci.eworker.Eworker,java.lang.String,java.lang.String,boolean,int)#org/springframework/amqp/rabbit/listener/adapter/MessageListenerAdapter/MessageListenerAdapter(java.lang.Object,org.springframework.amqp.support.converter.MessageConverter)
io/corbel/eworker/internal/AmqpEworkerRegistry/registerEworker(io.corbel.evci.eworker.Eworker,java.lang.String,java.lang.String,boolean,int)#org/springframework/amqp/rabbit/listener/AbstractMessageListenerContainer/setMessageListener(java.lang.Object)
io/corbel/eworker/internal/AmqpEworkerRegistry/registerEworker(io.corbel.evci.eworker.Eworker,java.lang.String,java.lang.String,boolean,int)#io/corbel/lib/rabbitmq/config/AmqpConfigurer/listenerContainer(java.util.concurrent.Executor,java.lang.String[])
io/corbel/eworker/internal/AmqpEworkerRegistry/registerEworker(io.corbel.evci.eworker.Eworker,java.lang.String,java.lang.String,boolean,int)#java/util/Optional/ofNullable(T)
io/corbel/eworker/internal/AmqpEworkerRegistry/registerEworker(io.corbel.evci.eworker.Eworker,java.lang.String,java.lang.String,boolean,int)#io/corbel/lib/rabbitmq/config/AmqpConfigurer/bind(java.lang.String,org.springframework.amqp.core.Queue,java.util.Optional,java.util.Optional)
io/corbel/eworker/internal/AmqpEworkerRegistry/registerEworker(io.corbel.evci.eworker.Eworker,java.lang.String,java.lang.String,boolean,int)#io/corbel/lib/rabbitmq/config/AmqpConfigurer/setRetryOpertations(java.util.Optional,java.util.Optional)
io/corbel/eworker/internal/AmqpEworkerRegistry/registerEworker(io.corbel.evci.eworker.Eworker,java.lang.String,java.lang.String,boolean,int)#org/springframework/amqp/rabbit/listener/AbstractMessageListenerContainer/start()
io/corbel/eworker/internal/AmqpEworkerRegistry/registerEworker(io.corbel.evci.eworker.Eworker,java.lang.String,java.lang.String,boolean,int)#java/util/Optional/empty()
io/corbel/eworker/internal/AmqpEworkerRegistry/registerEworker(io.corbel.evci.eworker.Eworker,java.lang.String,java.lang.String,boolean,int)#io/corbel/lib/rabbitmq/config/AmqpConfigurer/listenerContainer(java.util.concurrent.Executor,java.util.function.UnaryOperator,java.lang.String[])
io/corbel/eworker/internal/AmqpEworkerRegistry/registerEworker(io.corbel.evci.eworker.Eworker,java.lang.String,java.lang.String,boolean,int)#java/util/concurrent/Executors/newFixedThreadPool(int)
io/corbel/eworker/internal/AmqpEworkerRegistry/registerEworker(io.corbel.evci.eworker.Eworker,java.lang.String,java.lang.String,boolean,int)#java/lang/Object/getClass()
io/corbel/iam/repository/IdentityRepositoryImpl/existsByDomainAndUserIdAndOauthService(java.lang.String,java.lang.String,java.lang.String)#io/corbel/lib/mongo/utils/MongoCommonOperations/exists(org.springframework.data.mongodb.core.MongoOperations,java.util.Map,java.lang.Class)
io/corbel/iam/repository/IdentityRepositoryImpl/existsByDomainAndUserIdAndOauthService(java.lang.String,java.lang.String,java.lang.String)#com/google/common/collect/ImmutableMap/of(K,V,K,V,K,V)
io/corbel/iam/repository/IdentityRepositoryImpl/deleteByUserIdAndDomain(java.lang.String,java.lang.String)#com/google/common/collect/ImmutableMap/of(K,V,K,V)
io/corbel/iam/repository/IdentityRepositoryImpl/deleteByUserIdAndDomain(java.lang.String,java.lang.String)#io/corbel/lib/mongo/utils/MongoCommonOperations/delete(org.springframework.data.mongodb.core.MongoOperations,java.util.Map,java.lang.Class)
io/corbel/resources/rem/utils/ResmiJsonObjectMongoWriteConverter/tryToConvertIdStringToObjectId(com.mongodb.DBObject)#org/bson/BSONObject/get(java.lang.String)
io/corbel/resources/rem/utils/ResmiJsonObjectMongoWriteConverter/tryToConvertIdStringToObjectId(com.mongodb.DBObject)#java/util/Optional/ofNullable(T)
io/corbel/resources/rem/utils/ResmiJsonObjectMongoWriteConverter/tryToConvertIdStringToObjectId(com.mongodb.DBObject)#java/util/Optional/ifPresent(java.util.function.Consumer)
io/corbel/resources/rem/utils/ResmiJsonObjectMongoWriteConverter/tryToConvertIdStringToObjectId(com.mongodb.DBObject)#java/util/Optional/map(java.util.function.Function)
io/corbel/resources/rem/utils/ResmiJsonObjectMongoWriteConverter/convertIdToString(com.google.gson.JsonElement)#com/google/gson/JsonElement/isJsonObject()
io/corbel/resources/rem/utils/ResmiJsonObjectMongoWriteConverter/convertIdToString(com.google.gson.JsonElement)#com/google/gson/JsonObject/remove(java.lang.String)
io/corbel/resources/rem/utils/ResmiJsonObjectMongoWriteConverter/convertIdToString(com.google.gson.JsonElement)#com/google/gson/JsonElement/getAsJsonObject()
io/corbel/resources/rem/utils/ResmiJsonObjectMongoWriteConverter/convertIdToString(com.google.gson.JsonElement)#com/google/gson/JsonObject/addProperty(java.lang.String,java.lang.String)
io/corbel/resources/rem/utils/ResmiJsonObjectMongoWriteConverter/convertIdToString(com.google.gson.JsonElement)#com/google/gson/JsonElement/isJsonPrimitive()
io/corbel/resources/rem/utils/ResmiJsonObjectMongoWriteConverter/convertIdToString(com.google.gson.JsonElement)#com/google/gson/JsonElement/getAsString()
io/corbel/resources/rem/utils/ResmiJsonObjectMongoWriteConverter/convertIdToString(com.google.gson.JsonElement)#com/google/gson/JsonObject/get(java.lang.String)
io/corbel/resources/rem/utils/ResmiJsonObjectMongoWriteConverter/tryToConvertExpireToDate(com.mongodb.DBObject)#org/bson/BSONObject/get(java.lang.String)
io/corbel/resources/rem/utils/ResmiJsonObjectMongoWriteConverter/tryToConvertExpireToDate(com.mongodb.DBObject)#org/bson/BSONObject/put(java.lang.String,java.lang.Object)
io/corbel/resources/rem/utils/ResmiJsonObjectMongoWriteConverter/tryToConvertExpireToDate(com.mongodb.DBObject)#java/util/Optional/ofNullable(T)
io/corbel/resources/rem/utils/ResmiJsonObjectMongoWriteConverter/tryToConvertExpireToDate(com.mongodb.DBObject)#java/util/Optional/map(java.util.function.Function)
io/corbel/resources/rem/utils/ResmiJsonObjectMongoWriteConverter/tryToConvertExpireToDate(com.mongodb.DBObject)#java/util/Optional/isPresent()
io/corbel/resources/rem/utils/ResmiJsonObjectMongoWriteConverter/convert(com.google.gson.JsonElement)#io/corbel/lib/mongo/JsonObjectMongoWriteConverter/convert(com.google.gson.JsonElement)
io/corbel/resources/rem/utils/ResmiJsonObjectMongoWriteConverter/convert(com.google.gson.JsonElement)#io/corbel/resources/rem/utils/ResmiJsonObjectMongoWriteConverter/tryToConvertIdStringToObjectId(com.mongodb.DBObject)
io/corbel/resources/rem/utils/ResmiJsonObjectMongoWriteConverter/convert(com.google.gson.JsonElement)#io/corbel/resources/rem/utils/ResmiJsonObjectMongoWriteConverter/convertIdToString(com.google.gson.JsonElement)
io/corbel/resources/rem/utils/ResmiJsonObjectMongoWriteConverter/convert(com.google.gson.JsonElement)#io/corbel/resources/rem/utils/ResmiJsonObjectMongoWriteConverter/tryToConvertExpireToDate(com.mongodb.DBObject)
io/corbel/iam/auth/provider/TwitterProvider/setConfiguration(java.util.Map)#java/util/Map/get(java.lang.Object)
io/corbel/iam/auth/provider/TwitterProvider/setConfiguration(java.util.Map)#org/springframework/social/twitter/connect/TwitterConnectionFactory/TwitterConnectionFactory(java.lang.String,java.lang.String)
io/corbel/iam/auth/provider/TwitterProvider/getAuthUrl(java.lang.String)#org/springframework/social/connect/support/OAuth1ConnectionFactory/getOAuthOperations()
io/corbel/iam/auth/provider/TwitterProvider/getAuthUrl(java.lang.String)#org/springframework/social/oauth1/OAuthToken/getValue()
io/corbel/iam/auth/provider/TwitterProvider/getAuthUrl(java.lang.String)#org/springframework/social/oauth1/OAuth1Operations/buildAuthenticateUrl(java.lang.String,org.springframework.social.oauth1.OAuth1Parameters)
io/corbel/iam/auth/provider/TwitterProvider/getAuthUrl(java.lang.String)#org/springframework/social/oauth1/OAuth1Parameters/setCallbackUrl(java.lang.String)
io/corbel/iam/auth/provider/TwitterProvider/getAuthUrl(java.lang.String)#org/springframework/social/oauth1/OAuth1Operations/fetchRequestToken(java.lang.String,org.springframework.util.MultiValueMap)
io/corbel/iam/auth/provider/TwitterProvider/getAuthUrl(java.lang.String)#io/corbel/iam/auth/provider/Provider/UrlGenerator/generateUrl(java.lang.String,java.lang.String,java.lang.String)
io/corbel/iam/auth/provider/TwitterProvider/getAuthUrl(java.lang.String)#org/springframework/social/oauth1/OAuth1Parameters/OAuth1Parameters()
io/corbel/iam/auth/provider/TwitterProvider/getIdentity(io.corbel.iam.auth.OauthParams,java.lang.String,java.lang.String)#org/springframework/social/oauth1/OAuth1Operations/exchangeForAccessToken(org.springframework.social.oauth1.AuthorizedRequestToken,org.springframework.util.MultiValueMap)
io/corbel/iam/auth/provider/TwitterProvider/getIdentity(io.corbel.iam.auth.OauthParams,java.lang.String,java.lang.String)#org/springframework/social/connect/support/OAuth1ConnectionFactory/getOAuthOperations()
io/corbel/iam/auth/provider/TwitterProvider/getIdentity(io.corbel.iam.auth.OauthParams,java.lang.String,java.lang.String)#io/corbel/iam/exception/UnauthorizedException/UnauthorizedException(java.lang.String)
io/corbel/iam/auth/provider/TwitterProvider/getIdentity(io.corbel.iam.auth.OauthParams,java.lang.String,java.lang.String)#org/springframework/social/oauth1/AuthorizedRequestToken/AuthorizedRequestToken(org.springframework.social.oauth1.OAuthToken,java.lang.String)
io/corbel/iam/auth/provider/TwitterProvider/getIdentity(io.corbel.iam.auth.OauthParams,java.lang.String,java.lang.String)#io/corbel/iam/auth/OauthParams/getVerifier()
io/corbel/iam/auth/provider/TwitterProvider/getIdentity(io.corbel.iam.auth.OauthParams,java.lang.String,java.lang.String)#org/springframework/social/twitter/api/UserOperations/getUserProfile()
io/corbel/iam/auth/provider/TwitterProvider/getIdentity(io.corbel.iam.auth.OauthParams,java.lang.String,java.lang.String)#org/springframework/social/connect/Connection/getApi()
io/corbel/iam/auth/provider/TwitterProvider/getIdentity(io.corbel.iam.auth.OauthParams,java.lang.String,java.lang.String)#org/springframework/social/oauth1/OAuthToken/OAuthToken(java.lang.String,java.lang.String)
io/corbel/iam/auth/provider/TwitterProvider/getIdentity(io.corbel.iam.auth.OauthParams,java.lang.String,java.lang.String)#io/corbel/iam/repository/IdentityRepository/findByOauthIdAndDomainAndOauthService(java.lang.String,java.lang.String,java.lang.String)
io/corbel/iam/auth/provider/TwitterProvider/getIdentity(io.corbel.iam.auth.OauthParams,java.lang.String,java.lang.String)#org/springframework/social/connect/support/OAuth1ConnectionFactory/createConnection(org.springframework.social.oauth1.OAuthToken)
io/corbel/iam/auth/provider/TwitterProvider/getIdentity(io.corbel.iam.auth.OauthParams,java.lang.String,java.lang.String)#org/springframework/social/connect/Connection/hasExpired()
io/corbel/iam/auth/provider/TwitterProvider/getIdentity(io.corbel.iam.auth.OauthParams,java.lang.String,java.lang.String)#org/springframework/social/twitter/api/Twitter/userOperations()
io/corbel/iam/auth/provider/TwitterProvider/getIdentity(io.corbel.iam.auth.OauthParams,java.lang.String,java.lang.String)#io/corbel/iam/auth/OauthParams/getToken()
io/corbel/iam/auth/provider/TwitterProvider/getIdentity(io.corbel.iam.auth.OauthParams,java.lang.String,java.lang.String)#java/lang/String/valueOf(long)
io/corbel/iam/auth/provider/TwitterProvider/getIdentity(io.corbel.iam.auth.OauthParams,java.lang.String,java.lang.String)#org/springframework/social/twitter/api/TwitterProfile/getId()
io/corbel/iam/auth/provider/TwitterProvider/getIdentity(java.lang.String,java.lang.String,io.corbel.iam.auth.OauthParams)#org/springframework/social/oauth1/OAuth1Operations/exchangeForAccessToken(org.springframework.social.oauth1.AuthorizedRequestToken,org.springframework.util.MultiValueMap)
io/corbel/iam/auth/provider/TwitterProvider/getIdentity(java.lang.String,java.lang.String,io.corbel.iam.auth.OauthParams)#org/springframework/social/connect/support/OAuth1ConnectionFactory/getOAuthOperations()
io/corbel/iam/auth/provider/TwitterProvider/getIdentity(java.lang.String,java.lang.String,io.corbel.iam.auth.OauthParams)#org/springframework/social/oauth1/AuthorizedRequestToken/AuthorizedRequestToken(org.springframework.social.oauth1.OAuthToken,java.lang.String)
io/corbel/iam/auth/provider/TwitterProvider/getIdentity(java.lang.String,java.lang.String,io.corbel.iam.auth.OauthParams)#io/corbel/iam/auth/OauthParams/getVerifier()
io/corbel/iam/auth/provider/TwitterProvider/getIdentity(java.lang.String,java.lang.String,io.corbel.iam.auth.OauthParams)#org/springframework/social/twitter/api/UserOperations/getUserProfile()
io/corbel/iam/auth/provider/TwitterProvider/getIdentity(java.lang.String,java.lang.String,io.corbel.iam.auth.OauthParams)#org/springframework/social/connect/Connection/getApi()
io/corbel/iam/auth/provider/TwitterProvider/getIdentity(java.lang.String,java.lang.String,io.corbel.iam.auth.OauthParams)#org/springframework/social/oauth1/OAuthToken/OAuthToken(java.lang.String,java.lang.String)
io/corbel/iam/auth/provider/TwitterProvider/getIdentity(java.lang.String,java.lang.String,io.corbel.iam.auth.OauthParams)#org/springframework/social/connect/support/OAuth1ConnectionFactory/createConnection(org.springframework.social.oauth1.OAuthToken)
io/corbel/iam/auth/provider/TwitterProvider/getIdentity(java.lang.String,java.lang.String,io.corbel.iam.auth.OauthParams)#org/springframework/social/connect/Connection/hasExpired()
io/corbel/iam/auth/provider/TwitterProvider/getIdentity(java.lang.String,java.lang.String,io.corbel.iam.auth.OauthParams)#org/springframework/social/twitter/api/Twitter/userOperations()
io/corbel/iam/auth/provider/TwitterProvider/getIdentity(java.lang.String,java.lang.String,io.corbel.iam.auth.OauthParams)#io/corbel/iam/auth/OauthParams/getToken()
io/corbel/iam/auth/provider/TwitterProvider/getIdentity(java.lang.String,java.lang.String,io.corbel.iam.auth.OauthParams)#org/springframework/social/twitter/api/TwitterProfile/getId()
io/corbel/iam/auth/provider/TwitterProvider/getIdentity(java.lang.String,java.lang.String,io.corbel.iam.auth.OauthParams)#java/lang/Long/valueOf(java.lang.String)
io/corbel/resources/rem/i18n/I18nGetRem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional)#io/corbel/resources/rem/request/RequestParameters/getHeaders()
io/corbel/resources/rem/i18n/I18nGetRem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional)#io/corbel/resources/rem/i18n/I18nBaseRem/getLanguage(javax.ws.rs.core.MultivaluedMap)
io/corbel/resources/rem/i18n/I18nGetRem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional)#java/util/Optional/orElse(T)
io/corbel/resources/rem/i18n/I18nGetRem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional)#java/util/Optional/ofNullable(T)
io/corbel/resources/rem/i18n/I18nGetRem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional)#java/util/Optional/map(java.util.function.Function)
io/corbel/resources/rem/i18n/I18nGetRem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional)#io/corbel/resources/rem/i18n/api/I18nErrorResponseFactory/errorNotLanguageHeader()
io/corbel/resources/rem/i18n/I18nGetRem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional)#io/corbel/resources/rem/i18n/api/I18nErrorResponseFactory/getInstance()
io/corbel/resources/rem/i18n/I18nGetRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/resources/rem/request/RequestParameters/getHeaders()
io/corbel/resources/rem/i18n/I18nGetRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/resources/rem/i18n/I18nBaseRem/getLanguage(javax.ws.rs.core.MultivaluedMap)
io/corbel/resources/rem/i18n/I18nGetRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#java/util/Optional/orElse(T)
io/corbel/resources/rem/i18n/I18nGetRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#java/util/Optional/ofNullable(T)
io/corbel/resources/rem/i18n/I18nGetRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#java/util/Optional/map(java.util.function.Function)
io/corbel/resources/rem/i18n/I18nGetRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/resources/rem/i18n/api/I18nErrorResponseFactory/errorNotLanguageHeader()
io/corbel/resources/rem/i18n/I18nGetRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/resources/rem/i18n/api/I18nErrorResponseFactory/getInstance()
io/corbel/resources/rem/i18n/I18nGetRem/addQueryLanguage(java.lang.String,io.corbel.lib.queries.request.ResourceQuery)#io/corbel/lib/queries/request/ResourceQuery/addQueryNode(io.corbel.lib.queries.request.QueryNode)
io/corbel/resources/rem/i18n/I18nGetRem/addQueryLanguage(java.lang.String,io.corbel.lib.queries.request.ResourceQuery)#io/corbel/lib/queries/QueryNodeImpl/QueryNodeImpl(io.corbel.lib.queries.request.QueryOperator,java.lang.String,io.corbel.lib.queries.request.QueryLiteral)
io/corbel/resources/rem/i18n/I18nGetRem/addQueryLanguage(java.lang.String,io.corbel.lib.queries.request.ResourceQuery)#io/corbel/lib/queries/StringQueryLiteral/StringQueryLiteral(java.lang.String)
io/corbel/iam/model/Scope/equals(java.lang.Object)#io/corbel/iam/model/Entity/equals(java.lang.Object)
io/corbel/iam/model/Scope/equals(java.lang.Object)#java/lang/String/equals(java.lang.Object)
io/corbel/iam/model/Scope/equals(java.lang.Object)#java/util/Set/equals(java.lang.Object)
io/corbel/iam/model/Scope/equals(java.lang.Object)#com/google/gson/JsonObject/equals(java.lang.Object)
io/corbel/iam/model/Scope/equals(java.lang.Object)#java/lang/Object/getClass()
io/corbel/iam/model/Scope/isAValidScope()#io/corbel/iam/model/Scope/isComposed()
io/corbel/iam/model/Scope/isAValidScope()#org/springframework/util/StringUtils/isEmpty(java.lang.Object)
io/corbel/iam/model/Scope/isAValidScope()#io/corbel/iam/model/Scope/getAudience()
io/corbel/iam/model/Scope/isAValidScope()#io/corbel/iam/model/Scope/getRules()
io/corbel/iam/model/Scope/isAValidScope()#org/springframework/util/CollectionUtils/isEmpty(java.util.Collection)
io/corbel/iam/model/Scope/isComposed()#java/lang/String/equals(java.lang.Object)
io/corbel/iam/model/Scope/hashCode()#io/corbel/iam/model/Entity/hashCode()
io/corbel/iam/model/Scope/hashCode()#java/lang/String/hashCode()
io/corbel/iam/model/Scope/hashCode()#java/util/Set/hashCode()
io/corbel/iam/model/Scope/hashCode()#com/google/gson/JsonObject/hashCode()
io/corbel/iam/model/Scope/getIdWithParameters()#io/corbel/iam/model/Entity/getId()
io/corbel/iam/model/Scope/getIdWithParameters()#java/util/Optional/orElse(T)
io/corbel/iam/model/Scope/getIdWithParameters()#java/util/Optional/ofNullable(T)
io/corbel/iam/model/Scope/getIdWithParameters()#java/util/Optional/map(java.util.function.Function)
io/corbel/iam/model/Scope/getIdWithParameters()#io/corbel/iam/model/Scope/getParameters()
io/corbel/resources/rem/plugin/RemPlugin/afterPropertiesSet()#io/corbel/resources/rem/plugin/PluginArtifactIdRegistry/addPluginArtifactId(java.lang.String)
io/corbel/resources/rem/plugin/RemPlugin/afterPropertiesSet()#java/lang/Enum/equals(java.lang.Object)
io/corbel/resources/rem/plugin/RemPlugin/afterPropertiesSet()#io/corbel/resources/rem/plugin/RemPlugin/getArtifactName()
io/corbel/resources/rem/plugin/RemPlugin/afterPropertiesSet()#io/corbel/resources/rem/plugin/RemPlugin/register(io.corbel.resources.rem.RemRegistry)
io/corbel/resources/rem/plugin/RemPlugin/afterPropertiesSet()#java/lang/Object/getClass()
io/corbel/resources/rem/plugin/RemPlugin/afterPropertiesSet()#io/corbel/resources/rem/plugin/RemPlugin/addRelations(io.corbel.resources.rem.plugin.RelationRegistry)
io/corbel/resources/rem/plugin/RemPlugin/afterPropertiesSet()#java/lang/Class/getSimpleName()
io/corbel/resources/rem/plugin/RemPlugin/afterPropertiesSet()#io/corbel/resources/rem/plugin/RemPlugin/init()
io/corbel/resources/rem/plugin/RemPlugin/afterPropertiesSet()#io/corbel/resources/rem/plugin/RemPlugin/checkVersion()
io/corbel/resources/rem/plugin/RemPlugin/afterPropertiesSet()#org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)
io/corbel/resources/rem/plugin/RemPlugin/afterPropertiesSet()#io/corbel/resources/rem/plugin/RemPlugin/console()
io/corbel/resources/rem/plugin/RemPlugin/afterPropertiesSet()#io/corbel/resources/rem/plugin/RemPlugin/addHealthCheck(io.corbel.resources.rem.plugin.HealthCheckRegistry)
io/corbel/resources/rem/plugin/RemPlugin/checkVersion()#org/springframework/core/env/EnvironmentCapable/getEnvironment()
io/corbel/resources/rem/plugin/RemPlugin/checkVersion()#com/github/zafarkhaja/semver/Version/valueOf(java.lang.String)
io/corbel/resources/rem/plugin/RemPlugin/checkVersion()#io/corbel/resources/rem/exception/InitializationRemException/InitializationRemException(java.lang.String)
io/corbel/resources/rem/plugin/RemPlugin/checkVersion()#org/springframework/core/env/PropertyResolver/getProperty(java.lang.String)
io/corbel/resources/rem/plugin/RemPlugin/checkVersion()#com/github/zafarkhaja/semver/Version/getMajorVersion()
io/corbel/resources/rem/service/DefaultImageOperationsServiceIntegrationTest/test()#java/net/URL/openStream()
io/corbel/resources/rem/service/DefaultImageOperationsServiceIntegrationTest/test()#java/util/Collections/singletonList(T)
io/corbel/resources/rem/service/DefaultImageOperationsServiceIntegrationTest/test()#java/net/URL/URL(java.lang.String)
io/corbel/resources/rem/service/DefaultImageOperationsServiceIntegrationTest/test()#java/io/FileOutputStream/FileOutputStream(java.lang.String)
io/corbel/resources/rem/service/DefaultImageOperationsServiceIntegrationTest/test()#io/corbel/resources/rem/service/DefaultImageOperationsService/applyConversion(java.util.List,java.io.InputStream,java.io.OutputStream,java.util.Optional,java.lang.String)
io/corbel/resources/rem/service/DefaultImageOperationsServiceIntegrationTest/test()#io/corbel/resources/rem/model/ImageOperationDescription/ImageOperationDescription(java.lang.String,java.lang.String)
io/corbel/resources/rem/service/DefaultImageOperationsServiceIntegrationTest/setUp()#com/google/common/collect/ImmutableMap/Builder/build()
io/corbel/resources/rem/service/DefaultImageOperationsServiceIntegrationTest/setUp()#com/google/common/collect/ImmutableMap/builder()
io/corbel/resources/rem/service/DefaultImageOperationsServiceIntegrationTest/setUp()#io/corbel/resources/rem/operation/ResizeWidth/ResizeWidth()
io/corbel/resources/rem/service/DefaultImageOperationsServiceIntegrationTest/setUp()#com/google/common/collect/ImmutableMap/Builder/put(K,V)
io/corbel/resources/rem/service/DefaultImageOperationsServiceIntegrationTest/setUp()#io/corbel/resources/rem/service/DefaultImageOperationsService/ConvertCmdFactory/ConvertCmdFactory()
io/corbel/resources/rem/service/DefaultImageOperationsServiceIntegrationTest/setUp()#io/corbel/resources/rem/operation/Crop/Crop()
io/corbel/resources/rem/service/DefaultImageOperationsServiceIntegrationTest/setUp()#io/corbel/resources/rem/operation/Resize/Resize()
io/corbel/resources/rem/service/DefaultImageOperationsServiceIntegrationTest/setUp()#io/corbel/resources/rem/operation/ResizeHeight/ResizeHeight()
io/corbel/resources/rem/service/DefaultImageOperationsServiceIntegrationTest/setUp()#io/corbel/resources/rem/operation/CropFromCenter/CropFromCenter()
io/corbel/resources/rem/service/DefaultImageOperationsServiceIntegrationTest/setUp()#io/corbel/resources/rem/service/DefaultImageOperationsService/DefaultImageOperationsService(io.corbel.resources.rem.service.DefaultImageOperationsService.IMOperationFactory,io.corbel.resources.rem.service.DefaultImageOperationsService.ConvertCmdFactory,java.util.Map)
io/corbel/resources/rem/service/DefaultImageOperationsServiceIntegrationTest/setUp()#io/corbel/resources/rem/operation/ResizeAndFill/ResizeAndFill()
io/corbel/resources/rem/service/DefaultImageOperationsServiceIntegrationTest/setUp()#io/corbel/resources/rem/service/DefaultImageOperationsService/IMOperationFactory/IMOperationFactory()
io/corbel/resources/rem/service/DefaultImageOperationsServiceIntegrationTest/resizeTest()#java/io/FileOutputStream/FileOutputStream(java.lang.String)
io/corbel/resources/rem/service/DefaultImageOperationsServiceIntegrationTest/resizeTest()#io/corbel/resources/rem/service/DefaultImageOperationsService/applyConversion(java.util.List,java.io.InputStream,java.io.OutputStream,java.util.Optional,java.lang.String)
io/corbel/resources/rem/service/DefaultImageOperationsServiceIntegrationTest/resizeTest()#io/corbel/resources/rem/model/ImageOperationDescription/ImageOperationDescription(java.lang.String,java.lang.String)
io/corbel/resources/rem/service/DefaultImageOperationsServiceIntegrationTest/resizeTest()#java/io/FileInputStream/FileInputStream(java.lang.String)
io/corbel/resources/rem/service/DefaultImageOperationsServiceIntegrationTest/resizeTest()#java/util/Arrays/asList(T[])
io/corbel/oauth/ioc/OauthIoc/getSessionBuilder(io.corbel.lib.token.factory.TokenFactory)#io/corbel/oauth/session/DefaultSessionBuilder/DefaultSessionBuilder(io.corbel.lib.token.factory.TokenFactory,long)
io/corbel/oauth/ioc/OauthIoc/getSessionBuilder(io.corbel.lib.token.factory.TokenFactory)#org/springframework/core/env/PropertyResolver/getProperty(java.lang.String)
io/corbel/oauth/ioc/OauthIoc/getSessionBuilder(io.corbel.lib.token.factory.TokenFactory)#java/lang/Integer/valueOf(java.lang.String)
io/corbel/oauth/ioc/OauthIoc/getMailValidationService(io.corbel.lib.token.factory.TokenFactory,io.corbel.oauth.service.ClientService)#io/corbel/oauth/ioc/OauthIoc/mailValidationConfiguration()
io/corbel/oauth/ioc/OauthIoc/getMailValidationService(io.corbel.lib.token.factory.TokenFactory,io.corbel.oauth.service.ClientService)#io/corbel/oauth/service/DefaultMailValidationService/DefaultMailValidationService(io.corbel.oauth.mail.EmailValidationConfiguration,io.corbel.oauth.service.SendNotificationService,io.corbel.lib.token.factory.TokenFactory,io.corbel.oauth.service.ClientService)
io/corbel/oauth/ioc/OauthIoc/getMailValidationService(io.corbel.lib.token.factory.TokenFactory,io.corbel.oauth.service.ClientService)#io/corbel/oauth/ioc/OauthIoc/getSendMailService()
io/corbel/oauth/ioc/OauthIoc/getClientService()#io/corbel/oauth/service/DefaultClientService/DefaultClientService(io.corbel.oauth.repository.ClientRepository)
io/corbel/oauth/ioc/OauthIoc/getOauthShell()#io/corbel/oauth/ioc/OauthIoc/getUserRepository()
io/corbel/oauth/ioc/OauthIoc/getAuthFilterRegistrar()#io/corbel/oauth/ioc/OauthIoc/getFilterRegistry()
io/corbel/oauth/ioc/OauthIoc/getAuthFilterRegistrar()#io/corbel/oauth/filter/AuthFilterRegistrar/AuthFilterRegistrar(io.corbel.oauth.filter.FilterRegistry)
io/corbel/oauth/ioc/OauthIoc/getMailResetPasswordService(io.corbel.lib.token.factory.TokenFactory,io.corbel.oauth.service.SendNotificationService,io.corbel.oauth.service.ClientService)#io/corbel/oauth/ioc/OauthIoc/getMailResetPasswordConfiguration()
io/corbel/oauth/ioc/OauthIoc/getMailResetPasswordService(io.corbel.lib.token.factory.TokenFactory,io.corbel.oauth.service.SendNotificationService,io.corbel.oauth.service.ClientService)#io/corbel/oauth/service/DefaultMailResetPasswordService/DefaultMailResetPasswordService(io.corbel.oauth.mail.NotificationConfiguration,io.corbel.oauth.service.SendNotificationService,io.corbel.lib.token.factory.TokenFactory)
io/corbel/oauth/ioc/OauthIoc/getMailChangePasswordService()#io/corbel/oauth/service/DefaultMailChangePasswordService/DefaultMailChangePasswordService(java.lang.String,io.corbel.oauth.service.SendNotificationService)
io/corbel/oauth/ioc/OauthIoc/getMailChangePasswordService()#org/springframework/core/env/PropertyResolver/getProperty(java.lang.String)
io/corbel/oauth/ioc/OauthIoc/getMailChangePasswordService()#io/corbel/oauth/ioc/OauthIoc/getSendMailService()
io/corbel/oauth/ioc/OauthIoc/getAuthorizeResource(io.corbel.lib.token.factory.TokenFactory,io.corbel.oauth.service.UserService,io.corbel.oauth.service.ClientService,io.corbel.oauth.session.SessionBuilder)#io/corbel/oauth/ioc/OauthIoc/getExpireTime()
io/corbel/oauth/ioc/OauthIoc/getAuthorizeResource(io.corbel.lib.token.factory.TokenFactory,io.corbel.oauth.service.UserService,io.corbel.oauth.service.ClientService,io.corbel.oauth.session.SessionBuilder)#io/corbel/oauth/ioc/OauthIoc/getSessionCookieFactory()
io/corbel/oauth/ioc/OauthIoc/getAuthorizeResource(io.corbel.lib.token.factory.TokenFactory,io.corbel.oauth.service.UserService,io.corbel.oauth.service.ClientService,io.corbel.oauth.session.SessionBuilder)#io/corbel/oauth/ioc/OauthIoc/getFilterRegistry()
io/corbel/oauth/ioc/OauthIoc/getAuthorizeResource(io.corbel.lib.token.factory.TokenFactory,io.corbel.oauth.service.UserService,io.corbel.oauth.service.ClientService,io.corbel.oauth.session.SessionBuilder)#io/corbel/oauth/api/AuthorizeResource/AuthorizeResource(io.corbel.oauth.service.UserService,io.corbel.lib.token.factory.TokenFactory,io.corbel.oauth.service.ClientService,io.corbel.oauth.session.SessionCookieFactory,io.corbel.oauth.token.TokenExpireTime,io.corbel.oauth.session.SessionBuilder,io.corbel.oauth.filter.FilterRegistry)
io/corbel/oauth/ioc/OauthIoc/getOAuthProvider(io.corbel.lib.token.parser.TokenParser)#io/dropwizard/auth/oauth/OAuthFactory/OAuthFactory(io.dropwizard.auth.Authenticator,java.lang.String,java.lang.Class)
io/corbel/oauth/ioc/OauthIoc/getOAuthProvider(io.corbel.lib.token.parser.TokenParser)#io/corbel/oauth/api/auth/TokenAuthenticator/TokenAuthenticator(io.corbel.lib.token.parser.TokenParser)
io/corbel/oauth/ioc/OauthIoc/getOAuthProvider(io.corbel.lib.token.parser.TokenParser)#io/dropwizard/auth/oauth/OAuthFactory/responseBuilder(io.dropwizard.auth.UnauthorizedHandler)
io/corbel/oauth/ioc/OauthIoc/getOAuthProvider(io.corbel.lib.token.parser.TokenParser)#io/corbel/oauth/ioc/OauthIoc/getUnauthorizedHandler()
io/corbel/oauth/ioc/OauthIoc/getOAuthProvider(io.corbel.lib.token.parser.TokenParser)#io/corbel/lib/ws/auth/OAuthProvider/OAuthProvider(io.dropwizard.auth.AuthFactory)
io/corbel/oauth/ioc/OauthIoc/getExpireTime()#io/corbel/oauth/token/TokenExpireTime/TokenExpireTime(long,long)
io/corbel/oauth/ioc/OauthIoc/getExpireTime()#org/springframework/core/env/PropertyResolver/getProperty(java.lang.String,java.lang.Class)
io/corbel/oauth/ioc/OauthIoc/getSessionCookieFactory()#org/springframework/core/env/PropertyResolver/getProperty(java.lang.String,java.lang.Class)
io/corbel/oauth/ioc/OauthIoc/getSessionCookieFactory()#org/springframework/core/env/PropertyResolver/getProperty(java.lang.String)
io/corbel/oauth/ioc/OauthIoc/getSessionCookieFactory()#io/corbel/oauth/session/DefaultSessionCookieFactory/DefaultSessionCookieFactory(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Boolean)
io/corbel/oauth/ioc/OauthIoc/mailValidationConfiguration()#org/springframework/core/env/PropertyResolver/getProperty(java.lang.String)
io/corbel/oauth/ioc/OauthIoc/mailValidationConfiguration()#io/corbel/oauth/mail/EmailValidationConfiguration/EmailValidationConfiguration(java.lang.String,java.lang.String,long,boolean)
io/corbel/oauth/ioc/OauthIoc/mailValidationConfiguration()#org/springframework/core/env/PropertyResolver/getProperty(java.lang.String,java.lang.Class)
io/corbel/oauth/ioc/OauthIoc/getUserRepository()#io/corbel/oauth/repository/decorator/LowerCaseDecorator/LowerCaseDecorator(io.corbel.oauth.repository.UserRepository)
io/corbel/oauth/ioc/OauthIoc/getAccessTokenResource(io.corbel.lib.token.parser.TokenParser,io.corbel.lib.token.factory.TokenFactory)#io/corbel/oauth/ioc/OauthIoc/getExpireTime()
io/corbel/oauth/ioc/OauthIoc/getAccessTokenResource(io.corbel.lib.token.parser.TokenParser,io.corbel.lib.token.factory.TokenFactory)#io/corbel/oauth/api/TokenResource/TokenResource(io.corbel.lib.token.parser.TokenParser,io.corbel.lib.token.factory.TokenFactory,io.corbel.oauth.service.ClientService,io.corbel.oauth.repository.UserRepository,io.corbel.oauth.token.TokenExpireTime)
io/corbel/oauth/ioc/OauthIoc/getAccessTokenResource(io.corbel.lib.token.parser.TokenParser,io.corbel.lib.token.factory.TokenFactory)#io/corbel/oauth/ioc/OauthIoc/getUserRepository()
io/corbel/oauth/ioc/OauthIoc/getAccessTokenResource(io.corbel.lib.token.parser.TokenParser,io.corbel.lib.token.factory.TokenFactory)#io/corbel/oauth/ioc/OauthIoc/getClientService()
io/corbel/oauth/ioc/OauthIoc/getUserService(io.corbel.oauth.service.MailValidationService,io.corbel.oauth.service.MailResetPasswordService,io.corbel.oauth.service.MailChangePasswordService)#io/corbel/oauth/ioc/OauthIoc/getUserRepository()
io/corbel/oauth/ioc/OauthIoc/getUserService(io.corbel.oauth.service.MailValidationService,io.corbel.oauth.service.MailResetPasswordService,io.corbel.oauth.service.MailChangePasswordService)#io/corbel/oauth/service/DefaultUserService/DefaultUserService(io.corbel.oauth.repository.UserRepository,io.corbel.oauth.service.MailValidationService,io.corbel.oauth.service.MailResetPasswordService,io.corbel.oauth.service.MailChangePasswordService)
io/corbel/oauth/ioc/OauthIoc/getFilterRegistry()#io/corbel/oauth/filter/InMemoryFilterRegistry/InMemoryFilterRegistry()
io/corbel/oauth/ioc/OauthIoc/getBasicAuthProvider()#io/dropwizard/auth/basic/BasicAuthFactory/BasicAuthFactory(io.dropwizard.auth.Authenticator,java.lang.String,java.lang.Class)
io/corbel/oauth/ioc/OauthIoc/getBasicAuthProvider()#io/corbel/oauth/ioc/OauthIoc/getUnauthorizedHandler()
io/corbel/oauth/ioc/OauthIoc/getBasicAuthProvider()#io/corbel/lib/ws/auth/BasicAuthProvider/BasicAuthProvider(io.dropwizard.auth.AuthFactory)
io/corbel/oauth/ioc/OauthIoc/getBasicAuthProvider()#io/dropwizard/auth/basic/BasicAuthFactory/responseBuilder(io.dropwizard.auth.UnauthorizedHandler)
io/corbel/oauth/ioc/OauthIoc/getBasicAuthProvider()#io/corbel/oauth/api/auth/ClientCredentialsAuthenticator/ClientCredentialsAuthenticator(io.corbel.oauth.repository.ClientRepository)
io/corbel/oauth/ioc/OauthIoc/getMailResetPasswordConfiguration()#io/corbel/oauth/mail/NotificationConfiguration/NotificationConfiguration(java.lang.String,java.lang.String,long)
io/corbel/oauth/ioc/OauthIoc/getMailResetPasswordConfiguration()#org/springframework/core/env/PropertyResolver/getProperty(java.lang.String)
io/corbel/oauth/ioc/OauthIoc/getMailResetPasswordConfiguration()#org/springframework/core/env/PropertyResolver/getProperty(java.lang.String,java.lang.Class)
io/corbel/oauth/ioc/OauthIoc/getUsernameResource(io.corbel.oauth.service.UserService)#io/corbel/oauth/api/UsernameResource/UsernameResource(io.corbel.oauth.service.UserService)
io/corbel/oauth/ioc/OauthIoc/getUserResource(io.corbel.oauth.service.UserService,io.corbel.oauth.service.ClientService)#io/corbel/oauth/api/UserResource/UserResource(io.corbel.oauth.service.UserService,io.corbel.oauth.service.ClientService)
io/corbel/oauth/ioc/OauthIoc/getUnauthorizedHandler()#io/corbel/lib/ws/auth/JsonUnauthorizedHandler/JsonUnauthorizedHandler()
io/corbel/oauth/ioc/OauthIoc/getSendMailService()#io/corbel/oauth/service/DefaultSendNotificationService/DefaultSendNotificationService(io.corbel.eventbus.service.EventBus)
io/corbel/oauth/ioc/OauthIoc/getSignoutResource(io.corbel.oauth.session.SessionCookieFactory)#io/corbel/oauth/api/SignoutResource/SignoutResource(io.corbel.oauth.session.SessionCookieFactory)
io/corbel/oauth/ioc/OauthIoc/getGson()#com/google/gson/Gson/Gson()
io/corbel/oauth/ioc/OauthIoc/getSessionProvider(io.corbel.lib.token.parser.TokenParser)#io/corbel/lib/token/provider/SessionProvider/SessionProvider(io.corbel.lib.token.parser.TokenParser)
io/corbel/iam/auth/OauthParams/getJWTAttribute(net.oauth.jsontoken.JsonToken,java.lang.String)#com/google/gson/JsonPrimitive/getAsString()
io/corbel/iam/auth/OauthParams/getJWTAttribute(net.oauth.jsontoken.JsonToken,java.lang.String)#net/oauth/jsontoken/JsonToken/getParamAsPrimitive(java.lang.String)
io/corbel/iam/auth/OauthParams/isMissing()#org/apache/commons/lang3/StringUtils/isBlank(java.lang.CharSequence)
io/corbel/iam/auth/OauthParams/createFromJWT(net.oauth.jsontoken.JsonToken)#io/corbel/iam/auth/OauthParams/OauthParams()
io/corbel/iam/auth/OauthParams/createFromJWT(net.oauth.jsontoken.JsonToken)#io/corbel/iam/auth/OauthParams/getJWTAttribute(net.oauth.jsontoken.JsonToken,java.lang.String)
io/corbel/iam/auth/OauthParams/createFromJWT(net.oauth.jsontoken.JsonToken)#io/corbel/iam/auth/OauthParams/setAccessToken(java.lang.String)
io/corbel/iam/auth/OauthParams/createFromJWT(net.oauth.jsontoken.JsonToken)#io/corbel/iam/auth/OauthParams/setCode(java.lang.String)
io/corbel/iam/auth/OauthParams/createFromJWT(net.oauth.jsontoken.JsonToken)#io/corbel/iam/auth/OauthParams/setToken(java.lang.String)
io/corbel/iam/auth/OauthParams/createFromJWT(net.oauth.jsontoken.JsonToken)#io/corbel/iam/auth/OauthParams/setVerifier(java.lang.String)
io/corbel/iam/auth/OauthParams/createFromJWT(net.oauth.jsontoken.JsonToken)#io/corbel/iam/auth/OauthParams/setRedirectUri(java.lang.String)
io/corbel/iam/auth/OauthParams/createFromJWT(net.oauth.jsontoken.JsonToken)#io/corbel/iam/auth/OauthParams/isEmpty()
io/corbel/resources/rem/restor/RestorGetRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/resources/rem/model/RestorObject/getInputStream()
io/corbel/resources/rem/restor/RestorGetRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#javax/ws/rs/core/Response/ResponseBuilder/build()
io/corbel/resources/rem/restor/RestorGetRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/resources/rem/restor/AbstractRestorRem/getMediaType(io.corbel.resources.rem.request.RequestParameters)
io/corbel/resources/rem/restor/RestorGetRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/resources/rem/dao/RestorDao/getObject(io.corbel.resources.rem.model.RestorResourceUri)
io/corbel/resources/rem/restor/RestorGetRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/resources/rem/request/ResourceId/getId()
io/corbel/resources/rem/restor/RestorGetRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#javax/ws/rs/core/Response/ok()
io/corbel/resources/rem/restor/RestorGetRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#javax/ws/rs/core/Response/ResponseBuilder/entity(java.lang.Object)
io/corbel/resources/rem/restor/RestorGetRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#java/lang/String/toString()
io/corbel/resources/rem/restor/RestorGetRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/resources/rem/model/RestorObject/getEtag()
io/corbel/resources/rem/restor/RestorGetRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/lib/ws/api/error/ErrorResponseFactory/getInstance()
io/corbel/resources/rem/restor/RestorGetRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#javax/ws/rs/core/Response/ResponseBuilder/header(java.lang.String,java.lang.Object)
io/corbel/resources/rem/restor/RestorGetRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/resources/rem/request/RequestParameters/getRequestedDomain()
io/corbel/resources/rem/restor/RestorGetRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/resources/rem/model/RestorResourceUri/RestorResourceUri(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
io/corbel/resources/rem/restor/RestorGetRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/resources/rem/model/RestorObject/getMediaType()
io/corbel/resources/rem/restor/RestorGetRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/lib/ws/api/error/ErrorResponseFactory/notFound()
io/corbel/resources/rem/restor/RestorGetRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#javax/ws/rs/core/Response/ResponseBuilder/type(java.lang.String)
io/corbel/resources/rem/restor/RestorGetRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/resources/rem/model/RestorObject/getContentLength()
io/corbel/resources/rem/resmi/ResmiPostRem/getUserIdFromToken(io.corbel.resources.rem.request.RequestParameters)#java/util/Optional/ofNullable(T)
io/corbel/resources/rem/resmi/ResmiPostRem/getUserIdFromToken(io.corbel.resources.rem.request.RequestParameters)#java/util/Optional/map(java.util.function.Function)
io/corbel/resources/rem/resmi/ResmiPostRem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional)#io/corbel/resources/rem/resmi/AbstractResmiRem/buildCollectionUri(java.lang.String,java.lang.String)
io/corbel/resources/rem/resmi/ResmiPostRem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional)#java/util/Optional/orElse(T)
io/corbel/resources/rem/resmi/ResmiPostRem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional)#io/corbel/resources/rem/request/RequestParameters/getRequestedDomain()
io/corbel/resources/rem/resmi/ResmiPostRem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional)#io/corbel/lib/ws/api/error/ErrorResponseFactory/badRequest()
io/corbel/resources/rem/resmi/ResmiPostRem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional)#java/util/Optional/map(java.util.function.Function)
io/corbel/resources/rem/resmi/ResmiPostRem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional)#io/corbel/lib/ws/api/error/ErrorResponseFactory/getInstance()
io/corbel/resources/rem/resmi/ResmiPostRem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/resources/rem/request/RequestParameters/getOptionalApiParameters()
io/corbel/resources/rem/resmi/ResmiPostRem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/lib/ws/api/error/ErrorResponseFactory/invalidEntity(java.lang.String)
io/corbel/resources/rem/resmi/ResmiPostRem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/resources/rem/request/ResourceId/getId()
io/corbel/resources/rem/resmi/ResmiPostRem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/resources/rem/resmi/AbstractResmiRem/created()
io/corbel/resources/rem/resmi/ResmiPostRem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#java/util/Optional/flatMap(java.util.function.Function)
io/corbel/resources/rem/resmi/ResmiPostRem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#java/util/Optional/orElse(T)
io/corbel/resources/rem/resmi/ResmiPostRem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/resources/rem/service/ResmiService/upsertRelation(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject)
io/corbel/resources/rem/resmi/ResmiPostRem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/lib/ws/model/Error/Error(java.lang.String,java.lang.String)
io/corbel/resources/rem/resmi/ResmiPostRem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/lib/ws/api/error/ErrorResponseFactory/badRequest(io.corbel.lib.ws.model.Error)
io/corbel/resources/rem/resmi/ResmiPostRem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/resources/rem/resmi/AbstractResmiRem/buildRelationUri(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Optional)
io/corbel/resources/rem/resmi/ResmiPostRem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#java/lang/Object/getClass()
io/corbel/resources/rem/resmi/ResmiPostRem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/lib/ws/api/error/ErrorResponseFactory/getInstance()
io/corbel/resources/rem/resmi/ResmiPostRem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/lib/ws/api/error/ErrorResponseFactory/methodNotAllowed()
io/corbel/resources/rem/resmi/ResmiPostRem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/resources/rem/request/ResourceId/isWildcard()
io/corbel/resources/rem/resmi/ResmiPostRem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#java/lang/Class/getSimpleName()
io/corbel/resources/rem/resmi/ResmiPostRem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/resources/rem/request/RequestParameters/getRequestedDomain()
io/corbel/resources/rem/resmi/ResmiPostRem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#java/lang/Throwable/getMessage()
io/corbel/resources/rem/resmi/ResmiPostRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/lib/ws/api/error/ErrorResponseFactory/getInstance()
io/corbel/resources/rem/resmi/ResmiPostRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/lib/ws/api/error/ErrorResponseFactory/methodNotAllowed()
io/corbel/resources/rem/resmi/ResmiPostRem/generateResourceLink(com.google.gson.JsonObject,java.net.URI)#com/google/gson/JsonObject/has(java.lang.String)
io/corbel/resources/rem/resmi/ResmiPostRem/generateResourceLink(com.google.gson.JsonObject,java.net.URI)#javax/ws/rs/core/UriBuilder/fromUri(java.net.URI)
io/corbel/resources/rem/resmi/ResmiPostRem/generateResourceLink(com.google.gson.JsonObject,java.net.URI)#javax/ws/rs/core/UriBuilder/build(java.lang.Object[])
io/corbel/resources/rem/resmi/ResmiPostRem/generateResourceLink(com.google.gson.JsonObject,java.net.URI)#com/google/gson/JsonElement/isJsonPrimitive()
io/corbel/resources/rem/resmi/ResmiPostRem/generateResourceLink(com.google.gson.JsonObject,java.net.URI)#com/google/gson/JsonObject/get(java.lang.String)
io/corbel/resources/rem/resmi/ResmiPostRem/generateResourceLink(com.google.gson.JsonObject,java.net.URI)#javax/ws/rs/core/UriBuilder/path(java.lang.String)
io/corbel/resources/rem/resmi/ResmiPostRem/generateResourceLink(com.google.gson.JsonObject,java.net.URI)#com/google/gson/JsonElement/getAsString()
io/corbel/resources/rem/resmi/ResmiPostRem/buildCreatedResponse(com.google.gson.JsonObject,java.net.URI)#io/corbel/lib/ws/api/error/ErrorResponseFactory/notFound()
io/corbel/resources/rem/resmi/ResmiPostRem/buildCreatedResponse(com.google.gson.JsonObject,java.net.URI)#io/corbel/resources/rem/resmi/ResmiPostRem/generateResourceLink(com.google.gson.JsonObject,java.net.URI)
io/corbel/resources/rem/resmi/ResmiPostRem/buildCreatedResponse(com.google.gson.JsonObject,java.net.URI)#io/corbel/resources/rem/resmi/AbstractResmiRem/created(java.net.URI)
io/corbel/resources/rem/resmi/ResmiPostRem/buildCreatedResponse(com.google.gson.JsonObject,java.net.URI)#io/corbel/lib/ws/api/error/ErrorResponseFactory/getInstance()
io/corbel/oauth/filter/plugin/AuthFilterPlugin/afterPropertiesSet()#io/corbel/oauth/filter/plugin/AuthFilterPlugin/init()
io/corbel/oauth/filter/plugin/AuthFilterPlugin/afterPropertiesSet()#io/corbel/oauth/filter/plugin/AuthFilterPlugin/register(io.corbel.oauth.filter.FilterRegistry)
io/corbel/iam/auth/provider/SpringAuthorizationProviderFactoryTest/getNotExistingProviderTest()#io/corbel/iam/auth/provider/SpringAuthorizationProviderFactory/getProvider(io.corbel.iam.model.Domain,java.lang.String)
io/corbel/iam/auth/provider/SpringAuthorizationProviderFactoryTest/getProviderTest()#io/corbel/iam/auth/provider/SpringAuthorizationProviderFactory/getProvider(io.corbel.iam.model.Domain,java.lang.String)
io/corbel/iam/auth/provider/SpringAuthorizationProviderFactoryTest/getProviderTest()#org/fest/assertions/api/AbstractAssert/isInstanceOf(java.lang.Class)
io/corbel/iam/auth/provider/SpringAuthorizationProviderFactoryTest/getProviderTest()#org/fest/assertions/api/Assertions/assertThat(T)
io/corbel/iam/auth/provider/SpringAuthorizationProviderFactoryTest/createMocks()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/auth/provider/SpringAuthorizationProviderFactoryTest/createMocks()#io/corbel/iam/auth/provider/FacebookProvider/FacebookProvider(io.corbel.iam.repository.IdentityRepository)
io/corbel/iam/auth/provider/SpringAuthorizationProviderFactoryTest/createMocks()#io/corbel/iam/auth/provider/SpringAuthorizationProviderFactory/setApplicationContext(org.springframework.context.ApplicationContext)
io/corbel/iam/auth/provider/SpringAuthorizationProviderFactoryTest/createMocks()#io/corbel/iam/model/Domain/getAuthConfigurations()
io/corbel/iam/auth/provider/SpringAuthorizationProviderFactoryTest/createMocks()#io/corbel/iam/auth/provider/OAuthServerProvider/OAuthServerProvider(io.corbel.iam.repository.IdentityRepository)
io/corbel/iam/auth/provider/SpringAuthorizationProviderFactoryTest/createMocks()#java/util/HashMap/HashMap()
io/corbel/iam/auth/provider/SpringAuthorizationProviderFactoryTest/createMocks()#org/springframework/beans/factory/BeanFactory/getBean(java.lang.String,java.lang.Class)
io/corbel/iam/auth/provider/SpringAuthorizationProviderFactoryTest/createMocks()#java/util/Map/put(K,V)
io/corbel/iam/auth/provider/SpringAuthorizationProviderFactoryTest/createMocks()#io/corbel/iam/auth/provider/SpringAuthorizationProviderFactory/SpringAuthorizationProviderFactory()
io/corbel/iam/auth/provider/SpringAuthorizationProviderFactoryTest/createMocks()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/iam/auth/provider/SpringAuthorizationProviderFactoryTest/createMocks()#org/mockito/Mockito/when(T)
io/corbel/oauth/api/auth/TokenAuthenticator/authenticate(java.lang.String)#com/google/common/base/Optional/absent()
io/corbel/oauth/api/auth/TokenAuthenticator/authenticate(java.lang.String)#org/slf4j/Logger/debug(java.lang.String,java.lang.Object)
io/corbel/oauth/api/auth/TokenAuthenticator/authenticate(java.lang.String)#java/lang/Throwable/getMessage()
io/corbel/oauth/api/auth/TokenAuthenticator/authenticate(java.lang.String)#com/google/common/base/Optional/of(T)
io/corbel/oauth/api/auth/TokenAuthenticator/authenticate(java.lang.String)#io/corbel/lib/token/parser/TokenParser/parseAndVerify(java.lang.String)
io/corbel/resources/rem/resmi/ResmiPutRem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional)#io/corbel/resources/rem/resmi/AbstractResmiRem/buildCollectionUri(java.lang.String,java.lang.String)
io/corbel/resources/rem/resmi/ResmiPutRem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional)#java/util/Optional/orElse(T)
io/corbel/resources/rem/resmi/ResmiPutRem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional)#io/corbel/resources/rem/request/RequestParameters/getRequestedDomain()
io/corbel/resources/rem/resmi/ResmiPutRem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional)#io/corbel/lib/ws/api/error/ErrorResponseFactory/badRequest()
io/corbel/resources/rem/resmi/ResmiPutRem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional)#java/util/Optional/map(java.util.function.Function)
io/corbel/resources/rem/resmi/ResmiPutRem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional)#io/corbel/lib/ws/api/error/ErrorResponseFactory/getInstance()
io/corbel/resources/rem/resmi/ResmiPutRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/resources/rem/resmi/AbstractResmiRem/buildResourceUri(java.lang.String,java.lang.String,java.lang.String)
io/corbel/resources/rem/resmi/ResmiPutRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/resources/rem/request/ResourceId/getId()
io/corbel/resources/rem/resmi/ResmiPutRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#java/util/Optional/orElse(T)
io/corbel/resources/rem/resmi/ResmiPutRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/resources/rem/request/RequestParameters/getRequestedDomain()
io/corbel/resources/rem/resmi/ResmiPutRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/lib/ws/api/error/ErrorResponseFactory/badRequest()
io/corbel/resources/rem/resmi/ResmiPutRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#java/util/Optional/map(java.util.function.Function)
io/corbel/resources/rem/resmi/ResmiPutRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/lib/ws/api/error/ErrorResponseFactory/getInstance()
io/corbel/resources/rem/resmi/ResmiPutRem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/resources/rem/request/RequestParameters/getOptionalApiParameters()
io/corbel/resources/rem/resmi/ResmiPutRem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#java/util/Optional/get()
io/corbel/resources/rem/resmi/ResmiPutRem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#java/util/Optional/filter(java.util.function.Predicate)
io/corbel/resources/rem/resmi/ResmiPutRem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/resources/rem/request/ResourceId/getId()
io/corbel/resources/rem/resmi/ResmiPutRem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/resources/rem/resmi/AbstractResmiRem/created()
io/corbel/resources/rem/resmi/ResmiPutRem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#java/util/Optional/flatMap(java.util.function.Function)
io/corbel/resources/rem/resmi/ResmiPutRem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#java/util/Optional/orElse(T)
io/corbel/resources/rem/resmi/ResmiPutRem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/resources/rem/service/ResmiService/upsertRelation(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject)
io/corbel/resources/rem/resmi/ResmiPutRem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#java/util/Optional/ofNullable(T)
io/corbel/resources/rem/resmi/ResmiPutRem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/lib/ws/api/error/ErrorResponseFactory/badRequest(io.corbel.lib.ws.model.Error)
io/corbel/resources/rem/resmi/ResmiPutRem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/resources/rem/service/ResmiService/condicionalUpdateRelation(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject,java.util.List)
io/corbel/resources/rem/resmi/ResmiPutRem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/lib/ws/api/error/ErrorResponseFactory/preconditionFailed(java.lang.String)
io/corbel/resources/rem/resmi/ResmiPutRem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#java/net/URLDecoder/decode(java.lang.String,java.lang.String)
io/corbel/resources/rem/resmi/ResmiPutRem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#java/lang/Object/getClass()
io/corbel/resources/rem/resmi/ResmiPutRem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/lib/ws/api/error/ErrorResponseFactory/getInstance()
io/corbel/resources/rem/resmi/ResmiPutRem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#com/google/gson/JsonElement/getAsString()
io/corbel/resources/rem/resmi/ResmiPutRem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/resources/rem/request/ResourceId/isWildcard()
io/corbel/resources/rem/resmi/ResmiPutRem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#java/lang/Class/getSimpleName()
io/corbel/resources/rem/resmi/ResmiPutRem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/lib/ws/api/error/ErrorResponseFactory/invalidEntity(java.lang.String)
io/corbel/resources/rem/resmi/ResmiPutRem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/resources/rem/dao/RelationMoveOperation/create(java.lang.String)
io/corbel/resources/rem/resmi/ResmiPutRem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/resources/rem/request/RequestParameters/getRequestedDomain()
io/corbel/resources/rem/resmi/ResmiPutRem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#java/lang/Throwable/getMessage()
io/corbel/resources/rem/resmi/ResmiPutRem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/resources/rem/request/RelationParameters/getPredicateResource()
io/corbel/resources/rem/resmi/ResmiPutRem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/lib/ws/model/Error/Error(java.lang.String,java.lang.String)
io/corbel/resources/rem/resmi/ResmiPutRem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/resources/rem/resmi/AbstractResmiRem/buildRelationUri(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Optional)
io/corbel/resources/rem/resmi/ResmiPutRem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#java/util/Optional/empty()
io/corbel/resources/rem/resmi/ResmiPutRem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/resources/rem/resmi/AbstractResmiRem/noContent()
io/corbel/resources/rem/resmi/ResmiPutRem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/resources/rem/service/ResmiService/moveRelation(io.corbel.resources.rem.model.ResourceUri,io.corbel.resources.rem.dao.RelationMoveOperation)
io/corbel/resources/rem/resmi/ResmiPutRem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/lib/ws/api/error/ErrorResponseFactory/methodNotAllowed()
io/corbel/resources/rem/resmi/ResmiPutRem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#java/util/Optional/isPresent()
io/corbel/resources/rem/resmi/ResmiPutRem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#com/google/gson/JsonObject/get(java.lang.String)
io/corbel/resources/rem/resmi/ResmiPutRem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/resources/rem/dao/JsonRelation/validateUri(java.lang.String)
io/corbel/resources/rem/dao/DefaultKeyNormalizerTest/testRawResource()#org/springframework/util/MimeType/toString()
io/corbel/resources/rem/dao/DefaultKeyNormalizerTest/testRawResource()#io/corbel/resources/rem/dao/DefaultKeyNormalizer/normalize(io.corbel.resources.rem.model.RestorResourceUri)
io/corbel/resources/rem/dao/DefaultKeyNormalizerTest/testRawResource()#io/corbel/resources/rem/model/RestorResourceUri/RestorResourceUri(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
io/corbel/resources/rem/dao/DefaultKeyNormalizerTest/testRawResource()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/resources/rem/dao/DefaultKeyNormalizerTest/testRawResource()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/resources/rem/dao/DefaultKeyNormalizerTest/testNormalizedResource()#org/springframework/util/MimeType/toString()
io/corbel/resources/rem/dao/DefaultKeyNormalizerTest/testNormalizedResource()#io/corbel/resources/rem/dao/DefaultKeyNormalizer/normalize(io.corbel.resources.rem.model.RestorResourceUri)
io/corbel/resources/rem/dao/DefaultKeyNormalizerTest/testNormalizedResource()#io/corbel/resources/rem/model/RestorResourceUri/RestorResourceUri(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
io/corbel/resources/rem/dao/DefaultKeyNormalizerTest/testNormalizedResource()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/resources/rem/dao/DefaultKeyNormalizerTest/testNormalizedResource()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/resources/rem/dao/DefaultKeyNormalizerTest/setup()#io/corbel/resources/rem/dao/DefaultKeyNormalizer/DefaultKeyNormalizer()
io/corbel/resources/rem/i18n/I18nDeleteRemTest/testDeleteResourceNotLanguage()#io/corbel/resources/rem/i18n/I18nDeleteRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)
io/corbel/resources/rem/i18n/I18nDeleteRemTest/testDeleteResourceNotLanguage()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/i18n/I18nDeleteRemTest/testDeleteResourceNotLanguage()#io/corbel/resources/rem/request/ResourceId/ResourceId(java.lang.String)
io/corbel/resources/rem/i18n/I18nDeleteRemTest/testDeleteResourceNotLanguage()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/resources/rem/i18n/I18nDeleteRemTest/testDeleteResourceNotLanguage()#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/rem/i18n/I18nDeleteRemTest/testDeleteResourceNotLanguage()#javax/ws/rs/core/MultivaluedHashMap/MultivaluedHashMap()
io/corbel/resources/rem/i18n/I18nDeleteRemTest/testDeleteResourceNotLanguage()#java/util/Optional/empty()
io/corbel/resources/rem/i18n/I18nDeleteRemTest/testDeleteResourceNotLanguage()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/resources/rem/i18n/I18nDeleteRemTest/testDeleteResourceNotLanguage()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/i18n/I18nDeleteRemTest/testDeleteResourceNotLanguage()#io/corbel/resources/rem/request/RequestParameters/getHeaders()
io/corbel/resources/rem/i18n/I18nDeleteRemTest/testDeleteResource()#io/corbel/resources/rem/request/ResourceId/getId()
io/corbel/resources/rem/i18n/I18nDeleteRemTest/testDeleteResource()#io/corbel/resources/rem/i18n/I18nDeleteRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)
io/corbel/resources/rem/i18n/I18nDeleteRemTest/testDeleteResource()#org/mockito/Mockito/verify(T)
io/corbel/resources/rem/i18n/I18nDeleteRemTest/testDeleteResource()#io/corbel/resources/rem/request/ResourceId/ResourceId(java.lang.String)
io/corbel/resources/rem/i18n/I18nDeleteRemTest/testDeleteResource()#io/corbel/resources/rem/Rem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)
io/corbel/resources/rem/i18n/I18nDeleteRemTest/testDeleteResource()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/resources/rem/i18n/I18nDeleteRemTest/testDeleteResource()#javax/ws/rs/core/MultivaluedHashMap/MultivaluedHashMap()
io/corbel/resources/rem/i18n/I18nDeleteRemTest/testDeleteResource()#javax/ws/rs/core/MultivaluedMap/add(K,V)
io/corbel/resources/rem/i18n/I18nDeleteRemTest/testDeleteResource()#java/util/Optional/empty()
io/corbel/resources/rem/i18n/I18nDeleteRemTest/testDeleteResource()#org/fest/assertions/api/Assertions/assertThat(T)
io/corbel/resources/rem/i18n/I18nDeleteRemTest/testDeleteResource()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/resources/rem/i18n/I18nDeleteRemTest/testDeleteResource()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/i18n/I18nDeleteRemTest/testDeleteResource()#io/corbel/resources/rem/request/RequestParameters/getHeaders()
io/corbel/resources/rem/i18n/I18nDeleteRemTest/testDeleteResource()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/resources/rem/i18n/I18nDeleteRemTest/testDeleteResource()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/i18n/I18nDeleteRemTest/setup()#io/corbel/resources/rem/request/RequestParameters/getApiParameters()
io/corbel/resources/rem/i18n/I18nDeleteRemTest/setup()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/i18n/I18nDeleteRemTest/setup()#io/corbel/resources/rem/service/RemService/getRem(java.lang.String,java.util.List,org.springframework.http.HttpMethod)
io/corbel/resources/rem/i18n/I18nDeleteRemTest/setup()#java/util/Arrays/asList(T[])
io/corbel/resources/rem/i18n/I18nDeleteRemTest/setup()#io/corbel/resources/rem/i18n/I18nBaseRem/setRemService(io.corbel.resources.rem.service.RemService)
io/corbel/resources/rem/i18n/I18nDeleteRemTest/setup()#org/mockito/Matchers/eq(T)
io/corbel/resources/rem/i18n/I18nDeleteRemTest/setup()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/resources/rem/i18n/I18nDeleteRemTest/setup()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/i18n/I18nDeleteRemTest/setup()#org/mockito/Matchers/anyString()
io/corbel/resources/rem/search/DefaultElasticSearchService/setupMapping(java.lang.String,java.lang.String,java.lang.String)#org/elasticsearch/client/IndicesAdminClient/putMapping(org.elasticsearch.action.admin.indices.mapping.put.PutMappingRequest)
io/corbel/resources/rem/search/DefaultElasticSearchService/setupMapping(java.lang.String,java.lang.String,java.lang.String)#org/elasticsearch/action/ActionFuture/actionGet()
io/corbel/resources/rem/search/DefaultElasticSearchService/setupMapping(java.lang.String,java.lang.String,java.lang.String)#org/elasticsearch/client/IndicesAdminClient/close(org.elasticsearch.action.admin.indices.close.CloseIndexRequest)
io/corbel/resources/rem/search/DefaultElasticSearchService/setupMapping(java.lang.String,java.lang.String,java.lang.String)#org/elasticsearch/client/AdminClient/indices()
io/corbel/resources/rem/search/DefaultElasticSearchService/setupMapping(java.lang.String,java.lang.String,java.lang.String)#org/elasticsearch/action/admin/indices/mapping/put/PutMappingRequest/PutMappingRequest(java.lang.String[])
io/corbel/resources/rem/search/DefaultElasticSearchService/setupMapping(java.lang.String,java.lang.String,java.lang.String)#io/corbel/resources/rem/search/DefaultElasticSearchService/indexExists(java.lang.String)
io/corbel/resources/rem/search/DefaultElasticSearchService/setupMapping(java.lang.String,java.lang.String,java.lang.String)#org/elasticsearch/action/admin/indices/open/OpenIndexRequest/OpenIndexRequest(java.lang.String[])
io/corbel/resources/rem/search/DefaultElasticSearchService/setupMapping(java.lang.String,java.lang.String,java.lang.String)#org/elasticsearch/client/Client/admin()
io/corbel/resources/rem/search/DefaultElasticSearchService/setupMapping(java.lang.String,java.lang.String,java.lang.String)#org/elasticsearch/client/IndicesAdminClient/open(org.elasticsearch.action.admin.indices.open.OpenIndexRequest)
io/corbel/resources/rem/search/DefaultElasticSearchService/setupMapping(java.lang.String,java.lang.String,java.lang.String)#org/elasticsearch/action/admin/indices/mapping/put/PutMappingRequest/type(java.lang.String)
io/corbel/resources/rem/search/DefaultElasticSearchService/setupMapping(java.lang.String,java.lang.String,java.lang.String)#org/elasticsearch/action/admin/indices/mapping/put/PutMappingRequest/source(java.lang.String)
io/corbel/resources/rem/search/DefaultElasticSearchService/setupMapping(java.lang.String,java.lang.String,java.lang.String)#org/elasticsearch/action/admin/indices/close/CloseIndexRequest/CloseIndexRequest(java.lang.String[])
io/corbel/resources/rem/search/DefaultElasticSearchService/setupMapping(java.lang.String,java.lang.String,java.lang.String)#org/elasticsearch/action/admin/indices/mapping/put/PutMappingRequest/updateAllTypes(boolean)
io/corbel/resources/rem/search/DefaultElasticSearchService/search(java.lang.String,java.lang.String,java.lang.String,java.util.Map,int,int)#io/corbel/resources/rem/search/DefaultElasticSearchService/search(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Optional,java.util.Optional)
io/corbel/resources/rem/search/DefaultElasticSearchService/search(java.lang.String,java.lang.String,java.lang.String,java.util.Map,int,int)#io/corbel/resources/rem/search/DefaultElasticSearchService/extractResponse(org.elasticsearch.action.search.SearchResponse)
io/corbel/resources/rem/search/DefaultElasticSearchService/search(java.lang.String,java.lang.String,java.lang.String,java.util.Map,int,int)#java/util/Optional/of(T)
io/corbel/resources/rem/search/DefaultElasticSearchService/search(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Optional,java.util.Optional)#org/elasticsearch/action/search/SearchRequestBuilder/setSearchType(org.elasticsearch.action.search.SearchType)
io/corbel/resources/rem/search/DefaultElasticSearchService/search(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Optional,java.util.Optional)#org/elasticsearch/client/Client/prepareSearch(java.lang.String[])
io/corbel/resources/rem/search/DefaultElasticSearchService/search(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Optional,java.util.Optional)#org/elasticsearch/action/search/SearchRequestBuilder/setSize(int)
io/corbel/resources/rem/search/DefaultElasticSearchService/search(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Optional,java.util.Optional)#org/elasticsearch/action/search/SearchRequestBuilder/setTemplateName(java.lang.String)
io/corbel/resources/rem/search/DefaultElasticSearchService/search(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Optional,java.util.Optional)#io/corbel/resources/rem/search/DefaultElasticSearchService/executeAndGetSearchRequest(org.elasticsearch.action.search.SearchRequestBuilder)
io/corbel/resources/rem/search/DefaultElasticSearchService/search(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Optional,java.util.Optional)#org/elasticsearch/action/search/SearchRequestBuilder/setTemplateType(org.elasticsearch.script.ScriptService.ScriptType)
io/corbel/resources/rem/search/DefaultElasticSearchService/search(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Optional,java.util.Optional)#org/elasticsearch/action/search/SearchRequestBuilder/setTemplateParams(java.util.Map)
io/corbel/resources/rem/search/DefaultElasticSearchService/search(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Optional,java.util.Optional)#java/util/Optional/get()
io/corbel/resources/rem/search/DefaultElasticSearchService/search(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Optional,java.util.Optional)#org/elasticsearch/action/search/SearchRequestBuilder/setFrom(int)
io/corbel/resources/rem/search/DefaultElasticSearchService/search(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Optional,java.util.Optional)#org/elasticsearch/action/search/SearchRequestBuilder/setTypes(java.lang.String[])
io/corbel/resources/rem/search/DefaultElasticSearchService/search(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Optional,java.util.Optional)#java/util/Optional/isPresent()
io/corbel/resources/rem/search/DefaultElasticSearchService/executeAndGetSearchRequest(org.elasticsearch.action.search.SearchRequestBuilder)#org/elasticsearch/action/ActionRequestBuilder/execute()
io/corbel/resources/rem/search/DefaultElasticSearchService/executeAndGetSearchRequest(org.elasticsearch.action.search.SearchRequestBuilder)#java/lang/Throwable/getMessage()
io/corbel/resources/rem/search/DefaultElasticSearchService/executeAndGetSearchRequest(org.elasticsearch.action.search.SearchRequestBuilder)#io/corbel/resources/rem/resmi/exception/InvalidApiParamException/InvalidApiParamException(java.lang.String)
io/corbel/resources/rem/search/DefaultElasticSearchService/executeAndGetSearchRequest(org.elasticsearch.action.search.SearchRequestBuilder)#org/elasticsearch/action/search/SearchPhaseExecutionException/status()
io/corbel/resources/rem/search/DefaultElasticSearchService/executeAndGetSearchRequest(org.elasticsearch.action.search.SearchRequestBuilder)#java/lang/Enum/equals(java.lang.Object)
io/corbel/resources/rem/search/DefaultElasticSearchService/executeAndGetSearchRequest(org.elasticsearch.action.search.SearchRequestBuilder)#org/elasticsearch/action/ActionFuture/actionGet()
io/corbel/resources/rem/search/DefaultElasticSearchService/indexDocument(java.lang.String,java.lang.String,java.lang.String,java.lang.String)#org/elasticsearch/client/Client/update(org.elasticsearch.action.update.UpdateRequest)
io/corbel/resources/rem/search/DefaultElasticSearchService/indexDocument(java.lang.String,java.lang.String,java.lang.String,java.lang.String)#org/elasticsearch/action/update/UpdateRequest/UpdateRequest(java.lang.String,java.lang.String,java.lang.String)
io/corbel/resources/rem/search/DefaultElasticSearchService/indexDocument(java.lang.String,java.lang.String,java.lang.String,java.lang.String)#org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)
io/corbel/resources/rem/search/DefaultElasticSearchService/indexDocument(java.lang.String,java.lang.String,java.lang.String,java.lang.String)#java/util/concurrent/Future/get()
io/corbel/resources/rem/search/DefaultElasticSearchService/indexDocument(java.lang.String,java.lang.String,java.lang.String,java.lang.String)#org/elasticsearch/action/update/UpdateRequest/doc(java.lang.String)
io/corbel/resources/rem/search/DefaultElasticSearchService/indexDocument(java.lang.String,java.lang.String,java.lang.String,java.lang.String)#org/elasticsearch/action/update/UpdateRequest/docAsUpsert(boolean)
io/corbel/resources/rem/search/DefaultElasticSearchService/count(java.lang.String,java.lang.String,java.lang.String,java.util.List)#org/elasticsearch/action/ActionRequestBuilder/execute()
io/corbel/resources/rem/search/DefaultElasticSearchService/count(java.lang.String,java.lang.String,java.lang.String,java.util.List)#io/corbel/resources/rem/search/ElasticSearchResourceQueryBuilder/build(java.lang.String,java.util.List)
io/corbel/resources/rem/search/DefaultElasticSearchService/count(java.lang.String,java.lang.String,java.lang.String,java.util.List)#org/elasticsearch/action/count/CountResponse/getCount()
io/corbel/resources/rem/search/DefaultElasticSearchService/count(java.lang.String,java.lang.String,java.lang.String,java.util.List)#org/elasticsearch/client/Client/prepareCount(java.lang.String[])
io/corbel/resources/rem/search/DefaultElasticSearchService/count(java.lang.String,java.lang.String,java.lang.String,java.util.List)#org/elasticsearch/action/count/CountRequestBuilder/setTypes(java.lang.String[])
io/corbel/resources/rem/search/DefaultElasticSearchService/count(java.lang.String,java.lang.String,java.lang.String,java.util.List)#org/elasticsearch/action/ActionFuture/actionGet()
io/corbel/resources/rem/search/DefaultElasticSearchService/count(java.lang.String,java.lang.String,java.lang.String,java.util.List)#org/elasticsearch/action/count/CountRequestBuilder/setQuery(org.elasticsearch.index.query.QueryBuilder)
io/corbel/resources/rem/search/DefaultElasticSearchService/addAlias(java.lang.String,java.lang.String)#org/elasticsearch/action/ActionFuture/actionGet()
io/corbel/resources/rem/search/DefaultElasticSearchService/addAlias(java.lang.String,java.lang.String)#org/elasticsearch/client/AdminClient/indices()
io/corbel/resources/rem/search/DefaultElasticSearchService/addAlias(java.lang.String,java.lang.String)#org/elasticsearch/action/admin/indices/alias/IndicesAliasesRequest/addAlias(java.lang.String,java.lang.String[])
io/corbel/resources/rem/search/DefaultElasticSearchService/addAlias(java.lang.String,java.lang.String)#org/elasticsearch/action/admin/indices/alias/IndicesAliasesRequest/IndicesAliasesRequest()
io/corbel/resources/rem/search/DefaultElasticSearchService/addAlias(java.lang.String,java.lang.String)#org/elasticsearch/client/Client/admin()
io/corbel/resources/rem/search/DefaultElasticSearchService/addAlias(java.lang.String,java.lang.String)#org/elasticsearch/client/IndicesAdminClient/aliases(org.elasticsearch.action.admin.indices.alias.IndicesAliasesRequest)
io/corbel/resources/rem/search/DefaultElasticSearchService/deleteDocument(java.lang.String,java.lang.String,java.lang.String)#org/elasticsearch/action/ActionRequestBuilder/execute()
io/corbel/resources/rem/search/DefaultElasticSearchService/deleteDocument(java.lang.String,java.lang.String,java.lang.String)#org/elasticsearch/action/ActionFuture/actionGet()
io/corbel/resources/rem/search/DefaultElasticSearchService/deleteDocument(java.lang.String,java.lang.String,java.lang.String)#org/elasticsearch/client/Client/prepareDelete(java.lang.String,java.lang.String,java.lang.String)
io/corbel/resources/rem/search/DefaultElasticSearchService/count(java.lang.String,java.lang.String,java.lang.String,java.util.Map)#io/corbel/resources/rem/search/DefaultElasticSearchService/search(java.lang.String,java.lang.String,java.lang.String,java.util.Map,int,int)
io/corbel/resources/rem/search/DefaultElasticSearchService/count(java.lang.String,java.lang.String,java.lang.String,java.util.Map)#org/elasticsearch/search/SearchHits/getTotalHits()
io/corbel/resources/rem/search/DefaultElasticSearchService/count(java.lang.String,java.lang.String,java.lang.String,java.util.Map)#org/elasticsearch/action/search/SearchResponse/getHits()
io/corbel/resources/rem/search/DefaultElasticSearchService/count(java.lang.String,java.lang.String,java.lang.String,java.util.Map)#java/util/Optional/empty()
io/corbel/resources/rem/search/DefaultElasticSearchService/addTemplate(java.lang.String,java.lang.String)#org/elasticsearch/action/ActionRequestBuilder/get()
io/corbel/resources/rem/search/DefaultElasticSearchService/addTemplate(java.lang.String,java.lang.String)#org/elasticsearch/client/Client/preparePutIndexedScript(java.lang.String,java.lang.String,java.lang.String)
io/corbel/resources/rem/search/DefaultElasticSearchService/createIndex(java.lang.String,java.lang.String)#org/elasticsearch/action/admin/cluster/health/ClusterHealthRequestBuilder/setWaitForYellowStatus()
io/corbel/resources/rem/search/DefaultElasticSearchService/createIndex(java.lang.String,java.lang.String)#org/elasticsearch/action/ActionFuture/actionGet()
io/corbel/resources/rem/search/DefaultElasticSearchService/createIndex(java.lang.String,java.lang.String)#org/elasticsearch/client/Client/admin()
io/corbel/resources/rem/search/DefaultElasticSearchService/createIndex(java.lang.String,java.lang.String)#org/elasticsearch/client/ClusterAdminClient/prepareHealth(java.lang.String[])
io/corbel/resources/rem/search/DefaultElasticSearchService/createIndex(java.lang.String,java.lang.String)#org/elasticsearch/client/AdminClient/cluster()
io/corbel/resources/rem/search/DefaultElasticSearchService/createIndex(java.lang.String,java.lang.String)#org/elasticsearch/action/admin/indices/create/CreateIndexRequestBuilder/setSettings(java.lang.String)
io/corbel/resources/rem/search/DefaultElasticSearchService/createIndex(java.lang.String,java.lang.String)#org/elasticsearch/action/ActionRequestBuilder/execute()
io/corbel/resources/rem/search/DefaultElasticSearchService/createIndex(java.lang.String,java.lang.String)#org/elasticsearch/client/AdminClient/indices()
io/corbel/resources/rem/search/DefaultElasticSearchService/createIndex(java.lang.String,java.lang.String)#org/elasticsearch/client/IndicesAdminClient/prepareCreate(java.lang.String)
io/corbel/resources/rem/search/DefaultElasticSearchService/indexExists(java.lang.String)#org/elasticsearch/action/ActionRequestBuilder/execute()
io/corbel/resources/rem/search/DefaultElasticSearchService/indexExists(java.lang.String)#org/elasticsearch/action/admin/cluster/health/ClusterHealthRequestBuilder/setWaitForYellowStatus()
io/corbel/resources/rem/search/DefaultElasticSearchService/indexExists(java.lang.String)#org/elasticsearch/client/IndicesAdminClient/prepareExists(java.lang.String[])
io/corbel/resources/rem/search/DefaultElasticSearchService/indexExists(java.lang.String)#org/elasticsearch/client/AdminClient/indices()
io/corbel/resources/rem/search/DefaultElasticSearchService/indexExists(java.lang.String)#org/elasticsearch/client/Client/admin()
io/corbel/resources/rem/search/DefaultElasticSearchService/indexExists(java.lang.String)#org/elasticsearch/client/ClusterAdminClient/prepareHealth(java.lang.String[])
io/corbel/resources/rem/search/DefaultElasticSearchService/indexExists(java.lang.String)#org/elasticsearch/client/AdminClient/cluster()
io/corbel/resources/rem/search/DefaultElasticSearchService/indexExists(java.lang.String)#org/elasticsearch/action/admin/indices/exists/indices/IndicesExistsResponse/isExists()
io/corbel/resources/rem/search/DefaultElasticSearchService/indexExists(java.lang.String)#org/elasticsearch/action/ActionFuture/actionGet()
io/corbel/resources/rem/search/DefaultElasticSearchService/removeAlias(java.lang.String,java.lang.String)#org/elasticsearch/action/ActionFuture/actionGet()
io/corbel/resources/rem/search/DefaultElasticSearchService/removeAlias(java.lang.String,java.lang.String)#org/elasticsearch/client/AdminClient/indices()
io/corbel/resources/rem/search/DefaultElasticSearchService/removeAlias(java.lang.String,java.lang.String)#org/elasticsearch/action/admin/indices/alias/IndicesAliasesRequest/removeAlias(java.lang.String,java.lang.String[])
io/corbel/resources/rem/search/DefaultElasticSearchService/removeAlias(java.lang.String,java.lang.String)#org/elasticsearch/action/admin/indices/alias/IndicesAliasesRequest/IndicesAliasesRequest()
io/corbel/resources/rem/search/DefaultElasticSearchService/removeAlias(java.lang.String,java.lang.String)#org/elasticsearch/client/Client/admin()
io/corbel/resources/rem/search/DefaultElasticSearchService/removeAlias(java.lang.String,java.lang.String)#org/elasticsearch/client/IndicesAdminClient/aliases(org.elasticsearch.action.admin.indices.alias.IndicesAliasesRequest)
io/corbel/resources/rem/search/DefaultElasticSearchService/search(java.lang.String,java.lang.String,java.lang.String,java.util.List,io.corbel.lib.queries.request.Pagination,java.util.Optional)#org/elasticsearch/action/search/SearchRequestBuilder/setQuery(org.elasticsearch.index.query.QueryBuilder)
io/corbel/resources/rem/search/DefaultElasticSearchService/search(java.lang.String,java.lang.String,java.lang.String,java.util.List,io.corbel.lib.queries.request.Pagination,java.util.Optional)#org/elasticsearch/action/search/SearchRequestBuilder/setSearchType(org.elasticsearch.action.search.SearchType)
io/corbel/resources/rem/search/DefaultElasticSearchService/search(java.lang.String,java.lang.String,java.lang.String,java.util.List,io.corbel.lib.queries.request.Pagination,java.util.Optional)#org/elasticsearch/action/search/SearchRequestBuilder/addSort(java.lang.String,org.elasticsearch.search.sort.SortOrder)
io/corbel/resources/rem/search/DefaultElasticSearchService/search(java.lang.String,java.lang.String,java.lang.String,java.util.List,io.corbel.lib.queries.request.Pagination,java.util.Optional)#org/elasticsearch/client/Client/prepareSearch(java.lang.String[])
io/corbel/resources/rem/search/DefaultElasticSearchService/search(java.lang.String,java.lang.String,java.lang.String,java.util.List,io.corbel.lib.queries.request.Pagination,java.util.Optional)#org/elasticsearch/action/search/SearchRequestBuilder/setSize(int)
io/corbel/resources/rem/search/DefaultElasticSearchService/search(java.lang.String,java.lang.String,java.lang.String,java.util.List,io.corbel.lib.queries.request.Pagination,java.util.Optional)#io/corbel/resources/rem/search/DefaultElasticSearchService/executeAndGetSearchRequest(org.elasticsearch.action.search.SearchRequestBuilder)
io/corbel/resources/rem/search/DefaultElasticSearchService/search(java.lang.String,java.lang.String,java.lang.String,java.util.List,io.corbel.lib.queries.request.Pagination,java.util.Optional)#org/elasticsearch/search/sort/SortOrder/valueOf(java.lang.String)
io/corbel/resources/rem/search/DefaultElasticSearchService/search(java.lang.String,java.lang.String,java.lang.String,java.util.List,io.corbel.lib.queries.request.Pagination,java.util.Optional)#io/corbel/lib/queries/request/Sort/getField()
io/corbel/resources/rem/search/DefaultElasticSearchService/search(java.lang.String,java.lang.String,java.lang.String,java.util.List,io.corbel.lib.queries.request.Pagination,java.util.Optional)#io/corbel/lib/queries/request/Pagination/getPage()
io/corbel/resources/rem/search/DefaultElasticSearchService/search(java.lang.String,java.lang.String,java.lang.String,java.util.List,io.corbel.lib.queries.request.Pagination,java.util.Optional)#io/corbel/lib/queries/request/Sort/getDirection()
io/corbel/resources/rem/search/DefaultElasticSearchService/search(java.lang.String,java.lang.String,java.lang.String,java.util.List,io.corbel.lib.queries.request.Pagination,java.util.Optional)#java/util/Optional/get()
io/corbel/resources/rem/search/DefaultElasticSearchService/search(java.lang.String,java.lang.String,java.lang.String,java.util.List,io.corbel.lib.queries.request.Pagination,java.util.Optional)#io/corbel/lib/queries/request/Pagination/getPageSize()
io/corbel/resources/rem/search/DefaultElasticSearchService/search(java.lang.String,java.lang.String,java.lang.String,java.util.List,io.corbel.lib.queries.request.Pagination,java.util.Optional)#org/elasticsearch/action/search/SearchRequestBuilder/setFrom(int)
io/corbel/resources/rem/search/DefaultElasticSearchService/search(java.lang.String,java.lang.String,java.lang.String,java.util.List,io.corbel.lib.queries.request.Pagination,java.util.Optional)#java/lang/Enum/name()
io/corbel/resources/rem/search/DefaultElasticSearchService/search(java.lang.String,java.lang.String,java.lang.String,java.util.List,io.corbel.lib.queries.request.Pagination,java.util.Optional)#io/corbel/resources/rem/search/ElasticSearchResourceQueryBuilder/build(java.lang.String,java.util.List)
io/corbel/resources/rem/search/DefaultElasticSearchService/search(java.lang.String,java.lang.String,java.lang.String,java.util.List,io.corbel.lib.queries.request.Pagination,java.util.Optional)#io/corbel/resources/rem/search/DefaultElasticSearchService/extractResponse(org.elasticsearch.action.search.SearchResponse)
io/corbel/resources/rem/search/DefaultElasticSearchService/search(java.lang.String,java.lang.String,java.lang.String,java.util.List,io.corbel.lib.queries.request.Pagination,java.util.Optional)#org/elasticsearch/action/search/SearchRequestBuilder/setTypes(java.lang.String[])
io/corbel/resources/rem/search/DefaultElasticSearchService/search(java.lang.String,java.lang.String,java.lang.String,java.util.List,io.corbel.lib.queries.request.Pagination,java.util.Optional)#java/util/Optional/isPresent()
io/corbel/resources/rem/search/DefaultElasticSearchService/extractResponse(org.elasticsearch.action.search.SearchResponse)#org/elasticsearch/action/search/SearchResponse/getHits()
io/corbel/resources/rem/search/DefaultElasticSearchService/extractResponse(org.elasticsearch.action.search.SearchResponse)#com/google/gson/JsonArray/JsonArray()
io/corbel/resources/rem/search/DefaultElasticSearchService/extractResponse(org.elasticsearch.action.search.SearchResponse)#java/lang/Iterable/forEach(java.util.function.Consumer)
io/corbel/iam/auth/rule/PrincipalExistsAuthorizationRule/process(io.corbel.iam.auth.AuthorizationRequestContext)#io/corbel/iam/auth/AuthorizationRequestContext/getPrincipalId()
io/corbel/iam/auth/rule/PrincipalExistsAuthorizationRule/process(io.corbel.iam.auth.AuthorizationRequestContext)#io/corbel/iam/model/Client/getDomain()
io/corbel/iam/auth/rule/PrincipalExistsAuthorizationRule/process(io.corbel.iam.auth.AuthorizationRequestContext)#io/corbel/iam/utils/Message/getMessage(java.lang.Object[])
io/corbel/iam/auth/rule/PrincipalExistsAuthorizationRule/process(io.corbel.iam.auth.AuthorizationRequestContext)#io/corbel/iam/auth/AuthorizationRequestContext/hasPrincipal()
io/corbel/iam/auth/rule/PrincipalExistsAuthorizationRule/process(io.corbel.iam.auth.AuthorizationRequestContext)#io/corbel/iam/exception/NoSuchPrincipalException/NoSuchPrincipalException(java.lang.String)
io/corbel/iam/auth/rule/PrincipalExistsAuthorizationRule/process(io.corbel.iam.auth.AuthorizationRequestContext)#io/corbel/iam/auth/AuthorizationRequestContext/getPrincipal()
io/corbel/iam/auth/rule/PrincipalExistsAuthorizationRule/process(io.corbel.iam.auth.AuthorizationRequestContext)#io/corbel/iam/auth/AuthorizationRequestContext/getIssuerClient()
io/corbel/iam/auth/JsonTokenAuthorizationRequestContext/isBasic()#com/google/gson/JsonObject/has(java.lang.String)
io/corbel/iam/auth/JsonTokenAuthorizationRequestContext/isBasic()#net/oauth/jsontoken/JsonToken/getPayloadAsJsonObject()
io/corbel/iam/auth/JsonTokenAuthorizationRequestContext/getDeviceId()#java/util/Optional/ofNullable(T)
io/corbel/iam/auth/JsonTokenAuthorizationRequestContext/getDeviceId()#java/util/Optional/map(java.util.function.Function)
io/corbel/iam/auth/JsonTokenAuthorizationRequestContext/getDeviceId()#net/oauth/jsontoken/JsonToken/getPayloadAsJsonObject()
io/corbel/iam/auth/JsonTokenAuthorizationRequestContext/getDeviceId()#com/google/gson/JsonObject/get(java.lang.String)
io/corbel/iam/auth/JsonTokenAuthorizationRequestContext/getDeviceId()#java/util/Optional/orElseGet(java.util.function.Supplier)
io/corbel/iam/auth/JsonTokenAuthorizationRequestContext/isOAuth()#com/google/gson/JsonObject/has(java.lang.String)
io/corbel/iam/auth/JsonTokenAuthorizationRequestContext/isOAuth()#net/oauth/jsontoken/JsonToken/getPayloadAsJsonObject()
io/corbel/iam/auth/JsonTokenAuthorizationRequestContext/getPrincipal()#io/corbel/iam/auth/JsonTokenAuthorizationRequestContext/hasPrincipal()
io/corbel/iam/auth/JsonTokenAuthorizationRequestContext/getPrincipal()#io/corbel/iam/auth/JsonTokenAuthorizationRequestContext/getPrincipalId()
io/corbel/iam/auth/JsonTokenAuthorizationRequestContext/getPrincipal()#io/corbel/iam/auth/JsonTokenAuthorizationRequestContext/getPrincipal(java.lang.String)
io/corbel/iam/auth/JsonTokenAuthorizationRequestContext/getIssuerClientId()#net/oauth/jsontoken/JsonToken/getIssuer()
io/corbel/iam/auth/JsonTokenAuthorizationRequestContext/getOauthParams()#io/corbel/iam/auth/OauthParams/createFromJWT(net.oauth.jsontoken.JsonToken)
io/corbel/iam/auth/JsonTokenAuthorizationRequestContext/setAuthorizationExpiration(long)#org/joda/time/Instant/Instant(long)
io/corbel/iam/auth/JsonTokenAuthorizationRequestContext/setAuthorizationExpiration(long)#net/oauth/jsontoken/JsonToken/setExpiration(org.joda.time.Instant)
io/corbel/iam/auth/JsonTokenAuthorizationRequestContext/getAuthorizationExpiration()#org/joda/time/Instant/getMillis()
io/corbel/iam/auth/JsonTokenAuthorizationRequestContext/getAuthorizationExpiration()#net/oauth/jsontoken/JsonToken/getExpiration()
io/corbel/iam/auth/JsonTokenAuthorizationRequestContext/getPrincipalId()#io/corbel/iam/auth/JsonTokenAuthorizationRequestContext/hasPrincipal()
io/corbel/iam/auth/JsonTokenAuthorizationRequestContext/getPrincipalId()#net/oauth/jsontoken/JsonToken/getPayloadAsJsonObject()
io/corbel/iam/auth/JsonTokenAuthorizationRequestContext/getPrincipalId()#com/google/gson/JsonElement/getAsString()
io/corbel/iam/auth/JsonTokenAuthorizationRequestContext/getPrincipalId()#com/google/gson/JsonObject/get(java.lang.String)
io/corbel/iam/auth/JsonTokenAuthorizationRequestContext/getPrincipal(java.lang.String)#io/corbel/iam/model/Client/getDomain()
io/corbel/iam/auth/JsonTokenAuthorizationRequestContext/getPrincipal(java.lang.String)#io/corbel/iam/auth/JsonTokenAuthorizationRequestContext/getIssuerClient()
io/corbel/iam/auth/JsonTokenAuthorizationRequestContext/getPrincipal(java.lang.String)#io/corbel/iam/repository/UserRepository/findByUsernameAndDomain(java.lang.String,java.lang.String)
io/corbel/iam/auth/JsonTokenAuthorizationRequestContext/hasPrincipal()#com/google/gson/JsonObject/has(java.lang.String)
io/corbel/iam/auth/JsonTokenAuthorizationRequestContext/hasPrincipal()#net/oauth/jsontoken/JsonToken/getPayloadAsJsonObject()
io/corbel/iam/auth/JsonTokenAuthorizationRequestContext/hasPrincipal()#com/google/gson/JsonElement/isJsonPrimitive()
io/corbel/iam/auth/JsonTokenAuthorizationRequestContext/hasPrincipal()#com/google/gson/JsonObject/get(java.lang.String)
io/corbel/iam/auth/JsonTokenAuthorizationRequestContext/getRequestedScopes()#com/google/gson/JsonObject/has(java.lang.String)
io/corbel/iam/auth/JsonTokenAuthorizationRequestContext/getRequestedScopes()#java/lang/String/split(java.lang.String)
io/corbel/iam/auth/JsonTokenAuthorizationRequestContext/getRequestedScopes()#java/lang/String/length()
io/corbel/iam/auth/JsonTokenAuthorizationRequestContext/getRequestedScopes()#java/util/Arrays/asList(T[])
io/corbel/iam/auth/JsonTokenAuthorizationRequestContext/getRequestedScopes()#net/oauth/jsontoken/JsonToken/getPayloadAsJsonObject()
io/corbel/iam/auth/JsonTokenAuthorizationRequestContext/getRequestedScopes()#java/util/HashSet/HashSet()
io/corbel/iam/auth/JsonTokenAuthorizationRequestContext/getRequestedScopes()#com/google/gson/JsonObject/get(java.lang.String)
io/corbel/iam/auth/JsonTokenAuthorizationRequestContext/getRequestedScopes()#java/util/HashSet/HashSet(java.util.Collection)
io/corbel/iam/auth/JsonTokenAuthorizationRequestContext/getRequestedScopes()#com/google/gson/JsonElement/getAsString()
io/corbel/iam/auth/JsonTokenAuthorizationRequestContext/getRefreshToken()#net/oauth/jsontoken/JsonToken/getPayloadAsJsonObject()
io/corbel/iam/auth/JsonTokenAuthorizationRequestContext/getRefreshToken()#io/corbel/iam/auth/JsonTokenAuthorizationRequestContext/hasRefreshToken()
io/corbel/iam/auth/JsonTokenAuthorizationRequestContext/getRefreshToken()#com/google/gson/JsonElement/getAsString()
io/corbel/iam/auth/JsonTokenAuthorizationRequestContext/getRefreshToken()#com/google/gson/JsonObject/get(java.lang.String)
io/corbel/iam/auth/JsonTokenAuthorizationRequestContext/getOAuthService()#io/corbel/iam/auth/JsonTokenAuthorizationRequestContext/isOAuth()
io/corbel/iam/auth/JsonTokenAuthorizationRequestContext/getOAuthService()#net/oauth/jsontoken/JsonToken/getPayloadAsJsonObject()
io/corbel/iam/auth/JsonTokenAuthorizationRequestContext/getOAuthService()#com/google/gson/JsonElement/getAsString()
io/corbel/iam/auth/JsonTokenAuthorizationRequestContext/getOAuthService()#com/google/gson/JsonObject/get(java.lang.String)
io/corbel/iam/auth/JsonTokenAuthorizationRequestContext/getRequestedDomain()#com/google/gson/JsonObject/has(java.lang.String)
io/corbel/iam/auth/JsonTokenAuthorizationRequestContext/getRequestedDomain()#org/springframework/data/repository/CrudRepository/findOne(ID)
io/corbel/iam/auth/JsonTokenAuthorizationRequestContext/getRequestedDomain()#net/oauth/jsontoken/JsonToken/getPayloadAsJsonObject()
io/corbel/iam/auth/JsonTokenAuthorizationRequestContext/getRequestedDomain()#io/corbel/iam/auth/JsonTokenAuthorizationRequestContext/getIssuerClientDomain()
io/corbel/iam/auth/JsonTokenAuthorizationRequestContext/getRequestedDomain()#com/google/gson/JsonElement/getAsString()
io/corbel/iam/auth/JsonTokenAuthorizationRequestContext/getRequestedDomain()#com/google/gson/JsonObject/get(java.lang.String)
io/corbel/iam/auth/JsonTokenAuthorizationRequestContext/getBasicParams()#io/corbel/iam/auth/BasicParams/createFromJWT(net.oauth.jsontoken.JsonToken)
io/corbel/iam/auth/JsonTokenAuthorizationRequestContext/hasVersion()#com/google/gson/JsonObject/has(java.lang.String)
io/corbel/iam/auth/JsonTokenAuthorizationRequestContext/hasVersion()#net/oauth/jsontoken/JsonToken/getPayloadAsJsonObject()
io/corbel/iam/auth/JsonTokenAuthorizationRequestContext/hasRefreshToken()#com/google/gson/JsonObject/has(java.lang.String)
io/corbel/iam/auth/JsonTokenAuthorizationRequestContext/hasRefreshToken()#net/oauth/jsontoken/JsonToken/getPayloadAsJsonObject()
io/corbel/iam/auth/JsonTokenAuthorizationRequestContext/isCrossDomain()#io/corbel/iam/model/Domain/equals(java.lang.Object)
io/corbel/iam/auth/JsonTokenAuthorizationRequestContext/isCrossDomain()#io/corbel/iam/auth/JsonTokenAuthorizationRequestContext/getRequestedDomain()
io/corbel/iam/auth/JsonTokenAuthorizationRequestContext/isCrossDomain()#io/corbel/iam/auth/JsonTokenAuthorizationRequestContext/getIssuerClientDomain()
io/corbel/iam/auth/JsonTokenAuthorizationRequestContext/getVersion()#net/oauth/jsontoken/JsonToken/getPayloadAsJsonObject()
io/corbel/iam/auth/JsonTokenAuthorizationRequestContext/getVersion()#io/corbel/iam/auth/JsonTokenAuthorizationRequestContext/hasVersion()
io/corbel/iam/auth/JsonTokenAuthorizationRequestContext/getVersion()#com/google/gson/JsonElement/getAsString()
io/corbel/iam/auth/JsonTokenAuthorizationRequestContext/getVersion()#com/google/gson/JsonObject/get(java.lang.String)
io/corbel/iam/auth/JsonTokenAuthorizationRequestContext/getIssuerClient()#net/oauth/jsontoken/JsonToken/getIssuer()
io/corbel/iam/auth/JsonTokenAuthorizationRequestContext/getIssuerClient()#org/springframework/data/repository/CrudRepository/findOne(ID)
io/corbel/iam/auth/JsonTokenAuthorizationRequestContext/getIssuerClientDomain()#org/springframework/data/repository/CrudRepository/findOne(ID)
io/corbel/iam/auth/JsonTokenAuthorizationRequestContext/getIssuerClientDomain()#io/corbel/iam/model/Client/getDomain()
io/corbel/iam/auth/JsonTokenAuthorizationRequestContext/getIssuerClientDomain()#io/corbel/iam/auth/JsonTokenAuthorizationRequestContext/getIssuerClient()
io/corbel/iam/service/DefaultGroupServiceTest/getGroup()#io/corbel/iam/model/Group/Group(java.lang.String,java.lang.String,java.lang.String,java.util.Set)
io/corbel/iam/service/DefaultGroupServiceTest/removeScopesFromGroupTest()#io/corbel/iam/service/GroupService/removeScopes(java.lang.String,java.lang.String[])
io/corbel/iam/service/DefaultGroupServiceTest/removeScopesFromGroupTest()#org/mockito/Matchers/any()
io/corbel/iam/service/DefaultGroupServiceTest/removeScopesFromGroupTest()#io/corbel/iam/repository/HasScopesRepository/removeScopes(ID,java.lang.String[])
io/corbel/iam/service/DefaultGroupServiceTest/removeScopesFromGroupTest()#org/mockito/Matchers/eq(T)
io/corbel/iam/service/DefaultGroupServiceTest/removeScopesFromGroupTest()#org/mockito/Mockito/verifyNoMoreInteractions(java.lang.Object[])
io/corbel/iam/service/DefaultGroupServiceTest/removeScopesFromGroupTest()#org/mockito/Mockito/verify(T)
io/corbel/iam/service/DefaultGroupServiceTest/deleteGroupTest()#io/corbel/iam/repository/GroupRepository/deleteByIdAndDomain(java.lang.String,java.lang.String)
io/corbel/iam/service/DefaultGroupServiceTest/deleteGroupTest()#io/corbel/iam/service/GroupService/delete(java.lang.String,java.lang.String)
io/corbel/iam/service/DefaultGroupServiceTest/deleteGroupTest()#org/mockito/Mockito/verifyNoMoreInteractions(java.lang.Object[])
io/corbel/iam/service/DefaultGroupServiceTest/deleteGroupTest()#org/mockito/Mockito/verify(T)
io/corbel/iam/service/DefaultGroupServiceTest/addNotExistenteScopesToGroupTest()#io/corbel/iam/service/GroupService/addScopes(java.lang.String,java.lang.String[])
io/corbel/iam/service/DefaultGroupServiceTest/addNotExistenteScopesToGroupTest()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/service/DefaultGroupServiceTest/addNotExistenteScopesToGroupTest()#org/mockito/Mockito/when(T)
io/corbel/iam/service/DefaultGroupServiceTest/addNotExistenteScopesToGroupTest()#io/corbel/iam/repository/ScopeRepository/findOne(java.lang.String)
io/corbel/iam/service/DefaultGroupServiceTest/getGroupTest()#io/corbel/iam/service/DefaultGroupServiceTest/getGroup()
io/corbel/iam/service/DefaultGroupServiceTest/getGroupTest()#java/util/Optional/get()
io/corbel/iam/service/DefaultGroupServiceTest/getGroupTest()#org/fest/assertions/api/Assertions/assertThat(boolean)
io/corbel/iam/service/DefaultGroupServiceTest/getGroupTest()#org/mockito/Mockito/when(T)
io/corbel/iam/service/DefaultGroupServiceTest/getGroupTest()#java/util/Optional/isPresent()
io/corbel/iam/service/DefaultGroupServiceTest/getGroupTest()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/service/DefaultGroupServiceTest/getGroupTest()#org/fest/assertions/api/BooleanAssert/isTrue()
io/corbel/iam/service/DefaultGroupServiceTest/getGroupTest()#org/mockito/Mockito/verifyNoMoreInteractions(java.lang.Object[])
io/corbel/iam/service/DefaultGroupServiceTest/getGroupTest()#org/mockito/Mockito/verify(T)
io/corbel/iam/service/DefaultGroupServiceTest/getGroupTest()#io/corbel/iam/service/GroupService/getById(java.lang.String,java.lang.String)
io/corbel/iam/service/DefaultGroupServiceTest/getGroupTest()#org/fest/assertions/api/Assertions/assertThat(T)
io/corbel/iam/service/DefaultGroupServiceTest/getGroupTest()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/iam/service/DefaultGroupServiceTest/getGroupTest()#io/corbel/iam/repository/GroupRepository/findByIdAndDomain(java.lang.String,java.lang.String)
io/corbel/iam/service/DefaultGroupServiceTest/getNullWithoutDomainGroupTest()#org/fest/assertions/api/BooleanAssert/isFalse()
io/corbel/iam/service/DefaultGroupServiceTest/getNullWithoutDomainGroupTest()#org/fest/assertions/api/Assertions/assertThat(boolean)
io/corbel/iam/service/DefaultGroupServiceTest/getNullWithoutDomainGroupTest()#org/springframework/data/repository/CrudRepository/findOne(ID)
io/corbel/iam/service/DefaultGroupServiceTest/getNullWithoutDomainGroupTest()#io/corbel/iam/service/GroupService/getById(java.lang.String)
io/corbel/iam/service/DefaultGroupServiceTest/getNullWithoutDomainGroupTest()#java/util/Optional/isPresent()
io/corbel/iam/service/DefaultGroupServiceTest/getNullWithoutDomainGroupTest()#org/mockito/Mockito/verifyNoMoreInteractions(java.lang.Object[])
io/corbel/iam/service/DefaultGroupServiceTest/getNullWithoutDomainGroupTest()#org/mockito/Mockito/verify(T)
io/corbel/iam/service/DefaultGroupServiceTest/getAllGroupsTest()#io/corbel/iam/service/DefaultGroupServiceTest/getGroup()
io/corbel/iam/service/DefaultGroupServiceTest/getAllGroupsTest()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/service/DefaultGroupServiceTest/getAllGroupsTest()#java/util/Collections/singletonList(T)
io/corbel/iam/service/DefaultGroupServiceTest/getAllGroupsTest()#org/fest/assertions/api/AbstractIterableAssert/hasSize(int)
io/corbel/iam/service/DefaultGroupServiceTest/getAllGroupsTest()#org/mockito/Mockito/when(T)
io/corbel/iam/service/DefaultGroupServiceTest/getAllGroupsTest()#java/util/Collections/emptyList()
io/corbel/iam/service/DefaultGroupServiceTest/getAllGroupsTest()#org/fest/assertions/api/AbstractIterableAssert/contains(T[])
io/corbel/iam/service/DefaultGroupServiceTest/getAllGroupsTest()#io/corbel/iam/repository/GroupRepositoryCustom/findByDomain(java.lang.String,java.util.List,io.corbel.lib.queries.request.Pagination,io.corbel.lib.queries.request.Sort)
io/corbel/iam/service/DefaultGroupServiceTest/getAllGroupsTest()#io/corbel/iam/service/GroupService/getAll(java.lang.String,java.util.List,io.corbel.lib.queries.request.Pagination,io.corbel.lib.queries.request.Sort)
io/corbel/iam/service/DefaultGroupServiceTest/getAllGroupsTest()#org/fest/assertions/api/Assertions/assertThat(java.util.List)
io/corbel/iam/service/DefaultGroupServiceTest/getAllGroupsTest()#org/mockito/Mockito/verifyNoMoreInteractions(java.lang.Object[])
io/corbel/iam/service/DefaultGroupServiceTest/getAllGroupsTest()#org/mockito/Mockito/verify(T)
io/corbel/iam/service/DefaultGroupServiceTest/testGroupScopes()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/service/DefaultGroupServiceTest/testGroupScopes()#org/mockito/Mockito/when(T)
io/corbel/iam/service/DefaultGroupServiceTest/testGroupScopes()#io/corbel/iam/repository/GroupRepository/findByNameAndDomain(java.lang.String,java.lang.String)
io/corbel/iam/service/DefaultGroupServiceTest/testGroupScopes()#org/fest/assertions/api/Assertions/assertThat(java.lang.Iterable)
io/corbel/iam/service/DefaultGroupServiceTest/testGroupScopes()#io/corbel/iam/model/Group/Group(java.lang.String,java.lang.String,java.lang.String,java.util.Set)
io/corbel/iam/service/DefaultGroupServiceTest/testGroupScopes()#io/corbel/iam/service/GroupService/getGroupScopes(java.lang.String,java.util.Collection)
io/corbel/iam/service/DefaultGroupServiceTest/testGroupScopes()#java/util/HashSet/HashSet(java.util.Collection)
io/corbel/iam/service/DefaultGroupServiceTest/testGroupScopes()#org/fest/assertions/api/AbstractIterableAssert/contains(T[])
io/corbel/iam/service/DefaultGroupServiceTest/testGroupScopes()#java/util/Arrays/asList(T[])
io/corbel/iam/service/DefaultGroupServiceTest/getNullGroupTest()#org/fest/assertions/api/BooleanAssert/isFalse()
io/corbel/iam/service/DefaultGroupServiceTest/getNullGroupTest()#org/fest/assertions/api/Assertions/assertThat(boolean)
io/corbel/iam/service/DefaultGroupServiceTest/getNullGroupTest()#io/corbel/iam/service/GroupService/getById(java.lang.String,java.lang.String)
io/corbel/iam/service/DefaultGroupServiceTest/getNullGroupTest()#java/util/Optional/isPresent()
io/corbel/iam/service/DefaultGroupServiceTest/getNullGroupTest()#io/corbel/iam/repository/GroupRepository/findByIdAndDomain(java.lang.String,java.lang.String)
io/corbel/iam/service/DefaultGroupServiceTest/getNullGroupTest()#org/mockito/Mockito/verifyNoMoreInteractions(java.lang.Object[])
io/corbel/iam/service/DefaultGroupServiceTest/getNullGroupTest()#org/mockito/Mockito/verify(T)
io/corbel/iam/service/DefaultGroupServiceTest/addScopesToGroupTest()#io/corbel/iam/service/GroupService/addScopes(java.lang.String,java.lang.String[])
io/corbel/iam/service/DefaultGroupServiceTest/addScopesToGroupTest()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/service/DefaultGroupServiceTest/addScopesToGroupTest()#io/corbel/iam/repository/HasScopesRepository/addScopes(ID,java.lang.String[])
io/corbel/iam/service/DefaultGroupServiceTest/addScopesToGroupTest()#org/mockito/Matchers/any()
io/corbel/iam/service/DefaultGroupServiceTest/addScopesToGroupTest()#org/mockito/Matchers/eq(T)
io/corbel/iam/service/DefaultGroupServiceTest/addScopesToGroupTest()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/iam/service/DefaultGroupServiceTest/addScopesToGroupTest()#org/mockito/Mockito/when(T)
io/corbel/iam/service/DefaultGroupServiceTest/addScopesToGroupTest()#io/corbel/iam/repository/ScopeRepository/findOne(java.lang.String)
io/corbel/iam/service/DefaultGroupServiceTest/addScopesToGroupTest()#org/mockito/Mockito/verifyNoMoreInteractions(java.lang.Object[])
io/corbel/iam/service/DefaultGroupServiceTest/addScopesToGroupTest()#org/mockito/Mockito/verify(T)
io/corbel/iam/service/DefaultGroupServiceTest/createGroupWithoutScopesTest()#io/corbel/iam/service/DefaultGroupServiceTest/getGroup()
io/corbel/iam/service/DefaultGroupServiceTest/createGroupWithoutScopesTest()#org/mockito/ArgumentCaptor/getValue()
io/corbel/iam/service/DefaultGroupServiceTest/createGroupWithoutScopesTest()#org/fest/assertions/api/AbstractAssert/isNull()
io/corbel/iam/service/DefaultGroupServiceTest/createGroupWithoutScopesTest()#io/corbel/iam/service/GroupService/create(io.corbel.iam.model.Group)
io/corbel/iam/service/DefaultGroupServiceTest/createGroupWithoutScopesTest()#org/fest/assertions/api/Assertions/assertThat(java.lang.Iterable)
io/corbel/iam/service/DefaultGroupServiceTest/createGroupWithoutScopesTest()#org/springframework/data/mongodb/repository/MongoRepository/insert(S)
io/corbel/iam/service/DefaultGroupServiceTest/createGroupWithoutScopesTest()#io/corbel/iam/model/Group/getDomain()
io/corbel/iam/service/DefaultGroupServiceTest/createGroupWithoutScopesTest()#io/corbel/iam/model/Group/getName()
io/corbel/iam/service/DefaultGroupServiceTest/createGroupWithoutScopesTest()#org/mockito/ArgumentCaptor/forClass(java.lang.Class)
io/corbel/iam/service/DefaultGroupServiceTest/createGroupWithoutScopesTest()#org/mockito/Mockito/verifyNoMoreInteractions(java.lang.Object[])
io/corbel/iam/service/DefaultGroupServiceTest/createGroupWithoutScopesTest()#org/mockito/Mockito/verify(T)
io/corbel/iam/service/DefaultGroupServiceTest/createGroupWithoutScopesTest()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/iam/service/DefaultGroupServiceTest/createGroupWithoutScopesTest()#org/mockito/ArgumentCaptor/capture()
io/corbel/iam/service/DefaultGroupServiceTest/createGroupWithoutScopesTest()#io/corbel/iam/model/Group/getId()
io/corbel/iam/service/DefaultGroupServiceTest/createGroupWithoutScopesTest()#io/corbel/iam/model/Group/setScopes(java.util.Set)
io/corbel/iam/service/DefaultGroupServiceTest/createGroupWithoutScopesTest()#io/corbel/iam/model/Group/getScopes()
io/corbel/iam/service/DefaultGroupServiceTest/createGroupWithoutScopesTest()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/iam/service/DefaultGroupServiceTest/createGroupTest()#io/corbel/iam/service/DefaultGroupServiceTest/getGroup()
io/corbel/iam/service/DefaultGroupServiceTest/createGroupTest()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/service/DefaultGroupServiceTest/createGroupTest()#org/mockito/ArgumentCaptor/getValue()
io/corbel/iam/service/DefaultGroupServiceTest/createGroupTest()#org/fest/assertions/api/AbstractAssert/isNull()
io/corbel/iam/service/DefaultGroupServiceTest/createGroupTest()#io/corbel/iam/service/GroupService/create(io.corbel.iam.model.Group)
io/corbel/iam/service/DefaultGroupServiceTest/createGroupTest()#org/fest/assertions/api/Assertions/assertThat(java.lang.Iterable)
io/corbel/iam/service/DefaultGroupServiceTest/createGroupTest()#io/corbel/iam/model/Group/getId()
io/corbel/iam/service/DefaultGroupServiceTest/createGroupTest()#org/springframework/data/mongodb/repository/MongoRepository/insert(S)
io/corbel/iam/service/DefaultGroupServiceTest/createGroupTest()#io/corbel/iam/model/Group/getDomain()
io/corbel/iam/service/DefaultGroupServiceTest/createGroupTest()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/iam/service/DefaultGroupServiceTest/createGroupTest()#org/mockito/Mockito/when(T)
io/corbel/iam/service/DefaultGroupServiceTest/createGroupTest()#io/corbel/iam/repository/ScopeRepository/findOne(java.lang.String)
io/corbel/iam/service/DefaultGroupServiceTest/createGroupTest()#io/corbel/iam/model/Group/getName()
io/corbel/iam/service/DefaultGroupServiceTest/createGroupTest()#org/mockito/ArgumentCaptor/forClass(java.lang.Class)
io/corbel/iam/service/DefaultGroupServiceTest/createGroupTest()#org/mockito/Mockito/verifyNoMoreInteractions(java.lang.Object[])
io/corbel/iam/service/DefaultGroupServiceTest/createGroupTest()#org/mockito/Mockito/verify(T)
io/corbel/iam/service/DefaultGroupServiceTest/createGroupTest()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/iam/service/DefaultGroupServiceTest/createGroupTest()#org/mockito/ArgumentCaptor/capture()
io/corbel/iam/service/DefaultGroupServiceTest/createGroupTest()#io/corbel/iam/model/Group/getScopes()
io/corbel/iam/service/DefaultGroupServiceTest/createGroupTest()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/iam/service/DefaultGroupServiceTest/getGroupWithoutDomainTest()#io/corbel/iam/service/DefaultGroupServiceTest/getGroup()
io/corbel/iam/service/DefaultGroupServiceTest/getGroupWithoutDomainTest()#java/util/Optional/get()
io/corbel/iam/service/DefaultGroupServiceTest/getGroupWithoutDomainTest()#org/fest/assertions/api/Assertions/assertThat(boolean)
io/corbel/iam/service/DefaultGroupServiceTest/getGroupWithoutDomainTest()#org/mockito/Mockito/when(T)
io/corbel/iam/service/DefaultGroupServiceTest/getGroupWithoutDomainTest()#org/springframework/data/repository/CrudRepository/findOne(ID)
io/corbel/iam/service/DefaultGroupServiceTest/getGroupWithoutDomainTest()#org/fest/assertions/api/Assertions/assertThat(T)
io/corbel/iam/service/DefaultGroupServiceTest/getGroupWithoutDomainTest()#io/corbel/iam/service/GroupService/getById(java.lang.String)
io/corbel/iam/service/DefaultGroupServiceTest/getGroupWithoutDomainTest()#java/util/Optional/isPresent()
io/corbel/iam/service/DefaultGroupServiceTest/getGroupWithoutDomainTest()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/iam/service/DefaultGroupServiceTest/getGroupWithoutDomainTest()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/service/DefaultGroupServiceTest/getGroupWithoutDomainTest()#org/fest/assertions/api/BooleanAssert/isTrue()
io/corbel/iam/service/DefaultGroupServiceTest/getGroupWithoutDomainTest()#org/mockito/Mockito/verifyNoMoreInteractions(java.lang.Object[])
io/corbel/iam/service/DefaultGroupServiceTest/getGroupWithoutDomainTest()#org/mockito/Mockito/verify(T)
io/corbel/iam/service/DefaultGroupServiceTest/createAlreadyExistentGroupTest()#io/corbel/iam/service/DefaultGroupServiceTest/getGroup()
io/corbel/iam/service/DefaultGroupServiceTest/createAlreadyExistentGroupTest()#org/mockito/ArgumentCaptor/getValue()
io/corbel/iam/service/DefaultGroupServiceTest/createAlreadyExistentGroupTest()#org/fest/assertions/api/AbstractAssert/isNull()
io/corbel/iam/service/DefaultGroupServiceTest/createAlreadyExistentGroupTest()#org/mockito/stubbing/Stubber/when(T)
io/corbel/iam/service/DefaultGroupServiceTest/createAlreadyExistentGroupTest()#io/corbel/iam/service/GroupService/create(io.corbel.iam.model.Group)
io/corbel/iam/service/DefaultGroupServiceTest/createAlreadyExistentGroupTest()#org/fest/assertions/api/Assertions/assertThat(java.lang.Iterable)
io/corbel/iam/service/DefaultGroupServiceTest/createAlreadyExistentGroupTest()#io/corbel/iam/model/Group/getId()
io/corbel/iam/service/DefaultGroupServiceTest/createAlreadyExistentGroupTest()#org/springframework/data/mongodb/repository/MongoRepository/insert(S)
io/corbel/iam/service/DefaultGroupServiceTest/createAlreadyExistentGroupTest()#org/springframework/dao/DataIntegrityViolationException/DataIntegrityViolationException(java.lang.String)
io/corbel/iam/service/DefaultGroupServiceTest/createAlreadyExistentGroupTest()#io/corbel/iam/model/Group/getDomain()
io/corbel/iam/service/DefaultGroupServiceTest/createAlreadyExistentGroupTest()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/iam/service/DefaultGroupServiceTest/createAlreadyExistentGroupTest()#org/mockito/Mockito/when(T)
io/corbel/iam/service/DefaultGroupServiceTest/createAlreadyExistentGroupTest()#io/corbel/iam/repository/ScopeRepository/findOne(java.lang.String)
io/corbel/iam/service/DefaultGroupServiceTest/createAlreadyExistentGroupTest()#io/corbel/iam/model/Group/getName()
io/corbel/iam/service/DefaultGroupServiceTest/createAlreadyExistentGroupTest()#org/mockito/ArgumentCaptor/forClass(java.lang.Class)
io/corbel/iam/service/DefaultGroupServiceTest/createAlreadyExistentGroupTest()#org/mockito/Mockito/verifyNoMoreInteractions(java.lang.Object[])
io/corbel/iam/service/DefaultGroupServiceTest/createAlreadyExistentGroupTest()#org/mockito/Mockito/verify(T)
io/corbel/iam/service/DefaultGroupServiceTest/createAlreadyExistentGroupTest()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/iam/service/DefaultGroupServiceTest/createAlreadyExistentGroupTest()#org/mockito/ArgumentCaptor/capture()
io/corbel/iam/service/DefaultGroupServiceTest/createAlreadyExistentGroupTest()#org/mockito/Matchers/any()
io/corbel/iam/service/DefaultGroupServiceTest/createAlreadyExistentGroupTest()#org/mockito/Mockito/doThrow(java.lang.Throwable)
io/corbel/iam/service/DefaultGroupServiceTest/createAlreadyExistentGroupTest()#io/corbel/iam/model/Group/getScopes()
io/corbel/iam/service/DefaultGroupServiceTest/createAlreadyExistentGroupTest()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/iam/service/DefaultGroupServiceTest/setUp()#io/corbel/iam/service/DefaultGroupService/DefaultGroupService(io.corbel.iam.repository.GroupRepository,io.corbel.iam.repository.ScopeRepository)
io/corbel/oauth/session/DefaultSessionBuilder/createNewSession(java.lang.String,java.lang.String)#io/corbel/lib/token/TokenInfo/Builder/setState(java.lang.String)
io/corbel/oauth/session/DefaultSessionBuilder/createNewSession(java.lang.String,java.lang.String)#io/corbel/lib/token/TokenGrant/getAccessToken()
io/corbel/oauth/session/DefaultSessionBuilder/createNewSession(java.lang.String,java.lang.String)#io/corbel/lib/token/TokenInfo/Builder/setOneUseToken(boolean)
io/corbel/oauth/session/DefaultSessionBuilder/createNewSession(java.lang.String,java.lang.String)#io/corbel/lib/token/factory/TokenFactory/createToken(io.corbel.lib.token.TokenInfo,long,java.lang.String[])
io/corbel/oauth/session/DefaultSessionBuilder/createNewSession(java.lang.String,java.lang.String)#java/lang/System/currentTimeMillis()
io/corbel/oauth/session/DefaultSessionBuilder/createNewSession(java.lang.String,java.lang.String)#io/corbel/lib/token/TokenInfo/Builder/setClientId(java.lang.String)
io/corbel/oauth/session/DefaultSessionBuilder/createNewSession(java.lang.String,java.lang.String)#io/corbel/lib/token/TokenInfo/newBuilder()
io/corbel/oauth/session/DefaultSessionBuilder/createNewSession(java.lang.String,java.lang.String)#io/corbel/lib/token/TokenInfo/Builder/setUserId(java.lang.String)
io/corbel/oauth/session/DefaultSessionBuilder/createNewSession(java.lang.String,java.lang.String)#io/corbel/lib/token/TokenInfo/Builder/setType(io.corbel.lib.token.model.TokenType)
io/corbel/oauth/session/DefaultSessionBuilder/createNewSession(java.lang.String,java.lang.String)#java/lang/Long/toString(long)
io/corbel/oauth/session/DefaultSessionBuilder/createNewSession(java.lang.String,java.lang.String)#io/corbel/lib/token/TokenInfo/Builder/build()
io/corbel/notifications/model/Domain/equals(java.lang.Object)#java/lang/Boolean/equals(java.lang.Object)
io/corbel/notifications/model/Domain/equals(java.lang.Object)#java/lang/String/equals(java.lang.Object)
io/corbel/notifications/model/Domain/equals(java.lang.Object)#java/lang/Object/getClass()
io/corbel/notifications/model/Domain/equals(java.lang.Object)#java/util/Map/equals(java.lang.Object)
io/corbel/notifications/model/Domain/equals(java.lang.Object)#java/util/List/equals(java.lang.Object)
io/corbel/notifications/model/Domain/updateDomain(io.corbel.notifications.model.Domain)#io/corbel/notifications/model/Domain/getProperties()
io/corbel/notifications/model/Domain/updateDomain(io.corbel.notifications.model.Domain)#io/corbel/notifications/model/Domain/setMultiLanguageTemplates(java.util.List)
io/corbel/notifications/model/Domain/updateDomain(io.corbel.notifications.model.Domain)#io/corbel/notifications/model/Domain/setProperties(java.util.Map)
io/corbel/notifications/model/Domain/updateDomain(io.corbel.notifications.model.Domain)#io/corbel/notifications/model/Domain/getTemplates()
io/corbel/notifications/model/Domain/updateDomain(io.corbel.notifications.model.Domain)#io/corbel/notifications/model/Domain/setTemplates(java.util.Map)
io/corbel/notifications/model/Domain/updateDomain(io.corbel.notifications.model.Domain)#io/corbel/notifications/model/Domain/getMultiLanguageTemplates()
io/corbel/notifications/model/Domain/updateDomain(io.corbel.notifications.model.Domain)#java/util/List/isEmpty()
io/corbel/notifications/model/Domain/updateDomain(io.corbel.notifications.model.Domain)#java/util/Map/isEmpty()
io/corbel/notifications/model/Domain/hashCode()#java/lang/String/hashCode()
io/corbel/notifications/model/Domain/hashCode()#java/lang/Boolean/hashCode()
io/corbel/notifications/model/Domain/hashCode()#java/util/List/hashCode()
io/corbel/notifications/model/Domain/hashCode()#java/util/Map/hashCode()
io/corbel/iam/service/DefaultMailService/sendMailResetPassword(java.lang.String,io.corbel.iam.model.User)#org/springframework/data/repository/CrudRepository/findOne(ID)
io/corbel/iam/service/DefaultMailService/sendMailResetPassword(java.lang.String,io.corbel.iam.model.User)#java/util/Optional/ofNullable(T)
io/corbel/iam/service/DefaultMailService/sendMailResetPassword(java.lang.String,io.corbel.iam.model.User)#java/util/Optional/ifPresent(java.util.function.Consumer)
io/corbel/iam/service/DefaultMailService/sendMailValidationMail(java.lang.String,java.lang.String,java.lang.String,io.corbel.iam.model.User,java.lang.String,long)#io/corbel/iam/model/Entity/getId()
io/corbel/iam/service/DefaultMailService/sendMailValidationMail(java.lang.String,java.lang.String,java.lang.String,io.corbel.iam.model.User,java.lang.String,long)#io/corbel/lib/token/TokenGrant/getAccessToken()
io/corbel/iam/service/DefaultMailService/sendMailValidationMail(java.lang.String,java.lang.String,java.lang.String,io.corbel.iam.model.User,java.lang.String,long)#io/corbel/lib/token/TokenInfo/Builder/build()
io/corbel/iam/service/DefaultMailService/sendMailValidationMail(java.lang.String,java.lang.String,java.lang.String,io.corbel.iam.model.User,java.lang.String,long)#io/corbel/lib/token/TokenInfo/Builder/setOneUseToken(boolean)
io/corbel/iam/service/DefaultMailService/sendMailValidationMail(java.lang.String,java.lang.String,java.lang.String,io.corbel.iam.model.User,java.lang.String,long)#io/corbel/lib/token/factory/TokenFactory/createToken(io.corbel.lib.token.TokenInfo,long,java.lang.String[])
io/corbel/iam/service/DefaultMailService/sendMailValidationMail(java.lang.String,java.lang.String,java.lang.String,io.corbel.iam.model.User,java.lang.String,long)#io/corbel/lib/token/TokenInfo/Builder/setDomainId(java.lang.String)
io/corbel/iam/service/DefaultMailService/sendMailValidationMail(java.lang.String,java.lang.String,java.lang.String,io.corbel.iam.model.User,java.lang.String,long)#io/corbel/lib/token/TokenInfo/Builder/setClientId(java.lang.String)
io/corbel/iam/service/DefaultMailService/sendMailValidationMail(java.lang.String,java.lang.String,java.lang.String,io.corbel.iam.model.User,java.lang.String,long)#io/corbel/lib/token/TokenInfo/newBuilder()
io/corbel/iam/service/DefaultMailService/sendMailValidationMail(java.lang.String,java.lang.String,java.lang.String,io.corbel.iam.model.User,java.lang.String,long)#io/corbel/lib/token/TokenInfo/Builder/setUserId(java.lang.String)
io/corbel/iam/service/DefaultMailService/sendMailValidationMail(java.lang.String,java.lang.String,java.lang.String,io.corbel.iam.model.User,java.lang.String,long)#io/corbel/lib/token/TokenInfo/Builder/setType(io.corbel.lib.token.model.TokenType)
io/corbel/iam/service/DefaultMailService/sendMailValidationMail(java.lang.String,java.lang.String,java.lang.String,io.corbel.iam.model.User,java.lang.String,long)#io/corbel/lib/token/TokenInfo/Builder/setState(java.lang.String)
io/corbel/iam/service/DefaultMailService/sendMailValidationMail(java.lang.String,java.lang.String,java.lang.String,io.corbel.iam.model.User,java.lang.String,long)#io/corbel/iam/model/User/getEmail()
io/corbel/iam/service/DefaultMailService/sendMailValidationMail(java.lang.String,java.lang.String,java.lang.String,io.corbel.iam.model.User,java.lang.String,long)#io/corbel/iam/service/DefaultMailService/sendMail(java.lang.String,java.lang.String,java.lang.String,java.lang.String,io.corbel.iam.model.User,java.lang.String,long)
io/corbel/iam/service/DefaultMailService/sendMailValidationMail(java.lang.String,java.lang.String,java.lang.String,io.corbel.iam.model.User,java.lang.String,long)#io/corbel/iam/model/User/getDomain()
io/corbel/iam/service/DefaultMailService/sendMailValidation(java.lang.String,io.corbel.iam.model.User)#org/springframework/data/repository/CrudRepository/findOne(ID)
io/corbel/iam/service/DefaultMailService/sendMailValidation(java.lang.String,io.corbel.iam.model.User)#java/util/Optional/ofNullable(T)
io/corbel/iam/service/DefaultMailService/sendMailValidation(java.lang.String,io.corbel.iam.model.User)#java/util/Optional/ifPresent(java.util.function.Consumer)
io/corbel/iam/service/DefaultMailService/sendResetPasswordMail(java.lang.String,java.lang.String,java.lang.String,io.corbel.iam.model.User,java.lang.String,long)#io/corbel/iam/model/Entity/getId()
io/corbel/iam/service/DefaultMailService/sendResetPasswordMail(java.lang.String,java.lang.String,java.lang.String,io.corbel.iam.model.User,java.lang.String,long)#io/corbel/lib/token/TokenGrant/getAccessToken()
io/corbel/iam/service/DefaultMailService/sendResetPasswordMail(java.lang.String,java.lang.String,java.lang.String,io.corbel.iam.model.User,java.lang.String,long)#io/corbel/lib/token/TokenInfo/Builder/build()
io/corbel/iam/service/DefaultMailService/sendResetPasswordMail(java.lang.String,java.lang.String,java.lang.String,io.corbel.iam.model.User,java.lang.String,long)#io/corbel/lib/token/TokenInfo/Builder/setOneUseToken(boolean)
io/corbel/iam/service/DefaultMailService/sendResetPasswordMail(java.lang.String,java.lang.String,java.lang.String,io.corbel.iam.model.User,java.lang.String,long)#io/corbel/lib/token/factory/TokenFactory/createToken(io.corbel.lib.token.TokenInfo,long,java.lang.String[])
io/corbel/iam/service/DefaultMailService/sendResetPasswordMail(java.lang.String,java.lang.String,java.lang.String,io.corbel.iam.model.User,java.lang.String,long)#io/corbel/lib/token/TokenInfo/Builder/setDomainId(java.lang.String)
io/corbel/iam/service/DefaultMailService/sendResetPasswordMail(java.lang.String,java.lang.String,java.lang.String,io.corbel.iam.model.User,java.lang.String,long)#io/corbel/lib/token/TokenInfo/Builder/setClientId(java.lang.String)
io/corbel/iam/service/DefaultMailService/sendResetPasswordMail(java.lang.String,java.lang.String,java.lang.String,io.corbel.iam.model.User,java.lang.String,long)#io/corbel/lib/token/TokenInfo/newBuilder()
io/corbel/iam/service/DefaultMailService/sendResetPasswordMail(java.lang.String,java.lang.String,java.lang.String,io.corbel.iam.model.User,java.lang.String,long)#io/corbel/lib/token/TokenInfo/Builder/setUserId(java.lang.String)
io/corbel/iam/service/DefaultMailService/sendResetPasswordMail(java.lang.String,java.lang.String,java.lang.String,io.corbel.iam.model.User,java.lang.String,long)#io/corbel/lib/token/TokenInfo/Builder/setType(io.corbel.lib.token.model.TokenType)
io/corbel/iam/service/DefaultMailService/sendResetPasswordMail(java.lang.String,java.lang.String,java.lang.String,io.corbel.iam.model.User,java.lang.String,long)#io/corbel/iam/service/DefaultMailService/sendMail(java.lang.String,java.lang.String,java.lang.String,java.lang.String,io.corbel.iam.model.User,java.lang.String,long)
io/corbel/iam/service/DefaultMailService/sendResetPasswordMail(java.lang.String,java.lang.String,java.lang.String,io.corbel.iam.model.User,java.lang.String,long)#io/corbel/iam/model/User/getDomain()
io/corbel/iam/service/DefaultMailService/setTokenScope(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long)#io/corbel/iam/service/ScopeService/fillScopes(java.util.Set,java.lang.String,java.lang.String,java.lang.String)
io/corbel/iam/service/DefaultMailService/setTokenScope(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long)#java/time/Clock/instant()
io/corbel/iam/service/DefaultMailService/setTokenScope(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long)#java/time/Instant/plus(long,java.time.temporal.TemporalUnit)
io/corbel/iam/service/DefaultMailService/setTokenScope(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long)#io/corbel/iam/service/ScopeService/expandScopes(java.util.Collection)
io/corbel/iam/service/DefaultMailService/setTokenScope(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long)#java/util/Set/add(E)
io/corbel/iam/service/DefaultMailService/setTokenScope(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long)#io/corbel/iam/service/ScopeService/publishAuthorizationRules(java.lang.String,long,java.util.Set)
io/corbel/iam/service/DefaultMailService/setTokenScope(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long)#java/time/Instant/toEpochMilli()
io/corbel/iam/service/DefaultMailService/setTokenScope(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long)#java/util/HashSet/HashSet()
io/corbel/iam/service/DefaultMailService/sendMail(java.lang.String,java.lang.String,java.lang.String,java.lang.String,io.corbel.iam.model.User,java.lang.String,long)#io/corbel/iam/model/User/getEmail()
io/corbel/iam/service/DefaultMailService/sendMail(java.lang.String,java.lang.String,java.lang.String,java.lang.String,io.corbel.iam.model.User,java.lang.String,long)#io/corbel/iam/service/EventsService/sendNotificationEvent(java.lang.String,java.lang.String,java.lang.String,java.util.Map)
io/corbel/iam/service/DefaultMailService/sendMail(java.lang.String,java.lang.String,java.lang.String,java.lang.String,io.corbel.iam.model.User,java.lang.String,long)#io/corbel/iam/service/DefaultMailService/setTokenScope(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long)
io/corbel/iam/service/DefaultMailService/sendMail(java.lang.String,java.lang.String,java.lang.String,java.lang.String,io.corbel.iam.model.User,java.lang.String,long)#java/util/Optional/orElse(T)
io/corbel/iam/service/DefaultMailService/sendMail(java.lang.String,java.lang.String,java.lang.String,java.lang.String,io.corbel.iam.model.User,java.lang.String,long)#java/util/Optional/ofNullable(T)
io/corbel/iam/service/DefaultMailService/sendMail(java.lang.String,java.lang.String,java.lang.String,java.lang.String,io.corbel.iam.model.User,java.lang.String,long)#java/util/stream/Stream/filter(java.util.function.Predicate)
io/corbel/iam/service/DefaultMailService/sendMail(java.lang.String,java.lang.String,java.lang.String,java.lang.String,io.corbel.iam.model.User,java.lang.String,long)#io/corbel/iam/model/User/getDomain()
io/corbel/iam/service/DefaultMailService/sendMail(java.lang.String,java.lang.String,java.lang.String,java.lang.String,io.corbel.iam.model.User,java.lang.String,long)#java/lang/String/replace(java.lang.CharSequence,java.lang.CharSequence)
io/corbel/iam/service/DefaultMailService/sendMail(java.lang.String,java.lang.String,java.lang.String,java.lang.String,io.corbel.iam.model.User,java.lang.String,long)#java/util/Map/put(K,V)
io/corbel/iam/service/DefaultMailService/sendMail(java.lang.String,java.lang.String,java.lang.String,java.lang.String,io.corbel.iam.model.User,java.lang.String,long)#java/util/Map/entrySet()
io/corbel/iam/service/DefaultMailService/sendMail(java.lang.String,java.lang.String,java.lang.String,java.lang.String,io.corbel.iam.model.User,java.lang.String,long)#io/corbel/iam/model/Entity/getId()
io/corbel/iam/service/DefaultMailService/sendMail(java.lang.String,java.lang.String,java.lang.String,java.lang.String,io.corbel.iam.model.User,java.lang.String,long)#io/corbel/iam/model/User/getProperties()
io/corbel/iam/service/DefaultMailService/sendMail(java.lang.String,java.lang.String,java.lang.String,java.lang.String,io.corbel.iam.model.User,java.lang.String,long)#io/corbel/iam/model/User/getFirstName()
io/corbel/iam/service/DefaultMailService/sendMail(java.lang.String,java.lang.String,java.lang.String,java.lang.String,io.corbel.iam.model.User,java.lang.String,long)#io/corbel/iam/model/User/getLastName()
io/corbel/iam/service/DefaultMailService/sendMail(java.lang.String,java.lang.String,java.lang.String,java.lang.String,io.corbel.iam.model.User,java.lang.String,long)#java/util/HashMap/HashMap()
io/corbel/iam/service/DefaultMailService/sendMail(java.lang.String,java.lang.String,java.lang.String,java.lang.String,io.corbel.iam.model.User,java.lang.String,long)#java/util/Collection/parallelStream()
io/corbel/iam/service/DefaultMailService/sendMail(java.lang.String,java.lang.String,java.lang.String,java.lang.String,io.corbel.iam.model.User,java.lang.String,long)#java/util/stream/Stream/forEach(java.util.function.Consumer)
io/corbel/notifications/service/AndroidPushNotificationsService/send(io.corbel.notifications.model.Domain,io.corbel.notifications.model.NotificationTemplate,java.lang.String,java.lang.String[])#io/corbel/notifications/service/AndroidPushNotificationsService/send(io.corbel.notifications.model.Domain,io.corbel.notifications.model.NotificationTemplate,java.lang.String[])
io/corbel/notifications/service/AndroidPushNotificationsService/send(io.corbel.notifications.model.Domain,io.corbel.notifications.model.NotificationTemplate,java.lang.String[])#io/corbel/notifications/model/NotificationTemplate/getText()
io/corbel/notifications/service/AndroidPushNotificationsService/send(io.corbel.notifications.model.Domain,io.corbel.notifications.model.NotificationTemplate,java.lang.String[])#java/util/Arrays/toString(java.lang.Object[])
io/corbel/notifications/service/AndroidPushNotificationsService/send(io.corbel.notifications.model.Domain,io.corbel.notifications.model.NotificationTemplate,java.lang.String[])#io/corbel/notifications/model/NotificationTemplate/getSender()
io/corbel/notifications/service/AndroidPushNotificationsService/send(io.corbel.notifications.model.Domain,io.corbel.notifications.model.NotificationTemplate,java.lang.String[])#java/lang/Throwable/getMessage()
io/corbel/notifications/service/AndroidPushNotificationsService/send(io.corbel.notifications.model.Domain,io.corbel.notifications.model.NotificationTemplate,java.lang.String[])#java/util/Arrays/asList(T[])
io/corbel/notifications/service/AndroidPushNotificationsService/send(io.corbel.notifications.model.Domain,io.corbel.notifications.model.NotificationTemplate,java.lang.String[])#us/raudi/pushraven/Notification/clear()
io/corbel/notifications/service/AndroidPushNotificationsService/send(io.corbel.notifications.model.Domain,io.corbel.notifications.model.NotificationTemplate,java.lang.String[])#org/slf4j/Logger/error(java.lang.String,java.lang.Object,java.lang.Object)
io/corbel/notifications/service/AndroidPushNotificationsService/send(io.corbel.notifications.model.Domain,io.corbel.notifications.model.NotificationTemplate,java.lang.String[])#us/raudi/pushraven/Notification/title(java.lang.String)
io/corbel/notifications/service/AndroidPushNotificationsService/send(io.corbel.notifications.model.Domain,io.corbel.notifications.model.NotificationTemplate,java.lang.String[])#us/raudi/pushraven/Pushraven/setKey(java.lang.String)
io/corbel/notifications/service/AndroidPushNotificationsService/send(io.corbel.notifications.model.Domain,io.corbel.notifications.model.NotificationTemplate,java.lang.String[])#us/raudi/pushraven/Pushraven/push()
io/corbel/notifications/service/AndroidPushNotificationsService/send(io.corbel.notifications.model.Domain,io.corbel.notifications.model.NotificationTemplate,java.lang.String[])#org/slf4j/Logger/info(java.lang.String)
io/corbel/notifications/service/AndroidPushNotificationsService/send(io.corbel.notifications.model.Domain,io.corbel.notifications.model.NotificationTemplate,java.lang.String[])#us/raudi/pushraven/Notification/addAllMulticasts(java.util.Collection)
io/corbel/notifications/service/AndroidPushNotificationsService/send(io.corbel.notifications.model.Domain,io.corbel.notifications.model.NotificationTemplate,java.lang.String[])#us/raudi/pushraven/Notification/text(java.lang.String)
io/corbel/notifications/service/AndroidPushNotificationsService/send(io.corbel.notifications.model.Domain,io.corbel.notifications.model.NotificationTemplate,java.lang.String[])#io/corbel/notifications/model/NotificationTemplate/getTitle()
io/corbel/oauth/api/UsernameResource/existUsername(java.lang.String,io.corbel.lib.token.reader.TokenReader)#io/corbel/lib/token/reader/TokenReader/getInfo()
io/corbel/oauth/api/UsernameResource/existUsername(java.lang.String,io.corbel.lib.token.reader.TokenReader)#javax/ws/rs/core/Response/ResponseBuilder/build()
io/corbel/oauth/api/UsernameResource/existUsername(java.lang.String,io.corbel.lib.token.reader.TokenReader)#javax/ws/rs/core/Response/ok()
io/corbel/oauth/api/UsernameResource/existUsername(java.lang.String,io.corbel.lib.token.reader.TokenReader)#io/corbel/lib/ws/model/Error/Error(java.lang.String,java.lang.String)
io/corbel/oauth/api/UsernameResource/existUsername(java.lang.String,io.corbel.lib.token.reader.TokenReader)#io/corbel/lib/ws/api/error/ErrorResponseFactory/notfound(io.corbel.lib.ws.model.Error)
io/corbel/oauth/api/UsernameResource/existUsername(java.lang.String,io.corbel.lib.token.reader.TokenReader)#io/corbel/lib/ws/api/error/ErrorResponseFactory/getInstance()
io/corbel/oauth/api/UsernameResource/existUsername(java.lang.String,io.corbel.lib.token.reader.TokenReader)#io/corbel/oauth/service/UserService/existsByUsernameAndDomain(java.lang.String,java.lang.String)
io/corbel/oauth/api/UsernameResource/existUsername(java.lang.String,io.corbel.lib.token.reader.TokenReader)#io/corbel/lib/token/TokenInfo/getDomainId()
io/corbel/oauth/api/UsernameResource/getUserIdByUsername(java.lang.String,io.corbel.lib.token.reader.TokenReader)#java/util/Optional/map(java.util.function.Function)
io/corbel/oauth/api/UsernameResource/getUserIdByUsername(java.lang.String,io.corbel.lib.token.reader.TokenReader)#io/corbel/oauth/api/UsernameResource/getUserInDomainByUsername(java.lang.String,io.corbel.lib.token.reader.TokenReader)
io/corbel/oauth/api/UsernameResource/getUserIdByUsername(java.lang.String,io.corbel.lib.token.reader.TokenReader)#java/util/Optional/orElseGet(java.util.function.Supplier)
io/corbel/oauth/api/UsernameResource/getUserInDomainByUsername(java.lang.String,io.corbel.lib.token.reader.TokenReader)#io/corbel/lib/token/reader/TokenReader/getInfo()
io/corbel/oauth/api/UsernameResource/getUserInDomainByUsername(java.lang.String,io.corbel.lib.token.reader.TokenReader)#io/corbel/oauth/service/UserService/findByUserNameAndDomain(java.lang.String,java.lang.String)
io/corbel/oauth/api/UsernameResource/getUserInDomainByUsername(java.lang.String,io.corbel.lib.token.reader.TokenReader)#io/corbel/lib/token/TokenInfo/getDomainId()
io/corbel/oauth/api/UsernameResource/getUserInDomainByUsername(java.lang.String,io.corbel.lib.token.reader.TokenReader)#java/util/Optional/ofNullable(T)
io/corbel/resources/rem/dao/NamespaceNormalizerTest/testWithNoNamespace()#io/corbel/resources/rem/service/DefaultNamespaceNormalizer/normalize(java.lang.String)
io/corbel/resources/rem/dao/NamespaceNormalizerTest/testWithNoNamespace()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/resources/rem/dao/NamespaceNormalizerTest/testWithNoNamespace()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/resources/rem/dao/NamespaceNormalizerTest/testWithNamespace()#io/corbel/resources/rem/service/DefaultNamespaceNormalizer/normalize(java.lang.String)
io/corbel/resources/rem/dao/NamespaceNormalizerTest/testWithNamespace()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/resources/rem/dao/NamespaceNormalizerTest/testWithNamespace()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/resources/rem/dao/NamespaceNormalizerTest/testWithNull()#org/fest/assertions/api/AbstractAssert/isNull()
io/corbel/resources/rem/dao/NamespaceNormalizerTest/testWithNull()#io/corbel/resources/rem/service/DefaultNamespaceNormalizer/normalize(java.lang.String)
io/corbel/resources/rem/dao/NamespaceNormalizerTest/testWithNull()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/resources/rem/dao/NamespaceNormalizerTest/setup()#io/corbel/resources/rem/service/DefaultNamespaceNormalizer/DefaultNamespaceNormalizer()
io/corbel/resources/rem/service/DefaultImageOperationsService/addDefaultImageToIMOperation(org.im4java.core.IMOperation,java.lang.String)#io/corbel/resources/rem/service/DefaultImageOperationsService/addImageToIMOperation(org.im4java.core.IMOperation,java.lang.String)
io/corbel/resources/rem/service/DefaultImageOperationsService/addDefaultImageToIMOperation(org.im4java.core.IMOperation,java.lang.String)#org/im4java/core/Operation/addRawArgs(java.lang.String[])
io/corbel/resources/rem/service/DefaultImageOperationsService/getOutputFormatParameter(java.util.Optional)#java/util/Optional/orElse(T)
io/corbel/resources/rem/service/DefaultImageOperationsService/getOutputFormatParameter(java.util.Optional)#java/util/Optional/map(java.util.function.Function)
io/corbel/resources/rem/service/DefaultImageOperationsService/applyConversion(java.util.List,java.io.InputStream,java.io.OutputStream,java.util.Optional,java.lang.String)#io/corbel/resources/rem/service/DefaultImageOperationsService/addImageToIMOperation(org.im4java.core.IMOperation,java.lang.String)
io/corbel/resources/rem/service/DefaultImageOperationsService/applyConversion(java.util.List,java.io.InputStream,java.io.OutputStream,java.util.Optional,java.lang.String)#io/corbel/resources/rem/service/DefaultImageOperationsService/ConvertCmdFactory/create(java.io.InputStream,java.io.OutputStream)
io/corbel/resources/rem/service/DefaultImageOperationsService/applyConversion(java.util.List,java.io.InputStream,java.io.OutputStream,java.util.Optional,java.lang.String)#io/corbel/resources/rem/service/DefaultImageOperationsService/IMOperationFactory/create()
io/corbel/resources/rem/service/DefaultImageOperationsService/applyConversion(java.util.List,java.io.InputStream,java.io.OutputStream,java.util.Optional,java.lang.String)#io/corbel/resources/rem/service/DefaultImageOperationsService/addOperations(org.im4java.core.IMOperation,java.util.List)
io/corbel/resources/rem/service/DefaultImageOperationsService/applyConversion(java.util.List,java.io.InputStream,java.io.OutputStream,java.util.Optional,java.lang.String)#io/corbel/resources/rem/service/DefaultImageOperationsService/addDefaultImageToIMOperation(org.im4java.core.IMOperation,java.lang.String)
io/corbel/resources/rem/service/DefaultImageOperationsService/applyConversion(java.util.List,java.io.InputStream,java.io.OutputStream,java.util.Optional,java.lang.String)#io/corbel/resources/rem/service/DefaultImageOperationsService/getOutputFormatParameter(java.util.Optional)
io/corbel/resources/rem/service/DefaultImageOperationsService/applyConversion(java.util.List,java.io.InputStream,java.io.OutputStream,java.util.Optional,java.lang.String)#org/im4java/core/ImageCommand/run(org.im4java.core.Operation,java.lang.Object[])
io/corbel/resources/rem/service/DefaultImageOperationsService/addImageToIMOperation(org.im4java.core.IMOperation,java.lang.String)#org/im4java/core/Operation/addImage(java.lang.String[])
io/corbel/resources/rem/service/DefaultImageOperationsService/addOperations(org.im4java.core.IMOperation,java.util.List)#io/corbel/resources/rem/operation/ImageOperation/apply(java.lang.String)
io/corbel/resources/rem/service/DefaultImageOperationsService/addOperations(org.im4java.core.IMOperation,java.util.List)#io/corbel/resources/rem/exception/ImageOperationsException/ImageOperationsException(java.lang.String)
io/corbel/resources/rem/service/DefaultImageOperationsService/addOperations(org.im4java.core.IMOperation,java.util.List)#java/util/Map/get(java.lang.Object)
io/corbel/resources/rem/service/DefaultImageOperationsService/addOperations(org.im4java.core.IMOperation,java.util.List)#org/im4java/core/IMOperation/addSubOperation(org.im4java.core.Operation)
io/corbel/resources/rem/service/DefaultImageOperationsService/addOperations(org.im4java.core.IMOperation,java.util.List)#io/corbel/resources/rem/model/ImageOperationDescription/getParameters()
io/corbel/resources/rem/service/DefaultImageOperationsService/addOperations(org.im4java.core.IMOperation,java.util.List)#io/corbel/resources/rem/model/ImageOperationDescription/getName()
io/corbel/evci/api/EworkerInfoResource/getPluginsInfo()#java/util/ArrayList/ArrayList()
io/corbel/evci/api/EworkerInfoResource/getPluginsInfo()#io/corbel/evci/api/EworkerInfoResource/loadBuildMetadataProperties()
io/corbel/evci/api/EworkerInfoResource/getPluginsInfo()#java/util/Collection/stream()
io/corbel/evci/api/EworkerInfoResource/getPluginsInfo()#java/util/stream/Stream/forEach(java.util.function.Consumer)
io/corbel/evci/api/EworkerInfoResource/getPluginInfo()#javax/ws/rs/core/Response/ResponseBuilder/build()
io/corbel/evci/api/EworkerInfoResource/getPluginInfo()#javax/ws/rs/core/Response/ok()
io/corbel/evci/api/EworkerInfoResource/getPluginInfo()#javax/ws/rs/core/Response/ResponseBuilder/entity(java.lang.Object)
io/corbel/evci/api/EworkerInfoResource/loadBuildMetadataProperties()#org/slf4j/Logger/warn(java.lang.String,java.lang.Throwable)
io/corbel/evci/api/EworkerInfoResource/loadBuildMetadataProperties()#java/util/Properties/Properties()
io/corbel/evci/api/EworkerInfoResource/loadBuildMetadataProperties()#java/util/List/add(E)
io/corbel/evci/api/EworkerInfoResource/loadBuildMetadataProperties()#java/util/Properties/load(java.io.InputStream)
io/corbel/evci/api/EworkerInfoResource/loadBuildMetadataProperties()#java/lang/Class/getResourceAsStream(java.lang.String)
io/corbel/evci/api/EworkerInfoResource/loadBuildMetadataProperties()#java/util/ArrayList/ArrayList()
io/corbel/iam/service/DefaultDeviceService/deleteByUidAndUserId(java.lang.String,java.lang.String,java.lang.String)#io/corbel/iam/repository/DeviceRepository/deleteById(java.lang.String)
io/corbel/iam/service/DefaultDeviceService/deleteByUidAndUserId(java.lang.String,java.lang.String,java.lang.String)#io/corbel/iam/utils/UserDomainIdGenerator/generateDeviceId(java.lang.String,java.lang.String,java.lang.String)
io/corbel/iam/service/DefaultDeviceService/deleteByUidAndUserId(java.lang.String,java.lang.String,java.lang.String)#io/corbel/iam/service/EventsService/sendDeviceDeleteEvent(java.lang.String,java.lang.String,java.lang.String)
io/corbel/iam/service/DefaultDeviceService/addUserIdToQueries(java.lang.String,java.util.Optional)#java/util/stream/Stream/map(java.util.function.Function)
io/corbel/iam/service/DefaultDeviceService/addUserIdToQueries(java.lang.String,java.util.Optional)#java/util/Optional/orElseGet(java.util.function.Supplier)
io/corbel/iam/service/DefaultDeviceService/addUserIdToQueries(java.lang.String,java.util.Optional)#java/util/Collection/stream()
io/corbel/iam/service/DefaultDeviceService/addUserIdToQueries(java.lang.String,java.util.Optional)#java/util/stream/Collectors/toList()
io/corbel/iam/service/DefaultDeviceService/update(io.corbel.iam.model.Device,boolean)#io/corbel/iam/service/DefaultDeviceService/upsertDevice(io.corbel.iam.model.Device,boolean)
io/corbel/iam/service/DefaultDeviceService/update(io.corbel.iam.model.Device,boolean)#io/corbel/iam/model/Entity/setId(java.lang.String)
io/corbel/iam/service/DefaultDeviceService/update(io.corbel.iam.model.Device,boolean)#io/corbel/iam/model/Device/setLastConnection(java.util.Date)
io/corbel/iam/service/DefaultDeviceService/update(io.corbel.iam.model.Device,boolean)#io/corbel/iam/model/Device/setFirstConnection(java.util.Date)
io/corbel/iam/service/DefaultDeviceService/update(io.corbel.iam.model.Device,boolean)#io/corbel/lib/mongo/IdGenerator/generateId(E)
io/corbel/iam/service/DefaultDeviceService/deviceConnect(java.lang.String,java.lang.String,java.lang.String)#java/time/Clock/instant()
io/corbel/iam/service/DefaultDeviceService/deviceConnect(java.lang.String,java.lang.String,java.lang.String)#io/corbel/iam/repository/DeviceRepositoryCustom/updateLastConnectionIfExist(java.lang.String,java.util.Date)
io/corbel/iam/service/DefaultDeviceService/deviceConnect(java.lang.String,java.lang.String,java.lang.String)#java/util/Date/from(java.time.Instant)
io/corbel/iam/service/DefaultDeviceService/deviceConnect(java.lang.String,java.lang.String,java.lang.String)#io/corbel/iam/utils/UserDomainIdGenerator/generateDeviceId(java.lang.String,java.lang.String,java.lang.String)
io/corbel/iam/service/DefaultDeviceService/get(java.lang.String)#org/springframework/data/repository/CrudRepository/findOne(ID)
io/corbel/iam/service/DefaultDeviceService/deleteByUserId(io.corbel.iam.model.User)#io/corbel/iam/model/Entity/getId()
io/corbel/iam/service/DefaultDeviceService/deleteByUserId(io.corbel.iam.model.User)#io/corbel/iam/repository/DeviceRepository/deleteByUserId(java.lang.String)
io/corbel/iam/service/DefaultDeviceService/getByUidAndUserId(java.lang.String,java.lang.String,java.lang.String)#io/corbel/iam/repository/DeviceRepository/findById(java.lang.String)
io/corbel/iam/service/DefaultDeviceService/getByUidAndUserId(java.lang.String,java.lang.String,java.lang.String)#io/corbel/iam/utils/UserDomainIdGenerator/generateDeviceId(java.lang.String,java.lang.String,java.lang.String)
io/corbel/iam/service/DefaultDeviceService/getByUserId(java.lang.String,io.corbel.lib.queries.jaxrs.QueryParameters)#io/corbel/iam/service/DefaultDeviceService/addUserIdToQueries(java.lang.String,java.util.Optional)
io/corbel/iam/service/DefaultDeviceService/getByUserId(java.lang.String,io.corbel.lib.queries.jaxrs.QueryParameters)#io/corbel/lib/queries/jaxrs/QueryParameters/getQueries()
io/corbel/iam/service/DefaultDeviceService/getByUserId(java.lang.String,io.corbel.lib.queries.jaxrs.QueryParameters)#java/util/Optional/orElse(T)
io/corbel/iam/service/DefaultDeviceService/getByUserId(java.lang.String,io.corbel.lib.queries.jaxrs.QueryParameters)#io/corbel/lib/queries/jaxrs/QueryParameters/getPagination()
io/corbel/iam/service/DefaultDeviceService/getByUserId(java.lang.String,io.corbel.lib.queries.jaxrs.QueryParameters)#io/corbel/lib/queries/jaxrs/QueryParameters/getSort()
io/corbel/iam/service/DefaultDeviceService/getByUserId(java.lang.String,io.corbel.lib.queries.jaxrs.QueryParameters)#io/corbel/lib/queries/mongo/repository/GenericFindRepository/find(java.util.List,io.corbel.lib.queries.request.Pagination,io.corbel.lib.queries.request.Sort)
io/corbel/iam/service/DefaultDeviceService/update(io.corbel.iam.model.Device)#io/corbel/iam/service/DefaultDeviceService/update(io.corbel.iam.model.Device,boolean)
io/corbel/iam/service/DefaultDeviceService/upsertDevice(io.corbel.iam.model.Device,boolean)#io/corbel/iam/model/Entity/getId()
io/corbel/iam/service/DefaultDeviceService/upsertDevice(io.corbel.iam.model.Device,boolean)#java/time/Clock/instant()
io/corbel/iam/service/DefaultDeviceService/upsertDevice(io.corbel.iam.model.Device,boolean)#io/corbel/iam/model/Device/getFirstConnection()
io/corbel/iam/service/DefaultDeviceService/upsertDevice(io.corbel.iam.model.Device,boolean)#io/corbel/iam/model/Device/setLastConnection(java.util.Date)
io/corbel/iam/service/DefaultDeviceService/upsertDevice(io.corbel.iam.model.Device,boolean)#io/corbel/iam/model/Device/setFirstConnection(java.util.Date)
io/corbel/iam/service/DefaultDeviceService/upsertDevice(io.corbel.iam.model.Device,boolean)#java/util/Date/from(java.time.Instant)
io/corbel/iam/service/DefaultDeviceService/upsertDevice(io.corbel.iam.model.Device,boolean)#io/corbel/iam/service/EventsService/sendDeviceCreateEvent(io.corbel.iam.model.Device)
io/corbel/iam/service/DefaultDeviceService/upsertDevice(io.corbel.iam.model.Device,boolean)#io/corbel/iam/service/EventsService/sendDeviceUpdateEvent(io.corbel.iam.model.Device)
io/corbel/iam/service/DefaultDeviceService/upsertDevice(io.corbel.iam.model.Device,boolean)#io/corbel/iam/model/Device/getLastConnection()
io/corbel/iam/service/DefaultDeviceService/upsertDevice(io.corbel.iam.model.Device,boolean)#io/corbel/lib/mongo/repository/PartialUpdateRepository/upsert(ID,E)
io/corbel/iam/service/DefaultDeviceService/upsertDevice(io.corbel.iam.model.Device,boolean)#io/corbel/iam/model/Device/Device()
io/corbel/oauth/ioc/OauthMongoIoc/getMongoIndexes()#io/corbel/oauth/repository/MongoIndexes/MongoIndexes()
io/corbel/oauth/ioc/OauthMongoIoc/getDatabaseName()#org/springframework/core/env/PropertyResolver/getProperty(java.lang.String)
io/corbel/resources/rem/plugin/I18nRemPlugin/init()#org/springframework/context/annotation/AnnotationConfigApplicationContext/AnnotationConfigApplicationContext(java.lang.Class<?>[])
io/corbel/resources/rem/plugin/I18nRemPlugin/init()#io/corbel/resources/rem/plugin/RemPlugin/init()
io/corbel/resources/rem/plugin/I18nRemPlugin/init()#org/slf4j/Logger/info(java.lang.String)
io/corbel/resources/rem/plugin/I18nRemPlugin/init()#io/corbel/lib/config/ConfigurationHelper/setConfigurationNamespace(java.lang.String)
io/corbel/resources/rem/plugin/I18nRemPlugin/register(io.corbel.resources.rem.RemRegistry)#java/util/Map/forEach(java.util.function.BiConsumer)
io/corbel/resources/rem/plugin/I18nRemPlugin/register(io.corbel.resources.rem.RemRegistry)#org/springframework/beans/factory/BeanFactory/getBean(java.lang.String,java.lang.Class)
io/corbel/resources/rem/plugin/I18nRemPlugin/register(io.corbel.resources.rem.RemRegistry)#com/google/common/collect/ImmutableMap/of(K,V,K,V,K,V)
io/corbel/resources/rem/resmi/AbstractResmiRem/buildResponseWithCustomEtag(com.google.gson.JsonElement,java.lang.String)#javax/ws/rs/core/Response/ResponseBuilder/build()
io/corbel/resources/rem/resmi/AbstractResmiRem/buildResponseWithCustomEtag(com.google.gson.JsonElement,java.lang.String)#javax/ws/rs/core/Response/ok()
io/corbel/resources/rem/resmi/AbstractResmiRem/buildResponseWithCustomEtag(com.google.gson.JsonElement,java.lang.String)#javax/ws/rs/core/Response/ResponseBuilder/entity(java.lang.Object)
io/corbel/resources/rem/resmi/AbstractResmiRem/buildResponseWithCustomEtag(com.google.gson.JsonElement,java.lang.String)#javax/ws/rs/core/Response/ResponseBuilder/type(javax.ws.rs.core.MediaType)
io/corbel/resources/rem/resmi/AbstractResmiRem/buildResponseWithCustomEtag(com.google.gson.JsonElement,java.lang.String)#javax/ws/rs/core/Response/ResponseBuilder/header(java.lang.String,java.lang.Object)
io/corbel/resources/rem/resmi/AbstractResmiRem/buildResponseWithCustomEtag(com.google.gson.JsonElement,java.lang.String)#io/corbel/resources/rem/resmi/AbstractResmiRem/buildResponse(com.google.gson.JsonElement)
io/corbel/resources/rem/resmi/AbstractResmiRem/buildCollectionUri(java.lang.String,java.lang.String)#io/corbel/resources/rem/model/ResourceUri/ResourceUri(java.lang.String,java.lang.String)
io/corbel/resources/rem/resmi/AbstractResmiRem/created()#javax/ws/rs/core/Response/ResponseBuilder/build()
io/corbel/resources/rem/resmi/AbstractResmiRem/created()#javax/ws/rs/core/Response/status(javax.ws.rs.core.Response.Status)
io/corbel/resources/rem/resmi/AbstractResmiRem/buildEtag(com.google.gson.JsonArray)#com/google/gson/JsonObject/has(java.lang.String)
io/corbel/resources/rem/resmi/AbstractResmiRem/buildEtag(com.google.gson.JsonArray)#java/lang/StringBuilder/append(java.lang.String)
io/corbel/resources/rem/resmi/AbstractResmiRem/buildEtag(com.google.gson.JsonArray)#io/corbel/resources/rem/resmi/AbstractResmiRem/generateETagHeaderValue(java.lang.String)
io/corbel/resources/rem/resmi/AbstractResmiRem/buildEtag(com.google.gson.JsonArray)#com/google/gson/JsonElement/toString()
io/corbel/resources/rem/resmi/AbstractResmiRem/buildEtag(com.google.gson.JsonArray)#java/lang/StringBuilder/StringBuilder()
io/corbel/resources/rem/resmi/AbstractResmiRem/buildEtag(com.google.gson.JsonArray)#com/google/gson/JsonElement/getAsJsonObject()
io/corbel/resources/rem/resmi/AbstractResmiRem/buildEtag(com.google.gson.JsonArray)#java/lang/StringBuilder/toString()
io/corbel/resources/rem/resmi/AbstractResmiRem/buildEtag(com.google.gson.JsonArray)#com/google/gson/JsonObject/get(java.lang.String)
io/corbel/resources/rem/resmi/AbstractResmiRem/buildResponseWithCustomEtag(com.google.gson.JsonElement)#io/corbel/resources/rem/resmi/AbstractResmiRem/buildEtag(com.google.gson.JsonObject)
io/corbel/resources/rem/resmi/AbstractResmiRem/buildResponseWithCustomEtag(com.google.gson.JsonElement)#com/google/gson/JsonElement/isJsonObject()
io/corbel/resources/rem/resmi/AbstractResmiRem/buildResponseWithCustomEtag(com.google.gson.JsonElement)#io/corbel/resources/rem/resmi/AbstractResmiRem/buildResponseWithCustomEtag(com.google.gson.JsonElement,java.lang.String)
io/corbel/resources/rem/resmi/AbstractResmiRem/buildResponseWithCustomEtag(com.google.gson.JsonElement)#com/google/gson/JsonElement/isJsonArray()
io/corbel/resources/rem/resmi/AbstractResmiRem/buildResponseWithCustomEtag(com.google.gson.JsonElement)#io/corbel/resources/rem/resmi/AbstractResmiRem/buildEtag(com.google.gson.JsonArray)
io/corbel/resources/rem/resmi/AbstractResmiRem/buildResponseWithCustomEtag(com.google.gson.JsonElement)#com/google/gson/JsonElement/getAsJsonObject()
io/corbel/resources/rem/resmi/AbstractResmiRem/buildResponseWithCustomEtag(com.google.gson.JsonElement)#io/corbel/lib/ws/api/error/ErrorResponseFactory/notFound()
io/corbel/resources/rem/resmi/AbstractResmiRem/buildResponseWithCustomEtag(com.google.gson.JsonElement)#com/google/gson/JsonElement/getAsJsonArray()
io/corbel/resources/rem/resmi/AbstractResmiRem/buildResponseWithCustomEtag(com.google.gson.JsonElement)#io/corbel/lib/ws/api/error/ErrorResponseFactory/getInstance()
io/corbel/resources/rem/resmi/AbstractResmiRem/buildResponseWithCustomEtag(com.google.gson.JsonElement)#io/corbel/resources/rem/resmi/AbstractResmiRem/buildResponse(com.google.gson.JsonElement)
io/corbel/resources/rem/resmi/AbstractResmiRem/created(java.net.URI)#javax/ws/rs/core/Response/created(java.net.URI)
io/corbel/resources/rem/resmi/AbstractResmiRem/created(java.net.URI)#javax/ws/rs/core/Response/ResponseBuilder/build()
io/corbel/resources/rem/resmi/AbstractResmiRem/buildResponse(com.google.gson.JsonElement)#javax/ws/rs/core/Response/ResponseBuilder/build()
io/corbel/resources/rem/resmi/AbstractResmiRem/buildResponse(com.google.gson.JsonElement)#javax/ws/rs/core/Response/ok()
io/corbel/resources/rem/resmi/AbstractResmiRem/buildResponse(com.google.gson.JsonElement)#javax/ws/rs/core/Response/ResponseBuilder/entity(java.lang.Object)
io/corbel/resources/rem/resmi/AbstractResmiRem/buildResponse(com.google.gson.JsonElement)#io/corbel/lib/ws/api/error/ErrorResponseFactory/notFound()
io/corbel/resources/rem/resmi/AbstractResmiRem/buildResponse(com.google.gson.JsonElement)#javax/ws/rs/core/Response/ResponseBuilder/type(javax.ws.rs.core.MediaType)
io/corbel/resources/rem/resmi/AbstractResmiRem/buildResponse(com.google.gson.JsonElement)#io/corbel/lib/ws/api/error/ErrorResponseFactory/getInstance()
io/corbel/resources/rem/resmi/AbstractResmiRem/buildResourceUri(java.lang.String,java.lang.String,java.lang.String)#io/corbel/resources/rem/model/ResourceUri/ResourceUri(java.lang.String,java.lang.String,java.lang.String)
io/corbel/resources/rem/resmi/AbstractResmiRem/buildEtag(com.google.gson.JsonObject)#com/google/gson/JsonObject/has(java.lang.String)
io/corbel/resources/rem/resmi/AbstractResmiRem/buildEtag(com.google.gson.JsonObject)#io/corbel/resources/rem/resmi/AbstractResmiRem/generateETagHeaderValue(java.lang.String)
io/corbel/resources/rem/resmi/AbstractResmiRem/buildEtag(com.google.gson.JsonObject)#com/google/gson/JsonElement/getAsString()
io/corbel/resources/rem/resmi/AbstractResmiRem/buildEtag(com.google.gson.JsonObject)#com/google/gson/JsonObject/get(java.lang.String)
io/corbel/resources/rem/resmi/AbstractResmiRem/generateETagHeaderValue(java.lang.String)#java/lang/String/getBytes()
io/corbel/resources/rem/resmi/AbstractResmiRem/generateETagHeaderValue(java.lang.String)#org/springframework/util/DigestUtils/md5DigestAsHex(byte[])
io/corbel/resources/rem/resmi/AbstractResmiRem/buildRelationUri(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Optional)#io/corbel/resources/rem/model/ResourceUri/ResourceUri(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
io/corbel/resources/rem/resmi/AbstractResmiRem/buildRelationUri(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Optional)#java/util/Optional/orElse(T)
io/corbel/resources/rem/resmi/AbstractResmiRem/noContent()#javax/ws/rs/core/Response/noContent()
io/corbel/resources/rem/resmi/AbstractResmiRem/noContent()#javax/ws/rs/core/Response/ResponseBuilder/build()
io/corbel/notifications/model/NotificationTemplate/updateTemplate(io.corbel.notifications.model.NotificationTemplate)#io/corbel/notifications/model/NotificationTemplate/getText()
io/corbel/notifications/model/NotificationTemplate/updateTemplate(io.corbel.notifications.model.NotificationTemplate)#io/corbel/notifications/model/NotificationTemplate/getReplyTo()
io/corbel/notifications/model/NotificationTemplate/updateTemplate(io.corbel.notifications.model.NotificationTemplate)#io/corbel/notifications/model/NotificationTemplate/setTitle(java.lang.String)
io/corbel/notifications/model/NotificationTemplate/updateTemplate(io.corbel.notifications.model.NotificationTemplate)#io/corbel/notifications/model/NotificationTemplate/setName(java.lang.String)
io/corbel/notifications/model/NotificationTemplate/updateTemplate(io.corbel.notifications.model.NotificationTemplate)#io/corbel/notifications/model/NotificationTemplate/setText(java.lang.String)
io/corbel/notifications/model/NotificationTemplate/updateTemplate(io.corbel.notifications.model.NotificationTemplate)#io/corbel/notifications/model/NotificationTemplate/getSender()
io/corbel/notifications/model/NotificationTemplate/updateTemplate(io.corbel.notifications.model.NotificationTemplate)#io/corbel/notifications/model/NotificationTemplate/getType()
io/corbel/notifications/model/NotificationTemplate/updateTemplate(io.corbel.notifications.model.NotificationTemplate)#io/corbel/notifications/model/NotificationTemplate/setSender(java.lang.String)
io/corbel/notifications/model/NotificationTemplate/updateTemplate(io.corbel.notifications.model.NotificationTemplate)#io/corbel/notifications/model/NotificationTemplate/setReplyTo(java.lang.String)
io/corbel/notifications/model/NotificationTemplate/updateTemplate(io.corbel.notifications.model.NotificationTemplate)#io/corbel/notifications/model/NotificationTemplate/setType(java.lang.String)
io/corbel/notifications/model/NotificationTemplate/updateTemplate(io.corbel.notifications.model.NotificationTemplate)#io/corbel/notifications/model/NotificationTemplate/getTitle()
io/corbel/notifications/model/NotificationTemplate/updateTemplate(io.corbel.notifications.model.NotificationTemplate)#io/corbel/notifications/model/NotificationTemplate/getDomain()
io/corbel/notifications/model/NotificationTemplate/updateTemplate(io.corbel.notifications.model.NotificationTemplate)#io/corbel/notifications/model/NotificationTemplate/setDomain(java.lang.String)
io/corbel/notifications/model/NotificationTemplate/updateTemplate(io.corbel.notifications.model.NotificationTemplate)#io/corbel/notifications/model/NotificationTemplate/getName()
io/corbel/notifications/model/NotificationTemplate/equals(java.lang.Object)#java/lang/String/equals(java.lang.Object)
io/corbel/notifications/model/NotificationTemplate/equals(java.lang.Object)#java/lang/Object/getClass()
io/corbel/notifications/model/NotificationTemplate/hashCode()#java/lang/String/hashCode()
io/corbel/resources/rem/service/DefaultAclResourcesService/getResmiGetRem()#io/corbel/resources/rem/service/RemService/getRem(java.lang.String)
io/corbel/resources/rem/service/DefaultAclResourcesService/deleteRelation(io.corbel.resources.rem.Rem,java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.List)#java/util/Optional/ofNullable(T)
io/corbel/resources/rem/service/DefaultAclResourcesService/deleteRelation(io.corbel.resources.rem.Rem,java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.List)#io/corbel/resources/rem/Rem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)
io/corbel/resources/rem/service/DefaultAclResourcesService/updateResource(io.corbel.resources.rem.Rem,java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.lang.Object,java.util.List)#io/corbel/resources/rem/Rem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)
io/corbel/resources/rem/service/DefaultAclResourcesService/updateResource(io.corbel.resources.rem.Rem,java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.lang.Object,java.util.List)#java/util/Optional/ofNullable(T)
io/corbel/resources/rem/service/DefaultAclResourcesService/updateResource(io.corbel.resources.rem.Rem,java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.lang.Object,java.util.List)#java/util/Optional/of(T)
io/corbel/resources/rem/service/DefaultAclResourcesService/isAuthorized(java.lang.String,io.corbel.lib.token.TokenInfo,java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.model.AclPermission)#io/corbel/lib/token/TokenInfo/getDomainId()
io/corbel/resources/rem/service/DefaultAclResourcesService/isAuthorized(java.lang.String,io.corbel.lib.token.TokenInfo,java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.model.AclPermission)#io/corbel/lib/token/TokenInfo/getUserId()
io/corbel/resources/rem/service/DefaultAclResourcesService/isAuthorized(java.lang.String,io.corbel.lib.token.TokenInfo,java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.model.AclPermission)#java/util/Optional/ofNullable(T)
io/corbel/resources/rem/service/DefaultAclResourcesService/isAuthorized(java.lang.String,io.corbel.lib.token.TokenInfo,java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.model.AclPermission)#io/corbel/resources/rem/service/DefaultAclResourcesService/isAuthorized(java.lang.String,java.lang.String,java.util.Optional,java.util.Collection,java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.model.AclPermission)
io/corbel/resources/rem/service/DefaultAclResourcesService/isAuthorized(java.lang.String,io.corbel.lib.token.TokenInfo,java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.model.AclPermission)#io/corbel/lib/token/TokenInfo/getGroups()
io/corbel/resources/rem/service/DefaultAclResourcesService/isAuthorized(java.lang.String,java.lang.String,java.util.Optional,java.util.Collection,java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.model.AclPermission)#io/corbel/resources/rem/service/DefaultAclResourcesService/getResourceIfIsAuthorized(java.lang.String,java.lang.String,java.util.Optional,java.util.Collection,java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.model.AclPermission)
io/corbel/resources/rem/service/DefaultAclResourcesService/isAuthorized(java.lang.String,java.lang.String,java.util.Optional,java.util.Collection,java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.model.AclPermission)#java/util/Optional/isPresent()
io/corbel/resources/rem/service/DefaultAclResourcesService/checkAclEntry(com.google.gson.JsonObject,java.lang.String,io.corbel.resources.rem.model.AclPermission)#java/util/Optional/filter(java.util.function.Predicate)
io/corbel/resources/rem/service/DefaultAclResourcesService/checkAclEntry(com.google.gson.JsonObject,java.lang.String,io.corbel.resources.rem.model.AclPermission)#java/util/Optional/flatMap(java.util.function.Function)
io/corbel/resources/rem/service/DefaultAclResourcesService/checkAclEntry(com.google.gson.JsonObject,java.lang.String,io.corbel.resources.rem.model.AclPermission)#java/util/Optional/ofNullable(T)
io/corbel/resources/rem/service/DefaultAclResourcesService/checkAclEntry(com.google.gson.JsonObject,java.lang.String,io.corbel.resources.rem.model.AclPermission)#java/util/Optional/map(java.util.function.Function)
io/corbel/resources/rem/service/DefaultAclResourcesService/checkAclEntry(com.google.gson.JsonObject,java.lang.String,io.corbel.resources.rem.model.AclPermission)#java/util/Optional/isPresent()
io/corbel/resources/rem/service/DefaultAclResourcesService/checkAclEntry(com.google.gson.JsonObject,java.lang.String,io.corbel.resources.rem.model.AclPermission)#com/google/gson/JsonObject/get(java.lang.String)
io/corbel/resources/rem/service/DefaultAclResourcesService/getResource(io.corbel.resources.rem.Rem,java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.List)#io/corbel/resources/rem/Rem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)
io/corbel/resources/rem/service/DefaultAclResourcesService/getResource(io.corbel.resources.rem.Rem,java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.List)#java/util/Optional/ofNullable(T)
io/corbel/resources/rem/service/DefaultAclResourcesService/verifyPresence(java.util.Optional,java.util.Collection,io.corbel.resources.rem.model.ManagedCollection)#java/util/Optional/orElse(T)
io/corbel/resources/rem/service/DefaultAclResourcesService/verifyPresence(java.util.Optional,java.util.Collection,io.corbel.resources.rem.model.ManagedCollection)#io/corbel/resources/rem/model/ManagedCollection/getGroups()
io/corbel/resources/rem/service/DefaultAclResourcesService/verifyPresence(java.util.Optional,java.util.Collection,io.corbel.resources.rem.model.ManagedCollection)#java/util/Collection/stream()
io/corbel/resources/rem/service/DefaultAclResourcesService/verifyPresence(java.util.Optional,java.util.Collection,io.corbel.resources.rem.model.ManagedCollection)#java/util/Optional/map(java.util.function.Function)
io/corbel/resources/rem/service/DefaultAclResourcesService/verifyPresence(java.util.Optional,java.util.Collection,io.corbel.resources.rem.model.ManagedCollection)#java/util/stream/Stream/anyMatch(java.util.function.Predicate)
io/corbel/resources/rem/service/DefaultAclResourcesService/isManagedBy(java.lang.String,io.corbel.lib.token.TokenInfo,java.lang.String)#io/corbel/resources/rem/service/DefaultAclResourcesService/isManagedBy(java.lang.String,java.util.Optional,java.util.Collection,java.lang.String)
io/corbel/resources/rem/service/DefaultAclResourcesService/isManagedBy(java.lang.String,io.corbel.lib.token.TokenInfo,java.lang.String)#io/corbel/lib/token/TokenInfo/getUserId()
io/corbel/resources/rem/service/DefaultAclResourcesService/isManagedBy(java.lang.String,io.corbel.lib.token.TokenInfo,java.lang.String)#java/util/Optional/ofNullable(T)
io/corbel/resources/rem/service/DefaultAclResourcesService/isManagedBy(java.lang.String,io.corbel.lib.token.TokenInfo,java.lang.String)#io/corbel/lib/token/TokenInfo/getGroups()
io/corbel/resources/rem/service/DefaultAclResourcesService/saveResource(io.corbel.resources.rem.Rem,io.corbel.resources.rem.request.RequestParameters,java.lang.String,java.net.URI,java.lang.Object,java.util.List)#java/util/Optional/of(T)
io/corbel/resources/rem/service/DefaultAclResourcesService/saveResource(io.corbel.resources.rem.Rem,io.corbel.resources.rem.request.RequestParameters,java.lang.String,java.net.URI,java.lang.Object,java.util.List)#io/corbel/resources/rem/Rem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional,java.util.Optional)
io/corbel/resources/rem/service/DefaultAclResourcesService/saveResource(io.corbel.resources.rem.Rem,io.corbel.resources.rem.request.RequestParameters,java.lang.String,java.net.URI,java.lang.Object,java.util.List)#java/util/Optional/ofNullable(T)
io/corbel/resources/rem/service/DefaultAclResourcesService/getResourceIfIsAuthorized(java.lang.String,java.lang.String,java.util.Optional,java.util.Collection,java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.model.AclPermission)#java/util/Optional/filter(java.util.function.Predicate)
io/corbel/resources/rem/service/DefaultAclResourcesService/getResourceIfIsAuthorized(java.lang.String,java.lang.String,java.util.Optional,java.util.Collection,java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.model.AclPermission)#java/util/Optional/flatMap(java.util.function.Function)
io/corbel/resources/rem/service/DefaultAclResourcesService/getResourceIfIsAuthorized(java.lang.String,java.lang.String,java.util.Optional,java.util.Collection,java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.model.AclPermission)#io/corbel/resources/rem/service/DefaultAclResourcesService/isManagedBy(java.lang.String,java.util.Optional,java.util.Collection,java.lang.String)
io/corbel/resources/rem/service/DefaultAclResourcesService/getResourceIfIsAuthorized(java.lang.String,java.lang.String,java.util.Optional,java.util.Collection,java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.model.AclPermission)#java/util/Optional/map(java.util.function.Function)
io/corbel/resources/rem/service/DefaultAclResourcesService/getResourceIfIsAuthorized(java.lang.String,java.lang.String,java.util.Optional,java.util.Collection,java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.model.AclPermission)#io/corbel/resources/rem/acl/exception/AclFieldNotPresentException/AclFieldNotPresentException()
io/corbel/resources/rem/service/DefaultAclResourcesService/getResourceIfIsAuthorized(java.lang.String,java.lang.String,java.util.Optional,java.util.Collection,java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.model.AclPermission)#io/corbel/resources/rem/service/DefaultAclResourcesService/getResource(java.lang.String,java.lang.String,io.corbel.resources.rem.request.ResourceId)
io/corbel/resources/rem/service/DefaultAclResourcesService/getResourceIfIsAuthorized(java.lang.String,java.lang.String,java.util.Optional,java.util.Collection,java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.model.AclPermission)#java/util/Optional/isPresent()
io/corbel/resources/rem/service/DefaultAclResourcesService/isManagedBy(java.lang.String,java.util.Optional,java.util.Collection,java.lang.String)#java/util/Optional/filter(java.util.function.Predicate)
io/corbel/resources/rem/service/DefaultAclResourcesService/isManagedBy(java.lang.String,java.util.Optional,java.util.Collection,java.lang.String)#java/util/Collection/isEmpty()
io/corbel/resources/rem/service/DefaultAclResourcesService/isManagedBy(java.lang.String,java.util.Optional,java.util.Collection,java.lang.String)#io/corbel/resources/rem/service/DefaultAclResourcesService/getManagers(java.lang.String)
io/corbel/resources/rem/service/DefaultAclResourcesService/isManagedBy(java.lang.String,java.util.Optional,java.util.Collection,java.lang.String)#java/util/Optional/isPresent()
io/corbel/resources/rem/service/DefaultAclResourcesService/isManagedBy(java.lang.String,java.util.Optional,java.util.Collection,java.lang.String)#io/corbel/resources/rem/service/DefaultAclResourcesService/getManagers(java.lang.String,java.lang.String)
io/corbel/resources/rem/service/DefaultAclResourcesService/getRelation(io.corbel.resources.rem.Rem,java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.List)#java/util/Optional/ofNullable(T)
io/corbel/resources/rem/service/DefaultAclResourcesService/getRelation(io.corbel.resources.rem.Rem,java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.List)#io/corbel/resources/rem/Rem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)
io/corbel/resources/rem/service/DefaultAclResourcesService/getCollection(io.corbel.resources.rem.Rem,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.List)#io/corbel/resources/rem/Rem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional,java.util.Optional)
io/corbel/resources/rem/service/DefaultAclResourcesService/getCollection(io.corbel.resources.rem.Rem,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.List)#java/util/Optional/ofNullable(T)
io/corbel/resources/rem/service/DefaultAclResourcesService/checkAclEntry(com.google.gson.JsonObject,java.lang.String,java.util.Collection,io.corbel.resources.rem.model.AclPermission)#java/util/stream/Stream/map(java.util.function.Function)
io/corbel/resources/rem/service/DefaultAclResourcesService/checkAclEntry(com.google.gson.JsonObject,java.lang.String,java.util.Collection,io.corbel.resources.rem.model.AclPermission)#java/util/Collection/stream()
io/corbel/resources/rem/service/DefaultAclResourcesService/checkAclEntry(com.google.gson.JsonObject,java.lang.String,java.util.Collection,io.corbel.resources.rem.model.AclPermission)#java/util/stream/Stream/anyMatch(java.util.function.Predicate)
io/corbel/resources/rem/service/DefaultAclResourcesService/objectToManagedCollection(java.lang.Object)#java/util/Optional/of(T)
io/corbel/resources/rem/service/DefaultAclResourcesService/objectToManagedCollection(java.lang.Object)#java/util/Optional/empty()
io/corbel/resources/rem/service/DefaultAclResourcesService/objectToManagedCollection(java.lang.Object)#com/google/gson/Gson/fromJson(com.google.gson.JsonElement,java.lang.Class)
io/corbel/resources/rem/service/DefaultAclResourcesService/deleteResource(io.corbel.resources.rem.Rem,java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.List)#io/corbel/resources/rem/Rem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)
io/corbel/resources/rem/service/DefaultAclResourcesService/deleteResource(io.corbel.resources.rem.Rem,java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.List)#java/util/Optional/ofNullable(T)
io/corbel/resources/rem/service/DefaultAclResourcesService/getManagers(java.lang.String)#javax/ws/rs/WebApplicationException/getResponse()
io/corbel/resources/rem/service/DefaultAclResourcesService/getManagers(java.lang.String)#javax/ws/rs/core/Response/Status/getStatusCode()
io/corbel/resources/rem/service/DefaultAclResourcesService/getManagers(java.lang.String)#java/util/Optional/flatMap(java.util.function.Function)
io/corbel/resources/rem/service/DefaultAclResourcesService/getManagers(java.lang.String)#io/corbel/resources/rem/request/ResourceId/ResourceId(java.lang.String)
io/corbel/resources/rem/service/DefaultAclResourcesService/getManagers(java.lang.String)#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/rem/service/DefaultAclResourcesService/getManagers(java.lang.String)#java/util/Optional/empty()
io/corbel/resources/rem/service/DefaultAclResourcesService/getManagers(java.lang.String)#io/corbel/resources/rem/service/DefaultAclResourcesService/getResource(java.lang.String,java.lang.String,io.corbel.resources.rem.request.ResourceId)
io/corbel/resources/rem/service/DefaultAclResourcesService/getResource(java.lang.String,java.lang.String,io.corbel.resources.rem.request.ResourceId)#io/corbel/resources/rem/service/DefaultAclResourcesService/getResmiGetRem()
io/corbel/resources/rem/service/DefaultAclResourcesService/getResource(java.lang.String,java.lang.String,io.corbel.resources.rem.request.ResourceId)#javax/ws/rs/core/Response/getEntity()
io/corbel/resources/rem/service/DefaultAclResourcesService/getResource(java.lang.String,java.lang.String,io.corbel.resources.rem.request.ResourceId)#javax/ws/rs/core/Response/Status/getStatusCode()
io/corbel/resources/rem/service/DefaultAclResourcesService/getResource(java.lang.String,java.lang.String,io.corbel.resources.rem.request.ResourceId)#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/rem/service/DefaultAclResourcesService/getResource(java.lang.String,java.lang.String,io.corbel.resources.rem.request.ResourceId)#io/corbel/resources/rem/request/builder/RequestParametersBuilder/RequestParametersBuilder(java.lang.String)
io/corbel/resources/rem/service/DefaultAclResourcesService/getResource(java.lang.String,java.lang.String,io.corbel.resources.rem.request.ResourceId)#java/util/Optional/empty()
io/corbel/resources/rem/service/DefaultAclResourcesService/getResource(java.lang.String,java.lang.String,io.corbel.resources.rem.request.ResourceId)#io/corbel/resources/rem/Rem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)
io/corbel/resources/rem/service/DefaultAclResourcesService/getResource(java.lang.String,java.lang.String,io.corbel.resources.rem.request.ResourceId)#java/util/Optional/of(T)
io/corbel/resources/rem/service/DefaultAclResourcesService/getResource(java.lang.String,java.lang.String,io.corbel.resources.rem.request.ResourceId)#javax/ws/rs/WebApplicationException/WebApplicationException(javax.ws.rs.core.Response)
io/corbel/resources/rem/service/DefaultAclResourcesService/getResource(java.lang.String,java.lang.String,io.corbel.resources.rem.request.ResourceId)#io/corbel/resources/rem/request/builder/RequestParametersBuilder/build()
io/corbel/resources/rem/service/DefaultAclResourcesService/getResourceIfIsAuthorized(java.lang.String,io.corbel.lib.token.TokenInfo,java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.model.AclPermission)#io/corbel/lib/token/TokenInfo/getDomainId()
io/corbel/resources/rem/service/DefaultAclResourcesService/getResourceIfIsAuthorized(java.lang.String,io.corbel.lib.token.TokenInfo,java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.model.AclPermission)#io/corbel/resources/rem/service/DefaultAclResourcesService/getResourceIfIsAuthorized(java.lang.String,java.lang.String,java.util.Optional,java.util.Collection,java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.model.AclPermission)
io/corbel/resources/rem/service/DefaultAclResourcesService/getResourceIfIsAuthorized(java.lang.String,io.corbel.lib.token.TokenInfo,java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.model.AclPermission)#io/corbel/lib/token/TokenInfo/getUserId()
io/corbel/resources/rem/service/DefaultAclResourcesService/getResourceIfIsAuthorized(java.lang.String,io.corbel.lib.token.TokenInfo,java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.model.AclPermission)#java/util/Optional/ofNullable(T)
io/corbel/resources/rem/service/DefaultAclResourcesService/getResourceIfIsAuthorized(java.lang.String,io.corbel.lib.token.TokenInfo,java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.model.AclPermission)#io/corbel/lib/token/TokenInfo/getGroups()
io/corbel/resources/rem/service/DefaultAclResourcesService/putRelation(io.corbel.resources.rem.Rem,java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.lang.Object,java.util.List)#java/util/Optional/ofNullable(T)
io/corbel/resources/rem/service/DefaultAclResourcesService/putRelation(io.corbel.resources.rem.Rem,java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.lang.Object,java.util.List)#java/util/Optional/of(T)
io/corbel/resources/rem/service/DefaultAclResourcesService/putRelation(io.corbel.resources.rem.Rem,java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.lang.Object,java.util.List)#io/corbel/resources/rem/Rem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)
io/corbel/resources/rem/service/DefaultAclResourcesService/getManagers(java.lang.String,java.lang.String)#io/corbel/resources/rem/service/DefaultAclResourcesService/getResmiGetRem()
io/corbel/resources/rem/service/DefaultAclResourcesService/getManagers(java.lang.String,java.lang.String)#io/corbel/lib/queries/builder/ResourceQueryBuilder/ResourceQueryBuilder()
io/corbel/resources/rem/service/DefaultAclResourcesService/getManagers(java.lang.String,java.lang.String)#io/corbel/resources/rem/service/DefaultAclResourcesService/objectToManagedCollection(java.lang.Object)
io/corbel/resources/rem/service/DefaultAclResourcesService/getManagers(java.lang.String,java.lang.String)#io/corbel/resources/rem/request/builder/RequestParametersBuilder/build()
io/corbel/resources/rem/service/DefaultAclResourcesService/getManagers(java.lang.String,java.lang.String)#com/google/gson/JsonElement/getAsJsonObject()
io/corbel/resources/rem/service/DefaultAclResourcesService/getManagers(java.lang.String,java.lang.String)#com/google/gson/JsonArray/size()
io/corbel/resources/rem/service/DefaultAclResourcesService/getManagers(java.lang.String,java.lang.String)#io/corbel/resources/rem/request/builder/RequestParametersBuilder/RequestParametersBuilder(java.lang.String)
io/corbel/resources/rem/service/DefaultAclResourcesService/getManagers(java.lang.String,java.lang.String)#io/corbel/resources/rem/request/builder/RequestParametersBuilder/apiParameters(E)
io/corbel/resources/rem/service/DefaultAclResourcesService/getManagers(java.lang.String,java.lang.String)#io/corbel/resources/rem/request/builder/QueryParametersBuilder/QueryParametersBuilder()
io/corbel/resources/rem/service/DefaultAclResourcesService/getManagers(java.lang.String,java.lang.String)#com/google/gson/JsonArray/get(int)
io/corbel/resources/rem/service/DefaultAclResourcesService/getManagers(java.lang.String,java.lang.String)#javax/ws/rs/core/Response/getEntity()
io/corbel/resources/rem/service/DefaultAclResourcesService/getManagers(java.lang.String,java.lang.String)#io/corbel/lib/queries/builder/ResourceQueryBuilder/add(java.lang.String,java.lang.String)
io/corbel/resources/rem/service/DefaultAclResourcesService/getManagers(java.lang.String,java.lang.String)#io/corbel/lib/queries/builder/ResourceQueryBuilder/build()
io/corbel/resources/rem/service/DefaultAclResourcesService/getManagers(java.lang.String,java.lang.String)#javax/ws/rs/core/Response/Status/getStatusCode()
io/corbel/resources/rem/service/DefaultAclResourcesService/getManagers(java.lang.String,java.lang.String)#io/corbel/resources/rem/request/builder/QueryParametersBuilder/query(io.corbel.lib.queries.request.ResourceQuery)
io/corbel/resources/rem/service/DefaultAclResourcesService/getManagers(java.lang.String,java.lang.String)#io/corbel/resources/rem/service/DefaultAclResourcesService/getCollection(io.corbel.resources.rem.Rem,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.List)
io/corbel/resources/rem/service/DefaultAclResourcesService/getManagers(java.lang.String,java.lang.String)#io/corbel/resources/rem/request/CollectionParametersImpl/CollectionParametersImpl(io.corbel.lib.queries.jaxrs.QueryParameters)
io/corbel/resources/rem/service/DefaultAclResourcesService/getManagers(java.lang.String,java.lang.String)#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/rem/service/DefaultAclResourcesService/getManagers(java.lang.String,java.lang.String)#java/util/Optional/empty()
io/corbel/resources/rem/service/DefaultAclResourcesService/getManagers(java.lang.String,java.lang.String)#io/corbel/resources/rem/request/builder/QueryParametersBuilder/build()
io/corbel/iam/utils/DefaultTokenCookieFactory/createCookie(java.lang.String,int)#javax/ws/rs/core/NewCookie/NewCookie(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,int,boolean)
io/corbel/resources/rem/resmi/ioc/DefaultElasticSearchConfiguration/elasticsearchTemplate()#org/elasticsearch/client/transport/TransportClient/addTransportAddresses(org.elasticsearch.common.transport.TransportAddress[])
io/corbel/resources/rem/resmi/ioc/DefaultElasticSearchConfiguration/elasticsearchTemplate()#org/elasticsearch/client/transport/TransportClient/builder()
io/corbel/resources/rem/resmi/ioc/DefaultElasticSearchConfiguration/elasticsearchTemplate()#org/elasticsearch/common/settings/Settings/builder()
io/corbel/resources/rem/resmi/ioc/DefaultElasticSearchConfiguration/elasticsearchTemplate()#java/util/Optional/ofNullable(T)
io/corbel/resources/rem/resmi/ioc/DefaultElasticSearchConfiguration/elasticsearchTemplate()#java/util/Optional/ifPresent(java.util.function.Consumer)
io/corbel/resources/rem/resmi/ioc/DefaultElasticSearchConfiguration/elasticsearchTemplate()#org/elasticsearch/common/transport/InetSocketTransportAddress/InetSocketTransportAddress(java.net.InetSocketAddress)
io/corbel/resources/rem/resmi/ioc/DefaultElasticSearchConfiguration/elasticsearchTemplate()#java/lang/Integer/parseInt(java.lang.String)
io/corbel/resources/rem/resmi/ioc/DefaultElasticSearchConfiguration/elasticsearchTemplate()#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String,java.lang.Throwable)
io/corbel/resources/rem/resmi/ioc/DefaultElasticSearchConfiguration/elasticsearchTemplate()#java/lang/String/split(java.lang.String)
io/corbel/resources/rem/resmi/ioc/DefaultElasticSearchConfiguration/elasticsearchTemplate()#java/net/InetSocketAddress/InetSocketAddress(java.lang.String,int)
io/corbel/resources/rem/resmi/ioc/DefaultElasticSearchConfiguration/elasticsearchTemplate()#java/lang/String/trim()
io/corbel/resources/rem/resmi/ioc/DefaultElasticSearchConfiguration/elasticsearchTemplate()#org/elasticsearch/client/transport/TransportClient/Builder/settings(org.elasticsearch.common.settings.Settings.Builder)
io/corbel/resources/rem/resmi/ioc/DefaultElasticSearchConfiguration/elasticsearchTemplate()#org/elasticsearch/common/settings/Settings/Builder/put(java.lang.String,java.lang.String)
io/corbel/resources/rem/resmi/ioc/DefaultElasticSearchConfiguration/elasticsearchTemplate()#org/elasticsearch/client/transport/TransportClient/Builder/build()
io/corbel/resources/rem/service/WithSearchResmiServiceTest/findWithSearchTest()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/service/WithSearchResmiServiceTest/findWithSearchTest()#io/corbel/lib/queries/request/Search/getParams()
io/corbel/resources/rem/service/WithSearchResmiServiceTest/findWithSearchTest()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/service/WithSearchResmiServiceTest/findWithSearchTest()#io/corbel/lib/queries/request/Search/getText()
io/corbel/resources/rem/service/WithSearchResmiServiceTest/findWithSearchTest()#io/corbel/resources/rem/search/ResmiSearch/search(io.corbel.resources.rem.model.ResourceUri,java.lang.String,java.util.List,io.corbel.lib.queries.request.Pagination,java.util.Optional)
io/corbel/resources/rem/service/WithSearchResmiServiceTest/findWithSearchTest()#java/util/Optional/of(T)
io/corbel/resources/rem/service/WithSearchResmiServiceTest/findWithSearchTest()#io/corbel/resources/rem/service/SearchableFieldsRegistry/getFieldsFromResourceUri(io.corbel.resources.rem.model.ResourceUri)
io/corbel/resources/rem/service/WithSearchResmiServiceTest/findWithSearchTest()#org/fest/assertions/api/Assertions/assertThat(java.lang.Iterable)
io/corbel/resources/rem/service/WithSearchResmiServiceTest/findWithSearchTest()#java/util/Optional/empty()
io/corbel/resources/rem/service/WithSearchResmiServiceTest/findWithSearchTest()#com/google/gson/JsonArray/JsonArray()
io/corbel/resources/rem/service/WithSearchResmiServiceTest/findWithSearchTest()#org/mockito/Matchers/eq(T)
io/corbel/resources/rem/service/WithSearchResmiServiceTest/findWithSearchTest()#io/corbel/resources/rem/model/ResourceUri/ResourceUri(java.lang.String,java.lang.String)
io/corbel/resources/rem/service/WithSearchResmiServiceTest/findWithSearchTest()#io/corbel/lib/queries/request/Pagination/getPage()
io/corbel/resources/rem/service/WithSearchResmiServiceTest/findWithSearchTest()#io/corbel/lib/queries/request/Search/indexFieldsOnly()
io/corbel/resources/rem/service/WithSearchResmiServiceTest/findWithSearchTest()#java/util/Optional/get()
io/corbel/resources/rem/service/WithSearchResmiServiceTest/findWithSearchTest()#io/corbel/lib/queries/request/Pagination/getPageSize()
io/corbel/resources/rem/service/WithSearchResmiServiceTest/findWithSearchTest()#io/corbel/resources/rem/service/DefaultResmiService/findCollection(io.corbel.resources.rem.model.ResourceUri,java.util.Optional)
io/corbel/resources/rem/service/WithSearchResmiServiceTest/findWithSearchTest()#java/util/Arrays/asList(T[])
io/corbel/resources/rem/service/WithSearchResmiServiceTest/findWithSearchTest()#java/util/HashSet/HashSet(java.util.Collection)
io/corbel/resources/rem/service/WithSearchResmiServiceTest/findWithSearchTest()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/resources/rem/service/WithSearchResmiServiceTest/findInRelationWithSearchTest()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/service/WithSearchResmiServiceTest/findInRelationWithSearchTest()#io/corbel/lib/queries/request/Search/getParams()
io/corbel/resources/rem/service/WithSearchResmiServiceTest/findInRelationWithSearchTest()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/service/WithSearchResmiServiceTest/findInRelationWithSearchTest()#io/corbel/lib/queries/request/Search/getText()
io/corbel/resources/rem/service/WithSearchResmiServiceTest/findInRelationWithSearchTest()#java/util/Arrays/asList(T[])
io/corbel/resources/rem/service/WithSearchResmiServiceTest/findInRelationWithSearchTest()#java/util/Optional/of(T)
io/corbel/resources/rem/service/WithSearchResmiServiceTest/findInRelationWithSearchTest()#org/fest/assertions/api/Assertions/assertThat(java.lang.Iterable)
io/corbel/resources/rem/service/WithSearchResmiServiceTest/findInRelationWithSearchTest()#com/google/gson/JsonArray/JsonArray()
io/corbel/resources/rem/service/WithSearchResmiServiceTest/findInRelationWithSearchTest()#org/mockito/Matchers/eq(T)
io/corbel/resources/rem/service/WithSearchResmiServiceTest/findInRelationWithSearchTest()#io/corbel/lib/queries/request/Pagination/getPage()
io/corbel/resources/rem/service/WithSearchResmiServiceTest/findInRelationWithSearchTest()#io/corbel/resources/rem/model/ResourceUri/ResourceUri(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
io/corbel/resources/rem/service/WithSearchResmiServiceTest/findInRelationWithSearchTest()#io/corbel/lib/queries/request/Search/indexFieldsOnly()
io/corbel/resources/rem/service/WithSearchResmiServiceTest/findInRelationWithSearchTest()#java/util/Optional/get()
io/corbel/resources/rem/service/WithSearchResmiServiceTest/findInRelationWithSearchTest()#io/corbel/lib/queries/request/Pagination/getPageSize()
io/corbel/resources/rem/service/WithSearchResmiServiceTest/findInRelationWithSearchTest()#java/lang/Object/toString()
io/corbel/resources/rem/service/WithSearchResmiServiceTest/findInRelationWithSearchTest()#org/mockito/ArgumentCaptor/getValue()
io/corbel/resources/rem/service/WithSearchResmiServiceTest/findInRelationWithSearchTest()#org/mockito/ArgumentCaptor/forClass(java.lang.Class)
io/corbel/resources/rem/service/WithSearchResmiServiceTest/findInRelationWithSearchTest()#org/mockito/Mockito/verify(T)
io/corbel/resources/rem/service/WithSearchResmiServiceTest/findInRelationWithSearchTest()#io/corbel/resources/rem/service/DefaultResmiService/findRelation(io.corbel.resources.rem.model.ResourceUri,java.util.Optional)
io/corbel/resources/rem/service/WithSearchResmiServiceTest/findInRelationWithSearchTest()#io/corbel/resources/rem/search/ResmiSearch/search(io.corbel.resources.rem.model.ResourceUri,java.lang.String,java.util.List,io.corbel.lib.queries.request.Pagination,java.util.Optional)
io/corbel/resources/rem/service/WithSearchResmiServiceTest/findInRelationWithSearchTest()#io/corbel/resources/rem/request/CollectionParameters/getQueries()
io/corbel/resources/rem/service/WithSearchResmiServiceTest/findInRelationWithSearchTest()#io/corbel/resources/rem/service/SearchableFieldsRegistry/getFieldsFromResourceUri(io.corbel.resources.rem.model.ResourceUri)
io/corbel/resources/rem/service/WithSearchResmiServiceTest/findInRelationWithSearchTest()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/resources/rem/service/WithSearchResmiServiceTest/findInRelationWithSearchTest()#org/mockito/ArgumentCaptor/capture()
io/corbel/resources/rem/service/WithSearchResmiServiceTest/findInRelationWithSearchTest()#org/mockito/Matchers/any()
io/corbel/resources/rem/service/WithSearchResmiServiceTest/findInRelationWithSearchTest()#java/util/Optional/empty()
io/corbel/resources/rem/service/WithSearchResmiServiceTest/findInRelationWithSearchTest()#java/util/HashSet/HashSet(java.util.Collection)
io/corbel/resources/rem/service/WithSearchResmiServiceTest/findInRelationWithSearchTest()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/resources/rem/service/WithSearchResmiServiceTest/deleteResourceByIdTest()#io/corbel/resources/rem/service/DefaultResmiService/deleteResource(io.corbel.resources.rem.model.ResourceUri)
io/corbel/resources/rem/service/WithSearchResmiServiceTest/deleteResourceByIdTest()#org/mockito/Matchers/any()
io/corbel/resources/rem/service/WithSearchResmiServiceTest/deleteResourceByIdTest()#io/corbel/resources/rem/search/ResmiSearch/deleteDocument(io.corbel.resources.rem.model.ResourceUri)
io/corbel/resources/rem/service/WithSearchResmiServiceTest/deleteResourceByIdTest()#io/corbel/resources/rem/dao/ResmiDao/deleteResource(io.corbel.resources.rem.model.ResourceUri)
io/corbel/resources/rem/service/WithSearchResmiServiceTest/deleteResourceByIdTest()#org/mockito/Mockito/verify(T,org.mockito.verification.VerificationMode)
io/corbel/resources/rem/service/WithSearchResmiServiceTest/deleteResourceByIdTest()#io/corbel/resources/rem/model/ResourceUri/ResourceUri(java.lang.String,java.lang.String,java.lang.String)
io/corbel/resources/rem/service/WithSearchResmiServiceTest/deleteResourceByIdTest()#org/mockito/Mockito/times(int)
io/corbel/resources/rem/service/WithSearchResmiServiceTest/deleteResourceByIdTest()#org/mockito/Mockito/verify(T)
io/corbel/resources/rem/service/WithSearchResmiServiceTest/createRelationTest()#io/corbel/resources/rem/model/ResourceUri/ResourceUri(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
io/corbel/resources/rem/service/WithSearchResmiServiceTest/createRelationTest()#io/corbel/resources/rem/service/DefaultResmiService/upsertRelation(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject)
io/corbel/resources/rem/service/WithSearchResmiServiceTest/createRelationTest()#com/google/gson/JsonObject/has(java.lang.String)
io/corbel/resources/rem/service/WithSearchResmiServiceTest/createRelationTest()#org/mockito/ArgumentCaptor/getValue()
io/corbel/resources/rem/service/WithSearchResmiServiceTest/createRelationTest()#org/fest/assertions/api/Assertions/assertThat(boolean)
io/corbel/resources/rem/service/WithSearchResmiServiceTest/createRelationTest()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/service/WithSearchResmiServiceTest/createRelationTest()#io/corbel/resources/rem/dao/ResmiDao/upsertRelation(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject)
io/corbel/resources/rem/service/WithSearchResmiServiceTest/createRelationTest()#java/util/Arrays/asList(T[])
io/corbel/resources/rem/service/WithSearchResmiServiceTest/createRelationTest()#io/corbel/resources/rem/service/SearchableFieldsRegistry/getFieldsFromResourceUri(io.corbel.resources.rem.model.ResourceUri)
io/corbel/resources/rem/service/WithSearchResmiServiceTest/createRelationTest()#com/google/gson/JsonObject/JsonObject()
io/corbel/resources/rem/service/WithSearchResmiServiceTest/createRelationTest()#org/mockito/Matchers/eq(T)
io/corbel/resources/rem/service/WithSearchResmiServiceTest/createRelationTest()#com/google/gson/JsonObject/get(java.lang.String)
io/corbel/resources/rem/service/WithSearchResmiServiceTest/createRelationTest()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/service/WithSearchResmiServiceTest/createRelationTest()#io/corbel/resources/rem/search/ResmiSearch/indexDocument(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject)
io/corbel/resources/rem/service/WithSearchResmiServiceTest/createRelationTest()#org/fest/assertions/api/BooleanAssert/isTrue()
io/corbel/resources/rem/service/WithSearchResmiServiceTest/createRelationTest()#org/mockito/ArgumentCaptor/forClass(java.lang.Class)
io/corbel/resources/rem/service/WithSearchResmiServiceTest/createRelationTest()#org/mockito/Mockito/verify(T)
io/corbel/resources/rem/service/WithSearchResmiServiceTest/createRelationTest()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/resources/rem/service/WithSearchResmiServiceTest/createRelationTest()#org/mockito/ArgumentCaptor/capture()
io/corbel/resources/rem/service/WithSearchResmiServiceTest/createRelationTest()#java/util/HashSet/HashSet(java.util.Collection)
io/corbel/resources/rem/service/WithSearchResmiServiceTest/createRelationTest()#com/google/gson/JsonElement/getAsString()
io/corbel/resources/rem/service/WithSearchResmiServiceTest/createRelationTest()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/resources/rem/service/WithSearchResmiServiceTest/deleteIndexedResourceByIdTest()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/service/WithSearchResmiServiceTest/deleteIndexedResourceByIdTest()#io/corbel/resources/rem/model/ResourceUri/ResourceUri(java.lang.String,java.lang.String,java.lang.String)
io/corbel/resources/rem/service/WithSearchResmiServiceTest/deleteIndexedResourceByIdTest()#org/mockito/Mockito/verify(T)
io/corbel/resources/rem/service/WithSearchResmiServiceTest/deleteIndexedResourceByIdTest()#java/util/Arrays/asList(T[])
io/corbel/resources/rem/service/WithSearchResmiServiceTest/deleteIndexedResourceByIdTest()#io/corbel/resources/rem/service/SearchableFieldsRegistry/getFieldsFromResourceUri(io.corbel.resources.rem.model.ResourceUri)
io/corbel/resources/rem/service/WithSearchResmiServiceTest/deleteIndexedResourceByIdTest()#io/corbel/resources/rem/search/ResmiSearch/deleteDocument(io.corbel.resources.rem.model.ResourceUri)
io/corbel/resources/rem/service/WithSearchResmiServiceTest/deleteIndexedResourceByIdTest()#org/mockito/Matchers/eq(T)
io/corbel/resources/rem/service/WithSearchResmiServiceTest/deleteIndexedResourceByIdTest()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/service/WithSearchResmiServiceTest/deleteIndexedResourceByIdTest()#io/corbel/resources/rem/service/DefaultResmiService/deleteResource(io.corbel.resources.rem.model.ResourceUri)
io/corbel/resources/rem/service/WithSearchResmiServiceTest/deleteIndexedResourceByIdTest()#io/corbel/resources/rem/dao/ResmiDao/deleteResource(io.corbel.resources.rem.model.ResourceUri)
io/corbel/resources/rem/service/WithSearchResmiServiceTest/deleteIndexedResourceByIdTest()#java/util/HashSet/HashSet(java.util.Collection)
io/corbel/resources/rem/service/WithSearchResmiServiceTest/setup()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/service/WithSearchResmiServiceTest/setup()#io/corbel/resources/rem/request/CollectionParameters/getPagination()
io/corbel/resources/rem/service/WithSearchResmiServiceTest/setup()#io/corbel/resources/rem/request/CollectionParameters/getAggregation()
io/corbel/resources/rem/service/WithSearchResmiServiceTest/setup()#java/util/Optional/ofNullable(T)
io/corbel/resources/rem/service/WithSearchResmiServiceTest/setup()#io/corbel/resources/rem/request/CollectionParameters/getQueries()
io/corbel/resources/rem/service/WithSearchResmiServiceTest/setup()#io/corbel/resources/rem/request/CollectionParameters/getSearch()
io/corbel/resources/rem/service/WithSearchResmiServiceTest/setup()#org/mockito/Mockito/reset(T[])
io/corbel/resources/rem/service/WithSearchResmiServiceTest/setup()#java/time/Clock/systemUTC()
io/corbel/resources/rem/service/WithSearchResmiServiceTest/setup()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/service/WithSearchResmiServiceTest/setup()#io/corbel/resources/rem/request/CollectionParameters/getSort()
io/corbel/resources/rem/service/WithSearchResmiServiceTest/setup()#io/corbel/resources/rem/service/WithSearchResmiService/WithSearchResmiService(io.corbel.resources.rem.dao.MongoResmiDao,io.corbel.resources.rem.search.ResmiSearch,io.corbel.resources.rem.service.SearchableFieldsRegistry,com.google.gson.Gson,java.time.Clock)
io/corbel/resources/rem/service/WithSearchResmiServiceTest/setup()#java/util/Optional/empty()
io/corbel/eworker/internal/InMemoryArtifactIdRegistry/addEworkerArtifactId(java.lang.String)#java/util/List/add(E)
io/corbel/resources/rem/ImageDeleteRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#javax/ws/rs/core/Response/noContent()
io/corbel/resources/rem/ImageDeleteRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#javax/ws/rs/core/Response/ResponseBuilder/build()
io/corbel/resources/rem/ImageDeleteRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#org/slf4j/Logger/warn(java.lang.String)
io/corbel/resources/rem/ImageDeleteRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/resources/rem/service/ImageCacheService/removeFromCache(io.corbel.resources.rem.Rem,io.corbel.resources.rem.request.RequestParameters,io.corbel.resources.rem.request.ResourceId,java.lang.String)
io/corbel/resources/rem/ImageDeleteRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/resources/rem/Rem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)
io/corbel/resources/rem/ImageDeleteRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/resources/rem/service/RemService/getRem(java.lang.String)
io/corbel/resources/rem/ImageDeleteRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/lib/ws/api/error/ErrorResponseFactory/notFound()
io/corbel/resources/rem/ImageDeleteRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#java/util/Optional/empty()
io/corbel/resources/rem/ImageDeleteRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/lib/ws/api/error/ErrorResponseFactory/getInstance()
io/corbel/resources/rem/ImageDeleteRem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional)#javax/ws/rs/core/Response/noContent()
io/corbel/resources/rem/ImageDeleteRem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional)#javax/ws/rs/core/Response/ResponseBuilder/build()
io/corbel/resources/rem/ImageDeleteRem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional)#org/slf4j/Logger/warn(java.lang.String)
io/corbel/resources/rem/ImageDeleteRem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional)#io/corbel/resources/rem/Rem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional)
io/corbel/resources/rem/ImageDeleteRem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional)#io/corbel/resources/rem/service/ImageCacheService/removeFromCollectionCache(io.corbel.resources.rem.Rem,io.corbel.resources.rem.request.RequestParameters,java.lang.String)
io/corbel/resources/rem/ImageDeleteRem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional)#io/corbel/resources/rem/service/RemService/getRem(java.lang.String)
io/corbel/resources/rem/ImageDeleteRem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional)#io/corbel/lib/ws/api/error/ErrorResponseFactory/notFound()
io/corbel/resources/rem/ImageDeleteRem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional)#java/util/Optional/empty()
io/corbel/resources/rem/ImageDeleteRem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional)#io/corbel/lib/ws/api/error/ErrorResponseFactory/getInstance()
io/corbel/notifications/handler/NotificationTemplateEventHandlerTest/testGetEventType()#io/corbel/notifications/eventbus/NotificationEventHandler/getEventType()
io/corbel/notifications/handler/NotificationTemplateEventHandlerTest/testGetEventType()#org/fest/assertions/api/Assertions/assertThat(T)
io/corbel/notifications/handler/NotificationTemplateEventHandlerTest/testGetEventType()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/notifications/handler/NotificationTemplateEventHandlerTest/setUp()#io/corbel/notifications/eventbus/NotificationEventHandler/NotificationEventHandler(io.corbel.notifications.service.SenderNotificationsService)
io/corbel/iam/api/UsernameResource/getUserInDomainByUsername(java.lang.String,java.lang.String)#io/corbel/iam/service/UserService/findByDomainAndUsername(java.lang.String,java.lang.String)
io/corbel/iam/api/UsernameResource/getUserInDomainByUsername(java.lang.String,java.lang.String)#java/util/Optional/ofNullable(T)
io/corbel/iam/api/UsernameResource/existUsername(java.lang.String,java.lang.String)#javax/ws/rs/core/Response/ResponseBuilder/build()
io/corbel/iam/api/UsernameResource/existUsername(java.lang.String,java.lang.String)#io/corbel/lib/ws/api/error/ErrorResponseFactory/notFound()
io/corbel/iam/api/UsernameResource/existUsername(java.lang.String,java.lang.String)#io/corbel/iam/api/IamErrorResponseFactory/getInstance()
io/corbel/iam/api/UsernameResource/existUsername(java.lang.String,java.lang.String)#io/corbel/iam/service/UserService/existsByUsernameAndDomain(java.lang.String,java.lang.String)
io/corbel/iam/api/UsernameResource/existUsername(java.lang.String,java.lang.String)#javax/ws/rs/core/Response/ok()
io/corbel/iam/api/UsernameResource/getUserIdByUsername(java.lang.String,java.lang.String)#io/corbel/iam/api/UsernameResource/getUserInDomainByUsername(java.lang.String,java.lang.String)
io/corbel/iam/api/UsernameResource/getUserIdByUsername(java.lang.String,java.lang.String)#java/util/Optional/map(java.util.function.Function)
io/corbel/iam/api/UsernameResource/getUserIdByUsername(java.lang.String,java.lang.String)#java/util/Optional/orElseGet(java.util.function.Supplier)
io/corbel/resources/rem/dao/DefaultResmiOrder/moveRelation(io.corbel.resources.rem.model.ResourceUri,io.corbel.resources.rem.dao.RelationMoveOperation)#io/corbel/resources/rem/dao/RelationMoveOperation/getValue()
io/corbel/resources/rem/dao/DefaultResmiOrder/moveRelation(io.corbel.resources.rem.model.ResourceUri,io.corbel.resources.rem.dao.RelationMoveOperation)#org/springframework/data/mongodb/core/query/Criteria/where(java.lang.String)
io/corbel/resources/rem/dao/DefaultResmiOrder/moveRelation(io.corbel.resources.rem.model.ResourceUri,io.corbel.resources.rem.dao.RelationMoveOperation)#org/springframework/data/mongodb/core/query/Query/query(org.springframework.data.mongodb.core.query.CriteriaDefinition)
io/corbel/resources/rem/dao/DefaultResmiOrder/moveRelation(io.corbel.resources.rem.model.ResourceUri,io.corbel.resources.rem.dao.RelationMoveOperation)#io/corbel/resources/rem/model/ResourceUri/getRelation()
io/corbel/resources/rem/dao/DefaultResmiOrder/moveRelation(io.corbel.resources.rem.model.ResourceUri,io.corbel.resources.rem.dao.RelationMoveOperation)#com/google/gson/JsonElement/getAsDouble()
io/corbel/resources/rem/dao/DefaultResmiOrder/moveRelation(io.corbel.resources.rem.model.ResourceUri,io.corbel.resources.rem.dao.RelationMoveOperation)#com/google/gson/JsonObject/get(java.lang.String)
io/corbel/resources/rem/dao/DefaultResmiOrder/moveRelation(io.corbel.resources.rem.model.ResourceUri,io.corbel.resources.rem.dao.RelationMoveOperation)#org/springframework/data/mongodb/core/query/Query/limit(int)
io/corbel/resources/rem/dao/DefaultResmiOrder/moveRelation(io.corbel.resources.rem.model.ResourceUri,io.corbel.resources.rem.dao.RelationMoveOperation)#org/springframework/data/mongodb/core/query/Criteria/is(java.lang.Object)
io/corbel/resources/rem/dao/DefaultResmiOrder/moveRelation(io.corbel.resources.rem.model.ResourceUri,io.corbel.resources.rem.dao.RelationMoveOperation)#java/lang/Math/abs(double)
io/corbel/resources/rem/dao/DefaultResmiOrder/moveRelation(io.corbel.resources.rem.model.ResourceUri,io.corbel.resources.rem.dao.RelationMoveOperation)#org/springframework/data/mongodb/core/query/Criteria/gt(java.lang.Object)
io/corbel/resources/rem/dao/DefaultResmiOrder/moveRelation(io.corbel.resources.rem.model.ResourceUri,io.corbel.resources.rem.dao.RelationMoveOperation)#java/util/List/isEmpty()
io/corbel/resources/rem/dao/DefaultResmiOrder/moveRelation(io.corbel.resources.rem.model.ResourceUri,io.corbel.resources.rem.dao.RelationMoveOperation)#org/springframework/data/mongodb/core/MongoOperations/find(org.springframework.data.mongodb.core.query.Query,java.lang.Class,java.lang.String)
io/corbel/resources/rem/dao/DefaultResmiOrder/moveRelation(io.corbel.resources.rem.model.ResourceUri,io.corbel.resources.rem.dao.RelationMoveOperation)#io/corbel/resources/rem/model/ResourceUri/getTypeId()
io/corbel/resources/rem/dao/DefaultResmiOrder/moveRelation(io.corbel.resources.rem.model.ResourceUri,io.corbel.resources.rem.dao.RelationMoveOperation)#java/util/List/size()
io/corbel/resources/rem/dao/DefaultResmiOrder/moveRelation(io.corbel.resources.rem.model.ResourceUri,io.corbel.resources.rem.dao.RelationMoveOperation)#io/corbel/resources/rem/dao/DefaultResmiOrder/nextOrderInRelation(io.corbel.resources.rem.model.ResourceUri)
io/corbel/resources/rem/dao/DefaultResmiOrder/moveRelation(io.corbel.resources.rem.model.ResourceUri,io.corbel.resources.rem.dao.RelationMoveOperation)#io/corbel/resources/rem/model/ResourceUri/getRelationId()
io/corbel/resources/rem/dao/DefaultResmiOrder/moveRelation(io.corbel.resources.rem.model.ResourceUri,io.corbel.resources.rem.dao.RelationMoveOperation)#org/springframework/data/mongodb/core/query/Criteria/ne(java.lang.Object)
io/corbel/resources/rem/dao/DefaultResmiOrder/moveRelation(io.corbel.resources.rem.model.ResourceUri,io.corbel.resources.rem.dao.RelationMoveOperation)#org/springframework/data/mongodb/core/query/Update/inc(java.lang.String,java.lang.Number)
io/corbel/resources/rem/dao/DefaultResmiOrder/moveRelation(io.corbel.resources.rem.model.ResourceUri,io.corbel.resources.rem.dao.RelationMoveOperation)#org/springframework/data/domain/Sort/Order/Order(org.springframework.data.domain.Sort.Direction,java.lang.String)
io/corbel/resources/rem/dao/DefaultResmiOrder/moveRelation(io.corbel.resources.rem.model.ResourceUri,io.corbel.resources.rem.dao.RelationMoveOperation)#io/corbel/resources/rem/model/ResourceUri/getType()
io/corbel/resources/rem/dao/DefaultResmiOrder/moveRelation(io.corbel.resources.rem.model.ResourceUri,io.corbel.resources.rem.dao.RelationMoveOperation)#org/springframework/data/mongodb/core/MongoOperations/updateMulti(org.springframework.data.mongodb.core.query.Query,org.springframework.data.mongodb.core.query.Update,java.lang.String)
io/corbel/resources/rem/dao/DefaultResmiOrder/moveRelation(io.corbel.resources.rem.model.ResourceUri,io.corbel.resources.rem.dao.RelationMoveOperation)#org/springframework/data/mongodb/core/query/Update/Update()
io/corbel/resources/rem/dao/DefaultResmiOrder/moveRelation(io.corbel.resources.rem.model.ResourceUri,io.corbel.resources.rem.dao.RelationMoveOperation)#io/corbel/resources/rem/dao/NamespaceNormalizer/normalize(java.lang.String)
io/corbel/resources/rem/dao/DefaultResmiOrder/moveRelation(io.corbel.resources.rem.model.ResourceUri,io.corbel.resources.rem.dao.RelationMoveOperation)#org/springframework/data/domain/Sort/Sort(org.springframework.data.domain.Sort.Order[])
io/corbel/resources/rem/dao/DefaultResmiOrder/moveRelation(io.corbel.resources.rem.model.ResourceUri,io.corbel.resources.rem.dao.RelationMoveOperation)#org/springframework/data/mongodb/core/query/Update/set(java.lang.String,java.lang.Object)
io/corbel/resources/rem/dao/DefaultResmiOrder/moveRelation(io.corbel.resources.rem.model.ResourceUri,io.corbel.resources.rem.dao.RelationMoveOperation)#java/util/List/get(int)
io/corbel/resources/rem/dao/DefaultResmiOrder/moveRelation(io.corbel.resources.rem.model.ResourceUri,io.corbel.resources.rem.dao.RelationMoveOperation)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
io/corbel/resources/rem/dao/DefaultResmiOrder/moveRelation(io.corbel.resources.rem.model.ResourceUri,io.corbel.resources.rem.dao.RelationMoveOperation)#org/springframework/data/mongodb/core/query/Query/skip(int)
io/corbel/resources/rem/dao/DefaultResmiOrder/moveRelation(io.corbel.resources.rem.model.ResourceUri,io.corbel.resources.rem.dao.RelationMoveOperation)#org/springframework/data/mongodb/core/query/Criteria/and(java.lang.String)
io/corbel/resources/rem/dao/DefaultResmiOrder/moveRelation(io.corbel.resources.rem.model.ResourceUri,io.corbel.resources.rem.dao.RelationMoveOperation)#org/springframework/data/mongodb/core/query/Query/with(org.springframework.data.domain.Sort)
io/corbel/resources/rem/dao/DefaultResmiOrder/moveRelation(io.corbel.resources.rem.model.ResourceUri,io.corbel.resources.rem.dao.RelationMoveOperation)#org/springframework/data/mongodb/core/MongoOperations/updateFirst(org.springframework.data.mongodb.core.query.Query,org.springframework.data.mongodb.core.query.Update,java.lang.String)
io/corbel/resources/rem/dao/DefaultResmiOrder/moveRelation(io.corbel.resources.rem.model.ResourceUri,io.corbel.resources.rem.dao.RelationMoveOperation)#io/corbel/resources/rem/model/ResourceUri/getDomain()
io/corbel/resources/rem/dao/DefaultResmiOrder/addNextOrderInRelation(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject)#io/corbel/resources/rem/dao/DefaultResmiOrder/nextOrderInRelation(io.corbel.resources.rem.model.ResourceUri)
io/corbel/resources/rem/dao/DefaultResmiOrder/addNextOrderInRelation(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject)#com/google/gson/JsonPrimitive/JsonPrimitive(java.lang.Number)
io/corbel/resources/rem/dao/DefaultResmiOrder/addNextOrderInRelation(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject)#com/google/gson/JsonObject/add(java.lang.String,com.google.gson.JsonElement)
io/corbel/resources/rem/dao/DefaultResmiOrder/nextOrderInRelation(io.corbel.resources.rem.model.ResourceUri)#org/springframework/data/mongodb/core/FindAndModifyOptions/upsert(boolean)
io/corbel/resources/rem/dao/DefaultResmiOrder/nextOrderInRelation(io.corbel.resources.rem.model.ResourceUri)#org/springframework/data/mongodb/core/query/Criteria/is(java.lang.Object)
io/corbel/resources/rem/dao/DefaultResmiOrder/nextOrderInRelation(io.corbel.resources.rem.model.ResourceUri)#org/springframework/data/mongodb/core/FindAndModifyOptions/returnNew(boolean)
io/corbel/resources/rem/dao/DefaultResmiOrder/nextOrderInRelation(io.corbel.resources.rem.model.ResourceUri)#org/springframework/data/mongodb/core/query/Criteria/where(java.lang.String)
io/corbel/resources/rem/dao/DefaultResmiOrder/nextOrderInRelation(io.corbel.resources.rem.model.ResourceUri)#org/springframework/data/mongodb/core/query/Field/include(java.lang.String)
io/corbel/resources/rem/dao/DefaultResmiOrder/nextOrderInRelation(io.corbel.resources.rem.model.ResourceUri)#io/corbel/resources/rem/model/ResourceUri/getTypeId()
io/corbel/resources/rem/dao/DefaultResmiOrder/nextOrderInRelation(io.corbel.resources.rem.model.ResourceUri)#org/springframework/data/mongodb/core/query/Query/query(org.springframework.data.mongodb.core.query.CriteriaDefinition)
io/corbel/resources/rem/dao/DefaultResmiOrder/nextOrderInRelation(io.corbel.resources.rem.model.ResourceUri)#org/springframework/data/mongodb/core/query/Update/inc(java.lang.String,java.lang.Number)
io/corbel/resources/rem/dao/DefaultResmiOrder/nextOrderInRelation(io.corbel.resources.rem.model.ResourceUri)#io/corbel/resources/rem/model/ResourceUri/getType()
io/corbel/resources/rem/dao/DefaultResmiOrder/nextOrderInRelation(io.corbel.resources.rem.model.ResourceUri)#org/springframework/data/mongodb/core/query/Update/Update()
io/corbel/resources/rem/dao/DefaultResmiOrder/nextOrderInRelation(io.corbel.resources.rem.model.ResourceUri)#io/corbel/resources/rem/dao/NamespaceNormalizer/normalize(java.lang.String)
io/corbel/resources/rem/dao/DefaultResmiOrder/nextOrderInRelation(io.corbel.resources.rem.model.ResourceUri)#org/springframework/data/mongodb/core/FindAndModifyOptions/FindAndModifyOptions()
io/corbel/resources/rem/dao/DefaultResmiOrder/nextOrderInRelation(io.corbel.resources.rem.model.ResourceUri)#io/corbel/resources/rem/model/ResourceUri/getDomain()
io/corbel/resources/rem/dao/DefaultResmiOrder/nextOrderInRelation(io.corbel.resources.rem.model.ResourceUri)#com/google/gson/JsonElement/getAsDouble()
io/corbel/resources/rem/dao/DefaultResmiOrder/nextOrderInRelation(io.corbel.resources.rem.model.ResourceUri)#com/google/gson/JsonObject/get(java.lang.String)
io/corbel/resources/rem/dao/DefaultResmiOrder/nextOrderInRelation(io.corbel.resources.rem.model.ResourceUri)#java/lang/String/concat(java.lang.String)
io/corbel/resources/rem/dao/DefaultResmiOrder/nextOrderInRelation(io.corbel.resources.rem.model.ResourceUri)#io/corbel/resources/rem/model/ResourceUri/getRelation()
io/corbel/resources/rem/dao/DefaultResmiOrder/nextOrderInRelation(io.corbel.resources.rem.model.ResourceUri)#org/springframework/data/mongodb/core/MongoOperations/findAndModify(org.springframework.data.mongodb.core.query.Query,org.springframework.data.mongodb.core.query.Update,org.springframework.data.mongodb.core.FindAndModifyOptions,java.lang.Class,java.lang.String)
io/corbel/resources/rem/dao/DefaultResmiOrder/nextOrderInRelation(io.corbel.resources.rem.model.ResourceUri)#org/springframework/data/mongodb/core/query/Query/fields()
io/corbel/evci/client/DefaultEvciClient/convertAndSend(java.lang.String,java.lang.Object)#com/fasterxml/jackson/databind/ObjectMapper/valueToTree(java.lang.Object)
io/corbel/evci/client/DefaultEvciClient/convertAndSend(java.lang.String,java.lang.Object)#io/corbel/evci/service/EventsService/registerEvent(java.lang.String,com.fasterxml.jackson.databind.JsonNode)
io/corbel/iam/repository/MongoIndexes/ensureIndexes(org.springframework.data.mongodb.core.MongoOperations)#org/springframework/data/mongodb/core/MongoOperations/indexOps(java.lang.Class)
io/corbel/iam/repository/MongoIndexes/ensureIndexes(org.springframework.data.mongodb.core.MongoOperations)#org/springframework/data/mongodb/core/IndexOperations/ensureIndex(org.springframework.data.mongodb.core.index.IndexDefinition)
io/corbel/iam/repository/MongoIndexes/ensureIndexes(org.springframework.data.mongodb.core.MongoOperations)#io/corbel/lib/mongo/index/MongoIndex/background()
io/corbel/iam/repository/MongoIndexes/ensureIndexes(org.springframework.data.mongodb.core.MongoOperations)#io/corbel/lib/mongo/index/MongoIndex/getIndexDefinition()
io/corbel/iam/repository/MongoIndexes/ensureIndexes(org.springframework.data.mongodb.core.MongoOperations)#io/corbel/lib/mongo/index/MongoIndex/on(java.lang.String,org.springframework.data.domain.Sort.Direction)
io/corbel/iam/repository/MongoIndexes/ensureIndexes(org.springframework.data.mongodb.core.MongoOperations)#io/corbel/lib/mongo/index/MongoIndex/MongoIndex()
io/corbel/iam/repository/MongoIndexes/ensureIndexes(org.springframework.data.mongodb.core.MongoOperations)#org/slf4j/Logger/info(java.lang.String)
io/corbel/iam/repository/MongoIndexes/ensureIndexes(org.springframework.data.mongodb.core.MongoOperations)#io/corbel/lib/mongo/index/MongoIndex/expires(int,java.util.concurrent.TimeUnit)
io/corbel/iam/repository/MongoIndexes/ensureIndexes(org.springframework.data.mongodb.core.MongoOperations)#io/corbel/lib/mongo/index/MongoIndex/unique()
io/corbel/iam/api/DomainResourceTest/testUpdateDomain()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/iam/api/DomainResourceTest/testUpdateDomain()#javax/ws/rs/client/WebTarget/request()
io/corbel/iam/api/DomainResourceTest/testUpdateDomain()#javax/ws/rs/client/Entity/json(T)
io/corbel/iam/api/DomainResourceTest/testUpdateDomain()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/iam/api/DomainResourceTest/testUpdateDomain()#io/corbel/iam/api/DomainResourceTest/getDomain()
io/corbel/iam/api/DomainResourceTest/testUpdateDomain()#io/corbel/iam/model/Entity/getId()
io/corbel/iam/api/DomainResourceTest/testUpdateDomain()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/iam/api/DomainResourceTest/testUpdateDomain()#javax/ws/rs/core/Response/Status/getStatusCode()
io/corbel/iam/api/DomainResourceTest/testUpdateDomain()#org/mockito/ArgumentCaptor/getValue()
io/corbel/iam/api/DomainResourceTest/testUpdateDomain()#org/mockito/ArgumentCaptor/forClass(java.lang.Class)
io/corbel/iam/api/DomainResourceTest/testUpdateDomain()#org/mockito/Mockito/verify(T)
io/corbel/iam/api/DomainResourceTest/testUpdateDomain()#javax/ws/rs/client/SyncInvoker/put(javax.ws.rs.client.Entity,java.lang.Class)
io/corbel/iam/api/DomainResourceTest/testUpdateDomain()#javax/ws/rs/core/Response/getStatus()
io/corbel/iam/api/DomainResourceTest/testUpdateDomain()#io/corbel/iam/service/DomainService/update(io.corbel.iam.model.Domain)
io/corbel/iam/api/DomainResourceTest/testUpdateDomain()#org/mockito/ArgumentCaptor/capture()
io/corbel/iam/api/DomainResourceTest/testUpdateDomain()#org/junit/Assert/assertEquals(long,long)
io/corbel/iam/api/DomainResourceTest/testUpdateDomain()#org/junit/Assert/assertEquals(java.lang.Object,java.lang.Object)
io/corbel/iam/api/DomainResourceTest/getDomain()#io/corbel/iam/model/Entity/setId(java.lang.String)
io/corbel/iam/api/DomainResourceTest/getDomain()#io/corbel/iam/model/Domain/Domain()
io/corbel/iam/api/DomainResourceTest/testEmptyCreateDomain()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/iam/api/DomainResourceTest/testEmptyCreateDomain()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/iam/api/DomainResourceTest/testEmptyCreateDomain()#javax/ws/rs/core/Response/getStatus()
io/corbel/iam/api/DomainResourceTest/testEmptyCreateDomain()#javax/ws/rs/client/Entity/json(T)
io/corbel/iam/api/DomainResourceTest/testEmptyCreateDomain()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/iam/api/DomainResourceTest/testEmptyCreateDomain()#org/junit/Assert/assertEquals(long,long)
io/corbel/iam/api/DomainResourceTest/testEmptyCreateDomain()#javax/ws/rs/client/SyncInvoker/post(javax.ws.rs.client.Entity,java.lang.Class)
io/corbel/iam/api/DomainResourceTest/testEmptyCreateDomain()#io/corbel/iam/model/Domain/Domain()
io/corbel/iam/api/DomainResourceTest/testEmptyCreateDomain()#javax/ws/rs/client/WebTarget/request()
io/corbel/iam/api/DomainResourceTest/testGetUnknownDomain()#javax/ws/rs/core/Response/Status/getStatusCode()
io/corbel/iam/api/DomainResourceTest/testGetUnknownDomain()#org/mockito/Mockito/when(T)
io/corbel/iam/api/DomainResourceTest/testGetUnknownDomain()#org/mockito/Mockito/verify(T)
io/corbel/iam/api/DomainResourceTest/testGetUnknownDomain()#javax/ws/rs/client/WebTarget/request(javax.ws.rs.core.MediaType[])
io/corbel/iam/api/DomainResourceTest/testGetUnknownDomain()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/iam/api/DomainResourceTest/testGetUnknownDomain()#java/util/Optional/empty()
io/corbel/iam/api/DomainResourceTest/testGetUnknownDomain()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/iam/api/DomainResourceTest/testGetUnknownDomain()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/api/DomainResourceTest/testGetUnknownDomain()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/iam/api/DomainResourceTest/testGetUnknownDomain()#javax/ws/rs/client/SyncInvoker/get(java.lang.Class)
io/corbel/iam/api/DomainResourceTest/testGetUnknownDomain()#javax/ws/rs/core/Response/getStatus()
io/corbel/iam/api/DomainResourceTest/testGetUnknownDomain()#org/mockito/Matchers/eq(T)
io/corbel/iam/api/DomainResourceTest/testGetUnknownDomain()#io/corbel/iam/service/DomainService/getDomain(java.lang.String)
io/corbel/iam/api/DomainResourceTest/testGetUnknownDomain()#org/junit/Assert/assertEquals(long,long)
io/corbel/iam/api/DomainResourceTest/testCreateDomain()#io/corbel/iam/service/DomainService/insert(io.corbel.iam.model.Domain)
io/corbel/iam/api/DomainResourceTest/testCreateDomain()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/iam/api/DomainResourceTest/testCreateDomain()#javax/ws/rs/client/WebTarget/request()
io/corbel/iam/api/DomainResourceTest/testCreateDomain()#org/junit/Assert/assertTrue(boolean)
io/corbel/iam/api/DomainResourceTest/testCreateDomain()#javax/ws/rs/core/Response/getStatus()
io/corbel/iam/api/DomainResourceTest/testCreateDomain()#org/mockito/ArgumentCaptor/capture()
io/corbel/iam/api/DomainResourceTest/testCreateDomain()#javax/ws/rs/client/Entity/json(T)
io/corbel/iam/api/DomainResourceTest/testCreateDomain()#javax/ws/rs/core/Response/getHeaderString(java.lang.String)
io/corbel/iam/api/DomainResourceTest/testCreateDomain()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/iam/api/DomainResourceTest/testCreateDomain()#io/corbel/iam/api/DomainResourceTest/getDomain()
io/corbel/iam/api/DomainResourceTest/testCreateDomain()#io/corbel/iam/model/Entity/getId()
io/corbel/iam/api/DomainResourceTest/testCreateDomain()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/iam/api/DomainResourceTest/testCreateDomain()#javax/ws/rs/core/Response/Status/getStatusCode()
io/corbel/iam/api/DomainResourceTest/testCreateDomain()#org/mockito/ArgumentCaptor/getValue()
io/corbel/iam/api/DomainResourceTest/testCreateDomain()#org/mockito/ArgumentCaptor/forClass(java.lang.Class)
io/corbel/iam/api/DomainResourceTest/testCreateDomain()#org/mockito/Mockito/verify(T)
io/corbel/iam/api/DomainResourceTest/testCreateDomain()#org/junit/Assert/assertEquals(long,long)
io/corbel/iam/api/DomainResourceTest/testCreateDomain()#org/junit/Assert/assertEquals(java.lang.Object,java.lang.Object)
io/corbel/iam/api/DomainResourceTest/testCreateDomain()#java/lang/String/endsWith(java.lang.String)
io/corbel/iam/api/DomainResourceTest/testCreateDomain()#javax/ws/rs/client/SyncInvoker/post(javax.ws.rs.client.Entity,java.lang.Class)
io/corbel/iam/api/DomainResourceTest/testGetDomain()#org/mockito/Mockito/when(T)
io/corbel/iam/api/DomainResourceTest/testGetDomain()#org/mockito/Mockito/verify(T)
io/corbel/iam/api/DomainResourceTest/testGetDomain()#javax/ws/rs/client/WebTarget/request(javax.ws.rs.core.MediaType[])
io/corbel/iam/api/DomainResourceTest/testGetDomain()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/iam/api/DomainResourceTest/testGetDomain()#java/util/Optional/ofNullable(T)
io/corbel/iam/api/DomainResourceTest/testGetDomain()#javax/ws/rs/client/SyncInvoker/get(java.lang.Class)
io/corbel/iam/api/DomainResourceTest/testGetDomain()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/iam/api/DomainResourceTest/testGetDomain()#io/corbel/iam/api/DomainResourceTest/getDomain()
io/corbel/iam/api/DomainResourceTest/testGetDomain()#io/corbel/iam/model/Entity/getId()
io/corbel/iam/api/DomainResourceTest/testGetDomain()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/api/DomainResourceTest/testGetDomain()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/iam/api/DomainResourceTest/testGetDomain()#org/mockito/Matchers/eq(T)
io/corbel/iam/api/DomainResourceTest/testGetDomain()#io/corbel/iam/service/DomainService/getDomain(java.lang.String)
io/corbel/iam/api/DomainResourceTest/testGetDomain()#org/junit/Assert/assertEquals(java.lang.Object,java.lang.Object)
io/corbel/iam/api/DomainResourceTest/testDeleteDomain()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/iam/api/DomainResourceTest/testDeleteDomain()#javax/ws/rs/core/Response/Status/getStatusCode()
io/corbel/iam/api/DomainResourceTest/testDeleteDomain()#org/mockito/Mockito/verify(T)
io/corbel/iam/api/DomainResourceTest/testDeleteDomain()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/iam/api/DomainResourceTest/testDeleteDomain()#javax/ws/rs/client/WebTarget/request()
io/corbel/iam/api/DomainResourceTest/testDeleteDomain()#javax/ws/rs/core/Response/getStatus()
io/corbel/iam/api/DomainResourceTest/testDeleteDomain()#io/corbel/iam/service/DomainService/delete(java.lang.String)
io/corbel/iam/api/DomainResourceTest/testDeleteDomain()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/iam/api/DomainResourceTest/testDeleteDomain()#javax/ws/rs/client/SyncInvoker/delete(java.lang.Class)
io/corbel/iam/api/DomainResourceTest/testDeleteDomain()#org/mockito/Matchers/eq(T)
io/corbel/iam/api/DomainResourceTest/testDeleteDomain()#org/junit/Assert/assertEquals(long,long)
io/corbel/iam/api/DomainResourceTest/testGetAllDomain()#io/corbel/iam/service/DomainService/getAll(io.corbel.lib.queries.request.ResourceQuery,io.corbel.lib.queries.request.Pagination,io.corbel.lib.queries.request.Sort)
io/corbel/iam/api/DomainResourceTest/testGetAllDomain()#io/corbel/lib/queries/builder/ResourceQueryBuilder/build()
io/corbel/iam/api/DomainResourceTest/testGetAllDomain()#io/corbel/lib/queries/request/Pagination/Pagination(int,int)
io/corbel/iam/api/DomainResourceTest/testGetAllDomain()#io/corbel/lib/queries/builder/ResourceQueryBuilder/ResourceQueryBuilder()
io/corbel/iam/api/DomainResourceTest/testGetAllDomain()#org/mockito/Mockito/when(T)
io/corbel/iam/api/DomainResourceTest/testGetAllDomain()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/iam/api/DomainResourceTest/testGetAllDomain()#javax/ws/rs/client/WebTarget/request()
io/corbel/iam/api/DomainResourceTest/testGetAllDomain()#io/corbel/lib/queries/builder/ResourceQueryBuilder/add(java.lang.String,java.lang.String,io.corbel.lib.queries.request.QueryOperator)
io/corbel/iam/api/DomainResourceTest/testGetAllDomain()#java/util/List/add(E)
io/corbel/iam/api/DomainResourceTest/testGetAllDomain()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/iam/api/DomainResourceTest/testGetAllDomain()#io/corbel/lib/queries/parser/PaginationParser/parse(int,int,int)
io/corbel/iam/api/DomainResourceTest/testGetAllDomain()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/api/DomainResourceTest/testGetAllDomain()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/iam/api/DomainResourceTest/testGetAllDomain()#java/util/ArrayList/ArrayList()
io/corbel/iam/api/DomainResourceTest/testGetAllDomain()#org/mockito/Matchers/any(java.lang.Class)
io/corbel/iam/api/DomainResourceTest/testGetAllDomain()#org/mockito/Mockito/verify(T)
io/corbel/iam/api/DomainResourceTest/testGetAllDomain()#javax/ws/rs/client/SyncInvoker/get(javax.ws.rs.core.GenericType)
io/corbel/iam/api/DomainResourceTest/testGetAllDomain()#io/corbel/iam/api/DomainResourceTest/getDomain()
io/corbel/iam/api/DomainResourceTest/testGetAllDomain()#io/corbel/iam/api/DomainResourceTest/testGetAllDomain()/$anonymous1/()
io/corbel/iam/api/DomainResourceTest/testGetAllDomain()#org/junit/Assert/assertEquals(java.lang.Object,java.lang.Object)
io/corbel/iam/api/DomainResourceTest/testCreateAlreadyExistingDomain()#org/mockito/Mockito/doThrow(java.lang.Class)
io/corbel/iam/api/DomainResourceTest/testCreateAlreadyExistingDomain()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/iam/api/DomainResourceTest/testCreateAlreadyExistingDomain()#io/corbel/iam/service/DomainService/insert(io.corbel.iam.model.Domain)
io/corbel/iam/api/DomainResourceTest/testCreateAlreadyExistingDomain()#javax/ws/rs/core/Response/Status/getStatusCode()
io/corbel/iam/api/DomainResourceTest/testCreateAlreadyExistingDomain()#org/mockito/stubbing/Stubber/when(T)
io/corbel/iam/api/DomainResourceTest/testCreateAlreadyExistingDomain()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/iam/api/DomainResourceTest/testCreateAlreadyExistingDomain()#javax/ws/rs/client/WebTarget/request()
io/corbel/iam/api/DomainResourceTest/testCreateAlreadyExistingDomain()#javax/ws/rs/core/Response/getStatus()
io/corbel/iam/api/DomainResourceTest/testCreateAlreadyExistingDomain()#javax/ws/rs/client/Entity/json(T)
io/corbel/iam/api/DomainResourceTest/testCreateAlreadyExistingDomain()#org/mockito/Matchers/any()
io/corbel/iam/api/DomainResourceTest/testCreateAlreadyExistingDomain()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/iam/api/DomainResourceTest/testCreateAlreadyExistingDomain()#io/corbel/iam/api/DomainResourceTest/getDomain()
io/corbel/iam/api/DomainResourceTest/testCreateAlreadyExistingDomain()#org/junit/Assert/assertEquals(long,long)
io/corbel/iam/api/DomainResourceTest/testCreateAlreadyExistingDomain()#javax/ws/rs/client/SyncInvoker/post(javax.ws.rs.client.Entity,java.lang.Class)
io/corbel/iam/api/DomainResourceTest/setup()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/api/DomainResourceTest/setup()#io/corbel/lib/ws/auth/AuthorizationInfo/getToken()
io/corbel/iam/api/DomainResourceTest/setup()#org/mockito/Mockito/when(T)
io/corbel/iam/api/DomainResourceTest/setup()#org/mockito/Mockito/reset(T[])
io/corbel/oauth/service/DefaultSendNotificationService/sendNotification(java.lang.String,java.lang.String,java.lang.String,java.util.Map)#io/corbel/eventbus/service/EventBus/dispatch(io.corbel.eventbus.Event)
io/corbel/oauth/service/DefaultSendNotificationService/sendNotification(java.lang.String,java.lang.String,java.lang.String,java.util.Map)#io/corbel/event/NotificationEvent/setProperties(java.util.Map)
io/corbel/oauth/service/DefaultSendNotificationService/sendNotification(java.lang.String,java.lang.String,java.lang.String,java.util.Map)#io/corbel/event/NotificationEvent/NotificationEvent(java.lang.String,java.lang.String,java.lang.String)
io/corbel/oauth/service/DefaultSendNotificationService/sendNotification(java.lang.String,java.lang.String,java.lang.String,java.util.Map)#org/slf4j/Logger/info(java.lang.String,java.lang.Object)
io/corbel/resources/service/DefaultRemService/registerRem(io.corbel.resources.rem.Rem,java.lang.String,org.springframework.http.HttpMethod)#io/corbel/resources/rem/RemRegistry/registerRem(io.corbel.resources.rem.Rem,java.lang.String,org.springframework.http.HttpMethod[])
io/corbel/resources/service/DefaultRemService/registerExcludedRems(java.lang.String,java.util.List)#java/util/ArrayList/ArrayList(java.util.Collection)
io/corbel/resources/service/DefaultRemService/registerExcludedRems(java.lang.String,java.util.List)#java/util/Map/get(java.lang.Object)
io/corbel/resources/service/DefaultRemService/registerExcludedRems(java.lang.String,java.util.List)#java/util/List/addAll(java.util.Collection)
io/corbel/resources/service/DefaultRemService/registerExcludedRems(java.lang.String,java.util.List)#java/util/Map/containsKey(java.lang.Object)
io/corbel/resources/service/DefaultRemService/registerExcludedRems(java.lang.String,java.util.List)#java/util/Map/put(K,V)
io/corbel/resources/service/DefaultRemService/getRem(java.lang.String,java.util.List,org.springframework.http.HttpMethod,java.util.List)#java/util/ArrayList/ArrayList()
io/corbel/resources/service/DefaultRemService/getRem(java.lang.String,java.util.List,org.springframework.http.HttpMethod,java.util.List)#java/util/Map/get(java.lang.Object)
io/corbel/resources/service/DefaultRemService/getRem(java.lang.String,java.util.List,org.springframework.http.HttpMethod,java.util.List)#java/util/List/addAll(java.util.Collection)
io/corbel/resources/service/DefaultRemService/getRem(java.lang.String,java.util.List,org.springframework.http.HttpMethod,java.util.List)#io/corbel/resources/service/DefaultRemService/getRemFromRegistry(java.lang.String,java.util.List,org.springframework.http.HttpMethod,java.util.List)
io/corbel/resources/service/DefaultRemService/getRem(java.lang.String,java.util.List,org.springframework.http.HttpMethod,java.util.List)#java/util/Map/containsKey(java.lang.Object)
io/corbel/resources/service/DefaultRemService/relation(io.corbel.resources.rem.Rem,java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.List)#java/util/Optional/ofNullable(T)
io/corbel/resources/service/DefaultRemService/relation(io.corbel.resources.rem.Rem,java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.List)#io/corbel/resources/rem/Rem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)
io/corbel/resources/service/DefaultRemService/getRemFromRegistry(java.lang.String,java.util.List,org.springframework.http.HttpMethod,java.util.List)#io/corbel/resources/rem/RemRegistry/getRem(java.lang.String,java.util.List,org.springframework.http.HttpMethod,java.util.List)
io/corbel/resources/service/DefaultRemService/getRemFromRegistry(java.lang.String,java.util.List,org.springframework.http.HttpMethod,java.util.List)#javax/ws/rs/WebApplicationException/WebApplicationException(javax.ws.rs.core.Response)
io/corbel/resources/service/DefaultRemService/getRemFromRegistry(java.lang.String,java.util.List,org.springframework.http.HttpMethod,java.util.List)#io/corbel/lib/ws/api/error/ErrorResponseFactory/notFound()
io/corbel/resources/service/DefaultRemService/getRemFromRegistry(java.lang.String,java.util.List,org.springframework.http.HttpMethod,java.util.List)#io/corbel/lib/ws/api/error/ErrorResponseFactory/getInstance()
io/corbel/resources/service/DefaultRemService/resource(io.corbel.resources.rem.Rem,java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.List)#io/corbel/resources/rem/Rem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)
io/corbel/resources/service/DefaultRemService/resource(io.corbel.resources.rem.Rem,java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.List)#java/util/Optional/ofNullable(T)
io/corbel/resources/service/DefaultRemService/collection(io.corbel.resources.rem.Rem,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional,java.util.List)#io/corbel/resources/rem/Rem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional,java.util.Optional)
io/corbel/resources/service/DefaultRemService/collection(io.corbel.resources.rem.Rem,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional,java.util.List)#java/util/Optional/ofNullable(T)
io/corbel/resources/service/DefaultRemService/getRem(java.lang.String,java.util.List,org.springframework.http.HttpMethod)#io/corbel/resources/service/DefaultRemService/getRemFromRegistry(java.lang.String,java.util.List,org.springframework.http.HttpMethod,java.util.List)
io/corbel/resources/service/DefaultRemService/getRegisteredRemDescriptions()#io/corbel/resources/rem/RemRegistry/getRegistryDescription()
io/corbel/resources/service/DefaultRemService/getRem(java.lang.String)#io/corbel/resources/rem/RemRegistry/getRem(java.lang.String)
io/corbel/resources/service/DefaultRemService/unregisterRem(java.lang.Class,java.lang.String)#io/corbel/resources/rem/RemRegistry/unregisterRem(java.lang.Class,java.lang.String,org.springframework.http.MediaType)
io/corbel/resources/rem/resmi/RestorDeleteRemTest/testDeleteOkResource()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/resmi/RestorDeleteRemTest/testDeleteOkResource()#io/corbel/resources/rem/restor/RestorDeleteRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)
io/corbel/resources/rem/resmi/RestorDeleteRemTest/testDeleteOkResource()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/resmi/RestorDeleteRemTest/testDeleteOkResource()#io/corbel/resources/rem/request/ResourceId/ResourceId(java.lang.String)
io/corbel/resources/rem/resmi/RestorDeleteRemTest/testDeleteOkResource()#java/util/Arrays/asList(T[])
io/corbel/resources/rem/resmi/RestorDeleteRemTest/testDeleteOkResource()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/resources/rem/resmi/RestorDeleteRemTest/testDeleteOkResource()#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/rem/resmi/RestorDeleteRemTest/testDeleteOkResource()#io/corbel/resources/rem/request/RequestParameters/getAcceptedMediaTypes()
io/corbel/resources/rem/resmi/RestorDeleteRemTest/testDeleteOkResource()#java/util/Optional/empty()
io/corbel/resources/rem/resmi/RestorDeleteRemTest/testDeleteOkResource()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/resources/rem/resmi/RestorDeleteRemTest/setup()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/resources/rem/resmi/RestorDeleteRemTest/setup()#io/corbel/resources/rem/restor/RestorDeleteRem/RestorDeleteRem(io.corbel.resources.rem.dao.RestorDao)
io/corbel/rem/internal/InMemoryRemRegistry/registerRem(io.corbel.resources.rem.Rem,java.lang.String,org.springframework.http.HttpMethod[])#io/corbel/rem/internal/InMemoryRemRegistry/registerRem(io.corbel.resources.rem.Rem,java.lang.String,org.springframework.http.MediaType,org.springframework.http.HttpMethod[])
io/corbel/rem/internal/InMemoryRemRegistry/unregisterRem(java.lang.Class,java.lang.String,org.springframework.http.MediaType)#io/corbel/rem/internal/InMemoryRemRegistry/MemoryRegistry/MemoryRegistry(java.util.SortedSet,java.util.Map)
io/corbel/rem/internal/InMemoryRemRegistry/unregisterRem(java.lang.Class,java.lang.String,org.springframework.http.MediaType)#java/util/HashMap/HashMap(java.util.Map)
io/corbel/rem/internal/InMemoryRemRegistry/unregisterRem(java.lang.Class,java.lang.String,org.springframework.http.MediaType)#java/util/Map/get(java.lang.Object)
io/corbel/rem/internal/InMemoryRemRegistry/unregisterRem(java.lang.Class,java.lang.String,org.springframework.http.MediaType)#java/util/concurrent/atomic/AtomicReference/weakCompareAndSet(V,V)
io/corbel/rem/internal/InMemoryRemRegistry/unregisterRem(java.lang.Class,java.lang.String,org.springframework.http.MediaType)#java/util/Optional/ofNullable(T)
io/corbel/rem/internal/InMemoryRemRegistry/unregisterRem(java.lang.Class,java.lang.String,org.springframework.http.MediaType)#io/corbel/rem/internal/InMemoryRemRegistry/MemoryRegistry/getRegistryLookUp()
io/corbel/rem/internal/InMemoryRemRegistry/unregisterRem(java.lang.Class,java.lang.String,org.springframework.http.MediaType)#java/util/TreeSet/TreeSet(java.util.SortedSet)
io/corbel/rem/internal/InMemoryRemRegistry/unregisterRem(java.lang.Class,java.lang.String,org.springframework.http.MediaType)#io/corbel/rem/internal/InMemoryRemRegistry/MemoryRegistry/getRegistry()
io/corbel/rem/internal/InMemoryRemRegistry/unregisterRem(java.lang.Class,java.lang.String,org.springframework.http.MediaType)#java/util/concurrent/atomic/AtomicReference/get()
io/corbel/rem/internal/InMemoryRemRegistry/unregisterRem(java.lang.Class,java.lang.String,org.springframework.http.MediaType)#java/util/Optional/isPresent()
io/corbel/rem/internal/InMemoryRemRegistry/unregisterRem(java.lang.Class,java.lang.String,org.springframework.http.MediaType)#java/util/Map/remove(java.lang.Object)
io/corbel/rem/internal/InMemoryRemRegistry/unregisterRem(java.lang.Class,java.lang.String,org.springframework.http.MediaType)#io/corbel/rem/internal/InMemoryRemRegistry/UriPatternRegistryEntry/removeAndCheckIfEmpty(java.lang.Class,org.springframework.http.MediaType)
io/corbel/rem/internal/InMemoryRemRegistry/unregisterRem(java.lang.Class,java.lang.String,org.springframework.http.MediaType)#java/util/Set/remove(java.lang.Object)
io/corbel/rem/internal/InMemoryRemRegistry/getRem(java.lang.String)#java/lang/Class/getSimpleName()
io/corbel/rem/internal/InMemoryRemRegistry/getRem(java.lang.String)#io/corbel/rem/internal/InMemoryRemRegistry/MediaTypeRegistryEntry/getRems()
io/corbel/rem/internal/InMemoryRemRegistry/getRem(java.lang.String)#io/corbel/rem/internal/InMemoryRemRegistry/UriPatternRegistryEntry/getMediaTypeRegistryEntries()
io/corbel/rem/internal/InMemoryRemRegistry/getRem(java.lang.String)#java/lang/String/equals(java.lang.Object)
io/corbel/rem/internal/InMemoryRemRegistry/getRem(java.lang.String)#io/corbel/rem/internal/InMemoryRemRegistry/MemoryRegistry/getRegistry()
io/corbel/rem/internal/InMemoryRemRegistry/getRem(java.lang.String)#java/util/concurrent/atomic/AtomicReference/get()
io/corbel/rem/internal/InMemoryRemRegistry/getRem(java.lang.String)#java/lang/Object/getClass()
io/corbel/rem/internal/InMemoryRemRegistry/registerRem(io.corbel.resources.rem.Rem,java.lang.String,org.springframework.http.MediaType,org.springframework.http.HttpMethod[])#org/springframework/util/MimeType/toString()
io/corbel/rem/internal/InMemoryRemRegistry/registerRem(io.corbel.resources.rem.Rem,java.lang.String,org.springframework.http.MediaType,org.springframework.http.HttpMethod[])#org/springframework/http/HttpMethod/values()
io/corbel/rem/internal/InMemoryRemRegistry/registerRem(io.corbel.resources.rem.Rem,java.lang.String,org.springframework.http.MediaType,org.springframework.http.HttpMethod[])#io/corbel/rem/internal/InMemoryRemRegistry/MemoryRegistry/MemoryRegistry(java.util.SortedSet,java.util.Map)
io/corbel/rem/internal/InMemoryRemRegistry/registerRem(io.corbel.resources.rem.Rem,java.lang.String,org.springframework.http.MediaType,org.springframework.http.HttpMethod[])#java/util/Map/get(java.lang.Object)
io/corbel/rem/internal/InMemoryRemRegistry/registerRem(io.corbel.resources.rem.Rem,java.lang.String,org.springframework.http.MediaType,org.springframework.http.HttpMethod[])#java/util/concurrent/atomic/AtomicReference/weakCompareAndSet(V,V)
io/corbel/rem/internal/InMemoryRemRegistry/registerRem(io.corbel.resources.rem.Rem,java.lang.String,org.springframework.http.MediaType,org.springframework.http.HttpMethod[])#io/corbel/rem/internal/InMemoryRemRegistry/MemoryRegistry/getRegistryLookUp()
io/corbel/rem/internal/InMemoryRemRegistry/registerRem(io.corbel.resources.rem.Rem,java.lang.String,org.springframework.http.MediaType,org.springframework.http.HttpMethod[])#java/util/Set/add(E)
io/corbel/rem/internal/InMemoryRemRegistry/registerRem(io.corbel.resources.rem.Rem,java.lang.String,org.springframework.http.MediaType,org.springframework.http.HttpMethod[])#java/util/TreeSet/TreeSet(java.util.SortedSet)
io/corbel/rem/internal/InMemoryRemRegistry/registerRem(io.corbel.resources.rem.Rem,java.lang.String,org.springframework.http.MediaType,org.springframework.http.HttpMethod[])#org/slf4j/Logger/info(java.lang.String,java.lang.Object[])
io/corbel/rem/internal/InMemoryRemRegistry/registerRem(io.corbel.resources.rem.Rem,java.lang.String,org.springframework.http.MediaType,org.springframework.http.HttpMethod[])#java/util/Map/put(K,V)
io/corbel/rem/internal/InMemoryRemRegistry/registerRem(io.corbel.resources.rem.Rem,java.lang.String,org.springframework.http.MediaType,org.springframework.http.HttpMethod[])#java/util/Arrays/toString(java.lang.Object[])
io/corbel/rem/internal/InMemoryRemRegistry/registerRem(io.corbel.resources.rem.Rem,java.lang.String,org.springframework.http.MediaType,org.springframework.http.HttpMethod[])#java/util/HashMap/HashMap(java.util.Map)
io/corbel/rem/internal/InMemoryRemRegistry/registerRem(io.corbel.resources.rem.Rem,java.lang.String,org.springframework.http.MediaType,org.springframework.http.HttpMethod[])#io/corbel/rem/internal/InMemoryRemRegistry/UriPatternRegistryEntry/add(io.corbel.resources.rem.Rem,org.springframework.http.MediaType,org.springframework.http.HttpMethod[])
io/corbel/rem/internal/InMemoryRemRegistry/registerRem(io.corbel.resources.rem.Rem,java.lang.String,org.springframework.http.MediaType,org.springframework.http.HttpMethod[])#io/corbel/rem/internal/InMemoryRemRegistry/MemoryRegistry/getRegistry()
io/corbel/rem/internal/InMemoryRemRegistry/registerRem(io.corbel.resources.rem.Rem,java.lang.String,org.springframework.http.MediaType,org.springframework.http.HttpMethod[])#io/corbel/rem/internal/InMemoryRemRegistry/UriPatternRegistryEntry/UriPatternRegistryEntry(java.lang.String)
io/corbel/rem/internal/InMemoryRemRegistry/registerRem(io.corbel.resources.rem.Rem,java.lang.String,org.springframework.http.MediaType,org.springframework.http.HttpMethod[])#java/util/concurrent/atomic/AtomicReference/get()
io/corbel/rem/internal/InMemoryRemRegistry/getRegistryDescription()#java/lang/Enum/name()
io/corbel/rem/internal/InMemoryRemRegistry/getRegistryDescription()#io/corbel/rem/internal/InMemoryRemRegistry/MediaTypeRegistryEntry/getMediaType()
io/corbel/rem/internal/InMemoryRemRegistry/getRegistryDescription()#org/springframework/util/MimeType/toString()
io/corbel/rem/internal/InMemoryRemRegistry/getRegistryDescription()#java/util/regex/Pattern/pattern()
io/corbel/rem/internal/InMemoryRemRegistry/getRegistryDescription()#java/util/Map/get(java.lang.Object)
io/corbel/rem/internal/InMemoryRemRegistry/getRegistryDescription()#io/corbel/rem/internal/InMemoryRemRegistry/UriPatternRegistryEntry/getMediaTypeRegistryEntries()
io/corbel/rem/internal/InMemoryRemRegistry/getRegistryDescription()#java/util/Map/keySet()
io/corbel/rem/internal/InMemoryRemRegistry/getRegistryDescription()#io/corbel/rem/internal/InMemoryRemRegistry/MemoryRegistry/getRegistry()
io/corbel/rem/internal/InMemoryRemRegistry/getRegistryDescription()#java/lang/Object/getClass()
io/corbel/rem/internal/InMemoryRemRegistry/getRegistryDescription()#io/corbel/rem/internal/InMemoryRemRegistry/MediaTypeRegistryEntry/getRemRegistry()
io/corbel/rem/internal/InMemoryRemRegistry/getRegistryDescription()#java/lang/Class/getName()
io/corbel/rem/internal/InMemoryRemRegistry/getRegistryDescription()#java/util/LinkedList/LinkedList()
io/corbel/rem/internal/InMemoryRemRegistry/getRegistryDescription()#java/util/List/add(E)
io/corbel/rem/internal/InMemoryRemRegistry/getRegistryDescription()#java/util/concurrent/atomic/AtomicReference/get()
io/corbel/rem/internal/InMemoryRemRegistry/getRegistryDescription()#io/corbel/rem/internal/InMemoryRemRegistry/UriPatternRegistryEntry/getUriPattern()
io/corbel/rem/internal/InMemoryRemRegistry/getRegistryDescription()#io/corbel/resources/rem/model/RemDescription/RemDescription(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
io/corbel/rem/internal/InMemoryRemRegistry/getRem(java.lang.String,java.util.List,org.springframework.http.HttpMethod,java.util.List)#io/corbel/rem/internal/InMemoryRemRegistry/MediaTypeRegistryEntry/get(org.springframework.http.HttpMethod)
io/corbel/rem/internal/InMemoryRemRegistry/getRem(java.lang.String,java.util.List,org.springframework.http.HttpMethod,java.util.List)#io/corbel/rem/internal/InMemoryRemRegistry/UriPatternRegistryEntry/matches(java.lang.String)
io/corbel/rem/internal/InMemoryRemRegistry/getRem(java.lang.String,java.util.List,org.springframework.http.HttpMethod,java.util.List)#io/corbel/rem/internal/InMemoryRemRegistry/MemoryRegistry/getRegistry()
io/corbel/rem/internal/InMemoryRemRegistry/getRem(java.lang.String,java.util.List,org.springframework.http.HttpMethod,java.util.List)#java/util/concurrent/atomic/AtomicReference/get()
io/corbel/rem/internal/InMemoryRemRegistry/getRem(java.lang.String,java.util.List,org.springframework.http.HttpMethod,java.util.List)#org/slf4j/Logger/info(java.lang.String,java.lang.Object[])
io/corbel/rem/internal/InMemoryRemRegistry/getRem(java.lang.String,java.util.List,org.springframework.http.HttpMethod,java.util.List)#java/util/List/contains(java.lang.Object)
io/corbel/rem/internal/InMemoryRemRegistry/getRem(java.lang.String,java.util.List,org.springframework.http.HttpMethod,java.util.List)#io/corbel/rem/internal/InMemoryRemRegistry/UriPatternRegistryEntry/get(org.springframework.http.MediaType)
io/corbel/iam/jwt/ClientVerifierProvider/getVerifier(io.corbel.iam.model.ClientCredential)#io/corbel/iam/jwt/ClientVerifierProvider/getRsaVerifier(io.corbel.iam.model.ClientCredential)
io/corbel/iam/jwt/ClientVerifierProvider/getVerifier(io.corbel.iam.model.ClientCredential)#io/corbel/iam/jwt/ClientVerifierProvider/getHmacVerifier(io.corbel.iam.model.ClientCredential)
io/corbel/iam/jwt/ClientVerifierProvider/getVerifier(io.corbel.iam.model.ClientCredential)#io/corbel/iam/model/ClientCredential/getSignatureAlgorithm()
io/corbel/iam/jwt/ClientVerifierProvider/getHmacVerifier(io.corbel.iam.model.ClientCredential)#net/oauth/jsontoken/crypto/HmacSHA256Verifier/HmacSHA256Verifier(byte[])
io/corbel/iam/jwt/ClientVerifierProvider/getHmacVerifier(io.corbel.iam.model.ClientCredential)#io/corbel/iam/model/ClientCredential/getKey()
io/corbel/iam/jwt/ClientVerifierProvider/getHmacVerifier(io.corbel.iam.model.ClientCredential)#java/lang/String/getBytes()
io/corbel/iam/jwt/ClientVerifierProvider/findVerifier(java.lang.String,java.lang.String)#io/corbel/iam/jwt/ClientVerifierProvider/getVerifier(io.corbel.iam.model.ClientCredential)
io/corbel/iam/jwt/ClientVerifierProvider/findVerifier(java.lang.String,java.lang.String)#java/util/Arrays/asList(T[])
io/corbel/iam/jwt/ClientVerifierProvider/findVerifier(java.lang.String,java.lang.String)#org/slf4j/Logger/error(java.lang.String,java.lang.Object,java.lang.Object)
io/corbel/iam/jwt/ClientVerifierProvider/findVerifier(java.lang.String,java.lang.String)#io/corbel/iam/repository/ClientRepositoryCustom/findCredentialById(java.lang.String)
io/corbel/iam/jwt/ClientVerifierProvider/getRsaVerifier(io.corbel.iam.model.ClientCredential)#io/corbel/iam/jwt/ClientVerifierProvider/getPublicKey(io.corbel.iam.model.ClientCredential)
io/corbel/iam/jwt/ClientVerifierProvider/getRsaVerifier(io.corbel.iam.model.ClientCredential)#net/oauth/jsontoken/crypto/RsaSHA256Verifier/RsaSHA256Verifier(java.security.PublicKey)
io/corbel/iam/jwt/ClientVerifierProvider/decodedPublicKey(io.corbel.iam.model.ClientCredential)#org/bouncycastle/util/encoders/Base64/decode(java.lang.String)
io/corbel/iam/jwt/ClientVerifierProvider/decodedPublicKey(io.corbel.iam.model.ClientCredential)#io/corbel/iam/model/ClientCredential/getKey()
io/corbel/iam/jwt/ClientVerifierProvider/getPublicKey(io.corbel.iam.model.ClientCredential)#io/corbel/iam/jwt/ClientVerifierProvider/decodedPublicKey(io.corbel.iam.model.ClientCredential)
io/corbel/iam/jwt/ClientVerifierProvider/getPublicKey(io.corbel.iam.model.ClientCredential)#java/security/KeyFactory/generatePublic(java.security.spec.KeySpec)
io/corbel/iam/jwt/ClientVerifierProvider/getPublicKey(io.corbel.iam.model.ClientCredential)#java/security/spec/X509EncodedKeySpec/X509EncodedKeySpec(byte[])
io/corbel/iam/jwt/ClientVerifierProvider/getPublicKey(io.corbel.iam.model.ClientCredential)#java/security/KeyFactory/getInstance(java.lang.String)
io/corbel/oauth/api/CookieAuthorizeResourceTest/testInvalidUriWithCookie()#io/corbel/oauth/service/UserService/findByUserNameAndDomain(java.lang.String,java.lang.String)
io/corbel/oauth/api/CookieAuthorizeResourceTest/testInvalidUriWithCookie()#org/mockito/Mockito/when(T)
io/corbel/oauth/api/CookieAuthorizeResourceTest/testInvalidUriWithCookie()#io/corbel/oauth/api/CookieAuthorizeResourceTest/doGetWithCookie(javax.ws.rs.core.Cookie)
io/corbel/oauth/api/CookieAuthorizeResourceTest/testInvalidUriWithCookie()#io/corbel/oauth/model/User/User()
io/corbel/oauth/api/CookieAuthorizeResourceTest/testInvalidUriWithCookie()#javax/ws/rs/core/Response/getStatus()
io/corbel/oauth/api/CookieAuthorizeResourceTest/testInvalidUriWithCookie()#io/corbel/oauth/service/ClientService/verifyRedirectUri(java.lang.String,io.corbel.oauth.model.Client)
io/corbel/oauth/api/CookieAuthorizeResourceTest/testInvalidUriWithCookie()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/oauth/api/CookieAuthorizeResourceTest/testInvalidUriWithCookie()#io/corbel/lib/token/TokenGrant/TokenGrant(java.lang.String,long)
io/corbel/oauth/api/CookieAuthorizeResourceTest/testInvalidUriWithCookie()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/oauth/api/CookieAuthorizeResourceTest/testInvalidUriWithCookie()#io/corbel/oauth/token/TokenExpireTime/getTokenExpireTimeFromResponseType(io.corbel.lib.token.model.TokenType)
io/corbel/oauth/api/CookieAuthorizeResourceTest/testInvalidUriWithCookie()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/oauth/api/CookieAuthorizeResourceTest/testInvalidUriWithCookie()#io/corbel/lib/token/factory/TokenFactory/createToken(io.corbel.lib.token.TokenInfo,long,java.lang.String[])
io/corbel/oauth/api/CookieAuthorizeResourceTest/testInvalidUriWithCookie()#javax/ws/rs/core/Cookie/Cookie(java.lang.String,java.lang.String)
io/corbel/oauth/api/CookieAuthorizeResourceTest/doGetWithCookie(javax.ws.rs.core.Cookie)#javax/ws/rs/core/Configurable/property(java.lang.String,java.lang.Object)
io/corbel/oauth/api/CookieAuthorizeResourceTest/doGetWithCookie(javax.ws.rs.core.Cookie)#javax/ws/rs/client/Invocation/Builder/cookie(javax.ws.rs.core.Cookie)
io/corbel/oauth/api/CookieAuthorizeResourceTest/doGetWithCookie(javax.ws.rs.core.Cookie)#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/oauth/api/CookieAuthorizeResourceTest/doGetWithCookie(javax.ws.rs.core.Cookie)#javax/ws/rs/client/SyncInvoker/get(java.lang.Class)
io/corbel/oauth/api/CookieAuthorizeResourceTest/doGetWithCookie(javax.ws.rs.core.Cookie)#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/oauth/api/CookieAuthorizeResourceTest/doGetWithCookie(javax.ws.rs.core.Cookie)#javax/ws/rs/client/WebTarget/queryParam(java.lang.String,java.lang.Object[])
io/corbel/oauth/api/CookieAuthorizeResourceTest/doGetWithCookie(javax.ws.rs.core.Cookie)#javax/ws/rs/client/WebTarget/request()
io/corbel/oauth/api/CookieAuthorizeResourceTest/before()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/oauth/api/CookieAuthorizeResourceTest/before()#org/mockito/Mockito/when(T)
io/corbel/oauth/api/CookieAuthorizeResourceTest/before()#io/corbel/oauth/service/ClientService/findByName(java.lang.String)
io/corbel/oauth/api/CookieAuthorizeResourceTest/before()#java/util/Optional/of(T)
io/corbel/oauth/api/CookieAuthorizeResourceTest/before()#io/corbel/oauth/model/Client/Client()
io/corbel/oauth/api/CookieAuthorizeResourceTest/before()#io/corbel/oauth/model/Client/setDomain(java.lang.String)
io/corbel/oauth/api/CookieAuthorizeResourceTest/before()#io/corbel/oauth/model/Client/setName(java.lang.String)
io/corbel/oauth/api/CookieAuthorizeResourceTest/testCookie()#javax/ws/rs/client/Entity/form(javax.ws.rs.core.MultivaluedMap)
io/corbel/oauth/api/CookieAuthorizeResourceTest/testCookie()#javax/ws/rs/core/Response/getCookies()
io/corbel/oauth/api/CookieAuthorizeResourceTest/testCookie()#io/corbel/oauth/model/User/getId()
io/corbel/oauth/api/CookieAuthorizeResourceTest/testCookie()#java/util/Map/get(java.lang.Object)
io/corbel/oauth/api/CookieAuthorizeResourceTest/testCookie()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/oauth/api/CookieAuthorizeResourceTest/testCookie()#javax/ws/rs/client/WebTarget/request()
io/corbel/oauth/api/CookieAuthorizeResourceTest/testCookie()#javax/ws/rs/core/Response/getStatus()
io/corbel/oauth/api/CookieAuthorizeResourceTest/testCookie()#io/corbel/lib/token/factory/TokenFactory/createToken(io.corbel.lib.token.TokenInfo,long,java.lang.String[])
io/corbel/oauth/api/CookieAuthorizeResourceTest/testCookie()#io/corbel/oauth/model/User/checkPassword(java.lang.String)
io/corbel/oauth/api/CookieAuthorizeResourceTest/testCookie()#io/corbel/oauth/session/SessionBuilder/createNewSession(java.lang.String,java.lang.String)
io/corbel/oauth/api/CookieAuthorizeResourceTest/testCookie()#io/corbel/oauth/service/ClientService/verifyRedirectUri(java.lang.String,io.corbel.oauth.model.Client)
io/corbel/oauth/api/CookieAuthorizeResourceTest/testCookie()#javax/ws/rs/core/NewCookie/NewCookie(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,int,boolean)
io/corbel/oauth/api/CookieAuthorizeResourceTest/testCookie()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/oauth/api/CookieAuthorizeResourceTest/testCookie()#io/corbel/oauth/session/SessionCookieFactory/createCookie(java.lang.String)
io/corbel/oauth/api/CookieAuthorizeResourceTest/testCookie()#io/corbel/lib/token/TokenGrant/TokenGrant(java.lang.String,long)
io/corbel/oauth/api/CookieAuthorizeResourceTest/testCookie()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/oauth/api/CookieAuthorizeResourceTest/testCookie()#javax/ws/rs/core/Configurable/property(java.lang.String,java.lang.Object)
io/corbel/oauth/api/CookieAuthorizeResourceTest/testCookie()#io/corbel/oauth/service/UserService/findByUserNameAndDomain(java.lang.String,java.lang.String)
io/corbel/oauth/api/CookieAuthorizeResourceTest/testCookie()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/oauth/api/CookieAuthorizeResourceTest/testCookie()#org/mockito/Mockito/when(T)
io/corbel/oauth/api/CookieAuthorizeResourceTest/testCookie()#io/corbel/oauth/token/TokenExpireTime/getTokenExpireTimeFromResponseType(io.corbel.lib.token.model.TokenType)
io/corbel/oauth/api/CookieAuthorizeResourceTest/testCookie()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/oauth/api/CookieAuthorizeResourceTest/testCookie()#org/fest/assertions/api/Assertions/assertThat(T)
io/corbel/oauth/api/CookieAuthorizeResourceTest/testCookie()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/oauth/api/CookieAuthorizeResourceTest/testCookie()#javax/ws/rs/client/SyncInvoker/post(javax.ws.rs.client.Entity,java.lang.Class)
io/corbel/oauth/api/CookieAuthorizeResourceTest/testCookie()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/oauth/api/CookieAuthorizeResourceTest/testGetWithCookie()#io/corbel/oauth/service/UserService/findByUserNameAndDomain(java.lang.String,java.lang.String)
io/corbel/oauth/api/CookieAuthorizeResourceTest/testGetWithCookie()#org/mockito/Mockito/when(T)
io/corbel/oauth/api/CookieAuthorizeResourceTest/testGetWithCookie()#io/corbel/oauth/api/CookieAuthorizeResourceTest/doGetWithCookie(javax.ws.rs.core.Cookie)
io/corbel/oauth/api/CookieAuthorizeResourceTest/testGetWithCookie()#io/corbel/oauth/model/User/User()
io/corbel/oauth/api/CookieAuthorizeResourceTest/testGetWithCookie()#javax/ws/rs/core/Response/getStatus()
io/corbel/oauth/api/CookieAuthorizeResourceTest/testGetWithCookie()#io/corbel/lib/token/parser/TokenParser/parseAndVerify(java.lang.String)
io/corbel/oauth/api/CookieAuthorizeResourceTest/testGetWithCookie()#io/corbel/oauth/service/ClientService/verifyRedirectUri(java.lang.String,io.corbel.oauth.model.Client)
io/corbel/oauth/api/CookieAuthorizeResourceTest/testGetWithCookie()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/oauth/api/CookieAuthorizeResourceTest/testGetWithCookie()#io/corbel/lib/token/TokenGrant/TokenGrant(java.lang.String,long)
io/corbel/oauth/api/CookieAuthorizeResourceTest/testGetWithCookie()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/oauth/api/CookieAuthorizeResourceTest/testGetWithCookie()#io/corbel/oauth/token/TokenExpireTime/getTokenExpireTimeFromResponseType(io.corbel.lib.token.model.TokenType)
io/corbel/oauth/api/CookieAuthorizeResourceTest/testGetWithCookie()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/oauth/api/CookieAuthorizeResourceTest/testGetWithCookie()#io/corbel/lib/token/factory/TokenFactory/createToken(io.corbel.lib.token.TokenInfo,long,java.lang.String[])
io/corbel/oauth/api/CookieAuthorizeResourceTest/testGetWithCookie()#javax/ws/rs/core/Cookie/Cookie(java.lang.String,java.lang.String)
io/corbel/resources/rem/acl/AclPostRem/collectionWithAcl(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional,java.util.Optional)#io/corbel/resources/rem/request/RequestParametersImpl/RequestParametersImpl(E,io.corbel.lib.token.TokenInfo,java.lang.String,java.util.List,java.lang.Long,javax.ws.rs.core.MultivaluedMap,javax.ws.rs.core.MultivaluedMap)
io/corbel/resources/rem/acl/AclPostRem/collectionWithAcl(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional,java.util.Optional)#java/util/Optional/get()
io/corbel/resources/rem/acl/AclPostRem/collectionWithAcl(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional,java.util.Optional)#io/corbel/resources/rem/request/RequestParameters/getTokenInfo()
io/corbel/resources/rem/acl/AclPostRem/collectionWithAcl(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional,java.util.Optional)#io/corbel/resources/rem/acl/AclBaseRem/getExcludedRems(java.util.Optional)
io/corbel/resources/rem/acl/AclPostRem/collectionWithAcl(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional,java.util.Optional)#io/corbel/resources/rem/request/ResourceId/ResourceId(java.lang.String)
io/corbel/resources/rem/acl/AclPostRem/collectionWithAcl(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional,java.util.Optional)#io/corbel/lib/token/TokenInfo/getUserId()
io/corbel/resources/rem/acl/AclPostRem/collectionWithAcl(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional,java.util.Optional)#io/corbel/lib/ws/api/error/ErrorResponseFactory/badRequest()
io/corbel/resources/rem/acl/AclPostRem/collectionWithAcl(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional,java.util.Optional)#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/rem/acl/AclPostRem/collectionWithAcl(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional,java.util.Optional)#io/corbel/resources/rem/service/AclResourcesService/saveResource(io.corbel.resources.rem.Rem,io.corbel.resources.rem.request.RequestParameters,java.lang.String,java.net.URI,java.lang.Object,java.util.List)
io/corbel/resources/rem/acl/AclPostRem/collectionWithAcl(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional,java.util.Optional)#java/util/List/contains(java.lang.Object)
io/corbel/resources/rem/acl/AclPostRem/collectionWithAcl(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional,java.util.Optional)#io/corbel/lib/ws/api/error/ErrorResponseFactory/getInstance()
io/corbel/resources/rem/acl/AclPostRem/collectionWithAcl(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional,java.util.Optional)#com/google/gson/JsonObject/add(java.lang.String,com.google.gson.JsonElement)
io/corbel/resources/rem/acl/AclPostRem/collectionWithAcl(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional,java.util.Optional)#java/lang/Enum/toString()
io/corbel/resources/rem/acl/AclPostRem/collectionWithAcl(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional,java.util.Optional)#io/corbel/resources/rem/request/RequestParameters/getHeaders()
io/corbel/resources/rem/acl/AclPostRem/collectionWithAcl(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional,java.util.Optional)#java/lang/Object/toString()
io/corbel/resources/rem/acl/AclPostRem/collectionWithAcl(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional,java.util.Optional)#javax/ws/rs/core/Response/Status/getStatusCode()
io/corbel/resources/rem/acl/AclPostRem/collectionWithAcl(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional,java.util.Optional)#javax/ws/rs/core/MultivaluedMap/getFirst(K)
io/corbel/resources/rem/acl/AclPostRem/collectionWithAcl(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional,java.util.Optional)#com/google/gson/JsonParser/parse(com.google.gson.stream.JsonReader)
io/corbel/resources/rem/acl/AclPostRem/collectionWithAcl(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional,java.util.Optional)#com/google/gson/JsonObject/remove(java.lang.String)
io/corbel/resources/rem/acl/AclPostRem/collectionWithAcl(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional,java.util.Optional)#io/corbel/resources/rem/request/RequestParameters/getRequestedDomain()
io/corbel/resources/rem/acl/AclPostRem/collectionWithAcl(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional,java.util.Optional)#io/corbel/resources/rem/service/AclResourcesService/updateResource(io.corbel.resources.rem.Rem,java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.lang.Object,java.util.List)
io/corbel/resources/rem/acl/AclPostRem/collectionWithAcl(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional,java.util.Optional)#java/util/Optional/ofNullable(T)
io/corbel/resources/rem/acl/AclPostRem/collectionWithAcl(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional,java.util.Optional)#javax/ws/rs/core/Response/getMetadata()
io/corbel/resources/rem/acl/AclPostRem/collectionWithAcl(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional,java.util.Optional)#io/corbel/resources/rem/service/RemService/getRem(java.lang.String,java.util.List,org.springframework.http.HttpMethod,java.util.List)
io/corbel/resources/rem/acl/AclPostRem/collectionWithAcl(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional,java.util.Optional)#com/google/gson/JsonElement/getAsJsonObject()
io/corbel/resources/rem/acl/AclPostRem/collectionWithAcl(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional,java.util.Optional)#java/io/InputStreamReader/InputStreamReader(java.io.InputStream)
io/corbel/resources/rem/acl/AclPostRem/collectionWithAcl(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional,java.util.Optional)#com/google/gson/JsonObject/addProperty(java.lang.String,java.lang.String)
io/corbel/resources/rem/acl/AclPostRem/collectionWithAcl(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional,java.util.Optional)#java/lang/String/substring(int)
io/corbel/resources/rem/acl/AclPostRem/collectionWithAcl(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional,java.util.Optional)#io/corbel/resources/rem/request/RequestParameters/getAcceptedMediaTypes()
io/corbel/resources/rem/acl/AclPostRem/collectionWithAcl(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional,java.util.Optional)#com/google/gson/JsonObject/JsonObject()
io/corbel/resources/rem/acl/AclPostRem/collectionWithAcl(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional,java.util.Optional)#com/google/gson/JsonParser/JsonParser()
io/corbel/resources/rem/acl/AclPostRem/collectionWithAcl(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional,java.util.Optional)#io/corbel/lib/ws/api/error/ErrorResponseFactory/methodNotAllowed()
io/corbel/resources/rem/acl/AclPostRem/collectionWithAcl(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional,java.util.Optional)#java/util/Optional/isPresent()
io/corbel/resources/rem/acl/AclPostRem/collectionWithAcl(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional,java.util.Optional)#java/lang/String/lastIndexOf(java.lang.String)
io/corbel/resources/rem/acl/AclPostRem/collectionWithAcl(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional,java.util.Optional)#com/google/gson/stream/JsonReader/JsonReader(java.io.Reader)
io/corbel/resources/rem/acl/AclPostRem/relationWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#java/util/Optional/get()
io/corbel/resources/rem/acl/AclPostRem/relationWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#io/corbel/resources/rem/request/RequestParameters/getTokenInfo()
io/corbel/resources/rem/acl/AclPostRem/relationWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#io/corbel/resources/rem/request/ResourceId/isWildcard()
io/corbel/resources/rem/acl/AclPostRem/relationWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#io/corbel/resources/rem/service/AclResourcesService/isAuthorized(java.lang.String,io.corbel.lib.token.TokenInfo,java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.model.AclPermission)
io/corbel/resources/rem/acl/AclPostRem/relationWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#com/google/gson/JsonParser/parse(com.google.gson.stream.JsonReader)
io/corbel/resources/rem/acl/AclPostRem/relationWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#io/corbel/resources/rem/acl/AclBaseRem/getExcludedRems(java.util.Optional)
io/corbel/resources/rem/acl/AclPostRem/relationWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#io/corbel/lib/token/TokenInfo/getUserId()
io/corbel/resources/rem/acl/AclPostRem/relationWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#io/corbel/resources/rem/request/RequestParameters/getRequestedDomain()
io/corbel/resources/rem/acl/AclPostRem/relationWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#io/corbel/resources/rem/service/RemService/getRem(java.lang.String,java.util.List,org.springframework.http.HttpMethod,java.util.List)
io/corbel/resources/rem/acl/AclPostRem/relationWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#io/corbel/lib/ws/api/error/ErrorResponseFactory/badRequest()
io/corbel/resources/rem/acl/AclPostRem/relationWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#io/corbel/lib/ws/api/error/ErrorResponseFactory/getInstance()
io/corbel/resources/rem/acl/AclPostRem/relationWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#com/google/gson/stream/JsonReader/JsonReader(java.io.Reader)
io/corbel/resources/rem/acl/AclPostRem/relationWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#io/corbel/lib/ws/api/error/ErrorResponseFactory/forbidden()
io/corbel/resources/rem/acl/AclPostRem/relationWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#io/corbel/resources/rem/service/AclResourcesService/putRelation(io.corbel.resources.rem.Rem,java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.lang.Object,java.util.List)
io/corbel/resources/rem/acl/AclPostRem/relationWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#com/google/gson/JsonElement/getAsJsonObject()
io/corbel/resources/rem/acl/AclPostRem/relationWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#java/io/InputStreamReader/InputStreamReader(java.io.InputStream)
io/corbel/resources/rem/acl/AclPostRem/relationWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#io/corbel/lib/ws/api/error/ErrorResponseFactory/unauthorized(java.lang.String)
io/corbel/resources/rem/acl/AclPostRem/relationWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#io/corbel/resources/rem/utils/AclUtils/buildMessage(io.corbel.resources.rem.model.AclPermission)
io/corbel/resources/rem/acl/AclPostRem/relationWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#io/corbel/resources/rem/request/RequestParameters/getAcceptedMediaTypes()
io/corbel/resources/rem/acl/AclPostRem/relationWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#com/google/gson/JsonParser/JsonParser()
io/corbel/resources/rem/acl/AclPostRem/relationWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#io/corbel/lib/ws/api/error/ErrorResponseFactory/methodNotAllowed()
io/corbel/resources/rem/acl/AclPostRem/relationWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#java/util/Optional/isPresent()
io/corbel/iam/api/TokenResource/upgradeTokenGET(io.corbel.lib.ws.auth.AuthorizationInfo,java.lang.String,java.lang.String)#io/corbel/iam/api/TokenResource/upgradeToken(io.corbel.lib.ws.auth.AuthorizationInfo,java.lang.String,java.lang.String)
io/corbel/iam/api/TokenResource/getTokenWithCode(javax.ws.rs.core.UriInfo,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)#io/corbel/iam/auth/OauthParams/OauthParams()
io/corbel/iam/api/TokenResource/getTokenWithCode(javax.ws.rs.core.UriInfo,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)#java/lang/String/split(java.lang.String)
io/corbel/iam/api/TokenResource/getTokenWithCode(javax.ws.rs.core.UriInfo,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)#io/corbel/iam/auth/OauthParams/setAccessToken(java.lang.String)
io/corbel/iam/api/TokenResource/getTokenWithCode(javax.ws.rs.core.UriInfo,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)#io/corbel/iam/api/IamErrorResponseFactory/notSupportedGrantType(java.lang.String)
io/corbel/iam/api/TokenResource/getTokenWithCode(javax.ws.rs.core.UriInfo,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)#io/corbel/iam/auth/OauthParams/setCode(java.lang.String)
io/corbel/iam/api/TokenResource/getTokenWithCode(javax.ws.rs.core.UriInfo,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)#io/corbel/lib/ws/api/error/ErrorResponseFactory/badRequest()
io/corbel/iam/api/TokenResource/getTokenWithCode(javax.ws.rs.core.UriInfo,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)#io/corbel/iam/auth/OauthParams/setVerifier(java.lang.String)
io/corbel/iam/api/TokenResource/getTokenWithCode(javax.ws.rs.core.UriInfo,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)#java/lang/String/equals(java.lang.Object)
io/corbel/iam/api/TokenResource/getTokenWithCode(javax.ws.rs.core.UriInfo,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)#java/lang/String/isEmpty()
io/corbel/iam/api/TokenResource/getTokenWithCode(javax.ws.rs.core.UriInfo,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)#com/google/common/base/Optional/of(T)
io/corbel/iam/api/TokenResource/getTokenWithCode(javax.ws.rs.core.UriInfo,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)#io/corbel/iam/api/IamErrorResponseFactory/missingGrantType()
io/corbel/iam/api/TokenResource/getTokenWithCode(javax.ws.rs.core.UriInfo,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)#java/net/URLDecoder/decode(java.lang.String,java.lang.String)
io/corbel/iam/api/TokenResource/getTokenWithCode(javax.ws.rs.core.UriInfo,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)#io/corbel/iam/api/TokenResource/doJwtAuthorization(java.lang.String,com.google.common.base.Optional,boolean)
io/corbel/iam/api/TokenResource/getTokenWithCode(javax.ws.rs.core.UriInfo,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)#io/corbel/iam/api/IamErrorResponseFactory/getInstance()
io/corbel/iam/api/TokenResource/getTokenWithCode(javax.ws.rs.core.UriInfo,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)#io/corbel/iam/auth/OauthParams/setRedirectUri(java.lang.String)
io/corbel/iam/api/TokenResource/getTokenWithCode(javax.ws.rs.core.UriInfo,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)#io/corbel/iam/api/IamErrorResponseFactory/missingAssertion()
io/corbel/iam/api/TokenResource/getTokenWithCode(javax.ws.rs.core.UriInfo,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)#java/net/URI/toString()
io/corbel/iam/api/TokenResource/getTokenWithCode(javax.ws.rs.core.UriInfo,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)#io/corbel/iam/auth/OauthParams/setToken(java.lang.String)
io/corbel/iam/api/TokenResource/getTokenWithCode(javax.ws.rs.core.UriInfo,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)#javax/ws/rs/core/UriInfo/getAbsolutePath()
io/corbel/iam/api/TokenResource/getTokenWithCode(javax.ws.rs.core.UriInfo,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)#io/corbel/lib/ws/api/error/ErrorResponseFactory/getInstance()
io/corbel/iam/api/TokenResource/getToken(java.lang.String,java.lang.String,boolean)#com/google/common/base/Optional/absent()
io/corbel/iam/api/TokenResource/getToken(java.lang.String,java.lang.String,boolean)#io/corbel/iam/api/IamErrorResponseFactory/missingAssertion()
io/corbel/iam/api/TokenResource/getToken(java.lang.String,java.lang.String,boolean)#io/corbel/iam/api/IamErrorResponseFactory/notSupportedGrantType(java.lang.String)
io/corbel/iam/api/TokenResource/getToken(java.lang.String,java.lang.String,boolean)#java/lang/String/equals(java.lang.Object)
io/corbel/iam/api/TokenResource/getToken(java.lang.String,java.lang.String,boolean)#java/lang/String/isEmpty()
io/corbel/iam/api/TokenResource/getToken(java.lang.String,java.lang.String,boolean)#io/corbel/iam/api/IamErrorResponseFactory/missingGrantType()
io/corbel/iam/api/TokenResource/getToken(java.lang.String,java.lang.String,boolean)#io/corbel/iam/api/TokenResource/doJwtAuthorization(java.lang.String,com.google.common.base.Optional,boolean)
io/corbel/iam/api/TokenResource/getToken(java.lang.String,java.lang.String,boolean)#io/corbel/iam/api/IamErrorResponseFactory/getInstance()
io/corbel/iam/api/TokenResource/upgradeToken(io.corbel.lib.ws.auth.AuthorizationInfo,java.lang.String,java.lang.String)#io/corbel/iam/api/IamErrorResponseFactory/missingAssertion()
io/corbel/iam/api/TokenResource/upgradeToken(io.corbel.lib.ws.auth.AuthorizationInfo,java.lang.String,java.lang.String)#javax/ws/rs/core/Response/ResponseBuilder/build()
io/corbel/iam/api/TokenResource/upgradeToken(io.corbel.lib.ws.auth.AuthorizationInfo,java.lang.String,java.lang.String)#io/corbel/iam/api/IamErrorResponseFactory/notSupportedGrantType(java.lang.String)
io/corbel/iam/api/TokenResource/upgradeToken(io.corbel.lib.ws.auth.AuthorizationInfo,java.lang.String,java.lang.String)#io/corbel/lib/ws/auth/AuthorizationInfo/getTokenReader()
io/corbel/iam/api/TokenResource/upgradeToken(io.corbel.lib.ws.auth.AuthorizationInfo,java.lang.String,java.lang.String)#java/lang/Throwable/getMessage()
io/corbel/iam/api/TokenResource/upgradeToken(io.corbel.lib.ws.auth.AuthorizationInfo,java.lang.String,java.lang.String)#io/corbel/iam/model/TokenUpgradeGrant/TokenUpgradeGrant(java.util.Set)
io/corbel/iam/api/TokenResource/upgradeToken(io.corbel.lib.ws.auth.AuthorizationInfo,java.lang.String,java.lang.String)#io/corbel/iam/service/UpgradeTokenService/getScopesFromTokenToUpgrade(java.lang.String)
io/corbel/iam/api/TokenResource/upgradeToken(io.corbel.lib.ws.auth.AuthorizationInfo,java.lang.String,java.lang.String)#java/lang/String/isEmpty()
io/corbel/iam/api/TokenResource/upgradeToken(io.corbel.lib.ws.auth.AuthorizationInfo,java.lang.String,java.lang.String)#javax/ws/rs/core/Response/ResponseBuilder/type(javax.ws.rs.core.MediaType)
io/corbel/iam/api/TokenResource/upgradeToken(io.corbel.lib.ws.auth.AuthorizationInfo,java.lang.String,java.lang.String)#io/corbel/iam/api/IamErrorResponseFactory/getInstance()
io/corbel/iam/api/TokenResource/upgradeToken(io.corbel.lib.ws.auth.AuthorizationInfo,java.lang.String,java.lang.String)#java/lang/String/equals(java.lang.Object)
io/corbel/iam/api/TokenResource/upgradeToken(io.corbel.lib.ws.auth.AuthorizationInfo,java.lang.String,java.lang.String)#io/corbel/iam/service/UpgradeTokenService/upgradeToken(java.lang.String,io.corbel.lib.token.reader.TokenReader,java.util.Set)
io/corbel/iam/api/TokenResource/upgradeToken(io.corbel.lib.ws.auth.AuthorizationInfo,java.lang.String,java.lang.String)#io/corbel/lib/ws/api/error/ErrorResponseFactory/unauthorized(java.lang.String)
io/corbel/iam/api/TokenResource/upgradeToken(io.corbel.lib.ws.auth.AuthorizationInfo,java.lang.String,java.lang.String)#io/corbel/iam/api/IamErrorResponseFactory/missingGrantType()
io/corbel/iam/api/TokenResource/upgradeToken(io.corbel.lib.ws.auth.AuthorizationInfo,java.lang.String,java.lang.String)#javax/ws/rs/core/Response/ok(java.lang.Object)
io/corbel/iam/api/TokenResource/upgradeTokenPOST(io.corbel.lib.ws.auth.AuthorizationInfo,java.lang.String,java.lang.String)#io/corbel/iam/api/TokenResource/upgradeToken(io.corbel.lib.ws.auth.AuthorizationInfo,java.lang.String,java.lang.String)
io/corbel/iam/api/TokenResource/doJwtAuthorization(java.lang.String,com.google.common.base.Optional,boolean)#io/corbel/iam/service/AuthorizationService/authorize(java.lang.String)
io/corbel/iam/api/TokenResource/doJwtAuthorization(java.lang.String,com.google.common.base.Optional,boolean)#io/corbel/iam/model/TokenGrant/getAccessToken()
io/corbel/iam/api/TokenResource/doJwtAuthorization(java.lang.String,com.google.common.base.Optional,boolean)#io/corbel/iam/api/IamErrorResponseFactory/missingOauthParms()
io/corbel/iam/api/TokenResource/doJwtAuthorization(java.lang.String,com.google.common.base.Optional,boolean)#java/lang/Throwable/getMessage()
io/corbel/iam/api/TokenResource/doJwtAuthorization(java.lang.String,com.google.common.base.Optional,boolean)#io/corbel/iam/api/IamErrorResponseFactory/missingBasicParms()
io/corbel/iam/api/TokenResource/doJwtAuthorization(java.lang.String,com.google.common.base.Optional,boolean)#io/corbel/iam/exception/OauthServerConnectionException/getOAuthService()
io/corbel/iam/api/TokenResource/doJwtAuthorization(java.lang.String,com.google.common.base.Optional,boolean)#io/corbel/iam/model/TokenGrant/getExpiresAt()
io/corbel/iam/api/TokenResource/doJwtAuthorization(java.lang.String,com.google.common.base.Optional,boolean)#javax/ws/rs/core/Response/ResponseBuilder/type(javax.ws.rs.core.MediaType)
io/corbel/iam/api/TokenResource/doJwtAuthorization(java.lang.String,com.google.common.base.Optional,boolean)#java/lang/System/currentTimeMillis()
io/corbel/iam/api/TokenResource/doJwtAuthorization(java.lang.String,com.google.common.base.Optional,boolean)#io/corbel/iam/api/IamErrorResponseFactory/getInstance()
io/corbel/iam/api/TokenResource/doJwtAuthorization(java.lang.String,com.google.common.base.Optional,boolean)#io/corbel/lib/ws/api/error/ErrorResponseFactory/unauthorized(java.lang.String,java.lang.String)
io/corbel/iam/api/TokenResource/doJwtAuthorization(java.lang.String,com.google.common.base.Optional,boolean)#com/google/common/base/Optional/isPresent()
io/corbel/iam/api/TokenResource/doJwtAuthorization(java.lang.String,com.google.common.base.Optional,boolean)#io/corbel/iam/api/IamErrorResponseFactory/unsupportedVersion(java.lang.String)
io/corbel/iam/api/TokenResource/doJwtAuthorization(java.lang.String,com.google.common.base.Optional,boolean)#javax/ws/rs/core/Response/ResponseBuilder/build()
io/corbel/iam/api/TokenResource/doJwtAuthorization(java.lang.String,com.google.common.base.Optional,boolean)#com/google/common/base/Optional/get()
io/corbel/iam/api/TokenResource/doJwtAuthorization(java.lang.String,com.google.common.base.Optional,boolean)#io/corbel/iam/service/AuthorizationService/authorize(java.lang.String,io.corbel.iam.auth.OauthParams)
io/corbel/iam/api/TokenResource/doJwtAuthorization(java.lang.String,com.google.common.base.Optional,boolean)#io/corbel/iam/exception/OauthServerConnectionException/getMessage()
io/corbel/iam/api/TokenResource/doJwtAuthorization(java.lang.String,com.google.common.base.Optional,boolean)#io/corbel/lib/ws/api/error/ErrorResponseFactory/badGateway(io.corbel.lib.ws.model.Error)
io/corbel/iam/api/TokenResource/doJwtAuthorization(java.lang.String,com.google.common.base.Optional,boolean)#io/corbel/iam/api/IamErrorResponseFactory/noSuchPrincipal(java.lang.String)
io/corbel/iam/api/TokenResource/doJwtAuthorization(java.lang.String,com.google.common.base.Optional,boolean)#io/corbel/lib/ws/model/Error/Error(java.lang.String,java.lang.String)
io/corbel/iam/api/TokenResource/doJwtAuthorization(java.lang.String,com.google.common.base.Optional,boolean)#io/corbel/lib/ws/api/error/ErrorResponseFactory/unauthorized(java.lang.String)
io/corbel/iam/api/TokenResource/doJwtAuthorization(java.lang.String,com.google.common.base.Optional,boolean)#javax/ws/rs/core/Response/ok(java.lang.Object)
io/corbel/iam/api/TokenResource/doJwtAuthorization(java.lang.String,com.google.common.base.Optional,boolean)#javax/ws/rs/core/Response/ResponseBuilder/cookie(javax.ws.rs.core.NewCookie[])
io/corbel/iam/api/TokenResource/doJwtAuthorization(java.lang.String,com.google.common.base.Optional,boolean)#io/corbel/iam/utils/TokenCookieFactory/createCookie(java.lang.String,int)
io/corbel/notifications/NotificationsService/configureService(io.dropwizard.setup.Environment,org.springframework.context.ApplicationContext)#com/codahale/metrics/health/HealthCheckRegistry/register(java.lang.String,com.codahale.metrics.health.HealthCheck)
io/corbel/notifications/NotificationsService/configureService(io.dropwizard.setup.Environment,org.springframework.context.ApplicationContext)#io/dropwizard/setup/Environment/jersey()
io/corbel/notifications/NotificationsService/configureService(io.dropwizard.setup.Environment,org.springframework.context.ApplicationContext)#io/corbel/lib/ws/health/BasicHealthCheck/BasicHealthCheck()
io/corbel/notifications/NotificationsService/configureService(io.dropwizard.setup.Environment,org.springframework.context.ApplicationContext)#io/corbel/lib/ws/cli/ServiceRunnerWithVersionResource/configureService(io.dropwizard.setup.Environment,org.springframework.context.ApplicationContext)
io/corbel/notifications/NotificationsService/configureService(io.dropwizard.setup.Environment,org.springframework.context.ApplicationContext)#org/springframework/beans/factory/BeanFactory/getBean(java.lang.Class)
io/corbel/notifications/NotificationsService/configureService(io.dropwizard.setup.Environment,org.springframework.context.ApplicationContext)#io/dropwizard/setup/Environment/healthChecks()
io/corbel/notifications/NotificationsService/configureService(io.dropwizard.setup.Environment,org.springframework.context.ApplicationContext)#io/dropwizard/jersey/setup/JerseyEnvironment/register(java.lang.Object)
io/corbel/resources/rem/request/RequestParametersImplCustomContentLength/getApiParameters()#io/corbel/resources/rem/request/RequestParameters/getApiParameters()
io/corbel/resources/rem/request/RequestParametersImplCustomContentLength/getHeaders()#io/corbel/resources/rem/request/RequestParameters/getHeaders()
io/corbel/resources/rem/request/RequestParametersImplCustomContentLength/getTokenInfo()#io/corbel/resources/rem/request/RequestParameters/getTokenInfo()
io/corbel/resources/rem/request/RequestParametersImplCustomContentLength/getCustomParameterValue(java.lang.String)#io/corbel/resources/rem/request/RequestParameters/getCustomParameterValue(java.lang.String)
io/corbel/resources/rem/request/RequestParametersImplCustomContentLength/getRequestedDomain()#io/corbel/resources/rem/request/RequestParameters/getRequestedDomain()
io/corbel/resources/rem/request/RequestParametersImplCustomContentLength/getCustomParameterValues(java.lang.String)#io/corbel/resources/rem/request/RequestParameters/getCustomParameterValues(java.lang.String)
io/corbel/resources/rem/request/RequestParametersImplCustomContentLength/getAcceptedMediaTypes()#io/corbel/resources/rem/request/RequestParameters/getAcceptedMediaTypes()
io/corbel/resources/rem/request/RequestParametersImplCustomContentLength/getParams()#io/corbel/resources/rem/request/RequestParameters/getParams()
io/corbel/resources/rem/model/ManagedCollection/equals(java.lang.Object)#java/lang/String/equals(java.lang.Object)
io/corbel/resources/rem/model/ManagedCollection/equals(java.lang.Object)#java/util/List/equals(java.lang.Object)
io/corbel/resources/rem/model/ManagedCollection/equals(java.lang.Object)#java/lang/Object/getClass()
io/corbel/resources/rem/model/ManagedCollection/validate()#org/springframework/util/StringUtils/isEmpty(java.lang.Object)
io/corbel/resources/rem/model/ManagedCollection/hashCode()#java/lang/String/hashCode()
io/corbel/resources/rem/model/ManagedCollection/hashCode()#java/util/List/hashCode()
io/corbel/resources/rem/model/ManagedCollection/hashCode()#java/lang/Enum/hashCode()
io/corbel/iam/ioc/IamIoc/getGson()#com/google/gson/Gson/Gson()
io/corbel/iam/ioc/IamIoc/getEmailResource(io.corbel.iam.service.UserService)#io/corbel/iam/api/EmailResource/EmailResource(io.corbel.iam.service.UserService)
io/corbel/iam/ioc/IamIoc/getAuthorizationRequestContextFactory(io.corbel.iam.service.ScopeService)#io/corbel/iam/ioc/IamIoc/getUserRepository()
io/corbel/iam/ioc/IamIoc/getAuthorizationRequestContextFactory(io.corbel.iam.service.ScopeService)#io/corbel/iam/auth/AuthorizationRequestContextFactory/AuthorizationRequestContextFactory(io.corbel.iam.repository.ClientRepository,io.corbel.iam.repository.DomainRepository,io.corbel.iam.repository.UserRepository)
io/corbel/iam/ioc/IamIoc/getMailResetPasswordService(io.corbel.iam.service.EventsService,io.corbel.iam.service.ScopeService,io.corbel.lib.token.factory.TokenFactory,io.corbel.iam.repository.ClientRepository)#io/corbel/iam/service/DefaultMailService/DefaultMailService(io.corbel.iam.service.EventsService,io.corbel.iam.service.ScopeService,io.corbel.lib.token.factory.TokenFactory,io.corbel.iam.repository.ClientRepository,java.time.Clock,java.lang.String,long,java.lang.String,java.lang.String,java.lang.String,long,java.lang.String,java.lang.String)
io/corbel/iam/ioc/IamIoc/getMailResetPasswordService(io.corbel.iam.service.EventsService,io.corbel.iam.service.ScopeService,io.corbel.lib.token.factory.TokenFactory,io.corbel.iam.repository.ClientRepository)#java/time/Clock/systemUTC()
io/corbel/iam/ioc/IamIoc/getMailResetPasswordService(io.corbel.iam.service.EventsService,io.corbel.iam.service.ScopeService,io.corbel.lib.token.factory.TokenFactory,io.corbel.iam.repository.ClientRepository)#org/springframework/core/env/PropertyResolver/getProperty(java.lang.String,java.lang.Class)
io/corbel/iam/ioc/IamIoc/getRefreshTokenService(io.corbel.lib.token.parser.TokenParser,io.corbel.lib.token.factory.TokenFactory,io.corbel.lib.token.repository.OneTimeAccessTokenRepository)#io/corbel/iam/ioc/IamIoc/getUserRepository()
io/corbel/iam/ioc/IamIoc/getRefreshTokenService(io.corbel.lib.token.parser.TokenParser,io.corbel.lib.token.factory.TokenFactory,io.corbel.lib.token.repository.OneTimeAccessTokenRepository)#io/corbel/iam/service/DefaultRefreshTokenService/DefaultRefreshTokenService(io.corbel.lib.token.parser.TokenParser,io.corbel.iam.repository.UserRepository,io.corbel.lib.token.factory.TokenFactory,long,io.corbel.lib.token.repository.OneTimeAccessTokenRepository)
io/corbel/iam/ioc/IamIoc/getRefreshTokenService(io.corbel.lib.token.parser.TokenParser,io.corbel.lib.token.factory.TokenFactory,io.corbel.lib.token.repository.OneTimeAccessTokenRepository)#org/springframework/core/env/PropertyResolver/getProperty(java.lang.String,java.lang.Class)
io/corbel/iam/ioc/IamIoc/getTokenResource(io.corbel.iam.service.AuthorizationService,io.corbel.iam.service.UpgradeTokenService)#io/corbel/iam/ioc/IamIoc/getSessionCookieFactory()
io/corbel/iam/ioc/IamIoc/getTokenResource(io.corbel.iam.service.AuthorizationService,io.corbel.iam.service.UpgradeTokenService)#io/corbel/iam/api/TokenResource/TokenResource(io.corbel.iam.service.AuthorizationService,io.corbel.iam.service.UpgradeTokenService,io.corbel.iam.utils.TokenCookieFactory)
io/corbel/iam/ioc/IamIoc/getDeviceIdGenerator()#io/corbel/iam/model/DeviceIdGenerator/DeviceIdGenerator()
io/corbel/iam/ioc/IamIoc/getDomainResource(io.corbel.iam.service.DomainService)#io/corbel/iam/api/DomainResource/DomainResource(io.corbel.iam.service.DomainService)
io/corbel/iam/ioc/IamIoc/getGroupResource(io.corbel.iam.service.GroupService)#io/corbel/iam/api/GroupResource/GroupResource(io.corbel.iam.service.GroupService)
io/corbel/iam/ioc/IamIoc/getUpgradeTokenService(io.corbel.iam.service.ScopeService)#io/corbel/iam/ioc/IamIoc/getTokenUpgradeJsonTokenParser()
io/corbel/iam/ioc/IamIoc/getUpgradeTokenService(io.corbel.iam.service.ScopeService)#io/corbel/iam/service/DefaultUpgradeTokenService/DefaultUpgradeTokenService(net.oauth.jsontoken.JsonTokenParser,io.corbel.iam.service.ScopeService,io.corbel.iam.repository.UserTokenRepository)
io/corbel/iam/ioc/IamIoc/getTokenUpgradeVerifierProvider()#io/corbel/iam/jwt/TokenUpgradeVerifierProvider/TokenUpgradeVerifierProvider(java.lang.String)
io/corbel/iam/ioc/IamIoc/getTokenUpgradeVerifierProvider()#org/springframework/core/env/PropertyResolver/getProperty(java.lang.String)
io/corbel/iam/ioc/IamIoc/getAuthorizationRules(io.corbel.iam.auth.rule.ScopesAuthorizationRule)#java/util/Arrays/asList(T[])
io/corbel/iam/ioc/IamIoc/getAuthorizationRules(io.corbel.iam.auth.rule.ScopesAuthorizationRule)#io/corbel/iam/auth/rule/MaxExpireAuthorizationRule/MaxExpireAuthorizationRule(int)
io/corbel/iam/ioc/IamIoc/getAuthorizationRules(io.corbel.iam.auth.rule.ScopesAuthorizationRule)#org/springframework/core/env/PropertyResolver/getProperty(java.lang.String,java.lang.Class)
io/corbel/iam/ioc/IamIoc/getAuthorizationRules(io.corbel.iam.auth.rule.ScopesAuthorizationRule)#io/corbel/iam/auth/rule/RequestDomainAuthorizationRule/RequestDomainAuthorizationRule()
io/corbel/iam/ioc/IamIoc/getAuthorizationRules(io.corbel.iam.auth.rule.ScopesAuthorizationRule)#io/corbel/iam/auth/rule/AuthenticationTypeAllowedAuthorizationRule/AuthenticationTypeAllowedAuthorizationRule()
io/corbel/iam/ioc/IamIoc/getAuthorizationRules(io.corbel.iam.auth.rule.ScopesAuthorizationRule)#io/corbel/iam/auth/rule/ClientSideAuthenticationAllowedAuthorizationRule/ClientSideAuthenticationAllowedAuthorizationRule()
io/corbel/iam/ioc/IamIoc/getAuthorizationRules(io.corbel.iam.auth.rule.ScopesAuthorizationRule)#io/corbel/iam/auth/rule/PrincipalExistsAuthorizationRule/PrincipalExistsAuthorizationRule()
io/corbel/iam/ioc/IamIoc/getAuthorizationRules(io.corbel.iam.auth.rule.ScopesAuthorizationRule)#io/corbel/iam/auth/rule/VersionAuthorizationRule/VersionAuthorizationRule()
io/corbel/iam/ioc/IamIoc/getGoogleProvider()#io/corbel/iam/auth/provider/GoogleProvider/GoogleProvider(io.corbel.iam.repository.IdentityRepository)
io/corbel/iam/ioc/IamIoc/getTwitterProvider()#io/corbel/iam/auth/provider/TwitterProvider/TwitterProvider(io.corbel.iam.repository.IdentityRepository)
io/corbel/iam/ioc/IamIoc/geGroupIdGeneratorMongoEventListener()#io/corbel/iam/ioc/IamIoc/getGroupIdGenerator()
io/corbel/iam/ioc/IamIoc/geGroupIdGeneratorMongoEventListener()#io/corbel/lib/mongo/IdGeneratorMongoEventListener/IdGeneratorMongoEventListener(io.corbel.lib.mongo.IdGenerator,java.lang.Class)
io/corbel/iam/ioc/IamIoc/getQueryParser()#io/corbel/lib/queries/parser/JacksonQueryParser/JacksonQueryParser(io.corbel.lib.queries.parser.CustomJsonParser)
io/corbel/iam/ioc/IamIoc/getQueryParser()#io/corbel/iam/ioc/IamIoc/getCustomJsonParser()
io/corbel/iam/ioc/IamIoc/getClientIdGeneratorMongoEventListener()#io/corbel/iam/ioc/IamIoc/getClientIdGenerator()
io/corbel/iam/ioc/IamIoc/getClientIdGeneratorMongoEventListener()#io/corbel/lib/mongo/IdGeneratorMongoEventListener/IdGeneratorMongoEventListener(io.corbel.lib.mongo.IdGenerator,java.lang.Class)
io/corbel/iam/ioc/IamIoc/getScopeService(io.corbel.iam.service.EventsService)#io/corbel/iam/service/DefaultScopeService/DefaultScopeService(io.corbel.iam.repository.ScopeRepository,io.corbel.lib.ws.auth.repository.AuthorizationRulesRepository,long,io.corbel.iam.scope.ScopeFillStrategy,java.lang.String,java.time.Clock,io.corbel.iam.service.EventsService)
io/corbel/iam/ioc/IamIoc/getScopeService(io.corbel.iam.service.EventsService)#java/time/Clock/systemDefaultZone()
io/corbel/iam/ioc/IamIoc/getScopeService(io.corbel.iam.service.EventsService)#io/corbel/iam/ioc/IamIoc/getScopeFillStrategy()
io/corbel/iam/ioc/IamIoc/getScopeService(io.corbel.iam.service.EventsService)#org/springframework/core/env/PropertyResolver/getProperty(java.lang.String)
io/corbel/iam/ioc/IamIoc/getScopeService(io.corbel.iam.service.EventsService)#org/springframework/core/env/PropertyResolver/getProperty(java.lang.String,java.lang.Class)
io/corbel/iam/ioc/IamIoc/getDeviceService(io.corbel.iam.repository.DeviceRepository,io.corbel.iam.service.EventsService)#io/corbel/iam/ioc/IamIoc/getDeviceIdGenerator()
io/corbel/iam/ioc/IamIoc/getDeviceService(io.corbel.iam.repository.DeviceRepository,io.corbel.iam.service.EventsService)#io/corbel/iam/service/DefaultDeviceService/DefaultDeviceService(io.corbel.iam.repository.DeviceRepository,io.corbel.lib.mongo.IdGenerator,io.corbel.iam.service.EventsService,java.time.Clock)
io/corbel/iam/ioc/IamIoc/getDeviceService(io.corbel.iam.repository.DeviceRepository,io.corbel.iam.service.EventsService)#java/time/Clock/systemUTC()
io/corbel/iam/ioc/IamIoc/getDomainService(io.corbel.iam.service.ScopeService,io.corbel.iam.service.EventsService,io.corbel.lib.queries.request.AggregationResultsFactory)#io/corbel/iam/service/DefaultDomainService/DefaultDomainService(io.corbel.iam.repository.DomainRepository,io.corbel.iam.service.ScopeService,io.corbel.iam.service.EventsService,io.corbel.lib.queries.request.AggregationResultsFactory)
io/corbel/iam/ioc/IamIoc/domainDeletedEventHandler()#io/corbel/iam/eventbus/DomainDeletedEventHandler/DomainDeletedEventHandler(io.corbel.iam.repository.ClientRepository,io.corbel.iam.repository.UserRepository)
io/corbel/iam/ioc/IamIoc/scopeUpdateEventHandler(org.springframework.cache.CacheManager,io.corbel.iam.repository.GroupRepository)#io/corbel/iam/eventbus/ScopeModifiedEventHandler/ScopeModifiedEventHandler(org.springframework.cache.CacheManager,io.corbel.iam.repository.GroupRepository)
io/corbel/iam/ioc/IamIoc/getSessionCookieFactory()#io/corbel/iam/utils/DefaultTokenCookieFactory/DefaultTokenCookieFactory(java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)
io/corbel/iam/ioc/IamIoc/getSessionCookieFactory()#org/springframework/core/env/PropertyResolver/getProperty(java.lang.String)
io/corbel/iam/ioc/IamIoc/getSessionCookieFactory()#org/springframework/core/env/PropertyResolver/getProperty(java.lang.String,java.lang.Class)
io/corbel/iam/ioc/IamIoc/getScopeFillStrategy()#io/corbel/iam/scope/MustacheScopeFillStrategy/MustacheScopeFillStrategy()
io/corbel/iam/ioc/IamIoc/getIamShell(io.corbel.iam.service.GroupService)#io/corbel/iam/ioc/IamIoc/getClientIdGenerator()
io/corbel/iam/ioc/IamIoc/getIamShell(io.corbel.iam.service.GroupService)#io/corbel/iam/ioc/IamIoc/getUserRepository()
io/corbel/iam/ioc/IamIoc/getIamShell(io.corbel.iam.service.GroupService)#io/corbel/iam/ioc/IamIoc/getGroupIdGenerator()
io/corbel/iam/ioc/IamIoc/getIamShell(io.corbel.iam.service.GroupService)#org/springframework/core/env/PropertyResolver/getProperty(java.lang.String)
io/corbel/iam/ioc/IamIoc/getIamShell(io.corbel.iam.service.GroupService)#io/corbel/iam/ioc/IamIoc/getIdentityIdGenerator()
io/corbel/iam/ioc/IamIoc/getEventsService(io.corbel.eventbus.service.EventBus)#io/corbel/iam/service/DefaultEventsService/DefaultEventsService(io.corbel.eventbus.service.EventBus)
io/corbel/iam/ioc/IamIoc/getScopeResource(io.corbel.iam.service.ScopeService)#io/corbel/iam/api/ScopeResource/ScopeResource(io.corbel.iam.service.ScopeService)
io/corbel/iam/ioc/IamIoc/getVerifierProviders()#net/oauth/jsontoken/discovery/VerifierProviders/setVerifierProvider(net.oauth.jsontoken.crypto.SignatureAlgorithm,net.oauth.jsontoken.discovery.VerifierProvider)
io/corbel/iam/ioc/IamIoc/getVerifierProviders()#net/oauth/jsontoken/discovery/VerifierProviders/VerifierProviders()
io/corbel/iam/ioc/IamIoc/getVerifierProviders()#io/corbel/iam/ioc/IamIoc/getClientVerifierProvider()
io/corbel/iam/ioc/IamIoc/getClientVerifierProvider()#io/corbel/iam/jwt/ClientVerifierProvider/ClientVerifierProvider(io.corbel.iam.repository.ClientRepository)
io/corbel/iam/ioc/IamIoc/getClientService(io.corbel.iam.repository.ClientRepository,io.corbel.lib.queries.request.AggregationResultsFactory)#io/corbel/iam/service/DefaultClientService/DefaultClientService(io.corbel.iam.repository.ClientRepository,io.corbel.lib.queries.request.AggregationResultsFactory)
io/corbel/iam/ioc/IamIoc/domainPublicScopesNotPublishedEventHandler(io.corbel.iam.service.ScopeService,io.corbel.iam.repository.DomainRepository)#io/corbel/iam/eventbus/DomainPublicScopesNotPublishedEventHandler/DomainPublicScopesNotPublishedEventHandler(io.corbel.iam.service.ScopeService,io.corbel.iam.repository.DomainRepository)
io/corbel/iam/ioc/IamIoc/getClientIdGenerator()#io/corbel/lib/ws/digest/DigesterFactory/murmur3_32()
io/corbel/iam/ioc/IamIoc/getClientIdGenerator()#io/corbel/iam/model/ClientIdGenerator/ClientIdGenerator(io.corbel.lib.ws.digest.Digester)
io/corbel/iam/ioc/IamIoc/getTokenUpgradeJsonTokenParser()#io/corbel/iam/ioc/IamIoc/getUpgradeTokenVerifierProviders()
io/corbel/iam/ioc/IamIoc/getTokenUpgradeJsonTokenParser()#io/corbel/iam/ioc/IamIoc/getAudienceChecker()
io/corbel/iam/ioc/IamIoc/getTokenUpgradeJsonTokenParser()#net/oauth/jsontoken/JsonTokenParser/JsonTokenParser(net.oauth.jsontoken.discovery.VerifierProviders,net.oauth.jsontoken.Checker)
io/corbel/iam/ioc/IamIoc/getCorbelProvider()#io/corbel/iam/auth/provider/OAuthServerProvider/OAuthServerProvider(io.corbel.iam.repository.IdentityRepository)
io/corbel/iam/ioc/IamIoc/getAuthorizationService(io.corbel.iam.service.RefreshTokenService,io.corbel.lib.token.factory.TokenFactory,io.corbel.iam.service.ScopeService,io.corbel.iam.auth.rule.ScopesAuthorizationRule,io.corbel.iam.service.UserService,io.corbel.iam.service.EventsService,io.corbel.iam.service.DeviceService)#io/corbel/iam/ioc/IamIoc/getAuthorizationRules(io.corbel.iam.auth.rule.ScopesAuthorizationRule)
io/corbel/iam/ioc/IamIoc/getAuthorizationService(io.corbel.iam.service.RefreshTokenService,io.corbel.lib.token.factory.TokenFactory,io.corbel.iam.service.ScopeService,io.corbel.iam.auth.rule.ScopesAuthorizationRule,io.corbel.iam.service.UserService,io.corbel.iam.service.EventsService,io.corbel.iam.service.DeviceService)#io/corbel/iam/ioc/IamIoc/getJsonTokenParser()
io/corbel/iam/ioc/IamIoc/getAuthorizationService(io.corbel.iam.service.RefreshTokenService,io.corbel.lib.token.factory.TokenFactory,io.corbel.iam.service.ScopeService,io.corbel.iam.auth.rule.ScopesAuthorizationRule,io.corbel.iam.service.UserService,io.corbel.iam.service.EventsService,io.corbel.iam.service.DeviceService)#io/corbel/iam/ioc/IamIoc/getAuthorizationRequestContextFactory(io.corbel.iam.service.ScopeService)
io/corbel/iam/ioc/IamIoc/getAuthorizationService(io.corbel.iam.service.RefreshTokenService,io.corbel.lib.token.factory.TokenFactory,io.corbel.iam.service.ScopeService,io.corbel.iam.auth.rule.ScopesAuthorizationRule,io.corbel.iam.service.UserService,io.corbel.iam.service.EventsService,io.corbel.iam.service.DeviceService)#io/corbel/iam/ioc/IamIoc/getAuthorizationProviderFactory()
io/corbel/iam/ioc/IamIoc/getAuthorizationService(io.corbel.iam.service.RefreshTokenService,io.corbel.lib.token.factory.TokenFactory,io.corbel.iam.service.ScopeService,io.corbel.iam.auth.rule.ScopesAuthorizationRule,io.corbel.iam.service.UserService,io.corbel.iam.service.EventsService,io.corbel.iam.service.DeviceService)#io/corbel/iam/service/DefaultAuthorizationService/DefaultAuthorizationService(net.oauth.jsontoken.JsonTokenParser,java.util.List,io.corbel.lib.token.factory.TokenFactory,io.corbel.iam.auth.AuthorizationRequestContextFactory,io.corbel.iam.service.ScopeService,io.corbel.iam.auth.provider.AuthorizationProviderFactory,io.corbel.iam.service.RefreshTokenService,io.corbel.iam.repository.UserTokenRepository,io.corbel.iam.service.UserService,io.corbel.iam.service.EventsService,io.corbel.iam.service.DeviceService)
io/corbel/iam/ioc/IamIoc/getUserRepository()#io/corbel/iam/repository/decorator/LowerCaseDecorator/LowerCaseDecorator(io.corbel.iam.repository.UserRepository)
io/corbel/iam/ioc/IamIoc/getUpgradeTokenVerifierProviders()#io/corbel/iam/ioc/IamIoc/getTokenUpgradeVerifierProvider()
io/corbel/iam/ioc/IamIoc/getUpgradeTokenVerifierProviders()#net/oauth/jsontoken/discovery/VerifierProviders/setVerifierProvider(net.oauth.jsontoken.crypto.SignatureAlgorithm,net.oauth.jsontoken.discovery.VerifierProvider)
io/corbel/iam/ioc/IamIoc/getUpgradeTokenVerifierProviders()#net/oauth/jsontoken/discovery/VerifierProviders/VerifierProviders()
io/corbel/iam/ioc/IamIoc/getJsonTokenParser()#io/corbel/iam/ioc/IamIoc/getVerifierProviders()
io/corbel/iam/ioc/IamIoc/getJsonTokenParser()#io/corbel/iam/ioc/IamIoc/getAudienceChecker()
io/corbel/iam/ioc/IamIoc/getJsonTokenParser()#net/oauth/jsontoken/JsonTokenParser/JsonTokenParser(net.oauth.jsontoken.discovery.VerifierProviders,net.oauth.jsontoken.Checker)
io/corbel/iam/ioc/IamIoc/getGroupService()#io/corbel/iam/service/DefaultGroupService/DefaultGroupService(io.corbel.iam.repository.GroupRepository,io.corbel.iam.repository.ScopeRepository)
io/corbel/iam/ioc/IamIoc/getFacebookProvider()#io/corbel/iam/auth/provider/FacebookProvider/FacebookProvider(io.corbel.iam.repository.IdentityRepository)
io/corbel/iam/ioc/IamIoc/getAuthorizationJsonTokenParser()#io/corbel/iam/ioc/IamIoc/getVerifierProviders()
io/corbel/iam/ioc/IamIoc/getAuthorizationJsonTokenParser()#io/corbel/iam/ioc/IamIoc/getAudienceChecker()
io/corbel/iam/ioc/IamIoc/getAuthorizationJsonTokenParser()#net/oauth/jsontoken/JsonTokenParser/JsonTokenParser(net.oauth.jsontoken.discovery.VerifierProviders,net.oauth.jsontoken.Checker)
io/corbel/iam/ioc/IamIoc/getAudienceChecker()#net/oauth/signatures/SignedJsonAssertionAudienceChecker/SignedJsonAssertionAudienceChecker(java.lang.String)
io/corbel/iam/ioc/IamIoc/getAudienceChecker()#org/springframework/core/env/PropertyResolver/getProperty(java.lang.String)
io/corbel/iam/ioc/IamIoc/getClientResource(io.corbel.iam.service.ClientService,io.corbel.iam.service.DomainService)#io/corbel/iam/api/ClientResource/ClientResource(io.corbel.iam.service.ClientService,io.corbel.iam.service.DomainService)
io/corbel/iam/ioc/IamIoc/getCustomJsonParser()#com/fasterxml/jackson/databind/ObjectMapper/getFactory()
io/corbel/iam/ioc/IamIoc/getCustomJsonParser()#io/corbel/iam/ioc/IamIoc/getObjectMapper()
io/corbel/iam/ioc/IamIoc/getCustomJsonParser()#io/corbel/lib/queries/parser/CustomJsonParser/CustomJsonParser(com.fasterxml.jackson.core.JsonFactory)
io/corbel/iam/ioc/IamIoc/getUserService(io.corbel.iam.service.EventsService,io.corbel.iam.service.RefreshTokenService,io.corbel.iam.service.MailService,com.google.gson.Gson)#io/corbel/iam/ioc/IamIoc/getUserRepository()
io/corbel/iam/ioc/IamIoc/getUserService(io.corbel.iam.service.EventsService,io.corbel.iam.service.RefreshTokenService,io.corbel.iam.service.MailService,com.google.gson.Gson)#io/corbel/iam/service/DefaultUserService/DefaultUserService(io.corbel.iam.repository.UserRepository,io.corbel.iam.service.EventsService,io.corbel.iam.repository.UserTokenRepository,io.corbel.lib.ws.auth.repository.AuthorizationRulesRepository,io.corbel.iam.service.RefreshTokenService,io.corbel.iam.service.MailService,com.google.gson.Gson)
io/corbel/iam/ioc/IamIoc/getGroupIdGenerator()#io/corbel/lib/ws/digest/DigesterFactory/murmur3_32()
io/corbel/iam/ioc/IamIoc/getGroupIdGenerator()#io/corbel/iam/model/GroupIdGenerator/GroupIdGenerator(io.corbel.lib.ws.digest.Digester)
io/corbel/iam/ioc/IamIoc/getScopesAuthorizationRule(io.corbel.iam.service.ScopeService,io.corbel.iam.service.GroupService)#io/corbel/iam/auth/rule/ScopesAuthorizationRule/ScopesAuthorizationRule(io.corbel.iam.service.ScopeService,io.corbel.iam.service.GroupService)
io/corbel/iam/ioc/IamIoc/getDeviceDeletedEventHandler()#io/corbel/iam/eventbus/DeviceDeletedEventHandler/DeviceDeletedEventHandler(io.corbel.lib.ws.auth.repository.AuthorizationRulesRepository,io.corbel.iam.repository.UserTokenRepository)
io/corbel/iam/ioc/IamIoc/aggregationResultsFactory(com.google.gson.Gson)#io/corbel/lib/queries/request/JsonAggregationResultsFactory/JsonAggregationResultsFactory(com.google.gson.Gson)
io/corbel/iam/ioc/IamIoc/getIdentityIdGeneratorMongoEventListener()#io/corbel/iam/ioc/IamIoc/getIdentityIdGenerator()
io/corbel/iam/ioc/IamIoc/getIdentityIdGeneratorMongoEventListener()#io/corbel/lib/mongo/IdGeneratorMongoEventListener/IdGeneratorMongoEventListener(io.corbel.lib.mongo.IdGenerator,java.lang.Class)
io/corbel/iam/ioc/IamIoc/getUsernameResource(io.corbel.iam.service.UserService)#io/corbel/iam/api/UsernameResource/UsernameResource(io.corbel.iam.service.UserService)
io/corbel/iam/ioc/IamIoc/getIdentityService()#io/corbel/iam/service/DefaultIdentityService/DefaultIdentityService(io.corbel.iam.repository.IdentityRepository)
io/corbel/iam/ioc/IamIoc/getCaptchaService(io.corbel.iam.service.DomainService)#io/corbel/iam/service/DefaultCaptchaService/DefaultCaptchaService(io.corbel.iam.service.DomainService)
io/corbel/iam/ioc/IamIoc/getUserResource(io.corbel.iam.service.UserService,io.corbel.iam.service.DomainService,io.corbel.iam.service.IdentityService,io.corbel.iam.service.DeviceService,io.corbel.iam.service.CaptchaService,io.corbel.lib.queries.request.AggregationResultsFactory)#io/corbel/iam/api/UserResource/UserResource(io.corbel.iam.service.UserService,io.corbel.iam.service.DomainService,io.corbel.iam.service.IdentityService,io.corbel.iam.service.DeviceService,io.corbel.iam.service.CaptchaService,io.corbel.lib.queries.request.AggregationResultsFactory,java.time.Clock)
io/corbel/iam/ioc/IamIoc/getUserResource(io.corbel.iam.service.UserService,io.corbel.iam.service.DomainService,io.corbel.iam.service.IdentityService,io.corbel.iam.service.DeviceService,io.corbel.iam.service.CaptchaService,io.corbel.lib.queries.request.AggregationResultsFactory)#java/time/Clock/systemUTC()
io/corbel/iam/ioc/IamIoc/getObjectMapper()#com/fasterxml/jackson/databind/ObjectMapper/registerModule(com.fasterxml.jackson.databind.Module)
io/corbel/iam/ioc/IamIoc/getObjectMapper()#com/fasterxml/jackson/datatype/jsr310/JSR310Module/JSR310Module()
io/corbel/iam/ioc/IamIoc/getObjectMapper()#com/fasterxml/jackson/databind/ObjectMapper/ObjectMapper()
io/corbel/iam/ioc/IamIoc/getObjectMapper()#com/fasterxml/jackson/databind/ObjectMapper/configure(com.fasterxml.jackson.databind.DeserializationFeature,boolean)
io/corbel/iam/ioc/IamIoc/getIdentityIdGenerator()#io/corbel/iam/model/IdentityIdGenerator/IdentityIdGenerator()
io/corbel/iam/ioc/IamIoc/getAuthorizationProviderFactory()#io/corbel/iam/auth/provider/SpringAuthorizationProviderFactory/SpringAuthorizationProviderFactory()
io/corbel/iam/ioc/IamIoc/getDeviceIdGeneratorMongoEventListener()#io/corbel/iam/ioc/IamIoc/getDeviceIdGenerator()
io/corbel/iam/ioc/IamIoc/getDeviceIdGeneratorMongoEventListener()#io/corbel/lib/mongo/IdGeneratorMongoEventListener/IdGeneratorMongoEventListener(io.corbel.lib.mongo.IdGenerator,java.lang.Class)
io/corbel/resources/ioc/ResourcesIoc/matrixEncodingFilter()#io/corbel/lib/ws/encoding/MatrixEncodingRequestFilter/MatrixEncodingRequestFilter(java.lang.String)
io/corbel/resources/ioc/ResourcesIoc/getMaxPageSizeDefault()#org/springframework/core/env/PropertyResolver/getProperty(java.lang.String,java.lang.Class)
io/corbel/resources/ioc/ResourcesIoc/getLinksFilter(io.corbel.resources.href.LinkGenerator,io.corbel.resources.service.RelationSchemaService)#io/corbel/resources/href/LinksFilter/LinksFilter(io.corbel.resources.href.LinkGenerator,io.corbel.resources.service.RelationSchemaService)
io/corbel/resources/ioc/ResourcesIoc/getQueryParametersParser(io.corbel.lib.queries.parser.QueryParser,io.corbel.lib.queries.parser.AggregationParser,io.corbel.lib.queries.parser.SortParser,io.corbel.lib.queries.parser.PaginationParser,io.corbel.lib.queries.parser.SearchParser)#io/corbel/lib/queries/parser/QueryParametersParser/QueryParametersParser(io.corbel.lib.queries.parser.QueryParser,io.corbel.lib.queries.parser.AggregationParser,io.corbel.lib.queries.parser.SortParser,io.corbel.lib.queries.parser.PaginationParser,io.corbel.lib.queries.parser.SearchParser)
io/corbel/resources/ioc/ResourcesIoc/getSearchParser(com.fasterxml.jackson.databind.ObjectMapper)#io/corbel/lib/queries/parser/CustomSearchParser/CustomSearchParser(com.fasterxml.jackson.databind.ObjectMapper)
io/corbel/resources/ioc/ResourcesIoc/getResourcesService(io.corbel.resources.rem.service.RemService,io.corbel.rem.internal.RemEntityTypeResolver,io.corbel.lib.queries.parser.QueryParametersParser,io.corbel.eventbus.service.EventBus)#io/corbel/resources/ioc/ResourcesIoc/getMaxPageSizeDefault()
io/corbel/resources/ioc/ResourcesIoc/getResourcesService(io.corbel.resources.rem.service.RemService,io.corbel.rem.internal.RemEntityTypeResolver,io.corbel.lib.queries.parser.QueryParametersParser,io.corbel.eventbus.service.EventBus)#io/corbel/resources/ioc/ResourcesIoc/getPageSizeDefault()
io/corbel/resources/ioc/ResourcesIoc/getResourcesService(io.corbel.resources.rem.service.RemService,io.corbel.rem.internal.RemEntityTypeResolver,io.corbel.lib.queries.parser.QueryParametersParser,io.corbel.eventbus.service.EventBus)#io/corbel/resources/service/DefaultResourcesService/DefaultResourcesService(io.corbel.resources.rem.service.RemService,io.corbel.rem.internal.RemEntityTypeResolver,int,int,io.corbel.lib.queries.parser.QueryParametersParser,io.corbel.eventbus.service.EventBus)
io/corbel/resources/ioc/ResourcesIoc/relationRegistry()#io/corbel/rem/internal/InMemoryRelationRegistry/InMemoryRelationRegistry()
io/corbel/resources/ioc/ResourcesIoc/getPageSizeDefault()#org/springframework/core/env/PropertyResolver/getProperty(java.lang.String,java.lang.Class)
io/corbel/resources/ioc/ResourcesIoc/getAggregationParser(io.corbel.lib.queries.parser.CustomJsonParser)#io/corbel/lib/queries/parser/JacksonAggregationParser/JacksonAggregationParser(io.corbel.lib.queries.parser.CustomJsonParser)
io/corbel/resources/ioc/ResourcesIoc/getCustomJsonParser(com.fasterxml.jackson.databind.ObjectMapper)#com/fasterxml/jackson/databind/ObjectMapper/getFactory()
io/corbel/resources/ioc/ResourcesIoc/getCustomJsonParser(com.fasterxml.jackson.databind.ObjectMapper)#io/corbel/lib/queries/parser/CustomJsonParser/CustomJsonParser(com.fasterxml.jackson.core.JsonFactory)
io/corbel/resources/ioc/ResourcesIoc/getRemEntityTypeResolver()#io/corbel/rem/internal/DefaultRemEntityTypeResolver/DefaultRemEntityTypeResolver()
io/corbel/resources/ioc/ResourcesIoc/pluginInfoResource(io.corbel.resources.rem.plugin.PluginArtifactIdRegistry)#io/corbel/resources/api/PluginInfoResource/PluginInfoResource(io.corbel.resources.rem.plugin.PluginArtifactIdRegistry)
io/corbel/resources/ioc/ResourcesIoc/healthCheckRegistry()#io/corbel/rem/internal/InMemoryHealthCheckRegistry/InMemoryHealthCheckRegistry()
io/corbel/resources/ioc/ResourcesIoc/getQueryParser(io.corbel.lib.queries.parser.CustomJsonParser)#io/corbel/lib/queries/parser/JacksonQueryParser/JacksonQueryParser(io.corbel.lib.queries.parser.CustomJsonParser)
io/corbel/resources/ioc/ResourcesIoc/getLaunchMode()#java/util/Optional/orElse(T)
io/corbel/resources/ioc/ResourcesIoc/getLaunchMode()#java/util/Optional/ofNullable(T)
io/corbel/resources/ioc/ResourcesIoc/getLaunchMode()#java/util/Optional/map(java.util.function.Function)
io/corbel/resources/ioc/ResourcesIoc/getLaunchMode()#org/springframework/core/env/PropertyResolver/getProperty(java.lang.String)
io/corbel/resources/ioc/ResourcesIoc/getRemResource(io.corbel.resources.service.ResourcesService)#io/corbel/resources/api/RemResource/RemResource(io.corbel.resources.service.ResourcesService)
io/corbel/resources/ioc/ResourcesIoc/getPaginationParser()#io/corbel/lib/queries/parser/DefaultPaginationParser/DefaultPaginationParser()
io/corbel/resources/ioc/ResourcesIoc/pluginInfoRegistry()#io/corbel/rem/internal/InMemoryPluginArtifactIdRegistry/InMemoryPluginArtifactIdRegistry()
io/corbel/resources/ioc/ResourcesIoc/getLinksGenerator()#io/corbel/resources/href/DefaultLinkGenerator/DefaultLinkGenerator()
io/corbel/resources/ioc/ResourcesIoc/getRemRegistry()#io/corbel/rem/internal/InMemoryRemRegistry/InMemoryRemRegistry()
io/corbel/resources/ioc/ResourcesIoc/serviceLocator()#io/corbel/resources/rem/service/DefaultServiceLocator/DefaultServiceLocator()
io/corbel/resources/ioc/ResourcesIoc/cacheManager(org.springframework.core.env.Environment)#com/google/common/cache/CacheBuilder/newBuilder()
io/corbel/resources/ioc/ResourcesIoc/cacheManager(org.springframework.core.env.Environment)#java/util/Arrays/asList(T[])
io/corbel/resources/ioc/ResourcesIoc/cacheManager(org.springframework.core.env.Environment)#com/google/common/cache/Cache/asMap()
io/corbel/resources/ioc/ResourcesIoc/cacheManager(org.springframework.core.env.Environment)#org/springframework/cache/concurrent/ConcurrentMapCache/ConcurrentMapCache(java.lang.String,java.util.concurrent.ConcurrentMap,boolean)
io/corbel/resources/ioc/ResourcesIoc/cacheManager(org.springframework.core.env.Environment)#com/google/common/cache/CacheBuilder/build()
io/corbel/resources/ioc/ResourcesIoc/cacheManager(org.springframework.core.env.Environment)#org/springframework/cache/support/SimpleCacheManager/SimpleCacheManager()
io/corbel/resources/ioc/ResourcesIoc/cacheManager(org.springframework.core.env.Environment)#org/springframework/core/env/PropertyResolver/getProperty(java.lang.String,java.lang.Class)
io/corbel/resources/ioc/ResourcesIoc/cacheManager(org.springframework.core.env.Environment)#com/google/common/cache/CacheBuilder/expireAfterWrite(long,java.util.concurrent.TimeUnit)
io/corbel/resources/ioc/ResourcesIoc/cacheManager(org.springframework.core.env.Environment)#org/springframework/cache/support/SimpleCacheManager/setCaches(java.util.Collection)
io/corbel/resources/ioc/ResourcesIoc/getRemService(io.corbel.resources.rem.RemRegistry)#io/corbel/resources/service/DefaultRemService/DefaultRemService(io.corbel.resources.rem.RemRegistry)
io/corbel/resources/ioc/ResourcesIoc/getRelationSchemaService(io.corbel.resources.rem.plugin.RelationRegistry)#io/corbel/resources/service/DefaultRelationSchemaService/DefaultRelationSchemaService(io.corbel.resources.repository.RelationSchemaRepository,io.corbel.resources.rem.plugin.RelationRegistry)
io/corbel/resources/ioc/ResourcesIoc/getSortParser(io.corbel.lib.queries.parser.CustomJsonParser)#io/corbel/lib/queries/parser/JacksonSortParser/JacksonSortParser(io.corbel.lib.queries.parser.CustomJsonParser)
io/corbel/rem/internal/DefaultRemEntityTypeResolver/getEntityType(io.corbel.resources.rem.Rem)#io/corbel/resources/rem/Rem/getType()
io/corbel/resources/rem/request/builder/RequestParametersBuilder/params(javax.ws.rs.core.MultivaluedMap)#java/util/Map/forEach(java.util.function.BiConsumer)
io/corbel/resources/rem/request/builder/RequestParametersBuilder/params(javax.ws.rs.core.MultivaluedMap)#javax/ws/rs/core/MultivaluedHashMap/MultivaluedHashMap()
io/corbel/resources/rem/request/builder/RequestParametersBuilder/param(java.lang.String,java.lang.String)#javax/ws/rs/core/MultivaluedHashMap/MultivaluedHashMap()
io/corbel/resources/rem/request/builder/RequestParametersBuilder/param(java.lang.String,java.lang.String)#javax/ws/rs/core/MultivaluedMap/add(K,V)
io/corbel/resources/rem/request/builder/RequestParametersBuilder/headers(javax.ws.rs.core.MultivaluedMap)#java/util/Map/forEach(java.util.function.BiConsumer)
io/corbel/resources/rem/request/builder/RequestParametersBuilder/headers(javax.ws.rs.core.MultivaluedMap)#javax/ws/rs/core/MultivaluedHashMap/MultivaluedHashMap()
io/corbel/resources/rem/request/builder/RequestParametersBuilder/build()#io/corbel/resources/rem/request/RequestParametersImpl/RequestParametersImpl(E,io.corbel.lib.token.TokenInfo,java.lang.String,java.util.List,java.lang.Long,javax.ws.rs.core.MultivaluedMap,javax.ws.rs.core.MultivaluedMap)
io/corbel/resources/rem/request/builder/RequestParametersBuilder/header(java.lang.String,java.lang.String)#javax/ws/rs/core/MultivaluedHashMap/MultivaluedHashMap()
io/corbel/resources/rem/request/builder/RequestParametersBuilder/header(java.lang.String,java.lang.String)#javax/ws/rs/core/MultivaluedMap/add(K,V)
io/corbel/resources/rem/request/builder/RequestParametersBuilder/acceptedMediaType(org.springframework.http.MediaType)#java/util/ArrayList/ArrayList()
io/corbel/resources/rem/request/builder/RequestParametersBuilder/acceptedMediaType(org.springframework.http.MediaType)#java/util/List/add(E)
io/corbel/oauth/repository/MongoIndexes/ensureIndexes(org.springframework.data.mongodb.core.MongoOperations)#org/springframework/data/mongodb/core/MongoOperations/indexOps(java.lang.Class)
io/corbel/oauth/repository/MongoIndexes/ensureIndexes(org.springframework.data.mongodb.core.MongoOperations)#org/springframework/data/mongodb/core/IndexOperations/ensureIndex(org.springframework.data.mongodb.core.index.IndexDefinition)
io/corbel/oauth/repository/MongoIndexes/ensureIndexes(org.springframework.data.mongodb.core.MongoOperations)#io/corbel/lib/mongo/index/MongoIndex/background()
io/corbel/oauth/repository/MongoIndexes/ensureIndexes(org.springframework.data.mongodb.core.MongoOperations)#io/corbel/lib/mongo/index/MongoIndex/getIndexDefinition()
io/corbel/oauth/repository/MongoIndexes/ensureIndexes(org.springframework.data.mongodb.core.MongoOperations)#io/corbel/lib/mongo/index/MongoIndex/unique()
io/corbel/oauth/repository/MongoIndexes/ensureIndexes(org.springframework.data.mongodb.core.MongoOperations)#io/corbel/lib/mongo/index/MongoIndex/on(java.lang.String,org.springframework.data.domain.Sort.Direction)
io/corbel/oauth/repository/MongoIndexes/ensureIndexes(org.springframework.data.mongodb.core.MongoOperations)#io/corbel/lib/mongo/index/MongoIndex/MongoIndex()
io/corbel/oauth/repository/MongoIndexes/ensureIndexes(org.springframework.data.mongodb.core.MongoOperations)#org/slf4j/Logger/info(java.lang.String)
io/corbel/iam/model/TokenUpgradeGrant/hashCode()#java/util/Set/hashCode()
io/corbel/iam/model/TokenUpgradeGrant/equals(java.lang.Object)#java/util/Set/equals(java.lang.Object)
io/corbel/iam/model/TokenUpgradeGrant/equals(java.lang.Object)#java/lang/Object/getClass()
io/corbel/iam/auth/rule/VersionAuthorizationRuleTest/setUp()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/auth/rule/VersionAuthorizationRuleTest/setUp()#io/corbel/iam/model/Client/setVersion(java.lang.String)
io/corbel/iam/auth/rule/VersionAuthorizationRuleTest/setUp()#io/corbel/iam/model/Client/Client()
io/corbel/iam/auth/rule/VersionAuthorizationRuleTest/setUp()#io/corbel/iam/auth/AuthorizationRequestContext/getIssuerClient()
io/corbel/iam/auth/rule/VersionAuthorizationRuleTest/setUp()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/iam/auth/rule/VersionAuthorizationRuleTest/setUp()#org/mockito/Mockito/when(T)
io/corbel/iam/auth/rule/VersionAuthorizationRuleTest/setUp()#io/corbel/iam/auth/rule/VersionAuthorizationRule/VersionAuthorizationRule()
io/corbel/iam/auth/rule/VersionAuthorizationRuleTest/setUp()#io/corbel/iam/model/Entity/setId(java.lang.String)
io/corbel/iam/auth/rule/VersionAuthorizationRuleTest/testLimitVersion()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/auth/rule/VersionAuthorizationRuleTest/testLimitVersion()#org/mockito/Mockito/when(T)
io/corbel/iam/auth/rule/VersionAuthorizationRuleTest/testLimitVersion()#io/corbel/iam/auth/rule/VersionAuthorizationRule/process(io.corbel.iam.auth.AuthorizationRequestContext)
io/corbel/iam/auth/rule/VersionAuthorizationRuleTest/testLimitVersion()#io/corbel/iam/auth/AuthorizationRequestContext/hasVersion()
io/corbel/iam/auth/rule/VersionAuthorizationRuleTest/testLimitVersion()#io/corbel/iam/auth/AuthorizationRequestContext/getVersion()
io/corbel/iam/auth/rule/VersionAuthorizationRuleTest/testVersionWithCommas()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/auth/rule/VersionAuthorizationRuleTest/testVersionWithCommas()#org/mockito/Mockito/when(T)
io/corbel/iam/auth/rule/VersionAuthorizationRuleTest/testVersionWithCommas()#java/lang/Throwable/getMessage()
io/corbel/iam/auth/rule/VersionAuthorizationRuleTest/testVersionWithCommas()#io/corbel/iam/auth/rule/VersionAuthorizationRule/process(io.corbel.iam.auth.AuthorizationRequestContext)
io/corbel/iam/auth/rule/VersionAuthorizationRuleTest/testVersionWithCommas()#io/corbel/iam/utils/Message/getMessage(java.lang.Object[])
io/corbel/iam/auth/rule/VersionAuthorizationRuleTest/testVersionWithCommas()#io/corbel/iam/auth/AuthorizationRequestContext/hasVersion()
io/corbel/iam/auth/rule/VersionAuthorizationRuleTest/testVersionWithCommas()#org/junit/Assert/assertEquals(java.lang.Object,java.lang.Object)
io/corbel/iam/auth/rule/VersionAuthorizationRuleTest/testVersionWithCommas()#io/corbel/iam/auth/AuthorizationRequestContext/getVersion()
io/corbel/iam/auth/rule/VersionAuthorizationRuleTest/testHasNotVersion()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/auth/rule/VersionAuthorizationRuleTest/testHasNotVersion()#org/mockito/Mockito/when(T)
io/corbel/iam/auth/rule/VersionAuthorizationRuleTest/testHasNotVersion()#io/corbel/iam/auth/rule/VersionAuthorizationRule/process(io.corbel.iam.auth.AuthorizationRequestContext)
io/corbel/iam/auth/rule/VersionAuthorizationRuleTest/testHasNotVersion()#io/corbel/iam/auth/AuthorizationRequestContext/hasVersion()
io/corbel/iam/auth/rule/VersionAuthorizationRuleTest/testVersionWithLetters()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/auth/rule/VersionAuthorizationRuleTest/testVersionWithLetters()#org/mockito/Mockito/when(T)
io/corbel/iam/auth/rule/VersionAuthorizationRuleTest/testVersionWithLetters()#java/lang/Throwable/getMessage()
io/corbel/iam/auth/rule/VersionAuthorizationRuleTest/testVersionWithLetters()#io/corbel/iam/auth/rule/VersionAuthorizationRule/process(io.corbel.iam.auth.AuthorizationRequestContext)
io/corbel/iam/auth/rule/VersionAuthorizationRuleTest/testVersionWithLetters()#io/corbel/iam/utils/Message/getMessage(java.lang.Object[])
io/corbel/iam/auth/rule/VersionAuthorizationRuleTest/testVersionWithLetters()#io/corbel/iam/auth/AuthorizationRequestContext/hasVersion()
io/corbel/iam/auth/rule/VersionAuthorizationRuleTest/testVersionWithLetters()#org/junit/Assert/assertEquals(java.lang.Object,java.lang.Object)
io/corbel/iam/auth/rule/VersionAuthorizationRuleTest/testVersionWithLetters()#io/corbel/iam/auth/AuthorizationRequestContext/getVersion()
io/corbel/iam/auth/rule/VersionAuthorizationRuleTest/testBadLimitVersion()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/auth/rule/VersionAuthorizationRuleTest/testBadLimitVersion()#org/mockito/Mockito/when(T)
io/corbel/iam/auth/rule/VersionAuthorizationRuleTest/testBadLimitVersion()#java/lang/Throwable/getMessage()
io/corbel/iam/auth/rule/VersionAuthorizationRuleTest/testBadLimitVersion()#io/corbel/iam/auth/rule/VersionAuthorizationRule/process(io.corbel.iam.auth.AuthorizationRequestContext)
io/corbel/iam/auth/rule/VersionAuthorizationRuleTest/testBadLimitVersion()#io/corbel/iam/utils/Message/getMessage(java.lang.Object[])
io/corbel/iam/auth/rule/VersionAuthorizationRuleTest/testBadLimitVersion()#io/corbel/iam/auth/AuthorizationRequestContext/hasVersion()
io/corbel/iam/auth/rule/VersionAuthorizationRuleTest/testBadLimitVersion()#org/junit/Assert/assertEquals(java.lang.Object,java.lang.Object)
io/corbel/iam/auth/rule/VersionAuthorizationRuleTest/testBadLimitVersion()#io/corbel/iam/auth/AuthorizationRequestContext/getVersion()
io/corbel/iam/auth/rule/VersionAuthorizationRuleTest/testCorrectVersion()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/auth/rule/VersionAuthorizationRuleTest/testCorrectVersion()#org/mockito/Mockito/when(T)
io/corbel/iam/auth/rule/VersionAuthorizationRuleTest/testCorrectVersion()#io/corbel/iam/auth/rule/VersionAuthorizationRule/process(io.corbel.iam.auth.AuthorizationRequestContext)
io/corbel/iam/auth/rule/VersionAuthorizationRuleTest/testCorrectVersion()#io/corbel/iam/auth/AuthorizationRequestContext/hasVersion()
io/corbel/iam/auth/rule/VersionAuthorizationRuleTest/testCorrectVersion()#io/corbel/iam/auth/AuthorizationRequestContext/getVersion()
io/corbel/iam/auth/rule/VersionAuthorizationRuleTest/testBadVersion()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/auth/rule/VersionAuthorizationRuleTest/testBadVersion()#org/mockito/Mockito/when(T)
io/corbel/iam/auth/rule/VersionAuthorizationRuleTest/testBadVersion()#java/lang/Throwable/getMessage()
io/corbel/iam/auth/rule/VersionAuthorizationRuleTest/testBadVersion()#io/corbel/iam/auth/rule/VersionAuthorizationRule/process(io.corbel.iam.auth.AuthorizationRequestContext)
io/corbel/iam/auth/rule/VersionAuthorizationRuleTest/testBadVersion()#io/corbel/iam/utils/Message/getMessage(java.lang.Object[])
io/corbel/iam/auth/rule/VersionAuthorizationRuleTest/testBadVersion()#io/corbel/iam/auth/AuthorizationRequestContext/hasVersion()
io/corbel/iam/auth/rule/VersionAuthorizationRuleTest/testBadVersion()#org/junit/Assert/assertEquals(java.lang.Object,java.lang.Object)
io/corbel/iam/auth/rule/VersionAuthorizationRuleTest/testBadVersion()#io/corbel/iam/auth/AuthorizationRequestContext/getVersion()
io/corbel/iam/repository/DomainRepositoryImpl/addDefaultScopes(java.lang.String,java.lang.String[])#io/corbel/iam/repository/DomainRepositoryImpl/addScopesByField(java.lang.String,java.lang.String,java.lang.String[])
io/corbel/iam/repository/DomainRepositoryImpl/addPublicScopes(java.lang.String,java.lang.String[])#io/corbel/iam/repository/DomainRepositoryImpl/addScopesByField(java.lang.String,java.lang.String,java.lang.String[])
io/corbel/iam/repository/DomainRepositoryImpl/addScopesByField(java.lang.String,java.lang.String,java.lang.String[])#org/springframework/data/mongodb/core/MongoOperations/updateFirst(org.springframework.data.mongodb.core.query.Query,org.springframework.data.mongodb.core.query.Update,java.lang.Class)
io/corbel/iam/repository/DomainRepositoryImpl/addScopesByField(java.lang.String,java.lang.String,java.lang.String[])#org/springframework/data/mongodb/core/query/Update/addToSet(java.lang.String,java.lang.Object)
io/corbel/iam/repository/DomainRepositoryImpl/addScopesByField(java.lang.String,java.lang.String,java.lang.String[])#org/springframework/data/mongodb/core/query/Criteria/is(java.lang.Object)
io/corbel/iam/repository/DomainRepositoryImpl/addScopesByField(java.lang.String,java.lang.String,java.lang.String[])#org/springframework/data/mongodb/core/query/Criteria/where(java.lang.String)
io/corbel/iam/repository/DomainRepositoryImpl/addScopesByField(java.lang.String,java.lang.String,java.lang.String[])#java/util/Arrays/asList(T[])
io/corbel/iam/repository/DomainRepositoryImpl/addScopesByField(java.lang.String,java.lang.String,java.lang.String[])#org/springframework/data/mongodb/core/query/Query/query(org.springframework.data.mongodb.core.query.CriteriaDefinition)
io/corbel/iam/repository/DomainRepositoryImpl/addScopesByField(java.lang.String,java.lang.String,java.lang.String[])#com/mongodb/BasicDBObject/BasicDBObject(java.lang.String,java.lang.Object)
io/corbel/iam/repository/DomainRepositoryImpl/addScopesByField(java.lang.String,java.lang.String,java.lang.String[])#com/mongodb/BasicDBList/BasicDBList()
io/corbel/iam/repository/DomainRepositoryImpl/addScopesByField(java.lang.String,java.lang.String,java.lang.String[])#org/springframework/data/mongodb/core/query/Update/Update()
io/corbel/iam/repository/DomainRepositoryImpl/addScopesByField(java.lang.String,java.lang.String,java.lang.String[])#java/util/ArrayList/addAll(java.util.Collection)
io/corbel/iam/repository/DomainRepositoryImpl/removeScopesByField(java.lang.String,java.lang.String,java.lang.String[])#org/springframework/data/mongodb/core/MongoOperations/updateFirst(org.springframework.data.mongodb.core.query.Query,org.springframework.data.mongodb.core.query.Update,java.lang.Class)
io/corbel/iam/repository/DomainRepositoryImpl/removeScopesByField(java.lang.String,java.lang.String,java.lang.String[])#org/springframework/data/mongodb/core/query/Criteria/is(java.lang.Object)
io/corbel/iam/repository/DomainRepositoryImpl/removeScopesByField(java.lang.String,java.lang.String,java.lang.String[])#org/springframework/data/mongodb/core/query/Criteria/where(java.lang.String)
io/corbel/iam/repository/DomainRepositoryImpl/removeScopesByField(java.lang.String,java.lang.String,java.lang.String[])#org/springframework/data/mongodb/core/query/Query/query(org.springframework.data.mongodb.core.query.CriteriaDefinition)
io/corbel/iam/repository/DomainRepositoryImpl/removeScopesByField(java.lang.String,java.lang.String,java.lang.String[])#org/springframework/data/mongodb/core/query/Update/Update()
io/corbel/iam/repository/DomainRepositoryImpl/removeScopesByField(java.lang.String,java.lang.String,java.lang.String[])#org/springframework/data/mongodb/core/query/Update/pullAll(java.lang.String,java.lang.Object[])
io/corbel/iam/repository/DomainRepositoryImpl/removePublicScopes(java.lang.String,java.lang.String[])#io/corbel/iam/repository/DomainRepositoryImpl/removeScopesByField(java.lang.String,java.lang.String,java.lang.String[])
io/corbel/iam/repository/DomainRepositoryImpl/removeDefaultScopes(java.lang.String,java.lang.String[])#io/corbel/iam/repository/DomainRepositoryImpl/removeScopesByField(java.lang.String,java.lang.String,java.lang.String[])
io/corbel/resources/rem/model/ResourceUri/isTypeWildcard()#java/lang/String/equals(java.lang.Object)
io/corbel/resources/rem/model/ResourceUri/equals(java.lang.Object)#java/lang/String/equals(java.lang.Object)
io/corbel/resources/rem/model/ResourceUri/equals(java.lang.Object)#java/lang/Object/getClass()
io/corbel/resources/rem/model/ResourceUri/hashCode()#java/lang/String/hashCode()
io/corbel/resources/rem/model/ResourceUri/isRelationWildcard()#java/lang/String/equals(java.lang.Object)
io/corbel/resources/rem/search/ElasticSearchResourceQueryBuilder/isNegativeQuery(io.corbel.lib.queries.request.QueryNode)#io/corbel/lib/queries/request/QueryLiteral/getLiteral()
io/corbel/resources/rem/search/ElasticSearchResourceQueryBuilder/isNegativeQuery(io.corbel.lib.queries.request.QueryNode)#io/corbel/lib/queries/request/QueryNode/getValue()
io/corbel/resources/rem/search/ElasticSearchResourceQueryBuilder/isNegativeQuery(io.corbel.lib.queries.request.QueryNode)#io/corbel/lib/queries/request/QueryNode/getOperator()
io/corbel/resources/rem/search/ElasticSearchResourceQueryBuilder/getBoolQueryBuilder(io.corbel.lib.queries.request.ResourceQuery,org.elasticsearch.index.query.QueryStringQueryBuilder)#io/corbel/resources/rem/search/ElasticSearchResourceQueryBuilder/isNegativeQuery(io.corbel.lib.queries.request.QueryNode)
io/corbel/resources/rem/search/ElasticSearchResourceQueryBuilder/getBoolQueryBuilder(io.corbel.lib.queries.request.ResourceQuery,org.elasticsearch.index.query.QueryStringQueryBuilder)#org/elasticsearch/index/query/BoolQueryBuilder/mustNot(org.elasticsearch.index.query.QueryBuilder)
io/corbel/resources/rem/search/ElasticSearchResourceQueryBuilder/getBoolQueryBuilder(io.corbel.lib.queries.request.ResourceQuery,org.elasticsearch.index.query.QueryStringQueryBuilder)#org/elasticsearch/index/query/BoolQueryBuilder/must(org.elasticsearch.index.query.QueryBuilder)
io/corbel/resources/rem/search/ElasticSearchResourceQueryBuilder/getBoolQueryBuilder(io.corbel.lib.queries.request.ResourceQuery,org.elasticsearch.index.query.QueryStringQueryBuilder)#org/elasticsearch/index/query/QueryBuilders/boolQuery()
io/corbel/resources/rem/search/ElasticSearchResourceQueryBuilder/getBoolQueryBuilder(io.corbel.lib.queries.request.ResourceQuery,org.elasticsearch.index.query.QueryStringQueryBuilder)#io/corbel/resources/rem/search/ElasticSearchResourceQueryBuilder/getFilterBuilder(io.corbel.lib.queries.request.QueryNode)
io/corbel/resources/rem/search/ElasticSearchResourceQueryBuilder/getBoolQueryBuilder(io.corbel.lib.queries.request.ResourceQuery,org.elasticsearch.index.query.QueryStringQueryBuilder)#org/elasticsearch/index/query/BoolQueryBuilder/filter(org.elasticsearch.index.query.QueryBuilder)
io/corbel/resources/rem/search/ElasticSearchResourceQueryBuilder/build(java.lang.String,java.util.List)#io/corbel/resources/rem/search/ElasticSearchResourceQueryBuilder/getBoolQueryBuilder(io.corbel.lib.queries.request.ResourceQuery,org.elasticsearch.index.query.QueryStringQueryBuilder)
io/corbel/resources/rem/search/ElasticSearchResourceQueryBuilder/build(java.lang.String,java.util.List)#org/elasticsearch/index/query/QueryBuilders/boolQuery()
io/corbel/resources/rem/search/ElasticSearchResourceQueryBuilder/build(java.lang.String,java.util.List)#java/util/List/isEmpty()
io/corbel/resources/rem/search/ElasticSearchResourceQueryBuilder/build(java.lang.String,java.util.List)#org/elasticsearch/index/query/BoolQueryBuilder/should(org.elasticsearch.index.query.QueryBuilder)
io/corbel/resources/rem/search/ElasticSearchResourceQueryBuilder/build(java.lang.String,java.util.List)#org/elasticsearch/index/query/QueryBuilders/queryStringQuery(java.lang.String)
io/corbel/resources/rem/search/ElasticSearchResourceQueryBuilder/getFilterBuilder(io.corbel.lib.queries.request.QueryNode)#org/elasticsearch/index/query/RangeQueryBuilder/gte(java.lang.Object)
io/corbel/resources/rem/search/ElasticSearchResourceQueryBuilder/getFilterBuilder(io.corbel.lib.queries.request.QueryNode)#org/elasticsearch/ElasticsearchException/ElasticsearchException(java.lang.String,java.lang.Object[])
io/corbel/resources/rem/search/ElasticSearchResourceQueryBuilder/getFilterBuilder(io.corbel.lib.queries.request.QueryNode)#org/elasticsearch/index/query/QueryBuilders/termQuery(java.lang.String,java.lang.Object)
io/corbel/resources/rem/search/ElasticSearchResourceQueryBuilder/getFilterBuilder(io.corbel.lib.queries.request.QueryNode)#org/elasticsearch/index/query/RangeQueryBuilder/lte(java.lang.Object)
io/corbel/resources/rem/search/ElasticSearchResourceQueryBuilder/getFilterBuilder(io.corbel.lib.queries.request.QueryNode)#io/corbel/lib/queries/request/QueryLiteral/getLiteral()
io/corbel/resources/rem/search/ElasticSearchResourceQueryBuilder/getFilterBuilder(io.corbel.lib.queries.request.QueryNode)#org/elasticsearch/index/query/RangeQueryBuilder/lt(java.lang.Object)
io/corbel/resources/rem/search/ElasticSearchResourceQueryBuilder/getFilterBuilder(io.corbel.lib.queries.request.QueryNode)#org/elasticsearch/index/query/QueryBuilders/existsQuery(java.lang.String)
io/corbel/resources/rem/search/ElasticSearchResourceQueryBuilder/getFilterBuilder(io.corbel.lib.queries.request.QueryNode)#org/elasticsearch/index/query/RangeQueryBuilder/gt(java.lang.Object)
io/corbel/resources/rem/search/ElasticSearchResourceQueryBuilder/getFilterBuilder(io.corbel.lib.queries.request.QueryNode)#io/corbel/lib/queries/request/QueryNode/getField()
io/corbel/resources/rem/search/ElasticSearchResourceQueryBuilder/getFilterBuilder(io.corbel.lib.queries.request.QueryNode)#io/corbel/lib/queries/request/QueryNode/getOperator()
io/corbel/resources/rem/search/ElasticSearchResourceQueryBuilder/getFilterBuilder(io.corbel.lib.queries.request.QueryNode)#io/corbel/resources/rem/search/ElasticSearchResourceQueryBuilder/getValues(java.util.List)
io/corbel/resources/rem/search/ElasticSearchResourceQueryBuilder/getFilterBuilder(io.corbel.lib.queries.request.QueryNode)#org/elasticsearch/index/query/QueryBuilders/termsQuery(java.lang.String,java.lang.Object[])
io/corbel/resources/rem/search/ElasticSearchResourceQueryBuilder/getFilterBuilder(io.corbel.lib.queries.request.QueryNode)#io/corbel/lib/queries/request/QueryNode/getValue()
io/corbel/resources/rem/search/ElasticSearchResourceQueryBuilder/getFilterBuilder(io.corbel.lib.queries.request.QueryNode)#org/elasticsearch/index/query/QueryBuilders/rangeQuery(java.lang.String)
io/corbel/resources/rem/search/ElasticSearchResourceQueryBuilder/build(java.lang.String,io.corbel.lib.queries.request.ResourceQuery)#java/util/Collections/singletonList(T)
io/corbel/resources/rem/search/ElasticSearchResourceQueryBuilder/build(java.lang.String,io.corbel.lib.queries.request.ResourceQuery)#java/util/Collections/emptyList()
io/corbel/resources/rem/search/ElasticSearchResourceQueryBuilder/build(java.lang.String,io.corbel.lib.queries.request.ResourceQuery)#io/corbel/resources/rem/search/ElasticSearchResourceQueryBuilder/build(java.lang.String,io.corbel.lib.queries.request.ResourceQuery)
io/corbel/resources/rem/search/ElasticSearchResourceQueryBuilder/getValues(java.util.List)#java/util/stream/Stream/map(java.util.function.Function)
io/corbel/resources/rem/search/ElasticSearchResourceQueryBuilder/getValues(java.util.List)#java/util/stream/Stream/collect(java.util.stream.Collector)
io/corbel/resources/rem/search/ElasticSearchResourceQueryBuilder/getValues(java.util.List)#java/util/List/toArray()
io/corbel/resources/rem/search/ElasticSearchResourceQueryBuilder/getValues(java.util.List)#java/util/Collection/stream()
io/corbel/resources/rem/search/ElasticSearchResourceQueryBuilder/getValues(java.util.List)#java/util/stream/Collectors/toList()
io/corbel/iam/eventbus/DeviceDeletedEventHandlerTest/setup()#org/mockito/Mockito/reset(T[])
io/corbel/iam/eventbus/DeviceDeletedEventHandlerTest/setup()#io/corbel/iam/eventbus/DeviceDeletedEventHandler/DeviceDeletedEventHandler(io.corbel.lib.ws.auth.repository.AuthorizationRulesRepository,io.corbel.iam.repository.UserTokenRepository)
io/corbel/iam/eventbus/DeviceDeletedEventHandlerTest/testGetEventType()#io/corbel/iam/eventbus/DeviceDeletedEventHandler/getEventType()
io/corbel/iam/eventbus/DeviceDeletedEventHandlerTest/testGetEventType()#org/fest/assertions/api/Assertions/assertThat(T)
io/corbel/iam/eventbus/DeviceDeletedEventHandlerTest/testGetEventType()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/iam/eventbus/DeviceDeletedEventHandlerTest/testHandleNotDeleteEvent()#org/mockito/Mockito/verifyNoMoreInteractions(java.lang.Object[])
io/corbel/iam/eventbus/DeviceDeletedEventHandlerTest/testHandleNotDeleteEvent()#io/corbel/iam/eventbus/DeviceDeletedEventHandler/handle(io.corbel.event.DeviceEvent)
io/corbel/iam/eventbus/DeviceDeletedEventHandlerTest/testHandleNotDeleteEvent()#io/corbel/event/DeviceEvent/DeviceEvent(io.corbel.event.DeviceEvent.Type,java.lang.String,java.lang.String,java.lang.String)
io/corbel/iam/eventbus/DeviceDeletedEventHandlerTest/testHandleDeleteEvent()#io/corbel/event/DeviceEvent/getDeviceId()
io/corbel/iam/eventbus/DeviceDeletedEventHandlerTest/testHandleDeleteEvent()#io/corbel/iam/model/UserToken/getToken()
io/corbel/iam/eventbus/DeviceDeletedEventHandlerTest/testHandleDeleteEvent()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/eventbus/DeviceDeletedEventHandlerTest/testHandleDeleteEvent()#io/corbel/lib/ws/auth/repository/AuthorizationRulesRepository/deleteByToken(java.lang.String)
io/corbel/iam/eventbus/DeviceDeletedEventHandlerTest/testHandleDeleteEvent()#io/corbel/iam/eventbus/DeviceDeletedEventHandler/handle(io.corbel.event.DeviceEvent)
io/corbel/iam/eventbus/DeviceDeletedEventHandlerTest/testHandleDeleteEvent()#java/util/Arrays/asList(T[])
io/corbel/iam/eventbus/DeviceDeletedEventHandlerTest/testHandleDeleteEvent()#io/corbel/iam/repository/UserTokenRepository/findByDeviceId(java.lang.String)
io/corbel/iam/eventbus/DeviceDeletedEventHandlerTest/testHandleDeleteEvent()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/iam/eventbus/DeviceDeletedEventHandlerTest/testHandleDeleteEvent()#org/mockito/Mockito/when(T)
io/corbel/iam/eventbus/DeviceDeletedEventHandlerTest/testHandleDeleteEvent()#io/corbel/event/DeviceEvent/getType()
io/corbel/iam/eventbus/DeviceDeletedEventHandlerTest/testHandleDeleteEvent()#org/springframework/data/repository/CrudRepository/delete(ID)
io/corbel/iam/eventbus/DeviceDeletedEventHandlerTest/testHandleDeleteEvent()#org/mockito/Mockito/verifyNoMoreInteractions(java.lang.Object[])
io/corbel/iam/eventbus/DeviceDeletedEventHandlerTest/testHandleDeleteEvent()#org/mockito/Mockito/verify(T)
io/corbel/iam/eventbus/DomainDeletedEventHandler/handle(io.corbel.event.DomainDeletedEvent)#io/corbel/eventbus/EventWithSpecificDomain/getDomain()
io/corbel/iam/eventbus/DomainDeletedEventHandler/handle(io.corbel.event.DomainDeletedEvent)#io/corbel/iam/repository/ClientRepositoryCustom/deleteByDomain(java.lang.String)
io/corbel/iam/eventbus/DomainDeletedEventHandler/handle(io.corbel.event.DomainDeletedEvent)#io/corbel/iam/repository/UserRepositoryCustom/deleteByDomain(java.lang.String)
io/corbel/oauth/filter/InMemoryFilterRegistry/filter(java.lang.String,java.lang.String,java.lang.String,java.lang.String,javax.ws.rs.core.MultivaluedMap)#io/corbel/oauth/filter/AuthFilter/filter(java.lang.String,java.lang.String,java.lang.String,javax.ws.rs.core.MultivaluedMap)
io/corbel/oauth/filter/InMemoryFilterRegistry/filter(java.lang.String,java.lang.String,java.lang.String,java.lang.String,javax.ws.rs.core.MultivaluedMap)#io/corbel/oauth/filter/AuthFilter/getDomain()
io/corbel/oauth/filter/InMemoryFilterRegistry/filter(java.lang.String,java.lang.String,java.lang.String,java.lang.String,javax.ws.rs.core.MultivaluedMap)#java/lang/String/equals(java.lang.Object)
io/corbel/oauth/filter/InMemoryFilterRegistry/registerFilter(io.corbel.oauth.filter.AuthFilter)#java/util/Set/add(E)
io/corbel/rem/internal/InMemoryRemRegistry/UriPatternRegistryEntry/compareTo(io.corbel.rem.internal.InMemoryRemRegistry.UriPatternRegistryEntry)#java/util/SortedSet/first()
io/corbel/rem/internal/InMemoryRemRegistry/UriPatternRegistryEntry/compareTo(io.corbel.rem.internal.InMemoryRemRegistry.UriPatternRegistryEntry)#java/util/regex/Pattern/pattern()
io/corbel/rem/internal/InMemoryRemRegistry/UriPatternRegistryEntry/compareTo(io.corbel.rem.internal.InMemoryRemRegistry.UriPatternRegistryEntry)#java/util/regex/Matcher/matches()
io/corbel/rem/internal/InMemoryRemRegistry/UriPatternRegistryEntry/compareTo(io.corbel.rem.internal.InMemoryRemRegistry.UriPatternRegistryEntry)#java/util/Set/isEmpty()
io/corbel/rem/internal/InMemoryRemRegistry/UriPatternRegistryEntry/compareTo(io.corbel.rem.internal.InMemoryRemRegistry.UriPatternRegistryEntry)#java/util/regex/Pattern/matcher(java.lang.CharSequence)
io/corbel/rem/internal/InMemoryRemRegistry/UriPatternRegistryEntry/compareTo(io.corbel.rem.internal.InMemoryRemRegistry.UriPatternRegistryEntry)#io/corbel/rem/internal/InMemoryRemRegistry/MediaTypeRegistryEntry/compareTo(io.corbel.rem.internal.InMemoryRemRegistry.MediaTypeRegistryEntry)
io/corbel/rem/internal/InMemoryRemRegistry/UriPatternRegistryEntry/matches(java.lang.String)#java/util/regex/Matcher/matches()
io/corbel/rem/internal/InMemoryRemRegistry/UriPatternRegistryEntry/matches(java.lang.String)#java/util/regex/Pattern/matcher(java.lang.CharSequence)
io/corbel/rem/internal/InMemoryRemRegistry/UriPatternRegistryEntry/add(io.corbel.resources.rem.Rem,org.springframework.http.MediaType,org.springframework.http.HttpMethod[])#java/util/Map/get(java.lang.Object)
io/corbel/rem/internal/InMemoryRemRegistry/UriPatternRegistryEntry/add(io.corbel.resources.rem.Rem,org.springframework.http.MediaType,org.springframework.http.HttpMethod[])#io/corbel/rem/internal/InMemoryRemRegistry/MediaTypeRegistryEntry/add(io.corbel.resources.rem.Rem,org.springframework.http.HttpMethod[])
io/corbel/rem/internal/InMemoryRemRegistry/UriPatternRegistryEntry/add(io.corbel.resources.rem.Rem,org.springframework.http.MediaType,org.springframework.http.HttpMethod[])#java/util/Set/add(E)
io/corbel/rem/internal/InMemoryRemRegistry/UriPatternRegistryEntry/add(io.corbel.resources.rem.Rem,org.springframework.http.MediaType,org.springframework.http.HttpMethod[])#io/corbel/rem/internal/InMemoryRemRegistry/MediaTypeRegistryEntry/MediaTypeRegistryEntry(org.springframework.http.MediaType)
io/corbel/rem/internal/InMemoryRemRegistry/UriPatternRegistryEntry/add(io.corbel.resources.rem.Rem,org.springframework.http.MediaType,org.springframework.http.HttpMethod[])#java/util/Map/put(K,V)
io/corbel/rem/internal/InMemoryRemRegistry/UriPatternRegistryEntry/removeAndCheckIfEmpty(java.lang.Class,org.springframework.http.MediaType)#java/util/stream/Stream/collect(java.util.stream.Collector)
io/corbel/rem/internal/InMemoryRemRegistry/UriPatternRegistryEntry/removeAndCheckIfEmpty(java.lang.Class,org.springframework.http.MediaType)#java/util/stream/Stream/filter(java.util.function.Predicate)
io/corbel/rem/internal/InMemoryRemRegistry/UriPatternRegistryEntry/removeAndCheckIfEmpty(java.lang.Class,org.springframework.http.MediaType)#java/util/Set/isEmpty()
io/corbel/rem/internal/InMemoryRemRegistry/UriPatternRegistryEntry/removeAndCheckIfEmpty(java.lang.Class,org.springframework.http.MediaType)#java/util/Map/entrySet()
io/corbel/rem/internal/InMemoryRemRegistry/UriPatternRegistryEntry/removeAndCheckIfEmpty(java.lang.Class,org.springframework.http.MediaType)#java/lang/Iterable/forEach(java.util.function.Consumer)
io/corbel/rem/internal/InMemoryRemRegistry/UriPatternRegistryEntry/removeAndCheckIfEmpty(java.lang.Class,org.springframework.http.MediaType)#java/util/Collection/stream()
io/corbel/rem/internal/InMemoryRemRegistry/UriPatternRegistryEntry/removeAndCheckIfEmpty(java.lang.Class,org.springframework.http.MediaType)#java/util/stream/Collectors/toList()
io/corbel/rem/internal/InMemoryRemRegistry/UriPatternRegistryEntry/get(org.springframework.http.MediaType)#java/util/stream/Stream/collect(java.util.stream.Collector)
io/corbel/rem/internal/InMemoryRemRegistry/UriPatternRegistryEntry/get(org.springframework.http.MediaType)#java/util/stream/Stream/filter(java.util.function.Predicate)
io/corbel/rem/internal/InMemoryRemRegistry/UriPatternRegistryEntry/get(org.springframework.http.MediaType)#java/util/Collection/stream()
io/corbel/rem/internal/InMemoryRemRegistry/UriPatternRegistryEntry/get(org.springframework.http.MediaType)#java/util/stream/Collectors/toList()
io/corbel/iam/model/IdentityIdGenerator/generateId(io.corbel.iam.model.Identity)#io/corbel/iam/model/Identity/getOauthService()
io/corbel/iam/model/IdentityIdGenerator/generateId(io.corbel.iam.model.Identity)#com/google/common/base/Joiner/join(java.lang.Object,java.lang.Object,java.lang.Object[])
io/corbel/iam/model/IdentityIdGenerator/generateId(io.corbel.iam.model.Identity)#io/corbel/iam/model/Identity/getDomain()
io/corbel/iam/model/IdentityIdGenerator/generateId(io.corbel.iam.model.Identity)#io/corbel/iam/model/Identity/getUserId()
io/corbel/iam/model/IdentityIdGenerator/generateId(io.corbel.iam.model.Identity)#com/google/common/base/Joiner/on(java.lang.String)
io/corbel/iam/model/Device/setType(java.lang.String)#java/util/Optional/orElse(T)
io/corbel/iam/model/Device/setType(java.lang.String)#java/util/Optional/ofNullable(T)
io/corbel/iam/model/Device/setType(java.lang.String)#java/util/Optional/map(java.util.function.Function)
io/corbel/oauth/service/DefaultMailValidationService/sendMailValidation(io.corbel.oauth.model.Client,java.lang.String,java.lang.String)#io/corbel/oauth/mail/EmailValidationConfiguration/isValidationEnabled()
io/corbel/oauth/service/DefaultMailValidationService/sendMailValidation(io.corbel.oauth.model.Client,java.lang.String,java.lang.String)#com/google/common/collect/ImmutableMap/of(K,V)
io/corbel/oauth/service/DefaultMailValidationService/sendMailValidation(io.corbel.oauth.model.Client,java.lang.String,java.lang.String)#io/corbel/oauth/model/Client/getValidationNotificationId()
io/corbel/oauth/service/DefaultMailValidationService/sendMailValidation(io.corbel.oauth.model.Client,java.lang.String,java.lang.String)#io/corbel/oauth/service/DefaultMailValidationService/createEmailValidationToken(java.lang.String,java.lang.String,java.lang.String)
io/corbel/oauth/service/DefaultMailValidationService/sendMailValidation(io.corbel.oauth.model.Client,java.lang.String,java.lang.String)#java/util/Optional/ofNullable(T)
io/corbel/oauth/service/DefaultMailValidationService/sendMailValidation(io.corbel.oauth.model.Client,java.lang.String,java.lang.String)#java/util/Optional/of(T)
io/corbel/oauth/service/DefaultMailValidationService/sendMailValidation(io.corbel.oauth.model.Client,java.lang.String,java.lang.String)#io/corbel/oauth/model/Client/getDomain()
io/corbel/oauth/service/DefaultMailValidationService/sendMailValidation(io.corbel.oauth.model.Client,java.lang.String,java.lang.String)#java/lang/String/replace(java.lang.CharSequence,java.lang.CharSequence)
io/corbel/oauth/service/DefaultMailValidationService/sendMailValidation(io.corbel.oauth.model.Client,java.lang.String,java.lang.String)#io/corbel/oauth/model/Client/getName()
io/corbel/oauth/service/DefaultMailValidationService/sendMailValidation(io.corbel.oauth.model.Client,java.lang.String,java.lang.String)#io/corbel/oauth/service/SendNotificationService/sendNotification(java.lang.String,java.lang.String,java.lang.String,java.util.Map)
io/corbel/oauth/service/DefaultMailValidationService/sendMailValidation(io.corbel.oauth.model.Client,java.lang.String,java.lang.String)#io/corbel/oauth/model/Client/getValidationUrl()
io/corbel/oauth/service/DefaultMailValidationService/sendMailValidation(io.corbel.oauth.model.Client,java.lang.String,java.lang.String)#io/corbel/oauth/mail/NotificationConfiguration/getClientUrl()
io/corbel/oauth/service/DefaultMailValidationService/sendMailValidation(io.corbel.oauth.model.Client,java.lang.String,java.lang.String)#java/util/Optional/orElse(T)
io/corbel/oauth/service/DefaultMailValidationService/sendMailValidation(io.corbel.oauth.model.Client,java.lang.String,java.lang.String)#io/corbel/oauth/model/Client/isValidationEnabled()
io/corbel/oauth/service/DefaultMailValidationService/sendMailValidation(io.corbel.oauth.model.Client,java.lang.String,java.lang.String)#io/corbel/oauth/mail/NotificationConfiguration/getNotificationId()
io/corbel/oauth/service/DefaultMailValidationService/createEmailValidationToken(java.lang.String,java.lang.String,java.lang.String)#io/corbel/lib/token/TokenInfo/Builder/setState(java.lang.String)
io/corbel/oauth/service/DefaultMailValidationService/createEmailValidationToken(java.lang.String,java.lang.String,java.lang.String)#io/corbel/lib/token/TokenGrant/getAccessToken()
io/corbel/oauth/service/DefaultMailValidationService/createEmailValidationToken(java.lang.String,java.lang.String,java.lang.String)#io/corbel/lib/token/TokenInfo/Builder/build()
io/corbel/oauth/service/DefaultMailValidationService/createEmailValidationToken(java.lang.String,java.lang.String,java.lang.String)#io/corbel/lib/token/TokenInfo/Builder/setOneUseToken(boolean)
io/corbel/oauth/service/DefaultMailValidationService/createEmailValidationToken(java.lang.String,java.lang.String,java.lang.String)#io/corbel/lib/token/factory/TokenFactory/createToken(io.corbel.lib.token.TokenInfo,long,java.lang.String[])
io/corbel/oauth/service/DefaultMailValidationService/createEmailValidationToken(java.lang.String,java.lang.String,java.lang.String)#io/corbel/oauth/mail/NotificationConfiguration/getTokenDurationInSeconds()
io/corbel/oauth/service/DefaultMailValidationService/createEmailValidationToken(java.lang.String,java.lang.String,java.lang.String)#io/corbel/lib/token/TokenInfo/Builder/setClientId(java.lang.String)
io/corbel/oauth/service/DefaultMailValidationService/createEmailValidationToken(java.lang.String,java.lang.String,java.lang.String)#io/corbel/lib/token/TokenInfo/newBuilder()
io/corbel/oauth/service/DefaultMailValidationService/createEmailValidationToken(java.lang.String,java.lang.String,java.lang.String)#io/corbel/lib/token/TokenInfo/Builder/setUserId(java.lang.String)
io/corbel/oauth/service/DefaultMailValidationService/createEmailValidationToken(java.lang.String,java.lang.String,java.lang.String)#io/corbel/lib/token/TokenInfo/Builder/setType(io.corbel.lib.token.model.TokenType)
io/corbel/notifications/api/NotificationsResource/deleteTemplate(java.lang.String,java.lang.String)#io/corbel/notifications/repository/NotificationRepository/deleteByDomainAndName(java.lang.String,java.lang.String)
io/corbel/notifications/api/NotificationsResource/deleteTemplate(java.lang.String,java.lang.String)#javax/ws/rs/core/Response/ResponseBuilder/build()
io/corbel/notifications/api/NotificationsResource/deleteTemplate(java.lang.String,java.lang.String)#javax/ws/rs/core/Response/status(javax.ws.rs.core.Response.Status)
io/corbel/notifications/api/NotificationsResource/getTemplate(java.lang.String,java.lang.String)#io/corbel/notifications/api/NotificationsErrorResponseFactory/getInstance()
io/corbel/notifications/api/NotificationsResource/getTemplate(java.lang.String,java.lang.String)#javax/ws/rs/core/Response/ResponseBuilder/build()
io/corbel/notifications/api/NotificationsResource/getTemplate(java.lang.String,java.lang.String)#javax/ws/rs/core/Response/ok()
io/corbel/notifications/api/NotificationsResource/getTemplate(java.lang.String,java.lang.String)#io/corbel/notifications/repository/NotificationRepository/findByDomainAndName(java.lang.String,java.lang.String)
io/corbel/notifications/api/NotificationsResource/getTemplate(java.lang.String,java.lang.String)#javax/ws/rs/core/Response/ResponseBuilder/entity(java.lang.Object)
io/corbel/notifications/api/NotificationsResource/getTemplate(java.lang.String,java.lang.String)#io/corbel/lib/ws/api/error/ErrorResponseFactory/notFound()
io/corbel/notifications/api/NotificationsResource/getTemplate(java.lang.String,java.lang.String)#javax/ws/rs/core/Response/ResponseBuilder/type(java.lang.String)
io/corbel/notifications/api/NotificationsResource/getTemplate(java.lang.String,java.lang.String)#io/corbel/notifications/model/NotificationTemplateApi/NotificationTemplateApi(io.corbel.notifications.model.NotificationTemplate)
io/corbel/notifications/api/NotificationsResource/updateTemplate(io.corbel.notifications.model.NotificationTemplateApi,java.lang.String,java.lang.String)#io/corbel/notifications/model/NotificationTemplate/NotificationTemplate(java.lang.String,io.corbel.notifications.model.NotificationTemplateApi)
io/corbel/notifications/api/NotificationsResource/updateTemplate(io.corbel.notifications.model.NotificationTemplateApi,java.lang.String,java.lang.String)#javax/ws/rs/core/Response/ResponseBuilder/build()
io/corbel/notifications/api/NotificationsResource/updateTemplate(io.corbel.notifications.model.NotificationTemplateApi,java.lang.String,java.lang.String)#io/corbel/notifications/model/NotificationTemplate/updateTemplate(io.corbel.notifications.model.NotificationTemplate)
io/corbel/notifications/api/NotificationsResource/updateTemplate(io.corbel.notifications.model.NotificationTemplateApi,java.lang.String,java.lang.String)#io/corbel/notifications/model/NotificationTemplateApi/setId(java.lang.String)
io/corbel/notifications/api/NotificationsResource/updateTemplate(io.corbel.notifications.model.NotificationTemplateApi,java.lang.String,java.lang.String)#io/corbel/notifications/repository/NotificationRepository/findByDomainAndName(java.lang.String,java.lang.String)
io/corbel/notifications/api/NotificationsResource/updateTemplate(io.corbel.notifications.model.NotificationTemplateApi,java.lang.String,java.lang.String)#io/corbel/lib/ws/api/error/ErrorResponseFactory/notFound()
io/corbel/notifications/api/NotificationsResource/updateTemplate(io.corbel.notifications.model.NotificationTemplateApi,java.lang.String,java.lang.String)#org/springframework/data/repository/CrudRepository/save(S)
io/corbel/notifications/api/NotificationsResource/updateTemplate(io.corbel.notifications.model.NotificationTemplateApi,java.lang.String,java.lang.String)#io/corbel/lib/ws/api/error/ErrorResponseFactory/getInstance()
io/corbel/notifications/api/NotificationsResource/updateTemplate(io.corbel.notifications.model.NotificationTemplateApi,java.lang.String,java.lang.String)#javax/ws/rs/core/Response/status(javax.ws.rs.core.Response.Status)
io/corbel/notifications/api/NotificationsResource/postNotification(io.corbel.notifications.model.Notification,java.lang.String)#io/corbel/notifications/service/SenderNotificationsService/sendNotification(java.lang.String,java.lang.String,java.util.Map,java.lang.String[])
io/corbel/notifications/api/NotificationsResource/postNotification(io.corbel.notifications.model.Notification,java.lang.String)#io/corbel/notifications/model/Notification/getNotificationId()
io/corbel/notifications/api/NotificationsResource/postNotification(io.corbel.notifications.model.Notification,java.lang.String)#javax/ws/rs/core/Response/ResponseBuilder/build()
io/corbel/notifications/api/NotificationsResource/postNotification(io.corbel.notifications.model.Notification,java.lang.String)#javax/ws/rs/core/Response/ok()
io/corbel/notifications/api/NotificationsResource/postNotification(io.corbel.notifications.model.Notification,java.lang.String)#io/corbel/notifications/model/Notification/getProperties()
io/corbel/notifications/api/NotificationsResource/postNotification(io.corbel.notifications.model.Notification,java.lang.String)#io/corbel/notifications/model/Notification/getRecipient()
io/corbel/notifications/api/NotificationsResource/getTemplates(io.corbel.lib.queries.jaxrs.QueryParameters)#java/util/stream/Stream/map(java.util.function.Function)
io/corbel/notifications/api/NotificationsResource/getTemplates(io.corbel.lib.queries.jaxrs.QueryParameters)#javax/ws/rs/core/Response/ResponseBuilder/build()
io/corbel/notifications/api/NotificationsResource/getTemplates(io.corbel.lib.queries.jaxrs.QueryParameters)#java/util/stream/Stream/collect(java.util.stream.Collector)
io/corbel/notifications/api/NotificationsResource/getTemplates(io.corbel.lib.queries.jaxrs.QueryParameters)#javax/ws/rs/core/Response/ok()
io/corbel/notifications/api/NotificationsResource/getTemplates(io.corbel.lib.queries.jaxrs.QueryParameters)#java/util/Optional/orElse(T)
io/corbel/notifications/api/NotificationsResource/getTemplates(io.corbel.lib.queries.jaxrs.QueryParameters)#io/corbel/lib/queries/jaxrs/QueryParameters/getSort()
io/corbel/notifications/api/NotificationsResource/getTemplates(io.corbel.lib.queries.jaxrs.QueryParameters)#javax/ws/rs/core/Response/ResponseBuilder/entity(java.lang.Object)
io/corbel/notifications/api/NotificationsResource/getTemplates(io.corbel.lib.queries.jaxrs.QueryParameters)#javax/ws/rs/core/Response/ResponseBuilder/type(java.lang.String)
io/corbel/notifications/api/NotificationsResource/getTemplates(io.corbel.lib.queries.jaxrs.QueryParameters)#io/corbel/lib/queries/mongo/repository/GenericFindRepository/find(io.corbel.lib.queries.request.ResourceQuery,io.corbel.lib.queries.request.Pagination,io.corbel.lib.queries.request.Sort)
io/corbel/notifications/api/NotificationsResource/getTemplates(io.corbel.lib.queries.jaxrs.QueryParameters)#io/corbel/lib/queries/jaxrs/QueryParameters/getQuery()
io/corbel/notifications/api/NotificationsResource/getTemplates(io.corbel.lib.queries.jaxrs.QueryParameters)#io/corbel/lib/queries/jaxrs/QueryParameters/getPagination()
io/corbel/notifications/api/NotificationsResource/getTemplates(io.corbel.lib.queries.jaxrs.QueryParameters)#java/util/Collection/stream()
io/corbel/notifications/api/NotificationsResource/getTemplates(io.corbel.lib.queries.jaxrs.QueryParameters)#java/util/stream/Collectors/toList()
io/corbel/notifications/api/NotificationsResource/postTemplate(io.corbel.notifications.model.NotificationTemplateApi,java.lang.String,javax.ws.rs.core.UriInfo)#io/corbel/notifications/model/NotificationTemplate/getName()
io/corbel/notifications/api/NotificationsResource/postTemplate(io.corbel.notifications.model.NotificationTemplateApi,java.lang.String,javax.ws.rs.core.UriInfo)#io/corbel/notifications/model/NotificationTemplate/NotificationTemplate(java.lang.String,io.corbel.notifications.model.NotificationTemplateApi)
io/corbel/notifications/api/NotificationsResource/postTemplate(io.corbel.notifications.model.NotificationTemplateApi,java.lang.String,javax.ws.rs.core.UriInfo)#javax/ws/rs/core/UriBuilder/build(java.lang.Object[])
io/corbel/notifications/api/NotificationsResource/postTemplate(io.corbel.notifications.model.NotificationTemplateApi,java.lang.String,javax.ws.rs.core.UriInfo)#javax/ws/rs/core/UriInfo/getAbsolutePathBuilder()
io/corbel/notifications/api/NotificationsResource/postTemplate(io.corbel.notifications.model.NotificationTemplateApi,java.lang.String,javax.ws.rs.core.UriInfo)#org/springframework/data/repository/CrudRepository/save(S)
io/corbel/notifications/api/NotificationsResource/postTemplate(io.corbel.notifications.model.NotificationTemplateApi,java.lang.String,javax.ws.rs.core.UriInfo)#javax/ws/rs/core/UriBuilder/path(java.lang.String)
io/corbel/notifications/api/NotificationsResource/postTemplate(io.corbel.notifications.model.NotificationTemplateApi,java.lang.String,javax.ws.rs.core.UriInfo)#javax/ws/rs/core/Response/created(java.net.URI)
io/corbel/notifications/api/NotificationsResource/postTemplate(io.corbel.notifications.model.NotificationTemplateApi,java.lang.String,javax.ws.rs.core.UriInfo)#javax/ws/rs/core/Response/ResponseBuilder/build()
io/corbel/oauth/api/TokenResource/tokenHasClientIdAndValidSecret(io.corbel.lib.token.reader.TokenReader,io.corbel.oauth.model.Client,java.lang.String)#io/corbel/lib/token/reader/TokenReader/getInfo()
io/corbel/oauth/api/TokenResource/tokenHasClientIdAndValidSecret(io.corbel.lib.token.reader.TokenReader,io.corbel.oauth.model.Client,java.lang.String)#org/apache/commons/lang3/StringUtils/equals(java.lang.CharSequence,java.lang.CharSequence)
io/corbel/oauth/api/TokenResource/tokenHasClientIdAndValidSecret(io.corbel.lib.token.reader.TokenReader,io.corbel.oauth.model.Client,java.lang.String)#io/corbel/oauth/model/Client/getName()
io/corbel/oauth/api/TokenResource/tokenHasClientIdAndValidSecret(io.corbel.lib.token.reader.TokenReader,io.corbel.oauth.model.Client,java.lang.String)#io/corbel/oauth/service/ClientService/verifyClientSecret(java.lang.String,io.corbel.oauth.model.Client)
io/corbel/oauth/api/TokenResource/tokenHasClientIdAndValidSecret(io.corbel.lib.token.reader.TokenReader,io.corbel.oauth.model.Client,java.lang.String)#io/corbel/lib/token/TokenInfo/getClientId()
io/corbel/oauth/api/TokenResource/isNotSupportedGrantType(java.lang.String)#java/lang/String/equals(java.lang.Object)
io/corbel/oauth/api/TokenResource/accessToken(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)#io/corbel/lib/ws/api/error/ErrorResponseFactory/missingParameter(java.lang.String)
io/corbel/oauth/api/TokenResource/accessToken(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)#javax/ws/rs/core/Response/ok()
io/corbel/oauth/api/TokenResource/accessToken(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)#io/corbel/oauth/service/ClientService/findByName(java.lang.String)
io/corbel/oauth/api/TokenResource/accessToken(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)#io/corbel/lib/token/TokenInfo/Builder/build()
io/corbel/oauth/api/TokenResource/accessToken(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)#io/corbel/lib/ws/model/Error/Error(java.lang.String,java.lang.String)
io/corbel/oauth/api/TokenResource/accessToken(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)#io/corbel/lib/ws/api/error/ErrorResponseFactory/badRequest(io.corbel.lib.ws.model.Error)
io/corbel/oauth/api/TokenResource/accessToken(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)#io/corbel/lib/token/factory/TokenFactory/createToken(io.corbel.lib.token.TokenInfo,long,java.lang.String[])
io/corbel/oauth/api/TokenResource/accessToken(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)#io/corbel/lib/ws/api/error/ErrorResponseFactory/unauthorized(java.lang.String)
io/corbel/oauth/api/TokenResource/accessToken(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)#io/corbel/lib/token/parser/TokenParser/parseAndVerify(java.lang.String)
io/corbel/oauth/api/TokenResource/accessToken(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)#io/corbel/lib/ws/api/error/ErrorResponseFactory/unauthorized()
io/corbel/oauth/api/TokenResource/accessToken(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)#io/corbel/lib/ws/api/error/ErrorResponseFactory/getInstance()
io/corbel/oauth/api/TokenResource/accessToken(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)#io/corbel/lib/token/TokenInfo/newBuilder()
io/corbel/oauth/api/TokenResource/accessToken(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)#org/slf4j/Logger/debug(java.lang.String,java.lang.Throwable)
io/corbel/oauth/api/TokenResource/accessToken(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)#io/corbel/lib/token/TokenInfo/Builder/setUserId(java.lang.String)
io/corbel/oauth/api/TokenResource/accessToken(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)#io/corbel/lib/token/TokenInfo/Builder/setType(io.corbel.lib.token.model.TokenType)
io/corbel/oauth/api/TokenResource/accessToken(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)#org/slf4j/Logger/debug(java.lang.String)
io/corbel/oauth/api/TokenResource/accessToken(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)#io/corbel/lib/token/TokenInfo/Builder/setClientId(java.lang.String)
io/corbel/oauth/api/TokenResource/accessToken(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)#io/corbel/oauth/api/TokenResource/tokenHasClientIdAndValidSecret(io.corbel.lib.token.reader.TokenReader,io.corbel.oauth.model.Client,java.lang.String)
io/corbel/oauth/api/TokenResource/accessToken(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)#org/apache/commons/lang3/BooleanUtils/isTrue(java.lang.Boolean)
io/corbel/oauth/api/TokenResource/accessToken(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)#io/corbel/lib/token/TokenInfo/getTokenType()
io/corbel/oauth/api/TokenResource/accessToken(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)#io/corbel/lib/token/reader/TokenReader/getInfo()
io/corbel/oauth/api/TokenResource/accessToken(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)#org/apache/commons/lang3/StringUtils/isBlank(java.lang.CharSequence)
io/corbel/oauth/api/TokenResource/accessToken(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)#javax/ws/rs/core/Response/ResponseBuilder/build()
io/corbel/oauth/api/TokenResource/accessToken(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)#io/corbel/lib/token/TokenInfo/getUserId()
io/corbel/oauth/api/TokenResource/accessToken(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)#io/corbel/lib/token/TokenInfo/getClientId()
io/corbel/oauth/api/TokenResource/accessToken(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)#io/corbel/oauth/api/TokenResource/userHasValidatedEmail(io.corbel.lib.token.reader.TokenReader)
io/corbel/oauth/api/TokenResource/accessToken(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)#java/util/Optional/orElseThrow(java.util.function.Supplier)
io/corbel/oauth/api/TokenResource/accessToken(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)#io/corbel/oauth/api/TokenResource/isNotSupportedGrantType(java.lang.String)
io/corbel/oauth/api/TokenResource/accessToken(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)#io/corbel/oauth/token/TokenExpireTime/getTokenExpireTimeFromResponseType(io.corbel.lib.token.model.TokenType)
io/corbel/oauth/api/TokenResource/accessToken(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)#io/corbel/oauth/model/Client/getDomain()
io/corbel/oauth/api/TokenResource/accessToken(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)#javax/ws/rs/core/Response/ResponseBuilder/entity(java.lang.Object)
io/corbel/oauth/api/TokenResource/accessToken(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)#javax/ws/rs/core/Response/ResponseBuilder/type(javax.ws.rs.core.MediaType)
io/corbel/oauth/api/TokenResource/accessToken(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)#io/corbel/lib/token/TokenInfo/Builder/setDomainId(java.lang.String)
io/corbel/oauth/api/TokenResource/userHasValidatedEmail(io.corbel.lib.token.reader.TokenReader)#io/corbel/lib/token/reader/TokenReader/getInfo()
io/corbel/oauth/api/TokenResource/userHasValidatedEmail(io.corbel.lib.token.reader.TokenReader)#io/corbel/lib/token/TokenInfo/getUserId()
io/corbel/oauth/api/TokenResource/userHasValidatedEmail(io.corbel.lib.token.reader.TokenReader)#org/springframework/data/repository/CrudRepository/findOne(ID)
io/corbel/oauth/api/TokenResource/userHasValidatedEmail(io.corbel.lib.token.reader.TokenReader)#io/corbel/oauth/model/User/isEmailValidated()
io/corbel/iam/service/DefaultDomainServiceTest/testNullScopes()#org/fest/assertions/api/Assertions/assertThat(boolean)
io/corbel/iam/service/DefaultDomainServiceTest/testNullScopes()#io/corbel/iam/model/Domain/getScopes()
io/corbel/iam/service/DefaultDomainServiceTest/testNullScopes()#org/springframework/data/repository/CrudRepository/findOne(ID)
io/corbel/iam/service/DefaultDomainServiceTest/testNullScopes()#java/util/Arrays/asList(T[])
io/corbel/iam/service/DefaultDomainServiceTest/testNullScopes()#com/google/common/collect/Sets/newHashSet(E[])
io/corbel/iam/service/DefaultDomainServiceTest/testNullScopes()#io/corbel/iam/service/DefaultDomainService/scopesAllowedInDomain(java.util.Set,io.corbel.iam.model.Domain)
io/corbel/iam/service/DefaultDomainServiceTest/testNullScopes()#io/corbel/iam/service/DefaultScopeService/expandScopes(java.util.Collection)
io/corbel/iam/service/DefaultDomainServiceTest/testNullScopes()#java/util/HashSet/HashSet(java.util.Collection)
io/corbel/iam/service/DefaultDomainServiceTest/testNullScopes()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/service/DefaultDomainServiceTest/testNullScopes()#org/fest/assertions/api/BooleanAssert/isTrue()
io/corbel/iam/service/DefaultDomainServiceTest/testNullScopes()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/iam/service/DefaultDomainServiceTest/testNullScopes()#org/mockito/Mockito/when(T)
io/corbel/iam/service/DefaultDomainServiceTest/testNotAllowedSomeScopes()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/service/DefaultDomainServiceTest/testNotAllowedSomeScopes()#org/fest/assertions/api/BooleanAssert/isFalse()
io/corbel/iam/service/DefaultDomainServiceTest/testNotAllowedSomeScopes()#org/fest/assertions/api/Assertions/assertThat(boolean)
io/corbel/iam/service/DefaultDomainServiceTest/testNotAllowedSomeScopes()#io/corbel/iam/model/Domain/getScopes()
io/corbel/iam/service/DefaultDomainServiceTest/testNotAllowedSomeScopes()#org/springframework/data/repository/CrudRepository/findOne(ID)
io/corbel/iam/service/DefaultDomainServiceTest/testNotAllowedSomeScopes()#java/util/Arrays/asList(T[])
io/corbel/iam/service/DefaultDomainServiceTest/testNotAllowedSomeScopes()#com/google/common/collect/Sets/newHashSet(E[])
io/corbel/iam/service/DefaultDomainServiceTest/testNotAllowedSomeScopes()#io/corbel/iam/service/DefaultDomainService/scopesAllowedInDomain(java.util.Set,io.corbel.iam.model.Domain)
io/corbel/iam/service/DefaultDomainServiceTest/testNotAllowedSomeScopes()#io/corbel/iam/service/DefaultScopeService/expandScopes(java.util.Collection)
io/corbel/iam/service/DefaultDomainServiceTest/testNotAllowedSomeScopes()#java/util/HashSet/HashSet(java.util.Collection)
io/corbel/iam/service/DefaultDomainServiceTest/testNotAllowedSomeScopes()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/iam/service/DefaultDomainServiceTest/testNotAllowedSomeScopes()#org/mockito/Mockito/when(T)
io/corbel/iam/service/DefaultDomainServiceTest/testUpdate()#io/corbel/iam/service/DefaultDomainService/update(io.corbel.iam.model.Domain)
io/corbel/iam/service/DefaultDomainServiceTest/testUpdate()#org/mockito/Mockito/verify(T)
io/corbel/iam/service/DefaultDomainServiceTest/testUpdate()#io/corbel/lib/mongo/repository/PartialUpdateRepository/patch(E,java.lang.String[])
io/corbel/iam/service/DefaultDomainServiceTest/testDelete()#io/corbel/iam/model/Entity/getId()
io/corbel/iam/service/DefaultDomainServiceTest/testDelete()#io/corbel/iam/service/EventsService/sendDomainDeletedEvent(java.lang.String)
io/corbel/iam/service/DefaultDomainServiceTest/testDelete()#io/corbel/iam/service/EventsService/sendUpdateDomainPublicScopesEvent(java.lang.String)
io/corbel/iam/service/DefaultDomainServiceTest/testDelete()#io/corbel/iam/service/DefaultDomainService/delete(java.lang.String)
io/corbel/iam/service/DefaultDomainServiceTest/testDelete()#org/springframework/data/repository/CrudRepository/delete(ID)
io/corbel/iam/service/DefaultDomainServiceTest/testDelete()#org/mockito/Mockito/verifyNoMoreInteractions(java.lang.Object[])
io/corbel/iam/service/DefaultDomainServiceTest/testDelete()#org/mockito/Mockito/verify(T)
io/corbel/iam/service/DefaultDomainServiceTest/testOAuthServiceNotAllowed()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/service/DefaultDomainServiceTest/testOAuthServiceNotAllowed()#org/fest/assertions/api/Assertions/assertThat(boolean)
io/corbel/iam/service/DefaultDomainServiceTest/testOAuthServiceNotAllowed()#org/springframework/data/repository/CrudRepository/findOne(ID)
io/corbel/iam/service/DefaultDomainServiceTest/testOAuthServiceNotAllowed()#io/corbel/iam/service/DefaultDomainService/oAuthServiceAllowedInDomain(java.lang.String,io.corbel.iam.model.Domain)
io/corbel/iam/service/DefaultDomainServiceTest/testOAuthServiceNotAllowed()#java/util/HashMap/get(java.lang.Object)
io/corbel/iam/service/DefaultDomainServiceTest/testOAuthServiceNotAllowed()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/iam/service/DefaultDomainServiceTest/testOAuthServiceNotAllowed()#org/mockito/Mockito/when(T)
io/corbel/iam/service/DefaultDomainServiceTest/testOAuthServiceNotAllowed()#io/corbel/iam/model/Domain/getAuthConfigurations()
io/corbel/iam/service/DefaultDomainServiceTest/testOAuthServiceNotAllowed()#org/fest/assertions/api/BooleanAssert/isEqualTo(boolean)
io/corbel/iam/service/DefaultDomainServiceTest/testNotAllowedScopes()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/service/DefaultDomainServiceTest/testNotAllowedScopes()#org/fest/assertions/api/BooleanAssert/isFalse()
io/corbel/iam/service/DefaultDomainServiceTest/testNotAllowedScopes()#org/fest/assertions/api/Assertions/assertThat(boolean)
io/corbel/iam/service/DefaultDomainServiceTest/testNotAllowedScopes()#io/corbel/iam/model/Domain/getScopes()
io/corbel/iam/service/DefaultDomainServiceTest/testNotAllowedScopes()#org/springframework/data/repository/CrudRepository/findOne(ID)
io/corbel/iam/service/DefaultDomainServiceTest/testNotAllowedScopes()#java/util/Arrays/asList(T[])
io/corbel/iam/service/DefaultDomainServiceTest/testNotAllowedScopes()#com/google/common/collect/Sets/newHashSet(E[])
io/corbel/iam/service/DefaultDomainServiceTest/testNotAllowedScopes()#io/corbel/iam/service/DefaultDomainService/scopesAllowedInDomain(java.util.Set,io.corbel.iam.model.Domain)
io/corbel/iam/service/DefaultDomainServiceTest/testNotAllowedScopes()#io/corbel/iam/service/DefaultScopeService/expandScopes(java.util.Collection)
io/corbel/iam/service/DefaultDomainServiceTest/testNotAllowedScopes()#java/util/HashSet/HashSet(java.util.Collection)
io/corbel/iam/service/DefaultDomainServiceTest/testNotAllowedScopes()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/iam/service/DefaultDomainServiceTest/testNotAllowedScopes()#org/mockito/Mockito/when(T)
io/corbel/iam/service/DefaultDomainServiceTest/testOAuthServiceAllowed()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/service/DefaultDomainServiceTest/testOAuthServiceAllowed()#org/fest/assertions/api/Assertions/assertThat(boolean)
io/corbel/iam/service/DefaultDomainServiceTest/testOAuthServiceAllowed()#java/util/HashMap/HashMap()
io/corbel/iam/service/DefaultDomainServiceTest/testOAuthServiceAllowed()#io/corbel/iam/service/DefaultDomainService/oAuthServiceAllowedInDomain(java.lang.String,io.corbel.iam.model.Domain)
io/corbel/iam/service/DefaultDomainServiceTest/testOAuthServiceAllowed()#java/util/HashMap/get(java.lang.Object)
io/corbel/iam/service/DefaultDomainServiceTest/testOAuthServiceAllowed()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/iam/service/DefaultDomainServiceTest/testOAuthServiceAllowed()#org/mockito/Mockito/when(T)
io/corbel/iam/service/DefaultDomainServiceTest/testOAuthServiceAllowed()#io/corbel/iam/model/Domain/getAuthConfigurations()
io/corbel/iam/service/DefaultDomainServiceTest/testOAuthServiceAllowed()#org/fest/assertions/api/BooleanAssert/isEqualTo(boolean)
io/corbel/iam/service/DefaultDomainServiceTest/testEmptyScopes()#org/fest/assertions/api/Assertions/assertThat(boolean)
io/corbel/iam/service/DefaultDomainServiceTest/testEmptyScopes()#io/corbel/iam/model/Domain/getScopes()
io/corbel/iam/service/DefaultDomainServiceTest/testEmptyScopes()#com/google/common/collect/Sets/newHashSet()
io/corbel/iam/service/DefaultDomainServiceTest/testEmptyScopes()#org/springframework/data/repository/CrudRepository/findOne(ID)
io/corbel/iam/service/DefaultDomainServiceTest/testEmptyScopes()#java/util/Arrays/asList(T[])
io/corbel/iam/service/DefaultDomainServiceTest/testEmptyScopes()#com/google/common/collect/Sets/newHashSet(E[])
io/corbel/iam/service/DefaultDomainServiceTest/testEmptyScopes()#io/corbel/iam/service/DefaultDomainService/scopesAllowedInDomain(java.util.Set,io.corbel.iam.model.Domain)
io/corbel/iam/service/DefaultDomainServiceTest/testEmptyScopes()#io/corbel/iam/service/DefaultScopeService/expandScopes(java.util.Collection)
io/corbel/iam/service/DefaultDomainServiceTest/testEmptyScopes()#java/util/HashSet/HashSet(java.util.Collection)
io/corbel/iam/service/DefaultDomainServiceTest/testEmptyScopes()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/service/DefaultDomainServiceTest/testEmptyScopes()#org/fest/assertions/api/BooleanAssert/isTrue()
io/corbel/iam/service/DefaultDomainServiceTest/testEmptyScopes()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/iam/service/DefaultDomainServiceTest/testEmptyScopes()#org/mockito/Mockito/when(T)
io/corbel/iam/service/DefaultDomainServiceTest/testCreate()#io/corbel/iam/model/Entity/getId()
io/corbel/iam/service/DefaultDomainServiceTest/testCreate()#org/springframework/data/mongodb/repository/MongoRepository/insert(S)
io/corbel/iam/service/DefaultDomainServiceTest/testCreate()#org/mockito/ArgumentCaptor/getValue()
io/corbel/iam/service/DefaultDomainServiceTest/testCreate()#io/corbel/iam/model/Entity/setId(java.lang.String)
io/corbel/iam/service/DefaultDomainServiceTest/testCreate()#io/corbel/iam/model/Domain/Domain()
io/corbel/iam/service/DefaultDomainServiceTest/testCreate()#org/mockito/ArgumentCaptor/capture()
io/corbel/iam/service/DefaultDomainServiceTest/testCreate()#io/corbel/iam/service/DefaultDomainService/insert(io.corbel.iam.model.Domain)
io/corbel/iam/service/DefaultDomainServiceTest/testCreate()#org/junit/Assert/assertEquals(java.lang.Object,java.lang.Object)
io/corbel/iam/service/DefaultDomainServiceTest/testCreate()#org/mockito/ArgumentCaptor/forClass(java.lang.Class)
io/corbel/iam/service/DefaultDomainServiceTest/testCreate()#org/mockito/Mockito/verify(T)
io/corbel/iam/service/DefaultDomainServiceTest/setup()#io/corbel/lib/queries/request/JsonAggregationResultsFactory/JsonAggregationResultsFactory()
io/corbel/iam/service/DefaultDomainServiceTest/setup()#io/corbel/iam/service/DefaultDomainService/DefaultDomainService(io.corbel.iam.repository.DomainRepository,io.corbel.iam.service.ScopeService,io.corbel.iam.service.EventsService,io.corbel.lib.queries.request.AggregationResultsFactory)
io/corbel/iam/service/DefaultDomainServiceTest/setup()#io/corbel/iam/model/Entity/getId()
io/corbel/iam/service/DefaultDomainServiceTest/setup()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/service/DefaultDomainServiceTest/setup()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/iam/service/DefaultDomainServiceTest/setup()#org/mockito/Mockito/when(T)
io/corbel/iam/service/DefaultDomainServiceTest/testNotExistScopes()#org/mockito/Matchers/anySet()
io/corbel/iam/service/DefaultDomainServiceTest/testNotExistScopes()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/service/DefaultDomainServiceTest/testNotExistScopes()#org/fest/assertions/api/BooleanAssert/isFalse()
io/corbel/iam/service/DefaultDomainServiceTest/testNotExistScopes()#org/fest/assertions/api/Assertions/assertThat(boolean)
io/corbel/iam/service/DefaultDomainServiceTest/testNotExistScopes()#io/corbel/iam/model/Domain/getScopes()
io/corbel/iam/service/DefaultDomainServiceTest/testNotExistScopes()#org/mockito/stubbing/OngoingStubbing/thenThrow(java.lang.Class<? extends java.lang.Throwable>[])
io/corbel/iam/service/DefaultDomainServiceTest/testNotExistScopes()#org/springframework/data/repository/CrudRepository/findOne(ID)
io/corbel/iam/service/DefaultDomainServiceTest/testNotExistScopes()#com/google/common/collect/Sets/newHashSet(E[])
io/corbel/iam/service/DefaultDomainServiceTest/testNotExistScopes()#io/corbel/iam/service/DefaultDomainService/scopesAllowedInDomain(java.util.Set,io.corbel.iam.model.Domain)
io/corbel/iam/service/DefaultDomainServiceTest/testNotExistScopes()#io/corbel/iam/service/DefaultScopeService/expandScopes(java.util.Collection)
io/corbel/iam/service/DefaultDomainServiceTest/testNotExistScopes()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/iam/service/DefaultDomainServiceTest/testNotExistScopes()#org/mockito/Mockito/when(T)
io/corbel/iam/service/DefaultDomainServiceTest/testDomainNullScopes()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/service/DefaultDomainServiceTest/testDomainNullScopes()#org/fest/assertions/api/BooleanAssert/isFalse()
io/corbel/iam/service/DefaultDomainServiceTest/testDomainNullScopes()#org/fest/assertions/api/Assertions/assertThat(boolean)
io/corbel/iam/service/DefaultDomainServiceTest/testDomainNullScopes()#io/corbel/iam/model/Domain/getScopes()
io/corbel/iam/service/DefaultDomainServiceTest/testDomainNullScopes()#org/springframework/data/repository/CrudRepository/findOne(ID)
io/corbel/iam/service/DefaultDomainServiceTest/testDomainNullScopes()#java/util/Arrays/asList(T[])
io/corbel/iam/service/DefaultDomainServiceTest/testDomainNullScopes()#com/google/common/collect/Sets/newHashSet(E[])
io/corbel/iam/service/DefaultDomainServiceTest/testDomainNullScopes()#io/corbel/iam/service/DefaultDomainService/scopesAllowedInDomain(java.util.Set,io.corbel.iam.model.Domain)
io/corbel/iam/service/DefaultDomainServiceTest/testDomainNullScopes()#io/corbel/iam/service/DefaultScopeService/expandScopes(java.util.Collection)
io/corbel/iam/service/DefaultDomainServiceTest/testDomainNullScopes()#java/util/HashSet/HashSet(java.util.Collection)
io/corbel/iam/service/DefaultDomainServiceTest/testDomainNullScopes()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/iam/service/DefaultDomainServiceTest/testDomainNullScopes()#org/mockito/Mockito/when(T)
io/corbel/iam/service/DefaultDomainServiceTest/testDomainWithNoScopes()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/service/DefaultDomainServiceTest/testDomainWithNoScopes()#org/fest/assertions/api/BooleanAssert/isFalse()
io/corbel/iam/service/DefaultDomainServiceTest/testDomainWithNoScopes()#org/fest/assertions/api/Assertions/assertThat(boolean)
io/corbel/iam/service/DefaultDomainServiceTest/testDomainWithNoScopes()#io/corbel/iam/model/Domain/getScopes()
io/corbel/iam/service/DefaultDomainServiceTest/testDomainWithNoScopes()#com/google/common/collect/Sets/newHashSet()
io/corbel/iam/service/DefaultDomainServiceTest/testDomainWithNoScopes()#org/springframework/data/repository/CrudRepository/findOne(ID)
io/corbel/iam/service/DefaultDomainServiceTest/testDomainWithNoScopes()#java/util/Arrays/asList(T[])
io/corbel/iam/service/DefaultDomainServiceTest/testDomainWithNoScopes()#com/google/common/collect/Sets/newHashSet(E[])
io/corbel/iam/service/DefaultDomainServiceTest/testDomainWithNoScopes()#io/corbel/iam/service/DefaultDomainService/scopesAllowedInDomain(java.util.Set,io.corbel.iam.model.Domain)
io/corbel/iam/service/DefaultDomainServiceTest/testDomainWithNoScopes()#io/corbel/iam/service/DefaultScopeService/expandScopes(java.util.Collection)
io/corbel/iam/service/DefaultDomainServiceTest/testDomainWithNoScopes()#java/util/HashSet/HashSet(java.util.Collection)
io/corbel/iam/service/DefaultDomainServiceTest/testDomainWithNoScopes()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/iam/service/DefaultDomainServiceTest/testDomainWithNoScopes()#org/mockito/Mockito/when(T)
io/corbel/iam/service/DefaultDomainServiceTest/testAllowedScopes()#org/fest/assertions/api/Assertions/assertThat(boolean)
io/corbel/iam/service/DefaultDomainServiceTest/testAllowedScopes()#io/corbel/iam/model/Domain/getScopes()
io/corbel/iam/service/DefaultDomainServiceTest/testAllowedScopes()#java/util/Arrays/asList(T[])
io/corbel/iam/service/DefaultDomainServiceTest/testAllowedScopes()#com/google/common/collect/Sets/newHashSet(E[])
io/corbel/iam/service/DefaultDomainServiceTest/testAllowedScopes()#io/corbel/iam/service/DefaultDomainService/scopesAllowedInDomain(java.util.Set,io.corbel.iam.model.Domain)
io/corbel/iam/service/DefaultDomainServiceTest/testAllowedScopes()#io/corbel/iam/service/DefaultScopeService/expandScopes(java.util.Collection)
io/corbel/iam/service/DefaultDomainServiceTest/testAllowedScopes()#java/util/HashSet/HashSet(java.util.Collection)
io/corbel/iam/service/DefaultDomainServiceTest/testAllowedScopes()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/service/DefaultDomainServiceTest/testAllowedScopes()#org/fest/assertions/api/BooleanAssert/isTrue()
io/corbel/iam/service/DefaultDomainServiceTest/testAllowedScopes()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/iam/service/DefaultDomainServiceTest/testAllowedScopes()#org/mockito/Mockito/when(T)
io/corbel/iam/service/DefaultDomainServiceTest/testCreateAlreadyExisting()#org/mockito/Mockito/doThrow(java.lang.Class)
io/corbel/iam/service/DefaultDomainServiceTest/testCreateAlreadyExisting()#org/springframework/data/mongodb/repository/MongoRepository/insert(S)
io/corbel/iam/service/DefaultDomainServiceTest/testCreateAlreadyExisting()#org/mockito/Matchers/any(java.lang.Class)
io/corbel/iam/service/DefaultDomainServiceTest/testCreateAlreadyExisting()#org/mockito/stubbing/Stubber/when(T)
io/corbel/iam/service/DefaultDomainServiceTest/testCreateAlreadyExisting()#io/corbel/iam/service/DefaultDomainService/insert(io.corbel.iam.model.Domain)
io/corbel/resources/rem/request/RequestParametersImpl/hashCode()#io/corbel/lib/token/TokenInfo/hashCode()
io/corbel/resources/rem/request/RequestParametersImpl/hashCode()#java/lang/Object/hashCode()
io/corbel/resources/rem/request/RequestParametersImpl/hashCode()#java/lang/Long/hashCode()
io/corbel/resources/rem/request/RequestParametersImpl/hashCode()#java/util/List/hashCode()
io/corbel/resources/rem/request/RequestParametersImpl/hashCode()#java/util/Map/hashCode()
io/corbel/resources/rem/request/RequestParametersImpl/getCustomParameterValue(java.lang.String)#javax/ws/rs/core/MultivaluedMap/getFirst(K)
io/corbel/resources/rem/request/RequestParametersImpl/getCustomParameterValues(java.lang.String)#java/util/Map/get(java.lang.Object)
io/corbel/resources/rem/request/RequestParametersImpl/equals(java.lang.Object)#java/lang/Object/equals(java.lang.Object)
io/corbel/resources/rem/request/RequestParametersImpl/equals(java.lang.Object)#java/lang/Long/equals(java.lang.Object)
io/corbel/resources/rem/request/RequestParametersImpl/equals(java.lang.Object)#io/corbel/lib/token/TokenInfo/equals(java.lang.Object)
io/corbel/resources/rem/request/RequestParametersImpl/equals(java.lang.Object)#java/lang/Object/getClass()
io/corbel/resources/rem/request/RequestParametersImpl/equals(java.lang.Object)#java/util/Map/equals(java.lang.Object)
io/corbel/resources/rem/request/RequestParametersImpl/equals(java.lang.Object)#java/util/List/equals(java.lang.Object)
io/corbel/resources/rem/operation/CropFromCenter/apply(java.lang.String)#java/util/regex/Matcher/matches()
io/corbel/resources/rem/operation/CropFromCenter/apply(java.lang.String)#org/im4java/core/IMOps/crop(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer)
io/corbel/resources/rem/operation/CropFromCenter/apply(java.lang.String)#org/im4java/core/IMOperation/IMOperation()
io/corbel/resources/rem/operation/CropFromCenter/apply(java.lang.String)#io/corbel/resources/rem/operation/ImageOperation/getValues(java.lang.String,java.util.regex.Matcher)
io/corbel/resources/rem/operation/CropFromCenter/apply(java.lang.String)#java/lang/Integer/parseInt(java.lang.String)
io/corbel/resources/rem/operation/CropFromCenter/apply(java.lang.String)#java/util/List/get(int)
io/corbel/resources/rem/operation/CropFromCenter/apply(java.lang.String)#org/im4java/core/IMOps/gravity(java.lang.String)
io/corbel/resources/rem/operation/CropFromCenter/apply(java.lang.String)#java/util/regex/Pattern/matcher(java.lang.CharSequence)
io/corbel/resources/rem/operation/CropFromCenter/apply(java.lang.String)#io/corbel/resources/rem/exception/ImageOperationsException/ImageOperationsException(java.lang.String,java.lang.Throwable)
io/corbel/resources/rem/operation/CropFromCenter/apply(java.lang.String)#io/corbel/resources/rem/exception/ImageOperationsException/ImageOperationsException(java.lang.String)
io/corbel/iam/auth/provider/OAuthServerProvider/setConfiguration(java.util.Map)#io/corbel/iam/auth/oauthserver/connect/OAuthServerConnectionFactory/OAuthServerConnectionFactory(java.lang.String,java.lang.String,java.lang.String)
io/corbel/iam/auth/provider/OAuthServerProvider/setConfiguration(java.util.Map)#java/util/Map/get(java.lang.Object)
io/corbel/iam/auth/provider/OAuthServerProvider/setConfiguration(java.util.Map)#io/corbel/iam/auth/provider/AbstractOAuth2Provider/setConfiguration(java.util.Map)
io/corbel/iam/auth/provider/OAuthServerProvider/getIdentity(io.corbel.iam.auth.OauthParams,java.lang.String,java.lang.String)#org/springframework/core/NestedRuntimeException/getMessage()
io/corbel/iam/auth/provider/OAuthServerProvider/getIdentity(io.corbel.iam.auth.OauthParams,java.lang.String,java.lang.String)#io/corbel/iam/auth/oauthserver/api/UserOperations/getUserProfile()
io/corbel/iam/auth/provider/OAuthServerProvider/getIdentity(io.corbel.iam.auth.OauthParams,java.lang.String,java.lang.String)#io/corbel/iam/exception/UnauthorizedException/UnauthorizedException(java.lang.String)
io/corbel/iam/auth/provider/OAuthServerProvider/getIdentity(io.corbel.iam.auth.OauthParams,java.lang.String,java.lang.String)#io/corbel/iam/auth/oauthserver/api/impl/Profile/getId()
io/corbel/iam/auth/provider/OAuthServerProvider/getIdentity(io.corbel.iam.auth.OauthParams,java.lang.String,java.lang.String)#java/lang/Throwable/getMessage()
io/corbel/iam/auth/provider/OAuthServerProvider/getIdentity(io.corbel.iam.auth.OauthParams,java.lang.String,java.lang.String)#org/springframework/social/connect/Connection/getApi()
io/corbel/iam/auth/provider/OAuthServerProvider/getIdentity(io.corbel.iam.auth.OauthParams,java.lang.String,java.lang.String)#io/corbel/iam/exception/OauthServerConnectionException/OauthServerConnectionException(java.lang.String,java.lang.String)
io/corbel/iam/auth/provider/OAuthServerProvider/getIdentity(io.corbel.iam.auth.OauthParams,java.lang.String,java.lang.String)#io/corbel/iam/repository/IdentityRepository/findByOauthIdAndDomainAndOauthService(java.lang.String,java.lang.String,java.lang.String)
io/corbel/iam/auth/provider/OAuthServerProvider/getIdentity(io.corbel.iam.auth.OauthParams,java.lang.String,java.lang.String)#org/springframework/social/connect/support/OAuth2ConnectionFactory/createConnection(org.springframework.social.oauth2.AccessGrant)
io/corbel/iam/auth/provider/OAuthServerProvider/getIdentity(io.corbel.iam.auth.OauthParams,java.lang.String,java.lang.String)#io/corbel/iam/auth/oauthserver/api/OAuthServer/userOperations()
io/corbel/iam/auth/provider/OAuthServerProvider/getIdentity(io.corbel.iam.auth.OauthParams,java.lang.String,java.lang.String)#org/springframework/social/connect/Connection/hasExpired()
io/corbel/iam/auth/provider/OAuthServerProvider/getIdentity(io.corbel.iam.auth.OauthParams,java.lang.String,java.lang.String)#io/corbel/iam/auth/provider/AbstractOAuth2Provider/getAccessGrant(io.corbel.iam.auth.OauthParams)
io/corbel/oauth/service/DefaultMailChangePasswordServiceTest/testSendMailChangePassword()#java/util/Map/get(java.lang.Object)
io/corbel/oauth/service/DefaultMailChangePasswordServiceTest/testSendMailChangePassword()#org/mockito/ArgumentCaptor/capture()
io/corbel/oauth/service/DefaultMailChangePasswordServiceTest/testSendMailChangePassword()#org/mockito/Matchers/eq(T)
io/corbel/oauth/service/DefaultMailChangePasswordServiceTest/testSendMailChangePassword()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/oauth/service/DefaultMailChangePasswordServiceTest/testSendMailChangePassword()#org/mockito/ArgumentCaptor/getValue()
io/corbel/oauth/service/DefaultMailChangePasswordServiceTest/testSendMailChangePassword()#io/corbel/oauth/service/DefaultMailChangePasswordService/sendMailChangePassword(io.corbel.oauth.model.Client,java.lang.String,java.lang.String)
io/corbel/oauth/service/DefaultMailChangePasswordServiceTest/testSendMailChangePassword()#org/mockito/ArgumentCaptor/forClass(java.lang.Class)
io/corbel/oauth/service/DefaultMailChangePasswordServiceTest/testSendMailChangePassword()#org/mockito/Mockito/verify(T)
io/corbel/oauth/service/DefaultMailChangePasswordServiceTest/testSendMailChangePassword()#org/fest/assertions/api/Assertions/assertThat(T)
io/corbel/oauth/service/DefaultMailChangePasswordServiceTest/testSendMailChangePassword()#io/corbel/oauth/service/SendNotificationService/sendNotification(java.lang.String,java.lang.String,java.lang.String,java.util.Map)
io/corbel/oauth/service/DefaultMailChangePasswordServiceTest/setup()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/oauth/service/DefaultMailChangePasswordServiceTest/setup()#io/corbel/oauth/model/Client/getDomain()
io/corbel/oauth/service/DefaultMailChangePasswordServiceTest/setup()#io/corbel/oauth/service/DefaultMailChangePasswordService/DefaultMailChangePasswordService(java.lang.String,io.corbel.oauth.service.SendNotificationService)
io/corbel/oauth/service/DefaultMailChangePasswordServiceTest/setup()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/oauth/service/DefaultMailChangePasswordServiceTest/setup()#org/mockito/Mockito/when(T)
io/corbel/oauth/service/DefaultMailChangePasswordServiceTest/testSendMailChangePasswordWithOverwriteNotificationByClient()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/oauth/service/DefaultMailChangePasswordServiceTest/testSendMailChangePasswordWithOverwriteNotificationByClient()#org/mockito/Mockito/when(T)
io/corbel/oauth/service/DefaultMailChangePasswordServiceTest/testSendMailChangePasswordWithOverwriteNotificationByClient()#java/util/Map/get(java.lang.Object)
io/corbel/oauth/service/DefaultMailChangePasswordServiceTest/testSendMailChangePasswordWithOverwriteNotificationByClient()#org/mockito/ArgumentCaptor/capture()
io/corbel/oauth/service/DefaultMailChangePasswordServiceTest/testSendMailChangePasswordWithOverwriteNotificationByClient()#org/mockito/Matchers/eq(T)
io/corbel/oauth/service/DefaultMailChangePasswordServiceTest/testSendMailChangePasswordWithOverwriteNotificationByClient()#org/mockito/ArgumentCaptor/getValue()
io/corbel/oauth/service/DefaultMailChangePasswordServiceTest/testSendMailChangePasswordWithOverwriteNotificationByClient()#io/corbel/oauth/service/DefaultMailChangePasswordService/sendMailChangePassword(io.corbel.oauth.model.Client,java.lang.String,java.lang.String)
io/corbel/oauth/service/DefaultMailChangePasswordServiceTest/testSendMailChangePasswordWithOverwriteNotificationByClient()#org/mockito/ArgumentCaptor/forClass(java.lang.Class)
io/corbel/oauth/service/DefaultMailChangePasswordServiceTest/testSendMailChangePasswordWithOverwriteNotificationByClient()#org/mockito/Mockito/verify(T)
io/corbel/oauth/service/DefaultMailChangePasswordServiceTest/testSendMailChangePasswordWithOverwriteNotificationByClient()#org/fest/assertions/api/Assertions/assertThat(T)
io/corbel/oauth/service/DefaultMailChangePasswordServiceTest/testSendMailChangePasswordWithOverwriteNotificationByClient()#io/corbel/oauth/service/SendNotificationService/sendNotification(java.lang.String,java.lang.String,java.lang.String,java.util.Map)
io/corbel/oauth/service/DefaultMailChangePasswordServiceTest/testSendMailChangePasswordWithOverwriteNotificationByClient()#io/corbel/oauth/model/Client/getChangePasswordNotificationId()
io/corbel/oauth/service/DefaultMailChangePasswordServiceTest/testSendMailChangePasswordWithOverwriteNotificationByClient()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/resources/rem/restor/RestorPutRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#java/util/Optional/get()
io/corbel/resources/rem/restor/RestorPutRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#javax/ws/rs/core/Response/noContent()
io/corbel/resources/rem/restor/RestorPutRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#javax/ws/rs/core/Response/ResponseBuilder/build()
io/corbel/resources/rem/restor/RestorPutRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/resources/rem/restor/AbstractRestorRem/getMediaType(io.corbel.resources.rem.request.RequestParameters)
io/corbel/resources/rem/restor/RestorPutRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/resources/rem/dao/RestorDao/uploadObject(io.corbel.resources.rem.model.RestorResourceUri,io.corbel.resources.rem.model.RestorObject)
io/corbel/resources/rem/restor/RestorPutRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#java/util/Base64/getDecoder()
io/corbel/resources/rem/restor/RestorPutRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/lib/ws/api/error/ErrorResponseFactory/badRequest()
io/corbel/resources/rem/restor/RestorPutRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#java/lang/String/equals(java.lang.Object)
io/corbel/resources/rem/restor/RestorPutRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/resources/rem/model/RestorObject/RestorObject(java.lang.String,java.io.InputStream,java.lang.Long)
io/corbel/resources/rem/restor/RestorPutRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#java/util/Optional/isPresent()
io/corbel/resources/rem/restor/RestorPutRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#java/lang/Long/valueOf(java.lang.String)
io/corbel/resources/rem/restor/RestorPutRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/resources/rem/request/ResourceId/getId()
io/corbel/resources/rem/restor/RestorPutRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#java/util/Base64/Decoder/wrap(java.io.InputStream)
io/corbel/resources/rem/restor/RestorPutRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/resources/rem/request/RequestParameters/getRequestedDomain()
io/corbel/resources/rem/restor/RestorPutRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/resources/rem/model/RestorResourceUri/RestorResourceUri(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
io/corbel/resources/rem/restor/RestorPutRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/resources/rem/request/RequestParameters/getCustomParameterValue(java.lang.String)
io/corbel/resources/rem/restor/RestorPutRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/resources/rem/request/RequestParameters/getContentLength()
io/corbel/resources/rem/restor/RestorPutRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/lib/ws/api/error/ErrorResponseFactory/getInstance()
io/corbel/iam/repository/decorator/LowerCaseDecoratorTest/resourceQueryWithBadTypeTest()#java/util/Arrays/asList(T[])
io/corbel/iam/repository/decorator/LowerCaseDecoratorTest/resourceQueryWithBadTypeTest()#io/corbel/lib/queries/request/ResourceQuery/ResourceQuery()
io/corbel/iam/repository/decorator/LowerCaseDecoratorTest/resourceQueryWithBadTypeTest()#io/corbel/lib/queries/QueryNodeImpl/QueryNodeImpl(io.corbel.lib.queries.request.QueryOperator,java.lang.String,io.corbel.lib.queries.request.QueryLiteral)
io/corbel/iam/repository/decorator/LowerCaseDecoratorTest/resourceQueryWithBadTypeTest()#io/corbel/lib/queries/request/QueryLiteral/setLiteral(T)
io/corbel/iam/repository/decorator/LowerCaseDecoratorTest/resourceQueryWithBadTypeTest()#io/corbel/lib/queries/LongQueryLiteral/LongQueryLiteral()
io/corbel/iam/repository/decorator/LowerCaseDecoratorTest/resourceQueryWithBadTypeTest()#io/corbel/iam/repository/decorator/LowerCaseDecorator/count(io.corbel.lib.queries.request.ResourceQuery)
io/corbel/iam/repository/decorator/LowerCaseDecoratorTest/before()#io/corbel/iam/repository/decorator/LowerCaseDecorator/LowerCaseDecorator(io.corbel.iam.repository.UserRepository)
io/corbel/iam/repository/decorator/LowerCaseDecoratorTest/resourceQueryWithListTest()#io/corbel/lib/queries/request/QueryLiteral/getLiteral()
io/corbel/iam/repository/decorator/LowerCaseDecoratorTest/resourceQueryWithListTest()#java/util/Arrays/asList(T[])
io/corbel/iam/repository/decorator/LowerCaseDecoratorTest/resourceQueryWithListTest()#io/corbel/lib/queries/request/ResourceQuery/ResourceQuery()
io/corbel/iam/repository/decorator/LowerCaseDecoratorTest/resourceQueryWithListTest()#io/corbel/lib/queries/QueryNodeImpl/QueryNodeImpl(io.corbel.lib.queries.request.QueryOperator,java.lang.String,io.corbel.lib.queries.request.QueryLiteral)
io/corbel/iam/repository/decorator/LowerCaseDecoratorTest/resourceQueryWithListTest()#java/util/List/get(int)
io/corbel/iam/repository/decorator/LowerCaseDecoratorTest/resourceQueryWithListTest()#io/corbel/lib/queries/ListQueryLiteral/ListQueryLiteral()
io/corbel/iam/repository/decorator/LowerCaseDecoratorTest/resourceQueryWithListTest()#io/corbel/iam/repository/decorator/LowerCaseDecorator/count(io.corbel.lib.queries.request.ResourceQuery)
io/corbel/iam/repository/decorator/LowerCaseDecoratorTest/resourceQueryWithListTest()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/iam/repository/decorator/LowerCaseDecoratorTest/resourceQueryWithListTest()#io/corbel/lib/queries/request/QueryNode/getValue()
io/corbel/iam/repository/decorator/LowerCaseDecoratorTest/resourceQueryWithListTest()#java/util/Iterator/next()
io/corbel/iam/repository/decorator/LowerCaseDecoratorTest/resourceQueryWithListTest()#io/corbel/lib/queries/request/ResourceQuery/iterator()
io/corbel/iam/repository/decorator/LowerCaseDecoratorTest/resourceQueryWithListTest()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/iam/repository/decorator/LowerCaseDecoratorTest/resourceQueryWithListTest()#io/corbel/lib/queries/request/QueryLiteral/setLiteral(T)
io/corbel/iam/repository/decorator/LowerCaseDecoratorTest/resourceQueryWithListTest()#io/corbel/lib/queries/StringQueryLiteral/StringQueryLiteral(java.lang.String)
io/corbel/iam/repository/decorator/LowerCaseDecoratorTest/resourceQueryWithEmailTest()#io/corbel/lib/queries/builder/ResourceQueryBuilder/build()
io/corbel/iam/repository/decorator/LowerCaseDecoratorTest/resourceQueryWithEmailTest()#io/corbel/lib/queries/request/QueryLiteral/getLiteral()
io/corbel/iam/repository/decorator/LowerCaseDecoratorTest/resourceQueryWithEmailTest()#io/corbel/lib/queries/builder/ResourceQueryBuilder/ResourceQueryBuilder()
io/corbel/iam/repository/decorator/LowerCaseDecoratorTest/resourceQueryWithEmailTest()#org/mockito/Mockito/verify(T)
io/corbel/iam/repository/decorator/LowerCaseDecoratorTest/resourceQueryWithEmailTest()#io/corbel/lib/queries/builder/ResourceQueryBuilder/add(java.lang.String,java.lang.String,io.corbel.lib.queries.request.QueryOperator)
io/corbel/iam/repository/decorator/LowerCaseDecoratorTest/resourceQueryWithEmailTest()#io/corbel/iam/repository/decorator/LowerCaseDecorator/count(io.corbel.lib.queries.request.ResourceQuery)
io/corbel/iam/repository/decorator/LowerCaseDecoratorTest/resourceQueryWithEmailTest()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/iam/repository/decorator/LowerCaseDecoratorTest/resourceQueryWithEmailTest()#io/corbel/lib/queries/mongo/repository/GenericFindRepository/count(io.corbel.lib.queries.request.ResourceQuery)
io/corbel/iam/repository/decorator/LowerCaseDecoratorTest/resourceQueryWithEmailTest()#io/corbel/lib/queries/request/QueryNode/getValue()
io/corbel/iam/repository/decorator/LowerCaseDecoratorTest/resourceQueryWithEmailTest()#java/util/Iterator/next()
io/corbel/iam/repository/decorator/LowerCaseDecoratorTest/resourceQueryWithEmailTest()#io/corbel/lib/queries/request/ResourceQuery/iterator()
io/corbel/iam/repository/decorator/LowerCaseDecoratorTest/resourceQueryWithEmailTest()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/iam/auth/rule/AuthenticationTypeAllowedAuthorizationRuleTest/testOkWithOauthAuthentication()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/auth/rule/AuthenticationTypeAllowedAuthorizationRuleTest/testOkWithOauthAuthentication()#io/corbel/iam/auth/AuthorizationRequestContext/isOAuth()
io/corbel/iam/auth/rule/AuthenticationTypeAllowedAuthorizationRuleTest/testOkWithOauthAuthentication()#org/mockito/Mockito/when(T)
io/corbel/iam/auth/rule/AuthenticationTypeAllowedAuthorizationRuleTest/testOkWithOauthAuthentication()#java/util/Collections/singletonMap(K,V)
io/corbel/iam/auth/rule/AuthenticationTypeAllowedAuthorizationRuleTest/testOkWithOauthAuthentication()#io/corbel/iam/auth/rule/AuthenticationTypeAllowedAuthorizationRule/process(io.corbel.iam.auth.AuthorizationRequestContext)
io/corbel/iam/auth/rule/AuthenticationTypeAllowedAuthorizationRuleTest/testOkWithOauthAuthentication()#io/corbel/iam/auth/AuthorizationRequestContext/getRequestedDomain()
io/corbel/iam/auth/rule/AuthenticationTypeAllowedAuthorizationRuleTest/testOkWithOauthAuthentication()#io/corbel/iam/model/Domain/getCapabilities()
io/corbel/iam/auth/rule/AuthenticationTypeAllowedAuthorizationRuleTest/setup()#io/corbel/iam/auth/rule/AuthenticationTypeAllowedAuthorizationRule/AuthenticationTypeAllowedAuthorizationRule()
io/corbel/iam/auth/rule/AuthenticationTypeAllowedAuthorizationRuleTest/testErrorWithBasicAuthenticationAndCapabilityDisabled()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/auth/rule/AuthenticationTypeAllowedAuthorizationRuleTest/testErrorWithBasicAuthenticationAndCapabilityDisabled()#org/mockito/Mockito/when(T)
io/corbel/iam/auth/rule/AuthenticationTypeAllowedAuthorizationRuleTest/testErrorWithBasicAuthenticationAndCapabilityDisabled()#java/util/Collections/singletonMap(K,V)
io/corbel/iam/auth/rule/AuthenticationTypeAllowedAuthorizationRuleTest/testErrorWithBasicAuthenticationAndCapabilityDisabled()#io/corbel/iam/auth/rule/AuthenticationTypeAllowedAuthorizationRule/process(io.corbel.iam.auth.AuthorizationRequestContext)
io/corbel/iam/auth/rule/AuthenticationTypeAllowedAuthorizationRuleTest/testErrorWithBasicAuthenticationAndCapabilityDisabled()#io/corbel/iam/auth/AuthorizationRequestContext/getRequestedDomain()
io/corbel/iam/auth/rule/AuthenticationTypeAllowedAuthorizationRuleTest/testErrorWithBasicAuthenticationAndCapabilityDisabled()#io/corbel/iam/auth/AuthorizationRequestContext/isBasic()
io/corbel/iam/auth/rule/AuthenticationTypeAllowedAuthorizationRuleTest/testErrorWithBasicAuthenticationAndCapabilityDisabled()#io/corbel/iam/model/Domain/getCapabilities()
io/corbel/iam/auth/rule/AuthenticationTypeAllowedAuthorizationRuleTest/testOkWithOauthAuthenticationWithDefaultCapabilities()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/auth/rule/AuthenticationTypeAllowedAuthorizationRuleTest/testOkWithOauthAuthenticationWithDefaultCapabilities()#java/util/Collections/emptyMap()
io/corbel/iam/auth/rule/AuthenticationTypeAllowedAuthorizationRuleTest/testOkWithOauthAuthenticationWithDefaultCapabilities()#io/corbel/iam/auth/AuthorizationRequestContext/isOAuth()
io/corbel/iam/auth/rule/AuthenticationTypeAllowedAuthorizationRuleTest/testOkWithOauthAuthenticationWithDefaultCapabilities()#org/mockito/Mockito/when(T)
io/corbel/iam/auth/rule/AuthenticationTypeAllowedAuthorizationRuleTest/testOkWithOauthAuthenticationWithDefaultCapabilities()#io/corbel/iam/auth/rule/AuthenticationTypeAllowedAuthorizationRule/process(io.corbel.iam.auth.AuthorizationRequestContext)
io/corbel/iam/auth/rule/AuthenticationTypeAllowedAuthorizationRuleTest/testOkWithOauthAuthenticationWithDefaultCapabilities()#io/corbel/iam/auth/AuthorizationRequestContext/getRequestedDomain()
io/corbel/iam/auth/rule/AuthenticationTypeAllowedAuthorizationRuleTest/testOkWithOauthAuthenticationWithDefaultCapabilities()#io/corbel/iam/model/Domain/getCapabilities()
io/corbel/iam/auth/rule/AuthenticationTypeAllowedAuthorizationRuleTest/testOkWithBasicAuthenticationWithDefaultCapabilities()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/auth/rule/AuthenticationTypeAllowedAuthorizationRuleTest/testOkWithBasicAuthenticationWithDefaultCapabilities()#java/util/Collections/emptyMap()
io/corbel/iam/auth/rule/AuthenticationTypeAllowedAuthorizationRuleTest/testOkWithBasicAuthenticationWithDefaultCapabilities()#org/mockito/Mockito/when(T)
io/corbel/iam/auth/rule/AuthenticationTypeAllowedAuthorizationRuleTest/testOkWithBasicAuthenticationWithDefaultCapabilities()#io/corbel/iam/auth/rule/AuthenticationTypeAllowedAuthorizationRule/process(io.corbel.iam.auth.AuthorizationRequestContext)
io/corbel/iam/auth/rule/AuthenticationTypeAllowedAuthorizationRuleTest/testOkWithBasicAuthenticationWithDefaultCapabilities()#io/corbel/iam/auth/AuthorizationRequestContext/getRequestedDomain()
io/corbel/iam/auth/rule/AuthenticationTypeAllowedAuthorizationRuleTest/testOkWithBasicAuthenticationWithDefaultCapabilities()#io/corbel/iam/auth/AuthorizationRequestContext/isBasic()
io/corbel/iam/auth/rule/AuthenticationTypeAllowedAuthorizationRuleTest/testOkWithBasicAuthenticationWithDefaultCapabilities()#io/corbel/iam/model/Domain/getCapabilities()
io/corbel/iam/auth/rule/AuthenticationTypeAllowedAuthorizationRuleTest/testOkWithBasicAuthentication()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/auth/rule/AuthenticationTypeAllowedAuthorizationRuleTest/testOkWithBasicAuthentication()#org/mockito/Mockito/when(T)
io/corbel/iam/auth/rule/AuthenticationTypeAllowedAuthorizationRuleTest/testOkWithBasicAuthentication()#java/util/Collections/singletonMap(K,V)
io/corbel/iam/auth/rule/AuthenticationTypeAllowedAuthorizationRuleTest/testOkWithBasicAuthentication()#io/corbel/iam/auth/rule/AuthenticationTypeAllowedAuthorizationRule/process(io.corbel.iam.auth.AuthorizationRequestContext)
io/corbel/iam/auth/rule/AuthenticationTypeAllowedAuthorizationRuleTest/testOkWithBasicAuthentication()#io/corbel/iam/auth/AuthorizationRequestContext/getRequestedDomain()
io/corbel/iam/auth/rule/AuthenticationTypeAllowedAuthorizationRuleTest/testOkWithBasicAuthentication()#io/corbel/iam/auth/AuthorizationRequestContext/isBasic()
io/corbel/iam/auth/rule/AuthenticationTypeAllowedAuthorizationRuleTest/testOkWithBasicAuthentication()#io/corbel/iam/model/Domain/getCapabilities()
io/corbel/iam/auth/rule/AuthenticationTypeAllowedAuthorizationRuleTest/testErrorWithOauthAuthenticationAndCapabilityDisabled()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/auth/rule/AuthenticationTypeAllowedAuthorizationRuleTest/testErrorWithOauthAuthenticationAndCapabilityDisabled()#io/corbel/iam/auth/AuthorizationRequestContext/isOAuth()
io/corbel/iam/auth/rule/AuthenticationTypeAllowedAuthorizationRuleTest/testErrorWithOauthAuthenticationAndCapabilityDisabled()#org/mockito/Mockito/when(T)
io/corbel/iam/auth/rule/AuthenticationTypeAllowedAuthorizationRuleTest/testErrorWithOauthAuthenticationAndCapabilityDisabled()#java/util/Collections/singletonMap(K,V)
io/corbel/iam/auth/rule/AuthenticationTypeAllowedAuthorizationRuleTest/testErrorWithOauthAuthenticationAndCapabilityDisabled()#io/corbel/iam/auth/rule/AuthenticationTypeAllowedAuthorizationRule/process(io.corbel.iam.auth.AuthorizationRequestContext)
io/corbel/iam/auth/rule/AuthenticationTypeAllowedAuthorizationRuleTest/testErrorWithOauthAuthenticationAndCapabilityDisabled()#io/corbel/iam/auth/AuthorizationRequestContext/getRequestedDomain()
io/corbel/iam/auth/rule/AuthenticationTypeAllowedAuthorizationRuleTest/testErrorWithOauthAuthenticationAndCapabilityDisabled()#io/corbel/iam/model/Domain/getCapabilities()
io/corbel/iam/service/DefaultAuthorizationServiceTest/testBadSystemClockException()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/service/DefaultAuthorizationServiceTest/testBadSystemClockException()#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
io/corbel/iam/service/DefaultAuthorizationServiceTest/testBadSystemClockException()#org/mockito/Mockito/when(T)
io/corbel/iam/service/DefaultAuthorizationServiceTest/testBadSystemClockException()#net/oauth/jsontoken/JsonToken/getIssuedAt()
io/corbel/iam/service/DefaultAuthorizationServiceTest/testBadSystemClockException()#net/oauth/jsontoken/JsonTokenParser/deserialize(java.lang.String)
io/corbel/iam/service/DefaultAuthorizationServiceTest/testBadSystemClockException()#io/corbel/iam/service/DefaultAuthorizationService/authorize(java.lang.String)
io/corbel/iam/service/DefaultAuthorizationServiceTest/testBadSystemClockException()#org/mockito/Matchers/any()
io/corbel/iam/service/DefaultAuthorizationServiceTest/testBadSystemClockException()#org/joda/time/Instant/Instant(long)
io/corbel/iam/service/DefaultAuthorizationServiceTest/testBadSystemClockException()#net/oauth/jsontoken/JsonToken/getExpiration()
io/corbel/iam/service/DefaultAuthorizationServiceTest/testBadSystemClockException()#org/mockito/stubbing/OngoingStubbing/thenThrow(java.lang.Throwable[])
io/corbel/iam/service/DefaultAuthorizationServiceTest/testBadSystemClockException()#net/oauth/jsontoken/JsonTokenParser/verifyAndDeserialize(java.lang.String)
io/corbel/iam/service/DefaultAuthorizationServiceTest/testBadToken()#org/mockito/Mockito/when(T)
io/corbel/iam/service/DefaultAuthorizationServiceTest/testBadToken()#io/corbel/iam/service/DefaultAuthorizationService/authorize(java.lang.String)
io/corbel/iam/service/DefaultAuthorizationServiceTest/testBadToken()#org/mockito/stubbing/OngoingStubbing/thenThrow(java.lang.Throwable[])
io/corbel/iam/service/DefaultAuthorizationServiceTest/testBadToken()#net/oauth/jsontoken/JsonTokenParser/verifyAndDeserialize(java.lang.String)
io/corbel/iam/service/DefaultAuthorizationServiceTest/testBadToken()#java/lang/IllegalArgumentException/IllegalArgumentException()
io/corbel/iam/service/DefaultAuthorizationServiceTest/testAuthorized()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/service/DefaultAuthorizationServiceTest/testAuthorized()#io/corbel/lib/token/TokenInfo/Builder/setState(java.lang.String)
io/corbel/iam/service/DefaultAuthorizationServiceTest/testAuthorized()#org/mockito/Mockito/verify(T)
io/corbel/iam/service/DefaultAuthorizationServiceTest/testAuthorized()#io/corbel/iam/service/ScopeService/getScope(java.lang.String)
io/corbel/iam/service/DefaultAuthorizationServiceTest/testAuthorized()#org/fest/assertions/api/AbstractAssert/isNotNull()
io/corbel/iam/service/DefaultAuthorizationServiceTest/testAuthorized()#io/corbel/lib/token/factory/TokenFactory/createToken(io.corbel.lib.token.TokenInfo,long,java.lang.String[])
io/corbel/iam/service/DefaultAuthorizationServiceTest/testAuthorized()#io/corbel/iam/service/DefaultAuthorizationService/authorize(java.lang.String)
io/corbel/iam/service/DefaultAuthorizationServiceTest/testAuthorized()#net/oauth/jsontoken/JsonTokenParser/verifyAndDeserialize(java.lang.String)
io/corbel/iam/service/DefaultAuthorizationServiceTest/testAuthorized()#io/corbel/lib/token/TokenInfo/Builder/setClientId(java.lang.String)
io/corbel/iam/service/DefaultAuthorizationServiceTest/testAuthorized()#io/corbel/lib/token/TokenInfo/newBuilder()
io/corbel/iam/service/DefaultAuthorizationServiceTest/testAuthorized()#io/corbel/lib/token/TokenInfo/Builder/setType(io.corbel.lib.token.model.TokenType)
io/corbel/iam/service/DefaultAuthorizationServiceTest/testAuthorized()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/iam/service/DefaultAuthorizationServiceTest/testAuthorized()#org/mockito/Mockito/when(T)
io/corbel/iam/service/DefaultAuthorizationServiceTest/testAuthorized()#java/lang/Long/toString(long)
io/corbel/iam/service/DefaultAuthorizationServiceTest/testAuthorized()#io/corbel/lib/token/TokenInfo/Builder/build()
io/corbel/iam/service/DefaultAuthorizationServiceTest/testAuthorized()#io/corbel/lib/token/TokenInfo/Builder/setDomainId(java.lang.String)
io/corbel/iam/service/DefaultAuthorizationServiceTest/testAuthorized()#io/corbel/iam/service/EventsService/sendClientAuthenticationEvent(java.lang.String,java.lang.String)
io/corbel/iam/service/DefaultAuthorizationServiceTest/testAuthorized()#org/fest/assertions/api/Assertions/assertThat(T)
io/corbel/iam/service/DefaultAuthorizationServiceTest/testAuthorized()#io/corbel/iam/service/DefaultAuthorizationServiceTest/initContext(boolean)
io/corbel/iam/service/DefaultAuthorizationServiceTest/testAuthorizedWithPrincipal()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/service/DefaultAuthorizationServiceTest/testAuthorizedWithPrincipal()#org/mockito/Mockito/verify(T)
io/corbel/iam/service/DefaultAuthorizationServiceTest/testAuthorizedWithPrincipal()#org/fest/assertions/api/AbstractAssert/isNotNull()
io/corbel/iam/service/DefaultAuthorizationServiceTest/testAuthorizedWithPrincipal()#io/corbel/lib/token/factory/TokenFactory/createToken(io.corbel.lib.token.TokenInfo,long,java.lang.String[])
io/corbel/iam/service/DefaultAuthorizationServiceTest/testAuthorizedWithPrincipal()#io/corbel/iam/service/EventsService/sendUserAuthenticationEvent(io.corbel.iam.model.User)
io/corbel/iam/service/DefaultAuthorizationServiceTest/testAuthorizedWithPrincipal()#io/corbel/iam/service/DefaultAuthorizationService/authorize(java.lang.String)
io/corbel/iam/service/DefaultAuthorizationServiceTest/testAuthorizedWithPrincipal()#java/util/HashSet/HashSet()
io/corbel/iam/service/DefaultAuthorizationServiceTest/testAuthorizedWithPrincipal()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/iam/service/DefaultAuthorizationServiceTest/testAuthorizedWithPrincipal()#org/mockito/Mockito/when(T)
io/corbel/iam/service/DefaultAuthorizationServiceTest/testAuthorizedWithPrincipal()#org/fest/assertions/api/Assertions/assertThat(T)
io/corbel/iam/service/DefaultAuthorizationServiceTest/testAuthorizedWithPrincipal()#io/corbel/iam/service/DefaultAuthorizationServiceTest/initContext(boolean)
io/corbel/iam/service/DefaultAuthorizationServiceTest/testAuthorizedWithPrincipal()#io/corbel/iam/service/ScopeService/publishAuthorizationRules(java.lang.String,long,java.util.Set)
io/corbel/iam/service/DefaultAuthorizationServiceTest/testAuthorizedWithPrincipal()#net/oauth/jsontoken/JsonTokenParser/verifyAndDeserialize(java.lang.String)
io/corbel/iam/service/DefaultAuthorizationServiceTest/testRefreshToken()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/service/DefaultAuthorizationServiceTest/testRefreshToken()#io/corbel/iam/model/User/getUsername()
io/corbel/iam/service/DefaultAuthorizationServiceTest/testRefreshToken()#org/mockito/Mockito/verify(T)
io/corbel/iam/service/DefaultAuthorizationServiceTest/testRefreshToken()#io/corbel/iam/auth/AuthorizationRequestContext/getRefreshToken()
io/corbel/iam/service/DefaultAuthorizationServiceTest/testRefreshToken()#io/corbel/iam/service/RefreshTokenService/getUserFromRefreshToken(java.lang.String)
io/corbel/iam/service/DefaultAuthorizationServiceTest/testRefreshToken()#io/corbel/lib/token/factory/TokenFactory/createToken(io.corbel.lib.token.TokenInfo,long,java.lang.String[])
io/corbel/iam/service/DefaultAuthorizationServiceTest/testRefreshToken()#io/corbel/iam/service/EventsService/sendUserAuthenticationEvent(io.corbel.iam.model.User)
io/corbel/iam/service/DefaultAuthorizationServiceTest/testRefreshToken()#io/corbel/iam/service/DefaultAuthorizationService/authorize(java.lang.String)
io/corbel/iam/service/DefaultAuthorizationServiceTest/testRefreshToken()#java/util/HashSet/HashSet()
io/corbel/iam/service/DefaultAuthorizationServiceTest/testRefreshToken()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/iam/service/DefaultAuthorizationServiceTest/testRefreshToken()#org/mockito/Mockito/when(T)
io/corbel/iam/service/DefaultAuthorizationServiceTest/testRefreshToken()#io/corbel/iam/auth/AuthorizationRequestContext/hasRefreshToken()
io/corbel/iam/service/DefaultAuthorizationServiceTest/testRefreshToken()#org/fest/assertions/api/AbstractAssert/isNotNull()
io/corbel/iam/service/DefaultAuthorizationServiceTest/testRefreshToken()#org/fest/assertions/api/Assertions/assertThat(T)
io/corbel/iam/service/DefaultAuthorizationServiceTest/testRefreshToken()#io/corbel/iam/service/DefaultAuthorizationServiceTest/initContext(boolean)
io/corbel/iam/service/DefaultAuthorizationServiceTest/testRefreshToken()#io/corbel/iam/service/ScopeService/publishAuthorizationRules(java.lang.String,long,java.util.Set)
io/corbel/iam/service/DefaultAuthorizationServiceTest/testRefreshToken()#net/oauth/jsontoken/JsonTokenParser/verifyAndDeserialize(java.lang.String)
io/corbel/iam/service/DefaultAuthorizationServiceTest/setUp()#io/corbel/lib/token/TokenInfo/Builder/setState(java.lang.String)
io/corbel/iam/service/DefaultAuthorizationServiceTest/setUp()#org/mockito/Matchers/any(java.lang.Class)
io/corbel/iam/service/DefaultAuthorizationServiceTest/setUp()#java/util/Arrays/asList(T[])
io/corbel/iam/service/DefaultAuthorizationServiceTest/setUp()#io/corbel/lib/token/TokenInfo/Builder/setGroups(java.util.Collection)
io/corbel/iam/service/DefaultAuthorizationServiceTest/setUp()#io/corbel/lib/token/TokenInfo/Builder/setDomainId(java.lang.String)
io/corbel/iam/service/DefaultAuthorizationServiceTest/setUp()#io/corbel/iam/service/DefaultAuthorizationService/DefaultAuthorizationService(net.oauth.jsontoken.JsonTokenParser,java.util.List,io.corbel.lib.token.factory.TokenFactory,io.corbel.iam.auth.AuthorizationRequestContextFactory,io.corbel.iam.service.ScopeService,io.corbel.iam.auth.provider.AuthorizationProviderFactory,io.corbel.iam.service.RefreshTokenService,io.corbel.iam.repository.UserTokenRepository,io.corbel.iam.service.UserService,io.corbel.iam.service.EventsService,io.corbel.iam.service.DeviceService)
io/corbel/iam/service/DefaultAuthorizationServiceTest/setUp()#io/corbel/lib/token/TokenInfo/Builder/setClientId(java.lang.String)
io/corbel/iam/service/DefaultAuthorizationServiceTest/setUp()#io/corbel/lib/token/TokenInfo/newBuilder()
io/corbel/iam/service/DefaultAuthorizationServiceTest/setUp()#io/corbel/lib/token/TokenInfo/Builder/setUserId(java.lang.String)
io/corbel/iam/service/DefaultAuthorizationServiceTest/setUp()#io/corbel/lib/token/TokenInfo/Builder/setType(io.corbel.lib.token.model.TokenType)
io/corbel/iam/service/DefaultAuthorizationServiceTest/setUp()#io/corbel/lib/token/TokenGrant/TokenGrant(java.lang.String,long)
io/corbel/iam/service/DefaultAuthorizationServiceTest/setUp()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/service/DefaultAuthorizationServiceTest/setUp()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/iam/service/DefaultAuthorizationServiceTest/setUp()#org/mockito/Mockito/when(T)
io/corbel/iam/service/DefaultAuthorizationServiceTest/setUp()#io/corbel/iam/auth/AuthorizationRequestContextFactory/fromJsonToken(net.oauth.jsontoken.JsonToken)
io/corbel/iam/service/DefaultAuthorizationServiceTest/setUp()#java/lang/Long/toString(long)
io/corbel/iam/service/DefaultAuthorizationServiceTest/setUp()#io/corbel/lib/token/TokenInfo/Builder/build()
io/corbel/iam/service/DefaultAuthorizationServiceTest/testInvalidSignature()#org/mockito/Mockito/when(T)
io/corbel/iam/service/DefaultAuthorizationServiceTest/testInvalidSignature()#java/security/SignatureException/SignatureException()
io/corbel/iam/service/DefaultAuthorizationServiceTest/testInvalidSignature()#io/corbel/iam/service/DefaultAuthorizationService/authorize(java.lang.String)
io/corbel/iam/service/DefaultAuthorizationServiceTest/testInvalidSignature()#org/mockito/stubbing/OngoingStubbing/thenThrow(java.lang.Throwable[])
io/corbel/iam/service/DefaultAuthorizationServiceTest/testInvalidSignature()#net/oauth/jsontoken/JsonTokenParser/verifyAndDeserialize(java.lang.String)
io/corbel/iam/service/DefaultAuthorizationServiceTest/testBadToken2()#java/lang/IllegalStateException/IllegalStateException()
io/corbel/iam/service/DefaultAuthorizationServiceTest/testBadToken2()#org/mockito/Mockito/when(T)
io/corbel/iam/service/DefaultAuthorizationServiceTest/testBadToken2()#net/oauth/jsontoken/JsonTokenParser/expirationIsValid(net.oauth.jsontoken.JsonToken,org.joda.time.Instant)
io/corbel/iam/service/DefaultAuthorizationServiceTest/testBadToken2()#io/corbel/iam/service/DefaultAuthorizationService/authorize(java.lang.String)
io/corbel/iam/service/DefaultAuthorizationServiceTest/testBadToken2()#org/mockito/Matchers/any()
io/corbel/iam/service/DefaultAuthorizationServiceTest/testBadToken2()#net/oauth/jsontoken/JsonTokenParser/issuedAtIsValid(net.oauth.jsontoken.JsonToken,org.joda.time.Instant)
io/corbel/iam/service/DefaultAuthorizationServiceTest/testBadToken2()#org/mockito/stubbing/OngoingStubbing/thenThrow(java.lang.Throwable[])
io/corbel/iam/service/DefaultAuthorizationServiceTest/testBadToken2()#net/oauth/jsontoken/JsonTokenParser/verifyAndDeserialize(java.lang.String)
io/corbel/iam/service/DefaultAuthorizationServiceTest/initContext(boolean)#io/corbel/iam/model/User/getGroups()
io/corbel/iam/service/DefaultAuthorizationServiceTest/initContext(boolean)#io/corbel/iam/model/Domain/getAuthConfigurations()
io/corbel/iam/service/DefaultAuthorizationServiceTest/initContext(boolean)#io/corbel/iam/auth/AuthorizationRequestContext/getAuthorizationExpiration()
io/corbel/iam/service/DefaultAuthorizationServiceTest/initContext(boolean)#io/corbel/iam/auth/AuthorizationRequestContext/getRequestedScopes()
io/corbel/iam/service/DefaultAuthorizationServiceTest/initContext(boolean)#java/util/Map/put(K,V)
io/corbel/iam/service/DefaultAuthorizationServiceTest/initContext(boolean)#io/corbel/iam/model/Entity/getId()
io/corbel/iam/service/DefaultAuthorizationServiceTest/initContext(boolean)#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/service/DefaultAuthorizationServiceTest/initContext(boolean)#io/corbel/iam/model/User/getUserProfile()
io/corbel/iam/service/DefaultAuthorizationServiceTest/initContext(boolean)#java/util/Collections/singleton(T)
io/corbel/iam/service/DefaultAuthorizationServiceTest/initContext(boolean)#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/iam/service/DefaultAuthorizationServiceTest/initContext(boolean)#org/mockito/Mockito/when(T)
io/corbel/iam/service/DefaultAuthorizationServiceTest/initContext(boolean)#io/corbel/iam/auth/AuthorizationRequestContext/getIssuerClientId()
io/corbel/iam/service/DefaultAuthorizationServiceTest/initContext(boolean)#io/corbel/iam/auth/AuthorizationRequestContext/getPrincipalId()
io/corbel/iam/service/DefaultAuthorizationServiceTest/initContext(boolean)#io/corbel/iam/auth/AuthorizationRequestContext/getPrincipal(java.lang.String)
io/corbel/iam/service/DefaultAuthorizationServiceTest/initContext(boolean)#io/corbel/iam/auth/AuthorizationRequestContext/hasPrincipal()
io/corbel/iam/service/DefaultAuthorizationServiceTest/initContext(boolean)#java/util/HashMap/HashMap()
io/corbel/iam/service/DefaultAuthorizationServiceTest/initContext(boolean)#io/corbel/iam/auth/AuthorizationRequestContext/getPrincipal()
io/corbel/iam/service/DefaultAuthorizationServiceTest/initContext(boolean)#io/corbel/iam/auth/AuthorizationRequestContext/getIssuerClient()
io/corbel/iam/service/DefaultAuthorizationServiceTest/initContext(boolean)#io/corbel/iam/auth/AuthorizationRequestContext/getRequestedDomain()
io/corbel/iam/service/DefaultAuthorizationServiceTest/initContext(boolean)#io/corbel/iam/auth/AuthorizationRequestContext/getIssuerClientDomain()
io/corbel/resources/rem/resmi/ResmiDeleteRemTest/testMethodDeleteRelationFromSrcID()#io/corbel/resources/rem/model/ResourceUri/ResourceUri(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
io/corbel/resources/rem/resmi/ResmiDeleteRemTest/testMethodDeleteRelationFromSrcID()#io/corbel/resources/rem/request/ResourceId/getId()
io/corbel/resources/rem/resmi/ResmiDeleteRemTest/testMethodDeleteRelationFromSrcID()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/resources/rem/resmi/ResmiDeleteRemTest/testMethodDeleteRelationFromSrcID()#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/rem/resmi/ResmiDeleteRemTest/testMethodDeleteRelationFromSrcID()#io/corbel/resources/rem/resmi/ResmiRemTest/getParametersWithEmptyUri()
io/corbel/resources/rem/resmi/ResmiDeleteRemTest/testMethodDeleteRelationFromSrcID()#java/util/Optional/empty()
io/corbel/resources/rem/resmi/ResmiDeleteRemTest/testMethodDeleteRelationFromSrcID()#org/mockito/Matchers/eq(T)
io/corbel/resources/rem/resmi/ResmiDeleteRemTest/testMethodDeleteRelationFromSrcID()#io/corbel/resources/rem/Rem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)
io/corbel/resources/rem/resmi/ResmiDeleteRemTest/testMethodDeleteRelationFromSrcID()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/resources/rem/resmi/ResmiDeleteRemTest/testMethodDeleteRelationFromSrcID()#io/corbel/resources/rem/service/ResmiService/deleteRelation(io.corbel.resources.rem.model.ResourceUri,java.util.Optional)
io/corbel/resources/rem/resmi/ResmiDeleteRemTest/testMethodDeleteRelationFromSrcID()#org/mockito/Mockito/verify(T)
io/corbel/resources/rem/resmi/ResmiDeleteRemTest/testDeleteOkRelationWithWildCardId()#io/corbel/resources/rem/resmi/ResmiRemTest/getParameters(java.lang.String)
io/corbel/resources/rem/resmi/ResmiDeleteRemTest/testDeleteOkRelationWithWildCardId()#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/rem/resmi/ResmiDeleteRemTest/testDeleteOkRelationWithWildCardId()#io/corbel/resources/rem/Rem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)
io/corbel/resources/rem/resmi/ResmiDeleteRemTest/testDeleteOkRelationWithWildCardId()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/resources/rem/resmi/ResmiDeleteRemTest/testDeleteOkRelationWithWildCardId()#java/util/Optional/of(T)
io/corbel/resources/rem/resmi/ResmiDeleteRemTest/testDeleteOkRelationWithWildCardId()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/resources/rem/resmi/ResmiDeleteRemTest/testDeleteOkRelationWithWildCardId()#com/google/gson/JsonObject/addProperty(java.lang.String,java.lang.String)
io/corbel/resources/rem/resmi/ResmiDeleteRemTest/testDeleteOkRelationWithWildCardId()#com/google/gson/JsonObject/JsonObject()
io/corbel/resources/rem/resmi/ResmiDeleteRemTest/setup()#io/corbel/resources/rem/resmi/ResmiDeleteRem/ResmiDeleteRem(io.corbel.resources.rem.service.ResmiService)
io/corbel/resources/rem/resmi/ResmiDeleteRemTest/setup()#io/corbel/resources/rem/resmi/ResmiRemTest/setup()
io/corbel/resources/rem/resmi/ResmiDeleteRemTest/testDeleteOkRelation()#io/corbel/resources/rem/resmi/ResmiRemTest/getParameters(java.lang.String)
io/corbel/resources/rem/resmi/ResmiDeleteRemTest/testDeleteOkRelation()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/resources/rem/resmi/ResmiDeleteRemTest/testDeleteOkRelation()#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/rem/resmi/ResmiDeleteRemTest/testDeleteOkRelation()#java/util/Optional/empty()
io/corbel/resources/rem/resmi/ResmiDeleteRemTest/testDeleteOkRelation()#io/corbel/resources/rem/Rem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)
io/corbel/resources/rem/resmi/ResmiDeleteRemTest/testDeleteOkRelation()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/resources/rem/resmi/ResmiDeleteRemTest/testDeleteCollectionQuery()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/resmi/ResmiDeleteRemTest/testDeleteCollectionQuery()#org/mockito/Mockito/verify(T)
io/corbel/resources/rem/resmi/ResmiDeleteRemTest/testDeleteCollectionQuery()#io/corbel/resources/rem/Rem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional)
io/corbel/resources/rem/resmi/ResmiDeleteRemTest/testDeleteCollectionQuery()#io/corbel/resources/rem/service/ResmiService/deleteCollection(io.corbel.resources.rem.model.ResourceUri,java.util.Optional)
io/corbel/resources/rem/resmi/ResmiDeleteRemTest/testDeleteCollectionQuery()#io/corbel/resources/rem/request/CollectionParameters/getQueries()
io/corbel/resources/rem/resmi/ResmiDeleteRemTest/testDeleteCollectionQuery()#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/rem/resmi/ResmiDeleteRemTest/testDeleteCollectionQuery()#io/corbel/resources/rem/resmi/ResmiRemTest/getParametersWithEmptyUri()
io/corbel/resources/rem/resmi/ResmiDeleteRemTest/testDeleteCollectionQuery()#java/util/Optional/empty()
io/corbel/resources/rem/resmi/ResmiDeleteRemTest/testDeleteCollectionQuery()#org/mockito/Matchers/eq(T)
io/corbel/resources/rem/resmi/ResmiDeleteRemTest/testDeleteCollectionQuery()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/resources/rem/resmi/ResmiDeleteRemTest/testDeleteCollectionQuery()#io/corbel/resources/rem/model/ResourceUri/ResourceUri(java.lang.String,java.lang.String)
io/corbel/resources/rem/resmi/ResmiDeleteRemTest/testDeleteCollectionQuery()#io/corbel/resources/rem/request/RequestParameters/getOptionalApiParameters()
io/corbel/resources/rem/resmi/ResmiDeleteRemTest/testDeleteCollectionQuery()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/resources/rem/resmi/ResmiDeleteRemTest/testDeleteCollectionQuery()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/resmi/ResmiDeleteRemTest/testDeleteCollectionQuery()#java/util/Optional/of(T)
io/corbel/resources/rem/resmi/ResmiDeleteRemTest/testDeleteCollectionQuery()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/resources/rem/resmi/ResmiDeleteRemTest/testDeleteOkResource()#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/rem/resmi/ResmiDeleteRemTest/testDeleteOkResource()#io/corbel/resources/rem/resmi/ResmiRemTest/getParametersWithEmptyUri()
io/corbel/resources/rem/resmi/ResmiDeleteRemTest/testDeleteOkResource()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/resources/rem/resmi/ResmiDeleteRemTest/testDeleteOkResource()#io/corbel/resources/rem/Rem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)
io/corbel/resources/rem/resmi/ResmiDeleteRemTest/testDeleteOkResource()#java/util/Optional/of(T)
io/corbel/resources/rem/resmi/ResmiDeleteRemTest/testDeleteOkResource()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/resources/rem/resmi/ResmiDeleteRemTest/testDeleteOkResource()#com/google/gson/JsonObject/addProperty(java.lang.String,java.lang.String)
io/corbel/resources/rem/resmi/ResmiDeleteRemTest/testDeleteOkResource()#com/google/gson/JsonObject/JsonObject()
io/corbel/resources/rem/resmi/ResmiDeleteRemTest/testDeleteRelationNotAllowed()#io/corbel/resources/rem/request/ResourceId/ResourceId(java.lang.String)
io/corbel/resources/rem/resmi/ResmiDeleteRemTest/testDeleteRelationNotAllowed()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/resources/rem/resmi/ResmiDeleteRemTest/testDeleteRelationNotAllowed()#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/rem/resmi/ResmiDeleteRemTest/testDeleteRelationNotAllowed()#io/corbel/resources/rem/resmi/ResmiRemTest/getParametersWithEmptyUri()
io/corbel/resources/rem/resmi/ResmiDeleteRemTest/testDeleteRelationNotAllowed()#java/util/Optional/empty()
io/corbel/resources/rem/resmi/ResmiDeleteRemTest/testDeleteRelationNotAllowed()#io/corbel/resources/rem/Rem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)
io/corbel/resources/rem/resmi/ResmiDeleteRemTest/testDeleteRelationNotAllowed()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/resources/rem/dao/MongoResmiQueryBuilder/textSearch(java.lang.String)#org/springframework/data/mongodb/core/query/Query/addCriteria(org.springframework.data.mongodb.core.query.CriteriaDefinition)
io/corbel/resources/rem/dao/MongoResmiQueryBuilder/textSearch(java.lang.String)#org/springframework/data/mongodb/core/query/TextCriteria/forDefaultLanguage()
io/corbel/resources/rem/dao/MongoResmiQueryBuilder/textSearch(java.lang.String)#org/springframework/data/mongodb/core/query/TextCriteria/matching(java.lang.String)
io/corbel/resources/rem/dao/MongoResmiQueryBuilder/id(java.lang.String)#org/springframework/data/mongodb/core/query/Criteria/is(java.lang.Object)
io/corbel/resources/rem/dao/MongoResmiQueryBuilder/id(java.lang.String)#org/springframework/data/mongodb/core/query/Query/addCriteria(org.springframework.data.mongodb.core.query.CriteriaDefinition)
io/corbel/resources/rem/dao/MongoResmiQueryBuilder/id(java.lang.String)#org/springframework/data/mongodb/core/query/Criteria/where(java.lang.String)
io/corbel/resources/rem/dao/MongoResmiQueryBuilder/relationSubjectId(io.corbel.resources.rem.request.ResourceId)#io/corbel/resources/rem/request/ResourceId/isWildcard()
io/corbel/resources/rem/dao/MongoResmiQueryBuilder/relationSubjectId(io.corbel.resources.rem.request.ResourceId)#org/springframework/data/mongodb/core/query/Criteria/is(java.lang.Object)
io/corbel/resources/rem/dao/MongoResmiQueryBuilder/relationSubjectId(io.corbel.resources.rem.request.ResourceId)#io/corbel/resources/rem/request/ResourceId/getId()
io/corbel/resources/rem/dao/MongoResmiQueryBuilder/relationSubjectId(io.corbel.resources.rem.request.ResourceId)#org/springframework/data/mongodb/core/query/Query/addCriteria(org.springframework.data.mongodb.core.query.CriteriaDefinition)
io/corbel/resources/rem/dao/MongoResmiQueryBuilder/relationSubjectId(io.corbel.resources.rem.request.ResourceId)#org/springframework/data/mongodb/core/query/Criteria/where(java.lang.String)
io/corbel/resources/rem/dao/MongoResmiQueryBuilder/relationDestinationId(java.lang.String)#org/springframework/data/mongodb/core/query/Criteria/is(java.lang.Object)
io/corbel/resources/rem/dao/MongoResmiQueryBuilder/relationDestinationId(java.lang.String)#org/springframework/data/mongodb/core/query/Query/addCriteria(org.springframework.data.mongodb.core.query.CriteriaDefinition)
io/corbel/resources/rem/dao/MongoResmiQueryBuilder/relationDestinationId(java.lang.String)#org/springframework/data/mongodb/core/query/Criteria/where(java.lang.String)
io/corbel/resources/rem/dao/MongoResmiQueryBuilder/query(java.util.List)#org/springframework/data/mongodb/core/query/Query/addCriteria(org.springframework.data.mongodb.core.query.CriteriaDefinition)
io/corbel/resources/rem/dao/MongoResmiQueryBuilder/query(java.util.List)#java/util/List/isEmpty()
io/corbel/resources/rem/dao/MongoResmiQueryBuilder/query(java.util.List)#io/corbel/lib/queries/mongo/builder/CriteriaBuilder/buildFromResourceQueries(java.util.List,java.util.function.Function)
io/corbel/resources/rem/dao/MongoResmiQueryBuilder/query(io.corbel.lib.queries.request.ResourceQuery)#org/springframework/data/mongodb/core/query/Query/addCriteria(org.springframework.data.mongodb.core.query.CriteriaDefinition)
io/corbel/resources/rem/dao/MongoResmiQueryBuilder/query(io.corbel.lib.queries.request.ResourceQuery)#io/corbel/lib/queries/mongo/builder/CriteriaBuilder/buildFromResourceQuery(io.corbel.lib.queries.request.ResourceQuery,java.util.function.Function)
io/corbel/resources/rem/dao/MongoResmiQueryBuilder/relationSubjectId(io.corbel.resources.rem.model.ResourceUri)#io/corbel/resources/rem/dao/MongoResmiQueryBuilder/relationSubjectId(io.corbel.resources.rem.request.ResourceId)
io/corbel/resources/rem/dao/MongoResmiQueryBuilder/relationSubjectId(io.corbel.resources.rem.model.ResourceUri)#io/corbel/resources/rem/request/ResourceId/ResourceId(java.lang.String)
io/corbel/resources/rem/dao/MongoResmiQueryBuilder/relationSubjectId(io.corbel.resources.rem.model.ResourceUri)#io/corbel/resources/rem/model/ResourceUri/getTypeId()
io/corbel/resources/rem/dao/MongoResmiQueryBuilder/relationSubjectId(io.corbel.resources.rem.model.ResourceUri)#io/corbel/resources/rem/model/ResourceUri/isTypeWildcard()
io/corbel/resources/rem/dao/MongoResmiQueryBuilder/relationSubjectId(io.corbel.resources.rem.model.ResourceUri)#io/corbel/resources/rem/model/ResourceUri/isRelation()
io/corbel/iam/api/EmailResource/getUserIdByEmail(java.lang.String,java.lang.String)#io/corbel/iam/api/EmailResource/getUserInDomainByEmail(java.lang.String,java.lang.String)
io/corbel/iam/api/EmailResource/getUserIdByEmail(java.lang.String,java.lang.String)#java/util/Optional/map(java.util.function.Function)
io/corbel/iam/api/EmailResource/getUserIdByEmail(java.lang.String,java.lang.String)#java/util/Optional/orElseGet(java.util.function.Supplier)
io/corbel/iam/api/EmailResource/existsUserByEmailInDomain(java.lang.String,java.lang.String)#javax/ws/rs/core/Response/ResponseBuilder/build()
io/corbel/iam/api/EmailResource/existsUserByEmailInDomain(java.lang.String,java.lang.String)#javax/ws/rs/core/Response/ok()
io/corbel/iam/api/EmailResource/existsUserByEmailInDomain(java.lang.String,java.lang.String)#io/corbel/iam/service/UserService/existsByEmailAndDomain(java.lang.String,java.lang.String)
io/corbel/iam/api/EmailResource/existsUserByEmailInDomain(java.lang.String,java.lang.String)#io/corbel/lib/ws/api/error/ErrorResponseFactory/notFound()
io/corbel/iam/api/EmailResource/existsUserByEmailInDomain(java.lang.String,java.lang.String)#io/corbel/iam/api/IamErrorResponseFactory/getInstance()
io/corbel/iam/api/EmailResource/getUserInDomainByEmail(java.lang.String,java.lang.String)#io/corbel/iam/service/UserService/findByDomainAndEmail(java.lang.String,java.lang.String)
io/corbel/iam/api/EmailResource/getUserInDomainByEmail(java.lang.String,java.lang.String)#java/util/Optional/ofNullable(T)
io/corbel/resources/rem/service/DefaultServiceLocatorTest/testPublishResolve()#io/corbel/resources/rem/service/ServiceLocator/publish(java.lang.Class,T)
io/corbel/resources/rem/service/DefaultServiceLocatorTest/testPublishResolve()#io/corbel/resources/rem/service/ServiceLocator/resolve(java.lang.Class)
io/corbel/resources/rem/service/DefaultServiceLocatorTest/testPublishResolve()#java/util/Optional/of(T)
io/corbel/resources/rem/service/DefaultServiceLocatorTest/testPublishResolve()#io/corbel/resources/rem/service/DefaultServiceLocatorTest/testPublishResolve()/$anonymous1/()
io/corbel/resources/rem/service/DefaultServiceLocatorTest/testPublishResolve()#org/fest/assertions/api/Assertions/assertThat(T)
io/corbel/resources/rem/service/DefaultServiceLocatorTest/testPublishResolve()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/resources/rem/service/DefaultServiceLocatorTest/setup()#io/corbel/resources/rem/service/DefaultServiceLocator/DefaultServiceLocator()
io/corbel/resources/rem/service/DefaultServiceLocatorTest/testErrorWhenAlreadyPublished()#io/corbel/resources/rem/service/ServiceLocator/publish(java.lang.Class,T)
io/corbel/resources/rem/service/DefaultServiceLocatorTest/testErrorWhenAlreadyPublished()#io/corbel/resources/rem/service/DefaultServiceLocatorTest/testErrorWhenAlreadyPublished()/$anonymous1/()
io/corbel/resources/rem/operation/Crop/apply(java.lang.String)#java/util/regex/Matcher/matches()
io/corbel/resources/rem/operation/Crop/apply(java.lang.String)#org/im4java/core/IMOps/crop(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer)
io/corbel/resources/rem/operation/Crop/apply(java.lang.String)#org/im4java/core/IMOperation/IMOperation()
io/corbel/resources/rem/operation/Crop/apply(java.lang.String)#io/corbel/resources/rem/operation/ImageOperation/getValues(java.lang.String,java.util.regex.Matcher)
io/corbel/resources/rem/operation/Crop/apply(java.lang.String)#java/lang/Integer/parseInt(java.lang.String)
io/corbel/resources/rem/operation/Crop/apply(java.lang.String)#java/util/List/get(int)
io/corbel/resources/rem/operation/Crop/apply(java.lang.String)#java/util/regex/Pattern/matcher(java.lang.CharSequence)
io/corbel/resources/rem/operation/Crop/apply(java.lang.String)#io/corbel/resources/rem/exception/ImageOperationsException/ImageOperationsException(java.lang.String,java.lang.Throwable)
io/corbel/resources/rem/operation/Crop/apply(java.lang.String)#io/corbel/resources/rem/exception/ImageOperationsException/ImageOperationsException(java.lang.String)
io/corbel/resources/api/RemResourceTest/testGetRelationWithPaginationDefaultsParameters()#io/corbel/resources/rem/request/RequestParameters/getApiParameters()
io/corbel/resources/api/RemResourceTest/testGetRelationWithPaginationDefaultsParameters()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/resources/api/RemResourceTest/testGetRelationWithPaginationDefaultsParameters()#org/mockito/ArgumentCaptor/getValue()
io/corbel/resources/api/RemResourceTest/testGetRelationWithPaginationDefaultsParameters()#io/corbel/resources/rem/request/CollectionParameters/getPagination()
io/corbel/resources/api/RemResourceTest/testGetRelationWithPaginationDefaultsParameters()#io/corbel/lib/queries/request/Pagination/Pagination(int,int)
io/corbel/resources/api/RemResourceTest/testGetRelationWithPaginationDefaultsParameters()#javax/ws/rs/core/Response/ok()
io/corbel/resources/api/RemResourceTest/testGetRelationWithPaginationDefaultsParameters()#org/mockito/Mockito/when(T)
io/corbel/resources/api/RemResourceTest/testGetRelationWithPaginationDefaultsParameters()#org/mockito/ArgumentCaptor/forClass(java.lang.Class)
io/corbel/resources/api/RemResourceTest/testGetRelationWithPaginationDefaultsParameters()#io/corbel/lib/token/TokenInfo/getUserId()
io/corbel/resources/api/RemResourceTest/testGetRelationWithPaginationDefaultsParameters()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/resources/api/RemResourceTest/testGetRelationWithPaginationDefaultsParameters()#javax/ws/rs/core/Response/ResponseBuilder/entity(java.lang.Object)
io/corbel/resources/api/RemResourceTest/testGetRelationWithPaginationDefaultsParameters()#javax/ws/rs/client/SyncInvoker/get(java.lang.Class)
io/corbel/resources/api/RemResourceTest/testGetRelationWithPaginationDefaultsParameters()#org/mockito/Matchers/any()
io/corbel/resources/api/RemResourceTest/testGetRelationWithPaginationDefaultsParameters()#org/mockito/Matchers/eq(T)
io/corbel/resources/api/RemResourceTest/testGetRelationWithPaginationDefaultsParameters()#io/corbel/resources/rem/Rem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)
io/corbel/resources/api/RemResourceTest/testGetRelationWithPaginationDefaultsParameters()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/resources/api/RemResourceTest/testGetRelationWithPaginationDefaultsParameters()#io/corbel/resources/rem/request/RequestParameters/getTokenInfo()
io/corbel/resources/api/RemResourceTest/testGetRelationWithPaginationDefaultsParameters()#javax/ws/rs/core/Response/ResponseBuilder/build()
io/corbel/resources/api/RemResourceTest/testGetRelationWithPaginationDefaultsParameters()#javax/ws/rs/client/WebTarget/request()
io/corbel/resources/api/RemResourceTest/testGetRelationWithPaginationDefaultsParameters()#org/fest/assertions/api/AbstractAssert/isSameAs(A)
io/corbel/resources/api/RemResourceTest/testGetRelationWithPaginationDefaultsParameters()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/resources/api/RemResourceTest/testGetRelationWithPaginationDefaultsParameters()#org/mockito/ArgumentCaptor/capture()
io/corbel/resources/api/RemResourceTest/testGetRelationWithPaginationDefaultsParameters()#org/fest/assertions/api/Assertions/assertThat(T)
io/corbel/resources/api/RemResourceTest/testGetRelationWithPaginationDefaultsParameters()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/resources/api/RemResourceTest/testGetRelationWithSort()#io/corbel/resources/rem/request/RequestParameters/getApiParameters()
io/corbel/resources/api/RemResourceTest/testGetRelationWithSort()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/resources/api/RemResourceTest/testGetRelationWithSort()#org/mockito/ArgumentCaptor/getValue()
io/corbel/resources/api/RemResourceTest/testGetRelationWithSort()#java/net/URLEncoder/encode(java.lang.String,java.lang.String)
io/corbel/resources/api/RemResourceTest/testGetRelationWithSort()#javax/ws/rs/core/Response/ok()
io/corbel/resources/api/RemResourceTest/testGetRelationWithSort()#org/mockito/ArgumentCaptor/forClass(java.lang.Class)
io/corbel/resources/api/RemResourceTest/testGetRelationWithSort()#io/corbel/lib/queries/request/Sort/Sort(java.lang.String,java.lang.String)
io/corbel/resources/api/RemResourceTest/testGetRelationWithSort()#io/corbel/lib/token/TokenInfo/getUserId()
io/corbel/resources/api/RemResourceTest/testGetRelationWithSort()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/resources/api/RemResourceTest/testGetRelationWithSort()#java/util/Optional/of(T)
io/corbel/resources/api/RemResourceTest/testGetRelationWithSort()#javax/ws/rs/core/Response/ResponseBuilder/entity(java.lang.Object)
io/corbel/resources/api/RemResourceTest/testGetRelationWithSort()#javax/ws/rs/client/SyncInvoker/get(java.lang.Class)
io/corbel/resources/api/RemResourceTest/testGetRelationWithSort()#org/mockito/Matchers/any()
io/corbel/resources/api/RemResourceTest/testGetRelationWithSort()#org/mockito/Matchers/eq(T)
io/corbel/resources/api/RemResourceTest/testGetRelationWithSort()#io/corbel/resources/rem/Rem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)
io/corbel/resources/api/RemResourceTest/testGetRelationWithSort()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/resources/api/RemResourceTest/testGetRelationWithSort()#io/corbel/resources/rem/request/RequestParameters/getTokenInfo()
io/corbel/resources/api/RemResourceTest/testGetRelationWithSort()#javax/ws/rs/core/Response/ResponseBuilder/build()
io/corbel/resources/api/RemResourceTest/testGetRelationWithSort()#org/mockito/Mockito/when(T)
io/corbel/resources/api/RemResourceTest/testGetRelationWithSort()#io/corbel/resources/rem/request/CollectionParameters/getSort()
io/corbel/resources/api/RemResourceTest/testGetRelationWithSort()#javax/ws/rs/client/WebTarget/queryParam(java.lang.String,java.lang.Object[])
io/corbel/resources/api/RemResourceTest/testGetRelationWithSort()#javax/ws/rs/client/WebTarget/request()
io/corbel/resources/api/RemResourceTest/testGetRelationWithSort()#org/fest/assertions/api/AbstractAssert/isSameAs(A)
io/corbel/resources/api/RemResourceTest/testGetRelationWithSort()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/resources/api/RemResourceTest/testGetRelationWithSort()#org/mockito/ArgumentCaptor/capture()
io/corbel/resources/api/RemResourceTest/testGetRelationWithSort()#org/fest/assertions/api/Assertions/assertThat(T)
io/corbel/resources/api/RemResourceTest/testGetRelationWithSort()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/resources/api/RemResourceTest/testDeleteCollection()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/resources/api/RemResourceTest/testDeleteCollection()#org/mockito/ArgumentCaptor/getValue()
io/corbel/resources/api/RemResourceTest/testDeleteCollection()#javax/ws/rs/core/Response/ok()
io/corbel/resources/api/RemResourceTest/testDeleteCollection()#org/mockito/Mockito/when(T)
io/corbel/resources/api/RemResourceTest/testDeleteCollection()#io/corbel/lib/token/TokenInfo/getUserId()
io/corbel/resources/api/RemResourceTest/testDeleteCollection()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/resources/api/RemResourceTest/testDeleteCollection()#javax/ws/rs/core/Response/ResponseBuilder/entity(java.lang.Object)
io/corbel/resources/api/RemResourceTest/testDeleteCollection()#org/mockito/Matchers/any()
io/corbel/resources/api/RemResourceTest/testDeleteCollection()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/resources/api/RemResourceTest/testDeleteCollection()#javax/ws/rs/client/SyncInvoker/delete(java.lang.Class)
io/corbel/resources/api/RemResourceTest/testDeleteCollection()#org/mockito/Matchers/eq(T)
io/corbel/resources/api/RemResourceTest/testDeleteCollection()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/resources/api/RemResourceTest/testDeleteCollection()#io/corbel/resources/rem/request/RequestParameters/getTokenInfo()
io/corbel/resources/api/RemResourceTest/testDeleteCollection()#javax/ws/rs/core/Response/ResponseBuilder/build()
io/corbel/resources/api/RemResourceTest/testDeleteCollection()#org/mockito/Matchers/any(java.lang.Class)
io/corbel/resources/api/RemResourceTest/testDeleteCollection()#org/mockito/ArgumentCaptor/forClass(java.lang.Class)
io/corbel/resources/api/RemResourceTest/testDeleteCollection()#io/corbel/resources/rem/Rem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional,java.util.Optional)
io/corbel/resources/api/RemResourceTest/testDeleteCollection()#javax/ws/rs/client/WebTarget/request()
io/corbel/resources/api/RemResourceTest/testDeleteCollection()#org/fest/assertions/api/AbstractAssert/isSameAs(A)
io/corbel/resources/api/RemResourceTest/testDeleteCollection()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/resources/api/RemResourceTest/testDeleteCollection()#org/mockito/ArgumentCaptor/capture()
io/corbel/resources/api/RemResourceTest/testGetRelationWithBadJsonSort()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/resources/api/RemResourceTest/testGetRelationWithBadJsonSort()#javax/ws/rs/core/Response/Status/getStatusCode()
io/corbel/resources/api/RemResourceTest/testGetRelationWithBadJsonSort()#javax/ws/rs/client/WebTarget/request(javax.ws.rs.core.MediaType[])
io/corbel/resources/api/RemResourceTest/testGetRelationWithBadJsonSort()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/resources/api/RemResourceTest/testGetRelationWithBadJsonSort()#javax/ws/rs/client/WebTarget/queryParam(java.lang.String,java.lang.Object[])
io/corbel/resources/api/RemResourceTest/testGetRelationWithBadJsonSort()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/resources/api/RemResourceTest/testGetRelationWithBadJsonSort()#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/api/RemResourceTest/testGetRelationWithBadJsonSort()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/resources/api/RemResourceTest/testGetRelationWithBadJsonSort()#javax/ws/rs/client/SyncInvoker/head()
io/corbel/resources/api/RemResourceTest/testGetRelationWithBadJsonSort()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/resources/api/RemResourceTest/testGetRelationWithMalformedQuery()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/resources/api/RemResourceTest/testGetRelationWithMalformedQuery()#javax/ws/rs/core/Response/Status/getStatusCode()
io/corbel/resources/api/RemResourceTest/testGetRelationWithMalformedQuery()#io/corbel/lib/queries/parser/QueryParser/parse(java.lang.String)
io/corbel/resources/api/RemResourceTest/testGetRelationWithMalformedQuery()#java/net/URLEncoder/encode(java.lang.String,java.lang.String)
io/corbel/resources/api/RemResourceTest/testGetRelationWithMalformedQuery()#org/mockito/Mockito/when(T)
io/corbel/resources/api/RemResourceTest/testGetRelationWithMalformedQuery()#javax/ws/rs/client/WebTarget/request(javax.ws.rs.core.MediaType[])
io/corbel/resources/api/RemResourceTest/testGetRelationWithMalformedQuery()#io/corbel/lib/queries/exception/MalformedJsonQueryException/MalformedJsonQueryException(java.lang.String)
io/corbel/resources/api/RemResourceTest/testGetRelationWithMalformedQuery()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/resources/api/RemResourceTest/testGetRelationWithMalformedQuery()#javax/ws/rs/client/WebTarget/queryParam(java.lang.String,java.lang.Object[])
io/corbel/resources/api/RemResourceTest/testGetRelationWithMalformedQuery()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/resources/api/RemResourceTest/testGetRelationWithMalformedQuery()#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/api/RemResourceTest/testGetRelationWithMalformedQuery()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/resources/api/RemResourceTest/testGetRelationWithMalformedQuery()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/resources/api/RemResourceTest/testGetRelationWithMalformedQuery()#javax/ws/rs/client/SyncInvoker/head()
io/corbel/resources/api/RemResourceTest/testGetRelationWithMalformedQuery()#org/mockito/stubbing/OngoingStubbing/thenThrow(java.lang.Throwable[])
io/corbel/resources/api/RemResourceTest/testGetRelationWithWildCardId()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/resources/api/RemResourceTest/testGetRelationWithWildCardId()#org/mockito/ArgumentCaptor/getValue()
io/corbel/resources/api/RemResourceTest/testGetRelationWithWildCardId()#javax/ws/rs/core/Response/ok()
io/corbel/resources/api/RemResourceTest/testGetRelationWithWildCardId()#org/mockito/Mockito/when(T)
io/corbel/resources/api/RemResourceTest/testGetRelationWithWildCardId()#org/mockito/ArgumentCaptor/forClass(java.lang.Class)
io/corbel/resources/api/RemResourceTest/testGetRelationWithWildCardId()#io/corbel/lib/token/TokenInfo/getUserId()
io/corbel/resources/api/RemResourceTest/testGetRelationWithWildCardId()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/resources/api/RemResourceTest/testGetRelationWithWildCardId()#javax/ws/rs/core/Response/ResponseBuilder/entity(java.lang.Object)
io/corbel/resources/api/RemResourceTest/testGetRelationWithWildCardId()#javax/ws/rs/client/SyncInvoker/get(java.lang.Class)
io/corbel/resources/api/RemResourceTest/testGetRelationWithWildCardId()#org/mockito/Matchers/any()
io/corbel/resources/api/RemResourceTest/testGetRelationWithWildCardId()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/resources/api/RemResourceTest/testGetRelationWithWildCardId()#org/mockito/Matchers/eq(T)
io/corbel/resources/api/RemResourceTest/testGetRelationWithWildCardId()#io/corbel/resources/rem/Rem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)
io/corbel/resources/api/RemResourceTest/testGetRelationWithWildCardId()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/resources/api/RemResourceTest/testGetRelationWithWildCardId()#io/corbel/resources/rem/request/RequestParameters/getTokenInfo()
io/corbel/resources/api/RemResourceTest/testGetRelationWithWildCardId()#javax/ws/rs/core/Response/ResponseBuilder/build()
io/corbel/resources/api/RemResourceTest/testGetRelationWithWildCardId()#javax/ws/rs/client/WebTarget/request()
io/corbel/resources/api/RemResourceTest/testGetRelationWithWildCardId()#org/fest/assertions/api/AbstractAssert/isSameAs(A)
io/corbel/resources/api/RemResourceTest/testGetRelationWithWildCardId()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/resources/api/RemResourceTest/testGetRelationWithWildCardId()#org/mockito/ArgumentCaptor/capture()
io/corbel/resources/api/RemResourceTest/testPutCollection()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/resources/api/RemResourceTest/testPutCollection()#org/mockito/ArgumentCaptor/getValue()
io/corbel/resources/api/RemResourceTest/testPutCollection()#javax/ws/rs/core/Response/ok()
io/corbel/resources/api/RemResourceTest/testPutCollection()#org/mockito/Mockito/when(T)
io/corbel/resources/api/RemResourceTest/testPutCollection()#io/corbel/lib/token/TokenInfo/getUserId()
io/corbel/resources/api/RemResourceTest/testPutCollection()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/resources/api/RemResourceTest/testPutCollection()#javax/ws/rs/core/Response/ResponseBuilder/entity(java.lang.Object)
io/corbel/resources/api/RemResourceTest/testPutCollection()#javax/ws/rs/client/SyncInvoker/put(javax.ws.rs.client.Entity,java.lang.Class)
io/corbel/resources/api/RemResourceTest/testPutCollection()#javax/ws/rs/client/Entity/json(T)
io/corbel/resources/api/RemResourceTest/testPutCollection()#org/mockito/Matchers/any()
io/corbel/resources/api/RemResourceTest/testPutCollection()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/resources/api/RemResourceTest/testPutCollection()#io/corbel/resources/rem/request/RequestParameters/getTokenInfo()
io/corbel/resources/api/RemResourceTest/testPutCollection()#javax/ws/rs/core/Response/ResponseBuilder/build()
io/corbel/resources/api/RemResourceTest/testPutCollection()#org/mockito/Matchers/any(java.lang.Class)
io/corbel/resources/api/RemResourceTest/testPutCollection()#org/mockito/ArgumentCaptor/forClass(java.lang.Class)
io/corbel/resources/api/RemResourceTest/testPutCollection()#io/corbel/resources/rem/Rem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional,java.util.Optional)
io/corbel/resources/api/RemResourceTest/testPutCollection()#javax/ws/rs/client/WebTarget/request()
io/corbel/resources/api/RemResourceTest/testPutCollection()#org/fest/assertions/api/AbstractAssert/isSameAs(A)
io/corbel/resources/api/RemResourceTest/testPutCollection()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/resources/api/RemResourceTest/testPutCollection()#org/mockito/ArgumentCaptor/capture()
io/corbel/resources/api/RemResourceTest/testPutCollection()#org/mockito/Mockito/reset(T[])
io/corbel/resources/api/RemResourceTest/testPutCollection()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/resources/api/RemResourceTest/testPutCollection()#org/mockito/Mockito/verifyZeroInteractions(java.lang.Object[])
io/corbel/resources/api/RemResourceTest/testPutCollection()#org/mockito/Matchers/eq(T)
io/corbel/resources/api/RemResourceTest/testGetRelationWithBadJsonAggregation()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/resources/api/RemResourceTest/testGetRelationWithBadJsonAggregation()#javax/ws/rs/core/Response/Status/getStatusCode()
io/corbel/resources/api/RemResourceTest/testGetRelationWithBadJsonAggregation()#javax/ws/rs/client/WebTarget/request(javax.ws.rs.core.MediaType[])
io/corbel/resources/api/RemResourceTest/testGetRelationWithBadJsonAggregation()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/resources/api/RemResourceTest/testGetRelationWithBadJsonAggregation()#javax/ws/rs/client/WebTarget/queryParam(java.lang.String,java.lang.Object[])
io/corbel/resources/api/RemResourceTest/testGetRelationWithBadJsonAggregation()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/resources/api/RemResourceTest/testGetRelationWithBadJsonAggregation()#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/api/RemResourceTest/testGetRelationWithBadJsonAggregation()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/resources/api/RemResourceTest/testGetRelationWithBadJsonAggregation()#javax/ws/rs/client/SyncInvoker/head()
io/corbel/resources/api/RemResourceTest/testGetRelationWithBadJsonAggregation()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithBadJSONAggregation()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithBadJSONAggregation()#javax/ws/rs/core/Response/Status/getStatusCode()
io/corbel/resources/api/RemResourceTest/testGetCollectionWithBadJSONAggregation()#javax/ws/rs/client/WebTarget/request(javax.ws.rs.core.MediaType[])
io/corbel/resources/api/RemResourceTest/testGetCollectionWithBadJSONAggregation()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/resources/api/RemResourceTest/testGetCollectionWithBadJSONAggregation()#javax/ws/rs/client/WebTarget/queryParam(java.lang.String,java.lang.Object[])
io/corbel/resources/api/RemResourceTest/testGetCollectionWithBadJSONAggregation()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithBadJSONAggregation()#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/api/RemResourceTest/testGetCollectionWithBadJSONAggregation()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithBadJSONAggregation()#javax/ws/rs/client/SyncInvoker/head()
io/corbel/resources/api/RemResourceTest/testGetCollectionWithBadJSONAggregation()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/resources/api/RemResourceTest/getJsonParser()#com/fasterxml/jackson/databind/ObjectMapper/getFactory()
io/corbel/resources/api/RemResourceTest/getJsonParser()#io/corbel/resources/api/RemResourceTest/getObjectMapper()
io/corbel/resources/api/RemResourceTest/getJsonParser()#io/corbel/lib/queries/parser/CustomJsonParser/CustomJsonParser(com.fasterxml.jackson.core.JsonFactory)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithIllegalPaginationParameters()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithIllegalPaginationParameters()#org/mockito/ArgumentCaptor/getValue()
io/corbel/resources/api/RemResourceTest/testGetCollectionWithIllegalPaginationParameters()#org/fest/assertions/api/Assertions/assertThat(boolean)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithIllegalPaginationParameters()#org/mockito/Mockito/when(T)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithIllegalPaginationParameters()#io/corbel/lib/token/TokenInfo/getUserId()
io/corbel/resources/api/RemResourceTest/testGetCollectionWithIllegalPaginationParameters()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/resources/api/RemResourceTest/testGetCollectionWithIllegalPaginationParameters()#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/api/RemResourceTest/testGetCollectionWithIllegalPaginationParameters()#org/mockito/Matchers/any()
io/corbel/resources/api/RemResourceTest/testGetCollectionWithIllegalPaginationParameters()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithIllegalPaginationParameters()#javax/ws/rs/core/Response/status(javax.ws.rs.core.Response.Status)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithIllegalPaginationParameters()#io/corbel/resources/rem/request/RequestParameters/getTokenInfo()
io/corbel/resources/api/RemResourceTest/testGetCollectionWithIllegalPaginationParameters()#javax/ws/rs/core/Response/ResponseBuilder/build()
io/corbel/resources/api/RemResourceTest/testGetCollectionWithIllegalPaginationParameters()#org/mockito/Matchers/any(java.lang.Class)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithIllegalPaginationParameters()#org/mockito/ArgumentCaptor/forClass(java.lang.Class)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithIllegalPaginationParameters()#io/corbel/resources/rem/Rem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional,java.util.Optional)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithIllegalPaginationParameters()#javax/ws/rs/client/WebTarget/queryParam(java.lang.String,java.lang.Object[])
io/corbel/resources/api/RemResourceTest/testGetCollectionWithIllegalPaginationParameters()#javax/ws/rs/client/WebTarget/request()
io/corbel/resources/api/RemResourceTest/testGetCollectionWithIllegalPaginationParameters()#org/fest/assertions/api/AbstractAssert/isSameAs(A)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithIllegalPaginationParameters()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithIllegalPaginationParameters()#org/mockito/ArgumentCaptor/capture()
io/corbel/resources/api/RemResourceTest/testGetCollectionWithIllegalPaginationParameters()#org/mockito/Matchers/eq(T)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithIllegalPaginationParameters()#javax/ws/rs/client/SyncInvoker/head()
io/corbel/resources/api/RemResourceTest/testGetCollectionWithPaginationDefaultsParameters()#io/corbel/resources/rem/request/RequestParameters/getApiParameters()
io/corbel/resources/api/RemResourceTest/testGetCollectionWithPaginationDefaultsParameters()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithPaginationDefaultsParameters()#org/mockito/ArgumentCaptor/getValue()
io/corbel/resources/api/RemResourceTest/testGetCollectionWithPaginationDefaultsParameters()#io/corbel/resources/rem/request/CollectionParameters/getPagination()
io/corbel/resources/api/RemResourceTest/testGetCollectionWithPaginationDefaultsParameters()#io/corbel/lib/queries/request/Pagination/Pagination(int,int)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithPaginationDefaultsParameters()#javax/ws/rs/core/Response/ok()
io/corbel/resources/api/RemResourceTest/testGetCollectionWithPaginationDefaultsParameters()#org/mockito/Mockito/when(T)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithPaginationDefaultsParameters()#io/corbel/lib/token/TokenInfo/getUserId()
io/corbel/resources/api/RemResourceTest/testGetCollectionWithPaginationDefaultsParameters()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/resources/api/RemResourceTest/testGetCollectionWithPaginationDefaultsParameters()#javax/ws/rs/core/Response/ResponseBuilder/entity(java.lang.Object)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithPaginationDefaultsParameters()#javax/ws/rs/client/SyncInvoker/get(java.lang.Class)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithPaginationDefaultsParameters()#org/mockito/Matchers/any()
io/corbel/resources/api/RemResourceTest/testGetCollectionWithPaginationDefaultsParameters()#org/mockito/Matchers/eq(T)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithPaginationDefaultsParameters()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithPaginationDefaultsParameters()#io/corbel/resources/rem/request/RequestParameters/getTokenInfo()
io/corbel/resources/api/RemResourceTest/testGetCollectionWithPaginationDefaultsParameters()#javax/ws/rs/core/Response/ResponseBuilder/build()
io/corbel/resources/api/RemResourceTest/testGetCollectionWithPaginationDefaultsParameters()#org/mockito/Matchers/any(java.lang.Class)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithPaginationDefaultsParameters()#org/mockito/ArgumentCaptor/forClass(java.lang.Class)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithPaginationDefaultsParameters()#io/corbel/resources/rem/Rem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional,java.util.Optional)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithPaginationDefaultsParameters()#javax/ws/rs/client/WebTarget/request()
io/corbel/resources/api/RemResourceTest/testGetCollectionWithPaginationDefaultsParameters()#org/fest/assertions/api/AbstractAssert/isSameAs(A)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithPaginationDefaultsParameters()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithPaginationDefaultsParameters()#org/mockito/ArgumentCaptor/capture()
io/corbel/resources/api/RemResourceTest/testGetCollectionWithPaginationDefaultsParameters()#org/fest/assertions/api/Assertions/assertThat(T)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithPaginationDefaultsParameters()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/resources/api/RemResourceTest/testDeleteRelationMember()#org/mockito/ArgumentCaptor/getValue()
io/corbel/resources/api/RemResourceTest/testDeleteRelationMember()#org/mockito/Mockito/when(T)
io/corbel/resources/api/RemResourceTest/testDeleteRelationMember()#org/mockito/ArgumentCaptor/forClass(java.lang.Class)
io/corbel/resources/api/RemResourceTest/testDeleteRelationMember()#io/corbel/lib/token/TokenInfo/getUserId()
io/corbel/resources/api/RemResourceTest/testDeleteRelationMember()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/resources/api/RemResourceTest/testDeleteRelationMember()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/resources/api/RemResourceTest/testDeleteRelationMember()#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/api/RemResourceTest/testDeleteRelationMember()#org/mockito/Matchers/any()
io/corbel/resources/api/RemResourceTest/testDeleteRelationMember()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/resources/api/RemResourceTest/testDeleteRelationMember()#javax/ws/rs/client/SyncInvoker/delete(java.lang.Class)
io/corbel/resources/api/RemResourceTest/testDeleteRelationMember()#org/mockito/Matchers/eq(T)
io/corbel/resources/api/RemResourceTest/testDeleteRelationMember()#io/corbel/resources/rem/Rem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)
io/corbel/resources/api/RemResourceTest/testDeleteRelationMember()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/resources/api/RemResourceTest/testDeleteRelationMember()#javax/ws/rs/core/Response/noContent()
io/corbel/resources/api/RemResourceTest/testDeleteRelationMember()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/resources/api/RemResourceTest/testDeleteRelationMember()#io/corbel/resources/rem/request/RequestParameters/getTokenInfo()
io/corbel/resources/api/RemResourceTest/testDeleteRelationMember()#javax/ws/rs/core/Response/ResponseBuilder/build()
io/corbel/resources/api/RemResourceTest/testDeleteRelationMember()#javax/ws/rs/client/WebTarget/request()
io/corbel/resources/api/RemResourceTest/testDeleteRelationMember()#org/fest/assertions/api/AbstractAssert/isSameAs(A)
io/corbel/resources/api/RemResourceTest/testDeleteRelationMember()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/resources/api/RemResourceTest/testDeleteRelationMember()#org/mockito/ArgumentCaptor/capture()
io/corbel/resources/api/RemResourceTest/testGetRelationWithIllegalPaginationParameters()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/resources/api/RemResourceTest/testGetRelationWithIllegalPaginationParameters()#org/mockito/ArgumentCaptor/getValue()
io/corbel/resources/api/RemResourceTest/testGetRelationWithIllegalPaginationParameters()#org/mockito/Mockito/when(T)
io/corbel/resources/api/RemResourceTest/testGetRelationWithIllegalPaginationParameters()#org/mockito/ArgumentCaptor/forClass(java.lang.Class)
io/corbel/resources/api/RemResourceTest/testGetRelationWithIllegalPaginationParameters()#io/corbel/lib/token/TokenInfo/getUserId()
io/corbel/resources/api/RemResourceTest/testGetRelationWithIllegalPaginationParameters()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/resources/api/RemResourceTest/testGetRelationWithIllegalPaginationParameters()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/resources/api/RemResourceTest/testGetRelationWithIllegalPaginationParameters()#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/api/RemResourceTest/testGetRelationWithIllegalPaginationParameters()#org/mockito/Matchers/any()
io/corbel/resources/api/RemResourceTest/testGetRelationWithIllegalPaginationParameters()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/resources/api/RemResourceTest/testGetRelationWithIllegalPaginationParameters()#javax/ws/rs/core/Response/status(javax.ws.rs.core.Response.Status)
io/corbel/resources/api/RemResourceTest/testGetRelationWithIllegalPaginationParameters()#io/corbel/resources/rem/Rem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)
io/corbel/resources/api/RemResourceTest/testGetRelationWithIllegalPaginationParameters()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/resources/api/RemResourceTest/testGetRelationWithIllegalPaginationParameters()#io/corbel/resources/rem/request/RequestParameters/getTokenInfo()
io/corbel/resources/api/RemResourceTest/testGetRelationWithIllegalPaginationParameters()#javax/ws/rs/core/Response/ResponseBuilder/build()
io/corbel/resources/api/RemResourceTest/testGetRelationWithIllegalPaginationParameters()#javax/ws/rs/client/WebTarget/queryParam(java.lang.String,java.lang.Object[])
io/corbel/resources/api/RemResourceTest/testGetRelationWithIllegalPaginationParameters()#javax/ws/rs/client/WebTarget/request()
io/corbel/resources/api/RemResourceTest/testGetRelationWithIllegalPaginationParameters()#org/fest/assertions/api/AbstractAssert/isSameAs(A)
io/corbel/resources/api/RemResourceTest/testGetRelationWithIllegalPaginationParameters()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/resources/api/RemResourceTest/testGetRelationWithIllegalPaginationParameters()#org/mockito/ArgumentCaptor/capture()
io/corbel/resources/api/RemResourceTest/testGetRelationWithIllegalPaginationParameters()#org/mockito/Matchers/eq(T)
io/corbel/resources/api/RemResourceTest/testGetRelationWithIllegalPaginationParameters()#javax/ws/rs/client/SyncInvoker/head()
io/corbel/resources/api/RemResourceTest/testDeleteRelationWithWildCardId()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/resources/api/RemResourceTest/testDeleteRelationWithWildCardId()#org/mockito/ArgumentCaptor/getValue()
io/corbel/resources/api/RemResourceTest/testDeleteRelationWithWildCardId()#javax/ws/rs/core/Response/ok()
io/corbel/resources/api/RemResourceTest/testDeleteRelationWithWildCardId()#org/mockito/Mockito/when(T)
io/corbel/resources/api/RemResourceTest/testDeleteRelationWithWildCardId()#org/mockito/ArgumentCaptor/forClass(java.lang.Class)
io/corbel/resources/api/RemResourceTest/testDeleteRelationWithWildCardId()#io/corbel/lib/token/TokenInfo/getUserId()
io/corbel/resources/api/RemResourceTest/testDeleteRelationWithWildCardId()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/resources/api/RemResourceTest/testDeleteRelationWithWildCardId()#javax/ws/rs/core/Response/ResponseBuilder/entity(java.lang.Object)
io/corbel/resources/api/RemResourceTest/testDeleteRelationWithWildCardId()#org/mockito/Matchers/any()
io/corbel/resources/api/RemResourceTest/testDeleteRelationWithWildCardId()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/resources/api/RemResourceTest/testDeleteRelationWithWildCardId()#javax/ws/rs/client/SyncInvoker/delete(java.lang.Class)
io/corbel/resources/api/RemResourceTest/testDeleteRelationWithWildCardId()#org/mockito/Matchers/eq(T)
io/corbel/resources/api/RemResourceTest/testDeleteRelationWithWildCardId()#io/corbel/resources/rem/Rem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)
io/corbel/resources/api/RemResourceTest/testDeleteRelationWithWildCardId()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/resources/api/RemResourceTest/testDeleteRelationWithWildCardId()#io/corbel/resources/rem/request/RequestParameters/getTokenInfo()
io/corbel/resources/api/RemResourceTest/testDeleteRelationWithWildCardId()#javax/ws/rs/core/Response/ResponseBuilder/build()
io/corbel/resources/api/RemResourceTest/testDeleteRelationWithWildCardId()#javax/ws/rs/client/WebTarget/request()
io/corbel/resources/api/RemResourceTest/testDeleteRelationWithWildCardId()#org/fest/assertions/api/AbstractAssert/isSameAs(A)
io/corbel/resources/api/RemResourceTest/testDeleteRelationWithWildCardId()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/resources/api/RemResourceTest/testDeleteRelationWithWildCardId()#org/mockito/ArgumentCaptor/capture()
io/corbel/resources/api/RemResourceTest/testGetRelationWithErrorAggregation()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/resources/api/RemResourceTest/testGetRelationWithErrorAggregation()#javax/ws/rs/core/Response/Status/getStatusCode()
io/corbel/resources/api/RemResourceTest/testGetRelationWithErrorAggregation()#java/net/URLEncoder/encode(java.lang.String,java.lang.String)
io/corbel/resources/api/RemResourceTest/testGetRelationWithErrorAggregation()#javax/ws/rs/client/WebTarget/request(javax.ws.rs.core.MediaType[])
io/corbel/resources/api/RemResourceTest/testGetRelationWithErrorAggregation()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/resources/api/RemResourceTest/testGetRelationWithErrorAggregation()#javax/ws/rs/client/WebTarget/queryParam(java.lang.String,java.lang.Object[])
io/corbel/resources/api/RemResourceTest/testGetRelationWithErrorAggregation()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/resources/api/RemResourceTest/testGetRelationWithErrorAggregation()#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/api/RemResourceTest/testGetRelationWithErrorAggregation()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/resources/api/RemResourceTest/testGetRelationWithErrorAggregation()#javax/ws/rs/client/SyncInvoker/head()
io/corbel/resources/api/RemResourceTest/testGetRelationWithErrorAggregation()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/resources/api/RemResourceTest/testGetRelation()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/resources/api/RemResourceTest/testGetRelation()#org/mockito/ArgumentCaptor/getValue()
io/corbel/resources/api/RemResourceTest/testGetRelation()#javax/ws/rs/core/Response/ok()
io/corbel/resources/api/RemResourceTest/testGetRelation()#org/mockito/Mockito/when(T)
io/corbel/resources/api/RemResourceTest/testGetRelation()#org/mockito/ArgumentCaptor/forClass(java.lang.Class)
io/corbel/resources/api/RemResourceTest/testGetRelation()#io/corbel/lib/token/TokenInfo/getUserId()
io/corbel/resources/api/RemResourceTest/testGetRelation()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/resources/api/RemResourceTest/testGetRelation()#javax/ws/rs/core/Response/ResponseBuilder/entity(java.lang.Object)
io/corbel/resources/api/RemResourceTest/testGetRelation()#javax/ws/rs/client/SyncInvoker/get(java.lang.Class)
io/corbel/resources/api/RemResourceTest/testGetRelation()#org/mockito/Matchers/any()
io/corbel/resources/api/RemResourceTest/testGetRelation()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/resources/api/RemResourceTest/testGetRelation()#org/mockito/Matchers/eq(T)
io/corbel/resources/api/RemResourceTest/testGetRelation()#io/corbel/resources/rem/Rem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)
io/corbel/resources/api/RemResourceTest/testGetRelation()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/resources/api/RemResourceTest/testGetRelation()#io/corbel/resources/rem/request/RequestParameters/getTokenInfo()
io/corbel/resources/api/RemResourceTest/testGetRelation()#javax/ws/rs/core/Response/ResponseBuilder/build()
io/corbel/resources/api/RemResourceTest/testGetRelation()#javax/ws/rs/client/WebTarget/request()
io/corbel/resources/api/RemResourceTest/testGetRelation()#org/fest/assertions/api/AbstractAssert/isSameAs(A)
io/corbel/resources/api/RemResourceTest/testGetRelation()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/resources/api/RemResourceTest/testGetRelation()#org/mockito/ArgumentCaptor/capture()
io/corbel/resources/api/RemResourceTest/createPaginationParser()#io/corbel/lib/queries/parser/DefaultPaginationParser/DefaultPaginationParser()
io/corbel/resources/api/RemResourceTest/testGetCollectionWithErrorAggregation()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithErrorAggregation()#javax/ws/rs/core/Response/Status/getStatusCode()
io/corbel/resources/api/RemResourceTest/testGetCollectionWithErrorAggregation()#java/net/URLEncoder/encode(java.lang.String,java.lang.String)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithErrorAggregation()#javax/ws/rs/client/WebTarget/request(javax.ws.rs.core.MediaType[])
io/corbel/resources/api/RemResourceTest/testGetCollectionWithErrorAggregation()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/resources/api/RemResourceTest/testGetCollectionWithErrorAggregation()#javax/ws/rs/client/WebTarget/queryParam(java.lang.String,java.lang.Object[])
io/corbel/resources/api/RemResourceTest/testGetCollectionWithErrorAggregation()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithErrorAggregation()#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/api/RemResourceTest/testGetCollectionWithErrorAggregation()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithErrorAggregation()#javax/ws/rs/client/SyncInvoker/head()
io/corbel/resources/api/RemResourceTest/testGetCollectionWithErrorAggregation()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/resources/api/RemResourceTest/testGetCollection()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/resources/api/RemResourceTest/testGetCollection()#org/mockito/ArgumentCaptor/getValue()
io/corbel/resources/api/RemResourceTest/testGetCollection()#javax/ws/rs/core/Response/ok()
io/corbel/resources/api/RemResourceTest/testGetCollection()#org/mockito/Mockito/when(T)
io/corbel/resources/api/RemResourceTest/testGetCollection()#io/corbel/lib/token/TokenInfo/getUserId()
io/corbel/resources/api/RemResourceTest/testGetCollection()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/resources/api/RemResourceTest/testGetCollection()#javax/ws/rs/core/Response/ResponseBuilder/entity(java.lang.Object)
io/corbel/resources/api/RemResourceTest/testGetCollection()#javax/ws/rs/client/SyncInvoker/get(java.lang.Class)
io/corbel/resources/api/RemResourceTest/testGetCollection()#org/mockito/Matchers/any()
io/corbel/resources/api/RemResourceTest/testGetCollection()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/resources/api/RemResourceTest/testGetCollection()#org/mockito/Matchers/eq(T)
io/corbel/resources/api/RemResourceTest/testGetCollection()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/resources/api/RemResourceTest/testGetCollection()#io/corbel/resources/rem/request/RequestParameters/getTokenInfo()
io/corbel/resources/api/RemResourceTest/testGetCollection()#javax/ws/rs/core/Response/ResponseBuilder/build()
io/corbel/resources/api/RemResourceTest/testGetCollection()#org/mockito/Matchers/any(java.lang.Class)
io/corbel/resources/api/RemResourceTest/testGetCollection()#org/mockito/ArgumentCaptor/forClass(java.lang.Class)
io/corbel/resources/api/RemResourceTest/testGetCollection()#io/corbel/resources/rem/Rem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional,java.util.Optional)
io/corbel/resources/api/RemResourceTest/testGetCollection()#javax/ws/rs/client/WebTarget/request()
io/corbel/resources/api/RemResourceTest/testGetCollection()#org/fest/assertions/api/AbstractAssert/isSameAs(A)
io/corbel/resources/api/RemResourceTest/testGetCollection()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/resources/api/RemResourceTest/testGetCollection()#org/mockito/ArgumentCaptor/capture()
io/corbel/resources/api/RemResourceTest/testGetCollectionWithRepeatField()#io/corbel/resources/rem/request/RequestParameters/getApiParameters()
io/corbel/resources/api/RemResourceTest/testGetCollectionWithRepeatField()#org/mockito/ArgumentCaptor/getValue()
io/corbel/resources/api/RemResourceTest/testGetCollectionWithRepeatField()#io/corbel/lib/queries/parser/QueryParser/parse(java.lang.String)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithRepeatField()#java/net/URLEncoder/encode(java.lang.String,java.lang.String)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithRepeatField()#javax/ws/rs/core/Response/ok()
io/corbel/resources/api/RemResourceTest/testGetCollectionWithRepeatField()#io/corbel/lib/token/TokenInfo/getUserId()
io/corbel/resources/api/RemResourceTest/testGetCollectionWithRepeatField()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/resources/api/RemResourceTest/testGetCollectionWithRepeatField()#javax/ws/rs/core/Response/ResponseBuilder/entity(java.lang.Object)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithRepeatField()#javax/ws/rs/client/SyncInvoker/get(java.lang.Class)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithRepeatField()#org/mockito/Matchers/any()
io/corbel/resources/api/RemResourceTest/testGetCollectionWithRepeatField()#org/mockito/Matchers/eq(T)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithRepeatField()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithRepeatField()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithRepeatField()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithRepeatField()#io/corbel/resources/rem/request/RequestParameters/getTokenInfo()
io/corbel/resources/api/RemResourceTest/testGetCollectionWithRepeatField()#javax/ws/rs/core/Response/ResponseBuilder/build()
io/corbel/resources/api/RemResourceTest/testGetCollectionWithRepeatField()#org/mockito/Mockito/when(T)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithRepeatField()#io/corbel/lib/queries/parser/JacksonQueryParser/parse(java.lang.String)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithRepeatField()#org/mockito/Matchers/any(java.lang.Class)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithRepeatField()#org/mockito/ArgumentCaptor/forClass(java.lang.Class)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithRepeatField()#io/corbel/resources/rem/Rem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional,java.util.Optional)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithRepeatField()#javax/ws/rs/client/WebTarget/queryParam(java.lang.String,java.lang.Object[])
io/corbel/resources/api/RemResourceTest/testGetCollectionWithRepeatField()#javax/ws/rs/client/WebTarget/request()
io/corbel/resources/api/RemResourceTest/testGetCollectionWithRepeatField()#org/fest/assertions/api/AbstractAssert/isSameAs(A)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithRepeatField()#java/util/Optional/of(T)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithRepeatField()#io/corbel/resources/api/RemResourceTest/createQueryParser()
io/corbel/resources/api/RemResourceTest/testGetCollectionWithRepeatField()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithRepeatField()#io/corbel/resources/rem/request/CollectionParameters/getQuery()
io/corbel/resources/api/RemResourceTest/testGetCollectionWithRepeatField()#org/mockito/ArgumentCaptor/capture()
io/corbel/resources/api/RemResourceTest/testGetCollectionWithRepeatField()#org/fest/assertions/api/Assertions/assertThat(T)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithRepeatField()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/resources/api/RemResourceTest/createSortParser()#io/corbel/resources/api/RemResourceTest/getJsonParser()
io/corbel/resources/api/RemResourceTest/createSortParser()#io/corbel/lib/queries/parser/JacksonSortParser/JacksonSortParser(io.corbel.lib.queries.parser.CustomJsonParser)
io/corbel/resources/api/RemResourceTest/testDeleteRelation()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/resources/api/RemResourceTest/testDeleteRelation()#org/mockito/ArgumentCaptor/getValue()
io/corbel/resources/api/RemResourceTest/testDeleteRelation()#javax/ws/rs/core/Response/ok()
io/corbel/resources/api/RemResourceTest/testDeleteRelation()#org/mockito/Mockito/when(T)
io/corbel/resources/api/RemResourceTest/testDeleteRelation()#org/mockito/ArgumentCaptor/forClass(java.lang.Class)
io/corbel/resources/api/RemResourceTest/testDeleteRelation()#io/corbel/lib/token/TokenInfo/getUserId()
io/corbel/resources/api/RemResourceTest/testDeleteRelation()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/resources/api/RemResourceTest/testDeleteRelation()#javax/ws/rs/core/Response/ResponseBuilder/entity(java.lang.Object)
io/corbel/resources/api/RemResourceTest/testDeleteRelation()#org/mockito/Matchers/any()
io/corbel/resources/api/RemResourceTest/testDeleteRelation()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/resources/api/RemResourceTest/testDeleteRelation()#javax/ws/rs/client/SyncInvoker/delete(java.lang.Class)
io/corbel/resources/api/RemResourceTest/testDeleteRelation()#org/mockito/Matchers/eq(T)
io/corbel/resources/api/RemResourceTest/testDeleteRelation()#io/corbel/resources/rem/Rem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)
io/corbel/resources/api/RemResourceTest/testDeleteRelation()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/resources/api/RemResourceTest/testDeleteRelation()#io/corbel/resources/rem/request/RequestParameters/getTokenInfo()
io/corbel/resources/api/RemResourceTest/testDeleteRelation()#javax/ws/rs/core/Response/ResponseBuilder/build()
io/corbel/resources/api/RemResourceTest/testDeleteRelation()#javax/ws/rs/client/WebTarget/request()
io/corbel/resources/api/RemResourceTest/testDeleteRelation()#org/fest/assertions/api/AbstractAssert/isSameAs(A)
io/corbel/resources/api/RemResourceTest/testDeleteRelation()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/resources/api/RemResourceTest/testDeleteRelation()#org/mockito/ArgumentCaptor/capture()
io/corbel/resources/api/RemResourceTest/createAggregationParser()#io/corbel/resources/api/RemResourceTest/getJsonParser()
io/corbel/resources/api/RemResourceTest/createAggregationParser()#io/corbel/lib/queries/parser/JacksonAggregationParser/JacksonAggregationParser(io.corbel.lib.queries.parser.CustomJsonParser)
io/corbel/resources/api/RemResourceTest/testPutResourceWithWildCardId()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/resources/api/RemResourceTest/testPutResourceWithWildCardId()#org/mockito/ArgumentCaptor/getValue()
io/corbel/resources/api/RemResourceTest/testPutResourceWithWildCardId()#javax/ws/rs/core/Response/ok()
io/corbel/resources/api/RemResourceTest/testPutResourceWithWildCardId()#org/mockito/Mockito/when(T)
io/corbel/resources/api/RemResourceTest/testPutResourceWithWildCardId()#io/corbel/lib/token/TokenInfo/getUserId()
io/corbel/resources/api/RemResourceTest/testPutResourceWithWildCardId()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/resources/api/RemResourceTest/testPutResourceWithWildCardId()#javax/ws/rs/core/Response/ResponseBuilder/entity(java.lang.Object)
io/corbel/resources/api/RemResourceTest/testPutResourceWithWildCardId()#javax/ws/rs/client/SyncInvoker/put(javax.ws.rs.client.Entity,java.lang.Class)
io/corbel/resources/api/RemResourceTest/testPutResourceWithWildCardId()#javax/ws/rs/client/Entity/json(T)
io/corbel/resources/api/RemResourceTest/testPutResourceWithWildCardId()#org/mockito/Matchers/any()
io/corbel/resources/api/RemResourceTest/testPutResourceWithWildCardId()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/resources/api/RemResourceTest/testPutResourceWithWildCardId()#org/mockito/Matchers/eq(T)
io/corbel/resources/api/RemResourceTest/testPutResourceWithWildCardId()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/resources/api/RemResourceTest/testPutResourceWithWildCardId()#io/corbel/resources/rem/request/RequestParameters/getTokenInfo()
io/corbel/resources/api/RemResourceTest/testPutResourceWithWildCardId()#javax/ws/rs/core/Response/ResponseBuilder/build()
io/corbel/resources/api/RemResourceTest/testPutResourceWithWildCardId()#org/mockito/Matchers/any(java.lang.Class)
io/corbel/resources/api/RemResourceTest/testPutResourceWithWildCardId()#org/mockito/ArgumentCaptor/forClass(java.lang.Class)
io/corbel/resources/api/RemResourceTest/testPutResourceWithWildCardId()#io/corbel/resources/rem/Rem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional,java.util.Optional)
io/corbel/resources/api/RemResourceTest/testPutResourceWithWildCardId()#javax/ws/rs/client/WebTarget/request()
io/corbel/resources/api/RemResourceTest/testPutResourceWithWildCardId()#org/fest/assertions/api/AbstractAssert/isSameAs(A)
io/corbel/resources/api/RemResourceTest/testPutResourceWithWildCardId()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/resources/api/RemResourceTest/testPutResourceWithWildCardId()#org/mockito/ArgumentCaptor/capture()
io/corbel/resources/api/RemResourceTest/testGetCollectionWithAggregation()#io/corbel/resources/rem/request/RequestParameters/getApiParameters()
io/corbel/resources/api/RemResourceTest/testGetCollectionWithAggregation()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithAggregation()#org/mockito/ArgumentCaptor/getValue()
io/corbel/resources/api/RemResourceTest/testGetCollectionWithAggregation()#java/net/URLEncoder/encode(java.lang.String,java.lang.String)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithAggregation()#org/mockito/Mockito/when(T)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithAggregation()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/resources/api/RemResourceTest/testGetCollectionWithAggregation()#java/util/Optional/of(T)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithAggregation()#javax/ws/rs/core/Response/ResponseBuilder/entity(java.lang.Object)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithAggregation()#javax/ws/rs/client/SyncInvoker/get(java.lang.Class)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithAggregation()#io/corbel/lib/queries/request/Count/Count(java.lang.String)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithAggregation()#org/mockito/Matchers/eq(T)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithAggregation()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithAggregation()#io/corbel/resources/rem/request/RequestParameters/getTokenInfo()
io/corbel/resources/api/RemResourceTest/testGetCollectionWithAggregation()#javax/ws/rs/core/Response/ResponseBuilder/build()
io/corbel/resources/api/RemResourceTest/testGetCollectionWithAggregation()#javax/ws/rs/client/WebTarget/request(java.lang.String[])
io/corbel/resources/api/RemResourceTest/testGetCollectionWithAggregation()#javax/ws/rs/core/Response/ok()
io/corbel/resources/api/RemResourceTest/testGetCollectionWithAggregation()#org/mockito/Matchers/any(java.lang.Class)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithAggregation()#org/mockito/ArgumentCaptor/forClass(java.lang.Class)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithAggregation()#io/corbel/lib/token/TokenInfo/getUserId()
io/corbel/resources/api/RemResourceTest/testGetCollectionWithAggregation()#io/corbel/resources/rem/request/CollectionParameters/getAggregation()
io/corbel/resources/api/RemResourceTest/testGetCollectionWithAggregation()#io/corbel/resources/rem/Rem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional,java.util.Optional)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithAggregation()#javax/ws/rs/client/WebTarget/queryParam(java.lang.String,java.lang.Object[])
io/corbel/resources/api/RemResourceTest/testGetCollectionWithAggregation()#org/fest/assertions/api/AbstractAssert/isSameAs(A)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithAggregation()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithAggregation()#org/mockito/ArgumentCaptor/capture()
io/corbel/resources/api/RemResourceTest/testGetCollectionWithAggregation()#org/mockito/Matchers/any()
io/corbel/resources/api/RemResourceTest/testGetCollectionWithAggregation()#java/util/Optional/empty()
io/corbel/resources/api/RemResourceTest/testGetCollectionWithAggregation()#org/fest/assertions/api/Assertions/assertThat(T)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithAggregation()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithSort()#io/corbel/resources/rem/request/RequestParameters/getApiParameters()
io/corbel/resources/api/RemResourceTest/testGetCollectionWithSort()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithSort()#org/mockito/ArgumentCaptor/getValue()
io/corbel/resources/api/RemResourceTest/testGetCollectionWithSort()#java/net/URLEncoder/encode(java.lang.String,java.lang.String)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithSort()#io/corbel/lib/queries/request/Sort/Sort(java.lang.String,java.lang.String)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithSort()#io/corbel/lib/token/TokenInfo/getUserId()
io/corbel/resources/api/RemResourceTest/testGetCollectionWithSort()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/resources/api/RemResourceTest/testGetCollectionWithSort()#java/util/Optional/of(T)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithSort()#javax/ws/rs/core/Response/ResponseBuilder/entity(java.lang.Object)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithSort()#javax/ws/rs/client/SyncInvoker/get(java.lang.Class)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithSort()#org/mockito/Matchers/eq(T)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithSort()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithSort()#io/corbel/resources/rem/request/RequestParameters/getTokenInfo()
io/corbel/resources/api/RemResourceTest/testGetCollectionWithSort()#javax/ws/rs/core/Response/ResponseBuilder/build()
io/corbel/resources/api/RemResourceTest/testGetCollectionWithSort()#javax/ws/rs/client/WebTarget/request(java.lang.String[])
io/corbel/resources/api/RemResourceTest/testGetCollectionWithSort()#javax/ws/rs/core/Response/ok()
io/corbel/resources/api/RemResourceTest/testGetCollectionWithSort()#org/mockito/Mockito/when(T)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithSort()#io/corbel/resources/rem/request/CollectionParameters/getSort()
io/corbel/resources/api/RemResourceTest/testGetCollectionWithSort()#org/mockito/Matchers/any(java.lang.Class)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithSort()#org/mockito/ArgumentCaptor/forClass(java.lang.Class)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithSort()#io/corbel/resources/rem/Rem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional,java.util.Optional)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithSort()#javax/ws/rs/client/WebTarget/queryParam(java.lang.String,java.lang.Object[])
io/corbel/resources/api/RemResourceTest/testGetCollectionWithSort()#org/fest/assertions/api/AbstractAssert/isSameAs(A)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithSort()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithSort()#org/mockito/ArgumentCaptor/capture()
io/corbel/resources/api/RemResourceTest/testGetCollectionWithSort()#org/mockito/Matchers/any()
io/corbel/resources/api/RemResourceTest/testGetCollectionWithSort()#java/util/Optional/empty()
io/corbel/resources/api/RemResourceTest/testGetCollectionWithSort()#org/fest/assertions/api/Assertions/assertThat(T)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithSort()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/resources/api/RemResourceTest/testGetRelationWithAggregation()#io/corbel/resources/rem/request/RequestParameters/getApiParameters()
io/corbel/resources/api/RemResourceTest/testGetRelationWithAggregation()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/resources/api/RemResourceTest/testGetRelationWithAggregation()#org/mockito/ArgumentCaptor/getValue()
io/corbel/resources/api/RemResourceTest/testGetRelationWithAggregation()#java/net/URLEncoder/encode(java.lang.String,java.lang.String)
io/corbel/resources/api/RemResourceTest/testGetRelationWithAggregation()#javax/ws/rs/core/Response/ok()
io/corbel/resources/api/RemResourceTest/testGetRelationWithAggregation()#org/mockito/Mockito/when(T)
io/corbel/resources/api/RemResourceTest/testGetRelationWithAggregation()#org/mockito/ArgumentCaptor/forClass(java.lang.Class)
io/corbel/resources/api/RemResourceTest/testGetRelationWithAggregation()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/resources/api/RemResourceTest/testGetRelationWithAggregation()#java/util/Optional/of(T)
io/corbel/resources/api/RemResourceTest/testGetRelationWithAggregation()#javax/ws/rs/core/Response/ResponseBuilder/entity(java.lang.Object)
io/corbel/resources/api/RemResourceTest/testGetRelationWithAggregation()#javax/ws/rs/client/SyncInvoker/get(java.lang.Class)
io/corbel/resources/api/RemResourceTest/testGetRelationWithAggregation()#io/corbel/lib/queries/request/Count/Count(java.lang.String)
io/corbel/resources/api/RemResourceTest/testGetRelationWithAggregation()#org/mockito/Matchers/any()
io/corbel/resources/api/RemResourceTest/testGetRelationWithAggregation()#org/mockito/Matchers/eq(T)
io/corbel/resources/api/RemResourceTest/testGetRelationWithAggregation()#io/corbel/resources/rem/Rem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)
io/corbel/resources/api/RemResourceTest/testGetRelationWithAggregation()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/resources/api/RemResourceTest/testGetRelationWithAggregation()#io/corbel/resources/rem/request/RequestParameters/getTokenInfo()
io/corbel/resources/api/RemResourceTest/testGetRelationWithAggregation()#javax/ws/rs/core/Response/ResponseBuilder/build()
io/corbel/resources/api/RemResourceTest/testGetRelationWithAggregation()#io/corbel/lib/token/TokenInfo/getUserId()
io/corbel/resources/api/RemResourceTest/testGetRelationWithAggregation()#io/corbel/resources/rem/request/CollectionParameters/getAggregation()
io/corbel/resources/api/RemResourceTest/testGetRelationWithAggregation()#javax/ws/rs/client/WebTarget/queryParam(java.lang.String,java.lang.Object[])
io/corbel/resources/api/RemResourceTest/testGetRelationWithAggregation()#javax/ws/rs/client/WebTarget/request()
io/corbel/resources/api/RemResourceTest/testGetRelationWithAggregation()#org/fest/assertions/api/AbstractAssert/isSameAs(A)
io/corbel/resources/api/RemResourceTest/testGetRelationWithAggregation()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/resources/api/RemResourceTest/testGetRelationWithAggregation()#org/mockito/ArgumentCaptor/capture()
io/corbel/resources/api/RemResourceTest/testGetRelationWithAggregation()#org/fest/assertions/api/Assertions/assertThat(T)
io/corbel/resources/api/RemResourceTest/testGetRelationWithAggregation()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/resources/api/RemResourceTest/testCustomParam()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/resources/api/RemResourceTest/testCustomParam()#org/mockito/ArgumentCaptor/getValue()
io/corbel/resources/api/RemResourceTest/testCustomParam()#javax/ws/rs/core/Response/ok()
io/corbel/resources/api/RemResourceTest/testCustomParam()#org/mockito/Mockito/when(T)
io/corbel/resources/api/RemResourceTest/testCustomParam()#io/corbel/lib/token/TokenInfo/getUserId()
io/corbel/resources/api/RemResourceTest/testCustomParam()#javax/ws/rs/core/Response/ResponseBuilder/entity(java.lang.Object)
io/corbel/resources/api/RemResourceTest/testCustomParam()#javax/ws/rs/client/SyncInvoker/get(java.lang.Class)
io/corbel/resources/api/RemResourceTest/testCustomParam()#org/mockito/Matchers/any()
io/corbel/resources/api/RemResourceTest/testCustomParam()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/resources/api/RemResourceTest/testCustomParam()#org/mockito/Matchers/eq(T)
io/corbel/resources/api/RemResourceTest/testCustomParam()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/resources/api/RemResourceTest/testCustomParam()#io/corbel/resources/rem/request/RequestParameters/getTokenInfo()
io/corbel/resources/api/RemResourceTest/testCustomParam()#javax/ws/rs/core/Response/ResponseBuilder/build()
io/corbel/resources/api/RemResourceTest/testCustomParam()#org/mockito/ArgumentCaptor/forClass(java.lang.Class)
io/corbel/resources/api/RemResourceTest/testCustomParam()#io/corbel/resources/rem/Rem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)
io/corbel/resources/api/RemResourceTest/testCustomParam()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/resources/api/RemResourceTest/testCustomParam()#io/corbel/resources/rem/request/RequestParameters/getCustomParameterValue(java.lang.String)
io/corbel/resources/api/RemResourceTest/testCustomParam()#javax/ws/rs/client/WebTarget/request()
io/corbel/resources/api/RemResourceTest/testCustomParam()#org/fest/assertions/api/AbstractAssert/isSameAs(A)
io/corbel/resources/api/RemResourceTest/testCustomParam()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/resources/api/RemResourceTest/testCustomParam()#org/mockito/ArgumentCaptor/capture()
io/corbel/resources/api/RemResourceTest/testGetRelationWithPaginationParameters()#io/corbel/resources/rem/request/RequestParameters/getApiParameters()
io/corbel/resources/api/RemResourceTest/testGetRelationWithPaginationParameters()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/resources/api/RemResourceTest/testGetRelationWithPaginationParameters()#org/mockito/ArgumentCaptor/getValue()
io/corbel/resources/api/RemResourceTest/testGetRelationWithPaginationParameters()#io/corbel/resources/rem/request/CollectionParameters/getPagination()
io/corbel/resources/api/RemResourceTest/testGetRelationWithPaginationParameters()#io/corbel/lib/queries/request/Pagination/Pagination(int,int)
io/corbel/resources/api/RemResourceTest/testGetRelationWithPaginationParameters()#javax/ws/rs/core/Response/ok()
io/corbel/resources/api/RemResourceTest/testGetRelationWithPaginationParameters()#org/mockito/Mockito/when(T)
io/corbel/resources/api/RemResourceTest/testGetRelationWithPaginationParameters()#org/mockito/ArgumentCaptor/forClass(java.lang.Class)
io/corbel/resources/api/RemResourceTest/testGetRelationWithPaginationParameters()#io/corbel/lib/token/TokenInfo/getUserId()
io/corbel/resources/api/RemResourceTest/testGetRelationWithPaginationParameters()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/resources/api/RemResourceTest/testGetRelationWithPaginationParameters()#javax/ws/rs/core/Response/ResponseBuilder/entity(java.lang.Object)
io/corbel/resources/api/RemResourceTest/testGetRelationWithPaginationParameters()#javax/ws/rs/client/SyncInvoker/get(java.lang.Class)
io/corbel/resources/api/RemResourceTest/testGetRelationWithPaginationParameters()#org/mockito/Matchers/any()
io/corbel/resources/api/RemResourceTest/testGetRelationWithPaginationParameters()#org/mockito/Matchers/eq(T)
io/corbel/resources/api/RemResourceTest/testGetRelationWithPaginationParameters()#io/corbel/resources/rem/Rem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)
io/corbel/resources/api/RemResourceTest/testGetRelationWithPaginationParameters()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/resources/api/RemResourceTest/testGetRelationWithPaginationParameters()#io/corbel/resources/rem/request/RequestParameters/getTokenInfo()
io/corbel/resources/api/RemResourceTest/testGetRelationWithPaginationParameters()#javax/ws/rs/core/Response/ResponseBuilder/build()
io/corbel/resources/api/RemResourceTest/testGetRelationWithPaginationParameters()#javax/ws/rs/client/WebTarget/queryParam(java.lang.String,java.lang.Object[])
io/corbel/resources/api/RemResourceTest/testGetRelationWithPaginationParameters()#javax/ws/rs/client/WebTarget/request()
io/corbel/resources/api/RemResourceTest/testGetRelationWithPaginationParameters()#org/fest/assertions/api/AbstractAssert/isSameAs(A)
io/corbel/resources/api/RemResourceTest/testGetRelationWithPaginationParameters()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/resources/api/RemResourceTest/testGetRelationWithPaginationParameters()#org/mockito/ArgumentCaptor/capture()
io/corbel/resources/api/RemResourceTest/testGetRelationWithPaginationParameters()#org/fest/assertions/api/Assertions/assertThat(T)
io/corbel/resources/api/RemResourceTest/testGetRelationWithPaginationParameters()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithErrorSort()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithErrorSort()#javax/ws/rs/core/Response/Status/getStatusCode()
io/corbel/resources/api/RemResourceTest/testGetCollectionWithErrorSort()#java/net/URLEncoder/encode(java.lang.String,java.lang.String)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithErrorSort()#javax/ws/rs/client/WebTarget/request(javax.ws.rs.core.MediaType[])
io/corbel/resources/api/RemResourceTest/testGetCollectionWithErrorSort()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/resources/api/RemResourceTest/testGetCollectionWithErrorSort()#javax/ws/rs/client/WebTarget/queryParam(java.lang.String,java.lang.Object[])
io/corbel/resources/api/RemResourceTest/testGetCollectionWithErrorSort()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithErrorSort()#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/api/RemResourceTest/testGetCollectionWithErrorSort()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithErrorSort()#javax/ws/rs/client/SyncInvoker/head()
io/corbel/resources/api/RemResourceTest/testGetCollectionWithErrorSort()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithRegex()#io/corbel/resources/rem/request/RequestParameters/getApiParameters()
io/corbel/resources/api/RemResourceTest/testGetCollectionWithRegex()#org/mockito/ArgumentCaptor/getValue()
io/corbel/resources/api/RemResourceTest/testGetCollectionWithRegex()#io/corbel/lib/queries/parser/QueryParser/parse(java.lang.String)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithRegex()#java/net/URLEncoder/encode(java.lang.String,java.lang.String)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithRegex()#javax/ws/rs/core/Response/ok()
io/corbel/resources/api/RemResourceTest/testGetCollectionWithRegex()#io/corbel/lib/token/TokenInfo/getUserId()
io/corbel/resources/api/RemResourceTest/testGetCollectionWithRegex()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/resources/api/RemResourceTest/testGetCollectionWithRegex()#javax/ws/rs/core/Response/ResponseBuilder/entity(java.lang.Object)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithRegex()#javax/ws/rs/client/SyncInvoker/get(java.lang.Class)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithRegex()#org/mockito/Matchers/any()
io/corbel/resources/api/RemResourceTest/testGetCollectionWithRegex()#org/mockito/Matchers/eq(T)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithRegex()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithRegex()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithRegex()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithRegex()#io/corbel/resources/rem/request/RequestParameters/getTokenInfo()
io/corbel/resources/api/RemResourceTest/testGetCollectionWithRegex()#javax/ws/rs/core/Response/ResponseBuilder/build()
io/corbel/resources/api/RemResourceTest/testGetCollectionWithRegex()#org/mockito/Mockito/when(T)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithRegex()#io/corbel/lib/queries/parser/JacksonQueryParser/parse(java.lang.String)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithRegex()#org/mockito/Matchers/any(java.lang.Class)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithRegex()#org/mockito/ArgumentCaptor/forClass(java.lang.Class)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithRegex()#io/corbel/resources/rem/Rem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional,java.util.Optional)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithRegex()#javax/ws/rs/client/WebTarget/queryParam(java.lang.String,java.lang.Object[])
io/corbel/resources/api/RemResourceTest/testGetCollectionWithRegex()#javax/ws/rs/client/WebTarget/request()
io/corbel/resources/api/RemResourceTest/testGetCollectionWithRegex()#org/fest/assertions/api/AbstractAssert/isSameAs(A)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithRegex()#java/util/Optional/of(T)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithRegex()#io/corbel/resources/api/RemResourceTest/createQueryParser()
io/corbel/resources/api/RemResourceTest/testGetCollectionWithRegex()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithRegex()#io/corbel/resources/rem/request/CollectionParameters/getQuery()
io/corbel/resources/api/RemResourceTest/testGetCollectionWithRegex()#org/mockito/ArgumentCaptor/capture()
io/corbel/resources/api/RemResourceTest/testGetCollectionWithRegex()#org/fest/assertions/api/Assertions/assertThat(T)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithRegex()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/resources/api/RemResourceTest/testPutResource()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/resources/api/RemResourceTest/testPutResource()#org/mockito/ArgumentCaptor/getValue()
io/corbel/resources/api/RemResourceTest/testPutResource()#io/corbel/resources/rem/request/ResourceId/getId()
io/corbel/resources/api/RemResourceTest/testPutResource()#org/mockito/Mockito/when(T)
io/corbel/resources/api/RemResourceTest/testPutResource()#io/corbel/lib/token/TokenInfo/getUserId()
io/corbel/resources/api/RemResourceTest/testPutResource()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/resources/api/RemResourceTest/testPutResource()#javax/ws/rs/core/Response/ResponseBuilder/entity(java.lang.Object)
io/corbel/resources/api/RemResourceTest/testPutResource()#javax/ws/rs/client/SyncInvoker/put(javax.ws.rs.client.Entity,java.lang.Class)
io/corbel/resources/api/RemResourceTest/testPutResource()#javax/ws/rs/client/Entity/json(T)
io/corbel/resources/api/RemResourceTest/testPutResource()#io/corbel/event/ResourceEvent/updateResourceEvent(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
io/corbel/resources/api/RemResourceTest/testPutResource()#org/mockito/Matchers/any()
io/corbel/resources/api/RemResourceTest/testPutResource()#org/mockito/Matchers/eq(T)
io/corbel/resources/api/RemResourceTest/testPutResource()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/resources/api/RemResourceTest/testPutResource()#io/corbel/resources/rem/request/RequestParameters/getTokenInfo()
io/corbel/resources/api/RemResourceTest/testPutResource()#javax/ws/rs/core/Response/ResponseBuilder/build()
io/corbel/resources/api/RemResourceTest/testPutResource()#io/corbel/eventbus/service/EventBus/dispatch(io.corbel.eventbus.Event)
io/corbel/resources/api/RemResourceTest/testPutResource()#javax/ws/rs/core/Response/ok()
io/corbel/resources/api/RemResourceTest/testPutResource()#org/mockito/ArgumentCaptor/forClass(java.lang.Class)
io/corbel/resources/api/RemResourceTest/testPutResource()#org/mockito/Mockito/verify(T)
io/corbel/resources/api/RemResourceTest/testPutResource()#io/corbel/resources/rem/Rem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)
io/corbel/resources/api/RemResourceTest/testPutResource()#javax/ws/rs/client/WebTarget/request()
io/corbel/resources/api/RemResourceTest/testPutResource()#org/fest/assertions/api/AbstractAssert/isSameAs(A)
io/corbel/resources/api/RemResourceTest/testPutResource()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/resources/api/RemResourceTest/testPutResource()#org/mockito/ArgumentCaptor/capture()
io/corbel/resources/api/RemResourceTest/testPutResource()#org/mockito/Mockito/reset(T[])
io/corbel/resources/api/RemResourceTest/testPutResource()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/resources/api/RemResourceTest/createQueryParser()#io/corbel/resources/api/RemResourceTest/getJsonParser()
io/corbel/resources/api/RemResourceTest/createQueryParser()#io/corbel/lib/queries/parser/JacksonQueryParser/JacksonQueryParser(io.corbel.lib.queries.parser.CustomJsonParser)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithPaginationParameters()#io/corbel/resources/rem/request/RequestParameters/getApiParameters()
io/corbel/resources/api/RemResourceTest/testGetCollectionWithPaginationParameters()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithPaginationParameters()#org/mockito/ArgumentCaptor/getValue()
io/corbel/resources/api/RemResourceTest/testGetCollectionWithPaginationParameters()#io/corbel/resources/rem/request/CollectionParameters/getPagination()
io/corbel/resources/api/RemResourceTest/testGetCollectionWithPaginationParameters()#io/corbel/lib/queries/request/Pagination/Pagination(int,int)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithPaginationParameters()#javax/ws/rs/core/Response/ok()
io/corbel/resources/api/RemResourceTest/testGetCollectionWithPaginationParameters()#org/mockito/Mockito/when(T)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithPaginationParameters()#io/corbel/lib/token/TokenInfo/getUserId()
io/corbel/resources/api/RemResourceTest/testGetCollectionWithPaginationParameters()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/resources/api/RemResourceTest/testGetCollectionWithPaginationParameters()#javax/ws/rs/core/Response/ResponseBuilder/entity(java.lang.Object)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithPaginationParameters()#javax/ws/rs/client/SyncInvoker/get(java.lang.Class)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithPaginationParameters()#org/mockito/Matchers/any()
io/corbel/resources/api/RemResourceTest/testGetCollectionWithPaginationParameters()#org/mockito/Matchers/eq(T)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithPaginationParameters()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithPaginationParameters()#io/corbel/resources/rem/request/RequestParameters/getTokenInfo()
io/corbel/resources/api/RemResourceTest/testGetCollectionWithPaginationParameters()#javax/ws/rs/core/Response/ResponseBuilder/build()
io/corbel/resources/api/RemResourceTest/testGetCollectionWithPaginationParameters()#org/mockito/Matchers/any(java.lang.Class)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithPaginationParameters()#org/mockito/ArgumentCaptor/forClass(java.lang.Class)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithPaginationParameters()#io/corbel/resources/rem/Rem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional,java.util.Optional)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithPaginationParameters()#javax/ws/rs/client/WebTarget/queryParam(java.lang.String,java.lang.Object[])
io/corbel/resources/api/RemResourceTest/testGetCollectionWithPaginationParameters()#javax/ws/rs/client/WebTarget/request()
io/corbel/resources/api/RemResourceTest/testGetCollectionWithPaginationParameters()#org/fest/assertions/api/AbstractAssert/isSameAs(A)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithPaginationParameters()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithPaginationParameters()#org/mockito/ArgumentCaptor/capture()
io/corbel/resources/api/RemResourceTest/testGetCollectionWithPaginationParameters()#org/fest/assertions/api/Assertions/assertThat(T)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithPaginationParameters()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithQuery()#io/corbel/resources/rem/request/RequestParameters/getApiParameters()
io/corbel/resources/api/RemResourceTest/testGetCollectionWithQuery()#org/mockito/ArgumentCaptor/getValue()
io/corbel/resources/api/RemResourceTest/testGetCollectionWithQuery()#io/corbel/lib/queries/parser/QueryParser/parse(java.lang.String)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithQuery()#java/net/URLEncoder/encode(java.lang.String,java.lang.String)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithQuery()#javax/ws/rs/core/Response/ok()
io/corbel/resources/api/RemResourceTest/testGetCollectionWithQuery()#io/corbel/lib/token/TokenInfo/getUserId()
io/corbel/resources/api/RemResourceTest/testGetCollectionWithQuery()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/resources/api/RemResourceTest/testGetCollectionWithQuery()#javax/ws/rs/core/Response/ResponseBuilder/entity(java.lang.Object)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithQuery()#javax/ws/rs/client/SyncInvoker/get(java.lang.Class)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithQuery()#org/mockito/Matchers/any()
io/corbel/resources/api/RemResourceTest/testGetCollectionWithQuery()#org/mockito/Matchers/eq(T)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithQuery()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithQuery()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithQuery()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithQuery()#io/corbel/resources/rem/request/RequestParameters/getTokenInfo()
io/corbel/resources/api/RemResourceTest/testGetCollectionWithQuery()#javax/ws/rs/core/Response/ResponseBuilder/build()
io/corbel/resources/api/RemResourceTest/testGetCollectionWithQuery()#org/mockito/Mockito/when(T)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithQuery()#io/corbel/lib/queries/parser/JacksonQueryParser/parse(java.lang.String)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithQuery()#org/mockito/Matchers/any(java.lang.Class)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithQuery()#org/mockito/ArgumentCaptor/forClass(java.lang.Class)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithQuery()#io/corbel/resources/rem/Rem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional,java.util.Optional)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithQuery()#javax/ws/rs/client/WebTarget/queryParam(java.lang.String,java.lang.Object[])
io/corbel/resources/api/RemResourceTest/testGetCollectionWithQuery()#javax/ws/rs/client/WebTarget/request()
io/corbel/resources/api/RemResourceTest/testGetCollectionWithQuery()#org/fest/assertions/api/AbstractAssert/isSameAs(A)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithQuery()#java/util/Optional/of(T)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithQuery()#io/corbel/resources/api/RemResourceTest/createQueryParser()
io/corbel/resources/api/RemResourceTest/testGetCollectionWithQuery()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithQuery()#io/corbel/resources/rem/request/CollectionParameters/getQuery()
io/corbel/resources/api/RemResourceTest/testGetCollectionWithQuery()#org/mockito/ArgumentCaptor/capture()
io/corbel/resources/api/RemResourceTest/testGetCollectionWithQuery()#org/fest/assertions/api/Assertions/assertThat(T)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithQuery()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/resources/api/RemResourceTest/testGetRelationWithErrorSort()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/resources/api/RemResourceTest/testGetRelationWithErrorSort()#javax/ws/rs/core/Response/Status/getStatusCode()
io/corbel/resources/api/RemResourceTest/testGetRelationWithErrorSort()#java/net/URLEncoder/encode(java.lang.String,java.lang.String)
io/corbel/resources/api/RemResourceTest/testGetRelationWithErrorSort()#javax/ws/rs/client/WebTarget/request(javax.ws.rs.core.MediaType[])
io/corbel/resources/api/RemResourceTest/testGetRelationWithErrorSort()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/resources/api/RemResourceTest/testGetRelationWithErrorSort()#javax/ws/rs/client/WebTarget/queryParam(java.lang.String,java.lang.Object[])
io/corbel/resources/api/RemResourceTest/testGetRelationWithErrorSort()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/resources/api/RemResourceTest/testGetRelationWithErrorSort()#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/api/RemResourceTest/testGetRelationWithErrorSort()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/resources/api/RemResourceTest/testGetRelationWithErrorSort()#javax/ws/rs/client/SyncInvoker/head()
io/corbel/resources/api/RemResourceTest/testGetRelationWithErrorSort()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/resources/api/RemResourceTest/testGetResourceWithWildCardId()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/resources/api/RemResourceTest/testGetResourceWithWildCardId()#org/mockito/ArgumentCaptor/getValue()
io/corbel/resources/api/RemResourceTest/testGetResourceWithWildCardId()#javax/ws/rs/core/Response/ok()
io/corbel/resources/api/RemResourceTest/testGetResourceWithWildCardId()#org/mockito/Mockito/when(T)
io/corbel/resources/api/RemResourceTest/testGetResourceWithWildCardId()#io/corbel/lib/token/TokenInfo/getUserId()
io/corbel/resources/api/RemResourceTest/testGetResourceWithWildCardId()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/resources/api/RemResourceTest/testGetResourceWithWildCardId()#javax/ws/rs/core/Response/ResponseBuilder/entity(java.lang.Object)
io/corbel/resources/api/RemResourceTest/testGetResourceWithWildCardId()#javax/ws/rs/client/SyncInvoker/get(java.lang.Class)
io/corbel/resources/api/RemResourceTest/testGetResourceWithWildCardId()#org/mockito/Matchers/any()
io/corbel/resources/api/RemResourceTest/testGetResourceWithWildCardId()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/resources/api/RemResourceTest/testGetResourceWithWildCardId()#org/mockito/Matchers/eq(T)
io/corbel/resources/api/RemResourceTest/testGetResourceWithWildCardId()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/resources/api/RemResourceTest/testGetResourceWithWildCardId()#io/corbel/resources/rem/request/RequestParameters/getTokenInfo()
io/corbel/resources/api/RemResourceTest/testGetResourceWithWildCardId()#javax/ws/rs/core/Response/ResponseBuilder/build()
io/corbel/resources/api/RemResourceTest/testGetResourceWithWildCardId()#org/mockito/Matchers/any(java.lang.Class)
io/corbel/resources/api/RemResourceTest/testGetResourceWithWildCardId()#org/mockito/ArgumentCaptor/forClass(java.lang.Class)
io/corbel/resources/api/RemResourceTest/testGetResourceWithWildCardId()#io/corbel/resources/rem/Rem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional,java.util.Optional)
io/corbel/resources/api/RemResourceTest/testGetResourceWithWildCardId()#javax/ws/rs/client/WebTarget/request()
io/corbel/resources/api/RemResourceTest/testGetResourceWithWildCardId()#org/fest/assertions/api/AbstractAssert/isSameAs(A)
io/corbel/resources/api/RemResourceTest/testGetResourceWithWildCardId()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/resources/api/RemResourceTest/testGetResourceWithWildCardId()#org/mockito/ArgumentCaptor/capture()
io/corbel/resources/api/RemResourceTest/testPostCollectionWithoutLocation()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/resources/api/RemResourceTest/testPostCollectionWithoutLocation()#org/mockito/ArgumentCaptor/getValue()
io/corbel/resources/api/RemResourceTest/testPostCollectionWithoutLocation()#javax/ws/rs/core/Response/ok()
io/corbel/resources/api/RemResourceTest/testPostCollectionWithoutLocation()#org/mockito/Mockito/when(T)
io/corbel/resources/api/RemResourceTest/testPostCollectionWithoutLocation()#io/corbel/lib/token/TokenInfo/getUserId()
io/corbel/resources/api/RemResourceTest/testPostCollectionWithoutLocation()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/resources/api/RemResourceTest/testPostCollectionWithoutLocation()#javax/ws/rs/core/Response/ResponseBuilder/entity(java.lang.Object)
io/corbel/resources/api/RemResourceTest/testPostCollectionWithoutLocation()#javax/ws/rs/client/Entity/json(T)
io/corbel/resources/api/RemResourceTest/testPostCollectionWithoutLocation()#org/mockito/Matchers/any()
io/corbel/resources/api/RemResourceTest/testPostCollectionWithoutLocation()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/resources/api/RemResourceTest/testPostCollectionWithoutLocation()#javax/ws/rs/client/SyncInvoker/post(javax.ws.rs.client.Entity,java.lang.Class)
io/corbel/resources/api/RemResourceTest/testPostCollectionWithoutLocation()#io/corbel/resources/rem/request/RequestParameters/getTokenInfo()
io/corbel/resources/api/RemResourceTest/testPostCollectionWithoutLocation()#javax/ws/rs/core/Response/ResponseBuilder/build()
io/corbel/resources/api/RemResourceTest/testPostCollectionWithoutLocation()#org/mockito/Matchers/any(java.lang.Class)
io/corbel/resources/api/RemResourceTest/testPostCollectionWithoutLocation()#org/mockito/ArgumentCaptor/forClass(java.lang.Class)
io/corbel/resources/api/RemResourceTest/testPostCollectionWithoutLocation()#io/corbel/resources/rem/Rem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional,java.util.Optional)
io/corbel/resources/api/RemResourceTest/testPostCollectionWithoutLocation()#javax/ws/rs/client/WebTarget/request()
io/corbel/resources/api/RemResourceTest/testPostCollectionWithoutLocation()#org/fest/assertions/api/AbstractAssert/isSameAs(A)
io/corbel/resources/api/RemResourceTest/testPostCollectionWithoutLocation()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/resources/api/RemResourceTest/testPostCollectionWithoutLocation()#org/mockito/ArgumentCaptor/capture()
io/corbel/resources/api/RemResourceTest/testPostCollectionWithoutLocation()#org/mockito/Mockito/reset(T[])
io/corbel/resources/api/RemResourceTest/testPostCollectionWithoutLocation()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/resources/api/RemResourceTest/testPostCollectionWithoutLocation()#org/mockito/Mockito/verifyZeroInteractions(java.lang.Object[])
io/corbel/resources/api/RemResourceTest/testPostCollectionWithoutLocation()#org/mockito/Matchers/eq(T)
io/corbel/resources/api/RemResourceTest/testGetRelationWithQuery()#io/corbel/resources/rem/request/RequestParameters/getApiParameters()
io/corbel/resources/api/RemResourceTest/testGetRelationWithQuery()#org/mockito/ArgumentCaptor/getValue()
io/corbel/resources/api/RemResourceTest/testGetRelationWithQuery()#io/corbel/lib/queries/parser/QueryParser/parse(java.lang.String)
io/corbel/resources/api/RemResourceTest/testGetRelationWithQuery()#java/net/URLEncoder/encode(java.lang.String,java.lang.String)
io/corbel/resources/api/RemResourceTest/testGetRelationWithQuery()#javax/ws/rs/core/Response/ok()
io/corbel/resources/api/RemResourceTest/testGetRelationWithQuery()#org/mockito/ArgumentCaptor/forClass(java.lang.Class)
io/corbel/resources/api/RemResourceTest/testGetRelationWithQuery()#io/corbel/lib/token/TokenInfo/getUserId()
io/corbel/resources/api/RemResourceTest/testGetRelationWithQuery()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/resources/api/RemResourceTest/testGetRelationWithQuery()#javax/ws/rs/core/Response/ResponseBuilder/entity(java.lang.Object)
io/corbel/resources/api/RemResourceTest/testGetRelationWithQuery()#javax/ws/rs/client/SyncInvoker/get(java.lang.Class)
io/corbel/resources/api/RemResourceTest/testGetRelationWithQuery()#org/mockito/Matchers/any()
io/corbel/resources/api/RemResourceTest/testGetRelationWithQuery()#org/mockito/Matchers/eq(T)
io/corbel/resources/api/RemResourceTest/testGetRelationWithQuery()#io/corbel/resources/rem/Rem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)
io/corbel/resources/api/RemResourceTest/testGetRelationWithQuery()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/resources/api/RemResourceTest/testGetRelationWithQuery()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/api/RemResourceTest/testGetRelationWithQuery()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/resources/api/RemResourceTest/testGetRelationWithQuery()#io/corbel/resources/rem/request/RequestParameters/getTokenInfo()
io/corbel/resources/api/RemResourceTest/testGetRelationWithQuery()#javax/ws/rs/core/Response/ResponseBuilder/build()
io/corbel/resources/api/RemResourceTest/testGetRelationWithQuery()#org/mockito/Mockito/when(T)
io/corbel/resources/api/RemResourceTest/testGetRelationWithQuery()#io/corbel/lib/queries/parser/JacksonQueryParser/parse(java.lang.String)
io/corbel/resources/api/RemResourceTest/testGetRelationWithQuery()#javax/ws/rs/client/WebTarget/queryParam(java.lang.String,java.lang.Object[])
io/corbel/resources/api/RemResourceTest/testGetRelationWithQuery()#javax/ws/rs/client/WebTarget/request()
io/corbel/resources/api/RemResourceTest/testGetRelationWithQuery()#org/fest/assertions/api/AbstractAssert/isSameAs(A)
io/corbel/resources/api/RemResourceTest/testGetRelationWithQuery()#java/util/Optional/of(T)
io/corbel/resources/api/RemResourceTest/testGetRelationWithQuery()#io/corbel/resources/api/RemResourceTest/createQueryParser()
io/corbel/resources/api/RemResourceTest/testGetRelationWithQuery()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/resources/api/RemResourceTest/testGetRelationWithQuery()#io/corbel/resources/rem/request/CollectionParameters/getQuery()
io/corbel/resources/api/RemResourceTest/testGetRelationWithQuery()#org/mockito/ArgumentCaptor/capture()
io/corbel/resources/api/RemResourceTest/testGetRelationWithQuery()#org/fest/assertions/api/Assertions/assertThat(T)
io/corbel/resources/api/RemResourceTest/testGetRelationWithQuery()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/resources/api/RemResourceTest/createSearchParser()#io/corbel/resources/api/RemResourceTest/getObjectMapper()
io/corbel/resources/api/RemResourceTest/createSearchParser()#io/corbel/lib/queries/parser/CustomSearchParser/CustomSearchParser(com.fasterxml.jackson.databind.ObjectMapper)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithBadJSONSort()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithBadJSONSort()#javax/ws/rs/core/Response/Status/getStatusCode()
io/corbel/resources/api/RemResourceTest/testGetCollectionWithBadJSONSort()#javax/ws/rs/client/WebTarget/request(javax.ws.rs.core.MediaType[])
io/corbel/resources/api/RemResourceTest/testGetCollectionWithBadJSONSort()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/resources/api/RemResourceTest/testGetCollectionWithBadJSONSort()#javax/ws/rs/client/WebTarget/queryParam(java.lang.String,java.lang.Object[])
io/corbel/resources/api/RemResourceTest/testGetCollectionWithBadJSONSort()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithBadJSONSort()#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/api/RemResourceTest/testGetCollectionWithBadJSONSort()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithBadJSONSort()#javax/ws/rs/client/SyncInvoker/head()
io/corbel/resources/api/RemResourceTest/testGetCollectionWithBadJSONSort()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/resources/api/RemResourceTest/testGetResource()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/resources/api/RemResourceTest/testGetResource()#org/mockito/ArgumentCaptor/getValue()
io/corbel/resources/api/RemResourceTest/testGetResource()#javax/ws/rs/core/Response/ok()
io/corbel/resources/api/RemResourceTest/testGetResource()#org/mockito/Mockito/when(T)
io/corbel/resources/api/RemResourceTest/testGetResource()#io/corbel/lib/token/TokenInfo/getUserId()
io/corbel/resources/api/RemResourceTest/testGetResource()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/resources/api/RemResourceTest/testGetResource()#javax/ws/rs/core/Response/ResponseBuilder/entity(java.lang.Object)
io/corbel/resources/api/RemResourceTest/testGetResource()#javax/ws/rs/client/SyncInvoker/get(java.lang.Class)
io/corbel/resources/api/RemResourceTest/testGetResource()#org/mockito/Matchers/any()
io/corbel/resources/api/RemResourceTest/testGetResource()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/resources/api/RemResourceTest/testGetResource()#org/mockito/Matchers/eq(T)
io/corbel/resources/api/RemResourceTest/testGetResource()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/resources/api/RemResourceTest/testGetResource()#io/corbel/resources/rem/request/RequestParameters/getTokenInfo()
io/corbel/resources/api/RemResourceTest/testGetResource()#javax/ws/rs/core/Response/ResponseBuilder/build()
io/corbel/resources/api/RemResourceTest/testGetResource()#org/mockito/ArgumentCaptor/forClass(java.lang.Class)
io/corbel/resources/api/RemResourceTest/testGetResource()#io/corbel/resources/rem/Rem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)
io/corbel/resources/api/RemResourceTest/testGetResource()#javax/ws/rs/client/WebTarget/request()
io/corbel/resources/api/RemResourceTest/testGetResource()#org/fest/assertions/api/AbstractAssert/isSameAs(A)
io/corbel/resources/api/RemResourceTest/testGetResource()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/resources/api/RemResourceTest/testGetResource()#org/mockito/ArgumentCaptor/capture()
io/corbel/resources/api/RemResourceTest/testDeleteResourceWithWildCardId()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/resources/api/RemResourceTest/testDeleteResourceWithWildCardId()#org/mockito/ArgumentCaptor/getValue()
io/corbel/resources/api/RemResourceTest/testDeleteResourceWithWildCardId()#javax/ws/rs/core/Response/ok()
io/corbel/resources/api/RemResourceTest/testDeleteResourceWithWildCardId()#org/mockito/Mockito/when(T)
io/corbel/resources/api/RemResourceTest/testDeleteResourceWithWildCardId()#io/corbel/lib/token/TokenInfo/getUserId()
io/corbel/resources/api/RemResourceTest/testDeleteResourceWithWildCardId()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/resources/api/RemResourceTest/testDeleteResourceWithWildCardId()#javax/ws/rs/core/Response/ResponseBuilder/entity(java.lang.Object)
io/corbel/resources/api/RemResourceTest/testDeleteResourceWithWildCardId()#org/mockito/Matchers/any()
io/corbel/resources/api/RemResourceTest/testDeleteResourceWithWildCardId()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/resources/api/RemResourceTest/testDeleteResourceWithWildCardId()#javax/ws/rs/client/SyncInvoker/delete(java.lang.Class)
io/corbel/resources/api/RemResourceTest/testDeleteResourceWithWildCardId()#org/mockito/Matchers/eq(T)
io/corbel/resources/api/RemResourceTest/testDeleteResourceWithWildCardId()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/resources/api/RemResourceTest/testDeleteResourceWithWildCardId()#io/corbel/resources/rem/request/RequestParameters/getTokenInfo()
io/corbel/resources/api/RemResourceTest/testDeleteResourceWithWildCardId()#javax/ws/rs/core/Response/ResponseBuilder/build()
io/corbel/resources/api/RemResourceTest/testDeleteResourceWithWildCardId()#org/mockito/Matchers/any(java.lang.Class)
io/corbel/resources/api/RemResourceTest/testDeleteResourceWithWildCardId()#org/mockito/ArgumentCaptor/forClass(java.lang.Class)
io/corbel/resources/api/RemResourceTest/testDeleteResourceWithWildCardId()#io/corbel/resources/rem/Rem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional,java.util.Optional)
io/corbel/resources/api/RemResourceTest/testDeleteResourceWithWildCardId()#javax/ws/rs/client/WebTarget/request()
io/corbel/resources/api/RemResourceTest/testDeleteResourceWithWildCardId()#org/fest/assertions/api/AbstractAssert/isSameAs(A)
io/corbel/resources/api/RemResourceTest/testDeleteResourceWithWildCardId()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/resources/api/RemResourceTest/testDeleteResourceWithWildCardId()#org/mockito/ArgumentCaptor/capture()
io/corbel/resources/api/RemResourceTest/testPutRelationWithWildCardId()#org/mockito/ArgumentCaptor/getValue()
io/corbel/resources/api/RemResourceTest/testPutRelationWithWildCardId()#org/mockito/Mockito/when(T)
io/corbel/resources/api/RemResourceTest/testPutRelationWithWildCardId()#org/mockito/ArgumentCaptor/forClass(java.lang.Class)
io/corbel/resources/api/RemResourceTest/testPutRelationWithWildCardId()#io/corbel/lib/token/TokenInfo/getUserId()
io/corbel/resources/api/RemResourceTest/testPutRelationWithWildCardId()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/resources/api/RemResourceTest/testPutRelationWithWildCardId()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/resources/api/RemResourceTest/testPutRelationWithWildCardId()#javax/ws/rs/client/Entity/json(T)
io/corbel/resources/api/RemResourceTest/testPutRelationWithWildCardId()#org/mockito/Matchers/any()
io/corbel/resources/api/RemResourceTest/testPutRelationWithWildCardId()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/resources/api/RemResourceTest/testPutRelationWithWildCardId()#org/mockito/Matchers/eq(T)
io/corbel/resources/api/RemResourceTest/testPutRelationWithWildCardId()#io/corbel/resources/rem/Rem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)
io/corbel/resources/api/RemResourceTest/testPutRelationWithWildCardId()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/resources/api/RemResourceTest/testPutRelationWithWildCardId()#javax/ws/rs/core/Response/noContent()
io/corbel/resources/api/RemResourceTest/testPutRelationWithWildCardId()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/resources/api/RemResourceTest/testPutRelationWithWildCardId()#io/corbel/resources/rem/request/RequestParameters/getTokenInfo()
io/corbel/resources/api/RemResourceTest/testPutRelationWithWildCardId()#javax/ws/rs/core/Response/ResponseBuilder/build()
io/corbel/resources/api/RemResourceTest/testPutRelationWithWildCardId()#javax/ws/rs/client/WebTarget/request()
io/corbel/resources/api/RemResourceTest/testPutRelationWithWildCardId()#org/fest/assertions/api/AbstractAssert/isSameAs(A)
io/corbel/resources/api/RemResourceTest/testPutRelationWithWildCardId()#javax/ws/rs/client/SyncInvoker/put(javax.ws.rs.client.Entity,java.lang.Class)
io/corbel/resources/api/RemResourceTest/testPutRelationWithWildCardId()#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/api/RemResourceTest/testPutRelationWithWildCardId()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/resources/api/RemResourceTest/testPutRelationWithWildCardId()#org/mockito/ArgumentCaptor/capture()
io/corbel/resources/api/RemResourceTest/testGetCollectionWithMalformedQuery()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithMalformedQuery()#javax/ws/rs/core/Response/Status/getStatusCode()
io/corbel/resources/api/RemResourceTest/testGetCollectionWithMalformedQuery()#io/corbel/lib/queries/parser/QueryParser/parse(java.lang.String)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithMalformedQuery()#java/net/URLEncoder/encode(java.lang.String,java.lang.String)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithMalformedQuery()#org/mockito/Mockito/when(T)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithMalformedQuery()#javax/ws/rs/client/WebTarget/request(javax.ws.rs.core.MediaType[])
io/corbel/resources/api/RemResourceTest/testGetCollectionWithMalformedQuery()#io/corbel/lib/queries/exception/MalformedJsonQueryException/MalformedJsonQueryException(java.lang.String)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithMalformedQuery()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/resources/api/RemResourceTest/testGetCollectionWithMalformedQuery()#javax/ws/rs/client/WebTarget/queryParam(java.lang.String,java.lang.Object[])
io/corbel/resources/api/RemResourceTest/testGetCollectionWithMalformedQuery()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithMalformedQuery()#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/api/RemResourceTest/testGetCollectionWithMalformedQuery()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithMalformedQuery()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/resources/api/RemResourceTest/testGetCollectionWithMalformedQuery()#javax/ws/rs/client/SyncInvoker/head()
io/corbel/resources/api/RemResourceTest/testGetCollectionWithMalformedQuery()#org/mockito/stubbing/OngoingStubbing/thenThrow(java.lang.Throwable[])
io/corbel/resources/api/RemResourceTest/getObjectMapper()#com/fasterxml/jackson/databind/ObjectMapper/ObjectMapper()
io/corbel/resources/api/RemResourceTest/testPostCollectionWithLocation()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/resources/api/RemResourceTest/testPostCollectionWithLocation()#org/mockito/ArgumentCaptor/getValue()
io/corbel/resources/api/RemResourceTest/testPostCollectionWithLocation()#io/corbel/resources/rem/request/ResourceId/getId()
io/corbel/resources/api/RemResourceTest/testPostCollectionWithLocation()#io/corbel/lib/token/TokenInfo/getUserId()
io/corbel/resources/api/RemResourceTest/testPostCollectionWithLocation()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/resources/api/RemResourceTest/testPostCollectionWithLocation()#javax/ws/rs/core/Response/ResponseBuilder/entity(java.lang.Object)
io/corbel/resources/api/RemResourceTest/testPostCollectionWithLocation()#javax/ws/rs/client/Entity/json(T)
io/corbel/resources/api/RemResourceTest/testPostCollectionWithLocation()#org/mockito/Matchers/any()
io/corbel/resources/api/RemResourceTest/testPostCollectionWithLocation()#org/mockito/Matchers/eq(T)
io/corbel/resources/api/RemResourceTest/testPostCollectionWithLocation()#javax/ws/rs/client/SyncInvoker/post(javax.ws.rs.client.Entity,java.lang.Class)
io/corbel/resources/api/RemResourceTest/testPostCollectionWithLocation()#io/corbel/resources/rem/request/RequestParameters/getTokenInfo()
io/corbel/resources/api/RemResourceTest/testPostCollectionWithLocation()#javax/ws/rs/core/Response/ResponseBuilder/build()
io/corbel/resources/api/RemResourceTest/testPostCollectionWithLocation()#io/corbel/eventbus/service/EventBus/dispatch(io.corbel.eventbus.Event)
io/corbel/resources/api/RemResourceTest/testPostCollectionWithLocation()#javax/ws/rs/core/Response/ok()
io/corbel/resources/api/RemResourceTest/testPostCollectionWithLocation()#org/mockito/Mockito/when(T)
io/corbel/resources/api/RemResourceTest/testPostCollectionWithLocation()#io/corbel/event/ResourceEvent/createResourceEvent(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
io/corbel/resources/api/RemResourceTest/testPostCollectionWithLocation()#org/mockito/Matchers/any(java.lang.Class)
io/corbel/resources/api/RemResourceTest/testPostCollectionWithLocation()#org/mockito/ArgumentCaptor/forClass(java.lang.Class)
io/corbel/resources/api/RemResourceTest/testPostCollectionWithLocation()#org/mockito/Mockito/verify(T)
io/corbel/resources/api/RemResourceTest/testPostCollectionWithLocation()#io/corbel/resources/rem/Rem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional,java.util.Optional)
io/corbel/resources/api/RemResourceTest/testPostCollectionWithLocation()#javax/ws/rs/client/WebTarget/request()
io/corbel/resources/api/RemResourceTest/testPostCollectionWithLocation()#org/fest/assertions/api/AbstractAssert/isSameAs(A)
io/corbel/resources/api/RemResourceTest/testPostCollectionWithLocation()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/resources/api/RemResourceTest/testPostCollectionWithLocation()#org/mockito/ArgumentCaptor/capture()
io/corbel/resources/api/RemResourceTest/testPostCollectionWithLocation()#org/mockito/Mockito/reset(T[])
io/corbel/resources/api/RemResourceTest/testPostCollectionWithLocation()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/resources/api/RemResourceTest/testPostCollectionWithLocation()#javax/ws/rs/core/Response/ResponseBuilder/header(java.lang.String,java.lang.Object)
io/corbel/resources/api/RemResourceTest/testPostCollectionWithLocation()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/resources/api/RemResourceTest/testDeleteResource()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/resources/api/RemResourceTest/testDeleteResource()#org/mockito/ArgumentCaptor/getValue()
io/corbel/resources/api/RemResourceTest/testDeleteResource()#io/corbel/resources/rem/request/ResourceId/getId()
io/corbel/resources/api/RemResourceTest/testDeleteResource()#org/mockito/Mockito/when(T)
io/corbel/resources/api/RemResourceTest/testDeleteResource()#io/corbel/lib/token/TokenInfo/getUserId()
io/corbel/resources/api/RemResourceTest/testDeleteResource()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/resources/api/RemResourceTest/testDeleteResource()#javax/ws/rs/core/Response/ResponseBuilder/entity(java.lang.Object)
io/corbel/resources/api/RemResourceTest/testDeleteResource()#javax/ws/rs/client/SyncInvoker/delete(java.lang.Class)
io/corbel/resources/api/RemResourceTest/testDeleteResource()#org/mockito/Matchers/eq(T)
io/corbel/resources/api/RemResourceTest/testDeleteResource()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/resources/api/RemResourceTest/testDeleteResource()#io/corbel/resources/rem/request/RequestParameters/getTokenInfo()
io/corbel/resources/api/RemResourceTest/testDeleteResource()#javax/ws/rs/core/Response/ResponseBuilder/build()
io/corbel/resources/api/RemResourceTest/testDeleteResource()#io/corbel/eventbus/service/EventBus/dispatch(io.corbel.eventbus.Event)
io/corbel/resources/api/RemResourceTest/testDeleteResource()#javax/ws/rs/core/Response/ok()
io/corbel/resources/api/RemResourceTest/testDeleteResource()#org/mockito/ArgumentCaptor/forClass(java.lang.Class)
io/corbel/resources/api/RemResourceTest/testDeleteResource()#org/mockito/Mockito/verify(T)
io/corbel/resources/api/RemResourceTest/testDeleteResource()#io/corbel/resources/rem/Rem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)
io/corbel/resources/api/RemResourceTest/testDeleteResource()#javax/ws/rs/client/WebTarget/request()
io/corbel/resources/api/RemResourceTest/testDeleteResource()#org/fest/assertions/api/AbstractAssert/isSameAs(A)
io/corbel/resources/api/RemResourceTest/testDeleteResource()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/resources/api/RemResourceTest/testDeleteResource()#org/mockito/ArgumentCaptor/capture()
io/corbel/resources/api/RemResourceTest/testDeleteResource()#io/corbel/event/ResourceEvent/deleteResourceEvent(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
io/corbel/resources/api/RemResourceTest/testDeleteResource()#org/mockito/Matchers/any()
io/corbel/resources/api/RemResourceTest/testDeleteResource()#org/mockito/Mockito/reset(T[])
io/corbel/resources/api/RemResourceTest/testDeleteResource()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/resources/api/RemResourceTest/testNotFoundRem()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/resources/api/RemResourceTest/testNotFoundRem()#javax/ws/rs/core/Response/Status/getStatusCode()
io/corbel/resources/api/RemResourceTest/testNotFoundRem()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/resources/api/RemResourceTest/testNotFoundRem()#javax/ws/rs/client/WebTarget/request()
io/corbel/resources/api/RemResourceTest/testNotFoundRem()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/resources/api/RemResourceTest/testNotFoundRem()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/resources/api/RemResourceTest/testNotFoundRem()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/resources/api/RemResourceTest/testNotFoundRem()#javax/ws/rs/client/SyncInvoker/get(java.lang.Class)
io/corbel/resources/api/RemResourceTest/testNotFoundRem()#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/api/RemResourceTest/testPutRelation()#org/mockito/ArgumentCaptor/getValue()
io/corbel/resources/api/RemResourceTest/testPutRelation()#io/corbel/resources/rem/request/ResourceId/getId()
io/corbel/resources/api/RemResourceTest/testPutRelation()#io/corbel/eventbus/service/EventBus/dispatch(io.corbel.eventbus.Event)
io/corbel/resources/api/RemResourceTest/testPutRelation()#org/mockito/Mockito/when(T)
io/corbel/resources/api/RemResourceTest/testPutRelation()#io/corbel/lib/token/TokenInfo/getUserId()
io/corbel/resources/api/RemResourceTest/testPutRelation()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/resources/api/RemResourceTest/testPutRelation()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/resources/api/RemResourceTest/testPutRelation()#javax/ws/rs/client/Entity/json(T)
io/corbel/resources/api/RemResourceTest/testPutRelation()#io/corbel/event/ResourceEvent/updateResourceEvent(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
io/corbel/resources/api/RemResourceTest/testPutRelation()#org/mockito/Matchers/any()
io/corbel/resources/api/RemResourceTest/testPutRelation()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/resources/api/RemResourceTest/testPutRelation()#org/mockito/Matchers/eq(T)
io/corbel/resources/api/RemResourceTest/testPutRelation()#io/corbel/resources/rem/Rem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)
io/corbel/resources/api/RemResourceTest/testPutRelation()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/resources/api/RemResourceTest/testPutRelation()#javax/ws/rs/core/Response/noContent()
io/corbel/resources/api/RemResourceTest/testPutRelation()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/resources/api/RemResourceTest/testPutRelation()#io/corbel/resources/rem/request/RequestParameters/getTokenInfo()
io/corbel/resources/api/RemResourceTest/testPutRelation()#javax/ws/rs/core/Response/ResponseBuilder/build()
io/corbel/resources/api/RemResourceTest/testPutRelation()#org/mockito/ArgumentCaptor/forClass(java.lang.Class)
io/corbel/resources/api/RemResourceTest/testPutRelation()#org/mockito/Mockito/verify(T)
io/corbel/resources/api/RemResourceTest/testPutRelation()#javax/ws/rs/client/WebTarget/request()
io/corbel/resources/api/RemResourceTest/testPutRelation()#org/fest/assertions/api/AbstractAssert/isSameAs(A)
io/corbel/resources/api/RemResourceTest/testPutRelation()#javax/ws/rs/client/SyncInvoker/put(javax.ws.rs.client.Entity,java.lang.Class)
io/corbel/resources/api/RemResourceTest/testPutRelation()#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/api/RemResourceTest/testPutRelation()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/resources/api/RemResourceTest/testPutRelation()#org/mockito/ArgumentCaptor/capture()
io/corbel/resources/api/RemResourceTest/testPutRelationWithNginxEncoding()#org/mockito/ArgumentCaptor/getValue()
io/corbel/resources/api/RemResourceTest/testPutRelationWithNginxEncoding()#org/mockito/Mockito/when(T)
io/corbel/resources/api/RemResourceTest/testPutRelationWithNginxEncoding()#org/mockito/ArgumentCaptor/forClass(java.lang.Class)
io/corbel/resources/api/RemResourceTest/testPutRelationWithNginxEncoding()#io/corbel/lib/token/TokenInfo/getUserId()
io/corbel/resources/api/RemResourceTest/testPutRelationWithNginxEncoding()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/resources/api/RemResourceTest/testPutRelationWithNginxEncoding()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/resources/api/RemResourceTest/testPutRelationWithNginxEncoding()#javax/ws/rs/client/Entity/json(T)
io/corbel/resources/api/RemResourceTest/testPutRelationWithNginxEncoding()#org/mockito/Matchers/any()
io/corbel/resources/api/RemResourceTest/testPutRelationWithNginxEncoding()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/resources/api/RemResourceTest/testPutRelationWithNginxEncoding()#org/mockito/Matchers/eq(T)
io/corbel/resources/api/RemResourceTest/testPutRelationWithNginxEncoding()#io/corbel/resources/rem/Rem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)
io/corbel/resources/api/RemResourceTest/testPutRelationWithNginxEncoding()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/resources/api/RemResourceTest/testPutRelationWithNginxEncoding()#javax/ws/rs/core/Response/noContent()
io/corbel/resources/api/RemResourceTest/testPutRelationWithNginxEncoding()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/resources/api/RemResourceTest/testPutRelationWithNginxEncoding()#io/corbel/resources/rem/request/RequestParameters/getTokenInfo()
io/corbel/resources/api/RemResourceTest/testPutRelationWithNginxEncoding()#javax/ws/rs/core/Response/ResponseBuilder/build()
io/corbel/resources/api/RemResourceTest/testPutRelationWithNginxEncoding()#javax/ws/rs/client/WebTarget/request()
io/corbel/resources/api/RemResourceTest/testPutRelationWithNginxEncoding()#org/fest/assertions/api/AbstractAssert/isSameAs(A)
io/corbel/resources/api/RemResourceTest/testPutRelationWithNginxEncoding()#javax/ws/rs/client/SyncInvoker/put(javax.ws.rs.client.Entity,java.lang.Class)
io/corbel/resources/api/RemResourceTest/testPutRelationWithNginxEncoding()#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/api/RemResourceTest/testPutRelationWithNginxEncoding()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/resources/api/RemResourceTest/testPutRelationWithNginxEncoding()#org/mockito/ArgumentCaptor/capture()
io/corbel/resources/api/RemResourceTest/testPostRelation()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/resources/api/RemResourceTest/testPostRelation()#org/mockito/ArgumentCaptor/getValue()
io/corbel/resources/api/RemResourceTest/testPostRelation()#io/corbel/resources/rem/request/ResourceId/getId()
io/corbel/resources/api/RemResourceTest/testPostRelation()#org/mockito/Mockito/when(T)
io/corbel/resources/api/RemResourceTest/testPostRelation()#io/corbel/lib/token/TokenInfo/getUserId()
io/corbel/resources/api/RemResourceTest/testPostRelation()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/resources/api/RemResourceTest/testPostRelation()#javax/ws/rs/core/Response/ResponseBuilder/entity(java.lang.Object)
io/corbel/resources/api/RemResourceTest/testPostRelation()#javax/ws/rs/client/Entity/json(T)
io/corbel/resources/api/RemResourceTest/testPostRelation()#io/corbel/event/ResourceEvent/updateResourceEvent(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
io/corbel/resources/api/RemResourceTest/testPostRelation()#org/mockito/Matchers/any()
io/corbel/resources/api/RemResourceTest/testPostRelation()#org/mockito/Matchers/eq(T)
io/corbel/resources/api/RemResourceTest/testPostRelation()#io/corbel/resources/rem/Rem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)
io/corbel/resources/api/RemResourceTest/testPostRelation()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/resources/api/RemResourceTest/testPostRelation()#javax/ws/rs/client/SyncInvoker/post(javax.ws.rs.client.Entity,java.lang.Class)
io/corbel/resources/api/RemResourceTest/testPostRelation()#io/corbel/resources/rem/request/RequestParameters/getTokenInfo()
io/corbel/resources/api/RemResourceTest/testPostRelation()#javax/ws/rs/core/Response/ResponseBuilder/build()
io/corbel/resources/api/RemResourceTest/testPostRelation()#io/corbel/eventbus/service/EventBus/dispatch(io.corbel.eventbus.Event)
io/corbel/resources/api/RemResourceTest/testPostRelation()#javax/ws/rs/core/Response/ok()
io/corbel/resources/api/RemResourceTest/testPostRelation()#org/mockito/ArgumentCaptor/forClass(java.lang.Class)
io/corbel/resources/api/RemResourceTest/testPostRelation()#org/mockito/Mockito/verify(T)
io/corbel/resources/api/RemResourceTest/testPostRelation()#javax/ws/rs/client/WebTarget/request()
io/corbel/resources/api/RemResourceTest/testPostRelation()#org/fest/assertions/api/AbstractAssert/isSameAs(A)
io/corbel/resources/api/RemResourceTest/testPostRelation()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/resources/api/RemResourceTest/testPostRelation()#org/mockito/ArgumentCaptor/capture()
io/corbel/resources/api/RemResourceTest/testPostRelation()#org/mockito/Mockito/reset(T[])
io/corbel/resources/api/RemResourceTest/testPostRelation()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/resources/rem/service/InMemorySearchableFieldsRegistry/getFieldsFromType(java.lang.String,java.lang.String)#io/corbel/resources/rem/model/ResourceUri/ResourceUri(java.lang.String,java.lang.String)
io/corbel/resources/rem/service/InMemorySearchableFieldsRegistry/getFieldsFromType(java.lang.String,java.lang.String)#io/corbel/resources/rem/service/InMemorySearchableFieldsRegistry/getFieldsFromResourceUri(io.corbel.resources.rem.model.ResourceUri)
io/corbel/resources/rem/service/InMemorySearchableFieldsRegistry/addFields(io.corbel.resources.rem.model.SearchResource)#io/corbel/resources/rem/model/ResourceUri/ResourceUri(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
io/corbel/resources/rem/service/InMemorySearchableFieldsRegistry/addFields(io.corbel.resources.rem.model.SearchResource)#java/util/HashMap/put(K,V)
io/corbel/resources/rem/service/InMemorySearchableFieldsRegistry/addFields(io.corbel.resources.rem.model.SearchResource)#io/corbel/resources/rem/model/ResourceUri/getType()
io/corbel/resources/rem/service/InMemorySearchableFieldsRegistry/addFields(io.corbel.resources.rem.model.SearchResource)#io/corbel/resources/rem/model/SearchResource/getFields()
io/corbel/resources/rem/service/InMemorySearchableFieldsRegistry/addFields(io.corbel.resources.rem.model.SearchResource)#io/corbel/resources/rem/model/ResourceUri/getDomain()
io/corbel/resources/rem/service/InMemorySearchableFieldsRegistry/addFields(io.corbel.resources.rem.model.SearchResource)#io/corbel/resources/rem/model/SearchResource/getResourceUri()
io/corbel/resources/rem/service/InMemorySearchableFieldsRegistry/addFields(io.corbel.resources.rem.model.SearchResource)#io/corbel/resources/rem/model/ResourceUri/getRelation()
io/corbel/resources/rem/service/InMemorySearchableFieldsRegistry/getFieldsFromRelation(java.lang.String,java.lang.String,java.lang.String)#io/corbel/resources/rem/model/ResourceUri/ResourceUri(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
io/corbel/resources/rem/service/InMemorySearchableFieldsRegistry/getFieldsFromRelation(java.lang.String,java.lang.String,java.lang.String)#io/corbel/resources/rem/service/InMemorySearchableFieldsRegistry/getFieldsFromResourceUri(io.corbel.resources.rem.model.ResourceUri)
io/corbel/resources/rem/service/InMemorySearchableFieldsRegistry/getFieldsFromResourceUri(io.corbel.resources.rem.model.ResourceUri)#io/corbel/resources/rem/model/ResourceUri/ResourceUri(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
io/corbel/resources/rem/service/InMemorySearchableFieldsRegistry/getFieldsFromResourceUri(io.corbel.resources.rem.model.ResourceUri)#java/util/HashMap/getOrDefault(java.lang.Object,V)
io/corbel/resources/rem/service/InMemorySearchableFieldsRegistry/getFieldsFromResourceUri(io.corbel.resources.rem.model.ResourceUri)#java/util/Collections/emptySet()
io/corbel/resources/rem/service/InMemorySearchableFieldsRegistry/getFieldsFromResourceUri(io.corbel.resources.rem.model.ResourceUri)#io/corbel/resources/rem/model/ResourceUri/getType()
io/corbel/resources/rem/service/InMemorySearchableFieldsRegistry/getFieldsFromResourceUri(io.corbel.resources.rem.model.ResourceUri)#io/corbel/resources/rem/model/ResourceUri/getRelation()
io/corbel/resources/rem/service/InMemorySearchableFieldsRegistry/getFieldsFromResourceUri(io.corbel.resources.rem.model.ResourceUri)#io/corbel/resources/rem/model/ResourceUri/getDomain()
io/corbel/resources/href/LinksFilter/processRequest(javax.ws.rs.container.ContainerRequestContext,com.google.gson.JsonElement)#java/util/Optional/ofNullable(T)
io/corbel/resources/href/LinksFilter/processRequest(javax.ws.rs.container.ContainerRequestContext,com.google.gson.JsonElement)#java/util/Optional/ifPresent(java.util.function.Consumer)
io/corbel/resources/href/LinksFilter/processRequest(javax.ws.rs.container.ContainerRequestContext,com.google.gson.JsonElement)#io/corbel/resources/href/LinksFilter/getUriWithProxyPassPath(javax.ws.rs.container.ContainerRequestContext)
io/corbel/resources/href/LinksFilter/addLinks(com.google.gson.JsonElement,java.net.URI,java.util.Optional)#io/corbel/resources/href/LinkGenerator/addResourceLinks(com.google.gson.JsonObject,java.net.URI,java.util.Optional)
io/corbel/resources/href/LinksFilter/addLinks(com.google.gson.JsonElement,java.net.URI,java.util.Optional)#com/google/gson/JsonElement/isJsonObject()
io/corbel/resources/href/LinksFilter/addLinks(com.google.gson.JsonElement,java.net.URI,java.util.Optional)#com/google/gson/JsonElement/isJsonArray()
io/corbel/resources/href/LinksFilter/addLinks(com.google.gson.JsonElement,java.net.URI,java.util.Optional)#io/corbel/resources/href/LinksFilter/addLinks(com.google.gson.JsonElement,java.net.URI,java.util.Optional)
io/corbel/resources/href/LinksFilter/addLinks(com.google.gson.JsonElement,java.net.URI,java.util.Optional)#com/google/gson/JsonElement/getAsJsonArray()
io/corbel/resources/href/LinksFilter/getUriWithProxyPassPath(javax.ws.rs.container.ContainerRequestContext)#java/util/Optional/orElse(T)
io/corbel/resources/href/LinksFilter/getUriWithProxyPassPath(javax.ws.rs.container.ContainerRequestContext)#java/util/Optional/ofNullable(T)
io/corbel/resources/href/LinksFilter/getUriWithProxyPassPath(javax.ws.rs.container.ContainerRequestContext)#java/util/Optional/map(java.util.function.Function)
io/corbel/resources/href/LinksFilter/getUriWithProxyPassPath(javax.ws.rs.container.ContainerRequestContext)#javax/ws/rs/container/ContainerRequestContext/getProperty(java.lang.String)
io/corbel/resources/href/LinksFilter/getUriWithProxyPassPath(javax.ws.rs.container.ContainerRequestContext)#javax/ws/rs/container/ContainerRequestContext/getHeaderString(java.lang.String)
io/corbel/resources/href/LinksFilter/filter(javax.ws.rs.container.ContainerRequestContext,javax.ws.rs.container.ContainerResponseContext)#javax/ws/rs/container/ContainerRequestContext/getMethod()
io/corbel/resources/href/LinksFilter/filter(javax.ws.rs.container.ContainerRequestContext,javax.ws.rs.container.ContainerResponseContext)#javax/ws/rs/core/MediaType/isCompatible(javax.ws.rs.core.MediaType)
io/corbel/resources/href/LinksFilter/filter(javax.ws.rs.container.ContainerRequestContext,javax.ws.rs.container.ContainerResponseContext)#java/lang/Throwable/getMessage()
io/corbel/resources/href/LinksFilter/filter(javax.ws.rs.container.ContainerRequestContext,javax.ws.rs.container.ContainerResponseContext)#java/util/Optional/ofNullable(T)
io/corbel/resources/href/LinksFilter/filter(javax.ws.rs.container.ContainerRequestContext,javax.ws.rs.container.ContainerResponseContext)#java/util/Optional/ifPresent(java.util.function.Consumer)
io/corbel/resources/href/LinksFilter/filter(javax.ws.rs.container.ContainerRequestContext,javax.ws.rs.container.ContainerResponseContext)#java/lang/String/equals(java.lang.Object)
io/corbel/resources/href/LinksFilter/filter(javax.ws.rs.container.ContainerRequestContext,javax.ws.rs.container.ContainerResponseContext)#javax/ws/rs/container/ContainerResponseContext/getEntity()
io/corbel/resources/href/LinksFilter/filter(javax.ws.rs.container.ContainerRequestContext,javax.ws.rs.container.ContainerResponseContext)#org/slf4j/Logger/error(java.lang.String)
io/corbel/resources/href/LinksFilter/filter(javax.ws.rs.container.ContainerRequestContext,javax.ws.rs.container.ContainerResponseContext)#java/util/Optional/filter(java.util.function.Predicate)
io/corbel/resources/href/LinksFilter/filter(javax.ws.rs.container.ContainerRequestContext,javax.ws.rs.container.ContainerResponseContext)#javax/ws/rs/container/ContainerResponseContext/getStatus()
io/corbel/resources/href/LinksFilter/filter(javax.ws.rs.container.ContainerRequestContext,javax.ws.rs.container.ContainerResponseContext)#javax/ws/rs/core/Response/Status/getStatusCode()
io/corbel/resources/href/LinksFilter/filter(javax.ws.rs.container.ContainerRequestContext,javax.ws.rs.container.ContainerResponseContext)#javax/ws/rs/container/ContainerResponseContext/getMediaType()
io/corbel/resources/href/LinksFilter/filter(javax.ws.rs.container.ContainerRequestContext,javax.ws.rs.container.ContainerResponseContext)#javax/ws/rs/container/ContainerRequestContext/getAcceptableMediaTypes()
io/corbel/resources/href/LinksFilter/filter(javax.ws.rs.container.ContainerRequestContext,javax.ws.rs.container.ContainerResponseContext)#java/util/List/contains(java.lang.Object)
io/corbel/resources/rem/i18n/I18nPutRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/lib/ws/api/error/ErrorResponseFactory/invalidEntity(java.lang.String)
io/corbel/resources/rem/i18n/I18nPutRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#java/util/Optional/orElse(T)
io/corbel/resources/rem/i18n/I18nPutRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#java/util/Optional/map(java.util.function.Function)
io/corbel/resources/rem/i18n/I18nPutRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/resources/rem/i18n/api/I18nErrorResponseFactory/getInstance()
io/corbel/oauth/api/UserResourceTest/getProfileGoodTokenTest()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/oauth/api/UserResourceTest/getProfileGoodTokenTest()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/oauth/api/UserResourceTest/getProfileGoodTokenTest()#io/corbel/oauth/TestUtils/getProfileUserTest()
io/corbel/oauth/api/UserResourceTest/getProfileGoodTokenTest()#javax/ws/rs/core/Response/readEntity(java.lang.Class)
io/corbel/oauth/api/UserResourceTest/getProfileGoodTokenTest()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/oauth/api/UserResourceTest/getProfileGoodTokenTest()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/oauth/api/UserResourceTest/getProfileGoodTokenTest()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/oauth/api/UserResourceTest/getProfileGoodTokenTest()#org/mockito/Mockito/when(T)
io/corbel/oauth/api/UserResourceTest/getProfileGoodTokenTest()#io/corbel/oauth/TestUtils/createUserTest(io.corbel.oauth.model.Role)
io/corbel/oauth/api/UserResourceTest/getProfileGoodTokenTest()#javax/ws/rs/client/WebTarget/request()
io/corbel/oauth/api/UserResourceTest/getProfileGoodTokenTest()#io/corbel/oauth/model/User/setPassword(java.lang.String)
io/corbel/oauth/api/UserResourceTest/getProfileGoodTokenTest()#javax/ws/rs/client/SyncInvoker/get(java.lang.Class)
io/corbel/oauth/api/UserResourceTest/getProfileGoodTokenTest()#javax/ws/rs/core/Response/getStatus()
io/corbel/oauth/api/UserResourceTest/getProfileGoodTokenTest()#org/fest/assertions/api/Assertions/assertThat(T)
io/corbel/oauth/api/UserResourceTest/getProfileGoodTokenTest()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/oauth/api/UserResourceTest/getProfileGoodTokenTest()#io/corbel/oauth/service/UserService/getUser(java.lang.String)
io/corbel/oauth/api/UserResourceTest/getProfileGoodTokenTest()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/oauth/api/UserResourceTest/getProfileBadTokenTest()#javax/servlet/http/HttpServletRequest/getHeader(java.lang.String)
io/corbel/oauth/api/UserResourceTest/getProfileBadTokenTest()#org/mockito/Mockito/when(T)
io/corbel/oauth/api/UserResourceTest/getProfileBadTokenTest()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/oauth/api/UserResourceTest/getProfileBadTokenTest()#javax/ws/rs/client/WebTarget/request()
io/corbel/oauth/api/UserResourceTest/getProfileBadTokenTest()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/oauth/api/UserResourceTest/getProfileBadTokenTest()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/oauth/api/UserResourceTest/getProfileBadTokenTest()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/oauth/api/UserResourceTest/getProfileBadTokenTest()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/oauth/api/UserResourceTest/getProfileBadTokenTest()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/oauth/api/UserResourceTest/getProfileBadTokenTest()#javax/ws/rs/client/SyncInvoker/get(java.lang.Class)
io/corbel/oauth/api/UserResourceTest/getProfileBadTokenTest()#javax/ws/rs/core/Response/getStatus()
io/corbel/oauth/api/UserResourceTest/getUserValidateBadToken()#javax/servlet/http/HttpServletRequest/getHeader(java.lang.String)
io/corbel/oauth/api/UserResourceTest/getUserValidateBadToken()#org/mockito/Mockito/when(T)
io/corbel/oauth/api/UserResourceTest/getUserValidateBadToken()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/oauth/api/UserResourceTest/getUserValidateBadToken()#javax/ws/rs/client/WebTarget/request()
io/corbel/oauth/api/UserResourceTest/getUserValidateBadToken()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/oauth/api/UserResourceTest/getUserValidateBadToken()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/oauth/api/UserResourceTest/getUserValidateBadToken()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/oauth/api/UserResourceTest/getUserValidateBadToken()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/oauth/api/UserResourceTest/getUserValidateBadToken()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/oauth/api/UserResourceTest/getUserValidateBadToken()#javax/ws/rs/client/SyncInvoker/get(java.lang.Class)
io/corbel/oauth/api/UserResourceTest/getUserValidateBadToken()#javax/ws/rs/core/Response/getStatus()
io/corbel/oauth/api/UserResourceTest/getUserValidateEmail()#io/corbel/oauth/service/ClientService/findByName(java.lang.String)
io/corbel/oauth/api/UserResourceTest/getUserValidateEmail()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/oauth/api/UserResourceTest/getUserValidateEmail()#javax/ws/rs/client/WebTarget/request()
io/corbel/oauth/api/UserResourceTest/getUserValidateEmail()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/oauth/api/UserResourceTest/getUserValidateEmail()#io/corbel/oauth/service/UserService/getUser(java.lang.String)
io/corbel/oauth/api/UserResourceTest/getUserValidateEmail()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/oauth/api/UserResourceTest/getUserValidateEmail()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/oauth/api/UserResourceTest/getUserValidateEmail()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/oauth/api/UserResourceTest/getUserValidateEmail()#org/mockito/Mockito/when(T)
io/corbel/oauth/api/UserResourceTest/getUserValidateEmail()#io/corbel/oauth/TestUtils/createUserTest(io.corbel.oauth.model.Role)
io/corbel/oauth/api/UserResourceTest/getUserValidateEmail()#java/util/Optional/of(T)
io/corbel/oauth/api/UserResourceTest/getUserValidateEmail()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/oauth/api/UserResourceTest/getUserValidateEmail()#javax/ws/rs/client/SyncInvoker/get(java.lang.Class)
io/corbel/oauth/api/UserResourceTest/getUserValidateEmail()#javax/ws/rs/core/Response/getStatus()
io/corbel/oauth/api/UserResourceTest/postResetPasswordEmailBadToken()#javax/servlet/http/HttpServletRequest/getHeader(java.lang.String)
io/corbel/oauth/api/UserResourceTest/postResetPasswordEmailBadToken()#org/mockito/Mockito/when(T)
io/corbel/oauth/api/UserResourceTest/postResetPasswordEmailBadToken()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/oauth/api/UserResourceTest/postResetPasswordEmailBadToken()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/oauth/api/UserResourceTest/postResetPasswordEmailBadToken()#io/corbel/oauth/model/User/User()
io/corbel/oauth/api/UserResourceTest/postResetPasswordEmailBadToken()#javax/ws/rs/client/Entity/json(T)
io/corbel/oauth/api/UserResourceTest/postResetPasswordEmailBadToken()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/oauth/api/UserResourceTest/postResetPasswordEmailBadToken()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/oauth/api/UserResourceTest/postResetPasswordEmailBadToken()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/oauth/api/UserResourceTest/postResetPasswordEmailBadToken()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/oauth/api/UserResourceTest/postResetPasswordEmailBadToken()#javax/ws/rs/client/WebTarget/request()
io/corbel/oauth/api/UserResourceTest/postResetPasswordEmailBadToken()#io/corbel/oauth/model/User/setPassword(java.lang.String)
io/corbel/oauth/api/UserResourceTest/postResetPasswordEmailBadToken()#javax/ws/rs/client/SyncInvoker/put(javax.ws.rs.client.Entity,java.lang.Class)
io/corbel/oauth/api/UserResourceTest/postResetPasswordEmailBadToken()#javax/ws/rs/core/Response/getStatus()
io/corbel/oauth/api/UserResourceTest/createUser()#javax/servlet/http/HttpServletRequest/getHeader(java.lang.String)
io/corbel/oauth/api/UserResourceTest/createUser()#org/mockito/ArgumentCaptor/getValue()
io/corbel/oauth/api/UserResourceTest/createUser()#org/mockito/Mockito/when(T)
io/corbel/oauth/api/UserResourceTest/createUser()#org/mockito/ArgumentCaptor/forClass(java.lang.Class)
io/corbel/oauth/api/UserResourceTest/createUser()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/oauth/api/UserResourceTest/createUser()#javax/ws/rs/client/WebTarget/request()
io/corbel/oauth/api/UserResourceTest/createUser()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/oauth/api/UserResourceTest/createUser()#javax/ws/rs/client/Entity/json(T)
io/corbel/oauth/api/UserResourceTest/createUser()#io/corbel/oauth/api/UserResourceTestBase/createTestUser()
io/corbel/oauth/api/UserResourceTest/createUser()#org/mockito/Matchers/eq(T)
io/corbel/oauth/api/UserResourceTest/createUser()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/oauth/api/UserResourceTest/createUser()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/oauth/api/UserResourceTest/createUser()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/oauth/api/UserResourceTest/createUser()#io/corbel/oauth/model/User/getUsername()
io/corbel/oauth/api/UserResourceTest/createUser()#io/corbel/oauth/model/User/getSalt()
io/corbel/oauth/api/UserResourceTest/createUser()#io/corbel/oauth/model/User/getRole()
io/corbel/oauth/api/UserResourceTest/createUser()#org/fest/assertions/api/AbstractAssert/isNull()
io/corbel/oauth/api/UserResourceTest/createUser()#io/corbel/oauth/model/User/getEmail()
io/corbel/oauth/api/UserResourceTest/createUser()#io/corbel/oauth/model/User/getId()
io/corbel/oauth/api/UserResourceTest/createUser()#io/corbel/oauth/model/User/getPassword()
io/corbel/oauth/api/UserResourceTest/createUser()#org/fest/assertions/api/AbstractAssert/isNotNull()
io/corbel/oauth/api/UserResourceTest/createUser()#javax/ws/rs/core/Response/getStatus()
io/corbel/oauth/api/UserResourceTest/createUser()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/oauth/api/UserResourceTest/createUser()#org/mockito/ArgumentCaptor/capture()
io/corbel/oauth/api/UserResourceTest/createUser()#org/fest/assertions/api/Assertions/assertThat(T)
io/corbel/oauth/api/UserResourceTest/createUser()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/oauth/api/UserResourceTest/createUser()#io/corbel/oauth/service/UserService/createUser(io.corbel.oauth.model.User,io.corbel.oauth.model.Client)
io/corbel/oauth/api/UserResourceTest/createUser()#javax/ws/rs/client/SyncInvoker/post(javax.ws.rs.client.Entity,java.lang.Class)
io/corbel/oauth/api/UserResourceTest/createUser()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/oauth/api/UserResourceTest/getUserGoodTokenUsingDifferentUserIdTest()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/oauth/api/UserResourceTest/getUserGoodTokenUsingDifferentUserIdTest()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/oauth/api/UserResourceTest/getUserGoodTokenUsingDifferentUserIdTest()#javax/ws/rs/core/Response/readEntity(java.lang.Class)
io/corbel/oauth/api/UserResourceTest/getUserGoodTokenUsingDifferentUserIdTest()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/oauth/api/UserResourceTest/getUserGoodTokenUsingDifferentUserIdTest()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/oauth/api/UserResourceTest/getUserGoodTokenUsingDifferentUserIdTest()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/oauth/api/UserResourceTest/getUserGoodTokenUsingDifferentUserIdTest()#org/mockito/Mockito/when(T)
io/corbel/oauth/api/UserResourceTest/getUserGoodTokenUsingDifferentUserIdTest()#io/corbel/oauth/TestUtils/createUserTest(io.corbel.oauth.model.Role)
io/corbel/oauth/api/UserResourceTest/getUserGoodTokenUsingDifferentUserIdTest()#javax/ws/rs/client/WebTarget/request()
io/corbel/oauth/api/UserResourceTest/getUserGoodTokenUsingDifferentUserIdTest()#io/corbel/oauth/model/User/setPassword(java.lang.String)
io/corbel/oauth/api/UserResourceTest/getUserGoodTokenUsingDifferentUserIdTest()#javax/ws/rs/client/SyncInvoker/get(java.lang.Class)
io/corbel/oauth/api/UserResourceTest/getUserGoodTokenUsingDifferentUserIdTest()#javax/ws/rs/core/Response/getStatus()
io/corbel/oauth/api/UserResourceTest/getUserGoodTokenUsingDifferentUserIdTest()#org/fest/assertions/api/Assertions/assertThat(T)
io/corbel/oauth/api/UserResourceTest/getUserGoodTokenUsingDifferentUserIdTest()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/oauth/api/UserResourceTest/getUserGoodTokenUsingDifferentUserIdTest()#io/corbel/oauth/service/UserService/getUser(java.lang.String)
io/corbel/oauth/api/UserResourceTest/getUserGoodTokenUsingDifferentUserIdTest()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/oauth/api/UserResourceTest/getProfileNotBearerTokenTest()#javax/servlet/http/HttpServletRequest/getHeader(java.lang.String)
io/corbel/oauth/api/UserResourceTest/getProfileNotBearerTokenTest()#org/mockito/Mockito/when(T)
io/corbel/oauth/api/UserResourceTest/getProfileNotBearerTokenTest()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/oauth/api/UserResourceTest/getProfileNotBearerTokenTest()#javax/ws/rs/client/WebTarget/request()
io/corbel/oauth/api/UserResourceTest/getProfileNotBearerTokenTest()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/oauth/api/UserResourceTest/getProfileNotBearerTokenTest()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/oauth/api/UserResourceTest/getProfileNotBearerTokenTest()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/oauth/api/UserResourceTest/getProfileNotBearerTokenTest()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/oauth/api/UserResourceTest/getProfileNotBearerTokenTest()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/oauth/api/UserResourceTest/getProfileNotBearerTokenTest()#javax/ws/rs/client/SyncInvoker/get(java.lang.Class)
io/corbel/oauth/api/UserResourceTest/getProfileNotBearerTokenTest()#javax/ws/rs/core/Response/getStatus()
io/corbel/oauth/api/UserResourceTest/putUserValidateEmail()#io/corbel/oauth/model/User/setEmailValidated(java.lang.Boolean)
io/corbel/oauth/api/UserResourceTest/putUserValidateEmail()#org/mockito/Mockito/when(T)
io/corbel/oauth/api/UserResourceTest/putUserValidateEmail()#io/corbel/oauth/service/ClientService/findByName(java.lang.String)
io/corbel/oauth/api/UserResourceTest/putUserValidateEmail()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/oauth/api/UserResourceTest/putUserValidateEmail()#javax/ws/rs/client/WebTarget/request()
io/corbel/oauth/api/UserResourceTest/putUserValidateEmail()#io/corbel/oauth/model/User/User()
io/corbel/oauth/api/UserResourceTest/putUserValidateEmail()#javax/ws/rs/client/Entity/json(T)
io/corbel/oauth/api/UserResourceTest/putUserValidateEmail()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/oauth/api/UserResourceTest/putUserValidateEmail()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/oauth/api/UserResourceTest/putUserValidateEmail()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/oauth/api/UserResourceTest/putUserValidateEmail()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/oauth/api/UserResourceTest/putUserValidateEmail()#java/util/Optional/of(T)
io/corbel/oauth/api/UserResourceTest/putUserValidateEmail()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/oauth/api/UserResourceTest/putUserValidateEmail()#javax/ws/rs/client/SyncInvoker/put(javax.ws.rs.client.Entity,java.lang.Class)
io/corbel/oauth/api/UserResourceTest/putUserValidateEmail()#javax/ws/rs/core/Response/getStatus()
io/corbel/oauth/api/UserResourceTest/deleteUserGoodTokenUsingDifferentRootUserTest()#javax/servlet/http/HttpServletRequest/getHeader(java.lang.String)
io/corbel/oauth/api/UserResourceTest/deleteUserGoodTokenUsingDifferentRootUserTest()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/oauth/api/UserResourceTest/deleteUserGoodTokenUsingDifferentRootUserTest()#javax/ws/rs/client/WebTarget/request()
io/corbel/oauth/api/UserResourceTest/deleteUserGoodTokenUsingDifferentRootUserTest()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/oauth/api/UserResourceTest/deleteUserGoodTokenUsingDifferentRootUserTest()#javax/ws/rs/core/Response/getStatus()
io/corbel/oauth/api/UserResourceTest/deleteUserGoodTokenUsingDifferentRootUserTest()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/oauth/api/UserResourceTest/deleteUserGoodTokenUsingDifferentRootUserTest()#javax/ws/rs/client/SyncInvoker/delete(java.lang.Class)
io/corbel/oauth/api/UserResourceTest/deleteUserGoodTokenUsingDifferentRootUserTest()#io/corbel/oauth/service/UserService/getUser(java.lang.String)
io/corbel/oauth/api/UserResourceTest/deleteUserGoodTokenUsingDifferentRootUserTest()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/oauth/api/UserResourceTest/deleteUserGoodTokenUsingDifferentRootUserTest()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/oauth/api/UserResourceTest/deleteUserGoodTokenUsingDifferentRootUserTest()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/oauth/api/UserResourceTest/deleteUserGoodTokenUsingDifferentRootUserTest()#org/mockito/Mockito/when(T)
io/corbel/oauth/api/UserResourceTest/deleteUserGoodTokenUsingDifferentRootUserTest()#io/corbel/oauth/TestUtils/createUserTest(io.corbel.oauth.model.Role)
io/corbel/oauth/api/UserResourceTest/createDuplicateUser()#javax/servlet/http/HttpServletRequest/getHeader(java.lang.String)
io/corbel/oauth/api/UserResourceTest/createDuplicateUser()#org/mockito/Mockito/when(T)
io/corbel/oauth/api/UserResourceTest/createDuplicateUser()#org/mockito/stubbing/Stubber/when(T)
io/corbel/oauth/api/UserResourceTest/createDuplicateUser()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/oauth/api/UserResourceTest/createDuplicateUser()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/oauth/api/UserResourceTest/createDuplicateUser()#io/corbel/oauth/model/User/User()
io/corbel/oauth/api/UserResourceTest/createDuplicateUser()#javax/ws/rs/core/Response/getStatus()
io/corbel/oauth/api/UserResourceTest/createDuplicateUser()#org/mockito/ArgumentCaptor/capture()
io/corbel/oauth/api/UserResourceTest/createDuplicateUser()#org/mockito/Mockito/doThrow(java.lang.Throwable)
io/corbel/oauth/api/UserResourceTest/createDuplicateUser()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/oauth/api/UserResourceTest/createDuplicateUser()#org/mockito/Matchers/eq(T)
io/corbel/oauth/api/UserResourceTest/createDuplicateUser()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/oauth/api/UserResourceTest/createDuplicateUser()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/oauth/api/UserResourceTest/createDuplicateUser()#io/corbel/oauth/model/User/setUsername(java.lang.String)
io/corbel/oauth/api/UserResourceTest/createDuplicateUser()#org/mockito/ArgumentCaptor/forClass(java.lang.Class)
io/corbel/oauth/api/UserResourceTest/createDuplicateUser()#javax/ws/rs/client/WebTarget/request()
io/corbel/oauth/api/UserResourceTest/createDuplicateUser()#io/corbel/oauth/model/User/setPassword(java.lang.String)
io/corbel/oauth/api/UserResourceTest/createDuplicateUser()#io/corbel/oauth/model/User/setEmail(java.lang.String)
io/corbel/oauth/api/UserResourceTest/createDuplicateUser()#javax/ws/rs/client/Entity/json(T)
io/corbel/oauth/api/UserResourceTest/createDuplicateUser()#io/corbel/oauth/service/UserService/createUser(io.corbel.oauth.model.User,io.corbel.oauth.model.Client)
io/corbel/oauth/api/UserResourceTest/createDuplicateUser()#io/corbel/oauth/repository/CreateUserException/DuplicatedUser/DuplicatedUser()
io/corbel/oauth/api/UserResourceTest/createDuplicateUser()#javax/ws/rs/client/SyncInvoker/post(javax.ws.rs.client.Entity,java.lang.Class)
io/corbel/oauth/api/UserResourceTest/createDuplicateUser()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/oauth/api/UserResourceTest/getInexistentAvatarTest()#javax/ws/rs/core/Response/Status/getStatusCode()
io/corbel/oauth/api/UserResourceTest/getInexistentAvatarTest()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/oauth/api/UserResourceTest/getInexistentAvatarTest()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/oauth/api/UserResourceTest/getInexistentAvatarTest()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/oauth/api/UserResourceTest/getInexistentAvatarTest()#io/corbel/oauth/service/UserService/getUser(java.lang.String)
io/corbel/oauth/api/UserResourceTest/getInexistentAvatarTest()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/oauth/api/UserResourceTest/getInexistentAvatarTest()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/oauth/api/UserResourceTest/getInexistentAvatarTest()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/oauth/api/UserResourceTest/getInexistentAvatarTest()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/oauth/api/UserResourceTest/getInexistentAvatarTest()#org/mockito/Mockito/when(T)
io/corbel/oauth/api/UserResourceTest/getInexistentAvatarTest()#javax/ws/rs/client/WebTarget/request()
io/corbel/oauth/api/UserResourceTest/getInexistentAvatarTest()#io/corbel/oauth/model/User/setId(java.lang.String)
io/corbel/oauth/api/UserResourceTest/getInexistentAvatarTest()#javax/ws/rs/client/SyncInvoker/get(java.lang.Class)
io/corbel/oauth/api/UserResourceTest/getInexistentAvatarTest()#javax/ws/rs/core/Response/getStatus()
io/corbel/oauth/api/UserResourceTest/postResetPasswordEmail()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/oauth/api/UserResourceTest/postResetPasswordEmail()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/oauth/api/UserResourceTest/postResetPasswordEmail()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/oauth/api/UserResourceTest/postResetPasswordEmail()#io/corbel/oauth/model/User/User()
io/corbel/oauth/api/UserResourceTest/postResetPasswordEmail()#javax/ws/rs/client/Entity/json(T)
io/corbel/oauth/api/UserResourceTest/postResetPasswordEmail()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/oauth/api/UserResourceTest/postResetPasswordEmail()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/oauth/api/UserResourceTest/postResetPasswordEmail()#javax/ws/rs/client/WebTarget/request()
io/corbel/oauth/api/UserResourceTest/postResetPasswordEmail()#io/corbel/oauth/model/User/setPassword(java.lang.String)
io/corbel/oauth/api/UserResourceTest/postResetPasswordEmail()#javax/ws/rs/client/SyncInvoker/put(javax.ws.rs.client.Entity,java.lang.Class)
io/corbel/oauth/api/UserResourceTest/postResetPasswordEmail()#javax/ws/rs/core/Response/getStatus()
io/corbel/oauth/api/UserResourceTest/getResetPasswordEmailBadToken()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/oauth/api/UserResourceTest/getResetPasswordEmailBadToken()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/oauth/api/UserResourceTest/getResetPasswordEmailBadToken()#javax/ws/rs/client/WebTarget/request()
io/corbel/oauth/api/UserResourceTest/getResetPasswordEmailBadToken()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/oauth/api/UserResourceTest/getResetPasswordEmailBadToken()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/oauth/api/UserResourceTest/getResetPasswordEmailBadToken()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/oauth/api/UserResourceTest/getResetPasswordEmailBadToken()#javax/ws/rs/client/SyncInvoker/get(java.lang.Class)
io/corbel/oauth/api/UserResourceTest/getResetPasswordEmailBadToken()#javax/ws/rs/core/Response/getStatus()
io/corbel/oauth/api/UserResourceTest/updateProfileGoodTokenUsingUserIdTest()#javax/ws/rs/client/WebTarget/request(java.lang.String[])
io/corbel/oauth/api/UserResourceTest/updateProfileGoodTokenUsingUserIdTest()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/oauth/api/UserResourceTest/updateProfileGoodTokenUsingUserIdTest()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/oauth/api/UserResourceTest/updateProfileGoodTokenUsingUserIdTest()#javax/ws/rs/client/Entity/json(T)
io/corbel/oauth/api/UserResourceTest/updateProfileGoodTokenUsingUserIdTest()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/oauth/api/UserResourceTest/updateProfileGoodTokenUsingUserIdTest()#io/corbel/oauth/service/UserService/getUser(java.lang.String)
io/corbel/oauth/api/UserResourceTest/updateProfileGoodTokenUsingUserIdTest()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/oauth/api/UserResourceTest/updateProfileGoodTokenUsingUserIdTest()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/oauth/api/UserResourceTest/updateProfileGoodTokenUsingUserIdTest()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/oauth/api/UserResourceTest/updateProfileGoodTokenUsingUserIdTest()#org/mockito/Mockito/when(T)
io/corbel/oauth/api/UserResourceTest/updateProfileGoodTokenUsingUserIdTest()#io/corbel/oauth/TestUtils/createUserTest(io.corbel.oauth.model.Role)
io/corbel/oauth/api/UserResourceTest/updateProfileGoodTokenUsingUserIdTest()#javax/ws/rs/client/SyncInvoker/put(javax.ws.rs.client.Entity,java.lang.Class)
io/corbel/oauth/api/UserResourceTest/updateProfileGoodTokenUsingUserIdTest()#javax/ws/rs/core/Response/getStatus()
io/corbel/oauth/api/UserResourceTest/updateProfileGoodTokenUsingDifferentUserAdminIdTest()#javax/servlet/http/HttpServletRequest/getHeader(java.lang.String)
io/corbel/oauth/api/UserResourceTest/updateProfileGoodTokenUsingDifferentUserAdminIdTest()#javax/ws/rs/client/WebTarget/request(java.lang.String[])
io/corbel/oauth/api/UserResourceTest/updateProfileGoodTokenUsingDifferentUserAdminIdTest()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/oauth/api/UserResourceTest/updateProfileGoodTokenUsingDifferentUserAdminIdTest()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/oauth/api/UserResourceTest/updateProfileGoodTokenUsingDifferentUserAdminIdTest()#javax/ws/rs/client/Entity/json(T)
io/corbel/oauth/api/UserResourceTest/updateProfileGoodTokenUsingDifferentUserAdminIdTest()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/oauth/api/UserResourceTest/updateProfileGoodTokenUsingDifferentUserAdminIdTest()#io/corbel/oauth/service/UserService/getUser(java.lang.String)
io/corbel/oauth/api/UserResourceTest/updateProfileGoodTokenUsingDifferentUserAdminIdTest()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/oauth/api/UserResourceTest/updateProfileGoodTokenUsingDifferentUserAdminIdTest()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/oauth/api/UserResourceTest/updateProfileGoodTokenUsingDifferentUserAdminIdTest()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/oauth/api/UserResourceTest/updateProfileGoodTokenUsingDifferentUserAdminIdTest()#org/mockito/Mockito/when(T)
io/corbel/oauth/api/UserResourceTest/updateProfileGoodTokenUsingDifferentUserAdminIdTest()#io/corbel/oauth/TestUtils/createUserTest(io.corbel.oauth.model.Role)
io/corbel/oauth/api/UserResourceTest/updateProfileGoodTokenUsingDifferentUserAdminIdTest()#javax/ws/rs/client/SyncInvoker/put(javax.ws.rs.client.Entity,java.lang.Class)
io/corbel/oauth/api/UserResourceTest/updateProfileGoodTokenUsingDifferentUserAdminIdTest()#javax/ws/rs/core/Response/getStatus()
io/corbel/oauth/api/UserResourceTest/deleteUserGoodTokenUsingUserIdTest()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/oauth/api/UserResourceTest/deleteUserGoodTokenUsingUserIdTest()#javax/ws/rs/client/WebTarget/request()
io/corbel/oauth/api/UserResourceTest/deleteUserGoodTokenUsingUserIdTest()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/oauth/api/UserResourceTest/deleteUserGoodTokenUsingUserIdTest()#javax/ws/rs/core/Response/getStatus()
io/corbel/oauth/api/UserResourceTest/deleteUserGoodTokenUsingUserIdTest()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/oauth/api/UserResourceTest/deleteUserGoodTokenUsingUserIdTest()#javax/ws/rs/client/SyncInvoker/delete(java.lang.Class)
io/corbel/oauth/api/UserResourceTest/deleteUserGoodTokenUsingUserIdTest()#io/corbel/oauth/service/UserService/getUser(java.lang.String)
io/corbel/oauth/api/UserResourceTest/deleteUserGoodTokenUsingUserIdTest()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/oauth/api/UserResourceTest/deleteUserGoodTokenUsingUserIdTest()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/oauth/api/UserResourceTest/deleteUserGoodTokenUsingUserIdTest()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/oauth/api/UserResourceTest/deleteUserGoodTokenUsingUserIdTest()#org/mockito/Mockito/when(T)
io/corbel/oauth/api/UserResourceTest/deleteUserGoodTokenUsingUserIdTest()#io/corbel/oauth/TestUtils/createUserTest(io.corbel.oauth.model.Role)
io/corbel/oauth/api/UserResourceTest/getUserGoodTokenUsingUserIdTest()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/oauth/api/UserResourceTest/getUserGoodTokenUsingUserIdTest()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/oauth/api/UserResourceTest/getUserGoodTokenUsingUserIdTest()#javax/ws/rs/core/Response/readEntity(java.lang.Class)
io/corbel/oauth/api/UserResourceTest/getUserGoodTokenUsingUserIdTest()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/oauth/api/UserResourceTest/getUserGoodTokenUsingUserIdTest()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/oauth/api/UserResourceTest/getUserGoodTokenUsingUserIdTest()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/oauth/api/UserResourceTest/getUserGoodTokenUsingUserIdTest()#org/mockito/Mockito/when(T)
io/corbel/oauth/api/UserResourceTest/getUserGoodTokenUsingUserIdTest()#io/corbel/oauth/TestUtils/createUserTest(io.corbel.oauth.model.Role)
io/corbel/oauth/api/UserResourceTest/getUserGoodTokenUsingUserIdTest()#javax/ws/rs/client/WebTarget/request()
io/corbel/oauth/api/UserResourceTest/getUserGoodTokenUsingUserIdTest()#io/corbel/oauth/model/User/setPassword(java.lang.String)
io/corbel/oauth/api/UserResourceTest/getUserGoodTokenUsingUserIdTest()#javax/ws/rs/client/SyncInvoker/get(java.lang.Class)
io/corbel/oauth/api/UserResourceTest/getUserGoodTokenUsingUserIdTest()#javax/ws/rs/core/Response/getStatus()
io/corbel/oauth/api/UserResourceTest/getUserGoodTokenUsingUserIdTest()#org/fest/assertions/api/Assertions/assertThat(T)
io/corbel/oauth/api/UserResourceTest/getUserGoodTokenUsingUserIdTest()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/oauth/api/UserResourceTest/getUserGoodTokenUsingUserIdTest()#io/corbel/oauth/service/UserService/getUser(java.lang.String)
io/corbel/oauth/api/UserResourceTest/getUserGoodTokenUsingUserIdTest()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/oauth/api/UserResourceTest/getAvatarTest()#javax/ws/rs/core/Configurable/property(java.lang.String,java.lang.Object)
io/corbel/oauth/api/UserResourceTest/getAvatarTest()#javax/ws/rs/core/Response/Status/getStatusCode()
io/corbel/oauth/api/UserResourceTest/getAvatarTest()#java/util/Map/get(java.lang.Object)
io/corbel/oauth/api/UserResourceTest/getAvatarTest()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/oauth/api/UserResourceTest/getAvatarTest()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/oauth/api/UserResourceTest/getAvatarTest()#java/util/Optional/map(java.util.function.Function)
io/corbel/oauth/api/UserResourceTest/getAvatarTest()#io/corbel/oauth/service/UserService/getUser(java.lang.String)
io/corbel/oauth/api/UserResourceTest/getAvatarTest()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/oauth/api/UserResourceTest/getAvatarTest()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/oauth/api/UserResourceTest/getAvatarTest()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/oauth/api/UserResourceTest/getAvatarTest()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/oauth/api/UserResourceTest/getAvatarTest()#org/mockito/Mockito/when(T)
io/corbel/oauth/api/UserResourceTest/getAvatarTest()#io/corbel/oauth/model/User/setAvatarUri(java.lang.String)
io/corbel/oauth/api/UserResourceTest/getAvatarTest()#java/util/Optional/orElse(T)
io/corbel/oauth/api/UserResourceTest/getAvatarTest()#java/util/Optional/ofNullable(T)
io/corbel/oauth/api/UserResourceTest/getAvatarTest()#javax/ws/rs/client/WebTarget/request()
io/corbel/oauth/api/UserResourceTest/getAvatarTest()#io/corbel/oauth/model/User/setId(java.lang.String)
io/corbel/oauth/api/UserResourceTest/getAvatarTest()#javax/ws/rs/client/SyncInvoker/get(java.lang.Class)
io/corbel/oauth/api/UserResourceTest/getAvatarTest()#javax/ws/rs/core/Response/getStatus()
io/corbel/oauth/api/UserResourceTest/getAvatarTest()#org/fest/assertions/api/Assertions/assertThat(T)
io/corbel/oauth/api/UserResourceTest/getAvatarTest()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/oauth/api/UserResourceTest/getAvatarTest()#io/corbel/oauth/model/User/getAvatarUri()
io/corbel/oauth/api/UserResourceTest/getAvatarTest()#javax/ws/rs/core/Response/getHeaders()
io/corbel/oauth/api/UserResourceTest/createUserMissingClientCredential()#io/corbel/oauth/TestUtils/createUserTest(io.corbel.oauth.model.Role)
io/corbel/oauth/api/UserResourceTest/createUserMissingClientCredential()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/oauth/api/UserResourceTest/createUserMissingClientCredential()#javax/ws/rs/client/WebTarget/request()
io/corbel/oauth/api/UserResourceTest/createUserMissingClientCredential()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/oauth/api/UserResourceTest/createUserMissingClientCredential()#javax/ws/rs/core/Response/getStatus()
io/corbel/oauth/api/UserResourceTest/createUserMissingClientCredential()#javax/ws/rs/client/Entity/json(T)
io/corbel/oauth/api/UserResourceTest/createUserMissingClientCredential()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/oauth/api/UserResourceTest/createUserMissingClientCredential()#javax/ws/rs/client/SyncInvoker/post(javax.ws.rs.client.Entity,java.lang.Class)
io/corbel/oauth/api/UserResourceTest/createUserMissingClientCredential()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/oauth/api/UserResourceTest/deleteUserBadTokenTest()#javax/servlet/http/HttpServletRequest/getHeader(java.lang.String)
io/corbel/oauth/api/UserResourceTest/deleteUserBadTokenTest()#org/mockito/Mockito/when(T)
io/corbel/oauth/api/UserResourceTest/deleteUserBadTokenTest()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/oauth/api/UserResourceTest/deleteUserBadTokenTest()#javax/ws/rs/client/WebTarget/request()
io/corbel/oauth/api/UserResourceTest/deleteUserBadTokenTest()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/oauth/api/UserResourceTest/deleteUserBadTokenTest()#javax/ws/rs/core/Response/getStatus()
io/corbel/oauth/api/UserResourceTest/deleteUserBadTokenTest()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/oauth/api/UserResourceTest/deleteUserBadTokenTest()#javax/ws/rs/client/SyncInvoker/delete(java.lang.Class)
io/corbel/oauth/api/UserResourceTest/deleteUserBadTokenTest()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/oauth/api/UserResourceTest/deleteUserBadTokenTest()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/oauth/api/UserResourceTest/deleteUserBadTokenTest()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/oauth/api/UserResourceTest/getUserGoodTokenUsingWrongUserIdTest()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/oauth/api/UserResourceTest/getUserGoodTokenUsingWrongUserIdTest()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/oauth/api/UserResourceTest/getUserGoodTokenUsingWrongUserIdTest()#javax/ws/rs/client/WebTarget/request()
io/corbel/oauth/api/UserResourceTest/getUserGoodTokenUsingWrongUserIdTest()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/oauth/api/UserResourceTest/getUserGoodTokenUsingWrongUserIdTest()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/oauth/api/UserResourceTest/getUserGoodTokenUsingWrongUserIdTest()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/oauth/api/UserResourceTest/getUserGoodTokenUsingWrongUserIdTest()#javax/ws/rs/client/SyncInvoker/get(java.lang.Class)
io/corbel/oauth/api/UserResourceTest/getUserGoodTokenUsingWrongUserIdTest()#javax/ws/rs/core/Response/getStatus()
io/corbel/oauth/api/UserResourceTest/updateProfileBadTokenTest()#javax/servlet/http/HttpServletRequest/getHeader(java.lang.String)
io/corbel/oauth/api/UserResourceTest/updateProfileBadTokenTest()#javax/ws/rs/client/WebTarget/request(java.lang.String[])
io/corbel/oauth/api/UserResourceTest/updateProfileBadTokenTest()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/oauth/api/UserResourceTest/updateProfileBadTokenTest()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/oauth/api/UserResourceTest/updateProfileBadTokenTest()#javax/ws/rs/client/Entity/json(T)
io/corbel/oauth/api/UserResourceTest/updateProfileBadTokenTest()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/oauth/api/UserResourceTest/updateProfileBadTokenTest()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/oauth/api/UserResourceTest/updateProfileBadTokenTest()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/oauth/api/UserResourceTest/updateProfileBadTokenTest()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/oauth/api/UserResourceTest/updateProfileBadTokenTest()#org/mockito/Mockito/when(T)
io/corbel/oauth/api/UserResourceTest/updateProfileBadTokenTest()#io/corbel/oauth/TestUtils/createUserTest(io.corbel.oauth.model.Role)
io/corbel/oauth/api/UserResourceTest/updateProfileBadTokenTest()#javax/ws/rs/client/SyncInvoker/put(javax.ws.rs.client.Entity,java.lang.Class)
io/corbel/oauth/api/UserResourceTest/updateProfileBadTokenTest()#javax/ws/rs/core/Response/getStatus()
io/corbel/oauth/api/UserResourceTest/getUserGoodTokenUsingRootUserTest()#javax/servlet/http/HttpServletRequest/getHeader(java.lang.String)
io/corbel/oauth/api/UserResourceTest/getUserGoodTokenUsingRootUserTest()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/oauth/api/UserResourceTest/getUserGoodTokenUsingRootUserTest()#javax/ws/rs/client/WebTarget/request()
io/corbel/oauth/api/UserResourceTest/getUserGoodTokenUsingRootUserTest()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/oauth/api/UserResourceTest/getUserGoodTokenUsingRootUserTest()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/oauth/api/UserResourceTest/getUserGoodTokenUsingRootUserTest()#io/corbel/oauth/service/UserService/getUser(java.lang.String)
io/corbel/oauth/api/UserResourceTest/getUserGoodTokenUsingRootUserTest()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/oauth/api/UserResourceTest/getUserGoodTokenUsingRootUserTest()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/oauth/api/UserResourceTest/getUserGoodTokenUsingRootUserTest()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/oauth/api/UserResourceTest/getUserGoodTokenUsingRootUserTest()#org/mockito/Mockito/when(T)
io/corbel/oauth/api/UserResourceTest/getUserGoodTokenUsingRootUserTest()#io/corbel/oauth/TestUtils/createUserTest(io.corbel.oauth.model.Role)
io/corbel/oauth/api/UserResourceTest/getUserGoodTokenUsingRootUserTest()#javax/ws/rs/client/SyncInvoker/get(java.lang.Class)
io/corbel/oauth/api/UserResourceTest/getUserGoodTokenUsingRootUserTest()#javax/ws/rs/core/Response/getStatus()
io/corbel/oauth/api/UserResourceTest/getResetPasswordEmail()#javax/servlet/http/HttpServletRequest/getHeader(java.lang.String)
io/corbel/oauth/api/UserResourceTest/getResetPasswordEmail()#io/corbel/oauth/model/User/getEmail()
io/corbel/oauth/api/UserResourceTest/getResetPasswordEmail()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/oauth/api/UserResourceTest/getResetPasswordEmail()#javax/ws/rs/client/WebTarget/request()
io/corbel/oauth/api/UserResourceTest/getResetPasswordEmail()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/oauth/api/UserResourceTest/getResetPasswordEmail()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/oauth/api/UserResourceTest/getResetPasswordEmail()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/oauth/api/UserResourceTest/getResetPasswordEmail()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/oauth/api/UserResourceTest/getResetPasswordEmail()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/oauth/api/UserResourceTest/getResetPasswordEmail()#org/mockito/Mockito/when(T)
io/corbel/oauth/api/UserResourceTest/getResetPasswordEmail()#io/corbel/oauth/TestUtils/createUserTest(io.corbel.oauth.model.Role)
io/corbel/oauth/api/UserResourceTest/getResetPasswordEmail()#javax/ws/rs/client/SyncInvoker/get(java.lang.Class)
io/corbel/oauth/api/UserResourceTest/getResetPasswordEmail()#javax/ws/rs/core/Response/getStatus()
io/corbel/oauth/api/UserResourceTest/putUserValidateEmailBadToken()#javax/servlet/http/HttpServletRequest/getHeader(java.lang.String)
io/corbel/oauth/api/UserResourceTest/putUserValidateEmailBadToken()#io/corbel/oauth/model/User/setEmailValidated(java.lang.Boolean)
io/corbel/oauth/api/UserResourceTest/putUserValidateEmailBadToken()#org/mockito/Mockito/when(T)
io/corbel/oauth/api/UserResourceTest/putUserValidateEmailBadToken()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/oauth/api/UserResourceTest/putUserValidateEmailBadToken()#javax/ws/rs/client/WebTarget/request()
io/corbel/oauth/api/UserResourceTest/putUserValidateEmailBadToken()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/oauth/api/UserResourceTest/putUserValidateEmailBadToken()#io/corbel/oauth/model/User/User()
io/corbel/oauth/api/UserResourceTest/putUserValidateEmailBadToken()#javax/ws/rs/client/Entity/json(T)
io/corbel/oauth/api/UserResourceTest/putUserValidateEmailBadToken()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/oauth/api/UserResourceTest/putUserValidateEmailBadToken()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/oauth/api/UserResourceTest/putUserValidateEmailBadToken()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/oauth/api/UserResourceTest/putUserValidateEmailBadToken()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/oauth/api/UserResourceTest/putUserValidateEmailBadToken()#javax/ws/rs/client/SyncInvoker/put(javax.ws.rs.client.Entity,java.lang.Class)
io/corbel/oauth/api/UserResourceTest/putUserValidateEmailBadToken()#javax/ws/rs/core/Response/getStatus()
io/corbel/oauth/api/UserResourceTest/createUserWithProperties()#io/corbel/oauth/model/User/getProperties()
io/corbel/oauth/api/UserResourceTest/createUserWithProperties()#javax/servlet/http/HttpServletRequest/getHeader(java.lang.String)
io/corbel/oauth/api/UserResourceTest/createUserWithProperties()#org/mockito/ArgumentCaptor/getValue()
io/corbel/oauth/api/UserResourceTest/createUserWithProperties()#io/corbel/oauth/model/User/getPassword()
io/corbel/oauth/api/UserResourceTest/createUserWithProperties()#org/mockito/Mockito/when(T)
io/corbel/oauth/api/UserResourceTest/createUserWithProperties()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/oauth/api/UserResourceTest/createUserWithProperties()#io/corbel/oauth/model/User/User()
io/corbel/oauth/api/UserResourceTest/createUserWithProperties()#java/util/Map/put(K,V)
io/corbel/oauth/api/UserResourceTest/createUserWithProperties()#org/mockito/Matchers/eq(T)
io/corbel/oauth/api/UserResourceTest/createUserWithProperties()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/oauth/api/UserResourceTest/createUserWithProperties()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/oauth/api/UserResourceTest/createUserWithProperties()#io/corbel/oauth/model/User/getSalt()
io/corbel/oauth/api/UserResourceTest/createUserWithProperties()#io/corbel/oauth/model/User/getRole()
io/corbel/oauth/api/UserResourceTest/createUserWithProperties()#io/corbel/oauth/model/User/setUsername(java.lang.String)
io/corbel/oauth/api/UserResourceTest/createUserWithProperties()#org/mockito/ArgumentCaptor/forClass(java.lang.Class)
io/corbel/oauth/api/UserResourceTest/createUserWithProperties()#javax/ws/rs/client/WebTarget/request()
io/corbel/oauth/api/UserResourceTest/createUserWithProperties()#io/corbel/oauth/model/User/setPassword(java.lang.String)
io/corbel/oauth/api/UserResourceTest/createUserWithProperties()#io/corbel/oauth/model/User/setId(java.lang.String)
io/corbel/oauth/api/UserResourceTest/createUserWithProperties()#java/util/HashMap/HashMap()
io/corbel/oauth/api/UserResourceTest/createUserWithProperties()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/oauth/api/UserResourceTest/createUserWithProperties()#org/fest/assertions/api/AbstractAssert/isNotNull()
io/corbel/oauth/api/UserResourceTest/createUserWithProperties()#org/fest/assertions/api/Assertions/assertThat(java.util.Map)
io/corbel/oauth/api/UserResourceTest/createUserWithProperties()#javax/ws/rs/core/Response/getStatus()
io/corbel/oauth/api/UserResourceTest/createUserWithProperties()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/oauth/api/UserResourceTest/createUserWithProperties()#org/mockito/ArgumentCaptor/capture()
io/corbel/oauth/api/UserResourceTest/createUserWithProperties()#io/corbel/oauth/model/User/setEmail(java.lang.String)
io/corbel/oauth/api/UserResourceTest/createUserWithProperties()#javax/ws/rs/client/Entity/json(T)
io/corbel/oauth/api/UserResourceTest/createUserWithProperties()#org/fest/assertions/api/Assertions/assertThat(T)
io/corbel/oauth/api/UserResourceTest/createUserWithProperties()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/oauth/api/UserResourceTest/createUserWithProperties()#io/corbel/oauth/model/User/setProperties(java.util.Map)
io/corbel/oauth/api/UserResourceTest/createUserWithProperties()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/oauth/api/UserResourceTest/createUserWithProperties()#io/corbel/oauth/service/UserService/createUser(io.corbel.oauth.model.User,io.corbel.oauth.model.Client)
io/corbel/oauth/api/UserResourceTest/createUserWithProperties()#javax/ws/rs/client/SyncInvoker/post(javax.ws.rs.client.Entity,java.lang.Class)
io/corbel/oauth/api/UserResourceTest/createUserWithProperties()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/oauth/api/UserResourceTest/deleteUserGoodTokenUsingDifferentUserIdTest()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/oauth/api/UserResourceTest/deleteUserGoodTokenUsingDifferentUserIdTest()#javax/ws/rs/client/WebTarget/request()
io/corbel/oauth/api/UserResourceTest/deleteUserGoodTokenUsingDifferentUserIdTest()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/oauth/api/UserResourceTest/deleteUserGoodTokenUsingDifferentUserIdTest()#javax/ws/rs/core/Response/getStatus()
io/corbel/oauth/api/UserResourceTest/deleteUserGoodTokenUsingDifferentUserIdTest()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/oauth/api/UserResourceTest/deleteUserGoodTokenUsingDifferentUserIdTest()#javax/ws/rs/client/SyncInvoker/delete(java.lang.Class)
io/corbel/oauth/api/UserResourceTest/deleteUserGoodTokenUsingDifferentUserIdTest()#io/corbel/oauth/service/UserService/getUser(java.lang.String)
io/corbel/oauth/api/UserResourceTest/deleteUserGoodTokenUsingDifferentUserIdTest()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/oauth/api/UserResourceTest/deleteUserGoodTokenUsingDifferentUserIdTest()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/oauth/api/UserResourceTest/deleteUserGoodTokenUsingDifferentUserIdTest()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/oauth/api/UserResourceTest/deleteUserGoodTokenUsingDifferentUserIdTest()#org/mockito/Mockito/when(T)
io/corbel/oauth/api/UserResourceTest/deleteUserGoodTokenUsingDifferentUserIdTest()#io/corbel/oauth/TestUtils/createUserTest(io.corbel.oauth.model.Role)
io/corbel/oauth/api/UserResourceTest/updateProfileGoodTokenUsingDifferentUserIdTest()#javax/ws/rs/client/WebTarget/request(java.lang.String[])
io/corbel/oauth/api/UserResourceTest/updateProfileGoodTokenUsingDifferentUserIdTest()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/oauth/api/UserResourceTest/updateProfileGoodTokenUsingDifferentUserIdTest()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/oauth/api/UserResourceTest/updateProfileGoodTokenUsingDifferentUserIdTest()#javax/ws/rs/client/Entity/json(T)
io/corbel/oauth/api/UserResourceTest/updateProfileGoodTokenUsingDifferentUserIdTest()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/oauth/api/UserResourceTest/updateProfileGoodTokenUsingDifferentUserIdTest()#io/corbel/oauth/service/UserService/getUser(java.lang.String)
io/corbel/oauth/api/UserResourceTest/updateProfileGoodTokenUsingDifferentUserIdTest()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/oauth/api/UserResourceTest/updateProfileGoodTokenUsingDifferentUserIdTest()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/oauth/api/UserResourceTest/updateProfileGoodTokenUsingDifferentUserIdTest()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/oauth/api/UserResourceTest/updateProfileGoodTokenUsingDifferentUserIdTest()#org/mockito/Mockito/when(T)
io/corbel/oauth/api/UserResourceTest/updateProfileGoodTokenUsingDifferentUserIdTest()#io/corbel/oauth/TestUtils/createUserTest(io.corbel.oauth.model.Role)
io/corbel/oauth/api/UserResourceTest/updateProfileGoodTokenUsingDifferentUserIdTest()#javax/ws/rs/client/SyncInvoker/put(javax.ws.rs.client.Entity,java.lang.Class)
io/corbel/oauth/api/UserResourceTest/updateProfileGoodTokenUsingDifferentUserIdTest()#javax/ws/rs/core/Response/getStatus()
io/corbel/oauth/api/UserResourceTest/deleteUserNotBearerTokenTest()#javax/servlet/http/HttpServletRequest/getHeader(java.lang.String)
io/corbel/oauth/api/UserResourceTest/deleteUserNotBearerTokenTest()#org/mockito/Mockito/when(T)
io/corbel/oauth/api/UserResourceTest/deleteUserNotBearerTokenTest()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/oauth/api/UserResourceTest/deleteUserNotBearerTokenTest()#javax/ws/rs/client/WebTarget/request()
io/corbel/oauth/api/UserResourceTest/deleteUserNotBearerTokenTest()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/oauth/api/UserResourceTest/deleteUserNotBearerTokenTest()#javax/ws/rs/core/Response/getStatus()
io/corbel/oauth/api/UserResourceTest/deleteUserNotBearerTokenTest()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/oauth/api/UserResourceTest/deleteUserNotBearerTokenTest()#javax/ws/rs/client/SyncInvoker/delete(java.lang.Class)
io/corbel/oauth/api/UserResourceTest/deleteUserNotBearerTokenTest()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/oauth/api/UserResourceTest/deleteUserNotBearerTokenTest()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/oauth/api/UserResourceTest/deleteUserNotBearerTokenTest()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/oauth/api/UserResourceTest/getUserGoodTokenTest()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/oauth/api/UserResourceTest/getUserGoodTokenTest()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/oauth/api/UserResourceTest/getUserGoodTokenTest()#javax/ws/rs/core/Response/readEntity(java.lang.Class)
io/corbel/oauth/api/UserResourceTest/getUserGoodTokenTest()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/oauth/api/UserResourceTest/getUserGoodTokenTest()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/oauth/api/UserResourceTest/getUserGoodTokenTest()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/oauth/api/UserResourceTest/getUserGoodTokenTest()#org/mockito/Mockito/when(T)
io/corbel/oauth/api/UserResourceTest/getUserGoodTokenTest()#io/corbel/oauth/TestUtils/createUserTest(io.corbel.oauth.model.Role)
io/corbel/oauth/api/UserResourceTest/getUserGoodTokenTest()#javax/ws/rs/client/WebTarget/request()
io/corbel/oauth/api/UserResourceTest/getUserGoodTokenTest()#io/corbel/oauth/model/User/setPassword(java.lang.String)
io/corbel/oauth/api/UserResourceTest/getUserGoodTokenTest()#javax/ws/rs/client/SyncInvoker/get(java.lang.Class)
io/corbel/oauth/api/UserResourceTest/getUserGoodTokenTest()#javax/ws/rs/core/Response/getStatus()
io/corbel/oauth/api/UserResourceTest/getUserGoodTokenTest()#org/fest/assertions/api/Assertions/assertThat(T)
io/corbel/oauth/api/UserResourceTest/getUserGoodTokenTest()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/oauth/api/UserResourceTest/getUserGoodTokenTest()#io/corbel/oauth/service/UserService/getUser(java.lang.String)
io/corbel/oauth/api/UserResourceTest/getUserGoodTokenTest()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/oauth/api/UserResourceTest/updateProfileNotBearerTokenTest()#javax/servlet/http/HttpServletRequest/getHeader(java.lang.String)
io/corbel/oauth/api/UserResourceTest/updateProfileNotBearerTokenTest()#javax/ws/rs/client/WebTarget/request(java.lang.String[])
io/corbel/oauth/api/UserResourceTest/updateProfileNotBearerTokenTest()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/oauth/api/UserResourceTest/updateProfileNotBearerTokenTest()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/oauth/api/UserResourceTest/updateProfileNotBearerTokenTest()#javax/ws/rs/client/Entity/json(T)
io/corbel/oauth/api/UserResourceTest/updateProfileNotBearerTokenTest()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/oauth/api/UserResourceTest/updateProfileNotBearerTokenTest()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/oauth/api/UserResourceTest/updateProfileNotBearerTokenTest()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/oauth/api/UserResourceTest/updateProfileNotBearerTokenTest()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/oauth/api/UserResourceTest/updateProfileNotBearerTokenTest()#org/mockito/Mockito/when(T)
io/corbel/oauth/api/UserResourceTest/updateProfileNotBearerTokenTest()#io/corbel/oauth/TestUtils/createUserTest(io.corbel.oauth.model.Role)
io/corbel/oauth/api/UserResourceTest/updateProfileNotBearerTokenTest()#javax/ws/rs/client/SyncInvoker/put(javax.ws.rs.client.Entity,java.lang.Class)
io/corbel/oauth/api/UserResourceTest/updateProfileNotBearerTokenTest()#javax/ws/rs/core/Response/getStatus()
io/corbel/oauth/api/UserResourceTest/deleteUserGoodTokenTest()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/oauth/api/UserResourceTest/deleteUserGoodTokenTest()#javax/ws/rs/client/WebTarget/request()
io/corbel/oauth/api/UserResourceTest/deleteUserGoodTokenTest()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/oauth/api/UserResourceTest/deleteUserGoodTokenTest()#javax/ws/rs/core/Response/getStatus()
io/corbel/oauth/api/UserResourceTest/deleteUserGoodTokenTest()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/oauth/api/UserResourceTest/deleteUserGoodTokenTest()#javax/ws/rs/client/SyncInvoker/delete(java.lang.Class)
io/corbel/oauth/api/UserResourceTest/deleteUserGoodTokenTest()#io/corbel/oauth/service/UserService/getUser(java.lang.String)
io/corbel/oauth/api/UserResourceTest/deleteUserGoodTokenTest()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/oauth/api/UserResourceTest/deleteUserGoodTokenTest()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/oauth/api/UserResourceTest/deleteUserGoodTokenTest()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/oauth/api/UserResourceTest/deleteUserGoodTokenTest()#org/mockito/Mockito/when(T)
io/corbel/oauth/api/UserResourceTest/deleteUserGoodTokenTest()#io/corbel/oauth/TestUtils/createUserTest(io.corbel.oauth.model.Role)
io/corbel/oauth/api/UserResourceTest/updateProfileGoodTokenTest()#javax/ws/rs/client/WebTarget/request(java.lang.String[])
io/corbel/oauth/api/UserResourceTest/updateProfileGoodTokenTest()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/oauth/api/UserResourceTest/updateProfileGoodTokenTest()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/oauth/api/UserResourceTest/updateProfileGoodTokenTest()#javax/ws/rs/client/Entity/json(T)
io/corbel/oauth/api/UserResourceTest/updateProfileGoodTokenTest()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/oauth/api/UserResourceTest/updateProfileGoodTokenTest()#io/corbel/oauth/service/UserService/getUser(java.lang.String)
io/corbel/oauth/api/UserResourceTest/updateProfileGoodTokenTest()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/oauth/api/UserResourceTest/updateProfileGoodTokenTest()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/oauth/api/UserResourceTest/updateProfileGoodTokenTest()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/oauth/api/UserResourceTest/updateProfileGoodTokenTest()#org/mockito/Mockito/when(T)
io/corbel/oauth/api/UserResourceTest/updateProfileGoodTokenTest()#io/corbel/oauth/TestUtils/createUserTest(io.corbel.oauth.model.Role)
io/corbel/oauth/api/UserResourceTest/updateProfileGoodTokenTest()#javax/ws/rs/client/SyncInvoker/put(javax.ws.rs.client.Entity,java.lang.Class)
io/corbel/oauth/api/UserResourceTest/updateProfileGoodTokenTest()#javax/ws/rs/core/Response/getStatus()
io/corbel/oauth/api/auth/ClientCredentialsAuthenticator/authenticate(io.dropwizard.auth.basic.BasicCredentials)#java/lang/String/equals(java.lang.Object)
io/corbel/oauth/api/auth/ClientCredentialsAuthenticator/authenticate(io.dropwizard.auth.basic.BasicCredentials)#com/google/common/base/Optional/of(T)
io/corbel/oauth/api/auth/ClientCredentialsAuthenticator/authenticate(io.dropwizard.auth.basic.BasicCredentials)#com/google/common/base/Optional/absent()
io/corbel/oauth/api/auth/ClientCredentialsAuthenticator/authenticate(io.dropwizard.auth.basic.BasicCredentials)#io/corbel/oauth/repository/ClientRepository/findByName(java.lang.String)
io/corbel/oauth/api/auth/ClientCredentialsAuthenticator/authenticate(io.dropwizard.auth.basic.BasicCredentials)#io/dropwizard/auth/AuthenticationException/AuthenticationException(java.lang.Throwable)
io/corbel/oauth/api/auth/ClientCredentialsAuthenticator/authenticate(io.dropwizard.auth.basic.BasicCredentials)#io/dropwizard/auth/basic/BasicCredentials/getUsername()
io/corbel/oauth/api/auth/ClientCredentialsAuthenticator/authenticate(io.dropwizard.auth.basic.BasicCredentials)#io/dropwizard/auth/basic/BasicCredentials/getPassword()
io/corbel/oauth/api/auth/ClientCredentialsAuthenticator/authenticate(io.dropwizard.auth.basic.BasicCredentials)#io/corbel/oauth/model/Client/getKey()
io/corbel/resources/rem/service/DefaultNamespaceNormalizer/normalize(java.lang.String)#java/lang/String/replace(char,char)
io/corbel/resources/href/LinksBuilder/appendLinks(com.google.gson.JsonObject)#com/google/gson/JsonArray/add(com.google.gson.JsonElement)
io/corbel/resources/href/LinksBuilder/appendLinks(com.google.gson.JsonObject)#java/util/List/isEmpty()
io/corbel/resources/href/LinksBuilder/appendLinks(com.google.gson.JsonObject)#com/google/gson/Gson/toJsonTree(java.lang.Object)
io/corbel/resources/href/LinksBuilder/appendLinks(com.google.gson.JsonObject)#com/google/gson/Gson/Gson()
io/corbel/resources/href/LinksBuilder/appendLinks(com.google.gson.JsonObject)#com/google/gson/JsonArray/JsonArray()
io/corbel/resources/href/LinksBuilder/appendLinks(com.google.gson.JsonObject)#com/google/gson/JsonObject/add(java.lang.String,com.google.gson.JsonElement)
io/corbel/resources/href/LinksBuilder/typeUri(java.net.URI)#io/corbel/resources/href/LinksBuilder/GroundLinksBuilder/GroundLinksBuilder(java.net.URI)
io/corbel/evci/eventbus/EvciEventHandler/handle(io.corbel.event.EvciEvent)#com/google/common/collect/ImmutableMap/of(K,V,K,V)
io/corbel/evci/eventbus/EvciEventHandler/handle(io.corbel.event.EvciEvent)#java/util/Objects/nonNull(java.lang.Object)
io/corbel/evci/eventbus/EvciEventHandler/handle(io.corbel.event.EvciEvent)#org/slf4j/Logger/warn(java.lang.String)
io/corbel/evci/eventbus/EvciEventHandler/handle(io.corbel.event.EvciEvent)#io/corbel/event/EvciEvent/getType()
io/corbel/evci/eventbus/EvciEventHandler/handle(io.corbel.event.EvciEvent)#com/fasterxml/jackson/databind/ObjectMapper/createObjectNode()
io/corbel/evci/eventbus/EvciEventHandler/handle(io.corbel.event.EvciEvent)#java/lang/RuntimeException/RuntimeException(java.lang.Throwable)
io/corbel/evci/eventbus/EvciEventHandler/handle(io.corbel.event.EvciEvent)#io/corbel/evci/service/EventsService/registerEvent(java.lang.String,com.fasterxml.jackson.databind.JsonNode)
io/corbel/evci/eventbus/EvciEventHandler/handle(io.corbel.event.EvciEvent)#io/corbel/event/EvciEvent/getData()
io/corbel/evci/eventbus/EvciEventHandler/handle(io.corbel.event.EvciEvent)#com/fasterxml/jackson/databind/ObjectMapper/readTree(java.lang.String)
io/corbel/evci/eventbus/EvciEventHandler/handle(io.corbel.event.EvciEvent)#com/fasterxml/jackson/databind/ObjectMapper/convertValue(java.lang.Object,java.lang.Class)
io/corbel/evci/eventbus/EvciEventHandler/handle(io.corbel.event.EvciEvent)#com/fasterxml/jackson/databind/node/ObjectNode/setAll(java.util.Map)
io/corbel/evci/eventbus/EvciEventHandler/handle(io.corbel.event.EvciEvent)#io/corbel/evci/model/Header/setDomainId(java.lang.String)
io/corbel/evci/eventbus/EvciEventHandler/handle(io.corbel.event.EvciEvent)#org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)
io/corbel/evci/eventbus/EvciEventHandler/handle(io.corbel.event.EvciEvent)#io/corbel/eventbus/EventWithSpecificDomain/getDomain()
io/corbel/evci/eventbus/EvciEventHandler/handle(io.corbel.event.EvciEvent)#io/corbel/evci/model/Header/Header()
io/corbel/oauth/api/AuthorizeResourceTest/testInvalidResponseType()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/oauth/api/AuthorizeResourceTest/testInvalidResponseType()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/oauth/api/AuthorizeResourceTest/testInvalidResponseType()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/oauth/api/AuthorizeResourceTest/testInvalidResponseType()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/oauth/api/AuthorizeResourceTest/testInvalidResponseType()#javax/ws/rs/client/WebTarget/queryParam(java.lang.String,java.lang.Object[])
io/corbel/oauth/api/AuthorizeResourceTest/testInvalidResponseType()#javax/ws/rs/client/WebTarget/request()
io/corbel/oauth/api/AuthorizeResourceTest/testInvalidResponseType()#javax/ws/rs/client/SyncInvoker/get(java.lang.Class)
io/corbel/oauth/api/AuthorizeResourceTest/testInvalidResponseType()#javax/ws/rs/core/Response/getStatus()
io/corbel/oauth/api/AuthorizeResourceTest/testMissingRedirectUri()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/oauth/api/AuthorizeResourceTest/testMissingRedirectUri()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/oauth/api/AuthorizeResourceTest/testMissingRedirectUri()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/oauth/api/AuthorizeResourceTest/testMissingRedirectUri()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/oauth/api/AuthorizeResourceTest/testMissingRedirectUri()#javax/ws/rs/client/WebTarget/queryParam(java.lang.String,java.lang.Object[])
io/corbel/oauth/api/AuthorizeResourceTest/testMissingRedirectUri()#javax/ws/rs/client/WebTarget/request()
io/corbel/oauth/api/AuthorizeResourceTest/testMissingRedirectUri()#javax/ws/rs/client/SyncInvoker/get(java.lang.Class)
io/corbel/oauth/api/AuthorizeResourceTest/testMissingRedirectUri()#javax/ws/rs/core/Response/getStatus()
io/corbel/oauth/api/AuthorizeResourceTest/testMissingClientId()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/oauth/api/AuthorizeResourceTest/testMissingClientId()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/oauth/api/AuthorizeResourceTest/testMissingClientId()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/oauth/api/AuthorizeResourceTest/testMissingClientId()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/oauth/api/AuthorizeResourceTest/testMissingClientId()#javax/ws/rs/client/WebTarget/queryParam(java.lang.String,java.lang.Object[])
io/corbel/oauth/api/AuthorizeResourceTest/testMissingClientId()#javax/ws/rs/client/WebTarget/request()
io/corbel/oauth/api/AuthorizeResourceTest/testMissingClientId()#javax/ws/rs/client/SyncInvoker/get(java.lang.Class)
io/corbel/oauth/api/AuthorizeResourceTest/testMissingClientId()#javax/ws/rs/core/Response/getStatus()
io/corbel/oauth/api/AuthorizeResourceTest/before()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/oauth/api/AuthorizeResourceTest/before()#org/mockito/Mockito/when(T)
io/corbel/oauth/api/AuthorizeResourceTest/before()#io/corbel/oauth/service/ClientService/findByName(java.lang.String)
io/corbel/oauth/api/AuthorizeResourceTest/before()#java/util/Optional/of(T)
io/corbel/oauth/api/AuthorizeResourceTest/before()#io/corbel/oauth/model/Client/Client()
io/corbel/oauth/api/AuthorizeResourceTest/before()#io/corbel/oauth/model/Client/setDomain(java.lang.String)
io/corbel/oauth/api/AuthorizeResourceTest/before()#org/mockito/Mockito/reset(T[])
io/corbel/oauth/api/AuthorizeResourceTest/before()#io/corbel/oauth/model/Client/setName(java.lang.String)
io/corbel/oauth/api/AuthorizeResourceTest/testLoginWithEmail()#javax/ws/rs/client/Entity/form(javax.ws.rs.core.MultivaluedMap)
io/corbel/oauth/api/AuthorizeResourceTest/testLoginWithEmail()#io/corbel/oauth/service/UserService/getUserByEmailAndDomain(java.lang.String,java.lang.String)
io/corbel/oauth/api/AuthorizeResourceTest/testLoginWithEmail()#javax/ws/rs/core/Configurable/property(java.lang.String,java.lang.Object)
io/corbel/oauth/api/AuthorizeResourceTest/testLoginWithEmail()#io/corbel/oauth/model/User/getId()
io/corbel/oauth/api/AuthorizeResourceTest/testLoginWithEmail()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/oauth/api/AuthorizeResourceTest/testLoginWithEmail()#javax/ws/rs/client/WebTarget/request()
io/corbel/oauth/api/AuthorizeResourceTest/testLoginWithEmail()#javax/ws/rs/core/Response/getStatus()
io/corbel/oauth/api/AuthorizeResourceTest/testLoginWithEmail()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/oauth/api/AuthorizeResourceTest/testLoginWithEmail()#io/corbel/lib/token/factory/TokenFactory/createToken(io.corbel.lib.token.TokenInfo,long,java.lang.String[])
io/corbel/oauth/api/AuthorizeResourceTest/testLoginWithEmail()#java/net/URI/getHost()
io/corbel/oauth/api/AuthorizeResourceTest/testLoginWithEmail()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/oauth/api/AuthorizeResourceTest/testLoginWithEmail()#io/corbel/oauth/service/ClientService/verifyRedirectUri(java.lang.String,io.corbel.oauth.model.Client)
io/corbel/oauth/api/AuthorizeResourceTest/testLoginWithEmail()#io/corbel/lib/token/TokenGrant/TokenGrant(java.lang.String,long)
io/corbel/oauth/api/AuthorizeResourceTest/testLoginWithEmail()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/oauth/api/AuthorizeResourceTest/testLoginWithEmail()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/oauth/api/AuthorizeResourceTest/testLoginWithEmail()#org/mockito/Mockito/when(T)
io/corbel/oauth/api/AuthorizeResourceTest/testLoginWithEmail()#io/corbel/oauth/token/TokenExpireTime/getTokenExpireTimeFromResponseType(io.corbel.lib.token.model.TokenType)
io/corbel/oauth/api/AuthorizeResourceTest/testLoginWithEmail()#java/net/URI/getQuery()
io/corbel/oauth/api/AuthorizeResourceTest/testLoginWithEmail()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/oauth/api/AuthorizeResourceTest/testLoginWithEmail()#io/corbel/oauth/model/User/checkPassword(java.lang.String)
io/corbel/oauth/api/AuthorizeResourceTest/testLoginWithEmail()#javax/ws/rs/core/Response/getLocation()
io/corbel/oauth/api/AuthorizeResourceTest/testLoginWithEmail()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/oauth/api/AuthorizeResourceTest/testLoginWithEmail()#java/net/URI/getFragment()
io/corbel/oauth/api/AuthorizeResourceTest/testLoginWithEmail()#org/fest/assertions/api/StringAssert/contains(java.lang.String)
io/corbel/oauth/api/AuthorizeResourceTest/testLoginWithEmail()#javax/ws/rs/client/SyncInvoker/post(javax.ws.rs.client.Entity,java.lang.Class)
io/corbel/oauth/api/AuthorizeResourceTest/testLoginWithEmail()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/oauth/api/AuthorizeResourceTest/testLoginWithFailedFilters()#javax/ws/rs/core/Configurable/property(java.lang.String,java.lang.Object)
io/corbel/oauth/api/AuthorizeResourceTest/testLoginWithFailedFilters()#io/corbel/oauth/filter/FilterRegistry/filter(java.lang.String,java.lang.String,java.lang.String,java.lang.String,javax.ws.rs.core.MultivaluedMap)
io/corbel/oauth/api/AuthorizeResourceTest/testLoginWithFailedFilters()#org/mockito/stubbing/Stubber/when(T)
io/corbel/oauth/api/AuthorizeResourceTest/testLoginWithFailedFilters()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/oauth/api/AuthorizeResourceTest/testLoginWithFailedFilters()#javax/ws/rs/client/WebTarget/request()
io/corbel/oauth/api/AuthorizeResourceTest/testLoginWithFailedFilters()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/oauth/api/AuthorizeResourceTest/testLoginWithFailedFilters()#javax/ws/rs/core/Response/getStatus()
io/corbel/oauth/api/AuthorizeResourceTest/testLoginWithFailedFilters()#org/mockito/Matchers/any()
io/corbel/oauth/api/AuthorizeResourceTest/testLoginWithFailedFilters()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/oauth/api/AuthorizeResourceTest/testLoginWithFailedFilters()#javax/ws/rs/client/Entity/form(javax.ws.rs.core.MultivaluedMap)
io/corbel/oauth/api/AuthorizeResourceTest/testLoginWithFailedFilters()#org/mockito/Mockito/doThrow(java.lang.Class)
io/corbel/oauth/api/AuthorizeResourceTest/testLoginWithFailedFilters()#javax/ws/rs/client/SyncInvoker/post(javax.ws.rs.client.Entity,java.lang.Class)
io/corbel/oauth/api/AuthorizeResourceTest/testLoginWithFailedFilters()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/oauth/api/AuthorizeResourceTest/testLoginWithResponseTypeToken()#javax/ws/rs/client/Entity/form(javax.ws.rs.core.MultivaluedMap)
io/corbel/oauth/api/AuthorizeResourceTest/testLoginWithResponseTypeToken()#io/corbel/oauth/service/UserService/findByUserNameAndDomain(java.lang.String,java.lang.String)
io/corbel/oauth/api/AuthorizeResourceTest/testLoginWithResponseTypeToken()#io/corbel/oauth/model/User/getId()
io/corbel/oauth/api/AuthorizeResourceTest/testLoginWithResponseTypeToken()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/oauth/api/AuthorizeResourceTest/testLoginWithResponseTypeToken()#javax/ws/rs/client/WebTarget/request()
io/corbel/oauth/api/AuthorizeResourceTest/testLoginWithResponseTypeToken()#javax/ws/rs/core/Response/getStatus()
io/corbel/oauth/api/AuthorizeResourceTest/testLoginWithResponseTypeToken()#io/corbel/oauth/model/User/checkPassword(java.lang.String)
io/corbel/oauth/api/AuthorizeResourceTest/testLoginWithResponseTypeToken()#javax/ws/rs/core/MultivaluedMap/add(K,V)
io/corbel/oauth/api/AuthorizeResourceTest/testLoginWithResponseTypeToken()#io/corbel/oauth/service/ClientService/verifyRedirectUri(java.lang.String,io.corbel.oauth.model.Client)
io/corbel/oauth/api/AuthorizeResourceTest/testLoginWithResponseTypeToken()#javax/ws/rs/core/Response/readEntity(java.lang.Class)
io/corbel/oauth/api/AuthorizeResourceTest/testLoginWithResponseTypeToken()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/oauth/api/AuthorizeResourceTest/testLoginWithResponseTypeToken()#io/corbel/lib/token/TokenGrant/TokenGrant(java.lang.String,long)
io/corbel/oauth/api/AuthorizeResourceTest/testLoginWithResponseTypeToken()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/oauth/api/AuthorizeResourceTest/testLoginWithResponseTypeToken()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/oauth/api/AuthorizeResourceTest/testLoginWithResponseTypeToken()#org/mockito/Mockito/when(T)
io/corbel/oauth/api/AuthorizeResourceTest/testLoginWithResponseTypeToken()#io/corbel/oauth/token/TokenExpireTime/getTokenExpireTimeFromResponseType(io.corbel.lib.token.model.TokenType)
io/corbel/oauth/api/AuthorizeResourceTest/testLoginWithResponseTypeToken()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/oauth/api/AuthorizeResourceTest/testLoginWithResponseTypeToken()#io/corbel/lib/token/factory/TokenFactory/createToken(io.corbel.lib.token.TokenInfo,long,java.lang.String[])
io/corbel/oauth/api/AuthorizeResourceTest/testLoginWithResponseTypeToken()#javax/ws/rs/core/MultivaluedHashMap/MultivaluedHashMap()
io/corbel/oauth/api/AuthorizeResourceTest/testLoginWithResponseTypeToken()#org/fest/assertions/api/Assertions/assertThat(T)
io/corbel/oauth/api/AuthorizeResourceTest/testLoginWithResponseTypeToken()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/oauth/api/AuthorizeResourceTest/testLoginWithResponseTypeToken()#javax/ws/rs/client/SyncInvoker/post(javax.ws.rs.client.Entity,java.lang.Class)
io/corbel/oauth/api/AuthorizeResourceTest/testLoginWithResponseTypeToken()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/oauth/api/AuthorizeResourceTest/testMissingResponseType()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/oauth/api/AuthorizeResourceTest/testMissingResponseType()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/oauth/api/AuthorizeResourceTest/testMissingResponseType()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/oauth/api/AuthorizeResourceTest/testMissingResponseType()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/oauth/api/AuthorizeResourceTest/testMissingResponseType()#javax/ws/rs/client/WebTarget/queryParam(java.lang.String,java.lang.Object[])
io/corbel/oauth/api/AuthorizeResourceTest/testMissingResponseType()#javax/ws/rs/client/WebTarget/request()
io/corbel/oauth/api/AuthorizeResourceTest/testMissingResponseType()#javax/ws/rs/client/SyncInvoker/get(java.lang.Class)
io/corbel/oauth/api/AuthorizeResourceTest/testMissingResponseType()#javax/ws/rs/core/Response/getStatus()
io/corbel/oauth/api/AuthorizeResourceTest/testInvalidRedirectUri()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/oauth/api/AuthorizeResourceTest/testInvalidRedirectUri()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/oauth/api/AuthorizeResourceTest/testInvalidRedirectUri()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/oauth/api/AuthorizeResourceTest/testInvalidRedirectUri()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/oauth/api/AuthorizeResourceTest/testInvalidRedirectUri()#javax/ws/rs/client/WebTarget/queryParam(java.lang.String,java.lang.Object[])
io/corbel/oauth/api/AuthorizeResourceTest/testInvalidRedirectUri()#javax/ws/rs/client/WebTarget/request()
io/corbel/oauth/api/AuthorizeResourceTest/testInvalidRedirectUri()#javax/ws/rs/client/SyncInvoker/get(java.lang.Class)
io/corbel/oauth/api/AuthorizeResourceTest/testInvalidRedirectUri()#javax/ws/rs/core/Response/getStatus()
io/corbel/oauth/api/AuthorizeResourceTest/testLogin()#javax/ws/rs/client/Entity/form(javax.ws.rs.core.MultivaluedMap)
io/corbel/oauth/api/AuthorizeResourceTest/testLogin()#io/corbel/oauth/model/User/getId()
io/corbel/oauth/api/AuthorizeResourceTest/testLogin()#io/corbel/oauth/service/ClientService/findByName(java.lang.String)
io/corbel/oauth/api/AuthorizeResourceTest/testLogin()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/oauth/api/AuthorizeResourceTest/testLogin()#javax/ws/rs/client/WebTarget/request()
io/corbel/oauth/api/AuthorizeResourceTest/testLogin()#javax/ws/rs/core/Response/getStatus()
io/corbel/oauth/api/AuthorizeResourceTest/testLogin()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/oauth/api/AuthorizeResourceTest/testLogin()#io/corbel/lib/token/factory/TokenFactory/createToken(io.corbel.lib.token.TokenInfo,long,java.lang.String[])
io/corbel/oauth/api/AuthorizeResourceTest/testLogin()#java/net/URI/getHost()
io/corbel/oauth/api/AuthorizeResourceTest/testLogin()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/oauth/api/AuthorizeResourceTest/testLogin()#io/corbel/oauth/service/ClientService/verifyRedirectUri(java.lang.String,io.corbel.oauth.model.Client)
io/corbel/oauth/api/AuthorizeResourceTest/testLogin()#io/corbel/lib/token/TokenGrant/TokenGrant(java.lang.String,long)
io/corbel/oauth/api/AuthorizeResourceTest/testLogin()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/oauth/api/AuthorizeResourceTest/testLogin()#javax/ws/rs/core/Configurable/property(java.lang.String,java.lang.Object)
io/corbel/oauth/api/AuthorizeResourceTest/testLogin()#io/corbel/oauth/service/UserService/findByUserNameAndDomain(java.lang.String,java.lang.String)
io/corbel/oauth/api/AuthorizeResourceTest/testLogin()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/oauth/api/AuthorizeResourceTest/testLogin()#org/mockito/Mockito/when(T)
io/corbel/oauth/api/AuthorizeResourceTest/testLogin()#java/util/Optional/of(T)
io/corbel/oauth/api/AuthorizeResourceTest/testLogin()#io/corbel/oauth/token/TokenExpireTime/getTokenExpireTimeFromResponseType(io.corbel.lib.token.model.TokenType)
io/corbel/oauth/api/AuthorizeResourceTest/testLogin()#java/net/URI/getQuery()
io/corbel/oauth/api/AuthorizeResourceTest/testLogin()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/oauth/api/AuthorizeResourceTest/testLogin()#io/corbel/oauth/model/User/checkPassword(java.lang.String)
io/corbel/oauth/api/AuthorizeResourceTest/testLogin()#javax/ws/rs/core/Response/getLocation()
io/corbel/oauth/api/AuthorizeResourceTest/testLogin()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/oauth/api/AuthorizeResourceTest/testLogin()#java/net/URI/getFragment()
io/corbel/oauth/api/AuthorizeResourceTest/testLogin()#org/fest/assertions/api/StringAssert/contains(java.lang.String)
io/corbel/oauth/api/AuthorizeResourceTest/testLogin()#javax/ws/rs/client/SyncInvoker/post(javax.ws.rs.client.Entity,java.lang.Class)
io/corbel/oauth/api/AuthorizeResourceTest/testLogin()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/resources/rem/acl/AclGetRemTest/testGetCollection()#io/corbel/resources/rem/request/RequestParameters/getOptionalApiParameters()
io/corbel/resources/rem/acl/AclGetRemTest/testGetCollection()#javax/ws/rs/core/Response/getEntity()
io/corbel/resources/rem/acl/AclGetRemTest/testGetCollection()#java/util/Collections/singletonList(T)
io/corbel/resources/rem/acl/AclGetRemTest/testGetCollection()#io/corbel/resources/rem/request/CollectionParameters/getQueries()
io/corbel/resources/rem/acl/AclGetRemTest/testGetCollection()#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/rem/acl/AclGetRemTest/testGetCollection()#org/fest/assertions/api/Assertions/assertThat(T)
io/corbel/resources/rem/acl/AclGetRemTest/testGetCollection()#io/corbel/resources/rem/acl/AclBaseRem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional,java.util.Optional)
io/corbel/resources/rem/acl/AclGetRemTest/testGetCollection()#org/mockito/Matchers/eq(T)
io/corbel/resources/rem/acl/AclGetRemTest/testGetCollection()#com/google/gson/JsonObject/add(java.lang.String,com.google.gson.JsonElement)
io/corbel/resources/rem/acl/AclGetRemTest/testGetCollection()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/resources/rem/acl/AclGetRemTest/testGetCollection()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/resources/rem/acl/AclGetRemTest/testGetCollection()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/acl/AclGetRemTest/testGetCollection()#io/corbel/resources/rem/acl/AclTestUtils/getEntityWithoutAcl()
io/corbel/resources/rem/acl/AclGetRemTest/testGetCollection()#io/corbel/resources/rem/service/AclResourcesService/getCollection(io.corbel.resources.rem.Rem,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.List)
io/corbel/resources/rem/acl/AclGetRemTest/testGetCollection()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/resources/rem/acl/AclGetRemTest/testGetCollection()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/acl/AclGetRemTest/testGetCollection()#java/util/Optional/of(T)
io/corbel/resources/rem/acl/AclGetRemTest/testGetCollection()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/resources/rem/acl/AclGetRemTest/testGetCollection()#com/google/gson/JsonObject/addProperty(java.lang.String,java.lang.String)
io/corbel/resources/rem/acl/AclGetRemTest/testGetCollection()#io/corbel/resources/rem/request/RequestParameters/getAcceptedMediaTypes()
io/corbel/resources/rem/acl/AclGetRemTest/testGetCollection()#com/google/gson/JsonObject/JsonObject()
io/corbel/resources/rem/acl/AclGetRemTest/testGetCollection()#org/mockito/Matchers/any()
io/corbel/resources/rem/acl/AclGetRemTest/testGetCollection()#java/util/Optional/empty()
io/corbel/resources/rem/acl/AclGetRemTest/testGetCollectionWithPermissionForAllUsers()#io/corbel/resources/rem/request/RequestParameters/getOptionalApiParameters()
io/corbel/resources/rem/acl/AclGetRemTest/testGetCollectionWithPermissionForAllUsers()#javax/ws/rs/core/Response/getEntity()
io/corbel/resources/rem/acl/AclGetRemTest/testGetCollectionWithPermissionForAllUsers()#java/util/Collections/singletonList(T)
io/corbel/resources/rem/acl/AclGetRemTest/testGetCollectionWithPermissionForAllUsers()#io/corbel/resources/rem/request/CollectionParameters/getQueries()
io/corbel/resources/rem/acl/AclGetRemTest/testGetCollectionWithPermissionForAllUsers()#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/rem/acl/AclGetRemTest/testGetCollectionWithPermissionForAllUsers()#org/fest/assertions/api/Assertions/assertThat(T)
io/corbel/resources/rem/acl/AclGetRemTest/testGetCollectionWithPermissionForAllUsers()#io/corbel/resources/rem/acl/AclBaseRem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional,java.util.Optional)
io/corbel/resources/rem/acl/AclGetRemTest/testGetCollectionWithPermissionForAllUsers()#org/mockito/Matchers/eq(T)
io/corbel/resources/rem/acl/AclGetRemTest/testGetCollectionWithPermissionForAllUsers()#com/google/gson/JsonObject/add(java.lang.String,com.google.gson.JsonElement)
io/corbel/resources/rem/acl/AclGetRemTest/testGetCollectionWithPermissionForAllUsers()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/resources/rem/acl/AclGetRemTest/testGetCollectionWithPermissionForAllUsers()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/resources/rem/acl/AclGetRemTest/testGetCollectionWithPermissionForAllUsers()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/acl/AclGetRemTest/testGetCollectionWithPermissionForAllUsers()#io/corbel/resources/rem/acl/AclTestUtils/getEntityWithoutAcl()
io/corbel/resources/rem/acl/AclGetRemTest/testGetCollectionWithPermissionForAllUsers()#io/corbel/resources/rem/service/AclResourcesService/getCollection(io.corbel.resources.rem.Rem,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.List)
io/corbel/resources/rem/acl/AclGetRemTest/testGetCollectionWithPermissionForAllUsers()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/resources/rem/acl/AclGetRemTest/testGetCollectionWithPermissionForAllUsers()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/acl/AclGetRemTest/testGetCollectionWithPermissionForAllUsers()#java/util/Optional/of(T)
io/corbel/resources/rem/acl/AclGetRemTest/testGetCollectionWithPermissionForAllUsers()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/resources/rem/acl/AclGetRemTest/testGetCollectionWithPermissionForAllUsers()#com/google/gson/JsonObject/addProperty(java.lang.String,java.lang.String)
io/corbel/resources/rem/acl/AclGetRemTest/testGetCollectionWithPermissionForAllUsers()#io/corbel/resources/rem/request/RequestParameters/getAcceptedMediaTypes()
io/corbel/resources/rem/acl/AclGetRemTest/testGetCollectionWithPermissionForAllUsers()#com/google/gson/JsonObject/JsonObject()
io/corbel/resources/rem/acl/AclGetRemTest/testGetCollectionWithPermissionForAllUsers()#org/mockito/Matchers/any()
io/corbel/resources/rem/acl/AclGetRemTest/testGetCollectionWithPermissionForAllUsers()#java/util/Optional/empty()
io/corbel/resources/rem/acl/AclGetRemTest/testGetCollectionNoUserId()#io/corbel/resources/rem/request/RequestParameters/getOptionalApiParameters()
io/corbel/resources/rem/acl/AclGetRemTest/testGetCollectionNoUserId()#java/util/Collections/singletonList(T)
io/corbel/resources/rem/acl/AclGetRemTest/testGetCollectionNoUserId()#io/corbel/lib/token/TokenInfo/getUserId()
io/corbel/resources/rem/acl/AclGetRemTest/testGetCollectionNoUserId()#io/corbel/resources/rem/request/CollectionParameters/getQueries()
io/corbel/resources/rem/acl/AclGetRemTest/testGetCollectionNoUserId()#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/rem/acl/AclGetRemTest/testGetCollectionNoUserId()#io/corbel/resources/rem/acl/AclBaseRem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional,java.util.Optional)
io/corbel/resources/rem/acl/AclGetRemTest/testGetCollectionNoUserId()#org/mockito/Matchers/eq(T)
io/corbel/resources/rem/acl/AclGetRemTest/testGetCollectionNoUserId()#com/google/gson/JsonObject/add(java.lang.String,com.google.gson.JsonElement)
io/corbel/resources/rem/acl/AclGetRemTest/testGetCollectionNoUserId()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/resources/rem/acl/AclGetRemTest/testGetCollectionNoUserId()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/acl/AclGetRemTest/testGetCollectionNoUserId()#io/corbel/resources/rem/acl/AclTestUtils/getEntityWithoutAcl()
io/corbel/resources/rem/acl/AclGetRemTest/testGetCollectionNoUserId()#io/corbel/resources/rem/service/AclResourcesService/getCollection(io.corbel.resources.rem.Rem,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.List)
io/corbel/resources/rem/acl/AclGetRemTest/testGetCollectionNoUserId()#io/corbel/resources/rem/request/RequestParameters/getTokenInfo()
io/corbel/resources/rem/acl/AclGetRemTest/testGetCollectionNoUserId()#javax/ws/rs/core/Response/getEntity()
io/corbel/resources/rem/acl/AclGetRemTest/testGetCollectionNoUserId()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/resources/rem/acl/AclGetRemTest/testGetCollectionNoUserId()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/acl/AclGetRemTest/testGetCollectionNoUserId()#java/util/Optional/of(T)
io/corbel/resources/rem/acl/AclGetRemTest/testGetCollectionNoUserId()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/resources/rem/acl/AclGetRemTest/testGetCollectionNoUserId()#com/google/gson/JsonObject/addProperty(java.lang.String,java.lang.String)
io/corbel/resources/rem/acl/AclGetRemTest/testGetCollectionNoUserId()#io/corbel/resources/rem/request/RequestParameters/getAcceptedMediaTypes()
io/corbel/resources/rem/acl/AclGetRemTest/testGetCollectionNoUserId()#com/google/gson/JsonObject/JsonObject()
io/corbel/resources/rem/acl/AclGetRemTest/testGetCollectionNoUserId()#org/mockito/Matchers/any()
io/corbel/resources/rem/acl/AclGetRemTest/testGetCollectionNoUserId()#java/util/Optional/empty()
io/corbel/resources/rem/acl/AclGetRemTest/testGetResourceGetEntity()#javax/ws/rs/core/Response/getEntity()
io/corbel/resources/rem/acl/AclGetRemTest/testGetResourceGetEntity()#io/corbel/resources/rem/service/AclResourcesService/getResourceIfIsAuthorized(java.lang.String,io.corbel.lib.token.TokenInfo,java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.model.AclPermission)
io/corbel/resources/rem/acl/AclGetRemTest/testGetResourceGetEntity()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/acl/AclGetRemTest/testGetResourceGetEntity()#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/rem/acl/AclGetRemTest/testGetResourceGetEntity()#java/util/Optional/empty()
io/corbel/resources/rem/acl/AclGetRemTest/testGetResourceGetEntity()#org/fest/assertions/api/Assertions/assertThat(T)
io/corbel/resources/rem/acl/AclGetRemTest/testGetResourceGetEntity()#org/mockito/Matchers/eq(T)
io/corbel/resources/rem/acl/AclGetRemTest/testGetResourceGetEntity()#com/google/gson/JsonObject/add(java.lang.String,com.google.gson.JsonElement)
io/corbel/resources/rem/acl/AclGetRemTest/testGetResourceGetEntity()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/resources/rem/acl/AclGetRemTest/testGetResourceGetEntity()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/resources/rem/acl/AclGetRemTest/testGetResourceGetEntity()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/acl/AclGetRemTest/testGetResourceGetEntity()#io/corbel/resources/rem/acl/AclTestUtils/getEntityWithoutAcl()
io/corbel/resources/rem/acl/AclGetRemTest/testGetResourceGetEntity()#java/util/Optional/of(T)
io/corbel/resources/rem/acl/AclGetRemTest/testGetResourceGetEntity()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/resources/rem/acl/AclGetRemTest/testGetResourceGetEntity()#com/google/gson/JsonObject/JsonObject()
io/corbel/resources/rem/acl/AclGetRemTest/testGetResourceGetEntity()#io/corbel/resources/rem/acl/AclBaseRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)
io/corbel/resources/rem/acl/AclGetRemTest/testGetResourceGetEntity()#com/google/gson/JsonObject/addProperty(java.lang.String,java.lang.String)
io/corbel/resources/rem/acl/AclGetRemTest/testGetResourceNoUserId()#io/corbel/resources/rem/request/RequestParameters/getTokenInfo()
io/corbel/resources/rem/acl/AclGetRemTest/testGetResourceNoUserId()#io/corbel/resources/rem/service/AclResourcesService/getResourceIfIsAuthorized(java.lang.String,io.corbel.lib.token.TokenInfo,java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.model.AclPermission)
io/corbel/resources/rem/acl/AclGetRemTest/testGetResourceNoUserId()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/acl/AclGetRemTest/testGetResourceNoUserId()#io/corbel/lib/token/TokenInfo/getUserId()
io/corbel/resources/rem/acl/AclGetRemTest/testGetResourceNoUserId()#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/rem/acl/AclGetRemTest/testGetResourceNoUserId()#java/util/Optional/empty()
io/corbel/resources/rem/acl/AclGetRemTest/testGetResourceNoUserId()#org/mockito/Matchers/eq(T)
io/corbel/resources/rem/acl/AclGetRemTest/testGetResourceNoUserId()#com/google/gson/JsonObject/add(java.lang.String,com.google.gson.JsonElement)
io/corbel/resources/rem/acl/AclGetRemTest/testGetResourceNoUserId()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/resources/rem/acl/AclGetRemTest/testGetResourceNoUserId()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/acl/AclGetRemTest/testGetResourceNoUserId()#io/corbel/resources/rem/acl/AclTestUtils/getEntityWithoutAcl()
io/corbel/resources/rem/acl/AclGetRemTest/testGetResourceNoUserId()#java/util/Optional/of(T)
io/corbel/resources/rem/acl/AclGetRemTest/testGetResourceNoUserId()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/resources/rem/acl/AclGetRemTest/testGetResourceNoUserId()#com/google/gson/JsonObject/JsonObject()
io/corbel/resources/rem/acl/AclGetRemTest/testGetResourceNoUserId()#io/corbel/resources/rem/acl/AclBaseRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)
io/corbel/resources/rem/acl/AclGetRemTest/testGetResourceNoUserId()#com/google/gson/JsonObject/addProperty(java.lang.String,java.lang.String)
io/corbel/resources/rem/acl/AclGetRemTest/testGetCollectionNoJsonMediaType()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/resources/rem/acl/AclGetRemTest/testGetCollectionNoJsonMediaType()#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/rem/acl/AclGetRemTest/testGetCollectionNoJsonMediaType()#java/util/Optional/empty()
io/corbel/resources/rem/acl/AclGetRemTest/testGetCollectionNoJsonMediaType()#io/corbel/resources/rem/acl/AclBaseRem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional,java.util.Optional)
io/corbel/resources/rem/acl/AclGetRemTest/testGetCollectionNoJsonMediaType()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/resources/rem/acl/AclGetRemTest/setUp()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/acl/AclGetRemTest/setUp()#io/corbel/resources/rem/request/RequestParameters/getTokenInfo()
io/corbel/resources/rem/acl/AclGetRemTest/setUp()#java/util/Collections/singletonList(T)
io/corbel/resources/rem/acl/AclGetRemTest/setUp()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/acl/AclGetRemTest/setUp()#io/corbel/resources/rem/acl/AclGetRem/AclGetRem(io.corbel.resources.rem.service.AclResourcesService)
io/corbel/resources/rem/acl/AclGetRemTest/setUp()#io/corbel/lib/token/TokenInfo/getUserId()
io/corbel/resources/rem/acl/AclGetRemTest/setUp()#io/corbel/resources/rem/request/RequestParameters/getRequestedDomain()
io/corbel/resources/rem/acl/AclGetRemTest/setUp()#io/corbel/resources/rem/service/AclResourcesService/getResource(io.corbel.resources.rem.Rem,java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.List)
io/corbel/resources/rem/acl/AclGetRemTest/setUp()#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/rem/acl/AclGetRemTest/setUp()#org/mockito/Matchers/any()
io/corbel/resources/rem/acl/AclGetRemTest/setUp()#io/corbel/resources/rem/acl/AclBaseRem/setRemService(io.corbel.resources.rem.service.RemService)
io/corbel/resources/rem/acl/AclGetRemTest/setUp()#io/corbel/lib/token/TokenInfo/getGroups()
io/corbel/resources/rem/acl/AclGetRemTest/setUp()#org/mockito/Matchers/eq(T)
io/corbel/resources/rem/acl/AclGetRemTest/testGetRelation()#io/corbel/resources/rem/request/RequestParameters/getOptionalApiParameters()
io/corbel/resources/rem/acl/AclGetRemTest/testGetRelation()#io/corbel/resources/rem/service/AclResourcesService/getRelation(io.corbel.resources.rem.Rem,java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.List)
io/corbel/resources/rem/acl/AclGetRemTest/testGetRelation()#javax/ws/rs/core/Response/getEntity()
io/corbel/resources/rem/acl/AclGetRemTest/testGetRelation()#io/corbel/resources/rem/service/AclResourcesService/isAuthorized(java.lang.String,io.corbel.lib.token.TokenInfo,java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.model.AclPermission)
io/corbel/resources/rem/acl/AclGetRemTest/testGetRelation()#io/corbel/resources/rem/request/ResourceId/ResourceId(java.lang.String)
io/corbel/resources/rem/acl/AclGetRemTest/testGetRelation()#io/corbel/resources/rem/acl/AclBaseRem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)
io/corbel/resources/rem/acl/AclGetRemTest/testGetRelation()#org/mockito/Matchers/eq(T)
io/corbel/resources/rem/acl/AclGetRemTest/testGetRelation()#com/google/gson/JsonObject/add(java.lang.String,com.google.gson.JsonElement)
io/corbel/resources/rem/acl/AclGetRemTest/testGetRelation()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/resources/rem/acl/AclGetRemTest/testGetRelation()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/acl/AclGetRemTest/testGetRelation()#io/corbel/resources/rem/acl/AclTestUtils/getEntityWithoutAcl()
io/corbel/resources/rem/acl/AclGetRemTest/testGetRelation()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/resources/rem/acl/AclGetRemTest/testGetRelation()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/acl/AclGetRemTest/testGetRelation()#java/util/Optional/of(T)
io/corbel/resources/rem/acl/AclGetRemTest/testGetRelation()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/resources/rem/acl/AclGetRemTest/testGetRelation()#io/corbel/resources/rem/request/RelationParameters/getPredicateResource()
io/corbel/resources/rem/acl/AclGetRemTest/testGetRelation()#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/rem/acl/AclGetRemTest/testGetRelation()#com/google/gson/JsonObject/addProperty(java.lang.String,java.lang.String)
io/corbel/resources/rem/acl/AclGetRemTest/testGetRelation()#com/google/gson/JsonObject/JsonObject()
io/corbel/resources/rem/acl/AclGetRemTest/testGetRelation()#org/mockito/Matchers/any()
io/corbel/resources/rem/acl/AclGetRemTest/testGetRelation()#java/util/Optional/empty()
io/corbel/resources/rem/acl/AclGetRemTest/testGetResourceNotFoundObject()#javax/ws/rs/core/Response/getStatusInfo()
io/corbel/resources/rem/acl/AclGetRemTest/testGetResourceNotFoundObject()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/acl/AclGetRemTest/testGetResourceNotFoundObject()#javax/ws/rs/WebApplicationException/getResponse()
io/corbel/resources/rem/acl/AclGetRemTest/testGetResourceNotFoundObject()#io/corbel/resources/rem/service/AclResourcesService/getResourceIfIsAuthorized(java.lang.String,io.corbel.lib.token.TokenInfo,java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.model.AclPermission)
io/corbel/resources/rem/acl/AclGetRemTest/testGetResourceNotFoundObject()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/acl/AclGetRemTest/testGetResourceNotFoundObject()#org/mockito/stubbing/Stubber/when(T)
io/corbel/resources/rem/acl/AclGetRemTest/testGetResourceNotFoundObject()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/resources/rem/acl/AclGetRemTest/testGetResourceNotFoundObject()#javax/ws/rs/WebApplicationException/WebApplicationException(javax.ws.rs.core.Response)
io/corbel/resources/rem/acl/AclGetRemTest/testGetResourceNotFoundObject()#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/rem/acl/AclGetRemTest/testGetResourceNotFoundObject()#io/corbel/resources/rem/acl/AclBaseRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)
io/corbel/resources/rem/acl/AclGetRemTest/testGetResourceNotFoundObject()#org/mockito/Matchers/eq(T)
io/corbel/resources/rem/acl/AclGetRemTest/testGetResourceNotFoundObject()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/resources/rem/acl/AclGetRemTest/testGetResourceNotFoundObject()#java/util/Optional/empty()
io/corbel/resources/rem/acl/AclGetRemTest/testGetResourceNotFoundObject()#org/mockito/Mockito/doThrow(java.lang.Throwable)
io/corbel/resources/rem/acl/AclGetRemTest/testGetRelationWithWildcardInOrigin()#io/corbel/resources/rem/request/RequestParameters/getOptionalApiParameters()
io/corbel/resources/rem/acl/AclGetRemTest/testGetRelationWithWildcardInOrigin()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/acl/AclGetRemTest/testGetRelationWithWildcardInOrigin()#io/corbel/resources/rem/request/ResourceId/ResourceId(java.lang.String)
io/corbel/resources/rem/acl/AclGetRemTest/testGetRelationWithWildcardInOrigin()#io/corbel/resources/rem/acl/AclBaseRem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)
io/corbel/resources/rem/acl/AclGetRemTest/testGetRelationWithWildcardInOrigin()#java/util/Optional/empty()
io/corbel/resources/rem/acl/AclGetRemTest/testGetRelationWithWildcardInOrigin()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/resources/rem/acl/AclGetRemTest/testGetRelationWithWildcardInOrigin()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/resources/rem/acl/AclGetRemTest/testGetRelationWithWildcardInOrigin()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/acl/AclGetRemTest/testGetRelationWithWildcardInOrigin()#java/util/Optional/of(T)
io/corbel/resources/rem/acl/AclGetRemTest/testGetRelationWithWildcardInOrigin()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/resources/rem/acl/AclGetRemTest/testGetRelationWithWildcardInOrigin()#io/corbel/resources/rem/request/RelationParameters/getPredicateResource()
io/corbel/resources/rem/acl/AclGetRemTest/testGetRelationWithWildcardInOrigin()#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/rem/service/DefaultImageCacheServiceTest/setUp()#java/util/Optional/ofNullable(T)
io/corbel/resources/rem/service/DefaultImageCacheServiceTest/setUp()#java/util/Optional/empty()
io/corbel/resources/rem/service/DefaultImageCacheServiceTest/getFromCacheTest()#org/fest/assertions/api/Assertions/assertThat(java.io.InputStream)
io/corbel/resources/rem/service/DefaultImageCacheServiceTest/getFromCacheTest()#java/util/Optional/get()
io/corbel/resources/rem/service/DefaultImageCacheServiceTest/getFromCacheTest()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/service/DefaultImageCacheServiceTest/getFromCacheTest()#javax/ws/rs/core/Response/getEntity()
io/corbel/resources/rem/service/DefaultImageCacheServiceTest/getFromCacheTest()#io/corbel/resources/rem/request/ResourceId/getId()
io/corbel/resources/rem/service/DefaultImageCacheServiceTest/getFromCacheTest()#io/corbel/resources/rem/request/ResourceId/ResourceId(java.lang.String)
io/corbel/resources/rem/service/DefaultImageCacheServiceTest/getFromCacheTest()#io/corbel/resources/rem/Rem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)
io/corbel/resources/rem/service/DefaultImageCacheServiceTest/getFromCacheTest()#io/corbel/resources/rem/service/DefaultImageCacheService/DefaultImageCacheService(java.lang.String)
io/corbel/resources/rem/service/DefaultImageCacheServiceTest/getFromCacheTest()#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/rem/service/DefaultImageCacheServiceTest/getFromCacheTest()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/resources/rem/service/DefaultImageCacheServiceTest/getFromCacheTest()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/resources/rem/service/DefaultImageCacheServiceTest/getFromCacheTest()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/service/DefaultImageCacheServiceTest/getFromCacheTest()#java/util/Optional/empty()
io/corbel/resources/rem/service/DefaultImageCacheServiceTest/getFromCacheTest()#io/corbel/resources/rem/service/DefaultImageCacheService/getFromCache(io.corbel.resources.rem.Rem,io.corbel.resources.rem.request.ResourceId,java.lang.String,java.util.Optional,java.lang.String,io.corbel.resources.rem.request.RequestParameters)
io/corbel/resources/rem/service/DefaultImageCacheServiceTest/putInCacheTestNoFormat()#org/mockito/ArgumentCaptor/getValue()
io/corbel/resources/rem/service/DefaultImageCacheServiceTest/putInCacheTestNoFormat()#org/fest/assertions/api/LongAssert/isEqualTo(long)
io/corbel/resources/rem/service/DefaultImageCacheServiceTest/putInCacheTestNoFormat()#io/corbel/resources/rem/request/ResourceId/getId()
io/corbel/resources/rem/service/DefaultImageCacheServiceTest/putInCacheTestNoFormat()#org/fest/assertions/api/Assertions/assertThat(java.lang.Long)
io/corbel/resources/rem/service/DefaultImageCacheServiceTest/putInCacheTestNoFormat()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/resources/rem/service/DefaultImageCacheServiceTest/putInCacheTestNoFormat()#io/corbel/resources/rem/request/ResourceId/ResourceId(java.lang.String)
io/corbel/resources/rem/service/DefaultImageCacheServiceTest/putInCacheTestNoFormat()#org/mockito/stubbing/Stubber/when(T)
io/corbel/resources/rem/service/DefaultImageCacheServiceTest/putInCacheTestNoFormat()#org/mockito/Mockito/spy(T)
io/corbel/resources/rem/service/DefaultImageCacheServiceTest/putInCacheTestNoFormat()#io/corbel/resources/rem/service/DefaultImageCacheService/DefaultImageCacheService(java.lang.String)
io/corbel/resources/rem/service/DefaultImageCacheServiceTest/putInCacheTestNoFormat()#org/mockito/ArgumentCaptor/capture()
io/corbel/resources/rem/service/DefaultImageCacheServiceTest/putInCacheTestNoFormat()#org/mockito/Mockito/doReturn(java.lang.Object)
io/corbel/resources/rem/service/DefaultImageCacheServiceTest/putInCacheTestNoFormat()#io/corbel/resources/rem/request/RequestParameters/getContentLength()
io/corbel/resources/rem/service/DefaultImageCacheServiceTest/putInCacheTestNoFormat()#org/mockito/ArgumentCaptor/forClass(java.lang.Class)
io/corbel/resources/rem/service/DefaultImageCacheServiceTest/putInCacheTestNoFormat()#io/corbel/resources/rem/service/DefaultImageCacheService/createInputStream(java.io.File)
io/corbel/resources/rem/service/DefaultImageCacheServiceTest/putInCacheTestNoFormat()#org/mockito/Mockito/verify(T)
io/corbel/resources/rem/service/DefaultImageCacheServiceTest/putInCacheTestNoFormat()#io/corbel/resources/rem/Rem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)
io/corbel/resources/rem/service/DefaultImageCacheServiceTest/putInCacheTestNoFormat()#java/util/Optional/of(T)
io/corbel/resources/rem/service/DefaultImageCacheServiceTest/putInCacheTestNoFormat()#org/mockito/Matchers/eq(T)
io/corbel/resources/rem/service/DefaultImageCacheServiceTest/putInCacheTestNoFormat()#io/corbel/resources/rem/service/DefaultImageCacheService/saveInCacheAsync(io.corbel.resources.rem.Rem,io.corbel.resources.rem.request.ResourceId,java.lang.String,java.util.Optional,java.lang.Long,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.io.File)
io/corbel/resources/rem/service/DefaultImageCacheServiceTest/getFromCacheNotFoundTest()#org/fest/assertions/api/Assertions/assertThat(java.io.InputStream)
io/corbel/resources/rem/service/DefaultImageCacheServiceTest/getFromCacheNotFoundTest()#java/util/Optional/get()
io/corbel/resources/rem/service/DefaultImageCacheServiceTest/getFromCacheNotFoundTest()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/service/DefaultImageCacheServiceTest/getFromCacheNotFoundTest()#javax/ws/rs/core/Response/getEntity()
io/corbel/resources/rem/service/DefaultImageCacheServiceTest/getFromCacheNotFoundTest()#org/fest/assertions/api/AbstractAssert/isNull()
io/corbel/resources/rem/service/DefaultImageCacheServiceTest/getFromCacheNotFoundTest()#io/corbel/resources/rem/request/ResourceId/getId()
io/corbel/resources/rem/service/DefaultImageCacheServiceTest/getFromCacheNotFoundTest()#io/corbel/resources/rem/request/ResourceId/ResourceId(java.lang.String)
io/corbel/resources/rem/service/DefaultImageCacheServiceTest/getFromCacheNotFoundTest()#io/corbel/resources/rem/Rem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)
io/corbel/resources/rem/service/DefaultImageCacheServiceTest/getFromCacheNotFoundTest()#io/corbel/resources/rem/service/DefaultImageCacheService/DefaultImageCacheService(java.lang.String)
io/corbel/resources/rem/service/DefaultImageCacheServiceTest/getFromCacheNotFoundTest()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/resources/rem/service/DefaultImageCacheServiceTest/getFromCacheNotFoundTest()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/service/DefaultImageCacheServiceTest/getFromCacheNotFoundTest()#java/util/Optional/empty()
io/corbel/resources/rem/service/DefaultImageCacheServiceTest/getFromCacheNotFoundTest()#io/corbel/resources/rem/service/DefaultImageCacheService/getFromCache(io.corbel.resources.rem.Rem,io.corbel.resources.rem.request.ResourceId,java.lang.String,java.util.Optional,java.lang.String,io.corbel.resources.rem.request.RequestParameters)
io/corbel/resources/rem/service/DefaultImageCacheServiceTest/getFromCacheTestNoFormat()#org/fest/assertions/api/Assertions/assertThat(java.io.InputStream)
io/corbel/resources/rem/service/DefaultImageCacheServiceTest/getFromCacheTestNoFormat()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/service/DefaultImageCacheServiceTest/getFromCacheTestNoFormat()#javax/ws/rs/core/Response/getEntity()
io/corbel/resources/rem/service/DefaultImageCacheServiceTest/getFromCacheTestNoFormat()#io/corbel/resources/rem/request/ResourceId/getId()
io/corbel/resources/rem/service/DefaultImageCacheServiceTest/getFromCacheTestNoFormat()#io/corbel/resources/rem/request/ResourceId/ResourceId(java.lang.String)
io/corbel/resources/rem/service/DefaultImageCacheServiceTest/getFromCacheTestNoFormat()#io/corbel/resources/rem/Rem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)
io/corbel/resources/rem/service/DefaultImageCacheServiceTest/getFromCacheTestNoFormat()#io/corbel/resources/rem/service/DefaultImageCacheService/DefaultImageCacheService(java.lang.String)
io/corbel/resources/rem/service/DefaultImageCacheServiceTest/getFromCacheTestNoFormat()#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/rem/service/DefaultImageCacheServiceTest/getFromCacheTestNoFormat()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/resources/rem/service/DefaultImageCacheServiceTest/getFromCacheTestNoFormat()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/resources/rem/service/DefaultImageCacheServiceTest/getFromCacheTestNoFormat()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/service/DefaultImageCacheServiceTest/getFromCacheTestNoFormat()#java/util/Optional/empty()
io/corbel/resources/rem/service/DefaultImageCacheServiceTest/getFromCacheTestNoFormat()#io/corbel/resources/rem/service/DefaultImageCacheService/getFromCache(io.corbel.resources.rem.Rem,io.corbel.resources.rem.request.ResourceId,java.lang.String,java.util.Optional,java.lang.String,io.corbel.resources.rem.request.RequestParameters)
io/corbel/resources/rem/service/DefaultImageCacheServiceTest/putInCacheTest()#java/util/Optional/get()
io/corbel/resources/rem/service/DefaultImageCacheServiceTest/putInCacheTest()#org/mockito/ArgumentCaptor/getValue()
io/corbel/resources/rem/service/DefaultImageCacheServiceTest/putInCacheTest()#org/fest/assertions/api/LongAssert/isEqualTo(long)
io/corbel/resources/rem/service/DefaultImageCacheServiceTest/putInCacheTest()#io/corbel/resources/rem/request/ResourceId/getId()
io/corbel/resources/rem/service/DefaultImageCacheServiceTest/putInCacheTest()#org/fest/assertions/api/Assertions/assertThat(java.lang.Long)
io/corbel/resources/rem/service/DefaultImageCacheServiceTest/putInCacheTest()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/resources/rem/service/DefaultImageCacheServiceTest/putInCacheTest()#io/corbel/resources/rem/request/ResourceId/ResourceId(java.lang.String)
io/corbel/resources/rem/service/DefaultImageCacheServiceTest/putInCacheTest()#org/mockito/stubbing/Stubber/when(T)
io/corbel/resources/rem/service/DefaultImageCacheServiceTest/putInCacheTest()#org/mockito/Mockito/spy(T)
io/corbel/resources/rem/service/DefaultImageCacheServiceTest/putInCacheTest()#io/corbel/resources/rem/service/DefaultImageCacheService/DefaultImageCacheService(java.lang.String)
io/corbel/resources/rem/service/DefaultImageCacheServiceTest/putInCacheTest()#org/mockito/ArgumentCaptor/capture()
io/corbel/resources/rem/service/DefaultImageCacheServiceTest/putInCacheTest()#org/mockito/Mockito/doReturn(java.lang.Object)
io/corbel/resources/rem/service/DefaultImageCacheServiceTest/putInCacheTest()#io/corbel/resources/rem/request/RequestParameters/getContentLength()
io/corbel/resources/rem/service/DefaultImageCacheServiceTest/putInCacheTest()#org/mockito/ArgumentCaptor/forClass(java.lang.Class)
io/corbel/resources/rem/service/DefaultImageCacheServiceTest/putInCacheTest()#io/corbel/resources/rem/service/DefaultImageCacheService/createInputStream(java.io.File)
io/corbel/resources/rem/service/DefaultImageCacheServiceTest/putInCacheTest()#org/mockito/Mockito/verify(T)
io/corbel/resources/rem/service/DefaultImageCacheServiceTest/putInCacheTest()#io/corbel/resources/rem/Rem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)
io/corbel/resources/rem/service/DefaultImageCacheServiceTest/putInCacheTest()#java/util/Optional/of(T)
io/corbel/resources/rem/service/DefaultImageCacheServiceTest/putInCacheTest()#org/mockito/Matchers/eq(T)
io/corbel/resources/rem/service/DefaultImageCacheServiceTest/putInCacheTest()#io/corbel/resources/rem/service/DefaultImageCacheService/saveInCacheAsync(io.corbel.resources.rem.Rem,io.corbel.resources.rem.request.ResourceId,java.lang.String,java.util.Optional,java.lang.Long,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.io.File)
io/corbel/resources/rem/health/S3HealthCheck/check()#com/amazonaws/services/s3/AmazonS3/doesBucketExist(java.lang.String)
io/corbel/resources/rem/health/S3HealthCheck/check()#com/codahale/metrics/health/HealthCheck/Result/healthy()
io/corbel/resources/rem/health/S3HealthCheck/check()#com/codahale/metrics/health/HealthCheck/Result/unhealthy(java.lang.String)
io/corbel/iam/auth/rule/MaxExpireAuthorizationRule/process(io.corbel.iam.auth.AuthorizationRequestContext)#io/corbel/iam/auth/AuthorizationRequestContext/setAuthorizationExpiration(long)
io/corbel/iam/auth/rule/MaxExpireAuthorizationRule/process(io.corbel.iam.auth.AuthorizationRequestContext)#java/lang/System/currentTimeMillis()
io/corbel/iam/auth/rule/MaxExpireAuthorizationRule/process(io.corbel.iam.auth.AuthorizationRequestContext)#io/corbel/iam/model/Domain/getCapabilities()
io/corbel/iam/auth/rule/MaxExpireAuthorizationRule/process(io.corbel.iam.auth.AuthorizationRequestContext)#io/corbel/iam/exception/UnauthorizedTimeException/UnauthorizedTimeException(java.lang.String)
io/corbel/iam/auth/rule/MaxExpireAuthorizationRule/process(io.corbel.iam.auth.AuthorizationRequestContext)#io/corbel/iam/auth/AuthorizationRequestContext/getAuthorizationExpiration()
io/corbel/iam/auth/rule/MaxExpireAuthorizationRule/process(io.corbel.iam.auth.AuthorizationRequestContext)#io/corbel/iam/auth/AuthorizationRequestContext/getRequestedDomain()
io/corbel/iam/auth/rule/MaxExpireAuthorizationRule/process(io.corbel.iam.auth.AuthorizationRequestContext)#java/util/Map/getOrDefault(java.lang.Object,V)
io/corbel/notifications/model/Notification/hashCode()#java/lang/String/hashCode()
io/corbel/notifications/model/Notification/hashCode()#java/util/Map/hashCode()
io/corbel/notifications/model/Notification/equals(java.lang.Object)#java/lang/String/equals(java.lang.Object)
io/corbel/notifications/model/Notification/equals(java.lang.Object)#java/util/Map/equals(java.lang.Object)
io/corbel/iam/auth/oauthserver/connect/OAuthServerAdapter/fetchUserProfile(io.corbel.iam.auth.oauthserver.api.OAuthServer)#io/corbel/iam/auth/oauthserver/api/impl/Profile/getEmail()
io/corbel/iam/auth/oauthserver/connect/OAuthServerAdapter/fetchUserProfile(io.corbel.iam.auth.oauthserver.api.OAuthServer)#org/springframework/social/connect/UserProfileBuilder/setEmail(java.lang.String)
io/corbel/iam/auth/oauthserver/connect/OAuthServerAdapter/fetchUserProfile(io.corbel.iam.auth.oauthserver.api.OAuthServer)#io/corbel/iam/auth/oauthserver/api/UserOperations/getUserProfile()
io/corbel/iam/auth/oauthserver/connect/OAuthServerAdapter/fetchUserProfile(io.corbel.iam.auth.oauthserver.api.OAuthServer)#io/corbel/iam/auth/oauthserver/api/impl/Profile/getUsername()
io/corbel/iam/auth/oauthserver/connect/OAuthServerAdapter/fetchUserProfile(io.corbel.iam.auth.oauthserver.api.OAuthServer)#org/springframework/social/connect/UserProfileBuilder/UserProfileBuilder()
io/corbel/iam/auth/oauthserver/connect/OAuthServerAdapter/fetchUserProfile(io.corbel.iam.auth.oauthserver.api.OAuthServer)#org/springframework/social/connect/UserProfileBuilder/build()
io/corbel/iam/auth/oauthserver/connect/OAuthServerAdapter/fetchUserProfile(io.corbel.iam.auth.oauthserver.api.OAuthServer)#org/springframework/social/connect/UserProfileBuilder/setUsername(java.lang.String)
io/corbel/iam/auth/oauthserver/connect/OAuthServerAdapter/fetchUserProfile(io.corbel.iam.auth.oauthserver.api.OAuthServer)#io/corbel/iam/auth/oauthserver/api/OAuthServer/userOperations()
io/corbel/iam/auth/oauthserver/connect/OAuthServerAdapter/setConnectionValues(io.corbel.iam.auth.oauthserver.api.OAuthServer,org.springframework.social.connect.ConnectionValues)#io/corbel/iam/auth/oauthserver/api/UserOperations/getUserProfile()
io/corbel/iam/auth/oauthserver/connect/OAuthServerAdapter/setConnectionValues(io.corbel.iam.auth.oauthserver.api.OAuthServer,org.springframework.social.connect.ConnectionValues)#io/corbel/iam/auth/oauthserver/api/impl/Profile/getId()
io/corbel/iam/auth/oauthserver/connect/OAuthServerAdapter/setConnectionValues(io.corbel.iam.auth.oauthserver.api.OAuthServer,org.springframework.social.connect.ConnectionValues)#io/corbel/iam/auth/oauthserver/api/OAuthServer/userOperations()
io/corbel/iam/auth/oauthserver/connect/OAuthServerAdapter/setConnectionValues(io.corbel.iam.auth.oauthserver.api.OAuthServer,org.springframework.social.connect.ConnectionValues)#org/springframework/social/connect/ConnectionValues/setProviderUserId(java.lang.String)
io/corbel/iam/auth/oauthserver/connect/OAuthServerAdapter/test(io.corbel.iam.auth.oauthserver.api.OAuthServer)#io/corbel/iam/auth/oauthserver/api/UserOperations/getUserProfile()
io/corbel/iam/auth/oauthserver/connect/OAuthServerAdapter/test(io.corbel.iam.auth.oauthserver.api.OAuthServer)#io/corbel/iam/auth/oauthserver/api/OAuthServer/userOperations()
io/corbel/webfs/service/DefaultAmazonS3Service/deleteFolder(java.lang.String)#com/amazonaws/services/s3/model/ListObjectsRequest/withBucketName(java.lang.String)
io/corbel/webfs/service/DefaultAmazonS3Service/deleteFolder(java.lang.String)#com/amazonaws/services/s3/model/ListObjectsRequest/setMarker(java.lang.String)
io/corbel/webfs/service/DefaultAmazonS3Service/deleteFolder(java.lang.String)#com/amazonaws/services/s3/AmazonS3/listObjects(com.amazonaws.services.s3.model.ListObjectsRequest)
io/corbel/webfs/service/DefaultAmazonS3Service/deleteFolder(java.lang.String)#com/amazonaws/services/s3/model/ListObjectsRequest/ListObjectsRequest()
io/corbel/webfs/service/DefaultAmazonS3Service/deleteFolder(java.lang.String)#com/amazonaws/services/s3/model/ObjectListing/getNextMarker()
io/corbel/webfs/service/DefaultAmazonS3Service/deleteFolder(java.lang.String)#com/amazonaws/services/s3/model/DeleteObjectRequest/DeleteObjectRequest(java.lang.String,java.lang.String)
io/corbel/webfs/service/DefaultAmazonS3Service/deleteFolder(java.lang.String)#com/amazonaws/services/s3/model/S3ObjectSummary/getKey()
io/corbel/webfs/service/DefaultAmazonS3Service/deleteFolder(java.lang.String)#com/amazonaws/services/s3/AmazonS3/deleteObject(com.amazonaws.services.s3.model.DeleteObjectRequest)
io/corbel/webfs/service/DefaultAmazonS3Service/deleteFolder(java.lang.String)#com/amazonaws/services/s3/model/ObjectListing/getObjectSummaries()
io/corbel/webfs/service/DefaultAmazonS3Service/deleteFolder(java.lang.String)#com/amazonaws/services/s3/model/ListObjectsRequest/withPrefix(java.lang.String)
io/corbel/webfs/service/DefaultAmazonS3Service/deleteFolder(java.lang.String)#com/amazonaws/services/s3/model/ObjectListing/isTruncated()
io/corbel/webfs/service/DefaultAmazonS3Service/getObject(java.lang.String)#com/amazonaws/AmazonServiceException/getStatusCode()
io/corbel/webfs/service/DefaultAmazonS3Service/getObject(java.lang.String)#com/amazonaws/services/s3/AmazonS3/getObject(com.amazonaws.services.s3.model.GetObjectRequest)
io/corbel/webfs/service/DefaultAmazonS3Service/getObject(java.lang.String)#com/amazonaws/services/s3/model/GetObjectRequest/GetObjectRequest(java.lang.String,java.lang.String)
io/corbel/rem/internal/InMemoryRelationRegistry/addTypeRelation(java.lang.String,java.util.Set)#io/corbel/rem/internal/InMemoryRelationRegistry/addRelationFields(java.lang.String,java.lang.String,java.util.Set)
io/corbel/rem/internal/InMemoryRelationRegistry/addTypeRelation(java.lang.String,java.util.Set)#java/util/HashSet/HashSet()
io/corbel/rem/internal/InMemoryRelationRegistry/addRelationFields(java.lang.String,java.lang.String,java.util.Set)#java/util/Set/addAll(java.util.Collection)
io/corbel/rem/internal/InMemoryRelationRegistry/addRelationFields(java.lang.String,java.lang.String,java.util.Set)#java/util/Map/get(java.lang.Object)
io/corbel/rem/internal/InMemoryRelationRegistry/addRelationFields(java.lang.String,java.lang.String,java.util.Set)#java/util/HashMap/HashMap()
io/corbel/rem/internal/InMemoryRelationRegistry/addRelationFields(java.lang.String,java.lang.String,java.util.Set)#java/util/Map/put(K,V)
io/corbel/rem/internal/InMemoryRelationRegistry/addRelationFields(java.lang.String,java.lang.String,java.util.Set)#java/util/HashSet/HashSet()
io/corbel/rem/internal/InMemoryRelationRegistry/getRelationFields(java.lang.String,java.lang.String)#java/util/Map/get(java.lang.Object)
io/corbel/rem/internal/InMemoryRelationRegistry/getRelationFields(java.lang.String,java.lang.String)#java/util/HashSet/HashSet()
io/corbel/rem/internal/InMemoryRelationRegistry/getTypeRelations(java.lang.String)#java/util/Map/get(java.lang.Object)
io/corbel/rem/internal/InMemoryRelationRegistry/getTypeRelations(java.lang.String)#java/util/Map/keySet()
io/corbel/rem/internal/InMemoryRelationRegistry/getTypeRelations(java.lang.String)#java/util/HashSet/HashSet()
io/corbel/rem/internal/InMemoryRelationRegistry/getTypeRelations(java.lang.String)#java/util/HashSet/HashSet(java.util.Collection)
io/corbel/resources/rem/ioc/RemAclIoc/getAclConfigurationService()#io/corbel/resources/rem/ioc/RemAclIoc/getGson()
io/corbel/resources/rem/ioc/RemAclIoc/getAclConfigurationService()#org/springframework/core/env/PropertyResolver/getProperty(java.lang.String)
io/corbel/resources/rem/ioc/RemAclIoc/getAclConfigurationService()#io/corbel/resources/rem/ioc/RemAclIoc/getAclResourceService()
io/corbel/resources/rem/ioc/RemAclIoc/getAclConfigurationService()#io/corbel/resources/rem/service/DefaultAclConfigurationService/DefaultAclConfigurationService(com.google.gson.Gson,java.lang.String,io.corbel.resources.rem.service.AclResourcesService)
io/corbel/resources/rem/ioc/RemAclIoc/getAclGetManagedCollectionRem()#io/corbel/resources/rem/ioc/RemAclIoc/getAclConfigurationService()
io/corbel/resources/rem/ioc/RemAclIoc/getAclGetManagedCollectionRem()#io/corbel/resources/rem/acl/AclGetManagedCollectionRem/AclGetManagedCollectionRem(io.corbel.resources.rem.service.AclConfigurationService)
io/corbel/resources/rem/ioc/RemAclIoc/getGson()#com/google/gson/Gson/Gson()
io/corbel/resources/rem/ioc/RemAclIoc/getAclGetRem()#io/corbel/resources/rem/acl/AclGetRem/AclGetRem(io.corbel.resources.rem.service.AclResourcesService)
io/corbel/resources/rem/ioc/RemAclIoc/getAclGetRem()#io/corbel/resources/rem/ioc/RemAclIoc/getAclResourceService()
io/corbel/resources/rem/ioc/RemAclIoc/getAclPostRem()#io/corbel/resources/rem/acl/AclPostRem/AclPostRem(io.corbel.resources.rem.service.AclResourcesService,java.util.List)
io/corbel/resources/rem/ioc/RemAclIoc/getAclPostRem()#java/util/Collections/singletonList(T)
io/corbel/resources/rem/ioc/RemAclIoc/getAclPostRem()#io/corbel/resources/rem/ioc/RemAclIoc/getAclPutRem()
io/corbel/resources/rem/ioc/RemAclIoc/getAclPostRem()#io/corbel/resources/rem/ioc/RemAclIoc/getAclResourceService()
io/corbel/resources/rem/ioc/RemAclIoc/getAclPutRem()#java/util/Collections/singletonList(T)
io/corbel/resources/rem/ioc/RemAclIoc/getAclPutRem()#io/corbel/resources/rem/ioc/RemAclIoc/getAclGetRem()
io/corbel/resources/rem/ioc/RemAclIoc/getAclPutRem()#io/corbel/resources/rem/acl/AclPutRem/AclPutRem(io.corbel.resources.rem.service.AclResourcesService,java.util.List)
io/corbel/resources/rem/ioc/RemAclIoc/getAclPutRem()#io/corbel/resources/rem/ioc/RemAclIoc/getAclResourceService()
io/corbel/resources/rem/ioc/RemAclIoc/getObjectMapper()#com/fasterxml/jackson/databind/ObjectMapper/ObjectMapper()
io/corbel/resources/rem/ioc/RemAclIoc/getAclPutManagedCollectionRem()#io/corbel/resources/rem/ioc/RemAclIoc/getAclConfigurationService()
io/corbel/resources/rem/ioc/RemAclIoc/getAclPutManagedCollectionRem()#io/corbel/resources/rem/acl/AclPutManagedCollectionRem/AclPutManagedCollectionRem(io.corbel.resources.rem.service.AclConfigurationService)
io/corbel/resources/rem/ioc/RemAclIoc/getAclPostManagedCollectionRem()#io/corbel/resources/rem/ioc/RemAclIoc/getAclConfigurationService()
io/corbel/resources/rem/ioc/RemAclIoc/getAclPostManagedCollectionRem()#io/corbel/resources/rem/acl/AclPostManagedCollectionRem/AclPostManagedCollectionRem(io.corbel.resources.rem.service.AclConfigurationService)
io/corbel/resources/rem/ioc/RemAclIoc/getAclDeleteRem()#io/corbel/resources/rem/acl/AclDeleteRem/AclDeleteRem(io.corbel.resources.rem.service.AclResourcesService,java.util.List)
io/corbel/resources/rem/ioc/RemAclIoc/getAclDeleteRem()#java/util/Collections/singletonList(T)
io/corbel/resources/rem/ioc/RemAclIoc/getAclDeleteRem()#io/corbel/resources/rem/ioc/RemAclIoc/getAclGetRem()
io/corbel/resources/rem/ioc/RemAclIoc/getAclDeleteRem()#io/corbel/resources/rem/ioc/RemAclIoc/getAclResourceService()
io/corbel/resources/rem/ioc/RemAclIoc/getAclResourceService()#io/corbel/resources/rem/ioc/RemAclIoc/getGson()
io/corbel/resources/rem/ioc/RemAclIoc/getAclResourceService()#io/corbel/resources/rem/service/DefaultAclResourcesService/DefaultAclResourcesService(com.google.gson.Gson,java.lang.String)
io/corbel/resources/rem/ioc/RemAclIoc/getAclResourceService()#org/springframework/core/env/PropertyResolver/getProperty(java.lang.String)
io/corbel/resources/rem/ioc/RemAclIoc/getAclConfigurationEventHandlerAsEventHandler()#io/corbel/resources/rem/eventbus/AclConfigurationEventHandler/AclConfigurationEventHandler(java.lang.String)
io/corbel/resources/rem/ioc/RemAclIoc/getAclConfigurationEventHandlerAsEventHandler()#org/springframework/core/env/PropertyResolver/getProperty(java.lang.String)
io/corbel/resources/rem/ioc/RemAclIoc/getAclSetUpPutRem()#io/corbel/resources/rem/acl/SetUpAclPutRem/SetUpAclPutRem(io.corbel.resources.rem.service.AclResourcesService,java.util.List)
io/corbel/resources/rem/ioc/RemAclIoc/getAclSetUpPutRem()#io/corbel/resources/rem/ioc/RemAclIoc/getAclGetRem()
io/corbel/resources/rem/ioc/RemAclIoc/getAclSetUpPutRem()#io/corbel/resources/rem/ioc/RemAclIoc/getAclResourceService()
io/corbel/resources/rem/ioc/RemAclIoc/getAclSetUpPutRem()#io/corbel/resources/rem/ioc/RemAclIoc/getAclPutRem()
io/corbel/resources/rem/ioc/RemAclIoc/getAclSetUpPutRem()#java/util/Arrays/asList(T[])
io/corbel/evci/converter/DomainObjectJsonMessageConverterTest/testConvertToObject()#io/corbel/evci/converter/DomainObjectJsonMessageConverter/fromMessage(org.springframework.amqp.core.Message)
io/corbel/evci/converter/DomainObjectJsonMessageConverterTest/testConvertToObject()#org/springframework/amqp/core/Message/Message(byte[],org.springframework.amqp.core.MessageProperties)
io/corbel/evci/converter/DomainObjectJsonMessageConverterTest/testConvertToObject()#org/springframework/amqp/core/MessageProperties/setContentType(java.lang.String)
io/corbel/evci/converter/DomainObjectJsonMessageConverterTest/testConvertToObject()#io/corbel/evci/converter/DomainObjectJsonMessageConverter/DomainObjectJsonMessageConverter(java.lang.reflect.Type,com.fasterxml.jackson.databind.ObjectMapper)
io/corbel/evci/converter/DomainObjectJsonMessageConverterTest/testConvertToObject()#java/lang/String/getBytes()
io/corbel/evci/converter/DomainObjectJsonMessageConverterTest/testConvertToObject()#org/junit/Assert/assertEquals(java.lang.Object,java.lang.Object)
io/corbel/evci/converter/DomainObjectJsonMessageConverterTest/testConvertToObject()#org/springframework/amqp/core/MessageProperties/MessageProperties()
io/corbel/evci/converter/DomainObjectJsonMessageConverterTest/testConvertToObject()#com/fasterxml/jackson/databind/ObjectMapper/ObjectMapper()
io/corbel/evci/converter/DomainObjectJsonMessageConverterTest/testConvertNoJsonHeader()#io/corbel/evci/converter/DomainObjectJsonMessageConverter/fromMessage(org.springframework.amqp.core.Message)
io/corbel/evci/converter/DomainObjectJsonMessageConverterTest/testConvertNoJsonHeader()#org/springframework/amqp/core/Message/Message(byte[],org.springframework.amqp.core.MessageProperties)
io/corbel/evci/converter/DomainObjectJsonMessageConverterTest/testConvertNoJsonHeader()#io/corbel/evci/converter/DomainObjectJsonMessageConverter/DomainObjectJsonMessageConverter(java.lang.reflect.Type,com.fasterxml.jackson.databind.ObjectMapper)
io/corbel/evci/converter/DomainObjectJsonMessageConverterTest/testConvertNoJsonHeader()#java/lang/String/getBytes()
io/corbel/evci/converter/DomainObjectJsonMessageConverterTest/testConvertNoJsonHeader()#org/springframework/amqp/core/MessageProperties/MessageProperties()
io/corbel/evci/converter/DomainObjectJsonMessageConverterTest/testConvertNoJsonHeader()#com/fasterxml/jackson/databind/ObjectMapper/ObjectMapper()
io/corbel/evci/converter/DomainObjectJsonMessageConverterTest/testEworkerMessageConvertToObject()#io/corbel/evci/converter/DomainObjectJsonMessageConverter/fromMessage(org.springframework.amqp.core.Message)
io/corbel/evci/converter/DomainObjectJsonMessageConverterTest/testEworkerMessageConvertToObject()#io/corbel/evci/converter/DomainObjectJsonMessageConverterTest/TestDomainObject/getId()
io/corbel/evci/converter/DomainObjectJsonMessageConverterTest/testEworkerMessageConvertToObject()#org/springframework/amqp/core/Message/Message(byte[],org.springframework.amqp.core.MessageProperties)
io/corbel/evci/converter/DomainObjectJsonMessageConverterTest/testEworkerMessageConvertToObject()#io/corbel/evci/model/Header/getDomainId()
io/corbel/evci/converter/DomainObjectJsonMessageConverterTest/testEworkerMessageConvertToObject()#io/corbel/evci/model/EworkerMessage/getContent()
io/corbel/evci/converter/DomainObjectJsonMessageConverterTest/testEworkerMessageConvertToObject()#io/corbel/evci/model/EworkerMessage/getHeader()
io/corbel/evci/converter/DomainObjectJsonMessageConverterTest/testEworkerMessageConvertToObject()#org/springframework/amqp/core/MessageProperties/setContentType(java.lang.String)
io/corbel/evci/converter/DomainObjectJsonMessageConverterTest/testEworkerMessageConvertToObject()#io/corbel/evci/model/Header/getUserId()
io/corbel/evci/converter/DomainObjectJsonMessageConverterTest/testEworkerMessageConvertToObject()#io/corbel/evci/converter/DomainObjectJsonMessageConverterTest/TestDomainObject/getMessage()
io/corbel/evci/converter/DomainObjectJsonMessageConverterTest/testEworkerMessageConvertToObject()#io/corbel/evci/converter/DomainObjectJsonMessageConverterTest/testEworkerMessageConvertToObject()/$anonymous1/()
io/corbel/evci/converter/DomainObjectJsonMessageConverterTest/testEworkerMessageConvertToObject()#io/corbel/evci/converter/DomainObjectJsonMessageConverter/DomainObjectJsonMessageConverter(java.lang.reflect.Type,com.fasterxml.jackson.databind.ObjectMapper)
io/corbel/evci/converter/DomainObjectJsonMessageConverterTest/testEworkerMessageConvertToObject()#java/lang/String/getBytes()
io/corbel/evci/converter/DomainObjectJsonMessageConverterTest/testEworkerMessageConvertToObject()#org/junit/Assert/assertEquals(java.lang.Object,java.lang.Object)
io/corbel/evci/converter/DomainObjectJsonMessageConverterTest/testEworkerMessageConvertToObject()#com/fasterxml/jackson/core/type/TypeReference/getType()
io/corbel/evci/converter/DomainObjectJsonMessageConverterTest/testEworkerMessageConvertToObject()#org/springframework/amqp/core/MessageProperties/MessageProperties()
io/corbel/evci/converter/DomainObjectJsonMessageConverterTest/testEworkerMessageConvertToObject()#com/fasterxml/jackson/databind/ObjectMapper/ObjectMapper()
io/corbel/resources/rem/i18n/I18nBaseRem/getLanguage(javax.ws.rs.core.MultivaluedMap)#javax/ws/rs/core/MultivaluedMap/getFirst(K)
io/corbel/resources/rem/i18n/I18nBaseRem/getJsonRem(java.lang.String,org.springframework.http.HttpMethod)#io/corbel/resources/rem/service/RemService/getRem(java.lang.String,java.util.List,org.springframework.http.HttpMethod)
io/corbel/resources/rem/i18n/I18nBaseRem/getJsonRem(java.lang.String,org.springframework.http.HttpMethod)#java/util/Arrays/asList(T[])
io/corbel/resources/rem/i18n/I18nBaseRem/getProcessedLanguage(java.lang.String)#java/util/stream/Stream/map(java.util.function.Function)
io/corbel/resources/rem/i18n/I18nBaseRem/getProcessedLanguage(java.lang.String)#java/util/stream/Stream/sorted(java.util.Comparator)
io/corbel/resources/rem/i18n/I18nBaseRem/getProcessedLanguage(java.lang.String)#java/lang/String/split(java.lang.String)
io/corbel/resources/rem/i18n/I18nBaseRem/getProcessedLanguage(java.lang.String)#java/util/stream/Stream/collect(java.util.stream.Collector)
io/corbel/resources/rem/i18n/I18nBaseRem/getProcessedLanguage(java.lang.String)#java/util/stream/Collectors/toList()
io/corbel/resources/rem/i18n/I18nBaseRem/getProcessedLanguage(java.lang.String)#java/util/stream/Stream/filter(java.util.function.Predicate)
io/corbel/resources/rem/i18n/I18nBaseRem/getProcessedLanguage(java.lang.String)#java/util/Arrays/stream(T[])
io/corbel/notifications/eventbus/NotificationEventHandler/handle(io.corbel.event.NotificationEvent)#io/corbel/event/NotificationEvent/getNotificationId()
io/corbel/notifications/eventbus/NotificationEventHandler/handle(io.corbel.event.NotificationEvent)#io/corbel/notifications/service/SenderNotificationsService/sendNotification(java.lang.String,java.lang.String,java.util.Map,java.lang.String[])
io/corbel/notifications/eventbus/NotificationEventHandler/handle(io.corbel.event.NotificationEvent)#io/corbel/event/NotificationEvent/getProperties()
io/corbel/notifications/eventbus/NotificationEventHandler/handle(io.corbel.event.NotificationEvent)#io/corbel/event/NotificationEvent/getRecipient()
io/corbel/notifications/eventbus/NotificationEventHandler/handle(io.corbel.event.NotificationEvent)#io/corbel/eventbus/EventWithSpecificDomain/getDomain()
io/corbel/resources/rem/dao/builder/MongoAggregationBuilder/group(java.util.List)#io/corbel/resources/rem/dao/builder/MongoAggregationBuilder/group(java.util.List,boolean)
io/corbel/resources/rem/dao/builder/MongoAggregationBuilder/group(java.util.List,boolean)#org/springframework/data/mongodb/core/aggregation/GroupOperation/first(java.lang.String)
io/corbel/resources/rem/dao/builder/MongoAggregationBuilder/group(java.util.List,boolean)#org/springframework/data/mongodb/core/aggregation/Aggregation/group(java.lang.String[])
io/corbel/resources/rem/dao/builder/MongoAggregationBuilder/group(java.util.List,boolean)#org/springframework/data/mongodb/core/aggregation/GroupOperation/GroupOperationBuilder/as(java.lang.String)
io/corbel/resources/rem/dao/builder/MongoAggregationBuilder/group(java.util.List,boolean)#java/util/List/toArray(T[])
io/corbel/resources/rem/dao/builder/MongoAggregationBuilder/group(java.util.List,boolean)#java/util/List/isEmpty()
io/corbel/resources/rem/dao/builder/MongoAggregationBuilder/group(java.util.List,boolean)#java/util/List/size()
io/corbel/resources/rem/dao/builder/MongoAggregationBuilder/group(java.util.List,boolean)#java/util/List/add(E)
io/corbel/resources/rem/dao/builder/MongoAggregationBuilder/sort(java.lang.String,java.lang.String)#org/springframework/data/domain/Sort/Direction/fromString(java.lang.String)
io/corbel/resources/rem/dao/builder/MongoAggregationBuilder/sort(java.lang.String,java.lang.String)#org/springframework/data/mongodb/core/aggregation/Aggregation/sort(org.springframework.data.domain.Sort.Direction,java.lang.String[])
io/corbel/resources/rem/dao/builder/MongoAggregationBuilder/sort(java.lang.String,java.lang.String)#java/util/List/add(E)
io/corbel/resources/rem/dao/builder/MongoAggregationBuilder/build()#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
io/corbel/resources/rem/dao/builder/MongoAggregationBuilder/build()#org/springframework/data/mongodb/core/aggregation/Aggregation/newAggregation(org.springframework.data.mongodb.core.aggregation.AggregationOperation[])
io/corbel/resources/rem/dao/builder/MongoAggregationBuilder/build()#java/util/List/toArray(T[])
io/corbel/resources/rem/dao/builder/MongoAggregationBuilder/build()#java/util/List/isEmpty()
io/corbel/resources/rem/dao/builder/MongoAggregationBuilder/build()#java/util/List/size()
io/corbel/resources/rem/dao/builder/MongoAggregationBuilder/match(io.corbel.resources.rem.model.ResourceUri,java.util.Optional)#java/util/Optional/get()
io/corbel/resources/rem/dao/builder/MongoAggregationBuilder/match(io.corbel.resources.rem.model.ResourceUri,java.util.Optional)#org/springframework/data/mongodb/core/query/Criteria/is(java.lang.Object)
io/corbel/resources/rem/dao/builder/MongoAggregationBuilder/match(io.corbel.resources.rem.model.ResourceUri,java.util.Optional)#io/corbel/resources/rem/model/ResourceUri/getTypeId()
io/corbel/resources/rem/dao/builder/MongoAggregationBuilder/match(io.corbel.resources.rem.model.ResourceUri,java.util.Optional)#org/springframework/data/mongodb/core/aggregation/Aggregation/match(org.springframework.data.mongodb.core.query.Criteria)
io/corbel/resources/rem/dao/builder/MongoAggregationBuilder/match(io.corbel.resources.rem.model.ResourceUri,java.util.Optional)#java/util/List/add(E)
io/corbel/resources/rem/dao/builder/MongoAggregationBuilder/match(io.corbel.resources.rem.model.ResourceUri,java.util.Optional)#io/corbel/resources/rem/model/ResourceUri/isRelation()
io/corbel/resources/rem/dao/builder/MongoAggregationBuilder/match(io.corbel.resources.rem.model.ResourceUri,java.util.Optional)#org/springframework/data/mongodb/core/query/Criteria/and(java.lang.String)
io/corbel/resources/rem/dao/builder/MongoAggregationBuilder/match(io.corbel.resources.rem.model.ResourceUri,java.util.Optional)#java/util/Optional/isPresent()
io/corbel/resources/rem/dao/builder/MongoAggregationBuilder/match(io.corbel.resources.rem.model.ResourceUri,java.util.Optional)#io/corbel/lib/queries/mongo/builder/CriteriaBuilder/buildFromResourceQueries(java.util.List)
io/corbel/resources/rem/dao/builder/MongoAggregationBuilder/match(io.corbel.resources.rem.model.ResourceUri,java.util.Optional)#org/springframework/data/mongodb/core/query/Criteria/Criteria()
io/corbel/resources/rem/dao/builder/MongoAggregationBuilder/withOperation(org.springframework.data.mongodb.core.aggregation.AggregationOperation)#java/util/List/add(E)
io/corbel/resources/rem/dao/builder/MongoAggregationBuilder/match(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,java.util.Optional)#org/apache/commons/lang3/StringUtils/isNoneEmpty(java.lang.CharSequence[])
io/corbel/resources/rem/dao/builder/MongoAggregationBuilder/match(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,java.util.Optional)#org/springframework/data/mongodb/core/query/Criteria/is(java.lang.Object)
io/corbel/resources/rem/dao/builder/MongoAggregationBuilder/match(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,java.util.Optional)#org/springframework/data/mongodb/core/query/TextCriteria/getCriteriaObject()
io/corbel/resources/rem/dao/builder/MongoAggregationBuilder/match(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,java.util.Optional)#io/corbel/resources/rem/model/ResourceUri/getTypeId()
io/corbel/resources/rem/dao/builder/MongoAggregationBuilder/match(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,java.util.Optional)#org/springframework/data/mongodb/core/query/TextCriteria/forDefaultLanguage()
io/corbel/resources/rem/dao/builder/MongoAggregationBuilder/match(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,java.util.Optional)#org/springframework/data/mongodb/core/aggregation/Aggregation/match(org.springframework.data.mongodb.core.query.Criteria)
io/corbel/resources/rem/dao/builder/MongoAggregationBuilder/match(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,java.util.Optional)#java/util/List/add(E)
io/corbel/resources/rem/dao/builder/MongoAggregationBuilder/match(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,java.util.Optional)#org/springframework/data/mongodb/core/query/Criteria/and(java.lang.String)
io/corbel/resources/rem/dao/builder/MongoAggregationBuilder/match(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,java.util.Optional)#java/util/Optional/isPresent()
io/corbel/resources/rem/dao/builder/MongoAggregationBuilder/match(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,java.util.Optional)#java/util/Optional/get()
io/corbel/resources/rem/dao/builder/MongoAggregationBuilder/match(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,java.util.Optional)#org/bson/BSONObject/get(java.lang.String)
io/corbel/resources/rem/dao/builder/MongoAggregationBuilder/match(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,java.util.Optional)#io/corbel/lib/queries/mongo/builder/CriteriaBuilder/buildFromResourceQueries(java.util.List)
io/corbel/resources/rem/dao/builder/MongoAggregationBuilder/match(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,java.util.Optional)#org/springframework/data/mongodb/core/query/Criteria/Criteria()
io/corbel/resources/rem/dao/builder/MongoAggregationBuilder/match(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,java.util.Optional)#org/springframework/data/mongodb/core/query/TextCriteria/matching(java.lang.String)
io/corbel/resources/rem/dao/builder/MongoAggregationBuilder/match(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,java.util.Optional)#io/corbel/resources/rem/model/ResourceUri/isRelation()
io/corbel/resources/rem/dao/builder/MongoAggregationBuilder/pagination(io.corbel.lib.queries.request.Pagination)#io/corbel/lib/queries/request/Pagination/getPage()
io/corbel/resources/rem/dao/builder/MongoAggregationBuilder/pagination(io.corbel.lib.queries.request.Pagination)#io/corbel/lib/queries/request/Pagination/getPageSize()
io/corbel/resources/rem/dao/builder/MongoAggregationBuilder/pagination(io.corbel.lib.queries.request.Pagination)#org/springframework/data/mongodb/core/aggregation/Aggregation/limit(long)
io/corbel/resources/rem/dao/builder/MongoAggregationBuilder/pagination(io.corbel.lib.queries.request.Pagination)#org/springframework/data/mongodb/core/aggregation/Aggregation/skip(int)
io/corbel/resources/rem/dao/builder/MongoAggregationBuilder/pagination(io.corbel.lib.queries.request.Pagination)#java/util/List/add(E)
io/corbel/resources/rem/dao/builder/MongoAggregationBuilder/projection(java.lang.String,java.lang.String)#org/springframework/data/mongodb/core/aggregation/ProjectionOperation/ExpressionProjectionOperationBuilder/as(java.lang.String)
io/corbel/resources/rem/dao/builder/MongoAggregationBuilder/projection(java.lang.String,java.lang.String)#org/springframework/data/mongodb/core/aggregation/Aggregation/project(org.springframework.data.mongodb.core.aggregation.Fields)
io/corbel/resources/rem/dao/builder/MongoAggregationBuilder/projection(java.lang.String,java.lang.String)#org/springframework/data/mongodb/core/aggregation/Fields/from(org.springframework.data.mongodb.core.aggregation.Field[])
io/corbel/resources/rem/dao/builder/MongoAggregationBuilder/projection(java.lang.String,java.lang.String)#java/util/List/add(E)
io/corbel/resources/rem/dao/builder/MongoAggregationBuilder/projection(java.lang.String,java.lang.String)#org/springframework/data/mongodb/core/aggregation/Fields/field(java.lang.String,java.lang.String)
io/corbel/resources/rem/dao/builder/MongoAggregationBuilder/projection(java.lang.String,java.lang.String)#org/springframework/data/mongodb/core/aggregation/ProjectionOperation/andExpression(java.lang.String,java.lang.Object[])
io/corbel/resources/href/LinkBuilderTest/setUp()#java/net/URI/URI(java.lang.String)
io/corbel/resources/href/LinkBuilderTest/setUp()#io/corbel/resources/href/LinksBuilder/LinksBuilder()
io/corbel/resources/href/LinkBuilderTest/ResourceLinksBuilderProblematicIdTest()#io/corbel/resources/href/LinksBuilder/GroundLinksBuilder/id(java.lang.String)
io/corbel/resources/href/LinkBuilderTest/ResourceLinksBuilderProblematicIdTest()#io/corbel/resources/href/LinksBuilder/ResourceLinksBuilder/buildSelfLink()
io/corbel/resources/href/LinkBuilderTest/ResourceLinksBuilderProblematicIdTest()#io/corbel/resources/href/LinksBuilder/typeUri(java.net.URI)
io/corbel/resources/href/LinkBuilderTest/ResourceLinksBuilderProblematicIdTest()#io/corbel/resources/href/LinksBuilder/ResourceLinksBuilder/getResourceUri()
io/corbel/resources/href/LinkBuilderTest/ResourceLinksBuilderProblematicIdTest()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/resources/href/LinkBuilderTest/ResourceLinksBuilderProblematicIdTest()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/resources/href/LinkBuilderTest/ResourceLinksBuilderProblematicIdTest()#java/net/URI/toASCIIString()
io/corbel/resources/href/LinkBuilderTest/ResourceLinksBuilderCleanIdTest()#io/corbel/resources/href/LinksBuilder/GroundLinksBuilder/id(java.lang.String)
io/corbel/resources/href/LinkBuilderTest/ResourceLinksBuilderCleanIdTest()#io/corbel/resources/href/LinksBuilder/ResourceLinksBuilder/buildSelfLink()
io/corbel/resources/href/LinkBuilderTest/ResourceLinksBuilderCleanIdTest()#io/corbel/resources/href/LinksBuilder/typeUri(java.net.URI)
io/corbel/resources/href/LinkBuilderTest/ResourceLinksBuilderCleanIdTest()#io/corbel/resources/href/LinksBuilder/ResourceLinksBuilder/getResourceUri()
io/corbel/resources/href/LinkBuilderTest/ResourceLinksBuilderCleanIdTest()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/resources/href/LinkBuilderTest/ResourceLinksBuilderCleanIdTest()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/resources/href/LinkBuilderTest/ResourceLinksBuilderCleanIdTest()#java/net/URI/toASCIIString()
io/corbel/resources/rem/dao/DateQueryNodeTransformer/transformDateValue(java.lang.String,io.corbel.lib.queries.request.QueryOperator,io.corbel.lib.queries.request.QueryLiteral)#java/lang/Enum/toString()
io/corbel/resources/rem/dao/DateQueryNodeTransformer/transformDateValue(java.lang.String,io.corbel.lib.queries.request.QueryOperator,io.corbel.lib.queries.request.QueryLiteral)#io/corbel/lib/queries/DateQueryLiteral/DateQueryLiteral(java.util.Date)
io/corbel/resources/rem/dao/DateQueryNodeTransformer/transformDateValue(java.lang.String,io.corbel.lib.queries.request.QueryOperator,io.corbel.lib.queries.request.QueryLiteral)#java/lang/String/equals(java.lang.Object)
io/corbel/resources/rem/dao/DateQueryNodeTransformer/transformDateValue(java.lang.String,io.corbel.lib.queries.request.QueryOperator,io.corbel.lib.queries.request.QueryLiteral)#java/util/Date/Date(long)
io/corbel/resources/rem/dao/DateQueryNodeTransformer/transformDateValue(java.lang.String,io.corbel.lib.queries.request.QueryOperator,io.corbel.lib.queries.request.QueryLiteral)#io/corbel/resources/rem/dao/DateQueryNodeTransformer/VALID_OPERATORS/valueOf(java.lang.String)
io/corbel/resources/rem/dao/DateQueryNodeTransformer/transformDateValue(java.lang.String,io.corbel.lib.queries.request.QueryOperator,io.corbel.lib.queries.request.QueryLiteral)#io/corbel/lib/queries/request/QueryLiteral/getLiteral()
io/corbel/resources/rem/dao/DateQueryNodeTransformer/apply(io.corbel.lib.queries.request.QueryNode)#io/corbel/resources/rem/dao/DateQueryNodeTransformer/transformDateValue(java.lang.String,io.corbel.lib.queries.request.QueryOperator,io.corbel.lib.queries.request.QueryLiteral)
io/corbel/resources/rem/dao/DateQueryNodeTransformer/apply(io.corbel.lib.queries.request.QueryNode)#io/corbel/lib/queries/request/QueryNode/getValue()
io/corbel/resources/rem/dao/DateQueryNodeTransformer/apply(io.corbel.lib.queries.request.QueryNode)#io/corbel/lib/queries/QueryNodeImpl/QueryNodeImpl(io.corbel.lib.queries.request.QueryOperator,java.lang.String,io.corbel.lib.queries.request.QueryLiteral)
io/corbel/resources/rem/dao/DateQueryNodeTransformer/apply(io.corbel.lib.queries.request.QueryNode)#io/corbel/lib/queries/request/QueryNode/getField()
io/corbel/resources/rem/dao/DateQueryNodeTransformer/apply(io.corbel.lib.queries.request.QueryNode)#io/corbel/lib/queries/request/QueryNode/getOperator()
io/corbel/resources/rem/acl/AclTestUtils/getEntityWithoutAcl()#com/google/gson/JsonPrimitive/JsonPrimitive(java.lang.String)
io/corbel/resources/rem/acl/AclTestUtils/getEntityWithoutAcl()#com/google/gson/JsonObject/JsonObject()
io/corbel/resources/rem/acl/AclTestUtils/getEntityWithoutAcl()#com/google/gson/JsonObject/add(java.lang.String,com.google.gson.JsonElement)
io/corbel/resources/rem/acl/AclTestUtils/getEntity(java.lang.String,java.lang.String)#com/google/gson/JsonObject/add(java.lang.String,com.google.gson.JsonElement)
io/corbel/resources/rem/acl/AclTestUtils/getEntity(java.lang.String,java.lang.String)#com/google/gson/JsonObject/addProperty(java.lang.String,java.lang.String)
io/corbel/resources/rem/acl/AclTestUtils/getEntity(java.lang.String,java.lang.String)#com/google/gson/JsonObject/JsonObject()
io/corbel/resources/rem/plugin/RestorRemPlugin/addHealthCheck(io.corbel.resources.rem.plugin.HealthCheckRegistry)#io/corbel/resources/rem/plugin/HealthCheckRegistry/addHealthCheck(java.lang.String,com.codahale.metrics.health.HealthCheck)
io/corbel/resources/rem/plugin/RestorRemPlugin/addHealthCheck(io.corbel.resources.rem.plugin.HealthCheckRegistry)#org/springframework/beans/factory/BeanFactory/getBean(java.lang.String,java.lang.Class)
io/corbel/resources/rem/plugin/RestorRemPlugin/register(io.corbel.resources.rem.RemRegistry)#org/springframework/beans/factory/BeanFactory/getBean(java.lang.String,java.lang.Class)
io/corbel/resources/rem/plugin/RestorRemPlugin/register(io.corbel.resources.rem.RemRegistry)#io/corbel/resources/rem/RemRegistry/registerRem(io.corbel.resources.rem.Rem,java.lang.String,org.springframework.http.MediaType,org.springframework.http.HttpMethod[])
io/corbel/resources/rem/plugin/RestorRemPlugin/init()#org/springframework/context/annotation/AnnotationConfigApplicationContext/AnnotationConfigApplicationContext(java.lang.Class<?>[])
io/corbel/resources/rem/plugin/RestorRemPlugin/init()#io/corbel/resources/rem/plugin/RemPlugin/init()
io/corbel/resources/rem/plugin/RestorRemPlugin/init()#org/slf4j/Logger/info(java.lang.String)
io/corbel/resources/rem/plugin/RestorRemPlugin/init()#io/corbel/lib/config/ConfigurationHelper/setConfigurationNamespace(java.lang.String)
io/corbel/iam/model/GroupIdGenerator/generateId(io.corbel.iam.model.Group)#io/corbel/iam/model/Group/getDomain()
io/corbel/iam/model/GroupIdGenerator/generateId(io.corbel.iam.model.Group)#com/google/common/base/Joiner/join(java.lang.Object,java.lang.Object,java.lang.Object[])
io/corbel/iam/model/GroupIdGenerator/generateId(io.corbel.iam.model.Group)#io/corbel/iam/model/Group/getName()
io/corbel/iam/model/GroupIdGenerator/generateId(io.corbel.iam.model.Group)#io/corbel/lib/ws/digest/Digester/digest(java.lang.String)
io/corbel/iam/model/GroupIdGenerator/generateId(io.corbel.iam.model.Group)#com/google/common/base/Joiner/on(char)
io/corbel/resources/rem/service/TextSearchResmiServiceTest/setup()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/service/TextSearchResmiServiceTest/setup()#io/corbel/resources/rem/service/TextSearchResmiService/TextSearchResmiService(io.corbel.resources.rem.dao.MongoResmiDao,java.time.Clock)
io/corbel/resources/rem/service/TextSearchResmiServiceTest/setup()#io/corbel/resources/rem/request/CollectionParameters/getPagination()
io/corbel/resources/rem/service/TextSearchResmiServiceTest/setup()#io/corbel/resources/rem/request/CollectionParameters/getAggregation()
io/corbel/resources/rem/service/TextSearchResmiServiceTest/setup()#java/util/Optional/ofNullable(T)
io/corbel/resources/rem/service/TextSearchResmiServiceTest/setup()#io/corbel/resources/rem/request/CollectionParameters/getQueries()
io/corbel/resources/rem/service/TextSearchResmiServiceTest/setup()#io/corbel/resources/rem/request/CollectionParameters/getSearch()
io/corbel/resources/rem/service/TextSearchResmiServiceTest/setup()#java/util/Optional/empty()
io/corbel/resources/rem/service/TextSearchResmiServiceTest/setup()#org/mockito/Mockito/reset(T[])
io/corbel/resources/rem/service/TextSearchResmiServiceTest/setup()#java/time/Clock/systemUTC()
io/corbel/resources/rem/service/TextSearchResmiServiceTest/setup()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/service/TextSearchResmiServiceTest/setup()#io/corbel/resources/rem/request/CollectionParameters/getSort()
io/corbel/resources/rem/service/TextSearchResmiServiceTest/findRelationTestWithEmptyTextSearch()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/service/TextSearchResmiServiceTest/findRelationTestWithEmptyTextSearch()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/service/TextSearchResmiServiceTest/findRelationTestWithEmptyTextSearch()#java/util/Optional/of(T)
io/corbel/resources/rem/service/TextSearchResmiServiceTest/findRelationTestWithEmptyTextSearch()#io/corbel/resources/rem/request/RelationParameters/getPredicateResource()
io/corbel/resources/rem/service/TextSearchResmiServiceTest/findRelationTestWithEmptyTextSearch()#io/corbel/resources/rem/request/CollectionParameters/getSearch()
io/corbel/resources/rem/service/TextSearchResmiServiceTest/findRelationTestWithEmptyTextSearch()#com/google/gson/JsonElement/getAsJsonObject()
io/corbel/resources/rem/service/TextSearchResmiServiceTest/findRelationTestWithEmptyTextSearch()#java/util/Optional/empty()
io/corbel/resources/rem/service/TextSearchResmiServiceTest/findRelationTestWithEmptyTextSearch()#org/mockito/Matchers/eq(T)
io/corbel/resources/rem/service/TextSearchResmiServiceTest/findRelationTestWithEmptyTextSearch()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/resources/rem/service/TextSearchResmiServiceTest/findRelationTestWithEmptyTextSearch()#io/corbel/resources/rem/service/TextSearchResmiService/findRelation(io.corbel.resources.rem.model.ResourceUri,java.util.Optional)
io/corbel/resources/rem/service/TextSearchResmiServiceTest/findRelationTestWithEmptyTextSearch()#io/corbel/resources/rem/model/ResourceUri/ResourceUri(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
io/corbel/resources/rem/service/TextSearchResmiServiceTest/findRelationTestWithEmptyTextSearch()#com/google/gson/JsonObject/addProperty(java.lang.String,java.lang.String)
io/corbel/resources/rem/service/TextSearchResmiServiceTest/findRelationTestWithEmptyTextSearch()#com/google/gson/JsonObject/JsonObject()
io/corbel/resources/rem/service/TextSearchResmiServiceTest/findRelationTestWithEmptyTextSearch()#io/corbel/resources/rem/dao/MongoResmiDao/findRelation(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,java.util.Optional,java.util.Optional,java.util.Optional)
io/corbel/resources/rem/service/TextSearchResmiServiceTest/findRelationTestWithEmptyTextSearch()#org/fest/assertions/api/Assertions/assertThat(T)
io/corbel/resources/rem/service/TextSearchResmiServiceTest/findRelationTestWithTextSearch()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/service/TextSearchResmiServiceTest/findRelationTestWithTextSearch()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/service/TextSearchResmiServiceTest/findRelationTestWithTextSearch()#java/util/Optional/of(T)
io/corbel/resources/rem/service/TextSearchResmiServiceTest/findRelationTestWithTextSearch()#io/corbel/resources/rem/request/RelationParameters/getPredicateResource()
io/corbel/resources/rem/service/TextSearchResmiServiceTest/findRelationTestWithTextSearch()#com/google/gson/JsonElement/getAsJsonObject()
io/corbel/resources/rem/service/TextSearchResmiServiceTest/findRelationTestWithTextSearch()#org/mockito/Matchers/eq(T)
io/corbel/resources/rem/service/TextSearchResmiServiceTest/findRelationTestWithTextSearch()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/resources/rem/service/TextSearchResmiServiceTest/findRelationTestWithTextSearch()#io/corbel/resources/rem/service/TextSearchResmiService/findRelation(io.corbel.resources.rem.model.ResourceUri,java.util.Optional)
io/corbel/resources/rem/service/TextSearchResmiServiceTest/findRelationTestWithTextSearch()#io/corbel/resources/rem/model/ResourceUri/ResourceUri(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
io/corbel/resources/rem/service/TextSearchResmiServiceTest/findRelationTestWithTextSearch()#io/corbel/lib/queries/request/Search/Search(boolean,java.lang.String)
io/corbel/resources/rem/service/TextSearchResmiServiceTest/findRelationTestWithTextSearch()#io/corbel/resources/rem/request/CollectionParameters/getSearch()
io/corbel/resources/rem/service/TextSearchResmiServiceTest/findRelationTestWithTextSearch()#com/google/gson/JsonObject/addProperty(java.lang.String,java.lang.String)
io/corbel/resources/rem/service/TextSearchResmiServiceTest/findRelationTestWithTextSearch()#com/google/gson/JsonObject/JsonObject()
io/corbel/resources/rem/service/TextSearchResmiServiceTest/findRelationTestWithTextSearch()#io/corbel/resources/rem/dao/MongoResmiDao/findRelation(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,java.util.Optional,java.util.Optional,java.util.Optional)
io/corbel/resources/rem/service/TextSearchResmiServiceTest/findRelationTestWithTextSearch()#org/fest/assertions/api/Assertions/assertThat(T)
io/corbel/oauth/repository/decorator/LowerCaseDecoratorTest/setup()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/oauth/repository/decorator/LowerCaseDecoratorTest/setup()#io/corbel/oauth/model/User/getEmail()
io/corbel/oauth/repository/decorator/LowerCaseDecoratorTest/setup()#io/corbel/oauth/model/User/getUsername()
io/corbel/oauth/repository/decorator/LowerCaseDecoratorTest/setup()#io/corbel/oauth/repository/decorator/LowerCaseDecorator/LowerCaseDecorator(io.corbel.oauth.repository.UserRepository)
io/corbel/oauth/repository/decorator/LowerCaseDecoratorTest/setup()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/oauth/repository/decorator/LowerCaseDecoratorTest/setup()#org/mockito/Mockito/when(T)
io/corbel/oauth/repository/decorator/LowerCaseDecoratorTest/findByUsernameUpperCaseTest()#io/corbel/oauth/repository/decorator/LowerCaseDecorator/findByUsername(java.lang.String)
io/corbel/oauth/repository/decorator/LowerCaseDecoratorTest/findByUsernameUpperCaseTest()#org/mockito/Mockito/verify(T,org.mockito.verification.VerificationMode)
io/corbel/oauth/repository/decorator/LowerCaseDecoratorTest/findByUsernameUpperCaseTest()#org/mockito/Mockito/times(int)
io/corbel/oauth/repository/decorator/LowerCaseDecoratorTest/findByUsernameUpperCaseTest()#io/corbel/oauth/repository/UserRepository/findByUsername(java.lang.String)
io/corbel/oauth/repository/decorator/LowerCaseDecoratorTest/findByUsernameTest()#io/corbel/oauth/repository/decorator/LowerCaseDecorator/findByUsername(java.lang.String)
io/corbel/oauth/repository/decorator/LowerCaseDecoratorTest/findByUsernameTest()#org/mockito/Mockito/verify(T,org.mockito.verification.VerificationMode)
io/corbel/oauth/repository/decorator/LowerCaseDecoratorTest/findByUsernameTest()#org/mockito/Mockito/times(int)
io/corbel/oauth/repository/decorator/LowerCaseDecoratorTest/findByUsernameTest()#io/corbel/oauth/repository/UserRepository/findByUsername(java.lang.String)
io/corbel/oauth/repository/decorator/LowerCaseDecoratorTest/deleteTest()#org/mockito/Mockito/verify(T,org.mockito.verification.VerificationMode)
io/corbel/oauth/repository/decorator/LowerCaseDecoratorTest/deleteTest()#io/corbel/oauth/repository/decorator/LowerCaseDecorator/delete(java.lang.String)
io/corbel/oauth/repository/decorator/LowerCaseDecoratorTest/deleteTest()#org/mockito/Mockito/times(int)
io/corbel/oauth/repository/decorator/LowerCaseDecoratorTest/deleteTest()#org/springframework/data/repository/CrudRepository/delete(ID)
io/corbel/oauth/repository/decorator/LowerCaseDecoratorTest/findByUsernameAndDomainTest()#org/mockito/Mockito/verify(T,org.mockito.verification.VerificationMode)
io/corbel/oauth/repository/decorator/LowerCaseDecoratorTest/findByUsernameAndDomainTest()#org/mockito/Mockito/times(int)
io/corbel/oauth/repository/decorator/LowerCaseDecoratorTest/findByUsernameAndDomainTest()#io/corbel/oauth/repository/decorator/LowerCaseDecorator/findByUsernameAndDomain(java.lang.String,java.lang.String)
io/corbel/oauth/repository/decorator/LowerCaseDecoratorTest/findByUsernameAndDomainTest()#io/corbel/oauth/repository/UserRepository/findByUsernameAndDomain(java.lang.String,java.lang.String)
io/corbel/oauth/repository/decorator/LowerCaseDecoratorTest/existsUpperCaseTest()#org/mockito/Mockito/verify(T,org.mockito.verification.VerificationMode)
io/corbel/oauth/repository/decorator/LowerCaseDecoratorTest/existsUpperCaseTest()#org/mockito/Mockito/times(int)
io/corbel/oauth/repository/decorator/LowerCaseDecoratorTest/existsUpperCaseTest()#io/corbel/oauth/repository/decorator/LowerCaseDecorator/exists(java.lang.String)
io/corbel/oauth/repository/decorator/LowerCaseDecoratorTest/existsUpperCaseTest()#org/springframework/data/repository/CrudRepository/exists(ID)
io/corbel/oauth/repository/decorator/LowerCaseDecoratorTest/patchUserUpperCaseTestOnlyUser()#io/corbel/oauth/repository/decorator/LowerCaseDecorator/patch(io.corbel.oauth.model.User,java.lang.String[])
io/corbel/oauth/repository/decorator/LowerCaseDecoratorTest/patchUserUpperCaseTestOnlyUser()#org/mockito/Mockito/verify(T,org.mockito.verification.VerificationMode)
io/corbel/oauth/repository/decorator/LowerCaseDecoratorTest/patchUserUpperCaseTestOnlyUser()#io/corbel/oauth/model/User/setEmail(java.lang.String)
io/corbel/oauth/repository/decorator/LowerCaseDecoratorTest/patchUserUpperCaseTestOnlyUser()#io/corbel/lib/mongo/repository/PartialUpdateRepository/patch(E,java.lang.String[])
io/corbel/oauth/repository/decorator/LowerCaseDecoratorTest/patchUserUpperCaseTestOnlyUser()#io/corbel/oauth/model/User/setUsername(java.lang.String)
io/corbel/oauth/repository/decorator/LowerCaseDecoratorTest/patchUserUpperCaseTestOnlyUser()#org/mockito/Mockito/times(int)
io/corbel/oauth/repository/decorator/LowerCaseDecoratorTest/findByEmailAndDomainUpperCaseTest()#io/corbel/oauth/repository/UserRepository/findByEmailAndDomain(java.lang.String,java.lang.String)
io/corbel/oauth/repository/decorator/LowerCaseDecoratorTest/findByEmailAndDomainUpperCaseTest()#org/mockito/Mockito/verify(T,org.mockito.verification.VerificationMode)
io/corbel/oauth/repository/decorator/LowerCaseDecoratorTest/findByEmailAndDomainUpperCaseTest()#org/mockito/Mockito/times(int)
io/corbel/oauth/repository/decorator/LowerCaseDecoratorTest/findByEmailAndDomainUpperCaseTest()#io/corbel/oauth/repository/decorator/LowerCaseDecorator/findByEmailAndDomain(java.lang.String,java.lang.String)
io/corbel/oauth/repository/decorator/LowerCaseDecoratorTest/existsTest()#org/mockito/Mockito/verify(T,org.mockito.verification.VerificationMode)
io/corbel/oauth/repository/decorator/LowerCaseDecoratorTest/existsTest()#org/mockito/Mockito/times(int)
io/corbel/oauth/repository/decorator/LowerCaseDecoratorTest/existsTest()#io/corbel/oauth/repository/decorator/LowerCaseDecorator/exists(java.lang.String)
io/corbel/oauth/repository/decorator/LowerCaseDecoratorTest/existsTest()#org/springframework/data/repository/CrudRepository/exists(ID)
io/corbel/oauth/repository/decorator/LowerCaseDecoratorTest/deleteUpperCaseTest()#org/mockito/Mockito/verify(T,org.mockito.verification.VerificationMode)
io/corbel/oauth/repository/decorator/LowerCaseDecoratorTest/deleteUpperCaseTest()#io/corbel/oauth/repository/decorator/LowerCaseDecorator/delete(java.lang.String)
io/corbel/oauth/repository/decorator/LowerCaseDecoratorTest/deleteUpperCaseTest()#org/mockito/Mockito/times(int)
io/corbel/oauth/repository/decorator/LowerCaseDecoratorTest/deleteUpperCaseTest()#org/springframework/data/repository/CrudRepository/delete(ID)
io/corbel/oauth/repository/decorator/LowerCaseDecoratorTest/patchUserUpperCaseTest()#org/mockito/Mockito/verify(T,org.mockito.verification.VerificationMode)
io/corbel/oauth/repository/decorator/LowerCaseDecoratorTest/patchUserUpperCaseTest()#io/corbel/oauth/model/User/setEmail(java.lang.String)
io/corbel/oauth/repository/decorator/LowerCaseDecoratorTest/patchUserUpperCaseTest()#io/corbel/oauth/repository/decorator/LowerCaseDecorator/patch(java.lang.String,io.corbel.oauth.model.User,java.lang.String[])
io/corbel/oauth/repository/decorator/LowerCaseDecoratorTest/patchUserUpperCaseTest()#io/corbel/lib/mongo/repository/PartialUpdateRepository/patch(ID,E,java.lang.String[])
io/corbel/oauth/repository/decorator/LowerCaseDecoratorTest/patchUserUpperCaseTest()#io/corbel/oauth/model/User/setUsername(java.lang.String)
io/corbel/oauth/repository/decorator/LowerCaseDecoratorTest/patchUserUpperCaseTest()#org/mockito/Mockito/times(int)
io/corbel/oauth/repository/decorator/LowerCaseDecoratorTest/findOneTest()#org/mockito/Mockito/verify(T,org.mockito.verification.VerificationMode)
io/corbel/oauth/repository/decorator/LowerCaseDecoratorTest/findOneTest()#org/mockito/Mockito/times(int)
io/corbel/oauth/repository/decorator/LowerCaseDecoratorTest/findOneTest()#org/springframework/data/repository/CrudRepository/findOne(ID)
io/corbel/oauth/repository/decorator/LowerCaseDecoratorTest/findOneTest()#io/corbel/oauth/repository/decorator/LowerCaseDecorator/findOne(java.lang.String)
io/corbel/oauth/repository/decorator/LowerCaseDecoratorTest/findOneUpperCaseTest()#org/mockito/Mockito/verify(T,org.mockito.verification.VerificationMode)
io/corbel/oauth/repository/decorator/LowerCaseDecoratorTest/findOneUpperCaseTest()#org/mockito/Mockito/times(int)
io/corbel/oauth/repository/decorator/LowerCaseDecoratorTest/findOneUpperCaseTest()#org/springframework/data/repository/CrudRepository/findOne(ID)
io/corbel/oauth/repository/decorator/LowerCaseDecoratorTest/findOneUpperCaseTest()#io/corbel/oauth/repository/decorator/LowerCaseDecorator/findOne(java.lang.String)
io/corbel/oauth/repository/decorator/LowerCaseDecoratorTest/findByEmailAndDomainTest()#io/corbel/oauth/repository/UserRepository/findByEmailAndDomain(java.lang.String,java.lang.String)
io/corbel/oauth/repository/decorator/LowerCaseDecoratorTest/findByEmailAndDomainTest()#org/mockito/Mockito/verify(T,org.mockito.verification.VerificationMode)
io/corbel/oauth/repository/decorator/LowerCaseDecoratorTest/findByEmailAndDomainTest()#org/mockito/Mockito/times(int)
io/corbel/oauth/repository/decorator/LowerCaseDecoratorTest/findByEmailAndDomainTest()#io/corbel/oauth/repository/decorator/LowerCaseDecorator/findByEmailAndDomain(java.lang.String,java.lang.String)
io/corbel/oauth/repository/decorator/LowerCaseDecoratorTest/deleteUserUpperCaseTest()#org/mockito/Mockito/when(T)
io/corbel/oauth/repository/decorator/LowerCaseDecoratorTest/deleteUserUpperCaseTest()#org/springframework/data/repository/CrudRepository/delete(T)
io/corbel/oauth/repository/decorator/LowerCaseDecoratorTest/deleteUserUpperCaseTest()#io/corbel/oauth/repository/decorator/LowerCaseDecorator/delete(io.corbel.oauth.model.User)
io/corbel/oauth/repository/decorator/LowerCaseDecoratorTest/deleteUserUpperCaseTest()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/oauth/repository/decorator/LowerCaseDecoratorTest/deleteUserUpperCaseTest()#org/mockito/Mockito/verify(T,org.mockito.verification.VerificationMode)
io/corbel/oauth/repository/decorator/LowerCaseDecoratorTest/deleteUserUpperCaseTest()#io/corbel/oauth/model/User/getUsername()
io/corbel/oauth/repository/decorator/LowerCaseDecoratorTest/deleteUserUpperCaseTest()#io/corbel/oauth/model/User/setUsername(java.lang.String)
io/corbel/oauth/repository/decorator/LowerCaseDecoratorTest/deleteUserUpperCaseTest()#org/mockito/Mockito/times(int)
io/corbel/oauth/repository/decorator/LowerCaseDecoratorTest/saveTest()#org/mockito/Mockito/verify(T,org.mockito.verification.VerificationMode)
io/corbel/oauth/repository/decorator/LowerCaseDecoratorTest/saveTest()#org/springframework/data/repository/CrudRepository/save(S)
io/corbel/oauth/repository/decorator/LowerCaseDecoratorTest/saveTest()#io/corbel/oauth/model/User/setUsername(java.lang.String)
io/corbel/oauth/repository/decorator/LowerCaseDecoratorTest/saveTest()#org/mockito/Mockito/times(int)
io/corbel/oauth/repository/decorator/LowerCaseDecoratorTest/saveTest()#io/corbel/oauth/model/User/setEmail(java.lang.String)
io/corbel/oauth/repository/decorator/LowerCaseDecoratorTest/saveTest()#io/corbel/oauth/repository/decorator/LowerCaseDecorator/save(io.corbel.oauth.model.User)
io/corbel/oauth/repository/decorator/LowerCaseDecoratorTest/findByUsernameAndDomainUpperCaseTest()#org/mockito/Mockito/verify(T,org.mockito.verification.VerificationMode)
io/corbel/oauth/repository/decorator/LowerCaseDecoratorTest/findByUsernameAndDomainUpperCaseTest()#org/mockito/Mockito/times(int)
io/corbel/oauth/repository/decorator/LowerCaseDecoratorTest/findByUsernameAndDomainUpperCaseTest()#io/corbel/oauth/repository/decorator/LowerCaseDecorator/findByUsernameAndDomain(java.lang.String,java.lang.String)
io/corbel/oauth/repository/decorator/LowerCaseDecoratorTest/findByUsernameAndDomainUpperCaseTest()#io/corbel/oauth/repository/UserRepository/findByUsernameAndDomain(java.lang.String,java.lang.String)
io/corbel/iam/auth/rule/RequestDomainAuthorizationRuleTest/setup()#io/corbel/iam/auth/rule/RequestDomainAuthorizationRule/RequestDomainAuthorizationRule()
io/corbel/iam/auth/rule/RequestDomainAuthorizationRuleTest/processFailNotAllowedDomain()#org/mockito/Mockito/when(T)
io/corbel/iam/auth/rule/RequestDomainAuthorizationRuleTest/processFailNotAllowedDomain()#io/corbel/iam/model/Domain/getAllowedDomains()
io/corbel/iam/auth/rule/RequestDomainAuthorizationRuleTest/processFailNotAllowedDomain()#io/corbel/iam/auth/rule/RequestDomainAuthorizationRule/process(io.corbel.iam.auth.AuthorizationRequestContext)
io/corbel/iam/auth/rule/RequestDomainAuthorizationRuleTest/processFailNotAllowedDomain()#io/corbel/iam/model/Entity/getId()
io/corbel/iam/auth/rule/RequestDomainAuthorizationRuleTest/processFailNotAllowedDomain()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/auth/rule/RequestDomainAuthorizationRuleTest/processFailNotAllowedDomain()#io/corbel/iam/auth/AuthorizationRequestContext/getRequestedDomain()
io/corbel/iam/auth/rule/RequestDomainAuthorizationRuleTest/processFailNotAllowedDomain()#io/corbel/iam/auth/AuthorizationRequestContext/getIssuerClientDomain()
io/corbel/iam/auth/rule/RequestDomainAuthorizationRuleTest/processOk()#org/mockito/Mockito/when(T)
io/corbel/iam/auth/rule/RequestDomainAuthorizationRuleTest/processOk()#io/corbel/iam/model/Domain/getAllowedDomains()
io/corbel/iam/auth/rule/RequestDomainAuthorizationRuleTest/processOk()#io/corbel/iam/auth/rule/RequestDomainAuthorizationRule/process(io.corbel.iam.auth.AuthorizationRequestContext)
io/corbel/iam/auth/rule/RequestDomainAuthorizationRuleTest/processOk()#io/corbel/iam/model/Entity/getId()
io/corbel/iam/auth/rule/RequestDomainAuthorizationRuleTest/processOk()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/auth/rule/RequestDomainAuthorizationRuleTest/processOk()#io/corbel/iam/auth/AuthorizationRequestContext/getRequestedDomain()
io/corbel/iam/auth/rule/RequestDomainAuthorizationRuleTest/processOk()#io/corbel/iam/auth/AuthorizationRequestContext/getIssuerClientDomain()
io/corbel/iam/auth/rule/RequestDomainAuthorizationRuleTest/processFailNotChildren()#org/mockito/Mockito/when(T)
io/corbel/iam/auth/rule/RequestDomainAuthorizationRuleTest/processFailNotChildren()#io/corbel/iam/auth/rule/RequestDomainAuthorizationRule/process(io.corbel.iam.auth.AuthorizationRequestContext)
io/corbel/iam/auth/rule/RequestDomainAuthorizationRuleTest/processFailNotChildren()#io/corbel/iam/model/Entity/getId()
io/corbel/iam/auth/rule/RequestDomainAuthorizationRuleTest/processFailNotChildren()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/auth/rule/RequestDomainAuthorizationRuleTest/processFailNotChildren()#io/corbel/iam/auth/AuthorizationRequestContext/getRequestedDomain()
io/corbel/iam/auth/rule/RequestDomainAuthorizationRuleTest/processFailNotChildren()#io/corbel/iam/auth/AuthorizationRequestContext/getIssuerClientDomain()
io/corbel/resources/rem/dao/RelationMoveOperation/create(java.lang.String)#java/util/regex/Matcher/group(int)
io/corbel/resources/rem/dao/RelationMoveOperation/create(java.lang.String)#java/util/regex/Matcher/matches()
io/corbel/resources/rem/dao/RelationMoveOperation/create(java.lang.String)#io/corbel/resources/rem/dao/RelationMoveOperation/RelationMoveOperation(long)
io/corbel/resources/rem/dao/RelationMoveOperation/create(java.lang.String)#java/lang/Integer/parseInt(java.lang.String)
io/corbel/resources/rem/dao/RelationMoveOperation/create(java.lang.String)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
io/corbel/resources/rem/dao/RelationMoveOperation/create(java.lang.String)#java/util/regex/Pattern/matcher(java.lang.CharSequence)
io/corbel/evci/eworker/plugin/EworkerPlugin/afterPropertiesSet()#java/lang/Class/getSimpleName()
io/corbel/evci/eworker/plugin/EworkerPlugin/afterPropertiesSet()#io/corbel/evci/eworker/EworkerArtifactIdRegistry/addEworkerArtifactId(java.lang.String)
io/corbel/evci/eworker/plugin/EworkerPlugin/afterPropertiesSet()#io/corbel/evci/eworker/plugin/EworkerPlugin/register(io.corbel.evci.eworker.EworkerRegistry)
io/corbel/evci/eworker/plugin/EworkerPlugin/afterPropertiesSet()#org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)
io/corbel/evci/eworker/plugin/EworkerPlugin/afterPropertiesSet()#java/lang/Object/getClass()
io/corbel/evci/eworker/plugin/EworkerPlugin/afterPropertiesSet()#io/corbel/evci/eworker/plugin/EworkerPlugin/getArtifactName()
io/corbel/evci/eworker/plugin/EworkerPlugin/afterPropertiesSet()#io/corbel/evci/eworker/plugin/EworkerPlugin/init()
io/corbel/evci/eworker/plugin/EworkerPlugin/afterPropertiesSet()#io/corbel/evci/eworker/plugin/EworkerPlugin/setThreadsNumber()
io/corbel/evci/eworker/plugin/EworkerPlugin/afterPropertiesSet()#io/corbel/evci/eworker/plugin/EworkerPlugin/checkVersion()
io/corbel/evci/eworker/plugin/EworkerPlugin/setThreadsNumber()#org/springframework/core/env/EnvironmentCapable/getEnvironment()
io/corbel/evci/eworker/plugin/EworkerPlugin/setThreadsNumber()#org/springframework/core/env/PropertyResolver/getProperty(java.lang.String,java.lang.Class,T)
io/corbel/evci/eworker/plugin/EworkerPlugin/checkVersion()#org/springframework/core/env/EnvironmentCapable/getEnvironment()
io/corbel/evci/eworker/plugin/EworkerPlugin/checkVersion()#com/github/zafarkhaja/semver/Version/valueOf(java.lang.String)
io/corbel/evci/eworker/plugin/EworkerPlugin/checkVersion()#io/corbel/evci/exception/InitializationEworkerException/InitializationEworkerException(java.lang.String)
io/corbel/evci/eworker/plugin/EworkerPlugin/checkVersion()#org/springframework/core/env/PropertyResolver/getProperty(java.lang.String)
io/corbel/evci/eworker/plugin/EworkerPlugin/checkVersion()#com/github/zafarkhaja/semver/Version/getMajorVersion()
io/corbel/iam/auth/AuthorizationRequestContextFactory/fromJsonToken(net.oauth.jsontoken.JsonToken)#io/corbel/iam/auth/JsonTokenAuthorizationRequestContext/JsonTokenAuthorizationRequestContext(io.corbel.iam.repository.ClientRepository,io.corbel.iam.repository.DomainRepository,io.corbel.iam.repository.UserRepository,net.oauth.jsontoken.JsonToken)
io/corbel/iam/api/UserResourceTest/testGetUserProfileInvalidAggregation()#io/corbel/lib/queries/parser/AggregationParser/parse(java.lang.String)
io/corbel/iam/api/UserResourceTest/testGetUserProfileInvalidAggregation()#io/corbel/lib/queries/parser/QueryParser/parse(java.lang.String)
io/corbel/iam/api/UserResourceTest/testGetUserProfileInvalidAggregation()#java/net/URLEncoder/encode(java.lang.String,java.lang.String)
io/corbel/iam/api/UserResourceTest/testGetUserProfileInvalidAggregation()#javax/ws/rs/client/WebTarget/request(java.lang.String[])
io/corbel/iam/api/UserResourceTest/testGetUserProfileInvalidAggregation()#org/mockito/Mockito/when(T)
io/corbel/iam/api/UserResourceTest/testGetUserProfileInvalidAggregation()#io/corbel/iam/api/UserResourceTest/getTestRule()
io/corbel/iam/api/UserResourceTest/testGetUserProfileInvalidAggregation()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/iam/api/UserResourceTest/testGetUserProfileInvalidAggregation()#javax/ws/rs/client/WebTarget/queryParam(java.lang.String,java.lang.Object[])
io/corbel/iam/api/UserResourceTest/testGetUserProfileInvalidAggregation()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/iam/api/UserResourceTest/testGetUserProfileInvalidAggregation()#io/corbel/iam/service/UserService/findUserDomain(java.lang.String)
io/corbel/iam/api/UserResourceTest/testGetUserProfileInvalidAggregation()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/iam/api/UserResourceTest/testGetUserProfileInvalidAggregation()#io/corbel/iam/api/UserResourceTest/testGetUserProfileInvalidAggregation()/OtherAggretation/OtherAggretation()
io/corbel/iam/api/UserResourceTest/testGetUserProfileInvalidAggregation()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/iam/api/UserResourceTest/testGetUserProfileInvalidAggregation()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/api/UserResourceTest/testGetUserProfileInvalidAggregation()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/iam/api/UserResourceTest/testGetUserProfileInvalidAggregation()#javax/ws/rs/client/SyncInvoker/get(java.lang.Class)
io/corbel/iam/api/UserResourceTest/testGetUserProfileInvalidAggregation()#io/corbel/lib/queries/request/ResourceQuery/ResourceQuery()
io/corbel/iam/api/UserResourceTest/testGetUserProfileInvalidAggregation()#javax/ws/rs/core/Response/getStatus()
io/corbel/iam/api/UserResourceTest/addIdentityMeWithUserInOtherDomain()#io/corbel/iam/service/DomainService/oAuthServiceAllowedInDomain(java.lang.String,io.corbel.iam.model.Domain)
io/corbel/iam/api/UserResourceTest/addIdentityMeWithUserInOtherDomain()#javax/ws/rs/core/Response/Status/getStatusCode()
io/corbel/iam/api/UserResourceTest/addIdentityMeWithUserInOtherDomain()#io/corbel/iam/model/Identity/setOauthService(java.lang.String)
io/corbel/iam/api/UserResourceTest/addIdentityMeWithUserInOtherDomain()#javax/ws/rs/client/WebTarget/request(java.lang.String[])
io/corbel/iam/api/UserResourceTest/addIdentityMeWithUserInOtherDomain()#org/mockito/Mockito/when(T)
io/corbel/iam/api/UserResourceTest/addIdentityMeWithUserInOtherDomain()#io/corbel/iam/service/DomainService/scopesAllowedInDomain(java.util.Set,io.corbel.iam.model.Domain)
io/corbel/iam/api/UserResourceTest/addIdentityMeWithUserInOtherDomain()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/iam/api/UserResourceTest/addIdentityMeWithUserInOtherDomain()#io/corbel/iam/model/Identity/Identity()
io/corbel/iam/api/UserResourceTest/addIdentityMeWithUserInOtherDomain()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/iam/api/UserResourceTest/addIdentityMeWithUserInOtherDomain()#javax/ws/rs/core/Response/getStatus()
io/corbel/iam/api/UserResourceTest/addIdentityMeWithUserInOtherDomain()#javax/ws/rs/client/Entity/json(T)
io/corbel/iam/api/UserResourceTest/addIdentityMeWithUserInOtherDomain()#io/corbel/iam/model/Identity/setOauthId(java.lang.String)
io/corbel/iam/api/UserResourceTest/addIdentityMeWithUserInOtherDomain()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/iam/api/UserResourceTest/addIdentityMeWithUserInOtherDomain()#io/corbel/iam/service/UserService/findById(java.lang.String)
io/corbel/iam/api/UserResourceTest/addIdentityMeWithUserInOtherDomain()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/api/UserResourceTest/addIdentityMeWithUserInOtherDomain()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/iam/api/UserResourceTest/addIdentityMeWithUserInOtherDomain()#javax/ws/rs/client/SyncInvoker/post(javax.ws.rs.client.Entity,java.lang.Class)
io/corbel/iam/api/UserResourceTest/addIdentityMeWithUserInOtherDomain()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/iam/api/UserResourceTest/testCreateuserMissingEmail()#javax/ws/rs/client/Entity/json(T)
io/corbel/iam/api/UserResourceTest/testCreateuserMissingEmail()#io/corbel/iam/api/UserResourceTestBase/createTestUser()
io/corbel/iam/api/UserResourceTest/testCreateuserMissingEmail()#io/corbel/iam/api/UserResourceTestBase/addUserClient()
io/corbel/iam/api/UserResourceTest/testCreateuserMissingEmail()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/iam/api/UserResourceTest/testCreateuserMissingEmail()#io/corbel/iam/model/User/setEmail(java.lang.String)
io/corbel/iam/api/UserResourceTest/testCreateuserMissingEmail()#javax/ws/rs/core/Response/getStatus()
io/corbel/iam/api/UserResourceTest/testCreateuserMissingEmail()#javax/ws/rs/client/SyncInvoker/post(javax.ws.rs.client.Entity,java.lang.Class)
io/corbel/iam/api/UserResourceTest/testCreateuserMissingEmail()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/iam/api/UserResourceTest/addDuplicatedIdentity()#io/corbel/iam/service/DomainService/oAuthServiceAllowedInDomain(java.lang.String,io.corbel.iam.model.Domain)
io/corbel/iam/api/UserResourceTest/addDuplicatedIdentity()#javax/ws/rs/core/Response/Status/getStatusCode()
io/corbel/iam/api/UserResourceTest/addDuplicatedIdentity()#io/corbel/iam/model/Identity/setOauthService(java.lang.String)
io/corbel/iam/api/UserResourceTest/addDuplicatedIdentity()#javax/ws/rs/client/WebTarget/request(java.lang.String[])
io/corbel/iam/api/UserResourceTest/addDuplicatedIdentity()#org/mockito/Mockito/when(T)
io/corbel/iam/api/UserResourceTest/addDuplicatedIdentity()#io/corbel/iam/service/DomainService/scopesAllowedInDomain(java.util.Set,io.corbel.iam.model.Domain)
io/corbel/iam/api/UserResourceTest/addDuplicatedIdentity()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/iam/api/UserResourceTest/addDuplicatedIdentity()#io/corbel/iam/model/Identity/Identity()
io/corbel/iam/api/UserResourceTest/addDuplicatedIdentity()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/iam/api/UserResourceTest/addDuplicatedIdentity()#javax/ws/rs/core/Response/getStatus()
io/corbel/iam/api/UserResourceTest/addDuplicatedIdentity()#javax/ws/rs/client/Entity/json(T)
io/corbel/iam/api/UserResourceTest/addDuplicatedIdentity()#io/corbel/iam/api/UserResourceTestBase/createTestUser()
io/corbel/iam/api/UserResourceTest/addDuplicatedIdentity()#org/mockito/Mockito/doThrow(java.lang.Throwable)
io/corbel/iam/api/UserResourceTest/addDuplicatedIdentity()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/iam/api/UserResourceTest/addDuplicatedIdentity()#io/corbel/iam/service/UserService/findById(java.lang.String)
io/corbel/iam/api/UserResourceTest/addDuplicatedIdentity()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/api/UserResourceTest/addDuplicatedIdentity()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/iam/api/UserResourceTest/addDuplicatedIdentity()#io/corbel/iam/service/IdentityService/addIdentity(io.corbel.iam.model.Identity)
io/corbel/iam/api/UserResourceTest/addDuplicatedIdentity()#org/mockito/stubbing/Stubber/when(T)
io/corbel/iam/api/UserResourceTest/addDuplicatedIdentity()#io/corbel/iam/model/Identity/setOauthId(java.lang.String)
io/corbel/iam/api/UserResourceTest/addDuplicatedIdentity()#io/corbel/iam/exception/IdentityAlreadyExistsException/IdentityAlreadyExistsException()
io/corbel/iam/api/UserResourceTest/addDuplicatedIdentity()#javax/ws/rs/client/SyncInvoker/post(javax.ws.rs.client.Entity,java.lang.Class)
io/corbel/iam/api/UserResourceTest/addDuplicatedIdentity()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/iam/api/UserResourceTest/testGetSession()#io/corbel/iam/api/UserResourceTestBase/getTestUserToken()
io/corbel/iam/api/UserResourceTest/testGetSession()#io/corbel/lib/ws/auth/AuthorizationInfo/getToken()
io/corbel/iam/api/UserResourceTest/testGetSession()#javax/ws/rs/client/WebTarget/request(java.lang.String[])
io/corbel/iam/api/UserResourceTest/testGetSession()#org/mockito/Mockito/when(T)
io/corbel/iam/api/UserResourceTest/testGetSession()#org/mockito/Mockito/verify(T)
io/corbel/iam/api/UserResourceTest/testGetSession()#io/corbel/iam/api/UserResourceTestBase/getTestUser()
io/corbel/iam/api/UserResourceTest/testGetSession()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/iam/api/UserResourceTest/testGetSession()#io/corbel/lib/ws/auth/AuthorizationInfo/getUserId()
io/corbel/iam/api/UserResourceTest/testGetSession()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/iam/api/UserResourceTest/testGetSession()#io/corbel/iam/service/UserService/getSession(java.lang.String)
io/corbel/iam/api/UserResourceTest/testGetSession()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/iam/api/UserResourceTest/testGetSession()#io/corbel/iam/service/UserService/findById(java.lang.String)
io/corbel/iam/api/UserResourceTest/testGetSession()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/iam/api/UserResourceTest/testGetSession()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/api/UserResourceTest/testGetSession()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/iam/api/UserResourceTest/testGetSession()#javax/ws/rs/client/SyncInvoker/get(java.lang.Class)
io/corbel/iam/api/UserResourceTest/testGetSession()#javax/ws/rs/core/Response/getStatus()
io/corbel/iam/api/UserResourceTest/testDeleteSessionsMe()#io/corbel/lib/ws/auth/AuthorizationInfo/getToken()
io/corbel/iam/api/UserResourceTest/testDeleteSessionsMe()#javax/ws/rs/client/WebTarget/request(java.lang.String[])
io/corbel/iam/api/UserResourceTest/testDeleteSessionsMe()#org/mockito/Mockito/when(T)
io/corbel/iam/api/UserResourceTest/testDeleteSessionsMe()#org/mockito/Mockito/verify(T)
io/corbel/iam/api/UserResourceTest/testDeleteSessionsMe()#io/corbel/iam/api/UserResourceTestBase/getTestUser()
io/corbel/iam/api/UserResourceTest/testDeleteSessionsMe()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/iam/api/UserResourceTest/testDeleteSessionsMe()#io/corbel/lib/ws/auth/AuthorizationInfo/getUserId()
io/corbel/iam/api/UserResourceTest/testDeleteSessionsMe()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/iam/api/UserResourceTest/testDeleteSessionsMe()#javax/ws/rs/core/Response/getStatus()
io/corbel/iam/api/UserResourceTest/testDeleteSessionsMe()#io/corbel/iam/service/UserService/findUserDomain(java.lang.String)
io/corbel/iam/api/UserResourceTest/testDeleteSessionsMe()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/iam/api/UserResourceTest/testDeleteSessionsMe()#io/corbel/iam/service/UserService/findById(java.lang.String)
io/corbel/iam/api/UserResourceTest/testDeleteSessionsMe()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/iam/api/UserResourceTest/testDeleteSessionsMe()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/api/UserResourceTest/testDeleteSessionsMe()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/iam/api/UserResourceTest/testDeleteSessionsMe()#io/corbel/iam/service/UserService/invalidateAllTokens(java.lang.String)
io/corbel/iam/api/UserResourceTest/testDeleteSessionsMe()#javax/ws/rs/client/SyncInvoker/delete(java.lang.Class)
io/corbel/iam/api/UserResourceTest/testGetUserAggregation()#io/corbel/lib/queries/parser/AggregationParser/parse(java.lang.String)
io/corbel/iam/api/UserResourceTest/testGetUserAggregation()#io/corbel/lib/queries/parser/QueryParser/parse(java.lang.String)
io/corbel/iam/api/UserResourceTest/testGetUserAggregation()#java/net/URLEncoder/encode(java.lang.String,java.lang.String)
io/corbel/iam/api/UserResourceTest/testGetUserAggregation()#javax/ws/rs/client/WebTarget/request(java.lang.String[])
io/corbel/iam/api/UserResourceTest/testGetUserAggregation()#org/mockito/Mockito/when(T)
io/corbel/iam/api/UserResourceTest/testGetUserAggregation()#io/corbel/iam/service/UserService/countUsersByDomain(java.lang.String,io.corbel.lib.queries.request.ResourceQuery)
io/corbel/iam/api/UserResourceTest/testGetUserAggregation()#io/corbel/iam/api/UserResourceTest/getTestRule()
io/corbel/iam/api/UserResourceTest/testGetUserAggregation()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/iam/api/UserResourceTest/testGetUserAggregation()#javax/ws/rs/client/WebTarget/queryParam(java.lang.String,java.lang.Object[])
io/corbel/iam/api/UserResourceTest/testGetUserAggregation()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/iam/api/UserResourceTest/testGetUserAggregation()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/iam/api/UserResourceTest/testGetUserAggregation()#io/corbel/lib/queries/request/Count/Count(java.lang.String)
io/corbel/iam/api/UserResourceTest/testGetUserAggregation()#io/corbel/iam/service/UserService/findUserDomain(java.lang.String)
io/corbel/iam/api/UserResourceTest/testGetUserAggregation()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/iam/api/UserResourceTest/testGetUserAggregation()#org/mockito/Matchers/eq(T)
io/corbel/iam/api/UserResourceTest/testGetUserAggregation()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/iam/api/UserResourceTest/testGetUserAggregation()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/iam/api/UserResourceTest/testGetUserAggregation()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/api/UserResourceTest/testGetUserAggregation()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/iam/api/UserResourceTest/testGetUserAggregation()#javax/ws/rs/client/SyncInvoker/get(java.lang.Class)
io/corbel/iam/api/UserResourceTest/testGetUserAggregation()#io/corbel/lib/queries/request/ResourceQuery/ResourceQuery()
io/corbel/iam/api/UserResourceTest/testGetUserAggregation()#javax/ws/rs/core/Response/getStatus()
io/corbel/iam/api/UserResourceTest/testGetUserAggregation()#javax/ws/rs/core/Response/readEntity(java.lang.Class)
io/corbel/iam/api/UserResourceTest/testGetUserAggregation()#com/google/gson/JsonElement/toString()
io/corbel/iam/api/UserResourceTest/testGetUserAggregation()#io/corbel/lib/queries/request/AggregationResultsFactory/countResult(long)
io/corbel/iam/api/UserResourceTest/testAddUser()#com/google/common/collect/ImmutableSet/of(E)
io/corbel/iam/api/UserResourceTest/testAddUser()#io/corbel/iam/service/UserService/create(java.lang.String,io.corbel.iam.model.User)
io/corbel/iam/api/UserResourceTest/testAddUser()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/api/UserResourceTest/testAddUser()#org/mockito/ArgumentCaptor/getValue()
io/corbel/iam/api/UserResourceTest/testAddUser()#org/mockito/Mockito/when(T)
io/corbel/iam/api/UserResourceTest/testAddUser()#io/corbel/iam/api/UserResourceTestBase/getTestUser()
io/corbel/iam/api/UserResourceTest/testAddUser()#javax/ws/rs/core/Response/getHeaderString(java.lang.String)
io/corbel/iam/api/UserResourceTest/testAddUser()#org/mockito/Matchers/eq(T)
io/corbel/iam/api/UserResourceTest/testAddUser()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/iam/api/UserResourceTest/testAddUser()#io/corbel/iam/model/User/setScopes(java.util.Set)
io/corbel/iam/api/UserResourceTest/testAddUser()#org/mockito/Matchers/any(java.lang.Class)
io/corbel/iam/api/UserResourceTest/testAddUser()#org/mockito/ArgumentCaptor/forClass(java.lang.Class)
io/corbel/iam/api/UserResourceTest/testAddUser()#org/mockito/Mockito/verify(T)
io/corbel/iam/api/UserResourceTest/testAddUser()#io/corbel/iam/model/User/getScopes()
io/corbel/iam/api/UserResourceTest/testAddUser()#io/corbel/iam/model/Domain/getDefaultScopes()
io/corbel/iam/api/UserResourceTest/testAddUser()#io/corbel/iam/api/UserResourceTestBase/addUserClient()
io/corbel/iam/api/UserResourceTest/testAddUser()#io/corbel/iam/model/TraceableEntity/setCreatedDate(java.util.Date)
io/corbel/iam/api/UserResourceTest/testAddUser()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/iam/api/UserResourceTest/testAddUser()#java/util/Date/Date()
io/corbel/iam/api/UserResourceTest/testAddUser()#org/fest/assertions/api/Assertions/assertThat(java.lang.Iterable)
io/corbel/iam/api/UserResourceTest/testAddUser()#javax/ws/rs/core/Response/getStatus()
io/corbel/iam/api/UserResourceTest/testAddUser()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/iam/api/UserResourceTest/testAddUser()#org/mockito/ArgumentCaptor/capture()
io/corbel/iam/api/UserResourceTest/testAddUser()#org/fest/assertions/api/AbstractIterableAssert/doesNotContain(T[])
io/corbel/iam/api/UserResourceTest/testAddUser()#javax/ws/rs/client/Entity/json(T)
io/corbel/iam/api/UserResourceTest/testAddUser()#org/fest/assertions/api/StringAssert/contains(java.lang.String)
io/corbel/iam/api/UserResourceTest/testAddUser()#javax/ws/rs/client/SyncInvoker/post(javax.ws.rs.client.Entity,java.lang.Class)
io/corbel/iam/api/UserResourceTest/testAddUser()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/iam/api/UserResourceTest/deleteGroupToUser()#javax/ws/rs/client/WebTarget/request(java.lang.String[])
io/corbel/iam/api/UserResourceTest/deleteGroupToUser()#org/mockito/Mockito/when(T)
io/corbel/iam/api/UserResourceTest/deleteGroupToUser()#org/mockito/Mockito/verify(T)
io/corbel/iam/api/UserResourceTest/deleteGroupToUser()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/iam/api/UserResourceTest/deleteGroupToUser()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/iam/api/UserResourceTest/deleteGroupToUser()#java/util/Set/add(E)
io/corbel/iam/api/UserResourceTest/deleteGroupToUser()#javax/ws/rs/core/Response/getStatus()
io/corbel/iam/api/UserResourceTest/deleteGroupToUser()#io/corbel/iam/service/UserService/update(io.corbel.iam.model.User)
io/corbel/iam/api/UserResourceTest/deleteGroupToUser()#io/corbel/iam/model/User/setGroups(java.util.Set)
io/corbel/iam/api/UserResourceTest/deleteGroupToUser()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/iam/api/UserResourceTest/deleteGroupToUser()#javax/ws/rs/client/SyncInvoker/delete(java.lang.Class)
io/corbel/iam/api/UserResourceTest/deleteGroupToUser()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/iam/api/UserResourceTest/deleteGroupToUser()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/api/UserResourceTest/deleteGroupToUser()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/iam/api/UserResourceTest/deleteGroupToUser()#io/corbel/iam/model/User/addGroups(java.util.Set)
io/corbel/iam/api/UserResourceTest/deleteGroupToUser()#io/corbel/iam/api/UserResourceTestBase/createTestUser()
io/corbel/iam/api/UserResourceTest/deleteGroupToUser()#io/corbel/iam/service/UserService/findById(java.lang.String)
io/corbel/iam/api/UserResourceTest/deleteGroupToUser()#java/util/HashSet/HashSet()
io/corbel/iam/api/UserResourceTest/testGetUserInvalidAggregation()#io/corbel/lib/queries/parser/AggregationParser/parse(java.lang.String)
io/corbel/iam/api/UserResourceTest/testGetUserInvalidAggregation()#io/corbel/lib/queries/parser/QueryParser/parse(java.lang.String)
io/corbel/iam/api/UserResourceTest/testGetUserInvalidAggregation()#java/net/URLEncoder/encode(java.lang.String,java.lang.String)
io/corbel/iam/api/UserResourceTest/testGetUserInvalidAggregation()#javax/ws/rs/client/WebTarget/request(java.lang.String[])
io/corbel/iam/api/UserResourceTest/testGetUserInvalidAggregation()#org/mockito/Mockito/when(T)
io/corbel/iam/api/UserResourceTest/testGetUserInvalidAggregation()#io/corbel/iam/api/UserResourceTest/testGetUserInvalidAggregation()/OtherAggregation/OtherAggregation()
io/corbel/iam/api/UserResourceTest/testGetUserInvalidAggregation()#io/corbel/iam/api/UserResourceTest/getTestRule()
io/corbel/iam/api/UserResourceTest/testGetUserInvalidAggregation()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/iam/api/UserResourceTest/testGetUserInvalidAggregation()#javax/ws/rs/client/WebTarget/queryParam(java.lang.String,java.lang.Object[])
io/corbel/iam/api/UserResourceTest/testGetUserInvalidAggregation()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/iam/api/UserResourceTest/testGetUserInvalidAggregation()#io/corbel/iam/service/UserService/findUserDomain(java.lang.String)
io/corbel/iam/api/UserResourceTest/testGetUserInvalidAggregation()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/iam/api/UserResourceTest/testGetUserInvalidAggregation()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/iam/api/UserResourceTest/testGetUserInvalidAggregation()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/api/UserResourceTest/testGetUserInvalidAggregation()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/iam/api/UserResourceTest/testGetUserInvalidAggregation()#javax/ws/rs/client/SyncInvoker/get(java.lang.Class)
io/corbel/iam/api/UserResourceTest/testGetUserInvalidAggregation()#io/corbel/lib/queries/request/ResourceQuery/ResourceQuery()
io/corbel/iam/api/UserResourceTest/testGetUserInvalidAggregation()#javax/ws/rs/core/Response/getStatus()
io/corbel/iam/api/UserResourceTest/setUp()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/api/UserResourceTest/setUp()#com/google/common/collect/ImmutableSet/of(E,E)
io/corbel/iam/api/UserResourceTest/setUp()#org/mockito/Mockito/when(T)
io/corbel/iam/api/UserResourceTest/setUp()#io/corbel/iam/model/Domain/getDefaultScopes()
io/corbel/iam/api/UserResourceTest/setUp()#java/util/Optional/of(T)
io/corbel/iam/api/UserResourceTest/setUp()#io/corbel/iam/service/CaptchaService/verifyRequestCaptcha(java.lang.String,java.lang.String,java.lang.String)
io/corbel/iam/api/UserResourceTest/setUp()#org/mockito/Mockito/reset(T[])
io/corbel/iam/api/UserResourceTest/setUp()#io/corbel/iam/service/DomainService/getDomain(java.lang.String)
io/corbel/iam/api/UserResourceTest/testGetAvatar()#javax/ws/rs/core/Configurable/property(java.lang.String,java.lang.Object)
io/corbel/iam/api/UserResourceTest/testGetAvatar()#javax/ws/rs/core/Response/Status/getStatusCode()
io/corbel/iam/api/UserResourceTest/testGetAvatar()#java/util/Map/get(java.lang.Object)
io/corbel/iam/api/UserResourceTest/testGetAvatar()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/iam/api/UserResourceTest/testGetAvatar()#java/util/Optional/ofNullable(T)
io/corbel/iam/api/UserResourceTest/testGetAvatar()#java/util/Optional/map(java.util.function.Function)
io/corbel/iam/api/UserResourceTest/testGetAvatar()#io/corbel/iam/model/User/getDomain()
io/corbel/iam/api/UserResourceTest/testGetAvatar()#java/util/Map/put(K,V)
io/corbel/iam/api/UserResourceTest/testGetAvatar()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/iam/api/UserResourceTest/testGetAvatar()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/api/UserResourceTest/testGetAvatar()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/iam/api/UserResourceTest/testGetAvatar()#io/corbel/iam/model/User/getProperties()
io/corbel/iam/api/UserResourceTest/testGetAvatar()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/iam/api/UserResourceTest/testGetAvatar()#org/mockito/Mockito/when(T)
io/corbel/iam/api/UserResourceTest/testGetAvatar()#javax/ws/rs/client/WebTarget/request(javax.ws.rs.core.MediaType[])
io/corbel/iam/api/UserResourceTest/testGetAvatar()#java/util/Optional/orElse(T)
io/corbel/iam/api/UserResourceTest/testGetAvatar()#java/util/HashMap/HashMap()
io/corbel/iam/api/UserResourceTest/testGetAvatar()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/iam/api/UserResourceTest/testGetAvatar()#javax/ws/rs/client/SyncInvoker/get(java.lang.Class)
io/corbel/iam/api/UserResourceTest/testGetAvatar()#javax/ws/rs/core/Response/getStatus()
io/corbel/iam/api/UserResourceTest/testGetAvatar()#org/fest/assertions/api/Assertions/assertThat(T)
io/corbel/iam/api/UserResourceTest/testGetAvatar()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/iam/api/UserResourceTest/testGetAvatar()#io/corbel/iam/service/UserService/findById(java.lang.String)
io/corbel/iam/api/UserResourceTest/testGetAvatar()#javax/ws/rs/core/Response/getHeaders()
io/corbel/iam/api/UserResourceTest/addIdentity()#org/mockito/ArgumentCaptor/getValue()
io/corbel/iam/api/UserResourceTest/addIdentity()#io/corbel/iam/model/Identity/setOauthService(java.lang.String)
io/corbel/iam/api/UserResourceTest/addIdentity()#org/mockito/Mockito/when(T)
io/corbel/iam/api/UserResourceTest/addIdentity()#io/corbel/iam/service/IdentityService/addIdentity(io.corbel.iam.model.Identity)
io/corbel/iam/api/UserResourceTest/addIdentity()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/iam/api/UserResourceTest/addIdentity()#io/corbel/iam/model/Identity/Identity()
io/corbel/iam/api/UserResourceTest/addIdentity()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/iam/api/UserResourceTest/addIdentity()#javax/ws/rs/core/Response/getStatus()
io/corbel/iam/api/UserResourceTest/addIdentity()#javax/ws/rs/client/Entity/json(T)
io/corbel/iam/api/UserResourceTest/addIdentity()#io/corbel/iam/model/Identity/setOauthId(java.lang.String)
io/corbel/iam/api/UserResourceTest/addIdentity()#io/corbel/iam/api/UserResourceTestBase/createTestUser()
io/corbel/iam/api/UserResourceTest/addIdentity()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/iam/api/UserResourceTest/addIdentity()#io/corbel/iam/service/UserService/findById(java.lang.String)
io/corbel/iam/api/UserResourceTest/addIdentity()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/iam/api/UserResourceTest/addIdentity()#io/corbel/iam/service/DomainService/oAuthServiceAllowedInDomain(java.lang.String,io.corbel.iam.model.Domain)
io/corbel/iam/api/UserResourceTest/addIdentity()#io/corbel/iam/model/Identity/getOauthService()
io/corbel/iam/api/UserResourceTest/addIdentity()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/api/UserResourceTest/addIdentity()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/iam/api/UserResourceTest/addIdentity()#io/corbel/iam/model/Identity/getDomain()
io/corbel/iam/api/UserResourceTest/addIdentity()#io/corbel/iam/model/Identity/getOauthId()
io/corbel/iam/api/UserResourceTest/addIdentity()#io/corbel/iam/model/Identity/getUserId()
io/corbel/iam/api/UserResourceTest/addIdentity()#javax/ws/rs/client/WebTarget/request(java.lang.String[])
io/corbel/iam/api/UserResourceTest/addIdentity()#org/mockito/ArgumentCaptor/forClass(java.lang.Class)
io/corbel/iam/api/UserResourceTest/addIdentity()#io/corbel/iam/service/DomainService/scopesAllowedInDomain(java.util.Set,io.corbel.iam.model.Domain)
io/corbel/iam/api/UserResourceTest/addIdentity()#org/mockito/Mockito/verify(T)
io/corbel/iam/api/UserResourceTest/addIdentity()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/iam/api/UserResourceTest/addIdentity()#org/mockito/ArgumentCaptor/capture()
io/corbel/iam/api/UserResourceTest/addIdentity()#javax/ws/rs/client/SyncInvoker/post(javax.ws.rs.client.Entity,java.lang.Class)
io/corbel/iam/api/UserResourceTest/addIdentity()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/iam/api/UserResourceTest/testGenerateResetPasswordEmail()#javax/ws/rs/core/Response/Status/getStatusCode()
io/corbel/iam/api/UserResourceTest/testGenerateResetPasswordEmail()#org/mockito/Mockito/when(T)
io/corbel/iam/api/UserResourceTest/testGenerateResetPasswordEmail()#javax/ws/rs/client/WebTarget/request(javax.ws.rs.core.MediaType[])
io/corbel/iam/api/UserResourceTest/testGenerateResetPasswordEmail()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/iam/api/UserResourceTest/testGenerateResetPasswordEmail()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/iam/api/UserResourceTest/testGenerateResetPasswordEmail()#io/corbel/iam/service/CaptchaService/verifyRequestCaptcha(java.lang.String,java.lang.String,java.lang.String)
io/corbel/iam/api/UserResourceTest/testGenerateResetPasswordEmail()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/iam/api/UserResourceTest/testGenerateResetPasswordEmail()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/iam/api/UserResourceTest/testGenerateResetPasswordEmail()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/api/UserResourceTest/testGenerateResetPasswordEmail()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/iam/api/UserResourceTest/testGenerateResetPasswordEmail()#javax/ws/rs/client/SyncInvoker/get(java.lang.Class)
io/corbel/iam/api/UserResourceTest/testGenerateResetPasswordEmail()#javax/ws/rs/core/Response/getStatus()
io/corbel/iam/api/UserResourceTest/testGetIdentities()#io/corbel/iam/service/DomainService/oAuthServiceAllowedInDomain(java.lang.String,io.corbel.iam.model.Domain)
io/corbel/iam/api/UserResourceTest/testGetIdentities()#javax/ws/rs/client/WebTarget/request(java.lang.String[])
io/corbel/iam/api/UserResourceTest/testGetIdentities()#io/corbel/iam/api/UserResourceTest/testGetIdentities()/$anonymous1/()
io/corbel/iam/api/UserResourceTest/testGetIdentities()#io/corbel/iam/model/Identity/setDomain(java.lang.String)
io/corbel/iam/api/UserResourceTest/testGetIdentities()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/iam/api/UserResourceTest/testGetIdentities()#io/corbel/iam/model/Identity/Identity()
io/corbel/iam/api/UserResourceTest/testGetIdentities()#io/corbel/iam/api/UserResourceTestBase/createTestUser()
io/corbel/iam/api/UserResourceTest/testGetIdentities()#io/corbel/iam/service/UserService/findUserDomain(java.lang.String)
io/corbel/iam/api/UserResourceTest/testGetIdentities()#io/corbel/iam/service/IdentityService/findUserIdentities(io.corbel.iam.model.User)
io/corbel/iam/api/UserResourceTest/testGetIdentities()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/iam/api/UserResourceTest/testGetIdentities()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/iam/api/UserResourceTest/testGetIdentities()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/api/UserResourceTest/testGetIdentities()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/iam/api/UserResourceTest/testGetIdentities()#java/util/ArrayList/ArrayList()
io/corbel/iam/api/UserResourceTest/testGetIdentities()#org/mockito/Mockito/when(T)
io/corbel/iam/api/UserResourceTest/testGetIdentities()#io/corbel/iam/model/Entity/setId(java.lang.String)
io/corbel/iam/api/UserResourceTest/testGetIdentities()#javax/ws/rs/core/Response/readEntity(javax.ws.rs.core.GenericType)
io/corbel/iam/api/UserResourceTest/testGetIdentities()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/iam/api/UserResourceTest/testGetIdentities()#javax/ws/rs/client/SyncInvoker/get(java.lang.Class)
io/corbel/iam/api/UserResourceTest/testGetIdentities()#javax/ws/rs/core/Response/getStatus()
io/corbel/iam/api/UserResourceTest/testGetIdentities()#org/fest/assertions/api/Assertions/assertThat(java.util.List)
io/corbel/iam/api/UserResourceTest/testGetIdentities()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/iam/api/UserResourceTest/testGetIdentities()#io/corbel/iam/service/UserService/findById(java.lang.String)
io/corbel/iam/api/UserResourceTest/testGetIdentities()#java/util/ArrayList/add(E)
io/corbel/iam/api/UserResourceTest/testGetUserOutOfDomain()#io/corbel/iam/api/UserResourceTestBase/getUserClient(java.lang.String)
io/corbel/iam/api/UserResourceTest/testGetUserOutOfDomain()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/api/UserResourceTest/testGetUserOutOfDomain()#org/mockito/Mockito/when(T)
io/corbel/iam/api/UserResourceTest/testGetUserOutOfDomain()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/iam/api/UserResourceTest/testGetUserOutOfDomain()#io/corbel/iam/service/UserService/findUserDomain(java.lang.String)
io/corbel/iam/api/UserResourceTest/testGetUserOutOfDomain()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/iam/api/UserResourceTest/testGetUserOutOfDomain()#javax/ws/rs/client/SyncInvoker/get(java.lang.Class)
io/corbel/iam/api/UserResourceTest/testGetUserOutOfDomain()#javax/ws/rs/core/Response/getStatus()
io/corbel/iam/api/UserResourceTest/testGetUserProfile()#io/corbel/iam/api/UserResourceTestBase/getUserProfile(java.lang.String)
io/corbel/iam/api/UserResourceTest/testGetUserProfile()#io/corbel/iam/model/User/getEmail()
io/corbel/iam/api/UserResourceTest/testGetUserProfile()#org/mockito/Mockito/when(T)
io/corbel/iam/api/UserResourceTest/testGetUserProfile()#org/fest/assertions/api/AbstractAssert/isNotEqualTo(A)
io/corbel/iam/api/UserResourceTest/testGetUserProfile()#io/corbel/iam/model/User/User()
io/corbel/iam/api/UserResourceTest/testGetUserProfile()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/iam/api/UserResourceTest/testGetUserProfile()#io/corbel/iam/model/User/setFirstName(java.lang.String)
io/corbel/iam/api/UserResourceTest/testGetUserProfile()#io/corbel/iam/api/UserResourceTestBase/createTestUser()
io/corbel/iam/api/UserResourceTest/testGetUserProfile()#io/corbel/iam/service/UserService/findUserDomain(java.lang.String)
io/corbel/iam/api/UserResourceTest/testGetUserProfile()#org/fest/assertions/api/Assertions/assertThat(T)
io/corbel/iam/api/UserResourceTest/testGetUserProfile()#javax/ws/rs/core/Response/readEntity(java.lang.Class)
io/corbel/iam/api/UserResourceTest/testGetUserProfile()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/iam/api/UserResourceTest/testGetUserProfile()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/iam/api/UserResourceTest/testGetUserProfile()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/api/UserResourceTest/testGetUserProfile()#io/corbel/iam/model/User/getFirstName()
io/corbel/iam/api/UserResourceTest/testGetUserProfile()#org/fest/assertions/api/AbstractAssert/isNull()
io/corbel/iam/api/UserResourceTest/testGetUserProfile()#io/corbel/iam/model/Domain/getUserProfileFields()
io/corbel/iam/api/UserResourceTest/testGetUserProfile()#javax/ws/rs/client/SyncInvoker/get(java.lang.Class)
io/corbel/iam/api/UserResourceTest/testGetUserProfile()#io/corbel/iam/model/User/setEmail(java.lang.String)
io/corbel/iam/api/UserResourceTest/testGetUserProfile()#javax/ws/rs/core/Response/getStatus()
io/corbel/iam/api/UserResourceTest/testGetUserProfile()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/iam/api/UserResourceTest/testGetUserProfile()#io/corbel/iam/model/User/getDomain()
io/corbel/iam/api/UserResourceTest/testGetUserProfile()#io/corbel/iam/service/UserService/findById(java.lang.String)
io/corbel/iam/api/UserResourceTest/testGetUserProfile()#io/corbel/iam/service/UserService/getUserProfile(io.corbel.iam.model.User,java.util.Set)
io/corbel/iam/api/UserResourceTest/testGetProfilesWithValidQuery()#io/corbel/lib/queries/builder/ResourceQueryBuilder/add(java.lang.String,java.lang.String)
io/corbel/iam/api/UserResourceTest/testGetProfilesWithValidQuery()#io/corbel/iam/model/Domain/getUserProfileFields()
io/corbel/iam/api/UserResourceTest/testGetProfilesWithValidQuery()#io/corbel/lib/queries/parser/QueryParser/parse(java.lang.String)
io/corbel/iam/api/UserResourceTest/testGetProfilesWithValidQuery()#java/net/URLEncoder/encode(java.lang.String,java.lang.String)
io/corbel/iam/api/UserResourceTest/testGetProfilesWithValidQuery()#org/mockito/Mockito/when(T)
io/corbel/iam/api/UserResourceTest/testGetProfilesWithValidQuery()#io/corbel/iam/api/UserResourceTest/getTestRule()
io/corbel/iam/api/UserResourceTest/testGetProfilesWithValidQuery()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/iam/api/UserResourceTest/testGetProfilesWithValidQuery()#javax/ws/rs/client/WebTarget/queryParam(java.lang.String,java.lang.Object[])
io/corbel/iam/api/UserResourceTest/testGetProfilesWithValidQuery()#org/mockito/Matchers/any()
io/corbel/iam/api/UserResourceTest/testGetProfilesWithValidQuery()#io/corbel/lib/queries/request/QueryNode/getField()
io/corbel/iam/api/UserResourceTest/testGetProfilesWithValidQuery()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/iam/api/UserResourceTest/testGetProfilesWithValidQuery()#io/corbel/iam/service/UserService/findUserProfilesByDomain(io.corbel.iam.model.Domain,io.corbel.lib.queries.request.ResourceQuery,io.corbel.lib.queries.request.Pagination,io.corbel.lib.queries.request.Sort)
io/corbel/iam/api/UserResourceTest/testGetProfilesWithValidQuery()#org/mockito/Matchers/eq(T)
io/corbel/iam/api/UserResourceTest/testGetProfilesWithValidQuery()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/iam/api/UserResourceTest/testGetProfilesWithValidQuery()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/iam/api/UserResourceTest/testGetProfilesWithValidQuery()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/api/UserResourceTest/testGetProfilesWithValidQuery()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/iam/api/UserResourceTest/testGetProfilesWithValidQuery()#io/corbel/lib/queries/builder/ResourceQueryBuilder/build()
io/corbel/iam/api/UserResourceTest/testGetProfilesWithValidQuery()#org/mockito/ArgumentCaptor/getValue()
io/corbel/iam/api/UserResourceTest/testGetProfilesWithValidQuery()#io/corbel/lib/queries/builder/ResourceQueryBuilder/ResourceQueryBuilder()
io/corbel/iam/api/UserResourceTest/testGetProfilesWithValidQuery()#javax/ws/rs/client/WebTarget/request(java.lang.String[])
io/corbel/iam/api/UserResourceTest/testGetProfilesWithValidQuery()#org/mockito/ArgumentCaptor/forClass(java.lang.Class)
io/corbel/iam/api/UserResourceTest/testGetProfilesWithValidQuery()#org/mockito/Mockito/verify(T)
io/corbel/iam/api/UserResourceTest/testGetProfilesWithValidQuery()#java/util/Iterator/next()
io/corbel/iam/api/UserResourceTest/testGetProfilesWithValidQuery()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/iam/api/UserResourceTest/testGetProfilesWithValidQuery()#javax/ws/rs/client/SyncInvoker/get(java.lang.Class)
io/corbel/iam/api/UserResourceTest/testGetProfilesWithValidQuery()#com/google/common/collect/Sets/newHashSet(E[])
io/corbel/iam/api/UserResourceTest/testGetProfilesWithValidQuery()#javax/ws/rs/core/Response/getStatus()
io/corbel/iam/api/UserResourceTest/testGetProfilesWithValidQuery()#io/corbel/lib/queries/request/ResourceQuery/iterator()
io/corbel/iam/api/UserResourceTest/testGetProfilesWithValidQuery()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/iam/api/UserResourceTest/testGetProfilesWithValidQuery()#org/mockito/ArgumentCaptor/capture()
io/corbel/iam/api/UserResourceTest/testUpdateScopes()#io/corbel/iam/api/UserResourceTestBase/getUserClient(java.lang.String)
io/corbel/iam/api/UserResourceTest/testUpdateScopes()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/api/UserResourceTest/testUpdateScopes()#org/mockito/ArgumentCaptor/getValue()
io/corbel/iam/api/UserResourceTest/testUpdateScopes()#org/mockito/Mockito/when(T)
io/corbel/iam/api/UserResourceTest/testUpdateScopes()#io/corbel/iam/api/UserResourceTestBase/getTestUser()
io/corbel/iam/api/UserResourceTest/testUpdateScopes()#io/corbel/iam/model/User/getScopes()
io/corbel/iam/api/UserResourceTest/testUpdateScopes()#io/corbel/iam/model/User/User()
io/corbel/iam/api/UserResourceTest/testUpdateScopes()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/iam/api/UserResourceTest/testUpdateScopes()#java/util/Set/add(E)
io/corbel/iam/api/UserResourceTest/testUpdateScopes()#javax/ws/rs/client/Entity/json(T)
io/corbel/iam/api/UserResourceTest/testUpdateScopes()#io/corbel/iam/service/UserService/findById(java.lang.String)
io/corbel/iam/api/UserResourceTest/testUpdateScopes()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/iam/api/UserResourceTest/testUpdateScopes()#io/corbel/iam/model/User/setScopes(java.util.Set)
io/corbel/iam/api/UserResourceTest/testUpdateScopes()#org/mockito/ArgumentCaptor/forClass(java.lang.Class)
io/corbel/iam/api/UserResourceTest/testUpdateScopes()#io/corbel/iam/service/DomainService/scopesAllowedInDomain(java.util.Set,io.corbel.iam.model.Domain)
io/corbel/iam/api/UserResourceTest/testUpdateScopes()#org/mockito/Mockito/verify(T)
io/corbel/iam/api/UserResourceTest/testUpdateScopes()#org/fest/assertions/api/Assertions/assertThat(java.lang.Iterable)
io/corbel/iam/api/UserResourceTest/testUpdateScopes()#javax/ws/rs/client/SyncInvoker/put(javax.ws.rs.client.Entity,java.lang.Class)
io/corbel/iam/api/UserResourceTest/testUpdateScopes()#javax/ws/rs/core/Response/getStatus()
io/corbel/iam/api/UserResourceTest/testUpdateScopes()#io/corbel/iam/service/UserService/update(io.corbel.iam.model.User)
io/corbel/iam/api/UserResourceTest/testUpdateScopes()#org/mockito/ArgumentCaptor/capture()
io/corbel/iam/api/UserResourceTest/testUpdateScopes()#java/util/HashSet/HashSet(java.util.Collection)
io/corbel/iam/api/UserResourceTest/testUpdateScopes()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/iam/api/UserResourceTest/testGetMeSession()#javax/ws/rs/core/Response/Status/getStatusCode()
io/corbel/iam/api/UserResourceTest/testGetMeSession()#io/corbel/iam/model/UserToken/setDeviceId(java.lang.String)
io/corbel/iam/api/UserResourceTest/testGetMeSession()#org/mockito/Mockito/when(T)
io/corbel/iam/api/UserResourceTest/testGetMeSession()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/iam/api/UserResourceTest/testGetMeSession()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/iam/api/UserResourceTest/testGetMeSession()#io/corbel/iam/model/UserToken/setUserId(java.lang.String)
io/corbel/iam/api/UserResourceTest/testGetMeSession()#java/util/HashSet/HashSet()
io/corbel/iam/api/UserResourceTest/testGetMeSession()#javax/ws/rs/core/Response/readEntity(java.lang.Class)
io/corbel/iam/api/UserResourceTest/testGetMeSession()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/iam/api/UserResourceTest/testGetMeSession()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/api/UserResourceTest/testGetMeSession()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/iam/api/UserResourceTest/testGetMeSession()#io/corbel/iam/model/UserToken/setScopes(java.util.Set)
io/corbel/iam/api/UserResourceTest/testGetMeSession()#javax/ws/rs/client/WebTarget/request(javax.ws.rs.core.MediaType[])
io/corbel/iam/api/UserResourceTest/testGetMeSession()#io/corbel/iam/model/UserToken/getScopes()
io/corbel/iam/api/UserResourceTest/testGetMeSession()#io/corbel/iam/model/UserToken/UserToken()
io/corbel/iam/api/UserResourceTest/testGetMeSession()#io/corbel/iam/model/UserToken/setToken(java.lang.String)
io/corbel/iam/api/UserResourceTest/testGetMeSession()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/iam/api/UserResourceTest/testGetMeSession()#io/corbel/iam/service/UserService/getSession(java.lang.String)
io/corbel/iam/api/UserResourceTest/testGetMeSession()#java/util/Set/add(E)
io/corbel/iam/api/UserResourceTest/testGetMeSession()#javax/ws/rs/client/SyncInvoker/get(java.lang.Class)
io/corbel/iam/api/UserResourceTest/testGetMeSession()#java/util/Date/Date()
io/corbel/iam/api/UserResourceTest/testGetMeSession()#org/fest/assertions/api/Assertions/assertThat(java.lang.Iterable)
io/corbel/iam/api/UserResourceTest/testGetMeSession()#javax/ws/rs/core/Response/getStatus()
io/corbel/iam/api/UserResourceTest/testGetMeSession()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/iam/api/UserResourceTest/testGetMeSession()#io/corbel/iam/model/UserToken/setExpireAt(java.util.Date)
io/corbel/iam/api/UserResourceTest/testDeleteUserOutOfDomain()#io/corbel/iam/api/UserResourceTestBase/getUserClient(java.lang.String)
io/corbel/iam/api/UserResourceTest/testDeleteUserOutOfDomain()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/api/UserResourceTest/testDeleteUserOutOfDomain()#org/mockito/Mockito/verify(T,org.mockito.verification.VerificationMode)
io/corbel/iam/api/UserResourceTest/testDeleteUserOutOfDomain()#org/mockito/Mockito/when(T)
io/corbel/iam/api/UserResourceTest/testDeleteUserOutOfDomain()#io/corbel/iam/model/User/User()
io/corbel/iam/api/UserResourceTest/testDeleteUserOutOfDomain()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/iam/api/UserResourceTest/testDeleteUserOutOfDomain()#javax/ws/rs/core/Response/getStatus()
io/corbel/iam/api/UserResourceTest/testDeleteUserOutOfDomain()#org/mockito/Mockito/never()
io/corbel/iam/api/UserResourceTest/testDeleteUserOutOfDomain()#io/corbel/iam/service/UserService/delete(io.corbel.iam.model.User)
io/corbel/iam/api/UserResourceTest/testDeleteUserOutOfDomain()#org/mockito/Matchers/any()
io/corbel/iam/api/UserResourceTest/testDeleteUserOutOfDomain()#javax/ws/rs/client/SyncInvoker/delete(java.lang.Class)
io/corbel/iam/api/UserResourceTest/testDeleteUserOutOfDomain()#io/corbel/iam/service/UserService/findById(java.lang.String)
io/corbel/iam/api/UserResourceTest/testDeleteUserOutOfDomain()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/iam/api/UserResourceTest/testDeleteSessionsMeWithoutUser()#io/corbel/lib/ws/auth/AuthorizationInfo/getToken()
io/corbel/iam/api/UserResourceTest/testDeleteSessionsMeWithoutUser()#javax/ws/rs/client/WebTarget/request(java.lang.String[])
io/corbel/iam/api/UserResourceTest/testDeleteSessionsMeWithoutUser()#org/mockito/Mockito/when(T)
io/corbel/iam/api/UserResourceTest/testDeleteSessionsMeWithoutUser()#io/corbel/iam/api/UserResourceTestBase/getTestUser()
io/corbel/iam/api/UserResourceTest/testDeleteSessionsMeWithoutUser()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/iam/api/UserResourceTest/testDeleteSessionsMeWithoutUser()#io/corbel/lib/ws/auth/AuthorizationInfo/getUserId()
io/corbel/iam/api/UserResourceTest/testDeleteSessionsMeWithoutUser()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/iam/api/UserResourceTest/testDeleteSessionsMeWithoutUser()#javax/ws/rs/core/Response/getStatus()
io/corbel/iam/api/UserResourceTest/testDeleteSessionsMeWithoutUser()#io/corbel/iam/service/UserService/findUserDomain(java.lang.String)
io/corbel/iam/api/UserResourceTest/testDeleteSessionsMeWithoutUser()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/iam/api/UserResourceTest/testDeleteSessionsMeWithoutUser()#javax/ws/rs/client/SyncInvoker/delete(java.lang.Class)
io/corbel/iam/api/UserResourceTest/testDeleteSessionsMeWithoutUser()#io/corbel/iam/service/UserService/findById(java.lang.String)
io/corbel/iam/api/UserResourceTest/testDeleteSessionsMeWithoutUser()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/iam/api/UserResourceTest/testDeleteSessionsMeWithoutUser()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/api/UserResourceTest/testDeleteSessionsMeWithoutUser()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/iam/api/UserResourceTest/testUpdateEmail()#io/corbel/iam/api/UserResourceTestBase/getUserClient(java.lang.String)
io/corbel/iam/api/UserResourceTest/testUpdateEmail()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/api/UserResourceTest/testUpdateEmail()#io/corbel/iam/model/User/getEmail()
io/corbel/iam/api/UserResourceTest/testUpdateEmail()#org/mockito/ArgumentCaptor/getValue()
io/corbel/iam/api/UserResourceTest/testUpdateEmail()#org/mockito/Mockito/when(T)
io/corbel/iam/api/UserResourceTest/testUpdateEmail()#io/corbel/iam/api/UserResourceTestBase/getTestUser()
io/corbel/iam/api/UserResourceTest/testUpdateEmail()#io/corbel/iam/model/User/User()
io/corbel/iam/api/UserResourceTest/testUpdateEmail()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/iam/api/UserResourceTest/testUpdateEmail()#javax/ws/rs/client/Entity/json(T)
io/corbel/iam/api/UserResourceTest/testUpdateEmail()#io/corbel/iam/service/UserService/findById(java.lang.String)
io/corbel/iam/api/UserResourceTest/testUpdateEmail()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/iam/api/UserResourceTest/testUpdateEmail()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/iam/api/UserResourceTest/testUpdateEmail()#org/mockito/ArgumentCaptor/forClass(java.lang.Class)
io/corbel/iam/api/UserResourceTest/testUpdateEmail()#io/corbel/iam/service/DomainService/scopesAllowedInDomain(java.util.Set,io.corbel.iam.model.Domain)
io/corbel/iam/api/UserResourceTest/testUpdateEmail()#org/mockito/Mockito/verify(T)
io/corbel/iam/api/UserResourceTest/testUpdateEmail()#javax/ws/rs/core/Response/getStatus()
io/corbel/iam/api/UserResourceTest/testUpdateEmail()#io/corbel/iam/model/User/setEmail(java.lang.String)
io/corbel/iam/api/UserResourceTest/testUpdateEmail()#javax/ws/rs/client/SyncInvoker/put(javax.ws.rs.client.Entity,java.lang.Class)
io/corbel/iam/api/UserResourceTest/testUpdateEmail()#io/corbel/iam/service/UserService/update(io.corbel.iam.model.User)
io/corbel/iam/api/UserResourceTest/testUpdateEmail()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/iam/api/UserResourceTest/testUpdateEmail()#org/mockito/ArgumentCaptor/capture()
io/corbel/iam/api/UserResourceTest/testUpdateNotInDomain()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/api/UserResourceTest/testUpdateNotInDomain()#io/corbel/lib/ws/auth/AuthorizationInfo/getDomainId()
io/corbel/iam/api/UserResourceTest/testUpdateNotInDomain()#org/mockito/Mockito/when(T)
io/corbel/iam/api/UserResourceTest/testUpdateNotInDomain()#io/corbel/iam/service/DomainService/scopesAllowedInDomain(java.util.Set,io.corbel.iam.model.Domain)
io/corbel/iam/api/UserResourceTest/testUpdateNotInDomain()#io/corbel/iam/model/User/User()
io/corbel/iam/api/UserResourceTest/testUpdateNotInDomain()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/iam/api/UserResourceTest/testUpdateNotInDomain()#io/corbel/iam/api/UserResourceTestBase/getUserClientInOtherEmail(java.lang.String)
io/corbel/iam/api/UserResourceTest/testUpdateNotInDomain()#javax/ws/rs/client/Entity/json(T)
io/corbel/iam/api/UserResourceTest/testUpdateNotInDomain()#io/corbel/iam/api/UserResourceTestBase/createTestUser()
io/corbel/iam/api/UserResourceTest/testUpdateNotInDomain()#io/corbel/iam/service/UserService/findById(java.lang.String)
io/corbel/iam/api/UserResourceTest/testUpdateNotInDomain()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/iam/api/UserResourceTest/testUpdateNotInDomain()#javax/ws/rs/core/Response/getStatus()
io/corbel/iam/api/UserResourceTest/testUpdateNotInDomain()#io/corbel/iam/model/User/setEmail(java.lang.String)
io/corbel/iam/api/UserResourceTest/testUpdateNotInDomain()#javax/ws/rs/client/SyncInvoker/put(javax.ws.rs.client.Entity,java.lang.Class)
io/corbel/iam/api/UserResourceTest/testSignOutMeWithoutUser()#io/corbel/lib/ws/auth/AuthorizationInfo/getToken()
io/corbel/iam/api/UserResourceTest/testSignOutMeWithoutUser()#javax/ws/rs/client/WebTarget/request(java.lang.String[])
io/corbel/iam/api/UserResourceTest/testSignOutMeWithoutUser()#org/mockito/Mockito/when(T)
io/corbel/iam/api/UserResourceTest/testSignOutMeWithoutUser()#io/corbel/iam/api/UserResourceTestBase/getTestUser()
io/corbel/iam/api/UserResourceTest/testSignOutMeWithoutUser()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/iam/api/UserResourceTest/testSignOutMeWithoutUser()#io/corbel/lib/ws/auth/AuthorizationInfo/getUserId()
io/corbel/iam/api/UserResourceTest/testSignOutMeWithoutUser()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/iam/api/UserResourceTest/testSignOutMeWithoutUser()#javax/ws/rs/client/Entity/json(T)
io/corbel/iam/api/UserResourceTest/testSignOutMeWithoutUser()#io/corbel/iam/service/UserService/findUserDomain(java.lang.String)
io/corbel/iam/api/UserResourceTest/testSignOutMeWithoutUser()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/iam/api/UserResourceTest/testSignOutMeWithoutUser()#io/corbel/iam/service/UserService/findById(java.lang.String)
io/corbel/iam/api/UserResourceTest/testSignOutMeWithoutUser()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/iam/api/UserResourceTest/testSignOutMeWithoutUser()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/api/UserResourceTest/testSignOutMeWithoutUser()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/iam/api/UserResourceTest/testSignOutMeWithoutUser()#javax/ws/rs/client/SyncInvoker/put(javax.ws.rs.client.Entity,java.lang.Class)
io/corbel/iam/api/UserResourceTest/testSignOutMeWithoutUser()#javax/ws/rs/core/Response/getStatus()
io/corbel/iam/api/UserResourceTest/addIdentityMeWithoutOAuthServiceAllowedInDomain()#io/corbel/iam/service/DomainService/oAuthServiceAllowedInDomain(java.lang.String,io.corbel.iam.model.Domain)
io/corbel/iam/api/UserResourceTest/addIdentityMeWithoutOAuthServiceAllowedInDomain()#io/corbel/iam/model/Identity/setOauthService(java.lang.String)
io/corbel/iam/api/UserResourceTest/addIdentityMeWithoutOAuthServiceAllowedInDomain()#javax/ws/rs/client/WebTarget/request(java.lang.String[])
io/corbel/iam/api/UserResourceTest/addIdentityMeWithoutOAuthServiceAllowedInDomain()#org/mockito/Mockito/when(T)
io/corbel/iam/api/UserResourceTest/addIdentityMeWithoutOAuthServiceAllowedInDomain()#io/corbel/iam/service/DomainService/scopesAllowedInDomain(java.util.Set,io.corbel.iam.model.Domain)
io/corbel/iam/api/UserResourceTest/addIdentityMeWithoutOAuthServiceAllowedInDomain()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/iam/api/UserResourceTest/addIdentityMeWithoutOAuthServiceAllowedInDomain()#io/corbel/iam/model/Identity/Identity()
io/corbel/iam/api/UserResourceTest/addIdentityMeWithoutOAuthServiceAllowedInDomain()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/iam/api/UserResourceTest/addIdentityMeWithoutOAuthServiceAllowedInDomain()#javax/ws/rs/core/Response/getStatus()
io/corbel/iam/api/UserResourceTest/addIdentityMeWithoutOAuthServiceAllowedInDomain()#javax/ws/rs/client/Entity/json(T)
io/corbel/iam/api/UserResourceTest/addIdentityMeWithoutOAuthServiceAllowedInDomain()#io/corbel/iam/model/Identity/setOauthId(java.lang.String)
io/corbel/iam/api/UserResourceTest/addIdentityMeWithoutOAuthServiceAllowedInDomain()#io/corbel/iam/api/UserResourceTestBase/createTestUser()
io/corbel/iam/api/UserResourceTest/addIdentityMeWithoutOAuthServiceAllowedInDomain()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/iam/api/UserResourceTest/addIdentityMeWithoutOAuthServiceAllowedInDomain()#io/corbel/iam/service/UserService/findById(java.lang.String)
io/corbel/iam/api/UserResourceTest/addIdentityMeWithoutOAuthServiceAllowedInDomain()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/api/UserResourceTest/addIdentityMeWithoutOAuthServiceAllowedInDomain()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/iam/api/UserResourceTest/addIdentityMeWithoutOAuthServiceAllowedInDomain()#javax/ws/rs/client/SyncInvoker/post(javax.ws.rs.client.Entity,java.lang.Class)
io/corbel/iam/api/UserResourceTest/addIdentityMeWithoutOAuthServiceAllowedInDomain()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/iam/api/UserResourceTest/testDisconnectNotFound()#javax/ws/rs/client/WebTarget/request(java.lang.String[])
io/corbel/iam/api/UserResourceTest/testDisconnectNotFound()#org/mockito/Mockito/when(T)
io/corbel/iam/api/UserResourceTest/testDisconnectNotFound()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/iam/api/UserResourceTest/testDisconnectNotFound()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/iam/api/UserResourceTest/testDisconnectNotFound()#javax/ws/rs/client/Entity/json(T)
io/corbel/iam/api/UserResourceTest/testDisconnectNotFound()#io/corbel/iam/service/UserService/findUserDomain(java.lang.String)
io/corbel/iam/api/UserResourceTest/testDisconnectNotFound()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/iam/api/UserResourceTest/testDisconnectNotFound()#io/corbel/iam/service/UserService/findById(java.lang.String)
io/corbel/iam/api/UserResourceTest/testDisconnectNotFound()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/iam/api/UserResourceTest/testDisconnectNotFound()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/api/UserResourceTest/testDisconnectNotFound()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/iam/api/UserResourceTest/testDisconnectNotFound()#javax/ws/rs/client/SyncInvoker/put(javax.ws.rs.client.Entity,java.lang.Class)
io/corbel/iam/api/UserResourceTest/testDisconnectNotFound()#javax/ws/rs/core/Response/getStatus()
io/corbel/iam/api/UserResourceTest/testCreateUserMissingUsername()#io/corbel/iam/model/User/setUsername(java.lang.String)
io/corbel/iam/api/UserResourceTest/testCreateUserMissingUsername()#javax/ws/rs/core/Response/getStatus()
io/corbel/iam/api/UserResourceTest/testCreateUserMissingUsername()#javax/ws/rs/client/Entity/json(T)
io/corbel/iam/api/UserResourceTest/testCreateUserMissingUsername()#io/corbel/iam/api/UserResourceTestBase/createTestUser()
io/corbel/iam/api/UserResourceTest/testCreateUserMissingUsername()#io/corbel/iam/api/UserResourceTestBase/addUserClient()
io/corbel/iam/api/UserResourceTest/testCreateUserMissingUsername()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/iam/api/UserResourceTest/testCreateUserMissingUsername()#javax/ws/rs/client/SyncInvoker/post(javax.ws.rs.client.Entity,java.lang.Class)
io/corbel/iam/api/UserResourceTest/testCreateUserMissingUsername()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/iam/api/UserResourceTest/testAddProperty()#io/corbel/iam/api/UserResourceTestBase/getUserClient(java.lang.String)
io/corbel/iam/api/UserResourceTest/testAddProperty()#org/mockito/ArgumentCaptor/getValue()
io/corbel/iam/api/UserResourceTest/testAddProperty()#org/mockito/Mockito/when(T)
io/corbel/iam/api/UserResourceTest/testAddProperty()#io/corbel/iam/model/User/User()
io/corbel/iam/api/UserResourceTest/testAddProperty()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/iam/api/UserResourceTest/testAddProperty()#javax/ws/rs/client/Entity/json(T)
io/corbel/iam/api/UserResourceTest/testAddProperty()#org/fest/assertions/api/Assertions/assertThat(T)
io/corbel/iam/api/UserResourceTest/testAddProperty()#io/corbel/iam/service/UserService/findById(java.lang.String)
io/corbel/iam/api/UserResourceTest/testAddProperty()#io/corbel/iam/model/User/addProperty(java.lang.String,java.lang.Object)
io/corbel/iam/api/UserResourceTest/testAddProperty()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/iam/api/UserResourceTest/testAddProperty()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/iam/api/UserResourceTest/testAddProperty()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/api/UserResourceTest/testAddProperty()#io/corbel/iam/model/User/getProperties()
io/corbel/iam/api/UserResourceTest/testAddProperty()#org/mockito/ArgumentCaptor/forClass(java.lang.Class)
io/corbel/iam/api/UserResourceTest/testAddProperty()#io/corbel/iam/service/DomainService/scopesAllowedInDomain(java.util.Set,io.corbel.iam.model.Domain)
io/corbel/iam/api/UserResourceTest/testAddProperty()#org/mockito/Mockito/verify(T)
io/corbel/iam/api/UserResourceTest/testAddProperty()#java/util/Map/get(java.lang.Object)
io/corbel/iam/api/UserResourceTest/testAddProperty()#io/corbel/iam/api/UserResourceTestBase/getTestUser()
io/corbel/iam/api/UserResourceTest/testAddProperty()#javax/ws/rs/client/SyncInvoker/put(javax.ws.rs.client.Entity,java.lang.Class)
io/corbel/iam/api/UserResourceTest/testAddProperty()#javax/ws/rs/core/Response/getStatus()
io/corbel/iam/api/UserResourceTest/testAddProperty()#io/corbel/iam/service/UserService/update(io.corbel.iam.model.User)
io/corbel/iam/api/UserResourceTest/testAddProperty()#org/mockito/ArgumentCaptor/capture()
io/corbel/iam/api/UserResourceTest/testGetProfilesWithInvalidQuery()#io/corbel/lib/queries/builder/ResourceQueryBuilder/add(java.lang.String,java.lang.String)
io/corbel/iam/api/UserResourceTest/testGetProfilesWithInvalidQuery()#io/corbel/lib/queries/parser/QueryParser/parse(java.lang.String)
io/corbel/iam/api/UserResourceTest/testGetProfilesWithInvalidQuery()#java/net/URLEncoder/encode(java.lang.String,java.lang.String)
io/corbel/iam/api/UserResourceTest/testGetProfilesWithInvalidQuery()#org/mockito/Mockito/when(T)
io/corbel/iam/api/UserResourceTest/testGetProfilesWithInvalidQuery()#io/corbel/iam/model/Domain/setUserProfileFields(java.util.Set)
io/corbel/iam/api/UserResourceTest/testGetProfilesWithInvalidQuery()#io/corbel/iam/api/UserResourceTest/getTestRule()
io/corbel/iam/api/UserResourceTest/testGetProfilesWithInvalidQuery()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/iam/api/UserResourceTest/testGetProfilesWithInvalidQuery()#javax/ws/rs/client/WebTarget/queryParam(java.lang.String,java.lang.Object[])
io/corbel/iam/api/UserResourceTest/testGetProfilesWithInvalidQuery()#org/mockito/Matchers/any()
io/corbel/iam/api/UserResourceTest/testGetProfilesWithInvalidQuery()#io/corbel/lib/queries/request/QueryNode/getField()
io/corbel/iam/api/UserResourceTest/testGetProfilesWithInvalidQuery()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/iam/api/UserResourceTest/testGetProfilesWithInvalidQuery()#io/corbel/iam/service/UserService/findUserProfilesByDomain(io.corbel.iam.model.Domain,io.corbel.lib.queries.request.ResourceQuery,io.corbel.lib.queries.request.Pagination,io.corbel.lib.queries.request.Sort)
io/corbel/iam/api/UserResourceTest/testGetProfilesWithInvalidQuery()#org/mockito/Matchers/eq(T)
io/corbel/iam/api/UserResourceTest/testGetProfilesWithInvalidQuery()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/iam/api/UserResourceTest/testGetProfilesWithInvalidQuery()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/iam/api/UserResourceTest/testGetProfilesWithInvalidQuery()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/api/UserResourceTest/testGetProfilesWithInvalidQuery()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/iam/api/UserResourceTest/testGetProfilesWithInvalidQuery()#io/corbel/lib/queries/builder/ResourceQueryBuilder/build()
io/corbel/iam/api/UserResourceTest/testGetProfilesWithInvalidQuery()#org/mockito/ArgumentCaptor/getValue()
io/corbel/iam/api/UserResourceTest/testGetProfilesWithInvalidQuery()#io/corbel/lib/queries/builder/ResourceQueryBuilder/ResourceQueryBuilder()
io/corbel/iam/api/UserResourceTest/testGetProfilesWithInvalidQuery()#javax/ws/rs/client/WebTarget/request(java.lang.String[])
io/corbel/iam/api/UserResourceTest/testGetProfilesWithInvalidQuery()#org/mockito/ArgumentCaptor/forClass(java.lang.Class)
io/corbel/iam/api/UserResourceTest/testGetProfilesWithInvalidQuery()#org/mockito/Mockito/verify(T)
io/corbel/iam/api/UserResourceTest/testGetProfilesWithInvalidQuery()#java/util/Iterator/next()
io/corbel/iam/api/UserResourceTest/testGetProfilesWithInvalidQuery()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/iam/api/UserResourceTest/testGetProfilesWithInvalidQuery()#javax/ws/rs/client/SyncInvoker/get(java.lang.Class)
io/corbel/iam/api/UserResourceTest/testGetProfilesWithInvalidQuery()#com/google/common/collect/Sets/newHashSet(E[])
io/corbel/iam/api/UserResourceTest/testGetProfilesWithInvalidQuery()#javax/ws/rs/core/Response/getStatus()
io/corbel/iam/api/UserResourceTest/testGetProfilesWithInvalidQuery()#io/corbel/lib/queries/request/ResourceQuery/iterator()
io/corbel/iam/api/UserResourceTest/testGetProfilesWithInvalidQuery()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/iam/api/UserResourceTest/testGetProfilesWithInvalidQuery()#org/mockito/ArgumentCaptor/capture()
io/corbel/iam/api/UserResourceTest/addIdentityWithUserInOtherDomain()#io/corbel/iam/service/DomainService/oAuthServiceAllowedInDomain(java.lang.String,io.corbel.iam.model.Domain)
io/corbel/iam/api/UserResourceTest/addIdentityWithUserInOtherDomain()#javax/ws/rs/core/Response/Status/getStatusCode()
io/corbel/iam/api/UserResourceTest/addIdentityWithUserInOtherDomain()#io/corbel/iam/model/Identity/setOauthService(java.lang.String)
io/corbel/iam/api/UserResourceTest/addIdentityWithUserInOtherDomain()#javax/ws/rs/client/WebTarget/request(java.lang.String[])
io/corbel/iam/api/UserResourceTest/addIdentityWithUserInOtherDomain()#org/mockito/Mockito/when(T)
io/corbel/iam/api/UserResourceTest/addIdentityWithUserInOtherDomain()#io/corbel/iam/service/DomainService/scopesAllowedInDomain(java.util.Set,io.corbel.iam.model.Domain)
io/corbel/iam/api/UserResourceTest/addIdentityWithUserInOtherDomain()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/iam/api/UserResourceTest/addIdentityWithUserInOtherDomain()#io/corbel/iam/model/Identity/Identity()
io/corbel/iam/api/UserResourceTest/addIdentityWithUserInOtherDomain()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/iam/api/UserResourceTest/addIdentityWithUserInOtherDomain()#javax/ws/rs/core/Response/getStatus()
io/corbel/iam/api/UserResourceTest/addIdentityWithUserInOtherDomain()#javax/ws/rs/client/Entity/json(T)
io/corbel/iam/api/UserResourceTest/addIdentityWithUserInOtherDomain()#io/corbel/iam/model/Identity/setOauthId(java.lang.String)
io/corbel/iam/api/UserResourceTest/addIdentityWithUserInOtherDomain()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/iam/api/UserResourceTest/addIdentityWithUserInOtherDomain()#io/corbel/iam/service/UserService/findById(java.lang.String)
io/corbel/iam/api/UserResourceTest/addIdentityWithUserInOtherDomain()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/api/UserResourceTest/addIdentityWithUserInOtherDomain()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/iam/api/UserResourceTest/addIdentityWithUserInOtherDomain()#javax/ws/rs/client/SyncInvoker/post(javax.ws.rs.client.Entity,java.lang.Class)
io/corbel/iam/api/UserResourceTest/addIdentityWithUserInOtherDomain()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/iam/api/UserResourceTest/testUpdateEmailAndUsername2()#io/corbel/iam/api/UserResourceTestBase/getUserClient(java.lang.String)
io/corbel/iam/api/UserResourceTest/testUpdateEmailAndUsername2()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/api/UserResourceTest/testUpdateEmailAndUsername2()#org/mockito/Mockito/when(T)
io/corbel/iam/api/UserResourceTest/testUpdateEmailAndUsername2()#io/corbel/iam/service/DomainService/scopesAllowedInDomain(java.util.Set,io.corbel.iam.model.Domain)
io/corbel/iam/api/UserResourceTest/testUpdateEmailAndUsername2()#io/corbel/iam/model/User/User()
io/corbel/iam/api/UserResourceTest/testUpdateEmailAndUsername2()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/iam/api/UserResourceTest/testUpdateEmailAndUsername2()#javax/ws/rs/client/Entity/json(T)
io/corbel/iam/api/UserResourceTest/testUpdateEmailAndUsername2()#io/corbel/iam/service/UserService/findById(java.lang.String)
io/corbel/iam/api/UserResourceTest/testUpdateEmailAndUsername2()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/iam/api/UserResourceTest/testUpdateEmailAndUsername2()#io/corbel/iam/model/User/setUsername(java.lang.String)
io/corbel/iam/api/UserResourceTest/testUpdateEmailAndUsername2()#io/corbel/iam/api/UserResourceTestBase/getTestUser()
io/corbel/iam/api/UserResourceTest/testUpdateEmailAndUsername2()#javax/ws/rs/core/Response/getStatus()
io/corbel/iam/api/UserResourceTest/testUpdateEmailAndUsername2()#io/corbel/iam/model/User/setEmail(java.lang.String)
io/corbel/iam/api/UserResourceTest/testUpdateEmailAndUsername2()#javax/ws/rs/client/SyncInvoker/put(javax.ws.rs.client.Entity,java.lang.Class)
io/corbel/iam/api/UserResourceTest/testUpdateInvalidEmail()#io/corbel/iam/api/UserResourceTestBase/getUserClient(java.lang.String)
io/corbel/iam/api/UserResourceTest/testUpdateInvalidEmail()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/api/UserResourceTest/testUpdateInvalidEmail()#org/mockito/Mockito/when(T)
io/corbel/iam/api/UserResourceTest/testUpdateInvalidEmail()#io/corbel/iam/service/DomainService/scopesAllowedInDomain(java.util.Set,io.corbel.iam.model.Domain)
io/corbel/iam/api/UserResourceTest/testUpdateInvalidEmail()#io/corbel/iam/api/UserResourceTestBase/getTestUser()
io/corbel/iam/api/UserResourceTest/testUpdateInvalidEmail()#io/corbel/iam/model/User/User()
io/corbel/iam/api/UserResourceTest/testUpdateInvalidEmail()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/iam/api/UserResourceTest/testUpdateInvalidEmail()#javax/ws/rs/client/Entity/json(T)
io/corbel/iam/api/UserResourceTest/testUpdateInvalidEmail()#io/corbel/iam/service/UserService/findById(java.lang.String)
io/corbel/iam/api/UserResourceTest/testUpdateInvalidEmail()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/iam/api/UserResourceTest/testUpdateInvalidEmail()#javax/ws/rs/core/Response/getStatus()
io/corbel/iam/api/UserResourceTest/testUpdateInvalidEmail()#io/corbel/iam/model/User/setEmail(java.lang.String)
io/corbel/iam/api/UserResourceTest/testUpdateInvalidEmail()#javax/ws/rs/client/SyncInvoker/put(javax.ws.rs.client.Entity,java.lang.Class)
io/corbel/iam/api/UserResourceTest/testAddUserWithNullScopes()#io/corbel/iam/service/UserService/create(java.lang.String,io.corbel.iam.model.User)
io/corbel/iam/api/UserResourceTest/testAddUserWithNullScopes()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/api/UserResourceTest/testAddUserWithNullScopes()#org/mockito/ArgumentCaptor/getValue()
io/corbel/iam/api/UserResourceTest/testAddUserWithNullScopes()#org/mockito/Mockito/when(T)
io/corbel/iam/api/UserResourceTest/testAddUserWithNullScopes()#io/corbel/iam/api/UserResourceTestBase/getTestUser()
io/corbel/iam/api/UserResourceTest/testAddUserWithNullScopes()#javax/ws/rs/client/Entity/json(T)
io/corbel/iam/api/UserResourceTest/testAddUserWithNullScopes()#javax/ws/rs/core/Response/getHeaderString(java.lang.String)
io/corbel/iam/api/UserResourceTest/testAddUserWithNullScopes()#org/mockito/Matchers/eq(T)
io/corbel/iam/api/UserResourceTest/testAddUserWithNullScopes()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/iam/api/UserResourceTest/testAddUserWithNullScopes()#io/corbel/iam/model/User/setScopes(java.util.Set)
io/corbel/iam/api/UserResourceTest/testAddUserWithNullScopes()#org/mockito/Matchers/any(java.lang.Class)
io/corbel/iam/api/UserResourceTest/testAddUserWithNullScopes()#org/mockito/ArgumentCaptor/forClass(java.lang.Class)
io/corbel/iam/api/UserResourceTest/testAddUserWithNullScopes()#org/mockito/Mockito/verify(T)
io/corbel/iam/api/UserResourceTest/testAddUserWithNullScopes()#io/corbel/iam/model/User/getScopes()
io/corbel/iam/api/UserResourceTest/testAddUserWithNullScopes()#io/corbel/iam/model/Domain/getDefaultScopes()
io/corbel/iam/api/UserResourceTest/testAddUserWithNullScopes()#io/corbel/iam/api/UserResourceTestBase/addUserClient()
io/corbel/iam/api/UserResourceTest/testAddUserWithNullScopes()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/iam/api/UserResourceTest/testAddUserWithNullScopes()#org/fest/assertions/api/Assertions/assertThat(java.lang.Iterable)
io/corbel/iam/api/UserResourceTest/testAddUserWithNullScopes()#javax/ws/rs/core/Response/getStatus()
io/corbel/iam/api/UserResourceTest/testAddUserWithNullScopes()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/iam/api/UserResourceTest/testAddUserWithNullScopes()#org/mockito/ArgumentCaptor/capture()
io/corbel/iam/api/UserResourceTest/testAddUserWithNullScopes()#org/fest/assertions/api/StringAssert/contains(java.lang.String)
io/corbel/iam/api/UserResourceTest/testAddUserWithNullScopes()#javax/ws/rs/client/SyncInvoker/post(javax.ws.rs.client.Entity,java.lang.Class)
io/corbel/iam/api/UserResourceTest/testAddUserWithNullScopes()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/iam/api/UserResourceTest/testUpdateEmailAndUsername3()#io/corbel/iam/api/UserResourceTestBase/getUserClient(java.lang.String)
io/corbel/iam/api/UserResourceTest/testUpdateEmailAndUsername3()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/api/UserResourceTest/testUpdateEmailAndUsername3()#org/mockito/Mockito/when(T)
io/corbel/iam/api/UserResourceTest/testUpdateEmailAndUsername3()#io/corbel/iam/service/DomainService/scopesAllowedInDomain(java.util.Set,io.corbel.iam.model.Domain)
io/corbel/iam/api/UserResourceTest/testUpdateEmailAndUsername3()#io/corbel/iam/model/User/User()
io/corbel/iam/api/UserResourceTest/testUpdateEmailAndUsername3()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/iam/api/UserResourceTest/testUpdateEmailAndUsername3()#javax/ws/rs/client/Entity/json(T)
io/corbel/iam/api/UserResourceTest/testUpdateEmailAndUsername3()#io/corbel/iam/service/UserService/findById(java.lang.String)
io/corbel/iam/api/UserResourceTest/testUpdateEmailAndUsername3()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/iam/api/UserResourceTest/testUpdateEmailAndUsername3()#io/corbel/iam/model/User/setUsername(java.lang.String)
io/corbel/iam/api/UserResourceTest/testUpdateEmailAndUsername3()#io/corbel/iam/api/UserResourceTestBase/getTestUser()
io/corbel/iam/api/UserResourceTest/testUpdateEmailAndUsername3()#javax/ws/rs/core/Response/getStatus()
io/corbel/iam/api/UserResourceTest/testUpdateEmailAndUsername3()#io/corbel/iam/model/User/setEmail(java.lang.String)
io/corbel/iam/api/UserResourceTest/testUpdateEmailAndUsername3()#javax/ws/rs/client/SyncInvoker/put(javax.ws.rs.client.Entity,java.lang.Class)
io/corbel/iam/api/UserResourceTest/testGetUserMe()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/api/UserResourceTest/testGetUserMe()#org/mockito/Mockito/when(T)
io/corbel/iam/api/UserResourceTest/testGetUserMe()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/iam/api/UserResourceTest/testGetUserMe()#org/fest/assertions/api/ObjectAssert/isEqualsToByComparingFields(T)
io/corbel/iam/api/UserResourceTest/testGetUserMe()#io/corbel/iam/api/UserResourceTestBase/createTestUser()
io/corbel/iam/api/UserResourceTest/testGetUserMe()#io/corbel/iam/service/UserService/findUserDomain(java.lang.String)
io/corbel/iam/api/UserResourceTest/testGetUserMe()#org/fest/assertions/api/Assertions/assertThat(T)
io/corbel/iam/api/UserResourceTest/testGetUserMe()#io/corbel/iam/service/UserService/findById(java.lang.String)
io/corbel/iam/api/UserResourceTest/testGetUserMe()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/iam/api/UserResourceTest/testGetUserMe()#javax/ws/rs/client/SyncInvoker/get(java.lang.Class)
io/corbel/iam/api/UserResourceTest/testGetUserMe()#javax/ws/rs/core/Response/getStatus()
io/corbel/iam/api/UserResourceTest/testGetUserMe()#javax/ws/rs/core/Response/readEntity(java.lang.Class)
io/corbel/iam/api/UserResourceTest/testGetUserMe()#io/corbel/iam/api/UserResourceTestBase/getUserClientMe()
io/corbel/iam/api/UserResourceTest/testMeGetIdentities()#io/corbel/iam/service/DomainService/oAuthServiceAllowedInDomain(java.lang.String,io.corbel.iam.model.Domain)
io/corbel/iam/api/UserResourceTest/testMeGetIdentities()#javax/ws/rs/client/WebTarget/request(java.lang.String[])
io/corbel/iam/api/UserResourceTest/testMeGetIdentities()#io/corbel/iam/model/Identity/setDomain(java.lang.String)
io/corbel/iam/api/UserResourceTest/testMeGetIdentities()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/iam/api/UserResourceTest/testMeGetIdentities()#io/corbel/iam/model/Identity/Identity()
io/corbel/iam/api/UserResourceTest/testMeGetIdentities()#io/corbel/iam/api/UserResourceTestBase/createTestUser()
io/corbel/iam/api/UserResourceTest/testMeGetIdentities()#io/corbel/iam/service/UserService/findUserDomain(java.lang.String)
io/corbel/iam/api/UserResourceTest/testMeGetIdentities()#io/corbel/iam/service/IdentityService/findUserIdentities(io.corbel.iam.model.User)
io/corbel/iam/api/UserResourceTest/testMeGetIdentities()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/iam/api/UserResourceTest/testMeGetIdentities()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/iam/api/UserResourceTest/testMeGetIdentities()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/api/UserResourceTest/testMeGetIdentities()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/iam/api/UserResourceTest/testMeGetIdentities()#io/corbel/iam/api/UserResourceTest/testMeGetIdentities()/$anonymous1/()
io/corbel/iam/api/UserResourceTest/testMeGetIdentities()#java/util/ArrayList/ArrayList()
io/corbel/iam/api/UserResourceTest/testMeGetIdentities()#org/mockito/Mockito/when(T)
io/corbel/iam/api/UserResourceTest/testMeGetIdentities()#io/corbel/iam/model/Entity/setId(java.lang.String)
io/corbel/iam/api/UserResourceTest/testMeGetIdentities()#javax/ws/rs/core/Response/readEntity(javax.ws.rs.core.GenericType)
io/corbel/iam/api/UserResourceTest/testMeGetIdentities()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/iam/api/UserResourceTest/testMeGetIdentities()#javax/ws/rs/client/SyncInvoker/get(java.lang.Class)
io/corbel/iam/api/UserResourceTest/testMeGetIdentities()#javax/ws/rs/core/Response/getStatus()
io/corbel/iam/api/UserResourceTest/testMeGetIdentities()#org/fest/assertions/api/Assertions/assertThat(java.util.List)
io/corbel/iam/api/UserResourceTest/testMeGetIdentities()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/iam/api/UserResourceTest/testMeGetIdentities()#io/corbel/iam/service/UserService/findById(java.lang.String)
io/corbel/iam/api/UserResourceTest/testMeGetIdentities()#java/util/ArrayList/add(E)
io/corbel/iam/api/UserResourceTest/testGetUserMeOutOfDomain()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/api/UserResourceTest/testGetUserMeOutOfDomain()#org/mockito/Mockito/when(T)
io/corbel/iam/api/UserResourceTest/testGetUserMeOutOfDomain()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/iam/api/UserResourceTest/testGetUserMeOutOfDomain()#io/corbel/iam/service/UserService/findUserDomain(java.lang.String)
io/corbel/iam/api/UserResourceTest/testGetUserMeOutOfDomain()#io/corbel/iam/api/UserResourceTestBase/getUserClientMe()
io/corbel/iam/api/UserResourceTest/testGetUserMeOutOfDomain()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/iam/api/UserResourceTest/testGetUserMeOutOfDomain()#javax/ws/rs/client/SyncInvoker/get(java.lang.Class)
io/corbel/iam/api/UserResourceTest/testGetUserMeOutOfDomain()#javax/ws/rs/core/Response/getStatus()
io/corbel/iam/api/UserResourceTest/testUpdateEmptyUsername()#io/corbel/iam/api/UserResourceTestBase/getUserClient(java.lang.String)
io/corbel/iam/api/UserResourceTest/testUpdateEmptyUsername()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/api/UserResourceTest/testUpdateEmptyUsername()#org/mockito/Mockito/when(T)
io/corbel/iam/api/UserResourceTest/testUpdateEmptyUsername()#io/corbel/iam/service/DomainService/scopesAllowedInDomain(java.util.Set,io.corbel.iam.model.Domain)
io/corbel/iam/api/UserResourceTest/testUpdateEmptyUsername()#io/corbel/iam/api/UserResourceTestBase/getTestUser()
io/corbel/iam/api/UserResourceTest/testUpdateEmptyUsername()#io/corbel/iam/model/User/User()
io/corbel/iam/api/UserResourceTest/testUpdateEmptyUsername()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/iam/api/UserResourceTest/testUpdateEmptyUsername()#javax/ws/rs/client/Entity/json(T)
io/corbel/iam/api/UserResourceTest/testUpdateEmptyUsername()#io/corbel/iam/service/UserService/findById(java.lang.String)
io/corbel/iam/api/UserResourceTest/testUpdateEmptyUsername()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/iam/api/UserResourceTest/testUpdateEmptyUsername()#javax/ws/rs/core/Response/getStatus()
io/corbel/iam/api/UserResourceTest/testUpdateEmptyUsername()#io/corbel/iam/model/User/setEmail(java.lang.String)
io/corbel/iam/api/UserResourceTest/testUpdateEmptyUsername()#javax/ws/rs/client/SyncInvoker/put(javax.ws.rs.client.Entity,java.lang.Class)
io/corbel/iam/api/UserResourceTest/testGetUserProfileAggregation()#io/corbel/lib/queries/parser/AggregationParser/parse(java.lang.String)
io/corbel/iam/api/UserResourceTest/testGetUserProfileAggregation()#io/corbel/lib/queries/parser/QueryParser/parse(java.lang.String)
io/corbel/iam/api/UserResourceTest/testGetUserProfileAggregation()#java/net/URLEncoder/encode(java.lang.String,java.lang.String)
io/corbel/iam/api/UserResourceTest/testGetUserProfileAggregation()#javax/ws/rs/client/WebTarget/request(java.lang.String[])
io/corbel/iam/api/UserResourceTest/testGetUserProfileAggregation()#org/mockito/Mockito/when(T)
io/corbel/iam/api/UserResourceTest/testGetUserProfileAggregation()#io/corbel/iam/service/UserService/countUsersByDomain(java.lang.String,io.corbel.lib.queries.request.ResourceQuery)
io/corbel/iam/api/UserResourceTest/testGetUserProfileAggregation()#io/corbel/iam/api/UserResourceTest/getTestRule()
io/corbel/iam/api/UserResourceTest/testGetUserProfileAggregation()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/iam/api/UserResourceTest/testGetUserProfileAggregation()#javax/ws/rs/client/WebTarget/queryParam(java.lang.String,java.lang.Object[])
io/corbel/iam/api/UserResourceTest/testGetUserProfileAggregation()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/iam/api/UserResourceTest/testGetUserProfileAggregation()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/iam/api/UserResourceTest/testGetUserProfileAggregation()#io/corbel/lib/queries/request/Count/Count(java.lang.String)
io/corbel/iam/api/UserResourceTest/testGetUserProfileAggregation()#io/corbel/iam/service/UserService/findUserDomain(java.lang.String)
io/corbel/iam/api/UserResourceTest/testGetUserProfileAggregation()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/iam/api/UserResourceTest/testGetUserProfileAggregation()#org/mockito/Matchers/eq(T)
io/corbel/iam/api/UserResourceTest/testGetUserProfileAggregation()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/iam/api/UserResourceTest/testGetUserProfileAggregation()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/iam/api/UserResourceTest/testGetUserProfileAggregation()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/api/UserResourceTest/testGetUserProfileAggregation()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/iam/api/UserResourceTest/testGetUserProfileAggregation()#javax/ws/rs/client/SyncInvoker/get(java.lang.Class)
io/corbel/iam/api/UserResourceTest/testGetUserProfileAggregation()#io/corbel/lib/queries/request/ResourceQuery/ResourceQuery()
io/corbel/iam/api/UserResourceTest/testGetUserProfileAggregation()#javax/ws/rs/core/Response/getStatus()
io/corbel/iam/api/UserResourceTest/testGetUserProfileAggregation()#javax/ws/rs/core/Response/readEntity(java.lang.Class)
io/corbel/iam/api/UserResourceTest/testGetUserProfileAggregation()#com/google/gson/JsonElement/toString()
io/corbel/iam/api/UserResourceTest/testGetUserProfileAggregation()#io/corbel/lib/queries/request/AggregationResultsFactory/countResult(long)
io/corbel/iam/api/UserResourceTest/testEmailConfirmationWithoutState()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/iam/api/UserResourceTest/testEmailConfirmationWithoutState()#javax/ws/rs/core/Response/Status/getStatusCode()
io/corbel/iam/api/UserResourceTest/testEmailConfirmationWithoutState()#javax/ws/rs/client/WebTarget/request(javax.ws.rs.core.MediaType[])
io/corbel/iam/api/UserResourceTest/testEmailConfirmationWithoutState()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/iam/api/UserResourceTest/testEmailConfirmationWithoutState()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/iam/api/UserResourceTest/testEmailConfirmationWithoutState()#javax/ws/rs/client/Entity/json(T)
io/corbel/iam/api/UserResourceTest/testEmailConfirmationWithoutState()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/iam/api/UserResourceTest/testEmailConfirmationWithoutState()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/iam/api/UserResourceTest/testEmailConfirmationWithoutState()#javax/ws/rs/client/SyncInvoker/put(javax.ws.rs.client.Entity,java.lang.Class)
io/corbel/iam/api/UserResourceTest/testEmailConfirmationWithoutState()#javax/ws/rs/core/Response/getStatus()
io/corbel/iam/api/UserResourceTest/testUpdateEmailAndUsername4()#io/corbel/iam/api/UserResourceTestBase/getUserClient(java.lang.String)
io/corbel/iam/api/UserResourceTest/testUpdateEmailAndUsername4()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/api/UserResourceTest/testUpdateEmailAndUsername4()#org/mockito/Mockito/when(T)
io/corbel/iam/api/UserResourceTest/testUpdateEmailAndUsername4()#io/corbel/iam/service/DomainService/scopesAllowedInDomain(java.util.Set,io.corbel.iam.model.Domain)
io/corbel/iam/api/UserResourceTest/testUpdateEmailAndUsername4()#io/corbel/iam/model/User/User()
io/corbel/iam/api/UserResourceTest/testUpdateEmailAndUsername4()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/iam/api/UserResourceTest/testUpdateEmailAndUsername4()#javax/ws/rs/client/Entity/json(T)
io/corbel/iam/api/UserResourceTest/testUpdateEmailAndUsername4()#io/corbel/iam/service/UserService/findById(java.lang.String)
io/corbel/iam/api/UserResourceTest/testUpdateEmailAndUsername4()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/iam/api/UserResourceTest/testUpdateEmailAndUsername4()#io/corbel/iam/model/User/setUsername(java.lang.String)
io/corbel/iam/api/UserResourceTest/testUpdateEmailAndUsername4()#io/corbel/iam/api/UserResourceTestBase/getTestUser()
io/corbel/iam/api/UserResourceTest/testUpdateEmailAndUsername4()#javax/ws/rs/core/Response/getStatus()
io/corbel/iam/api/UserResourceTest/testUpdateEmailAndUsername4()#io/corbel/iam/model/User/setEmail(java.lang.String)
io/corbel/iam/api/UserResourceTest/testUpdateEmailAndUsername4()#javax/ws/rs/client/SyncInvoker/put(javax.ws.rs.client.Entity,java.lang.Class)
io/corbel/iam/api/UserResourceTest/sendEmailConfirmation()#javax/ws/rs/core/Response/Status/getStatusCode()
io/corbel/iam/api/UserResourceTest/sendEmailConfirmation()#javax/ws/rs/client/WebTarget/request(java.lang.String[])
io/corbel/iam/api/UserResourceTest/sendEmailConfirmation()#org/mockito/Mockito/when(T)
io/corbel/iam/api/UserResourceTest/sendEmailConfirmation()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/iam/api/UserResourceTest/sendEmailConfirmation()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/iam/api/UserResourceTest/sendEmailConfirmation()#io/corbel/iam/api/UserResourceTestBase/createTestUser()
io/corbel/iam/api/UserResourceTest/sendEmailConfirmation()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/iam/api/UserResourceTest/sendEmailConfirmation()#io/corbel/iam/service/UserService/findById(java.lang.String)
io/corbel/iam/api/UserResourceTest/sendEmailConfirmation()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/iam/api/UserResourceTest/sendEmailConfirmation()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/api/UserResourceTest/sendEmailConfirmation()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/iam/api/UserResourceTest/sendEmailConfirmation()#javax/ws/rs/client/SyncInvoker/get(java.lang.Class)
io/corbel/iam/api/UserResourceTest/sendEmailConfirmation()#javax/ws/rs/core/Response/getStatus()
io/corbel/iam/api/UserResourceTest/testGetSessionWithoutToken()#io/corbel/iam/api/UserResourceTestBase/getTestUserToken()
io/corbel/iam/api/UserResourceTest/testGetSessionWithoutToken()#io/corbel/lib/ws/auth/AuthorizationInfo/getToken()
io/corbel/iam/api/UserResourceTest/testGetSessionWithoutToken()#javax/ws/rs/client/WebTarget/request(java.lang.String[])
io/corbel/iam/api/UserResourceTest/testGetSessionWithoutToken()#org/mockito/Mockito/when(T)
io/corbel/iam/api/UserResourceTest/testGetSessionWithoutToken()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/iam/api/UserResourceTest/testGetSessionWithoutToken()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/iam/api/UserResourceTest/testGetSessionWithoutToken()#io/corbel/iam/service/UserService/getSession(java.lang.String)
io/corbel/iam/api/UserResourceTest/testGetSessionWithoutToken()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/iam/api/UserResourceTest/testGetSessionWithoutToken()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/iam/api/UserResourceTest/testGetSessionWithoutToken()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/api/UserResourceTest/testGetSessionWithoutToken()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/iam/api/UserResourceTest/testGetSessionWithoutToken()#javax/ws/rs/client/SyncInvoker/get(java.lang.Class)
io/corbel/iam/api/UserResourceTest/testGetSessionWithoutToken()#javax/ws/rs/core/Response/getStatus()
io/corbel/iam/api/UserResourceTest/testAddUserWithBadIdentity()#io/corbel/iam/service/DomainService/oAuthServiceAllowedInDomain(java.lang.String,io.corbel.iam.model.Domain)
io/corbel/iam/api/UserResourceTest/testAddUserWithBadIdentity()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/api/UserResourceTest/testAddUserWithBadIdentity()#io/corbel/iam/model/Identity/setOauthService(java.lang.String)
io/corbel/iam/api/UserResourceTest/testAddUserWithBadIdentity()#org/mockito/Mockito/when(T)
io/corbel/iam/api/UserResourceTest/testAddUserWithBadIdentity()#io/corbel/iam/api/UserResourceTestBase/getTestUser()
io/corbel/iam/api/UserResourceTest/testAddUserWithBadIdentity()#io/corbel/iam/service/IdentityService/addIdentity(io.corbel.iam.model.Identity)
io/corbel/iam/api/UserResourceTest/testAddUserWithBadIdentity()#io/corbel/iam/model/UserWithIdentity/getIdentity()
io/corbel/iam/api/UserResourceTest/testAddUserWithBadIdentity()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/iam/api/UserResourceTest/testAddUserWithBadIdentity()#javax/ws/rs/client/Entity/json(T)
io/corbel/iam/api/UserResourceTest/testAddUserWithBadIdentity()#io/corbel/iam/model/Identity/setOauthId(java.lang.String)
io/corbel/iam/api/UserResourceTest/testAddUserWithBadIdentity()#org/mockito/Matchers/any()
io/corbel/iam/api/UserResourceTest/testAddUserWithBadIdentity()#javax/ws/rs/core/Response/readEntity(java.lang.Class)
io/corbel/iam/api/UserResourceTest/testAddUserWithBadIdentity()#io/corbel/iam/service/UserService/create(java.lang.String,io.corbel.iam.model.User)
io/corbel/iam/api/UserResourceTest/testAddUserWithBadIdentity()#io/corbel/lib/ws/model/Error/getError()
io/corbel/iam/api/UserResourceTest/testAddUserWithBadIdentity()#org/mockito/Matchers/any(java.lang.Class)
io/corbel/iam/api/UserResourceTest/testAddUserWithBadIdentity()#io/corbel/iam/service/DomainService/scopesAllowedInDomain(java.util.Set,io.corbel.iam.model.Domain)
io/corbel/iam/api/UserResourceTest/testAddUserWithBadIdentity()#io/corbel/iam/api/UserResourceTestBase/getTestUserWithIdentity()
io/corbel/iam/api/UserResourceTest/testAddUserWithBadIdentity()#io/corbel/iam/api/UserResourceTestBase/addUserClient()
io/corbel/iam/api/UserResourceTest/testAddUserWithBadIdentity()#io/corbel/iam/model/TraceableEntity/setCreatedDate(java.util.Date)
io/corbel/iam/api/UserResourceTest/testAddUserWithBadIdentity()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/iam/api/UserResourceTest/testAddUserWithBadIdentity()#java/util/Date/Date()
io/corbel/iam/api/UserResourceTest/testAddUserWithBadIdentity()#javax/ws/rs/core/Response/getStatus()
io/corbel/iam/api/UserResourceTest/testAddUserWithBadIdentity()#org/mockito/Matchers/eq(T)
io/corbel/iam/api/UserResourceTest/testAddUserWithBadIdentity()#org/mockito/stubbing/OngoingStubbing/thenThrow(java.lang.Throwable[])
io/corbel/iam/api/UserResourceTest/testAddUserWithBadIdentity()#java/lang/IllegalArgumentException/IllegalArgumentException()
io/corbel/iam/api/UserResourceTest/testAddUserWithBadIdentity()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/iam/api/UserResourceTest/testAddUserWithBadIdentity()#javax/ws/rs/client/SyncInvoker/post(javax.ws.rs.client.Entity,java.lang.Class)
io/corbel/iam/api/UserResourceTest/testAddUserWithBadIdentity()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/iam/api/UserResourceTest/addIdentityWithoutOAuthServiceAllowedInDomain()#io/corbel/iam/service/DomainService/oAuthServiceAllowedInDomain(java.lang.String,io.corbel.iam.model.Domain)
io/corbel/iam/api/UserResourceTest/addIdentityWithoutOAuthServiceAllowedInDomain()#io/corbel/iam/model/Identity/setOauthService(java.lang.String)
io/corbel/iam/api/UserResourceTest/addIdentityWithoutOAuthServiceAllowedInDomain()#javax/ws/rs/client/WebTarget/request(java.lang.String[])
io/corbel/iam/api/UserResourceTest/addIdentityWithoutOAuthServiceAllowedInDomain()#org/mockito/Mockito/when(T)
io/corbel/iam/api/UserResourceTest/addIdentityWithoutOAuthServiceAllowedInDomain()#io/corbel/iam/service/DomainService/scopesAllowedInDomain(java.util.Set,io.corbel.iam.model.Domain)
io/corbel/iam/api/UserResourceTest/addIdentityWithoutOAuthServiceAllowedInDomain()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/iam/api/UserResourceTest/addIdentityWithoutOAuthServiceAllowedInDomain()#io/corbel/iam/model/Identity/Identity()
io/corbel/iam/api/UserResourceTest/addIdentityWithoutOAuthServiceAllowedInDomain()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/iam/api/UserResourceTest/addIdentityWithoutOAuthServiceAllowedInDomain()#javax/ws/rs/core/Response/getStatus()
io/corbel/iam/api/UserResourceTest/addIdentityWithoutOAuthServiceAllowedInDomain()#javax/ws/rs/client/Entity/json(T)
io/corbel/iam/api/UserResourceTest/addIdentityWithoutOAuthServiceAllowedInDomain()#io/corbel/iam/model/Identity/setOauthId(java.lang.String)
io/corbel/iam/api/UserResourceTest/addIdentityWithoutOAuthServiceAllowedInDomain()#io/corbel/iam/api/UserResourceTestBase/createTestUser()
io/corbel/iam/api/UserResourceTest/addIdentityWithoutOAuthServiceAllowedInDomain()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/iam/api/UserResourceTest/addIdentityWithoutOAuthServiceAllowedInDomain()#io/corbel/iam/service/UserService/findById(java.lang.String)
io/corbel/iam/api/UserResourceTest/addIdentityWithoutOAuthServiceAllowedInDomain()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/api/UserResourceTest/addIdentityWithoutOAuthServiceAllowedInDomain()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/iam/api/UserResourceTest/addIdentityWithoutOAuthServiceAllowedInDomain()#javax/ws/rs/client/SyncInvoker/post(javax.ws.rs.client.Entity,java.lang.Class)
io/corbel/iam/api/UserResourceTest/addIdentityWithoutOAuthServiceAllowedInDomain()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/iam/api/UserResourceTest/addGroupToUser()#javax/ws/rs/client/WebTarget/request(java.lang.String[])
io/corbel/iam/api/UserResourceTest/addGroupToUser()#org/mockito/Mockito/when(T)
io/corbel/iam/api/UserResourceTest/addGroupToUser()#org/mockito/Mockito/verify(T)
io/corbel/iam/api/UserResourceTest/addGroupToUser()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/iam/api/UserResourceTest/addGroupToUser()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/iam/api/UserResourceTest/addGroupToUser()#java/util/Set/add(E)
io/corbel/iam/api/UserResourceTest/addGroupToUser()#io/corbel/iam/service/UserService/update(io.corbel.iam.model.User)
io/corbel/iam/api/UserResourceTest/addGroupToUser()#javax/ws/rs/client/Entity/json(T)
io/corbel/iam/api/UserResourceTest/addGroupToUser()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/iam/api/UserResourceTest/addGroupToUser()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/iam/api/UserResourceTest/addGroupToUser()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/api/UserResourceTest/addGroupToUser()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/iam/api/UserResourceTest/addGroupToUser()#javax/ws/rs/client/SyncInvoker/put(javax.ws.rs.client.Entity,java.lang.Class)
io/corbel/iam/api/UserResourceTest/addGroupToUser()#javax/ws/rs/core/Response/getStatus()
io/corbel/iam/api/UserResourceTest/addGroupToUser()#io/corbel/iam/model/User/addGroups(java.util.Set)
io/corbel/iam/api/UserResourceTest/addGroupToUser()#io/corbel/iam/api/UserResourceTestBase/createTestUser()
io/corbel/iam/api/UserResourceTest/addGroupToUser()#io/corbel/iam/service/UserService/findById(java.lang.String)
io/corbel/iam/api/UserResourceTest/addGroupToUser()#java/util/HashSet/HashSet()
io/corbel/iam/api/UserResourceTest/testDisconnectMe()#javax/ws/rs/client/WebTarget/request(java.lang.String[])
io/corbel/iam/api/UserResourceTest/testDisconnectMe()#org/mockito/Mockito/when(T)
io/corbel/iam/api/UserResourceTest/testDisconnectMe()#org/mockito/Mockito/verify(T)
io/corbel/iam/api/UserResourceTest/testDisconnectMe()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/iam/api/UserResourceTest/testDisconnectMe()#io/corbel/lib/ws/auth/AuthorizationInfo/getUserId()
io/corbel/iam/api/UserResourceTest/testDisconnectMe()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/iam/api/UserResourceTest/testDisconnectMe()#javax/ws/rs/client/Entity/json(T)
io/corbel/iam/api/UserResourceTest/testDisconnectMe()#io/corbel/iam/service/UserService/findUserDomain(java.lang.String)
io/corbel/iam/api/UserResourceTest/testDisconnectMe()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/iam/api/UserResourceTest/testDisconnectMe()#io/corbel/iam/service/UserService/findById(java.lang.String)
io/corbel/iam/api/UserResourceTest/testDisconnectMe()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/iam/api/UserResourceTest/testDisconnectMe()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/api/UserResourceTest/testDisconnectMe()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/iam/api/UserResourceTest/testDisconnectMe()#io/corbel/iam/api/UserResourceTestBase/getTestUser()
io/corbel/iam/api/UserResourceTest/testDisconnectMe()#io/corbel/iam/service/UserService/signOut(java.lang.String)
io/corbel/iam/api/UserResourceTest/testDisconnectMe()#javax/ws/rs/client/SyncInvoker/put(javax.ws.rs.client.Entity,java.lang.Class)
io/corbel/iam/api/UserResourceTest/testDisconnectMe()#javax/ws/rs/core/Response/getStatus()
io/corbel/iam/api/UserResourceTest/testUpdateName()#io/corbel/iam/api/UserResourceTestBase/getUserClient(java.lang.String)
io/corbel/iam/api/UserResourceTest/testUpdateName()#org/mockito/ArgumentCaptor/getValue()
io/corbel/iam/api/UserResourceTest/testUpdateName()#org/mockito/Mockito/when(T)
io/corbel/iam/api/UserResourceTest/testUpdateName()#io/corbel/iam/api/UserResourceTestBase/getTestUser()
io/corbel/iam/api/UserResourceTest/testUpdateName()#io/corbel/iam/model/User/User()
io/corbel/iam/api/UserResourceTest/testUpdateName()#io/corbel/iam/model/User/setFirstName(java.lang.String)
io/corbel/iam/api/UserResourceTest/testUpdateName()#javax/ws/rs/client/Entity/json(T)
io/corbel/iam/api/UserResourceTest/testUpdateName()#io/corbel/iam/model/User/setLastName(java.lang.String)
io/corbel/iam/api/UserResourceTest/testUpdateName()#io/corbel/iam/service/UserService/findById(java.lang.String)
io/corbel/iam/api/UserResourceTest/testUpdateName()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/iam/api/UserResourceTest/testUpdateName()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/iam/api/UserResourceTest/testUpdateName()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/api/UserResourceTest/testUpdateName()#io/corbel/iam/model/User/getFirstName()
io/corbel/iam/api/UserResourceTest/testUpdateName()#org/mockito/ArgumentCaptor/forClass(java.lang.Class)
io/corbel/iam/api/UserResourceTest/testUpdateName()#io/corbel/iam/service/DomainService/scopesAllowedInDomain(java.util.Set,io.corbel.iam.model.Domain)
io/corbel/iam/api/UserResourceTest/testUpdateName()#org/mockito/Mockito/verify(T)
io/corbel/iam/api/UserResourceTest/testUpdateName()#io/corbel/iam/model/User/getLastName()
io/corbel/iam/api/UserResourceTest/testUpdateName()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/iam/api/UserResourceTest/testUpdateName()#javax/ws/rs/client/SyncInvoker/put(javax.ws.rs.client.Entity,java.lang.Class)
io/corbel/iam/api/UserResourceTest/testUpdateName()#javax/ws/rs/core/Response/getStatus()
io/corbel/iam/api/UserResourceTest/testUpdateName()#io/corbel/iam/service/UserService/update(io.corbel.iam.model.User)
io/corbel/iam/api/UserResourceTest/testUpdateName()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/iam/api/UserResourceTest/testUpdateName()#org/mockito/ArgumentCaptor/capture()
io/corbel/iam/api/UserResourceTest/testDeleteUser()#io/corbel/iam/api/UserResourceTestBase/getUserClient(java.lang.String)
io/corbel/iam/api/UserResourceTest/testDeleteUser()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/api/UserResourceTest/testDeleteUser()#org/mockito/Mockito/when(T)
io/corbel/iam/api/UserResourceTest/testDeleteUser()#org/mockito/Mockito/verify(T)
io/corbel/iam/api/UserResourceTest/testDeleteUser()#io/corbel/iam/service/IdentityService/deleteUserIdentities(io.corbel.iam.model.User)
io/corbel/iam/api/UserResourceTest/testDeleteUser()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/iam/api/UserResourceTest/testDeleteUser()#javax/ws/rs/core/Response/getStatus()
io/corbel/iam/api/UserResourceTest/testDeleteUser()#io/corbel/iam/service/UserService/delete(io.corbel.iam.model.User)
io/corbel/iam/api/UserResourceTest/testDeleteUser()#io/corbel/iam/api/UserResourceTestBase/createTestUser()
io/corbel/iam/api/UserResourceTest/testDeleteUser()#io/corbel/iam/service/UserService/findUserDomain(java.lang.String)
io/corbel/iam/api/UserResourceTest/testDeleteUser()#javax/ws/rs/client/SyncInvoker/delete(java.lang.Class)
io/corbel/iam/api/UserResourceTest/testDeleteUser()#io/corbel/iam/service/UserService/findById(java.lang.String)
io/corbel/iam/api/UserResourceTest/testDeleteUser()#io/corbel/iam/service/DeviceService/deleteByUserId(io.corbel.iam.model.User)
io/corbel/iam/api/UserResourceTest/testDeleteUser()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/iam/api/UserResourceTest/testGetUserProfileWithException()#io/corbel/iam/api/UserResourceTestBase/getUserProfile(java.lang.String)
io/corbel/iam/api/UserResourceTest/testGetUserProfileWithException()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/api/UserResourceTest/testGetUserProfileWithException()#io/corbel/iam/model/Domain/getUserProfileFields()
io/corbel/iam/api/UserResourceTest/testGetUserProfileWithException()#org/mockito/stubbing/OngoingStubbing/thenThrow(java.lang.Class<? extends java.lang.Throwable>[])
io/corbel/iam/api/UserResourceTest/testGetUserProfileWithException()#org/mockito/Mockito/when(T)
io/corbel/iam/api/UserResourceTest/testGetUserProfileWithException()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/iam/api/UserResourceTest/testGetUserProfileWithException()#io/corbel/iam/api/UserResourceTestBase/createTestUser()
io/corbel/iam/api/UserResourceTest/testGetUserProfileWithException()#io/corbel/iam/service/UserService/findUserDomain(java.lang.String)
io/corbel/iam/api/UserResourceTest/testGetUserProfileWithException()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/iam/api/UserResourceTest/testGetUserProfileWithException()#javax/ws/rs/client/SyncInvoker/get(java.lang.Class)
io/corbel/iam/api/UserResourceTest/testGetUserProfileWithException()#javax/ws/rs/core/Response/getStatus()
io/corbel/iam/api/UserResourceTest/testGetUserProfileWithException()#io/corbel/iam/service/UserService/findById(java.lang.String)
io/corbel/iam/api/UserResourceTest/testGetUserProfileWithException()#io/corbel/iam/service/UserService/getUserProfile(io.corbel.iam.model.User,java.util.Set)
io/corbel/iam/api/UserResourceTest/addMeIdentityWithNullUser()#io/corbel/iam/service/DomainService/oAuthServiceAllowedInDomain(java.lang.String,io.corbel.iam.model.Domain)
io/corbel/iam/api/UserResourceTest/addMeIdentityWithNullUser()#javax/ws/rs/core/Response/Status/getStatusCode()
io/corbel/iam/api/UserResourceTest/addMeIdentityWithNullUser()#io/corbel/iam/model/Identity/setOauthService(java.lang.String)
io/corbel/iam/api/UserResourceTest/addMeIdentityWithNullUser()#javax/ws/rs/client/WebTarget/request(java.lang.String[])
io/corbel/iam/api/UserResourceTest/addMeIdentityWithNullUser()#org/mockito/Mockito/when(T)
io/corbel/iam/api/UserResourceTest/addMeIdentityWithNullUser()#io/corbel/iam/service/DomainService/scopesAllowedInDomain(java.util.Set,io.corbel.iam.model.Domain)
io/corbel/iam/api/UserResourceTest/addMeIdentityWithNullUser()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/iam/api/UserResourceTest/addMeIdentityWithNullUser()#io/corbel/iam/model/Identity/Identity()
io/corbel/iam/api/UserResourceTest/addMeIdentityWithNullUser()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/iam/api/UserResourceTest/addMeIdentityWithNullUser()#javax/ws/rs/core/Response/getStatus()
io/corbel/iam/api/UserResourceTest/addMeIdentityWithNullUser()#javax/ws/rs/client/Entity/json(T)
io/corbel/iam/api/UserResourceTest/addMeIdentityWithNullUser()#io/corbel/iam/model/Identity/setOauthId(java.lang.String)
io/corbel/iam/api/UserResourceTest/addMeIdentityWithNullUser()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/iam/api/UserResourceTest/addMeIdentityWithNullUser()#io/corbel/iam/service/UserService/findById(java.lang.String)
io/corbel/iam/api/UserResourceTest/addMeIdentityWithNullUser()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/api/UserResourceTest/addMeIdentityWithNullUser()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/iam/api/UserResourceTest/addMeIdentityWithNullUser()#javax/ws/rs/client/SyncInvoker/post(javax.ws.rs.client.Entity,java.lang.Class)
io/corbel/iam/api/UserResourceTest/addMeIdentityWithNullUser()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/iam/api/UserResourceTest/testGetUser()#io/corbel/iam/api/UserResourceTestBase/getUserClient(java.lang.String)
io/corbel/iam/api/UserResourceTest/testGetUser()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/api/UserResourceTest/testGetUser()#org/mockito/Mockito/when(T)
io/corbel/iam/api/UserResourceTest/testGetUser()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/iam/api/UserResourceTest/testGetUser()#org/fest/assertions/api/ObjectAssert/isEqualsToByComparingFields(T)
io/corbel/iam/api/UserResourceTest/testGetUser()#io/corbel/iam/api/UserResourceTestBase/createTestUser()
io/corbel/iam/api/UserResourceTest/testGetUser()#io/corbel/iam/service/UserService/findUserDomain(java.lang.String)
io/corbel/iam/api/UserResourceTest/testGetUser()#org/fest/assertions/api/Assertions/assertThat(T)
io/corbel/iam/api/UserResourceTest/testGetUser()#io/corbel/iam/service/UserService/findById(java.lang.String)
io/corbel/iam/api/UserResourceTest/testGetUser()#javax/ws/rs/core/Response/readEntity(java.lang.Class)
io/corbel/iam/api/UserResourceTest/testGetUser()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/iam/api/UserResourceTest/testGetUser()#javax/ws/rs/client/SyncInvoker/get(java.lang.Class)
io/corbel/iam/api/UserResourceTest/testGetUser()#javax/ws/rs/core/Response/getStatus()
io/corbel/iam/api/UserResourceTest/testUpdateEmptyEmail()#io/corbel/iam/api/UserResourceTestBase/getUserClient(java.lang.String)
io/corbel/iam/api/UserResourceTest/testUpdateEmptyEmail()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/api/UserResourceTest/testUpdateEmptyEmail()#org/mockito/Mockito/when(T)
io/corbel/iam/api/UserResourceTest/testUpdateEmptyEmail()#io/corbel/iam/service/DomainService/scopesAllowedInDomain(java.util.Set,io.corbel.iam.model.Domain)
io/corbel/iam/api/UserResourceTest/testUpdateEmptyEmail()#io/corbel/iam/api/UserResourceTestBase/getTestUser()
io/corbel/iam/api/UserResourceTest/testUpdateEmptyEmail()#io/corbel/iam/model/User/User()
io/corbel/iam/api/UserResourceTest/testUpdateEmptyEmail()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/iam/api/UserResourceTest/testUpdateEmptyEmail()#javax/ws/rs/client/Entity/json(T)
io/corbel/iam/api/UserResourceTest/testUpdateEmptyEmail()#io/corbel/iam/service/UserService/findById(java.lang.String)
io/corbel/iam/api/UserResourceTest/testUpdateEmptyEmail()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/iam/api/UserResourceTest/testUpdateEmptyEmail()#javax/ws/rs/core/Response/getStatus()
io/corbel/iam/api/UserResourceTest/testUpdateEmptyEmail()#io/corbel/iam/model/User/setEmail(java.lang.String)
io/corbel/iam/api/UserResourceTest/testUpdateEmptyEmail()#javax/ws/rs/client/SyncInvoker/put(javax.ws.rs.client.Entity,java.lang.Class)
io/corbel/iam/api/UserResourceTest/addDuplicatedMeIdentity()#io/corbel/iam/service/DomainService/oAuthServiceAllowedInDomain(java.lang.String,io.corbel.iam.model.Domain)
io/corbel/iam/api/UserResourceTest/addDuplicatedMeIdentity()#javax/ws/rs/core/Response/Status/getStatusCode()
io/corbel/iam/api/UserResourceTest/addDuplicatedMeIdentity()#io/corbel/iam/model/Identity/setOauthService(java.lang.String)
io/corbel/iam/api/UserResourceTest/addDuplicatedMeIdentity()#javax/ws/rs/client/WebTarget/request(java.lang.String[])
io/corbel/iam/api/UserResourceTest/addDuplicatedMeIdentity()#org/mockito/Mockito/when(T)
io/corbel/iam/api/UserResourceTest/addDuplicatedMeIdentity()#io/corbel/iam/service/DomainService/scopesAllowedInDomain(java.util.Set,io.corbel.iam.model.Domain)
io/corbel/iam/api/UserResourceTest/addDuplicatedMeIdentity()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/iam/api/UserResourceTest/addDuplicatedMeIdentity()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/iam/api/UserResourceTest/addDuplicatedMeIdentity()#javax/ws/rs/core/Response/getStatus()
io/corbel/iam/api/UserResourceTest/addDuplicatedMeIdentity()#javax/ws/rs/client/Entity/json(T)
io/corbel/iam/api/UserResourceTest/addDuplicatedMeIdentity()#io/corbel/iam/api/UserResourceTestBase/createTestUser()
io/corbel/iam/api/UserResourceTest/addDuplicatedMeIdentity()#org/mockito/Mockito/doThrow(java.lang.Throwable)
io/corbel/iam/api/UserResourceTest/addDuplicatedMeIdentity()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/iam/api/UserResourceTest/addDuplicatedMeIdentity()#io/corbel/iam/service/UserService/findById(java.lang.String)
io/corbel/iam/api/UserResourceTest/addDuplicatedMeIdentity()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/api/UserResourceTest/addDuplicatedMeIdentity()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/iam/api/UserResourceTest/addDuplicatedMeIdentity()#io/corbel/iam/service/IdentityService/addIdentity(io.corbel.iam.model.Identity)
io/corbel/iam/api/UserResourceTest/addDuplicatedMeIdentity()#org/mockito/stubbing/Stubber/when(T)
io/corbel/iam/api/UserResourceTest/addDuplicatedMeIdentity()#io/corbel/iam/model/Identity/Identity()
io/corbel/iam/api/UserResourceTest/addDuplicatedMeIdentity()#io/corbel/lib/ws/auth/AuthorizationInfo/getUserId()
io/corbel/iam/api/UserResourceTest/addDuplicatedMeIdentity()#io/corbel/iam/model/Identity/setOauthId(java.lang.String)
io/corbel/iam/api/UserResourceTest/addDuplicatedMeIdentity()#io/corbel/iam/exception/IdentityAlreadyExistsException/IdentityAlreadyExistsException()
io/corbel/iam/api/UserResourceTest/addDuplicatedMeIdentity()#javax/ws/rs/client/SyncInvoker/post(javax.ws.rs.client.Entity,java.lang.Class)
io/corbel/iam/api/UserResourceTest/addDuplicatedMeIdentity()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/iam/api/UserResourceTest/testMeGetIdentitiesWithoutUser()#javax/ws/rs/client/WebTarget/request(java.lang.String[])
io/corbel/iam/api/UserResourceTest/testMeGetIdentitiesWithoutUser()#org/mockito/Mockito/when(T)
io/corbel/iam/api/UserResourceTest/testMeGetIdentitiesWithoutUser()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/iam/api/UserResourceTest/testMeGetIdentitiesWithoutUser()#io/corbel/lib/ws/auth/AuthorizationInfo/getUserId()
io/corbel/iam/api/UserResourceTest/testMeGetIdentitiesWithoutUser()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/iam/api/UserResourceTest/testMeGetIdentitiesWithoutUser()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/iam/api/UserResourceTest/testMeGetIdentitiesWithoutUser()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/iam/api/UserResourceTest/testMeGetIdentitiesWithoutUser()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/api/UserResourceTest/testMeGetIdentitiesWithoutUser()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/iam/api/UserResourceTest/testMeGetIdentitiesWithoutUser()#javax/ws/rs/client/SyncInvoker/get(java.lang.Class)
io/corbel/iam/api/UserResourceTest/testMeGetIdentitiesWithoutUser()#javax/ws/rs/core/Response/getStatus()
io/corbel/iam/api/UserResourceTest/testRemoveProperty()#io/corbel/iam/api/UserResourceTestBase/getUserClient(java.lang.String)
io/corbel/iam/api/UserResourceTest/testRemoveProperty()#org/mockito/ArgumentCaptor/getValue()
io/corbel/iam/api/UserResourceTest/testRemoveProperty()#org/fest/assertions/api/Assertions/assertThat(boolean)
io/corbel/iam/api/UserResourceTest/testRemoveProperty()#org/mockito/Mockito/when(T)
io/corbel/iam/api/UserResourceTest/testRemoveProperty()#io/corbel/iam/model/User/User()
io/corbel/iam/api/UserResourceTest/testRemoveProperty()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/iam/api/UserResourceTest/testRemoveProperty()#javax/ws/rs/client/Entity/json(T)
io/corbel/iam/api/UserResourceTest/testRemoveProperty()#io/corbel/iam/service/UserService/findById(java.lang.String)
io/corbel/iam/api/UserResourceTest/testRemoveProperty()#io/corbel/iam/model/User/addProperty(java.lang.String,java.lang.Object)
io/corbel/iam/api/UserResourceTest/testRemoveProperty()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/iam/api/UserResourceTest/testRemoveProperty()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/api/UserResourceTest/testRemoveProperty()#org/fest/assertions/api/BooleanAssert/isTrue()
io/corbel/iam/api/UserResourceTest/testRemoveProperty()#io/corbel/iam/model/User/getProperties()
io/corbel/iam/api/UserResourceTest/testRemoveProperty()#org/mockito/ArgumentCaptor/forClass(java.lang.Class)
io/corbel/iam/api/UserResourceTest/testRemoveProperty()#io/corbel/iam/service/DomainService/scopesAllowedInDomain(java.util.Set,io.corbel.iam.model.Domain)
io/corbel/iam/api/UserResourceTest/testRemoveProperty()#org/mockito/Mockito/verify(T)
io/corbel/iam/api/UserResourceTest/testRemoveProperty()#java/util/Map/isEmpty()
io/corbel/iam/api/UserResourceTest/testRemoveProperty()#io/corbel/iam/api/UserResourceTestBase/getTestUser()
io/corbel/iam/api/UserResourceTest/testRemoveProperty()#javax/ws/rs/client/SyncInvoker/put(javax.ws.rs.client.Entity,java.lang.Class)
io/corbel/iam/api/UserResourceTest/testRemoveProperty()#javax/ws/rs/core/Response/getStatus()
io/corbel/iam/api/UserResourceTest/testRemoveProperty()#io/corbel/iam/service/UserService/update(io.corbel.iam.model.User)
io/corbel/iam/api/UserResourceTest/testRemoveProperty()#org/mockito/ArgumentCaptor/capture()
io/corbel/iam/api/UserResourceTest/testGetNotFoundUserProfile()#io/corbel/iam/api/UserResourceTestBase/getUserProfile(java.lang.String)
io/corbel/iam/api/UserResourceTest/testGetNotFoundUserProfile()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/api/UserResourceTest/testGetNotFoundUserProfile()#io/corbel/iam/model/Domain/getUserProfileFields()
io/corbel/iam/api/UserResourceTest/testGetNotFoundUserProfile()#org/mockito/Mockito/when(T)
io/corbel/iam/api/UserResourceTest/testGetNotFoundUserProfile()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/iam/api/UserResourceTest/testGetNotFoundUserProfile()#io/corbel/iam/api/UserResourceTestBase/createTestUser()
io/corbel/iam/api/UserResourceTest/testGetNotFoundUserProfile()#io/corbel/iam/service/UserService/findUserDomain(java.lang.String)
io/corbel/iam/api/UserResourceTest/testGetNotFoundUserProfile()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/iam/api/UserResourceTest/testGetNotFoundUserProfile()#javax/ws/rs/client/SyncInvoker/get(java.lang.Class)
io/corbel/iam/api/UserResourceTest/testGetNotFoundUserProfile()#javax/ws/rs/core/Response/getStatus()
io/corbel/iam/api/UserResourceTest/testGetNotFoundUserProfile()#io/corbel/iam/service/UserService/findById(java.lang.String)
io/corbel/iam/api/UserResourceTest/testGetNotFoundUserProfile()#io/corbel/iam/service/UserService/getUserProfile(io.corbel.iam.model.User,java.util.Set)
io/corbel/iam/api/UserResourceTest/testUpdateEmailAndUsername()#io/corbel/iam/api/UserResourceTestBase/getUserClient(java.lang.String)
io/corbel/iam/api/UserResourceTest/testUpdateEmailAndUsername()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/api/UserResourceTest/testUpdateEmailAndUsername()#io/corbel/iam/model/User/getEmail()
io/corbel/iam/api/UserResourceTest/testUpdateEmailAndUsername()#org/mockito/ArgumentCaptor/getValue()
io/corbel/iam/api/UserResourceTest/testUpdateEmailAndUsername()#io/corbel/iam/model/User/getUsername()
io/corbel/iam/api/UserResourceTest/testUpdateEmailAndUsername()#org/mockito/Mockito/when(T)
io/corbel/iam/api/UserResourceTest/testUpdateEmailAndUsername()#io/corbel/iam/model/User/User()
io/corbel/iam/api/UserResourceTest/testUpdateEmailAndUsername()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/iam/api/UserResourceTest/testUpdateEmailAndUsername()#javax/ws/rs/client/Entity/json(T)
io/corbel/iam/api/UserResourceTest/testUpdateEmailAndUsername()#io/corbel/iam/service/UserService/findById(java.lang.String)
io/corbel/iam/api/UserResourceTest/testUpdateEmailAndUsername()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/iam/api/UserResourceTest/testUpdateEmailAndUsername()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/iam/api/UserResourceTest/testUpdateEmailAndUsername()#org/mockito/ArgumentCaptor/forClass(java.lang.Class)
io/corbel/iam/api/UserResourceTest/testUpdateEmailAndUsername()#io/corbel/iam/service/DomainService/scopesAllowedInDomain(java.util.Set,io.corbel.iam.model.Domain)
io/corbel/iam/api/UserResourceTest/testUpdateEmailAndUsername()#org/mockito/Mockito/verify(T)
io/corbel/iam/api/UserResourceTest/testUpdateEmailAndUsername()#io/corbel/iam/model/User/setUsername(java.lang.String)
io/corbel/iam/api/UserResourceTest/testUpdateEmailAndUsername()#io/corbel/iam/api/UserResourceTestBase/getTestUser()
io/corbel/iam/api/UserResourceTest/testUpdateEmailAndUsername()#javax/ws/rs/core/Response/getStatus()
io/corbel/iam/api/UserResourceTest/testUpdateEmailAndUsername()#io/corbel/iam/model/User/setEmail(java.lang.String)
io/corbel/iam/api/UserResourceTest/testUpdateEmailAndUsername()#javax/ws/rs/client/SyncInvoker/put(javax.ws.rs.client.Entity,java.lang.Class)
io/corbel/iam/api/UserResourceTest/testUpdateEmailAndUsername()#io/corbel/iam/service/UserService/update(io.corbel.iam.model.User)
io/corbel/iam/api/UserResourceTest/testUpdateEmailAndUsername()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/iam/api/UserResourceTest/testUpdateEmailAndUsername()#org/mockito/ArgumentCaptor/capture()
io/corbel/iam/api/UserResourceTest/testEmailConfirmationWithState()#io/corbel/lib/token/TokenInfo/getState()
io/corbel/iam/api/UserResourceTest/testEmailConfirmationWithState()#javax/ws/rs/core/Response/Status/getStatusCode()
io/corbel/iam/api/UserResourceTest/testEmailConfirmationWithState()#org/mockito/Mockito/when(T)
io/corbel/iam/api/UserResourceTest/testEmailConfirmationWithState()#javax/ws/rs/client/WebTarget/request(javax.ws.rs.core.MediaType[])
io/corbel/iam/api/UserResourceTest/testEmailConfirmationWithState()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/iam/api/UserResourceTest/testEmailConfirmationWithState()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/iam/api/UserResourceTest/testEmailConfirmationWithState()#javax/ws/rs/client/Entity/json(T)
io/corbel/iam/api/UserResourceTest/testEmailConfirmationWithState()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/iam/api/UserResourceTest/testEmailConfirmationWithState()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/iam/api/UserResourceTest/testEmailConfirmationWithState()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/api/UserResourceTest/testEmailConfirmationWithState()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/iam/api/UserResourceTest/testEmailConfirmationWithState()#javax/ws/rs/client/SyncInvoker/put(javax.ws.rs.client.Entity,java.lang.Class)
io/corbel/iam/api/UserResourceTest/testEmailConfirmationWithState()#javax/ws/rs/core/Response/getStatus()
io/corbel/iam/api/UserResourceTest/testUpdatePhone()#io/corbel/iam/api/UserResourceTestBase/getUserClient(java.lang.String)
io/corbel/iam/api/UserResourceTest/testUpdatePhone()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/api/UserResourceTest/testUpdatePhone()#org/mockito/ArgumentCaptor/getValue()
io/corbel/iam/api/UserResourceTest/testUpdatePhone()#org/mockito/Mockito/when(T)
io/corbel/iam/api/UserResourceTest/testUpdatePhone()#io/corbel/iam/api/UserResourceTestBase/getTestUser()
io/corbel/iam/api/UserResourceTest/testUpdatePhone()#io/corbel/iam/model/User/setPhoneNumber(java.lang.String)
io/corbel/iam/api/UserResourceTest/testUpdatePhone()#io/corbel/iam/model/User/User()
io/corbel/iam/api/UserResourceTest/testUpdatePhone()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/iam/api/UserResourceTest/testUpdatePhone()#javax/ws/rs/client/Entity/json(T)
io/corbel/iam/api/UserResourceTest/testUpdatePhone()#io/corbel/iam/service/UserService/findById(java.lang.String)
io/corbel/iam/api/UserResourceTest/testUpdatePhone()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/iam/api/UserResourceTest/testUpdatePhone()#org/mockito/ArgumentCaptor/forClass(java.lang.Class)
io/corbel/iam/api/UserResourceTest/testUpdatePhone()#io/corbel/iam/service/DomainService/scopesAllowedInDomain(java.util.Set,io.corbel.iam.model.Domain)
io/corbel/iam/api/UserResourceTest/testUpdatePhone()#org/mockito/Mockito/verify(T)
io/corbel/iam/api/UserResourceTest/testUpdatePhone()#javax/ws/rs/client/SyncInvoker/put(javax.ws.rs.client.Entity,java.lang.Class)
io/corbel/iam/api/UserResourceTest/testUpdatePhone()#javax/ws/rs/core/Response/getStatus()
io/corbel/iam/api/UserResourceTest/testUpdatePhone()#io/corbel/iam/service/UserService/update(io.corbel.iam.model.User)
io/corbel/iam/api/UserResourceTest/testUpdatePhone()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/iam/api/UserResourceTest/testUpdatePhone()#org/mockito/ArgumentCaptor/capture()
io/corbel/iam/api/UserResourceTest/testUpdatePhone()#io/corbel/iam/model/User/getPhoneNumber()
io/corbel/iam/api/UserResourceTest/testUpdatePhone()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/iam/api/UserResourceTest/testDisconnect()#javax/ws/rs/client/WebTarget/request(java.lang.String[])
io/corbel/iam/api/UserResourceTest/testDisconnect()#org/mockito/Mockito/when(T)
io/corbel/iam/api/UserResourceTest/testDisconnect()#org/mockito/Mockito/verify(T)
io/corbel/iam/api/UserResourceTest/testDisconnect()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/iam/api/UserResourceTest/testDisconnect()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/iam/api/UserResourceTest/testDisconnect()#javax/ws/rs/client/Entity/json(T)
io/corbel/iam/api/UserResourceTest/testDisconnect()#io/corbel/iam/service/UserService/findUserDomain(java.lang.String)
io/corbel/iam/api/UserResourceTest/testDisconnect()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/iam/api/UserResourceTest/testDisconnect()#io/corbel/iam/service/UserService/findById(java.lang.String)
io/corbel/iam/api/UserResourceTest/testDisconnect()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/iam/api/UserResourceTest/testDisconnect()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/api/UserResourceTest/testDisconnect()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/iam/api/UserResourceTest/testDisconnect()#io/corbel/iam/api/UserResourceTestBase/getTestUser()
io/corbel/iam/api/UserResourceTest/testDisconnect()#io/corbel/iam/service/UserService/signOut(java.lang.String)
io/corbel/iam/api/UserResourceTest/testDisconnect()#javax/ws/rs/client/SyncInvoker/put(javax.ws.rs.client.Entity,java.lang.Class)
io/corbel/iam/api/UserResourceTest/testDisconnect()#javax/ws/rs/core/Response/getStatus()
io/corbel/iam/api/UserResourceTest/testDeleteMissingUser()#io/corbel/iam/api/UserResourceTestBase/getUserClient(java.lang.String)
io/corbel/iam/api/UserResourceTest/testDeleteMissingUser()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/api/UserResourceTest/testDeleteMissingUser()#org/mockito/Mockito/verify(T,org.mockito.verification.VerificationMode)
io/corbel/iam/api/UserResourceTest/testDeleteMissingUser()#org/mockito/Mockito/when(T)
io/corbel/iam/api/UserResourceTest/testDeleteMissingUser()#org/mockito/Mockito/verifyNoMoreInteractions(java.lang.Object[])
io/corbel/iam/api/UserResourceTest/testDeleteMissingUser()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/iam/api/UserResourceTest/testDeleteMissingUser()#javax/ws/rs/core/Response/getStatus()
io/corbel/iam/api/UserResourceTest/testDeleteMissingUser()#org/mockito/Mockito/never()
io/corbel/iam/api/UserResourceTest/testDeleteMissingUser()#io/corbel/iam/service/UserService/delete(io.corbel.iam.model.User)
io/corbel/iam/api/UserResourceTest/testDeleteMissingUser()#org/mockito/Matchers/any()
io/corbel/iam/api/UserResourceTest/testDeleteMissingUser()#io/corbel/iam/service/UserService/findUserDomain(java.lang.String)
io/corbel/iam/api/UserResourceTest/testDeleteMissingUser()#javax/ws/rs/client/SyncInvoker/delete(java.lang.Class)
io/corbel/iam/api/UserResourceTest/testDeleteMissingUser()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/iam/api/UserResourceTest/addDuplicatedOauthServiceIdentity()#io/corbel/iam/service/DomainService/oAuthServiceAllowedInDomain(java.lang.String,io.corbel.iam.model.Domain)
io/corbel/iam/api/UserResourceTest/addDuplicatedOauthServiceIdentity()#javax/ws/rs/core/Response/Status/getStatusCode()
io/corbel/iam/api/UserResourceTest/addDuplicatedOauthServiceIdentity()#io/corbel/iam/model/Identity/setOauthService(java.lang.String)
io/corbel/iam/api/UserResourceTest/addDuplicatedOauthServiceIdentity()#javax/ws/rs/client/WebTarget/request(java.lang.String[])
io/corbel/iam/api/UserResourceTest/addDuplicatedOauthServiceIdentity()#org/mockito/Mockito/when(T)
io/corbel/iam/api/UserResourceTest/addDuplicatedOauthServiceIdentity()#io/corbel/iam/service/DomainService/scopesAllowedInDomain(java.util.Set,io.corbel.iam.model.Domain)
io/corbel/iam/api/UserResourceTest/addDuplicatedOauthServiceIdentity()#io/corbel/iam/exception/DuplicatedOauthServiceIdentityException/DuplicatedOauthServiceIdentityException()
io/corbel/iam/api/UserResourceTest/addDuplicatedOauthServiceIdentity()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/iam/api/UserResourceTest/addDuplicatedOauthServiceIdentity()#io/corbel/iam/model/Identity/Identity()
io/corbel/iam/api/UserResourceTest/addDuplicatedOauthServiceIdentity()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/iam/api/UserResourceTest/addDuplicatedOauthServiceIdentity()#javax/ws/rs/core/Response/getStatus()
io/corbel/iam/api/UserResourceTest/addDuplicatedOauthServiceIdentity()#javax/ws/rs/client/Entity/json(T)
io/corbel/iam/api/UserResourceTest/addDuplicatedOauthServiceIdentity()#io/corbel/iam/model/Identity/setOauthId(java.lang.String)
io/corbel/iam/api/UserResourceTest/addDuplicatedOauthServiceIdentity()#io/corbel/iam/api/UserResourceTestBase/createTestUser()
io/corbel/iam/api/UserResourceTest/addDuplicatedOauthServiceIdentity()#org/mockito/Mockito/doThrow(java.lang.Throwable)
io/corbel/iam/api/UserResourceTest/addDuplicatedOauthServiceIdentity()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/iam/api/UserResourceTest/addDuplicatedOauthServiceIdentity()#io/corbel/iam/service/UserService/findById(java.lang.String)
io/corbel/iam/api/UserResourceTest/addDuplicatedOauthServiceIdentity()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/api/UserResourceTest/addDuplicatedOauthServiceIdentity()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/iam/api/UserResourceTest/addDuplicatedOauthServiceIdentity()#io/corbel/iam/service/IdentityService/addIdentity(io.corbel.iam.model.Identity)
io/corbel/iam/api/UserResourceTest/addDuplicatedOauthServiceIdentity()#org/mockito/stubbing/Stubber/when(T)
io/corbel/iam/api/UserResourceTest/addDuplicatedOauthServiceIdentity()#javax/ws/rs/client/SyncInvoker/post(javax.ws.rs.client.Entity,java.lang.Class)
io/corbel/iam/api/UserResourceTest/addDuplicatedOauthServiceIdentity()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/iam/api/UserResourceTest/testUpdateScopesNotAllow()#io/corbel/iam/api/UserResourceTestBase/getUserClient(java.lang.String)
io/corbel/iam/api/UserResourceTest/testUpdateScopesNotAllow()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/api/UserResourceTest/testUpdateScopesNotAllow()#org/mockito/Mockito/when(T)
io/corbel/iam/api/UserResourceTest/testUpdateScopesNotAllow()#io/corbel/iam/model/User/User()
io/corbel/iam/api/UserResourceTest/testUpdateScopesNotAllow()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/iam/api/UserResourceTest/testUpdateScopesNotAllow()#java/util/Set/add(E)
io/corbel/iam/api/UserResourceTest/testUpdateScopesNotAllow()#javax/ws/rs/client/Entity/json(T)
io/corbel/iam/api/UserResourceTest/testUpdateScopesNotAllow()#io/corbel/iam/api/UserResourceTestBase/createTestUser()
io/corbel/iam/api/UserResourceTest/testUpdateScopesNotAllow()#io/corbel/iam/service/UserService/findById(java.lang.String)
io/corbel/iam/api/UserResourceTest/testUpdateScopesNotAllow()#java/util/HashSet/HashSet(java.util.Collection)
io/corbel/iam/api/UserResourceTest/testUpdateScopesNotAllow()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/iam/api/UserResourceTest/testUpdateScopesNotAllow()#io/corbel/iam/model/User/setScopes(java.util.Set)
io/corbel/iam/api/UserResourceTest/testUpdateScopesNotAllow()#io/corbel/iam/service/DomainService/scopesAllowedInDomain(java.util.Set,io.corbel.iam.model.Domain)
io/corbel/iam/api/UserResourceTest/testUpdateScopesNotAllow()#javax/ws/rs/client/SyncInvoker/put(javax.ws.rs.client.Entity,java.lang.Class)
io/corbel/iam/api/UserResourceTest/testUpdateScopesNotAllow()#javax/ws/rs/core/Response/getStatus()
io/corbel/iam/api/UserResourceTest/addMeIdentity()#org/mockito/ArgumentCaptor/getValue()
io/corbel/iam/api/UserResourceTest/addMeIdentity()#io/corbel/iam/model/Identity/setOauthService(java.lang.String)
io/corbel/iam/api/UserResourceTest/addMeIdentity()#org/mockito/Mockito/when(T)
io/corbel/iam/api/UserResourceTest/addMeIdentity()#io/corbel/iam/service/IdentityService/addIdentity(io.corbel.iam.model.Identity)
io/corbel/iam/api/UserResourceTest/addMeIdentity()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/iam/api/UserResourceTest/addMeIdentity()#io/corbel/iam/model/Identity/Identity()
io/corbel/iam/api/UserResourceTest/addMeIdentity()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/iam/api/UserResourceTest/addMeIdentity()#javax/ws/rs/core/Response/getStatus()
io/corbel/iam/api/UserResourceTest/addMeIdentity()#javax/ws/rs/client/Entity/json(T)
io/corbel/iam/api/UserResourceTest/addMeIdentity()#io/corbel/iam/model/Identity/setOauthId(java.lang.String)
io/corbel/iam/api/UserResourceTest/addMeIdentity()#io/corbel/iam/api/UserResourceTestBase/createTestUser()
io/corbel/iam/api/UserResourceTest/addMeIdentity()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/iam/api/UserResourceTest/addMeIdentity()#io/corbel/iam/service/UserService/findById(java.lang.String)
io/corbel/iam/api/UserResourceTest/addMeIdentity()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/iam/api/UserResourceTest/addMeIdentity()#io/corbel/iam/service/DomainService/oAuthServiceAllowedInDomain(java.lang.String,io.corbel.iam.model.Domain)
io/corbel/iam/api/UserResourceTest/addMeIdentity()#io/corbel/iam/model/Identity/getOauthService()
io/corbel/iam/api/UserResourceTest/addMeIdentity()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/api/UserResourceTest/addMeIdentity()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/iam/api/UserResourceTest/addMeIdentity()#io/corbel/iam/model/Identity/getDomain()
io/corbel/iam/api/UserResourceTest/addMeIdentity()#io/corbel/iam/model/Identity/getOauthId()
io/corbel/iam/api/UserResourceTest/addMeIdentity()#io/corbel/iam/model/Identity/getUserId()
io/corbel/iam/api/UserResourceTest/addMeIdentity()#javax/ws/rs/client/WebTarget/request(java.lang.String[])
io/corbel/iam/api/UserResourceTest/addMeIdentity()#org/mockito/ArgumentCaptor/forClass(java.lang.Class)
io/corbel/iam/api/UserResourceTest/addMeIdentity()#io/corbel/iam/service/DomainService/scopesAllowedInDomain(java.util.Set,io.corbel.iam.model.Domain)
io/corbel/iam/api/UserResourceTest/addMeIdentity()#org/mockito/Mockito/verify(T)
io/corbel/iam/api/UserResourceTest/addMeIdentity()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/iam/api/UserResourceTest/addMeIdentity()#org/mockito/ArgumentCaptor/capture()
io/corbel/iam/api/UserResourceTest/addMeIdentity()#javax/ws/rs/client/SyncInvoker/post(javax.ws.rs.client.Entity,java.lang.Class)
io/corbel/iam/api/UserResourceTest/addMeIdentity()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/iam/api/UserResourceTest/addIdentityWithNullUser()#io/corbel/iam/service/DomainService/oAuthServiceAllowedInDomain(java.lang.String,io.corbel.iam.model.Domain)
io/corbel/iam/api/UserResourceTest/addIdentityWithNullUser()#javax/ws/rs/core/Response/Status/getStatusCode()
io/corbel/iam/api/UserResourceTest/addIdentityWithNullUser()#io/corbel/iam/model/Identity/setOauthService(java.lang.String)
io/corbel/iam/api/UserResourceTest/addIdentityWithNullUser()#javax/ws/rs/client/WebTarget/request(java.lang.String[])
io/corbel/iam/api/UserResourceTest/addIdentityWithNullUser()#org/mockito/Mockito/when(T)
io/corbel/iam/api/UserResourceTest/addIdentityWithNullUser()#io/corbel/iam/service/DomainService/scopesAllowedInDomain(java.util.Set,io.corbel.iam.model.Domain)
io/corbel/iam/api/UserResourceTest/addIdentityWithNullUser()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/iam/api/UserResourceTest/addIdentityWithNullUser()#io/corbel/iam/model/Identity/Identity()
io/corbel/iam/api/UserResourceTest/addIdentityWithNullUser()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/iam/api/UserResourceTest/addIdentityWithNullUser()#javax/ws/rs/core/Response/getStatus()
io/corbel/iam/api/UserResourceTest/addIdentityWithNullUser()#javax/ws/rs/client/Entity/json(T)
io/corbel/iam/api/UserResourceTest/addIdentityWithNullUser()#io/corbel/iam/model/Identity/setOauthId(java.lang.String)
io/corbel/iam/api/UserResourceTest/addIdentityWithNullUser()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/iam/api/UserResourceTest/addIdentityWithNullUser()#io/corbel/iam/service/UserService/findById(java.lang.String)
io/corbel/iam/api/UserResourceTest/addIdentityWithNullUser()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/api/UserResourceTest/addIdentityWithNullUser()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/iam/api/UserResourceTest/addIdentityWithNullUser()#javax/ws/rs/client/SyncInvoker/post(javax.ws.rs.client.Entity,java.lang.Class)
io/corbel/iam/api/UserResourceTest/addIdentityWithNullUser()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/iam/api/UserResourceTest/testUpdateUsername()#io/corbel/iam/api/UserResourceTestBase/getUserClient(java.lang.String)
io/corbel/iam/api/UserResourceTest/testUpdateUsername()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/api/UserResourceTest/testUpdateUsername()#org/mockito/ArgumentCaptor/getValue()
io/corbel/iam/api/UserResourceTest/testUpdateUsername()#io/corbel/iam/model/User/getUsername()
io/corbel/iam/api/UserResourceTest/testUpdateUsername()#org/mockito/Mockito/when(T)
io/corbel/iam/api/UserResourceTest/testUpdateUsername()#io/corbel/iam/model/User/User()
io/corbel/iam/api/UserResourceTest/testUpdateUsername()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/iam/api/UserResourceTest/testUpdateUsername()#javax/ws/rs/client/Entity/json(T)
io/corbel/iam/api/UserResourceTest/testUpdateUsername()#io/corbel/iam/service/UserService/findById(java.lang.String)
io/corbel/iam/api/UserResourceTest/testUpdateUsername()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/iam/api/UserResourceTest/testUpdateUsername()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/iam/api/UserResourceTest/testUpdateUsername()#org/mockito/ArgumentCaptor/forClass(java.lang.Class)
io/corbel/iam/api/UserResourceTest/testUpdateUsername()#io/corbel/iam/service/DomainService/scopesAllowedInDomain(java.util.Set,io.corbel.iam.model.Domain)
io/corbel/iam/api/UserResourceTest/testUpdateUsername()#org/mockito/Mockito/verify(T)
io/corbel/iam/api/UserResourceTest/testUpdateUsername()#io/corbel/iam/model/User/setUsername(java.lang.String)
io/corbel/iam/api/UserResourceTest/testUpdateUsername()#io/corbel/iam/api/UserResourceTestBase/getTestUser()
io/corbel/iam/api/UserResourceTest/testUpdateUsername()#javax/ws/rs/client/SyncInvoker/put(javax.ws.rs.client.Entity,java.lang.Class)
io/corbel/iam/api/UserResourceTest/testUpdateUsername()#javax/ws/rs/core/Response/getStatus()
io/corbel/iam/api/UserResourceTest/testUpdateUsername()#io/corbel/iam/service/UserService/update(io.corbel.iam.model.User)
io/corbel/iam/api/UserResourceTest/testUpdateUsername()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/iam/api/UserResourceTest/testUpdateUsername()#org/mockito/ArgumentCaptor/capture()
io/corbel/iam/api/UserResourceTest/testScopeNotAllowed()#io/corbel/iam/api/UserResourceTestBase/getUserClient(java.lang.String)
io/corbel/iam/api/UserResourceTest/testScopeNotAllowed()#io/corbel/iam/service/UserService/create(java.lang.String,io.corbel.iam.model.User)
io/corbel/iam/api/UserResourceTest/testScopeNotAllowed()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/api/UserResourceTest/testScopeNotAllowed()#org/mockito/Mockito/when(T)
io/corbel/iam/api/UserResourceTest/testScopeNotAllowed()#io/corbel/iam/service/DomainService/scopesAllowedInDomain(java.util.Set,io.corbel.iam.model.Domain)
io/corbel/iam/api/UserResourceTest/testScopeNotAllowed()#javax/ws/rs/client/Entity/json(T)
io/corbel/iam/api/UserResourceTest/testScopeNotAllowed()#io/corbel/iam/api/UserResourceTestBase/createTestUser()
io/corbel/iam/api/UserResourceTest/testScopeNotAllowed()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/iam/api/UserResourceTest/testScopeNotAllowed()#io/corbel/iam/api/UserResourceTestBase/removeId(io.corbel.iam.model.User)
io/corbel/iam/api/UserResourceTest/testScopeNotAllowed()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/iam/api/UserResourceTest/testScopeNotAllowed()#javax/ws/rs/client/SyncInvoker/put(javax.ws.rs.client.Entity,java.lang.Class)
io/corbel/iam/api/UserResourceTest/testScopeNotAllowed()#javax/ws/rs/core/Response/getStatus()
io/corbel/iam/api/UserResourceTest/testScopeNotAllowed()#io/corbel/iam/service/UserService/findById(java.lang.String)
io/corbel/iam/api/UserResourceTest/testScopeNotAllowed()#org/mockito/Matchers/eq(T)
io/corbel/iam/api/UserResourceTest/sendEmailConfirmationNotExistsUser()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/iam/api/UserResourceTest/sendEmailConfirmationNotExistsUser()#javax/ws/rs/core/Response/Status/getStatusCode()
io/corbel/iam/api/UserResourceTest/sendEmailConfirmationNotExistsUser()#javax/ws/rs/client/WebTarget/request(java.lang.String[])
io/corbel/iam/api/UserResourceTest/sendEmailConfirmationNotExistsUser()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/iam/api/UserResourceTest/sendEmailConfirmationNotExistsUser()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/iam/api/UserResourceTest/sendEmailConfirmationNotExistsUser()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/iam/api/UserResourceTest/sendEmailConfirmationNotExistsUser()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/iam/api/UserResourceTest/sendEmailConfirmationNotExistsUser()#javax/ws/rs/client/SyncInvoker/get(java.lang.Class)
io/corbel/iam/api/UserResourceTest/sendEmailConfirmationNotExistsUser()#javax/ws/rs/core/Response/getStatus()
io/corbel/iam/api/UserResourceTest/testSignOutMe()#io/corbel/lib/ws/auth/AuthorizationInfo/getToken()
io/corbel/iam/api/UserResourceTest/testSignOutMe()#javax/ws/rs/client/WebTarget/request(java.lang.String[])
io/corbel/iam/api/UserResourceTest/testSignOutMe()#org/mockito/Mockito/when(T)
io/corbel/iam/api/UserResourceTest/testSignOutMe()#org/mockito/Mockito/verify(T)
io/corbel/iam/api/UserResourceTest/testSignOutMe()#io/corbel/iam/api/UserResourceTestBase/getTestUser()
io/corbel/iam/api/UserResourceTest/testSignOutMe()#io/corbel/lib/ws/auth/AuthorizationInfo/getUserId()
io/corbel/iam/api/UserResourceTest/testSignOutMe()#javax/ws/rs/client/Entity/json(T)
io/corbel/iam/api/UserResourceTest/testSignOutMe()#io/corbel/iam/service/UserService/findUserDomain(java.lang.String)
io/corbel/iam/api/UserResourceTest/testSignOutMe()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/iam/api/UserResourceTest/testSignOutMe()#io/corbel/iam/service/UserService/findById(java.lang.String)
io/corbel/iam/api/UserResourceTest/testSignOutMe()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/iam/api/UserResourceTest/testSignOutMe()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/api/UserResourceTest/testSignOutMe()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/iam/api/UserResourceTest/testSignOutMe()#io/corbel/iam/service/UserService/signOut(java.lang.String,java.util.Optional)
io/corbel/iam/api/UserResourceTest/testSignOutMe()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/iam/api/UserResourceTest/testSignOutMe()#java/util/Optional/of(T)
io/corbel/iam/api/UserResourceTest/testSignOutMe()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/iam/api/UserResourceTest/testSignOutMe()#javax/ws/rs/client/SyncInvoker/put(javax.ws.rs.client.Entity,java.lang.Class)
io/corbel/iam/api/UserResourceTest/testSignOutMe()#javax/ws/rs/core/Response/getStatus()
io/corbel/iam/api/UserResourceTest/testUserAlreadyExists()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/api/UserResourceTest/testUserAlreadyExists()#io/corbel/iam/service/DomainService/scopesAllowedInDomain(java.util.Set,io.corbel.iam.model.Domain)
io/corbel/iam/api/UserResourceTest/testUserAlreadyExists()#io/corbel/iam/api/UserResourceTestBase/getTestUser()
io/corbel/iam/api/UserResourceTest/testUserAlreadyExists()#javax/ws/rs/core/Response/getStatus()
io/corbel/iam/api/UserResourceTest/testUserAlreadyExists()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/iam/api/UserResourceTest/testUserAlreadyExists()#javax/ws/rs/client/Entity/json(T)
io/corbel/iam/api/UserResourceTest/testUserAlreadyExists()#org/mockito/Matchers/any()
io/corbel/iam/api/UserResourceTest/testUserAlreadyExists()#org/mockito/Matchers/eq(T)
io/corbel/iam/api/UserResourceTest/testUserAlreadyExists()#javax/ws/rs/core/Response/readEntity(java.lang.Class)
io/corbel/iam/api/UserResourceTest/testUserAlreadyExists()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/iam/api/UserResourceTest/testUserAlreadyExists()#io/corbel/iam/service/UserService/create(java.lang.String,io.corbel.iam.model.User)
io/corbel/iam/api/UserResourceTest/testUserAlreadyExists()#io/corbel/lib/ws/model/Error/getError()
io/corbel/iam/api/UserResourceTest/testUserAlreadyExists()#org/mockito/Mockito/when(T)
io/corbel/iam/api/UserResourceTest/testUserAlreadyExists()#io/corbel/iam/model/Entity/setId(java.lang.String)
io/corbel/iam/api/UserResourceTest/testUserAlreadyExists()#io/corbel/iam/api/UserResourceTestBase/addUserClient()
io/corbel/iam/api/UserResourceTest/testUserAlreadyExists()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/iam/api/UserResourceTest/testUserAlreadyExists()#javax/ws/rs/client/SyncInvoker/post(javax.ws.rs.client.Entity,java.lang.Class)
io/corbel/iam/api/UserResourceTest/testUserAlreadyExists()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/notifications/ioc/NotificationsListenerIoc/getMailEventHandler(io.corbel.notifications.service.SenderNotificationsService)#io/corbel/notifications/eventbus/NotificationEventHandler/NotificationEventHandler(io.corbel.notifications.service.SenderNotificationsService)
io/corbel/iam/auth/provider/FacebookProviderTest/before()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/auth/provider/FacebookProviderTest/before()#io/corbel/iam/auth/provider/FacebookProvider/FacebookProvider(io.corbel.iam.repository.IdentityRepository)
io/corbel/iam/auth/provider/FacebookProviderTest/before()#io/corbel/iam/model/Identity/Identity()
io/corbel/iam/auth/provider/FacebookProviderTest/before()#io/corbel/iam/repository/IdentityRepository/findByOauthIdAndDomainAndOauthService(java.lang.String,java.lang.String,java.lang.String)
io/corbel/iam/auth/provider/FacebookProviderTest/before()#io/corbel/iam/model/Identity/setOauthId(java.lang.String)
io/corbel/iam/auth/provider/FacebookProviderTest/before()#java/util/Map/put(K,V)
io/corbel/iam/auth/provider/FacebookProviderTest/before()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/iam/auth/provider/FacebookProviderTest/before()#org/mockito/Mockito/when(T)
io/corbel/iam/auth/provider/FacebookProviderTest/before()#io/corbel/iam/auth/provider/Provider/setConfiguration(java.util.Map)
io/corbel/iam/auth/provider/FacebookProviderTest/before()#java/util/HashMap/HashMap()
io/corbel/iam/auth/provider/FacebookProviderTest/isAuthenticatedWithTokenTest()#io/corbel/iam/auth/OauthParams/OauthParams()
io/corbel/iam/auth/provider/FacebookProviderTest/isAuthenticatedWithTokenTest()#io/corbel/iam/auth/provider/Provider/getIdentity(io.corbel.iam.auth.OauthParams,java.lang.String,java.lang.String)
io/corbel/iam/auth/provider/FacebookProviderTest/isAuthenticatedWithTokenTest()#org/fest/assertions/api/AbstractAssert/isNotNull()
io/corbel/iam/auth/provider/FacebookProviderTest/isAuthenticatedWithTokenTest()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/iam/auth/provider/FacebookProviderTest/isAuthenticatedWithTokenTest()#org/fest/assertions/api/Assertions/assertThat(T)
io/corbel/iam/auth/provider/FacebookProviderTest/isAuthenticatedWithTokenTest()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/iam/auth/provider/FacebookProviderTest/isAuthenticatedWithTokenTest()#io/corbel/iam/auth/OauthParams/setAccessToken(java.lang.String)
io/corbel/iam/auth/provider/FacebookProviderTest/isAuthenticatedWithTokenTest()#io/corbel/iam/model/Identity/getOauthId()
io/corbel/iam/auth/provider/FacebookProviderTest/getAuthUrlTest()#java/net/URI/URI(java.lang.String)
io/corbel/iam/auth/provider/FacebookProviderTest/getAuthUrlTest()#java/net/URI/getQuery()
io/corbel/iam/auth/provider/FacebookProviderTest/getAuthUrlTest()#io/corbel/iam/auth/provider/Provider/getAuthUrl(java.lang.String)
io/corbel/iam/auth/provider/FacebookProviderTest/getAuthUrlTest()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/iam/auth/provider/FacebookProviderTest/getAuthUrlTest()#java/net/URI/getHost()
io/corbel/iam/auth/provider/FacebookProviderTest/getAuthUrlTest()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/iam/auth/provider/FacebookProviderTest/loginWithTestUser()#com/fasterxml/jackson/databind/JsonNode/asText()
io/corbel/iam/auth/provider/FacebookProviderTest/loginWithTestUser()#com/fasterxml/jackson/databind/JsonNode/path(java.lang.String)
io/corbel/iam/auth/provider/FacebookProviderTest/loginWithTestUser()#java/net/URI/URI(java.lang.String)
io/corbel/iam/auth/provider/FacebookProviderTest/loginWithTestUser()#java/net/URLEncoder/encode(java.lang.String,java.lang.String)
io/corbel/iam/auth/provider/FacebookProviderTest/loginWithTestUser()#javax/ws/rs/client/WebTarget/request()
io/corbel/iam/auth/provider/FacebookProviderTest/loginWithTestUser()#javax/ws/rs/client/Client/target(java.net.URI)
io/corbel/iam/auth/provider/FacebookProviderTest/loginWithTestUser()#java/lang/String/equals(java.lang.Object)
io/corbel/iam/auth/provider/FacebookProviderTest/loginWithTestUser()#javax/ws/rs/client/SyncInvoker/get(java.lang.Class)
io/corbel/iam/auth/provider/FacebookProviderTest/loginWithTestUser()#javax/ws/rs/client/ClientBuilder/newClient()
io/corbel/iam/auth/provider/FacebookProviderTest/loginWithTestUser()#java/lang/String/replace(java.lang.CharSequence,java.lang.CharSequence)
io/corbel/iam/auth/provider/FacebookProviderTest/loginWithTestUser()#com/fasterxml/jackson/databind/node/ObjectNode/path(java.lang.String)
io/corbel/iam/auth/provider/FacebookProviderTest/loginWithTestUser()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/iam/auth/provider/FacebookProviderTest/isAuthenticatedWithCodeTest()#io/corbel/iam/auth/OauthParams/OauthParams()
io/corbel/iam/auth/provider/FacebookProviderTest/isAuthenticatedWithCodeTest()#io/corbel/iam/auth/OauthParams/setCode(java.lang.String)
io/corbel/iam/auth/provider/FacebookProviderTest/isAuthenticatedWithCodeTest()#io/corbel/iam/auth/provider/Provider/getIdentity(io.corbel.iam.auth.OauthParams,java.lang.String,java.lang.String)
io/corbel/iam/api/GroupResource/create(java.lang.String,javax.ws.rs.core.UriInfo,io.corbel.iam.model.Group)#io/corbel/iam/model/Group/setDomain(java.lang.String)
io/corbel/iam/api/GroupResource/create(java.lang.String,javax.ws.rs.core.UriInfo,io.corbel.iam.model.Group)#javax/ws/rs/core/UriBuilder/build(java.lang.Object[])
io/corbel/iam/api/GroupResource/create(java.lang.String,javax.ws.rs.core.UriInfo,io.corbel.iam.model.Group)#io/corbel/iam/api/IamErrorResponseFactory/groupAlreadyExists(java.lang.String)
io/corbel/iam/api/GroupResource/create(java.lang.String,javax.ws.rs.core.UriInfo,io.corbel.iam.model.Group)#javax/ws/rs/core/UriInfo/getAbsolutePathBuilder()
io/corbel/iam/api/GroupResource/create(java.lang.String,javax.ws.rs.core.UriInfo,io.corbel.iam.model.Group)#io/corbel/iam/model/Group/getId()
io/corbel/iam/api/GroupResource/create(java.lang.String,javax.ws.rs.core.UriInfo,io.corbel.iam.model.Group)#io/corbel/iam/api/IamErrorResponseFactory/getInstance()
io/corbel/iam/api/GroupResource/create(java.lang.String,javax.ws.rs.core.UriInfo,io.corbel.iam.model.Group)#javax/ws/rs/core/UriBuilder/path(java.lang.String)
io/corbel/iam/api/GroupResource/create(java.lang.String,javax.ws.rs.core.UriInfo,io.corbel.iam.model.Group)#javax/ws/rs/core/Response/created(java.net.URI)
io/corbel/iam/api/GroupResource/create(java.lang.String,javax.ws.rs.core.UriInfo,io.corbel.iam.model.Group)#io/corbel/iam/api/IamErrorResponseFactory/scopesNotExist(java.lang.String)
io/corbel/iam/api/GroupResource/create(java.lang.String,javax.ws.rs.core.UriInfo,io.corbel.iam.model.Group)#javax/ws/rs/core/Response/ResponseBuilder/build()
io/corbel/iam/api/GroupResource/create(java.lang.String,javax.ws.rs.core.UriInfo,io.corbel.iam.model.Group)#java/lang/Throwable/getMessage()
io/corbel/iam/api/GroupResource/create(java.lang.String,javax.ws.rs.core.UriInfo,io.corbel.iam.model.Group)#io/corbel/iam/service/GroupService/create(io.corbel.iam.model.Group)
io/corbel/iam/api/GroupResource/removeScopes(java.lang.String,java.lang.String,java.lang.String)#java/util/Optional/map(java.util.function.Function)
io/corbel/iam/api/GroupResource/removeScopes(java.lang.String,java.lang.String,java.lang.String)#io/corbel/iam/service/GroupService/getById(java.lang.String)
io/corbel/iam/api/GroupResource/removeScopes(java.lang.String,java.lang.String,java.lang.String)#java/util/Optional/orElseGet(java.util.function.Supplier)
io/corbel/iam/api/GroupResource/getAll(java.lang.String,io.corbel.lib.queries.jaxrs.QueryParameters)#javax/ws/rs/core/Response/ResponseBuilder/build()
io/corbel/iam/api/GroupResource/getAll(java.lang.String,io.corbel.lib.queries.jaxrs.QueryParameters)#io/corbel/lib/queries/jaxrs/QueryParameters/getQueries()
io/corbel/iam/api/GroupResource/getAll(java.lang.String,io.corbel.lib.queries.jaxrs.QueryParameters)#java/util/Optional/orElse(T)
io/corbel/iam/api/GroupResource/getAll(java.lang.String,io.corbel.lib.queries.jaxrs.QueryParameters)#io/corbel/lib/queries/jaxrs/QueryParameters/getPagination()
io/corbel/iam/api/GroupResource/getAll(java.lang.String,io.corbel.lib.queries.jaxrs.QueryParameters)#io/corbel/lib/queries/jaxrs/QueryParameters/getSort()
io/corbel/iam/api/GroupResource/getAll(java.lang.String,io.corbel.lib.queries.jaxrs.QueryParameters)#io/corbel/iam/service/GroupService/getAll(java.lang.String,java.util.List,io.corbel.lib.queries.request.Pagination,io.corbel.lib.queries.request.Sort)
io/corbel/iam/api/GroupResource/getAll(java.lang.String,io.corbel.lib.queries.jaxrs.QueryParameters)#javax/ws/rs/core/Response/ok(java.lang.Object)
io/corbel/iam/api/GroupResource/getAll(java.lang.String,io.corbel.lib.queries.jaxrs.QueryParameters)#java/util/Optional/orElseGet(java.util.function.Supplier)
io/corbel/iam/api/GroupResource/get(java.lang.String,java.lang.String)#java/util/Optional/map(java.util.function.Function)
io/corbel/iam/api/GroupResource/get(java.lang.String,java.lang.String)#io/corbel/iam/service/GroupService/getById(java.lang.String,java.lang.String)
io/corbel/iam/api/GroupResource/get(java.lang.String,java.lang.String)#java/util/Optional/orElseGet(java.util.function.Supplier)
io/corbel/iam/api/GroupResource/deleteGroup(java.lang.String,java.lang.String)#java/util/Optional/map(java.util.function.Function)
io/corbel/iam/api/GroupResource/deleteGroup(java.lang.String,java.lang.String)#io/corbel/iam/service/GroupService/getById(java.lang.String)
io/corbel/iam/api/GroupResource/deleteGroup(java.lang.String,java.lang.String)#java/util/Optional/orElseGet(java.util.function.Supplier)
io/corbel/iam/api/GroupResource/addScopes(java.lang.String,java.lang.String,java.util.List)#java/util/Optional/map(java.util.function.Function)
io/corbel/iam/api/GroupResource/addScopes(java.lang.String,java.lang.String,java.util.List)#io/corbel/iam/service/GroupService/getById(java.lang.String)
io/corbel/iam/api/GroupResource/addScopes(java.lang.String,java.lang.String,java.util.List)#java/util/Optional/orElseGet(java.util.function.Supplier)
io/corbel/iam/auth/google/api/impl/AbstractGoogleApiOperations/saveEntity(java.lang.String,T)#org/springframework/util/StringUtils/hasText(java.lang.String)
io/corbel/iam/auth/google/api/impl/AbstractGoogleApiOperations/saveEntity(java.lang.String,T)#org/springframework/web/client/RestTemplate/postForObject(java.lang.String,java.lang.Object,java.lang.Class,java.lang.Object[])
io/corbel/iam/auth/google/api/impl/AbstractGoogleApiOperations/saveEntity(java.lang.String,T)#org/springframework/web/client/RestTemplate/exchange(java.lang.String,org.springframework.http.HttpMethod,org.springframework.http.HttpEntity,java.lang.Class,java.lang.Object[])
io/corbel/iam/auth/google/api/impl/AbstractGoogleApiOperations/saveEntity(java.lang.String,T)#org/springframework/http/HttpEntity/HttpEntity(T)
io/corbel/iam/auth/google/api/impl/AbstractGoogleApiOperations/saveEntity(java.lang.String,T)#org/springframework/http/HttpEntity/getBody()
io/corbel/iam/auth/google/api/impl/AbstractGoogleApiOperations/saveEntity(java.lang.String,T)#java/lang/Object/getClass()
io/corbel/iam/auth/google/api/impl/AbstractGoogleApiOperations/saveEntity(java.lang.String,T)#io/corbel/iam/auth/google/api/ApiEntity/getId()
io/corbel/iam/auth/google/api/impl/AbstractGoogleApiOperations/deleteEntity(java.lang.String,io.corbel.iam.auth.google.api.ApiEntity)#io/corbel/iam/auth/google/api/ApiEntity/getId()
io/corbel/iam/auth/google/api/impl/AbstractGoogleApiOperations/deleteEntity(java.lang.String,io.corbel.iam.auth.google.api.ApiEntity)#io/corbel/iam/auth/google/api/impl/AbstractGoogleApiOperations/deleteEntity(java.lang.String,java.lang.String)
io/corbel/iam/auth/google/api/impl/AbstractGoogleApiOperations/deleteEntity(java.lang.String,java.lang.String)#org/springframework/web/client/RestTemplate/delete(java.lang.String,java.lang.Object[])
io/corbel/iam/auth/google/api/impl/AbstractGoogleApiOperations/requireAuthorization()#org/springframework/social/MissingAuthorizationException/MissingAuthorizationException(java.lang.String)
io/corbel/iam/auth/google/api/impl/AbstractGoogleApiOperations/patch(java.lang.String,java.lang.Object,java.lang.Class)#org/springframework/web/client/RestTemplate/exchange(java.lang.String,org.springframework.http.HttpMethod,org.springframework.http.HttpEntity,java.lang.Class,java.lang.Object[])
io/corbel/iam/auth/google/api/impl/AbstractGoogleApiOperations/patch(java.lang.String,java.lang.Object,java.lang.Class)#org/springframework/http/HttpEntity/HttpEntity(T)
io/corbel/iam/auth/google/api/impl/AbstractGoogleApiOperations/patch(java.lang.String,java.lang.Object,java.lang.Class)#org/springframework/http/HttpEntity/getBody()
io/corbel/iam/auth/google/api/impl/AbstractGoogleApiOperations/getEntity(java.lang.String,java.lang.Class)#org/springframework/web/client/RestTemplate/getForObject(java.lang.String,java.lang.Class,java.lang.Object[])
io/corbel/iam/api/ClientResourceTest/testCreateClientWithMoreScopesThanDomain()#javax/ws/rs/core/Response/Status/getStatusCode()
io/corbel/iam/api/ClientResourceTest/testCreateClientWithMoreScopesThanDomain()#javax/ws/rs/client/WebTarget/request()
io/corbel/iam/api/ClientResourceTest/testCreateClientWithMoreScopesThanDomain()#java/util/Optional/of(T)
io/corbel/iam/api/ClientResourceTest/testCreateClientWithMoreScopesThanDomain()#javax/ws/rs/core/Response/getStatus()
io/corbel/iam/api/ClientResourceTest/testCreateClientWithMoreScopesThanDomain()#javax/ws/rs/client/Entity/json(T)
io/corbel/iam/api/ClientResourceTest/testCreateClientWithMoreScopesThanDomain()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/iam/api/ClientResourceTest/testCreateClientWithMoreScopesThanDomain()#javax/ws/rs/client/SyncInvoker/post(javax.ws.rs.client.Entity,java.lang.Class)
io/corbel/iam/api/ClientResourceTest/testCreateClientWithMoreScopesThanDomain()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/api/ClientResourceTest/testCreateClientWithMoreScopesThanDomain()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/iam/api/ClientResourceTest/testCreateClientWithMoreScopesThanDomain()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/iam/api/ClientResourceTest/testCreateClientWithMoreScopesThanDomain()#org/mockito/Mockito/when(T)
io/corbel/iam/api/ClientResourceTest/testCreateClientWithMoreScopesThanDomain()#io/corbel/iam/api/ClientResourceTest/getClient()
io/corbel/iam/api/ClientResourceTest/testCreateClientWithMoreScopesThanDomain()#io/corbel/iam/service/DomainService/scopesAllowedInDomain(java.util.Set,io.corbel.iam.model.Domain)
io/corbel/iam/api/ClientResourceTest/testCreateClientWithMoreScopesThanDomain()#org/mockito/Mockito/verifyNoMoreInteractions(java.lang.Object[])
io/corbel/iam/api/ClientResourceTest/testCreateClientWithMoreScopesThanDomain()#org/mockito/Mockito/verify(T)
io/corbel/iam/api/ClientResourceTest/testCreateClientWithMoreScopesThanDomain()#io/corbel/iam/model/Client/getScopes()
io/corbel/iam/api/ClientResourceTest/testCreateClientWithMoreScopesThanDomain()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/iam/api/ClientResourceTest/testCreateClientWithMoreScopesThanDomain()#org/mockito/Matchers/eq(T)
io/corbel/iam/api/ClientResourceTest/testCreateClientWithMoreScopesThanDomain()#io/corbel/iam/service/DomainService/getDomain(java.lang.String)
io/corbel/iam/api/ClientResourceTest/testCreateClientWithMoreScopesThanDomain()#org/junit/Assert/assertEquals(long,long)
io/corbel/iam/api/ClientResourceTest/getClient()#io/corbel/iam/model/Client/setName(java.lang.String)
io/corbel/iam/api/ClientResourceTest/getClient()#io/corbel/iam/model/Entity/setId(java.lang.String)
io/corbel/iam/api/ClientResourceTest/getClient()#io/corbel/iam/model/Client/Client()
io/corbel/iam/api/ClientResourceTest/getClient()#io/corbel/iam/model/Client/setKey(java.lang.String)
io/corbel/iam/api/ClientResourceTest/getClient()#io/corbel/iam/model/Client/setDomain(java.lang.String)
io/corbel/iam/api/ClientResourceTest/testCreateClientWithNonexistentDomain()#javax/ws/rs/core/Response/Status/getStatusCode()
io/corbel/iam/api/ClientResourceTest/testCreateClientWithNonexistentDomain()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/iam/api/ClientResourceTest/testCreateClientWithNonexistentDomain()#javax/ws/rs/client/WebTarget/request()
io/corbel/iam/api/ClientResourceTest/testCreateClientWithNonexistentDomain()#javax/ws/rs/core/Response/getStatus()
io/corbel/iam/api/ClientResourceTest/testCreateClientWithNonexistentDomain()#javax/ws/rs/client/Entity/json(T)
io/corbel/iam/api/ClientResourceTest/testCreateClientWithNonexistentDomain()#java/util/Optional/empty()
io/corbel/iam/api/ClientResourceTest/testCreateClientWithNonexistentDomain()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/iam/api/ClientResourceTest/testCreateClientWithNonexistentDomain()#javax/ws/rs/client/SyncInvoker/post(javax.ws.rs.client.Entity,java.lang.Class)
io/corbel/iam/api/ClientResourceTest/testCreateClientWithNonexistentDomain()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/api/ClientResourceTest/testCreateClientWithNonexistentDomain()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/iam/api/ClientResourceTest/testCreateClientWithNonexistentDomain()#org/mockito/Mockito/when(T)
io/corbel/iam/api/ClientResourceTest/testCreateClientWithNonexistentDomain()#io/corbel/iam/api/ClientResourceTest/getClient()
io/corbel/iam/api/ClientResourceTest/testCreateClientWithNonexistentDomain()#org/mockito/Mockito/verifyNoMoreInteractions(java.lang.Object[])
io/corbel/iam/api/ClientResourceTest/testCreateClientWithNonexistentDomain()#org/mockito/Mockito/verify(T)
io/corbel/iam/api/ClientResourceTest/testCreateClientWithNonexistentDomain()#org/mockito/Matchers/eq(T)
io/corbel/iam/api/ClientResourceTest/testCreateClientWithNonexistentDomain()#io/corbel/iam/service/DomainService/getDomain(java.lang.String)
io/corbel/iam/api/ClientResourceTest/testCreateClientWithNonexistentDomain()#org/junit/Assert/assertEquals(long,long)
io/corbel/iam/api/ClientResourceTest/testGetClientOfAnotherDomain()#javax/ws/rs/core/Response/Status/getStatusCode()
io/corbel/iam/api/ClientResourceTest/testGetClientOfAnotherDomain()#javax/ws/rs/client/WebTarget/request(javax.ws.rs.core.MediaType[])
io/corbel/iam/api/ClientResourceTest/testGetClientOfAnotherDomain()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/iam/api/ClientResourceTest/testGetClientOfAnotherDomain()#java/util/Optional/of(T)
io/corbel/iam/api/ClientResourceTest/testGetClientOfAnotherDomain()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/api/ClientResourceTest/testGetClientOfAnotherDomain()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/iam/api/ClientResourceTest/testGetClientOfAnotherDomain()#org/mockito/Mockito/when(T)
io/corbel/iam/api/ClientResourceTest/testGetClientOfAnotherDomain()#io/corbel/iam/api/ClientResourceTest/getClient()
io/corbel/iam/api/ClientResourceTest/testGetClientOfAnotherDomain()#io/corbel/iam/service/ClientService/find(java.lang.String)
io/corbel/iam/api/ClientResourceTest/testGetClientOfAnotherDomain()#org/mockito/Mockito/verify(T)
io/corbel/iam/api/ClientResourceTest/testGetClientOfAnotherDomain()#javax/ws/rs/client/SyncInvoker/get(java.lang.Class)
io/corbel/iam/api/ClientResourceTest/testGetClientOfAnotherDomain()#javax/ws/rs/core/Response/getStatus()
io/corbel/iam/api/ClientResourceTest/testGetClientOfAnotherDomain()#io/corbel/iam/model/Client/setDomain(java.lang.String)
io/corbel/iam/api/ClientResourceTest/testGetClientOfAnotherDomain()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/iam/api/ClientResourceTest/testGetClientOfAnotherDomain()#org/mockito/Matchers/eq(T)
io/corbel/iam/api/ClientResourceTest/testGetClientOfAnotherDomain()#org/junit/Assert/assertEquals(long,long)
io/corbel/iam/api/ClientResourceTest/testDeleteClient()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/iam/api/ClientResourceTest/testDeleteClient()#javax/ws/rs/core/Response/Status/getStatusCode()
io/corbel/iam/api/ClientResourceTest/testDeleteClient()#org/mockito/Mockito/verify(T)
io/corbel/iam/api/ClientResourceTest/testDeleteClient()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/iam/api/ClientResourceTest/testDeleteClient()#javax/ws/rs/client/WebTarget/request()
io/corbel/iam/api/ClientResourceTest/testDeleteClient()#javax/ws/rs/core/Response/getStatus()
io/corbel/iam/api/ClientResourceTest/testDeleteClient()#io/corbel/iam/service/ClientService/delete(java.lang.String,java.lang.String)
io/corbel/iam/api/ClientResourceTest/testDeleteClient()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/iam/api/ClientResourceTest/testDeleteClient()#javax/ws/rs/client/SyncInvoker/delete(java.lang.Class)
io/corbel/iam/api/ClientResourceTest/testDeleteClient()#org/mockito/Matchers/eq(T)
io/corbel/iam/api/ClientResourceTest/testDeleteClient()#org/junit/Assert/assertEquals(long,long)
io/corbel/iam/api/ClientResourceTest/setup()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/api/ClientResourceTest/setup()#io/corbel/lib/ws/auth/AuthorizationInfo/getToken()
io/corbel/iam/api/ClientResourceTest/setup()#org/mockito/Mockito/when(T)
io/corbel/iam/api/ClientResourceTest/setup()#org/mockito/Mockito/reset(T[])
io/corbel/iam/api/ClientResourceTest/testModifyClient()#io/corbel/iam/api/ClientResourceTest/getClient()
io/corbel/iam/api/ClientResourceTest/testModifyClient()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/iam/api/ClientResourceTest/testModifyClient()#javax/ws/rs/client/WebTarget/request()
io/corbel/iam/api/ClientResourceTest/testModifyClient()#javax/ws/rs/client/Entity/json(T)
io/corbel/iam/api/ClientResourceTest/testModifyClient()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/iam/api/ClientResourceTest/testModifyClient()#io/corbel/iam/model/Entity/getId()
io/corbel/iam/api/ClientResourceTest/testModifyClient()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/iam/api/ClientResourceTest/testModifyClient()#javax/ws/rs/core/Response/Status/getStatusCode()
io/corbel/iam/api/ClientResourceTest/testModifyClient()#org/mockito/ArgumentCaptor/getValue()
io/corbel/iam/api/ClientResourceTest/testModifyClient()#org/mockito/ArgumentCaptor/forClass(java.lang.Class)
io/corbel/iam/api/ClientResourceTest/testModifyClient()#org/mockito/Mockito/verify(T)
io/corbel/iam/api/ClientResourceTest/testModifyClient()#javax/ws/rs/client/SyncInvoker/put(javax.ws.rs.client.Entity,java.lang.Class)
io/corbel/iam/api/ClientResourceTest/testModifyClient()#javax/ws/rs/core/Response/getStatus()
io/corbel/iam/api/ClientResourceTest/testModifyClient()#io/corbel/iam/service/ClientService/update(io.corbel.iam.model.Client)
io/corbel/iam/api/ClientResourceTest/testModifyClient()#org/mockito/ArgumentCaptor/capture()
io/corbel/iam/api/ClientResourceTest/testModifyClient()#io/corbel/iam/model/Client/getDomain()
io/corbel/iam/api/ClientResourceTest/testModifyClient()#org/junit/Assert/assertEquals(long,long)
io/corbel/iam/api/ClientResourceTest/testModifyClient()#org/junit/Assert/assertEquals(java.lang.Object,java.lang.Object)
io/corbel/iam/api/ClientResourceTest/testCreateClient()#javax/ws/rs/client/WebTarget/request()
io/corbel/iam/api/ClientResourceTest/testCreateClient()#java/util/Optional/of(T)
io/corbel/iam/api/ClientResourceTest/testCreateClient()#javax/ws/rs/core/Response/getStatus()
io/corbel/iam/api/ClientResourceTest/testCreateClient()#javax/ws/rs/client/Entity/json(T)
io/corbel/iam/api/ClientResourceTest/testCreateClient()#javax/ws/rs/core/Response/getHeaderString(java.lang.String)
io/corbel/iam/api/ClientResourceTest/testCreateClient()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/iam/api/ClientResourceTest/testCreateClient()#io/corbel/iam/model/Entity/getId()
io/corbel/iam/api/ClientResourceTest/testCreateClient()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/api/ClientResourceTest/testCreateClient()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/iam/api/ClientResourceTest/testCreateClient()#javax/ws/rs/core/Response/Status/getStatusCode()
io/corbel/iam/api/ClientResourceTest/testCreateClient()#org/mockito/ArgumentCaptor/getValue()
io/corbel/iam/api/ClientResourceTest/testCreateClient()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/iam/api/ClientResourceTest/testCreateClient()#org/mockito/Mockito/when(T)
io/corbel/iam/api/ClientResourceTest/testCreateClient()#io/corbel/iam/api/ClientResourceTest/getClient()
io/corbel/iam/api/ClientResourceTest/testCreateClient()#org/mockito/ArgumentCaptor/forClass(java.lang.Class)
io/corbel/iam/api/ClientResourceTest/testCreateClient()#io/corbel/iam/service/DomainService/scopesAllowedInDomain(java.util.Set,io.corbel.iam.model.Domain)
io/corbel/iam/api/ClientResourceTest/testCreateClient()#org/mockito/Mockito/verifyNoMoreInteractions(java.lang.Object[])
io/corbel/iam/api/ClientResourceTest/testCreateClient()#org/mockito/Mockito/verify(T)
io/corbel/iam/api/ClientResourceTest/testCreateClient()#io/corbel/iam/model/Client/getScopes()
io/corbel/iam/api/ClientResourceTest/testCreateClient()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/iam/api/ClientResourceTest/testCreateClient()#org/junit/Assert/assertTrue(boolean)
io/corbel/iam/api/ClientResourceTest/testCreateClient()#io/corbel/iam/service/ClientService/createClient(io.corbel.iam.model.Client)
io/corbel/iam/api/ClientResourceTest/testCreateClient()#org/mockito/ArgumentCaptor/capture()
io/corbel/iam/api/ClientResourceTest/testCreateClient()#io/corbel/iam/model/Client/getDomain()
io/corbel/iam/api/ClientResourceTest/testCreateClient()#org/mockito/Matchers/eq(T)
io/corbel/iam/api/ClientResourceTest/testCreateClient()#io/corbel/iam/service/DomainService/getDomain(java.lang.String)
io/corbel/iam/api/ClientResourceTest/testCreateClient()#org/junit/Assert/assertEquals(long,long)
io/corbel/iam/api/ClientResourceTest/testCreateClient()#org/junit/Assert/assertEquals(java.lang.Object,java.lang.Object)
io/corbel/iam/api/ClientResourceTest/testCreateClient()#java/lang/String/endsWith(java.lang.String)
io/corbel/iam/api/ClientResourceTest/testCreateClient()#javax/ws/rs/client/SyncInvoker/post(javax.ws.rs.client.Entity,java.lang.Class)
io/corbel/iam/api/ClientResourceTest/testGetClientByDomain()#io/corbel/iam/api/ClientResourceTest/testGetClientByDomain()/$anonymous1/()
io/corbel/iam/api/ClientResourceTest/testGetClientByDomain()#javax/ws/rs/client/WebTarget/request(javax.ws.rs.core.MediaType[])
io/corbel/iam/api/ClientResourceTest/testGetClientByDomain()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/iam/api/ClientResourceTest/testGetClientByDomain()#java/util/List/add(E)
io/corbel/iam/api/ClientResourceTest/testGetClientByDomain()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/iam/api/ClientResourceTest/testGetClientByDomain()#javax/ws/rs/client/SyncInvoker/get(javax.ws.rs.core.GenericType)
io/corbel/iam/api/ClientResourceTest/testGetClientByDomain()#io/corbel/lib/queries/parser/PaginationParser/parse(int,int,int)
io/corbel/iam/api/ClientResourceTest/testGetClientByDomain()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/api/ClientResourceTest/testGetClientByDomain()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/iam/api/ClientResourceTest/testGetClientByDomain()#java/util/ArrayList/ArrayList()
io/corbel/iam/api/ClientResourceTest/testGetClientByDomain()#io/corbel/lib/queries/request/Pagination/Pagination(int,int)
io/corbel/iam/api/ClientResourceTest/testGetClientByDomain()#io/corbel/iam/service/ClientService/findClientsByDomain(java.lang.String,io.corbel.lib.queries.request.ResourceQuery,io.corbel.lib.queries.request.Pagination,io.corbel.lib.queries.request.Sort)
io/corbel/iam/api/ClientResourceTest/testGetClientByDomain()#org/mockito/Mockito/when(T)
io/corbel/iam/api/ClientResourceTest/testGetClientByDomain()#io/corbel/iam/api/ClientResourceTest/getClient()
io/corbel/iam/api/ClientResourceTest/testGetClientByDomain()#org/mockito/Matchers/any(java.lang.Class)
io/corbel/iam/api/ClientResourceTest/testGetClientByDomain()#org/mockito/Mockito/verify(T)
io/corbel/iam/api/ClientResourceTest/testGetClientByDomain()#org/mockito/Matchers/eq(T)
io/corbel/iam/api/ClientResourceTest/testGetClientByDomain()#org/junit/Assert/assertEquals(java.lang.Object,java.lang.Object)
io/corbel/iam/api/ClientResourceTest/testGetClient()#javax/ws/rs/client/WebTarget/request(javax.ws.rs.core.MediaType[])
io/corbel/iam/api/ClientResourceTest/testGetClient()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/iam/api/ClientResourceTest/testGetClient()#java/util/Optional/ofNullable(T)
io/corbel/iam/api/ClientResourceTest/testGetClient()#javax/ws/rs/client/SyncInvoker/get(java.lang.Class)
io/corbel/iam/api/ClientResourceTest/testGetClient()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/iam/api/ClientResourceTest/testGetClient()#io/corbel/iam/model/Entity/getId()
io/corbel/iam/api/ClientResourceTest/testGetClient()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/api/ClientResourceTest/testGetClient()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/iam/api/ClientResourceTest/testGetClient()#org/mockito/Mockito/when(T)
io/corbel/iam/api/ClientResourceTest/testGetClient()#io/corbel/iam/api/ClientResourceTest/getClient()
io/corbel/iam/api/ClientResourceTest/testGetClient()#io/corbel/iam/service/ClientService/find(java.lang.String)
io/corbel/iam/api/ClientResourceTest/testGetClient()#org/mockito/Mockito/verify(T)
io/corbel/iam/api/ClientResourceTest/testGetClient()#org/mockito/Matchers/eq(T)
io/corbel/iam/api/ClientResourceTest/testGetClient()#org/junit/Assert/assertEquals(java.lang.Object,java.lang.Object)
io/corbel/iam/api/ClientResourceTest/testGetUnknownClient()#javax/ws/rs/core/Response/Status/getStatusCode()
io/corbel/iam/api/ClientResourceTest/testGetUnknownClient()#org/mockito/Mockito/when(T)
io/corbel/iam/api/ClientResourceTest/testGetUnknownClient()#javax/ws/rs/client/WebTarget/request(javax.ws.rs.core.MediaType[])
io/corbel/iam/api/ClientResourceTest/testGetUnknownClient()#io/dropwizard/testing/junit/ResourceTestRule/client()
io/corbel/iam/api/ClientResourceTest/testGetUnknownClient()#java/util/Optional/empty()
io/corbel/iam/api/ClientResourceTest/testGetUnknownClient()#javax/ws/rs/client/Client/target(java.lang.String)
io/corbel/iam/api/ClientResourceTest/testGetUnknownClient()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/api/ClientResourceTest/testGetUnknownClient()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
io/corbel/iam/api/ClientResourceTest/testGetUnknownClient()#io/corbel/iam/service/ClientService/find(java.lang.String)
io/corbel/iam/api/ClientResourceTest/testGetUnknownClient()#org/mockito/Mockito/verify(T)
io/corbel/iam/api/ClientResourceTest/testGetUnknownClient()#javax/ws/rs/client/SyncInvoker/get(java.lang.Class)
io/corbel/iam/api/ClientResourceTest/testGetUnknownClient()#javax/ws/rs/core/Response/getStatus()
io/corbel/iam/api/ClientResourceTest/testGetUnknownClient()#org/mockito/Matchers/eq(T)
io/corbel/iam/api/ClientResourceTest/testGetUnknownClient()#org/junit/Assert/assertEquals(long,long)
io/corbel/resources/rem/operation/AutoOrient/apply(java.lang.String)#java/lang/Boolean/parseBoolean(java.lang.String)
io/corbel/resources/rem/operation/AutoOrient/apply(java.lang.String)#java/util/regex/Matcher/matches()
io/corbel/resources/rem/operation/AutoOrient/apply(java.lang.String)#org/im4java/core/IMOperation/IMOperation()
io/corbel/resources/rem/operation/AutoOrient/apply(java.lang.String)#io/corbel/resources/rem/operation/ImageOperation/getValues(java.lang.String,java.util.regex.Matcher)
io/corbel/resources/rem/operation/AutoOrient/apply(java.lang.String)#java/util/List/get(int)
io/corbel/resources/rem/operation/AutoOrient/apply(java.lang.String)#org/im4java/core/IMOps/autoOrient()
io/corbel/resources/rem/operation/AutoOrient/apply(java.lang.String)#java/util/regex/Pattern/matcher(java.lang.CharSequence)
io/corbel/resources/rem/operation/AutoOrient/apply(java.lang.String)#io/corbel/resources/rem/exception/ImageOperationsException/ImageOperationsException(java.lang.String,java.lang.Throwable)
io/corbel/resources/rem/operation/AutoOrient/apply(java.lang.String)#io/corbel/resources/rem/exception/ImageOperationsException/ImageOperationsException(java.lang.String)
io/corbel/oauth/service/DefaultUserService/sendMailResetPassword(java.lang.String,io.corbel.oauth.model.Client)#io/corbel/oauth/service/MailResetPasswordService/sendMailResetPassword(io.corbel.oauth.model.Client,java.lang.String,java.lang.String)
io/corbel/oauth/service/DefaultUserService/sendMailResetPassword(java.lang.String,io.corbel.oauth.model.Client)#io/corbel/oauth/model/User/getId()
io/corbel/oauth/service/DefaultUserService/sendMailResetPassword(java.lang.String,io.corbel.oauth.model.Client)#io/corbel/oauth/model/Client/getDomain()
io/corbel/oauth/service/DefaultUserService/sendMailResetPassword(java.lang.String,io.corbel.oauth.model.Client)#io/corbel/oauth/service/DefaultUserService/getUserByEmailAndDomain(java.lang.String,java.lang.String)
io/corbel/oauth/service/DefaultUserService/confirmEmail(java.lang.String)#io/corbel/oauth/model/User/setEmailValidated(java.lang.Boolean)
io/corbel/oauth/service/DefaultUserService/confirmEmail(java.lang.String)#io/corbel/oauth/model/User/getId()
io/corbel/oauth/service/DefaultUserService/confirmEmail(java.lang.String)#io/corbel/oauth/model/User/User()
io/corbel/oauth/service/DefaultUserService/confirmEmail(java.lang.String)#io/corbel/oauth/repository/UserRepository/findByEmail(java.lang.String)
io/corbel/oauth/service/DefaultUserService/confirmEmail(java.lang.String)#io/corbel/lib/mongo/repository/PartialUpdateRepository/patch(ID,E,java.lang.String[])
io/corbel/oauth/service/DefaultUserService/getUser(java.lang.String)#org/springframework/data/repository/CrudRepository/findOne(ID)
io/corbel/oauth/service/DefaultUserService/createUser(io.corbel.oauth.model.User,io.corbel.oauth.model.Client)#io/corbel/oauth/model/User/getEmail()
io/corbel/oauth/service/DefaultUserService/createUser(io.corbel.oauth.model.User,io.corbel.oauth.model.Client)#io/corbel/oauth/model/User/getId()
io/corbel/oauth/service/DefaultUserService/createUser(io.corbel.oauth.model.User,io.corbel.oauth.model.Client)#io/corbel/oauth/model/Client/getDomain()
io/corbel/oauth/service/DefaultUserService/createUser(io.corbel.oauth.model.User,io.corbel.oauth.model.Client)#io/corbel/oauth/model/User/setDomain(java.lang.String)
io/corbel/oauth/service/DefaultUserService/createUser(io.corbel.oauth.model.User,io.corbel.oauth.model.Client)#org/springframework/data/repository/CrudRepository/save(S)
io/corbel/oauth/service/DefaultUserService/createUser(io.corbel.oauth.model.User,io.corbel.oauth.model.Client)#io/corbel/oauth/repository/CreateUserException/DuplicatedUser/DuplicatedUser()
io/corbel/oauth/service/DefaultUserService/createUser(io.corbel.oauth.model.User,io.corbel.oauth.model.Client)#io/corbel/oauth/model/User/setEmailValidated(java.lang.Boolean)
io/corbel/oauth/service/DefaultUserService/createUser(io.corbel.oauth.model.User,io.corbel.oauth.model.Client)#io/corbel/oauth/service/MailValidationService/sendMailValidation(io.corbel.oauth.model.Client,java.lang.String,java.lang.String)
io/corbel/oauth/service/DefaultUserService/sendValidationEmail(io.corbel.oauth.model.User,io.corbel.oauth.model.Client)#io/corbel/oauth/model/User/getEmail()
io/corbel/oauth/service/DefaultUserService/sendValidationEmail(io.corbel.oauth.model.User,io.corbel.oauth.model.Client)#io/corbel/oauth/service/MailValidationService/sendMailValidation(io.corbel.oauth.model.Client,java.lang.String,java.lang.String)
io/corbel/oauth/service/DefaultUserService/sendValidationEmail(io.corbel.oauth.model.User,io.corbel.oauth.model.Client)#io/corbel/oauth/model/User/getId()
io/corbel/oauth/service/DefaultUserService/updateUser(io.corbel.oauth.model.User,io.corbel.oauth.model.User,io.corbel.oauth.model.Client)#io/corbel/oauth/model/User/getEmail()
io/corbel/oauth/service/DefaultUserService/updateUser(io.corbel.oauth.model.User,io.corbel.oauth.model.User,io.corbel.oauth.model.Client)#java/util/Objects/equals(java.lang.Object,java.lang.Object)
io/corbel/oauth/service/DefaultUserService/updateUser(io.corbel.oauth.model.User,io.corbel.oauth.model.User,io.corbel.oauth.model.Client)#io/corbel/oauth/service/MailValidationService/sendMailValidation(io.corbel.oauth.model.Client,java.lang.String,java.lang.String)
io/corbel/oauth/service/DefaultUserService/updateUser(io.corbel.oauth.model.User,io.corbel.oauth.model.User,io.corbel.oauth.model.Client)#io/corbel/oauth/model/User/updateFields(io.corbel.oauth.model.User)
io/corbel/oauth/service/DefaultUserService/updateUser(io.corbel.oauth.model.User,io.corbel.oauth.model.User,io.corbel.oauth.model.Client)#io/corbel/oauth/service/DefaultUserService/notifyChangePassword(io.corbel.oauth.model.Client,io.corbel.oauth.model.User)
io/corbel/oauth/service/DefaultUserService/updateUser(io.corbel.oauth.model.User,io.corbel.oauth.model.User,io.corbel.oauth.model.Client)#org/springframework/data/repository/CrudRepository/save(S)
io/corbel/oauth/service/DefaultUserService/updateUser(io.corbel.oauth.model.User,io.corbel.oauth.model.User,io.corbel.oauth.model.Client)#io/corbel/oauth/repository/CreateUserException/DuplicatedUser/DuplicatedUser()
io/corbel/oauth/service/DefaultUserService/updateUser(io.corbel.oauth.model.User,io.corbel.oauth.model.User,io.corbel.oauth.model.Client)#io/corbel/oauth/model/User/getId()
io/corbel/oauth/service/DefaultUserService/updateUser(io.corbel.oauth.model.User,io.corbel.oauth.model.User,io.corbel.oauth.model.Client)#io/corbel/oauth/model/User/getPassword()
io/corbel/oauth/service/DefaultUserService/notifyChangePassword(io.corbel.oauth.model.Client,io.corbel.oauth.model.User)#io/corbel/oauth/model/User/getUsername()
io/corbel/oauth/service/DefaultUserService/notifyChangePassword(io.corbel.oauth.model.Client,io.corbel.oauth.model.User)#io/corbel/oauth/model/User/getEmail()
io/corbel/oauth/service/DefaultUserService/notifyChangePassword(io.corbel.oauth.model.Client,io.corbel.oauth.model.User)#io/corbel/oauth/service/MailChangePasswordService/sendMailChangePassword(io.corbel.oauth.model.Client,java.lang.String,java.lang.String)
io/corbel/oauth/service/DefaultUserService/getUserByEmailAndDomain(java.lang.String,java.lang.String)#io/corbel/oauth/repository/UserRepository/findByEmailAndDomain(java.lang.String,java.lang.String)
io/corbel/oauth/service/DefaultUserService/findByUserNameAndDomain(java.lang.String,java.lang.String)#io/corbel/oauth/repository/UserRepository/findByUsernameAndDomain(java.lang.String,java.lang.String)
io/corbel/oauth/service/DefaultUserService/deleteUser(java.lang.String)#org/springframework/data/repository/CrudRepository/delete(ID)
io/corbel/oauth/service/DefaultUserService/existsByUsernameAndDomain(java.lang.String,java.lang.String)#io/corbel/oauth/repository/UserRepositoryCustom/existsByUsernameAndDomain(java.lang.String,java.lang.String)
io/corbel/iam/auth/google/connect/GoogleServiceProvider/getApi(java.lang.String)#io/corbel/iam/auth/google/api/impl/GoogleTemplate/GoogleTemplate(java.lang.String)
io/corbel/notifications/handler/InternetAddressParsingTest/testParse()#javax/mail/internet/InternetAddress/getAddress()
io/corbel/notifications/handler/InternetAddressParsingTest/testParse()#javax/mail/internet/InternetAddress/getPersonal()
io/corbel/notifications/handler/InternetAddressParsingTest/testParse()#javax/mail/internet/InternetAddress/parse(java.lang.String)
io/corbel/notifications/handler/InternetAddressParsingTest/testParse()#org/junit/Assert/assertEquals(long,long)
io/corbel/notifications/handler/InternetAddressParsingTest/testParse()#org/junit/Assert/assertEquals(java.lang.Object,java.lang.Object)
io/corbel/notifications/handler/InternetAddressParsingTest/testParseAddressOnly()#javax/mail/internet/InternetAddress/getAddress()
io/corbel/notifications/handler/InternetAddressParsingTest/testParseAddressOnly()#javax/mail/internet/InternetAddress/getPersonal()
io/corbel/notifications/handler/InternetAddressParsingTest/testParseAddressOnly()#org/junit/Assert/assertNull(java.lang.Object)
io/corbel/notifications/handler/InternetAddressParsingTest/testParseAddressOnly()#javax/mail/internet/InternetAddress/parse(java.lang.String)
io/corbel/notifications/handler/InternetAddressParsingTest/testParseAddressOnly()#org/junit/Assert/assertEquals(long,long)
io/corbel/notifications/handler/InternetAddressParsingTest/testParseAddressOnly()#org/junit/Assert/assertEquals(java.lang.Object,java.lang.Object)
io/corbel/evci/api/EventResource/registerFormParamsEvent(io.corbel.lib.ws.auth.AuthorizationInfo,java.lang.String,javax.ws.rs.core.Form,javax.ws.rs.core.Request)#javax/ws/rs/core/Response/ResponseBuilder/build()
io/corbel/evci/api/EventResource/registerFormParamsEvent(io.corbel.lib.ws.auth.AuthorizationInfo,java.lang.String,javax.ws.rs.core.Form,javax.ws.rs.core.Request)#javax/ws/rs/core/Response/fromResponse(javax.ws.rs.core.Response)
io/corbel/evci/api/EventResource/registerFormParamsEvent(io.corbel.lib.ws.auth.AuthorizationInfo,java.lang.String,javax.ws.rs.core.Form,javax.ws.rs.core.Request)#javax/ws/rs/core/Response/ResponseBuilder/type(javax.ws.rs.core.MediaType)
io/corbel/evci/api/EventResource/registerFormParamsEvent(io.corbel.lib.ws.auth.AuthorizationInfo,java.lang.String,javax.ws.rs.core.Form,javax.ws.rs.core.Request)#io/corbel/evci/api/EventResource/getNodeParams(javax.ws.rs.core.Form)
io/corbel/evci/api/EventResource/registerFormParamsEvent(io.corbel.lib.ws.auth.AuthorizationInfo,java.lang.String,javax.ws.rs.core.Form,javax.ws.rs.core.Request)#javax/ws/rs/core/Response/ResponseBuilder/entity(java.lang.Object)
io/corbel/evci/api/EventResource/registerFormParamsEvent(io.corbel.lib.ws.auth.AuthorizationInfo,java.lang.String,javax.ws.rs.core.Form,javax.ws.rs.core.Request)#io/corbel/evci/api/EventResource/registerJsonEvent(io.corbel.lib.ws.auth.AuthorizationInfo,java.lang.String,com.fasterxml.jackson.databind.JsonNode)
io/corbel/evci/api/EventResource/registerJsonEvent(io.corbel.lib.ws.auth.AuthorizationInfo,java.lang.String,com.fasterxml.jackson.databind.JsonNode)#javax/ws/rs/core/Response/ResponseBuilder/build()
io/corbel/evci/api/EventResource/registerJsonEvent(io.corbel.lib.ws.auth.AuthorizationInfo,java.lang.String,com.fasterxml.jackson.databind.JsonNode)#java/lang/String/replaceAll(java.lang.String,java.lang.String)
io/corbel/evci/api/EventResource/registerJsonEvent(io.corbel.lib.ws.auth.AuthorizationInfo,java.lang.String,com.fasterxml.jackson.databind.JsonNode)#java/util/Collections/emptySet()
io/corbel/evci/api/EventResource/registerJsonEvent(io.corbel.lib.ws.auth.AuthorizationInfo,java.lang.String,com.fasterxml.jackson.databind.JsonNode)#io/corbel/evci/service/EventsService/registerEvent(java.lang.String,com.fasterxml.jackson.databind.JsonNode)
io/corbel/evci/api/EventResource/registerJsonEvent(io.corbel.lib.ws.auth.AuthorizationInfo,java.lang.String,com.fasterxml.jackson.databind.JsonNode)#io/corbel/evci/api/EventResource/createEworkerMessage(io.corbel.lib.ws.auth.AuthorizationInfo,com.fasterxml.jackson.databind.JsonNode)
io/corbel/evci/api/EventResource/registerJsonEvent(io.corbel.lib.ws.auth.AuthorizationInfo,java.lang.String,com.fasterxml.jackson.databind.JsonNode)#javax/ws/rs/core/Response/status(javax.ws.rs.core.Response.Status)
io/corbel/evci/api/EventResource/registerJsonEvent(io.corbel.lib.ws.auth.AuthorizationInfo,java.lang.String,com.fasterxml.jackson.databind.JsonNode)#javax/validation/ConstraintViolationException/ConstraintViolationException(java.util.Set)
io/corbel/evci/api/EventResource/createEworkerMessage(io.corbel.lib.ws.auth.AuthorizationInfo,com.fasterxml.jackson.databind.JsonNode)#com/google/common/collect/ImmutableMap/of(K,V,K,V)
io/corbel/evci/api/EventResource/createEworkerMessage(io.corbel.lib.ws.auth.AuthorizationInfo,com.fasterxml.jackson.databind.JsonNode)#io/corbel/lib/token/reader/TokenReader/getInfo()
io/corbel/evci/api/EventResource/createEworkerMessage(io.corbel.lib.ws.auth.AuthorizationInfo,com.fasterxml.jackson.databind.JsonNode)#io/corbel/lib/ws/auth/AuthorizationInfo/getDomainId()
io/corbel/evci/api/EventResource/createEworkerMessage(io.corbel.lib.ws.auth.AuthorizationInfo,com.fasterxml.jackson.databind.JsonNode)#com/fasterxml/jackson/databind/node/ObjectNode/setAll(java.util.Map)
io/corbel/evci/api/EventResource/createEworkerMessage(io.corbel.lib.ws.auth.AuthorizationInfo,com.fasterxml.jackson.databind.JsonNode)#io/corbel/evci/model/Header/Header(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
io/corbel/evci/api/EventResource/createEworkerMessage(io.corbel.lib.ws.auth.AuthorizationInfo,com.fasterxml.jackson.databind.JsonNode)#io/corbel/evci/model/Header/Header()
io/corbel/evci/api/EventResource/createEworkerMessage(io.corbel.lib.ws.auth.AuthorizationInfo,com.fasterxml.jackson.databind.JsonNode)#io/corbel/lib/token/TokenInfo/getDeviceId()
io/corbel/evci/api/EventResource/createEworkerMessage(io.corbel.lib.ws.auth.AuthorizationInfo,com.fasterxml.jackson.databind.JsonNode)#com/fasterxml/jackson/databind/ObjectMapper/convertValue(java.lang.Object,java.lang.Class)
io/corbel/evci/api/EventResource/createEworkerMessage(io.corbel.lib.ws.auth.AuthorizationInfo,com.fasterxml.jackson.databind.JsonNode)#com/fasterxml/jackson/databind/ObjectMapper/createObjectNode()
io/corbel/evci/api/EventResource/createEworkerMessage(io.corbel.lib.ws.auth.AuthorizationInfo,com.fasterxml.jackson.databind.JsonNode)#io/corbel/lib/ws/auth/AuthorizationInfo/getTokenReader()
io/corbel/evci/api/EventResource/createEworkerMessage(io.corbel.lib.ws.auth.AuthorizationInfo,com.fasterxml.jackson.databind.JsonNode)#io/corbel/lib/ws/auth/AuthorizationInfo/getClientId()
io/corbel/evci/api/EventResource/createEworkerMessage(io.corbel.lib.ws.auth.AuthorizationInfo,com.fasterxml.jackson.databind.JsonNode)#io/corbel/lib/ws/auth/AuthorizationInfo/getUserId()
io/corbel/evci/api/EventResource/getNodeParams(javax.ws.rs.core.Form)#com/fasterxml/jackson/databind/ObjectMapper/valueToTree(java.lang.Object)
io/corbel/evci/api/EventResource/getNodeParams(javax.ws.rs.core.Form)#java/util/Map/Entry/getValue()
io/corbel/evci/api/EventResource/getNodeParams(javax.ws.rs.core.Form)#java/util/Map/isEmpty()
io/corbel/evci/api/EventResource/getNodeParams(javax.ws.rs.core.Form)#java/util/List/size()
io/corbel/evci/api/EventResource/getNodeParams(javax.ws.rs.core.Form)#com/fasterxml/jackson/databind/node/ObjectNode/put(java.lang.String,java.lang.String)
io/corbel/evci/api/EventResource/getNodeParams(javax.ws.rs.core.Form)#javax/ws/rs/core/Form/asMap()
io/corbel/evci/api/EventResource/getNodeParams(javax.ws.rs.core.Form)#java/util/List/get(int)
io/corbel/evci/api/EventResource/getNodeParams(javax.ws.rs.core.Form)#java/util/Map/entrySet()
io/corbel/evci/api/EventResource/getNodeParams(javax.ws.rs.core.Form)#com/fasterxml/jackson/databind/node/ObjectNode/put(java.lang.String,com.fasterxml.jackson.databind.JsonNode)
io/corbel/evci/api/EventResource/getNodeParams(javax.ws.rs.core.Form)#com/fasterxml/jackson/databind/ObjectMapper/createObjectNode()
io/corbel/evci/api/EventResource/getNodeParams(javax.ws.rs.core.Form)#java/util/Map/Entry/getKey()
io/corbel/evci/api/EventResource/getNodeParams(javax.ws.rs.core.Form)#com/fasterxml/jackson/databind/ObjectMapper/ObjectMapper()
io/corbel/resources/service/DefaultRelationSchemaService/getRelationFields(java.lang.String,java.lang.String)#java/util/Set/addAll(java.util.Collection)
io/corbel/resources/service/DefaultRelationSchemaService/getRelationFields(java.lang.String,java.lang.String)#java/util/Map/get(java.lang.Object)
io/corbel/resources/service/DefaultRelationSchemaService/getRelationFields(java.lang.String,java.lang.String)#org/springframework/data/repository/CrudRepository/findOne(ID)
io/corbel/resources/service/DefaultRelationSchemaService/getRelationFields(java.lang.String,java.lang.String)#io/corbel/resources/rem/plugin/RelationRegistry/getRelationFields(java.lang.String,java.lang.String)
io/corbel/resources/service/DefaultRelationSchemaService/getRelationFields(java.lang.String,java.lang.String)#io/corbel/resources/model/RelationSchema/getRelations()
io/corbel/resources/service/DefaultRelationSchemaService/getTypeRelations(java.lang.String)#java/util/Set/addAll(java.util.Collection)
io/corbel/resources/service/DefaultRelationSchemaService/getTypeRelations(java.lang.String)#org/springframework/data/repository/CrudRepository/findOne(ID)
io/corbel/resources/service/DefaultRelationSchemaService/getTypeRelations(java.lang.String)#java/util/Map/keySet()
io/corbel/resources/service/DefaultRelationSchemaService/getTypeRelations(java.lang.String)#io/corbel/resources/rem/plugin/RelationRegistry/getTypeRelations(java.lang.String)
io/corbel/resources/service/DefaultRelationSchemaService/getTypeRelations(java.lang.String)#io/corbel/resources/model/RelationSchema/getRelations()
io/corbel/resources/rem/acl/AclDeleteRemTest/getError(javax.ws.rs.core.Response)#javax/ws/rs/core/Response/getEntity()
io/corbel/resources/rem/acl/AclDeleteRemTest/testDeleteResourceWithCorrectPermissions()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/acl/AclDeleteRemTest/testDeleteResourceWithCorrectPermissions()#io/corbel/resources/rem/service/AclResourcesService/deleteResource(io.corbel.resources.rem.Rem,java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.List)
io/corbel/resources/rem/acl/AclDeleteRemTest/testDeleteResourceWithCorrectPermissions()#io/corbel/resources/rem/service/AclResourcesService/isAuthorized(java.lang.String,io.corbel.lib.token.TokenInfo,java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.model.AclPermission)
io/corbel/resources/rem/acl/AclDeleteRemTest/testDeleteResourceWithCorrectPermissions()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/resources/rem/acl/AclDeleteRemTest/testDeleteResourceWithCorrectPermissions()#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/rem/acl/AclDeleteRemTest/testDeleteResourceWithCorrectPermissions()#io/corbel/resources/rem/acl/AclBaseRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)
io/corbel/resources/rem/acl/AclDeleteRemTest/testDeleteResourceWithCorrectPermissions()#org/mockito/Matchers/eq(T)
io/corbel/resources/rem/acl/AclDeleteRemTest/testDeleteResourceWithCorrectPermissions()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/resources/rem/acl/AclDeleteRemTest/testDeleteResourceWithCorrectPermissions()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/resources/rem/acl/AclDeleteRemTest/testDeleteResourceWithCorrectPermissions()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/acl/AclDeleteRemTest/testDeleteResourceWithCorrectPermissions()#org/mockito/Matchers/any()
io/corbel/resources/rem/acl/AclDeleteRemTest/testDeleteResourceWithCorrectPermissions()#java/util/Optional/empty()
io/corbel/resources/rem/acl/AclDeleteRemTest/testDeleteResourceNoUserId()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/acl/AclDeleteRemTest/testDeleteResourceNoUserId()#io/corbel/resources/rem/request/RequestParameters/getTokenInfo()
io/corbel/resources/rem/acl/AclDeleteRemTest/testDeleteResourceNoUserId()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/acl/AclDeleteRemTest/testDeleteResourceNoUserId()#io/corbel/lib/token/TokenInfo/getUserId()
io/corbel/resources/rem/acl/AclDeleteRemTest/testDeleteResourceNoUserId()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/resources/rem/acl/AclDeleteRemTest/testDeleteResourceNoUserId()#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/rem/acl/AclDeleteRemTest/testDeleteResourceNoUserId()#io/corbel/resources/rem/acl/AclBaseRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)
io/corbel/resources/rem/acl/AclDeleteRemTest/testDeleteResourceNoUserId()#java/util/Optional/empty()
io/corbel/resources/rem/acl/AclDeleteRemTest/testDeleteResourceNoUserId()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/resources/rem/acl/AclDeleteRemTest/testRelationWildcardInOrigin()#io/corbel/resources/rem/request/RequestParameters/getOptionalApiParameters()
io/corbel/resources/rem/acl/AclDeleteRemTest/testRelationWildcardInOrigin()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/acl/AclDeleteRemTest/testRelationWildcardInOrigin()#io/corbel/resources/rem/service/AclResourcesService/isAuthorized(java.lang.String,io.corbel.lib.token.TokenInfo,java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.model.AclPermission)
io/corbel/resources/rem/acl/AclDeleteRemTest/testRelationWildcardInOrigin()#io/corbel/resources/rem/request/ResourceId/ResourceId(java.lang.String)
io/corbel/resources/rem/acl/AclDeleteRemTest/testRelationWildcardInOrigin()#io/corbel/resources/rem/acl/AclBaseRem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)
io/corbel/resources/rem/acl/AclDeleteRemTest/testRelationWildcardInOrigin()#java/util/Optional/empty()
io/corbel/resources/rem/acl/AclDeleteRemTest/testRelationWildcardInOrigin()#org/mockito/Matchers/eq(T)
io/corbel/resources/rem/acl/AclDeleteRemTest/testRelationWildcardInOrigin()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/resources/rem/acl/AclDeleteRemTest/testRelationWildcardInOrigin()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/resources/rem/acl/AclDeleteRemTest/testRelationWildcardInOrigin()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/acl/AclDeleteRemTest/testRelationWildcardInOrigin()#java/util/Optional/of(T)
io/corbel/resources/rem/acl/AclDeleteRemTest/testRelationWildcardInOrigin()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/resources/rem/acl/AclDeleteRemTest/testRelationWildcardInOrigin()#io/corbel/resources/rem/request/RelationParameters/getPredicateResource()
io/corbel/resources/rem/acl/AclDeleteRemTest/testRelationWildcardInOrigin()#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/rem/acl/AclDeleteRemTest/testDeleteResourceNotPermission()#io/corbel/resources/rem/acl/AclBaseRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)
io/corbel/resources/rem/acl/AclDeleteRemTest/testDeleteResourceNotPermission()#io/corbel/resources/rem/service/AclResourcesService/isAuthorized(java.lang.String,io.corbel.lib.token.TokenInfo,java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.model.AclPermission)
io/corbel/resources/rem/acl/AclDeleteRemTest/testDeleteResourceNotPermission()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/acl/AclDeleteRemTest/testDeleteResourceNotPermission()#io/corbel/resources/rem/acl/AclDeleteRemTest/getError(javax.ws.rs.core.Response)
io/corbel/resources/rem/acl/AclDeleteRemTest/testDeleteResourceNotPermission()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/resources/rem/acl/AclDeleteRemTest/testDeleteResourceNotPermission()#io/corbel/lib/ws/model/Error/getErrorDescription()
io/corbel/resources/rem/acl/AclDeleteRemTest/testDeleteResourceNotPermission()#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/rem/acl/AclDeleteRemTest/testDeleteResourceNotPermission()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/resources/rem/acl/AclDeleteRemTest/testDeleteResourceNotPermission()#org/mockito/Matchers/eq(T)
io/corbel/resources/rem/acl/AclDeleteRemTest/testDeleteResourceNotPermission()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/acl/AclDeleteRemTest/testDeleteResourceNotPermission()#java/lang/Enum/toString()
io/corbel/resources/rem/acl/AclDeleteRemTest/testDeleteResourceNotPermission()#org/fest/assertions/api/StringAssert/contains(java.lang.String)
io/corbel/resources/rem/acl/AclDeleteRemTest/testDeleteResourceNotPermission()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/resources/rem/acl/AclDeleteRemTest/setUp()#io/corbel/resources/rem/request/RequestParameters/getTokenInfo()
io/corbel/resources/rem/acl/AclDeleteRemTest/setUp()#java/util/Collections/singletonList(T)
io/corbel/resources/rem/acl/AclDeleteRemTest/setUp()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/acl/AclDeleteRemTest/setUp()#io/corbel/lib/token/TokenInfo/getUserId()
io/corbel/resources/rem/acl/AclDeleteRemTest/setUp()#io/corbel/resources/rem/request/RequestParameters/getRequestedDomain()
io/corbel/resources/rem/acl/AclDeleteRemTest/setUp()#io/corbel/resources/rem/service/AclResourcesService/getResource(io.corbel.resources.rem.Rem,java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.List)
io/corbel/resources/rem/acl/AclDeleteRemTest/setUp()#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/rem/acl/AclDeleteRemTest/setUp()#org/mockito/Matchers/any()
io/corbel/resources/rem/acl/AclDeleteRemTest/setUp()#io/corbel/resources/rem/acl/AclBaseRem/setRemService(io.corbel.resources.rem.service.RemService)
io/corbel/resources/rem/acl/AclDeleteRemTest/setUp()#io/corbel/lib/token/TokenInfo/getGroups()
io/corbel/resources/rem/acl/AclDeleteRemTest/setUp()#org/mockito/Matchers/eq(T)
io/corbel/resources/rem/acl/AclDeleteRemTest/setUp()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/acl/AclDeleteRemTest/setUp()#io/corbel/resources/rem/acl/AclDeleteRem/AclDeleteRem(io.corbel.resources.rem.service.AclResourcesService,java.util.List)
io/corbel/resources/rem/acl/AclDeleteRemTest/testDeleteRelationWithCorrectPermissions()#io/corbel/resources/rem/request/RequestParameters/getOptionalApiParameters()
io/corbel/resources/rem/acl/AclDeleteRemTest/testDeleteRelationWithCorrectPermissions()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/acl/AclDeleteRemTest/testDeleteRelationWithCorrectPermissions()#io/corbel/resources/rem/service/AclResourcesService/isAuthorized(java.lang.String,io.corbel.lib.token.TokenInfo,java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.model.AclPermission)
io/corbel/resources/rem/acl/AclDeleteRemTest/testDeleteRelationWithCorrectPermissions()#io/corbel/resources/rem/service/AclResourcesService/deleteRelation(io.corbel.resources.rem.Rem,java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.List)
io/corbel/resources/rem/acl/AclDeleteRemTest/testDeleteRelationWithCorrectPermissions()#io/corbel/resources/rem/acl/AclBaseRem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)
io/corbel/resources/rem/acl/AclDeleteRemTest/testDeleteRelationWithCorrectPermissions()#org/mockito/Matchers/eq(T)
io/corbel/resources/rem/acl/AclDeleteRemTest/testDeleteRelationWithCorrectPermissions()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/resources/rem/acl/AclDeleteRemTest/testDeleteRelationWithCorrectPermissions()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/resources/rem/acl/AclDeleteRemTest/testDeleteRelationWithCorrectPermissions()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/acl/AclDeleteRemTest/testDeleteRelationWithCorrectPermissions()#java/util/Optional/of(T)
io/corbel/resources/rem/acl/AclDeleteRemTest/testDeleteRelationWithCorrectPermissions()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/resources/rem/acl/AclDeleteRemTest/testDeleteRelationWithCorrectPermissions()#io/corbel/resources/rem/request/RelationParameters/getPredicateResource()
io/corbel/resources/rem/acl/AclDeleteRemTest/testDeleteRelationWithCorrectPermissions()#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/rem/acl/AclDeleteRemTest/testDeleteRelationWithCorrectPermissions()#org/mockito/Matchers/any()
io/corbel/resources/rem/acl/AclDeleteRemTest/testDeleteRelationWithCorrectPermissions()#java/util/Optional/empty()
io/corbel/resources/rem/acl/AclDeleteRemTest/testDeleteResourceNotFoundObject()#javax/ws/rs/core/Response/getStatusInfo()
io/corbel/resources/rem/acl/AclDeleteRemTest/testDeleteResourceNotFoundObject()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/acl/AclDeleteRemTest/testDeleteResourceNotFoundObject()#javax/ws/rs/WebApplicationException/getResponse()
io/corbel/resources/rem/acl/AclDeleteRemTest/testDeleteResourceNotFoundObject()#io/corbel/resources/rem/service/AclResourcesService/isAuthorized(java.lang.String,io.corbel.lib.token.TokenInfo,java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.model.AclPermission)
io/corbel/resources/rem/acl/AclDeleteRemTest/testDeleteResourceNotFoundObject()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/acl/AclDeleteRemTest/testDeleteResourceNotFoundObject()#org/mockito/stubbing/Stubber/when(T)
io/corbel/resources/rem/acl/AclDeleteRemTest/testDeleteResourceNotFoundObject()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/resources/rem/acl/AclDeleteRemTest/testDeleteResourceNotFoundObject()#javax/ws/rs/WebApplicationException/WebApplicationException(javax.ws.rs.core.Response)
io/corbel/resources/rem/acl/AclDeleteRemTest/testDeleteResourceNotFoundObject()#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/rem/acl/AclDeleteRemTest/testDeleteResourceNotFoundObject()#io/corbel/resources/rem/acl/AclBaseRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)
io/corbel/resources/rem/acl/AclDeleteRemTest/testDeleteResourceNotFoundObject()#org/mockito/Matchers/eq(T)
io/corbel/resources/rem/acl/AclDeleteRemTest/testDeleteResourceNotFoundObject()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/resources/rem/acl/AclDeleteRemTest/testDeleteResourceNotFoundObject()#java/util/Optional/empty()
io/corbel/resources/rem/acl/AclDeleteRemTest/testDeleteResourceNotFoundObject()#org/mockito/Mockito/doThrow(java.lang.Throwable)
io/corbel/webfs/api/WebResource/getResource(java.lang.String,java.lang.String,java.lang.String)#java/lang/String/split(java.lang.String)
io/corbel/webfs/api/WebResource/getResource(java.lang.String,java.lang.String,java.lang.String)#javax/ws/rs/core/Response/ResponseBuilder/entity(java.lang.Object)
io/corbel/webfs/api/WebResource/getResource(java.lang.String,java.lang.String,java.lang.String)#com/amazonaws/services/s3/model/ObjectMetadata/getContentType()
io/corbel/webfs/api/WebResource/getResource(java.lang.String,java.lang.String,java.lang.String)#io/corbel/lib/ws/api/error/ErrorResponseFactory/notFound()
io/corbel/webfs/api/WebResource/getResource(java.lang.String,java.lang.String,java.lang.String)#java/lang/String/startsWith(java.lang.String)
io/corbel/webfs/api/WebResource/getResource(java.lang.String,java.lang.String,java.lang.String)#io/corbel/lib/ws/api/error/ErrorResponseFactory/getInstance()
io/corbel/webfs/api/WebResource/getResource(java.lang.String,java.lang.String,java.lang.String)#javax/ws/rs/core/Response/ResponseBuilder/build()
io/corbel/webfs/api/WebResource/getResource(java.lang.String,java.lang.String,java.lang.String)#io/corbel/webfs/service/AmazonS3Service/getObject(java.lang.String)
io/corbel/webfs/api/WebResource/getResource(java.lang.String,java.lang.String,java.lang.String)#com/amazonaws/services/s3/model/S3Object/getObjectContent()
io/corbel/webfs/api/WebResource/getResource(java.lang.String,java.lang.String,java.lang.String)#javax/ws/rs/core/Response/ok()
io/corbel/webfs/api/WebResource/getResource(java.lang.String,java.lang.String,java.lang.String)#javax/ws/rs/core/Response/ResponseBuilder/type(java.lang.String)
io/corbel/webfs/api/WebResource/getResource(java.lang.String,java.lang.String,java.lang.String)#com/amazonaws/services/s3/model/S3Object/getObjectMetadata()
io/corbel/webfs/api/WebResource/deleteFolder(java.lang.String,java.lang.String)#javax/ws/rs/core/Response/noContent()
io/corbel/webfs/api/WebResource/deleteFolder(java.lang.String,java.lang.String)#javax/ws/rs/core/Response/ResponseBuilder/build()
io/corbel/webfs/api/WebResource/deleteFolder(java.lang.String,java.lang.String)#io/corbel/webfs/service/AmazonS3Service/deleteFolder(java.lang.String)
io/corbel/iam/scope/MustacheScopeFillStrategyTest/testFill()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/scope/MustacheScopeFillStrategyTest/testFill()#java/util/Collections/singleton(T)
io/corbel/iam/scope/MustacheScopeFillStrategyTest/testFill()#java/util/Collections/singletonMap(K,V)
io/corbel/iam/scope/MustacheScopeFillStrategyTest/testFill()#java/util/Iterator/next()
io/corbel/iam/scope/MustacheScopeFillStrategyTest/testFill()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/iam/scope/MustacheScopeFillStrategyTest/testFill()#java/util/Set/iterator()
io/corbel/iam/scope/MustacheScopeFillStrategyTest/testFill()#io/corbel/iam/model/Scope/getRules()
io/corbel/iam/scope/MustacheScopeFillStrategyTest/testFill()#com/google/gson/JsonObject/get(java.lang.String)
io/corbel/iam/scope/MustacheScopeFillStrategyTest/testFill()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/iam/scope/MustacheScopeFillStrategyTest/testFill()#org/mockito/Mockito/when(T)
io/corbel/iam/scope/MustacheScopeFillStrategyTest/testFill()#io/corbel/iam/scope/MustacheScopeFillStrategy/fillScope(io.corbel.iam.model.Scope,java.util.Map)
io/corbel/iam/scope/MustacheScopeFillStrategyTest/testFill()#io/corbel/iam/scope/MustacheScopeFillStrategyTest/getRule()
io/corbel/iam/scope/MustacheScopeFillStrategyTest/testFill()#com/google/gson/JsonElement/getAsString()
io/corbel/iam/scope/MustacheScopeFillStrategyTest/testFill()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/iam/scope/MustacheScopeFillStrategyTest/setup()#io/corbel/iam/scope/MustacheScopeFillStrategy/MustacheScopeFillStrategy()
io/corbel/iam/scope/MustacheScopeFillStrategyTest/getRule()#com/google/gson/JsonParser/JsonParser()
io/corbel/iam/scope/MustacheScopeFillStrategyTest/getRule()#com/google/gson/JsonParser/parse(java.lang.String)
io/corbel/iam/scope/MustacheScopeFillStrategyTest/testFillWithNullRules()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/scope/MustacheScopeFillStrategyTest/testFillWithNullRules()#java/util/Collections/singletonMap(K,V)
io/corbel/iam/scope/MustacheScopeFillStrategyTest/testFillWithNullRules()#io/corbel/iam/model/Scope/getRules()
io/corbel/iam/scope/MustacheScopeFillStrategyTest/testFillWithNullRules()#org/fest/assertions/api/Assertions/assertThat(T)
io/corbel/iam/scope/MustacheScopeFillStrategyTest/testFillWithNullRules()#io/corbel/iam/scope/MustacheScopeFillStrategy/fillScope(io.corbel.iam.model.Scope,java.util.Map)
io/corbel/iam/scope/MustacheScopeFillStrategyTest/testFillWithNullRules()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/iam/scope/MustacheScopeFillStrategyTest/testFillWithNullRules()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/iam/scope/MustacheScopeFillStrategyTest/testFillWithNullRules()#org/mockito/Mockito/when(T)
io/corbel/iam/scope/MustacheScopeFillStrategyTest/testFillWithoutRules()#java/util/Set/size()
io/corbel/iam/scope/MustacheScopeFillStrategyTest/testFillWithoutRules()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/iam/scope/MustacheScopeFillStrategyTest/testFillWithoutRules()#java/util/Collections/singletonMap(K,V)
io/corbel/iam/scope/MustacheScopeFillStrategyTest/testFillWithoutRules()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/iam/scope/MustacheScopeFillStrategyTest/testFillWithoutRules()#io/corbel/iam/model/Scope/getRules()
io/corbel/iam/scope/MustacheScopeFillStrategyTest/testFillWithoutRules()#io/corbel/iam/scope/MustacheScopeFillStrategy/fillScope(io.corbel.iam.model.Scope,java.util.Map)
io/corbel/iam/scope/MustacheScopeFillStrategyTest/testFillWithoutRules()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/iam/model/ClientIdGeneratorTest/testIdGeneration()#io/corbel/iam/model/Client/setName(java.lang.String)
io/corbel/iam/model/ClientIdGeneratorTest/testIdGeneration()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/model/ClientIdGeneratorTest/testIdGeneration()#io/corbel/iam/model/ClientIdGenerator/generateId(io.corbel.iam.model.Client)
io/corbel/iam/model/ClientIdGeneratorTest/testIdGeneration()#io/corbel/iam/model/Client/Client()
io/corbel/iam/model/ClientIdGeneratorTest/testIdGeneration()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/iam/model/ClientIdGeneratorTest/testIdGeneration()#io/corbel/lib/ws/digest/Digester/digest(java.lang.String)
io/corbel/iam/model/ClientIdGeneratorTest/testIdGeneration()#io/corbel/iam/model/ClientIdGenerator/ClientIdGenerator(io.corbel.lib.ws.digest.Digester)
io/corbel/iam/model/ClientIdGeneratorTest/testIdGeneration()#io/corbel/iam/model/Client/setDomain(java.lang.String)
io/corbel/iam/model/ClientIdGeneratorTest/testIdGeneration()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/iam/model/ClientIdGeneratorTest/testIdGeneration()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/iam/model/ClientIdGeneratorTest/testIdGeneration()#org/mockito/Mockito/when(T)
io/corbel/oauth/service/DefaultClientService/findByName(java.lang.String)#io/corbel/oauth/repository/ClientRepository/findByName(java.lang.String)
io/corbel/oauth/service/DefaultClientService/findByName(java.lang.String)#java/util/Optional/ofNullable(T)
io/corbel/oauth/service/DefaultClientService/verifyClientSecret(java.lang.String,io.corbel.oauth.model.Client)#io/corbel/oauth/model/Client/getKey()
io/corbel/oauth/service/DefaultClientService/verifyClientSecret(java.lang.String,io.corbel.oauth.model.Client)#java/lang/String/equals(java.lang.Object)
io/corbel/oauth/service/DefaultClientService/verifyRedirectUri(java.lang.String,io.corbel.oauth.model.Client)#java/util/regex/Pattern/compile(java.lang.String)
io/corbel/oauth/service/DefaultClientService/verifyRedirectUri(java.lang.String,io.corbel.oauth.model.Client)#io/corbel/oauth/model/Client/getRedirectRegexp()
io/corbel/oauth/service/DefaultClientService/verifyRedirectUri(java.lang.String,io.corbel.oauth.model.Client)#java/util/regex/Matcher/find()
io/corbel/oauth/service/DefaultClientService/verifyRedirectUri(java.lang.String,io.corbel.oauth.model.Client)#java/util/regex/Pattern/matcher(java.lang.CharSequence)
io/corbel/resources/rem/dao/S3RestorDao/deleteObjectWithPrefix(io.corbel.resources.rem.model.RestorResourceUri,java.lang.String)#com/amazonaws/services/s3/AmazonS3/listObjects(com.amazonaws.services.s3.model.ListObjectsRequest)
io/corbel/resources/rem/dao/S3RestorDao/deleteObjectWithPrefix(io.corbel.resources.rem.model.RestorResourceUri,java.lang.String)#com/amazonaws/services/s3/model/ListObjectsRequest/ListObjectsRequest()
io/corbel/resources/rem/dao/S3RestorDao/deleteObjectWithPrefix(io.corbel.resources.rem.model.RestorResourceUri,java.lang.String)#io/corbel/resources/rem/dao/KeyNormalizer/normalize(io.corbel.resources.rem.model.RestorResourceUri,java.lang.String)
io/corbel/resources/rem/dao/S3RestorDao/deleteObjectWithPrefix(io.corbel.resources.rem.model.RestorResourceUri,java.lang.String)#java/util/stream/Stream/forEach(java.util.function.Consumer)
io/corbel/resources/rem/dao/S3RestorDao/deleteObjectWithPrefix(io.corbel.resources.rem.model.RestorResourceUri,java.lang.String)#com/amazonaws/services/s3/model/ObjectListing/getObjectSummaries()
io/corbel/resources/rem/dao/S3RestorDao/deleteObjectWithPrefix(io.corbel.resources.rem.model.RestorResourceUri,java.lang.String)#com/amazonaws/services/s3/model/ListObjectsRequest/withPrefix(java.lang.String)
io/corbel/resources/rem/dao/S3RestorDao/deleteObjectWithPrefix(io.corbel.resources.rem.model.RestorResourceUri,java.lang.String)#com/amazonaws/services/s3/model/ObjectListing/isTruncated()
io/corbel/resources/rem/dao/S3RestorDao/deleteObjectWithPrefix(io.corbel.resources.rem.model.RestorResourceUri,java.lang.String)#com/amazonaws/services/s3/model/ListObjectsRequest/withBucketName(java.lang.String)
io/corbel/resources/rem/dao/S3RestorDao/deleteObjectWithPrefix(io.corbel.resources.rem.model.RestorResourceUri,java.lang.String)#java/util/stream/Stream/map(java.util.function.Function)
io/corbel/resources/rem/dao/S3RestorDao/deleteObjectWithPrefix(io.corbel.resources.rem.model.RestorResourceUri,java.lang.String)#com/amazonaws/services/s3/AmazonS3/listNextBatchOfObjects(com.amazonaws.services.s3.model.ObjectListing)
io/corbel/resources/rem/dao/S3RestorDao/deleteObjectWithPrefix(io.corbel.resources.rem.model.RestorResourceUri,java.lang.String)#java/util/Collection/stream()
io/corbel/resources/rem/dao/S3RestorDao/getObject(io.corbel.resources.rem.model.RestorResourceUri,int)#com/amazonaws/AmazonServiceException/getStatusCode()
io/corbel/resources/rem/dao/S3RestorDao/getObject(io.corbel.resources.rem.model.RestorResourceUri,int)#io/corbel/resources/rem/dao/KeyNormalizer/normalize(io.corbel.resources.rem.model.RestorResourceUri)
io/corbel/resources/rem/dao/S3RestorDao/getObject(io.corbel.resources.rem.model.RestorResourceUri,int)#com/amazonaws/services/s3/AmazonS3/getObject(com.amazonaws.services.s3.model.GetObjectRequest)
io/corbel/resources/rem/dao/S3RestorDao/getObject(io.corbel.resources.rem.model.RestorResourceUri,int)#com/amazonaws/services/s3/model/ObjectMetadata/getETag()
io/corbel/resources/rem/dao/S3RestorDao/getObject(io.corbel.resources.rem.model.RestorResourceUri,int)#org/springframework/http/MediaType/parseMediaType(java.lang.String)
io/corbel/resources/rem/dao/S3RestorDao/getObject(io.corbel.resources.rem.model.RestorResourceUri,int)#com/amazonaws/services/s3/model/ObjectMetadata/getContentType()
io/corbel/resources/rem/dao/S3RestorDao/getObject(io.corbel.resources.rem.model.RestorResourceUri,int)#com/amazonaws/services/s3/model/S3Object/getObjectMetadata()
io/corbel/resources/rem/dao/S3RestorDao/getObject(io.corbel.resources.rem.model.RestorResourceUri,int)#org/springframework/util/MimeType/toString()
io/corbel/resources/rem/dao/S3RestorDao/getObject(io.corbel.resources.rem.model.RestorResourceUri,int)#io/corbel/resources/rem/dao/S3RestorDao/getObject(io.corbel.resources.rem.model.RestorResourceUri,int)
io/corbel/resources/rem/dao/S3RestorDao/getObject(io.corbel.resources.rem.model.RestorResourceUri,int)#io/corbel/resources/rem/model/RestorObject/RestorObject(java.lang.String,java.io.InputStream,java.lang.Long,java.lang.String)
io/corbel/resources/rem/dao/S3RestorDao/getObject(io.corbel.resources.rem.model.RestorResourceUri,int)#io/corbel/resources/rem/model/RestorInputStream/RestorInputStream(com.amazonaws.services.s3.model.S3Object)
io/corbel/resources/rem/dao/S3RestorDao/getObject(io.corbel.resources.rem.model.RestorResourceUri,int)#com/amazonaws/services/s3/model/ObjectMetadata/getContentLength()
io/corbel/resources/rem/dao/S3RestorDao/getObject(io.corbel.resources.rem.model.RestorResourceUri,int)#com/amazonaws/services/s3/model/GetObjectRequest/GetObjectRequest(java.lang.String,java.lang.String)
io/corbel/resources/rem/dao/S3RestorDao/getObject(io.corbel.resources.rem.model.RestorResourceUri)#io/corbel/resources/rem/dao/S3RestorDao/getObject(io.corbel.resources.rem.model.RestorResourceUri,int)
io/corbel/resources/rem/dao/S3RestorDao/deleteObject(io.corbel.resources.rem.model.RestorResourceUri)#io/corbel/resources/rem/dao/KeyNormalizer/normalize(io.corbel.resources.rem.model.RestorResourceUri)
io/corbel/resources/rem/dao/S3RestorDao/deleteObject(io.corbel.resources.rem.model.RestorResourceUri)#io/corbel/resources/rem/dao/S3RestorDao/deleteObject(java.lang.String)
io/corbel/resources/rem/dao/S3RestorDao/deleteObject(java.lang.String,int)#com/amazonaws/AmazonServiceException/getStatusCode()
io/corbel/resources/rem/dao/S3RestorDao/deleteObject(java.lang.String,int)#io/corbel/resources/rem/dao/S3RestorDao/deleteObject(java.lang.String,int)
io/corbel/resources/rem/dao/S3RestorDao/deleteObject(java.lang.String,int)#com/amazonaws/services/s3/model/DeleteObjectRequest/DeleteObjectRequest(java.lang.String,java.lang.String)
io/corbel/resources/rem/dao/S3RestorDao/deleteObject(java.lang.String,int)#com/amazonaws/services/s3/AmazonS3/deleteObject(com.amazonaws.services.s3.model.DeleteObjectRequest)
io/corbel/resources/rem/dao/S3RestorDao/deleteObject(java.lang.String)#io/corbel/resources/rem/dao/S3RestorDao/deleteObject(java.lang.String,int)
io/corbel/resources/rem/dao/S3RestorDao/uploadObject(io.corbel.resources.rem.model.RestorResourceUri,io.corbel.resources.rem.model.RestorObject)#io/corbel/resources/rem/model/RestorObject/getInputStream()
io/corbel/resources/rem/dao/S3RestorDao/uploadObject(io.corbel.resources.rem.model.RestorResourceUri,io.corbel.resources.rem.model.RestorObject)#io/corbel/resources/rem/dao/KeyNormalizer/normalize(io.corbel.resources.rem.model.RestorResourceUri)
io/corbel/resources/rem/dao/S3RestorDao/uploadObject(io.corbel.resources.rem.model.RestorResourceUri,io.corbel.resources.rem.model.RestorObject)#io/corbel/resources/rem/dao/S3RestorDao/createObjectMetadataForObject(java.lang.String,java.lang.Long)
io/corbel/resources/rem/dao/S3RestorDao/uploadObject(io.corbel.resources.rem.model.RestorResourceUri,io.corbel.resources.rem.model.RestorObject)#io/corbel/resources/rem/model/RestorObject/getMediaType()
io/corbel/resources/rem/dao/S3RestorDao/uploadObject(io.corbel.resources.rem.model.RestorResourceUri,io.corbel.resources.rem.model.RestorObject)#io/corbel/resources/rem/model/RestorObject/getContentLength()
io/corbel/resources/rem/dao/S3RestorDao/uploadObject(io.corbel.resources.rem.model.RestorResourceUri,io.corbel.resources.rem.model.RestorObject)#com/amazonaws/services/s3/AmazonS3/putObject(com.amazonaws.services.s3.model.PutObjectRequest)
io/corbel/resources/rem/dao/S3RestorDao/uploadObject(io.corbel.resources.rem.model.RestorResourceUri,io.corbel.resources.rem.model.RestorObject)#com/amazonaws/services/s3/model/PutObjectRequest/PutObjectRequest(java.lang.String,java.lang.String,java.io.InputStream,com.amazonaws.services.s3.model.ObjectMetadata)
io/corbel/resources/rem/dao/S3RestorDao/createObjectMetadataForObject(java.lang.String,java.lang.Long)#com/amazonaws/services/s3/model/ObjectMetadata/setContentType(java.lang.String)
io/corbel/resources/rem/dao/S3RestorDao/createObjectMetadataForObject(java.lang.String,java.lang.Long)#com/amazonaws/services/s3/model/ObjectMetadata/ObjectMetadata()
io/corbel/resources/rem/dao/S3RestorDao/createObjectMetadataForObject(java.lang.String,java.lang.Long)#com/amazonaws/services/s3/model/ObjectMetadata/setContentLength(long)
io/corbel/resources/rem/restor/ioc/RestorIoc/getRestorPutRem()#io/corbel/resources/rem/restor/ioc/RestorIoc/getRestorDao()
io/corbel/resources/rem/restor/ioc/RestorIoc/getRestorPutRem()#io/corbel/resources/rem/restor/RestorPutRem/RestorPutRem(io.corbel.resources.rem.dao.RestorDao)
io/corbel/resources/rem/restor/ioc/RestorIoc/getS3HealthCheck()#org/springframework/core/env/PropertyResolver/getProperty(java.lang.String)
io/corbel/resources/rem/restor/ioc/RestorIoc/getS3HealthCheck()#io/corbel/resources/rem/restor/ioc/RestorIoc/getAmazonS3Client()
io/corbel/resources/rem/restor/ioc/RestorIoc/getS3HealthCheck()#io/corbel/resources/rem/health/S3HealthCheck/S3HealthCheck(com.amazonaws.services.s3.AmazonS3,java.lang.String)
io/corbel/resources/rem/restor/ioc/RestorIoc/getAmazonS3Client()#com/amazonaws/services/s3/AmazonS3Client/AmazonS3Client(com.amazonaws.auth.AWSCredentials)
io/corbel/resources/rem/restor/ioc/RestorIoc/getAmazonS3Client()#com/amazonaws/services/s3/AmazonS3Client/setRegion(com.amazonaws.regions.Region)
io/corbel/resources/rem/restor/ioc/RestorIoc/getAmazonS3Client()#com/amazonaws/regions/Regions/fromName(java.lang.String)
io/corbel/resources/rem/restor/ioc/RestorIoc/getAmazonS3Client()#org/springframework/core/env/PropertyResolver/getProperty(java.lang.String)
io/corbel/resources/rem/restor/ioc/RestorIoc/getAmazonS3Client()#com/amazonaws/regions/Region/getRegion(com.amazonaws.regions.Regions)
io/corbel/resources/rem/restor/ioc/RestorIoc/getAmazonS3Client()#com/amazonaws/auth/BasicAWSCredentials/BasicAWSCredentials(java.lang.String,java.lang.String)
io/corbel/resources/rem/restor/ioc/RestorIoc/getRestorDeleteRem()#io/corbel/resources/rem/restor/RestorDeleteRem/RestorDeleteRem(io.corbel.resources.rem.dao.RestorDao)
io/corbel/resources/rem/restor/ioc/RestorIoc/getRestorDeleteRem()#io/corbel/resources/rem/restor/ioc/RestorIoc/getRestorDao()
io/corbel/resources/rem/restor/ioc/RestorIoc/getRestorDao()#io/corbel/resources/rem/dao/S3RestorDao/S3RestorDao(io.corbel.resources.rem.dao.KeyNormalizer,com.amazonaws.services.s3.AmazonS3,java.lang.String,java.lang.Integer)
io/corbel/resources/rem/restor/ioc/RestorIoc/getRestorDao()#io/corbel/resources/rem/restor/ioc/RestorIoc/getAmazonS3Client()
io/corbel/resources/rem/restor/ioc/RestorIoc/getRestorDao()#io/corbel/resources/rem/restor/ioc/RestorIoc/getKeyNormalizer()
io/corbel/resources/rem/restor/ioc/RestorIoc/getRestorDao()#org/springframework/core/env/PropertyResolver/getProperty(java.lang.String)
io/corbel/resources/rem/restor/ioc/RestorIoc/getRestorDao()#org/springframework/core/env/PropertyResolver/getProperty(java.lang.String,java.lang.Class,T)
io/corbel/resources/rem/restor/ioc/RestorIoc/getRestorGetRem()#io/corbel/resources/rem/restor/ioc/RestorIoc/getRestorDao()
io/corbel/resources/rem/restor/ioc/RestorIoc/getRestorGetRem()#io/corbel/resources/rem/restor/RestorGetRem/RestorGetRem(io.corbel.resources.rem.dao.RestorDao)
io/corbel/resources/rem/restor/ioc/RestorIoc/getAcceptedMediaTypes()#java/util/ArrayList/ArrayList()
io/corbel/resources/rem/restor/ioc/RestorIoc/getAcceptedMediaTypes()#java/lang/String/split(java.lang.String)
io/corbel/resources/rem/restor/ioc/RestorIoc/getAcceptedMediaTypes()#org/springframework/http/MediaType/parseMediaType(java.lang.String)
io/corbel/resources/rem/restor/ioc/RestorIoc/getAcceptedMediaTypes()#org/springframework/core/env/PropertyResolver/getProperty(java.lang.String)
io/corbel/resources/rem/restor/ioc/RestorIoc/getAcceptedMediaTypes()#java/util/List/add(E)
io/corbel/resources/rem/restor/ioc/RestorIoc/getKeyNormalizer()#io/corbel/resources/rem/dao/DefaultKeyNormalizer/DefaultKeyNormalizer()
io/corbel/iam/model/Group/hashCode()#java/lang/String/hashCode()
io/corbel/iam/model/Group/hashCode()#java/util/Set/hashCode()
io/corbel/iam/model/Group/equals(java.lang.Object)#java/lang/String/equals(java.lang.Object)
io/corbel/iam/model/Group/equals(java.lang.Object)#java/util/Set/equals(java.lang.Object)
io/corbel/iam/model/Group/addScope(java.lang.String)#java/util/Set/add(E)
io/corbel/iam/model/Group/removeScope(java.lang.String)#java/util/Set/remove(java.lang.Object)
io/corbel/evci/EvciRunner/main(java.lang.String[])#org/springframework/context/annotation/AnnotationConfigApplicationContext/AnnotationConfigApplicationContext(java.lang.Class<?>[])
io/corbel/evci/EvciRunner/main(java.lang.String[])#org/springframework/core/env/EnvironmentCapable/getEnvironment()
io/corbel/evci/EvciRunner/main(java.lang.String[])#org/slf4j/Logger/info(java.lang.String)
io/corbel/evci/EvciRunner/main(java.lang.String[])#io/corbel/evci/EvciService/EvciService(org.springframework.context.ApplicationContext)
io/corbel/evci/EvciRunner/main(java.lang.String[])#org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)
io/corbel/evci/EvciRunner/main(java.lang.String[])#java/lang/System/setProperty(java.lang.String,java.lang.String)
io/corbel/evci/EvciRunner/main(java.lang.String[])#org/springframework/core/env/PropertyResolver/getProperty(java.lang.String,java.lang.Class)
io/corbel/evci/EvciRunner/main(java.lang.String[])#io/corbel/lib/ws/cli/ServiceRunner/run(java.lang.String[])
io/corbel/resources/rem/model/SearchResource/setRelation(java.lang.String)#io/corbel/resources/rem/model/ResourceUri/setRelation(java.lang.String)
io/corbel/resources/rem/model/SearchResource/getType()#io/corbel/resources/rem/model/ResourceUri/getType()
io/corbel/resources/rem/model/SearchResource/getRelation()#io/corbel/resources/rem/model/ResourceUri/getRelation()
io/corbel/resources/rem/model/SearchResource/setType(java.lang.String)#io/corbel/resources/rem/model/ResourceUri/setType(java.lang.String)
io/corbel/resources/rem/operation/ResizeAndFill/apply(java.lang.String)#org/im4java/core/IMOps/resize(java.lang.Integer,java.lang.Integer)
io/corbel/resources/rem/operation/ResizeAndFill/apply(java.lang.String)#java/util/regex/Matcher/matches()
io/corbel/resources/rem/operation/ResizeAndFill/apply(java.lang.String)#org/im4java/core/IMOps/background(java.lang.String)
io/corbel/resources/rem/operation/ResizeAndFill/apply(java.lang.String)#org/im4java/core/IMOps/extent(java.lang.Integer,java.lang.Integer)
io/corbel/resources/rem/operation/ResizeAndFill/apply(java.lang.String)#org/im4java/core/IMOperation/IMOperation()
io/corbel/resources/rem/operation/ResizeAndFill/apply(java.lang.String)#io/corbel/resources/rem/operation/ImageOperation/getValues(java.lang.String,java.util.regex.Matcher)
io/corbel/resources/rem/operation/ResizeAndFill/apply(java.lang.String)#java/lang/Integer/parseInt(java.lang.String)
io/corbel/resources/rem/operation/ResizeAndFill/apply(java.lang.String)#java/util/List/get(int)
io/corbel/resources/rem/operation/ResizeAndFill/apply(java.lang.String)#org/im4java/core/IMOps/gravity(java.lang.String)
io/corbel/resources/rem/operation/ResizeAndFill/apply(java.lang.String)#java/util/regex/Pattern/matcher(java.lang.CharSequence)
io/corbel/resources/rem/operation/ResizeAndFill/apply(java.lang.String)#io/corbel/resources/rem/exception/ImageOperationsException/ImageOperationsException(java.lang.String,java.lang.Throwable)
io/corbel/resources/rem/operation/ResizeAndFill/apply(java.lang.String)#io/corbel/resources/rem/exception/ImageOperationsException/ImageOperationsException(java.lang.String)
io/corbel/iam/auth/provider/GoogleProvider/setConfiguration(java.util.Map)#java/util/Map/get(java.lang.Object)
io/corbel/iam/auth/provider/GoogleProvider/setConfiguration(java.util.Map)#io/corbel/iam/auth/provider/AbstractOAuth2Provider/setConfiguration(java.util.Map)
io/corbel/iam/auth/provider/GoogleProvider/setConfiguration(java.util.Map)#io/corbel/iam/auth/google/connect/GoogleConnectionFactory/GoogleConnectionFactory(java.lang.String,java.lang.String)
io/corbel/iam/auth/provider/GoogleProvider/getIdentity(io.corbel.iam.auth.OauthParams,java.lang.String,java.lang.String)#java/lang/Throwable/getMessage()
io/corbel/iam/auth/provider/GoogleProvider/getIdentity(io.corbel.iam.auth.OauthParams,java.lang.String,java.lang.String)#org/springframework/social/connect/Connection/getApi()
io/corbel/iam/auth/provider/GoogleProvider/getIdentity(io.corbel.iam.auth.OauthParams,java.lang.String,java.lang.String)#io/corbel/iam/exception/OauthServerConnectionException/OauthServerConnectionException(java.lang.String,java.lang.String)
io/corbel/iam/auth/provider/GoogleProvider/getIdentity(io.corbel.iam.auth.OauthParams,java.lang.String,java.lang.String)#io/corbel/iam/repository/IdentityRepository/findByOauthIdAndDomainAndOauthService(java.lang.String,java.lang.String,java.lang.String)
io/corbel/iam/auth/provider/GoogleProvider/getIdentity(io.corbel.iam.auth.OauthParams,java.lang.String,java.lang.String)#org/springframework/social/connect/support/OAuth2ConnectionFactory/createConnection(org.springframework.social.oauth2.AccessGrant)
io/corbel/iam/auth/provider/GoogleProvider/getIdentity(io.corbel.iam.auth.OauthParams,java.lang.String,java.lang.String)#io/corbel/iam/auth/google/api/userinfo/UserInfoOperations/getUserInfo()
io/corbel/iam/auth/provider/GoogleProvider/getIdentity(io.corbel.iam.auth.OauthParams,java.lang.String,java.lang.String)#org/springframework/core/NestedRuntimeException/getMessage()
io/corbel/iam/auth/provider/GoogleProvider/getIdentity(io.corbel.iam.auth.OauthParams,java.lang.String,java.lang.String)#io/corbel/iam/auth/google/api/userinfo/GoogleUserInfo/getId()
io/corbel/iam/auth/provider/GoogleProvider/getIdentity(io.corbel.iam.auth.OauthParams,java.lang.String,java.lang.String)#io/corbel/iam/exception/UnauthorizedException/UnauthorizedException(java.lang.String)
io/corbel/iam/auth/provider/GoogleProvider/getIdentity(io.corbel.iam.auth.OauthParams,java.lang.String,java.lang.String)#io/corbel/iam/auth/google/api/Google/userOperations()
io/corbel/iam/auth/provider/GoogleProvider/getIdentity(io.corbel.iam.auth.OauthParams,java.lang.String,java.lang.String)#org/springframework/social/connect/Connection/hasExpired()
io/corbel/iam/auth/provider/GoogleProvider/getIdentity(io.corbel.iam.auth.OauthParams,java.lang.String,java.lang.String)#io/corbel/iam/auth/provider/AbstractOAuth2Provider/getAccessGrant(io.corbel.iam.auth.OauthParams)
io/corbel/iam/auth/provider/GoogleProvider/getAuthUrl(java.lang.String)#org/springframework/social/connect/support/OAuth2ConnectionFactory/getOAuthOperations()
io/corbel/iam/auth/provider/GoogleProvider/getAuthUrl(java.lang.String)#java/net/URLEncoder/encode(java.lang.String,java.lang.String)
io/corbel/iam/auth/provider/GoogleProvider/getAuthUrl(java.lang.String)#org/springframework/social/oauth2/OAuth2Parameters/OAuth2Parameters()
io/corbel/iam/auth/provider/GoogleProvider/getAuthUrl(java.lang.String)#org/springframework/social/oauth2/OAuth2Parameters/setScope(java.lang.String)
io/corbel/iam/auth/provider/GoogleProvider/getAuthUrl(java.lang.String)#org/springframework/social/oauth2/OAuth2Parameters/setRedirectUri(java.lang.String)
io/corbel/iam/auth/provider/GoogleProvider/getAuthUrl(java.lang.String)#org/springframework/social/oauth2/OAuth2Operations/buildAuthorizeUrl(org.springframework.social.oauth2.GrantType,org.springframework.social.oauth2.OAuth2Parameters)
io/corbel/iam/auth/provider/GoogleProvider/getAuthUrl(java.lang.String)#org/slf4j/Logger/error(java.lang.String)
io/corbel/iam/auth/provider/GoogleProvider/getAuthUrl(java.lang.String)#org/springframework/social/oauth2/OAuth2Parameters/setState(java.lang.String)
io/corbel/resources/rem/i18n/ioc/I18nIoc/getI18nGetRem()#io/corbel/resources/rem/i18n/I18nGetRem/I18nGetRem()
io/corbel/resources/rem/i18n/ioc/I18nIoc/getGson()#com/google/gson/Gson/Gson()
io/corbel/resources/rem/i18n/ioc/I18nIoc/getI18nDeleteRem(com.google.gson.Gson)#io/corbel/resources/rem/i18n/I18nDeleteRem/I18nDeleteRem()
io/corbel/resources/rem/i18n/ioc/I18nIoc/getI18nPutRem(com.google.gson.Gson)#io/corbel/resources/rem/i18n/I18nPutRem/I18nPutRem(com.google.gson.Gson)
io/corbel/resources/rem/operation/Resize/apply(java.lang.String)#java/util/regex/Matcher/matches()
io/corbel/resources/rem/operation/Resize/apply(java.lang.String)#io/corbel/resources/rem/operation/ImageOperation/getValues(java.lang.String,java.util.regex.Matcher)
io/corbel/resources/rem/operation/Resize/apply(java.lang.String)#java/lang/Integer/parseInt(java.lang.String)
io/corbel/resources/rem/operation/Resize/apply(java.lang.String)#java/util/List/get(int)
io/corbel/resources/rem/operation/Resize/apply(java.lang.String)#java/util/regex/Pattern/matcher(java.lang.CharSequence)
io/corbel/resources/rem/operation/Resize/apply(java.lang.String)#io/corbel/resources/rem/exception/ImageOperationsException/ImageOperationsException(java.lang.String,java.lang.Throwable)
io/corbel/resources/rem/operation/Resize/apply(java.lang.String)#io/corbel/resources/rem/exception/ImageOperationsException/ImageOperationsException(java.lang.String)
io/corbel/resources/rem/operation/Resize/apply(java.lang.String)#org/im4java/core/IMOps/resize(java.lang.Integer,java.lang.Integer,java.lang.String)
io/corbel/resources/rem/operation/Resize/apply(java.lang.String)#org/im4java/core/IMOperation/IMOperation()
io/corbel/iam/verifier/UserExistsTokenVerifierTest/setup()#io/corbel/iam/verifier/UserExistsTokenVerifier/UserExistsTokenVerifier(io.corbel.iam.repository.UserRepository)
io/corbel/iam/verifier/UserExistsTokenVerifierTest/testUserNotExists()#io/corbel/iam/verifier/UserExistsTokenVerifier/verify(io.corbel.lib.token.reader.TokenReader)
io/corbel/iam/verifier/UserExistsTokenVerifierTest/testUserNotExists()#io/corbel/lib/token/TokenInfo/getUserId()
io/corbel/iam/verifier/UserExistsTokenVerifierTest/testUserNotExists()#org/springframework/data/repository/CrudRepository/findOne(ID)
io/corbel/iam/verifier/UserExistsTokenVerifierTest/testUserNotExists()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/verifier/UserExistsTokenVerifierTest/testUserNotExists()#io/corbel/lib/token/reader/TokenReader/getInfo()
io/corbel/iam/verifier/UserExistsTokenVerifierTest/testUserNotExists()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/iam/verifier/UserExistsTokenVerifierTest/testUserNotExists()#org/mockito/Mockito/when(T)
io/corbel/iam/verifier/UserExistsTokenVerifierTest/testOk()#io/corbel/iam/verifier/UserExistsTokenVerifier/verify(io.corbel.lib.token.reader.TokenReader)
io/corbel/iam/verifier/UserExistsTokenVerifierTest/testOk()#io/corbel/lib/token/TokenInfo/getUserId()
io/corbel/iam/verifier/UserExistsTokenVerifierTest/testOk()#org/springframework/data/repository/CrudRepository/findOne(ID)
io/corbel/iam/verifier/UserExistsTokenVerifierTest/testOk()#io/corbel/iam/model/User/User()
io/corbel/iam/verifier/UserExistsTokenVerifierTest/testOk()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/verifier/UserExistsTokenVerifierTest/testOk()#io/corbel/lib/token/reader/TokenReader/getInfo()
io/corbel/iam/verifier/UserExistsTokenVerifierTest/testOk()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/iam/verifier/UserExistsTokenVerifierTest/testOk()#org/mockito/Mockito/when(T)
io/corbel/webfs/ioc/WebfsIoc/getObjectMapper()#com/fasterxml/jackson/databind/ObjectMapper/registerModule(com.fasterxml.jackson.databind.Module)
io/corbel/webfs/ioc/WebfsIoc/getObjectMapper()#com/fasterxml/jackson/datatype/jsr310/JSR310Module/JSR310Module()
io/corbel/webfs/ioc/WebfsIoc/getObjectMapper()#com/fasterxml/jackson/databind/ObjectMapper/ObjectMapper()
io/corbel/webfs/ioc/WebfsIoc/getObjectMapper()#com/fasterxml/jackson/databind/ObjectMapper/configure(com.fasterxml.jackson.databind.DeserializationFeature,boolean)
io/corbel/webfs/ioc/WebfsIoc/getAmazonS3Service()#io/corbel/webfs/service/DefaultAmazonS3Service/DefaultAmazonS3Service(com.amazonaws.services.s3.AmazonS3,java.lang.String)
io/corbel/webfs/ioc/WebfsIoc/getAmazonS3Service()#io/corbel/webfs/ioc/WebfsIoc/getAmazonS3Client()
io/corbel/webfs/ioc/WebfsIoc/getAmazonS3Service()#org/springframework/core/env/PropertyResolver/getProperty(java.lang.String)
io/corbel/webfs/ioc/WebfsIoc/getAmazonS3Client()#com/amazonaws/services/s3/AmazonS3Client/AmazonS3Client(com.amazonaws.auth.AWSCredentials)
io/corbel/webfs/ioc/WebfsIoc/getAmazonS3Client()#com/amazonaws/services/s3/AmazonS3Client/setRegion(com.amazonaws.regions.Region)
io/corbel/webfs/ioc/WebfsIoc/getAmazonS3Client()#com/amazonaws/regions/Regions/fromName(java.lang.String)
io/corbel/webfs/ioc/WebfsIoc/getAmazonS3Client()#org/springframework/core/env/PropertyResolver/getProperty(java.lang.String)
io/corbel/webfs/ioc/WebfsIoc/getAmazonS3Client()#com/amazonaws/regions/Region/getRegion(com.amazonaws.regions.Regions)
io/corbel/webfs/ioc/WebfsIoc/getAmazonS3Client()#com/amazonaws/auth/BasicAWSCredentials/BasicAWSCredentials(java.lang.String,java.lang.String)
io/corbel/webfs/ioc/WebfsIoc/getWebResource()#io/corbel/webfs/ioc/WebfsIoc/getAmazonS3Service()
io/corbel/webfs/ioc/WebfsIoc/getWebResource()#io/corbel/webfs/api/WebResource/WebResource(io.corbel.webfs.service.AmazonS3Service)
io/corbel/iam/auth/google/connect/GoogleOAuth2Template/postForAccessGrant(java.lang.String,org.springframework.util.MultiValueMap)#io/corbel/iam/auth/google/connect/GoogleOAuth2Template/extractAccessGrant(java.util.Map)
io/corbel/iam/auth/google/connect/GoogleOAuth2Template/postForAccessGrant(java.lang.String,org.springframework.util.MultiValueMap)#org/springframework/http/HttpEntity/getBody()
io/corbel/iam/auth/google/connect/GoogleOAuth2Template/postForAccessGrant(java.lang.String,org.springframework.util.MultiValueMap)#org/springframework/http/HttpHeaders/HttpHeaders()
io/corbel/iam/auth/google/connect/GoogleOAuth2Template/postForAccessGrant(java.lang.String,org.springframework.util.MultiValueMap)#org/springframework/http/HttpEntity/HttpEntity(T,org.springframework.util.MultiValueMap)
io/corbel/iam/auth/google/connect/GoogleOAuth2Template/postForAccessGrant(java.lang.String,org.springframework.util.MultiValueMap)#org/springframework/http/HttpHeaders/setContentType(org.springframework.http.MediaType)
io/corbel/iam/auth/google/connect/GoogleOAuth2Template/postForAccessGrant(java.lang.String,org.springframework.util.MultiValueMap)#org/springframework/web/client/RestTemplate/exchange(java.lang.String,org.springframework.http.HttpMethod,org.springframework.http.HttpEntity,java.lang.Class,java.lang.Object[])
io/corbel/iam/auth/google/connect/GoogleOAuth2Template/postForAccessGrant(java.lang.String,org.springframework.util.MultiValueMap)#org/springframework/social/oauth2/OAuth2Template/getRestTemplate()
io/corbel/iam/auth/google/connect/GoogleOAuth2Template/extractAccessGrant(java.util.Map)#org/springframework/social/oauth2/OAuth2Template/createAccessGrant(java.lang.String,java.lang.String,java.lang.String,java.lang.Long,java.util.Map)
io/corbel/iam/auth/google/connect/GoogleOAuth2Template/extractAccessGrant(java.util.Map)#java/util/Map/get(java.lang.Object)
io/corbel/iam/auth/google/connect/GoogleOAuth2Template/extractAccessGrant(java.util.Map)#java/lang/Number/longValue()
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetRelation()#io/corbel/resources/rem/request/RequestParameters/getOptionalApiParameters()
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetRelation()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetRelation()#io/corbel/resources/rem/request/CollectionParameters/getPagination()
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetRelation()#io/corbel/resources/rem/request/ResourceId/ResourceId(java.lang.String)
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetRelation()#io/corbel/resources/rem/request/CollectionParameters/getAggregation()
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetRelation()#io/corbel/resources/rem/request/RequestParameters/getRequestedDomain()
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetRelation()#io/corbel/resources/rem/request/CollectionParameters/getQueries()
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetRelation()#io/corbel/resources/rem/Rem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetRelation()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetRelation()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetRelation()#io/corbel/resources/rem/model/ResourceUri/ResourceUri(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetRelation()#javax/ws/rs/core/Response/getEntity()
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetRelation()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetRelation()#io/corbel/resources/rem/request/CollectionParameters/getSort()
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetRelation()#java/util/Optional/ofNullable(T)
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetRelation()#java/util/Arrays/asList(T[])
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetRelation()#java/util/Optional/of(T)
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetRelation()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetRelation()#io/corbel/resources/rem/request/RelationParameters/getPredicateResource()
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetRelation()#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetRelation()#io/corbel/resources/rem/service/ResmiService/findRelation(io.corbel.resources.rem.model.ResourceUri,java.util.Optional)
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetRelation()#java/util/Optional/empty()
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetRelation()#com/google/gson/JsonArray/JsonArray()
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetRelation()#org/fest/assertions/api/Assertions/assertThat(T)
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetCollection()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetCollection()#javax/ws/rs/core/Response/getEntity()
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetCollection()#io/corbel/resources/rem/request/CollectionParameters/getPagination()
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetCollection()#io/corbel/resources/rem/Rem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional)
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetCollection()#io/corbel/resources/rem/request/CollectionParameters/getAggregation()
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetCollection()#io/corbel/resources/rem/request/RequestParameters/getRequestedDomain()
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetCollection()#io/corbel/resources/rem/request/CollectionParameters/getQueries()
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetCollection()#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetCollection()#java/util/Optional/empty()
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetCollection()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetCollection()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetCollection()#io/corbel/resources/rem/model/ResourceUri/ResourceUri(java.lang.String,java.lang.String)
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetCollection()#io/corbel/resources/rem/request/RequestParameters/getOptionalApiParameters()
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetCollection()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetCollection()#io/corbel/resources/rem/request/CollectionParameters/getSort()
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetCollection()#java/util/Optional/ofNullable(T)
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetCollection()#java/util/Arrays/asList(T[])
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetCollection()#java/util/Optional/of(T)
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetCollection()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetCollection()#com/google/gson/JsonArray/JsonArray()
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetCollection()#io/corbel/resources/rem/service/ResmiService/findCollection(io.corbel.resources.rem.model.ResourceUri,java.util.Optional)
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetCollection()#org/fest/assertions/api/Assertions/assertThat(T)
io/corbel/resources/rem/resmi/ResmiGetRemTest/testNotAllowed()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/resmi/ResmiGetRemTest/testNotAllowed()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/resmi/ResmiGetRemTest/testNotAllowed()#io/corbel/resources/rem/request/RequestParameters/getRequestedDomain()
io/corbel/resources/rem/resmi/ResmiGetRemTest/testNotAllowed()#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/rem/resmi/ResmiGetRemTest/testNotAllowed()#java/util/Optional/empty()
io/corbel/resources/rem/resmi/ResmiGetRemTest/testNotAllowed()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/resources/rem/resmi/ResmiGetRemTest/testNotAllowed()#io/corbel/resources/rem/Rem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)
io/corbel/resources/rem/resmi/ResmiGetRemTest/testNotAllowed()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetRelationResource()#io/corbel/resources/rem/request/RequestParameters/getOptionalApiParameters()
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetRelationResource()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetRelationResource()#io/corbel/resources/rem/request/CollectionParameters/getPagination()
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetRelationResource()#io/corbel/resources/rem/request/ResourceId/ResourceId(java.lang.String)
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetRelationResource()#io/corbel/resources/rem/request/CollectionParameters/getAggregation()
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetRelationResource()#io/corbel/resources/rem/request/RequestParameters/getRequestedDomain()
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetRelationResource()#io/corbel/resources/rem/request/CollectionParameters/getQueries()
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetRelationResource()#io/corbel/resources/rem/Rem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetRelationResource()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetRelationResource()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetRelationResource()#io/corbel/resources/rem/model/ResourceUri/ResourceUri(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetRelationResource()#javax/ws/rs/core/Response/getEntity()
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetRelationResource()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetRelationResource()#io/corbel/resources/rem/request/CollectionParameters/getSort()
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetRelationResource()#java/util/Optional/ofNullable(T)
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetRelationResource()#java/util/Arrays/asList(T[])
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetRelationResource()#java/util/Optional/of(T)
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetRelationResource()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetRelationResource()#io/corbel/resources/rem/request/RelationParameters/getPredicateResource()
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetRelationResource()#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetRelationResource()#io/corbel/resources/rem/service/ResmiService/findRelation(io.corbel.resources.rem.model.ResourceUri,java.util.Optional)
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetRelationResource()#java/util/Optional/empty()
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetRelationResource()#com/google/gson/JsonArray/JsonArray()
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetRelationResource()#org/fest/assertions/api/Assertions/assertThat(T)
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetResource()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetResource()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetResource()#io/corbel/resources/rem/request/RequestParameters/getRequestedDomain()
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetResource()#com/google/gson/JsonPrimitive/JsonPrimitive(java.lang.String)
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetResource()#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetResource()#com/google/gson/JsonObject/JsonObject()
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetResource()#java/util/Optional/empty()
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetResource()#org/fest/assertions/api/Assertions/assertThat(T)
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetResource()#com/google/gson/JsonObject/add(java.lang.String,com.google.gson.JsonElement)
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetResource()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetResource()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetResource()#io/corbel/resources/rem/model/ResourceUri/ResourceUri(java.lang.String,java.lang.String,java.lang.String)
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetResource()#javax/ws/rs/core/Response/getEntity()
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetResource()#io/corbel/resources/rem/Rem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetResource()#io/corbel/resources/rem/service/ResmiService/findResource(io.corbel.resources.rem.model.ResourceUri)
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetResource()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetCollectionAverage()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetCollectionAverage()#javax/ws/rs/core/Response/getEntity()
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetCollectionAverage()#io/corbel/resources/rem/service/ResmiService/aggregate(io.corbel.resources.rem.model.ResourceUri,io.corbel.resources.rem.request.CollectionParameters)
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetCollectionAverage()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetCollectionAverage()#io/corbel/resources/rem/Rem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional)
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetCollectionAverage()#io/corbel/resources/rem/request/CollectionParameters/getAggregation()
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetCollectionAverage()#io/corbel/resources/rem/request/RequestParameters/getRequestedDomain()
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetCollectionAverage()#io/corbel/resources/rem/request/CollectionParameters/getQueries()
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetCollectionAverage()#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetCollectionAverage()#io/corbel/lib/queries/request/Aggregation/getOperator()
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetCollectionAverage()#java/util/Optional/empty()
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetCollectionAverage()#org/fest/assertions/api/Assertions/assertThat(T)
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetCollectionAverage()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetCollectionAverage()#io/corbel/resources/rem/model/ResourceUri/ResourceUri(java.lang.String,java.lang.String)
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetCollectionAverage()#io/corbel/resources/rem/request/RequestParameters/getOptionalApiParameters()
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetCollectionAverage()#java/util/Optional/ofNullable(T)
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetCollectionAverage()#java/util/Arrays/asList(T[])
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetCollectionAverage()#java/util/Optional/of(T)
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetCollectionAverage()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetCollectionAverage()#io/corbel/lib/queries/request/Aggregation/operate(java.util.List)
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetCollectionAverage()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetRelationResourceNotFound()#io/corbel/resources/rem/request/RequestParameters/getOptionalApiParameters()
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetRelationResourceNotFound()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetRelationResourceNotFound()#io/corbel/resources/rem/model/ResourceUri/ResourceUri(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetRelationResourceNotFound()#io/corbel/resources/rem/request/CollectionParameters/getPagination()
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetRelationResourceNotFound()#io/corbel/resources/rem/request/ResourceId/ResourceId(java.lang.String)
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetRelationResourceNotFound()#io/corbel/resources/rem/request/CollectionParameters/getAggregation()
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetRelationResourceNotFound()#io/corbel/resources/rem/request/CollectionParameters/getQueries()
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetRelationResourceNotFound()#io/corbel/resources/rem/Rem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetRelationResourceNotFound()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetRelationResourceNotFound()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetRelationResourceNotFound()#io/corbel/resources/rem/request/CollectionParameters/getSort()
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetRelationResourceNotFound()#java/util/Optional/ofNullable(T)
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetRelationResourceNotFound()#java/util/Arrays/asList(T[])
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetRelationResourceNotFound()#java/util/Optional/of(T)
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetRelationResourceNotFound()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetRelationResourceNotFound()#io/corbel/resources/rem/request/RelationParameters/getPredicateResource()
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetRelationResourceNotFound()#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetRelationResourceNotFound()#io/corbel/resources/rem/service/ResmiService/findRelation(io.corbel.resources.rem.model.ResourceUri,java.util.Optional)
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetRelationResourceNotFound()#java/util/Optional/empty()
io/corbel/resources/rem/resmi/ResmiGetRemTest/setup()#org/mockito/MockitoAnnotations/initMocks(java.lang.Object)
io/corbel/resources/rem/resmi/ResmiGetRemTest/setup()#io/corbel/resources/rem/resmi/ResmiRemTest/setup()
io/corbel/resources/rem/resmi/ResmiGetRemTest/setup()#io/corbel/resources/rem/resmi/ResmiGetRem/ResmiGetRem(io.corbel.resources.rem.service.ResmiService)
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetCollectionInvalidApiParam()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetCollectionInvalidApiParam()#io/corbel/resources/rem/request/CollectionParameters/getPagination()
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetCollectionInvalidApiParam()#org/mockito/stubbing/OngoingStubbing/thenThrow(java.lang.Class<? extends java.lang.Throwable>[])
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetCollectionInvalidApiParam()#io/corbel/resources/rem/Rem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional)
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetCollectionInvalidApiParam()#io/corbel/resources/rem/request/CollectionParameters/getAggregation()
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetCollectionInvalidApiParam()#io/corbel/resources/rem/request/RequestParameters/getRequestedDomain()
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetCollectionInvalidApiParam()#io/corbel/resources/rem/request/CollectionParameters/getQueries()
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetCollectionInvalidApiParam()#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetCollectionInvalidApiParam()#java/util/Optional/empty()
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetCollectionInvalidApiParam()#io/corbel/resources/rem/service/ResmiService/findCollection(io.corbel.resources.rem.model.ResourceUri,java.util.Optional)
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetCollectionInvalidApiParam()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetCollectionInvalidApiParam()#io/corbel/resources/rem/model/ResourceUri/ResourceUri(java.lang.String,java.lang.String)
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetCollectionInvalidApiParam()#io/corbel/resources/rem/request/RequestParameters/getOptionalApiParameters()
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetCollectionInvalidApiParam()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetCollectionInvalidApiParam()#io/corbel/resources/rem/request/CollectionParameters/getSort()
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetCollectionInvalidApiParam()#java/util/Optional/ofNullable(T)
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetCollectionInvalidApiParam()#java/util/Arrays/asList(T[])
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetCollectionInvalidApiParam()#java/util/Optional/of(T)
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetCollectionInvalidApiParam()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetRelationInvalidApiParam()#io/corbel/resources/rem/request/RequestParameters/getOptionalApiParameters()
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetRelationInvalidApiParam()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetRelationInvalidApiParam()#io/corbel/resources/rem/model/ResourceUri/ResourceUri(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetRelationInvalidApiParam()#io/corbel/resources/rem/request/CollectionParameters/getPagination()
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetRelationInvalidApiParam()#org/mockito/stubbing/OngoingStubbing/thenThrow(java.lang.Class<? extends java.lang.Throwable>[])
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetRelationInvalidApiParam()#io/corbel/resources/rem/request/ResourceId/ResourceId(java.lang.String)
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetRelationInvalidApiParam()#io/corbel/resources/rem/request/CollectionParameters/getAggregation()
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetRelationInvalidApiParam()#io/corbel/resources/rem/request/RequestParameters/getRequestedDomain()
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetRelationInvalidApiParam()#io/corbel/resources/rem/request/CollectionParameters/getQueries()
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetRelationInvalidApiParam()#io/corbel/resources/rem/Rem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetRelationInvalidApiParam()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetRelationInvalidApiParam()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetRelationInvalidApiParam()#io/corbel/resources/rem/request/CollectionParameters/getSort()
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetRelationInvalidApiParam()#java/util/Optional/ofNullable(T)
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetRelationInvalidApiParam()#java/util/Arrays/asList(T[])
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetRelationInvalidApiParam()#java/util/Optional/of(T)
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetRelationInvalidApiParam()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetRelationInvalidApiParam()#io/corbel/resources/rem/request/RelationParameters/getPredicateResource()
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetRelationInvalidApiParam()#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetRelationInvalidApiParam()#io/corbel/resources/rem/service/ResmiService/findRelation(io.corbel.resources.rem.model.ResourceUri,java.util.Optional)
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetRelationInvalidApiParam()#java/util/Optional/empty()
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetCollectionCount()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetCollectionCount()#javax/ws/rs/core/Response/getEntity()
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetCollectionCount()#io/corbel/resources/rem/service/ResmiService/aggregate(io.corbel.resources.rem.model.ResourceUri,io.corbel.resources.rem.request.CollectionParameters)
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetCollectionCount()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetCollectionCount()#io/corbel/resources/rem/Rem/collection(java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.net.URI,java.util.Optional)
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetCollectionCount()#io/corbel/resources/rem/request/CollectionParameters/getAggregation()
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetCollectionCount()#io/corbel/resources/rem/request/RequestParameters/getRequestedDomain()
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetCollectionCount()#io/corbel/resources/rem/request/CollectionParameters/getQueries()
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetCollectionCount()#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetCollectionCount()#io/corbel/lib/queries/request/Aggregation/getOperator()
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetCollectionCount()#java/util/Optional/empty()
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetCollectionCount()#org/fest/assertions/api/Assertions/assertThat(T)
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetCollectionCount()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetCollectionCount()#io/corbel/resources/rem/model/ResourceUri/ResourceUri(java.lang.String,java.lang.String)
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetCollectionCount()#io/corbel/resources/rem/request/RequestParameters/getOptionalApiParameters()
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetCollectionCount()#java/util/Optional/ofNullable(T)
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetCollectionCount()#java/util/Arrays/asList(T[])
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetCollectionCount()#java/util/Optional/of(T)
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetCollectionCount()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetCollectionCount()#io/corbel/lib/queries/request/Aggregation/operate(java.util.List)
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetCollectionCount()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetRelationCount()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetRelationCount()#javax/ws/rs/core/Response/getEntity()
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetRelationCount()#io/corbel/resources/rem/service/ResmiService/aggregate(io.corbel.resources.rem.model.ResourceUri,io.corbel.resources.rem.request.CollectionParameters)
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetRelationCount()#io/corbel/resources/rem/request/ResourceId/getId()
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetRelationCount()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetRelationCount()#io/corbel/resources/rem/request/CollectionParameters/getAggregation()
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetRelationCount()#io/corbel/resources/rem/request/RequestParameters/getRequestedDomain()
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetRelationCount()#io/corbel/resources/rem/request/CollectionParameters/getQueries()
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetRelationCount()#io/corbel/lib/queries/request/Aggregation/getOperator()
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetRelationCount()#java/util/Optional/empty()
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetRelationCount()#org/fest/assertions/api/Assertions/assertThat(T)
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetRelationCount()#io/corbel/resources/rem/Rem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetRelationCount()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetRelationCount()#io/corbel/resources/rem/request/RequestParameters/getOptionalApiParameters()
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetRelationCount()#io/corbel/resources/rem/model/ResourceUri/ResourceUri(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetRelationCount()#java/util/Optional/ofNullable(T)
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetRelationCount()#java/util/Arrays/asList(T[])
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetRelationCount()#java/util/Optional/of(T)
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetRelationCount()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetRelationCount()#io/corbel/resources/rem/request/RelationParameters/getPredicateResource()
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetRelationCount()#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetRelationCount()#io/corbel/lib/queries/request/Aggregation/operate(java.util.List)
io/corbel/resources/rem/resmi/ResmiGetRemTest/testGetRelationCount()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/resources/rem/resmi/ResmiGetRemTest/testResourceNotFound()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/resmi/ResmiGetRemTest/testResourceNotFound()#io/corbel/resources/rem/model/ResourceUri/ResourceUri(java.lang.String,java.lang.String,java.lang.String)
io/corbel/resources/rem/resmi/ResmiGetRemTest/testResourceNotFound()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/resmi/ResmiGetRemTest/testResourceNotFound()#io/corbel/resources/rem/request/RequestParameters/getRequestedDomain()
io/corbel/resources/rem/resmi/ResmiGetRemTest/testResourceNotFound()#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/rem/resmi/ResmiGetRemTest/testResourceNotFound()#java/util/Optional/empty()
io/corbel/resources/rem/resmi/ResmiGetRemTest/testResourceNotFound()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/resources/rem/resmi/ResmiGetRemTest/testResourceNotFound()#io/corbel/resources/rem/Rem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)
io/corbel/resources/rem/resmi/ResmiGetRemTest/testResourceNotFound()#io/corbel/resources/rem/service/ResmiService/findResource(io.corbel.resources.rem.model.ResourceUri)
io/corbel/resources/rem/resmi/ResmiGetRemTest/testResourceNotFound()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/iam/service/DefaultRefreshTokenServiceTest/testGetUserFromRefreshToken()#org/springframework/data/repository/CrudRepository/findOne(ID)
io/corbel/iam/service/DefaultRefreshTokenServiceTest/testGetUserFromRefreshToken()#io/corbel/iam/model/User/User()
io/corbel/iam/service/DefaultRefreshTokenServiceTest/testGetUserFromRefreshToken()#io/corbel/iam/auth/AuthorizationRequestContext/hasPrincipal()
io/corbel/iam/service/DefaultRefreshTokenServiceTest/testGetUserFromRefreshToken()#io/corbel/iam/service/RefreshTokenService/getUserFromRefreshToken(java.lang.String)
io/corbel/iam/service/DefaultRefreshTokenServiceTest/testGetUserFromRefreshToken()#org/fest/assertions/api/AbstractAssert/isNotNull()
io/corbel/iam/service/DefaultRefreshTokenServiceTest/testGetUserFromRefreshToken()#io/corbel/lib/token/parser/TokenParser/parseAndVerify(java.lang.String)
io/corbel/iam/service/DefaultRefreshTokenServiceTest/testGetUserFromRefreshToken()#org/fest/assertions/api/Assertions/assertThat(T)
io/corbel/iam/service/DefaultRefreshTokenServiceTest/testGetUserFromRefreshToken()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/service/DefaultRefreshTokenServiceTest/testGetUserFromRefreshToken()#io/corbel/lib/token/reader/TokenReader/getInfo()
io/corbel/iam/service/DefaultRefreshTokenServiceTest/testGetUserFromRefreshToken()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/iam/service/DefaultRefreshTokenServiceTest/testGetUserFromRefreshToken()#org/mockito/Mockito/when(T)
io/corbel/iam/service/DefaultRefreshTokenServiceTest/testCreateRefreshToken()#io/corbel/iam/service/RefreshTokenService/createRefreshToken(io.corbel.iam.auth.AuthorizationRequestContext,java.lang.String)
io/corbel/iam/service/DefaultRefreshTokenServiceTest/testCreateRefreshToken()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/service/DefaultRefreshTokenServiceTest/testCreateRefreshToken()#io/corbel/lib/token/TokenGrant/getAccessToken()
io/corbel/iam/service/DefaultRefreshTokenServiceTest/testCreateRefreshToken()#org/mockito/Matchers/any(java.lang.Class)
io/corbel/iam/service/DefaultRefreshTokenServiceTest/testCreateRefreshToken()#io/corbel/iam/model/User/User()
io/corbel/iam/service/DefaultRefreshTokenServiceTest/testCreateRefreshToken()#io/corbel/iam/auth/AuthorizationRequestContext/hasPrincipal()
io/corbel/iam/service/DefaultRefreshTokenServiceTest/testCreateRefreshToken()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/iam/service/DefaultRefreshTokenServiceTest/testCreateRefreshToken()#org/mockito/Matchers/eq(long)
io/corbel/iam/service/DefaultRefreshTokenServiceTest/testCreateRefreshToken()#org/mockito/Matchers/eq(T)
io/corbel/iam/service/DefaultRefreshTokenServiceTest/testCreateRefreshToken()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/iam/service/DefaultRefreshTokenServiceTest/testCreateRefreshToken()#org/mockito/Mockito/when(T)
io/corbel/iam/service/DefaultRefreshTokenServiceTest/testCreateRefreshToken()#io/corbel/iam/model/Entity/setId(java.lang.String)
io/corbel/iam/service/DefaultRefreshTokenServiceTest/testCreateRefreshToken()#io/corbel/lib/token/factory/TokenFactory/createToken(io.corbel.lib.token.TokenInfo,long,java.lang.String[])
io/corbel/iam/service/DefaultRefreshTokenServiceTest/testCreateRefreshToken()#io/corbel/iam/auth/AuthorizationRequestContext/getPrincipal()
io/corbel/iam/service/DefaultRefreshTokenServiceTest/setUp()#io/corbel/iam/auth/AuthorizationRequestContext/getDeviceId()
io/corbel/iam/service/DefaultRefreshTokenServiceTest/setUp()#io/corbel/lib/token/TokenInfo/Builder/setState(java.lang.String)
io/corbel/iam/service/DefaultRefreshTokenServiceTest/setUp()#io/corbel/iam/auth/AuthorizationRequestContext/getPrincipal()
io/corbel/iam/service/DefaultRefreshTokenServiceTest/setUp()#io/corbel/iam/service/DefaultRefreshTokenService/DefaultRefreshTokenService(io.corbel.lib.token.parser.TokenParser,io.corbel.iam.repository.UserRepository,io.corbel.lib.token.factory.TokenFactory,long,io.corbel.lib.token.repository.OneTimeAccessTokenRepository)
io/corbel/iam/service/DefaultRefreshTokenServiceTest/setUp()#java/lang/System/currentTimeMillis()
io/corbel/iam/service/DefaultRefreshTokenServiceTest/setUp()#io/corbel/lib/token/TokenInfo/Builder/setClientId(java.lang.String)
io/corbel/iam/service/DefaultRefreshTokenServiceTest/setUp()#io/corbel/lib/token/TokenInfo/newBuilder()
io/corbel/iam/service/DefaultRefreshTokenServiceTest/setUp()#io/corbel/lib/token/TokenInfo/Builder/setUserId(java.lang.String)
io/corbel/iam/service/DefaultRefreshTokenServiceTest/setUp()#io/corbel/lib/token/TokenInfo/Builder/setType(io.corbel.lib.token.model.TokenType)
io/corbel/iam/service/DefaultRefreshTokenServiceTest/setUp()#io/corbel/iam/model/Entity/getId()
io/corbel/iam/service/DefaultRefreshTokenServiceTest/setUp()#io/corbel/lib/token/TokenGrant/TokenGrant(java.lang.String,long)
io/corbel/iam/service/DefaultRefreshTokenServiceTest/setUp()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/service/DefaultRefreshTokenServiceTest/setUp()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/iam/service/DefaultRefreshTokenServiceTest/setUp()#org/mockito/Mockito/when(T)
io/corbel/iam/service/DefaultRefreshTokenServiceTest/setUp()#io/corbel/lib/token/TokenInfo/Builder/setDeviceId(java.lang.String)
io/corbel/iam/service/DefaultRefreshTokenServiceTest/setUp()#java/lang/Long/toString(long)
io/corbel/iam/service/DefaultRefreshTokenServiceTest/setUp()#io/corbel/lib/token/TokenInfo/Builder/build()
io/corbel/iam/service/DefaultRefreshTokenServiceTest/setUp()#io/corbel/lib/token/TokenInfo/Builder/setOneUseToken(boolean)
io/corbel/iam/service/DefaultRefreshTokenServiceTest/setUp()#io/corbel/iam/auth/AuthorizationRequestContext/getIssuerClientId()
io/corbel/iam/service/DefaultRefreshTokenServiceTest/testInvalidateOneRefreshTokens()#org/mockito/Mockito/verify(T)
io/corbel/iam/service/DefaultRefreshTokenServiceTest/testInvalidateOneRefreshTokens()#java/util/Optional/of(T)
io/corbel/iam/service/DefaultRefreshTokenServiceTest/testInvalidateOneRefreshTokens()#io/corbel/iam/service/RefreshTokenService/invalidateRefreshToken(java.lang.String,java.util.Optional)
io/corbel/iam/service/DefaultRefreshTokenServiceTest/testInvalidateOneRefreshTokens()#io/corbel/lib/token/repository/CustomOneTimeAccessTokenRepository/deleteByTags(java.lang.String[])
io/corbel/iam/service/DefaultRefreshTokenServiceTest/testInvalidateAllRefreshTokens()#org/mockito/Mockito/verify(T)
io/corbel/iam/service/DefaultRefreshTokenServiceTest/testInvalidateAllRefreshTokens()#io/corbel/iam/service/RefreshTokenService/invalidateRefreshToken(java.lang.String)
io/corbel/iam/service/DefaultRefreshTokenServiceTest/testInvalidateAllRefreshTokens()#io/corbel/lib/token/repository/CustomOneTimeAccessTokenRepository/deleteByTags(java.lang.String[])
io/corbel/iam/service/DefaultRefreshTokenServiceTest/testCreateRefreshTokenWithoutUser()#io/corbel/iam/service/RefreshTokenService/createRefreshToken(io.corbel.iam.auth.AuthorizationRequestContext,java.lang.String)
io/corbel/iam/service/DefaultRefreshTokenServiceTest/testCreateRefreshTokenWithoutUser()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/service/DefaultRefreshTokenServiceTest/testCreateRefreshTokenWithoutUser()#org/fest/assertions/api/AbstractAssert/isNull()
io/corbel/iam/service/DefaultRefreshTokenServiceTest/testCreateRefreshTokenWithoutUser()#org/mockito/Mockito/when(T)
io/corbel/iam/service/DefaultRefreshTokenServiceTest/testCreateRefreshTokenWithoutUser()#io/corbel/iam/auth/AuthorizationRequestContext/hasPrincipal()
io/corbel/iam/service/DefaultRefreshTokenServiceTest/testCreateRefreshTokenWithoutUser()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/iam/service/DefaultRefreshTokenServiceTest/testBadRefreshToken()#org/mockito/Mockito/when(T)
io/corbel/iam/service/DefaultRefreshTokenServiceTest/testBadRefreshToken()#io/corbel/lib/token/exception/TokenVerificationException/TokenVerificationException(java.lang.String,java.lang.Throwable)
io/corbel/iam/service/DefaultRefreshTokenServiceTest/testBadRefreshToken()#io/corbel/iam/service/RefreshTokenService/getUserFromRefreshToken(java.lang.String)
io/corbel/iam/service/DefaultRefreshTokenServiceTest/testBadRefreshToken()#io/corbel/lib/token/parser/TokenParser/parseAndVerify(java.lang.String)
io/corbel/iam/service/DefaultRefreshTokenServiceTest/testBadRefreshToken()#org/mockito/stubbing/OngoingStubbing/thenThrow(java.lang.Throwable[])
io/corbel/iam/service/DefaultRefreshTokenServiceTest/testBadRefreshToken()#java/lang/IllegalArgumentException/IllegalArgumentException()
io/corbel/resources/rem/plugin/RemAclPlugin/register(io.corbel.resources.rem.RemRegistry)#org/springframework/http/MediaType/valueOf(java.lang.String)
io/corbel/resources/rem/plugin/RemAclPlugin/register(io.corbel.resources.rem.RemRegistry)#io/corbel/resources/rem/service/AclConfigurationService/refreshRegistry()
io/corbel/resources/rem/plugin/RemAclPlugin/register(io.corbel.resources.rem.RemRegistry)#org/springframework/beans/factory/BeanFactory/getBean(java.lang.String,java.lang.Class)
io/corbel/resources/rem/plugin/RemAclPlugin/register(io.corbel.resources.rem.RemRegistry)#io/corbel/resources/rem/RemRegistry/registerRem(io.corbel.resources.rem.Rem,java.lang.String,org.springframework.http.MediaType,org.springframework.http.HttpMethod[])
io/corbel/resources/rem/plugin/RemAclPlugin/init()#org/springframework/context/annotation/AnnotationConfigApplicationContext/AnnotationConfigApplicationContext(java.lang.Class<?>[])
io/corbel/resources/rem/plugin/RemAclPlugin/init()#io/corbel/resources/rem/service/AclConfigurationService/setRemService(io.corbel.resources.rem.service.RemService)
io/corbel/resources/rem/plugin/RemAclPlugin/init()#org/springframework/core/env/EnvironmentCapable/getEnvironment()
io/corbel/resources/rem/plugin/RemAclPlugin/init()#io/corbel/resources/rem/plugin/RemPlugin/init()
io/corbel/resources/rem/plugin/RemAclPlugin/init()#io/corbel/resources/rem/eventbus/AclConfigurationEventHandler/setAclConfigurationService(io.corbel.resources.rem.service.AclConfigurationService)
io/corbel/resources/rem/plugin/RemAclPlugin/init()#org/slf4j/Logger/info(java.lang.String)
io/corbel/resources/rem/plugin/RemAclPlugin/init()#io/corbel/lib/config/ConfigurationHelper/setConfigurationNamespace(java.lang.String)
io/corbel/resources/rem/plugin/RemAclPlugin/init()#io/corbel/resources/rem/service/AclConfigurationService/setRemsAndMethods(java.util.List)
io/corbel/resources/rem/plugin/RemAclPlugin/init()#io/corbel/resources/rem/service/AclResourcesService/setRemService(io.corbel.resources.rem.service.RemService)
io/corbel/resources/rem/plugin/RemAclPlugin/init()#io/corbel/resources/rem/acl/AclBaseRem/setRemService(io.corbel.resources.rem.service.RemService)
io/corbel/resources/rem/plugin/RemAclPlugin/init()#org/apache/commons/lang3/tuple/Pair/of(L,R)
io/corbel/resources/rem/plugin/RemAclPlugin/init()#org/springframework/core/env/PropertyResolver/getProperty(java.lang.String,java.lang.String)
io/corbel/resources/rem/plugin/RemAclPlugin/init()#org/springframework/beans/factory/BeanFactory/getBean(java.lang.Class)
io/corbel/resources/rem/plugin/RemAclPlugin/init()#java/util/Arrays/asList(T[])
io/corbel/iam/repository/ClientRepositoryImpl/delete(java.lang.String,java.lang.String)#org/springframework/data/mongodb/core/query/Criteria/is(java.lang.Object)
io/corbel/iam/repository/ClientRepositoryImpl/delete(java.lang.String,java.lang.String)#org/springframework/data/mongodb/core/query/Query/query(org.springframework.data.mongodb.core.query.CriteriaDefinition)
io/corbel/iam/repository/ClientRepositoryImpl/delete(java.lang.String,java.lang.String)#org/springframework/data/mongodb/core/query/Criteria/and(java.lang.String)
io/corbel/iam/repository/ClientRepositoryImpl/delete(java.lang.String,java.lang.String)#org/springframework/data/mongodb/core/query/Criteria/where(java.lang.String)
io/corbel/iam/repository/ClientRepositoryImpl/delete(java.lang.String,java.lang.String)#org/springframework/data/mongodb/core/MongoOperations/findAndRemove(org.springframework.data.mongodb.core.query.Query,java.lang.Class)
io/corbel/iam/repository/ClientRepositoryImpl/findCredentialById(java.lang.String)#org/springframework/data/mongodb/core/query/Criteria/is(java.lang.Object)
io/corbel/iam/repository/ClientRepositoryImpl/findCredentialById(java.lang.String)#org/springframework/data/mongodb/core/query/Criteria/where(java.lang.String)
io/corbel/iam/repository/ClientRepositoryImpl/findCredentialById(java.lang.String)#org/springframework/data/mongodb/core/query/Field/include(java.lang.String)
io/corbel/iam/repository/ClientRepositoryImpl/findCredentialById(java.lang.String)#org/springframework/data/mongodb/core/query/Query/query(org.springframework.data.mongodb.core.query.CriteriaDefinition)
io/corbel/iam/repository/ClientRepositoryImpl/findCredentialById(java.lang.String)#org/springframework/data/mongodb/core/MongoOperations/findOne(org.springframework.data.mongodb.core.query.Query,java.lang.Class,java.lang.String)
io/corbel/iam/repository/ClientRepositoryImpl/findCredentialById(java.lang.String)#org/springframework/data/mongodb/core/query/Query/fields()
io/corbel/iam/repository/ClientRepositoryImpl/deleteByDomain(java.lang.String)#org/springframework/data/mongodb/core/query/Criteria/is(java.lang.Object)
io/corbel/iam/repository/ClientRepositoryImpl/deleteByDomain(java.lang.String)#org/springframework/data/mongodb/core/query/Criteria/where(java.lang.String)
io/corbel/iam/repository/ClientRepositoryImpl/deleteByDomain(java.lang.String)#org/springframework/data/mongodb/core/query/Query/query(org.springframework.data.mongodb.core.query.CriteriaDefinition)
io/corbel/iam/repository/ClientRepositoryImpl/deleteByDomain(java.lang.String)#org/springframework/data/mongodb/core/MongoOperations/remove(org.springframework.data.mongodb.core.query.Query,java.lang.Class)
io/corbel/iam/service/DefaultIdentityServiceTest/createIdentity()#io/corbel/iam/model/Identity/setOauthService(java.lang.String)
io/corbel/iam/service/DefaultIdentityServiceTest/createIdentity()#io/corbel/iam/model/Identity/setDomain(java.lang.String)
io/corbel/iam/service/DefaultIdentityServiceTest/createIdentity()#io/corbel/iam/model/Identity/setUserId(java.lang.String)
io/corbel/iam/service/DefaultIdentityServiceTest/createIdentity()#io/corbel/iam/model/Identity/Identity()
io/corbel/iam/service/DefaultIdentityServiceTest/testfindUserIdentitites()#io/corbel/iam/model/Entity/getId()
io/corbel/iam/service/DefaultIdentityServiceTest/testfindUserIdentitites()#org/mockito/Mockito/verify(T)
io/corbel/iam/service/DefaultIdentityServiceTest/testfindUserIdentitites()#io/corbel/iam/repository/IdentityRepository/findByUserIdAndDomain(java.lang.String,java.lang.String)
io/corbel/iam/service/DefaultIdentityServiceTest/testfindUserIdentitites()#io/corbel/iam/service/IdentityService/findUserIdentities(io.corbel.iam.model.User)
io/corbel/iam/service/DefaultIdentityServiceTest/testfindUserIdentitites()#io/corbel/iam/service/DefaultIdentityServiceTest/createUser()
io/corbel/iam/service/DefaultIdentityServiceTest/testfindUserIdentitites()#io/corbel/iam/model/User/getDomain()
io/corbel/iam/service/DefaultIdentityServiceTest/testAddDuplicatedOauthServiceIdentity()#io/corbel/iam/service/DefaultIdentityServiceTest/createIdentity()
io/corbel/iam/service/DefaultIdentityServiceTest/testAddDuplicatedOauthServiceIdentity()#org/mockito/Mockito/when(T)
io/corbel/iam/service/DefaultIdentityServiceTest/testAddDuplicatedOauthServiceIdentity()#io/corbel/iam/service/IdentityService/addIdentity(io.corbel.iam.model.Identity)
io/corbel/iam/service/DefaultIdentityServiceTest/testAddDuplicatedOauthServiceIdentity()#io/corbel/iam/repository/IdentityRepositoryCustom/existsByDomainAndUserIdAndOauthService(java.lang.String,java.lang.String,java.lang.String)
io/corbel/iam/service/DefaultIdentityServiceTest/testAddDuplicatedOauthServiceIdentity()#org/mockito/Matchers/any()
io/corbel/iam/service/DefaultIdentityServiceTest/testAddDuplicatedIdentity()#io/corbel/iam/service/DefaultIdentityServiceTest/createIdentity()
io/corbel/iam/service/DefaultIdentityServiceTest/testAddDuplicatedIdentity()#org/mockito/stubbing/OngoingStubbing/thenThrow(java.lang.Class<? extends java.lang.Throwable>[])
io/corbel/iam/service/DefaultIdentityServiceTest/testAddDuplicatedIdentity()#org/mockito/Mockito/when(T)
io/corbel/iam/service/DefaultIdentityServiceTest/testAddDuplicatedIdentity()#io/corbel/iam/service/IdentityService/addIdentity(io.corbel.iam.model.Identity)
io/corbel/iam/service/DefaultIdentityServiceTest/testAddDuplicatedIdentity()#io/corbel/iam/repository/IdentityRepositoryCustom/existsByDomainAndUserIdAndOauthService(java.lang.String,java.lang.String,java.lang.String)
io/corbel/iam/service/DefaultIdentityServiceTest/testAddDuplicatedIdentity()#org/mockito/Matchers/any()
io/corbel/iam/service/DefaultIdentityServiceTest/testAddDuplicatedIdentity()#org/springframework/data/repository/CrudRepository/save(S)
io/corbel/iam/service/DefaultIdentityServiceTest/createUser()#io/corbel/iam/model/User/setUsername(java.lang.String)
io/corbel/iam/service/DefaultIdentityServiceTest/createUser()#io/corbel/iam/model/User/User()
io/corbel/iam/service/DefaultIdentityServiceTest/createUser()#io/corbel/iam/model/User/setDomain(java.lang.String)
io/corbel/iam/service/DefaultIdentityServiceTest/testDeleteUserIdentitites()#io/corbel/iam/model/Entity/getId()
io/corbel/iam/service/DefaultIdentityServiceTest/testDeleteUserIdentitites()#org/mockito/Mockito/verify(T)
io/corbel/iam/service/DefaultIdentityServiceTest/testDeleteUserIdentitites()#io/corbel/iam/service/IdentityService/deleteUserIdentities(io.corbel.iam.model.User)
io/corbel/iam/service/DefaultIdentityServiceTest/testDeleteUserIdentitites()#io/corbel/iam/repository/IdentityRepositoryCustom/deleteByUserIdAndDomain(java.lang.String,java.lang.String)
io/corbel/iam/service/DefaultIdentityServiceTest/testDeleteUserIdentitites()#io/corbel/iam/service/DefaultIdentityServiceTest/createUser()
io/corbel/iam/service/DefaultIdentityServiceTest/testDeleteUserIdentitites()#io/corbel/iam/model/User/getDomain()
io/corbel/iam/service/DefaultIdentityServiceTest/testAddIdentity()#io/corbel/iam/model/Identity/getOauthService()
io/corbel/iam/service/DefaultIdentityServiceTest/testAddIdentity()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/service/DefaultIdentityServiceTest/testAddIdentity()#io/corbel/iam/model/Identity/getUserId()
io/corbel/iam/service/DefaultIdentityServiceTest/testAddIdentity()#org/mockito/Mockito/when(T)
io/corbel/iam/service/DefaultIdentityServiceTest/testAddIdentity()#org/mockito/Mockito/verify(T)
io/corbel/iam/service/DefaultIdentityServiceTest/testAddIdentity()#io/corbel/iam/service/IdentityService/addIdentity(io.corbel.iam.model.Identity)
io/corbel/iam/service/DefaultIdentityServiceTest/testAddIdentity()#io/corbel/iam/repository/IdentityRepositoryCustom/existsByDomainAndUserIdAndOauthService(java.lang.String,java.lang.String,java.lang.String)
io/corbel/iam/service/DefaultIdentityServiceTest/testAddIdentity()#org/springframework/data/repository/CrudRepository/save(S)
io/corbel/iam/service/DefaultIdentityServiceTest/testAddIdentity()#io/corbel/iam/service/DefaultIdentityServiceTest/createIdentity()
io/corbel/iam/service/DefaultIdentityServiceTest/testAddIdentity()#io/corbel/iam/model/Identity/getDomain()
io/corbel/iam/service/DefaultIdentityServiceTest/setUp()#io/corbel/iam/service/DefaultIdentityService/DefaultIdentityService(io.corbel.iam.repository.IdentityRepository)
io/corbel/resources/href/LinksBuilder/GroundLinksBuilder/id(java.lang.String)#io/corbel/resources/href/LinksBuilder/ResourceLinksBuilder/ResourceLinksBuilder(java.net.URI,java.lang.String)
io/corbel/oauth/session/DefaultSessionCookieFactory/destroyCookie(java.lang.String)#javax/ws/rs/core/NewCookie/NewCookie(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,int,boolean)
io/corbel/oauth/session/DefaultSessionCookieFactory/createCookie(java.lang.String)#javax/ws/rs/core/NewCookie/NewCookie(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,int,boolean)
io/corbel/evci/service/DefaultEventServiceTest/setUp()#io/corbel/evci/service/DefaultEventService/DefaultEventService(org.springframework.amqp.core.AmqpTemplate,java.util.function.UnaryOperator)
io/corbel/evci/service/DefaultEventServiceTest/registerEventTest()#io/corbel/evci/service/DefaultEventService/registerEvent(java.lang.String,com.fasterxml.jackson.databind.JsonNode)
io/corbel/evci/service/DefaultEventServiceTest/registerEventTest()#com/fasterxml/jackson/databind/ObjectMapper/ObjectMapper()
io/corbel/evci/service/DefaultEventServiceTest/registerEventTest()#com/fasterxml/jackson/databind/ObjectMapper/readTree(java.lang.String)
io/corbel/evci/service/DefaultEventServiceTest/registerEventTest()#org/springframework/amqp/core/AmqpTemplate/convertAndSend(java.lang.String,java.lang.String,java.lang.Object)
io/corbel/evci/service/DefaultEventServiceTest/registerEventTest()#org/mockito/Mockito/verify(T)
io/corbel/iam/repository/UserRepositoryImpl/findUserDomain(java.lang.String)#io/corbel/lib/mongo/utils/MongoCommonOperations/findStringFieldById(org.springframework.data.mongodb.core.MongoOperations,java.lang.String,java.lang.String,java.lang.String)
io/corbel/iam/repository/UserRepositoryImpl/findUserDomain(java.lang.String)#io/corbel/iam/repository/HasScopesRepositoryBase/getMongo()
io/corbel/iam/repository/UserRepositoryImpl/existsByEmailAndDomain(java.lang.String,java.lang.String)#com/google/common/collect/ImmutableMap/of(K,V,K,V)
io/corbel/iam/repository/UserRepositoryImpl/existsByEmailAndDomain(java.lang.String,java.lang.String)#io/corbel/lib/mongo/utils/MongoCommonOperations/exists(org.springframework.data.mongodb.core.MongoOperations,java.util.Map,java.lang.Class)
io/corbel/iam/repository/UserRepositoryImpl/existsByUsernameAndDomain(java.lang.String,java.lang.String)#com/google/common/collect/ImmutableMap/of(K,V,K,V)
io/corbel/iam/repository/UserRepositoryImpl/existsByUsernameAndDomain(java.lang.String,java.lang.String)#io/corbel/lib/mongo/utils/MongoCommonOperations/exists(org.springframework.data.mongodb.core.MongoOperations,java.util.Map,java.lang.Class)
io/corbel/iam/repository/UserRepositoryImpl/deleteByDomain(java.lang.String)#org/springframework/data/mongodb/core/query/Criteria/is(java.lang.Object)
io/corbel/iam/repository/UserRepositoryImpl/deleteByDomain(java.lang.String)#org/springframework/data/mongodb/core/query/Criteria/where(java.lang.String)
io/corbel/iam/repository/UserRepositoryImpl/deleteByDomain(java.lang.String)#org/springframework/data/mongodb/core/query/Query/query(org.springframework.data.mongodb.core.query.CriteriaDefinition)
io/corbel/iam/repository/UserRepositoryImpl/deleteByDomain(java.lang.String)#org/springframework/data/mongodb/core/MongoOperations/remove(org.springframework.data.mongodb.core.query.Query,java.lang.Class)
io/corbel/resources/rem/request/builder/QueryParametersBuilder/build()#io/corbel/lib/queries/jaxrs/QueryParameters/QueryParameters(io.corbel.lib.queries.request.Pagination,java.util.Optional,java.util.Optional,java.util.Optional,java.util.Optional,java.util.Optional)
io/corbel/resources/rem/request/builder/QueryParametersBuilder/build()#java/util/Optional/ofNullable(T)
io/corbel/resources/rem/request/builder/QueryParametersBuilder/queries(io.corbel.lib.queries.request.ResourceQuery[])#java/util/Arrays/asList(T[])
io/corbel/resources/rem/request/builder/QueryParametersBuilder/query(io.corbel.lib.queries.request.ResourceQuery)#java/util/ArrayList/ArrayList()
io/corbel/resources/rem/request/builder/QueryParametersBuilder/query(io.corbel.lib.queries.request.ResourceQuery)#java/util/List/add(E)
io/corbel/resources/rem/request/builder/QueryParametersBuilder/conditions(io.corbel.lib.queries.request.ResourceQuery[])#java/util/Arrays/asList(T[])
io/corbel/resources/rem/request/builder/QueryParametersBuilder/condition(io.corbel.lib.queries.request.ResourceQuery)#java/util/ArrayList/ArrayList()
io/corbel/resources/rem/request/builder/QueryParametersBuilder/condition(io.corbel.lib.queries.request.ResourceQuery)#java/util/List/add(E)
io/corbel/resources/rem/ImageGetRem/getOperationsChain(io.corbel.resources.rem.request.RequestParameters)#io/corbel/resources/rem/request/RequestParameters/getCustomParameterValue(java.lang.String)
io/corbel/resources/rem/ImageGetRem/getOperationsChain(io.corbel.resources.rem.request.RequestParameters)#java/lang/String/isEmpty()
io/corbel/resources/rem/ImageGetRem/getImageFormat(io.corbel.resources.rem.request.RequestParameters)#io/corbel/resources/rem/exception/ImageOperationsException/ImageOperationsException(java.lang.String)
io/corbel/resources/rem/ImageGetRem/getImageFormat(io.corbel.resources.rem.request.RequestParameters)#io/corbel/resources/rem/request/RequestParameters/getCustomParameterValue(java.lang.String)
io/corbel/resources/rem/ImageGetRem/getImageFormat(io.corbel.resources.rem.request.RequestParameters)#java/util/Optional/ofNullable(T)
io/corbel/resources/rem/ImageGetRem/getImageFormat(io.corbel.resources.rem.request.RequestParameters)#io/corbel/resources/rem/format/ImageFormat/safeValueOf(java.lang.String)
io/corbel/resources/rem/ImageGetRem/getParameters(java.lang.String)#java/lang/String/split(java.lang.String)
io/corbel/resources/rem/ImageGetRem/getParameters(java.lang.String)#java/lang/String/trim()
io/corbel/resources/rem/ImageGetRem/getParameters(java.lang.String)#io/corbel/resources/rem/exception/ImageOperationsException/ImageOperationsException(java.lang.String)
io/corbel/resources/rem/ImageGetRem/getParameters(java.lang.String)#java/util/LinkedList/LinkedList()
io/corbel/resources/rem/ImageGetRem/getParameters(java.lang.String)#java/lang/String/isEmpty()
io/corbel/resources/rem/ImageGetRem/getParameters(java.lang.String)#java/util/List/add(E)
io/corbel/resources/rem/ImageGetRem/getParameters(java.lang.String)#io/corbel/resources/rem/model/ImageOperationDescription/ImageOperationDescription(java.lang.String,java.lang.String)
io/corbel/resources/rem/ImageGetRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/resources/rem/ImageGetRem/getOperationsChain(io.corbel.resources.rem.request.RequestParameters)
io/corbel/resources/rem/ImageGetRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/resources/rem/ImageGetRem/getImageFormat(io.corbel.resources.rem.request.RequestParameters)
io/corbel/resources/rem/ImageGetRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/resources/rem/service/RemService/getRem(java.lang.String,java.util.List,org.springframework.http.HttpMethod)
io/corbel/resources/rem/ImageGetRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#java/lang/Throwable/getMessage()
io/corbel/resources/rem/ImageGetRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/resources/rem/request/RequestParameters/getAcceptedMediaTypes()
io/corbel/resources/rem/ImageGetRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#javax/ws/rs/core/Response/ResponseBuilder/type(javax.ws.rs.core.MediaType)
io/corbel/resources/rem/ImageGetRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/lib/ws/api/error/ErrorResponseFactory/getInstance()
io/corbel/resources/rem/ImageGetRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#java/util/Optional/isPresent()
io/corbel/resources/rem/ImageGetRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#org/springframework/util/MimeType/toString()
io/corbel/resources/rem/ImageGetRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#javax/ws/rs/core/Response/ResponseBuilder/build()
io/corbel/resources/rem/ImageGetRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/resources/rem/service/ImageCacheService/getFromCache(io.corbel.resources.rem.Rem,io.corbel.resources.rem.request.ResourceId,java.lang.String,java.util.Optional,java.lang.String,io.corbel.resources.rem.request.RequestParameters)
io/corbel/resources/rem/ImageGetRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#org/slf4j/Logger/warn(java.lang.String)
io/corbel/resources/rem/ImageGetRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/resources/rem/ImageGetRem/getParameters(java.lang.String)
io/corbel/resources/rem/ImageGetRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#javax/ws/rs/core/MediaType/valueOf(java.lang.String)
io/corbel/resources/rem/ImageGetRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/resources/rem/Rem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)
io/corbel/resources/rem/ImageGetRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#javax/ws/rs/core/Response/getStatus()
io/corbel/resources/rem/ImageGetRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/lib/ws/model/Error/Error(java.lang.String,java.lang.String)
io/corbel/resources/rem/ImageGetRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/lib/ws/api/error/ErrorResponseFactory/badRequest(io.corbel.lib.ws.model.Error)
io/corbel/resources/rem/ImageGetRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/resources/rem/service/RemService/getRem(java.lang.String)
io/corbel/resources/rem/ImageGetRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#java/lang/String/isEmpty()
io/corbel/resources/rem/ImageGetRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#javax/ws/rs/core/Response/ok(java.lang.Object)
io/corbel/resources/rem/ImageGetRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/lib/ws/api/error/ErrorResponseFactory/notFound()
io/corbel/resources/rem/ImageGetRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#java/util/Optional/empty()
io/corbel/resources/rem/ImageGetRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#java/util/List/get(int)
io/corbel/resources/rem/dao/DefaultMongoResmiDao/CustomAggregationOperation/toDBObject(org.springframework.data.mongodb.core.aggregation.AggregationOperationContext)#org/springframework/data/mongodb/core/aggregation/AggregationOperationContext/getMappedObject(com.mongodb.DBObject)
io/corbel/rem/internal/InMemoryPluginArtifactIdRegistry/addPluginArtifactId(java.lang.String)#java/util/List/add(E)
io/corbel/resources/rem/acl/SetUpAclPutRem/getFilteredAclObject(com.google.gson.JsonObject)#java/util/stream/Stream/map(java.util.function.Function)
io/corbel/resources/rem/acl/SetUpAclPutRem/getFilteredAclObject(com.google.gson.JsonObject)#java/util/stream/Stream/collect(java.util.stream.Collector)
io/corbel/resources/rem/acl/SetUpAclPutRem/getFilteredAclObject(com.google.gson.JsonObject)#java/util/stream/Stream/filter(java.util.function.Predicate)
io/corbel/resources/rem/acl/SetUpAclPutRem/getFilteredAclObject(com.google.gson.JsonObject)#com/google/gson/JsonObject/JsonObject()
io/corbel/resources/rem/acl/SetUpAclPutRem/getFilteredAclObject(com.google.gson.JsonObject)#com/google/gson/JsonObject/entrySet()
io/corbel/resources/rem/acl/SetUpAclPutRem/getFilteredAclObject(com.google.gson.JsonObject)#java/lang/Iterable/forEach(java.util.function.Consumer)
io/corbel/resources/rem/acl/SetUpAclPutRem/getFilteredAclObject(com.google.gson.JsonObject)#java/util/Collection/stream()
io/corbel/resources/rem/acl/SetUpAclPutRem/getFilteredAclObject(com.google.gson.JsonObject)#java/util/stream/Collectors/toList()
io/corbel/resources/rem/acl/SetUpAclPutRem/resourceWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#java/util/Optional/get()
io/corbel/resources/rem/acl/SetUpAclPutRem/resourceWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#io/corbel/resources/rem/request/RequestParameters/getTokenInfo()
io/corbel/resources/rem/acl/SetUpAclPutRem/resourceWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#com/google/gson/JsonParser/parse(com.google.gson.stream.JsonReader)
io/corbel/resources/rem/acl/SetUpAclPutRem/resourceWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#io/corbel/lib/token/TokenInfo/getUserId()
io/corbel/resources/rem/acl/SetUpAclPutRem/resourceWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#io/corbel/lib/ws/api/error/ErrorResponseFactory/badRequest()
io/corbel/resources/rem/acl/SetUpAclPutRem/resourceWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#com/google/common/collect/Lists/newArrayList(E[])
io/corbel/resources/rem/acl/SetUpAclPutRem/resourceWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#io/corbel/lib/ws/api/error/ErrorResponseFactory/getInstance()
io/corbel/resources/rem/acl/SetUpAclPutRem/resourceWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#com/google/gson/JsonObject/add(java.lang.String,com.google.gson.JsonElement)
io/corbel/resources/rem/acl/SetUpAclPutRem/resourceWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#io/corbel/resources/rem/acl/SetUpAclPutRem/getFilteredAclObject(com.google.gson.JsonObject)
io/corbel/resources/rem/acl/SetUpAclPutRem/resourceWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#io/corbel/resources/rem/service/AclResourcesService/isAuthorized(java.lang.String,io.corbel.lib.token.TokenInfo,java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.model.AclPermission)
io/corbel/resources/rem/acl/SetUpAclPutRem/resourceWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#io/corbel/resources/rem/request/RequestParameters/getRequestedDomain()
io/corbel/resources/rem/acl/SetUpAclPutRem/resourceWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#io/corbel/resources/rem/service/AclResourcesService/updateResource(io.corbel.resources.rem.Rem,java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.lang.Object,java.util.List)
io/corbel/resources/rem/acl/SetUpAclPutRem/resourceWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#io/corbel/resources/rem/service/RemService/getRem(java.lang.String,java.util.List,org.springframework.http.HttpMethod,java.util.List)
io/corbel/resources/rem/acl/SetUpAclPutRem/resourceWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#java/util/List/addAll(java.util.Collection)
io/corbel/resources/rem/acl/SetUpAclPutRem/resourceWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#java/util/Optional/ifPresent(java.util.function.Consumer)
io/corbel/resources/rem/acl/SetUpAclPutRem/resourceWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#io/corbel/resources/rem/request/builder/RequestParametersBuilder/build()
io/corbel/resources/rem/acl/SetUpAclPutRem/resourceWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#com/google/gson/JsonElement/getAsJsonObject()
io/corbel/resources/rem/acl/SetUpAclPutRem/resourceWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#java/io/InputStreamReader/InputStreamReader(java.io.InputStream)
io/corbel/resources/rem/acl/SetUpAclPutRem/resourceWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#io/corbel/lib/ws/api/error/ErrorResponseFactory/unauthorized(java.lang.String)
io/corbel/resources/rem/acl/SetUpAclPutRem/resourceWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#io/corbel/resources/rem/utils/AclUtils/buildMessage(io.corbel.resources.rem.model.AclPermission)
io/corbel/resources/rem/acl/SetUpAclPutRem/resourceWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#com/google/gson/JsonObject/JsonObject()
io/corbel/resources/rem/acl/SetUpAclPutRem/resourceWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#com/google/gson/JsonParser/JsonParser()
io/corbel/resources/rem/acl/SetUpAclPutRem/resourceWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#io/corbel/lib/ws/api/error/ErrorResponseFactory/methodNotAllowed()
io/corbel/resources/rem/acl/SetUpAclPutRem/resourceWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#java/util/Optional/isPresent()
io/corbel/resources/rem/acl/SetUpAclPutRem/resourceWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#com/google/gson/stream/JsonReader/JsonReader(java.io.Reader)
io/corbel/resources/rem/acl/SetUpAclPutRem/resourceWithAcl(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional,java.util.Optional)#io/corbel/resources/rem/request/builder/RequestParametersBuilder/RequestParametersBuilder(io.corbel.resources.rem.request.RequestParameters)
io/corbel/resources/rem/acl/SetUpAclPutRem/filterAclValue(com.google.gson.JsonObject)#java/util/Optional/get()
io/corbel/resources/rem/acl/SetUpAclPutRem/filterAclValue(com.google.gson.JsonObject)#java/util/Optional/filter(java.util.function.Predicate)
io/corbel/resources/rem/acl/SetUpAclPutRem/filterAclValue(com.google.gson.JsonObject)#java/util/Optional/ofNullable(T)
io/corbel/resources/rem/acl/SetUpAclPutRem/filterAclValue(com.google.gson.JsonObject)#java/util/Optional/of(T)
io/corbel/resources/rem/acl/SetUpAclPutRem/filterAclValue(com.google.gson.JsonObject)#java/util/Optional/map(java.util.function.Function)
io/corbel/resources/rem/acl/SetUpAclPutRem/filterAclValue(com.google.gson.JsonObject)#java/util/Optional/empty()
io/corbel/resources/rem/acl/SetUpAclPutRem/filterAclValue(com.google.gson.JsonObject)#java/util/Optional/isPresent()
io/corbel/resources/rem/acl/SetUpAclPutRem/filterAclValue(com.google.gson.JsonObject)#com/google/gson/JsonObject/add(java.lang.String,com.google.gson.JsonElement)
io/corbel/resources/rem/acl/SetUpAclPutRem/filterAclValue(com.google.gson.JsonObject)#com/google/gson/JsonObject/addProperty(java.lang.String,java.lang.String)
io/corbel/resources/rem/acl/SetUpAclPutRem/filterAclValue(com.google.gson.JsonObject)#com/google/gson/JsonObject/JsonObject()
io/corbel/resources/rem/acl/SetUpAclPutRem/filterAclValue(com.google.gson.JsonObject)#com/google/gson/JsonObject/get(java.lang.String)
io/corbel/resources/rem/acl/SetUpAclPutRem/filterAclValue(com.google.gson.JsonObject)#java/util/Optional/orElseGet(java.util.function.Supplier)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumRelationEquals0Test()#io/corbel/lib/queries/request/ResourceQuery/addQueryNode(io.corbel.lib.queries.request.QueryNode)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumRelationEquals0Test()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumRelationEquals0Test()#org/mockito/ArgumentCaptor/getValue()
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumRelationEquals0Test()#com/mongodb/BasicDBObjectBuilder/add(java.lang.String,java.lang.Object)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumRelationEquals0Test()#io/corbel/resources/rem/dao/DefaultMongoResmiDao/sum(io.corbel.resources.rem.model.ResourceUri,java.util.List,java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumRelationEquals0Test()#org/springframework/data/mongodb/core/MongoOperations/aggregate(org.springframework.data.mongodb.core.aggregation.Aggregation,java.lang.String,java.lang.Class)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumRelationEquals0Test()#org/mockito/stubbing/Stubber/when(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumRelationEquals0Test()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumRelationEquals0Test()#io/corbel/lib/queries/request/AggregationResultsFactory/sumResult(java.util.Optional)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumRelationEquals0Test()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumRelationEquals0Test()#org/springframework/data/mongodb/core/MongoOperations/count(org.springframework.data.mongodb.core.query.Query,java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumRelationEquals0Test()#io/corbel/resources/rem/model/ResourceUri/ResourceUri(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumRelationEquals0Test()#java/util/Collections/singletonList(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumRelationEquals0Test()#com/mongodb/BasicDBObjectBuilder/BasicDBObjectBuilder()
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumRelationEquals0Test()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumRelationEquals0Test()#org/mockito/Matchers/anyString()
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumRelationEquals0Test()#org/mockito/Matchers/any(java.lang.Class)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumRelationEquals0Test()#org/mockito/ArgumentCaptor/forClass(java.lang.Class)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumRelationEquals0Test()#org/springframework/data/mongodb/core/aggregation/AggregationResults/AggregationResults(java.util.List,com.mongodb.DBObject)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumRelationEquals0Test()#io/corbel/lib/queries/request/ResourceQuery/ResourceQuery()
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumRelationEquals0Test()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumRelationEquals0Test()#org/mockito/ArgumentCaptor/capture()
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumRelationEquals0Test()#com/google/gson/JsonElement/getAsJsonObject()
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumRelationEquals0Test()#io/corbel/lib/queries/QueryNodeImpl/QueryNodeImpl(io.corbel.lib.queries.request.QueryOperator,java.lang.String,io.corbel.lib.queries.request.QueryLiteral)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumRelationEquals0Test()#org/mockito/Mockito/doReturn(java.lang.Object)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumRelationEquals0Test()#io/corbel/lib/queries/StringQueryLiteral/StringQueryLiteral(java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumRelationEquals0Test()#org/springframework/data/mongodb/core/aggregation/Aggregation/toString()
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumRelationEquals0Test()#com/google/gson/JsonElement/getAsInt()
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumRelationEquals0Test()#java/util/Optional/empty()
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumRelationEquals0Test()#org/mockito/Matchers/eq(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumRelationEquals0Test()#com/mongodb/BasicDBObjectBuilder/get()
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumRelationEquals0Test()#io/corbel/resources/rem/dao/DefaultMongoResmiDao/collectionHasAtLeastOneEntryWithNumericInField(io.corbel.resources.rem.model.ResourceUri,java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumRelationEquals0Test()#com/google/gson/JsonObject/get(java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumRelationEquals0Test()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumRelationEquals0Test()#com/mongodb/BasicDBObject/BasicDBObject()
io/corbel/resources/rem/dao/MongoResmiDaoTest/ensureRelationIndexTest()#io/corbel/resources/rem/model/ResourceUri/ResourceUri(java.lang.String,java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/ensureRelationIndexTest()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/ensureRelationIndexTest()#org/springframework/data/mongodb/core/index/Index/Index()
io/corbel/resources/rem/dao/MongoResmiDaoTest/ensureRelationIndexTest()#org/springframework/data/mongodb/core/IndexOperations/ensureIndex(org.springframework.data.mongodb.core.index.IndexDefinition)
io/corbel/resources/rem/dao/MongoResmiDaoTest/ensureRelationIndexTest()#org/springframework/data/mongodb/core/index/Index/expire(long)
io/corbel/resources/rem/dao/MongoResmiDaoTest/ensureRelationIndexTest()#org/springframework/data/mongodb/core/index/Index/on(java.lang.String,org.springframework.data.domain.Sort.Direction)
io/corbel/resources/rem/dao/MongoResmiDaoTest/ensureRelationIndexTest()#org/springframework/data/mongodb/core/MongoOperations/indexOps(java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/ensureRelationIndexTest()#io/corbel/resources/rem/model/ResourceUri/setRelation(java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/ensureRelationIndexTest()#io/corbel/resources/rem/dao/DefaultMongoResmiDao/ensureIndex(io.corbel.resources.rem.model.ResourceUri,org.springframework.data.mongodb.core.index.IndexDefinition)
io/corbel/resources/rem/dao/MongoResmiDaoTest/ensureRelationIndexTest()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/resources/rem/dao/MongoResmiDaoTest/ensureRelationIndexTest()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/ensureRelationIndexTest()#org/mockito/Matchers/anyString()
io/corbel/resources/rem/dao/MongoResmiDaoTest/ensureRelationIndexTest()#org/mockito/Mockito/verifyNoMoreInteractions(java.lang.Object[])
io/corbel/resources/rem/dao/MongoResmiDaoTest/ensureRelationIndexTest()#org/mockito/Mockito/verify(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationTest()#io/corbel/resources/rem/model/ResourceUri/ResourceUri(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationTest()#io/corbel/lib/queries/request/ResourceQuery/addQueryNode(io.corbel.lib.queries.request.QueryNode)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationTest()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationTest()#org/mockito/ArgumentCaptor/getValue()
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationTest()#com/mongodb/BasicDBObjectBuilder/add(java.lang.String,java.lang.Object)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationTest()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationTest()#org/mockito/ArgumentCaptor/forClass(java.lang.Class)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationTest()#org/springframework/data/mongodb/core/MongoOperations/aggregate(org.springframework.data.mongodb.core.aggregation.Aggregation,java.lang.String,java.lang.Class)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationTest()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationTest()#io/corbel/resources/rem/dao/DefaultMongoResmiDao/average(io.corbel.resources.rem.model.ResourceUri,java.util.List,java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationTest()#com/google/gson/JsonElement/getAsInt()
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationTest()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationTest()#java/util/Collections/singletonList(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationTest()#com/mongodb/BasicDBObjectBuilder/BasicDBObjectBuilder()
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationTest()#org/springframework/data/mongodb/core/aggregation/AggregationResults/AggregationResults(java.util.List,com.mongodb.DBObject)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationTest()#io/corbel/lib/queries/request/ResourceQuery/ResourceQuery()
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationTest()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationTest()#org/mockito/ArgumentCaptor/capture()
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationTest()#com/google/gson/JsonElement/getAsJsonObject()
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationTest()#io/corbel/lib/queries/QueryNodeImpl/QueryNodeImpl(io.corbel.lib.queries.request.QueryOperator,java.lang.String,io.corbel.lib.queries.request.QueryLiteral)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationTest()#io/corbel/lib/queries/StringQueryLiteral/StringQueryLiteral(java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationTest()#org/springframework/data/mongodb/core/aggregation/Aggregation/toString()
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationTest()#org/mockito/Matchers/eq(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationTest()#com/mongodb/BasicDBObjectBuilder/get()
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationTest()#com/google/gson/JsonObject/get(java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationTest()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationTest()#com/mongodb/BasicDBObject/BasicDBObject()
io/corbel/resources/rem/dao/MongoResmiDaoTest/maxRelationTest()#io/corbel/resources/rem/model/ResourceUri/ResourceUri(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/maxRelationTest()#io/corbel/lib/queries/request/ResourceQuery/addQueryNode(io.corbel.lib.queries.request.QueryNode)
io/corbel/resources/rem/dao/MongoResmiDaoTest/maxRelationTest()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/maxRelationTest()#org/mockito/ArgumentCaptor/getValue()
io/corbel/resources/rem/dao/MongoResmiDaoTest/maxRelationTest()#java/util/Collections/singletonList(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/maxRelationTest()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/maxRelationTest()#org/mockito/ArgumentCaptor/forClass(java.lang.Class)
io/corbel/resources/rem/dao/MongoResmiDaoTest/maxRelationTest()#org/springframework/data/mongodb/core/MongoOperations/aggregate(org.springframework.data.mongodb.core.aggregation.Aggregation,java.lang.String,java.lang.Class)
io/corbel/resources/rem/dao/MongoResmiDaoTest/maxRelationTest()#io/corbel/resources/rem/dao/DefaultMongoResmiDao/max(io.corbel.resources.rem.model.ResourceUri,java.util.List,java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/maxRelationTest()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/resources/rem/dao/MongoResmiDaoTest/maxRelationTest()#com/google/gson/JsonElement/getAsInt()
io/corbel/resources/rem/dao/MongoResmiDaoTest/maxRelationTest()#com/mongodb/BasicDBObject/BasicDBObject(java.lang.String,java.lang.Object)
io/corbel/resources/rem/dao/MongoResmiDaoTest/maxRelationTest()#org/mockito/Matchers/eq(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/maxRelationTest()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/resources/rem/dao/MongoResmiDaoTest/maxRelationTest()#org/springframework/data/mongodb/core/aggregation/AggregationResults/AggregationResults(java.util.List,com.mongodb.DBObject)
io/corbel/resources/rem/dao/MongoResmiDaoTest/maxRelationTest()#io/corbel/lib/queries/request/ResourceQuery/ResourceQuery()
io/corbel/resources/rem/dao/MongoResmiDaoTest/maxRelationTest()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/maxRelationTest()#org/mockito/ArgumentCaptor/capture()
io/corbel/resources/rem/dao/MongoResmiDaoTest/maxRelationTest()#com/google/gson/JsonElement/getAsJsonObject()
io/corbel/resources/rem/dao/MongoResmiDaoTest/maxRelationTest()#io/corbel/lib/queries/QueryNodeImpl/QueryNodeImpl(io.corbel.lib.queries.request.QueryOperator,java.lang.String,io.corbel.lib.queries.request.QueryLiteral)
io/corbel/resources/rem/dao/MongoResmiDaoTest/maxRelationTest()#io/corbel/lib/queries/StringQueryLiteral/StringQueryLiteral(java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/maxRelationTest()#org/springframework/data/mongodb/core/aggregation/Aggregation/toString()
io/corbel/resources/rem/dao/MongoResmiDaoTest/maxRelationTest()#com/google/gson/JsonObject/get(java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/maxRelationTest()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/resources/rem/dao/MongoResmiDaoTest/maxRelationTest()#com/mongodb/BasicDBObject/BasicDBObject()
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageFieldIsNotNumericTest()#io/corbel/lib/queries/request/ResourceQuery/addQueryNode(io.corbel.lib.queries.request.QueryNode)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageFieldIsNotNumericTest()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageFieldIsNotNumericTest()#org/mockito/ArgumentCaptor/getValue()
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageFieldIsNotNumericTest()#com/mongodb/BasicDBObjectBuilder/add(java.lang.String,java.lang.Object)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageFieldIsNotNumericTest()#org/springframework/data/mongodb/core/MongoOperations/aggregate(org.springframework.data.mongodb.core.aggregation.Aggregation,java.lang.String,java.lang.Class)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageFieldIsNotNumericTest()#org/mockito/stubbing/Stubber/when(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageFieldIsNotNumericTest()#org/junit/Assert/assertTrue(boolean)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageFieldIsNotNumericTest()#io/corbel/resources/rem/dao/DefaultMongoResmiDao/average(io.corbel.resources.rem.model.ResourceUri,java.util.List,java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageFieldIsNotNumericTest()#java/util/Optional/empty()
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageFieldIsNotNumericTest()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageFieldIsNotNumericTest()#io/corbel/resources/rem/model/ResourceUri/ResourceUri(java.lang.String,java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageFieldIsNotNumericTest()#org/springframework/data/mongodb/core/MongoOperations/count(org.springframework.data.mongodb.core.query.Query,java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageFieldIsNotNumericTest()#io/corbel/lib/queries/request/AggregationResultsFactory/averageResult(java.util.Optional)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageFieldIsNotNumericTest()#java/util/Collections/singletonList(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageFieldIsNotNumericTest()#com/mongodb/BasicDBObjectBuilder/BasicDBObjectBuilder()
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageFieldIsNotNumericTest()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageFieldIsNotNumericTest()#org/mockito/Matchers/anyString()
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageFieldIsNotNumericTest()#org/mockito/Matchers/any(java.lang.Class)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageFieldIsNotNumericTest()#org/mockito/ArgumentCaptor/forClass(java.lang.Class)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageFieldIsNotNumericTest()#com/google/gson/JsonElement/isJsonNull()
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageFieldIsNotNumericTest()#org/springframework/data/mongodb/core/aggregation/AggregationResults/AggregationResults(java.util.List,com.mongodb.DBObject)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageFieldIsNotNumericTest()#io/corbel/lib/queries/request/ResourceQuery/ResourceQuery()
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageFieldIsNotNumericTest()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageFieldIsNotNumericTest()#org/mockito/ArgumentCaptor/capture()
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageFieldIsNotNumericTest()#com/google/gson/JsonElement/getAsJsonObject()
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageFieldIsNotNumericTest()#io/corbel/lib/queries/QueryNodeImpl/QueryNodeImpl(io.corbel.lib.queries.request.QueryOperator,java.lang.String,io.corbel.lib.queries.request.QueryLiteral)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageFieldIsNotNumericTest()#org/mockito/Mockito/doReturn(java.lang.Object)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageFieldIsNotNumericTest()#io/corbel/lib/queries/StringQueryLiteral/StringQueryLiteral(java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageFieldIsNotNumericTest()#org/springframework/data/mongodb/core/aggregation/Aggregation/toString()
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageFieldIsNotNumericTest()#org/mockito/Matchers/eq(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageFieldIsNotNumericTest()#com/mongodb/BasicDBObjectBuilder/get()
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageFieldIsNotNumericTest()#io/corbel/resources/rem/dao/DefaultMongoResmiDao/collectionHasAtLeastOneEntryWithNumericInField(io.corbel.resources.rem.model.ResourceUri,java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageFieldIsNotNumericTest()#com/google/gson/JsonObject/get(java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageFieldIsNotNumericTest()#com/mongodb/BasicDBObject/BasicDBObject()
io/corbel/resources/rem/dao/MongoResmiDaoTest/maxTest()#io/corbel/resources/rem/model/ResourceUri/ResourceUri(java.lang.String,java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/maxTest()#io/corbel/lib/queries/request/ResourceQuery/addQueryNode(io.corbel.lib.queries.request.QueryNode)
io/corbel/resources/rem/dao/MongoResmiDaoTest/maxTest()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/maxTest()#org/mockito/ArgumentCaptor/getValue()
io/corbel/resources/rem/dao/MongoResmiDaoTest/maxTest()#java/util/Collections/singletonList(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/maxTest()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/maxTest()#org/mockito/ArgumentCaptor/forClass(java.lang.Class)
io/corbel/resources/rem/dao/MongoResmiDaoTest/maxTest()#org/springframework/data/mongodb/core/MongoOperations/aggregate(org.springframework.data.mongodb.core.aggregation.Aggregation,java.lang.String,java.lang.Class)
io/corbel/resources/rem/dao/MongoResmiDaoTest/maxTest()#io/corbel/resources/rem/dao/DefaultMongoResmiDao/max(io.corbel.resources.rem.model.ResourceUri,java.util.List,java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/maxTest()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/resources/rem/dao/MongoResmiDaoTest/maxTest()#com/google/gson/JsonElement/getAsInt()
io/corbel/resources/rem/dao/MongoResmiDaoTest/maxTest()#com/mongodb/BasicDBObject/BasicDBObject(java.lang.String,java.lang.Object)
io/corbel/resources/rem/dao/MongoResmiDaoTest/maxTest()#org/mockito/Matchers/eq(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/maxTest()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/resources/rem/dao/MongoResmiDaoTest/maxTest()#org/springframework/data/mongodb/core/aggregation/AggregationResults/AggregationResults(java.util.List,com.mongodb.DBObject)
io/corbel/resources/rem/dao/MongoResmiDaoTest/maxTest()#io/corbel/lib/queries/request/ResourceQuery/ResourceQuery()
io/corbel/resources/rem/dao/MongoResmiDaoTest/maxTest()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/maxTest()#org/mockito/ArgumentCaptor/capture()
io/corbel/resources/rem/dao/MongoResmiDaoTest/maxTest()#com/google/gson/JsonElement/getAsJsonObject()
io/corbel/resources/rem/dao/MongoResmiDaoTest/maxTest()#io/corbel/lib/queries/QueryNodeImpl/QueryNodeImpl(io.corbel.lib.queries.request.QueryOperator,java.lang.String,io.corbel.lib.queries.request.QueryLiteral)
io/corbel/resources/rem/dao/MongoResmiDaoTest/maxTest()#io/corbel/lib/queries/StringQueryLiteral/StringQueryLiteral(java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/maxTest()#org/springframework/data/mongodb/core/aggregation/Aggregation/toString()
io/corbel/resources/rem/dao/MongoResmiDaoTest/maxTest()#com/google/gson/JsonObject/get(java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/maxTest()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/resources/rem/dao/MongoResmiDaoTest/maxTest()#com/mongodb/BasicDBObject/BasicDBObject()
io/corbel/resources/rem/dao/MongoResmiDaoTest/histogramTest()#io/corbel/resources/rem/model/ResourceUri/ResourceUri(java.lang.String,java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/histogramTest()#com/fasterxml/jackson/databind/JsonNode/asText()
io/corbel/resources/rem/dao/MongoResmiDaoTest/histogramTest()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/histogramTest()#org/mockito/ArgumentCaptor/getValue()
io/corbel/resources/rem/dao/MongoResmiDaoTest/histogramTest()#com/fasterxml/jackson/databind/JsonNode/get(java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/histogramTest()#java/util/Collections/singletonList(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/histogramTest()#org/mockito/ArgumentCaptor/forClass(java.lang.Class)
io/corbel/resources/rem/dao/MongoResmiDaoTest/histogramTest()#org/springframework/data/mongodb/core/MongoOperations/aggregate(org.springframework.data.mongodb.core.aggregation.Aggregation,java.lang.String,java.lang.Class)
io/corbel/resources/rem/dao/MongoResmiDaoTest/histogramTest()#java/util/Collections/emptyList()
io/corbel/resources/rem/dao/MongoResmiDaoTest/histogramTest()#com/fasterxml/jackson/databind/JsonNode/toString()
io/corbel/resources/rem/dao/MongoResmiDaoTest/histogramTest()#io/corbel/resources/rem/dao/DefaultMongoResmiDao/histogram(io.corbel.resources.rem.model.ResourceUri,java.util.List,java.util.Optional,java.util.Optional,java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/histogramTest()#org/springframework/data/mongodb/core/aggregation/AggregationResults/AggregationResults(java.util.List,com.mongodb.DBObject)
io/corbel/resources/rem/dao/MongoResmiDaoTest/histogramTest()#org/springframework/data/mongodb/core/aggregation/Aggregation/toString()
io/corbel/resources/rem/dao/MongoResmiDaoTest/histogramTest()#java/util/Optional/empty()
io/corbel/resources/rem/dao/MongoResmiDaoTest/histogramTest()#org/mockito/Matchers/eq(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/histogramTest()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/resources/rem/dao/MongoResmiDaoTest/histogramTest()#com/mongodb/BasicDBObject/BasicDBObject()
io/corbel/resources/rem/dao/MongoResmiDaoTest/histogramTest()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/histogramTest()#org/bson/BasicBSONObject/put(java.lang.String,java.lang.Object)
io/corbel/resources/rem/dao/MongoResmiDaoTest/histogramTest()#com/fasterxml/jackson/databind/JsonNode/has(java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/histogramTest()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/histogramTest()#org/mockito/ArgumentCaptor/capture()
io/corbel/resources/rem/dao/MongoResmiDaoTest/histogramTest()#com/fasterxml/jackson/databind/ObjectMapper/ObjectMapper()
io/corbel/resources/rem/dao/MongoResmiDaoTest/histogramTest()#com/fasterxml/jackson/databind/ObjectMapper/readTree(java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/histogramTest()#com/mongodb/BasicDBObject/BasicDBObject(java.lang.String,java.lang.Object)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationNotExistsFieldTest()#io/corbel/lib/queries/request/ResourceQuery/addQueryNode(io.corbel.lib.queries.request.QueryNode)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationNotExistsFieldTest()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationNotExistsFieldTest()#org/mockito/ArgumentCaptor/getValue()
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationNotExistsFieldTest()#com/mongodb/BasicDBObjectBuilder/add(java.lang.String,java.lang.Object)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationNotExistsFieldTest()#org/springframework/data/mongodb/core/MongoOperations/aggregate(org.springframework.data.mongodb.core.aggregation.Aggregation,java.lang.String,java.lang.Class)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationNotExistsFieldTest()#org/mockito/stubbing/Stubber/when(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationNotExistsFieldTest()#org/junit/Assert/assertTrue(boolean)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationNotExistsFieldTest()#io/corbel/resources/rem/dao/DefaultMongoResmiDao/average(io.corbel.resources.rem.model.ResourceUri,java.util.List,java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationNotExistsFieldTest()#java/util/Optional/empty()
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationNotExistsFieldTest()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationNotExistsFieldTest()#org/springframework/data/mongodb/core/MongoOperations/count(org.springframework.data.mongodb.core.query.Query,java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationNotExistsFieldTest()#io/corbel/resources/rem/model/ResourceUri/ResourceUri(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationNotExistsFieldTest()#io/corbel/lib/queries/request/AggregationResultsFactory/averageResult(java.util.Optional)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationNotExistsFieldTest()#java/util/Collections/singletonList(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationNotExistsFieldTest()#com/mongodb/BasicDBObjectBuilder/BasicDBObjectBuilder()
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationNotExistsFieldTest()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationNotExistsFieldTest()#org/mockito/Matchers/anyString()
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationNotExistsFieldTest()#org/mockito/Matchers/any(java.lang.Class)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationNotExistsFieldTest()#org/mockito/ArgumentCaptor/forClass(java.lang.Class)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationNotExistsFieldTest()#com/google/gson/JsonElement/isJsonNull()
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationNotExistsFieldTest()#org/springframework/data/mongodb/core/aggregation/AggregationResults/AggregationResults(java.util.List,com.mongodb.DBObject)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationNotExistsFieldTest()#io/corbel/lib/queries/request/ResourceQuery/ResourceQuery()
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationNotExistsFieldTest()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationNotExistsFieldTest()#org/mockito/ArgumentCaptor/capture()
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationNotExistsFieldTest()#com/google/gson/JsonElement/getAsJsonObject()
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationNotExistsFieldTest()#io/corbel/lib/queries/QueryNodeImpl/QueryNodeImpl(io.corbel.lib.queries.request.QueryOperator,java.lang.String,io.corbel.lib.queries.request.QueryLiteral)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationNotExistsFieldTest()#org/mockito/Mockito/doReturn(java.lang.Object)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationNotExistsFieldTest()#io/corbel/lib/queries/StringQueryLiteral/StringQueryLiteral(java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationNotExistsFieldTest()#org/springframework/data/mongodb/core/aggregation/Aggregation/toString()
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationNotExistsFieldTest()#org/mockito/Matchers/eq(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationNotExistsFieldTest()#com/mongodb/BasicDBObjectBuilder/get()
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationNotExistsFieldTest()#io/corbel/resources/rem/dao/DefaultMongoResmiDao/collectionHasAtLeastOneEntryWithNumericInField(io.corbel.resources.rem.model.ResourceUri,java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationNotExistsFieldTest()#com/google/gson/JsonObject/get(java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationNotExistsFieldTest()#com/mongodb/BasicDBObject/BasicDBObject()
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumRelationTest()#io/corbel/resources/rem/model/ResourceUri/ResourceUri(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumRelationTest()#io/corbel/lib/queries/request/ResourceQuery/addQueryNode(io.corbel.lib.queries.request.QueryNode)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumRelationTest()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumRelationTest()#org/mockito/ArgumentCaptor/getValue()
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumRelationTest()#com/mongodb/BasicDBObjectBuilder/add(java.lang.String,java.lang.Object)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumRelationTest()#io/corbel/resources/rem/dao/DefaultMongoResmiDao/sum(io.corbel.resources.rem.model.ResourceUri,java.util.List,java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumRelationTest()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumRelationTest()#org/mockito/ArgumentCaptor/forClass(java.lang.Class)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumRelationTest()#org/springframework/data/mongodb/core/MongoOperations/aggregate(org.springframework.data.mongodb.core.aggregation.Aggregation,java.lang.String,java.lang.Class)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumRelationTest()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumRelationTest()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumRelationTest()#io/corbel/lib/queries/request/AggregationResultsFactory/averageResult(java.util.Optional)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumRelationTest()#java/util/Collections/singletonList(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumRelationTest()#com/mongodb/BasicDBObjectBuilder/BasicDBObjectBuilder()
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumRelationTest()#org/springframework/data/mongodb/core/aggregation/AggregationResults/AggregationResults(java.util.List,com.mongodb.DBObject)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumRelationTest()#io/corbel/lib/queries/request/ResourceQuery/ResourceQuery()
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumRelationTest()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumRelationTest()#org/mockito/ArgumentCaptor/capture()
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumRelationTest()#com/google/gson/JsonElement/getAsJsonObject()
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumRelationTest()#io/corbel/lib/queries/QueryNodeImpl/QueryNodeImpl(io.corbel.lib.queries.request.QueryOperator,java.lang.String,io.corbel.lib.queries.request.QueryLiteral)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumRelationTest()#io/corbel/lib/queries/StringQueryLiteral/StringQueryLiteral(java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumRelationTest()#org/springframework/data/mongodb/core/aggregation/Aggregation/toString()
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumRelationTest()#com/google/gson/JsonElement/getAsInt()
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumRelationTest()#java/util/Optional/empty()
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumRelationTest()#org/mockito/Matchers/eq(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumRelationTest()#com/mongodb/BasicDBObjectBuilder/get()
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumRelationTest()#com/google/gson/JsonObject/get(java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumRelationTest()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumRelationTest()#com/mongodb/BasicDBObject/BasicDBObject()
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumEquals0Test()#io/corbel/lib/queries/request/ResourceQuery/addQueryNode(io.corbel.lib.queries.request.QueryNode)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumEquals0Test()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumEquals0Test()#org/mockito/ArgumentCaptor/getValue()
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumEquals0Test()#com/mongodb/BasicDBObjectBuilder/add(java.lang.String,java.lang.Object)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumEquals0Test()#io/corbel/resources/rem/dao/DefaultMongoResmiDao/sum(io.corbel.resources.rem.model.ResourceUri,java.util.List,java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumEquals0Test()#org/springframework/data/mongodb/core/MongoOperations/aggregate(org.springframework.data.mongodb.core.aggregation.Aggregation,java.lang.String,java.lang.Class)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumEquals0Test()#org/mockito/stubbing/Stubber/when(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumEquals0Test()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumEquals0Test()#io/corbel/lib/queries/request/AggregationResultsFactory/sumResult(java.util.Optional)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumEquals0Test()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumEquals0Test()#io/corbel/resources/rem/model/ResourceUri/ResourceUri(java.lang.String,java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumEquals0Test()#org/springframework/data/mongodb/core/MongoOperations/count(org.springframework.data.mongodb.core.query.Query,java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumEquals0Test()#java/util/Collections/singletonList(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumEquals0Test()#com/mongodb/BasicDBObjectBuilder/BasicDBObjectBuilder()
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumEquals0Test()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumEquals0Test()#org/mockito/Matchers/anyString()
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumEquals0Test()#org/mockito/Matchers/any(java.lang.Class)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumEquals0Test()#org/mockito/ArgumentCaptor/forClass(java.lang.Class)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumEquals0Test()#org/springframework/data/mongodb/core/aggregation/AggregationResults/AggregationResults(java.util.List,com.mongodb.DBObject)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumEquals0Test()#io/corbel/lib/queries/request/ResourceQuery/ResourceQuery()
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumEquals0Test()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumEquals0Test()#org/mockito/ArgumentCaptor/capture()
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumEquals0Test()#com/google/gson/JsonElement/getAsJsonObject()
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumEquals0Test()#io/corbel/lib/queries/QueryNodeImpl/QueryNodeImpl(io.corbel.lib.queries.request.QueryOperator,java.lang.String,io.corbel.lib.queries.request.QueryLiteral)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumEquals0Test()#org/mockito/Mockito/doReturn(java.lang.Object)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumEquals0Test()#io/corbel/lib/queries/StringQueryLiteral/StringQueryLiteral(java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumEquals0Test()#org/springframework/data/mongodb/core/aggregation/Aggregation/toString()
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumEquals0Test()#com/google/gson/JsonElement/getAsInt()
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumEquals0Test()#java/util/Optional/empty()
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumEquals0Test()#org/mockito/Matchers/eq(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumEquals0Test()#com/mongodb/BasicDBObjectBuilder/get()
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumEquals0Test()#io/corbel/resources/rem/dao/DefaultMongoResmiDao/collectionHasAtLeastOneEntryWithNumericInField(io.corbel.resources.rem.model.ResourceUri,java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumEquals0Test()#com/google/gson/JsonObject/get(java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumEquals0Test()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumEquals0Test()#com/mongodb/BasicDBObject/BasicDBObject()
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageNotExistsFieldTest()#io/corbel/lib/queries/request/ResourceQuery/addQueryNode(io.corbel.lib.queries.request.QueryNode)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageNotExistsFieldTest()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageNotExistsFieldTest()#org/mockito/ArgumentCaptor/getValue()
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageNotExistsFieldTest()#com/mongodb/BasicDBObjectBuilder/add(java.lang.String,java.lang.Object)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageNotExistsFieldTest()#org/springframework/data/mongodb/core/MongoOperations/aggregate(org.springframework.data.mongodb.core.aggregation.Aggregation,java.lang.String,java.lang.Class)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageNotExistsFieldTest()#org/mockito/stubbing/Stubber/when(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageNotExistsFieldTest()#org/junit/Assert/assertTrue(boolean)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageNotExistsFieldTest()#io/corbel/resources/rem/dao/DefaultMongoResmiDao/average(io.corbel.resources.rem.model.ResourceUri,java.util.List,java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageNotExistsFieldTest()#java/util/Optional/empty()
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageNotExistsFieldTest()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageNotExistsFieldTest()#io/corbel/resources/rem/model/ResourceUri/ResourceUri(java.lang.String,java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageNotExistsFieldTest()#org/springframework/data/mongodb/core/MongoOperations/count(org.springframework.data.mongodb.core.query.Query,java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageNotExistsFieldTest()#io/corbel/lib/queries/request/AggregationResultsFactory/averageResult(java.util.Optional)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageNotExistsFieldTest()#java/util/Collections/singletonList(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageNotExistsFieldTest()#com/mongodb/BasicDBObjectBuilder/BasicDBObjectBuilder()
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageNotExistsFieldTest()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageNotExistsFieldTest()#org/mockito/Matchers/anyString()
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageNotExistsFieldTest()#org/mockito/Matchers/any(java.lang.Class)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageNotExistsFieldTest()#org/mockito/ArgumentCaptor/forClass(java.lang.Class)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageNotExistsFieldTest()#com/google/gson/JsonElement/isJsonNull()
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageNotExistsFieldTest()#org/springframework/data/mongodb/core/aggregation/AggregationResults/AggregationResults(java.util.List,com.mongodb.DBObject)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageNotExistsFieldTest()#io/corbel/lib/queries/request/ResourceQuery/ResourceQuery()
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageNotExistsFieldTest()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageNotExistsFieldTest()#org/mockito/ArgumentCaptor/capture()
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageNotExistsFieldTest()#com/google/gson/JsonElement/getAsJsonObject()
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageNotExistsFieldTest()#io/corbel/lib/queries/QueryNodeImpl/QueryNodeImpl(io.corbel.lib.queries.request.QueryOperator,java.lang.String,io.corbel.lib.queries.request.QueryLiteral)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageNotExistsFieldTest()#org/mockito/Mockito/doReturn(java.lang.Object)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageNotExistsFieldTest()#io/corbel/lib/queries/StringQueryLiteral/StringQueryLiteral(java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageNotExistsFieldTest()#org/springframework/data/mongodb/core/aggregation/Aggregation/toString()
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageNotExistsFieldTest()#org/mockito/Matchers/eq(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageNotExistsFieldTest()#com/mongodb/BasicDBObjectBuilder/get()
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageNotExistsFieldTest()#io/corbel/resources/rem/dao/DefaultMongoResmiDao/collectionHasAtLeastOneEntryWithNumericInField(io.corbel.resources.rem.model.ResourceUri,java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageNotExistsFieldTest()#com/google/gson/JsonObject/get(java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageNotExistsFieldTest()#com/mongodb/BasicDBObject/BasicDBObject()
io/corbel/resources/rem/dao/MongoResmiDaoTest/maxOnEmptyCollectionTest()#io/corbel/resources/rem/model/ResourceUri/ResourceUri(java.lang.String,java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/maxOnEmptyCollectionTest()#io/corbel/lib/queries/request/ResourceQuery/addQueryNode(io.corbel.lib.queries.request.QueryNode)
io/corbel/resources/rem/dao/MongoResmiDaoTest/maxOnEmptyCollectionTest()#org/fest/assertions/api/Assertions/assertThat(boolean)
io/corbel/resources/rem/dao/MongoResmiDaoTest/maxOnEmptyCollectionTest()#java/util/Collections/singletonList(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/maxOnEmptyCollectionTest()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/maxOnEmptyCollectionTest()#org/springframework/data/mongodb/core/MongoOperations/aggregate(org.springframework.data.mongodb.core.aggregation.Aggregation,java.lang.String,java.lang.Class)
io/corbel/resources/rem/dao/MongoResmiDaoTest/maxOnEmptyCollectionTest()#java/util/Collections/emptyList()
io/corbel/resources/rem/dao/MongoResmiDaoTest/maxOnEmptyCollectionTest()#io/corbel/resources/rem/dao/DefaultMongoResmiDao/max(io.corbel.resources.rem.model.ResourceUri,java.util.List,java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/maxOnEmptyCollectionTest()#org/mockito/ArgumentCaptor/capture()
io/corbel/resources/rem/dao/MongoResmiDaoTest/maxOnEmptyCollectionTest()#io/corbel/lib/queries/StringQueryLiteral/StringQueryLiteral(java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/maxOnEmptyCollectionTest()#org/mockito/Matchers/eq(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/maxOnEmptyCollectionTest()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/maxOnEmptyCollectionTest()#org/fest/assertions/api/BooleanAssert/isTrue()
io/corbel/resources/rem/dao/MongoResmiDaoTest/maxOnEmptyCollectionTest()#org/mockito/ArgumentCaptor/forClass(java.lang.Class)
io/corbel/resources/rem/dao/MongoResmiDaoTest/maxOnEmptyCollectionTest()#com/google/gson/JsonElement/isJsonNull()
io/corbel/resources/rem/dao/MongoResmiDaoTest/maxOnEmptyCollectionTest()#org/springframework/data/mongodb/core/aggregation/AggregationResults/AggregationResults(java.util.List,com.mongodb.DBObject)
io/corbel/resources/rem/dao/MongoResmiDaoTest/maxOnEmptyCollectionTest()#io/corbel/lib/queries/request/ResourceQuery/ResourceQuery()
io/corbel/resources/rem/dao/MongoResmiDaoTest/maxOnEmptyCollectionTest()#com/google/gson/JsonElement/getAsJsonObject()
io/corbel/resources/rem/dao/MongoResmiDaoTest/maxOnEmptyCollectionTest()#io/corbel/lib/queries/QueryNodeImpl/QueryNodeImpl(io.corbel.lib.queries.request.QueryOperator,java.lang.String,io.corbel.lib.queries.request.QueryLiteral)
io/corbel/resources/rem/dao/MongoResmiDaoTest/maxOnEmptyCollectionTest()#com/google/gson/JsonObject/get(java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/maxOnEmptyCollectionTest()#com/mongodb/BasicDBObject/BasicDBObject()
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumTest()#io/corbel/resources/rem/model/ResourceUri/ResourceUri(java.lang.String,java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumTest()#io/corbel/lib/queries/request/ResourceQuery/addQueryNode(io.corbel.lib.queries.request.QueryNode)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumTest()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumTest()#org/mockito/ArgumentCaptor/getValue()
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumTest()#com/mongodb/BasicDBObjectBuilder/add(java.lang.String,java.lang.Object)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumTest()#io/corbel/resources/rem/dao/DefaultMongoResmiDao/sum(io.corbel.resources.rem.model.ResourceUri,java.util.List,java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumTest()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumTest()#org/mockito/ArgumentCaptor/forClass(java.lang.Class)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumTest()#org/springframework/data/mongodb/core/MongoOperations/aggregate(org.springframework.data.mongodb.core.aggregation.Aggregation,java.lang.String,java.lang.Class)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumTest()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumTest()#com/google/gson/JsonElement/getAsInt()
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumTest()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumTest()#java/util/Collections/singletonList(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumTest()#com/mongodb/BasicDBObjectBuilder/BasicDBObjectBuilder()
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumTest()#org/springframework/data/mongodb/core/aggregation/AggregationResults/AggregationResults(java.util.List,com.mongodb.DBObject)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumTest()#io/corbel/lib/queries/request/ResourceQuery/ResourceQuery()
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumTest()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumTest()#org/mockito/ArgumentCaptor/capture()
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumTest()#com/google/gson/JsonElement/getAsJsonObject()
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumTest()#io/corbel/lib/queries/QueryNodeImpl/QueryNodeImpl(io.corbel.lib.queries.request.QueryOperator,java.lang.String,io.corbel.lib.queries.request.QueryLiteral)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumTest()#io/corbel/lib/queries/StringQueryLiteral/StringQueryLiteral(java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumTest()#org/springframework/data/mongodb/core/aggregation/Aggregation/toString()
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumTest()#org/mockito/Matchers/eq(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumTest()#com/mongodb/BasicDBObjectBuilder/get()
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumTest()#com/google/gson/JsonObject/get(java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumTest()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumTest()#com/mongodb/BasicDBObject/BasicDBObject()
io/corbel/resources/rem/dao/MongoResmiDaoTest/setup()#org/mockito/stubbing/OngoingStubbing/then(org.mockito.stubbing.Answer)
io/corbel/resources/rem/dao/MongoResmiDaoTest/setup()#io/corbel/resources/rem/service/DefaultNamespaceNormalizer/normalize(java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/setup()#org/mockito/Mockito/spy(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/setup()#io/corbel/lib/queries/request/JsonAggregationResultsFactory/JsonAggregationResultsFactory(com.google.gson.Gson)
io/corbel/resources/rem/dao/MongoResmiDaoTest/setup()#com/google/gson/Gson/Gson()
io/corbel/resources/rem/dao/MongoResmiDaoTest/setup()#io/corbel/resources/rem/dao/DefaultMongoResmiDao/DefaultMongoResmiDao(org.springframework.data.mongodb.core.MongoOperations,io.corbel.lib.mongo.JsonObjectMongoWriteConverter,io.corbel.resources.rem.dao.NamespaceNormalizer,io.corbel.resources.rem.dao.ResmiOrder,io.corbel.lib.queries.request.AggregationResultsFactory,boolean)
io/corbel/resources/rem/dao/MongoResmiDaoTest/setup()#org/mockito/AdditionalAnswers/returnsFirstArg()
io/corbel/resources/rem/dao/MongoResmiDaoTest/setup()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/setup()#org/mockito/Matchers/anyString()
io/corbel/resources/rem/dao/MongoResmiDaoTest/testFindById()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/testFindById()#io/corbel/resources/rem/model/ResourceUri/ResourceUri(java.lang.String,java.lang.String,java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/testFindById()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/testFindById()#io/corbel/resources/rem/dao/DefaultMongoResmiDao/findResource(io.corbel.resources.rem.model.ResourceUri,java.lang.Class)
io/corbel/resources/rem/dao/MongoResmiDaoTest/testFindById()#com/google/gson/JsonPrimitive/JsonPrimitive(java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/testFindById()#org/springframework/data/mongodb/core/MongoOperations/findById(java.lang.Object,java.lang.Class,java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/testFindById()#com/google/gson/JsonObject/JsonObject()
io/corbel/resources/rem/dao/MongoResmiDaoTest/testFindById()#org/fest/assertions/api/Assertions/assertThat(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/testFindById()#com/google/gson/JsonObject/add(java.lang.String,com.google.gson.JsonElement)
io/corbel/resources/rem/dao/MongoResmiDaoTest/testFindById()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumIsNotNumericFieldTest()#io/corbel/lib/queries/request/ResourceQuery/addQueryNode(io.corbel.lib.queries.request.QueryNode)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumIsNotNumericFieldTest()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumIsNotNumericFieldTest()#org/mockito/ArgumentCaptor/getValue()
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumIsNotNumericFieldTest()#com/mongodb/BasicDBObjectBuilder/add(java.lang.String,java.lang.Object)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumIsNotNumericFieldTest()#io/corbel/resources/rem/dao/DefaultMongoResmiDao/sum(io.corbel.resources.rem.model.ResourceUri,java.util.List,java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumIsNotNumericFieldTest()#org/springframework/data/mongodb/core/MongoOperations/aggregate(org.springframework.data.mongodb.core.aggregation.Aggregation,java.lang.String,java.lang.Class)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumIsNotNumericFieldTest()#org/mockito/stubbing/Stubber/when(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumIsNotNumericFieldTest()#org/junit/Assert/assertTrue(boolean)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumIsNotNumericFieldTest()#io/corbel/lib/queries/request/AggregationResultsFactory/sumResult(java.util.Optional)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumIsNotNumericFieldTest()#java/util/Optional/empty()
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumIsNotNumericFieldTest()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumIsNotNumericFieldTest()#io/corbel/resources/rem/model/ResourceUri/ResourceUri(java.lang.String,java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumIsNotNumericFieldTest()#org/springframework/data/mongodb/core/MongoOperations/count(org.springframework.data.mongodb.core.query.Query,java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumIsNotNumericFieldTest()#java/util/Collections/singletonList(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumIsNotNumericFieldTest()#com/mongodb/BasicDBObjectBuilder/BasicDBObjectBuilder()
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumIsNotNumericFieldTest()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumIsNotNumericFieldTest()#org/mockito/Matchers/anyString()
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumIsNotNumericFieldTest()#org/mockito/Matchers/any(java.lang.Class)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumIsNotNumericFieldTest()#org/mockito/ArgumentCaptor/forClass(java.lang.Class)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumIsNotNumericFieldTest()#com/google/gson/JsonElement/isJsonNull()
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumIsNotNumericFieldTest()#org/springframework/data/mongodb/core/aggregation/AggregationResults/AggregationResults(java.util.List,com.mongodb.DBObject)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumIsNotNumericFieldTest()#io/corbel/lib/queries/request/ResourceQuery/ResourceQuery()
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumIsNotNumericFieldTest()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumIsNotNumericFieldTest()#org/mockito/ArgumentCaptor/capture()
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumIsNotNumericFieldTest()#com/google/gson/JsonElement/getAsJsonObject()
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumIsNotNumericFieldTest()#io/corbel/lib/queries/QueryNodeImpl/QueryNodeImpl(io.corbel.lib.queries.request.QueryOperator,java.lang.String,io.corbel.lib.queries.request.QueryLiteral)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumIsNotNumericFieldTest()#org/mockito/Mockito/doReturn(java.lang.Object)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumIsNotNumericFieldTest()#io/corbel/lib/queries/StringQueryLiteral/StringQueryLiteral(java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumIsNotNumericFieldTest()#org/springframework/data/mongodb/core/aggregation/Aggregation/toString()
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumIsNotNumericFieldTest()#org/mockito/Matchers/eq(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumIsNotNumericFieldTest()#com/mongodb/BasicDBObjectBuilder/get()
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumIsNotNumericFieldTest()#io/corbel/resources/rem/dao/DefaultMongoResmiDao/collectionHasAtLeastOneEntryWithNumericInField(io.corbel.resources.rem.model.ResourceUri,java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumIsNotNumericFieldTest()#com/google/gson/JsonObject/get(java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumIsNotNumericFieldTest()#com/mongodb/BasicDBObject/BasicDBObject()
io/corbel/resources/rem/dao/MongoResmiDaoTest/testDelete()#io/corbel/resources/rem/model/ResourceUri/ResourceUri(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/testDelete()#org/springframework/data/mongodb/core/query/Criteria/is(java.lang.Object)
io/corbel/resources/rem/dao/MongoResmiDaoTest/testDelete()#org/springframework/data/mongodb/core/MongoOperations/findAllAndRemove(org.springframework.data.mongodb.core.query.Query,java.lang.Class,java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/testDelete()#io/corbel/resources/rem/dao/DefaultMongoResmiDao/deleteRelation(io.corbel.resources.rem.model.ResourceUri,java.util.Optional)
io/corbel/resources/rem/dao/MongoResmiDaoTest/testDelete()#org/springframework/data/mongodb/core/query/Criteria/and(java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/testDelete()#org/mockito/Matchers/eq(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/testDelete()#org/springframework/data/mongodb/core/query/Criteria/where(java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/testDelete()#org/mockito/Mockito/verify(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/testDelete()#org/springframework/data/mongodb/core/query/Query/Query(org.springframework.data.mongodb.core.query.CriteriaDefinition)
io/corbel/resources/rem/dao/MongoResmiDaoTest/testDelete()#org/mockito/Matchers/any()
io/corbel/resources/rem/dao/MongoResmiDaoTest/testDelete()#java/util/Optional/empty()
io/corbel/resources/rem/dao/MongoResmiDaoTest/testRelationWithData()#org/bson/BSONObject/get(java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/testRelationWithData()#org/mockito/ArgumentCaptor/getValue()
io/corbel/resources/rem/dao/MongoResmiDaoTest/testRelationWithData()#org/springframework/data/mongodb/core/FindAndModifyOptions/isUpsert()
io/corbel/resources/rem/dao/MongoResmiDaoTest/testRelationWithData()#org/fest/assertions/api/BooleanAssert/isEqualTo(boolean)
io/corbel/resources/rem/dao/MongoResmiDaoTest/testRelationWithData()#org/springframework/data/mongodb/core/query/Update/getUpdateObject()
io/corbel/resources/rem/dao/MongoResmiDaoTest/testRelationWithData()#org/mockito/ArgumentCaptor/capture()
io/corbel/resources/rem/dao/MongoResmiDaoTest/testRelationWithData()#org/fest/assertions/api/Assertions/assertThat(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/testRelationWithData()#org/mockito/Matchers/eq(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/testRelationWithData()#com/google/gson/JsonObject/add(java.lang.String,com.google.gson.JsonElement)
io/corbel/resources/rem/dao/MongoResmiDaoTest/testRelationWithData()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/testRelationWithData()#org/fest/assertions/api/BooleanAssert/isTrue()
io/corbel/resources/rem/dao/MongoResmiDaoTest/testRelationWithData()#org/mockito/Mockito/verify(T,org.mockito.verification.VerificationMode)
io/corbel/resources/rem/dao/MongoResmiDaoTest/testRelationWithData()#io/corbel/resources/rem/model/ResourceUri/ResourceUri(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/testRelationWithData()#org/bson/BSONObject/containsField(java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/testRelationWithData()#org/fest/assertions/api/Assertions/assertThat(boolean)
io/corbel/resources/rem/dao/MongoResmiDaoTest/testRelationWithData()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/testRelationWithData()#io/corbel/resources/rem/dao/MongoResmiDaoTest/answerWithId(com.google.gson.JsonObject)
io/corbel/resources/rem/dao/MongoResmiDaoTest/testRelationWithData()#org/mockito/Matchers/anyString()
io/corbel/resources/rem/dao/MongoResmiDaoTest/testRelationWithData()#org/mockito/Mockito/times(int)
io/corbel/resources/rem/dao/MongoResmiDaoTest/testRelationWithData()#org/mockito/Matchers/any(java.lang.Class)
io/corbel/resources/rem/dao/MongoResmiDaoTest/testRelationWithData()#org/mockito/ArgumentCaptor/forClass(java.lang.Class)
io/corbel/resources/rem/dao/MongoResmiDaoTest/testRelationWithData()#com/google/gson/JsonObject/addProperty(java.lang.String,java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/testRelationWithData()#com/google/gson/JsonObject/JsonObject()
io/corbel/resources/rem/dao/MongoResmiDaoTest/testRelationWithData()#com/google/gson/JsonObject/addProperty(java.lang.String,java.lang.Boolean)
io/corbel/resources/rem/dao/MongoResmiDaoTest/testRelationWithData()#org/springframework/data/mongodb/core/MongoOperations/exists(org.springframework.data.mongodb.core.query.Query,java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/testRelationWithData()#org/springframework/data/mongodb/core/MongoOperations/findAndModify(org.springframework.data.mongodb.core.query.Query,org.springframework.data.mongodb.core.query.Update,org.springframework.data.mongodb.core.FindAndModifyOptions,java.lang.Class,java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/testRelationWithData()#org/mockito/Matchers/any()
io/corbel/resources/rem/dao/MongoResmiDaoTest/testRelationWithData()#com/google/gson/JsonPrimitive/JsonPrimitive(java.lang.Number)
io/corbel/resources/rem/dao/MongoResmiDaoTest/testRelationWithData()#io/corbel/resources/rem/dao/DefaultMongoResmiDao/upsertRelation(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject)
io/corbel/resources/rem/dao/MongoResmiDaoTest/testRelationWithData()#com/google/gson/JsonObject/addProperty(java.lang.String,java.lang.Number)
io/corbel/resources/rem/dao/MongoResmiDaoTest/testRelationWithData()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/resources/rem/dao/MongoResmiDaoTest/minRelationTest()#io/corbel/resources/rem/model/ResourceUri/ResourceUri(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/minRelationTest()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/minRelationTest()#org/mockito/ArgumentCaptor/getValue()
io/corbel/resources/rem/dao/MongoResmiDaoTest/minRelationTest()#java/util/Collections/singletonList(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/minRelationTest()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/minRelationTest()#org/mockito/ArgumentCaptor/forClass(java.lang.Class)
io/corbel/resources/rem/dao/MongoResmiDaoTest/minRelationTest()#org/springframework/data/mongodb/core/MongoOperations/aggregate(org.springframework.data.mongodb.core.aggregation.Aggregation,java.lang.String,java.lang.Class)
io/corbel/resources/rem/dao/MongoResmiDaoTest/minRelationTest()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/resources/rem/dao/MongoResmiDaoTest/minRelationTest()#com/google/gson/JsonElement/getAsInt()
io/corbel/resources/rem/dao/MongoResmiDaoTest/minRelationTest()#com/mongodb/BasicDBObject/BasicDBObject(java.lang.String,java.lang.Object)
io/corbel/resources/rem/dao/MongoResmiDaoTest/minRelationTest()#org/mockito/Matchers/eq(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/minRelationTest()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/resources/rem/dao/MongoResmiDaoTest/minRelationTest()#io/corbel/resources/rem/dao/DefaultMongoResmiDao/min(io.corbel.resources.rem.model.ResourceUri,java.util.List,java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/minRelationTest()#io/corbel/lib/queries/request/ResourceQuery/addQueryNode(io.corbel.lib.queries.request.QueryNode)
io/corbel/resources/rem/dao/MongoResmiDaoTest/minRelationTest()#org/springframework/data/mongodb/core/aggregation/AggregationResults/AggregationResults(java.util.List,com.mongodb.DBObject)
io/corbel/resources/rem/dao/MongoResmiDaoTest/minRelationTest()#io/corbel/lib/queries/request/ResourceQuery/ResourceQuery()
io/corbel/resources/rem/dao/MongoResmiDaoTest/minRelationTest()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/minRelationTest()#org/mockito/ArgumentCaptor/capture()
io/corbel/resources/rem/dao/MongoResmiDaoTest/minRelationTest()#com/google/gson/JsonElement/getAsJsonObject()
io/corbel/resources/rem/dao/MongoResmiDaoTest/minRelationTest()#io/corbel/lib/queries/QueryNodeImpl/QueryNodeImpl(io.corbel.lib.queries.request.QueryOperator,java.lang.String,io.corbel.lib.queries.request.QueryLiteral)
io/corbel/resources/rem/dao/MongoResmiDaoTest/minRelationTest()#io/corbel/lib/queries/StringQueryLiteral/StringQueryLiteral(java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/minRelationTest()#org/springframework/data/mongodb/core/aggregation/Aggregation/toString()
io/corbel/resources/rem/dao/MongoResmiDaoTest/minRelationTest()#com/google/gson/JsonObject/get(java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/minRelationTest()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/resources/rem/dao/MongoResmiDaoTest/minRelationTest()#com/mongodb/BasicDBObject/BasicDBObject()
io/corbel/resources/rem/dao/MongoResmiDaoTest/testUpsert()#org/bson/BSONObject/get(java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/testUpsert()#io/corbel/resources/rem/model/ResourceUri/ResourceUri(java.lang.String,java.lang.String,java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/testUpsert()#org/mockito/ArgumentCaptor/getValue()
io/corbel/resources/rem/dao/MongoResmiDaoTest/testUpsert()#io/corbel/resources/rem/dao/DefaultMongoResmiDao/updateResource(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject)
io/corbel/resources/rem/dao/MongoResmiDaoTest/testUpsert()#org/springframework/data/mongodb/core/FindAndModifyOptions/isUpsert()
io/corbel/resources/rem/dao/MongoResmiDaoTest/testUpsert()#org/fest/assertions/api/BooleanAssert/isEqualTo(boolean)
io/corbel/resources/rem/dao/MongoResmiDaoTest/testUpsert()#org/mockito/ArgumentCaptor/capture()
io/corbel/resources/rem/dao/MongoResmiDaoTest/testUpsert()#com/google/gson/JsonPrimitive/JsonPrimitive(java.lang.Number)
io/corbel/resources/rem/dao/MongoResmiDaoTest/testUpsert()#org/fest/assertions/api/Assertions/assertThat(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/testUpsert()#org/mockito/Matchers/eq(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/testUpsert()#com/google/gson/JsonObject/add(java.lang.String,com.google.gson.JsonElement)
io/corbel/resources/rem/dao/MongoResmiDaoTest/testUpsert()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/testUpsert()#org/fest/assertions/api/BooleanAssert/isTrue()
io/corbel/resources/rem/dao/MongoResmiDaoTest/testUpsert()#org/bson/BSONObject/containsField(java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/testUpsert()#org/fest/assertions/api/Assertions/assertThat(boolean)
io/corbel/resources/rem/dao/MongoResmiDaoTest/testUpsert()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/resources/rem/dao/MongoResmiDaoTest/testUpsert()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/testUpsert()#io/corbel/resources/rem/dao/MongoResmiDaoTest/answerWithId(com.google.gson.JsonObject)
io/corbel/resources/rem/dao/MongoResmiDaoTest/testUpsert()#org/mockito/ArgumentCaptor/forClass(java.lang.Class)
io/corbel/resources/rem/dao/MongoResmiDaoTest/testUpsert()#org/mockito/Mockito/verify(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/testUpsert()#com/mongodb/WriteResult/getN()
io/corbel/resources/rem/dao/MongoResmiDaoTest/testUpsert()#org/springframework/data/mongodb/core/query/Update/getUpdateObject()
io/corbel/resources/rem/dao/MongoResmiDaoTest/testUpsert()#org/springframework/data/mongodb/core/query/Query/getQueryObject()
io/corbel/resources/rem/dao/MongoResmiDaoTest/testUpsert()#com/google/gson/JsonObject/addProperty(java.lang.String,java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/testUpsert()#com/google/gson/JsonObject/JsonObject()
io/corbel/resources/rem/dao/MongoResmiDaoTest/testUpsert()#org/springframework/data/mongodb/core/MongoOperations/findAndModify(org.springframework.data.mongodb.core.query.Query,org.springframework.data.mongodb.core.query.Update,org.springframework.data.mongodb.core.FindAndModifyOptions,java.lang.Class,java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/testUpsert()#org/mockito/Matchers/any()
io/corbel/resources/rem/dao/MongoResmiDaoTest/testUpsert()#com/google/gson/JsonObject/addProperty(java.lang.String,java.lang.Number)
io/corbel/resources/rem/dao/MongoResmiDaoTest/testUpsert()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumRelationIsNotNumericFieldTest()#io/corbel/lib/queries/request/ResourceQuery/addQueryNode(io.corbel.lib.queries.request.QueryNode)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumRelationIsNotNumericFieldTest()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumRelationIsNotNumericFieldTest()#org/mockito/ArgumentCaptor/getValue()
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumRelationIsNotNumericFieldTest()#com/mongodb/BasicDBObjectBuilder/add(java.lang.String,java.lang.Object)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumRelationIsNotNumericFieldTest()#io/corbel/resources/rem/dao/DefaultMongoResmiDao/sum(io.corbel.resources.rem.model.ResourceUri,java.util.List,java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumRelationIsNotNumericFieldTest()#org/springframework/data/mongodb/core/MongoOperations/aggregate(org.springframework.data.mongodb.core.aggregation.Aggregation,java.lang.String,java.lang.Class)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumRelationIsNotNumericFieldTest()#org/mockito/stubbing/Stubber/when(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumRelationIsNotNumericFieldTest()#org/junit/Assert/assertTrue(boolean)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumRelationIsNotNumericFieldTest()#io/corbel/lib/queries/request/AggregationResultsFactory/sumResult(java.util.Optional)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumRelationIsNotNumericFieldTest()#java/util/Optional/empty()
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumRelationIsNotNumericFieldTest()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumRelationIsNotNumericFieldTest()#org/springframework/data/mongodb/core/MongoOperations/count(org.springframework.data.mongodb.core.query.Query,java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumRelationIsNotNumericFieldTest()#io/corbel/resources/rem/model/ResourceUri/ResourceUri(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumRelationIsNotNumericFieldTest()#java/util/Collections/singletonList(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumRelationIsNotNumericFieldTest()#com/mongodb/BasicDBObjectBuilder/BasicDBObjectBuilder()
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumRelationIsNotNumericFieldTest()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumRelationIsNotNumericFieldTest()#org/mockito/Matchers/anyString()
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumRelationIsNotNumericFieldTest()#org/mockito/Matchers/any(java.lang.Class)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumRelationIsNotNumericFieldTest()#org/mockito/ArgumentCaptor/forClass(java.lang.Class)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumRelationIsNotNumericFieldTest()#com/google/gson/JsonElement/isJsonNull()
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumRelationIsNotNumericFieldTest()#org/springframework/data/mongodb/core/aggregation/AggregationResults/AggregationResults(java.util.List,com.mongodb.DBObject)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumRelationIsNotNumericFieldTest()#io/corbel/lib/queries/request/ResourceQuery/ResourceQuery()
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumRelationIsNotNumericFieldTest()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumRelationIsNotNumericFieldTest()#org/mockito/ArgumentCaptor/capture()
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumRelationIsNotNumericFieldTest()#com/google/gson/JsonElement/getAsJsonObject()
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumRelationIsNotNumericFieldTest()#io/corbel/lib/queries/QueryNodeImpl/QueryNodeImpl(io.corbel.lib.queries.request.QueryOperator,java.lang.String,io.corbel.lib.queries.request.QueryLiteral)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumRelationIsNotNumericFieldTest()#org/mockito/Mockito/doReturn(java.lang.Object)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumRelationIsNotNumericFieldTest()#io/corbel/lib/queries/StringQueryLiteral/StringQueryLiteral(java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumRelationIsNotNumericFieldTest()#org/springframework/data/mongodb/core/aggregation/Aggregation/toString()
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumRelationIsNotNumericFieldTest()#org/mockito/Matchers/eq(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumRelationIsNotNumericFieldTest()#com/mongodb/BasicDBObjectBuilder/get()
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumRelationIsNotNumericFieldTest()#io/corbel/resources/rem/dao/DefaultMongoResmiDao/collectionHasAtLeastOneEntryWithNumericInField(io.corbel.resources.rem.model.ResourceUri,java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumRelationIsNotNumericFieldTest()#com/google/gson/JsonObject/get(java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumRelationIsNotNumericFieldTest()#com/mongodb/BasicDBObject/BasicDBObject()
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageEmptyTest()#io/corbel/resources/rem/model/ResourceUri/ResourceUri(java.lang.String,java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageEmptyTest()#io/corbel/lib/queries/request/ResourceQuery/addQueryNode(io.corbel.lib.queries.request.QueryNode)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageEmptyTest()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageEmptyTest()#java/util/Collections/singletonList(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageEmptyTest()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageEmptyTest()#org/mockito/ArgumentCaptor/forClass(java.lang.Class)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageEmptyTest()#org/springframework/data/mongodb/core/MongoOperations/aggregate(org.springframework.data.mongodb.core.aggregation.Aggregation,java.lang.String,java.lang.Class)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageEmptyTest()#java/util/Collections/emptyList()
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageEmptyTest()#org/mockito/ArgumentCaptor/capture()
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageEmptyTest()#io/corbel/resources/rem/dao/DefaultMongoResmiDao/average(io.corbel.resources.rem.model.ResourceUri,java.util.List,java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageEmptyTest()#io/corbel/lib/queries/StringQueryLiteral/StringQueryLiteral(java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageEmptyTest()#org/fest/assertions/api/Assertions/assertThat(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageEmptyTest()#org/mockito/Matchers/eq(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageEmptyTest()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageEmptyTest()#org/springframework/data/mongodb/core/aggregation/AggregationResults/AggregationResults(java.util.List,com.mongodb.DBObject)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageEmptyTest()#io/corbel/lib/queries/request/ResourceQuery/ResourceQuery()
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageEmptyTest()#com/google/gson/JsonElement/getAsJsonObject()
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageEmptyTest()#io/corbel/lib/queries/QueryNodeImpl/QueryNodeImpl(io.corbel.lib.queries.request.QueryOperator,java.lang.String,io.corbel.lib.queries.request.QueryLiteral)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageEmptyTest()#com/google/gson/JsonObject/get(java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageEmptyTest()#com/mongodb/BasicDBObject/BasicDBObject()
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumRelationNotExistsFieldTest()#io/corbel/lib/queries/request/ResourceQuery/addQueryNode(io.corbel.lib.queries.request.QueryNode)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumRelationNotExistsFieldTest()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumRelationNotExistsFieldTest()#org/mockito/ArgumentCaptor/getValue()
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumRelationNotExistsFieldTest()#com/mongodb/BasicDBObjectBuilder/add(java.lang.String,java.lang.Object)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumRelationNotExistsFieldTest()#io/corbel/resources/rem/dao/DefaultMongoResmiDao/sum(io.corbel.resources.rem.model.ResourceUri,java.util.List,java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumRelationNotExistsFieldTest()#org/springframework/data/mongodb/core/MongoOperations/aggregate(org.springframework.data.mongodb.core.aggregation.Aggregation,java.lang.String,java.lang.Class)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumRelationNotExistsFieldTest()#org/junit/Assert/assertTrue(boolean)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumRelationNotExistsFieldTest()#io/corbel/lib/queries/request/AggregationResultsFactory/sumResult(java.util.Optional)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumRelationNotExistsFieldTest()#java/util/Optional/empty()
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumRelationNotExistsFieldTest()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumRelationNotExistsFieldTest()#org/springframework/data/mongodb/core/MongoOperations/count(org.springframework.data.mongodb.core.query.Query,java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumRelationNotExistsFieldTest()#io/corbel/resources/rem/model/ResourceUri/ResourceUri(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumRelationNotExistsFieldTest()#java/util/Collections/singletonList(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumRelationNotExistsFieldTest()#com/mongodb/BasicDBObjectBuilder/BasicDBObjectBuilder()
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumRelationNotExistsFieldTest()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumRelationNotExistsFieldTest()#org/mockito/Matchers/anyString()
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumRelationNotExistsFieldTest()#org/mockito/Matchers/any(java.lang.Class)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumRelationNotExistsFieldTest()#org/mockito/ArgumentCaptor/forClass(java.lang.Class)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumRelationNotExistsFieldTest()#com/google/gson/JsonElement/isJsonNull()
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumRelationNotExistsFieldTest()#org/springframework/data/mongodb/core/aggregation/AggregationResults/AggregationResults(java.util.List,com.mongodb.DBObject)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumRelationNotExistsFieldTest()#io/corbel/lib/queries/request/ResourceQuery/ResourceQuery()
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumRelationNotExistsFieldTest()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumRelationNotExistsFieldTest()#org/mockito/ArgumentCaptor/capture()
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumRelationNotExistsFieldTest()#com/google/gson/JsonElement/getAsJsonObject()
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumRelationNotExistsFieldTest()#io/corbel/lib/queries/QueryNodeImpl/QueryNodeImpl(io.corbel.lib.queries.request.QueryOperator,java.lang.String,io.corbel.lib.queries.request.QueryLiteral)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumRelationNotExistsFieldTest()#io/corbel/lib/queries/StringQueryLiteral/StringQueryLiteral(java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumRelationNotExistsFieldTest()#org/springframework/data/mongodb/core/aggregation/Aggregation/toString()
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumRelationNotExistsFieldTest()#org/mockito/Matchers/eq(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumRelationNotExistsFieldTest()#com/mongodb/BasicDBObjectBuilder/get()
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumRelationNotExistsFieldTest()#com/google/gson/JsonObject/get(java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumRelationNotExistsFieldTest()#com/mongodb/BasicDBObject/BasicDBObject()
io/corbel/resources/rem/dao/MongoResmiDaoTest/minTest()#io/corbel/resources/rem/model/ResourceUri/ResourceUri(java.lang.String,java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/minTest()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/minTest()#org/mockito/ArgumentCaptor/getValue()
io/corbel/resources/rem/dao/MongoResmiDaoTest/minTest()#java/util/Collections/singletonList(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/minTest()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/minTest()#org/mockito/ArgumentCaptor/forClass(java.lang.Class)
io/corbel/resources/rem/dao/MongoResmiDaoTest/minTest()#org/springframework/data/mongodb/core/MongoOperations/aggregate(org.springframework.data.mongodb.core.aggregation.Aggregation,java.lang.String,java.lang.Class)
io/corbel/resources/rem/dao/MongoResmiDaoTest/minTest()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/resources/rem/dao/MongoResmiDaoTest/minTest()#com/google/gson/JsonElement/getAsInt()
io/corbel/resources/rem/dao/MongoResmiDaoTest/minTest()#com/mongodb/BasicDBObject/BasicDBObject(java.lang.String,java.lang.Object)
io/corbel/resources/rem/dao/MongoResmiDaoTest/minTest()#org/mockito/Matchers/eq(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/minTest()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/resources/rem/dao/MongoResmiDaoTest/minTest()#io/corbel/resources/rem/dao/DefaultMongoResmiDao/min(io.corbel.resources.rem.model.ResourceUri,java.util.List,java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/minTest()#io/corbel/lib/queries/request/ResourceQuery/addQueryNode(io.corbel.lib.queries.request.QueryNode)
io/corbel/resources/rem/dao/MongoResmiDaoTest/minTest()#org/springframework/data/mongodb/core/aggregation/AggregationResults/AggregationResults(java.util.List,com.mongodb.DBObject)
io/corbel/resources/rem/dao/MongoResmiDaoTest/minTest()#io/corbel/lib/queries/request/ResourceQuery/ResourceQuery()
io/corbel/resources/rem/dao/MongoResmiDaoTest/minTest()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/minTest()#org/mockito/ArgumentCaptor/capture()
io/corbel/resources/rem/dao/MongoResmiDaoTest/minTest()#com/google/gson/JsonElement/getAsJsonObject()
io/corbel/resources/rem/dao/MongoResmiDaoTest/minTest()#io/corbel/lib/queries/QueryNodeImpl/QueryNodeImpl(io.corbel.lib.queries.request.QueryOperator,java.lang.String,io.corbel.lib.queries.request.QueryLiteral)
io/corbel/resources/rem/dao/MongoResmiDaoTest/minTest()#io/corbel/lib/queries/StringQueryLiteral/StringQueryLiteral(java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/minTest()#org/springframework/data/mongodb/core/aggregation/Aggregation/toString()
io/corbel/resources/rem/dao/MongoResmiDaoTest/minTest()#com/google/gson/JsonObject/get(java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/minTest()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/resources/rem/dao/MongoResmiDaoTest/minTest()#com/mongodb/BasicDBObject/BasicDBObject()
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumNotExistsFieldTest()#io/corbel/lib/queries/request/ResourceQuery/addQueryNode(io.corbel.lib.queries.request.QueryNode)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumNotExistsFieldTest()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumNotExistsFieldTest()#org/mockito/ArgumentCaptor/getValue()
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumNotExistsFieldTest()#com/mongodb/BasicDBObjectBuilder/add(java.lang.String,java.lang.Object)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumNotExistsFieldTest()#io/corbel/resources/rem/dao/DefaultMongoResmiDao/sum(io.corbel.resources.rem.model.ResourceUri,java.util.List,java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumNotExistsFieldTest()#org/springframework/data/mongodb/core/MongoOperations/aggregate(org.springframework.data.mongodb.core.aggregation.Aggregation,java.lang.String,java.lang.Class)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumNotExistsFieldTest()#org/mockito/stubbing/Stubber/when(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumNotExistsFieldTest()#org/junit/Assert/assertTrue(boolean)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumNotExistsFieldTest()#io/corbel/lib/queries/request/AggregationResultsFactory/sumResult(java.util.Optional)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumNotExistsFieldTest()#java/util/Optional/empty()
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumNotExistsFieldTest()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumNotExistsFieldTest()#io/corbel/resources/rem/model/ResourceUri/ResourceUri(java.lang.String,java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumNotExistsFieldTest()#org/springframework/data/mongodb/core/MongoOperations/count(org.springframework.data.mongodb.core.query.Query,java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumNotExistsFieldTest()#java/util/Collections/singletonList(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumNotExistsFieldTest()#com/mongodb/BasicDBObjectBuilder/BasicDBObjectBuilder()
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumNotExistsFieldTest()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumNotExistsFieldTest()#org/mockito/Matchers/anyString()
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumNotExistsFieldTest()#org/mockito/Matchers/any(java.lang.Class)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumNotExistsFieldTest()#org/mockito/ArgumentCaptor/forClass(java.lang.Class)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumNotExistsFieldTest()#com/google/gson/JsonElement/isJsonNull()
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumNotExistsFieldTest()#org/springframework/data/mongodb/core/aggregation/AggregationResults/AggregationResults(java.util.List,com.mongodb.DBObject)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumNotExistsFieldTest()#io/corbel/lib/queries/request/ResourceQuery/ResourceQuery()
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumNotExistsFieldTest()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumNotExistsFieldTest()#org/mockito/ArgumentCaptor/capture()
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumNotExistsFieldTest()#com/google/gson/JsonElement/getAsJsonObject()
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumNotExistsFieldTest()#io/corbel/lib/queries/QueryNodeImpl/QueryNodeImpl(io.corbel.lib.queries.request.QueryOperator,java.lang.String,io.corbel.lib.queries.request.QueryLiteral)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumNotExistsFieldTest()#org/mockito/Mockito/doReturn(java.lang.Object)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumNotExistsFieldTest()#io/corbel/lib/queries/StringQueryLiteral/StringQueryLiteral(java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumNotExistsFieldTest()#org/springframework/data/mongodb/core/aggregation/Aggregation/toString()
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumNotExistsFieldTest()#org/mockito/Matchers/eq(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumNotExistsFieldTest()#com/mongodb/BasicDBObjectBuilder/get()
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumNotExistsFieldTest()#io/corbel/resources/rem/dao/DefaultMongoResmiDao/collectionHasAtLeastOneEntryWithNumericInField(io.corbel.resources.rem.model.ResourceUri,java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumNotExistsFieldTest()#com/google/gson/JsonObject/get(java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/sumNotExistsFieldTest()#com/mongodb/BasicDBObject/BasicDBObject()
io/corbel/resources/rem/dao/MongoResmiDaoTest/ensureCollectionIndexTest()#io/corbel/resources/rem/model/ResourceUri/ResourceUri(java.lang.String,java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/ensureCollectionIndexTest()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/ensureCollectionIndexTest()#org/springframework/data/mongodb/core/index/Index/Index()
io/corbel/resources/rem/dao/MongoResmiDaoTest/ensureCollectionIndexTest()#org/springframework/data/mongodb/core/IndexOperations/ensureIndex(org.springframework.data.mongodb.core.index.IndexDefinition)
io/corbel/resources/rem/dao/MongoResmiDaoTest/ensureCollectionIndexTest()#org/springframework/data/mongodb/core/index/Index/expire(long)
io/corbel/resources/rem/dao/MongoResmiDaoTest/ensureCollectionIndexTest()#org/springframework/data/mongodb/core/index/Index/on(java.lang.String,org.springframework.data.domain.Sort.Direction)
io/corbel/resources/rem/dao/MongoResmiDaoTest/ensureCollectionIndexTest()#org/springframework/data/mongodb/core/MongoOperations/indexOps(java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/ensureCollectionIndexTest()#io/corbel/resources/rem/dao/DefaultMongoResmiDao/ensureIndex(io.corbel.resources.rem.model.ResourceUri,org.springframework.data.mongodb.core.index.IndexDefinition)
io/corbel/resources/rem/dao/MongoResmiDaoTest/ensureCollectionIndexTest()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/resources/rem/dao/MongoResmiDaoTest/ensureCollectionIndexTest()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/ensureCollectionIndexTest()#org/mockito/Matchers/anyString()
io/corbel/resources/rem/dao/MongoResmiDaoTest/ensureCollectionIndexTest()#org/mockito/Mockito/verifyNoMoreInteractions(java.lang.Object[])
io/corbel/resources/rem/dao/MongoResmiDaoTest/ensureCollectionIndexTest()#org/mockito/Mockito/verify(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageEquals0Test()#io/corbel/lib/queries/request/ResourceQuery/addQueryNode(io.corbel.lib.queries.request.QueryNode)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageEquals0Test()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageEquals0Test()#org/mockito/ArgumentCaptor/getValue()
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageEquals0Test()#com/mongodb/BasicDBObjectBuilder/add(java.lang.String,java.lang.Object)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageEquals0Test()#org/springframework/data/mongodb/core/MongoOperations/aggregate(org.springframework.data.mongodb.core.aggregation.Aggregation,java.lang.String,java.lang.Class)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageEquals0Test()#org/mockito/stubbing/Stubber/when(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageEquals0Test()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageEquals0Test()#io/corbel/resources/rem/dao/DefaultMongoResmiDao/average(io.corbel.resources.rem.model.ResourceUri,java.util.List,java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageEquals0Test()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageEquals0Test()#io/corbel/resources/rem/model/ResourceUri/ResourceUri(java.lang.String,java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageEquals0Test()#org/springframework/data/mongodb/core/MongoOperations/count(org.springframework.data.mongodb.core.query.Query,java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageEquals0Test()#io/corbel/lib/queries/request/AggregationResultsFactory/averageResult(java.util.Optional)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageEquals0Test()#java/util/Collections/singletonList(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageEquals0Test()#com/mongodb/BasicDBObjectBuilder/BasicDBObjectBuilder()
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageEquals0Test()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageEquals0Test()#org/mockito/Matchers/anyString()
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageEquals0Test()#org/mockito/Matchers/any(java.lang.Class)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageEquals0Test()#org/mockito/ArgumentCaptor/forClass(java.lang.Class)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageEquals0Test()#org/springframework/data/mongodb/core/aggregation/AggregationResults/AggregationResults(java.util.List,com.mongodb.DBObject)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageEquals0Test()#io/corbel/lib/queries/request/ResourceQuery/ResourceQuery()
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageEquals0Test()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageEquals0Test()#org/mockito/ArgumentCaptor/capture()
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageEquals0Test()#com/google/gson/JsonElement/getAsJsonObject()
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageEquals0Test()#io/corbel/lib/queries/QueryNodeImpl/QueryNodeImpl(io.corbel.lib.queries.request.QueryOperator,java.lang.String,io.corbel.lib.queries.request.QueryLiteral)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageEquals0Test()#org/mockito/Mockito/doReturn(java.lang.Object)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageEquals0Test()#io/corbel/lib/queries/StringQueryLiteral/StringQueryLiteral(java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageEquals0Test()#org/springframework/data/mongodb/core/aggregation/Aggregation/toString()
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageEquals0Test()#com/google/gson/JsonElement/getAsInt()
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageEquals0Test()#java/util/Optional/empty()
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageEquals0Test()#org/mockito/Matchers/eq(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageEquals0Test()#com/mongodb/BasicDBObjectBuilder/get()
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageEquals0Test()#io/corbel/resources/rem/dao/DefaultMongoResmiDao/collectionHasAtLeastOneEntryWithNumericInField(io.corbel.resources.rem.model.ResourceUri,java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageEquals0Test()#com/google/gson/JsonObject/get(java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageEquals0Test()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageEquals0Test()#com/mongodb/BasicDBObject/BasicDBObject()
io/corbel/resources/rem/dao/MongoResmiDaoTest/testFindRelation()#io/corbel/resources/rem/model/ResourceUri/ResourceUri(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/testFindRelation()#org/bson/BSONObject/get(java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/testFindRelation()#com/google/gson/JsonObject/has(java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/testFindRelation()#org/mockito/ArgumentCaptor/getValue()
io/corbel/resources/rem/dao/MongoResmiDaoTest/testFindRelation()#org/fest/assertions/api/BooleanAssert/isFalse()
io/corbel/resources/rem/dao/MongoResmiDaoTest/testFindRelation()#java/util/Collections/singletonList(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/testFindRelation()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/testFindRelation()#org/mockito/ArgumentCaptor/forClass(java.lang.Class)
io/corbel/resources/rem/dao/MongoResmiDaoTest/testFindRelation()#java/util/List/size()
io/corbel/resources/rem/dao/MongoResmiDaoTest/testFindRelation()#org/fest/assertions/api/AbstractAssert/isSameAs(A)
io/corbel/resources/rem/dao/MongoResmiDaoTest/testFindRelation()#java/util/Optional/of(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/testFindRelation()#com/google/gson/JsonPrimitive/JsonPrimitive(java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/testFindRelation()#org/mockito/ArgumentCaptor/capture()
io/corbel/resources/rem/dao/MongoResmiDaoTest/testFindRelation()#com/google/gson/JsonElement/getAsJsonObject()
io/corbel/resources/rem/dao/MongoResmiDaoTest/testFindRelation()#com/google/gson/JsonArray/size()
io/corbel/resources/rem/dao/MongoResmiDaoTest/testFindRelation()#com/google/gson/JsonObject/JsonObject()
io/corbel/resources/rem/dao/MongoResmiDaoTest/testFindRelation()#org/springframework/data/mongodb/core/query/Field/getFieldsObject()
io/corbel/resources/rem/dao/MongoResmiDaoTest/testFindRelation()#org/mockito/Matchers/eq(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/testFindRelation()#com/google/gson/JsonObject/add(java.lang.String,com.google.gson.JsonElement)
io/corbel/resources/rem/dao/MongoResmiDaoTest/testFindRelation()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/resources/rem/dao/MongoResmiDaoTest/testFindRelation()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/testFindRelation()#org/fest/assertions/api/BooleanAssert/isTrue()
io/corbel/resources/rem/dao/MongoResmiDaoTest/testFindRelation()#org/fest/assertions/api/Assertions/assertThat(boolean)
io/corbel/resources/rem/dao/MongoResmiDaoTest/testFindRelation()#io/corbel/lib/queries/request/Pagination/Pagination(int,int)
io/corbel/resources/rem/dao/MongoResmiDaoTest/testFindRelation()#org/springframework/data/mongodb/core/MongoOperations/find(org.springframework.data.mongodb.core.query.Query,java.lang.Class,java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/testFindRelation()#com/google/gson/JsonElement/isJsonArray()
io/corbel/resources/rem/dao/MongoResmiDaoTest/testFindRelation()#java/util/Optional/empty()
io/corbel/resources/rem/dao/MongoResmiDaoTest/testFindRelation()#org/springframework/data/mongodb/core/query/Query/fields()
io/corbel/resources/rem/dao/MongoResmiDaoTest/testFindRelation()#com/google/gson/JsonElement/getAsJsonArray()
io/corbel/resources/rem/dao/MongoResmiDaoTest/testFindRelation()#io/corbel/resources/rem/dao/MongoResmiDao/findRelation(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,java.util.Optional,java.util.Optional,java.util.Optional)
io/corbel/resources/rem/dao/MongoResmiDaoTest/testFindRelation()#org/fest/assertions/api/Assertions/assertThat(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/testFindRelation()#com/google/gson/JsonObject/get(java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/testFindRelation()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/resources/rem/dao/MongoResmiDaoTest/testFindRelationWithWildcard()#io/corbel/resources/rem/model/ResourceUri/ResourceUri(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/testFindRelationWithWildcard()#org/bson/BSONObject/get(java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/testFindRelationWithWildcard()#com/google/gson/JsonObject/has(java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/testFindRelationWithWildcard()#org/mockito/ArgumentCaptor/getValue()
io/corbel/resources/rem/dao/MongoResmiDaoTest/testFindRelationWithWildcard()#org/fest/assertions/api/BooleanAssert/isFalse()
io/corbel/resources/rem/dao/MongoResmiDaoTest/testFindRelationWithWildcard()#java/util/Collections/singletonList(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/testFindRelationWithWildcard()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/testFindRelationWithWildcard()#org/mockito/ArgumentCaptor/forClass(java.lang.Class)
io/corbel/resources/rem/dao/MongoResmiDaoTest/testFindRelationWithWildcard()#java/util/List/size()
io/corbel/resources/rem/dao/MongoResmiDaoTest/testFindRelationWithWildcard()#org/fest/assertions/api/AbstractAssert/isSameAs(A)
io/corbel/resources/rem/dao/MongoResmiDaoTest/testFindRelationWithWildcard()#java/util/Optional/of(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/testFindRelationWithWildcard()#com/google/gson/JsonPrimitive/JsonPrimitive(java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/testFindRelationWithWildcard()#org/mockito/ArgumentCaptor/capture()
io/corbel/resources/rem/dao/MongoResmiDaoTest/testFindRelationWithWildcard()#com/google/gson/JsonElement/getAsJsonObject()
io/corbel/resources/rem/dao/MongoResmiDaoTest/testFindRelationWithWildcard()#com/google/gson/JsonArray/size()
io/corbel/resources/rem/dao/MongoResmiDaoTest/testFindRelationWithWildcard()#com/google/gson/JsonObject/JsonObject()
io/corbel/resources/rem/dao/MongoResmiDaoTest/testFindRelationWithWildcard()#org/springframework/data/mongodb/core/query/Field/getFieldsObject()
io/corbel/resources/rem/dao/MongoResmiDaoTest/testFindRelationWithWildcard()#org/mockito/Matchers/eq(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/testFindRelationWithWildcard()#com/google/gson/JsonObject/add(java.lang.String,com.google.gson.JsonElement)
io/corbel/resources/rem/dao/MongoResmiDaoTest/testFindRelationWithWildcard()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/resources/rem/dao/MongoResmiDaoTest/testFindRelationWithWildcard()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/testFindRelationWithWildcard()#org/fest/assertions/api/BooleanAssert/isTrue()
io/corbel/resources/rem/dao/MongoResmiDaoTest/testFindRelationWithWildcard()#org/fest/assertions/api/Assertions/assertThat(boolean)
io/corbel/resources/rem/dao/MongoResmiDaoTest/testFindRelationWithWildcard()#io/corbel/lib/queries/request/Pagination/Pagination(int,int)
io/corbel/resources/rem/dao/MongoResmiDaoTest/testFindRelationWithWildcard()#org/springframework/data/mongodb/core/MongoOperations/find(org.springframework.data.mongodb.core.query.Query,java.lang.Class,java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/testFindRelationWithWildcard()#com/google/gson/JsonElement/isJsonArray()
io/corbel/resources/rem/dao/MongoResmiDaoTest/testFindRelationWithWildcard()#java/util/Optional/empty()
io/corbel/resources/rem/dao/MongoResmiDaoTest/testFindRelationWithWildcard()#org/springframework/data/mongodb/core/query/Query/fields()
io/corbel/resources/rem/dao/MongoResmiDaoTest/testFindRelationWithWildcard()#com/google/gson/JsonElement/getAsJsonArray()
io/corbel/resources/rem/dao/MongoResmiDaoTest/testFindRelationWithWildcard()#io/corbel/resources/rem/dao/MongoResmiDao/findRelation(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,java.util.Optional,java.util.Optional,java.util.Optional)
io/corbel/resources/rem/dao/MongoResmiDaoTest/testFindRelationWithWildcard()#org/fest/assertions/api/Assertions/assertThat(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/testFindRelationWithWildcard()#com/google/gson/JsonObject/get(java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/testFindRelationWithWildcard()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationEquals0Test()#io/corbel/lib/queries/request/ResourceQuery/addQueryNode(io.corbel.lib.queries.request.QueryNode)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationEquals0Test()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationEquals0Test()#org/mockito/ArgumentCaptor/getValue()
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationEquals0Test()#com/mongodb/BasicDBObjectBuilder/add(java.lang.String,java.lang.Object)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationEquals0Test()#org/springframework/data/mongodb/core/MongoOperations/aggregate(org.springframework.data.mongodb.core.aggregation.Aggregation,java.lang.String,java.lang.Class)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationEquals0Test()#org/mockito/stubbing/Stubber/when(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationEquals0Test()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationEquals0Test()#io/corbel/resources/rem/dao/DefaultMongoResmiDao/average(io.corbel.resources.rem.model.ResourceUri,java.util.List,java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationEquals0Test()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationEquals0Test()#org/springframework/data/mongodb/core/MongoOperations/count(org.springframework.data.mongodb.core.query.Query,java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationEquals0Test()#io/corbel/resources/rem/model/ResourceUri/ResourceUri(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationEquals0Test()#io/corbel/lib/queries/request/AggregationResultsFactory/averageResult(java.util.Optional)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationEquals0Test()#java/util/Collections/singletonList(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationEquals0Test()#com/mongodb/BasicDBObjectBuilder/BasicDBObjectBuilder()
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationEquals0Test()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationEquals0Test()#org/mockito/Matchers/anyString()
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationEquals0Test()#org/mockito/Matchers/any(java.lang.Class)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationEquals0Test()#org/mockito/ArgumentCaptor/forClass(java.lang.Class)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationEquals0Test()#org/springframework/data/mongodb/core/aggregation/AggregationResults/AggregationResults(java.util.List,com.mongodb.DBObject)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationEquals0Test()#io/corbel/lib/queries/request/ResourceQuery/ResourceQuery()
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationEquals0Test()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationEquals0Test()#org/mockito/ArgumentCaptor/capture()
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationEquals0Test()#com/google/gson/JsonElement/getAsJsonObject()
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationEquals0Test()#io/corbel/lib/queries/QueryNodeImpl/QueryNodeImpl(io.corbel.lib.queries.request.QueryOperator,java.lang.String,io.corbel.lib.queries.request.QueryLiteral)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationEquals0Test()#org/mockito/Mockito/doReturn(java.lang.Object)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationEquals0Test()#io/corbel/lib/queries/StringQueryLiteral/StringQueryLiteral(java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationEquals0Test()#org/springframework/data/mongodb/core/aggregation/Aggregation/toString()
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationEquals0Test()#com/google/gson/JsonElement/getAsInt()
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationEquals0Test()#java/util/Optional/empty()
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationEquals0Test()#org/mockito/Matchers/eq(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationEquals0Test()#com/mongodb/BasicDBObjectBuilder/get()
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationEquals0Test()#io/corbel/resources/rem/dao/DefaultMongoResmiDao/collectionHasAtLeastOneEntryWithNumericInField(io.corbel.resources.rem.model.ResourceUri,java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationEquals0Test()#com/google/gson/JsonObject/get(java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationEquals0Test()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationEquals0Test()#com/mongodb/BasicDBObject/BasicDBObject()
io/corbel/resources/rem/dao/MongoResmiDaoTest/maxOnNonExistentFieldTest()#io/corbel/resources/rem/model/ResourceUri/ResourceUri(java.lang.String,java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/maxOnNonExistentFieldTest()#io/corbel/lib/queries/request/ResourceQuery/addQueryNode(io.corbel.lib.queries.request.QueryNode)
io/corbel/resources/rem/dao/MongoResmiDaoTest/maxOnNonExistentFieldTest()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/maxOnNonExistentFieldTest()#org/mockito/ArgumentCaptor/getValue()
io/corbel/resources/rem/dao/MongoResmiDaoTest/maxOnNonExistentFieldTest()#java/util/Collections/singletonList(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/maxOnNonExistentFieldTest()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/maxOnNonExistentFieldTest()#org/mockito/ArgumentCaptor/forClass(java.lang.Class)
io/corbel/resources/rem/dao/MongoResmiDaoTest/maxOnNonExistentFieldTest()#org/springframework/data/mongodb/core/MongoOperations/aggregate(org.springframework.data.mongodb.core.aggregation.Aggregation,java.lang.String,java.lang.Class)
io/corbel/resources/rem/dao/MongoResmiDaoTest/maxOnNonExistentFieldTest()#io/corbel/resources/rem/dao/DefaultMongoResmiDao/max(io.corbel.resources.rem.model.ResourceUri,java.util.List,java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/maxOnNonExistentFieldTest()#org/fest/assertions/api/Assertions/assertThat(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/maxOnNonExistentFieldTest()#com/mongodb/BasicDBObject/BasicDBObject(java.lang.String,java.lang.Object)
io/corbel/resources/rem/dao/MongoResmiDaoTest/maxOnNonExistentFieldTest()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/resources/rem/dao/MongoResmiDaoTest/maxOnNonExistentFieldTest()#org/springframework/data/mongodb/core/aggregation/AggregationResults/AggregationResults(java.util.List,com.mongodb.DBObject)
io/corbel/resources/rem/dao/MongoResmiDaoTest/maxOnNonExistentFieldTest()#io/corbel/lib/queries/request/ResourceQuery/ResourceQuery()
io/corbel/resources/rem/dao/MongoResmiDaoTest/maxOnNonExistentFieldTest()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/maxOnNonExistentFieldTest()#org/mockito/ArgumentCaptor/capture()
io/corbel/resources/rem/dao/MongoResmiDaoTest/maxOnNonExistentFieldTest()#com/google/gson/JsonElement/getAsJsonObject()
io/corbel/resources/rem/dao/MongoResmiDaoTest/maxOnNonExistentFieldTest()#io/corbel/lib/queries/QueryNodeImpl/QueryNodeImpl(io.corbel.lib.queries.request.QueryOperator,java.lang.String,io.corbel.lib.queries.request.QueryLiteral)
io/corbel/resources/rem/dao/MongoResmiDaoTest/maxOnNonExistentFieldTest()#io/corbel/lib/queries/StringQueryLiteral/StringQueryLiteral(java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/maxOnNonExistentFieldTest()#org/springframework/data/mongodb/core/aggregation/Aggregation/toString()
io/corbel/resources/rem/dao/MongoResmiDaoTest/maxOnNonExistentFieldTest()#org/mockito/Matchers/eq(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/maxOnNonExistentFieldTest()#com/google/gson/JsonElement/getAsJsonNull()
io/corbel/resources/rem/dao/MongoResmiDaoTest/maxOnNonExistentFieldTest()#com/google/gson/JsonObject/get(java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/maxOnNonExistentFieldTest()#com/mongodb/BasicDBObject/BasicDBObject()
io/corbel/resources/rem/dao/MongoResmiDaoTest/histogramTopNTest()#io/corbel/resources/rem/model/ResourceUri/ResourceUri(java.lang.String,java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/histogramTopNTest()#com/fasterxml/jackson/databind/JsonNode/asText()
io/corbel/resources/rem/dao/MongoResmiDaoTest/histogramTopNTest()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/histogramTopNTest()#org/mockito/ArgumentCaptor/getValue()
io/corbel/resources/rem/dao/MongoResmiDaoTest/histogramTopNTest()#com/fasterxml/jackson/databind/JsonNode/get(java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/histogramTopNTest()#io/corbel/lib/queries/request/Pagination/Pagination(int,int)
io/corbel/resources/rem/dao/MongoResmiDaoTest/histogramTopNTest()#java/util/Collections/singletonList(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/histogramTopNTest()#org/mockito/ArgumentCaptor/forClass(java.lang.Class)
io/corbel/resources/rem/dao/MongoResmiDaoTest/histogramTopNTest()#java/util/Collections/emptyList()
io/corbel/resources/rem/dao/MongoResmiDaoTest/histogramTopNTest()#com/fasterxml/jackson/databind/JsonNode/toString()
io/corbel/resources/rem/dao/MongoResmiDaoTest/histogramTopNTest()#io/corbel/resources/rem/dao/DefaultMongoResmiDao/histogram(io.corbel.resources.rem.model.ResourceUri,java.util.List,java.util.Optional,java.util.Optional,java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/histogramTopNTest()#com/fasterxml/jackson/databind/JsonNode/asInt()
io/corbel/resources/rem/dao/MongoResmiDaoTest/histogramTopNTest()#org/springframework/data/mongodb/core/aggregation/AggregationResults/AggregationResults(java.util.List,com.mongodb.DBObject)
io/corbel/resources/rem/dao/MongoResmiDaoTest/histogramTopNTest()#org/springframework/data/mongodb/core/aggregation/Aggregation/toString()
io/corbel/resources/rem/dao/MongoResmiDaoTest/histogramTopNTest()#org/mockito/Matchers/eq(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/histogramTopNTest()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/resources/rem/dao/MongoResmiDaoTest/histogramTopNTest()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/histogramTopNTest()#org/bson/BasicBSONObject/put(java.lang.String,java.lang.Object)
io/corbel/resources/rem/dao/MongoResmiDaoTest/histogramTopNTest()#com/fasterxml/jackson/databind/JsonNode/has(java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/histogramTopNTest()#org/springframework/data/mongodb/core/MongoOperations/aggregate(org.springframework.data.mongodb.core.aggregation.Aggregation,java.lang.String,java.lang.Class)
io/corbel/resources/rem/dao/MongoResmiDaoTest/histogramTopNTest()#io/corbel/lib/queries/request/Sort/Sort(java.lang.String,java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/histogramTopNTest()#java/util/Optional/of(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/histogramTopNTest()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/resources/rem/dao/MongoResmiDaoTest/histogramTopNTest()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/histogramTopNTest()#org/mockito/ArgumentCaptor/capture()
io/corbel/resources/rem/dao/MongoResmiDaoTest/histogramTopNTest()#com/fasterxml/jackson/databind/ObjectMapper/ObjectMapper()
io/corbel/resources/rem/dao/MongoResmiDaoTest/histogramTopNTest()#com/fasterxml/jackson/databind/ObjectMapper/readTree(java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/histogramTopNTest()#com/mongodb/BasicDBObject/BasicDBObject(java.lang.String,java.lang.Object)
io/corbel/resources/rem/dao/MongoResmiDaoTest/histogramTopNTest()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/resources/rem/dao/MongoResmiDaoTest/histogramTopNTest()#com/mongodb/BasicDBObject/BasicDBObject()
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageTest()#io/corbel/resources/rem/model/ResourceUri/ResourceUri(java.lang.String,java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageTest()#io/corbel/lib/queries/request/ResourceQuery/addQueryNode(io.corbel.lib.queries.request.QueryNode)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageTest()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageTest()#org/mockito/ArgumentCaptor/getValue()
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageTest()#com/mongodb/BasicDBObjectBuilder/add(java.lang.String,java.lang.Object)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageTest()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageTest()#org/mockito/ArgumentCaptor/forClass(java.lang.Class)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageTest()#org/springframework/data/mongodb/core/MongoOperations/aggregate(org.springframework.data.mongodb.core.aggregation.Aggregation,java.lang.String,java.lang.Class)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageTest()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageTest()#io/corbel/resources/rem/dao/DefaultMongoResmiDao/average(io.corbel.resources.rem.model.ResourceUri,java.util.List,java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageTest()#com/google/gson/JsonElement/getAsInt()
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageTest()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageTest()#java/util/Collections/singletonList(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageTest()#com/mongodb/BasicDBObjectBuilder/BasicDBObjectBuilder()
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageTest()#org/springframework/data/mongodb/core/aggregation/AggregationResults/AggregationResults(java.util.List,com.mongodb.DBObject)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageTest()#io/corbel/lib/queries/request/ResourceQuery/ResourceQuery()
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageTest()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageTest()#org/mockito/ArgumentCaptor/capture()
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageTest()#com/google/gson/JsonElement/getAsJsonObject()
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageTest()#io/corbel/lib/queries/QueryNodeImpl/QueryNodeImpl(io.corbel.lib.queries.request.QueryOperator,java.lang.String,io.corbel.lib.queries.request.QueryLiteral)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageTest()#io/corbel/lib/queries/StringQueryLiteral/StringQueryLiteral(java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageTest()#org/springframework/data/mongodb/core/aggregation/Aggregation/toString()
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageTest()#org/mockito/Matchers/eq(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageTest()#com/mongodb/BasicDBObjectBuilder/get()
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageTest()#com/google/gson/JsonObject/get(java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageTest()#org/fest/assertions/api/Assertions/assertThat(int)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageTest()#com/mongodb/BasicDBObject/BasicDBObject()
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationIsNotNumericFieldTest()#io/corbel/lib/queries/request/ResourceQuery/addQueryNode(io.corbel.lib.queries.request.QueryNode)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationIsNotNumericFieldTest()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationIsNotNumericFieldTest()#org/mockito/ArgumentCaptor/getValue()
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationIsNotNumericFieldTest()#com/mongodb/BasicDBObjectBuilder/add(java.lang.String,java.lang.Object)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationIsNotNumericFieldTest()#org/springframework/data/mongodb/core/MongoOperations/aggregate(org.springframework.data.mongodb.core.aggregation.Aggregation,java.lang.String,java.lang.Class)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationIsNotNumericFieldTest()#org/mockito/stubbing/Stubber/when(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationIsNotNumericFieldTest()#org/junit/Assert/assertTrue(boolean)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationIsNotNumericFieldTest()#io/corbel/resources/rem/dao/DefaultMongoResmiDao/average(io.corbel.resources.rem.model.ResourceUri,java.util.List,java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationIsNotNumericFieldTest()#java/util/Optional/empty()
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationIsNotNumericFieldTest()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationIsNotNumericFieldTest()#org/springframework/data/mongodb/core/MongoOperations/count(org.springframework.data.mongodb.core.query.Query,java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationIsNotNumericFieldTest()#io/corbel/resources/rem/model/ResourceUri/ResourceUri(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationIsNotNumericFieldTest()#io/corbel/lib/queries/request/AggregationResultsFactory/averageResult(java.util.Optional)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationIsNotNumericFieldTest()#java/util/Collections/singletonList(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationIsNotNumericFieldTest()#com/mongodb/BasicDBObjectBuilder/BasicDBObjectBuilder()
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationIsNotNumericFieldTest()#org/mockito/Mockito/when(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationIsNotNumericFieldTest()#org/mockito/Matchers/anyString()
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationIsNotNumericFieldTest()#org/mockito/Matchers/any(java.lang.Class)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationIsNotNumericFieldTest()#org/mockito/ArgumentCaptor/forClass(java.lang.Class)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationIsNotNumericFieldTest()#com/google/gson/JsonElement/isJsonNull()
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationIsNotNumericFieldTest()#org/springframework/data/mongodb/core/aggregation/AggregationResults/AggregationResults(java.util.List,com.mongodb.DBObject)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationIsNotNumericFieldTest()#io/corbel/lib/queries/request/ResourceQuery/ResourceQuery()
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationIsNotNumericFieldTest()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationIsNotNumericFieldTest()#org/mockito/ArgumentCaptor/capture()
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationIsNotNumericFieldTest()#com/google/gson/JsonElement/getAsJsonObject()
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationIsNotNumericFieldTest()#io/corbel/lib/queries/QueryNodeImpl/QueryNodeImpl(io.corbel.lib.queries.request.QueryOperator,java.lang.String,io.corbel.lib.queries.request.QueryLiteral)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationIsNotNumericFieldTest()#org/mockito/Mockito/doReturn(java.lang.Object)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationIsNotNumericFieldTest()#io/corbel/lib/queries/StringQueryLiteral/StringQueryLiteral(java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationIsNotNumericFieldTest()#org/springframework/data/mongodb/core/aggregation/Aggregation/toString()
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationIsNotNumericFieldTest()#org/mockito/Matchers/eq(T)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationIsNotNumericFieldTest()#com/mongodb/BasicDBObjectBuilder/get()
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationIsNotNumericFieldTest()#io/corbel/resources/rem/dao/DefaultMongoResmiDao/collectionHasAtLeastOneEntryWithNumericInField(io.corbel.resources.rem.model.ResourceUri,java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationIsNotNumericFieldTest()#com/google/gson/JsonObject/get(java.lang.String)
io/corbel/resources/rem/dao/MongoResmiDaoTest/averageRelationIsNotNumericFieldTest()#com/mongodb/BasicDBObject/BasicDBObject()
io/corbel/iam/service/DefaultScopeServiceTest/testPublishAuthorizationRules()#io/corbel/iam/service/DefaultScopeServiceTest/array(java.util.Set)
io/corbel/iam/service/DefaultScopeServiceTest/testPublishAuthorizationRules()#io/corbel/lib/ws/auth/repository/AuthorizationRulesRepository/getKeyForAuthorizationRules(java.lang.String,java.lang.String)
io/corbel/iam/service/DefaultScopeServiceTest/testPublishAuthorizationRules()#org/mockito/AdditionalAnswers/returnsFirstArg()
io/corbel/iam/service/DefaultScopeServiceTest/testPublishAuthorizationRules()#io/corbel/iam/service/DefaultScopeService/publishAuthorizationRules(java.lang.String,long,java.util.Set)
io/corbel/iam/service/DefaultScopeServiceTest/testPublishAuthorizationRules()#org/mockito/Mockito/verify(T)
io/corbel/iam/service/DefaultScopeServiceTest/testPublishAuthorizationRules()#org/mockito/Mockito/doAnswer(org.mockito.stubbing.Answer)
io/corbel/iam/service/DefaultScopeServiceTest/testPublishAuthorizationRules()#java/util/Arrays/asList(T[])
io/corbel/iam/service/DefaultScopeServiceTest/testPublishAuthorizationRules()#io/corbel/iam/service/DefaultScopeServiceTest/key(java.lang.String,java.lang.String)
io/corbel/iam/service/DefaultScopeServiceTest/testPublishAuthorizationRules()#io/corbel/iam/scope/ScopeFillStrategy/fillScope(io.corbel.iam.model.Scope,java.util.Map)
io/corbel/iam/service/DefaultScopeServiceTest/testPublishAuthorizationRules()#io/corbel/iam/model/Scope/isComposed()
io/corbel/iam/service/DefaultScopeServiceTest/testPublishAuthorizationRules()#io/corbel/iam/model/Scope/getRules()
io/corbel/iam/service/DefaultScopeServiceTest/testPublishAuthorizationRules()#org/mockito/Matchers/anyMap()
io/corbel/iam/service/DefaultScopeServiceTest/testPublishAuthorizationRules()#java/util/HashSet/HashSet(java.util.Collection)
io/corbel/iam/service/DefaultScopeServiceTest/testPublishAuthorizationRules()#io/corbel/iam/model/Entity/getId()
io/corbel/iam/service/DefaultScopeServiceTest/testPublishAuthorizationRules()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/service/DefaultScopeServiceTest/testPublishAuthorizationRules()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/iam/service/DefaultScopeServiceTest/testPublishAuthorizationRules()#org/mockito/Mockito/when(T)
io/corbel/iam/service/DefaultScopeServiceTest/testPublishAuthorizationRules()#io/corbel/iam/repository/ScopeRepository/findOne(java.lang.String)
io/corbel/iam/service/DefaultScopeServiceTest/testPublishAuthorizationRules()#org/mockito/stubbing/Stubber/when(T)
io/corbel/iam/service/DefaultScopeServiceTest/testPublishAuthorizationRules()#io/corbel/lib/ws/auth/repository/AuthorizationRulesRepository/save(java.lang.String,long,com.google.gson.JsonObject[])
io/corbel/iam/service/DefaultScopeServiceTest/testPublishAuthorizationRules()#org/mockito/Matchers/any()
io/corbel/iam/service/DefaultScopeServiceTest/testPublishAuthorizationRules()#io/corbel/iam/model/Scope/getAudience()
io/corbel/iam/service/DefaultScopeServiceTest/testPublishAuthorizationRules()#java/time/Instant/toEpochMilli()
io/corbel/iam/service/DefaultScopeServiceTest/testPublishAuthorizationRules()#org/mockito/Matchers/eq(T)
io/corbel/iam/service/DefaultScopeServiceTest/setup()#io/corbel/iam/service/DefaultScopeService/DefaultScopeService(io.corbel.iam.repository.ScopeRepository,io.corbel.lib.ws.auth.repository.AuthorizationRulesRepository,long,io.corbel.iam.scope.ScopeFillStrategy,java.lang.String,java.time.Clock,io.corbel.iam.service.EventsService)
io/corbel/iam/service/DefaultScopeServiceTest/setup()#java/time/ZoneId/systemDefault()
io/corbel/iam/service/DefaultScopeServiceTest/setup()#java/time/Clock/fixed(java.time.Instant,java.time.ZoneId)
io/corbel/iam/service/DefaultScopeServiceTest/testFillScopeWithCustomParameters()#org/mockito/Mockito/verify(T)
io/corbel/iam/service/DefaultScopeServiceTest/testFillScopeWithCustomParameters()#io/corbel/iam/service/DefaultScopeService/fillScope(io.corbel.iam.model.Scope,java.lang.String,java.lang.String,java.lang.String)
io/corbel/iam/service/DefaultScopeServiceTest/testFillScopeWithCustomParameters()#java/util/HashMap/HashMap()
io/corbel/iam/service/DefaultScopeServiceTest/testFillScopeWithCustomParameters()#io/corbel/iam/scope/ScopeFillStrategy/fillScope(io.corbel.iam.model.Scope,java.util.Map)
io/corbel/iam/service/DefaultScopeServiceTest/testFillScopeWithCustomParameters()#io/corbel/iam/model/Scope/getAudience()
io/corbel/iam/service/DefaultScopeServiceTest/testFillScopeWithCustomParameters()#org/mockito/Matchers/eq(T)
io/corbel/iam/service/DefaultScopeServiceTest/testFillScopeWithCustomParameters()#io/corbel/iam/model/Scope/getParameters()
io/corbel/iam/service/DefaultScopeServiceTest/testFillScopeWithCustomParameters()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/service/DefaultScopeServiceTest/testFillScopeWithCustomParameters()#org/mockito/Matchers/same(T)
io/corbel/iam/service/DefaultScopeServiceTest/testFillScopeWithCustomParameters()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/iam/service/DefaultScopeServiceTest/testFillScopeWithCustomParameters()#org/mockito/Mockito/when(T)
io/corbel/iam/service/DefaultScopeServiceTest/testFillScopeWithCustomParameters()#io/corbel/iam/model/Scope/getRules()
io/corbel/iam/service/DefaultScopeServiceTest/testFillScopeWithCustomParameters()#java/util/Map/put(K,V)
io/corbel/iam/service/DefaultScopeServiceTest/testScopeWithCustomParameters()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/service/DefaultScopeServiceTest/testScopeWithCustomParameters()#org/mockito/AdditionalAnswers/returnsFirstArg()
io/corbel/iam/service/DefaultScopeServiceTest/testScopeWithCustomParameters()#java/util/Collections/singletonList(T)
io/corbel/iam/service/DefaultScopeServiceTest/testScopeWithCustomParameters()#org/fest/assertions/api/AbstractAssert/isNotEqualTo(A)
io/corbel/iam/service/DefaultScopeServiceTest/testScopeWithCustomParameters()#org/mockito/stubbing/Stubber/when(T)
io/corbel/iam/service/DefaultScopeServiceTest/testScopeWithCustomParameters()#org/mockito/Mockito/doAnswer(org.mockito.stubbing.Answer)
io/corbel/iam/service/DefaultScopeServiceTest/testScopeWithCustomParameters()#io/corbel/iam/service/DefaultScopeService/getScopes(java.util.Collection)
io/corbel/iam/service/DefaultScopeServiceTest/testScopeWithCustomParameters()#java/util/Iterator/next()
io/corbel/iam/service/DefaultScopeServiceTest/testScopeWithCustomParameters()#io/corbel/iam/scope/ScopeFillStrategy/fillScope(io.corbel.iam.model.Scope,java.util.Map)
io/corbel/iam/service/DefaultScopeServiceTest/testScopeWithCustomParameters()#java/util/Set/iterator()
io/corbel/iam/service/DefaultScopeServiceTest/testScopeWithCustomParameters()#org/mockito/Matchers/any()
io/corbel/iam/service/DefaultScopeServiceTest/testScopeWithCustomParameters()#org/mockito/Matchers/eq(T)
io/corbel/iam/service/DefaultScopeServiceTest/testScopeWithCustomParameters()#org/mockito/Mockito/when(T)
io/corbel/iam/service/DefaultScopeServiceTest/testScopeWithCustomParameters()#io/corbel/iam/repository/ScopeRepository/findOne(java.lang.String)
io/corbel/iam/service/DefaultScopeServiceTest/testScopeWithCustomParameters()#org/mockito/Matchers/anyMap()
io/corbel/iam/service/DefaultScopeServiceTest/testScopeWithCustomParameters()#org/fest/assertions/api/Assertions/assertThat(T)
io/corbel/iam/service/DefaultScopeServiceTest/testScopeWithCustomParameters()#io/corbel/iam/model/Scope/Scope(java.lang.String,java.lang.String,java.lang.String,java.util.Set,java.util.Set,com.google.gson.JsonObject)
io/corbel/iam/service/DefaultScopeServiceTest/testScopeWithCustomParameters()#java/util/HashSet/HashSet(java.util.Collection)
io/corbel/iam/service/DefaultScopeServiceTest/testScopeWithCustomParameters()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/iam/service/DefaultScopeServiceTest/testScopeWithCustomParameters()#io/corbel/iam/model/Scope/getParameters()
io/corbel/iam/service/DefaultScopeServiceTest/testComposedScopes()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/service/DefaultScopeServiceTest/testComposedScopes()#org/mockito/AdditionalAnswers/returnsFirstArg()
io/corbel/iam/service/DefaultScopeServiceTest/testComposedScopes()#java/util/Collections/singletonList(T)
io/corbel/iam/service/DefaultScopeServiceTest/testComposedScopes()#org/mockito/stubbing/Stubber/when(T)
io/corbel/iam/service/DefaultScopeServiceTest/testComposedScopes()#org/mockito/Mockito/doAnswer(org.mockito.stubbing.Answer)
io/corbel/iam/service/DefaultScopeServiceTest/testComposedScopes()#org/fest/assertions/api/Assertions/assertThat(java.lang.Iterable)
io/corbel/iam/service/DefaultScopeServiceTest/testComposedScopes()#io/corbel/iam/scope/ScopeFillStrategy/fillScope(io.corbel.iam.model.Scope,java.util.Map)
io/corbel/iam/service/DefaultScopeServiceTest/testComposedScopes()#org/fest/assertions/api/AbstractIterableAssert/doesNotContain(T[])
io/corbel/iam/service/DefaultScopeServiceTest/testComposedScopes()#org/mockito/Matchers/any()
io/corbel/iam/service/DefaultScopeServiceTest/testComposedScopes()#io/corbel/iam/service/DefaultScopeService/expandScopes(java.util.Collection)
io/corbel/iam/service/DefaultScopeServiceTest/testComposedScopes()#org/mockito/Matchers/anyMap()
io/corbel/iam/service/DefaultScopeServiceTest/testComposedScopes()#org/mockito/Matchers/eq(T)
io/corbel/iam/service/DefaultScopeServiceTest/testComposedScopes()#org/mockito/Mockito/when(T)
io/corbel/iam/service/DefaultScopeServiceTest/testComposedScopes()#io/corbel/iam/repository/ScopeRepository/findOne(java.lang.String)
io/corbel/iam/service/DefaultScopeServiceTest/testComposedScopes()#org/fest/assertions/api/AbstractIterableAssert/contains(T[])
io/corbel/iam/service/DefaultScopeServiceTest/testComposedScopes()#java/util/Arrays/asList(T[])
io/corbel/iam/service/DefaultScopeServiceTest/testComposedScopes()#io/corbel/iam/model/Scope/Scope(java.lang.String,java.lang.String,java.lang.String,java.util.Set,java.util.Set,com.google.gson.JsonObject)
io/corbel/iam/service/DefaultScopeServiceTest/testComposedScopes()#java/util/HashSet/HashSet(java.util.Collection)
io/corbel/iam/service/DefaultScopeServiceTest/testCreateScope()#org/mockito/Mockito/verify(T)
io/corbel/iam/service/DefaultScopeServiceTest/testCreateScope()#io/corbel/iam/service/DefaultScopeService/create(io.corbel.iam.model.Scope)
io/corbel/iam/service/DefaultScopeServiceTest/testCreateScope()#org/springframework/data/repository/CrudRepository/save(S)
io/corbel/iam/service/DefaultScopeServiceTest/testCreateScope()#io/corbel/iam/model/Entity/getId()
io/corbel/iam/service/DefaultScopeServiceTest/testCreateScope()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/service/DefaultScopeServiceTest/testCreateScope()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/iam/service/DefaultScopeServiceTest/testCreateScope()#org/mockito/Mockito/when(T)
io/corbel/iam/service/DefaultScopeServiceTest/testAddAuthorizationRules()#io/corbel/iam/service/DefaultScopeServiceTest/array(java.util.Set)
io/corbel/iam/service/DefaultScopeServiceTest/testAddAuthorizationRules()#io/corbel/lib/ws/auth/repository/AuthorizationRulesRepository/getKeyForAuthorizationRules(java.lang.String,java.lang.String)
io/corbel/iam/service/DefaultScopeServiceTest/testAddAuthorizationRules()#org/mockito/AdditionalAnswers/returnsFirstArg()
io/corbel/iam/service/DefaultScopeServiceTest/testAddAuthorizationRules()#java/util/concurrent/TimeUnit/toMillis(long)
io/corbel/iam/service/DefaultScopeServiceTest/testAddAuthorizationRules()#io/corbel/lib/ws/auth/repository/AuthorizationRulesRepository/addRules(java.lang.String,com.google.gson.JsonObject[])
io/corbel/iam/service/DefaultScopeServiceTest/testAddAuthorizationRules()#org/mockito/Mockito/verify(T)
io/corbel/iam/service/DefaultScopeServiceTest/testAddAuthorizationRules()#org/mockito/Mockito/doAnswer(org.mockito.stubbing.Answer)
io/corbel/iam/service/DefaultScopeServiceTest/testAddAuthorizationRules()#io/corbel/iam/scope/ScopeFillStrategy/fillScope(io.corbel.iam.model.Scope,java.util.Map)
io/corbel/iam/service/DefaultScopeServiceTest/testAddAuthorizationRules()#io/corbel/iam/model/Scope/isComposed()
io/corbel/iam/service/DefaultScopeServiceTest/testAddAuthorizationRules()#io/corbel/iam/model/Scope/getRules()
io/corbel/iam/service/DefaultScopeServiceTest/testAddAuthorizationRules()#org/mockito/Matchers/anyMap()
io/corbel/iam/service/DefaultScopeServiceTest/testAddAuthorizationRules()#java/util/HashSet/HashSet(java.util.Collection)
io/corbel/iam/service/DefaultScopeServiceTest/testAddAuthorizationRules()#io/corbel/iam/model/Entity/getId()
io/corbel/iam/service/DefaultScopeServiceTest/testAddAuthorizationRules()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/service/DefaultScopeServiceTest/testAddAuthorizationRules()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/iam/service/DefaultScopeServiceTest/testAddAuthorizationRules()#org/mockito/Mockito/when(T)
io/corbel/iam/service/DefaultScopeServiceTest/testAddAuthorizationRules()#io/corbel/iam/repository/ScopeRepository/findOne(java.lang.String)
io/corbel/iam/service/DefaultScopeServiceTest/testAddAuthorizationRules()#org/mockito/stubbing/Stubber/when(T)
io/corbel/iam/service/DefaultScopeServiceTest/testAddAuthorizationRules()#io/corbel/lib/ws/auth/repository/AuthorizationRulesRepository/save(java.lang.String,long,com.google.gson.JsonObject[])
io/corbel/iam/service/DefaultScopeServiceTest/testAddAuthorizationRules()#io/corbel/lib/ws/auth/repository/AuthorizationRulesRepository/existsRules(java.lang.String)
io/corbel/iam/service/DefaultScopeServiceTest/testAddAuthorizationRules()#java/util/Arrays/asList(T[])
io/corbel/iam/service/DefaultScopeServiceTest/testAddAuthorizationRules()#io/corbel/lib/ws/auth/repository/AuthorizationRulesRepository/getTimeToExpire(java.lang.String)
io/corbel/iam/service/DefaultScopeServiceTest/testAddAuthorizationRules()#io/corbel/iam/service/DefaultScopeServiceTest/key(java.lang.String,java.lang.String)
io/corbel/iam/service/DefaultScopeServiceTest/testAddAuthorizationRules()#org/mockito/Matchers/any()
io/corbel/iam/service/DefaultScopeServiceTest/testAddAuthorizationRules()#io/corbel/iam/model/Scope/getAudience()
io/corbel/iam/service/DefaultScopeServiceTest/testAddAuthorizationRules()#io/corbel/iam/service/DefaultScopeService/addAuthorizationRules(java.lang.String,java.util.Set)
io/corbel/iam/service/DefaultScopeServiceTest/testAddAuthorizationRules()#org/mockito/Matchers/eq(T)
io/corbel/iam/service/DefaultScopeServiceTest/testScopeWithErrorsInCustomParameters()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/service/DefaultScopeServiceTest/testScopeWithErrorsInCustomParameters()#org/mockito/AdditionalAnswers/returnsFirstArg()
io/corbel/iam/service/DefaultScopeServiceTest/testScopeWithErrorsInCustomParameters()#java/util/Collections/singletonList(T)
io/corbel/iam/service/DefaultScopeServiceTest/testScopeWithErrorsInCustomParameters()#org/mockito/stubbing/Stubber/when(T)
io/corbel/iam/service/DefaultScopeServiceTest/testScopeWithErrorsInCustomParameters()#org/mockito/Mockito/doAnswer(org.mockito.stubbing.Answer)
io/corbel/iam/service/DefaultScopeServiceTest/testScopeWithErrorsInCustomParameters()#io/corbel/iam/service/DefaultScopeService/getScopes(java.util.Collection)
io/corbel/iam/service/DefaultScopeServiceTest/testScopeWithErrorsInCustomParameters()#java/util/Iterator/next()
io/corbel/iam/service/DefaultScopeServiceTest/testScopeWithErrorsInCustomParameters()#io/corbel/iam/scope/ScopeFillStrategy/fillScope(io.corbel.iam.model.Scope,java.util.Map)
io/corbel/iam/service/DefaultScopeServiceTest/testScopeWithErrorsInCustomParameters()#java/util/Set/iterator()
io/corbel/iam/service/DefaultScopeServiceTest/testScopeWithErrorsInCustomParameters()#org/mockito/Matchers/any()
io/corbel/iam/service/DefaultScopeServiceTest/testScopeWithErrorsInCustomParameters()#org/mockito/Matchers/eq(T)
io/corbel/iam/service/DefaultScopeServiceTest/testScopeWithErrorsInCustomParameters()#org/mockito/Mockito/when(T)
io/corbel/iam/service/DefaultScopeServiceTest/testScopeWithErrorsInCustomParameters()#io/corbel/iam/repository/ScopeRepository/findOne(java.lang.String)
io/corbel/iam/service/DefaultScopeServiceTest/testScopeWithErrorsInCustomParameters()#org/mockito/Matchers/anyMap()
io/corbel/iam/service/DefaultScopeServiceTest/testScopeWithErrorsInCustomParameters()#org/fest/assertions/api/Assertions/assertThat(T)
io/corbel/iam/service/DefaultScopeServiceTest/testScopeWithErrorsInCustomParameters()#io/corbel/iam/model/Scope/Scope(java.lang.String,java.lang.String,java.lang.String,java.util.Set,java.util.Set,com.google.gson.JsonObject)
io/corbel/iam/service/DefaultScopeServiceTest/testScopeWithErrorsInCustomParameters()#java/util/HashSet/HashSet(java.util.Collection)
io/corbel/iam/service/DefaultScopeServiceTest/testScopeWithErrorsInCustomParameters()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/iam/service/DefaultScopeServiceTest/testScopeWithErrorsInCustomParameters()#io/corbel/iam/model/Scope/getParameters()
io/corbel/iam/service/DefaultScopeServiceTest/array(java.util.Set)#java/util/Set/toArray(T[])
io/corbel/iam/service/DefaultScopeServiceTest/array(java.util.Set)#java/util/Set/size()
io/corbel/iam/service/DefaultScopeServiceTest/testDeleteScope()#io/corbel/iam/service/DefaultScopeService/delete(java.lang.String)
io/corbel/iam/service/DefaultScopeServiceTest/testDeleteScope()#org/springframework/data/repository/CrudRepository/delete(ID)
io/corbel/iam/service/DefaultScopeServiceTest/testDeleteScope()#org/mockito/Mockito/verify(T)
io/corbel/iam/service/DefaultScopeServiceTest/testPublishAuthorizationRulesIllegalArgument()#io/corbel/iam/service/DefaultScopeService/publishAuthorizationRules(java.lang.String,long,java.util.Set)
io/corbel/iam/service/DefaultScopeServiceTest/testFillScope()#org/mockito/Mockito/verify(T)
io/corbel/iam/service/DefaultScopeServiceTest/testFillScope()#io/corbel/iam/service/DefaultScopeService/fillScope(io.corbel.iam.model.Scope,java.lang.String,java.lang.String,java.lang.String)
io/corbel/iam/service/DefaultScopeServiceTest/testFillScope()#java/util/HashMap/HashMap()
io/corbel/iam/service/DefaultScopeServiceTest/testFillScope()#io/corbel/iam/scope/ScopeFillStrategy/fillScope(io.corbel.iam.model.Scope,java.util.Map)
io/corbel/iam/service/DefaultScopeServiceTest/testFillScope()#io/corbel/iam/model/Scope/getAudience()
io/corbel/iam/service/DefaultScopeServiceTest/testFillScope()#org/mockito/Matchers/eq(T)
io/corbel/iam/service/DefaultScopeServiceTest/testFillScope()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/service/DefaultScopeServiceTest/testFillScope()#org/mockito/Matchers/same(T)
io/corbel/iam/service/DefaultScopeServiceTest/testFillScope()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/iam/service/DefaultScopeServiceTest/testFillScope()#org/mockito/Mockito/when(T)
io/corbel/iam/service/DefaultScopeServiceTest/testFillScope()#io/corbel/iam/model/Scope/getRules()
io/corbel/iam/service/DefaultScopeServiceTest/testFillScope()#java/util/Map/put(K,V)
io/corbel/iam/service/DefaultScopeServiceTest/testCreateIncorrectScope()#io/corbel/iam/service/DefaultScopeService/create(io.corbel.iam.model.Scope)
io/corbel/iam/service/DefaultScopeServiceTest/testCreateIncorrectScope()#io/corbel/iam/model/Scope/Scope(java.lang.String,java.lang.String,java.lang.String,java.util.Set,java.util.Set,com.google.gson.JsonObject)
io/corbel/iam/service/DefaultScopeServiceTest/testComposedScopesWithParam()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/service/DefaultScopeServiceTest/testComposedScopesWithParam()#org/mockito/AdditionalAnswers/returnsFirstArg()
io/corbel/iam/service/DefaultScopeServiceTest/testComposedScopesWithParam()#java/util/Collections/singletonList(T)
io/corbel/iam/service/DefaultScopeServiceTest/testComposedScopesWithParam()#org/fest/assertions/api/AbstractAssert/isNotEqualTo(A)
io/corbel/iam/service/DefaultScopeServiceTest/testComposedScopesWithParam()#org/mockito/stubbing/Stubber/when(T)
io/corbel/iam/service/DefaultScopeServiceTest/testComposedScopesWithParam()#org/mockito/Mockito/doAnswer(org.mockito.stubbing.Answer)
io/corbel/iam/service/DefaultScopeServiceTest/testComposedScopesWithParam()#java/util/Iterator/next()
io/corbel/iam/service/DefaultScopeServiceTest/testComposedScopesWithParam()#org/fest/assertions/api/Assertions/assertThat(java.lang.Iterable)
io/corbel/iam/service/DefaultScopeServiceTest/testComposedScopesWithParam()#io/corbel/iam/scope/ScopeFillStrategy/fillScope(io.corbel.iam.model.Scope,java.util.Map)
io/corbel/iam/service/DefaultScopeServiceTest/testComposedScopesWithParam()#java/util/Set/iterator()
io/corbel/iam/service/DefaultScopeServiceTest/testComposedScopesWithParam()#org/mockito/Matchers/any()
io/corbel/iam/service/DefaultScopeServiceTest/testComposedScopesWithParam()#io/corbel/iam/service/DefaultScopeService/expandScopes(java.util.Collection)
io/corbel/iam/service/DefaultScopeServiceTest/testComposedScopesWithParam()#org/mockito/Matchers/eq(T)
io/corbel/iam/service/DefaultScopeServiceTest/testComposedScopesWithParam()#org/mockito/Mockito/when(T)
io/corbel/iam/service/DefaultScopeServiceTest/testComposedScopesWithParam()#io/corbel/iam/repository/ScopeRepository/findOne(java.lang.String)
io/corbel/iam/service/DefaultScopeServiceTest/testComposedScopesWithParam()#org/fest/assertions/api/AbstractIterableAssert/contains(T[])
io/corbel/iam/service/DefaultScopeServiceTest/testComposedScopesWithParam()#java/util/Arrays/asList(T[])
io/corbel/iam/service/DefaultScopeServiceTest/testComposedScopesWithParam()#org/mockito/Matchers/anyMap()
io/corbel/iam/service/DefaultScopeServiceTest/testComposedScopesWithParam()#org/fest/assertions/api/Assertions/assertThat(T)
io/corbel/iam/service/DefaultScopeServiceTest/testComposedScopesWithParam()#io/corbel/iam/model/Scope/Scope(java.lang.String,java.lang.String,java.lang.String,java.util.Set,java.util.Set,com.google.gson.JsonObject)
io/corbel/iam/service/DefaultScopeServiceTest/testComposedScopesWithParam()#java/util/HashSet/HashSet(java.util.Collection)
io/corbel/iam/service/DefaultScopeServiceTest/testComposedScopesWithParam()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/iam/service/DefaultScopeServiceTest/testComposedScopesWithParam()#io/corbel/iam/model/Scope/getParameters()
io/corbel/iam/service/DefaultScopeServiceTest/testScopeWithNotExistCustomParameters()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/service/DefaultScopeServiceTest/testScopeWithNotExistCustomParameters()#org/mockito/AdditionalAnswers/returnsFirstArg()
io/corbel/iam/service/DefaultScopeServiceTest/testScopeWithNotExistCustomParameters()#java/util/Collections/singletonList(T)
io/corbel/iam/service/DefaultScopeServiceTest/testScopeWithNotExistCustomParameters()#org/mockito/stubbing/Stubber/when(T)
io/corbel/iam/service/DefaultScopeServiceTest/testScopeWithNotExistCustomParameters()#org/mockito/Mockito/doAnswer(org.mockito.stubbing.Answer)
io/corbel/iam/service/DefaultScopeServiceTest/testScopeWithNotExistCustomParameters()#io/corbel/iam/service/DefaultScopeService/getScopes(java.util.Collection)
io/corbel/iam/service/DefaultScopeServiceTest/testScopeWithNotExistCustomParameters()#java/util/Iterator/next()
io/corbel/iam/service/DefaultScopeServiceTest/testScopeWithNotExistCustomParameters()#io/corbel/iam/scope/ScopeFillStrategy/fillScope(io.corbel.iam.model.Scope,java.util.Map)
io/corbel/iam/service/DefaultScopeServiceTest/testScopeWithNotExistCustomParameters()#java/util/Set/iterator()
io/corbel/iam/service/DefaultScopeServiceTest/testScopeWithNotExistCustomParameters()#org/mockito/Matchers/any()
io/corbel/iam/service/DefaultScopeServiceTest/testScopeWithNotExistCustomParameters()#org/mockito/Matchers/eq(T)
io/corbel/iam/service/DefaultScopeServiceTest/testScopeWithNotExistCustomParameters()#org/mockito/Mockito/when(T)
io/corbel/iam/service/DefaultScopeServiceTest/testScopeWithNotExistCustomParameters()#io/corbel/iam/repository/ScopeRepository/findOne(java.lang.String)
io/corbel/iam/service/DefaultScopeServiceTest/testScopeWithNotExistCustomParameters()#org/mockito/Matchers/anyMap()
io/corbel/iam/service/DefaultScopeServiceTest/testScopeWithNotExistCustomParameters()#org/fest/assertions/api/Assertions/assertThat(T)
io/corbel/iam/service/DefaultScopeServiceTest/testScopeWithNotExistCustomParameters()#io/corbel/iam/model/Scope/Scope(java.lang.String,java.lang.String,java.lang.String,java.util.Set,java.util.Set,com.google.gson.JsonObject)
io/corbel/iam/service/DefaultScopeServiceTest/testScopeWithNotExistCustomParameters()#java/util/HashSet/HashSet(java.util.Collection)
io/corbel/iam/service/DefaultScopeServiceTest/testScopeWithNotExistCustomParameters()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/iam/service/DefaultScopeServiceTest/testScopeWithNotExistCustomParameters()#io/corbel/iam/model/Scope/getParameters()
io/corbel/iam/service/DefaultScopeServiceTest/testScopeWithoutCustomParametersDefined()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/service/DefaultScopeServiceTest/testScopeWithoutCustomParametersDefined()#org/mockito/AdditionalAnswers/returnsFirstArg()
io/corbel/iam/service/DefaultScopeServiceTest/testScopeWithoutCustomParametersDefined()#java/util/Collections/singletonList(T)
io/corbel/iam/service/DefaultScopeServiceTest/testScopeWithoutCustomParametersDefined()#org/mockito/stubbing/Stubber/when(T)
io/corbel/iam/service/DefaultScopeServiceTest/testScopeWithoutCustomParametersDefined()#org/mockito/Mockito/doAnswer(org.mockito.stubbing.Answer)
io/corbel/iam/service/DefaultScopeServiceTest/testScopeWithoutCustomParametersDefined()#io/corbel/iam/service/DefaultScopeService/getScopes(java.util.Collection)
io/corbel/iam/service/DefaultScopeServiceTest/testScopeWithoutCustomParametersDefined()#java/util/Iterator/next()
io/corbel/iam/service/DefaultScopeServiceTest/testScopeWithoutCustomParametersDefined()#io/corbel/iam/scope/ScopeFillStrategy/fillScope(io.corbel.iam.model.Scope,java.util.Map)
io/corbel/iam/service/DefaultScopeServiceTest/testScopeWithoutCustomParametersDefined()#java/util/Set/iterator()
io/corbel/iam/service/DefaultScopeServiceTest/testScopeWithoutCustomParametersDefined()#org/mockito/Matchers/any()
io/corbel/iam/service/DefaultScopeServiceTest/testScopeWithoutCustomParametersDefined()#org/mockito/Matchers/eq(T)
io/corbel/iam/service/DefaultScopeServiceTest/testScopeWithoutCustomParametersDefined()#org/mockito/Mockito/when(T)
io/corbel/iam/service/DefaultScopeServiceTest/testScopeWithoutCustomParametersDefined()#io/corbel/iam/repository/ScopeRepository/findOne(java.lang.String)
io/corbel/iam/service/DefaultScopeServiceTest/testScopeWithoutCustomParametersDefined()#org/mockito/Matchers/anyMap()
io/corbel/iam/service/DefaultScopeServiceTest/testScopeWithoutCustomParametersDefined()#org/fest/assertions/api/Assertions/assertThat(T)
io/corbel/iam/service/DefaultScopeServiceTest/testScopeWithoutCustomParametersDefined()#io/corbel/iam/model/Scope/Scope(java.lang.String,java.lang.String,java.lang.String,java.util.Set,java.util.Set,com.google.gson.JsonObject)
io/corbel/iam/service/DefaultScopeServiceTest/testScopeWithoutCustomParametersDefined()#java/util/HashSet/HashSet(java.util.Collection)
io/corbel/iam/service/DefaultScopeServiceTest/testScopeWithoutCustomParametersDefined()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/iam/service/DefaultScopeServiceTest/testScopeWithoutCustomParametersDefined()#io/corbel/iam/model/Scope/getParameters()
io/corbel/iam/service/DefaultScopeServiceTest/testGetScope()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/service/DefaultScopeServiceTest/testGetScope()#org/fest/assertions/api/AbstractAssert/isSameAs(A)
io/corbel/iam/service/DefaultScopeServiceTest/testGetScope()#io/corbel/iam/service/DefaultScopeService/getScope(java.lang.String)
io/corbel/iam/service/DefaultScopeServiceTest/testGetScope()#org/fest/assertions/api/Assertions/assertThat(T)
io/corbel/iam/service/DefaultScopeServiceTest/testGetScope()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/iam/service/DefaultScopeServiceTest/testGetScope()#org/mockito/Mockito/when(T)
io/corbel/iam/service/DefaultScopeServiceTest/testGetScope()#io/corbel/iam/repository/ScopeRepository/findOne(java.lang.String)
io/corbel/evci/ioc/EvciIoc/getObjectMapper()#com/fasterxml/jackson/databind/ObjectMapper/registerModule(com.fasterxml.jackson.databind.Module)
io/corbel/evci/ioc/EvciIoc/getObjectMapper()#com/fasterxml/jackson/datatype/jsr310/JSR310Module/JSR310Module()
io/corbel/evci/ioc/EvciIoc/getObjectMapper()#com/fasterxml/jackson/databind/ObjectMapper/ObjectMapper()
io/corbel/evci/ioc/EvciIoc/getObjectMapper()#com/fasterxml/jackson/databind/ObjectMapper/configure(com.fasterxml.jackson.databind.DeserializationFeature,boolean)
io/corbel/evci/ioc/EvciIoc/eworkerRegistry(io.corbel.lib.rabbitmq.config.AmqpConfigurer,io.corbel.evci.converter.DomainObjectJsonMessageConverterFactory)#io/corbel/evci/ioc/EvciIoc/routingPatternFunction()
io/corbel/evci/ioc/EvciIoc/eworkerRegistry(io.corbel.lib.rabbitmq.config.AmqpConfigurer,io.corbel.evci.converter.DomainObjectJsonMessageConverterFactory)#io/corbel/evci/ioc/EvciIoc/getBackoffOptions()
io/corbel/evci/ioc/EvciIoc/eworkerRegistry(io.corbel.lib.rabbitmq.config.AmqpConfigurer,io.corbel.evci.converter.DomainObjectJsonMessageConverterFactory)#io/corbel/eworker/internal/AmqpEworkerRegistry/AmqpEworkerRegistry(io.corbel.evci.converter.DomainObjectJsonMessageConverterFactory,io.corbel.lib.rabbitmq.config.AmqpConfigurer,io.corbel.lib.rabbitmq.config.BackoffOptions,int,java.util.function.UnaryOperator)
io/corbel/evci/ioc/EvciIoc/eworkerRegistry(io.corbel.lib.rabbitmq.config.AmqpConfigurer,io.corbel.evci.converter.DomainObjectJsonMessageConverterFactory)#org/springframework/core/env/PropertyResolver/getProperty(java.lang.String,java.lang.Class)
io/corbel/evci/ioc/EvciIoc/amqpTemplate()#io/corbel/lib/rabbitmq/ioc/AbstractRabbitMQConfiguration/amqpTemplate()
io/corbel/evci/ioc/EvciIoc/eventResource()#io/corbel/evci/ioc/EvciIoc/getObjectMapper()
io/corbel/evci/ioc/EvciIoc/eventResource()#io/corbel/evci/ioc/EvciIoc/eventService()
io/corbel/evci/ioc/EvciIoc/eventResource()#io/corbel/evci/api/EventResource/EventResource(io.corbel.evci.service.EventsService,com.fasterxml.jackson.databind.ObjectMapper)
io/corbel/evci/ioc/EvciIoc/getBackoffOptions()#io/corbel/lib/rabbitmq/config/BackoffOptions/BackoffOptions()
io/corbel/evci/ioc/EvciIoc/getBackoffOptions()#io/corbel/lib/rabbitmq/config/BackoffOptions/setMultiplier(double)
io/corbel/evci/ioc/EvciIoc/getBackoffOptions()#org/springframework/core/env/PropertyResolver/getProperty(java.lang.String,java.lang.Class)
io/corbel/evci/ioc/EvciIoc/getBackoffOptions()#io/corbel/lib/rabbitmq/config/BackoffOptions/setInitialInterval(long)
io/corbel/evci/ioc/EvciIoc/getBackoffOptions()#io/corbel/lib/rabbitmq/config/BackoffOptions/setMaxInterval(long)
io/corbel/evci/ioc/EvciIoc/getMessageConverter()#org/springframework/amqp/support/converter/Jackson2JsonMessageConverter/Jackson2JsonMessageConverter()
io/corbel/evci/ioc/EvciIoc/eworkerInfoResource(io.corbel.evci.eworker.EworkerArtifactIdRegistry)#io/corbel/evci/api/EworkerInfoResource/EworkerInfoResource(io.corbel.evci.eworker.EworkerArtifactIdRegistry)
io/corbel/evci/ioc/EvciIoc/eventService()#io/corbel/evci/service/DefaultEventService/DefaultEventService(org.springframework.amqp.core.AmqpTemplate,java.util.function.UnaryOperator)
io/corbel/evci/ioc/EvciIoc/eventService()#io/corbel/evci/ioc/EvciIoc/routingPatternFunction()
io/corbel/evci/ioc/EvciIoc/eventService()#io/corbel/evci/ioc/EvciIoc/amqpTemplate()
io/corbel/evci/ioc/EvciIoc/getEvciEventHandler()#io/corbel/evci/ioc/EvciIoc/getObjectMapper()
io/corbel/evci/ioc/EvciIoc/getEvciEventHandler()#io/corbel/evci/ioc/EvciIoc/eventService()
io/corbel/evci/ioc/EvciIoc/getEvciEventHandler()#io/corbel/evci/eventbus/EvciEventHandler/EvciEventHandler(io.corbel.evci.service.EventsService,com.fasterxml.jackson.databind.ObjectMapper)
io/corbel/evci/ioc/EvciIoc/evciClient()#io/corbel/evci/ioc/EvciIoc/getObjectMapper()
io/corbel/evci/ioc/EvciIoc/evciClient()#io/corbel/evci/ioc/EvciIoc/eventService()
io/corbel/evci/ioc/EvciIoc/evciClient()#io/corbel/evci/client/DefaultEvciClient/DefaultEvciClient(io.corbel.evci.service.EventsService,com.fasterxml.jackson.databind.ObjectMapper)
io/corbel/evci/ioc/EvciIoc/eworkerArtifactIdRegistry()#io/corbel/eworker/internal/InMemoryArtifactIdRegistry/InMemoryArtifactIdRegistry()
io/corbel/evci/ioc/EvciIoc/domainObjectJsonMessageConverterFactory(com.fasterxml.jackson.databind.ObjectMapper)#io/corbel/evci/converter/DomainObjectJsonMessageConverterFactory/DomainObjectJsonMessageConverterFactory(com.fasterxml.jackson.databind.ObjectMapper)
io/corbel/resources/api/error/IllegalArgumentHandler/toResponse(java.lang.IllegalArgumentException)#javax/ws/rs/core/Response/ResponseBuilder/build()
io/corbel/resources/api/error/IllegalArgumentHandler/toResponse(java.lang.IllegalArgumentException)#java/lang/Throwable/getMessage()
io/corbel/resources/api/error/IllegalArgumentHandler/toResponse(java.lang.IllegalArgumentException)#javax/ws/rs/core/Response/ResponseBuilder/entity(java.lang.Object)
io/corbel/resources/api/error/IllegalArgumentHandler/toResponse(java.lang.IllegalArgumentException)#io/corbel/lib/ws/model/Error/Error(java.lang.String,java.lang.String)
io/corbel/resources/api/error/IllegalArgumentHandler/toResponse(java.lang.IllegalArgumentException)#javax/ws/rs/core/Response/status(javax.ws.rs.core.Response.Status)
io/corbel/iam/service/DefaultClientService/delete(java.lang.String,java.lang.String)#io/corbel/iam/repository/ClientRepositoryCustom/delete(java.lang.String,java.lang.String)
io/corbel/iam/service/DefaultClientService/update(io.corbel.iam.model.Client)#io/corbel/lib/mongo/repository/PartialUpdateRepository/patch(E,java.lang.String[])
io/corbel/iam/service/DefaultClientService/findClientsByDomain(java.lang.String,io.corbel.lib.queries.request.ResourceQuery,io.corbel.lib.queries.request.Pagination,io.corbel.lib.queries.request.Sort)#io/corbel/iam/service/DefaultClientService/addDomainToQuery(java.lang.String,io.corbel.lib.queries.request.ResourceQuery)
io/corbel/iam/service/DefaultClientService/findClientsByDomain(java.lang.String,io.corbel.lib.queries.request.ResourceQuery,io.corbel.lib.queries.request.Pagination,io.corbel.lib.queries.request.Sort)#io/corbel/lib/queries/mongo/repository/GenericFindRepository/find(io.corbel.lib.queries.request.ResourceQuery,io.corbel.lib.queries.request.Pagination,io.corbel.lib.queries.request.Sort)
io/corbel/iam/service/DefaultClientService/generateRandomKey()#java/lang/StringBuilder/append(java.lang.String)
io/corbel/iam/service/DefaultClientService/generateRandomKey()#java/lang/Integer/toString(int,int)
io/corbel/iam/service/DefaultClientService/generateRandomKey()#java/security/SecureRandom/SecureRandom()
io/corbel/iam/service/DefaultClientService/generateRandomKey()#java/lang/StringBuilder/StringBuilder()
io/corbel/iam/service/DefaultClientService/generateRandomKey()#java/security/SecureRandom/nextBytes(byte[])
io/corbel/iam/service/DefaultClientService/generateRandomKey()#java/lang/String/substring(int)
io/corbel/iam/service/DefaultClientService/generateRandomKey()#java/lang/StringBuilder/toString()
io/corbel/iam/service/DefaultClientService/addDomainToQuery(java.lang.String,io.corbel.lib.queries.request.ResourceQuery)#io/corbel/lib/queries/builder/ResourceQueryBuilder/add(java.lang.String,java.lang.String)
io/corbel/iam/service/DefaultClientService/addDomainToQuery(java.lang.String,io.corbel.lib.queries.request.ResourceQuery)#io/corbel/lib/queries/builder/ResourceQueryBuilder/build()
io/corbel/iam/service/DefaultClientService/addDomainToQuery(java.lang.String,io.corbel.lib.queries.request.ResourceQuery)#io/corbel/lib/queries/builder/ResourceQueryBuilder/ResourceQueryBuilder(io.corbel.lib.queries.request.ResourceQuery)
io/corbel/iam/service/DefaultClientService/getClientsAggregation(java.lang.String,io.corbel.lib.queries.request.ResourceQuery,io.corbel.lib.queries.request.Aggregation)#java/lang/Enum/equals(java.lang.Object)
io/corbel/iam/service/DefaultClientService/getClientsAggregation(java.lang.String,io.corbel.lib.queries.request.ResourceQuery,io.corbel.lib.queries.request.Aggregation)#io/corbel/lib/queries/request/AggregationResultsFactory/countResult(long)
io/corbel/iam/service/DefaultClientService/getClientsAggregation(java.lang.String,io.corbel.lib.queries.request.ResourceQuery,io.corbel.lib.queries.request.Aggregation)#io/corbel/lib/queries/request/Aggregation/getOperator()
io/corbel/iam/service/DefaultClientService/getClientsAggregation(java.lang.String,io.corbel.lib.queries.request.ResourceQuery,io.corbel.lib.queries.request.Aggregation)#io/corbel/iam/service/DefaultClientService/addDomainToQuery(java.lang.String,io.corbel.lib.queries.request.ResourceQuery)
io/corbel/iam/service/DefaultClientService/getClientsAggregation(java.lang.String,io.corbel.lib.queries.request.ResourceQuery,io.corbel.lib.queries.request.Aggregation)#io/corbel/lib/queries/mongo/repository/GenericFindRepository/count(io.corbel.lib.queries.request.ResourceQuery)
io/corbel/iam/service/DefaultClientService/getClientsAggregation(java.lang.String,io.corbel.lib.queries.request.ResourceQuery,io.corbel.lib.queries.request.Aggregation)#io/corbel/iam/exception/InvalidAggregationException/InvalidAggregationException()
io/corbel/iam/service/DefaultClientService/find(java.lang.String)#org/springframework/data/repository/CrudRepository/findOne(ID)
io/corbel/iam/service/DefaultClientService/find(java.lang.String)#java/util/Optional/ofNullable(T)
io/corbel/iam/service/DefaultClientService/createClient(io.corbel.iam.model.Client)#org/springframework/data/mongodb/repository/MongoRepository/insert(S)
io/corbel/iam/service/DefaultClientService/createClient(io.corbel.iam.model.Client)#io/corbel/iam/model/Client/getKey()
io/corbel/iam/service/DefaultClientService/createClient(io.corbel.iam.model.Client)#io/corbel/iam/model/Entity/setId(java.lang.String)
io/corbel/iam/service/DefaultClientService/createClient(io.corbel.iam.model.Client)#io/corbel/iam/service/DefaultClientService/generateRandomKey()
io/corbel/iam/service/DefaultClientService/createClient(io.corbel.iam.model.Client)#io/corbel/iam/exception/ClientAlreadyExistsException/ClientAlreadyExistsException()
io/corbel/iam/service/DefaultClientService/createClient(io.corbel.iam.model.Client)#io/corbel/iam/model/Client/setKey(java.lang.String)
io/corbel/iam/auth/oauthserver/api/impl/UserTemplate/getUserProfile()#org/springframework/web/client/RestTemplate/getForObject(java.lang.String,java.lang.Class,java.lang.Object[])
io/corbel/iam/service/DefaultUpgradeTokenServiceTest/setUp()#java/lang/Object/toString()
io/corbel/iam/service/DefaultUpgradeTokenServiceTest/setUp()#io/corbel/lib/token/TokenInfo/getDomainId()
io/corbel/iam/service/DefaultUpgradeTokenServiceTest/setUp()#org/mockito/Mockito/when(T)
io/corbel/iam/service/DefaultUpgradeTokenServiceTest/setUp()#io/corbel/iam/service/DefaultUpgradeTokenService/DefaultUpgradeTokenService(net.oauth.jsontoken.JsonTokenParser,io.corbel.iam.service.ScopeService,io.corbel.iam.repository.UserTokenRepository)
io/corbel/iam/service/DefaultUpgradeTokenServiceTest/setUp()#io/corbel/lib/token/reader/TokenReader/getToken()
io/corbel/iam/service/DefaultUpgradeTokenServiceTest/setUp()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/service/DefaultUpgradeTokenServiceTest/setUp()#io/corbel/lib/token/reader/TokenReader/getInfo()
io/corbel/iam/service/DefaultUpgradeTokenServiceTest/setUp()#io/corbel/lib/token/TokenInfo/getUserId()
io/corbel/iam/service/DefaultUpgradeTokenServiceTest/setUp()#io/corbel/lib/token/TokenInfo/getClientId()
io/corbel/iam/service/DefaultUpgradeTokenServiceTest/upgradeTokenTest()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/service/DefaultUpgradeTokenServiceTest/upgradeTokenTest()#io/corbel/iam/service/ScopeService/fillScopes(java.util.Set,java.lang.String,java.lang.String,java.lang.String)
io/corbel/iam/service/DefaultUpgradeTokenServiceTest/upgradeTokenTest()#io/corbel/iam/service/ScopeService/addAuthorizationRules(java.lang.String,java.util.Set)
io/corbel/iam/service/DefaultUpgradeTokenServiceTest/upgradeTokenTest()#org/mockito/Mockito/verify(T)
io/corbel/iam/service/DefaultUpgradeTokenServiceTest/upgradeTokenTest()#io/corbel/iam/model/UserToken/setScopes(java.util.Set)
io/corbel/iam/service/DefaultUpgradeTokenServiceTest/upgradeTokenTest()#io/corbel/iam/model/UserToken/UserToken()
io/corbel/iam/service/DefaultUpgradeTokenServiceTest/upgradeTokenTest()#io/corbel/iam/service/ScopeService/expandScopes(java.util.Collection)
io/corbel/iam/service/DefaultUpgradeTokenServiceTest/upgradeTokenTest()#java/util/Arrays/asList(T[])
io/corbel/iam/service/DefaultUpgradeTokenServiceTest/upgradeTokenTest()#io/corbel/iam/service/UpgradeTokenService/getScopesFromTokenToUpgrade(java.lang.String)
io/corbel/iam/service/DefaultUpgradeTokenServiceTest/upgradeTokenTest()#io/corbel/iam/service/UpgradeTokenService/upgradeToken(java.lang.String,io.corbel.lib.token.reader.TokenReader,java.util.Set)
io/corbel/iam/service/DefaultUpgradeTokenServiceTest/upgradeTokenTest()#com/google/gson/JsonObject/JsonObject()
io/corbel/iam/service/DefaultUpgradeTokenServiceTest/upgradeTokenTest()#java/util/HashSet/HashSet()
io/corbel/iam/service/DefaultUpgradeTokenServiceTest/upgradeTokenTest()#java/util/HashSet/HashSet(java.util.Collection)
io/corbel/iam/service/DefaultUpgradeTokenServiceTest/upgradeTokenTest()#io/corbel/iam/repository/UserTokenRepository/findByToken(java.lang.String)
io/corbel/iam/service/DefaultUpgradeTokenServiceTest/upgradeTokenTest()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/iam/service/DefaultUpgradeTokenServiceTest/upgradeTokenTest()#org/mockito/Mockito/when(T)
io/corbel/iam/service/DefaultUpgradeTokenServiceTest/upgradeTokenTest()#com/google/gson/JsonPrimitive/JsonPrimitive(java.lang.String)
io/corbel/iam/service/DefaultUpgradeTokenServiceTest/upgradeTokenTest()#net/oauth/jsontoken/JsonToken/getPayloadAsJsonObject()
io/corbel/iam/service/DefaultUpgradeTokenServiceTest/upgradeTokenTest()#net/oauth/jsontoken/JsonTokenParser/verifyAndDeserialize(java.lang.String)
io/corbel/iam/service/DefaultUpgradeTokenServiceTest/upgradeTokenTest()#com/google/gson/JsonObject/add(java.lang.String,com.google.gson.JsonElement)
io/corbel/iam/service/DefaultUpgradeTokenServiceTest/upgradeTokenEmptyScopeTest()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/service/DefaultUpgradeTokenServiceTest/upgradeTokenEmptyScopeTest()#io/corbel/iam/service/ScopeService/fillScopes(java.util.Set,java.lang.String,java.lang.String,java.lang.String)
io/corbel/iam/service/DefaultUpgradeTokenServiceTest/upgradeTokenEmptyScopeTest()#io/corbel/iam/service/ScopeService/addAuthorizationRules(java.lang.String,java.util.Set)
io/corbel/iam/service/DefaultUpgradeTokenServiceTest/upgradeTokenEmptyScopeTest()#org/mockito/Mockito/verify(T)
io/corbel/iam/service/DefaultUpgradeTokenServiceTest/upgradeTokenEmptyScopeTest()#io/corbel/iam/model/UserToken/setScopes(java.util.Set)
io/corbel/iam/service/DefaultUpgradeTokenServiceTest/upgradeTokenEmptyScopeTest()#io/corbel/iam/service/UpgradeTokenService/getScopesFromTokenToUpgrade(java.lang.String)
io/corbel/iam/service/DefaultUpgradeTokenServiceTest/upgradeTokenEmptyScopeTest()#io/corbel/iam/service/UpgradeTokenService/upgradeToken(java.lang.String,io.corbel.lib.token.reader.TokenReader,java.util.Set)
io/corbel/iam/service/DefaultUpgradeTokenServiceTest/upgradeTokenEmptyScopeTest()#com/google/gson/JsonObject/JsonObject()
io/corbel/iam/service/DefaultUpgradeTokenServiceTest/upgradeTokenEmptyScopeTest()#org/mockito/Matchers/any()
io/corbel/iam/service/DefaultUpgradeTokenServiceTest/upgradeTokenEmptyScopeTest()#java/util/HashSet/HashSet()
io/corbel/iam/service/DefaultUpgradeTokenServiceTest/upgradeTokenEmptyScopeTest()#io/corbel/iam/repository/UserTokenRepository/findByToken(java.lang.String)
io/corbel/iam/service/DefaultUpgradeTokenServiceTest/upgradeTokenEmptyScopeTest()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/iam/service/DefaultUpgradeTokenServiceTest/upgradeTokenEmptyScopeTest()#org/mockito/Mockito/when(T)
io/corbel/iam/service/DefaultUpgradeTokenServiceTest/upgradeTokenEmptyScopeTest()#com/google/common/collect/Sets/newHashSet()
io/corbel/iam/service/DefaultUpgradeTokenServiceTest/upgradeTokenEmptyScopeTest()#io/corbel/iam/model/UserToken/UserToken()
io/corbel/iam/service/DefaultUpgradeTokenServiceTest/upgradeTokenEmptyScopeTest()#com/google/gson/JsonPrimitive/JsonPrimitive(java.lang.String)
io/corbel/iam/service/DefaultUpgradeTokenServiceTest/upgradeTokenEmptyScopeTest()#net/oauth/jsontoken/JsonToken/getPayloadAsJsonObject()
io/corbel/iam/service/DefaultUpgradeTokenServiceTest/upgradeTokenEmptyScopeTest()#net/oauth/jsontoken/JsonTokenParser/verifyAndDeserialize(java.lang.String)
io/corbel/iam/service/DefaultUpgradeTokenServiceTest/upgradeTokenEmptyScopeTest()#com/google/gson/JsonObject/add(java.lang.String,com.google.gson.JsonElement)
io/corbel/iam/service/DefaultUpgradeTokenServiceTest/upgradeTokenNonexistentScopeTest()#org/mockito/Matchers/anySet()
io/corbel/iam/service/DefaultUpgradeTokenServiceTest/upgradeTokenNonexistentScopeTest()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/service/DefaultUpgradeTokenServiceTest/upgradeTokenNonexistentScopeTest()#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
io/corbel/iam/service/DefaultUpgradeTokenServiceTest/upgradeTokenNonexistentScopeTest()#io/corbel/iam/service/ScopeService/addAuthorizationRules(java.lang.String,java.util.Set)
io/corbel/iam/service/DefaultUpgradeTokenServiceTest/upgradeTokenNonexistentScopeTest()#org/mockito/stubbing/Stubber/when(T)
io/corbel/iam/service/DefaultUpgradeTokenServiceTest/upgradeTokenNonexistentScopeTest()#io/corbel/iam/service/UpgradeTokenService/getScopesFromTokenToUpgrade(java.lang.String)
io/corbel/iam/service/DefaultUpgradeTokenServiceTest/upgradeTokenNonexistentScopeTest()#io/corbel/iam/service/UpgradeTokenService/upgradeToken(java.lang.String,io.corbel.lib.token.reader.TokenReader,java.util.Set)
io/corbel/iam/service/DefaultUpgradeTokenServiceTest/upgradeTokenNonexistentScopeTest()#com/google/gson/JsonObject/JsonObject()
io/corbel/iam/service/DefaultUpgradeTokenServiceTest/upgradeTokenNonexistentScopeTest()#org/mockito/Mockito/doThrow(java.lang.Throwable)
io/corbel/iam/service/DefaultUpgradeTokenServiceTest/upgradeTokenNonexistentScopeTest()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/iam/service/DefaultUpgradeTokenServiceTest/upgradeTokenNonexistentScopeTest()#org/mockito/Mockito/when(T)
io/corbel/iam/service/DefaultUpgradeTokenServiceTest/upgradeTokenNonexistentScopeTest()#org/mockito/Matchers/anyString()
io/corbel/iam/service/DefaultUpgradeTokenServiceTest/upgradeTokenNonexistentScopeTest()#com/google/gson/JsonPrimitive/JsonPrimitive(java.lang.String)
io/corbel/iam/service/DefaultUpgradeTokenServiceTest/upgradeTokenNonexistentScopeTest()#net/oauth/jsontoken/JsonToken/getPayloadAsJsonObject()
io/corbel/iam/service/DefaultUpgradeTokenServiceTest/upgradeTokenNonexistentScopeTest()#net/oauth/jsontoken/JsonTokenParser/verifyAndDeserialize(java.lang.String)
io/corbel/iam/service/DefaultUpgradeTokenServiceTest/upgradeTokenNonexistentScopeTest()#com/google/gson/JsonObject/add(java.lang.String,com.google.gson.JsonElement)
io/corbel/iam/service/DefaultUserService/signOut(java.lang.String,java.util.Optional)#java/util/Optional/get()
io/corbel/iam/service/DefaultUserService/signOut(java.lang.String,java.util.Optional)#io/corbel/iam/service/DefaultUserService/invalidateToken(java.lang.String)
io/corbel/iam/service/DefaultUserService/signOut(java.lang.String,java.util.Optional)#io/corbel/iam/service/DefaultUserService/invalidateAllTokens(java.lang.String)
io/corbel/iam/service/DefaultUserService/signOut(java.lang.String,java.util.Optional)#java/util/Optional/isPresent()
io/corbel/iam/service/DefaultUserService/signOut(java.lang.String,java.util.Optional)#io/corbel/iam/service/RefreshTokenService/invalidateRefreshToken(java.lang.String)
io/corbel/iam/service/DefaultUserService/signOut(java.lang.String,java.util.Optional)#io/corbel/iam/service/RefreshTokenService/invalidateRefreshToken(java.lang.String,java.util.Optional)
io/corbel/iam/service/DefaultUserService/invalidateToken(java.lang.String)#org/springframework/data/repository/CrudRepository/delete(ID)
io/corbel/iam/service/DefaultUserService/invalidateToken(java.lang.String)#io/corbel/lib/ws/auth/repository/AuthorizationRulesRepository/deleteByToken(java.lang.String)
io/corbel/iam/service/DefaultUserService/create(java.lang.String,io.corbel.iam.model.User)#java/lang/Throwable/getMessage()
io/corbel/iam/service/DefaultUserService/create(java.lang.String,io.corbel.iam.model.User)#java/lang/Throwable/getCause()
io/corbel/iam/service/DefaultUserService/create(java.lang.String,io.corbel.iam.model.User)#com/google/gson/JsonElement/getAsJsonObject()
io/corbel/iam/service/DefaultUserService/create(java.lang.String,io.corbel.iam.model.User)#io/corbel/iam/repository/CreateUserException/CreateUserException(java.lang.String)
io/corbel/iam/service/DefaultUserService/create(java.lang.String,io.corbel.iam.model.User)#java/lang/String/contains(java.lang.CharSequence)
io/corbel/iam/service/DefaultUserService/create(java.lang.String,io.corbel.iam.model.User)#org/springframework/data/repository/CrudRepository/save(S)
io/corbel/iam/service/DefaultUserService/create(java.lang.String,io.corbel.iam.model.User)#io/corbel/iam/service/EventsService/sendUserCreatedEvent(io.corbel.iam.model.User)
io/corbel/iam/service/DefaultUserService/create(java.lang.String,io.corbel.iam.model.User)#com/google/gson/JsonElement/getAsString()
io/corbel/iam/service/DefaultUserService/create(java.lang.String,io.corbel.iam.model.User)#com/google/gson/JsonObject/get(java.lang.String)
io/corbel/iam/service/DefaultUserService/create(java.lang.String,io.corbel.iam.model.User)#io/corbel/iam/service/MailService/sendMailValidation(java.lang.String,io.corbel.iam.model.User)
io/corbel/iam/service/DefaultUserService/create(java.lang.String,io.corbel.iam.model.User)#com/google/gson/Gson/fromJson(java.lang.String,java.lang.Class)
io/corbel/iam/service/DefaultUserService/findUserDomain(java.lang.String)#io/corbel/iam/repository/UserRepositoryCustom/findUserDomain(java.lang.String)
io/corbel/iam/service/DefaultUserService/findUserProfilesByDomain(io.corbel.iam.model.Domain,io.corbel.lib.queries.request.ResourceQuery,io.corbel.lib.queries.request.Pagination,io.corbel.lib.queries.request.Sort)#io/corbel/iam/model/Domain/getUserProfileFields()
io/corbel/iam/service/DefaultUserService/findUserProfilesByDomain(io.corbel.iam.model.Domain,io.corbel.lib.queries.request.ResourceQuery,io.corbel.lib.queries.request.Pagination,io.corbel.lib.queries.request.Sort)#io/corbel/iam/service/DefaultUserService/addUserDomainToQuery(java.lang.String,io.corbel.lib.queries.request.ResourceQuery)
io/corbel/iam/service/DefaultUserService/findUserProfilesByDomain(io.corbel.iam.model.Domain,io.corbel.lib.queries.request.ResourceQuery,io.corbel.lib.queries.request.Pagination,io.corbel.lib.queries.request.Sort)#io/corbel/iam/service/DefaultUserService/getUserProfile(io.corbel.iam.model.User,java.util.Set)
io/corbel/iam/service/DefaultUserService/findUserProfilesByDomain(io.corbel.iam.model.Domain,io.corbel.lib.queries.request.ResourceQuery,io.corbel.lib.queries.request.Pagination,io.corbel.lib.queries.request.Sort)#java/util/List/add(E)
io/corbel/iam/service/DefaultUserService/findUserProfilesByDomain(io.corbel.iam.model.Domain,io.corbel.lib.queries.request.ResourceQuery,io.corbel.lib.queries.request.Pagination,io.corbel.lib.queries.request.Sort)#io/corbel/lib/queries/mongo/repository/GenericFindRepository/find(io.corbel.lib.queries.request.ResourceQuery,io.corbel.lib.queries.request.Pagination,io.corbel.lib.queries.request.Sort)
io/corbel/iam/service/DefaultUserService/findUserProfilesByDomain(io.corbel.iam.model.Domain,io.corbel.lib.queries.request.ResourceQuery,io.corbel.lib.queries.request.Pagination,io.corbel.lib.queries.request.Sort)#io/corbel/iam/model/Entity/getId()
io/corbel/iam/service/DefaultUserService/findUserProfilesByDomain(io.corbel.iam.model.Domain,io.corbel.lib.queries.request.ResourceQuery,io.corbel.lib.queries.request.Pagination,io.corbel.lib.queries.request.Sort)#java/util/ArrayList/ArrayList()
io/corbel/iam/service/DefaultUserService/confirmEmail(java.lang.String,java.lang.String)#io/corbel/iam/model/User/setEmailValidated(java.lang.Boolean)
io/corbel/iam/service/DefaultUserService/confirmEmail(java.lang.String,java.lang.String)#io/corbel/iam/repository/UserRepository/findByDomainAndEmail(java.lang.String,java.lang.String)
io/corbel/iam/service/DefaultUserService/confirmEmail(java.lang.String,java.lang.String)#org/springframework/data/repository/CrudRepository/save(S)
io/corbel/iam/service/DefaultUserService/sendValidationEmail(io.corbel.iam.model.User,java.lang.String)#io/corbel/iam/service/MailService/sendMailValidation(java.lang.String,io.corbel.iam.model.User)
io/corbel/iam/service/DefaultUserService/countUsersByDomain(java.lang.String,io.corbel.lib.queries.request.ResourceQuery)#io/corbel/iam/service/DefaultUserService/addUserDomainToQuery(java.lang.String,io.corbel.lib.queries.request.ResourceQuery)
io/corbel/iam/service/DefaultUserService/countUsersByDomain(java.lang.String,io.corbel.lib.queries.request.ResourceQuery)#io/corbel/lib/queries/mongo/repository/GenericFindRepository/count(io.corbel.lib.queries.request.ResourceQuery)
io/corbel/iam/service/DefaultUserService/getSession(java.lang.String)#io/corbel/iam/repository/UserTokenRepository/findByToken(java.lang.String)
io/corbel/iam/service/DefaultUserService/invalidateAllTokens(java.lang.String)#io/corbel/iam/repository/UserTokenRepository/findByUserId(java.lang.String)
io/corbel/iam/service/DefaultUserService/invalidateAllTokens(java.lang.String)#java/lang/Iterable/forEach(java.util.function.Consumer)
io/corbel/iam/service/DefaultUserService/update(io.corbel.iam.model.User)#io/corbel/iam/service/EventsService/sendUserModifiedEvent(io.corbel.iam.model.User)
io/corbel/iam/service/DefaultUserService/update(io.corbel.iam.model.User)#org/springframework/data/repository/CrudRepository/save(S)
io/corbel/iam/service/DefaultUserService/addUserDomainToQuery(java.lang.String,io.corbel.lib.queries.request.ResourceQuery)#io/corbel/lib/queries/builder/ResourceQueryBuilder/add(java.lang.String,java.lang.String)
io/corbel/iam/service/DefaultUserService/addUserDomainToQuery(java.lang.String,io.corbel.lib.queries.request.ResourceQuery)#io/corbel/lib/queries/builder/ResourceQueryBuilder/build()
io/corbel/iam/service/DefaultUserService/addUserDomainToQuery(java.lang.String,io.corbel.lib.queries.request.ResourceQuery)#io/corbel/lib/queries/builder/ResourceQueryBuilder/ResourceQueryBuilder(io.corbel.lib.queries.request.ResourceQuery)
io/corbel/iam/service/DefaultUserService/addUserDomainToQuery(java.lang.String,io.corbel.lib.queries.request.ResourceQuery)#io/corbel/lib/queries/builder/ResourceQueryBuilder/remove(java.lang.String)
io/corbel/iam/service/DefaultUserService/delete(io.corbel.iam.model.User)#io/corbel/iam/model/Entity/getId()
io/corbel/iam/service/DefaultUserService/delete(io.corbel.iam.model.User)#io/corbel/iam/service/EventsService/sendUserDeletedEvent(io.corbel.iam.model.User,java.lang.String)
io/corbel/iam/service/DefaultUserService/delete(io.corbel.iam.model.User)#io/corbel/iam/service/UserService/signOut(java.lang.String)
io/corbel/iam/service/DefaultUserService/delete(io.corbel.iam.model.User)#org/springframework/data/repository/CrudRepository/delete(T)
io/corbel/iam/service/DefaultUserService/delete(io.corbel.iam.model.User)#io/corbel/iam/model/User/getDomain()
io/corbel/iam/service/DefaultUserService/removeScopes(java.lang.String,java.lang.String[])#io/corbel/iam/repository/HasScopesRepository/removeScopes(ID,java.lang.String[])
io/corbel/iam/service/DefaultUserService/addScopes(java.lang.String,java.lang.String[])#io/corbel/iam/repository/HasScopesRepository/addScopes(ID,java.lang.String[])
io/corbel/iam/service/DefaultUserService/findUsersByDomain(java.lang.String,io.corbel.lib.queries.request.ResourceQuery,io.corbel.lib.queries.request.Pagination,io.corbel.lib.queries.request.Sort)#io/corbel/iam/service/DefaultUserService/addUserDomainToQuery(java.lang.String,io.corbel.lib.queries.request.ResourceQuery)
io/corbel/iam/service/DefaultUserService/findUsersByDomain(java.lang.String,io.corbel.lib.queries.request.ResourceQuery,io.corbel.lib.queries.request.Pagination,io.corbel.lib.queries.request.Sort)#io/corbel/lib/queries/mongo/repository/GenericFindRepository/find(io.corbel.lib.queries.request.ResourceQuery,io.corbel.lib.queries.request.Pagination,io.corbel.lib.queries.request.Sort)
io/corbel/iam/service/DefaultUserService/sendMailResetPassword(java.lang.String,java.lang.String,java.lang.String)#java/util/Optional/ofNullable(T)
io/corbel/iam/service/DefaultUserService/sendMailResetPassword(java.lang.String,java.lang.String,java.lang.String)#java/util/Optional/ifPresent(java.util.function.Consumer)
io/corbel/iam/service/DefaultUserService/sendMailResetPassword(java.lang.String,java.lang.String,java.lang.String)#io/corbel/iam/repository/UserRepository/findByDomainAndEmail(java.lang.String,java.lang.String)
io/corbel/iam/service/DefaultUserService/getUserProfile(io.corbel.iam.model.User,java.util.Set)#org/apache/commons/beanutils/PropertyUtils/getProperty(java.lang.Object,java.lang.String)
io/corbel/iam/service/DefaultUserService/getUserProfile(io.corbel.iam.model.User,java.util.Set)#io/corbel/iam/model/User/User()
io/corbel/iam/service/DefaultUserService/getUserProfile(io.corbel.iam.model.User,java.util.Set)#io/corbel/iam/exception/UserProfileConfigurationException/UserProfileConfigurationException(java.lang.String,java.lang.Exception)
io/corbel/iam/service/DefaultUserService/getUserProfile(io.corbel.iam.model.User,java.util.Set)#org/apache/commons/beanutils/PropertyUtils/setProperty(java.lang.Object,java.lang.String,java.lang.Object)
io/corbel/iam/service/DefaultUserService/getUserProfile(io.corbel.iam.model.User,java.util.Set)#io/corbel/iam/model/User/getDomain()
io/corbel/iam/service/DefaultUserService/findById(java.lang.String)#io/corbel/iam/repository/UserRepository/findById(java.lang.String)
io/corbel/iam/service/DefaultUserService/findByDomainAndUsername(java.lang.String,java.lang.String)#io/corbel/iam/repository/UserRepository/findByUsernameAndDomain(java.lang.String,java.lang.String)
io/corbel/iam/service/DefaultUserService/findByDomainAndEmail(java.lang.String,java.lang.String)#io/corbel/iam/repository/UserRepository/findByDomainAndEmail(java.lang.String,java.lang.String)
io/corbel/iam/service/DefaultUserService/existsByUsernameAndDomain(java.lang.String,java.lang.String)#io/corbel/iam/repository/UserRepositoryCustom/existsByUsernameAndDomain(java.lang.String,java.lang.String)
io/corbel/iam/service/DefaultUserService/existsByEmailAndDomain(java.lang.String,java.lang.String)#io/corbel/iam/repository/UserRepositoryCustom/existsByEmailAndDomain(java.lang.String,java.lang.String)
io/corbel/resources/rem/service/DefaultResmiService/moveRelation(io.corbel.resources.rem.model.ResourceUri,io.corbel.resources.rem.dao.RelationMoveOperation)#io/corbel/resources/rem/model/ResourceUri/isTypeWildcard()
io/corbel/resources/rem/service/DefaultResmiService/moveRelation(io.corbel.resources.rem.model.ResourceUri,io.corbel.resources.rem.dao.RelationMoveOperation)#io/corbel/resources/rem/dao/ResmiDao/moveRelation(io.corbel.resources.rem.model.ResourceUri,io.corbel.resources.rem.dao.RelationMoveOperation)
io/corbel/resources/rem/service/DefaultResmiService/moveRelation(io.corbel.resources.rem.model.ResourceUri,io.corbel.resources.rem.dao.RelationMoveOperation)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
io/corbel/resources/rem/service/DefaultResmiService/condicionalUpdateRelation(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject,java.util.List)#io/corbel/resources/rem/service/DefaultResmiService/updateDates(com.google.gson.JsonObject)
io/corbel/resources/rem/service/DefaultResmiService/condicionalUpdateRelation(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject,java.util.List)#io/corbel/resources/rem/dao/ResmiDao/conditionalUpdateRelation(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject,java.util.List)
io/corbel/resources/rem/service/DefaultResmiService/condicionalUpdateRelation(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject,java.util.List)#io/corbel/resources/rem/service/DefaultResmiService/verifyNotUnderscore(com.google.gson.JsonObject)
io/corbel/resources/rem/service/DefaultResmiService/findCollection(io.corbel.resources.rem.model.ResourceUri,java.util.Optional)#java/util/Optional/flatMap(java.util.function.Function)
io/corbel/resources/rem/service/DefaultResmiService/findCollection(io.corbel.resources.rem.model.ResourceUri,java.util.Optional)#java/util/Optional/map(java.util.function.Function)
io/corbel/resources/rem/service/DefaultResmiService/findCollection(io.corbel.resources.rem.model.ResourceUri,java.util.Optional)#java/util/Optional/empty()
io/corbel/resources/rem/service/DefaultResmiService/findCollection(io.corbel.resources.rem.model.ResourceUri,java.util.Optional)#io/corbel/resources/rem/dao/MongoResmiDao/findCollection(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,java.util.Optional,java.util.Optional,java.util.Optional)
io/corbel/resources/rem/service/DefaultResmiService/aggregate(io.corbel.resources.rem.model.ResourceUri,io.corbel.resources.rem.request.CollectionParameters)#java/util/Optional/get()
io/corbel/resources/rem/service/DefaultResmiService/aggregate(io.corbel.resources.rem.model.ResourceUri,io.corbel.resources.rem.request.CollectionParameters)#io/corbel/lib/queries/request/Combine/getExpression()
io/corbel/resources/rem/service/DefaultResmiService/aggregate(io.corbel.resources.rem.model.ResourceUri,io.corbel.resources.rem.request.CollectionParameters)#io/corbel/resources/rem/request/CollectionParameters/getPagination()
io/corbel/resources/rem/service/DefaultResmiService/aggregate(io.corbel.resources.rem.model.ResourceUri,io.corbel.resources.rem.request.CollectionParameters)#java/util/Optional/orElse(T)
io/corbel/resources/rem/service/DefaultResmiService/aggregate(io.corbel.resources.rem.model.ResourceUri,io.corbel.resources.rem.request.CollectionParameters)#io/corbel/resources/rem/dao/ResmiDao/combine(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,java.util.Optional,java.util.Optional,java.lang.String,java.lang.String)
io/corbel/resources/rem/service/DefaultResmiService/aggregate(io.corbel.resources.rem.model.ResourceUri,io.corbel.resources.rem.request.CollectionParameters)#io/corbel/resources/rem/request/CollectionParameters/getAggregation()
io/corbel/resources/rem/service/DefaultResmiService/aggregate(io.corbel.resources.rem.model.ResourceUri,io.corbel.resources.rem.request.CollectionParameters)#java/util/Optional/ofNullable(T)
io/corbel/resources/rem/service/DefaultResmiService/aggregate(io.corbel.resources.rem.model.ResourceUri,io.corbel.resources.rem.request.CollectionParameters)#io/corbel/lib/queries/request/Aggregation/getOperator()
io/corbel/resources/rem/service/DefaultResmiService/aggregate(io.corbel.resources.rem.model.ResourceUri,io.corbel.resources.rem.request.CollectionParameters)#io/corbel/resources/rem/dao/ResmiDao/min(io.corbel.resources.rem.model.ResourceUri,java.util.List,java.lang.String)
io/corbel/resources/rem/service/DefaultResmiService/aggregate(io.corbel.resources.rem.model.ResourceUri,io.corbel.resources.rem.request.CollectionParameters)#java/lang/RuntimeException/RuntimeException(java.lang.String)
io/corbel/resources/rem/service/DefaultResmiService/aggregate(io.corbel.resources.rem.model.ResourceUri,io.corbel.resources.rem.request.CollectionParameters)#io/corbel/resources/rem/dao/ResmiDao/sum(io.corbel.resources.rem.model.ResourceUri,java.util.List,java.lang.String)
io/corbel/resources/rem/service/DefaultResmiService/aggregate(io.corbel.resources.rem.model.ResourceUri,io.corbel.resources.rem.request.CollectionParameters)#io/corbel/resources/rem/dao/ResmiDao/count(io.corbel.resources.rem.model.ResourceUri,java.util.List)
io/corbel/resources/rem/service/DefaultResmiService/aggregate(io.corbel.resources.rem.model.ResourceUri,io.corbel.resources.rem.request.CollectionParameters)#io/corbel/lib/queries/request/Aggregation/operate(java.util.List)
io/corbel/resources/rem/service/DefaultResmiService/aggregate(io.corbel.resources.rem.model.ResourceUri,io.corbel.resources.rem.request.CollectionParameters)#io/corbel/resources/rem/dao/ResmiDao/max(io.corbel.resources.rem.model.ResourceUri,java.util.List,java.lang.String)
io/corbel/resources/rem/service/DefaultResmiService/aggregate(io.corbel.resources.rem.model.ResourceUri,io.corbel.resources.rem.request.CollectionParameters)#io/corbel/resources/rem/dao/ResmiDao/histogram(io.corbel.resources.rem.model.ResourceUri,java.util.List,java.util.Optional,java.util.Optional,java.lang.String)
io/corbel/resources/rem/service/DefaultResmiService/aggregate(io.corbel.resources.rem.model.ResourceUri,io.corbel.resources.rem.request.CollectionParameters)#io/corbel/resources/rem/request/CollectionParameters/getSort()
io/corbel/resources/rem/service/DefaultResmiService/aggregate(io.corbel.resources.rem.model.ResourceUri,io.corbel.resources.rem.request.CollectionParameters)#io/corbel/resources/rem/dao/ResmiDao/average(io.corbel.resources.rem.model.ResourceUri,java.util.List,java.lang.String)
io/corbel/resources/rem/service/DefaultResmiService/aggregate(io.corbel.resources.rem.model.ResourceUri,io.corbel.resources.rem.request.CollectionParameters)#io/corbel/lib/queries/request/FieldAggregation/getField()
io/corbel/resources/rem/service/DefaultResmiService/aggregate(io.corbel.resources.rem.model.ResourceUri,io.corbel.resources.rem.request.CollectionParameters)#io/corbel/resources/rem/request/CollectionParameters/getQueries()
io/corbel/resources/rem/service/DefaultResmiService/createDates(com.google.gson.JsonObject)#io/corbel/resources/rem/service/DefaultResmiService/formatDate(java.util.Date)
io/corbel/resources/rem/service/DefaultResmiService/createDates(com.google.gson.JsonObject)#java/util/Date/from(java.time.Instant)
io/corbel/resources/rem/service/DefaultResmiService/createDates(com.google.gson.JsonObject)#com/google/gson/JsonObject/addProperty(java.lang.String,java.lang.String)
io/corbel/resources/rem/service/DefaultResmiService/createDates(com.google.gson.JsonObject)#java/time/Clock/instant()
io/corbel/resources/rem/service/DefaultResmiService/createDates(com.google.gson.JsonObject)#com/google/gson/JsonObject/remove(java.lang.String)
io/corbel/resources/rem/service/DefaultResmiService/dropIndex(io.corbel.resources.rem.model.ResourceUri,java.lang.String)#io/corbel/resources/rem/dao/MongoResmiDao/dropIndex(io.corbel.resources.rem.model.ResourceUri,java.lang.String)
io/corbel/resources/rem/service/DefaultResmiService/findRelationDistinct(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,java.util.List,boolean)#java/util/Optional/flatMap(java.util.function.Function)
io/corbel/resources/rem/service/DefaultResmiService/findRelationDistinct(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,java.util.List,boolean)#io/corbel/resources/rem/dao/MongoResmiDao/findRelationWithGroup(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,java.util.Optional,java.util.Optional,java.util.Optional,java.util.List,boolean)
io/corbel/resources/rem/service/DefaultResmiService/findRelationDistinct(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,java.util.List,boolean)#java/util/Optional/map(java.util.function.Function)
io/corbel/resources/rem/service/DefaultResmiService/findRelationDistinct(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,java.util.List,boolean)#java/util/Optional/empty()
io/corbel/resources/rem/service/DefaultResmiService/saveResource(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject,java.util.Optional)#java/util/Optional/ifPresent(java.util.function.Consumer)
io/corbel/resources/rem/service/DefaultResmiService/saveResource(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject,java.util.Optional)#io/corbel/resources/rem/service/DefaultResmiService/createDates(com.google.gson.JsonObject)
io/corbel/resources/rem/service/DefaultResmiService/saveResource(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject,java.util.Optional)#io/corbel/resources/rem/dao/ResmiDao/saveResource(io.corbel.resources.rem.model.ResourceUri,java.lang.Object)
io/corbel/resources/rem/service/DefaultResmiService/saveResource(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject,java.util.Optional)#io/corbel/resources/rem/service/DefaultResmiService/verifyNotUnderscore(com.google.gson.JsonObject)
io/corbel/resources/rem/service/DefaultResmiService/verifyNotUnderscore(com.google.gson.JsonObject)#io/corbel/resources/rem/resmi/exception/StartsWithUnderscoreException/StartsWithUnderscoreException(java.lang.String)
io/corbel/resources/rem/service/DefaultResmiService/verifyNotUnderscore(com.google.gson.JsonObject)#java/util/Map/Entry/getKey()
io/corbel/resources/rem/service/DefaultResmiService/verifyNotUnderscore(com.google.gson.JsonObject)#java/util/Set/contains(java.lang.Object)
io/corbel/resources/rem/service/DefaultResmiService/verifyNotUnderscore(com.google.gson.JsonObject)#com/google/gson/JsonObject/entrySet()
io/corbel/resources/rem/service/DefaultResmiService/verifyNotUnderscore(com.google.gson.JsonObject)#java/lang/String/startsWith(java.lang.String)
io/corbel/resources/rem/service/DefaultResmiService/upsertRelation(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject)#io/corbel/resources/rem/dao/ResmiDao/upsertRelation(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject)
io/corbel/resources/rem/service/DefaultResmiService/upsertRelation(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject)#io/corbel/resources/rem/service/DefaultResmiService/createDates(com.google.gson.JsonObject)
io/corbel/resources/rem/service/DefaultResmiService/upsertRelation(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject)#com/google/gson/JsonObject/JsonObject()
io/corbel/resources/rem/service/DefaultResmiService/upsertRelation(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject)#io/corbel/resources/rem/service/DefaultResmiService/verifyNotUnderscore(com.google.gson.JsonObject)
io/corbel/resources/rem/service/DefaultResmiService/deleteCollection(io.corbel.resources.rem.model.ResourceUri,java.util.Optional)#io/corbel/resources/rem/dao/ResmiDao/deleteCollection(io.corbel.resources.rem.model.ResourceUri,java.util.Optional)
io/corbel/resources/rem/service/DefaultResmiService/generateIdWithUserId(java.lang.String)#io/corbel/resources/rem/service/DefaultResmiService/generateId()
io/corbel/resources/rem/service/DefaultResmiService/formatDate(java.util.Date)#java/lang/String/format(java.lang.String,java.lang.Object[])
io/corbel/resources/rem/service/DefaultResmiService/updateDates(com.google.gson.JsonObject)#io/corbel/resources/rem/service/DefaultResmiService/formatDate(java.util.Date)
io/corbel/resources/rem/service/DefaultResmiService/updateDates(com.google.gson.JsonObject)#java/util/Date/from(java.time.Instant)
io/corbel/resources/rem/service/DefaultResmiService/updateDates(com.google.gson.JsonObject)#com/google/gson/JsonObject/addProperty(java.lang.String,java.lang.String)
io/corbel/resources/rem/service/DefaultResmiService/updateDates(com.google.gson.JsonObject)#java/time/Clock/instant()
io/corbel/resources/rem/service/DefaultResmiService/updateDates(com.google.gson.JsonObject)#com/google/gson/JsonObject/remove(java.lang.String)
io/corbel/resources/rem/service/DefaultResmiService/ensureIndex(io.corbel.resources.rem.model.ResourceUri,org.springframework.data.mongodb.core.index.IndexDefinition)#io/corbel/resources/rem/dao/MongoResmiDao/ensureIndex(io.corbel.resources.rem.model.ResourceUri,org.springframework.data.mongodb.core.index.IndexDefinition)
io/corbel/resources/rem/service/DefaultResmiService/removeObjectId(com.google.gson.JsonObject)#com/google/gson/JsonObject/has(java.lang.String)
io/corbel/resources/rem/service/DefaultResmiService/removeObjectId(com.google.gson.JsonObject)#com/google/gson/JsonObject/remove(java.lang.String)
io/corbel/resources/rem/service/DefaultResmiService/conditionalUpdateResource(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject,java.util.List)#io/corbel/resources/rem/service/DefaultResmiService/updateDates(com.google.gson.JsonObject)
io/corbel/resources/rem/service/DefaultResmiService/conditionalUpdateResource(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject,java.util.List)#io/corbel/resources/rem/dao/ResmiDao/conditionalUpdateResource(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject,java.util.List)
io/corbel/resources/rem/service/DefaultResmiService/conditionalUpdateResource(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject,java.util.List)#io/corbel/resources/rem/service/DefaultResmiService/verifyNotUnderscore(com.google.gson.JsonObject)
io/corbel/resources/rem/service/DefaultResmiService/deleteResource(io.corbel.resources.rem.model.ResourceUri)#io/corbel/resources/rem/dao/ResmiDao/deleteResource(io.corbel.resources.rem.model.ResourceUri)
io/corbel/resources/rem/service/DefaultResmiService/ensureExpireIndex(io.corbel.resources.rem.model.ResourceUri)#io/corbel/resources/rem/dao/MongoResmiDao/ensureExpireIndex(io.corbel.resources.rem.model.ResourceUri)
io/corbel/resources/rem/service/DefaultResmiService/findRelation(io.corbel.resources.rem.model.ResourceUri,java.util.Optional)#java/util/Optional/flatMap(java.util.function.Function)
io/corbel/resources/rem/service/DefaultResmiService/findRelation(io.corbel.resources.rem.model.ResourceUri,java.util.Optional)#java/util/Optional/map(java.util.function.Function)
io/corbel/resources/rem/service/DefaultResmiService/findRelation(io.corbel.resources.rem.model.ResourceUri,java.util.Optional)#java/util/Optional/empty()
io/corbel/resources/rem/service/DefaultResmiService/findRelation(io.corbel.resources.rem.model.ResourceUri,java.util.Optional)#io/corbel/resources/rem/dao/MongoResmiDao/findRelation(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,java.util.Optional,java.util.Optional,java.util.Optional)
io/corbel/resources/rem/service/DefaultResmiService/updateResource(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject)#io/corbel/resources/rem/service/DefaultResmiService/createDates(com.google.gson.JsonObject)
io/corbel/resources/rem/service/DefaultResmiService/updateResource(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject)#io/corbel/resources/rem/dao/ResmiDao/updateResource(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject)
io/corbel/resources/rem/service/DefaultResmiService/updateResource(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject)#io/corbel/resources/rem/service/DefaultResmiService/verifyNotUnderscore(com.google.gson.JsonObject)
io/corbel/resources/rem/service/DefaultResmiService/findCollectionDistinct(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,java.util.List,boolean)#java/util/Optional/flatMap(java.util.function.Function)
io/corbel/resources/rem/service/DefaultResmiService/findCollectionDistinct(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,java.util.List,boolean)#io/corbel/resources/rem/dao/MongoResmiDao/findCollectionWithGroup(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,java.util.Optional,java.util.Optional,java.util.Optional,java.util.List,boolean)
io/corbel/resources/rem/service/DefaultResmiService/findCollectionDistinct(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,java.util.List,boolean)#java/util/Optional/map(java.util.function.Function)
io/corbel/resources/rem/service/DefaultResmiService/findCollectionDistinct(io.corbel.resources.rem.model.ResourceUri,java.util.Optional,java.util.List,boolean)#java/util/Optional/empty()
io/corbel/resources/rem/service/DefaultResmiService/setId(java.lang.String,com.google.gson.JsonObject)#io/corbel/resources/rem/service/DefaultResmiService/generateIdWithUserId(java.lang.String)
io/corbel/resources/rem/service/DefaultResmiService/setId(java.lang.String,com.google.gson.JsonObject)#com/google/gson/JsonPrimitive/JsonPrimitive(java.lang.String)
io/corbel/resources/rem/service/DefaultResmiService/setId(java.lang.String,com.google.gson.JsonObject)#io/corbel/resources/rem/service/DefaultResmiService/generateId()
io/corbel/resources/rem/service/DefaultResmiService/setId(java.lang.String,com.google.gson.JsonObject)#com/google/gson/JsonObject/add(java.lang.String,com.google.gson.JsonElement)
io/corbel/resources/rem/service/DefaultResmiService/generateId()#java/util/UUID/randomUUID()
io/corbel/resources/rem/service/DefaultResmiService/generateId()#java/util/UUID/toString()
io/corbel/resources/rem/service/DefaultResmiService/findResource(io.corbel.resources.rem.model.ResourceUri)#io/corbel/resources/rem/dao/MongoResmiDao/findResource(io.corbel.resources.rem.model.ResourceUri)
io/corbel/resources/rem/service/DefaultResmiService/deleteRelation(io.corbel.resources.rem.model.ResourceUri,java.util.Optional)#io/corbel/resources/rem/dao/ResmiDao/deleteRelation(io.corbel.resources.rem.model.ResourceUri,java.util.Optional)
io/corbel/resources/rem/service/DefaultResmiService/updateCollection(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject,java.util.List)#io/corbel/resources/rem/service/DefaultResmiService/updateDates(com.google.gson.JsonObject)
io/corbel/resources/rem/service/DefaultResmiService/updateCollection(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject,java.util.List)#io/corbel/resources/rem/dao/ResmiDao/updateCollection(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject,java.util.List)
io/corbel/resources/rem/service/DefaultResmiService/updateCollection(io.corbel.resources.rem.model.ResourceUri,com.google.gson.JsonObject,java.util.List)#io/corbel/resources/rem/service/DefaultResmiService/verifyNotUnderscore(com.google.gson.JsonObject)
api/NotificationResourceTest/testUpdateSenderNotificationTemplate()#io/corbel/notifications/model/NotificationTemplate/getText()
api/NotificationResourceTest/testUpdateSenderNotificationTemplate()#api/NotificationResourceTest/getNotificationTemplate()
api/NotificationResourceTest/testUpdateSenderNotificationTemplate()#org/mockito/Mockito/when(T)
api/NotificationResourceTest/testUpdateSenderNotificationTemplate()#io/corbel/notifications/model/NotificationTemplate/getSender()
api/NotificationResourceTest/testUpdateSenderNotificationTemplate()#io/corbel/notifications/model/NotificationTemplate/getId()
api/NotificationResourceTest/testUpdateSenderNotificationTemplate()#javax/ws/rs/client/Entity/json(T)
api/NotificationResourceTest/testUpdateSenderNotificationTemplate()#io/corbel/notifications/model/NotificationTemplate/getTitle()
api/NotificationResourceTest/testUpdateSenderNotificationTemplate()#javax/ws/rs/client/Client/target(java.lang.String)
api/NotificationResourceTest/testUpdateSenderNotificationTemplate()#org/springframework/data/repository/CrudRepository/save(S)
api/NotificationResourceTest/testUpdateSenderNotificationTemplate()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
api/NotificationResourceTest/testUpdateSenderNotificationTemplate()#org/fest/assertions/api/Assertions/assertThat(int)
api/NotificationResourceTest/testUpdateSenderNotificationTemplate()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
api/NotificationResourceTest/testUpdateSenderNotificationTemplate()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
api/NotificationResourceTest/testUpdateSenderNotificationTemplate()#org/mockito/ArgumentCaptor/getValue()
api/NotificationResourceTest/testUpdateSenderNotificationTemplate()#io/corbel/notifications/model/NotificationTemplateApi/setSender(java.lang.String)
api/NotificationResourceTest/testUpdateSenderNotificationTemplate()#org/mockito/ArgumentCaptor/forClass(java.lang.Class)
api/NotificationResourceTest/testUpdateSenderNotificationTemplate()#org/mockito/Mockito/verify(T)
api/NotificationResourceTest/testUpdateSenderNotificationTemplate()#io/dropwizard/testing/junit/ResourceTestRule/client()
api/NotificationResourceTest/testUpdateSenderNotificationTemplate()#io/corbel/notifications/model/NotificationTemplateApi/NotificationTemplateApi()
api/NotificationResourceTest/testUpdateSenderNotificationTemplate()#javax/ws/rs/client/WebTarget/request()
api/NotificationResourceTest/testUpdateSenderNotificationTemplate()#io/corbel/notifications/repository/NotificationRepository/findByDomainAndName(java.lang.String,java.lang.String)
api/NotificationResourceTest/testUpdateSenderNotificationTemplate()#io/corbel/notifications/model/NotificationTemplate/getType()
api/NotificationResourceTest/testUpdateSenderNotificationTemplate()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
api/NotificationResourceTest/testUpdateSenderNotificationTemplate()#javax/ws/rs/client/SyncInvoker/put(javax.ws.rs.client.Entity,java.lang.Class)
api/NotificationResourceTest/testUpdateSenderNotificationTemplate()#javax/ws/rs/core/Response/getStatus()
api/NotificationResourceTest/testUpdateSenderNotificationTemplate()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
api/NotificationResourceTest/testUpdateSenderNotificationTemplate()#org/mockito/ArgumentCaptor/capture()
api/NotificationResourceTest/testUpdateTypeNotificationTemplate()#io/corbel/notifications/model/NotificationTemplate/getText()
api/NotificationResourceTest/testUpdateTypeNotificationTemplate()#org/mockito/ArgumentCaptor/getValue()
api/NotificationResourceTest/testUpdateTypeNotificationTemplate()#api/NotificationResourceTest/getNotificationTemplate()
api/NotificationResourceTest/testUpdateTypeNotificationTemplate()#io/corbel/notifications/model/NotificationTemplate/getSender()
api/NotificationResourceTest/testUpdateTypeNotificationTemplate()#io/corbel/notifications/model/NotificationTemplate/getId()
api/NotificationResourceTest/testUpdateTypeNotificationTemplate()#javax/ws/rs/client/Entity/json(T)
api/NotificationResourceTest/testUpdateTypeNotificationTemplate()#io/corbel/notifications/model/NotificationTemplate/getTitle()
api/NotificationResourceTest/testUpdateTypeNotificationTemplate()#javax/ws/rs/client/Client/target(java.lang.String)
api/NotificationResourceTest/testUpdateTypeNotificationTemplate()#org/springframework/data/repository/CrudRepository/save(S)
api/NotificationResourceTest/testUpdateTypeNotificationTemplate()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
api/NotificationResourceTest/testUpdateTypeNotificationTemplate()#org/fest/assertions/api/Assertions/assertThat(int)
api/NotificationResourceTest/testUpdateTypeNotificationTemplate()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
api/NotificationResourceTest/testUpdateTypeNotificationTemplate()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
api/NotificationResourceTest/testUpdateTypeNotificationTemplate()#org/mockito/Mockito/when(T)
api/NotificationResourceTest/testUpdateTypeNotificationTemplate()#io/corbel/notifications/model/NotificationTemplateApi/setType(java.lang.String)
api/NotificationResourceTest/testUpdateTypeNotificationTemplate()#org/mockito/ArgumentCaptor/forClass(java.lang.Class)
api/NotificationResourceTest/testUpdateTypeNotificationTemplate()#org/mockito/Mockito/verify(T)
api/NotificationResourceTest/testUpdateTypeNotificationTemplate()#io/dropwizard/testing/junit/ResourceTestRule/client()
api/NotificationResourceTest/testUpdateTypeNotificationTemplate()#io/corbel/notifications/model/NotificationTemplateApi/NotificationTemplateApi()
api/NotificationResourceTest/testUpdateTypeNotificationTemplate()#javax/ws/rs/client/WebTarget/request()
api/NotificationResourceTest/testUpdateTypeNotificationTemplate()#io/corbel/notifications/repository/NotificationRepository/findByDomainAndName(java.lang.String,java.lang.String)
api/NotificationResourceTest/testUpdateTypeNotificationTemplate()#io/corbel/notifications/model/NotificationTemplate/getType()
api/NotificationResourceTest/testUpdateTypeNotificationTemplate()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
api/NotificationResourceTest/testUpdateTypeNotificationTemplate()#javax/ws/rs/client/SyncInvoker/put(javax.ws.rs.client.Entity,java.lang.Class)
api/NotificationResourceTest/testUpdateTypeNotificationTemplate()#javax/ws/rs/core/Response/getStatus()
api/NotificationResourceTest/testUpdateTypeNotificationTemplate()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
api/NotificationResourceTest/testUpdateTypeNotificationTemplate()#org/mockito/ArgumentCaptor/capture()
api/NotificationResourceTest/getNotificationTemplate()#io/corbel/notifications/model/NotificationTemplate/setDomain(java.lang.String)
api/NotificationResourceTest/getNotificationTemplate()#io/corbel/notifications/model/NotificationTemplate/NotificationTemplate()
api/NotificationResourceTest/getNotificationTemplate()#io/corbel/notifications/model/NotificationTemplate/setTitle(java.lang.String)
api/NotificationResourceTest/getNotificationTemplate()#io/corbel/notifications/model/NotificationTemplate/setName(java.lang.String)
api/NotificationResourceTest/getNotificationTemplate()#io/corbel/notifications/model/NotificationTemplate/setText(java.lang.String)
api/NotificationResourceTest/getNotificationTemplate()#io/corbel/notifications/model/NotificationTemplate/setSender(java.lang.String)
api/NotificationResourceTest/getNotificationTemplate()#io/corbel/notifications/model/NotificationTemplate/setType(java.lang.String)
api/NotificationResourceTest/getNotificationTemplate()#io/corbel/notifications/model/NotificationTemplate/setId(java.lang.String)
api/NotificationResourceTest/setUp()#org/mockito/Mockito/reset(T[])
api/NotificationResourceTest/testAddNotificationTemplateWithoutText()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
api/NotificationResourceTest/testAddNotificationTemplateWithoutText()#api/NotificationResourceTest/getNotificationTemplateApi()
api/NotificationResourceTest/testAddNotificationTemplateWithoutText()#io/dropwizard/testing/junit/ResourceTestRule/client()
api/NotificationResourceTest/testAddNotificationTemplateWithoutText()#javax/ws/rs/client/WebTarget/request()
api/NotificationResourceTest/testAddNotificationTemplateWithoutText()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
api/NotificationResourceTest/testAddNotificationTemplateWithoutText()#javax/ws/rs/core/Response/getStatus()
api/NotificationResourceTest/testAddNotificationTemplateWithoutText()#javax/ws/rs/client/Entity/json(T)
api/NotificationResourceTest/testAddNotificationTemplateWithoutText()#javax/ws/rs/client/Client/target(java.lang.String)
api/NotificationResourceTest/testAddNotificationTemplateWithoutText()#io/corbel/notifications/model/NotificationTemplateApi/setText(java.lang.String)
api/NotificationResourceTest/testAddNotificationTemplateWithoutText()#javax/ws/rs/client/SyncInvoker/post(javax.ws.rs.client.Entity,java.lang.Class)
api/NotificationResourceTest/testAddNotificationTemplateWithoutText()#org/fest/assertions/api/Assertions/assertThat(int)
api/NotificationResourceTest/testAddNotificationTemplateWithoutType()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
api/NotificationResourceTest/testAddNotificationTemplateWithoutType()#io/corbel/notifications/model/NotificationTemplateApi/setType(java.lang.String)
api/NotificationResourceTest/testAddNotificationTemplateWithoutType()#api/NotificationResourceTest/getNotificationTemplateApi()
api/NotificationResourceTest/testAddNotificationTemplateWithoutType()#io/dropwizard/testing/junit/ResourceTestRule/client()
api/NotificationResourceTest/testAddNotificationTemplateWithoutType()#javax/ws/rs/client/WebTarget/request()
api/NotificationResourceTest/testAddNotificationTemplateWithoutType()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
api/NotificationResourceTest/testAddNotificationTemplateWithoutType()#javax/ws/rs/core/Response/getStatus()
api/NotificationResourceTest/testAddNotificationTemplateWithoutType()#javax/ws/rs/client/Entity/json(T)
api/NotificationResourceTest/testAddNotificationTemplateWithoutType()#javax/ws/rs/client/Client/target(java.lang.String)
api/NotificationResourceTest/testAddNotificationTemplateWithoutType()#javax/ws/rs/client/SyncInvoker/post(javax.ws.rs.client.Entity,java.lang.Class)
api/NotificationResourceTest/testAddNotificationTemplateWithoutType()#org/fest/assertions/api/Assertions/assertThat(int)
api/NotificationResourceTest/testAddNotificationTemplate()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
api/NotificationResourceTest/testAddNotificationTemplate()#api/NotificationResourceTest/getNotificationTemplate()
api/NotificationResourceTest/testAddNotificationTemplate()#api/NotificationResourceTest/getNotificationTemplateApi()
api/NotificationResourceTest/testAddNotificationTemplate()#io/dropwizard/testing/junit/ResourceTestRule/client()
api/NotificationResourceTest/testAddNotificationTemplate()#javax/ws/rs/client/WebTarget/request()
api/NotificationResourceTest/testAddNotificationTemplate()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
api/NotificationResourceTest/testAddNotificationTemplate()#javax/ws/rs/core/Response/getStatus()
api/NotificationResourceTest/testAddNotificationTemplate()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
api/NotificationResourceTest/testAddNotificationTemplate()#javax/ws/rs/client/Entity/json(T)
api/NotificationResourceTest/testAddNotificationTemplate()#io/corbel/notifications/model/NotificationTemplate/setId(java.lang.String)
api/NotificationResourceTest/testAddNotificationTemplate()#javax/ws/rs/core/Response/getHeaderString(java.lang.String)
api/NotificationResourceTest/testAddNotificationTemplate()#javax/ws/rs/client/Client/target(java.lang.String)
api/NotificationResourceTest/testAddNotificationTemplate()#org/fest/assertions/api/StringAssert/contains(java.lang.String)
api/NotificationResourceTest/testAddNotificationTemplate()#javax/ws/rs/client/SyncInvoker/post(javax.ws.rs.client.Entity,java.lang.Class)
api/NotificationResourceTest/testAddNotificationTemplate()#org/fest/assertions/api/Assertions/assertThat(int)
api/NotificationResourceTest/getNotificationTemplateApi()#io/corbel/notifications/model/NotificationTemplateApi/setSender(java.lang.String)
api/NotificationResourceTest/getNotificationTemplateApi()#io/corbel/notifications/model/NotificationTemplateApi/setType(java.lang.String)
api/NotificationResourceTest/getNotificationTemplateApi()#io/corbel/notifications/model/NotificationTemplateApi/setId(java.lang.String)
api/NotificationResourceTest/getNotificationTemplateApi()#io/corbel/notifications/model/NotificationTemplateApi/NotificationTemplateApi()
api/NotificationResourceTest/getNotificationTemplateApi()#io/corbel/notifications/model/NotificationTemplateApi/setTitle(java.lang.String)
api/NotificationResourceTest/getNotificationTemplateApi()#io/corbel/notifications/model/NotificationTemplateApi/setText(java.lang.String)
api/NotificationResourceTest/testAddNotificationTemplateWithoutName()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
api/NotificationResourceTest/testAddNotificationTemplateWithoutName()#io/dropwizard/testing/junit/ResourceTestRule/client()
api/NotificationResourceTest/testAddNotificationTemplateWithoutName()#javax/ws/rs/client/WebTarget/request()
api/NotificationResourceTest/testAddNotificationTemplateWithoutName()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
api/NotificationResourceTest/testAddNotificationTemplateWithoutName()#javax/ws/rs/core/Response/getStatus()
api/NotificationResourceTest/testAddNotificationTemplateWithoutName()#javax/ws/rs/client/Entity/json(T)
api/NotificationResourceTest/testAddNotificationTemplateWithoutName()#javax/ws/rs/client/Client/target(java.lang.String)
api/NotificationResourceTest/testAddNotificationTemplateWithoutName()#api/NotificationResourceTest/getNotificationTemplateApi()
api/NotificationResourceTest/testAddNotificationTemplateWithoutName()#io/corbel/notifications/model/NotificationTemplateApi/setId(java.lang.String)
api/NotificationResourceTest/testAddNotificationTemplateWithoutName()#javax/ws/rs/client/SyncInvoker/post(javax.ws.rs.client.Entity,java.lang.Class)
api/NotificationResourceTest/testAddNotificationTemplateWithoutName()#org/fest/assertions/api/Assertions/assertThat(int)
api/NotificationResourceTest/testGetNotExistingNotificationTemplate()#org/mockito/Mockito/when(T)
api/NotificationResourceTest/testGetNotExistingNotificationTemplate()#io/dropwizard/testing/junit/ResourceTestRule/client()
api/NotificationResourceTest/testGetNotExistingNotificationTemplate()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
api/NotificationResourceTest/testGetNotExistingNotificationTemplate()#javax/ws/rs/client/Client/target(java.lang.String)
api/NotificationResourceTest/testGetNotExistingNotificationTemplate()#org/fest/assertions/api/Assertions/assertThat(int)
api/NotificationResourceTest/testGetNotExistingNotificationTemplate()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
api/NotificationResourceTest/testGetNotExistingNotificationTemplate()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
api/NotificationResourceTest/testGetNotExistingNotificationTemplate()#javax/ws/rs/client/WebTarget/request()
api/NotificationResourceTest/testGetNotExistingNotificationTemplate()#io/corbel/notifications/repository/NotificationRepository/findByDomainAndName(java.lang.String,java.lang.String)
api/NotificationResourceTest/testGetNotExistingNotificationTemplate()#javax/ws/rs/client/SyncInvoker/get(java.lang.Class)
api/NotificationResourceTest/testGetNotExistingNotificationTemplate()#javax/ws/rs/core/Response/getStatus()
api/NotificationResourceTest/testUpdateTitleNotificationTemplate()#io/corbel/notifications/model/NotificationTemplate/getText()
api/NotificationResourceTest/testUpdateTitleNotificationTemplate()#org/mockito/ArgumentCaptor/getValue()
api/NotificationResourceTest/testUpdateTitleNotificationTemplate()#api/NotificationResourceTest/getNotificationTemplate()
api/NotificationResourceTest/testUpdateTitleNotificationTemplate()#org/mockito/Mockito/when(T)
api/NotificationResourceTest/testUpdateTitleNotificationTemplate()#io/corbel/notifications/model/NotificationTemplate/getSender()
api/NotificationResourceTest/testUpdateTitleNotificationTemplate()#io/corbel/notifications/model/NotificationTemplate/getId()
api/NotificationResourceTest/testUpdateTitleNotificationTemplate()#javax/ws/rs/client/Entity/json(T)
api/NotificationResourceTest/testUpdateTitleNotificationTemplate()#io/corbel/notifications/model/NotificationTemplateApi/setTitle(java.lang.String)
api/NotificationResourceTest/testUpdateTitleNotificationTemplate()#io/corbel/notifications/model/NotificationTemplate/getTitle()
api/NotificationResourceTest/testUpdateTitleNotificationTemplate()#javax/ws/rs/client/Client/target(java.lang.String)
api/NotificationResourceTest/testUpdateTitleNotificationTemplate()#org/springframework/data/repository/CrudRepository/save(S)
api/NotificationResourceTest/testUpdateTitleNotificationTemplate()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
api/NotificationResourceTest/testUpdateTitleNotificationTemplate()#org/fest/assertions/api/Assertions/assertThat(int)
api/NotificationResourceTest/testUpdateTitleNotificationTemplate()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
api/NotificationResourceTest/testUpdateTitleNotificationTemplate()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
api/NotificationResourceTest/testUpdateTitleNotificationTemplate()#org/mockito/ArgumentCaptor/forClass(java.lang.Class)
api/NotificationResourceTest/testUpdateTitleNotificationTemplate()#org/mockito/Mockito/verify(T)
api/NotificationResourceTest/testUpdateTitleNotificationTemplate()#io/dropwizard/testing/junit/ResourceTestRule/client()
api/NotificationResourceTest/testUpdateTitleNotificationTemplate()#io/corbel/notifications/model/NotificationTemplateApi/NotificationTemplateApi()
api/NotificationResourceTest/testUpdateTitleNotificationTemplate()#javax/ws/rs/client/WebTarget/request()
api/NotificationResourceTest/testUpdateTitleNotificationTemplate()#io/corbel/notifications/repository/NotificationRepository/findByDomainAndName(java.lang.String,java.lang.String)
api/NotificationResourceTest/testUpdateTitleNotificationTemplate()#io/corbel/notifications/model/NotificationTemplate/getType()
api/NotificationResourceTest/testUpdateTitleNotificationTemplate()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
api/NotificationResourceTest/testUpdateTitleNotificationTemplate()#javax/ws/rs/client/SyncInvoker/put(javax.ws.rs.client.Entity,java.lang.Class)
api/NotificationResourceTest/testUpdateTitleNotificationTemplate()#javax/ws/rs/core/Response/getStatus()
api/NotificationResourceTest/testUpdateTitleNotificationTemplate()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
api/NotificationResourceTest/testUpdateTitleNotificationTemplate()#org/mockito/ArgumentCaptor/capture()
api/NotificationResourceTest/testDeleteNotificationTemplate()#io/corbel/notifications/repository/NotificationRepository/deleteByDomainAndName(java.lang.String,java.lang.String)
api/NotificationResourceTest/testDeleteNotificationTemplate()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
api/NotificationResourceTest/testDeleteNotificationTemplate()#org/mockito/Mockito/verify(T)
api/NotificationResourceTest/testDeleteNotificationTemplate()#io/dropwizard/testing/junit/ResourceTestRule/client()
api/NotificationResourceTest/testDeleteNotificationTemplate()#javax/ws/rs/client/WebTarget/request()
api/NotificationResourceTest/testDeleteNotificationTemplate()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
api/NotificationResourceTest/testDeleteNotificationTemplate()#javax/ws/rs/core/Response/getStatus()
api/NotificationResourceTest/testDeleteNotificationTemplate()#javax/ws/rs/client/Client/target(java.lang.String)
api/NotificationResourceTest/testDeleteNotificationTemplate()#javax/ws/rs/client/SyncInvoker/delete(java.lang.Class)
api/NotificationResourceTest/testDeleteNotificationTemplate()#org/fest/assertions/api/Assertions/assertThat(int)
api/NotificationResourceTest/testSendNotification()#io/corbel/notifications/service/SenderNotificationsService/sendNotification(java.lang.String,java.lang.String,java.util.Map,java.lang.String[])
api/NotificationResourceTest/testSendNotification()#java/util/Collections/emptyMap()
api/NotificationResourceTest/testSendNotification()#io/corbel/notifications/model/Notification/setNotificationId(java.lang.String)
api/NotificationResourceTest/testSendNotification()#org/mockito/Mockito/verify(T)
api/NotificationResourceTest/testSendNotification()#io/dropwizard/testing/junit/ResourceTestRule/client()
api/NotificationResourceTest/testSendNotification()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
api/NotificationResourceTest/testSendNotification()#javax/ws/rs/core/Response/getStatus()
api/NotificationResourceTest/testSendNotification()#javax/ws/rs/client/Entity/json(T)
api/NotificationResourceTest/testSendNotification()#javax/ws/rs/client/Client/target(java.lang.String)
api/NotificationResourceTest/testSendNotification()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
api/NotificationResourceTest/testSendNotification()#io/corbel/notifications/model/Notification/Notification()
api/NotificationResourceTest/testSendNotification()#io/corbel/notifications/model/Notification/setRecipient(java.lang.String)
api/NotificationResourceTest/testSendNotification()#javax/ws/rs/client/WebTarget/request()
api/NotificationResourceTest/testSendNotification()#io/corbel/notifications/model/Notification/setProperties(java.util.Map)
api/NotificationResourceTest/testSendNotification()#javax/ws/rs/client/SyncInvoker/post(javax.ws.rs.client.Entity,java.lang.Class)
api/NotificationResourceTest/testSendNotification()#org/fest/assertions/api/Assertions/assertThat(int)
api/NotificationResourceTest/testUpdateNotExistingNotificationTemplate()#org/mockito/Mockito/when(T)
api/NotificationResourceTest/testUpdateNotExistingNotificationTemplate()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
api/NotificationResourceTest/testUpdateNotExistingNotificationTemplate()#javax/ws/rs/client/Entity/json(T)
api/NotificationResourceTest/testUpdateNotExistingNotificationTemplate()#javax/ws/rs/client/Client/target(java.lang.String)
api/NotificationResourceTest/testUpdateNotExistingNotificationTemplate()#org/fest/assertions/api/Assertions/assertThat(int)
api/NotificationResourceTest/testUpdateNotExistingNotificationTemplate()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
api/NotificationResourceTest/testUpdateNotExistingNotificationTemplate()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
api/NotificationResourceTest/testUpdateNotExistingNotificationTemplate()#io/dropwizard/testing/junit/ResourceTestRule/client()
api/NotificationResourceTest/testUpdateNotExistingNotificationTemplate()#io/corbel/notifications/model/NotificationTemplateApi/NotificationTemplateApi()
api/NotificationResourceTest/testUpdateNotExistingNotificationTemplate()#javax/ws/rs/client/WebTarget/request()
api/NotificationResourceTest/testUpdateNotExistingNotificationTemplate()#io/corbel/notifications/repository/NotificationRepository/findByDomainAndName(java.lang.String,java.lang.String)
api/NotificationResourceTest/testUpdateNotExistingNotificationTemplate()#javax/ws/rs/client/SyncInvoker/put(javax.ws.rs.client.Entity,java.lang.Class)
api/NotificationResourceTest/testUpdateNotExistingNotificationTemplate()#javax/ws/rs/core/Response/getStatus()
api/NotificationResourceTest/testAddNotificationTemplateWithoutSender()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
api/NotificationResourceTest/testAddNotificationTemplateWithoutSender()#io/corbel/notifications/model/NotificationTemplateApi/setSender(java.lang.String)
api/NotificationResourceTest/testAddNotificationTemplateWithoutSender()#api/NotificationResourceTest/getNotificationTemplateApi()
api/NotificationResourceTest/testAddNotificationTemplateWithoutSender()#io/dropwizard/testing/junit/ResourceTestRule/client()
api/NotificationResourceTest/testAddNotificationTemplateWithoutSender()#javax/ws/rs/client/WebTarget/request()
api/NotificationResourceTest/testAddNotificationTemplateWithoutSender()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
api/NotificationResourceTest/testAddNotificationTemplateWithoutSender()#javax/ws/rs/core/Response/getStatus()
api/NotificationResourceTest/testAddNotificationTemplateWithoutSender()#javax/ws/rs/client/Entity/json(T)
api/NotificationResourceTest/testAddNotificationTemplateWithoutSender()#javax/ws/rs/client/Client/target(java.lang.String)
api/NotificationResourceTest/testAddNotificationTemplateWithoutSender()#javax/ws/rs/client/SyncInvoker/post(javax.ws.rs.client.Entity,java.lang.Class)
api/NotificationResourceTest/testAddNotificationTemplateWithoutSender()#org/fest/assertions/api/Assertions/assertThat(int)
api/NotificationResourceTest/testGetNotificationTemplate()#api/NotificationResourceTest/getNotificationTemplate()
api/NotificationResourceTest/testGetNotificationTemplate()#org/mockito/Mockito/when(T)
api/NotificationResourceTest/testGetNotificationTemplate()#io/dropwizard/testing/junit/ResourceTestRule/client()
api/NotificationResourceTest/testGetNotificationTemplate()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
api/NotificationResourceTest/testGetNotificationTemplate()#org/fest/assertions/api/ObjectAssert/isEqualsToByComparingFields(T)
api/NotificationResourceTest/testGetNotificationTemplate()#io/corbel/notifications/model/NotificationTemplateApi/NotificationTemplateApi(io.corbel.notifications.model.NotificationTemplate)
api/NotificationResourceTest/testGetNotificationTemplate()#javax/ws/rs/core/Response/readEntity(java.lang.Class)
api/NotificationResourceTest/testGetNotificationTemplate()#org/fest/assertions/api/Assertions/assertThat(int)
api/NotificationResourceTest/testGetNotificationTemplate()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
api/NotificationResourceTest/testGetNotificationTemplate()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
api/NotificationResourceTest/testGetNotificationTemplate()#javax/ws/rs/client/WebTarget/request()
api/NotificationResourceTest/testGetNotificationTemplate()#io/corbel/notifications/repository/NotificationRepository/findByDomainAndName(java.lang.String,java.lang.String)
api/NotificationResourceTest/testGetNotificationTemplate()#javax/ws/rs/client/SyncInvoker/get(java.lang.Class)
api/NotificationResourceTest/testGetNotificationTemplate()#javax/ws/rs/core/Response/getStatus()
api/NotificationResourceTest/testGetNotificationTemplate()#org/fest/assertions/api/Assertions/assertThat(T)
api/NotificationResourceTest/testGetNotificationTemplate()#javax/ws/rs/client/Client/target(java.lang.String)
api/NotificationResourceTest/testUpdateTextNotificationTemplate()#io/corbel/notifications/model/NotificationTemplate/getText()
api/NotificationResourceTest/testUpdateTextNotificationTemplate()#org/mockito/ArgumentCaptor/getValue()
api/NotificationResourceTest/testUpdateTextNotificationTemplate()#api/NotificationResourceTest/getNotificationTemplate()
api/NotificationResourceTest/testUpdateTextNotificationTemplate()#org/mockito/Mockito/when(T)
api/NotificationResourceTest/testUpdateTextNotificationTemplate()#io/corbel/notifications/model/NotificationTemplate/getSender()
api/NotificationResourceTest/testUpdateTextNotificationTemplate()#io/corbel/notifications/model/NotificationTemplate/getId()
api/NotificationResourceTest/testUpdateTextNotificationTemplate()#javax/ws/rs/client/Entity/json(T)
api/NotificationResourceTest/testUpdateTextNotificationTemplate()#io/corbel/notifications/model/NotificationTemplate/getTitle()
api/NotificationResourceTest/testUpdateTextNotificationTemplate()#javax/ws/rs/client/Client/target(java.lang.String)
api/NotificationResourceTest/testUpdateTextNotificationTemplate()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
api/NotificationResourceTest/testUpdateTextNotificationTemplate()#org/fest/assertions/api/Assertions/assertThat(int)
api/NotificationResourceTest/testUpdateTextNotificationTemplate()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
api/NotificationResourceTest/testUpdateTextNotificationTemplate()#javax/ws/rs/client/Invocation/Builder/header(java.lang.String,java.lang.Object)
api/NotificationResourceTest/testUpdateTextNotificationTemplate()#org/mockito/ArgumentCaptor/forClass(java.lang.Class)
api/NotificationResourceTest/testUpdateTextNotificationTemplate()#org/mockito/Mockito/verify(T)
api/NotificationResourceTest/testUpdateTextNotificationTemplate()#io/dropwizard/testing/junit/ResourceTestRule/client()
api/NotificationResourceTest/testUpdateTextNotificationTemplate()#io/corbel/notifications/model/NotificationTemplateApi/NotificationTemplateApi()
api/NotificationResourceTest/testUpdateTextNotificationTemplate()#javax/ws/rs/client/WebTarget/request()
api/NotificationResourceTest/testUpdateTextNotificationTemplate()#io/corbel/notifications/repository/NotificationRepository/findByDomainAndName(java.lang.String,java.lang.String)
api/NotificationResourceTest/testUpdateTextNotificationTemplate()#io/corbel/notifications/model/NotificationTemplate/getType()
api/NotificationResourceTest/testUpdateTextNotificationTemplate()#org/fest/assertions/api/IntegerAssert/isEqualTo(int)
api/NotificationResourceTest/testUpdateTextNotificationTemplate()#javax/ws/rs/client/SyncInvoker/put(javax.ws.rs.client.Entity,java.lang.Class)
api/NotificationResourceTest/testUpdateTextNotificationTemplate()#javax/ws/rs/core/Response/getStatus()
api/NotificationResourceTest/testUpdateTextNotificationTemplate()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
api/NotificationResourceTest/testUpdateTextNotificationTemplate()#org/mockito/ArgumentCaptor/capture()
api/NotificationResourceTest/testUpdateTextNotificationTemplate()#io/corbel/notifications/model/NotificationTemplateApi/setText(java.lang.String)
api/NotificationResourceTest/testUpdateTextNotificationTemplate()#org/springframework/data/repository/CrudRepository/save(S)
io/corbel/oauth/token/verifier/UserExistsTokenVerifier/verify(io.corbel.lib.token.reader.TokenReader)#io/corbel/lib/token/reader/TokenReader/getInfo()
io/corbel/oauth/token/verifier/UserExistsTokenVerifier/verify(io.corbel.lib.token.reader.TokenReader)#io/corbel/lib/token/exception/TokenVerificationException/UserNotExists/UserNotExists()
io/corbel/oauth/token/verifier/UserExistsTokenVerifier/verify(io.corbel.lib.token.reader.TokenReader)#io/corbel/lib/token/TokenInfo/getUserId()
io/corbel/oauth/token/verifier/UserExistsTokenVerifier/verify(io.corbel.lib.token.reader.TokenReader)#org/springframework/data/repository/CrudRepository/findOne(ID)
io/corbel/resources/rem/resmi/ResmiDropIndexRem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/resources/rem/request/RequestParameters/getOptionalApiParameters()
io/corbel/resources/rem/resmi/ResmiDropIndexRem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/resources/rem/model/ResourceUri/ResourceUri(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
io/corbel/resources/rem/resmi/ResmiDropIndexRem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/resources/rem/request/ResourceId/isWildcard()
io/corbel/resources/rem/resmi/ResmiDropIndexRem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/resources/rem/request/ResourceId/getId()
io/corbel/resources/rem/resmi/ResmiDropIndexRem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#java/util/Optional/flatMap(java.util.function.Function)
io/corbel/resources/rem/resmi/ResmiDropIndexRem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#java/util/Optional/orElse(T)
io/corbel/resources/rem/resmi/ResmiDropIndexRem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/resources/rem/request/RequestParameters/getRequestedDomain()
io/corbel/resources/rem/resmi/ResmiDropIndexRem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/resources/rem/model/ResourceUri/getRelationId()
io/corbel/resources/rem/resmi/ResmiDropIndexRem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/resources/rem/resmi/ResmiDropIndexRem/dropIndex(io.corbel.resources.rem.model.ResourceUri,java.lang.String)
io/corbel/resources/rem/resmi/ResmiDropIndexRem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/lib/ws/api/error/ErrorResponseFactory/getInstance()
io/corbel/resources/rem/resmi/ResmiDropIndexRem/relation(java.lang.String,io.corbel.resources.rem.request.ResourceId,java.lang.String,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/lib/ws/api/error/ErrorResponseFactory/methodNotAllowed()
io/corbel/resources/rem/resmi/ResmiDropIndexRem/dropIndex(io.corbel.resources.rem.model.ResourceUri,java.lang.String)#javax/ws/rs/core/Response/noContent()
io/corbel/resources/rem/resmi/ResmiDropIndexRem/dropIndex(io.corbel.resources.rem.model.ResourceUri,java.lang.String)#javax/ws/rs/core/Response/ResponseBuilder/build()
io/corbel/resources/rem/resmi/ResmiDropIndexRem/dropIndex(io.corbel.resources.rem.model.ResourceUri,java.lang.String)#io/corbel/resources/rem/service/ResmiService/dropIndex(io.corbel.resources.rem.model.ResourceUri,java.lang.String)
io/corbel/resources/rem/resmi/ResmiDropIndexRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/resources/rem/model/ResourceUri/ResourceUri(java.lang.String,java.lang.String)
io/corbel/resources/rem/resmi/ResmiDropIndexRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/resources/rem/request/ResourceId/getId()
io/corbel/resources/rem/resmi/ResmiDropIndexRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/resources/rem/request/RequestParameters/getRequestedDomain()
io/corbel/resources/rem/resmi/ResmiDropIndexRem/resource(java.lang.String,io.corbel.resources.rem.request.ResourceId,io.corbel.resources.rem.request.RequestParameters,java.util.Optional)#io/corbel/resources/rem/resmi/ResmiDropIndexRem/dropIndex(io.corbel.resources.rem.model.ResourceUri,java.lang.String)
io/corbel/evci/model/EworkerMessage/equals(java.lang.Object)#java/lang/Object/equals(java.lang.Object)
io/corbel/evci/model/EworkerMessage/equals(java.lang.Object)#io/corbel/evci/model/Header/equals(java.lang.Object)
io/corbel/evci/model/EworkerMessage/equals(java.lang.Object)#java/lang/Object/getClass()
io/corbel/evci/model/EworkerMessage/hashCode()#java/lang/Object/hashCode()
io/corbel/evci/model/EworkerMessage/hashCode()#io/corbel/evci/model/Header/hashCode()
io/corbel/iam/auth/rule/ScopesAuthorizationRuleTest/testScopesAllowed()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/auth/rule/ScopesAuthorizationRuleTest/testScopesAllowed()#java/util/Collections/emptyList()
io/corbel/iam/auth/rule/ScopesAuthorizationRuleTest/testScopesAllowed()#io/corbel/iam/service/ScopeService/expandScopes(java.util.Collection)
io/corbel/iam/auth/rule/ScopesAuthorizationRuleTest/testScopesAllowed()#io/corbel/iam/auth/AuthorizationRequestContext/getRequestedScopes()
io/corbel/iam/auth/rule/ScopesAuthorizationRuleTest/testScopesAllowed()#io/corbel/iam/auth/AuthorizationRequestContext/getRequestedDomain()
io/corbel/iam/auth/rule/ScopesAuthorizationRuleTest/testScopesAllowed()#io/corbel/iam/auth/rule/ScopesAuthorizationRule/process(io.corbel.iam.auth.AuthorizationRequestContext)
io/corbel/iam/auth/rule/ScopesAuthorizationRuleTest/testScopesAllowed()#java/util/HashSet/HashSet(java.util.Collection)
io/corbel/iam/auth/rule/ScopesAuthorizationRuleTest/testScopesAllowed()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/iam/auth/rule/ScopesAuthorizationRuleTest/testScopesAllowed()#org/mockito/Mockito/when(T)
io/corbel/iam/auth/rule/ScopesAuthorizationRuleTest/testScopesAllowed()#io/corbel/iam/auth/AuthorizationRequestContext/getPrincipal()
io/corbel/iam/auth/rule/ScopesAuthorizationRuleTest/testScopesAllowed()#io/corbel/iam/auth/AuthorizationRequestContext/getIssuerClient()
io/corbel/iam/auth/rule/ScopesAuthorizationRuleTest/setUp()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/iam/auth/rule/ScopesAuthorizationRuleTest/setUp()#io/corbel/iam/auth/rule/ScopesAuthorizationRule/ScopesAuthorizationRule(io.corbel.iam.service.ScopeService,io.corbel.iam.service.GroupService)
io/corbel/iam/auth/rule/ScopesAuthorizationRuleTest/testScopesNotAllowed()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
io/corbel/iam/auth/rule/ScopesAuthorizationRuleTest/testScopesNotAllowed()#java/util/Collections/singletonList(T)
io/corbel/iam/auth/rule/ScopesAuthorizationRuleTest/testScopesNotAllowed()#io/corbel/iam/auth/AuthorizationRequestContext/getRequestedDomain()
io/corbel/iam/auth/rule/ScopesAuthorizationRuleTest/testScopesNotAllowed()#io/corbel/iam/utils/Message/getMessage(java.lang.Object[])
io/corbel/iam/auth/rule/ScopesAuthorizationRuleTest/testScopesNotAllowed()#io/corbel/iam/auth/rule/ScopesAuthorizationRule/process(io.corbel.iam.auth.AuthorizationRequestContext)
io/corbel/iam/auth/rule/ScopesAuthorizationRuleTest/testScopesNotAllowed()#org/mockito/Matchers/eq(T)
io/corbel/iam/auth/rule/ScopesAuthorizationRuleTest/testScopesNotAllowed()#io/corbel/iam/model/Scope/getIdWithParameters()
io/corbel/iam/auth/rule/ScopesAuthorizationRuleTest/testScopesNotAllowed()#org/mockito/Mockito/mock(java.lang.Class)
io/corbel/iam/auth/rule/ScopesAuthorizationRuleTest/testScopesNotAllowed()#org/mockito/Mockito/when(T)
io/corbel/iam/auth/rule/ScopesAuthorizationRuleTest/testScopesNotAllowed()#java/lang/Throwable/getMessage()
io/corbel/iam/auth/rule/ScopesAuthorizationRuleTest/testScopesNotAllowed()#io/corbel/iam/service/ScopeService/expandScopes(java.util.Collection)
io/corbel/iam/auth/rule/ScopesAuthorizationRuleTest/testScopesNotAllowed()#org/fest/assertions/api/Assertions/assertThat(java.lang.String)
io/corbel/iam/auth/rule/ScopesAuthorizationRuleTest/testScopesNotAllowed()#io/corbel/iam/auth/AuthorizationRequestContext/getRequestedScopes()
io/corbel/iam/auth/rule/ScopesAuthorizationRuleTest/testScopesNotAllowed()#io/corbel/iam/auth/AuthorizationRequestContext/getPrincipal()
io/corbel/iam/auth/rule/ScopesAuthorizationRuleTest/testScopesNotAllowed()#io/corbel/iam/auth/AuthorizationRequestContext/getIssuerClient()
io/corbel/iam/auth/rule/ScopesAuthorizationRuleTest/testScopesNotAllowed()#java/util/HashSet/HashSet(java.util.Collection)
io/corbel/iam/auth/rule/ScopesAuthorizationRuleTest/testScopesNotAllowed()#org/fest/assertions/api/AbstractAssert/isEqualTo(A)
io/corbel/iam/auth/rule/ScopesAuthorizationRuleTest/testScopesNotAllowed()#java/lang/Exception/Exception()
io/corbel/iam/auth/provider/SpringAuthorizationProviderFactory/getProvider(io.corbel.iam.model.Domain,java.lang.String)#java/util/Map/get(java.lang.Object)
io/corbel/iam/auth/provider/SpringAuthorizationProviderFactory/getProvider(io.corbel.iam.model.Domain,java.lang.String)#io/corbel/iam/model/Domain/getAuthConfigurations()
io/corbel/iam/auth/provider/SpringAuthorizationProviderFactory/getProvider(io.corbel.iam.model.Domain,java.lang.String)#io/corbel/iam/auth/provider/Provider/setConfiguration(java.util.Map)
io/corbel/iam/auth/provider/SpringAuthorizationProviderFactory/getProvider(io.corbel.iam.model.Domain,java.lang.String)#org/springframework/beans/factory/BeanFactory/getBean(java.lang.String,java.lang.Class)
io/corbel/iam/auth/provider/SpringAuthorizationProviderFactory/getProvider(io.corbel.iam.model.Domain,java.lang.String)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
io/corbel/iam/model/DeviceIdGenerator/generateId(io.corbel.iam.model.Device)#io/corbel/iam/model/Device/getUserId()
io/corbel/iam/model/DeviceIdGenerator/generateId(io.corbel.iam.model.Device)#io/corbel/iam/model/Device/getUid()
io/corbel/iam/model/DeviceIdGenerator/generateId(io.corbel.iam.model.Device)#io/corbel/iam/utils/UserDomainIdGenerator/generateDeviceId(java.lang.String,java.lang.String,java.lang.String)
io/corbel/iam/model/DeviceIdGenerator/generateId(io.corbel.iam.model.Device)#io/corbel/iam/model/Device/getDomain()
io/corbel/oauth/repository/UserRepositoryImpl/existsByUsernameAndDomain(java.lang.String,java.lang.String)#com/google/common/collect/ImmutableMap/of(K,V,K,V)
io/corbel/oauth/repository/UserRepositoryImpl/existsByUsernameAndDomain(java.lang.String,java.lang.String)#io/corbel/lib/mongo/utils/MongoCommonOperations/exists(org.springframework.data.mongodb.core.MongoOperations,java.util.Map,java.lang.Class)
io/corbel/iam/model/TraceableEntity/hashCode()#io/corbel/iam/model/Entity/hashCode()
io/corbel/iam/model/TraceableEntity/hashCode()#java/lang/String/hashCode()
io/corbel/iam/model/TraceableEntity/hashCode()#java/util/Date/hashCode()
io/corbel/iam/model/TraceableEntity/equals(java.lang.Object)#java/util/Objects/equals(java.lang.Object,java.lang.Object)
io/corbel/iam/model/TraceableEntity/equals(java.lang.Object)#io/corbel/iam/model/Entity/equals(java.lang.Object)
io/corbel/iam/repository/GroupRepositoryImpl/deleteScopes(java.lang.String[])#io/corbel/iam/repository/HasScopesRepositoryBase/removeScopes(java.lang.String[])
io/corbel/iam/repository/GroupRepositoryImpl/findByDomain(java.lang.String,java.util.List,io.corbel.lib.queries.request.Pagination,io.corbel.lib.queries.request.Sort)#org/springframework/data/mongodb/core/query/Criteria/is(java.lang.Object)
io/corbel/iam/repository/GroupRepositoryImpl/findByDomain(java.lang.String,java.util.List,io.corbel.lib.queries.request.Pagination,io.corbel.lib.queries.request.Sort)#org/springframework/data/mongodb/core/query/Criteria/where(java.lang.String)
io/corbel/iam/repository/GroupRepositoryImpl/findByDomain(java.lang.String,java.util.List,io.corbel.lib.queries.request.Pagination,io.corbel.lib.queries.request.Sort)#io/corbel/lib/queries/builder/QueryBuilder/build()
io/corbel/iam/repository/GroupRepositoryImpl/findByDomain(java.lang.String,java.util.List,io.corbel.lib.queries.request.Pagination,io.corbel.lib.queries.request.Sort)#io/corbel/lib/queries/mongo/builder/MongoQueryBuilder/query(java.util.List)
io/corbel/iam/repository/GroupRepositoryImpl/findByDomain(java.lang.String,java.util.List,io.corbel.lib.queries.request.Pagination,io.corbel.lib.queries.request.Sort)#io/corbel/lib/queries/mongo/builder/MongoQueryBuilder/MongoQueryBuilder()
io/corbel/iam/repository/GroupRepositoryImpl/findByDomain(java.lang.String,java.util.List,io.corbel.lib.queries.request.Pagination,io.corbel.lib.queries.request.Sort)#org/springframework/data/mongodb/core/query/Query/addCriteria(org.springframework.data.mongodb.core.query.CriteriaDefinition)
io/corbel/iam/repository/GroupRepositoryImpl/findByDomain(java.lang.String,java.util.List,io.corbel.lib.queries.request.Pagination,io.corbel.lib.queries.request.Sort)#org/springframework/data/mongodb/core/MongoOperations/find(org.springframework.data.mongodb.core.query.Query,java.lang.Class)
io/corbel/iam/repository/GroupRepositoryImpl/findByDomain(java.lang.String,java.util.List,io.corbel.lib.queries.request.Pagination,io.corbel.lib.queries.request.Sort)#io/corbel/lib/queries/builder/QueryBuilder/pagination(io.corbel.lib.queries.request.Pagination)
io/corbel/iam/repository/GroupRepositoryImpl/findByDomain(java.lang.String,java.util.List,io.corbel.lib.queries.request.Pagination,io.corbel.lib.queries.request.Sort)#io/corbel/lib/queries/builder/QueryBuilder/sort(io.corbel.lib.queries.request.Sort)
io/corbel/resources/rem/model/RestorResourceUri/equals(java.lang.Object)#java/lang/String/equals(java.lang.Object)
io/corbel/resources/rem/model/RestorResourceUri/equals(java.lang.Object)#java/lang/Object/getClass()
io/corbel/resources/rem/model/RestorResourceUri/hashCode()#java/lang/String/hashCode()
io/corbel/iam/eventbus/ScopeModifiedEventHandler/handle(io.corbel.event.ScopeUpdateEvent)#java/lang/Enum/equals(java.lang.Object)
io/corbel/iam/eventbus/ScopeModifiedEventHandler/handle(io.corbel.event.ScopeUpdateEvent)#io/corbel/event/ScopeUpdateEvent/getAction()
io/corbel/iam/eventbus/ScopeModifiedEventHandler/handle(io.corbel.event.ScopeUpdateEvent)#io/corbel/iam/repository/GroupRepository/deleteScopes(java.lang.String[])
io/corbel/iam/eventbus/ScopeModifiedEventHandler/handle(io.corbel.event.ScopeUpdateEvent)#org/springframework/cache/CacheManager/getCache(java.lang.String)
io/corbel/iam/eventbus/ScopeModifiedEventHandler/handle(io.corbel.event.ScopeUpdateEvent)#io/corbel/event/ScopeUpdateEvent/getScopeId()
io/corbel/iam/eventbus/ScopeModifiedEventHandler/handle(io.corbel.event.ScopeUpdateEvent)#org/springframework/cache/Cache/evict(java.lang.Object)
io/corbel/notifications/service/DefaultSenderNotificationsService/sendNotification(java.lang.String,java.lang.String,java.util.Map,java.lang.String[])#io/corbel/notifications/template/NotificationFiller/fill(io.corbel.notifications.model.NotificationTemplate,java.util.Map)
io/corbel/notifications/service/DefaultSenderNotificationsService/sendNotification(java.lang.String,java.lang.String,java.util.Map,java.lang.String[])#io/corbel/notifications/model/NotificationTemplate/getReplyTo()
io/corbel/notifications/service/DefaultSenderNotificationsService/sendNotification(java.lang.String,java.lang.String,java.util.Map,java.lang.String[])#java/util/Optional/orElse(T)
io/corbel/notifications/service/DefaultSenderNotificationsService/sendNotification(java.lang.String,java.lang.String,java.util.Map,java.lang.String[])#org/springframework/data/repository/CrudRepository/findOne(ID)
io/corbel/notifications/service/DefaultSenderNotificationsService/sendNotification(java.lang.String,java.lang.String,java.util.Map,java.lang.String[])#java/util/Optional/ofNullable(T)
io/corbel/notifications/service/DefaultSenderNotificationsService/sendNotification(java.lang.String,java.lang.String,java.util.Map,java.lang.String[])#java/util/Map/getOrDefault(java.lang.Object,V)
io/corbel/notifications/service/DefaultSenderNotificationsService/sendNotification(java.lang.String,java.lang.String,java.util.Map,java.lang.String[])#io/corbel/notifications/utils/DomainNameIdGenerator/generateNotificationTemplateId(java.lang.String,java.lang.String)
io/corbel/notifications/service/DefaultSenderNotificationsService/sendNotification(java.lang.String,java.lang.String,java.util.Map,java.lang.String[])#io/corbel/notifications/service/NotificationsDispatcher/send(io.corbel.notifications.model.Domain,io.corbel.notifications.model.NotificationTemplate,java.lang.String,java.lang.String[])
io/corbel/notifications/service/DefaultSenderNotificationsService/sendNotification(java.lang.String,java.lang.String,java.util.Map,java.lang.String[])#java/util/Optional/map(java.util.function.Function)
io/corbel/notifications/service/DefaultSenderNotificationsService/getProperties(io.corbel.notifications.model.Domain,java.util.Map)#java/util/Collections/emptyMap()
io/corbel/notifications/service/DefaultSenderNotificationsService/getProperties(io.corbel.notifications.model.Domain,java.util.Map)#io/corbel/notifications/model/Domain/getProperties()
io/corbel/notifications/service/DefaultSenderNotificationsService/getProperties(io.corbel.notifications.model.Domain,java.util.Map)#java/util/Map/putAll(java.util.Map)
io/corbel/notifications/service/DefaultSenderNotificationsService/getProperties(io.corbel.notifications.model.Domain,java.util.Map)#java/util/HashMap/HashMap()
