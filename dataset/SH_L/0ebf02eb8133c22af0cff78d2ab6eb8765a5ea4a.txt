org/apache/parquet/avro/TestCircularReferences/ReferenceManager/ReferenceHandler/toRecord(org.apache.parquet.avro.IndexedRecord,org.apache.parquet.pig.Schema,org.apache.parquet.avro.LogicalType)#org/apache/parquet/avro/TestCircularReferences/ReferenceManager/HijackingIndexedRecord/HijackingIndexedRecord(org.apache.parquet.avro.IndexedRecord,int,java.lang.Object)
org/apache/parquet/avro/TestCircularReferences/ReferenceManager/ReferenceHandler/toRecord(org.apache.parquet.avro.IndexedRecord,org.apache.parquet.pig.Schema,org.apache.parquet.avro.LogicalType)#java/util/Map/get(java.lang.Object)
org/apache/parquet/avro/TestCircularReferences/ReferenceManager/ReferenceHandler/toRecord(org.apache.parquet.avro.IndexedRecord,org.apache.parquet.pig.Schema,org.apache.parquet.avro.LogicalType)#org/apache/parquet/avro/TestCircularReferences/Reference/getRefFieldName()
org/apache/parquet/avro/TestCircularReferences/ReferenceManager/ReferenceHandler/fromRecord(org.apache.parquet.avro.IndexedRecord,org.apache.parquet.pig.Schema,org.apache.parquet.avro.LogicalType)#java/util/ArrayList/ArrayList()
org/apache/parquet/avro/TestCircularReferences/ReferenceManager/ReferenceHandler/fromRecord(org.apache.parquet.avro.IndexedRecord,org.apache.parquet.pig.Schema,org.apache.parquet.avro.LogicalType)#java/util/Map/get(java.lang.Object)
org/apache/parquet/avro/TestCircularReferences/ReferenceManager/ReferenceHandler/fromRecord(org.apache.parquet.avro.IndexedRecord,org.apache.parquet.pig.Schema,org.apache.parquet.avro.LogicalType)#org/apache/parquet/avro/TestCircularReferences/Reference/getRefFieldName()
org/apache/parquet/avro/TestCircularReferences/ReferenceManager/ReferenceHandler/fromRecord(org.apache.parquet.avro.IndexedRecord,org.apache.parquet.pig.Schema,org.apache.parquet.avro.LogicalType)#java/util/Map/containsKey(java.lang.Object)
org/apache/parquet/avro/TestCircularReferences/ReferenceManager/ReferenceHandler/fromRecord(org.apache.parquet.avro.IndexedRecord,org.apache.parquet.pig.Schema,org.apache.parquet.avro.LogicalType)#java/util/List/add(E)
org/apache/parquet/avro/TestCircularReferences/ReferenceManager/ReferenceHandler/fromRecord(org.apache.parquet.avro.IndexedRecord,org.apache.parquet.pig.Schema,org.apache.parquet.avro.LogicalType)#org/apache/parquet/avro/TestCircularReferences/ReferenceManager/ReferenceHandler/fromRecord(org/apache/parquet/avro/IndexedRecord,org/apache/parquet/pig/Schema,org/apache/parquet/avro/LogicalType)/$anonymous1/()
org/apache/parquet/avro/TestCircularReferences/ReferenceManager/ReferenceHandler/fromRecord(org.apache.parquet.avro.IndexedRecord,org.apache.parquet.pig.Schema,org.apache.parquet.avro.LogicalType)#java/util/Map/put(K,V)
org/apache/parquet/thrift/ThriftRecordConverter/MapConverter/getConverter(int)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/parquet/thrift/ThriftRecordConverter/MapConverter/end()#org/apache/parquet/thrift/ThriftRecordConverter/MapConverter/end()/$anonymous1/(java.lang.String)
org/apache/parquet/thrift/ThriftRecordConverter/MapConverter/end()#org/apache/parquet/thrift/ThriftRecordConverter/GroupCounter/getCount()
org/apache/parquet/thrift/ThriftRecordConverter/MapConverter/start()#org/apache/parquet/thrift/ThriftRecordConverter/GroupCounter/startCounting()
org/apache/parquet/avro/AvroRecordConverter/MapConverter/newMap()#java/lang/Class/isAssignableFrom(java.lang.Class)
org/apache/parquet/avro/AvroRecordConverter/MapConverter/newMap()#java/util/HashMap/HashMap()
org/apache/parquet/avro/AvroRecordConverter/MapConverter/end()#org/apache/parquet/avro/ParentValueContainer/add(java.lang.Object)
org/apache/parquet/avro/AvroRecordConverter/MapConverter/start()#org/apache/parquet/avro/AvroRecordConverter/MapConverter/newMap()
org/apache/parquet/column/values/bitpacking/EightBitPackingReader/read()#java/io/InputStream/read()
org/apache/parquet/glob/GlobNode/Atom/hashCode()#java/lang/String/hashCode()
org/apache/parquet/glob/GlobNode/Atom/accept(org.apache.parquet.glob.GlobNode.Visitor)#org/apache/parquet/glob/GlobNode/Visitor/visit(org.apache.parquet.glob.GlobNode.Atom)
org/apache/parquet/glob/GlobNode/Atom/equals(java.lang.Object)#java/lang/String/equals(java.lang.Object)
org/apache/parquet/glob/GlobNode/Atom/equals(java.lang.Object)#java/lang/Object/getClass()
org/apache/parquet/bytes/HeapByteBufferAllocator/allocate(int)#java/nio/ByteBuffer/allocate(int)
org/apache/parquet/bytes/HeapByteBufferAllocator/getInstance()#org/apache/parquet/bytes/HeapByteBufferAllocator/HeapByteBufferAllocator()
org/apache/parquet/proto/utils/WriteUsingMR/waitForJob(org.apache.parquet.hadoop.Job)#java/lang/Thread/sleep(long)
org/apache/parquet/proto/utils/WriteUsingMR/waitForJob(org.apache.parquet.hadoop.Job)#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/apache/parquet/proto/utils/WriteUsingMR/write(org.apache.parquet.proto.utils.Message[])#org/apache/parquet/proto/TestUtils/inferRecordsClass(org.apache.parquet.proto.MessageOrBuilder[])
org/apache/parquet/proto/utils/WriteUsingMR/write(org.apache.parquet.proto.utils.Message[])#java/util/Arrays/asList(T[])
org/apache/parquet/proto/utils/WriteUsingMR/write(org.apache.parquet.proto.utils.Message[])#java/util/Collections/unmodifiableList(java.util.List)
org/apache/parquet/proto/utils/WriteUsingMR/write(org.apache.parquet.proto.utils.Message[])#org/apache/parquet/proto/ProtoParquetOutputFormat/setProtobufClass(org.apache.parquet.hadoop.Job,java.lang.Class)
org/apache/parquet/proto/utils/WriteUsingMR/write(org.apache.parquet.proto.utils.Message[])#java/lang/Object/Object()
org/apache/parquet/proto/utils/WriteUsingMR/write(org.apache.parquet.proto.utils.Message[])#org/apache/parquet/proto/utils/WriteUsingMR/waitForJob(org.apache.parquet.hadoop.Job)
org/apache/parquet/proto/utils/WriteUsingMR/write(org.apache.parquet.proto.utils.Message[])#org/apache/parquet/proto/TestUtils/someTemporaryFilePath()
org/apache/parquet/hadoop/CodecFactory/HeapBytesCompressor/compress(org.apache.parquet.bytes.BytesInput)#org/apache/parquet/bytes/BytesInput/from(java.io.ByteArrayOutputStream)
org/apache/parquet/hadoop/CodecFactory/HeapBytesCompressor/compress(org.apache.parquet.bytes.BytesInput)#java/io/ByteArrayOutputStream/reset()
org/apache/parquet/hadoop/CodecFactory/HeapBytesCompressor/compress(org.apache.parquet.bytes.BytesInput)#org/apache/parquet/bytes/BytesInput/writeAllTo(java.io.OutputStream)
org/apache/parquet/tools/command/HeadCommand/execute(org.apache.parquet.tools.command.CommandLine)#org/apache/parquet/hadoop/ParquetReader/read()
org/apache/parquet/tools/command/HeadCommand/execute(org.apache.parquet.tools.command.CommandLine)#org/apache/parquet/hadoop/ParquetReader/close()
org/apache/parquet/tools/command/HeadCommand/execute(org.apache.parquet.tools.command.CommandLine)#java/lang/Long/parseLong(java.lang.String)
org/apache/parquet/tools/command/HeadCommand/execute(org.apache.parquet.tools.command.CommandLine)#org/apache/parquet/hadoop/ParquetReader/builder(org.apache.parquet.hadoop.api.ReadSupport,org.apache.parquet.hadoop.Path)
org/apache/parquet/tools/command/HeadCommand/execute(org.apache.parquet.tools.command.CommandLine)#org/apache/parquet/tools/read/SimpleRecord/prettyPrint(java.io.PrintWriter)
org/apache/parquet/tools/command/HeadCommand/execute(org.apache.parquet.tools.command.CommandLine)#org/apache/parquet/tools/read/SimpleReadSupport/SimpleReadSupport()
org/apache/parquet/tools/command/HeadCommand/execute(org.apache.parquet.tools.command.CommandLine)#java/io/PrintWriter/PrintWriter(java.io.OutputStream,boolean)
org/apache/parquet/tools/command/HeadCommand/execute(org.apache.parquet.tools.command.CommandLine)#org/apache/parquet/tools/command/ArgsOnlyCommand/execute(org.apache.parquet.tools.command.CommandLine)
org/apache/parquet/tools/command/HeadCommand/execute(org.apache.parquet.tools.command.CommandLine)#java/io/PrintWriter/println()
org/apache/parquet/filter2/predicate/TestFilterApiMethods/testToString()#java/lang/Object/toString()
org/apache/parquet/filter2/predicate/TestFilterApiMethods/testToString()#org/apache/parquet/filter2/predicate/FilterApi/notEq(C,T)
org/apache/parquet/filter2/predicate/TestFilterApiMethods/testToString()#org/apache/parquet/filter2/predicate/FilterApi/or(org.apache.parquet.filter2.predicate.FilterPredicate,org.apache.parquet.filter2.predicate.FilterPredicate)
org/apache/parquet/filter2/predicate/TestFilterApiMethods/testToString()#org/apache/parquet/io/api/Binary/fromString(java.lang.String)
org/apache/parquet/filter2/predicate/TestFilterApiMethods/testFilterPredicateCreation()#org/apache/parquet/filter2/predicate/Operators/ColumnFilterPredicate/getColumn()
org/apache/parquet/filter2/predicate/TestFilterApiMethods/testFilterPredicateCreation()#org/apache/parquet/filter2/predicate/Operators/Column/getColumnPath()
org/apache/parquet/filter2/predicate/TestFilterApiMethods/testFilterPredicateCreation()#org/apache/parquet/filter2/predicate/Operators/Not/getPredicate()
org/apache/parquet/filter2/predicate/TestFilterApiMethods/testFilterPredicateCreation()#org/apache/parquet/filter2/predicate/Operators/BinaryLogicalFilterPredicate/getRight()
org/apache/parquet/filter2/predicate/TestFilterApiMethods/testFilterPredicateCreation()#org/apache/parquet/filter2/predicate/Operators/ColumnFilterPredicate/getValue()
org/apache/parquet/filter2/predicate/TestFilterApiMethods/testFilterPredicateCreation()#org/apache/parquet/hadoop/metadata/ColumnPath/get(java.lang.String[])
org/apache/parquet/filter2/predicate/TestFilterApiMethods/testFilterPredicateCreation()#org/apache/parquet/filter2/predicate/Operators/BinaryLogicalFilterPredicate/getLeft()
org/apache/parquet/filter2/predicate/TestFilterApiMethods/testSerializable()#org/apache/parquet/filter2/predicate/FilterApi/userDefined(org.apache.parquet.filter2.predicate.Operators.Column,U)
org/apache/parquet/filter2/predicate/TestFilterApiMethods/testSerializable()#org/apache/parquet/filter2/predicate/TestFilterApiMethods/IsMultipleOf/IsMultipleOf(long)
org/apache/parquet/filter2/predicate/TestFilterApiMethods/testSerializable()#org/apache/parquet/filter2/predicate/FilterApi/eq(C,T)
org/apache/parquet/filter2/predicate/TestFilterApiMethods/testSerializable()#java/io/ByteArrayInputStream/ByteArrayInputStream(byte[])
org/apache/parquet/filter2/predicate/TestFilterApiMethods/testSerializable()#java/io/ObjectInputStream/readObject()
org/apache/parquet/filter2/predicate/TestFilterApiMethods/testSerializable()#org/apache/parquet/filter2/predicate/FilterApi/or(org.apache.parquet.filter2.predicate.FilterPredicate,org.apache.parquet.filter2.predicate.FilterPredicate)
org/apache/parquet/filter2/predicate/TestFilterApiMethods/testSerializable()#org/apache/parquet/filter2/predicate/FilterApi/userDefined(org.apache.parquet.filter2.predicate.Operators.Column,java.lang.Class)
org/apache/parquet/filter2/predicate/TestFilterApiMethods/testSerializable()#java/io/ObjectOutputStream/writeObject(java.lang.Object)
org/apache/parquet/filter2/predicate/TestFilterApiMethods/testSerializable()#org/apache/parquet/io/api/Binary/fromString(java.lang.String)
org/apache/parquet/filter2/predicate/TestFilterApiMethods/testSerializable()#org/apache/parquet/filter2/predicate/FilterApi/and(org.apache.parquet.filter2.predicate.FilterPredicate,org.apache.parquet.filter2.predicate.FilterPredicate)
org/apache/parquet/filter2/predicate/TestFilterApiMethods/testSerializable()#java/io/ObjectInputStream/ObjectInputStream(java.io.InputStream)
org/apache/parquet/filter2/predicate/TestFilterApiMethods/testSerializable()#java/io/ByteArrayOutputStream/ByteArrayOutputStream()
org/apache/parquet/filter2/predicate/TestFilterApiMethods/testSerializable()#java/io/ObjectOutputStream/close()
org/apache/parquet/filter2/predicate/TestFilterApiMethods/testSerializable()#org/apache/parquet/filter2/predicate/FilterApi/binaryColumn(java.lang.String)
org/apache/parquet/filter2/predicate/TestFilterApiMethods/testSerializable()#java/io/ObjectOutputStream/ObjectOutputStream(java.io.OutputStream)
org/apache/parquet/filter2/predicate/TestFilterApiMethods/testSerializable()#java/io/ByteArrayOutputStream/toByteArray()
org/apache/parquet/filter2/predicate/TestFilterApiMethods/testUdp()#org/apache/parquet/filter2/predicate/FilterApi/eq(C,T)
org/apache/parquet/filter2/predicate/TestFilterApiMethods/testUdp()#org/apache/parquet/filter2/predicate/FilterApi/or(org.apache.parquet.filter2.predicate.FilterPredicate,org.apache.parquet.filter2.predicate.FilterPredicate)
org/apache/parquet/filter2/predicate/TestFilterApiMethods/testUdp()#org/apache/parquet/filter2/predicate/FilterApi/userDefined(org.apache.parquet.filter2.predicate.Operators.Column,java.lang.Class)
org/apache/parquet/filter2/predicate/TestFilterApiMethods/testUdp()#org/apache/parquet/filter2/predicate/Operators/UserDefinedByClass/getUserDefinedPredicateClass()
org/apache/parquet/filter2/predicate/TestFilterApiMethods/testUdp()#org/apache/parquet/filter2/predicate/Operators/BinaryLogicalFilterPredicate/getRight()
org/apache/parquet/filter2/predicate/TestFilterApiMethods/testUdp()#org/apache/parquet/filter2/predicate/Operators/UserDefined/getUserDefinedPredicate()
org/apache/parquet/bytes/BytesInput/ByteBufferBytesInput/toByteBuffer()#java/nio/Buffer/limit(int)
org/apache/parquet/bytes/BytesInput/ByteBufferBytesInput/toByteBuffer()#java/nio/Buffer/position(int)
org/apache/parquet/bytes/BytesInput/ByteBufferBytesInput/toByteBuffer()#java/nio/ByteBuffer/slice()
org/apache/parquet/bytes/BytesInput/ByteBufferBytesInput/writeAllTo(java.io.OutputStream)#java/nio/Buffer/limit(int)
org/apache/parquet/bytes/BytesInput/ByteBufferBytesInput/writeAllTo(java.io.OutputStream)#java/nio/channels/WritableByteChannel/write(java.nio.ByteBuffer)
org/apache/parquet/bytes/BytesInput/ByteBufferBytesInput/writeAllTo(java.io.OutputStream)#java/nio/channels/Channels/newChannel(java.io.OutputStream)
org/apache/parquet/bytes/BytesInput/ByteBufferBytesInput/writeAllTo(java.io.OutputStream)#java/nio/Buffer/position(int)
org/apache/parquet/bytes/BytesInput/ByteBufferBytesInput/writeAllTo(java.io.OutputStream)#java/nio/ByteBuffer/slice()
org/apache/parquet/pig/convert/TupleConverter/FieldByteArrayConverter/addBinary(org.apache.parquet.io.api.Binary)#org/apache/parquet/pig/convert/ParentValueContainer/add(java.lang.Object)
org/apache/parquet/pig/convert/TupleConverter/FieldByteArrayConverter/addBinary(org.apache.parquet.io.api.Binary)#org/apache/parquet/io/api/Binary/getBytes()
org/apache/parquet/column/impl/ColumnReaderImpl/initDataReader(org.apache.parquet.column.Encoding,java.nio.ByteBuffer,int,int)#org/apache/parquet/column/Encoding/getValuesReader(org.apache.parquet.column.ColumnDescriptor,org.apache.parquet.column.ValuesType)
org/apache/parquet/column/impl/ColumnReaderImpl/initDataReader(org.apache.parquet.column.Encoding,java.nio.ByteBuffer,int,int)#org/apache/parquet/column/values/RequiresPreviousReader/setPreviousReader(org.apache.parquet.column.values.ValuesReader)
org/apache/parquet/column/impl/ColumnReaderImpl/initDataReader(org.apache.parquet.column.Encoding,java.nio.ByteBuffer,int,int)#org/apache/parquet/column/ColumnDescriptor/getType()
org/apache/parquet/column/impl/ColumnReaderImpl/initDataReader(org.apache.parquet.column.Encoding,java.nio.ByteBuffer,int,int)#org/apache/parquet/column/values/ValuesReader/initFromPage(int,java.nio.ByteBuffer,int)
org/apache/parquet/column/impl/ColumnReaderImpl/initDataReader(org.apache.parquet.column.Encoding,java.nio.ByteBuffer,int,int)#org/apache/parquet/column/Encoding/usesDictionary()
org/apache/parquet/column/impl/ColumnReaderImpl/initDataReader(org.apache.parquet.column.Encoding,java.nio.ByteBuffer,int,int)#org/apache/parquet/column/impl/ColumnReaderImpl/bindToDictionary(org.apache.parquet.column.Dictionary)
org/apache/parquet/column/impl/ColumnReaderImpl/initDataReader(org.apache.parquet.column.Encoding,java.nio.ByteBuffer,int,int)#org/apache/parquet/column/impl/ColumnReaderImpl/bind(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/column/impl/ColumnReaderImpl/initDataReader(org.apache.parquet.column.Encoding,java.nio.ByteBuffer,int,int)#org/apache/parquet/CorruptDeltaByteArrays/requiresSequentialReads(org.apache.parquet.VersionParser.ParsedVersion,org.apache.parquet.column.Encoding)
org/apache/parquet/column/impl/ColumnReaderImpl/initDataReader(org.apache.parquet.column.Encoding,java.nio.ByteBuffer,int,int)#org/apache/parquet/io/api/PrimitiveConverter/hasDictionarySupport()
org/apache/parquet/column/impl/ColumnReaderImpl/initDataReader(org.apache.parquet.column.Encoding,java.nio.ByteBuffer,int,int)#org/apache/parquet/column/Encoding/getDictionaryBasedValuesReader(org.apache.parquet.column.ColumnDescriptor,org.apache.parquet.column.ValuesType,org.apache.parquet.column.Dictionary)
org/apache/parquet/column/impl/ColumnReaderImpl/initDataReader(org.apache.parquet.column.Encoding,java.nio.ByteBuffer,int,int)#org/apache/parquet/io/ParquetDecodingException/ParquetDecodingException(java.lang.String)
org/apache/parquet/column/impl/ColumnReaderImpl/initDataReader(org.apache.parquet.column.Encoding,java.nio.ByteBuffer,int,int)#org/apache/parquet/io/ParquetDecodingException/ParquetDecodingException(java.lang.String,java.lang.Throwable)
org/apache/parquet/column/impl/ColumnReaderImpl/checkRead()#org/apache/parquet/column/impl/ColumnReaderImpl/isPageFullyConsumed()
org/apache/parquet/column/impl/ColumnReaderImpl/checkRead()#org/apache/parquet/column/impl/ColumnReaderImpl/readPage()
org/apache/parquet/column/impl/ColumnReaderImpl/checkRead()#org/apache/parquet/column/impl/ColumnReaderImpl/isFullyConsumed()
org/apache/parquet/column/impl/ColumnReaderImpl/checkRead()#org/apache/parquet/column/impl/ColumnReaderImpl/readRepetitionAndDefinitionLevels()
org/apache/parquet/column/impl/ColumnReaderImpl/getCurrentValueDictionaryID()#org/apache/parquet/column/impl/ColumnReaderImpl/readValue()
org/apache/parquet/column/impl/ColumnReaderImpl/getCurrentValueDictionaryID()#org/apache/parquet/column/impl/ColumnReaderImpl/Binding/getDictionaryId()
org/apache/parquet/column/impl/ColumnReaderImpl/readPageV2(org.apache.parquet.column.page.DataPageV2)#org/apache/parquet/column/impl/ColumnReaderImpl/initDataReader(org.apache.parquet.column.Encoding,java.nio.ByteBuffer,int,int)
org/apache/parquet/column/impl/ColumnReaderImpl/readPageV2(org.apache.parquet.column.page.DataPageV2)#org/apache/parquet/column/page/DataPageV2/getDataEncoding()
org/apache/parquet/column/impl/ColumnReaderImpl/readPageV2(org.apache.parquet.column.page.DataPageV2)#org/apache/parquet/column/impl/ColumnReaderImpl/newRLEIterator(int,org.apache.parquet.bytes.BytesInput)
org/apache/parquet/column/impl/ColumnReaderImpl/readPageV2(org.apache.parquet.column.page.DataPageV2)#org/apache/parquet/column/page/DataPageV2/getRepetitionLevels()
org/apache/parquet/column/impl/ColumnReaderImpl/readPageV2(org.apache.parquet.column.page.DataPageV2)#org/apache/parquet/io/ParquetDecodingException/ParquetDecodingException(java.lang.String,java.lang.Throwable)
org/apache/parquet/column/impl/ColumnReaderImpl/readPageV2(org.apache.parquet.column.page.DataPageV2)#org/apache/parquet/bytes/BytesInput/size()
org/apache/parquet/column/impl/ColumnReaderImpl/readPageV2(org.apache.parquet.column.page.DataPageV2)#org/apache/parquet/bytes/BytesInput/toByteBuffer()
org/apache/parquet/column/impl/ColumnReaderImpl/readPageV2(org.apache.parquet.column.page.DataPageV2)#org/apache/parquet/column/page/DataPageV2/getData()
org/apache/parquet/column/impl/ColumnReaderImpl/readPageV2(org.apache.parquet.column.page.DataPageV2)#org/apache/parquet/column/ColumnDescriptor/getMaxDefinitionLevel()
org/apache/parquet/column/impl/ColumnReaderImpl/readPageV2(org.apache.parquet.column.page.DataPageV2)#org/apache/parquet/column/ColumnDescriptor/getMaxRepetitionLevel()
org/apache/parquet/column/impl/ColumnReaderImpl/readPageV2(org.apache.parquet.column.page.DataPageV2)#org/apache/parquet/column/page/DataPageV2/getDefinitionLevels()
org/apache/parquet/column/impl/ColumnReaderImpl/readPageV2(org.apache.parquet.column.page.DataPageV2)#org/apache/parquet/column/page/DataPage/getValueCount()
org/apache/parquet/column/impl/ColumnReaderImpl/getInteger()#org/apache/parquet/column/impl/ColumnReaderImpl/readValue()
org/apache/parquet/column/impl/ColumnReaderImpl/getInteger()#org/apache/parquet/column/impl/ColumnReaderImpl/Binding/getInteger()
org/apache/parquet/column/impl/ColumnReaderImpl/bindToDictionary(org.apache.parquet.column.Dictionary)#org/apache/parquet/column/impl/ColumnReaderImpl/bindToDictionary(org/apache/parquet/column/Dictionary)/$anonymous1/()
org/apache/parquet/column/impl/ColumnReaderImpl/bind(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)#org/apache/parquet/schema/PrimitiveType/PrimitiveTypeName/convert(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeNameConverter)
org/apache/parquet/column/impl/ColumnReaderImpl/bind(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)#org/apache/parquet/column/impl/ColumnReaderImpl/bind(org/apache/parquet/schema/PrimitiveType/PrimitiveTypeName)/$anonymous1/()
org/apache/parquet/column/impl/ColumnReaderImpl/getBinary()#org/apache/parquet/column/impl/ColumnReaderImpl/readValue()
org/apache/parquet/column/impl/ColumnReaderImpl/getBinary()#org/apache/parquet/column/impl/ColumnReaderImpl/Binding/getBinary()
org/apache/parquet/column/impl/ColumnReaderImpl/readValue()#org/apache/parquet/CorruptDeltaByteArrays/requiresSequentialReads(org.apache.parquet.VersionParser.ParsedVersion,org.apache.parquet.column.Encoding)
org/apache/parquet/column/impl/ColumnReaderImpl/readValue()#org/apache/parquet/column/impl/ColumnReaderImpl/Binding/read()
org/apache/parquet/column/impl/ColumnReaderImpl/readValue()#java/lang/String/format(java.lang.String,java.lang.Object[])
org/apache/parquet/column/impl/ColumnReaderImpl/readValue()#org/apache/parquet/io/ParquetDecodingException/ParquetDecodingException(java.lang.String,java.lang.Throwable)
org/apache/parquet/column/impl/ColumnReaderImpl/skip()#org/apache/parquet/column/impl/ColumnReaderImpl/Binding/skip()
org/apache/parquet/column/impl/ColumnReaderImpl/consume()#org/apache/parquet/column/impl/ColumnReaderImpl/checkRead()
org/apache/parquet/column/impl/ColumnReaderImpl/readPage()#org/apache/parquet/column/page/DataPage/accept(org.apache.parquet.column.page.DataPage.Visitor)
org/apache/parquet/column/impl/ColumnReaderImpl/readPage()#org/apache/parquet/column/impl/ColumnReaderImpl/readPage()/$anonymous1/()
org/apache/parquet/column/impl/ColumnReaderImpl/readPage()#org/apache/parquet/column/page/PageReader/readPage()
org/apache/parquet/column/impl/ColumnReaderImpl/getFloat()#org/apache/parquet/column/impl/ColumnReaderImpl/readValue()
org/apache/parquet/column/impl/ColumnReaderImpl/getFloat()#org/apache/parquet/column/impl/ColumnReaderImpl/Binding/getFloat()
org/apache/parquet/column/impl/ColumnReaderImpl/newRLEIterator(int,org.apache.parquet.bytes.BytesInput)#org/apache/parquet/bytes/BytesUtils/getWidthFromMaxInt(int)
org/apache/parquet/column/impl/ColumnReaderImpl/newRLEIterator(int,org.apache.parquet.bytes.BytesInput)#org/apache/parquet/column/impl/ColumnReaderImpl/RLEIntIterator/RLEIntIterator(org.apache.parquet.column.values.rle.RunLengthBitPackingHybridDecoder)
org/apache/parquet/column/impl/ColumnReaderImpl/newRLEIterator(int,org.apache.parquet.bytes.BytesInput)#org/apache/parquet/bytes/BytesInput/toInputStream()
org/apache/parquet/column/impl/ColumnReaderImpl/newRLEIterator(int,org.apache.parquet.bytes.BytesInput)#org/apache/parquet/column/impl/ColumnReaderImpl/NullIntIterator/NullIntIterator()
org/apache/parquet/column/impl/ColumnReaderImpl/newRLEIterator(int,org.apache.parquet.bytes.BytesInput)#org/apache/parquet/io/ParquetDecodingException/ParquetDecodingException(java.lang.String,java.lang.Throwable)
org/apache/parquet/column/impl/ColumnReaderImpl/newRLEIterator(int,org.apache.parquet.bytes.BytesInput)#org/apache/parquet/column/values/rle/RunLengthBitPackingHybridDecoder/RunLengthBitPackingHybridDecoder(int,java.io.InputStream)
org/apache/parquet/column/impl/ColumnReaderImpl/readPageV1(org.apache.parquet.column.page.DataPageV1)#org/apache/parquet/column/Encoding/getValuesReader(org.apache.parquet.column.ColumnDescriptor,org.apache.parquet.column.ValuesType)
org/apache/parquet/column/impl/ColumnReaderImpl/readPageV1(org.apache.parquet.column.page.DataPageV1)#org/apache/parquet/column/impl/ColumnReaderImpl/initDataReader(org.apache.parquet.column.Encoding,java.nio.ByteBuffer,int,int)
org/apache/parquet/column/impl/ColumnReaderImpl/readPageV1(org.apache.parquet.column.page.DataPageV1)#org/apache/parquet/column/values/ValuesReader/getNextOffset()
org/apache/parquet/column/impl/ColumnReaderImpl/readPageV1(org.apache.parquet.column.page.DataPageV1)#org/apache/parquet/io/ParquetDecodingException/ParquetDecodingException(java.lang.String,java.lang.Throwable)
org/apache/parquet/column/impl/ColumnReaderImpl/readPageV1(org.apache.parquet.column.page.DataPageV1)#org/apache/parquet/column/impl/ColumnReaderImpl/ValuesReaderIntIterator/ValuesReaderIntIterator(org.apache.parquet.column.values.ValuesReader)
org/apache/parquet/column/impl/ColumnReaderImpl/readPageV1(org.apache.parquet.column.page.DataPageV1)#org/apache/parquet/bytes/BytesInput/toByteBuffer()
org/apache/parquet/column/impl/ColumnReaderImpl/readPageV1(org.apache.parquet.column.page.DataPageV1)#org/apache/parquet/column/page/DataPageV1/getRlEncoding()
org/apache/parquet/column/impl/ColumnReaderImpl/readPageV1(org.apache.parquet.column.page.DataPageV1)#org/apache/parquet/column/values/ValuesReader/initFromPage(int,java.nio.ByteBuffer,int)
org/apache/parquet/column/impl/ColumnReaderImpl/readPageV1(org.apache.parquet.column.page.DataPageV1)#org/apache/parquet/column/page/DataPageV1/getDlEncoding()
org/apache/parquet/column/impl/ColumnReaderImpl/readPageV1(org.apache.parquet.column.page.DataPageV1)#org/apache/parquet/column/page/DataPageV1/getValueEncoding()
org/apache/parquet/column/impl/ColumnReaderImpl/readPageV1(org.apache.parquet.column.page.DataPageV1)#java/nio/Buffer/remaining()
org/apache/parquet/column/impl/ColumnReaderImpl/readPageV1(org.apache.parquet.column.page.DataPageV1)#org/apache/parquet/column/page/DataPage/getValueCount()
org/apache/parquet/column/impl/ColumnReaderImpl/readPageV1(org.apache.parquet.column.page.DataPageV1)#org/apache/parquet/column/page/DataPageV1/getBytes()
org/apache/parquet/column/impl/ColumnReaderImpl/getDouble()#org/apache/parquet/column/impl/ColumnReaderImpl/readValue()
org/apache/parquet/column/impl/ColumnReaderImpl/getDouble()#org/apache/parquet/column/impl/ColumnReaderImpl/Binding/getDouble()
org/apache/parquet/column/impl/ColumnReaderImpl/writeCurrentValueToConverter()#org/apache/parquet/column/impl/ColumnReaderImpl/Binding/writeValue()
org/apache/parquet/column/impl/ColumnReaderImpl/writeCurrentValueToConverter()#org/apache/parquet/column/impl/ColumnReaderImpl/readValue()
org/apache/parquet/column/impl/ColumnReaderImpl/getBoolean()#org/apache/parquet/column/impl/ColumnReaderImpl/Binding/getBoolean()
org/apache/parquet/column/impl/ColumnReaderImpl/getBoolean()#org/apache/parquet/column/impl/ColumnReaderImpl/readValue()
org/apache/parquet/column/impl/ColumnReaderImpl/getLong()#org/apache/parquet/column/impl/ColumnReaderImpl/readValue()
org/apache/parquet/column/impl/ColumnReaderImpl/getLong()#org/apache/parquet/column/impl/ColumnReaderImpl/Binding/getLong()
org/apache/parquet/column/impl/ColumnReaderImpl/readRepetitionAndDefinitionLevels()#org/apache/parquet/column/impl/ColumnReaderImpl/IntIterator/nextInt()
org/apache/parquet/thrift/ThriftRecordConverter/ElementConverter/getConverter(int)#org/apache/parquet/Preconditions/checkArgument(boolean,java.lang.String,java.lang.Object[])
org/apache/parquet/thrift/struct/ThriftType/EnumType/getEnumValueById(int)#java/util/Map/get(java.lang.Object)
org/apache/parquet/thrift/struct/ThriftType/EnumType/getEnumValueById(int)#org/apache/parquet/thrift/struct/ThriftType/EnumType/prepareEnumLookUp()
org/apache/parquet/thrift/struct/ThriftType/EnumType/hashCode()#java/util/List/hashCode()
org/apache/parquet/thrift/struct/ThriftType/EnumType/hashCode()#org/apache/parquet/thrift/struct/ThriftType/hashCode()
org/apache/parquet/thrift/struct/ThriftType/EnumType/accept(org.apache.parquet.thrift.struct.ThriftType.StateVisitor,S)#org/apache/parquet/thrift/struct/ThriftType/StateVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.EnumType,S)
org/apache/parquet/thrift/struct/ThriftType/EnumType/accept(org.apache.parquet.thrift.struct.ThriftType.TypeVisitor)#org/apache/parquet/thrift/struct/ThriftType/TypeVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.EnumType)
org/apache/parquet/thrift/struct/ThriftType/EnumType/prepareEnumLookUp()#org/apache/parquet/thrift/struct/ThriftType/EnumValue/getId()
org/apache/parquet/thrift/struct/ThriftType/EnumType/prepareEnumLookUp()#java/util/HashMap/HashMap()
org/apache/parquet/thrift/struct/ThriftType/EnumType/prepareEnumLookUp()#java/util/Map/put(K,V)
org/apache/parquet/thrift/struct/ThriftType/EnumType/equals(java.lang.Object)#org/apache/parquet/thrift/struct/ThriftType/equals(java.lang.Object)
org/apache/parquet/thrift/struct/ThriftType/EnumType/equals(java.lang.Object)#java/util/List/equals(java.lang.Object)
org/apache/parquet/thrift/struct/ThriftType/EnumType/getValues()#org/apache/parquet/thrift/struct/ThriftType/EnumType/getValues()/$anonymous1/()
org/apache/parquet/column/values/dictionary/PlainValuesDictionary/PlainBinaryDictionary/toString()#java/lang/StringBuilder/append(java.lang.String)
org/apache/parquet/column/values/dictionary/PlainValuesDictionary/PlainBinaryDictionary/toString()#java/lang/StringBuilder/append(int)
org/apache/parquet/column/values/dictionary/PlainValuesDictionary/PlainBinaryDictionary/toString()#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/apache/parquet/column/values/dictionary/PlainValuesDictionary/PlainBinaryDictionary/toString()#java/lang/StringBuilder/append(java.lang.Object)
org/apache/parquet/column/values/dictionary/PlainValuesDictionary/PlainBinaryDictionary/toString()#java/lang/StringBuilder/toString()
org/apache/parquet/cascading/TupleReadSupport/init(org.apache.parquet.hadoop.Configuration,java.util.Map,org.apache.parquet.schema.MessageType)#org/apache/parquet/cascading/SchemaIntersection/getRequestedSchema()
org/apache/parquet/cascading/TupleReadSupport/init(org.apache.parquet.hadoop.Configuration,java.util.Map,org.apache.parquet.schema.MessageType)#org/apache/parquet/hadoop/api/ReadSupport/ReadContext/ReadContext(org.apache.parquet.schema.MessageType)
org/apache/parquet/cascading/TupleReadSupport/init(org.apache.parquet.hadoop.Configuration,java.util.Map,org.apache.parquet.schema.MessageType)#org/apache/parquet/cascading/TupleReadSupport/getRequestedFields(org.apache.parquet.hadoop.Configuration)
org/apache/parquet/cascading/TupleReadSupport/init(org.apache.parquet.hadoop.Configuration,java.util.Map,org.apache.parquet.schema.MessageType)#org/apache/parquet/cascading/SchemaIntersection/SchemaIntersection(org.apache.parquet.schema.MessageType,org.apache.parquet.cascading.Fields)
org/apache/parquet/cascading/TupleReadSupport/prepareForRead(org.apache.parquet.hadoop.Configuration,java.util.Map,org.apache.parquet.schema.MessageType,org.apache.parquet.hadoop.api.ReadSupport.ReadContext)#org/apache/parquet/hadoop/api/ReadSupport/ReadContext/getRequestedSchema()
org/apache/parquet/cascading/TupleReadSupport/prepareForRead(org.apache.parquet.hadoop.Configuration,java.util.Map,org.apache.parquet.schema.MessageType,org.apache.parquet.hadoop.api.ReadSupport.ReadContext)#org/apache/parquet/cascading/convert/TupleRecordMaterializer/TupleRecordMaterializer(org.apache.parquet.schema.GroupType)
org/apache/hadoop/hive/ql/io/parquet/TestHiveSchemaConverter/createHiveColumnsFrom(java.lang.String)#java/util/ArrayList/ArrayList()
org/apache/hadoop/hive/ql/io/parquet/TestHiveSchemaConverter/createHiveColumnsFrom(java.lang.String)#java/lang/String/split(java.lang.String)
org/apache/hadoop/hive/ql/io/parquet/TestHiveSchemaConverter/createHiveColumnsFrom(java.lang.String)#java/lang/String/length()
org/apache/hadoop/hive/ql/io/parquet/TestHiveSchemaConverter/createHiveColumnsFrom(java.lang.String)#java/util/Arrays/asList(T[])
org/apache/hadoop/hive/ql/io/parquet/TestHiveSchemaConverter/testSimpleType()#org/apache/hadoop/hive/ql/io/parquet/TestHiveSchemaConverter/testConversion(java.lang.String,java.lang.String,java.lang.String)
org/apache/hadoop/hive/ql/io/parquet/TestHiveSchemaConverter/testConversion(java.lang.String,java.lang.String,java.lang.String)#org/apache/hadoop/hive/ql/io/parquet/TestHiveSchemaConverter/createHiveTypeInfoFrom(java.lang.String)
org/apache/hadoop/hive/ql/io/parquet/TestHiveSchemaConverter/testConversion(java.lang.String,java.lang.String,java.lang.String)#org/apache/hadoop/hive/ql/io/parquet/TestHiveSchemaConverter/createHiveColumnsFrom(java.lang.String)
org/apache/hadoop/hive/ql/io/parquet/TestHiveSchemaConverter/testConversion(java.lang.String,java.lang.String,java.lang.String)#org/apache/hadoop/hive/ql/io/parquet/convert/HiveSchemaConverter/convert(java.util.List,java.util.List)
org/apache/hadoop/hive/ql/io/parquet/TestHiveSchemaConverter/testConversion(java.lang.String,java.lang.String,java.lang.String)#org/apache/parquet/schema/MessageTypeParser/parseMessageType(java.lang.String)
org/apache/hadoop/hive/ql/io/parquet/TestHiveSchemaConverter/testStruct()#org/apache/hadoop/hive/ql/io/parquet/TestHiveSchemaConverter/testConversion(java.lang.String,java.lang.String,java.lang.String)
org/apache/hadoop/hive/ql/io/parquet/TestHiveSchemaConverter/testArray()#org/apache/hadoop/hive/ql/io/parquet/TestHiveSchemaConverter/testConversion(java.lang.String,java.lang.String,java.lang.String)
org/apache/hadoop/hive/ql/io/parquet/TestHiveSchemaConverter/testMap()#org/apache/hadoop/hive/ql/io/parquet/TestHiveSchemaConverter/testConversion(java.lang.String,java.lang.String,java.lang.String)
org/apache/hadoop/hive/ql/io/parquet/TestHiveSchemaConverter/testMapOriginalType()#org/apache/hadoop/hive/ql/io/parquet/TestHiveSchemaConverter/createHiveTypeInfoFrom(java.lang.String)
org/apache/hadoop/hive/ql/io/parquet/TestHiveSchemaConverter/testMapOriginalType()#org/apache/hadoop/hive/ql/io/parquet/convert/HiveSchemaConverter/convert(java.util.List,java.util.List)
org/apache/hadoop/hive/ql/io/parquet/TestHiveSchemaConverter/testMapOriginalType()#org/apache/parquet/schema/GroupType/getFieldCount()
org/apache/hadoop/hive/ql/io/parquet/TestHiveSchemaConverter/testMapOriginalType()#org/apache/parquet/schema/Type/getName()
org/apache/hadoop/hive/ql/io/parquet/TestHiveSchemaConverter/testMapOriginalType()#org/apache/parquet/schema/Type/getOriginalType()
org/apache/hadoop/hive/ql/io/parquet/TestHiveSchemaConverter/testMapOriginalType()#org/apache/hadoop/hive/ql/io/parquet/TestHiveSchemaConverter/createHiveColumnsFrom(java.lang.String)
org/apache/hadoop/hive/ql/io/parquet/TestHiveSchemaConverter/testMapOriginalType()#org/apache/parquet/schema/Type/asGroupType()
org/apache/hadoop/hive/ql/io/parquet/TestHiveSchemaConverter/testMapOriginalType()#org/apache/parquet/schema/Type/getRepetition()
org/apache/hadoop/hive/ql/io/parquet/TestHiveSchemaConverter/testMapOriginalType()#org/apache/parquet/schema/GroupType/getFields()
org/apache/hadoop/hive/ql/io/parquet/TestHiveSchemaConverter/testMapOriginalType()#java/util/List/get(int)
org/apache/hadoop/hive/ql/io/parquet/TestHiveSchemaConverter/createHiveTypeInfoFrom(java.lang.String)#java/util/ArrayList/ArrayList()
org/apache/hadoop/hive/ql/io/parquet/TestHiveSchemaConverter/createHiveTypeInfoFrom(java.lang.String)#java/lang/String/length()
org/apache/parquet/filter2/compat/FilterCompat/UnboundRecordFilterCompat/accept(org.apache.parquet.filter2.compat.FilterCompat.Visitor)#org/apache/parquet/filter2/compat/FilterCompat/Visitor/visit(org.apache.parquet.filter2.compat.FilterCompat.UnboundRecordFilterCompat)
org/apache/parquet/example/data/simple/BinaryValue/writeValue(org.apache.parquet.io.api.RecordConsumer)#org/apache/parquet/io/api/RecordConsumer/addBinary(org.apache.parquet.io.api.Binary)
org/apache/parquet/example/data/simple/BinaryValue/getString()#org/apache/parquet/io/api/Binary/toStringUsingUTF8()
org/apache/parquet/example/data/simple/BinaryValue/toString()#org/apache/parquet/example/data/simple/BinaryValue/getString()
org/apache/parquet/filter2/predicate/SchemaCompatibilityValidator/visit(org.apache.parquet.filter2.predicate.Operators.Not)#org/apache/parquet/filter2/predicate/FilterPredicate/accept(org.apache.parquet.filter2.predicate.FilterPredicate.Visitor)
org/apache/parquet/filter2/predicate/SchemaCompatibilityValidator/visit(org.apache.parquet.filter2.predicate.Operators.Not)#org/apache/parquet/filter2/predicate/Operators/Not/getPredicate()
org/apache/parquet/filter2/predicate/SchemaCompatibilityValidator/visit(org.apache.parquet.filter2.predicate.Operators.Gt)#org/apache/parquet/filter2/predicate/SchemaCompatibilityValidator/validateColumnFilterPredicate(org.apache.parquet.filter2.predicate.Operators.ColumnFilterPredicate)
org/apache/parquet/filter2/predicate/SchemaCompatibilityValidator/visit(org.apache.parquet.filter2.predicate.Operators.Eq)#org/apache/parquet/filter2/predicate/SchemaCompatibilityValidator/validateColumnFilterPredicate(org.apache.parquet.filter2.predicate.Operators.ColumnFilterPredicate)
org/apache/parquet/filter2/predicate/SchemaCompatibilityValidator/visit(org.apache.parquet.filter2.predicate.Operators.Lt)#org/apache/parquet/filter2/predicate/SchemaCompatibilityValidator/validateColumnFilterPredicate(org.apache.parquet.filter2.predicate.Operators.ColumnFilterPredicate)
org/apache/parquet/filter2/predicate/SchemaCompatibilityValidator/visit(org.apache.parquet.filter2.predicate.Operators.Or)#org/apache/parquet/filter2/predicate/FilterPredicate/accept(org.apache.parquet.filter2.predicate.FilterPredicate.Visitor)
org/apache/parquet/filter2/predicate/SchemaCompatibilityValidator/visit(org.apache.parquet.filter2.predicate.Operators.Or)#org/apache/parquet/filter2/predicate/Operators/BinaryLogicalFilterPredicate/getRight()
org/apache/parquet/filter2/predicate/SchemaCompatibilityValidator/visit(org.apache.parquet.filter2.predicate.Operators.Or)#org/apache/parquet/filter2/predicate/Operators/BinaryLogicalFilterPredicate/getLeft()
org/apache/parquet/filter2/predicate/SchemaCompatibilityValidator/validateColumnFilterPredicate(org.apache.parquet.filter2.predicate.Operators.ColumnFilterPredicate)#org/apache/parquet/filter2/predicate/Operators/ColumnFilterPredicate/getColumn()
org/apache/parquet/filter2/predicate/SchemaCompatibilityValidator/validateColumnFilterPredicate(org.apache.parquet.filter2.predicate.Operators.ColumnFilterPredicate)#org/apache/parquet/filter2/predicate/SchemaCompatibilityValidator/validateColumn(org.apache.parquet.filter2.predicate.Operators.Column)
org/apache/parquet/filter2/predicate/SchemaCompatibilityValidator/visit(org.apache.parquet.filter2.predicate.Operators.NotEq)#org/apache/parquet/filter2/predicate/SchemaCompatibilityValidator/validateColumnFilterPredicate(org.apache.parquet.filter2.predicate.Operators.ColumnFilterPredicate)
org/apache/parquet/filter2/predicate/SchemaCompatibilityValidator/visit(org.apache.parquet.filter2.predicate.Operators.UserDefined)#org/apache/parquet/filter2/predicate/SchemaCompatibilityValidator/validateColumn(org.apache.parquet.filter2.predicate.Operators.Column)
org/apache/parquet/filter2/predicate/SchemaCompatibilityValidator/visit(org.apache.parquet.filter2.predicate.Operators.UserDefined)#org/apache/parquet/filter2/predicate/Operators/UserDefined/getColumn()
org/apache/parquet/filter2/predicate/SchemaCompatibilityValidator/visit(org.apache.parquet.filter2.predicate.Operators.GtEq)#org/apache/parquet/filter2/predicate/SchemaCompatibilityValidator/validateColumnFilterPredicate(org.apache.parquet.filter2.predicate.Operators.ColumnFilterPredicate)
org/apache/parquet/filter2/predicate/SchemaCompatibilityValidator/validate(org.apache.parquet.filter2.predicate.FilterPredicate,org.apache.parquet.schema.MessageType)#org/apache/parquet/filter2/predicate/FilterPredicate/accept(org.apache.parquet.filter2.predicate.FilterPredicate.Visitor)
org/apache/parquet/filter2/predicate/SchemaCompatibilityValidator/validate(org.apache.parquet.filter2.predicate.FilterPredicate,org.apache.parquet.schema.MessageType)#org/apache/parquet/Preconditions/checkNotNull(T,java.lang.String)
org/apache/parquet/filter2/predicate/SchemaCompatibilityValidator/validate(org.apache.parquet.filter2.predicate.FilterPredicate,org.apache.parquet.schema.MessageType)#org/apache/parquet/filter2/predicate/SchemaCompatibilityValidator/SchemaCompatibilityValidator(org.apache.parquet.schema.MessageType)
org/apache/parquet/filter2/predicate/SchemaCompatibilityValidator/validateColumn(org.apache.parquet.filter2.predicate.Operators.Column)#java/lang/Object/equals(java.lang.Object)
org/apache/parquet/filter2/predicate/SchemaCompatibilityValidator/validateColumn(org.apache.parquet.filter2.predicate.Operators.Column)#org/apache/parquet/filter2/predicate/Operators/Column/getColumnType()
org/apache/parquet/filter2/predicate/SchemaCompatibilityValidator/validateColumn(org.apache.parquet.filter2.predicate.Operators.Column)#org/apache/parquet/column/ColumnDescriptor/getType()
org/apache/parquet/filter2/predicate/SchemaCompatibilityValidator/validateColumn(org.apache.parquet.filter2.predicate.Operators.Column)#java/util/Map/get(java.lang.Object)
org/apache/parquet/filter2/predicate/SchemaCompatibilityValidator/validateColumn(org.apache.parquet.filter2.predicate.Operators.Column)#org/apache/parquet/hadoop/metadata/ColumnPath/toDotString()
org/apache/parquet/filter2/predicate/SchemaCompatibilityValidator/validateColumn(org.apache.parquet.filter2.predicate.Operators.Column)#org/apache/parquet/filter2/predicate/Operators/Column/getColumnPath()
org/apache/parquet/filter2/predicate/SchemaCompatibilityValidator/validateColumn(org.apache.parquet.filter2.predicate.Operators.Column)#org/apache/parquet/filter2/predicate/ValidTypeMap/assertTypeValid(org.apache.parquet.filter2.predicate.Operators.Column,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/filter2/predicate/SchemaCompatibilityValidator/validateColumn(org.apache.parquet.filter2.predicate.Operators.Column)#org/apache/parquet/filter2/predicate/SchemaCompatibilityValidator/getColumnDescriptor(org.apache.parquet.hadoop.metadata.ColumnPath)
org/apache/parquet/filter2/predicate/SchemaCompatibilityValidator/validateColumn(org.apache.parquet.filter2.predicate.Operators.Column)#org/apache/parquet/column/ColumnDescriptor/getMaxRepetitionLevel()
org/apache/parquet/filter2/predicate/SchemaCompatibilityValidator/validateColumn(org.apache.parquet.filter2.predicate.Operators.Column)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/parquet/filter2/predicate/SchemaCompatibilityValidator/validateColumn(org.apache.parquet.filter2.predicate.Operators.Column)#java/util/Map/put(K,V)
org/apache/parquet/filter2/predicate/SchemaCompatibilityValidator/getColumnDescriptor(org.apache.parquet.hadoop.metadata.ColumnPath)#java/util/Map/get(java.lang.Object)
org/apache/parquet/filter2/predicate/SchemaCompatibilityValidator/visit(org.apache.parquet.filter2.predicate.Operators.And)#org/apache/parquet/filter2/predicate/FilterPredicate/accept(org.apache.parquet.filter2.predicate.FilterPredicate.Visitor)
org/apache/parquet/filter2/predicate/SchemaCompatibilityValidator/visit(org.apache.parquet.filter2.predicate.Operators.And)#org/apache/parquet/filter2/predicate/Operators/BinaryLogicalFilterPredicate/getRight()
org/apache/parquet/filter2/predicate/SchemaCompatibilityValidator/visit(org.apache.parquet.filter2.predicate.Operators.And)#org/apache/parquet/filter2/predicate/Operators/BinaryLogicalFilterPredicate/getLeft()
org/apache/parquet/filter2/predicate/SchemaCompatibilityValidator/visit(org.apache.parquet.filter2.predicate.Operators.LtEq)#org/apache/parquet/filter2/predicate/SchemaCompatibilityValidator/validateColumnFilterPredicate(org.apache.parquet.filter2.predicate.Operators.ColumnFilterPredicate)
org/apache/parquet/filter2/predicate/SchemaCompatibilityValidator/visit(org.apache.parquet.filter2.predicate.Operators.LogicalNotUserDefined)#org/apache/parquet/filter2/predicate/Operators/UserDefined/accept(org.apache.parquet.filter2.predicate.FilterPredicate.Visitor)
org/apache/parquet/filter2/predicate/SchemaCompatibilityValidator/visit(org.apache.parquet.filter2.predicate.Operators.LogicalNotUserDefined)#org/apache/parquet/filter2/predicate/Operators/LogicalNotUserDefined/getUserDefined()
org/apache/parquet/pig/TestParquetLoader/testNullPadding()#java/util/ArrayList/ArrayList()
org/apache/parquet/pig/TestParquetLoader/testNullPadding()#java/lang/Class/getName()
org/apache/parquet/pig/TestParquetLoader/testNullPadding()#java/lang/Object/Object()
org/apache/parquet/pig/TestParquetLoader/testPredicatePushdown()#java/util/ArrayList/ArrayList()
org/apache/parquet/pig/TestParquetLoader/testPredicatePushdown()#java/lang/Class/getName()
org/apache/parquet/pig/TestParquetLoader/testPredicatePushdown()#java/lang/Object/Object()
org/apache/parquet/pig/TestParquetLoader/testSchema()#org/apache/parquet/pig/ParquetLoader/ParquetLoader(java.lang.String)
org/apache/parquet/pig/TestParquetLoader/testSchema()#org/apache/parquet/pig/TupleReadSupport/getPigSchema(org.apache.parquet.hadoop.Configuration)
org/apache/parquet/pig/TestParquetLoader/testSchema()#java/util/Arrays/asList(T[])
org/apache/parquet/pig/TestParquetLoader/testSchema()#org/apache/parquet/pig/ParquetLoader/pushProjection(org.apache.parquet.pig.RequiredFieldList)
org/apache/parquet/pig/TestParquetLoader/testSchema()#java/lang/Object/Object()
org/apache/parquet/pig/TestParquetLoader/testSchema()#org/apache/parquet/pig/ParquetLoader/getSchema(java.lang.String,org.apache.parquet.hadoop.Job)
org/apache/parquet/pig/TestParquetLoader/testSchema()#org/apache/parquet/pig/ParquetLoader/setLocation(java.lang.String,org.apache.parquet.hadoop.Job)
org/apache/parquet/pig/TestParquetLoader/testColumnIndexAccess()#java/util/ArrayList/ArrayList()
org/apache/parquet/pig/TestParquetLoader/testColumnIndexAccess()#java/lang/Class/getName()
org/apache/parquet/pig/TestParquetLoader/testColumnIndexAccess()#java/lang/Object/Object()
org/apache/parquet/pig/TestParquetLoader/testProjectionPushdown()#java/util/ArrayList/ArrayList()
org/apache/parquet/pig/TestParquetLoader/testProjectionPushdown()#java/lang/Class/getName()
org/apache/parquet/pig/TestParquetLoader/testProjectionPushdown()#java/lang/Object/Object()
org/apache/parquet/pig/TestParquetLoader/testReqestedSchemaColumnPruning()#java/util/ArrayList/ArrayList()
org/apache/parquet/pig/TestParquetLoader/testReqestedSchemaColumnPruning()#java/lang/Class/getName()
org/apache/parquet/pig/TestParquetLoader/testReqestedSchemaColumnPruning()#java/lang/Object/Object()
org/apache/parquet/pig/TestParquetLoader/testTypePersuasion()#java/lang/Boolean/toString()
org/apache/parquet/pig/TestParquetLoader/testTypePersuasion()#java/util/ArrayList/ArrayList()
org/apache/parquet/pig/TestParquetLoader/testTypePersuasion()#java/util/Properties/setProperty(java.lang.String,java.lang.String)
org/apache/parquet/pig/TestParquetLoader/testTypePersuasion()#java/io/PrintStream/println(java.lang.String)
org/apache/parquet/pig/TestParquetLoader/testTypePersuasion()#java/lang/Integer/toString(int)
org/apache/parquet/pig/TestParquetLoader/testTypePersuasion()#java/lang/Object/Object()
org/apache/parquet/pig/TestParquetLoader/testTypePersuasion()#java/util/Properties/Properties()
org/apache/parquet/pig/TestParquetLoader/testTypePersuasion()#java/lang/Class/getName()
org/apache/parquet/pig/TestParquetLoader/testColumnIndexAccessProjection()#java/util/ArrayList/ArrayList()
org/apache/parquet/pig/TestParquetLoader/testColumnIndexAccessProjection()#java/lang/Class/getName()
org/apache/parquet/pig/TestParquetLoader/testColumnIndexAccessProjection()#java/lang/Object/Object()
org/apache/parquet/hadoop/metadata/ColumnChunkProperties/get(org.apache.parquet.hadoop.metadata.ColumnPath,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.hadoop.metadata.CompressionCodecName,java.util.Set)#org/apache/parquet/hadoop/metadata/Canonicalizer/canonicalize(T)
org/apache/parquet/hadoop/metadata/ColumnChunkProperties/get(org.apache.parquet.hadoop.metadata.ColumnPath,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.hadoop.metadata.CompressionCodecName,java.util.Set)#org/apache/parquet/hadoop/metadata/ColumnChunkProperties/ColumnChunkProperties(org.apache.parquet.hadoop.metadata.CompressionCodecName,org.apache.parquet.hadoop.metadata.ColumnPath,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,java.util.Set)
org/apache/parquet/hadoop/metadata/ColumnChunkProperties/hashCode()#org/apache/parquet/hadoop/metadata/ColumnPath/hashCode()
org/apache/parquet/hadoop/metadata/ColumnChunkProperties/hashCode()#java/util/Set/toArray()
org/apache/parquet/hadoop/metadata/ColumnChunkProperties/hashCode()#java/lang/Enum/hashCode()
org/apache/parquet/hadoop/metadata/ColumnChunkProperties/hashCode()#java/util/Arrays/hashCode(java.lang.Object[])
org/apache/parquet/hadoop/metadata/ColumnChunkProperties/equals(java.util.Set,java.util.Set)#java/util/Set/size()
org/apache/parquet/hadoop/metadata/ColumnChunkProperties/equals(java.util.Set,java.util.Set)#java/util/Set/containsAll(java.util.Collection)
org/apache/parquet/hadoop/metadata/ColumnChunkProperties/equals(java.lang.Object)#org/apache/parquet/hadoop/metadata/ColumnChunkProperties/equals(java.util.Set,java.util.Set)
org/apache/parquet/hadoop/metadata/ColumnChunkProperties/equals(java.lang.Object)#org/apache/parquet/hadoop/metadata/ColumnPath/equals(java.lang.Object)
org/apache/parquet/statistics/TestStatistics/PageStatsValidator/validate(org.apache.parquet.schema.MessageType,org.apache.parquet.column.page.PageReadStore)#org/apache/parquet/column/page/PageReader/readPage()
org/apache/parquet/statistics/TestStatistics/PageStatsValidator/validate(org.apache.parquet.schema.MessageType,org.apache.parquet.column.page.PageReadStore)#org/apache/parquet/column/page/PageReadStore/getPageReader(org.apache.parquet.column.ColumnDescriptor)
org/apache/parquet/statistics/TestStatistics/PageStatsValidator/validate(org.apache.parquet.schema.MessageType,org.apache.parquet.column.page.PageReadStore)#org/apache/parquet/schema/MessageType/getColumns()
org/apache/parquet/statistics/TestStatistics/PageStatsValidator/validate(org.apache.parquet.schema.MessageType,org.apache.parquet.column.page.PageReadStore)#org/apache/parquet/column/page/PageReader/readDictionaryPage()
org/apache/parquet/statistics/TestStatistics/PageStatsValidator/validate(org.apache.parquet.schema.MessageType,org.apache.parquet.column.page.PageReadStore)#org/apache/parquet/statistics/TestStatistics/PageStatsValidator/validateStatsForPage(org.apache.parquet.column.page.DataPage,org.apache.parquet.column.page.DictionaryPage,org.apache.parquet.column.ColumnDescriptor)
org/apache/parquet/statistics/TestStatistics/PageStatsValidator/validateStatsForPage(org.apache.parquet.column.page.DataPage,org.apache.parquet.column.page.DictionaryPage,org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/impl/ColumnReaderImpl/ColumnReaderImpl(org.apache.parquet.column.ColumnDescriptor,org.apache.parquet.column.page.PageReader,org.apache.parquet.io.api.PrimitiveConverter,org.apache.parquet.VersionParser.ParsedVersion)
org/apache/parquet/statistics/TestStatistics/PageStatsValidator/validateStatsForPage(org.apache.parquet.column.page.DataPage,org.apache.parquet.column.page.DictionaryPage,org.apache.parquet.column.ColumnDescriptor)#java/lang/String/valueOf(java.lang.Object)
org/apache/parquet/statistics/TestStatistics/PageStatsValidator/validateStatsForPage(org.apache.parquet.column.page.DataPage,org.apache.parquet.column.page.DictionaryPage,org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/impl/ColumnReaderImpl/consume()
org/apache/parquet/statistics/TestStatistics/PageStatsValidator/validateStatsForPage(org.apache.parquet.column.page.DataPage,org.apache.parquet.column.page.DictionaryPage,org.apache.parquet.column.ColumnDescriptor)#java/lang/String/format(java.lang.String,java.lang.Object[])
org/apache/parquet/statistics/TestStatistics/PageStatsValidator/validateStatsForPage(org.apache.parquet.column.page.DataPage,org.apache.parquet.column.page.DictionaryPage,org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/statistics/TestStatistics/getValidatingConverter(org.apache.parquet.column.page.DataPage,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/statistics/TestStatistics/PageStatsValidator/validateStatsForPage(org.apache.parquet.column.page.DataPage,org.apache.parquet.column.page.DictionaryPage,org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/statistics/Statistics/getNumNulls()
org/apache/parquet/statistics/TestStatistics/PageStatsValidator/validateStatsForPage(org.apache.parquet.column.page.DataPage,org.apache.parquet.column.page.DictionaryPage,org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/ColumnDescriptor/getPath()
org/apache/parquet/statistics/TestStatistics/PageStatsValidator/validateStatsForPage(org.apache.parquet.column.page.DataPage,org.apache.parquet.column.page.DictionaryPage,org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/statistics/TestStatistics/getStatisticsFromPageHeader(org.apache.parquet.column.page.DataPage)
org/apache/parquet/statistics/TestStatistics/PageStatsValidator/validateStatsForPage(org.apache.parquet.column.page.DataPage,org.apache.parquet.column.page.DictionaryPage,org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/statistics/TestStatistics/SingletonPageReader/SingletonPageReader(org.apache.parquet.column.page.DictionaryPage,org.apache.parquet.column.page.DataPage)
org/apache/parquet/statistics/TestStatistics/PageStatsValidator/validateStatsForPage(org.apache.parquet.column.page.DataPage,org.apache.parquet.column.page.DictionaryPage,org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/statistics/Statistics/genericGetMin()
org/apache/parquet/statistics/TestStatistics/PageStatsValidator/validateStatsForPage(org.apache.parquet.column.page.DataPage,org.apache.parquet.column.page.DictionaryPage,org.apache.parquet.column.ColumnDescriptor)#java/util/Arrays/toString(java.lang.Object[])
org/apache/parquet/statistics/TestStatistics/PageStatsValidator/validateStatsForPage(org.apache.parquet.column.page.DataPage,org.apache.parquet.column.page.DictionaryPage,org.apache.parquet.column.ColumnDescriptor)#java/io/PrintStream/println(java.lang.String)
org/apache/parquet/statistics/TestStatistics/PageStatsValidator/validateStatsForPage(org.apache.parquet.column.page.DataPage,org.apache.parquet.column.page.DictionaryPage,org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/ColumnDescriptor/getType()
org/apache/parquet/statistics/TestStatistics/PageStatsValidator/validateStatsForPage(org.apache.parquet.column.page.DataPage,org.apache.parquet.column.page.DictionaryPage,org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/impl/ColumnReaderImpl/writeCurrentValueToConverter()
org/apache/parquet/statistics/TestStatistics/PageStatsValidator/validateStatsForPage(org.apache.parquet.column.page.DataPage,org.apache.parquet.column.page.DictionaryPage,org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/statistics/Statistics/isEmpty()
org/apache/parquet/statistics/TestStatistics/PageStatsValidator/validateStatsForPage(org.apache.parquet.column.page.DataPage,org.apache.parquet.column.page.DictionaryPage,org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/statistics/Statistics/genericGetMax()
org/apache/parquet/statistics/TestStatistics/PageStatsValidator/validateStatsForPage(org.apache.parquet.column.page.DataPage,org.apache.parquet.column.page.DictionaryPage,org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/statistics/TestStatistics/SingletonPageReader/getTotalValueCount()
org/apache/parquet/statistics/TestStatistics/PageStatsValidator/validateStatsForPage(org.apache.parquet.column.page.DataPage,org.apache.parquet.column.page.DictionaryPage,org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/ColumnDescriptor/getMaxDefinitionLevel()
org/apache/parquet/statistics/TestStatistics/PageStatsValidator/validateStatsForPage(org.apache.parquet.column.page.DataPage,org.apache.parquet.column.page.DictionaryPage,org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/impl/ColumnReaderImpl/getCurrentDefinitionLevel()
org/apache/parquet/hadoop/DirectCodecFactory/NoopDecompressor/decompress(java.nio.ByteBuffer,int,java.nio.ByteBuffer,int)#java/nio/Buffer/clear()
org/apache/parquet/hadoop/DirectCodecFactory/NoopDecompressor/decompress(java.nio.ByteBuffer,int,java.nio.ByteBuffer,int)#java/nio/Buffer/limit(int)
org/apache/parquet/hadoop/DirectCodecFactory/NoopDecompressor/decompress(java.nio.ByteBuffer,int,java.nio.ByteBuffer,int)#java/nio/ByteBuffer/duplicate()
org/apache/parquet/hadoop/DirectCodecFactory/NoopDecompressor/decompress(java.nio.ByteBuffer,int,java.nio.ByteBuffer,int)#java/nio/ByteBuffer/put(java.nio.ByteBuffer)
org/apache/parquet/hadoop/DirectCodecFactory/NoopDecompressor/decompress(java.nio.ByteBuffer,int,java.nio.ByteBuffer,int)#java/nio/Buffer/position(int)
org/apache/parquet/hadoop/DirectCodecFactory/NoopDecompressor/decompress(java.nio.ByteBuffer,int,java.nio.ByteBuffer,int)#org/apache/parquet/Preconditions/checkArgument(boolean,java.lang.String)
org/apache/parquet/filter2/statisticslevel/TestStatisticsFilter/testClearExceptionForNots()#org/apache/parquet/filter2/statisticslevel/StatisticsFilter/canDrop(org.apache.parquet.filter2.predicate.FilterPredicate,java.util.List)
org/apache/parquet/filter2/statisticslevel/TestStatisticsFilter/testClearExceptionForNots()#org/apache/parquet/filter2/predicate/FilterApi/eq(C,T)
org/apache/parquet/filter2/statisticslevel/TestStatisticsFilter/testClearExceptionForNots()#org/apache/parquet/column/statistics/DoubleStatistics/DoubleStatistics()
org/apache/parquet/filter2/statisticslevel/TestStatisticsFilter/testClearExceptionForNots()#java/lang/Throwable/getMessage()
org/apache/parquet/filter2/statisticslevel/TestStatisticsFilter/testClearExceptionForNots()#java/util/Arrays/asList(T[])
org/apache/parquet/filter2/statisticslevel/TestStatisticsFilter/testClearExceptionForNots()#org/apache/parquet/filter2/statisticslevel/TestStatisticsFilter/getIntColumnMeta(org.apache.parquet.column.statistics.IntStatistics,long)
org/apache/parquet/filter2/statisticslevel/TestStatisticsFilter/testClearExceptionForNots()#org/apache/parquet/column/statistics/IntStatistics/IntStatistics()
org/apache/parquet/filter2/statisticslevel/TestStatisticsFilter/testClearExceptionForNots()#org/apache/parquet/filter2/predicate/FilterApi/and(org.apache.parquet.filter2.predicate.FilterPredicate,org.apache.parquet.filter2.predicate.FilterPredicate)
org/apache/parquet/filter2/statisticslevel/TestStatisticsFilter/testClearExceptionForNots()#org/apache/parquet/filter2/predicate/FilterApi/not(org.apache.parquet.filter2.predicate.FilterPredicate)
org/apache/parquet/filter2/statisticslevel/TestStatisticsFilter/testClearExceptionForNots()#org/apache/parquet/filter2/statisticslevel/TestStatisticsFilter/getDoubleColumnMeta(org.apache.parquet.column.statistics.DoubleStatistics,long)
org/apache/parquet/filter2/statisticslevel/TestStatisticsFilter/testGt()#org/apache/parquet/filter2/statisticslevel/StatisticsFilter/canDrop(org.apache.parquet.filter2.predicate.FilterPredicate,java.util.List)
org/apache/parquet/filter2/statisticslevel/TestStatisticsFilter/testGt()#org/apache/parquet/filter2/predicate/FilterApi/gt(C,T)
org/apache/parquet/filter2/statisticslevel/TestStatisticsFilter/testGt()#org/apache/parquet/io/api/Binary/fromString(java.lang.String)
org/apache/parquet/filter2/statisticslevel/TestStatisticsFilter/testEqNull()#org/apache/parquet/column/statistics/Statistics/setNumNulls(long)
org/apache/parquet/filter2/statisticslevel/TestStatisticsFilter/testEqNull()#org/apache/parquet/filter2/statisticslevel/StatisticsFilter/canDrop(org.apache.parquet.filter2.predicate.FilterPredicate,java.util.List)
org/apache/parquet/filter2/statisticslevel/TestStatisticsFilter/testEqNull()#org/apache/parquet/column/statistics/IntStatistics/setMinMax(int,int)
org/apache/parquet/filter2/statisticslevel/TestStatisticsFilter/testEqNull()#org/apache/parquet/filter2/predicate/FilterApi/eq(C,T)
org/apache/parquet/filter2/statisticslevel/TestStatisticsFilter/testEqNull()#java/util/Arrays/asList(T[])
org/apache/parquet/filter2/statisticslevel/TestStatisticsFilter/testEqNull()#org/apache/parquet/filter2/statisticslevel/TestStatisticsFilter/getIntColumnMeta(org.apache.parquet.column.statistics.IntStatistics,long)
org/apache/parquet/filter2/statisticslevel/TestStatisticsFilter/testEqNull()#org/apache/parquet/column/statistics/IntStatistics/IntStatistics()
org/apache/parquet/filter2/statisticslevel/TestStatisticsFilter/testEqNull()#org/apache/parquet/filter2/statisticslevel/TestStatisticsFilter/getDoubleColumnMeta(org.apache.parquet.column.statistics.DoubleStatistics,long)
org/apache/parquet/filter2/statisticslevel/TestStatisticsFilter/testLtEq()#org/apache/parquet/filter2/predicate/FilterApi/ltEq(C,T)
org/apache/parquet/filter2/statisticslevel/TestStatisticsFilter/testLtEq()#org/apache/parquet/filter2/statisticslevel/StatisticsFilter/canDrop(org.apache.parquet.filter2.predicate.FilterPredicate,java.util.List)
org/apache/parquet/filter2/statisticslevel/TestStatisticsFilter/testLtEq()#org/apache/parquet/io/api/Binary/fromString(java.lang.String)
org/apache/parquet/filter2/statisticslevel/TestStatisticsFilter/testNotEqNonNull()#org/apache/parquet/column/statistics/Statistics/setNumNulls(long)
org/apache/parquet/filter2/statisticslevel/TestStatisticsFilter/testNotEqNonNull()#org/apache/parquet/filter2/statisticslevel/StatisticsFilter/canDrop(org.apache.parquet.filter2.predicate.FilterPredicate,java.util.List)
org/apache/parquet/filter2/statisticslevel/TestStatisticsFilter/testNotEqNonNull()#org/apache/parquet/column/statistics/IntStatistics/setMinMax(int,int)
org/apache/parquet/filter2/statisticslevel/TestStatisticsFilter/testNotEqNonNull()#org/apache/parquet/filter2/predicate/FilterApi/notEq(C,T)
org/apache/parquet/filter2/statisticslevel/TestStatisticsFilter/testNotEqNonNull()#java/util/Arrays/asList(T[])
org/apache/parquet/filter2/statisticslevel/TestStatisticsFilter/testNotEqNonNull()#org/apache/parquet/filter2/statisticslevel/TestStatisticsFilter/getIntColumnMeta(org.apache.parquet.column.statistics.IntStatistics,long)
org/apache/parquet/filter2/statisticslevel/TestStatisticsFilter/testNotEqNonNull()#org/apache/parquet/column/statistics/IntStatistics/IntStatistics()
org/apache/parquet/filter2/statisticslevel/TestStatisticsFilter/testNotEqNonNull()#org/apache/parquet/io/api/Binary/fromString(java.lang.String)
org/apache/parquet/filter2/statisticslevel/TestStatisticsFilter/testNotEqNonNull()#org/apache/parquet/filter2/statisticslevel/TestStatisticsFilter/getDoubleColumnMeta(org.apache.parquet.column.statistics.DoubleStatistics,long)
org/apache/parquet/filter2/statisticslevel/TestStatisticsFilter/getIntColumnMeta(org.apache.parquet.column.statistics.IntStatistics,long)#java/util/Arrays/asList(T[])
org/apache/parquet/filter2/statisticslevel/TestStatisticsFilter/getIntColumnMeta(org.apache.parquet.column.statistics.IntStatistics,long)#org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/get(org.apache.parquet.hadoop.metadata.ColumnPath,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.hadoop.metadata.CompressionCodecName,java.util.Set,org.apache.parquet.column.statistics.Statistics,long,long,long,long,long)
org/apache/parquet/filter2/statisticslevel/TestStatisticsFilter/getIntColumnMeta(org.apache.parquet.column.statistics.IntStatistics,long)#org/apache/parquet/hadoop/metadata/ColumnPath/get(java.lang.String[])
org/apache/parquet/filter2/statisticslevel/TestStatisticsFilter/getIntColumnMeta(org.apache.parquet.column.statistics.IntStatistics,long)#java/util/HashSet/HashSet(java.util.Collection)
org/apache/parquet/filter2/statisticslevel/TestStatisticsFilter/getDoubleColumnMeta(org.apache.parquet.column.statistics.DoubleStatistics,long)#java/util/Arrays/asList(T[])
org/apache/parquet/filter2/statisticslevel/TestStatisticsFilter/getDoubleColumnMeta(org.apache.parquet.column.statistics.DoubleStatistics,long)#org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/get(org.apache.parquet.hadoop.metadata.ColumnPath,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.hadoop.metadata.CompressionCodecName,java.util.Set,org.apache.parquet.column.statistics.Statistics,long,long,long,long,long)
org/apache/parquet/filter2/statisticslevel/TestStatisticsFilter/getDoubleColumnMeta(org.apache.parquet.column.statistics.DoubleStatistics,long)#org/apache/parquet/hadoop/metadata/ColumnPath/get(java.lang.String[])
org/apache/parquet/filter2/statisticslevel/TestStatisticsFilter/getDoubleColumnMeta(org.apache.parquet.column.statistics.DoubleStatistics,long)#java/util/HashSet/HashSet(java.util.Collection)
org/apache/parquet/filter2/statisticslevel/TestStatisticsFilter/testLt()#org/apache/parquet/filter2/statisticslevel/StatisticsFilter/canDrop(org.apache.parquet.filter2.predicate.FilterPredicate,java.util.List)
org/apache/parquet/filter2/statisticslevel/TestStatisticsFilter/testLt()#org/apache/parquet/filter2/predicate/FilterApi/lt(C,T)
org/apache/parquet/filter2/statisticslevel/TestStatisticsFilter/testLt()#org/apache/parquet/io/api/Binary/fromString(java.lang.String)
org/apache/parquet/filter2/statisticslevel/TestStatisticsFilter/testNotEqNull()#org/apache/parquet/column/statistics/Statistics/setNumNulls(long)
org/apache/parquet/filter2/statisticslevel/TestStatisticsFilter/testNotEqNull()#org/apache/parquet/filter2/statisticslevel/StatisticsFilter/canDrop(org.apache.parquet.filter2.predicate.FilterPredicate,java.util.List)
org/apache/parquet/filter2/statisticslevel/TestStatisticsFilter/testNotEqNull()#org/apache/parquet/column/statistics/IntStatistics/setMinMax(int,int)
org/apache/parquet/filter2/statisticslevel/TestStatisticsFilter/testNotEqNull()#org/apache/parquet/filter2/predicate/FilterApi/notEq(C,T)
org/apache/parquet/filter2/statisticslevel/TestStatisticsFilter/testNotEqNull()#java/util/Arrays/asList(T[])
org/apache/parquet/filter2/statisticslevel/TestStatisticsFilter/testNotEqNull()#org/apache/parquet/filter2/statisticslevel/TestStatisticsFilter/getIntColumnMeta(org.apache.parquet.column.statistics.IntStatistics,long)
org/apache/parquet/filter2/statisticslevel/TestStatisticsFilter/testNotEqNull()#org/apache/parquet/column/statistics/IntStatistics/IntStatistics()
org/apache/parquet/filter2/statisticslevel/TestStatisticsFilter/testNotEqNull()#org/apache/parquet/filter2/statisticslevel/TestStatisticsFilter/getDoubleColumnMeta(org.apache.parquet.column.statistics.DoubleStatistics,long)
org/apache/parquet/filter2/statisticslevel/TestStatisticsFilter/testEqNonNull()#org/apache/parquet/filter2/statisticslevel/StatisticsFilter/canDrop(org.apache.parquet.filter2.predicate.FilterPredicate,java.util.List)
org/apache/parquet/filter2/statisticslevel/TestStatisticsFilter/testEqNonNull()#org/apache/parquet/filter2/predicate/FilterApi/eq(C,T)
org/apache/parquet/filter2/statisticslevel/TestStatisticsFilter/testEqNonNull()#org/apache/parquet/io/api/Binary/fromString(java.lang.String)
org/apache/parquet/filter2/statisticslevel/TestStatisticsFilter/testGtEq()#org/apache/parquet/filter2/statisticslevel/StatisticsFilter/canDrop(org.apache.parquet.filter2.predicate.FilterPredicate,java.util.List)
org/apache/parquet/filter2/statisticslevel/TestStatisticsFilter/testGtEq()#org/apache/parquet/io/api/Binary/fromString(java.lang.String)
org/apache/parquet/filter2/statisticslevel/TestStatisticsFilter/testGtEq()#org/apache/parquet/filter2/predicate/FilterApi/gtEq(C,T)
org/apache/parquet/filter2/statisticslevel/TestStatisticsFilter/testAnd()#org/apache/parquet/filter2/statisticslevel/StatisticsFilter/canDrop(org.apache.parquet.filter2.predicate.FilterPredicate,java.util.List)
org/apache/parquet/filter2/statisticslevel/TestStatisticsFilter/testAnd()#org/apache/parquet/filter2/predicate/FilterApi/eq(C,T)
org/apache/parquet/filter2/statisticslevel/TestStatisticsFilter/testAnd()#org/apache/parquet/filter2/predicate/FilterApi/and(org.apache.parquet.filter2.predicate.FilterPredicate,org.apache.parquet.filter2.predicate.FilterPredicate)
org/apache/parquet/filter2/statisticslevel/TestStatisticsFilter/testOr()#org/apache/parquet/filter2/statisticslevel/StatisticsFilter/canDrop(org.apache.parquet.filter2.predicate.FilterPredicate,java.util.List)
org/apache/parquet/filter2/statisticslevel/TestStatisticsFilter/testOr()#org/apache/parquet/filter2/predicate/FilterApi/eq(C,T)
org/apache/parquet/filter2/statisticslevel/TestStatisticsFilter/testOr()#org/apache/parquet/filter2/predicate/FilterApi/or(org.apache.parquet.filter2.predicate.FilterPredicate,org.apache.parquet.filter2.predicate.FilterPredicate)
org/apache/parquet/filter2/statisticslevel/TestStatisticsFilter/testUdp()#org/apache/parquet/filter2/predicate/LogicalInverseRewriter/rewrite(org.apache.parquet.filter2.predicate.FilterPredicate)
org/apache/parquet/filter2/statisticslevel/TestStatisticsFilter/testUdp()#org/apache/parquet/filter2/statisticslevel/StatisticsFilter/canDrop(org.apache.parquet.filter2.predicate.FilterPredicate,java.util.List)
org/apache/parquet/filter2/statisticslevel/TestStatisticsFilter/testUdp()#org/apache/parquet/column/statistics/IntStatistics/setMinMax(int,int)
org/apache/parquet/filter2/statisticslevel/TestStatisticsFilter/testUdp()#java/util/Arrays/asList(T[])
org/apache/parquet/filter2/statisticslevel/TestStatisticsFilter/testUdp()#org/apache/parquet/column/statistics/IntStatistics/IntStatistics()
org/apache/parquet/filter2/statisticslevel/TestStatisticsFilter/testUdp()#org/apache/parquet/filter2/predicate/FilterApi/not(org.apache.parquet.filter2.predicate.FilterPredicate)
org/apache/parquet/filter2/statisticslevel/TestStatisticsFilter/testUdp()#org/apache/parquet/filter2/statisticslevel/TestStatisticsFilter/getDoubleColumnMeta(org.apache.parquet.column.statistics.DoubleStatistics,long)
org/apache/parquet/filter2/statisticslevel/TestStatisticsFilter/testUdp()#org/apache/parquet/filter2/predicate/FilterApi/userDefined(org.apache.parquet.filter2.predicate.Operators.Column,java.lang.Class)
org/apache/parquet/filter2/statisticslevel/TestStatisticsFilter/testUdp()#org/apache/parquet/filter2/statisticslevel/TestStatisticsFilter/getIntColumnMeta(org.apache.parquet.column.statistics.IntStatistics,long)
org/apache/parquet/thrift/ThriftSchemaConverter/structOrUnionType(java.lang.Class)#java/lang/Class/isAssignableFrom(java.lang.Class)
org/apache/parquet/thrift/ThriftSchemaConverter/isListElementType(org.apache.parquet.schema.Type,org.apache.parquet.thrift.struct.ThriftField)#org/apache/parquet/thrift/struct/ThriftField/getType()
org/apache/parquet/thrift/ThriftSchemaConverter/isListElementType(org.apache.parquet.schema.Type,org.apache.parquet.thrift.struct.ThriftField)#org/apache/parquet/schema/Type/asGroupType()
org/apache/parquet/thrift/ThriftSchemaConverter/isListElementType(org.apache.parquet.schema.Type,org.apache.parquet.thrift.struct.ThriftField)#org/apache/parquet/schema/Type/isRepetition(org.apache.parquet.schema.Type.Repetition)
org/apache/parquet/thrift/ThriftSchemaConverter/isListElementType(org.apache.parquet.schema.Type,org.apache.parquet.thrift.struct.ThriftField)#java/util/Set/add(E)
org/apache/parquet/thrift/ThriftSchemaConverter/isListElementType(org.apache.parquet.schema.Type,org.apache.parquet.thrift.struct.ThriftField)#java/util/Set/contains(java.lang.Object)
org/apache/parquet/thrift/ThriftSchemaConverter/isListElementType(org.apache.parquet.schema.Type,org.apache.parquet.thrift.struct.ThriftField)#org/apache/parquet/schema/GroupType/getFieldCount()
org/apache/parquet/thrift/ThriftSchemaConverter/isListElementType(org.apache.parquet.schema.Type,org.apache.parquet.thrift.struct.ThriftField)#org/apache/parquet/thrift/struct/ThriftType/StructType/getChildren()
org/apache/parquet/thrift/ThriftSchemaConverter/isListElementType(org.apache.parquet.schema.Type,org.apache.parquet.thrift.struct.ThriftField)#org/apache/parquet/thrift/struct/ThriftField/getName()
org/apache/parquet/thrift/ThriftSchemaConverter/isListElementType(org.apache.parquet.schema.Type,org.apache.parquet.thrift.struct.ThriftField)#org/apache/parquet/schema/GroupType/getFieldName(int)
org/apache/parquet/thrift/ThriftSchemaConverter/isListElementType(org.apache.parquet.schema.Type,org.apache.parquet.thrift.struct.ThriftField)#java/util/HashSet/HashSet()
org/apache/parquet/thrift/ThriftSchemaConverter/isListElementType(org.apache.parquet.schema.Type,org.apache.parquet.thrift.struct.ThriftField)#org/apache/parquet/schema/GroupType/getType(int)
org/apache/parquet/thrift/ThriftSchemaConverter/isListElementType(org.apache.parquet.schema.Type,org.apache.parquet.thrift.struct.ThriftField)#org/apache/parquet/schema/Type/isPrimitive()
org/apache/parquet/thrift/ThriftSchemaConverter/convert(org.apache.parquet.thrift.struct.ThriftType.StructType)#org/apache/parquet/thrift/ThriftSchemaConvertVisitor/convert(org.apache.parquet.thrift.struct.ThriftType.StructType,org.apache.parquet.thrift.projection.FieldProjectionFilter,boolean)
org/apache/parquet/thrift/ThriftSchemaConverter/convert(org.apache.parquet.thrift.struct.ThriftType.StructType)#org/apache/parquet/thrift/projection/FieldProjectionFilter/assertNoUnmatchedPatterns()
org/apache/parquet/thrift/ThriftSchemaConverter/toStructType(java.lang.Class)#org/apache/parquet/thrift/ThriftSchemaConverter/toStructType(java.lang.Class)
org/apache/parquet/thrift/ThriftSchemaConverter/convertWithoutProjection(org.apache.parquet.thrift.struct.ThriftType.StructType)#org/apache/parquet/thrift/ThriftSchemaConvertVisitor/convert(org.apache.parquet.thrift.struct.ThriftType.StructType,org.apache.parquet.thrift.projection.FieldProjectionFilter,boolean)
org/apache/parquet/thrift/ThriftSchemaConverter/toThriftField(java.lang.String,org.apache.parquet.arrow.schema.Field,org.apache.parquet.thrift.struct.ThriftField.Requirement)#org/apache/parquet/thrift/struct/ThriftField/ThriftField(java.lang.String,short,org.apache.parquet.thrift.struct.ThriftField.Requirement,org.apache.parquet.thrift.struct.ThriftType)
org/apache/parquet/thrift/ThriftSchemaConverter/toThriftField(java.lang.String,org.apache.parquet.arrow.schema.Field,org.apache.parquet.thrift.struct.ThriftField.Requirement)#java/util/ArrayList/ArrayList()
org/apache/parquet/thrift/ThriftSchemaConverter/toThriftField(java.lang.String,org.apache.parquet.arrow.schema.Field,org.apache.parquet.thrift.struct.ThriftField.Requirement)#org/apache/parquet/thrift/struct/ThriftType/EnumType/EnumType(java.util.List)
org/apache/parquet/thrift/ThriftSchemaConverter/toThriftField(java.lang.String,org.apache.parquet.arrow.schema.Field,org.apache.parquet.thrift.struct.ThriftField.Requirement)#org/apache/parquet/thrift/struct/ThriftType/I32Type/I32Type()
org/apache/parquet/thrift/ThriftSchemaConverter/toThriftField(java.lang.String,org.apache.parquet.arrow.schema.Field,org.apache.parquet.thrift.struct.ThriftField.Requirement)#java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)
org/apache/parquet/thrift/ThriftSchemaConverter/toThriftField(java.lang.String,org.apache.parquet.arrow.schema.Field,org.apache.parquet.thrift.struct.ThriftField.Requirement)#java/util/List/add(E)
org/apache/parquet/thrift/ThriftSchemaConverter/toThriftField(java.lang.String,org.apache.parquet.arrow.schema.Field,org.apache.parquet.thrift.struct.ThriftField.Requirement)#org/apache/parquet/thrift/struct/ThriftType/SetType/SetType(org.apache.parquet.thrift.struct.ThriftField)
org/apache/parquet/thrift/ThriftSchemaConverter/toThriftField(java.lang.String,org.apache.parquet.arrow.schema.Field,org.apache.parquet.thrift.struct.ThriftField.Requirement)#org/apache/parquet/thrift/struct/ThriftType/I16Type/I16Type()
org/apache/parquet/thrift/ThriftSchemaConverter/toThriftField(java.lang.String,org.apache.parquet.arrow.schema.Field,org.apache.parquet.thrift.struct.ThriftField.Requirement)#org/apache/parquet/thrift/struct/ThriftType/ListType/ListType(org.apache.parquet.thrift.struct.ThriftField)
org/apache/parquet/thrift/ThriftSchemaConverter/toThriftField(java.lang.String,org.apache.parquet.arrow.schema.Field,org.apache.parquet.thrift.struct.ThriftField.Requirement)#org/apache/parquet/thrift/ThriftSchemaConverter/toThriftField(java.lang.String,org.apache.parquet.arrow.schema.Field,org.apache.parquet.thrift.struct.ThriftField.Requirement)
org/apache/parquet/thrift/ThriftSchemaConverter/toThriftField(java.lang.String,org.apache.parquet.arrow.schema.Field,org.apache.parquet.thrift.struct.ThriftField.Requirement)#org/apache/parquet/thrift/struct/ThriftType/ByteType/ByteType()
org/apache/parquet/thrift/ThriftSchemaConverter/toThriftField(java.lang.String,org.apache.parquet.arrow.schema.Field,org.apache.parquet.thrift.struct.ThriftField.Requirement)#org/apache/parquet/thrift/struct/ThriftType/EnumValue/EnumValue(int,java.lang.String)
org/apache/parquet/thrift/ThriftSchemaConverter/toThriftField(java.lang.String,org.apache.parquet.arrow.schema.Field,org.apache.parquet.thrift.struct.ThriftField.Requirement)#org/apache/parquet/thrift/struct/ThriftType/BoolType/BoolType()
org/apache/parquet/thrift/ThriftSchemaConverter/toThriftField(java.lang.String,org.apache.parquet.arrow.schema.Field,org.apache.parquet.thrift.struct.ThriftField.Requirement)#org/apache/parquet/thrift/struct/ThriftType/StringType/StringType()
org/apache/parquet/thrift/ThriftSchemaConverter/toThriftField(java.lang.String,org.apache.parquet.arrow.schema.Field,org.apache.parquet.thrift.struct.ThriftField.Requirement)#org/apache/parquet/thrift/struct/ThriftType/DoubleType/DoubleType()
org/apache/parquet/thrift/ThriftSchemaConverter/toThriftField(java.lang.String,org.apache.parquet.arrow.schema.Field,org.apache.parquet.thrift.struct.ThriftField.Requirement)#org/apache/parquet/thrift/struct/ThriftType/MapType/MapType(org.apache.parquet.thrift.struct.ThriftField,org.apache.parquet.thrift.struct.ThriftField)
org/apache/parquet/thrift/ThriftSchemaConverter/toThriftField(java.lang.String,org.apache.parquet.arrow.schema.Field,org.apache.parquet.thrift.struct.ThriftField.Requirement)#org/apache/parquet/thrift/struct/ThriftType/I64Type/I64Type()
org/apache/parquet/thrift/ThriftSchemaConverter/toThriftField(java.lang.String,org.apache.parquet.arrow.schema.Field,org.apache.parquet.thrift.struct.ThriftField.Requirement)#org/apache/parquet/thrift/ThriftSchemaConverter/toStructType(java.lang.Class)
org/apache/parquet/thrift/ThriftSchemaConverter/toThriftField(java.lang.String,org.apache.parquet.arrow.schema.Field,org.apache.parquet.thrift.struct.ThriftField.Requirement)#org/apache/parquet/thrift/struct/ThriftTypeID/fromByte(byte)
org/apache/parquet/thrift/ThriftSchemaConverter/toStructType(org.apache.parquet.thrift.TStructDescriptor)#org/apache/parquet/thrift/struct/ThriftType/StructType/StructType(java.util.List,org.apache.parquet.thrift.struct.ThriftType.StructType.StructOrUnionType)
org/apache/parquet/thrift/ThriftSchemaConverter/toStructType(org.apache.parquet.thrift.TStructDescriptor)#org/apache/parquet/thrift/ThriftSchemaConverter/structOrUnionType(java.lang.Class)
org/apache/parquet/thrift/ThriftSchemaConverter/toStructType(org.apache.parquet.thrift.TStructDescriptor)#java/util/ArrayList/ArrayList(java.util.Collection)
org/apache/parquet/thrift/ThriftSchemaConverter/toStructType(org.apache.parquet.thrift.TStructDescriptor)#org/apache/parquet/thrift/struct/ThriftField/Requirement/fromType(byte)
org/apache/parquet/thrift/ThriftSchemaConverter/toStructType(org.apache.parquet.thrift.TStructDescriptor)#java/util/List/add(E)
org/apache/parquet/thrift/ThriftSchemaConverter/toStructType(org.apache.parquet.thrift.TStructDescriptor)#org/apache/parquet/thrift/ThriftSchemaConverter/toThriftField(java.lang.String,org.apache.parquet.arrow.schema.Field,org.apache.parquet.thrift.struct.ThriftField.Requirement)
org/apache/parquet/thrift/ThriftSchemaConverter/convert(java.lang.Class)#org/apache/parquet/thrift/ThriftSchemaConverter/convert(java.lang.Class)
org/apache/parquet/thrift/ThriftSchemaConverter/convert(java.lang.Class)#org/apache/parquet/thrift/ThriftSchemaConverter/toStructType(java.lang.Class)
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriter/memUsageString(java.lang.String)#java/lang/String/format(java.lang.String,java.lang.Object[])
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriter/memUsageString(java.lang.String)#org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriter/getAllocatedSize()
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriter/close()#org/apache/parquet/bytes/CapacityByteArrayOutputStream/close()
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriter/getAllocatedSize()#org/apache/parquet/bytes/CapacityByteArrayOutputStream/getCapacity()
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriter/getBufferedSize()#org/apache/parquet/bytes/CapacityByteArrayOutputStream/size()
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriter/writeBitWidthForMiniBlock(int)#org/apache/parquet/io/ParquetEncodingException/ParquetEncodingException(java.lang.String,java.lang.Throwable)
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriter/writeBitWidthForMiniBlock(int)#org/apache/parquet/bytes/BytesUtils/writeIntLittleEndianOnOneByte(java.io.OutputStream,int)
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriter/getMiniBlockCountToFlush(double)#java/lang/Math/ceil(double)
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriter/reset()#org/apache/parquet/bytes/CapacityByteArrayOutputStream/reset()
org/apache/parquet/hive/HiveBindingFactory/create()#java/lang/Class/newInstance()
org/apache/parquet/hive/HiveBindingFactory/create()#org/apache/parquet/hive/HiveBindingFactory/create(java.lang.ClassLoader)
org/apache/parquet/hive/HiveBindingFactory/create()#java/lang/Class/getCanonicalName()
org/apache/parquet/hive/HiveBindingFactory/create()#org/apache/parquet/hive/HiveBindingFactory/HiveBindingInstantiationError/HiveBindingInstantiationError(java.lang.String,java.lang.Exception)
org/apache/parquet/hive/HiveBindingFactory/create()#java/lang/Class/getClassLoader()
org/apache/parquet/hive/HiveBindingFactory/create(java.lang.ClassLoader)#org/apache/parquet/hive/HiveBindingFactory/createInternal(java.lang.Class)
org/apache/parquet/hive/HiveBindingFactory/create(java.lang.ClassLoader)#java/lang/Class/getSimpleName()
org/apache/parquet/hive/HiveBindingFactory/create(java.lang.ClassLoader)#java/lang/Class/forName(java.lang.String,boolean,java.lang.ClassLoader)
org/apache/parquet/hive/HiveBindingFactory/createBindingForUnknownVersion()#java/lang/Class/forName(java.lang.String)
org/apache/parquet/hive/HiveBindingFactory/createBindingForUnknownVersion()#java/lang/Class/getDeclaredMethods()
org/apache/parquet/hive/HiveBindingFactory/createBindingForUnknownVersion()#java/lang/String/equals(java.lang.Object)
org/apache/parquet/hive/HiveBindingFactory/createBindingForUnknownVersion()#java/lang/reflect/Method/getName()
org/apache/parquet/hive/HiveBindingFactory/trimVersion(java.lang.String)#java/lang/String/trim()
org/apache/parquet/hive/HiveBindingFactory/createInternal(java.lang.Class)#org/apache/parquet/hive/HiveBindingFactory/HiveBindingInstantiationError/HiveBindingInstantiationError(java.lang.String)
org/apache/parquet/hive/HiveBindingFactory/createInternal(java.lang.Class)#java/lang/String/equalsIgnoreCase(java.lang.String)
org/apache/parquet/hive/HiveBindingFactory/createInternal(java.lang.Class)#java/lang/Class/getSimpleName()
org/apache/parquet/hive/HiveBindingFactory/createInternal(java.lang.Class)#org/apache/parquet/hive/HiveBindingFactory/UnexpectedHiveVersionProviderError/UnexpectedHiveVersionProviderError(java.lang.String,java.lang.Exception)
org/apache/parquet/hive/HiveBindingFactory/createInternal(java.lang.Class)#org/apache/parquet/hive/HiveBindingFactory/createBindingForUnknownVersion()
org/apache/parquet/hive/HiveBindingFactory/createInternal(java.lang.Class)#java/lang/String/startsWith(java.lang.String)
org/apache/parquet/hive/HiveBindingFactory/createInternal(java.lang.Class)#java/lang/reflect/Method/invoke(java.lang.Object,java.lang.Object[])
org/apache/parquet/hive/HiveBindingFactory/createInternal(java.lang.Class)#java/lang/Class/getMethod(java.lang.String,java.lang.Class<?>[])
org/apache/parquet/hive/HiveBindingFactory/createInternal(java.lang.Class)#org/apache/parquet/hive/HiveBindingFactory/trimVersion(java.lang.String)
org/apache/parquet/hadoop/thrift/ThriftReadSupport/initThriftClassFromMultipleFiles(java.util.Map,org.apache.parquet.hadoop.Configuration)#java/lang/Class/forName(java.lang.String)
org/apache/parquet/hadoop/thrift/ThriftReadSupport/initThriftClassFromMultipleFiles(java.util.Map,org.apache.parquet.hadoop.Configuration)#java/util/Set/size()
org/apache/parquet/hadoop/thrift/ThriftReadSupport/initThriftClassFromMultipleFiles(java.util.Map,org.apache.parquet.hadoop.Configuration)#java/util/Iterator/next()
org/apache/parquet/hadoop/thrift/ThriftReadSupport/initThriftClassFromMultipleFiles(java.util.Map,org.apache.parquet.hadoop.Configuration)#org/apache/parquet/thrift/ThriftMetaData/getThriftClassNames(java.util.Map)
org/apache/parquet/hadoop/thrift/ThriftReadSupport/initThriftClassFromMultipleFiles(java.util.Map,org.apache.parquet.hadoop.Configuration)#org/apache/parquet/io/ParquetDecodingException/ParquetDecodingException(java.lang.String)
org/apache/parquet/hadoop/thrift/ThriftReadSupport/initThriftClassFromMultipleFiles(java.util.Map,org.apache.parquet.hadoop.Configuration)#java/util/Set/iterator()
org/apache/parquet/hadoop/thrift/ThriftReadSupport/getProjectedSchema(org.apache.parquet.thrift.projection.FieldProjectionFilter)#org/apache/parquet/thrift/ThriftSchemaConverter/convert(java.lang.Class)
org/apache/parquet/hadoop/thrift/ThriftReadSupport/getProjectedSchema(org.apache.parquet.thrift.projection.FieldProjectionFilter)#org/apache/parquet/thrift/ThriftSchemaConverter/ThriftSchemaConverter(org.apache.parquet.thrift.projection.FieldProjectionFilter)
org/apache/parquet/hadoop/thrift/ThriftReadSupport/setRecordConverterClass(org.apache.parquet.hadoop.JobConf,java.lang.Class)#org/apache/parquet/hadoop/thrift/ThriftReadSupport/setRecordConverterClass(org.apache.parquet.hadoop.JobConf,java.lang.Class)
org/apache/parquet/hadoop/thrift/ThriftReadSupport/init(org.apache.parquet.hadoop.api.InitContext)#org/apache/parquet/hadoop/thrift/ThriftReadSupport/initThriftClassFromMultipleFiles(java.util.Map,org.apache.parquet.hadoop.Configuration)
org/apache/parquet/hadoop/thrift/ThriftReadSupport/init(org.apache.parquet.hadoop.api.InitContext)#java/lang/String/format(java.lang.String,java.lang.Object[])
org/apache/parquet/hadoop/thrift/ThriftReadSupport/init(org.apache.parquet.hadoop.api.InitContext)#org/apache/parquet/hadoop/api/ReadSupport/ReadContext/ReadContext(org.apache.parquet.schema.MessageType)
org/apache/parquet/hadoop/thrift/ThriftReadSupport/init(org.apache.parquet.hadoop.api.InitContext)#org/apache/parquet/hadoop/api/InitContext/getFileSchema()
org/apache/parquet/hadoop/thrift/ThriftReadSupport/init(org.apache.parquet.hadoop.api.InitContext)#org/apache/parquet/hadoop/api/InitContext/getKeyValueMetadata()
org/apache/parquet/hadoop/thrift/ThriftReadSupport/init(org.apache.parquet.hadoop.api.InitContext)#org/apache/parquet/hadoop/thrift/ThriftReadSupport/getFieldProjectionFilter(org.apache.parquet.hadoop.Configuration)
org/apache/parquet/hadoop/thrift/ThriftReadSupport/init(org.apache.parquet.hadoop.api.InitContext)#org/apache/parquet/hadoop/api/InitContext/getConfiguration()
org/apache/parquet/hadoop/thrift/ThriftReadSupport/init(org.apache.parquet.hadoop.api.InitContext)#org/apache/parquet/hadoop/api/ReadSupport/getSchemaForRead(org.apache.parquet.schema.MessageType,java.lang.String)
org/apache/parquet/hadoop/thrift/ThriftReadSupport/init(org.apache.parquet.hadoop.api.InitContext)#org/apache/parquet/thrift/projection/ThriftProjectionException/ThriftProjectionException(java.lang.String)
org/apache/parquet/hadoop/thrift/ThriftReadSupport/init(org.apache.parquet.hadoop.api.InitContext)#org/apache/parquet/thrift/projection/ThriftProjectionException/ThriftProjectionException(java.lang.String,java.lang.Throwable)
org/apache/parquet/hadoop/thrift/ThriftReadSupport/init(org.apache.parquet.hadoop.api.InitContext)#org/apache/parquet/hadoop/api/ReadSupport/getSchemaForRead(org.apache.parquet.schema.MessageType,org.apache.parquet.schema.MessageType)
org/apache/parquet/hadoop/thrift/ThriftReadSupport/init(org.apache.parquet.hadoop.api.InitContext)#org/apache/parquet/hadoop/thrift/ThriftReadSupport/getProjectedSchema(org.apache.parquet.thrift.projection.FieldProjectionFilter)
org/apache/parquet/hadoop/thrift/ThriftReadSupport/initThriftClass(org.apache.parquet.thrift.ThriftMetaData,org.apache.parquet.hadoop.Configuration)#java/lang/Class/forName(java.lang.String)
org/apache/parquet/hadoop/thrift/ThriftReadSupport/initThriftClass(org.apache.parquet.thrift.ThriftMetaData,org.apache.parquet.hadoop.Configuration)#org/apache/parquet/thrift/ThriftMetaData/getThriftClass()
org/apache/parquet/hadoop/thrift/ThriftReadSupport/initThriftClass(org.apache.parquet.thrift.ThriftMetaData,org.apache.parquet.hadoop.Configuration)#org/apache/parquet/io/ParquetDecodingException/ParquetDecodingException(java.lang.String)
org/apache/parquet/hadoop/thrift/ThriftReadSupport/getRecordConverterInstance(java.lang.String,java.lang.Class,org.apache.parquet.schema.MessageType,org.apache.parquet.thrift.struct.ThriftType.StructType,org.apache.parquet.hadoop.Configuration)#java/lang/Class/forName(java.lang.String)
org/apache/parquet/hadoop/thrift/ThriftReadSupport/getRecordConverterInstance(java.lang.String,java.lang.Class,org.apache.parquet.schema.MessageType,org.apache.parquet.thrift.struct.ThriftType.StructType,org.apache.parquet.hadoop.Configuration)#java/lang/reflect/Constructor/newInstance(java.lang.Object[])
org/apache/parquet/hadoop/thrift/ThriftReadSupport/getRecordConverterInstance(java.lang.String,java.lang.Class,org.apache.parquet.schema.MessageType,org.apache.parquet.thrift.struct.ThriftType.StructType,org.apache.parquet.hadoop.Configuration)#java/lang/Class/getConstructor(java.lang.Class<?>[])
org/apache/parquet/hadoop/thrift/ThriftReadSupport/getRecordConverterInstance(java.lang.String,java.lang.Class,org.apache.parquet.schema.MessageType,org.apache.parquet.thrift.struct.ThriftType.StructType,org.apache.parquet.hadoop.Configuration)#java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)
org/apache/parquet/hadoop/thrift/ThriftReadSupport/getFieldProjectionFilter(org.apache.parquet.hadoop.Configuration)#org/apache/parquet/thrift/projection/ThriftProjectionException/ThriftProjectionException(java.lang.String)
org/apache/parquet/hadoop/thrift/ThriftReadSupport/getFieldProjectionFilter(org.apache.parquet.hadoop.Configuration)#org/apache/parquet/thrift/projection/deprecated/DeprecatedFieldProjectionFilter/DeprecatedFieldProjectionFilter(java.lang.String)
org/apache/parquet/hadoop/thrift/ThriftReadSupport/getFieldProjectionFilter(org.apache.parquet.hadoop.Configuration)#org/apache/parquet/thrift/projection/StrictFieldProjectionFilter/fromSemicolonDelimitedString(java.lang.String)
org/apache/parquet/hadoop/thrift/ThriftReadSupport/getFieldProjectionFilter(org.apache.parquet.hadoop.Configuration)#org/apache/parquet/Strings/isNullOrEmpty(java.lang.String)
org/apache/parquet/hadoop/thrift/ThriftReadSupport/prepareForRead(org.apache.parquet.hadoop.Configuration,java.util.Map,org.apache.parquet.schema.MessageType,org.apache.parquet.hadoop.api.ReadSupport.ReadContext)#org/apache/parquet/hadoop/api/ReadSupport/ReadContext/getRequestedSchema()
org/apache/parquet/hadoop/thrift/ThriftReadSupport/prepareForRead(org.apache.parquet.hadoop.Configuration,java.util.Map,org.apache.parquet.schema.MessageType,org.apache.parquet.hadoop.api.ReadSupport.ReadContext)#org/apache/parquet/hadoop/thrift/ThriftReadSupport/getRecordConverterInstance(java.lang.String,java.lang.Class,org.apache.parquet.schema.MessageType,org.apache.parquet.thrift.struct.ThriftType.StructType,org.apache.parquet.hadoop.Configuration)
org/apache/parquet/hadoop/thrift/ThriftReadSupport/prepareForRead(org.apache.parquet.hadoop.Configuration,java.util.Map,org.apache.parquet.schema.MessageType,org.apache.parquet.hadoop.api.ReadSupport.ReadContext)#org/apache/parquet/thrift/ThriftMetaData/fromThriftClass(java.lang.Class)
org/apache/parquet/hadoop/thrift/ThriftReadSupport/prepareForRead(org.apache.parquet.hadoop.Configuration,java.util.Map,org.apache.parquet.schema.MessageType,org.apache.parquet.hadoop.api.ReadSupport.ReadContext)#java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)
org/apache/parquet/hadoop/thrift/ThriftReadSupport/prepareForRead(org.apache.parquet.hadoop.Configuration,java.util.Map,org.apache.parquet.schema.MessageType,org.apache.parquet.hadoop.api.ReadSupport.ReadContext)#org/apache/parquet/hadoop/thrift/ThriftReadSupport/initThriftClass(org.apache.parquet.thrift.ThriftMetaData,org.apache.parquet.hadoop.Configuration)
org/apache/parquet/hadoop/thrift/ThriftReadSupport/prepareForRead(org.apache.parquet.hadoop.Configuration,java.util.Map,org.apache.parquet.schema.MessageType,org.apache.parquet.hadoop.api.ReadSupport.ReadContext)#org/apache/parquet/thrift/ThriftMetaData/getDescriptor()
org/apache/parquet/hadoop/thrift/ThriftReadSupport/prepareForRead(org.apache.parquet.hadoop.Configuration,java.util.Map,org.apache.parquet.schema.MessageType,org.apache.parquet.hadoop.api.ReadSupport.ReadContext)#org/apache/parquet/thrift/ThriftMetaData/fromExtraMetaData(java.util.Map)
org/apache/parquet/hadoop/thrift/ThriftReadSupport/setRecordConverterClass(org.apache.parquet.hadoop.Configuration,java.lang.Class)#java/lang/Class/getName()
org/apache/parquet/column/values/plain/BooleanPlainValuesWriter/memUsageString(java.lang.String)#org/apache/parquet/column/values/bitpacking/ByteBitPackingValuesWriter/memUsageString(java.lang.String)
org/apache/parquet/column/values/plain/BooleanPlainValuesWriter/getBufferedSize()#org/apache/parquet/column/values/bitpacking/ByteBitPackingValuesWriter/getBufferedSize()
org/apache/parquet/column/values/plain/BooleanPlainValuesWriter/writeBoolean(boolean)#org/apache/parquet/column/values/bitpacking/ByteBitPackingValuesWriter/writeInteger(int)
org/apache/parquet/column/values/plain/BooleanPlainValuesWriter/getAllocatedSize()#org/apache/parquet/column/values/bitpacking/ByteBitPackingValuesWriter/getAllocatedSize()
org/apache/parquet/column/values/plain/BooleanPlainValuesWriter/close()#org/apache/parquet/column/values/ValuesWriter/close()
org/apache/parquet/column/values/plain/BooleanPlainValuesWriter/reset()#org/apache/parquet/column/values/bitpacking/ByteBitPackingValuesWriter/reset()
org/apache/parquet/column/values/plain/BooleanPlainValuesWriter/getBytes()#org/apache/parquet/column/values/bitpacking/ByteBitPackingValuesWriter/getBytes()
org/apache/parquet/bytes/CapacityByteArrayOutputStream/close()#java/io/OutputStream/close()
org/apache/parquet/bytes/CapacityByteArrayOutputStream/close()#org/apache/parquet/OutputStreamCloseException/OutputStreamCloseException(java.lang.Throwable)
org/apache/parquet/bytes/CapacityByteArrayOutputStream/close()#org/apache/parquet/bytes/ByteBufferAllocator/release(java.nio.ByteBuffer)
org/apache/parquet/bytes/CapacityByteArrayOutputStream/addSlab(int)#java/util/List/size()
org/apache/parquet/bytes/CapacityByteArrayOutputStream/addSlab(int)#java/util/List/add(E)
org/apache/parquet/bytes/CapacityByteArrayOutputStream/addSlab(int)#org/apache/parquet/bytes/ByteBufferAllocator/allocate(int)
org/apache/parquet/bytes/CapacityByteArrayOutputStream/setByte(long,byte)#java/nio/ByteBuffer/put(int,byte)
org/apache/parquet/bytes/CapacityByteArrayOutputStream/setByte(long,byte)#java/util/List/size()
org/apache/parquet/bytes/CapacityByteArrayOutputStream/setByte(long,byte)#java/nio/Buffer/limit()
org/apache/parquet/bytes/CapacityByteArrayOutputStream/setByte(long,byte)#org/apache/parquet/Preconditions/checkArgument(boolean,java.lang.String)
org/apache/parquet/bytes/CapacityByteArrayOutputStream/setByte(long,byte)#java/util/List/get(int)
org/apache/parquet/bytes/CapacityByteArrayOutputStream/memUsageString(java.lang.String)#java/lang/Class/getSimpleName()
org/apache/parquet/bytes/CapacityByteArrayOutputStream/memUsageString(java.lang.String)#java/lang/String/format(java.lang.String,java.lang.Object[])
org/apache/parquet/bytes/CapacityByteArrayOutputStream/memUsageString(java.lang.String)#java/util/List/size()
org/apache/parquet/bytes/CapacityByteArrayOutputStream/memUsageString(java.lang.String)#java/lang/Object/getClass()
org/apache/parquet/bytes/CapacityByteArrayOutputStream/memUsageString(java.lang.String)#org/apache/parquet/bytes/CapacityByteArrayOutputStream/getCapacity()
org/apache/parquet/bytes/CapacityByteArrayOutputStream/getSlabCount()#java/util/List/size()
org/apache/parquet/bytes/CapacityByteArrayOutputStream/writeToOutput(java.io.OutputStream,java.nio.ByteBuffer,int)#java/nio/Buffer/flip()
org/apache/parquet/bytes/CapacityByteArrayOutputStream/writeToOutput(java.io.OutputStream,java.nio.ByteBuffer,int)#java/nio/ByteBuffer/array()
org/apache/parquet/bytes/CapacityByteArrayOutputStream/writeToOutput(java.io.OutputStream,java.nio.ByteBuffer,int)#java/io/OutputStream/write(byte[],int,int)
org/apache/parquet/bytes/CapacityByteArrayOutputStream/writeToOutput(java.io.OutputStream,java.nio.ByteBuffer,int)#java/nio/ByteBuffer/hasArray()
org/apache/parquet/bytes/CapacityByteArrayOutputStream/writeToOutput(java.io.OutputStream,java.nio.ByteBuffer,int)#java/io/OutputStream/write(byte[])
org/apache/parquet/bytes/CapacityByteArrayOutputStream/writeToOutput(java.io.OutputStream,java.nio.ByteBuffer,int)#java/nio/ByteBuffer/arrayOffset()
org/apache/parquet/bytes/CapacityByteArrayOutputStream/writeToOutput(java.io.OutputStream,java.nio.ByteBuffer,int)#java/nio/ByteBuffer/get(byte[])
org/apache/parquet/bytes/CapacityByteArrayOutputStream/write(int)#java/nio/ByteBuffer/put(int,byte)
org/apache/parquet/bytes/CapacityByteArrayOutputStream/write(int)#java/nio/Buffer/position(int)
org/apache/parquet/bytes/CapacityByteArrayOutputStream/write(int)#org/apache/parquet/bytes/CapacityByteArrayOutputStream/addSlab(int)
org/apache/parquet/bytes/CapacityByteArrayOutputStream/write(int)#java/nio/Buffer/hasRemaining()
org/apache/parquet/bytes/CapacityByteArrayOutputStream/writeTo(java.io.OutputStream)#org/apache/parquet/bytes/CapacityByteArrayOutputStream/writeToOutput(java.io.OutputStream,java.nio.ByteBuffer,int)
org/apache/parquet/bytes/CapacityByteArrayOutputStream/writeTo(java.io.OutputStream)#java/nio/Buffer/position()
org/apache/parquet/bytes/CapacityByteArrayOutputStream/writeTo(java.io.OutputStream)#java/util/List/size()
org/apache/parquet/bytes/CapacityByteArrayOutputStream/writeTo(java.io.OutputStream)#java/util/List/get(int)
org/apache/parquet/bytes/CapacityByteArrayOutputStream/withTargetNumSlabs(int,int,int,org.apache.parquet.bytes.ByteBufferAllocator)#org/apache/parquet/bytes/CapacityByteArrayOutputStream/CapacityByteArrayOutputStream(int,int,org.apache.parquet.bytes.ByteBufferAllocator)
org/apache/parquet/bytes/CapacityByteArrayOutputStream/withTargetNumSlabs(int,int,int,org.apache.parquet.bytes.ByteBufferAllocator)#org/apache/parquet/bytes/CapacityByteArrayOutputStream/initialSlabSizeHeuristic(int,int,int)
org/apache/parquet/bytes/CapacityByteArrayOutputStream/write(byte[],int,int)#java/lang/IndexOutOfBoundsException/IndexOutOfBoundsException(java.lang.String)
org/apache/parquet/bytes/CapacityByteArrayOutputStream/write(byte[],int,int)#java/nio/Buffer/remaining()
org/apache/parquet/bytes/CapacityByteArrayOutputStream/write(byte[],int,int)#java/lang/String/format(java.lang.String,java.lang.Object[])
org/apache/parquet/bytes/CapacityByteArrayOutputStream/write(byte[],int,int)#org/apache/parquet/bytes/CapacityByteArrayOutputStream/addSlab(int)
org/apache/parquet/bytes/CapacityByteArrayOutputStream/write(byte[],int,int)#java/nio/ByteBuffer/put(byte[],int,int)
org/apache/parquet/bytes/CapacityByteArrayOutputStream/reset()#java/lang/Math/max(int,int)
org/apache/parquet/bytes/CapacityByteArrayOutputStream/reset()#java/util/List/clear()
org/apache/parquet/bytes/CapacityByteArrayOutputStream/reset()#org/apache/parquet/bytes/ByteBufferAllocator/release(java.nio.ByteBuffer)
org/apache/parquet/bytes/CapacityByteArrayOutputStream/getCurrentIndex()#org/apache/parquet/Preconditions/checkArgument(boolean,java.lang.String)
org/apache/parquet/bytes/CapacityByteArrayOutputStream/initialSlabSizeHeuristic(int,int,int)#java/lang/Math/max(int,int)
org/apache/parquet/bytes/CapacityByteArrayOutputStream/initialSlabSizeHeuristic(int,int,int)#java/lang/Math/pow(double,double)
org/apache/parquet/bytes/CapacityByteArrayOutputStream/withTargetNumSlabs(int,int,int)#org/apache/parquet/bytes/CapacityByteArrayOutputStream/withTargetNumSlabs(int,int,int,org.apache.parquet.bytes.ByteBufferAllocator)
org/apache/parquet/bytes/CapacityByteArrayOutputStream/withTargetNumSlabs(int,int,int)#org/apache/parquet/bytes/HeapByteBufferAllocator/HeapByteBufferAllocator()
org/apache/parquet/io/RecordReaderImplementation/Case/equals(java.lang.Object)#org/apache/parquet/io/RecordReaderImplementation/Case/equals(org.apache.parquet.io.RecordReaderImplementation.Case)
org/apache/parquet/io/RecordReaderImplementation/Case/toString()#org/apache/parquet/io/RecordReaderImplementation/Case/getNextState()
org/apache/parquet/benchmarks/DataGenerator/generateData(org.apache.parquet.hadoop.Path,org.apache.parquet.hadoop.Configuration,org.apache.parquet.column.ParquetProperties.WriterVersion,int,int,int,org.apache.parquet.hadoop.metadata.CompressionCodecName,int)#java/lang/String/String(char[])
org/apache/parquet/benchmarks/DataGenerator/generateData(org.apache.parquet.hadoop.Path,org.apache.parquet.hadoop.Configuration,org.apache.parquet.column.ParquetProperties.WriterVersion,int,int,int,org.apache.parquet.hadoop.metadata.CompressionCodecName,int)#org/apache/parquet/example/data/Group/append(java.lang.String,java.lang.String)
org/apache/parquet/benchmarks/DataGenerator/generateData(org.apache.parquet.hadoop.Path,org.apache.parquet.hadoop.Configuration,org.apache.parquet.column.ParquetProperties.WriterVersion,int,int,int,org.apache.parquet.hadoop.metadata.CompressionCodecName,int)#java/util/Arrays/fill(char[],char)
org/apache/parquet/benchmarks/DataGenerator/generateData(org.apache.parquet.hadoop.Path,org.apache.parquet.hadoop.Configuration,org.apache.parquet.column.ParquetProperties.WriterVersion,int,int,int,org.apache.parquet.hadoop.metadata.CompressionCodecName,int)#org/apache/parquet/example/data/Group/append(java.lang.String,int)
org/apache/parquet/benchmarks/DataGenerator/generateData(org.apache.parquet.hadoop.Path,org.apache.parquet.hadoop.Configuration,org.apache.parquet.column.ParquetProperties.WriterVersion,int,int,int,org.apache.parquet.hadoop.metadata.CompressionCodecName,int)#org/apache/parquet/hadoop/ParquetWriter/close()
org/apache/parquet/benchmarks/DataGenerator/generateData(org.apache.parquet.hadoop.Path,org.apache.parquet.hadoop.Configuration,org.apache.parquet.column.ParquetProperties.WriterVersion,int,int,int,org.apache.parquet.hadoop.metadata.CompressionCodecName,int)#org/apache/parquet/hadoop/example/GroupWriteSupport/GroupWriteSupport()
org/apache/parquet/benchmarks/DataGenerator/generateData(org.apache.parquet.hadoop.Path,org.apache.parquet.hadoop.Configuration,org.apache.parquet.column.ParquetProperties.WriterVersion,int,int,int,org.apache.parquet.hadoop.metadata.CompressionCodecName,int)#java/io/PrintStream/println(char[])
org/apache/parquet/benchmarks/DataGenerator/generateData(org.apache.parquet.hadoop.Path,org.apache.parquet.hadoop.Configuration,org.apache.parquet.column.ParquetProperties.WriterVersion,int,int,int,org.apache.parquet.hadoop.metadata.CompressionCodecName,int)#org/apache/parquet/hadoop/ParquetWriter/write(T)
org/apache/parquet/benchmarks/DataGenerator/generateData(org.apache.parquet.hadoop.Path,org.apache.parquet.hadoop.Configuration,org.apache.parquet.column.ParquetProperties.WriterVersion,int,int,int,org.apache.parquet.hadoop.metadata.CompressionCodecName,int)#org/apache/parquet/example/data/Group/append(java.lang.String,double)
org/apache/parquet/benchmarks/DataGenerator/generateData(org.apache.parquet.hadoop.Path,org.apache.parquet.hadoop.Configuration,org.apache.parquet.column.ParquetProperties.WriterVersion,int,int,int,org.apache.parquet.hadoop.metadata.CompressionCodecName,int)#java/util/UUID/toString()
org/apache/parquet/benchmarks/DataGenerator/generateData(org.apache.parquet.hadoop.Path,org.apache.parquet.hadoop.Configuration,org.apache.parquet.column.ParquetProperties.WriterVersion,int,int,int,org.apache.parquet.hadoop.metadata.CompressionCodecName,int)#org/apache/parquet/example/data/simple/SimpleGroupFactory/newGroup()
org/apache/parquet/benchmarks/DataGenerator/generateData(org.apache.parquet.hadoop.Path,org.apache.parquet.hadoop.Configuration,org.apache.parquet.column.ParquetProperties.WriterVersion,int,int,int,org.apache.parquet.hadoop.metadata.CompressionCodecName,int)#org/apache/parquet/example/data/Group/append(java.lang.String,org.apache.parquet.io.api.Binary)
org/apache/parquet/benchmarks/DataGenerator/generateData(org.apache.parquet.hadoop.Path,org.apache.parquet.hadoop.Configuration,org.apache.parquet.column.ParquetProperties.WriterVersion,int,int,int,org.apache.parquet.hadoop.metadata.CompressionCodecName,int)#org/apache/parquet/example/data/simple/SimpleGroupFactory/SimpleGroupFactory(org.apache.parquet.schema.MessageType)
org/apache/parquet/benchmarks/DataGenerator/generateData(org.apache.parquet.hadoop.Path,org.apache.parquet.hadoop.Configuration,org.apache.parquet.column.ParquetProperties.WriterVersion,int,int,int,org.apache.parquet.hadoop.metadata.CompressionCodecName,int)#java/util/UUID/randomUUID()
org/apache/parquet/benchmarks/DataGenerator/generateData(org.apache.parquet.hadoop.Path,org.apache.parquet.hadoop.Configuration,org.apache.parquet.column.ParquetProperties.WriterVersion,int,int,int,org.apache.parquet.hadoop.metadata.CompressionCodecName,int)#org/apache/parquet/schema/MessageTypeParser/parseMessageType(java.lang.String)
org/apache/parquet/benchmarks/DataGenerator/generateData(org.apache.parquet.hadoop.Path,org.apache.parquet.hadoop.Configuration,org.apache.parquet.column.ParquetProperties.WriterVersion,int,int,int,org.apache.parquet.hadoop.metadata.CompressionCodecName,int)#org/apache/parquet/hadoop/ParquetWriter/ParquetWriter(org.apache.parquet.hadoop.Path,org.apache.parquet.hadoop.api.WriteSupport,org.apache.parquet.hadoop.metadata.CompressionCodecName,int,int,int,boolean,boolean,org.apache.parquet.column.ParquetProperties.WriterVersion,org.apache.parquet.hadoop.Configuration)
org/apache/parquet/benchmarks/DataGenerator/generateData(org.apache.parquet.hadoop.Path,org.apache.parquet.hadoop.Configuration,org.apache.parquet.column.ParquetProperties.WriterVersion,int,int,int,org.apache.parquet.hadoop.metadata.CompressionCodecName,int)#org/apache/parquet/hadoop/example/GroupWriteSupport/setSchema(org.apache.parquet.schema.MessageType,org.apache.parquet.hadoop.Configuration)
org/apache/parquet/benchmarks/DataGenerator/generateData(org.apache.parquet.hadoop.Path,org.apache.parquet.hadoop.Configuration,org.apache.parquet.column.ParquetProperties.WriterVersion,int,int,int,org.apache.parquet.hadoop.metadata.CompressionCodecName,int)#org/apache/parquet/example/data/Group/append(java.lang.String,long)
org/apache/parquet/benchmarks/DataGenerator/generateData(org.apache.parquet.hadoop.Path,org.apache.parquet.hadoop.Configuration,org.apache.parquet.column.ParquetProperties.WriterVersion,int,int,int,org.apache.parquet.hadoop.metadata.CompressionCodecName,int)#org/apache/parquet/example/data/Group/append(java.lang.String,boolean)
org/apache/parquet/benchmarks/DataGenerator/generateData(org.apache.parquet.hadoop.Path,org.apache.parquet.hadoop.Configuration,org.apache.parquet.column.ParquetProperties.WriterVersion,int,int,int,org.apache.parquet.hadoop.metadata.CompressionCodecName,int)#org/apache/parquet/io/api/Binary/fromConstantByteArray(byte[])
org/apache/parquet/benchmarks/DataGenerator/generateData(org.apache.parquet.hadoop.Path,org.apache.parquet.hadoop.Configuration,org.apache.parquet.column.ParquetProperties.WriterVersion,int,int,int,org.apache.parquet.hadoop.metadata.CompressionCodecName,int)#org/apache/parquet/example/data/Group/append(java.lang.String,float)
org/apache/parquet/benchmarks/DataGenerator/generateData(org.apache.parquet.hadoop.Path,org.apache.parquet.hadoop.Configuration,org.apache.parquet.column.ParquetProperties.WriterVersion,int,int,int,org.apache.parquet.hadoop.metadata.CompressionCodecName,int)#org/apache/parquet/benchmarks/BenchmarkUtils/exists(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path)
org/apache/parquet/benchmarks/DataGenerator/cleanup()#org/apache/parquet/benchmarks/BenchmarkUtils/deleteIfExists(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path)
org/apache/parquet/benchmarks/DataGenerator/generateAll()#java/lang/RuntimeException/RuntimeException(java.lang.Throwable)
org/apache/parquet/benchmarks/DataGenerator/generateAll()#org/apache/parquet/benchmarks/DataGenerator/generateData(org.apache.parquet.hadoop.Path,org.apache.parquet.hadoop.Configuration,org.apache.parquet.column.ParquetProperties.WriterVersion,int,int,int,org.apache.parquet.hadoop.metadata.CompressionCodecName,int)
org/apache/parquet/benchmarks/DataGenerator/main(java.lang.String[])#java/lang/String/equalsIgnoreCase(java.lang.String)
org/apache/parquet/benchmarks/DataGenerator/main(java.lang.String[])#java/io/PrintStream/println(java.lang.String)
org/apache/parquet/benchmarks/DataGenerator/main(java.lang.String[])#java/lang/System/exit(int)
org/apache/parquet/benchmarks/DataGenerator/main(java.lang.String[])#org/apache/parquet/benchmarks/DataGenerator/cleanup()
org/apache/parquet/benchmarks/DataGenerator/main(java.lang.String[])#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/parquet/benchmarks/DataGenerator/main(java.lang.String[])#org/apache/parquet/benchmarks/DataGenerator/generateAll()
org/apache/parquet/benchmarks/DataGenerator/main(java.lang.String[])#org/apache/parquet/benchmarks/DataGenerator/DataGenerator()
org/apache/parquet/avro/TestReflectInputOutputFormat/nextRecord(int)#org/apache/parquet/avro/TestReflectInputOutputFormat/Engine/Engine()
org/apache/parquet/avro/TestReflectInputOutputFormat/nextRecord(int)#java/lang/String/format(java.lang.String,java.lang.Object[])
org/apache/parquet/avro/TestReflectInputOutputFormat/nextRecord(int)#org/apache/parquet/avro/TestReflectInputOutputFormat/Car/Car()
org/apache/parquet/avro/TestReflectInputOutputFormat/nextRecord(int)#org/apache/parquet/avro/TestReflectInputOutputFormat/Service/Service()
org/apache/parquet/avro/TestReflectInputOutputFormat/nextRecord(int)#java/util/List/add(E)
org/apache/parquet/avro/TestReflectInputOutputFormat/nextRecord(int)#java/lang/String/getBytes()
org/apache/parquet/avro/TestReflectInputOutputFormat/nextRecord(int)#org/apache/parquet/avro/TestReflectInputOutputFormat/LeatherTrim/LeatherTrim()
org/apache/parquet/avro/TestReflectInputOutputFormat/waitForJob(org.apache.parquet.hadoop.Job)#java/lang/Thread/sleep(long)
org/apache/parquet/avro/TestReflectInputOutputFormat/waitForJob(org.apache.parquet.hadoop.Job)#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/apache/parquet/avro/TestReflectInputOutputFormat/createParquetFile()#org/apache/parquet/avro/AvroParquetOutputFormat/setAvroDataSupplier(org.apache.parquet.hadoop.Job,java.lang.Class)
org/apache/parquet/avro/TestReflectInputOutputFormat/createParquetFile()#org/apache/parquet/avro/AvroWriteSupport/setAvroDataSupplier(org.apache.parquet.hadoop.Configuration,java.lang.Class)
org/apache/parquet/avro/TestReflectInputOutputFormat/createParquetFile()#org/apache/parquet/avro/TestReflectInputOutputFormat/waitForJob(org.apache.parquet.hadoop.Job)
org/apache/parquet/avro/TestReflectInputOutputFormat/createParquetFile()#java/lang/Object/Object()
org/apache/parquet/avro/TestReflectInputOutputFormat/createParquetFile()#org/apache/parquet/avro/AvroParquetOutputFormat/setSchema(org.apache.parquet.hadoop.Job,org.apache.parquet.pig.Schema)
org/apache/parquet/avro/TestReflectInputOutputFormat/createParquetFile()#org/apache/parquet/avro/AvroReadSupport/setAvroDataSupplier(org.apache.parquet.hadoop.Configuration,java.lang.Class)
org/apache/parquet/avro/TestReflectInputOutputFormat/testReadWrite()#org/apache/parquet/hadoop/ParquetReader/read()
org/apache/parquet/avro/TestReflectInputOutputFormat/testReadWrite()#org/apache/parquet/avro/AvroParquetInputFormat/setRequestedProjection(org.apache.parquet.hadoop.Job,org.apache.parquet.pig.Schema)
org/apache/parquet/avro/TestReflectInputOutputFormat/testReadWrite()#org/apache/parquet/hadoop/ParquetReader/close()
org/apache/parquet/avro/TestReflectInputOutputFormat/testReadWrite()#org/apache/parquet/avro/TestReflectInputOutputFormat/nextRecord(int)
org/apache/parquet/avro/TestReflectInputOutputFormat/testReadWrite()#org/apache/parquet/avro/TestReflectInputOutputFormat/waitForJob(org.apache.parquet.hadoop.Job)
org/apache/parquet/avro/TestReflectInputOutputFormat/testReadWrite()#java/lang/String/equals(java.lang.Object)
org/apache/parquet/avro/TestReflectInputOutputFormat/testReadWrite()#org/apache/parquet/avro/AvroParquetReader/AvroParquetReader(org.apache.parquet.hadoop.Path,org.apache.parquet.filter.UnboundRecordFilter)
org/apache/parquet/avro/TestReflectInputOutputFormat/testReadWrite()#org/apache/parquet/hadoop/ParquetInputFormat/setUnboundRecordFilter(org.apache.parquet.hadoop.Job,java.lang.Class)
org/apache/parquet/avro/TestReflectInputOutputFormat/testReadWrite()#java/lang/Object/Object()
org/apache/parquet/avro/TestReflectInputOutputFormat/testReadWrite()#org/apache/parquet/avro/AvroParquetOutputFormat/setSchema(org.apache.parquet.hadoop.Job,org.apache.parquet.pig.Schema)
org/apache/parquet/avro/TestReflectInputOutputFormat/testReadWriteChangedCar()#org/apache/parquet/hadoop/ParquetReader/read()
org/apache/parquet/avro/TestReflectInputOutputFormat/testReadWriteChangedCar()#org/apache/parquet/avro/AvroParquetInputFormat/setRequestedProjection(org.apache.parquet.hadoop.Job,org.apache.parquet.pig.Schema)
org/apache/parquet/avro/TestReflectInputOutputFormat/testReadWriteChangedCar()#org/apache/parquet/hadoop/ParquetReader/close()
org/apache/parquet/avro/TestReflectInputOutputFormat/testReadWriteChangedCar()#org/apache/parquet/avro/TestReflectInputOutputFormat/nextRecord(int)
org/apache/parquet/avro/TestReflectInputOutputFormat/testReadWriteChangedCar()#org/apache/parquet/avro/TestReflectInputOutputFormat/waitForJob(org.apache.parquet.hadoop.Job)
org/apache/parquet/avro/TestReflectInputOutputFormat/testReadWriteChangedCar()#java/lang/String/equals(java.lang.Object)
org/apache/parquet/avro/TestReflectInputOutputFormat/testReadWriteChangedCar()#org/apache/parquet/avro/AvroParquetReader/AvroParquetReader(org.apache.parquet.hadoop.Path,org.apache.parquet.filter.UnboundRecordFilter)
org/apache/parquet/avro/TestReflectInputOutputFormat/testReadWriteChangedCar()#org/apache/parquet/hadoop/ParquetInputFormat/setUnboundRecordFilter(org.apache.parquet.hadoop.Job,java.lang.Class)
org/apache/parquet/avro/TestReflectInputOutputFormat/testReadWriteChangedCar()#org/apache/parquet/avro/AvroParquetInputFormat/setAvroReadSchema(org.apache.parquet.hadoop.Job,org.apache.parquet.pig.Schema)
org/apache/parquet/avro/TestReflectInputOutputFormat/testReadWriteChangedCar()#java/lang/Object/Object()
org/apache/parquet/avro/TestReflectInputOutputFormat/testReadWriteChangedCar()#org/apache/parquet/avro/AvroParquetOutputFormat/setSchema(org.apache.parquet.hadoop.Job,org.apache.parquet.pig.Schema)
org/apache/parquet/filter2/predicate/Operators/UserDefinedByClass/hashCode()#org/apache/parquet/filter2/predicate/Operators/Column/hashCode()
org/apache/parquet/filter2/predicate/Operators/UserDefinedByClass/hashCode()#java/lang/Object/hashCode()
org/apache/parquet/filter2/predicate/Operators/UserDefinedByClass/hashCode()#java/lang/Object/getClass()
org/apache/parquet/filter2/predicate/Operators/UserDefinedByClass/getUserDefinedPredicate()#java/lang/Class/newInstance()
org/apache/parquet/filter2/predicate/Operators/UserDefinedByClass/getUserDefinedPredicate()#java/lang/String/format(java.lang.String,java.lang.Object[])
org/apache/parquet/filter2/predicate/Operators/UserDefinedByClass/getUserDefinedPredicate()#java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)
org/apache/parquet/filter2/predicate/Operators/UserDefinedByClass/equals(java.lang.Object)#org/apache/parquet/filter2/predicate/Operators/Column/equals(java.lang.Object)
org/apache/parquet/filter2/predicate/Operators/UserDefinedByClass/equals(java.lang.Object)#java/lang/Object/equals(java.lang.Object)
org/apache/parquet/filter2/predicate/Operators/UserDefinedByClass/equals(java.lang.Object)#java/lang/Object/getClass()
org/apache/parquet/arrow/schema/SchemaMapping/RepeatedTypeMapping/accept(org.apache.parquet.arrow.schema.SchemaMapping.TypeMappingVisitor)#org/apache/parquet/arrow/schema/SchemaMapping/TypeMappingVisitor/visit(org.apache.parquet.arrow.schema.SchemaMapping.RepeatedTypeMapping)
org/apache/parquet/avro/TestCircularReferences/ReferenceManager/HijackingIndexedRecord/put(int,java.lang.Object)#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/apache/parquet/io/FilteredRecordReader/skipToMatch()#org/apache/parquet/io/RecordReaderImplementation/State/getNextState(int)
org/apache/parquet/io/FilteredRecordReader/skipToMatch()#org/apache/parquet/column/ColumnReader/consume()
org/apache/parquet/io/FilteredRecordReader/skipToMatch()#org/apache/parquet/column/ColumnReader/skip()
org/apache/parquet/io/FilteredRecordReader/skipToMatch()#org/apache/parquet/io/RecordReaderImplementation/getState(int)
org/apache/parquet/io/FilteredRecordReader/skipToMatch()#org/apache/parquet/filter/RecordFilter/isMatch()
org/apache/parquet/io/FilteredRecordReader/skipToMatch()#org/apache/parquet/column/ColumnReader/getCurrentDefinitionLevel()
org/apache/parquet/io/FilteredRecordReader/skipToMatch()#org/apache/parquet/column/ColumnReader/getCurrentRepetitionLevel()
org/apache/parquet/io/FilteredRecordReader/read()#org/apache/parquet/io/RecordReaderImplementation/read()
org/apache/parquet/io/FilteredRecordReader/read()#org/apache/parquet/io/FilteredRecordReader/skipToMatch()
org/apache/parquet/proto/ProtoSchemaConverterTest/testConvertRepetition()#org/apache/parquet/proto/ProtoSchemaConverterTest/testConversion(java.lang.Class,java.lang.String)
org/apache/parquet/proto/ProtoSchemaConverterTest/testConversion(java.lang.Class,java.lang.String)#org/apache/parquet/schema/Type/toString()
org/apache/parquet/proto/ProtoSchemaConverterTest/testConversion(java.lang.Class,java.lang.String)#org/apache/parquet/schema/MessageTypeParser/parseMessageType(java.lang.String)
org/apache/parquet/proto/ProtoSchemaConverterTest/testConversion(java.lang.Class,java.lang.String)#org/apache/parquet/proto/ProtoSchemaConverter/convert(java.lang.Class)
org/apache/parquet/proto/ProtoSchemaConverterTest/testConversion(java.lang.Class,java.lang.String)#org/apache/parquet/proto/ProtoSchemaConverter/ProtoSchemaConverter()
org/apache/parquet/proto/ProtoSchemaConverterTest/testConvertAllDatatypes()#org/apache/parquet/proto/ProtoSchemaConverterTest/testConversion(java.lang.Class,java.lang.String)
org/apache/parquet/schema/Types/BaseMapBuilder/requiredListValue()#org/apache/parquet/schema/Types/BaseMapBuilder/listValue(org.apache.parquet.schema.Type.Repetition)
org/apache/parquet/schema/Types/BaseMapBuilder/value(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.schema.Type.Repetition)#org/apache/parquet/schema/Types/Builder/repetition(org.apache.parquet.schema.Type.Repetition)
org/apache/parquet/schema/Types/BaseMapBuilder/value(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.schema.Type.Repetition)#org/apache/parquet/schema/Types/BaseMapBuilder/ValueBuilder/ValueBuilder(M,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/schema/Types/BaseMapBuilder/value(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.schema.Type.Repetition)#org/apache/parquet/schema/Types/BaseMapBuilder/self()
org/apache/parquet/schema/Types/BaseMapBuilder/requiredGroupValue()#org/apache/parquet/schema/Types/BaseMapBuilder/groupValue(org.apache.parquet.schema.Type.Repetition)
org/apache/parquet/schema/Types/BaseMapBuilder/requiredMapValue()#org/apache/parquet/schema/Types/BaseMapBuilder/mapValue(org.apache.parquet.schema.Type.Repetition)
org/apache/parquet/schema/Types/BaseMapBuilder/mapValue(org.apache.parquet.schema.Type.Repetition)#org/apache/parquet/schema/Types/Builder/repetition(org.apache.parquet.schema.Type.Repetition)
org/apache/parquet/schema/Types/BaseMapBuilder/mapValue(org.apache.parquet.schema.Type.Repetition)#org/apache/parquet/schema/Types/BaseMapBuilder/self()
org/apache/parquet/schema/Types/BaseMapBuilder/mapValue(org.apache.parquet.schema.Type.Repetition)#org/apache/parquet/schema/Types/BaseMapBuilder/MapValueBuilder/MapValueBuilder(M)
org/apache/parquet/schema/Types/BaseMapBuilder/optionalListValue()#org/apache/parquet/schema/Types/BaseMapBuilder/listValue(org.apache.parquet.schema.Type.Repetition)
org/apache/parquet/schema/Types/BaseMapBuilder/groupValue(org.apache.parquet.schema.Type.Repetition)#org/apache/parquet/schema/Types/Builder/repetition(org.apache.parquet.schema.Type.Repetition)
org/apache/parquet/schema/Types/BaseMapBuilder/groupValue(org.apache.parquet.schema.Type.Repetition)#org/apache/parquet/schema/Types/BaseMapBuilder/GroupValueBuilder/GroupValueBuilder(M)
org/apache/parquet/schema/Types/BaseMapBuilder/groupValue(org.apache.parquet.schema.Type.Repetition)#org/apache/parquet/schema/Types/BaseMapBuilder/self()
org/apache/parquet/schema/Types/BaseMapBuilder/requiredValue(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)#org/apache/parquet/schema/Types/BaseMapBuilder/value(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.schema.Type.Repetition)
org/apache/parquet/schema/Types/BaseMapBuilder/optionalValue(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)#org/apache/parquet/schema/Types/BaseMapBuilder/value(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.schema.Type.Repetition)
org/apache/parquet/schema/Types/BaseMapBuilder/setKeyType(org.apache.parquet.schema.Type)#org/apache/parquet/Preconditions/checkState(boolean,java.lang.String)
org/apache/parquet/schema/Types/BaseMapBuilder/value(org.apache.parquet.schema.Type)#org/apache/parquet/schema/Types/BaseMapBuilder/self()
org/apache/parquet/schema/Types/BaseMapBuilder/value(org.apache.parquet.schema.Type)#org/apache/parquet/schema/Types/BaseMapBuilder/setValueType(org.apache.parquet.schema.Type)
org/apache/parquet/schema/Types/BaseMapBuilder/groupKey()#org/apache/parquet/schema/Types/BaseMapBuilder/GroupKeyBuilder/GroupKeyBuilder(M)
org/apache/parquet/schema/Types/BaseMapBuilder/groupKey()#org/apache/parquet/schema/Types/BaseMapBuilder/self()
org/apache/parquet/schema/Types/BaseMapBuilder/key(org.apache.parquet.schema.Type)#org/apache/parquet/schema/Types/BaseMapBuilder/setKeyType(org.apache.parquet.schema.Type)
org/apache/parquet/schema/Types/BaseMapBuilder/key(org.apache.parquet.schema.Type)#org/apache/parquet/schema/Types/BaseMapBuilder/self()
org/apache/parquet/schema/Types/BaseMapBuilder/build(java.lang.String)#org/apache/parquet/schema/Types/buildGroup(org.apache.parquet.schema.Type.Repetition)
org/apache/parquet/schema/Types/BaseMapBuilder/build(java.lang.String)#org/apache/parquet/Preconditions/checkState(boolean,java.lang.String)
org/apache/parquet/schema/Types/BaseMapBuilder/build(java.lang.String)#org/apache/parquet/schema/Types/Builder/named(java.lang.String)
org/apache/parquet/schema/Types/BaseMapBuilder/build(java.lang.String)#org/apache/parquet/schema/Types/Builder/as(org.apache.parquet.schema.OriginalType)
org/apache/parquet/schema/Types/BaseMapBuilder/build(java.lang.String)#org/apache/parquet/schema/Types/BaseGroupBuilder/addFields(org.apache.parquet.schema.Type[])
org/apache/parquet/schema/Types/BaseMapBuilder/build(java.lang.String)#org/apache/parquet/schema/Types/BaseGroupBuilder/repeatedGroup()
org/apache/parquet/schema/Types/BaseMapBuilder/key(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)#org/apache/parquet/schema/Types/BaseMapBuilder/KeyBuilder/KeyBuilder(M,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/schema/Types/BaseMapBuilder/key(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)#org/apache/parquet/schema/Types/BaseMapBuilder/self()
org/apache/parquet/schema/Types/BaseMapBuilder/setValueType(org.apache.parquet.schema.Type)#org/apache/parquet/Preconditions/checkState(boolean,java.lang.String)
org/apache/parquet/schema/Types/BaseMapBuilder/optionalGroupValue()#org/apache/parquet/schema/Types/BaseMapBuilder/groupValue(org.apache.parquet.schema.Type.Repetition)
org/apache/parquet/schema/Types/BaseMapBuilder/optionalMapValue()#org/apache/parquet/schema/Types/BaseMapBuilder/mapValue(org.apache.parquet.schema.Type.Repetition)
org/apache/parquet/schema/Types/BaseMapBuilder/listValue(org.apache.parquet.schema.Type.Repetition)#org/apache/parquet/schema/Types/BaseMapBuilder/ListValueBuilder/ListValueBuilder(M)
org/apache/parquet/schema/Types/BaseMapBuilder/listValue(org.apache.parquet.schema.Type.Repetition)#org/apache/parquet/schema/Types/Builder/repetition(org.apache.parquet.schema.Type.Repetition)
org/apache/parquet/schema/Types/BaseMapBuilder/listValue(org.apache.parquet.schema.Type.Repetition)#org/apache/parquet/schema/Types/BaseMapBuilder/self()
org/apache/parquet/thrift/ThriftRecordConverter/FieldEnumConverter/addBinary(org.apache.parquet.io.api.Binary)#org/apache/parquet/io/api/Binary/toStringUsingUTF8()
org/apache/parquet/thrift/ThriftRecordConverter/FieldEnumConverter/addBinary(org.apache.parquet.io.api.Binary)#org/apache/parquet/thrift/ThriftRecordConverter/FieldEnumConverter/addBinary(org/apache/parquet/io/api/Binary)/$anonymous1/(java.lang.String)
org/apache/parquet/thrift/ThriftRecordConverter/FieldEnumConverter/addBinary(org.apache.parquet.io.api.Binary)#java/util/Map/get(java.lang.Object)
org/apache/parquet/thrift/ThriftRecordConverter/FieldEnumConverter/addBinary(org.apache.parquet.io.api.Binary)#org/apache/parquet/io/ParquetDecodingException/ParquetDecodingException(java.lang.String)
org/apache/parquet/hadoop/TestMemoryManager/testMemoryManagerUpperLimit()#org/apache/parquet/hadoop/MemoryManager/getTotalMemoryPool()
org/apache/parquet/hadoop/TestMemoryManager/testMemoryManagerUpperLimit()#org/apache/parquet/hadoop/ParquetOutputFormat/getMemoryManager()
org/apache/parquet/hadoop/TestMemoryManager/testMemoryManagerUpperLimit()#java/lang/Math/abs(long)
org/apache/parquet/hadoop/TestMemoryManager/testMemoryManager()#org/apache/parquet/hadoop/TestMemoryManager/createWriter(int)
org/apache/parquet/hadoop/TestMemoryManager/testMemoryManager()#org/apache/parquet/hadoop/MemoryManager/getTotalMemoryPool()
org/apache/parquet/hadoop/TestMemoryManager/testMemoryManager()#org/apache/parquet/hadoop/ParquetOutputFormat/getMemoryManager()
org/apache/parquet/hadoop/TestMemoryManager/testMemoryManager()#org/apache/parquet/hadoop/TestMemoryManager/getTotalAllocation()
org/apache/parquet/hadoop/TestMemoryManager/setUp()#org/apache/parquet/hadoop/TestMemoryManager/createWriter(int)
org/apache/parquet/hadoop/TestMemoryManager/setUp()#java/lang/Math/round(double)
org/apache/parquet/hadoop/TestMemoryManager/setUp()#java/lang/management/ManagementFactory/getMemoryMXBean()
org/apache/parquet/hadoop/TestMemoryManager/setUp()#org/apache/parquet/hadoop/ParquetOutputFormat/ParquetOutputFormat(S)
org/apache/parquet/hadoop/TestMemoryManager/setUp()#org/apache/parquet/schema/MessageTypeParser/parseMessageType(java.lang.String)
org/apache/parquet/hadoop/TestMemoryManager/setUp()#org/apache/parquet/hadoop/example/GroupWriteSupport/setSchema(org.apache.parquet.schema.MessageType,org.apache.parquet.hadoop.Configuration)
org/apache/parquet/hadoop/TestMemoryManager/setUp()#java/lang/management/MemoryUsage/getMax()
org/apache/parquet/hadoop/TestMemoryManager/setUp()#java/lang/management/MemoryMXBean/getHeapMemoryUsage()
org/apache/parquet/hadoop/TestMemoryManager/setUp()#org/apache/parquet/hadoop/example/GroupWriteSupport/GroupWriteSupport()
org/apache/parquet/hadoop/TestMemoryManager/getTotalAllocation()#org/apache/parquet/hadoop/MemoryManager/getWriterList()
org/apache/parquet/hadoop/TestMemoryManager/getTotalAllocation()#org/apache/parquet/hadoop/ParquetOutputFormat/getMemoryManager()
org/apache/parquet/hadoop/TestMemoryManager/getTotalAllocation()#java/util/Map/keySet()
org/apache/parquet/hadoop/TestMemoryManager/getTotalAllocation()#org/apache/parquet/hadoop/InternalParquetRecordWriter/getRowGroupSizeThreshold()
org/apache/parquet/hadoop/TestMemoryManager/createWriter(int)#org/apache/parquet/hadoop/ParquetOutputFormat/getRecordWriter(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path,org.apache.parquet.hadoop.metadata.CompressionCodecName)
org/apache/parquet/hadoop/TestMemoryManager/createWriter(int)#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/apache/parquet/hadoop/TestMemoryManager/createWriter(int)#java/io/File/delete()
org/apache/parquet/hadoop/TestMemoryManager/createWriter(int)#java/io/File/toString()
org/apache/parquet/hadoop/TestMemoryManager/createWriter(int)#java/lang/String/valueOf(int)
org/apache/parquet/hadoop/TestMemoryManager/testReallocationCallback()#org/apache/parquet/hadoop/MemoryManager/getTotalMemoryPool()
org/apache/parquet/hadoop/TestMemoryManager/testReallocationCallback()#org/apache/parquet/hadoop/MemoryManager/registerScaleCallBack(java.lang.String,java.lang.Runnable)
org/apache/parquet/hadoop/TestMemoryManager/testReallocationCallback()#org/apache/parquet/hadoop/ParquetOutputFormat/getMemoryManager()
org/apache/parquet/hadoop/TestMemoryManager/testReallocationCallback()#java/util/Map/size()
org/apache/parquet/hadoop/TestMemoryManager/testReallocationCallback()#org/apache/parquet/hadoop/MemoryManager/getScaleCallBacks()
org/apache/parquet/hadoop/TestMemoryManager/testReallocationCallback()#org/apache/parquet/hadoop/TestMemoryManager/testReallocationCallback()/$anonymous1/()
org/apache/parquet/hadoop/TestMemoryManager/testReallocationCallback()#org/apache/parquet/hadoop/TestMemoryManager/createWriter(int)
org/apache/parquet/hadoop/util/counters/BenchmarkCounter/initCounterFromContext(org.apache.parquet.hadoop.TaskAttemptContext)#org/apache/parquet/hadoop/util/counters/mapreduce/MapReduceCounterLoader/MapReduceCounterLoader(org.apache.parquet.hadoop.TaskAttemptContext)
org/apache/parquet/hadoop/util/counters/BenchmarkCounter/initCounterFromContext(org.apache.parquet.hadoop.TaskAttemptContext)#org/apache/parquet/hadoop/util/counters/BenchmarkCounter/loadCounters()
org/apache/parquet/hadoop/util/counters/BenchmarkCounter/loadCounters()#org/apache/parquet/hadoop/util/counters/BenchmarkCounter/getCounterWhenFlagIsSet(java.lang.String,java.lang.String,java.lang.String)
org/apache/parquet/hadoop/util/counters/BenchmarkCounter/incrementTotalBytes(long)#org/apache/parquet/hadoop/util/counters/ICounter/increment(long)
org/apache/parquet/hadoop/util/counters/BenchmarkCounter/incrementTime(long)#org/apache/parquet/hadoop/util/counters/ICounter/increment(long)
org/apache/parquet/hadoop/util/counters/BenchmarkCounter/getTime()#org/apache/parquet/hadoop/util/counters/ICounter/getCount()
org/apache/parquet/hadoop/util/counters/BenchmarkCounter/getCounterWhenFlagIsSet(java.lang.String,java.lang.String,java.lang.String)#org/apache/parquet/hadoop/util/counters/CounterLoader/getCounterByNameAndFlag(java.lang.String,java.lang.String,java.lang.String)
org/apache/parquet/hadoop/util/counters/BenchmarkCounter/initCounterFromReporter(org.apache.parquet.hadoop.Reporter,org.apache.parquet.hadoop.Configuration)#org/apache/parquet/hadoop/util/counters/BenchmarkCounter/loadCounters()
org/apache/parquet/hadoop/util/counters/BenchmarkCounter/initCounterFromReporter(org.apache.parquet.hadoop.Reporter,org.apache.parquet.hadoop.Configuration)#org/apache/parquet/hadoop/util/counters/mapred/MapRedCounterLoader/MapRedCounterLoader(org.apache.parquet.hadoop.Reporter,org.apache.parquet.hadoop.Configuration)
org/apache/parquet/hadoop/util/counters/BenchmarkCounter/incrementBytesRead(long)#org/apache/parquet/hadoop/util/counters/ICounter/increment(long)
org/apache/parquet/hadoop/util/counters/BenchmarkCounter/getTotalBytes()#org/apache/parquet/hadoop/util/counters/ICounter/getCount()
org/apache/parquet/hadoop/util/counters/BenchmarkCounter/getBytesRead()#org/apache/parquet/hadoop/util/counters/ICounter/getCount()
org/apache/parquet/column/values/bitpacking/ByteBasedBitPackingEncoder/pack()#org/apache/parquet/column/values/bitpacking/BytePacker/pack8Values(int[],int,byte[],int)
org/apache/parquet/column/values/bitpacking/ByteBasedBitPackingEncoder/getBufferSize()#org/apache/parquet/bytes/BytesUtils/paddedByteCountFromBits(int)
org/apache/parquet/column/values/bitpacking/ByteBasedBitPackingEncoder/memUsageString(java.lang.String)#java/lang/String/format(java.lang.String,java.lang.Object[])
org/apache/parquet/column/values/bitpacking/ByteBasedBitPackingEncoder/memUsageString(java.lang.String)#java/util/List/size()
org/apache/parquet/column/values/bitpacking/ByteBasedBitPackingEncoder/memUsageString(java.lang.String)#org/apache/parquet/column/values/bitpacking/ByteBasedBitPackingEncoder/getAllocatedSize()
org/apache/parquet/column/values/bitpacking/ByteBasedBitPackingEncoder/getAllocatedSize()#java/util/List/size()
org/apache/parquet/column/values/bitpacking/ByteBasedBitPackingEncoder/toBytes()#org/apache/parquet/column/values/bitpacking/ByteBasedBitPackingEncoder/pack()
org/apache/parquet/column/values/bitpacking/ByteBasedBitPackingEncoder/toBytes()#org/apache/parquet/bytes/BytesUtils/paddedByteCountFromBits(int)
org/apache/parquet/column/values/bitpacking/ByteBasedBitPackingEncoder/toBytes()#org/apache/parquet/bytes/BytesInput/concat(org.apache.parquet.bytes.BytesInput[])
org/apache/parquet/column/values/bitpacking/ByteBasedBitPackingEncoder/toBytes()#org/apache/parquet/bytes/BytesInput/concat(java.util.List)
org/apache/parquet/column/values/bitpacking/ByteBasedBitPackingEncoder/toBytes()#java/util/List/size()
org/apache/parquet/column/values/bitpacking/ByteBasedBitPackingEncoder/toBytes()#org/apache/parquet/bytes/BytesInput/from(byte[],int,int)
org/apache/parquet/column/values/bitpacking/ByteBasedBitPackingEncoder/writeInt(int)#org/apache/parquet/column/values/bitpacking/ByteBasedBitPackingEncoder/pack()
org/apache/parquet/column/values/bitpacking/ByteBasedBitPackingEncoder/writeInt(int)#org/apache/parquet/column/values/bitpacking/ByteBasedBitPackingEncoder/initPackedSlab()
org/apache/parquet/column/values/bitpacking/ByteBasedBitPackingEncoder/writeInt(int)#org/apache/parquet/bytes/BytesInput/from(byte[])
org/apache/parquet/column/values/bitpacking/ByteBasedBitPackingEncoder/writeInt(int)#java/util/List/add(E)
org/apache/parquet/thrift/struct/ThriftType/I16Type/accept(org.apache.parquet.thrift.struct.ThriftType.StateVisitor,S)#org/apache/parquet/thrift/struct/ThriftType/StateVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.I16Type,S)
org/apache/parquet/thrift/struct/ThriftType/I16Type/accept(org.apache.parquet.thrift.struct.ThriftType.TypeVisitor)#org/apache/parquet/thrift/struct/ThriftType/TypeVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.I16Type)
org/apache/parquet/avro/AvroSchemaConverter/convertField(java.lang.String,org.apache.parquet.pig.Schema)#org/apache/parquet/avro/AvroSchemaConverter/convertField(java.lang.String,org.apache.parquet.pig.Schema,org.apache.parquet.schema.Type.Repetition)
org/apache/parquet/avro/AvroSchemaConverter/convertFields(java.lang.String,java.util.List)#java/util/ArrayList/ArrayList()
org/apache/parquet/avro/AvroSchemaConverter/convertFields(java.lang.String,java.util.List)#org/apache/parquet/schema/Type/getName()
org/apache/parquet/avro/AvroSchemaConverter/convertFields(java.lang.String,java.util.List)#org/apache/parquet/avro/AvroSchemaConverter/optional(org.apache.parquet.pig.Schema)
org/apache/parquet/avro/AvroSchemaConverter/convertFields(java.lang.String,java.util.List)#org/apache/parquet/schema/Type/isRepetition(org.apache.parquet.schema.Type.Repetition)
org/apache/parquet/avro/AvroSchemaConverter/convertFields(java.lang.String,java.util.List)#java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)
org/apache/parquet/avro/AvroSchemaConverter/convertFields(java.lang.String,java.util.List)#org/apache/parquet/avro/AvroSchemaConverter/convertField(org.apache.parquet.schema.Type)
org/apache/parquet/avro/AvroSchemaConverter/convertFields(java.lang.String,java.util.List)#java/lang/Object/Object()
org/apache/parquet/avro/AvroSchemaConverter/isElementType(org.apache.parquet.schema.Type,java.lang.String)#org/apache/parquet/schema/Type/getName()
org/apache/parquet/avro/AvroSchemaConverter/isElementType(org.apache.parquet.schema.Type,java.lang.String)#org/apache/parquet/schema/Type/asGroupType()
org/apache/parquet/avro/AvroSchemaConverter/isElementType(org.apache.parquet.schema.Type,java.lang.String)#org/apache/parquet/schema/Type/isRepetition(org.apache.parquet.schema.Type.Repetition)
org/apache/parquet/avro/AvroSchemaConverter/isElementType(org.apache.parquet.schema.Type,java.lang.String)#java/lang/String/equals(java.lang.Object)
org/apache/parquet/avro/AvroSchemaConverter/isElementType(org.apache.parquet.schema.Type,java.lang.String)#org/apache/parquet/schema/GroupType/getFieldCount()
org/apache/parquet/avro/AvroSchemaConverter/isElementType(org.apache.parquet.schema.Type,java.lang.String)#org/apache/parquet/schema/GroupType/getType(int)
org/apache/parquet/avro/AvroSchemaConverter/isElementType(org.apache.parquet.schema.Type,java.lang.String)#org/apache/parquet/schema/Type/isPrimitive()
org/apache/parquet/avro/AvroSchemaConverter/convert(org.apache.parquet.pig.Schema)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/parquet/avro/AvroSchemaConverter/convert(org.apache.parquet.pig.Schema)#org/apache/parquet/schema/MessageType/MessageType(java.lang.String,org.apache.parquet.schema.Type[])
org/apache/parquet/avro/AvroSchemaConverter/convert(org.apache.parquet.pig.Schema)#org/apache/parquet/avro/AvroSchemaConverter/convertFields(java.util.List)
org/apache/parquet/avro/AvroSchemaConverter/convertField(org.apache.parquet.schema.Type)#java/lang/Enum/equals(java.lang.Object)
org/apache/parquet/avro/AvroSchemaConverter/convertField(org.apache.parquet.schema.Type)#org/apache/parquet/avro/AvroSchemaConverter/convertFields(java.lang.String,java.util.List)
org/apache/parquet/avro/AvroSchemaConverter/convertField(org.apache.parquet.schema.Type)#org/apache/parquet/schema/Type/asGroupType()
org/apache/parquet/avro/AvroSchemaConverter/convertField(org.apache.parquet.schema.Type)#org/apache/parquet/schema/Type/asPrimitiveType()
org/apache/parquet/avro/AvroSchemaConverter/convertField(org.apache.parquet.schema.Type)#org/apache/parquet/avro/AvroSchemaConverter/isElementType(org.apache.parquet.schema.Type,java.lang.String)
org/apache/parquet/avro/AvroSchemaConverter/convertField(org.apache.parquet.schema.Type)#org/apache/parquet/schema/GroupType/getFieldCount()
org/apache/parquet/avro/AvroSchemaConverter/convertField(org.apache.parquet.schema.Type)#java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)
org/apache/parquet/avro/AvroSchemaConverter/convertField(org.apache.parquet.schema.Type)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/parquet/avro/AvroSchemaConverter/convertField(org.apache.parquet.schema.Type)#org/apache/parquet/avro/AvroSchemaConverter/convertField(org/apache/parquet/schema/Type)/$anonymous1/()
org/apache/parquet/avro/AvroSchemaConverter/convertField(org.apache.parquet.schema.Type)#org/apache/parquet/schema/PrimitiveType/getPrimitiveTypeName()
org/apache/parquet/avro/AvroSchemaConverter/convertField(org.apache.parquet.schema.Type)#org/apache/parquet/schema/GroupType/getType(int)
org/apache/parquet/avro/AvroSchemaConverter/convertField(org.apache.parquet.schema.Type)#org/apache/parquet/schema/Type/isPrimitive()
org/apache/parquet/avro/AvroSchemaConverter/convertField(org.apache.parquet.schema.Type)#org/apache/parquet/schema/Type/getName()
org/apache/parquet/avro/AvroSchemaConverter/convertField(org.apache.parquet.schema.Type)#org/apache/parquet/schema/Type/getOriginalType()
org/apache/parquet/avro/AvroSchemaConverter/convertField(org.apache.parquet.schema.Type)#org/apache/parquet/schema/PrimitiveType/PrimitiveTypeName/convert(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeNameConverter)
org/apache/parquet/avro/AvroSchemaConverter/convertField(org.apache.parquet.schema.Type)#org/apache/parquet/avro/AvroSchemaConverter/convertOriginalType(org.apache.parquet.schema.OriginalType,org.apache.parquet.schema.DecimalMetadata)
org/apache/parquet/avro/AvroSchemaConverter/convertField(org.apache.parquet.schema.Type)#org/apache/parquet/avro/AvroSchemaConverter/optional(org.apache.parquet.pig.Schema)
org/apache/parquet/avro/AvroSchemaConverter/convertField(org.apache.parquet.schema.Type)#org/apache/parquet/schema/Type/isRepetition(org.apache.parquet.schema.Type.Repetition)
org/apache/parquet/avro/AvroSchemaConverter/convertField(org.apache.parquet.schema.Type)#org/apache/parquet/schema/PrimitiveType/getDecimalMetadata()
org/apache/parquet/avro/AvroSchemaConverter/convertField(org.apache.parquet.schema.Type)#org/apache/parquet/schema/GroupType/getFields()
org/apache/parquet/avro/AvroSchemaConverter/convertField(org.apache.parquet.schema.Type)#org/apache/parquet/avro/AvroSchemaConverter/convertField(org.apache.parquet.schema.Type)
org/apache/parquet/avro/AvroSchemaConverter/convertFields(java.util.List)#java/util/List/add(E)
org/apache/parquet/avro/AvroSchemaConverter/convertFields(java.util.List)#org/apache/parquet/avro/AvroSchemaConverter/convertField(Schema.Field)
org/apache/parquet/avro/AvroSchemaConverter/convertFields(java.util.List)#java/util/ArrayList/ArrayList()
org/apache/parquet/avro/AvroSchemaConverter/convertUnion(java.lang.String,org.apache.parquet.pig.Schema,org.apache.parquet.schema.Type.Repetition)#java/util/ArrayList/ArrayList(java.util.Collection)
org/apache/parquet/avro/AvroSchemaConverter/convertUnion(java.lang.String,org.apache.parquet.pig.Schema,org.apache.parquet.schema.Type.Repetition)#org/apache/parquet/avro/AvroSchemaConverter/convertField(java.lang.String,org.apache.parquet.pig.Schema,org.apache.parquet.schema.Type.Repetition)
org/apache/parquet/avro/AvroSchemaConverter/convertUnion(java.lang.String,org.apache.parquet.pig.Schema,org.apache.parquet.schema.Type.Repetition)#org/apache/parquet/schema/GroupType/GroupType(org.apache.parquet.schema.Type.Repetition,java.lang.String,java.util.List)
org/apache/parquet/avro/AvroSchemaConverter/convertUnion(java.lang.String,org.apache.parquet.pig.Schema,org.apache.parquet.schema.Type.Repetition)#java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)
org/apache/parquet/avro/AvroSchemaConverter/convertUnion(java.lang.String,org.apache.parquet.pig.Schema,org.apache.parquet.schema.Type.Repetition)#java/util/List/add(E)
org/apache/parquet/avro/AvroSchemaConverter/convert(org.apache.parquet.schema.MessageType)#org/apache/parquet/schema/Type/getName()
org/apache/parquet/avro/AvroSchemaConverter/convert(org.apache.parquet.schema.MessageType)#org/apache/parquet/avro/AvroSchemaConverter/convertFields(java.lang.String,java.util.List)
org/apache/parquet/avro/AvroSchemaConverter/convert(org.apache.parquet.schema.MessageType)#org/apache/parquet/schema/GroupType/getFields()
org/apache/parquet/avro/AvroSchemaConverter/convertField(Schema.Field)#org/apache/parquet/avro/AvroSchemaConverter/convertField(java.lang.String,org.apache.parquet.pig.Schema)
org/apache/parquet/avro/AvroSchemaConverter/convertField(java.lang.String,org.apache.parquet.pig.Schema,org.apache.parquet.schema.Type.Repetition)#org/apache/parquet/avro/AvroSchemaConverter/convertField(java.lang.String,org.apache.parquet.pig.Schema)
org/apache/parquet/avro/AvroSchemaConverter/convertField(java.lang.String,org.apache.parquet.pig.Schema,org.apache.parquet.schema.Type.Repetition)#org/apache/parquet/schema/GroupType/GroupType(org.apache.parquet.schema.Type.Repetition,java.lang.String,java.util.List)
org/apache/parquet/avro/AvroSchemaConverter/convertField(java.lang.String,org.apache.parquet.pig.Schema,org.apache.parquet.schema.Type.Repetition)#org/apache/parquet/schema/ConversionPatterns/stringKeyMapType(org.apache.parquet.schema.Type.Repetition,java.lang.String,org.apache.parquet.schema.Type)
org/apache/parquet/avro/AvroSchemaConverter/convertField(java.lang.String,org.apache.parquet.pig.Schema,org.apache.parquet.schema.Type.Repetition)#java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)
org/apache/parquet/avro/AvroSchemaConverter/convertField(java.lang.String,org.apache.parquet.pig.Schema,org.apache.parquet.schema.Type.Repetition)#org/apache/parquet/schema/Types/BasePrimitiveBuilder/precision(int)
org/apache/parquet/avro/AvroSchemaConverter/convertField(java.lang.String,org.apache.parquet.pig.Schema,org.apache.parquet.schema.Type.Repetition)#org/apache/parquet/avro/AvroSchemaConverter/convertLogicalType(org.apache.parquet.avro.LogicalType)
org/apache/parquet/avro/AvroSchemaConverter/convertField(java.lang.String,org.apache.parquet.pig.Schema,org.apache.parquet.schema.Type.Repetition)#org/apache/parquet/schema/Types/primitive(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.schema.Type.Repetition)
org/apache/parquet/avro/AvroSchemaConverter/convertField(java.lang.String,org.apache.parquet.pig.Schema,org.apache.parquet.schema.Type.Repetition)#org/apache/parquet/avro/AvroSchemaConverter/convertFields(java.util.List)
org/apache/parquet/avro/AvroSchemaConverter/convertField(java.lang.String,org.apache.parquet.pig.Schema,org.apache.parquet.schema.Type.Repetition)#org/apache/parquet/schema/ConversionPatterns/listType(org.apache.parquet.schema.Type.Repetition,java.lang.String,org.apache.parquet.schema.Type)
org/apache/parquet/avro/AvroSchemaConverter/convertField(java.lang.String,org.apache.parquet.pig.Schema,org.apache.parquet.schema.Type.Repetition)#org/apache/parquet/schema/Types/Builder/named(java.lang.String)
org/apache/parquet/avro/AvroSchemaConverter/convertField(java.lang.String,org.apache.parquet.pig.Schema,org.apache.parquet.schema.Type.Repetition)#org/apache/parquet/avro/AvroSchemaConverter/convertField(java.lang.String,org.apache.parquet.pig.Schema,org.apache.parquet.schema.Type.Repetition)
org/apache/parquet/avro/AvroSchemaConverter/convertField(java.lang.String,org.apache.parquet.pig.Schema,org.apache.parquet.schema.Type.Repetition)#org/apache/parquet/schema/Types/Builder/as(org.apache.parquet.schema.OriginalType)
org/apache/parquet/avro/AvroSchemaConverter/convertField(java.lang.String,org.apache.parquet.pig.Schema,org.apache.parquet.schema.Type.Repetition)#org/apache/parquet/schema/ConversionPatterns/listOfElements(org.apache.parquet.schema.Type.Repetition,java.lang.String,org.apache.parquet.schema.Type)
org/apache/parquet/avro/AvroSchemaConverter/convertField(java.lang.String,org.apache.parquet.pig.Schema,org.apache.parquet.schema.Type.Repetition)#org/apache/parquet/schema/Types/BasePrimitiveBuilder/length(int)
org/apache/parquet/avro/AvroSchemaConverter/convertField(java.lang.String,org.apache.parquet.pig.Schema,org.apache.parquet.schema.Type.Repetition)#org/apache/parquet/avro/AvroSchemaConverter/convertUnion(java.lang.String,org.apache.parquet.pig.Schema,org.apache.parquet.schema.Type.Repetition)
org/apache/parquet/avro/AvroSchemaConverter/convert(org.apache.parquet.schema.GroupType)#org/apache/parquet/schema/Type/getName()
org/apache/parquet/avro/AvroSchemaConverter/convert(org.apache.parquet.schema.GroupType)#org/apache/parquet/avro/AvroSchemaConverter/convertFields(java.lang.String,java.util.List)
org/apache/parquet/avro/AvroSchemaConverter/convert(org.apache.parquet.schema.GroupType)#org/apache/parquet/schema/GroupType/getFields()
org/apache/parquet/avro/AvroSchemaConverter/convertOriginalType(org.apache.parquet.schema.OriginalType,org.apache.parquet.schema.DecimalMetadata)#org/apache/parquet/schema/DecimalMetadata/getPrecision()
org/apache/parquet/avro/AvroSchemaConverter/convertOriginalType(org.apache.parquet.schema.OriginalType,org.apache.parquet.schema.DecimalMetadata)#org/apache/parquet/schema/DecimalMetadata/getScale()
org/apache/parquet/avro/AvroSchemaConverter/optional(org.apache.parquet.pig.Schema)#java/util/Arrays/asList(T[])
org/apache/parquet/hadoop/CodecFactory/HeapBytesDecompressor/decompress(java.nio.ByteBuffer,int,java.nio.ByteBuffer,int)#org/apache/parquet/hadoop/CodecFactory/HeapBytesDecompressor/decompress(org.apache.parquet.bytes.BytesInput,int)
org/apache/parquet/hadoop/CodecFactory/HeapBytesDecompressor/decompress(java.nio.ByteBuffer,int,java.nio.ByteBuffer,int)#java/nio/Buffer/remaining()
org/apache/parquet/hadoop/CodecFactory/HeapBytesDecompressor/decompress(java.nio.ByteBuffer,int,java.nio.ByteBuffer,int)#java/nio/ByteBuffer/put(java.nio.ByteBuffer)
org/apache/parquet/hadoop/CodecFactory/HeapBytesDecompressor/decompress(java.nio.ByteBuffer,int,java.nio.ByteBuffer,int)#org/apache/parquet/bytes/BytesInput/from(java.nio.ByteBuffer,int,int)
org/apache/parquet/hadoop/CodecFactory/HeapBytesDecompressor/decompress(java.nio.ByteBuffer,int,java.nio.ByteBuffer,int)#org/apache/parquet/bytes/BytesInput/toByteBuffer()
org/apache/parquet/hadoop/CodecFactory/HeapBytesDecompressor/decompress(org.apache.parquet.bytes.BytesInput,int)#org/apache/parquet/bytes/BytesInput/toInputStream()
org/apache/parquet/hadoop/CodecFactory/HeapBytesDecompressor/decompress(org.apache.parquet.bytes.BytesInput,int)#org/apache/parquet/bytes/BytesInput/from(java.io.InputStream,int)
org/apache/parquet/column/values/bitpacking/FourBitPackingWriter/write(int)#java/io/OutputStream/write(int)
org/apache/parquet/column/values/bitpacking/FourBitPackingWriter/finish()#org/apache/parquet/column/values/bitpacking/FourBitPackingWriter/write(int)
org/apache/parquet/io/ValidatingColumnWriteStore/getColumnWriter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/io/ValidatingColumnWriteStore/getColumnWriter(org/apache/parquet/column/ColumnDescriptor)/$anonymous1/()
org/apache/parquet/example/data/simple/IntegerValue/writeValue(org.apache.parquet.io.api.RecordConsumer)#org/apache/parquet/io/api/RecordConsumer/addInteger(int)
org/apache/parquet/example/data/simple/IntegerValue/toString()#java/lang/String/valueOf(int)
org/apache/parquet/statistics/RandomValues/BinaryGenerator/nextValue()#org/apache/parquet/io/api/Binary/fromReusedByteArray(byte[],int,int)
org/apache/parquet/statistics/RandomValues/BinaryGenerator/nextValue()#org/apache/parquet/statistics/RandomValues/RandomValueGenerator/randomInt(int)
org/apache/parquet/statistics/RandomValues/BinaryGenerator/nextValue()#org/apache/parquet/statistics/RandomValues/RandomValueGenerator/randomInt()
org/apache/parquet/statistics/RandomValues/BinaryGenerator/nextBinaryValue()#org/apache/parquet/statistics/RandomValues/BinaryGenerator/nextValue()
org/apache/hadoop/hive/ql/io/parquet/convert/ArrayWritableGroupConverter/end()#org/apache/hadoop/hive/ql/io/parquet/convert/HiveGroupConverter/add(int,org.apache.hadoop.hive.ql.io.parquet.serde.Writable)
org/apache/hadoop/hive/ql/io/parquet/convert/ArrayWritableGroupConverter/end()#java/lang/Object/Object()
org/apache/hadoop/hive/ql/io/parquet/convert/ArrayWritableGroupConverter/add(int,org.apache.hadoop.hive.ql.io.parquet.serde.Writable)#org/apache/hadoop/hive/ql/io/parquet/convert/ArrayWritableGroupConverter/set(int,org.apache.hadoop.hive.ql.io.parquet.serde.Writable)
org/apache/hadoop/hive/ql/io/parquet/convert/ArrayWritableGroupConverter/set(int,org.apache.hadoop.hive.ql.io.parquet.serde.Writable)#org/apache/parquet/io/ParquetDecodingException/ParquetDecodingException(java.lang.String)
org/apache/parquet/hadoop/mapred/DeprecatedParquetInputFormat/getRecordReader(org.apache.parquet.hadoop.InputSplit,org.apache.parquet.hadoop.JobConf,org.apache.parquet.hadoop.Reporter)#org/apache/parquet/hadoop/mapred/DeprecatedParquetInputFormat/RecordReaderWrapper/RecordReaderWrapper(org.apache.parquet.hadoop.InputSplit,org.apache.parquet.hadoop.JobConf,org.apache.parquet.hadoop.Reporter)
org/apache/parquet/hadoop/mapred/DeprecatedParquetInputFormat/getFooters(org.apache.parquet.hadoop.JobConf)#java/util/Arrays/asList(T[])
org/apache/parquet/hadoop/mapred/DeprecatedParquetInputFormat/getFooters(org.apache.parquet.hadoop.JobConf)#org/apache/parquet/hadoop/ParquetInputFormat/getFooters(org.apache.parquet.hadoop.Configuration,java.util.List)
org/apache/parquet/hadoop/mapred/DeprecatedParquetInputFormat/getSplits(org.apache.parquet.hadoop.JobConf,int)#org/apache/parquet/hadoop/mapred/DeprecatedParquetInputFormat/isTaskSideMetaData(org.apache.parquet.hadoop.JobConf)
org/apache/parquet/hadoop/mapred/DeprecatedParquetInputFormat/getSplits(org.apache.parquet.hadoop.JobConf,int)#org/apache/parquet/hadoop/mapred/DeprecatedParquetInputFormat/ParquetInputSplitWrapper/ParquetInputSplitWrapper(org.apache.parquet.hadoop.ParquetInputSplit)
org/apache/parquet/hadoop/mapred/DeprecatedParquetInputFormat/getSplits(org.apache.parquet.hadoop.JobConf,int)#java/util/List/size()
org/apache/parquet/hadoop/mapred/DeprecatedParquetInputFormat/getSplits(org.apache.parquet.hadoop.JobConf,int)#org/apache/parquet/hadoop/ParquetInputFormat/getSplits(org.apache.parquet.hadoop.Configuration,java.util.List)
org/apache/parquet/hadoop/mapred/DeprecatedParquetInputFormat/getSplits(org.apache.parquet.hadoop.JobConf,int)#org/apache/parquet/hadoop/mapred/DeprecatedParquetInputFormat/getFooters(org.apache.parquet.hadoop.JobConf)
org/apache/parquet/filter2/predicate/Operators/Or/accept(org.apache.parquet.filter2.predicate.FilterPredicate.Visitor)#org/apache/parquet/filter2/predicate/FilterPredicate/Visitor/visit(org.apache.parquet.filter2.predicate.Operators.Or)
org/apache/parquet/avro/TestReflectInputOutputFormat/ElectricCarFilter/bind(java.lang.Iterable)#org/apache/parquet/filter/UnboundRecordFilter/bind(java.lang.Iterable)
org/apache/parquet/filter2/predicate/FilterApi/gt(C,T)#org/apache/parquet/filter2/predicate/Operators/Gt/Gt(org.apache.parquet.filter2.predicate.Operators.Column,T)
org/apache/parquet/filter2/predicate/FilterApi/doubleColumn(java.lang.String)#org/apache/parquet/filter2/predicate/Operators/DoubleColumn/DoubleColumn(org.apache.parquet.hadoop.metadata.ColumnPath)
org/apache/parquet/filter2/predicate/FilterApi/doubleColumn(java.lang.String)#org/apache/parquet/hadoop/metadata/ColumnPath/fromDotString(java.lang.String)
org/apache/parquet/filter2/predicate/FilterApi/lt(C,T)#org/apache/parquet/filter2/predicate/Operators/Lt/Lt(org.apache.parquet.filter2.predicate.Operators.Column,T)
org/apache/parquet/filter2/predicate/FilterApi/notEq(C,T)#org/apache/parquet/filter2/predicate/Operators/NotEq/NotEq(org.apache.parquet.filter2.predicate.Operators.Column,T)
org/apache/parquet/filter2/predicate/FilterApi/intColumn(java.lang.String)#org/apache/parquet/filter2/predicate/Operators/IntColumn/IntColumn(org.apache.parquet.hadoop.metadata.ColumnPath)
org/apache/parquet/filter2/predicate/FilterApi/intColumn(java.lang.String)#org/apache/parquet/hadoop/metadata/ColumnPath/fromDotString(java.lang.String)
org/apache/parquet/filter2/predicate/FilterApi/or(org.apache.parquet.filter2.predicate.FilterPredicate,org.apache.parquet.filter2.predicate.FilterPredicate)#org/apache/parquet/filter2/predicate/Operators/Or/Or(org.apache.parquet.filter2.predicate.FilterPredicate,org.apache.parquet.filter2.predicate.FilterPredicate)
org/apache/parquet/filter2/predicate/FilterApi/userDefined(org.apache.parquet.filter2.predicate.Operators.Column,java.lang.Class)#org/apache/parquet/filter2/predicate/Operators/UserDefinedByClass/UserDefinedByClass(org.apache.parquet.filter2.predicate.Operators.Column,java.lang.Class)
org/apache/parquet/filter2/predicate/FilterApi/binaryColumn(java.lang.String)#org/apache/parquet/filter2/predicate/Operators/BinaryColumn/BinaryColumn(org.apache.parquet.hadoop.metadata.ColumnPath)
org/apache/parquet/filter2/predicate/FilterApi/binaryColumn(java.lang.String)#org/apache/parquet/hadoop/metadata/ColumnPath/fromDotString(java.lang.String)
org/apache/parquet/filter2/predicate/FilterApi/gtEq(C,T)#org/apache/parquet/filter2/predicate/Operators/GtEq/GtEq(org.apache.parquet.filter2.predicate.Operators.Column,T)
org/apache/parquet/filter2/predicate/FilterApi/floatColumn(java.lang.String)#org/apache/parquet/hadoop/metadata/ColumnPath/fromDotString(java.lang.String)
org/apache/parquet/filter2/predicate/FilterApi/floatColumn(java.lang.String)#org/apache/parquet/filter2/predicate/Operators/FloatColumn/FloatColumn(org.apache.parquet.hadoop.metadata.ColumnPath)
org/apache/parquet/filter2/predicate/FilterApi/not(org.apache.parquet.filter2.predicate.FilterPredicate)#org/apache/parquet/filter2/predicate/Operators/Not/Not(org.apache.parquet.filter2.predicate.FilterPredicate)
org/apache/parquet/filter2/predicate/FilterApi/ltEq(C,T)#org/apache/parquet/filter2/predicate/Operators/LtEq/LtEq(org.apache.parquet.filter2.predicate.Operators.Column,T)
org/apache/parquet/filter2/predicate/FilterApi/userDefined(org.apache.parquet.filter2.predicate.Operators.Column,U)#org/apache/parquet/filter2/predicate/Operators/UserDefinedByInstance/UserDefinedByInstance(org.apache.parquet.filter2.predicate.Operators.Column,U)
org/apache/parquet/filter2/predicate/FilterApi/eq(C,T)#org/apache/parquet/filter2/predicate/Operators/Eq/Eq(org.apache.parquet.filter2.predicate.Operators.Column,T)
org/apache/parquet/filter2/predicate/FilterApi/booleanColumn(java.lang.String)#org/apache/parquet/filter2/predicate/Operators/BooleanColumn/BooleanColumn(org.apache.parquet.hadoop.metadata.ColumnPath)
org/apache/parquet/filter2/predicate/FilterApi/booleanColumn(java.lang.String)#org/apache/parquet/hadoop/metadata/ColumnPath/fromDotString(java.lang.String)
org/apache/parquet/filter2/predicate/FilterApi/longColumn(java.lang.String)#org/apache/parquet/filter2/predicate/Operators/LongColumn/LongColumn(org.apache.parquet.hadoop.metadata.ColumnPath)
org/apache/parquet/filter2/predicate/FilterApi/longColumn(java.lang.String)#org/apache/parquet/hadoop/metadata/ColumnPath/fromDotString(java.lang.String)
org/apache/parquet/filter2/predicate/FilterApi/and(org.apache.parquet.filter2.predicate.FilterPredicate,org.apache.parquet.filter2.predicate.FilterPredicate)#org/apache/parquet/filter2/predicate/Operators/And/And(org.apache.parquet.filter2.predicate.FilterPredicate,org.apache.parquet.filter2.predicate.FilterPredicate)
org/apache/hadoop/hive/ql/io/parquet/serde/AbstractParquetMapInspector/clear(java.lang.Object)#java/util/Map/clear()
org/apache/hadoop/hive/ql/io/parquet/serde/AbstractParquetMapInspector/put(java.lang.Object,java.lang.Object,java.lang.Object)#java/util/Map/put(K,V)
org/apache/hadoop/hive/ql/io/parquet/serde/AbstractParquetMapInspector/remove(java.lang.Object,java.lang.Object)#java/util/Map/remove(java.lang.Object)
org/apache/hadoop/hive/ql/io/parquet/serde/AbstractParquetMapInspector/getMap(java.lang.Object)#java/lang/Class/getCanonicalName()
org/apache/hadoop/hive/ql/io/parquet/serde/AbstractParquetMapInspector/getMap(java.lang.Object)#java/util/HashMap/HashMap()
org/apache/hadoop/hive/ql/io/parquet/serde/AbstractParquetMapInspector/getMap(java.lang.Object)#java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)
org/apache/hadoop/hive/ql/io/parquet/serde/AbstractParquetMapInspector/getMap(java.lang.Object)#java/lang/Object/getClass()
org/apache/hadoop/hive/ql/io/parquet/serde/AbstractParquetMapInspector/getMapSize(java.lang.Object)#java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)
org/apache/hadoop/hive/ql/io/parquet/serde/AbstractParquetMapInspector/getMapSize(java.lang.Object)#java/lang/Object/getClass()
org/apache/hadoop/hive/ql/io/parquet/serde/AbstractParquetMapInspector/getMapSize(java.lang.Object)#java/lang/Class/getCanonicalName()
org/apache/hadoop/hive/ql/io/parquet/serde/AbstractParquetMapInspector/getMapSize(java.lang.Object)#java/util/Map/size()
org/apache/hadoop/hive/ql/io/parquet/serde/AbstractParquetMapInspector/create()#java/util/HashMap/HashMap()
org/apache/hadoop/hive/ql/io/parquet/serde/AbstractParquetMapInspector/equals(java.lang.Object)#java/lang/Object/getClass()
org/apache/parquet/column/values/factory/DefaultV2ValuesWriterFactory/getInt96ValuesWriter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/values/factory/DefaultV2ValuesWriterFactory/getEncodingForDataPage()
org/apache/parquet/column/values/factory/DefaultV2ValuesWriterFactory/getInt96ValuesWriter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/values/factory/DefaultV2ValuesWriterFactory/getEncodingForDictionaryPage()
org/apache/parquet/column/values/factory/DefaultV2ValuesWriterFactory/getInt96ValuesWriter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/ParquetProperties/getInitialSlabSize()
org/apache/parquet/column/values/factory/DefaultV2ValuesWriterFactory/getInt96ValuesWriter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/values/factory/DefaultValuesWriterFactory/dictWriterWithFallBack(org.apache.parquet.column.ColumnDescriptor,org.apache.parquet.column.ParquetProperties,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding,org.apache.parquet.column.values.ValuesWriter)
org/apache/parquet/column/values/factory/DefaultV2ValuesWriterFactory/getInt96ValuesWriter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/ParquetProperties/getPageSizeThreshold()
org/apache/parquet/column/values/factory/DefaultV2ValuesWriterFactory/getInt96ValuesWriter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/values/plain/FixedLenByteArrayPlainValuesWriter/FixedLenByteArrayPlainValuesWriter(int,int,int,org.apache.parquet.bytes.ByteBufferAllocator)
org/apache/parquet/column/values/factory/DefaultV2ValuesWriterFactory/getInt96ValuesWriter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/ParquetProperties/getAllocator()
org/apache/parquet/column/values/factory/DefaultV2ValuesWriterFactory/getInt64ValuesWriter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/values/factory/DefaultV2ValuesWriterFactory/getEncodingForDataPage()
org/apache/parquet/column/values/factory/DefaultV2ValuesWriterFactory/getInt64ValuesWriter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/ParquetProperties/getInitialSlabSize()
org/apache/parquet/column/values/factory/DefaultV2ValuesWriterFactory/getInt64ValuesWriter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/ParquetProperties/getAllocator()
org/apache/parquet/column/values/factory/DefaultV2ValuesWriterFactory/getInt64ValuesWriter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForLong/DeltaBinaryPackingValuesWriterForLong(int,int,org.apache.parquet.bytes.ByteBufferAllocator)
org/apache/parquet/column/values/factory/DefaultV2ValuesWriterFactory/getInt64ValuesWriter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/values/factory/DefaultV2ValuesWriterFactory/getEncodingForDictionaryPage()
org/apache/parquet/column/values/factory/DefaultV2ValuesWriterFactory/getInt64ValuesWriter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/values/factory/DefaultValuesWriterFactory/dictWriterWithFallBack(org.apache.parquet.column.ColumnDescriptor,org.apache.parquet.column.ParquetProperties,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding,org.apache.parquet.column.values.ValuesWriter)
org/apache/parquet/column/values/factory/DefaultV2ValuesWriterFactory/getInt64ValuesWriter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/ParquetProperties/getPageSizeThreshold()
org/apache/parquet/column/values/factory/DefaultV2ValuesWriterFactory/getInt32ValuesWriter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/values/factory/DefaultV2ValuesWriterFactory/getEncodingForDataPage()
org/apache/parquet/column/values/factory/DefaultV2ValuesWriterFactory/getInt32ValuesWriter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForInteger/DeltaBinaryPackingValuesWriterForInteger(int,int,org.apache.parquet.bytes.ByteBufferAllocator)
org/apache/parquet/column/values/factory/DefaultV2ValuesWriterFactory/getInt32ValuesWriter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/values/factory/DefaultV2ValuesWriterFactory/getEncodingForDictionaryPage()
org/apache/parquet/column/values/factory/DefaultV2ValuesWriterFactory/getInt32ValuesWriter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/ParquetProperties/getInitialSlabSize()
org/apache/parquet/column/values/factory/DefaultV2ValuesWriterFactory/getInt32ValuesWriter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/ParquetProperties/getAllocator()
org/apache/parquet/column/values/factory/DefaultV2ValuesWriterFactory/getInt32ValuesWriter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/values/factory/DefaultValuesWriterFactory/dictWriterWithFallBack(org.apache.parquet.column.ColumnDescriptor,org.apache.parquet.column.ParquetProperties,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding,org.apache.parquet.column.values.ValuesWriter)
org/apache/parquet/column/values/factory/DefaultV2ValuesWriterFactory/getInt32ValuesWriter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/ParquetProperties/getPageSizeThreshold()
org/apache/parquet/column/values/factory/DefaultV2ValuesWriterFactory/getFixedLenByteArrayValuesWriter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/values/factory/DefaultV2ValuesWriterFactory/getEncodingForDataPage()
org/apache/parquet/column/values/factory/DefaultV2ValuesWriterFactory/getFixedLenByteArrayValuesWriter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/values/deltastrings/DeltaByteArrayWriter/DeltaByteArrayWriter(int,int,org.apache.parquet.bytes.ByteBufferAllocator)
org/apache/parquet/column/values/factory/DefaultV2ValuesWriterFactory/getFixedLenByteArrayValuesWriter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/values/factory/DefaultV2ValuesWriterFactory/getEncodingForDictionaryPage()
org/apache/parquet/column/values/factory/DefaultV2ValuesWriterFactory/getFixedLenByteArrayValuesWriter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/ParquetProperties/getInitialSlabSize()
org/apache/parquet/column/values/factory/DefaultV2ValuesWriterFactory/getFixedLenByteArrayValuesWriter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/ParquetProperties/getAllocator()
org/apache/parquet/column/values/factory/DefaultV2ValuesWriterFactory/getFixedLenByteArrayValuesWriter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/values/factory/DefaultValuesWriterFactory/dictWriterWithFallBack(org.apache.parquet.column.ColumnDescriptor,org.apache.parquet.column.ParquetProperties,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding,org.apache.parquet.column.values.ValuesWriter)
org/apache/parquet/column/values/factory/DefaultV2ValuesWriterFactory/getFixedLenByteArrayValuesWriter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/ParquetProperties/getPageSizeThreshold()
org/apache/parquet/column/values/factory/DefaultV2ValuesWriterFactory/getFloatValuesWriter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/values/factory/DefaultV2ValuesWriterFactory/getEncodingForDataPage()
org/apache/parquet/column/values/factory/DefaultV2ValuesWriterFactory/getFloatValuesWriter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/values/factory/DefaultV2ValuesWriterFactory/getEncodingForDictionaryPage()
org/apache/parquet/column/values/factory/DefaultV2ValuesWriterFactory/getFloatValuesWriter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/ParquetProperties/getInitialSlabSize()
org/apache/parquet/column/values/factory/DefaultV2ValuesWriterFactory/getFloatValuesWriter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/values/plain/PlainValuesWriter/PlainValuesWriter(int,int,org.apache.parquet.bytes.ByteBufferAllocator)
org/apache/parquet/column/values/factory/DefaultV2ValuesWriterFactory/getFloatValuesWriter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/ParquetProperties/getAllocator()
org/apache/parquet/column/values/factory/DefaultV2ValuesWriterFactory/getFloatValuesWriter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/values/factory/DefaultValuesWriterFactory/dictWriterWithFallBack(org.apache.parquet.column.ColumnDescriptor,org.apache.parquet.column.ParquetProperties,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding,org.apache.parquet.column.values.ValuesWriter)
org/apache/parquet/column/values/factory/DefaultV2ValuesWriterFactory/getFloatValuesWriter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/ParquetProperties/getPageSizeThreshold()
org/apache/parquet/column/values/factory/DefaultV2ValuesWriterFactory/newValuesWriter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/values/factory/DefaultV2ValuesWriterFactory/getInt96ValuesWriter(org.apache.parquet.column.ColumnDescriptor)
org/apache/parquet/column/values/factory/DefaultV2ValuesWriterFactory/newValuesWriter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/values/factory/DefaultV2ValuesWriterFactory/getInt64ValuesWriter(org.apache.parquet.column.ColumnDescriptor)
org/apache/parquet/column/values/factory/DefaultV2ValuesWriterFactory/newValuesWriter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/values/factory/DefaultV2ValuesWriterFactory/getInt32ValuesWriter(org.apache.parquet.column.ColumnDescriptor)
org/apache/parquet/column/values/factory/DefaultV2ValuesWriterFactory/newValuesWriter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/ColumnDescriptor/getType()
org/apache/parquet/column/values/factory/DefaultV2ValuesWriterFactory/newValuesWriter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/values/factory/DefaultV2ValuesWriterFactory/getFixedLenByteArrayValuesWriter(org.apache.parquet.column.ColumnDescriptor)
org/apache/parquet/column/values/factory/DefaultV2ValuesWriterFactory/newValuesWriter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/values/factory/DefaultV2ValuesWriterFactory/getFloatValuesWriter(org.apache.parquet.column.ColumnDescriptor)
org/apache/parquet/column/values/factory/DefaultV2ValuesWriterFactory/newValuesWriter(org.apache.parquet.column.ColumnDescriptor)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/parquet/column/values/factory/DefaultV2ValuesWriterFactory/newValuesWriter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/values/factory/DefaultV2ValuesWriterFactory/getDoubleValuesWriter(org.apache.parquet.column.ColumnDescriptor)
org/apache/parquet/column/values/factory/DefaultV2ValuesWriterFactory/newValuesWriter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/values/factory/DefaultV2ValuesWriterFactory/getBinaryValuesWriter(org.apache.parquet.column.ColumnDescriptor)
org/apache/parquet/column/values/factory/DefaultV2ValuesWriterFactory/newValuesWriter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/values/factory/DefaultV2ValuesWriterFactory/getBooleanValuesWriter()
org/apache/parquet/column/values/factory/DefaultV2ValuesWriterFactory/getDoubleValuesWriter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/values/factory/DefaultV2ValuesWriterFactory/getEncodingForDataPage()
org/apache/parquet/column/values/factory/DefaultV2ValuesWriterFactory/getDoubleValuesWriter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/values/factory/DefaultV2ValuesWriterFactory/getEncodingForDictionaryPage()
org/apache/parquet/column/values/factory/DefaultV2ValuesWriterFactory/getDoubleValuesWriter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/ParquetProperties/getInitialSlabSize()
org/apache/parquet/column/values/factory/DefaultV2ValuesWriterFactory/getDoubleValuesWriter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/values/plain/PlainValuesWriter/PlainValuesWriter(int,int,org.apache.parquet.bytes.ByteBufferAllocator)
org/apache/parquet/column/values/factory/DefaultV2ValuesWriterFactory/getDoubleValuesWriter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/ParquetProperties/getAllocator()
org/apache/parquet/column/values/factory/DefaultV2ValuesWriterFactory/getDoubleValuesWriter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/values/factory/DefaultValuesWriterFactory/dictWriterWithFallBack(org.apache.parquet.column.ColumnDescriptor,org.apache.parquet.column.ParquetProperties,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding,org.apache.parquet.column.values.ValuesWriter)
org/apache/parquet/column/values/factory/DefaultV2ValuesWriterFactory/getDoubleValuesWriter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/ParquetProperties/getPageSizeThreshold()
org/apache/parquet/column/values/factory/DefaultV2ValuesWriterFactory/getBinaryValuesWriter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/values/factory/DefaultV2ValuesWriterFactory/getEncodingForDataPage()
org/apache/parquet/column/values/factory/DefaultV2ValuesWriterFactory/getBinaryValuesWriter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/values/deltastrings/DeltaByteArrayWriter/DeltaByteArrayWriter(int,int,org.apache.parquet.bytes.ByteBufferAllocator)
org/apache/parquet/column/values/factory/DefaultV2ValuesWriterFactory/getBinaryValuesWriter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/values/factory/DefaultV2ValuesWriterFactory/getEncodingForDictionaryPage()
org/apache/parquet/column/values/factory/DefaultV2ValuesWriterFactory/getBinaryValuesWriter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/ParquetProperties/getInitialSlabSize()
org/apache/parquet/column/values/factory/DefaultV2ValuesWriterFactory/getBinaryValuesWriter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/ParquetProperties/getAllocator()
org/apache/parquet/column/values/factory/DefaultV2ValuesWriterFactory/getBinaryValuesWriter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/values/factory/DefaultValuesWriterFactory/dictWriterWithFallBack(org.apache.parquet.column.ColumnDescriptor,org.apache.parquet.column.ParquetProperties,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding,org.apache.parquet.column.values.ValuesWriter)
org/apache/parquet/column/values/factory/DefaultV2ValuesWriterFactory/getBinaryValuesWriter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/ParquetProperties/getPageSizeThreshold()
org/apache/parquet/column/values/factory/DefaultV2ValuesWriterFactory/getBooleanValuesWriter()#org/apache/parquet/column/ParquetProperties/getPageSizeThreshold()
org/apache/parquet/column/values/factory/DefaultV2ValuesWriterFactory/getBooleanValuesWriter()#org/apache/parquet/column/ParquetProperties/getInitialSlabSize()
org/apache/parquet/column/values/factory/DefaultV2ValuesWriterFactory/getBooleanValuesWriter()#org/apache/parquet/column/values/rle/RunLengthBitPackingHybridValuesWriter/RunLengthBitPackingHybridValuesWriter(int,int,int,org.apache.parquet.bytes.ByteBufferAllocator)
org/apache/parquet/column/values/factory/DefaultV2ValuesWriterFactory/getBooleanValuesWriter()#org/apache/parquet/column/ParquetProperties/getAllocator()
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForLong/close()#org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriter/close()
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForLong/flushBlockBuffer()#org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriter/writeBitWidthForMiniBlock(int)
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForLong/flushBlockBuffer()#org/apache/parquet/column/values/bitpacking/Packer/newBytePackerForLong(int)
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForLong/flushBlockBuffer()#org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriter/getMiniBlockCountToFlush(double)
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForLong/flushBlockBuffer()#org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForLong/writeMinDelta()
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForLong/flushBlockBuffer()#org/apache/parquet/column/values/bitpacking/BytePackerForLong/pack8Values(long[],int,byte[],int)
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForLong/flushBlockBuffer()#org/apache/parquet/bytes/CapacityByteArrayOutputStream/write(byte[],int,int)
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForLong/flushBlockBuffer()#org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForLong/calculateBitWidthsForDeltaBlockBuffer(int)
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForLong/writeMinDelta()#org/apache/parquet/bytes/BytesUtils/writeZigZagVarLong(long,java.io.OutputStream)
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForLong/writeMinDelta()#org/apache/parquet/io/ParquetEncodingException/ParquetEncodingException(java.lang.String,java.lang.Throwable)
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForLong/getBytes()#org/apache/parquet/bytes/BytesInput/concat(org.apache.parquet.bytes.BytesInput[])
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForLong/getBytes()#org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForLong/flushBlockBuffer()
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForLong/getBytes()#org/apache/parquet/column/values/delta/DeltaBinaryPackingConfig/toBytesInput()
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForLong/getBytes()#org/apache/parquet/bytes/BytesInput/fromZigZagVarLong(long)
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForLong/getBytes()#org/apache/parquet/bytes/BytesInput/from(org.apache.parquet.bytes.CapacityByteArrayOutputStream)
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForLong/getBytes()#org/apache/parquet/bytes/BytesInput/fromUnsignedVarInt(int)
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForLong/writeLong(long)#org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForLong/flushBlockBuffer()
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForLong/reset()#org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriter/reset()
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForLong/calculateBitWidthsForDeltaBlockBuffer(int)#java/lang/Long/numberOfLeadingZeros(long)
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForLong/calculateBitWidthsForDeltaBlockBuffer(int)#java/lang/Math/min(int,int)
org/apache/parquet/column/values/bitpacking/TestByteBitPacking/testPackUnPackLong()#org/apache/parquet/column/values/bitpacking/TestByteBitPacking/packUnpack8(org.apache.parquet.column.values.bitpacking.BytePackerForLong,long[],long[])
org/apache/parquet/column/values/bitpacking/TestByteBitPacking/testPackUnPackLong()#org/apache/parquet/column/values/bitpacking/Packer/newBytePackerForLong(int)
org/apache/parquet/column/values/bitpacking/TestByteBitPacking/testPackUnPackLong()#org/apache/parquet/column/values/bitpacking/TestByteBitPacking/packUnpack32(org.apache.parquet.column.values.bitpacking.BytePackerForLong,long[],long[])
org/apache/parquet/column/values/bitpacking/TestByteBitPacking/testPackUnPackLong()#org/apache/parquet/column/values/bitpacking/TestByteBitPacking/generateValuesLong(int)
org/apache/parquet/column/values/bitpacking/TestByteBitPacking/testPackUnPackLong()#org/apache/parquet/column/values/bitpacking/TestBitPacking/toString(long[])
org/apache/parquet/column/values/bitpacking/TestByteBitPacking/packUnpack8(org.apache.parquet.column.values.bitpacking.BytePackerForLong,long[],long[])#org/apache/parquet/column/values/bitpacking/BytePackerForLong/getBitWidth()
org/apache/parquet/column/values/bitpacking/TestByteBitPacking/packUnpack8(org.apache.parquet.column.values.bitpacking.BytePackerForLong,long[],long[])#org/apache/parquet/column/values/bitpacking/BytePackerForLong/unpack8Values(byte[],int,long[],int)
org/apache/parquet/column/values/bitpacking/TestByteBitPacking/packUnpack8(org.apache.parquet.column.values.bitpacking.BytePackerForLong,long[],long[])#org/apache/parquet/column/values/bitpacking/TestBitPacking/toString(byte[])
org/apache/parquet/column/values/bitpacking/TestByteBitPacking/packUnpack8(org.apache.parquet.column.values.bitpacking.BytePackerForLong,long[],long[])#org/apache/parquet/column/values/bitpacking/BytePackerForLong/pack8Values(long[],int,byte[],int)
org/apache/parquet/column/values/bitpacking/TestByteBitPacking/testPackUnPack()#org/apache/parquet/column/values/bitpacking/Packer/newBytePacker(int)
org/apache/parquet/column/values/bitpacking/TestByteBitPacking/testPackUnPack()#org/apache/parquet/column/values/bitpacking/TestByteBitPacking/packUnpack(org.apache.parquet.column.values.bitpacking.BytePacker,int[],int[])
org/apache/parquet/column/values/bitpacking/TestByteBitPacking/testPackUnPack()#org/apache/parquet/column/values/bitpacking/TestByteBitPacking/generateValues(int)
org/apache/parquet/column/values/bitpacking/TestByteBitPacking/testPackUnPack()#org/apache/parquet/column/values/bitpacking/TestBitPacking/toString(int[])
org/apache/parquet/column/values/bitpacking/TestByteBitPacking/testPackUnPackAgainstHandWritten()#org/apache/parquet/column/values/bitpacking/BitPacking/getBitPackingWriter(int,java.io.OutputStream)
org/apache/parquet/column/values/bitpacking/TestByteBitPacking/testPackUnPackAgainstHandWritten()#org/apache/parquet/column/values/bitpacking/BytePacker/pack32Values(int[],int,byte[],int)
org/apache/parquet/column/values/bitpacking/TestByteBitPacking/testPackUnPackAgainstHandWritten()#org/apache/parquet/column/values/bitpacking/BitPacking/createBitPackingReader(int,java.io.InputStream,long)
org/apache/parquet/column/values/bitpacking/TestByteBitPacking/testPackUnPackAgainstHandWritten()#org/apache/parquet/column/values/bitpacking/Packer/newBytePacker(int)
org/apache/parquet/column/values/bitpacking/TestByteBitPacking/testPackUnPackAgainstHandWritten()#java/io/ByteArrayInputStream/ByteArrayInputStream(byte[])
org/apache/parquet/column/values/bitpacking/TestByteBitPacking/testPackUnPackAgainstHandWritten()#org/apache/parquet/column/values/bitpacking/TestBitPacking/toString(byte[])
org/apache/parquet/column/values/bitpacking/TestByteBitPacking/testPackUnPackAgainstHandWritten()#org/apache/parquet/column/values/bitpacking/BitPacking/BitPackingWriter/write(int)
org/apache/parquet/column/values/bitpacking/TestByteBitPacking/testPackUnPackAgainstHandWritten()#org/apache/parquet/column/values/bitpacking/TestBitPacking/toString(int[])
org/apache/parquet/column/values/bitpacking/TestByteBitPacking/testPackUnPackAgainstHandWritten()#org/apache/parquet/column/values/bitpacking/BitPacking/BitPackingReader/read()
org/apache/parquet/column/values/bitpacking/TestByteBitPacking/testPackUnPackAgainstHandWritten()#java/io/ByteArrayOutputStream/ByteArrayOutputStream()
org/apache/parquet/column/values/bitpacking/TestByteBitPacking/testPackUnPackAgainstHandWritten()#org/apache/parquet/column/values/bitpacking/TestByteBitPacking/generateValues(int)
org/apache/parquet/column/values/bitpacking/TestByteBitPacking/testPackUnPackAgainstHandWritten()#java/io/ByteArrayOutputStream/toByteArray()
org/apache/parquet/column/values/bitpacking/TestByteBitPacking/testPackUnPackAgainstLemire()#java/lang/Enum/name()
org/apache/parquet/column/values/bitpacking/TestByteBitPacking/testPackUnPackAgainstLemire()#org/apache/parquet/column/values/bitpacking/BytePacker/pack32Values(int[],int,byte[],int)
org/apache/parquet/column/values/bitpacking/TestByteBitPacking/testPackUnPackAgainstLemire()#org/apache/parquet/column/values/bitpacking/Packer/newBytePacker(int)
org/apache/parquet/column/values/bitpacking/TestByteBitPacking/testPackUnPackAgainstLemire()#org/apache/parquet/column/values/bitpacking/IntPacker/pack32Values(int[],int,int[],int)
org/apache/parquet/column/values/bitpacking/TestByteBitPacking/testPackUnPackAgainstLemire()#org/apache/parquet/column/values/bitpacking/TestBitPacking/toString(byte[])
org/apache/parquet/column/values/bitpacking/TestByteBitPacking/testPackUnPackAgainstLemire()#java/io/ByteArrayOutputStream/write(int)
org/apache/parquet/column/values/bitpacking/TestByteBitPacking/testPackUnPackAgainstLemire()#org/apache/parquet/column/values/bitpacking/TestBitPacking/toString(int[])
org/apache/parquet/column/values/bitpacking/TestByteBitPacking/testPackUnPackAgainstLemire()#java/io/ByteArrayOutputStream/ByteArrayOutputStream()
org/apache/parquet/column/values/bitpacking/TestByteBitPacking/testPackUnPackAgainstLemire()#org/apache/parquet/column/values/bitpacking/BytePacker/unpack32Values(java.nio.ByteBuffer,int,int[],int)
org/apache/parquet/column/values/bitpacking/TestByteBitPacking/testPackUnPackAgainstLemire()#org/apache/parquet/column/values/bitpacking/Packer/newIntPacker(int)
org/apache/parquet/column/values/bitpacking/TestByteBitPacking/testPackUnPackAgainstLemire()#org/apache/parquet/column/values/bitpacking/TestByteBitPacking/generateValues(int)
org/apache/parquet/column/values/bitpacking/TestByteBitPacking/testPackUnPackAgainstLemire()#java/nio/ByteBuffer/wrap(byte[])
org/apache/parquet/column/values/bitpacking/TestByteBitPacking/testPackUnPackAgainstLemire()#java/io/ByteArrayOutputStream/toByteArray()
org/apache/parquet/column/values/bitpacking/TestByteBitPacking/testPackUnPackAgainstLemire()#org/apache/parquet/column/values/bitpacking/Packer/values()
org/apache/parquet/column/values/bitpacking/TestByteBitPacking/generateValuesLong(int)#java/util/Random/Random(long)
org/apache/parquet/column/values/bitpacking/TestByteBitPacking/generateValuesLong(int)#java/util/Random/nextLong()
org/apache/parquet/column/values/bitpacking/TestByteBitPacking/generateValuesLong(int)#org/apache/parquet/column/values/bitpacking/TestBitPacking/toString(long[])
org/apache/parquet/column/values/bitpacking/TestByteBitPacking/packUnpack(org.apache.parquet.column.values.bitpacking.BytePacker,int[],int[])#org/apache/parquet/column/values/bitpacking/BytePacker/pack32Values(int[],int,byte[],int)
org/apache/parquet/column/values/bitpacking/TestByteBitPacking/packUnpack(org.apache.parquet.column.values.bitpacking.BytePacker,int[],int[])#org/apache/parquet/column/values/bitpacking/BytePacker/unpack32Values(java.nio.ByteBuffer,int,int[],int)
org/apache/parquet/column/values/bitpacking/TestByteBitPacking/packUnpack(org.apache.parquet.column.values.bitpacking.BytePacker,int[],int[])#org/apache/parquet/column/values/bitpacking/TestBitPacking/toString(byte[])
org/apache/parquet/column/values/bitpacking/TestByteBitPacking/packUnpack(org.apache.parquet.column.values.bitpacking.BytePacker,int[],int[])#org/apache/parquet/column/values/bitpacking/BytePacker/getBitWidth()
org/apache/parquet/column/values/bitpacking/TestByteBitPacking/packUnpack(org.apache.parquet.column.values.bitpacking.BytePacker,int[],int[])#java/nio/ByteBuffer/wrap(byte[])
org/apache/parquet/column/values/bitpacking/TestByteBitPacking/packUnpack32(org.apache.parquet.column.values.bitpacking.BytePackerForLong,long[],long[])#org/apache/parquet/column/values/bitpacking/BytePackerForLong/getBitWidth()
org/apache/parquet/column/values/bitpacking/TestByteBitPacking/packUnpack32(org.apache.parquet.column.values.bitpacking.BytePackerForLong,long[],long[])#org/apache/parquet/column/values/bitpacking/TestBitPacking/toString(byte[])
org/apache/parquet/column/values/bitpacking/TestByteBitPacking/packUnpack32(org.apache.parquet.column.values.bitpacking.BytePackerForLong,long[],long[])#org/apache/parquet/column/values/bitpacking/BytePackerForLong/unpack32Values(byte[],int,long[],int)
org/apache/parquet/column/values/bitpacking/TestByteBitPacking/packUnpack32(org.apache.parquet.column.values.bitpacking.BytePackerForLong,long[],long[])#org/apache/parquet/column/values/bitpacking/BytePackerForLong/pack32Values(long[],int,byte[],int)
org/apache/parquet/column/values/bitpacking/TestByteBitPacking/generateValues(int)#java/lang/Math/random()
org/apache/parquet/column/values/bitpacking/TestByteBitPacking/generateValues(int)#org/apache/parquet/column/values/bitpacking/TestBitPacking/toString(int[])
org/apache/parquet/column/values/bitpacking/TestByteBitPacking/generateValues(int)#java/lang/Math/pow(double,double)
org/apache/parquet/tools/util/PrettyPrintWriter/format(java.util.Locale,java.lang.String,java.lang.Object[])#org/apache/parquet/tools/util/PrettyPrintWriter/printf(java.util.Locale,java.lang.String,java.lang.Object[])
org/apache/parquet/tools/util/PrettyPrintWriter/println(boolean)#org/apache/parquet/tools/util/PrettyPrintWriter/print(boolean)
org/apache/parquet/tools/util/PrettyPrintWriter/println(boolean)#org/apache/parquet/tools/util/PrettyPrintWriter/println()
org/apache/parquet/tools/util/PrettyPrintWriter/print(long)#org/apache/parquet/tools/util/PrettyPrintWriter/print(java.lang.String,boolean)
org/apache/parquet/tools/util/PrettyPrintWriter/print(long)#java/lang/String/valueOf(long)
org/apache/parquet/tools/util/PrettyPrintWriter/flushColumns()#org/apache/parquet/tools/util/PrettyPrintWriter/flushColumns(boolean)
org/apache/parquet/tools/util/PrettyPrintWriter/print(boolean)#java/lang/String/valueOf(boolean)
org/apache/parquet/tools/util/PrettyPrintWriter/print(boolean)#org/apache/parquet/tools/util/PrettyPrintWriter/print(java.lang.String,boolean)
org/apache/parquet/tools/util/PrettyPrintWriter/println(long)#org/apache/parquet/tools/util/PrettyPrintWriter/print(long)
org/apache/parquet/tools/util/PrettyPrintWriter/println(long)#org/apache/parquet/tools/util/PrettyPrintWriter/println()
org/apache/parquet/tools/util/PrettyPrintWriter/print(char[])#java/lang/String/valueOf(char[])
org/apache/parquet/tools/util/PrettyPrintWriter/print(char[])#org/apache/parquet/tools/util/PrettyPrintWriter/print(java.lang.String,boolean)
org/apache/parquet/tools/util/PrettyPrintWriter/tabs()#org/apache/parquet/tools/util/PrettyPrintWriter/Span/Span(java.lang.String)
org/apache/parquet/tools/util/PrettyPrintWriter/flushIfNeeded()#org/apache/parquet/tools/util/PrettyPrintWriter/flushIfNeeded(boolean)
org/apache/parquet/tools/util/PrettyPrintWriter/determineColumnWidths()#org/apache/parquet/tools/util/PrettyPrintWriter/Line/length()
org/apache/parquet/tools/util/PrettyPrintWriter/determineColumnWidths()#org/apache/parquet/tools/util/PrettyPrintWriter/Line/firstNonWhiteSpace(int)
org/apache/parquet/tools/util/PrettyPrintWriter/determineColumnWidths()#org/apache/parquet/tools/util/PrettyPrintWriter/determineNumColumns()
org/apache/parquet/tools/util/PrettyPrintWriter/determineColumnWidths()#org/apache/parquet/tools/util/PrettyPrintWriter/Line/indexOf(char,int)
org/apache/parquet/tools/util/PrettyPrintWriter/iff(boolean)#org/apache/parquet/tools/util/PrettyPrintWriter/resetColor()
org/apache/parquet/tools/util/PrettyPrintWriter/println(char[])#org/apache/parquet/tools/util/PrettyPrintWriter/print(char[])
org/apache/parquet/tools/util/PrettyPrintWriter/println(char[])#org/apache/parquet/tools/util/PrettyPrintWriter/println()
org/apache/parquet/tools/util/PrettyPrintWriter/print(char)#java/lang/String/valueOf(char)
org/apache/parquet/tools/util/PrettyPrintWriter/print(char)#org/apache/parquet/tools/util/PrettyPrintWriter/print(java.lang.String,boolean)
org/apache/parquet/tools/util/PrettyPrintWriter/stdoutPrettyPrinter()#org/apache/parquet/tools/util/PrettyPrintWriter/Builder/Builder(java.io.OutputStream)
org/apache/parquet/tools/util/PrettyPrintWriter/stdoutPrettyPrinter()#org/apache/parquet/tools/util/PrettyPrintWriter/Builder/withAutoFlush()
org/apache/parquet/tools/util/PrettyPrintWriter/println(char)#org/apache/parquet/tools/util/PrettyPrintWriter/print(char)
org/apache/parquet/tools/util/PrettyPrintWriter/println(char)#org/apache/parquet/tools/util/PrettyPrintWriter/println()
org/apache/parquet/tools/util/PrettyPrintWriter/print(java.lang.Object)#java/lang/String/valueOf(java.lang.Object)
org/apache/parquet/tools/util/PrettyPrintWriter/print(java.lang.Object)#org/apache/parquet/tools/util/PrettyPrintWriter/print(java.lang.String,boolean)
org/apache/parquet/tools/util/PrettyPrintWriter/mkspan(java.lang.String)#org/apache/parquet/tools/util/PrettyPrintWriter/Span/Span(java.lang.String)
org/apache/parquet/tools/util/PrettyPrintWriter/printf(java.lang.String,java.lang.Object[])#org/apache/parquet/tools/util/PrettyPrintWriter/printf(java.util.Locale,java.lang.String,java.lang.Object[])
org/apache/parquet/tools/util/PrettyPrintWriter/printf(java.lang.String,java.lang.Object[])#java/util/Formatter/locale()
org/apache/parquet/tools/util/PrettyPrintWriter/mkspan(java.lang.String,java.lang.String)#org/apache/parquet/tools/util/PrettyPrintWriter/mkspan(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
org/apache/parquet/tools/util/PrettyPrintWriter/append(char)#org/apache/parquet/tools/util/PrettyPrintWriter/print(char)
org/apache/parquet/tools/util/PrettyPrintWriter/mkspan(java.lang.String,java.lang.String,java.lang.String,java.lang.String)#org/apache/parquet/tools/util/PrettyPrintWriter/Span/Span(java.lang.String,java.lang.String)
org/apache/parquet/tools/util/PrettyPrintWriter/mkspan(java.lang.String,java.lang.String,java.lang.String,java.lang.String)#org/apache/parquet/tools/util/PrettyPrintWriter/mkspan(java.lang.String)
org/apache/parquet/tools/util/PrettyPrintWriter/println(java.lang.Object)#org/apache/parquet/tools/util/PrettyPrintWriter/print(java.lang.Object)
org/apache/parquet/tools/util/PrettyPrintWriter/println(java.lang.Object)#org/apache/parquet/tools/util/PrettyPrintWriter/println()
org/apache/parquet/tools/util/PrettyPrintWriter/print(double)#java/lang/String/valueOf(double)
org/apache/parquet/tools/util/PrettyPrintWriter/print(double)#org/apache/parquet/tools/util/PrettyPrintWriter/print(java.lang.String,boolean)
org/apache/parquet/tools/util/PrettyPrintWriter/format(java.lang.String,java.lang.Object[])#org/apache/parquet/tools/util/PrettyPrintWriter/printf(java.lang.String,java.lang.Object[])
org/apache/parquet/tools/util/PrettyPrintWriter/println(float)#org/apache/parquet/tools/util/PrettyPrintWriter/print(float)
org/apache/parquet/tools/util/PrettyPrintWriter/println(float)#org/apache/parquet/tools/util/PrettyPrintWriter/println()
org/apache/parquet/tools/util/PrettyPrintWriter/span(java.lang.String)#org/apache/parquet/tools/util/PrettyPrintWriter/span(java.lang.String,boolean)
org/apache/parquet/tools/util/PrettyPrintWriter/rule(char)#java/lang/String/valueOf(char)
org/apache/parquet/tools/util/PrettyPrintWriter/rule(char)#java/lang/String/length()
org/apache/parquet/tools/util/PrettyPrintWriter/rule(char)#org/apache/parquet/tools/util/PrettyPrintWriter/println(java.lang.String)
org/apache/parquet/tools/util/PrettyPrintWriter/println(double)#org/apache/parquet/tools/util/PrettyPrintWriter/print(double)
org/apache/parquet/tools/util/PrettyPrintWriter/println(double)#org/apache/parquet/tools/util/PrettyPrintWriter/println()
org/apache/parquet/tools/util/PrettyPrintWriter/incrementTabLevel()#org/apache/parquet/tools/util/PrettyPrintWriter/setTabLevel(int)
org/apache/parquet/tools/util/PrettyPrintWriter/newPrettyPrinter(java.io.OutputStream)#org/apache/parquet/tools/util/PrettyPrintWriter/Builder/Builder(java.io.OutputStream)
org/apache/parquet/tools/util/PrettyPrintWriter/print(float)#java/lang/String/valueOf(float)
org/apache/parquet/tools/util/PrettyPrintWriter/print(float)#org/apache/parquet/tools/util/PrettyPrintWriter/print(java.lang.String,boolean)
org/apache/parquet/tools/util/PrettyPrintWriter/appendToCurrent(java.lang.String)#org/apache/parquet/tools/util/PrettyPrintWriter/tabs()
org/apache/parquet/tools/util/PrettyPrintWriter/appendToCurrent(java.lang.String)#org/apache/parquet/tools/util/PrettyPrintWriter/span(java.lang.String)
org/apache/parquet/tools/util/PrettyPrintWriter/appendToCurrent(java.lang.String)#org/apache/parquet/tools/util/PrettyPrintWriter/Line/append(org.apache.parquet.tools.util.PrettyPrintWriter.Span)
org/apache/parquet/tools/util/PrettyPrintWriter/appendToCurrent(java.lang.String)#org/apache/parquet/tools/util/PrettyPrintWriter/Line/isEmpty()
org/apache/parquet/tools/util/PrettyPrintWriter/appendToCurrent(java.lang.String)#java/util/ArrayList/size()
org/apache/parquet/tools/util/PrettyPrintWriter/appendToCurrent(java.lang.String)#java/util/ArrayList/get(int)
org/apache/parquet/tools/util/PrettyPrintWriter/append(java.lang.CharSequence,int,int)#java/lang/CharSequence/toString()
org/apache/parquet/tools/util/PrettyPrintWriter/append(java.lang.CharSequence,int,int)#org/apache/parquet/tools/util/PrettyPrintWriter/print(java.lang.String)
org/apache/parquet/tools/util/PrettyPrintWriter/append(java.lang.CharSequence,int,int)#java/lang/CharSequence/subSequence(int,int)
org/apache/parquet/tools/util/PrettyPrintWriter/span(java.lang.String,boolean)#org/apache/parquet/tools/util/PrettyPrintWriter/mkspan(java.lang.String)
org/apache/parquet/tools/util/PrettyPrintWriter/span(java.lang.String,boolean)#org/apache/parquet/tools/util/PrettyPrintWriter/mkspan(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
org/apache/parquet/tools/util/PrettyPrintWriter/span(java.lang.String,boolean)#org/apache/parquet/tools/util/PrettyPrintWriter/resetColor()
org/apache/parquet/tools/util/PrettyPrintWriter/decrementTabLevel()#org/apache/parquet/tools/util/PrettyPrintWriter/setTabLevel(int)
org/apache/parquet/tools/util/PrettyPrintWriter/stderrPrettyPrinter()#org/apache/parquet/tools/util/PrettyPrintWriter/Builder/Builder(java.io.OutputStream)
org/apache/parquet/tools/util/PrettyPrintWriter/stderrPrettyPrinter()#org/apache/parquet/tools/util/PrettyPrintWriter/Builder/withAutoFlush()
org/apache/parquet/tools/util/PrettyPrintWriter/fixupLine(org.apache.parquet.tools.util.PrettyPrintWriter.Line)#org/apache/parquet/tools/util/PrettyPrintWriter/Line/trimTo(int,org.apache.parquet.tools.util.PrettyPrintWriter.Span)
org/apache/parquet/tools/util/PrettyPrintWriter/toColumns(int[],org.apache.parquet.tools.util.PrettyPrintWriter.Line)#org/apache/parquet/tools/util/PrettyPrintWriter/Line/spaceOut(int,int)
org/apache/parquet/tools/util/PrettyPrintWriter/toColumns(int[],org.apache.parquet.tools.util.PrettyPrintWriter.Line)#org/apache/parquet/tools/util/PrettyPrintWriter/Line/firstNonWhiteSpace(int)
org/apache/parquet/tools/util/PrettyPrintWriter/toColumns(int[],org.apache.parquet.tools.util.PrettyPrintWriter.Line)#org/apache/parquet/tools/util/PrettyPrintWriter/Line/indexOf(char,int)
org/apache/parquet/tools/util/PrettyPrintWriter/append(java.lang.CharSequence)#java/lang/CharSequence/length()
org/apache/parquet/tools/util/PrettyPrintWriter/append(java.lang.CharSequence)#org/apache/parquet/tools/util/PrettyPrintWriter/append(java.lang.CharSequence,int,int)
org/apache/parquet/tools/util/PrettyPrintWriter/append(java.lang.CharSequence)#org/apache/parquet/tools/util/PrettyPrintWriter/print(java.lang.String)
org/apache/parquet/tools/util/PrettyPrintWriter/printf(java.util.Locale,java.lang.String,java.lang.Object[])#org/apache/parquet/tools/util/PrettyPrintWriter/flushIfNeeded()
org/apache/parquet/tools/util/PrettyPrintWriter/printf(java.util.Locale,java.lang.String,java.lang.Object[])#java/util/Formatter/format(java.util.Locale,java.lang.String,java.lang.Object[])
org/apache/parquet/tools/util/PrettyPrintWriter/printf(java.util.Locale,java.lang.String,java.lang.Object[])#java/lang/AbstractStringBuilder/setLength(int)
org/apache/parquet/tools/util/PrettyPrintWriter/printf(java.util.Locale,java.lang.String,java.lang.Object[])#org/apache/parquet/tools/util/PrettyPrintWriter/print(java.lang.String)
org/apache/parquet/tools/util/PrettyPrintWriter/printf(java.util.Locale,java.lang.String,java.lang.Object[])#java/lang/StringBuilder/toString()
org/apache/parquet/tools/util/PrettyPrintWriter/print(java.lang.String)#org/apache/parquet/tools/util/PrettyPrintWriter/print(java.lang.String,boolean)
org/apache/parquet/tools/util/PrettyPrintWriter/setTabLevel(int)#org/apache/parquet/tools/util/PrettyPrintWriter/flushColumns()
org/apache/parquet/tools/util/PrettyPrintWriter/println(java.lang.String)#org/apache/parquet/tools/util/PrettyPrintWriter/print(java.lang.String)
org/apache/parquet/tools/util/PrettyPrintWriter/println(java.lang.String)#org/apache/parquet/tools/util/PrettyPrintWriter/println()
org/apache/parquet/tools/util/PrettyPrintWriter/determineNumColumns()#org/apache/parquet/tools/util/PrettyPrintWriter/Line/countCharacter(char)
org/apache/parquet/tools/util/PrettyPrintWriter/flushIfNeeded(boolean)#java/util/ArrayList/size()
org/apache/parquet/tools/util/PrettyPrintWriter/flushIfNeeded(boolean)#org/apache/parquet/tools/util/PrettyPrintWriter/flushColumns(boolean)
org/apache/parquet/tools/util/PrettyPrintWriter/println(int)#org/apache/parquet/tools/util/PrettyPrintWriter/print(int)
org/apache/parquet/tools/util/PrettyPrintWriter/println(int)#org/apache/parquet/tools/util/PrettyPrintWriter/println()
org/apache/parquet/tools/util/PrettyPrintWriter/print(java.lang.String,boolean)#java/lang/String/split(java.lang.String,int)
org/apache/parquet/tools/util/PrettyPrintWriter/print(java.lang.String,boolean)#java/lang/String/replaceAll(java.lang.String,java.lang.String)
org/apache/parquet/tools/util/PrettyPrintWriter/print(java.lang.String,boolean)#org/apache/parquet/tools/util/PrettyPrintWriter/Line/append(org.apache.parquet.tools.util.PrettyPrintWriter.Span)
org/apache/parquet/tools/util/PrettyPrintWriter/print(java.lang.String,boolean)#org/apache/parquet/tools/util/PrettyPrintWriter/appendToCurrent(java.lang.String)
org/apache/parquet/tools/util/PrettyPrintWriter/print(java.lang.String,boolean)#org/apache/parquet/tools/util/PrettyPrintWriter/span(java.lang.String,boolean)
org/apache/parquet/tools/util/PrettyPrintWriter/print(java.lang.String,boolean)#java/lang/String/equals(java.lang.Object)
org/apache/parquet/tools/util/PrettyPrintWriter/print(java.lang.String,boolean)#java/lang/String/isEmpty()
org/apache/parquet/tools/util/PrettyPrintWriter/print(java.lang.String,boolean)#org/apache/parquet/tools/util/PrettyPrintWriter/flushIfNeeded(boolean)
org/apache/parquet/tools/util/PrettyPrintWriter/print(java.lang.String,boolean)#org/apache/parquet/tools/util/PrettyPrintWriter/resetColor()
org/apache/parquet/tools/util/PrettyPrintWriter/print(java.lang.String,boolean)#java/util/ArrayList/add(E)
org/apache/parquet/tools/util/PrettyPrintWriter/print(java.lang.String,boolean)#java/lang/String/endsWith(java.lang.String)
org/apache/parquet/tools/util/PrettyPrintWriter/print(java.lang.String,boolean)#org/apache/parquet/tools/util/PrettyPrintWriter/flushIfNeeded()
org/apache/parquet/tools/util/PrettyPrintWriter/print(java.lang.String,boolean)#org/apache/parquet/tools/util/PrettyPrintWriter/Line/Line()
org/apache/parquet/tools/util/PrettyPrintWriter/print(java.lang.String,boolean)#org/apache/parquet/tools/util/PrettyPrintWriter/tabs()
org/apache/parquet/tools/util/PrettyPrintWriter/print(int)#org/apache/parquet/tools/util/PrettyPrintWriter/print(java.lang.String,boolean)
org/apache/parquet/tools/util/PrettyPrintWriter/print(int)#java/lang/String/valueOf(int)
org/apache/parquet/tools/util/PrettyPrintWriter/println()#org/apache/parquet/tools/util/PrettyPrintWriter/flushIfNeeded()
org/apache/parquet/tools/util/PrettyPrintWriter/println()#org/apache/parquet/tools/util/PrettyPrintWriter/print(java.lang.String,boolean)
org/apache/parquet/tools/util/PrettyPrintWriter/flushColumns(boolean)#java/io/Writer/append(java.lang.CharSequence)
org/apache/parquet/tools/util/PrettyPrintWriter/flushColumns(boolean)#java/lang/AbstractStringBuilder/setLength(int)
org/apache/parquet/tools/util/PrettyPrintWriter/flushColumns(boolean)#java/util/ArrayList/clear()
org/apache/parquet/tools/util/PrettyPrintWriter/flushColumns(boolean)#org/apache/parquet/tools/util/PrettyPrintWriter/fixupLine(org.apache.parquet.tools.util.PrettyPrintWriter.Line)
org/apache/parquet/tools/util/PrettyPrintWriter/flushColumns(boolean)#java/util/ArrayList/size()
org/apache/parquet/tools/util/PrettyPrintWriter/flushColumns(boolean)#java/lang/StringBuilder/StringBuilder()
org/apache/parquet/tools/util/PrettyPrintWriter/flushColumns(boolean)#org/apache/parquet/tools/util/PrettyPrintWriter/toColumns(int[],org.apache.parquet.tools.util.PrettyPrintWriter.Line)
org/apache/parquet/tools/util/PrettyPrintWriter/flushColumns(boolean)#org/apache/parquet/tools/util/PrettyPrintWriter/Line/toString(java.lang.StringBuilder)
org/apache/parquet/tools/util/PrettyPrintWriter/flushColumns(boolean)#java/util/ArrayList/add(E)
org/apache/parquet/tools/util/PrettyPrintWriter/flushColumns(boolean)#java/util/ArrayList/get(int)
org/apache/parquet/tools/util/PrettyPrintWriter/flushColumns(boolean)#java/io/Writer/flush()
org/apache/parquet/tools/util/PrettyPrintWriter/flushColumns(boolean)#java/lang/StringBuilder/toString()
org/apache/parquet/tools/util/PrettyPrintWriter/flushColumns(boolean)#org/apache/parquet/tools/util/PrettyPrintWriter/determineColumnWidths()
org/apache/parquet/tools/util/PrettyPrintWriter/flushColumns(boolean)#org/apache/parquet/tools/util/PrettyPrintWriter/Line/Line()
org/apache/parquet/pig/summary/StringSummaryData/getValues()#java/util/ArrayList/ArrayList(java.util.Collection)
org/apache/parquet/pig/summary/StringSummaryData/getValues()#org/apache/parquet/pig/summary/StringSummaryData/getValues()/$anonymous1/()
org/apache/parquet/pig/summary/StringSummaryData/getValues()#java/util/Collections/sort(java.util.List,java.util.Comparator)
org/apache/parquet/pig/summary/StringSummaryData/getValues()#org/apache/parquet/pig/summary/EnumStat/getValues()
org/apache/parquet/pig/summary/StringSummaryData/add(java.lang.String)#org/apache/parquet/pig/summary/ValueStat/add(double)
org/apache/parquet/pig/summary/StringSummaryData/add(java.lang.String)#java/lang/String/length()
org/apache/parquet/pig/summary/StringSummaryData/add(java.lang.String)#org/apache/parquet/pig/summary/SummaryData/add(java.lang.Object)
org/apache/parquet/pig/summary/StringSummaryData/add(java.lang.String)#org/apache/parquet/pig/summary/EnumStat/add(java.lang.String)
org/apache/parquet/pig/summary/StringSummaryData/setValues(java.util.Collection)#org/apache/parquet/pig/summary/EnumStat/setValues(java.util.Collection)
org/apache/parquet/pig/summary/StringSummaryData/merge(org.apache.parquet.pig.summary.SummaryData)#org/apache/parquet/pig/summary/EnumStat/merge(org.apache.parquet.pig.summary.EnumStat)
org/apache/parquet/pig/summary/StringSummaryData/merge(org.apache.parquet.pig.summary.SummaryData)#org/apache/parquet/pig/summary/SummaryData/merge(org.apache.parquet.pig.summary.SummaryData)
org/apache/parquet/pig/summary/StringSummaryData/merge(org.apache.parquet.pig.summary.SummaryData)#org/apache/parquet/pig/summary/ValueStat/merge(org.apache.parquet.pig.summary.ValueStat)
org/apache/parquet/hadoop/util/counters/mapred/MapRedCounterLoader/getCounterByNameAndFlag(java.lang.String,java.lang.String,java.lang.String)#org/apache/parquet/hadoop/util/counters/BenchmarkCounter/NullCounter/NullCounter()
org/apache/parquet/hadoop/util/counters/mapred/MapRedCounterLoader/getCounterByNameAndFlag(java.lang.String,java.lang.String,java.lang.String)#org/apache/parquet/hadoop/util/counters/mapred/MapRedCounterAdapter/MapRedCounterAdapter(Counters.Counter)
org/apache/parquet/thrift/ParquetWriteProtocol/MapWriteProtocol/writeMapEnd()#org/apache/parquet/schema/Type/getName()
org/apache/parquet/thrift/ParquetWriteProtocol/MapWriteProtocol/writeMapEnd()#org/apache/parquet/io/api/RecordConsumer/endField(java.lang.String,int)
org/apache/parquet/thrift/ParquetWriteProtocol/MapWriteProtocol/writeMapEnd()#org/apache/parquet/io/ColumnIO/getType()
org/apache/parquet/thrift/ParquetWriteProtocol/MapWriteProtocol/writeMapEnd()#org/apache/parquet/thrift/ParquetWriteProtocol/FieldBaseWriteProtocol/end()
org/apache/parquet/thrift/ParquetWriteProtocol/MapWriteProtocol/writeMapEnd()#org/apache/parquet/io/api/RecordConsumer/endGroup()
org/apache/parquet/thrift/ParquetWriteProtocol/MapWriteProtocol/writeMapBegin(org.apache.parquet.thrift.TMap)#org/apache/parquet/thrift/ParquetWriteProtocol/FieldBaseWriteProtocol/start()
org/apache/parquet/thrift/ParquetWriteProtocol/MapWriteProtocol/writeMapBegin(org.apache.parquet.thrift.TMap)#org/apache/parquet/schema/Type/getName()
org/apache/parquet/thrift/ParquetWriteProtocol/MapWriteProtocol/writeMapBegin(org.apache.parquet.thrift.TMap)#org/apache/parquet/io/api/RecordConsumer/startField(java.lang.String,int)
org/apache/parquet/thrift/ParquetWriteProtocol/MapWriteProtocol/writeMapBegin(org.apache.parquet.thrift.TMap)#org/apache/parquet/io/ColumnIO/getType()
org/apache/parquet/thrift/ParquetWriteProtocol/MapWriteProtocol/writeMapBegin(org.apache.parquet.thrift.TMap)#org/apache/parquet/io/api/RecordConsumer/startGroup()
org/apache/parquet/tools/command/ShowSchemaCommand/execute(org.apache.parquet.tools.command.CommandLine)#org/apache/parquet/tools/command/ArgsOnlyCommand/execute(org.apache.parquet.tools.command.CommandLine)
org/apache/parquet/tools/command/ShowSchemaCommand/execute(org.apache.parquet.tools.command.CommandLine)#org/apache/parquet/tools/util/MetadataUtils/showDetails(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.hadoop.metadata.ParquetMetadata)
org/apache/parquet/tools/command/ShowSchemaCommand/execute(org.apache.parquet.tools.command.CommandLine)#org/apache/parquet/tools/util/PrettyPrintWriter/Builder/build()
org/apache/parquet/tools/command/ShowSchemaCommand/execute(org.apache.parquet.tools.command.CommandLine)#org/apache/parquet/hadoop/metadata/FileMetaData/getSchema()
org/apache/parquet/tools/command/ShowSchemaCommand/execute(org.apache.parquet.tools.command.CommandLine)#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/apache/parquet/tools/command/ShowSchemaCommand/execute(org.apache.parquet.tools.command.CommandLine)#java/io/PrintStream/println(java.lang.Object)
org/apache/parquet/tools/command/ShowSchemaCommand/execute(org.apache.parquet.tools.command.CommandLine)#org/apache/parquet/hadoop/ParquetFileReader/readFooter(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path,org.apache.parquet.format.converter.ParquetMetadataConverter.MetadataFilter)
org/apache/parquet/tools/command/ShowSchemaCommand/execute(org.apache.parquet.tools.command.CommandLine)#org/apache/parquet/tools/util/PrettyPrintWriter/stdoutPrettyPrinter()
org/apache/parquet/tools/command/ShowSchemaCommand/execute(org.apache.parquet.tools.command.CommandLine)#org/apache/parquet/hadoop/metadata/ParquetMetadata/getFileMetaData()
org/apache/parquet/proto/ProtoMessageConverter/ProtoLongConverter/addLong(long)#org/apache/parquet/proto/ProtoMessageConverter/ParentValueContainer/add(java.lang.Object)
org/apache/parquet/hadoop/metadata/ColumnPath/toDotString()#org/apache/parquet/Strings/join(java.lang.String[],java.lang.String)
org/apache/parquet/hadoop/metadata/ColumnPath/iterator()#java/util/Arrays/asList(T[])
org/apache/parquet/hadoop/metadata/ColumnPath/iterator()#java/util/List/iterator()
org/apache/parquet/hadoop/metadata/ColumnPath/fromDotString(java.lang.String)#java/lang/String/split(java.lang.String)
org/apache/parquet/hadoop/metadata/ColumnPath/fromDotString(java.lang.String)#org/apache/parquet/Preconditions/checkNotNull(T,java.lang.String)
org/apache/parquet/hadoop/metadata/ColumnPath/fromDotString(java.lang.String)#org/apache/parquet/hadoop/metadata/ColumnPath/get(java.lang.String[])
org/apache/parquet/hadoop/metadata/ColumnPath/get(java.lang.String[])#org/apache/parquet/hadoop/metadata/ColumnPath/ColumnPath(java.lang.String[])
org/apache/parquet/hadoop/metadata/ColumnPath/get(java.lang.String[])#org/apache/parquet/hadoop/metadata/Canonicalizer/canonicalize(T)
org/apache/parquet/hadoop/metadata/ColumnPath/hashCode()#java/util/Arrays/hashCode(java.lang.Object[])
org/apache/parquet/hadoop/metadata/ColumnPath/toString()#java/util/Arrays/toString(java.lang.Object[])
org/apache/parquet/hadoop/metadata/ColumnPath/equals(java.lang.Object)#java/util/Arrays/equals(java.lang.Object[],java.lang.Object[])
org/apache/parquet/column/values/plain/BinaryPlainValuesReader/initFromPage(int,java.nio.ByteBuffer,int)#java/nio/Buffer/limit()
org/apache/parquet/column/values/plain/BinaryPlainValuesReader/readBytes()#org/apache/parquet/bytes/BytesUtils/readIntLittleEndian(java.nio.ByteBuffer,int)
org/apache/parquet/column/values/plain/BinaryPlainValuesReader/readBytes()#org/apache/parquet/io/ParquetDecodingException/ParquetDecodingException(java.lang.String,java.lang.Throwable)
org/apache/parquet/column/values/plain/BinaryPlainValuesReader/readBytes()#org/apache/parquet/io/api/Binary/fromConstantByteBuffer(java.nio.ByteBuffer,int,int)
org/apache/parquet/column/values/plain/BinaryPlainValuesReader/skip()#org/apache/parquet/bytes/BytesUtils/readIntLittleEndian(java.nio.ByteBuffer,int)
org/apache/parquet/column/values/plain/BinaryPlainValuesReader/skip()#org/apache/parquet/io/ParquetDecodingException/ParquetDecodingException(java.lang.String,java.lang.Throwable)
org/apache/hadoop/hive/ql/io/parquet/convert/DataWritableGroupConverter/getCurrentArray()#java/util/List/toArray(T[])
org/apache/hadoop/hive/ql/io/parquet/convert/DataWritableGroupConverter/getCurrentArray()#java/util/List/size()
org/apache/hadoop/hive/ql/io/parquet/convert/DataWritableGroupConverter/getCurrentArray()#java/lang/Object/Object()
org/apache/hadoop/hive/ql/io/parquet/convert/DataWritableGroupConverter/end()#org/apache/hadoop/hive/ql/io/parquet/convert/HiveGroupConverter/set(int,org.apache.hadoop.hive.ql.io.parquet.serde.Writable)
org/apache/hadoop/hive/ql/io/parquet/convert/DataWritableGroupConverter/end()#org/apache/hadoop/hive/ql/io/parquet/convert/DataWritableGroupConverter/getCurrentArray()
org/apache/hadoop/hive/ql/io/parquet/convert/DataWritableGroupConverter/add(int,org.apache.hadoop.hive.ql.io.parquet.serde.Writable)#java/util/ArrayList/ArrayList()
org/apache/hadoop/hive/ql/io/parquet/convert/DataWritableGroupConverter/add(int,org.apache.hadoop.hive.ql.io.parquet.serde.Writable)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/apache/parquet/format/converter/ParquetMetadataConverter/SkipMetadataFilter/accept(org.apache.parquet.format.converter.ParquetMetadataConverter.MetadataFilterVisitor)#org/apache/parquet/format/converter/ParquetMetadataConverter/MetadataFilterVisitor/visit(org.apache.parquet.format.converter.ParquetMetadataConverter.SkipMetadataFilter)
org/apache/parquet/thrift/struct/CompatibleCheckerVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.MapType,org.apache.parquet.thrift.struct.State)#org/apache/parquet/thrift/struct/ThriftType/MapType/getKey()
org/apache/parquet/thrift/struct/CompatibleCheckerVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.MapType,org.apache.parquet.thrift.struct.State)#org/apache/parquet/thrift/struct/CompatibleCheckerVisitor/checkField(org.apache.parquet.thrift.struct.ThriftField,org.apache.parquet.thrift.struct.ThriftField,org.apache.parquet.thrift.projection.FieldsPath)
org/apache/parquet/thrift/struct/CompatibleCheckerVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.MapType,org.apache.parquet.thrift.struct.State)#org/apache/parquet/thrift/struct/ThriftType/MapType/getValue()
org/apache/parquet/thrift/struct/CompatibleCheckerVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.ListType,org.apache.parquet.thrift.struct.State)#org/apache/parquet/thrift/struct/ThriftType/ListType/getValues()
org/apache/parquet/thrift/struct/CompatibleCheckerVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.ListType,org.apache.parquet.thrift.struct.State)#org/apache/parquet/thrift/struct/CompatibleCheckerVisitor/checkField(org.apache.parquet.thrift.struct.ThriftField,org.apache.parquet.thrift.struct.ThriftField,org.apache.parquet.thrift.projection.FieldsPath)
org/apache/parquet/thrift/struct/CompatibleCheckerVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.SetType,org.apache.parquet.thrift.struct.State)#org/apache/parquet/thrift/struct/CompatibleCheckerVisitor/checkField(org.apache.parquet.thrift.struct.ThriftField,org.apache.parquet.thrift.struct.ThriftField,org.apache.parquet.thrift.projection.FieldsPath)
org/apache/parquet/thrift/struct/CompatibleCheckerVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.SetType,org.apache.parquet.thrift.struct.State)#org/apache/parquet/thrift/struct/ThriftType/SetType/getValues()
org/apache/parquet/thrift/struct/CompatibleCheckerVisitor/incompatible(java.lang.String,org.apache.parquet.thrift.projection.FieldsPath)#org/apache/parquet/thrift/struct/CompatibilityReport/fail(java.lang.String)
org/apache/parquet/thrift/struct/CompatibleCheckerVisitor/checkField(org.apache.parquet.thrift.struct.ThriftField,org.apache.parquet.thrift.struct.ThriftField,org.apache.parquet.thrift.projection.FieldsPath)#org/apache/parquet/thrift/struct/ThriftType/getType()
org/apache/parquet/thrift/struct/CompatibleCheckerVisitor/checkField(org.apache.parquet.thrift.struct.ThriftField,org.apache.parquet.thrift.struct.ThriftField,org.apache.parquet.thrift.projection.FieldsPath)#org/apache/parquet/thrift/struct/ThriftField/getType()
org/apache/parquet/thrift/struct/CompatibleCheckerVisitor/checkField(org.apache.parquet.thrift.struct.ThriftField,org.apache.parquet.thrift.struct.ThriftField,org.apache.parquet.thrift.projection.FieldsPath)#org/apache/parquet/thrift/struct/ThriftField/getRequirement()
org/apache/parquet/thrift/struct/CompatibleCheckerVisitor/checkField(org.apache.parquet.thrift.struct.ThriftField,org.apache.parquet.thrift.struct.ThriftField,org.apache.parquet.thrift.projection.FieldsPath)#org/apache/parquet/thrift/struct/CompatibleCheckerVisitor/incompatible(java.lang.String,org.apache.parquet.thrift.projection.FieldsPath)
org/apache/parquet/thrift/struct/CompatibleCheckerVisitor/checkField(org.apache.parquet.thrift.struct.ThriftField,org.apache.parquet.thrift.struct.ThriftField,org.apache.parquet.thrift.projection.FieldsPath)#java/lang/String/equals(java.lang.Object)
org/apache/parquet/thrift/struct/CompatibleCheckerVisitor/checkField(org.apache.parquet.thrift.struct.ThriftField,org.apache.parquet.thrift.struct.ThriftField,org.apache.parquet.thrift.projection.FieldsPath)#org/apache/parquet/thrift/projection/FieldsPath/push(org.apache.parquet.thrift.struct.ThriftField)
org/apache/parquet/thrift/struct/CompatibleCheckerVisitor/checkField(org.apache.parquet.thrift.struct.ThriftField,org.apache.parquet.thrift.struct.ThriftField,org.apache.parquet.thrift.projection.FieldsPath)#org/apache/parquet/thrift/struct/ThriftType/accept(org.apache.parquet.thrift.struct.ThriftType.StateVisitor,S)
org/apache/parquet/thrift/struct/CompatibleCheckerVisitor/checkField(org.apache.parquet.thrift.struct.ThriftField,org.apache.parquet.thrift.struct.ThriftField,org.apache.parquet.thrift.projection.FieldsPath)#org/apache/parquet/thrift/struct/State/State(org.apache.parquet.thrift.struct.ThriftType,org.apache.parquet.thrift.projection.FieldsPath)
org/apache/parquet/thrift/struct/CompatibleCheckerVisitor/checkField(org.apache.parquet.thrift.struct.ThriftField,org.apache.parquet.thrift.struct.ThriftField,org.apache.parquet.thrift.projection.FieldsPath)#java/lang/Enum/equals(java.lang.Object)
org/apache/parquet/thrift/struct/CompatibleCheckerVisitor/checkField(org.apache.parquet.thrift.struct.ThriftField,org.apache.parquet.thrift.struct.ThriftField,org.apache.parquet.thrift.projection.FieldsPath)#org/apache/parquet/thrift/struct/CompatibleCheckerVisitor/firstIsMoreRestirctive(org.apache.parquet.thrift.struct.ThriftField.Requirement,org.apache.parquet.thrift.struct.ThriftField.Requirement)
org/apache/parquet/thrift/struct/CompatibleCheckerVisitor/checkField(org.apache.parquet.thrift.struct.ThriftField,org.apache.parquet.thrift.struct.ThriftField,org.apache.parquet.thrift.projection.FieldsPath)#org/apache/parquet/thrift/struct/ThriftField/getName()
org/apache/parquet/thrift/struct/CompatibleCheckerVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.StructType,org.apache.parquet.thrift.struct.State)#org/apache/parquet/thrift/struct/CompatibleCheckerVisitor/incompatible(java.lang.String,org.apache.parquet.thrift.projection.FieldsPath)
org/apache/parquet/thrift/struct/CompatibleCheckerVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.StructType,org.apache.parquet.thrift.struct.State)#org/apache/parquet/thrift/struct/CompatibleCheckerVisitor/checkField(org.apache.parquet.thrift.struct.ThriftField,org.apache.parquet.thrift.struct.ThriftField,org.apache.parquet.thrift.projection.FieldsPath)
org/apache/parquet/thrift/struct/CompatibleCheckerVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.StructType,org.apache.parquet.thrift.struct.State)#org/apache/parquet/thrift/struct/ThriftType/StructType/getChildren()
org/apache/parquet/thrift/struct/CompatibleCheckerVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.StructType,org.apache.parquet.thrift.struct.State)#org/apache/parquet/thrift/struct/CompatibilityReport/emptyStruct(java.lang.String)
org/apache/parquet/thrift/struct/CompatibleCheckerVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.StructType,org.apache.parquet.thrift.struct.State)#org/apache/parquet/thrift/struct/ThriftField/getName()
org/apache/parquet/thrift/struct/CompatibleCheckerVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.StructType,org.apache.parquet.thrift.struct.State)#org/apache/parquet/thrift/struct/ThriftType/StructType/getChildById(short)
org/apache/parquet/thrift/struct/CompatibleCheckerVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.StructType,org.apache.parquet.thrift.struct.State)#org/apache/parquet/thrift/struct/ThriftField/getFieldId()
org/apache/parquet/thrift/struct/CompatibleCheckerVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.StructType,org.apache.parquet.thrift.struct.State)#java/util/List/isEmpty()
org/apache/parquet/thrift/struct/CompatibleCheckerVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.StructType,org.apache.parquet.thrift.struct.State)#org/apache/parquet/thrift/struct/ThriftField/getRequirement()
org/apache/hadoop/hive/serde2/objectinspector/primitive/ParquetStringInspector/getPrimitiveWritableObject(java.lang.Object)#org/apache/hadoop/hive/ql/io/parquet/writable/BinaryWritable/getBytes()
org/apache/hadoop/hive/serde2/objectinspector/primitive/ParquetStringInspector/getPrimitiveWritableObject(java.lang.Object)#java/lang/Class/getCanonicalName()
org/apache/hadoop/hive/serde2/objectinspector/primitive/ParquetStringInspector/getPrimitiveWritableObject(java.lang.Object)#java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)
org/apache/hadoop/hive/serde2/objectinspector/primitive/ParquetStringInspector/getPrimitiveWritableObject(java.lang.Object)#java/lang/Object/getClass()
org/apache/hadoop/hive/serde2/objectinspector/primitive/ParquetStringInspector/getPrimitiveJavaObject(java.lang.Object)#java/lang/Object/toString()
org/apache/hadoop/hive/serde2/objectinspector/primitive/ParquetStringInspector/getPrimitiveJavaObject(java.lang.Object)#org/apache/hadoop/hive/ql/io/parquet/writable/BinaryWritable/getString()
org/apache/hadoop/hive/serde2/objectinspector/primitive/ParquetStringInspector/getPrimitiveJavaObject(java.lang.Object)#java/lang/Class/getCanonicalName()
org/apache/hadoop/hive/serde2/objectinspector/primitive/ParquetStringInspector/getPrimitiveJavaObject(java.lang.Object)#java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)
org/apache/hadoop/hive/serde2/objectinspector/primitive/ParquetStringInspector/getPrimitiveJavaObject(java.lang.Object)#java/lang/Object/getClass()
org/apache/hadoop/hive/serde2/objectinspector/primitive/ParquetStringInspector/set(java.lang.Object,java.lang.String)#org/apache/hadoop/hive/ql/io/parquet/writable/BinaryWritable/BinaryWritable(org.apache.parquet.io.api.Binary)
org/apache/hadoop/hive/serde2/objectinspector/primitive/ParquetStringInspector/set(java.lang.Object,java.lang.String)#org/apache/parquet/io/api/Binary/fromString(java.lang.String)
org/apache/hadoop/hive/serde2/objectinspector/primitive/ParquetStringInspector/set(java.lang.Object,org.apache.hadoop.hive.serde2.objectinspector.primitive.Text)#org/apache/parquet/io/api/Binary/fromReusedByteArray(byte[])
org/apache/hadoop/hive/serde2/objectinspector/primitive/ParquetStringInspector/set(java.lang.Object,org.apache.hadoop.hive.serde2.objectinspector.primitive.Text)#org/apache/hadoop/hive/ql/io/parquet/writable/BinaryWritable/BinaryWritable(org.apache.parquet.io.api.Binary)
org/apache/parquet/hadoop/InternalParquetRecordWriter/getDataSize()#org/apache/parquet/column/ColumnWriteStore/getBufferedSize()
org/apache/parquet/hadoop/InternalParquetRecordWriter/checkBlockSizeReached()#org/apache/parquet/hadoop/InternalParquetRecordWriter/initStore()
org/apache/parquet/hadoop/InternalParquetRecordWriter/checkBlockSizeReached()#org/apache/parquet/hadoop/InternalParquetRecordWriter/flushRowGroupToStore()
org/apache/parquet/hadoop/InternalParquetRecordWriter/checkBlockSizeReached()#java/lang/Math/max(long,long)
org/apache/parquet/hadoop/InternalParquetRecordWriter/checkBlockSizeReached()#org/apache/parquet/hadoop/ParquetFileWriter/getPos()
org/apache/parquet/hadoop/InternalParquetRecordWriter/checkBlockSizeReached()#java/lang/Math/min(long,long)
org/apache/parquet/hadoop/InternalParquetRecordWriter/checkBlockSizeReached()#org/apache/parquet/column/ColumnWriteStore/getBufferedSize()
org/apache/parquet/hadoop/InternalParquetRecordWriter/initStore()#org/apache/parquet/column/ParquetProperties/newColumnWriteStore(org.apache.parquet.schema.MessageType,org.apache.parquet.column.page.PageWriteStore)
org/apache/parquet/hadoop/InternalParquetRecordWriter/initStore()#org/apache/parquet/io/ColumnIOFactory/getColumnIO(org.apache.parquet.schema.MessageType)
org/apache/parquet/hadoop/InternalParquetRecordWriter/initStore()#org/apache/parquet/io/MessageColumnIO/getRecordWriter(org.apache.parquet.column.ColumnWriteStore)
org/apache/parquet/hadoop/InternalParquetRecordWriter/initStore()#org/apache/parquet/hadoop/api/WriteSupport/prepareForWrite(org.apache.parquet.io.api.RecordConsumer)
org/apache/parquet/hadoop/InternalParquetRecordWriter/initStore()#org/apache/parquet/column/ParquetProperties/getAllocator()
org/apache/parquet/hadoop/InternalParquetRecordWriter/initStore()#org/apache/parquet/io/ColumnIOFactory/ColumnIOFactory(boolean)
org/apache/parquet/hadoop/InternalParquetRecordWriter/initStore()#org/apache/parquet/hadoop/ColumnChunkPageWriteStore/ColumnChunkPageWriteStore(org.apache.parquet.hadoop.CodecFactory.BytesCompressor,org.apache.parquet.schema.MessageType,org.apache.parquet.bytes.ByteBufferAllocator)
org/apache/parquet/hadoop/InternalParquetRecordWriter/flushRowGroupToStore()#java/lang/Math/min(long,long)
org/apache/parquet/hadoop/InternalParquetRecordWriter/flushRowGroupToStore()#org/apache/parquet/io/api/RecordConsumer/flush()
org/apache/parquet/hadoop/InternalParquetRecordWriter/flushRowGroupToStore()#org/apache/parquet/hadoop/ParquetFileWriter/getNextRowGroupSize()
org/apache/parquet/hadoop/InternalParquetRecordWriter/flushRowGroupToStore()#org/apache/parquet/column/ColumnWriteStore/memUsageString()
org/apache/parquet/hadoop/InternalParquetRecordWriter/flushRowGroupToStore()#org/apache/parquet/hadoop/ParquetFileWriter/startBlock(long)
org/apache/parquet/hadoop/InternalParquetRecordWriter/flushRowGroupToStore()#org/apache/parquet/column/ColumnWriteStore/flush()
org/apache/parquet/hadoop/InternalParquetRecordWriter/flushRowGroupToStore()#org/apache/parquet/hadoop/ParquetFileWriter/endBlock()
org/apache/parquet/hadoop/InternalParquetRecordWriter/flushRowGroupToStore()#org/apache/parquet/hadoop/ColumnChunkPageWriteStore/flushToFileWriter(org.apache.parquet.hadoop.ParquetFileWriter)
org/apache/parquet/hadoop/InternalParquetRecordWriter/flushRowGroupToStore()#org/apache/parquet/column/ColumnWriteStore/getAllocatedSize()
org/apache/parquet/hadoop/InternalParquetRecordWriter/write(T)#org/apache/parquet/hadoop/api/WriteSupport/write(T)
org/apache/parquet/hadoop/InternalParquetRecordWriter/write(T)#org/apache/parquet/hadoop/InternalParquetRecordWriter/checkBlockSizeReached()
org/apache/parquet/hadoop/InternalParquetRecordWriter/close()#org/apache/parquet/hadoop/InternalParquetRecordWriter/flushRowGroupToStore()
org/apache/parquet/hadoop/InternalParquetRecordWriter/close()#java/util/HashMap/HashMap(java.util.Map)
org/apache/parquet/hadoop/InternalParquetRecordWriter/close()#java/util/Map/putAll(java.util.Map)
org/apache/parquet/hadoop/InternalParquetRecordWriter/close()#org/apache/parquet/hadoop/api/WriteSupport/FinalizedWriteContext/getExtraMetaData()
org/apache/parquet/hadoop/InternalParquetRecordWriter/close()#org/apache/parquet/hadoop/ParquetFileWriter/end(java.util.Map)
org/apache/parquet/hadoop/InternalParquetRecordWriter/close()#java/util/Map/put(K,V)
org/apache/parquet/hadoop/InternalParquetRecordWriter/close()#org/apache/parquet/hadoop/api/WriteSupport/getName()
org/apache/parquet/hadoop/InternalParquetRecordWriter/close()#org/apache/parquet/hadoop/api/WriteSupport/finalizeWrite()
org/apache/parquet/column/values/bitpacking/TestLemireBitPacking/packUnpack(org.apache.parquet.column.values.bitpacking.IntPacker,int[],int[])#org/apache/parquet/column/values/bitpacking/IntPacker/getBitWidth()
org/apache/parquet/column/values/bitpacking/TestLemireBitPacking/packUnpack(org.apache.parquet.column.values.bitpacking.IntPacker,int[],int[])#org/apache/parquet/column/values/bitpacking/IntPacker/pack32Values(int[],int,int[],int)
org/apache/parquet/column/values/bitpacking/TestLemireBitPacking/packUnpack(org.apache.parquet.column.values.bitpacking.IntPacker,int[],int[])#org/apache/parquet/column/values/bitpacking/IntPacker/unpack32Values(int[],int,int[],int)
org/apache/parquet/column/values/bitpacking/TestLemireBitPacking/testPackUnPack()#java/lang/Enum/name()
org/apache/parquet/column/values/bitpacking/TestLemireBitPacking/testPackUnPack()#org/apache/parquet/column/values/bitpacking/TestLemireBitPacking/packUnpack(org.apache.parquet.column.values.bitpacking.IntPacker,int[],int[])
org/apache/parquet/column/values/bitpacking/TestLemireBitPacking/testPackUnPack()#org/apache/parquet/column/values/bitpacking/Packer/newBytePacker(int)
org/apache/parquet/column/values/bitpacking/TestLemireBitPacking/testPackUnPack()#org/apache/parquet/column/values/bitpacking/Packer/newIntPacker(int)
org/apache/parquet/column/values/bitpacking/TestLemireBitPacking/testPackUnPack()#org/apache/parquet/column/values/bitpacking/TestLemireBitPacking/packUnpack(org.apache.parquet.column.values.bitpacking.BytePacker,int[],int[])
org/apache/parquet/column/values/bitpacking/TestLemireBitPacking/testPackUnPack()#org/apache/parquet/column/values/bitpacking/TestBitPacking/toString(int[])
org/apache/parquet/column/values/bitpacking/TestLemireBitPacking/testPackUnPack()#org/apache/parquet/column/values/bitpacking/TestLemireBitPacking/generateValues(int)
org/apache/parquet/column/values/bitpacking/TestLemireBitPacking/testPackUnPack()#org/apache/parquet/column/values/bitpacking/Packer/values()
org/apache/parquet/column/values/bitpacking/TestLemireBitPacking/testPackUnPackAgainstHandWritten()#org/apache/parquet/column/values/bitpacking/BitPacking/getBitPackingWriter(int,java.io.OutputStream)
org/apache/parquet/column/values/bitpacking/TestLemireBitPacking/testPackUnPackAgainstHandWritten()#org/apache/parquet/column/values/bitpacking/BitPacking/createBitPackingReader(int,java.io.InputStream,long)
org/apache/parquet/column/values/bitpacking/TestLemireBitPacking/testPackUnPackAgainstHandWritten()#org/apache/parquet/column/values/bitpacking/Packer/newIntPacker(int)
org/apache/parquet/column/values/bitpacking/TestLemireBitPacking/testPackUnPackAgainstHandWritten()#java/io/ByteArrayInputStream/ByteArrayInputStream(byte[])
org/apache/parquet/column/values/bitpacking/TestLemireBitPacking/testPackUnPackAgainstHandWritten()#org/apache/parquet/column/values/bitpacking/IntPacker/pack32Values(int[],int,int[],int)
org/apache/parquet/column/values/bitpacking/TestLemireBitPacking/testPackUnPackAgainstHandWritten()#org/apache/parquet/column/values/bitpacking/TestBitPacking/toString(byte[])
org/apache/parquet/column/values/bitpacking/TestLemireBitPacking/testPackUnPackAgainstHandWritten()#java/io/ByteArrayOutputStream/write(int)
org/apache/parquet/column/values/bitpacking/TestLemireBitPacking/testPackUnPackAgainstHandWritten()#org/apache/parquet/column/values/bitpacking/BitPacking/BitPackingWriter/write(int)
org/apache/parquet/column/values/bitpacking/TestLemireBitPacking/testPackUnPackAgainstHandWritten()#org/apache/parquet/column/values/bitpacking/TestBitPacking/toString(int[])
org/apache/parquet/column/values/bitpacking/TestLemireBitPacking/testPackUnPackAgainstHandWritten()#org/apache/parquet/column/values/bitpacking/BitPacking/BitPackingReader/read()
org/apache/parquet/column/values/bitpacking/TestLemireBitPacking/testPackUnPackAgainstHandWritten()#java/io/ByteArrayOutputStream/ByteArrayOutputStream()
org/apache/parquet/column/values/bitpacking/TestLemireBitPacking/testPackUnPackAgainstHandWritten()#org/apache/parquet/column/values/bitpacking/TestLemireBitPacking/generateValues(int)
org/apache/parquet/column/values/bitpacking/TestLemireBitPacking/testPackUnPackAgainstHandWritten()#java/io/ByteArrayOutputStream/toByteArray()
org/apache/parquet/column/values/bitpacking/TestLemireBitPacking/packUnpack(org.apache.parquet.column.values.bitpacking.BytePacker,int[],int[])#org/apache/parquet/column/values/bitpacking/BytePacker/pack32Values(int[],int,byte[],int)
org/apache/parquet/column/values/bitpacking/TestLemireBitPacking/packUnpack(org.apache.parquet.column.values.bitpacking.BytePacker,int[],int[])#org/apache/parquet/column/values/bitpacking/BytePacker/unpack32Values(java.nio.ByteBuffer,int,int[],int)
org/apache/parquet/column/values/bitpacking/TestLemireBitPacking/packUnpack(org.apache.parquet.column.values.bitpacking.BytePacker,int[],int[])#org/apache/parquet/column/values/bitpacking/BytePacker/getBitWidth()
org/apache/parquet/column/values/bitpacking/TestLemireBitPacking/packUnpack(org.apache.parquet.column.values.bitpacking.BytePacker,int[],int[])#java/nio/ByteBuffer/wrap(byte[])
org/apache/parquet/column/values/bitpacking/TestLemireBitPacking/generateValues(int)#java/lang/Math/random()
org/apache/parquet/column/values/bitpacking/TestLemireBitPacking/generateValues(int)#org/apache/parquet/column/values/bitpacking/TestBitPacking/toString(int[])
org/apache/parquet/column/values/bitpacking/TestLemireBitPacking/generateValues(int)#java/lang/Math/pow(double,double)
org/apache/parquet/encodings/FileEncodingsIT/PageGroupValidator/reusableCopy(org.apache.parquet.column.page.DictionaryPage)#org/apache/parquet/column/page/DictionaryPage/getBytes()
org/apache/parquet/encodings/FileEncodingsIT/PageGroupValidator/reusableCopy(org.apache.parquet.column.page.DictionaryPage)#org/apache/parquet/column/page/DictionaryPage/DictionaryPage(org.apache.parquet.bytes.BytesInput,int,org.apache.parquet.column.Encoding)
org/apache/parquet/encodings/FileEncodingsIT/PageGroupValidator/reusableCopy(org.apache.parquet.column.page.DictionaryPage)#org/apache/parquet/column/page/DictionaryPage/getEncoding()
org/apache/parquet/encodings/FileEncodingsIT/PageGroupValidator/reusableCopy(org.apache.parquet.column.page.DictionaryPage)#org/apache/parquet/bytes/BytesInput/from(byte[])
org/apache/parquet/encodings/FileEncodingsIT/PageGroupValidator/reusableCopy(org.apache.parquet.column.page.DictionaryPage)#org/apache/parquet/io/ParquetDecodingException/ParquetDecodingException(java.lang.String,java.lang.Throwable)
org/apache/parquet/encodings/FileEncodingsIT/PageGroupValidator/reusableCopy(org.apache.parquet.column.page.DictionaryPage)#org/apache/parquet/column/page/DictionaryPage/getDictionarySize()
org/apache/parquet/encodings/FileEncodingsIT/PageGroupValidator/reusableCopy(org.apache.parquet.column.page.DictionaryPage)#org/apache/parquet/bytes/BytesInput/toByteArray()
org/apache/parquet/encodings/FileEncodingsIT/PageGroupValidator/readSchemaFromFile(org.apache.parquet.hadoop.Path)#org/apache/parquet/hadoop/metadata/ParquetMetadata/getFileMetaData()
org/apache/parquet/encodings/FileEncodingsIT/PageGroupValidator/readSchemaFromFile(org.apache.parquet.hadoop.Path)#org/apache/parquet/hadoop/metadata/FileMetaData/getSchema()
org/apache/parquet/encodings/FileEncodingsIT/PageGroupValidator/readSchemaFromFile(org.apache.parquet.hadoop.Path)#org/apache/parquet/hadoop/ParquetFileReader/readFooter(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path,org.apache.parquet.format.converter.ParquetMetadataConverter.MetadataFilter)
org/apache/parquet/encodings/FileEncodingsIT/PageGroupValidator/getDictionaryPageForColumn(org.apache.parquet.column.page.PageReadStore,org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/page/PageReadStore/getPageReader(org.apache.parquet.column.ColumnDescriptor)
org/apache/parquet/encodings/FileEncodingsIT/PageGroupValidator/getDictionaryPageForColumn(org.apache.parquet.column.page.PageReadStore,org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/page/PageReader/readDictionaryPage()
org/apache/parquet/encodings/FileEncodingsIT/PageGroupValidator/readBlocksFromFile(org.apache.parquet.hadoop.Path)#java/util/ArrayList/ArrayList()
org/apache/parquet/encodings/FileEncodingsIT/PageGroupValidator/readBlocksFromFile(org.apache.parquet.hadoop.Path)#org/apache/parquet/hadoop/metadata/ParquetMetadata/getBlocks()
org/apache/parquet/encodings/FileEncodingsIT/PageGroupValidator/readBlocksFromFile(org.apache.parquet.hadoop.Path)#org/apache/parquet/hadoop/metadata/ParquetMetadata/getFileMetaData()
org/apache/parquet/encodings/FileEncodingsIT/PageGroupValidator/readBlocksFromFile(org.apache.parquet.hadoop.Path)#org/apache/parquet/schema/MessageType/getColumns()
org/apache/parquet/encodings/FileEncodingsIT/PageGroupValidator/readBlocksFromFile(org.apache.parquet.hadoop.Path)#org/apache/parquet/hadoop/metadata/FileMetaData/getSchema()
org/apache/parquet/encodings/FileEncodingsIT/PageGroupValidator/readBlocksFromFile(org.apache.parquet.hadoop.Path)#java/util/List/add(E)
org/apache/parquet/encodings/FileEncodingsIT/PageGroupValidator/readBlocksFromFile(org.apache.parquet.hadoop.Path)#org/apache/parquet/hadoop/ParquetFileReader/ParquetFileReader(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.metadata.FileMetaData,org.apache.parquet.hadoop.Path,java.util.List,java.util.List)
org/apache/parquet/encodings/FileEncodingsIT/PageGroupValidator/readBlocksFromFile(org.apache.parquet.hadoop.Path)#org/apache/parquet/hadoop/ParquetFileReader/readFooter(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path,org.apache.parquet.format.converter.ParquetMetadataConverter.MetadataFilter)
org/apache/parquet/encodings/FileEncodingsIT/PageGroupValidator/readBlocksFromFile(org.apache.parquet.hadoop.Path)#org/apache/parquet/hadoop/ParquetFileReader/readNextRowGroup()
org/apache/parquet/encodings/FileEncodingsIT/PageGroupValidator/reusableCopy(org.apache.parquet.column.page.DataPage)#org/apache/parquet/encodings/FileEncodingsIT/PageGroupValidator/reusableCopy(org/apache/parquet/column/page/DataPage)/$anonymous1/()
org/apache/parquet/encodings/FileEncodingsIT/PageGroupValidator/reusableCopy(org.apache.parquet.column.page.DataPage)#org/apache/parquet/column/page/DataPage/accept(org.apache.parquet.column.page.DataPage.Visitor)
org/apache/parquet/encodings/FileEncodingsIT/PageGroupValidator/validateLastToFirst(int,org.apache.parquet.column.page.DictionaryPage,java.util.List,org.apache.parquet.column.ColumnDescriptor,java.util.List)#org/apache/parquet/encodings/FileEncodingsIT/PageValuesValidator/validateValuesForPage(int,int,org.apache.parquet.column.page.DictionaryPage,org.apache.parquet.column.page.DataPage,org.apache.parquet.column.ColumnDescriptor,java.util.List)
org/apache/parquet/encodings/FileEncodingsIT/PageGroupValidator/validateLastToFirst(int,org.apache.parquet.column.page.DictionaryPage,java.util.List,org.apache.parquet.column.ColumnDescriptor,java.util.List)#java/util/List/subList(int,int)
org/apache/parquet/encodings/FileEncodingsIT/PageGroupValidator/validateLastToFirst(int,org.apache.parquet.column.page.DictionaryPage,java.util.List,org.apache.parquet.column.ColumnDescriptor,java.util.List)#java/util/List/size()
org/apache/parquet/encodings/FileEncodingsIT/PageGroupValidator/validateLastToFirst(int,org.apache.parquet.column.page.DictionaryPage,java.util.List,org.apache.parquet.column.ColumnDescriptor,java.util.List)#org/apache/parquet/column/page/DataPage/getValueCount()
org/apache/parquet/encodings/FileEncodingsIT/PageGroupValidator/validateLastToFirst(int,org.apache.parquet.column.page.DictionaryPage,java.util.List,org.apache.parquet.column.ColumnDescriptor,java.util.List)#java/util/List/get(int)
org/apache/parquet/encodings/FileEncodingsIT/PageGroupValidator/validatePages(org.apache.parquet.hadoop.Path,java.util.List)#org/apache/parquet/encodings/FileEncodingsIT/PageGroupValidator/reusableCopy(org.apache.parquet.column.page.DictionaryPage)
org/apache/parquet/encodings/FileEncodingsIT/PageGroupValidator/validatePages(org.apache.parquet.hadoop.Path,java.util.List)#org/apache/parquet/encodings/FileEncodingsIT/PageGroupValidator/readSchemaFromFile(org.apache.parquet.hadoop.Path)
org/apache/parquet/encodings/FileEncodingsIT/PageGroupValidator/validatePages(org.apache.parquet.hadoop.Path,java.util.List)#org/apache/parquet/encodings/FileEncodingsIT/PageGroupValidator/getDictionaryPageForColumn(org.apache.parquet.column.page.PageReadStore,org.apache.parquet.column.ColumnDescriptor)
org/apache/parquet/encodings/FileEncodingsIT/PageGroupValidator/validatePages(org.apache.parquet.hadoop.Path,java.util.List)#org/apache/parquet/encodings/FileEncodingsIT/PageGroupValidator/readBlocksFromFile(org.apache.parquet.hadoop.Path)
org/apache/parquet/encodings/FileEncodingsIT/PageGroupValidator/validatePages(org.apache.parquet.hadoop.Path,java.util.List)#org/apache/parquet/schema/MessageType/getColumns()
org/apache/parquet/encodings/FileEncodingsIT/PageGroupValidator/validatePages(org.apache.parquet.hadoop.Path,java.util.List)#java/util/List/subList(int,int)
org/apache/parquet/encodings/FileEncodingsIT/PageGroupValidator/validatePages(org.apache.parquet.hadoop.Path,java.util.List)#org/apache/parquet/column/page/PageReadStore/getRowCount()
org/apache/parquet/encodings/FileEncodingsIT/PageGroupValidator/validatePages(org.apache.parquet.hadoop.Path,java.util.List)#org/apache/parquet/encodings/FileEncodingsIT/PageGroupValidator/validateLastToFirst(int,org.apache.parquet.column.page.DictionaryPage,java.util.List,org.apache.parquet.column.ColumnDescriptor,java.util.List)
org/apache/parquet/encodings/FileEncodingsIT/PageGroupValidator/validatePages(org.apache.parquet.hadoop.Path,java.util.List)#org/apache/parquet/encodings/FileEncodingsIT/PageGroupValidator/validateFirstToLast(int,org.apache.parquet.column.page.DictionaryPage,java.util.List,org.apache.parquet.column.ColumnDescriptor,java.util.List)
org/apache/parquet/encodings/FileEncodingsIT/PageGroupValidator/validatePages(org.apache.parquet.hadoop.Path,java.util.List)#org/apache/parquet/encodings/FileEncodingsIT/PageGroupValidator/getPageGroupForColumn(org.apache.parquet.column.page.PageReadStore,org.apache.parquet.column.ColumnDescriptor)
org/apache/parquet/encodings/FileEncodingsIT/PageGroupValidator/validateFirstToLast(int,org.apache.parquet.column.page.DictionaryPage,java.util.List,org.apache.parquet.column.ColumnDescriptor,java.util.List)#org/apache/parquet/encodings/FileEncodingsIT/PageValuesValidator/validateValuesForPage(int,int,org.apache.parquet.column.page.DictionaryPage,org.apache.parquet.column.page.DataPage,org.apache.parquet.column.ColumnDescriptor,java.util.List)
org/apache/parquet/encodings/FileEncodingsIT/PageGroupValidator/validateFirstToLast(int,org.apache.parquet.column.page.DictionaryPage,java.util.List,org.apache.parquet.column.ColumnDescriptor,java.util.List)#java/util/List/subList(int,int)
org/apache/parquet/encodings/FileEncodingsIT/PageGroupValidator/validateFirstToLast(int,org.apache.parquet.column.page.DictionaryPage,java.util.List,org.apache.parquet.column.ColumnDescriptor,java.util.List)#org/apache/parquet/column/page/DataPage/getValueCount()
org/apache/parquet/encodings/FileEncodingsIT/PageGroupValidator/getPageGroupForColumn(org.apache.parquet.column.page.PageReadStore,org.apache.parquet.column.ColumnDescriptor)#java/util/ArrayList/ArrayList()
org/apache/parquet/encodings/FileEncodingsIT/PageGroupValidator/getPageGroupForColumn(org.apache.parquet.column.page.PageReadStore,org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/page/PageReader/readPage()
org/apache/parquet/encodings/FileEncodingsIT/PageGroupValidator/getPageGroupForColumn(org.apache.parquet.column.page.PageReadStore,org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/page/PageReadStore/getPageReader(org.apache.parquet.column.ColumnDescriptor)
org/apache/parquet/encodings/FileEncodingsIT/PageGroupValidator/getPageGroupForColumn(org.apache.parquet.column.page.PageReadStore,org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/encodings/FileEncodingsIT/PageGroupValidator/reusableCopy(org.apache.parquet.column.page.DataPage)
org/apache/parquet/encodings/FileEncodingsIT/PageGroupValidator/getPageGroupForColumn(org.apache.parquet.column.page.PageReadStore,org.apache.parquet.column.ColumnDescriptor)#java/util/List/add(E)
org/apache/hadoop/hive/ql/io/parquet/serde/TestAbstractParquetMapInspector/TestableAbstractParquetMapInspector/getMapValueElement(java.lang.Object,java.lang.Object)#java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)
org/apache/parquet/parser/TestParquetParser/testMAPAnnotations()#org/apache/parquet/schema/Type/toString()
org/apache/parquet/parser/TestParquetParser/testMAPAnnotations()#org/apache/parquet/schema/Types/buildMessage()
org/apache/parquet/parser/TestParquetParser/testMAPAnnotations()#org/apache/parquet/schema/Types/Builder/named(java.lang.String)
org/apache/parquet/parser/TestParquetParser/testMAPAnnotations()#org/apache/parquet/schema/Types/BaseGroupBuilder/optionalGroup()
org/apache/parquet/parser/TestParquetParser/testMAPAnnotations()#org/apache/parquet/schema/Types/Builder/as(org.apache.parquet.schema.OriginalType)
org/apache/parquet/parser/TestParquetParser/testMAPAnnotations()#org/apache/parquet/schema/MessageTypeParser/parseMessageType(java.lang.String)
org/apache/parquet/parser/TestParquetParser/testMAPAnnotations()#org/apache/parquet/schema/Types/BaseGroupBuilder/repeatedGroup()
org/apache/parquet/parser/TestParquetParser/testMAPAnnotations()#org/apache/parquet/schema/Types/BaseGroupBuilder/required(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/parser/TestParquetParser/testLISTAnnotation()#org/apache/parquet/schema/Type/toString()
org/apache/parquet/parser/TestParquetParser/testLISTAnnotation()#org/apache/parquet/schema/Types/buildMessage()
org/apache/parquet/parser/TestParquetParser/testLISTAnnotation()#org/apache/parquet/schema/Types/Builder/named(java.lang.String)
org/apache/parquet/parser/TestParquetParser/testLISTAnnotation()#org/apache/parquet/schema/MessageTypeParser/parseMessageType(java.lang.String)
org/apache/parquet/parser/TestParquetParser/testLISTAnnotation()#org/apache/parquet/schema/Types/BaseGroupBuilder/repeated(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/parser/TestParquetParser/testLISTAnnotation()#org/apache/parquet/schema/Types/Builder/as(org.apache.parquet.schema.OriginalType)
org/apache/parquet/parser/TestParquetParser/testLISTAnnotation()#org/apache/parquet/schema/Types/BaseGroupBuilder/requiredGroup()
org/apache/parquet/parser/TestParquetParser/testDecimalFixedAnnotation()#org/apache/parquet/schema/Type/toString()
org/apache/parquet/parser/TestParquetParser/testDecimalFixedAnnotation()#org/apache/parquet/schema/Types/buildMessage()
org/apache/parquet/parser/TestParquetParser/testDecimalFixedAnnotation()#org/apache/parquet/schema/Types/Builder/named(java.lang.String)
org/apache/parquet/parser/TestParquetParser/testDecimalFixedAnnotation()#org/apache/parquet/schema/Types/BasePrimitiveBuilder/scale(int)
org/apache/parquet/parser/TestParquetParser/testDecimalFixedAnnotation()#org/apache/parquet/schema/Types/Builder/as(org.apache.parquet.schema.OriginalType)
org/apache/parquet/parser/TestParquetParser/testDecimalFixedAnnotation()#org/apache/parquet/schema/MessageTypeParser/parseMessageType(java.lang.String)
org/apache/parquet/parser/TestParquetParser/testDecimalFixedAnnotation()#org/apache/parquet/schema/Types/BasePrimitiveBuilder/precision(int)
org/apache/parquet/parser/TestParquetParser/testDecimalFixedAnnotation()#org/apache/parquet/schema/Types/BaseGroupBuilder/required(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/parser/TestParquetParser/testDecimalFixedAnnotation()#org/apache/parquet/schema/Types/BasePrimitiveBuilder/length(int)
org/apache/parquet/parser/TestParquetParser/testIntAnnotations()#org/apache/parquet/schema/Type/toString()
org/apache/parquet/parser/TestParquetParser/testIntAnnotations()#org/apache/parquet/schema/Types/buildMessage()
org/apache/parquet/parser/TestParquetParser/testIntAnnotations()#org/apache/parquet/schema/Types/Builder/named(java.lang.String)
org/apache/parquet/parser/TestParquetParser/testIntAnnotations()#org/apache/parquet/schema/Types/Builder/as(org.apache.parquet.schema.OriginalType)
org/apache/parquet/parser/TestParquetParser/testIntAnnotations()#org/apache/parquet/schema/MessageTypeParser/parseMessageType(java.lang.String)
org/apache/parquet/parser/TestParquetParser/testIntAnnotations()#org/apache/parquet/schema/Types/BaseGroupBuilder/required(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/parser/TestParquetParser/testTimeAnnotations()#org/apache/parquet/schema/Type/toString()
org/apache/parquet/parser/TestParquetParser/testTimeAnnotations()#org/apache/parquet/schema/Types/buildMessage()
org/apache/parquet/parser/TestParquetParser/testTimeAnnotations()#org/apache/parquet/schema/Types/Builder/named(java.lang.String)
org/apache/parquet/parser/TestParquetParser/testTimeAnnotations()#org/apache/parquet/schema/Types/Builder/as(org.apache.parquet.schema.OriginalType)
org/apache/parquet/parser/TestParquetParser/testTimeAnnotations()#org/apache/parquet/schema/MessageTypeParser/parseMessageType(java.lang.String)
org/apache/parquet/parser/TestParquetParser/testTimeAnnotations()#org/apache/parquet/schema/Types/BaseGroupBuilder/required(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/parser/TestParquetParser/testTimeAnnotations()#org/apache/parquet/schema/Types/BasePrimitiveBuilder/length(int)
org/apache/parquet/parser/TestParquetParser/testIDs()#org/apache/parquet/schema/Type/toString()
org/apache/parquet/parser/TestParquetParser/testIDs()#org/apache/parquet/schema/Types/buildMessage()
org/apache/parquet/parser/TestParquetParser/testIDs()#org/apache/parquet/schema/Types/Builder/named(java.lang.String)
org/apache/parquet/parser/TestParquetParser/testIDs()#org/apache/parquet/schema/Types/Builder/as(org.apache.parquet.schema.OriginalType)
org/apache/parquet/parser/TestParquetParser/testIDs()#org/apache/parquet/schema/MessageTypeParser/parseMessageType(java.lang.String)
org/apache/parquet/parser/TestParquetParser/testIDs()#org/apache/parquet/schema/Types/BaseGroupBuilder/required(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/parser/TestParquetParser/testIDs()#org/apache/parquet/schema/Types/Builder/id(int)
org/apache/parquet/parser/TestParquetParser/testUTF8Annotation()#org/apache/parquet/schema/Type/toString()
org/apache/parquet/parser/TestParquetParser/testUTF8Annotation()#org/apache/parquet/schema/Types/buildMessage()
org/apache/parquet/parser/TestParquetParser/testUTF8Annotation()#org/apache/parquet/schema/Types/Builder/named(java.lang.String)
org/apache/parquet/parser/TestParquetParser/testUTF8Annotation()#org/apache/parquet/schema/Types/Builder/as(org.apache.parquet.schema.OriginalType)
org/apache/parquet/parser/TestParquetParser/testUTF8Annotation()#org/apache/parquet/schema/MessageTypeParser/parseMessageType(java.lang.String)
org/apache/parquet/parser/TestParquetParser/testUTF8Annotation()#org/apache/parquet/schema/Types/BaseGroupBuilder/required(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/parser/TestParquetParser/testEachPrimitiveType()#org/apache/parquet/schema/Type/toString()
org/apache/parquet/parser/TestParquetParser/testEachPrimitiveType()#java/lang/Enum/toString()
org/apache/parquet/parser/TestParquetParser/testEachPrimitiveType()#org/apache/parquet/schema/Types/buildMessage()
org/apache/parquet/parser/TestParquetParser/testEachPrimitiveType()#java/lang/StringBuilder/append(java.lang.String)
org/apache/parquet/parser/TestParquetParser/testEachPrimitiveType()#org/apache/parquet/schema/Types/Builder/named(java.lang.String)
org/apache/parquet/parser/TestParquetParser/testEachPrimitiveType()#org/apache/parquet/schema/PrimitiveType/PrimitiveTypeName/values()
org/apache/parquet/parser/TestParquetParser/testEachPrimitiveType()#org/apache/parquet/schema/Types/MessageTypeBuilder/named(java.lang.String)
org/apache/parquet/parser/TestParquetParser/testEachPrimitiveType()#org/apache/parquet/schema/MessageTypeParser/parseMessageType(java.lang.String)
org/apache/parquet/parser/TestParquetParser/testEachPrimitiveType()#java/lang/StringBuilder/StringBuilder()
org/apache/parquet/parser/TestParquetParser/testEachPrimitiveType()#org/apache/parquet/schema/Types/BasePrimitiveBuilder/length(int)
org/apache/parquet/parser/TestParquetParser/testEachPrimitiveType()#java/lang/StringBuilder/toString()
org/apache/parquet/parser/TestParquetParser/testEachPrimitiveType()#java/lang/StringBuilder/append(java.lang.Object)
org/apache/parquet/parser/TestParquetParser/testEachPrimitiveType()#org/apache/parquet/schema/Types/BaseGroupBuilder/required(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/parser/TestParquetParser/testDecimalBinaryAnnotation()#org/apache/parquet/schema/Type/toString()
org/apache/parquet/parser/TestParquetParser/testDecimalBinaryAnnotation()#org/apache/parquet/schema/Types/buildMessage()
org/apache/parquet/parser/TestParquetParser/testDecimalBinaryAnnotation()#org/apache/parquet/schema/Types/Builder/named(java.lang.String)
org/apache/parquet/parser/TestParquetParser/testDecimalBinaryAnnotation()#org/apache/parquet/schema/Types/BasePrimitiveBuilder/scale(int)
org/apache/parquet/parser/TestParquetParser/testDecimalBinaryAnnotation()#org/apache/parquet/schema/Types/Builder/as(org.apache.parquet.schema.OriginalType)
org/apache/parquet/parser/TestParquetParser/testDecimalBinaryAnnotation()#org/apache/parquet/schema/MessageTypeParser/parseMessageType(java.lang.String)
org/apache/parquet/parser/TestParquetParser/testDecimalBinaryAnnotation()#org/apache/parquet/schema/Types/BasePrimitiveBuilder/precision(int)
org/apache/parquet/parser/TestParquetParser/testDecimalBinaryAnnotation()#org/apache/parquet/schema/Types/BaseGroupBuilder/required(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/parser/TestParquetParser/testPaperExample()#org/apache/parquet/schema/Type/toString()
org/apache/parquet/parser/TestParquetParser/testPaperExample()#org/apache/parquet/schema/PrimitiveType/PrimitiveType(org.apache.parquet.schema.Type.Repetition,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,java.lang.String)
org/apache/parquet/parser/TestParquetParser/testPaperExample()#org/apache/parquet/schema/MessageType/MessageType(java.lang.String,org.apache.parquet.schema.Type[])
org/apache/parquet/parser/TestParquetParser/testPaperExample()#org/apache/parquet/schema/MessageTypeParser/parseMessageType(java.lang.String)
org/apache/parquet/parser/TestParquetParser/testPaperExample()#org/apache/parquet/schema/GroupType/GroupType(org.apache.parquet.schema.Type.Repetition,java.lang.String,org.apache.parquet.schema.Type[])
org/apache/parquet/parser/TestParquetParser/testEmbeddedAnnotations()#org/apache/parquet/schema/Type/toString()
org/apache/parquet/parser/TestParquetParser/testEmbeddedAnnotations()#org/apache/parquet/schema/Types/buildMessage()
org/apache/parquet/parser/TestParquetParser/testEmbeddedAnnotations()#org/apache/parquet/schema/Types/Builder/named(java.lang.String)
org/apache/parquet/parser/TestParquetParser/testEmbeddedAnnotations()#org/apache/parquet/schema/Types/Builder/as(org.apache.parquet.schema.OriginalType)
org/apache/parquet/parser/TestParquetParser/testEmbeddedAnnotations()#org/apache/parquet/schema/MessageTypeParser/parseMessageType(java.lang.String)
org/apache/parquet/parser/TestParquetParser/testEmbeddedAnnotations()#org/apache/parquet/schema/Types/BaseGroupBuilder/required(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/filter2/compat/RowGroupFilter/visit(org.apache.parquet.filter2.compat.FilterCompat.FilterPredicateCompat)#org/apache/parquet/hadoop/ParquetFileReader/getDictionaryReader(org.apache.parquet.hadoop.metadata.BlockMetaData)
org/apache/parquet/filter2/compat/RowGroupFilter/visit(org.apache.parquet.filter2.compat.FilterCompat.FilterPredicateCompat)#org/apache/parquet/filter2/compat/FilterCompat/FilterPredicateCompat/getFilterPredicate()
org/apache/parquet/filter2/compat/RowGroupFilter/visit(org.apache.parquet.filter2.compat.FilterCompat.FilterPredicateCompat)#org/apache/parquet/filter2/statisticslevel/StatisticsFilter/canDrop(org.apache.parquet.filter2.predicate.FilterPredicate,java.util.List)
org/apache/parquet/filter2/compat/RowGroupFilter/visit(org.apache.parquet.filter2.compat.FilterCompat.FilterPredicateCompat)#org/apache/parquet/filter2/dictionarylevel/DictionaryFilter/canDrop(org.apache.parquet.filter2.predicate.FilterPredicate,java.util.List,org.apache.parquet.column.page.DictionaryPageReadStore)
org/apache/parquet/filter2/compat/RowGroupFilter/visit(org.apache.parquet.filter2.compat.FilterCompat.FilterPredicateCompat)#java/util/List/add(E)
org/apache/parquet/filter2/compat/RowGroupFilter/visit(org.apache.parquet.filter2.compat.FilterCompat.FilterPredicateCompat)#java/util/List/contains(java.lang.Object)
org/apache/parquet/filter2/compat/RowGroupFilter/visit(org.apache.parquet.filter2.compat.FilterCompat.FilterPredicateCompat)#org/apache/parquet/hadoop/metadata/BlockMetaData/getColumns()
org/apache/parquet/filter2/compat/RowGroupFilter/visit(org.apache.parquet.filter2.compat.FilterCompat.FilterPredicateCompat)#org/apache/parquet/filter2/predicate/SchemaCompatibilityValidator/validate(org.apache.parquet.filter2.predicate.FilterPredicate,org.apache.parquet.schema.MessageType)
org/apache/parquet/filter2/compat/RowGroupFilter/visit(org.apache.parquet.filter2.compat.FilterCompat.FilterPredicateCompat)#java/util/ArrayList/ArrayList()
org/apache/parquet/filter2/compat/RowGroupFilter/filterRowGroups(org.apache.parquet.filter2.compat.FilterCompat.Filter,java.util.List,org.apache.parquet.schema.MessageType)#org/apache/parquet/filter2/compat/FilterCompat/Filter/accept(org.apache.parquet.filter2.compat.FilterCompat.Visitor)
org/apache/parquet/filter2/compat/RowGroupFilter/filterRowGroups(org.apache.parquet.filter2.compat.FilterCompat.Filter,java.util.List,org.apache.parquet.schema.MessageType)#org/apache/parquet/filter2/compat/RowGroupFilter/RowGroupFilter(java.util.List,org.apache.parquet.schema.MessageType)
org/apache/parquet/filter2/compat/RowGroupFilter/filterRowGroups(org.apache.parquet.filter2.compat.FilterCompat.Filter,java.util.List,org.apache.parquet.schema.MessageType)#org/apache/parquet/Preconditions/checkNotNull(T,java.lang.String)
org/apache/parquet/filter2/compat/RowGroupFilter/filterRowGroups(java.util.List,org.apache.parquet.filter2.compat.FilterCompat.Filter,java.util.List,org.apache.parquet.hadoop.ParquetFileReader)#org/apache/parquet/filter2/compat/FilterCompat/Filter/accept(org.apache.parquet.filter2.compat.FilterCompat.Visitor)
org/apache/parquet/filter2/compat/RowGroupFilter/filterRowGroups(java.util.List,org.apache.parquet.filter2.compat.FilterCompat.Filter,java.util.List,org.apache.parquet.hadoop.ParquetFileReader)#org/apache/parquet/filter2/compat/RowGroupFilter/RowGroupFilter(java.util.List,java.util.List,org.apache.parquet.hadoop.ParquetFileReader)
org/apache/parquet/filter2/compat/RowGroupFilter/filterRowGroups(java.util.List,org.apache.parquet.filter2.compat.FilterCompat.Filter,java.util.List,org.apache.parquet.hadoop.ParquetFileReader)#org/apache/parquet/Preconditions/checkNotNull(T,java.lang.String)
org/apache/parquet/hadoop/util/ConfigurationUtil/getClassFromConfig(org.apache.parquet.hadoop.Configuration,java.lang.String,java.lang.Class)#java/lang/Class/isAssignableFrom(java.lang.Class)
org/apache/parquet/hadoop/util/ConfigurationUtil/getClassFromConfig(org.apache.parquet.hadoop.Configuration,java.lang.String,java.lang.Class)#java/lang/Class/getCanonicalName()
org/apache/parquet/hadoop/util/ConfigurationUtil/getClassFromConfig(org.apache.parquet.hadoop.Configuration,java.lang.String,java.lang.Class)#org/apache/parquet/hadoop/BadConfigurationException/BadConfigurationException(java.lang.String,java.lang.Throwable)
org/apache/parquet/hadoop/util/ConfigurationUtil/getClassFromConfig(org.apache.parquet.hadoop.Configuration,java.lang.String,java.lang.Class)#org/apache/parquet/hadoop/BadConfigurationException/BadConfigurationException(java.lang.String)
org/apache/parquet/column/values/bitpacking/BitPackingPerfTest/readNTimes(byte[],int[],org.apache.parquet.column.values.ValuesReader)#java/io/PrintStream/print(java.lang.String)
org/apache/parquet/column/values/bitpacking/BitPackingPerfTest/readNTimes(byte[],int[],org.apache.parquet.column.values.ValuesReader)#java/io/PrintStream/println(java.lang.String)
org/apache/parquet/column/values/bitpacking/BitPackingPerfTest/readNTimes(byte[],int[],org.apache.parquet.column.values.ValuesReader)#java/lang/System/nanoTime()
org/apache/parquet/column/values/bitpacking/BitPackingPerfTest/readNTimes(byte[],int[],org.apache.parquet.column.values.ValuesReader)#org/apache/parquet/column/values/ValuesReader/initFromPage(int,java.nio.ByteBuffer,int)
org/apache/parquet/column/values/bitpacking/BitPackingPerfTest/readNTimes(byte[],int[],org.apache.parquet.column.values.ValuesReader)#java/io/PrintStream/println()
org/apache/parquet/column/values/bitpacking/BitPackingPerfTest/readNTimes(byte[],int[],org.apache.parquet.column.values.ValuesReader)#org/apache/parquet/column/values/bitpacking/BitPackingPerfTest/verify(int[])
org/apache/parquet/column/values/bitpacking/BitPackingPerfTest/readNTimes(byte[],int[],org.apache.parquet.column.values.ValuesReader)#java/nio/ByteBuffer/wrap(byte[])
org/apache/parquet/column/values/bitpacking/BitPackingPerfTest/readNTimes(byte[],int[],org.apache.parquet.column.values.ValuesReader)#java/lang/Object/getClass()
org/apache/parquet/column/values/bitpacking/BitPackingPerfTest/readNTimes(byte[],int[],org.apache.parquet.column.values.ValuesReader)#org/apache/parquet/column/values/ValuesReader/readInteger()
org/apache/parquet/column/values/bitpacking/BitPackingPerfTest/readNTimes(byte[],int[],org.apache.parquet.column.values.ValuesReader)#java/lang/Class/getSimpleName()
org/apache/parquet/column/values/bitpacking/BitPackingPerfTest/readNTimes(byte[],int[],org.apache.parquet.column.values.ValuesReader)#java/lang/System/gc()
org/apache/parquet/column/values/bitpacking/BitPackingPerfTest/generated(byte[],int[])#org/apache/parquet/column/values/bitpacking/BitPackingPerfTest/readNTimes(byte[],int[],org.apache.parquet.column.values.ValuesReader)
org/apache/parquet/column/values/bitpacking/BitPackingPerfTest/generated(byte[],int[])#org/apache/parquet/column/values/bitpacking/ByteBitPackingValuesReader/ByteBitPackingValuesReader(int,org.apache.parquet.column.values.bitpacking.Packer)
org/apache/parquet/column/values/bitpacking/BitPackingPerfTest/verify(int[])#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/apache/parquet/column/values/bitpacking/BitPackingPerfTest/main(java.lang.String[])#org/apache/parquet/column/values/bitpacking/BitPacking/getBitPackingWriter(int,java.io.OutputStream)
org/apache/parquet/column/values/bitpacking/BitPackingPerfTest/main(java.lang.String[])#java/io/PrintStream/println(int)
org/apache/parquet/column/values/bitpacking/BitPackingPerfTest/main(java.lang.String[])#java/io/PrintStream/println()
org/apache/parquet/column/values/bitpacking/BitPackingPerfTest/main(java.lang.String[])#org/apache/parquet/column/values/bitpacking/BitPackingPerfTest/generated(byte[],int[])
org/apache/parquet/column/values/bitpacking/BitPackingPerfTest/main(java.lang.String[])#org/apache/parquet/column/values/bitpacking/BitPacking/BitPackingWriter/write(int)
org/apache/parquet/column/values/bitpacking/BitPackingPerfTest/main(java.lang.String[])#java/io/ByteArrayOutputStream/toByteArray()
org/apache/parquet/column/values/bitpacking/BitPackingPerfTest/main(java.lang.String[])#java/lang/System/currentTimeMillis()
org/apache/parquet/column/values/bitpacking/BitPackingPerfTest/main(java.lang.String[])#java/io/ByteArrayOutputStream/ByteArrayOutputStream()
org/apache/parquet/column/values/bitpacking/BitPackingPerfTest/main(java.lang.String[])#org/apache/parquet/column/values/bitpacking/BitPackingPerfTest/manual(byte[],int[])
org/apache/parquet/column/values/bitpacking/BitPackingPerfTest/main(java.lang.String[])#org/apache/parquet/column/values/bitpacking/BitPacking/BitPackingWriter/finish()
org/apache/parquet/column/values/bitpacking/BitPackingPerfTest/main(java.lang.String[])#java/io/PrintStream/println(java.lang.String)
org/apache/parquet/column/values/bitpacking/BitPackingPerfTest/manual(byte[],int[])#org/apache/parquet/column/values/bitpacking/BitPackingValuesReader/BitPackingValuesReader(int)
org/apache/parquet/column/values/bitpacking/BitPackingPerfTest/manual(byte[],int[])#org/apache/parquet/column/values/bitpacking/BitPackingPerfTest/readNTimes(byte[],int[],org.apache.parquet.column.values.ValuesReader)
org/apache/parquet/column/page/mem/MemPageWriter/writeDictionaryPage(org.apache.parquet.column.page.DictionaryPage)#org/apache/parquet/io/ParquetEncodingException/ParquetEncodingException(java.lang.String)
org/apache/parquet/column/page/mem/MemPageWriter/writeDictionaryPage(org.apache.parquet.column.page.DictionaryPage)#org/apache/parquet/bytes/BytesInput/size()
org/apache/parquet/column/page/mem/MemPageWriter/writeDictionaryPage(org.apache.parquet.column.page.DictionaryPage)#org/apache/parquet/column/page/DictionaryPage/getDictionarySize()
org/apache/parquet/column/page/mem/MemPageWriter/writeDictionaryPage(org.apache.parquet.column.page.DictionaryPage)#org/apache/parquet/column/page/DictionaryPage/copy()
org/apache/parquet/column/page/mem/MemPageWriter/writeDictionaryPage(org.apache.parquet.column.page.DictionaryPage)#org/apache/parquet/column/page/DictionaryPage/getBytes()
org/apache/parquet/column/page/mem/MemPageWriter/memUsageString(java.lang.String)#java/lang/String/format(java.lang.String,java.lang.Object[])
org/apache/parquet/column/page/mem/MemPageWriter/writePage(org.apache.parquet.bytes.BytesInput,int,org.apache.parquet.column.statistics.Statistics,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding)#org/apache/parquet/column/page/DataPageV1/DataPageV1(org.apache.parquet.bytes.BytesInput,int,int,org.apache.parquet.column.statistics.Statistics,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding)
org/apache/parquet/column/page/mem/MemPageWriter/writePage(org.apache.parquet.bytes.BytesInput,int,org.apache.parquet.column.statistics.Statistics,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding)#org/apache/parquet/bytes/BytesInput/copy(org.apache.parquet.bytes.BytesInput)
org/apache/parquet/column/page/mem/MemPageWriter/writePage(org.apache.parquet.bytes.BytesInput,int,org.apache.parquet.column.statistics.Statistics,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding)#org/apache/parquet/io/ParquetEncodingException/ParquetEncodingException(java.lang.String)
org/apache/parquet/column/page/mem/MemPageWriter/writePage(org.apache.parquet.bytes.BytesInput,int,org.apache.parquet.column.statistics.Statistics,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding)#org/apache/parquet/bytes/BytesInput/size()
org/apache/parquet/column/page/mem/MemPageWriter/writePage(org.apache.parquet.bytes.BytesInput,int,org.apache.parquet.column.statistics.Statistics,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding)#java/util/List/add(E)
org/apache/parquet/column/page/mem/MemPageWriter/writePageV2(int,int,int,org.apache.parquet.bytes.BytesInput,org.apache.parquet.bytes.BytesInput,org.apache.parquet.column.Encoding,org.apache.parquet.bytes.BytesInput,org.apache.parquet.column.statistics.Statistics)#org/apache/parquet/bytes/BytesInput/copy(org.apache.parquet.bytes.BytesInput)
org/apache/parquet/column/page/mem/MemPageWriter/writePageV2(int,int,int,org.apache.parquet.bytes.BytesInput,org.apache.parquet.bytes.BytesInput,org.apache.parquet.column.Encoding,org.apache.parquet.bytes.BytesInput,org.apache.parquet.column.statistics.Statistics)#org/apache/parquet/column/page/DataPageV2/uncompressed(int,int,int,org.apache.parquet.bytes.BytesInput,org.apache.parquet.bytes.BytesInput,org.apache.parquet.column.Encoding,org.apache.parquet.bytes.BytesInput,org.apache.parquet.column.statistics.Statistics)
org/apache/parquet/column/page/mem/MemPageWriter/writePageV2(int,int,int,org.apache.parquet.bytes.BytesInput,org.apache.parquet.bytes.BytesInput,org.apache.parquet.column.Encoding,org.apache.parquet.bytes.BytesInput,org.apache.parquet.column.statistics.Statistics)#org/apache/parquet/io/ParquetEncodingException/ParquetEncodingException(java.lang.String)
org/apache/parquet/column/page/mem/MemPageWriter/writePageV2(int,int,int,org.apache.parquet.bytes.BytesInput,org.apache.parquet.bytes.BytesInput,org.apache.parquet.column.Encoding,org.apache.parquet.bytes.BytesInput,org.apache.parquet.column.statistics.Statistics)#org/apache/parquet/bytes/BytesInput/size()
org/apache/parquet/column/page/mem/MemPageWriter/writePageV2(int,int,int,org.apache.parquet.bytes.BytesInput,org.apache.parquet.bytes.BytesInput,org.apache.parquet.column.Encoding,org.apache.parquet.bytes.BytesInput,org.apache.parquet.column.statistics.Statistics)#java/util/List/add(E)
org/apache/parquet/column/values/plain/PlainValuesReader/initFromPage(int,java.nio.ByteBuffer,int)#org/apache/parquet/bytes/LittleEndianDataInputStream/LittleEndianDataInputStream(java.io.InputStream)
org/apache/parquet/column/values/plain/PlainValuesReader/initFromPage(int,java.nio.ByteBuffer,int)#java/nio/Buffer/limit()
org/apache/parquet/column/values/plain/PlainValuesReader/initFromPage(int,java.nio.ByteBuffer,int)#org/apache/parquet/column/values/plain/PlainValuesReader/toInputStream(java.nio.ByteBuffer,int)
org/apache/parquet/column/values/plain/PlainValuesReader/toInputStream(java.nio.ByteBuffer,int)#java/nio/ByteBuffer/duplicate()
org/apache/parquet/column/values/plain/PlainValuesReader/toInputStream(java.nio.ByteBuffer,int)#java/nio/Buffer/limit()
org/apache/parquet/column/values/plain/PlainValuesReader/toInputStream(java.nio.ByteBuffer,int)#org/apache/parquet/bytes/ByteBufferInputStream/ByteBufferInputStream(java.nio.ByteBuffer,int,int)
org/apache/hadoop/hive/ql/io/parquet/writable/BigDecimalWritable/hashCode()#org/apache/hadoop/hive/ql/io/parquet/writable/BigDecimalWritable/getBigDecimal()
org/apache/hadoop/hive/ql/io/parquet/writable/BigDecimalWritable/hashCode()#java/math/BigDecimal/hashCode()
org/apache/hadoop/hive/ql/io/parquet/writable/BigDecimalWritable/set(java.math.BigDecimal)#java/math/BigDecimal/scale()
org/apache/hadoop/hive/ql/io/parquet/writable/BigDecimalWritable/set(java.math.BigDecimal)#org/apache/hadoop/hive/ql/io/parquet/writable/BigDecimalWritable/set(byte[],int)
org/apache/hadoop/hive/ql/io/parquet/writable/BigDecimalWritable/set(java.math.BigDecimal)#java/math/BigDecimal/compareTo(java.math.BigDecimal)
org/apache/hadoop/hive/ql/io/parquet/writable/BigDecimalWritable/set(java.math.BigDecimal)#java/math/BigDecimal/unscaledValue()
org/apache/hadoop/hive/ql/io/parquet/writable/BigDecimalWritable/set(java.math.BigDecimal)#java/math/BigDecimal/stripTrailingZeros()
org/apache/hadoop/hive/ql/io/parquet/writable/BigDecimalWritable/set(java.math.BigDecimal)#java/math/BigInteger/toByteArray()
org/apache/hadoop/hive/ql/io/parquet/writable/BigDecimalWritable/write(java.io.DataOutput)#java/io/DataOutput/write(byte[])
org/apache/hadoop/hive/ql/io/parquet/writable/BigDecimalWritable/compareTo(org.apache.hadoop.hive.ql.io.parquet.writable.BigDecimalWritable)#java/math/BigDecimal/compareTo(java.math.BigDecimal)
org/apache/hadoop/hive/ql/io/parquet/writable/BigDecimalWritable/compareTo(org.apache.hadoop.hive.ql.io.parquet.writable.BigDecimalWritable)#org/apache/hadoop/hive/ql/io/parquet/writable/BigDecimalWritable/getBigDecimal()
org/apache/hadoop/hive/ql/io/parquet/writable/BigDecimalWritable/setFromBytes(byte[],int,int)#java/lang/System/arraycopy(java.lang.Object,int,java.lang.Object,int,int)
org/apache/hadoop/hive/ql/io/parquet/writable/BigDecimalWritable/getBigDecimal()#java/math/BigInteger/BigInteger(byte[])
org/apache/hadoop/hive/ql/io/parquet/writable/BigDecimalWritable/getBigDecimal()#java/math/BigDecimal/BigDecimal(java.math.BigInteger,int)
org/apache/hadoop/hive/ql/io/parquet/writable/BigDecimalWritable/readFields(java.io.DataInput)#java/io/DataInput/readFully(byte[])
org/apache/hadoop/hive/ql/io/parquet/writable/BigDecimalWritable/set(org.apache.hadoop.hive.ql.io.parquet.writable.BigDecimalWritable)#org/apache/hadoop/hive/ql/io/parquet/writable/BigDecimalWritable/set(java.math.BigDecimal)
org/apache/hadoop/hive/ql/io/parquet/writable/BigDecimalWritable/set(org.apache.hadoop.hive.ql.io.parquet.writable.BigDecimalWritable)#org/apache/hadoop/hive/ql/io/parquet/writable/BigDecimalWritable/getBigDecimal()
org/apache/hadoop/hive/ql/io/parquet/writable/BigDecimalWritable/toString()#java/math/BigDecimal/toString()
org/apache/hadoop/hive/ql/io/parquet/writable/BigDecimalWritable/toString()#org/apache/hadoop/hive/ql/io/parquet/writable/BigDecimalWritable/getBigDecimal()
org/apache/hadoop/hive/ql/io/parquet/writable/BigDecimalWritable/equals(java.lang.Object)#java/math/BigDecimal/compareTo(java.math.BigDecimal)
org/apache/hadoop/hive/ql/io/parquet/writable/BigDecimalWritable/equals(java.lang.Object)#org/apache/hadoop/hive/ql/io/parquet/writable/BigDecimalWritable/getBigDecimal()
org/apache/parquet/bytes/DirectByteBufferAllocator/allocate(int)#java/nio/ByteBuffer/allocateDirect(int)
org/apache/parquet/bytes/DirectByteBufferAllocator/getInstance()#org/apache/parquet/bytes/DirectByteBufferAllocator/DirectByteBufferAllocator()
org/apache/parquet/filter/ColumnRecordFilter/column(java.lang.String,org.apache.parquet.filter.ColumnPredicates.Predicate)#org/apache/parquet/filter/ColumnRecordFilter/column(java/lang/String,org/apache/parquet/filter/ColumnPredicates/Predicate)/$anonymous1/()
org/apache/parquet/filter/ColumnRecordFilter/column(java.lang.String,org.apache.parquet.filter.ColumnPredicates.Predicate)#org/apache/parquet/Preconditions/checkNotNull(T,java.lang.String)
org/apache/parquet/filter/ColumnRecordFilter/isMatch()#org/apache/parquet/filter/ColumnPredicates/Predicate/apply(org.apache.parquet.column.ColumnReader)
org/apache/parquet/pig/PerfTest2/clean(java.io.File)#org/apache/parquet/pig/PerfTest2/clean(java.io.File)
org/apache/parquet/pig/PerfTest2/clean(java.io.File)#java/io/File/isDirectory()
org/apache/parquet/pig/PerfTest2/clean(java.io.File)#java/io/File/listFiles()
org/apache/parquet/pig/PerfTest2/clean(java.io.File)#java/io/File/delete()
org/apache/parquet/pig/PerfTest2/write(java.lang.String)#org/apache/parquet/hadoop/util/ContextUtil/newJobContext(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.util.JobID)
org/apache/parquet/pig/PerfTest2/write(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/apache/parquet/pig/PerfTest2/write(java.lang.String)#org/apache/parquet/pig/ParquetStorer/ParquetStorer()
org/apache/parquet/pig/PerfTest2/write(java.lang.String)#java/io/File/getAbsoluteFile()
org/apache/parquet/pig/PerfTest2/write(java.lang.String)#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/apache/parquet/pig/PerfTest2/write(java.lang.String)#org/apache/parquet/hadoop/util/ContextUtil/newTaskAttemptContext(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.util.TaskAttemptID)
org/apache/parquet/pig/PerfTest2/write(java.lang.String)#java/io/File/File(java.lang.String)
org/apache/parquet/pig/PerfTest2/write(java.lang.String)#org/apache/parquet/hadoop/util/ContextUtil/getConfiguration(org.apache.parquet.hadoop.util.JobContext)
org/apache/parquet/pig/PerfTest2/write(java.lang.String)#java/io/File/toURI()
org/apache/parquet/pig/PerfTest2/write(java.lang.String)#java/lang/Object/Object()
org/apache/parquet/pig/PerfTest2/write(java.lang.String)#java/lang/StringBuilder/toString()
org/apache/parquet/pig/PerfTest2/main(java.lang.String[])#org/apache/parquet/pig/PerfTest2/clean(java.io.File)
org/apache/parquet/pig/PerfTest2/main(java.lang.String[])#java/lang/StringBuilder/append(java.lang.String)
org/apache/parquet/pig/PerfTest2/main(java.lang.String[])#org/apache/parquet/pig/PerfTest2/write(java.lang.String)
org/apache/parquet/pig/PerfTest2/main(java.lang.String[])#java/io/File/exists()
org/apache/parquet/pig/PerfTest2/main(java.lang.String[])#java/io/File/File(java.lang.String)
org/apache/parquet/pig/PerfTest2/main(java.lang.String[])#java/lang/StringBuilder/StringBuilder()
org/apache/parquet/pig/PerfTest2/main(java.lang.String[])#java/io/PrintStream/println(java.lang.Object)
org/apache/parquet/pig/PerfTest2/main(java.lang.String[])#org/apache/parquet/pig/PerfTest2/load(java.lang.String,int,java.lang.StringBuilder)
org/apache/parquet/pig/PerfTest2/load(java.lang.String,int,java.lang.StringBuilder)#org/apache/parquet/hadoop/util/ContextUtil/newJobContext(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.util.JobID)
org/apache/parquet/pig/PerfTest2/load(java.lang.String,int,java.lang.StringBuilder)#java/lang/StringBuilder/append(java.lang.String)
org/apache/parquet/pig/PerfTest2/load(java.lang.String,int,java.lang.StringBuilder)#org/apache/parquet/pig/ParquetLoader/ParquetLoader(java.lang.String)
org/apache/parquet/pig/PerfTest2/load(java.lang.String,int,java.lang.StringBuilder)#java/io/File/getAbsoluteFile()
org/apache/parquet/pig/PerfTest2/load(java.lang.String,int,java.lang.StringBuilder)#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/apache/parquet/pig/PerfTest2/load(java.lang.String,int,java.lang.StringBuilder)#org/apache/parquet/hadoop/util/ContextUtil/newTaskAttemptContext(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.util.TaskAttemptID)
org/apache/parquet/pig/PerfTest2/load(java.lang.String,int,java.lang.StringBuilder)#java/io/File/File(java.lang.String)
org/apache/parquet/pig/PerfTest2/load(java.lang.String,int,java.lang.StringBuilder)#org/apache/parquet/hadoop/util/ContextUtil/getConfiguration(org.apache.parquet.hadoop.util.JobContext)
org/apache/parquet/pig/PerfTest2/load(java.lang.String,int,java.lang.StringBuilder)#java/io/File/toURI()
org/apache/parquet/pig/PerfTest2/load(java.lang.String,int,java.lang.StringBuilder)#java/io/PrintStream/println(char[])
org/apache/parquet/pig/PerfTest2/load(java.lang.String,int,java.lang.StringBuilder)#java/lang/System/currentTimeMillis()
org/apache/parquet/pig/PerfTest2/load(java.lang.String,int,java.lang.StringBuilder)#java/lang/Object/Object()
org/apache/parquet/pig/PerfTest2/load(java.lang.String,int,java.lang.StringBuilder)#java/lang/StringBuilder/toString()
org/apache/parquet/version/VersionGenerator/add(java.lang.String)#java/io/Writer/write(java.lang.String)
org/apache/parquet/version/VersionGenerator/main(java.lang.String[])#java/io/IOException/IOException(java.lang.String)
org/apache/parquet/version/VersionGenerator/main(java.lang.String[])#java/io/File/getAbsoluteFile()
org/apache/parquet/version/VersionGenerator/main(java.lang.String[])#java/io/File/exists()
org/apache/parquet/version/VersionGenerator/main(java.lang.String[])#org/apache/parquet/version/VersionGenerator/VersionGenerator(java.io.File)
org/apache/parquet/version/VersionGenerator/main(java.lang.String[])#java/io/File/File(java.lang.String)
org/apache/parquet/version/VersionGenerator/main(java.lang.String[])#java/io/File/mkdirs()
org/apache/parquet/version/VersionGenerator/main(java.lang.String[])#org/apache/parquet/version/VersionGenerator/run()
org/apache/parquet/version/VersionGenerator/main(java.lang.String[])#java/io/File/getParentFile()
org/apache/parquet/version/VersionGenerator/run()#java/lang/Class/getResourceAsStream(java.lang.String)
org/apache/parquet/version/VersionGenerator/run()#java/util/Properties/getProperty(java.lang.String)
org/apache/parquet/version/VersionGenerator/run()#java/io/IOException/IOException(java.lang.String)
org/apache/parquet/version/VersionGenerator/run()#org/apache/parquet/version/VersionGenerator/add(java.lang.String)
org/apache/parquet/version/VersionGenerator/run()#java/util/Properties/Properties()
org/apache/parquet/version/VersionGenerator/run()#java/io/OutputStreamWriter/close()
org/apache/parquet/version/VersionGenerator/run()#java/util/Properties/load(java.io.InputStream)
org/apache/parquet/glob/WildcardPath/hashCode()#java/lang/String/hashCode()
org/apache/parquet/glob/WildcardPath/buildRegex(java.lang.String,char)#java/lang/String/split(java.lang.String,int)
org/apache/parquet/glob/WildcardPath/buildRegex(java.lang.String,char)#java/lang/StringBuilder/append(java.lang.String)
org/apache/parquet/glob/WildcardPath/buildRegex(java.lang.String,char)#java/lang/Character/toString(char)
org/apache/parquet/glob/WildcardPath/buildRegex(java.lang.String,char)#java/util/regex/Pattern/quote(java.lang.String)
org/apache/parquet/glob/WildcardPath/buildRegex(java.lang.String,char)#java/lang/String/format(java.lang.String,java.lang.Object[])
org/apache/parquet/glob/WildcardPath/buildRegex(java.lang.String,char)#java/lang/String/isEmpty()
org/apache/parquet/glob/WildcardPath/buildRegex(java.lang.String,char)#java/lang/StringBuilder/StringBuilder()
org/apache/parquet/glob/WildcardPath/buildRegex(java.lang.String,char)#java/lang/StringBuilder/toString()
org/apache/parquet/glob/WildcardPath/matches(java.lang.String)#java/util/regex/Matcher/matches()
org/apache/parquet/glob/WildcardPath/matches(java.lang.String)#java/util/regex/Pattern/matcher(java.lang.CharSequence)
org/apache/parquet/glob/WildcardPath/toString()#java/lang/String/format(java.lang.String,java.lang.Object[])
org/apache/parquet/glob/WildcardPath/equals(java.lang.Object)#java/lang/String/equals(java.lang.Object)
org/apache/parquet/glob/WildcardPath/equals(java.lang.Object)#java/lang/Object/getClass()
org/apache/parquet/scrooge/ParquetScroogeSchemeTest/doWrite()#org/apache/parquet/scrooge/ParquetScroogeScheme/ParquetScroogeScheme(java.lang.Class)
org/apache/parquet/scrooge/ParquetScroogeSchemeTest/doWrite()#org/apache/parquet/scrooge/ParquetScroogeSchemeTest/PackThriftFunction/PackThriftFunction()
org/apache/parquet/scrooge/ParquetScroogeSchemeTest/doWrite()#java/lang/Object/Object()
org/apache/parquet/scrooge/ParquetScroogeSchemeTest/doRead()#org/apache/parquet/scrooge/ParquetScroogeScheme/ParquetScroogeScheme(java.lang.Class)
org/apache/parquet/scrooge/ParquetScroogeSchemeTest/doRead()#org/apache/parquet/scrooge/ParquetScroogeSchemeTest/UnpackThriftFunction/UnpackThriftFunction()
org/apache/parquet/scrooge/ParquetScroogeSchemeTest/doRead()#java/io/File/File(java.lang.String)
org/apache/parquet/scrooge/ParquetScroogeSchemeTest/doRead()#java/lang/Object/Object()
org/apache/parquet/scrooge/ParquetScroogeSchemeTest/verifyScroogeRead(java.util.List,java.lang.Class,java.lang.String,java.lang.String)#org/apache/parquet/scrooge/ParquetScroogeSchemeTest/ObjectToStringFunction/ObjectToStringFunction()
org/apache/parquet/scrooge/ParquetScroogeSchemeTest/verifyScroogeRead(java.util.List,java.lang.Class,java.lang.String,java.lang.String)#org/apache/parquet/cascading/ParquetValueScheme/Config/withProjectionString(java.lang.String)
org/apache/parquet/scrooge/ParquetScroogeSchemeTest/verifyScroogeRead(java.util.List,java.lang.Class,java.lang.String,java.lang.String)#org/apache/parquet/scrooge/ParquetScroogeScheme/ParquetScroogeScheme(org.apache.parquet.cascading.ParquetValueScheme.Config)
org/apache/parquet/scrooge/ParquetScroogeSchemeTest/verifyScroogeRead(java.util.List,java.lang.Class,java.lang.String,java.lang.String)#java/io/File/File(java.lang.String)
org/apache/parquet/scrooge/ParquetScroogeSchemeTest/verifyScroogeRead(java.util.List,java.lang.Class,java.lang.String,java.lang.String)#org/apache/parquet/cascading/ParquetValueScheme/Config/withRecordClass(java.lang.Class)
org/apache/parquet/scrooge/ParquetScroogeSchemeTest/verifyScroogeRead(java.util.List,java.lang.Class,java.lang.String,java.lang.String)#org/apache/parquet/scrooge/ParquetScroogeSchemeTest/deleteIfExist(java.lang.String)
org/apache/parquet/scrooge/ParquetScroogeSchemeTest/verifyScroogeRead(java.util.List,java.lang.Class,java.lang.String,java.lang.String)#java/lang/Object/Object()
org/apache/parquet/scrooge/ParquetScroogeSchemeTest/verifyScroogeRead(java.util.List,java.lang.Class,java.lang.String,java.lang.String)#org/apache/parquet/scrooge/ParquetScroogeSchemeTest/writeParquetFile(java.util.List,org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path)
org/apache/parquet/scrooge/ParquetScroogeSchemeTest/verifyScroogeRead(java.util.List,java.lang.Class,java.lang.String,java.lang.String)#org/apache/parquet/cascading/ParquetValueScheme/Config/Config()
org/apache/parquet/scrooge/ParquetScroogeSchemeTest/testNestedReadingInScrooge()#org/apache/parquet/scrooge/ParquetScroogeSchemeTest/verifyScroogeRead(java.util.List,java.lang.Class,java.lang.String,java.lang.String)
org/apache/parquet/scrooge/ParquetScroogeSchemeTest/testNestedReadingInScrooge()#java/lang/Object/Object()
org/apache/parquet/scrooge/ParquetScroogeSchemeTest/testNestedReadingInScrooge()#java/util/HashMap/HashMap()
org/apache/parquet/scrooge/ParquetScroogeSchemeTest/testNestedReadingInScrooge()#org/apache/parquet/scrooge/ParquetScroogeSchemeTest/thriftRecords(org.apache.parquet.scrooge.TBase[])
org/apache/parquet/scrooge/ParquetScroogeSchemeTest/testWritePrimitveThriftReadScrooge()#org/apache/parquet/scrooge/ParquetScroogeSchemeTest/thriftRecords(org.apache.parquet.scrooge.TBase[])
org/apache/parquet/scrooge/ParquetScroogeSchemeTest/testWritePrimitveThriftReadScrooge()#org/apache/parquet/scrooge/ParquetScroogeSchemeTest/verifyScroogeRead(java.util.List,java.lang.Class,java.lang.String,java.lang.String)
org/apache/parquet/scrooge/ParquetScroogeSchemeTest/testWriteThenRead()#org/apache/parquet/scrooge/ParquetScroogeSchemeTest/doWrite()
org/apache/parquet/scrooge/ParquetScroogeSchemeTest/testWriteThenRead()#org/apache/parquet/scrooge/ParquetScroogeSchemeTest/doRead()
org/apache/parquet/scrooge/ParquetScroogeSchemeTest/thriftRecords(org.apache.parquet.scrooge.TBase[])#java/util/ArrayList/ArrayList()
org/apache/parquet/scrooge/ParquetScroogeSchemeTest/writeParquetFile(java.util.List,org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path)#org/apache/parquet/hadoop/util/ContextUtil/newTaskAttemptContext(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.util.TaskAttemptID)
org/apache/parquet/scrooge/ParquetScroogeSchemeTest/writeParquetFile(java.util.List,org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path)#org/apache/parquet/hadoop/thrift/ThriftToParquetFileWriter/close()
org/apache/parquet/scrooge/ParquetScroogeSchemeTest/writeParquetFile(java.util.List,org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path)#java/io/ByteArrayOutputStream/toByteArray()
org/apache/parquet/scrooge/ParquetScroogeSchemeTest/writeParquetFile(java.util.List,org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path)#java/io/ByteArrayOutputStream/ByteArrayOutputStream()
org/apache/parquet/scrooge/ParquetScroogeSchemeTest/writeParquetFile(java.util.List,org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path)#org/apache/parquet/hadoop/thrift/ThriftToParquetFileWriter/write(org.apache.parquet.hadoop.thrift.BytesWritable)
org/apache/parquet/scrooge/ParquetScroogeSchemeTest/writeParquetFile(java.util.List,org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path)#org/apache/parquet/hadoop/thrift/ThriftToParquetFileWriter/ThriftToParquetFileWriter(org.apache.parquet.hadoop.Path,org.apache.parquet.hadoop.TaskAttemptContext,org.apache.parquet.hadoop.thrift.TProtocolFactory,java.lang.Class)
org/apache/parquet/proto/ProtoWriteSupport/BinaryWriter/writeRawValue(java.lang.Object)#org/apache/parquet/io/api/Binary/fromConstantByteArray(byte[])
org/apache/parquet/proto/ProtoWriteSupport/BinaryWriter/writeRawValue(java.lang.Object)#org/apache/parquet/io/api/RecordConsumer/addBinary(org.apache.parquet.io.api.Binary)
org/apache/parquet/column/values/bitpacking/DevNullValuesWriter/getBytes()#org/apache/parquet/bytes/BytesInput/empty()
org/apache/parquet/glob/GlobExpander/expand(java.lang.String)#org/apache/parquet/glob/GlobParser/parse(java.lang.String)
org/apache/parquet/glob/GlobExpander/expand(java.lang.String)#org/apache/parquet/glob/GlobExpander/GlobExpanderImpl/expand(org.apache.parquet.glob.GlobNode)
org/apache/parquet/example/data/simple/FloatValue/writeValue(org.apache.parquet.io.api.RecordConsumer)#org/apache/parquet/io/api/RecordConsumer/addFloat(float)
org/apache/parquet/example/data/simple/FloatValue/toString()#java/lang/String/valueOf(float)
org/apache/parquet/column/values/rle/RunLengthBitPackingHybridValuesReader/readBoolean()#org/apache/parquet/column/values/rle/RunLengthBitPackingHybridValuesReader/readInteger()
org/apache/parquet/column/values/rle/RunLengthBitPackingHybridValuesReader/initFromPage(int,java.nio.ByteBuffer,int)#org/apache/parquet/bytes/BytesUtils/readIntLittleEndian(java.io.InputStream)
org/apache/parquet/column/values/rle/RunLengthBitPackingHybridValuesReader/initFromPage(int,java.nio.ByteBuffer,int)#java/nio/Buffer/limit()
org/apache/parquet/column/values/rle/RunLengthBitPackingHybridValuesReader/initFromPage(int,java.nio.ByteBuffer,int)#org/apache/parquet/column/values/rle/RunLengthBitPackingHybridDecoder/RunLengthBitPackingHybridDecoder(int,java.io.InputStream)
org/apache/parquet/column/values/rle/RunLengthBitPackingHybridValuesReader/initFromPage(int,java.nio.ByteBuffer,int)#org/apache/parquet/bytes/ByteBufferInputStream/ByteBufferInputStream(java.nio.ByteBuffer,int,int)
org/apache/parquet/column/values/rle/RunLengthBitPackingHybridValuesReader/readInteger()#org/apache/parquet/column/values/rle/RunLengthBitPackingHybridDecoder/readInt()
org/apache/parquet/column/values/rle/RunLengthBitPackingHybridValuesReader/readInteger()#org/apache/parquet/io/ParquetDecodingException/ParquetDecodingException(java.lang.Throwable)
org/apache/parquet/column/values/rle/RunLengthBitPackingHybridValuesReader/skip()#org/apache/parquet/column/values/rle/RunLengthBitPackingHybridValuesReader/readInteger()
org/apache/parquet/proto/ProtoWriteSupport/EnumWriter/writeRawValue(java.lang.Object)#org/apache/parquet/io/api/Binary/fromString(java.lang.String)
org/apache/parquet/proto/ProtoWriteSupport/EnumWriter/writeRawValue(java.lang.Object)#org/apache/parquet/io/api/RecordConsumer/addBinary(org.apache.parquet.io.api.Binary)
org/apache/parquet/example/data/GroupWriter/writeGroup(org.apache.parquet.example.data.Group,org.apache.parquet.schema.GroupType)#org/apache/parquet/example/data/GroupWriter/writeGroup(org.apache.parquet.example.data.Group,org.apache.parquet.schema.GroupType)
org/apache/parquet/example/data/GroupWriter/writeGroup(org.apache.parquet.example.data.Group,org.apache.parquet.schema.GroupType)#org/apache/parquet/schema/Type/getName()
org/apache/parquet/example/data/GroupWriter/writeGroup(org.apache.parquet.example.data.Group,org.apache.parquet.schema.GroupType)#org/apache/parquet/io/api/RecordConsumer/startField(java.lang.String,int)
org/apache/parquet/example/data/GroupWriter/writeGroup(org.apache.parquet.example.data.Group,org.apache.parquet.schema.GroupType)#org/apache/parquet/schema/Type/asGroupType()
org/apache/parquet/example/data/GroupWriter/writeGroup(org.apache.parquet.example.data.Group,org.apache.parquet.schema.GroupType)#org/apache/parquet/io/api/RecordConsumer/endField(java.lang.String,int)
org/apache/parquet/example/data/GroupWriter/writeGroup(org.apache.parquet.example.data.Group,org.apache.parquet.schema.GroupType)#org/apache/parquet/example/data/Group/getGroup(int,int)
org/apache/parquet/example/data/GroupWriter/writeGroup(org.apache.parquet.example.data.Group,org.apache.parquet.schema.GroupType)#org/apache/parquet/example/data/GroupValueSource/getFieldRepetitionCount(int)
org/apache/parquet/example/data/GroupWriter/writeGroup(org.apache.parquet.example.data.Group,org.apache.parquet.schema.GroupType)#org/apache/parquet/io/api/RecordConsumer/endGroup()
org/apache/parquet/example/data/GroupWriter/writeGroup(org.apache.parquet.example.data.Group,org.apache.parquet.schema.GroupType)#org/apache/parquet/schema/Type/isPrimitive()
org/apache/parquet/example/data/GroupWriter/writeGroup(org.apache.parquet.example.data.Group,org.apache.parquet.schema.GroupType)#org/apache/parquet/io/api/RecordConsumer/startGroup()
org/apache/parquet/example/data/GroupWriter/writeGroup(org.apache.parquet.example.data.Group,org.apache.parquet.schema.GroupType)#org/apache/parquet/schema/GroupType/getFieldCount()
org/apache/parquet/example/data/GroupWriter/writeGroup(org.apache.parquet.example.data.Group,org.apache.parquet.schema.GroupType)#org/apache/parquet/schema/GroupType/getType(int)
org/apache/parquet/example/data/GroupWriter/writeGroup(org.apache.parquet.example.data.Group,org.apache.parquet.schema.GroupType)#org/apache/parquet/example/data/Group/writeValue(int,int,org.apache.parquet.io.api.RecordConsumer)
org/apache/parquet/example/data/GroupWriter/write(org.apache.parquet.example.data.Group)#org/apache/parquet/example/data/GroupWriter/writeGroup(org.apache.parquet.example.data.Group,org.apache.parquet.schema.GroupType)
org/apache/parquet/example/data/GroupWriter/write(org.apache.parquet.example.data.Group)#org/apache/parquet/io/api/RecordConsumer/endMessage()
org/apache/parquet/example/data/GroupWriter/write(org.apache.parquet.example.data.Group)#org/apache/parquet/io/api/RecordConsumer/startMessage()
org/apache/parquet/pig/summary/TupleSummaryData/merge(org.apache.parquet.pig.summary.SummaryData)#java/util/List/size()
org/apache/parquet/pig/summary/TupleSummaryData/merge(org.apache.parquet.pig.summary.SummaryData)#org/apache/parquet/pig/summary/TupleSummaryData/ensureSize(int)
org/apache/parquet/pig/summary/TupleSummaryData/merge(org.apache.parquet.pig.summary.SummaryData)#java/util/List/get(int)
org/apache/parquet/pig/summary/TupleSummaryData/merge(org.apache.parquet.pig.summary.SummaryData)#org/apache/parquet/pig/summary/FieldSummaryData/merge(org.apache.parquet.pig.summary.SummaryData)
org/apache/parquet/pig/summary/TupleSummaryData/merge(org.apache.parquet.pig.summary.SummaryData)#org/apache/parquet/pig/summary/SummaryData/merge(org.apache.parquet.pig.summary.SummaryData)
org/apache/parquet/pig/summary/TupleSummaryData/merge(org.apache.parquet.pig.summary.SummaryData)#org/apache/parquet/pig/summary/ValueStat/merge(org.apache.parquet.pig.summary.ValueStat)
org/apache/parquet/pig/summary/TupleSummaryData/ensureSize(int)#java/util/List/size()
org/apache/parquet/pig/summary/TupleSummaryData/ensureSize(int)#org/apache/parquet/pig/summary/FieldSummaryData/FieldSummaryData()
org/apache/parquet/pig/summary/TupleSummaryData/ensureSize(int)#java/util/List/add(E)
org/apache/parquet/pig/summary/TupleSummaryData/addTuple(org.apache.parquet.pig.Schema,org.apache.parquet.pig.Tuple)#org/apache/parquet/pig/summary/ValueStat/add(double)
org/apache/parquet/pig/summary/TupleSummaryData/addTuple(org.apache.parquet.pig.Schema,org.apache.parquet.pig.Tuple)#org/apache/parquet/pig/summary/FieldSummaryData/setName(java.lang.String)
org/apache/parquet/pig/summary/TupleSummaryData/addTuple(org.apache.parquet.pig.Schema,org.apache.parquet.pig.Tuple)#org/apache/parquet/pig/summary/SummaryData/getSchema(org.apache.parquet.pig.convert.FieldSchema)
org/apache/parquet/pig/summary/TupleSummaryData/addTuple(org.apache.parquet.pig.Schema,org.apache.parquet.pig.Tuple)#org/apache/parquet/pig/summary/SummaryData/add(java.lang.Object)
org/apache/parquet/pig/summary/TupleSummaryData/addTuple(org.apache.parquet.pig.Schema,org.apache.parquet.pig.Tuple)#org/apache/parquet/pig/summary/TupleSummaryData/ensureSize(int)
org/apache/parquet/pig/summary/TupleSummaryData/addTuple(org.apache.parquet.pig.Schema,org.apache.parquet.pig.Tuple)#java/util/logging/Logger/log(java.util.logging.Level,java.lang.String,java.lang.Object)
org/apache/parquet/pig/summary/TupleSummaryData/addTuple(org.apache.parquet.pig.Schema,org.apache.parquet.pig.Tuple)#org/apache/parquet/pig/summary/FieldSummaryData/addError()
org/apache/parquet/pig/summary/TupleSummaryData/addTuple(org.apache.parquet.pig.Schema,org.apache.parquet.pig.Tuple)#org/apache/parquet/pig/summary/FieldSummaryData/add(org.apache.parquet.pig.Schema,java.lang.Object)
org/apache/parquet/pig/summary/TupleSummaryData/addTuple(org.apache.parquet.pig.Schema,org.apache.parquet.pig.Tuple)#org/apache/parquet/pig/summary/SummaryData/getName(org.apache.parquet.pig.convert.FieldSchema)
org/apache/parquet/pig/summary/TupleSummaryData/addTuple(org.apache.parquet.pig.Schema,org.apache.parquet.pig.Tuple)#org/apache/parquet/pig/summary/SummaryData/getField(org.apache.parquet.pig.Schema,int)
org/apache/parquet/pig/summary/TupleSummaryData/addTuple(org.apache.parquet.pig.Schema,org.apache.parquet.pig.Tuple)#java/util/List/get(int)
org/apache/parquet/io/GroupColumnIO/getColumnNames()#java/util/ArrayList/ArrayList()
org/apache/parquet/io/GroupColumnIO/getColumnNames()#org/apache/parquet/io/ColumnIO/getColumnNames()
org/apache/parquet/io/GroupColumnIO/getColumnNames()#java/util/ArrayList/addAll(java.util.Collection)
org/apache/parquet/io/GroupColumnIO/getChild(java.lang.String)#java/util/Map/get(java.lang.Object)
org/apache/parquet/io/GroupColumnIO/setLevels(int,int,java.lang.String[],int[],java.util.List,java.util.List)#org/apache/parquet/schema/Type/getName()
org/apache/parquet/io/GroupColumnIO/setLevels(int,int,java.lang.String[],int[],java.util.List,java.util.List)#java/util/ArrayList/ArrayList(java.util.Collection)
org/apache/parquet/io/GroupColumnIO/setLevels(int,int,java.lang.String[],int[],java.util.List,java.util.List)#org/apache/parquet/io/ColumnIO/setLevels(int,int,java.lang.String[],int[],java.util.List,java.util.List)
org/apache/parquet/io/GroupColumnIO/setLevels(int,int,java.lang.String[],int[],java.util.List,java.util.List)#java/util/Arrays/copyOf(T[],int)
org/apache/parquet/io/GroupColumnIO/setLevels(int,int,java.lang.String[],int[],java.util.List,java.util.List)#org/apache/parquet/io/ColumnIO/getIndex()
org/apache/parquet/io/GroupColumnIO/setLevels(int,int,java.lang.String[],int[],java.util.List,java.util.List)#java/util/Arrays/copyOf(int[],int)
org/apache/parquet/io/GroupColumnIO/setLevels(int,int,java.lang.String[],int[],java.util.List,java.util.List)#java/util/List/add(E)
org/apache/parquet/io/GroupColumnIO/setLevels(int,int,java.lang.String[],int[],java.util.List,java.util.List)#org/apache/parquet/schema/Type/isRepetition(org.apache.parquet.schema.Type.Repetition)
org/apache/parquet/io/GroupColumnIO/setLevels(int,int,java.lang.String[],int[],java.util.List,java.util.List)#org/apache/parquet/io/ColumnIO/getType()
org/apache/parquet/io/GroupColumnIO/getLast()#org/apache/parquet/io/ColumnIO/getLast()
org/apache/parquet/io/GroupColumnIO/getLast()#java/util/List/size()
org/apache/parquet/io/GroupColumnIO/getLast()#java/util/List/get(int)
org/apache/parquet/io/GroupColumnIO/add(org.apache.parquet.io.ColumnIO)#org/apache/parquet/schema/Type/getName()
org/apache/parquet/io/GroupColumnIO/add(org.apache.parquet.io.ColumnIO)#org/apache/parquet/io/ColumnIO/getType()
org/apache/parquet/io/GroupColumnIO/add(org.apache.parquet.io.ColumnIO)#java/util/List/add(E)
org/apache/parquet/io/GroupColumnIO/add(org.apache.parquet.io.ColumnIO)#java/util/Map/put(K,V)
org/apache/parquet/io/GroupColumnIO/getFirst()#org/apache/parquet/io/ColumnIO/getFirst()
org/apache/parquet/io/GroupColumnIO/getFirst()#java/util/List/get(int)
org/apache/parquet/io/GroupColumnIO/getChild(int)#org/apache/parquet/io/InvalidRecordException/InvalidRecordException(java.lang.String,java.lang.Throwable)
org/apache/parquet/io/GroupColumnIO/getChild(int)#java/util/List/get(int)
org/apache/parquet/avro/TestCircularReferences/test()#java/util/ArrayList/ArrayList()
org/apache/parquet/avro/TestCircularReferences/test()#org/apache/parquet/avro/AvroTestUtil/read(org.apache.parquet.avro.GenericData,org.apache.parquet.pig.Schema,java.io.File)
org/apache/parquet/avro/TestCircularReferences/test()#org/apache/parquet/avro/TestCircularReferences/ReferenceManager/ReferenceManager()
org/apache/parquet/avro/TestCircularReferences/test()#org/apache/parquet/avro/TestCircularReferences/Reference/addToSchema(org.apache.parquet.pig.Schema)
org/apache/parquet/avro/TestCircularReferences/test()#org/apache/parquet/avro/TestCircularReferences/Referenceable/Referenceable(java.lang.String)
org/apache/parquet/avro/TestCircularReferences/test()#org/apache/parquet/avro/TestCircularReferences/ReferenceManager/getHandler()
org/apache/parquet/avro/TestCircularReferences/test()#org/apache/parquet/avro/TestCircularReferences/Referenceable/addToSchema(org.apache.parquet.pig.Schema)
org/apache/parquet/avro/TestCircularReferences/test()#java/io/PrintStream/println(char[])
org/apache/parquet/avro/TestCircularReferences/test()#org/apache/parquet/avro/TestCircularReferences/Reference/Reference(java.lang.String)
org/apache/parquet/avro/TestCircularReferences/test()#org/apache/parquet/avro/TestCircularReferences/ReferenceManager/getTracker()
org/apache/parquet/avro/TestCircularReferences/test()#org/apache/parquet/avro/AvroTestUtil/write(org.apache.parquet.statistics.TemporaryFolder,org.apache.parquet.avro.GenericData,org.apache.parquet.pig.Schema,D[])
org/apache/parquet/avro/TestCircularReferences/test()#java/lang/Object/Object()
org/apache/parquet/column/statistics/LongStatistics/setMinMaxFromBytes(byte[],byte[])#org/apache/parquet/bytes/BytesUtils/bytesToLong(byte[])
org/apache/parquet/column/statistics/LongStatistics/setMinMaxFromBytes(byte[],byte[])#org/apache/parquet/column/statistics/Statistics/markAsNotEmpty()
org/apache/parquet/column/statistics/LongStatistics/updateStats(long)#org/apache/parquet/column/statistics/Statistics/hasNonNullValue()
org/apache/parquet/column/statistics/LongStatistics/updateStats(long)#org/apache/parquet/column/statistics/LongStatistics/updateStats(long,long)
org/apache/parquet/column/statistics/LongStatistics/updateStats(long)#org/apache/parquet/column/statistics/LongStatistics/initializeStats(long,long)
org/apache/parquet/column/statistics/LongStatistics/getMaxBytes()#org/apache/parquet/bytes/BytesUtils/longToBytes(long)
org/apache/parquet/column/statistics/LongStatistics/toString()#org/apache/parquet/column/statistics/Statistics/hasNonNullValue()
org/apache/parquet/column/statistics/LongStatistics/toString()#java/lang/String/format(java.lang.String,java.lang.Object[])
org/apache/parquet/column/statistics/LongStatistics/toString()#org/apache/parquet/column/statistics/Statistics/getNumNulls()
org/apache/parquet/column/statistics/LongStatistics/toString()#org/apache/parquet/column/statistics/Statistics/isEmpty()
org/apache/parquet/column/statistics/LongStatistics/setMinMax(long,long)#org/apache/parquet/column/statistics/Statistics/markAsNotEmpty()
org/apache/parquet/column/statistics/LongStatistics/initializeStats(long,long)#org/apache/parquet/column/statistics/Statistics/markAsNotEmpty()
org/apache/parquet/column/statistics/LongStatistics/mergeStatisticsMinMax(org.apache.parquet.column.statistics.Statistics)#org/apache/parquet/column/statistics/LongStatistics/getMin()
org/apache/parquet/column/statistics/LongStatistics/mergeStatisticsMinMax(org.apache.parquet.column.statistics.Statistics)#org/apache/parquet/column/statistics/Statistics/hasNonNullValue()
org/apache/parquet/column/statistics/LongStatistics/mergeStatisticsMinMax(org.apache.parquet.column.statistics.Statistics)#org/apache/parquet/column/statistics/LongStatistics/initializeStats(long,long)
org/apache/parquet/column/statistics/LongStatistics/mergeStatisticsMinMax(org.apache.parquet.column.statistics.Statistics)#org/apache/parquet/column/statistics/LongStatistics/updateStats(long,long)
org/apache/parquet/column/statistics/LongStatistics/mergeStatisticsMinMax(org.apache.parquet.column.statistics.Statistics)#org/apache/parquet/column/statistics/LongStatistics/getMax()
org/apache/parquet/column/statistics/LongStatistics/isSmallerThan(long)#org/apache/parquet/column/statistics/Statistics/hasNonNullValue()
org/apache/parquet/column/statistics/LongStatistics/getMinBytes()#org/apache/parquet/bytes/BytesUtils/longToBytes(long)
org/apache/parquet/avro/AvroRecordConverter/AvroArrayConverter/ArrayElementConverter/getConverter(int)#org/apache/parquet/Preconditions/checkArgument(boolean,java.lang.String)
org/apache/parquet/avro/AvroRecordConverter/AvroArrayConverter/ArrayElementConverter/end()#java/util/Collection/add(E)
org/apache/parquet/pig/TupleReadSupport/getPigSchema(org.apache.parquet.hadoop.Configuration)#org/apache/parquet/pig/PigSchemaConverter/parsePigSchema(java.lang.String)
org/apache/parquet/pig/TupleReadSupport/getRequiredFields(org.apache.parquet.hadoop.Configuration)#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/apache/parquet/pig/TupleReadSupport/getPigSchemaFromFile(org.apache.parquet.schema.MessageType,java.util.Map)#org/apache/parquet/pig/PigMetaData/fromMetaData(java.util.Map)
org/apache/parquet/pig/TupleReadSupport/getPigSchemaFromFile(org.apache.parquet.schema.MessageType,java.util.Map)#org/apache/parquet/pig/PigMetaData/getPigSchema()
org/apache/parquet/pig/TupleReadSupport/getPigSchemaFromFile(org.apache.parquet.schema.MessageType,java.util.Map)#org/apache/parquet/pig/PigSchemaConverter/parsePigSchema(java.lang.String)
org/apache/parquet/pig/TupleReadSupport/getPigSchemaFromFile(org.apache.parquet.schema.MessageType,java.util.Map)#org/apache/parquet/pig/PigSchemaConverter/convert(org.apache.parquet.schema.MessageType)
org/apache/parquet/pig/TupleReadSupport/union(org.apache.parquet.pig.Schema,org.apache.parquet.pig.Schema)#java/util/ArrayList/ArrayList()
org/apache/parquet/pig/TupleReadSupport/union(org.apache.parquet.pig.Schema,org.apache.parquet.pig.Schema)#org/apache/parquet/pig/TupleReadSupport/union(org.apache.parquet.pig.Schema,org.apache.parquet.pig.Schema)
org/apache/parquet/pig/TupleReadSupport/union(org.apache.parquet.pig.Schema,org.apache.parquet.pig.Schema)#java/lang/Object/Object()
org/apache/parquet/pig/TupleReadSupport/prepareForRead(org.apache.parquet.hadoop.Configuration,java.util.Map,org.apache.parquet.schema.MessageType,org.apache.parquet.hadoop.api.ReadSupport.ReadContext)#org/apache/parquet/pig/TupleReadSupport/getPigSchema(org.apache.parquet.hadoop.Configuration)
org/apache/parquet/pig/TupleReadSupport/prepareForRead(org.apache.parquet.hadoop.Configuration,java.util.Map,org.apache.parquet.schema.MessageType,org.apache.parquet.hadoop.api.ReadSupport.ReadContext)#org/apache/parquet/hadoop/api/ReadSupport/ReadContext/getRequestedSchema()
org/apache/parquet/pig/TupleReadSupport/prepareForRead(org.apache.parquet.hadoop.Configuration,java.util.Map,org.apache.parquet.schema.MessageType,org.apache.parquet.hadoop.api.ReadSupport.ReadContext)#org/apache/parquet/io/ParquetDecodingException/ParquetDecodingException(java.lang.String)
org/apache/parquet/pig/TupleReadSupport/prepareForRead(org.apache.parquet.hadoop.Configuration,java.util.Map,org.apache.parquet.schema.MessageType,org.apache.parquet.hadoop.api.ReadSupport.ReadContext)#org/apache/parquet/pig/convert/TupleRecordMaterializer/TupleRecordMaterializer(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,boolean,boolean)
org/apache/parquet/pig/TupleReadSupport/union(org.apache.parquet.pig.convert.FieldSchema,org.apache.parquet.pig.convert.FieldSchema)#org/apache/parquet/schema/IncompatibleSchemaModificationException/IncompatibleSchemaModificationException(java.lang.String)
org/apache/parquet/pig/TupleReadSupport/union(org.apache.parquet.pig.convert.FieldSchema,org.apache.parquet.pig.convert.FieldSchema)#org/apache/parquet/pig/SchemaConversionException/SchemaConversionException(java.lang.String)
org/apache/parquet/pig/TupleReadSupport/union(org.apache.parquet.pig.convert.FieldSchema,org.apache.parquet.pig.convert.FieldSchema)#org/apache/parquet/pig/TupleReadSupport/union(org.apache.parquet.pig.Schema,org.apache.parquet.pig.Schema)
org/apache/parquet/pig/TupleReadSupport/union(org.apache.parquet.pig.convert.FieldSchema,org.apache.parquet.pig.convert.FieldSchema)#java/lang/Object/Object()
org/apache/parquet/pig/TupleReadSupport/getPigSchemaFromMultipleFiles(org.apache.parquet.schema.MessageType,java.util.Map)#org/apache/parquet/pig/TupleReadSupport/union(org.apache.parquet.pig.Schema,org.apache.parquet.pig.Schema)
org/apache/parquet/pig/TupleReadSupport/getPigSchemaFromMultipleFiles(org.apache.parquet.schema.MessageType,java.util.Map)#org/apache/parquet/io/ParquetDecodingException/ParquetDecodingException(java.lang.String,java.lang.Throwable)
org/apache/parquet/pig/TupleReadSupport/getPigSchemaFromMultipleFiles(org.apache.parquet.schema.MessageType,java.util.Map)#org/apache/parquet/pig/PigMetaData/getPigSchemas(java.util.Map)
org/apache/parquet/pig/TupleReadSupport/getPigSchemaFromMultipleFiles(org.apache.parquet.schema.MessageType,java.util.Map)#org/apache/parquet/pig/PigSchemaConverter/parsePigSchema(java.lang.String)
org/apache/parquet/pig/TupleReadSupport/getPigSchemaFromMultipleFiles(org.apache.parquet.schema.MessageType,java.util.Map)#org/apache/parquet/pig/PigSchemaConverter/convert(org.apache.parquet.schema.MessageType)
org/apache/parquet/pig/TupleReadSupport/init(org.apache.parquet.hadoop.api.InitContext)#org/apache/parquet/pig/TupleReadSupport/getPigSchema(org.apache.parquet.hadoop.Configuration)
org/apache/parquet/pig/TupleReadSupport/init(org.apache.parquet.hadoop.api.InitContext)#org/apache/parquet/pig/TupleReadSupport/getRequiredFields(org.apache.parquet.hadoop.Configuration)
org/apache/parquet/pig/TupleReadSupport/init(org.apache.parquet.hadoop.api.InitContext)#org/apache/parquet/hadoop/api/InitContext/getFileSchema()
org/apache/parquet/pig/TupleReadSupport/init(org.apache.parquet.hadoop.api.InitContext)#org/apache/parquet/pig/PigSchemaConverter/filter(org.apache.parquet.schema.MessageType,org.apache.parquet.pig.Schema,org.apache.parquet.pig.RequiredFieldList)
org/apache/parquet/pig/TupleReadSupport/init(org.apache.parquet.hadoop.api.InitContext)#org/apache/parquet/hadoop/api/InitContext/getConfiguration()
org/apache/parquet/pig/TupleReadSupport/init(org.apache.parquet.hadoop.api.InitContext)#org/apache/parquet/hadoop/api/ReadSupport/ReadContext/ReadContext(org.apache.parquet.schema.MessageType)
org/apache/parquet/pig/TupleReadSupport/init(org.apache.parquet.hadoop.api.InitContext)#org/apache/parquet/pig/PigSchemaConverter/PigSchemaConverter(boolean)
org/apache/parquet/io/api/Binary/FromCharSequenceBinary/encodeUTF8(java.lang.CharSequence)#java/nio/charset/CharsetEncoder/encode(java.nio.CharBuffer)
org/apache/parquet/io/api/Binary/FromCharSequenceBinary/encodeUTF8(java.lang.CharSequence)#java/nio/CharBuffer/wrap(java.lang.CharSequence)
org/apache/parquet/io/api/Binary/FromCharSequenceBinary/encodeUTF8(java.lang.CharSequence)#java/lang/ThreadLocal/get()
org/apache/parquet/io/api/Binary/FromCharSequenceBinary/encodeUTF8(java.lang.CharSequence)#org/apache/parquet/io/ParquetEncodingException/ParquetEncodingException(java.lang.String,java.lang.Throwable)
org/apache/parquet/io/api/Binary/FromCharSequenceBinary/toString()#org/apache/parquet/io/api/Binary/ByteBufferBackedBinary/toStringUsingUTF8()
org/apache/parquet/pig/PigSchemaConverter/convert(org.apache.parquet.pig.convert.FieldSchema,java.lang.String)#org/apache/parquet/pig/PigSchemaConverter/name(java.lang.String,java.lang.String)
org/apache/parquet/pig/PigSchemaConverter/convert(org.apache.parquet.pig.convert.FieldSchema,java.lang.String)#org/apache/parquet/pig/PigSchemaConverter/convertWithName(org.apache.parquet.pig.convert.FieldSchema,java.lang.String)
org/apache/parquet/pig/PigSchemaConverter/filter(org.apache.parquet.schema.Type,org.apache.parquet.pig.convert.FieldSchema)#org/apache/parquet/schema/Type/asGroupType()
org/apache/parquet/pig/PigSchemaConverter/filter(org.apache.parquet.schema.Type,org.apache.parquet.pig.convert.FieldSchema)#org/apache/parquet/pig/SchemaConversionException/SchemaConversionException(java.lang.String,java.lang.Throwable)
org/apache/parquet/pig/PigSchemaConverter/filter(org.apache.parquet.schema.Type,org.apache.parquet.pig.convert.FieldSchema)#org/apache/parquet/pig/PigSchemaConverter/filterMap(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.convert.FieldSchema)
org/apache/parquet/pig/PigSchemaConverter/filter(org.apache.parquet.schema.Type,org.apache.parquet.pig.convert.FieldSchema)#java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)
org/apache/parquet/pig/PigSchemaConverter/filter(org.apache.parquet.schema.Type,org.apache.parquet.pig.convert.FieldSchema)#org/apache/parquet/pig/PigSchemaConverter/filterBag(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.convert.FieldSchema)
org/apache/parquet/pig/PigSchemaConverter/filter(org.apache.parquet.schema.Type,org.apache.parquet.pig.convert.FieldSchema)#org/apache/parquet/pig/PigSchemaConverter/filterTuple(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.convert.FieldSchema)
org/apache/parquet/pig/PigSchemaConverter/pigSchemaToString(org.apache.parquet.pig.Schema)#java/lang/String/length()
org/apache/parquet/pig/PigSchemaConverter/pigSchemaToString(org.apache.parquet.pig.Schema)#java/lang/String/substring(int,int)
org/apache/parquet/pig/PigSchemaConverter/convert(org.apache.parquet.pig.convert.FieldSchema,int)#org/apache/parquet/pig/PigSchemaConverter/convert(org.apache.parquet.pig.convert.FieldSchema,java.lang.String)
org/apache/parquet/pig/PigSchemaConverter/convertWithName(org.apache.parquet.pig.convert.FieldSchema,java.lang.String)#org/apache/parquet/pig/PigSchemaConverter/convertMap(java.lang.String,org.apache.parquet.pig.convert.FieldSchema)
org/apache/parquet/pig/PigSchemaConverter/convertWithName(org.apache.parquet.pig.convert.FieldSchema,java.lang.String)#org/apache/parquet/pig/PigSchemaConverter/convertBag(java.lang.String,org.apache.parquet.pig.convert.FieldSchema)
org/apache/parquet/pig/PigSchemaConverter/convertWithName(org.apache.parquet.pig.convert.FieldSchema,java.lang.String)#org/apache/parquet/pig/PigSchemaConverter/primitive(java.lang.String,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.schema.OriginalType)
org/apache/parquet/pig/PigSchemaConverter/convertWithName(org.apache.parquet.pig.convert.FieldSchema,java.lang.String)#org/apache/parquet/pig/PigSchemaConverter/convertTuple(java.lang.String,org.apache.parquet.pig.convert.FieldSchema,org.apache.parquet.schema.Type.Repetition)
org/apache/parquet/pig/PigSchemaConverter/convertWithName(org.apache.parquet.pig.convert.FieldSchema,java.lang.String)#java/lang/UnsupportedOperationException/UnsupportedOperationException()
org/apache/parquet/pig/PigSchemaConverter/convertWithName(org.apache.parquet.pig.convert.FieldSchema,java.lang.String)#org/apache/parquet/pig/PigSchemaConverter/primitive(java.lang.String,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/pig/PigSchemaConverter/convertWithName(org.apache.parquet.pig.convert.FieldSchema,java.lang.String)#org/apache/parquet/pig/SchemaConversionException/SchemaConversionException(java.lang.String)
org/apache/parquet/pig/PigSchemaConverter/convertWithName(org.apache.parquet.pig.convert.FieldSchema,java.lang.String)#org/apache/parquet/pig/SchemaConversionException/SchemaConversionException(java.lang.String,java.lang.Throwable)
org/apache/parquet/pig/PigSchemaConverter/getComplexFieldSchema(java.lang.String,org.apache.parquet.schema.Type)#java/lang/Enum/equals(java.lang.Object)
org/apache/parquet/pig/PigSchemaConverter/getComplexFieldSchema(java.lang.String,org.apache.parquet.schema.Type)#org/apache/parquet/schema/Type/asGroupType()
org/apache/parquet/pig/PigSchemaConverter/getComplexFieldSchema(java.lang.String,org.apache.parquet.schema.Type)#org/apache/parquet/pig/SchemaConversionException/SchemaConversionException(java.lang.String)
org/apache/parquet/pig/PigSchemaConverter/getComplexFieldSchema(java.lang.String,org.apache.parquet.schema.Type)#org/apache/parquet/schema/GroupType/getFieldCount()
org/apache/parquet/pig/PigSchemaConverter/getComplexFieldSchema(java.lang.String,org.apache.parquet.schema.Type)#org/apache/parquet/pig/PigSchemaConverter/convertField(org.apache.parquet.schema.Type)
org/apache/parquet/pig/PigSchemaConverter/getComplexFieldSchema(java.lang.String,org.apache.parquet.schema.Type)#org/apache/parquet/schema/GroupType/getFields()
org/apache/parquet/pig/PigSchemaConverter/getComplexFieldSchema(java.lang.String,org.apache.parquet.schema.Type)#org/apache/parquet/schema/GroupType/getFieldName(int)
org/apache/parquet/pig/PigSchemaConverter/getComplexFieldSchema(java.lang.String,org.apache.parquet.schema.Type)#org/apache/parquet/schema/Type/isPrimitive()
org/apache/parquet/pig/PigSchemaConverter/getComplexFieldSchema(java.lang.String,org.apache.parquet.schema.Type)#org/apache/parquet/schema/Type/getName()
org/apache/parquet/pig/PigSchemaConverter/getComplexFieldSchema(java.lang.String,org.apache.parquet.schema.Type)#org/apache/parquet/schema/Type/getOriginalType()
org/apache/parquet/pig/PigSchemaConverter/getComplexFieldSchema(java.lang.String,org.apache.parquet.schema.Type)#org/apache/parquet/schema/Type/isRepetition(org.apache.parquet.schema.Type.Repetition)
org/apache/parquet/pig/PigSchemaConverter/getComplexFieldSchema(java.lang.String,org.apache.parquet.schema.Type)#org/apache/parquet/pig/PigSchemaConverter/getSimpleFieldSchema(java.lang.String,org.apache.parquet.schema.Type)
org/apache/parquet/pig/PigSchemaConverter/getComplexFieldSchema(java.lang.String,org.apache.parquet.schema.Type)#java/lang/Object/Object()
org/apache/parquet/pig/PigSchemaConverter/getComplexFieldSchema(java.lang.String,org.apache.parquet.schema.Type)#org/apache/parquet/schema/GroupType/getType(int)
org/apache/parquet/pig/PigSchemaConverter/getComplexFieldSchema(java.lang.String,org.apache.parquet.schema.Type)#org/apache/parquet/pig/PigSchemaConverter/convertFields(java.util.List)
org/apache/parquet/pig/PigSchemaConverter/convertTuple(java.lang.String,org.apache.parquet.pig.convert.FieldSchema,org.apache.parquet.schema.Type.Repetition)#org/apache/parquet/pig/PigSchemaConverter/convertTypes(org.apache.parquet.pig.Schema)
org/apache/parquet/pig/PigSchemaConverter/convertTuple(java.lang.String,org.apache.parquet.pig.convert.FieldSchema,org.apache.parquet.schema.Type.Repetition)#org/apache/parquet/schema/GroupType/GroupType(org.apache.parquet.schema.Type.Repetition,java.lang.String,java.util.List)
org/apache/parquet/pig/PigSchemaConverter/deserializeRequiredFieldList(java.lang.String)#java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)
org/apache/parquet/pig/PigSchemaConverter/primitive(java.lang.String,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)#org/apache/parquet/schema/PrimitiveType/PrimitiveType(org.apache.parquet.schema.Type.Repetition,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,java.lang.String,org.apache.parquet.schema.OriginalType)
org/apache/parquet/pig/PigSchemaConverter/parsePigSchema(java.lang.String)#org/apache/parquet/pig/SchemaConversionException/SchemaConversionException(java.lang.String,java.lang.Throwable)
org/apache/parquet/pig/PigSchemaConverter/filterBag(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.convert.FieldSchema)#org/apache/parquet/schema/GroupType/getFieldCount()
org/apache/parquet/pig/PigSchemaConverter/filterBag(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.convert.FieldSchema)#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/apache/parquet/pig/PigSchemaConverter/filterBag(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.convert.FieldSchema)#org/apache/parquet/schema/Type/isPrimitive()
org/apache/parquet/pig/PigSchemaConverter/filterBag(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.convert.FieldSchema)#org/apache/parquet/pig/PigSchemaConverter/filter(org.apache.parquet.schema.Type,org.apache.parquet.pig.convert.FieldSchema)
org/apache/parquet/pig/PigSchemaConverter/filterBag(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.convert.FieldSchema)#org/apache/parquet/schema/Type/getOriginalType()
org/apache/parquet/pig/PigSchemaConverter/filterBag(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.convert.FieldSchema)#org/apache/parquet/schema/GroupType/withNewFields(java.util.List)
org/apache/parquet/pig/PigSchemaConverter/filterBag(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.convert.FieldSchema)#org/apache/parquet/schema/GroupType/getType(int)
org/apache/parquet/pig/PigSchemaConverter/filterTuple(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.convert.FieldSchema)#org/apache/parquet/pig/PigSchemaConverter/ColumnAccess/filterTupleSchema(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,org.apache.parquet.pig.RequiredFieldList)
org/apache/parquet/pig/PigSchemaConverter/filterTuple(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.convert.FieldSchema)#org/apache/parquet/schema/GroupType/withNewFields(java.util.List)
org/apache/parquet/pig/PigSchemaConverter/convertMap(java.lang.String,org.apache.parquet.pig.convert.FieldSchema)#org/apache/parquet/schema/ConversionPatterns/stringKeyMapType(org.apache.parquet.schema.Type.Repetition,java.lang.String,java.lang.String,org.apache.parquet.schema.Type)
org/apache/parquet/pig/PigSchemaConverter/convertMap(java.lang.String,org.apache.parquet.pig.convert.FieldSchema)#org/apache/parquet/pig/PigSchemaConverter/name(java.lang.String,java.lang.String)
org/apache/parquet/pig/PigSchemaConverter/convertMap(java.lang.String,org.apache.parquet.pig.convert.FieldSchema)#org/apache/parquet/pig/PigSchemaConverter/convertWithName(org.apache.parquet.pig.convert.FieldSchema,java.lang.String)
org/apache/parquet/pig/PigSchemaConverter/convertMap(java.lang.String,org.apache.parquet.pig.convert.FieldSchema)#org/apache/parquet/pig/SchemaConversionException/SchemaConversionException(java.lang.String)
org/apache/parquet/pig/PigSchemaConverter/convertMap(java.lang.String,org.apache.parquet.pig.convert.FieldSchema)#org/apache/parquet/pig/SchemaConversionException/SchemaConversionException(java.lang.String,java.lang.Throwable)
org/apache/parquet/pig/PigSchemaConverter/convertTypes(org.apache.parquet.pig.Schema)#org/apache/parquet/pig/PigSchemaConverter/convert(org.apache.parquet.pig.convert.FieldSchema,int)
org/apache/parquet/pig/PigSchemaConverter/getSimpleFieldSchema(java.lang.String,org.apache.parquet.schema.Type)#org/apache/parquet/schema/Type/asPrimitiveType()
org/apache/parquet/pig/PigSchemaConverter/getSimpleFieldSchema(java.lang.String,org.apache.parquet.schema.Type)#org/apache/parquet/schema/PrimitiveType/getPrimitiveTypeName()
org/apache/parquet/pig/PigSchemaConverter/getSimpleFieldSchema(java.lang.String,org.apache.parquet.schema.Type)#org/apache/parquet/schema/Type/getOriginalType()
org/apache/parquet/pig/PigSchemaConverter/getSimpleFieldSchema(java.lang.String,org.apache.parquet.schema.Type)#org/apache/parquet/pig/PigSchemaConverter/getSimpleFieldSchema(java/lang/String,org/apache/parquet/schema/Type)/$anonymous1/()
org/apache/parquet/pig/PigSchemaConverter/getSimpleFieldSchema(java.lang.String,org.apache.parquet.schema.Type)#org/apache/parquet/schema/PrimitiveType/PrimitiveTypeName/convert(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeNameConverter)
org/apache/parquet/pig/PigSchemaConverter/convert(org.apache.parquet.pig.Schema)#org/apache/parquet/pig/PigSchemaConverter/convertTypes(org.apache.parquet.pig.Schema)
org/apache/parquet/pig/PigSchemaConverter/convert(org.apache.parquet.pig.Schema)#org/apache/parquet/schema/MessageType/MessageType(java.lang.String,org.apache.parquet.schema.Type[])
org/apache/parquet/pig/PigSchemaConverter/filter(org.apache.parquet.schema.MessageType,org.apache.parquet.pig.Schema,org.apache.parquet.pig.RequiredFieldList)#org/apache/parquet/schema/Type/getName()
org/apache/parquet/pig/PigSchemaConverter/filter(org.apache.parquet.schema.MessageType,org.apache.parquet.pig.Schema,org.apache.parquet.pig.RequiredFieldList)#org/apache/parquet/pig/PigSchemaConverter/ColumnAccess/filterTupleSchema(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,org.apache.parquet.pig.RequiredFieldList)
org/apache/parquet/pig/PigSchemaConverter/filter(org.apache.parquet.schema.MessageType,org.apache.parquet.pig.Schema,org.apache.parquet.pig.RequiredFieldList)#org/apache/parquet/schema/MessageType/MessageType(java.lang.String,java.util.List)
org/apache/parquet/pig/PigSchemaConverter/filter(org.apache.parquet.schema.MessageType,org.apache.parquet.pig.Schema,org.apache.parquet.pig.RequiredFieldList)#java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)
org/apache/parquet/pig/PigSchemaConverter/filterMap(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.convert.FieldSchema)#org/apache/parquet/schema/Type/asGroupType()
org/apache/parquet/pig/PigSchemaConverter/filterMap(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.convert.FieldSchema)#org/apache/parquet/schema/GroupType/getFieldCount()
org/apache/parquet/pig/PigSchemaConverter/filterMap(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.convert.FieldSchema)#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/apache/parquet/pig/PigSchemaConverter/filterMap(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.convert.FieldSchema)#org/apache/parquet/pig/PigSchemaConverter/filter(org.apache.parquet.schema.Type,org.apache.parquet.pig.convert.FieldSchema)
org/apache/parquet/pig/PigSchemaConverter/filterMap(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.convert.FieldSchema)#org/apache/parquet/schema/GroupType/withNewFields(org.apache.parquet.schema.Type[])
org/apache/parquet/pig/PigSchemaConverter/filterMap(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.convert.FieldSchema)#org/apache/parquet/schema/GroupType/withNewFields(java.util.List)
org/apache/parquet/pig/PigSchemaConverter/filterMap(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.convert.FieldSchema)#org/apache/parquet/schema/GroupType/getType(int)
org/apache/parquet/pig/PigSchemaConverter/getFieldSchema(org.apache.parquet.schema.Type)#org/apache/parquet/schema/Type/getName()
org/apache/parquet/pig/PigSchemaConverter/getFieldSchema(org.apache.parquet.schema.Type)#org/apache/parquet/pig/PigSchemaConverter/getSimpleFieldSchema(java.lang.String,org.apache.parquet.schema.Type)
org/apache/parquet/pig/PigSchemaConverter/getFieldSchema(org.apache.parquet.schema.Type)#org/apache/parquet/pig/PigSchemaConverter/getComplexFieldSchema(java.lang.String,org.apache.parquet.schema.Type)
org/apache/parquet/pig/PigSchemaConverter/getFieldSchema(org.apache.parquet.schema.Type)#org/apache/parquet/schema/Type/isPrimitive()
org/apache/parquet/pig/PigSchemaConverter/convertBag(java.lang.String,org.apache.parquet.pig.convert.FieldSchema)#org/apache/parquet/pig/PigSchemaConverter/name(java.lang.String,java.lang.String)
org/apache/parquet/pig/PigSchemaConverter/convertBag(java.lang.String,org.apache.parquet.pig.convert.FieldSchema)#org/apache/parquet/pig/PigSchemaConverter/convertTuple(java.lang.String,org.apache.parquet.pig.convert.FieldSchema,org.apache.parquet.schema.Type.Repetition)
org/apache/parquet/pig/PigSchemaConverter/convertBag(java.lang.String,org.apache.parquet.pig.convert.FieldSchema)#org/apache/parquet/schema/ConversionPatterns/listType(org.apache.parquet.schema.Type.Repetition,java.lang.String,org.apache.parquet.schema.Type)
org/apache/parquet/pig/PigSchemaConverter/serializeRequiredFieldList(org.apache.parquet.pig.RequiredFieldList)#java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)
org/apache/parquet/pig/PigSchemaConverter/primitive(java.lang.String,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.schema.OriginalType)#org/apache/parquet/schema/PrimitiveType/PrimitiveType(org.apache.parquet.schema.Type.Repetition,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,java.lang.String,org.apache.parquet.schema.OriginalType)
org/apache/parquet/pig/PigSchemaConverter/convertField(org.apache.parquet.schema.Type)#java/util/Arrays/asList(T[])
org/apache/parquet/pig/PigSchemaConverter/convertField(org.apache.parquet.schema.Type)#org/apache/parquet/pig/PigSchemaConverter/convertFields(java.util.List)
org/apache/parquet/pig/PigSchemaConverter/convertFields(java.util.List)#java/util/ArrayList/ArrayList()
org/apache/parquet/pig/PigSchemaConverter/convertFields(java.util.List)#org/apache/parquet/pig/SchemaConversionException/SchemaConversionException(java.lang.String,java.lang.Throwable)
org/apache/parquet/pig/PigSchemaConverter/convertFields(java.util.List)#org/apache/parquet/pig/PigSchemaConverter/getFieldSchema(org.apache.parquet.schema.Type)
org/apache/parquet/pig/PigSchemaConverter/convertFields(java.util.List)#java/lang/Object/Object()
org/apache/parquet/pig/PigSchemaConverter/convertFields(java.util.List)#org/apache/parquet/schema/Type/isRepetition(org.apache.parquet.schema.Type.Repetition)
org/apache/parquet/pig/PigSchemaConverter/convertFields(java.util.List)#java/util/Arrays/asList(T[])
org/apache/parquet/pig/PigSchemaConverter/filter(org.apache.parquet.schema.MessageType,org.apache.parquet.pig.Schema)#org/apache/parquet/pig/PigSchemaConverter/filter(org.apache.parquet.schema.MessageType,org.apache.parquet.pig.Schema,org.apache.parquet.pig.RequiredFieldList)
org/apache/parquet/pig/PigSchemaConverter/convert(org.apache.parquet.schema.MessageType)#org/apache/parquet/schema/GroupType/getFields()
org/apache/parquet/pig/PigSchemaConverter/convert(org.apache.parquet.schema.MessageType)#org/apache/parquet/pig/PigSchemaConverter/convertFields(java.util.List)
org/apache/parquet/hadoop/thrift/ThriftBytesWriteSupport/write(org.apache.parquet.hadoop.thrift.BytesWritable)#org/apache/parquet/hadoop/thrift/ThriftBytesWriteSupport/protocol(org.apache.parquet.hadoop.thrift.BytesWritable)
org/apache/parquet/hadoop/thrift/ThriftBytesWriteSupport/write(org.apache.parquet.hadoop.thrift.BytesWritable)#org/apache/parquet/thrift/ProtocolPipe/readOne(org.apache.parquet.hadoop.thrift.TProtocol,org.apache.parquet.hadoop.thrift.TProtocol)
org/apache/parquet/hadoop/thrift/ThriftBytesWriteSupport/write(org.apache.parquet.hadoop.thrift.BytesWritable)#org/apache/parquet/io/ParquetEncodingException/ParquetEncodingException(java.lang.String)
org/apache/parquet/hadoop/thrift/ThriftBytesWriteSupport/getTProtocolFactoryClass(org.apache.parquet.hadoop.Configuration)#java/lang/Class/forName(java.lang.String)
org/apache/parquet/hadoop/thrift/ThriftBytesWriteSupport/getTProtocolFactoryClass(org.apache.parquet.hadoop.Configuration)#org/apache/parquet/hadoop/BadConfigurationException/BadConfigurationException(java.lang.String,java.lang.Throwable)
org/apache/parquet/hadoop/thrift/ThriftBytesWriteSupport/getTProtocolFactoryClass(org.apache.parquet.hadoop.Configuration)#org/apache/parquet/hadoop/BadConfigurationException/BadConfigurationException(java.lang.String)
org/apache/parquet/hadoop/thrift/ThriftBytesWriteSupport/protocol(org.apache.parquet.hadoop.thrift.BytesWritable)#java/io/ByteArrayInputStream/ByteArrayInputStream(byte[])
org/apache/parquet/hadoop/thrift/ThriftBytesWriteSupport/setTProtocolClass(org.apache.parquet.hadoop.Configuration,java.lang.Class)#java/lang/Class/getName()
org/apache/parquet/hadoop/thrift/ThriftBytesWriteSupport/init(org.apache.parquet.hadoop.Configuration)#org/apache/parquet/hadoop/thrift/TBaseWriteSupport/setThriftClass(org.apache.parquet.hadoop.Configuration,java.lang.Class)
org/apache/parquet/hadoop/thrift/ThriftBytesWriteSupport/init(org.apache.parquet.hadoop.Configuration)#org/apache/parquet/thrift/BufferedProtocolReadToWrite/BufferedProtocolReadToWrite(org.apache.parquet.thrift.struct.ThriftType.StructType,org.apache.parquet.thrift.FieldIgnoredHandler)
org/apache/parquet/hadoop/thrift/ThriftBytesWriteSupport/init(org.apache.parquet.hadoop.Configuration)#java/lang/RuntimeException/RuntimeException(java.lang.Throwable)
org/apache/parquet/hadoop/thrift/ThriftBytesWriteSupport/init(org.apache.parquet.hadoop.Configuration)#org/apache/parquet/hadoop/thrift/TBaseWriteSupport/getThriftClass(org.apache.parquet.hadoop.Configuration)
org/apache/parquet/hadoop/thrift/ThriftBytesWriteSupport/init(org.apache.parquet.hadoop.Configuration)#org/apache/parquet/thrift/ThriftSchemaConverter/toStructType(java.lang.Class)
org/apache/parquet/hadoop/thrift/ThriftBytesWriteSupport/init(org.apache.parquet.hadoop.Configuration)#org/apache/parquet/hadoop/thrift/AbstractThriftWriteSupport/init(java.lang.Class)
org/apache/parquet/hadoop/thrift/ThriftBytesWriteSupport/init(org.apache.parquet.hadoop.Configuration)#org/apache/parquet/thrift/ThriftSchemaConverter/convertWithoutProjection(org.apache.parquet.thrift.struct.ThriftType.StructType)
org/apache/parquet/hadoop/thrift/ThriftBytesWriteSupport/init(org.apache.parquet.hadoop.Configuration)#org/apache/parquet/thrift/ProtocolReadToWrite/ProtocolReadToWrite()
org/apache/parquet/hadoop/thrift/ThriftBytesWriteSupport/init(org.apache.parquet.hadoop.Configuration)#org/apache/parquet/hadoop/thrift/ThriftBytesWriteSupport/getTProtocolFactoryClass(org.apache.parquet.hadoop.Configuration)
org/apache/parquet/hadoop/thrift/ThriftBytesWriteSupport/prepareForWrite(org.apache.parquet.io.api.RecordConsumer)#org/apache/parquet/io/ColumnIOFactory/getColumnIO(org.apache.parquet.schema.MessageType)
org/apache/parquet/hadoop/thrift/ThriftBytesWriteSupport/prepareForWrite(org.apache.parquet.io.api.RecordConsumer)#org/apache/parquet/thrift/ParquetWriteProtocol/ParquetWriteProtocol(org.apache.parquet.io.api.RecordConsumer,org.apache.parquet.io.MessageColumnIO,org.apache.parquet.thrift.struct.ThriftType.StructType)
org/apache/parquet/hadoop/thrift/ThriftBytesWriteSupport/prepareForWrite(org.apache.parquet.io.api.RecordConsumer)#org/apache/parquet/io/ColumnIOFactory/ColumnIOFactory()
org/apache/parquet/hadoop/thrift/ThriftBytesWriteSupport/prepareForWrite(org.apache.parquet.io.api.RecordConsumer)#org/apache/parquet/hadoop/thrift/AbstractThriftWriteSupport/prepareForWrite(org.apache.parquet.io.api.RecordConsumer)
org/apache/parquet/column/values/factory/DefaultV1ValuesWriterFactory/getInt96ValuesWriter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/values/factory/DefaultV1ValuesWriterFactory/getEncodingForDictionaryPage()
org/apache/parquet/column/values/factory/DefaultV1ValuesWriterFactory/getInt96ValuesWriter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/ParquetProperties/getInitialSlabSize()
org/apache/parquet/column/values/factory/DefaultV1ValuesWriterFactory/getInt96ValuesWriter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/values/factory/DefaultValuesWriterFactory/dictWriterWithFallBack(org.apache.parquet.column.ColumnDescriptor,org.apache.parquet.column.ParquetProperties,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding,org.apache.parquet.column.values.ValuesWriter)
org/apache/parquet/column/values/factory/DefaultV1ValuesWriterFactory/getInt96ValuesWriter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/ParquetProperties/getPageSizeThreshold()
org/apache/parquet/column/values/factory/DefaultV1ValuesWriterFactory/getInt96ValuesWriter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/values/plain/FixedLenByteArrayPlainValuesWriter/FixedLenByteArrayPlainValuesWriter(int,int,int,org.apache.parquet.bytes.ByteBufferAllocator)
org/apache/parquet/column/values/factory/DefaultV1ValuesWriterFactory/getInt96ValuesWriter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/values/factory/DefaultV1ValuesWriterFactory/getEncodingForDataPage()
org/apache/parquet/column/values/factory/DefaultV1ValuesWriterFactory/getInt96ValuesWriter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/ParquetProperties/getAllocator()
org/apache/parquet/column/values/factory/DefaultV1ValuesWriterFactory/getInt64ValuesWriter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/values/factory/DefaultV1ValuesWriterFactory/getEncodingForDictionaryPage()
org/apache/parquet/column/values/factory/DefaultV1ValuesWriterFactory/getInt64ValuesWriter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/ParquetProperties/getInitialSlabSize()
org/apache/parquet/column/values/factory/DefaultV1ValuesWriterFactory/getInt64ValuesWriter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/values/plain/PlainValuesWriter/PlainValuesWriter(int,int,org.apache.parquet.bytes.ByteBufferAllocator)
org/apache/parquet/column/values/factory/DefaultV1ValuesWriterFactory/getInt64ValuesWriter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/values/factory/DefaultValuesWriterFactory/dictWriterWithFallBack(org.apache.parquet.column.ColumnDescriptor,org.apache.parquet.column.ParquetProperties,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding,org.apache.parquet.column.values.ValuesWriter)
org/apache/parquet/column/values/factory/DefaultV1ValuesWriterFactory/getInt64ValuesWriter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/ParquetProperties/getPageSizeThreshold()
org/apache/parquet/column/values/factory/DefaultV1ValuesWriterFactory/getInt64ValuesWriter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/values/factory/DefaultV1ValuesWriterFactory/getEncodingForDataPage()
org/apache/parquet/column/values/factory/DefaultV1ValuesWriterFactory/getInt64ValuesWriter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/ParquetProperties/getAllocator()
org/apache/parquet/column/values/factory/DefaultV1ValuesWriterFactory/getInt32ValuesWriter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/values/factory/DefaultV1ValuesWriterFactory/getEncodingForDictionaryPage()
org/apache/parquet/column/values/factory/DefaultV1ValuesWriterFactory/getInt32ValuesWriter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/ParquetProperties/getInitialSlabSize()
org/apache/parquet/column/values/factory/DefaultV1ValuesWriterFactory/getInt32ValuesWriter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/values/plain/PlainValuesWriter/PlainValuesWriter(int,int,org.apache.parquet.bytes.ByteBufferAllocator)
org/apache/parquet/column/values/factory/DefaultV1ValuesWriterFactory/getInt32ValuesWriter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/values/factory/DefaultValuesWriterFactory/dictWriterWithFallBack(org.apache.parquet.column.ColumnDescriptor,org.apache.parquet.column.ParquetProperties,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding,org.apache.parquet.column.values.ValuesWriter)
org/apache/parquet/column/values/factory/DefaultV1ValuesWriterFactory/getInt32ValuesWriter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/ParquetProperties/getPageSizeThreshold()
org/apache/parquet/column/values/factory/DefaultV1ValuesWriterFactory/getInt32ValuesWriter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/values/factory/DefaultV1ValuesWriterFactory/getEncodingForDataPage()
org/apache/parquet/column/values/factory/DefaultV1ValuesWriterFactory/getInt32ValuesWriter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/ParquetProperties/getAllocator()
org/apache/parquet/column/values/factory/DefaultV1ValuesWriterFactory/getFixedLenByteArrayValuesWriter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/ColumnDescriptor/getTypeLength()
org/apache/parquet/column/values/factory/DefaultV1ValuesWriterFactory/getFixedLenByteArrayValuesWriter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/ParquetProperties/getPageSizeThreshold()
org/apache/parquet/column/values/factory/DefaultV1ValuesWriterFactory/getFixedLenByteArrayValuesWriter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/ParquetProperties/getInitialSlabSize()
org/apache/parquet/column/values/factory/DefaultV1ValuesWriterFactory/getFixedLenByteArrayValuesWriter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/values/plain/FixedLenByteArrayPlainValuesWriter/FixedLenByteArrayPlainValuesWriter(int,int,int,org.apache.parquet.bytes.ByteBufferAllocator)
org/apache/parquet/column/values/factory/DefaultV1ValuesWriterFactory/getFixedLenByteArrayValuesWriter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/ParquetProperties/getAllocator()
org/apache/parquet/column/values/factory/DefaultV1ValuesWriterFactory/getBooleanValuesWriter()#org/apache/parquet/column/values/plain/BooleanPlainValuesWriter/BooleanPlainValuesWriter()
org/apache/parquet/column/values/factory/DefaultV1ValuesWriterFactory/getBinaryValuesWriter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/values/factory/DefaultV1ValuesWriterFactory/getEncodingForDictionaryPage()
org/apache/parquet/column/values/factory/DefaultV1ValuesWriterFactory/getBinaryValuesWriter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/ParquetProperties/getInitialSlabSize()
org/apache/parquet/column/values/factory/DefaultV1ValuesWriterFactory/getBinaryValuesWriter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/values/plain/PlainValuesWriter/PlainValuesWriter(int,int,org.apache.parquet.bytes.ByteBufferAllocator)
org/apache/parquet/column/values/factory/DefaultV1ValuesWriterFactory/getBinaryValuesWriter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/values/factory/DefaultValuesWriterFactory/dictWriterWithFallBack(org.apache.parquet.column.ColumnDescriptor,org.apache.parquet.column.ParquetProperties,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding,org.apache.parquet.column.values.ValuesWriter)
org/apache/parquet/column/values/factory/DefaultV1ValuesWriterFactory/getBinaryValuesWriter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/ParquetProperties/getPageSizeThreshold()
org/apache/parquet/column/values/factory/DefaultV1ValuesWriterFactory/getBinaryValuesWriter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/values/factory/DefaultV1ValuesWriterFactory/getEncodingForDataPage()
org/apache/parquet/column/values/factory/DefaultV1ValuesWriterFactory/getBinaryValuesWriter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/ParquetProperties/getAllocator()
org/apache/parquet/column/values/factory/DefaultV1ValuesWriterFactory/getFloatValuesWriter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/values/factory/DefaultV1ValuesWriterFactory/getEncodingForDictionaryPage()
org/apache/parquet/column/values/factory/DefaultV1ValuesWriterFactory/getFloatValuesWriter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/ParquetProperties/getInitialSlabSize()
org/apache/parquet/column/values/factory/DefaultV1ValuesWriterFactory/getFloatValuesWriter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/values/plain/PlainValuesWriter/PlainValuesWriter(int,int,org.apache.parquet.bytes.ByteBufferAllocator)
org/apache/parquet/column/values/factory/DefaultV1ValuesWriterFactory/getFloatValuesWriter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/values/factory/DefaultValuesWriterFactory/dictWriterWithFallBack(org.apache.parquet.column.ColumnDescriptor,org.apache.parquet.column.ParquetProperties,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding,org.apache.parquet.column.values.ValuesWriter)
org/apache/parquet/column/values/factory/DefaultV1ValuesWriterFactory/getFloatValuesWriter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/ParquetProperties/getPageSizeThreshold()
org/apache/parquet/column/values/factory/DefaultV1ValuesWriterFactory/getFloatValuesWriter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/values/factory/DefaultV1ValuesWriterFactory/getEncodingForDataPage()
org/apache/parquet/column/values/factory/DefaultV1ValuesWriterFactory/getFloatValuesWriter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/ParquetProperties/getAllocator()
org/apache/parquet/column/values/factory/DefaultV1ValuesWriterFactory/newValuesWriter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/values/factory/DefaultV1ValuesWriterFactory/getInt96ValuesWriter(org.apache.parquet.column.ColumnDescriptor)
org/apache/parquet/column/values/factory/DefaultV1ValuesWriterFactory/newValuesWriter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/values/factory/DefaultV1ValuesWriterFactory/getInt64ValuesWriter(org.apache.parquet.column.ColumnDescriptor)
org/apache/parquet/column/values/factory/DefaultV1ValuesWriterFactory/newValuesWriter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/values/factory/DefaultV1ValuesWriterFactory/getInt32ValuesWriter(org.apache.parquet.column.ColumnDescriptor)
org/apache/parquet/column/values/factory/DefaultV1ValuesWriterFactory/newValuesWriter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/values/factory/DefaultV1ValuesWriterFactory/getBooleanValuesWriter()
org/apache/parquet/column/values/factory/DefaultV1ValuesWriterFactory/newValuesWriter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/values/factory/DefaultV1ValuesWriterFactory/getBinaryValuesWriter(org.apache.parquet.column.ColumnDescriptor)
org/apache/parquet/column/values/factory/DefaultV1ValuesWriterFactory/newValuesWriter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/values/factory/DefaultV1ValuesWriterFactory/getFloatValuesWriter(org.apache.parquet.column.ColumnDescriptor)
org/apache/parquet/column/values/factory/DefaultV1ValuesWriterFactory/newValuesWriter(org.apache.parquet.column.ColumnDescriptor)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/parquet/column/values/factory/DefaultV1ValuesWriterFactory/newValuesWriter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/values/factory/DefaultV1ValuesWriterFactory/getDoubleValuesWriter(org.apache.parquet.column.ColumnDescriptor)
org/apache/parquet/column/values/factory/DefaultV1ValuesWriterFactory/newValuesWriter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/values/factory/DefaultV1ValuesWriterFactory/getFixedLenByteArrayValuesWriter(org.apache.parquet.column.ColumnDescriptor)
org/apache/parquet/column/values/factory/DefaultV1ValuesWriterFactory/newValuesWriter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/ColumnDescriptor/getType()
org/apache/parquet/column/values/factory/DefaultV1ValuesWriterFactory/getDoubleValuesWriter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/values/factory/DefaultV1ValuesWriterFactory/getEncodingForDictionaryPage()
org/apache/parquet/column/values/factory/DefaultV1ValuesWriterFactory/getDoubleValuesWriter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/ParquetProperties/getInitialSlabSize()
org/apache/parquet/column/values/factory/DefaultV1ValuesWriterFactory/getDoubleValuesWriter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/values/plain/PlainValuesWriter/PlainValuesWriter(int,int,org.apache.parquet.bytes.ByteBufferAllocator)
org/apache/parquet/column/values/factory/DefaultV1ValuesWriterFactory/getDoubleValuesWriter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/values/factory/DefaultValuesWriterFactory/dictWriterWithFallBack(org.apache.parquet.column.ColumnDescriptor,org.apache.parquet.column.ParquetProperties,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding,org.apache.parquet.column.values.ValuesWriter)
org/apache/parquet/column/values/factory/DefaultV1ValuesWriterFactory/getDoubleValuesWriter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/ParquetProperties/getPageSizeThreshold()
org/apache/parquet/column/values/factory/DefaultV1ValuesWriterFactory/getDoubleValuesWriter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/values/factory/DefaultV1ValuesWriterFactory/getEncodingForDataPage()
org/apache/parquet/column/values/factory/DefaultV1ValuesWriterFactory/getDoubleValuesWriter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/ParquetProperties/getAllocator()
org/apache/parquet/schema/DecimalMetadata/equals(java.lang.Object)#java/lang/Object/getClass()
org/apache/parquet/format/converter/TestParquetMetadataConverter/testLongStats()#org/apache/parquet/bytes/BytesUtils/bytesToLong(byte[])
org/apache/parquet/format/converter/TestParquetMetadataConverter/testLongStats()#org/apache/parquet/format/converter/ParquetMetadataConverter/toParquetStatistics(org.apache.parquet.column.statistics.Statistics)
org/apache/parquet/format/converter/TestParquetMetadataConverter/testLongStats()#org/apache/parquet/column/statistics/LongStatistics/updateStats(long)
org/apache/parquet/format/converter/TestParquetMetadataConverter/testLongStats()#org/apache/parquet/column/statistics/LongStatistics/LongStatistics()
org/apache/parquet/format/converter/TestParquetMetadataConverter/testLongStats()#org/apache/parquet/column/statistics/Statistics/incrementNumNulls(long)
org/apache/parquet/format/converter/TestParquetMetadataConverter/randomTestFilterMetaData()#org/apache/parquet/format/converter/TestParquetMetadataConverter/verifyAllFilters(org.apache.parquet.format.converter.FileMetaData,long)
org/apache/parquet/format/converter/TestParquetMetadataConverter/randomTestFilterMetaData()#java/lang/Throwable/initCause(java.lang.Throwable)
org/apache/parquet/format/converter/TestParquetMetadataConverter/randomTestFilterMetaData()#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/parquet/format/converter/TestParquetMetadataConverter/randomTestFilterMetaData()#java/util/Random/nextInt(int)
org/apache/parquet/format/converter/TestParquetMetadataConverter/randomTestFilterMetaData()#java/util/Random/Random(long)
org/apache/parquet/format/converter/TestParquetMetadataConverter/randomTestFilterMetaData()#org/apache/parquet/format/converter/TestParquetMetadataConverter/metadata(long[])
org/apache/parquet/format/converter/TestParquetMetadataConverter/randomTestFilterMetaData()#java/lang/System/currentTimeMillis()
org/apache/parquet/format/converter/TestParquetMetadataConverter/randomTestFilterMetaData()#java/util/Arrays/toString(long[])
org/apache/parquet/format/converter/TestParquetMetadataConverter/verifyAllFilters(org.apache.parquet.format.converter.FileMetaData,long)#org/apache/parquet/format/converter/TestParquetMetadataConverter/fileSize(org.apache.parquet.format.converter.FileMetaData)
org/apache/parquet/format/converter/TestParquetMetadataConverter/verifyAllFilters(org.apache.parquet.format.converter.FileMetaData,long)#java/util/Set/size()
org/apache/parquet/format/converter/TestParquetMetadataConverter/verifyAllFilters(org.apache.parquet.format.converter.FileMetaData,long)#org/apache/parquet/format/converter/ParquetMetadataConverter/getOffset(org.apache.parquet.format.converter.RowGroup)
org/apache/parquet/format/converter/TestParquetMetadataConverter/verifyAllFilters(org.apache.parquet.format.converter.FileMetaData,long)#java/util/Set/add(E)
org/apache/parquet/format/converter/TestParquetMetadataConverter/verifyAllFilters(org.apache.parquet.format.converter.FileMetaData,long)#java/util/Set/contains(java.lang.Object)
org/apache/parquet/format/converter/TestParquetMetadataConverter/verifyAllFilters(org.apache.parquet.format.converter.FileMetaData,long)#java/util/TreeSet/TreeSet()
org/apache/parquet/format/converter/TestParquetMetadataConverter/verifyAllFilters(org.apache.parquet.format.converter.FileMetaData,long)#org/apache/parquet/format/converter/TestParquetMetadataConverter/filter(org.apache.parquet.format.converter.FileMetaData,long,long)
org/apache/parquet/format/converter/TestParquetMetadataConverter/verifyMD(org.apache.parquet.format.converter.FileMetaData,long[])#org/apache/parquet/format/converter/ParquetMetadataConverter/getOffset(org.apache.parquet.format.converter.RowGroup)
org/apache/parquet/format/converter/TestParquetMetadataConverter/testBooleanStats()#org/apache/parquet/column/statistics/BooleanStatistics/BooleanStatistics()
org/apache/parquet/format/converter/TestParquetMetadataConverter/testBooleanStats()#org/apache/parquet/format/converter/ParquetMetadataConverter/toParquetStatistics(org.apache.parquet.column.statistics.Statistics)
org/apache/parquet/format/converter/TestParquetMetadataConverter/testBooleanStats()#org/apache/parquet/column/statistics/Statistics/incrementNumNulls(long)
org/apache/parquet/format/converter/TestParquetMetadataConverter/testBooleanStats()#org/apache/parquet/bytes/BytesUtils/bytesToBool(byte[])
org/apache/parquet/format/converter/TestParquetMetadataConverter/testBooleanStats()#org/apache/parquet/column/statistics/BooleanStatistics/updateStats(boolean)
org/apache/parquet/format/converter/TestParquetMetadataConverter/testFindRowGroups()#org/apache/parquet/format/converter/TestParquetMetadataConverter/verifyMD(org.apache.parquet.format.converter.FileMetaData,long[])
org/apache/parquet/format/converter/TestParquetMetadataConverter/testFindRowGroups()#org/apache/parquet/format/converter/TestParquetMetadataConverter/find(org.apache.parquet.format.converter.FileMetaData,java.lang.Long[])
org/apache/parquet/format/converter/TestParquetMetadataConverter/testFindRowGroups()#org/apache/parquet/format/converter/TestParquetMetadataConverter/metadata(long[])
org/apache/parquet/format/converter/TestParquetMetadataConverter/testFindRowGroups()#org/apache/parquet/format/converter/TestParquetMetadataConverter/find(org.apache.parquet.format.converter.FileMetaData,long)
org/apache/parquet/format/converter/TestParquetMetadataConverter/metadata(long[])#java/util/ArrayList/ArrayList()
org/apache/parquet/format/converter/TestParquetMetadataConverter/metadata(long[])#java/util/Collections/emptyList()
org/apache/parquet/format/converter/TestParquetMetadataConverter/metadata(long[])#java/util/Arrays/asList(T[])
org/apache/parquet/format/converter/TestParquetMetadataConverter/metadata(long[])#java/lang/Object/Object()
org/apache/parquet/format/converter/TestParquetMetadataConverter/testFloatStats()#org/apache/parquet/format/converter/ParquetMetadataConverter/toParquetStatistics(org.apache.parquet.column.statistics.Statistics)
org/apache/parquet/format/converter/TestParquetMetadataConverter/testFloatStats()#java/lang/Float/intBitsToFloat(int)
org/apache/parquet/format/converter/TestParquetMetadataConverter/testFloatStats()#org/apache/parquet/column/statistics/FloatStatistics/FloatStatistics()
org/apache/parquet/format/converter/TestParquetMetadataConverter/testFloatStats()#org/apache/parquet/column/statistics/FloatStatistics/updateStats(float)
org/apache/parquet/format/converter/TestParquetMetadataConverter/testFloatStats()#org/apache/parquet/bytes/BytesUtils/bytesToInt(byte[])
org/apache/parquet/format/converter/TestParquetMetadataConverter/testFloatStats()#org/apache/parquet/column/statistics/Statistics/incrementNumNulls(long)
org/apache/parquet/format/converter/TestParquetMetadataConverter/testBinaryStats()#org/apache/parquet/column/statistics/BinaryStatistics/isSmallerThan(long)
org/apache/parquet/format/converter/TestParquetMetadataConverter/testBinaryStats()#org/apache/parquet/format/converter/ParquetMetadataConverter/toParquetStatistics(org.apache.parquet.column.statistics.Statistics)
org/apache/parquet/format/converter/TestParquetMetadataConverter/testBinaryStats()#org/apache/parquet/column/statistics/Statistics/incrementNumNulls(long)
org/apache/parquet/format/converter/TestParquetMetadataConverter/testBinaryStats()#org/apache/parquet/io/api/Binary/fromConstantByteArray(byte[])
org/apache/parquet/format/converter/TestParquetMetadataConverter/testBinaryStats()#org/apache/parquet/column/statistics/Statistics/isEmpty()
org/apache/parquet/format/converter/TestParquetMetadataConverter/testBinaryStats()#org/apache/parquet/format/converter/ParquetMetadataConverter/fromParquetStatisticsInternal(java.lang.String,org.apache.parquet.format.converter.Statistics,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.format.converter.ParquetMetadataConverter.SortOrder)
org/apache/parquet/format/converter/TestParquetMetadataConverter/testBinaryStats()#org/apache/parquet/column/statistics/BinaryStatistics/updateStats(org.apache.parquet.io.api.Binary)
org/apache/parquet/format/converter/TestParquetMetadataConverter/testBinaryStats()#org/apache/parquet/column/statistics/BinaryStatistics/BinaryStatistics()
org/apache/parquet/format/converter/TestParquetMetadataConverter/testBinaryStats()#org/apache/parquet/column/statistics/BinaryStatistics/setMinMaxFromBytes(byte[],byte[])
org/apache/parquet/format/converter/TestParquetMetadataConverter/testSchemaConverter()#org/apache/parquet/format/converter/ParquetMetadataConverter/toParquetSchema(org.apache.parquet.schema.MessageType)
org/apache/parquet/format/converter/TestParquetMetadataConverter/testSchemaConverter()#org/apache/parquet/format/converter/ParquetMetadataConverter/fromParquetSchema(java.util.List)
org/apache/parquet/format/converter/TestParquetMetadataConverter/testSchemaConverter()#org/apache/parquet/format/converter/ParquetMetadataConverter/ParquetMetadataConverter()
org/apache/parquet/format/converter/TestParquetMetadataConverter/filter(org.apache.parquet.format.converter.FileMetaData,long,long)#org/apache/parquet/format/converter/ParquetMetadataConverter/RangeMetadataFilter/RangeMetadataFilter(long,long)
org/apache/parquet/format/converter/TestParquetMetadataConverter/filter(org.apache.parquet.format.converter.FileMetaData,long,long)#org/apache/parquet/format/converter/ParquetMetadataConverter/filterFileMetaDataByMidpoint(org.apache.parquet.format.converter.FileMetaData,org.apache.parquet.format.converter.ParquetMetadataConverter.RangeMetadataFilter)
org/apache/parquet/format/converter/TestParquetMetadataConverter/filter(org.apache.parquet.format.converter.FileMetaData,long,long)#java/lang/Object/Object()
org/apache/parquet/format/converter/TestParquetMetadataConverter/testEnumEquivalence()#org/apache/parquet/schema/Type/Repetition/values()
org/apache/parquet/format/converter/TestParquetMetadataConverter/testEnumEquivalence()#org/apache/parquet/schema/OriginalType/values()
org/apache/parquet/format/converter/TestParquetMetadataConverter/testEnumEquivalence()#org/apache/parquet/format/converter/ParquetMetadataConverter/getConvertedType(org.apache.parquet.schema.OriginalType)
org/apache/parquet/format/converter/TestParquetMetadataConverter/testEnumEquivalence()#org/apache/parquet/schema/PrimitiveType/PrimitiveTypeName/values()
org/apache/parquet/format/converter/TestParquetMetadataConverter/testEnumEquivalence()#org/apache/parquet/format/converter/ParquetMetadataConverter/getEncoding(org.apache.parquet.column.Encoding)
org/apache/parquet/format/converter/TestParquetMetadataConverter/testEnumEquivalence()#org/apache/parquet/format/converter/ParquetMetadataConverter/getOriginalType(org.apache.parquet.format.converter.ConvertedType)
org/apache/parquet/format/converter/TestParquetMetadataConverter/testEnumEquivalence()#org/apache/parquet/column/Encoding/values()
org/apache/parquet/format/converter/TestParquetMetadataConverter/testEnumEquivalence()#org/apache/parquet/format/converter/ParquetMetadataConverter/getPrimitive(org.apache.parquet.format.converter.Type)
org/apache/parquet/format/converter/TestParquetMetadataConverter/testEnumEquivalence()#org/apache/parquet/format/converter/ParquetMetadataConverter/ParquetMetadataConverter()
org/apache/parquet/format/converter/TestParquetMetadataConverter/testEnumEquivalence()#org/apache/parquet/format/converter/ParquetMetadataConverter/fromParquetRepetition(org.apache.parquet.format.converter.FieldRepetitionType)
org/apache/parquet/format/converter/TestParquetMetadataConverter/testEnumEquivalence()#org/apache/parquet/format/converter/ParquetMetadataConverter/getEncoding(org.apache.parquet.format.converter.Encoding)
org/apache/parquet/format/converter/TestParquetMetadataConverter/testEnumEquivalence()#org/apache/parquet/format/converter/ParquetMetadataConverter/toParquetRepetition(org.apache.parquet.schema.Type.Repetition)
org/apache/parquet/format/converter/TestParquetMetadataConverter/testEnumEquivalence()#org/apache/parquet/format/converter/ParquetMetadataConverter/getType(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/format/converter/TestParquetMetadataConverter/find(org.apache.parquet.format.converter.FileMetaData,java.lang.Long[])#org/apache/parquet/format/converter/ParquetMetadataConverter/filterFileMetaDataByStart(org.apache.parquet.format.converter.FileMetaData,org.apache.parquet.format.converter.ParquetMetadataConverter.OffsetMetadataFilter)
org/apache/parquet/format/converter/TestParquetMetadataConverter/find(org.apache.parquet.format.converter.FileMetaData,java.lang.Long[])#java/lang/Object/Object()
org/apache/parquet/format/converter/TestParquetMetadataConverter/find(org.apache.parquet.format.converter.FileMetaData,java.lang.Long[])#org/apache/parquet/format/converter/ParquetMetadataConverter/OffsetMetadataFilter/OffsetMetadataFilter(java.util.Set)
org/apache/parquet/format/converter/TestParquetMetadataConverter/testMetadataToJson()#org/apache/parquet/hadoop/metadata/ParquetMetadata/toPrettyJSON(org.apache.parquet.hadoop.metadata.ParquetMetadata)
org/apache/parquet/format/converter/TestParquetMetadataConverter/testMetadataToJson()#org/apache/parquet/hadoop/metadata/ParquetMetadata/toJSON(org.apache.parquet.hadoop.metadata.ParquetMetadata)
org/apache/parquet/format/converter/TestParquetMetadataConverter/testMetadataToJson()#org/apache/parquet/hadoop/metadata/ParquetMetadata/ParquetMetadata(org.apache.parquet.hadoop.metadata.FileMetaData,java.util.List)
org/apache/parquet/format/converter/TestParquetMetadataConverter/testSchemaConverterDecimal()#org/apache/parquet/schema/Types/buildMessage()
org/apache/parquet/format/converter/TestParquetMetadataConverter/testSchemaConverterDecimal()#org/apache/parquet/schema/Types/Builder/named(java.lang.String)
org/apache/parquet/format/converter/TestParquetMetadataConverter/testSchemaConverterDecimal()#org/apache/parquet/schema/Types/Builder/as(org.apache.parquet.schema.OriginalType)
org/apache/parquet/format/converter/TestParquetMetadataConverter/testSchemaConverterDecimal()#org/apache/parquet/schema/Types/BasePrimitiveBuilder/precision(int)
org/apache/parquet/format/converter/TestParquetMetadataConverter/testSchemaConverterDecimal()#org/apache/parquet/schema/Types/BaseGroupBuilder/optional(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/format/converter/TestParquetMetadataConverter/testSchemaConverterDecimal()#org/apache/parquet/schema/Types/BaseGroupBuilder/required(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/format/converter/TestParquetMetadataConverter/testSchemaConverterDecimal()#org/apache/parquet/format/converter/ParquetMetadataConverter/ParquetMetadataConverter()
org/apache/parquet/format/converter/TestParquetMetadataConverter/testSchemaConverterDecimal()#org/apache/parquet/schema/Types/BasePrimitiveBuilder/length(int)
org/apache/parquet/format/converter/TestParquetMetadataConverter/testSchemaConverterDecimal()#org/apache/parquet/format/converter/ParquetMetadataConverter/toParquetSchema(org.apache.parquet.schema.MessageType)
org/apache/parquet/format/converter/TestParquetMetadataConverter/testSchemaConverterDecimal()#org/apache/parquet/schema/Types/BasePrimitiveBuilder/scale(int)
org/apache/parquet/format/converter/TestParquetMetadataConverter/testDoubleStats()#org/apache/parquet/bytes/BytesUtils/bytesToLong(byte[])
org/apache/parquet/format/converter/TestParquetMetadataConverter/testDoubleStats()#org/apache/parquet/format/converter/ParquetMetadataConverter/toParquetStatistics(org.apache.parquet.column.statistics.Statistics)
org/apache/parquet/format/converter/TestParquetMetadataConverter/testDoubleStats()#org/apache/parquet/column/statistics/DoubleStatistics/updateStats(double)
org/apache/parquet/format/converter/TestParquetMetadataConverter/testDoubleStats()#org/apache/parquet/column/statistics/DoubleStatistics/DoubleStatistics()
org/apache/parquet/format/converter/TestParquetMetadataConverter/testDoubleStats()#org/apache/parquet/column/statistics/Statistics/incrementNumNulls(long)
org/apache/parquet/format/converter/TestParquetMetadataConverter/testDoubleStats()#java/lang/Double/longBitsToDouble(long)
org/apache/parquet/format/converter/TestParquetMetadataConverter/testNullFieldMetadataDebugLogging()#java/util/ArrayList/ArrayList()
org/apache/parquet/format/converter/TestParquetMetadataConverter/testNullFieldMetadataDebugLogging()#org/apache/parquet/hadoop/metadata/BlockMetaData/BlockMetaData()
org/apache/parquet/format/converter/TestParquetMetadataConverter/testNullFieldMetadataDebugLogging()#org/apache/parquet/hadoop/metadata/FileMetaData/FileMetaData(org.apache.parquet.schema.MessageType,java.util.Map,java.lang.String)
org/apache/parquet/format/converter/TestParquetMetadataConverter/testNullFieldMetadataDebugLogging()#org/apache/parquet/schema/MessageTypeParser/parseMessageType(java.lang.String)
org/apache/parquet/format/converter/TestParquetMetadataConverter/testNullFieldMetadataDebugLogging()#java/util/HashMap/HashMap()
org/apache/parquet/format/converter/TestParquetMetadataConverter/testNullFieldMetadataDebugLogging()#org/apache/parquet/hadoop/metadata/ParquetMetadata/toJSON(org.apache.parquet.hadoop.metadata.ParquetMetadata)
org/apache/parquet/format/converter/TestParquetMetadataConverter/testNullFieldMetadataDebugLogging()#org/apache/parquet/hadoop/metadata/ParquetMetadata/ParquetMetadata(org.apache.parquet.hadoop.metadata.FileMetaData,java.util.List)
org/apache/parquet/format/converter/TestParquetMetadataConverter/testNullFieldMetadataDebugLogging()#org/apache/parquet/format/converter/TestParquetMetadataConverter/createColumnChunkMetaData()
org/apache/parquet/format/converter/TestParquetMetadataConverter/testNullFieldMetadataDebugLogging()#java/util/List/add(E)
org/apache/parquet/format/converter/TestParquetMetadataConverter/testNullFieldMetadataDebugLogging()#org/apache/parquet/hadoop/metadata/BlockMetaData/addColumn(org.apache.parquet.hadoop.metadata.ColumnChunkMetaData)
org/apache/parquet/format/converter/TestParquetMetadataConverter/testPageHeader()#java/io/ByteArrayInputStream/ByteArrayInputStream(byte[])
org/apache/parquet/format/converter/TestParquetMetadataConverter/testPageHeader()#java/io/ByteArrayOutputStream/toByteArray()
org/apache/parquet/format/converter/TestParquetMetadataConverter/testPageHeader()#java/io/ByteArrayOutputStream/ByteArrayOutputStream()
org/apache/parquet/format/converter/TestParquetMetadataConverter/testPageHeader()#java/lang/Object/Object()
org/apache/parquet/format/converter/TestParquetMetadataConverter/testUseStatsWithSignedSortOrder()#org/apache/parquet/format/converter/ParquetMetadataConverter/fromParquetStatistics(java.lang.String,org.apache.parquet.format.converter.Statistics,org.apache.parquet.schema.PrimitiveType)
org/apache/parquet/format/converter/TestParquetMetadataConverter/testUseStatsWithSignedSortOrder()#org/apache/parquet/format/converter/ParquetMetadataConverter/toParquetStatistics(org.apache.parquet.column.statistics.Statistics)
org/apache/parquet/format/converter/TestParquetMetadataConverter/testUseStatsWithSignedSortOrder()#org/apache/parquet/column/statistics/Statistics/genericGetMin()
org/apache/parquet/format/converter/TestParquetMetadataConverter/testUseStatsWithSignedSortOrder()#org/apache/parquet/schema/Types/Builder/as(org.apache.parquet.schema.OriginalType)
org/apache/parquet/format/converter/TestParquetMetadataConverter/testUseStatsWithSignedSortOrder()#org/apache/parquet/column/statistics/BinaryStatistics/BinaryStatistics()
org/apache/parquet/format/converter/TestParquetMetadataConverter/testUseStatsWithSignedSortOrder()#org/apache/parquet/column/statistics/Statistics/getNumNulls()
org/apache/parquet/format/converter/TestParquetMetadataConverter/testUseStatsWithSignedSortOrder()#org/apache/parquet/io/api/Binary/fromString(java.lang.String)
org/apache/parquet/format/converter/TestParquetMetadataConverter/testUseStatsWithSignedSortOrder()#org/apache/parquet/column/statistics/Statistics/isEmpty()
org/apache/parquet/format/converter/TestParquetMetadataConverter/testUseStatsWithSignedSortOrder()#org/apache/parquet/schema/Types/required(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/format/converter/TestParquetMetadataConverter/testUseStatsWithSignedSortOrder()#org/apache/parquet/column/statistics/Statistics/genericGetMax()
org/apache/parquet/format/converter/TestParquetMetadataConverter/testUseStatsWithSignedSortOrder()#org/apache/parquet/format/converter/ParquetMetadataConverter/ParquetMetadataConverter(org.apache.parquet.hadoop.Configuration)
org/apache/parquet/format/converter/TestParquetMetadataConverter/testUseStatsWithSignedSortOrder()#org/apache/parquet/column/statistics/BinaryStatistics/updateStats(org.apache.parquet.io.api.Binary)
org/apache/parquet/format/converter/TestParquetMetadataConverter/testUseStatsWithSignedSortOrder()#org/apache/parquet/schema/Types/Builder/named(java.lang.String)
org/apache/parquet/format/converter/TestParquetMetadataConverter/testUseStatsWithSignedSortOrder()#org/apache/parquet/column/statistics/Statistics/incrementNumNulls()
org/apache/parquet/format/converter/TestParquetMetadataConverter/testIntegerStats()#org/apache/parquet/format/converter/ParquetMetadataConverter/toParquetStatistics(org.apache.parquet.column.statistics.Statistics)
org/apache/parquet/format/converter/TestParquetMetadataConverter/testIntegerStats()#org/apache/parquet/column/statistics/IntStatistics/updateStats(int)
org/apache/parquet/format/converter/TestParquetMetadataConverter/testIntegerStats()#org/apache/parquet/column/statistics/IntStatistics/IntStatistics()
org/apache/parquet/format/converter/TestParquetMetadataConverter/testIntegerStats()#org/apache/parquet/bytes/BytesUtils/bytesToInt(byte[])
org/apache/parquet/format/converter/TestParquetMetadataConverter/testIntegerStats()#org/apache/parquet/column/statistics/Statistics/incrementNumNulls(long)
org/apache/parquet/format/converter/TestParquetMetadataConverter/testIgnoreStatsWithSignedSortOrder()#org/apache/parquet/format/converter/ParquetMetadataConverter/fromParquetStatistics(java.lang.String,org.apache.parquet.format.converter.Statistics,org.apache.parquet.schema.PrimitiveType)
org/apache/parquet/format/converter/TestParquetMetadataConverter/testIgnoreStatsWithSignedSortOrder()#org/apache/parquet/format/converter/ParquetMetadataConverter/toParquetStatistics(org.apache.parquet.column.statistics.Statistics)
org/apache/parquet/format/converter/TestParquetMetadataConverter/testIgnoreStatsWithSignedSortOrder()#org/apache/parquet/schema/Types/Builder/as(org.apache.parquet.schema.OriginalType)
org/apache/parquet/format/converter/TestParquetMetadataConverter/testIgnoreStatsWithSignedSortOrder()#org/apache/parquet/column/statistics/BinaryStatistics/BinaryStatistics()
org/apache/parquet/format/converter/TestParquetMetadataConverter/testIgnoreStatsWithSignedSortOrder()#org/apache/parquet/io/api/Binary/fromString(java.lang.String)
org/apache/parquet/format/converter/TestParquetMetadataConverter/testIgnoreStatsWithSignedSortOrder()#org/apache/parquet/column/statistics/Statistics/isEmpty()
org/apache/parquet/format/converter/TestParquetMetadataConverter/testIgnoreStatsWithSignedSortOrder()#org/apache/parquet/schema/Types/required(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/format/converter/TestParquetMetadataConverter/testIgnoreStatsWithSignedSortOrder()#org/apache/parquet/format/converter/ParquetMetadataConverter/ParquetMetadataConverter()
org/apache/parquet/format/converter/TestParquetMetadataConverter/testIgnoreStatsWithSignedSortOrder()#org/apache/parquet/column/statistics/BinaryStatistics/updateStats(org.apache.parquet.io.api.Binary)
org/apache/parquet/format/converter/TestParquetMetadataConverter/testIgnoreStatsWithSignedSortOrder()#org/apache/parquet/schema/Types/Builder/named(java.lang.String)
org/apache/parquet/format/converter/TestParquetMetadataConverter/testIgnoreStatsWithSignedSortOrder()#org/apache/parquet/column/statistics/Statistics/incrementNumNulls()
org/apache/parquet/format/converter/TestParquetMetadataConverter/createColumnChunkMetaData()#org/apache/parquet/column/statistics/BinaryStatistics/BinaryStatistics()
org/apache/parquet/format/converter/TestParquetMetadataConverter/createColumnChunkMetaData()#org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/get(org.apache.parquet.hadoop.metadata.ColumnPath,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.hadoop.metadata.CompressionCodecName,java.util.Set,org.apache.parquet.column.statistics.Statistics,long,long,long,long,long)
org/apache/parquet/format/converter/TestParquetMetadataConverter/createColumnChunkMetaData()#java/util/HashSet/HashSet()
org/apache/parquet/format/converter/TestParquetMetadataConverter/createColumnChunkMetaData()#org/apache/parquet/hadoop/metadata/ColumnPath/get(java.lang.String[])
org/apache/parquet/format/converter/TestParquetMetadataConverter/testEncodingsCache()#java/util/Arrays/asList(T[])
org/apache/parquet/format/converter/TestParquetMetadataConverter/testEncodingsCache()#java/util/Set/add(E)
org/apache/parquet/format/converter/TestParquetMetadataConverter/testEncodingsCache()#java/lang/Class/getName()
org/apache/parquet/format/converter/TestParquetMetadataConverter/testEncodingsCache()#java/lang/Object/getClass()
org/apache/parquet/format/converter/TestParquetMetadataConverter/testEncodingsCache()#org/apache/parquet/format/converter/ParquetMetadataConverter/fromFormatEncodings(java.util.List)
org/apache/parquet/format/converter/TestParquetMetadataConverter/testEncodingsCache()#java/util/HashSet/HashSet()
org/apache/parquet/format/converter/TestParquetMetadataConverter/testEncodingsCache()#org/apache/parquet/format/converter/ParquetMetadataConverter/ParquetMetadataConverter()
org/apache/parquet/format/converter/TestParquetMetadataConverter/testFilterMetaData()#org/apache/parquet/format/converter/TestParquetMetadataConverter/verifyAllFilters(org.apache.parquet.format.converter.FileMetaData,long)
org/apache/parquet/format/converter/TestParquetMetadataConverter/testFilterMetaData()#org/apache/parquet/format/converter/TestParquetMetadataConverter/verifyMD(org.apache.parquet.format.converter.FileMetaData,long[])
org/apache/parquet/format/converter/TestParquetMetadataConverter/testFilterMetaData()#org/apache/parquet/format/converter/TestParquetMetadataConverter/metadata(long[])
org/apache/parquet/format/converter/TestParquetMetadataConverter/testFilterMetaData()#org/apache/parquet/format/converter/TestParquetMetadataConverter/filter(org.apache.parquet.format.converter.FileMetaData,long,long)
org/apache/parquet/format/converter/TestParquetMetadataConverter/find(org.apache.parquet.format.converter.FileMetaData,long)#org/apache/parquet/format/converter/ParquetMetadataConverter/filterFileMetaDataByStart(org.apache.parquet.format.converter.FileMetaData,org.apache.parquet.format.converter.ParquetMetadataConverter.OffsetMetadataFilter)
org/apache/parquet/format/converter/TestParquetMetadataConverter/find(org.apache.parquet.format.converter.FileMetaData,long)#java/lang/Object/Object()
org/apache/parquet/format/converter/TestParquetMetadataConverter/find(org.apache.parquet.format.converter.FileMetaData,long)#org/apache/parquet/format/converter/ParquetMetadataConverter/OffsetMetadataFilter/OffsetMetadataFilter(java.util.Set)
org/apache/parquet/hadoop/ClientSideMetadataSplitStrategy/generateSplitInfo(java.util.List,org.apache.parquet.hadoop.BlockLocation[],long,long)#org/apache/parquet/hadoop/ClientSideMetadataSplitStrategy/SplitInfo/getRowGroupCount()
org/apache/parquet/hadoop/ClientSideMetadataSplitStrategy/generateSplitInfo(java.util.List,org.apache.parquet.hadoop.BlockLocation[],long,long)#java/util/ArrayList/ArrayList()
org/apache/parquet/hadoop/ClientSideMetadataSplitStrategy/generateSplitInfo(java.util.List,org.apache.parquet.hadoop.BlockLocation[],long,long)#org/apache/parquet/hadoop/ClientSideMetadataSplitStrategy/HDFSBlocks/HDFSBlocks(org.apache.parquet.hadoop.BlockLocation[])
org/apache/parquet/hadoop/ClientSideMetadataSplitStrategy/generateSplitInfo(java.util.List,org.apache.parquet.hadoop.BlockLocation[],long,long)#org/apache/parquet/hadoop/ClientSideMetadataSplitStrategy/SplitInfo/getCompressedByteSize()
org/apache/parquet/hadoop/ClientSideMetadataSplitStrategy/generateSplitInfo(java.util.List,org.apache.parquet.hadoop.BlockLocation[],long,long)#org/apache/parquet/hadoop/ClientSideMetadataSplitStrategy/HDFSBlocks/getCurrentBlock()
org/apache/parquet/hadoop/ClientSideMetadataSplitStrategy/generateSplitInfo(java.util.List,org.apache.parquet.hadoop.BlockLocation[],long,long)#org/apache/parquet/hadoop/ClientSideMetadataSplitStrategy/SplitInfo/SplitInfo(org.apache.parquet.hadoop.BlockLocation)
org/apache/parquet/hadoop/ClientSideMetadataSplitStrategy/generateSplitInfo(java.util.List,org.apache.parquet.hadoop.BlockLocation[],long,long)#org/apache/parquet/io/ParquetDecodingException/ParquetDecodingException(java.lang.String)
org/apache/parquet/hadoop/ClientSideMetadataSplitStrategy/generateSplitInfo(java.util.List,org.apache.parquet.hadoop.BlockLocation[],long,long)#java/util/List/get(int)
org/apache/parquet/hadoop/ClientSideMetadataSplitStrategy/generateSplitInfo(java.util.List,org.apache.parquet.hadoop.BlockLocation[],long,long)#org/apache/parquet/hadoop/ClientSideMetadataSplitStrategy/SplitInfo/addRowGroup(org.apache.parquet.hadoop.metadata.BlockMetaData)
org/apache/parquet/hadoop/ClientSideMetadataSplitStrategy/generateSplitInfo(java.util.List,org.apache.parquet.hadoop.BlockLocation[],long,long)#org/apache/parquet/hadoop/ClientSideMetadataSplitStrategy/HDFSBlocks/checkBelongingToANewHDFSBlock(org.apache.parquet.hadoop.metadata.BlockMetaData)
org/apache/parquet/hadoop/ClientSideMetadataSplitStrategy/generateSplitInfo(java.util.List,org.apache.parquet.hadoop.BlockLocation[],long,long)#java/util/List/add(E)
org/apache/parquet/hadoop/ClientSideMetadataSplitStrategy/generateSplitInfo(java.util.List,org.apache.parquet.hadoop.BlockLocation[],long,long)#org/apache/parquet/hadoop/ClientSideMetadataSplitStrategy/checkSorted(java.util.List)
org/apache/parquet/hadoop/ClientSideMetadataSplitStrategy/getSplits(org.apache.parquet.hadoop.Configuration,java.util.List,long,long,org.apache.parquet.hadoop.api.ReadSupport.ReadContext)#org/apache/parquet/schema/Type/toString()
org/apache/parquet/hadoop/ClientSideMetadataSplitStrategy/getSplits(org.apache.parquet.hadoop.Configuration,java.util.List,long,long,org.apache.parquet.hadoop.api.ReadSupport.ReadContext)#java/util/ArrayList/ArrayList()
org/apache/parquet/hadoop/ClientSideMetadataSplitStrategy/getSplits(org.apache.parquet.hadoop.Configuration,java.util.List,long,long,org.apache.parquet.hadoop.api.ReadSupport.ReadContext)#org/apache/parquet/hadoop/metadata/ParquetMetadata/getBlocks()
org/apache/parquet/hadoop/ClientSideMetadataSplitStrategy/getSplits(org.apache.parquet.hadoop.Configuration,java.util.List,long,long,org.apache.parquet.hadoop.api.ReadSupport.ReadContext)#org/apache/parquet/hadoop/Footer/getParquetMetadata()
org/apache/parquet/hadoop/ClientSideMetadataSplitStrategy/getSplits(org.apache.parquet.hadoop.Configuration,java.util.List,long,long,org.apache.parquet.hadoop.api.ReadSupport.ReadContext)#org/apache/parquet/hadoop/api/ReadSupport/ReadContext/getReadSupportMetadata()
org/apache/parquet/hadoop/ClientSideMetadataSplitStrategy/getSplits(org.apache.parquet.hadoop.Configuration,java.util.List,long,long,org.apache.parquet.hadoop.api.ReadSupport.ReadContext)#org/apache/parquet/filter2/compat/RowGroupFilter/filterRowGroups(org.apache.parquet.filter2.compat.FilterCompat.Filter,java.util.List,org.apache.parquet.schema.MessageType)
org/apache/parquet/hadoop/ClientSideMetadataSplitStrategy/getSplits(org.apache.parquet.hadoop.Configuration,java.util.List,long,long,org.apache.parquet.hadoop.api.ReadSupport.ReadContext)#org/apache/parquet/hadoop/metadata/ParquetMetadata/getFileMetaData()
org/apache/parquet/hadoop/ClientSideMetadataSplitStrategy/getSplits(org.apache.parquet.hadoop.Configuration,java.util.List,long,long,org.apache.parquet.hadoop.api.ReadSupport.ReadContext)#org/apache/parquet/hadoop/ClientSideMetadataSplitStrategy/generateSplits(java.util.List,org.apache.parquet.hadoop.BlockLocation[],org.apache.parquet.hadoop.FileStatus,java.lang.String,java.util.Map,long,long)
org/apache/parquet/hadoop/ClientSideMetadataSplitStrategy/getSplits(org.apache.parquet.hadoop.Configuration,java.util.List,long,long,org.apache.parquet.hadoop.api.ReadSupport.ReadContext)#org/apache/parquet/hadoop/ParquetInputFormat/getFilter(org.apache.parquet.hadoop.Configuration)
org/apache/parquet/hadoop/ClientSideMetadataSplitStrategy/getSplits(org.apache.parquet.hadoop.Configuration,java.util.List,long,long,org.apache.parquet.hadoop.api.ReadSupport.ReadContext)#java/util/List/isEmpty()
org/apache/parquet/hadoop/ClientSideMetadataSplitStrategy/getSplits(org.apache.parquet.hadoop.Configuration,java.util.List,long,long,org.apache.parquet.hadoop.api.ReadSupport.ReadContext)#org/apache/parquet/hadoop/api/ReadSupport/ReadContext/getRequestedSchema()
org/apache/parquet/hadoop/ClientSideMetadataSplitStrategy/getSplits(org.apache.parquet.hadoop.Configuration,java.util.List,long,long,org.apache.parquet.hadoop.api.ReadSupport.ReadContext)#java/util/List/size()
org/apache/parquet/hadoop/ClientSideMetadataSplitStrategy/getSplits(org.apache.parquet.hadoop.Configuration,java.util.List,long,long,org.apache.parquet.hadoop.api.ReadSupport.ReadContext)#java/util/List/addAll(java.util.Collection)
org/apache/parquet/hadoop/ClientSideMetadataSplitStrategy/getSplits(org.apache.parquet.hadoop.Configuration,java.util.List,long,long,org.apache.parquet.hadoop.api.ReadSupport.ReadContext)#org/apache/parquet/hadoop/Footer/getFile()
org/apache/parquet/hadoop/ClientSideMetadataSplitStrategy/getSplits(org.apache.parquet.hadoop.Configuration,java.util.List,long,long,org.apache.parquet.hadoop.api.ReadSupport.ReadContext)#org/apache/parquet/hadoop/metadata/FileMetaData/getSchema()
org/apache/parquet/hadoop/ClientSideMetadataSplitStrategy/generateSplits(java.util.List,org.apache.parquet.hadoop.BlockLocation[],org.apache.parquet.hadoop.FileStatus,java.lang.String,java.util.Map,long,long)#java/util/ArrayList/ArrayList()
org/apache/parquet/hadoop/ClientSideMetadataSplitStrategy/generateSplits(java.util.List,org.apache.parquet.hadoop.BlockLocation[],org.apache.parquet.hadoop.FileStatus,java.lang.String,java.util.Map,long,long)#org/apache/parquet/hadoop/ClientSideMetadataSplitStrategy/generateSplitInfo(java.util.List,org.apache.parquet.hadoop.BlockLocation[],long,long)
org/apache/parquet/hadoop/ClientSideMetadataSplitStrategy/generateSplits(java.util.List,org.apache.parquet.hadoop.BlockLocation[],org.apache.parquet.hadoop.FileStatus,java.lang.String,java.util.Map,long,long)#org/apache/parquet/hadoop/ClientSideMetadataSplitStrategy/SplitInfo/getParquetInputSplit(org.apache.parquet.hadoop.FileStatus,java.lang.String,java.util.Map)
org/apache/parquet/hadoop/ClientSideMetadataSplitStrategy/generateSplits(java.util.List,org.apache.parquet.hadoop.BlockLocation[],org.apache.parquet.hadoop.FileStatus,java.lang.String,java.util.Map,long,long)#java/util/List/add(E)
org/apache/parquet/hadoop/ClientSideMetadataSplitStrategy/checkSorted(java.util.List)#org/apache/parquet/hadoop/metadata/BlockMetaData/getStartingPos()
org/apache/parquet/hadoop/ClientSideMetadataSplitStrategy/checkSorted(java.util.List)#org/apache/parquet/io/ParquetDecodingException/ParquetDecodingException(java.lang.String)
org/apache/parquet/cascading/convert/TupleConverter/newConverter(org.apache.parquet.schema.Type,int)#org/apache/parquet/cascading/convert/TupleConverter/TuplePrimitiveConverter/TuplePrimitiveConverter(org.apache.parquet.cascading.convert.TupleConverter,int)
org/apache/parquet/cascading/convert/TupleConverter/newConverter(org.apache.parquet.schema.Type,int)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/parquet/cascading/convert/TupleConverter/newConverter(org.apache.parquet.schema.Type,int)#org/apache/parquet/schema/Type/isPrimitive()
org/apache/parquet/pig/summary/BagSummaryData/add(org.apache.parquet.pig.Schema,org.apache.parquet.pig.DataBag)#org/apache/parquet/pig/summary/ValueStat/add(double)
org/apache/parquet/pig/summary/BagSummaryData/add(org.apache.parquet.pig.Schema,org.apache.parquet.pig.DataBag)#org/apache/parquet/pig/summary/FieldSummaryData/setName(java.lang.String)
org/apache/parquet/pig/summary/BagSummaryData/add(org.apache.parquet.pig.Schema,org.apache.parquet.pig.DataBag)#org/apache/parquet/pig/summary/SummaryData/getSchema(org.apache.parquet.pig.convert.FieldSchema)
org/apache/parquet/pig/summary/BagSummaryData/add(org.apache.parquet.pig.Schema,org.apache.parquet.pig.DataBag)#org/apache/parquet/pig/summary/SummaryData/add(java.lang.Object)
org/apache/parquet/pig/summary/BagSummaryData/add(org.apache.parquet.pig.Schema,org.apache.parquet.pig.DataBag)#org/apache/parquet/pig/summary/FieldSummaryData/FieldSummaryData()
org/apache/parquet/pig/summary/BagSummaryData/add(org.apache.parquet.pig.Schema,org.apache.parquet.pig.DataBag)#org/apache/parquet/pig/summary/SummaryData/getField(org.apache.parquet.pig.Schema,int)
org/apache/parquet/pig/summary/BagSummaryData/add(org.apache.parquet.pig.Schema,org.apache.parquet.pig.DataBag)#org/apache/parquet/pig/summary/FieldSummaryData/add(org.apache.parquet.pig.Schema,java.lang.Object)
org/apache/parquet/pig/summary/BagSummaryData/add(org.apache.parquet.pig.Schema,org.apache.parquet.pig.DataBag)#org/apache/parquet/pig/summary/SummaryData/getName(org.apache.parquet.pig.convert.FieldSchema)
org/apache/parquet/pig/summary/BagSummaryData/merge(org.apache.parquet.pig.summary.SummaryData)#org/apache/parquet/pig/summary/SummaryData/merge(T,T)
org/apache/parquet/pig/summary/BagSummaryData/merge(org.apache.parquet.pig.summary.SummaryData)#org/apache/parquet/pig/summary/SummaryData/merge(org.apache.parquet.pig.summary.SummaryData)
org/apache/parquet/pig/summary/BagSummaryData/merge(org.apache.parquet.pig.summary.SummaryData)#org/apache/parquet/pig/summary/ValueStat/merge(org.apache.parquet.pig.summary.ValueStat)
org/apache/parquet/thrift/projection/StrictFieldProjectionFilter/WildcardPathStatus/matches(java.lang.String)#org/apache/parquet/glob/WildcardPath/matches(java.lang.String)
org/apache/parquet/filter2/recordlevel/IncrementallyUpdatedFilterPredicateBuilderBase/visit(org.apache.parquet.filter2.predicate.Operators.Not)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/parquet/filter2/recordlevel/IncrementallyUpdatedFilterPredicateBuilderBase/addValueInspector(org.apache.parquet.hadoop.metadata.ColumnPath,org.apache.parquet.filter2.recordlevel.IncrementallyUpdatedFilterPredicate.ValueInspector)#java/util/ArrayList/ArrayList()
org/apache/parquet/filter2/recordlevel/IncrementallyUpdatedFilterPredicateBuilderBase/addValueInspector(org.apache.parquet.hadoop.metadata.ColumnPath,org.apache.parquet.filter2.recordlevel.IncrementallyUpdatedFilterPredicate.ValueInspector)#java/util/Map/get(java.lang.Object)
org/apache/parquet/filter2/recordlevel/IncrementallyUpdatedFilterPredicateBuilderBase/addValueInspector(org.apache.parquet.hadoop.metadata.ColumnPath,org.apache.parquet.filter2.recordlevel.IncrementallyUpdatedFilterPredicate.ValueInspector)#java/util/List/add(E)
org/apache/parquet/filter2/recordlevel/IncrementallyUpdatedFilterPredicateBuilderBase/addValueInspector(org.apache.parquet.hadoop.metadata.ColumnPath,org.apache.parquet.filter2.recordlevel.IncrementallyUpdatedFilterPredicate.ValueInspector)#java/util/Map/put(K,V)
org/apache/parquet/filter2/recordlevel/IncrementallyUpdatedFilterPredicateBuilderBase/build(org.apache.parquet.filter2.predicate.FilterPredicate)#org/apache/parquet/filter2/predicate/FilterPredicate/accept(org.apache.parquet.filter2.predicate.FilterPredicate.Visitor)
org/apache/parquet/filter2/recordlevel/IncrementallyUpdatedFilterPredicateBuilderBase/build(org.apache.parquet.filter2.predicate.FilterPredicate)#org/apache/parquet/Preconditions/checkArgument(boolean,java.lang.String)
org/apache/parquet/filter2/recordlevel/IncrementallyUpdatedFilterPredicateBuilderBase/visit(org.apache.parquet.filter2.predicate.Operators.And)#org/apache/parquet/filter2/predicate/Operators/BinaryLogicalFilterPredicate/getRight()
org/apache/parquet/filter2/recordlevel/IncrementallyUpdatedFilterPredicateBuilderBase/visit(org.apache.parquet.filter2.predicate.Operators.And)#org/apache/parquet/filter2/predicate/Operators/BinaryLogicalFilterPredicate/getLeft()
org/apache/parquet/filter2/recordlevel/IncrementallyUpdatedFilterPredicateBuilderBase/visit(org.apache.parquet.filter2.predicate.Operators.And)#org/apache/parquet/filter2/predicate/FilterPredicate/accept(org.apache.parquet.filter2.predicate.FilterPredicate.Visitor)
org/apache/parquet/filter2/recordlevel/IncrementallyUpdatedFilterPredicateBuilderBase/visit(org.apache.parquet.filter2.predicate.Operators.And)#org/apache/parquet/filter2/recordlevel/IncrementallyUpdatedFilterPredicate/And/And(org.apache.parquet.filter2.recordlevel.IncrementallyUpdatedFilterPredicate,org.apache.parquet.filter2.recordlevel.IncrementallyUpdatedFilterPredicate)
org/apache/parquet/filter2/recordlevel/IncrementallyUpdatedFilterPredicateBuilderBase/visit(org.apache.parquet.filter2.predicate.Operators.Or)#org/apache/parquet/filter2/predicate/FilterPredicate/accept(org.apache.parquet.filter2.predicate.FilterPredicate.Visitor)
org/apache/parquet/filter2/recordlevel/IncrementallyUpdatedFilterPredicateBuilderBase/visit(org.apache.parquet.filter2.predicate.Operators.Or)#org/apache/parquet/filter2/predicate/Operators/BinaryLogicalFilterPredicate/getRight()
org/apache/parquet/filter2/recordlevel/IncrementallyUpdatedFilterPredicateBuilderBase/visit(org.apache.parquet.filter2.predicate.Operators.Or)#org/apache/parquet/filter2/recordlevel/IncrementallyUpdatedFilterPredicate/Or/Or(org.apache.parquet.filter2.recordlevel.IncrementallyUpdatedFilterPredicate,org.apache.parquet.filter2.recordlevel.IncrementallyUpdatedFilterPredicate)
org/apache/parquet/filter2/recordlevel/IncrementallyUpdatedFilterPredicateBuilderBase/visit(org.apache.parquet.filter2.predicate.Operators.Or)#org/apache/parquet/filter2/predicate/Operators/BinaryLogicalFilterPredicate/getLeft()
org/apache/parquet/thrift/projection/deprecated/DeprecatedFieldProjectionFilter/PathGlobPatternStatus/matches(java.lang.String)#org/apache/parquet/thrift/projection/deprecated/PathGlobPattern/matches(java.lang.CharSequence)
org/apache/parquet/avro/AvroConverters/FieldEnumConverter/convert(org.apache.parquet.io.api.Binary)#org/apache/parquet/io/api/Binary/toStringUsingUTF8()
org/apache/parquet/schema/MessageTypeParser/asPrimitive(java.lang.String,org.apache.parquet.schema.MessageTypeParser.Tokenizer)#java/util/Arrays/toString(java.lang.Object[])
org/apache/parquet/schema/MessageTypeParser/asPrimitive(java.lang.String,org.apache.parquet.schema.MessageTypeParser.Tokenizer)#org/apache/parquet/schema/PrimitiveType/PrimitiveTypeName/values()
org/apache/parquet/schema/MessageTypeParser/asPrimitive(java.lang.String,org.apache.parquet.schema.MessageTypeParser.Tokenizer)#java/lang/String/toUpperCase(java.util.Locale)
org/apache/parquet/schema/MessageTypeParser/asPrimitive(java.lang.String,org.apache.parquet.schema.MessageTypeParser.Tokenizer)#org/apache/parquet/schema/PrimitiveType/PrimitiveTypeName/valueOf(java.lang.String)
org/apache/parquet/schema/MessageTypeParser/asPrimitive(java.lang.String,org.apache.parquet.schema.MessageTypeParser.Tokenizer)#org/apache/parquet/schema/MessageTypeParser/Tokenizer/getLocationString()
org/apache/parquet/schema/MessageTypeParser/asPrimitive(java.lang.String,org.apache.parquet.schema.MessageTypeParser.Tokenizer)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String,java.lang.Throwable)
org/apache/parquet/schema/MessageTypeParser/asRepetition(java.lang.String,org.apache.parquet.schema.MessageTypeParser.Tokenizer)#org/apache/parquet/schema/Type/Repetition/values()
org/apache/parquet/schema/MessageTypeParser/asRepetition(java.lang.String,org.apache.parquet.schema.MessageTypeParser.Tokenizer)#java/util/Arrays/toString(java.lang.Object[])
org/apache/parquet/schema/MessageTypeParser/asRepetition(java.lang.String,org.apache.parquet.schema.MessageTypeParser.Tokenizer)#java/lang/String/toUpperCase(java.util.Locale)
org/apache/parquet/schema/MessageTypeParser/asRepetition(java.lang.String,org.apache.parquet.schema.MessageTypeParser.Tokenizer)#org/apache/parquet/schema/MessageTypeParser/Tokenizer/getLocationString()
org/apache/parquet/schema/MessageTypeParser/asRepetition(java.lang.String,org.apache.parquet.schema.MessageTypeParser.Tokenizer)#org/apache/parquet/schema/Type/Repetition/valueOf(java.lang.String)
org/apache/parquet/schema/MessageTypeParser/asRepetition(java.lang.String,org.apache.parquet.schema.MessageTypeParser.Tokenizer)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String,java.lang.Throwable)
org/apache/parquet/schema/MessageTypeParser/addType(java.lang.String,org.apache.parquet.schema.MessageTypeParser.Tokenizer,org.apache.parquet.schema.Types.GroupBuilder)#org/apache/parquet/schema/MessageTypeParser/asPrimitive(java.lang.String,org.apache.parquet.schema.MessageTypeParser.Tokenizer)
org/apache/parquet/schema/MessageTypeParser/addType(java.lang.String,org.apache.parquet.schema.MessageTypeParser.Tokenizer,org.apache.parquet.schema.Types.GroupBuilder)#java/lang/String/equalsIgnoreCase(java.lang.String)
org/apache/parquet/schema/MessageTypeParser/addType(java.lang.String,org.apache.parquet.schema.MessageTypeParser.Tokenizer,org.apache.parquet.schema.Types.GroupBuilder)#org/apache/parquet/schema/MessageTypeParser/asRepetition(java.lang.String,org.apache.parquet.schema.MessageTypeParser.Tokenizer)
org/apache/parquet/schema/MessageTypeParser/addType(java.lang.String,org.apache.parquet.schema.MessageTypeParser.Tokenizer,org.apache.parquet.schema.Types.GroupBuilder)#org/apache/parquet/schema/MessageTypeParser/addPrimitiveType(org.apache.parquet.schema.MessageTypeParser.Tokenizer,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.schema.Type.Repetition,org.apache.parquet.schema.Types.GroupBuilder)
org/apache/parquet/schema/MessageTypeParser/addType(java.lang.String,org.apache.parquet.schema.MessageTypeParser.Tokenizer,org.apache.parquet.schema.Types.GroupBuilder)#org/apache/parquet/schema/MessageTypeParser/addGroupType(org.apache.parquet.schema.MessageTypeParser.Tokenizer,org.apache.parquet.schema.Type.Repetition,org.apache.parquet.schema.Types.GroupBuilder)
org/apache/parquet/schema/MessageTypeParser/addType(java.lang.String,org.apache.parquet.schema.MessageTypeParser.Tokenizer,org.apache.parquet.schema.Types.GroupBuilder)#org/apache/parquet/schema/MessageTypeParser/Tokenizer/nextToken()
org/apache/parquet/schema/MessageTypeParser/addPrimitiveType(org.apache.parquet.schema.MessageTypeParser.Tokenizer,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.schema.Type.Repetition,org.apache.parquet.schema.Types.GroupBuilder)#java/lang/String/equalsIgnoreCase(java.lang.String)
org/apache/parquet/schema/MessageTypeParser/addPrimitiveType(org.apache.parquet.schema.MessageTypeParser.Tokenizer,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.schema.Type.Repetition,org.apache.parquet.schema.Types.GroupBuilder)#org/apache/parquet/schema/Types/Builder/named(java.lang.String)
org/apache/parquet/schema/MessageTypeParser/addPrimitiveType(org.apache.parquet.schema.MessageTypeParser.Tokenizer,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.schema.Type.Repetition,org.apache.parquet.schema.Types.GroupBuilder)#org/apache/parquet/schema/Types/BasePrimitiveBuilder/scale(int)
org/apache/parquet/schema/MessageTypeParser/addPrimitiveType(org.apache.parquet.schema.MessageTypeParser.Tokenizer,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.schema.Type.Repetition,org.apache.parquet.schema.Types.GroupBuilder)#org/apache/parquet/schema/Types/Builder/as(org.apache.parquet.schema.OriginalType)
org/apache/parquet/schema/MessageTypeParser/addPrimitiveType(org.apache.parquet.schema.MessageTypeParser.Tokenizer,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.schema.Type.Repetition,org.apache.parquet.schema.Types.GroupBuilder)#java/lang/String/equals(java.lang.Object)
org/apache/parquet/schema/MessageTypeParser/addPrimitiveType(org.apache.parquet.schema.MessageTypeParser.Tokenizer,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.schema.Type.Repetition,org.apache.parquet.schema.Types.GroupBuilder)#org/apache/parquet/schema/MessageTypeParser/check(java.lang.String,java.lang.String,java.lang.String,org.apache.parquet.schema.MessageTypeParser.Tokenizer)
org/apache/parquet/schema/MessageTypeParser/addPrimitiveType(org.apache.parquet.schema.MessageTypeParser.Tokenizer,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.schema.Type.Repetition,org.apache.parquet.schema.Types.GroupBuilder)#org/apache/parquet/schema/Types/Builder/id(int)
org/apache/parquet/schema/MessageTypeParser/addPrimitiveType(org.apache.parquet.schema.MessageTypeParser.Tokenizer,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.schema.Type.Repetition,org.apache.parquet.schema.Types.GroupBuilder)#java/lang/Integer/parseInt(java.lang.String)
org/apache/parquet/schema/MessageTypeParser/addPrimitiveType(org.apache.parquet.schema.MessageTypeParser.Tokenizer,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.schema.Type.Repetition,org.apache.parquet.schema.Types.GroupBuilder)#org/apache/parquet/schema/Types/BasePrimitiveBuilder/precision(int)
org/apache/parquet/schema/MessageTypeParser/addPrimitiveType(org.apache.parquet.schema.MessageTypeParser.Tokenizer,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.schema.Type.Repetition,org.apache.parquet.schema.Types.GroupBuilder)#org/apache/parquet/schema/OriginalType/valueOf(java.lang.String)
org/apache/parquet/schema/MessageTypeParser/addPrimitiveType(org.apache.parquet.schema.MessageTypeParser.Tokenizer,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.schema.Type.Repetition,org.apache.parquet.schema.Types.GroupBuilder)#org/apache/parquet/schema/Types/BaseGroupBuilder/primitive(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.schema.Type.Repetition)
org/apache/parquet/schema/MessageTypeParser/addPrimitiveType(org.apache.parquet.schema.MessageTypeParser.Tokenizer,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.schema.Type.Repetition,org.apache.parquet.schema.Types.GroupBuilder)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/parquet/schema/MessageTypeParser/addPrimitiveType(org.apache.parquet.schema.MessageTypeParser.Tokenizer,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.schema.Type.Repetition,org.apache.parquet.schema.Types.GroupBuilder)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String,java.lang.Throwable)
org/apache/parquet/schema/MessageTypeParser/addPrimitiveType(org.apache.parquet.schema.MessageTypeParser.Tokenizer,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.schema.Type.Repetition,org.apache.parquet.schema.Types.GroupBuilder)#org/apache/parquet/schema/Types/BasePrimitiveBuilder/length(int)
org/apache/parquet/schema/MessageTypeParser/addPrimitiveType(org.apache.parquet.schema.MessageTypeParser.Tokenizer,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.schema.Type.Repetition,org.apache.parquet.schema.Types.GroupBuilder)#org/apache/parquet/schema/MessageTypeParser/Tokenizer/nextToken()
org/apache/parquet/schema/MessageTypeParser/addGroupType(org.apache.parquet.schema.MessageTypeParser.Tokenizer,org.apache.parquet.schema.Type.Repetition,org.apache.parquet.schema.Types.GroupBuilder)#java/lang/String/equalsIgnoreCase(java.lang.String)
org/apache/parquet/schema/MessageTypeParser/addGroupType(org.apache.parquet.schema.MessageTypeParser.Tokenizer,org.apache.parquet.schema.Type.Repetition,org.apache.parquet.schema.Types.GroupBuilder)#org/apache/parquet/schema/Types/Builder/named(java.lang.String)
org/apache/parquet/schema/MessageTypeParser/addGroupType(org.apache.parquet.schema.MessageTypeParser.Tokenizer,org.apache.parquet.schema.Type.Repetition,org.apache.parquet.schema.Types.GroupBuilder)#org/apache/parquet/schema/Types/Builder/as(org.apache.parquet.schema.OriginalType)
org/apache/parquet/schema/MessageTypeParser/addGroupType(org.apache.parquet.schema.MessageTypeParser.Tokenizer,org.apache.parquet.schema.Type.Repetition,org.apache.parquet.schema.Types.GroupBuilder)#java/lang/String/equals(java.lang.Object)
org/apache/parquet/schema/MessageTypeParser/addGroupType(org.apache.parquet.schema.MessageTypeParser.Tokenizer,org.apache.parquet.schema.Type.Repetition,org.apache.parquet.schema.Types.GroupBuilder)#org/apache/parquet/schema/MessageTypeParser/check(java.lang.String,java.lang.String,java.lang.String,org.apache.parquet.schema.MessageTypeParser.Tokenizer)
org/apache/parquet/schema/MessageTypeParser/addGroupType(org.apache.parquet.schema.MessageTypeParser.Tokenizer,org.apache.parquet.schema.Type.Repetition,org.apache.parquet.schema.Types.GroupBuilder)#org/apache/parquet/schema/Types/BaseGroupBuilder/group(org.apache.parquet.schema.Type.Repetition)
org/apache/parquet/schema/MessageTypeParser/addGroupType(org.apache.parquet.schema.MessageTypeParser.Tokenizer,org.apache.parquet.schema.Type.Repetition,org.apache.parquet.schema.Types.GroupBuilder)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String,java.lang.Throwable)
org/apache/parquet/schema/MessageTypeParser/addGroupType(org.apache.parquet.schema.MessageTypeParser.Tokenizer,org.apache.parquet.schema.Type.Repetition,org.apache.parquet.schema.Types.GroupBuilder)#org/apache/parquet/schema/MessageTypeParser/addGroupTypeFields(java.lang.String,org.apache.parquet.schema.MessageTypeParser.Tokenizer,org.apache.parquet.schema.Types.GroupBuilder)
org/apache/parquet/schema/MessageTypeParser/addGroupType(org.apache.parquet.schema.MessageTypeParser.Tokenizer,org.apache.parquet.schema.Type.Repetition,org.apache.parquet.schema.Types.GroupBuilder)#org/apache/parquet/schema/Types/Builder/id(int)
org/apache/parquet/schema/MessageTypeParser/addGroupType(org.apache.parquet.schema.MessageTypeParser.Tokenizer,org.apache.parquet.schema.Type.Repetition,org.apache.parquet.schema.Types.GroupBuilder)#org/apache/parquet/schema/MessageTypeParser/Tokenizer/nextToken()
org/apache/parquet/schema/MessageTypeParser/addGroupType(org.apache.parquet.schema.MessageTypeParser.Tokenizer,org.apache.parquet.schema.Type.Repetition,org.apache.parquet.schema.Types.GroupBuilder)#org/apache/parquet/schema/OriginalType/valueOf(java.lang.String)
org/apache/parquet/schema/MessageTypeParser/addGroupType(org.apache.parquet.schema.MessageTypeParser.Tokenizer,org.apache.parquet.schema.Type.Repetition,org.apache.parquet.schema.Types.GroupBuilder)#java/lang/Integer/parseInt(java.lang.String)
org/apache/parquet/schema/MessageTypeParser/parseMessageType(java.lang.String)#org/apache/parquet/schema/MessageTypeParser/parse(java.lang.String)
org/apache/parquet/schema/MessageTypeParser/check(java.lang.String,java.lang.String,java.lang.String,org.apache.parquet.schema.MessageTypeParser.Tokenizer)#java/lang/String/equalsIgnoreCase(java.lang.String)
org/apache/parquet/schema/MessageTypeParser/check(java.lang.String,java.lang.String,java.lang.String,org.apache.parquet.schema.MessageTypeParser.Tokenizer)#org/apache/parquet/schema/MessageTypeParser/Tokenizer/getLocationString()
org/apache/parquet/schema/MessageTypeParser/check(java.lang.String,java.lang.String,java.lang.String,org.apache.parquet.schema.MessageTypeParser.Tokenizer)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/parquet/schema/MessageTypeParser/parse(java.lang.String)#org/apache/parquet/schema/Types/buildMessage()
org/apache/parquet/schema/MessageTypeParser/parse(java.lang.String)#org/apache/parquet/schema/Types/MessageTypeBuilder/named(java.lang.String)
org/apache/parquet/schema/MessageTypeParser/parse(java.lang.String)#org/apache/parquet/schema/MessageTypeParser/Tokenizer/Tokenizer(java.lang.String,java.lang.String)
org/apache/parquet/schema/MessageTypeParser/parse(java.lang.String)#org/apache/parquet/schema/MessageTypeParser/check(java.lang.String,java.lang.String,java.lang.String,org.apache.parquet.schema.MessageTypeParser.Tokenizer)
org/apache/parquet/schema/MessageTypeParser/parse(java.lang.String)#org/apache/parquet/schema/MessageTypeParser/addGroupTypeFields(java.lang.String,org.apache.parquet.schema.MessageTypeParser.Tokenizer,org.apache.parquet.schema.Types.GroupBuilder)
org/apache/parquet/schema/MessageTypeParser/parse(java.lang.String)#org/apache/parquet/schema/MessageTypeParser/Tokenizer/nextToken()
org/apache/parquet/schema/MessageTypeParser/addGroupTypeFields(java.lang.String,org.apache.parquet.schema.MessageTypeParser.Tokenizer,org.apache.parquet.schema.Types.GroupBuilder)#org/apache/parquet/schema/MessageTypeParser/addType(java.lang.String,org.apache.parquet.schema.MessageTypeParser.Tokenizer,org.apache.parquet.schema.Types.GroupBuilder)
org/apache/parquet/schema/MessageTypeParser/addGroupTypeFields(java.lang.String,org.apache.parquet.schema.MessageTypeParser.Tokenizer,org.apache.parquet.schema.Types.GroupBuilder)#java/lang/String/equals(java.lang.Object)
org/apache/parquet/schema/MessageTypeParser/addGroupTypeFields(java.lang.String,org.apache.parquet.schema.MessageTypeParser.Tokenizer,org.apache.parquet.schema.Types.GroupBuilder)#org/apache/parquet/schema/MessageTypeParser/check(java.lang.String,java.lang.String,java.lang.String,org.apache.parquet.schema.MessageTypeParser.Tokenizer)
org/apache/parquet/schema/MessageTypeParser/addGroupTypeFields(java.lang.String,org.apache.parquet.schema.MessageTypeParser.Tokenizer,org.apache.parquet.schema.Types.GroupBuilder)#org/apache/parquet/schema/MessageTypeParser/Tokenizer/nextToken()
org/apache/parquet/column/values/bitpacking/SixBitPackingWriter/write(int)#java/io/OutputStream/write(int)
org/apache/parquet/column/values/bitpacking/SixBitPackingWriter/finish()#org/apache/parquet/column/values/bitpacking/BaseBitPackingWriter/finish(int,int,java.io.OutputStream)
org/apache/parquet/proto/ProtoInputOutputFormatTest/runMRJobs(org.apache.parquet.proto.utils.Message[])#org/apache/parquet/proto/utils/ReadUsingMR/ReadUsingMR()
org/apache/parquet/proto/ProtoInputOutputFormatTest/runMRJobs(org.apache.parquet.proto.utils.Message[])#org/apache/parquet/proto/utils/ReadUsingMR/read(org.apache.parquet.hadoop.Path)
org/apache/parquet/proto/ProtoInputOutputFormatTest/runMRJobs(org.apache.parquet.proto.utils.Message[])#org/apache/parquet/proto/utils/WriteUsingMR/write(org.apache.parquet.proto.utils.Message[])
org/apache/parquet/proto/ProtoInputOutputFormatTest/runMRJobs(org.apache.parquet.proto.utils.Message[])#org/apache/parquet/proto/utils/WriteUsingMR/WriteUsingMR()
org/apache/parquet/proto/ProtoInputOutputFormatTest/testProjection()#org/apache/parquet/proto/utils/ReadUsingMR/ReadUsingMR()
org/apache/parquet/proto/ProtoInputOutputFormatTest/testProjection()#org/apache/parquet/proto/utils/ReadUsingMR/setRequestedProjection(java.lang.String)
org/apache/parquet/proto/ProtoInputOutputFormatTest/testProjection()#org/apache/parquet/proto/utils/ReadUsingMR/read(org.apache.parquet.hadoop.Path)
org/apache/parquet/proto/ProtoInputOutputFormatTest/testProjection()#org/apache/parquet/proto/utils/WriteUsingMR/write(org.apache.parquet.proto.utils.Message[])
org/apache/parquet/proto/ProtoInputOutputFormatTest/testProjection()#org/apache/parquet/proto/utils/WriteUsingMR/WriteUsingMR()
org/apache/parquet/proto/ProtoInputOutputFormatTest/testInputOutput()#org/apache/parquet/proto/ProtoInputOutputFormatTest/runMRJobs(org.apache.parquet.proto.utils.Message[])
org/apache/parquet/proto/ProtoInputOutputFormatTest/testCustomProtoClass()#org/apache/parquet/proto/utils/ReadUsingMR/ReadUsingMR()
org/apache/parquet/proto/ProtoInputOutputFormatTest/testCustomProtoClass()#org/apache/parquet/proto/utils/ReadUsingMR/read(org.apache.parquet.hadoop.Path)
org/apache/parquet/proto/ProtoInputOutputFormatTest/testCustomProtoClass()#org/apache/parquet/proto/utils/ReadUsingMR/getConfiguration()
org/apache/parquet/proto/ProtoInputOutputFormatTest/testCustomProtoClass()#java/lang/Class/getName()
org/apache/parquet/proto/ProtoInputOutputFormatTest/testCustomProtoClass()#org/apache/parquet/proto/utils/WriteUsingMR/write(org.apache.parquet.proto.utils.Message[])
org/apache/parquet/proto/ProtoInputOutputFormatTest/testCustomProtoClass()#org/apache/parquet/proto/ProtoReadSupport/setProtobufClass(org.apache.parquet.hadoop.Configuration,java.lang.String)
org/apache/parquet/proto/ProtoInputOutputFormatTest/testCustomProtoClass()#org/apache/parquet/proto/utils/WriteUsingMR/WriteUsingMR()
org/apache/parquet/thrift/projection/deprecated/PathGlobPatternTest/testRecursiveGlob()#org/apache/parquet/thrift/projection/deprecated/PathGlobPattern/matches(java.lang.CharSequence)
org/apache/parquet/thrift/projection/deprecated/PathGlobPatternTest/testRecursiveGlob()#org/apache/parquet/thrift/projection/deprecated/PathGlobPattern/PathGlobPattern(java.lang.String)
org/apache/parquet/thrift/projection/deprecated/PathGlobPatternTest/testStandardGlob()#org/apache/parquet/thrift/projection/deprecated/PathGlobPattern/matches(java.lang.CharSequence)
org/apache/parquet/thrift/projection/deprecated/PathGlobPatternTest/testStandardGlob()#org/apache/parquet/thrift/projection/deprecated/PathGlobPattern/PathGlobPattern(java.lang.String)
org/apache/parquet/thrift/ThriftRecordConverter/CollectionConverter/getConverter(int)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/parquet/thrift/ThriftRecordConverter/CollectionConverter/end()#org/apache/parquet/thrift/ThriftRecordConverter/Counter/getCount()
org/apache/parquet/thrift/ThriftRecordConverter/CollectionConverter/end()#org/apache/parquet/thrift/ThriftRecordConverter/CollectionConverter/collectionEnd()
org/apache/parquet/thrift/ThriftRecordConverter/CollectionConverter/end()#org/apache/parquet/thrift/ThriftRecordConverter/CollectionConverter/collectionStart(int,byte)
org/apache/parquet/thrift/ThriftRecordConverter/CollectionConverter/end()#org/apache/parquet/thrift/struct/ThriftTypeID/getThriftType()
org/apache/parquet/thrift/ThriftRecordConverter/CollectionConverter/end()#org/apache/parquet/thrift/ThriftRecordConverter/ElementConverter/getNullElementCount()
org/apache/parquet/thrift/ThriftRecordConverter/CollectionConverter/start()#org/apache/parquet/thrift/ThriftRecordConverter/Counter/startCounting()
org/apache/parquet/thrift/ThriftRecordConverter/ListConverter/collectionStart(int,byte)#org/apache/parquet/thrift/ThriftRecordConverter/ListConverter/collectionStart(int,byte)/$anonymous1/(java.lang.String)
org/apache/parquet/proto/ProtoMessageConverter/ProtoFloatConverter/addFloat(float)#org/apache/parquet/proto/ProtoMessageConverter/ParentValueContainer/add(java.lang.Object)
org/apache/parquet/avro/TestReflectInputOutputFormat/Stereo/hashCode()#java/lang/String/hashCode()
org/apache/parquet/avro/TestReflectInputOutputFormat/Stereo/equals(java.lang.Object)#java/lang/String/equals(java.lang.Object)
org/apache/parquet/avro/TestReflectInputOutputFormat/Stereo/equals(java.lang.Object)#java/lang/Object/getClass()
org/apache/parquet/Files/readAllLines(java.io.File,java.nio.charset.Charset)#java/io/BufferedReader/close()
org/apache/parquet/Files/readAllLines(java.io.File,java.nio.charset.Charset)#java/util/ArrayList/ArrayList()
org/apache/parquet/Files/readAllLines(java.io.File,java.nio.charset.Charset)#java/io/InputStreamReader/InputStreamReader(java.io.InputStream,java.nio.charset.Charset)
org/apache/parquet/Files/readAllLines(java.io.File,java.nio.charset.Charset)#java/io/FileInputStream/FileInputStream(java.io.File)
org/apache/parquet/Files/readAllLines(java.io.File,java.nio.charset.Charset)#java/io/BufferedReader/BufferedReader(java.io.Reader)
org/apache/parquet/Files/readAllLines(java.io.File,java.nio.charset.Charset)#java/io/BufferedReader/readLine()
org/apache/parquet/Files/readAllLines(java.io.File,java.nio.charset.Charset)#java/util/List/add(E)
org/apache/parquet/io/TestColumnIO/testRequiredOfRequired()#org/apache/parquet/example/data/simple/SimpleGroupFactory/SimpleGroupFactory(org.apache.parquet.schema.MessageType)
org/apache/parquet/io/TestColumnIO/testRequiredOfRequired()#org/apache/parquet/schema/MessageTypeParser/parseMessageType(java.lang.String)
org/apache/parquet/io/TestColumnIO/testRequiredOfRequired()#java/util/Arrays/asList(T[])
org/apache/parquet/io/TestColumnIO/testRequiredOfRequired()#org/apache/parquet/example/data/GroupFactory/newGroup()
org/apache/parquet/io/TestColumnIO/testRequiredOfRequired()#org/apache/parquet/example/data/Group/append(java.lang.String,long)
org/apache/parquet/io/TestColumnIO/testRequiredOfRequired()#org/apache/parquet/io/TestColumnIO/testSchema(org.apache.parquet.schema.MessageType,java.util.List)
org/apache/parquet/io/TestColumnIO/testRequiredOfRequired()#org/apache/parquet/example/data/Group/addGroup(java.lang.String)
org/apache/parquet/io/TestColumnIO/getRecordReader(org.apache.parquet.io.MessageColumnIO,org.apache.parquet.schema.MessageType,org.apache.parquet.column.page.PageReadStore)#org/apache/parquet/example/data/simple/convert/GroupRecordConverter/GroupRecordConverter(org.apache.parquet.schema.MessageType)
org/apache/parquet/io/TestColumnIO/getRecordReader(org.apache.parquet.io.MessageColumnIO,org.apache.parquet.schema.MessageType,org.apache.parquet.column.page.PageReadStore)#org/apache/parquet/io/MessageColumnIO/getRecordReader(org.apache.parquet.column.page.PageReadStore,org.apache.parquet.io.api.RecordMaterializer)
org/apache/parquet/io/TestColumnIO/data()#java/util/Arrays/asList(T[])
org/apache/parquet/io/TestColumnIO/testGroupWriter()#java/util/ArrayList/ArrayList()
org/apache/parquet/io/TestColumnIO/testGroupWriter()#java/lang/Object/toString()
org/apache/parquet/io/TestColumnIO/testGroupWriter()#org/apache/parquet/example/data/GroupWriter/GroupWriter(org.apache.parquet.io.api.RecordConsumer,org.apache.parquet.schema.GroupType)
org/apache/parquet/io/TestColumnIO/testGroupWriter()#org/apache/parquet/io/RecordConsumerLoggingWrapper/RecordConsumerLoggingWrapper(org.apache.parquet.io.api.RecordConsumer)
org/apache/parquet/io/TestColumnIO/testGroupWriter()#org/apache/parquet/example/data/GroupWriter/write(org.apache.parquet.example.data.Group)
org/apache/parquet/io/TestColumnIO/testGroupWriter()#org/apache/parquet/example/data/simple/convert/GroupRecordConverter/GroupRecordConverter(org.apache.parquet.schema.MessageType)
org/apache/parquet/io/TestColumnIO/testGroupWriter()#org/apache/parquet/example/data/simple/convert/GroupRecordConverter/getCurrentRecord()
org/apache/parquet/io/TestColumnIO/testGroupWriter()#org/apache/parquet/io/ConverterConsumer/ConverterConsumer(org.apache.parquet.io.api.GroupConverter,org.apache.parquet.schema.MessageType)
org/apache/parquet/io/TestColumnIO/testGroupWriter()#java/util/List/add(E)
org/apache/parquet/io/TestColumnIO/testGroupWriter()#org/apache/parquet/example/data/simple/convert/GroupRecordConverter/getRootConverter()
org/apache/parquet/io/TestColumnIO/testGroupWriter()#org/apache/parquet/example/data/simple/SimpleGroup/toString()
org/apache/parquet/io/TestColumnIO/testGroupWriter()#java/util/List/get(int)
org/apache/parquet/io/TestColumnIO/testReadUsingRequestedSchemaWithIncompatibleField()#org/apache/parquet/column/page/mem/MemPageStore/MemPageStore(long)
org/apache/parquet/io/TestColumnIO/testReadUsingRequestedSchemaWithIncompatibleField()#org/apache/parquet/schema/PrimitiveType/PrimitiveType(org.apache.parquet.schema.Type.Repetition,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,java.lang.String)
org/apache/parquet/io/TestColumnIO/testReadUsingRequestedSchemaWithIncompatibleField()#org/apache/parquet/example/data/Group/append(java.lang.String,int)
org/apache/parquet/io/TestColumnIO/testReadUsingRequestedSchemaWithIncompatibleField()#org/apache/parquet/io/TestColumnIO/readGroups(org.apache.parquet.column.page.mem.MemPageStore,org.apache.parquet.schema.MessageType,org.apache.parquet.schema.MessageType,int)
org/apache/parquet/io/TestColumnIO/testReadUsingRequestedSchemaWithIncompatibleField()#org/apache/parquet/io/TestColumnIO/writeGroups(org.apache.parquet.schema.MessageType,org.apache.parquet.column.page.mem.MemPageStore,org.apache.parquet.example.data.Group[])
org/apache/parquet/io/TestColumnIO/testReadUsingRequestedSchemaWithIncompatibleField()#org/apache/parquet/schema/MessageType/MessageType(java.lang.String,org.apache.parquet.schema.Type[])
org/apache/parquet/io/TestColumnIO/testReadUsingRequestedSchemaWithIncompatibleField()#org/apache/parquet/example/data/simple/SimpleGroupFactory/newGroup()
org/apache/parquet/io/TestColumnIO/testReadUsingRequestedSchemaWithIncompatibleField()#org/apache/parquet/example/data/simple/SimpleGroupFactory/SimpleGroupFactory(org.apache.parquet.schema.MessageType)
org/apache/parquet/io/TestColumnIO/testReadUsingRequestedSchemaWithIncompatibleField()#java/lang/Throwable/getMessage()
org/apache/parquet/io/TestColumnIO/testReadUsingRequestedSchemaWithExtraFields()#org/apache/parquet/schema/PrimitiveType/PrimitiveType(org.apache.parquet.schema.Type.Repetition,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,java.lang.String)
org/apache/parquet/io/TestColumnIO/testReadUsingRequestedSchemaWithExtraFields()#org/apache/parquet/example/data/Group/append(java.lang.String,int)
org/apache/parquet/io/TestColumnIO/testReadUsingRequestedSchemaWithExtraFields()#org/apache/parquet/example/data/simple/SimpleGroupFactory/SimpleGroupFactory(org.apache.parquet.schema.MessageType)
org/apache/parquet/io/TestColumnIO/testReadUsingRequestedSchemaWithExtraFields()#java/util/List/addAll(java.util.Collection)
org/apache/parquet/io/TestColumnIO/testReadUsingRequestedSchemaWithExtraFields()#org/apache/parquet/io/TestColumnIO/validateGroups(java.util.List,java.lang.Object[][])
org/apache/parquet/io/TestColumnIO/testReadUsingRequestedSchemaWithExtraFields()#org/apache/parquet/io/TestColumnIO/readGroups(org.apache.parquet.column.page.mem.MemPageStore,org.apache.parquet.schema.MessageType,org.apache.parquet.schema.MessageType,int)
org/apache/parquet/io/TestColumnIO/testReadUsingRequestedSchemaWithExtraFields()#org/apache/parquet/io/TestColumnIO/writeGroups(org.apache.parquet.schema.MessageType,org.apache.parquet.column.page.mem.MemPageStore,org.apache.parquet.example.data.Group[])
org/apache/parquet/io/TestColumnIO/testReadUsingRequestedSchemaWithExtraFields()#org/apache/parquet/schema/MessageType/MessageType(java.lang.String,org.apache.parquet.schema.Type[])
org/apache/parquet/io/TestColumnIO/testReadUsingRequestedSchemaWithExtraFields()#org/apache/parquet/example/data/simple/SimpleGroupFactory/newGroup()
org/apache/parquet/io/TestColumnIO/testReadUsingRequestedSchemaWithExtraFields()#org/apache/parquet/column/page/mem/MemPageStore/MemPageStore(long)
org/apache/parquet/io/TestColumnIO/testReadUsingRequestedSchemaWithExtraFields()#java/util/ArrayList/ArrayList()
org/apache/parquet/io/TestColumnIO/testReadUsingProjectedSchema()#org/apache/parquet/schema/PrimitiveType/PrimitiveType(org.apache.parquet.schema.Type.Repetition,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,java.lang.String)
org/apache/parquet/io/TestColumnIO/testReadUsingProjectedSchema()#org/apache/parquet/example/data/Group/append(java.lang.String,int)
org/apache/parquet/io/TestColumnIO/testReadUsingProjectedSchema()#org/apache/parquet/example/data/simple/SimpleGroupFactory/SimpleGroupFactory(org.apache.parquet.schema.MessageType)
org/apache/parquet/io/TestColumnIO/testReadUsingProjectedSchema()#java/util/List/addAll(java.util.Collection)
org/apache/parquet/io/TestColumnIO/testReadUsingProjectedSchema()#org/apache/parquet/io/TestColumnIO/validateGroups(java.util.List,java.lang.Object[][])
org/apache/parquet/io/TestColumnIO/testReadUsingProjectedSchema()#org/apache/parquet/io/TestColumnIO/readGroups(org.apache.parquet.column.page.mem.MemPageStore,org.apache.parquet.schema.MessageType,org.apache.parquet.schema.MessageType,int)
org/apache/parquet/io/TestColumnIO/testReadUsingProjectedSchema()#org/apache/parquet/io/TestColumnIO/writeGroups(org.apache.parquet.schema.MessageType,org.apache.parquet.column.page.mem.MemPageStore,org.apache.parquet.example.data.Group[])
org/apache/parquet/io/TestColumnIO/testReadUsingProjectedSchema()#org/apache/parquet/schema/MessageType/MessageType(java.lang.String,org.apache.parquet.schema.Type[])
org/apache/parquet/io/TestColumnIO/testReadUsingProjectedSchema()#org/apache/parquet/example/data/simple/SimpleGroupFactory/newGroup()
org/apache/parquet/io/TestColumnIO/testReadUsingProjectedSchema()#org/apache/parquet/column/page/mem/MemPageStore/MemPageStore(long)
org/apache/parquet/io/TestColumnIO/testReadUsingProjectedSchema()#java/util/ArrayList/ArrayList()
org/apache/parquet/io/TestColumnIO/testEmptyField()#org/apache/parquet/io/api/RecordConsumer/addLong(long)
org/apache/parquet/io/TestColumnIO/testEmptyField()#org/apache/parquet/column/page/mem/MemPageStore/MemPageStore(long)
org/apache/parquet/io/TestColumnIO/testEmptyField()#org/apache/parquet/io/api/RecordConsumer/startField(java.lang.String,int)
org/apache/parquet/io/TestColumnIO/testEmptyField()#org/apache/parquet/io/ColumnIOFactory/getColumnIO(org.apache.parquet.schema.MessageType)
org/apache/parquet/io/TestColumnIO/testEmptyField()#org/apache/parquet/io/TestColumnIO/newColumnWriteStore(org.apache.parquet.column.page.mem.MemPageStore)
org/apache/parquet/io/TestColumnIO/testEmptyField()#org/apache/parquet/io/MessageColumnIO/getRecordWriter(org.apache.parquet.column.ColumnWriteStore)
org/apache/parquet/io/TestColumnIO/testEmptyField()#org/apache/parquet/io/ColumnIOFactory/ColumnIOFactory(boolean)
org/apache/parquet/io/TestColumnIO/testEmptyField()#org/apache/parquet/io/api/RecordConsumer/startMessage()
org/apache/parquet/io/TestColumnIO/testEmptyField()#java/lang/Throwable/getMessage()
org/apache/parquet/io/TestColumnIO/testEmptyField()#org/apache/parquet/io/api/RecordConsumer/endField(java.lang.String,int)
org/apache/parquet/io/TestColumnIO/testWriteWithGroupWriter()#org/apache/parquet/io/api/RecordConsumer/flush()
org/apache/parquet/io/TestColumnIO/testWriteWithGroupWriter()#org/apache/parquet/example/data/GroupWriter/write(org.apache.parquet.example.data.Group)
org/apache/parquet/io/TestColumnIO/testWriteWithGroupWriter()#org/apache/parquet/io/ColumnIOFactory/getColumnIO(org.apache.parquet.schema.MessageType)
org/apache/parquet/io/TestColumnIO/testWriteWithGroupWriter()#org/apache/parquet/io/ValidatingColumnWriteStore/ValidatingColumnWriteStore(java.lang.String[])
org/apache/parquet/io/TestColumnIO/testWriteWithGroupWriter()#org/apache/parquet/io/ColumnIOFactory/ColumnIOFactory()
org/apache/parquet/io/TestColumnIO/testWriteWithGroupWriter()#org/apache/parquet/io/ValidatingColumnWriteStore/validate()
org/apache/parquet/io/TestColumnIO/testWriteWithGroupWriter()#org/apache/parquet/example/data/GroupWriter/GroupWriter(org.apache.parquet.io.api.RecordConsumer,org.apache.parquet.schema.GroupType)
org/apache/parquet/io/TestColumnIO/testWriteWithGroupWriter()#org/apache/parquet/io/ValidatingColumnWriteStore/close()
org/apache/parquet/io/TestColumnIO/testWriteWithGroupWriter()#org/apache/parquet/io/ValidatingColumnWriteStore/flush()
org/apache/parquet/io/TestColumnIO/testWriteWithGroupWriter()#org/apache/parquet/io/MessageColumnIO/getRecordWriter(org.apache.parquet.column.ColumnWriteStore)
org/apache/parquet/io/TestColumnIO/testPushParser()#org/apache/parquet/column/page/mem/MemPageStore/MemPageStore(long)
org/apache/parquet/io/TestColumnIO/testPushParser()#org/apache/parquet/io/api/RecordConsumer/flush()
org/apache/parquet/io/TestColumnIO/testPushParser()#org/apache/parquet/example/data/GroupWriter/GroupWriter(org.apache.parquet.io.api.RecordConsumer,org.apache.parquet.schema.GroupType)
org/apache/parquet/io/TestColumnIO/testPushParser()#org/apache/parquet/example/data/GroupWriter/write(org.apache.parquet.example.data.Group)
org/apache/parquet/io/TestColumnIO/testPushParser()#org/apache/parquet/column/impl/ColumnWriteStoreV1/flush()
org/apache/parquet/io/TestColumnIO/testPushParser()#org/apache/parquet/io/ColumnIOFactory/getColumnIO(org.apache.parquet.schema.MessageType)
org/apache/parquet/io/TestColumnIO/testPushParser()#org/apache/parquet/io/TestColumnIO/newColumnWriteStore(org.apache.parquet.column.page.mem.MemPageStore)
org/apache/parquet/io/TestColumnIO/testPushParser()#org/apache/parquet/io/MessageColumnIO/getRecordWriter(org.apache.parquet.column.ColumnWriteStore)
org/apache/parquet/io/TestColumnIO/testPushParser()#org/apache/parquet/io/RecordReader/read()
org/apache/parquet/io/TestColumnIO/testPushParser()#org/apache/parquet/io/ColumnIOFactory/ColumnIOFactory()
org/apache/parquet/io/TestColumnIO/testPushParser()#org/apache/parquet/io/MessageColumnIO/getRecordReader(org.apache.parquet.column.page.PageReadStore,org.apache.parquet.io.api.RecordMaterializer)
org/apache/parquet/io/TestColumnIO/testPushParser()#org/apache/parquet/io/ExpectationValidatingConverter/ExpectationValidatingConverter(java.lang.String[],org.apache.parquet.schema.MessageType)
org/apache/parquet/io/TestColumnIO/newColumnWriteStore(org.apache.parquet.column.page.mem.MemPageStore)#org/apache/parquet/column/ParquetProperties/Builder/withPageSize(int)
org/apache/parquet/io/TestColumnIO/newColumnWriteStore(org.apache.parquet.column.page.mem.MemPageStore)#org/apache/parquet/column/ParquetProperties/Builder/build()
org/apache/parquet/io/TestColumnIO/newColumnWriteStore(org.apache.parquet.column.page.mem.MemPageStore)#org/apache/parquet/column/ParquetProperties/builder()
org/apache/parquet/io/TestColumnIO/newColumnWriteStore(org.apache.parquet.column.page.mem.MemPageStore)#org/apache/parquet/column/ParquetProperties/Builder/withDictionaryPageSize(int)
org/apache/parquet/io/TestColumnIO/newColumnWriteStore(org.apache.parquet.column.page.mem.MemPageStore)#org/apache/parquet/column/impl/ColumnWriteStoreV1/ColumnWriteStoreV1(org.apache.parquet.column.page.PageWriteStore,org.apache.parquet.column.ParquetProperties)
org/apache/parquet/io/TestColumnIO/newColumnWriteStore(org.apache.parquet.column.page.mem.MemPageStore)#org/apache/parquet/column/ParquetProperties/Builder/withDictionaryEncoding(boolean)
org/apache/parquet/io/TestColumnIO/testSchema(org.apache.parquet.schema.MessageType,java.util.List)#java/lang/Object/toString()
org/apache/parquet/io/TestColumnIO/testSchema(org.apache.parquet.schema.MessageType,java.util.List)#org/apache/parquet/example/data/GroupWriter/GroupWriter(org.apache.parquet.io.api.RecordConsumer,org.apache.parquet.schema.GroupType)
org/apache/parquet/io/TestColumnIO/testSchema(org.apache.parquet.schema.MessageType,java.util.List)#org/apache/parquet/example/data/GroupWriter/write(org.apache.parquet.example.data.Group)
org/apache/parquet/io/TestColumnIO/testSchema(org.apache.parquet.schema.MessageType,java.util.List)#org/apache/parquet/column/impl/ColumnWriteStoreV1/flush()
org/apache/parquet/io/TestColumnIO/testSchema(org.apache.parquet.schema.MessageType,java.util.List)#java/util/List/size()
org/apache/parquet/io/TestColumnIO/testSchema(org.apache.parquet.schema.MessageType,java.util.List)#org/apache/parquet/io/TestColumnIO/newColumnWriteStore(org.apache.parquet.column.page.mem.MemPageStore)
org/apache/parquet/io/TestColumnIO/testSchema(org.apache.parquet.schema.MessageType,java.util.List)#org/apache/parquet/io/MessageColumnIO/getRecordWriter(org.apache.parquet.column.ColumnWriteStore)
org/apache/parquet/io/TestColumnIO/testSchema(org.apache.parquet.schema.MessageType,java.util.List)#org/apache/parquet/io/ColumnIOFactory/ColumnIOFactory(boolean)
org/apache/parquet/io/TestColumnIO/testSchema(org.apache.parquet.schema.MessageType,java.util.List)#org/apache/parquet/column/page/mem/MemPageStore/MemPageStore(long)
org/apache/parquet/io/TestColumnIO/testSchema(org.apache.parquet.schema.MessageType,java.util.List)#org/apache/parquet/io/TestColumnIO/log(java.lang.Object)
org/apache/parquet/io/TestColumnIO/testSchema(org.apache.parquet.schema.MessageType,java.util.List)#org/apache/parquet/io/RecordReaderImplementation/read()
org/apache/parquet/io/TestColumnIO/testSchema(org.apache.parquet.schema.MessageType,java.util.List)#org/apache/parquet/io/api/RecordConsumer/flush()
org/apache/parquet/io/TestColumnIO/testSchema(org.apache.parquet.schema.MessageType,java.util.List)#org/apache/parquet/io/TestColumnIO/getRecordReader(org.apache.parquet.io.MessageColumnIO,org.apache.parquet.schema.MessageType,org.apache.parquet.column.page.PageReadStore)
org/apache/parquet/io/TestColumnIO/testSchema(org.apache.parquet.schema.MessageType,java.util.List)#org/apache/parquet/io/ColumnIOFactory/getColumnIO(org.apache.parquet.schema.MessageType)
org/apache/parquet/io/TestColumnIO/validateGroups(java.util.List,java.lang.Object[][])#java/util/Iterator/next()
org/apache/parquet/io/TestColumnIO/validateGroups(java.util.List,java.lang.Object[][])#org/apache/parquet/example/data/GroupValueSource/getFieldRepetitionCount(int)
org/apache/parquet/io/TestColumnIO/validateGroups(java.util.List,java.lang.Object[][])#java/util/List/iterator()
org/apache/parquet/io/TestColumnIO/validateGroups(java.util.List,java.lang.Object[][])#org/apache/parquet/example/data/GroupValueSource/getInteger(int,int)
org/apache/parquet/io/TestColumnIO/testOptionalRequiredInteraction()#org/apache/parquet/example/data/Group/addGroup(int)
org/apache/parquet/io/TestColumnIO/testOptionalRequiredInteraction()#java/util/ArrayList/ArrayList()
org/apache/parquet/io/TestColumnIO/testOptionalRequiredInteraction()#org/apache/parquet/schema/PrimitiveType/PrimitiveType(org.apache.parquet.schema.Type.Repetition,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,java.lang.String)
org/apache/parquet/io/TestColumnIO/testOptionalRequiredInteraction()#org/apache/parquet/example/data/simple/SimpleGroupFactory/SimpleGroupFactory(org.apache.parquet.schema.MessageType)
org/apache/parquet/io/TestColumnIO/testOptionalRequiredInteraction()#org/apache/parquet/schema/GroupType/GroupType(org.apache.parquet.schema.Type.Repetition,java.lang.String,org.apache.parquet.schema.Type[])
org/apache/parquet/io/TestColumnIO/testOptionalRequiredInteraction()#org/apache/parquet/example/data/GroupFactory/newGroup()
org/apache/parquet/io/TestColumnIO/testOptionalRequiredInteraction()#org/apache/parquet/io/TestColumnIO/testSchema(org.apache.parquet.schema.MessageType,java.util.List)
org/apache/parquet/io/TestColumnIO/testOptionalRequiredInteraction()#org/apache/parquet/io/api/Binary/fromString(java.lang.String)
org/apache/parquet/io/TestColumnIO/testOptionalRequiredInteraction()#org/apache/parquet/example/data/Group/add(int,org.apache.parquet.io.api.Binary)
org/apache/parquet/io/TestColumnIO/testOptionalRequiredInteraction()#java/util/List/add(E)
org/apache/parquet/io/TestColumnIO/testOptionalRequiredInteraction()#org/apache/parquet/schema/MessageType/MessageType(java.lang.String,org.apache.parquet.schema.Type[])
org/apache/parquet/io/TestColumnIO/testColumnIO()#java/lang/Object/toString()
org/apache/parquet/io/TestColumnIO/testColumnIO()#org/apache/parquet/example/data/GroupWriter/GroupWriter(org.apache.parquet.io.api.RecordConsumer,org.apache.parquet.schema.GroupType)
org/apache/parquet/io/TestColumnIO/testColumnIO()#org/apache/parquet/example/data/GroupWriter/write(org.apache.parquet.example.data.Group)
org/apache/parquet/io/TestColumnIO/testColumnIO()#org/apache/parquet/column/impl/ColumnWriteStoreV1/flush()
org/apache/parquet/io/TestColumnIO/testColumnIO()#org/apache/parquet/io/TestColumnIO/newColumnWriteStore(org.apache.parquet.column.page.mem.MemPageStore)
org/apache/parquet/io/TestColumnIO/testColumnIO()#org/apache/parquet/io/MessageColumnIO/getRecordWriter(org.apache.parquet.column.ColumnWriteStore)
org/apache/parquet/io/TestColumnIO/testColumnIO()#org/apache/parquet/io/ColumnIOFactory/ColumnIOFactory(boolean)
org/apache/parquet/io/TestColumnIO/testColumnIO()#org/apache/parquet/column/page/mem/MemPageStore/MemPageStore(long)
org/apache/parquet/io/TestColumnIO/testColumnIO()#org/apache/parquet/io/TestColumnIO/log(java.lang.Object)
org/apache/parquet/io/TestColumnIO/testColumnIO()#java/util/ArrayList/ArrayList()
org/apache/parquet/io/TestColumnIO/testColumnIO()#org/apache/parquet/io/RecordReaderImplementation/read()
org/apache/parquet/io/TestColumnIO/testColumnIO()#org/apache/parquet/io/api/RecordConsumer/flush()
org/apache/parquet/io/TestColumnIO/testColumnIO()#org/apache/parquet/io/TestColumnIO/getRecordReader(org.apache.parquet.io.MessageColumnIO,org.apache.parquet.schema.MessageType,org.apache.parquet.column.page.PageReadStore)
org/apache/parquet/io/TestColumnIO/testColumnIO()#org/apache/parquet/io/ColumnIOFactory/getColumnIO(org.apache.parquet.schema.MessageType)
org/apache/parquet/io/TestColumnIO/testColumnIO()#org/apache/parquet/io/TestColumnIO/validateFSA(int[][],org.apache.parquet.io.MessageColumnIO,org.apache.parquet.io.RecordReaderImplementation)
org/apache/parquet/io/TestColumnIO/testColumnIO()#java/util/List/add(E)
org/apache/parquet/io/TestColumnIO/testColumnIO()#org/apache/parquet/example/data/simple/SimpleGroup/toString()
org/apache/parquet/io/TestColumnIO/testColumnIO()#java/util/List/get(int)
org/apache/parquet/io/TestColumnIO/validateFSA(int[][],org.apache.parquet.io.MessageColumnIO,org.apache.parquet.io.RecordReaderImplementation)#org/apache/parquet/io/ColumnIO/getFieldPath()
org/apache/parquet/io/TestColumnIO/validateFSA(int[][],org.apache.parquet.io.MessageColumnIO,org.apache.parquet.io.RecordReaderImplementation)#org/apache/parquet/io/TestColumnIO/log(java.lang.Object)
org/apache/parquet/io/TestColumnIO/validateFSA(int[][],org.apache.parquet.io.MessageColumnIO,org.apache.parquet.io.RecordReaderImplementation)#java/util/Arrays/toString(java.lang.Object[])
org/apache/parquet/io/TestColumnIO/validateFSA(int[][],org.apache.parquet.io.MessageColumnIO,org.apache.parquet.io.RecordReaderImplementation)#org/apache/parquet/io/MessageColumnIO/getLeaves()
org/apache/parquet/io/TestColumnIO/validateFSA(int[][],org.apache.parquet.io.MessageColumnIO,org.apache.parquet.io.RecordReaderImplementation)#org/apache/parquet/io/RecordReaderImplementation/getNextLevel(int,int)
org/apache/parquet/io/TestColumnIO/validateFSA(int[][],org.apache.parquet.io.MessageColumnIO,org.apache.parquet.io.RecordReaderImplementation)#java/util/List/size()
org/apache/parquet/io/TestColumnIO/validateFSA(int[][],org.apache.parquet.io.MessageColumnIO,org.apache.parquet.io.RecordReaderImplementation)#java/util/List/get(int)
org/apache/parquet/io/TestColumnIO/validateFSA(int[][],org.apache.parquet.io.MessageColumnIO,org.apache.parquet.io.RecordReaderImplementation)#org/apache/parquet/io/RecordReaderImplementation/getNextReader(int,int)
org/apache/parquet/io/TestColumnIO/readGroups(org.apache.parquet.column.page.mem.MemPageStore,org.apache.parquet.schema.MessageType,org.apache.parquet.schema.MessageType,int)#java/util/ArrayList/ArrayList()
org/apache/parquet/io/TestColumnIO/readGroups(org.apache.parquet.column.page.mem.MemPageStore,org.apache.parquet.schema.MessageType,org.apache.parquet.schema.MessageType,int)#org/apache/parquet/io/RecordReaderImplementation/read()
org/apache/parquet/io/TestColumnIO/readGroups(org.apache.parquet.column.page.mem.MemPageStore,org.apache.parquet.schema.MessageType,org.apache.parquet.schema.MessageType,int)#org/apache/parquet/io/TestColumnIO/getRecordReader(org.apache.parquet.io.MessageColumnIO,org.apache.parquet.schema.MessageType,org.apache.parquet.column.page.PageReadStore)
org/apache/parquet/io/TestColumnIO/readGroups(org.apache.parquet.column.page.mem.MemPageStore,org.apache.parquet.schema.MessageType,org.apache.parquet.schema.MessageType,int)#org/apache/parquet/io/ColumnIOFactory/ColumnIOFactory(boolean)
org/apache/parquet/io/TestColumnIO/readGroups(org.apache.parquet.column.page.mem.MemPageStore,org.apache.parquet.schema.MessageType,org.apache.parquet.schema.MessageType,int)#org/apache/parquet/io/ColumnIOFactory/getColumnIO(org.apache.parquet.schema.MessageType,org.apache.parquet.schema.MessageType)
org/apache/parquet/io/TestColumnIO/readGroups(org.apache.parquet.column.page.mem.MemPageStore,org.apache.parquet.schema.MessageType,org.apache.parquet.schema.MessageType,int)#java/util/List/add(E)
org/apache/parquet/io/TestColumnIO/testSchema()#org/apache/parquet/schema/Type/toString()
org/apache/parquet/io/TestColumnIO/writeGroups(org.apache.parquet.schema.MessageType,org.apache.parquet.column.page.mem.MemPageStore,org.apache.parquet.example.data.Group[])#org/apache/parquet/io/api/RecordConsumer/flush()
org/apache/parquet/io/TestColumnIO/writeGroups(org.apache.parquet.schema.MessageType,org.apache.parquet.column.page.mem.MemPageStore,org.apache.parquet.example.data.Group[])#org/apache/parquet/example/data/GroupWriter/GroupWriter(org.apache.parquet.io.api.RecordConsumer,org.apache.parquet.schema.GroupType)
org/apache/parquet/io/TestColumnIO/writeGroups(org.apache.parquet.schema.MessageType,org.apache.parquet.column.page.mem.MemPageStore,org.apache.parquet.example.data.Group[])#org/apache/parquet/example/data/GroupWriter/write(org.apache.parquet.example.data.Group)
org/apache/parquet/io/TestColumnIO/writeGroups(org.apache.parquet.schema.MessageType,org.apache.parquet.column.page.mem.MemPageStore,org.apache.parquet.example.data.Group[])#org/apache/parquet/column/impl/ColumnWriteStoreV1/flush()
org/apache/parquet/io/TestColumnIO/writeGroups(org.apache.parquet.schema.MessageType,org.apache.parquet.column.page.mem.MemPageStore,org.apache.parquet.example.data.Group[])#org/apache/parquet/io/ColumnIOFactory/getColumnIO(org.apache.parquet.schema.MessageType)
org/apache/parquet/io/TestColumnIO/writeGroups(org.apache.parquet.schema.MessageType,org.apache.parquet.column.page.mem.MemPageStore,org.apache.parquet.example.data.Group[])#org/apache/parquet/io/TestColumnIO/newColumnWriteStore(org.apache.parquet.column.page.mem.MemPageStore)
org/apache/parquet/io/TestColumnIO/writeGroups(org.apache.parquet.schema.MessageType,org.apache.parquet.column.page.mem.MemPageStore,org.apache.parquet.example.data.Group[])#org/apache/parquet/io/MessageColumnIO/getRecordWriter(org.apache.parquet.column.ColumnWriteStore)
org/apache/parquet/io/TestColumnIO/writeGroups(org.apache.parquet.schema.MessageType,org.apache.parquet.column.page.mem.MemPageStore,org.apache.parquet.example.data.Group[])#org/apache/parquet/io/ColumnIOFactory/ColumnIOFactory(boolean)
org/apache/parquet/io/TestColumnIO/testReadUsingSchemaWithRequiredFieldThatWasOptional()#org/apache/parquet/column/page/mem/MemPageStore/MemPageStore(long)
org/apache/parquet/io/TestColumnIO/testReadUsingSchemaWithRequiredFieldThatWasOptional()#org/apache/parquet/schema/PrimitiveType/PrimitiveType(org.apache.parquet.schema.Type.Repetition,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,java.lang.String)
org/apache/parquet/io/TestColumnIO/testReadUsingSchemaWithRequiredFieldThatWasOptional()#org/apache/parquet/example/data/Group/append(java.lang.String,int)
org/apache/parquet/io/TestColumnIO/testReadUsingSchemaWithRequiredFieldThatWasOptional()#org/apache/parquet/io/TestColumnIO/readGroups(org.apache.parquet.column.page.mem.MemPageStore,org.apache.parquet.schema.MessageType,org.apache.parquet.schema.MessageType,int)
org/apache/parquet/io/TestColumnIO/testReadUsingSchemaWithRequiredFieldThatWasOptional()#org/apache/parquet/io/TestColumnIO/writeGroups(org.apache.parquet.schema.MessageType,org.apache.parquet.column.page.mem.MemPageStore,org.apache.parquet.example.data.Group[])
org/apache/parquet/io/TestColumnIO/testReadUsingSchemaWithRequiredFieldThatWasOptional()#org/apache/parquet/schema/MessageType/MessageType(java.lang.String,org.apache.parquet.schema.Type[])
org/apache/parquet/io/TestColumnIO/testReadUsingSchemaWithRequiredFieldThatWasOptional()#org/apache/parquet/example/data/simple/SimpleGroupFactory/newGroup()
org/apache/parquet/io/TestColumnIO/testReadUsingSchemaWithRequiredFieldThatWasOptional()#org/apache/parquet/example/data/simple/SimpleGroupFactory/SimpleGroupFactory(org.apache.parquet.schema.MessageType)
org/apache/parquet/io/TestColumnIO/testReadUsingSchemaWithRequiredFieldThatWasOptional()#java/lang/Throwable/getMessage()
org/apache/parquet/io/TestColumnIO/testOneOfEach()#org/apache/parquet/example/data/simple/NanoTime/NanoTime(int,long)
org/apache/parquet/io/TestColumnIO/testOneOfEach()#org/apache/parquet/example/data/Group/append(java.lang.String,int)
org/apache/parquet/io/TestColumnIO/testOneOfEach()#org/apache/parquet/example/data/Group/append(java.lang.String,org.apache.parquet.example.data.simple.NanoTime)
org/apache/parquet/io/TestColumnIO/testOneOfEach()#org/apache/parquet/example/data/simple/SimpleGroupFactory/SimpleGroupFactory(org.apache.parquet.schema.MessageType)
org/apache/parquet/io/TestColumnIO/testOneOfEach()#org/apache/parquet/io/api/Binary/fromString(java.lang.String)
org/apache/parquet/io/TestColumnIO/testOneOfEach()#java/lang/System/currentTimeMillis()
org/apache/parquet/io/TestColumnIO/testOneOfEach()#org/apache/parquet/example/data/Group/append(java.lang.String,double)
org/apache/parquet/io/TestColumnIO/testOneOfEach()#org/apache/parquet/example/data/Group/append(java.lang.String,float)
org/apache/parquet/io/TestColumnIO/testOneOfEach()#org/apache/parquet/example/data/Group/append(java.lang.String,org.apache.parquet.io.api.Binary)
org/apache/parquet/io/TestColumnIO/testOneOfEach()#org/apache/parquet/schema/MessageTypeParser/parseMessageType(java.lang.String)
org/apache/parquet/io/TestColumnIO/testOneOfEach()#java/util/Arrays/asList(T[])
org/apache/parquet/io/TestColumnIO/testOneOfEach()#org/apache/parquet/example/data/GroupFactory/newGroup()
org/apache/parquet/io/TestColumnIO/testOneOfEach()#org/apache/parquet/example/data/Group/append(java.lang.String,long)
org/apache/parquet/io/TestColumnIO/testOneOfEach()#org/apache/parquet/io/TestColumnIO/testSchema(org.apache.parquet.schema.MessageType,java.util.List)
org/apache/parquet/io/TestColumnIO/testOneOfEach()#org/apache/parquet/example/data/Group/append(java.lang.String,boolean)
org/apache/parquet/column/EncodingStats/hasNonDictionaryEncodedPages()#java/util/Map/isEmpty()
org/apache/parquet/column/EncodingStats/hasNonDictionaryEncodedPages()#java/util/Map/keySet()
org/apache/parquet/column/EncodingStats/hasNonDictionaryEncodedPages()#java/util/Set/isEmpty()
org/apache/parquet/column/EncodingStats/hasNonDictionaryEncodedPages()#java/util/Set/remove(java.lang.Object)
org/apache/parquet/column/EncodingStats/hasNonDictionaryEncodedPages()#java/util/HashSet/HashSet(java.util.Collection)
org/apache/parquet/column/EncodingStats/getDataEncodings()#java/util/Map/keySet()
org/apache/parquet/column/EncodingStats/hasDictionaryEncodedPages()#java/util/Map/keySet()
org/apache/parquet/column/EncodingStats/hasDictionaryEncodedPages()#java/util/Set/contains(java.lang.Object)
org/apache/parquet/column/EncodingStats/getNumDataPagesEncodedAs(org.apache.parquet.column.Encoding)#java/util/Map/get(java.lang.Object)
org/apache/parquet/column/EncodingStats/getNumDataPagesEncodedAs(org.apache.parquet.column.Encoding)#java/util/Map/containsKey(java.lang.Object)
org/apache/parquet/column/EncodingStats/getNumDictionaryPagesEncodedAs(org.apache.parquet.column.Encoding)#java/util/Map/get(java.lang.Object)
org/apache/parquet/column/EncodingStats/getNumDictionaryPagesEncodedAs(org.apache.parquet.column.Encoding)#java/util/Map/containsKey(java.lang.Object)
org/apache/parquet/column/EncodingStats/getDictionaryEncodings()#java/util/Map/keySet()
org/apache/parquet/column/EncodingStats/hasDictionaryPages()#java/util/Map/isEmpty()
org/apache/parquet/schema/PrimitiveType/hashCode()#org/apache/parquet/schema/DecimalMetadata/hashCode()
org/apache/parquet/schema/PrimitiveType/hashCode()#org/apache/parquet/schema/Type/hashCode()
org/apache/parquet/schema/PrimitiveType/hashCode()#java/lang/Enum/hashCode()
org/apache/parquet/schema/PrimitiveType/checkContains(org.apache.parquet.schema.Type)#org/apache/parquet/schema/Type/asPrimitiveType()
org/apache/parquet/schema/PrimitiveType/checkContains(org.apache.parquet.schema.Type)#org/apache/parquet/schema/Type/checkContains(org.apache.parquet.schema.Type)
org/apache/parquet/schema/PrimitiveType/checkContains(org.apache.parquet.schema.Type)#org/apache/parquet/io/InvalidRecordException/InvalidRecordException(java.lang.String)
org/apache/parquet/schema/PrimitiveType/checkContains(org.apache.parquet.schema.Type)#org/apache/parquet/schema/Type/isPrimitive()
org/apache/parquet/schema/PrimitiveType/accept(org.apache.parquet.schema.TypeVisitor)#org/apache/parquet/schema/TypeVisitor/visit(org.apache.parquet.schema.PrimitiveType)
org/apache/parquet/schema/PrimitiveType/getMaxDefinitionLevel(java.lang.String[],int)#org/apache/parquet/schema/Type/isRepetition(org.apache.parquet.schema.Type.Repetition)
org/apache/parquet/schema/PrimitiveType/getMaxDefinitionLevel(java.lang.String[],int)#org/apache/parquet/io/InvalidRecordException/InvalidRecordException(java.lang.String)
org/apache/parquet/schema/PrimitiveType/getMaxRepetitionLevel(java.lang.String[],int)#org/apache/parquet/schema/Type/isRepetition(org.apache.parquet.schema.Type.Repetition)
org/apache/parquet/schema/PrimitiveType/getMaxRepetitionLevel(java.lang.String[],int)#org/apache/parquet/io/InvalidRecordException/InvalidRecordException(java.lang.String)
org/apache/parquet/schema/PrimitiveType/reportSchemaMergeError(org.apache.parquet.schema.Type)#org/apache/parquet/schema/IncompatibleSchemaModificationException/IncompatibleSchemaModificationException(java.lang.String)
org/apache/parquet/schema/PrimitiveType/typeEquals(org.apache.parquet.schema.Type)#org/apache/parquet/schema/PrimitiveType/equals(org.apache.parquet.schema.Type)
org/apache/parquet/schema/PrimitiveType/convert(java.util.List,org.apache.parquet.schema.TypeConverter)#org/apache/parquet/schema/TypeConverter/convertPrimitiveType(java.util.List,org.apache.parquet.schema.PrimitiveType)
org/apache/parquet/schema/PrimitiveType/union(org.apache.parquet.schema.Type)#org/apache/parquet/schema/PrimitiveType/union(org.apache.parquet.schema.Type,boolean)
org/apache/parquet/schema/PrimitiveType/union(org.apache.parquet.schema.Type,boolean)#java/lang/Enum/equals(java.lang.Object)
org/apache/parquet/schema/PrimitiveType/union(org.apache.parquet.schema.Type,boolean)#org/apache/parquet/schema/PrimitiveType/getTypeLength()
org/apache/parquet/schema/PrimitiveType/union(org.apache.parquet.schema.Type,boolean)#org/apache/parquet/schema/Types/Builder/as(org.apache.parquet.schema.OriginalType)
org/apache/parquet/schema/PrimitiveType/union(org.apache.parquet.schema.Type,boolean)#org/apache/parquet/schema/Type/asPrimitiveType()
org/apache/parquet/schema/PrimitiveType/union(org.apache.parquet.schema.Type,boolean)#org/apache/parquet/schema/PrimitiveType/reportSchemaMergeError(org.apache.parquet.schema.Type)
org/apache/parquet/schema/PrimitiveType/union(org.apache.parquet.schema.Type,boolean)#org/apache/parquet/schema/Types/primitive(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.schema.Type.Repetition)
org/apache/parquet/schema/PrimitiveType/union(org.apache.parquet.schema.Type,boolean)#org/apache/parquet/schema/PrimitiveType/getPrimitiveTypeName()
org/apache/parquet/schema/PrimitiveType/union(org.apache.parquet.schema.Type,boolean)#org/apache/parquet/schema/Types/BasePrimitiveBuilder/length(int)
org/apache/parquet/schema/PrimitiveType/union(org.apache.parquet.schema.Type,boolean)#org/apache/parquet/schema/Type/isPrimitive()
org/apache/parquet/schema/PrimitiveType/union(org.apache.parquet.schema.Type,boolean)#org/apache/parquet/schema/Type/getName()
org/apache/parquet/schema/PrimitiveType/union(org.apache.parquet.schema.Type,boolean)#org/apache/parquet/schema/Type/getOriginalType()
org/apache/parquet/schema/PrimitiveType/union(org.apache.parquet.schema.Type,boolean)#org/apache/parquet/schema/Types/Builder/named(java.lang.String)
org/apache/parquet/schema/PrimitiveType/union(org.apache.parquet.schema.Type,boolean)#org/apache/parquet/schema/Type/getRepetition()
org/apache/parquet/schema/PrimitiveType/equals(org.apache.parquet.schema.Type)#org/apache/parquet/schema/Type/eqOrBothNull(java.lang.Object,java.lang.Object)
org/apache/parquet/schema/PrimitiveType/equals(org.apache.parquet.schema.Type)#org/apache/parquet/schema/Type/asPrimitiveType()
org/apache/parquet/schema/PrimitiveType/equals(org.apache.parquet.schema.Type)#org/apache/parquet/schema/PrimitiveType/getPrimitiveTypeName()
org/apache/parquet/schema/PrimitiveType/equals(org.apache.parquet.schema.Type)#org/apache/parquet/schema/Type/equals(org.apache.parquet.schema.Type)
org/apache/parquet/schema/PrimitiveType/equals(org.apache.parquet.schema.Type)#org/apache/parquet/schema/Type/isPrimitive()
org/apache/parquet/schema/PrimitiveType/withId(int)#org/apache/parquet/schema/Type/getRepetition()
org/apache/parquet/schema/PrimitiveType/withId(int)#org/apache/parquet/schema/Type/ID/ID(int)
org/apache/parquet/schema/PrimitiveType/withId(int)#org/apache/parquet/schema/PrimitiveType/PrimitiveType(org.apache.parquet.schema.Type.Repetition,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,int,java.lang.String,org.apache.parquet.schema.OriginalType,org.apache.parquet.schema.DecimalMetadata,org.apache.parquet.schema.Type.ID)
org/apache/parquet/schema/PrimitiveType/withId(int)#org/apache/parquet/schema/Type/getName()
org/apache/parquet/schema/PrimitiveType/withId(int)#org/apache/parquet/schema/Type/getOriginalType()
org/apache/parquet/schema/PrimitiveType/getType(java.lang.String[],int)#java/util/Arrays/toString(java.lang.Object[])
org/apache/parquet/schema/PrimitiveType/getType(java.lang.String[],int)#org/apache/parquet/io/InvalidRecordException/InvalidRecordException(java.lang.String)
org/apache/parquet/schema/PrimitiveType/getPaths(int)#java/util/Arrays/asList(T[])
org/apache/parquet/schema/PrimitiveType/writeToStringBuilder(java.lang.StringBuilder,java.lang.String)#java/lang/Enum/name()
org/apache/parquet/schema/PrimitiveType/writeToStringBuilder(java.lang.StringBuilder,java.lang.String)#java/lang/String/toLowerCase()
org/apache/parquet/schema/PrimitiveType/writeToStringBuilder(java.lang.StringBuilder,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/apache/parquet/schema/PrimitiveType/writeToStringBuilder(java.lang.StringBuilder,java.lang.String)#org/apache/parquet/schema/Type/getRepetition()
org/apache/parquet/schema/PrimitiveType/writeToStringBuilder(java.lang.StringBuilder,java.lang.String)#java/lang/StringBuilder/append(int)
org/apache/parquet/schema/PrimitiveType/writeToStringBuilder(java.lang.StringBuilder,java.lang.String)#java/lang/String/toLowerCase(java.util.Locale)
org/apache/parquet/schema/PrimitiveType/writeToStringBuilder(java.lang.StringBuilder,java.lang.String)#org/apache/parquet/schema/DecimalMetadata/getPrecision()
org/apache/parquet/schema/PrimitiveType/writeToStringBuilder(java.lang.StringBuilder,java.lang.String)#org/apache/parquet/schema/PrimitiveType/getDecimalMetadata()
org/apache/parquet/schema/PrimitiveType/writeToStringBuilder(java.lang.StringBuilder,java.lang.String)#org/apache/parquet/schema/Type/getId()
org/apache/parquet/schema/PrimitiveType/writeToStringBuilder(java.lang.StringBuilder,java.lang.String)#org/apache/parquet/schema/Type/getName()
org/apache/parquet/schema/PrimitiveType/writeToStringBuilder(java.lang.StringBuilder,java.lang.String)#org/apache/parquet/schema/Type/getOriginalType()
org/apache/parquet/schema/PrimitiveType/writeToStringBuilder(java.lang.StringBuilder,java.lang.String)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/parquet/schema/PrimitiveType/writeToStringBuilder(java.lang.StringBuilder,java.lang.String)#org/apache/parquet/schema/DecimalMetadata/getScale()
org/apache/parquet/schema/PrimitiveType/typeHashCode()#org/apache/parquet/schema/PrimitiveType/hashCode()
org/apache/parquet/schema/MessageType/checkContains(org.apache.parquet.schema.Type)#org/apache/parquet/schema/GroupType/checkGroupContains(org.apache.parquet.schema.Type)
org/apache/parquet/schema/MessageType/checkContains(org.apache.parquet.schema.Type)#org/apache/parquet/io/InvalidRecordException/InvalidRecordException(java.lang.String)
org/apache/parquet/schema/MessageType/union(org.apache.parquet.schema.MessageType,boolean)#org/apache/parquet/schema/Type/getName()
org/apache/parquet/schema/MessageType/union(org.apache.parquet.schema.MessageType,boolean)#org/apache/parquet/schema/GroupType/mergeFields(org.apache.parquet.schema.GroupType,boolean)
org/apache/parquet/schema/MessageType/union(org.apache.parquet.schema.MessageType,boolean)#org/apache/parquet/schema/MessageType/MessageType(java.lang.String,java.util.List)
org/apache/parquet/schema/MessageType/getColumns()#java/util/ArrayList/ArrayList(int)
org/apache/parquet/schema/MessageType/getColumns()#org/apache/parquet/column/ColumnDescriptor/ColumnDescriptor(java.lang.String[],org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,int,int,int)
org/apache/parquet/schema/MessageType/getColumns()#org/apache/parquet/schema/PrimitiveType/getTypeLength()
org/apache/parquet/schema/MessageType/getColumns()#org/apache/parquet/schema/MessageType/getMaxDefinitionLevel(java.lang.String[])
org/apache/parquet/schema/MessageType/getColumns()#java/util/List/size()
org/apache/parquet/schema/MessageType/getColumns()#org/apache/parquet/schema/MessageType/getMaxRepetitionLevel(java.lang.String[])
org/apache/parquet/schema/MessageType/getColumns()#org/apache/parquet/schema/Type/asPrimitiveType()
org/apache/parquet/schema/MessageType/getColumns()#org/apache/parquet/schema/GroupType/getPaths(int)
org/apache/parquet/schema/MessageType/getColumns()#java/util/List/add(E)
org/apache/parquet/schema/MessageType/getColumns()#org/apache/parquet/schema/MessageType/getType(java.lang.String[])
org/apache/parquet/schema/MessageType/getColumns()#org/apache/parquet/schema/PrimitiveType/getPrimitiveTypeName()
org/apache/parquet/schema/MessageType/getMaxDefinitionLevel(java.lang.String[])#org/apache/parquet/schema/GroupType/getMaxDefinitionLevel(java.lang.String[],int)
org/apache/parquet/schema/MessageType/getColumnDescription(java.lang.String[])#org/apache/parquet/column/ColumnDescriptor/ColumnDescriptor(java.lang.String[],org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,int,int,int)
org/apache/parquet/schema/MessageType/getColumnDescription(java.lang.String[])#org/apache/parquet/schema/PrimitiveType/getTypeLength()
org/apache/parquet/schema/MessageType/getColumnDescription(java.lang.String[])#org/apache/parquet/schema/MessageType/getMaxDefinitionLevel(java.lang.String[])
org/apache/parquet/schema/MessageType/getColumnDescription(java.lang.String[])#org/apache/parquet/schema/MessageType/getMaxRepetitionLevel(java.lang.String[])
org/apache/parquet/schema/MessageType/getColumnDescription(java.lang.String[])#org/apache/parquet/schema/Type/asPrimitiveType()
org/apache/parquet/schema/MessageType/getColumnDescription(java.lang.String[])#org/apache/parquet/schema/MessageType/getType(java.lang.String[])
org/apache/parquet/schema/MessageType/getColumnDescription(java.lang.String[])#org/apache/parquet/schema/PrimitiveType/getPrimitiveTypeName()
org/apache/parquet/schema/MessageType/getMaxRepetitionLevel(java.lang.String[])#org/apache/parquet/schema/GroupType/getMaxRepetitionLevel(java.lang.String[],int)
org/apache/parquet/schema/MessageType/convertWith(org.apache.parquet.schema.TypeConverter)#org/apache/parquet/schema/GroupType/convertChildren(java.util.List,org.apache.parquet.schema.TypeConverter)
org/apache/parquet/schema/MessageType/convertWith(org.apache.parquet.schema.TypeConverter)#java/util/ArrayList/ArrayList()
org/apache/parquet/schema/MessageType/convertWith(org.apache.parquet.schema.TypeConverter)#org/apache/parquet/schema/TypeConverter/convertMessageType(org.apache.parquet.schema.MessageType,java.util.List)
org/apache/parquet/schema/MessageType/convertWith(org.apache.parquet.schema.TypeConverter)#java/util/ArrayList/add(E)
org/apache/parquet/schema/MessageType/getPaths()#org/apache/parquet/schema/GroupType/getPaths(int)
org/apache/parquet/schema/MessageType/accept(org.apache.parquet.schema.TypeVisitor)#org/apache/parquet/schema/TypeVisitor/visit(org.apache.parquet.schema.MessageType)
org/apache/parquet/schema/MessageType/containsPath(java.lang.String[])#org/apache/parquet/schema/GroupType/containsPath(java.lang.String[],int)
org/apache/parquet/schema/MessageType/union(org.apache.parquet.schema.MessageType)#org/apache/parquet/schema/MessageType/union(org.apache.parquet.schema.MessageType,boolean)
org/apache/parquet/schema/MessageType/writeToStringBuilder(java.lang.StringBuilder,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/apache/parquet/schema/MessageType/writeToStringBuilder(java.lang.StringBuilder,java.lang.String)#org/apache/parquet/schema/GroupType/membersDisplayString(java.lang.StringBuilder,java.lang.String)
org/apache/parquet/schema/MessageType/writeToStringBuilder(java.lang.StringBuilder,java.lang.String)#org/apache/parquet/schema/Type/getName()
org/apache/parquet/schema/MessageType/writeToStringBuilder(java.lang.StringBuilder,java.lang.String)#org/apache/parquet/schema/Type/getOriginalType()
org/apache/parquet/schema/MessageType/getType(java.lang.String[])#org/apache/parquet/schema/GroupType/getType(java.lang.String[],int)
org/apache/parquet/proto/ProtoRecordMaterializer/getCurrentRecord()#org/apache/parquet/proto/ProtoRecordConverter/getCurrentRecord()
org/apache/parquet/VersionParser/parse(java.lang.String)#java/util/regex/Matcher/group(int)
org/apache/parquet/VersionParser/parse(java.lang.String)#java/util/regex/Matcher/matches()
org/apache/parquet/VersionParser/parse(java.lang.String)#org/apache/parquet/VersionParser/VersionParseException/VersionParseException(java.lang.String)
org/apache/parquet/VersionParser/parse(java.lang.String)#org/apache/parquet/Strings/isNullOrEmpty(java.lang.String)
org/apache/parquet/VersionParser/parse(java.lang.String)#org/apache/parquet/VersionParser/ParsedVersion/ParsedVersion(java.lang.String,java.lang.String,java.lang.String)
org/apache/parquet/VersionParser/parse(java.lang.String)#java/util/regex/Pattern/matcher(java.lang.CharSequence)
org/apache/parquet/scrooge/ParquetScroogeOutputFormat/setScroogeClass(org.apache.parquet.hadoop.Configuration,java.lang.Class)#org/apache/parquet/scrooge/ScroogeWriteSupport/setScroogeClass(org.apache.parquet.hadoop.Configuration,java.lang.Class)
org/apache/parquet/scrooge/ParquetScroogeOutputFormat/getScroogeClass(org.apache.parquet.hadoop.Configuration)#org/apache/parquet/scrooge/ScroogeWriteSupport/getScroogeClass(org.apache.parquet.hadoop.Configuration)
org/apache/parquet/arrow/schema/SchemaMapping/PrimitiveTypeMapping/accept(org.apache.parquet.arrow.schema.SchemaMapping.TypeMappingVisitor)#org/apache/parquet/arrow/schema/SchemaMapping/TypeMappingVisitor/visit(org.apache.parquet.arrow.schema.SchemaMapping.PrimitiveTypeMapping)
org/apache/parquet/hadoop/ParquetInputFormat/getSplits(org.apache.parquet.hadoop.Configuration,java.util.List)#org/apache/parquet/hadoop/ParquetInputFormat/getReadSupport(org.apache.parquet.hadoop.Configuration)
org/apache/parquet/hadoop/ParquetInputFormat/getSplits(org.apache.parquet.hadoop.Configuration,java.util.List)#org/apache/parquet/hadoop/ParquetFileWriter/getGlobalMetaData(java.util.List,boolean)
org/apache/parquet/hadoop/ParquetInputFormat/getSplits(org.apache.parquet.hadoop.Configuration,java.util.List)#org/apache/parquet/hadoop/ClientSideMetadataSplitStrategy/getSplits(org.apache.parquet.hadoop.Configuration,java.util.List,long,long,org.apache.parquet.hadoop.api.ReadSupport.ReadContext)
org/apache/parquet/hadoop/ParquetInputFormat/getSplits(org.apache.parquet.hadoop.Configuration,java.util.List)#java/lang/Math/max(int,int)
org/apache/parquet/hadoop/ParquetInputFormat/getSplits(org.apache.parquet.hadoop.Configuration,java.util.List)#org/apache/parquet/hadoop/api/InitContext/InitContext(org.apache.parquet.hadoop.Configuration,java.util.Map,org.apache.parquet.schema.MessageType)
org/apache/parquet/hadoop/ParquetInputFormat/getSplits(org.apache.parquet.hadoop.Configuration,java.util.List)#org/apache/parquet/hadoop/ClientSideMetadataSplitStrategy/ClientSideMetadataSplitStrategy()
org/apache/parquet/hadoop/ParquetInputFormat/getSplits(org.apache.parquet.hadoop.Configuration,java.util.List)#org/apache/parquet/io/ParquetDecodingException/ParquetDecodingException(java.lang.String)
org/apache/parquet/hadoop/ParquetInputFormat/getSplits(org.apache.parquet.hadoop.Configuration,java.util.List)#org/apache/parquet/hadoop/metadata/GlobalMetaData/getKeyValueMetaData()
org/apache/parquet/hadoop/ParquetInputFormat/getSplits(org.apache.parquet.hadoop.Configuration,java.util.List)#org/apache/parquet/hadoop/metadata/GlobalMetaData/getSchema()
org/apache/parquet/hadoop/ParquetInputFormat/isSplitable(org.apache.parquet.hadoop.util.JobContext,org.apache.parquet.hadoop.Path)#org/apache/parquet/hadoop/util/ContextUtil/getConfiguration(org.apache.parquet.hadoop.util.JobContext)
org/apache/parquet/hadoop/ParquetInputFormat/setReadSupportClass(org.apache.parquet.hadoop.Job,java.lang.Class)#java/lang/Class/getName()
org/apache/parquet/hadoop/ParquetInputFormat/setReadSupportClass(org.apache.parquet.hadoop.Job,java.lang.Class)#org/apache/parquet/hadoop/util/ContextUtil/getConfiguration(org.apache.parquet.hadoop.util.JobContext)
org/apache/parquet/hadoop/ParquetInputFormat/getReadSupport(org.apache.parquet.hadoop.Configuration)#org/apache/parquet/hadoop/ParquetInputFormat/getReadSupportClass(org.apache.parquet.hadoop.Configuration)
org/apache/parquet/hadoop/ParquetInputFormat/getReadSupport(org.apache.parquet.hadoop.Configuration)#org/apache/parquet/hadoop/ParquetInputFormat/getReadSupportInstance(java.lang.Class)
org/apache/parquet/hadoop/ParquetInputFormat/getSplits(org.apache.parquet.hadoop.util.JobContext)#java/util/ArrayList/ArrayList()
org/apache/parquet/hadoop/ParquetInputFormat/getSplits(org.apache.parquet.hadoop.util.JobContext)#org/apache/parquet/hadoop/ParquetInputFormat/isTaskSideMetaData(org.apache.parquet.hadoop.Configuration)
org/apache/parquet/hadoop/ParquetInputFormat/getSplits(org.apache.parquet.hadoop.util.JobContext)#org/apache/parquet/Preconditions/checkArgument(boolean,java.lang.String)
org/apache/parquet/hadoop/ParquetInputFormat/getSplits(org.apache.parquet.hadoop.util.JobContext)#org/apache/parquet/hadoop/ParquetInputSplit/from(org.apache.parquet.hadoop.FileSplit)
org/apache/parquet/hadoop/ParquetInputFormat/getSplits(org.apache.parquet.hadoop.util.JobContext)#org/apache/parquet/hadoop/ParquetInputFormat/getFooters(org.apache.parquet.hadoop.util.JobContext)
org/apache/parquet/hadoop/ParquetInputFormat/getSplits(org.apache.parquet.hadoop.util.JobContext)#org/apache/parquet/hadoop/ParquetInputFormat/getSplits(org.apache.parquet.hadoop.Configuration,java.util.List)
org/apache/parquet/hadoop/ParquetInputFormat/getSplits(org.apache.parquet.hadoop.util.JobContext)#org/apache/parquet/hadoop/util/ContextUtil/getConfiguration(org.apache.parquet.hadoop.util.JobContext)
org/apache/parquet/hadoop/ParquetInputFormat/getReadSupportClass(org.apache.parquet.hadoop.Configuration)#org/apache/parquet/hadoop/util/ConfigurationUtil/getClassFromConfig(org.apache.parquet.hadoop.Configuration,java.lang.String,java.lang.Class)
org/apache/parquet/hadoop/ParquetInputFormat/getReadSupportInstance(java.lang.Class)#java/lang/Class/newInstance()
org/apache/parquet/hadoop/ParquetInputFormat/getReadSupportInstance(java.lang.Class)#org/apache/parquet/hadoop/BadConfigurationException/BadConfigurationException(java.lang.String,java.lang.Throwable)
org/apache/parquet/hadoop/ParquetInputFormat/staticAddInputPathRecursively(java.util.List,org.apache.parquet.hadoop.FileSystem,org.apache.parquet.hadoop.Path,org.apache.parquet.hadoop.PathFilter)#org/apache/parquet/hadoop/ParquetInputFormat/staticAddInputPathRecursively(java.util.List,org.apache.parquet.hadoop.FileSystem,org.apache.parquet.hadoop.Path,org.apache.parquet.hadoop.PathFilter)
org/apache/parquet/hadoop/ParquetInputFormat/setTaskSideMetaData(org.apache.parquet.hadoop.Job,boolean)#org/apache/parquet/hadoop/util/ContextUtil/getConfiguration(org.apache.parquet.hadoop.util.JobContext)
org/apache/parquet/hadoop/ParquetInputFormat/getGlobalMetaData(org.apache.parquet.hadoop.util.JobContext)#org/apache/parquet/hadoop/ParquetFileWriter/getGlobalMetaData(java.util.List)
org/apache/parquet/hadoop/ParquetInputFormat/getGlobalMetaData(org.apache.parquet.hadoop.util.JobContext)#org/apache/parquet/hadoop/ParquetInputFormat/getFooters(org.apache.parquet.hadoop.util.JobContext)
org/apache/parquet/hadoop/ParquetInputFormat/getFilter(org.apache.parquet.hadoop.Configuration)#org/apache/parquet/filter2/compat/FilterCompat/get(org.apache.parquet.filter2.predicate.FilterPredicate,org.apache.parquet.filter.UnboundRecordFilter)
org/apache/parquet/hadoop/ParquetInputFormat/getFilter(org.apache.parquet.hadoop.Configuration)#org/apache/parquet/hadoop/ParquetInputFormat/getUnboundRecordFilterInstance(org.apache.parquet.hadoop.Configuration)
org/apache/parquet/hadoop/ParquetInputFormat/getFilter(org.apache.parquet.hadoop.Configuration)#org/apache/parquet/hadoop/ParquetInputFormat/getFilterPredicate(org.apache.parquet.hadoop.Configuration)
org/apache/parquet/hadoop/ParquetInputFormat/getUnboundRecordFilter(org.apache.parquet.hadoop.Configuration)#org/apache/parquet/hadoop/util/ConfigurationUtil/getClassFromConfig(org.apache.parquet.hadoop.Configuration,java.lang.String,java.lang.Class)
org/apache/parquet/hadoop/ParquetInputFormat/listStatus(org.apache.parquet.hadoop.util.JobContext)#org/apache/parquet/hadoop/util/ContextUtil/getConfiguration(org.apache.parquet.hadoop.util.JobContext)
org/apache/parquet/hadoop/ParquetInputFormat/listStatus(org.apache.parquet.hadoop.util.JobContext)#org/apache/parquet/hadoop/ParquetInputFormat/getAllFileRecursively(java.util.List,org.apache.parquet.hadoop.Configuration)
org/apache/parquet/hadoop/ParquetInputFormat/getReadSupportInstance(org.apache.parquet.hadoop.Configuration)#org/apache/parquet/hadoop/ParquetInputFormat/getReadSupportClass(org.apache.parquet.hadoop.Configuration)
org/apache/parquet/hadoop/ParquetInputFormat/getReadSupportInstance(org.apache.parquet.hadoop.Configuration)#org/apache/parquet/hadoop/ParquetInputFormat/getReadSupportInstance(java.lang.Class)
org/apache/parquet/hadoop/ParquetInputFormat/createRecordReader(org.apache.parquet.hadoop.InputSplit,org.apache.parquet.hadoop.TaskAttemptContext)#org/apache/parquet/hadoop/ParquetInputFormat/getReadSupport(org.apache.parquet.hadoop.Configuration)
org/apache/parquet/hadoop/ParquetInputFormat/createRecordReader(org.apache.parquet.hadoop.InputSplit,org.apache.parquet.hadoop.TaskAttemptContext)#org/apache/parquet/hadoop/ParquetRecordReader/ParquetRecordReader(org.apache.parquet.hadoop.api.ReadSupport,org.apache.parquet.filter2.compat.FilterCompat.Filter)
org/apache/parquet/hadoop/ParquetInputFormat/createRecordReader(org.apache.parquet.hadoop.InputSplit,org.apache.parquet.hadoop.TaskAttemptContext)#org/apache/parquet/hadoop/ParquetInputFormat/getFilter(org.apache.parquet.hadoop.Configuration)
org/apache/parquet/hadoop/ParquetInputFormat/createRecordReader(org.apache.parquet.hadoop.InputSplit,org.apache.parquet.hadoop.TaskAttemptContext)#org/apache/parquet/hadoop/util/ContextUtil/getConfiguration(org.apache.parquet.hadoop.util.JobContext)
org/apache/parquet/hadoop/ParquetInputFormat/setFilterPredicate(org.apache.parquet.hadoop.Configuration,org.apache.parquet.filter2.predicate.FilterPredicate)#java/lang/Object/toString()
org/apache/parquet/hadoop/ParquetInputFormat/setFilterPredicate(org.apache.parquet.hadoop.Configuration,org.apache.parquet.filter2.predicate.FilterPredicate)#java/lang/RuntimeException/RuntimeException(java.lang.Throwable)
org/apache/parquet/hadoop/ParquetInputFormat/setFilterPredicate(org.apache.parquet.hadoop.Configuration,org.apache.parquet.filter2.predicate.FilterPredicate)#org/apache/parquet/hadoop/ParquetInputFormat/getUnboundRecordFilter(org.apache.parquet.hadoop.Configuration)
org/apache/parquet/hadoop/ParquetInputFormat/setFilterPredicate(org.apache.parquet.hadoop.Configuration,org.apache.parquet.filter2.predicate.FilterPredicate)#org/apache/parquet/Preconditions/checkArgument(boolean,java.lang.String)
org/apache/parquet/hadoop/ParquetInputFormat/setFilterPredicate(org.apache.parquet.hadoop.Configuration,org.apache.parquet.filter2.predicate.FilterPredicate)#org/apache/parquet/hadoop/util/SerializationUtil/writeObjectToConfAsBase64(java.lang.String,java.lang.Object,org.apache.parquet.hadoop.Configuration)
org/apache/parquet/hadoop/ParquetInputFormat/setReadSupportClass(org.apache.parquet.hadoop.JobConf,java.lang.Class)#java/lang/Class/getName()
org/apache/parquet/hadoop/ParquetInputFormat/getUnboundRecordFilterInstance(org.apache.parquet.hadoop.Configuration)#java/lang/Class/newInstance()
org/apache/parquet/hadoop/ParquetInputFormat/getUnboundRecordFilterInstance(org.apache.parquet.hadoop.Configuration)#org/apache/parquet/hadoop/util/ConfigurationUtil/getClassFromConfig(org.apache.parquet.hadoop.Configuration,java.lang.String,java.lang.Class)
org/apache/parquet/hadoop/ParquetInputFormat/getUnboundRecordFilterInstance(org.apache.parquet.hadoop.Configuration)#org/apache/parquet/hadoop/BadConfigurationException/BadConfigurationException(java.lang.String,java.lang.Throwable)
org/apache/parquet/hadoop/ParquetInputFormat/setUnboundRecordFilter(org.apache.parquet.hadoop.Job,java.lang.Class)#org/apache/parquet/Preconditions/checkArgument(boolean,java.lang.String)
org/apache/parquet/hadoop/ParquetInputFormat/setUnboundRecordFilter(org.apache.parquet.hadoop.Job,java.lang.Class)#java/lang/Class/getName()
org/apache/parquet/hadoop/ParquetInputFormat/setUnboundRecordFilter(org.apache.parquet.hadoop.Job,java.lang.Class)#org/apache/parquet/hadoop/util/ContextUtil/getConfiguration(org.apache.parquet.hadoop.util.JobContext)
org/apache/parquet/hadoop/ParquetInputFormat/setUnboundRecordFilter(org.apache.parquet.hadoop.Job,java.lang.Class)#org/apache/parquet/hadoop/ParquetInputFormat/getFilterPredicate(org.apache.parquet.hadoop.Configuration)
org/apache/parquet/hadoop/ParquetInputFormat/getAllFileRecursively(java.util.List,org.apache.parquet.hadoop.Configuration)#java/util/ArrayList/ArrayList()
org/apache/parquet/hadoop/ParquetInputFormat/getAllFileRecursively(java.util.List,org.apache.parquet.hadoop.Configuration)#org/apache/parquet/hadoop/ParquetInputFormat/staticAddInputPathRecursively(java.util.List,org.apache.parquet.hadoop.FileSystem,org.apache.parquet.hadoop.Path,org.apache.parquet.hadoop.PathFilter)
org/apache/parquet/hadoop/ParquetInputFormat/getFooters(org.apache.parquet.hadoop.Configuration,java.util.Collection)#org/apache/parquet/hadoop/ParquetInputFormat/isTaskSideMetaData(org.apache.parquet.hadoop.Configuration)
org/apache/parquet/hadoop/ParquetInputFormat/getFooters(org.apache.parquet.hadoop.Configuration,java.util.Collection)#org/apache/parquet/hadoop/ParquetFileReader/readAllFootersInParallelUsingSummaryFiles(org.apache.parquet.hadoop.Configuration,java.util.Collection,boolean)
org/apache/parquet/hadoop/ParquetInputFormat/getFooters(org.apache.parquet.hadoop.util.JobContext)#java/util/ArrayList/ArrayList(java.util.Collection)
org/apache/parquet/hadoop/ParquetInputFormat/getFooters(org.apache.parquet.hadoop.util.JobContext)#java/util/Map/Entry/getValue()
org/apache/parquet/hadoop/ParquetInputFormat/getFooters(org.apache.parquet.hadoop.util.JobContext)#java/util/HashMap/HashMap(java.util.Map)
org/apache/parquet/hadoop/ParquetInputFormat/getFooters(org.apache.parquet.hadoop.util.JobContext)#java/lang/Math/max(int,int)
org/apache/parquet/hadoop/ParquetInputFormat/getFooters(org.apache.parquet.hadoop.util.JobContext)#org/apache/parquet/hadoop/LruCache/put(K,V)
org/apache/parquet/hadoop/ParquetInputFormat/getFooters(org.apache.parquet.hadoop.util.JobContext)#java/util/Collections/emptyList()
org/apache/parquet/hadoop/ParquetInputFormat/getFooters(org.apache.parquet.hadoop.util.JobContext)#java/util/Map/size()
org/apache/parquet/hadoop/ParquetInputFormat/getFooters(org.apache.parquet.hadoop.util.JobContext)#org/apache/parquet/hadoop/Footer/getFile()
org/apache/parquet/hadoop/ParquetInputFormat/getFooters(org.apache.parquet.hadoop.util.JobContext)#org/apache/parquet/hadoop/LruCache/getCurrentValue(K)
org/apache/parquet/hadoop/ParquetInputFormat/getFooters(org.apache.parquet.hadoop.util.JobContext)#java/util/List/add(E)
org/apache/parquet/hadoop/ParquetInputFormat/getFooters(org.apache.parquet.hadoop.util.JobContext)#java/util/Map/put(K,V)
org/apache/parquet/hadoop/ParquetInputFormat/getFooters(org.apache.parquet.hadoop.util.JobContext)#java/util/HashSet/HashSet()
org/apache/parquet/hadoop/ParquetInputFormat/getFooters(org.apache.parquet.hadoop.util.JobContext)#java/util/Map/entrySet()
org/apache/parquet/hadoop/ParquetInputFormat/getFooters(org.apache.parquet.hadoop.util.JobContext)#java/util/LinkedHashMap/LinkedHashMap()
org/apache/parquet/hadoop/ParquetInputFormat/getFooters(org.apache.parquet.hadoop.util.JobContext)#org/apache/parquet/hadoop/ParquetInputFormat/FileStatusWrapper/FileStatusWrapper(org.apache.parquet.hadoop.FileStatus)
org/apache/parquet/hadoop/ParquetInputFormat/getFooters(org.apache.parquet.hadoop.util.JobContext)#org/apache/parquet/hadoop/LruCache/LruCache(int)
org/apache/parquet/hadoop/ParquetInputFormat/getFooters(org.apache.parquet.hadoop.util.JobContext)#org/apache/parquet/hadoop/ParquetInputFormat/listStatus(org.apache.parquet.hadoop.util.JobContext)
org/apache/parquet/hadoop/ParquetInputFormat/getFooters(org.apache.parquet.hadoop.util.JobContext)#java/util/Map/Entry/getKey()
org/apache/parquet/hadoop/ParquetInputFormat/getFooters(org.apache.parquet.hadoop.util.JobContext)#org/apache/parquet/hadoop/util/ContextUtil/getConfiguration(org.apache.parquet.hadoop.util.JobContext)
org/apache/parquet/hadoop/ParquetInputFormat/getFooters(org.apache.parquet.hadoop.util.JobContext)#org/apache/parquet/hadoop/ParquetInputFormat/FootersCacheValue/FootersCacheValue(org.apache.parquet.hadoop.ParquetInputFormat.FileStatusWrapper,org.apache.parquet.hadoop.Footer)
org/apache/parquet/hadoop/ParquetInputFormat/getFooters(org.apache.parquet.hadoop.util.JobContext)#org/apache/parquet/hadoop/ParquetInputFormat/FootersCacheValue/getFooter()
org/apache/parquet/hadoop/ParquetInputFormat/getFooters(org.apache.parquet.hadoop.util.JobContext)#org/apache/parquet/hadoop/ParquetInputFormat/getFooters(org.apache.parquet.hadoop.Configuration,java.util.List)
org/apache/parquet/hadoop/ParquetInputFormat/getFooters(org.apache.parquet.hadoop.Configuration,java.util.List)#org/apache/parquet/hadoop/ParquetInputFormat/getFooters(org.apache.parquet.hadoop.Configuration,java.util.List)
org/apache/parquet/hadoop/ParquetInputFormat/getFilterPredicate(org.apache.parquet.hadoop.Configuration)#java/lang/RuntimeException/RuntimeException(java.lang.Throwable)
org/apache/parquet/hadoop/ParquetInputFormat/getFilterPredicate(org.apache.parquet.hadoop.Configuration)#org/apache/parquet/hadoop/util/SerializationUtil/readObjectFromConfAsBase64(java.lang.String,org.apache.parquet.hadoop.Configuration)
org/apache/parquet/hadoop/util/counters/mapreduce/MapReduceCounterAdapter/increment(long)#org/apache/parquet/hadoop/util/ContextUtil/incrementCounter(org.apache.parquet.hadoop.util.counters.mapreduce.Counter,long)
org/apache/parquet/column/values/rle/RunLengthBitPackingHybridDecoder/readInt()#org/apache/parquet/column/values/rle/RunLengthBitPackingHybridDecoder/readNext()
org/apache/parquet/column/values/rle/RunLengthBitPackingHybridDecoder/readInt()#org/apache/parquet/io/ParquetDecodingException/ParquetDecodingException(java.lang.String)
org/apache/parquet/column/values/rle/RunLengthBitPackingHybridDecoder/readNext()#java/lang/Math/ceil(double)
org/apache/parquet/column/values/rle/RunLengthBitPackingHybridDecoder/readNext()#java/io/InputStream/available()
org/apache/parquet/column/values/rle/RunLengthBitPackingHybridDecoder/readNext()#java/io/DataInputStream/DataInputStream(java.io.InputStream)
org/apache/parquet/column/values/rle/RunLengthBitPackingHybridDecoder/readNext()#org/apache/parquet/Preconditions/checkArgument(boolean,java.lang.String)
org/apache/parquet/column/values/rle/RunLengthBitPackingHybridDecoder/readNext()#org/apache/parquet/bytes/BytesUtils/readUnsignedVarInt(java.io.InputStream)
org/apache/parquet/column/values/rle/RunLengthBitPackingHybridDecoder/readNext()#org/apache/parquet/column/values/bitpacking/BytePacker/unpack8Values(byte[],int,int[],int)
org/apache/parquet/column/values/rle/RunLengthBitPackingHybridDecoder/readNext()#org/apache/parquet/io/ParquetDecodingException/ParquetDecodingException(java.lang.String)
org/apache/parquet/column/values/rle/RunLengthBitPackingHybridDecoder/readNext()#java/io/DataInputStream/readFully(byte[],int,int)
org/apache/parquet/column/values/rle/RunLengthBitPackingHybridDecoder/readNext()#org/apache/parquet/bytes/BytesUtils/readIntLittleEndianPaddedOnBitWidth(java.io.InputStream,int)
org/apache/parquet/column/values/rle/RunLengthBitPackingHybridDecoder/readNext()#java/lang/Math/min(int,int)
org/apache/parquet/statistics/RandomValues/RandomBinaryBase/asReusedBinary(byte[])#org/apache/parquet/io/api/Binary/fromReusedByteArray(byte[],int,int)
org/apache/parquet/statistics/RandomValues/RandomBinaryBase/asReusedBinary(byte[])#java/lang/Math/min(int,int)
org/apache/parquet/statistics/RandomValues/RandomBinaryBase/asReusedBinary(byte[])#java/lang/System/arraycopy(java.lang.Object,int,java.lang.Object,int,int)
org/apache/parquet/io/api/PrimitiveConverter/addValueFromDictionary(int)#java/lang/Class/getName()
org/apache/parquet/io/api/PrimitiveConverter/addValueFromDictionary(int)#java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)
org/apache/parquet/io/api/PrimitiveConverter/addValueFromDictionary(int)#java/lang/Object/getClass()
org/apache/parquet/io/api/PrimitiveConverter/addBinary(org.apache.parquet.io.api.Binary)#java/lang/Class/getName()
org/apache/parquet/io/api/PrimitiveConverter/addBinary(org.apache.parquet.io.api.Binary)#java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)
org/apache/parquet/io/api/PrimitiveConverter/addBinary(org.apache.parquet.io.api.Binary)#java/lang/Object/getClass()
org/apache/parquet/io/api/PrimitiveConverter/addFloat(float)#java/lang/Class/getName()
org/apache/parquet/io/api/PrimitiveConverter/addFloat(float)#java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)
org/apache/parquet/io/api/PrimitiveConverter/addFloat(float)#java/lang/Object/getClass()
org/apache/parquet/io/api/PrimitiveConverter/setDictionary(org.apache.parquet.column.Dictionary)#java/lang/Class/getName()
org/apache/parquet/io/api/PrimitiveConverter/setDictionary(org.apache.parquet.column.Dictionary)#java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)
org/apache/parquet/io/api/PrimitiveConverter/setDictionary(org.apache.parquet.column.Dictionary)#java/lang/Object/getClass()
org/apache/parquet/io/api/PrimitiveConverter/addInt(int)#java/lang/Class/getName()
org/apache/parquet/io/api/PrimitiveConverter/addInt(int)#java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)
org/apache/parquet/io/api/PrimitiveConverter/addInt(int)#java/lang/Object/getClass()
org/apache/parquet/io/api/PrimitiveConverter/addLong(long)#java/lang/Class/getName()
org/apache/parquet/io/api/PrimitiveConverter/addLong(long)#java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)
org/apache/parquet/io/api/PrimitiveConverter/addLong(long)#java/lang/Object/getClass()
org/apache/parquet/io/api/PrimitiveConverter/addDouble(double)#java/lang/Class/getName()
org/apache/parquet/io/api/PrimitiveConverter/addDouble(double)#java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)
org/apache/parquet/io/api/PrimitiveConverter/addDouble(double)#java/lang/Object/getClass()
org/apache/parquet/io/api/PrimitiveConverter/addBoolean(boolean)#java/lang/Class/getName()
org/apache/parquet/io/api/PrimitiveConverter/addBoolean(boolean)#java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)
org/apache/parquet/io/api/PrimitiveConverter/addBoolean(boolean)#java/lang/Object/getClass()
org/apache/parquet/avro/TestInputOutputFormat/testReadWrite()#java/io/BufferedReader/close()
org/apache/parquet/avro/TestInputOutputFormat/testReadWrite()#java/io/File/File(java.lang.String,java.lang.String)
org/apache/parquet/avro/TestInputOutputFormat/testReadWrite()#org/apache/parquet/avro/TestInputOutputFormat/nextRecord(java.lang.Integer)
org/apache/parquet/avro/TestInputOutputFormat/testReadWrite()#java/lang/String/substring(int)
org/apache/parquet/avro/TestInputOutputFormat/testReadWrite()#org/apache/parquet/avro/AvroParquetOutputFormat/setSchema(org.apache.parquet.hadoop.Job,org.apache.parquet.pig.Schema)
org/apache/parquet/avro/TestInputOutputFormat/testReadWrite()#java/lang/String/indexOf(java.lang.String)
org/apache/parquet/avro/TestInputOutputFormat/testReadWrite()#org/apache/parquet/avro/TestInputOutputFormat/waitForJob(org.apache.parquet.hadoop.Job)
org/apache/parquet/avro/TestInputOutputFormat/testReadWrite()#java/io/BufferedReader/BufferedReader(java.io.Reader)
org/apache/parquet/avro/TestInputOutputFormat/testReadWrite()#java/io/BufferedReader/readLine()
org/apache/parquet/avro/TestInputOutputFormat/testReadWrite()#java/lang/Object/Object()
org/apache/parquet/avro/TestInputOutputFormat/testReadWrite()#java/io/FileReader/FileReader(java.io.File)
org/apache/parquet/avro/TestInputOutputFormat/nextRecord(java.lang.Integer)#java/lang/Object/Object()
org/apache/parquet/avro/TestInputOutputFormat/waitForJob(org.apache.parquet.hadoop.Job)#java/lang/Thread/sleep(long)
org/apache/parquet/avro/TestInputOutputFormat/waitForJob(org.apache.parquet.hadoop.Job)#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/apache/parquet/column/values/deltastrings/benchmark/BenchmarkDeltaByteArray/benchmarkSortedStringsWithPlainValuesWriter()#org/apache/parquet/column/values/plain/BinaryPlainValuesReader/BinaryPlainValuesReader()
org/apache/parquet/column/values/deltastrings/benchmark/BenchmarkDeltaByteArray/benchmarkSortedStringsWithPlainValuesWriter()#org/apache/parquet/column/values/Utils/writeData(org.apache.parquet.column.values.ValuesWriter,java.lang.String[])
org/apache/parquet/column/values/deltastrings/benchmark/BenchmarkDeltaByteArray/benchmarkSortedStringsWithPlainValuesWriter()#java/io/PrintStream/println(java.lang.String)
org/apache/parquet/column/values/deltastrings/benchmark/BenchmarkDeltaByteArray/benchmarkSortedStringsWithPlainValuesWriter()#org/apache/parquet/column/values/plain/PlainValuesWriter/getBytes()
org/apache/parquet/column/values/deltastrings/benchmark/BenchmarkDeltaByteArray/benchmarkSortedStringsWithPlainValuesWriter()#org/apache/parquet/column/values/Utils/readData(org.apache.parquet.column.values.ValuesReader,byte[],int)
org/apache/parquet/column/values/deltastrings/benchmark/BenchmarkDeltaByteArray/benchmarkSortedStringsWithPlainValuesWriter()#org/apache/parquet/bytes/DirectByteBufferAllocator/DirectByteBufferAllocator()
org/apache/parquet/column/values/deltastrings/benchmark/BenchmarkDeltaByteArray/benchmarkSortedStringsWithPlainValuesWriter()#org/apache/parquet/bytes/BytesInput/toByteArray()
org/apache/parquet/column/values/deltastrings/benchmark/BenchmarkDeltaByteArray/benchmarkSortedStringsWithPlainValuesWriter()#org/apache/parquet/column/values/plain/PlainValuesWriter/PlainValuesWriter(int,int,org.apache.parquet.bytes.ByteBufferAllocator)
org/apache/parquet/column/values/deltastrings/benchmark/BenchmarkDeltaByteArray/benchmarkRandomStringsWithPlainValuesWriter()#org/apache/parquet/column/values/plain/BinaryPlainValuesReader/BinaryPlainValuesReader()
org/apache/parquet/column/values/deltastrings/benchmark/BenchmarkDeltaByteArray/benchmarkRandomStringsWithPlainValuesWriter()#org/apache/parquet/column/values/Utils/writeData(org.apache.parquet.column.values.ValuesWriter,java.lang.String[])
org/apache/parquet/column/values/deltastrings/benchmark/BenchmarkDeltaByteArray/benchmarkRandomStringsWithPlainValuesWriter()#java/io/PrintStream/println(java.lang.String)
org/apache/parquet/column/values/deltastrings/benchmark/BenchmarkDeltaByteArray/benchmarkRandomStringsWithPlainValuesWriter()#org/apache/parquet/column/values/plain/PlainValuesWriter/getBytes()
org/apache/parquet/column/values/deltastrings/benchmark/BenchmarkDeltaByteArray/benchmarkRandomStringsWithPlainValuesWriter()#org/apache/parquet/column/values/Utils/readData(org.apache.parquet.column.values.ValuesReader,byte[],int)
org/apache/parquet/column/values/deltastrings/benchmark/BenchmarkDeltaByteArray/benchmarkRandomStringsWithPlainValuesWriter()#org/apache/parquet/bytes/DirectByteBufferAllocator/DirectByteBufferAllocator()
org/apache/parquet/column/values/deltastrings/benchmark/BenchmarkDeltaByteArray/benchmarkRandomStringsWithPlainValuesWriter()#org/apache/parquet/bytes/BytesInput/toByteArray()
org/apache/parquet/column/values/deltastrings/benchmark/BenchmarkDeltaByteArray/benchmarkRandomStringsWithPlainValuesWriter()#org/apache/parquet/column/values/plain/PlainValuesWriter/PlainValuesWriter(int,int,org.apache.parquet.bytes.ByteBufferAllocator)
org/apache/parquet/column/values/deltastrings/benchmark/BenchmarkDeltaByteArray/benchmarkRandomStringsWithDeltaLengthByteArrayValuesWriter()#org/apache/parquet/column/values/Utils/writeData(org.apache.parquet.column.values.ValuesWriter,java.lang.String[])
org/apache/parquet/column/values/deltastrings/benchmark/BenchmarkDeltaByteArray/benchmarkRandomStringsWithDeltaLengthByteArrayValuesWriter()#org/apache/parquet/column/values/Utils/readData(org.apache.parquet.column.values.ValuesReader,byte[],int)
org/apache/parquet/column/values/deltastrings/benchmark/BenchmarkDeltaByteArray/benchmarkRandomStringsWithDeltaLengthByteArrayValuesWriter()#org/apache/parquet/bytes/DirectByteBufferAllocator/DirectByteBufferAllocator()
org/apache/parquet/column/values/deltastrings/benchmark/BenchmarkDeltaByteArray/benchmarkRandomStringsWithDeltaLengthByteArrayValuesWriter()#org/apache/parquet/column/values/deltastrings/DeltaByteArrayReader/DeltaByteArrayReader()
org/apache/parquet/column/values/deltastrings/benchmark/BenchmarkDeltaByteArray/benchmarkRandomStringsWithDeltaLengthByteArrayValuesWriter()#org/apache/parquet/column/values/deltastrings/DeltaByteArrayWriter/getBytes()
org/apache/parquet/column/values/deltastrings/benchmark/BenchmarkDeltaByteArray/benchmarkRandomStringsWithDeltaLengthByteArrayValuesWriter()#org/apache/parquet/bytes/BytesInput/toByteArray()
org/apache/parquet/column/values/deltastrings/benchmark/BenchmarkDeltaByteArray/benchmarkRandomStringsWithDeltaLengthByteArrayValuesWriter()#org/apache/parquet/column/values/deltastrings/DeltaByteArrayWriter/DeltaByteArrayWriter(int,int,org.apache.parquet.bytes.ByteBufferAllocator)
org/apache/parquet/column/values/deltastrings/benchmark/BenchmarkDeltaByteArray/benchmarkRandomStringsWithDeltaLengthByteArrayValuesWriter()#java/io/PrintStream/println(java.lang.String)
org/apache/parquet/column/values/deltastrings/benchmark/BenchmarkDeltaByteArray/benchmarkSortedStringsWithDeltaLengthByteArrayValuesWriter()#org/apache/parquet/column/values/Utils/writeData(org.apache.parquet.column.values.ValuesWriter,java.lang.String[])
org/apache/parquet/column/values/deltastrings/benchmark/BenchmarkDeltaByteArray/benchmarkSortedStringsWithDeltaLengthByteArrayValuesWriter()#org/apache/parquet/column/values/Utils/readData(org.apache.parquet.column.values.ValuesReader,byte[],int)
org/apache/parquet/column/values/deltastrings/benchmark/BenchmarkDeltaByteArray/benchmarkSortedStringsWithDeltaLengthByteArrayValuesWriter()#org/apache/parquet/bytes/DirectByteBufferAllocator/DirectByteBufferAllocator()
org/apache/parquet/column/values/deltastrings/benchmark/BenchmarkDeltaByteArray/benchmarkSortedStringsWithDeltaLengthByteArrayValuesWriter()#org/apache/parquet/column/values/deltastrings/DeltaByteArrayReader/DeltaByteArrayReader()
org/apache/parquet/column/values/deltastrings/benchmark/BenchmarkDeltaByteArray/benchmarkSortedStringsWithDeltaLengthByteArrayValuesWriter()#org/apache/parquet/column/values/deltastrings/DeltaByteArrayWriter/getBytes()
org/apache/parquet/column/values/deltastrings/benchmark/BenchmarkDeltaByteArray/benchmarkSortedStringsWithDeltaLengthByteArrayValuesWriter()#org/apache/parquet/bytes/BytesInput/toByteArray()
org/apache/parquet/column/values/deltastrings/benchmark/BenchmarkDeltaByteArray/benchmarkSortedStringsWithDeltaLengthByteArrayValuesWriter()#org/apache/parquet/column/values/deltastrings/DeltaByteArrayWriter/DeltaByteArrayWriter(int,int,org.apache.parquet.bytes.ByteBufferAllocator)
org/apache/parquet/column/values/deltastrings/benchmark/BenchmarkDeltaByteArray/benchmarkSortedStringsWithDeltaLengthByteArrayValuesWriter()#java/io/PrintStream/println(java.lang.String)
org/apache/parquet/avro/ParentValueContainer/addInt(int)#org/apache/parquet/avro/ParentValueContainer/add(java.lang.Object)
org/apache/parquet/avro/ParentValueContainer/addShort(short)#org/apache/parquet/avro/ParentValueContainer/add(java.lang.Object)
org/apache/parquet/avro/ParentValueContainer/addFloat(float)#org/apache/parquet/avro/ParentValueContainer/add(java.lang.Object)
org/apache/parquet/avro/ParentValueContainer/addChar(char)#org/apache/parquet/avro/ParentValueContainer/add(java.lang.Object)
org/apache/parquet/avro/ParentValueContainer/addLong(long)#org/apache/parquet/avro/ParentValueContainer/add(java.lang.Object)
org/apache/parquet/avro/ParentValueContainer/addByte(byte)#org/apache/parquet/avro/ParentValueContainer/add(java.lang.Object)
org/apache/parquet/avro/ParentValueContainer/addDouble(double)#org/apache/parquet/avro/ParentValueContainer/add(java.lang.Object)
org/apache/parquet/avro/ParentValueContainer/addBoolean(boolean)#org/apache/parquet/avro/ParentValueContainer/add(java.lang.Object)
org/apache/parquet/avro/ParentValueContainer/getConversionContainer(org.apache.parquet.avro.ParentValueContainer,org.apache.parquet.avro.Conversion,org.apache.parquet.pig.Schema)#org/apache/parquet/avro/ParentValueContainer/getConversionContainer(org/apache/parquet/avro/ParentValueContainer,org/apache/parquet/avro/Conversion,org/apache/parquet/pig/Schema)/$anonymous9/()
org/apache/parquet/avro/ParentValueContainer/getConversionContainer(org.apache.parquet.avro.ParentValueContainer,org.apache.parquet.avro.Conversion,org.apache.parquet.pig.Schema)#org/apache/parquet/avro/ParentValueContainer/getConversionContainer(org/apache/parquet/avro/ParentValueContainer,org/apache/parquet/avro/Conversion,org/apache/parquet/pig/Schema)/$anonymous7/()
org/apache/parquet/avro/ParentValueContainer/getConversionContainer(org.apache.parquet.avro.ParentValueContainer,org.apache.parquet.avro.Conversion,org.apache.parquet.pig.Schema)#org/apache/parquet/avro/ParentValueContainer/getConversionContainer(org/apache/parquet/avro/ParentValueContainer,org/apache/parquet/avro/Conversion,org/apache/parquet/pig/Schema)/$anonymous1/()
org/apache/parquet/avro/ParentValueContainer/getConversionContainer(org.apache.parquet.avro.ParentValueContainer,org.apache.parquet.avro.Conversion,org.apache.parquet.pig.Schema)#org/apache/parquet/avro/ParentValueContainer/getConversionContainer(org/apache/parquet/avro/ParentValueContainer,org/apache/parquet/avro/Conversion,org/apache/parquet/pig/Schema)/$anonymous12/()
org/apache/parquet/avro/ParentValueContainer/getConversionContainer(org.apache.parquet.avro.ParentValueContainer,org.apache.parquet.avro.Conversion,org.apache.parquet.pig.Schema)#org/apache/parquet/avro/ParentValueContainer/getConversionContainer(org/apache/parquet/avro/ParentValueContainer,org/apache/parquet/avro/Conversion,org/apache/parquet/pig/Schema)/$anonymous11/()
org/apache/parquet/avro/ParentValueContainer/getConversionContainer(org.apache.parquet.avro.ParentValueContainer,org.apache.parquet.avro.Conversion,org.apache.parquet.pig.Schema)#org/apache/parquet/avro/ParentValueContainer/getConversionContainer(org/apache/parquet/avro/ParentValueContainer,org/apache/parquet/avro/Conversion,org/apache/parquet/pig/Schema)/$anonymous10/()
org/apache/parquet/avro/ParentValueContainer/getConversionContainer(org.apache.parquet.avro.ParentValueContainer,org.apache.parquet.avro.Conversion,org.apache.parquet.pig.Schema)#org/apache/parquet/avro/ParentValueContainer/LogicalTypePrimitiveContainer/LogicalTypePrimitiveContainer(org.apache.parquet.avro.ParentValueContainer,org.apache.parquet.pig.Schema,org.apache.parquet.avro.Conversion)
org/apache/parquet/avro/ParentValueContainer/getConversionContainer(org.apache.parquet.avro.ParentValueContainer,org.apache.parquet.avro.Conversion,org.apache.parquet.pig.Schema)#org/apache/parquet/avro/ParentValueContainer/getConversionContainer(org/apache/parquet/avro/ParentValueContainer,org/apache/parquet/avro/Conversion,org/apache/parquet/pig/Schema)/$anonymous8/()
org/apache/parquet/avro/ParentValueContainer/add(java.lang.Object)#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/apache/parquet/hadoop/example/ExampleOutputFormat/setSchema(org.apache.parquet.hadoop.Job,org.apache.parquet.schema.MessageType)#org/apache/parquet/hadoop/example/GroupWriteSupport/setSchema(org.apache.parquet.schema.MessageType,org.apache.parquet.hadoop.Configuration)
org/apache/parquet/hadoop/example/ExampleOutputFormat/setSchema(org.apache.parquet.hadoop.Job,org.apache.parquet.schema.MessageType)#org/apache/parquet/hadoop/util/ContextUtil/getConfiguration(org.apache.parquet.hadoop.util.JobContext)
org/apache/parquet/hadoop/example/ExampleOutputFormat/getSchema(org.apache.parquet.hadoop.Job)#org/apache/parquet/hadoop/util/ContextUtil/getConfiguration(org.apache.parquet.hadoop.util.JobContext)
org/apache/parquet/hadoop/example/ExampleOutputFormat/getSchema(org.apache.parquet.hadoop.Job)#org/apache/parquet/hadoop/example/GroupWriteSupport/getSchema(org.apache.parquet.hadoop.Configuration)
org/apache/parquet/bytes/TestBytesUtil/testWidth()#org/apache/parquet/bytes/BytesUtils/getWidthFromMaxInt(int)
org/apache/parquet/column/values/dictionary/DictionaryValuesWriter/PlainBinaryDictionaryValuesWriter/writeBytes(org.apache.parquet.io.api.Binary)#org/apache/parquet/io/api/Binary/length()
org/apache/parquet/column/values/dictionary/DictionaryValuesWriter/PlainBinaryDictionaryValuesWriter/writeBytes(org.apache.parquet.io.api.Binary)#org/apache/parquet/column/values/dictionary/IntList/add(int)
org/apache/parquet/column/values/dictionary/DictionaryValuesWriter/PlainBinaryDictionaryValuesWriter/writeBytes(org.apache.parquet.io.api.Binary)#org/apache/parquet/io/api/Binary/copy()
org/apache/parquet/column/values/dictionary/DictionaryValuesWriter/PlainBinaryDictionaryValuesWriter/toDictPageAndClose()#java/util/Iterator/next()
org/apache/parquet/column/values/dictionary/DictionaryValuesWriter/PlainBinaryDictionaryValuesWriter/toDictPageAndClose()#org/apache/parquet/column/values/plain/PlainValuesWriter/writeBytes(org.apache.parquet.io.api.Binary)
org/apache/parquet/column/values/dictionary/DictionaryValuesWriter/PlainBinaryDictionaryValuesWriter/toDictPageAndClose()#org/apache/parquet/column/values/dictionary/DictionaryValuesWriter/dictPage(org.apache.parquet.column.values.ValuesWriter)
org/apache/parquet/column/values/dictionary/DictionaryValuesWriter/PlainBinaryDictionaryValuesWriter/toDictPageAndClose()#org/apache/parquet/column/values/plain/PlainValuesWriter/PlainValuesWriter(int,int,org.apache.parquet.bytes.ByteBufferAllocator)
org/apache/parquet/column/values/dictionary/DictionaryValuesWriter/PlainBinaryDictionaryValuesWriter/fallBackDictionaryEncodedData(org.apache.parquet.column.values.ValuesWriter)#org/apache/parquet/column/values/dictionary/IntList/IntIterator/hasNext()
org/apache/parquet/column/values/dictionary/DictionaryValuesWriter/PlainBinaryDictionaryValuesWriter/fallBackDictionaryEncodedData(org.apache.parquet.column.values.ValuesWriter)#org/apache/parquet/column/values/ValuesWriter/writeBytes(org.apache.parquet.io.api.Binary)
org/apache/parquet/column/values/dictionary/DictionaryValuesWriter/PlainBinaryDictionaryValuesWriter/fallBackDictionaryEncodedData(org.apache.parquet.column.values.ValuesWriter)#org/apache/parquet/column/values/dictionary/IntList/IntIterator/next()
org/apache/parquet/column/values/dictionary/DictionaryValuesWriter/PlainBinaryDictionaryValuesWriter/fallBackDictionaryEncodedData(org.apache.parquet.column.values.ValuesWriter)#org/apache/parquet/column/values/dictionary/DictionaryValuesWriter/PlainBinaryDictionaryValuesWriter/getDictionarySize()
org/apache/parquet/column/values/dictionary/DictionaryValuesWriter/PlainBinaryDictionaryValuesWriter/fallBackDictionaryEncodedData(org.apache.parquet.column.values.ValuesWriter)#org/apache/parquet/column/values/dictionary/IntList/iterator()
org/apache/parquet/statistics/TestStatistics/DataContext/buildSchema(long)#org/apache/parquet/schema/PrimitiveType/PrimitiveType(org.apache.parquet.schema.Type.Repetition,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,java.lang.String)
org/apache/parquet/statistics/TestStatistics/DataContext/buildSchema(long)#org/apache/parquet/schema/PrimitiveType/PrimitiveType(org.apache.parquet.schema.Type.Repetition,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,int,java.lang.String)
org/apache/parquet/statistics/TestStatistics/DataContext/buildSchema(long)#java/util/Random/nextInt(int)
org/apache/parquet/statistics/TestStatistics/DataContext/buildSchema(long)#java/util/Random/Random(long)
org/apache/parquet/statistics/TestStatistics/DataContext/buildSchema(long)#org/apache/parquet/schema/MessageType/MessageType(java.lang.String,org.apache.parquet.schema.Type[])
org/apache/parquet/statistics/TestStatistics/DataContext/write(org.apache.parquet.hadoop.ParquetWriter)#org/apache/parquet/statistics/RandomValues/Int96Generator/nextBinaryValue()
org/apache/parquet/statistics/TestStatistics/DataContext/write(org.apache.parquet.hadoop.ParquetWriter)#org/apache/parquet/statistics/RandomValues/RandomValueGenerator/shouldGenerateNull()
org/apache/parquet/statistics/TestStatistics/DataContext/write(org.apache.parquet.hadoop.ParquetWriter)#java/util/Random/nextInt()
org/apache/parquet/statistics/TestStatistics/DataContext/write(org.apache.parquet.hadoop.ParquetWriter)#java/util/Random/nextDouble()
org/apache/parquet/statistics/TestStatistics/DataContext/write(org.apache.parquet.hadoop.ParquetWriter)#org/apache/parquet/example/data/Group/append(java.lang.String,long)
org/apache/parquet/statistics/TestStatistics/DataContext/write(org.apache.parquet.hadoop.ParquetWriter)#org/apache/parquet/example/data/simple/SimpleGroup/SimpleGroup(org.apache.parquet.schema.GroupType)
org/apache/parquet/statistics/TestStatistics/DataContext/write(org.apache.parquet.hadoop.ParquetWriter)#org/apache/parquet/statistics/RandomValues/DoubleGenerator/nextValue()
org/apache/parquet/statistics/TestStatistics/DataContext/write(org.apache.parquet.hadoop.ParquetWriter)#org/apache/parquet/example/data/Group/append(java.lang.String,org.apache.parquet.io.api.Binary)
org/apache/parquet/statistics/TestStatistics/DataContext/write(org.apache.parquet.hadoop.ParquetWriter)#org/apache/parquet/statistics/RandomValues/BinaryGenerator/nextBinaryValue()
org/apache/parquet/statistics/TestStatistics/DataContext/write(org.apache.parquet.hadoop.ParquetWriter)#org/apache/parquet/example/data/Group/append(java.lang.String,int)
org/apache/parquet/statistics/TestStatistics/DataContext/write(org.apache.parquet.hadoop.ParquetWriter)#org/apache/parquet/statistics/RandomValues/LongGenerator/nextValue()
org/apache/parquet/statistics/TestStatistics/DataContext/write(org.apache.parquet.hadoop.ParquetWriter)#org/apache/parquet/statistics/RandomValues/FloatGenerator/nextValue()
org/apache/parquet/statistics/TestStatistics/DataContext/write(org.apache.parquet.hadoop.ParquetWriter)#java/util/Random/nextFloat()
org/apache/parquet/statistics/TestStatistics/DataContext/write(org.apache.parquet.hadoop.ParquetWriter)#java/util/Random/nextLong()
org/apache/parquet/statistics/TestStatistics/DataContext/write(org.apache.parquet.hadoop.ParquetWriter)#org/apache/parquet/hadoop/ParquetWriter/write(T)
org/apache/parquet/statistics/TestStatistics/DataContext/write(org.apache.parquet.hadoop.ParquetWriter)#org/apache/parquet/statistics/RandomValues/FixedGenerator/nextBinaryValue()
org/apache/parquet/statistics/TestStatistics/DataContext/write(org.apache.parquet.hadoop.ParquetWriter)#org/apache/parquet/statistics/RandomValues/StringGenerator/nextBinaryValue()
org/apache/parquet/statistics/TestStatistics/DataContext/write(org.apache.parquet.hadoop.ParquetWriter)#org/apache/parquet/example/data/Group/append(java.lang.String,double)
org/apache/parquet/statistics/TestStatistics/DataContext/write(org.apache.parquet.hadoop.ParquetWriter)#org/apache/parquet/example/data/Group/append(java.lang.String,float)
org/apache/parquet/statistics/TestStatistics/DataContext/write(org.apache.parquet.hadoop.ParquetWriter)#org/apache/parquet/statistics/RandomValues/IntGenerator/nextValue()
org/apache/parquet/statistics/TestStatistics/DataContext/test()#org/apache/parquet/hadoop/metadata/ParquetMetadata/getBlocks()
org/apache/parquet/statistics/TestStatistics/DataContext/test()#org/apache/parquet/hadoop/metadata/ParquetMetadata/getFileMetaData()
org/apache/parquet/statistics/TestStatistics/DataContext/test()#org/apache/parquet/schema/MessageType/getColumns()
org/apache/parquet/statistics/TestStatistics/DataContext/test()#org/apache/parquet/hadoop/metadata/FileMetaData/getSchema()
org/apache/parquet/statistics/TestStatistics/DataContext/test()#org/apache/parquet/hadoop/ParquetFileReader/ParquetFileReader(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.metadata.FileMetaData,org.apache.parquet.hadoop.Path,java.util.List,java.util.List)
org/apache/parquet/statistics/TestStatistics/DataContext/test()#org/apache/parquet/hadoop/ParquetFileReader/readFooter(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path,org.apache.parquet.format.converter.ParquetMetadataConverter.MetadataFilter)
org/apache/parquet/statistics/TestStatistics/DataContext/test()#org/apache/parquet/hadoop/ParquetFileReader/readNextRowGroup()
org/apache/parquet/statistics/TestStatistics/DataContext/test()#org/apache/parquet/statistics/TestStatistics/PageStatsValidator/validate(org.apache.parquet.schema.MessageType,org.apache.parquet.column.page.PageReadStore)
org/apache/parquet/statistics/TestStatistics/DataContext/test()#org/apache/parquet/statistics/TestStatistics/PageStatsValidator/PageStatsValidator()
org/apache/parquet/column/values/delta/benchmark/RandomWritingBenchmarkTest/writeRLETest()#org/apache/parquet/bytes/DirectByteBufferAllocator/DirectByteBufferAllocator()
org/apache/parquet/column/values/delta/benchmark/RandomWritingBenchmarkTest/writeRLETest()#org/apache/parquet/column/values/delta/benchmark/BenchMarkTest/runWriteTest(org.apache.parquet.column.values.ValuesWriter)
org/apache/parquet/column/values/delta/benchmark/RandomWritingBenchmarkTest/writeRLETest()#org/apache/parquet/column/values/rle/RunLengthBitPackingHybridValuesWriter/RunLengthBitPackingHybridValuesWriter(int,int,int,org.apache.parquet.bytes.ByteBufferAllocator)
org/apache/parquet/column/values/delta/benchmark/RandomWritingBenchmarkTest/writeDeltaPackingTest()#org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForInteger/DeltaBinaryPackingValuesWriterForInteger(int,int,int,int,org.apache.parquet.bytes.ByteBufferAllocator)
org/apache/parquet/column/values/delta/benchmark/RandomWritingBenchmarkTest/writeDeltaPackingTest()#org/apache/parquet/bytes/DirectByteBufferAllocator/DirectByteBufferAllocator()
org/apache/parquet/column/values/delta/benchmark/RandomWritingBenchmarkTest/writeDeltaPackingTest()#org/apache/parquet/column/values/delta/benchmark/BenchMarkTest/runWriteTest(org.apache.parquet.column.values.ValuesWriter)
org/apache/parquet/column/values/delta/benchmark/RandomWritingBenchmarkTest/writeDeltaPackingTest2()#org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForInteger/DeltaBinaryPackingValuesWriterForInteger(int,int,int,int,org.apache.parquet.bytes.ByteBufferAllocator)
org/apache/parquet/column/values/delta/benchmark/RandomWritingBenchmarkTest/writeDeltaPackingTest2()#org/apache/parquet/bytes/DirectByteBufferAllocator/DirectByteBufferAllocator()
org/apache/parquet/column/values/delta/benchmark/RandomWritingBenchmarkTest/writeDeltaPackingTest2()#org/apache/parquet/column/values/delta/benchmark/BenchMarkTest/runWriteTest(org.apache.parquet.column.values.ValuesWriter)
org/apache/parquet/column/values/delta/benchmark/RandomWritingBenchmarkTest/prepare()#java/util/Random/nextInt(int)
org/apache/parquet/column/values/delta/benchmark/RandomWritingBenchmarkTest/prepare()#java/util/Random/Random()
org/apache/parquet/filter2/predicate/ValidTypeMap/assertTypeValid(org.apache.parquet.filter2.predicate.Operators.Column,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)#org/apache/parquet/filter2/predicate/Operators/Column/getColumnType()
org/apache/parquet/filter2/predicate/ValidTypeMap/assertTypeValid(org.apache.parquet.filter2.predicate.Operators.Column,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)#java/lang/StringBuilder/append(java.lang.String)
org/apache/parquet/filter2/predicate/ValidTypeMap/assertTypeValid(org.apache.parquet.filter2.predicate.Operators.Column,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)#java/util/Map/get(java.lang.Object)
org/apache/parquet/filter2/predicate/ValidTypeMap/assertTypeValid(org.apache.parquet.filter2.predicate.Operators.Column,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)#org/apache/parquet/hadoop/metadata/ColumnPath/toDotString()
org/apache/parquet/filter2/predicate/ValidTypeMap/assertTypeValid(org.apache.parquet.filter2.predicate.Operators.Column,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)#java/util/Set/contains(java.lang.Object)
org/apache/parquet/filter2/predicate/ValidTypeMap/assertTypeValid(org.apache.parquet.filter2.predicate.Operators.Column,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)#java/lang/StringBuilder/StringBuilder()
org/apache/parquet/filter2/predicate/ValidTypeMap/assertTypeValid(org.apache.parquet.filter2.predicate.Operators.Column,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/parquet/filter2/predicate/ValidTypeMap/assertTypeValid(org.apache.parquet.filter2.predicate.Operators.Column,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/parquet/filter2/predicate/ValidTypeMap/assertTypeValid(org.apache.parquet.filter2.predicate.Operators.Column,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)#java/lang/StringBuilder/toString()
org/apache/parquet/filter2/predicate/ValidTypeMap/assertTypeValid(org.apache.parquet.filter2.predicate.Operators.Column,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)#java/lang/Class/getName()
org/apache/parquet/filter2/predicate/ValidTypeMap/assertTypeValid(org.apache.parquet.filter2.predicate.Operators.Column,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)#org/apache/parquet/filter2/predicate/Operators/Column/getColumnPath()
org/apache/parquet/filter2/predicate/ValidTypeMap/add(java.lang.Class,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)#java/util/Map/get(java.lang.Object)
org/apache/parquet/filter2/predicate/ValidTypeMap/add(java.lang.Class,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)#java/util/Set/add(E)
org/apache/parquet/filter2/predicate/ValidTypeMap/add(java.lang.Class,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)#java/util/Map/put(K,V)
org/apache/parquet/filter2/predicate/ValidTypeMap/add(java.lang.Class,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)#java/util/HashSet/HashSet()
org/apache/parquet/pig/TupleWriteSupport/writeTuple(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,org.apache.parquet.pig.Tuple)#org/apache/parquet/schema/Type/getName()
org/apache/parquet/pig/TupleWriteSupport/writeTuple(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,org.apache.parquet.pig.Tuple)#java/util/Map/Entry/getValue()
org/apache/parquet/pig/TupleWriteSupport/writeTuple(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,org.apache.parquet.pig.Tuple)#org/apache/parquet/io/api/RecordConsumer/startField(java.lang.String,int)
org/apache/parquet/pig/TupleWriteSupport/writeTuple(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,org.apache.parquet.pig.Tuple)#org/apache/parquet/schema/Type/asGroupType()
org/apache/parquet/pig/TupleWriteSupport/writeTuple(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,org.apache.parquet.pig.Tuple)#org/apache/parquet/pig/TupleWriteSupport/writeTuple(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,org.apache.parquet.pig.Tuple)
org/apache/parquet/pig/TupleWriteSupport/writeTuple(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,org.apache.parquet.pig.Tuple)#java/util/Arrays/asList(T[])
org/apache/parquet/pig/TupleWriteSupport/writeTuple(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,org.apache.parquet.pig.Tuple)#java/util/Map/Entry/getKey()
org/apache/parquet/pig/TupleWriteSupport/writeTuple(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,org.apache.parquet.pig.Tuple)#org/apache/parquet/io/api/RecordConsumer/startGroup()
org/apache/parquet/pig/TupleWriteSupport/writeTuple(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,org.apache.parquet.pig.Tuple)#org/apache/parquet/pig/TupleWriteSupport/writeValue(org.apache.parquet.schema.Type,org.apache.parquet.pig.convert.FieldSchema,org.apache.parquet.pig.Tuple,int)
org/apache/parquet/pig/TupleWriteSupport/writeTuple(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,org.apache.parquet.pig.Tuple)#org/apache/parquet/io/api/RecordConsumer/endGroup()
org/apache/parquet/pig/TupleWriteSupport/writeTuple(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,org.apache.parquet.pig.Tuple)#java/util/Map/entrySet()
org/apache/parquet/pig/TupleWriteSupport/writeTuple(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,org.apache.parquet.pig.Tuple)#org/apache/parquet/schema/Type/isPrimitive()
org/apache/parquet/pig/TupleWriteSupport/writeTuple(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,org.apache.parquet.pig.Tuple)#java/util/List/size()
org/apache/parquet/pig/TupleWriteSupport/writeTuple(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,org.apache.parquet.pig.Tuple)#java/util/Map/size()
org/apache/parquet/pig/TupleWriteSupport/writeTuple(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,org.apache.parquet.pig.Tuple)#org/apache/parquet/io/api/RecordConsumer/endField(java.lang.String,int)
org/apache/parquet/pig/TupleWriteSupport/writeTuple(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,org.apache.parquet.pig.Tuple)#org/apache/parquet/schema/GroupType/getFields()
org/apache/parquet/pig/TupleWriteSupport/writeTuple(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,org.apache.parquet.pig.Tuple)#java/util/List/get(int)
org/apache/parquet/pig/TupleWriteSupport/writeTuple(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,org.apache.parquet.pig.Tuple)#java/lang/Object/Object()
org/apache/parquet/pig/TupleWriteSupport/writeTuple(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,org.apache.parquet.pig.Tuple)#org/apache/parquet/schema/GroupType/getType(int)
org/apache/parquet/pig/TupleWriteSupport/fromPigSchema(java.lang.String)#org/apache/parquet/pig/TupleWriteSupport/TupleWriteSupport(org.apache.parquet.pig.Schema)
org/apache/parquet/pig/TupleWriteSupport/init(org.apache.parquet.hadoop.Configuration)#org/apache/parquet/hadoop/api/WriteSupport/WriteContext/WriteContext(org.apache.parquet.schema.MessageType,java.util.Map)
org/apache/parquet/pig/TupleWriteSupport/init(org.apache.parquet.hadoop.Configuration)#java/util/HashMap/HashMap()
org/apache/parquet/pig/TupleWriteSupport/init(org.apache.parquet.hadoop.Configuration)#org/apache/parquet/pig/PigMetaData/addToMetaData(java.util.Map)
org/apache/parquet/pig/TupleWriteSupport/init(org.apache.parquet.hadoop.Configuration)#org/apache/parquet/pig/PigMetaData/PigMetaData(org.apache.parquet.pig.Schema)
org/apache/parquet/pig/TupleWriteSupport/writeValue(org.apache.parquet.schema.Type,org.apache.parquet.pig.convert.FieldSchema,org.apache.parquet.pig.Tuple,int)#java/lang/Enum/name()
org/apache/parquet/pig/TupleWriteSupport/writeValue(org.apache.parquet.schema.Type,org.apache.parquet.pig.convert.FieldSchema,org.apache.parquet.pig.Tuple,int)#org/apache/parquet/io/api/Binary/fromReusedByteArray(byte[])
org/apache/parquet/pig/TupleWriteSupport/writeValue(org.apache.parquet.schema.Type,org.apache.parquet.pig.convert.FieldSchema,org.apache.parquet.pig.Tuple,int)#java/lang/Number/doubleValue()
org/apache/parquet/pig/TupleWriteSupport/writeValue(org.apache.parquet.schema.Type,org.apache.parquet.pig.convert.FieldSchema,org.apache.parquet.pig.Tuple,int)#org/apache/parquet/schema/Type/asGroupType()
org/apache/parquet/pig/TupleWriteSupport/writeValue(org.apache.parquet.schema.Type,org.apache.parquet.pig.convert.FieldSchema,org.apache.parquet.pig.Tuple,int)#org/apache/parquet/pig/TupleWriteSupport/writeTuple(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,org.apache.parquet.pig.Tuple)
org/apache/parquet/pig/TupleWriteSupport/writeValue(org.apache.parquet.schema.Type,org.apache.parquet.pig.convert.FieldSchema,org.apache.parquet.pig.Tuple,int)#java/lang/Number/intValue()
org/apache/parquet/pig/TupleWriteSupport/writeValue(org.apache.parquet.schema.Type,org.apache.parquet.pig.convert.FieldSchema,org.apache.parquet.pig.Tuple,int)#org/apache/parquet/schema/Type/asPrimitiveType()
org/apache/parquet/pig/TupleWriteSupport/writeValue(org.apache.parquet.schema.Type,org.apache.parquet.pig.convert.FieldSchema,org.apache.parquet.pig.Tuple,int)#java/lang/String/getBytes(java.lang.String)
org/apache/parquet/pig/TupleWriteSupport/writeValue(org.apache.parquet.schema.Type,org.apache.parquet.pig.convert.FieldSchema,org.apache.parquet.pig.Tuple,int)#org/apache/parquet/io/api/RecordConsumer/addFloat(float)
org/apache/parquet/pig/TupleWriteSupport/writeValue(org.apache.parquet.schema.Type,org.apache.parquet.pig.convert.FieldSchema,org.apache.parquet.pig.Tuple,int)#java/lang/Number/longValue()
org/apache/parquet/pig/TupleWriteSupport/writeValue(org.apache.parquet.schema.Type,org.apache.parquet.pig.convert.FieldSchema,org.apache.parquet.pig.Tuple,int)#org/apache/parquet/schema/Type/isPrimitive()
org/apache/parquet/pig/TupleWriteSupport/writeValue(org.apache.parquet.schema.Type,org.apache.parquet.pig.convert.FieldSchema,org.apache.parquet.pig.Tuple,int)#org/apache/parquet/io/api/RecordConsumer/addLong(long)
org/apache/parquet/pig/TupleWriteSupport/writeValue(org.apache.parquet.schema.Type,org.apache.parquet.pig.convert.FieldSchema,org.apache.parquet.pig.Tuple,int)#org/apache/parquet/io/api/RecordConsumer/addDouble(double)
org/apache/parquet/pig/TupleWriteSupport/writeValue(org.apache.parquet.schema.Type,org.apache.parquet.pig.convert.FieldSchema,org.apache.parquet.pig.Tuple,int)#org/apache/parquet/io/api/RecordConsumer/addBoolean(boolean)
org/apache/parquet/pig/TupleWriteSupport/writeValue(org.apache.parquet.schema.Type,org.apache.parquet.pig.convert.FieldSchema,org.apache.parquet.pig.Tuple,int)#java/lang/Number/floatValue()
org/apache/parquet/pig/TupleWriteSupport/writeValue(org.apache.parquet.schema.Type,org.apache.parquet.pig.convert.FieldSchema,org.apache.parquet.pig.Tuple,int)#org/apache/parquet/io/api/RecordConsumer/addInteger(int)
org/apache/parquet/pig/TupleWriteSupport/writeValue(org.apache.parquet.schema.Type,org.apache.parquet.pig.convert.FieldSchema,org.apache.parquet.pig.Tuple,int)#org/apache/parquet/io/api/RecordConsumer/addBinary(org.apache.parquet.io.api.Binary)
org/apache/parquet/pig/TupleWriteSupport/writeValue(org.apache.parquet.schema.Type,org.apache.parquet.pig.convert.FieldSchema,org.apache.parquet.pig.Tuple,int)#org/apache/parquet/io/api/RecordConsumer/startGroup()
org/apache/parquet/pig/TupleWriteSupport/writeValue(org.apache.parquet.schema.Type,org.apache.parquet.pig.convert.FieldSchema,org.apache.parquet.pig.Tuple,int)#org/apache/parquet/io/ParquetEncodingException/ParquetEncodingException(java.lang.String,java.lang.Throwable)
org/apache/parquet/pig/TupleWriteSupport/writeValue(org.apache.parquet.schema.Type,org.apache.parquet.pig.convert.FieldSchema,org.apache.parquet.pig.Tuple,int)#java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)
org/apache/parquet/pig/TupleWriteSupport/writeValue(org.apache.parquet.schema.Type,org.apache.parquet.pig.convert.FieldSchema,org.apache.parquet.pig.Tuple,int)#org/apache/parquet/io/api/RecordConsumer/endGroup()
org/apache/parquet/pig/TupleWriteSupport/writeValue(org.apache.parquet.schema.Type,org.apache.parquet.pig.convert.FieldSchema,org.apache.parquet.pig.Tuple,int)#org/apache/parquet/schema/PrimitiveType/getPrimitiveTypeName()
org/apache/parquet/pig/TupleWriteSupport/write(org.apache.parquet.pig.Tuple)#org/apache/parquet/io/api/RecordConsumer/endMessage()
org/apache/parquet/pig/TupleWriteSupport/write(org.apache.parquet.pig.Tuple)#org/apache/parquet/pig/TupleWriteSupport/writeTuple(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,org.apache.parquet.pig.Tuple)
org/apache/parquet/pig/TupleWriteSupport/write(org.apache.parquet.pig.Tuple)#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/apache/parquet/pig/TupleWriteSupport/write(org.apache.parquet.pig.Tuple)#org/apache/parquet/io/api/RecordConsumer/startMessage()
org/apache/parquet/avro/TestReflectInputOutputFormat/ShortCar/hashCode()#java/lang/String/hashCode()
org/apache/parquet/avro/TestReflectInputOutputFormat/ShortCar/hashCode()#java/util/Arrays/hashCode(byte[])
org/apache/parquet/avro/TestReflectInputOutputFormat/ShortCar/hashCode()#org/apache/parquet/avro/TestReflectInputOutputFormat/Engine/hashCode()
org/apache/parquet/avro/TestReflectInputOutputFormat/ShortCar/equals(java.lang.Object)#org/apache/parquet/avro/TestReflectInputOutputFormat/Engine/equals(java.lang.Object)
org/apache/parquet/avro/TestReflectInputOutputFormat/ShortCar/equals(java.lang.Object)#java/util/Arrays/equals(byte[],byte[])
org/apache/parquet/avro/TestReflectInputOutputFormat/ShortCar/equals(java.lang.Object)#java/lang/String/equals(java.lang.Object)
org/apache/parquet/avro/TestReflectInputOutputFormat/ShortCar/equals(java.lang.Object)#java/lang/Object/getClass()
org/apache/parquet/avro/TestAvroDataSupplier/testSetSupplierMethod()#org/apache/parquet/avro/AvroReadSupport/setAvroDataSupplier(org.apache.parquet.hadoop.Configuration,java.lang.Class)
org/apache/parquet/thrift/projection/TestFieldsPath/PrimitivePathVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.I32Type,org.apache.parquet.thrift.projection.FieldsPath)#org/apache/parquet/thrift/projection/TestFieldsPath/PrimitivePathVisitor/visitPrimitive(org.apache.parquet.thrift.projection.FieldsPath)
org/apache/parquet/thrift/projection/TestFieldsPath/PrimitivePathVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.I64Type,org.apache.parquet.thrift.projection.FieldsPath)#org/apache/parquet/thrift/projection/TestFieldsPath/PrimitivePathVisitor/visitPrimitive(org.apache.parquet.thrift.projection.FieldsPath)
org/apache/parquet/thrift/projection/TestFieldsPath/PrimitivePathVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.BoolType,org.apache.parquet.thrift.projection.FieldsPath)#org/apache/parquet/thrift/projection/TestFieldsPath/PrimitivePathVisitor/visitPrimitive(org.apache.parquet.thrift.projection.FieldsPath)
org/apache/parquet/thrift/projection/TestFieldsPath/PrimitivePathVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.ByteType,org.apache.parquet.thrift.projection.FieldsPath)#org/apache/parquet/thrift/projection/TestFieldsPath/PrimitivePathVisitor/visitPrimitive(org.apache.parquet.thrift.projection.FieldsPath)
org/apache/parquet/thrift/projection/TestFieldsPath/PrimitivePathVisitor/visitPrimitive(org.apache.parquet.thrift.projection.FieldsPath)#java/util/Arrays/asList(T[])
org/apache/parquet/thrift/projection/TestFieldsPath/PrimitivePathVisitor/visitPrimitive(org.apache.parquet.thrift.projection.FieldsPath)#org/apache/parquet/thrift/projection/FieldsPath/toDelimitedString(java.lang.String)
org/apache/parquet/thrift/projection/TestFieldsPath/PrimitivePathVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.EnumType,org.apache.parquet.thrift.projection.FieldsPath)#org/apache/parquet/thrift/projection/TestFieldsPath/PrimitivePathVisitor/visitPrimitive(org.apache.parquet.thrift.projection.FieldsPath)
org/apache/parquet/thrift/projection/TestFieldsPath/PrimitivePathVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.ListType,org.apache.parquet.thrift.projection.FieldsPath)#org/apache/parquet/thrift/struct/ThriftType/ListType/getValues()
org/apache/parquet/thrift/projection/TestFieldsPath/PrimitivePathVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.ListType,org.apache.parquet.thrift.projection.FieldsPath)#org/apache/parquet/thrift/struct/ThriftField/getType()
org/apache/parquet/thrift/projection/TestFieldsPath/PrimitivePathVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.ListType,org.apache.parquet.thrift.projection.FieldsPath)#org/apache/parquet/thrift/struct/ThriftType/accept(org.apache.parquet.thrift.struct.ThriftType.StateVisitor,S)
org/apache/parquet/thrift/projection/TestFieldsPath/PrimitivePathVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.StructType,org.apache.parquet.thrift.projection.FieldsPath)#java/util/ArrayList/ArrayList()
org/apache/parquet/thrift/projection/TestFieldsPath/PrimitivePathVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.StructType,org.apache.parquet.thrift.projection.FieldsPath)#org/apache/parquet/thrift/struct/ThriftField/getType()
org/apache/parquet/thrift/projection/TestFieldsPath/PrimitivePathVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.StructType,org.apache.parquet.thrift.projection.FieldsPath)#java/util/List/addAll(java.util.Collection)
org/apache/parquet/thrift/projection/TestFieldsPath/PrimitivePathVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.StructType,org.apache.parquet.thrift.projection.FieldsPath)#org/apache/parquet/thrift/struct/ThriftType/StructType/getChildren()
org/apache/parquet/thrift/projection/TestFieldsPath/PrimitivePathVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.StructType,org.apache.parquet.thrift.projection.FieldsPath)#org/apache/parquet/thrift/projection/FieldsPath/push(org.apache.parquet.thrift.struct.ThriftField)
org/apache/parquet/thrift/projection/TestFieldsPath/PrimitivePathVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.StructType,org.apache.parquet.thrift.projection.FieldsPath)#org/apache/parquet/thrift/struct/ThriftType/accept(org.apache.parquet.thrift.struct.ThriftType.StateVisitor,S)
org/apache/parquet/thrift/projection/TestFieldsPath/PrimitivePathVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.I16Type,org.apache.parquet.thrift.projection.FieldsPath)#org/apache/parquet/thrift/projection/TestFieldsPath/PrimitivePathVisitor/visitPrimitive(org.apache.parquet.thrift.projection.FieldsPath)
org/apache/parquet/thrift/projection/TestFieldsPath/PrimitivePathVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.SetType,org.apache.parquet.thrift.projection.FieldsPath)#org/apache/parquet/thrift/struct/ThriftField/getType()
org/apache/parquet/thrift/projection/TestFieldsPath/PrimitivePathVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.SetType,org.apache.parquet.thrift.projection.FieldsPath)#org/apache/parquet/thrift/struct/ThriftType/SetType/getValues()
org/apache/parquet/thrift/projection/TestFieldsPath/PrimitivePathVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.SetType,org.apache.parquet.thrift.projection.FieldsPath)#org/apache/parquet/thrift/struct/ThriftType/accept(org.apache.parquet.thrift.struct.ThriftType.StateVisitor,S)
org/apache/parquet/thrift/projection/TestFieldsPath/PrimitivePathVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.StructType,java.lang.String)#org/apache/parquet/thrift/projection/TestFieldsPath/PrimitivePathVisitor/PrimitivePathVisitor(java.lang.String)
org/apache/parquet/thrift/projection/TestFieldsPath/PrimitivePathVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.StructType,java.lang.String)#org/apache/parquet/thrift/struct/ThriftType/StructType/accept(org.apache.parquet.thrift.struct.ThriftType.StateVisitor,S)
org/apache/parquet/thrift/projection/TestFieldsPath/PrimitivePathVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.StructType,java.lang.String)#org/apache/parquet/thrift/projection/FieldsPath/FieldsPath()
org/apache/parquet/thrift/projection/TestFieldsPath/PrimitivePathVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.MapType,org.apache.parquet.thrift.projection.FieldsPath)#java/util/ArrayList/ArrayList()
org/apache/parquet/thrift/projection/TestFieldsPath/PrimitivePathVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.MapType,org.apache.parquet.thrift.projection.FieldsPath)#org/apache/parquet/thrift/struct/ThriftType/MapType/getKey()
org/apache/parquet/thrift/projection/TestFieldsPath/PrimitivePathVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.MapType,org.apache.parquet.thrift.projection.FieldsPath)#org/apache/parquet/thrift/struct/ThriftField/getType()
org/apache/parquet/thrift/projection/TestFieldsPath/PrimitivePathVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.MapType,org.apache.parquet.thrift.projection.FieldsPath)#java/util/List/addAll(java.util.Collection)
org/apache/parquet/thrift/projection/TestFieldsPath/PrimitivePathVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.MapType,org.apache.parquet.thrift.projection.FieldsPath)#org/apache/parquet/thrift/struct/ThriftType/MapType/getValue()
org/apache/parquet/thrift/projection/TestFieldsPath/PrimitivePathVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.MapType,org.apache.parquet.thrift.projection.FieldsPath)#org/apache/parquet/thrift/projection/FieldsPath/push(org.apache.parquet.thrift.struct.ThriftField)
org/apache/parquet/thrift/projection/TestFieldsPath/PrimitivePathVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.MapType,org.apache.parquet.thrift.projection.FieldsPath)#org/apache/parquet/thrift/struct/ThriftType/accept(org.apache.parquet.thrift.struct.ThriftType.StateVisitor,S)
org/apache/parquet/thrift/projection/TestFieldsPath/PrimitivePathVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.StringType,org.apache.parquet.thrift.projection.FieldsPath)#org/apache/parquet/thrift/projection/TestFieldsPath/PrimitivePathVisitor/visitPrimitive(org.apache.parquet.thrift.projection.FieldsPath)
org/apache/parquet/thrift/projection/TestFieldsPath/PrimitivePathVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.DoubleType,org.apache.parquet.thrift.projection.FieldsPath)#org/apache/parquet/thrift/projection/TestFieldsPath/PrimitivePathVisitor/visitPrimitive(org.apache.parquet.thrift.projection.FieldsPath)
org/apache/parquet/thrift/ThriftParquetReader/Builder/withConf(org.apache.parquet.hadoop.Configuration)#org/apache/parquet/Preconditions/checkNotNull(T,java.lang.String)
org/apache/parquet/thrift/ThriftParquetReader/Builder/withFilter(org.apache.parquet.filter2.compat.FilterCompat.Filter)#org/apache/parquet/Preconditions/checkNotNull(T,java.lang.String)
org/apache/parquet/thrift/ThriftParquetReader/Builder/build()#org/apache/parquet/hadoop/ParquetReader/builder(org.apache.parquet.hadoop.api.ReadSupport,org.apache.parquet.hadoop.Path)
org/apache/parquet/thrift/ThriftParquetReader/Builder/build()#org/apache/parquet/hadoop/thrift/ThriftReadSupport/ThriftReadSupport()
org/apache/parquet/thrift/ThriftParquetReader/Builder/build()#org/apache/parquet/hadoop/thrift/ThriftReadSupport/ThriftReadSupport(java.lang.Class)
org/apache/parquet/thrift/ThriftParquetReader/Builder/withThriftClass(java.lang.Class)#org/apache/parquet/Preconditions/checkNotNull(T,java.lang.String)
org/apache/parquet/hadoop/DeprecatedInputFormatTest/DeprecatedWriteMapper/map(java.lang.Void,org.apache.parquet.hadoop.mapred.Container,org.apache.parquet.hadoop.OutputCollector,org.apache.parquet.hadoop.Reporter)#org/apache/parquet/hadoop/mapred/Container/get()
org/apache/parquet/hadoop/DeprecatedInputFormatTest/DeprecatedWriteMapper/map(java.lang.Void,org.apache.parquet.hadoop.mapred.Container,org.apache.parquet.hadoop.OutputCollector,org.apache.parquet.hadoop.Reporter)#org/apache/parquet/example/data/GroupValueSource/getString(java.lang.String,int)
org/apache/parquet/hadoop/DeprecatedInputFormatTest/DeprecatedWriteMapper/map(java.lang.Void,org.apache.parquet.hadoop.mapred.Container,org.apache.parquet.hadoop.OutputCollector,org.apache.parquet.hadoop.Reporter)#org/apache/parquet/example/data/GroupValueSource/getInteger(java.lang.String,int)
org/apache/parquet/schema/Types/BaseListBuilder/MapElementBuilder/named(java.lang.String)#org/apache/parquet/schema/Types/Builder/named(java.lang.String)
org/apache/parquet/schema/Types/BaseListBuilder/MapElementBuilder/named(java.lang.String)#org/apache/parquet/schema/Types/BaseListBuilder/setElementType(org.apache.parquet.schema.Type)
org/apache/parquet/schema/Types/BaseListBuilder/MapElementBuilder/named(java.lang.String)#org/apache/parquet/schema/Types/BaseMapBuilder/build(java.lang.String)
org/apache/parquet/column/values/bitpacking/ByteBitPackingValuesWriter/reset()#org/apache/parquet/column/values/bitpacking/ByteBasedBitPackingEncoder/ByteBasedBitPackingEncoder(int,org.apache.parquet.column.values.bitpacking.Packer)
org/apache/parquet/column/values/bitpacking/ByteBitPackingValuesWriter/getBufferedSize()#org/apache/parquet/column/values/bitpacking/ByteBasedBitPackingEncoder/getBufferSize()
org/apache/parquet/column/values/bitpacking/ByteBitPackingValuesWriter/getAllocatedSize()#org/apache/parquet/column/values/bitpacking/ByteBasedBitPackingEncoder/getAllocatedSize()
org/apache/parquet/column/values/bitpacking/ByteBitPackingValuesWriter/getBytes()#org/apache/parquet/io/ParquetEncodingException/ParquetEncodingException(java.lang.Throwable)
org/apache/parquet/column/values/bitpacking/ByteBitPackingValuesWriter/getBytes()#org/apache/parquet/column/values/bitpacking/ByteBasedBitPackingEncoder/toBytes()
org/apache/parquet/column/values/bitpacking/ByteBitPackingValuesWriter/memUsageString(java.lang.String)#org/apache/parquet/column/values/bitpacking/ByteBasedBitPackingEncoder/memUsageString(java.lang.String)
org/apache/parquet/column/values/bitpacking/ByteBitPackingValuesWriter/writeInteger(int)#org/apache/parquet/io/ParquetEncodingException/ParquetEncodingException(java.lang.Throwable)
org/apache/parquet/column/values/bitpacking/ByteBitPackingValuesWriter/writeInteger(int)#org/apache/parquet/column/values/bitpacking/ByteBasedBitPackingEncoder/writeInt(int)
org/apache/parquet/cascading/ParquetTBaseScheme/sourceConfInit(org.apache.parquet.cascading.FlowProcess,org.apache.parquet.cascading.Tap,org.apache.parquet.hadoop.JobConf)#org/apache/parquet/hadoop/thrift/ThriftReadSupport/setRecordConverterClass(org.apache.parquet.hadoop.JobConf,java.lang.Class)
org/apache/parquet/cascading/ParquetTBaseScheme/sourceConfInit(org.apache.parquet.cascading.FlowProcess,org.apache.parquet.cascading.Tap,org.apache.parquet.hadoop.JobConf)#org/apache/parquet/cascading/ParquetValueScheme/sourceConfInit(org.apache.parquet.cascading.FlowProcess,org.apache.parquet.cascading.Tap,org.apache.parquet.hadoop.JobConf)
org/apache/parquet/cascading/ParquetTBaseScheme/sourceConfInit(org.apache.parquet.cascading.FlowProcess,org.apache.parquet.cascading.Tap,org.apache.parquet.hadoop.JobConf)#org/apache/parquet/hadoop/ParquetInputFormat/setReadSupportClass(org.apache.parquet.hadoop.Job,java.lang.Class)
org/apache/parquet/cascading/ParquetTBaseScheme/sinkConfInit(org.apache.parquet.cascading.FlowProcess,org.apache.parquet.cascading.Tap,org.apache.parquet.hadoop.JobConf)#org/apache/parquet/hadoop/thrift/TBaseWriteSupport/setThriftClass(org.apache.parquet.hadoop.Configuration,java.lang.Class)
org/apache/parquet/cascading/ParquetTBaseScheme/sinkConfInit(org.apache.parquet.cascading.FlowProcess,org.apache.parquet.cascading.Tap,org.apache.parquet.hadoop.JobConf)#org/apache/parquet/hadoop/mapred/DeprecatedParquetOutputFormat/setAsOutputFormat(org.apache.parquet.hadoop.JobConf)
org/apache/parquet/cascading/ParquetTBaseScheme/sinkConfInit(org.apache.parquet.cascading.FlowProcess,org.apache.parquet.cascading.Tap,org.apache.parquet.hadoop.JobConf)#org/apache/parquet/cascading/ParquetValueScheme/Config/getKlass()
org/apache/parquet/cascading/ParquetTBaseScheme/sinkConfInit(org.apache.parquet.cascading.FlowProcess,org.apache.parquet.cascading.Tap,org.apache.parquet.hadoop.JobConf)#org/apache/parquet/hadoop/mapred/DeprecatedParquetOutputFormat/setWriteSupportClass(org.apache.parquet.hadoop.Configuration,java.lang.Class)
org/apache/parquet/cascading/ParquetTBaseScheme/sinkConfInit(org.apache.parquet.cascading.FlowProcess,org.apache.parquet.cascading.Tap,org.apache.parquet.hadoop.JobConf)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/hadoop/hive/ql/io/parquet/serde/TestParquetHiveArrayInspector/testEmptyContainer()#org/apache/hadoop/hive/ql/io/parquet/serde/ParquetHiveArrayInspector/getListElement(java.lang.Object,int)
org/apache/hadoop/hive/ql/io/parquet/serde/TestParquetHiveArrayInspector/testEmptyContainer()#org/apache/hadoop/hive/ql/io/parquet/serde/ParquetHiveArrayInspector/getList(java.lang.Object)
org/apache/hadoop/hive/ql/io/parquet/serde/TestParquetHiveArrayInspector/testEmptyContainer()#org/apache/hadoop/hive/ql/io/parquet/serde/ParquetHiveArrayInspector/getListLength(java.lang.Object)
org/apache/hadoop/hive/ql/io/parquet/serde/TestParquetHiveArrayInspector/testEmptyContainer()#java/lang/Object/Object()
org/apache/hadoop/hive/ql/io/parquet/serde/TestParquetHiveArrayInspector/testNullArray()#org/apache/hadoop/hive/ql/io/parquet/serde/ParquetHiveArrayInspector/getListElement(java.lang.Object,int)
org/apache/hadoop/hive/ql/io/parquet/serde/TestParquetHiveArrayInspector/testNullArray()#org/apache/hadoop/hive/ql/io/parquet/serde/ParquetHiveArrayInspector/getList(java.lang.Object)
org/apache/hadoop/hive/ql/io/parquet/serde/TestParquetHiveArrayInspector/testNullArray()#org/apache/hadoop/hive/ql/io/parquet/serde/ParquetHiveArrayInspector/getListLength(java.lang.Object)
org/apache/hadoop/hive/ql/io/parquet/serde/TestParquetHiveArrayInspector/setUp()#org/apache/hadoop/hive/ql/io/parquet/serde/ParquetHiveArrayInspector/ParquetHiveArrayInspector(org.apache.hadoop.hive.ql.io.parquet.serde.ObjectInspector)
org/apache/hadoop/hive/ql/io/parquet/serde/TestParquetHiveArrayInspector/testNullContainer()#org/apache/hadoop/hive/ql/io/parquet/serde/ParquetHiveArrayInspector/getListElement(java.lang.Object,int)
org/apache/hadoop/hive/ql/io/parquet/serde/TestParquetHiveArrayInspector/testNullContainer()#org/apache/hadoop/hive/ql/io/parquet/serde/ParquetHiveArrayInspector/getList(java.lang.Object)
org/apache/hadoop/hive/ql/io/parquet/serde/TestParquetHiveArrayInspector/testNullContainer()#org/apache/hadoop/hive/ql/io/parquet/serde/ParquetHiveArrayInspector/getListLength(java.lang.Object)
org/apache/hadoop/hive/ql/io/parquet/serde/TestParquetHiveArrayInspector/testRegularList()#java/util/ArrayList/ArrayList()
org/apache/hadoop/hive/ql/io/parquet/serde/TestParquetHiveArrayInspector/testRegularList()#org/apache/hadoop/hive/ql/io/parquet/serde/ParquetHiveArrayInspector/getListElement(java.lang.Object,int)
org/apache/hadoop/hive/ql/io/parquet/serde/TestParquetHiveArrayInspector/testRegularList()#org/apache/hadoop/hive/ql/io/parquet/serde/ParquetHiveArrayInspector/getList(java.lang.Object)
org/apache/hadoop/hive/ql/io/parquet/serde/TestParquetHiveArrayInspector/testRegularList()#org/apache/hadoop/hive/ql/io/parquet/serde/ParquetHiveArrayInspector/getListLength(java.lang.Object)
org/apache/hadoop/hive/ql/io/parquet/serde/TestParquetHiveArrayInspector/testRegularList()#java/lang/Object/Object()
org/apache/parquet/hadoop/codec/SnappyUtil/validateBuffer(byte[],int,int)#org/apache/parquet/Preconditions/checkArgument(boolean,java.lang.String,java.lang.Object[])
org/apache/parquet/hadoop/codec/SnappyUtil/validateBuffer(byte[],int,int)#org/apache/parquet/Preconditions/checkNotNull(T,java.lang.String)
org/apache/parquet/pig/TupleConsumerPerfTest/read(org.apache.parquet.column.page.PageReadStore,java.lang.String,java.lang.String,java.lang.String)#org/apache/parquet/pig/TupleConsumerPerfTest/read(org.apache.parquet.column.page.PageReadStore,java.lang.String,java.lang.String)
org/apache/parquet/pig/TupleConsumerPerfTest/pigSchema(boolean,boolean)#java/lang/StringBuilder/append(java.lang.String)
org/apache/parquet/pig/TupleConsumerPerfTest/pigSchema(boolean,boolean)#java/lang/StringBuilder/StringBuilder()
org/apache/parquet/pig/TupleConsumerPerfTest/pigSchema(boolean,boolean)#java/lang/StringBuilder/toString()
org/apache/parquet/pig/TupleConsumerPerfTest/write(org.apache.parquet.column.page.mem.MemPageStore,org.apache.parquet.pig.TupleWriteSupport,int)#org/apache/parquet/column/page/mem/MemPageStore/addRowCount(long)
org/apache/parquet/pig/TupleConsumerPerfTest/write(org.apache.parquet.column.page.mem.MemPageStore,org.apache.parquet.pig.TupleWriteSupport,int)#org/apache/parquet/pig/TupleWriteSupport/write(org.apache.parquet.pig.Tuple)
org/apache/parquet/pig/TupleConsumerPerfTest/write(org.apache.parquet.column.page.mem.MemPageStore,org.apache.parquet.pig.TupleWriteSupport,int)#java/io/PrintStream/printf(java.lang.String,java.lang.Object[])
org/apache/parquet/pig/TupleConsumerPerfTest/write(org.apache.parquet.column.page.mem.MemPageStore,org.apache.parquet.pig.TupleWriteSupport,int)#org/apache/parquet/pig/TupleConsumerPerfTest/tuple()
org/apache/parquet/pig/TupleConsumerPerfTest/write(org.apache.parquet.column.page.mem.MemPageStore,org.apache.parquet.pig.TupleWriteSupport,int)#java/lang/System/currentTimeMillis()
org/apache/parquet/pig/TupleConsumerPerfTest/write(org.apache.parquet.column.page.mem.MemPageStore,org.apache.parquet.column.impl.ColumnWriteStoreV1,org.apache.parquet.schema.MessageType,java.lang.String)#org/apache/parquet/pig/TupleConsumerPerfTest/write(org.apache.parquet.column.page.mem.MemPageStore,org.apache.parquet.pig.TupleWriteSupport,int)
org/apache/parquet/pig/TupleConsumerPerfTest/write(org.apache.parquet.column.page.mem.MemPageStore,org.apache.parquet.column.impl.ColumnWriteStoreV1,org.apache.parquet.schema.MessageType,java.lang.String)#java/io/PrintStream/println()
org/apache/parquet/pig/TupleConsumerPerfTest/write(org.apache.parquet.column.page.mem.MemPageStore,org.apache.parquet.column.impl.ColumnWriteStoreV1,org.apache.parquet.schema.MessageType,java.lang.String)#org/apache/parquet/pig/TupleWriteSupport/fromPigSchema(java.lang.String)
org/apache/parquet/pig/TupleConsumerPerfTest/write(org.apache.parquet.column.page.mem.MemPageStore,org.apache.parquet.column.impl.ColumnWriteStoreV1,org.apache.parquet.schema.MessageType,java.lang.String)#org/apache/parquet/io/MessageColumnIO/getRecordWriter(org.apache.parquet.column.ColumnWriteStore)
org/apache/parquet/pig/TupleConsumerPerfTest/write(org.apache.parquet.column.page.mem.MemPageStore,org.apache.parquet.column.impl.ColumnWriteStoreV1,org.apache.parquet.schema.MessageType,java.lang.String)#org/apache/parquet/pig/TupleConsumerPerfTest/newColumnFactory(java.lang.String)
org/apache/parquet/pig/TupleConsumerPerfTest/write(org.apache.parquet.column.page.mem.MemPageStore,org.apache.parquet.column.impl.ColumnWriteStoreV1,org.apache.parquet.schema.MessageType,java.lang.String)#org/apache/parquet/pig/TupleWriteSupport/init(org.apache.parquet.hadoop.Configuration)
org/apache/parquet/pig/TupleConsumerPerfTest/write(org.apache.parquet.column.page.mem.MemPageStore,org.apache.parquet.column.impl.ColumnWriteStoreV1,org.apache.parquet.schema.MessageType,java.lang.String)#org/apache/parquet/pig/TupleWriteSupport/prepareForWrite(org.apache.parquet.io.api.RecordConsumer)
org/apache/parquet/pig/TupleConsumerPerfTest/newColumnFactory(java.lang.String)#org/apache/parquet/io/ColumnIOFactory/getColumnIO(org.apache.parquet.schema.MessageType)
org/apache/parquet/pig/TupleConsumerPerfTest/newColumnFactory(java.lang.String)#org/apache/parquet/io/ColumnIOFactory/ColumnIOFactory()
org/apache/parquet/pig/TupleConsumerPerfTest/newColumnFactory(java.lang.String)#org/apache/parquet/pig/PigSchemaConverter/PigSchemaConverter()
org/apache/parquet/pig/TupleConsumerPerfTest/newColumnFactory(java.lang.String)#org/apache/parquet/pig/PigSchemaConverter/convert(org.apache.parquet.schema.MessageType)
org/apache/parquet/pig/TupleConsumerPerfTest/read(org.apache.parquet.column.page.PageReadStore,java.lang.String,java.lang.String)#java/io/PrintStream/println(java.lang.String)
org/apache/parquet/pig/TupleConsumerPerfTest/read(org.apache.parquet.column.page.PageReadStore,java.lang.String,java.lang.String)#java/io/PrintStream/println()
org/apache/parquet/pig/TupleConsumerPerfTest/read(org.apache.parquet.column.page.PageReadStore,java.lang.String,java.lang.String)#org/apache/parquet/pig/TupleReadSupport/prepareForRead(org.apache.parquet.hadoop.Configuration,java.util.Map,org.apache.parquet.schema.MessageType,org.apache.parquet.hadoop.api.ReadSupport.ReadContext)
org/apache/parquet/pig/TupleConsumerPerfTest/read(org.apache.parquet.column.page.PageReadStore,java.lang.String,java.lang.String)#org/apache/parquet/io/MessageColumnIO/getRecordReader(org.apache.parquet.column.page.PageReadStore,org.apache.parquet.io.api.RecordMaterializer)
org/apache/parquet/pig/TupleConsumerPerfTest/read(org.apache.parquet.column.page.PageReadStore,java.lang.String,java.lang.String)#org/apache/parquet/pig/PigSchemaConverter/convert(org.apache.parquet.schema.MessageType)
org/apache/parquet/pig/TupleConsumerPerfTest/read(org.apache.parquet.column.page.PageReadStore,java.lang.String,java.lang.String)#org/apache/parquet/pig/TupleConsumerPerfTest/read(org.apache.parquet.io.RecordReader,int,java.lang.String)
org/apache/parquet/pig/TupleConsumerPerfTest/read(org.apache.parquet.column.page.PageReadStore,java.lang.String,java.lang.String)#org/apache/parquet/pig/TupleConsumerPerfTest/pigMetaData(java.lang.String)
org/apache/parquet/pig/TupleConsumerPerfTest/read(org.apache.parquet.column.page.PageReadStore,java.lang.String,java.lang.String)#org/apache/parquet/hadoop/api/ReadSupport/init(org.apache.parquet.hadoop.Configuration,java.util.Map,org.apache.parquet.schema.MessageType)
org/apache/parquet/pig/TupleConsumerPerfTest/read(org.apache.parquet.column.page.PageReadStore,java.lang.String,java.lang.String)#org/apache/parquet/pig/TupleConsumerPerfTest/newColumnFactory(java.lang.String)
org/apache/parquet/pig/TupleConsumerPerfTest/read(org.apache.parquet.column.page.PageReadStore,java.lang.String,java.lang.String)#org/apache/parquet/pig/TupleReadSupport/TupleReadSupport()
org/apache/parquet/pig/TupleConsumerPerfTest/read(org.apache.parquet.column.page.PageReadStore,java.lang.String,java.lang.String)#org/apache/parquet/pig/PigSchemaConverter/PigSchemaConverter()
org/apache/parquet/pig/TupleConsumerPerfTest/main(java.lang.String[])#org/apache/parquet/pig/TupleConsumerPerfTest/read(org.apache.parquet.column.page.PageReadStore,java.lang.String,java.lang.String,java.lang.String)
org/apache/parquet/pig/TupleConsumerPerfTest/main(java.lang.String[])#org/apache/parquet/column/page/mem/MemPageStore/MemPageStore(long)
org/apache/parquet/pig/TupleConsumerPerfTest/main(java.lang.String[])#org/apache/parquet/column/ParquetProperties/Builder/withPageSize(int)
org/apache/parquet/pig/TupleConsumerPerfTest/main(java.lang.String[])#org/apache/parquet/column/ParquetProperties/Builder/build()
org/apache/parquet/pig/TupleConsumerPerfTest/main(java.lang.String[])#org/apache/parquet/column/ParquetProperties/builder()
org/apache/parquet/pig/TupleConsumerPerfTest/main(java.lang.String[])#java/io/PrintStream/println(java.lang.String)
org/apache/parquet/pig/TupleConsumerPerfTest/main(java.lang.String[])#org/apache/parquet/column/impl/ColumnWriteStoreV1/flush()
org/apache/parquet/pig/TupleConsumerPerfTest/main(java.lang.String[])#org/apache/parquet/column/impl/ColumnWriteStoreV1/ColumnWriteStoreV1(org.apache.parquet.column.page.PageWriteStore,org.apache.parquet.column.ParquetProperties)
org/apache/parquet/pig/TupleConsumerPerfTest/main(java.lang.String[])#org/apache/parquet/column/ParquetProperties/Builder/withDictionaryEncoding(boolean)
org/apache/parquet/pig/TupleConsumerPerfTest/main(java.lang.String[])#org/apache/parquet/pig/TupleConsumerPerfTest/write(org.apache.parquet.column.page.mem.MemPageStore,org.apache.parquet.column.impl.ColumnWriteStoreV1,org.apache.parquet.schema.MessageType,java.lang.String)
org/apache/parquet/pig/TupleConsumerPerfTest/main(java.lang.String[])#org/apache/parquet/column/impl/ColumnWriteStoreV1/getBufferedSize()
org/apache/parquet/pig/TupleConsumerPerfTest/main(java.lang.String[])#org/apache/parquet/pig/PigSchemaConverter/PigSchemaConverter()
org/apache/parquet/pig/TupleConsumerPerfTest/main(java.lang.String[])#org/apache/parquet/pig/PigSchemaConverter/convert(org.apache.parquet.schema.MessageType)
org/apache/parquet/pig/TupleConsumerPerfTest/main(java.lang.String[])#org/apache/parquet/pig/TupleConsumerPerfTest/pigSchema(boolean,boolean)
org/apache/parquet/pig/TupleConsumerPerfTest/main(java.lang.String[])#org/apache/parquet/column/impl/ColumnWriteStoreV1/maxColMemSize()
org/apache/parquet/pig/TupleConsumerPerfTest/tuple()#java/lang/Integer/Integer(int)
org/apache/parquet/pig/TupleConsumerPerfTest/read(org.apache.parquet.io.RecordReader,int,java.lang.String)#java/io/PrintStream/printf(java.lang.String,java.lang.Object[])
org/apache/parquet/pig/TupleConsumerPerfTest/read(org.apache.parquet.io.RecordReader,int,java.lang.String)#java/lang/System/currentTimeMillis()
org/apache/parquet/pig/TupleConsumerPerfTest/read(org.apache.parquet.io.RecordReader,int,java.lang.String)#java/lang/RuntimeException/RuntimeException()
org/apache/parquet/pig/TupleConsumerPerfTest/pigMetaData(java.lang.String)#org/apache/parquet/pig/PigMetaData/addToMetaData(java.util.Map)
org/apache/parquet/pig/TupleConsumerPerfTest/pigMetaData(java.lang.String)#java/util/HashMap/HashMap()
org/apache/parquet/pig/TupleConsumerPerfTest/pigMetaData(java.lang.String)#org/apache/parquet/pig/PigMetaData/PigMetaData(java.lang.String)
org/apache/parquet/avro/AvroIndexedRecordConverter/AvroArrayConverter/ElementConverter/getConverter(int)#org/apache/parquet/Preconditions/checkArgument(boolean,java.lang.String)
org/apache/parquet/avro/AvroParquetReader/Builder/getReadSupport()#org/apache/parquet/avro/AvroReadSupport/AvroReadSupport(org.apache.parquet.avro.GenericData)
org/apache/parquet/column/statistics/BooleanStatistics/setMinMaxFromBytes(byte[],byte[])#org/apache/parquet/bytes/BytesUtils/bytesToBool(byte[])
org/apache/parquet/column/statistics/BooleanStatistics/setMinMaxFromBytes(byte[],byte[])#org/apache/parquet/column/statistics/Statistics/markAsNotEmpty()
org/apache/parquet/column/statistics/BooleanStatistics/getMaxBytes()#org/apache/parquet/bytes/BytesUtils/booleanToBytes(boolean)
org/apache/parquet/column/statistics/BooleanStatistics/toString()#org/apache/parquet/column/statistics/Statistics/hasNonNullValue()
org/apache/parquet/column/statistics/BooleanStatistics/toString()#java/lang/String/format(java.lang.String,java.lang.Object[])
org/apache/parquet/column/statistics/BooleanStatistics/toString()#org/apache/parquet/column/statistics/Statistics/getNumNulls()
org/apache/parquet/column/statistics/BooleanStatistics/toString()#org/apache/parquet/column/statistics/Statistics/isEmpty()
org/apache/parquet/column/statistics/BooleanStatistics/updateStats(boolean)#org/apache/parquet/column/statistics/BooleanStatistics/initializeStats(boolean,boolean)
org/apache/parquet/column/statistics/BooleanStatistics/updateStats(boolean)#org/apache/parquet/column/statistics/Statistics/hasNonNullValue()
org/apache/parquet/column/statistics/BooleanStatistics/updateStats(boolean)#org/apache/parquet/column/statistics/BooleanStatistics/updateStats(boolean,boolean)
org/apache/parquet/column/statistics/BooleanStatistics/mergeStatisticsMinMax(org.apache.parquet.column.statistics.Statistics)#org/apache/parquet/column/statistics/BooleanStatistics/getMin()
org/apache/parquet/column/statistics/BooleanStatistics/mergeStatisticsMinMax(org.apache.parquet.column.statistics.Statistics)#org/apache/parquet/column/statistics/BooleanStatistics/initializeStats(boolean,boolean)
org/apache/parquet/column/statistics/BooleanStatistics/mergeStatisticsMinMax(org.apache.parquet.column.statistics.Statistics)#org/apache/parquet/column/statistics/Statistics/hasNonNullValue()
org/apache/parquet/column/statistics/BooleanStatistics/mergeStatisticsMinMax(org.apache.parquet.column.statistics.Statistics)#org/apache/parquet/column/statistics/BooleanStatistics/getMax()
org/apache/parquet/column/statistics/BooleanStatistics/mergeStatisticsMinMax(org.apache.parquet.column.statistics.Statistics)#org/apache/parquet/column/statistics/BooleanStatistics/updateStats(boolean,boolean)
org/apache/parquet/column/statistics/BooleanStatistics/getMinBytes()#org/apache/parquet/bytes/BytesUtils/booleanToBytes(boolean)
org/apache/parquet/column/statistics/BooleanStatistics/isSmallerThan(long)#org/apache/parquet/column/statistics/Statistics/hasNonNullValue()
org/apache/parquet/column/statistics/BooleanStatistics/initializeStats(boolean,boolean)#org/apache/parquet/column/statistics/Statistics/markAsNotEmpty()
org/apache/parquet/column/statistics/BooleanStatistics/setMinMax(boolean,boolean)#org/apache/parquet/column/statistics/Statistics/markAsNotEmpty()
org/apache/hadoop/hive/ql/io/parquet/write/DataWritableWriteSupport/getSchema(org.apache.parquet.hadoop.Configuration)#org/apache/parquet/schema/MessageTypeParser/parseMessageType(java.lang.String)
org/apache/hadoop/hive/ql/io/parquet/write/DataWritableWriteSupport/init(org.apache.parquet.hadoop.Configuration)#org/apache/hadoop/hive/ql/io/parquet/write/DataWritableWriteSupport/getSchema(org.apache.parquet.hadoop.Configuration)
org/apache/hadoop/hive/ql/io/parquet/write/DataWritableWriteSupport/init(org.apache.parquet.hadoop.Configuration)#org/apache/parquet/hadoop/api/WriteSupport/WriteContext/WriteContext(org.apache.parquet.schema.MessageType,java.util.Map)
org/apache/hadoop/hive/ql/io/parquet/write/DataWritableWriteSupport/init(org.apache.parquet.hadoop.Configuration)#java/util/HashMap/HashMap()
org/apache/hadoop/hive/ql/io/parquet/write/DataWritableWriteSupport/write(org.apache.hadoop.hive.ql.io.parquet.serde.ArrayWritable)#org/apache/hadoop/hive/ql/io/parquet/write/DataWritableWriter/write(org.apache.hadoop.hive.ql.io.parquet.serde.ArrayWritable)
org/apache/hadoop/hive/ql/io/parquet/write/DataWritableWriteSupport/setSchema(org.apache.parquet.schema.MessageType,org.apache.parquet.hadoop.Configuration)#org/apache/parquet/schema/Type/toString()
org/apache/hadoop/hive/ql/io/parquet/write/DataWritableWriteSupport/prepareForWrite(org.apache.parquet.io.api.RecordConsumer)#org/apache/hadoop/hive/ql/io/parquet/write/DataWritableWriter/DataWritableWriter(org.apache.parquet.io.api.RecordConsumer,org.apache.parquet.schema.GroupType)
org/apache/hadoop/hive/ql/io/parquet/serde/TestStandardParquetHiveMapInspector/testEmptyContainer()#org/apache/hadoop/hive/ql/io/parquet/serde/StandardParquetHiveMapInspector/getMapValueElement(java.lang.Object,java.lang.Object)
org/apache/hadoop/hive/ql/io/parquet/serde/TestStandardParquetHiveMapInspector/testEmptyContainer()#java/lang/Object/Object()
org/apache/hadoop/hive/ql/io/parquet/serde/TestStandardParquetHiveMapInspector/testHashMap()#java/util/HashMap/HashMap()
org/apache/hadoop/hive/ql/io/parquet/serde/TestStandardParquetHiveMapInspector/testHashMap()#org/apache/hadoop/hive/ql/io/parquet/serde/StandardParquetHiveMapInspector/getMapValueElement(java.lang.Object,java.lang.Object)
org/apache/hadoop/hive/ql/io/parquet/serde/TestStandardParquetHiveMapInspector/testNullMap()#org/apache/hadoop/hive/ql/io/parquet/serde/StandardParquetHiveMapInspector/getMapValueElement(java.lang.Object,java.lang.Object)
org/apache/hadoop/hive/ql/io/parquet/serde/TestStandardParquetHiveMapInspector/testRegularMap()#org/apache/hadoop/hive/ql/io/parquet/serde/StandardParquetHiveMapInspector/getMapValueElement(java.lang.Object,java.lang.Object)
org/apache/hadoop/hive/ql/io/parquet/serde/TestStandardParquetHiveMapInspector/testRegularMap()#java/lang/Object/Object()
org/apache/hadoop/hive/ql/io/parquet/serde/TestStandardParquetHiveMapInspector/testNullContainer()#org/apache/hadoop/hive/ql/io/parquet/serde/StandardParquetHiveMapInspector/getMapValueElement(java.lang.Object,java.lang.Object)
org/apache/hadoop/hive/ql/io/parquet/serde/TestStandardParquetHiveMapInspector/setUp()#org/apache/hadoop/hive/ql/io/parquet/serde/StandardParquetHiveMapInspector/StandardParquetHiveMapInspector(org.apache.hadoop.hive.ql.io.parquet.serde.ObjectInspector,org.apache.hadoop.hive.ql.io.parquet.serde.ObjectInspector)
org/apache/parquet/hadoop/TestInputFormatColumnProjection/Writer/map(org.apache.parquet.hadoop.LongWritable,org.apache.hadoop.hive.serde2.objectinspector.primitive.Text,org.apache.parquet.hadoop.Context)#java/lang/String/length()
org/apache/parquet/hadoop/TestInputFormatColumnProjection/Writer/map(org.apache.parquet.hadoop.LongWritable,org.apache.hadoop.hive.serde2.objectinspector.primitive.Text,org.apache.parquet.hadoop.Context)#java/util/UUID/randomUUID()
org/apache/parquet/hadoop/TestInputFormatColumnProjection/Writer/map(org.apache.parquet.hadoop.LongWritable,org.apache.hadoop.hive.serde2.objectinspector.primitive.Text,org.apache.parquet.hadoop.Context)#org/apache/parquet/example/data/Group/add(int,org.apache.parquet.io.api.Binary)
org/apache/parquet/hadoop/TestInputFormatColumnProjection/Writer/map(org.apache.parquet.hadoop.LongWritable,org.apache.hadoop.hive.serde2.objectinspector.primitive.Text,org.apache.parquet.hadoop.Context)#java/util/UUID/toString()
org/apache/parquet/hadoop/TestInputFormatColumnProjection/Writer/map(org.apache.parquet.hadoop.LongWritable,org.apache.hadoop.hive.serde2.objectinspector.primitive.Text,org.apache.parquet.hadoop.Context)#org/apache/parquet/example/data/simple/SimpleGroupFactory/newGroup()
org/apache/parquet/hadoop/TestInputFormatColumnProjection/Writer/map(org.apache.parquet.hadoop.LongWritable,org.apache.hadoop.hive.serde2.objectinspector.primitive.Text,org.apache.parquet.hadoop.Context)#org/apache/parquet/io/api/Binary/fromString(java.lang.String)
org/apache/parquet/hadoop/TestInputFormatColumnProjection/Writer/map(org.apache.parquet.hadoop.LongWritable,org.apache.hadoop.hive.serde2.objectinspector.primitive.Text,org.apache.parquet.hadoop.Context)#java/lang/String/substring(int,int)
org/apache/parquet/hadoop/example/ExampleParquetWriter/Builder/getWriteSupport(org.apache.parquet.hadoop.Configuration)#org/apache/parquet/hadoop/example/GroupWriteSupport/GroupWriteSupport(org.apache.parquet.schema.MessageType,java.util.Map)
org/apache/parquet/proto/TestUtils/writeMessages(org.apache.parquet.proto.MessageOrBuilder[])#org/apache/parquet/proto/TestUtils/inferRecordsClass(org.apache.parquet.proto.MessageOrBuilder[])
org/apache/parquet/proto/TestUtils/writeMessages(org.apache.parquet.proto.MessageOrBuilder[])#org/apache/parquet/proto/TestUtils/writeMessages(java.lang.Class,org.apache.parquet.proto.MessageOrBuilder[])
org/apache/parquet/proto/TestUtils/asMessages(java.util.List)#java/util/ArrayList/ArrayList()
org/apache/parquet/proto/TestUtils/asMessages(java.util.List)#org/apache/parquet/proto/TestUtils/asMessage(org.apache.parquet.proto.MessageOrBuilder)
org/apache/parquet/proto/TestUtils/inferRecordsClass(org.apache.parquet.proto.MessageOrBuilder[])#java/lang/Object/equals(java.lang.Object)
org/apache/parquet/proto/TestUtils/inferRecordsClass(org.apache.parquet.proto.MessageOrBuilder[])#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/apache/parquet/proto/TestUtils/inferRecordsClass(org.apache.parquet.proto.MessageOrBuilder[])#java/lang/Object/getClass()
org/apache/parquet/proto/TestUtils/writeAndRead(T[])#org/apache/parquet/proto/TestUtils/inferRecordsClass(org.apache.parquet.proto.MessageOrBuilder[])
org/apache/parquet/proto/TestUtils/writeAndRead(T[])#org/apache/parquet/proto/TestUtils/readMessages(org.apache.parquet.hadoop.Path)
org/apache/parquet/proto/TestUtils/writeAndRead(T[])#org/apache/parquet/proto/TestUtils/writeMessages(java.lang.Class,org.apache.parquet.proto.MessageOrBuilder[])
org/apache/parquet/proto/TestUtils/readMessages(org.apache.parquet.hadoop.Path)#org/apache/parquet/hadoop/ParquetReader/read()
org/apache/parquet/proto/TestUtils/readMessages(org.apache.parquet.hadoop.Path)#java/util/ArrayList/ArrayList()
org/apache/parquet/proto/TestUtils/readMessages(org.apache.parquet.hadoop.Path)#org/apache/parquet/hadoop/ParquetReader/close()
org/apache/parquet/proto/TestUtils/readMessages(org.apache.parquet.hadoop.Path)#java/util/List/add(E)
org/apache/parquet/proto/TestUtils/readMessages(org.apache.parquet.hadoop.Path)#org/apache/parquet/proto/TestUtils/asMessage(org.apache.parquet.proto.MessageOrBuilder)
org/apache/parquet/proto/TestUtils/readMessages(org.apache.parquet.hadoop.Path)#org/apache/parquet/proto/ProtoParquetReader/ProtoParquetReader(org.apache.parquet.hadoop.Path)
org/apache/parquet/proto/TestUtils/writeMessages(java.lang.Class,org.apache.parquet.proto.MessageOrBuilder[])#org/apache/parquet/proto/ProtoParquetWriter/ProtoParquetWriter(org.apache.parquet.hadoop.Path,java.lang.Class)
org/apache/parquet/proto/TestUtils/writeMessages(java.lang.Class,org.apache.parquet.proto.MessageOrBuilder[])#org/apache/parquet/proto/TestUtils/someTemporaryFilePath()
org/apache/parquet/proto/TestUtils/cloneList(org.apache.parquet.proto.MessageOrBuilder[])#java/util/ArrayList/ArrayList()
org/apache/parquet/proto/TestUtils/cloneList(org.apache.parquet.proto.MessageOrBuilder[])#org/apache/parquet/proto/TestUtils/asMessage(org.apache.parquet.proto.MessageOrBuilder)
org/apache/parquet/proto/TestUtils/testData(T[])#org/apache/parquet/proto/TestUtils/asMessages(java.util.List)
org/apache/parquet/proto/TestUtils/testData(T[])#org/apache/parquet/proto/TestUtils/cloneList(org.apache.parquet.proto.MessageOrBuilder[])
org/apache/parquet/proto/TestUtils/testData(T[])#org/apache/parquet/proto/TestUtils/checkSameBuilderInstance(org.apache.parquet.proto.MessageOrBuilder[])
org/apache/parquet/proto/TestUtils/testData(T[])#org/apache/parquet/proto/TestUtils/writeAndRead(T[])
org/apache/parquet/proto/TestUtils/someTemporaryFilePath()#java/io/File/createTempFile(java.lang.String,java.lang.String)
org/apache/parquet/proto/TestUtils/someTemporaryFilePath()#java/io/File/deleteOnExit()
org/apache/parquet/proto/TestUtils/someTemporaryFilePath()#java/io/File/delete()
org/apache/parquet/proto/TestUtils/someTemporaryFilePath()#java/io/File/getPath()
org/apache/parquet/example/data/simple/LongValue/writeValue(org.apache.parquet.io.api.RecordConsumer)#org/apache/parquet/io/api/RecordConsumer/addLong(long)
org/apache/parquet/example/data/simple/LongValue/toString()#java/lang/String/valueOf(long)
org/apache/parquet/thrift/TestThriftSchemaConverterProjectUnion/testMapWithUnionValue()#org/apache/parquet/thrift/TestThriftSchemaConverter/shouldGetProjectedSchema(java.lang.String,java.lang.String,java.lang.String,java.lang.Class)
org/apache/parquet/thrift/TestThriftSchemaConverterProjectUnion/optionalUnionInRequiredStructShouldBeDropped()#org/apache/parquet/thrift/TestThriftSchemaConverter/shouldGetProjectedSchema(java.lang.String,java.lang.String,java.lang.String,java.lang.Class)
org/apache/parquet/thrift/TestThriftSchemaConverterProjectUnion/requiredUnionInsideOptionalStructShouldBeDropped()#org/apache/parquet/thrift/TestThriftSchemaConverter/shouldGetProjectedSchema(java.lang.String,java.lang.String,java.lang.String,java.lang.Class)
org/apache/parquet/thrift/TestThriftSchemaConverterProjectUnion/testListOfUnions()#org/apache/parquet/thrift/TestThriftSchemaConverter/shouldGetProjectedSchema(java.lang.String,java.lang.String,java.lang.String,java.lang.Class)
org/apache/parquet/thrift/TestThriftSchemaConverterProjectUnion/testMapWithUnionKey()#org/apache/parquet/thrift/TestThriftSchemaConverter/shouldGetProjectedSchema(java.lang.String,java.lang.String,java.lang.String,java.lang.Class)
org/apache/parquet/thrift/TestThriftSchemaConverterProjectUnion/testUnionInsideUnion()#org/apache/parquet/thrift/TestThriftSchemaConverter/shouldGetProjectedSchema(java.lang.String,java.lang.String,java.lang.String,java.lang.Class)
org/apache/parquet/thrift/TestThriftSchemaConverterProjectUnion/optionalUnionShouldBeDropped()#org/apache/parquet/thrift/TestThriftSchemaConverter/shouldGetProjectedSchema(java.lang.String,java.lang.String,java.lang.String,java.lang.Class)
org/apache/parquet/thrift/TestThriftSchemaConverterProjectUnion/requiredUnionInsideOptionalStructShouldBeKeptIfParentSelected()#org/apache/parquet/thrift/TestThriftSchemaConverter/shouldGetProjectedSchema(java.lang.String,java.lang.String,java.lang.String,java.lang.Class)
org/apache/parquet/thrift/TestThriftSchemaConverterProjectUnion/testTopLevelUnions()#org/apache/parquet/thrift/TestThriftSchemaConverter/shouldGetProjectedSchema(java.lang.String,java.lang.String,java.lang.String,java.lang.Class)
org/apache/parquet/thrift/TestThriftSchemaConverterProjectUnion/selectingOneUnionMemberKeepsSentinels()#org/apache/parquet/thrift/TestThriftSchemaConverter/shouldGetProjectedSchema(java.lang.String,java.lang.String,java.lang.String,java.lang.Class)
org/apache/parquet/thrift/TestThriftSchemaConverterProjectUnion/testMessyNestedUnions()#org/apache/parquet/thrift/TestThriftSchemaConverter/shouldGetProjectedSchema(java.lang.String,java.lang.String,java.lang.String,java.lang.Class)
org/apache/parquet/arrow/schema/SchemaMapping/StructTypeMapping/accept(org.apache.parquet.arrow.schema.SchemaMapping.TypeMappingVisitor)#org/apache/parquet/arrow/schema/SchemaMapping/TypeMappingVisitor/visit(org.apache.parquet.arrow.schema.SchemaMapping.StructTypeMapping)
org/apache/parquet/column/values/rle/RunLengthBitPackingHybridIntegrationTest/doIntegrationTest(int)#org/apache/parquet/column/values/rle/RunLengthBitPackingHybridEncoder/RunLengthBitPackingHybridEncoder(int,int,int,org.apache.parquet.bytes.ByteBufferAllocator)
org/apache/parquet/column/values/rle/RunLengthBitPackingHybridIntegrationTest/doIntegrationTest(int)#org/apache/parquet/bytes/ByteBufferInputStream/ByteBufferInputStream(java.nio.ByteBuffer)
org/apache/parquet/column/values/rle/RunLengthBitPackingHybridIntegrationTest/doIntegrationTest(int)#org/apache/parquet/column/values/rle/RunLengthBitPackingHybridDecoder/readInt()
org/apache/parquet/column/values/rle/RunLengthBitPackingHybridIntegrationTest/doIntegrationTest(int)#org/apache/parquet/bytes/DirectByteBufferAllocator/DirectByteBufferAllocator()
org/apache/parquet/column/values/rle/RunLengthBitPackingHybridIntegrationTest/doIntegrationTest(int)#org/apache/parquet/bytes/BytesInput/toByteBuffer()
org/apache/parquet/column/values/rle/RunLengthBitPackingHybridIntegrationTest/doIntegrationTest(int)#org/apache/parquet/column/values/rle/RunLengthBitPackingHybridEncoder/toBytes()
org/apache/parquet/column/values/rle/RunLengthBitPackingHybridIntegrationTest/doIntegrationTest(int)#org/apache/parquet/column/values/rle/RunLengthBitPackingHybridEncoder/writeInt(int)
org/apache/parquet/column/values/rle/RunLengthBitPackingHybridIntegrationTest/doIntegrationTest(int)#org/apache/parquet/column/values/rle/RunLengthBitPackingHybridDecoder/RunLengthBitPackingHybridDecoder(int,java.io.InputStream)
org/apache/parquet/column/values/rle/RunLengthBitPackingHybridIntegrationTest/integrationTest()#org/apache/parquet/column/values/rle/RunLengthBitPackingHybridIntegrationTest/doIntegrationTest(int)
org/apache/parquet/bytes/TestBytesInput/testWriteInt()#java/io/ByteArrayInputStream/ByteArrayInputStream(byte[])
org/apache/parquet/bytes/TestBytesInput/testWriteInt()#org/apache/parquet/bytes/BytesInput/fromUnsignedVarInt(int)
org/apache/parquet/bytes/TestBytesInput/testWriteInt()#org/apache/parquet/bytes/BytesUtils/readUnsignedVarInt(java.io.InputStream)
org/apache/parquet/bytes/TestBytesInput/testWriteInt()#org/apache/parquet/bytes/BytesInput/toByteArray()
org/apache/parquet/pig/convert/TupleConverter/set(int,java.lang.Object)#org/apache/parquet/pig/TupleConversionException/TupleConversionException(java.lang.String,java.lang.Throwable)
org/apache/parquet/pig/convert/TupleConverter/getType(boolean,java.lang.String,int)#org/apache/parquet/schema/GroupType/getFieldIndex(java.lang.String)
org/apache/parquet/pig/convert/TupleConverter/getType(boolean,java.lang.String,int)#org/apache/parquet/schema/GroupType/getFieldCount()
org/apache/parquet/pig/convert/TupleConverter/getType(boolean,java.lang.String,int)#org/apache/parquet/schema/GroupType/getType(int)
org/apache/parquet/pig/convert/TupleConverter/start()#org/apache/parquet/schema/Type/isRepetition(org.apache.parquet.schema.Type.Repetition)
org/apache/parquet/pig/convert/TupleConverter/start()#org/apache/parquet/schema/Type/asPrimitiveType()
org/apache/parquet/pig/convert/TupleConverter/start()#org/apache/parquet/schema/GroupType/getFields()
org/apache/parquet/pig/convert/TupleConverter/start()#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/apache/parquet/pig/convert/TupleConverter/start()#org/apache/parquet/schema/PrimitiveType/getPrimitiveTypeName()
org/apache/parquet/pig/convert/TupleConverter/start()#org/apache/parquet/schema/Type/isPrimitive()
org/apache/parquet/pig/convert/TupleConverter/newConverter(org.apache.parquet.pig.convert.FieldSchema,org.apache.parquet.schema.Type,org.apache.parquet.pig.convert.ParentValueContainer,boolean,boolean)#org/apache/parquet/pig/convert/TupleConverter/FieldBooleanConverter/FieldBooleanConverter(org.apache.parquet.pig.convert.ParentValueContainer)
org/apache/parquet/pig/convert/TupleConverter/newConverter(org.apache.parquet.pig.convert.FieldSchema,org.apache.parquet.schema.Type,org.apache.parquet.pig.convert.ParentValueContainer,boolean,boolean)#org/apache/parquet/schema/Type/getOriginalType()
org/apache/parquet/pig/convert/TupleConverter/newConverter(org.apache.parquet.pig.convert.FieldSchema,org.apache.parquet.schema.Type,org.apache.parquet.pig.convert.ParentValueContainer,boolean,boolean)#org/apache/parquet/pig/convert/TupleConverter/FieldFloatConverter/FieldFloatConverter(org.apache.parquet.pig.convert.ParentValueContainer)
org/apache/parquet/pig/convert/TupleConverter/newConverter(org.apache.parquet.pig.convert.FieldSchema,org.apache.parquet.schema.Type,org.apache.parquet.pig.convert.ParentValueContainer,boolean,boolean)#org/apache/parquet/schema/Type/asGroupType()
org/apache/parquet/pig/convert/TupleConverter/newConverter(org.apache.parquet.pig.convert.FieldSchema,org.apache.parquet.schema.Type,org.apache.parquet.pig.convert.ParentValueContainer,boolean,boolean)#org/apache/parquet/pig/convert/TupleConverter/FieldStringConverter/FieldStringConverter(org.apache.parquet.pig.convert.ParentValueContainer,boolean)
org/apache/parquet/pig/convert/TupleConverter/newConverter(org.apache.parquet.pig.convert.FieldSchema,org.apache.parquet.schema.Type,org.apache.parquet.pig.convert.ParentValueContainer,boolean,boolean)#org/apache/parquet/pig/convert/TupleConverter/FieldIntegerConverter/FieldIntegerConverter(org.apache.parquet.pig.convert.ParentValueContainer)
org/apache/parquet/pig/convert/TupleConverter/newConverter(org.apache.parquet.pig.convert.FieldSchema,org.apache.parquet.schema.Type,org.apache.parquet.pig.convert.ParentValueContainer,boolean,boolean)#org/apache/parquet/pig/convert/MapConverter/MapConverter(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.convert.FieldSchema,org.apache.parquet.pig.convert.ParentValueContainer,boolean,boolean)
org/apache/parquet/pig/convert/TupleConverter/newConverter(org.apache.parquet.pig.convert.FieldSchema,org.apache.parquet.schema.Type,org.apache.parquet.pig.convert.ParentValueContainer,boolean,boolean)#org/apache/parquet/pig/convert/TupleConverter/FieldByteArrayConverter/FieldByteArrayConverter(org.apache.parquet.pig.convert.ParentValueContainer)
org/apache/parquet/pig/convert/TupleConverter/newConverter(org.apache.parquet.pig.convert.FieldSchema,org.apache.parquet.schema.Type,org.apache.parquet.pig.convert.ParentValueContainer,boolean,boolean)#org/apache/parquet/pig/convert/TupleConverter/BagConverter/BagConverter(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.convert.FieldSchema,org.apache.parquet.pig.convert.ParentValueContainer,boolean,boolean)
org/apache/parquet/pig/convert/TupleConverter/newConverter(org.apache.parquet.pig.convert.FieldSchema,org.apache.parquet.schema.Type,org.apache.parquet.pig.convert.ParentValueContainer,boolean,boolean)#org/apache/parquet/pig/convert/TupleConverter/FieldLongConverter/FieldLongConverter(org.apache.parquet.pig.convert.ParentValueContainer)
org/apache/parquet/pig/convert/TupleConverter/newConverter(org.apache.parquet.pig.convert.FieldSchema,org.apache.parquet.schema.Type,org.apache.parquet.pig.convert.ParentValueContainer,boolean,boolean)#org/apache/parquet/pig/convert/TupleConverter/FieldDoubleConverter/FieldDoubleConverter(org.apache.parquet.pig.convert.ParentValueContainer)
org/apache/parquet/pig/convert/TupleConverter/newConverter(org.apache.parquet.pig.convert.FieldSchema,org.apache.parquet.schema.Type,org.apache.parquet.pig.convert.ParentValueContainer,boolean,boolean)#org/apache/parquet/pig/TupleConversionException/TupleConversionException(java.lang.String,java.lang.Throwable)
org/apache/parquet/pig/convert/TupleConverter/newConverter(org.apache.parquet.pig.convert.FieldSchema,org.apache.parquet.schema.Type,org.apache.parquet.pig.convert.ParentValueContainer,boolean,boolean)#org/apache/parquet/pig/TupleConversionException/TupleConversionException(java.lang.String)
org/apache/parquet/pig/convert/TupleConverter/newConverter(org.apache.parquet.pig.convert.FieldSchema,org.apache.parquet.schema.Type,org.apache.parquet.pig.convert.ParentValueContainer,boolean,boolean)#org/apache/parquet/pig/convert/TupleConverter/TupleConverter(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,boolean,boolean)
org/apache/parquet/hadoop/thrift/ParquetThriftOutputFormat/setThriftClass(org.apache.parquet.hadoop.Job,java.lang.Class)#org/apache/parquet/hadoop/thrift/ThriftWriteSupport/setThriftClass(org.apache.parquet.hadoop.Configuration,java.lang.Class)
org/apache/parquet/hadoop/thrift/ParquetThriftOutputFormat/setThriftClass(org.apache.parquet.hadoop.Job,java.lang.Class)#org/apache/parquet/hadoop/util/ContextUtil/getConfiguration(org.apache.parquet.hadoop.util.JobContext)
org/apache/parquet/hadoop/thrift/ParquetThriftOutputFormat/getThriftClass(org.apache.parquet.hadoop.Job)#org/apache/parquet/hadoop/util/ContextUtil/getConfiguration(org.apache.parquet.hadoop.util.JobContext)
org/apache/parquet/hadoop/thrift/ParquetThriftOutputFormat/getThriftClass(org.apache.parquet.hadoop.Job)#org/apache/parquet/hadoop/thrift/ThriftWriteSupport/getThriftClass(org.apache.parquet.hadoop.Configuration)
org/apache/parquet/tools/command/Registry/allCommands()#java/util/Map/Entry/getValue()
org/apache/parquet/tools/command/Registry/allCommands()#java/lang/Class/newInstance()
org/apache/parquet/tools/command/Registry/allCommands()#java/util/Map/Entry/getKey()
org/apache/parquet/tools/command/Registry/allCommands()#java/util/Map/put(K,V)
org/apache/parquet/tools/command/Registry/allCommands()#java/util/Map/entrySet()
org/apache/parquet/tools/command/Registry/allCommands()#java/util/LinkedHashMap/LinkedHashMap()
org/apache/parquet/tools/command/Registry/getCommandByName(java.lang.String)#java/lang/Class/newInstance()
org/apache/parquet/tools/command/Registry/getCommandByName(java.lang.String)#java/util/Map/get(java.lang.Object)
org/apache/parquet/statistics/RandomValues/FloatGenerator/nextValue()#org/apache/parquet/statistics/RandomValues/RandomValueGenerator/randomFloat(float)
org/apache/parquet/avro/AvroConverters/FieldFixedConverter/convert(org.apache.parquet.io.api.Binary)#org/apache/parquet/io/api/Binary/getBytes()
org/apache/parquet/thrift/pig/TestParquetThriftStorer/testStorer()#java/util/ArrayList/ArrayList()
org/apache/parquet/thrift/pig/TestParquetThriftStorer/testStorer()#java/util/Properties/setProperty(java.lang.String,java.lang.String)
org/apache/parquet/thrift/pig/TestParquetThriftStorer/testStorer()#org/apache/parquet/thrift/pig/TestParquetThriftStorer/execBatch(org.apache.parquet.pig.PigServer)
org/apache/parquet/thrift/pig/TestParquetThriftStorer/testStorer()#java/lang/Object/Object()
org/apache/parquet/thrift/pig/TestParquetThriftStorer/testStorer()#java/util/Properties/Properties()
org/apache/parquet/thrift/pig/TestParquetThriftStorer/testStorer()#java/lang/Class/getName()
org/apache/parquet/thrift/pig/TestParquetThriftStorer/execBatch(org.apache.parquet.pig.PigServer)#java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)
org/apache/parquet/hadoop/thrift/TestArrayCompatibility/testUnannotatedListOfPrimitives()#org/apache/parquet/hadoop/thrift/TestArrayCompatibility/testUnannotatedListOfPrimitives()/$anonymous1/()
org/apache/parquet/hadoop/thrift/TestArrayCompatibility/testUnannotatedListOfPrimitives()#org/apache/parquet/DirectWriterTest/writeDirect(java.lang.String,org.apache.parquet.DirectWriterTest.DirectWriter)
org/apache/parquet/hadoop/thrift/TestArrayCompatibility/testMultiFieldGroupInList()#org/apache/parquet/hadoop/thrift/TestArrayCompatibility/assertReaderContains(org.apache.parquet.hadoop.ParquetReader,T[])
org/apache/parquet/hadoop/thrift/TestArrayCompatibility/testMultiFieldGroupInList()#org/apache/parquet/DirectWriterTest/writeDirect(java.lang.String,org.apache.parquet.DirectWriterTest.DirectWriter)
org/apache/parquet/hadoop/thrift/TestArrayCompatibility/testMultiFieldGroupInList()#org/apache/parquet/hadoop/thrift/TestArrayCompatibility/testMultiFieldGroupInList()/$anonymous1/()
org/apache/parquet/hadoop/thrift/TestArrayCompatibility/testMultiFieldGroupInList()#org/apache/parquet/hadoop/thrift/TestArrayCompatibility/reader(org.apache.parquet.hadoop.Path,java.lang.Class)
org/apache/parquet/hadoop/thrift/TestArrayCompatibility/testSingleFieldGroupInList()#org/apache/parquet/hadoop/thrift/TestArrayCompatibility/testSingleFieldGroupInList()/$anonymous1/()
org/apache/parquet/hadoop/thrift/TestArrayCompatibility/testSingleFieldGroupInList()#org/apache/parquet/hadoop/thrift/TestArrayCompatibility/reader(org.apache.parquet.hadoop.Path,java.lang.Class)
org/apache/parquet/hadoop/thrift/TestArrayCompatibility/testSingleFieldGroupInList()#org/apache/parquet/hadoop/thrift/TestArrayCompatibility/assertReaderContains(org.apache.parquet.hadoop.ParquetReader,T[])
org/apache/parquet/hadoop/thrift/TestArrayCompatibility/testSingleFieldGroupInList()#org/apache/parquet/DirectWriterTest/writeDirect(java.lang.String,org.apache.parquet.DirectWriterTest.DirectWriter)
org/apache/parquet/hadoop/thrift/TestArrayCompatibility/testUnannotatedListOfGroups()#org/apache/parquet/hadoop/thrift/TestArrayCompatibility/testUnannotatedListOfGroups()/$anonymous1/()
org/apache/parquet/hadoop/thrift/TestArrayCompatibility/testUnannotatedListOfGroups()#org/apache/parquet/DirectWriterTest/writeDirect(java.lang.String,org.apache.parquet.DirectWriterTest.DirectWriter)
org/apache/parquet/hadoop/thrift/TestArrayCompatibility/testAvroCompatListInList()#org/apache/parquet/hadoop/thrift/TestArrayCompatibility/testAvroCompatListInList()/$anonymous1/()
org/apache/parquet/hadoop/thrift/TestArrayCompatibility/testAvroCompatListInList()#java/util/Arrays/asList(T[])
org/apache/parquet/hadoop/thrift/TestArrayCompatibility/testAvroCompatListInList()#org/apache/parquet/hadoop/thrift/TestArrayCompatibility/reader(org.apache.parquet.hadoop.Path,java.lang.Class)
org/apache/parquet/hadoop/thrift/TestArrayCompatibility/testAvroCompatListInList()#org/apache/parquet/hadoop/thrift/TestArrayCompatibility/assertReaderContains(org.apache.parquet.hadoop.ParquetReader,T[])
org/apache/parquet/hadoop/thrift/TestArrayCompatibility/testAvroCompatListInList()#org/apache/parquet/DirectWriterTest/writeDirect(java.lang.String,org.apache.parquet.DirectWriterTest.DirectWriter)
org/apache/parquet/hadoop/thrift/TestArrayCompatibility/assertReaderContains(org.apache.parquet.hadoop.ParquetReader,T[])#org/apache/parquet/hadoop/ParquetReader/read()
org/apache/parquet/hadoop/thrift/TestArrayCompatibility/assertReaderContains(org.apache.parquet.hadoop.ParquetReader,T[])#java/util/List/add(E)
org/apache/parquet/hadoop/thrift/TestArrayCompatibility/readerIgnoreNulls(org.apache.parquet.hadoop.Path,java.lang.Class)#org/apache/parquet/thrift/ThriftParquetReader/build(org.apache.parquet.hadoop.Path)
org/apache/parquet/hadoop/thrift/TestArrayCompatibility/testOldThriftCompatRequiredGroupInList()#org/apache/parquet/hadoop/thrift/TestArrayCompatibility/reader(org.apache.parquet.hadoop.Path,java.lang.Class)
org/apache/parquet/hadoop/thrift/TestArrayCompatibility/testOldThriftCompatRequiredGroupInList()#org/apache/parquet/hadoop/thrift/TestArrayCompatibility/assertReaderContains(org.apache.parquet.hadoop.ParquetReader,T[])
org/apache/parquet/hadoop/thrift/TestArrayCompatibility/testOldThriftCompatRequiredGroupInList()#org/apache/parquet/hadoop/thrift/TestArrayCompatibility/testOldThriftCompatRequiredGroupInList()/$anonymous1/()
org/apache/parquet/hadoop/thrift/TestArrayCompatibility/testOldThriftCompatRequiredGroupInList()#org/apache/parquet/DirectWriterTest/writeDirect(java.lang.String,org.apache.parquet.DirectWriterTest.DirectWriter)
org/apache/parquet/hadoop/thrift/TestArrayCompatibility/testNewOptionalGroupInList()#java/lang/Throwable/getMessage()
org/apache/parquet/hadoop/thrift/TestArrayCompatibility/testNewOptionalGroupInList()#org/apache/parquet/hadoop/thrift/TestArrayCompatibility/assertReaderContains(org.apache.parquet.hadoop.ParquetReader,T[])
org/apache/parquet/hadoop/thrift/TestArrayCompatibility/testNewOptionalGroupInList()#org/apache/parquet/hadoop/thrift/TestArrayCompatibility/readerIgnoreNulls(org.apache.parquet.hadoop.Path,java.lang.Class)
org/apache/parquet/hadoop/thrift/TestArrayCompatibility/testNewOptionalGroupInList()#java/lang/String/contains(java.lang.CharSequence)
org/apache/parquet/hadoop/thrift/TestArrayCompatibility/testNewOptionalGroupInList()#org/apache/parquet/hadoop/thrift/TestArrayCompatibility/testNewOptionalGroupInList()/$anonymous1/()
org/apache/parquet/hadoop/thrift/TestArrayCompatibility/testNewOptionalGroupInList()#org/apache/parquet/DirectWriterTest/writeDirect(java.lang.String,org.apache.parquet.DirectWriterTest.DirectWriter)
org/apache/parquet/hadoop/thrift/TestArrayCompatibility/testNewOptionalGroupInList()#org/apache/parquet/hadoop/thrift/TestArrayCompatibility/reader(org.apache.parquet.hadoop.Path,java.lang.Class)
org/apache/parquet/hadoop/thrift/TestArrayCompatibility/testNewOptionalGroupInList()#java/lang/Throwable/getCause()
org/apache/parquet/hadoop/thrift/TestArrayCompatibility/testNewRequiredGroupInList()#org/apache/parquet/hadoop/thrift/TestArrayCompatibility/reader(org.apache.parquet.hadoop.Path,java.lang.Class)
org/apache/parquet/hadoop/thrift/TestArrayCompatibility/testNewRequiredGroupInList()#org/apache/parquet/hadoop/thrift/TestArrayCompatibility/assertReaderContains(org.apache.parquet.hadoop.ParquetReader,T[])
org/apache/parquet/hadoop/thrift/TestArrayCompatibility/testNewRequiredGroupInList()#org/apache/parquet/hadoop/thrift/TestArrayCompatibility/testNewRequiredGroupInList()/$anonymous1/()
org/apache/parquet/hadoop/thrift/TestArrayCompatibility/testNewRequiredGroupInList()#org/apache/parquet/DirectWriterTest/writeDirect(java.lang.String,org.apache.parquet.DirectWriterTest.DirectWriter)
org/apache/parquet/hadoop/thrift/TestArrayCompatibility/testAvroCompatRequiredGroupInList()#org/apache/parquet/hadoop/thrift/TestArrayCompatibility/testAvroCompatRequiredGroupInList()/$anonymous1/()
org/apache/parquet/hadoop/thrift/TestArrayCompatibility/testAvroCompatRequiredGroupInList()#org/apache/parquet/hadoop/thrift/TestArrayCompatibility/reader(org.apache.parquet.hadoop.Path,java.lang.Class)
org/apache/parquet/hadoop/thrift/TestArrayCompatibility/testAvroCompatRequiredGroupInList()#org/apache/parquet/hadoop/thrift/TestArrayCompatibility/assertReaderContains(org.apache.parquet.hadoop.ParquetReader,T[])
org/apache/parquet/hadoop/thrift/TestArrayCompatibility/testAvroCompatRequiredGroupInList()#org/apache/parquet/DirectWriterTest/writeDirect(java.lang.String,org.apache.parquet.DirectWriterTest.DirectWriter)
org/apache/parquet/hadoop/thrift/TestArrayCompatibility/reader(org.apache.parquet.hadoop.Path,java.lang.Class)#org/apache/parquet/thrift/ThriftParquetReader/build(org.apache.parquet.hadoop.Path)
org/apache/parquet/hadoop/thrift/TestArrayCompatibility/testThriftCompatListInList()#org/apache/parquet/hadoop/thrift/TestArrayCompatibility/testThriftCompatListInList()/$anonymous1/()
org/apache/parquet/hadoop/thrift/TestArrayCompatibility/testThriftCompatListInList()#java/util/Arrays/asList(T[])
org/apache/parquet/hadoop/thrift/TestArrayCompatibility/testThriftCompatListInList()#org/apache/parquet/hadoop/thrift/TestArrayCompatibility/reader(org.apache.parquet.hadoop.Path,java.lang.Class)
org/apache/parquet/hadoop/thrift/TestArrayCompatibility/testThriftCompatListInList()#org/apache/parquet/hadoop/thrift/TestArrayCompatibility/assertReaderContains(org.apache.parquet.hadoop.ParquetReader,T[])
org/apache/parquet/hadoop/thrift/TestArrayCompatibility/testThriftCompatListInList()#org/apache/parquet/DirectWriterTest/writeDirect(java.lang.String,org.apache.parquet.DirectWriterTest.DirectWriter)
org/apache/parquet/hadoop/thrift/TestArrayCompatibility/testHiveCompatOptionalGroupInList()#org/apache/parquet/hadoop/thrift/TestArrayCompatibility/testHiveCompatOptionalGroupInList()/$anonymous1/()
org/apache/parquet/hadoop/thrift/TestArrayCompatibility/testHiveCompatOptionalGroupInList()#java/lang/Throwable/getMessage()
org/apache/parquet/hadoop/thrift/TestArrayCompatibility/testHiveCompatOptionalGroupInList()#org/apache/parquet/hadoop/thrift/TestArrayCompatibility/assertReaderContains(org.apache.parquet.hadoop.ParquetReader,T[])
org/apache/parquet/hadoop/thrift/TestArrayCompatibility/testHiveCompatOptionalGroupInList()#org/apache/parquet/hadoop/thrift/TestArrayCompatibility/readerIgnoreNulls(org.apache.parquet.hadoop.Path,java.lang.Class)
org/apache/parquet/hadoop/thrift/TestArrayCompatibility/testHiveCompatOptionalGroupInList()#java/lang/String/contains(java.lang.CharSequence)
org/apache/parquet/hadoop/thrift/TestArrayCompatibility/testHiveCompatOptionalGroupInList()#org/apache/parquet/DirectWriterTest/writeDirect(java.lang.String,org.apache.parquet.DirectWriterTest.DirectWriter)
org/apache/parquet/hadoop/thrift/TestArrayCompatibility/testHiveCompatOptionalGroupInList()#org/apache/parquet/hadoop/thrift/TestArrayCompatibility/reader(org.apache.parquet.hadoop.Path,java.lang.Class)
org/apache/parquet/hadoop/thrift/TestArrayCompatibility/testHiveCompatOptionalGroupInList()#java/lang/Throwable/getCause()
org/apache/parquet/hadoop/thrift/TestArrayCompatibility/testRepeatedPrimitiveInList()#org/apache/parquet/hadoop/thrift/TestArrayCompatibility/testRepeatedPrimitiveInList()/$anonymous1/()
org/apache/parquet/hadoop/thrift/TestArrayCompatibility/testRepeatedPrimitiveInList()#org/apache/parquet/hadoop/thrift/TestArrayCompatibility/reader(org.apache.parquet.hadoop.Path,java.lang.Class)
org/apache/parquet/hadoop/thrift/TestArrayCompatibility/testRepeatedPrimitiveInList()#java/lang/Object/Object()
org/apache/parquet/hadoop/thrift/TestArrayCompatibility/testRepeatedPrimitiveInList()#org/apache/parquet/DirectWriterTest/writeDirect(java.lang.String,org.apache.parquet.DirectWriterTest.DirectWriter)
org/apache/parquet/format/converter/ParquetMetadataConverter/RangeMetadataFilter/accept(org.apache.parquet.format.converter.ParquetMetadataConverter.MetadataFilterVisitor)#org/apache/parquet/format/converter/ParquetMetadataConverter/MetadataFilterVisitor/visit(org.apache.parquet.format.converter.ParquetMetadataConverter.RangeMetadataFilter)
org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/addFloat(float)#org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/log(java.lang.Object,java.lang.Object[])
org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/addFloat(float)#org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/printState()
org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/addFloat(float)#org/apache/parquet/column/ColumnWriter/write(float,int,int)
org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/addFloat(float)#org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/setRepetitionLevel()
org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/addFloat(float)#org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/getColumnWriter()
org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/addFloat(float)#org/apache/parquet/io/ColumnIO/getDefinitionLevel()
org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/writeNullForMissingFieldsAtCurrentLevel()#org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/log(java.lang.Object,java.lang.Object[])
org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/writeNullForMissingFieldsAtCurrentLevel()#org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/FieldsMarker/isWritten(int)
org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/writeNullForMissingFieldsAtCurrentLevel()#java/util/Arrays/toString(java.lang.Object[])
org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/writeNullForMissingFieldsAtCurrentLevel()#org/apache/parquet/io/GroupColumnIO/getChild(int)
org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/writeNullForMissingFieldsAtCurrentLevel()#org/apache/parquet/io/ColumnIO/getDefinitionLevel()
org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/writeNullForMissingFieldsAtCurrentLevel()#org/apache/parquet/io/ParquetEncodingException/ParquetEncodingException(java.lang.String,java.lang.Throwable)
org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/writeNullForMissingFieldsAtCurrentLevel()#org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/writeNull(org.apache.parquet.io.ColumnIO,int,int)
org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/writeNullForMissingFieldsAtCurrentLevel()#org/apache/parquet/io/ColumnIO/getFieldPath()
org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/writeNullForMissingFieldsAtCurrentLevel()#org/apache/parquet/io/GroupColumnIO/getChildrenCount()
org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/endMessage()#org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/log(java.lang.Object,java.lang.Object[])
org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/endMessage()#org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/printState()
org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/endMessage()#org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/writeNullForMissingFieldsAtCurrentLevel()
org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/endMessage()#org/apache/parquet/column/ColumnWriteStore/endRecord()
org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/buildGroupToLeafWriterMap(org.apache.parquet.io.PrimitiveColumnIO,org.apache.parquet.column.ColumnWriter)#org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/getLeafWriters(org.apache.parquet.io.GroupColumnIO)
org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/buildGroupToLeafWriterMap(org.apache.parquet.io.PrimitiveColumnIO,org.apache.parquet.column.ColumnWriter)#java/util/List/add(E)
org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/buildGroupToLeafWriterMap(org.apache.parquet.io.PrimitiveColumnIO,org.apache.parquet.column.ColumnWriter)#org/apache/parquet/io/ColumnIO/getParent()
org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/startGroup()#org/apache/parquet/io/GroupColumnIO/getChildrenCount()
org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/startGroup()#org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/printState()
org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/startGroup()#org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/flushCachedNulls(org.apache.parquet.io.GroupColumnIO)
org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/startGroup()#org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/hasNullCache(org.apache.parquet.io.GroupColumnIO)
org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/startGroup()#org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/log(java.lang.Object,java.lang.Object[])
org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/startGroup()#org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/FieldsMarker/reset(int)
org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/endGroup()#org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/log(java.lang.Object,java.lang.Object[])
org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/endGroup()#org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/printState()
org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/endGroup()#org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/writeNullForMissingFieldsAtCurrentLevel()
org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/endGroup()#org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/setRepetitionLevel()
org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/printState()#org/apache/parquet/io/ColumnIO/getFieldPath()
org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/printState()#org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/log(java.lang.Object,java.lang.Object[])
org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/printState()#java/util/Arrays/toString(java.lang.Object[])
org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/printState()#org/apache/parquet/io/ColumnIO/getRepetitionLevel()
org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/printState()#org/apache/parquet/io/InvalidRecordException/InvalidRecordException(java.lang.String)
org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/addBinary(org.apache.parquet.io.api.Binary)#org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/log(java.lang.Object,java.lang.Object[])
org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/addBinary(org.apache.parquet.io.api.Binary)#org/apache/parquet/io/api/Binary/length()
org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/addBinary(org.apache.parquet.io.api.Binary)#org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/printState()
org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/addBinary(org.apache.parquet.io.api.Binary)#org/apache/parquet/column/ColumnWriter/write(org.apache.parquet.io.api.Binary,int,int)
org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/addBinary(org.apache.parquet.io.api.Binary)#org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/setRepetitionLevel()
org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/addBinary(org.apache.parquet.io.api.Binary)#org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/getColumnWriter()
org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/addBinary(org.apache.parquet.io.api.Binary)#org/apache/parquet/io/ColumnIO/getDefinitionLevel()
org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/startMessage()#org/apache/parquet/io/GroupColumnIO/getChildrenCount()
org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/startMessage()#org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/printState()
org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/startMessage()#org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/log(java.lang.Object,java.lang.Object[])
org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/startMessage()#org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/FieldsMarker/reset(int)
org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/getColumnWriter()#org/apache/parquet/io/PrimitiveColumnIO/getId()
org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/writeNullToLeaves(org.apache.parquet.io.GroupColumnIO)#java/util/Map/get(java.lang.Object)
org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/writeNullToLeaves(org.apache.parquet.io.GroupColumnIO)#org/apache/parquet/io/ColumnIO/getParent()
org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/writeNullToLeaves(org.apache.parquet.io.GroupColumnIO)#org/apache/parquet/column/ColumnWriter/writeNull(int,int)
org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/writeNullToLeaves(org.apache.parquet.io.GroupColumnIO)#org/apache/parquet/io/ColumnIO/getDefinitionLevel()
org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/startField(java.lang.String,int)#org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/log(java.lang.Object,java.lang.Object[])
org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/startField(java.lang.String,int)#org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/printState()
org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/startField(java.lang.String,int)#org/apache/parquet/io/GroupColumnIO/getChild(int)
org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/startField(java.lang.String,int)#org/apache/parquet/io/ParquetEncodingException/ParquetEncodingException(java.lang.String,java.lang.Throwable)
org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/addBoolean(boolean)#org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/log(java.lang.Object,java.lang.Object[])
org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/addBoolean(boolean)#org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/printState()
org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/addBoolean(boolean)#org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/setRepetitionLevel()
org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/addBoolean(boolean)#org/apache/parquet/column/ColumnWriter/write(boolean,int,int)
org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/addBoolean(boolean)#org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/getColumnWriter()
org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/addBoolean(boolean)#org/apache/parquet/io/ColumnIO/getDefinitionLevel()
org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/addLong(long)#org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/log(java.lang.Object,java.lang.Object[])
org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/addLong(long)#org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/printState()
org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/addLong(long)#org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/setRepetitionLevel()
org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/addLong(long)#org/apache/parquet/column/ColumnWriter/write(long,int,int)
org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/addLong(long)#org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/getColumnWriter()
org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/addLong(long)#org/apache/parquet/io/ColumnIO/getDefinitionLevel()
org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/setRepetitionLevel()#org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/log(java.lang.Object,java.lang.Object[])
org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/setRepetitionLevel()#org/apache/parquet/io/ColumnIO/getRepetitionLevel()
org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/getLeafWriters(org.apache.parquet.io.GroupColumnIO)#java/util/ArrayList/ArrayList()
org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/getLeafWriters(org.apache.parquet.io.GroupColumnIO)#java/util/Map/get(java.lang.Object)
org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/getLeafWriters(org.apache.parquet.io.GroupColumnIO)#java/util/Map/put(K,V)
org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/addDouble(double)#org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/log(java.lang.Object,java.lang.Object[])
org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/addDouble(double)#org/apache/parquet/column/ColumnWriter/write(double,int,int)
org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/addDouble(double)#org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/printState()
org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/addDouble(double)#org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/setRepetitionLevel()
org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/addDouble(double)#org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/getColumnWriter()
org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/addDouble(double)#org/apache/parquet/io/ColumnIO/getDefinitionLevel()
org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/addInteger(int)#org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/log(java.lang.Object,java.lang.Object[])
org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/addInteger(int)#org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/printState()
org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/addInteger(int)#org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/setRepetitionLevel()
org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/addInteger(int)#org/apache/parquet/column/ColumnWriter/write(int,int,int)
org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/addInteger(int)#org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/getColumnWriter()
org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/addInteger(int)#org/apache/parquet/io/ColumnIO/getDefinitionLevel()
org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/flush()#org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/flushCachedNulls(org.apache.parquet.io.GroupColumnIO)
org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/endField(java.lang.String,int)#org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/log(java.lang.Object,java.lang.Object[])
org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/endField(java.lang.String,int)#org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/FieldsMarker/markWritten(int)
org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/endField(java.lang.String,int)#org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/printState()
org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/endField(java.lang.String,int)#org/apache/parquet/io/ParquetEncodingException/ParquetEncodingException(java.lang.String)
org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/endField(java.lang.String,int)#org/apache/parquet/io/ColumnIO/getParent()
org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/flushCachedNulls(org.apache.parquet.io.GroupColumnIO)#org/apache/parquet/io/GroupColumnIO/getChildrenCount()
org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/flushCachedNulls(org.apache.parquet.io.GroupColumnIO)#org/apache/parquet/io/GroupColumnIO/getChild(int)
org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/flushCachedNulls(org.apache.parquet.io.GroupColumnIO)#org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/writeNullToLeaves(org.apache.parquet.io.GroupColumnIO)
org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/flushCachedNulls(org.apache.parquet.io.GroupColumnIO)#org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/flushCachedNulls(org.apache.parquet.io.GroupColumnIO)
org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/writeNull(org.apache.parquet.io.ColumnIO,int,int)#org/apache/parquet/io/PrimitiveColumnIO/getId()
org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/writeNull(org.apache.parquet.io.ColumnIO,int,int)#org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/cacheNullForGroup(org.apache.parquet.io.GroupColumnIO,int)
org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/writeNull(org.apache.parquet.io.ColumnIO,int,int)#org/apache/parquet/io/ColumnIO/getType()
org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/writeNull(org.apache.parquet.io.ColumnIO,int,int)#org/apache/parquet/column/ColumnWriter/writeNull(int,int)
org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/writeNull(org.apache.parquet.io.ColumnIO,int,int)#org/apache/parquet/schema/Type/isPrimitive()
org/apache/parquet/column/impl/TestCorruptDeltaByteArrays/testReassemblyWithoutCorruption()#org/apache/parquet/io/api/Binary/toStringUsingUTF8()
org/apache/parquet/column/impl/TestCorruptDeltaByteArrays/testReassemblyWithoutCorruption()#org/apache/parquet/column/values/deltastrings/DeltaByteArrayWriter/reset()
org/apache/parquet/column/impl/TestCorruptDeltaByteArrays/testReassemblyWithoutCorruption()#org/apache/parquet/column/values/deltastrings/DeltaByteArrayReader/DeltaByteArrayReader()
org/apache/parquet/column/impl/TestCorruptDeltaByteArrays/testReassemblyWithoutCorruption()#org/apache/parquet/column/values/deltastrings/DeltaByteArrayWriter/getBytes()
org/apache/parquet/column/impl/TestCorruptDeltaByteArrays/testReassemblyWithoutCorruption()#org/apache/parquet/column/impl/TestCorruptDeltaByteArrays/getDeltaByteArrayWriter()
org/apache/parquet/column/impl/TestCorruptDeltaByteArrays/testReassemblyWithoutCorruption()#org/apache/parquet/bytes/BytesInput/toByteBuffer()
org/apache/parquet/column/impl/TestCorruptDeltaByteArrays/testReassemblyWithoutCorruption()#org/apache/parquet/column/values/deltastrings/DeltaByteArrayReader/readBytes()
org/apache/parquet/column/impl/TestCorruptDeltaByteArrays/testReassemblyWithoutCorruption()#org/apache/parquet/column/values/deltastrings/DeltaByteArrayWriter/writeBytes(org.apache.parquet.io.api.Binary)
org/apache/parquet/column/impl/TestCorruptDeltaByteArrays/testReassemblyWithoutCorruption()#org/apache/parquet/io/api/Binary/fromString(java.lang.String)
org/apache/parquet/column/impl/TestCorruptDeltaByteArrays/testReassemblyWithoutCorruption()#org/apache/parquet/column/impl/TestCorruptDeltaByteArrays/str(int)
org/apache/parquet/column/impl/TestCorruptDeltaByteArrays/testReassemblyWithoutCorruption()#org/apache/parquet/column/values/deltastrings/DeltaByteArrayReader/setPreviousReader(org.apache.parquet.column.values.ValuesReader)
org/apache/parquet/column/impl/TestCorruptDeltaByteArrays/testReassemblyWithoutCorruption()#org/apache/parquet/column/values/deltastrings/DeltaByteArrayReader/initFromPage(int,java.nio.ByteBuffer,int)
org/apache/parquet/column/impl/TestCorruptDeltaByteArrays/getDeltaByteArrayWriter()#org/apache/parquet/column/values/deltastrings/DeltaByteArrayWriter/DeltaByteArrayWriter(int,int,org.apache.parquet.bytes.ByteBufferAllocator)
org/apache/parquet/column/impl/TestCorruptDeltaByteArrays/getDeltaByteArrayWriter()#org/apache/parquet/bytes/HeapByteBufferAllocator/HeapByteBufferAllocator()
org/apache/parquet/column/impl/TestCorruptDeltaByteArrays/testOldReassemblyWithoutCorruption()#org/apache/parquet/io/api/Binary/toStringUsingUTF8()
org/apache/parquet/column/impl/TestCorruptDeltaByteArrays/testOldReassemblyWithoutCorruption()#org/apache/parquet/column/values/deltastrings/DeltaByteArrayWriter/reset()
org/apache/parquet/column/impl/TestCorruptDeltaByteArrays/testOldReassemblyWithoutCorruption()#org/apache/parquet/column/values/deltastrings/DeltaByteArrayReader/DeltaByteArrayReader()
org/apache/parquet/column/impl/TestCorruptDeltaByteArrays/testOldReassemblyWithoutCorruption()#org/apache/parquet/column/values/deltastrings/DeltaByteArrayWriter/getBytes()
org/apache/parquet/column/impl/TestCorruptDeltaByteArrays/testOldReassemblyWithoutCorruption()#org/apache/parquet/column/impl/TestCorruptDeltaByteArrays/getDeltaByteArrayWriter()
org/apache/parquet/column/impl/TestCorruptDeltaByteArrays/testOldReassemblyWithoutCorruption()#org/apache/parquet/bytes/BytesInput/toByteBuffer()
org/apache/parquet/column/impl/TestCorruptDeltaByteArrays/testOldReassemblyWithoutCorruption()#org/apache/parquet/column/values/deltastrings/DeltaByteArrayReader/initFromPage(int,java.nio.ByteBuffer,int)
org/apache/parquet/column/impl/TestCorruptDeltaByteArrays/testOldReassemblyWithoutCorruption()#org/apache/parquet/column/values/deltastrings/DeltaByteArrayReader/readBytes()
org/apache/parquet/column/impl/TestCorruptDeltaByteArrays/testOldReassemblyWithoutCorruption()#org/apache/parquet/column/values/deltastrings/DeltaByteArrayWriter/writeBytes(org.apache.parquet.io.api.Binary)
org/apache/parquet/column/impl/TestCorruptDeltaByteArrays/testOldReassemblyWithoutCorruption()#org/apache/parquet/io/api/Binary/fromString(java.lang.String)
org/apache/parquet/column/impl/TestCorruptDeltaByteArrays/testOldReassemblyWithoutCorruption()#org/apache/parquet/column/impl/TestCorruptDeltaByteArrays/str(int)
org/apache/parquet/column/impl/TestCorruptDeltaByteArrays/testEncodingRequiresSequentailRead()#org/apache/parquet/CorruptDeltaByteArrays/requiresSequentialReads(org.apache.parquet.VersionParser.ParsedVersion,org.apache.parquet.column.Encoding)
org/apache/parquet/column/impl/TestCorruptDeltaByteArrays/testEncodingRequiresSequentailRead()#org/apache/parquet/VersionParser/ParsedVersion/ParsedVersion(java.lang.String,java.lang.String,java.lang.String)
org/apache/parquet/column/impl/TestCorruptDeltaByteArrays/corruptWriter(org.apache.parquet.column.values.deltastrings.DeltaByteArrayWriter,java.lang.String)#java/lang/reflect/AccessibleObject/setAccessible(boolean)
org/apache/parquet/column/impl/TestCorruptDeltaByteArrays/corruptWriter(org.apache.parquet.column.values.deltastrings.DeltaByteArrayWriter,java.lang.String)#java/lang/Class/getDeclaredField(java.lang.String)
org/apache/parquet/column/impl/TestCorruptDeltaByteArrays/corruptWriter(org.apache.parquet.column.values.deltastrings.DeltaByteArrayWriter,java.lang.String)#org/apache/parquet/io/api/Binary/fromString(java.lang.String)
org/apache/parquet/column/impl/TestCorruptDeltaByteArrays/corruptWriter(org.apache.parquet.column.values.deltastrings.DeltaByteArrayWriter,java.lang.String)#java/lang/reflect/Field/set(java.lang.Object,java.lang.Object)
org/apache/parquet/column/impl/TestCorruptDeltaByteArrays/corruptWriter(org.apache.parquet.column.values.deltastrings.DeltaByteArrayWriter,java.lang.String)#org/apache/parquet/io/api/Binary/getBytesUnsafe()
org/apache/parquet/column/impl/TestCorruptDeltaByteArrays/corruptWriter(org.apache.parquet.column.values.deltastrings.DeltaByteArrayWriter,java.lang.String)#java/lang/Object/getClass()
org/apache/parquet/column/impl/TestCorruptDeltaByteArrays/testCorruptDeltaByteArrayVerisons()#org/apache/parquet/CorruptDeltaByteArrays/requiresSequentialReads(org.apache.parquet.VersionParser.ParsedVersion,org.apache.parquet.column.Encoding)
org/apache/parquet/column/impl/TestCorruptDeltaByteArrays/testCorruptDeltaByteArrayVerisons()#org/apache/parquet/CorruptDeltaByteArrays/requiresSequentialReads(org.apache.parquet.SemanticVersion,org.apache.parquet.column.Encoding)
org/apache/parquet/column/impl/TestCorruptDeltaByteArrays/testCorruptDeltaByteArrayVerisons()#org/apache/parquet/CorruptDeltaByteArrays/requiresSequentialReads(java.lang.String,org.apache.parquet.column.Encoding)
org/apache/parquet/column/impl/TestCorruptDeltaByteArrays/testColumnReaderImplWithCorruptPage()#org/apache/parquet/column/values/deltastrings/DeltaByteArrayWriter/getEncoding()
org/apache/parquet/column/impl/TestCorruptDeltaByteArrays/testColumnReaderImplWithCorruptPage()#org/apache/parquet/column/ParquetProperties/newDefinitionLevelWriter(org.apache.parquet.column.ColumnDescriptor)
org/apache/parquet/column/impl/TestCorruptDeltaByteArrays/testColumnReaderImplWithCorruptPage()#org/apache/parquet/column/statistics/BinaryStatistics/BinaryStatistics()
org/apache/parquet/column/impl/TestCorruptDeltaByteArrays/testColumnReaderImplWithCorruptPage()#org/apache/parquet/column/values/ValuesWriter/getEncoding()
org/apache/parquet/column/impl/TestCorruptDeltaByteArrays/testColumnReaderImplWithCorruptPage()#org/apache/parquet/column/ParquetProperties/Builder/withDictionaryEncoding(boolean)
org/apache/parquet/column/impl/TestCorruptDeltaByteArrays/testColumnReaderImplWithCorruptPage()#org/apache/parquet/VersionParser/ParsedVersion/ParsedVersion(java.lang.String,java.lang.String,java.lang.String)
org/apache/parquet/column/impl/TestCorruptDeltaByteArrays/testColumnReaderImplWithCorruptPage()#org/apache/parquet/column/page/mem/MemPageStore/addRowCount(long)
org/apache/parquet/column/impl/TestCorruptDeltaByteArrays/testColumnReaderImplWithCorruptPage()#org/apache/parquet/column/page/PageWriter/writePage(org.apache.parquet.bytes.BytesInput,int,org.apache.parquet.column.statistics.Statistics,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding)
org/apache/parquet/column/impl/TestCorruptDeltaByteArrays/testColumnReaderImplWithCorruptPage()#org/apache/parquet/column/values/deltastrings/DeltaByteArrayWriter/writeBytes(org.apache.parquet.io.api.Binary)
org/apache/parquet/column/impl/TestCorruptDeltaByteArrays/testColumnReaderImplWithCorruptPage()#org/apache/parquet/column/page/mem/MemPageStore/MemPageStore(long)
org/apache/parquet/column/impl/TestCorruptDeltaByteArrays/testColumnReaderImplWithCorruptPage()#java/util/ArrayList/ArrayList()
org/apache/parquet/column/impl/TestCorruptDeltaByteArrays/testColumnReaderImplWithCorruptPage()#org/apache/parquet/column/impl/ColumnReaderImpl/ColumnReaderImpl(org.apache.parquet.column.ColumnDescriptor,org.apache.parquet.column.page.PageReader,org.apache.parquet.io.api.PrimitiveConverter,org.apache.parquet.VersionParser.ParsedVersion)
org/apache/parquet/column/impl/TestCorruptDeltaByteArrays/testColumnReaderImplWithCorruptPage()#org/apache/parquet/column/values/ValuesWriter/getBytes()
org/apache/parquet/column/impl/TestCorruptDeltaByteArrays/testColumnReaderImplWithCorruptPage()#org/apache/parquet/column/ParquetProperties/Builder/build()
org/apache/parquet/column/impl/TestCorruptDeltaByteArrays/testColumnReaderImplWithCorruptPage()#org/apache/parquet/column/values/deltastrings/DeltaByteArrayWriter/reset()
org/apache/parquet/column/impl/TestCorruptDeltaByteArrays/testColumnReaderImplWithCorruptPage()#org/apache/parquet/column/ColumnDescriptor/ColumnDescriptor(java.lang.String[],org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,int,int)
org/apache/parquet/column/impl/TestCorruptDeltaByteArrays/testColumnReaderImplWithCorruptPage()#org/apache/parquet/column/page/mem/MemPageStore/getPageWriter(org.apache.parquet.column.ColumnDescriptor)
org/apache/parquet/column/impl/TestCorruptDeltaByteArrays/testColumnReaderImplWithCorruptPage()#org/apache/parquet/column/ParquetProperties/builder()
org/apache/parquet/column/impl/TestCorruptDeltaByteArrays/testColumnReaderImplWithCorruptPage()#org/apache/parquet/column/values/ValuesWriter/writeInteger(int)
org/apache/parquet/column/impl/TestCorruptDeltaByteArrays/testColumnReaderImplWithCorruptPage()#org/apache/parquet/column/impl/ColumnReaderImpl/consume()
org/apache/parquet/column/impl/TestCorruptDeltaByteArrays/testColumnReaderImplWithCorruptPage()#org/apache/parquet/bytes/BytesInput/concat(org.apache.parquet.bytes.BytesInput[])
org/apache/parquet/column/impl/TestCorruptDeltaByteArrays/testColumnReaderImplWithCorruptPage()#java/util/List/size()
org/apache/parquet/column/impl/TestCorruptDeltaByteArrays/testColumnReaderImplWithCorruptPage()#org/apache/parquet/column/impl/TestCorruptDeltaByteArrays/corruptWriter(org.apache.parquet.column.values.deltastrings.DeltaByteArrayWriter,java.lang.String)
org/apache/parquet/column/impl/TestCorruptDeltaByteArrays/testColumnReaderImplWithCorruptPage()#org/apache/parquet/io/api/Binary/fromString(java.lang.String)
org/apache/parquet/column/impl/TestCorruptDeltaByteArrays/testColumnReaderImplWithCorruptPage()#org/apache/parquet/column/impl/TestCorruptDeltaByteArrays/str(int)
org/apache/parquet/column/impl/TestCorruptDeltaByteArrays/testColumnReaderImplWithCorruptPage()#org/apache/parquet/column/values/deltastrings/DeltaByteArrayWriter/getBytes()
org/apache/parquet/column/impl/TestCorruptDeltaByteArrays/testColumnReaderImplWithCorruptPage()#org/apache/parquet/column/impl/TestCorruptDeltaByteArrays/testColumnReaderImplWithCorruptPage()/$anonymous1/()
org/apache/parquet/column/impl/TestCorruptDeltaByteArrays/testColumnReaderImplWithCorruptPage()#org/apache/parquet/column/impl/TestCorruptDeltaByteArrays/getDeltaByteArrayWriter()
org/apache/parquet/column/impl/TestCorruptDeltaByteArrays/testColumnReaderImplWithCorruptPage()#org/apache/parquet/bytes/BytesInput/from(byte[])
org/apache/parquet/column/impl/TestCorruptDeltaByteArrays/testColumnReaderImplWithCorruptPage()#org/apache/parquet/column/impl/ColumnReaderImpl/getTotalValueCount()
org/apache/parquet/column/impl/TestCorruptDeltaByteArrays/testColumnReaderImplWithCorruptPage()#org/apache/parquet/column/impl/ColumnReaderImpl/writeCurrentValueToConverter()
org/apache/parquet/column/impl/TestCorruptDeltaByteArrays/testColumnReaderImplWithCorruptPage()#org/apache/parquet/column/page/mem/MemPageStore/getPageReader(org.apache.parquet.column.ColumnDescriptor)
org/apache/parquet/column/impl/TestCorruptDeltaByteArrays/testColumnReaderImplWithCorruptPage()#java/util/List/add(E)
org/apache/parquet/column/impl/TestCorruptDeltaByteArrays/testColumnReaderImplWithCorruptPage()#org/apache/parquet/bytes/BytesInput/toByteArray()
org/apache/parquet/column/impl/TestCorruptDeltaByteArrays/testReassemblyWithCorruptPage()#org/apache/parquet/io/api/Binary/toStringUsingUTF8()
org/apache/parquet/column/impl/TestCorruptDeltaByteArrays/testReassemblyWithCorruptPage()#org/apache/parquet/column/values/deltastrings/DeltaByteArrayWriter/reset()
org/apache/parquet/column/impl/TestCorruptDeltaByteArrays/testReassemblyWithCorruptPage()#org/apache/parquet/column/impl/TestCorruptDeltaByteArrays/corruptWriter(org.apache.parquet.column.values.deltastrings.DeltaByteArrayWriter,java.lang.String)
org/apache/parquet/column/impl/TestCorruptDeltaByteArrays/testReassemblyWithCorruptPage()#org/apache/parquet/column/values/deltastrings/DeltaByteArrayReader/DeltaByteArrayReader()
org/apache/parquet/column/impl/TestCorruptDeltaByteArrays/testReassemblyWithCorruptPage()#org/apache/parquet/column/values/deltastrings/DeltaByteArrayWriter/getBytes()
org/apache/parquet/column/impl/TestCorruptDeltaByteArrays/testReassemblyWithCorruptPage()#org/apache/parquet/column/impl/TestCorruptDeltaByteArrays/getDeltaByteArrayWriter()
org/apache/parquet/column/impl/TestCorruptDeltaByteArrays/testReassemblyWithCorruptPage()#org/apache/parquet/bytes/BytesInput/toByteBuffer()
org/apache/parquet/column/impl/TestCorruptDeltaByteArrays/testReassemblyWithCorruptPage()#org/apache/parquet/column/values/deltastrings/DeltaByteArrayReader/readBytes()
org/apache/parquet/column/impl/TestCorruptDeltaByteArrays/testReassemblyWithCorruptPage()#org/apache/parquet/column/values/deltastrings/DeltaByteArrayWriter/writeBytes(org.apache.parquet.io.api.Binary)
org/apache/parquet/column/impl/TestCorruptDeltaByteArrays/testReassemblyWithCorruptPage()#org/apache/parquet/io/api/Binary/fromString(java.lang.String)
org/apache/parquet/column/impl/TestCorruptDeltaByteArrays/testReassemblyWithCorruptPage()#org/apache/parquet/column/impl/TestCorruptDeltaByteArrays/str(int)
org/apache/parquet/column/impl/TestCorruptDeltaByteArrays/testReassemblyWithCorruptPage()#org/apache/parquet/column/values/deltastrings/DeltaByteArrayReader/setPreviousReader(org.apache.parquet.column.values.ValuesReader)
org/apache/parquet/column/impl/TestCorruptDeltaByteArrays/testReassemblyWithCorruptPage()#org/apache/parquet/column/values/deltastrings/DeltaByteArrayReader/initFromPage(int,java.nio.ByteBuffer,int)
org/apache/parquet/thrift/pig/TupleToThriftWriteSupport/init(org.apache.parquet.hadoop.Configuration)#org/apache/parquet/hadoop/BadConfigurationException/BadConfigurationException(java.lang.String,java.lang.Throwable)
org/apache/parquet/thrift/pig/TupleToThriftWriteSupport/init(org.apache.parquet.hadoop.Configuration)#org/apache/parquet/hadoop/thrift/ThriftWriteSupport/ThriftWriteSupport(java.lang.Class)
org/apache/parquet/hadoop/codec/CodecConfig/from(org.apache.parquet.hadoop.TaskAttemptContext)#org/apache/parquet/hadoop/codec/CodecConfig/MapreduceCodecConfig/MapreduceCodecConfig(org.apache.parquet.hadoop.TaskAttemptContext)
org/apache/parquet/hadoop/codec/CodecConfig/from(org.apache.parquet.hadoop.JobConf)#org/apache/parquet/hadoop/codec/CodecConfig/MapredCodecConfig/MapredCodecConfig(org.apache.parquet.hadoop.JobConf)
org/apache/parquet/hadoop/codec/CodecConfig/getParquetCompressionCodec(org.apache.parquet.hadoop.Configuration)#java/lang/Enum/name()
org/apache/parquet/hadoop/codec/CodecConfig/getParquetCompressionCodec(org.apache.parquet.hadoop.Configuration)#org/apache/parquet/hadoop/metadata/CompressionCodecName/fromConf(java.lang.String)
org/apache/parquet/hadoop/codec/CodecConfig/getHadoopCompressionCodec()#org/apache/parquet/hadoop/metadata/CompressionCodecName/fromCompressionCodec(java.lang.Class)
org/apache/parquet/hadoop/codec/CodecConfig/getHadoopCompressionCodec()#org/apache/parquet/hadoop/codec/CodecConfig/getHadoopOutputCompressorClass(java.lang.Class)
org/apache/parquet/hadoop/codec/CodecConfig/getHadoopCompressionCodec()#java/lang/Throwable/getMessage()
org/apache/parquet/hadoop/codec/CodecConfig/getHadoopCompressionCodec()#java/lang/Class/getName()
org/apache/parquet/hadoop/codec/CodecConfig/getHadoopCompressionCodec()#org/apache/parquet/hadoop/metadata/CompressionCodecName/getHadoopCompressionCodecClass()
org/apache/parquet/hadoop/codec/CodecConfig/getHadoopCompressionCodec()#org/apache/parquet/hadoop/codec/CompressionCodecNotSupportedException/getCodecClass()
org/apache/parquet/hadoop/codec/CodecConfig/getCodec()#java/lang/Enum/name()
org/apache/parquet/hadoop/codec/CodecConfig/getCodec()#org/apache/parquet/hadoop/codec/CodecConfig/getConfiguration()
org/apache/parquet/hadoop/codec/CodecConfig/getCodec()#org/apache/parquet/hadoop/codec/CodecConfig/isHadoopCompressionSet()
org/apache/parquet/hadoop/codec/CodecConfig/getCodec()#org/apache/parquet/hadoop/codec/CodecConfig/isParquetCompressionSet(org.apache.parquet.hadoop.Configuration)
org/apache/parquet/hadoop/codec/CodecConfig/getCodec()#org/apache/parquet/hadoop/codec/CodecConfig/getParquetCompressionCodec(org.apache.parquet.hadoop.Configuration)
org/apache/parquet/hadoop/codec/CodecConfig/getCodec()#org/apache/parquet/hadoop/codec/CodecConfig/getHadoopCompressionCodec()
org/apache/parquet/filter2/recordlevel/IncrementallyUpdatedFilterPredicateEvaluator/visit(org.apache.parquet.filter2.recordlevel.IncrementallyUpdatedFilterPredicate.ValueInspector)#org/apache/parquet/filter2/recordlevel/IncrementallyUpdatedFilterPredicate/ValueInspector/getResult()
org/apache/parquet/filter2/recordlevel/IncrementallyUpdatedFilterPredicateEvaluator/visit(org.apache.parquet.filter2.recordlevel.IncrementallyUpdatedFilterPredicate.ValueInspector)#org/apache/parquet/filter2/recordlevel/IncrementallyUpdatedFilterPredicate/ValueInspector/updateNull()
org/apache/parquet/filter2/recordlevel/IncrementallyUpdatedFilterPredicateEvaluator/visit(org.apache.parquet.filter2.recordlevel.IncrementallyUpdatedFilterPredicate.ValueInspector)#org/apache/parquet/filter2/recordlevel/IncrementallyUpdatedFilterPredicate/ValueInspector/isKnown()
org/apache/parquet/filter2/recordlevel/IncrementallyUpdatedFilterPredicateEvaluator/visit(org.apache.parquet.filter2.recordlevel.IncrementallyUpdatedFilterPredicate.Or)#org/apache/parquet/filter2/recordlevel/IncrementallyUpdatedFilterPredicate/BinaryLogical/getLeft()
org/apache/parquet/filter2/recordlevel/IncrementallyUpdatedFilterPredicateEvaluator/visit(org.apache.parquet.filter2.recordlevel.IncrementallyUpdatedFilterPredicate.Or)#org/apache/parquet/filter2/recordlevel/IncrementallyUpdatedFilterPredicate/BinaryLogical/getRight()
org/apache/parquet/filter2/recordlevel/IncrementallyUpdatedFilterPredicateEvaluator/visit(org.apache.parquet.filter2.recordlevel.IncrementallyUpdatedFilterPredicate.Or)#org/apache/parquet/filter2/recordlevel/IncrementallyUpdatedFilterPredicate/accept(org.apache.parquet.filter2.recordlevel.IncrementallyUpdatedFilterPredicate.Visitor)
org/apache/parquet/filter2/recordlevel/IncrementallyUpdatedFilterPredicateEvaluator/visit(org.apache.parquet.filter2.recordlevel.IncrementallyUpdatedFilterPredicate.And)#org/apache/parquet/filter2/recordlevel/IncrementallyUpdatedFilterPredicate/BinaryLogical/getLeft()
org/apache/parquet/filter2/recordlevel/IncrementallyUpdatedFilterPredicateEvaluator/visit(org.apache.parquet.filter2.recordlevel.IncrementallyUpdatedFilterPredicate.And)#org/apache/parquet/filter2/recordlevel/IncrementallyUpdatedFilterPredicate/BinaryLogical/getRight()
org/apache/parquet/filter2/recordlevel/IncrementallyUpdatedFilterPredicateEvaluator/visit(org.apache.parquet.filter2.recordlevel.IncrementallyUpdatedFilterPredicate.And)#org/apache/parquet/filter2/recordlevel/IncrementallyUpdatedFilterPredicate/accept(org.apache.parquet.filter2.recordlevel.IncrementallyUpdatedFilterPredicate.Visitor)
org/apache/parquet/filter2/recordlevel/IncrementallyUpdatedFilterPredicateEvaluator/evaluate(org.apache.parquet.filter2.recordlevel.IncrementallyUpdatedFilterPredicate)#org/apache/parquet/Preconditions/checkNotNull(T,java.lang.String)
org/apache/parquet/filter2/recordlevel/IncrementallyUpdatedFilterPredicateEvaluator/evaluate(org.apache.parquet.filter2.recordlevel.IncrementallyUpdatedFilterPredicate)#org/apache/parquet/filter2/recordlevel/IncrementallyUpdatedFilterPredicate/accept(org.apache.parquet.filter2.recordlevel.IncrementallyUpdatedFilterPredicate.Visitor)
org/apache/parquet/avro/TestReflectInputOutputFormat/Car/equals(java.lang.Object)#java/lang/Object/equals(java.lang.Object)
org/apache/parquet/avro/TestReflectInputOutputFormat/Car/equals(java.lang.Object)#org/apache/parquet/avro/TestReflectInputOutputFormat/Engine/equals(java.lang.Object)
org/apache/parquet/avro/TestReflectInputOutputFormat/Car/equals(java.lang.Object)#java/util/Arrays/equals(byte[],byte[])
org/apache/parquet/avro/TestReflectInputOutputFormat/Car/equals(java.lang.Object)#java/lang/String/equals(java.lang.Object)
org/apache/parquet/avro/TestReflectInputOutputFormat/Car/equals(java.lang.Object)#java/util/List/equals(java.lang.Object)
org/apache/parquet/avro/TestReflectInputOutputFormat/Car/equals(java.lang.Object)#java/lang/Object/getClass()
org/apache/parquet/avro/TestReflectInputOutputFormat/Car/hashCode()#java/lang/String/hashCode()
org/apache/parquet/avro/TestReflectInputOutputFormat/Car/hashCode()#java/util/Arrays/hashCode(byte[])
org/apache/parquet/avro/TestReflectInputOutputFormat/Car/hashCode()#java/util/List/hashCode()
org/apache/parquet/avro/TestReflectInputOutputFormat/Car/hashCode()#java/lang/Object/hashCode()
org/apache/parquet/avro/TestReflectInputOutputFormat/Car/hashCode()#org/apache/parquet/avro/TestReflectInputOutputFormat/Engine/hashCode()
org/apache/parquet/hadoop/TestUtils/enforceEmptyDir(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path)#java/io/IOException/IOException(java.lang.String)
org/apache/parquet/hadoop/TestUtils/assertThrows(java.lang.String,java.lang.Class,java.util.concurrent.Callable)#java/lang/Throwable/addSuppressed(java.lang.Throwable)
org/apache/parquet/hadoop/TestUtils/assertThrows(java.lang.String,java.lang.Class,java.util.concurrent.Callable)#java/lang/Class/getName()
org/apache/parquet/hadoop/TestUtils/assertThrows(java.lang.String,java.lang.Class,java.util.concurrent.Callable)#java/util/concurrent/Callable/call()
org/apache/parquet/hadoop/TestUtils/assertThrows(java.lang.String,java.lang.Class,java.util.concurrent.Callable)#java/lang/Object/getClass()
org/apache/parquet/hadoop/TestDirectCodecFactory/test(int,org.apache.parquet.hadoop.metadata.CompressionCodecName,boolean,org.apache.parquet.hadoop.TestDirectCodecFactory.Decompression)#java/lang/Enum/name()
org/apache/parquet/hadoop/TestDirectCodecFactory/test(int,org.apache.parquet.hadoop.metadata.CompressionCodecName,boolean,org.apache.parquet.hadoop.TestDirectCodecFactory.Decompression)#java/nio/ByteBuffer/put(byte[])
org/apache/parquet/hadoop/TestDirectCodecFactory/test(int,org.apache.parquet.hadoop.metadata.CompressionCodecName,boolean,org.apache.parquet.hadoop.TestDirectCodecFactory.Decompression)#java/nio/ByteBuffer/get(int)
org/apache/parquet/hadoop/TestDirectCodecFactory/test(int,org.apache.parquet.hadoop.metadata.CompressionCodecName,boolean,org.apache.parquet.hadoop.TestDirectCodecFactory.Decompression)#java/io/PrintStream/println(java.lang.String)
org/apache/parquet/hadoop/TestDirectCodecFactory/test(int,org.apache.parquet.hadoop.metadata.CompressionCodecName,boolean,org.apache.parquet.hadoop.TestDirectCodecFactory.Decompression)#java/nio/Buffer/remaining()
org/apache/parquet/hadoop/TestDirectCodecFactory/test(int,org.apache.parquet.hadoop.metadata.CompressionCodecName,boolean,org.apache.parquet.hadoop.TestDirectCodecFactory.Decompression)#java/nio/ByteBuffer/put(java.nio.ByteBuffer)
org/apache/parquet/hadoop/TestDirectCodecFactory/test(int,org.apache.parquet.hadoop.metadata.CompressionCodecName,boolean,org.apache.parquet.hadoop.TestDirectCodecFactory.Decompression)#java/lang/String/format(java.lang.String,java.lang.Object[])
org/apache/parquet/hadoop/TestDirectCodecFactory/test(int,org.apache.parquet.hadoop.metadata.CompressionCodecName,boolean,org.apache.parquet.hadoop.TestDirectCodecFactory.Decompression)#java/nio/Buffer/flip()
org/apache/parquet/hadoop/TestDirectCodecFactory/test(int,org.apache.parquet.hadoop.metadata.CompressionCodecName,boolean,org.apache.parquet.hadoop.TestDirectCodecFactory.Decompression)#org/apache/parquet/bytes/BytesInput/from(java.nio.ByteBuffer,int,int)
org/apache/parquet/hadoop/TestDirectCodecFactory/test(int,org.apache.parquet.hadoop.metadata.CompressionCodecName,boolean,org.apache.parquet.hadoop.TestDirectCodecFactory.Decompression)#org/apache/parquet/bytes/BytesInput/size()
org/apache/parquet/hadoop/TestDirectCodecFactory/test(int,org.apache.parquet.hadoop.metadata.CompressionCodecName,boolean,org.apache.parquet.hadoop.TestDirectCodecFactory.Decompression)#org/apache/parquet/bytes/BytesInput/toByteArray()
org/apache/parquet/hadoop/TestDirectCodecFactory/test(int,org.apache.parquet.hadoop.metadata.CompressionCodecName,boolean,org.apache.parquet.hadoop.TestDirectCodecFactory.Decompression)#java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)
org/apache/parquet/hadoop/TestDirectCodecFactory/test(int,org.apache.parquet.hadoop.metadata.CompressionCodecName,boolean,org.apache.parquet.hadoop.TestDirectCodecFactory.Decompression)#java/util/Random/nextBytes(byte[])
org/apache/parquet/hadoop/TestDirectCodecFactory/test(int,org.apache.parquet.hadoop.metadata.CompressionCodecName,boolean,org.apache.parquet.hadoop.TestDirectCodecFactory.Decompression)#org/apache/parquet/bytes/ByteBufferAllocator/allocate(int)
org/apache/parquet/hadoop/TestDirectCodecFactory/test(int,org.apache.parquet.hadoop.metadata.CompressionCodecName,boolean,org.apache.parquet.hadoop.TestDirectCodecFactory.Decompression)#org/apache/parquet/hadoop/CodecFactory/BytesDecompressor/decompress(java.nio.ByteBuffer,int,java.nio.ByteBuffer,int)
org/apache/parquet/hadoop/TestDirectCodecFactory/test(int,org.apache.parquet.hadoop.metadata.CompressionCodecName,boolean,org.apache.parquet.hadoop.TestDirectCodecFactory.Decompression)#org/apache/parquet/hadoop/CodecFactory/getDecompressor(org.apache.parquet.hadoop.metadata.CompressionCodecName)
org/apache/parquet/hadoop/TestDirectCodecFactory/test(int,org.apache.parquet.hadoop.metadata.CompressionCodecName,boolean,org.apache.parquet.hadoop.TestDirectCodecFactory.Decompression)#org/apache/parquet/bytes/DirectByteBufferAllocator/DirectByteBufferAllocator()
org/apache/parquet/hadoop/TestDirectCodecFactory/test(int,org.apache.parquet.hadoop.metadata.CompressionCodecName,boolean,org.apache.parquet.hadoop.TestDirectCodecFactory.Decompression)#org/apache/parquet/hadoop/CodecFactory/getCompressor(org.apache.parquet.hadoop.metadata.CompressionCodecName)
org/apache/parquet/hadoop/TestDirectCodecFactory/test(int,org.apache.parquet.hadoop.metadata.CompressionCodecName,boolean,org.apache.parquet.hadoop.TestDirectCodecFactory.Decompression)#java/util/Random/Random()
org/apache/parquet/hadoop/TestDirectCodecFactory/test(int,org.apache.parquet.hadoop.metadata.CompressionCodecName,boolean,org.apache.parquet.hadoop.TestDirectCodecFactory.Decompression)#org/apache/parquet/hadoop/CodecFactory/BytesDecompressor/decompress(org.apache.parquet.bytes.BytesInput,int)
org/apache/parquet/hadoop/TestDirectCodecFactory/test(int,org.apache.parquet.hadoop.metadata.CompressionCodecName,boolean,org.apache.parquet.hadoop.TestDirectCodecFactory.Decompression)#org/apache/parquet/hadoop/CodecFactory/createDirectCodecFactory(org.apache.parquet.hadoop.Configuration,org.apache.parquet.bytes.ByteBufferAllocator,int)
org/apache/parquet/hadoop/TestDirectCodecFactory/test(int,org.apache.parquet.hadoop.metadata.CompressionCodecName,boolean,org.apache.parquet.hadoop.TestDirectCodecFactory.Decompression)#org/apache/parquet/bytes/BytesInput/from(byte[])
org/apache/parquet/hadoop/TestDirectCodecFactory/test(int,org.apache.parquet.hadoop.metadata.CompressionCodecName,boolean,org.apache.parquet.hadoop.TestDirectCodecFactory.Decompression)#org/apache/parquet/hadoop/CodecFactory/BytesCompressor/compress(org.apache.parquet.bytes.BytesInput)
org/apache/parquet/hadoop/TestDirectCodecFactory/test(int,org.apache.parquet.hadoop.metadata.CompressionCodecName,boolean,org.apache.parquet.hadoop.TestDirectCodecFactory.Decompression)#org/apache/parquet/bytes/ByteBufferAllocator/release(java.nio.ByteBuffer)
org/apache/parquet/hadoop/TestDirectCodecFactory/test(int,org.apache.parquet.hadoop.metadata.CompressionCodecName,boolean,org.apache.parquet.hadoop.TestDirectCodecFactory.Decompression)#org/apache/parquet/bytes/BytesInput/toByteBuffer()
org/apache/parquet/hadoop/TestDirectCodecFactory/test(int,org.apache.parquet.hadoop.metadata.CompressionCodecName,boolean,org.apache.parquet.hadoop.TestDirectCodecFactory.Decompression)#java/nio/Buffer/capacity()
org/apache/parquet/hadoop/TestDirectCodecFactory/test(int,org.apache.parquet.hadoop.metadata.CompressionCodecName,boolean,org.apache.parquet.hadoop.TestDirectCodecFactory.Decompression)#java/lang/System/arraycopy(java.lang.Object,int,java.lang.Object,int,int)
org/apache/parquet/hadoop/TestDirectCodecFactory/createDirectFactoryWithHeapAllocatorFails()#org/apache/parquet/bytes/HeapByteBufferAllocator/HeapByteBufferAllocator()
org/apache/parquet/hadoop/TestDirectCodecFactory/createDirectFactoryWithHeapAllocatorFails()#java/lang/Throwable/getMessage()
org/apache/parquet/hadoop/TestDirectCodecFactory/createDirectFactoryWithHeapAllocatorFails()#org/apache/parquet/hadoop/CodecFactory/createDirectCodecFactory(org.apache.parquet.hadoop.Configuration,org.apache.parquet.bytes.ByteBufferAllocator,int)
org/apache/parquet/hadoop/TestDirectCodecFactory/createDirectFactoryWithHeapAllocatorFails()#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/apache/parquet/hadoop/TestDirectCodecFactory/createDirectFactoryWithHeapAllocatorFails()#java/lang/String/contains(java.lang.CharSequence)
org/apache/parquet/hadoop/TestDirectCodecFactory/compressionCodecs()#org/apache/parquet/hadoop/metadata/CompressionCodecName/values()
org/apache/parquet/hadoop/TestDirectCodecFactory/compressionCodecs()#org/apache/parquet/hadoop/TestDirectCodecFactory/test(int,org.apache.parquet.hadoop.metadata.CompressionCodecName,boolean,org.apache.parquet.hadoop.TestDirectCodecFactory.Decompression)
org/apache/parquet/hadoop/TestDirectCodecFactory/compressionCodecs()#org/apache/parquet/hadoop/TestDirectCodecFactory/Decompression/values()
org/apache/parquet/hadoop/thrift/ThriftWriteSupport/write(T)#org/apache/parquet/hadoop/thrift/TBaseWriteSupport/write(T)
org/apache/parquet/hadoop/thrift/ThriftWriteSupport/setThriftClass(org.apache.parquet.hadoop.Configuration,java.lang.Class)#org/apache/parquet/hadoop/thrift/TBaseWriteSupport/setThriftClass(org.apache.parquet.hadoop.Configuration,java.lang.Class)
org/apache/parquet/hadoop/thrift/ThriftWriteSupport/getName()#org/apache/parquet/hadoop/thrift/TBaseWriteSupport/getName()
org/apache/parquet/hadoop/thrift/ThriftWriteSupport/init(org.apache.parquet.hadoop.Configuration)#org/apache/parquet/hadoop/thrift/AbstractThriftWriteSupport/init(java.lang.Class)
org/apache/parquet/hadoop/thrift/ThriftWriteSupport/getThriftClass(org.apache.parquet.hadoop.Configuration)#org/apache/parquet/hadoop/thrift/TBaseWriteSupport/getThriftClass(org.apache.parquet.hadoop.Configuration)
org/apache/parquet/hadoop/thrift/ThriftWriteSupport/prepareForWrite(org.apache.parquet.io.api.RecordConsumer)#org/apache/parquet/hadoop/thrift/AbstractThriftWriteSupport/prepareForWrite(org.apache.parquet.io.api.RecordConsumer)
org/apache/hadoop/hive/ql/io/parquet/write/ParquetRecordWriterWrapper/close(org.apache.parquet.hadoop.Reporter)#java/io/IOException/IOException(java.lang.Throwable)
org/apache/hadoop/hive/ql/io/parquet/write/ParquetRecordWriterWrapper/close(boolean)#org/apache/hadoop/hive/ql/io/parquet/write/ParquetRecordWriterWrapper/close(org.apache.parquet.hadoop.Reporter)
org/apache/hadoop/hive/ql/io/parquet/write/ParquetRecordWriterWrapper/write(java.lang.Void,org.apache.hadoop.hive.ql.io.parquet.serde.ArrayWritable)#java/io/IOException/IOException(java.lang.Throwable)
org/apache/hadoop/hive/ql/io/parquet/write/ParquetRecordWriterWrapper/write(org.apache.hadoop.hive.ql.io.parquet.serde.Writable)#org/apache/hadoop/hive/ql/io/parquet/write/ParquetRecordWriterWrapper/write(java.lang.Void,org.apache.hadoop.hive.ql.io.parquet.serde.ArrayWritable)
org/apache/parquet/thrift/ParquetWriteProtocol/writeBinaryToRecordConsumer(java.nio.ByteBuffer)#org/apache/parquet/io/api/Binary/fromReusedByteArray(byte[],int,int)
org/apache/parquet/thrift/ParquetWriteProtocol/writeBinaryToRecordConsumer(java.nio.ByteBuffer)#java/nio/Buffer/position()
org/apache/parquet/thrift/ParquetWriteProtocol/writeBinaryToRecordConsumer(java.nio.ByteBuffer)#java/nio/Buffer/limit()
org/apache/parquet/thrift/ParquetWriteProtocol/writeBinaryToRecordConsumer(java.nio.ByteBuffer)#org/apache/parquet/io/api/RecordConsumer/addBinary(org.apache.parquet.io.api.Binary)
org/apache/parquet/thrift/ParquetWriteProtocol/writeBinaryToRecordConsumer(java.nio.ByteBuffer)#java/nio/ByteBuffer/array()
org/apache/parquet/thrift/ParquetWriteProtocol/getProtocol(org.apache.parquet.thrift.struct.ThriftField,org.apache.parquet.io.ColumnIO,org.apache.parquet.thrift.ParquetWriteProtocol.Events)#org/apache/parquet/thrift/ParquetWriteProtocol/EnumWriteProtocol/EnumWriteProtocol(org.apache.parquet.io.PrimitiveColumnIO,org.apache.parquet.thrift.struct.ThriftType.EnumType,org.apache.parquet.thrift.ParquetWriteProtocol.Events)
org/apache/parquet/thrift/ParquetWriteProtocol/getProtocol(org.apache.parquet.thrift.struct.ThriftField,org.apache.parquet.io.ColumnIO,org.apache.parquet.thrift.ParquetWriteProtocol.Events)#org/apache/parquet/thrift/struct/ThriftType/ListType/getValues()
org/apache/parquet/thrift/ParquetWriteProtocol/getProtocol(org.apache.parquet.thrift.struct.ThriftField,org.apache.parquet.io.ColumnIO,org.apache.parquet.thrift.ParquetWriteProtocol.Events)#org/apache/parquet/thrift/struct/ThriftType/getType()
org/apache/parquet/thrift/ParquetWriteProtocol/getProtocol(org.apache.parquet.thrift.struct.ThriftField,org.apache.parquet.io.ColumnIO,org.apache.parquet.thrift.ParquetWriteProtocol.Events)#org/apache/parquet/thrift/struct/ThriftField/getType()
org/apache/parquet/thrift/ParquetWriteProtocol/getProtocol(org.apache.parquet.thrift.struct.ThriftField,org.apache.parquet.io.ColumnIO,org.apache.parquet.thrift.ParquetWriteProtocol.Events)#org/apache/parquet/thrift/ParquetWriteProtocol/PrimitiveWriteProtocol/PrimitiveWriteProtocol(org.apache.parquet.io.PrimitiveColumnIO,org.apache.parquet.thrift.ParquetWriteProtocol.Events)
org/apache/parquet/thrift/ParquetWriteProtocol/getProtocol(org.apache.parquet.thrift.struct.ThriftField,org.apache.parquet.io.ColumnIO,org.apache.parquet.thrift.ParquetWriteProtocol.Events)#org/apache/parquet/thrift/ParquetWriteProtocol/MapWriteProtocol/MapWriteProtocol(org.apache.parquet.io.GroupColumnIO,org.apache.parquet.thrift.struct.ThriftType.MapType,org.apache.parquet.thrift.ParquetWriteProtocol.Events)
org/apache/parquet/thrift/ParquetWriteProtocol/getProtocol(org.apache.parquet.thrift.struct.ThriftField,org.apache.parquet.io.ColumnIO,org.apache.parquet.thrift.ParquetWriteProtocol.Events)#org/apache/parquet/thrift/ParquetWriteProtocol/ListWriteProtocol/ListWriteProtocol(org.apache.parquet.io.GroupColumnIO,org.apache.parquet.thrift.struct.ThriftField,org.apache.parquet.thrift.ParquetWriteProtocol.Events)
org/apache/parquet/thrift/ParquetWriteProtocol/getProtocol(org.apache.parquet.thrift.struct.ThriftField,org.apache.parquet.io.ColumnIO,org.apache.parquet.thrift.ParquetWriteProtocol.Events)#java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)
org/apache/parquet/thrift/ParquetWriteProtocol/getProtocol(org.apache.parquet.thrift.struct.ThriftField,org.apache.parquet.io.ColumnIO,org.apache.parquet.thrift.ParquetWriteProtocol.Events)#org/apache/parquet/thrift/struct/ThriftType/SetType/getValues()
org/apache/parquet/thrift/ParquetWriteProtocol/getProtocol(org.apache.parquet.thrift.struct.ThriftField,org.apache.parquet.io.ColumnIO,org.apache.parquet.thrift.ParquetWriteProtocol.Events)#org/apache/parquet/thrift/ParquetWriteProtocol/StructWriteProtocol/StructWriteProtocol(org.apache.parquet.io.GroupColumnIO,org.apache.parquet.thrift.struct.ThriftType.StructType,org.apache.parquet.thrift.ParquetWriteProtocol.Events)
org/apache/parquet/thrift/ParquetWriteProtocol/writeStringToRecordConsumer(java.lang.String)#org/apache/parquet/io/api/Binary/fromString(java.lang.String)
org/apache/parquet/thrift/ParquetWriteProtocol/writeStringToRecordConsumer(java.lang.String)#org/apache/parquet/io/api/RecordConsumer/addBinary(org.apache.parquet.io.api.Binary)
org/apache/parquet/thrift/ParquetWriteProtocol/writeListBegin(org.apache.parquet.thrift.TList)#org/apache/parquet/thrift/ParquetWriteProtocol/toString(org.apache.parquet.thrift.TStruct)
org/apache/parquet/thrift/ParquetWriteProtocol/writeStructBegin(org.apache.parquet.thrift.TStruct)#org/apache/parquet/thrift/ParquetWriteProtocol/toString(org.apache.parquet.thrift.TStruct)
org/apache/parquet/thrift/ParquetWriteProtocol/writeMapBegin(org.apache.parquet.thrift.TMap)#org/apache/parquet/thrift/ParquetWriteProtocol/toString(org.apache.parquet.thrift.TStruct)
org/apache/hadoop/hive/ql/io/parquet/serde/ParquetHiveSerDe/createArray(java.lang.Object,org.apache.hadoop.hive.ql.io.parquet.serde.ListObjectInspector)#java/util/ArrayList/ArrayList()
org/apache/hadoop/hive/ql/io/parquet/serde/ParquetHiveSerDe/createArray(java.lang.Object,org.apache.hadoop.hive.ql.io.parquet.serde.ListObjectInspector)#org/apache/hadoop/hive/ql/io/parquet/serde/ParquetHiveSerDe/createObject(java.lang.Object,org.apache.hadoop.hive.ql.io.parquet.serde.ObjectInspector)
org/apache/hadoop/hive/ql/io/parquet/serde/ParquetHiveSerDe/createArray(java.lang.Object,org.apache.hadoop.hive.ql.io.parquet.serde.ListObjectInspector)#java/lang/Object/Object()
org/apache/hadoop/hive/ql/io/parquet/serde/ParquetHiveSerDe/initialize(org.apache.parquet.hadoop.Configuration,java.util.Properties)#java/util/ArrayList/ArrayList()
org/apache/hadoop/hive/ql/io/parquet/serde/ParquetHiveSerDe/initialize(org.apache.parquet.hadoop.Configuration,java.util.Properties)#java/util/Properties/getProperty(java.lang.String)
org/apache/hadoop/hive/ql/io/parquet/serde/ParquetHiveSerDe/initialize(org.apache.parquet.hadoop.Configuration,java.util.Properties)#java/lang/String/split(java.lang.String)
org/apache/hadoop/hive/ql/io/parquet/serde/ParquetHiveSerDe/initialize(org.apache.parquet.hadoop.Configuration,java.util.Properties)#org/apache/hadoop/hive/ql/io/parquet/serde/ArrayWritableObjectInspector/ArrayWritableObjectInspector(org.apache.hadoop.hive.ql.io.parquet.serde.StructTypeInfo)
org/apache/hadoop/hive/ql/io/parquet/serde/ParquetHiveSerDe/initialize(org.apache.parquet.hadoop.Configuration,java.util.Properties)#java/lang/String/length()
org/apache/hadoop/hive/ql/io/parquet/serde/ParquetHiveSerDe/initialize(org.apache.parquet.hadoop.Configuration,java.util.Properties)#java/util/List/size()
org/apache/hadoop/hive/ql/io/parquet/serde/ParquetHiveSerDe/initialize(org.apache.parquet.hadoop.Configuration,java.util.Properties)#java/util/Arrays/asList(T[])
org/apache/hadoop/hive/ql/io/parquet/serde/ParquetHiveSerDe/initialize(org.apache.parquet.hadoop.Configuration,java.util.Properties)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/hadoop/hive/ql/io/parquet/serde/ParquetHiveSerDe/createStruct(java.lang.Object,org.apache.hadoop.hive.ql.io.parquet.serde.StructObjectInspector)#java/util/List/size()
org/apache/hadoop/hive/ql/io/parquet/serde/ParquetHiveSerDe/createStruct(java.lang.Object,org.apache.hadoop.hive.ql.io.parquet.serde.StructObjectInspector)#java/util/List/get(int)
org/apache/hadoop/hive/ql/io/parquet/serde/ParquetHiveSerDe/createStruct(java.lang.Object,org.apache.hadoop.hive.ql.io.parquet.serde.StructObjectInspector)#org/apache/hadoop/hive/ql/io/parquet/serde/ParquetHiveSerDe/createObject(java.lang.Object,org.apache.hadoop.hive.ql.io.parquet.serde.ObjectInspector)
org/apache/hadoop/hive/ql/io/parquet/serde/ParquetHiveSerDe/createStruct(java.lang.Object,org.apache.hadoop.hive.ql.io.parquet.serde.StructObjectInspector)#java/lang/Object/Object()
org/apache/hadoop/hive/ql/io/parquet/serde/ParquetHiveSerDe/createObject(java.lang.Object,org.apache.hadoop.hive.ql.io.parquet.serde.ObjectInspector)#org/apache/hadoop/hive/ql/io/parquet/serde/ParquetHiveSerDe/createMap(java.lang.Object,org.apache.hadoop.hive.ql.io.parquet.serde.MapObjectInspector)
org/apache/hadoop/hive/ql/io/parquet/serde/ParquetHiveSerDe/createObject(java.lang.Object,org.apache.hadoop.hive.ql.io.parquet.serde.ObjectInspector)#org/apache/hadoop/hive/ql/io/parquet/serde/ParquetHiveSerDe/createArray(java.lang.Object,org.apache.hadoop.hive.ql.io.parquet.serde.ListObjectInspector)
org/apache/hadoop/hive/ql/io/parquet/serde/ParquetHiveSerDe/createObject(java.lang.Object,org.apache.hadoop.hive.ql.io.parquet.serde.ObjectInspector)#org/apache/hadoop/hive/ql/io/parquet/serde/ParquetHiveSerDe/createStruct(java.lang.Object,org.apache.hadoop.hive.ql.io.parquet.serde.StructObjectInspector)
org/apache/hadoop/hive/ql/io/parquet/serde/ParquetHiveSerDe/createObject(java.lang.Object,org.apache.hadoop.hive.ql.io.parquet.serde.ObjectInspector)#java/lang/Object/Object()
org/apache/hadoop/hive/ql/io/parquet/serde/ParquetHiveSerDe/createObject(java.lang.Object,org.apache.hadoop.hive.ql.io.parquet.serde.ObjectInspector)#org/apache/hadoop/hive/ql/io/parquet/serde/ParquetHiveSerDe/createPrimitive(java.lang.Object,org.apache.hadoop.hive.ql.io.parquet.serde.PrimitiveObjectInspector)
org/apache/hadoop/hive/ql/io/parquet/serde/ParquetHiveSerDe/createPrimitive(java.lang.Object,org.apache.hadoop.hive.ql.io.parquet.serde.PrimitiveObjectInspector)#org/apache/hadoop/hive/ql/io/parquet/writable/BinaryWritable/BinaryWritable(org.apache.parquet.io.api.Binary)
org/apache/hadoop/hive/ql/io/parquet/serde/ParquetHiveSerDe/createPrimitive(java.lang.Object,org.apache.hadoop.hive.ql.io.parquet.serde.PrimitiveObjectInspector)#org/apache/parquet/io/api/Binary/fromString(java.lang.String)
org/apache/hadoop/hive/ql/io/parquet/serde/ParquetHiveSerDe/createPrimitive(java.lang.Object,org.apache.hadoop.hive.ql.io.parquet.serde.PrimitiveObjectInspector)#java/lang/Object/Object()
org/apache/hadoop/hive/ql/io/parquet/serde/ParquetHiveSerDe/serialize(java.lang.Object,org.apache.hadoop.hive.ql.io.parquet.serde.ObjectInspector)#org/apache/hadoop/hive/ql/io/parquet/serde/ParquetHiveSerDe/createStruct(java.lang.Object,org.apache.hadoop.hive.ql.io.parquet.serde.StructObjectInspector)
org/apache/hadoop/hive/ql/io/parquet/serde/ParquetHiveSerDe/serialize(java.lang.Object,org.apache.hadoop.hive.ql.io.parquet.serde.ObjectInspector)#java/lang/Object/Object()
org/apache/hadoop/hive/ql/io/parquet/serde/ParquetHiveSerDe/createMap(java.lang.Object,org.apache.hadoop.hive.ql.io.parquet.serde.MapObjectInspector)#java/util/ArrayList/ArrayList()
org/apache/hadoop/hive/ql/io/parquet/serde/ParquetHiveSerDe/createMap(java.lang.Object,org.apache.hadoop.hive.ql.io.parquet.serde.MapObjectInspector)#java/util/Map/Entry/getValue()
org/apache/hadoop/hive/ql/io/parquet/serde/ParquetHiveSerDe/createMap(java.lang.Object,org.apache.hadoop.hive.ql.io.parquet.serde.MapObjectInspector)#java/util/Map/Entry/getKey()
org/apache/hadoop/hive/ql/io/parquet/serde/ParquetHiveSerDe/createMap(java.lang.Object,org.apache.hadoop.hive.ql.io.parquet.serde.MapObjectInspector)#java/util/Map/entrySet()
org/apache/hadoop/hive/ql/io/parquet/serde/ParquetHiveSerDe/createMap(java.lang.Object,org.apache.hadoop.hive.ql.io.parquet.serde.MapObjectInspector)#org/apache/hadoop/hive/ql/io/parquet/serde/ParquetHiveSerDe/createObject(java.lang.Object,org.apache.hadoop.hive.ql.io.parquet.serde.ObjectInspector)
org/apache/hadoop/hive/ql/io/parquet/serde/ParquetHiveSerDe/createMap(java.lang.Object,org.apache.hadoop.hive.ql.io.parquet.serde.MapObjectInspector)#java/lang/Object/Object()
org/apache/parquet/filter2/recordlevel/PhoneBookWriter/readFile(java.io.File,org.apache.parquet.filter2.compat.FilterCompat.Filter)#org/apache/parquet/hadoop/ParquetReader/read()
org/apache/parquet/filter2/recordlevel/PhoneBookWriter/readFile(java.io.File,org.apache.parquet.filter2.compat.FilterCompat.Filter)#java/util/ArrayList/ArrayList()
org/apache/parquet/filter2/recordlevel/PhoneBookWriter/readFile(java.io.File,org.apache.parquet.filter2.compat.FilterCompat.Filter)#org/apache/parquet/hadoop/ParquetReader/builder(org.apache.parquet.hadoop.api.ReadSupport,org.apache.parquet.hadoop.Path)
org/apache/parquet/filter2/recordlevel/PhoneBookWriter/readFile(java.io.File,org.apache.parquet.filter2.compat.FilterCompat.Filter)#org/apache/parquet/hadoop/example/GroupWriteSupport/setSchema(org.apache.parquet.schema.MessageType,org.apache.parquet.hadoop.Configuration)
org/apache/parquet/filter2/recordlevel/PhoneBookWriter/readFile(java.io.File,org.apache.parquet.filter2.compat.FilterCompat.Filter)#org/apache/parquet/hadoop/example/GroupReadSupport/GroupReadSupport()
org/apache/parquet/filter2/recordlevel/PhoneBookWriter/readFile(java.io.File,org.apache.parquet.filter2.compat.FilterCompat.Filter)#java/io/File/getAbsolutePath()
org/apache/parquet/filter2/recordlevel/PhoneBookWriter/readFile(java.io.File,org.apache.parquet.filter2.compat.FilterCompat.Filter)#java/util/List/add(E)
org/apache/parquet/filter2/recordlevel/PhoneBookWriter/groupFromUser(org.apache.parquet.filter2.recordlevel.PhoneBookWriter.User)#org/apache/parquet/filter2/recordlevel/PhoneBookWriter/User/getName()
org/apache/parquet/filter2/recordlevel/PhoneBookWriter/groupFromUser(org.apache.parquet.filter2.recordlevel.PhoneBookWriter.User)#org/apache/parquet/filter2/recordlevel/PhoneBookWriter/Location/getLon()
org/apache/parquet/filter2/recordlevel/PhoneBookWriter/groupFromUser(org.apache.parquet.filter2.recordlevel.PhoneBookWriter.User)#org/apache/parquet/filter2/recordlevel/PhoneBookWriter/PhoneNumber/getKind()
org/apache/parquet/filter2/recordlevel/PhoneBookWriter/groupFromUser(org.apache.parquet.filter2.recordlevel.PhoneBookWriter.User)#org/apache/parquet/example/data/Group/append(java.lang.String,java.lang.String)
org/apache/parquet/filter2/recordlevel/PhoneBookWriter/groupFromUser(org.apache.parquet.filter2.recordlevel.PhoneBookWriter.User)#org/apache/parquet/filter2/recordlevel/PhoneBookWriter/User/getLocation()
org/apache/parquet/filter2/recordlevel/PhoneBookWriter/groupFromUser(org.apache.parquet.filter2.recordlevel.PhoneBookWriter.User)#org/apache/parquet/filter2/recordlevel/PhoneBookWriter/User/getPhoneNumbers()
org/apache/parquet/filter2/recordlevel/PhoneBookWriter/groupFromUser(org.apache.parquet.filter2.recordlevel.PhoneBookWriter.User)#org/apache/parquet/example/data/Group/addGroup(java.lang.String)
org/apache/parquet/filter2/recordlevel/PhoneBookWriter/groupFromUser(org.apache.parquet.filter2.recordlevel.PhoneBookWriter.User)#org/apache/parquet/filter2/recordlevel/PhoneBookWriter/Location/getLat()
org/apache/parquet/filter2/recordlevel/PhoneBookWriter/groupFromUser(org.apache.parquet.filter2.recordlevel.PhoneBookWriter.User)#org/apache/parquet/example/data/Group/append(java.lang.String,double)
org/apache/parquet/filter2/recordlevel/PhoneBookWriter/groupFromUser(org.apache.parquet.filter2.recordlevel.PhoneBookWriter.User)#org/apache/parquet/example/data/Group/append(java.lang.String,long)
org/apache/parquet/filter2/recordlevel/PhoneBookWriter/groupFromUser(org.apache.parquet.filter2.recordlevel.PhoneBookWriter.User)#org/apache/parquet/filter2/recordlevel/PhoneBookWriter/User/getId()
org/apache/parquet/filter2/recordlevel/PhoneBookWriter/groupFromUser(org.apache.parquet.filter2.recordlevel.PhoneBookWriter.User)#org/apache/parquet/example/data/simple/SimpleGroup/SimpleGroup(org.apache.parquet.schema.GroupType)
org/apache/parquet/filter2/recordlevel/PhoneBookWriter/groupFromUser(org.apache.parquet.filter2.recordlevel.PhoneBookWriter.User)#org/apache/parquet/filter2/recordlevel/PhoneBookWriter/PhoneNumber/getNumber()
org/apache/parquet/filter2/recordlevel/PhoneBookWriter/main(java.lang.String[])#org/apache/parquet/filter2/recordlevel/TestRecordLevelFilters/makeUsers()
org/apache/parquet/filter2/recordlevel/PhoneBookWriter/main(java.lang.String[])#org/apache/parquet/filter2/recordlevel/PhoneBookWriter/writeToFile(java.io.File,java.util.List)
org/apache/parquet/filter2/recordlevel/PhoneBookWriter/main(java.lang.String[])#java/io/File/File(java.lang.String)
org/apache/parquet/filter2/recordlevel/PhoneBookWriter/writeToFile(java.io.File,java.util.List)#org/apache/parquet/hadoop/example/GroupWriteSupport/setSchema(org.apache.parquet.schema.MessageType,org.apache.parquet.hadoop.Configuration)
org/apache/parquet/filter2/recordlevel/PhoneBookWriter/writeToFile(java.io.File,java.util.List)#org/apache/parquet/hadoop/ParquetWriter/close()
org/apache/parquet/filter2/recordlevel/PhoneBookWriter/writeToFile(java.io.File,java.util.List)#org/apache/parquet/hadoop/example/GroupWriteSupport/GroupWriteSupport()
org/apache/parquet/filter2/recordlevel/PhoneBookWriter/writeToFile(java.io.File,java.util.List)#java/io/File/getAbsolutePath()
org/apache/parquet/filter2/recordlevel/PhoneBookWriter/writeToFile(java.io.File,java.util.List)#org/apache/parquet/hadoop/ParquetWriter/write(T)
org/apache/parquet/filter2/recordlevel/PhoneBookWriter/writeToFile(java.io.File,java.util.List)#org/apache/parquet/filter2/recordlevel/PhoneBookWriter/groupFromUser(org.apache.parquet.filter2.recordlevel.PhoneBookWriter.User)
org/apache/parquet/filter2/recordlevel/PhoneBookWriter/writeToFile(java.io.File,java.util.List)#org/apache/parquet/hadoop/ParquetWriter/ParquetWriter(org.apache.parquet.hadoop.Path,org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.api.WriteSupport)
org/apache/parquet/filter2/recordlevel/PhoneBookWriter/writeToFile(java.util.List)#java/io/IOException/IOException(java.lang.String)
org/apache/parquet/filter2/recordlevel/PhoneBookWriter/writeToFile(java.util.List)#org/apache/parquet/filter2/recordlevel/PhoneBookWriter/writeToFile(java.io.File,java.util.List)
org/apache/parquet/filter2/recordlevel/PhoneBookWriter/writeToFile(java.util.List)#java/io/File/delete()
org/apache/parquet/filter2/recordlevel/PhoneBookWriter/writeToFile(java.util.List)#java/io/File/createTempFile(java.lang.String,java.lang.String)
org/apache/parquet/filter2/recordlevel/PhoneBookWriter/writeToFile(java.util.List)#java/io/File/deleteOnExit()
org/apache/parquet/filter2/predicate/Operators/Lt/accept(org.apache.parquet.filter2.predicate.FilterPredicate.Visitor)#org/apache/parquet/filter2/predicate/FilterPredicate/Visitor/visit(org.apache.parquet.filter2.predicate.Operators.Lt)
org/apache/parquet/statistics/RandomValues/LongGenerator/nextValue()#org/apache/parquet/statistics/RandomValues/RandomValueGenerator/randomLong(long)
org/apache/parquet/column/statistics/Statistics/updateStats(boolean)#java/lang/UnsupportedOperationException/UnsupportedOperationException()
org/apache/parquet/column/statistics/Statistics/updateStats(float)#java/lang/UnsupportedOperationException/UnsupportedOperationException()
org/apache/parquet/column/statistics/Statistics/updateStats(int)#java/lang/UnsupportedOperationException/UnsupportedOperationException()
org/apache/parquet/column/statistics/Statistics/getStatsBasedOnType(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)#org/apache/parquet/column/statistics/BooleanStatistics/BooleanStatistics()
org/apache/parquet/column/statistics/Statistics/getStatsBasedOnType(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)#org/apache/parquet/column/UnknownColumnTypeException/UnknownColumnTypeException(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/column/statistics/Statistics/getStatsBasedOnType(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)#org/apache/parquet/column/statistics/IntStatistics/IntStatistics()
org/apache/parquet/column/statistics/Statistics/getStatsBasedOnType(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)#org/apache/parquet/column/statistics/LongStatistics/LongStatistics()
org/apache/parquet/column/statistics/Statistics/getStatsBasedOnType(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)#org/apache/parquet/column/statistics/FloatStatistics/FloatStatistics()
org/apache/parquet/column/statistics/Statistics/getStatsBasedOnType(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)#org/apache/parquet/column/statistics/BinaryStatistics/BinaryStatistics()
org/apache/parquet/column/statistics/Statistics/getStatsBasedOnType(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)#org/apache/parquet/column/statistics/DoubleStatistics/DoubleStatistics()
org/apache/parquet/column/statistics/Statistics/updateStats(long)#java/lang/UnsupportedOperationException/UnsupportedOperationException()
org/apache/parquet/column/statistics/Statistics/equals(java.lang.Object)#org/apache/parquet/column/statistics/Statistics/getMinBytes()
org/apache/parquet/column/statistics/Statistics/equals(java.lang.Object)#java/util/Arrays/equals(byte[],byte[])
org/apache/parquet/column/statistics/Statistics/equals(java.lang.Object)#org/apache/parquet/column/statistics/Statistics/getNumNulls()
org/apache/parquet/column/statistics/Statistics/equals(java.lang.Object)#org/apache/parquet/column/statistics/Statistics/getMaxBytes()
org/apache/parquet/column/statistics/Statistics/mergeStatistics(org.apache.parquet.column.statistics.Statistics)#org/apache/parquet/column/statistics/Statistics/hasNonNullValue()
org/apache/parquet/column/statistics/Statistics/mergeStatistics(org.apache.parquet.column.statistics.Statistics)#org/apache/parquet/column/statistics/Statistics/incrementNumNulls(long)
org/apache/parquet/column/statistics/Statistics/mergeStatistics(org.apache.parquet.column.statistics.Statistics)#org/apache/parquet/column/statistics/Statistics/getNumNulls()
org/apache/parquet/column/statistics/Statistics/mergeStatistics(org.apache.parquet.column.statistics.Statistics)#java/lang/Class/toString()
org/apache/parquet/column/statistics/Statistics/mergeStatistics(org.apache.parquet.column.statistics.Statistics)#org/apache/parquet/column/statistics/Statistics/isEmpty()
org/apache/parquet/column/statistics/Statistics/mergeStatistics(org.apache.parquet.column.statistics.Statistics)#java/lang/Object/getClass()
org/apache/parquet/column/statistics/Statistics/mergeStatistics(org.apache.parquet.column.statistics.Statistics)#org/apache/parquet/column/statistics/Statistics/markAsNotEmpty()
org/apache/parquet/column/statistics/Statistics/mergeStatistics(org.apache.parquet.column.statistics.Statistics)#org/apache/parquet/column/statistics/StatisticsClassException/StatisticsClassException(java.lang.String,java.lang.String)
org/apache/parquet/column/statistics/Statistics/mergeStatistics(org.apache.parquet.column.statistics.Statistics)#org/apache/parquet/column/statistics/Statistics/mergeStatisticsMinMax(org.apache.parquet.column.statistics.Statistics)
org/apache/parquet/column/statistics/Statistics/updateStats(double)#java/lang/UnsupportedOperationException/UnsupportedOperationException()
org/apache/parquet/column/statistics/Statistics/updateStats(org.apache.parquet.io.api.Binary)#java/lang/UnsupportedOperationException/UnsupportedOperationException()
org/apache/parquet/column/statistics/Statistics/hashCode()#java/util/Arrays/hashCode(byte[])
org/apache/parquet/column/statistics/Statistics/hashCode()#org/apache/parquet/column/statistics/Statistics/getMinBytes()
org/apache/parquet/column/statistics/Statistics/hashCode()#java/lang/Long/valueOf(long)
org/apache/parquet/column/statistics/Statistics/hashCode()#org/apache/parquet/column/statistics/Statistics/getNumNulls()
org/apache/parquet/column/statistics/Statistics/hashCode()#org/apache/parquet/column/statistics/Statistics/getMaxBytes()
org/apache/parquet/column/statistics/Statistics/hashCode()#java/lang/Long/hashCode()
org/apache/parquet/column/values/dictionary/PlainValuesDictionary/PlainFloatDictionary/toString()#java/lang/StringBuilder/append(java.lang.String)
org/apache/parquet/column/values/dictionary/PlainValuesDictionary/PlainFloatDictionary/toString()#java/lang/StringBuilder/append(int)
org/apache/parquet/column/values/dictionary/PlainValuesDictionary/PlainFloatDictionary/toString()#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/apache/parquet/column/values/dictionary/PlainValuesDictionary/PlainFloatDictionary/toString()#java/lang/StringBuilder/append(float)
org/apache/parquet/column/values/dictionary/PlainValuesDictionary/PlainFloatDictionary/toString()#java/lang/StringBuilder/toString()
org/apache/parquet/avro/TestReflectLogicalTypes/DecimalRecordBytes/equals(java.lang.Object)#java/math/BigDecimal/equals(java.lang.Object)
org/apache/parquet/avro/TestReflectLogicalTypes/DecimalRecordBytes/equals(java.lang.Object)#java/lang/Object/getClass()
org/apache/parquet/avro/TestReflectLogicalTypes/DecimalRecordBytes/hashCode()#java/math/BigDecimal/hashCode()
org/apache/parquet/filter2/dictionarylevel/DictionaryFilterTest/testEqBinary()#org/apache/parquet/filter2/predicate/FilterApi/eq(C,T)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilterTest/testEqBinary()#org/apache/parquet/filter2/dictionarylevel/DictionaryFilter/canDrop(org.apache.parquet.filter2.predicate.FilterPredicate,java.util.List,org.apache.parquet.column.page.DictionaryPageReadStore)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilterTest/testEqBinary()#org/apache/parquet/io/api/Binary/fromString(java.lang.String)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilterTest/testEqBinary()#org/apache/parquet/filter2/predicate/FilterApi/binaryColumn(java.lang.String)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilterTest/testGtEqMissingColumn()#org/apache/parquet/filter2/dictionarylevel/DictionaryFilter/canDrop(org.apache.parquet.filter2.predicate.FilterPredicate,java.util.List,org.apache.parquet.column.page.DictionaryPageReadStore)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilterTest/testGtEqMissingColumn()#org/apache/parquet/io/api/Binary/fromString(java.lang.String)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilterTest/testGtEqMissingColumn()#org/apache/parquet/filter2/predicate/FilterApi/binaryColumn(java.lang.String)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilterTest/testGtEqMissingColumn()#org/apache/parquet/filter2/predicate/FilterApi/gtEq(C,T)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilterTest/testEqMissingColumn()#org/apache/parquet/filter2/predicate/FilterApi/eq(C,T)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilterTest/testEqMissingColumn()#org/apache/parquet/filter2/dictionarylevel/DictionaryFilter/canDrop(org.apache.parquet.filter2.predicate.FilterPredicate,java.util.List,org.apache.parquet.column.page.DictionaryPageReadStore)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilterTest/testEqMissingColumn()#org/apache/parquet/io/api/Binary/fromString(java.lang.String)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilterTest/testEqMissingColumn()#org/apache/parquet/filter2/predicate/FilterApi/binaryColumn(java.lang.String)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilterTest/testLtMissingColumn()#org/apache/parquet/io/api/Binary/fromString(java.lang.String)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilterTest/testLtMissingColumn()#org/apache/parquet/filter2/predicate/FilterApi/binaryColumn(java.lang.String)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilterTest/testLtMissingColumn()#org/apache/parquet/filter2/predicate/FilterApi/lt(C,T)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilterTest/testLtMissingColumn()#org/apache/parquet/filter2/dictionarylevel/DictionaryFilter/canDrop(org.apache.parquet.filter2.predicate.FilterPredicate,java.util.List,org.apache.parquet.column.page.DictionaryPageReadStore)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilterTest/testColumnWithDictionaryAndPlainEncodings()#org/apache/parquet/filter2/predicate/FilterApi/ltEq(C,T)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilterTest/testColumnWithDictionaryAndPlainEncodings()#org/apache/parquet/filter2/predicate/FilterApi/gt(C,T)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilterTest/testColumnWithDictionaryAndPlainEncodings()#org/apache/parquet/filter2/predicate/FilterApi/eq(C,T)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilterTest/testColumnWithDictionaryAndPlainEncodings()#org/apache/parquet/filter2/predicate/FilterApi/notEq(C,T)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilterTest/testColumnWithDictionaryAndPlainEncodings()#org/apache/parquet/filter2/predicate/FilterApi/intColumn(java.lang.String)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilterTest/testColumnWithDictionaryAndPlainEncodings()#org/apache/parquet/filter2/predicate/FilterApi/gtEq(C,T)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilterTest/testColumnWithDictionaryAndPlainEncodings()#org/apache/parquet/filter2/predicate/FilterApi/lt(C,T)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilterTest/testColumnWithDictionaryAndPlainEncodings()#org/apache/parquet/filter2/dictionarylevel/DictionaryFilter/canDrop(org.apache.parquet.filter2.predicate.FilterPredicate,java.util.List,org.apache.parquet.column.page.DictionaryPageReadStore)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilterTest/testNotEqBinary()#org/apache/parquet/filter2/dictionarylevel/DictionaryFilter/canDrop(org.apache.parquet.filter2.predicate.FilterPredicate,java.util.List,org.apache.parquet.column.page.DictionaryPageReadStore)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilterTest/testNotEqBinary()#org/apache/parquet/filter2/predicate/FilterApi/notEq(C,T)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilterTest/testNotEqBinary()#org/apache/parquet/io/api/Binary/fromString(java.lang.String)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilterTest/testNotEqBinary()#org/apache/parquet/filter2/predicate/FilterApi/binaryColumn(java.lang.String)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilterTest/testLtEqLong()#org/apache/parquet/filter2/predicate/FilterApi/ltEq(C,T)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilterTest/testLtEqLong()#java/lang/Math/min(long,long)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilterTest/testLtEqLong()#org/apache/parquet/filter2/dictionarylevel/DictionaryFilter/canDrop(org.apache.parquet.filter2.predicate.FilterPredicate,java.util.List,org.apache.parquet.column.page.DictionaryPageReadStore)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilterTest/testLtEqLong()#org/apache/parquet/filter2/predicate/FilterApi/longColumn(java.lang.String)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilterTest/tearDown()#org/apache/parquet/hadoop/ParquetFileReader/close()
org/apache/parquet/filter2/dictionarylevel/DictionaryFilterTest/testLtInt()#org/apache/parquet/filter2/predicate/FilterApi/intColumn(java.lang.String)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilterTest/testLtInt()#java/lang/Math/min(int,int)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilterTest/testLtInt()#org/apache/parquet/filter2/predicate/FilterApi/lt(C,T)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilterTest/testLtInt()#org/apache/parquet/filter2/dictionarylevel/DictionaryFilter/canDrop(org.apache.parquet.filter2.predicate.FilterPredicate,java.util.List,org.apache.parquet.column.page.DictionaryPageReadStore)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilterTest/testLtEqMissingColumn()#org/apache/parquet/filter2/predicate/FilterApi/ltEq(C,T)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilterTest/testLtEqMissingColumn()#org/apache/parquet/filter2/dictionarylevel/DictionaryFilter/canDrop(org.apache.parquet.filter2.predicate.FilterPredicate,java.util.List,org.apache.parquet.column.page.DictionaryPageReadStore)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilterTest/testLtEqMissingColumn()#org/apache/parquet/io/api/Binary/fromString(java.lang.String)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilterTest/testLtEqMissingColumn()#org/apache/parquet/filter2/predicate/FilterApi/binaryColumn(java.lang.String)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilterTest/testColumnWithoutDictionary()#org/apache/parquet/filter2/predicate/FilterApi/ltEq(C,T)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilterTest/testColumnWithoutDictionary()#org/apache/parquet/filter2/predicate/FilterApi/gt(C,T)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilterTest/testColumnWithoutDictionary()#org/apache/parquet/filter2/predicate/FilterApi/eq(C,T)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilterTest/testColumnWithoutDictionary()#org/apache/parquet/filter2/predicate/FilterApi/notEq(C,T)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilterTest/testColumnWithoutDictionary()#org/apache/parquet/filter2/predicate/FilterApi/intColumn(java.lang.String)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilterTest/testColumnWithoutDictionary()#org/apache/parquet/filter2/predicate/FilterApi/gtEq(C,T)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilterTest/testColumnWithoutDictionary()#org/apache/parquet/filter2/predicate/FilterApi/lt(C,T)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilterTest/testColumnWithoutDictionary()#org/apache/parquet/filter2/dictionarylevel/DictionaryFilter/canDrop(org.apache.parquet.filter2.predicate.FilterPredicate,java.util.List,org.apache.parquet.column.page.DictionaryPageReadStore)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilterTest/testNotEqMissingColumn()#org/apache/parquet/filter2/dictionarylevel/DictionaryFilter/canDrop(org.apache.parquet.filter2.predicate.FilterPredicate,java.util.List,org.apache.parquet.column.page.DictionaryPageReadStore)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilterTest/testNotEqMissingColumn()#org/apache/parquet/filter2/predicate/FilterApi/notEq(C,T)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilterTest/testNotEqMissingColumn()#org/apache/parquet/io/api/Binary/fromString(java.lang.String)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilterTest/testNotEqMissingColumn()#org/apache/parquet/filter2/predicate/FilterApi/binaryColumn(java.lang.String)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilterTest/setUp()#org/apache/parquet/hadoop/ParquetFileReader/getDictionaryReader(org.apache.parquet.hadoop.metadata.BlockMetaData)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilterTest/setUp()#org/apache/parquet/hadoop/metadata/ParquetMetadata/getBlocks()
org/apache/parquet/filter2/dictionarylevel/DictionaryFilterTest/setUp()#org/apache/parquet/hadoop/ParquetFileReader/open(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilterTest/setUp()#org/apache/parquet/hadoop/metadata/BlockMetaData/getColumns()
org/apache/parquet/filter2/dictionarylevel/DictionaryFilterTest/setUp()#org/apache/parquet/hadoop/ParquetFileReader/getFooter()
org/apache/parquet/filter2/dictionarylevel/DictionaryFilterTest/setUp()#java/util/List/get(int)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilterTest/testGtFloat()#org/apache/parquet/filter2/dictionarylevel/DictionaryFilterTest/toFloat(int)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilterTest/testGtFloat()#org/apache/parquet/filter2/predicate/FilterApi/gt(C,T)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilterTest/testGtFloat()#org/apache/parquet/filter2/dictionarylevel/DictionaryFilter/canDrop(org.apache.parquet.filter2.predicate.FilterPredicate,java.util.List,org.apache.parquet.column.page.DictionaryPageReadStore)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilterTest/testGtFloat()#java/lang/Math/max(float,float)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilterTest/testGtFloat()#org/apache/parquet/filter2/predicate/FilterApi/floatColumn(java.lang.String)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilterTest/testGtMissingColumn()#org/apache/parquet/filter2/predicate/FilterApi/gt(C,T)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilterTest/testGtMissingColumn()#org/apache/parquet/filter2/dictionarylevel/DictionaryFilter/canDrop(org.apache.parquet.filter2.predicate.FilterPredicate,java.util.List,org.apache.parquet.column.page.DictionaryPageReadStore)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilterTest/testGtMissingColumn()#org/apache/parquet/io/api/Binary/fromString(java.lang.String)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilterTest/testGtMissingColumn()#org/apache/parquet/filter2/predicate/FilterApi/binaryColumn(java.lang.String)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilterTest/testOr()#org/apache/parquet/filter2/predicate/FilterApi/eq(C,T)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilterTest/testOr()#org/apache/parquet/filter2/dictionarylevel/DictionaryFilter/canDrop(org.apache.parquet.filter2.predicate.FilterPredicate,java.util.List,org.apache.parquet.column.page.DictionaryPageReadStore)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilterTest/testOr()#org/apache/parquet/filter2/predicate/FilterApi/or(org.apache.parquet.filter2.predicate.FilterPredicate,org.apache.parquet.filter2.predicate.FilterPredicate)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilterTest/testOr()#org/apache/parquet/io/api/Binary/fromString(java.lang.String)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilterTest/testOr()#org/apache/parquet/filter2/predicate/FilterApi/binaryColumn(java.lang.String)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilterTest/prepareFile()#org/apache/parquet/hadoop/example/ExampleParquetWriter/builder(org.apache.parquet.hadoop.Path)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilterTest/prepareFile()#org/apache/parquet/example/data/simple/SimpleGroupFactory/SimpleGroupFactory(org.apache.parquet.schema.MessageType)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilterTest/prepareFile()#org/apache/parquet/hadoop/example/GroupWriteSupport/setSchema(org.apache.parquet.schema.MessageType,org.apache.parquet.hadoop.Configuration)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilterTest/prepareFile()#org/apache/parquet/filter2/dictionarylevel/DictionaryFilterTest/cleanup()
org/apache/parquet/filter2/dictionarylevel/DictionaryFilterTest/prepareFile()#org/apache/parquet/filter2/dictionarylevel/DictionaryFilterTest/writeData(org.apache.parquet.example.data.simple.SimpleGroupFactory,org.apache.parquet.hadoop.ParquetWriter)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilterTest/testDictionaryEncodedColumns()#org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/getPath()
org/apache/parquet/filter2/dictionarylevel/DictionaryFilterTest/testDictionaryEncodedColumns()#org/apache/parquet/hadoop/metadata/ColumnPath/toDotString()
org/apache/parquet/filter2/dictionarylevel/DictionaryFilterTest/testDictionaryEncodedColumns()#java/util/Arrays/asList(T[])
org/apache/parquet/filter2/dictionarylevel/DictionaryFilterTest/testDictionaryEncodedColumns()#java/util/Set/contains(java.lang.Object)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilterTest/testDictionaryEncodedColumns()#org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/getEncodings()
org/apache/parquet/filter2/dictionarylevel/DictionaryFilterTest/testDictionaryEncodedColumns()#java/lang/String/startsWith(java.lang.String)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilterTest/testDictionaryEncodedColumns()#java/util/HashSet/HashSet(java.util.Collection)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilterTest/testAnd()#org/apache/parquet/filter2/predicate/FilterApi/eq(C,T)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilterTest/testAnd()#org/apache/parquet/filter2/dictionarylevel/DictionaryFilter/canDrop(org.apache.parquet.filter2.predicate.FilterPredicate,java.util.List,org.apache.parquet.column.page.DictionaryPageReadStore)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilterTest/testAnd()#org/apache/parquet/io/api/Binary/fromString(java.lang.String)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilterTest/testAnd()#org/apache/parquet/filter2/predicate/FilterApi/and(org.apache.parquet.filter2.predicate.FilterPredicate,org.apache.parquet.filter2.predicate.FilterPredicate)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilterTest/testAnd()#org/apache/parquet/filter2/predicate/FilterApi/binaryColumn(java.lang.String)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilterTest/testGtEqDouble()#org/apache/parquet/filter2/dictionarylevel/DictionaryFilter/canDrop(org.apache.parquet.filter2.predicate.FilterPredicate,java.util.List,org.apache.parquet.column.page.DictionaryPageReadStore)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilterTest/testGtEqDouble()#java/lang/Math/max(double,double)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilterTest/testGtEqDouble()#org/apache/parquet/filter2/predicate/FilterApi/gtEq(C,T)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilterTest/testGtEqDouble()#org/apache/parquet/filter2/predicate/FilterApi/doubleColumn(java.lang.String)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilterTest/testGtEqDouble()#org/apache/parquet/filter2/dictionarylevel/DictionaryFilterTest/toDouble(int)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilterTest/writeData(org.apache.parquet.example.data.simple.SimpleGroupFactory,org.apache.parquet.hadoop.ParquetWriter)#org/apache/parquet/filter2/dictionarylevel/DictionaryFilterTest/toFloat(int)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilterTest/writeData(org.apache.parquet.example.data.simple.SimpleGroupFactory,org.apache.parquet.hadoop.ParquetWriter)#org/apache/parquet/example/data/Group/append(java.lang.String,java.lang.String)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilterTest/writeData(org.apache.parquet.example.data.simple.SimpleGroupFactory,org.apache.parquet.hadoop.ParquetWriter)#org/apache/parquet/filter2/dictionarylevel/DictionaryFilterTest/toDouble(int)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilterTest/writeData(org.apache.parquet.example.data.simple.SimpleGroupFactory,org.apache.parquet.hadoop.ParquetWriter)#org/apache/parquet/example/data/Group/append(java.lang.String,int)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilterTest/writeData(org.apache.parquet.example.data.simple.SimpleGroupFactory,org.apache.parquet.hadoop.ParquetWriter)#java/lang/String/length()
org/apache/parquet/filter2/dictionarylevel/DictionaryFilterTest/writeData(org.apache.parquet.example.data.simple.SimpleGroupFactory,org.apache.parquet.hadoop.ParquetWriter)#java/util/UUID/randomUUID()
org/apache/parquet/filter2/dictionarylevel/DictionaryFilterTest/writeData(org.apache.parquet.example.data.simple.SimpleGroupFactory,org.apache.parquet.hadoop.ParquetWriter)#org/apache/parquet/example/data/Group/append(java.lang.String,long)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilterTest/writeData(org.apache.parquet.example.data.simple.SimpleGroupFactory,org.apache.parquet.hadoop.ParquetWriter)#org/apache/parquet/hadoop/ParquetWriter/write(T)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilterTest/writeData(org.apache.parquet.example.data.simple.SimpleGroupFactory,org.apache.parquet.hadoop.ParquetWriter)#org/apache/parquet/example/data/Group/append(java.lang.String,double)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilterTest/writeData(org.apache.parquet.example.data.simple.SimpleGroupFactory,org.apache.parquet.hadoop.ParquetWriter)#java/util/UUID/toString()
org/apache/parquet/filter2/dictionarylevel/DictionaryFilterTest/writeData(org.apache.parquet.example.data.simple.SimpleGroupFactory,org.apache.parquet.hadoop.ParquetWriter)#org/apache/parquet/example/data/simple/SimpleGroupFactory/newGroup()
org/apache/parquet/filter2/dictionarylevel/DictionaryFilterTest/writeData(org.apache.parquet.example.data.simple.SimpleGroupFactory,org.apache.parquet.hadoop.ParquetWriter)#org/apache/parquet/example/data/Group/append(java.lang.String,float)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilterTest/writeData(org.apache.parquet.example.data.simple.SimpleGroupFactory,org.apache.parquet.hadoop.ParquetWriter)#java/lang/String/substring(int,int)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilterTest/writeData(org.apache.parquet.example.data.simple.SimpleGroupFactory,org.apache.parquet.hadoop.ParquetWriter)#org/apache/parquet/hadoop/ParquetWriter/close()
org/apache/parquet/avro/TestReflectInputOutputFormat/Service/equals(java.lang.Object)#java/lang/String/equals(java.lang.Object)
org/apache/parquet/avro/TestReflectInputOutputFormat/Service/equals(java.lang.Object)#java/lang/Object/getClass()
org/apache/parquet/avro/TestReflectInputOutputFormat/Service/hashCode()#java/lang/String/hashCode()
org/apache/parquet/filter2/recordlevel/FilteringGroupConverter/getColumnIO(java.util.List)#java/util/Map/get(java.lang.Object)
org/apache/parquet/filter2/recordlevel/FilteringGroupConverter/getColumnIO(java.util.List)#org/apache/parquet/Preconditions/checkArgument(boolean,java.lang.String)
org/apache/parquet/filter2/recordlevel/FilteringGroupConverter/getConverter(int)#org/apache/parquet/io/api/Converter/asPrimitiveConverter()
org/apache/parquet/filter2/recordlevel/FilteringGroupConverter/getConverter(int)#java/util/ArrayList/ArrayList(int)
org/apache/parquet/filter2/recordlevel/FilteringGroupConverter/getConverter(int)#org/apache/parquet/filter2/recordlevel/FilteringGroupConverter/getColumnIO(java.util.List)
org/apache/parquet/filter2/recordlevel/FilteringGroupConverter/getConverter(int)#org/apache/parquet/io/api/Converter/asGroupConverter()
org/apache/parquet/filter2/recordlevel/FilteringGroupConverter/getConverter(int)#org/apache/parquet/filter2/recordlevel/FilteringGroupConverter/getValueInspectors(org.apache.parquet.hadoop.metadata.ColumnPath)
org/apache/parquet/filter2/recordlevel/FilteringGroupConverter/getConverter(int)#java/util/List/size()
org/apache/parquet/filter2/recordlevel/FilteringGroupConverter/getConverter(int)#java/util/List/addAll(java.util.Collection)
org/apache/parquet/filter2/recordlevel/FilteringGroupConverter/getConverter(int)#org/apache/parquet/io/api/GroupConverter/getConverter(int)
org/apache/parquet/filter2/recordlevel/FilteringGroupConverter/getConverter(int)#org/apache/parquet/filter2/recordlevel/FilteringGroupConverter/FilteringGroupConverter(org.apache.parquet.io.api.GroupConverter,java.util.List,java.util.Map,java.util.Map)
org/apache/parquet/filter2/recordlevel/FilteringGroupConverter/getConverter(int)#org/apache/parquet/Preconditions/checkNotNull(T,java.lang.String)
org/apache/parquet/filter2/recordlevel/FilteringGroupConverter/getConverter(int)#java/util/List/add(E)
org/apache/parquet/filter2/recordlevel/FilteringGroupConverter/getConverter(int)#org/apache/parquet/io/api/Converter/isPrimitive()
org/apache/parquet/filter2/recordlevel/FilteringGroupConverter/getConverter(int)#org/apache/parquet/hadoop/metadata/ColumnPath/get(java.lang.String[])
org/apache/parquet/filter2/recordlevel/FilteringGroupConverter/getConverter(int)#org/apache/parquet/io/PrimitiveColumnIO/getColumnDescriptor()
org/apache/parquet/filter2/recordlevel/FilteringGroupConverter/getConverter(int)#org/apache/parquet/filter2/recordlevel/FilteringPrimitiveConverter/FilteringPrimitiveConverter(org.apache.parquet.io.api.PrimitiveConverter,org.apache.parquet.filter2.recordlevel.IncrementallyUpdatedFilterPredicate.ValueInspector[])
org/apache/parquet/filter2/recordlevel/FilteringGroupConverter/getConverter(int)#org/apache/parquet/column/ColumnDescriptor/getPath()
org/apache/parquet/filter2/recordlevel/FilteringGroupConverter/getValueInspectors(org.apache.parquet.hadoop.metadata.ColumnPath)#java/util/List/toArray(T[])
org/apache/parquet/filter2/recordlevel/FilteringGroupConverter/getValueInspectors(org.apache.parquet.hadoop.metadata.ColumnPath)#java/util/Map/get(java.lang.Object)
org/apache/parquet/filter2/recordlevel/FilteringGroupConverter/getValueInspectors(org.apache.parquet.hadoop.metadata.ColumnPath)#java/util/List/size()
org/apache/parquet/filter2/recordlevel/FilteringGroupConverter/end()#org/apache/parquet/io/api/GroupConverter/end()
org/apache/parquet/filter2/recordlevel/FilteringGroupConverter/start()#org/apache/parquet/io/api/GroupConverter/start()
org/apache/parquet/cascading/TupleWriteSupport/writePrimitive(org.apache.parquet.cascading.TupleEntry,org.apache.parquet.schema.PrimitiveType)#org/apache/parquet/io/api/Binary/fromString(java.lang.String)
org/apache/parquet/cascading/TupleWriteSupport/writePrimitive(org.apache.parquet.cascading.TupleEntry,org.apache.parquet.schema.PrimitiveType)#org/apache/parquet/io/api/RecordConsumer/addBinary(org.apache.parquet.io.api.Binary)
org/apache/parquet/cascading/TupleWriteSupport/writePrimitive(org.apache.parquet.cascading.TupleEntry,org.apache.parquet.schema.PrimitiveType)#java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)
org/apache/parquet/cascading/TupleWriteSupport/writePrimitive(org.apache.parquet.cascading.TupleEntry,org.apache.parquet.schema.PrimitiveType)#org/apache/parquet/io/api/RecordConsumer/addFloat(float)
org/apache/parquet/cascading/TupleWriteSupport/writePrimitive(org.apache.parquet.cascading.TupleEntry,org.apache.parquet.schema.PrimitiveType)#org/apache/parquet/schema/PrimitiveType/getPrimitiveTypeName()
org/apache/parquet/cascading/TupleWriteSupport/writePrimitive(org.apache.parquet.cascading.TupleEntry,org.apache.parquet.schema.PrimitiveType)#org/apache/parquet/io/api/RecordConsumer/addLong(long)
org/apache/parquet/cascading/TupleWriteSupport/writePrimitive(org.apache.parquet.cascading.TupleEntry,org.apache.parquet.schema.PrimitiveType)#org/apache/parquet/io/api/RecordConsumer/addDouble(double)
org/apache/parquet/cascading/TupleWriteSupport/writePrimitive(org.apache.parquet.cascading.TupleEntry,org.apache.parquet.schema.PrimitiveType)#org/apache/parquet/io/api/RecordConsumer/addBoolean(boolean)
org/apache/parquet/cascading/TupleWriteSupport/writePrimitive(org.apache.parquet.cascading.TupleEntry,org.apache.parquet.schema.PrimitiveType)#org/apache/parquet/schema/Type/getName()
org/apache/parquet/cascading/TupleWriteSupport/writePrimitive(org.apache.parquet.cascading.TupleEntry,org.apache.parquet.schema.PrimitiveType)#org/apache/parquet/io/api/RecordConsumer/addInteger(int)
org/apache/parquet/cascading/TupleWriteSupport/init(org.apache.parquet.hadoop.Configuration)#org/apache/parquet/hadoop/api/WriteSupport/WriteContext/WriteContext(org.apache.parquet.schema.MessageType,java.util.Map)
org/apache/parquet/cascading/TupleWriteSupport/init(org.apache.parquet.hadoop.Configuration)#org/apache/parquet/schema/MessageTypeParser/parseMessageType(java.lang.String)
org/apache/parquet/cascading/TupleWriteSupport/init(org.apache.parquet.hadoop.Configuration)#java/util/HashMap/HashMap()
org/apache/parquet/cascading/TupleWriteSupport/write(org.apache.parquet.cascading.TupleEntry)#org/apache/parquet/io/api/RecordConsumer/startField(java.lang.String,int)
org/apache/parquet/cascading/TupleWriteSupport/write(org.apache.parquet.cascading.TupleEntry)#org/apache/parquet/cascading/TupleWriteSupport/writePrimitive(org.apache.parquet.cascading.TupleEntry,org.apache.parquet.schema.PrimitiveType)
org/apache/parquet/cascading/TupleWriteSupport/write(org.apache.parquet.cascading.TupleEntry)#org/apache/parquet/schema/Type/asPrimitiveType()
org/apache/parquet/cascading/TupleWriteSupport/write(org.apache.parquet.cascading.TupleEntry)#java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)
org/apache/parquet/cascading/TupleWriteSupport/write(org.apache.parquet.cascading.TupleEntry)#org/apache/parquet/io/api/RecordConsumer/startMessage()
org/apache/parquet/cascading/TupleWriteSupport/write(org.apache.parquet.cascading.TupleEntry)#org/apache/parquet/schema/Type/isPrimitive()
org/apache/parquet/cascading/TupleWriteSupport/write(org.apache.parquet.cascading.TupleEntry)#org/apache/parquet/schema/Type/getName()
org/apache/parquet/cascading/TupleWriteSupport/write(org.apache.parquet.cascading.TupleEntry)#org/apache/parquet/io/api/RecordConsumer/endMessage()
org/apache/parquet/cascading/TupleWriteSupport/write(org.apache.parquet.cascading.TupleEntry)#java/util/List/size()
org/apache/parquet/cascading/TupleWriteSupport/write(org.apache.parquet.cascading.TupleEntry)#org/apache/parquet/io/api/RecordConsumer/endField(java.lang.String,int)
org/apache/parquet/cascading/TupleWriteSupport/write(org.apache.parquet.cascading.TupleEntry)#org/apache/parquet/schema/GroupType/getFields()
org/apache/parquet/cascading/TupleWriteSupport/write(org.apache.parquet.cascading.TupleEntry)#java/util/List/get(int)
org/apache/parquet/DirectWriterTest/DirectWriteSupport/write(java.lang.Void)#org/apache/parquet/DirectWriterTest/DirectWriter/write(org.apache.parquet.io.api.RecordConsumer)
org/apache/parquet/DirectWriterTest/DirectWriteSupport/init(org.apache.parquet.hadoop.Configuration)#org/apache/parquet/hadoop/api/WriteSupport/WriteContext/WriteContext(org.apache.parquet.schema.MessageType,java.util.Map)
org/apache/parquet/thrift/projection/amend/DefaultEventsVisitor/StringProtocol/readBinary()#java/nio/ByteBuffer/wrap(byte[])
org/apache/parquet/thrift/projection/amend/DefaultEventsVisitor/StringProtocol/readBinary()#java/lang/String/getBytes()
org/apache/parquet/proto/ProtoRecordConverter/SkipParentValueContainer/add(java.lang.Object)#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/apache/parquet/hadoop/DeprecatedInputFormatTest/testReadWriteWithCountDeprecated()#org/apache/parquet/hadoop/DeprecatedInputFormatTest/runMapReduceJob(org.apache.parquet.hadoop.metadata.CompressionCodecName)
org/apache/parquet/hadoop/DeprecatedInputFormatTest/runMapReduceJob(org.apache.parquet.hadoop.metadata.CompressionCodecName)#java/lang/Class/getCanonicalName()
org/apache/parquet/hadoop/DeprecatedInputFormatTest/runMapReduceJob(org.apache.parquet.hadoop.metadata.CompressionCodecName)#org/apache/parquet/schema/MessageTypeParser/parseMessageType(java.lang.String)
org/apache/parquet/hadoop/DeprecatedInputFormatTest/runMapReduceJob(org.apache.parquet.hadoop.metadata.CompressionCodecName)#org/apache/parquet/hadoop/ParquetOutputFormat/setCompression(org.apache.parquet.hadoop.Job,org.apache.parquet.hadoop.metadata.CompressionCodecName)
org/apache/parquet/hadoop/DeprecatedInputFormatTest/runMapReduceJob(org.apache.parquet.hadoop.metadata.CompressionCodecName)#org/apache/parquet/hadoop/example/ExampleOutputFormat/setSchema(org.apache.parquet.hadoop.Job,org.apache.parquet.schema.MessageType)
org/apache/parquet/hadoop/DeprecatedInputFormatTest/runMapReduceJob(org.apache.parquet.hadoop.metadata.CompressionCodecName)#org/apache/parquet/hadoop/DeprecatedInputFormatTest/waitForJob(org.apache.parquet.hadoop.Job)
org/apache/parquet/hadoop/DeprecatedInputFormatTest/runMapReduceJob(org.apache.parquet.hadoop.metadata.CompressionCodecName)#java/lang/Object/Object()
org/apache/parquet/hadoop/DeprecatedInputFormatTest/waitForJob(org.apache.parquet.hadoop.Job)#java/lang/Thread/sleep(long)
org/apache/parquet/hadoop/DeprecatedInputFormatTest/waitForJob(org.apache.parquet.hadoop.Job)#java/io/PrintStream/println(char[])
org/apache/parquet/hadoop/DeprecatedInputFormatTest/waitForJob(org.apache.parquet.hadoop.Job)#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/apache/parquet/hadoop/DeprecatedInputFormatTest/testReadWriteWithoutCounter()#org/apache/parquet/hadoop/DeprecatedInputFormatTest/runMapReduceJob(org.apache.parquet.hadoop.metadata.CompressionCodecName)
org/apache/parquet/tools/read/SimpleMapRecord/toJsonObject()#org/apache/parquet/tools/read/SimpleMapRecord/keyToString(java.lang.Object)
org/apache/parquet/tools/read/SimpleMapRecord/toJsonObject()#java/lang/String/equals(java.lang.Object)
org/apache/parquet/tools/read/SimpleMapRecord/toJsonObject()#org/apache/parquet/tools/read/SimpleRecord/NameValue/getValue()
org/apache/parquet/tools/read/SimpleMapRecord/toJsonObject()#java/util/Map/put(K,V)
org/apache/parquet/tools/read/SimpleMapRecord/toJsonObject()#org/apache/parquet/tools/read/SimpleRecord/NameValue/getName()
org/apache/parquet/tools/read/SimpleMapRecord/toJsonObject()#org/apache/parquet/tools/read/SimpleRecord/toJsonValue(java.lang.Object)
org/apache/parquet/tools/read/SimpleMapRecord/keyToString(java.lang.Object)#java/lang/Class/isArray()
org/apache/parquet/tools/read/SimpleMapRecord/keyToString(java.lang.Object)#java/lang/Class/getComponentType()
org/apache/parquet/tools/read/SimpleMapRecord/keyToString(java.lang.Object)#java/util/Arrays/toString(java.lang.Object[])
org/apache/parquet/tools/read/SimpleMapRecord/keyToString(java.lang.Object)#java/util/Arrays/toString(double[])
org/apache/parquet/tools/read/SimpleMapRecord/keyToString(java.lang.Object)#java/util/Arrays/toString(int[])
org/apache/parquet/tools/read/SimpleMapRecord/keyToString(java.lang.Object)#java/lang/Object/getClass()
org/apache/parquet/tools/read/SimpleMapRecord/keyToString(java.lang.Object)#java/lang/String/valueOf(java.lang.Object)
org/apache/parquet/tools/read/SimpleMapRecord/keyToString(java.lang.Object)#java/util/Arrays/toString(char[])
org/apache/parquet/tools/read/SimpleMapRecord/keyToString(java.lang.Object)#java/util/Arrays/toString(float[])
org/apache/parquet/tools/read/SimpleMapRecord/keyToString(java.lang.Object)#java/util/Arrays/toString(short[])
org/apache/parquet/tools/read/SimpleMapRecord/keyToString(java.lang.Object)#java/util/Arrays/toString(long[])
org/apache/parquet/tools/read/SimpleMapRecord/keyToString(java.lang.Object)#java/util/Arrays/toString(boolean[])
org/apache/parquet/column/values/bitpacking/OneBitPackingWriter/write(int)#java/io/OutputStream/write(int)
org/apache/parquet/column/values/bitpacking/OneBitPackingWriter/finish()#org/apache/parquet/column/values/bitpacking/OneBitPackingWriter/write(int)
org/apache/parquet/thrift/struct/ThriftType/ByteType/accept(org.apache.parquet.thrift.struct.ThriftType.TypeVisitor)#org/apache/parquet/thrift/struct/ThriftType/TypeVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.ByteType)
org/apache/parquet/thrift/struct/ThriftType/ByteType/accept(org.apache.parquet.thrift.struct.ThriftType.StateVisitor,S)#org/apache/parquet/thrift/struct/ThriftType/StateVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.ByteType,S)
org/apache/parquet/column/values/plain/PlainValuesReader/LongPlainValuesReader/skip()#org/apache/parquet/bytes/LittleEndianDataInputStream/skipBytes(int)
org/apache/parquet/column/values/plain/PlainValuesReader/LongPlainValuesReader/skip()#org/apache/parquet/io/ParquetDecodingException/ParquetDecodingException(java.lang.String,java.lang.Throwable)
org/apache/parquet/column/values/plain/PlainValuesReader/LongPlainValuesReader/readLong()#org/apache/parquet/bytes/LittleEndianDataInputStream/readLong()
org/apache/parquet/column/values/plain/PlainValuesReader/LongPlainValuesReader/readLong()#org/apache/parquet/io/ParquetDecodingException/ParquetDecodingException(java.lang.String,java.lang.Throwable)
org/apache/parquet/filter2/recordlevel/TestIncrementallyUpdatedFilterPredicateResetter/testReset()#org/apache/parquet/filter2/recordlevel/TestIncrementallyUpdatedFilterPredicateEvaluator/intIsNull()
org/apache/parquet/filter2/recordlevel/TestIncrementallyUpdatedFilterPredicateResetter/testReset()#org/apache/parquet/filter2/recordlevel/IncrementallyUpdatedFilterPredicateResetter/reset(org.apache.parquet.filter2.recordlevel.IncrementallyUpdatedFilterPredicate)
org/apache/parquet/filter2/recordlevel/TestIncrementallyUpdatedFilterPredicateResetter/testReset()#org/apache/parquet/filter2/recordlevel/IncrementallyUpdatedFilterPredicate/ValueInspector/updateNull()
org/apache/parquet/filter2/recordlevel/TestIncrementallyUpdatedFilterPredicateResetter/testReset()#org/apache/parquet/filter2/recordlevel/IncrementallyUpdatedFilterPredicate/And/And(org.apache.parquet.filter2.recordlevel.IncrementallyUpdatedFilterPredicate,org.apache.parquet.filter2.recordlevel.IncrementallyUpdatedFilterPredicate)
org/apache/parquet/filter2/recordlevel/TestIncrementallyUpdatedFilterPredicateResetter/testReset()#org/apache/parquet/filter2/recordlevel/IncrementallyUpdatedFilterPredicate/ValueInspector/update(int)
org/apache/parquet/filter2/recordlevel/TestIncrementallyUpdatedFilterPredicateResetter/testReset()#org/apache/parquet/filter2/recordlevel/IncrementallyUpdatedFilterPredicate/ValueInspector/isKnown()
org/apache/parquet/filter2/recordlevel/TestIncrementallyUpdatedFilterPredicateResetter/testReset()#org/apache/parquet/filter2/recordlevel/IncrementallyUpdatedFilterPredicate/ValueInspector/update(double)
org/apache/parquet/filter2/recordlevel/TestIncrementallyUpdatedFilterPredicateResetter/testReset()#org/apache/parquet/filter2/recordlevel/TestIncrementallyUpdatedFilterPredicateEvaluator/doubleMoreThan10()
org/apache/parquet/filter2/recordlevel/TestIncrementallyUpdatedFilterPredicateResetter/testReset()#org/apache/parquet/filter2/recordlevel/TestIncrementallyUpdatedFilterPredicateEvaluator/intIsEven()
org/apache/parquet/filter2/recordlevel/TestIncrementallyUpdatedFilterPredicateResetter/testReset()#org/apache/parquet/filter2/recordlevel/IncrementallyUpdatedFilterPredicate/Or/Or(org.apache.parquet.filter2.recordlevel.IncrementallyUpdatedFilterPredicate,org.apache.parquet.filter2.recordlevel.IncrementallyUpdatedFilterPredicate)
org/apache/parquet/thrift/ParquetProtocol/writeBool(boolean)#org/apache/parquet/thrift/ParquetProtocol/exception()
org/apache/parquet/thrift/ParquetProtocol/exception()#java/lang/Throwable/getStackTrace()
org/apache/parquet/thrift/ParquetProtocol/exception()#org/apache/parquet/thrift/ParquetProtocol/getClassInfo()
org/apache/parquet/thrift/ParquetProtocol/exception()#java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)
org/apache/parquet/thrift/ParquetProtocol/exception()#java/lang/StackTraceElement/getMethodName()
org/apache/parquet/thrift/ParquetProtocol/exception()#java/lang/Exception/Exception()
org/apache/parquet/thrift/ParquetProtocol/readI32()#org/apache/parquet/thrift/ParquetProtocol/exception()
org/apache/parquet/thrift/ParquetProtocol/writeI64(long)#org/apache/parquet/thrift/ParquetProtocol/exception()
org/apache/parquet/thrift/ParquetProtocol/readSetEnd()#org/apache/parquet/thrift/ParquetProtocol/exception()
org/apache/parquet/thrift/ParquetProtocol/writeFieldEnd()#org/apache/parquet/thrift/ParquetProtocol/exception()
org/apache/parquet/thrift/ParquetProtocol/readMapEnd()#org/apache/parquet/thrift/ParquetProtocol/exception()
org/apache/parquet/thrift/ParquetProtocol/readMessageBegin()#org/apache/parquet/thrift/ParquetProtocol/exception()
org/apache/parquet/thrift/ParquetProtocol/readListEnd()#org/apache/parquet/thrift/ParquetProtocol/exception()
org/apache/parquet/thrift/ParquetProtocol/writeMessageBegin(org.apache.parquet.thrift.TMessage)#org/apache/parquet/thrift/ParquetProtocol/exception()
org/apache/parquet/thrift/ParquetProtocol/writeListEnd()#org/apache/parquet/thrift/ParquetProtocol/exception()
org/apache/parquet/thrift/ParquetProtocol/readByte()#org/apache/parquet/thrift/ParquetProtocol/exception()
org/apache/parquet/thrift/ParquetProtocol/readBool()#org/apache/parquet/thrift/ParquetProtocol/exception()
org/apache/parquet/thrift/ParquetProtocol/readStructEnd()#org/apache/parquet/thrift/ParquetProtocol/exception()
org/apache/parquet/thrift/ParquetProtocol/writeBinary(java.nio.ByteBuffer)#org/apache/parquet/thrift/ParquetProtocol/exception()
org/apache/parquet/thrift/ParquetProtocol/readI64()#org/apache/parquet/thrift/ParquetProtocol/exception()
org/apache/parquet/thrift/ParquetProtocol/writeFieldBegin(org.apache.parquet.thrift.projection.amend.TField)#org/apache/parquet/thrift/ParquetProtocol/exception()
org/apache/parquet/thrift/ParquetProtocol/readMapBegin()#org/apache/parquet/thrift/ParquetProtocol/exception()
org/apache/parquet/thrift/ParquetProtocol/writeMessageEnd()#org/apache/parquet/thrift/ParquetProtocol/exception()
org/apache/parquet/thrift/ParquetProtocol/writeSetBegin(org.apache.parquet.thrift.TSet)#org/apache/parquet/thrift/ParquetProtocol/exception()
org/apache/parquet/thrift/ParquetProtocol/readFieldBegin()#org/apache/parquet/thrift/ParquetProtocol/exception()
org/apache/parquet/thrift/ParquetProtocol/readDouble()#org/apache/parquet/thrift/ParquetProtocol/exception()
org/apache/parquet/thrift/ParquetProtocol/readString()#org/apache/parquet/thrift/ParquetProtocol/exception()
org/apache/parquet/thrift/ParquetProtocol/writeStructEnd()#org/apache/parquet/thrift/ParquetProtocol/exception()
org/apache/parquet/thrift/ParquetProtocol/readListBegin()#org/apache/parquet/thrift/ParquetProtocol/exception()
org/apache/parquet/thrift/ParquetProtocol/writeListBegin(org.apache.parquet.thrift.TList)#org/apache/parquet/thrift/ParquetProtocol/exception()
org/apache/parquet/thrift/ParquetProtocol/writeStructBegin(org.apache.parquet.thrift.TStruct)#org/apache/parquet/thrift/ParquetProtocol/exception()
org/apache/parquet/thrift/ParquetProtocol/readMessageEnd()#org/apache/parquet/thrift/ParquetProtocol/exception()
org/apache/parquet/thrift/ParquetProtocol/writeSetEnd()#org/apache/parquet/thrift/ParquetProtocol/exception()
org/apache/parquet/thrift/ParquetProtocol/readI16()#org/apache/parquet/thrift/ParquetProtocol/exception()
org/apache/parquet/thrift/ParquetProtocol/writeI32(int)#org/apache/parquet/thrift/ParquetProtocol/exception()
org/apache/parquet/thrift/ParquetProtocol/writeMapEnd()#org/apache/parquet/thrift/ParquetProtocol/exception()
org/apache/parquet/thrift/ParquetProtocol/getClassInfo()#java/lang/Class/getName()
org/apache/parquet/thrift/ParquetProtocol/getClassInfo()#java/lang/Object/getClass()
org/apache/parquet/thrift/ParquetProtocol/getClassInfo()#java/lang/Class/getEnclosingMethod()
org/apache/parquet/thrift/ParquetProtocol/getClassInfo()#java/lang/reflect/Method/toGenericString()
org/apache/parquet/thrift/ParquetProtocol/readStructBegin()#org/apache/parquet/thrift/ParquetProtocol/exception()
org/apache/parquet/thrift/ParquetProtocol/writeByte(byte)#org/apache/parquet/thrift/ParquetProtocol/exception()
org/apache/parquet/thrift/ParquetProtocol/writeMapBegin(org.apache.parquet.thrift.TMap)#org/apache/parquet/thrift/ParquetProtocol/exception()
org/apache/parquet/thrift/ParquetProtocol/writeDouble(double)#org/apache/parquet/thrift/ParquetProtocol/exception()
org/apache/parquet/thrift/ParquetProtocol/readFieldEnd()#org/apache/parquet/thrift/ParquetProtocol/exception()
org/apache/parquet/thrift/ParquetProtocol/readBinary()#org/apache/parquet/thrift/ParquetProtocol/exception()
org/apache/parquet/thrift/ParquetProtocol/writeI16(short)#org/apache/parquet/thrift/ParquetProtocol/exception()
org/apache/parquet/thrift/ParquetProtocol/readSetBegin()#org/apache/parquet/thrift/ParquetProtocol/exception()
org/apache/parquet/thrift/ParquetProtocol/writeFieldStop()#org/apache/parquet/thrift/ParquetProtocol/exception()
org/apache/parquet/thrift/ParquetProtocol/writeString(java.lang.String)#org/apache/parquet/thrift/ParquetProtocol/exception()
org/apache/parquet/column/values/RandomStr/alphanumeric()#java/lang/StringBuffer/StringBuffer(int)
org/apache/parquet/column/values/RandomStr/alphanumeric()#java/lang/StringBuffer/append(char)
org/apache/parquet/column/values/RandomStr/alphanumeric()#java/lang/StringBuffer/toString()
org/apache/parquet/column/values/RandomStr/alphanumeric()#java/lang/String/toCharArray()
org/apache/parquet/column/values/RandomStr/get(int)#java/lang/StringBuffer/length()
org/apache/parquet/column/values/RandomStr/get(int)#java/lang/StringBuffer/toString()
org/apache/parquet/column/values/RandomStr/get(int)#java/lang/StringBuffer/append(char)
org/apache/parquet/column/values/RandomStr/get(int)#java/util/Random/nextInt()
org/apache/parquet/column/values/RandomStr/get(int)#java/lang/Math/abs(int)
org/apache/parquet/column/values/RandomStr/get(int)#java/lang/StringBuffer/StringBuffer()
org/apache/hadoop/hive/ql/io/parquet/read/ParquetRecordReaderWrapper/getPos()#org/apache/hadoop/hive/ql/io/parquet/read/ParquetRecordReaderWrapper/getProgress()
org/apache/hadoop/hive/ql/io/parquet/read/ParquetRecordReaderWrapper/getSplit(org.apache.parquet.hadoop.InputSplit,org.apache.parquet.hadoop.JobConf)#org/apache/parquet/hive/HiveBinding/pushProjectionsAndFilters(org.apache.parquet.hadoop.JobConf,org.apache.parquet.hadoop.Path)
org/apache/hadoop/hive/ql/io/parquet/read/ParquetRecordReaderWrapper/getSplit(org.apache.parquet.hadoop.InputSplit,org.apache.parquet.hadoop.JobConf)#org/apache/parquet/hadoop/api/ReadSupport/ReadContext/getReadSupportMetadata()
org/apache/hadoop/hive/ql/io/parquet/read/ParquetRecordReaderWrapper/getSplit(org.apache.parquet.hadoop.InputSplit,org.apache.parquet.hadoop.JobConf)#org/apache/parquet/hadoop/metadata/ParquetMetadata/getFileMetaData()
org/apache/hadoop/hive/ql/io/parquet/read/ParquetRecordReaderWrapper/getSplit(org.apache.parquet.hadoop.InputSplit,org.apache.parquet.hadoop.JobConf)#java/util/Map/get(java.lang.Object)
org/apache/hadoop/hive/ql/io/parquet/read/ParquetRecordReaderWrapper/getSplit(org.apache.parquet.hadoop.InputSplit,org.apache.parquet.hadoop.JobConf)#org/apache/parquet/schema/MessageTypeParser/parseMessageType(java.lang.String)
org/apache/hadoop/hive/ql/io/parquet/read/ParquetRecordReaderWrapper/getSplit(org.apache.parquet.hadoop.InputSplit,org.apache.parquet.hadoop.JobConf)#org/apache/parquet/hadoop/ParquetInputSplit/ParquetInputSplit(org.apache.parquet.hadoop.Path,long,long,long,java.lang.String[],long[])
org/apache/hadoop/hive/ql/io/parquet/read/ParquetRecordReaderWrapper/getSplit(org.apache.parquet.hadoop.InputSplit,org.apache.parquet.hadoop.JobConf)#org/apache/parquet/hadoop/ParquetFileReader/readFooter(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path,org.apache.parquet.format.converter.ParquetMetadataConverter.MetadataFilter)
org/apache/hadoop/hive/ql/io/parquet/read/ParquetRecordReaderWrapper/getSplit(org.apache.parquet.hadoop.InputSplit,org.apache.parquet.hadoop.JobConf)#org/apache/hadoop/hive/ql/io/parquet/read/DataWritableReadSupport/DataWritableReadSupport()
org/apache/hadoop/hive/ql/io/parquet/read/ParquetRecordReaderWrapper/getSplit(org.apache.parquet.hadoop.InputSplit,org.apache.parquet.hadoop.JobConf)#org/apache/parquet/schema/GroupType/getFieldCount()
org/apache/hadoop/hive/ql/io/parquet/read/ParquetRecordReaderWrapper/getSplit(org.apache.parquet.hadoop.InputSplit,org.apache.parquet.hadoop.JobConf)#org/apache/parquet/hadoop/metadata/FileMetaData/getSchema()
org/apache/hadoop/hive/ql/io/parquet/read/ParquetRecordReaderWrapper/getSplit(org.apache.parquet.hadoop.InputSplit,org.apache.parquet.hadoop.JobConf)#org/apache/parquet/hadoop/metadata/FileMetaData/getKeyValueMetaData()
org/apache/hadoop/hive/ql/io/parquet/read/ParquetRecordReaderWrapper/getSplit(org.apache.parquet.hadoop.InputSplit,org.apache.parquet.hadoop.JobConf)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/hadoop/hive/ql/io/parquet/read/ParquetRecordReaderWrapper/getSplit(org.apache.parquet.hadoop.InputSplit,org.apache.parquet.hadoop.JobConf)#org/apache/hadoop/hive/ql/io/parquet/read/DataWritableReadSupport/init(org.apache.parquet.hadoop.Configuration,java.util.Map,org.apache.parquet.schema.MessageType)
org/apache/hadoop/hive/ql/io/parquet/read/ParquetRecordReaderWrapper/getProgress()#java/io/IOException/IOException(java.lang.Throwable)
org/apache/hadoop/hive/ql/io/parquet/read/ParquetRecordReaderWrapper/next(java.lang.Void,org.apache.hadoop.hive.ql.io.parquet.serde.ArrayWritable)#java/io/IOException/IOException(java.lang.String)
org/apache/hadoop/hive/ql/io/parquet/read/ParquetRecordReaderWrapper/next(java.lang.Void,org.apache.hadoop.hive.ql.io.parquet.serde.ArrayWritable)#java/lang/System/arraycopy(java.lang.Object,int,java.lang.Object,int,int)
org/apache/hadoop/hive/ql/io/parquet/read/ParquetRecordReaderWrapper/next(java.lang.Void,org.apache.hadoop.hive.ql.io.parquet.serde.ArrayWritable)#java/io/IOException/IOException(java.lang.Throwable)
org/apache/parquet/io/ExpectationValidatingConverter/validate(java.lang.String)#java/util/Deque/pop()
org/apache/parquet/io/ExpectationValidatingConverter/path(java.util.List,org.apache.parquet.schema.Type)#org/apache/parquet/schema/Type/getName()
org/apache/parquet/io/ExpectationValidatingConverter/path(java.util.List,org.apache.parquet.schema.Type)#java/util/List/size()
org/apache/parquet/io/ExpectationValidatingConverter/path(java.util.List,org.apache.parquet.schema.Type)#java/util/List/get(int)
org/apache/parquet/proto/ProtoMessageConverter/end()#org/apache/parquet/proto/ProtoMessageConverter/ParentValueContainer/add(java.lang.Object)
org/apache/parquet/proto/ProtoMessageConverter/newScalarConverter(org.apache.parquet.proto.ProtoMessageConverter.ParentValueContainer,Message.Builder,Descriptors.FieldDescriptor,org.apache.parquet.schema.Type)#org/apache/parquet/schema/Type/asGroupType()
org/apache/parquet/proto/ProtoMessageConverter/newScalarConverter(org.apache.parquet.proto.ProtoMessageConverter.ParentValueContainer,Message.Builder,Descriptors.FieldDescriptor,org.apache.parquet.schema.Type)#org/apache/parquet/proto/ProtoMessageConverter/ProtoBooleanConverter/ProtoBooleanConverter(org.apache.parquet.proto.ProtoMessageConverter.ParentValueContainer)
org/apache/parquet/proto/ProtoMessageConverter/newScalarConverter(org.apache.parquet.proto.ProtoMessageConverter.ParentValueContainer,Message.Builder,Descriptors.FieldDescriptor,org.apache.parquet.schema.Type)#java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)
org/apache/parquet/proto/ProtoMessageConverter/newScalarConverter(org.apache.parquet.proto.ProtoMessageConverter.ParentValueContainer,Message.Builder,Descriptors.FieldDescriptor,org.apache.parquet.schema.Type)#org/apache/parquet/proto/ProtoMessageConverter/ProtoIntConverter/ProtoIntConverter(org.apache.parquet.proto.ProtoMessageConverter.ParentValueContainer)
org/apache/parquet/proto/ProtoMessageConverter/newScalarConverter(org.apache.parquet.proto.ProtoMessageConverter.ParentValueContainer,Message.Builder,Descriptors.FieldDescriptor,org.apache.parquet.schema.Type)#org/apache/parquet/proto/ProtoMessageConverter/ProtoEnumConverter/ProtoEnumConverter(org.apache.parquet.proto.ProtoMessageConverter.ParentValueContainer,Descriptors.FieldDescriptor)
org/apache/parquet/proto/ProtoMessageConverter/newScalarConverter(org.apache.parquet.proto.ProtoMessageConverter.ParentValueContainer,Message.Builder,Descriptors.FieldDescriptor,org.apache.parquet.schema.Type)#org/apache/parquet/proto/ProtoMessageConverter/ProtoBinaryConverter/ProtoBinaryConverter(org.apache.parquet.proto.ProtoMessageConverter.ParentValueContainer)
org/apache/parquet/proto/ProtoMessageConverter/newScalarConverter(org.apache.parquet.proto.ProtoMessageConverter.ParentValueContainer,Message.Builder,Descriptors.FieldDescriptor,org.apache.parquet.schema.Type)#org/apache/parquet/proto/ProtoMessageConverter/ProtoLongConverter/ProtoLongConverter(org.apache.parquet.proto.ProtoMessageConverter.ParentValueContainer)
org/apache/parquet/proto/ProtoMessageConverter/newScalarConverter(org.apache.parquet.proto.ProtoMessageConverter.ParentValueContainer,Message.Builder,Descriptors.FieldDescriptor,org.apache.parquet.schema.Type)#java/lang/String/format(java.lang.String,java.lang.Object[])
org/apache/parquet/proto/ProtoMessageConverter/newScalarConverter(org.apache.parquet.proto.ProtoMessageConverter.ParentValueContainer,Message.Builder,Descriptors.FieldDescriptor,org.apache.parquet.schema.Type)#org/apache/parquet/proto/ProtoMessageConverter/ProtoDoubleConverter/ProtoDoubleConverter(org.apache.parquet.proto.ProtoMessageConverter.ParentValueContainer)
org/apache/parquet/proto/ProtoMessageConverter/newScalarConverter(org.apache.parquet.proto.ProtoMessageConverter.ParentValueContainer,Message.Builder,Descriptors.FieldDescriptor,org.apache.parquet.schema.Type)#org/apache/parquet/proto/ProtoMessageConverter/ProtoStringConverter/ProtoStringConverter(org.apache.parquet.proto.ProtoMessageConverter.ParentValueContainer)
org/apache/parquet/proto/ProtoMessageConverter/newScalarConverter(org.apache.parquet.proto.ProtoMessageConverter.ParentValueContainer,Message.Builder,Descriptors.FieldDescriptor,org.apache.parquet.schema.Type)#org/apache/parquet/proto/ProtoMessageConverter/ProtoFloatConverter/ProtoFloatConverter(org.apache.parquet.proto.ProtoMessageConverter.ParentValueContainer)
org/apache/parquet/proto/ProtoMessageConverter/newScalarConverter(org.apache.parquet.proto.ProtoMessageConverter.ParentValueContainer,Message.Builder,Descriptors.FieldDescriptor,org.apache.parquet.schema.Type)#org/apache/parquet/proto/ProtoMessageConverter/ProtoMessageConverter(org.apache.parquet.proto.ProtoMessageConverter.ParentValueContainer,java.lang.Class,org.apache.parquet.schema.GroupType)
org/apache/parquet/proto/ProtoMessageConverter/newMessageConverter(Message.Builder,Descriptors.FieldDescriptor,org.apache.parquet.schema.Type)#org/apache/parquet/proto/ProtoMessageConverter/newMessageConverter(Message/Builder,Descriptors/FieldDescriptor,org/apache/parquet/schema/Type)/$anonymous2/()
org/apache/parquet/proto/ProtoMessageConverter/newMessageConverter(Message.Builder,Descriptors.FieldDescriptor,org.apache.parquet.schema.Type)#org/apache/parquet/proto/ProtoMessageConverter/newMessageConverter(Message/Builder,Descriptors/FieldDescriptor,org/apache/parquet/schema/Type)/$anonymous1/()
org/apache/parquet/proto/ProtoMessageConverter/newMessageConverter(Message.Builder,Descriptors.FieldDescriptor,org.apache.parquet.schema.Type)#org/apache/parquet/proto/ProtoMessageConverter/newScalarConverter(org.apache.parquet.proto.ProtoMessageConverter.ParentValueContainer,Message.Builder,Descriptors.FieldDescriptor,org.apache.parquet.schema.Type)
org/apache/parquet/hadoop/UnmaterializableRecordCounter/incErrors(org.apache.parquet.io.api.RecordMaterializer.RecordMaterializationException)#java/lang/String/format(java.lang.String,java.lang.Object[])
org/apache/parquet/hadoop/UnmaterializableRecordCounter/incErrors(org.apache.parquet.io.api.RecordMaterializer.RecordMaterializationException)#org/apache/parquet/io/ParquetDecodingException/ParquetDecodingException(java.lang.String,java.lang.Throwable)
org/apache/parquet/column/values/dictionary/IntList/IntIterator/next()#org/apache/parquet/column/values/dictionary/IntList/IntIterator/incrementPosition()
org/apache/parquet/column/values/deltalengthbytearray/benchmark/BenchmarkDeltaLengthByteArray/benchmarkRandomStringsWithPlainValuesWriter()#org/apache/parquet/column/values/plain/BinaryPlainValuesReader/BinaryPlainValuesReader()
org/apache/parquet/column/values/deltalengthbytearray/benchmark/BenchmarkDeltaLengthByteArray/benchmarkRandomStringsWithPlainValuesWriter()#org/apache/parquet/column/values/Utils/writeData(org.apache.parquet.column.values.ValuesWriter,java.lang.String[])
org/apache/parquet/column/values/deltalengthbytearray/benchmark/BenchmarkDeltaLengthByteArray/benchmarkRandomStringsWithPlainValuesWriter()#java/io/PrintStream/println(java.lang.String)
org/apache/parquet/column/values/deltalengthbytearray/benchmark/BenchmarkDeltaLengthByteArray/benchmarkRandomStringsWithPlainValuesWriter()#org/apache/parquet/column/values/plain/PlainValuesWriter/getBytes()
org/apache/parquet/column/values/deltalengthbytearray/benchmark/BenchmarkDeltaLengthByteArray/benchmarkRandomStringsWithPlainValuesWriter()#org/apache/parquet/column/values/Utils/readData(org.apache.parquet.column.values.ValuesReader,byte[],int)
org/apache/parquet/column/values/deltalengthbytearray/benchmark/BenchmarkDeltaLengthByteArray/benchmarkRandomStringsWithPlainValuesWriter()#org/apache/parquet/bytes/DirectByteBufferAllocator/DirectByteBufferAllocator()
org/apache/parquet/column/values/deltalengthbytearray/benchmark/BenchmarkDeltaLengthByteArray/benchmarkRandomStringsWithPlainValuesWriter()#org/apache/parquet/bytes/BytesInput/toByteArray()
org/apache/parquet/column/values/deltalengthbytearray/benchmark/BenchmarkDeltaLengthByteArray/benchmarkRandomStringsWithPlainValuesWriter()#org/apache/parquet/column/values/plain/PlainValuesWriter/PlainValuesWriter(int,int,org.apache.parquet.bytes.ByteBufferAllocator)
org/apache/parquet/column/values/deltalengthbytearray/benchmark/BenchmarkDeltaLengthByteArray/benchmarkRandomStringsWithDeltaLengthByteArrayValuesWriter()#org/apache/parquet/column/values/deltalengthbytearray/DeltaLengthByteArrayValuesWriter/getBytes()
org/apache/parquet/column/values/deltalengthbytearray/benchmark/BenchmarkDeltaLengthByteArray/benchmarkRandomStringsWithDeltaLengthByteArrayValuesWriter()#org/apache/parquet/column/values/Utils/writeData(org.apache.parquet.column.values.ValuesWriter,java.lang.String[])
org/apache/parquet/column/values/deltalengthbytearray/benchmark/BenchmarkDeltaLengthByteArray/benchmarkRandomStringsWithDeltaLengthByteArrayValuesWriter()#java/io/PrintStream/println(java.lang.String)
org/apache/parquet/column/values/deltalengthbytearray/benchmark/BenchmarkDeltaLengthByteArray/benchmarkRandomStringsWithDeltaLengthByteArrayValuesWriter()#org/apache/parquet/column/values/Utils/readData(org.apache.parquet.column.values.ValuesReader,byte[],int)
org/apache/parquet/column/values/deltalengthbytearray/benchmark/BenchmarkDeltaLengthByteArray/benchmarkRandomStringsWithDeltaLengthByteArrayValuesWriter()#org/apache/parquet/bytes/BytesInput/toByteArray()
org/apache/parquet/column/values/deltalengthbytearray/benchmark/BenchmarkDeltaLengthByteArray/benchmarkRandomStringsWithDeltaLengthByteArrayValuesWriter()#org/apache/parquet/column/values/deltalengthbytearray/DeltaLengthByteArrayValuesReader/DeltaLengthByteArrayValuesReader()
org/apache/parquet/column/values/deltalengthbytearray/benchmark/BenchmarkDeltaLengthByteArray/benchmarkRandomStringsWithDeltaLengthByteArrayValuesWriter()#org/apache/parquet/column/values/deltalengthbytearray/DeltaLengthByteArrayValuesWriter/DeltaLengthByteArrayValuesWriter(int,int,org.apache.parquet.bytes.ByteBufferAllocator)
org/apache/parquet/column/values/deltalengthbytearray/benchmark/BenchmarkDeltaLengthByteArray/benchmarkRandomStringsWithDeltaLengthByteArrayValuesWriter()#org/apache/parquet/bytes/DirectByteBufferAllocator/DirectByteBufferAllocator()
org/apache/parquet/proto/ProtoParquetReader/builder(org.apache.parquet.hadoop.Path)#org/apache/parquet/hadoop/ParquetReader/builder(org.apache.parquet.hadoop.api.ReadSupport,org.apache.parquet.hadoop.Path)
org/apache/parquet/proto/ProtoParquetReader/builder(org.apache.parquet.hadoop.Path)#org/apache/parquet/proto/ProtoReadSupport/ProtoReadSupport()
org/apache/hadoop/hive/ql/io/parquet/convert/HiveGroupConverter/getConverterFromDescription(org.apache.parquet.schema.Type,int,org.apache.hadoop.hive.ql.io.parquet.convert.HiveGroupConverter)#org/apache/hadoop/hive/ql/io/parquet/convert/DataWritableGroupConverter/DataWritableGroupConverter(org.apache.parquet.schema.GroupType,org.apache.hadoop.hive.ql.io.parquet.convert.HiveGroupConverter,int)
org/apache/hadoop/hive/ql/io/parquet/convert/HiveGroupConverter/getConverterFromDescription(org.apache.parquet.schema.Type,int,org.apache.hadoop.hive.ql.io.parquet.convert.HiveGroupConverter)#org/apache/hadoop/hive/ql/io/parquet/convert/ETypeConverter/getNewConverter(java.lang.Class,int,org.apache.hadoop.hive.ql.io.parquet.convert.HiveGroupConverter)
org/apache/hadoop/hive/ql/io/parquet/convert/HiveGroupConverter/getConverterFromDescription(org.apache.parquet.schema.Type,int,org.apache.hadoop.hive.ql.io.parquet.convert.HiveGroupConverter)#org/apache/hadoop/hive/ql/io/parquet/convert/ArrayWritableGroupConverter/ArrayWritableGroupConverter(org.apache.parquet.schema.GroupType,org.apache.hadoop.hive.ql.io.parquet.convert.HiveGroupConverter,int)
org/apache/hadoop/hive/ql/io/parquet/convert/HiveGroupConverter/getConverterFromDescription(org.apache.parquet.schema.Type,int,org.apache.hadoop.hive.ql.io.parquet.convert.HiveGroupConverter)#org/apache/parquet/schema/Type/asPrimitiveType()
org/apache/hadoop/hive/ql/io/parquet/convert/HiveGroupConverter/getConverterFromDescription(org.apache.parquet.schema.Type,int,org.apache.hadoop.hive.ql.io.parquet.convert.HiveGroupConverter)#org/apache/parquet/schema/PrimitiveType/getPrimitiveTypeName()
org/apache/hadoop/hive/ql/io/parquet/convert/HiveGroupConverter/getConverterFromDescription(org.apache.parquet.schema.Type,int,org.apache.hadoop.hive.ql.io.parquet.convert.HiveGroupConverter)#org/apache/parquet/schema/Type/isPrimitive()
org/apache/hadoop/hive/ql/io/parquet/convert/HiveGroupConverter/getConverterFromDescription(org.apache.parquet.schema.Type,int,org.apache.hadoop.hive.ql.io.parquet.convert.HiveGroupConverter)#org/apache/parquet/schema/Type/asGroupType()
org/apache/hadoop/hive/ql/io/parquet/convert/HiveGroupConverter/getConverterFromDescription(org.apache.parquet.schema.Type,int,org.apache.hadoop.hive.ql.io.parquet.convert.HiveGroupConverter)#org/apache/parquet/schema/Type/getRepetition()
org/apache/parquet/filter2/compat/FilterCompat/NoOpFilter/accept(org.apache.parquet.filter2.compat.FilterCompat.Visitor)#org/apache/parquet/filter2/compat/FilterCompat/Visitor/visit(org.apache.parquet.filter2.compat.FilterCompat.NoOpFilter)
org/apache/parquet/arrow/schema/SchemaConverter/fromParquet(org.apache.parquet.schema.MessageType)#org/apache/parquet/arrow/schema/SchemaConverter/fromParquet(java.util.List)
org/apache/parquet/arrow/schema/SchemaConverter/fromParquet(org.apache.parquet.schema.MessageType)#org/apache/parquet/arrow/schema/SchemaMapping/SchemaMapping(org.apache.parquet.pig.Schema,org.apache.parquet.schema.MessageType,java.util.List)
org/apache/parquet/arrow/schema/SchemaConverter/fromParquet(org.apache.parquet.schema.MessageType)#org/apache/parquet/schema/GroupType/getFields()
org/apache/parquet/arrow/schema/SchemaConverter/fromParquet(org.apache.parquet.schema.MessageType)#org/apache/parquet/arrow/schema/SchemaConverter/fields(java.util.List)
org/apache/parquet/arrow/schema/SchemaConverter/fromParquet(org.apache.parquet.schema.MessageType)#java/lang/Object/Object()
org/apache/parquet/arrow/schema/SchemaConverter/fromParquet(org.apache.parquet.schema.Type)#org/apache/parquet/schema/Type/getName()
org/apache/parquet/arrow/schema/SchemaConverter/fromParquet(org.apache.parquet.schema.Type)#org/apache/parquet/schema/Type/getRepetition()
org/apache/parquet/arrow/schema/SchemaConverter/fromParquet(org.apache.parquet.schema.Type)#org/apache/parquet/arrow/schema/SchemaConverter/fromParquet(org.apache.parquet.schema.Type,java.lang.String,org.apache.parquet.schema.Type.Repetition)
org/apache/parquet/arrow/schema/SchemaConverter/map(java.util.List,java.util.List)#java/util/List/size()
org/apache/parquet/arrow/schema/SchemaConverter/map(java.util.List,java.util.List)#org/apache/parquet/arrow/schema/SchemaConverter/map(org.apache.parquet.arrow.schema.Field,org.apache.parquet.schema.Type)
org/apache/parquet/arrow/schema/SchemaConverter/map(java.util.List,java.util.List)#java/util/List/add(E)
org/apache/parquet/arrow/schema/SchemaConverter/map(java.util.List,java.util.List)#java/util/List/get(int)
org/apache/parquet/arrow/schema/SchemaConverter/map(java.util.List,java.util.List)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/parquet/arrow/schema/SchemaConverter/addToBuilder(java.util.List,org.apache.parquet.schema.Types.GroupBuilder)#org/apache/parquet/arrow/schema/SchemaMapping/TypeMapping/getParquetType()
org/apache/parquet/arrow/schema/SchemaConverter/addToBuilder(java.util.List,org.apache.parquet.schema.Types.GroupBuilder)#org/apache/parquet/schema/Types/BaseGroupBuilder/addField(org.apache.parquet.schema.Type)
org/apache/parquet/arrow/schema/SchemaConverter/map(org.apache.parquet.pig.Schema,org.apache.parquet.schema.MessageType)#org/apache/parquet/arrow/schema/SchemaConverter/map(java.util.List,java.util.List)
org/apache/parquet/arrow/schema/SchemaConverter/map(org.apache.parquet.pig.Schema,org.apache.parquet.schema.MessageType)#org/apache/parquet/arrow/schema/SchemaMapping/SchemaMapping(org.apache.parquet.pig.Schema,org.apache.parquet.schema.MessageType,java.util.List)
org/apache/parquet/arrow/schema/SchemaConverter/map(org.apache.parquet.pig.Schema,org.apache.parquet.schema.MessageType)#org/apache/parquet/schema/GroupType/getFields()
org/apache/parquet/arrow/schema/SchemaConverter/fromArrow(java.util.List)#org/apache/parquet/arrow/schema/SchemaConverter/fromArrow(org.apache.parquet.pig.Schema)
org/apache/parquet/arrow/schema/SchemaConverter/fromArrow(java.util.List)#java/util/List/add(E)
org/apache/parquet/arrow/schema/SchemaConverter/fields(java.util.List)#java/util/ArrayList/ArrayList(int)
org/apache/parquet/arrow/schema/SchemaConverter/fields(java.util.List)#java/util/List/size()
org/apache/parquet/arrow/schema/SchemaConverter/fields(java.util.List)#org/apache/parquet/arrow/schema/SchemaMapping/TypeMapping/getArrowField()
org/apache/parquet/arrow/schema/SchemaConverter/fromParquetGroup(org.apache.parquet.schema.GroupType,java.lang.String)#org/apache/parquet/arrow/schema/List3Levels/getElement()
org/apache/parquet/arrow/schema/SchemaConverter/fromParquetGroup(org.apache.parquet.schema.GroupType,java.lang.String)#org/apache/parquet/schema/Type/getOriginalType()
org/apache/parquet/arrow/schema/SchemaConverter/fromParquetGroup(org.apache.parquet.schema.GroupType,java.lang.String)#org/apache/parquet/schema/Type/getRepetition()
org/apache/parquet/arrow/schema/SchemaConverter/fromParquetGroup(org.apache.parquet.schema.GroupType,java.lang.String)#org/apache/parquet/arrow/schema/SchemaConverter/fromParquet(org.apache.parquet.schema.Type,java.lang.String,org.apache.parquet.schema.Type.Repetition)
org/apache/parquet/arrow/schema/SchemaConverter/fromParquetGroup(org.apache.parquet.schema.GroupType,java.lang.String)#org/apache/parquet/arrow/schema/List3Levels/List3Levels(org.apache.parquet.schema.GroupType)
org/apache/parquet/arrow/schema/SchemaConverter/fromParquetGroup(org.apache.parquet.schema.GroupType,java.lang.String)#java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)
org/apache/parquet/arrow/schema/SchemaConverter/fromParquetGroup(org.apache.parquet.schema.GroupType,java.lang.String)#org/apache/parquet/schema/GroupType/getFields()
org/apache/parquet/arrow/schema/SchemaConverter/fromParquetGroup(org.apache.parquet.schema.GroupType,java.lang.String)#java/lang/Object/Object()
org/apache/parquet/arrow/schema/SchemaConverter/fromParquetGroup(org.apache.parquet.schema.GroupType,java.lang.String)#org/apache/parquet/arrow/schema/SchemaMapping/StructTypeMapping/StructTypeMapping(org.apache.parquet.arrow.schema.Field,org.apache.parquet.schema.GroupType,java.util.List)
org/apache/parquet/arrow/schema/SchemaConverter/fromParquetGroup(org.apache.parquet.schema.GroupType,java.lang.String)#org/apache/parquet/arrow/schema/SchemaConverter/fromParquet(java.util.List)
org/apache/parquet/arrow/schema/SchemaConverter/fromParquetGroup(org.apache.parquet.schema.GroupType,java.lang.String)#org/apache/parquet/schema/Type/isRepetition(org.apache.parquet.schema.Type.Repetition)
org/apache/parquet/arrow/schema/SchemaConverter/fromParquetGroup(org.apache.parquet.schema.GroupType,java.lang.String)#org/apache/parquet/arrow/schema/SchemaMapping/TypeMapping/getArrowField()
org/apache/parquet/arrow/schema/SchemaConverter/fromParquetGroup(org.apache.parquet.schema.GroupType,java.lang.String)#java/util/Arrays/asList(T[])
org/apache/parquet/arrow/schema/SchemaConverter/fromParquetGroup(org.apache.parquet.schema.GroupType,java.lang.String)#org/apache/parquet/arrow/schema/SchemaMapping/ListTypeMapping/ListTypeMapping(org.apache.parquet.arrow.schema.Field,org.apache.parquet.arrow.schema.List3Levels,org.apache.parquet.arrow.schema.SchemaMapping.TypeMapping)
org/apache/parquet/arrow/schema/SchemaConverter/fromParquetGroup(org.apache.parquet.schema.GroupType,java.lang.String)#org/apache/parquet/arrow/schema/SchemaConverter/fields(java.util.List)
org/apache/parquet/arrow/schema/SchemaConverter/fromArrow(org.apache.parquet.pig.Schema)#org/apache/parquet/arrow/schema/SchemaConverter/fromArrow(org.apache.parquet.pig.Schema)
org/apache/parquet/arrow/schema/SchemaConverter/fromArrow(org.apache.parquet.pig.Schema)#org/apache/parquet/schema/Types/buildMessage()
org/apache/parquet/arrow/schema/SchemaConverter/fromArrow(org.apache.parquet.pig.Schema)#org/apache/parquet/schema/Types/Builder/named(java.lang.String)
org/apache/parquet/arrow/schema/SchemaConverter/fromArrow(org.apache.parquet.pig.Schema)#org/apache/parquet/arrow/schema/SchemaConverter/addToBuilder(java.util.List,org.apache.parquet.schema.Types.GroupBuilder)
org/apache/parquet/arrow/schema/SchemaConverter/fromArrow(org.apache.parquet.pig.Schema)#org/apache/parquet/arrow/schema/SchemaMapping/SchemaMapping(org.apache.parquet.pig.Schema,org.apache.parquet.schema.MessageType,java.util.List)
org/apache/parquet/arrow/schema/SchemaConverter/fromParquet(java.util.List)#java/util/ArrayList/ArrayList(int)
org/apache/parquet/arrow/schema/SchemaConverter/fromParquet(java.util.List)#org/apache/parquet/arrow/schema/SchemaConverter/fromParquet(org.apache.parquet.schema.Type)
org/apache/parquet/arrow/schema/SchemaConverter/fromParquet(java.util.List)#java/util/List/size()
org/apache/parquet/arrow/schema/SchemaConverter/fromParquet(java.util.List)#java/util/List/add(E)
org/apache/parquet/arrow/schema/SchemaConverter/fromArrow(org.apache.parquet.arrow.schema.Field)#org/apache/parquet/arrow/schema/SchemaConverter/fromArrow(org.apache.parquet.arrow.schema.Field,java.lang.String)
org/apache/parquet/arrow/schema/SchemaConverter/fromParquetPrimitive(org.apache.parquet.schema.PrimitiveType,java.lang.String)#org/apache/parquet/arrow/schema/SchemaConverter/fromParquetPrimitive(org/apache/parquet/schema/PrimitiveType,java/lang/String)/$anonymous1/()
org/apache/parquet/arrow/schema/SchemaConverter/fromParquetPrimitive(org.apache.parquet.schema.PrimitiveType,java.lang.String)#org/apache/parquet/schema/PrimitiveType/PrimitiveTypeName/convert(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeNameConverter)
org/apache/parquet/arrow/schema/SchemaConverter/fromParquetPrimitive(org.apache.parquet.schema.PrimitiveType,java.lang.String)#org/apache/parquet/schema/PrimitiveType/getPrimitiveTypeName()
org/apache/parquet/arrow/schema/SchemaConverter/fromParquet(org.apache.parquet.schema.Type,java.lang.String,org.apache.parquet.schema.Type.Repetition)#org/apache/parquet/arrow/schema/SchemaConverter/fromParquetGroup(org.apache.parquet.schema.GroupType,java.lang.String)
org/apache/parquet/arrow/schema/SchemaConverter/fromParquet(org.apache.parquet.schema.Type,java.lang.String,org.apache.parquet.schema.Type.Repetition)#org/apache/parquet/schema/Type/asGroupType()
org/apache/parquet/arrow/schema/SchemaConverter/fromParquet(org.apache.parquet.schema.Type,java.lang.String,org.apache.parquet.schema.Type.Repetition)#java/lang/Object/Object()
org/apache/parquet/arrow/schema/SchemaConverter/fromParquet(org.apache.parquet.schema.Type,java.lang.String,org.apache.parquet.schema.Type.Repetition)#org/apache/parquet/arrow/schema/SchemaMapping/TypeMapping/getArrowField()
org/apache/parquet/arrow/schema/SchemaConverter/fromParquet(org.apache.parquet.schema.Type,java.lang.String,org.apache.parquet.schema.Type.Repetition)#java/util/Arrays/asList(T[])
org/apache/parquet/arrow/schema/SchemaConverter/fromParquet(org.apache.parquet.schema.Type,java.lang.String,org.apache.parquet.schema.Type.Repetition)#org/apache/parquet/arrow/schema/SchemaConverter/fromParquetPrimitive(org.apache.parquet.schema.PrimitiveType,java.lang.String)
org/apache/parquet/arrow/schema/SchemaConverter/fromParquet(org.apache.parquet.schema.Type,java.lang.String,org.apache.parquet.schema.Type.Repetition)#org/apache/parquet/schema/Type/asPrimitiveType()
org/apache/parquet/arrow/schema/SchemaConverter/fromParquet(org.apache.parquet.schema.Type,java.lang.String,org.apache.parquet.schema.Type.Repetition)#org/apache/parquet/arrow/schema/SchemaConverter/fromParquet(org.apache.parquet.schema.Type,java.lang.String,org.apache.parquet.schema.Type.Repetition)
org/apache/parquet/arrow/schema/SchemaConverter/fromParquet(org.apache.parquet.schema.Type,java.lang.String,org.apache.parquet.schema.Type.Repetition)#org/apache/parquet/schema/Type/isPrimitive()
org/apache/parquet/arrow/schema/SchemaConverter/fromParquet(org.apache.parquet.schema.Type,java.lang.String,org.apache.parquet.schema.Type.Repetition)#org/apache/parquet/arrow/schema/SchemaMapping/RepeatedTypeMapping/RepeatedTypeMapping(org.apache.parquet.arrow.schema.Field,org.apache.parquet.schema.Type,org.apache.parquet.arrow.schema.SchemaMapping.TypeMapping)
org/apache/parquet/schema/Types/BaseMapBuilder/KeyBuilder/value(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.schema.Type.Repetition)#org/apache/parquet/schema/Types/BaseMapBuilder/setKeyType(org.apache.parquet.schema.Type)
org/apache/parquet/schema/Types/BaseMapBuilder/KeyBuilder/value(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.schema.Type.Repetition)#org/apache/parquet/schema/Types/BaseMapBuilder/ValueBuilder/ValueBuilder(M,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/schema/Types/BaseMapBuilder/KeyBuilder/value(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.schema.Type.Repetition)#org/apache/parquet/schema/Types/BasePrimitiveBuilder/build(java.lang.String)
org/apache/parquet/schema/Types/BaseMapBuilder/KeyBuilder/value(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.schema.Type.Repetition)#org/apache/parquet/schema/Types/Builder/repetition(org.apache.parquet.schema.Type.Repetition)
org/apache/parquet/schema/Types/BaseMapBuilder/KeyBuilder/groupValue(org.apache.parquet.schema.Type.Repetition)#org/apache/parquet/schema/Types/BaseMapBuilder/setKeyType(org.apache.parquet.schema.Type)
org/apache/parquet/schema/Types/BaseMapBuilder/KeyBuilder/groupValue(org.apache.parquet.schema.Type.Repetition)#org/apache/parquet/schema/Types/BaseMapBuilder/GroupValueBuilder/GroupValueBuilder(M)
org/apache/parquet/schema/Types/BaseMapBuilder/KeyBuilder/groupValue(org.apache.parquet.schema.Type.Repetition)#org/apache/parquet/schema/Types/BasePrimitiveBuilder/build(java.lang.String)
org/apache/parquet/schema/Types/BaseMapBuilder/KeyBuilder/groupValue(org.apache.parquet.schema.Type.Repetition)#org/apache/parquet/schema/Types/Builder/repetition(org.apache.parquet.schema.Type.Repetition)
org/apache/parquet/schema/Types/BaseMapBuilder/KeyBuilder/value(org.apache.parquet.schema.Type)#org/apache/parquet/schema/Types/BaseMapBuilder/setKeyType(org.apache.parquet.schema.Type)
org/apache/parquet/schema/Types/BaseMapBuilder/KeyBuilder/value(org.apache.parquet.schema.Type)#org/apache/parquet/schema/Types/BasePrimitiveBuilder/build(java.lang.String)
org/apache/parquet/schema/Types/BaseMapBuilder/KeyBuilder/value(org.apache.parquet.schema.Type)#org/apache/parquet/schema/Types/BaseMapBuilder/setValueType(org.apache.parquet.schema.Type)
org/apache/parquet/schema/Types/BaseMapBuilder/KeyBuilder/requiredGroupValue()#org/apache/parquet/schema/Types/BaseMapBuilder/KeyBuilder/groupValue(org.apache.parquet.schema.Type.Repetition)
org/apache/parquet/schema/Types/BaseMapBuilder/KeyBuilder/optionalGroupValue()#org/apache/parquet/schema/Types/BaseMapBuilder/KeyBuilder/groupValue(org.apache.parquet.schema.Type.Repetition)
org/apache/parquet/schema/Types/BaseMapBuilder/KeyBuilder/requiredMapValue()#org/apache/parquet/schema/Types/BaseMapBuilder/KeyBuilder/mapValue(org.apache.parquet.schema.Type.Repetition)
org/apache/parquet/schema/Types/BaseMapBuilder/KeyBuilder/requiredValue(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)#org/apache/parquet/schema/Types/BaseMapBuilder/KeyBuilder/value(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.schema.Type.Repetition)
org/apache/parquet/schema/Types/BaseMapBuilder/KeyBuilder/optionalValue(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)#org/apache/parquet/schema/Types/BaseMapBuilder/KeyBuilder/value(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.schema.Type.Repetition)
org/apache/parquet/schema/Types/BaseMapBuilder/KeyBuilder/mapValue(org.apache.parquet.schema.Type.Repetition)#org/apache/parquet/schema/Types/BaseMapBuilder/setKeyType(org.apache.parquet.schema.Type)
org/apache/parquet/schema/Types/BaseMapBuilder/KeyBuilder/mapValue(org.apache.parquet.schema.Type.Repetition)#org/apache/parquet/schema/Types/BaseMapBuilder/MapValueBuilder/MapValueBuilder(M)
org/apache/parquet/schema/Types/BaseMapBuilder/KeyBuilder/mapValue(org.apache.parquet.schema.Type.Repetition)#org/apache/parquet/schema/Types/BasePrimitiveBuilder/build(java.lang.String)
org/apache/parquet/schema/Types/BaseMapBuilder/KeyBuilder/mapValue(org.apache.parquet.schema.Type.Repetition)#org/apache/parquet/schema/Types/Builder/repetition(org.apache.parquet.schema.Type.Repetition)
org/apache/parquet/schema/Types/BaseMapBuilder/KeyBuilder/optionalListValue()#org/apache/parquet/schema/Types/BaseMapBuilder/KeyBuilder/listValue(org.apache.parquet.schema.Type.Repetition)
org/apache/parquet/schema/Types/BaseMapBuilder/KeyBuilder/named(java.lang.String)#org/apache/parquet/schema/Types/BaseMapBuilder/setKeyType(org.apache.parquet.schema.Type)
org/apache/parquet/schema/Types/BaseMapBuilder/KeyBuilder/named(java.lang.String)#org/apache/parquet/schema/Types/Builder/named(java.lang.String)
org/apache/parquet/schema/Types/BaseMapBuilder/KeyBuilder/named(java.lang.String)#org/apache/parquet/schema/Types/BasePrimitiveBuilder/build(java.lang.String)
org/apache/parquet/schema/Types/BaseMapBuilder/KeyBuilder/requiredListValue()#org/apache/parquet/schema/Types/BaseMapBuilder/KeyBuilder/listValue(org.apache.parquet.schema.Type.Repetition)
org/apache/parquet/schema/Types/BaseMapBuilder/KeyBuilder/optionalMapValue()#org/apache/parquet/schema/Types/BaseMapBuilder/KeyBuilder/mapValue(org.apache.parquet.schema.Type.Repetition)
org/apache/parquet/schema/Types/BaseMapBuilder/KeyBuilder/listValue(org.apache.parquet.schema.Type.Repetition)#org/apache/parquet/schema/Types/BaseMapBuilder/ListValueBuilder/ListValueBuilder(M)
org/apache/parquet/schema/Types/BaseMapBuilder/KeyBuilder/listValue(org.apache.parquet.schema.Type.Repetition)#org/apache/parquet/schema/Types/BaseMapBuilder/setKeyType(org.apache.parquet.schema.Type)
org/apache/parquet/schema/Types/BaseMapBuilder/KeyBuilder/listValue(org.apache.parquet.schema.Type.Repetition)#org/apache/parquet/schema/Types/BasePrimitiveBuilder/build(java.lang.String)
org/apache/parquet/schema/Types/BaseMapBuilder/KeyBuilder/listValue(org.apache.parquet.schema.Type.Repetition)#org/apache/parquet/schema/Types/Builder/repetition(org.apache.parquet.schema.Type.Repetition)
org/apache/hadoop/hive/ql/io/parquet/serde/DeepParquetHiveMapInspector/getMapValueElement(java.lang.Object,java.lang.Object)#java/lang/Object/equals(java.lang.Object)
org/apache/hadoop/hive/ql/io/parquet/serde/DeepParquetHiveMapInspector/getMapValueElement(java.lang.Object,java.lang.Object)#java/util/Map/Entry/getValue()
org/apache/hadoop/hive/ql/io/parquet/serde/DeepParquetHiveMapInspector/getMapValueElement(java.lang.Object,java.lang.Object)#java/util/Map/get(java.lang.Object)
org/apache/hadoop/hive/ql/io/parquet/serde/DeepParquetHiveMapInspector/getMapValueElement(java.lang.Object,java.lang.Object)#java/lang/Class/getCanonicalName()
org/apache/hadoop/hive/ql/io/parquet/serde/DeepParquetHiveMapInspector/getMapValueElement(java.lang.Object,java.lang.Object)#java/util/Map/Entry/getKey()
org/apache/hadoop/hive/ql/io/parquet/serde/DeepParquetHiveMapInspector/getMapValueElement(java.lang.Object,java.lang.Object)#java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)
org/apache/hadoop/hive/ql/io/parquet/serde/DeepParquetHiveMapInspector/getMapValueElement(java.lang.Object,java.lang.Object)#java/util/Map/containsKey(java.lang.Object)
org/apache/hadoop/hive/ql/io/parquet/serde/DeepParquetHiveMapInspector/getMapValueElement(java.lang.Object,java.lang.Object)#java/lang/Object/getClass()
org/apache/hadoop/hive/ql/io/parquet/serde/DeepParquetHiveMapInspector/getMapValueElement(java.lang.Object,java.lang.Object)#java/util/Map/entrySet()
org/apache/parquet/avro/TestReflectReadWrite/testWriteReflectReadGeneric()#org/apache/parquet/avro/TestReflectReadWrite/writePojosToParquetFile(int,org.apache.parquet.hadoop.metadata.CompressionCodecName,boolean)
org/apache/parquet/avro/TestReflectReadWrite/testWriteReflectReadGeneric()#org/apache/parquet/avro/TestReflectReadWrite/getGenericPojoUtf8()
org/apache/parquet/avro/TestReflectReadWrite/testWriteReflectReadGeneric()#org/apache/parquet/avro/AvroParquetReader/AvroParquetReader(org.apache.parquet.hadoop.Path,org.apache.parquet.filter.UnboundRecordFilter)
org/apache/parquet/avro/TestReflectReadWrite/testWriteReflectReadGeneric()#org/apache/parquet/avro/AvroReadSupport/setAvroDataSupplier(org.apache.parquet.hadoop.Configuration,java.lang.Class)
org/apache/parquet/avro/TestReflectReadWrite/testReadWriteReflect()#org/apache/parquet/hadoop/ParquetReader/read()
org/apache/parquet/avro/TestReflectReadWrite/testReadWriteReflect()#org/apache/parquet/avro/TestReflectReadWrite/writePojosToParquetFile(int,org.apache.parquet.hadoop.metadata.CompressionCodecName,boolean)
org/apache/parquet/avro/TestReflectReadWrite/testReadWriteReflect()#org/apache/parquet/avro/TestReflectReadWrite/getPojo()
org/apache/parquet/avro/TestReflectReadWrite/testReadWriteReflect()#org/apache/parquet/avro/AvroParquetReader/AvroParquetReader(org.apache.parquet.hadoop.Path,org.apache.parquet.filter.UnboundRecordFilter)
org/apache/parquet/avro/TestReflectReadWrite/testReadWriteReflect()#org/apache/parquet/avro/AvroReadSupport/setAvroDataSupplier(org.apache.parquet.hadoop.Configuration,java.lang.Class)
org/apache/parquet/avro/TestReflectReadWrite/writePojosToParquetFile(int,org.apache.parquet.hadoop.metadata.CompressionCodecName,boolean)#java/lang/Class/getSimpleName()
org/apache/parquet/avro/TestReflectReadWrite/writePojosToParquetFile(int,org.apache.parquet.hadoop.metadata.CompressionCodecName,boolean)#org/apache/parquet/avro/TestReflectReadWrite/getPojo()
org/apache/parquet/avro/TestReflectReadWrite/writePojosToParquetFile(int,org.apache.parquet.hadoop.metadata.CompressionCodecName,boolean)#org/apache/parquet/hadoop/ParquetWriter/write(T)
org/apache/parquet/avro/TestReflectReadWrite/writePojosToParquetFile(int,org.apache.parquet.hadoop.metadata.CompressionCodecName,boolean)#java/lang/Object/getClass()
org/apache/parquet/avro/TestReflectReadWrite/writePojosToParquetFile(int,org.apache.parquet.hadoop.metadata.CompressionCodecName,boolean)#org/apache/parquet/avro/AvroParquetWriter/builder(org.apache.parquet.hadoop.Path)
org/apache/parquet/avro/TestReflectReadWrite/writePojosToParquetFile(int,org.apache.parquet.hadoop.metadata.CompressionCodecName,boolean)#org/apache/parquet/hadoop/ParquetWriter/close()
org/apache/parquet/avro/TestReflectReadWrite/writePojosToParquetFile(int,org.apache.parquet.hadoop.metadata.CompressionCodecName,boolean)#java/io/File/createTempFile(java.lang.String,java.lang.String)
org/apache/parquet/avro/TestReflectReadWrite/writePojosToParquetFile(int,org.apache.parquet.hadoop.metadata.CompressionCodecName,boolean)#java/io/File/deleteOnExit()
org/apache/parquet/avro/TestReflectReadWrite/writePojosToParquetFile(int,org.apache.parquet.hadoop.metadata.CompressionCodecName,boolean)#java/io/File/delete()
org/apache/parquet/avro/TestReflectReadWrite/writePojosToParquetFile(int,org.apache.parquet.hadoop.metadata.CompressionCodecName,boolean)#java/io/File/getPath()
org/apache/parquet/avro/TestReflectReadWrite/getPojo()#org/apache/parquet/avro/TestReflectReadWrite/Pojo/Pojo()
org/apache/parquet/avro/TestReflectReadWrite/getPojo()#java/util/HashMap/HashMap()
org/apache/parquet/avro/TestReflectReadWrite/getPojo()#java/util/Map/put(K,V)
org/apache/parquet/avro/TestReflectReadWrite/getGenericPojoUtf8()#java/util/HashMap/HashMap()
org/apache/parquet/avro/TestReflectReadWrite/getGenericPojoUtf8()#java/lang/Object/Object()
org/apache/parquet/avro/TestReflectReadWrite/getGenericPojoUtf8()#java/nio/ByteBuffer/wrap(byte[])
org/apache/parquet/avro/TestReflectReadWrite/getGenericPojoUtf8()#java/util/Map/put(K,V)
org/apache/hadoop/hive/ql/io/parquet/serde/ArrayWritableObjectInspector/getObjectInspector(org.apache.hadoop.hive.ql.io.parquet.TypeInfo)#org/apache/hadoop/hive/ql/io/parquet/serde/ArrayWritableObjectInspector/getObjectInspector(org.apache.hadoop.hive.ql.io.parquet.TypeInfo)
org/apache/hadoop/hive/ql/io/parquet/serde/ArrayWritableObjectInspector/getObjectInspector(org.apache.hadoop.hive.ql.io.parquet.TypeInfo)#org/apache/hadoop/hive/ql/io/parquet/serde/ArrayWritableObjectInspector/ArrayWritableObjectInspector(org.apache.hadoop.hive.ql.io.parquet.serde.StructTypeInfo)
org/apache/hadoop/hive/ql/io/parquet/serde/ArrayWritableObjectInspector/getObjectInspector(org.apache.hadoop.hive.ql.io.parquet.TypeInfo)#java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)
org/apache/hadoop/hive/ql/io/parquet/serde/ArrayWritableObjectInspector/getObjectInspector(org.apache.hadoop.hive.ql.io.parquet.TypeInfo)#org/apache/hadoop/hive/ql/io/parquet/serde/StandardParquetHiveMapInspector/StandardParquetHiveMapInspector(org.apache.hadoop.hive.ql.io.parquet.serde.ObjectInspector,org.apache.hadoop.hive.ql.io.parquet.serde.ObjectInspector)
org/apache/hadoop/hive/ql/io/parquet/serde/ArrayWritableObjectInspector/getObjectInspector(org.apache.hadoop.hive.ql.io.parquet.TypeInfo)#org/apache/hadoop/hive/ql/io/parquet/serde/ParquetHiveArrayInspector/ParquetHiveArrayInspector(org.apache.hadoop.hive.ql.io.parquet.serde.ObjectInspector)
org/apache/hadoop/hive/ql/io/parquet/serde/ArrayWritableObjectInspector/getObjectInspector(org.apache.hadoop.hive.ql.io.parquet.TypeInfo)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/hadoop/hive/ql/io/parquet/serde/ArrayWritableObjectInspector/getObjectInspector(org.apache.hadoop.hive.ql.io.parquet.TypeInfo)#org/apache/hadoop/hive/ql/io/parquet/serde/DeepParquetHiveMapInspector/DeepParquetHiveMapInspector(org.apache.hadoop.hive.ql.io.parquet.serde.ObjectInspector,org.apache.hadoop.hive.ql.io.parquet.serde.ObjectInspector)
org/apache/hadoop/hive/ql/io/parquet/serde/ArrayWritableObjectInspector/setStructFieldData(java.lang.Object,org.apache.hadoop.hive.ql.io.parquet.serde.StructField,java.lang.Object)#org/apache/hadoop/hive/ql/io/parquet/serde/ArrayWritableObjectInspector/StructFieldImpl/getIndex()
org/apache/hadoop/hive/ql/io/parquet/serde/ArrayWritableObjectInspector/setStructFieldData(java.lang.Object,org.apache.hadoop.hive.ql.io.parquet.serde.StructField,java.lang.Object)#java/util/ArrayList/set(int,E)
org/apache/hadoop/hive/ql/io/parquet/serde/ArrayWritableObjectInspector/equals(java.lang.Object)#java/lang/Object/getClass()
org/apache/hadoop/hive/ql/io/parquet/serde/ArrayWritableObjectInspector/getStructFieldRef(java.lang.String)#java/util/HashMap/get(java.lang.Object)
org/apache/hadoop/hive/ql/io/parquet/serde/ArrayWritableObjectInspector/create()#java/util/ArrayList/ArrayList(java.util.Collection)
org/apache/hadoop/hive/ql/io/parquet/serde/ArrayWritableObjectInspector/create()#java/util/ArrayList/add(E)
org/apache/hadoop/hive/ql/io/parquet/serde/ArrayWritableObjectInspector/getStructFieldsDataAsList(java.lang.Object)#java/util/ArrayList/ArrayList(java.util.Collection)
org/apache/hadoop/hive/ql/io/parquet/serde/ArrayWritableObjectInspector/getStructFieldsDataAsList(java.lang.Object)#java/lang/Class/getCanonicalName()
org/apache/hadoop/hive/ql/io/parquet/serde/ArrayWritableObjectInspector/getStructFieldsDataAsList(java.lang.Object)#java/util/Arrays/asList(T[])
org/apache/hadoop/hive/ql/io/parquet/serde/ArrayWritableObjectInspector/getStructFieldsDataAsList(java.lang.Object)#java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)
org/apache/hadoop/hive/ql/io/parquet/serde/ArrayWritableObjectInspector/getStructFieldsDataAsList(java.lang.Object)#java/lang/Object/getClass()
org/apache/hadoop/hive/ql/io/parquet/serde/ArrayWritableObjectInspector/getStructFieldData(java.lang.Object,org.apache.hadoop.hive.ql.io.parquet.serde.StructField)#org/apache/hadoop/hive/ql/io/parquet/serde/ArrayWritableObjectInspector/StructFieldImpl/getIndex()
org/apache/hadoop/hive/ql/io/parquet/serde/ArrayWritableObjectInspector/getStructFieldData(java.lang.Object,org.apache.hadoop.hive.ql.io.parquet.serde.StructField)#java/lang/Class/getCanonicalName()
org/apache/hadoop/hive/ql/io/parquet/serde/ArrayWritableObjectInspector/getStructFieldData(java.lang.Object,org.apache.hadoop.hive.ql.io.parquet.serde.StructField)#java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)
org/apache/hadoop/hive/ql/io/parquet/serde/ArrayWritableObjectInspector/getStructFieldData(java.lang.Object,org.apache.hadoop.hive.ql.io.parquet.serde.StructField)#java/util/List/get(int)
org/apache/hadoop/hive/ql/io/parquet/serde/ArrayWritableObjectInspector/getStructFieldData(java.lang.Object,org.apache.hadoop.hive.ql.io.parquet.serde.StructField)#java/lang/Object/getClass()
org/apache/parquet/encoding/Generator/main(java.lang.String[])#org/apache/parquet/encoding/bitpacking/ByteBasedBitPackingGenerator/main(java.lang.String[])
org/apache/parquet/encoding/Generator/main(java.lang.String[])#org/apache/parquet/encoding/bitpacking/IntBasedBitPackingGenerator/main(java.lang.String[])
org/apache/parquet/hadoop/codec/SnappyCompressor/reset()#java/nio/Buffer/limit(int)
org/apache/parquet/hadoop/codec/SnappyCompressor/reset()#java/nio/Buffer/rewind()
org/apache/parquet/hadoop/codec/SnappyCompressor/setInput(byte[],int,int)#java/nio/Buffer/limit(int)
org/apache/parquet/hadoop/codec/SnappyCompressor/setInput(byte[],int,int)#java/nio/ByteBuffer/put(java.nio.ByteBuffer)
org/apache/parquet/hadoop/codec/SnappyCompressor/setInput(byte[],int,int)#org/apache/parquet/Preconditions/checkArgument(boolean,java.lang.String)
org/apache/parquet/hadoop/codec/SnappyCompressor/setInput(byte[],int,int)#java/nio/ByteBuffer/allocateDirect(int)
org/apache/parquet/hadoop/codec/SnappyCompressor/setInput(byte[],int,int)#java/nio/Buffer/capacity()
org/apache/parquet/hadoop/codec/SnappyCompressor/setInput(byte[],int,int)#java/nio/Buffer/hasRemaining()
org/apache/parquet/hadoop/codec/SnappyCompressor/setInput(byte[],int,int)#java/nio/Buffer/position()
org/apache/parquet/hadoop/codec/SnappyCompressor/setInput(byte[],int,int)#org/apache/parquet/hadoop/codec/SnappyUtil/validateBuffer(byte[],int,int)
org/apache/parquet/hadoop/codec/SnappyCompressor/setInput(byte[],int,int)#java/nio/ByteBuffer/put(byte[],int,int)
org/apache/parquet/hadoop/codec/SnappyCompressor/setInput(byte[],int,int)#java/nio/Buffer/rewind()
org/apache/parquet/hadoop/codec/SnappyCompressor/reinit(org.apache.parquet.hadoop.Configuration)#org/apache/parquet/hadoop/codec/SnappyCompressor/reset()
org/apache/parquet/hadoop/codec/SnappyCompressor/finished()#java/nio/Buffer/position()
org/apache/parquet/hadoop/codec/SnappyCompressor/finished()#java/nio/Buffer/hasRemaining()
org/apache/parquet/hadoop/codec/SnappyCompressor/compress(byte[],int,int)#java/nio/Buffer/clear()
org/apache/parquet/hadoop/codec/SnappyCompressor/compress(byte[],int,int)#java/nio/ByteBuffer/get(byte[],int,int)
org/apache/parquet/hadoop/codec/SnappyCompressor/compress(byte[],int,int)#java/nio/Buffer/limit(int)
org/apache/parquet/hadoop/codec/SnappyCompressor/compress(byte[],int,int)#java/nio/Buffer/remaining()
org/apache/parquet/hadoop/codec/SnappyCompressor/compress(byte[],int,int)#java/nio/Buffer/position(int)
org/apache/parquet/hadoop/codec/SnappyCompressor/compress(byte[],int,int)#org/apache/parquet/hadoop/codec/SnappyCompressor/needsInput()
org/apache/parquet/hadoop/codec/SnappyCompressor/compress(byte[],int,int)#java/nio/ByteBuffer/allocateDirect(int)
org/apache/parquet/hadoop/codec/SnappyCompressor/compress(byte[],int,int)#java/nio/Buffer/rewind()
org/apache/parquet/hadoop/codec/SnappyCompressor/compress(byte[],int,int)#java/nio/Buffer/hasRemaining()
org/apache/parquet/hadoop/codec/SnappyCompressor/compress(byte[],int,int)#java/nio/Buffer/position()
org/apache/parquet/hadoop/codec/SnappyCompressor/compress(byte[],int,int)#org/apache/parquet/hadoop/codec/SnappyUtil/validateBuffer(byte[],int,int)
org/apache/parquet/hadoop/codec/SnappyCompressor/compress(byte[],int,int)#java/nio/Buffer/capacity()
org/apache/parquet/hadoop/codec/SnappyCompressor/compress(byte[],int,int)#java/lang/Math/min(int,int)
org/apache/parquet/avro/AvroConverters/FieldLongConverter/addInt(int)#org/apache/parquet/avro/ParentValueContainer/addLong(long)
org/apache/parquet/avro/AvroConverters/FieldLongConverter/addLong(long)#org/apache/parquet/avro/ParentValueContainer/addLong(long)
org/apache/hadoop/hive/ql/io/parquet/TestMapredParquetOutputFormat/testGetHiveRecordWriter()#java/util/Properties/setProperty(java.lang.String,java.lang.String)
org/apache/hadoop/hive/ql/io/parquet/TestMapredParquetOutputFormat/testGetHiveRecordWriter()#java/lang/Throwable/getMessage()
org/apache/hadoop/hive/ql/io/parquet/TestMapredParquetOutputFormat/testGetHiveRecordWriter()#java/util/Properties/Properties()
org/apache/hadoop/hive/ql/io/parquet/TestMapredParquetOutputFormat/testGetHiveRecordWriter()#org/apache/hadoop/hive/ql/io/parquet/MapredParquetOutputFormat/getHiveRecordWriter(org.apache.parquet.hadoop.JobConf,org.apache.parquet.hadoop.Path,java.lang.Class,boolean,java.util.Properties,org.apache.hadoop.hive.ql.io.parquet.Progressable)
org/apache/hadoop/hive/ql/io/parquet/TestMapredParquetOutputFormat/testGetHiveRecordWriter()#org/apache/hadoop/hive/ql/io/parquet/MapredParquetOutputFormat/MapredParquetOutputFormat(org.apache.hadoop.hive.ql.io.parquet.OutputFormat)
org/apache/hadoop/hive/ql/io/parquet/TestMapredParquetOutputFormat/testConstructorWithFormat()#org/apache/hadoop/hive/ql/io/parquet/MapredParquetOutputFormat/MapredParquetOutputFormat()
org/apache/hadoop/hive/ql/io/parquet/TestMapredParquetOutputFormat/testGetRecordWriterThrowsException()#org/apache/hadoop/hive/ql/io/parquet/MapredParquetOutputFormat/MapredParquetOutputFormat()
org/apache/hadoop/hive/ql/io/parquet/TestMapredParquetOutputFormat/testGetRecordWriterThrowsException()#java/lang/Throwable/getMessage()
org/apache/hadoop/hive/ql/io/parquet/TestMapredParquetOutputFormat/testGetRecordWriterThrowsException()#org/apache/hadoop/hive/ql/io/parquet/MapredParquetOutputFormat/getRecordWriter(org.apache.parquet.hadoop.FileSystem,org.apache.parquet.hadoop.JobConf,java.lang.String,org.apache.hadoop.hive.ql.io.parquet.Progressable)
org/apache/hadoop/hive/ql/io/parquet/TestMapredParquetOutputFormat/testConstructor()#org/apache/hadoop/hive/ql/io/parquet/MapredParquetOutputFormat/MapredParquetOutputFormat()
org/apache/parquet/avro/TestSpecificInputOutputFormat/MyMapper/run(org.apache.parquet.hadoop.Context)#org/apache/parquet/avro/TestSpecificInputOutputFormat/nextRecord(int)
org/apache/parquet/hadoop/example/GroupReadSupportTest/testInitWithoutSpecifyingRequestSchema()#org/apache/parquet/hadoop/api/ReadSupport/ReadContext/getRequestedSchema()
org/apache/parquet/hadoop/example/GroupReadSupportTest/testInitWithoutSpecifyingRequestSchema()#org/apache/parquet/schema/MessageTypeParser/parseMessageType(java.lang.String)
org/apache/parquet/hadoop/example/GroupReadSupportTest/testInitWithoutSpecifyingRequestSchema()#java/util/HashMap/HashMap()
org/apache/parquet/hadoop/example/GroupReadSupportTest/testInitWithoutSpecifyingRequestSchema()#org/apache/parquet/hadoop/example/GroupReadSupport/GroupReadSupport()
org/apache/parquet/hadoop/example/GroupReadSupportTest/testInitWithoutSpecifyingRequestSchema()#org/apache/parquet/hadoop/example/GroupReadSupport/init(org.apache.parquet.hadoop.Configuration,java.util.Map,org.apache.parquet.schema.MessageType)
org/apache/parquet/hadoop/example/GroupReadSupportTest/testInitWithPartialSchema()#org/apache/parquet/hadoop/api/ReadSupport/ReadContext/getRequestedSchema()
org/apache/parquet/hadoop/example/GroupReadSupportTest/testInitWithPartialSchema()#org/apache/parquet/schema/MessageTypeParser/parseMessageType(java.lang.String)
org/apache/parquet/hadoop/example/GroupReadSupportTest/testInitWithPartialSchema()#java/util/HashMap/HashMap()
org/apache/parquet/hadoop/example/GroupReadSupportTest/testInitWithPartialSchema()#org/apache/parquet/hadoop/example/GroupReadSupport/GroupReadSupport()
org/apache/parquet/hadoop/example/GroupReadSupportTest/testInitWithPartialSchema()#org/apache/parquet/hadoop/example/GroupReadSupport/init(org.apache.parquet.hadoop.Configuration,java.util.Map,org.apache.parquet.schema.MessageType)
org/apache/parquet/pig/summary/ValueStat/add(double)#java/lang/Math/min(double,double)
org/apache/parquet/pig/summary/ValueStat/add(double)#java/lang/Math/max(double,double)
org/apache/parquet/pig/summary/ValueStat/merge(org.apache.parquet.pig.summary.ValueStat)#java/lang/Math/min(double,double)
org/apache/parquet/pig/summary/ValueStat/merge(org.apache.parquet.pig.summary.ValueStat)#java/lang/Math/max(double,double)
org/apache/parquet/column/values/bitpacking/BitPacking/getBitPackingWriter(int,java.io.OutputStream)#org/apache/parquet/column/values/bitpacking/SevenBitPackingWriter/SevenBitPackingWriter(java.io.OutputStream)
org/apache/parquet/column/values/bitpacking/BitPacking/getBitPackingWriter(int,java.io.OutputStream)#org/apache/parquet/column/values/bitpacking/ThreeBitPackingWriter/ThreeBitPackingWriter(java.io.OutputStream)
org/apache/parquet/column/values/bitpacking/BitPacking/getBitPackingWriter(int,java.io.OutputStream)#org/apache/parquet/column/values/bitpacking/ZeroBitPackingWriter/ZeroBitPackingWriter()
org/apache/parquet/column/values/bitpacking/BitPacking/getBitPackingWriter(int,java.io.OutputStream)#org/apache/parquet/column/values/bitpacking/EightBitPackingWriter/EightBitPackingWriter(java.io.OutputStream)
org/apache/parquet/column/values/bitpacking/BitPacking/getBitPackingWriter(int,java.io.OutputStream)#org/apache/parquet/column/values/bitpacking/SixBitPackingWriter/SixBitPackingWriter(java.io.OutputStream)
org/apache/parquet/column/values/bitpacking/BitPacking/getBitPackingWriter(int,java.io.OutputStream)#org/apache/parquet/column/values/bitpacking/OneBitPackingWriter/OneBitPackingWriter(java.io.OutputStream)
org/apache/parquet/column/values/bitpacking/BitPacking/getBitPackingWriter(int,java.io.OutputStream)#java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)
org/apache/parquet/column/values/bitpacking/BitPacking/getBitPackingWriter(int,java.io.OutputStream)#org/apache/parquet/column/values/bitpacking/TwoBitPackingWriter/TwoBitPackingWriter(java.io.OutputStream)
org/apache/parquet/column/values/bitpacking/BitPacking/getBitPackingWriter(int,java.io.OutputStream)#org/apache/parquet/column/values/bitpacking/FiveBitPackingWriter/FiveBitPackingWriter(java.io.OutputStream)
org/apache/parquet/column/values/bitpacking/BitPacking/getBitPackingWriter(int,java.io.OutputStream)#org/apache/parquet/column/values/bitpacking/FourBitPackingWriter/FourBitPackingWriter(java.io.OutputStream)
org/apache/parquet/column/values/bitpacking/BitPacking/createBitPackingReader(int,java.io.InputStream,long)#org/apache/parquet/column/values/bitpacking/FourBitPackingReader/FourBitPackingReader(java.io.InputStream)
org/apache/parquet/column/values/bitpacking/BitPacking/createBitPackingReader(int,java.io.InputStream,long)#org/apache/parquet/column/values/bitpacking/ThreeBitPackingReader/ThreeBitPackingReader(java.io.InputStream,long)
org/apache/parquet/column/values/bitpacking/BitPacking/createBitPackingReader(int,java.io.InputStream,long)#org/apache/parquet/column/values/bitpacking/SixBitPackingReader/SixBitPackingReader(java.io.InputStream,long)
org/apache/parquet/column/values/bitpacking/BitPacking/createBitPackingReader(int,java.io.InputStream,long)#java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)
org/apache/parquet/column/values/bitpacking/BitPacking/createBitPackingReader(int,java.io.InputStream,long)#org/apache/parquet/column/values/bitpacking/OneBitPackingReader/OneBitPackingReader(java.io.InputStream)
org/apache/parquet/column/values/bitpacking/BitPacking/createBitPackingReader(int,java.io.InputStream,long)#org/apache/parquet/column/values/bitpacking/ZeroBitPackingReader/ZeroBitPackingReader()
org/apache/parquet/column/values/bitpacking/BitPacking/createBitPackingReader(int,java.io.InputStream,long)#org/apache/parquet/column/values/bitpacking/EightBitPackingReader/EightBitPackingReader(java.io.InputStream)
org/apache/parquet/column/values/bitpacking/BitPacking/createBitPackingReader(int,java.io.InputStream,long)#org/apache/parquet/column/values/bitpacking/SevenBitPackingReader/SevenBitPackingReader(java.io.InputStream,long)
org/apache/parquet/column/values/bitpacking/BitPacking/createBitPackingReader(int,java.io.InputStream,long)#org/apache/parquet/column/values/bitpacking/TwoBitPackingReader/TwoBitPackingReader(java.io.InputStream)
org/apache/parquet/column/values/bitpacking/BitPacking/createBitPackingReader(int,java.io.InputStream,long)#org/apache/parquet/column/values/bitpacking/FiveBitPackingReader/FiveBitPackingReader(java.io.InputStream,long)
org/apache/parquet/thrift/struct/ThriftType/toJSON()#org/apache/parquet/thrift/struct/JSON/toJSON(java.lang.Object)
org/apache/parquet/thrift/struct/ThriftType/hashCode()#java/lang/Enum/hashCode()
org/apache/parquet/thrift/struct/ThriftType/toString()#org/apache/parquet/thrift/struct/ThriftType/toJSON()
org/apache/parquet/thrift/struct/ThriftType/fromJSON(java.lang.String)#org/apache/parquet/thrift/struct/JSON/fromJSON(java.lang.String,java.lang.Class)
org/apache/parquet/avro/AvroIndexedRecordConverter/MapConverter/MapKeyValueConverter/getConverter(int)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/parquet/avro/AvroIndexedRecordConverter/MapConverter/MapKeyValueConverter/end()#java/util/Map/put(K,V)
org/apache/parquet/cascading/ParquetTupleScheme/readSchema(org.apache.parquet.cascading.FlowProcess,org.apache.parquet.cascading.Tap)#org/apache/parquet/cascading/ParquetTupleScheme/getFooters(org.apache.parquet.cascading.FlowProcess,org.apache.parquet.cascading.Hfs)
org/apache/parquet/cascading/ParquetTupleScheme/readSchema(org.apache.parquet.cascading.FlowProcess,org.apache.parquet.cascading.Tap)#org/apache/parquet/hadoop/Footer/getParquetMetadata()
org/apache/parquet/cascading/ParquetTupleScheme/readSchema(org.apache.parquet.cascading.FlowProcess,org.apache.parquet.cascading.Tap)#org/apache/parquet/hadoop/metadata/ParquetMetadata/getFileMetaData()
org/apache/parquet/cascading/ParquetTupleScheme/readSchema(org.apache.parquet.cascading.FlowProcess,org.apache.parquet.cascading.Tap)#java/util/List/isEmpty()
org/apache/parquet/cascading/ParquetTupleScheme/readSchema(org.apache.parquet.cascading.FlowProcess,org.apache.parquet.cascading.Tap)#org/apache/parquet/hadoop/metadata/FileMetaData/getSchema()
org/apache/parquet/cascading/ParquetTupleScheme/readSchema(org.apache.parquet.cascading.FlowProcess,org.apache.parquet.cascading.Tap)#java/util/List/get(int)
org/apache/parquet/cascading/ParquetTupleScheme/readSchema(org.apache.parquet.cascading.FlowProcess,org.apache.parquet.cascading.Tap)#java/lang/Object/Object()
org/apache/parquet/cascading/ParquetTupleScheme/retrieveSourceFields(org.apache.parquet.cascading.FlowProcess,org.apache.parquet.cascading.Tap)#org/apache/parquet/cascading/ParquetTupleScheme/readSchema(org.apache.parquet.cascading.FlowProcess,org.apache.parquet.cascading.Tap)
org/apache/parquet/cascading/ParquetTupleScheme/retrieveSourceFields(org.apache.parquet.cascading.FlowProcess,org.apache.parquet.cascading.Tap)#org/apache/parquet/cascading/SchemaIntersection/getSourceFields()
org/apache/parquet/cascading/ParquetTupleScheme/retrieveSourceFields(org.apache.parquet.cascading.FlowProcess,org.apache.parquet.cascading.Tap)#org/apache/parquet/cascading/SchemaIntersection/SchemaIntersection(org.apache.parquet.schema.MessageType,org.apache.parquet.cascading.Fields)
org/apache/parquet/cascading/ParquetTupleScheme/sourceConfInit(org.apache.parquet.cascading.FlowProcess,org.apache.parquet.cascading.Tap,org.apache.parquet.hadoop.JobConf)#org/apache/parquet/hadoop/ParquetInputFormat/setFilterPredicate(org.apache.parquet.hadoop.Configuration,org.apache.parquet.filter2.predicate.FilterPredicate)
org/apache/parquet/cascading/ParquetTupleScheme/sourceConfInit(org.apache.parquet.cascading.FlowProcess,org.apache.parquet.cascading.Tap,org.apache.parquet.hadoop.JobConf)#org/apache/parquet/cascading/TupleReadSupport/setRequestedFields(org.apache.parquet.hadoop.JobConf,org.apache.parquet.cascading.Fields)
org/apache/parquet/cascading/ParquetTupleScheme/sourceConfInit(org.apache.parquet.cascading.FlowProcess,org.apache.parquet.cascading.Tap,org.apache.parquet.hadoop.JobConf)#org/apache/parquet/hadoop/ParquetInputFormat/setReadSupportClass(org.apache.parquet.hadoop.Job,java.lang.Class)
org/apache/parquet/cascading/ParquetTupleScheme/sinkConfInit(org.apache.parquet.cascading.FlowProcess,org.apache.parquet.cascading.Tap,org.apache.parquet.hadoop.JobConf)#org/apache/parquet/hadoop/ParquetOutputFormat/setWriteSupportClass(org.apache.parquet.hadoop.Job,java.lang.Class)
org/apache/parquet/cascading/ParquetTupleScheme/sinkConfInit(org.apache.parquet.cascading.FlowProcess,org.apache.parquet.cascading.Tap,org.apache.parquet.hadoop.JobConf)#org/apache/parquet/hadoop/mapred/DeprecatedParquetOutputFormat/setAsOutputFormat(org.apache.parquet.hadoop.JobConf)
org/apache/parquet/cascading/ParquetTupleScheme/getFooters(org.apache.parquet.cascading.FlowProcess,org.apache.parquet.cascading.Hfs)#org/apache/parquet/hadoop/mapred/DeprecatedParquetInputFormat/DeprecatedParquetInputFormat()
org/apache/parquet/cascading/ParquetTupleScheme/getFooters(org.apache.parquet.cascading.FlowProcess,org.apache.parquet.cascading.Hfs)#org/apache/parquet/hadoop/mapred/DeprecatedParquetInputFormat/getFooters(org.apache.parquet.hadoop.JobConf)
org/apache/parquet/schema/Types/BaseListBuilder/GroupElementBuilder/named(java.lang.String)#org/apache/parquet/schema/Types/Builder/named(java.lang.String)
org/apache/parquet/schema/Types/BaseListBuilder/GroupElementBuilder/named(java.lang.String)#org/apache/parquet/schema/Types/BaseListBuilder/setElementType(org.apache.parquet.schema.Type)
org/apache/parquet/schema/Types/BaseListBuilder/GroupElementBuilder/named(java.lang.String)#org/apache/parquet/schema/Types/BaseGroupBuilder/build(java.lang.String)
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForIntegerTest/shouldReturnCorrectOffsetAfterInitialization()#org/apache/parquet/column/values/ValuesWriter/getBytes()
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForIntegerTest/shouldReturnCorrectOffsetAfterInitialization()#org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesReader/readInteger()
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForIntegerTest/shouldReturnCorrectOffsetAfterInitialization()#org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesReader/initFromPage(int,java.nio.ByteBuffer,int)
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForIntegerTest/shouldReturnCorrectOffsetAfterInitialization()#org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesReader/DeltaBinaryPackingValuesReader()
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForIntegerTest/shouldReturnCorrectOffsetAfterInitialization()#java/nio/ByteBuffer/wrap(byte[])
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForIntegerTest/shouldReturnCorrectOffsetAfterInitialization()#org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesReader/getNextOffset()
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForIntegerTest/shouldReturnCorrectOffsetAfterInitialization()#java/lang/System/arraycopy(java.lang.Object,int,java.lang.Object,int,int)
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForIntegerTest/shouldReturnCorrectOffsetAfterInitialization()#org/apache/parquet/bytes/BytesInput/toByteArray()
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForIntegerTest/shouldReturnCorrectOffsetAfterInitialization()#org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForIntegerTest/writeData(int[])
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForIntegerTest/shouldWriteWhenDeltaIs0ForEachBlock()#org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForIntegerTest/shouldWriteAndRead(int[])
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForIntegerTest/shouldReadMaxMinValue()#org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForIntegerTest/shouldWriteAndRead(int[])
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForIntegerTest/writeData(int[],int)#org/apache/parquet/column/values/ValuesWriter/writeInteger(int)
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForIntegerTest/shouldWriteAndReadWhenDeltasAreSame()#org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForIntegerTest/shouldWriteAndRead(int[])
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForIntegerTest/shouldWriteAndReadWhenAMiniBlockIsNotFullyWritten()#java/util/Random/nextInt()
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForIntegerTest/shouldWriteAndReadWhenAMiniBlockIsNotFullyWritten()#org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForIntegerTest/shouldWriteAndRead(int[])
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForIntegerTest/randomDataTest()#org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForIntegerTest/shouldReadAndWrite(int[],int)
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForIntegerTest/randomDataTest()#java/util/Random/nextInt()
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForIntegerTest/randomDataTest()#java/util/Random/nextInt(int)
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForIntegerTest/randomDataTest()#org/apache/parquet/column/values/ValuesWriter/reset()
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForIntegerTest/shouldReadAndWrite(int[],int)#java/lang/Math/ceil(double)
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForIntegerTest/shouldReadAndWrite(int[],int)#org/apache/parquet/column/values/ValuesWriter/getBytes()
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForIntegerTest/shouldReadAndWrite(int[],int)#org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesReader/readInteger()
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForIntegerTest/shouldReadAndWrite(int[],int)#org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesReader/initFromPage(int,java.nio.ByteBuffer,int)
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForIntegerTest/shouldReadAndWrite(int[],int)#org/apache/parquet/bytes/BytesInput/toByteArray()
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForIntegerTest/shouldReadAndWrite(int[],int)#java/nio/ByteBuffer/wrap(byte[])
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForIntegerTest/shouldReadAndWrite(int[],int)#org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForIntegerTest/writeData(int[],int)
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForIntegerTest/shouldReadAndWrite(int[],int)#org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesReader/DeltaBinaryPackingValuesReader()
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForIntegerTest/miniBlockSizeShouldBeMultipleOf8()#org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForInteger/DeltaBinaryPackingValuesWriterForInteger(int,int,int,int,org.apache.parquet.bytes.ByteBufferAllocator)
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForIntegerTest/miniBlockSizeShouldBeMultipleOf8()#org/apache/parquet/bytes/DirectByteBufferAllocator/DirectByteBufferAllocator()
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForIntegerTest/shouldWriteAndReadWhenBlockIsNotFullyWritten()#java/util/Random/nextInt()
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForIntegerTest/shouldWriteAndReadWhenBlockIsNotFullyWritten()#org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForIntegerTest/shouldWriteAndRead(int[])
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForIntegerTest/shouldThrowExceptionWhenReadMoreThanWritten()#org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesReader/readInteger()
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForIntegerTest/shouldThrowExceptionWhenReadMoreThanWritten()#java/lang/Throwable/getMessage()
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForIntegerTest/shouldThrowExceptionWhenReadMoreThanWritten()#org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForIntegerTest/shouldWriteAndRead(int[])
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForIntegerTest/shouldWriteNegativeDeltas()#java/util/Random/nextInt(int)
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForIntegerTest/shouldWriteNegativeDeltas()#org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForIntegerTest/shouldWriteAndRead(int[])
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForIntegerTest/shouldReset()#org/apache/parquet/column/values/ValuesWriter/reset()
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForIntegerTest/shouldReset()#org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForIntegerTest/shouldWriteAndRead(int[])
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForIntegerTest/shouldReset()#org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForIntegerTest/shouldReadWriteWhenDataIsNotAlignedWithBlock()
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForIntegerTest/setUp()#org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForInteger/DeltaBinaryPackingValuesWriterForInteger(int,int,int,int,org.apache.parquet.bytes.ByteBufferAllocator)
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForIntegerTest/setUp()#org/apache/parquet/bytes/DirectByteBufferAllocator/DirectByteBufferAllocator()
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForIntegerTest/setUp()#java/util/Random/Random(long)
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForIntegerTest/shouldWriteWhenDataIsAlignedWithBlock()#java/util/Random/nextInt()
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForIntegerTest/shouldWriteWhenDataIsAlignedWithBlock()#org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForIntegerTest/shouldWriteAndRead(int[])
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForIntegerTest/shouldWriteAndReadWhenValuesAreSame()#org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForIntegerTest/shouldWriteAndRead(int[])
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForIntegerTest/shouldWriteAndRead(int[])#org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForIntegerTest/shouldReadAndWrite(int[],int)
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForIntegerTest/shouldReadWriteWhenDataIsNotAlignedWithBlock()#java/util/Random/nextInt(int)
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForIntegerTest/shouldReadWriteWhenDataIsNotAlignedWithBlock()#org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForIntegerTest/shouldWriteAndRead(int[])
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForIntegerTest/shouldSkip()#org/apache/parquet/column/values/ValuesWriter/getBytes()
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForIntegerTest/shouldSkip()#org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesReader/readInteger()
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForIntegerTest/shouldSkip()#org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesReader/initFromPage(int,java.nio.ByteBuffer,int)
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForIntegerTest/shouldSkip()#org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesReader/DeltaBinaryPackingValuesReader()
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForIntegerTest/shouldSkip()#org/apache/parquet/bytes/BytesInput/toByteBuffer()
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForIntegerTest/shouldSkip()#org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForIntegerTest/writeData(int[])
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForIntegerTest/shouldSkip()#org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesReader/skip()
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForIntegerTest/writeData(int[])#org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForIntegerTest/writeData(int[],int)
org/apache/parquet/schema/Types/Builder/named(java.lang.String)#java/lang/Class/isAssignableFrom(java.lang.Class)
org/apache/parquet/schema/Types/Builder/named(java.lang.String)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/apache/parquet/schema/Types/Builder/named(java.lang.String)#org/apache/parquet/schema/Types/BaseGroupBuilder/addField(org.apache.parquet.schema.Type)
org/apache/parquet/schema/Types/Builder/named(java.lang.String)#java/lang/Class/cast(java.lang.Object)
org/apache/parquet/schema/Types/Builder/named(java.lang.String)#org/apache/parquet/Preconditions/checkNotNull(T,java.lang.String)
org/apache/parquet/schema/Types/Builder/named(java.lang.String)#java/lang/Object/getClass()
org/apache/parquet/schema/Types/Builder/named(java.lang.String)#org/apache/parquet/schema/Types/Builder/build(java.lang.String)
org/apache/parquet/schema/Types/Builder/as(org.apache.parquet.schema.OriginalType)#org/apache/parquet/schema/Types/Builder/self()
org/apache/parquet/schema/Types/Builder/repetition(org.apache.parquet.schema.Type.Repetition)#org/apache/parquet/schema/Types/Builder/self()
org/apache/parquet/schema/Types/Builder/repetition(org.apache.parquet.schema.Type.Repetition)#org/apache/parquet/Preconditions/checkArgument(boolean,java.lang.String)
org/apache/parquet/schema/Types/Builder/repetition(org.apache.parquet.schema.Type.Repetition)#org/apache/parquet/Preconditions/checkNotNull(T,java.lang.String)
org/apache/parquet/schema/Types/Builder/id(int)#org/apache/parquet/schema/Type/ID/ID(int)
org/apache/parquet/schema/Types/Builder/id(int)#org/apache/parquet/schema/Types/Builder/self()
org/apache/parquet/Preconditions/checkState(boolean,java.lang.String)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/apache/parquet/Preconditions/strings(java.lang.Object[])#java/lang/String/valueOf(java.lang.Object)
org/apache/parquet/Preconditions/checkState(boolean,java.lang.String,java.lang.Object[])#org/apache/parquet/Preconditions/strings(java.lang.Object[])
org/apache/parquet/Preconditions/checkState(boolean,java.lang.String,java.lang.Object[])#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/apache/parquet/Preconditions/checkState(boolean,java.lang.String,java.lang.Object[])#java/lang/String/valueOf(java.lang.Object)
org/apache/parquet/Preconditions/checkState(boolean,java.lang.String,java.lang.Object[])#java/lang/String/format(java.lang.String,java.lang.Object[])
org/apache/parquet/Preconditions/checkArgument(boolean,java.lang.String)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/parquet/Preconditions/checkArgument(boolean,java.lang.String,java.lang.Object[])#org/apache/parquet/Preconditions/strings(java.lang.Object[])
org/apache/parquet/Preconditions/checkArgument(boolean,java.lang.String,java.lang.Object[])#java/lang/String/valueOf(java.lang.Object)
org/apache/parquet/Preconditions/checkArgument(boolean,java.lang.String,java.lang.Object[])#java/lang/String/format(java.lang.String,java.lang.Object[])
org/apache/parquet/Preconditions/checkArgument(boolean,java.lang.String,java.lang.Object[])#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/parquet/Preconditions/checkNotNull(T,java.lang.String)#java/lang/NullPointerException/NullPointerException(java.lang.String)
org/apache/parquet/hive/internal/Hive012Binding/pushProjectionsAndFilters(org.apache.parquet.hadoop.JobConf,org.apache.parquet.hadoop.Path)#org/apache/parquet/hive/internal/Hive012Binding/init(org.apache.parquet.hadoop.JobConf)
org/apache/parquet/hive/internal/Hive012Binding/pushProjectionsAndFilters(org.apache.parquet.hadoop.JobConf,org.apache.parquet.hadoop.Path)#org/apache/parquet/hive/internal/Hive012Binding/pushProjectionsAndFilters(org.apache.parquet.hadoop.JobConf,java.lang.String,java.lang.String)
org/apache/parquet/hive/internal/Hive012Binding/pushProjectionsAndFilters(org.apache.parquet.hadoop.JobConf,org.apache.parquet.hadoop.Path)#java/lang/Object/Object()
org/apache/parquet/hive/internal/Hive012Binding/init(org.apache.parquet.hadoop.JobConf)#java/lang/String/length()
org/apache/parquet/hive/internal/Hive012Binding/init(org.apache.parquet.hadoop.JobConf)#java/lang/Object/Object()
org/apache/parquet/hive/internal/Hive012Binding/pushProjectionsAndFilters(org.apache.parquet.hadoop.JobConf,java.lang.String,java.lang.String)#java/util/ArrayList/ArrayList()
org/apache/parquet/hive/internal/Hive012Binding/pushProjectionsAndFilters(org.apache.parquet.hadoop.JobConf,java.lang.String,java.lang.String)#java/util/Map/Entry/getValue()
org/apache/parquet/hive/internal/Hive012Binding/pushProjectionsAndFilters(org.apache.parquet.hadoop.JobConf,java.lang.String,java.lang.String)#java/util/Iterator/next()
org/apache/parquet/hive/internal/Hive012Binding/pushProjectionsAndFilters(org.apache.parquet.hadoop.JobConf,java.lang.String,java.lang.String)#java/lang/String/equals(java.lang.Object)
org/apache/parquet/hive/internal/Hive012Binding/pushProjectionsAndFilters(org.apache.parquet.hadoop.JobConf,java.lang.String,java.lang.String)#java/util/Map/Entry/getKey()
org/apache/parquet/hive/internal/Hive012Binding/pushProjectionsAndFilters(org.apache.parquet.hadoop.JobConf,java.lang.String,java.lang.String)#java/util/ArrayList/add(E)
org/apache/parquet/hive/internal/Hive012Binding/pushProjectionsAndFilters(org.apache.parquet.hadoop.JobConf,java.lang.String,java.lang.String)#java/util/Iterator/hasNext()
org/apache/parquet/hive/internal/Hive012Binding/pushProjectionsAndFilters(org.apache.parquet.hadoop.JobConf,java.lang.String,java.lang.String)#org/apache/parquet/hive/internal/Hive012Binding/pushFilters(org.apache.parquet.hadoop.JobConf,org.apache.parquet.hive.internal.TableScanOperator)
org/apache/hadoop/hive/ql/io/parquet/write/DataWritableWriter/writePrimitive(org.apache.hadoop.hive.ql.io.parquet.serde.Writable)#org/apache/parquet/io/api/RecordConsumer/addInteger(int)
org/apache/hadoop/hive/ql/io/parquet/write/DataWritableWriter/writePrimitive(org.apache.hadoop.hive.ql.io.parquet.serde.Writable)#org/apache/parquet/io/api/RecordConsumer/addBinary(org.apache.parquet.io.api.Binary)
org/apache/hadoop/hive/ql/io/parquet/write/DataWritableWriter/writePrimitive(org.apache.hadoop.hive.ql.io.parquet.serde.Writable)#java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)
org/apache/hadoop/hive/ql/io/parquet/write/DataWritableWriter/writePrimitive(org.apache.hadoop.hive.ql.io.parquet.serde.Writable)#org/apache/hadoop/hive/ql/io/parquet/writable/BinaryWritable/getBinary()
org/apache/hadoop/hive/ql/io/parquet/write/DataWritableWriter/writePrimitive(org.apache.hadoop.hive.ql.io.parquet.serde.Writable)#org/apache/parquet/io/api/RecordConsumer/addFloat(float)
org/apache/hadoop/hive/ql/io/parquet/write/DataWritableWriter/writePrimitive(org.apache.hadoop.hive.ql.io.parquet.serde.Writable)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/hadoop/hive/ql/io/parquet/write/DataWritableWriter/writePrimitive(org.apache.hadoop.hive.ql.io.parquet.serde.Writable)#org/apache/parquet/io/api/RecordConsumer/addLong(long)
org/apache/hadoop/hive/ql/io/parquet/write/DataWritableWriter/writePrimitive(org.apache.hadoop.hive.ql.io.parquet.serde.Writable)#org/apache/parquet/io/api/RecordConsumer/addDouble(double)
org/apache/hadoop/hive/ql/io/parquet/write/DataWritableWriter/writePrimitive(org.apache.hadoop.hive.ql.io.parquet.serde.Writable)#org/apache/parquet/io/api/RecordConsumer/addBoolean(boolean)
org/apache/hadoop/hive/ql/io/parquet/write/DataWritableWriter/writeArray(org.apache.hadoop.hive.ql.io.parquet.serde.ArrayWritable,org.apache.parquet.schema.GroupType)#org/apache/parquet/schema/Type/getName()
org/apache/hadoop/hive/ql/io/parquet/write/DataWritableWriter/writeArray(org.apache.hadoop.hive.ql.io.parquet.serde.ArrayWritable,org.apache.parquet.schema.GroupType)#org/apache/parquet/io/api/RecordConsumer/startField(java.lang.String,int)
org/apache/hadoop/hive/ql/io/parquet/write/DataWritableWriter/writeArray(org.apache.hadoop.hive.ql.io.parquet.serde.ArrayWritable,org.apache.parquet.schema.GroupType)#org/apache/parquet/schema/Type/asGroupType()
org/apache/hadoop/hive/ql/io/parquet/write/DataWritableWriter/writeArray(org.apache.hadoop.hive.ql.io.parquet.serde.ArrayWritable,org.apache.parquet.schema.GroupType)#org/apache/parquet/io/api/RecordConsumer/endField(java.lang.String,int)
org/apache/hadoop/hive/ql/io/parquet/write/DataWritableWriter/writeArray(org.apache.hadoop.hive.ql.io.parquet.serde.ArrayWritable,org.apache.parquet.schema.GroupType)#org/apache/hadoop/hive/ql/io/parquet/write/DataWritableWriter/writePrimitive(org.apache.hadoop.hive.ql.io.parquet.serde.Writable)
org/apache/hadoop/hive/ql/io/parquet/write/DataWritableWriter/writeArray(org.apache.hadoop.hive.ql.io.parquet.serde.ArrayWritable,org.apache.parquet.schema.GroupType)#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/apache/hadoop/hive/ql/io/parquet/write/DataWritableWriter/writeArray(org.apache.hadoop.hive.ql.io.parquet.serde.ArrayWritable,org.apache.parquet.schema.GroupType)#org/apache/parquet/io/api/RecordConsumer/endGroup()
org/apache/hadoop/hive/ql/io/parquet/write/DataWritableWriter/writeArray(org.apache.hadoop.hive.ql.io.parquet.serde.ArrayWritable,org.apache.parquet.schema.GroupType)#org/apache/hadoop/hive/ql/io/parquet/write/DataWritableWriter/writeData(org.apache.hadoop.hive.ql.io.parquet.serde.ArrayWritable,org.apache.parquet.schema.GroupType)
org/apache/hadoop/hive/ql/io/parquet/write/DataWritableWriter/writeArray(org.apache.hadoop.hive.ql.io.parquet.serde.ArrayWritable,org.apache.parquet.schema.GroupType)#org/apache/parquet/schema/GroupType/getType(int)
org/apache/hadoop/hive/ql/io/parquet/write/DataWritableWriter/writeArray(org.apache.hadoop.hive.ql.io.parquet.serde.ArrayWritable,org.apache.parquet.schema.GroupType)#org/apache/parquet/schema/Type/isPrimitive()
org/apache/hadoop/hive/ql/io/parquet/write/DataWritableWriter/writeArray(org.apache.hadoop.hive.ql.io.parquet.serde.ArrayWritable,org.apache.parquet.schema.GroupType)#org/apache/parquet/io/api/RecordConsumer/startGroup()
org/apache/hadoop/hive/ql/io/parquet/write/DataWritableWriter/writeArray(org.apache.hadoop.hive.ql.io.parquet.serde.ArrayWritable,org.apache.parquet.schema.GroupType)#org/apache/parquet/schema/GroupType/getFieldCount()
org/apache/hadoop/hive/ql/io/parquet/write/DataWritableWriter/writeData(org.apache.hadoop.hive.ql.io.parquet.serde.ArrayWritable,org.apache.parquet.schema.GroupType)#java/lang/Enum/equals(java.lang.Object)
org/apache/hadoop/hive/ql/io/parquet/write/DataWritableWriter/writeData(org.apache.hadoop.hive.ql.io.parquet.serde.ArrayWritable,org.apache.parquet.schema.GroupType)#org/apache/parquet/schema/Type/getName()
org/apache/hadoop/hive/ql/io/parquet/write/DataWritableWriter/writeData(org.apache.hadoop.hive.ql.io.parquet.serde.ArrayWritable,org.apache.parquet.schema.GroupType)#org/apache/parquet/io/api/RecordConsumer/startField(java.lang.String,int)
org/apache/hadoop/hive/ql/io/parquet/write/DataWritableWriter/writeData(org.apache.hadoop.hive.ql.io.parquet.serde.ArrayWritable,org.apache.parquet.schema.GroupType)#org/apache/parquet/io/api/RecordConsumer/endField(java.lang.String,int)
org/apache/hadoop/hive/ql/io/parquet/write/DataWritableWriter/writeData(org.apache.hadoop.hive.ql.io.parquet.serde.ArrayWritable,org.apache.parquet.schema.GroupType)#org/apache/parquet/io/ParquetEncodingException/ParquetEncodingException(java.lang.String)
org/apache/hadoop/hive/ql/io/parquet/write/DataWritableWriter/writeData(org.apache.hadoop.hive.ql.io.parquet.serde.ArrayWritable,org.apache.parquet.schema.GroupType)#org/apache/hadoop/hive/ql/io/parquet/write/DataWritableWriter/writePrimitive(org.apache.hadoop.hive.ql.io.parquet.serde.Writable)
org/apache/hadoop/hive/ql/io/parquet/write/DataWritableWriter/writeData(org.apache.hadoop.hive.ql.io.parquet.serde.ArrayWritable,org.apache.parquet.schema.GroupType)#org/apache/hadoop/hive/ql/io/parquet/write/DataWritableWriter/writeArray(org.apache.hadoop.hive.ql.io.parquet.serde.ArrayWritable,org.apache.parquet.schema.GroupType)
org/apache/hadoop/hive/ql/io/parquet/write/DataWritableWriter/writeData(org.apache.hadoop.hive.ql.io.parquet.serde.ArrayWritable,org.apache.parquet.schema.GroupType)#org/apache/parquet/io/api/RecordConsumer/endGroup()
org/apache/hadoop/hive/ql/io/parquet/write/DataWritableWriter/writeData(org.apache.hadoop.hive.ql.io.parquet.serde.ArrayWritable,org.apache.parquet.schema.GroupType)#org/apache/hadoop/hive/ql/io/parquet/write/DataWritableWriter/writeData(org.apache.hadoop.hive.ql.io.parquet.serde.ArrayWritable,org.apache.parquet.schema.GroupType)
org/apache/hadoop/hive/ql/io/parquet/write/DataWritableWriter/writeData(org.apache.hadoop.hive.ql.io.parquet.serde.ArrayWritable,org.apache.parquet.schema.GroupType)#org/apache/parquet/schema/GroupType/getType(int)
org/apache/hadoop/hive/ql/io/parquet/write/DataWritableWriter/writeData(org.apache.hadoop.hive.ql.io.parquet.serde.ArrayWritable,org.apache.parquet.schema.GroupType)#org/apache/parquet/schema/Type/isPrimitive()
org/apache/hadoop/hive/ql/io/parquet/write/DataWritableWriter/writeData(org.apache.hadoop.hive.ql.io.parquet.serde.ArrayWritable,org.apache.parquet.schema.GroupType)#org/apache/parquet/schema/Type/asGroupType()
org/apache/hadoop/hive/ql/io/parquet/write/DataWritableWriter/writeData(org.apache.hadoop.hive.ql.io.parquet.serde.ArrayWritable,org.apache.parquet.schema.GroupType)#org/apache/parquet/schema/Type/getRepetition()
org/apache/hadoop/hive/ql/io/parquet/write/DataWritableWriter/writeData(org.apache.hadoop.hive.ql.io.parquet.serde.ArrayWritable,org.apache.parquet.schema.GroupType)#org/apache/parquet/io/api/RecordConsumer/startGroup()
org/apache/hadoop/hive/ql/io/parquet/write/DataWritableWriter/writeData(org.apache.hadoop.hive.ql.io.parquet.serde.ArrayWritable,org.apache.parquet.schema.GroupType)#org/apache/parquet/schema/GroupType/getFieldCount()
org/apache/hadoop/hive/ql/io/parquet/write/DataWritableWriter/write(org.apache.hadoop.hive.ql.io.parquet.serde.ArrayWritable)#org/apache/parquet/io/api/RecordConsumer/endMessage()
org/apache/hadoop/hive/ql/io/parquet/write/DataWritableWriter/write(org.apache.hadoop.hive.ql.io.parquet.serde.ArrayWritable)#org/apache/hadoop/hive/ql/io/parquet/write/DataWritableWriter/writeData(org.apache.hadoop.hive.ql.io.parquet.serde.ArrayWritable,org.apache.parquet.schema.GroupType)
org/apache/hadoop/hive/ql/io/parquet/write/DataWritableWriter/write(org.apache.hadoop.hive.ql.io.parquet.serde.ArrayWritable)#org/apache/parquet/io/api/RecordConsumer/startMessage()
org/apache/parquet/column/statistics/BinaryStatistics/setMinMaxFromBytes(byte[],byte[])#org/apache/parquet/io/api/Binary/fromReusedByteArray(byte[])
org/apache/parquet/column/statistics/BinaryStatistics/setMinMaxFromBytes(byte[],byte[])#org/apache/parquet/column/statistics/Statistics/markAsNotEmpty()
org/apache/parquet/column/statistics/BinaryStatistics/setMinMax(org.apache.parquet.io.api.Binary,org.apache.parquet.io.api.Binary)#org/apache/parquet/column/statistics/Statistics/markAsNotEmpty()
org/apache/parquet/column/statistics/BinaryStatistics/getMaxBytes()#org/apache/parquet/io/api/Binary/getBytes()
org/apache/parquet/column/statistics/BinaryStatistics/initializeStats(org.apache.parquet.io.api.Binary,org.apache.parquet.io.api.Binary)#org/apache/parquet/io/api/Binary/copy()
org/apache/parquet/column/statistics/BinaryStatistics/initializeStats(org.apache.parquet.io.api.Binary,org.apache.parquet.io.api.Binary)#org/apache/parquet/column/statistics/Statistics/markAsNotEmpty()
org/apache/parquet/column/statistics/BinaryStatistics/isSmallerThan(long)#org/apache/parquet/io/api/Binary/length()
org/apache/parquet/column/statistics/BinaryStatistics/isSmallerThan(long)#org/apache/parquet/column/statistics/Statistics/hasNonNullValue()
org/apache/parquet/column/statistics/BinaryStatistics/getMinBytes()#org/apache/parquet/io/api/Binary/getBytes()
org/apache/parquet/column/statistics/BinaryStatistics/toString()#org/apache/parquet/io/api/Binary/toStringUsingUTF8()
org/apache/parquet/column/statistics/BinaryStatistics/toString()#org/apache/parquet/column/statistics/Statistics/hasNonNullValue()
org/apache/parquet/column/statistics/BinaryStatistics/toString()#java/lang/String/format(java.lang.String,java.lang.Object[])
org/apache/parquet/column/statistics/BinaryStatistics/toString()#org/apache/parquet/column/statistics/Statistics/getNumNulls()
org/apache/parquet/column/statistics/BinaryStatistics/toString()#org/apache/parquet/column/statistics/Statistics/isEmpty()
org/apache/parquet/column/statistics/BinaryStatistics/updateStats(org.apache.parquet.io.api.Binary,org.apache.parquet.io.api.Binary)#org/apache/parquet/io/api/Binary/compareTo(org.apache.parquet.io.api.Binary)
org/apache/parquet/column/statistics/BinaryStatistics/updateStats(org.apache.parquet.io.api.Binary,org.apache.parquet.io.api.Binary)#org/apache/parquet/io/api/Binary/copy()
org/apache/parquet/column/statistics/BinaryStatistics/updateStats(org.apache.parquet.io.api.Binary)#org/apache/parquet/column/statistics/Statistics/hasNonNullValue()
org/apache/parquet/column/statistics/BinaryStatistics/updateStats(org.apache.parquet.io.api.Binary)#org/apache/parquet/column/statistics/BinaryStatistics/updateStats(org.apache.parquet.io.api.Binary,org.apache.parquet.io.api.Binary)
org/apache/parquet/column/statistics/BinaryStatistics/updateStats(org.apache.parquet.io.api.Binary)#org/apache/parquet/column/statistics/BinaryStatistics/initializeStats(org.apache.parquet.io.api.Binary,org.apache.parquet.io.api.Binary)
org/apache/parquet/column/statistics/BinaryStatistics/mergeStatisticsMinMax(org.apache.parquet.column.statistics.Statistics)#org/apache/parquet/column/statistics/Statistics/hasNonNullValue()
org/apache/parquet/column/statistics/BinaryStatistics/mergeStatisticsMinMax(org.apache.parquet.column.statistics.Statistics)#org/apache/parquet/column/statistics/BinaryStatistics/initializeStats(org.apache.parquet.io.api.Binary,org.apache.parquet.io.api.Binary)
org/apache/parquet/column/statistics/BinaryStatistics/mergeStatisticsMinMax(org.apache.parquet.column.statistics.Statistics)#org/apache/parquet/column/statistics/BinaryStatistics/getMin()
org/apache/parquet/column/statistics/BinaryStatistics/mergeStatisticsMinMax(org.apache.parquet.column.statistics.Statistics)#org/apache/parquet/column/statistics/BinaryStatistics/getMax()
org/apache/parquet/column/statistics/BinaryStatistics/mergeStatisticsMinMax(org.apache.parquet.column.statistics.Statistics)#org/apache/parquet/column/statistics/BinaryStatistics/updateStats(org.apache.parquet.io.api.Binary,org.apache.parquet.io.api.Binary)
org/apache/parquet/hadoop/thrift/AbstractThriftWriteSupport/init(java.lang.Class)#java/lang/Class/isAssignableFrom(java.lang.Class)
org/apache/parquet/hadoop/thrift/AbstractThriftWriteSupport/init(java.lang.Class)#org/apache/parquet/hadoop/api/WriteSupport/WriteContext/WriteContext(org.apache.parquet.schema.MessageType,java.util.Map)
org/apache/parquet/hadoop/thrift/AbstractThriftWriteSupport/init(java.lang.Class)#org/apache/parquet/thrift/ThriftMetaData/ThriftMetaData(java.lang.String,org.apache.parquet.thrift.struct.ThriftType.StructType)
org/apache/parquet/hadoop/thrift/AbstractThriftWriteSupport/init(java.lang.Class)#java/lang/Class/getName()
org/apache/parquet/hadoop/thrift/AbstractThriftWriteSupport/init(java.lang.Class)#org/apache/parquet/thrift/ThriftSchemaConverter/convertWithoutProjection(org.apache.parquet.thrift.struct.ThriftType.StructType)
org/apache/parquet/hadoop/thrift/AbstractThriftWriteSupport/init(java.lang.Class)#org/apache/parquet/hadoop/thrift/AbstractThriftWriteSupport/getThriftStruct()
org/apache/parquet/hadoop/thrift/AbstractThriftWriteSupport/init(java.lang.Class)#org/apache/parquet/thrift/ThriftMetaData/toExtraMetaData()
org/apache/parquet/hadoop/thrift/AbstractThriftWriteSupport/init(java.lang.Class)#org/apache/parquet/hadoop/thrift/AbstractThriftWriteSupport/isPigLoaded()
org/apache/parquet/hadoop/thrift/AbstractThriftWriteSupport/init(java.lang.Class)#org/apache/parquet/pig/PigMetaData/addToMetaData(java.util.Map)
org/apache/parquet/hadoop/thrift/AbstractThriftWriteSupport/init(java.lang.Class)#org/apache/parquet/pig/PigMetaData/PigMetaData(org.apache.parquet.pig.Schema)
org/apache/parquet/hadoop/thrift/AbstractThriftWriteSupport/setGenericThriftClass(org.apache.parquet.hadoop.Configuration,java.lang.Class)#java/lang/Class/getName()
org/apache/parquet/hadoop/thrift/AbstractThriftWriteSupport/getGenericThriftClass(org.apache.parquet.hadoop.Configuration)#java/lang/Class/forName(java.lang.String)
org/apache/parquet/hadoop/thrift/AbstractThriftWriteSupport/getGenericThriftClass(org.apache.parquet.hadoop.Configuration)#org/apache/parquet/hadoop/BadConfigurationException/BadConfigurationException(java.lang.String,java.lang.Throwable)
org/apache/parquet/hadoop/thrift/AbstractThriftWriteSupport/getGenericThriftClass(org.apache.parquet.hadoop.Configuration)#org/apache/parquet/hadoop/BadConfigurationException/BadConfigurationException(java.lang.String)
org/apache/parquet/hadoop/thrift/AbstractThriftWriteSupport/init(org.apache.parquet.hadoop.Configuration)#org/apache/parquet/hadoop/thrift/AbstractThriftWriteSupport/init(java.lang.Class)
org/apache/parquet/hadoop/thrift/AbstractThriftWriteSupport/init(org.apache.parquet.hadoop.Configuration)#org/apache/parquet/hadoop/thrift/AbstractThriftWriteSupport/getGenericThriftClass(org.apache.parquet.hadoop.Configuration)
org/apache/parquet/hadoop/thrift/AbstractThriftWriteSupport/isPigLoaded()#java/lang/Class/forName(java.lang.String)
org/apache/parquet/hadoop/thrift/AbstractThriftWriteSupport/prepareForWrite(org.apache.parquet.io.api.RecordConsumer)#org/apache/parquet/io/ColumnIOFactory/getColumnIO(org.apache.parquet.schema.MessageType)
org/apache/parquet/hadoop/thrift/AbstractThriftWriteSupport/prepareForWrite(org.apache.parquet.io.api.RecordConsumer)#org/apache/parquet/thrift/ParquetWriteProtocol/ParquetWriteProtocol(org.apache.parquet.io.api.RecordConsumer,org.apache.parquet.io.MessageColumnIO,org.apache.parquet.thrift.struct.ThriftType.StructType)
org/apache/parquet/hadoop/thrift/AbstractThriftWriteSupport/prepareForWrite(org.apache.parquet.io.api.RecordConsumer)#org/apache/parquet/io/ColumnIOFactory/ColumnIOFactory()
org/apache/parquet/hadoop/metadata/Canonicalizer/canonicalize(T)#java/util/concurrent/ConcurrentHashMap/putIfAbsent(K,V)
org/apache/parquet/hadoop/metadata/Canonicalizer/canonicalize(T)#org/apache/parquet/hadoop/metadata/Canonicalizer/toCanonical(T)
org/apache/parquet/hadoop/metadata/Canonicalizer/canonicalize(T)#java/util/concurrent/ConcurrentHashMap/get(java.lang.Object)
org/apache/parquet/version/Generator/main(java.lang.String[])#org/apache/parquet/version/VersionGenerator/main(java.lang.String[])
org/apache/parquet/tools/read/SimpleRecordConverter/StringConverter/addBinary(org.apache.parquet.io.api.Binary)#org/apache/parquet/io/api/Binary/toStringUsingUTF8()
org/apache/parquet/tools/read/SimpleRecordConverter/StringConverter/addBinary(org.apache.parquet.io.api.Binary)#org/apache/parquet/tools/read/SimpleRecord/add(java.lang.String,java.lang.Object)
org/apache/parquet/proto/ProtoWriteSupport/MessageWriter/writeAllFields(org.apache.parquet.proto.MessageOrBuilder)#org/apache/parquet/proto/ProtoWriteSupport/FieldWriter/writeField(java.lang.Object)
org/apache/parquet/proto/ProtoWriteSupport/MessageWriter/writeAllFields(org.apache.parquet.proto.MessageOrBuilder)#java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)
org/apache/parquet/proto/ProtoWriteSupport/MessageWriter/writeTopLevelMessage(java.lang.Object)#org/apache/parquet/proto/ProtoWriteSupport/MessageWriter/writeAllFields(org.apache.parquet.proto.MessageOrBuilder)
org/apache/parquet/proto/ProtoWriteSupport/MessageWriter/writeField(java.lang.Object)#org/apache/parquet/proto/ProtoWriteSupport/MessageWriter/writeAllFields(org.apache.parquet.proto.MessageOrBuilder)
org/apache/parquet/proto/ProtoWriteSupport/MessageWriter/writeField(java.lang.Object)#org/apache/parquet/io/api/RecordConsumer/startField(java.lang.String,int)
org/apache/parquet/proto/ProtoWriteSupport/MessageWriter/writeField(java.lang.Object)#org/apache/parquet/io/api/RecordConsumer/endField(java.lang.String,int)
org/apache/parquet/proto/ProtoWriteSupport/MessageWriter/writeField(java.lang.Object)#org/apache/parquet/io/api/RecordConsumer/startGroup()
org/apache/parquet/proto/ProtoWriteSupport/MessageWriter/writeField(java.lang.Object)#org/apache/parquet/io/api/RecordConsumer/endGroup()
org/apache/parquet/proto/ProtoWriteSupport/MessageWriter/writeRawValue(java.lang.Object)#org/apache/parquet/proto/ProtoWriteSupport/MessageWriter/writeAllFields(org.apache.parquet.proto.MessageOrBuilder)
org/apache/parquet/proto/ProtoWriteSupport/MessageWriter/writeRawValue(java.lang.Object)#org/apache/parquet/io/api/RecordConsumer/startGroup()
org/apache/parquet/proto/ProtoWriteSupport/MessageWriter/writeRawValue(java.lang.Object)#org/apache/parquet/io/api/RecordConsumer/endGroup()
org/apache/parquet/proto/ProtoWriteSupport/MessageWriter/createWriter(Descriptors.FieldDescriptor,org.apache.parquet.schema.Type)#org/apache/parquet/proto/ProtoWriteSupport/IntWriter/IntWriter()
org/apache/parquet/proto/ProtoWriteSupport/MessageWriter/createWriter(Descriptors.FieldDescriptor,org.apache.parquet.schema.Type)#org/apache/parquet/schema/Type/asGroupType()
org/apache/parquet/proto/ProtoWriteSupport/MessageWriter/createWriter(Descriptors.FieldDescriptor,org.apache.parquet.schema.Type)#org/apache/parquet/proto/ProtoWriteSupport/MessageWriter/MessageWriter(Descriptors.Descriptor,org.apache.parquet.schema.GroupType)
org/apache/parquet/proto/ProtoWriteSupport/MessageWriter/createWriter(Descriptors.FieldDescriptor,org.apache.parquet.schema.Type)#org/apache/parquet/proto/ProtoWriteSupport/unknownType(Descriptors.FieldDescriptor)
org/apache/parquet/proto/ProtoWriteSupport/MessageWriter/createWriter(Descriptors.FieldDescriptor,org.apache.parquet.schema.Type)#org/apache/parquet/proto/ProtoWriteSupport/BooleanWriter/BooleanWriter()
org/apache/parquet/proto/ProtoWriteSupport/MessageWriter/createWriter(Descriptors.FieldDescriptor,org.apache.parquet.schema.Type)#org/apache/parquet/proto/ProtoWriteSupport/EnumWriter/EnumWriter()
org/apache/parquet/proto/ProtoWriteSupport/MessageWriter/createWriter(Descriptors.FieldDescriptor,org.apache.parquet.schema.Type)#org/apache/parquet/proto/ProtoWriteSupport/FloatWriter/FloatWriter()
org/apache/parquet/proto/ProtoWriteSupport/MessageWriter/createWriter(Descriptors.FieldDescriptor,org.apache.parquet.schema.Type)#org/apache/parquet/proto/ProtoWriteSupport/LongWriter/LongWriter()
org/apache/parquet/proto/ProtoWriteSupport/MessageWriter/createWriter(Descriptors.FieldDescriptor,org.apache.parquet.schema.Type)#org/apache/parquet/proto/ProtoWriteSupport/BinaryWriter/BinaryWriter()
org/apache/parquet/proto/ProtoWriteSupport/MessageWriter/createWriter(Descriptors.FieldDescriptor,org.apache.parquet.schema.Type)#org/apache/parquet/proto/ProtoWriteSupport/StringWriter/StringWriter()
org/apache/parquet/proto/ProtoWriteSupport/MessageWriter/createWriter(Descriptors.FieldDescriptor,org.apache.parquet.schema.Type)#org/apache/parquet/proto/ProtoWriteSupport/DoubleWriter/DoubleWriter()
org/apache/parquet/column/values/plain/FixedLenByteArrayPlainValuesReader/initFromPage(int,java.nio.ByteBuffer,int)#java/nio/Buffer/limit()
org/apache/parquet/column/values/plain/FixedLenByteArrayPlainValuesReader/readBytes()#org/apache/parquet/io/ParquetDecodingException/ParquetDecodingException(java.lang.String,java.lang.Throwable)
org/apache/parquet/column/values/plain/FixedLenByteArrayPlainValuesReader/readBytes()#org/apache/parquet/io/api/Binary/fromConstantByteBuffer(java.nio.ByteBuffer,int,int)
org/apache/parquet/hadoop/codec/SnappyDecompressor/reset()#java/nio/Buffer/limit(int)
org/apache/parquet/hadoop/codec/SnappyDecompressor/reset()#java/nio/Buffer/rewind()
org/apache/parquet/hadoop/codec/SnappyDecompressor/needsInput()#java/nio/Buffer/hasRemaining()
org/apache/parquet/hadoop/codec/SnappyDecompressor/finished()#java/nio/Buffer/hasRemaining()
org/apache/parquet/hadoop/codec/SnappyDecompressor/decompress(byte[],int,int)#java/nio/Buffer/clear()
org/apache/parquet/hadoop/codec/SnappyDecompressor/decompress(byte[],int,int)#java/nio/ByteBuffer/get(byte[],int,int)
org/apache/parquet/hadoop/codec/SnappyDecompressor/decompress(byte[],int,int)#java/nio/Buffer/limit(int)
org/apache/parquet/hadoop/codec/SnappyDecompressor/decompress(byte[],int,int)#java/nio/Buffer/remaining()
org/apache/parquet/hadoop/codec/SnappyDecompressor/decompress(byte[],int,int)#org/apache/parquet/Preconditions/checkArgument(boolean,java.lang.String)
org/apache/parquet/hadoop/codec/SnappyDecompressor/decompress(byte[],int,int)#java/nio/ByteBuffer/allocateDirect(int)
org/apache/parquet/hadoop/codec/SnappyDecompressor/decompress(byte[],int,int)#java/nio/Buffer/rewind()
org/apache/parquet/hadoop/codec/SnappyDecompressor/decompress(byte[],int,int)#java/nio/Buffer/hasRemaining()
org/apache/parquet/hadoop/codec/SnappyDecompressor/decompress(byte[],int,int)#java/nio/Buffer/position()
org/apache/parquet/hadoop/codec/SnappyDecompressor/decompress(byte[],int,int)#org/apache/parquet/hadoop/codec/SnappyUtil/validateBuffer(byte[],int,int)
org/apache/parquet/hadoop/codec/SnappyDecompressor/decompress(byte[],int,int)#java/nio/Buffer/capacity()
org/apache/parquet/hadoop/codec/SnappyDecompressor/decompress(byte[],int,int)#java/lang/Math/min(int,int)
org/apache/parquet/hadoop/codec/SnappyDecompressor/setInput(byte[],int,int)#java/nio/Buffer/limit(int)
org/apache/parquet/hadoop/codec/SnappyDecompressor/setInput(byte[],int,int)#java/nio/ByteBuffer/put(java.nio.ByteBuffer)
org/apache/parquet/hadoop/codec/SnappyDecompressor/setInput(byte[],int,int)#java/nio/ByteBuffer/allocateDirect(int)
org/apache/parquet/hadoop/codec/SnappyDecompressor/setInput(byte[],int,int)#java/nio/Buffer/capacity()
org/apache/parquet/hadoop/codec/SnappyDecompressor/setInput(byte[],int,int)#java/nio/Buffer/position()
org/apache/parquet/hadoop/codec/SnappyDecompressor/setInput(byte[],int,int)#org/apache/parquet/hadoop/codec/SnappyUtil/validateBuffer(byte[],int,int)
org/apache/parquet/hadoop/codec/SnappyDecompressor/setInput(byte[],int,int)#java/nio/ByteBuffer/put(byte[],int,int)
org/apache/parquet/hadoop/codec/SnappyDecompressor/setInput(byte[],int,int)#java/nio/Buffer/rewind()
org/apache/parquet/avro/AvroConverters/FieldByteArrayConverter/convert(org.apache.parquet.io.api.Binary)#org/apache/parquet/io/api/Binary/getBytes()
org/apache/parquet/io/api/Binary/ByteArraySliceBackedBinary/equals(byte[],int,int)#org/apache/parquet/io/api/Binary/equals(byte[],int,int,byte[],int,int)
org/apache/parquet/io/api/Binary/ByteArraySliceBackedBinary/equals(org.apache.parquet.io.api.Binary)#org/apache/parquet/io/api/Binary/equals(byte[],int,int)
org/apache/parquet/io/api/Binary/ByteArraySliceBackedBinary/getBytes()#java/util/Arrays/copyOfRange(byte[],int,int)
org/apache/parquet/io/api/Binary/ByteArraySliceBackedBinary/compareTo(java.nio.ByteBuffer,int,int)#org/apache/parquet/io/api/Binary/compareByteArrayToByteBuffer(byte[],int,int,java.nio.ByteBuffer,int,int)
org/apache/parquet/io/api/Binary/ByteArraySliceBackedBinary/toStringUsingUTF8()#java/nio/charset/Charset/decode(java.nio.ByteBuffer)
org/apache/parquet/io/api/Binary/ByteArraySliceBackedBinary/toStringUsingUTF8()#java/nio/ByteBuffer/wrap(byte[],int,int)
org/apache/parquet/io/api/Binary/ByteArraySliceBackedBinary/toStringUsingUTF8()#java/nio/CharBuffer/toString()
org/apache/parquet/io/api/Binary/ByteArraySliceBackedBinary/toByteBuffer()#java/nio/ByteBuffer/wrap(byte[],int,int)
org/apache/parquet/io/api/Binary/ByteArraySliceBackedBinary/compareTo(byte[],int,int)#org/apache/parquet/io/api/Binary/compareTwoByteArrays(byte[],int,int,byte[],int,int)
org/apache/parquet/io/api/Binary/ByteArraySliceBackedBinary/compareTo(org.apache.parquet.io.api.Binary)#org/apache/parquet/io/api/Binary/compareTo(byte[],int,int)
org/apache/parquet/io/api/Binary/ByteArraySliceBackedBinary/writeTo(java.io.DataOutput)#java/io/DataOutput/write(byte[],int,int)
org/apache/parquet/io/api/Binary/ByteArraySliceBackedBinary/slice(int,int)#org/apache/parquet/io/api/Binary/fromReusedByteArray(byte[],int,int)
org/apache/parquet/io/api/Binary/ByteArraySliceBackedBinary/slice(int,int)#org/apache/parquet/io/api/Binary/fromConstantByteArray(byte[],int,int)
org/apache/parquet/io/api/Binary/ByteArraySliceBackedBinary/equals(java.nio.ByteBuffer,int,int)#org/apache/parquet/io/api/Binary/equals(byte[],int,int,java.nio.ByteBuffer,int,int)
org/apache/parquet/io/api/Binary/ByteArraySliceBackedBinary/writeTo(java.io.OutputStream)#java/io/OutputStream/write(byte[],int,int)
org/apache/parquet/io/api/Binary/ByteArraySliceBackedBinary/hashCode()#org/apache/parquet/io/api/Binary/hashCode(byte[],int,int)
org/apache/parquet/io/api/Binary/ByteArraySliceBackedBinary/getBytesUnsafe()#org/apache/parquet/io/api/Binary/ByteArraySliceBackedBinary/getBytes()
org/apache/parquet/thrift/struct/CompatibilityRunner/generateJson(java.util.LinkedList)#java/lang/Class/forName(java.lang.String)
org/apache/parquet/thrift/struct/CompatibilityRunner/generateJson(java.util.LinkedList)#java/io/File/File(java.io.File,java.lang.String)
org/apache/parquet/thrift/struct/CompatibilityRunner/generateJson(java.util.LinkedList)#org/apache/parquet/thrift/ThriftSchemaConverter/toStructType(java.lang.Class)
org/apache/parquet/thrift/struct/CompatibilityRunner/generateJson(java.util.LinkedList)#java/io/File/File(java.lang.String)
org/apache/parquet/thrift/struct/CompatibilityRunner/generateJson(java.util.LinkedList)#java/util/LinkedList/pollFirst()
org/apache/parquet/thrift/struct/CompatibilityRunner/compareJson(java.util.LinkedList)#org/apache/parquet/thrift/struct/CompatibilityChecker/checkCompatibility(org.apache.parquet.thrift.struct.ThriftType.StructType,org.apache.parquet.thrift.struct.ThriftType.StructType)
org/apache/parquet/thrift/struct/CompatibilityRunner/compareJson(java.util.LinkedList)#org/apache/parquet/thrift/struct/CompatibilityReport/hasEmptyStruct()
org/apache/parquet/thrift/struct/CompatibilityRunner/compareJson(java.util.LinkedList)#java/io/PrintStream/println(java.lang.String)
org/apache/parquet/thrift/struct/CompatibilityRunner/compareJson(java.util.LinkedList)#java/util/LinkedList/pollFirst()
org/apache/parquet/thrift/struct/CompatibilityRunner/compareJson(java.util.LinkedList)#org/apache/parquet/thrift/struct/CompatibilityRunner/checkExist(java.io.File)
org/apache/parquet/thrift/struct/CompatibilityRunner/compareJson(java.util.LinkedList)#java/io/PrintStream/println(java.lang.Object)
org/apache/parquet/thrift/struct/CompatibilityRunner/compareJson(java.util.LinkedList)#org/apache/parquet/thrift/struct/CompatibilityChecker/CompatibilityChecker()
org/apache/parquet/thrift/struct/CompatibilityRunner/compareJson(java.util.LinkedList)#org/apache/parquet/thrift/struct/CompatibilityReport/getMessages()
org/apache/parquet/thrift/struct/CompatibilityRunner/compareJson(java.util.LinkedList)#java/lang/System/exit(int)
org/apache/parquet/thrift/struct/CompatibilityRunner/compareJson(java.util.LinkedList)#java/io/File/File(java.lang.String)
org/apache/parquet/thrift/struct/CompatibilityRunner/main(java.lang.String[])#org/apache/parquet/thrift/struct/CompatibilityRunner/generateJson(java.util.LinkedList)
org/apache/parquet/thrift/struct/CompatibilityRunner/main(java.lang.String[])#org/apache/parquet/thrift/struct/CompatibilityRunner/compareJson(java.util.LinkedList)
org/apache/parquet/thrift/struct/CompatibilityRunner/main(java.lang.String[])#java/util/Arrays/asList(T[])
org/apache/parquet/thrift/struct/CompatibilityRunner/main(java.lang.String[])#java/lang/String/equals(java.lang.Object)
org/apache/parquet/thrift/struct/CompatibilityRunner/main(java.lang.String[])#java/util/LinkedList/pollFirst()
org/apache/parquet/thrift/struct/CompatibilityRunner/main(java.lang.String[])#java/util/LinkedList/LinkedList(java.util.Collection)
org/apache/parquet/thrift/struct/CompatibilityRunner/checkExist(java.io.File)#java/io/File/exists()
org/apache/parquet/thrift/struct/CompatibilityRunner/checkExist(java.io.File)#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/apache/parquet/thrift/struct/ThriftType/EnumValue/equals(java.lang.Object)#java/lang/String/equals(java.lang.Object)
org/apache/parquet/thrift/struct/ThriftType/EnumValue/hashCode()#java/lang/String/hashCode()
org/apache/parquet/io/EmptyRecordReader/read()#org/apache/parquet/io/api/GroupConverter/end()
org/apache/parquet/io/EmptyRecordReader/read()#org/apache/parquet/io/api/GroupConverter/start()
org/apache/parquet/io/EmptyRecordReader/read()#org/apache/parquet/io/api/RecordMaterializer/getCurrentRecord()
org/apache/parquet/tools/read/SimpleRecordConverter/createConverter(org.apache.parquet.schema.Type)#org/apache/parquet/schema/Type/isPrimitive()
org/apache/parquet/tools/read/SimpleRecordConverter/createConverter(org.apache.parquet.schema.Type)#org/apache/parquet/schema/Type/getName()
org/apache/parquet/tools/read/SimpleRecordConverter/createConverter(org.apache.parquet.schema.Type)#org/apache/parquet/schema/Type/getOriginalType()
org/apache/parquet/tools/read/SimpleRecordConverter/createConverter(org.apache.parquet.schema.Type)#org/apache/parquet/tools/read/SimpleRecordConverter/SimplePrimitiveConverter/SimplePrimitiveConverter(java.lang.String)
org/apache/parquet/tools/read/SimpleRecordConverter/createConverter(org.apache.parquet.schema.Type)#org/apache/parquet/tools/read/SimpleRecordConverter/StringConverter/StringConverter(java.lang.String)
org/apache/parquet/tools/read/SimpleRecordConverter/createConverter(org.apache.parquet.schema.Type)#org/apache/parquet/tools/read/SimpleRecordConverter/SimpleRecordConverter(org.apache.parquet.schema.GroupType,java.lang.String,org.apache.parquet.tools.read.SimpleRecordConverter)
org/apache/parquet/tools/read/SimpleRecordConverter/createConverter(org.apache.parquet.schema.Type)#org/apache/parquet/schema/Type/asGroupType()
org/apache/parquet/tools/read/SimpleRecordConverter/createConverter(org.apache.parquet.schema.Type)#org/apache/parquet/tools/read/SimpleMapRecordConverter/SimpleMapRecordConverter(org.apache.parquet.schema.GroupType,java.lang.String,org.apache.parquet.tools.read.SimpleRecordConverter)
org/apache/parquet/tools/read/SimpleRecordConverter/createConverter(org.apache.parquet.schema.Type)#org/apache/parquet/tools/read/SimpleListRecordConverter/SimpleListRecordConverter(org.apache.parquet.schema.GroupType,java.lang.String,org.apache.parquet.tools.read.SimpleRecordConverter)
org/apache/parquet/tools/read/SimpleRecordConverter/start()#org/apache/parquet/tools/read/SimpleRecord/SimpleRecord()
org/apache/parquet/tools/read/SimpleRecordConverter/end()#org/apache/parquet/tools/read/SimpleRecord/add(java.lang.String,java.lang.Object)
org/apache/parquet/tools/read/SimpleRecordConverter/end()#org/apache/parquet/tools/read/SimpleRecordConverter/getCurrentRecord()
org/apache/parquet/pig/convert/TupleConverter/FieldBooleanConverter/addInt(int)#org/apache/parquet/pig/convert/ParentValueContainer/add(java.lang.Object)
org/apache/parquet/pig/convert/TupleConverter/FieldBooleanConverter/addBinary(org.apache.parquet.io.api.Binary)#org/apache/parquet/io/api/Binary/toStringUsingUTF8()
org/apache/parquet/pig/convert/TupleConverter/FieldBooleanConverter/addBinary(org.apache.parquet.io.api.Binary)#org/apache/parquet/pig/convert/ParentValueContainer/add(java.lang.Object)
org/apache/parquet/pig/convert/TupleConverter/FieldBooleanConverter/addBinary(org.apache.parquet.io.api.Binary)#java/lang/Boolean/parseBoolean(java.lang.String)
org/apache/parquet/pig/convert/TupleConverter/FieldBooleanConverter/addFloat(float)#org/apache/parquet/pig/convert/ParentValueContainer/add(java.lang.Object)
org/apache/parquet/pig/convert/TupleConverter/FieldBooleanConverter/addDouble(double)#org/apache/parquet/pig/convert/ParentValueContainer/add(java.lang.Object)
org/apache/parquet/pig/convert/TupleConverter/FieldBooleanConverter/addLong(long)#org/apache/parquet/pig/convert/ParentValueContainer/add(java.lang.Object)
org/apache/parquet/pig/convert/TupleConverter/FieldBooleanConverter/addBoolean(boolean)#org/apache/parquet/pig/convert/ParentValueContainer/add(java.lang.Object)
org/apache/parquet/thrift/projection/TestStrictFieldProjectionFilter/assertDoesNotMatch(org.apache.parquet.thrift.projection.StrictFieldProjectionFilter,java.lang.String[])#java/lang/String/format(java.lang.String,java.lang.Object[])
org/apache/parquet/thrift/projection/TestStrictFieldProjectionFilter/assertDoesNotMatch(org.apache.parquet.thrift.projection.StrictFieldProjectionFilter,java.lang.String[])#org/apache/parquet/thrift/projection/StrictFieldProjectionFilter/keep(java.lang.String)
org/apache/parquet/thrift/projection/TestStrictFieldProjectionFilter/testProjection()#org/apache/parquet/thrift/projection/TestStrictFieldProjectionFilter/assertDoesNotMatch(org.apache.parquet.thrift.projection.StrictFieldProjectionFilter,java.lang.String[])
org/apache/parquet/thrift/projection/TestStrictFieldProjectionFilter/testProjection()#org/apache/parquet/thrift/projection/StrictFieldProjectionFilter/fromSemicolonDelimitedString(java.lang.String)
org/apache/parquet/thrift/projection/TestStrictFieldProjectionFilter/testProjection()#org/apache/parquet/thrift/projection/TestStrictFieldProjectionFilter/assertMatches(org.apache.parquet.thrift.projection.StrictFieldProjectionFilter,java.lang.String[])
org/apache/parquet/thrift/projection/TestStrictFieldProjectionFilter/testIsStrict()#org/apache/parquet/thrift/projection/TestStrictFieldProjectionFilter/assertDoesNotMatch(org.apache.parquet.thrift.projection.StrictFieldProjectionFilter,java.lang.String[])
org/apache/parquet/thrift/projection/TestStrictFieldProjectionFilter/testIsStrict()#org/apache/parquet/thrift/projection/StrictFieldProjectionFilter/fromSemicolonDelimitedString(java.lang.String)
org/apache/parquet/thrift/projection/TestStrictFieldProjectionFilter/testIsStrict()#org/apache/parquet/thrift/projection/StrictFieldProjectionFilter/assertNoUnmatchedPatterns()
org/apache/parquet/thrift/projection/TestStrictFieldProjectionFilter/testIsStrict()#java/lang/Throwable/getMessage()
org/apache/parquet/thrift/projection/TestStrictFieldProjectionFilter/testIsStrict()#org/apache/parquet/thrift/projection/TestStrictFieldProjectionFilter/assertMatches(org.apache.parquet.thrift.projection.StrictFieldProjectionFilter,java.lang.String[])
org/apache/parquet/thrift/projection/TestStrictFieldProjectionFilter/assertMatches(org.apache.parquet.thrift.projection.StrictFieldProjectionFilter,java.lang.String[])#java/lang/String/format(java.lang.String,java.lang.Object[])
org/apache/parquet/thrift/projection/TestStrictFieldProjectionFilter/assertMatches(org.apache.parquet.thrift.projection.StrictFieldProjectionFilter,java.lang.String[])#org/apache/parquet/thrift/projection/StrictFieldProjectionFilter/keep(java.lang.String)
org/apache/parquet/thrift/projection/TestStrictFieldProjectionFilter/testFromSemicolonDelimitedString()#java/lang/Throwable/getMessage()
org/apache/parquet/thrift/projection/TestStrictFieldProjectionFilter/testFromSemicolonDelimitedString()#org/apache/parquet/thrift/projection/StrictFieldProjectionFilter/parseSemicolonDelimitedString(java.lang.String)
org/apache/parquet/thrift/projection/TestStrictFieldProjectionFilter/testFromSemicolonDelimitedString()#java/util/Arrays/asList(T[])
org/apache/parquet/thrift/projection/TestStrictFieldProjectionFilter/testWarnWhenMultiplePatternsMatch()#org/apache/parquet/thrift/projection/TestStrictFieldProjectionFilter/assertDoesNotMatch(org.apache.parquet.thrift.projection.StrictFieldProjectionFilter,java.lang.String[])
org/apache/parquet/thrift/projection/TestStrictFieldProjectionFilter/testWarnWhenMultiplePatternsMatch()#org/apache/parquet/thrift/projection/TestStrictFieldProjectionFilter/assertMatches(org.apache.parquet.thrift.projection.StrictFieldProjectionFilter,java.lang.String[])
org/apache/parquet/thrift/projection/TestStrictFieldProjectionFilter/testWarnWhenMultiplePatternsMatch()#java/util/Arrays/asList(T[])
org/apache/parquet/thrift/projection/TestStrictFieldProjectionFilter/testWarnWhenMultiplePatternsMatch()#org/apache/parquet/thrift/projection/StrictFieldProjectionFilter/warn(java.lang.String)
org/apache/parquet/encoding/bitpacking/IntBasedBitPackingGenerator/getUnpackShiftString(int,int,boolean)#org/apache/parquet/encoding/bitpacking/IntBasedBitPackingGenerator/align(int,int)
org/apache/parquet/encoding/bitpacking/IntBasedBitPackingGenerator/getPackShiftString(int,int,int,int,boolean)#org/apache/parquet/encoding/bitpacking/IntBasedBitPackingGenerator/align(int,int)
org/apache/parquet/encoding/bitpacking/IntBasedBitPackingGenerator/generateClass(java.io.FileWriter,int,boolean)#java/io/Writer/append(java.lang.CharSequence)
org/apache/parquet/encoding/bitpacking/IntBasedBitPackingGenerator/generateClass(java.io.FileWriter,int,boolean)#org/apache/parquet/encoding/bitpacking/IntBasedBitPackingGenerator/getUnpackShiftString(int,int,boolean)
org/apache/parquet/encoding/bitpacking/IntBasedBitPackingGenerator/generateClass(java.io.FileWriter,int,boolean)#org/apache/parquet/encoding/bitpacking/IntBasedBitPackingGenerator/getPackShiftString(int,int,int,int,boolean)
org/apache/parquet/encoding/bitpacking/IntBasedBitPackingGenerator/generateClass(java.io.FileWriter,int,boolean)#org/apache/parquet/encoding/bitpacking/IntBasedBitPackingGenerator/align(int,int)
org/apache/parquet/encoding/bitpacking/IntBasedBitPackingGenerator/main(java.lang.String[])#org/apache/parquet/encoding/bitpacking/IntBasedBitPackingGenerator/generateScheme(java.lang.String,boolean,java.lang.String)
org/apache/parquet/encoding/bitpacking/IntBasedBitPackingGenerator/align(int,int)#java/lang/StringBuilder/append(java.lang.String)
org/apache/parquet/encoding/bitpacking/IntBasedBitPackingGenerator/align(int,int)#java/lang/String/length()
org/apache/parquet/encoding/bitpacking/IntBasedBitPackingGenerator/align(int,int)#java/lang/StringBuilder/StringBuilder()
org/apache/parquet/encoding/bitpacking/IntBasedBitPackingGenerator/align(int,int)#java/lang/StringBuilder/toString()
org/apache/parquet/encoding/bitpacking/IntBasedBitPackingGenerator/align(int,int)#java/lang/String/valueOf(int)
org/apache/parquet/encoding/bitpacking/IntBasedBitPackingGenerator/generateScheme(java.lang.String,boolean,java.lang.String)#java/io/Writer/append(java.lang.CharSequence)
org/apache/parquet/encoding/bitpacking/IntBasedBitPackingGenerator/generateScheme(java.lang.String,boolean,java.lang.String)#java/io/File/getAbsoluteFile()
org/apache/parquet/encoding/bitpacking/IntBasedBitPackingGenerator/generateScheme(java.lang.String,boolean,java.lang.String)#java/io/File/File(java.lang.String)
org/apache/parquet/encoding/bitpacking/IntBasedBitPackingGenerator/generateScheme(java.lang.String,boolean,java.lang.String)#java/io/OutputStreamWriter/close()
org/apache/parquet/encoding/bitpacking/IntBasedBitPackingGenerator/generateScheme(java.lang.String,boolean,java.lang.String)#java/io/File/mkdirs()
org/apache/parquet/encoding/bitpacking/IntBasedBitPackingGenerator/generateScheme(java.lang.String,boolean,java.lang.String)#java/io/FileWriter/FileWriter(java.io.File)
org/apache/parquet/encoding/bitpacking/IntBasedBitPackingGenerator/generateScheme(java.lang.String,boolean,java.lang.String)#java/io/File/getParentFile()
org/apache/parquet/encoding/bitpacking/IntBasedBitPackingGenerator/generateScheme(java.lang.String,boolean,java.lang.String)#java/io/File/exists()
org/apache/parquet/encoding/bitpacking/IntBasedBitPackingGenerator/generateScheme(java.lang.String,boolean,java.lang.String)#org/apache/parquet/encoding/bitpacking/IntBasedBitPackingGenerator/generateClass(java.io.FileWriter,int,boolean)
org/apache/parquet/avro/AvroParquetInputFormat/setRequestedProjection(org.apache.parquet.hadoop.Job,org.apache.parquet.pig.Schema)#org/apache/parquet/hadoop/util/ContextUtil/getConfiguration(org.apache.parquet.hadoop.util.JobContext)
org/apache/parquet/avro/AvroParquetInputFormat/setRequestedProjection(org.apache.parquet.hadoop.Job,org.apache.parquet.pig.Schema)#org/apache/parquet/avro/AvroReadSupport/setRequestedProjection(org.apache.parquet.hadoop.Configuration,org.apache.parquet.pig.Schema)
org/apache/parquet/avro/AvroParquetInputFormat/setAvroDataSupplier(org.apache.parquet.hadoop.Job,java.lang.Class)#org/apache/parquet/hadoop/util/ContextUtil/getConfiguration(org.apache.parquet.hadoop.util.JobContext)
org/apache/parquet/avro/AvroParquetInputFormat/setAvroDataSupplier(org.apache.parquet.hadoop.Job,java.lang.Class)#org/apache/parquet/avro/AvroReadSupport/setAvroDataSupplier(org.apache.parquet.hadoop.Configuration,java.lang.Class)
org/apache/parquet/avro/AvroParquetInputFormat/setAvroReadSchema(org.apache.parquet.hadoop.Job,org.apache.parquet.pig.Schema)#org/apache/parquet/avro/AvroReadSupport/setAvroReadSchema(org.apache.parquet.hadoop.Configuration,org.apache.parquet.pig.Schema)
org/apache/parquet/avro/AvroParquetInputFormat/setAvroReadSchema(org.apache.parquet.hadoop.Job,org.apache.parquet.pig.Schema)#org/apache/parquet/hadoop/util/ContextUtil/getConfiguration(org.apache.parquet.hadoop.util.JobContext)
org/apache/parquet/filter2/recordlevel/IncrementallyUpdatedFilterPredicate/Or/accept(org.apache.parquet.filter2.recordlevel.IncrementallyUpdatedFilterPredicate.Visitor)#org/apache/parquet/filter2/recordlevel/IncrementallyUpdatedFilterPredicate/Visitor/visit(org.apache.parquet.filter2.recordlevel.IncrementallyUpdatedFilterPredicate.Or)
org/apache/parquet/proto/ProtoReadSupport/init(org.apache.parquet.hadoop.api.InitContext)#java/lang/String/trim()
org/apache/parquet/proto/ProtoReadSupport/init(org.apache.parquet.hadoop.api.InitContext)#org/apache/parquet/hadoop/api/ReadSupport/ReadContext/ReadContext(org.apache.parquet.schema.MessageType)
org/apache/parquet/proto/ProtoReadSupport/init(org.apache.parquet.hadoop.api.InitContext)#org/apache/parquet/hadoop/api/InitContext/getFileSchema()
org/apache/parquet/proto/ProtoReadSupport/init(org.apache.parquet.hadoop.api.InitContext)#java/lang/String/isEmpty()
org/apache/parquet/proto/ProtoReadSupport/init(org.apache.parquet.hadoop.api.InitContext)#org/apache/parquet/hadoop/api/InitContext/getConfiguration()
org/apache/parquet/proto/ProtoReadSupport/init(org.apache.parquet.hadoop.api.InitContext)#org/apache/parquet/hadoop/api/ReadSupport/getSchemaForRead(org.apache.parquet.schema.MessageType,java.lang.String)
org/apache/parquet/proto/ProtoReadSupport/prepareForRead(org.apache.parquet.hadoop.Configuration,java.util.Map,org.apache.parquet.schema.MessageType,org.apache.parquet.hadoop.api.ReadSupport.ReadContext)#org/apache/parquet/proto/ProtoRecordMaterializer/ProtoRecordMaterializer(org.apache.parquet.schema.MessageType,java.lang.Class)
org/apache/parquet/proto/ProtoReadSupport/prepareForRead(org.apache.parquet.hadoop.Configuration,java.util.Map,org.apache.parquet.schema.MessageType,org.apache.parquet.hadoop.api.ReadSupport.ReadContext)#java/util/Map/get(java.lang.Object)
org/apache/parquet/proto/ProtoReadSupport/prepareForRead(org.apache.parquet.hadoop.Configuration,java.util.Map,org.apache.parquet.schema.MessageType,org.apache.parquet.hadoop.api.ReadSupport.ReadContext)#org/apache/parquet/hadoop/api/ReadSupport/ReadContext/getRequestedSchema()
org/apache/parquet/proto/ProtoReadSupport/prepareForRead(org.apache.parquet.hadoop.Configuration,java.util.Map,org.apache.parquet.schema.MessageType,org.apache.parquet.hadoop.api.ReadSupport.ReadContext)#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/apache/parquet/avro/AvroParquetWriter/writeSupport(org.apache.parquet.hadoop.Configuration,org.apache.parquet.pig.Schema,org.apache.parquet.avro.GenericData)#org/apache/parquet/avro/AvroSchemaConverter/convert(org.apache.parquet.pig.Schema)
org/apache/parquet/avro/AvroParquetWriter/writeSupport(org.apache.parquet.hadoop.Configuration,org.apache.parquet.pig.Schema,org.apache.parquet.avro.GenericData)#org/apache/parquet/avro/AvroSchemaConverter/AvroSchemaConverter(org.apache.parquet.hadoop.Configuration)
org/apache/parquet/avro/AvroParquetWriter/writeSupport(org.apache.parquet.hadoop.Configuration,org.apache.parquet.pig.Schema,org.apache.parquet.avro.GenericData)#org/apache/parquet/avro/AvroWriteSupport/AvroWriteSupport(org.apache.parquet.schema.MessageType,org.apache.parquet.pig.Schema,org.apache.parquet.avro.GenericData)
org/apache/parquet/avro/AvroParquetWriter/builder(org.apache.parquet.hadoop.Path)#org/apache/parquet/avro/AvroParquetWriter/Builder/Builder(org.apache.parquet.hadoop.Path)
org/apache/parquet/avro/AvroParquetWriter/writeSupport(org.apache.parquet.pig.Schema,org.apache.parquet.avro.GenericData)#org/apache/parquet/avro/AvroSchemaConverter/AvroSchemaConverter()
org/apache/parquet/avro/AvroParquetWriter/writeSupport(org.apache.parquet.pig.Schema,org.apache.parquet.avro.GenericData)#org/apache/parquet/avro/AvroSchemaConverter/convert(org.apache.parquet.pig.Schema)
org/apache/parquet/avro/AvroParquetWriter/writeSupport(org.apache.parquet.pig.Schema,org.apache.parquet.avro.GenericData)#org/apache/parquet/avro/AvroWriteSupport/AvroWriteSupport(org.apache.parquet.schema.MessageType,org.apache.parquet.pig.Schema,org.apache.parquet.avro.GenericData)
org/apache/parquet/schema/TestTypeUtil/testWriteCheckGroupType()#org/apache/parquet/schema/Types/Builder/named(java.lang.String)
org/apache/parquet/schema/TestTypeUtil/testWriteCheckGroupType()#org/apache/parquet/schema/Types/Builder/as(org.apache.parquet.schema.OriginalType)
org/apache/parquet/schema/TestTypeUtil/testWriteCheckGroupType()#org/apache/parquet/schema/Types/repeatedGroup()
org/apache/parquet/schema/TestTypeUtil/testWriteCheckGroupType()#org/apache/parquet/schema/Types/BaseGroupBuilder/optional(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/schema/TestTypeUtil/testWriteCheckGroupType()#org/apache/parquet/schema/TestTypeBuilders/assertThrows(java.lang.String,java.lang.Class,java.util.concurrent.Callable)
org/apache/parquet/schema/TestTypeUtil/testWriteCheckGroupType()#org/apache/parquet/schema/TestTypeUtil/testWriteCheckGroupType()/$anonymous1/()
org/apache/parquet/schema/TestTypeUtil/testWriteCheckGroupType()#org/apache/parquet/schema/Types/BaseGroupBuilder/required(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/schema/TestTypeUtil/testWriteCheckGroupType()#org/apache/parquet/schema/TypeUtil/checkValidWriteSchema(org.apache.parquet.schema.GroupType)
org/apache/parquet/schema/TestTypeUtil/testWriteCheckMessageType()#org/apache/parquet/schema/Types/buildMessage()
org/apache/parquet/schema/TestTypeUtil/testWriteCheckMessageType()#org/apache/parquet/schema/Types/Builder/named(java.lang.String)
org/apache/parquet/schema/TestTypeUtil/testWriteCheckMessageType()#org/apache/parquet/schema/Types/Builder/as(org.apache.parquet.schema.OriginalType)
org/apache/parquet/schema/TestTypeUtil/testWriteCheckMessageType()#org/apache/parquet/schema/TestTypeUtil/testWriteCheckMessageType()/$anonymous1/()
org/apache/parquet/schema/TestTypeUtil/testWriteCheckMessageType()#org/apache/parquet/schema/Types/BaseGroupBuilder/optional(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/schema/TestTypeUtil/testWriteCheckMessageType()#org/apache/parquet/schema/TestTypeBuilders/assertThrows(java.lang.String,java.lang.Class,java.util.concurrent.Callable)
org/apache/parquet/schema/TestTypeUtil/testWriteCheckMessageType()#org/apache/parquet/schema/Types/BaseGroupBuilder/required(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/schema/TestTypeUtil/testWriteCheckMessageType()#org/apache/parquet/schema/TypeUtil/checkValidWriteSchema(org.apache.parquet.schema.GroupType)
org/apache/parquet/schema/TestTypeUtil/testWriteCheckNestedGroupType()#org/apache/parquet/schema/Types/buildMessage()
org/apache/parquet/schema/TestTypeUtil/testWriteCheckNestedGroupType()#org/apache/parquet/schema/Types/Builder/named(java.lang.String)
org/apache/parquet/schema/TestTypeUtil/testWriteCheckNestedGroupType()#org/apache/parquet/schema/Types/Builder/as(org.apache.parquet.schema.OriginalType)
org/apache/parquet/schema/TestTypeUtil/testWriteCheckNestedGroupType()#org/apache/parquet/schema/Types/BaseGroupBuilder/repeatedGroup()
org/apache/parquet/schema/TestTypeUtil/testWriteCheckNestedGroupType()#org/apache/parquet/schema/TestTypeUtil/testWriteCheckNestedGroupType()/$anonymous1/()
org/apache/parquet/schema/TestTypeUtil/testWriteCheckNestedGroupType()#org/apache/parquet/schema/Types/BaseGroupBuilder/optional(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/schema/TestTypeUtil/testWriteCheckNestedGroupType()#org/apache/parquet/schema/TestTypeBuilders/assertThrows(java.lang.String,java.lang.Class,java.util.concurrent.Callable)
org/apache/parquet/schema/TestTypeUtil/testWriteCheckNestedGroupType()#org/apache/parquet/schema/Types/BaseGroupBuilder/required(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/schema/TestTypeUtil/testWriteCheckNestedGroupType()#org/apache/parquet/schema/TypeUtil/checkValidWriteSchema(org.apache.parquet.schema.GroupType)
org/apache/parquet/pig/PigMetaData/fromMetaData(java.util.Map)#java/util/Map/get(java.lang.Object)
org/apache/parquet/pig/PigMetaData/fromMetaData(java.util.Map)#org/apache/parquet/pig/PigMetaData/PigMetaData(java.lang.String)
org/apache/parquet/pig/PigMetaData/fromMetaData(java.util.Map)#java/util/Map/containsKey(java.lang.Object)
org/apache/parquet/pig/PigMetaData/getPigSchemas(java.util.Map)#java/util/Map/get(java.lang.Object)
org/apache/parquet/pig/PigMetaData/addToMetaData(java.util.Map)#java/util/Map/put(K,V)
org/apache/parquet/avro/TestReflectReadWrite/Pojo/toString()#java/util/Arrays/toString(java.lang.Object[])
org/apache/parquet/avro/TestReflectReadWrite/Pojo/toString()#java/util/Arrays/toString(short[])
org/apache/parquet/avro/TestReflectReadWrite/Pojo/toString()#java/util/Arrays/toString(byte[])
org/apache/parquet/avro/TestReflectReadWrite/Pojo/toString()#java/util/Arrays/toString(int[])
org/apache/parquet/avro/TestReflectReadWrite/Pojo/equals(java.lang.Object)#java/util/Arrays/equals(int[],int[])
org/apache/parquet/avro/TestReflectReadWrite/Pojo/equals(java.lang.Object)#java/util/Arrays/equals(short[],short[])
org/apache/parquet/avro/TestReflectReadWrite/Pojo/equals(java.lang.Object)#java/lang/String/equals(java.lang.Object)
org/apache/parquet/avro/TestReflectReadWrite/Pojo/equals(java.lang.Object)#java/util/Arrays/equals(java.lang.Object[],java.lang.Object[])
org/apache/parquet/avro/TestReflectReadWrite/Pojo/equals(java.lang.Object)#java/util/Arrays/equals(byte[],byte[])
org/apache/parquet/avro/TestReflectReadWrite/Pojo/equals(java.lang.Object)#java/util/Map/equals(java.lang.Object)
org/apache/parquet/avro/TestReflectReadWrite/Pojo/equals(java.lang.Object)#java/util/List/equals(java.lang.Object)
org/apache/parquet/avro/TestGenericLogicalTypes/testReadUUID()#org/apache/parquet/avro/AvroTestUtil/read(org.apache.parquet.avro.GenericData,org.apache.parquet.pig.Schema,java.io.File)
org/apache/parquet/avro/TestGenericLogicalTypes/testReadUUID()#org/apache/parquet/avro/AvroTestUtil/record(java.lang.String,Schema.Field[])
org/apache/parquet/avro/TestGenericLogicalTypes/testReadUUID()#org/apache/parquet/avro/AvroTestUtil/field(java.lang.String,org.apache.parquet.pig.Schema)
org/apache/parquet/avro/TestGenericLogicalTypes/testReadUUID()#java/util/UUID/randomUUID()
org/apache/parquet/avro/TestGenericLogicalTypes/testReadUUID()#java/util/Arrays/asList(T[])
org/apache/parquet/avro/TestGenericLogicalTypes/testReadUUID()#org/apache/parquet/avro/TestGenericLogicalTypes/write(org.apache.parquet.avro.GenericData,org.apache.parquet.pig.Schema,D[])
org/apache/parquet/avro/TestGenericLogicalTypes/testReadUUID()#org/apache/parquet/avro/AvroTestUtil/instance(org.apache.parquet.pig.Schema,java.lang.Object[])
org/apache/parquet/avro/TestGenericLogicalTypes/testReadDecimalFixed()#org/apache/parquet/avro/AvroTestUtil/read(org.apache.parquet.avro.GenericData,org.apache.parquet.pig.Schema,java.io.File)
org/apache/parquet/avro/TestGenericLogicalTypes/testReadDecimalFixed()#org/apache/parquet/avro/AvroTestUtil/record(java.lang.String,Schema.Field[])
org/apache/parquet/avro/TestGenericLogicalTypes/testReadDecimalFixed()#org/apache/parquet/avro/AvroTestUtil/field(java.lang.String,org.apache.parquet.pig.Schema)
org/apache/parquet/avro/TestGenericLogicalTypes/testReadDecimalFixed()#java/util/Arrays/asList(T[])
org/apache/parquet/avro/TestGenericLogicalTypes/testReadDecimalFixed()#org/apache/parquet/avro/TestGenericLogicalTypes/write(org.apache.parquet.avro.GenericData,org.apache.parquet.pig.Schema,D[])
org/apache/parquet/avro/TestGenericLogicalTypes/testReadDecimalFixed()#org/apache/parquet/avro/AvroTestUtil/instance(org.apache.parquet.pig.Schema,java.lang.Object[])
org/apache/parquet/avro/TestGenericLogicalTypes/getFieldValues(java.util.Collection,java.lang.String,java.lang.Class)#java/util/ArrayList/ArrayList()
org/apache/parquet/avro/TestGenericLogicalTypes/getFieldValues(java.util.Collection,java.lang.String,java.lang.Class)#java/lang/Class/cast(java.lang.Object)
org/apache/parquet/avro/TestGenericLogicalTypes/getFieldValues(java.util.Collection,java.lang.String,java.lang.Class)#java/util/List/add(E)
org/apache/parquet/avro/TestGenericLogicalTypes/testWriteNullableUUID()#org/apache/parquet/avro/AvroTestUtil/read(org.apache.parquet.avro.GenericData,org.apache.parquet.pig.Schema,java.io.File)
org/apache/parquet/avro/TestGenericLogicalTypes/testWriteNullableUUID()#org/apache/parquet/avro/AvroTestUtil/optionalField(java.lang.String,org.apache.parquet.pig.Schema)
org/apache/parquet/avro/TestGenericLogicalTypes/testWriteNullableUUID()#java/util/UUID/randomUUID()
org/apache/parquet/avro/TestGenericLogicalTypes/testWriteNullableUUID()#java/util/Arrays/asList(T[])
org/apache/parquet/avro/TestGenericLogicalTypes/testWriteNullableUUID()#org/apache/parquet/avro/AvroTestUtil/instance(org.apache.parquet.pig.Schema,java.lang.Object[])
org/apache/parquet/avro/TestGenericLogicalTypes/testWriteNullableUUID()#org/apache/parquet/avro/TestGenericLogicalTypes/write(org.apache.parquet.pig.Schema,D[])
org/apache/parquet/avro/TestGenericLogicalTypes/testWriteNullableUUID()#org/apache/parquet/avro/AvroTestUtil/record(java.lang.String,Schema.Field[])
org/apache/parquet/avro/TestGenericLogicalTypes/testWriteUUIDReadStringMissingLogicalType()#org/apache/parquet/avro/AvroTestUtil/read(org.apache.parquet.avro.GenericData,org.apache.parquet.pig.Schema,java.io.File)
org/apache/parquet/avro/TestGenericLogicalTypes/testWriteUUIDReadStringMissingLogicalType()#org/apache/parquet/avro/AvroTestUtil/field(java.lang.String,org.apache.parquet.pig.Schema)
org/apache/parquet/avro/TestGenericLogicalTypes/testWriteUUIDReadStringMissingLogicalType()#java/util/UUID/randomUUID()
org/apache/parquet/avro/TestGenericLogicalTypes/testWriteUUIDReadStringMissingLogicalType()#java/util/Arrays/asList(T[])
org/apache/parquet/avro/TestGenericLogicalTypes/testWriteUUIDReadStringMissingLogicalType()#org/apache/parquet/avro/TestGenericLogicalTypes/write(org.apache.parquet.pig.Schema,D[])
org/apache/parquet/avro/TestGenericLogicalTypes/testWriteUUIDReadStringMissingLogicalType()#org/apache/parquet/avro/AvroTestUtil/record(java.lang.String,Schema.Field[])
org/apache/parquet/avro/TestGenericLogicalTypes/testWriteUUIDReadStringMissingLogicalType()#java/lang/Object/Object()
org/apache/parquet/avro/TestGenericLogicalTypes/testWriteUUIDReadStringMissingLogicalType()#org/apache/parquet/avro/AvroTestUtil/instance(org.apache.parquet.pig.Schema,java.lang.Object[])
org/apache/parquet/avro/TestGenericLogicalTypes/testReadDecimalBytes()#org/apache/parquet/avro/AvroTestUtil/read(org.apache.parquet.avro.GenericData,org.apache.parquet.pig.Schema,java.io.File)
org/apache/parquet/avro/TestGenericLogicalTypes/testReadDecimalBytes()#org/apache/parquet/avro/AvroTestUtil/record(java.lang.String,Schema.Field[])
org/apache/parquet/avro/TestGenericLogicalTypes/testReadDecimalBytes()#org/apache/parquet/avro/AvroTestUtil/field(java.lang.String,org.apache.parquet.pig.Schema)
org/apache/parquet/avro/TestGenericLogicalTypes/testReadDecimalBytes()#java/util/Arrays/asList(T[])
org/apache/parquet/avro/TestGenericLogicalTypes/testReadDecimalBytes()#org/apache/parquet/avro/TestGenericLogicalTypes/write(org.apache.parquet.avro.GenericData,org.apache.parquet.pig.Schema,D[])
org/apache/parquet/avro/TestGenericLogicalTypes/testReadDecimalBytes()#org/apache/parquet/avro/AvroTestUtil/instance(org.apache.parquet.pig.Schema,java.lang.Object[])
org/apache/parquet/avro/TestGenericLogicalTypes/testWriteDecimalFixed()#org/apache/parquet/avro/AvroTestUtil/read(org.apache.parquet.avro.GenericData,org.apache.parquet.pig.Schema,java.io.File)
org/apache/parquet/avro/TestGenericLogicalTypes/testWriteDecimalFixed()#org/apache/parquet/avro/AvroTestUtil/field(java.lang.String,org.apache.parquet.pig.Schema)
org/apache/parquet/avro/TestGenericLogicalTypes/testWriteDecimalFixed()#java/util/Arrays/asList(T[])
org/apache/parquet/avro/TestGenericLogicalTypes/testWriteDecimalFixed()#org/apache/parquet/avro/AvroTestUtil/instance(org.apache.parquet.pig.Schema,java.lang.Object[])
org/apache/parquet/avro/TestGenericLogicalTypes/testWriteDecimalFixed()#org/apache/parquet/avro/TestGenericLogicalTypes/write(org.apache.parquet.pig.Schema,D[])
org/apache/parquet/avro/TestGenericLogicalTypes/testWriteDecimalFixed()#org/apache/parquet/avro/AvroTestUtil/record(java.lang.String,Schema.Field[])
org/apache/parquet/avro/TestGenericLogicalTypes/testWriteUUIDReadStringSchema()#org/apache/parquet/avro/AvroTestUtil/read(org.apache.parquet.avro.GenericData,org.apache.parquet.pig.Schema,java.io.File)
org/apache/parquet/avro/TestGenericLogicalTypes/testWriteUUIDReadStringSchema()#org/apache/parquet/avro/AvroTestUtil/field(java.lang.String,org.apache.parquet.pig.Schema)
org/apache/parquet/avro/TestGenericLogicalTypes/testWriteUUIDReadStringSchema()#java/util/UUID/randomUUID()
org/apache/parquet/avro/TestGenericLogicalTypes/testWriteUUIDReadStringSchema()#java/util/Arrays/asList(T[])
org/apache/parquet/avro/TestGenericLogicalTypes/testWriteUUIDReadStringSchema()#org/apache/parquet/avro/AvroTestUtil/instance(org.apache.parquet.pig.Schema,java.lang.Object[])
org/apache/parquet/avro/TestGenericLogicalTypes/testWriteUUIDReadStringSchema()#org/apache/parquet/avro/TestGenericLogicalTypes/write(org.apache.parquet.pig.Schema,D[])
org/apache/parquet/avro/TestGenericLogicalTypes/testWriteUUIDReadStringSchema()#org/apache/parquet/avro/AvroTestUtil/record(java.lang.String,Schema.Field[])
org/apache/parquet/avro/TestGenericLogicalTypes/write(org.apache.parquet.pig.Schema,D[])#org/apache/parquet/avro/TestGenericLogicalTypes/write(org.apache.parquet.avro.GenericData,org.apache.parquet.pig.Schema,D[])
org/apache/parquet/avro/TestGenericLogicalTypes/testWriteDecimalBytes()#org/apache/parquet/avro/AvroTestUtil/read(org.apache.parquet.avro.GenericData,org.apache.parquet.pig.Schema,java.io.File)
org/apache/parquet/avro/TestGenericLogicalTypes/testWriteDecimalBytes()#org/apache/parquet/avro/AvroTestUtil/field(java.lang.String,org.apache.parquet.pig.Schema)
org/apache/parquet/avro/TestGenericLogicalTypes/testWriteDecimalBytes()#java/util/Arrays/asList(T[])
org/apache/parquet/avro/TestGenericLogicalTypes/testWriteDecimalBytes()#org/apache/parquet/avro/AvroTestUtil/instance(org.apache.parquet.pig.Schema,java.lang.Object[])
org/apache/parquet/avro/TestGenericLogicalTypes/testWriteDecimalBytes()#org/apache/parquet/avro/TestGenericLogicalTypes/write(org.apache.parquet.pig.Schema,D[])
org/apache/parquet/avro/TestGenericLogicalTypes/testWriteDecimalBytes()#org/apache/parquet/avro/AvroTestUtil/record(java.lang.String,Schema.Field[])
org/apache/parquet/avro/TestGenericLogicalTypes/write(org.apache.parquet.avro.GenericData,org.apache.parquet.pig.Schema,D[])#org/apache/parquet/avro/AvroTestUtil/write(org.apache.parquet.statistics.TemporaryFolder,org.apache.parquet.avro.GenericData,org.apache.parquet.pig.Schema,D[])
org/apache/parquet/column/values/deltastrings/TestDeltaByteArray/testWriterReset()#org/apache/parquet/column/values/deltastrings/TestDeltaByteArray/assertReadWrite(org.apache.parquet.column.values.deltastrings.DeltaByteArrayWriter,org.apache.parquet.column.values.deltastrings.DeltaByteArrayReader,java.lang.String[])
org/apache/parquet/column/values/deltastrings/TestDeltaByteArray/testWriterReset()#org/apache/parquet/column/values/deltastrings/DeltaByteArrayWriter/reset()
org/apache/parquet/column/values/deltastrings/TestDeltaByteArray/testWriterReset()#org/apache/parquet/column/values/deltastrings/DeltaByteArrayWriter/DeltaByteArrayWriter(int,int,org.apache.parquet.bytes.ByteBufferAllocator)
org/apache/parquet/column/values/deltastrings/TestDeltaByteArray/testWriterReset()#org/apache/parquet/bytes/DirectByteBufferAllocator/DirectByteBufferAllocator()
org/apache/parquet/column/values/deltastrings/TestDeltaByteArray/testWriterReset()#org/apache/parquet/column/values/deltastrings/DeltaByteArrayReader/DeltaByteArrayReader()
org/apache/parquet/column/values/deltastrings/TestDeltaByteArray/assertReadWrite(org.apache.parquet.column.values.deltastrings.DeltaByteArrayWriter,org.apache.parquet.column.values.deltastrings.DeltaByteArrayReader,java.lang.String[])#org/apache/parquet/column/values/Utils/writeData(org.apache.parquet.column.values.ValuesWriter,java.lang.String[])
org/apache/parquet/column/values/deltastrings/TestDeltaByteArray/assertReadWrite(org.apache.parquet.column.values.deltastrings.DeltaByteArrayWriter,org.apache.parquet.column.values.deltastrings.DeltaByteArrayReader,java.lang.String[])#org/apache/parquet/column/values/Utils/readData(org.apache.parquet.column.values.ValuesReader,byte[],int)
org/apache/parquet/column/values/deltastrings/TestDeltaByteArray/assertReadWrite(org.apache.parquet.column.values.deltastrings.DeltaByteArrayWriter,org.apache.parquet.column.values.deltastrings.DeltaByteArrayReader,java.lang.String[])#org/apache/parquet/io/api/Binary/fromString(java.lang.String)
org/apache/parquet/column/values/deltastrings/TestDeltaByteArray/assertReadWrite(org.apache.parquet.column.values.deltastrings.DeltaByteArrayWriter,org.apache.parquet.column.values.deltastrings.DeltaByteArrayReader,java.lang.String[])#org/apache/parquet/column/values/deltastrings/DeltaByteArrayWriter/getBytes()
org/apache/parquet/column/values/deltastrings/TestDeltaByteArray/assertReadWrite(org.apache.parquet.column.values.deltastrings.DeltaByteArrayWriter,org.apache.parquet.column.values.deltastrings.DeltaByteArrayReader,java.lang.String[])#org/apache/parquet/bytes/BytesInput/toByteArray()
org/apache/parquet/column/values/deltastrings/TestDeltaByteArray/testRandomStrings()#org/apache/parquet/column/values/deltastrings/TestDeltaByteArray/assertReadWrite(org.apache.parquet.column.values.deltastrings.DeltaByteArrayWriter,org.apache.parquet.column.values.deltastrings.DeltaByteArrayReader,java.lang.String[])
org/apache/parquet/column/values/deltastrings/TestDeltaByteArray/testRandomStrings()#org/apache/parquet/column/values/deltastrings/DeltaByteArrayWriter/DeltaByteArrayWriter(int,int,org.apache.parquet.bytes.ByteBufferAllocator)
org/apache/parquet/column/values/deltastrings/TestDeltaByteArray/testRandomStrings()#org/apache/parquet/bytes/DirectByteBufferAllocator/DirectByteBufferAllocator()
org/apache/parquet/column/values/deltastrings/TestDeltaByteArray/testRandomStrings()#org/apache/parquet/column/values/deltastrings/DeltaByteArrayReader/DeltaByteArrayReader()
org/apache/parquet/column/values/deltastrings/TestDeltaByteArray/assertReadWriteWithSkip(org.apache.parquet.column.values.deltastrings.DeltaByteArrayWriter,org.apache.parquet.column.values.deltastrings.DeltaByteArrayReader,java.lang.String[])#org/apache/parquet/column/values/Utils/writeData(org.apache.parquet.column.values.ValuesWriter,java.lang.String[])
org/apache/parquet/column/values/deltastrings/TestDeltaByteArray/assertReadWriteWithSkip(org.apache.parquet.column.values.deltastrings.DeltaByteArrayWriter,org.apache.parquet.column.values.deltastrings.DeltaByteArrayReader,java.lang.String[])#org/apache/parquet/column/values/deltastrings/DeltaByteArrayReader/skip()
org/apache/parquet/column/values/deltastrings/TestDeltaByteArray/assertReadWriteWithSkip(org.apache.parquet.column.values.deltastrings.DeltaByteArrayWriter,org.apache.parquet.column.values.deltastrings.DeltaByteArrayReader,java.lang.String[])#org/apache/parquet/io/api/Binary/fromString(java.lang.String)
org/apache/parquet/column/values/deltastrings/TestDeltaByteArray/assertReadWriteWithSkip(org.apache.parquet.column.values.deltastrings.DeltaByteArrayWriter,org.apache.parquet.column.values.deltastrings.DeltaByteArrayReader,java.lang.String[])#org/apache/parquet/column/values/deltastrings/DeltaByteArrayWriter/getBytes()
org/apache/parquet/column/values/deltastrings/TestDeltaByteArray/assertReadWriteWithSkip(org.apache.parquet.column.values.deltastrings.DeltaByteArrayWriter,org.apache.parquet.column.values.deltastrings.DeltaByteArrayReader,java.lang.String[])#org/apache/parquet/bytes/BytesInput/toByteBuffer()
org/apache/parquet/column/values/deltastrings/TestDeltaByteArray/assertReadWriteWithSkip(org.apache.parquet.column.values.deltastrings.DeltaByteArrayWriter,org.apache.parquet.column.values.deltastrings.DeltaByteArrayReader,java.lang.String[])#org/apache/parquet/column/values/deltastrings/DeltaByteArrayReader/initFromPage(int,java.nio.ByteBuffer,int)
org/apache/parquet/column/values/deltastrings/TestDeltaByteArray/assertReadWriteWithSkip(org.apache.parquet.column.values.deltastrings.DeltaByteArrayWriter,org.apache.parquet.column.values.deltastrings.DeltaByteArrayReader,java.lang.String[])#org/apache/parquet/column/values/deltastrings/DeltaByteArrayReader/readBytes()
org/apache/parquet/column/values/deltastrings/TestDeltaByteArray/testLengths()#org/apache/parquet/column/values/deltastrings/DeltaByteArrayWriter/DeltaByteArrayWriter(int,int,org.apache.parquet.bytes.ByteBufferAllocator)
org/apache/parquet/column/values/deltastrings/TestDeltaByteArray/testLengths()#org/apache/parquet/column/values/Utils/readInts(org.apache.parquet.column.values.ValuesReader,byte[],int)
org/apache/parquet/column/values/deltastrings/TestDeltaByteArray/testLengths()#org/apache/parquet/bytes/DirectByteBufferAllocator/DirectByteBufferAllocator()
org/apache/parquet/column/values/deltastrings/TestDeltaByteArray/testLengths()#org/apache/parquet/column/values/ValuesReader/getNextOffset()
org/apache/parquet/column/values/deltastrings/TestDeltaByteArray/testLengths()#org/apache/parquet/bytes/BytesInput/toByteArray()
org/apache/parquet/column/values/deltastrings/TestDeltaByteArray/testLengths()#org/apache/parquet/column/values/Utils/writeData(org.apache.parquet.column.values.ValuesWriter,java.lang.String[])
org/apache/parquet/column/values/deltastrings/TestDeltaByteArray/testLengths()#org/apache/parquet/column/values/Utils/readInts(org.apache.parquet.column.values.ValuesReader,byte[],int,int)
org/apache/parquet/column/values/deltastrings/TestDeltaByteArray/testLengths()#org/apache/parquet/column/values/deltastrings/DeltaByteArrayWriter/getBytes()
org/apache/parquet/column/values/deltastrings/TestDeltaByteArray/testLengths()#org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesReader/DeltaBinaryPackingValuesReader()
org/apache/parquet/column/values/deltastrings/TestDeltaByteArray/testSerialization()#org/apache/parquet/column/values/deltastrings/TestDeltaByteArray/assertReadWrite(org.apache.parquet.column.values.deltastrings.DeltaByteArrayWriter,org.apache.parquet.column.values.deltastrings.DeltaByteArrayReader,java.lang.String[])
org/apache/parquet/column/values/deltastrings/TestDeltaByteArray/testSerialization()#org/apache/parquet/column/values/deltastrings/DeltaByteArrayWriter/DeltaByteArrayWriter(int,int,org.apache.parquet.bytes.ByteBufferAllocator)
org/apache/parquet/column/values/deltastrings/TestDeltaByteArray/testSerialization()#org/apache/parquet/bytes/DirectByteBufferAllocator/DirectByteBufferAllocator()
org/apache/parquet/column/values/deltastrings/TestDeltaByteArray/testSerialization()#org/apache/parquet/column/values/deltastrings/DeltaByteArrayReader/DeltaByteArrayReader()
org/apache/parquet/column/values/deltastrings/TestDeltaByteArray/testRandomStringsWithSkip()#org/apache/parquet/column/values/deltastrings/TestDeltaByteArray/assertReadWriteWithSkip(org.apache.parquet.column.values.deltastrings.DeltaByteArrayWriter,org.apache.parquet.column.values.deltastrings.DeltaByteArrayReader,java.lang.String[])
org/apache/parquet/column/values/deltastrings/TestDeltaByteArray/testRandomStringsWithSkip()#org/apache/parquet/column/values/deltastrings/DeltaByteArrayWriter/DeltaByteArrayWriter(int,int,org.apache.parquet.bytes.ByteBufferAllocator)
org/apache/parquet/column/values/deltastrings/TestDeltaByteArray/testRandomStringsWithSkip()#org/apache/parquet/bytes/DirectByteBufferAllocator/DirectByteBufferAllocator()
org/apache/parquet/column/values/deltastrings/TestDeltaByteArray/testRandomStringsWithSkip()#org/apache/parquet/column/values/deltastrings/DeltaByteArrayReader/DeltaByteArrayReader()
org/apache/parquet/pig/summary/Summary/getFinal()#java/lang/Class/getName()
org/apache/parquet/pig/summary/Summary/sumUp(org.apache.parquet.pig.Schema,org.apache.parquet.pig.Tuple)#org/apache/parquet/pig/summary/TupleSummaryData/TupleSummaryData()
org/apache/parquet/pig/summary/Summary/sumUp(org.apache.parquet.pig.Schema,org.apache.parquet.pig.Tuple)#org/apache/parquet/pig/summary/TupleSummaryData/addTuple(org.apache.parquet.pig.Schema,org.apache.parquet.pig.Tuple)
org/apache/parquet/pig/summary/Summary/getInitial()#java/lang/Class/getName()
org/apache/parquet/pig/summary/Summary/merge(org.apache.parquet.pig.Tuple)#org/apache/parquet/pig/summary/TupleSummaryData/merge(org.apache.parquet.pig.summary.SummaryData)
org/apache/parquet/pig/summary/Summary/merge(org.apache.parquet.pig.Tuple)#org/apache/parquet/pig/summary/TupleSummaryData/TupleSummaryData()
org/apache/parquet/pig/summary/Summary/merge(org.apache.parquet.pig.Tuple)#org/apache/parquet/pig/summary/Summary/getData(org.apache.parquet.pig.Tuple)
org/apache/parquet/pig/summary/Summary/exec(org.apache.parquet.pig.Tuple)#org/apache/parquet/pig/summary/Summary/sumUp(org.apache.parquet.pig.Schema,org.apache.parquet.pig.Tuple)
org/apache/parquet/pig/summary/Summary/exec(org.apache.parquet.pig.Tuple)#org/apache/parquet/pig/summary/SummaryData/toPrettyJSON(org.apache.parquet.pig.summary.SummaryData)
org/apache/parquet/pig/summary/Summary/getIntermed()#java/lang/Class/getName()
org/apache/parquet/pig/summary/Summary/getData(org.apache.parquet.pig.Tuple)#org/apache/parquet/pig/summary/SummaryData/fromJSON(java.lang.String,java.lang.Class)
org/apache/parquet/thrift/struct/ThriftType/BoolType/accept(org.apache.parquet.thrift.struct.ThriftType.TypeVisitor)#org/apache/parquet/thrift/struct/ThriftType/TypeVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.BoolType)
org/apache/parquet/thrift/struct/ThriftType/BoolType/accept(org.apache.parquet.thrift.struct.ThriftType.StateVisitor,S)#org/apache/parquet/thrift/struct/ThriftType/StateVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.BoolType,S)
org/apache/parquet/hadoop/api/DelegatingReadSupport/init(org.apache.parquet.hadoop.api.InitContext)#org/apache/parquet/hadoop/api/ReadSupport/init(org.apache.parquet.hadoop.api.InitContext)
org/apache/parquet/hadoop/api/DelegatingReadSupport/toString()#java/lang/Object/toString()
org/apache/parquet/hadoop/api/DelegatingReadSupport/toString()#java/lang/Class/getName()
org/apache/parquet/hadoop/api/DelegatingReadSupport/toString()#java/lang/Object/getClass()
org/apache/parquet/hadoop/api/DelegatingReadSupport/prepareForRead(org.apache.parquet.hadoop.Configuration,java.util.Map,org.apache.parquet.schema.MessageType,org.apache.parquet.hadoop.api.ReadSupport.ReadContext)#org/apache/parquet/hadoop/api/ReadSupport/prepareForRead(org.apache.parquet.hadoop.Configuration,java.util.Map,org.apache.parquet.schema.MessageType,org.apache.parquet.hadoop.api.ReadSupport.ReadContext)
org/apache/parquet/pig/TestTupleRecordConsumer/testMapSchema()#org/apache/parquet/pig/TestTupleRecordConsumer/testMapSchema()/$anonymous2/()
org/apache/parquet/pig/TestTupleRecordConsumer/testMapSchema()#org/apache/parquet/pig/TestTupleRecordConsumer/testMapSchema()/$anonymous1/()
org/apache/parquet/pig/TestTupleRecordConsumer/testMapSchema()#org/apache/parquet/pig/TestTupleRecordConsumer/testFromTuple(java.lang.String,java.util.List)
org/apache/parquet/pig/TestTupleRecordConsumer/testMapSchema()#org/apache/parquet/pig/TestTupleRecordConsumer/testMapSchema()/$anonymous3/()
org/apache/parquet/pig/TestTupleRecordConsumer/testMapSchema()#java/util/Arrays/asList(T[])
org/apache/parquet/pig/TestTupleRecordConsumer/newTupleWriter(java.lang.String,org.apache.parquet.io.api.RecordMaterializer)#org/apache/parquet/io/ConverterConsumer/ConverterConsumer(org.apache.parquet.io.api.GroupConverter,org.apache.parquet.schema.MessageType)
org/apache/parquet/pig/TestTupleRecordConsumer/newTupleWriter(java.lang.String,org.apache.parquet.io.api.RecordMaterializer)#org/apache/parquet/pig/TupleWriteSupport/getParquetSchema()
org/apache/parquet/pig/TestTupleRecordConsumer/newTupleWriter(java.lang.String,org.apache.parquet.io.api.RecordMaterializer)#org/apache/parquet/io/api/RecordMaterializer/getRootConverter()
org/apache/parquet/pig/TestTupleRecordConsumer/newTupleWriter(java.lang.String,org.apache.parquet.io.api.RecordMaterializer)#org/apache/parquet/pig/TupleWriteSupport/fromPigSchema(java.lang.String)
org/apache/parquet/pig/TestTupleRecordConsumer/newTupleWriter(java.lang.String,org.apache.parquet.io.api.RecordMaterializer)#org/apache/parquet/pig/TupleWriteSupport/init(org.apache.parquet.hadoop.Configuration)
org/apache/parquet/pig/TestTupleRecordConsumer/newTupleWriter(java.lang.String,org.apache.parquet.io.api.RecordMaterializer)#org/apache/parquet/pig/TupleWriteSupport/prepareForWrite(org.apache.parquet.io.api.RecordConsumer)
org/apache/parquet/pig/TestTupleRecordConsumer/getMessageType(java.lang.String)#org/apache/parquet/pig/PigSchemaConverter/PigSchemaConverter()
org/apache/parquet/pig/TestTupleRecordConsumer/getMessageType(java.lang.String)#org/apache/parquet/pig/PigSchemaConverter/convert(org.apache.parquet.schema.MessageType)
org/apache/parquet/pig/TestTupleRecordConsumer/testArtSchema()#org/apache/parquet/pig/TestTupleRecordConsumer/getMessageType(java.lang.String)
org/apache/parquet/pig/TestTupleRecordConsumer/testArtSchema()#org/apache/parquet/example/data/Group/append(java.lang.String,java.lang.String)
org/apache/parquet/pig/TestTupleRecordConsumer/testArtSchema()#java/util/Arrays/asList(T[])
org/apache/parquet/pig/TestTupleRecordConsumer/testArtSchema()#org/apache/parquet/pig/TestTupleRecordConsumer/testFromGroups(java.lang.String,java.util.List)
org/apache/parquet/pig/TestTupleRecordConsumer/testArtSchema()#org/apache/parquet/example/data/Group/addGroup(java.lang.String)
org/apache/parquet/pig/TestTupleRecordConsumer/testArtSchema()#org/apache/parquet/example/data/simple/SimpleGroup/SimpleGroup(org.apache.parquet.schema.GroupType)
org/apache/parquet/pig/TestTupleRecordConsumer/testArtSchema()#org/apache/parquet/example/data/Group/add(java.lang.String,java.lang.String)
org/apache/parquet/pig/TestTupleRecordConsumer/testArtSchema()#org/apache/parquet/example/data/Group/add(java.lang.String,long)
org/apache/parquet/pig/TestTupleRecordConsumer/testArtSchema()#org/apache/parquet/example/data/Group/add(int,long)
org/apache/parquet/pig/TestTupleRecordConsumer/testMaps()#org/apache/parquet/pig/TestTupleRecordConsumer/getMessageType(java.lang.String)
org/apache/parquet/pig/TestTupleRecordConsumer/testMaps()#org/apache/parquet/example/data/Group/append(java.lang.String,java.lang.String)
org/apache/parquet/pig/TestTupleRecordConsumer/testMaps()#java/util/Arrays/asList(T[])
org/apache/parquet/pig/TestTupleRecordConsumer/testMaps()#org/apache/parquet/pig/TestTupleRecordConsumer/testFromGroups(java.lang.String,java.util.List)
org/apache/parquet/pig/TestTupleRecordConsumer/testMaps()#org/apache/parquet/example/data/Group/addGroup(java.lang.String)
org/apache/parquet/pig/TestTupleRecordConsumer/testMaps()#org/apache/parquet/example/data/simple/SimpleGroup/SimpleGroup(org.apache.parquet.schema.GroupType)
org/apache/parquet/pig/TestTupleRecordConsumer/pigMetaData(java.lang.String)#org/apache/parquet/pig/PigMetaData/addToMetaData(java.util.Map)
org/apache/parquet/pig/TestTupleRecordConsumer/pigMetaData(java.lang.String)#java/util/HashMap/HashMap()
org/apache/parquet/pig/TestTupleRecordConsumer/pigMetaData(java.lang.String)#org/apache/parquet/pig/PigMetaData/PigMetaData(java.lang.String)
org/apache/parquet/pig/TestTupleRecordConsumer/newPigRecordConsumer(java.lang.String)#java/util/Map/Entry/getValue()
org/apache/parquet/pig/TestTupleRecordConsumer/newPigRecordConsumer(java.lang.String)#org/apache/parquet/pig/TestTupleRecordConsumer/getMessageType(java.lang.String)
org/apache/parquet/pig/TestTupleRecordConsumer/newPigRecordConsumer(java.lang.String)#org/apache/parquet/hadoop/api/InitContext/InitContext(org.apache.parquet.hadoop.Configuration,java.util.Map,org.apache.parquet.schema.MessageType)
org/apache/parquet/pig/TestTupleRecordConsumer/newPigRecordConsumer(java.lang.String)#org/apache/parquet/pig/TestTupleRecordConsumer/pigMetaData(java.lang.String)
org/apache/parquet/pig/TestTupleRecordConsumer/newPigRecordConsumer(java.lang.String)#java/util/Arrays/asList(T[])
org/apache/parquet/pig/TestTupleRecordConsumer/newPigRecordConsumer(java.lang.String)#java/util/HashMap/HashMap()
org/apache/parquet/pig/TestTupleRecordConsumer/newPigRecordConsumer(java.lang.String)#java/util/Map/Entry/getKey()
org/apache/parquet/pig/TestTupleRecordConsumer/newPigRecordConsumer(java.lang.String)#org/apache/parquet/pig/TupleReadSupport/prepareForRead(org.apache.parquet.hadoop.Configuration,java.util.Map,org.apache.parquet.schema.MessageType,org.apache.parquet.hadoop.api.ReadSupport.ReadContext)
org/apache/parquet/pig/TestTupleRecordConsumer/newPigRecordConsumer(java.lang.String)#java/util/Map/put(K,V)
org/apache/parquet/pig/TestTupleRecordConsumer/newPigRecordConsumer(java.lang.String)#java/util/Map/entrySet()
org/apache/parquet/pig/TestTupleRecordConsumer/newPigRecordConsumer(java.lang.String)#org/apache/parquet/pig/TupleReadSupport/TupleReadSupport()
org/apache/parquet/pig/TestTupleRecordConsumer/newPigRecordConsumer(java.lang.String)#java/util/HashSet/HashSet(java.util.Collection)
org/apache/parquet/pig/TestTupleRecordConsumer/newPigRecordConsumer(java.lang.String)#org/apache/parquet/pig/TupleReadSupport/init(org.apache.parquet.hadoop.api.InitContext)
org/apache/parquet/pig/TestTupleRecordConsumer/testFromGroups(java.lang.String,java.util.List)#java/lang/Object/toString()
org/apache/parquet/pig/TestTupleRecordConsumer/testFromGroups(java.lang.String,java.util.List)#org/apache/parquet/io/RecordConsumerLoggingWrapper/RecordConsumerLoggingWrapper(org.apache.parquet.io.api.RecordConsumer)
org/apache/parquet/pig/TestTupleRecordConsumer/testFromGroups(java.lang.String,java.util.List)#org/apache/parquet/example/data/GroupWriter/write(org.apache.parquet.example.data.Group)
org/apache/parquet/pig/TestTupleRecordConsumer/testFromGroups(java.lang.String,java.util.List)#org/apache/parquet/example/data/simple/convert/GroupRecordConverter/GroupRecordConverter(org.apache.parquet.schema.MessageType)
org/apache/parquet/pig/TestTupleRecordConsumer/testFromGroups(java.lang.String,java.util.List)#java/util/List/size()
org/apache/parquet/pig/TestTupleRecordConsumer/testFromGroups(java.lang.String,java.util.List)#org/apache/parquet/pig/TestTupleRecordConsumer/newPigRecordConsumer(java.lang.String)
org/apache/parquet/pig/TestTupleRecordConsumer/testFromGroups(java.lang.String,java.util.List)#java/util/List/add(E)
org/apache/parquet/pig/TestTupleRecordConsumer/testFromGroups(java.lang.String,java.util.List)#org/apache/parquet/pig/TestTupleRecordConsumer/newTupleWriter(java.lang.String,org.apache.parquet.io.api.RecordMaterializer)
org/apache/parquet/pig/TestTupleRecordConsumer/testFromGroups(java.lang.String,java.util.List)#java/util/ArrayList/ArrayList()
org/apache/parquet/pig/TestTupleRecordConsumer/testFromGroups(java.lang.String,java.util.List)#org/apache/parquet/example/data/simple/convert/GroupRecordConverter/getCurrentRecord()
org/apache/parquet/pig/TestTupleRecordConsumer/testFromGroups(java.lang.String,java.util.List)#org/apache/parquet/io/ConverterConsumer/ConverterConsumer(org.apache.parquet.io.api.GroupConverter,org.apache.parquet.schema.MessageType)
org/apache/parquet/pig/TestTupleRecordConsumer/testFromGroups(java.lang.String,java.util.List)#org/apache/parquet/example/data/GroupWriter/GroupWriter(org.apache.parquet.io.api.RecordConsumer,org.apache.parquet.schema.GroupType)
org/apache/parquet/pig/TestTupleRecordConsumer/testFromGroups(java.lang.String,java.util.List)#org/apache/parquet/pig/TestTupleRecordConsumer/getMessageType(java.lang.String)
org/apache/parquet/pig/TestTupleRecordConsumer/testFromGroups(java.lang.String,java.util.List)#org/apache/parquet/pig/TupleWriteSupport/write(org.apache.parquet.pig.Tuple)
org/apache/parquet/pig/TestTupleRecordConsumer/testFromGroups(java.lang.String,java.util.List)#java/util/List/get(int)
org/apache/parquet/pig/TestTupleRecordConsumer/testComplexSchema()#java/util/Arrays/asList(T[])
org/apache/parquet/pig/TestTupleRecordConsumer/testComplexSchema()#org/apache/parquet/pig/TestTupleRecordConsumer/testFromTuple(java.lang.String,java.util.List)
org/apache/parquet/pig/TestTupleRecordConsumer/testBags()#org/apache/parquet/pig/TestTupleRecordConsumer/getMessageType(java.lang.String)
org/apache/parquet/pig/TestTupleRecordConsumer/testBags()#org/apache/parquet/example/data/Group/append(java.lang.String,java.lang.String)
org/apache/parquet/pig/TestTupleRecordConsumer/testBags()#java/util/Arrays/asList(T[])
org/apache/parquet/pig/TestTupleRecordConsumer/testBags()#org/apache/parquet/pig/TestTupleRecordConsumer/testFromGroups(java.lang.String,java.util.List)
org/apache/parquet/pig/TestTupleRecordConsumer/testBags()#org/apache/parquet/example/data/Group/addGroup(java.lang.String)
org/apache/parquet/pig/TestTupleRecordConsumer/testBags()#org/apache/parquet/example/data/simple/SimpleGroup/SimpleGroup(org.apache.parquet.schema.GroupType)
org/apache/parquet/pig/TestTupleRecordConsumer/testFromTuple(java.lang.String,java.util.List)#org/apache/parquet/pig/TestTupleRecordConsumer/newPigRecordConsumer(java.lang.String)
org/apache/parquet/pig/TestTupleRecordConsumer/testFromTuple(java.lang.String,java.util.List)#org/apache/parquet/pig/TupleWriteSupport/write(org.apache.parquet.pig.Tuple)
org/apache/parquet/pig/TestTupleRecordConsumer/testFromTuple(java.lang.String,java.util.List)#org/apache/parquet/pig/TestTupleRecordConsumer/newTupleWriter(java.lang.String,org.apache.parquet.io.api.RecordMaterializer)
org/apache/parquet/pig/TestTupleRecordConsumer/testFromTuple(java.lang.String,java.util.List)#java/util/ArrayList/ArrayList()
org/apache/parquet/thrift/struct/ThriftType/ComplexTypeVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.I16Type)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/parquet/thrift/struct/ThriftType/ComplexTypeVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.I32Type)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/parquet/thrift/struct/ThriftType/ComplexTypeVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.I64Type)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/parquet/thrift/struct/ThriftType/ComplexTypeVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.BoolType)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/parquet/thrift/struct/ThriftType/ComplexTypeVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.ByteType)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/parquet/thrift/struct/ThriftType/ComplexTypeVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.EnumType)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/parquet/thrift/struct/ThriftType/ComplexTypeVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.StringType)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/parquet/thrift/struct/ThriftType/ComplexTypeVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.DoubleType)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/parquet/column/values/dictionary/DictionaryValuesWriter/PlainFixedLenArrayDictionaryValuesWriter/toDictPageAndClose()#org/apache/parquet/column/values/plain/FixedLenByteArrayPlainValuesWriter/writeBytes(org.apache.parquet.io.api.Binary)
org/apache/parquet/column/values/dictionary/DictionaryValuesWriter/PlainFixedLenArrayDictionaryValuesWriter/toDictPageAndClose()#java/util/Iterator/next()
org/apache/parquet/column/values/dictionary/DictionaryValuesWriter/PlainFixedLenArrayDictionaryValuesWriter/toDictPageAndClose()#org/apache/parquet/column/values/dictionary/DictionaryValuesWriter/dictPage(org.apache.parquet.column.values.ValuesWriter)
org/apache/parquet/column/values/dictionary/DictionaryValuesWriter/PlainFixedLenArrayDictionaryValuesWriter/toDictPageAndClose()#org/apache/parquet/column/values/plain/FixedLenByteArrayPlainValuesWriter/FixedLenByteArrayPlainValuesWriter(int,int,int,org.apache.parquet.bytes.ByteBufferAllocator)
org/apache/parquet/column/values/dictionary/DictionaryValuesWriter/PlainFixedLenArrayDictionaryValuesWriter/writeBytes(org.apache.parquet.io.api.Binary)#org/apache/parquet/column/values/dictionary/IntList/add(int)
org/apache/parquet/column/values/dictionary/DictionaryValuesWriter/PlainFixedLenArrayDictionaryValuesWriter/writeBytes(org.apache.parquet.io.api.Binary)#org/apache/parquet/io/api/Binary/copy()
org/apache/parquet/filter2/predicate/Operators/ColumnFilterPredicate/equals(java.lang.Object)#org/apache/parquet/filter2/predicate/Operators/Column/equals(java.lang.Object)
org/apache/parquet/filter2/predicate/Operators/ColumnFilterPredicate/equals(java.lang.Object)#java/lang/Object/equals(java.lang.Object)
org/apache/parquet/filter2/predicate/Operators/ColumnFilterPredicate/equals(java.lang.Object)#java/lang/Object/getClass()
org/apache/parquet/filter2/predicate/Operators/ColumnFilterPredicate/hashCode()#org/apache/parquet/filter2/predicate/Operators/Column/hashCode()
org/apache/parquet/filter2/predicate/Operators/ColumnFilterPredicate/hashCode()#java/lang/Object/hashCode()
org/apache/parquet/filter2/predicate/Operators/ColumnFilterPredicate/hashCode()#java/lang/Object/getClass()
org/apache/parquet/tools/command/DumpCommand/DumpConverter/asGroupConverter()#org/apache/parquet/tools/command/DumpCommand/DumpGroupConverter/DumpGroupConverter()
org/apache/parquet/glob/GlobExpander/GlobExpanderImpl/visit(org.apache.parquet.glob.GlobNode.OneOf)#java/util/ArrayList/ArrayList()
org/apache/parquet/glob/GlobExpander/GlobExpanderImpl/visit(org.apache.parquet.glob.GlobNode.OneOf)#org/apache/parquet/glob/GlobNode/OneOf/getChildren()
org/apache/parquet/glob/GlobExpander/GlobExpanderImpl/visit(org.apache.parquet.glob.GlobNode.OneOf)#java/util/List/addAll(java.util.Collection)
org/apache/parquet/glob/GlobExpander/GlobExpanderImpl/visit(org.apache.parquet.glob.GlobNode.OneOf)#org/apache/parquet/glob/GlobNode/accept(org.apache.parquet.glob.GlobNode.Visitor)
org/apache/parquet/glob/GlobExpander/GlobExpanderImpl/visit(org.apache.parquet.glob.GlobNode.GlobNodeSequence)#java/util/ArrayList/ArrayList()
org/apache/parquet/glob/GlobExpander/GlobExpanderImpl/visit(org.apache.parquet.glob.GlobNode.GlobNodeSequence)#org/apache/parquet/glob/GlobNode/GlobNodeSequence/getChildren()
org/apache/parquet/glob/GlobExpander/GlobExpanderImpl/visit(org.apache.parquet.glob.GlobNode.GlobNodeSequence)#org/apache/parquet/glob/GlobNode/accept(org.apache.parquet.glob.GlobNode.Visitor)
org/apache/parquet/glob/GlobExpander/GlobExpanderImpl/visit(org.apache.parquet.glob.GlobNode.GlobNodeSequence)#org/apache/parquet/glob/GlobExpander/GlobExpanderImpl/crossOrTakeNonEmpty(java.util.List,java.util.List)
org/apache/parquet/glob/GlobExpander/GlobExpanderImpl/visit(org.apache.parquet.glob.GlobNode.Atom)#org/apache/parquet/glob/GlobNode/Atom/get()
org/apache/parquet/glob/GlobExpander/GlobExpanderImpl/visit(org.apache.parquet.glob.GlobNode.Atom)#java/util/Arrays/asList(T[])
org/apache/parquet/glob/GlobExpander/GlobExpanderImpl/expand(org.apache.parquet.glob.GlobNode)#org/apache/parquet/glob/GlobNode/accept(org.apache.parquet.glob.GlobNode.Visitor)
org/apache/parquet/glob/GlobExpander/GlobExpanderImpl/crossOrTakeNonEmpty(java.util.List,java.util.List)#java/util/ArrayList/ArrayList(int)
org/apache/parquet/glob/GlobExpander/GlobExpanderImpl/crossOrTakeNonEmpty(java.util.List,java.util.List)#java/util/List/isEmpty()
org/apache/parquet/glob/GlobExpander/GlobExpanderImpl/crossOrTakeNonEmpty(java.util.List,java.util.List)#java/util/List/size()
org/apache/parquet/glob/GlobExpander/GlobExpanderImpl/crossOrTakeNonEmpty(java.util.List,java.util.List)#java/util/ArrayList/addAll(java.util.Collection)
org/apache/parquet/glob/GlobExpander/GlobExpanderImpl/crossOrTakeNonEmpty(java.util.List,java.util.List)#java/util/List/add(E)
org/apache/parquet/column/impl/ColumnReaderImpl/ValuesReaderIntIterator/nextInt()#org/apache/parquet/column/values/ValuesReader/readInteger()
org/apache/parquet/column/values/dictionary/PlainValuesDictionary/PlainIntegerDictionary/toString()#java/lang/StringBuilder/append(java.lang.String)
org/apache/parquet/column/values/dictionary/PlainValuesDictionary/PlainIntegerDictionary/toString()#java/lang/StringBuilder/append(int)
org/apache/parquet/column/values/dictionary/PlainValuesDictionary/PlainIntegerDictionary/toString()#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/apache/parquet/column/values/dictionary/PlainValuesDictionary/PlainIntegerDictionary/toString()#java/lang/StringBuilder/toString()
org/apache/parquet/hadoop/ParquetFileWriter/end(java.util.Map)#org/apache/parquet/hadoop/metadata/FileMetaData/FileMetaData(org.apache.parquet.schema.MessageType,java.util.Map,java.lang.String)
org/apache/parquet/hadoop/ParquetFileWriter/end(java.util.Map)#org/apache/parquet/hadoop/metadata/ParquetMetadata/ParquetMetadata(org.apache.parquet.hadoop.metadata.FileMetaData,java.util.List)
org/apache/parquet/hadoop/ParquetFileWriter/end(java.util.Map)#org/apache/parquet/hadoop/ParquetFileWriter/serializeFooter(org.apache.parquet.hadoop.metadata.ParquetMetadata,org.apache.parquet.hadoop.FSDataOutputStream)
org/apache/parquet/hadoop/ParquetFileWriter/end(java.util.Map)#org/apache/parquet/hadoop/ParquetFileWriter/STATE/end()
org/apache/parquet/hadoop/ParquetFileWriter/mergeMetadataFiles(java.util.List,org.apache.parquet.hadoop.Configuration)#java/util/ArrayList/ArrayList()
org/apache/parquet/hadoop/ParquetFileWriter/mergeMetadataFiles(java.util.List,org.apache.parquet.hadoop.Configuration)#org/apache/parquet/hadoop/metadata/ParquetMetadata/getBlocks()
org/apache/parquet/hadoop/ParquetFileWriter/mergeMetadataFiles(java.util.List,org.apache.parquet.hadoop.Configuration)#org/apache/parquet/hadoop/metadata/ParquetMetadata/getFileMetaData()
org/apache/parquet/hadoop/ParquetFileWriter/mergeMetadataFiles(java.util.List,org.apache.parquet.hadoop.Configuration)#java/util/List/addAll(java.util.Collection)
org/apache/parquet/hadoop/ParquetFileWriter/mergeMetadataFiles(java.util.List,org.apache.parquet.hadoop.Configuration)#org/apache/parquet/Preconditions/checkArgument(boolean,java.lang.String)
org/apache/parquet/hadoop/ParquetFileWriter/mergeMetadataFiles(java.util.List,org.apache.parquet.hadoop.Configuration)#org/apache/parquet/hadoop/metadata/ParquetMetadata/ParquetMetadata(org.apache.parquet.hadoop.metadata.FileMetaData,java.util.List)
org/apache/parquet/hadoop/ParquetFileWriter/mergeMetadataFiles(java.util.List,org.apache.parquet.hadoop.Configuration)#org/apache/parquet/hadoop/ParquetFileReader/readFooter(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path,org.apache.parquet.format.converter.ParquetMetadataConverter.MetadataFilter)
org/apache/parquet/hadoop/ParquetFileWriter/mergeMetadataFiles(java.util.List,org.apache.parquet.hadoop.Configuration)#org/apache/parquet/hadoop/metadata/GlobalMetaData/merge()
org/apache/parquet/hadoop/ParquetFileWriter/mergeMetadataFiles(java.util.List,org.apache.parquet.hadoop.Configuration)#org/apache/parquet/hadoop/ParquetFileWriter/mergeInto(org.apache.parquet.hadoop.metadata.FileMetaData,org.apache.parquet.hadoop.metadata.GlobalMetaData,boolean)
org/apache/parquet/hadoop/ParquetFileWriter/appendRowGroup(org.apache.parquet.io.SeekableInputStream,org.apache.parquet.hadoop.metadata.BlockMetaData,boolean)#org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/getStatistics()
org/apache/parquet/hadoop/ParquetFileWriter/appendRowGroup(org.apache.parquet.io.SeekableInputStream,org.apache.parquet.hadoop.metadata.BlockMetaData,boolean)#org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/getStartingPos()
org/apache/parquet/hadoop/ParquetFileWriter/appendRowGroup(org.apache.parquet.io.SeekableInputStream,org.apache.parquet.hadoop.metadata.BlockMetaData,boolean)#org/apache/parquet/hadoop/metadata/BlockMetaData/getRowCount()
org/apache/parquet/hadoop/ParquetFileWriter/appendRowGroup(org.apache.parquet.io.SeekableInputStream,org.apache.parquet.hadoop.metadata.BlockMetaData,boolean)#java/lang/String/format(java.lang.String,java.lang.Object[])
org/apache/parquet/hadoop/ParquetFileWriter/appendRowGroup(org.apache.parquet.io.SeekableInputStream,org.apache.parquet.hadoop.metadata.BlockMetaData,boolean)#org/apache/parquet/hadoop/ParquetFileWriter/endBlock()
org/apache/parquet/hadoop/ParquetFileWriter/appendRowGroup(org.apache.parquet.io.SeekableInputStream,org.apache.parquet.hadoop.metadata.BlockMetaData,boolean)#org/apache/parquet/column/ColumnDescriptor/getPath()
org/apache/parquet/hadoop/ParquetFileWriter/appendRowGroup(org.apache.parquet.io.SeekableInputStream,org.apache.parquet.hadoop.metadata.BlockMetaData,boolean)#org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/getTotalUncompressedSize()
org/apache/parquet/hadoop/ParquetFileWriter/appendRowGroup(org.apache.parquet.io.SeekableInputStream,org.apache.parquet.hadoop.metadata.BlockMetaData,boolean)#org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/getEncodings()
org/apache/parquet/hadoop/ParquetFileWriter/appendRowGroup(org.apache.parquet.io.SeekableInputStream,org.apache.parquet.hadoop.metadata.BlockMetaData,boolean)#java/util/List/get(int)
org/apache/parquet/hadoop/ParquetFileWriter/appendRowGroup(org.apache.parquet.io.SeekableInputStream,org.apache.parquet.hadoop.metadata.BlockMetaData,boolean)#org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/getType()
org/apache/parquet/hadoop/ParquetFileWriter/appendRowGroup(org.apache.parquet.io.SeekableInputStream,org.apache.parquet.hadoop.metadata.BlockMetaData,boolean)#org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/getTotalSize()
org/apache/parquet/hadoop/ParquetFileWriter/appendRowGroup(org.apache.parquet.io.SeekableInputStream,org.apache.parquet.hadoop.metadata.BlockMetaData,boolean)#org/apache/parquet/hadoop/metadata/BlockMetaData/getColumns()
org/apache/parquet/hadoop/ParquetFileWriter/appendRowGroup(org.apache.parquet.io.SeekableInputStream,org.apache.parquet.hadoop.metadata.BlockMetaData,boolean)#org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/getEncodingStats()
org/apache/parquet/hadoop/ParquetFileWriter/appendRowGroup(org.apache.parquet.io.SeekableInputStream,org.apache.parquet.hadoop.metadata.BlockMetaData,boolean)#java/util/ArrayList/ArrayList()
org/apache/parquet/hadoop/ParquetFileWriter/appendRowGroup(org.apache.parquet.io.SeekableInputStream,org.apache.parquet.hadoop.metadata.BlockMetaData,boolean)#org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/getPath()
org/apache/parquet/hadoop/ParquetFileWriter/appendRowGroup(org.apache.parquet.io.SeekableInputStream,org.apache.parquet.hadoop.metadata.BlockMetaData,boolean)#org/apache/parquet/hadoop/metadata/BlockMetaData/setTotalByteSize(long)
org/apache/parquet/hadoop/ParquetFileWriter/appendRowGroup(org.apache.parquet.io.SeekableInputStream,org.apache.parquet.hadoop.metadata.BlockMetaData,boolean)#org/apache/parquet/schema/MessageType/getColumns()
org/apache/parquet/hadoop/ParquetFileWriter/appendRowGroup(org.apache.parquet.io.SeekableInputStream,org.apache.parquet.hadoop.metadata.BlockMetaData,boolean)#org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/get(org.apache.parquet.hadoop.metadata.ColumnPath,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.hadoop.metadata.CompressionCodecName,org.apache.parquet.column.EncodingStats,java.util.Set,org.apache.parquet.column.statistics.Statistics,long,long,long,long,long)
org/apache/parquet/hadoop/ParquetFileWriter/appendRowGroup(org.apache.parquet.io.SeekableInputStream,org.apache.parquet.hadoop.metadata.BlockMetaData,boolean)#org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/getCodec()
org/apache/parquet/hadoop/ParquetFileWriter/appendRowGroup(org.apache.parquet.io.SeekableInputStream,org.apache.parquet.hadoop.metadata.BlockMetaData,boolean)#java/util/Map/isEmpty()
org/apache/parquet/hadoop/ParquetFileWriter/appendRowGroup(org.apache.parquet.io.SeekableInputStream,org.apache.parquet.hadoop.metadata.BlockMetaData,boolean)#java/util/List/size()
org/apache/parquet/hadoop/ParquetFileWriter/appendRowGroup(org.apache.parquet.io.SeekableInputStream,org.apache.parquet.hadoop.metadata.BlockMetaData,boolean)#org/apache/parquet/hadoop/metadata/ColumnPath/toDotString()
org/apache/parquet/hadoop/ParquetFileWriter/appendRowGroup(org.apache.parquet.io.SeekableInputStream,org.apache.parquet.hadoop.metadata.BlockMetaData,boolean)#org/apache/parquet/hadoop/ParquetFileWriter/startBlock(long)
org/apache/parquet/hadoop/ParquetFileWriter/appendRowGroup(org.apache.parquet.io.SeekableInputStream,org.apache.parquet.hadoop.metadata.BlockMetaData,boolean)#java/util/HashMap/HashMap()
org/apache/parquet/hadoop/ParquetFileWriter/appendRowGroup(org.apache.parquet.io.SeekableInputStream,org.apache.parquet.hadoop.metadata.BlockMetaData,boolean)#java/util/Map/keySet()
org/apache/parquet/hadoop/ParquetFileWriter/appendRowGroup(org.apache.parquet.io.SeekableInputStream,org.apache.parquet.hadoop.metadata.BlockMetaData,boolean)#org/apache/parquet/hadoop/ParquetFileWriter/copy(org.apache.parquet.io.SeekableInputStream,org.apache.parquet.hadoop.FSDataOutputStream,long,long)
org/apache/parquet/hadoop/ParquetFileWriter/appendRowGroup(org.apache.parquet.io.SeekableInputStream,org.apache.parquet.hadoop.metadata.BlockMetaData,boolean)#java/util/List/add(E)
org/apache/parquet/hadoop/ParquetFileWriter/appendRowGroup(org.apache.parquet.io.SeekableInputStream,org.apache.parquet.hadoop.metadata.BlockMetaData,boolean)#org/apache/parquet/hadoop/metadata/BlockMetaData/addColumn(org.apache.parquet.hadoop.metadata.ColumnChunkMetaData)
org/apache/parquet/hadoop/ParquetFileWriter/appendRowGroup(org.apache.parquet.io.SeekableInputStream,org.apache.parquet.hadoop.metadata.BlockMetaData,boolean)#org/apache/parquet/Strings/join(java.lang.Iterable,java.lang.String)
org/apache/parquet/hadoop/ParquetFileWriter/appendRowGroup(org.apache.parquet.io.SeekableInputStream,org.apache.parquet.hadoop.metadata.BlockMetaData,boolean)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/parquet/hadoop/ParquetFileWriter/appendRowGroup(org.apache.parquet.io.SeekableInputStream,org.apache.parquet.hadoop.metadata.BlockMetaData,boolean)#java/util/Map/put(K,V)
org/apache/parquet/hadoop/ParquetFileWriter/appendRowGroup(org.apache.parquet.io.SeekableInputStream,org.apache.parquet.hadoop.metadata.BlockMetaData,boolean)#org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/getValueCount()
org/apache/parquet/hadoop/ParquetFileWriter/appendRowGroup(org.apache.parquet.io.SeekableInputStream,org.apache.parquet.hadoop.metadata.BlockMetaData,boolean)#org/apache/parquet/hadoop/metadata/ColumnPath/get(java.lang.String[])
org/apache/parquet/hadoop/ParquetFileWriter/appendRowGroup(org.apache.parquet.io.SeekableInputStream,org.apache.parquet.hadoop.metadata.BlockMetaData,boolean)#java/util/Map/remove(java.lang.Object)
org/apache/parquet/hadoop/ParquetFileWriter/writeDataPage(int,int,org.apache.parquet.bytes.BytesInput,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding)#org/apache/parquet/column/EncodingStats/Builder/addDataEncoding(org.apache.parquet.column.Encoding)
org/apache/parquet/hadoop/ParquetFileWriter/writeDataPage(int,int,org.apache.parquet.bytes.BytesInput,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding)#org/apache/parquet/format/converter/ParquetMetadataConverter/writeDataPageHeader(int,int,int,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding,java.io.OutputStream)
org/apache/parquet/hadoop/ParquetFileWriter/writeDataPage(int,int,org.apache.parquet.bytes.BytesInput,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding)#java/util/Set/add(E)
org/apache/parquet/hadoop/ParquetFileWriter/writeDataPage(int,int,org.apache.parquet.bytes.BytesInput,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding)#org/apache/parquet/bytes/BytesInput/writeAllTo(java.io.OutputStream)
org/apache/parquet/hadoop/ParquetFileWriter/writeDataPage(int,int,org.apache.parquet.bytes.BytesInput,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding)#org/apache/parquet/bytes/BytesInput/size()
org/apache/parquet/hadoop/ParquetFileWriter/writeDataPage(int,int,org.apache.parquet.bytes.BytesInput,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding)#org/apache/parquet/hadoop/ParquetFileWriter/STATE/write()
org/apache/parquet/hadoop/ParquetFileWriter/getGlobalMetaData(java.util.List)#org/apache/parquet/hadoop/ParquetFileWriter/getGlobalMetaData(java.util.List,boolean)
org/apache/parquet/hadoop/ParquetFileWriter/appendRowGroups(org.apache.parquet.io.SeekableInputStream,java.util.List,boolean)#org/apache/parquet/hadoop/ParquetFileWriter/appendRowGroup(org.apache.parquet.io.SeekableInputStream,org.apache.parquet.hadoop.metadata.BlockMetaData,boolean)
org/apache/parquet/hadoop/ParquetFileWriter/getGlobalMetaData(java.util.List,boolean)#org/apache/parquet/hadoop/Footer/getParquetMetadata()
org/apache/parquet/hadoop/ParquetFileWriter/getGlobalMetaData(java.util.List,boolean)#org/apache/parquet/hadoop/metadata/ParquetMetadata/getFileMetaData()
org/apache/parquet/hadoop/ParquetFileWriter/getGlobalMetaData(java.util.List,boolean)#org/apache/parquet/hadoop/ParquetFileWriter/mergeInto(org.apache.parquet.hadoop.metadata.FileMetaData,org.apache.parquet.hadoop.metadata.GlobalMetaData,boolean)
org/apache/parquet/hadoop/ParquetFileWriter/getNextRowGroupSize()#org/apache/parquet/hadoop/ParquetFileWriter/AlignmentStrategy/nextRowGroupSize(org.apache.parquet.hadoop.FSDataOutputStream)
org/apache/parquet/hadoop/ParquetFileWriter/startColumn(org.apache.parquet.column.ColumnDescriptor,long,org.apache.parquet.hadoop.metadata.CompressionCodecName)#org/apache/parquet/column/ColumnDescriptor/getType()
org/apache/parquet/hadoop/ParquetFileWriter/startColumn(org.apache.parquet.column.ColumnDescriptor,long,org.apache.parquet.hadoop.metadata.CompressionCodecName)#org/apache/parquet/column/EncodingStats/Builder/clear()
org/apache/parquet/hadoop/ParquetFileWriter/startColumn(org.apache.parquet.column.ColumnDescriptor,long,org.apache.parquet.hadoop.metadata.CompressionCodecName)#org/apache/parquet/column/statistics/Statistics/getStatsBasedOnType(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/hadoop/ParquetFileWriter/startColumn(org.apache.parquet.column.ColumnDescriptor,long,org.apache.parquet.hadoop.metadata.CompressionCodecName)#org/apache/parquet/hadoop/ParquetFileWriter/STATE/startColumn()
org/apache/parquet/hadoop/ParquetFileWriter/startColumn(org.apache.parquet.column.ColumnDescriptor,long,org.apache.parquet.hadoop.metadata.CompressionCodecName)#org/apache/parquet/column/ColumnDescriptor/getPath()
org/apache/parquet/hadoop/ParquetFileWriter/startColumn(org.apache.parquet.column.ColumnDescriptor,long,org.apache.parquet.hadoop.metadata.CompressionCodecName)#java/util/HashSet/HashSet()
org/apache/parquet/hadoop/ParquetFileWriter/startColumn(org.apache.parquet.column.ColumnDescriptor,long,org.apache.parquet.hadoop.metadata.CompressionCodecName)#org/apache/parquet/hadoop/metadata/ColumnPath/get(java.lang.String[])
org/apache/parquet/hadoop/ParquetFileWriter/endColumn()#org/apache/parquet/hadoop/metadata/BlockMetaData/setTotalByteSize(long)
org/apache/parquet/hadoop/ParquetFileWriter/endColumn()#org/apache/parquet/hadoop/ParquetFileWriter/STATE/endColumn()
org/apache/parquet/hadoop/ParquetFileWriter/endColumn()#org/apache/parquet/column/EncodingStats/Builder/build()
org/apache/parquet/hadoop/ParquetFileWriter/endColumn()#org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/get(org.apache.parquet.hadoop.metadata.ColumnPath,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.hadoop.metadata.CompressionCodecName,org.apache.parquet.column.EncodingStats,java.util.Set,org.apache.parquet.column.statistics.Statistics,long,long,long,long,long)
org/apache/parquet/hadoop/ParquetFileWriter/endColumn()#org/apache/parquet/hadoop/metadata/BlockMetaData/getTotalByteSize()
org/apache/parquet/hadoop/ParquetFileWriter/endColumn()#org/apache/parquet/hadoop/metadata/BlockMetaData/addColumn(org.apache.parquet.hadoop.metadata.ColumnChunkMetaData)
org/apache/parquet/hadoop/ParquetFileWriter/writeMetadataFile(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path,java.util.List)#org/apache/parquet/hadoop/ParquetFileWriter/writeMetadataFile(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path,java.util.List,org.apache.parquet.hadoop.ParquetOutputFormat.JobSummaryLevel)
org/apache/parquet/hadoop/ParquetFileWriter/appendFile(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path)#org/apache/parquet/hadoop/ParquetFileReader/open(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path)
org/apache/parquet/hadoop/ParquetFileWriter/writeDataPages(org.apache.parquet.bytes.BytesInput,long,long,org.apache.parquet.column.statistics.Statistics,java.util.Set,java.util.Set,java.util.List)#java/util/Set/addAll(java.util.Collection)
org/apache/parquet/hadoop/ParquetFileWriter/writeDataPages(org.apache.parquet.bytes.BytesInput,long,long,org.apache.parquet.column.statistics.Statistics,java.util.Set,java.util.Set,java.util.List)#org/apache/parquet/column/EncodingStats/Builder/addDataEncodings(java.util.Collection)
org/apache/parquet/hadoop/ParquetFileWriter/writeDataPages(org.apache.parquet.bytes.BytesInput,long,long,org.apache.parquet.column.statistics.Statistics,java.util.Set,java.util.Set,java.util.List)#java/util/Set/isEmpty()
org/apache/parquet/hadoop/ParquetFileWriter/writeDataPages(org.apache.parquet.bytes.BytesInput,long,long,org.apache.parquet.column.statistics.Statistics,java.util.Set,java.util.Set,java.util.List)#org/apache/parquet/bytes/BytesInput/writeAllTo(java.io.OutputStream)
org/apache/parquet/hadoop/ParquetFileWriter/writeDataPages(org.apache.parquet.bytes.BytesInput,long,long,org.apache.parquet.column.statistics.Statistics,java.util.Set,java.util.Set,java.util.List)#org/apache/parquet/bytes/BytesInput/size()
org/apache/parquet/hadoop/ParquetFileWriter/writeDataPages(org.apache.parquet.bytes.BytesInput,long,long,org.apache.parquet.column.statistics.Statistics,java.util.Set,java.util.Set,java.util.List)#org/apache/parquet/hadoop/ParquetFileWriter/STATE/write()
org/apache/parquet/hadoop/ParquetFileWriter/writeDataPages(org.apache.parquet.bytes.BytesInput,long,long,org.apache.parquet.column.statistics.Statistics,java.util.Set,java.util.Set,java.util.List)#org/apache/parquet/column/EncodingStats/Builder/withV2Pages()
org/apache/parquet/hadoop/ParquetFileWriter/startBlock(long)#org/apache/parquet/hadoop/metadata/BlockMetaData/BlockMetaData()
org/apache/parquet/hadoop/ParquetFileWriter/startBlock(long)#org/apache/parquet/hadoop/ParquetFileWriter/STATE/startBlock()
org/apache/parquet/hadoop/ParquetFileWriter/startBlock(long)#org/apache/parquet/hadoop/ParquetFileWriter/AlignmentStrategy/alignForRowGroup(org.apache.parquet.hadoop.FSDataOutputStream)
org/apache/parquet/hadoop/ParquetFileWriter/writeDictionaryPage(org.apache.parquet.column.page.DictionaryPage)#org/apache/parquet/format/converter/ParquetMetadataConverter/writeDictionaryPageHeader(int,int,int,org.apache.parquet.column.Encoding,java.io.OutputStream)
org/apache/parquet/hadoop/ParquetFileWriter/writeDictionaryPage(org.apache.parquet.column.page.DictionaryPage)#org/apache/parquet/column/page/DictionaryPage/getBytes()
org/apache/parquet/hadoop/ParquetFileWriter/writeDictionaryPage(org.apache.parquet.column.page.DictionaryPage)#org/apache/parquet/column/page/Page/getUncompressedSize()
org/apache/parquet/hadoop/ParquetFileWriter/writeDictionaryPage(org.apache.parquet.column.page.DictionaryPage)#org/apache/parquet/column/EncodingStats/Builder/addDictEncoding(org.apache.parquet.column.Encoding)
org/apache/parquet/hadoop/ParquetFileWriter/writeDictionaryPage(org.apache.parquet.column.page.DictionaryPage)#java/util/Set/add(E)
org/apache/parquet/hadoop/ParquetFileWriter/writeDictionaryPage(org.apache.parquet.column.page.DictionaryPage)#org/apache/parquet/column/page/DictionaryPage/getEncoding()
org/apache/parquet/hadoop/ParquetFileWriter/writeDictionaryPage(org.apache.parquet.column.page.DictionaryPage)#org/apache/parquet/bytes/BytesInput/writeAllTo(java.io.OutputStream)
org/apache/parquet/hadoop/ParquetFileWriter/writeDictionaryPage(org.apache.parquet.column.page.DictionaryPage)#org/apache/parquet/bytes/BytesInput/size()
org/apache/parquet/hadoop/ParquetFileWriter/writeDictionaryPage(org.apache.parquet.column.page.DictionaryPage)#org/apache/parquet/column/page/DictionaryPage/getDictionarySize()
org/apache/parquet/hadoop/ParquetFileWriter/writeDictionaryPage(org.apache.parquet.column.page.DictionaryPage)#org/apache/parquet/hadoop/ParquetFileWriter/STATE/write()
org/apache/parquet/hadoop/ParquetFileWriter/endBlock()#org/apache/parquet/hadoop/ParquetFileWriter/STATE/endBlock()
org/apache/parquet/hadoop/ParquetFileWriter/endBlock()#java/util/List/add(E)
org/apache/parquet/hadoop/ParquetFileWriter/endBlock()#org/apache/parquet/hadoop/metadata/BlockMetaData/setRowCount(long)
org/apache/parquet/hadoop/ParquetFileWriter/serializeFooter(org.apache.parquet.hadoop.metadata.ParquetMetadata,org.apache.parquet.hadoop.FSDataOutputStream)#org/apache/parquet/format/converter/ParquetMetadataConverter/toParquetMetadata(int,org.apache.parquet.hadoop.metadata.ParquetMetadata)
org/apache/parquet/hadoop/ParquetFileWriter/serializeFooter(org.apache.parquet.hadoop.metadata.ParquetMetadata,org.apache.parquet.hadoop.FSDataOutputStream)#org/apache/parquet/bytes/BytesUtils/writeIntLittleEndian(java.io.OutputStream,int)
org/apache/parquet/hadoop/ParquetFileWriter/writeMetadataFile(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path,java.util.List,org.apache.parquet.hadoop.ParquetOutputFormat.JobSummaryLevel)#org/apache/parquet/hadoop/metadata/ParquetMetadata/getBlocks()
org/apache/parquet/hadoop/ParquetFileWriter/writeMetadataFile(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path,java.util.List,org.apache.parquet.hadoop.ParquetOutputFormat.JobSummaryLevel)#org/apache/parquet/Preconditions/checkArgument(boolean,java.lang.String)
org/apache/parquet/hadoop/ParquetFileWriter/writeMetadataFile(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path,java.util.List,org.apache.parquet.hadoop.ParquetOutputFormat.JobSummaryLevel)#java/util/List/clear()
org/apache/parquet/hadoop/ParquetFileWriter/writeMetadataFile(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path,java.util.List,org.apache.parquet.hadoop.ParquetOutputFormat.JobSummaryLevel)#org/apache/parquet/hadoop/ParquetFileWriter/writeMetadataFile(org.apache.parquet.hadoop.Path,org.apache.parquet.hadoop.metadata.ParquetMetadata,org.apache.parquet.hadoop.FileSystem,java.lang.String)
org/apache/parquet/hadoop/ParquetFileWriter/writeMetadataFile(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path,java.util.List,org.apache.parquet.hadoop.ParquetOutputFormat.JobSummaryLevel)#org/apache/parquet/hadoop/ParquetFileWriter/mergeFooters(org.apache.parquet.hadoop.Path,java.util.List)
org/apache/parquet/hadoop/ParquetFileWriter/copy(org.apache.parquet.io.SeekableInputStream,org.apache.parquet.hadoop.FSDataOutputStream,long,long)#java/io/InputStream/read(byte[],int,int)
org/apache/parquet/hadoop/ParquetFileWriter/copy(org.apache.parquet.io.SeekableInputStream,org.apache.parquet.hadoop.FSDataOutputStream,long,long)#org/apache/parquet/io/SeekableInputStream/seek(long)
org/apache/parquet/hadoop/ParquetFileWriter/copy(org.apache.parquet.io.SeekableInputStream,org.apache.parquet.hadoop.FSDataOutputStream,long,long)#java/lang/ThreadLocal/get()
org/apache/parquet/hadoop/ParquetFileWriter/copy(org.apache.parquet.io.SeekableInputStream,org.apache.parquet.hadoop.FSDataOutputStream,long,long)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/parquet/hadoop/ParquetFileWriter/start()#org/apache/parquet/hadoop/ParquetFileWriter/STATE/start()
org/apache/parquet/hadoop/ParquetFileWriter/writeMetadataFile(org.apache.parquet.hadoop.Path,org.apache.parquet.hadoop.metadata.ParquetMetadata,org.apache.parquet.hadoop.FileSystem,java.lang.String)#org/apache/parquet/hadoop/ParquetFileWriter/writeMetadataFile(org.apache.parquet.hadoop.Path,org.apache.parquet.hadoop.metadata.ParquetMetadata,org.apache.parquet.hadoop.FileSystem)
org/apache/parquet/hadoop/ParquetFileWriter/writeMetadataFile(org.apache.parquet.hadoop.Path,org.apache.parquet.hadoop.metadata.ParquetMetadata,org.apache.parquet.hadoop.FileSystem,java.lang.String)#java/lang/Object/Object()
org/apache/parquet/hadoop/ParquetFileWriter/mergeInto(org.apache.parquet.hadoop.metadata.FileMetaData,org.apache.parquet.hadoop.metadata.GlobalMetaData)#org/apache/parquet/hadoop/ParquetFileWriter/mergeInto(org.apache.parquet.hadoop.metadata.FileMetaData,org.apache.parquet.hadoop.metadata.GlobalMetaData,boolean)
org/apache/parquet/hadoop/ParquetFileWriter/writeDataPage(int,int,org.apache.parquet.bytes.BytesInput,org.apache.parquet.column.statistics.Statistics,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding)#org/apache/parquet/column/EncodingStats/Builder/addDataEncoding(org.apache.parquet.column.Encoding)
org/apache/parquet/hadoop/ParquetFileWriter/writeDataPage(int,int,org.apache.parquet.bytes.BytesInput,org.apache.parquet.column.statistics.Statistics,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding)#org/apache/parquet/format/converter/ParquetMetadataConverter/writeDataPageHeader(int,int,int,org.apache.parquet.column.statistics.Statistics,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding,java.io.OutputStream)
org/apache/parquet/hadoop/ParquetFileWriter/writeDataPage(int,int,org.apache.parquet.bytes.BytesInput,org.apache.parquet.column.statistics.Statistics,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding)#org/apache/parquet/bytes/BytesInput/writeAllTo(java.io.OutputStream)
org/apache/parquet/hadoop/ParquetFileWriter/writeDataPage(int,int,org.apache.parquet.bytes.BytesInput,org.apache.parquet.column.statistics.Statistics,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding)#org/apache/parquet/bytes/BytesInput/size()
org/apache/parquet/hadoop/ParquetFileWriter/writeDataPage(int,int,org.apache.parquet.bytes.BytesInput,org.apache.parquet.column.statistics.Statistics,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding)#org/apache/parquet/hadoop/ParquetFileWriter/STATE/write()
org/apache/parquet/hadoop/ParquetFileWriter/writeDataPage(int,int,org.apache.parquet.bytes.BytesInput,org.apache.parquet.column.statistics.Statistics,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding)#java/util/Set/add(E)
org/apache/parquet/hadoop/ParquetFileWriter/writeDataPage(int,int,org.apache.parquet.bytes.BytesInput,org.apache.parquet.column.statistics.Statistics,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding)#org/apache/parquet/column/statistics/Statistics/mergeStatistics(org.apache.parquet.column.statistics.Statistics)
org/apache/parquet/hadoop/ParquetFileWriter/appendRowGroup(org.apache.parquet.hadoop.FSDataInputStream,org.apache.parquet.hadoop.metadata.BlockMetaData,boolean)#org/apache/parquet/hadoop/ParquetFileWriter/appendRowGroup(org.apache.parquet.hadoop.FSDataInputStream,org.apache.parquet.hadoop.metadata.BlockMetaData,boolean)
org/apache/parquet/hadoop/ParquetFileWriter/mergeFooters(org.apache.parquet.hadoop.Path,java.util.List)#org/apache/parquet/hadoop/metadata/ParquetMetadata/getBlocks()
org/apache/parquet/hadoop/ParquetFileWriter/mergeFooters(org.apache.parquet.hadoop.Path,java.util.List)#org/apache/parquet/hadoop/Footer/getParquetMetadata()
org/apache/parquet/hadoop/ParquetFileWriter/mergeFooters(org.apache.parquet.hadoop.Path,java.util.List)#org/apache/parquet/hadoop/metadata/ParquetMetadata/getFileMetaData()
org/apache/parquet/hadoop/ParquetFileWriter/mergeFooters(org.apache.parquet.hadoop.Path,java.util.List)#java/lang/String/length()
org/apache/parquet/hadoop/ParquetFileWriter/mergeFooters(org.apache.parquet.hadoop.Path,java.util.List)#org/apache/parquet/hadoop/Footer/getFile()
org/apache/parquet/hadoop/ParquetFileWriter/mergeFooters(org.apache.parquet.hadoop.Path,java.util.List)#org/apache/parquet/io/ParquetEncodingException/ParquetEncodingException(java.lang.String)
org/apache/parquet/hadoop/ParquetFileWriter/mergeFooters(org.apache.parquet.hadoop.Path,java.util.List)#java/lang/String/substring(int)
org/apache/parquet/hadoop/ParquetFileWriter/mergeFooters(org.apache.parquet.hadoop.Path,java.util.List)#java/util/List/add(E)
org/apache/parquet/hadoop/ParquetFileWriter/mergeFooters(org.apache.parquet.hadoop.Path,java.util.List)#org/apache/parquet/hadoop/ParquetFileWriter/mergeInto(org.apache.parquet.hadoop.metadata.FileMetaData,org.apache.parquet.hadoop.metadata.GlobalMetaData)
org/apache/parquet/hadoop/ParquetFileWriter/mergeFooters(org.apache.parquet.hadoop.Path,java.util.List)#org/apache/parquet/hadoop/metadata/GlobalMetaData/merge()
org/apache/parquet/hadoop/ParquetFileWriter/mergeFooters(org.apache.parquet.hadoop.Path,java.util.List)#org/apache/parquet/hadoop/metadata/BlockMetaData/setPath(java.lang.String)
org/apache/parquet/hadoop/ParquetFileWriter/mergeFooters(org.apache.parquet.hadoop.Path,java.util.List)#java/util/ArrayList/ArrayList()
org/apache/parquet/hadoop/ParquetFileWriter/mergeFooters(org.apache.parquet.hadoop.Path,java.util.List)#org/apache/parquet/hadoop/metadata/ParquetMetadata/ParquetMetadata(org.apache.parquet.hadoop.metadata.FileMetaData,java.util.List)
org/apache/parquet/hadoop/ParquetFileWriter/mergeFooters(org.apache.parquet.hadoop.Path,java.util.List)#java/lang/String/startsWith(java.lang.String)
org/apache/parquet/hadoop/ParquetFileWriter/mergeInto(org.apache.parquet.schema.MessageType,org.apache.parquet.schema.MessageType)#org/apache/parquet/hadoop/ParquetFileWriter/mergeInto(org.apache.parquet.schema.MessageType,org.apache.parquet.schema.MessageType,boolean)
org/apache/parquet/hadoop/ParquetFileWriter/writeMergedMetadataFile(java.util.List,org.apache.parquet.hadoop.Path,org.apache.parquet.hadoop.Configuration)#org/apache/parquet/hadoop/ParquetFileWriter/mergeMetadataFiles(java.util.List,org.apache.parquet.hadoop.Configuration)
org/apache/parquet/hadoop/ParquetFileWriter/writeMergedMetadataFile(java.util.List,org.apache.parquet.hadoop.Path,org.apache.parquet.hadoop.Configuration)#org/apache/parquet/hadoop/ParquetFileWriter/writeMetadataFile(org.apache.parquet.hadoop.Path,org.apache.parquet.hadoop.metadata.ParquetMetadata,org.apache.parquet.hadoop.FileSystem)
org/apache/parquet/hadoop/ParquetFileWriter/writeMetadataFile(org.apache.parquet.hadoop.Path,org.apache.parquet.hadoop.metadata.ParquetMetadata,org.apache.parquet.hadoop.FileSystem)#org/apache/parquet/hadoop/ParquetFileWriter/serializeFooter(org.apache.parquet.hadoop.metadata.ParquetMetadata,org.apache.parquet.hadoop.FSDataOutputStream)
org/apache/parquet/hadoop/ParquetFileWriter/supportsBlockSize(org.apache.parquet.hadoop.FileSystem)#java/util/Set/contains(java.lang.Object)
org/apache/parquet/hadoop/ParquetFileWriter/mergeInto(org.apache.parquet.hadoop.metadata.FileMetaData,org.apache.parquet.hadoop.metadata.GlobalMetaData,boolean)#org/apache/parquet/hadoop/metadata/GlobalMetaData/GlobalMetaData(org.apache.parquet.schema.MessageType,java.util.Map,java.util.Set)
org/apache/parquet/hadoop/ParquetFileWriter/mergeInto(org.apache.parquet.hadoop.metadata.FileMetaData,org.apache.parquet.hadoop.metadata.GlobalMetaData,boolean)#java/util/Map/Entry/getValue()
org/apache/parquet/hadoop/ParquetFileWriter/mergeInto(org.apache.parquet.hadoop.metadata.FileMetaData,org.apache.parquet.hadoop.metadata.GlobalMetaData,boolean)#java/util/Set/addAll(java.util.Collection)
org/apache/parquet/hadoop/ParquetFileWriter/mergeInto(org.apache.parquet.hadoop.metadata.FileMetaData,org.apache.parquet.hadoop.metadata.GlobalMetaData,boolean)#java/util/LinkedHashSet/LinkedHashSet()
org/apache/parquet/hadoop/ParquetFileWriter/mergeInto(org.apache.parquet.hadoop.metadata.FileMetaData,org.apache.parquet.hadoop.metadata.GlobalMetaData,boolean)#java/util/Map/putAll(java.util.Map)
org/apache/parquet/hadoop/ParquetFileWriter/mergeInto(org.apache.parquet.hadoop.metadata.FileMetaData,org.apache.parquet.hadoop.metadata.GlobalMetaData,boolean)#java/util/Map/get(java.lang.Object)
org/apache/parquet/hadoop/ParquetFileWriter/mergeInto(org.apache.parquet.hadoop.metadata.FileMetaData,org.apache.parquet.hadoop.metadata.GlobalMetaData,boolean)#java/util/HashMap/HashMap()
org/apache/parquet/hadoop/ParquetFileWriter/mergeInto(org.apache.parquet.hadoop.metadata.FileMetaData,org.apache.parquet.hadoop.metadata.GlobalMetaData,boolean)#java/util/Set/add(E)
org/apache/parquet/hadoop/ParquetFileWriter/mergeInto(org.apache.parquet.hadoop.metadata.FileMetaData,org.apache.parquet.hadoop.metadata.GlobalMetaData,boolean)#java/util/Map/Entry/getKey()
org/apache/parquet/hadoop/ParquetFileWriter/mergeInto(org.apache.parquet.hadoop.metadata.FileMetaData,org.apache.parquet.hadoop.metadata.GlobalMetaData,boolean)#java/util/HashSet/HashSet()
org/apache/parquet/hadoop/ParquetFileWriter/mergeInto(org.apache.parquet.hadoop.metadata.FileMetaData,org.apache.parquet.hadoop.metadata.GlobalMetaData,boolean)#org/apache/parquet/hadoop/ParquetFileWriter/mergeInto(org.apache.parquet.schema.MessageType,org.apache.parquet.schema.MessageType,boolean)
org/apache/parquet/hadoop/ParquetFileWriter/mergeInto(org.apache.parquet.hadoop.metadata.FileMetaData,org.apache.parquet.hadoop.metadata.GlobalMetaData,boolean)#org/apache/parquet/hadoop/metadata/FileMetaData/getCreatedBy()
org/apache/parquet/hadoop/ParquetFileWriter/mergeInto(org.apache.parquet.hadoop.metadata.FileMetaData,org.apache.parquet.hadoop.metadata.GlobalMetaData,boolean)#org/apache/parquet/schema/Type/equals(java.lang.Object)
org/apache/parquet/hadoop/ParquetFileWriter/mergeInto(org.apache.parquet.hadoop.metadata.FileMetaData,org.apache.parquet.hadoop.metadata.GlobalMetaData,boolean)#org/apache/parquet/hadoop/metadata/FileMetaData/getSchema()
org/apache/parquet/hadoop/ParquetFileWriter/mergeInto(org.apache.parquet.hadoop.metadata.FileMetaData,org.apache.parquet.hadoop.metadata.GlobalMetaData,boolean)#org/apache/parquet/hadoop/metadata/FileMetaData/getKeyValueMetaData()
org/apache/parquet/hadoop/ParquetFileWriter/mergeInto(org.apache.parquet.hadoop.metadata.FileMetaData,org.apache.parquet.hadoop.metadata.GlobalMetaData,boolean)#org/apache/parquet/hadoop/metadata/GlobalMetaData/getCreatedBy()
org/apache/parquet/hadoop/ParquetFileWriter/mergeInto(org.apache.parquet.hadoop.metadata.FileMetaData,org.apache.parquet.hadoop.metadata.GlobalMetaData,boolean)#java/util/Map/put(K,V)
org/apache/parquet/hadoop/ParquetFileWriter/mergeInto(org.apache.parquet.hadoop.metadata.FileMetaData,org.apache.parquet.hadoop.metadata.GlobalMetaData,boolean)#java/util/Map/entrySet()
org/apache/parquet/hadoop/ParquetFileWriter/mergeInto(org.apache.parquet.hadoop.metadata.FileMetaData,org.apache.parquet.hadoop.metadata.GlobalMetaData,boolean)#org/apache/parquet/hadoop/metadata/GlobalMetaData/getKeyValueMetaData()
org/apache/parquet/hadoop/ParquetFileWriter/mergeInto(org.apache.parquet.hadoop.metadata.FileMetaData,org.apache.parquet.hadoop.metadata.GlobalMetaData,boolean)#org/apache/parquet/hadoop/metadata/GlobalMetaData/getSchema()
org/apache/parquet/hadoop/ParquetFileWriter/appendRowGroups(org.apache.parquet.hadoop.FSDataInputStream,java.util.List,boolean)#org/apache/parquet/hadoop/util/HadoopStreams/wrap(org.apache.parquet.hadoop.FSDataInputStream)
org/apache/parquet/hadoop/ParquetFileWriter/appendRowGroups(org.apache.parquet.hadoop.FSDataInputStream,java.util.List,boolean)#org/apache/parquet/hadoop/ParquetFileWriter/appendRowGroups(org.apache.parquet.hadoop.FSDataInputStream,java.util.List,boolean)
org/apache/parquet/hadoop/ParquetFileWriter/mergeInto(org.apache.parquet.schema.MessageType,org.apache.parquet.schema.MessageType,boolean)#org/apache/parquet/schema/MessageType/union(org.apache.parquet.schema.MessageType,boolean)
org/apache/parquet/proto/ProtoWriteSupport/BooleanWriter/writeRawValue(java.lang.Object)#org/apache/parquet/io/api/RecordConsumer/addBoolean(boolean)
org/apache/parquet/glob/GlobNode/GlobNodeSequence/accept(org.apache.parquet.glob.GlobNode.Visitor)#org/apache/parquet/glob/GlobNode/Visitor/visit(org.apache.parquet.glob.GlobNode.GlobNodeSequence)
org/apache/parquet/glob/GlobNode/GlobNodeSequence/hashCode()#java/util/List/hashCode()
org/apache/parquet/glob/GlobNode/GlobNodeSequence/equals(java.lang.Object)#java/util/List/equals(java.lang.Object)
org/apache/parquet/glob/GlobNode/GlobNodeSequence/equals(java.lang.Object)#java/lang/Object/getClass()
org/apache/parquet/filter2/predicate/Operators/Eq/accept(org.apache.parquet.filter2.predicate.FilterPredicate.Visitor)#org/apache/parquet/filter2/predicate/FilterPredicate/Visitor/visit(org.apache.parquet.filter2.predicate.Operators.Eq)
org/apache/parquet/avro/TestReadWriteOldListBehavior/testEmptyMap()#java/lang/Class/getSimpleName()
org/apache/parquet/avro/TestReadWriteOldListBehavior/testEmptyMap()#org/apache/parquet/avro/AvroParquetWriter/AvroParquetWriter(org.apache.parquet.hadoop.Path,org.apache.parquet.pig.Schema)
org/apache/parquet/avro/TestReadWriteOldListBehavior/testEmptyMap()#org/apache/parquet/avro/AvroParquetReader/AvroParquetReader(org.apache.parquet.hadoop.Path,org.apache.parquet.filter.UnboundRecordFilter)
org/apache/parquet/avro/TestReadWriteOldListBehavior/testEmptyMap()#java/lang/Object/getClass()
org/apache/parquet/avro/TestReadWriteOldListBehavior/testEmptyMap()#java/io/File/createTempFile(java.lang.String,java.lang.String)
org/apache/parquet/avro/TestReadWriteOldListBehavior/testEmptyMap()#java/io/File/deleteOnExit()
org/apache/parquet/avro/TestReadWriteOldListBehavior/testEmptyMap()#java/io/File/getPath()
org/apache/parquet/avro/TestReadWriteOldListBehavior/testEmptyMap()#java/io/File/delete()
org/apache/parquet/avro/TestReadWriteOldListBehavior/testEmptyMap()#java/lang/Object/Object()
org/apache/parquet/avro/TestReadWriteOldListBehavior/data()#java/util/Arrays/asList(T[])
org/apache/parquet/avro/TestReadWriteOldListBehavior/testArrayWithNullValues()#java/util/ArrayList/ArrayList()
org/apache/parquet/avro/TestReadWriteOldListBehavior/testArrayWithNullValues()#java/lang/Class/getSimpleName()
org/apache/parquet/avro/TestReadWriteOldListBehavior/testArrayWithNullValues()#java/lang/Throwable/getMessage()
org/apache/parquet/avro/TestReadWriteOldListBehavior/testArrayWithNullValues()#java/lang/String/getBytes(java.lang.String)
org/apache/parquet/avro/TestReadWriteOldListBehavior/testArrayWithNullValues()#java/nio/ByteBuffer/wrap(byte[])
org/apache/parquet/avro/TestReadWriteOldListBehavior/testArrayWithNullValues()#org/apache/parquet/avro/AvroTestUtil/optional(org.apache.parquet.pig.Schema)
org/apache/parquet/avro/TestReadWriteOldListBehavior/testArrayWithNullValues()#org/apache/parquet/avro/AvroParquetWriter/AvroParquetWriter(org.apache.parquet.hadoop.Path,org.apache.parquet.pig.Schema)
org/apache/parquet/avro/TestReadWriteOldListBehavior/testArrayWithNullValues()#java/util/Arrays/asList(T[])
org/apache/parquet/avro/TestReadWriteOldListBehavior/testArrayWithNullValues()#java/lang/Object/getClass()
org/apache/parquet/avro/TestReadWriteOldListBehavior/testArrayWithNullValues()#java/lang/String/contains(java.lang.CharSequence)
org/apache/parquet/avro/TestReadWriteOldListBehavior/testArrayWithNullValues()#java/io/File/createTempFile(java.lang.String,java.lang.String)
org/apache/parquet/avro/TestReadWriteOldListBehavior/testArrayWithNullValues()#java/io/File/deleteOnExit()
org/apache/parquet/avro/TestReadWriteOldListBehavior/testArrayWithNullValues()#java/io/File/getPath()
org/apache/parquet/avro/TestReadWriteOldListBehavior/testArrayWithNullValues()#java/io/File/delete()
org/apache/parquet/avro/TestReadWriteOldListBehavior/testArrayWithNullValues()#java/lang/Object/Object()
org/apache/parquet/avro/TestReadWriteOldListBehavior/testMapRequiredValueWithNull()#java/lang/Class/getSimpleName()
org/apache/parquet/avro/TestReadWriteOldListBehavior/testMapRequiredValueWithNull()#org/apache/parquet/avro/AvroParquetWriter/AvroParquetWriter(org.apache.parquet.hadoop.Path,org.apache.parquet.pig.Schema)
org/apache/parquet/avro/TestReadWriteOldListBehavior/testMapRequiredValueWithNull()#java/util/HashMap/HashMap()
org/apache/parquet/avro/TestReadWriteOldListBehavior/testMapRequiredValueWithNull()#java/util/Map/put(K,V)
org/apache/parquet/avro/TestReadWriteOldListBehavior/testMapRequiredValueWithNull()#java/lang/Object/getClass()
org/apache/parquet/avro/TestReadWriteOldListBehavior/testMapRequiredValueWithNull()#java/io/File/createTempFile(java.lang.String,java.lang.String)
org/apache/parquet/avro/TestReadWriteOldListBehavior/testMapRequiredValueWithNull()#java/io/File/deleteOnExit()
org/apache/parquet/avro/TestReadWriteOldListBehavior/testMapRequiredValueWithNull()#java/io/File/getPath()
org/apache/parquet/avro/TestReadWriteOldListBehavior/testMapRequiredValueWithNull()#java/io/File/delete()
org/apache/parquet/avro/TestReadWriteOldListBehavior/testMapRequiredValueWithNull()#java/lang/Object/Object()
org/apache/parquet/avro/TestReadWriteOldListBehavior/testAllUsingDefaultAvroSchema()#org/apache/parquet/hadoop/ParquetWriter/ParquetWriter(org.apache.parquet.hadoop.Path,org.apache.parquet.hadoop.api.WriteSupport)
org/apache/parquet/avro/TestReadWriteOldListBehavior/testAllUsingDefaultAvroSchema()#java/util/ArrayList/ArrayList()
org/apache/parquet/avro/TestReadWriteOldListBehavior/testAllUsingDefaultAvroSchema()#org/apache/parquet/avro/TestReadWriteOldListBehavior/str(java.lang.String)
org/apache/parquet/avro/TestReadWriteOldListBehavior/testAllUsingDefaultAvroSchema()#java/lang/Class/getSimpleName()
org/apache/parquet/avro/TestReadWriteOldListBehavior/testAllUsingDefaultAvroSchema()#org/apache/parquet/avro/AvroTestUtil/record(java.lang.String,Schema.Field[])
org/apache/parquet/avro/TestReadWriteOldListBehavior/testAllUsingDefaultAvroSchema()#org/apache/parquet/avro/AvroTestUtil/optionalField(java.lang.String,org.apache.parquet.pig.Schema)
org/apache/parquet/avro/TestReadWriteOldListBehavior/testAllUsingDefaultAvroSchema()#java/util/Arrays/asList(T[])
org/apache/parquet/avro/TestReadWriteOldListBehavior/testAllUsingDefaultAvroSchema()#java/util/HashMap/HashMap()
org/apache/parquet/avro/TestReadWriteOldListBehavior/testAllUsingDefaultAvroSchema()#org/apache/parquet/hadoop/ParquetWriter/close()
org/apache/parquet/avro/TestReadWriteOldListBehavior/testAllUsingDefaultAvroSchema()#java/lang/String/getBytes(java.lang.String)
org/apache/parquet/avro/TestReadWriteOldListBehavior/testAllUsingDefaultAvroSchema()#java/lang/Object/getClass()
org/apache/parquet/avro/TestReadWriteOldListBehavior/testAllUsingDefaultAvroSchema()#org/apache/parquet/avro/TestReadWriteOldListBehavior/testAllUsingDefaultAvroSchema()/$anonymous1/()
org/apache/parquet/avro/TestReadWriteOldListBehavior/testAllUsingDefaultAvroSchema()#org/apache/parquet/hadoop/ParquetWriter/write(T)
org/apache/parquet/avro/TestReadWriteOldListBehavior/testAllUsingDefaultAvroSchema()#org/apache/parquet/avro/AvroParquetReader/AvroParquetReader(org.apache.parquet.hadoop.Path,org.apache.parquet.filter.UnboundRecordFilter)
org/apache/parquet/avro/TestReadWriteOldListBehavior/testAllUsingDefaultAvroSchema()#java/nio/ByteBuffer/wrap(byte[])
org/apache/parquet/avro/TestReadWriteOldListBehavior/testAllUsingDefaultAvroSchema()#java/util/Map/put(K,V)
org/apache/parquet/avro/TestReadWriteOldListBehavior/testAllUsingDefaultAvroSchema()#java/io/File/createTempFile(java.lang.String,java.lang.String)
org/apache/parquet/avro/TestReadWriteOldListBehavior/testAllUsingDefaultAvroSchema()#org/apache/parquet/avro/AvroTestUtil/primitive(Schema.Type)
org/apache/parquet/avro/TestReadWriteOldListBehavior/testAllUsingDefaultAvroSchema()#java/io/File/deleteOnExit()
org/apache/parquet/avro/TestReadWriteOldListBehavior/testAllUsingDefaultAvroSchema()#java/io/File/getPath()
org/apache/parquet/avro/TestReadWriteOldListBehavior/testAllUsingDefaultAvroSchema()#java/io/File/delete()
org/apache/parquet/avro/TestReadWriteOldListBehavior/testAllUsingDefaultAvroSchema()#java/lang/Object/Object()
org/apache/parquet/avro/TestReadWriteOldListBehavior/testAll()#java/util/ArrayList/ArrayList()
org/apache/parquet/avro/TestReadWriteOldListBehavior/testAll()#org/apache/parquet/avro/TestReadWriteOldListBehavior/str(java.lang.String)
org/apache/parquet/avro/TestReadWriteOldListBehavior/testAll()#java/lang/Class/getSimpleName()
org/apache/parquet/avro/TestReadWriteOldListBehavior/testAll()#java/lang/String/getBytes(java.lang.String)
org/apache/parquet/avro/TestReadWriteOldListBehavior/testAll()#org/apache/parquet/avro/AvroParquetReader/AvroParquetReader(org.apache.parquet.hadoop.Path,org.apache.parquet.filter.UnboundRecordFilter)
org/apache/parquet/avro/TestReadWriteOldListBehavior/testAll()#java/nio/ByteBuffer/wrap(byte[])
org/apache/parquet/avro/TestReadWriteOldListBehavior/testAll()#java/lang/Object/getClass()
org/apache/parquet/avro/TestReadWriteOldListBehavior/testAll()#org/apache/parquet/avro/AvroParquetWriter/AvroParquetWriter(org.apache.parquet.hadoop.Path,org.apache.parquet.pig.Schema)
org/apache/parquet/avro/TestReadWriteOldListBehavior/testAll()#java/util/Arrays/asList(T[])
org/apache/parquet/avro/TestReadWriteOldListBehavior/testAll()#java/io/File/createTempFile(java.lang.String,java.lang.String)
org/apache/parquet/avro/TestReadWriteOldListBehavior/testAll()#java/io/File/deleteOnExit()
org/apache/parquet/avro/TestReadWriteOldListBehavior/testAll()#java/io/File/getPath()
org/apache/parquet/avro/TestReadWriteOldListBehavior/testAll()#java/io/File/delete()
org/apache/parquet/avro/TestReadWriteOldListBehavior/testAll()#java/lang/Object/Object()
org/apache/parquet/avro/TestReadWriteOldListBehavior/testMapWithNulls()#org/apache/parquet/avro/TestReadWriteOldListBehavior/str(java.lang.String)
org/apache/parquet/avro/TestReadWriteOldListBehavior/testMapWithNulls()#java/lang/Class/getSimpleName()
org/apache/parquet/avro/TestReadWriteOldListBehavior/testMapWithNulls()#org/apache/parquet/avro/AvroParquetWriter/AvroParquetWriter(org.apache.parquet.hadoop.Path,org.apache.parquet.pig.Schema)
org/apache/parquet/avro/TestReadWriteOldListBehavior/testMapWithNulls()#java/util/HashMap/HashMap()
org/apache/parquet/avro/TestReadWriteOldListBehavior/testMapWithNulls()#org/apache/parquet/avro/AvroParquetReader/AvroParquetReader(org.apache.parquet.hadoop.Path,org.apache.parquet.filter.UnboundRecordFilter)
org/apache/parquet/avro/TestReadWriteOldListBehavior/testMapWithNulls()#java/util/Map/put(K,V)
org/apache/parquet/avro/TestReadWriteOldListBehavior/testMapWithNulls()#java/lang/Object/getClass()
org/apache/parquet/avro/TestReadWriteOldListBehavior/testMapWithNulls()#java/io/File/createTempFile(java.lang.String,java.lang.String)
org/apache/parquet/avro/TestReadWriteOldListBehavior/testMapWithNulls()#java/io/File/deleteOnExit()
org/apache/parquet/avro/TestReadWriteOldListBehavior/testMapWithNulls()#java/io/File/getPath()
org/apache/parquet/avro/TestReadWriteOldListBehavior/testMapWithNulls()#java/io/File/delete()
org/apache/parquet/avro/TestReadWriteOldListBehavior/testMapWithNulls()#java/lang/Object/Object()
org/apache/parquet/avro/TestReadWriteOldListBehavior/testMapWithUtf8Key()#org/apache/parquet/avro/TestReadWriteOldListBehavior/str(java.lang.String)
org/apache/parquet/avro/TestReadWriteOldListBehavior/testMapWithUtf8Key()#java/lang/Class/getSimpleName()
org/apache/parquet/avro/TestReadWriteOldListBehavior/testMapWithUtf8Key()#org/apache/parquet/avro/AvroParquetWriter/AvroParquetWriter(org.apache.parquet.hadoop.Path,org.apache.parquet.pig.Schema)
org/apache/parquet/avro/TestReadWriteOldListBehavior/testMapWithUtf8Key()#org/apache/parquet/avro/AvroParquetReader/AvroParquetReader(org.apache.parquet.hadoop.Path,org.apache.parquet.filter.UnboundRecordFilter)
org/apache/parquet/avro/TestReadWriteOldListBehavior/testMapWithUtf8Key()#java/lang/Object/getClass()
org/apache/parquet/avro/TestReadWriteOldListBehavior/testMapWithUtf8Key()#java/io/File/createTempFile(java.lang.String,java.lang.String)
org/apache/parquet/avro/TestReadWriteOldListBehavior/testMapWithUtf8Key()#java/io/File/deleteOnExit()
org/apache/parquet/avro/TestReadWriteOldListBehavior/testMapWithUtf8Key()#java/io/File/getPath()
org/apache/parquet/avro/TestReadWriteOldListBehavior/testMapWithUtf8Key()#java/io/File/delete()
org/apache/parquet/avro/TestReadWriteOldListBehavior/testMapWithUtf8Key()#java/lang/Object/Object()
org/apache/parquet/avro/TestReadWriteOldListBehavior/testEmptyArray()#java/util/ArrayList/ArrayList()
org/apache/parquet/avro/TestReadWriteOldListBehavior/testEmptyArray()#java/lang/Class/getSimpleName()
org/apache/parquet/avro/TestReadWriteOldListBehavior/testEmptyArray()#org/apache/parquet/avro/AvroParquetWriter/AvroParquetWriter(org.apache.parquet.hadoop.Path,org.apache.parquet.pig.Schema)
org/apache/parquet/avro/TestReadWriteOldListBehavior/testEmptyArray()#org/apache/parquet/avro/AvroParquetReader/AvroParquetReader(org.apache.parquet.hadoop.Path,org.apache.parquet.filter.UnboundRecordFilter)
org/apache/parquet/avro/TestReadWriteOldListBehavior/testEmptyArray()#java/lang/Object/getClass()
org/apache/parquet/avro/TestReadWriteOldListBehavior/testEmptyArray()#java/io/File/createTempFile(java.lang.String,java.lang.String)
org/apache/parquet/avro/TestReadWriteOldListBehavior/testEmptyArray()#java/io/File/deleteOnExit()
org/apache/parquet/avro/TestReadWriteOldListBehavior/testEmptyArray()#java/io/File/getPath()
org/apache/parquet/avro/TestReadWriteOldListBehavior/testEmptyArray()#java/io/File/delete()
org/apache/parquet/avro/TestReadWriteOldListBehavior/testEmptyArray()#java/lang/Object/Object()
org/apache/parquet/hadoop/ParquetReader/Builder/withConf(org.apache.parquet.hadoop.Configuration)#org/apache/parquet/Preconditions/checkNotNull(T,java.lang.String)
org/apache/parquet/hadoop/ParquetReader/Builder/getReadSupport()#org/apache/parquet/Preconditions/checkArgument(boolean,java.lang.String)
org/apache/parquet/hadoop/ParquetReader/Builder/build()#org/apache/parquet/hadoop/ParquetReader/Builder/getReadSupport()
org/apache/parquet/hadoop/ParquetReader/Builder/build()#org/apache/parquet/hadoop/ParquetReader/ParquetReader(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path,org.apache.parquet.hadoop.api.ReadSupport,org.apache.parquet.filter2.compat.FilterCompat.Filter)
org/apache/parquet/hadoop/ParquetReader/Builder/withFilter(org.apache.parquet.filter2.compat.FilterCompat.Filter)#org/apache/parquet/Preconditions/checkNotNull(T,java.lang.String)
org/apache/parquet/hadoop/util/MockInputStream/readFully(long,byte[])#java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)
org/apache/parquet/hadoop/util/MockInputStream/seekToNewSource(long)#org/apache/parquet/hadoop/util/MockInputStream/seek(long)
org/apache/parquet/hadoop/util/MockInputStream/read(byte[],int,int)#java/io/ByteArrayInputStream/read(byte[],int,int)
org/apache/parquet/hadoop/util/MockInputStream/read(long,byte[],int,int)#org/apache/parquet/hadoop/util/MockInputStream/read(byte[],int,int)
org/apache/parquet/hadoop/util/MockInputStream/read(long,byte[],int,int)#org/apache/parquet/hadoop/util/MockInputStream/seek(long)
org/apache/parquet/hadoop/util/MockInputStream/readFully(long,byte[],int,int)#java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)
org/apache/parquet/filter2/predicate/Operators/UserDefinedByInstance/hashCode()#org/apache/parquet/filter2/predicate/Operators/Column/hashCode()
org/apache/parquet/filter2/predicate/Operators/UserDefinedByInstance/hashCode()#java/lang/Object/hashCode()
org/apache/parquet/filter2/predicate/Operators/UserDefinedByInstance/hashCode()#java/lang/Object/getClass()
org/apache/parquet/filter2/predicate/Operators/UserDefinedByInstance/equals(java.lang.Object)#org/apache/parquet/filter2/predicate/Operators/Column/equals(java.lang.Object)
org/apache/parquet/filter2/predicate/Operators/UserDefinedByInstance/equals(java.lang.Object)#java/lang/Object/equals(java.lang.Object)
org/apache/parquet/filter2/predicate/Operators/UserDefinedByInstance/equals(java.lang.Object)#java/lang/Object/getClass()
org/apache/parquet/hive/internal/Hive010Binding/pushProjectionsAndFilters(org.apache.parquet.hadoop.JobConf,org.apache.parquet.hadoop.Path)#org/apache/parquet/hive/internal/Hive010Binding/init(org.apache.parquet.hadoop.JobConf)
org/apache/parquet/hive/internal/Hive010Binding/pushProjectionsAndFilters(org.apache.parquet.hadoop.JobConf,org.apache.parquet.hadoop.Path)#org/apache/parquet/hive/internal/Hive010Binding/pushProjectionsAndFilters(org.apache.parquet.hadoop.JobConf,java.lang.String,java.lang.String)
org/apache/parquet/hive/internal/Hive010Binding/pushProjectionsAndFilters(org.apache.parquet.hadoop.JobConf,org.apache.parquet.hadoop.Path)#java/lang/Object/Object()
org/apache/parquet/hive/internal/Hive010Binding/init(org.apache.parquet.hadoop.JobConf)#java/lang/String/length()
org/apache/parquet/hive/internal/Hive010Binding/init(org.apache.parquet.hadoop.JobConf)#java/lang/Object/Object()
org/apache/parquet/hive/internal/Hive010Binding/pushProjectionsAndFilters(org.apache.parquet.hadoop.JobConf,java.lang.String,java.lang.String)#java/util/ArrayList/ArrayList()
org/apache/parquet/hive/internal/Hive010Binding/pushProjectionsAndFilters(org.apache.parquet.hadoop.JobConf,java.lang.String,java.lang.String)#java/util/Map/Entry/getValue()
org/apache/parquet/hive/internal/Hive010Binding/pushProjectionsAndFilters(org.apache.parquet.hadoop.JobConf,java.lang.String,java.lang.String)#java/util/Iterator/hasNext()
org/apache/parquet/hive/internal/Hive010Binding/pushProjectionsAndFilters(org.apache.parquet.hadoop.JobConf,java.lang.String,java.lang.String)#org/apache/parquet/hive/internal/Hive010Binding/pushFilters(org.apache.parquet.hadoop.JobConf,org.apache.parquet.hive.internal.TableScanOperator)
org/apache/parquet/hive/internal/Hive010Binding/pushProjectionsAndFilters(org.apache.parquet.hadoop.JobConf,java.lang.String,java.lang.String)#java/util/Iterator/next()
org/apache/parquet/hive/internal/Hive010Binding/pushProjectionsAndFilters(org.apache.parquet.hadoop.JobConf,java.lang.String,java.lang.String)#java/lang/String/equals(java.lang.Object)
org/apache/parquet/hive/internal/Hive010Binding/pushProjectionsAndFilters(org.apache.parquet.hadoop.JobConf,java.lang.String,java.lang.String)#java/util/Map/Entry/getKey()
org/apache/parquet/hive/internal/Hive010Binding/pushProjectionsAndFilters(org.apache.parquet.hadoop.JobConf,java.lang.String,java.lang.String)#java/util/ArrayList/add(E)
org/apache/parquet/column/values/ValuesReader/readValueDictionaryId()#java/lang/UnsupportedOperationException/UnsupportedOperationException()
org/apache/parquet/column/values/ValuesReader/readDouble()#java/lang/UnsupportedOperationException/UnsupportedOperationException()
org/apache/parquet/column/values/ValuesReader/readBoolean()#java/lang/UnsupportedOperationException/UnsupportedOperationException()
org/apache/parquet/column/values/ValuesReader/readBytes()#java/lang/UnsupportedOperationException/UnsupportedOperationException()
org/apache/parquet/column/values/ValuesReader/readLong()#java/lang/UnsupportedOperationException/UnsupportedOperationException()
org/apache/parquet/column/values/ValuesReader/getNextOffset()#org/apache/parquet/io/ParquetDecodingException/ParquetDecodingException(java.lang.String)
org/apache/parquet/column/values/ValuesReader/readFloat()#java/lang/UnsupportedOperationException/UnsupportedOperationException()
org/apache/parquet/column/values/ValuesReader/readInteger()#java/lang/UnsupportedOperationException/UnsupportedOperationException()
org/apache/parquet/column/values/ValuesReader/initFromPage(int,byte[],int)#org/apache/parquet/column/values/ValuesReader/initFromPage(int,java.nio.ByteBuffer,int)
org/apache/parquet/column/values/ValuesReader/initFromPage(int,byte[],int)#java/nio/ByteBuffer/wrap(byte[])
org/apache/parquet/hadoop/LruCache/clear()#java/util/LinkedHashMap/clear()
org/apache/parquet/hadoop/LruCache/put(K,V)#java/util/LinkedHashMap/get(java.lang.Object)
org/apache/parquet/hadoop/LruCache/put(K,V)#java/util/HashMap/put(K,V)
org/apache/parquet/hadoop/LruCache/put(K,V)#org/apache/parquet/hadoop/LruCache/Value/isNewerThan(V)
org/apache/parquet/hadoop/LruCache/put(K,V)#org/apache/parquet/hadoop/LruCache/Value/isCurrent(K)
org/apache/parquet/hadoop/LruCache/remove(K)#java/util/HashMap/remove(java.lang.Object)
org/apache/parquet/hadoop/LruCache/size()#java/util/HashMap/size()
org/apache/parquet/hadoop/LruCache/getCurrentValue(K)#java/util/LinkedHashMap/get(java.lang.Object)
org/apache/parquet/hadoop/LruCache/getCurrentValue(K)#org/apache/parquet/hadoop/LruCache/Value/isCurrent(K)
org/apache/parquet/hadoop/LruCache/getCurrentValue(K)#org/apache/parquet/hadoop/LruCache/remove(K)
org/apache/parquet/hadoop/util/TestSerializationUtil/testReadWriteObjectToConfAsBase64()#java/util/HashMap/HashMap()
org/apache/parquet/hadoop/util/TestSerializationUtil/testReadWriteObjectToConfAsBase64()#org/apache/parquet/hadoop/util/SerializationUtil/writeObjectToConfAsBase64(java.lang.String,java.lang.Object,org.apache.parquet.hadoop.Configuration)
org/apache/parquet/hadoop/util/TestSerializationUtil/testReadWriteObjectToConfAsBase64()#java/util/Map/put(K,V)
org/apache/parquet/hadoop/util/TestSerializationUtil/testReadWriteObjectToConfAsBase64()#org/apache/parquet/hadoop/util/SerializationUtil/readObjectFromConfAsBase64(java.lang.String,org.apache.parquet.hadoop.Configuration)
org/apache/parquet/hadoop/util/TestSerializationUtil/readObjectFromConfAsBase64UnsetKey()#org/apache/parquet/hadoop/util/SerializationUtil/readObjectFromConfAsBase64(java.lang.String,org.apache.parquet.hadoop.Configuration)
org/apache/parquet/avro/AvroWriteSupport/TwoLevelListWriter/writeCollection(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,java.util.Collection)#org/apache/parquet/io/api/RecordConsumer/startField(java.lang.String,int)
org/apache/parquet/avro/AvroWriteSupport/TwoLevelListWriter/writeCollection(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,java.util.Collection)#org/apache/parquet/avro/AvroWriteSupport/writeValue(org.apache.parquet.schema.Type,org.apache.parquet.pig.Schema,java.lang.Object)
org/apache/parquet/avro/AvroWriteSupport/TwoLevelListWriter/writeCollection(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,java.util.Collection)#java/lang/NullPointerException/NullPointerException(java.lang.String)
org/apache/parquet/avro/AvroWriteSupport/TwoLevelListWriter/writeCollection(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,java.util.Collection)#org/apache/parquet/schema/GroupType/getType(int)
org/apache/parquet/avro/AvroWriteSupport/TwoLevelListWriter/writeCollection(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,java.util.Collection)#java/util/Collection/size()
org/apache/parquet/avro/AvroWriteSupport/TwoLevelListWriter/writeCollection(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,java.util.Collection)#org/apache/parquet/io/api/RecordConsumer/endField(java.lang.String,int)
org/apache/parquet/avro/AvroWriteSupport/TwoLevelListWriter/startArray()#org/apache/parquet/io/api/RecordConsumer/startField(java.lang.String,int)
org/apache/parquet/avro/AvroWriteSupport/TwoLevelListWriter/writeObjectArray(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,java.lang.Object[])#org/apache/parquet/io/api/RecordConsumer/startField(java.lang.String,int)
org/apache/parquet/avro/AvroWriteSupport/TwoLevelListWriter/writeObjectArray(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,java.lang.Object[])#org/apache/parquet/io/api/RecordConsumer/endField(java.lang.String,int)
org/apache/parquet/avro/AvroWriteSupport/TwoLevelListWriter/writeObjectArray(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,java.lang.Object[])#org/apache/parquet/avro/AvroWriteSupport/writeValue(org.apache.parquet.schema.Type,org.apache.parquet.pig.Schema,java.lang.Object)
org/apache/parquet/avro/AvroWriteSupport/TwoLevelListWriter/writeObjectArray(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,java.lang.Object[])#java/lang/NullPointerException/NullPointerException(java.lang.String)
org/apache/parquet/avro/AvroWriteSupport/TwoLevelListWriter/writeObjectArray(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,java.lang.Object[])#org/apache/parquet/schema/GroupType/getType(int)
org/apache/parquet/avro/AvroWriteSupport/TwoLevelListWriter/endArray()#org/apache/parquet/io/api/RecordConsumer/endField(java.lang.String,int)
org/apache/parquet/column/values/Utils/readInts(org.apache.parquet.column.values.ValuesReader,byte[],int)#org/apache/parquet/column/values/Utils/readInts(org.apache.parquet.column.values.ValuesReader,byte[],int,int)
org/apache/parquet/column/values/Utils/readData(org.apache.parquet.column.values.ValuesReader,byte[],int,int)#org/apache/parquet/column/values/ValuesReader/initFromPage(int,java.nio.ByteBuffer,int)
org/apache/parquet/column/values/Utils/readData(org.apache.parquet.column.values.ValuesReader,byte[],int,int)#org/apache/parquet/column/values/ValuesReader/readBytes()
org/apache/parquet/column/values/Utils/readData(org.apache.parquet.column.values.ValuesReader,byte[],int,int)#java/nio/ByteBuffer/wrap(byte[])
org/apache/parquet/column/values/Utils/writeInts(org.apache.parquet.column.values.ValuesWriter,int[])#org/apache/parquet/column/values/ValuesWriter/writeInteger(int)
org/apache/parquet/column/values/Utils/getRandomStringSamples(int,int)#java/util/Random/nextInt(int)
org/apache/parquet/column/values/Utils/getRandomStringSamples(int,int)#org/apache/parquet/column/values/RandomStr/get(int)
org/apache/parquet/column/values/Utils/writeData(org.apache.parquet.column.values.ValuesWriter,java.lang.String[])#org/apache/parquet/column/values/ValuesWriter/writeBytes(org.apache.parquet.io.api.Binary)
org/apache/parquet/column/values/Utils/writeData(org.apache.parquet.column.values.ValuesWriter,java.lang.String[])#org/apache/parquet/io/api/Binary/fromString(java.lang.String)
org/apache/parquet/column/values/Utils/readInts(org.apache.parquet.column.values.ValuesReader,byte[],int,int)#org/apache/parquet/column/values/ValuesReader/initFromPage(int,java.nio.ByteBuffer,int)
org/apache/parquet/column/values/Utils/readInts(org.apache.parquet.column.values.ValuesReader,byte[],int,int)#java/nio/ByteBuffer/wrap(byte[])
org/apache/parquet/column/values/Utils/readInts(org.apache.parquet.column.values.ValuesReader,byte[],int,int)#org/apache/parquet/column/values/ValuesReader/readInteger()
org/apache/parquet/column/values/Utils/readData(org.apache.parquet.column.values.ValuesReader,byte[],int)#org/apache/parquet/column/values/Utils/readData(org.apache.parquet.column.values.ValuesReader,byte[],int,int)
org/apache/parquet/pig/summary/NumberSummaryData/merge(org.apache.parquet.pig.summary.SummaryData)#org/apache/parquet/pig/summary/SummaryData/merge(org.apache.parquet.pig.summary.SummaryData)
org/apache/parquet/pig/summary/NumberSummaryData/merge(org.apache.parquet.pig.summary.SummaryData)#org/apache/parquet/pig/summary/ValueStat/merge(org.apache.parquet.pig.summary.ValueStat)
org/apache/parquet/pig/summary/NumberSummaryData/add(java.lang.Number)#org/apache/parquet/pig/summary/ValueStat/add(double)
org/apache/parquet/pig/summary/NumberSummaryData/add(java.lang.Number)#java/lang/Number/doubleValue()
org/apache/parquet/pig/summary/NumberSummaryData/add(java.lang.Number)#org/apache/parquet/pig/summary/SummaryData/add(java.lang.Object)
org/apache/parquet/column/values/deltastrings/DeltaByteArrayWriter/reset()#org/apache/parquet/column/values/ValuesWriter/reset()
org/apache/parquet/column/values/deltastrings/DeltaByteArrayWriter/getBufferedSize()#org/apache/parquet/column/values/ValuesWriter/getBufferedSize()
org/apache/parquet/column/values/deltastrings/DeltaByteArrayWriter/close()#org/apache/parquet/column/values/ValuesWriter/close()
org/apache/parquet/column/values/deltastrings/DeltaByteArrayWriter/getAllocatedSize()#org/apache/parquet/column/values/ValuesWriter/getAllocatedSize()
org/apache/parquet/column/values/deltastrings/DeltaByteArrayWriter/getBytes()#org/apache/parquet/column/values/ValuesWriter/getBytes()
org/apache/parquet/column/values/deltastrings/DeltaByteArrayWriter/getBytes()#org/apache/parquet/bytes/BytesInput/concat(org.apache.parquet.bytes.BytesInput[])
org/apache/parquet/column/values/deltastrings/DeltaByteArrayWriter/memUsageString(java.lang.String)#org/apache/parquet/column/values/ValuesWriter/memUsageString(java.lang.String)
org/apache/parquet/column/values/deltastrings/DeltaByteArrayWriter/writeBytes(org.apache.parquet.io.api.Binary)#org/apache/parquet/column/values/ValuesWriter/writeBytes(org.apache.parquet.io.api.Binary)
org/apache/parquet/column/values/deltastrings/DeltaByteArrayWriter/writeBytes(org.apache.parquet.io.api.Binary)#org/apache/parquet/io/api/Binary/getBytes()
org/apache/parquet/column/values/deltastrings/DeltaByteArrayWriter/writeBytes(org.apache.parquet.io.api.Binary)#org/apache/parquet/column/values/ValuesWriter/writeInteger(int)
org/apache/parquet/column/values/deltastrings/DeltaByteArrayWriter/writeBytes(org.apache.parquet.io.api.Binary)#org/apache/parquet/io/api/Binary/slice(int,int)
org/apache/parquet/thrift/struct/ThriftField/hashCode()#java/lang/String/hashCode()
org/apache/parquet/thrift/struct/ThriftField/hashCode()#java/lang/Enum/hashCode()
org/apache/parquet/thrift/struct/ThriftField/hashCode()#org/apache/parquet/thrift/struct/ThriftType/hashCode()
org/apache/parquet/thrift/struct/ThriftField/toString()#org/apache/parquet/thrift/struct/JSON/toJSON(java.lang.Object)
org/apache/parquet/thrift/struct/ThriftField/equals(java.lang.Object)#org/apache/parquet/thrift/struct/ThriftType/equals(java.lang.Object)
org/apache/parquet/thrift/struct/ThriftField/equals(java.lang.Object)#java/lang/String/equals(java.lang.Object)
org/apache/parquet/io/MessageColumnIO/getRecordReader(org.apache.parquet.column.page.PageReadStore,org.apache.parquet.io.api.RecordMaterializer,org.apache.parquet.filter2.compat.FilterCompat.Filter)#org/apache/parquet/filter2/compat/FilterCompat/Filter/accept(org.apache.parquet.filter2.compat.FilterCompat.Visitor)
org/apache/parquet/io/MessageColumnIO/getRecordReader(org.apache.parquet.column.page.PageReadStore,org.apache.parquet.io.api.RecordMaterializer,org.apache.parquet.filter2.compat.FilterCompat.Filter)#java/util/List/isEmpty()
org/apache/parquet/io/MessageColumnIO/getRecordReader(org.apache.parquet.column.page.PageReadStore,org.apache.parquet.io.api.RecordMaterializer,org.apache.parquet.filter2.compat.FilterCompat.Filter)#org/apache/parquet/io/MessageColumnIO/getRecordReader(org/apache/parquet/column/page/PageReadStore,org/apache/parquet/io/api/RecordMaterializer,org/apache/parquet/filter2/compat/FilterCompat/Filter)/$anonymous1/()
org/apache/parquet/io/MessageColumnIO/getRecordReader(org.apache.parquet.column.page.PageReadStore,org.apache.parquet.io.api.RecordMaterializer,org.apache.parquet.filter2.compat.FilterCompat.Filter)#org/apache/parquet/Preconditions/checkNotNull(T,java.lang.String)
org/apache/parquet/io/MessageColumnIO/getRecordReader(org.apache.parquet.column.page.PageReadStore,org.apache.parquet.io.api.RecordMaterializer,org.apache.parquet.filter2.compat.FilterCompat.Filter)#org/apache/parquet/io/EmptyRecordReader/EmptyRecordReader(org.apache.parquet.io.api.RecordMaterializer)
org/apache/parquet/io/MessageColumnIO/getType()#org/apache/parquet/io/ColumnIO/getType()
org/apache/parquet/io/MessageColumnIO/setLevels()#java/util/Arrays/asList(T[])
org/apache/parquet/io/MessageColumnIO/setLevels()#org/apache/parquet/io/GroupColumnIO/setLevels(int,int,java.lang.String[],int[],java.util.List,java.util.List)
org/apache/parquet/io/MessageColumnIO/getRecordWriter(org.apache.parquet.column.ColumnWriteStore)#org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/MessageColumnIORecordConsumer(org.apache.parquet.column.ColumnWriteStore)
org/apache/parquet/io/MessageColumnIO/getRecordWriter(org.apache.parquet.column.ColumnWriteStore)#org/apache/parquet/io/RecordConsumerLoggingWrapper/RecordConsumerLoggingWrapper(org.apache.parquet.io.api.RecordConsumer)
org/apache/parquet/io/MessageColumnIO/getRecordWriter(org.apache.parquet.column.ColumnWriteStore)#org/apache/parquet/io/MessageColumnIO/getType()
org/apache/parquet/io/MessageColumnIO/getRecordWriter(org.apache.parquet.column.ColumnWriteStore)#org/apache/parquet/io/ValidatingRecordConsumer/ValidatingRecordConsumer(org.apache.parquet.io.api.RecordConsumer,org.apache.parquet.schema.MessageType)
org/apache/parquet/io/MessageColumnIO/getColumnNames()#org/apache/parquet/io/GroupColumnIO/getColumnNames()
org/apache/parquet/io/MessageColumnIO/getRecordReader(org.apache.parquet.column.page.PageReadStore,org.apache.parquet.io.api.RecordMaterializer)#org/apache/parquet/io/MessageColumnIO/getRecordReader(org.apache.parquet.column.page.PageReadStore,org.apache.parquet.io.api.RecordMaterializer,org.apache.parquet.filter2.compat.FilterCompat.Filter)
org/apache/parquet/io/MessageColumnIO/getRecordReader(org.apache.parquet.column.page.PageReadStore,org.apache.parquet.io.api.RecordMaterializer,org.apache.parquet.filter.UnboundRecordFilter)#org/apache/parquet/io/MessageColumnIO/getRecordReader(org.apache.parquet.column.page.PageReadStore,org.apache.parquet.io.api.RecordMaterializer,org.apache.parquet.filter2.compat.FilterCompat.Filter)
org/apache/parquet/io/MessageColumnIO/getRecordReader(org.apache.parquet.column.page.PageReadStore,org.apache.parquet.io.api.RecordMaterializer,org.apache.parquet.filter.UnboundRecordFilter)#org/apache/parquet/filter2/compat/FilterCompat/get(org.apache.parquet.filter.UnboundRecordFilter)
org/apache/parquet/column/values/dictionary/IntListTest/verifyIteratorResults(int,org.apache.parquet.column.values.dictionary.IntList)#org/apache/parquet/column/values/dictionary/IntList/IntIterator/hasNext()
org/apache/parquet/column/values/dictionary/IntListTest/verifyIteratorResults(int,org.apache.parquet.column.values.dictionary.IntList)#org/apache/parquet/column/values/dictionary/IntList/IntIterator/next()
org/apache/parquet/column/values/dictionary/IntListTest/verifyIteratorResults(int,org.apache.parquet.column.values.dictionary.IntList)#org/apache/parquet/column/values/dictionary/IntList/iterator()
org/apache/parquet/column/values/dictionary/IntListTest/populateList(org.apache.parquet.column.values.dictionary.IntList,int)#org/apache/parquet/column/values/dictionary/IntList/add(int)
org/apache/parquet/column/values/dictionary/IntListTest/testSmallList()#org/apache/parquet/column/values/dictionary/IntListTest/doTestIntList(int,int)
org/apache/parquet/column/values/dictionary/IntListTest/doTestIntList(int,int)#org/apache/parquet/column/values/dictionary/IntListTest/verifyIteratorResults(int,org.apache.parquet.column.values.dictionary.IntList)
org/apache/parquet/column/values/dictionary/IntListTest/doTestIntList(int,int)#org/apache/parquet/column/values/dictionary/IntListTest/populateList(org.apache.parquet.column.values.dictionary.IntList,int)
org/apache/parquet/column/values/dictionary/IntListTest/doTestIntList(int,int)#org/apache/parquet/column/values/dictionary/IntList/getCurrentSlabSize()
org/apache/parquet/column/values/dictionary/IntListTest/doTestIntList(int,int)#org/apache/parquet/column/values/dictionary/IntList/IntList()
org/apache/parquet/column/values/dictionary/IntListTest/testListGreaterThanInitialSlabSize()#org/apache/parquet/column/values/dictionary/IntListTest/doTestIntList(int,int)
org/apache/parquet/column/values/dictionary/IntListTest/testListGreaterThanMaxSlabSize()#org/apache/parquet/column/values/dictionary/IntListTest/doTestIntList(int,int)
org/apache/parquet/tools/read/TestJsonRecordFormatter/obj(java.util.Map.Entry<java.lang.String,?>[])#java/util/Map/Entry/getValue()
org/apache/parquet/tools/read/TestJsonRecordFormatter/obj(java.util.Map.Entry<java.lang.String,?>[])#java/util/Map/Entry/getKey()
org/apache/parquet/tools/read/TestJsonRecordFormatter/obj(java.util.Map.Entry<java.lang.String,?>[])#java/util/Map/put(K,V)
org/apache/parquet/tools/read/TestJsonRecordFormatter/obj(java.util.Map.Entry<java.lang.String,?>[])#java/util/LinkedHashMap/LinkedHashMap()
org/apache/parquet/tools/read/TestJsonRecordFormatter/entry(java.lang.String,T)#org/apache/parquet/tools/read/TestJsonRecordFormatter/entry(java/lang/String,T)/$anonymous1/()
org/apache/parquet/tools/read/TestJsonRecordFormatter/array(T[])#java/util/Arrays/asList(T[])
org/apache/parquet/tools/read/TestJsonRecordFormatter/testGroupList()#org/apache/parquet/tools/read/TestJsonRecordFormatter/kv(java.lang.String,java.lang.Object)
org/apache/parquet/tools/read/TestJsonRecordFormatter/testGroupList()#org/apache/parquet/schema/PrimitiveType/PrimitiveType(org.apache.parquet.schema.Type.Repetition,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,java.lang.String)
org/apache/parquet/tools/read/TestJsonRecordFormatter/testGroupList()#org/apache/parquet/tools/json/JsonRecordFormatter/JsonGroupFormatter/formatRecord(org.apache.parquet.tools.read.SimpleRecord)
org/apache/parquet/tools/read/TestJsonRecordFormatter/testGroupList()#org/apache/parquet/tools/read/TestJsonRecordFormatter/obj(java.util.Map.Entry<java.lang.String,?>[])
org/apache/parquet/tools/read/TestJsonRecordFormatter/testGroupList()#org/apache/parquet/schema/GroupType/GroupType(org.apache.parquet.schema.Type.Repetition,java.lang.String,org.apache.parquet.schema.Type[])
org/apache/parquet/tools/read/TestJsonRecordFormatter/testGroupList()#org/apache/parquet/tools/read/TestJsonRecordFormatter/asJsonString(java.lang.Object)
org/apache/parquet/tools/read/TestJsonRecordFormatter/testGroupList()#java/util/List/add(E)
org/apache/parquet/tools/read/TestJsonRecordFormatter/testGroupList()#org/apache/parquet/schema/MessageType/MessageType(java.lang.String,org.apache.parquet.schema.Type[])
org/apache/parquet/tools/read/TestJsonRecordFormatter/testGroupList()#org/apache/parquet/tools/read/SimpleRecord/SimpleRecord()
org/apache/parquet/tools/read/TestJsonRecordFormatter/testGroupList()#org/apache/parquet/tools/read/TestJsonRecordFormatter/array(T[])
org/apache/parquet/tools/read/TestJsonRecordFormatter/testGroupList()#org/apache/parquet/tools/read/TestJsonRecordFormatter/entry(java.lang.String,T)
org/apache/parquet/tools/read/TestJsonRecordFormatter/testGroupList()#org/apache/parquet/tools/json/JsonRecordFormatter/fromSchema(org.apache.parquet.schema.MessageType)
org/apache/parquet/tools/read/TestJsonRecordFormatter/kv(java.lang.String,java.lang.Object)#org/apache/parquet/tools/read/SimpleRecord/NameValue/NameValue(java.lang.String,java.lang.Object)
org/apache/parquet/tools/read/TestJsonRecordFormatter/testFlatSchemaWithArrays()#org/apache/parquet/tools/read/TestJsonRecordFormatter/kv(java.lang.String,java.lang.Object)
org/apache/parquet/tools/read/TestJsonRecordFormatter/testFlatSchemaWithArrays()#org/apache/parquet/schema/PrimitiveType/PrimitiveType(org.apache.parquet.schema.Type.Repetition,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,java.lang.String)
org/apache/parquet/tools/read/TestJsonRecordFormatter/testFlatSchemaWithArrays()#org/apache/parquet/tools/json/JsonRecordFormatter/JsonGroupFormatter/formatRecord(org.apache.parquet.tools.read.SimpleRecord)
org/apache/parquet/tools/read/TestJsonRecordFormatter/testFlatSchemaWithArrays()#org/apache/parquet/tools/read/TestJsonRecordFormatter/obj(java.util.Map.Entry<java.lang.String,?>[])
org/apache/parquet/tools/read/TestJsonRecordFormatter/testFlatSchemaWithArrays()#org/apache/parquet/tools/read/TestJsonRecordFormatter/asJsonString(java.lang.Object)
org/apache/parquet/tools/read/TestJsonRecordFormatter/testFlatSchemaWithArrays()#java/util/List/add(E)
org/apache/parquet/tools/read/TestJsonRecordFormatter/testFlatSchemaWithArrays()#org/apache/parquet/schema/MessageType/MessageType(java.lang.String,org.apache.parquet.schema.Type[])
org/apache/parquet/tools/read/TestJsonRecordFormatter/testFlatSchemaWithArrays()#org/apache/parquet/tools/read/SimpleRecord/SimpleRecord()
org/apache/parquet/tools/read/TestJsonRecordFormatter/testFlatSchemaWithArrays()#org/apache/parquet/tools/read/TestJsonRecordFormatter/array(T[])
org/apache/parquet/tools/read/TestJsonRecordFormatter/testFlatSchemaWithArrays()#org/apache/parquet/tools/read/TestJsonRecordFormatter/entry(java.lang.String,T)
org/apache/parquet/tools/read/TestJsonRecordFormatter/testFlatSchemaWithArrays()#org/apache/parquet/tools/json/JsonRecordFormatter/fromSchema(org.apache.parquet.schema.MessageType)
org/apache/parquet/tools/read/TestJsonRecordFormatter/testNestedGrouping()#org/apache/parquet/tools/read/TestJsonRecordFormatter/kv(java.lang.String,java.lang.Object)
org/apache/parquet/tools/read/TestJsonRecordFormatter/testNestedGrouping()#org/apache/parquet/schema/PrimitiveType/PrimitiveType(org.apache.parquet.schema.Type.Repetition,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,java.lang.String)
org/apache/parquet/tools/read/TestJsonRecordFormatter/testNestedGrouping()#org/apache/parquet/tools/json/JsonRecordFormatter/JsonGroupFormatter/formatRecord(org.apache.parquet.tools.read.SimpleRecord)
org/apache/parquet/tools/read/TestJsonRecordFormatter/testNestedGrouping()#org/apache/parquet/tools/read/TestJsonRecordFormatter/obj(java.util.Map.Entry<java.lang.String,?>[])
org/apache/parquet/tools/read/TestJsonRecordFormatter/testNestedGrouping()#org/apache/parquet/schema/GroupType/GroupType(org.apache.parquet.schema.Type.Repetition,java.lang.String,org.apache.parquet.schema.Type[])
org/apache/parquet/tools/read/TestJsonRecordFormatter/testNestedGrouping()#org/apache/parquet/tools/read/TestJsonRecordFormatter/asJsonString(java.lang.Object)
org/apache/parquet/tools/read/TestJsonRecordFormatter/testNestedGrouping()#java/util/List/add(E)
org/apache/parquet/tools/read/TestJsonRecordFormatter/testNestedGrouping()#org/apache/parquet/schema/MessageType/MessageType(java.lang.String,org.apache.parquet.schema.Type[])
org/apache/parquet/tools/read/TestJsonRecordFormatter/testNestedGrouping()#org/apache/parquet/tools/read/SimpleRecord/SimpleRecord()
org/apache/parquet/tools/read/TestJsonRecordFormatter/testNestedGrouping()#org/apache/parquet/tools/read/TestJsonRecordFormatter/array(T[])
org/apache/parquet/tools/read/TestJsonRecordFormatter/testNestedGrouping()#org/apache/parquet/tools/read/TestJsonRecordFormatter/entry(java.lang.String,T)
org/apache/parquet/tools/read/TestJsonRecordFormatter/testNestedGrouping()#org/apache/parquet/tools/json/JsonRecordFormatter/fromSchema(org.apache.parquet.schema.MessageType)
org/apache/parquet/hadoop/mapred/MapredParquetOutputCommitter/commitJob(org.apache.parquet.hadoop.util.JobContext)#org/apache/parquet/hadoop/util/ContextUtil/getConfiguration(org.apache.parquet.hadoop.util.JobContext)
org/apache/parquet/hadoop/mapred/MapredParquetOutputCommitter/commitJob(org.apache.parquet.hadoop.util.JobContext)#org/apache/parquet/hadoop/ParquetOutputCommitter/writeMetaDataFile(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path)
org/apache/parquet/hadoop/mapred/MapredParquetOutputCommitter/commitJob(org.apache.parquet.hadoop.util.JobContext)#java/lang/Object/Object()
org/apache/parquet/schema/MessageTypeParser/Tokenizer/isWhitespace(java.lang.String)#java/lang/String/equals(java.lang.Object)
org/apache/parquet/schema/MessageTypeParser/Tokenizer/getLocationString()#java/lang/StringBuffer/toString()
org/apache/parquet/schema/MessageTypeParser/Tokenizer/nextToken()#org/apache/parquet/schema/MessageTypeParser/Tokenizer/isWhitespace(java.lang.String)
org/apache/parquet/schema/MessageTypeParser/Tokenizer/nextToken()#java/lang/String/equals(java.lang.Object)
org/apache/parquet/schema/MessageTypeParser/Tokenizer/nextToken()#java/lang/StringBuffer/append(java.lang.String)
org/apache/parquet/schema/MessageTypeParser/Tokenizer/nextToken()#java/util/StringTokenizer/hasMoreTokens()
org/apache/parquet/schema/MessageTypeParser/Tokenizer/nextToken()#java/lang/StringBuffer/setLength(int)
org/apache/parquet/schema/MessageTypeParser/Tokenizer/nextToken()#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/parquet/schema/MessageTypeParser/Tokenizer/nextToken()#java/util/StringTokenizer/nextToken()
org/apache/parquet/tools/read/SimpleListRecordConverter/start()#org/apache/parquet/tools/read/SimpleListRecord/SimpleListRecord()
org/apache/parquet/io/PrimitiveColumnIO/setLevels(int,int,java.lang.String[],int[],java.util.List,java.util.List)#org/apache/parquet/column/ColumnDescriptor/ColumnDescriptor(java.lang.String[],org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,int,int,int)
org/apache/parquet/io/PrimitiveColumnIO/setLevels(int,int,java.lang.String[],int[],java.util.List,java.util.List)#org/apache/parquet/schema/PrimitiveType/getTypeLength()
org/apache/parquet/io/PrimitiveColumnIO/setLevels(int,int,java.lang.String[],int[],java.util.List,java.util.List)#java/util/List/toArray(T[])
org/apache/parquet/io/PrimitiveColumnIO/setLevels(int,int,java.lang.String[],int[],java.util.List,java.util.List)#org/apache/parquet/io/ColumnIO/setLevels(int,int,java.lang.String[],int[],java.util.List,java.util.List)
org/apache/parquet/io/PrimitiveColumnIO/setLevels(int,int,java.lang.String[],int[],java.util.List,java.util.List)#java/util/List/size()
org/apache/parquet/io/PrimitiveColumnIO/setLevels(int,int,java.lang.String[],int[],java.util.List,java.util.List)#org/apache/parquet/io/ColumnIO/getType()
org/apache/parquet/io/PrimitiveColumnIO/setLevels(int,int,java.lang.String[],int[],java.util.List,java.util.List)#org/apache/parquet/schema/Type/asPrimitiveType()
org/apache/parquet/io/PrimitiveColumnIO/setLevels(int,int,java.lang.String[],int[],java.util.List,java.util.List)#org/apache/parquet/io/ColumnIO/getDefinitionLevel()
org/apache/parquet/io/PrimitiveColumnIO/setLevels(int,int,java.lang.String[],int[],java.util.List,java.util.List)#org/apache/parquet/io/ColumnIO/getRepetitionLevel()
org/apache/parquet/io/PrimitiveColumnIO/setLevels(int,int,java.lang.String[],int[],java.util.List,java.util.List)#org/apache/parquet/schema/PrimitiveType/getPrimitiveTypeName()
org/apache/parquet/io/PrimitiveColumnIO/getPrimitive()#org/apache/parquet/io/ColumnIO/getType()
org/apache/parquet/io/PrimitiveColumnIO/getPrimitive()#org/apache/parquet/schema/Type/asPrimitiveType()
org/apache/parquet/io/PrimitiveColumnIO/getPrimitive()#org/apache/parquet/schema/PrimitiveType/getPrimitiveTypeName()
org/apache/parquet/io/PrimitiveColumnIO/getColumnNames()#org/apache/parquet/io/ColumnIO/getFieldPath()
org/apache/parquet/io/PrimitiveColumnIO/getColumnNames()#java/util/Arrays/asList(T[])
org/apache/parquet/io/PrimitiveColumnIO/getLast(int)#org/apache/parquet/io/ColumnIO/getLast()
org/apache/parquet/io/PrimitiveColumnIO/getLast(int)#org/apache/parquet/io/ColumnIO/getParent(int)
org/apache/parquet/io/PrimitiveColumnIO/isLast(int)#org/apache/parquet/io/PrimitiveColumnIO/getLast(int)
org/apache/parquet/io/PrimitiveColumnIO/isFirst(int)#org/apache/parquet/io/PrimitiveColumnIO/getFirst(int)
org/apache/parquet/io/PrimitiveColumnIO/getFirst(int)#org/apache/parquet/io/ColumnIO/getFirst()
org/apache/parquet/io/PrimitiveColumnIO/getFirst(int)#org/apache/parquet/io/ColumnIO/getParent(int)
org/apache/parquet/thrift/ThriftMetaData/getThriftClass()#org/apache/parquet/thrift/ThriftMetaData/getThriftClass(java.lang.String)
org/apache/parquet/thrift/ThriftMetaData/toExtraMetaData()#org/apache/parquet/thrift/struct/ThriftType/toJSON()
org/apache/parquet/thrift/ThriftMetaData/toExtraMetaData()#org/apache/parquet/thrift/ThriftMetaData/getThriftClass()
org/apache/parquet/thrift/ThriftMetaData/toExtraMetaData()#java/util/HashMap/HashMap()
org/apache/parquet/thrift/ThriftMetaData/toExtraMetaData()#java/lang/Class/getName()
org/apache/parquet/thrift/ThriftMetaData/toExtraMetaData()#java/util/Map/put(K,V)
org/apache/parquet/thrift/ThriftMetaData/getThriftClass(java.lang.String)#java/lang/Class/forName(java.lang.String)
org/apache/parquet/thrift/ThriftMetaData/getThriftClass(java.lang.String)#org/apache/parquet/hadoop/BadConfigurationException/BadConfigurationException(java.lang.String,java.lang.Throwable)
org/apache/parquet/thrift/ThriftMetaData/toString()#java/lang/String/format(java.lang.String,java.lang.Object[])
org/apache/parquet/thrift/ThriftMetaData/getThriftClassNames(java.util.Map)#java/util/Map/get(java.lang.Object)
org/apache/parquet/thrift/ThriftMetaData/fromThriftClass(java.lang.Class)#java/lang/Class/isAssignableFrom(java.lang.Class)
org/apache/parquet/thrift/ThriftMetaData/fromThriftClass(java.lang.Class)#org/apache/parquet/thrift/ThriftMetaData/ThriftMetaData(java.lang.String,org.apache.parquet.thrift.struct.ThriftType.StructType)
org/apache/parquet/thrift/ThriftMetaData/fromThriftClass(java.lang.Class)#org/apache/parquet/thrift/ThriftSchemaConverter/toStructType(java.lang.Class)
org/apache/parquet/thrift/ThriftMetaData/fromThriftClass(java.lang.Class)#java/lang/Class/getName()
org/apache/parquet/thrift/ThriftMetaData/fromThriftClass(java.lang.Class)#org/apache/parquet/thrift/ThriftSchemaConverter/ThriftSchemaConverter()
org/apache/parquet/thrift/ThriftMetaData/parseDescriptor(java.lang.String)#org/apache/parquet/thrift/struct/ThriftType/fromJSON(java.lang.String)
org/apache/parquet/thrift/ThriftMetaData/parseDescriptor(java.lang.String)#org/apache/parquet/hadoop/BadConfigurationException/BadConfigurationException(java.lang.String,java.lang.Throwable)
org/apache/parquet/thrift/ThriftMetaData/fromExtraMetaData(java.util.Map)#org/apache/parquet/thrift/ThriftMetaData/ThriftMetaData(java.lang.String,org.apache.parquet.thrift.struct.ThriftType.StructType)
org/apache/parquet/thrift/ThriftMetaData/fromExtraMetaData(java.util.Map)#java/util/Map/get(java.lang.Object)
org/apache/parquet/thrift/ThriftMetaData/fromExtraMetaData(java.util.Map)#org/apache/parquet/thrift/ThriftMetaData/parseDescriptor(java.lang.String)
org/apache/parquet/thrift/TestThriftToPigCompatibility/testMap()#java/util/TreeMap/TreeMap()
org/apache/parquet/thrift/TestThriftToPigCompatibility/testMap()#java/util/Map/put(K,V)
org/apache/parquet/thrift/TestThriftToPigCompatibility/testMap()#org/apache/parquet/thrift/TestThriftToPigCompatibility/validateSameTupleAsEB(T)
org/apache/parquet/thrift/TestThriftToPigCompatibility/testOneOfEach()#java/util/ArrayList/ArrayList()
org/apache/parquet/thrift/TestThriftToPigCompatibility/testOneOfEach()#java/nio/ByteBuffer/wrap(byte[])
org/apache/parquet/thrift/TestThriftToPigCompatibility/testOneOfEach()#java/lang/String/getBytes()
org/apache/parquet/thrift/TestThriftToPigCompatibility/testOneOfEach()#org/apache/parquet/thrift/TestThriftToPigCompatibility/validateSameTupleAsEB(T)
org/apache/parquet/thrift/TestThriftToPigCompatibility/testStructInMap()#java/util/Collections/singletonMap(K,V)
org/apache/parquet/thrift/TestThriftToPigCompatibility/testStructInMap()#java/util/HashMap/HashMap()
org/apache/parquet/thrift/TestThriftToPigCompatibility/testStructInMap()#java/lang/Object/Object()
org/apache/parquet/thrift/TestThriftToPigCompatibility/testStructInMap()#org/apache/parquet/thrift/TestThriftToPigCompatibility/validateSameTupleAsEB(T)
org/apache/parquet/thrift/TestThriftToPigCompatibility/testProtocolAddressBook()#java/util/ArrayList/ArrayList()
org/apache/parquet/thrift/TestThriftToPigCompatibility/testProtocolAddressBook()#java/util/Arrays/asList(T[])
org/apache/parquet/thrift/TestThriftToPigCompatibility/testProtocolAddressBook()#java/lang/Object/Object()
org/apache/parquet/thrift/TestThriftToPigCompatibility/testProtocolAddressBook()#org/apache/parquet/thrift/TestThriftToPigCompatibility/validateSameTupleAsEB(T)
org/apache/parquet/thrift/TestThriftToPigCompatibility/testMapInSet()#java/util/HashMap/HashMap()
org/apache/parquet/thrift/TestThriftToPigCompatibility/testMapInSet()#java/util/Set/add(E)
org/apache/parquet/thrift/TestThriftToPigCompatibility/testMapInSet()#java/util/Map/put(K,V)
org/apache/parquet/thrift/TestThriftToPigCompatibility/testMapInSet()#java/util/HashSet/HashSet()
org/apache/parquet/thrift/TestThriftToPigCompatibility/testMapInSet()#org/apache/parquet/thrift/TestThriftToPigCompatibility/validateSameTupleAsEB(T)
org/apache/parquet/thrift/TestThriftToPigCompatibility/testProtocolEmptyAdressBook()#java/util/ArrayList/ArrayList()
org/apache/parquet/thrift/TestThriftToPigCompatibility/testProtocolEmptyAdressBook()#org/apache/parquet/thrift/TestThriftToPigCompatibility/validateSameTupleAsEB(T)
org/apache/parquet/thrift/TestThriftToPigCompatibility/validateSameTupleAsEB(T)#org/apache/parquet/schema/Type/toString()
org/apache/parquet/thrift/TestThriftToPigCompatibility/validateSameTupleAsEB(T)#org/apache/parquet/thrift/ThriftSchemaConverter/convert(java.lang.Class)
org/apache/parquet/thrift/TestThriftToPigCompatibility/validateSameTupleAsEB(T)#org/apache/parquet/io/RecordConsumerLoggingWrapper/RecordConsumerLoggingWrapper(org.apache.parquet.io.api.RecordConsumer)
org/apache/parquet/thrift/TestThriftToPigCompatibility/validateSameTupleAsEB(T)#org/apache/parquet/io/ColumnIOFactory/getColumnIO(org.apache.parquet.schema.MessageType)
org/apache/parquet/thrift/TestThriftToPigCompatibility/validateSameTupleAsEB(T)#org/apache/parquet/pig/convert/TupleRecordMaterializer/getCurrentRecord()
org/apache/parquet/thrift/TestThriftToPigCompatibility/validateSameTupleAsEB(T)#org/apache/parquet/thrift/ThriftSchemaConverter/toStructType(java.lang.Class)
org/apache/parquet/thrift/TestThriftToPigCompatibility/validateSameTupleAsEB(T)#org/apache/parquet/io/ColumnIOFactory/ColumnIOFactory()
org/apache/parquet/thrift/TestThriftToPigCompatibility/validateSameTupleAsEB(T)#java/lang/Object/getClass()
org/apache/parquet/thrift/TestThriftToPigCompatibility/validateSameTupleAsEB(T)#org/apache/parquet/thrift/ThriftSchemaConverter/ThriftSchemaConverter()
org/apache/parquet/thrift/TestThriftToPigCompatibility/validateSameTupleAsEB(T)#org/apache/parquet/pig/PigSchemaConverter/PigSchemaConverter()
org/apache/parquet/thrift/TestThriftToPigCompatibility/validateSameTupleAsEB(T)#org/apache/parquet/pig/PigSchemaConverter/filter(org.apache.parquet.schema.MessageType,org.apache.parquet.pig.Schema)
org/apache/parquet/thrift/TestThriftToPigCompatibility/validateSameTupleAsEB(T)#org/apache/parquet/pig/convert/TupleRecordMaterializer/getRootConverter()
org/apache/parquet/thrift/TestThriftToPigCompatibility/validateSameTupleAsEB(T)#org/apache/parquet/io/ConverterConsumer/ConverterConsumer(org.apache.parquet.io.api.GroupConverter,org.apache.parquet.schema.MessageType)
org/apache/parquet/thrift/TestThriftToPigCompatibility/validateSameTupleAsEB(T)#org/apache/parquet/thrift/ParquetWriteProtocol/ParquetWriteProtocol(org.apache.parquet.io.api.RecordConsumer,org.apache.parquet.io.MessageColumnIO,org.apache.parquet.thrift.struct.ThriftType.StructType)
org/apache/parquet/thrift/TestThriftToPigCompatibility/validateSameTupleAsEB(T)#org/apache/parquet/pig/convert/TupleRecordMaterializer/TupleRecordMaterializer(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,boolean)
org/apache/parquet/thrift/TestThriftToPigCompatibility/testStringList()#java/util/ArrayList/ArrayList()
org/apache/parquet/thrift/TestThriftToPigCompatibility/testStringList()#java/util/List/add(E)
org/apache/parquet/thrift/TestThriftToPigCompatibility/testStringList()#org/apache/parquet/thrift/TestThriftToPigCompatibility/validateSameTupleAsEB(T)
org/apache/parquet/thrift/projection/TestFieldsPath/testFieldsPath()#org/apache/parquet/thrift/ThriftSchemaConverter/toStructType(java.lang.Class)
org/apache/parquet/thrift/projection/TestFieldsPath/testFieldsPath()#org/apache/parquet/thrift/projection/TestFieldsPath/PrimitivePathVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.StructType,java.lang.String)
org/apache/parquet/thrift/projection/TestFieldsPath/testFieldsPath()#java/util/Arrays/asList(T[])
org/apache/parquet/avro/TestReadWrite/testAll()#java/util/ArrayList/ArrayList()
org/apache/parquet/avro/TestReadWrite/testAll()#java/util/Arrays/asList(T[])
org/apache/parquet/avro/TestReadWrite/testAll()#org/apache/parquet/avro/AvroParquetWriter/builder(org.apache.parquet.hadoop.Path)
org/apache/parquet/avro/TestReadWrite/testAll()#java/lang/String/getBytes(java.lang.String)
org/apache/parquet/avro/TestReadWrite/testAll()#org/apache/parquet/avro/AvroParquetReader/AvroParquetReader(org.apache.parquet.hadoop.Path,org.apache.parquet.filter.UnboundRecordFilter)
org/apache/parquet/avro/TestReadWrite/testAll()#java/nio/ByteBuffer/wrap(byte[])
org/apache/parquet/avro/TestReadWrite/testAll()#java/lang/Object/getClass()
org/apache/parquet/avro/TestReadWrite/testAll()#org/apache/parquet/avro/AvroTestUtil/optional(org.apache.parquet.pig.Schema)
org/apache/parquet/avro/TestReadWrite/testAll()#org/apache/parquet/avro/TestReadWrite/str(java.lang.String)
org/apache/parquet/avro/TestReadWrite/testAll()#java/lang/Class/getSimpleName()
org/apache/parquet/avro/TestReadWrite/testAll()#java/io/File/createTempFile(java.lang.String,java.lang.String)
org/apache/parquet/avro/TestReadWrite/testAll()#java/io/File/deleteOnExit()
org/apache/parquet/avro/TestReadWrite/testAll()#java/io/File/getPath()
org/apache/parquet/avro/TestReadWrite/testAll()#java/io/File/delete()
org/apache/parquet/avro/TestReadWrite/testAll()#java/lang/Object/Object()
org/apache/parquet/avro/TestReadWrite/data()#java/util/Arrays/asList(T[])
org/apache/parquet/avro/TestReadWrite/testFixedDecimalValues()#org/apache/parquet/avro/AvroParquetReader/builder(org.apache.parquet.hadoop.Path)
org/apache/parquet/avro/TestReadWrite/testFixedDecimalValues()#java/util/Collections/singletonList(T)
org/apache/parquet/avro/TestReadWrite/testFixedDecimalValues()#org/apache/parquet/avro/AvroParquetWriter/builder(org.apache.parquet.hadoop.Path)
org/apache/parquet/avro/TestReadWrite/testFixedDecimalValues()#java/util/Random/Random(long)
org/apache/parquet/avro/TestReadWrite/testFixedDecimalValues()#java/math/BigInteger/BigInteger(int,java.util.Random)
org/apache/parquet/avro/TestReadWrite/testFixedDecimalValues()#java/math/BigDecimal/BigDecimal(java.math.BigInteger,int)
org/apache/parquet/avro/TestReadWrite/testFixedDecimalValues()#java/io/File/toString()
org/apache/parquet/avro/TestReadWrite/testFixedDecimalValues()#java/io/File/delete()
org/apache/parquet/avro/TestReadWrite/testFixedDecimalValues()#java/lang/Object/Object()
org/apache/parquet/avro/TestReadWrite/testMapRequiredValueWithNull()#java/lang/Class/getSimpleName()
org/apache/parquet/avro/TestReadWrite/testMapRequiredValueWithNull()#java/util/HashMap/HashMap()
org/apache/parquet/avro/TestReadWrite/testMapRequiredValueWithNull()#org/apache/parquet/avro/AvroParquetWriter/builder(org.apache.parquet.hadoop.Path)
org/apache/parquet/avro/TestReadWrite/testMapRequiredValueWithNull()#java/util/Map/put(K,V)
org/apache/parquet/avro/TestReadWrite/testMapRequiredValueWithNull()#java/lang/Object/getClass()
org/apache/parquet/avro/TestReadWrite/testMapRequiredValueWithNull()#java/io/File/createTempFile(java.lang.String,java.lang.String)
org/apache/parquet/avro/TestReadWrite/testMapRequiredValueWithNull()#java/io/File/deleteOnExit()
org/apache/parquet/avro/TestReadWrite/testMapRequiredValueWithNull()#java/io/File/getPath()
org/apache/parquet/avro/TestReadWrite/testMapRequiredValueWithNull()#java/io/File/delete()
org/apache/parquet/avro/TestReadWrite/testMapRequiredValueWithNull()#java/lang/Object/Object()
org/apache/parquet/avro/TestReadWrite/testAllUsingDefaultAvroSchema()#org/apache/parquet/hadoop/ParquetWriter/ParquetWriter(org.apache.parquet.hadoop.Path,org.apache.parquet.hadoop.api.WriteSupport)
org/apache/parquet/avro/TestReadWrite/testAllUsingDefaultAvroSchema()#java/util/ArrayList/ArrayList()
org/apache/parquet/avro/TestReadWrite/testAllUsingDefaultAvroSchema()#java/util/Arrays/asList(T[])
org/apache/parquet/avro/TestReadWrite/testAllUsingDefaultAvroSchema()#java/util/HashMap/HashMap()
org/apache/parquet/avro/TestReadWrite/testAllUsingDefaultAvroSchema()#org/apache/parquet/hadoop/ParquetWriter/close()
org/apache/parquet/avro/TestReadWrite/testAllUsingDefaultAvroSchema()#java/lang/String/getBytes(java.lang.String)
org/apache/parquet/avro/TestReadWrite/testAllUsingDefaultAvroSchema()#java/lang/Object/getClass()
org/apache/parquet/avro/TestReadWrite/testAllUsingDefaultAvroSchema()#org/apache/parquet/avro/TestReadWrite/str(java.lang.String)
org/apache/parquet/avro/TestReadWrite/testAllUsingDefaultAvroSchema()#java/lang/Class/getSimpleName()
org/apache/parquet/avro/TestReadWrite/testAllUsingDefaultAvroSchema()#org/apache/parquet/hadoop/ParquetWriter/write(T)
org/apache/parquet/avro/TestReadWrite/testAllUsingDefaultAvroSchema()#org/apache/parquet/avro/AvroParquetReader/AvroParquetReader(org.apache.parquet.hadoop.Path,org.apache.parquet.filter.UnboundRecordFilter)
org/apache/parquet/avro/TestReadWrite/testAllUsingDefaultAvroSchema()#java/nio/ByteBuffer/wrap(byte[])
org/apache/parquet/avro/TestReadWrite/testAllUsingDefaultAvroSchema()#java/util/Map/put(K,V)
org/apache/parquet/avro/TestReadWrite/testAllUsingDefaultAvroSchema()#org/apache/parquet/avro/TestReadWrite/testAllUsingDefaultAvroSchema()/$anonymous1/()
org/apache/parquet/avro/TestReadWrite/testAllUsingDefaultAvroSchema()#java/io/File/createTempFile(java.lang.String,java.lang.String)
org/apache/parquet/avro/TestReadWrite/testAllUsingDefaultAvroSchema()#java/io/File/deleteOnExit()
org/apache/parquet/avro/TestReadWrite/testAllUsingDefaultAvroSchema()#java/io/File/getPath()
org/apache/parquet/avro/TestReadWrite/testAllUsingDefaultAvroSchema()#java/io/File/delete()
org/apache/parquet/avro/TestReadWrite/testAllUsingDefaultAvroSchema()#java/lang/Object/Object()
org/apache/parquet/avro/TestReadWrite/testDecimalValues()#org/apache/parquet/avro/AvroParquetReader/builder(org.apache.parquet.hadoop.Path)
org/apache/parquet/avro/TestReadWrite/testDecimalValues()#java/util/Collections/singletonList(T)
org/apache/parquet/avro/TestReadWrite/testDecimalValues()#org/apache/parquet/avro/AvroParquetWriter/builder(org.apache.parquet.hadoop.Path)
org/apache/parquet/avro/TestReadWrite/testDecimalValues()#java/util/Random/Random(long)
org/apache/parquet/avro/TestReadWrite/testDecimalValues()#java/math/BigInteger/BigInteger(int,java.util.Random)
org/apache/parquet/avro/TestReadWrite/testDecimalValues()#java/math/BigDecimal/BigDecimal(java.math.BigInteger,int)
org/apache/parquet/avro/TestReadWrite/testDecimalValues()#java/io/File/toString()
org/apache/parquet/avro/TestReadWrite/testDecimalValues()#java/io/File/delete()
org/apache/parquet/avro/TestReadWrite/testDecimalValues()#java/lang/Object/Object()
org/apache/parquet/avro/TestReadWrite/testEmptyMap()#java/lang/Class/getSimpleName()
org/apache/parquet/avro/TestReadWrite/testEmptyMap()#org/apache/parquet/avro/AvroParquetWriter/builder(org.apache.parquet.hadoop.Path)
org/apache/parquet/avro/TestReadWrite/testEmptyMap()#org/apache/parquet/avro/AvroParquetReader/AvroParquetReader(org.apache.parquet.hadoop.Path,org.apache.parquet.filter.UnboundRecordFilter)
org/apache/parquet/avro/TestReadWrite/testEmptyMap()#java/lang/Object/getClass()
org/apache/parquet/avro/TestReadWrite/testEmptyMap()#java/io/File/createTempFile(java.lang.String,java.lang.String)
org/apache/parquet/avro/TestReadWrite/testEmptyMap()#java/io/File/deleteOnExit()
org/apache/parquet/avro/TestReadWrite/testEmptyMap()#java/io/File/getPath()
org/apache/parquet/avro/TestReadWrite/testEmptyMap()#java/io/File/delete()
org/apache/parquet/avro/TestReadWrite/testEmptyMap()#java/lang/Object/Object()
org/apache/parquet/avro/TestReadWrite/testMapWithNulls()#java/util/HashMap/HashMap()
org/apache/parquet/avro/TestReadWrite/testMapWithNulls()#org/apache/parquet/avro/AvroParquetWriter/builder(org.apache.parquet.hadoop.Path)
org/apache/parquet/avro/TestReadWrite/testMapWithNulls()#org/apache/parquet/avro/AvroParquetReader/AvroParquetReader(org.apache.parquet.hadoop.Path,org.apache.parquet.filter.UnboundRecordFilter)
org/apache/parquet/avro/TestReadWrite/testMapWithNulls()#java/util/Map/put(K,V)
org/apache/parquet/avro/TestReadWrite/testMapWithNulls()#java/lang/Object/getClass()
org/apache/parquet/avro/TestReadWrite/testMapWithNulls()#org/apache/parquet/avro/TestReadWrite/str(java.lang.String)
org/apache/parquet/avro/TestReadWrite/testMapWithNulls()#java/lang/Class/getSimpleName()
org/apache/parquet/avro/TestReadWrite/testMapWithNulls()#java/io/File/createTempFile(java.lang.String,java.lang.String)
org/apache/parquet/avro/TestReadWrite/testMapWithNulls()#java/io/File/deleteOnExit()
org/apache/parquet/avro/TestReadWrite/testMapWithNulls()#java/io/File/getPath()
org/apache/parquet/avro/TestReadWrite/testMapWithNulls()#java/io/File/delete()
org/apache/parquet/avro/TestReadWrite/testMapWithNulls()#java/lang/Object/Object()
org/apache/parquet/avro/TestReadWrite/testMapWithUtf8Key()#org/apache/parquet/avro/AvroParquetWriter/builder(org.apache.parquet.hadoop.Path)
org/apache/parquet/avro/TestReadWrite/testMapWithUtf8Key()#org/apache/parquet/avro/AvroParquetReader/AvroParquetReader(org.apache.parquet.hadoop.Path,org.apache.parquet.filter.UnboundRecordFilter)
org/apache/parquet/avro/TestReadWrite/testMapWithUtf8Key()#java/lang/Object/getClass()
org/apache/parquet/avro/TestReadWrite/testMapWithUtf8Key()#org/apache/parquet/avro/TestReadWrite/str(java.lang.String)
org/apache/parquet/avro/TestReadWrite/testMapWithUtf8Key()#java/lang/Class/getSimpleName()
org/apache/parquet/avro/TestReadWrite/testMapWithUtf8Key()#java/io/File/createTempFile(java.lang.String,java.lang.String)
org/apache/parquet/avro/TestReadWrite/testMapWithUtf8Key()#java/io/File/deleteOnExit()
org/apache/parquet/avro/TestReadWrite/testMapWithUtf8Key()#java/io/File/getPath()
org/apache/parquet/avro/TestReadWrite/testMapWithUtf8Key()#java/io/File/delete()
org/apache/parquet/avro/TestReadWrite/testMapWithUtf8Key()#java/lang/Object/Object()
org/apache/parquet/avro/TestReadWrite/testEmptyArray()#java/util/ArrayList/ArrayList()
org/apache/parquet/avro/TestReadWrite/testEmptyArray()#java/lang/Class/getSimpleName()
org/apache/parquet/avro/TestReadWrite/testEmptyArray()#org/apache/parquet/avro/AvroParquetWriter/builder(org.apache.parquet.hadoop.Path)
org/apache/parquet/avro/TestReadWrite/testEmptyArray()#org/apache/parquet/avro/AvroParquetReader/AvroParquetReader(org.apache.parquet.hadoop.Path,org.apache.parquet.filter.UnboundRecordFilter)
org/apache/parquet/avro/TestReadWrite/testEmptyArray()#java/lang/Object/getClass()
org/apache/parquet/avro/TestReadWrite/testEmptyArray()#java/io/File/createTempFile(java.lang.String,java.lang.String)
org/apache/parquet/avro/TestReadWrite/testEmptyArray()#java/io/File/deleteOnExit()
org/apache/parquet/avro/TestReadWrite/testEmptyArray()#java/io/File/getPath()
org/apache/parquet/avro/TestReadWrite/testEmptyArray()#java/io/File/delete()
org/apache/parquet/avro/TestReadWrite/testEmptyArray()#java/lang/Object/Object()
org/apache/parquet/scrooge/ScroogeStructConverter/toThriftField(org.apache.parquet.scrooge.ThriftStructFieldInfo)#org/apache/parquet/thrift/struct/ThriftField/ThriftField(java.lang.String,short,org.apache.parquet.thrift.struct.ThriftField.Requirement,org.apache.parquet.thrift.struct.ThriftType)
org/apache/parquet/scrooge/ScroogeStructConverter/toThriftField(org.apache.parquet.scrooge.ThriftStructFieldInfo)#org/apache/parquet/scrooge/ScroogeStructConverter/convertMapTypeField(org.apache.parquet.scrooge.ThriftStructFieldInfo,org.apache.parquet.thrift.struct.ThriftField.Requirement)
org/apache/parquet/scrooge/ScroogeStructConverter/toThriftField(org.apache.parquet.scrooge.ThriftStructFieldInfo)#org/apache/parquet/scrooge/ScroogeStructConverter/convertListTypeField(org.apache.parquet.scrooge.ThriftStructFieldInfo,org.apache.parquet.thrift.struct.ThriftField.Requirement)
org/apache/parquet/scrooge/ScroogeStructConverter/toThriftField(org.apache.parquet.scrooge.ThriftStructFieldInfo)#org/apache/parquet/scrooge/ScroogeStructConverter/getRequirementType(org.apache.parquet.scrooge.ThriftStructFieldInfo)
org/apache/parquet/scrooge/ScroogeStructConverter/toThriftField(org.apache.parquet.scrooge.ThriftStructFieldInfo)#org/apache/parquet/scrooge/ScroogeStructConverter/convertEnumTypeField(org.apache.parquet.scrooge.ThriftStructFieldInfo)
org/apache/parquet/scrooge/ScroogeStructConverter/toThriftField(org.apache.parquet.scrooge.ThriftStructFieldInfo)#org/apache/parquet/thrift/struct/ThriftType/I64Type/I64Type()
org/apache/parquet/scrooge/ScroogeStructConverter/toThriftField(org.apache.parquet.scrooge.ThriftStructFieldInfo)#org/apache/parquet/thrift/struct/ThriftTypeID/fromByte(byte)
org/apache/parquet/scrooge/ScroogeStructConverter/toThriftField(org.apache.parquet.scrooge.ThriftStructFieldInfo)#org/apache/parquet/thrift/struct/ThriftType/I32Type/I32Type()
org/apache/parquet/scrooge/ScroogeStructConverter/toThriftField(org.apache.parquet.scrooge.ThriftStructFieldInfo)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/parquet/scrooge/ScroogeStructConverter/toThriftField(org.apache.parquet.scrooge.ThriftStructFieldInfo)#org/apache/parquet/scrooge/ScroogeStructConverter/convertStructTypeField(org.apache.parquet.scrooge.ThriftStructFieldInfo)
org/apache/parquet/scrooge/ScroogeStructConverter/toThriftField(org.apache.parquet.scrooge.ThriftStructFieldInfo)#org/apache/parquet/thrift/struct/ThriftType/I16Type/I16Type()
org/apache/parquet/scrooge/ScroogeStructConverter/toThriftField(org.apache.parquet.scrooge.ThriftStructFieldInfo)#org/apache/parquet/scrooge/ScroogeStructConverter/convertSetTypeField(org.apache.parquet.scrooge.ThriftStructFieldInfo,org.apache.parquet.thrift.struct.ThriftField.Requirement)
org/apache/parquet/scrooge/ScroogeStructConverter/toThriftField(org.apache.parquet.scrooge.ThriftStructFieldInfo)#org/apache/parquet/thrift/struct/ThriftType/ByteType/ByteType()
org/apache/parquet/scrooge/ScroogeStructConverter/toThriftField(org.apache.parquet.scrooge.ThriftStructFieldInfo)#org/apache/parquet/thrift/struct/ThriftType/BoolType/BoolType()
org/apache/parquet/scrooge/ScroogeStructConverter/toThriftField(org.apache.parquet.scrooge.ThriftStructFieldInfo)#org/apache/parquet/thrift/struct/ThriftType/StringType/StringType()
org/apache/parquet/scrooge/ScroogeStructConverter/toThriftField(org.apache.parquet.scrooge.ThriftStructFieldInfo)#org/apache/parquet/thrift/struct/ThriftType/DoubleType/DoubleType()
org/apache/parquet/scrooge/ScroogeStructConverter/getFieldInfosForUnion(java.lang.Class)#java/util/ArrayList/ArrayList()
org/apache/parquet/scrooge/ScroogeStructConverter/getFieldInfosForUnion(java.lang.Class)#org/apache/parquet/scrooge/ScroogeStructConverter/getCompanionClass(java.lang.Class)
org/apache/parquet/scrooge/ScroogeStructConverter/getFieldInfosForUnion(java.lang.Class)#org/apache/parquet/scrooge/ScroogeSchemaConversionException/ScroogeSchemaConversionException(java.lang.String,java.lang.Throwable)
org/apache/parquet/scrooge/ScroogeStructConverter/getFieldInfosForUnion(java.lang.Class)#java/lang/reflect/Field/getGenericType()
org/apache/parquet/scrooge/ScroogeStructConverter/getFieldInfosForUnion(java.lang.Class)#java/lang/reflect/Field/getType()
org/apache/parquet/scrooge/ScroogeStructConverter/getFieldInfosForUnion(java.lang.Class)#java/lang/reflect/ParameterizedType/getActualTypeArguments()
org/apache/parquet/scrooge/ScroogeStructConverter/getFieldInfosForUnion(java.lang.Class)#java/lang/Class/getDeclaredFields()
org/apache/parquet/scrooge/ScroogeStructConverter/getFieldInfosForUnion(java.lang.Class)#java/lang/reflect/Method/invoke(java.lang.Object,java.lang.Object[])
org/apache/parquet/scrooge/ScroogeStructConverter/getFieldInfosForUnion(java.lang.Class)#java/lang/Class/getMethod(java.lang.String,java.lang.Class<?>[])
org/apache/parquet/scrooge/ScroogeStructConverter/getFieldInfosForUnion(java.lang.Class)#java/lang/Class/getField(java.lang.String)
org/apache/parquet/scrooge/ScroogeStructConverter/getFieldInfosForUnion(java.lang.Class)#java/lang/Object/equals(java.lang.Object)
org/apache/parquet/scrooge/ScroogeStructConverter/getFieldInfosForUnion(java.lang.Class)#java/lang/reflect/Field/get(java.lang.Object)
org/apache/parquet/scrooge/ScroogeStructConverter/generateFieldWithoutId(java.lang.String,org.apache.parquet.thrift.struct.ThriftField.Requirement,org.apache.parquet.thrift.struct.ThriftType)#org/apache/parquet/thrift/struct/ThriftField/ThriftField(java.lang.String,short,org.apache.parquet.thrift.struct.ThriftField.Requirement,org.apache.parquet.thrift.struct.ThriftType)
org/apache/parquet/scrooge/ScroogeStructConverter/getRequirementType(org.apache.parquet.scrooge.ThriftStructFieldInfo)#org/apache/parquet/scrooge/ScroogeSchemaConversionException/ScroogeSchemaConversionException(java.lang.String)
org/apache/parquet/scrooge/ScroogeStructConverter/convertMapTypeField(java.lang.String,org.apache.parquet.scrooge.Manifest,org.apache.parquet.scrooge.Manifest,org.apache.parquet.thrift.struct.ThriftField.Requirement)#org/apache/parquet/scrooge/ScroogeStructConverter/generateFieldWithoutId(java.lang.String,org.apache.parquet.thrift.struct.ThriftField.Requirement,org.apache.parquet.thrift.struct.ThriftType)
org/apache/parquet/scrooge/ScroogeStructConverter/convertMapTypeField(java.lang.String,org.apache.parquet.scrooge.Manifest,org.apache.parquet.scrooge.Manifest,org.apache.parquet.thrift.struct.ThriftField.Requirement)#org/apache/parquet/scrooge/ScroogeStructConverter/mapKeyName(java.lang.String)
org/apache/parquet/scrooge/ScroogeStructConverter/convertMapTypeField(java.lang.String,org.apache.parquet.scrooge.Manifest,org.apache.parquet.scrooge.Manifest,org.apache.parquet.thrift.struct.ThriftField.Requirement)#org/apache/parquet/scrooge/ScroogeStructConverter/convertClassToThriftType(java.lang.String,org.apache.parquet.thrift.struct.ThriftField.Requirement,org.apache.parquet.scrooge.Manifest)
org/apache/parquet/scrooge/ScroogeStructConverter/convertMapTypeField(java.lang.String,org.apache.parquet.scrooge.Manifest,org.apache.parquet.scrooge.Manifest,org.apache.parquet.thrift.struct.ThriftField.Requirement)#org/apache/parquet/thrift/struct/ThriftType/MapType/MapType(org.apache.parquet.thrift.struct.ThriftField,org.apache.parquet.thrift.struct.ThriftField)
org/apache/parquet/scrooge/ScroogeStructConverter/convertMapTypeField(java.lang.String,org.apache.parquet.scrooge.Manifest,org.apache.parquet.scrooge.Manifest,org.apache.parquet.thrift.struct.ThriftField.Requirement)#org/apache/parquet/scrooge/ScroogeStructConverter/mapValueName(java.lang.String)
org/apache/parquet/scrooge/ScroogeStructConverter/convertSetTypeField(java.lang.String,org.apache.parquet.scrooge.Manifest,org.apache.parquet.thrift.struct.ThriftField.Requirement)#org/apache/parquet/scrooge/ScroogeStructConverter/generateFieldWithoutId(java.lang.String,org.apache.parquet.thrift.struct.ThriftField.Requirement,org.apache.parquet.thrift.struct.ThriftType)
org/apache/parquet/scrooge/ScroogeStructConverter/convertSetTypeField(java.lang.String,org.apache.parquet.scrooge.Manifest,org.apache.parquet.thrift.struct.ThriftField.Requirement)#org/apache/parquet/scrooge/ScroogeStructConverter/convertClassToThriftType(java.lang.String,org.apache.parquet.thrift.struct.ThriftField.Requirement,org.apache.parquet.scrooge.Manifest)
org/apache/parquet/scrooge/ScroogeStructConverter/convertSetTypeField(java.lang.String,org.apache.parquet.scrooge.Manifest,org.apache.parquet.thrift.struct.ThriftField.Requirement)#org/apache/parquet/scrooge/ScroogeStructConverter/setElemName(java.lang.String)
org/apache/parquet/scrooge/ScroogeStructConverter/convertSetTypeField(java.lang.String,org.apache.parquet.scrooge.Manifest,org.apache.parquet.thrift.struct.ThriftField.Requirement)#org/apache/parquet/thrift/struct/ThriftType/SetType/SetType(org.apache.parquet.thrift.struct.ThriftField)
org/apache/parquet/scrooge/ScroogeStructConverter/convert(java.lang.Class)#org/apache/parquet/scrooge/ScroogeStructConverter/convertStructFromClass(java.lang.Class)
org/apache/parquet/scrooge/ScroogeStructConverter/convertStructTypeField(org.apache.parquet.scrooge.ThriftStructFieldInfo)#org/apache/parquet/scrooge/ScroogeStructConverter/convertStructFromClass(java.lang.Class)
org/apache/parquet/scrooge/ScroogeStructConverter/convertCompanionClassToStruct(java.lang.Class)#org/apache/parquet/scrooge/ScroogeStructConverter/isUnion(java.lang.Class)
org/apache/parquet/scrooge/ScroogeStructConverter/convertCompanionClassToStruct(java.lang.Class)#org/apache/parquet/scrooge/ScroogeSchemaConversionException/ScroogeSchemaConversionException(java.lang.String,java.lang.Throwable)
org/apache/parquet/scrooge/ScroogeStructConverter/convertCompanionClassToStruct(java.lang.Class)#org/apache/parquet/scrooge/ScroogeStructConverter/getFieldInfos(org.apache.parquet.scrooge.ThriftStructCodec)
org/apache/parquet/scrooge/ScroogeStructConverter/convertCompanionClassToStruct(java.lang.Class)#java/util/List/add(E)
org/apache/parquet/scrooge/ScroogeStructConverter/convertCompanionClassToStruct(java.lang.Class)#org/apache/parquet/thrift/struct/ThriftType/StructType/StructType(java.util.List,org.apache.parquet.thrift.struct.ThriftType.StructType.StructOrUnionType)
org/apache/parquet/scrooge/ScroogeStructConverter/convertCompanionClassToStruct(java.lang.Class)#org/apache/parquet/scrooge/ScroogeStructConverter/toThriftField(org.apache.parquet.scrooge.ThriftStructFieldInfo)
org/apache/parquet/scrooge/ScroogeStructConverter/convertCompanionClassToStruct(java.lang.Class)#java/lang/Class/getField(java.lang.String)
org/apache/parquet/scrooge/ScroogeStructConverter/convertCompanionClassToStruct(java.lang.Class)#java/lang/reflect/Field/get(java.lang.Object)
org/apache/parquet/scrooge/ScroogeStructConverter/convertCompanionClassToStruct(java.lang.Class)#java/lang/Class/getName()
org/apache/parquet/scrooge/ScroogeStructConverter/convertCompanionClassToStruct(java.lang.Class)#java/util/LinkedList/LinkedList()
org/apache/parquet/scrooge/ScroogeStructConverter/convertEnumTypeField(java.lang.Class,java.lang.String)#java/util/ArrayList/ArrayList()
org/apache/parquet/scrooge/ScroogeStructConverter/convertEnumTypeField(java.lang.Class,java.lang.String)#org/apache/parquet/scrooge/ScroogeStructConverter/getEnumList(java.lang.String)
org/apache/parquet/scrooge/ScroogeStructConverter/convertEnumTypeField(java.lang.Class,java.lang.String)#org/apache/parquet/thrift/struct/ThriftType/EnumType/EnumType(java.util.List)
org/apache/parquet/scrooge/ScroogeStructConverter/convertEnumTypeField(java.lang.Class,java.lang.String)#java/lang/Class/getName()
org/apache/parquet/scrooge/ScroogeStructConverter/convertEnumTypeField(java.lang.Class,java.lang.String)#org/apache/parquet/scrooge/ScroogeStructConverter/ScroogeEnumDesc/fromEnum(java.lang.Object)
org/apache/parquet/scrooge/ScroogeStructConverter/convertEnumTypeField(java.lang.Class,java.lang.String)#java/util/List/add(E)
org/apache/parquet/scrooge/ScroogeStructConverter/convertEnumTypeField(java.lang.Class,java.lang.String)#org/apache/parquet/thrift/struct/ThriftType/EnumValue/EnumValue(int,java.lang.String)
org/apache/parquet/scrooge/ScroogeStructConverter/convertEnumTypeField(java.lang.Class,java.lang.String)#org/apache/parquet/scrooge/ScroogeSchemaConversionException/ScroogeSchemaConversionException(java.lang.String,java.lang.Throwable)
org/apache/parquet/scrooge/ScroogeStructConverter/convertStructFromClass(java.lang.Class)#org/apache/parquet/scrooge/ScroogeStructConverter/getCompanionClass(java.lang.Class)
org/apache/parquet/scrooge/ScroogeStructConverter/convertStructFromClass(java.lang.Class)#org/apache/parquet/scrooge/ScroogeStructConverter/convertCompanionClassToStruct(java.lang.Class)
org/apache/parquet/scrooge/ScroogeStructConverter/convertMapTypeField(org.apache.parquet.scrooge.ThriftStructFieldInfo,org.apache.parquet.thrift.struct.ThriftField.Requirement)#org/apache/parquet/scrooge/ScroogeStructConverter/convertMapTypeField(java.lang.String,org.apache.parquet.scrooge.Manifest,org.apache.parquet.scrooge.Manifest,org.apache.parquet.thrift.struct.ThriftField.Requirement)
org/apache/parquet/scrooge/ScroogeStructConverter/isUnion(java.lang.Class)#java/lang/reflect/Field/getName()
org/apache/parquet/scrooge/ScroogeStructConverter/isUnion(java.lang.Class)#java/lang/String/equals(java.lang.Object)
org/apache/parquet/scrooge/ScroogeStructConverter/isUnion(java.lang.Class)#java/lang/Class/getDeclaredFields()
org/apache/parquet/scrooge/ScroogeStructConverter/convertListTypeField(org.apache.parquet.scrooge.ThriftStructFieldInfo,org.apache.parquet.thrift.struct.ThriftField.Requirement)#org/apache/parquet/scrooge/ScroogeStructConverter/convertListTypeField(java.lang.String,org.apache.parquet.scrooge.Manifest,org.apache.parquet.thrift.struct.ThriftField.Requirement)
org/apache/parquet/scrooge/ScroogeStructConverter/getCompanionClass(java.lang.Class)#java/lang/Class/forName(java.lang.String)
org/apache/parquet/scrooge/ScroogeStructConverter/getCompanionClass(java.lang.Class)#org/apache/parquet/scrooge/ScroogeSchemaConversionException/ScroogeSchemaConversionException(java.lang.String,java.lang.Throwable)
org/apache/parquet/scrooge/ScroogeStructConverter/getCompanionClass(java.lang.Class)#java/lang/Class/getName()
org/apache/parquet/scrooge/ScroogeStructConverter/getEnumList(java.lang.String)#java/lang/Class/forName(java.lang.String)
org/apache/parquet/scrooge/ScroogeStructConverter/getEnumList(java.lang.String)#java/lang/reflect/Method/invoke(java.lang.Object,java.lang.Object[])
org/apache/parquet/scrooge/ScroogeStructConverter/getEnumList(java.lang.String)#java/lang/Class/getMethod(java.lang.String,java.lang.Class<?>[])
org/apache/parquet/scrooge/ScroogeStructConverter/getEnumList(java.lang.String)#java/lang/Class/getField(java.lang.String)
org/apache/parquet/scrooge/ScroogeStructConverter/getEnumList(java.lang.String)#java/lang/reflect/Field/get(java.lang.Object)
org/apache/parquet/scrooge/ScroogeStructConverter/convertSetTypeField(org.apache.parquet.scrooge.ThriftStructFieldInfo,org.apache.parquet.thrift.struct.ThriftField.Requirement)#org/apache/parquet/scrooge/ScroogeStructConverter/convertSetTypeField(java.lang.String,org.apache.parquet.scrooge.Manifest,org.apache.parquet.thrift.struct.ThriftField.Requirement)
org/apache/parquet/scrooge/ScroogeStructConverter/convertClassToThriftType(java.lang.String,org.apache.parquet.thrift.struct.ThriftField.Requirement,org.apache.parquet.scrooge.Manifest)#java/lang/Class/isAssignableFrom(java.lang.Class)
org/apache/parquet/scrooge/ScroogeStructConverter/convertClassToThriftType(java.lang.String,org.apache.parquet.thrift.struct.ThriftField.Requirement,org.apache.parquet.scrooge.Manifest)#org/apache/parquet/thrift/struct/ThriftType/I64Type/I64Type()
org/apache/parquet/scrooge/ScroogeStructConverter/convertClassToThriftType(java.lang.String,org.apache.parquet.thrift.struct.ThriftField.Requirement,org.apache.parquet.scrooge.Manifest)#org/apache/parquet/scrooge/ScroogeStructConverter/convertMapTypeField(java.lang.String,org.apache.parquet.scrooge.Manifest,org.apache.parquet.scrooge.Manifest,org.apache.parquet.thrift.struct.ThriftField.Requirement)
org/apache/parquet/scrooge/ScroogeStructConverter/convertClassToThriftType(java.lang.String,org.apache.parquet.thrift.struct.ThriftField.Requirement,org.apache.parquet.scrooge.Manifest)#org/apache/parquet/scrooge/ScroogeStructConverter/convertSetTypeField(java.lang.String,org.apache.parquet.scrooge.Manifest,org.apache.parquet.thrift.struct.ThriftField.Requirement)
org/apache/parquet/scrooge/ScroogeStructConverter/convertClassToThriftType(java.lang.String,org.apache.parquet.thrift.struct.ThriftField.Requirement,org.apache.parquet.scrooge.Manifest)#org/apache/parquet/scrooge/ScroogeStructConverter/convertStructFromClass(java.lang.Class)
org/apache/parquet/scrooge/ScroogeStructConverter/convertClassToThriftType(java.lang.String,org.apache.parquet.thrift.struct.ThriftField.Requirement,org.apache.parquet.scrooge.Manifest)#org/apache/parquet/thrift/struct/ThriftType/ByteType/ByteType()
org/apache/parquet/scrooge/ScroogeStructConverter/convertClassToThriftType(java.lang.String,org.apache.parquet.thrift.struct.ThriftField.Requirement,org.apache.parquet.scrooge.Manifest)#org/apache/parquet/thrift/struct/ThriftType/BoolType/BoolType()
org/apache/parquet/scrooge/ScroogeStructConverter/convertClassToThriftType(java.lang.String,org.apache.parquet.thrift.struct.ThriftField.Requirement,org.apache.parquet.scrooge.Manifest)#org/apache/parquet/thrift/struct/ThriftType/StringType/StringType()
org/apache/parquet/scrooge/ScroogeStructConverter/convertClassToThriftType(java.lang.String,org.apache.parquet.thrift.struct.ThriftField.Requirement,org.apache.parquet.scrooge.Manifest)#org/apache/parquet/thrift/struct/ThriftType/DoubleType/DoubleType()
org/apache/parquet/scrooge/ScroogeStructConverter/convertClassToThriftType(java.lang.String,org.apache.parquet.thrift.struct.ThriftField.Requirement,org.apache.parquet.scrooge.Manifest)#org/apache/parquet/thrift/struct/ThriftType/I32Type/I32Type()
org/apache/parquet/scrooge/ScroogeStructConverter/convertClassToThriftType(java.lang.String,org.apache.parquet.thrift.struct.ThriftField.Requirement,org.apache.parquet.scrooge.Manifest)#org/apache/parquet/scrooge/ScroogeStructConverter/convertListTypeField(java.lang.String,org.apache.parquet.scrooge.Manifest,org.apache.parquet.thrift.struct.ThriftField.Requirement)
org/apache/parquet/scrooge/ScroogeStructConverter/convertClassToThriftType(java.lang.String,org.apache.parquet.thrift.struct.ThriftField.Requirement,org.apache.parquet.scrooge.Manifest)#org/apache/parquet/scrooge/ScroogeStructConverter/convertEnumTypeField(java.lang.Class,java.lang.String)
org/apache/parquet/scrooge/ScroogeStructConverter/convertClassToThriftType(java.lang.String,org.apache.parquet.thrift.struct.ThriftField.Requirement,org.apache.parquet.scrooge.Manifest)#org/apache/parquet/thrift/struct/ThriftType/I16Type/I16Type()
org/apache/parquet/scrooge/ScroogeStructConverter/convertEnumTypeField(org.apache.parquet.scrooge.ThriftStructFieldInfo)#org/apache/parquet/scrooge/ScroogeStructConverter/convertEnumTypeField(java.lang.Class,java.lang.String)
org/apache/parquet/scrooge/ScroogeStructConverter/getFieldInfos(org.apache.parquet.scrooge.ThriftStructCodec)#org/apache/parquet/scrooge/ScroogeStructConverter/getFieldInfosForUnion(java.lang.Class)
org/apache/parquet/scrooge/ScroogeStructConverter/getFieldInfos(org.apache.parquet.scrooge.ThriftStructCodec)#org/apache/parquet/scrooge/ScroogeStructConverter/isUnion(java.lang.Class)
org/apache/parquet/scrooge/ScroogeStructConverter/getFieldInfos(org.apache.parquet.scrooge.ThriftStructCodec)#org/apache/parquet/scrooge/ScroogeSchemaConversionException/ScroogeSchemaConversionException(java.lang.String,java.lang.Throwable)
org/apache/parquet/scrooge/ScroogeStructConverter/getFieldInfos(org.apache.parquet.scrooge.ThriftStructCodec)#java/lang/reflect/Method/invoke(java.lang.Object,java.lang.Object[])
org/apache/parquet/scrooge/ScroogeStructConverter/getFieldInfos(org.apache.parquet.scrooge.ThriftStructCodec)#java/lang/Class/getMethod(java.lang.String,java.lang.Class<?>[])
org/apache/parquet/scrooge/ScroogeStructConverter/convertListTypeField(java.lang.String,org.apache.parquet.scrooge.Manifest,org.apache.parquet.thrift.struct.ThriftField.Requirement)#org/apache/parquet/scrooge/ScroogeStructConverter/generateFieldWithoutId(java.lang.String,org.apache.parquet.thrift.struct.ThriftField.Requirement,org.apache.parquet.thrift.struct.ThriftType)
org/apache/parquet/scrooge/ScroogeStructConverter/convertListTypeField(java.lang.String,org.apache.parquet.scrooge.Manifest,org.apache.parquet.thrift.struct.ThriftField.Requirement)#org/apache/parquet/scrooge/ScroogeStructConverter/convertClassToThriftType(java.lang.String,org.apache.parquet.thrift.struct.ThriftField.Requirement,org.apache.parquet.scrooge.Manifest)
org/apache/parquet/scrooge/ScroogeStructConverter/convertListTypeField(java.lang.String,org.apache.parquet.scrooge.Manifest,org.apache.parquet.thrift.struct.ThriftField.Requirement)#org/apache/parquet/scrooge/ScroogeStructConverter/listElemName(java.lang.String)
org/apache/parquet/scrooge/ScroogeStructConverter/convertListTypeField(java.lang.String,org.apache.parquet.scrooge.Manifest,org.apache.parquet.thrift.struct.ThriftField.Requirement)#org/apache/parquet/thrift/struct/ThriftType/ListType/ListType(org.apache.parquet.thrift.struct.ThriftField)
org/apache/parquet/hadoop/ParquetInputSplit/end(java.util.List,java.lang.String)#org/apache/parquet/schema/MessageType/containsPath(java.lang.String[])
org/apache/parquet/hadoop/ParquetInputSplit/end(java.util.List,java.lang.String)#org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/getPath()
org/apache/parquet/hadoop/ParquetInputSplit/end(java.util.List,java.lang.String)#org/apache/parquet/hadoop/metadata/ColumnPath/toArray()
org/apache/parquet/hadoop/ParquetInputSplit/end(java.util.List,java.lang.String)#org/apache/parquet/schema/MessageTypeParser/parseMessageType(java.lang.String)
org/apache/parquet/hadoop/ParquetInputSplit/end(java.util.List,java.lang.String)#org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/getTotalSize()
org/apache/parquet/hadoop/ParquetInputSplit/end(java.util.List,java.lang.String)#org/apache/parquet/hadoop/metadata/BlockMetaData/getColumns()
org/apache/parquet/hadoop/ParquetInputSplit/toString()#org/apache/parquet/hadoop/ParquetInputSplit/getEnd()
org/apache/parquet/hadoop/ParquetInputSplit/toString()#java/lang/Class/getSimpleName()
org/apache/parquet/hadoop/ParquetInputSplit/toString()#java/lang/Object/getClass()
org/apache/parquet/hadoop/ParquetInputSplit/toString()#java/util/Arrays/toString(long[])
org/apache/parquet/hadoop/ParquetInputSplit/getFileSchema()#java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)
org/apache/parquet/hadoop/ParquetInputSplit/getBlocks()#java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)
org/apache/parquet/hadoop/ParquetInputSplit/readFields(java.io.DataInput)#java/util/zip/GZIPInputStream/GZIPInputStream(java.io.InputStream)
org/apache/parquet/hadoop/ParquetInputSplit/readFields(java.io.DataInput)#java/io/DataInputStream/readBoolean()
org/apache/parquet/hadoop/ParquetInputSplit/readFields(java.io.DataInput)#org/apache/parquet/hadoop/ParquetInputSplit/readArray(java.io.DataInput)
org/apache/parquet/hadoop/ParquetInputSplit/readFields(java.io.DataInput)#java/io/DataInputStream/readInt()
org/apache/parquet/hadoop/ParquetInputSplit/readFields(java.io.DataInput)#java/io/ByteArrayInputStream/ByteArrayInputStream(byte[])
org/apache/parquet/hadoop/ParquetInputSplit/readFields(java.io.DataInput)#java/io/DataInputStream/DataInputStream(java.io.InputStream)
org/apache/parquet/hadoop/ParquetInputSplit/readFields(java.io.DataInput)#java/io/DataInputStream/readLong()
org/apache/parquet/hadoop/ParquetInputSplit/readFields(java.io.DataInput)#java/io/FilterInputStream/close()
org/apache/parquet/hadoop/ParquetInputSplit/getRequestedSchema()#java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)
org/apache/parquet/hadoop/ParquetInputSplit/offsets(java.util.List)#java/util/List/size()
org/apache/parquet/hadoop/ParquetInputSplit/offsets(java.util.List)#org/apache/parquet/hadoop/metadata/BlockMetaData/getStartingPos()
org/apache/parquet/hadoop/ParquetInputSplit/offsets(java.util.List)#java/util/List/get(int)
org/apache/parquet/hadoop/ParquetInputSplit/writeArray(java.io.DataOutput,byte[])#java/io/DataOutput/write(byte[],int,int)
org/apache/parquet/hadoop/ParquetInputSplit/writeArray(java.io.DataOutput,byte[])#java/io/DataOutput/writeInt(int)
org/apache/parquet/hadoop/ParquetInputSplit/getExtraMetadata()#java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)
org/apache/parquet/hadoop/ParquetInputSplit/readArray(java.io.DataInput)#java/io/DataInput/readInt()
org/apache/parquet/hadoop/ParquetInputSplit/readArray(java.io.DataInput)#java/io/DataInput/readFully(byte[])
org/apache/parquet/hadoop/ParquetInputSplit/getReadSupportMetadata()#java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)
org/apache/parquet/hadoop/ParquetInputSplit/write(java.io.DataOutput)#java/io/DataOutputStream/writeInt(int)
org/apache/parquet/hadoop/ParquetInputSplit/write(java.io.DataOutput)#java/util/zip/GZIPOutputStream/GZIPOutputStream(java.io.OutputStream)
org/apache/parquet/hadoop/ParquetInputSplit/write(java.io.DataOutput)#java/io/FilterOutputStream/close()
org/apache/parquet/hadoop/ParquetInputSplit/write(java.io.DataOutput)#java/io/ByteArrayOutputStream/ByteArrayOutputStream()
org/apache/parquet/hadoop/ParquetInputSplit/write(java.io.DataOutput)#org/apache/parquet/hadoop/ParquetInputSplit/writeArray(java.io.DataOutput,byte[])
org/apache/parquet/hadoop/ParquetInputSplit/write(java.io.DataOutput)#java/io/DataOutputStream/writeBoolean(boolean)
org/apache/parquet/hadoop/ParquetInputSplit/write(java.io.DataOutput)#java/io/DataOutputStream/writeLong(long)
org/apache/parquet/hadoop/ParquetInputSplit/write(java.io.DataOutput)#java/io/DataOutputStream/DataOutputStream(java.io.OutputStream)
org/apache/parquet/hadoop/ParquetInputSplit/write(java.io.DataOutput)#java/io/ByteArrayOutputStream/toByteArray()
org/apache/parquet/hadoop/ParquetInputSplit/from(org.apache.hadoop.mapred.FileSplit)#org/apache/parquet/hadoop/ParquetInputSplit/ParquetInputSplit(org.apache.parquet.hadoop.Path,long,long,long,java.lang.String[],long[])
org/apache/parquet/hadoop/ParquetInputSplit/from(org.apache.parquet.hadoop.FileSplit)#org/apache/parquet/hadoop/ParquetInputSplit/ParquetInputSplit(org.apache.parquet.hadoop.Path,long,long,long,java.lang.String[],long[])
org/apache/parquet/column/impl/ColumnWriterV1/write(boolean,int,int)#org/apache/parquet/column/impl/ColumnWriterV1/accountForValueWritten()
org/apache/parquet/column/impl/ColumnWriterV1/write(boolean,int,int)#org/apache/parquet/column/impl/ColumnWriterV1/log(java.lang.Object,int,int)
org/apache/parquet/column/impl/ColumnWriterV1/write(boolean,int,int)#org/apache/parquet/column/values/ValuesWriter/writeBoolean(boolean)
org/apache/parquet/column/impl/ColumnWriterV1/write(boolean,int,int)#org/apache/parquet/column/values/ValuesWriter/writeInteger(int)
org/apache/parquet/column/impl/ColumnWriterV1/write(boolean,int,int)#org/apache/parquet/column/impl/ColumnWriterV1/updateStatistics(boolean)
org/apache/parquet/column/impl/ColumnWriterV1/resetStatistics()#org/apache/parquet/column/ColumnDescriptor/getType()
org/apache/parquet/column/impl/ColumnWriterV1/resetStatistics()#org/apache/parquet/column/statistics/Statistics/getStatsBasedOnType(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/column/impl/ColumnWriterV1/write(long,int,int)#org/apache/parquet/column/impl/ColumnWriterV1/accountForValueWritten()
org/apache/parquet/column/impl/ColumnWriterV1/write(long,int,int)#org/apache/parquet/column/impl/ColumnWriterV1/log(java.lang.Object,int,int)
org/apache/parquet/column/impl/ColumnWriterV1/write(long,int,int)#org/apache/parquet/column/values/ValuesWriter/writeLong(long)
org/apache/parquet/column/impl/ColumnWriterV1/write(long,int,int)#org/apache/parquet/column/values/ValuesWriter/writeInteger(int)
org/apache/parquet/column/impl/ColumnWriterV1/write(long,int,int)#org/apache/parquet/column/impl/ColumnWriterV1/updateStatistics(long)
org/apache/parquet/column/impl/ColumnWriterV1/updateStatistics(double)#org/apache/parquet/column/statistics/Statistics/updateStats(double)
org/apache/parquet/column/impl/ColumnWriterV1/write(int,int,int)#org/apache/parquet/column/impl/ColumnWriterV1/accountForValueWritten()
org/apache/parquet/column/impl/ColumnWriterV1/write(int,int,int)#org/apache/parquet/column/impl/ColumnWriterV1/log(java.lang.Object,int,int)
org/apache/parquet/column/impl/ColumnWriterV1/write(int,int,int)#org/apache/parquet/column/values/ValuesWriter/writeInteger(int)
org/apache/parquet/column/impl/ColumnWriterV1/write(int,int,int)#org/apache/parquet/column/impl/ColumnWriterV1/updateStatistics(int)
org/apache/parquet/column/impl/ColumnWriterV1/updateStatistics(org.apache.parquet.io.api.Binary)#org/apache/parquet/column/statistics/Statistics/updateStats(org.apache.parquet.io.api.Binary)
org/apache/parquet/column/impl/ColumnWriterV1/write(double,int,int)#org/apache/parquet/column/impl/ColumnWriterV1/accountForValueWritten()
org/apache/parquet/column/impl/ColumnWriterV1/write(double,int,int)#org/apache/parquet/column/impl/ColumnWriterV1/log(java.lang.Object,int,int)
org/apache/parquet/column/impl/ColumnWriterV1/write(double,int,int)#org/apache/parquet/column/values/ValuesWriter/writeDouble(double)
org/apache/parquet/column/impl/ColumnWriterV1/write(double,int,int)#org/apache/parquet/column/values/ValuesWriter/writeInteger(int)
org/apache/parquet/column/impl/ColumnWriterV1/write(double,int,int)#org/apache/parquet/column/impl/ColumnWriterV1/updateStatistics(double)
org/apache/parquet/column/impl/ColumnWriterV1/allocatedSize()#org/apache/parquet/column/values/ValuesWriter/getAllocatedSize()
org/apache/parquet/column/impl/ColumnWriterV1/allocatedSize()#org/apache/parquet/column/page/PageWriter/allocatedSize()
org/apache/parquet/column/impl/ColumnWriterV1/updateStatistics(float)#org/apache/parquet/column/statistics/Statistics/updateStats(float)
org/apache/parquet/column/impl/ColumnWriterV1/accountForValueWritten()#org/apache/parquet/column/impl/ColumnWriterV1/writePage()
org/apache/parquet/column/impl/ColumnWriterV1/accountForValueWritten()#org/apache/parquet/column/ParquetProperties/getMinRowCountForPageSizeCheck()
org/apache/parquet/column/impl/ColumnWriterV1/accountForValueWritten()#org/apache/parquet/column/ParquetProperties/getPageSizeThreshold()
org/apache/parquet/column/impl/ColumnWriterV1/accountForValueWritten()#org/apache/parquet/column/ParquetProperties/estimateNextSizeCheck()
org/apache/parquet/column/impl/ColumnWriterV1/accountForValueWritten()#org/apache/parquet/column/values/ValuesWriter/getBufferedSize()
org/apache/parquet/column/impl/ColumnWriterV1/write(org.apache.parquet.io.api.Binary,int,int)#org/apache/parquet/column/impl/ColumnWriterV1/accountForValueWritten()
org/apache/parquet/column/impl/ColumnWriterV1/write(org.apache.parquet.io.api.Binary,int,int)#org/apache/parquet/column/impl/ColumnWriterV1/log(java.lang.Object,int,int)
org/apache/parquet/column/impl/ColumnWriterV1/write(org.apache.parquet.io.api.Binary,int,int)#org/apache/parquet/column/values/ValuesWriter/writeInteger(int)
org/apache/parquet/column/impl/ColumnWriterV1/write(org.apache.parquet.io.api.Binary,int,int)#org/apache/parquet/column/values/ValuesWriter/writeBytes(org.apache.parquet.io.api.Binary)
org/apache/parquet/column/impl/ColumnWriterV1/write(org.apache.parquet.io.api.Binary,int,int)#org/apache/parquet/column/impl/ColumnWriterV1/updateStatistics(org.apache.parquet.io.api.Binary)
org/apache/parquet/column/impl/ColumnWriterV1/writePage()#org/apache/parquet/column/values/ValuesWriter/getBytes()
org/apache/parquet/column/impl/ColumnWriterV1/writePage()#org/apache/parquet/bytes/BytesInput/concat(org.apache.parquet.bytes.BytesInput[])
org/apache/parquet/column/impl/ColumnWriterV1/writePage()#org/apache/parquet/column/impl/ColumnWriterV1/resetStatistics()
org/apache/parquet/column/impl/ColumnWriterV1/writePage()#org/apache/parquet/column/values/ValuesWriter/getEncoding()
org/apache/parquet/column/impl/ColumnWriterV1/writePage()#org/apache/parquet/io/ParquetEncodingException/ParquetEncodingException(java.lang.String,java.lang.Throwable)
org/apache/parquet/column/impl/ColumnWriterV1/writePage()#org/apache/parquet/column/values/ValuesWriter/reset()
org/apache/parquet/column/impl/ColumnWriterV1/writePage()#org/apache/parquet/column/page/PageWriter/writePage(org.apache.parquet.bytes.BytesInput,int,org.apache.parquet.column.statistics.Statistics,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding)
org/apache/parquet/column/impl/ColumnWriterV1/write(float,int,int)#org/apache/parquet/column/impl/ColumnWriterV1/log(java.lang.Object,int,int)
org/apache/parquet/column/impl/ColumnWriterV1/write(float,int,int)#org/apache/parquet/column/values/ValuesWriter/writeInteger(int)
org/apache/parquet/column/impl/ColumnWriterV1/write(float,int,int)#org/apache/parquet/column/values/ValuesWriter/writeFloat(float)
org/apache/parquet/column/impl/ColumnWriterV1/write(float,int,int)#org/apache/parquet/column/impl/ColumnWriterV1/updateStatistics(float)
org/apache/parquet/column/impl/ColumnWriterV1/write(float,int,int)#org/apache/parquet/column/impl/ColumnWriterV1/accountForValueWritten()
org/apache/parquet/column/impl/ColumnWriterV1/updateStatistics(int)#org/apache/parquet/column/statistics/Statistics/updateStats(int)
org/apache/parquet/column/impl/ColumnWriterV1/updateStatistics(long)#org/apache/parquet/column/statistics/Statistics/updateStats(long)
org/apache/parquet/column/impl/ColumnWriterV1/close()#org/apache/parquet/column/impl/ColumnWriterV1/flush()
org/apache/parquet/column/impl/ColumnWriterV1/close()#org/apache/parquet/column/values/ValuesWriter/close()
org/apache/parquet/column/impl/ColumnWriterV1/updateStatisticsNumNulls()#org/apache/parquet/column/statistics/Statistics/incrementNumNulls()
org/apache/parquet/column/impl/ColumnWriterV1/getBufferedSizeInMemory()#org/apache/parquet/column/page/PageWriter/getMemSize()
org/apache/parquet/column/impl/ColumnWriterV1/getBufferedSizeInMemory()#org/apache/parquet/column/values/ValuesWriter/getBufferedSize()
org/apache/parquet/column/impl/ColumnWriterV1/updateStatistics(boolean)#org/apache/parquet/column/statistics/Statistics/updateStats(boolean)
org/apache/parquet/column/impl/ColumnWriterV1/writeNull(int,int)#org/apache/parquet/column/impl/ColumnWriterV1/accountForValueWritten()
org/apache/parquet/column/impl/ColumnWriterV1/writeNull(int,int)#org/apache/parquet/column/impl/ColumnWriterV1/log(java.lang.Object,int,int)
org/apache/parquet/column/impl/ColumnWriterV1/writeNull(int,int)#org/apache/parquet/column/values/ValuesWriter/writeInteger(int)
org/apache/parquet/column/impl/ColumnWriterV1/writeNull(int,int)#org/apache/parquet/column/impl/ColumnWriterV1/updateStatisticsNumNulls()
org/apache/parquet/column/impl/ColumnWriterV1/memUsageString(java.lang.String)#org/apache/parquet/column/impl/ColumnWriterV1/allocatedSize()
org/apache/parquet/column/impl/ColumnWriterV1/memUsageString(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/apache/parquet/column/impl/ColumnWriterV1/memUsageString(java.lang.String)#java/lang/String/format(java.lang.String,java.lang.Object[])
org/apache/parquet/column/impl/ColumnWriterV1/memUsageString(java.lang.String)#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/apache/parquet/column/impl/ColumnWriterV1/memUsageString(java.lang.String)#org/apache/parquet/column/impl/ColumnWriterV1/getBufferedSizeInMemory()
org/apache/parquet/column/impl/ColumnWriterV1/memUsageString(java.lang.String)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/parquet/column/impl/ColumnWriterV1/memUsageString(java.lang.String)#java/lang/StringBuilder/toString()
org/apache/parquet/column/impl/ColumnWriterV1/memUsageString(java.lang.String)#org/apache/parquet/column/page/PageWriter/memUsageString(java.lang.String)
org/apache/parquet/column/impl/ColumnWriterV1/memUsageString(java.lang.String)#org/apache/parquet/column/values/ValuesWriter/memUsageString(java.lang.String)
org/apache/parquet/column/impl/ColumnWriterV1/flush()#org/apache/parquet/column/impl/ColumnWriterV1/writePage()
org/apache/parquet/column/impl/ColumnWriterV1/flush()#org/apache/parquet/column/values/ValuesWriter/resetDictionary()
org/apache/parquet/column/impl/ColumnWriterV1/flush()#org/apache/parquet/column/values/ValuesWriter/toDictPageAndClose()
org/apache/parquet/column/impl/ColumnWriterV1/flush()#org/apache/parquet/io/ParquetEncodingException/ParquetEncodingException(java.lang.String,java.lang.Throwable)
org/apache/parquet/column/impl/ColumnWriterV1/flush()#org/apache/parquet/column/page/PageWriter/writeDictionaryPage(org.apache.parquet.column.page.DictionaryPage)
org/apache/parquet/hadoop/thrift/TestCorruptThriftRecords/testDefaultsToNoTolerance()#java/util/ArrayList/ArrayList()
org/apache/parquet/hadoop/thrift/TestCorruptThriftRecords/testDefaultsToNoTolerance()#java/util/List/size()
org/apache/parquet/hadoop/thrift/TestCorruptThriftRecords/testDefaultsToNoTolerance()#org/apache/parquet/hadoop/thrift/TestCorruptThriftRecords/writeFileWithCorruptRecords(int,java.util.List)
org/apache/parquet/hadoop/thrift/TestCorruptThriftRecords/testDefaultsToNoTolerance()#org/apache/parquet/hadoop/thrift/TestCorruptThriftRecords/readFile(org.apache.parquet.hadoop.Path,org.apache.parquet.hadoop.Configuration,java.lang.String)
org/apache/parquet/hadoop/thrift/TestCorruptThriftRecords/testDefaultsToNoTolerance()#org/apache/parquet/hadoop/thrift/TestCorruptThriftRecords/assertEqualsExcepted(java.util.List,java.util.List)
org/apache/parquet/hadoop/thrift/TestCorruptThriftRecords/testCanTolerateBadRecords()#java/util/ArrayList/ArrayList()
org/apache/parquet/hadoop/thrift/TestCorruptThriftRecords/testCanTolerateBadRecords()#java/util/List/size()
org/apache/parquet/hadoop/thrift/TestCorruptThriftRecords/testCanTolerateBadRecords()#org/apache/parquet/hadoop/thrift/TestCorruptThriftRecords/writeFileWithCorruptRecords(int,java.util.List)
org/apache/parquet/hadoop/thrift/TestCorruptThriftRecords/testCanTolerateBadRecords()#org/apache/parquet/hadoop/thrift/TestCorruptThriftRecords/readFile(org.apache.parquet.hadoop.Path,org.apache.parquet.hadoop.Configuration,java.lang.String)
org/apache/parquet/hadoop/thrift/TestCorruptThriftRecords/testCanTolerateBadRecords()#org/apache/parquet/hadoop/thrift/TestCorruptThriftRecords/assertEqualsExcepted(java.util.List,java.util.List)
org/apache/parquet/hadoop/thrift/TestCorruptThriftRecords/makeExpectedValid(int)#java/lang/Object/Object()
org/apache/parquet/hadoop/thrift/TestCorruptThriftRecords/testThrowsWhenTooManyBadRecords()#java/util/ArrayList/ArrayList()
org/apache/parquet/hadoop/thrift/TestCorruptThriftRecords/testThrowsWhenTooManyBadRecords()#java/util/List/size()
org/apache/parquet/hadoop/thrift/TestCorruptThriftRecords/testThrowsWhenTooManyBadRecords()#org/apache/parquet/hadoop/thrift/TestCorruptThriftRecords/writeFileWithCorruptRecords(int,java.util.List)
org/apache/parquet/hadoop/thrift/TestCorruptThriftRecords/testThrowsWhenTooManyBadRecords()#org/apache/parquet/hadoop/thrift/TestCorruptThriftRecords/readFile(org.apache.parquet.hadoop.Path,org.apache.parquet.hadoop.Configuration,java.lang.String)
org/apache/parquet/hadoop/thrift/TestCorruptThriftRecords/testThrowsWhenTooManyBadRecords()#org/apache/parquet/hadoop/thrift/TestCorruptThriftRecords/assertEqualsExcepted(java.util.List,java.util.List)
org/apache/parquet/hadoop/thrift/TestCorruptThriftRecords/makeValid(int)#java/lang/Object/Object()
org/apache/parquet/hadoop/thrift/TestCorruptThriftRecords/writeFileWithCorruptRecords(int,java.util.List)#org/apache/parquet/thrift/ThriftParquetWriter/ThriftParquetWriter(org.apache.parquet.hadoop.Path,java.lang.Class,org.apache.parquet.hadoop.metadata.CompressionCodecName)
org/apache/parquet/hadoop/thrift/TestCorruptThriftRecords/writeFileWithCorruptRecords(int,java.util.List)#org/apache/parquet/hadoop/thrift/TestCorruptThriftRecords/makeExpectedValid(int)
org/apache/parquet/hadoop/thrift/TestCorruptThriftRecords/writeFileWithCorruptRecords(int,java.util.List)#org/apache/parquet/hadoop/thrift/TestCorruptThriftRecords/makeValid(int)
org/apache/parquet/hadoop/thrift/TestCorruptThriftRecords/writeFileWithCorruptRecords(int,java.util.List)#java/io/File/File(java.lang.String,java.lang.String)
org/apache/parquet/hadoop/thrift/TestCorruptThriftRecords/writeFileWithCorruptRecords(int,java.util.List)#java/io/File/getAbsolutePath()
org/apache/parquet/hadoop/thrift/TestCorruptThriftRecords/writeFileWithCorruptRecords(int,java.util.List)#org/apache/parquet/hadoop/thrift/TestCorruptThriftRecords/makeInvalid(int)
org/apache/parquet/hadoop/thrift/TestCorruptThriftRecords/readFile(org.apache.parquet.hadoop.Path,org.apache.parquet.hadoop.Configuration,java.lang.String)#org/apache/parquet/hadoop/thrift/TestInputOutputFormat/waitForJob(org.apache.parquet.hadoop.Job)
org/apache/parquet/hadoop/thrift/TestCorruptThriftRecords/readFile(org.apache.parquet.hadoop.Path,org.apache.parquet.hadoop.Configuration,java.lang.String)#org/apache/parquet/hadoop/thrift/TestCorruptThriftRecords/setupJob(org.apache.parquet.hadoop.Job,org.apache.parquet.hadoop.Path)
org/apache/parquet/hadoop/thrift/TestCorruptThriftRecords/readFile(org.apache.parquet.hadoop.Path,org.apache.parquet.hadoop.Configuration,java.lang.String)#java/lang/Object/Object()
org/apache/parquet/hadoop/thrift/TestCorruptThriftRecords/makeInvalid(int)#java/lang/Object/Object()
org/apache/parquet/hadoop/thrift/TestCorruptThriftRecords/setupJob(org.apache.parquet.hadoop.Job,org.apache.parquet.hadoop.Path)#org/apache/parquet/hadoop/thrift/ParquetThriftInputFormat/setThriftClass(org.apache.parquet.hadoop.JobConf,java.lang.Class)
org/apache/parquet/schema/Types/MessageTypeBuilder/named(java.lang.String)#org/apache/parquet/schema/MessageType/MessageType(java.lang.String,java.util.List)
org/apache/parquet/schema/Types/MessageTypeBuilder/named(java.lang.String)#org/apache/parquet/Preconditions/checkNotNull(T,java.lang.String)
org/apache/parquet/hadoop/CodecFactory/createDecompressor(org.apache.parquet.hadoop.metadata.CompressionCodecName)#org/apache/parquet/hadoop/CodecFactory/HeapBytesDecompressor/HeapBytesDecompressor(org.apache.parquet.hadoop.metadata.CompressionCodecName)
org/apache/parquet/hadoop/CodecFactory/createCompressor(org.apache.parquet.hadoop.metadata.CompressionCodecName)#org/apache/parquet/hadoop/CodecFactory/HeapBytesCompressor/HeapBytesCompressor(org.apache.parquet.hadoop.metadata.CompressionCodecName)
org/apache/parquet/hadoop/CodecFactory/getCodec(org.apache.parquet.hadoop.metadata.CompressionCodecName)#java/lang/Class/forName(java.lang.String)
org/apache/parquet/hadoop/CodecFactory/getCodec(org.apache.parquet.hadoop.metadata.CompressionCodecName)#org/apache/parquet/hadoop/BadConfigurationException/BadConfigurationException(java.lang.String,java.lang.Throwable)
org/apache/parquet/hadoop/CodecFactory/getCodec(org.apache.parquet.hadoop.metadata.CompressionCodecName)#org/apache/parquet/hadoop/metadata/CompressionCodecName/getHadoopCompressionCodecClassName()
org/apache/parquet/hadoop/CodecFactory/getDecompressor(org.apache.parquet.hadoop.metadata.CompressionCodecName)#org/apache/parquet/hadoop/CodecFactory/createDecompressor(org.apache.parquet.hadoop.metadata.CompressionCodecName)
org/apache/parquet/hadoop/CodecFactory/getDecompressor(org.apache.parquet.hadoop.metadata.CompressionCodecName)#java/util/Map/get(java.lang.Object)
org/apache/parquet/hadoop/CodecFactory/getDecompressor(org.apache.parquet.hadoop.metadata.CompressionCodecName)#java/util/Map/put(K,V)
org/apache/parquet/hadoop/CodecFactory/getCompressor(org.apache.parquet.hadoop.metadata.CompressionCodecName)#org/apache/parquet/hadoop/CodecFactory/createCompressor(org.apache.parquet.hadoop.metadata.CompressionCodecName)
org/apache/parquet/hadoop/CodecFactory/getCompressor(org.apache.parquet.hadoop.metadata.CompressionCodecName)#java/util/Map/get(java.lang.Object)
org/apache/parquet/hadoop/CodecFactory/getCompressor(org.apache.parquet.hadoop.metadata.CompressionCodecName)#java/util/Map/put(K,V)
org/apache/parquet/hadoop/CodecFactory/createDirectCodecFactory(org.apache.parquet.hadoop.Configuration,org.apache.parquet.bytes.ByteBufferAllocator,int)#org/apache/parquet/hadoop/DirectCodecFactory/DirectCodecFactory(org.apache.parquet.hadoop.Configuration,org.apache.parquet.bytes.ByteBufferAllocator,int)
org/apache/parquet/hadoop/CodecFactory/release()#org/apache/parquet/hadoop/CodecFactory/BytesCompressor/release()
org/apache/parquet/hadoop/CodecFactory/release()#org/apache/parquet/hadoop/CodecFactory/BytesDecompressor/release()
org/apache/parquet/hadoop/CodecFactory/release()#java/util/Map/values()
org/apache/parquet/hadoop/CodecFactory/release()#java/util/Map/clear()
org/apache/parquet/hadoop/metadata/TestColumnChunkMetaData/testConversionNeg()#org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/getFirstDataPageOffset()
org/apache/parquet/hadoop/metadata/TestColumnChunkMetaData/testConversionNeg()#org/apache/parquet/hadoop/metadata/TestColumnChunkMetaData/newMD(long)
org/apache/parquet/hadoop/metadata/TestColumnChunkMetaData/testConversionBig()#org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/getFirstDataPageOffset()
org/apache/parquet/hadoop/metadata/TestColumnChunkMetaData/testConversionBig()#org/apache/parquet/hadoop/metadata/TestColumnChunkMetaData/newMD(long)
org/apache/parquet/hadoop/metadata/TestColumnChunkMetaData/newMD(long)#org/apache/parquet/column/statistics/BinaryStatistics/BinaryStatistics()
org/apache/parquet/hadoop/metadata/TestColumnChunkMetaData/newMD(long)#org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/get(org.apache.parquet.hadoop.metadata.ColumnPath,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.hadoop.metadata.CompressionCodecName,java.util.Set,org.apache.parquet.column.statistics.Statistics,long,long,long,long,long)
org/apache/parquet/hadoop/metadata/TestColumnChunkMetaData/newMD(long)#java/util/HashSet/HashSet()
org/apache/parquet/hadoop/metadata/TestColumnChunkMetaData/newMD(long)#org/apache/parquet/hadoop/metadata/ColumnPath/get(java.lang.String[])
org/apache/parquet/hadoop/metadata/TestColumnChunkMetaData/testConversionSmall()#org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/getFirstDataPageOffset()
org/apache/parquet/hadoop/metadata/TestColumnChunkMetaData/testConversionSmall()#org/apache/parquet/hadoop/metadata/TestColumnChunkMetaData/newMD(long)
org/apache/parquet/hadoop/metadata/TestColumnChunkMetaData/testConversionVeryBig()#org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/getFirstDataPageOffset()
org/apache/parquet/hadoop/metadata/TestColumnChunkMetaData/testConversionVeryBig()#org/apache/parquet/hadoop/metadata/TestColumnChunkMetaData/newMD(long)
org/apache/parquet/hadoop/api/ReadSupport/getSchemaForRead(org.apache.parquet.schema.MessageType,org.apache.parquet.schema.MessageType)#org/apache/parquet/schema/MessageType/checkContains(org.apache.parquet.schema.Type)
org/apache/parquet/hadoop/api/ReadSupport/init(org.apache.parquet.hadoop.api.InitContext)#org/apache/parquet/hadoop/api/InitContext/getMergedKeyValueMetaData()
org/apache/parquet/hadoop/api/ReadSupport/init(org.apache.parquet.hadoop.api.InitContext)#org/apache/parquet/hadoop/api/InitContext/getFileSchema()
org/apache/parquet/hadoop/api/ReadSupport/init(org.apache.parquet.hadoop.api.InitContext)#org/apache/parquet/hadoop/api/ReadSupport/init(org.apache.parquet.hadoop.Configuration,java.util.Map,org.apache.parquet.schema.MessageType)
org/apache/parquet/hadoop/api/ReadSupport/init(org.apache.parquet.hadoop.api.InitContext)#org/apache/parquet/hadoop/api/InitContext/getConfiguration()
org/apache/parquet/hadoop/api/ReadSupport/init(org.apache.parquet.hadoop.Configuration,java.util.Map,org.apache.parquet.schema.MessageType)#java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)
org/apache/parquet/hadoop/api/ReadSupport/getSchemaForRead(org.apache.parquet.schema.MessageType,java.lang.String)#org/apache/parquet/hadoop/api/ReadSupport/getSchemaForRead(org.apache.parquet.schema.MessageType,org.apache.parquet.schema.MessageType)
org/apache/parquet/hadoop/api/ReadSupport/getSchemaForRead(org.apache.parquet.schema.MessageType,java.lang.String)#org/apache/parquet/schema/MessageTypeParser/parseMessageType(java.lang.String)
org/apache/parquet/filter2/Generator/main(java.lang.String[])#org/apache/parquet/filter2/IncrementallyUpdatedFilterPredicateGenerator/main(java.lang.String[])
org/apache/parquet/example/data/simple/SimpleGroupFactory/newGroup()#org/apache/parquet/example/data/simple/SimpleGroup/SimpleGroup(org.apache.parquet.schema.GroupType)
org/apache/parquet/filter2/predicate/LogicalInverseRewriter/rewrite(org.apache.parquet.filter2.predicate.FilterPredicate)#org/apache/parquet/filter2/predicate/FilterPredicate/accept(org.apache.parquet.filter2.predicate.FilterPredicate.Visitor)
org/apache/parquet/filter2/predicate/LogicalInverseRewriter/rewrite(org.apache.parquet.filter2.predicate.FilterPredicate)#org/apache/parquet/Preconditions/checkNotNull(T,java.lang.String)
org/apache/parquet/filter2/predicate/LogicalInverseRewriter/visit(org.apache.parquet.filter2.predicate.Operators.Not)#org/apache/parquet/filter2/predicate/FilterPredicate/accept(org.apache.parquet.filter2.predicate.FilterPredicate.Visitor)
org/apache/parquet/filter2/predicate/LogicalInverseRewriter/visit(org.apache.parquet.filter2.predicate.Operators.Not)#org/apache/parquet/filter2/predicate/LogicalInverter/invert(org.apache.parquet.filter2.predicate.FilterPredicate)
org/apache/parquet/filter2/predicate/LogicalInverseRewriter/visit(org.apache.parquet.filter2.predicate.Operators.Not)#org/apache/parquet/filter2/predicate/Operators/Not/getPredicate()
org/apache/parquet/filter2/predicate/LogicalInverseRewriter/visit(org.apache.parquet.filter2.predicate.Operators.Or)#org/apache/parquet/filter2/predicate/FilterPredicate/accept(org.apache.parquet.filter2.predicate.FilterPredicate.Visitor)
org/apache/parquet/filter2/predicate/LogicalInverseRewriter/visit(org.apache.parquet.filter2.predicate.Operators.Or)#org/apache/parquet/filter2/predicate/FilterApi/or(org.apache.parquet.filter2.predicate.FilterPredicate,org.apache.parquet.filter2.predicate.FilterPredicate)
org/apache/parquet/filter2/predicate/LogicalInverseRewriter/visit(org.apache.parquet.filter2.predicate.Operators.Or)#org/apache/parquet/filter2/predicate/Operators/BinaryLogicalFilterPredicate/getRight()
org/apache/parquet/filter2/predicate/LogicalInverseRewriter/visit(org.apache.parquet.filter2.predicate.Operators.Or)#org/apache/parquet/filter2/predicate/Operators/BinaryLogicalFilterPredicate/getLeft()
org/apache/parquet/filter2/predicate/LogicalInverseRewriter/visit(org.apache.parquet.filter2.predicate.Operators.And)#org/apache/parquet/filter2/predicate/FilterPredicate/accept(org.apache.parquet.filter2.predicate.FilterPredicate.Visitor)
org/apache/parquet/filter2/predicate/LogicalInverseRewriter/visit(org.apache.parquet.filter2.predicate.Operators.And)#org/apache/parquet/filter2/predicate/FilterApi/and(org.apache.parquet.filter2.predicate.FilterPredicate,org.apache.parquet.filter2.predicate.FilterPredicate)
org/apache/parquet/filter2/predicate/LogicalInverseRewriter/visit(org.apache.parquet.filter2.predicate.Operators.And)#org/apache/parquet/filter2/predicate/Operators/BinaryLogicalFilterPredicate/getRight()
org/apache/parquet/filter2/predicate/LogicalInverseRewriter/visit(org.apache.parquet.filter2.predicate.Operators.And)#org/apache/parquet/filter2/predicate/Operators/BinaryLogicalFilterPredicate/getLeft()
org/apache/parquet/column/ColumnDescriptor/compareTo(org.apache.parquet.column.ColumnDescriptor)#java/lang/String/compareTo(java.lang.String)
org/apache/parquet/column/ColumnDescriptor/hashCode()#java/util/Arrays/hashCode(java.lang.Object[])
org/apache/parquet/column/ColumnDescriptor/toString()#java/util/Arrays/toString(java.lang.Object[])
org/apache/parquet/column/ColumnDescriptor/equals(java.lang.Object)#java/util/Arrays/equals(java.lang.Object[],java.lang.Object[])
org/apache/parquet/column/ParquetProperties/Builder/withMinRowCountForPageSizeCheck(int)#org/apache/parquet/Preconditions/checkArgument(boolean,java.lang.String,java.lang.Object[])
org/apache/parquet/column/ParquetProperties/Builder/withPageSize(int)#org/apache/parquet/Preconditions/checkArgument(boolean,java.lang.String,java.lang.Object[])
org/apache/parquet/column/ParquetProperties/Builder/build()#org/apache/parquet/column/ParquetProperties/ParquetProperties(org.apache.parquet.column.ParquetProperties.WriterVersion,int,int,boolean,int,int,boolean,org.apache.parquet.bytes.ByteBufferAllocator,org.apache.parquet.column.values.factory.ValuesWriterFactory)
org/apache/parquet/column/ParquetProperties/Builder/build()#org/apache/parquet/column/values/factory/ValuesWriterFactory/initialize(org.apache.parquet.column.ParquetProperties)
org/apache/parquet/column/ParquetProperties/Builder/withDictionaryPageSize(int)#org/apache/parquet/Preconditions/checkArgument(boolean,java.lang.String,java.lang.Object[])
org/apache/parquet/column/ParquetProperties/Builder/withAllocator(org.apache.parquet.bytes.ByteBufferAllocator)#org/apache/parquet/Preconditions/checkNotNull(T,java.lang.String)
org/apache/parquet/column/ParquetProperties/Builder/withValuesWriterFactory(org.apache.parquet.column.values.factory.ValuesWriterFactory)#org/apache/parquet/Preconditions/checkNotNull(T,java.lang.String)
org/apache/parquet/column/ParquetProperties/Builder/withMaxRowCountForPageSizeCheck(int)#org/apache/parquet/Preconditions/checkArgument(boolean,java.lang.String,java.lang.Object[])
org/apache/parquet/bytes/ByteBufferInputStream/read(byte[],int,int)#java/nio/ByteBuffer/get(byte[],int,int)
org/apache/parquet/bytes/ByteBufferInputStream/read(byte[],int,int)#java/nio/Buffer/remaining()
org/apache/parquet/bytes/ByteBufferInputStream/read(byte[],int,int)#java/lang/Math/min(int,int)
org/apache/parquet/bytes/ByteBufferInputStream/read()#java/nio/ByteBuffer/get()
org/apache/parquet/bytes/ByteBufferInputStream/read()#java/nio/Buffer/hasRemaining()
org/apache/parquet/bytes/ByteBufferInputStream/available()#java/nio/Buffer/remaining()
org/apache/parquet/bytes/ByteBufferInputStream/toByteBuffer()#java/nio/ByteBuffer/slice()
org/apache/parquet/bytes/ByteBufferInputStream/skip(long)#java/nio/Buffer/position()
org/apache/parquet/bytes/ByteBufferInputStream/skip(long)#java/nio/Buffer/remaining()
org/apache/parquet/bytes/ByteBufferInputStream/skip(long)#java/nio/Buffer/position(int)
org/apache/parquet/thrift/TestParquetReadProtocol/testOneOfEach()#java/util/ArrayList/ArrayList()
org/apache/parquet/thrift/TestParquetReadProtocol/testOneOfEach()#java/util/List/add(E)
org/apache/parquet/thrift/TestParquetReadProtocol/testOneOfEach()#java/nio/ByteBuffer/wrap(byte[])
org/apache/parquet/thrift/TestParquetReadProtocol/testOneOfEach()#java/lang/String/getBytes()
org/apache/parquet/thrift/TestParquetReadProtocol/testOneOfEach()#org/apache/parquet/thrift/TestParquetReadProtocol/validate(T)
org/apache/parquet/thrift/TestParquetReadProtocol/testRead()#java/util/Arrays/asList(T[])
org/apache/parquet/thrift/TestParquetReadProtocol/testRead()#java/lang/Object/Object()
org/apache/parquet/thrift/TestParquetReadProtocol/testRead()#org/apache/parquet/thrift/TestParquetReadProtocol/validate(T)
org/apache/parquet/thrift/TestParquetReadProtocol/testList()#java/util/ArrayList/ArrayList()
org/apache/parquet/thrift/TestParquetReadProtocol/testList()#java/util/List/add(E)
org/apache/parquet/thrift/TestParquetReadProtocol/testList()#org/apache/parquet/thrift/TestParquetReadProtocol/validate(T)
org/apache/parquet/thrift/TestParquetReadProtocol/testReadEmpty()#org/apache/parquet/thrift/TestParquetReadProtocol/validate(T)
org/apache/parquet/thrift/TestParquetReadProtocol/validate(T)#org/apache/parquet/thrift/ThriftSchemaConverter/convert(java.lang.Class)
org/apache/parquet/thrift/TestParquetReadProtocol/validate(T)#org/apache/parquet/column/page/mem/MemPageStore/MemPageStore(long)
org/apache/parquet/thrift/TestParquetReadProtocol/validate(T)#org/apache/parquet/column/ParquetProperties/Builder/build()
org/apache/parquet/thrift/TestParquetReadProtocol/validate(T)#org/apache/parquet/column/impl/ColumnWriteStoreV1/flush()
org/apache/parquet/thrift/TestParquetReadProtocol/validate(T)#org/apache/parquet/io/ColumnIOFactory/getColumnIO(org.apache.parquet.schema.MessageType)
org/apache/parquet/thrift/TestParquetReadProtocol/validate(T)#org/apache/parquet/column/ParquetProperties/Builder/withDictionaryEncoding(boolean)
org/apache/parquet/thrift/TestParquetReadProtocol/validate(T)#org/apache/parquet/io/MessageColumnIO/getRecordWriter(org.apache.parquet.column.ColumnWriteStore)
org/apache/parquet/thrift/TestParquetReadProtocol/validate(T)#org/apache/parquet/io/ColumnIOFactory/ColumnIOFactory(boolean)
org/apache/parquet/thrift/TestParquetReadProtocol/validate(T)#org/apache/parquet/io/RecordReader/read()
org/apache/parquet/thrift/TestParquetReadProtocol/validate(T)#org/apache/parquet/thrift/ParquetWriteProtocol/ParquetWriteProtocol(org.apache.parquet.io.api.RecordConsumer,org.apache.parquet.io.MessageColumnIO,org.apache.parquet.thrift.struct.ThriftType.StructType)
org/apache/parquet/thrift/TestParquetReadProtocol/validate(T)#java/lang/Object/getClass()
org/apache/parquet/thrift/TestParquetReadProtocol/validate(T)#org/apache/parquet/io/api/RecordConsumer/flush()
org/apache/parquet/thrift/TestParquetReadProtocol/validate(T)#org/apache/parquet/column/ParquetProperties/Builder/withPageSize(int)
org/apache/parquet/thrift/TestParquetReadProtocol/validate(T)#org/apache/parquet/thrift/TBaseRecordConverter/TBaseRecordConverter(java.lang.Class,org.apache.parquet.schema.MessageType,org.apache.parquet.thrift.struct.ThriftType.StructType)
org/apache/parquet/thrift/TestParquetReadProtocol/validate(T)#org/apache/parquet/column/ParquetProperties/builder()
org/apache/parquet/thrift/TestParquetReadProtocol/validate(T)#org/apache/parquet/thrift/ThriftSchemaConverter/toStructType(java.lang.Class)
org/apache/parquet/thrift/TestParquetReadProtocol/validate(T)#org/apache/parquet/column/impl/ColumnWriteStoreV1/ColumnWriteStoreV1(org.apache.parquet.column.page.PageWriteStore,org.apache.parquet.column.ParquetProperties)
org/apache/parquet/thrift/TestParquetReadProtocol/validate(T)#org/apache/parquet/io/MessageColumnIO/getRecordReader(org.apache.parquet.column.page.PageReadStore,org.apache.parquet.io.api.RecordMaterializer)
org/apache/parquet/thrift/TestParquetReadProtocol/validate(T)#org/apache/parquet/thrift/ThriftSchemaConverter/ThriftSchemaConverter()
org/apache/parquet/thrift/TestParquetReadProtocol/testMap()#java/util/HashMap/HashMap()
org/apache/parquet/thrift/TestParquetReadProtocol/testMap()#java/util/Map/put(K,V)
org/apache/parquet/thrift/TestParquetReadProtocol/testMap()#org/apache/parquet/thrift/TestParquetReadProtocol/validate(T)
org/apache/parquet/thrift/TestParquetReadProtocol/testStructInMap()#java/util/Collections/singletonMap(K,V)
org/apache/parquet/thrift/TestParquetReadProtocol/testStructInMap()#java/util/HashMap/HashMap()
org/apache/parquet/thrift/TestParquetReadProtocol/testStructInMap()#java/lang/Object/Object()
org/apache/parquet/thrift/TestParquetReadProtocol/testStructInMap()#org/apache/parquet/thrift/TestParquetReadProtocol/validate(T)
org/apache/parquet/thrift/TestParquetReadProtocol/testSet()#java/util/Set/add(E)
org/apache/parquet/thrift/TestParquetReadProtocol/testSet()#java/util/HashSet/HashSet()
org/apache/parquet/thrift/TestParquetReadProtocol/testSet()#org/apache/parquet/thrift/TestParquetReadProtocol/validate(T)
org/apache/parquet/SemanticVersion/NumberOrString/compareTo(org.apache.parquet.SemanticVersion.NumberOrString)#org/apache/parquet/SemanticVersion/compareBooleans(boolean,boolean)
org/apache/parquet/SemanticVersion/NumberOrString/compareTo(org.apache.parquet.SemanticVersion.NumberOrString)#java/lang/String/compareTo(java.lang.String)
org/apache/parquet/SemanticVersion/NumberOrString/compareTo(org.apache.parquet.SemanticVersion.NumberOrString)#org/apache/parquet/SemanticVersion/compareIntegers(int,int)
org/apache/parquet/hadoop/util/HadoopInputFile/fromStatus(org.apache.parquet.hadoop.FileStatus,org.apache.parquet.hadoop.Configuration)#org/apache/parquet/hadoop/util/HadoopInputFile/HadoopInputFile(org.apache.parquet.hadoop.FileSystem,org.apache.parquet.hadoop.FileStatus,org.apache.parquet.hadoop.Configuration)
org/apache/parquet/hadoop/util/HadoopInputFile/newStream()#org/apache/parquet/hadoop/util/HadoopStreams/wrap(org.apache.parquet.hadoop.FSDataInputStream)
org/apache/parquet/hadoop/util/HadoopInputFile/fromPath(org.apache.parquet.hadoop.Path,org.apache.parquet.hadoop.Configuration)#org/apache/parquet/hadoop/util/HadoopInputFile/HadoopInputFile(org.apache.parquet.hadoop.FileSystem,org.apache.parquet.hadoop.FileStatus,org.apache.parquet.hadoop.Configuration)
org/apache/parquet/filter2/predicate/Operators/Gt/accept(org.apache.parquet.filter2.predicate.FilterPredicate.Visitor)#org/apache/parquet/filter2/predicate/FilterPredicate/Visitor/visit(org.apache.parquet.filter2.predicate.Operators.Gt)
org/apache/parquet/column/impl/ColumnWriterV2/definitionLevel(int)#org/apache/parquet/io/ParquetEncodingException/ParquetEncodingException(java.lang.String,java.lang.Throwable)
org/apache/parquet/column/impl/ColumnWriterV2/definitionLevel(int)#org/apache/parquet/column/values/rle/RunLengthBitPackingHybridEncoder/writeInt(int)
org/apache/parquet/column/impl/ColumnWriterV2/getCurrentPageBufferedSize()#org/apache/parquet/column/values/ValuesWriter/getBufferedSize()
org/apache/parquet/column/impl/ColumnWriterV2/getCurrentPageBufferedSize()#org/apache/parquet/column/values/rle/RunLengthBitPackingHybridEncoder/getBufferedSize()
org/apache/parquet/column/impl/ColumnWriterV2/close()#org/apache/parquet/column/values/rle/RunLengthBitPackingHybridEncoder/close()
org/apache/parquet/column/impl/ColumnWriterV2/close()#org/apache/parquet/column/values/ValuesWriter/close()
org/apache/parquet/column/impl/ColumnWriterV2/write(long,int,int)#org/apache/parquet/column/impl/ColumnWriterV2/log(java.lang.Object,int,int)
org/apache/parquet/column/impl/ColumnWriterV2/write(long,int,int)#org/apache/parquet/column/values/ValuesWriter/writeLong(long)
org/apache/parquet/column/impl/ColumnWriterV2/write(long,int,int)#org/apache/parquet/column/impl/ColumnWriterV2/repetitionLevel(int)
org/apache/parquet/column/impl/ColumnWriterV2/write(long,int,int)#org/apache/parquet/column/impl/ColumnWriterV2/definitionLevel(int)
org/apache/parquet/column/impl/ColumnWriterV2/write(long,int,int)#org/apache/parquet/column/statistics/Statistics/updateStats(long)
org/apache/parquet/column/impl/ColumnWriterV2/write(int,int,int)#org/apache/parquet/column/impl/ColumnWriterV2/log(java.lang.Object,int,int)
org/apache/parquet/column/impl/ColumnWriterV2/write(int,int,int)#org/apache/parquet/column/values/ValuesWriter/writeInteger(int)
org/apache/parquet/column/impl/ColumnWriterV2/write(int,int,int)#org/apache/parquet/column/impl/ColumnWriterV2/repetitionLevel(int)
org/apache/parquet/column/impl/ColumnWriterV2/write(int,int,int)#org/apache/parquet/column/statistics/Statistics/updateStats(int)
org/apache/parquet/column/impl/ColumnWriterV2/write(int,int,int)#org/apache/parquet/column/impl/ColumnWriterV2/definitionLevel(int)
org/apache/parquet/column/impl/ColumnWriterV2/write(boolean,int,int)#org/apache/parquet/column/impl/ColumnWriterV2/log(java.lang.Object,int,int)
org/apache/parquet/column/impl/ColumnWriterV2/write(boolean,int,int)#org/apache/parquet/column/values/ValuesWriter/writeBoolean(boolean)
org/apache/parquet/column/impl/ColumnWriterV2/write(boolean,int,int)#org/apache/parquet/column/impl/ColumnWriterV2/repetitionLevel(int)
org/apache/parquet/column/impl/ColumnWriterV2/write(boolean,int,int)#org/apache/parquet/column/impl/ColumnWriterV2/definitionLevel(int)
org/apache/parquet/column/impl/ColumnWriterV2/write(boolean,int,int)#org/apache/parquet/column/statistics/Statistics/updateStats(boolean)
org/apache/parquet/column/impl/ColumnWriterV2/write(double,int,int)#org/apache/parquet/column/impl/ColumnWriterV2/log(java.lang.Object,int,int)
org/apache/parquet/column/impl/ColumnWriterV2/write(double,int,int)#org/apache/parquet/column/values/ValuesWriter/writeDouble(double)
org/apache/parquet/column/impl/ColumnWriterV2/write(double,int,int)#org/apache/parquet/column/impl/ColumnWriterV2/repetitionLevel(int)
org/apache/parquet/column/impl/ColumnWriterV2/write(double,int,int)#org/apache/parquet/column/impl/ColumnWriterV2/definitionLevel(int)
org/apache/parquet/column/impl/ColumnWriterV2/write(double,int,int)#org/apache/parquet/column/statistics/Statistics/updateStats(double)
org/apache/parquet/column/impl/ColumnWriterV2/allocatedSize()#org/apache/parquet/column/values/ValuesWriter/getAllocatedSize()
org/apache/parquet/column/impl/ColumnWriterV2/allocatedSize()#org/apache/parquet/column/page/PageWriter/allocatedSize()
org/apache/parquet/column/impl/ColumnWriterV2/allocatedSize()#org/apache/parquet/column/values/rle/RunLengthBitPackingHybridEncoder/getAllocatedSize()
org/apache/parquet/column/impl/ColumnWriterV2/write(org.apache.parquet.io.api.Binary,int,int)#org/apache/parquet/column/impl/ColumnWriterV2/log(java.lang.Object,int,int)
org/apache/parquet/column/impl/ColumnWriterV2/write(org.apache.parquet.io.api.Binary,int,int)#org/apache/parquet/column/impl/ColumnWriterV2/repetitionLevel(int)
org/apache/parquet/column/impl/ColumnWriterV2/write(org.apache.parquet.io.api.Binary,int,int)#org/apache/parquet/column/impl/ColumnWriterV2/definitionLevel(int)
org/apache/parquet/column/impl/ColumnWriterV2/write(org.apache.parquet.io.api.Binary,int,int)#org/apache/parquet/column/values/ValuesWriter/writeBytes(org.apache.parquet.io.api.Binary)
org/apache/parquet/column/impl/ColumnWriterV2/write(org.apache.parquet.io.api.Binary,int,int)#org/apache/parquet/column/statistics/Statistics/updateStats(org.apache.parquet.io.api.Binary)
org/apache/parquet/column/impl/ColumnWriterV2/repetitionLevel(int)#org/apache/parquet/io/ParquetEncodingException/ParquetEncodingException(java.lang.String,java.lang.Throwable)
org/apache/parquet/column/impl/ColumnWriterV2/repetitionLevel(int)#org/apache/parquet/column/values/rle/RunLengthBitPackingHybridEncoder/writeInt(int)
org/apache/parquet/column/impl/ColumnWriterV2/writePage(long)#org/apache/parquet/column/values/ValuesWriter/getBytes()
org/apache/parquet/column/impl/ColumnWriterV2/writePage(long)#org/apache/parquet/Ints/checkedCast(long)
org/apache/parquet/column/impl/ColumnWriterV2/writePage(long)#org/apache/parquet/bytes/BytesInput/empty()
org/apache/parquet/column/impl/ColumnWriterV2/writePage(long)#org/apache/parquet/io/ParquetEncodingException/ParquetEncodingException(java.lang.String,java.lang.Throwable)
org/apache/parquet/column/impl/ColumnWriterV2/writePage(long)#org/apache/parquet/column/values/ValuesWriter/reset()
org/apache/parquet/column/impl/ColumnWriterV2/writePage(long)#org/apache/parquet/column/values/rle/RunLengthBitPackingHybridEncoder/reset()
org/apache/parquet/column/impl/ColumnWriterV2/writePage(long)#org/apache/parquet/column/values/rle/RunLengthBitPackingHybridEncoder/toBytes()
org/apache/parquet/column/impl/ColumnWriterV2/writePage(long)#org/apache/parquet/column/ColumnDescriptor/getMaxDefinitionLevel()
org/apache/parquet/column/impl/ColumnWriterV2/writePage(long)#org/apache/parquet/column/ColumnDescriptor/getMaxRepetitionLevel()
org/apache/parquet/column/impl/ColumnWriterV2/writePage(long)#org/apache/parquet/column/page/PageWriter/writePageV2(int,int,int,org.apache.parquet.bytes.BytesInput,org.apache.parquet.bytes.BytesInput,org.apache.parquet.column.Encoding,org.apache.parquet.bytes.BytesInput,org.apache.parquet.column.statistics.Statistics)
org/apache/parquet/column/impl/ColumnWriterV2/writePage(long)#org/apache/parquet/column/impl/ColumnWriterV2/resetStatistics()
org/apache/parquet/column/impl/ColumnWriterV2/writePage(long)#org/apache/parquet/column/statistics/Statistics/getNumNulls()
org/apache/parquet/column/impl/ColumnWriterV2/writePage(long)#org/apache/parquet/column/values/ValuesWriter/getEncoding()
org/apache/parquet/column/impl/ColumnWriterV2/getTotalBufferedSize()#org/apache/parquet/column/page/PageWriter/getMemSize()
org/apache/parquet/column/impl/ColumnWriterV2/getTotalBufferedSize()#org/apache/parquet/column/values/ValuesWriter/getBufferedSize()
org/apache/parquet/column/impl/ColumnWriterV2/getTotalBufferedSize()#org/apache/parquet/column/values/rle/RunLengthBitPackingHybridEncoder/getBufferedSize()
org/apache/parquet/column/impl/ColumnWriterV2/resetStatistics()#org/apache/parquet/column/ColumnDescriptor/getType()
org/apache/parquet/column/impl/ColumnWriterV2/resetStatistics()#org/apache/parquet/column/statistics/Statistics/getStatsBasedOnType(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/column/impl/ColumnWriterV2/write(float,int,int)#org/apache/parquet/column/statistics/Statistics/updateStats(float)
org/apache/parquet/column/impl/ColumnWriterV2/write(float,int,int)#org/apache/parquet/column/impl/ColumnWriterV2/log(java.lang.Object,int,int)
org/apache/parquet/column/impl/ColumnWriterV2/write(float,int,int)#org/apache/parquet/column/impl/ColumnWriterV2/repetitionLevel(int)
org/apache/parquet/column/impl/ColumnWriterV2/write(float,int,int)#org/apache/parquet/column/impl/ColumnWriterV2/definitionLevel(int)
org/apache/parquet/column/impl/ColumnWriterV2/write(float,int,int)#org/apache/parquet/column/values/ValuesWriter/writeFloat(float)
org/apache/parquet/column/impl/ColumnWriterV2/finalizeColumnChunk()#org/apache/parquet/column/values/ValuesWriter/resetDictionary()
org/apache/parquet/column/impl/ColumnWriterV2/finalizeColumnChunk()#org/apache/parquet/column/values/ValuesWriter/toDictPageAndClose()
org/apache/parquet/column/impl/ColumnWriterV2/finalizeColumnChunk()#org/apache/parquet/io/ParquetEncodingException/ParquetEncodingException(java.lang.String,java.lang.Throwable)
org/apache/parquet/column/impl/ColumnWriterV2/finalizeColumnChunk()#org/apache/parquet/column/page/PageWriter/writeDictionaryPage(org.apache.parquet.column.page.DictionaryPage)
org/apache/parquet/column/impl/ColumnWriterV2/memUsageString(java.lang.String)#org/apache/parquet/column/impl/ColumnWriterV2/allocatedSize()
org/apache/parquet/column/impl/ColumnWriterV2/memUsageString(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/apache/parquet/column/impl/ColumnWriterV2/memUsageString(java.lang.String)#org/apache/parquet/column/impl/ColumnWriterV2/getTotalBufferedSize()
org/apache/parquet/column/impl/ColumnWriterV2/memUsageString(java.lang.String)#java/lang/String/format(java.lang.String,java.lang.Object[])
org/apache/parquet/column/impl/ColumnWriterV2/memUsageString(java.lang.String)#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/apache/parquet/column/impl/ColumnWriterV2/memUsageString(java.lang.String)#java/lang/StringBuilder/append(long)
org/apache/parquet/column/impl/ColumnWriterV2/memUsageString(java.lang.String)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/parquet/column/impl/ColumnWriterV2/memUsageString(java.lang.String)#org/apache/parquet/column/page/PageWriter/memUsageString(java.lang.String)
org/apache/parquet/column/impl/ColumnWriterV2/memUsageString(java.lang.String)#org/apache/parquet/column/values/ValuesWriter/memUsageString(java.lang.String)
org/apache/parquet/column/impl/ColumnWriterV2/memUsageString(java.lang.String)#java/lang/StringBuilder/toString()
org/apache/parquet/column/impl/ColumnWriterV2/memUsageString(java.lang.String)#org/apache/parquet/column/values/rle/RunLengthBitPackingHybridEncoder/getAllocatedSize()
org/apache/parquet/column/impl/ColumnWriterV2/writeNull(int,int)#org/apache/parquet/column/impl/ColumnWriterV2/log(java.lang.Object,int,int)
org/apache/parquet/column/impl/ColumnWriterV2/writeNull(int,int)#org/apache/parquet/column/statistics/Statistics/incrementNumNulls()
org/apache/parquet/column/impl/ColumnWriterV2/writeNull(int,int)#org/apache/parquet/column/impl/ColumnWriterV2/repetitionLevel(int)
org/apache/parquet/column/impl/ColumnWriterV2/writeNull(int,int)#org/apache/parquet/column/impl/ColumnWriterV2/definitionLevel(int)
org/apache/parquet/column/impl/ColumnWriterV2/getBufferedSizeInMemory()#org/apache/parquet/column/page/PageWriter/getMemSize()
org/apache/parquet/column/impl/ColumnWriterV2/getBufferedSizeInMemory()#org/apache/parquet/column/values/ValuesWriter/getBufferedSize()
org/apache/parquet/column/impl/ColumnWriterV2/getBufferedSizeInMemory()#org/apache/parquet/column/values/rle/RunLengthBitPackingHybridEncoder/getBufferedSize()
org/apache/parquet/glob/GlobNode/OneOf/accept(org.apache.parquet.glob.GlobNode.Visitor)#org/apache/parquet/glob/GlobNode/Visitor/visit(org.apache.parquet.glob.GlobNode.OneOf)
org/apache/parquet/glob/GlobNode/OneOf/hashCode()#java/util/List/hashCode()
org/apache/parquet/glob/GlobNode/OneOf/equals(java.lang.Object)#java/util/List/equals(java.lang.Object)
org/apache/parquet/glob/GlobNode/OneOf/equals(java.lang.Object)#java/lang/Object/getClass()
org/apache/parquet/column/statistics/IntStatistics/setMinMax(int,int)#org/apache/parquet/column/statistics/Statistics/markAsNotEmpty()
org/apache/parquet/column/statistics/IntStatistics/toString()#org/apache/parquet/column/statistics/Statistics/hasNonNullValue()
org/apache/parquet/column/statistics/IntStatistics/toString()#java/lang/String/format(java.lang.String,java.lang.Object[])
org/apache/parquet/column/statistics/IntStatistics/toString()#org/apache/parquet/column/statistics/Statistics/getNumNulls()
org/apache/parquet/column/statistics/IntStatistics/toString()#org/apache/parquet/column/statistics/Statistics/isEmpty()
org/apache/parquet/column/statistics/IntStatistics/setMinMaxFromBytes(byte[],byte[])#org/apache/parquet/bytes/BytesUtils/bytesToInt(byte[])
org/apache/parquet/column/statistics/IntStatistics/setMinMaxFromBytes(byte[],byte[])#org/apache/parquet/column/statistics/Statistics/markAsNotEmpty()
org/apache/parquet/column/statistics/IntStatistics/getMaxBytes()#org/apache/parquet/bytes/BytesUtils/intToBytes(int)
org/apache/parquet/column/statistics/IntStatistics/mergeStatisticsMinMax(org.apache.parquet.column.statistics.Statistics)#org/apache/parquet/column/statistics/IntStatistics/updateStats(int,int)
org/apache/parquet/column/statistics/IntStatistics/mergeStatisticsMinMax(org.apache.parquet.column.statistics.Statistics)#org/apache/parquet/column/statistics/IntStatistics/initializeStats(int,int)
org/apache/parquet/column/statistics/IntStatistics/mergeStatisticsMinMax(org.apache.parquet.column.statistics.Statistics)#org/apache/parquet/column/statistics/IntStatistics/getMin()
org/apache/parquet/column/statistics/IntStatistics/mergeStatisticsMinMax(org.apache.parquet.column.statistics.Statistics)#org/apache/parquet/column/statistics/Statistics/hasNonNullValue()
org/apache/parquet/column/statistics/IntStatistics/mergeStatisticsMinMax(org.apache.parquet.column.statistics.Statistics)#org/apache/parquet/column/statistics/IntStatistics/getMax()
org/apache/parquet/column/statistics/IntStatistics/isSmallerThan(long)#org/apache/parquet/column/statistics/Statistics/hasNonNullValue()
org/apache/parquet/column/statistics/IntStatistics/getMinBytes()#org/apache/parquet/bytes/BytesUtils/intToBytes(int)
org/apache/parquet/column/statistics/IntStatistics/updateStats(int)#org/apache/parquet/column/statistics/IntStatistics/updateStats(int,int)
org/apache/parquet/column/statistics/IntStatistics/updateStats(int)#org/apache/parquet/column/statistics/Statistics/hasNonNullValue()
org/apache/parquet/column/statistics/IntStatistics/updateStats(int)#org/apache/parquet/column/statistics/IntStatistics/initializeStats(int,int)
org/apache/parquet/column/statistics/IntStatistics/initializeStats(int,int)#org/apache/parquet/column/statistics/Statistics/markAsNotEmpty()
org/apache/parquet/filter2/recordlevel/IncrementallyUpdatedFilterPredicate/ValueInspector/update(float)#java/lang/UnsupportedOperationException/UnsupportedOperationException()
org/apache/parquet/filter2/recordlevel/IncrementallyUpdatedFilterPredicate/ValueInspector/setResult(boolean)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/apache/parquet/filter2/recordlevel/IncrementallyUpdatedFilterPredicate/ValueInspector/getResult()#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/apache/parquet/filter2/recordlevel/IncrementallyUpdatedFilterPredicate/ValueInspector/updateNull()#java/lang/UnsupportedOperationException/UnsupportedOperationException()
org/apache/parquet/filter2/recordlevel/IncrementallyUpdatedFilterPredicate/ValueInspector/update(int)#java/lang/UnsupportedOperationException/UnsupportedOperationException()
org/apache/parquet/filter2/recordlevel/IncrementallyUpdatedFilterPredicate/ValueInspector/update(double)#java/lang/UnsupportedOperationException/UnsupportedOperationException()
org/apache/parquet/filter2/recordlevel/IncrementallyUpdatedFilterPredicate/ValueInspector/update(long)#java/lang/UnsupportedOperationException/UnsupportedOperationException()
org/apache/parquet/filter2/recordlevel/IncrementallyUpdatedFilterPredicate/ValueInspector/update(boolean)#java/lang/UnsupportedOperationException/UnsupportedOperationException()
org/apache/parquet/filter2/recordlevel/IncrementallyUpdatedFilterPredicate/ValueInspector/accept(org.apache.parquet.filter2.recordlevel.IncrementallyUpdatedFilterPredicate.Visitor)#org/apache/parquet/filter2/recordlevel/IncrementallyUpdatedFilterPredicate/Visitor/visit(org.apache.parquet.filter2.recordlevel.IncrementallyUpdatedFilterPredicate.ValueInspector)
org/apache/parquet/filter2/recordlevel/IncrementallyUpdatedFilterPredicate/ValueInspector/update(org.apache.parquet.io.api.Binary)#java/lang/UnsupportedOperationException/UnsupportedOperationException()
org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/MockBufferReader/read(java.nio.ByteBuffer)#java/nio/Buffer/remaining()
org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/MockBufferReader/read(java.nio.ByteBuffer)#java/nio/ByteBuffer/put(byte[],int,int)
org/apache/parquet/column/impl/ColumnReadStoreImpl/newMemColumnReader(org.apache.parquet.column.ColumnDescriptor,org.apache.parquet.column.page.PageReader)#org/apache/parquet/column/impl/ColumnReaderImpl/ColumnReaderImpl(org.apache.parquet.column.ColumnDescriptor,org.apache.parquet.column.page.PageReader,org.apache.parquet.io.api.PrimitiveConverter,org.apache.parquet.VersionParser.ParsedVersion)
org/apache/parquet/column/impl/ColumnReadStoreImpl/newMemColumnReader(org.apache.parquet.column.ColumnDescriptor,org.apache.parquet.column.page.PageReader)#org/apache/parquet/column/impl/ColumnReadStoreImpl/getPrimitiveConverter(org.apache.parquet.column.ColumnDescriptor)
org/apache/parquet/column/impl/ColumnReadStoreImpl/getPrimitiveConverter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/io/api/Converter/asPrimitiveConverter()
org/apache/parquet/column/impl/ColumnReadStoreImpl/getPrimitiveConverter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/io/api/GroupConverter/getConverter(int)
org/apache/parquet/column/impl/ColumnReadStoreImpl/getPrimitiveConverter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/schema/GroupType/getFieldIndex(java.lang.String)
org/apache/parquet/column/impl/ColumnReadStoreImpl/getPrimitiveConverter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/ColumnDescriptor/getPath()
org/apache/parquet/column/impl/ColumnReadStoreImpl/getPrimitiveConverter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/schema/GroupType/getType(java.lang.String)
org/apache/parquet/column/impl/ColumnReadStoreImpl/getPrimitiveConverter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/io/api/Converter/asGroupConverter()
org/apache/parquet/column/impl/ColumnReadStoreImpl/getPrimitiveConverter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/schema/Type/asGroupType()
org/apache/parquet/column/impl/ColumnReadStoreImpl/getColumnReader(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/impl/ColumnReadStoreImpl/newMemColumnReader(org.apache.parquet.column.ColumnDescriptor,org.apache.parquet.column.page.PageReader)
org/apache/parquet/column/impl/ColumnReadStoreImpl/getColumnReader(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/page/PageReadStore/getPageReader(org.apache.parquet.column.ColumnDescriptor)
org/apache/parquet/avro/AvroIndexedRecordConverter/AvroArrayConverter/end()#org/apache/parquet/avro/ParentValueContainer/add(java.lang.Object)
org/apache/parquet/hadoop/TestReadWriteEncodingStats/testReadWrite()#org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/getEncodingStats()
org/apache/parquet/hadoop/TestReadWriteEncodingStats/testReadWrite()#org/apache/parquet/hadoop/example/ExampleParquetWriter/builder(org.apache.parquet.hadoop.Path)
org/apache/parquet/hadoop/TestReadWriteEncodingStats/testReadWrite()#org/apache/parquet/column/EncodingStats/hasNonDictionaryEncodedPages()
org/apache/parquet/hadoop/TestReadWriteEncodingStats/testReadWrite()#org/apache/parquet/hadoop/ParquetFileReader/getRowGroups()
org/apache/parquet/hadoop/TestReadWriteEncodingStats/testReadWrite()#org/apache/parquet/hadoop/ParquetFileReader/open(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path)
org/apache/parquet/hadoop/TestReadWriteEncodingStats/testReadWrite()#java/util/List/size()
org/apache/parquet/hadoop/TestReadWriteEncodingStats/testReadWrite()#org/apache/parquet/hadoop/ParquetWriter/close()
org/apache/parquet/hadoop/TestReadWriteEncodingStats/testReadWrite()#org/apache/parquet/hadoop/TestReadWriteEncodingStats/writeData(org.apache.parquet.hadoop.ParquetWriter)
org/apache/parquet/hadoop/TestReadWriteEncodingStats/testReadWrite()#org/apache/parquet/column/EncodingStats/hasDictionaryEncodedPages()
org/apache/parquet/hadoop/TestReadWriteEncodingStats/testReadWrite()#java/util/List/get(int)
org/apache/parquet/hadoop/TestReadWriteEncodingStats/testReadWrite()#org/apache/parquet/column/EncodingStats/hasDictionaryPages()
org/apache/parquet/hadoop/TestReadWriteEncodingStats/testReadWrite()#org/apache/parquet/hadoop/metadata/BlockMetaData/getColumns()
org/apache/parquet/hadoop/TestReadWriteEncodingStats/testReadWrite()#java/io/File/delete()
org/apache/parquet/hadoop/TestReadWriteEncodingStats/testReadWrite()#java/io/File/toString()
org/apache/parquet/hadoop/TestReadWriteEncodingStats/writeData(org.apache.parquet.hadoop.ParquetWriter)#org/apache/parquet/example/data/Group/append(java.lang.String,java.lang.String)
org/apache/parquet/hadoop/TestReadWriteEncodingStats/writeData(org.apache.parquet.hadoop.ParquetWriter)#org/apache/parquet/example/data/Group/append(java.lang.String,int)
org/apache/parquet/hadoop/TestReadWriteEncodingStats/writeData(org.apache.parquet.hadoop.ParquetWriter)#java/lang/String/length()
org/apache/parquet/hadoop/TestReadWriteEncodingStats/writeData(org.apache.parquet.hadoop.ParquetWriter)#java/lang/String/substring(int,int)
org/apache/parquet/hadoop/TestReadWriteEncodingStats/writeData(org.apache.parquet.hadoop.ParquetWriter)#org/apache/parquet/hadoop/ParquetWriter/write(T)
org/apache/parquet/hadoop/TestReadWriteEncodingStats/writeData(org.apache.parquet.hadoop.ParquetWriter)#java/util/UUID/toString()
org/apache/parquet/hadoop/TestReadWriteEncodingStats/writeData(org.apache.parquet.hadoop.ParquetWriter)#org/apache/parquet/example/data/simple/SimpleGroupFactory/newGroup()
org/apache/parquet/hadoop/TestReadWriteEncodingStats/writeData(org.apache.parquet.hadoop.ParquetWriter)#org/apache/parquet/example/data/simple/SimpleGroupFactory/SimpleGroupFactory(org.apache.parquet.schema.MessageType)
org/apache/parquet/hadoop/TestReadWriteEncodingStats/writeData(org.apache.parquet.hadoop.ParquetWriter)#java/util/UUID/randomUUID()
org/apache/parquet/io/api/Binary/equals(byte[],int,int,java.nio.ByteBuffer,int,int)#java/nio/ByteBuffer/get(int)
org/apache/parquet/io/api/Binary/fromReusedByteArray(byte[])#org/apache/parquet/io/api/Binary/ByteArrayBackedBinary/ByteArrayBackedBinary(byte[],boolean)
org/apache/parquet/io/api/Binary/equals(java.nio.ByteBuffer,int,int,java.nio.ByteBuffer,int,int)#java/nio/ByteBuffer/get(int)
org/apache/parquet/io/api/Binary/hashCode(java.nio.ByteBuffer,int,int)#java/nio/ByteBuffer/get(int)
org/apache/parquet/io/api/Binary/fromConstantByteBuffer(java.nio.ByteBuffer,int,int)#org/apache/parquet/io/api/Binary/ByteBufferBackedBinary/ByteBufferBackedBinary(java.nio.ByteBuffer,int,int,boolean)
org/apache/parquet/io/api/Binary/fromReusedByteArray(byte[],int,int)#org/apache/parquet/io/api/Binary/ByteArraySliceBackedBinary/ByteArraySliceBackedBinary(byte[],int,int,boolean)
org/apache/parquet/io/api/Binary/fromConstantByteBuffer(java.nio.ByteBuffer)#org/apache/parquet/io/api/Binary/ByteBufferBackedBinary/ByteBufferBackedBinary(java.nio.ByteBuffer,boolean)
org/apache/parquet/io/api/Binary/equals(java.lang.Object)#org/apache/parquet/io/api/Binary/equals(org.apache.parquet.io.api.Binary)
org/apache/parquet/io/api/Binary/fromByteBuffer(java.nio.ByteBuffer)#org/apache/parquet/io/api/Binary/fromReusedByteBuffer(java.nio.ByteBuffer)
org/apache/parquet/io/api/Binary/toString()#org/apache/parquet/io/api/Binary/length()
org/apache/parquet/io/api/Binary/toString()#java/util/Arrays/toString(byte[])
org/apache/parquet/io/api/Binary/toString()#org/apache/parquet/io/api/Binary/getBytesUnsafe()
org/apache/parquet/io/api/Binary/fromConstantByteArray(byte[],int,int)#org/apache/parquet/io/api/Binary/ByteArraySliceBackedBinary/ByteArraySliceBackedBinary(byte[],int,int,boolean)
org/apache/parquet/io/api/Binary/compareTwoByteBuffers(java.nio.ByteBuffer,int,int,java.nio.ByteBuffer,int,int)#java/nio/ByteBuffer/get(int)
org/apache/parquet/io/api/Binary/fromByteArray(byte[],int,int)#org/apache/parquet/io/api/Binary/fromReusedByteArray(byte[],int,int)
org/apache/parquet/io/api/Binary/copy()#org/apache/parquet/io/api/Binary/getBytes()
org/apache/parquet/io/api/Binary/copy()#org/apache/parquet/io/api/Binary/fromConstantByteArray(byte[])
org/apache/parquet/io/api/Binary/fromConstantByteArray(byte[])#org/apache/parquet/io/api/Binary/ByteArrayBackedBinary/ByteArrayBackedBinary(byte[],boolean)
org/apache/parquet/io/api/Binary/fromString(java.lang.String)#org/apache/parquet/io/api/Binary/FromStringBinary/FromStringBinary(java.lang.String)
org/apache/parquet/io/api/Binary/fromReusedByteBuffer(java.nio.ByteBuffer,int,int)#org/apache/parquet/io/api/Binary/ByteBufferBackedBinary/ByteBufferBackedBinary(java.nio.ByteBuffer,int,int,boolean)
org/apache/parquet/io/api/Binary/fromCharSequence(java.lang.CharSequence)#org/apache/parquet/io/api/Binary/FromCharSequenceBinary/FromCharSequenceBinary(java.lang.CharSequence)
org/apache/parquet/io/api/Binary/compareByteArrayToByteBuffer(byte[],int,int,java.nio.ByteBuffer,int,int)#java/nio/ByteBuffer/get(int)
org/apache/parquet/io/api/Binary/fromByteArray(byte[])#org/apache/parquet/io/api/Binary/fromReusedByteArray(byte[])
org/apache/parquet/io/api/Binary/fromReusedByteBuffer(java.nio.ByteBuffer)#org/apache/parquet/io/api/Binary/ByteBufferBackedBinary/ByteBufferBackedBinary(java.nio.ByteBuffer,boolean)
org/apache/parquet/io/api/Binary/compareByteBufferToByteArray(java.nio.ByteBuffer,int,int,byte[],int,int)#org/apache/parquet/io/api/Binary/compareByteArrayToByteBuffer(byte[],int,int,java.nio.ByteBuffer,int,int)
org/apache/parquet/tools/command/DumpCommand/dump(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.column.impl.ColumnReadStoreImpl,org.apache.parquet.column.ColumnDescriptor,long,long,long)#org/apache/parquet/column/ColumnReader/getBinary()
org/apache/parquet/tools/command/DumpCommand/dump(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.column.impl.ColumnReadStoreImpl,org.apache.parquet.column.ColumnDescriptor,long,long,long)#org/apache/parquet/tools/command/DumpCommand/binaryToBigInteger(org.apache.parquet.io.api.Binary)
org/apache/parquet/tools/command/DumpCommand/dump(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.column.impl.ColumnReadStoreImpl,org.apache.parquet.column.ColumnDescriptor,long,long,long)#org/apache/parquet/tools/util/PrettyPrintWriter/format(java.lang.String,java.lang.Object[])
org/apache/parquet/tools/command/DumpCommand/dump(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.column.impl.ColumnReadStoreImpl,org.apache.parquet.column.ColumnDescriptor,long,long,long)#org/apache/parquet/column/ColumnReader/getFloat()
org/apache/parquet/tools/command/DumpCommand/dump(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.column.impl.ColumnReadStoreImpl,org.apache.parquet.column.ColumnDescriptor,long,long,long)#org/apache/parquet/column/ColumnReader/getInteger()
org/apache/parquet/tools/command/DumpCommand/dump(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.column.impl.ColumnReadStoreImpl,org.apache.parquet.column.ColumnDescriptor,long,long,long)#org/apache/parquet/column/ColumnReader/getDouble()
org/apache/parquet/tools/command/DumpCommand/dump(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.column.impl.ColumnReadStoreImpl,org.apache.parquet.column.ColumnDescriptor,long,long,long)#org/apache/parquet/column/ColumnReader/getTotalValueCount()
org/apache/parquet/tools/command/DumpCommand/dump(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.column.impl.ColumnReadStoreImpl,org.apache.parquet.column.ColumnDescriptor,long,long,long)#org/apache/parquet/column/ColumnReader/getCurrentDefinitionLevel()
org/apache/parquet/tools/command/DumpCommand/dump(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.column.impl.ColumnReadStoreImpl,org.apache.parquet.column.ColumnDescriptor,long,long,long)#org/apache/parquet/tools/command/DumpCommand/binaryToString(org.apache.parquet.io.api.Binary)
org/apache/parquet/tools/command/DumpCommand/dump(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.column.impl.ColumnReadStoreImpl,org.apache.parquet.column.ColumnDescriptor,long,long,long)#org/apache/parquet/column/ColumnDescriptor/getType()
org/apache/parquet/tools/command/DumpCommand/dump(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.column.impl.ColumnReadStoreImpl,org.apache.parquet.column.ColumnDescriptor,long,long,long)#org/apache/parquet/column/ColumnReader/consume()
org/apache/parquet/tools/command/DumpCommand/dump(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.column.impl.ColumnReadStoreImpl,org.apache.parquet.column.ColumnDescriptor,long,long,long)#org/apache/parquet/column/ColumnDescriptor/getMaxDefinitionLevel()
org/apache/parquet/tools/command/DumpCommand/dump(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.column.impl.ColumnReadStoreImpl,org.apache.parquet.column.ColumnDescriptor,long,long,long)#org/apache/parquet/column/impl/ColumnReadStoreImpl/getColumnReader(org.apache.parquet.column.ColumnDescriptor)
org/apache/parquet/tools/command/DumpCommand/dump(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.column.impl.ColumnReadStoreImpl,org.apache.parquet.column.ColumnDescriptor,long,long,long)#org/apache/parquet/column/ColumnReader/getBoolean()
org/apache/parquet/tools/command/DumpCommand/dump(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.column.impl.ColumnReadStoreImpl,org.apache.parquet.column.ColumnDescriptor,long,long,long)#org/apache/parquet/column/ColumnReader/getCurrentRepetitionLevel()
org/apache/parquet/tools/command/DumpCommand/dump(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.column.impl.ColumnReadStoreImpl,org.apache.parquet.column.ColumnDescriptor,long,long,long)#org/apache/parquet/tools/util/PrettyPrintWriter/println()
org/apache/parquet/tools/command/DumpCommand/dump(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.column.impl.ColumnReadStoreImpl,org.apache.parquet.column.ColumnDescriptor,long,long,long)#org/apache/parquet/column/ColumnReader/getLong()
org/apache/parquet/tools/command/DumpCommand/dump(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.column.page.PageReadStore,org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/page/PageReader/readPage()
org/apache/parquet/tools/command/DumpCommand/dump(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.column.page.PageReadStore,org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/page/Page/getUncompressedSize()
org/apache/parquet/tools/command/DumpCommand/dump(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.column.page.PageReadStore,org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/tools/command/DumpCommand/dump(org/apache/parquet/tools/util/PrettyPrintWriter,org/apache/parquet/column/page/PageReadStore,org/apache/parquet/column/ColumnDescriptor)/$anonymous1/()
org/apache/parquet/tools/command/DumpCommand/dump(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.column.page.PageReadStore,org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/page/PageReadStore/getPageReader(org.apache.parquet.column.ColumnDescriptor)
org/apache/parquet/tools/command/DumpCommand/dump(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.column.page.PageReadStore,org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/page/PageReader/getTotalValueCount()
org/apache/parquet/tools/command/DumpCommand/dump(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.column.page.PageReadStore,org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/tools/util/PrettyPrintWriter/format(java.lang.String,java.lang.Object[])
org/apache/parquet/tools/command/DumpCommand/dump(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.column.page.PageReadStore,org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/tools/util/PrettyPrintWriter/rule(char)
org/apache/parquet/tools/command/DumpCommand/dump(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.column.page.PageReadStore,org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/page/DataPage/getValueCount()
org/apache/parquet/tools/command/DumpCommand/dump(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.column.page.PageReadStore,org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/page/DataPage/accept(org.apache.parquet.column.page.DataPage.Visitor)
org/apache/parquet/tools/command/DumpCommand/dump(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.column.page.PageReadStore,org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/page/DictionaryPage/getDictionarySize()
org/apache/parquet/tools/command/DumpCommand/dump(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.column.page.PageReadStore,org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/page/PageReader/readDictionaryPage()
org/apache/parquet/tools/command/DumpCommand/dump(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.column.page.PageReadStore,org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/ColumnDescriptor/getMaxDefinitionLevel()
org/apache/parquet/tools/command/DumpCommand/dump(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.column.page.PageReadStore,org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/ColumnDescriptor/getMaxRepetitionLevel()
org/apache/parquet/tools/command/DumpCommand/dump(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.column.page.PageReadStore,org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/tools/util/PrettyPrintWriter/println()
org/apache/parquet/tools/command/DumpCommand/dump(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.column.page.PageReadStore,org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/ColumnDescriptor/getPath()
org/apache/parquet/tools/command/DumpCommand/dump(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.column.page.PageReadStore,org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/page/DictionaryPage/getEncoding()
org/apache/parquet/tools/command/DumpCommand/execute(org.apache.parquet.tools.command.CommandLine)#org/apache/parquet/tools/command/ArgsOnlyCommand/execute(org.apache.parquet.tools.command.CommandLine)
org/apache/parquet/tools/command/DumpCommand/execute(org.apache.parquet.tools.command.CommandLine)#org/apache/parquet/hadoop/metadata/ParquetMetadata/getFileMetaData()
org/apache/parquet/tools/command/DumpCommand/execute(org.apache.parquet.tools.command.CommandLine)#java/util/Arrays/asList(T[])
org/apache/parquet/tools/command/DumpCommand/execute(org.apache.parquet.tools.command.CommandLine)#org/apache/parquet/hadoop/metadata/FileMetaData/getSchema()
org/apache/parquet/tools/command/DumpCommand/execute(org.apache.parquet.tools.command.CommandLine)#org/apache/parquet/tools/command/DumpCommand/prettyPrintWriter(boolean)
org/apache/parquet/tools/command/DumpCommand/execute(org.apache.parquet.tools.command.CommandLine)#org/apache/parquet/hadoop/ParquetFileReader/readFooter(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path,org.apache.parquet.format.converter.ParquetMetadataConverter.MetadataFilter)
org/apache/parquet/tools/command/DumpCommand/execute(org.apache.parquet.tools.command.CommandLine)#org/apache/parquet/tools/command/DumpCommand/dump(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.hadoop.metadata.ParquetMetadata,org.apache.parquet.schema.MessageType,org.apache.parquet.hadoop.Path,boolean,boolean,java.util.Set)
org/apache/parquet/tools/command/DumpCommand/execute(org.apache.parquet.tools.command.CommandLine)#java/util/HashSet/HashSet(java.util.Collection)
org/apache/parquet/tools/command/DumpCommand/prettyPrintWriter(boolean)#org/apache/parquet/tools/util/PrettyPrintWriter/Builder/withAutoCrop()
org/apache/parquet/tools/command/DumpCommand/prettyPrintWriter(boolean)#org/apache/parquet/tools/util/PrettyPrintWriter/Builder/withMaxBufferedLines(long)
org/apache/parquet/tools/command/DumpCommand/prettyPrintWriter(boolean)#org/apache/parquet/tools/util/PrettyPrintWriter/Builder/withWhitespaceHandler(org.apache.parquet.tools.util.PrettyPrintWriter.WhiteSpaceHandler)
org/apache/parquet/tools/command/DumpCommand/prettyPrintWriter(boolean)#org/apache/parquet/tools/util/PrettyPrintWriter/Builder/withAutoColumn()
org/apache/parquet/tools/command/DumpCommand/prettyPrintWriter(boolean)#org/apache/parquet/tools/util/PrettyPrintWriter/Builder/withColumnPadding(int)
org/apache/parquet/tools/command/DumpCommand/prettyPrintWriter(boolean)#org/apache/parquet/tools/util/PrettyPrintWriter/stdoutPrettyPrinter()
org/apache/parquet/tools/command/DumpCommand/prettyPrintWriter(boolean)#org/apache/parquet/tools/util/PrettyPrintWriter/Builder/build()
org/apache/parquet/tools/command/DumpCommand/prettyPrintWriter(boolean)#org/apache/parquet/tools/util/PrettyPrintWriter/Builder/withFlushOnTab()
org/apache/parquet/tools/command/DumpCommand/binaryToBigInteger(org.apache.parquet.io.api.Binary)#java/math/BigInteger/BigInteger(byte[])
org/apache/parquet/tools/command/DumpCommand/binaryToBigInteger(org.apache.parquet.io.api.Binary)#org/apache/parquet/io/api/Binary/getBytesUnsafe()
org/apache/parquet/tools/command/DumpCommand/dump(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.hadoop.metadata.ParquetMetadata,org.apache.parquet.schema.MessageType,org.apache.parquet.hadoop.Path,boolean,boolean,java.util.Set)#java/util/ArrayList/ArrayList()
org/apache/parquet/tools/command/DumpCommand/dump(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.hadoop.metadata.ParquetMetadata,org.apache.parquet.schema.MessageType,org.apache.parquet.hadoop.Path,boolean,boolean,java.util.Set)#org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/getPath()
org/apache/parquet/tools/command/DumpCommand/dump(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.hadoop.metadata.ParquetMetadata,org.apache.parquet.schema.MessageType,org.apache.parquet.hadoop.Path,boolean,boolean,java.util.Set)#java/util/Collections/singletonList(T)
org/apache/parquet/tools/command/DumpCommand/dump(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.hadoop.metadata.ParquetMetadata,org.apache.parquet.schema.MessageType,org.apache.parquet.hadoop.Path,boolean,boolean,java.util.Set)#java/util/List/size()
org/apache/parquet/tools/command/DumpCommand/dump(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.hadoop.metadata.ParquetMetadata,org.apache.parquet.schema.MessageType,org.apache.parquet.hadoop.Path,boolean,boolean,java.util.Set)#org/apache/parquet/tools/command/DumpCommand/DumpGroupConverter/DumpGroupConverter()
org/apache/parquet/tools/command/DumpCommand/dump(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.hadoop.metadata.ParquetMetadata,org.apache.parquet.schema.MessageType,org.apache.parquet.hadoop.Path,boolean,boolean,java.util.Set)#org/apache/parquet/column/impl/ColumnReadStoreImpl/ColumnReadStoreImpl(org.apache.parquet.column.page.PageReadStore,org.apache.parquet.io.api.GroupConverter,org.apache.parquet.schema.MessageType,java.lang.String)
org/apache/parquet/tools/command/DumpCommand/dump(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.hadoop.metadata.ParquetMetadata,org.apache.parquet.schema.MessageType,org.apache.parquet.hadoop.Path,boolean,boolean,java.util.Set)#org/apache/parquet/tools/util/PrettyPrintWriter/decrementTabLevel()
org/apache/parquet/tools/command/DumpCommand/dump(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.hadoop.metadata.ParquetMetadata,org.apache.parquet.schema.MessageType,org.apache.parquet.hadoop.Path,boolean,boolean,java.util.Set)#java/util/List/add(E)
org/apache/parquet/tools/command/DumpCommand/dump(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.hadoop.metadata.ParquetMetadata,org.apache.parquet.schema.MessageType,org.apache.parquet.hadoop.Path,boolean,boolean,java.util.Set)#org/apache/parquet/hadoop/ParquetFileReader/ParquetFileReader(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.metadata.FileMetaData,org.apache.parquet.hadoop.Path,java.util.List,java.util.List)
org/apache/parquet/tools/command/DumpCommand/dump(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.hadoop.metadata.ParquetMetadata,org.apache.parquet.schema.MessageType,org.apache.parquet.hadoop.Path,boolean,boolean,java.util.Set)#org/apache/parquet/column/page/PageReadStore/getRowCount()
org/apache/parquet/tools/command/DumpCommand/dump(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.hadoop.metadata.ParquetMetadata,org.apache.parquet.schema.MessageType,org.apache.parquet.hadoop.Path,boolean,boolean,java.util.Set)#org/apache/parquet/tools/util/PrettyPrintWriter/println()
org/apache/parquet/tools/command/DumpCommand/dump(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.hadoop.metadata.ParquetMetadata,org.apache.parquet.schema.MessageType,org.apache.parquet.hadoop.Path,boolean,boolean,java.util.Set)#org/apache/parquet/hadoop/ParquetFileReader/close()
org/apache/parquet/tools/command/DumpCommand/dump(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.hadoop.metadata.ParquetMetadata,org.apache.parquet.schema.MessageType,org.apache.parquet.hadoop.Path,boolean,boolean,java.util.Set)#org/apache/parquet/hadoop/metadata/FileMetaData/getCreatedBy()
org/apache/parquet/tools/command/DumpCommand/dump(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.hadoop.metadata.ParquetMetadata,org.apache.parquet.schema.MessageType,org.apache.parquet.hadoop.Path,boolean,boolean,java.util.Set)#org/apache/parquet/tools/util/PrettyPrintWriter/flushColumns()
org/apache/parquet/tools/command/DumpCommand/dump(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.hadoop.metadata.ParquetMetadata,org.apache.parquet.schema.MessageType,org.apache.parquet.hadoop.Path,boolean,boolean,java.util.Set)#org/apache/parquet/hadoop/metadata/ParquetMetadata/getBlocks()
org/apache/parquet/tools/command/DumpCommand/dump(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.hadoop.metadata.ParquetMetadata,org.apache.parquet.schema.MessageType,org.apache.parquet.hadoop.Path,boolean,boolean,java.util.Set)#org/apache/parquet/tools/util/MetadataUtils/showDetails(org.apache.parquet.tools.util.PrettyPrintWriter,java.util.List)
org/apache/parquet/tools/command/DumpCommand/dump(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.hadoop.metadata.ParquetMetadata,org.apache.parquet.schema.MessageType,org.apache.parquet.hadoop.Path,boolean,boolean,java.util.Set)#org/apache/parquet/hadoop/metadata/ParquetMetadata/getFileMetaData()
org/apache/parquet/tools/command/DumpCommand/dump(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.hadoop.metadata.ParquetMetadata,org.apache.parquet.schema.MessageType,org.apache.parquet.hadoop.Path,boolean,boolean,java.util.Set)#org/apache/parquet/column/ColumnDescriptor/getType()
org/apache/parquet/tools/command/DumpCommand/dump(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.hadoop.metadata.ParquetMetadata,org.apache.parquet.schema.MessageType,org.apache.parquet.hadoop.Path,boolean,boolean,java.util.Set)#org/apache/parquet/tools/command/DumpCommand/dump(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.column.impl.ColumnReadStoreImpl,org.apache.parquet.column.ColumnDescriptor,long,long,long)
org/apache/parquet/tools/command/DumpCommand/dump(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.hadoop.metadata.ParquetMetadata,org.apache.parquet.schema.MessageType,org.apache.parquet.hadoop.Path,boolean,boolean,java.util.Set)#org/apache/parquet/tools/command/DumpCommand/dump(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.column.page.PageReadStore,org.apache.parquet.column.ColumnDescriptor)
org/apache/parquet/tools/command/DumpCommand/dump(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.hadoop.metadata.ParquetMetadata,org.apache.parquet.schema.MessageType,org.apache.parquet.hadoop.Path,boolean,boolean,java.util.Set)#org/apache/parquet/tools/util/PrettyPrintWriter/format(java.lang.String,java.lang.Object[])
org/apache/parquet/tools/command/DumpCommand/dump(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.hadoop.metadata.ParquetMetadata,org.apache.parquet.schema.MessageType,org.apache.parquet.hadoop.Path,boolean,boolean,java.util.Set)#org/apache/parquet/schema/MessageType/getColumns()
org/apache/parquet/tools/command/DumpCommand/dump(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.hadoop.metadata.ParquetMetadata,org.apache.parquet.schema.MessageType,org.apache.parquet.hadoop.Path,boolean,boolean,java.util.Set)#org/apache/parquet/tools/util/PrettyPrintWriter/rule(char)
org/apache/parquet/tools/command/DumpCommand/dump(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.hadoop.metadata.ParquetMetadata,org.apache.parquet.schema.MessageType,org.apache.parquet.hadoop.Path,boolean,boolean,java.util.Set)#org/apache/parquet/hadoop/metadata/ColumnPath/toArray()
org/apache/parquet/tools/command/DumpCommand/dump(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.hadoop.metadata.ParquetMetadata,org.apache.parquet.schema.MessageType,org.apache.parquet.hadoop.Path,boolean,boolean,java.util.Set)#org/apache/parquet/tools/util/PrettyPrintWriter/incrementTabLevel()
org/apache/parquet/tools/command/DumpCommand/dump(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.hadoop.metadata.ParquetMetadata,org.apache.parquet.schema.MessageType,org.apache.parquet.hadoop.Path,boolean,boolean,java.util.Set)#org/apache/parquet/column/ColumnDescriptor/getPath()
org/apache/parquet/tools/command/DumpCommand/dump(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.hadoop.metadata.ParquetMetadata,org.apache.parquet.schema.MessageType,org.apache.parquet.hadoop.Path,boolean,boolean,java.util.Set)#java/util/Set/contains(java.lang.Object)
org/apache/parquet/tools/command/DumpCommand/dump(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.hadoop.metadata.ParquetMetadata,org.apache.parquet.schema.MessageType,org.apache.parquet.hadoop.Path,boolean,boolean,java.util.Set)#org/apache/parquet/hadoop/ParquetFileReader/readNextRowGroup()
org/apache/parquet/tools/command/DumpCommand/dump(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.hadoop.metadata.ParquetMetadata,org.apache.parquet.schema.MessageType,org.apache.parquet.hadoop.Path,boolean,boolean,java.util.Set)#org/apache/parquet/hadoop/metadata/BlockMetaData/getColumns()
org/apache/parquet/tools/command/DumpCommand/binaryToString(org.apache.parquet.io.api.Binary)#org/apache/parquet/io/api/Binary/toByteBuffer()
org/apache/parquet/tools/command/DumpCommand/binaryToString(org.apache.parquet.io.api.Binary)#java/nio/charset/CharsetDecoder/decode(java.nio.ByteBuffer)
org/apache/parquet/tools/command/DumpCommand/binaryToString(org.apache.parquet.io.api.Binary)#java/nio/CharBuffer/toString()
org/apache/parquet/tools/command/DumpCommand/binaryToString(org.apache.parquet.io.api.Binary)#org/apache/parquet/io/api/Binary/getBytesUnsafe()
org/apache/parquet/avro/AvroWriteSupport/writeRecordFields(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,java.lang.Object)#org/apache/parquet/schema/Type/getName()
org/apache/parquet/avro/AvroWriteSupport/writeRecordFields(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,java.lang.Object)#org/apache/parquet/io/api/RecordConsumer/startField(java.lang.String,int)
org/apache/parquet/avro/AvroWriteSupport/writeRecordFields(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,java.lang.Object)#org/apache/parquet/io/api/RecordConsumer/endField(java.lang.String,int)
org/apache/parquet/avro/AvroWriteSupport/writeRecordFields(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,java.lang.Object)#org/apache/parquet/schema/Type/isRepetition(org.apache.parquet.schema.Type.Repetition)
org/apache/parquet/avro/AvroWriteSupport/writeRecordFields(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,java.lang.Object)#org/apache/parquet/avro/AvroWriteSupport/writeValue(org.apache.parquet.schema.Type,org.apache.parquet.pig.Schema,java.lang.Object)
org/apache/parquet/avro/AvroWriteSupport/writeRecordFields(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,java.lang.Object)#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/apache/parquet/avro/AvroWriteSupport/writeRecordFields(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,java.lang.Object)#org/apache/parquet/schema/GroupType/getFields()
org/apache/parquet/avro/AvroWriteSupport/writeRecordFields(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,java.lang.Object)#java/util/List/get(int)
org/apache/parquet/avro/AvroWriteSupport/writeRecord(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,java.lang.Object)#org/apache/parquet/avro/AvroWriteSupport/writeRecordFields(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,java.lang.Object)
org/apache/parquet/avro/AvroWriteSupport/writeRecord(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,java.lang.Object)#org/apache/parquet/io/api/RecordConsumer/startGroup()
org/apache/parquet/avro/AvroWriteSupport/writeRecord(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,java.lang.Object)#org/apache/parquet/io/api/RecordConsumer/endGroup()
org/apache/parquet/avro/AvroWriteSupport/writeValueWithoutConversion(org.apache.parquet.schema.Type,org.apache.parquet.pig.Schema,java.lang.Object)#java/lang/Object/toString()
org/apache/parquet/avro/AvroWriteSupport/writeValueWithoutConversion(org.apache.parquet.schema.Type,org.apache.parquet.pig.Schema,java.lang.Object)#org/apache/parquet/io/api/Binary/fromReusedByteArray(byte[])
org/apache/parquet/avro/AvroWriteSupport/writeValueWithoutConversion(org.apache.parquet.schema.Type,org.apache.parquet.pig.Schema,java.lang.Object)#java/lang/Number/doubleValue()
org/apache/parquet/avro/AvroWriteSupport/writeValueWithoutConversion(org.apache.parquet.schema.Type,org.apache.parquet.pig.Schema,java.lang.Object)#org/apache/parquet/schema/Type/asGroupType()
org/apache/parquet/avro/AvroWriteSupport/writeValueWithoutConversion(org.apache.parquet.schema.Type,org.apache.parquet.pig.Schema,java.lang.Object)#org/apache/parquet/avro/AvroWriteSupport/writeRecord(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,java.lang.Object)
org/apache/parquet/avro/AvroWriteSupport/writeValueWithoutConversion(org.apache.parquet.schema.Type,org.apache.parquet.pig.Schema,java.lang.Object)#org/apache/parquet/avro/AvroWriteSupport/writeUnion(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,java.lang.Object)
org/apache/parquet/avro/AvroWriteSupport/writeValueWithoutConversion(org.apache.parquet.schema.Type,org.apache.parquet.pig.Schema,java.lang.Object)#java/lang/Number/intValue()
org/apache/parquet/avro/AvroWriteSupport/writeValueWithoutConversion(org.apache.parquet.schema.Type,org.apache.parquet.pig.Schema,java.lang.Object)#org/apache/parquet/io/api/Binary/fromString(java.lang.String)
org/apache/parquet/avro/AvroWriteSupport/writeValueWithoutConversion(org.apache.parquet.schema.Type,org.apache.parquet.pig.Schema,java.lang.Object)#org/apache/parquet/io/api/RecordConsumer/addBinary(org.apache.parquet.io.api.Binary)
org/apache/parquet/avro/AvroWriteSupport/writeValueWithoutConversion(org.apache.parquet.schema.Type,org.apache.parquet.pig.Schema,java.lang.Object)#org/apache/parquet/avro/AvroWriteSupport/fromAvroString(java.lang.Object)
org/apache/parquet/avro/AvroWriteSupport/writeValueWithoutConversion(org.apache.parquet.schema.Type,org.apache.parquet.pig.Schema,java.lang.Object)#org/apache/parquet/io/api/RecordConsumer/addFloat(float)
org/apache/parquet/avro/AvroWriteSupport/writeValueWithoutConversion(org.apache.parquet.schema.Type,org.apache.parquet.pig.Schema,java.lang.Object)#org/apache/parquet/io/api/Binary/fromReusedByteBuffer(java.nio.ByteBuffer)
org/apache/parquet/avro/AvroWriteSupport/writeValueWithoutConversion(org.apache.parquet.schema.Type,org.apache.parquet.pig.Schema,java.lang.Object)#org/apache/parquet/avro/AvroWriteSupport/writeMap(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,java.util.Map)
org/apache/parquet/avro/AvroWriteSupport/writeValueWithoutConversion(org.apache.parquet.schema.Type,org.apache.parquet.pig.Schema,java.lang.Object)#java/lang/Number/longValue()
org/apache/parquet/avro/AvroWriteSupport/writeValueWithoutConversion(org.apache.parquet.schema.Type,org.apache.parquet.pig.Schema,java.lang.Object)#org/apache/parquet/avro/AvroWriteSupport/ListWriter/writeList(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,java.lang.Object)
org/apache/parquet/avro/AvroWriteSupport/writeValueWithoutConversion(org.apache.parquet.schema.Type,org.apache.parquet.pig.Schema,java.lang.Object)#org/apache/parquet/io/api/RecordConsumer/addLong(long)
org/apache/parquet/avro/AvroWriteSupport/writeValueWithoutConversion(org.apache.parquet.schema.Type,org.apache.parquet.pig.Schema,java.lang.Object)#org/apache/parquet/io/api/RecordConsumer/addDouble(double)
org/apache/parquet/avro/AvroWriteSupport/writeValueWithoutConversion(org.apache.parquet.schema.Type,org.apache.parquet.pig.Schema,java.lang.Object)#org/apache/parquet/io/api/RecordConsumer/addBoolean(boolean)
org/apache/parquet/avro/AvroWriteSupport/writeValueWithoutConversion(org.apache.parquet.schema.Type,org.apache.parquet.pig.Schema,java.lang.Object)#java/lang/Number/floatValue()
org/apache/parquet/avro/AvroWriteSupport/writeValueWithoutConversion(org.apache.parquet.schema.Type,org.apache.parquet.pig.Schema,java.lang.Object)#org/apache/parquet/io/api/RecordConsumer/addInteger(int)
org/apache/parquet/avro/AvroWriteSupport/convert(org.apache.parquet.pig.Schema,org.apache.parquet.avro.LogicalType,org.apache.parquet.avro.Conversion,java.lang.Object)#java/lang/Class/cast(java.lang.Object)
org/apache/parquet/avro/AvroWriteSupport/setAvroDataSupplier(org.apache.parquet.hadoop.Configuration,java.lang.Class)#java/lang/Class/getName()
org/apache/parquet/avro/AvroWriteSupport/writeUnion(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,java.lang.Object)#org/apache/parquet/io/api/RecordConsumer/startField(java.lang.String,int)
org/apache/parquet/avro/AvroWriteSupport/writeUnion(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,java.lang.Object)#org/apache/parquet/schema/Type/asGroupType()
org/apache/parquet/avro/AvroWriteSupport/writeUnion(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,java.lang.Object)#org/apache/parquet/io/api/RecordConsumer/endField(java.lang.String,int)
org/apache/parquet/avro/AvroWriteSupport/writeUnion(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,java.lang.Object)#org/apache/parquet/io/api/RecordConsumer/endGroup()
org/apache/parquet/avro/AvroWriteSupport/writeUnion(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,java.lang.Object)#org/apache/parquet/schema/GroupType/getType(int)
org/apache/parquet/avro/AvroWriteSupport/writeUnion(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,java.lang.Object)#org/apache/parquet/io/api/RecordConsumer/startGroup()
org/apache/parquet/avro/AvroWriteSupport/writeUnion(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,java.lang.Object)#org/apache/parquet/avro/AvroWriteSupport/writeValue(org.apache.parquet.schema.Type,org.apache.parquet.pig.Schema,java.lang.Object)
org/apache/parquet/avro/AvroWriteSupport/writeValue(org.apache.parquet.schema.Type,org.apache.parquet.pig.Schema,java.lang.Object)#org/apache/parquet/avro/AvroWriteSupport/convert(org.apache.parquet.pig.Schema,org.apache.parquet.avro.LogicalType,org.apache.parquet.avro.Conversion,java.lang.Object)
org/apache/parquet/avro/AvroWriteSupport/writeValue(org.apache.parquet.schema.Type,org.apache.parquet.pig.Schema,java.lang.Object)#org/apache/parquet/avro/AvroSchemaConverter/getNonNull(org.apache.parquet.pig.Schema)
org/apache/parquet/avro/AvroWriteSupport/writeValue(org.apache.parquet.schema.Type,org.apache.parquet.pig.Schema,java.lang.Object)#java/lang/Object/getClass()
org/apache/parquet/avro/AvroWriteSupport/writeValue(org.apache.parquet.schema.Type,org.apache.parquet.pig.Schema,java.lang.Object)#org/apache/parquet/avro/AvroWriteSupport/writeValueWithoutConversion(org.apache.parquet.schema.Type,org.apache.parquet.pig.Schema,java.lang.Object)
org/apache/parquet/avro/AvroWriteSupport/fromAvroString(java.lang.Object)#org/apache/parquet/io/api/Binary/fromReusedByteArray(byte[],int,int)
org/apache/parquet/avro/AvroWriteSupport/fromAvroString(java.lang.Object)#org/apache/parquet/io/api/Binary/fromCharSequence(java.lang.CharSequence)
org/apache/parquet/avro/AvroWriteSupport/write(org.apache.parquet.avro.IndexedRecord)#org/apache/parquet/avro/AvroWriteSupport/write(T)
org/apache/parquet/avro/AvroWriteSupport/write(T)#org/apache/parquet/io/api/RecordConsumer/endMessage()
org/apache/parquet/avro/AvroWriteSupport/write(T)#org/apache/parquet/avro/AvroWriteSupport/writeRecordFields(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,java.lang.Object)
org/apache/parquet/avro/AvroWriteSupport/write(T)#org/apache/parquet/avro/AvroWriteSupport/convert(org.apache.parquet.pig.Schema,org.apache.parquet.avro.LogicalType,org.apache.parquet.avro.Conversion,java.lang.Object)
org/apache/parquet/avro/AvroWriteSupport/write(T)#java/lang/Object/getClass()
org/apache/parquet/avro/AvroWriteSupport/write(T)#org/apache/parquet/io/api/RecordConsumer/startMessage()
org/apache/parquet/avro/AvroWriteSupport/writeMap(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,java.util.Map)#java/util/Map/Entry/getValue()
org/apache/parquet/avro/AvroWriteSupport/writeMap(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,java.util.Map)#org/apache/parquet/io/api/RecordConsumer/startField(java.lang.String,int)
org/apache/parquet/avro/AvroWriteSupport/writeMap(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,java.util.Map)#org/apache/parquet/schema/Type/asGroupType()
org/apache/parquet/avro/AvroWriteSupport/writeMap(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,java.util.Map)#org/apache/parquet/schema/Type/isRepetition(org.apache.parquet.schema.Type.Repetition)
org/apache/parquet/avro/AvroWriteSupport/writeMap(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,java.util.Map)#java/util/Map/Entry/getKey()
org/apache/parquet/avro/AvroWriteSupport/writeMap(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,java.util.Map)#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/apache/parquet/avro/AvroWriteSupport/writeMap(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,java.util.Map)#org/apache/parquet/io/api/RecordConsumer/endGroup()
org/apache/parquet/avro/AvroWriteSupport/writeMap(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,java.util.Map)#java/util/Map/entrySet()
org/apache/parquet/avro/AvroWriteSupport/writeMap(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,java.util.Map)#org/apache/parquet/schema/GroupType/getType(int)
org/apache/parquet/avro/AvroWriteSupport/writeMap(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,java.util.Map)#java/util/Map/size()
org/apache/parquet/avro/AvroWriteSupport/writeMap(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,java.util.Map)#org/apache/parquet/io/api/RecordConsumer/endField(java.lang.String,int)
org/apache/parquet/avro/AvroWriteSupport/writeMap(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,java.util.Map)#org/apache/parquet/io/api/RecordConsumer/startGroup()
org/apache/parquet/avro/AvroWriteSupport/writeMap(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,java.util.Map)#org/apache/parquet/avro/AvroWriteSupport/writeValue(org.apache.parquet.schema.Type,org.apache.parquet.pig.Schema,java.lang.Object)
org/apache/parquet/avro/AvroWriteSupport/init(org.apache.parquet.hadoop.Configuration)#org/apache/parquet/hadoop/api/WriteSupport/WriteContext/WriteContext(org.apache.parquet.schema.MessageType,java.util.Map)
org/apache/parquet/avro/AvroWriteSupport/init(org.apache.parquet.hadoop.Configuration)#org/apache/parquet/avro/AvroSchemaConverter/AvroSchemaConverter()
org/apache/parquet/avro/AvroWriteSupport/init(org.apache.parquet.hadoop.Configuration)#org/apache/parquet/avro/AvroWriteSupport/getDataModel(org.apache.parquet.hadoop.Configuration)
org/apache/parquet/avro/AvroWriteSupport/init(org.apache.parquet.hadoop.Configuration)#java/util/HashMap/HashMap()
org/apache/parquet/avro/AvroWriteSupport/init(org.apache.parquet.hadoop.Configuration)#org/apache/parquet/avro/AvroSchemaConverter/convert(org.apache.parquet.pig.Schema)
org/apache/parquet/avro/AvroWriteSupport/init(org.apache.parquet.hadoop.Configuration)#java/util/Map/put(K,V)
org/apache/parquet/avro/AvroWriteSupport/init(org.apache.parquet.hadoop.Configuration)#org/apache/parquet/avro/AvroWriteSupport/TwoLevelListWriter/TwoLevelListWriter()
org/apache/parquet/avro/AvroWriteSupport/init(org.apache.parquet.hadoop.Configuration)#org/apache/parquet/avro/AvroWriteSupport/ThreeLevelListWriter/ThreeLevelListWriter()
org/apache/hadoop/hive/ql/io/parquet/convert/DataWritableRecordConverter/getCurrentRecord()#org/apache/hadoop/hive/ql/io/parquet/convert/DataWritableGroupConverter/getCurrentArray()
org/apache/parquet/thrift/struct/CompatibilityCheckerTest/verifyCompatible(java.lang.Class,java.lang.Class,boolean)#org/apache/parquet/thrift/struct/CompatibilityReport/isCompatible()
org/apache/parquet/thrift/struct/CompatibilityCheckerTest/verifyCompatible(java.lang.Class,java.lang.Class,boolean)#org/apache/parquet/thrift/struct/CompatibilityCheckerTest/getCompatibilityReport(java.lang.Class,java.lang.Class)
org/apache/parquet/thrift/struct/CompatibilityCheckerTest/testAddOptionalField()#org/apache/parquet/thrift/struct/CompatibilityCheckerTest/verifyCompatible(java.lang.Class,java.lang.Class,boolean)
org/apache/parquet/thrift/struct/CompatibilityCheckerTest/testList()#org/apache/parquet/thrift/struct/CompatibilityCheckerTest/verifyCompatible(java.lang.Class,java.lang.Class,boolean)
org/apache/parquet/thrift/struct/CompatibilityCheckerTest/struct(java.lang.Class)#org/apache/parquet/thrift/ThriftSchemaConverter/toStructType(java.lang.Class)
org/apache/parquet/thrift/struct/CompatibilityCheckerTest/testReuirementChange()#org/apache/parquet/thrift/struct/CompatibilityCheckerTest/verifyCompatible(java.lang.Class,java.lang.Class,boolean)
org/apache/parquet/thrift/struct/CompatibilityCheckerTest/testTypeChange()#org/apache/parquet/thrift/struct/CompatibilityCheckerTest/verifyCompatible(java.lang.Class,java.lang.Class,boolean)
org/apache/parquet/thrift/struct/CompatibilityCheckerTest/testRemoveOptionalField()#org/apache/parquet/thrift/struct/CompatibilityCheckerTest/verifyCompatible(java.lang.Class,java.lang.Class,boolean)
org/apache/parquet/thrift/struct/CompatibilityCheckerTest/getCompatibilityReport(java.lang.Class,java.lang.Class)#org/apache/parquet/thrift/struct/CompatibilityChecker/checkCompatibility(org.apache.parquet.thrift.struct.ThriftType.StructType,org.apache.parquet.thrift.struct.ThriftType.StructType)
org/apache/parquet/thrift/struct/CompatibilityCheckerTest/getCompatibilityReport(java.lang.Class,java.lang.Class)#org/apache/parquet/thrift/struct/CompatibilityCheckerTest/struct(java.lang.Class)
org/apache/parquet/thrift/struct/CompatibilityCheckerTest/getCompatibilityReport(java.lang.Class,java.lang.Class)#org/apache/parquet/thrift/struct/CompatibilityChecker/CompatibilityChecker()
org/apache/parquet/thrift/struct/CompatibilityCheckerTest/testRenameField()#org/apache/parquet/thrift/struct/CompatibilityCheckerTest/verifyCompatible(java.lang.Class,java.lang.Class,boolean)
org/apache/parquet/thrift/struct/CompatibilityCheckerTest/testMap()#org/apache/parquet/thrift/struct/CompatibilityCheckerTest/verifyCompatible(java.lang.Class,java.lang.Class,boolean)
org/apache/parquet/thrift/struct/CompatibilityCheckerTest/testSet()#org/apache/parquet/thrift/struct/CompatibilityCheckerTest/verifyCompatible(java.lang.Class,java.lang.Class,boolean)
org/apache/parquet/thrift/struct/CompatibilityCheckerTest/testAddRequiredField()#org/apache/parquet/thrift/struct/CompatibilityCheckerTest/verifyCompatible(java.lang.Class,java.lang.Class,boolean)
org/apache/parquet/thrift/struct/CompatibilityCheckerTest/testEmptyStruct()#org/apache/parquet/thrift/struct/CompatibilityReport/hasEmptyStruct()
org/apache/parquet/thrift/struct/CompatibilityCheckerTest/testEmptyStruct()#org/apache/parquet/thrift/struct/CompatibilityReport/prettyMessages()
org/apache/parquet/thrift/struct/CompatibilityCheckerTest/testEmptyStruct()#org/apache/parquet/thrift/struct/CompatibilityCheckerTest/getCompatibilityReport(java.lang.Class,java.lang.Class)
org/apache/parquet/hadoop/ParquetOutputCommitter/commitJob(org.apache.parquet.hadoop.util.JobContext)#org/apache/parquet/hadoop/util/ContextUtil/getConfiguration(org.apache.parquet.hadoop.util.JobContext)
org/apache/parquet/hadoop/ParquetOutputCommitter/commitJob(org.apache.parquet.hadoop.util.JobContext)#org/apache/parquet/hadoop/ParquetOutputCommitter/writeMetaDataFile(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path)
org/apache/parquet/hadoop/ParquetOutputCommitter/writeMetaDataFile(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path)#java/util/List/isEmpty()
org/apache/parquet/hadoop/ParquetOutputCommitter/writeMetaDataFile(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path)#org/apache/parquet/hadoop/ParquetOutputFormat/getJobSummaryLevel(org.apache.parquet.hadoop.Configuration)
org/apache/parquet/hadoop/ParquetOutputCommitter/writeMetaDataFile(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path)#org/apache/parquet/hadoop/ParquetFileWriter/writeMetadataFile(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path,java.util.List,org.apache.parquet.hadoop.ParquetOutputFormat.JobSummaryLevel)
org/apache/parquet/hadoop/ParquetOutputCommitter/writeMetaDataFile(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/parquet/hadoop/ParquetOutputCommitter/writeMetaDataFile(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path)#java/lang/Object/Object()
org/apache/parquet/hadoop/ParquetOutputCommitter/writeMetaDataFile(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path)#org/apache/parquet/hadoop/ParquetFileReader/readAllFootersInParallel(org.apache.parquet.hadoop.Configuration,java.util.List,boolean)
org/apache/parquet/column/values/bitpacking/BaseBitPackingWriter/finish(int,long,java.io.OutputStream)#java/io/OutputStream/write(int)
org/apache/parquet/column/values/bitpacking/BaseBitPackingWriter/finish(int,int,java.io.OutputStream)#java/io/OutputStream/write(int)
org/apache/parquet/filter2/predicate/LogicalInverter/visit(org.apache.parquet.filter2.predicate.Operators.Or)#org/apache/parquet/filter2/predicate/Operators/And/And(org.apache.parquet.filter2.predicate.FilterPredicate,org.apache.parquet.filter2.predicate.FilterPredicate)
org/apache/parquet/filter2/predicate/LogicalInverter/visit(org.apache.parquet.filter2.predicate.Operators.Or)#org/apache/parquet/filter2/predicate/FilterPredicate/accept(org.apache.parquet.filter2.predicate.FilterPredicate.Visitor)
org/apache/parquet/filter2/predicate/LogicalInverter/visit(org.apache.parquet.filter2.predicate.Operators.Or)#org/apache/parquet/filter2/predicate/Operators/BinaryLogicalFilterPredicate/getRight()
org/apache/parquet/filter2/predicate/LogicalInverter/visit(org.apache.parquet.filter2.predicate.Operators.Or)#org/apache/parquet/filter2/predicate/Operators/BinaryLogicalFilterPredicate/getLeft()
org/apache/parquet/filter2/predicate/LogicalInverter/visit(org.apache.parquet.filter2.predicate.Operators.And)#org/apache/parquet/filter2/predicate/FilterPredicate/accept(org.apache.parquet.filter2.predicate.FilterPredicate.Visitor)
org/apache/parquet/filter2/predicate/LogicalInverter/visit(org.apache.parquet.filter2.predicate.Operators.And)#org/apache/parquet/filter2/predicate/Operators/Or/Or(org.apache.parquet.filter2.predicate.FilterPredicate,org.apache.parquet.filter2.predicate.FilterPredicate)
org/apache/parquet/filter2/predicate/LogicalInverter/visit(org.apache.parquet.filter2.predicate.Operators.And)#org/apache/parquet/filter2/predicate/Operators/BinaryLogicalFilterPredicate/getRight()
org/apache/parquet/filter2/predicate/LogicalInverter/visit(org.apache.parquet.filter2.predicate.Operators.And)#org/apache/parquet/filter2/predicate/Operators/BinaryLogicalFilterPredicate/getLeft()
org/apache/parquet/filter2/predicate/LogicalInverter/visit(org.apache.parquet.filter2.predicate.Operators.LogicalNotUserDefined)#org/apache/parquet/filter2/predicate/Operators/LogicalNotUserDefined/getUserDefined()
org/apache/parquet/filter2/predicate/LogicalInverter/visit(org.apache.parquet.filter2.predicate.Operators.Not)#org/apache/parquet/filter2/predicate/Operators/Not/getPredicate()
org/apache/parquet/filter2/predicate/LogicalInverter/visit(org.apache.parquet.filter2.predicate.Operators.LtEq)#org/apache/parquet/filter2/predicate/Operators/ColumnFilterPredicate/getColumn()
org/apache/parquet/filter2/predicate/LogicalInverter/visit(org.apache.parquet.filter2.predicate.Operators.LtEq)#org/apache/parquet/filter2/predicate/Operators/Gt/Gt(org.apache.parquet.filter2.predicate.Operators.Column,T)
org/apache/parquet/filter2/predicate/LogicalInverter/visit(org.apache.parquet.filter2.predicate.Operators.LtEq)#org/apache/parquet/filter2/predicate/Operators/ColumnFilterPredicate/getValue()
org/apache/parquet/filter2/predicate/LogicalInverter/visit(org.apache.parquet.filter2.predicate.Operators.Gt)#org/apache/parquet/filter2/predicate/Operators/ColumnFilterPredicate/getColumn()
org/apache/parquet/filter2/predicate/LogicalInverter/visit(org.apache.parquet.filter2.predicate.Operators.Gt)#org/apache/parquet/filter2/predicate/Operators/LtEq/LtEq(org.apache.parquet.filter2.predicate.Operators.Column,T)
org/apache/parquet/filter2/predicate/LogicalInverter/visit(org.apache.parquet.filter2.predicate.Operators.Gt)#org/apache/parquet/filter2/predicate/Operators/ColumnFilterPredicate/getValue()
org/apache/parquet/filter2/predicate/LogicalInverter/visit(org.apache.parquet.filter2.predicate.Operators.Eq)#org/apache/parquet/filter2/predicate/Operators/ColumnFilterPredicate/getColumn()
org/apache/parquet/filter2/predicate/LogicalInverter/visit(org.apache.parquet.filter2.predicate.Operators.Eq)#org/apache/parquet/filter2/predicate/Operators/NotEq/NotEq(org.apache.parquet.filter2.predicate.Operators.Column,T)
org/apache/parquet/filter2/predicate/LogicalInverter/visit(org.apache.parquet.filter2.predicate.Operators.Eq)#org/apache/parquet/filter2/predicate/Operators/ColumnFilterPredicate/getValue()
org/apache/parquet/filter2/predicate/LogicalInverter/visit(org.apache.parquet.filter2.predicate.Operators.NotEq)#org/apache/parquet/filter2/predicate/Operators/ColumnFilterPredicate/getColumn()
org/apache/parquet/filter2/predicate/LogicalInverter/visit(org.apache.parquet.filter2.predicate.Operators.NotEq)#org/apache/parquet/filter2/predicate/Operators/Eq/Eq(org.apache.parquet.filter2.predicate.Operators.Column,T)
org/apache/parquet/filter2/predicate/LogicalInverter/visit(org.apache.parquet.filter2.predicate.Operators.NotEq)#org/apache/parquet/filter2/predicate/Operators/ColumnFilterPredicate/getValue()
org/apache/parquet/filter2/predicate/LogicalInverter/visit(org.apache.parquet.filter2.predicate.Operators.UserDefined)#org/apache/parquet/filter2/predicate/Operators/LogicalNotUserDefined/LogicalNotUserDefined(org.apache.parquet.filter2.predicate.Operators.UserDefined)
org/apache/parquet/filter2/predicate/LogicalInverter/visit(org.apache.parquet.filter2.predicate.Operators.Lt)#org/apache/parquet/filter2/predicate/Operators/ColumnFilterPredicate/getColumn()
org/apache/parquet/filter2/predicate/LogicalInverter/visit(org.apache.parquet.filter2.predicate.Operators.Lt)#org/apache/parquet/filter2/predicate/Operators/GtEq/GtEq(org.apache.parquet.filter2.predicate.Operators.Column,T)
org/apache/parquet/filter2/predicate/LogicalInverter/visit(org.apache.parquet.filter2.predicate.Operators.Lt)#org/apache/parquet/filter2/predicate/Operators/ColumnFilterPredicate/getValue()
org/apache/parquet/filter2/predicate/LogicalInverter/visit(org.apache.parquet.filter2.predicate.Operators.GtEq)#org/apache/parquet/filter2/predicate/Operators/ColumnFilterPredicate/getColumn()
org/apache/parquet/filter2/predicate/LogicalInverter/visit(org.apache.parquet.filter2.predicate.Operators.GtEq)#org/apache/parquet/filter2/predicate/Operators/Lt/Lt(org.apache.parquet.filter2.predicate.Operators.Column,T)
org/apache/parquet/filter2/predicate/LogicalInverter/visit(org.apache.parquet.filter2.predicate.Operators.GtEq)#org/apache/parquet/filter2/predicate/Operators/ColumnFilterPredicate/getValue()
org/apache/parquet/filter2/predicate/LogicalInverter/invert(org.apache.parquet.filter2.predicate.FilterPredicate)#org/apache/parquet/filter2/predicate/FilterPredicate/accept(org.apache.parquet.filter2.predicate.FilterPredicate.Visitor)
org/apache/parquet/filter2/predicate/LogicalInverter/invert(org.apache.parquet.filter2.predicate.FilterPredicate)#org/apache/parquet/Preconditions/checkNotNull(T,java.lang.String)
org/apache/parquet/filter2/recordlevel/TestRecordLevelFilters/SetInFilter/keep(java.lang.Long)#java/util/HashSet/contains(java.lang.Object)
org/apache/parquet/column/page/DataPageV1/toString()#org/apache/parquet/column/page/Page/getUncompressedSize()
org/apache/parquet/column/page/DataPageV1/toString()#org/apache/parquet/column/page/DataPage/getValueCount()
org/apache/parquet/column/page/DataPageV1/toString()#org/apache/parquet/bytes/BytesInput/size()
org/apache/parquet/column/page/DataPageV1/accept(org.apache.parquet.column.page.DataPage.Visitor)#org/apache/parquet/column/page/DataPage/Visitor/visit(org.apache.parquet.column.page.DataPageV1)
org/apache/hadoop/hive/ql/io/parquet/serde/primitive/ParquetByteInspector/getPrimitiveWritableObject(java.lang.Object)#org/apache/hadoop/hive/ql/io/parquet/serde/primitive/ParquetByteInspector/get(java.lang.Object)
org/apache/parquet/statistics/TestStatistics/DataGenerationContext/writeAndTest(org.apache.parquet.statistics.TestStatistics.DataGenerationContext.WriteContext)#org/apache/parquet/statistics/TestStatistics/DataGenerationContext/WriteContext/test()
org/apache/parquet/statistics/TestStatistics/DataGenerationContext/writeAndTest(org.apache.parquet.statistics.TestStatistics.DataGenerationContext.WriteContext)#org/apache/parquet/hadoop/ParquetWriter/ParquetWriter(org.apache.parquet.hadoop.Path,org.apache.parquet.hadoop.api.WriteSupport,org.apache.parquet.hadoop.metadata.CompressionCodecName,int,int,int,boolean,boolean,org.apache.parquet.column.ParquetProperties.WriterVersion,org.apache.parquet.hadoop.Configuration)
org/apache/parquet/statistics/TestStatistics/DataGenerationContext/writeAndTest(org.apache.parquet.statistics.TestStatistics.DataGenerationContext.WriteContext)#org/apache/parquet/hadoop/example/GroupWriteSupport/setSchema(org.apache.parquet.schema.MessageType,org.apache.parquet.hadoop.Configuration)
org/apache/parquet/statistics/TestStatistics/DataGenerationContext/writeAndTest(org.apache.parquet.statistics.TestStatistics.DataGenerationContext.WriteContext)#org/apache/parquet/hadoop/ParquetWriter/close()
org/apache/parquet/statistics/TestStatistics/DataGenerationContext/writeAndTest(org.apache.parquet.statistics.TestStatistics.DataGenerationContext.WriteContext)#org/apache/parquet/hadoop/example/GroupWriteSupport/GroupWriteSupport()
org/apache/parquet/statistics/TestStatistics/DataGenerationContext/writeAndTest(org.apache.parquet.statistics.TestStatistics.DataGenerationContext.WriteContext)#org/apache/parquet/statistics/TestStatistics/DataGenerationContext/WriteContext/write(org.apache.parquet.hadoop.ParquetWriter)
org/apache/parquet/statistics/TestStatistics/DataGenerationContext/writeAndTest(org.apache.parquet.statistics.TestStatistics.DataGenerationContext.WriteContext)#java/io/File/delete()
org/apache/parquet/benchmarks/WriteBenchmarks/write1MRowsBS512MPS8MUncompressed()#org/apache/parquet/benchmarks/DataGenerator/generateData(org.apache.parquet.hadoop.Path,org.apache.parquet.hadoop.Configuration,org.apache.parquet.column.ParquetProperties.WriterVersion,int,int,int,org.apache.parquet.hadoop.metadata.CompressionCodecName,int)
org/apache/parquet/benchmarks/WriteBenchmarks/write1MRowsBS256MPS8MUncompressed()#org/apache/parquet/benchmarks/DataGenerator/generateData(org.apache.parquet.hadoop.Path,org.apache.parquet.hadoop.Configuration,org.apache.parquet.column.ParquetProperties.WriterVersion,int,int,int,org.apache.parquet.hadoop.metadata.CompressionCodecName,int)
org/apache/parquet/benchmarks/WriteBenchmarks/write1MRowsBS512MPS4MUncompressed()#org/apache/parquet/benchmarks/DataGenerator/generateData(org.apache.parquet.hadoop.Path,org.apache.parquet.hadoop.Configuration,org.apache.parquet.column.ParquetProperties.WriterVersion,int,int,int,org.apache.parquet.hadoop.metadata.CompressionCodecName,int)
org/apache/parquet/benchmarks/WriteBenchmarks/write1MRowsBS256MPS4MUncompressed()#org/apache/parquet/benchmarks/DataGenerator/generateData(org.apache.parquet.hadoop.Path,org.apache.parquet.hadoop.Configuration,org.apache.parquet.column.ParquetProperties.WriterVersion,int,int,int,org.apache.parquet.hadoop.metadata.CompressionCodecName,int)
org/apache/parquet/benchmarks/WriteBenchmarks/write1MRowsDefaultBlockAndPageSizeSNAPPY()#org/apache/parquet/benchmarks/DataGenerator/generateData(org.apache.parquet.hadoop.Path,org.apache.parquet.hadoop.Configuration,org.apache.parquet.column.ParquetProperties.WriterVersion,int,int,int,org.apache.parquet.hadoop.metadata.CompressionCodecName,int)
org/apache/parquet/benchmarks/WriteBenchmarks/cleanup()#org/apache/parquet/benchmarks/DataGenerator/cleanup()
org/apache/parquet/benchmarks/WriteBenchmarks/write1MRowsDefaultBlockAndPageSizeGZIP()#org/apache/parquet/benchmarks/DataGenerator/generateData(org.apache.parquet.hadoop.Path,org.apache.parquet.hadoop.Configuration,org.apache.parquet.column.ParquetProperties.WriterVersion,int,int,int,org.apache.parquet.hadoop.metadata.CompressionCodecName,int)
org/apache/parquet/benchmarks/WriteBenchmarks/write1MRowsDefaultBlockAndPageSizeUncompressed()#org/apache/parquet/benchmarks/DataGenerator/generateData(org.apache.parquet.hadoop.Path,org.apache.parquet.hadoop.Configuration,org.apache.parquet.column.ParquetProperties.WriterVersion,int,int,int,org.apache.parquet.hadoop.metadata.CompressionCodecName,int)
org/apache/parquet/column/values/deltalengthbytearray/DeltaLengthByteArrayValuesReader/initFromPage(int,java.nio.ByteBuffer,int)#org/apache/parquet/column/values/ValuesReader/initFromPage(int,java.nio.ByteBuffer,int)
org/apache/parquet/column/values/deltalengthbytearray/DeltaLengthByteArrayValuesReader/initFromPage(int,java.nio.ByteBuffer,int)#java/nio/Buffer/limit()
org/apache/parquet/column/values/deltalengthbytearray/DeltaLengthByteArrayValuesReader/initFromPage(int,java.nio.ByteBuffer,int)#org/apache/parquet/column/values/ValuesReader/getNextOffset()
org/apache/parquet/column/values/deltalengthbytearray/DeltaLengthByteArrayValuesReader/readBytes()#org/apache/parquet/io/api/Binary/fromConstantByteBuffer(java.nio.ByteBuffer,int,int)
org/apache/parquet/column/values/deltalengthbytearray/DeltaLengthByteArrayValuesReader/readBytes()#org/apache/parquet/column/values/ValuesReader/readInteger()
org/apache/parquet/column/values/deltalengthbytearray/DeltaLengthByteArrayValuesReader/skip()#org/apache/parquet/column/values/ValuesReader/readInteger()
org/apache/parquet/column/values/dictionary/DictionaryValuesWriter/PlainFloatDictionaryValuesWriter/writeFloat(float)#org/apache/parquet/column/values/dictionary/IntList/add(int)
org/apache/parquet/column/values/dictionary/DictionaryValuesWriter/PlainFloatDictionaryValuesWriter/toDictPageAndClose()#org/apache/parquet/column/values/plain/PlainValuesWriter/writeFloat(float)
org/apache/parquet/column/values/dictionary/DictionaryValuesWriter/PlainFloatDictionaryValuesWriter/toDictPageAndClose()#org/apache/parquet/column/values/dictionary/DictionaryValuesWriter/dictPage(org.apache.parquet.column.values.ValuesWriter)
org/apache/parquet/column/values/dictionary/DictionaryValuesWriter/PlainFloatDictionaryValuesWriter/toDictPageAndClose()#org/apache/parquet/column/values/plain/PlainValuesWriter/PlainValuesWriter(int,int,org.apache.parquet.bytes.ByteBufferAllocator)
org/apache/parquet/column/values/dictionary/DictionaryValuesWriter/PlainFloatDictionaryValuesWriter/fallBackDictionaryEncodedData(org.apache.parquet.column.values.ValuesWriter)#org/apache/parquet/column/values/dictionary/IntList/IntIterator/hasNext()
org/apache/parquet/column/values/dictionary/DictionaryValuesWriter/PlainFloatDictionaryValuesWriter/fallBackDictionaryEncodedData(org.apache.parquet.column.values.ValuesWriter)#org/apache/parquet/column/values/dictionary/DictionaryValuesWriter/PlainFloatDictionaryValuesWriter/getDictionarySize()
org/apache/parquet/column/values/dictionary/DictionaryValuesWriter/PlainFloatDictionaryValuesWriter/fallBackDictionaryEncodedData(org.apache.parquet.column.values.ValuesWriter)#org/apache/parquet/column/values/dictionary/IntList/IntIterator/next()
org/apache/parquet/column/values/dictionary/DictionaryValuesWriter/PlainFloatDictionaryValuesWriter/fallBackDictionaryEncodedData(org.apache.parquet.column.values.ValuesWriter)#org/apache/parquet/column/values/dictionary/IntList/iterator()
org/apache/parquet/column/values/dictionary/DictionaryValuesWriter/PlainFloatDictionaryValuesWriter/fallBackDictionaryEncodedData(org.apache.parquet.column.values.ValuesWriter)#org/apache/parquet/column/values/ValuesWriter/writeFloat(float)
org/apache/parquet/column/values/bitpacking/BitPackingValuesReader/readInteger()#org/apache/parquet/io/ParquetDecodingException/ParquetDecodingException(java.lang.Throwable)
org/apache/parquet/column/values/bitpacking/BitPackingValuesReader/readInteger()#org/apache/parquet/column/values/bitpacking/BitPacking/BitPackingReader/read()
org/apache/parquet/column/values/bitpacking/BitPackingValuesReader/initFromPage(int,java.nio.ByteBuffer,int)#org/apache/parquet/column/values/bitpacking/BitPacking/createBitPackingReader(int,java.io.InputStream,long)
org/apache/parquet/column/values/bitpacking/BitPackingValuesReader/initFromPage(int,java.nio.ByteBuffer,int)#org/apache/parquet/bytes/BytesUtils/paddedByteCountFromBits(int)
org/apache/parquet/column/values/bitpacking/BitPackingValuesReader/initFromPage(int,java.nio.ByteBuffer,int)#org/apache/parquet/bytes/ByteBufferInputStream/ByteBufferInputStream(java.nio.ByteBuffer,int,int)
org/apache/parquet/column/values/bitpacking/BitPackingValuesReader/skip()#org/apache/parquet/column/values/bitpacking/BitPackingValuesReader/readInteger()
org/apache/parquet/encodings/FileEncodingsIT/generateRandomValues(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,int)#org/apache/parquet/statistics/RandomValues/Int96Generator/nextBinaryValue()
org/apache/parquet/encodings/FileEncodingsIT/generateRandomValues(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,int)#java/util/ArrayList/ArrayList()
org/apache/parquet/encodings/FileEncodingsIT/generateRandomValues(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,int)#org/apache/parquet/statistics/RandomValues/BinaryGenerator/nextBinaryValue()
org/apache/parquet/encodings/FileEncodingsIT/generateRandomValues(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,int)#java/util/List/add(E)
org/apache/parquet/encodings/FileEncodingsIT/generateRandomValues(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,int)#org/apache/parquet/statistics/RandomValues/FixedGenerator/nextBinaryValue()
org/apache/parquet/encodings/FileEncodingsIT/generateRandomValues(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,int)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/parquet/encodings/FileEncodingsIT/generateRandomValues(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,int)#org/apache/parquet/statistics/RandomValues/DoubleGenerator/nextValue()
org/apache/parquet/encodings/FileEncodingsIT/generateRandomValues(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,int)#org/apache/parquet/statistics/RandomValues/IntGenerator/nextValue()
org/apache/parquet/encodings/FileEncodingsIT/generateRandomValues(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,int)#org/apache/parquet/statistics/RandomValues/LongGenerator/nextValue()
org/apache/parquet/encodings/FileEncodingsIT/generateRandomValues(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,int)#org/apache/parquet/statistics/RandomValues/FloatGenerator/nextValue()
org/apache/parquet/encodings/FileEncodingsIT/initialize()#org/apache/parquet/statistics/RandomValues/FixedGenerator/FixedGenerator(long,int)
org/apache/parquet/encodings/FileEncodingsIT/initialize()#org/apache/parquet/statistics/RandomValues/LongGenerator/LongGenerator(long)
org/apache/parquet/encodings/FileEncodingsIT/initialize()#java/util/Random/Random(long)
org/apache/parquet/encodings/FileEncodingsIT/initialize()#java/util/Random/nextLong()
org/apache/parquet/encodings/FileEncodingsIT/initialize()#org/apache/parquet/statistics/RandomValues/FloatGenerator/FloatGenerator(long)
org/apache/parquet/encodings/FileEncodingsIT/initialize()#org/apache/parquet/statistics/RandomValues/Int96Generator/Int96Generator(long)
org/apache/parquet/encodings/FileEncodingsIT/initialize()#org/apache/parquet/statistics/RandomValues/IntGenerator/IntGenerator(long)
org/apache/parquet/encodings/FileEncodingsIT/initialize()#org/apache/parquet/statistics/RandomValues/BinaryGenerator/BinaryGenerator(long)
org/apache/parquet/encodings/FileEncodingsIT/initialize()#org/apache/parquet/statistics/RandomValues/DoubleGenerator/DoubleGenerator(long)
org/apache/parquet/encodings/FileEncodingsIT/generateDictionaryValues(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,int)#java/util/ArrayList/ArrayList()
org/apache/parquet/encodings/FileEncodingsIT/generateDictionaryValues(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,int)#org/apache/parquet/encodings/FileEncodingsIT/generateRandomValues(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,int)
org/apache/parquet/encodings/FileEncodingsIT/generateDictionaryValues(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,int)#java/util/List/add(E)
org/apache/parquet/encodings/FileEncodingsIT/generateDictionaryValues(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,int)#java/util/List/get(int)
org/apache/parquet/encodings/FileEncodingsIT/generateDictionaryValues(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,int)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/parquet/encodings/FileEncodingsIT/getParameters()#java/util/ArrayList/ArrayList()
org/apache/parquet/encodings/FileEncodingsIT/getParameters()#java/lang/String/split(java.lang.String)
org/apache/parquet/encodings/FileEncodingsIT/getParameters()#java/io/PrintStream/println(java.lang.String)
org/apache/parquet/encodings/FileEncodingsIT/getParameters()#java/lang/String/toUpperCase(java.util.Locale)
org/apache/parquet/encodings/FileEncodingsIT/getParameters()#java/util/Arrays/asList(T[])
org/apache/parquet/encodings/FileEncodingsIT/getParameters()#org/apache/parquet/hadoop/metadata/CompressionCodecName/valueOf(java.lang.String)
org/apache/parquet/encodings/FileEncodingsIT/getParameters()#java/util/List/add(E)
org/apache/parquet/encodings/FileEncodingsIT/getParameters()#java/lang/System/getenv(java.lang.String)
org/apache/parquet/encodings/FileEncodingsIT/createTempFile()#java/io/File/getAbsolutePath()
org/apache/parquet/encodings/FileEncodingsIT/createTempFile()#java/io/File/delete()
org/apache/parquet/encodings/FileEncodingsIT/testFileEncodingsWithoutDictionary()#org/apache/parquet/encodings/FileEncodingsIT/generateRandomValues(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,int)
org/apache/parquet/encodings/FileEncodingsIT/testFileEncodingsWithoutDictionary()#java/lang/String/format(java.lang.String,java.lang.Object[])
org/apache/parquet/encodings/FileEncodingsIT/testFileEncodingsWithoutDictionary()#org/apache/parquet/encodings/FileEncodingsIT/writeValuesToFile(org.apache.parquet.hadoop.Path,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,java.util.List,int,int,boolean,org.apache.parquet.column.ParquetProperties.WriterVersion)
org/apache/parquet/encodings/FileEncodingsIT/testFileEncodingsWithoutDictionary()#org/apache/parquet/column/ParquetProperties/WriterVersion/values()
org/apache/parquet/encodings/FileEncodingsIT/testFileEncodingsWithoutDictionary()#org/apache/parquet/encodings/FileEncodingsIT/PageGroupValidator/validatePages(org.apache.parquet.hadoop.Path,java.util.List)
org/apache/parquet/encodings/FileEncodingsIT/testFileEncodingsWithoutDictionary()#org/apache/parquet/encodings/FileEncodingsIT/createTempFile()
org/apache/parquet/encodings/FileEncodingsIT/testFileEncodingsWithoutDictionary()#java/io/PrintStream/println(java.lang.String)
org/apache/parquet/encodings/FileEncodingsIT/testFileEncodingsWithDictionary()#java/lang/String/format(java.lang.String,java.lang.Object[])
org/apache/parquet/encodings/FileEncodingsIT/testFileEncodingsWithDictionary()#org/apache/parquet/encodings/FileEncodingsIT/writeValuesToFile(org.apache.parquet.hadoop.Path,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,java.util.List,int,int,boolean,org.apache.parquet.column.ParquetProperties.WriterVersion)
org/apache/parquet/encodings/FileEncodingsIT/testFileEncodingsWithDictionary()#org/apache/parquet/column/ParquetProperties/WriterVersion/values()
org/apache/parquet/encodings/FileEncodingsIT/testFileEncodingsWithDictionary()#org/apache/parquet/encodings/FileEncodingsIT/generateDictionaryValues(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,int)
org/apache/parquet/encodings/FileEncodingsIT/testFileEncodingsWithDictionary()#org/apache/parquet/encodings/FileEncodingsIT/PageGroupValidator/validatePages(org.apache.parquet.hadoop.Path,java.util.List)
org/apache/parquet/encodings/FileEncodingsIT/testFileEncodingsWithDictionary()#org/apache/parquet/encodings/FileEncodingsIT/createTempFile()
org/apache/parquet/encodings/FileEncodingsIT/testFileEncodingsWithDictionary()#java/io/PrintStream/println(java.lang.String)
org/apache/parquet/encodings/FileEncodingsIT/writeValuesToFile(org.apache.parquet.hadoop.Path,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,java.util.List,int,int,boolean,org.apache.parquet.column.ParquetProperties.WriterVersion)#org/apache/parquet/hadoop/example/ExampleParquetWriter/builder(org.apache.parquet.hadoop.Path)
org/apache/parquet/encodings/FileEncodingsIT/writeValuesToFile(org.apache.parquet.hadoop.Path,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,java.util.List,int,int,boolean,org.apache.parquet.column.ParquetProperties.WriterVersion)#org/apache/parquet/schema/Types/buildMessage()
org/apache/parquet/encodings/FileEncodingsIT/writeValuesToFile(org.apache.parquet.hadoop.Path,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,java.util.List,int,int,boolean,org.apache.parquet.column.ParquetProperties.WriterVersion)#org/apache/parquet/schema/Types/Builder/named(java.lang.String)
org/apache/parquet/encodings/FileEncodingsIT/writeValuesToFile(org.apache.parquet.hadoop.Path,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,java.util.List,int,int,boolean,org.apache.parquet.column.ParquetProperties.WriterVersion)#org/apache/parquet/example/data/Group/append(java.lang.String,int)
org/apache/parquet/encodings/FileEncodingsIT/writeValuesToFile(org.apache.parquet.hadoop.Path,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,java.util.List,int,int,boolean,org.apache.parquet.column.ParquetProperties.WriterVersion)#org/apache/parquet/example/data/simple/SimpleGroupFactory/SimpleGroupFactory(org.apache.parquet.schema.MessageType)
org/apache/parquet/encodings/FileEncodingsIT/writeValuesToFile(org.apache.parquet.hadoop.Path,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,java.util.List,int,int,boolean,org.apache.parquet.column.ParquetProperties.WriterVersion)#org/apache/parquet/example/data/Group/append(java.lang.String,boolean)
org/apache/parquet/encodings/FileEncodingsIT/writeValuesToFile(org.apache.parquet.hadoop.Path,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,java.util.List,int,int,boolean,org.apache.parquet.column.ParquetProperties.WriterVersion)#org/apache/parquet/hadoop/ParquetWriter/close()
org/apache/parquet/encodings/FileEncodingsIT/writeValuesToFile(org.apache.parquet.hadoop.Path,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,java.util.List,int,int,boolean,org.apache.parquet.column.ParquetProperties.WriterVersion)#org/apache/parquet/hadoop/ParquetWriter/write(T)
org/apache/parquet/encodings/FileEncodingsIT/writeValuesToFile(org.apache.parquet.hadoop.Path,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,java.util.List,int,int,boolean,org.apache.parquet.column.ParquetProperties.WriterVersion)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/parquet/encodings/FileEncodingsIT/writeValuesToFile(org.apache.parquet.hadoop.Path,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,java.util.List,int,int,boolean,org.apache.parquet.column.ParquetProperties.WriterVersion)#org/apache/parquet/schema/Types/BaseGroupBuilder/required(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/encodings/FileEncodingsIT/writeValuesToFile(org.apache.parquet.hadoop.Path,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,java.util.List,int,int,boolean,org.apache.parquet.column.ParquetProperties.WriterVersion)#org/apache/parquet/example/data/Group/append(java.lang.String,double)
org/apache/parquet/encodings/FileEncodingsIT/writeValuesToFile(org.apache.parquet.hadoop.Path,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,java.util.List,int,int,boolean,org.apache.parquet.column.ParquetProperties.WriterVersion)#org/apache/parquet/example/data/simple/SimpleGroupFactory/newGroup()
org/apache/parquet/encodings/FileEncodingsIT/writeValuesToFile(org.apache.parquet.hadoop.Path,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,java.util.List,int,int,boolean,org.apache.parquet.column.ParquetProperties.WriterVersion)#org/apache/parquet/example/data/Group/append(java.lang.String,org.apache.parquet.io.api.Binary)
org/apache/parquet/encodings/FileEncodingsIT/writeValuesToFile(org.apache.parquet.hadoop.Path,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,java.util.List,int,int,boolean,org.apache.parquet.column.ParquetProperties.WriterVersion)#org/apache/parquet/hadoop/example/GroupWriteSupport/setSchema(org.apache.parquet.schema.MessageType,org.apache.parquet.hadoop.Configuration)
org/apache/parquet/encodings/FileEncodingsIT/writeValuesToFile(org.apache.parquet.hadoop.Path,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,java.util.List,int,int,boolean,org.apache.parquet.column.ParquetProperties.WriterVersion)#org/apache/parquet/example/data/Group/append(java.lang.String,long)
org/apache/parquet/encodings/FileEncodingsIT/writeValuesToFile(org.apache.parquet.hadoop.Path,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,java.util.List,int,int,boolean,org.apache.parquet.column.ParquetProperties.WriterVersion)#org/apache/parquet/schema/Types/BasePrimitiveBuilder/length(int)
org/apache/parquet/encodings/FileEncodingsIT/writeValuesToFile(org.apache.parquet.hadoop.Path,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,java.util.List,int,int,boolean,org.apache.parquet.column.ParquetProperties.WriterVersion)#org/apache/parquet/example/data/Group/append(java.lang.String,float)
org/apache/parquet/thrift/ParquetWriteProtocol/EnumWriteProtocol/writeI32(int)#org/apache/parquet/io/ColumnIO/toString()
org/apache/parquet/thrift/ParquetWriteProtocol/EnumWriteProtocol/writeI32(int)#org/apache/parquet/io/api/Binary/fromString(java.lang.String)
org/apache/parquet/thrift/ParquetWriteProtocol/EnumWriteProtocol/writeI32(int)#org/apache/parquet/io/api/RecordConsumer/addBinary(org.apache.parquet.io.api.Binary)
org/apache/parquet/thrift/ParquetWriteProtocol/EnumWriteProtocol/writeI32(int)#org/apache/parquet/io/ParquetEncodingException/ParquetEncodingException(java.lang.String)
org/apache/parquet/thrift/ParquetWriteProtocol/EnumWriteProtocol/writeI32(int)#org/apache/parquet/thrift/struct/ThriftType/EnumValue/getName()
org/apache/parquet/thrift/ParquetWriteProtocol/EnumWriteProtocol/writeI32(int)#org/apache/parquet/thrift/ParquetWriteProtocol/FieldBaseWriteProtocol/end()
org/apache/parquet/thrift/ParquetWriteProtocol/EnumWriteProtocol/writeI32(int)#org/apache/parquet/thrift/ParquetWriteProtocol/FieldBaseWriteProtocol/start()
org/apache/parquet/thrift/ParquetWriteProtocol/EnumWriteProtocol/writeI32(int)#org/apache/parquet/thrift/struct/ThriftType/EnumType/getEnumValueById(int)
org/apache/parquet/pig/convert/MapConverter/StringKeyConverter/addBinary(org.apache.parquet.io.api.Binary)#org/apache/parquet/io/api/Binary/toStringUsingUTF8()
org/apache/parquet/column/page/DataPageV2/compressed(int,int,int,org.apache.parquet.bytes.BytesInput,org.apache.parquet.bytes.BytesInput,org.apache.parquet.column.Encoding,org.apache.parquet.bytes.BytesInput,int,org.apache.parquet.column.statistics.Statistics)#org/apache/parquet/column/page/DataPageV2/DataPageV2(int,int,int,org.apache.parquet.bytes.BytesInput,org.apache.parquet.bytes.BytesInput,org.apache.parquet.column.Encoding,org.apache.parquet.bytes.BytesInput,int,org.apache.parquet.column.statistics.Statistics,boolean)
org/apache/parquet/column/page/DataPageV2/toString()#org/apache/parquet/column/page/DataPage/getValueCount()
org/apache/parquet/column/page/DataPageV2/toString()#org/apache/parquet/bytes/BytesInput/size()
org/apache/parquet/column/page/DataPageV2/toString()#org/apache/parquet/column/page/DataPageV2/getRowCount()
org/apache/parquet/column/page/DataPageV2/toString()#org/apache/parquet/column/page/Page/getUncompressedSize()
org/apache/parquet/column/page/DataPageV2/uncompressed(int,int,int,org.apache.parquet.bytes.BytesInput,org.apache.parquet.bytes.BytesInput,org.apache.parquet.column.Encoding,org.apache.parquet.bytes.BytesInput,org.apache.parquet.column.statistics.Statistics)#org/apache/parquet/Ints/checkedCast(long)
org/apache/parquet/column/page/DataPageV2/uncompressed(int,int,int,org.apache.parquet.bytes.BytesInput,org.apache.parquet.bytes.BytesInput,org.apache.parquet.column.Encoding,org.apache.parquet.bytes.BytesInput,org.apache.parquet.column.statistics.Statistics)#org/apache/parquet/column/page/DataPageV2/DataPageV2(int,int,int,org.apache.parquet.bytes.BytesInput,org.apache.parquet.bytes.BytesInput,org.apache.parquet.column.Encoding,org.apache.parquet.bytes.BytesInput,int,org.apache.parquet.column.statistics.Statistics,boolean)
org/apache/parquet/column/page/DataPageV2/uncompressed(int,int,int,org.apache.parquet.bytes.BytesInput,org.apache.parquet.bytes.BytesInput,org.apache.parquet.column.Encoding,org.apache.parquet.bytes.BytesInput,org.apache.parquet.column.statistics.Statistics)#org/apache/parquet/bytes/BytesInput/size()
org/apache/parquet/column/page/DataPageV2/accept(org.apache.parquet.column.page.DataPage.Visitor)#org/apache/parquet/column/page/DataPage/Visitor/visit(org.apache.parquet.column.page.DataPageV2)
org/apache/parquet/pig/PerfTest/main(java.lang.String[])#java/util/ArrayList/ArrayList()
org/apache/parquet/pig/PerfTest/main(java.lang.String[])#java/lang/StringBuilder/append(java.lang.String)
org/apache/parquet/pig/PerfTest/main(java.lang.String[])#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/apache/parquet/pig/PerfTest/main(java.lang.String[])#java/lang/Class/getName()
org/apache/parquet/pig/PerfTest/main(java.lang.String[])#java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)
org/apache/parquet/pig/PerfTest/main(java.lang.String[])#java/lang/Object/Object()
org/apache/parquet/pig/PerfTest/main(java.lang.String[])#java/lang/StringBuilder/toString()
org/apache/parquet/pig/PerfTest/main(java.lang.String[])#org/apache/parquet/pig/PerfTest/load(java.lang.String,int)
org/apache/parquet/pig/PerfTest/main(java.lang.String[])#java/io/PrintStream/println(java.lang.Object)
org/apache/parquet/pig/PerfTest/load(java.lang.String,int)#java/lang/StringBuilder/append(java.lang.String)
org/apache/parquet/pig/PerfTest/load(java.lang.String,int)#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/apache/parquet/pig/PerfTest/load(java.lang.String,int)#java/lang/Long/longValue()
org/apache/parquet/pig/PerfTest/load(java.lang.String,int)#java/lang/Class/getName()
org/apache/parquet/pig/PerfTest/load(java.lang.String,int)#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/apache/parquet/pig/PerfTest/load(java.lang.String,int)#java/lang/System/currentTimeMillis()
org/apache/parquet/pig/PerfTest/load(java.lang.String,int)#java/lang/Object/Object()
org/apache/parquet/thrift/projection/deprecated/DeprecatedFieldProjectionFilter/assertNoUnmatchedPatterns()#org/apache/parquet/thrift/projection/ThriftProjectionException/ThriftProjectionException(java.lang.String)
org/apache/parquet/thrift/projection/deprecated/DeprecatedFieldProjectionFilter/assertNoUnmatchedPatterns()#java/util/List/isEmpty()
org/apache/parquet/thrift/projection/deprecated/DeprecatedFieldProjectionFilter/assertNoUnmatchedPatterns()#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/apache/parquet/thrift/projection/deprecated/DeprecatedFieldProjectionFilter/assertNoUnmatchedPatterns()#java/util/LinkedList/LinkedList()
org/apache/parquet/thrift/projection/deprecated/DeprecatedFieldProjectionFilter/assertNoUnmatchedPatterns()#java/lang/StringBuilder/append(java.lang.Object)
org/apache/parquet/thrift/projection/deprecated/DeprecatedFieldProjectionFilter/assertNoUnmatchedPatterns()#java/lang/StringBuilder/toString()
org/apache/parquet/thrift/projection/deprecated/DeprecatedFieldProjectionFilter/assertNoUnmatchedPatterns()#java/lang/StringBuilder/append(char)
org/apache/parquet/thrift/projection/deprecated/DeprecatedFieldProjectionFilter/assertNoUnmatchedPatterns()#java/util/List/add(E)
org/apache/parquet/thrift/projection/deprecated/DeprecatedFieldProjectionFilter/keep(org.apache.parquet.thrift.projection.FieldsPath)#java/util/List/size()
org/apache/parquet/thrift/projection/deprecated/DeprecatedFieldProjectionFilter/keep(org.apache.parquet.thrift.projection.FieldsPath)#org/apache/parquet/thrift/projection/FieldsPath/toDelimitedString(java.lang.String)
org/apache/parquet/thrift/projection/deprecated/DeprecatedFieldProjectionFilter/keep(org.apache.parquet.thrift.projection.FieldsPath)#org/apache/parquet/thrift/projection/deprecated/DeprecatedFieldProjectionFilter/PathGlobPatternStatus/matches(java.lang.String)
org/apache/parquet/column/values/bitpacking/FiveBitPackingWriter/write(int)#java/io/OutputStream/write(int)
org/apache/parquet/column/values/bitpacking/FiveBitPackingWriter/finish()#org/apache/parquet/column/values/bitpacking/BaseBitPackingWriter/finish(int,long,java.io.OutputStream)
org/apache/parquet/hadoop/DirectCodecFactory/IndirectDecompressor/release()#org/apache/parquet/hadoop/DirectCodecFactory/DirectCodecPool/returnDecompressor(org.apache.parquet.hadoop.codec.Decompressor)
org/apache/parquet/hadoop/DirectCodecFactory/IndirectDecompressor/decompress(java.nio.ByteBuffer,int,java.nio.ByteBuffer,int)#java/nio/ByteBuffer/get(byte[])
org/apache/parquet/hadoop/DirectCodecFactory/IndirectDecompressor/decompress(java.nio.ByteBuffer,int,java.nio.ByteBuffer,int)#java/nio/Buffer/position(int)
org/apache/parquet/hadoop/DirectCodecFactory/IndirectDecompressor/decompress(java.nio.ByteBuffer,int,java.nio.ByteBuffer,int)#java/nio/ByteBuffer/put(byte[])
org/apache/parquet/hadoop/DirectCodecFactory/IndirectDecompressor/decompress(java.nio.ByteBuffer,int,java.nio.ByteBuffer,int)#java/nio/Buffer/clear()
org/apache/parquet/hadoop/DirectCodecFactory/IndirectDecompressor/decompress(org.apache.parquet.bytes.BytesInput,int)#org/apache/parquet/bytes/BytesInput/from(byte[])
org/apache/parquet/hadoop/DirectCodecFactory/IndirectDecompressor/decompress(org.apache.parquet.bytes.BytesInput,int)#org/apache/parquet/bytes/BytesInput/toByteArray()
org/apache/parquet/avro/RecordWithStringUUID/equals(java.lang.Object)#java/lang/String/equals(java.lang.Object)
org/apache/parquet/avro/RecordWithStringUUID/hashCode()#java/lang/String/hashCode()
org/apache/parquet/hadoop/DeprecatedOutputFormatTest/DeprecatedMapper/configure(org.apache.parquet.hadoop.JobConf)#org/apache/parquet/example/data/simple/SimpleGroupFactory/SimpleGroupFactory(org.apache.parquet.schema.MessageType)
org/apache/parquet/hadoop/DeprecatedOutputFormatTest/DeprecatedMapper/configure(org.apache.parquet.hadoop.JobConf)#org/apache/parquet/hadoop/example/GroupWriteSupport/getSchema(org.apache.parquet.hadoop.Configuration)
org/apache/parquet/hadoop/DeprecatedOutputFormatTest/DeprecatedMapper/map(org.apache.parquet.hadoop.LongWritable,org.apache.hadoop.hive.serde2.objectinspector.primitive.Text,org.apache.parquet.hadoop.OutputCollector,org.apache.parquet.hadoop.Reporter)#org/apache/parquet/example/data/Group/append(java.lang.String,int)
org/apache/parquet/hadoop/DeprecatedOutputFormatTest/DeprecatedMapper/map(org.apache.parquet.hadoop.LongWritable,org.apache.hadoop.hive.serde2.objectinspector.primitive.Text,org.apache.parquet.hadoop.OutputCollector,org.apache.parquet.hadoop.Reporter)#org/apache/parquet/example/data/Group/append(java.lang.String,org.apache.parquet.example.data.simple.NanoTime)
org/apache/parquet/hadoop/DeprecatedOutputFormatTest/DeprecatedMapper/map(org.apache.parquet.hadoop.LongWritable,org.apache.hadoop.hive.serde2.objectinspector.primitive.Text,org.apache.parquet.hadoop.OutputCollector,org.apache.parquet.hadoop.Reporter)#org/apache/parquet/example/data/simple/SimpleGroupFactory/newGroup()
org/apache/parquet/column/values/dictionary/DictionaryValuesReader/readInteger()#org/apache/parquet/column/Dictionary/decodeToInt(int)
org/apache/parquet/column/values/dictionary/DictionaryValuesReader/readInteger()#org/apache/parquet/column/values/rle/RunLengthBitPackingHybridDecoder/readInt()
org/apache/parquet/column/values/dictionary/DictionaryValuesReader/readInteger()#org/apache/parquet/io/ParquetDecodingException/ParquetDecodingException(java.lang.Throwable)
org/apache/parquet/column/values/dictionary/DictionaryValuesReader/readDouble()#org/apache/parquet/column/values/rle/RunLengthBitPackingHybridDecoder/readInt()
org/apache/parquet/column/values/dictionary/DictionaryValuesReader/readDouble()#org/apache/parquet/io/ParquetDecodingException/ParquetDecodingException(java.lang.Throwable)
org/apache/parquet/column/values/dictionary/DictionaryValuesReader/readDouble()#org/apache/parquet/column/Dictionary/decodeToDouble(int)
org/apache/parquet/column/values/dictionary/DictionaryValuesReader/readValueDictionaryId()#org/apache/parquet/column/values/rle/RunLengthBitPackingHybridDecoder/readInt()
org/apache/parquet/column/values/dictionary/DictionaryValuesReader/readValueDictionaryId()#org/apache/parquet/io/ParquetDecodingException/ParquetDecodingException(java.lang.Throwable)
org/apache/parquet/column/values/dictionary/DictionaryValuesReader/initFromPage(int,java.nio.ByteBuffer,int)#org/apache/parquet/bytes/BytesUtils/readIntLittleEndianOnOneByte(java.io.InputStream)
org/apache/parquet/column/values/dictionary/DictionaryValuesReader/initFromPage(int,java.nio.ByteBuffer,int)#java/nio/Buffer/limit()
org/apache/parquet/column/values/dictionary/DictionaryValuesReader/initFromPage(int,java.nio.ByteBuffer,int)#org/apache/parquet/bytes/ByteBufferInputStream/ByteBufferInputStream(java.nio.ByteBuffer,int,int)
org/apache/parquet/column/values/dictionary/DictionaryValuesReader/initFromPage(int,java.nio.ByteBuffer,int)#org/apache/parquet/column/values/rle/RunLengthBitPackingHybridDecoder/RunLengthBitPackingHybridDecoder(int,java.io.InputStream)
org/apache/parquet/column/values/dictionary/DictionaryValuesReader/initFromPage(int,java.nio.ByteBuffer,int)#org/apache/parquet/column/values/dictionary/DictionaryValuesReader/initFromPage(int,java/nio/ByteBuffer,int)/$anonymous1/(int,java.io.InputStream)
org/apache/parquet/column/values/dictionary/DictionaryValuesReader/readLong()#org/apache/parquet/column/Dictionary/decodeToLong(int)
org/apache/parquet/column/values/dictionary/DictionaryValuesReader/readLong()#org/apache/parquet/column/values/rle/RunLengthBitPackingHybridDecoder/readInt()
org/apache/parquet/column/values/dictionary/DictionaryValuesReader/readLong()#org/apache/parquet/io/ParquetDecodingException/ParquetDecodingException(java.lang.Throwable)
org/apache/parquet/column/values/dictionary/DictionaryValuesReader/readBytes()#org/apache/parquet/column/Dictionary/decodeToBinary(int)
org/apache/parquet/column/values/dictionary/DictionaryValuesReader/readBytes()#org/apache/parquet/column/values/rle/RunLengthBitPackingHybridDecoder/readInt()
org/apache/parquet/column/values/dictionary/DictionaryValuesReader/readBytes()#org/apache/parquet/io/ParquetDecodingException/ParquetDecodingException(java.lang.Throwable)
org/apache/parquet/column/values/dictionary/DictionaryValuesReader/skip()#org/apache/parquet/column/values/rle/RunLengthBitPackingHybridDecoder/readInt()
org/apache/parquet/column/values/dictionary/DictionaryValuesReader/skip()#org/apache/parquet/io/ParquetDecodingException/ParquetDecodingException(java.lang.Throwable)
org/apache/parquet/column/values/dictionary/DictionaryValuesReader/readFloat()#org/apache/parquet/column/values/rle/RunLengthBitPackingHybridDecoder/readInt()
org/apache/parquet/column/values/dictionary/DictionaryValuesReader/readFloat()#org/apache/parquet/io/ParquetDecodingException/ParquetDecodingException(java.lang.Throwable)
org/apache/parquet/column/values/dictionary/DictionaryValuesReader/readFloat()#org/apache/parquet/column/Dictionary/decodeToFloat(int)
org/apache/parquet/column/values/bitpacking/TwoBitPackingWriter/write(int)#java/io/OutputStream/write(int)
org/apache/parquet/column/values/bitpacking/TwoBitPackingWriter/finish()#org/apache/parquet/column/values/bitpacking/TwoBitPackingWriter/write(int)
org/apache/parquet/schema/Types/BaseMapBuilder/GroupKeyBuilder/value(org.apache.parquet.schema.Type)#org/apache/parquet/schema/Types/BaseMapBuilder/setKeyType(org.apache.parquet.schema.Type)
org/apache/parquet/schema/Types/BaseMapBuilder/GroupKeyBuilder/value(org.apache.parquet.schema.Type)#org/apache/parquet/schema/Types/BaseGroupBuilder/build(java.lang.String)
org/apache/parquet/schema/Types/BaseMapBuilder/GroupKeyBuilder/value(org.apache.parquet.schema.Type)#org/apache/parquet/schema/Types/BaseMapBuilder/setValueType(org.apache.parquet.schema.Type)
org/apache/parquet/schema/Types/BaseMapBuilder/GroupKeyBuilder/requiredValue(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)#org/apache/parquet/schema/Types/BaseMapBuilder/GroupKeyBuilder/value(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.schema.Type.Repetition)
org/apache/parquet/schema/Types/BaseMapBuilder/GroupKeyBuilder/optionalValue(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)#org/apache/parquet/schema/Types/BaseMapBuilder/GroupKeyBuilder/value(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.schema.Type.Repetition)
org/apache/parquet/schema/Types/BaseMapBuilder/GroupKeyBuilder/value(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.schema.Type.Repetition)#org/apache/parquet/schema/Types/BaseMapBuilder/setKeyType(org.apache.parquet.schema.Type)
org/apache/parquet/schema/Types/BaseMapBuilder/GroupKeyBuilder/value(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.schema.Type.Repetition)#org/apache/parquet/schema/Types/Builder/repetition(org.apache.parquet.schema.Type.Repetition)
org/apache/parquet/schema/Types/BaseMapBuilder/GroupKeyBuilder/value(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.schema.Type.Repetition)#org/apache/parquet/schema/Types/BaseMapBuilder/ValueBuilder/ValueBuilder(M,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/schema/Types/BaseMapBuilder/GroupKeyBuilder/value(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.schema.Type.Repetition)#org/apache/parquet/schema/Types/BaseGroupBuilder/build(java.lang.String)
org/apache/parquet/schema/Types/BaseMapBuilder/GroupKeyBuilder/mapValue(org.apache.parquet.schema.Type.Repetition)#org/apache/parquet/schema/Types/BaseMapBuilder/setKeyType(org.apache.parquet.schema.Type)
org/apache/parquet/schema/Types/BaseMapBuilder/GroupKeyBuilder/mapValue(org.apache.parquet.schema.Type.Repetition)#org/apache/parquet/schema/Types/Builder/repetition(org.apache.parquet.schema.Type.Repetition)
org/apache/parquet/schema/Types/BaseMapBuilder/GroupKeyBuilder/mapValue(org.apache.parquet.schema.Type.Repetition)#org/apache/parquet/schema/Types/BaseGroupBuilder/build(java.lang.String)
org/apache/parquet/schema/Types/BaseMapBuilder/GroupKeyBuilder/mapValue(org.apache.parquet.schema.Type.Repetition)#org/apache/parquet/schema/Types/BaseMapBuilder/MapValueBuilder/MapValueBuilder(M)
org/apache/parquet/schema/Types/BaseMapBuilder/GroupKeyBuilder/requiredGroupValue()#org/apache/parquet/schema/Types/BaseMapBuilder/GroupKeyBuilder/groupValue(org.apache.parquet.schema.Type.Repetition)
org/apache/parquet/schema/Types/BaseMapBuilder/GroupKeyBuilder/optionalListValue()#org/apache/parquet/schema/Types/BaseMapBuilder/GroupKeyBuilder/listValue(org.apache.parquet.schema.Type.Repetition)
org/apache/parquet/schema/Types/BaseMapBuilder/GroupKeyBuilder/requiredListValue()#org/apache/parquet/schema/Types/BaseMapBuilder/GroupKeyBuilder/listValue(org.apache.parquet.schema.Type.Repetition)
org/apache/parquet/schema/Types/BaseMapBuilder/GroupKeyBuilder/named(java.lang.String)#org/apache/parquet/schema/Types/BaseMapBuilder/setKeyType(org.apache.parquet.schema.Type)
org/apache/parquet/schema/Types/BaseMapBuilder/GroupKeyBuilder/named(java.lang.String)#org/apache/parquet/schema/Types/Builder/named(java.lang.String)
org/apache/parquet/schema/Types/BaseMapBuilder/GroupKeyBuilder/named(java.lang.String)#org/apache/parquet/schema/Types/BaseGroupBuilder/build(java.lang.String)
org/apache/parquet/schema/Types/BaseMapBuilder/GroupKeyBuilder/optionalGroupValue()#org/apache/parquet/schema/Types/BaseMapBuilder/GroupKeyBuilder/groupValue(org.apache.parquet.schema.Type.Repetition)
org/apache/parquet/schema/Types/BaseMapBuilder/GroupKeyBuilder/requiredMapValue()#org/apache/parquet/schema/Types/BaseMapBuilder/GroupKeyBuilder/mapValue(org.apache.parquet.schema.Type.Repetition)
org/apache/parquet/schema/Types/BaseMapBuilder/GroupKeyBuilder/groupValue(org.apache.parquet.schema.Type.Repetition)#org/apache/parquet/schema/Types/BaseMapBuilder/setKeyType(org.apache.parquet.schema.Type)
org/apache/parquet/schema/Types/BaseMapBuilder/GroupKeyBuilder/groupValue(org.apache.parquet.schema.Type.Repetition)#org/apache/parquet/schema/Types/Builder/repetition(org.apache.parquet.schema.Type.Repetition)
org/apache/parquet/schema/Types/BaseMapBuilder/GroupKeyBuilder/groupValue(org.apache.parquet.schema.Type.Repetition)#org/apache/parquet/schema/Types/BaseMapBuilder/GroupValueBuilder/GroupValueBuilder(M)
org/apache/parquet/schema/Types/BaseMapBuilder/GroupKeyBuilder/groupValue(org.apache.parquet.schema.Type.Repetition)#org/apache/parquet/schema/Types/BaseGroupBuilder/build(java.lang.String)
org/apache/parquet/schema/Types/BaseMapBuilder/GroupKeyBuilder/optionalMapValue()#org/apache/parquet/schema/Types/BaseMapBuilder/GroupKeyBuilder/mapValue(org.apache.parquet.schema.Type.Repetition)
org/apache/parquet/schema/Types/BaseMapBuilder/GroupKeyBuilder/listValue(org.apache.parquet.schema.Type.Repetition)#org/apache/parquet/schema/Types/BaseMapBuilder/ListValueBuilder/ListValueBuilder(M)
org/apache/parquet/schema/Types/BaseMapBuilder/GroupKeyBuilder/listValue(org.apache.parquet.schema.Type.Repetition)#org/apache/parquet/schema/Types/BaseMapBuilder/setKeyType(org.apache.parquet.schema.Type)
org/apache/parquet/schema/Types/BaseMapBuilder/GroupKeyBuilder/listValue(org.apache.parquet.schema.Type.Repetition)#org/apache/parquet/schema/Types/Builder/repetition(org.apache.parquet.schema.Type.Repetition)
org/apache/parquet/schema/Types/BaseMapBuilder/GroupKeyBuilder/listValue(org.apache.parquet.schema.Type.Repetition)#org/apache/parquet/schema/Types/BaseGroupBuilder/build(java.lang.String)
org/apache/parquet/proto/ProtoMessageConverter/ProtoStringConverter/addBinary(org.apache.parquet.io.api.Binary)#org/apache/parquet/io/api/Binary/toStringUsingUTF8()
org/apache/parquet/proto/ProtoMessageConverter/ProtoStringConverter/addBinary(org.apache.parquet.io.api.Binary)#org/apache/parquet/proto/ProtoMessageConverter/ParentValueContainer/add(java.lang.Object)
org/apache/parquet/hive/internal/AbstractHiveBinding/getColumns(java.lang.String)#java/util/List/removeAll(java.util.Collection)
org/apache/parquet/thrift/struct/CompatibilityReport/toString()#org/apache/parquet/thrift/struct/CompatibilityReport/prettyMessages()
org/apache/parquet/thrift/struct/CompatibilityReport/fail(java.lang.String)#java/util/List/add(E)
org/apache/parquet/thrift/struct/CompatibilityReport/emptyStruct(java.lang.String)#java/util/List/add(E)
org/apache/parquet/thrift/struct/CompatibilityReport/prettyMessages()#org/apache/parquet/Strings/join(java.lang.Iterable,java.lang.String)
org/apache/parquet/proto/ProtoMessageConverter/ProtoDoubleConverter/addDouble(double)#org/apache/parquet/proto/ProtoMessageConverter/ParentValueContainer/add(java.lang.Object)
org/apache/parquet/scrooge/ParquetScroogeSchemeTest/ObjectToStringFunction/operate(org.apache.parquet.cascading.FlowProcess,org.apache.parquet.cascading.FunctionCall)#java/lang/Object/toString()
org/apache/parquet/pig/convert/MapConverter/MapKeyValueConverter/end()#java/lang/Object/toString()
org/apache/parquet/pig/convert/MapConverter/MapKeyValueConverter/end()#java/util/Map/put(K,V)
org/apache/parquet/pig/convert/MapConverter/MapKeyValueConverter/getConverter(int)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/parquet/hive/TestHiveBindingFactory/NoopClassLoader/loadClass(java.lang.String)#java/lang/ClassNotFoundException/ClassNotFoundException(java.lang.String)
org/apache/parquet/column/values/delta/DeltaBinaryPackingConfig/readConfig(java.io.InputStream)#org/apache/parquet/column/values/delta/DeltaBinaryPackingConfig/DeltaBinaryPackingConfig(int,int)
org/apache/parquet/column/values/delta/DeltaBinaryPackingConfig/readConfig(java.io.InputStream)#org/apache/parquet/bytes/BytesUtils/readUnsignedVarInt(java.io.InputStream)
org/apache/parquet/column/values/delta/DeltaBinaryPackingConfig/toBytesInput()#org/apache/parquet/bytes/BytesInput/concat(org.apache.parquet.bytes.BytesInput[])
org/apache/parquet/column/values/delta/DeltaBinaryPackingConfig/toBytesInput()#org/apache/parquet/bytes/BytesInput/fromUnsignedVarInt(int)
org/apache/parquet/thrift/projection/amend/ProtocolEventsAmender/checkMap(java.util.Iterator,org.apache.parquet.thrift.struct.ThriftField)#org/apache/parquet/thrift/struct/ThriftType/MapType/getKey()
org/apache/parquet/thrift/projection/amend/ProtocolEventsAmender/checkMap(java.util.Iterator,org.apache.parquet.thrift.struct.ThriftField)#org/apache/parquet/thrift/projection/amend/ProtocolEventsAmender/checkField(byte,java.util.Iterator,org.apache.parquet.thrift.struct.ThriftField)
org/apache/parquet/thrift/projection/amend/ProtocolEventsAmender/checkMap(java.util.Iterator,org.apache.parquet.thrift.struct.ThriftField)#org/apache/parquet/thrift/struct/ThriftField/getType()
org/apache/parquet/thrift/projection/amend/ProtocolEventsAmender/checkMap(java.util.Iterator,org.apache.parquet.thrift.struct.ThriftField)#org/apache/parquet/thrift/projection/amend/ProtocolEventsAmender/acceptProtocol(org.apache.parquet.hadoop.thrift.TProtocol)
org/apache/parquet/thrift/projection/amend/ProtocolEventsAmender/checkMap(java.util.Iterator,org.apache.parquet.thrift.struct.ThriftField)#org/apache/parquet/thrift/struct/ThriftType/MapType/getValue()
org/apache/parquet/thrift/projection/amend/ProtocolEventsAmender/amendMissingRequiredFields(org.apache.parquet.thrift.struct.ThriftType.StructType)#org/apache/parquet/thrift/projection/amend/ProtocolEventsAmender/checkStruct(java.util.Iterator,org.apache.parquet.thrift.struct.ThriftType.StructType)
org/apache/parquet/thrift/projection/amend/ProtocolEventsAmender/isRequired(org.apache.parquet.thrift.struct.ThriftField)#org/apache/parquet/thrift/struct/ThriftField/getRequirement()
org/apache/parquet/thrift/projection/amend/ProtocolEventsAmender/checkSet(java.util.Iterator,org.apache.parquet.thrift.struct.ThriftField)#org/apache/parquet/thrift/projection/amend/ProtocolEventsAmender/checkField(byte,java.util.Iterator,org.apache.parquet.thrift.struct.ThriftField)
org/apache/parquet/thrift/projection/amend/ProtocolEventsAmender/checkSet(java.util.Iterator,org.apache.parquet.thrift.struct.ThriftField)#org/apache/parquet/thrift/struct/ThriftField/getType()
org/apache/parquet/thrift/projection/amend/ProtocolEventsAmender/checkSet(java.util.Iterator,org.apache.parquet.thrift.struct.ThriftField)#org/apache/parquet/thrift/projection/amend/ProtocolEventsAmender/acceptProtocol(org.apache.parquet.hadoop.thrift.TProtocol)
org/apache/parquet/thrift/projection/amend/ProtocolEventsAmender/checkSet(java.util.Iterator,org.apache.parquet.thrift.struct.ThriftField)#org/apache/parquet/thrift/struct/ThriftType/SetType/getValues()
org/apache/parquet/thrift/projection/amend/ProtocolEventsAmender/checkField(byte,java.util.Iterator,org.apache.parquet.thrift.struct.ThriftField)#org/apache/parquet/thrift/projection/amend/ProtocolEventsAmender/checkSet(java.util.Iterator,org.apache.parquet.thrift.struct.ThriftField)
org/apache/parquet/thrift/projection/amend/ProtocolEventsAmender/checkField(byte,java.util.Iterator,org.apache.parquet.thrift.struct.ThriftField)#org/apache/parquet/thrift/struct/ThriftField/getType()
org/apache/parquet/thrift/projection/amend/ProtocolEventsAmender/checkField(byte,java.util.Iterator,org.apache.parquet.thrift.struct.ThriftField)#org/apache/parquet/thrift/projection/amend/ProtocolEventsAmender/checkMap(java.util.Iterator,org.apache.parquet.thrift.struct.ThriftField)
org/apache/parquet/thrift/projection/amend/ProtocolEventsAmender/checkField(byte,java.util.Iterator,org.apache.parquet.thrift.struct.ThriftField)#org/apache/parquet/thrift/projection/amend/ProtocolEventsAmender/checkPrimitiveField(byte,java.util.Iterator)
org/apache/parquet/thrift/projection/amend/ProtocolEventsAmender/checkField(byte,java.util.Iterator,org.apache.parquet.thrift.struct.ThriftField)#org/apache/parquet/thrift/projection/amend/ProtocolEventsAmender/checkStruct(java.util.Iterator,org.apache.parquet.thrift.struct.ThriftType.StructType)
org/apache/parquet/thrift/projection/amend/ProtocolEventsAmender/checkField(byte,java.util.Iterator,org.apache.parquet.thrift.struct.ThriftField)#org/apache/parquet/thrift/projection/amend/ProtocolEventsAmender/checkList(java.util.Iterator,org.apache.parquet.thrift.struct.ThriftField)
org/apache/parquet/thrift/projection/amend/ProtocolEventsAmender/checkStruct(java.util.Iterator,org.apache.parquet.thrift.struct.ThriftType.StructType)#org/apache/parquet/thrift/projection/amend/ProtocolEventsAmender/checkField(byte,java.util.Iterator,org.apache.parquet.thrift.struct.ThriftField)
org/apache/parquet/thrift/projection/amend/ProtocolEventsAmender/checkStruct(java.util.Iterator,org.apache.parquet.thrift.struct.ThriftType.StructType)#org/apache/parquet/thrift/projection/amend/ProtocolEventsAmender/acceptProtocol(org.apache.parquet.hadoop.thrift.TProtocol)
org/apache/parquet/thrift/projection/amend/ProtocolEventsAmender/checkStruct(java.util.Iterator,org.apache.parquet.thrift.struct.ThriftType.StructType)#java/util/Set/add(E)
org/apache/parquet/thrift/projection/amend/ProtocolEventsAmender/checkStruct(java.util.Iterator,org.apache.parquet.thrift.struct.ThriftType.StructType)#java/util/Set/contains(java.lang.Object)
org/apache/parquet/thrift/projection/amend/ProtocolEventsAmender/checkStruct(java.util.Iterator,org.apache.parquet.thrift.struct.ThriftType.StructType)#org/apache/parquet/thrift/projection/amend/DefaultProtocolEventsGenerator/DefaultProtocolEventsGenerator()
org/apache/parquet/thrift/projection/amend/ProtocolEventsAmender/checkStruct(java.util.Iterator,org.apache.parquet.thrift.struct.ThriftType.StructType)#org/apache/parquet/thrift/struct/ThriftType/StructType/getChildren()
org/apache/parquet/thrift/projection/amend/ProtocolEventsAmender/checkStruct(java.util.Iterator,org.apache.parquet.thrift.struct.ThriftType.StructType)#org/apache/parquet/thrift/projection/amend/ProtocolEventsAmender/isRequired(org.apache.parquet.thrift.struct.ThriftField)
org/apache/parquet/thrift/projection/amend/ProtocolEventsAmender/checkStruct(java.util.Iterator,org.apache.parquet.thrift.struct.ThriftType.StructType)#java/util/HashSet/HashSet()
org/apache/parquet/thrift/projection/amend/ProtocolEventsAmender/checkStruct(java.util.Iterator,org.apache.parquet.thrift.struct.ThriftType.StructType)#org/apache/parquet/thrift/struct/ThriftType/StructType/getChildById(short)
org/apache/parquet/thrift/projection/amend/ProtocolEventsAmender/checkStruct(java.util.Iterator,org.apache.parquet.thrift.struct.ThriftType.StructType)#org/apache/parquet/thrift/projection/amend/DefaultProtocolEventsGenerator/createProtocolEventsForField(org.apache.parquet.thrift.struct.ThriftField)
org/apache/parquet/thrift/projection/amend/ProtocolEventsAmender/checkStruct(java.util.Iterator,org.apache.parquet.thrift.struct.ThriftType.StructType)#org/apache/parquet/thrift/projection/amend/ProtocolEventsAmender/isStopField(org.apache.parquet.thrift.projection.amend.TField)
org/apache/parquet/thrift/projection/amend/ProtocolEventsAmender/checkStruct(java.util.Iterator,org.apache.parquet.thrift.struct.ThriftType.StructType)#org/apache/parquet/thrift/struct/ThriftField/getFieldId()
org/apache/parquet/thrift/projection/amend/ProtocolEventsAmender/checkList(java.util.Iterator,org.apache.parquet.thrift.struct.ThriftField)#org/apache/parquet/thrift/struct/ThriftType/ListType/getValues()
org/apache/parquet/thrift/projection/amend/ProtocolEventsAmender/checkList(java.util.Iterator,org.apache.parquet.thrift.struct.ThriftField)#org/apache/parquet/thrift/projection/amend/ProtocolEventsAmender/checkField(byte,java.util.Iterator,org.apache.parquet.thrift.struct.ThriftField)
org/apache/parquet/thrift/projection/amend/ProtocolEventsAmender/checkList(java.util.Iterator,org.apache.parquet.thrift.struct.ThriftField)#org/apache/parquet/thrift/struct/ThriftField/getType()
org/apache/parquet/thrift/projection/amend/ProtocolEventsAmender/checkList(java.util.Iterator,org.apache.parquet.thrift.struct.ThriftField)#org/apache/parquet/thrift/projection/amend/ProtocolEventsAmender/acceptProtocol(org.apache.parquet.hadoop.thrift.TProtocol)
org/apache/parquet/thrift/projection/amend/ProtocolEventsAmender/checkPrimitiveField(byte,java.util.Iterator)#org/apache/parquet/thrift/projection/amend/ProtocolEventsAmender/acceptProtocol(org.apache.parquet.hadoop.thrift.TProtocol)
org/apache/parquet/avro/AvroConverters/FieldCharConverter/addInt(int)#org/apache/parquet/avro/ParentValueContainer/addChar(char)
org/apache/parquet/thrift/ThriftRecordConverter/MapKeyValueConverter/getConverter(int)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/parquet/hadoop/TestInputOutputFormatWithPadding/Writer/map(org.apache.parquet.hadoop.LongWritable,org.apache.hadoop.hive.serde2.objectinspector.primitive.Text,org.apache.parquet.hadoop.Context)#java/lang/String/length()
org/apache/parquet/hadoop/TestInputOutputFormatWithPadding/Writer/map(org.apache.parquet.hadoop.LongWritable,org.apache.hadoop.hive.serde2.objectinspector.primitive.Text,org.apache.parquet.hadoop.Context)#java/util/UUID/randomUUID()
org/apache/parquet/hadoop/TestInputOutputFormatWithPadding/Writer/map(org.apache.parquet.hadoop.LongWritable,org.apache.hadoop.hive.serde2.objectinspector.primitive.Text,org.apache.parquet.hadoop.Context)#org/apache/parquet/example/data/Group/add(int,org.apache.parquet.io.api.Binary)
org/apache/parquet/hadoop/TestInputOutputFormatWithPadding/Writer/map(org.apache.parquet.hadoop.LongWritable,org.apache.hadoop.hive.serde2.objectinspector.primitive.Text,org.apache.parquet.hadoop.Context)#java/util/UUID/toString()
org/apache/parquet/hadoop/TestInputOutputFormatWithPadding/Writer/map(org.apache.parquet.hadoop.LongWritable,org.apache.hadoop.hive.serde2.objectinspector.primitive.Text,org.apache.parquet.hadoop.Context)#org/apache/parquet/example/data/simple/SimpleGroupFactory/newGroup()
org/apache/parquet/hadoop/TestInputOutputFormatWithPadding/Writer/map(org.apache.parquet.hadoop.LongWritable,org.apache.hadoop.hive.serde2.objectinspector.primitive.Text,org.apache.parquet.hadoop.Context)#org/apache/parquet/io/api/Binary/fromString(java.lang.String)
org/apache/parquet/hadoop/TestInputOutputFormatWithPadding/Writer/map(org.apache.parquet.hadoop.LongWritable,org.apache.hadoop.hive.serde2.objectinspector.primitive.Text,org.apache.parquet.hadoop.Context)#java/lang/String/substring(int,int)
org/apache/parquet/pig/convert/TupleRecordMaterializer/getCurrentRecord()#org/apache/parquet/pig/convert/TupleConverter/getCurrentTuple()
org/apache/parquet/statistics/TestStatistics/testStatistics()#org/apache/parquet/statistics/TestStatistics/DataContext/DataContext(long,java.io.File,int,int,boolean,org.apache.parquet.column.ParquetProperties.WriterVersion)
org/apache/parquet/statistics/TestStatistics/testStatistics()#java/io/PrintStream/println(java.lang.String)
org/apache/parquet/statistics/TestStatistics/testStatistics()#java/util/Arrays/asList(T[])
org/apache/parquet/statistics/TestStatistics/testStatistics()#org/apache/parquet/statistics/TestStatistics/DataGenerationContext/writeAndTest(org.apache.parquet.statistics.TestStatistics.DataGenerationContext.WriteContext)
org/apache/parquet/statistics/TestStatistics/testStatistics()#java/util/Random/Random(long)
org/apache/parquet/statistics/TestStatistics/testStatistics()#java/util/Random/nextLong()
org/apache/parquet/statistics/TestStatistics/testStatistics()#java/io/File/delete()
org/apache/parquet/statistics/TestStatistics/testStatistics()#java/util/Random/nextInt(int)
org/apache/parquet/statistics/TestStatistics/testStatistics()#java/lang/String/format(java.lang.String,java.lang.Object[])
org/apache/parquet/statistics/TestStatistics/getValidatingConverter(org.apache.parquet.column.page.DataPage,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)#org/apache/parquet/schema/PrimitiveType/PrimitiveTypeName/convert(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeNameConverter)
org/apache/parquet/statistics/TestStatistics/getValidatingConverter(org.apache.parquet.column.page.DataPage,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)#org/apache/parquet/statistics/TestStatistics/getValidatingConverter(org/apache/parquet/column/page/DataPage,org/apache/parquet/schema/PrimitiveType/PrimitiveTypeName)/$anonymous1/()
org/apache/parquet/statistics/TestStatistics/getStatisticsFromPageHeader(org.apache.parquet.column.page.DataPage)#org/apache/parquet/column/page/DataPage/accept(org.apache.parquet.column.page.DataPage.Visitor)
org/apache/parquet/statistics/TestStatistics/getStatisticsFromPageHeader(org.apache.parquet.column.page.DataPage)#org/apache/parquet/statistics/TestStatistics/getStatisticsFromPageHeader(org/apache/parquet/column/page/DataPage)/$anonymous1/()
org/apache/parquet/filter2/recordlevel/PhoneBookWriter/PhoneNumber/equals(java.lang.Object)#java/lang/String/equals(java.lang.Object)
org/apache/parquet/filter2/recordlevel/PhoneBookWriter/PhoneNumber/equals(java.lang.Object)#java/lang/Object/getClass()
org/apache/parquet/filter2/recordlevel/PhoneBookWriter/PhoneNumber/hashCode()#java/lang/String/hashCode()
org/apache/parquet/tools/util/PrettyPrintWriter/Builder/build()#org/apache/parquet/tools/util/PrettyPrintWriter/PrettyPrintWriter(java.io.OutputStream,boolean,boolean,boolean,org.apache.parquet.tools.util.PrettyPrintWriter.Span,int,int,char,int,int,long,boolean,org.apache.parquet.tools.util.PrettyPrintWriter.WhiteSpaceHandler)
org/apache/parquet/tools/util/PrettyPrintWriter/Builder/withAutoCrop(int)#org/apache/parquet/tools/util/PrettyPrintWriter/Builder/withAutoCrop(int,org.apache.parquet.tools.util.PrettyPrintWriter.Span)
org/apache/parquet/tools/util/PrettyPrintWriter/Builder/withAutoCrop(int,java.lang.String)#org/apache/parquet/tools/util/PrettyPrintWriter/mkspan(java.lang.String)
org/apache/parquet/tools/util/PrettyPrintWriter/Builder/withAutoCrop(int,java.lang.String)#org/apache/parquet/tools/util/PrettyPrintWriter/Builder/withAutoCrop(int,org.apache.parquet.tools.util.PrettyPrintWriter.Span)
org/apache/parquet/tools/util/PrettyPrintWriter/Builder/withAutoCrop()#org/apache/parquet/tools/util/PrettyPrintWriter/Builder/withAutoCrop(int)
org/apache/parquet/tools/util/PrettyPrintWriter/Builder/withAutoColumn()#org/apache/parquet/tools/util/PrettyPrintWriter/Builder/withAutoColumn(char)
org/apache/parquet/tools/util/PrettyPrintWriter/Builder/withAutoColumn(char)#org/apache/parquet/tools/util/PrettyPrintWriter/Builder/withAutoColumn(char,int)
org/apache/parquet/scrooge/ScroogeWriteSupport/getScroogeClass(org.apache.parquet.hadoop.Configuration)#org/apache/parquet/hadoop/thrift/AbstractThriftWriteSupport/getGenericThriftClass(org.apache.parquet.hadoop.Configuration)
org/apache/parquet/scrooge/ScroogeWriteSupport/write(T)#org/apache/parquet/io/ParquetEncodingException/ParquetEncodingException(java.lang.String)
org/apache/parquet/scrooge/ScroogeWriteSupport/getThriftStruct()#org/apache/parquet/scrooge/ScroogeStructConverter/ScroogeStructConverter()
org/apache/parquet/scrooge/ScroogeWriteSupport/getThriftStruct()#org/apache/parquet/scrooge/ScroogeStructConverter/convert(java.lang.Class)
org/apache/parquet/scrooge/ScroogeWriteSupport/setScroogeClass(org.apache.parquet.hadoop.Configuration,java.lang.Class)#org/apache/parquet/hadoop/thrift/AbstractThriftWriteSupport/setGenericThriftClass(org.apache.parquet.hadoop.Configuration,java.lang.Class)
org/apache/parquet/filter2/IncrementallyUpdatedFilterPredicateGenerator/addUdpCase(org.apache.parquet.filter2.IncrementallyUpdatedFilterPredicateGenerator.TypeInfo,boolean)#org/apache/parquet/filter2/IncrementallyUpdatedFilterPredicateGenerator/add(java.lang.String)
org/apache/parquet/filter2/IncrementallyUpdatedFilterPredicateGenerator/run()#org/apache/parquet/filter2/IncrementallyUpdatedFilterPredicateGenerator/addUdpBegin()
org/apache/parquet/filter2/IncrementallyUpdatedFilterPredicateGenerator/run()#org/apache/parquet/filter2/IncrementallyUpdatedFilterPredicateGenerator/addUdpCase(org.apache.parquet.filter2.IncrementallyUpdatedFilterPredicateGenerator.TypeInfo,boolean)
org/apache/parquet/filter2/IncrementallyUpdatedFilterPredicateGenerator/run()#org/apache/parquet/filter2/IncrementallyUpdatedFilterPredicateGenerator/addVisitEnd()
org/apache/parquet/filter2/IncrementallyUpdatedFilterPredicateGenerator/run()#java/io/OutputStreamWriter/close()
org/apache/parquet/filter2/IncrementallyUpdatedFilterPredicateGenerator/run()#org/apache/parquet/filter2/IncrementallyUpdatedFilterPredicateGenerator/addInequalityCase(org.apache.parquet.filter2.IncrementallyUpdatedFilterPredicateGenerator.TypeInfo,java.lang.String)
org/apache/parquet/filter2/IncrementallyUpdatedFilterPredicateGenerator/run()#org/apache/parquet/filter2/IncrementallyUpdatedFilterPredicateGenerator/addVisitBegin(java.lang.String)
org/apache/parquet/filter2/IncrementallyUpdatedFilterPredicateGenerator/run()#org/apache/parquet/filter2/IncrementallyUpdatedFilterPredicateGenerator/add(java.lang.String)
org/apache/parquet/filter2/IncrementallyUpdatedFilterPredicateGenerator/run()#org/apache/parquet/filter2/IncrementallyUpdatedFilterPredicateGenerator/addEqNotEqCase(org.apache.parquet.filter2.IncrementallyUpdatedFilterPredicateGenerator.TypeInfo,boolean)
org/apache/parquet/filter2/IncrementallyUpdatedFilterPredicateGenerator/addVisitEnd()#org/apache/parquet/filter2/IncrementallyUpdatedFilterPredicateGenerator/add(java.lang.String)
org/apache/parquet/filter2/IncrementallyUpdatedFilterPredicateGenerator/main(java.lang.String[])#java/io/IOException/IOException(java.lang.String)
org/apache/parquet/filter2/IncrementallyUpdatedFilterPredicateGenerator/main(java.lang.String[])#org/apache/parquet/filter2/IncrementallyUpdatedFilterPredicateGenerator/run()
org/apache/parquet/filter2/IncrementallyUpdatedFilterPredicateGenerator/main(java.lang.String[])#java/io/File/getAbsoluteFile()
org/apache/parquet/filter2/IncrementallyUpdatedFilterPredicateGenerator/main(java.lang.String[])#java/io/File/exists()
org/apache/parquet/filter2/IncrementallyUpdatedFilterPredicateGenerator/main(java.lang.String[])#java/io/File/File(java.lang.String)
org/apache/parquet/filter2/IncrementallyUpdatedFilterPredicateGenerator/main(java.lang.String[])#org/apache/parquet/filter2/IncrementallyUpdatedFilterPredicateGenerator/IncrementallyUpdatedFilterPredicateGenerator(java.io.File)
org/apache/parquet/filter2/IncrementallyUpdatedFilterPredicateGenerator/main(java.lang.String[])#java/io/File/mkdirs()
org/apache/parquet/filter2/IncrementallyUpdatedFilterPredicateGenerator/main(java.lang.String[])#java/io/File/getParentFile()
org/apache/parquet/filter2/IncrementallyUpdatedFilterPredicateGenerator/addVisitBegin(java.lang.String)#org/apache/parquet/filter2/IncrementallyUpdatedFilterPredicateGenerator/add(java.lang.String)
org/apache/parquet/filter2/IncrementallyUpdatedFilterPredicateGenerator/addUdpBegin()#org/apache/parquet/filter2/IncrementallyUpdatedFilterPredicateGenerator/add(java.lang.String)
org/apache/parquet/filter2/IncrementallyUpdatedFilterPredicateGenerator/addInequalityCase(org.apache.parquet.filter2.IncrementallyUpdatedFilterPredicateGenerator.TypeInfo,java.lang.String)#org/apache/parquet/filter2/IncrementallyUpdatedFilterPredicateGenerator/add(java.lang.String)
org/apache/parquet/filter2/IncrementallyUpdatedFilterPredicateGenerator/add(java.lang.String)#java/io/Writer/write(java.lang.String)
org/apache/parquet/filter2/IncrementallyUpdatedFilterPredicateGenerator/addEqNotEqCase(org.apache.parquet.filter2.IncrementallyUpdatedFilterPredicateGenerator.TypeInfo,boolean)#org/apache/parquet/filter2/IncrementallyUpdatedFilterPredicateGenerator/compareEquality(java.lang.String,java.lang.String,boolean)
org/apache/parquet/filter2/IncrementallyUpdatedFilterPredicateGenerator/addEqNotEqCase(org.apache.parquet.filter2.IncrementallyUpdatedFilterPredicateGenerator.TypeInfo,boolean)#org/apache/parquet/filter2/IncrementallyUpdatedFilterPredicateGenerator/add(java.lang.String)
org/apache/parquet/column/values/bitpacking/SevenBitPackingWriter/finish()#org/apache/parquet/column/values/bitpacking/BaseBitPackingWriter/finish(int,long,java.io.OutputStream)
org/apache/parquet/column/values/bitpacking/SevenBitPackingWriter/write(int)#java/io/OutputStream/write(int)
org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/testDirectReadFullyPositionAndLimit()#java/nio/Buffer/reset()
org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/testDirectReadFullyPositionAndLimit()#org/apache/parquet/hadoop/util/MockInputStream/MockInputStream(int[])
org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/testDirectReadFullyPositionAndLimit()#java/nio/Buffer/limit(int)
org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/testDirectReadFullyPositionAndLimit()#org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/MockBufferReader/MockBufferReader(org.apache.parquet.hadoop.FSDataInputStream)
org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/testDirectReadFullyPositionAndLimit()#java/nio/Buffer/position()
org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/testDirectReadFullyPositionAndLimit()#java/nio/Buffer/position(int)
org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/testDirectReadFullyPositionAndLimit()#java/nio/Buffer/mark()
org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/testDirectReadFullyPositionAndLimit()#java/nio/Buffer/limit()
org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/testDirectReadFullyPositionAndLimit()#java/nio/ByteBuffer/wrap(byte[],int,int)
org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/testDirectReadFullyPositionAndLimit()#org/apache/parquet/hadoop/util/H2SeekableInputStream/readFully(org.apache.parquet.hadoop.util.H2SeekableInputStream.Reader,java.nio.ByteBuffer)
org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/testDirectReadFullyPositionAndLimit()#java/nio/ByteBuffer/allocateDirect(int)
org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/testHeapReadFullySmallReads()#java/nio/ByteBuffer/allocate(int)
org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/testHeapReadFullySmallReads()#org/apache/parquet/hadoop/util/MockInputStream/MockInputStream(int[])
org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/testHeapReadFullySmallReads()#org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/MockBufferReader/MockBufferReader(org.apache.parquet.hadoop.FSDataInputStream)
org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/testHeapReadFullySmallReads()#java/nio/Buffer/position()
org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/testHeapReadFullySmallReads()#java/nio/Buffer/flip()
org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/testHeapReadFullySmallReads()#java/nio/Buffer/limit()
org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/testHeapReadFullySmallReads()#org/apache/parquet/hadoop/util/H2SeekableInputStream/readFully(org.apache.parquet.hadoop.util.H2SeekableInputStream.Reader,java.nio.ByteBuffer)
org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/testHeapReadFullySmallReads()#java/nio/ByteBuffer/wrap(byte[])
org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/testDirectReadFullySmallBuffer()#org/apache/parquet/hadoop/util/MockInputStream/MockInputStream(int[])
org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/testDirectReadFullySmallBuffer()#org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/MockBufferReader/MockBufferReader(org.apache.parquet.hadoop.FSDataInputStream)
org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/testDirectReadFullySmallBuffer()#java/nio/Buffer/position()
org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/testDirectReadFullySmallBuffer()#java/nio/Buffer/flip()
org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/testDirectReadFullySmallBuffer()#java/nio/Buffer/limit()
org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/testDirectReadFullySmallBuffer()#java/nio/ByteBuffer/wrap(byte[],int,int)
org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/testDirectReadFullySmallBuffer()#org/apache/parquet/hadoop/util/H2SeekableInputStream/readFully(org.apache.parquet.hadoop.util.H2SeekableInputStream.Reader,java.nio.ByteBuffer)
org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/testDirectReadFullySmallBuffer()#java/nio/ByteBuffer/allocateDirect(int)
org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/testDirectReadFullySmallReads()#org/apache/parquet/hadoop/util/MockInputStream/MockInputStream(int[])
org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/testDirectReadFullySmallReads()#org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/MockBufferReader/MockBufferReader(org.apache.parquet.hadoop.FSDataInputStream)
org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/testDirectReadFullySmallReads()#java/nio/Buffer/position()
org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/testDirectReadFullySmallReads()#java/nio/Buffer/flip()
org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/testDirectReadFullySmallReads()#java/nio/Buffer/limit()
org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/testDirectReadFullySmallReads()#org/apache/parquet/hadoop/util/H2SeekableInputStream/readFully(org.apache.parquet.hadoop.util.H2SeekableInputStream.Reader,java.nio.ByteBuffer)
org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/testDirectReadFullySmallReads()#java/nio/ByteBuffer/allocateDirect(int)
org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/testDirectReadFullySmallReads()#java/nio/ByteBuffer/wrap(byte[])
org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/testDirectReadFullyJustRight()#org/apache/parquet/hadoop/util/MockInputStream/MockInputStream(int[])
org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/testDirectReadFullyJustRight()#org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/MockBufferReader/MockBufferReader(org.apache.parquet.hadoop.FSDataInputStream)
org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/testDirectReadFullyJustRight()#java/nio/Buffer/position()
org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/testDirectReadFullyJustRight()#java/nio/Buffer/flip()
org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/testDirectReadFullyJustRight()#java/nio/Buffer/limit()
org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/testDirectReadFullyJustRight()#org/apache/parquet/hadoop/util/H2SeekableInputStream/readFully(org.apache.parquet.hadoop.util.H2SeekableInputStream.Reader,java.nio.ByteBuffer)
org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/testDirectReadFullyJustRight()#java/nio/ByteBuffer/allocateDirect(int)
org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/testDirectReadFullyJustRight()#java/nio/ByteBuffer/wrap(byte[])
org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/testHeapReadFullyJustRight()#java/nio/ByteBuffer/allocate(int)
org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/testHeapReadFullyJustRight()#org/apache/parquet/hadoop/util/MockInputStream/MockInputStream(int[])
org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/testHeapReadFullyJustRight()#org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/MockBufferReader/MockBufferReader(org.apache.parquet.hadoop.FSDataInputStream)
org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/testHeapReadFullyJustRight()#java/nio/Buffer/position()
org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/testHeapReadFullyJustRight()#java/nio/Buffer/flip()
org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/testHeapReadFullyJustRight()#java/nio/Buffer/limit()
org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/testHeapReadFullyJustRight()#org/apache/parquet/hadoop/util/H2SeekableInputStream/readFully(org.apache.parquet.hadoop.util.H2SeekableInputStream.Reader,java.nio.ByteBuffer)
org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/testHeapReadFullyJustRight()#java/nio/ByteBuffer/wrap(byte[])
org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/testHeapReadFullyPosition()#java/nio/ByteBuffer/allocate(int)
org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/testHeapReadFullyPosition()#java/nio/Buffer/reset()
org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/testHeapReadFullyPosition()#org/apache/parquet/hadoop/util/MockInputStream/MockInputStream(int[])
org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/testHeapReadFullyPosition()#org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/MockBufferReader/MockBufferReader(org.apache.parquet.hadoop.FSDataInputStream)
org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/testHeapReadFullyPosition()#java/nio/Buffer/position()
org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/testHeapReadFullyPosition()#java/nio/Buffer/position(int)
org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/testHeapReadFullyPosition()#java/nio/Buffer/mark()
org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/testHeapReadFullyPosition()#java/nio/Buffer/limit()
org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/testHeapReadFullyPosition()#java/nio/ByteBuffer/wrap(byte[],int,int)
org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/testHeapReadFullyPosition()#org/apache/parquet/hadoop/util/H2SeekableInputStream/readFully(org.apache.parquet.hadoop.util.H2SeekableInputStream.Reader,java.nio.ByteBuffer)
org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/testHeapReadFullyPositionAndLimit()#java/nio/ByteBuffer/allocate(int)
org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/testHeapReadFullyPositionAndLimit()#java/nio/Buffer/reset()
org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/testHeapReadFullyPositionAndLimit()#org/apache/parquet/hadoop/util/MockInputStream/MockInputStream(int[])
org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/testHeapReadFullyPositionAndLimit()#java/nio/Buffer/limit(int)
org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/testHeapReadFullyPositionAndLimit()#org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/MockBufferReader/MockBufferReader(org.apache.parquet.hadoop.FSDataInputStream)
org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/testHeapReadFullyPositionAndLimit()#java/nio/Buffer/position()
org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/testHeapReadFullyPositionAndLimit()#java/nio/Buffer/position(int)
org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/testHeapReadFullyPositionAndLimit()#java/nio/Buffer/mark()
org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/testHeapReadFullyPositionAndLimit()#java/nio/Buffer/limit()
org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/testHeapReadFullyPositionAndLimit()#java/nio/ByteBuffer/wrap(byte[],int,int)
org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/testHeapReadFullyPositionAndLimit()#org/apache/parquet/hadoop/util/H2SeekableInputStream/readFully(org.apache.parquet.hadoop.util.H2SeekableInputStream.Reader,java.nio.ByteBuffer)
org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/testHeapReadFullyLimit()#java/nio/ByteBuffer/allocate(int)
org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/testHeapReadFullyLimit()#org/apache/parquet/hadoop/util/MockInputStream/MockInputStream(int[])
org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/testHeapReadFullyLimit()#java/nio/Buffer/limit(int)
org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/testHeapReadFullyLimit()#org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/MockBufferReader/MockBufferReader(org.apache.parquet.hadoop.FSDataInputStream)
org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/testHeapReadFullyLimit()#java/nio/Buffer/position()
org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/testHeapReadFullyLimit()#java/nio/Buffer/position(int)
org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/testHeapReadFullyLimit()#java/nio/Buffer/flip()
org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/testHeapReadFullyLimit()#java/nio/Buffer/limit()
org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/testHeapReadFullyLimit()#java/nio/ByteBuffer/wrap(byte[],int,int)
org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/testHeapReadFullyLimit()#org/apache/parquet/hadoop/util/H2SeekableInputStream/readFully(org.apache.parquet.hadoop.util.H2SeekableInputStream.Reader,java.nio.ByteBuffer)
org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/testHeapReadFullyLimit()#java/nio/ByteBuffer/wrap(byte[])
org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/testHeapReadFullyLargeBuffer()#java/nio/ByteBuffer/allocate(int)
org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/testHeapReadFullyLargeBuffer()#org/apache/parquet/hadoop/util/MockInputStream/MockInputStream(int[])
org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/testHeapReadFullyLargeBuffer()#org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/MockBufferReader/MockBufferReader(org.apache.parquet.hadoop.FSDataInputStream)
org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/testHeapReadFullyLargeBuffer()#java/nio/Buffer/position()
org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/testHeapReadFullyLargeBuffer()#java/nio/Buffer/limit()
org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/testHeapReadFullyLargeBuffer()#org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/testHeapReadFullyLargeBuffer()/$anonymous1/()
org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/testHeapReadFullyLargeBuffer()#org/apache/parquet/hadoop/TestUtils/assertThrows(java.lang.String,java.lang.Class,java.util.concurrent.Callable)
org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/testHeapReadFullySmallBuffer()#java/nio/ByteBuffer/allocate(int)
org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/testHeapReadFullySmallBuffer()#org/apache/parquet/hadoop/util/MockInputStream/MockInputStream(int[])
org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/testHeapReadFullySmallBuffer()#org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/MockBufferReader/MockBufferReader(org.apache.parquet.hadoop.FSDataInputStream)
org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/testHeapReadFullySmallBuffer()#java/nio/Buffer/position()
org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/testHeapReadFullySmallBuffer()#java/nio/Buffer/flip()
org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/testHeapReadFullySmallBuffer()#java/nio/Buffer/limit()
org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/testHeapReadFullySmallBuffer()#java/nio/ByteBuffer/wrap(byte[],int,int)
org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/testHeapReadFullySmallBuffer()#org/apache/parquet/hadoop/util/H2SeekableInputStream/readFully(org.apache.parquet.hadoop.util.H2SeekableInputStream.Reader,java.nio.ByteBuffer)
org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/testDirectReadFullyLargeBuffer()#org/apache/parquet/hadoop/util/MockInputStream/MockInputStream(int[])
org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/testDirectReadFullyLargeBuffer()#org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/MockBufferReader/MockBufferReader(org.apache.parquet.hadoop.FSDataInputStream)
org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/testDirectReadFullyLargeBuffer()#java/nio/Buffer/position()
org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/testDirectReadFullyLargeBuffer()#java/nio/Buffer/limit()
org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/testDirectReadFullyLargeBuffer()#org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/testDirectReadFullyLargeBuffer()/$anonymous1/()
org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/testDirectReadFullyLargeBuffer()#org/apache/parquet/hadoop/TestUtils/assertThrows(java.lang.String,java.lang.Class,java.util.concurrent.Callable)
org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/testDirectReadFullyLargeBuffer()#java/nio/ByteBuffer/allocateDirect(int)
org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/testDirectReadFullyPosition()#java/nio/Buffer/reset()
org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/testDirectReadFullyPosition()#org/apache/parquet/hadoop/util/MockInputStream/MockInputStream(int[])
org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/testDirectReadFullyPosition()#org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/MockBufferReader/MockBufferReader(org.apache.parquet.hadoop.FSDataInputStream)
org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/testDirectReadFullyPosition()#java/nio/Buffer/position()
org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/testDirectReadFullyPosition()#java/nio/Buffer/position(int)
org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/testDirectReadFullyPosition()#java/nio/Buffer/mark()
org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/testDirectReadFullyPosition()#java/nio/Buffer/limit()
org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/testDirectReadFullyPosition()#java/nio/ByteBuffer/wrap(byte[],int,int)
org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/testDirectReadFullyPosition()#org/apache/parquet/hadoop/util/H2SeekableInputStream/readFully(org.apache.parquet.hadoop.util.H2SeekableInputStream.Reader,java.nio.ByteBuffer)
org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/testDirectReadFullyPosition()#java/nio/ByteBuffer/allocateDirect(int)
org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/testDirectReadFullyLimit()#org/apache/parquet/hadoop/util/MockInputStream/MockInputStream(int[])
org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/testDirectReadFullyLimit()#java/nio/Buffer/limit(int)
org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/testDirectReadFullyLimit()#org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/MockBufferReader/MockBufferReader(org.apache.parquet.hadoop.FSDataInputStream)
org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/testDirectReadFullyLimit()#java/nio/Buffer/position()
org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/testDirectReadFullyLimit()#java/nio/Buffer/position(int)
org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/testDirectReadFullyLimit()#java/nio/Buffer/flip()
org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/testDirectReadFullyLimit()#java/nio/Buffer/limit()
org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/testDirectReadFullyLimit()#java/nio/ByteBuffer/wrap(byte[],int,int)
org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/testDirectReadFullyLimit()#org/apache/parquet/hadoop/util/H2SeekableInputStream/readFully(org.apache.parquet.hadoop.util.H2SeekableInputStream.Reader,java.nio.ByteBuffer)
org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/testDirectReadFullyLimit()#java/nio/ByteBuffer/allocateDirect(int)
org/apache/parquet/hadoop/util/TestHadoop2ByteBufferReads/testDirectReadFullyLimit()#java/nio/ByteBuffer/wrap(byte[])
org/apache/parquet/avro/AvroParquetOutputFormat/setAvroDataSupplier(org.apache.parquet.hadoop.Job,java.lang.Class)#org/apache/parquet/avro/AvroWriteSupport/setAvroDataSupplier(org.apache.parquet.hadoop.Configuration,java.lang.Class)
org/apache/parquet/avro/AvroParquetOutputFormat/setAvroDataSupplier(org.apache.parquet.hadoop.Job,java.lang.Class)#org/apache/parquet/hadoop/util/ContextUtil/getConfiguration(org.apache.parquet.hadoop.util.JobContext)
org/apache/parquet/avro/AvroParquetOutputFormat/setSchema(org.apache.parquet.hadoop.Job,org.apache.parquet.pig.Schema)#org/apache/parquet/avro/AvroWriteSupport/setSchema(org.apache.parquet.hadoop.Configuration,org.apache.parquet.pig.Schema)
org/apache/parquet/avro/AvroParquetOutputFormat/setSchema(org.apache.parquet.hadoop.Job,org.apache.parquet.pig.Schema)#org/apache/parquet/hadoop/util/ContextUtil/getConfiguration(org.apache.parquet.hadoop.util.JobContext)
org/apache/parquet/statistics/RandomValues/FixedGenerator/nextBinaryValue()#org/apache/parquet/statistics/RandomValues/FixedGenerator/nextValue()
org/apache/parquet/statistics/RandomValues/FixedGenerator/nextValue()#org/apache/parquet/io/api/Binary/fromReusedByteArray(byte[])
org/apache/parquet/statistics/RandomValues/FixedGenerator/nextValue()#org/apache/parquet/statistics/RandomValues/RandomValueGenerator/randomInt()
org/apache/parquet/hadoop/ParquetWriter/close()#org/apache/parquet/hadoop/InternalParquetRecordWriter/close()
org/apache/parquet/hadoop/ParquetWriter/close()#java/io/IOException/IOException(java.lang.Throwable)
org/apache/parquet/hadoop/ParquetWriter/close()#org/apache/parquet/hadoop/CodecFactory/release()
org/apache/parquet/hadoop/ParquetWriter/write(T)#org/apache/parquet/hadoop/InternalParquetRecordWriter/write(T)
org/apache/parquet/hadoop/ParquetWriter/write(T)#java/io/IOException/IOException(java.lang.Throwable)
org/apache/parquet/hadoop/ParquetWriter/getDataSize()#org/apache/parquet/hadoop/InternalParquetRecordWriter/getDataSize()
org/apache/parquet/glob/TestGlob/assertTooManyCloseBraces(java.lang.String)#org/apache/parquet/Strings/expandGlob(java.lang.String)
org/apache/parquet/glob/TestGlob/assertTooManyCloseBraces(java.lang.String)#java/lang/String/length()
org/apache/parquet/glob/TestGlob/assertTooManyCloseBraces(java.lang.String)#java/lang/Throwable/getMessage()
org/apache/parquet/glob/TestGlob/assertTooManyCloseBraces(java.lang.String)#java/lang/String/substring(int,int)
org/apache/parquet/glob/TestGlob/testNoGlobs()#org/apache/parquet/Strings/expandGlob(java.lang.String)
org/apache/parquet/glob/TestGlob/testNoGlobs()#java/util/Arrays/asList(T[])
org/apache/parquet/glob/TestGlob/testNested()#org/apache/parquet/Strings/expandGlob(java.lang.String)
org/apache/parquet/glob/TestGlob/testNested()#java/util/Arrays/asList(T[])
org/apache/parquet/glob/TestGlob/testSingleLevel()#org/apache/parquet/Strings/expandGlob(java.lang.String)
org/apache/parquet/glob/TestGlob/testSingleLevel()#java/util/Arrays/asList(T[])
org/apache/parquet/glob/TestGlob/testCommaCornerCases()#org/apache/parquet/Strings/expandGlob(java.lang.String)
org/apache/parquet/glob/TestGlob/testCommaCornerCases()#java/util/Arrays/asList(T[])
org/apache/parquet/glob/TestGlob/assertNotEnoughCloseBraces(java.lang.String)#org/apache/parquet/Strings/expandGlob(java.lang.String)
org/apache/parquet/glob/TestGlob/assertNotEnoughCloseBraces(java.lang.String)#java/lang/String/length()
org/apache/parquet/glob/TestGlob/assertNotEnoughCloseBraces(java.lang.String)#java/lang/Throwable/getMessage()
org/apache/parquet/glob/TestGlob/assertNotEnoughCloseBraces(java.lang.String)#java/lang/String/substring(int,int)
org/apache/parquet/glob/TestGlob/testCommaInTopLevel()#org/apache/parquet/Strings/expandGlob(java.lang.String)
org/apache/parquet/glob/TestGlob/testCommaInTopLevel()#java/lang/Throwable/getMessage()
org/apache/parquet/glob/TestGlob/testExtraBraces()#org/apache/parquet/Strings/expandGlob(java.lang.String)
org/apache/parquet/glob/TestGlob/testExtraBraces()#java/util/Arrays/asList(T[])
org/apache/parquet/glob/TestGlob/testMismatchedBraces()#org/apache/parquet/glob/TestGlob/assertTooManyCloseBraces(java.lang.String)
org/apache/parquet/glob/TestGlob/testMismatchedBraces()#org/apache/parquet/glob/TestGlob/assertNotEnoughCloseBraces(java.lang.String)
org/apache/parquet/glob/TestGlob/testEmptyGroup()#org/apache/parquet/Strings/expandGlob(java.lang.String)
org/apache/parquet/glob/TestGlob/testEmptyGroup()#java/util/Arrays/asList(T[])
org/apache/parquet/scrooge/ScroogeStructConverter/ScroogeEnumDesc/fromEnum(java.lang.Object)#org/apache/parquet/scrooge/ScroogeStructConverter/ScroogeEnumDesc/ScroogeEnumDesc()
org/apache/parquet/scrooge/ScroogeStructConverter/ScroogeEnumDesc/fromEnum(java.lang.Object)#java/lang/Object/getClass()
org/apache/parquet/scrooge/ScroogeStructConverter/ScroogeEnumDesc/fromEnum(java.lang.Object)#java/lang/reflect/Method/invoke(java.lang.Object,java.lang.Object[])
org/apache/parquet/scrooge/ScroogeStructConverter/ScroogeEnumDesc/fromEnum(java.lang.Object)#java/lang/Class/getMethod(java.lang.String,java.lang.Class<?>[])
org/apache/parquet/column/values/rle/TestRunLengthBitPackingHybridEncoder/testRLEOnly()#org/apache/parquet/column/values/rle/TestRunLengthBitPackingHybridEncoder/getRunLengthBitPackingHybridEncoder()
org/apache/parquet/column/values/rle/TestRunLengthBitPackingHybridEncoder/testRLEOnly()#org/apache/parquet/bytes/BytesUtils/readIntLittleEndianOnOneByte(java.io.InputStream)
org/apache/parquet/column/values/rle/TestRunLengthBitPackingHybridEncoder/testRLEOnly()#org/apache/parquet/column/values/rle/RunLengthBitPackingHybridEncoder/toBytes()
org/apache/parquet/column/values/rle/TestRunLengthBitPackingHybridEncoder/testRLEOnly()#org/apache/parquet/column/values/rle/RunLengthBitPackingHybridEncoder/writeInt(int)
org/apache/parquet/column/values/rle/TestRunLengthBitPackingHybridEncoder/testRLEOnly()#java/io/ByteArrayInputStream/read()
org/apache/parquet/column/values/rle/TestRunLengthBitPackingHybridEncoder/testRLEOnly()#java/io/ByteArrayInputStream/ByteArrayInputStream(byte[])
org/apache/parquet/column/values/rle/TestRunLengthBitPackingHybridEncoder/testRLEOnly()#org/apache/parquet/bytes/BytesUtils/readUnsignedVarInt(java.io.InputStream)
org/apache/parquet/column/values/rle/TestRunLengthBitPackingHybridEncoder/testRLEOnly()#org/apache/parquet/bytes/BytesInput/toByteArray()
org/apache/parquet/column/values/rle/TestRunLengthBitPackingHybridEncoder/getRunLengthBitPackingHybridEncoder()#org/apache/parquet/column/values/rle/TestRunLengthBitPackingHybridEncoder/getRunLengthBitPackingHybridEncoder(int,int,int)
org/apache/parquet/column/values/rle/TestRunLengthBitPackingHybridEncoder/testBitPackingOverflow()#org/apache/parquet/column/values/rle/TestRunLengthBitPackingHybridEncoder/getRunLengthBitPackingHybridEncoder()
org/apache/parquet/column/values/rle/TestRunLengthBitPackingHybridEncoder/testBitPackingOverflow()#java/util/List/get(int)
org/apache/parquet/column/values/rle/TestRunLengthBitPackingHybridEncoder/testBitPackingOverflow()#org/apache/parquet/column/values/rle/RunLengthBitPackingHybridEncoder/toBytes()
org/apache/parquet/column/values/rle/TestRunLengthBitPackingHybridEncoder/testBitPackingOverflow()#org/apache/parquet/column/values/rle/RunLengthBitPackingHybridEncoder/writeInt(int)
org/apache/parquet/column/values/rle/TestRunLengthBitPackingHybridEncoder/testBitPackingOverflow()#org/apache/parquet/column/values/rle/TestRunLengthBitPackingHybridEncoder/unpack(int,int,java.io.ByteArrayInputStream)
org/apache/parquet/column/values/rle/TestRunLengthBitPackingHybridEncoder/testBitPackingOverflow()#java/io/ByteArrayInputStream/read()
org/apache/parquet/column/values/rle/TestRunLengthBitPackingHybridEncoder/testBitPackingOverflow()#java/io/ByteArrayInputStream/ByteArrayInputStream(byte[])
org/apache/parquet/column/values/rle/TestRunLengthBitPackingHybridEncoder/testBitPackingOverflow()#org/apache/parquet/bytes/BytesUtils/readUnsignedVarInt(java.io.InputStream)
org/apache/parquet/column/values/rle/TestRunLengthBitPackingHybridEncoder/testBitPackingOverflow()#org/apache/parquet/bytes/BytesInput/toByteArray()
org/apache/parquet/column/values/rle/TestRunLengthBitPackingHybridEncoder/getRunLengthBitPackingHybridEncoder(int,int,int)#org/apache/parquet/column/values/rle/RunLengthBitPackingHybridEncoder/RunLengthBitPackingHybridEncoder(int,int,int,org.apache.parquet.bytes.ByteBufferAllocator)
org/apache/parquet/column/values/rle/TestRunLengthBitPackingHybridEncoder/getRunLengthBitPackingHybridEncoder(int,int,int)#org/apache/parquet/bytes/DirectByteBufferAllocator/DirectByteBufferAllocator()
org/apache/parquet/column/values/rle/TestRunLengthBitPackingHybridEncoder/testBitWidthZero()#org/apache/parquet/column/values/rle/TestRunLengthBitPackingHybridEncoder/getRunLengthBitPackingHybridEncoder(int,int,int)
org/apache/parquet/column/values/rle/TestRunLengthBitPackingHybridEncoder/testBitWidthZero()#org/apache/parquet/column/values/rle/RunLengthBitPackingHybridEncoder/toBytes()
org/apache/parquet/column/values/rle/TestRunLengthBitPackingHybridEncoder/testBitWidthZero()#org/apache/parquet/column/values/rle/RunLengthBitPackingHybridEncoder/writeInt(int)
org/apache/parquet/column/values/rle/TestRunLengthBitPackingHybridEncoder/testBitWidthZero()#java/io/ByteArrayInputStream/read()
org/apache/parquet/column/values/rle/TestRunLengthBitPackingHybridEncoder/testBitWidthZero()#java/io/ByteArrayInputStream/ByteArrayInputStream(byte[])
org/apache/parquet/column/values/rle/TestRunLengthBitPackingHybridEncoder/testBitWidthZero()#org/apache/parquet/bytes/BytesUtils/readUnsignedVarInt(java.io.InputStream)
org/apache/parquet/column/values/rle/TestRunLengthBitPackingHybridEncoder/testBitWidthZero()#org/apache/parquet/bytes/BytesInput/toByteArray()
org/apache/parquet/column/values/rle/TestRunLengthBitPackingHybridEncoder/testSwitchingModes()#org/apache/parquet/bytes/BytesUtils/readIntLittleEndianOnTwoBytes(java.io.InputStream)
org/apache/parquet/column/values/rle/TestRunLengthBitPackingHybridEncoder/testSwitchingModes()#org/apache/parquet/column/values/rle/TestRunLengthBitPackingHybridEncoder/getRunLengthBitPackingHybridEncoder(int,int,int)
org/apache/parquet/column/values/rle/TestRunLengthBitPackingHybridEncoder/testSwitchingModes()#java/util/List/get(int)
org/apache/parquet/column/values/rle/TestRunLengthBitPackingHybridEncoder/testSwitchingModes()#org/apache/parquet/column/values/rle/RunLengthBitPackingHybridEncoder/toBytes()
org/apache/parquet/column/values/rle/TestRunLengthBitPackingHybridEncoder/testSwitchingModes()#org/apache/parquet/column/values/rle/RunLengthBitPackingHybridEncoder/writeInt(int)
org/apache/parquet/column/values/rle/TestRunLengthBitPackingHybridEncoder/testSwitchingModes()#org/apache/parquet/column/values/rle/TestRunLengthBitPackingHybridEncoder/unpack(int,int,java.io.ByteArrayInputStream)
org/apache/parquet/column/values/rle/TestRunLengthBitPackingHybridEncoder/testSwitchingModes()#java/io/ByteArrayInputStream/read()
org/apache/parquet/column/values/rle/TestRunLengthBitPackingHybridEncoder/testSwitchingModes()#java/io/ByteArrayInputStream/ByteArrayInputStream(byte[])
org/apache/parquet/column/values/rle/TestRunLengthBitPackingHybridEncoder/testSwitchingModes()#org/apache/parquet/bytes/BytesUtils/readUnsignedVarInt(java.io.InputStream)
org/apache/parquet/column/values/rle/TestRunLengthBitPackingHybridEncoder/testSwitchingModes()#org/apache/parquet/bytes/BytesInput/toByteArray()
org/apache/parquet/column/values/rle/TestRunLengthBitPackingHybridEncoder/testBitPackingOnly()#org/apache/parquet/column/values/rle/TestRunLengthBitPackingHybridEncoder/getRunLengthBitPackingHybridEncoder()
org/apache/parquet/column/values/rle/TestRunLengthBitPackingHybridEncoder/testBitPackingOnly()#java/util/List/get(int)
org/apache/parquet/column/values/rle/TestRunLengthBitPackingHybridEncoder/testBitPackingOnly()#org/apache/parquet/column/values/rle/RunLengthBitPackingHybridEncoder/toBytes()
org/apache/parquet/column/values/rle/TestRunLengthBitPackingHybridEncoder/testBitPackingOnly()#org/apache/parquet/column/values/rle/RunLengthBitPackingHybridEncoder/writeInt(int)
org/apache/parquet/column/values/rle/TestRunLengthBitPackingHybridEncoder/testBitPackingOnly()#org/apache/parquet/column/values/rle/TestRunLengthBitPackingHybridEncoder/unpack(int,int,java.io.ByteArrayInputStream)
org/apache/parquet/column/values/rle/TestRunLengthBitPackingHybridEncoder/testBitPackingOnly()#java/io/ByteArrayInputStream/read()
org/apache/parquet/column/values/rle/TestRunLengthBitPackingHybridEncoder/testBitPackingOnly()#java/io/ByteArrayInputStream/ByteArrayInputStream(byte[])
org/apache/parquet/column/values/rle/TestRunLengthBitPackingHybridEncoder/testBitPackingOnly()#org/apache/parquet/bytes/BytesUtils/readUnsignedVarInt(java.io.InputStream)
org/apache/parquet/column/values/rle/TestRunLengthBitPackingHybridEncoder/testBitPackingOnly()#org/apache/parquet/bytes/BytesInput/toByteArray()
org/apache/parquet/column/values/rle/TestRunLengthBitPackingHybridEncoder/testRepeatedZeros()#org/apache/parquet/column/values/rle/TestRunLengthBitPackingHybridEncoder/getRunLengthBitPackingHybridEncoder()
org/apache/parquet/column/values/rle/TestRunLengthBitPackingHybridEncoder/testRepeatedZeros()#org/apache/parquet/bytes/BytesUtils/readIntLittleEndianOnOneByte(java.io.InputStream)
org/apache/parquet/column/values/rle/TestRunLengthBitPackingHybridEncoder/testRepeatedZeros()#org/apache/parquet/column/values/rle/RunLengthBitPackingHybridEncoder/toBytes()
org/apache/parquet/column/values/rle/TestRunLengthBitPackingHybridEncoder/testRepeatedZeros()#org/apache/parquet/column/values/rle/RunLengthBitPackingHybridEncoder/writeInt(int)
org/apache/parquet/column/values/rle/TestRunLengthBitPackingHybridEncoder/testRepeatedZeros()#java/io/ByteArrayInputStream/read()
org/apache/parquet/column/values/rle/TestRunLengthBitPackingHybridEncoder/testRepeatedZeros()#java/io/ByteArrayInputStream/ByteArrayInputStream(byte[])
org/apache/parquet/column/values/rle/TestRunLengthBitPackingHybridEncoder/testRepeatedZeros()#org/apache/parquet/bytes/BytesUtils/readUnsignedVarInt(java.io.InputStream)
org/apache/parquet/column/values/rle/TestRunLengthBitPackingHybridEncoder/testRepeatedZeros()#org/apache/parquet/bytes/BytesInput/toByteArray()
org/apache/parquet/column/values/rle/TestRunLengthBitPackingHybridEncoder/testPaddingZerosOnUnfinishedBitPackedRuns()#org/apache/parquet/column/values/rle/TestRunLengthBitPackingHybridEncoder/getRunLengthBitPackingHybridEncoder(int,int,int)
org/apache/parquet/column/values/rle/TestRunLengthBitPackingHybridEncoder/testPaddingZerosOnUnfinishedBitPackedRuns()#java/util/Arrays/asList(T[])
org/apache/parquet/column/values/rle/TestRunLengthBitPackingHybridEncoder/testPaddingZerosOnUnfinishedBitPackedRuns()#org/apache/parquet/column/values/rle/RunLengthBitPackingHybridEncoder/toBytes()
org/apache/parquet/column/values/rle/TestRunLengthBitPackingHybridEncoder/testPaddingZerosOnUnfinishedBitPackedRuns()#org/apache/parquet/column/values/rle/RunLengthBitPackingHybridEncoder/writeInt(int)
org/apache/parquet/column/values/rle/TestRunLengthBitPackingHybridEncoder/testPaddingZerosOnUnfinishedBitPackedRuns()#org/apache/parquet/column/values/rle/TestRunLengthBitPackingHybridEncoder/unpack(int,int,java.io.ByteArrayInputStream)
org/apache/parquet/column/values/rle/TestRunLengthBitPackingHybridEncoder/testPaddingZerosOnUnfinishedBitPackedRuns()#java/io/ByteArrayInputStream/read()
org/apache/parquet/column/values/rle/TestRunLengthBitPackingHybridEncoder/testPaddingZerosOnUnfinishedBitPackedRuns()#java/io/ByteArrayInputStream/ByteArrayInputStream(byte[])
org/apache/parquet/column/values/rle/TestRunLengthBitPackingHybridEncoder/testPaddingZerosOnUnfinishedBitPackedRuns()#org/apache/parquet/bytes/BytesUtils/readUnsignedVarInt(java.io.InputStream)
org/apache/parquet/column/values/rle/TestRunLengthBitPackingHybridEncoder/testPaddingZerosOnUnfinishedBitPackedRuns()#org/apache/parquet/bytes/BytesInput/toByteArray()
org/apache/parquet/column/values/rle/TestRunLengthBitPackingHybridEncoder/testGroupBoundary()#java/io/ByteArrayInputStream/available()
org/apache/parquet/column/values/rle/TestRunLengthBitPackingHybridEncoder/testGroupBoundary()#org/apache/parquet/column/values/rle/RunLengthBitPackingHybridDecoder/readInt()
org/apache/parquet/column/values/rle/TestRunLengthBitPackingHybridEncoder/testGroupBoundary()#java/io/ByteArrayInputStream/ByteArrayInputStream(byte[])
org/apache/parquet/column/values/rle/TestRunLengthBitPackingHybridEncoder/testGroupBoundary()#org/apache/parquet/column/values/rle/RunLengthBitPackingHybridDecoder/RunLengthBitPackingHybridDecoder(int,java.io.InputStream)
org/apache/parquet/column/values/rle/TestRunLengthBitPackingHybridEncoder/testTransitionFromBitPackingToRle()#org/apache/parquet/column/values/rle/TestRunLengthBitPackingHybridEncoder/getRunLengthBitPackingHybridEncoder()
org/apache/parquet/column/values/rle/TestRunLengthBitPackingHybridEncoder/testTransitionFromBitPackingToRle()#org/apache/parquet/bytes/BytesUtils/readIntLittleEndianOnOneByte(java.io.InputStream)
org/apache/parquet/column/values/rle/TestRunLengthBitPackingHybridEncoder/testTransitionFromBitPackingToRle()#java/util/Arrays/asList(T[])
org/apache/parquet/column/values/rle/TestRunLengthBitPackingHybridEncoder/testTransitionFromBitPackingToRle()#org/apache/parquet/column/values/rle/RunLengthBitPackingHybridEncoder/toBytes()
org/apache/parquet/column/values/rle/TestRunLengthBitPackingHybridEncoder/testTransitionFromBitPackingToRle()#org/apache/parquet/column/values/rle/RunLengthBitPackingHybridEncoder/writeInt(int)
org/apache/parquet/column/values/rle/TestRunLengthBitPackingHybridEncoder/testTransitionFromBitPackingToRle()#org/apache/parquet/column/values/rle/TestRunLengthBitPackingHybridEncoder/unpack(int,int,java.io.ByteArrayInputStream)
org/apache/parquet/column/values/rle/TestRunLengthBitPackingHybridEncoder/testTransitionFromBitPackingToRle()#java/io/ByteArrayInputStream/read()
org/apache/parquet/column/values/rle/TestRunLengthBitPackingHybridEncoder/testTransitionFromBitPackingToRle()#java/io/ByteArrayInputStream/ByteArrayInputStream(byte[])
org/apache/parquet/column/values/rle/TestRunLengthBitPackingHybridEncoder/testTransitionFromBitPackingToRle()#org/apache/parquet/bytes/BytesUtils/readUnsignedVarInt(java.io.InputStream)
org/apache/parquet/column/values/rle/TestRunLengthBitPackingHybridEncoder/testTransitionFromBitPackingToRle()#org/apache/parquet/bytes/BytesInput/toByteArray()
org/apache/parquet/column/values/rle/TestRunLengthBitPackingHybridEncoder/unpack(int,int,java.io.ByteArrayInputStream)#java/util/ArrayList/ArrayList(int)
org/apache/parquet/column/values/rle/TestRunLengthBitPackingHybridEncoder/unpack(int,int,java.io.ByteArrayInputStream)#org/apache/parquet/column/values/bitpacking/Packer/newBytePacker(int)
org/apache/parquet/column/values/rle/TestRunLengthBitPackingHybridEncoder/unpack(int,int,java.io.ByteArrayInputStream)#java/io/ByteArrayInputStream/read()
org/apache/parquet/column/values/rle/TestRunLengthBitPackingHybridEncoder/unpack(int,int,java.io.ByteArrayInputStream)#java/util/List/size()
org/apache/parquet/column/values/rle/TestRunLengthBitPackingHybridEncoder/unpack(int,int,java.io.ByteArrayInputStream)#java/util/List/add(E)
org/apache/parquet/column/values/rle/TestRunLengthBitPackingHybridEncoder/unpack(int,int,java.io.ByteArrayInputStream)#org/apache/parquet/column/values/bitpacking/BytePacker/unpack8Values(byte[],int,int[],int)
org/apache/parquet/proto/utils/WriteUsingMR/WritingMapper/run(org.apache.parquet.hadoop.Context)#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/apache/parquet/hadoop/DirectCodecFactory/DirectCodecPool/returnDirectDecompressor(java.lang.Object)#org/apache/parquet/hadoop/DirectCodecFactory/DirectCodecPool/returnToPool(java.lang.Object,java.util.Map)
org/apache/parquet/hadoop/DirectCodecFactory/DirectCodecPool/borrow(org.apache.parquet.hadoop.GenericObjectPool)#org/apache/parquet/hadoop/DirectCodecFactory/DirectCodecPool/ParquetCompressionCodecException/ParquetCompressionCodecException(java.lang.Throwable)
org/apache/parquet/hadoop/DirectCodecFactory/DirectCodecPool/returnDecompressor(org.apache.parquet.hadoop.codec.Decompressor)#org/apache/parquet/hadoop/DirectCodecFactory/DirectCodecPool/returnToPool(java.lang.Object,java.util.Map)
org/apache/parquet/hadoop/DirectCodecFactory/DirectCodecPool/returnCompressor(org.apache.parquet.hadoop.codec.Compressor)#org/apache/parquet/hadoop/DirectCodecFactory/DirectCodecPool/returnToPool(java.lang.Object,java.util.Map)
org/apache/parquet/hadoop/DirectCodecFactory/DirectCodecPool/returnToPool(java.lang.Object,java.util.Map)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/apache/parquet/hadoop/DirectCodecFactory/DirectCodecPool/returnToPool(java.lang.Object,java.util.Map)#java/lang/Class/getSimpleName()
org/apache/parquet/hadoop/DirectCodecFactory/DirectCodecPool/returnToPool(java.lang.Object,java.util.Map)#org/apache/parquet/hadoop/DirectCodecFactory/DirectCodecPool/ParquetCompressionCodecException/ParquetCompressionCodecException(java.lang.Throwable)
org/apache/parquet/hadoop/DirectCodecFactory/DirectCodecPool/returnToPool(java.lang.Object,java.util.Map)#java/lang/Object/getClass()
org/apache/parquet/hadoop/DirectCodecFactory/DirectCodecPool/codec(org.apache.parquet.hadoop.metadata.CompressionCodec)#org/apache/parquet/hadoop/DirectCodecFactory/DirectCodecPool/CodecPool/CodecPool(org.apache.parquet.hadoop.metadata.CompressionCodec)
org/apache/parquet/avro/TestReflectInputOutputFormat/Engine/equals(java.lang.Object)#java/lang/Float/compare(float,float)
org/apache/parquet/avro/TestReflectInputOutputFormat/Engine/equals(java.lang.Object)#java/lang/Object/getClass()
org/apache/parquet/avro/TestReflectInputOutputFormat/Engine/hashCode()#java/lang/Float/floatToIntBits(float)
org/apache/parquet/avro/TestReflectInputOutputFormat/Engine/hashCode()#java/lang/Enum/hashCode()
org/apache/parquet/thrift/struct/ThriftType/MapType/equals(java.lang.Object)#org/apache/parquet/thrift/struct/ThriftField/equals(java.lang.Object)
org/apache/parquet/thrift/struct/ThriftType/MapType/equals(java.lang.Object)#org/apache/parquet/thrift/struct/ThriftType/equals(java.lang.Object)
org/apache/parquet/thrift/struct/ThriftType/MapType/hashCode()#org/apache/parquet/thrift/struct/ThriftField/hashCode()
org/apache/parquet/thrift/struct/ThriftType/MapType/hashCode()#org/apache/parquet/thrift/struct/ThriftType/hashCode()
org/apache/parquet/thrift/struct/ThriftType/MapType/accept(org.apache.parquet.thrift.struct.ThriftType.TypeVisitor)#org/apache/parquet/thrift/struct/ThriftType/TypeVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.MapType)
org/apache/parquet/thrift/struct/ThriftType/MapType/accept(org.apache.parquet.thrift.struct.ThriftType.StateVisitor,S)#org/apache/parquet/thrift/struct/ThriftType/StateVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.MapType,S)
org/apache/parquet/proto/ProtoSchemaConverter/convertFields(org.apache.parquet.schema.Types.GroupBuilder,java.util.List)#org/apache/parquet/proto/ProtoSchemaConverter/addField(Descriptors.FieldDescriptor,org.apache.parquet.schema.Types.GroupBuilder)
org/apache/parquet/proto/ProtoSchemaConverter/convert(java.lang.Class)#org/apache/parquet/proto/ProtoSchemaConverter/convertFields(org.apache.parquet.schema.Types.GroupBuilder,java.util.List)
org/apache/parquet/proto/ProtoSchemaConverter/convert(java.lang.Class)#org/apache/parquet/schema/Types/buildMessage()
org/apache/parquet/proto/ProtoSchemaConverter/addField(Descriptors.FieldDescriptor,org.apache.parquet.schema.Types.GroupBuilder)#org/apache/parquet/proto/ProtoSchemaConverter/convertFields(org.apache.parquet.schema.Types.GroupBuilder,java.util.List)
org/apache/parquet/proto/ProtoSchemaConverter/addField(Descriptors.FieldDescriptor,org.apache.parquet.schema.Types.GroupBuilder)#org/apache/parquet/proto/ProtoSchemaConverter/getRepetition(Descriptors.FieldDescriptor)
org/apache/parquet/proto/ProtoSchemaConverter/addField(Descriptors.FieldDescriptor,org.apache.parquet.schema.Types.GroupBuilder)#org/apache/parquet/schema/Types/Builder/as(org.apache.parquet.schema.OriginalType)
org/apache/parquet/proto/ProtoSchemaConverter/addField(Descriptors.FieldDescriptor,org.apache.parquet.schema.Types.GroupBuilder)#org/apache/parquet/schema/Types/BaseGroupBuilder/group(org.apache.parquet.schema.Type.Repetition)
org/apache/parquet/proto/ProtoSchemaConverter/addField(Descriptors.FieldDescriptor,org.apache.parquet.schema.Types.GroupBuilder)#java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)
org/apache/parquet/proto/ProtoSchemaConverter/addField(Descriptors.FieldDescriptor,org.apache.parquet.schema.Types.GroupBuilder)#org/apache/parquet/schema/Types/BaseGroupBuilder/primitive(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.schema.Type.Repetition)
org/apache/parquet/pig/PerfTestReadAllCols/main(java.lang.String[])#org/apache/parquet/pig/PerfTest2/clean(java.io.File)
org/apache/parquet/pig/PerfTestReadAllCols/main(java.lang.String[])#java/lang/StringBuilder/append(java.lang.String)
org/apache/parquet/pig/PerfTestReadAllCols/main(java.lang.String[])#org/apache/parquet/pig/PerfTest2/write(java.lang.String)
org/apache/parquet/pig/PerfTestReadAllCols/main(java.lang.String[])#java/io/File/exists()
org/apache/parquet/pig/PerfTestReadAllCols/main(java.lang.String[])#java/io/File/File(java.lang.String)
org/apache/parquet/pig/PerfTestReadAllCols/main(java.lang.String[])#java/lang/StringBuilder/StringBuilder()
org/apache/parquet/pig/PerfTestReadAllCols/main(java.lang.String[])#java/io/PrintStream/println(java.lang.Object)
org/apache/parquet/pig/PerfTestReadAllCols/main(java.lang.String[])#org/apache/parquet/pig/PerfTest2/load(java.lang.String,int,java.lang.StringBuilder)
org/apache/parquet/avro/TestReflectLogicalTypes/write(org.apache.parquet.pig.Schema,D[])#org/apache/parquet/avro/TestReflectLogicalTypes/write(org.apache.parquet.avro.GenericData,org.apache.parquet.pig.Schema,D[])
org/apache/parquet/avro/TestReflectLogicalTypes/testWriteUUIDList()#org/apache/parquet/avro/TestReflectLogicalTypes/write(org.apache.parquet.pig.Schema,D[])
org/apache/parquet/avro/TestReflectLogicalTypes/testWriteUUIDList()#org/apache/parquet/avro/AvroTestUtil/read(org.apache.parquet.avro.GenericData,org.apache.parquet.pig.Schema,java.io.File)
org/apache/parquet/avro/TestReflectLogicalTypes/testWriteUUIDList()#org/apache/parquet/avro/RecordWithUUIDList/RecordWithUUIDList()
org/apache/parquet/avro/TestReflectLogicalTypes/testWriteUUIDList()#java/util/UUID/randomUUID()
org/apache/parquet/avro/TestReflectLogicalTypes/testWriteUUIDList()#java/util/Arrays/asList(T[])
org/apache/parquet/avro/TestReflectLogicalTypes/testWriteUUIDList()#java/lang/Class/getName()
org/apache/parquet/avro/TestReflectLogicalTypes/testWriteUUIDList()#java/util/UUID/toString()
org/apache/parquet/avro/TestReflectLogicalTypes/testWriteUUIDList()#java/lang/Object/Object()
org/apache/parquet/avro/TestReflectLogicalTypes/testWriteUUID()#org/apache/parquet/avro/TestReflectLogicalTypes/write(org.apache.parquet.pig.Schema,D[])
org/apache/parquet/avro/TestReflectLogicalTypes/testWriteUUID()#org/apache/parquet/avro/AvroTestUtil/read(org.apache.parquet.avro.GenericData,org.apache.parquet.pig.Schema,java.io.File)
org/apache/parquet/avro/TestReflectLogicalTypes/testWriteUUID()#java/util/UUID/randomUUID()
org/apache/parquet/avro/TestReflectLogicalTypes/testWriteUUID()#java/util/Arrays/asList(T[])
org/apache/parquet/avro/TestReflectLogicalTypes/testWriteUUID()#java/lang/Class/getName()
org/apache/parquet/avro/TestReflectLogicalTypes/testWriteUUID()#java/util/List/get(int)
org/apache/parquet/avro/TestReflectLogicalTypes/testWriteUUID()#java/util/UUID/toString()
org/apache/parquet/avro/TestReflectLogicalTypes/testWriteUUID()#org/apache/parquet/avro/RecordWithStringUUID/RecordWithStringUUID()
org/apache/parquet/avro/TestReflectLogicalTypes/testWriteUUID()#org/apache/parquet/avro/RecordWithUUID/RecordWithUUID()
org/apache/parquet/avro/TestReflectLogicalTypes/testWriteNullableUUID()#org/apache/parquet/avro/TestReflectLogicalTypes/write(org.apache.parquet.pig.Schema,D[])
org/apache/parquet/avro/TestReflectLogicalTypes/testWriteNullableUUID()#org/apache/parquet/avro/AvroTestUtil/read(org.apache.parquet.avro.GenericData,org.apache.parquet.pig.Schema,java.io.File)
org/apache/parquet/avro/TestReflectLogicalTypes/testWriteNullableUUID()#java/util/UUID/randomUUID()
org/apache/parquet/avro/TestReflectLogicalTypes/testWriteNullableUUID()#java/util/Arrays/asList(T[])
org/apache/parquet/avro/TestReflectLogicalTypes/testWriteNullableUUID()#java/lang/Class/getName()
org/apache/parquet/avro/TestReflectLogicalTypes/testWriteNullableUUID()#java/util/List/get(int)
org/apache/parquet/avro/TestReflectLogicalTypes/testWriteNullableUUID()#java/util/UUID/toString()
org/apache/parquet/avro/TestReflectLogicalTypes/testWriteNullableUUID()#org/apache/parquet/avro/RecordWithStringUUID/RecordWithStringUUID()
org/apache/parquet/avro/TestReflectLogicalTypes/testWriteNullableUUID()#org/apache/parquet/avro/RecordWithUUID/RecordWithUUID()
org/apache/parquet/avro/TestReflectLogicalTypes/testDecimalBytes()#org/apache/parquet/avro/TestReflectLogicalTypes/write(org.apache.parquet.pig.Schema,D[])
org/apache/parquet/avro/TestReflectLogicalTypes/testDecimalBytes()#org/apache/parquet/avro/AvroTestUtil/read(org.apache.parquet.avro.GenericData,org.apache.parquet.pig.Schema,java.io.File)
org/apache/parquet/avro/TestReflectLogicalTypes/testDecimalBytes()#java/util/Arrays/asList(T[])
org/apache/parquet/avro/TestReflectLogicalTypes/testDecimalBytes()#org/apache/parquet/avro/TestReflectLogicalTypes/DecimalRecordBytes/DecimalRecordBytes()
org/apache/parquet/avro/TestReflectLogicalTypes/testDecimalBytes()#java/math/BigDecimal/BigDecimal(java.lang.String)
org/apache/parquet/avro/TestReflectLogicalTypes/testWriteUUIDArray()#org/apache/parquet/avro/TestReflectLogicalTypes/write(org.apache.parquet.pig.Schema,D[])
org/apache/parquet/avro/TestReflectLogicalTypes/testWriteUUIDArray()#java/util/ArrayList/ArrayList()
org/apache/parquet/avro/TestReflectLogicalTypes/testWriteUUIDArray()#org/apache/parquet/avro/AvroTestUtil/read(org.apache.parquet.avro.GenericData,org.apache.parquet.pig.Schema,java.io.File)
org/apache/parquet/avro/TestReflectLogicalTypes/testWriteUUIDArray()#java/util/UUID/randomUUID()
org/apache/parquet/avro/TestReflectLogicalTypes/testWriteUUIDArray()#java/lang/Class/getName()
org/apache/parquet/avro/TestReflectLogicalTypes/testWriteUUIDArray()#org/apache/parquet/avro/RecordWithUUIDArray/RecordWithUUIDArray()
org/apache/parquet/avro/TestReflectLogicalTypes/testWriteUUIDArray()#java/util/List/add(E)
org/apache/parquet/avro/TestReflectLogicalTypes/testWriteUUIDArray()#java/util/UUID/toString()
org/apache/parquet/avro/TestReflectLogicalTypes/testWriteUUIDArray()#java/lang/Object/Object()
org/apache/parquet/avro/TestReflectLogicalTypes/testDecimalFixed()#org/apache/parquet/avro/TestReflectLogicalTypes/write(org.apache.parquet.pig.Schema,D[])
org/apache/parquet/avro/TestReflectLogicalTypes/testDecimalFixed()#org/apache/parquet/avro/AvroTestUtil/read(org.apache.parquet.avro.GenericData,org.apache.parquet.pig.Schema,java.io.File)
org/apache/parquet/avro/TestReflectLogicalTypes/testDecimalFixed()#java/util/Arrays/asList(T[])
org/apache/parquet/avro/TestReflectLogicalTypes/testDecimalFixed()#org/apache/parquet/avro/TestReflectLogicalTypes/DecimalRecordFixed/DecimalRecordFixed()
org/apache/parquet/avro/TestReflectLogicalTypes/testDecimalFixed()#java/math/BigDecimal/BigDecimal(java.lang.String)
org/apache/parquet/avro/TestReflectLogicalTypes/testReadUUIDArray()#org/apache/parquet/avro/TestReflectLogicalTypes/write(org.apache.parquet.pig.Schema,D[])
org/apache/parquet/avro/TestReflectLogicalTypes/testReadUUIDArray()#org/apache/parquet/avro/AvroTestUtil/read(org.apache.parquet.avro.GenericData,org.apache.parquet.pig.Schema,java.io.File)
org/apache/parquet/avro/TestReflectLogicalTypes/testReadUUIDArray()#java/util/UUID/randomUUID()
org/apache/parquet/avro/TestReflectLogicalTypes/testReadUUIDArray()#java/util/Arrays/asList(T[])
org/apache/parquet/avro/TestReflectLogicalTypes/testReadUUIDArray()#java/lang/Class/getName()
org/apache/parquet/avro/TestReflectLogicalTypes/testReadUUIDArray()#org/apache/parquet/avro/RecordWithUUIDArray/RecordWithUUIDArray()
org/apache/parquet/avro/TestReflectLogicalTypes/testReadUUIDArray()#java/util/UUID/toString()
org/apache/parquet/avro/TestReflectLogicalTypes/testReadUUIDArray()#java/lang/Object/Object()
org/apache/parquet/avro/TestReflectLogicalTypes/testReadUUIDList()#org/apache/parquet/avro/TestReflectLogicalTypes/write(org.apache.parquet.pig.Schema,D[])
org/apache/parquet/avro/TestReflectLogicalTypes/testReadUUIDList()#org/apache/parquet/avro/AvroTestUtil/read(org.apache.parquet.avro.GenericData,org.apache.parquet.pig.Schema,java.io.File)
org/apache/parquet/avro/TestReflectLogicalTypes/testReadUUIDList()#org/apache/parquet/avro/RecordWithUUIDList/RecordWithUUIDList()
org/apache/parquet/avro/TestReflectLogicalTypes/testReadUUIDList()#java/util/UUID/randomUUID()
org/apache/parquet/avro/TestReflectLogicalTypes/testReadUUIDList()#java/util/Arrays/asList(T[])
org/apache/parquet/avro/TestReflectLogicalTypes/testReadUUIDList()#java/lang/Class/getName()
org/apache/parquet/avro/TestReflectLogicalTypes/testReadUUIDList()#java/util/UUID/toString()
org/apache/parquet/avro/TestReflectLogicalTypes/testReadUUIDList()#java/lang/Object/Object()
org/apache/parquet/avro/TestReflectLogicalTypes/testReadUUID()#org/apache/parquet/avro/TestReflectLogicalTypes/write(org.apache.parquet.pig.Schema,D[])
org/apache/parquet/avro/TestReflectLogicalTypes/testReadUUID()#org/apache/parquet/avro/AvroTestUtil/read(org.apache.parquet.avro.GenericData,org.apache.parquet.pig.Schema,java.io.File)
org/apache/parquet/avro/TestReflectLogicalTypes/testReadUUID()#java/util/UUID/randomUUID()
org/apache/parquet/avro/TestReflectLogicalTypes/testReadUUID()#java/util/Arrays/asList(T[])
org/apache/parquet/avro/TestReflectLogicalTypes/testReadUUID()#java/lang/Class/getName()
org/apache/parquet/avro/TestReflectLogicalTypes/testReadUUID()#java/util/List/get(int)
org/apache/parquet/avro/TestReflectLogicalTypes/testReadUUID()#java/util/UUID/toString()
org/apache/parquet/avro/TestReflectLogicalTypes/testReadUUID()#org/apache/parquet/avro/RecordWithStringUUID/RecordWithStringUUID()
org/apache/parquet/avro/TestReflectLogicalTypes/testReadUUID()#org/apache/parquet/avro/RecordWithUUID/RecordWithUUID()
org/apache/parquet/avro/TestReflectLogicalTypes/testReadUUIDGenericRecord()#org/apache/parquet/avro/TestReflectLogicalTypes/write(org.apache.parquet.pig.Schema,D[])
org/apache/parquet/avro/TestReflectLogicalTypes/testReadUUIDGenericRecord()#org/apache/parquet/avro/AvroTestUtil/read(org.apache.parquet.avro.GenericData,org.apache.parquet.pig.Schema,java.io.File)
org/apache/parquet/avro/TestReflectLogicalTypes/testReadUUIDGenericRecord()#org/apache/parquet/avro/RecordWithStringUUID/RecordWithStringUUID()
org/apache/parquet/avro/TestReflectLogicalTypes/testReadUUIDGenericRecord()#java/util/UUID/randomUUID()
org/apache/parquet/avro/TestReflectLogicalTypes/testReadUUIDGenericRecord()#java/util/Arrays/asList(T[])
org/apache/parquet/avro/TestReflectLogicalTypes/testReadUUIDGenericRecord()#java/lang/Class/getName()
org/apache/parquet/avro/TestReflectLogicalTypes/testReadUUIDGenericRecord()#java/util/UUID/toString()
org/apache/parquet/avro/TestReflectLogicalTypes/testReadUUIDGenericRecord()#java/lang/Object/Object()
org/apache/parquet/avro/TestReflectLogicalTypes/testWriteUUIDMissingLogicalType()#org/apache/parquet/avro/TestReflectLogicalTypes/write(org.apache.parquet.pig.Schema,D[])
org/apache/parquet/avro/TestReflectLogicalTypes/testWriteUUIDMissingLogicalType()#org/apache/parquet/avro/AvroTestUtil/read(org.apache.parquet.avro.GenericData,org.apache.parquet.pig.Schema,java.io.File)
org/apache/parquet/avro/TestReflectLogicalTypes/testWriteUUIDMissingLogicalType()#org/apache/parquet/avro/RecordWithUUID/RecordWithUUID()
org/apache/parquet/avro/TestReflectLogicalTypes/testWriteUUIDMissingLogicalType()#java/util/UUID/randomUUID()
org/apache/parquet/avro/TestReflectLogicalTypes/testWriteUUIDMissingLogicalType()#java/lang/Class/getName()
org/apache/parquet/avro/TestReflectLogicalTypes/testReflectedSchema()#java/lang/Class/getName()
org/apache/parquet/avro/TestReflectLogicalTypes/write(org.apache.parquet.avro.GenericData,org.apache.parquet.pig.Schema,D[])#org/apache/parquet/avro/AvroTestUtil/write(org.apache.parquet.statistics.TemporaryFolder,org.apache.parquet.avro.GenericData,org.apache.parquet.pig.Schema,D[])
org/apache/parquet/avro/TestReflectLogicalTypes/testPairRecord()#org/apache/parquet/avro/TestReflectLogicalTypes/write(org.apache.parquet.pig.Schema,D[])
org/apache/parquet/avro/TestReflectLogicalTypes/testPairRecord()#java/util/ArrayList/ArrayList()
org/apache/parquet/avro/TestReflectLogicalTypes/testPairRecord()#org/apache/parquet/avro/AvroTestUtil/read(org.apache.parquet.avro.GenericData,org.apache.parquet.pig.Schema,java.io.File)
org/apache/parquet/avro/TestReflectLogicalTypes/testPairRecord()#org/apache/parquet/avro/TestReflectLogicalTypes/PairRecord/PairRecord()
org/apache/parquet/avro/TestReflectLogicalTypes/testPairRecord()#java/util/List/add(E)
org/apache/parquet/avro/TestReflectLogicalTypes/testPairRecord()#org/apache/parquet/avro/TestReflectLogicalTypes/Pair/of(X,Y)
org/apache/parquet/avro/TestAvroSchemaConverter/testTimeMicrosType()#java/util/Arrays/asList(T[])
org/apache/parquet/avro/TestAvroSchemaConverter/testTimeMicrosType()#org/apache/parquet/avro/TestAvroSchemaConverter/testTimeMicrosType()/$anonymous1/()
org/apache/parquet/avro/TestAvroSchemaConverter/testTimeMicrosType()#org/apache/parquet/avro/TestAvroSchemaConverter/testRoundTripConversion(org.apache.parquet.pig.Schema,java.lang.String)
org/apache/parquet/avro/TestAvroSchemaConverter/testTimeMicrosType()#org/apache/parquet/schema/PrimitiveType/PrimitiveType(org.apache.parquet.schema.Type.Repetition,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,int,java.lang.String,org.apache.parquet.schema.OriginalType)
org/apache/parquet/avro/TestAvroSchemaConverter/testTimeMicrosType()#org/apache/parquet/avro/TestAvroSchemaConverter/assertThrows(java.lang.String,java.lang.Class,java.lang.Runnable)
org/apache/parquet/avro/TestAvroSchemaConverter/testTimeMicrosType()#org/apache/parquet/schema/PrimitiveType/PrimitiveType(org.apache.parquet.schema.Type.Repetition,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,java.lang.String,org.apache.parquet.schema.OriginalType)
org/apache/parquet/avro/TestAvroSchemaConverter/testTimeMicrosType()#java/lang/Object/Object()
org/apache/parquet/avro/TestAvroSchemaConverter/testOptionalFields()#java/util/Arrays/asList(T[])
org/apache/parquet/avro/TestAvroSchemaConverter/testOptionalFields()#org/apache/parquet/avro/TestAvroSchemaConverter/testRoundTripConversion(org.apache.parquet.pig.Schema,java.lang.String)
org/apache/parquet/avro/TestAvroSchemaConverter/testOptionalFields()#org/apache/parquet/avro/TestAvroSchemaConverter/optional(org.apache.parquet.pig.Schema)
org/apache/parquet/avro/TestAvroSchemaConverter/testOptionalFields()#java/lang/Object/Object()
org/apache/parquet/avro/TestAvroSchemaConverter/testAvroToParquetConversion(org.apache.parquet.pig.Schema,java.lang.String)#org/apache/parquet/avro/TestAvroSchemaConverter/testAvroToParquetConversion(org.apache.parquet.hadoop.Configuration,org.apache.parquet.pig.Schema,java.lang.String)
org/apache/parquet/avro/TestAvroSchemaConverter/testOldThriftListOfLists()#org/apache/parquet/avro/TestAvroSchemaConverter/testParquetToAvroConversion(org.apache.parquet.pig.Schema,java.lang.String)
org/apache/parquet/avro/TestAvroSchemaConverter/testOldThriftListOfLists()#org/apache/parquet/avro/TestAvroSchemaConverter/testParquetToAvroConversion(org.apache.parquet.hadoop.Configuration,org.apache.parquet.pig.Schema,java.lang.String)
org/apache/parquet/avro/TestAvroSchemaConverter/testOldThriftListOfLists()#java/io/PrintStream/println(char[])
org/apache/parquet/avro/TestAvroSchemaConverter/testOldThriftListOfLists()#org/apache/parquet/avro/TestAvroSchemaConverter/optional(org.apache.parquet.pig.Schema)
org/apache/parquet/avro/TestAvroSchemaConverter/testOldThriftListOfLists()#java/lang/Object/Object()
org/apache/parquet/avro/TestAvroSchemaConverter/testOptionalArrayElement()#org/apache/parquet/avro/TestAvroSchemaConverter/testRoundTripConversion(org.apache.parquet.hadoop.Configuration,org.apache.parquet.pig.Schema,java.lang.String)
org/apache/parquet/avro/TestAvroSchemaConverter/testOptionalArrayElement()#java/util/Arrays/asList(T[])
org/apache/parquet/avro/TestAvroSchemaConverter/testOptionalArrayElement()#org/apache/parquet/avro/TestAvroSchemaConverter/optional(org.apache.parquet.pig.Schema)
org/apache/parquet/avro/TestAvroSchemaConverter/testOptionalArrayElement()#java/lang/Object/Object()
org/apache/parquet/avro/TestAvroSchemaConverter/testParquetMapWithNonStringKeyFails()#org/apache/parquet/avro/AvroSchemaConverter/convert(org.apache.parquet.schema.MessageType)
org/apache/parquet/avro/TestAvroSchemaConverter/testParquetMapWithNonStringKeyFails()#org/apache/parquet/avro/AvroSchemaConverter/AvroSchemaConverter()
org/apache/parquet/avro/TestAvroSchemaConverter/testParquetMapWithNonStringKeyFails()#org/apache/parquet/schema/MessageTypeParser/parseMessageType(java.lang.String)
org/apache/parquet/avro/TestAvroSchemaConverter/testParquetToAvroConversion(org.apache.parquet.hadoop.Configuration,org.apache.parquet.pig.Schema,java.lang.String)#org/apache/parquet/avro/AvroSchemaConverter/convert(org.apache.parquet.schema.MessageType)
org/apache/parquet/avro/TestAvroSchemaConverter/testParquetToAvroConversion(org.apache.parquet.hadoop.Configuration,org.apache.parquet.pig.Schema,java.lang.String)#org/apache/parquet/schema/MessageTypeParser/parseMessageType(java.lang.String)
org/apache/parquet/avro/TestAvroSchemaConverter/testParquetToAvroConversion(org.apache.parquet.hadoop.Configuration,org.apache.parquet.pig.Schema,java.lang.String)#org/apache/parquet/avro/AvroSchemaConverter/AvroSchemaConverter(org.apache.parquet.hadoop.Configuration)
org/apache/parquet/avro/TestAvroSchemaConverter/testDateType()#java/util/Arrays/asList(T[])
org/apache/parquet/avro/TestAvroSchemaConverter/testDateType()#org/apache/parquet/avro/TestAvroSchemaConverter/testRoundTripConversion(org.apache.parquet.pig.Schema,java.lang.String)
org/apache/parquet/avro/TestAvroSchemaConverter/testDateType()#org/apache/parquet/schema/PrimitiveType/PrimitiveType(org.apache.parquet.schema.Type.Repetition,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,int,java.lang.String,org.apache.parquet.schema.OriginalType)
org/apache/parquet/avro/TestAvroSchemaConverter/testDateType()#org/apache/parquet/avro/TestAvroSchemaConverter/assertThrows(java.lang.String,java.lang.Class,java.lang.Runnable)
org/apache/parquet/avro/TestAvroSchemaConverter/testDateType()#org/apache/parquet/schema/PrimitiveType/PrimitiveType(org.apache.parquet.schema.Type.Repetition,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,java.lang.String,org.apache.parquet.schema.OriginalType)
org/apache/parquet/avro/TestAvroSchemaConverter/testDateType()#org/apache/parquet/avro/TestAvroSchemaConverter/testDateType()/$anonymous1/()
org/apache/parquet/avro/TestAvroSchemaConverter/testDateType()#java/lang/Object/Object()
org/apache/parquet/avro/TestAvroSchemaConverter/testAvroToParquetConversion(org.apache.parquet.hadoop.Configuration,org.apache.parquet.pig.Schema,java.lang.String)#org/apache/parquet/schema/Type/toString()
org/apache/parquet/avro/TestAvroSchemaConverter/testAvroToParquetConversion(org.apache.parquet.hadoop.Configuration,org.apache.parquet.pig.Schema,java.lang.String)#org/apache/parquet/schema/MessageTypeParser/parseMessageType(java.lang.String)
org/apache/parquet/avro/TestAvroSchemaConverter/testAvroToParquetConversion(org.apache.parquet.hadoop.Configuration,org.apache.parquet.pig.Schema,java.lang.String)#org/apache/parquet/avro/AvroSchemaConverter/convert(org.apache.parquet.pig.Schema)
org/apache/parquet/avro/TestAvroSchemaConverter/testAvroToParquetConversion(org.apache.parquet.hadoop.Configuration,org.apache.parquet.pig.Schema,java.lang.String)#org/apache/parquet/avro/AvroSchemaConverter/AvroSchemaConverter(org.apache.parquet.hadoop.Configuration)
org/apache/parquet/avro/TestAvroSchemaConverter/testAllTypesParquetToAvroOldBehavior()#org/apache/parquet/avro/TestAvroSchemaConverter/testParquetToAvroConversion(org.apache.parquet.pig.Schema,java.lang.String)
org/apache/parquet/avro/TestAvroSchemaConverter/testArrayOfOptionalRecords()#org/apache/parquet/avro/TestAvroSchemaConverter/testRoundTripConversion(org.apache.parquet.hadoop.Configuration,org.apache.parquet.pig.Schema,java.lang.String)
org/apache/parquet/avro/TestAvroSchemaConverter/testArrayOfOptionalRecords()#java/io/PrintStream/println(char[])
org/apache/parquet/avro/TestAvroSchemaConverter/testArrayOfOptionalRecords()#org/apache/parquet/avro/TestAvroSchemaConverter/optional(org.apache.parquet.pig.Schema)
org/apache/parquet/avro/TestAvroSchemaConverter/testArrayOfOptionalRecords()#java/lang/Object/Object()
org/apache/parquet/avro/TestAvroSchemaConverter/message(org.apache.parquet.schema.PrimitiveType)#org/apache/parquet/schema/Types/buildMessage()
org/apache/parquet/avro/TestAvroSchemaConverter/message(org.apache.parquet.schema.PrimitiveType)#org/apache/parquet/schema/Types/Builder/named(java.lang.String)
org/apache/parquet/avro/TestAvroSchemaConverter/message(org.apache.parquet.schema.PrimitiveType)#org/apache/parquet/schema/Types/BaseGroupBuilder/addField(org.apache.parquet.schema.Type)
org/apache/parquet/avro/TestAvroSchemaConverter/testDecimalBytesType()#java/util/Collections/singletonList(T)
org/apache/parquet/avro/TestAvroSchemaConverter/testDecimalBytesType()#org/apache/parquet/avro/TestAvroSchemaConverter/testRoundTripConversion(org.apache.parquet.pig.Schema,java.lang.String)
org/apache/parquet/avro/TestAvroSchemaConverter/testDecimalBytesType()#java/lang/Object/Object()
org/apache/parquet/avro/TestAvroSchemaConverter/testTimestampMillisType()#java/util/Arrays/asList(T[])
org/apache/parquet/avro/TestAvroSchemaConverter/testTimestampMillisType()#org/apache/parquet/avro/TestAvroSchemaConverter/testTimestampMillisType()/$anonymous1/()
org/apache/parquet/avro/TestAvroSchemaConverter/testTimestampMillisType()#org/apache/parquet/avro/TestAvroSchemaConverter/testRoundTripConversion(org.apache.parquet.pig.Schema,java.lang.String)
org/apache/parquet/avro/TestAvroSchemaConverter/testTimestampMillisType()#org/apache/parquet/schema/PrimitiveType/PrimitiveType(org.apache.parquet.schema.Type.Repetition,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,int,java.lang.String,org.apache.parquet.schema.OriginalType)
org/apache/parquet/avro/TestAvroSchemaConverter/testTimestampMillisType()#org/apache/parquet/avro/TestAvroSchemaConverter/assertThrows(java.lang.String,java.lang.Class,java.lang.Runnable)
org/apache/parquet/avro/TestAvroSchemaConverter/testTimestampMillisType()#org/apache/parquet/schema/PrimitiveType/PrimitiveType(org.apache.parquet.schema.Type.Repetition,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,java.lang.String,org.apache.parquet.schema.OriginalType)
org/apache/parquet/avro/TestAvroSchemaConverter/testTimestampMillisType()#java/lang/Object/Object()
org/apache/parquet/avro/TestAvroSchemaConverter/testParquetToAvroConversion(org.apache.parquet.pig.Schema,java.lang.String)#org/apache/parquet/avro/TestAvroSchemaConverter/testParquetToAvroConversion(org.apache.parquet.hadoop.Configuration,org.apache.parquet.pig.Schema,java.lang.String)
org/apache/parquet/avro/TestAvroSchemaConverter/testTopLevelMustBeARecord()#org/apache/parquet/avro/AvroSchemaConverter/AvroSchemaConverter()
org/apache/parquet/avro/TestAvroSchemaConverter/testTopLevelMustBeARecord()#org/apache/parquet/avro/AvroSchemaConverter/convert(org.apache.parquet.pig.Schema)
org/apache/parquet/avro/TestAvroSchemaConverter/testOptionalMapValue()#java/util/Arrays/asList(T[])
org/apache/parquet/avro/TestAvroSchemaConverter/testOptionalMapValue()#org/apache/parquet/avro/TestAvroSchemaConverter/testRoundTripConversion(org.apache.parquet.pig.Schema,java.lang.String)
org/apache/parquet/avro/TestAvroSchemaConverter/testOptionalMapValue()#org/apache/parquet/avro/TestAvroSchemaConverter/optional(org.apache.parquet.pig.Schema)
org/apache/parquet/avro/TestAvroSchemaConverter/testOptionalMapValue()#java/lang/Object/Object()
org/apache/parquet/avro/TestAvroSchemaConverter/testRoundTripConversion(org.apache.parquet.hadoop.Configuration,org.apache.parquet.pig.Schema,java.lang.String)#org/apache/parquet/schema/Type/toString()
org/apache/parquet/avro/TestAvroSchemaConverter/testRoundTripConversion(org.apache.parquet.hadoop.Configuration,org.apache.parquet.pig.Schema,java.lang.String)#org/apache/parquet/avro/AvroSchemaConverter/convert(org.apache.parquet.schema.MessageType)
org/apache/parquet/avro/TestAvroSchemaConverter/testRoundTripConversion(org.apache.parquet.hadoop.Configuration,org.apache.parquet.pig.Schema,java.lang.String)#org/apache/parquet/schema/MessageTypeParser/parseMessageType(java.lang.String)
org/apache/parquet/avro/TestAvroSchemaConverter/testRoundTripConversion(org.apache.parquet.hadoop.Configuration,org.apache.parquet.pig.Schema,java.lang.String)#org/apache/parquet/avro/AvroSchemaConverter/convert(org.apache.parquet.pig.Schema)
org/apache/parquet/avro/TestAvroSchemaConverter/testRoundTripConversion(org.apache.parquet.hadoop.Configuration,org.apache.parquet.pig.Schema,java.lang.String)#org/apache/parquet/avro/AvroSchemaConverter/AvroSchemaConverter(org.apache.parquet.hadoop.Configuration)
org/apache/parquet/avro/TestAvroSchemaConverter/testAllTypes()#org/apache/parquet/avro/TestAvroSchemaConverter/testAvroToParquetConversion(org.apache.parquet.hadoop.Configuration,org.apache.parquet.pig.Schema,java.lang.String)
org/apache/parquet/avro/TestAvroSchemaConverter/testDecimalFixedType()#java/util/Collections/singletonList(T)
org/apache/parquet/avro/TestAvroSchemaConverter/testDecimalFixedType()#org/apache/parquet/avro/TestAvroSchemaConverter/testRoundTripConversion(org.apache.parquet.pig.Schema,java.lang.String)
org/apache/parquet/avro/TestAvroSchemaConverter/testDecimalFixedType()#java/lang/Object/Object()
org/apache/parquet/avro/TestAvroSchemaConverter/testParquetMapWithoutMapKeyValueAnnotation()#org/apache/parquet/avro/TestAvroSchemaConverter/testParquetToAvroConversion(org.apache.parquet.pig.Schema,java.lang.String)
org/apache/parquet/avro/TestAvroSchemaConverter/testParquetMapWithoutMapKeyValueAnnotation()#java/util/Collections/singletonList(T)
org/apache/parquet/avro/TestAvroSchemaConverter/testParquetMapWithoutMapKeyValueAnnotation()#org/apache/parquet/avro/TestAvroSchemaConverter/testParquetToAvroConversion(org.apache.parquet.hadoop.Configuration,org.apache.parquet.pig.Schema,java.lang.String)
org/apache/parquet/avro/TestAvroSchemaConverter/testParquetMapWithoutMapKeyValueAnnotation()#java/lang/Object/Object()
org/apache/parquet/avro/TestAvroSchemaConverter/testAllTypesOldListBehavior()#org/apache/parquet/avro/TestAvroSchemaConverter/testAvroToParquetConversion(org.apache.parquet.pig.Schema,java.lang.String)
org/apache/parquet/avro/TestAvroSchemaConverter/testTimestampMicrosType()#org/apache/parquet/avro/TestAvroSchemaConverter/testTimestampMicrosType()/$anonymous1/()
org/apache/parquet/avro/TestAvroSchemaConverter/testTimestampMicrosType()#java/util/Arrays/asList(T[])
org/apache/parquet/avro/TestAvroSchemaConverter/testTimestampMicrosType()#org/apache/parquet/avro/TestAvroSchemaConverter/testRoundTripConversion(org.apache.parquet.pig.Schema,java.lang.String)
org/apache/parquet/avro/TestAvroSchemaConverter/testTimestampMicrosType()#org/apache/parquet/schema/PrimitiveType/PrimitiveType(org.apache.parquet.schema.Type.Repetition,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,int,java.lang.String,org.apache.parquet.schema.OriginalType)
org/apache/parquet/avro/TestAvroSchemaConverter/testTimestampMicrosType()#org/apache/parquet/avro/TestAvroSchemaConverter/assertThrows(java.lang.String,java.lang.Class,java.lang.Runnable)
org/apache/parquet/avro/TestAvroSchemaConverter/testTimestampMicrosType()#org/apache/parquet/schema/PrimitiveType/PrimitiveType(org.apache.parquet.schema.Type.Repetition,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,java.lang.String,org.apache.parquet.schema.OriginalType)
org/apache/parquet/avro/TestAvroSchemaConverter/testTimestampMicrosType()#java/lang/Object/Object()
org/apache/parquet/avro/TestAvroSchemaConverter/testUnknownTwoLevelListOfLists()#org/apache/parquet/avro/TestAvroSchemaConverter/testParquetToAvroConversion(org.apache.parquet.pig.Schema,java.lang.String)
org/apache/parquet/avro/TestAvroSchemaConverter/testUnknownTwoLevelListOfLists()#org/apache/parquet/avro/TestAvroSchemaConverter/testParquetToAvroConversion(org.apache.parquet.hadoop.Configuration,org.apache.parquet.pig.Schema,java.lang.String)
org/apache/parquet/avro/TestAvroSchemaConverter/testUnknownTwoLevelListOfLists()#java/io/PrintStream/println(char[])
org/apache/parquet/avro/TestAvroSchemaConverter/testUnknownTwoLevelListOfLists()#org/apache/parquet/avro/TestAvroSchemaConverter/optional(org.apache.parquet.pig.Schema)
org/apache/parquet/avro/TestAvroSchemaConverter/testUnknownTwoLevelListOfLists()#java/lang/Object/Object()
org/apache/parquet/avro/TestAvroSchemaConverter/testArrayOfOptionalRecordsOldBehavior()#org/apache/parquet/avro/TestAvroSchemaConverter/testAvroToParquetConversion(org.apache.parquet.pig.Schema,java.lang.String)
org/apache/parquet/avro/TestAvroSchemaConverter/testArrayOfOptionalRecordsOldBehavior()#java/io/PrintStream/println(char[])
org/apache/parquet/avro/TestAvroSchemaConverter/testArrayOfOptionalRecordsOldBehavior()#org/apache/parquet/avro/TestAvroSchemaConverter/optional(org.apache.parquet.pig.Schema)
org/apache/parquet/avro/TestAvroSchemaConverter/testArrayOfOptionalRecordsOldBehavior()#java/lang/Object/Object()
org/apache/parquet/avro/TestAvroSchemaConverter/testDecimalLongType()#org/apache/parquet/avro/TestAvroSchemaConverter/testParquetToAvroConversion(org.apache.parquet.pig.Schema,java.lang.String)
org/apache/parquet/avro/TestAvroSchemaConverter/testDecimalLongType()#java/util/Arrays/asList(T[])
org/apache/parquet/avro/TestAvroSchemaConverter/testDecimalLongType()#java/lang/Object/Object()
org/apache/parquet/avro/TestAvroSchemaConverter/testOldAvroListOfLists()#org/apache/parquet/avro/TestAvroSchemaConverter/testParquetToAvroConversion(org.apache.parquet.hadoop.Configuration,org.apache.parquet.pig.Schema,java.lang.String)
org/apache/parquet/avro/TestAvroSchemaConverter/testOldAvroListOfLists()#org/apache/parquet/avro/TestAvroSchemaConverter/testRoundTripConversion(org.apache.parquet.pig.Schema,java.lang.String)
org/apache/parquet/avro/TestAvroSchemaConverter/testOldAvroListOfLists()#java/io/PrintStream/println(char[])
org/apache/parquet/avro/TestAvroSchemaConverter/testOldAvroListOfLists()#org/apache/parquet/avro/TestAvroSchemaConverter/optional(org.apache.parquet.pig.Schema)
org/apache/parquet/avro/TestAvroSchemaConverter/testOldAvroListOfLists()#java/lang/Object/Object()
org/apache/parquet/avro/TestAvroSchemaConverter/testAllTypesParquetToAvro()#org/apache/parquet/avro/TestAvroSchemaConverter/testParquetToAvroConversion(org.apache.parquet.hadoop.Configuration,org.apache.parquet.pig.Schema,java.lang.String)
org/apache/parquet/avro/TestAvroSchemaConverter/testDecimalIntegerType()#org/apache/parquet/avro/TestAvroSchemaConverter/testParquetToAvroConversion(org.apache.parquet.pig.Schema,java.lang.String)
org/apache/parquet/avro/TestAvroSchemaConverter/testDecimalIntegerType()#java/util/Arrays/asList(T[])
org/apache/parquet/avro/TestAvroSchemaConverter/testDecimalIntegerType()#java/lang/Object/Object()
org/apache/parquet/avro/TestAvroSchemaConverter/testRoundTripConversion(org.apache.parquet.pig.Schema,java.lang.String)#org/apache/parquet/avro/TestAvroSchemaConverter/testRoundTripConversion(org.apache.parquet.hadoop.Configuration,org.apache.parquet.pig.Schema,java.lang.String)
org/apache/parquet/avro/TestAvroSchemaConverter/assertThrows(java.lang.String,java.lang.Class,java.lang.Runnable)#java/lang/Runnable/run()
org/apache/parquet/avro/TestAvroSchemaConverter/assertThrows(java.lang.String,java.lang.Class,java.lang.Runnable)#java/lang/Throwable/addSuppressed(java.lang.Throwable)
org/apache/parquet/avro/TestAvroSchemaConverter/assertThrows(java.lang.String,java.lang.Class,java.lang.Runnable)#java/lang/Class/getName()
org/apache/parquet/avro/TestAvroSchemaConverter/assertThrows(java.lang.String,java.lang.Class,java.lang.Runnable)#java/lang/Object/getClass()
org/apache/parquet/avro/TestAvroSchemaConverter/testTimeMillisType()#java/util/Arrays/asList(T[])
org/apache/parquet/avro/TestAvroSchemaConverter/testTimeMillisType()#org/apache/parquet/avro/TestAvroSchemaConverter/testRoundTripConversion(org.apache.parquet.pig.Schema,java.lang.String)
org/apache/parquet/avro/TestAvroSchemaConverter/testTimeMillisType()#org/apache/parquet/schema/PrimitiveType/PrimitiveType(org.apache.parquet.schema.Type.Repetition,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,int,java.lang.String,org.apache.parquet.schema.OriginalType)
org/apache/parquet/avro/TestAvroSchemaConverter/testTimeMillisType()#org/apache/parquet/schema/PrimitiveType/PrimitiveType(org.apache.parquet.schema.Type.Repetition,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,java.lang.String,org.apache.parquet.schema.OriginalType)
org/apache/parquet/avro/TestAvroSchemaConverter/testTimeMillisType()#java/lang/Object/Object()
org/apache/parquet/avro/TestAvroSchemaConverter/testTimeMillisType()#org/apache/parquet/avro/TestAvroSchemaConverter/assertThrows(java.lang.String,java.lang.Class,java.lang.Runnable)
org/apache/parquet/avro/TestAvroSchemaConverter/testTimeMillisType()#org/apache/parquet/avro/TestAvroSchemaConverter/testTimeMillisType()/$anonymous1/()
org/apache/parquet/avro/TestAvroSchemaConverter/testUnionOfTwoTypes()#org/apache/parquet/avro/TestAvroSchemaConverter/testAvroToParquetConversion(org.apache.parquet.pig.Schema,java.lang.String)
org/apache/parquet/avro/TestAvroSchemaConverter/testUnionOfTwoTypes()#java/util/Arrays/asList(T[])
org/apache/parquet/avro/TestAvroSchemaConverter/testUnionOfTwoTypes()#java/lang/Object/Object()
org/apache/parquet/hadoop/PrintFooter/percentComp(long,long)#org/apache/parquet/hadoop/PrintFooter/percent(long,long)
org/apache/parquet/hadoop/PrintFooter/main(java.lang.String[])#org/apache/parquet/hadoop/PrintFooter/add(org.apache.parquet.hadoop.metadata.ParquetMetadata)
org/apache/parquet/hadoop/PrintFooter/main(java.lang.String[])#java/util/ArrayList/ArrayList()
org/apache/parquet/hadoop/PrintFooter/main(java.lang.String[])#org/apache/parquet/hadoop/Footer/getParquetMetadata()
org/apache/parquet/hadoop/PrintFooter/main(java.lang.String[])#java/util/Map/Entry/getValue()
org/apache/parquet/hadoop/PrintFooter/main(java.lang.String[])#java/io/PrintStream/println(java.lang.String)
org/apache/parquet/hadoop/PrintFooter/main(java.lang.String[])#java/util/Collection/isEmpty()
org/apache/parquet/hadoop/PrintFooter/main(java.lang.String[])#java/util/Arrays/asList(T[])
org/apache/parquet/hadoop/PrintFooter/main(java.lang.String[])#org/apache/parquet/hadoop/PrintFooter/main(java/lang/String[])/$anonymous1/()
org/apache/parquet/hadoop/PrintFooter/main(java.lang.String[])#java/io/PrintStream/print(java.lang.String)
org/apache/parquet/hadoop/PrintFooter/main(java.lang.String[])#java/net/URI/URI(java.lang.String)
org/apache/parquet/hadoop/PrintFooter/main(java.lang.String[])#java/util/Deque/add(E)
org/apache/parquet/hadoop/PrintFooter/main(java.lang.String[])#java/util/Map/Entry/getKey()
org/apache/parquet/hadoop/PrintFooter/main(java.lang.String[])#java/io/PrintStream/println(char[])
org/apache/parquet/hadoop/PrintFooter/main(java.lang.String[])#java/io/PrintStream/print(char)
org/apache/parquet/hadoop/PrintFooter/main(java.lang.String[])#java/util/concurrent/ExecutorService/shutdownNow()
org/apache/parquet/hadoop/PrintFooter/main(java.lang.String[])#java/util/Deque/removeFirst()
org/apache/parquet/hadoop/PrintFooter/main(java.lang.String[])#org/apache/parquet/hadoop/PrintFooter/percent(long,long)
org/apache/parquet/hadoop/PrintFooter/main(java.lang.String[])#java/util/concurrent/Executors/newFixedThreadPool(int)
org/apache/parquet/hadoop/PrintFooter/main(java.lang.String[])#java/lang/System/currentTimeMillis()
org/apache/parquet/hadoop/PrintFooter/main(java.lang.String[])#java/util/concurrent/Future/isDone()
org/apache/parquet/hadoop/PrintFooter/main(java.lang.String[])#java/util/Map/entrySet()
org/apache/parquet/hadoop/PrintFooter/main(java.lang.String[])#org/apache/parquet/hadoop/PrintFooter/humanReadable(long)
org/apache/parquet/hadoop/PrintFooter/main(java.lang.String[])#org/apache/parquet/hadoop/ParquetFileReader/readSummaryFile(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.FileStatus)
org/apache/parquet/hadoop/PrintFooter/main(java.lang.String[])#java/util/Deque/addLast(E)
org/apache/parquet/hadoop/PrintFooter/main(java.lang.String[])#java/util/concurrent/Future/get()
org/apache/parquet/hadoop/PrintFooter/main(java.lang.String[])#java/lang/Object/Object()
org/apache/parquet/hadoop/PrintFooter/main(java.lang.String[])#java/util/concurrent/ExecutorService/submit(java.util.concurrent.Callable)
org/apache/parquet/hadoop/PrintFooter/main(java.lang.String[])#java/util/concurrent/LinkedBlockingDeque/LinkedBlockingDeque()
org/apache/parquet/hadoop/PrintFooter/add(org.apache.parquet.column.ColumnDescriptor,long,long,long,java.util.Collection,org.apache.parquet.column.statistics.Statistics)#java/util/Map/get(java.lang.Object)
org/apache/parquet/hadoop/PrintFooter/add(org.apache.parquet.column.ColumnDescriptor,long,long,long,java.util.Collection,org.apache.parquet.column.statistics.Statistics)#org/apache/parquet/hadoop/PrintFooter/ColStats/ColStats()
org/apache/parquet/hadoop/PrintFooter/add(org.apache.parquet.column.ColumnDescriptor,long,long,long,java.util.Collection,org.apache.parquet.column.statistics.Statistics)#org/apache/parquet/hadoop/PrintFooter/ColStats/add(long,long,long,java.util.Collection,org.apache.parquet.column.statistics.Statistics)
org/apache/parquet/hadoop/PrintFooter/add(org.apache.parquet.column.ColumnDescriptor,long,long,long,java.util.Collection,org.apache.parquet.column.statistics.Statistics)#java/util/Map/put(K,V)
org/apache/parquet/hadoop/PrintFooter/add(org.apache.parquet.hadoop.metadata.ParquetMetadata)#org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/getPath()
org/apache/parquet/hadoop/PrintFooter/add(org.apache.parquet.hadoop.metadata.ParquetMetadata)#org/apache/parquet/hadoop/metadata/ParquetMetadata/getFileMetaData()
org/apache/parquet/hadoop/PrintFooter/add(org.apache.parquet.hadoop.metadata.ParquetMetadata)#org/apache/parquet/hadoop/metadata/BlockMetaData/getRowCount()
org/apache/parquet/hadoop/PrintFooter/add(org.apache.parquet.hadoop.metadata.ParquetMetadata)#org/apache/parquet/hadoop/metadata/ColumnPath/toArray()
org/apache/parquet/hadoop/PrintFooter/add(org.apache.parquet.hadoop.metadata.ParquetMetadata)#org/apache/parquet/schema/MessageType/getColumnDescription(java.lang.String[])
org/apache/parquet/hadoop/PrintFooter/add(org.apache.parquet.hadoop.metadata.ParquetMetadata)#org/apache/parquet/hadoop/PrintFooter/add(org.apache.parquet.column.ColumnDescriptor,long,long,long,java.util.Collection,org.apache.parquet.column.statistics.Statistics)
org/apache/parquet/hadoop/PrintFooter/add(org.apache.parquet.hadoop.metadata.ParquetMetadata)#org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/getTotalUncompressedSize()
org/apache/parquet/hadoop/PrintFooter/add(org.apache.parquet.hadoop.metadata.ParquetMetadata)#org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/getTotalSize()
org/apache/parquet/hadoop/PrintFooter/add(org.apache.parquet.hadoop.metadata.ParquetMetadata)#org/apache/parquet/hadoop/metadata/BlockMetaData/getColumns()
org/apache/parquet/hadoop/PrintFooter/add(org.apache.parquet.hadoop.metadata.ParquetMetadata)#org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/getValueCount()
org/apache/parquet/hadoop/PrintFooter/add(org.apache.parquet.hadoop.metadata.ParquetMetadata)#org/apache/parquet/hadoop/metadata/ParquetMetadata/getBlocks()
org/apache/parquet/hadoop/PrintFooter/add(org.apache.parquet.hadoop.metadata.ParquetMetadata)#org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/getStatistics()
org/apache/parquet/hadoop/PrintFooter/add(org.apache.parquet.hadoop.metadata.ParquetMetadata)#org/apache/parquet/hadoop/metadata/FileMetaData/getSchema()
org/apache/parquet/hadoop/PrintFooter/add(org.apache.parquet.hadoop.metadata.ParquetMetadata)#org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/getEncodings()
org/apache/parquet/hadoop/PrintFooter/humanReadable(long)#java/lang/String/valueOf(long)
org/apache/parquet/hadoop/PrintFooter/printTotalString(java.lang.String,long,long)#java/io/PrintStream/println(java.lang.String)
org/apache/parquet/hadoop/PrintFooter/printTotalString(java.lang.String,long,long)#org/apache/parquet/hadoop/PrintFooter/percentComp(long,long)
org/apache/parquet/hadoop/PrintFooter/printTotalString(java.lang.String,long,long)#org/apache/parquet/hadoop/PrintFooter/humanReadable(long)
org/apache/parquet/hadoop/ColumnChunkPageWriteStore/getPageWriter(org.apache.parquet.column.ColumnDescriptor)#java/util/Map/get(java.lang.Object)
org/apache/parquet/hadoop/ColumnChunkPageWriteStore/flushToFileWriter(org.apache.parquet.hadoop.ParquetFileWriter)#org/apache/parquet/hadoop/ColumnChunkPageWriteStore/ColumnChunkPageWriter/writeToFileWriter(org.apache.parquet.hadoop.ParquetFileWriter)
org/apache/parquet/hadoop/ColumnChunkPageWriteStore/flushToFileWriter(org.apache.parquet.hadoop.ParquetFileWriter)#org/apache/parquet/schema/MessageType/getColumns()
org/apache/parquet/hadoop/ColumnChunkPageWriteStore/flushToFileWriter(org.apache.parquet.hadoop.ParquetFileWriter)#java/util/Map/get(java.lang.Object)
org/apache/parquet/tools/json/JsonRecordFormatter/fromSchema(org.apache.parquet.schema.MessageType)#org/apache/parquet/tools/json/JsonRecordFormatter/JsonGroupFormatter/JsonGroupFormatter(org.apache.parquet.schema.GroupType)
org/apache/parquet/column/values/dictionary/DictionaryValuesWriter/PlainIntegerDictionaryValuesWriter/fallBackDictionaryEncodedData(org.apache.parquet.column.values.ValuesWriter)#org/apache/parquet/column/values/dictionary/IntList/IntIterator/hasNext()
org/apache/parquet/column/values/dictionary/DictionaryValuesWriter/PlainIntegerDictionaryValuesWriter/fallBackDictionaryEncodedData(org.apache.parquet.column.values.ValuesWriter)#org/apache/parquet/column/values/dictionary/IntList/IntIterator/next()
org/apache/parquet/column/values/dictionary/DictionaryValuesWriter/PlainIntegerDictionaryValuesWriter/fallBackDictionaryEncodedData(org.apache.parquet.column.values.ValuesWriter)#org/apache/parquet/column/values/dictionary/IntList/iterator()
org/apache/parquet/column/values/dictionary/DictionaryValuesWriter/PlainIntegerDictionaryValuesWriter/fallBackDictionaryEncodedData(org.apache.parquet.column.values.ValuesWriter)#org/apache/parquet/column/values/ValuesWriter/writeInteger(int)
org/apache/parquet/column/values/dictionary/DictionaryValuesWriter/PlainIntegerDictionaryValuesWriter/fallBackDictionaryEncodedData(org.apache.parquet.column.values.ValuesWriter)#org/apache/parquet/column/values/dictionary/DictionaryValuesWriter/PlainIntegerDictionaryValuesWriter/getDictionarySize()
org/apache/parquet/column/values/dictionary/DictionaryValuesWriter/PlainIntegerDictionaryValuesWriter/toDictPageAndClose()#org/apache/parquet/column/values/plain/PlainValuesWriter/writeInteger(int)
org/apache/parquet/column/values/dictionary/DictionaryValuesWriter/PlainIntegerDictionaryValuesWriter/toDictPageAndClose()#org/apache/parquet/column/values/dictionary/DictionaryValuesWriter/dictPage(org.apache.parquet.column.values.ValuesWriter)
org/apache/parquet/column/values/dictionary/DictionaryValuesWriter/PlainIntegerDictionaryValuesWriter/toDictPageAndClose()#org/apache/parquet/column/values/plain/PlainValuesWriter/PlainValuesWriter(int,int,org.apache.parquet.bytes.ByteBufferAllocator)
org/apache/parquet/column/values/dictionary/DictionaryValuesWriter/PlainIntegerDictionaryValuesWriter/writeInteger(int)#org/apache/parquet/column/values/dictionary/IntList/add(int)
org/apache/parquet/column/values/bitpacking/ThreeBitPackingReader/read()#java/io/InputStream/read()
org/apache/parquet/column/values/bitpacking/ThreeBitPackingReader/read()#org/apache/parquet/column/values/bitpacking/BaseBitPackingReader/alignToBytes(int)
org/apache/parquet/pig/PigSchemaConverter/ColumnNameAccess/filterTupleSchema(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,org.apache.parquet.pig.RequiredFieldList)#java/util/ArrayList/ArrayList()
org/apache/parquet/pig/PigSchemaConverter/ColumnNameAccess/filterTupleSchema(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,org.apache.parquet.pig.RequiredFieldList)#org/apache/parquet/pig/PigSchemaConverter/filter(org.apache.parquet.schema.Type,org.apache.parquet.pig.convert.FieldSchema)
org/apache/parquet/pig/PigSchemaConverter/ColumnNameAccess/filterTupleSchema(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,org.apache.parquet.pig.RequiredFieldList)#org/apache/parquet/pig/PigSchemaConverter/name(java.lang.String,java.lang.String)
org/apache/parquet/pig/PigSchemaConverter/ColumnNameAccess/filterTupleSchema(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,org.apache.parquet.pig.RequiredFieldList)#org/apache/parquet/schema/GroupType/getType(java.lang.String)
org/apache/parquet/pig/PigSchemaConverter/ColumnNameAccess/filterTupleSchema(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,org.apache.parquet.pig.RequiredFieldList)#java/util/List/add(E)
org/apache/parquet/pig/PigSchemaConverter/ColumnNameAccess/filterTupleSchema(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,org.apache.parquet.pig.RequiredFieldList)#org/apache/parquet/schema/GroupType/containsField(java.lang.String)
org/apache/parquet/hadoop/ParquetRecordReader/getCurrentValue()#org/apache/parquet/hadoop/InternalParquetRecordReader/getCurrentValue()
org/apache/parquet/hadoop/ParquetRecordReader/initialize(org.apache.parquet.hadoop.InputSplit,org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Reporter)#org/apache/parquet/hadoop/ParquetRecordReader/initializeInternalReader(org.apache.parquet.hadoop.ParquetInputSplit,org.apache.parquet.hadoop.Configuration)
org/apache/parquet/hadoop/ParquetRecordReader/initialize(org.apache.parquet.hadoop.InputSplit,org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Reporter)#org/apache/parquet/hadoop/ParquetRecordReader/toParquetSplit(org.apache.parquet.hadoop.InputSplit)
org/apache/parquet/hadoop/ParquetRecordReader/initialize(org.apache.parquet.hadoop.InputSplit,org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Reporter)#org/apache/parquet/hadoop/util/counters/BenchmarkCounter/initCounterFromReporter(org.apache.parquet.hadoop.Reporter,org.apache.parquet.hadoop.Configuration)
org/apache/parquet/hadoop/ParquetRecordReader/toParquetSplit(org.apache.parquet.hadoop.InputSplit)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/parquet/hadoop/ParquetRecordReader/toParquetSplit(org.apache.parquet.hadoop.InputSplit)#org/apache/parquet/hadoop/ParquetInputSplit/from(org.apache.parquet.hadoop.FileSplit)
org/apache/parquet/hadoop/ParquetRecordReader/close()#org/apache/parquet/hadoop/InternalParquetRecordReader/close()
org/apache/parquet/hadoop/ParquetRecordReader/initialize(org.apache.parquet.hadoop.InputSplit,org.apache.parquet.hadoop.TaskAttemptContext)#org/apache/parquet/hadoop/ParquetRecordReader/initializeInternalReader(org.apache.parquet.hadoop.ParquetInputSplit,org.apache.parquet.hadoop.Configuration)
org/apache/parquet/hadoop/ParquetRecordReader/initialize(org.apache.parquet.hadoop.InputSplit,org.apache.parquet.hadoop.TaskAttemptContext)#org/apache/parquet/hadoop/util/counters/BenchmarkCounter/initCounterFromContext(org.apache.parquet.hadoop.TaskAttemptContext)
org/apache/parquet/hadoop/ParquetRecordReader/initialize(org.apache.parquet.hadoop.InputSplit,org.apache.parquet.hadoop.TaskAttemptContext)#java/lang/String/format(java.lang.String,java.lang.Object[])
org/apache/parquet/hadoop/ParquetRecordReader/initialize(org.apache.parquet.hadoop.InputSplit,org.apache.parquet.hadoop.TaskAttemptContext)#org/apache/parquet/hadoop/util/ContextUtil/hasCounterMethod(org.apache.parquet.hadoop.TaskAttemptContext)
org/apache/parquet/hadoop/ParquetRecordReader/initialize(org.apache.parquet.hadoop.InputSplit,org.apache.parquet.hadoop.TaskAttemptContext)#org/apache/parquet/hadoop/ParquetRecordReader/toParquetSplit(org.apache.parquet.hadoop.InputSplit)
org/apache/parquet/hadoop/ParquetRecordReader/initialize(org.apache.parquet.hadoop.InputSplit,org.apache.parquet.hadoop.TaskAttemptContext)#org/apache/parquet/hadoop/util/ContextUtil/getConfiguration(org.apache.parquet.hadoop.util.JobContext)
org/apache/parquet/hadoop/ParquetRecordReader/initializeInternalReader(org.apache.parquet.hadoop.ParquetInputSplit,org.apache.parquet.hadoop.Configuration)#org/apache/parquet/format/converter/ParquetMetadataConverter/offsets(long[])
org/apache/parquet/hadoop/ParquetRecordReader/initializeInternalReader(org.apache.parquet.hadoop.ParquetInputSplit,org.apache.parquet.hadoop.Configuration)#org/apache/parquet/hadoop/ParquetFileReader/filterRowGroups(org.apache.parquet.filter2.compat.FilterCompat.Filter)
org/apache/parquet/hadoop/ParquetRecordReader/initializeInternalReader(org.apache.parquet.hadoop.ParquetInputSplit,org.apache.parquet.hadoop.Configuration)#org/apache/parquet/hadoop/ParquetFileReader/getRowGroups()
org/apache/parquet/hadoop/ParquetRecordReader/initializeInternalReader(org.apache.parquet.hadoop.ParquetInputSplit,org.apache.parquet.hadoop.Configuration)#org/apache/parquet/hadoop/metadata/ParquetMetadata/getFileMetaData()
org/apache/parquet/hadoop/ParquetRecordReader/initializeInternalReader(org.apache.parquet.hadoop.ParquetInputSplit,org.apache.parquet.hadoop.Configuration)#org/apache/parquet/hadoop/ParquetInputFormat/getFilter(org.apache.parquet.hadoop.Configuration)
org/apache/parquet/hadoop/ParquetRecordReader/initializeInternalReader(org.apache.parquet.hadoop.ParquetInputSplit,org.apache.parquet.hadoop.Configuration)#java/util/List/isEmpty()
org/apache/parquet/hadoop/ParquetRecordReader/initializeInternalReader(org.apache.parquet.hadoop.ParquetInputSplit,org.apache.parquet.hadoop.Configuration)#java/util/List/size()
org/apache/parquet/hadoop/ParquetRecordReader/initializeInternalReader(org.apache.parquet.hadoop.ParquetInputSplit,org.apache.parquet.hadoop.Configuration)#org/apache/parquet/hadoop/InternalParquetRecordReader/initialize(org.apache.parquet.hadoop.ParquetFileReader,org.apache.parquet.hadoop.Configuration)
org/apache/parquet/hadoop/ParquetRecordReader/initializeInternalReader(org.apache.parquet.hadoop.ParquetInputSplit,org.apache.parquet.hadoop.Configuration)#org/apache/parquet/hadoop/ParquetFileReader/open(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path,org.apache.parquet.format.converter.ParquetMetadataConverter.MetadataFilter)
org/apache/parquet/hadoop/ParquetRecordReader/initializeInternalReader(org.apache.parquet.hadoop.ParquetInputSplit,org.apache.parquet.hadoop.Configuration)#org/apache/parquet/hadoop/metadata/ParquetMetadata/getBlocks()
org/apache/parquet/hadoop/ParquetRecordReader/initializeInternalReader(org.apache.parquet.hadoop.ParquetInputSplit,org.apache.parquet.hadoop.Configuration)#org/apache/parquet/hadoop/ParquetInputSplit/getEnd()
org/apache/parquet/hadoop/ParquetRecordReader/initializeInternalReader(org.apache.parquet.hadoop.ParquetInputSplit,org.apache.parquet.hadoop.Configuration)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/apache/parquet/hadoop/ParquetRecordReader/initializeInternalReader(org.apache.parquet.hadoop.ParquetInputSplit,org.apache.parquet.hadoop.Configuration)#org/apache/parquet/hadoop/ParquetInputSplit/getRowGroupOffsets()
org/apache/parquet/hadoop/ParquetRecordReader/initializeInternalReader(org.apache.parquet.hadoop.ParquetInputSplit,org.apache.parquet.hadoop.Configuration)#org/apache/parquet/hadoop/ParquetFileReader/getFooter()
org/apache/parquet/hadoop/ParquetRecordReader/initializeInternalReader(org.apache.parquet.hadoop.ParquetInputSplit,org.apache.parquet.hadoop.Configuration)#org/apache/parquet/hadoop/ParquetRecordReader/checkDeltaByteArrayProblem(org.apache.parquet.hadoop.metadata.FileMetaData,org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.metadata.BlockMetaData)
org/apache/parquet/hadoop/ParquetRecordReader/initializeInternalReader(org.apache.parquet.hadoop.ParquetInputSplit,org.apache.parquet.hadoop.Configuration)#java/util/List/get(int)
org/apache/parquet/hadoop/ParquetRecordReader/initializeInternalReader(org.apache.parquet.hadoop.ParquetInputSplit,org.apache.parquet.hadoop.Configuration)#java/util/Arrays/toString(long[])
org/apache/parquet/hadoop/ParquetRecordReader/initializeInternalReader(org.apache.parquet.hadoop.ParquetInputSplit,org.apache.parquet.hadoop.Configuration)#org/apache/parquet/format/converter/ParquetMetadataConverter/range(long,long)
org/apache/parquet/hadoop/ParquetRecordReader/checkDeltaByteArrayProblem(org.apache.parquet.hadoop.metadata.FileMetaData,org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.metadata.BlockMetaData)#org/apache/parquet/hadoop/metadata/FileMetaData/getCreatedBy()
org/apache/parquet/hadoop/ParquetRecordReader/checkDeltaByteArrayProblem(org.apache.parquet.hadoop.metadata.FileMetaData,org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.metadata.BlockMetaData)#org/apache/parquet/io/ParquetDecodingException/ParquetDecodingException(java.lang.String)
org/apache/parquet/hadoop/ParquetRecordReader/checkDeltaByteArrayProblem(org.apache.parquet.hadoop.metadata.FileMetaData,org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.metadata.BlockMetaData)#org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/getEncodings()
org/apache/parquet/hadoop/ParquetRecordReader/checkDeltaByteArrayProblem(org.apache.parquet.hadoop.metadata.FileMetaData,org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.metadata.BlockMetaData)#java/util/HashSet/HashSet()
org/apache/parquet/hadoop/ParquetRecordReader/checkDeltaByteArrayProblem(org.apache.parquet.hadoop.metadata.FileMetaData,org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.metadata.BlockMetaData)#org/apache/parquet/hadoop/metadata/BlockMetaData/getColumns()
org/apache/parquet/hadoop/ParquetRecordReader/checkDeltaByteArrayProblem(org.apache.parquet.hadoop.metadata.FileMetaData,org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.metadata.BlockMetaData)#java/util/Set/addAll(java.util.Collection)
org/apache/parquet/hadoop/ParquetRecordReader/checkDeltaByteArrayProblem(org.apache.parquet.hadoop.metadata.FileMetaData,org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.metadata.BlockMetaData)#org/apache/parquet/CorruptDeltaByteArrays/requiresSequentialReads(java.lang.String,org.apache.parquet.column.Encoding)
org/apache/parquet/hadoop/ParquetRecordReader/getProgress()#org/apache/parquet/hadoop/InternalParquetRecordReader/getProgress()
org/apache/parquet/hadoop/ParquetRecordReader/nextKeyValue()#org/apache/parquet/hadoop/InternalParquetRecordReader/nextKeyValue()
org/apache/hadoop/hive/ql/io/parquet/TestMapredParquetInputFormat/testDefaultConstructor()#org/apache/hadoop/hive/ql/io/parquet/MapredParquetInputFormat/MapredParquetInputFormat()
org/apache/hadoop/hive/ql/io/parquet/TestMapredParquetInputFormat/testConstructorWithParquetInputFormat()#org/apache/hadoop/hive/ql/io/parquet/MapredParquetInputFormat/MapredParquetInputFormat()
org/apache/parquet/column/page/mem/MemPageStore/getPageReader(org.apache.parquet.column.ColumnDescriptor)#java/util/ArrayList/ArrayList(java.util.Collection)
org/apache/parquet/column/page/mem/MemPageStore/getPageReader(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/page/mem/MemPageWriter/getDictionaryPage()
org/apache/parquet/column/page/mem/MemPageStore/getPageReader(org.apache.parquet.column.ColumnDescriptor)#java/util/Map/get(java.lang.Object)
org/apache/parquet/column/page/mem/MemPageStore/getPageReader(org.apache.parquet.column.ColumnDescriptor)#java/util/List/size()
org/apache/parquet/column/page/mem/MemPageStore/getPageReader(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/page/mem/MemPageWriter/getTotalValueCount()
org/apache/parquet/column/page/mem/MemPageStore/getPageReader(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/page/mem/MemPageWriter/getPages()
org/apache/parquet/column/page/mem/MemPageStore/getPageReader(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/page/mem/MemPageReader/MemPageReader(long,java.util.Iterator,org.apache.parquet.column.page.DictionaryPage)
org/apache/parquet/column/page/mem/MemPageStore/getPageReader(org.apache.parquet.column.ColumnDescriptor)#java/util/List/iterator()
org/apache/parquet/column/page/mem/MemPageStore/getPageReader(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/UnknownColumnException/UnknownColumnException(org.apache.parquet.column.ColumnDescriptor)
org/apache/parquet/column/page/mem/MemPageStore/getPageWriter(org.apache.parquet.column.ColumnDescriptor)#java/util/Map/get(java.lang.Object)
org/apache/parquet/column/page/mem/MemPageStore/getPageWriter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/page/mem/MemPageWriter/MemPageWriter()
org/apache/parquet/column/page/mem/MemPageStore/getPageWriter(org.apache.parquet.column.ColumnDescriptor)#java/util/Map/put(K,V)
org/apache/parquet/thrift/projection/amend/DefaultEventsVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.StructType,java.lang.Void)#org/apache/parquet/thrift/projection/amend/ReadFieldBeginProtocol/ReadFieldBeginProtocol(org.apache.parquet.thrift.struct.ThriftField)
org/apache/parquet/thrift/projection/amend/DefaultEventsVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.StructType,java.lang.Void)#org/apache/parquet/thrift/struct/ThriftType/StructType/getChildren()
org/apache/parquet/thrift/projection/amend/DefaultEventsVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.StructType,java.lang.Void)#java/util/List/add(E)
org/apache/parquet/thrift/projection/amend/DefaultEventsVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.StructType,java.lang.Void)#org/apache/parquet/thrift/struct/ThriftType/accept(org.apache.parquet.thrift.struct.ThriftType.StateVisitor,S)
org/apache/parquet/thrift/projection/amend/DefaultEventsVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.StructType,java.lang.Void)#org/apache/parquet/thrift/projection/amend/DefaultEventsVisitor/StructBeginProtocol/StructBeginProtocol(java.lang.String)
org/apache/parquet/thrift/projection/amend/DefaultEventsVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.StructType,java.lang.Void)#org/apache/parquet/thrift/struct/ThriftField/getType()
org/apache/parquet/thrift/projection/amend/DefaultEventsVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.MapType,java.lang.Void)#org/apache/parquet/thrift/projection/amend/DefaultEventsVisitor/visit(org/apache/parquet/thrift/struct/ThriftType/MapType,java/lang/Void)/$anonymous2/(java.lang.String)
org/apache/parquet/thrift/projection/amend/DefaultEventsVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.MapType,java.lang.Void)#org/apache/parquet/thrift/projection/amend/DefaultEventsVisitor/visit(org/apache/parquet/thrift/struct/ThriftType/MapType,java/lang/Void)/$anonymous1/(java.lang.String)
org/apache/parquet/thrift/projection/amend/DefaultEventsVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.MapType,java.lang.Void)#java/util/List/add(E)
org/apache/parquet/thrift/projection/amend/DefaultEventsVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.SetType,java.lang.Void)#org/apache/parquet/thrift/projection/amend/DefaultEventsVisitor/visit(org/apache/parquet/thrift/struct/ThriftType/SetType,java/lang/Void)/$anonymous2/(java.lang.String)
org/apache/parquet/thrift/projection/amend/DefaultEventsVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.SetType,java.lang.Void)#org/apache/parquet/thrift/projection/amend/DefaultEventsVisitor/visit(org/apache/parquet/thrift/struct/ThriftType/SetType,java/lang/Void)/$anonymous1/(java.lang.String)
org/apache/parquet/thrift/projection/amend/DefaultEventsVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.SetType,java.lang.Void)#java/util/List/add(E)
org/apache/parquet/thrift/projection/amend/DefaultEventsVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.ListType,java.lang.Void)#org/apache/parquet/thrift/projection/amend/DefaultEventsVisitor/visit(org/apache/parquet/thrift/struct/ThriftType/ListType,java/lang/Void)/$anonymous2/(java.lang.String)
org/apache/parquet/thrift/projection/amend/DefaultEventsVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.ListType,java.lang.Void)#org/apache/parquet/thrift/projection/amend/DefaultEventsVisitor/visit(org/apache/parquet/thrift/struct/ThriftType/ListType,java/lang/Void)/$anonymous1/(java.lang.String)
org/apache/parquet/thrift/projection/amend/DefaultEventsVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.ListType,java.lang.Void)#java/util/List/add(E)
org/apache/parquet/thrift/projection/amend/DefaultEventsVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.I32Type,java.lang.Void)#java/util/List/add(E)
org/apache/parquet/thrift/projection/amend/DefaultEventsVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.I32Type,java.lang.Void)#org/apache/parquet/thrift/projection/amend/DefaultEventsVisitor/visit(org/apache/parquet/thrift/struct/ThriftType/I32Type,java/lang/Void)/$anonymous1/(java.lang.String)
org/apache/parquet/thrift/projection/amend/DefaultEventsVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.BoolType,java.lang.Void)#java/util/List/add(E)
org/apache/parquet/thrift/projection/amend/DefaultEventsVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.BoolType,java.lang.Void)#org/apache/parquet/thrift/projection/amend/DefaultEventsVisitor/visit(org/apache/parquet/thrift/struct/ThriftType/BoolType,java/lang/Void)/$anonymous1/(java.lang.String)
org/apache/parquet/thrift/projection/amend/DefaultEventsVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.EnumType,java.lang.Void)#org/apache/parquet/thrift/projection/amend/DefaultEventsVisitor/visit(org/apache/parquet/thrift/struct/ThriftType/EnumType,java/lang/Void)/$anonymous1/(java.lang.String)
org/apache/parquet/thrift/projection/amend/DefaultEventsVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.EnumType,java.lang.Void)#java/util/List/add(E)
org/apache/parquet/thrift/projection/amend/DefaultEventsVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.I64Type,java.lang.Void)#org/apache/parquet/thrift/projection/amend/DefaultEventsVisitor/visit(org/apache/parquet/thrift/struct/ThriftType/I64Type,java/lang/Void)/$anonymous1/(java.lang.String)
org/apache/parquet/thrift/projection/amend/DefaultEventsVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.I64Type,java.lang.Void)#java/util/List/add(E)
org/apache/parquet/thrift/projection/amend/DefaultEventsVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.ByteType,java.lang.Void)#java/util/List/add(E)
org/apache/parquet/thrift/projection/amend/DefaultEventsVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.ByteType,java.lang.Void)#org/apache/parquet/thrift/projection/amend/DefaultEventsVisitor/visit(org/apache/parquet/thrift/struct/ThriftType/ByteType,java/lang/Void)/$anonymous1/(java.lang.String)
org/apache/parquet/thrift/projection/amend/DefaultEventsVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.I16Type,java.lang.Void)#java/util/List/add(E)
org/apache/parquet/thrift/projection/amend/DefaultEventsVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.I16Type,java.lang.Void)#org/apache/parquet/thrift/projection/amend/DefaultEventsVisitor/visit(org/apache/parquet/thrift/struct/ThriftType/I16Type,java/lang/Void)/$anonymous1/(java.lang.String)
org/apache/parquet/thrift/projection/amend/DefaultEventsVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.DoubleType,java.lang.Void)#org/apache/parquet/thrift/projection/amend/DefaultEventsVisitor/visit(org/apache/parquet/thrift/struct/ThriftType/DoubleType,java/lang/Void)/$anonymous1/(java.lang.String)
org/apache/parquet/thrift/projection/amend/DefaultEventsVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.DoubleType,java.lang.Void)#java/util/List/add(E)
org/apache/parquet/thrift/projection/amend/DefaultEventsVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.StringType,java.lang.Void)#org/apache/parquet/thrift/projection/amend/DefaultEventsVisitor/StringProtocol/StringProtocol(java.lang.String)
org/apache/parquet/thrift/projection/amend/DefaultEventsVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.StringType,java.lang.Void)#java/util/List/add(E)
org/apache/parquet/pig/summary/MapSummaryData/add(org.apache.parquet.pig.Schema,java.util.Map)#org/apache/parquet/pig/summary/FieldSummaryData/setName(java.lang.String)
org/apache/parquet/pig/summary/MapSummaryData/add(org.apache.parquet.pig.Schema,java.util.Map)#org/apache/parquet/pig/summary/SummaryData/getSchema(org.apache.parquet.pig.convert.FieldSchema)
org/apache/parquet/pig/summary/MapSummaryData/add(org.apache.parquet.pig.Schema,java.util.Map)#java/util/Map/Entry/getKey()
org/apache/parquet/pig/summary/MapSummaryData/add(org.apache.parquet.pig.Schema,java.util.Map)#org/apache/parquet/pig/summary/FieldSummaryData/FieldSummaryData()
org/apache/parquet/pig/summary/MapSummaryData/add(org.apache.parquet.pig.Schema,java.util.Map)#org/apache/parquet/pig/summary/SummaryData/getField(org.apache.parquet.pig.Schema,int)
org/apache/parquet/pig/summary/MapSummaryData/add(org.apache.parquet.pig.Schema,java.util.Map)#java/util/Map/entrySet()
org/apache/parquet/pig/summary/MapSummaryData/add(org.apache.parquet.pig.Schema,java.util.Map)#org/apache/parquet/pig/summary/ValueStat/add(double)
org/apache/parquet/pig/summary/MapSummaryData/add(org.apache.parquet.pig.Schema,java.util.Map)#java/util/Map/Entry/getValue()
org/apache/parquet/pig/summary/MapSummaryData/add(org.apache.parquet.pig.Schema,java.util.Map)#org/apache/parquet/pig/summary/SummaryData/add(java.lang.Object)
org/apache/parquet/pig/summary/MapSummaryData/add(org.apache.parquet.pig.Schema,java.util.Map)#java/util/Map/size()
org/apache/parquet/pig/summary/MapSummaryData/add(org.apache.parquet.pig.Schema,java.util.Map)#org/apache/parquet/pig/summary/FieldSummaryData/add(org.apache.parquet.pig.Schema,java.lang.Object)
org/apache/parquet/pig/summary/MapSummaryData/add(org.apache.parquet.pig.Schema,java.util.Map)#org/apache/parquet/pig/summary/SummaryData/getName(org.apache.parquet.pig.convert.FieldSchema)
org/apache/parquet/pig/summary/MapSummaryData/merge(org.apache.parquet.pig.summary.SummaryData)#org/apache/parquet/pig/summary/SummaryData/merge(T,T)
org/apache/parquet/pig/summary/MapSummaryData/merge(org.apache.parquet.pig.summary.SummaryData)#org/apache/parquet/pig/summary/SummaryData/merge(org.apache.parquet.pig.summary.SummaryData)
org/apache/parquet/pig/summary/MapSummaryData/merge(org.apache.parquet.pig.summary.SummaryData)#org/apache/parquet/pig/summary/ValueStat/merge(org.apache.parquet.pig.summary.ValueStat)
org/apache/parquet/column/mem/TestMemPageStore/test()#org/apache/parquet/column/page/mem/MemPageStore/MemPageStore(long)
org/apache/parquet/column/mem/TestMemPageStore/test()#org/apache/parquet/column/page/PageReader/readPage()
org/apache/parquet/column/mem/TestMemPageStore/test()#org/apache/parquet/column/page/PageReader/getTotalValueCount()
org/apache/parquet/column/mem/TestMemPageStore/test()#org/apache/parquet/column/statistics/LongStatistics/LongStatistics()
org/apache/parquet/column/mem/TestMemPageStore/test()#java/io/PrintStream/println(long)
org/apache/parquet/column/mem/TestMemPageStore/test()#org/apache/parquet/column/page/DataPage/getValueCount()
org/apache/parquet/column/mem/TestMemPageStore/test()#org/apache/parquet/bytes/BytesInput/from(byte[])
org/apache/parquet/column/mem/TestMemPageStore/test()#org/apache/parquet/column/page/mem/MemPageStore/getPageReader(org.apache.parquet.column.ColumnDescriptor)
org/apache/parquet/column/mem/TestMemPageStore/test()#java/io/PrintStream/println(java.lang.Object)
org/apache/parquet/column/mem/TestMemPageStore/test()#org/apache/parquet/column/page/PageWriter/writePage(org.apache.parquet.bytes.BytesInput,int,org.apache.parquet.column.statistics.Statistics,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding)
org/apache/parquet/column/mem/TestMemPageStore/test()#org/apache/parquet/column/ColumnDescriptor/ColumnDescriptor(java.lang.String[],org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,int,int)
org/apache/parquet/column/mem/TestMemPageStore/test()#org/apache/parquet/column/page/mem/MemPageStore/getPageWriter(org.apache.parquet.column.ColumnDescriptor)
org/apache/parquet/avro/TestBackwardCompatibility/testCompatStringCompatibility()#org/apache/parquet/hadoop/ParquetReader/builder(org.apache.parquet.hadoop.api.ReadSupport,org.apache.parquet.hadoop.Path)
org/apache/parquet/avro/TestBackwardCompatibility/testCompatStringCompatibility()#org/apache/parquet/avro/AvroReadSupport/AvroReadSupport()
org/apache/parquet/avro/TestBackwardCompatibility/testCompatStringCompatibility()#java/lang/Object/Object()
org/apache/parquet/avro/TestBackwardCompatibility/testStringCompatibility()#org/apache/parquet/hadoop/ParquetReader/builder(org.apache.parquet.hadoop.api.ReadSupport,org.apache.parquet.hadoop.Path)
org/apache/parquet/avro/TestBackwardCompatibility/testStringCompatibility()#org/apache/parquet/avro/AvroReadSupport/AvroReadSupport()
org/apache/parquet/avro/TestBackwardCompatibility/testStringCompatibility()#java/lang/Object/Object()
org/apache/parquet/Strings/expandGlobToWildCardPaths(java.lang.String,char)#java/util/ArrayList/ArrayList()
org/apache/parquet/Strings/expandGlobToWildCardPaths(java.lang.String,char)#org/apache/parquet/Strings/expandGlob(java.lang.String)
org/apache/parquet/Strings/expandGlobToWildCardPaths(java.lang.String,char)#org/apache/parquet/glob/WildcardPath/WildcardPath(java.lang.String,java.lang.String,char)
org/apache/parquet/Strings/expandGlobToWildCardPaths(java.lang.String,char)#java/util/List/add(E)
org/apache/parquet/Strings/expandGlob(java.lang.String)#org/apache/parquet/glob/GlobExpander/expand(java.lang.String)
org/apache/parquet/Strings/isNullOrEmpty(java.lang.String)#java/lang/String/isEmpty()
org/apache/parquet/Strings/join(java.lang.Iterable,java.lang.String)#java/lang/Iterable/iterator()
org/apache/parquet/Strings/join(java.lang.Iterable,java.lang.String)#org/apache/parquet/Strings/join(java.util.Iterator,java.lang.String)
org/apache/parquet/Strings/join(java.lang.String[],java.lang.String)#java/util/Arrays/asList(T[])
org/apache/parquet/Strings/join(java.lang.String[],java.lang.String)#org/apache/parquet/Strings/join(java.lang.Iterable,java.lang.String)
org/apache/parquet/Strings/join(java.util.Iterator,java.lang.String)#java/util/Iterator/hasNext()
org/apache/parquet/Strings/join(java.util.Iterator,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/apache/parquet/Strings/join(java.util.Iterator,java.lang.String)#java/util/Iterator/next()
org/apache/parquet/Strings/join(java.util.Iterator,java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/apache/parquet/Strings/join(java.util.Iterator,java.lang.String)#java/lang/StringBuilder/toString()
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testHeapPosition()#java/nio/ByteBuffer/allocate(int)
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testHeapPosition()#java/nio/Buffer/reset()
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testHeapPosition()#org/apache/parquet/hadoop/util/MockInputStream/MockInputStream(int[])
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testHeapPosition()#java/nio/Buffer/position()
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testHeapPosition()#java/nio/Buffer/position(int)
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testHeapPosition()#java/nio/Buffer/mark()
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testHeapPosition()#java/nio/Buffer/limit()
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testHeapPosition()#org/apache/parquet/hadoop/util/H1SeekableInputStream/readHeapBuffer(org.apache.parquet.hadoop.FSDataInputStream,java.nio.ByteBuffer)
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testHeapPosition()#java/nio/ByteBuffer/wrap(byte[])
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectReadFullyJustRight()#org/apache/parquet/hadoop/util/MockInputStream/MockInputStream(int[])
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectReadFullyJustRight()#org/apache/parquet/hadoop/util/H1SeekableInputStream/readFullyDirectBuffer(org.apache.parquet.hadoop.FSDataInputStream,java.nio.ByteBuffer,byte[])
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectReadFullyJustRight()#java/nio/Buffer/position()
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectReadFullyJustRight()#java/nio/Buffer/flip()
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectReadFullyJustRight()#java/nio/ByteBuffer/allocateDirect(int)
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectReadFullyJustRight()#java/nio/ByteBuffer/wrap(byte[])
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectReadFullyJustRight()#java/nio/Buffer/limit()
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectReadFullyJustRight()#java/lang/ThreadLocal/get()
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectSmallTempBufferSmallReads()#org/apache/parquet/hadoop/util/MockInputStream/MockInputStream(int[])
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectSmallTempBufferSmallReads()#java/nio/Buffer/position()
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectSmallTempBufferSmallReads()#java/nio/Buffer/flip()
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectSmallTempBufferSmallReads()#java/nio/Buffer/limit()
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectSmallTempBufferSmallReads()#org/apache/parquet/hadoop/util/H1SeekableInputStream/readDirectBuffer(org.apache.parquet.hadoop.FSDataInputStream,java.nio.ByteBuffer,byte[])
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectSmallTempBufferSmallReads()#java/nio/ByteBuffer/allocateDirect(int)
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectSmallTempBufferSmallReads()#java/nio/ByteBuffer/wrap(byte[])
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testHeapLimit()#java/nio/ByteBuffer/allocate(int)
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testHeapLimit()#org/apache/parquet/hadoop/util/MockInputStream/MockInputStream(int[])
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testHeapLimit()#java/nio/Buffer/limit(int)
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testHeapLimit()#java/nio/Buffer/position()
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testHeapLimit()#java/nio/Buffer/flip()
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testHeapLimit()#java/nio/Buffer/limit()
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testHeapLimit()#java/nio/ByteBuffer/wrap(byte[],int,int)
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testHeapLimit()#org/apache/parquet/hadoop/util/H1SeekableInputStream/readHeapBuffer(org.apache.parquet.hadoop.FSDataInputStream,java.nio.ByteBuffer)
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testHeapReadFullyPosition()#java/nio/ByteBuffer/allocate(int)
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testHeapReadFullyPosition()#org/apache/parquet/hadoop/util/MockInputStream/MockInputStream(int[])
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testHeapReadFullyPosition()#java/nio/Buffer/position()
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testHeapReadFullyPosition()#java/nio/Buffer/position(int)
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testHeapReadFullyPosition()#java/nio/Buffer/mark()
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testHeapReadFullyPosition()#java/nio/Buffer/limit()
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testHeapReadFullyPosition()#java/nio/ByteBuffer/wrap(byte[],int,int)
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testHeapReadFullyPosition()#java/nio/Buffer/reset()
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testHeapReadFullyPosition()#org/apache/parquet/hadoop/util/H1SeekableInputStream/readFullyHeapBuffer(org.apache.parquet.hadoop.FSDataInputStream,java.nio.ByteBuffer)
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectReadFullyPositionAndLimit()#java/nio/Buffer/reset()
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectReadFullyPositionAndLimit()#org/apache/parquet/hadoop/util/MockInputStream/MockInputStream(int[])
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectReadFullyPositionAndLimit()#java/nio/Buffer/limit(int)
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectReadFullyPositionAndLimit()#org/apache/parquet/hadoop/util/H1SeekableInputStream/readFullyDirectBuffer(org.apache.parquet.hadoop.FSDataInputStream,java.nio.ByteBuffer,byte[])
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectReadFullyPositionAndLimit()#java/nio/Buffer/position()
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectReadFullyPositionAndLimit()#java/nio/Buffer/position(int)
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectReadFullyPositionAndLimit()#java/nio/Buffer/mark()
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectReadFullyPositionAndLimit()#java/nio/ByteBuffer/wrap(byte[],int,int)
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectReadFullyPositionAndLimit()#java/nio/ByteBuffer/allocateDirect(int)
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectReadFullyPositionAndLimit()#java/nio/Buffer/limit()
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectReadFullyPositionAndLimit()#java/lang/ThreadLocal/get()
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectPositionAndLimit()#java/nio/Buffer/reset()
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectPositionAndLimit()#org/apache/parquet/hadoop/util/MockInputStream/MockInputStream(int[])
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectPositionAndLimit()#java/nio/Buffer/limit(int)
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectPositionAndLimit()#java/nio/Buffer/position()
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectPositionAndLimit()#java/nio/Buffer/position(int)
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectPositionAndLimit()#java/nio/Buffer/mark()
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectPositionAndLimit()#java/nio/ByteBuffer/wrap(byte[],int,int)
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectPositionAndLimit()#org/apache/parquet/hadoop/util/H1SeekableInputStream/readDirectBuffer(org.apache.parquet.hadoop.FSDataInputStream,java.nio.ByteBuffer,byte[])
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectPositionAndLimit()#java/nio/ByteBuffer/allocateDirect(int)
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectPositionAndLimit()#java/nio/Buffer/limit()
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectPositionAndLimit()#java/lang/ThreadLocal/get()
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testHeapPositionAndLimit()#java/nio/ByteBuffer/allocate(int)
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testHeapPositionAndLimit()#java/nio/Buffer/reset()
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testHeapPositionAndLimit()#org/apache/parquet/hadoop/util/MockInputStream/MockInputStream(int[])
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testHeapPositionAndLimit()#java/nio/Buffer/limit(int)
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testHeapPositionAndLimit()#java/nio/Buffer/position()
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testHeapPositionAndLimit()#java/nio/Buffer/position(int)
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testHeapPositionAndLimit()#java/nio/Buffer/mark()
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testHeapPositionAndLimit()#java/nio/Buffer/limit()
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testHeapPositionAndLimit()#java/nio/ByteBuffer/wrap(byte[],int,int)
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testHeapPositionAndLimit()#org/apache/parquet/hadoop/util/H1SeekableInputStream/readHeapBuffer(org.apache.parquet.hadoop.FSDataInputStream,java.nio.ByteBuffer)
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testHeapSmallBuffer()#java/nio/ByteBuffer/allocate(int)
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testHeapSmallBuffer()#org/apache/parquet/hadoop/util/MockInputStream/MockInputStream(int[])
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testHeapSmallBuffer()#java/nio/Buffer/position()
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testHeapSmallBuffer()#java/nio/Buffer/flip()
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testHeapSmallBuffer()#java/nio/Buffer/limit()
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testHeapSmallBuffer()#java/nio/ByteBuffer/wrap(byte[],int,int)
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testHeapSmallBuffer()#org/apache/parquet/hadoop/util/H1SeekableInputStream/readHeapBuffer(org.apache.parquet.hadoop.FSDataInputStream,java.nio.ByteBuffer)
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectReadFullySmallBuffer()#org/apache/parquet/hadoop/util/MockInputStream/MockInputStream(int[])
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectReadFullySmallBuffer()#org/apache/parquet/hadoop/util/H1SeekableInputStream/readFullyDirectBuffer(org.apache.parquet.hadoop.FSDataInputStream,java.nio.ByteBuffer,byte[])
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectReadFullySmallBuffer()#java/nio/Buffer/position()
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectReadFullySmallBuffer()#java/nio/Buffer/flip()
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectReadFullySmallBuffer()#java/nio/ByteBuffer/wrap(byte[],int,int)
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectReadFullySmallBuffer()#java/nio/ByteBuffer/allocateDirect(int)
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectReadFullySmallBuffer()#java/nio/Buffer/limit()
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectReadFullySmallBuffer()#java/lang/ThreadLocal/get()
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectSmallBuffer()#org/apache/parquet/hadoop/util/MockInputStream/MockInputStream(int[])
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectSmallBuffer()#java/nio/Buffer/position()
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectSmallBuffer()#java/nio/Buffer/flip()
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectSmallBuffer()#java/nio/ByteBuffer/wrap(byte[],int,int)
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectSmallBuffer()#org/apache/parquet/hadoop/util/H1SeekableInputStream/readDirectBuffer(org.apache.parquet.hadoop.FSDataInputStream,java.nio.ByteBuffer,byte[])
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectSmallBuffer()#java/nio/ByteBuffer/allocateDirect(int)
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectSmallBuffer()#java/nio/Buffer/limit()
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectSmallBuffer()#java/lang/ThreadLocal/get()
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testHeapReadFullySmallReads()#java/nio/ByteBuffer/allocate(int)
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testHeapReadFullySmallReads()#org/apache/parquet/hadoop/util/H1SeekableInputStream/readFullyHeapBuffer(org.apache.parquet.hadoop.FSDataInputStream,java.nio.ByteBuffer)
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testHeapReadFullySmallReads()#org/apache/parquet/hadoop/util/MockInputStream/MockInputStream(int[])
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testHeapReadFullySmallReads()#java/nio/Buffer/position()
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testHeapReadFullySmallReads()#java/nio/Buffer/flip()
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testHeapReadFullySmallReads()#java/nio/Buffer/limit()
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testHeapReadFullySmallReads()#java/nio/ByteBuffer/wrap(byte[])
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectSmallReads()#org/apache/parquet/hadoop/util/MockInputStream/MockInputStream(int[])
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectSmallReads()#java/nio/Buffer/position()
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectSmallReads()#java/nio/Buffer/flip()
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectSmallReads()#org/apache/parquet/hadoop/util/H1SeekableInputStream/readDirectBuffer(org.apache.parquet.hadoop.FSDataInputStream,java.nio.ByteBuffer,byte[])
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectSmallReads()#java/nio/ByteBuffer/allocateDirect(int)
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectSmallReads()#java/nio/ByteBuffer/wrap(byte[])
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectSmallReads()#java/nio/Buffer/limit()
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectSmallReads()#java/lang/ThreadLocal/get()
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectRead()#org/apache/parquet/hadoop/util/MockInputStream/MockInputStream(int[])
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectRead()#java/nio/Buffer/position()
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectRead()#java/nio/Buffer/flip()
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectRead()#org/apache/parquet/hadoop/util/H1SeekableInputStream/readDirectBuffer(org.apache.parquet.hadoop.FSDataInputStream,java.nio.ByteBuffer,byte[])
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectRead()#java/nio/ByteBuffer/allocateDirect(int)
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectRead()#java/nio/ByteBuffer/wrap(byte[])
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectRead()#java/nio/Buffer/limit()
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectRead()#java/lang/ThreadLocal/get()
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectReadFullySmallReads()#org/apache/parquet/hadoop/util/MockInputStream/MockInputStream(int[])
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectReadFullySmallReads()#org/apache/parquet/hadoop/util/H1SeekableInputStream/readFullyDirectBuffer(org.apache.parquet.hadoop.FSDataInputStream,java.nio.ByteBuffer,byte[])
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectReadFullySmallReads()#java/nio/Buffer/position()
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectReadFullySmallReads()#java/nio/Buffer/flip()
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectReadFullySmallReads()#java/nio/ByteBuffer/allocateDirect(int)
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectReadFullySmallReads()#java/nio/ByteBuffer/wrap(byte[])
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectReadFullySmallReads()#java/nio/Buffer/limit()
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectReadFullySmallReads()#java/lang/ThreadLocal/get()
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testHeapReadFullySmallBuffer()#java/nio/ByteBuffer/allocate(int)
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testHeapReadFullySmallBuffer()#org/apache/parquet/hadoop/util/H1SeekableInputStream/readFullyHeapBuffer(org.apache.parquet.hadoop.FSDataInputStream,java.nio.ByteBuffer)
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testHeapReadFullySmallBuffer()#org/apache/parquet/hadoop/util/MockInputStream/MockInputStream(int[])
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testHeapReadFullySmallBuffer()#java/nio/Buffer/position()
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testHeapReadFullySmallBuffer()#java/nio/Buffer/flip()
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testHeapReadFullySmallBuffer()#java/nio/Buffer/limit()
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testHeapReadFullySmallBuffer()#java/nio/ByteBuffer/wrap(byte[],int,int)
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testHeapRead()#java/nio/ByteBuffer/allocate(int)
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testHeapRead()#org/apache/parquet/hadoop/util/MockInputStream/MockInputStream(int[])
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testHeapRead()#java/nio/Buffer/position()
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testHeapRead()#java/nio/Buffer/flip()
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testHeapRead()#java/nio/Buffer/limit()
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testHeapRead()#org/apache/parquet/hadoop/util/H1SeekableInputStream/readHeapBuffer(org.apache.parquet.hadoop.FSDataInputStream,java.nio.ByteBuffer)
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testHeapRead()#java/nio/ByteBuffer/wrap(byte[])
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testHeapSmallReads()#java/nio/ByteBuffer/allocate(int)
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testHeapSmallReads()#org/apache/parquet/hadoop/util/MockInputStream/MockInputStream(int[])
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testHeapSmallReads()#java/nio/Buffer/position()
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testHeapSmallReads()#java/nio/Buffer/flip()
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testHeapSmallReads()#java/nio/Buffer/limit()
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testHeapSmallReads()#org/apache/parquet/hadoop/util/H1SeekableInputStream/readHeapBuffer(org.apache.parquet.hadoop.FSDataInputStream,java.nio.ByteBuffer)
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testHeapSmallReads()#java/nio/ByteBuffer/wrap(byte[])
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectSmallTempBufferWithPositionAndLimit()#java/nio/Buffer/reset()
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectSmallTempBufferWithPositionAndLimit()#org/apache/parquet/hadoop/util/MockInputStream/MockInputStream(int[])
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectSmallTempBufferWithPositionAndLimit()#java/nio/Buffer/limit(int)
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectSmallTempBufferWithPositionAndLimit()#java/nio/Buffer/position()
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectSmallTempBufferWithPositionAndLimit()#java/nio/Buffer/position(int)
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectSmallTempBufferWithPositionAndLimit()#java/nio/Buffer/mark()
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectSmallTempBufferWithPositionAndLimit()#java/nio/Buffer/limit()
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectSmallTempBufferWithPositionAndLimit()#java/nio/ByteBuffer/wrap(byte[],int,int)
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectSmallTempBufferWithPositionAndLimit()#org/apache/parquet/hadoop/util/H1SeekableInputStream/readDirectBuffer(org.apache.parquet.hadoop.FSDataInputStream,java.nio.ByteBuffer,byte[])
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectSmallTempBufferWithPositionAndLimit()#java/nio/ByteBuffer/allocateDirect(int)
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectReadFullySmallTempBufferWithPositionAndLimit()#java/nio/Buffer/reset()
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectReadFullySmallTempBufferWithPositionAndLimit()#org/apache/parquet/hadoop/util/MockInputStream/MockInputStream(int[])
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectReadFullySmallTempBufferWithPositionAndLimit()#java/nio/Buffer/limit(int)
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectReadFullySmallTempBufferWithPositionAndLimit()#org/apache/parquet/hadoop/util/H1SeekableInputStream/readFullyDirectBuffer(org.apache.parquet.hadoop.FSDataInputStream,java.nio.ByteBuffer,byte[])
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectReadFullySmallTempBufferWithPositionAndLimit()#java/nio/Buffer/position()
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectReadFullySmallTempBufferWithPositionAndLimit()#java/nio/Buffer/position(int)
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectReadFullySmallTempBufferWithPositionAndLimit()#java/nio/Buffer/mark()
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectReadFullySmallTempBufferWithPositionAndLimit()#java/nio/Buffer/limit()
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectReadFullySmallTempBufferWithPositionAndLimit()#java/nio/ByteBuffer/wrap(byte[],int,int)
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectReadFullySmallTempBufferWithPositionAndLimit()#java/nio/ByteBuffer/allocateDirect(int)
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testHeapReadFullyJustRight()#java/nio/ByteBuffer/allocate(int)
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testHeapReadFullyJustRight()#org/apache/parquet/hadoop/util/H1SeekableInputStream/readFullyHeapBuffer(org.apache.parquet.hadoop.FSDataInputStream,java.nio.ByteBuffer)
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testHeapReadFullyJustRight()#org/apache/parquet/hadoop/util/MockInputStream/MockInputStream(int[])
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testHeapReadFullyJustRight()#java/nio/Buffer/position()
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testHeapReadFullyJustRight()#java/nio/Buffer/flip()
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testHeapReadFullyJustRight()#java/nio/Buffer/limit()
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testHeapReadFullyJustRight()#java/nio/ByteBuffer/wrap(byte[])
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectReadFullyLargeBuffer()#org/apache/parquet/hadoop/util/MockInputStream/MockInputStream(int[])
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectReadFullyLargeBuffer()#java/nio/Buffer/position()
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectReadFullyLargeBuffer()#java/nio/Buffer/limit()
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectReadFullyLargeBuffer()#java/nio/ByteBuffer/allocateDirect(int)
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectReadFullyLargeBuffer()#org/apache/parquet/hadoop/TestUtils/assertThrows(java.lang.String,java.lang.Class,java.util.concurrent.Callable)
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectReadFullyLargeBuffer()#org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectReadFullyLargeBuffer()/$anonymous1/()
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectReadFullyLimit()#org/apache/parquet/hadoop/util/MockInputStream/MockInputStream(int[])
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectReadFullyLimit()#java/nio/Buffer/limit(int)
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectReadFullyLimit()#org/apache/parquet/hadoop/util/H1SeekableInputStream/readFullyDirectBuffer(org.apache.parquet.hadoop.FSDataInputStream,java.nio.ByteBuffer,byte[])
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectReadFullyLimit()#java/nio/Buffer/position()
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectReadFullyLimit()#java/nio/Buffer/position(int)
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectReadFullyLimit()#java/nio/Buffer/flip()
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectReadFullyLimit()#java/nio/ByteBuffer/wrap(byte[],int,int)
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectReadFullyLimit()#java/nio/ByteBuffer/allocateDirect(int)
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectReadFullyLimit()#java/nio/ByteBuffer/wrap(byte[])
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectReadFullyLimit()#java/nio/Buffer/limit()
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectReadFullyLimit()#java/lang/ThreadLocal/get()
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectLimit()#java/nio/ByteBuffer/allocate(int)
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectLimit()#org/apache/parquet/hadoop/util/MockInputStream/MockInputStream(int[])
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectLimit()#java/nio/Buffer/limit(int)
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectLimit()#java/nio/Buffer/position()
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectLimit()#java/nio/Buffer/flip()
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectLimit()#java/nio/ByteBuffer/wrap(byte[],int,int)
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectLimit()#org/apache/parquet/hadoop/util/H1SeekableInputStream/readDirectBuffer(org.apache.parquet.hadoop.FSDataInputStream,java.nio.ByteBuffer,byte[])
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectLimit()#java/nio/Buffer/limit()
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectLimit()#java/lang/ThreadLocal/get()
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectPosition()#java/nio/Buffer/reset()
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectPosition()#org/apache/parquet/hadoop/util/MockInputStream/MockInputStream(int[])
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectPosition()#java/nio/Buffer/position()
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectPosition()#java/nio/Buffer/position(int)
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectPosition()#java/nio/Buffer/mark()
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectPosition()#org/apache/parquet/hadoop/util/H1SeekableInputStream/readDirectBuffer(org.apache.parquet.hadoop.FSDataInputStream,java.nio.ByteBuffer,byte[])
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectPosition()#java/nio/ByteBuffer/allocateDirect(int)
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectPosition()#java/nio/ByteBuffer/wrap(byte[])
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectPosition()#java/nio/Buffer/limit()
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectPosition()#java/lang/ThreadLocal/get()
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectReadFullyPosition()#java/nio/Buffer/reset()
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectReadFullyPosition()#org/apache/parquet/hadoop/util/MockInputStream/MockInputStream(int[])
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectReadFullyPosition()#org/apache/parquet/hadoop/util/H1SeekableInputStream/readFullyDirectBuffer(org.apache.parquet.hadoop.FSDataInputStream,java.nio.ByteBuffer,byte[])
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectReadFullyPosition()#java/nio/Buffer/position()
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectReadFullyPosition()#java/nio/Buffer/position(int)
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectReadFullyPosition()#java/nio/Buffer/mark()
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectReadFullyPosition()#java/nio/ByteBuffer/wrap(byte[],int,int)
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectReadFullyPosition()#java/nio/ByteBuffer/allocateDirect(int)
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectReadFullyPosition()#java/nio/Buffer/limit()
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testDirectReadFullyPosition()#java/lang/ThreadLocal/get()
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testHeapReadFullyLargeBuffer()#java/nio/ByteBuffer/allocate(int)
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testHeapReadFullyLargeBuffer()#org/apache/parquet/hadoop/util/MockInputStream/MockInputStream(int[])
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testHeapReadFullyLargeBuffer()#java/nio/Buffer/position()
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testHeapReadFullyLargeBuffer()#java/nio/Buffer/limit()
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testHeapReadFullyLargeBuffer()#org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testHeapReadFullyLargeBuffer()/$anonymous1/()
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testHeapReadFullyLargeBuffer()#org/apache/parquet/hadoop/TestUtils/assertThrows(java.lang.String,java.lang.Class,java.util.concurrent.Callable)
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testHeapReadFullyLimit()#java/nio/ByteBuffer/allocate(int)
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testHeapReadFullyLimit()#org/apache/parquet/hadoop/util/H1SeekableInputStream/readFullyHeapBuffer(org.apache.parquet.hadoop.FSDataInputStream,java.nio.ByteBuffer)
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testHeapReadFullyLimit()#org/apache/parquet/hadoop/util/MockInputStream/MockInputStream(int[])
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testHeapReadFullyLimit()#java/nio/Buffer/limit(int)
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testHeapReadFullyLimit()#java/nio/Buffer/position()
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testHeapReadFullyLimit()#java/nio/Buffer/position(int)
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testHeapReadFullyLimit()#java/nio/Buffer/flip()
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testHeapReadFullyLimit()#java/nio/Buffer/limit()
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testHeapReadFullyLimit()#java/nio/ByteBuffer/wrap(byte[],int,int)
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testHeapReadFullyLimit()#java/nio/ByteBuffer/wrap(byte[])
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testHeapReadFullyPositionAndLimit()#java/nio/ByteBuffer/allocate(int)
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testHeapReadFullyPositionAndLimit()#org/apache/parquet/hadoop/util/MockInputStream/MockInputStream(int[])
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testHeapReadFullyPositionAndLimit()#java/nio/Buffer/limit(int)
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testHeapReadFullyPositionAndLimit()#java/nio/Buffer/position()
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testHeapReadFullyPositionAndLimit()#java/nio/Buffer/position(int)
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testHeapReadFullyPositionAndLimit()#java/nio/Buffer/mark()
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testHeapReadFullyPositionAndLimit()#java/nio/Buffer/limit()
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testHeapReadFullyPositionAndLimit()#java/nio/ByteBuffer/wrap(byte[],int,int)
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testHeapReadFullyPositionAndLimit()#java/nio/Buffer/reset()
org/apache/parquet/hadoop/util/TestHadoop1ByteBufferReads/testHeapReadFullyPositionAndLimit()#org/apache/parquet/hadoop/util/H1SeekableInputStream/readFullyHeapBuffer(org.apache.parquet.hadoop.FSDataInputStream,java.nio.ByteBuffer)
org/apache/parquet/filter2/recordlevel/IncrementallyUpdatedFilterPredicate/And/accept(org.apache.parquet.filter2.recordlevel.IncrementallyUpdatedFilterPredicate.Visitor)#org/apache/parquet/filter2/recordlevel/IncrementallyUpdatedFilterPredicate/Visitor/visit(org.apache.parquet.filter2.recordlevel.IncrementallyUpdatedFilterPredicate.And)
org/apache/parquet/CorruptStatisticsTest/testOnlyAppliesToBinary()#org/apache/parquet/CorruptStatistics/shouldIgnoreStatistics(java.lang.String,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/CorruptStatisticsTest/testDistributionCorruptStatistics()#org/apache/parquet/CorruptStatistics/shouldIgnoreStatistics(java.lang.String,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/CorruptStatisticsTest/testCorruptStatistics()#org/apache/parquet/CorruptStatistics/shouldIgnoreStatistics(java.lang.String,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/thrift/TestThriftSchemaConverter/getDeprecatedFilteredSchema(java.lang.String,java.lang.Class)#org/apache/parquet/thrift/ThriftSchemaConverter/convert(java.lang.Class)
org/apache/parquet/thrift/TestThriftSchemaConverter/getDeprecatedFilteredSchema(java.lang.String,java.lang.Class)#org/apache/parquet/thrift/projection/deprecated/DeprecatedFieldProjectionFilter/DeprecatedFieldProjectionFilter(java.lang.String)
org/apache/parquet/thrift/TestThriftSchemaConverter/getDeprecatedFilteredSchema(java.lang.String,java.lang.Class)#org/apache/parquet/thrift/ThriftSchemaConverter/ThriftSchemaConverter(org.apache.parquet.thrift.projection.FieldProjectionFilter)
org/apache/parquet/thrift/TestThriftSchemaConverter/testProjectMapThriftType()#org/apache/parquet/thrift/TestThriftSchemaConverter/shouldGetProjectedSchema(java.lang.String,java.lang.String,java.lang.String,java.lang.Class)
org/apache/parquet/thrift/TestThriftSchemaConverter/testProjectOnlyKeyInMap()#org/apache/parquet/thrift/TestThriftSchemaConverter/shouldGetProjectedSchema(java.lang.String,java.lang.String,java.lang.String,java.lang.Class)
org/apache/parquet/thrift/TestThriftSchemaConverter/testThrowWhenProjectionFilterMatchesNothing()#org/apache/parquet/thrift/TestThriftSchemaConverter/shouldThrowWhenProjectionFilterMatchesNothing(java.lang.String,java.lang.String,java.lang.Class)
org/apache/parquet/thrift/TestThriftSchemaConverter/testToMessageType()#org/apache/parquet/thrift/ThriftSchemaConverter/convert(java.lang.Class)
org/apache/parquet/thrift/TestThriftSchemaConverter/testToMessageType()#org/apache/parquet/schema/MessageTypeParser/parseMessageType(java.lang.String)
org/apache/parquet/thrift/TestThriftSchemaConverter/testToMessageType()#org/apache/parquet/thrift/ThriftSchemaConverter/ThriftSchemaConverter()
org/apache/parquet/thrift/TestThriftSchemaConverter/shouldGetProjectedSchema(java.lang.String,java.lang.String,java.lang.String,java.lang.Class)#org/apache/parquet/thrift/TestThriftSchemaConverter/getDeprecatedFilteredSchema(java.lang.String,java.lang.Class)
org/apache/parquet/thrift/TestThriftSchemaConverter/shouldGetProjectedSchema(java.lang.String,java.lang.String,java.lang.String,java.lang.Class)#org/apache/parquet/schema/MessageTypeParser/parseMessageType(java.lang.String)
org/apache/parquet/thrift/TestThriftSchemaConverter/shouldGetProjectedSchema(java.lang.String,java.lang.String,java.lang.String,java.lang.Class)#org/apache/parquet/thrift/TestThriftSchemaConverter/getStrictFilteredSchema(java.lang.String,java.lang.Class)
org/apache/parquet/thrift/TestThriftSchemaConverter/testProjectOnlyValueInMap()#org/apache/parquet/thrift/TestThriftSchemaConverter/getDeprecatedFilteredSchema(java.lang.String,java.lang.Class)
org/apache/parquet/thrift/TestThriftSchemaConverter/testProjectOnlyValueInMap()#java/lang/Throwable/getMessage()
org/apache/parquet/thrift/TestThriftSchemaConverter/testProjectOnlyValueInMap()#org/apache/parquet/thrift/TestThriftSchemaConverter/getStrictFilteredSchema(java.lang.String,java.lang.Class)
org/apache/parquet/thrift/TestThriftSchemaConverter/shouldThrowWhenProjectionFilterMatchesNothing(java.lang.String,java.lang.String,java.lang.Class)#org/apache/parquet/thrift/TestThriftSchemaConverter/getDeprecatedFilteredSchema(java.lang.String,java.lang.Class)
org/apache/parquet/thrift/TestThriftSchemaConverter/shouldThrowWhenProjectionFilterMatchesNothing(java.lang.String,java.lang.String,java.lang.Class)#java/lang/Throwable/getMessage()
org/apache/parquet/thrift/TestThriftSchemaConverter/testPartialKeyProjection()#org/apache/parquet/thrift/TestThriftSchemaConverter/doTestPartialKeyProjection(java.lang.String,java.lang.String)
org/apache/parquet/thrift/TestThriftSchemaConverter/testThrowWhenNoColumnsAreSelected()#org/apache/parquet/thrift/TestThriftSchemaConverter/shouldThrowWhenNoColumnsAreSelected(java.lang.String,java.lang.Class)
org/apache/parquet/thrift/TestThriftSchemaConverter/shouldThrowWhenNoColumnsAreSelected(java.lang.String,java.lang.Class)#org/apache/parquet/thrift/TestThriftSchemaConverter/getDeprecatedFilteredSchema(java.lang.String,java.lang.Class)
org/apache/parquet/thrift/TestThriftSchemaConverter/shouldThrowWhenNoColumnsAreSelected(java.lang.String,java.lang.Class)#java/lang/Throwable/getMessage()
org/apache/parquet/thrift/TestThriftSchemaConverter/doTestPartialKeyProjection(java.lang.String,java.lang.String)#org/apache/parquet/thrift/TestThriftSchemaConverter/getDeprecatedFilteredSchema(java.lang.String,java.lang.Class)
org/apache/parquet/thrift/TestThriftSchemaConverter/doTestPartialKeyProjection(java.lang.String,java.lang.String)#java/lang/Throwable/getMessage()
org/apache/parquet/thrift/TestThriftSchemaConverter/doTestPartialKeyProjection(java.lang.String,java.lang.String)#org/apache/parquet/thrift/TestThriftSchemaConverter/getStrictFilteredSchema(java.lang.String,java.lang.Class)
org/apache/parquet/thrift/TestThriftSchemaConverter/getStrictFilteredSchema(java.lang.String,java.lang.Class)#org/apache/parquet/thrift/ThriftSchemaConverter/convert(java.lang.Class)
org/apache/parquet/thrift/TestThriftSchemaConverter/getStrictFilteredSchema(java.lang.String,java.lang.Class)#org/apache/parquet/thrift/projection/StrictFieldProjectionFilter/fromSemicolonDelimitedString(java.lang.String)
org/apache/parquet/thrift/TestThriftSchemaConverter/getStrictFilteredSchema(java.lang.String,java.lang.Class)#org/apache/parquet/thrift/ThriftSchemaConverter/ThriftSchemaConverter(org.apache.parquet.thrift.projection.FieldProjectionFilter)
org/apache/parquet/thrift/TestThriftSchemaConverter/testToProjectedThriftType()#org/apache/parquet/thrift/TestThriftSchemaConverter/shouldGetProjectedSchema(java.lang.String,java.lang.String,java.lang.String,java.lang.Class)
org/apache/parquet/thrift/TestThriftSchemaConverter/testSetPartialProjection()#org/apache/parquet/thrift/TestThriftSchemaConverter/getDeprecatedFilteredSchema(java.lang.String,java.lang.Class)
org/apache/parquet/thrift/TestThriftSchemaConverter/testSetPartialProjection()#java/lang/Throwable/getMessage()
org/apache/parquet/thrift/TestThriftSchemaConverter/testSetPartialProjection()#org/apache/parquet/thrift/TestThriftSchemaConverter/getStrictFilteredSchema(java.lang.String,java.lang.Class)
org/apache/parquet/thrift/TestThriftSchemaConverter/testToThriftType()#org/apache/parquet/thrift/struct/ThriftType/toJSON()
org/apache/parquet/thrift/TestThriftSchemaConverter/testToThriftType()#org/apache/parquet/thrift/struct/ThriftType/fromJSON(java.lang.String)
org/apache/parquet/thrift/TestThriftSchemaConverter/testToThriftType()#org/apache/parquet/thrift/ThriftSchemaConverter/toStructType(java.lang.Class)
org/apache/parquet/example/data/simple/NanoTime/toInt96()#org/apache/parquet/example/data/simple/Int96Value/Int96Value(org.apache.parquet.io.api.Binary)
org/apache/parquet/example/data/simple/NanoTime/toInt96()#org/apache/parquet/example/data/simple/NanoTime/toBinary()
org/apache/parquet/example/data/simple/NanoTime/toBinary()#java/nio/ByteBuffer/allocate(int)
org/apache/parquet/example/data/simple/NanoTime/toBinary()#org/apache/parquet/io/api/Binary/fromConstantByteBuffer(java.nio.ByteBuffer)
org/apache/parquet/example/data/simple/NanoTime/toBinary()#java/nio/ByteBuffer/order(java.nio.ByteOrder)
org/apache/parquet/example/data/simple/NanoTime/toBinary()#java/nio/ByteBuffer/putLong(long)
org/apache/parquet/example/data/simple/NanoTime/toBinary()#java/nio/Buffer/flip()
org/apache/parquet/example/data/simple/NanoTime/toBinary()#java/nio/ByteBuffer/putInt(int)
org/apache/parquet/example/data/simple/NanoTime/fromInt96(org.apache.parquet.example.data.simple.Int96Value)#org/apache/parquet/io/api/Binary/toByteBuffer()
org/apache/parquet/example/data/simple/NanoTime/fromInt96(org.apache.parquet.example.data.simple.Int96Value)#org/apache/parquet/example/data/simple/NanoTime/NanoTime(int,long)
org/apache/parquet/example/data/simple/NanoTime/fromInt96(org.apache.parquet.example.data.simple.Int96Value)#org/apache/parquet/example/data/simple/Int96Value/getInt96()
org/apache/parquet/example/data/simple/NanoTime/fromInt96(org.apache.parquet.example.data.simple.Int96Value)#java/nio/ByteBuffer/getLong()
org/apache/parquet/example/data/simple/NanoTime/fromInt96(org.apache.parquet.example.data.simple.Int96Value)#java/nio/ByteBuffer/getInt()
org/apache/parquet/example/data/simple/NanoTime/fromBinary(org.apache.parquet.io.api.Binary)#org/apache/parquet/io/api/Binary/toByteBuffer()
org/apache/parquet/example/data/simple/NanoTime/fromBinary(org.apache.parquet.io.api.Binary)#org/apache/parquet/io/api/Binary/length()
org/apache/parquet/example/data/simple/NanoTime/fromBinary(org.apache.parquet.io.api.Binary)#org/apache/parquet/example/data/simple/NanoTime/NanoTime(int,long)
org/apache/parquet/example/data/simple/NanoTime/fromBinary(org.apache.parquet.io.api.Binary)#java/nio/ByteBuffer/order(java.nio.ByteOrder)
org/apache/parquet/example/data/simple/NanoTime/fromBinary(org.apache.parquet.io.api.Binary)#java/nio/ByteBuffer/getLong()
org/apache/parquet/example/data/simple/NanoTime/fromBinary(org.apache.parquet.io.api.Binary)#org/apache/parquet/Preconditions/checkArgument(boolean,java.lang.String)
org/apache/parquet/example/data/simple/NanoTime/fromBinary(org.apache.parquet.io.api.Binary)#java/nio/ByteBuffer/getInt()
org/apache/parquet/example/data/simple/NanoTime/writeValue(org.apache.parquet.io.api.RecordConsumer)#org/apache/parquet/io/api/RecordConsumer/addBinary(org.apache.parquet.io.api.Binary)
org/apache/parquet/example/data/simple/NanoTime/writeValue(org.apache.parquet.io.api.RecordConsumer)#org/apache/parquet/example/data/simple/NanoTime/toBinary()
org/apache/parquet/tools/read/SimpleRecordConverter/SimplePrimitiveConverter/addInt(int)#org/apache/parquet/tools/read/SimpleRecord/add(java.lang.String,java.lang.Object)
org/apache/parquet/tools/read/SimpleRecordConverter/SimplePrimitiveConverter/addBinary(org.apache.parquet.io.api.Binary)#org/apache/parquet/tools/read/SimpleRecord/add(java.lang.String,java.lang.Object)
org/apache/parquet/tools/read/SimpleRecordConverter/SimplePrimitiveConverter/addBinary(org.apache.parquet.io.api.Binary)#org/apache/parquet/io/api/Binary/getBytes()
org/apache/parquet/tools/read/SimpleRecordConverter/SimplePrimitiveConverter/addFloat(float)#org/apache/parquet/tools/read/SimpleRecord/add(java.lang.String,java.lang.Object)
org/apache/parquet/tools/read/SimpleRecordConverter/SimplePrimitiveConverter/addDouble(double)#org/apache/parquet/tools/read/SimpleRecord/add(java.lang.String,java.lang.Object)
org/apache/parquet/tools/read/SimpleRecordConverter/SimplePrimitiveConverter/addLong(long)#org/apache/parquet/tools/read/SimpleRecord/add(java.lang.String,java.lang.Object)
org/apache/parquet/tools/read/SimpleRecordConverter/SimplePrimitiveConverter/addBoolean(boolean)#org/apache/parquet/tools/read/SimpleRecord/add(java.lang.String,java.lang.Object)
org/apache/parquet/scrooge/ScroogeRecordConverter/getCodec(java.lang.Class)#java/lang/Class/forName(java.lang.String)
org/apache/parquet/scrooge/ScroogeRecordConverter/getCodec(java.lang.Class)#java/lang/Class/getName()
org/apache/parquet/scrooge/ScroogeRecordConverter/getCodec(java.lang.Class)#java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)
org/apache/parquet/scrooge/ScroogeRecordConverter/getCodec(java.lang.Class)#java/lang/Class/getField(java.lang.String)
org/apache/parquet/scrooge/ScroogeRecordConverter/getCodec(java.lang.Class)#java/lang/reflect/Field/get(java.lang.Object)
org/apache/parquet/scrooge/ScroogeRecordConverter/getCodec(java.lang.Class)#java/lang/Thread/currentThread()
org/apache/parquet/scrooge/ScroogeRecordConverter/getCodec(java.lang.Class)#java/lang/Thread/interrupt()
org/apache/parquet/filter2/statisticslevel/StatisticsFilter/visit(org.apache.parquet.filter2.predicate.Operators.UserDefined)#org/apache/parquet/filter2/statisticslevel/StatisticsFilter/visit(org.apache.parquet.filter2.predicate.Operators.UserDefined,boolean)
org/apache/parquet/filter2/statisticslevel/StatisticsFilter/canDrop(org.apache.parquet.filter2.predicate.FilterPredicate,java.util.List)#org/apache/parquet/filter2/predicate/FilterPredicate/accept(org.apache.parquet.filter2.predicate.FilterPredicate.Visitor)
org/apache/parquet/filter2/statisticslevel/StatisticsFilter/canDrop(org.apache.parquet.filter2.predicate.FilterPredicate,java.util.List)#org/apache/parquet/Preconditions/checkNotNull(T,java.lang.String)
org/apache/parquet/filter2/statisticslevel/StatisticsFilter/canDrop(org.apache.parquet.filter2.predicate.FilterPredicate,java.util.List)#org/apache/parquet/filter2/statisticslevel/StatisticsFilter/StatisticsFilter(java.util.List)
org/apache/parquet/filter2/statisticslevel/StatisticsFilter/visit(org.apache.parquet.filter2.predicate.Operators.UserDefined,boolean)#org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/getStatistics()
org/apache/parquet/filter2/statisticslevel/StatisticsFilter/visit(org.apache.parquet.filter2.predicate.Operators.UserDefined,boolean)#org/apache/parquet/filter2/predicate/UserDefinedPredicate/canDrop(org.apache.parquet.filter2.predicate.Statistics)
org/apache/parquet/filter2/statisticslevel/StatisticsFilter/visit(org.apache.parquet.filter2.predicate.Operators.UserDefined,boolean)#org/apache/parquet/filter2/predicate/Statistics/Statistics(T,T)
org/apache/parquet/filter2/statisticslevel/StatisticsFilter/visit(org.apache.parquet.filter2.predicate.Operators.UserDefined,boolean)#org/apache/parquet/filter2/statisticslevel/StatisticsFilter/getColumnChunk(org.apache.parquet.hadoop.metadata.ColumnPath)
org/apache/parquet/filter2/statisticslevel/StatisticsFilter/visit(org.apache.parquet.filter2.predicate.Operators.UserDefined,boolean)#org/apache/parquet/filter2/statisticslevel/StatisticsFilter/isAllNulls(org.apache.parquet.hadoop.metadata.ColumnChunkMetaData)
org/apache/parquet/filter2/statisticslevel/StatisticsFilter/visit(org.apache.parquet.filter2.predicate.Operators.UserDefined,boolean)#org/apache/parquet/filter2/predicate/Operators/Column/getColumnPath()
org/apache/parquet/filter2/statisticslevel/StatisticsFilter/visit(org.apache.parquet.filter2.predicate.Operators.UserDefined,boolean)#org/apache/parquet/column/statistics/Statistics/genericGetMax()
org/apache/parquet/filter2/statisticslevel/StatisticsFilter/visit(org.apache.parquet.filter2.predicate.Operators.UserDefined,boolean)#org/apache/parquet/filter2/predicate/Operators/UserDefined/getUserDefinedPredicate()
org/apache/parquet/filter2/statisticslevel/StatisticsFilter/visit(org.apache.parquet.filter2.predicate.Operators.UserDefined,boolean)#org/apache/parquet/filter2/predicate/UserDefinedPredicate/keep(T)
org/apache/parquet/filter2/statisticslevel/StatisticsFilter/visit(org.apache.parquet.filter2.predicate.Operators.UserDefined,boolean)#org/apache/parquet/filter2/predicate/UserDefinedPredicate/inverseCanDrop(org.apache.parquet.filter2.predicate.Statistics)
org/apache/parquet/filter2/statisticslevel/StatisticsFilter/visit(org.apache.parquet.filter2.predicate.Operators.UserDefined,boolean)#org/apache/parquet/column/statistics/Statistics/genericGetMin()
org/apache/parquet/filter2/statisticslevel/StatisticsFilter/visit(org.apache.parquet.filter2.predicate.Operators.UserDefined,boolean)#org/apache/parquet/column/statistics/Statistics/isEmpty()
org/apache/parquet/filter2/statisticslevel/StatisticsFilter/visit(org.apache.parquet.filter2.predicate.Operators.UserDefined,boolean)#org/apache/parquet/filter2/predicate/Operators/UserDefined/getColumn()
org/apache/parquet/filter2/statisticslevel/StatisticsFilter/visit(org.apache.parquet.filter2.predicate.Operators.Not)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/parquet/filter2/statisticslevel/StatisticsFilter/isAllNulls(org.apache.parquet.hadoop.metadata.ColumnChunkMetaData)#org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/getStatistics()
org/apache/parquet/filter2/statisticslevel/StatisticsFilter/isAllNulls(org.apache.parquet.hadoop.metadata.ColumnChunkMetaData)#org/apache/parquet/column/statistics/Statistics/getNumNulls()
org/apache/parquet/filter2/statisticslevel/StatisticsFilter/isAllNulls(org.apache.parquet.hadoop.metadata.ColumnChunkMetaData)#org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/getValueCount()
org/apache/parquet/filter2/statisticslevel/StatisticsFilter/visit(org.apache.parquet.filter2.predicate.Operators.LtEq)#org/apache/parquet/filter2/predicate/Operators/ColumnFilterPredicate/getColumn()
org/apache/parquet/filter2/statisticslevel/StatisticsFilter/visit(org.apache.parquet.filter2.predicate.Operators.LtEq)#org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/getStatistics()
org/apache/parquet/filter2/statisticslevel/StatisticsFilter/visit(org.apache.parquet.filter2.predicate.Operators.LtEq)#org/apache/parquet/column/statistics/Statistics/genericGetMin()
org/apache/parquet/filter2/statisticslevel/StatisticsFilter/visit(org.apache.parquet.filter2.predicate.Operators.LtEq)#org/apache/parquet/filter2/statisticslevel/StatisticsFilter/getColumnChunk(org.apache.parquet.hadoop.metadata.ColumnPath)
org/apache/parquet/filter2/statisticslevel/StatisticsFilter/visit(org.apache.parquet.filter2.predicate.Operators.LtEq)#org/apache/parquet/filter2/statisticslevel/StatisticsFilter/isAllNulls(org.apache.parquet.hadoop.metadata.ColumnChunkMetaData)
org/apache/parquet/filter2/statisticslevel/StatisticsFilter/visit(org.apache.parquet.filter2.predicate.Operators.LtEq)#org/apache/parquet/filter2/predicate/Operators/Column/getColumnPath()
org/apache/parquet/filter2/statisticslevel/StatisticsFilter/visit(org.apache.parquet.filter2.predicate.Operators.LtEq)#org/apache/parquet/column/statistics/Statistics/isEmpty()
org/apache/parquet/filter2/statisticslevel/StatisticsFilter/visit(org.apache.parquet.filter2.predicate.Operators.LtEq)#java/lang/Comparable/compareTo(T)
org/apache/parquet/filter2/statisticslevel/StatisticsFilter/visit(org.apache.parquet.filter2.predicate.Operators.LtEq)#org/apache/parquet/filter2/predicate/Operators/ColumnFilterPredicate/getValue()
org/apache/parquet/filter2/statisticslevel/StatisticsFilter/visit(org.apache.parquet.filter2.predicate.Operators.Gt)#org/apache/parquet/filter2/predicate/Operators/ColumnFilterPredicate/getColumn()
org/apache/parquet/filter2/statisticslevel/StatisticsFilter/visit(org.apache.parquet.filter2.predicate.Operators.Gt)#org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/getStatistics()
org/apache/parquet/filter2/statisticslevel/StatisticsFilter/visit(org.apache.parquet.filter2.predicate.Operators.Gt)#org/apache/parquet/filter2/statisticslevel/StatisticsFilter/getColumnChunk(org.apache.parquet.hadoop.metadata.ColumnPath)
org/apache/parquet/filter2/statisticslevel/StatisticsFilter/visit(org.apache.parquet.filter2.predicate.Operators.Gt)#org/apache/parquet/filter2/statisticslevel/StatisticsFilter/isAllNulls(org.apache.parquet.hadoop.metadata.ColumnChunkMetaData)
org/apache/parquet/filter2/statisticslevel/StatisticsFilter/visit(org.apache.parquet.filter2.predicate.Operators.Gt)#org/apache/parquet/filter2/predicate/Operators/Column/getColumnPath()
org/apache/parquet/filter2/statisticslevel/StatisticsFilter/visit(org.apache.parquet.filter2.predicate.Operators.Gt)#org/apache/parquet/column/statistics/Statistics/isEmpty()
org/apache/parquet/filter2/statisticslevel/StatisticsFilter/visit(org.apache.parquet.filter2.predicate.Operators.Gt)#org/apache/parquet/filter2/predicate/Operators/ColumnFilterPredicate/getValue()
org/apache/parquet/filter2/statisticslevel/StatisticsFilter/visit(org.apache.parquet.filter2.predicate.Operators.Gt)#org/apache/parquet/column/statistics/Statistics/genericGetMax()
org/apache/parquet/filter2/statisticslevel/StatisticsFilter/visit(org.apache.parquet.filter2.predicate.Operators.Gt)#java/lang/Comparable/compareTo(T)
org/apache/parquet/filter2/statisticslevel/StatisticsFilter/visit(org.apache.parquet.filter2.predicate.Operators.Eq)#org/apache/parquet/filter2/predicate/Operators/ColumnFilterPredicate/getColumn()
org/apache/parquet/filter2/statisticslevel/StatisticsFilter/visit(org.apache.parquet.filter2.predicate.Operators.Eq)#org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/getStatistics()
org/apache/parquet/filter2/statisticslevel/StatisticsFilter/visit(org.apache.parquet.filter2.predicate.Operators.Eq)#org/apache/parquet/column/statistics/Statistics/genericGetMin()
org/apache/parquet/filter2/statisticslevel/StatisticsFilter/visit(org.apache.parquet.filter2.predicate.Operators.Eq)#org/apache/parquet/filter2/statisticslevel/StatisticsFilter/getColumnChunk(org.apache.parquet.hadoop.metadata.ColumnPath)
org/apache/parquet/filter2/statisticslevel/StatisticsFilter/visit(org.apache.parquet.filter2.predicate.Operators.Eq)#org/apache/parquet/filter2/statisticslevel/StatisticsFilter/hasNulls(org.apache.parquet.hadoop.metadata.ColumnChunkMetaData)
org/apache/parquet/filter2/statisticslevel/StatisticsFilter/visit(org.apache.parquet.filter2.predicate.Operators.Eq)#org/apache/parquet/filter2/statisticslevel/StatisticsFilter/isAllNulls(org.apache.parquet.hadoop.metadata.ColumnChunkMetaData)
org/apache/parquet/filter2/statisticslevel/StatisticsFilter/visit(org.apache.parquet.filter2.predicate.Operators.Eq)#org/apache/parquet/filter2/predicate/Operators/Column/getColumnPath()
org/apache/parquet/filter2/statisticslevel/StatisticsFilter/visit(org.apache.parquet.filter2.predicate.Operators.Eq)#org/apache/parquet/column/statistics/Statistics/isEmpty()
org/apache/parquet/filter2/statisticslevel/StatisticsFilter/visit(org.apache.parquet.filter2.predicate.Operators.Eq)#org/apache/parquet/filter2/predicate/Operators/ColumnFilterPredicate/getValue()
org/apache/parquet/filter2/statisticslevel/StatisticsFilter/visit(org.apache.parquet.filter2.predicate.Operators.Eq)#org/apache/parquet/column/statistics/Statistics/genericGetMax()
org/apache/parquet/filter2/statisticslevel/StatisticsFilter/visit(org.apache.parquet.filter2.predicate.Operators.Eq)#java/lang/Comparable/compareTo(T)
org/apache/parquet/filter2/statisticslevel/StatisticsFilter/visit(org.apache.parquet.filter2.predicate.Operators.Lt)#org/apache/parquet/filter2/predicate/Operators/ColumnFilterPredicate/getColumn()
org/apache/parquet/filter2/statisticslevel/StatisticsFilter/visit(org.apache.parquet.filter2.predicate.Operators.Lt)#org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/getStatistics()
org/apache/parquet/filter2/statisticslevel/StatisticsFilter/visit(org.apache.parquet.filter2.predicate.Operators.Lt)#org/apache/parquet/column/statistics/Statistics/genericGetMin()
org/apache/parquet/filter2/statisticslevel/StatisticsFilter/visit(org.apache.parquet.filter2.predicate.Operators.Lt)#org/apache/parquet/filter2/statisticslevel/StatisticsFilter/getColumnChunk(org.apache.parquet.hadoop.metadata.ColumnPath)
org/apache/parquet/filter2/statisticslevel/StatisticsFilter/visit(org.apache.parquet.filter2.predicate.Operators.Lt)#org/apache/parquet/filter2/statisticslevel/StatisticsFilter/isAllNulls(org.apache.parquet.hadoop.metadata.ColumnChunkMetaData)
org/apache/parquet/filter2/statisticslevel/StatisticsFilter/visit(org.apache.parquet.filter2.predicate.Operators.Lt)#org/apache/parquet/filter2/predicate/Operators/Column/getColumnPath()
org/apache/parquet/filter2/statisticslevel/StatisticsFilter/visit(org.apache.parquet.filter2.predicate.Operators.Lt)#org/apache/parquet/column/statistics/Statistics/isEmpty()
org/apache/parquet/filter2/statisticslevel/StatisticsFilter/visit(org.apache.parquet.filter2.predicate.Operators.Lt)#java/lang/Comparable/compareTo(T)
org/apache/parquet/filter2/statisticslevel/StatisticsFilter/visit(org.apache.parquet.filter2.predicate.Operators.Lt)#org/apache/parquet/filter2/predicate/Operators/ColumnFilterPredicate/getValue()
org/apache/parquet/filter2/statisticslevel/StatisticsFilter/visit(org.apache.parquet.filter2.predicate.Operators.Or)#org/apache/parquet/filter2/predicate/FilterPredicate/accept(org.apache.parquet.filter2.predicate.FilterPredicate.Visitor)
org/apache/parquet/filter2/statisticslevel/StatisticsFilter/visit(org.apache.parquet.filter2.predicate.Operators.Or)#org/apache/parquet/filter2/predicate/Operators/BinaryLogicalFilterPredicate/getRight()
org/apache/parquet/filter2/statisticslevel/StatisticsFilter/visit(org.apache.parquet.filter2.predicate.Operators.Or)#org/apache/parquet/filter2/predicate/Operators/BinaryLogicalFilterPredicate/getLeft()
org/apache/parquet/filter2/statisticslevel/StatisticsFilter/visit(org.apache.parquet.filter2.predicate.Operators.NotEq)#org/apache/parquet/filter2/predicate/Operators/ColumnFilterPredicate/getColumn()
org/apache/parquet/filter2/statisticslevel/StatisticsFilter/visit(org.apache.parquet.filter2.predicate.Operators.NotEq)#org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/getStatistics()
org/apache/parquet/filter2/statisticslevel/StatisticsFilter/visit(org.apache.parquet.filter2.predicate.Operators.NotEq)#org/apache/parquet/column/statistics/Statistics/genericGetMin()
org/apache/parquet/filter2/statisticslevel/StatisticsFilter/visit(org.apache.parquet.filter2.predicate.Operators.NotEq)#org/apache/parquet/filter2/statisticslevel/StatisticsFilter/getColumnChunk(org.apache.parquet.hadoop.metadata.ColumnPath)
org/apache/parquet/filter2/statisticslevel/StatisticsFilter/visit(org.apache.parquet.filter2.predicate.Operators.NotEq)#org/apache/parquet/filter2/statisticslevel/StatisticsFilter/hasNulls(org.apache.parquet.hadoop.metadata.ColumnChunkMetaData)
org/apache/parquet/filter2/statisticslevel/StatisticsFilter/visit(org.apache.parquet.filter2.predicate.Operators.NotEq)#org/apache/parquet/filter2/statisticslevel/StatisticsFilter/isAllNulls(org.apache.parquet.hadoop.metadata.ColumnChunkMetaData)
org/apache/parquet/filter2/statisticslevel/StatisticsFilter/visit(org.apache.parquet.filter2.predicate.Operators.NotEq)#org/apache/parquet/filter2/predicate/Operators/Column/getColumnPath()
org/apache/parquet/filter2/statisticslevel/StatisticsFilter/visit(org.apache.parquet.filter2.predicate.Operators.NotEq)#org/apache/parquet/column/statistics/Statistics/isEmpty()
org/apache/parquet/filter2/statisticslevel/StatisticsFilter/visit(org.apache.parquet.filter2.predicate.Operators.NotEq)#org/apache/parquet/filter2/predicate/Operators/ColumnFilterPredicate/getValue()
org/apache/parquet/filter2/statisticslevel/StatisticsFilter/visit(org.apache.parquet.filter2.predicate.Operators.NotEq)#org/apache/parquet/column/statistics/Statistics/genericGetMax()
org/apache/parquet/filter2/statisticslevel/StatisticsFilter/visit(org.apache.parquet.filter2.predicate.Operators.NotEq)#java/lang/Comparable/compareTo(T)
org/apache/parquet/filter2/statisticslevel/StatisticsFilter/visit(org.apache.parquet.filter2.predicate.Operators.And)#org/apache/parquet/filter2/predicate/FilterPredicate/accept(org.apache.parquet.filter2.predicate.FilterPredicate.Visitor)
org/apache/parquet/filter2/statisticslevel/StatisticsFilter/visit(org.apache.parquet.filter2.predicate.Operators.And)#org/apache/parquet/filter2/predicate/Operators/BinaryLogicalFilterPredicate/getRight()
org/apache/parquet/filter2/statisticslevel/StatisticsFilter/visit(org.apache.parquet.filter2.predicate.Operators.And)#org/apache/parquet/filter2/predicate/Operators/BinaryLogicalFilterPredicate/getLeft()
org/apache/parquet/filter2/statisticslevel/StatisticsFilter/getColumnChunk(org.apache.parquet.hadoop.metadata.ColumnPath)#java/util/Map/get(java.lang.Object)
org/apache/parquet/filter2/statisticslevel/StatisticsFilter/visit(org.apache.parquet.filter2.predicate.Operators.GtEq)#org/apache/parquet/filter2/predicate/Operators/ColumnFilterPredicate/getColumn()
org/apache/parquet/filter2/statisticslevel/StatisticsFilter/visit(org.apache.parquet.filter2.predicate.Operators.GtEq)#org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/getStatistics()
org/apache/parquet/filter2/statisticslevel/StatisticsFilter/visit(org.apache.parquet.filter2.predicate.Operators.GtEq)#org/apache/parquet/filter2/statisticslevel/StatisticsFilter/getColumnChunk(org.apache.parquet.hadoop.metadata.ColumnPath)
org/apache/parquet/filter2/statisticslevel/StatisticsFilter/visit(org.apache.parquet.filter2.predicate.Operators.GtEq)#org/apache/parquet/filter2/statisticslevel/StatisticsFilter/isAllNulls(org.apache.parquet.hadoop.metadata.ColumnChunkMetaData)
org/apache/parquet/filter2/statisticslevel/StatisticsFilter/visit(org.apache.parquet.filter2.predicate.Operators.GtEq)#org/apache/parquet/filter2/predicate/Operators/Column/getColumnPath()
org/apache/parquet/filter2/statisticslevel/StatisticsFilter/visit(org.apache.parquet.filter2.predicate.Operators.GtEq)#org/apache/parquet/column/statistics/Statistics/isEmpty()
org/apache/parquet/filter2/statisticslevel/StatisticsFilter/visit(org.apache.parquet.filter2.predicate.Operators.GtEq)#org/apache/parquet/filter2/predicate/Operators/ColumnFilterPredicate/getValue()
org/apache/parquet/filter2/statisticslevel/StatisticsFilter/visit(org.apache.parquet.filter2.predicate.Operators.GtEq)#org/apache/parquet/column/statistics/Statistics/genericGetMax()
org/apache/parquet/filter2/statisticslevel/StatisticsFilter/visit(org.apache.parquet.filter2.predicate.Operators.GtEq)#java/lang/Comparable/compareTo(T)
org/apache/parquet/filter2/statisticslevel/StatisticsFilter/hasNulls(org.apache.parquet.hadoop.metadata.ColumnChunkMetaData)#org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/getStatistics()
org/apache/parquet/filter2/statisticslevel/StatisticsFilter/hasNulls(org.apache.parquet.hadoop.metadata.ColumnChunkMetaData)#org/apache/parquet/column/statistics/Statistics/getNumNulls()
org/apache/parquet/filter2/statisticslevel/StatisticsFilter/visit(org.apache.parquet.filter2.predicate.Operators.LogicalNotUserDefined)#org/apache/parquet/filter2/statisticslevel/StatisticsFilter/visit(org.apache.parquet.filter2.predicate.Operators.UserDefined,boolean)
org/apache/parquet/filter2/statisticslevel/StatisticsFilter/visit(org.apache.parquet.filter2.predicate.Operators.LogicalNotUserDefined)#org/apache/parquet/filter2/predicate/Operators/LogicalNotUserDefined/getUserDefined()
org/apache/parquet/bytes/TestCapacityByteArrayOutputStream/validate(org.apache.parquet.bytes.CapacityByteArrayOutputStream,int)#org/apache/parquet/bytes/BytesInput/toByteArray()
org/apache/parquet/bytes/TestCapacityByteArrayOutputStream/validate(org.apache.parquet.bytes.CapacityByteArrayOutputStream,int)#org/apache/parquet/bytes/BytesInput/from(org.apache.parquet.bytes.CapacityByteArrayOutputStream)
org/apache/parquet/bytes/TestCapacityByteArrayOutputStream/testWrite()#org/apache/parquet/bytes/TestCapacityByteArrayOutputStream/validate(org.apache.parquet.bytes.CapacityByteArrayOutputStream,int)
org/apache/parquet/bytes/TestCapacityByteArrayOutputStream/testWrite()#org/apache/parquet/bytes/CapacityByteArrayOutputStream/size()
org/apache/parquet/bytes/TestCapacityByteArrayOutputStream/testWrite()#org/apache/parquet/bytes/CapacityByteArrayOutputStream/write(int)
org/apache/parquet/bytes/TestCapacityByteArrayOutputStream/testWrite()#org/apache/parquet/bytes/TestCapacityByteArrayOutputStream/newCapacityBAOS(int)
org/apache/parquet/bytes/TestCapacityByteArrayOutputStream/testWriteArrayManySlabs()#org/apache/parquet/bytes/CapacityByteArrayOutputStream/getSlabCount()
org/apache/parquet/bytes/TestCapacityByteArrayOutputStream/testWriteArrayManySlabs()#org/apache/parquet/bytes/TestCapacityByteArrayOutputStream/validate(org.apache.parquet.bytes.CapacityByteArrayOutputStream,int)
org/apache/parquet/bytes/TestCapacityByteArrayOutputStream/testWriteArrayManySlabs()#org/apache/parquet/bytes/CapacityByteArrayOutputStream/size()
org/apache/parquet/bytes/TestCapacityByteArrayOutputStream/testWriteArrayManySlabs()#org/apache/parquet/bytes/TestCapacityByteArrayOutputStream/writeArraysOf3(org.apache.parquet.bytes.CapacityByteArrayOutputStream,int)
org/apache/parquet/bytes/TestCapacityByteArrayOutputStream/testWriteArrayManySlabs()#org/apache/parquet/bytes/BytesInput/toByteArray()
org/apache/parquet/bytes/TestCapacityByteArrayOutputStream/testWriteArrayManySlabs()#org/apache/parquet/bytes/BytesInput/from(org.apache.parquet.bytes.CapacityByteArrayOutputStream)
org/apache/parquet/bytes/TestCapacityByteArrayOutputStream/testWriteArrayManySlabs()#org/apache/parquet/bytes/TestCapacityByteArrayOutputStream/newCapacityBAOS(int)
org/apache/parquet/bytes/TestCapacityByteArrayOutputStream/testWriteArrayManySlabs()#java/io/OutputStream/write(byte[])
org/apache/parquet/bytes/TestCapacityByteArrayOutputStream/testWriteArrayManySlabs()#org/apache/parquet/bytes/CapacityByteArrayOutputStream/reset()
org/apache/parquet/bytes/TestCapacityByteArrayOutputStream/testReset()#org/apache/parquet/bytes/CapacityByteArrayOutputStream/size()
org/apache/parquet/bytes/TestCapacityByteArrayOutputStream/testReset()#org/apache/parquet/bytes/CapacityByteArrayOutputStream/write(int)
org/apache/parquet/bytes/TestCapacityByteArrayOutputStream/testReset()#java/util/Arrays/toString(byte[])
org/apache/parquet/bytes/TestCapacityByteArrayOutputStream/testReset()#org/apache/parquet/bytes/BytesInput/toByteArray()
org/apache/parquet/bytes/TestCapacityByteArrayOutputStream/testReset()#org/apache/parquet/bytes/BytesInput/from(org.apache.parquet.bytes.CapacityByteArrayOutputStream)
org/apache/parquet/bytes/TestCapacityByteArrayOutputStream/testReset()#org/apache/parquet/bytes/CapacityByteArrayOutputStream/reset()
org/apache/parquet/bytes/TestCapacityByteArrayOutputStream/testReset()#org/apache/parquet/bytes/TestCapacityByteArrayOutputStream/newCapacityBAOS(int)
org/apache/parquet/bytes/TestCapacityByteArrayOutputStream/testWriteArray()#org/apache/parquet/bytes/TestCapacityByteArrayOutputStream/validate(org.apache.parquet.bytes.CapacityByteArrayOutputStream,int)
org/apache/parquet/bytes/TestCapacityByteArrayOutputStream/testWriteArray()#org/apache/parquet/bytes/TestCapacityByteArrayOutputStream/writeArraysOf3(org.apache.parquet.bytes.CapacityByteArrayOutputStream,int)
org/apache/parquet/bytes/TestCapacityByteArrayOutputStream/testWriteArray()#org/apache/parquet/bytes/TestCapacityByteArrayOutputStream/newCapacityBAOS(int)
org/apache/parquet/bytes/TestCapacityByteArrayOutputStream/testReplaceByte()#org/apache/parquet/bytes/CapacityByteArrayOutputStream/write(int)
org/apache/parquet/bytes/TestCapacityByteArrayOutputStream/testReplaceByte()#org/apache/parquet/bytes/CapacityByteArrayOutputStream/writeTo(java.io.OutputStream)
org/apache/parquet/bytes/TestCapacityByteArrayOutputStream/testReplaceByte()#org/apache/parquet/bytes/CapacityByteArrayOutputStream/setByte(long,byte)
org/apache/parquet/bytes/TestCapacityByteArrayOutputStream/testReplaceByte()#java/io/ByteArrayOutputStream/toByteArray()
org/apache/parquet/bytes/TestCapacityByteArrayOutputStream/testReplaceByte()#java/io/ByteArrayOutputStream/ByteArrayOutputStream()
org/apache/parquet/bytes/TestCapacityByteArrayOutputStream/testReplaceByte()#org/apache/parquet/bytes/CapacityByteArrayOutputStream/getCurrentIndex()
org/apache/parquet/bytes/TestCapacityByteArrayOutputStream/testReplaceByte()#org/apache/parquet/bytes/TestCapacityByteArrayOutputStream/newCapacityBAOS(int)
org/apache/parquet/bytes/TestCapacityByteArrayOutputStream/writeArraysOf3(org.apache.parquet.bytes.CapacityByteArrayOutputStream,int)#org/apache/parquet/bytes/CapacityByteArrayOutputStream/size()
org/apache/parquet/bytes/TestCapacityByteArrayOutputStream/writeArraysOf3(org.apache.parquet.bytes.CapacityByteArrayOutputStream,int)#java/io/OutputStream/write(byte[])
org/apache/parquet/bytes/TestCapacityByteArrayOutputStream/testWriteArrayBiggerThanSlab()#org/apache/parquet/bytes/TestCapacityByteArrayOutputStream/validate(org.apache.parquet.bytes.CapacityByteArrayOutputStream,int)
org/apache/parquet/bytes/TestCapacityByteArrayOutputStream/testWriteArrayBiggerThanSlab()#org/apache/parquet/bytes/CapacityByteArrayOutputStream/size()
org/apache/parquet/bytes/TestCapacityByteArrayOutputStream/testWriteArrayBiggerThanSlab()#org/apache/parquet/bytes/TestCapacityByteArrayOutputStream/writeArraysOf3(org.apache.parquet.bytes.CapacityByteArrayOutputStream,int)
org/apache/parquet/bytes/TestCapacityByteArrayOutputStream/testWriteArrayBiggerThanSlab()#org/apache/parquet/bytes/BytesInput/toByteArray()
org/apache/parquet/bytes/TestCapacityByteArrayOutputStream/testWriteArrayBiggerThanSlab()#org/apache/parquet/bytes/BytesInput/from(org.apache.parquet.bytes.CapacityByteArrayOutputStream)
org/apache/parquet/bytes/TestCapacityByteArrayOutputStream/testWriteArrayBiggerThanSlab()#org/apache/parquet/bytes/TestCapacityByteArrayOutputStream/newCapacityBAOS(int)
org/apache/parquet/bytes/TestCapacityByteArrayOutputStream/testWriteArrayBiggerThanSlab()#java/io/OutputStream/write(byte[])
org/apache/parquet/bytes/TestCapacityByteArrayOutputStream/testWriteArrayBiggerThanSlab()#org/apache/parquet/bytes/CapacityByteArrayOutputStream/reset()
org/apache/parquet/bytes/TestCapacityByteArrayOutputStream/newCapacityBAOS(int)#org/apache/parquet/bytes/CapacityByteArrayOutputStream/CapacityByteArrayOutputStream(int,int,org.apache.parquet.bytes.ByteBufferAllocator)
org/apache/parquet/bytes/TestCapacityByteArrayOutputStream/newCapacityBAOS(int)#org/apache/parquet/bytes/HeapByteBufferAllocator/HeapByteBufferAllocator()
org/apache/parquet/bytes/TestCapacityByteArrayOutputStream/testWriteArrayAndInt()#org/apache/parquet/bytes/TestCapacityByteArrayOutputStream/validate(org.apache.parquet.bytes.CapacityByteArrayOutputStream,int)
org/apache/parquet/bytes/TestCapacityByteArrayOutputStream/testWriteArrayAndInt()#org/apache/parquet/bytes/CapacityByteArrayOutputStream/size()
org/apache/parquet/bytes/TestCapacityByteArrayOutputStream/testWriteArrayAndInt()#org/apache/parquet/bytes/CapacityByteArrayOutputStream/write(int)
org/apache/parquet/bytes/TestCapacityByteArrayOutputStream/testWriteArrayAndInt()#java/io/OutputStream/write(byte[])
org/apache/parquet/bytes/TestCapacityByteArrayOutputStream/testWriteArrayAndInt()#org/apache/parquet/bytes/TestCapacityByteArrayOutputStream/newCapacityBAOS(int)
org/apache/parquet/pig/summary/EnumStat/setValues(java.util.Collection)#org/apache/parquet/pig/summary/EnumStat/EnumValueCount/getValue()
org/apache/parquet/pig/summary/EnumStat/setValues(java.util.Collection)#java/util/Map/put(K,V)
org/apache/parquet/pig/summary/EnumStat/merge(org.apache.parquet.pig.summary.EnumStat)#org/apache/parquet/pig/summary/EnumStat/checkValues()
org/apache/parquet/pig/summary/EnumStat/merge(org.apache.parquet.pig.summary.EnumStat)#java/util/Map/get(java.lang.Object)
org/apache/parquet/pig/summary/EnumStat/merge(org.apache.parquet.pig.summary.EnumStat)#org/apache/parquet/pig/summary/EnumStat/EnumValueCount/add(int)
org/apache/parquet/pig/summary/EnumStat/merge(org.apache.parquet.pig.summary.EnumStat)#org/apache/parquet/pig/summary/EnumStat/getValues()
org/apache/parquet/pig/summary/EnumStat/merge(org.apache.parquet.pig.summary.EnumStat)#java/util/Map/put(K,V)
org/apache/parquet/pig/summary/EnumStat/checkValues()#java/util/Map/size()
org/apache/parquet/pig/summary/EnumStat/getValues()#java/util/Map/values()
org/apache/parquet/pig/summary/EnumStat/add(java.lang.String)#org/apache/parquet/pig/summary/EnumStat/checkValues()
org/apache/parquet/pig/summary/EnumStat/add(java.lang.String)#org/apache/parquet/pig/summary/EnumStat/EnumValueCount/add()
org/apache/parquet/pig/summary/EnumStat/add(java.lang.String)#java/util/Map/get(java.lang.Object)
org/apache/parquet/pig/summary/EnumStat/add(java.lang.String)#org/apache/parquet/pig/summary/EnumStat/EnumValueCount/EnumValueCount(java.lang.String)
org/apache/parquet/pig/summary/EnumStat/add(java.lang.String)#java/util/Map/put(K,V)
org/apache/parquet/column/values/factory/DefaultValuesWriterFactoryTest/testBinary_NoDict()#org/apache/parquet/column/values/factory/DefaultValuesWriterFactoryTest/doTestValueWriter(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.column.ParquetProperties.WriterVersion,boolean,java.lang.Class)
org/apache/parquet/column/values/factory/DefaultValuesWriterFactoryTest/testBinary()#org/apache/parquet/column/values/factory/DefaultValuesWriterFactoryTest/doTestValueWriter(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.column.ParquetProperties.WriterVersion,boolean,java.lang.Class,java.lang.Class)
org/apache/parquet/column/values/factory/DefaultValuesWriterFactoryTest/testDouble_NoDict()#org/apache/parquet/column/values/factory/DefaultValuesWriterFactoryTest/doTestValueWriter(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.column.ParquetProperties.WriterVersion,boolean,java.lang.Class)
org/apache/parquet/column/values/factory/DefaultValuesWriterFactoryTest/getMockColumn(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)#org/apache/parquet/column/ColumnDescriptor/getType()
org/apache/parquet/column/values/factory/DefaultValuesWriterFactoryTest/testInt96_V2_NoDict()#org/apache/parquet/column/values/factory/DefaultValuesWriterFactoryTest/doTestValueWriter(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.column.ParquetProperties.WriterVersion,boolean,java.lang.Class)
org/apache/parquet/column/values/factory/DefaultValuesWriterFactoryTest/testInt96_V2()#org/apache/parquet/column/values/factory/DefaultValuesWriterFactoryTest/doTestValueWriter(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.column.ParquetProperties.WriterVersion,boolean,java.lang.Class,java.lang.Class)
org/apache/parquet/column/values/factory/DefaultValuesWriterFactoryTest/testFixedLenByteArray()#org/apache/parquet/column/values/factory/DefaultValuesWriterFactoryTest/doTestValueWriter(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.column.ParquetProperties.WriterVersion,boolean,java.lang.Class)
org/apache/parquet/column/values/factory/DefaultValuesWriterFactoryTest/testDouble()#org/apache/parquet/column/values/factory/DefaultValuesWriterFactoryTest/doTestValueWriter(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.column.ParquetProperties.WriterVersion,boolean,java.lang.Class,java.lang.Class)
org/apache/parquet/column/values/factory/DefaultValuesWriterFactoryTest/testBoolean_V2()#org/apache/parquet/column/values/factory/DefaultValuesWriterFactoryTest/doTestValueWriter(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.column.ParquetProperties.WriterVersion,boolean,java.lang.Class)
org/apache/parquet/column/values/factory/DefaultValuesWriterFactoryTest/doTestValueWriter(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.column.ParquetProperties.WriterVersion,boolean,java.lang.Class)#org/apache/parquet/column/values/factory/DefaultValuesWriterFactoryTest/getMockColumn(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/column/values/factory/DefaultValuesWriterFactoryTest/doTestValueWriter(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.column.ParquetProperties.WriterVersion,boolean,java.lang.Class)#org/apache/parquet/column/values/factory/DefaultValuesWriterFactoryTest/getDefaultFactory(org.apache.parquet.column.ParquetProperties.WriterVersion,boolean)
org/apache/parquet/column/values/factory/DefaultValuesWriterFactoryTest/doTestValueWriter(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.column.ParquetProperties.WriterVersion,boolean,java.lang.Class)#org/apache/parquet/column/values/factory/DefaultValuesWriterFactoryTest/validateWriterType(org.apache.parquet.column.values.ValuesWriter,java.lang.Class)
org/apache/parquet/column/values/factory/DefaultValuesWriterFactoryTest/doTestValueWriter(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.column.ParquetProperties.WriterVersion,boolean,java.lang.Class)#org/apache/parquet/column/values/factory/ValuesWriterFactory/newValuesWriter(org.apache.parquet.column.ColumnDescriptor)
org/apache/parquet/column/values/factory/DefaultValuesWriterFactoryTest/testFloat_V2_NoDict()#org/apache/parquet/column/values/factory/DefaultValuesWriterFactoryTest/doTestValueWriter(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.column.ParquetProperties.WriterVersion,boolean,java.lang.Class)
org/apache/parquet/column/values/factory/DefaultValuesWriterFactoryTest/testBinary_V2()#org/apache/parquet/column/values/factory/DefaultValuesWriterFactoryTest/doTestValueWriter(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.column.ParquetProperties.WriterVersion,boolean,java.lang.Class,java.lang.Class)
org/apache/parquet/column/values/factory/DefaultValuesWriterFactoryTest/testFloat_NoDict()#org/apache/parquet/column/values/factory/DefaultValuesWriterFactoryTest/doTestValueWriter(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.column.ParquetProperties.WriterVersion,boolean,java.lang.Class)
org/apache/parquet/column/values/factory/DefaultValuesWriterFactoryTest/testBinary_V2_NoDict()#org/apache/parquet/column/values/factory/DefaultValuesWriterFactoryTest/doTestValueWriter(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.column.ParquetProperties.WriterVersion,boolean,java.lang.Class)
org/apache/parquet/column/values/factory/DefaultValuesWriterFactoryTest/testFloat()#org/apache/parquet/column/values/factory/DefaultValuesWriterFactoryTest/doTestValueWriter(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.column.ParquetProperties.WriterVersion,boolean,java.lang.Class,java.lang.Class)
org/apache/parquet/column/values/factory/DefaultValuesWriterFactoryTest/doTestValueWriter(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.column.ParquetProperties.WriterVersion,boolean,java.lang.Class,java.lang.Class)#org/apache/parquet/column/values/factory/DefaultValuesWriterFactoryTest/getMockColumn(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/column/values/factory/DefaultValuesWriterFactoryTest/doTestValueWriter(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.column.ParquetProperties.WriterVersion,boolean,java.lang.Class,java.lang.Class)#org/apache/parquet/column/values/factory/DefaultValuesWriterFactoryTest/getDefaultFactory(org.apache.parquet.column.ParquetProperties.WriterVersion,boolean)
org/apache/parquet/column/values/factory/DefaultValuesWriterFactoryTest/doTestValueWriter(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.column.ParquetProperties.WriterVersion,boolean,java.lang.Class,java.lang.Class)#org/apache/parquet/column/values/factory/DefaultValuesWriterFactoryTest/validateFallbackWriter(org.apache.parquet.column.values.ValuesWriter,java.lang.Class,java.lang.Class)
org/apache/parquet/column/values/factory/DefaultValuesWriterFactoryTest/doTestValueWriter(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.column.ParquetProperties.WriterVersion,boolean,java.lang.Class,java.lang.Class)#org/apache/parquet/column/values/factory/ValuesWriterFactory/newValuesWriter(org.apache.parquet.column.ColumnDescriptor)
org/apache/parquet/column/values/factory/DefaultValuesWriterFactoryTest/testFloat_V2()#org/apache/parquet/column/values/factory/DefaultValuesWriterFactoryTest/doTestValueWriter(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.column.ParquetProperties.WriterVersion,boolean,java.lang.Class,java.lang.Class)
org/apache/parquet/column/values/factory/DefaultValuesWriterFactoryTest/testBoolean()#org/apache/parquet/column/values/factory/DefaultValuesWriterFactoryTest/doTestValueWriter(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.column.ParquetProperties.WriterVersion,boolean,java.lang.Class)
org/apache/parquet/column/values/factory/DefaultValuesWriterFactoryTest/testInt32_NoDict()#org/apache/parquet/column/values/factory/DefaultValuesWriterFactoryTest/doTestValueWriter(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.column.ParquetProperties.WriterVersion,boolean,java.lang.Class)
org/apache/parquet/column/values/factory/DefaultValuesWriterFactoryTest/testInt64_V2_NoDict()#org/apache/parquet/column/values/factory/DefaultValuesWriterFactoryTest/doTestValueWriter(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.column.ParquetProperties.WriterVersion,boolean,java.lang.Class)
org/apache/parquet/column/values/factory/DefaultValuesWriterFactoryTest/testInt64_NoDict()#org/apache/parquet/column/values/factory/DefaultValuesWriterFactoryTest/doTestValueWriter(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.column.ParquetProperties.WriterVersion,boolean,java.lang.Class)
org/apache/parquet/column/values/factory/DefaultValuesWriterFactoryTest/testInt32_V2_NoDict()#org/apache/parquet/column/values/factory/DefaultValuesWriterFactoryTest/doTestValueWriter(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.column.ParquetProperties.WriterVersion,boolean,java.lang.Class)
org/apache/parquet/column/values/factory/DefaultValuesWriterFactoryTest/testDouble_V2()#org/apache/parquet/column/values/factory/DefaultValuesWriterFactoryTest/doTestValueWriter(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.column.ParquetProperties.WriterVersion,boolean,java.lang.Class,java.lang.Class)
org/apache/parquet/column/values/factory/DefaultValuesWriterFactoryTest/testInt96_NoDict()#org/apache/parquet/column/values/factory/DefaultValuesWriterFactoryTest/doTestValueWriter(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.column.ParquetProperties.WriterVersion,boolean,java.lang.Class)
org/apache/parquet/column/values/factory/DefaultValuesWriterFactoryTest/testFixedLenByteArray_V2_NoDict()#org/apache/parquet/column/values/factory/DefaultValuesWriterFactoryTest/doTestValueWriter(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.column.ParquetProperties.WriterVersion,boolean,java.lang.Class)
org/apache/parquet/column/values/factory/DefaultValuesWriterFactoryTest/testFixedLenByteArray_V2()#org/apache/parquet/column/values/factory/DefaultValuesWriterFactoryTest/doTestValueWriter(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.column.ParquetProperties.WriterVersion,boolean,java.lang.Class,java.lang.Class)
org/apache/parquet/column/values/factory/DefaultValuesWriterFactoryTest/testDouble_V2_NoDict()#org/apache/parquet/column/values/factory/DefaultValuesWriterFactoryTest/doTestValueWriter(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.column.ParquetProperties.WriterVersion,boolean,java.lang.Class)
org/apache/parquet/column/values/factory/DefaultValuesWriterFactoryTest/testInt96()#org/apache/parquet/column/values/factory/DefaultValuesWriterFactoryTest/doTestValueWriter(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.column.ParquetProperties.WriterVersion,boolean,java.lang.Class,java.lang.Class)
org/apache/parquet/column/values/factory/DefaultValuesWriterFactoryTest/getDefaultFactory(org.apache.parquet.column.ParquetProperties.WriterVersion,boolean)#org/apache/parquet/column/ParquetProperties/builder()
org/apache/parquet/column/values/factory/DefaultValuesWriterFactoryTest/getDefaultFactory(org.apache.parquet.column.ParquetProperties.WriterVersion,boolean)#org/apache/parquet/column/ParquetProperties/Builder/withDictionaryEncoding(boolean)
org/apache/parquet/column/values/factory/DefaultValuesWriterFactoryTest/getDefaultFactory(org.apache.parquet.column.ParquetProperties.WriterVersion,boolean)#org/apache/parquet/column/ParquetProperties/Builder/withWriterVersion(org.apache.parquet.column.ParquetProperties.WriterVersion)
org/apache/parquet/column/values/factory/DefaultValuesWriterFactoryTest/getDefaultFactory(org.apache.parquet.column.ParquetProperties.WriterVersion,boolean)#org/apache/parquet/column/ParquetProperties/Builder/withValuesWriterFactory(org.apache.parquet.column.values.factory.ValuesWriterFactory)
org/apache/parquet/column/values/factory/DefaultValuesWriterFactoryTest/getDefaultFactory(org.apache.parquet.column.ParquetProperties.WriterVersion,boolean)#org/apache/parquet/column/values/factory/DefaultValuesWriterFactory/DefaultValuesWriterFactory()
org/apache/parquet/column/values/factory/DefaultValuesWriterFactoryTest/getDefaultFactory(org.apache.parquet.column.ParquetProperties.WriterVersion,boolean)#org/apache/parquet/column/ParquetProperties/Builder/build()
org/apache/parquet/column/values/factory/DefaultValuesWriterFactoryTest/testInt32_V2()#org/apache/parquet/column/values/factory/DefaultValuesWriterFactoryTest/doTestValueWriter(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.column.ParquetProperties.WriterVersion,boolean,java.lang.Class,java.lang.Class)
org/apache/parquet/column/values/factory/DefaultValuesWriterFactoryTest/testInt64()#org/apache/parquet/column/values/factory/DefaultValuesWriterFactoryTest/doTestValueWriter(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.column.ParquetProperties.WriterVersion,boolean,java.lang.Class,java.lang.Class)
org/apache/parquet/column/values/factory/DefaultValuesWriterFactoryTest/validateFallbackWriter(org.apache.parquet.column.values.ValuesWriter,java.lang.Class,java.lang.Class)#org/apache/parquet/column/values/factory/DefaultValuesWriterFactoryTest/validateWriterType(org.apache.parquet.column.values.ValuesWriter,java.lang.Class)
org/apache/parquet/column/values/factory/DefaultValuesWriterFactoryTest/testInt64_V2()#org/apache/parquet/column/values/factory/DefaultValuesWriterFactoryTest/doTestValueWriter(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.column.ParquetProperties.WriterVersion,boolean,java.lang.Class,java.lang.Class)
org/apache/parquet/column/values/factory/DefaultValuesWriterFactoryTest/testInt32()#org/apache/parquet/column/values/factory/DefaultValuesWriterFactoryTest/doTestValueWriter(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.column.ParquetProperties.WriterVersion,boolean,java.lang.Class,java.lang.Class)
org/apache/parquet/column/values/factory/DefaultValuesWriterFactoryTest/validateWriterType(org.apache.parquet.column.values.ValuesWriter,java.lang.Class)#java/lang/Class/isInstance(java.lang.Object)
org/apache/parquet/column/values/factory/DefaultValuesWriterFactoryTest/validateWriterType(org.apache.parquet.column.values.ValuesWriter,java.lang.Class)#java/lang/Class/getName()
org/apache/parquet/column/values/dictionary/PlainValuesDictionary/PlainDoubleDictionary/toString()#java/lang/StringBuilder/append(java.lang.String)
org/apache/parquet/column/values/dictionary/PlainValuesDictionary/PlainDoubleDictionary/toString()#java/lang/StringBuilder/append(int)
org/apache/parquet/column/values/dictionary/PlainValuesDictionary/PlainDoubleDictionary/toString()#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/apache/parquet/column/values/dictionary/PlainValuesDictionary/PlainDoubleDictionary/toString()#java/lang/StringBuilder/append(double)
org/apache/parquet/column/values/dictionary/PlainValuesDictionary/PlainDoubleDictionary/toString()#java/lang/StringBuilder/toString()
org/apache/parquet/thrift/ParquetWriteProtocol/ListWriteProtocol/startListWrapper()#org/apache/parquet/thrift/ParquetWriteProtocol/FieldBaseWriteProtocol/start()
org/apache/parquet/thrift/ParquetWriteProtocol/ListWriteProtocol/startListWrapper()#org/apache/parquet/schema/Type/getName()
org/apache/parquet/thrift/ParquetWriteProtocol/ListWriteProtocol/startListWrapper()#org/apache/parquet/io/api/RecordConsumer/startField(java.lang.String,int)
org/apache/parquet/thrift/ParquetWriteProtocol/ListWriteProtocol/startListWrapper()#org/apache/parquet/io/ColumnIO/getType()
org/apache/parquet/thrift/ParquetWriteProtocol/ListWriteProtocol/startListWrapper()#org/apache/parquet/io/api/RecordConsumer/startGroup()
org/apache/parquet/thrift/ParquetWriteProtocol/ListWriteProtocol/writeSetBegin(org.apache.parquet.thrift.TSet)#org/apache/parquet/thrift/ParquetWriteProtocol/ListWriteProtocol/startListWrapper()
org/apache/parquet/thrift/ParquetWriteProtocol/ListWriteProtocol/endListWrapper()#org/apache/parquet/schema/Type/getName()
org/apache/parquet/thrift/ParquetWriteProtocol/ListWriteProtocol/endListWrapper()#org/apache/parquet/io/api/RecordConsumer/endField(java.lang.String,int)
org/apache/parquet/thrift/ParquetWriteProtocol/ListWriteProtocol/endListWrapper()#org/apache/parquet/io/ColumnIO/getType()
org/apache/parquet/thrift/ParquetWriteProtocol/ListWriteProtocol/endListWrapper()#org/apache/parquet/thrift/ParquetWriteProtocol/FieldBaseWriteProtocol/end()
org/apache/parquet/thrift/ParquetWriteProtocol/ListWriteProtocol/endListWrapper()#org/apache/parquet/io/api/RecordConsumer/endGroup()
org/apache/parquet/thrift/ParquetWriteProtocol/ListWriteProtocol/writeSetEnd()#org/apache/parquet/thrift/ParquetWriteProtocol/ListWriteProtocol/endListWrapper()
org/apache/parquet/thrift/ParquetWriteProtocol/ListWriteProtocol/writeListEnd()#org/apache/parquet/thrift/ParquetWriteProtocol/ListWriteProtocol/endListWrapper()
org/apache/parquet/thrift/ParquetWriteProtocol/ListWriteProtocol/writeListBegin(org.apache.parquet.thrift.TList)#org/apache/parquet/thrift/ParquetWriteProtocol/ListWriteProtocol/startListWrapper()
org/apache/hadoop/hive/ql/io/parquet/serde/TestAbstractParquetMapInspector/testNullMap()#org/apache/hadoop/hive/ql/io/parquet/serde/AbstractParquetMapInspector/getMap(java.lang.Object)
org/apache/hadoop/hive/ql/io/parquet/serde/TestAbstractParquetMapInspector/testNullMap()#org/apache/hadoop/hive/ql/io/parquet/serde/AbstractParquetMapInspector/getMapSize(java.lang.Object)
org/apache/hadoop/hive/ql/io/parquet/serde/TestAbstractParquetMapInspector/testNullContainer()#org/apache/hadoop/hive/ql/io/parquet/serde/AbstractParquetMapInspector/getMap(java.lang.Object)
org/apache/hadoop/hive/ql/io/parquet/serde/TestAbstractParquetMapInspector/testNullContainer()#org/apache/hadoop/hive/ql/io/parquet/serde/AbstractParquetMapInspector/getMapSize(java.lang.Object)
org/apache/hadoop/hive/ql/io/parquet/serde/TestAbstractParquetMapInspector/testRegularMap()#java/util/HashMap/HashMap()
org/apache/hadoop/hive/ql/io/parquet/serde/TestAbstractParquetMapInspector/testRegularMap()#org/apache/hadoop/hive/ql/io/parquet/serde/AbstractParquetMapInspector/getMap(java.lang.Object)
org/apache/hadoop/hive/ql/io/parquet/serde/TestAbstractParquetMapInspector/testRegularMap()#org/apache/hadoop/hive/ql/io/parquet/serde/AbstractParquetMapInspector/getMapSize(java.lang.Object)
org/apache/hadoop/hive/ql/io/parquet/serde/TestAbstractParquetMapInspector/testRegularMap()#java/lang/Object/Object()
org/apache/hadoop/hive/ql/io/parquet/serde/TestAbstractParquetMapInspector/testHashMap()#java/util/HashMap/HashMap()
org/apache/hadoop/hive/ql/io/parquet/serde/TestAbstractParquetMapInspector/testHashMap()#org/apache/hadoop/hive/ql/io/parquet/serde/AbstractParquetMapInspector/getMap(java.lang.Object)
org/apache/hadoop/hive/ql/io/parquet/serde/TestAbstractParquetMapInspector/testHashMap()#org/apache/hadoop/hive/ql/io/parquet/serde/AbstractParquetMapInspector/getMapSize(java.lang.Object)
org/apache/hadoop/hive/ql/io/parquet/serde/TestAbstractParquetMapInspector/testEmptyContainer()#org/apache/hadoop/hive/ql/io/parquet/serde/AbstractParquetMapInspector/getMap(java.lang.Object)
org/apache/hadoop/hive/ql/io/parquet/serde/TestAbstractParquetMapInspector/testEmptyContainer()#org/apache/hadoop/hive/ql/io/parquet/serde/AbstractParquetMapInspector/getMapSize(java.lang.Object)
org/apache/hadoop/hive/ql/io/parquet/serde/TestAbstractParquetMapInspector/testEmptyContainer()#java/lang/Object/Object()
org/apache/hadoop/hive/ql/io/parquet/serde/TestAbstractParquetMapInspector/setUp()#org/apache/hadoop/hive/ql/io/parquet/serde/TestAbstractParquetMapInspector/TestableAbstractParquetMapInspector/TestableAbstractParquetMapInspector(org.apache.hadoop.hive.ql.io.parquet.serde.ObjectInspector,org.apache.hadoop.hive.ql.io.parquet.serde.ObjectInspector)
org/apache/parquet/example/data/simple/DoubleValue/toString()#java/lang/String/valueOf(double)
org/apache/parquet/example/data/simple/DoubleValue/writeValue(org.apache.parquet.io.api.RecordConsumer)#org/apache/parquet/io/api/RecordConsumer/addDouble(double)
org/apache/parquet/hadoop/thrift/ThriftToParquetFileWriter/close()#java/io/IOException/IOException(java.lang.String,java.lang.Throwable)
org/apache/parquet/hadoop/thrift/ThriftToParquetFileWriter/close()#java/lang/Thread/interrupted()
org/apache/parquet/hadoop/thrift/TestBinary/testBinary()#org/apache/parquet/thrift/ThriftParquetWriter/ThriftParquetWriter(org.apache.parquet.hadoop.Path,java.lang.Class,org.apache.parquet.hadoop.metadata.CompressionCodecName)
org/apache/parquet/hadoop/thrift/TestBinary/testBinary()#java/util/UUID/randomUUID()
org/apache/parquet/hadoop/thrift/TestBinary/testBinary()#org/apache/parquet/thrift/ThriftParquetReader/build(org.apache.parquet.hadoop.Path)
org/apache/parquet/hadoop/thrift/TestBinary/testBinary()#java/nio/ByteBuffer/wrap(byte[])
org/apache/parquet/hadoop/thrift/TestBinary/testBinary()#java/io/File/deleteOnExit()
org/apache/parquet/hadoop/thrift/TestBinary/testBinary()#java/util/UUID/toString()
org/apache/parquet/hadoop/thrift/TestBinary/testBinary()#java/io/File/delete()
org/apache/parquet/hadoop/thrift/TestBinary/testBinary()#java/io/File/getPath()
org/apache/parquet/avro/TestReflectLogicalTypes/DecimalRecordFixed/equals(java.lang.Object)#java/math/BigDecimal/equals(java.lang.Object)
org/apache/parquet/avro/TestReflectLogicalTypes/DecimalRecordFixed/equals(java.lang.Object)#java/lang/Object/getClass()
org/apache/parquet/avro/TestReflectLogicalTypes/DecimalRecordFixed/hashCode()#java/math/BigDecimal/hashCode()
org/apache/parquet/io/ValidatingRecordConsumer/endMessage()#org/apache/parquet/io/api/RecordConsumer/endMessage()
org/apache/parquet/io/ValidatingRecordConsumer/endMessage()#java/util/Deque/peek()
org/apache/parquet/io/ValidatingRecordConsumer/endMessage()#org/apache/parquet/schema/Type/asGroupType()
org/apache/parquet/io/ValidatingRecordConsumer/endMessage()#org/apache/parquet/io/ValidatingRecordConsumer/validateMissingFields(int)
org/apache/parquet/io/ValidatingRecordConsumer/endMessage()#org/apache/parquet/schema/GroupType/getFieldCount()
org/apache/parquet/io/ValidatingRecordConsumer/endMessage()#java/util/Deque/pop()
org/apache/parquet/io/ValidatingRecordConsumer/startField(java.lang.String,int)#java/util/Deque/peek()
org/apache/parquet/io/ValidatingRecordConsumer/startField(java.lang.String,int)#org/apache/parquet/io/api/RecordConsumer/startField(java.lang.String,int)
org/apache/parquet/io/ValidatingRecordConsumer/startField(java.lang.String,int)#org/apache/parquet/io/ValidatingRecordConsumer/validateMissingFields(int)
org/apache/parquet/io/ValidatingRecordConsumer/startField(java.lang.String,int)#org/apache/parquet/io/InvalidRecordException/InvalidRecordException(java.lang.String)
org/apache/parquet/io/ValidatingRecordConsumer/startField(java.lang.String,int)#java/util/Deque/push(E)
org/apache/parquet/io/ValidatingRecordConsumer/endField(java.lang.String,int)#org/apache/parquet/io/api/RecordConsumer/endField(java.lang.String,int)
org/apache/parquet/io/ValidatingRecordConsumer/endField(java.lang.String,int)#java/util/Deque/pop()
org/apache/parquet/io/ValidatingRecordConsumer/endField(java.lang.String,int)#java/util/Deque/push(E)
org/apache/parquet/io/ValidatingRecordConsumer/validateMissingFields(int)#java/util/Deque/peek()
org/apache/parquet/io/ValidatingRecordConsumer/validateMissingFields(int)#org/apache/parquet/schema/Type/asGroupType()
org/apache/parquet/io/ValidatingRecordConsumer/validateMissingFields(int)#org/apache/parquet/schema/Type/isRepetition(org.apache.parquet.schema.Type.Repetition)
org/apache/parquet/io/ValidatingRecordConsumer/validateMissingFields(int)#org/apache/parquet/io/InvalidRecordException/InvalidRecordException(java.lang.String)
org/apache/parquet/io/ValidatingRecordConsumer/validateMissingFields(int)#org/apache/parquet/schema/GroupType/getType(int)
org/apache/parquet/io/ValidatingRecordConsumer/addBinary(org.apache.parquet.io.api.Binary)#org/apache/parquet/io/ValidatingRecordConsumer/validate(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName[])
org/apache/parquet/io/ValidatingRecordConsumer/addBinary(org.apache.parquet.io.api.Binary)#org/apache/parquet/io/api/RecordConsumer/addBinary(org.apache.parquet.io.api.Binary)
org/apache/parquet/io/ValidatingRecordConsumer/validate(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName[])#org/apache/parquet/schema/Type/getName()
org/apache/parquet/io/ValidatingRecordConsumer/validate(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName[])#java/util/Deque/peek()
org/apache/parquet/io/ValidatingRecordConsumer/validate(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName[])#java/util/Arrays/toString(java.lang.Object[])
org/apache/parquet/io/ValidatingRecordConsumer/validate(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName[])#org/apache/parquet/schema/Type/asPrimitiveType()
org/apache/parquet/io/ValidatingRecordConsumer/validate(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName[])#org/apache/parquet/io/InvalidRecordException/InvalidRecordException(java.lang.String)
org/apache/parquet/io/ValidatingRecordConsumer/validate(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName[])#org/apache/parquet/schema/PrimitiveType/getPrimitiveTypeName()
org/apache/parquet/io/ValidatingRecordConsumer/validate(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName[])#org/apache/parquet/schema/Type/isPrimitive()
org/apache/parquet/io/ValidatingRecordConsumer/validate(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName[])#org/apache/parquet/schema/Type/asGroupType()
org/apache/parquet/io/ValidatingRecordConsumer/validate(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName[])#org/apache/parquet/schema/Type/getRepetition()
org/apache/parquet/io/ValidatingRecordConsumer/validate(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName[])#java/util/Deque/pop()
org/apache/parquet/io/ValidatingRecordConsumer/validate(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName[])#org/apache/parquet/schema/GroupType/getType(int)
org/apache/parquet/io/ValidatingRecordConsumer/validate(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName[])#java/util/Deque/push(E)
org/apache/parquet/io/ValidatingRecordConsumer/validate(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)#org/apache/parquet/schema/Type/getName()
org/apache/parquet/io/ValidatingRecordConsumer/validate(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)#java/util/Deque/peek()
org/apache/parquet/io/ValidatingRecordConsumer/validate(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)#org/apache/parquet/schema/Type/asPrimitiveType()
org/apache/parquet/io/ValidatingRecordConsumer/validate(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)#org/apache/parquet/io/InvalidRecordException/InvalidRecordException(java.lang.String)
org/apache/parquet/io/ValidatingRecordConsumer/validate(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)#org/apache/parquet/schema/PrimitiveType/getPrimitiveTypeName()
org/apache/parquet/io/ValidatingRecordConsumer/validate(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)#org/apache/parquet/schema/Type/isPrimitive()
org/apache/parquet/io/ValidatingRecordConsumer/validate(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)#org/apache/parquet/schema/Type/asGroupType()
org/apache/parquet/io/ValidatingRecordConsumer/validate(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)#org/apache/parquet/schema/Type/getRepetition()
org/apache/parquet/io/ValidatingRecordConsumer/validate(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)#java/util/Deque/pop()
org/apache/parquet/io/ValidatingRecordConsumer/validate(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)#org/apache/parquet/schema/GroupType/getType(int)
org/apache/parquet/io/ValidatingRecordConsumer/validate(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)#java/util/Deque/push(E)
org/apache/parquet/io/ValidatingRecordConsumer/endGroup()#java/util/Deque/peek()
org/apache/parquet/io/ValidatingRecordConsumer/endGroup()#org/apache/parquet/schema/Type/asGroupType()
org/apache/parquet/io/ValidatingRecordConsumer/endGroup()#org/apache/parquet/io/ValidatingRecordConsumer/validateMissingFields(int)
org/apache/parquet/io/ValidatingRecordConsumer/endGroup()#org/apache/parquet/schema/GroupType/getFieldCount()
org/apache/parquet/io/ValidatingRecordConsumer/endGroup()#org/apache/parquet/io/api/RecordConsumer/endGroup()
org/apache/parquet/io/ValidatingRecordConsumer/endGroup()#java/util/Deque/pop()
org/apache/parquet/io/ValidatingRecordConsumer/addInteger(int)#org/apache/parquet/io/api/RecordConsumer/addInteger(int)
org/apache/parquet/io/ValidatingRecordConsumer/addInteger(int)#org/apache/parquet/io/ValidatingRecordConsumer/validate(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/io/ValidatingRecordConsumer/flush()#org/apache/parquet/io/api/RecordConsumer/flush()
org/apache/parquet/io/ValidatingRecordConsumer/startGroup()#java/util/Deque/peek()
org/apache/parquet/io/ValidatingRecordConsumer/startGroup()#org/apache/parquet/schema/Type/asGroupType()
org/apache/parquet/io/ValidatingRecordConsumer/startGroup()#org/apache/parquet/io/api/RecordConsumer/startGroup()
org/apache/parquet/io/ValidatingRecordConsumer/startGroup()#org/apache/parquet/schema/GroupType/getType(int)
org/apache/parquet/io/ValidatingRecordConsumer/startGroup()#java/util/Deque/push(E)
org/apache/parquet/io/ValidatingRecordConsumer/addFloat(float)#org/apache/parquet/io/ValidatingRecordConsumer/validate(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/io/ValidatingRecordConsumer/addFloat(float)#org/apache/parquet/io/api/RecordConsumer/addFloat(float)
org/apache/parquet/io/ValidatingRecordConsumer/addDouble(double)#org/apache/parquet/io/api/RecordConsumer/addDouble(double)
org/apache/parquet/io/ValidatingRecordConsumer/addDouble(double)#org/apache/parquet/io/ValidatingRecordConsumer/validate(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/io/ValidatingRecordConsumer/addLong(long)#org/apache/parquet/io/api/RecordConsumer/addLong(long)
org/apache/parquet/io/ValidatingRecordConsumer/addLong(long)#org/apache/parquet/io/ValidatingRecordConsumer/validate(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/io/ValidatingRecordConsumer/startMessage()#org/apache/parquet/io/api/RecordConsumer/startMessage()
org/apache/parquet/io/ValidatingRecordConsumer/startMessage()#java/util/Deque/push(E)
org/apache/parquet/io/ValidatingRecordConsumer/addBoolean(boolean)#org/apache/parquet/io/api/RecordConsumer/addBoolean(boolean)
org/apache/parquet/io/ValidatingRecordConsumer/addBoolean(boolean)#org/apache/parquet/io/ValidatingRecordConsumer/validate(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/example/data/Group/append(java.lang.String,int)#org/apache/parquet/example/data/Group/add(java.lang.String,int)
org/apache/parquet/example/data/Group/append(java.lang.String,org.apache.parquet.example.data.simple.NanoTime)#org/apache/parquet/example/data/Group/add(java.lang.String,org.apache.parquet.example.data.simple.NanoTime)
org/apache/parquet/example/data/Group/getGroup(java.lang.String,int)#org/apache/parquet/example/data/GroupValueSource/getType()
org/apache/parquet/example/data/Group/getGroup(java.lang.String,int)#org/apache/parquet/example/data/Group/getGroup(int,int)
org/apache/parquet/example/data/Group/getGroup(java.lang.String,int)#org/apache/parquet/schema/GroupType/getFieldIndex(java.lang.String)
org/apache/parquet/example/data/Group/append(java.lang.String,double)#org/apache/parquet/example/data/Group/add(java.lang.String,double)
org/apache/parquet/example/data/Group/append(java.lang.String,org.apache.parquet.io.api.Binary)#org/apache/parquet/example/data/Group/add(java.lang.String,org.apache.parquet.io.api.Binary)
org/apache/parquet/example/data/Group/add(java.lang.String,long)#org/apache/parquet/example/data/Group/add(int,long)
org/apache/parquet/example/data/Group/add(java.lang.String,long)#org/apache/parquet/schema/GroupType/getFieldIndex(java.lang.String)
org/apache/parquet/example/data/Group/add(java.lang.String,long)#org/apache/parquet/example/data/GroupValueSource/getType()
org/apache/parquet/example/data/Group/append(java.lang.String,java.lang.String)#org/apache/parquet/io/api/Binary/fromString(java.lang.String)
org/apache/parquet/example/data/Group/append(java.lang.String,java.lang.String)#org/apache/parquet/example/data/Group/add(java.lang.String,org.apache.parquet.io.api.Binary)
org/apache/parquet/example/data/Group/add(java.lang.String,float)#org/apache/parquet/example/data/Group/add(int,float)
org/apache/parquet/example/data/Group/add(java.lang.String,float)#org/apache/parquet/schema/GroupType/getFieldIndex(java.lang.String)
org/apache/parquet/example/data/Group/add(java.lang.String,float)#org/apache/parquet/example/data/GroupValueSource/getType()
org/apache/parquet/example/data/Group/add(java.lang.String,double)#org/apache/parquet/example/data/Group/add(int,double)
org/apache/parquet/example/data/Group/add(java.lang.String,double)#org/apache/parquet/schema/GroupType/getFieldIndex(java.lang.String)
org/apache/parquet/example/data/Group/add(java.lang.String,double)#org/apache/parquet/example/data/GroupValueSource/getType()
org/apache/parquet/example/data/Group/append(java.lang.String,long)#org/apache/parquet/example/data/Group/add(java.lang.String,long)
org/apache/parquet/example/data/Group/append(java.lang.String,boolean)#org/apache/parquet/example/data/Group/add(java.lang.String,boolean)
org/apache/parquet/example/data/Group/addGroup(java.lang.String)#org/apache/parquet/example/data/Group/addGroup(int)
org/apache/parquet/example/data/Group/addGroup(java.lang.String)#org/apache/parquet/schema/Type/getName()
org/apache/parquet/example/data/Group/addGroup(java.lang.String)#org/apache/parquet/schema/GroupType/getFieldIndex(java.lang.String)
org/apache/parquet/example/data/Group/addGroup(java.lang.String)#org/apache/parquet/example/data/GroupValueSource/getType()
org/apache/parquet/example/data/Group/add(java.lang.String,org.apache.parquet.io.api.Binary)#org/apache/parquet/schema/GroupType/getFieldIndex(java.lang.String)
org/apache/parquet/example/data/Group/add(java.lang.String,org.apache.parquet.io.api.Binary)#org/apache/parquet/example/data/Group/add(int,org.apache.parquet.io.api.Binary)
org/apache/parquet/example/data/Group/add(java.lang.String,org.apache.parquet.io.api.Binary)#org/apache/parquet/example/data/GroupValueSource/getType()
org/apache/parquet/example/data/Group/add(java.lang.String,org.apache.parquet.example.data.Group)#org/apache/parquet/schema/GroupType/getFieldIndex(java.lang.String)
org/apache/parquet/example/data/Group/add(java.lang.String,org.apache.parquet.example.data.Group)#org/apache/parquet/example/data/Group/add(int,org.apache.parquet.example.data.Group)
org/apache/parquet/example/data/Group/add(java.lang.String,org.apache.parquet.example.data.Group)#org/apache/parquet/example/data/GroupValueSource/getType()
org/apache/parquet/example/data/Group/add(java.lang.String,int)#org/apache/parquet/schema/GroupType/getFieldIndex(java.lang.String)
org/apache/parquet/example/data/Group/add(java.lang.String,int)#org/apache/parquet/example/data/Group/add(int,int)
org/apache/parquet/example/data/Group/add(java.lang.String,int)#org/apache/parquet/example/data/GroupValueSource/getType()
org/apache/parquet/example/data/Group/add(java.lang.String,org.apache.parquet.example.data.simple.NanoTime)#org/apache/parquet/schema/GroupType/getFieldIndex(java.lang.String)
org/apache/parquet/example/data/Group/add(java.lang.String,org.apache.parquet.example.data.simple.NanoTime)#org/apache/parquet/example/data/GroupValueSource/getType()
org/apache/parquet/example/data/Group/add(java.lang.String,org.apache.parquet.example.data.simple.NanoTime)#org/apache/parquet/example/data/Group/add(int,org.apache.parquet.example.data.simple.NanoTime)
org/apache/parquet/example/data/Group/add(java.lang.String,java.lang.String)#org/apache/parquet/schema/GroupType/getFieldIndex(java.lang.String)
org/apache/parquet/example/data/Group/add(java.lang.String,java.lang.String)#org/apache/parquet/example/data/GroupValueSource/getType()
org/apache/parquet/example/data/Group/add(java.lang.String,java.lang.String)#org/apache/parquet/example/data/Group/add(int,java.lang.String)
org/apache/parquet/example/data/Group/add(java.lang.String,boolean)#org/apache/parquet/schema/GroupType/getFieldIndex(java.lang.String)
org/apache/parquet/example/data/Group/add(java.lang.String,boolean)#org/apache/parquet/example/data/GroupValueSource/getType()
org/apache/parquet/example/data/Group/add(java.lang.String,boolean)#org/apache/parquet/example/data/Group/add(int,boolean)
org/apache/parquet/example/data/Group/append(java.lang.String,float)#org/apache/parquet/example/data/Group/add(java.lang.String,float)
org/apache/parquet/column/values/bitpacking/TestBitPackingColumn/testOne_0()#org/apache/parquet/column/values/bitpacking/TestBitPackingColumn/validateEncodeDecode(int,int[],java.lang.String)
org/apache/parquet/column/values/bitpacking/TestBitPackingColumn/testOne_1()#org/apache/parquet/column/values/bitpacking/TestBitPackingColumn/validateEncodeDecode(int,int[],java.lang.String)
org/apache/parquet/column/values/bitpacking/TestBitPackingColumn/testThree()#org/apache/parquet/column/values/bitpacking/TestBitPackingColumn/validateEncodeDecode(int,int[],java.lang.String)
org/apache/parquet/column/values/bitpacking/TestBitPackingColumn/testOne_9_1s()#org/apache/parquet/column/values/bitpacking/TestBitPackingColumn/validateEncodeDecode(int,int[],java.lang.String)
org/apache/parquet/column/values/bitpacking/TestBitPackingColumn/testOne_1_1()#org/apache/parquet/column/values/bitpacking/TestBitPackingColumn/validateEncodeDecode(int,int[],java.lang.String)
org/apache/parquet/column/values/bitpacking/TestBitPackingColumn/validateEncodeDecode(int,int[],java.lang.String)#java/lang/Enum/toString()
org/apache/parquet/column/values/bitpacking/TestBitPackingColumn/validateEncodeDecode(int,int[],java.lang.String)#org/apache/parquet/column/values/ValuesWriter/writeInteger(int)
org/apache/parquet/column/values/bitpacking/TestBitPackingColumn/validateEncodeDecode(int,int[],java.lang.String)#org/apache/parquet/column/values/ValuesReader/initFromPage(int,java.nio.ByteBuffer,int)
org/apache/parquet/column/values/bitpacking/TestBitPackingColumn/validateEncodeDecode(int,int[],java.lang.String)#org/apache/parquet/column/values/bitpacking/TestBitPacking/toString(byte[])
org/apache/parquet/column/values/bitpacking/TestBitPackingColumn/validateEncodeDecode(int,int[],java.lang.String)#org/apache/parquet/column/values/bitpacking/TestBitPackingColumn/PACKING_TYPE/getWriter(int)
org/apache/parquet/column/values/bitpacking/TestBitPackingColumn/validateEncodeDecode(int,int[],java.lang.String)#org/apache/parquet/bytes/BytesInput/toByteArray()
org/apache/parquet/column/values/bitpacking/TestBitPackingColumn/validateEncodeDecode(int,int[],java.lang.String)#java/nio/ByteBuffer/wrap(byte[])
org/apache/parquet/column/values/bitpacking/TestBitPackingColumn/validateEncodeDecode(int,int[],java.lang.String)#org/apache/parquet/column/values/bitpacking/TestBitPacking/toString(int[])
org/apache/parquet/column/values/bitpacking/TestBitPackingColumn/validateEncodeDecode(int,int[],java.lang.String)#java/lang/Math/pow(double,double)
org/apache/parquet/column/values/bitpacking/TestBitPackingColumn/validateEncodeDecode(int,int[],java.lang.String)#org/apache/parquet/column/values/bitpacking/TestBitPackingColumn/PACKING_TYPE/values()
org/apache/parquet/column/values/bitpacking/TestBitPackingColumn/validateEncodeDecode(int,int[],java.lang.String)#org/apache/parquet/column/values/ValuesReader/readInteger()
org/apache/parquet/column/values/bitpacking/TestBitPackingColumn/validateEncodeDecode(int,int[],java.lang.String)#org/apache/parquet/column/values/bitpacking/TestBitPackingColumn/PACKING_TYPE/getReader(int)
org/apache/parquet/column/values/bitpacking/TestBitPackingColumn/validateEncodeDecode(int,int[],java.lang.String)#org/apache/parquet/column/values/ValuesWriter/getBytes()
org/apache/parquet/column/values/bitpacking/TestBitPackingColumn/testTwo()#org/apache/parquet/column/values/bitpacking/TestBitPackingColumn/validateEncodeDecode(int,int[],java.lang.String)
org/apache/parquet/column/values/bitpacking/TestBitPackingColumn/testSeven()#org/apache/parquet/column/values/bitpacking/TestBitPackingColumn/validateEncodeDecode(int,int[],java.lang.String)
org/apache/parquet/column/values/bitpacking/TestBitPackingColumn/testFive()#org/apache/parquet/column/values/bitpacking/TestBitPackingColumn/validateEncodeDecode(int,int[],java.lang.String)
org/apache/parquet/column/values/bitpacking/TestBitPackingColumn/testOne_9_0s()#org/apache/parquet/column/values/bitpacking/TestBitPackingColumn/validateEncodeDecode(int,int[],java.lang.String)
org/apache/parquet/column/values/bitpacking/TestBitPackingColumn/testSix()#org/apache/parquet/column/values/bitpacking/TestBitPackingColumn/validateEncodeDecode(int,int[],java.lang.String)
org/apache/parquet/column/values/bitpacking/TestBitPackingColumn/testOne()#org/apache/parquet/column/values/bitpacking/TestBitPackingColumn/validateEncodeDecode(int,int[],java.lang.String)
org/apache/parquet/column/values/bitpacking/TestBitPackingColumn/testOne_9_0s_1_1()#org/apache/parquet/column/values/bitpacking/TestBitPackingColumn/validateEncodeDecode(int,int[],java.lang.String)
org/apache/parquet/column/values/bitpacking/TestBitPackingColumn/testFour()#org/apache/parquet/column/values/bitpacking/TestBitPackingColumn/validateEncodeDecode(int,int[],java.lang.String)
org/apache/parquet/column/values/bitpacking/TestBitPackingColumn/testZero()#org/apache/parquet/column/values/bitpacking/TestBitPackingColumn/validateEncodeDecode(int,int[],java.lang.String)
org/apache/parquet/column/values/bitpacking/TestBitPackingColumn/testOne_0_0()#org/apache/parquet/column/values/bitpacking/TestBitPackingColumn/validateEncodeDecode(int,int[],java.lang.String)
org/apache/parquet/column/values/bitpacking/TestBitPackingColumn/testOne_7_0s_1_1()#org/apache/parquet/column/values/bitpacking/TestBitPackingColumn/validateEncodeDecode(int,int[],java.lang.String)
org/apache/parquet/column/values/bitpacking/EightBitPackingWriter/write(int)#java/io/OutputStream/write(int)
org/apache/parquet/hadoop/example/TestInputOutputFormat/MyReadSupport/init(org.apache.parquet.hadoop.api.InitContext)#org/apache/parquet/hadoop/api/DelegatingReadSupport/init(org.apache.parquet.hadoop.api.InitContext)
org/apache/parquet/hadoop/example/TestInputOutputFormat/MyReadSupport/init(org.apache.parquet.hadoop.api.InitContext)#java/util/Set/size()
org/apache/parquet/hadoop/example/TestInputOutputFormat/MyReadSupport/init(org.apache.parquet.hadoop.api.InitContext)#java/util/Map/get(java.lang.Object)
org/apache/parquet/hadoop/example/TestInputOutputFormat/MyReadSupport/init(org.apache.parquet.hadoop.api.InitContext)#org/apache/parquet/hadoop/api/InitContext/getKeyValueMetadata()
org/apache/parquet/proto/ProtoWriteSupportTest/testMessageWithExtensions()#org/apache/parquet/proto/ProtoWriteSupport/write(T)
org/apache/parquet/proto/ProtoWriteSupportTest/testMessageWithExtensions()#org/apache/parquet/proto/ProtoWriteSupportTest/createReadConsumerInstance(java.lang.Class,org.apache.parquet.io.api.RecordConsumer)
org/apache/parquet/proto/ProtoWriteSupportTest/testRepeatedInnerMessageMessage_message()#org/apache/parquet/proto/ProtoWriteSupport/write(T)
org/apache/parquet/proto/ProtoWriteSupportTest/testRepeatedInnerMessageMessage_message()#org/apache/parquet/io/api/Binary/fromConstantByteArray(byte[])
org/apache/parquet/proto/ProtoWriteSupportTest/testRepeatedInnerMessageMessage_message()#java/lang/String/getBytes()
org/apache/parquet/proto/ProtoWriteSupportTest/testRepeatedInnerMessageMessage_message()#org/apache/parquet/proto/ProtoWriteSupportTest/createReadConsumerInstance(java.lang.Class,org.apache.parquet.io.api.RecordConsumer)
org/apache/parquet/proto/ProtoWriteSupportTest/testRepeatedInnerMessageMessage_scalar()#org/apache/parquet/proto/ProtoWriteSupport/write(T)
org/apache/parquet/proto/ProtoWriteSupportTest/testRepeatedInnerMessageMessage_scalar()#org/apache/parquet/io/api/Binary/fromConstantByteArray(byte[])
org/apache/parquet/proto/ProtoWriteSupportTest/testRepeatedInnerMessageMessage_scalar()#java/lang/String/getBytes()
org/apache/parquet/proto/ProtoWriteSupportTest/testRepeatedInnerMessageMessage_scalar()#org/apache/parquet/proto/ProtoWriteSupportTest/createReadConsumerInstance(java.lang.Class,org.apache.parquet.io.api.RecordConsumer)
org/apache/parquet/proto/ProtoWriteSupportTest/createReadConsumerInstance(java.lang.Class,org.apache.parquet.io.api.RecordConsumer)#org/apache/parquet/proto/ProtoWriteSupport/ProtoWriteSupport(java.lang.Class)
org/apache/parquet/proto/ProtoWriteSupportTest/createReadConsumerInstance(java.lang.Class,org.apache.parquet.io.api.RecordConsumer)#org/apache/parquet/proto/ProtoWriteSupport/init(org.apache.parquet.hadoop.Configuration)
org/apache/parquet/proto/ProtoWriteSupportTest/createReadConsumerInstance(java.lang.Class,org.apache.parquet.io.api.RecordConsumer)#org/apache/parquet/proto/ProtoWriteSupport/prepareForWrite(org.apache.parquet.io.api.RecordConsumer)
org/apache/parquet/proto/ProtoWriteSupportTest/testOptionalInnerMessage()#org/apache/parquet/proto/ProtoWriteSupport/write(T)
org/apache/parquet/proto/ProtoWriteSupportTest/testOptionalInnerMessage()#org/apache/parquet/io/api/Binary/fromConstantByteArray(byte[])
org/apache/parquet/proto/ProtoWriteSupportTest/testOptionalInnerMessage()#java/lang/String/getBytes()
org/apache/parquet/proto/ProtoWriteSupportTest/testOptionalInnerMessage()#org/apache/parquet/proto/ProtoWriteSupportTest/createReadConsumerInstance(java.lang.Class,org.apache.parquet.io.api.RecordConsumer)
org/apache/parquet/proto/ProtoWriteSupportTest/testRepeatedIntMessage()#org/apache/parquet/proto/ProtoWriteSupport/write(T)
org/apache/parquet/proto/ProtoWriteSupportTest/testRepeatedIntMessage()#org/apache/parquet/proto/ProtoWriteSupportTest/createReadConsumerInstance(java.lang.Class,org.apache.parquet.io.api.RecordConsumer)
org/apache/parquet/proto/ProtoWriteSupportTest/testSimplestMessage()#org/apache/parquet/proto/ProtoWriteSupport/write(T)
org/apache/parquet/proto/ProtoWriteSupportTest/testSimplestMessage()#org/apache/parquet/io/api/Binary/fromString(java.lang.String)
org/apache/parquet/proto/ProtoWriteSupportTest/testSimplestMessage()#org/apache/parquet/proto/ProtoWriteSupportTest/createReadConsumerInstance(java.lang.Class,org.apache.parquet.io.api.RecordConsumer)
org/apache/parquet/pig/summary/Summary/Final/exec(org.apache.parquet.pig.Tuple)#org/apache/parquet/pig/summary/Summary/merge(org.apache.parquet.pig.Tuple)
org/apache/parquet/pig/summary/Summary/Final/exec(org.apache.parquet.pig.Tuple)#org/apache/parquet/pig/summary/SummaryData/toPrettyJSON(org.apache.parquet.pig.summary.SummaryData)
org/apache/parquet/column/EncodingStats/Builder/addDataEncoding(org.apache.parquet.column.Encoding)#org/apache/parquet/column/EncodingStats/Builder/addDataEncoding(org.apache.parquet.column.Encoding,int)
org/apache/parquet/column/EncodingStats/Builder/addDictEncoding(org.apache.parquet.column.Encoding,int)#java/util/Map/get(java.lang.Object)
org/apache/parquet/column/EncodingStats/Builder/addDictEncoding(org.apache.parquet.column.Encoding,int)#java/util/Map/put(K,V)
org/apache/parquet/column/EncodingStats/Builder/clear()#java/util/Map/clear()
org/apache/parquet/column/EncodingStats/Builder/build()#org/apache/parquet/column/EncodingStats/EncodingStats(java.util.Map,java.util.Map,boolean)
org/apache/parquet/column/EncodingStats/Builder/build()#java/util/Collections/unmodifiableMap(java.util.Map)
org/apache/parquet/column/EncodingStats/Builder/build()#java/util/LinkedHashMap/LinkedHashMap(java.util.Map)
org/apache/parquet/column/EncodingStats/Builder/addDataEncodings(java.util.Collection)#org/apache/parquet/column/EncodingStats/Builder/addDataEncoding(org.apache.parquet.column.Encoding)
org/apache/parquet/column/EncodingStats/Builder/addDataEncoding(org.apache.parquet.column.Encoding,int)#java/util/Map/get(java.lang.Object)
org/apache/parquet/column/EncodingStats/Builder/addDataEncoding(org.apache.parquet.column.Encoding,int)#java/util/Map/put(K,V)
org/apache/parquet/column/EncodingStats/Builder/addDictEncoding(org.apache.parquet.column.Encoding)#org/apache/parquet/column/EncodingStats/Builder/addDictEncoding(org.apache.parquet.column.Encoding,int)
org/apache/parquet/filter2/predicate/PrimitiveToBoxedClass/get(java.lang.Class)#java/util/Map/get(java.lang.Object)
org/apache/parquet/filter2/predicate/PrimitiveToBoxedClass/get(java.lang.Class)#java/lang/Class/isPrimitive()
org/apache/parquet/filter2/predicate/PrimitiveToBoxedClass/get(java.lang.Class)#org/apache/parquet/Preconditions/checkArgument(boolean,java.lang.String)
org/apache/parquet/thrift/struct/ThriftType/DoubleType/accept(org.apache.parquet.thrift.struct.ThriftType.StateVisitor,S)#org/apache/parquet/thrift/struct/ThriftType/StateVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.DoubleType,S)
org/apache/parquet/thrift/struct/ThriftType/DoubleType/accept(org.apache.parquet.thrift.struct.ThriftType.TypeVisitor)#org/apache/parquet/thrift/struct/ThriftType/TypeVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.DoubleType)
org/apache/parquet/thrift/struct/ThriftType/StringType/accept(org.apache.parquet.thrift.struct.ThriftType.StateVisitor,S)#org/apache/parquet/thrift/struct/ThriftType/StateVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.StringType,S)
org/apache/parquet/thrift/struct/ThriftType/StringType/accept(org.apache.parquet.thrift.struct.ThriftType.TypeVisitor)#org/apache/parquet/thrift/struct/ThriftType/TypeVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.StringType)
org/apache/parquet/column/impl/TestColumnReaderImpl/ValidatingConverter/addBinary(org.apache.parquet.io.api.Binary)#org/apache/parquet/io/api/Binary/toStringUsingUTF8()
org/apache/parquet/io/api/Binary/ByteBufferBackedBinary/toStringUsingUTF8()#java/nio/charset/Charset/decode(java.nio.ByteBuffer)
org/apache/parquet/io/api/Binary/ByteBufferBackedBinary/toStringUsingUTF8()#java/nio/Buffer/limit(int)
org/apache/parquet/io/api/Binary/ByteBufferBackedBinary/toStringUsingUTF8()#java/nio/ByteBuffer/arrayOffset()
org/apache/parquet/io/api/Binary/ByteBufferBackedBinary/toStringUsingUTF8()#java/nio/Buffer/position()
org/apache/parquet/io/api/Binary/ByteBufferBackedBinary/toStringUsingUTF8()#java/nio/Buffer/position(int)
org/apache/parquet/io/api/Binary/ByteBufferBackedBinary/toStringUsingUTF8()#java/nio/Buffer/limit()
org/apache/parquet/io/api/Binary/ByteBufferBackedBinary/toStringUsingUTF8()#java/nio/ByteBuffer/array()
org/apache/parquet/io/api/Binary/ByteBufferBackedBinary/toStringUsingUTF8()#java/nio/CharBuffer/toString()
org/apache/parquet/io/api/Binary/ByteBufferBackedBinary/toStringUsingUTF8()#java/nio/ByteBuffer/hasArray()
org/apache/parquet/io/api/Binary/ByteBufferBackedBinary/toStringUsingUTF8()#java/lang/String/String(byte[],int,int,java.lang.String)
org/apache/parquet/io/api/Binary/ByteBufferBackedBinary/toStringUsingUTF8()#org/apache/parquet/io/ParquetDecodingException/ParquetDecodingException(java.lang.String)
org/apache/parquet/io/api/Binary/ByteBufferBackedBinary/equals(byte[],int,int)#org/apache/parquet/io/api/Binary/equals(byte[],int,int,java.nio.ByteBuffer,int,int)
org/apache/parquet/io/api/Binary/ByteBufferBackedBinary/equals(byte[],int,int)#java/nio/ByteBuffer/arrayOffset()
org/apache/parquet/io/api/Binary/ByteBufferBackedBinary/equals(byte[],int,int)#java/nio/ByteBuffer/array()
org/apache/parquet/io/api/Binary/ByteBufferBackedBinary/equals(byte[],int,int)#java/nio/ByteBuffer/hasArray()
org/apache/parquet/io/api/Binary/ByteBufferBackedBinary/equals(byte[],int,int)#org/apache/parquet/io/api/Binary/equals(byte[],int,int,byte[],int,int)
org/apache/parquet/io/api/Binary/ByteBufferBackedBinary/readObject(java.io.ObjectInputStream)#java/io/ObjectInputStream/readFully(byte[],int,int)
org/apache/parquet/io/api/Binary/ByteBufferBackedBinary/readObject(java.io.ObjectInputStream)#java/io/ObjectInputStream/readInt()
org/apache/parquet/io/api/Binary/ByteBufferBackedBinary/readObject(java.io.ObjectInputStream)#java/nio/ByteBuffer/wrap(byte[])
org/apache/parquet/io/api/Binary/ByteBufferBackedBinary/equals(org.apache.parquet.io.api.Binary)#java/nio/ByteBuffer/arrayOffset()
org/apache/parquet/io/api/Binary/ByteBufferBackedBinary/equals(org.apache.parquet.io.api.Binary)#org/apache/parquet/io/api/Binary/equals(byte[],int,int)
org/apache/parquet/io/api/Binary/ByteBufferBackedBinary/equals(org.apache.parquet.io.api.Binary)#java/nio/ByteBuffer/hasArray()
org/apache/parquet/io/api/Binary/ByteBufferBackedBinary/equals(org.apache.parquet.io.api.Binary)#java/nio/ByteBuffer/array()
org/apache/parquet/io/api/Binary/ByteBufferBackedBinary/equals(org.apache.parquet.io.api.Binary)#org/apache/parquet/io/api/Binary/equals(java.nio.ByteBuffer,int,int)
org/apache/parquet/io/api/Binary/ByteBufferBackedBinary/compareTo(byte[],int,int)#java/nio/ByteBuffer/arrayOffset()
org/apache/parquet/io/api/Binary/ByteBufferBackedBinary/compareTo(byte[],int,int)#org/apache/parquet/io/api/Binary/compareTwoByteArrays(byte[],int,int,byte[],int,int)
org/apache/parquet/io/api/Binary/ByteBufferBackedBinary/compareTo(byte[],int,int)#java/nio/ByteBuffer/array()
org/apache/parquet/io/api/Binary/ByteBufferBackedBinary/compareTo(byte[],int,int)#java/nio/ByteBuffer/hasArray()
org/apache/parquet/io/api/Binary/ByteBufferBackedBinary/compareTo(byte[],int,int)#org/apache/parquet/io/api/Binary/compareByteBufferToByteArray(java.nio.ByteBuffer,int,int,byte[],int,int)
org/apache/parquet/io/api/Binary/ByteBufferBackedBinary/getBytes()#java/nio/Buffer/limit(int)
org/apache/parquet/io/api/Binary/ByteBufferBackedBinary/getBytes()#java/nio/ByteBuffer/get(byte[])
org/apache/parquet/io/api/Binary/ByteBufferBackedBinary/getBytes()#java/nio/Buffer/position()
org/apache/parquet/io/api/Binary/ByteBufferBackedBinary/getBytes()#java/nio/Buffer/position(int)
org/apache/parquet/io/api/Binary/ByteBufferBackedBinary/getBytes()#java/nio/Buffer/limit()
org/apache/parquet/io/api/Binary/ByteBufferBackedBinary/readObjectNoData()#java/nio/ByteBuffer/wrap(byte[])
org/apache/parquet/io/api/Binary/ByteBufferBackedBinary/toByteBuffer()#java/nio/Buffer/limit(int)
org/apache/parquet/io/api/Binary/ByteBufferBackedBinary/toByteBuffer()#java/nio/Buffer/position(int)
org/apache/parquet/io/api/Binary/ByteBufferBackedBinary/toByteBuffer()#java/nio/ByteBuffer/slice()
org/apache/parquet/io/api/Binary/ByteBufferBackedBinary/slice(int,int)#org/apache/parquet/io/api/Binary/fromConstantByteArray(byte[],int,int)
org/apache/parquet/io/api/Binary/ByteBufferBackedBinary/slice(int,int)#org/apache/parquet/io/api/Binary/ByteBufferBackedBinary/getBytesUnsafe()
org/apache/parquet/io/api/Binary/ByteBufferBackedBinary/compareTo(org.apache.parquet.io.api.Binary)#java/nio/ByteBuffer/array()
org/apache/parquet/io/api/Binary/ByteBufferBackedBinary/compareTo(org.apache.parquet.io.api.Binary)#java/nio/ByteBuffer/hasArray()
org/apache/parquet/io/api/Binary/ByteBufferBackedBinary/compareTo(org.apache.parquet.io.api.Binary)#org/apache/parquet/io/api/Binary/compareTo(java.nio.ByteBuffer,int,int)
org/apache/parquet/io/api/Binary/ByteBufferBackedBinary/compareTo(org.apache.parquet.io.api.Binary)#java/nio/ByteBuffer/arrayOffset()
org/apache/parquet/io/api/Binary/ByteBufferBackedBinary/compareTo(org.apache.parquet.io.api.Binary)#org/apache/parquet/io/api/Binary/compareTo(byte[],int,int)
org/apache/parquet/io/api/Binary/ByteBufferBackedBinary/writeTo(java.io.DataOutput)#java/io/DataOutput/write(byte[])
org/apache/parquet/io/api/Binary/ByteBufferBackedBinary/writeTo(java.io.DataOutput)#org/apache/parquet/io/api/Binary/ByteBufferBackedBinary/getBytesUnsafe()
org/apache/parquet/io/api/Binary/ByteBufferBackedBinary/getBytesUnsafe()#org/apache/parquet/io/api/Binary/ByteBufferBackedBinary/getBytes()
org/apache/parquet/io/api/Binary/ByteBufferBackedBinary/hashCode()#org/apache/parquet/io/api/Binary/hashCode(byte[],int,int)
org/apache/parquet/io/api/Binary/ByteBufferBackedBinary/hashCode()#java/nio/ByteBuffer/arrayOffset()
org/apache/parquet/io/api/Binary/ByteBufferBackedBinary/hashCode()#java/nio/ByteBuffer/array()
org/apache/parquet/io/api/Binary/ByteBufferBackedBinary/hashCode()#java/nio/ByteBuffer/hasArray()
org/apache/parquet/io/api/Binary/ByteBufferBackedBinary/hashCode()#org/apache/parquet/io/api/Binary/hashCode(java.nio.ByteBuffer,int,int)
org/apache/parquet/io/api/Binary/ByteBufferBackedBinary/compareTo(java.nio.ByteBuffer,int,int)#org/apache/parquet/io/api/Binary/compareTwoByteBuffers(java.nio.ByteBuffer,int,int,java.nio.ByteBuffer,int,int)
org/apache/parquet/io/api/Binary/ByteBufferBackedBinary/writeTo(java.io.OutputStream)#java/nio/ByteBuffer/arrayOffset()
org/apache/parquet/io/api/Binary/ByteBufferBackedBinary/writeTo(java.io.OutputStream)#org/apache/parquet/io/api/Binary/ByteBufferBackedBinary/getBytesUnsafe()
org/apache/parquet/io/api/Binary/ByteBufferBackedBinary/writeTo(java.io.OutputStream)#java/nio/ByteBuffer/array()
org/apache/parquet/io/api/Binary/ByteBufferBackedBinary/writeTo(java.io.OutputStream)#java/io/OutputStream/write(byte[],int,int)
org/apache/parquet/io/api/Binary/ByteBufferBackedBinary/writeTo(java.io.OutputStream)#java/nio/ByteBuffer/hasArray()
org/apache/parquet/io/api/Binary/ByteBufferBackedBinary/equals(java.nio.ByteBuffer,int,int)#org/apache/parquet/io/api/Binary/equals(java.nio.ByteBuffer,int,int,java.nio.ByteBuffer,int,int)
org/apache/parquet/io/api/Binary/ByteBufferBackedBinary/writeObject(java.io.ObjectOutputStream)#org/apache/parquet/io/api/Binary/ByteBufferBackedBinary/getBytesUnsafe()
org/apache/parquet/io/api/Binary/ByteBufferBackedBinary/writeObject(java.io.ObjectOutputStream)#java/io/ObjectOutputStream/writeInt(int)
org/apache/parquet/io/api/Binary/ByteBufferBackedBinary/writeObject(java.io.ObjectOutputStream)#java/io/ObjectOutputStream/write(byte[])
org/apache/parquet/avro/AvroTestUtil/read(org.apache.parquet.avro.GenericData,org.apache.parquet.pig.Schema,java.io.File)#org/apache/parquet/hadoop/ParquetReader/read()
org/apache/parquet/avro/AvroTestUtil/read(org.apache.parquet.avro.GenericData,org.apache.parquet.pig.Schema,java.io.File)#java/util/ArrayList/ArrayList()
org/apache/parquet/avro/AvroTestUtil/read(org.apache.parquet.avro.GenericData,org.apache.parquet.pig.Schema,java.io.File)#org/apache/parquet/avro/AvroReadSupport/setAvroReadSchema(org.apache.parquet.hadoop.Configuration,org.apache.parquet.pig.Schema)
org/apache/parquet/avro/AvroTestUtil/read(org.apache.parquet.avro.GenericData,org.apache.parquet.pig.Schema,java.io.File)#java/util/List/add(E)
org/apache/parquet/avro/AvroTestUtil/read(org.apache.parquet.avro.GenericData,org.apache.parquet.pig.Schema,java.io.File)#org/apache/parquet/avro/AvroReadSupport/setRequestedProjection(org.apache.parquet.hadoop.Configuration,org.apache.parquet.pig.Schema)
org/apache/parquet/avro/AvroTestUtil/read(org.apache.parquet.avro.GenericData,org.apache.parquet.pig.Schema,java.io.File)#java/io/File/toString()
org/apache/parquet/avro/AvroTestUtil/read(org.apache.parquet.avro.GenericData,org.apache.parquet.pig.Schema,java.io.File)#org/apache/parquet/hadoop/ParquetReader/close()
org/apache/parquet/avro/AvroTestUtil/read(org.apache.parquet.avro.GenericData,org.apache.parquet.pig.Schema,java.io.File)#org/apache/parquet/avro/AvroParquetReader/builder(org.apache.parquet.hadoop.Path)
org/apache/parquet/avro/AvroTestUtil/record(java.lang.String,Schema.Field[])#java/util/Arrays/asList(T[])
org/apache/parquet/avro/AvroTestUtil/field(java.lang.String,org.apache.parquet.pig.Schema)#java/lang/Object/Object()
org/apache/parquet/avro/AvroTestUtil/optionalField(java.lang.String,org.apache.parquet.pig.Schema)#org/apache/parquet/avro/AvroTestUtil/optional(org.apache.parquet.pig.Schema)
org/apache/parquet/avro/AvroTestUtil/optionalField(java.lang.String,org.apache.parquet.pig.Schema)#java/lang/Object/Object()
org/apache/parquet/avro/AvroTestUtil/write(org.apache.parquet.statistics.TemporaryFolder,org.apache.parquet.avro.GenericData,org.apache.parquet.pig.Schema,D[])#org/apache/parquet/hadoop/ParquetWriter/write(T)
org/apache/parquet/avro/AvroTestUtil/write(org.apache.parquet.statistics.TemporaryFolder,org.apache.parquet.avro.GenericData,org.apache.parquet.pig.Schema,D[])#java/io/File/delete()
org/apache/parquet/avro/AvroTestUtil/write(org.apache.parquet.statistics.TemporaryFolder,org.apache.parquet.avro.GenericData,org.apache.parquet.pig.Schema,D[])#java/io/File/toString()
org/apache/parquet/avro/AvroTestUtil/write(org.apache.parquet.statistics.TemporaryFolder,org.apache.parquet.avro.GenericData,org.apache.parquet.pig.Schema,D[])#org/apache/parquet/avro/AvroParquetWriter/builder(org.apache.parquet.hadoop.Path)
org/apache/parquet/avro/AvroTestUtil/write(org.apache.parquet.statistics.TemporaryFolder,org.apache.parquet.avro.GenericData,org.apache.parquet.pig.Schema,D[])#org/apache/parquet/hadoop/ParquetWriter/close()
org/apache/parquet/avro/AvroTestUtil/instance(org.apache.parquet.pig.Schema,java.lang.Object[])#java/lang/Object/toString()
org/apache/parquet/avro/AvroTestUtil/instance(org.apache.parquet.pig.Schema,java.lang.Object[])#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/apache/parquet/avro/AvroTestUtil/instance(org.apache.parquet.pig.Schema,java.lang.Object[])#java/lang/Object/Object()
org/apache/parquet/filter/OrRecordFilter/or(org.apache.parquet.filter.UnboundRecordFilter,org.apache.parquet.filter.UnboundRecordFilter)#org/apache/parquet/filter/OrRecordFilter/or(org/apache/parquet/filter/UnboundRecordFilter,org/apache/parquet/filter/UnboundRecordFilter)/$anonymous1/()
org/apache/parquet/filter/OrRecordFilter/or(org.apache.parquet.filter.UnboundRecordFilter,org.apache.parquet.filter.UnboundRecordFilter)#org/apache/parquet/Preconditions/checkNotNull(T,java.lang.String)
org/apache/parquet/filter/OrRecordFilter/isMatch()#org/apache/parquet/filter/RecordFilter/isMatch()
org/apache/parquet/tools/json/JsonRecordFormatter/JsonGroupFormatter/buildWriters(org.apache.parquet.schema.GroupType)#org/apache/parquet/tools/json/JsonRecordFormatter/JsonPrimitiveWriter/JsonPrimitiveWriter(org.apache.parquet.schema.Type)
org/apache/parquet/tools/json/JsonRecordFormatter/JsonGroupFormatter/buildWriters(org.apache.parquet.schema.GroupType)#org/apache/parquet/schema/Type/getName()
org/apache/parquet/tools/json/JsonRecordFormatter/JsonGroupFormatter/buildWriters(org.apache.parquet.schema.GroupType)#org/apache/parquet/tools/json/JsonRecordFormatter/JsonGroupFormatter/JsonGroupFormatter(org.apache.parquet.schema.GroupType)
org/apache/parquet/tools/json/JsonRecordFormatter/JsonGroupFormatter/buildWriters(org.apache.parquet.schema.GroupType)#org/apache/parquet/schema/GroupType/getFields()
org/apache/parquet/tools/json/JsonRecordFormatter/JsonGroupFormatter/buildWriters(org.apache.parquet.schema.GroupType)#java/util/Map/put(K,V)
org/apache/parquet/tools/json/JsonRecordFormatter/JsonGroupFormatter/buildWriters(org.apache.parquet.schema.GroupType)#java/util/LinkedHashMap/LinkedHashMap()
org/apache/parquet/tools/json/JsonRecordFormatter/JsonGroupFormatter/buildWriters(org.apache.parquet.schema.GroupType)#org/apache/parquet/schema/Type/isPrimitive()
org/apache/parquet/tools/json/JsonRecordFormatter/JsonGroupFormatter/formatRecord(org.apache.parquet.tools.read.SimpleRecord)#org/apache/parquet/tools/json/JsonRecordFormatter/JsonGroupFormatter/add(org.apache.parquet.tools.read.SimpleRecord)
org/apache/parquet/tools/json/JsonRecordFormatter/JsonGroupFormatter/collateEntries(org.apache.parquet.tools.read.SimpleRecord)#java/util/ArrayList/ArrayList()
org/apache/parquet/tools/json/JsonRecordFormatter/JsonGroupFormatter/collateEntries(org.apache.parquet.tools.read.SimpleRecord)#java/util/Map/get(java.lang.Object)
org/apache/parquet/tools/json/JsonRecordFormatter/JsonGroupFormatter/collateEntries(org.apache.parquet.tools.read.SimpleRecord)#java/util/Map/containsKey(java.lang.Object)
org/apache/parquet/tools/json/JsonRecordFormatter/JsonGroupFormatter/collateEntries(org.apache.parquet.tools.read.SimpleRecord)#java/util/List/add(E)
org/apache/parquet/tools/json/JsonRecordFormatter/JsonGroupFormatter/collateEntries(org.apache.parquet.tools.read.SimpleRecord)#org/apache/parquet/tools/read/SimpleRecord/NameValue/getValue()
org/apache/parquet/tools/json/JsonRecordFormatter/JsonGroupFormatter/collateEntries(org.apache.parquet.tools.read.SimpleRecord)#java/util/Map/put(K,V)
org/apache/parquet/tools/json/JsonRecordFormatter/JsonGroupFormatter/collateEntries(org.apache.parquet.tools.read.SimpleRecord)#java/util/LinkedHashMap/LinkedHashMap()
org/apache/parquet/tools/json/JsonRecordFormatter/JsonGroupFormatter/collateEntries(org.apache.parquet.tools.read.SimpleRecord)#org/apache/parquet/tools/read/SimpleRecord/getValues()
org/apache/parquet/tools/json/JsonRecordFormatter/JsonGroupFormatter/collateEntries(org.apache.parquet.tools.read.SimpleRecord)#org/apache/parquet/tools/read/SimpleRecord/NameValue/getName()
org/apache/parquet/tools/json/JsonRecordFormatter/JsonGroupFormatter/formatEntries(java.util.Map)#java/util/Map/Entry/getValue()
org/apache/parquet/tools/json/JsonRecordFormatter/JsonGroupFormatter/formatEntries(java.util.Map)#java/util/Map/get(java.lang.Object)
org/apache/parquet/tools/json/JsonRecordFormatter/JsonGroupFormatter/formatEntries(java.util.Map)#java/util/Map/Entry/getKey()
org/apache/parquet/tools/json/JsonRecordFormatter/JsonGroupFormatter/formatEntries(java.util.Map)#java/util/Map/put(K,V)
org/apache/parquet/tools/json/JsonRecordFormatter/JsonGroupFormatter/formatEntries(java.util.Map)#java/util/LinkedHashMap/LinkedHashMap()
org/apache/parquet/tools/json/JsonRecordFormatter/JsonGroupFormatter/formatEntries(java.util.Map)#java/util/Map/entrySet()
org/apache/parquet/tools/json/JsonRecordFormatter/JsonGroupFormatter/formatEntries(java.util.Map)#org/apache/parquet/tools/json/JsonRecordFormatter/formatResults(java.util.List)
org/apache/parquet/tools/json/JsonRecordFormatter/JsonGroupFormatter/formatResults(java.util.List)#java/util/ArrayList/ArrayList()
org/apache/parquet/tools/json/JsonRecordFormatter/JsonGroupFormatter/formatResults(java.util.List)#org/apache/parquet/tools/json/JsonRecordFormatter/JsonGroupFormatter/add(org.apache.parquet.tools.read.SimpleRecord)
org/apache/parquet/tools/json/JsonRecordFormatter/JsonGroupFormatter/formatResults(java.util.List)#org/apache/parquet/schema/Type/getRepetition()
org/apache/parquet/tools/json/JsonRecordFormatter/JsonGroupFormatter/formatResults(java.util.List)#java/util/List/add(E)
org/apache/parquet/tools/json/JsonRecordFormatter/JsonGroupFormatter/formatResults(java.util.List)#java/util/List/get(int)
org/apache/parquet/tools/json/JsonRecordFormatter/JsonGroupFormatter/add(org.apache.parquet.tools.read.SimpleRecord)#org/apache/parquet/tools/json/JsonRecordFormatter/JsonGroupFormatter/collateEntries(org.apache.parquet.tools.read.SimpleRecord)
org/apache/parquet/tools/json/JsonRecordFormatter/JsonGroupFormatter/add(org.apache.parquet.tools.read.SimpleRecord)#org/apache/parquet/tools/json/JsonRecordFormatter/JsonGroupFormatter/formatEntries(java.util.Map)
org/apache/parquet/pig/convert/TupleConverter/FieldLongConverter/addInt(int)#org/apache/parquet/pig/convert/ParentValueContainer/add(java.lang.Object)
org/apache/parquet/pig/convert/TupleConverter/FieldLongConverter/addBinary(org.apache.parquet.io.api.Binary)#org/apache/parquet/io/api/Binary/toStringUsingUTF8()
org/apache/parquet/pig/convert/TupleConverter/FieldLongConverter/addBinary(org.apache.parquet.io.api.Binary)#org/apache/parquet/pig/convert/ParentValueContainer/add(java.lang.Object)
org/apache/parquet/pig/convert/TupleConverter/FieldLongConverter/addBinary(org.apache.parquet.io.api.Binary)#java/lang/Long/parseLong(java.lang.String)
org/apache/parquet/pig/convert/TupleConverter/FieldLongConverter/addFloat(float)#org/apache/parquet/pig/convert/ParentValueContainer/add(java.lang.Object)
org/apache/parquet/pig/convert/TupleConverter/FieldLongConverter/addLong(long)#org/apache/parquet/pig/convert/ParentValueContainer/add(java.lang.Object)
org/apache/parquet/pig/convert/TupleConverter/FieldLongConverter/addDouble(double)#org/apache/parquet/pig/convert/ParentValueContainer/add(java.lang.Object)
org/apache/parquet/pig/convert/TupleConverter/FieldLongConverter/addBoolean(boolean)#org/apache/parquet/pig/convert/ParentValueContainer/add(java.lang.Object)
org/apache/parquet/proto/ProtoMessageConverter/ProtoIntConverter/addInt(int)#org/apache/parquet/proto/ProtoMessageConverter/ParentValueContainer/add(java.lang.Object)
org/apache/parquet/scrooge/ScroogeBinaryTest/testScroogeBinaryEncoding()#java/util/UUID/randomUUID()
org/apache/parquet/scrooge/ScroogeBinaryTest/testScroogeBinaryEncoding()#org/apache/parquet/hadoop/ParquetWriter/ParquetWriter(org.apache.parquet.hadoop.Path,org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.api.WriteSupport)
org/apache/parquet/scrooge/ScroogeBinaryTest/testScroogeBinaryEncoding()#org/apache/parquet/thrift/ThriftParquetReader/build(org.apache.parquet.hadoop.Path)
org/apache/parquet/scrooge/ScroogeBinaryTest/testScroogeBinaryEncoding()#java/nio/ByteBuffer/wrap(byte[])
org/apache/parquet/scrooge/ScroogeBinaryTest/testScroogeBinaryEncoding()#java/io/File/deleteOnExit()
org/apache/parquet/scrooge/ScroogeBinaryTest/testScroogeBinaryEncoding()#java/util/UUID/toString()
org/apache/parquet/scrooge/ScroogeBinaryTest/testScroogeBinaryEncoding()#org/apache/parquet/scrooge/ScroogeWriteSupport/ScroogeWriteSupport(java.lang.Class)
org/apache/parquet/scrooge/ScroogeBinaryTest/testScroogeBinaryEncoding()#java/io/File/delete()
org/apache/parquet/scrooge/ScroogeBinaryTest/testScroogeBinaryEncoding()#java/io/File/getPath()
org/apache/parquet/scrooge/ScroogeBinaryTest/testScroogeBinaryDecoding()#org/apache/parquet/hadoop/ParquetReader/builder(org.apache.parquet.hadoop.api.ReadSupport,org.apache.parquet.hadoop.Path)
org/apache/parquet/scrooge/ScroogeBinaryTest/testScroogeBinaryDecoding()#java/util/UUID/randomUUID()
org/apache/parquet/scrooge/ScroogeBinaryTest/testScroogeBinaryDecoding()#org/apache/parquet/scrooge/ScroogeReadSupport/ScroogeReadSupport()
org/apache/parquet/scrooge/ScroogeBinaryTest/testScroogeBinaryDecoding()#org/apache/parquet/hadoop/ParquetWriter/ParquetWriter(org.apache.parquet.hadoop.Path,org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.api.WriteSupport)
org/apache/parquet/scrooge/ScroogeBinaryTest/testScroogeBinaryDecoding()#java/lang/Class/getName()
org/apache/parquet/scrooge/ScroogeBinaryTest/testScroogeBinaryDecoding()#java/nio/ByteBuffer/wrap(byte[])
org/apache/parquet/scrooge/ScroogeBinaryTest/testScroogeBinaryDecoding()#java/io/File/deleteOnExit()
org/apache/parquet/scrooge/ScroogeBinaryTest/testScroogeBinaryDecoding()#java/util/UUID/toString()
org/apache/parquet/scrooge/ScroogeBinaryTest/testScroogeBinaryDecoding()#org/apache/parquet/scrooge/ScroogeWriteSupport/ScroogeWriteSupport(java.lang.Class)
org/apache/parquet/scrooge/ScroogeBinaryTest/testScroogeBinaryDecoding()#java/io/File/delete()
org/apache/parquet/scrooge/ScroogeBinaryTest/testScroogeBinaryDecoding()#java/io/File/getPath()
org/apache/parquet/thrift/ThriftRecordConverter/FieldStringConverter/addBinary(org.apache.parquet.io.api.Binary)#org/apache/parquet/thrift/ThriftRecordConverter/FieldStringConverter/addBinary(org/apache/parquet/io/api/Binary)/$anonymous1/(java.lang.String)
org/apache/parquet/pig/summary/FieldSummaryData/setName(java.lang.String)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/apache/parquet/pig/summary/FieldSummaryData/setName(java.lang.String)#java/lang/String/equals(java.lang.Object)
org/apache/parquet/pig/summary/FieldSummaryData/add(org.apache.parquet.pig.Schema,java.lang.Object)#org/apache/parquet/pig/summary/NumberSummaryData/NumberSummaryData()
org/apache/parquet/pig/summary/FieldSummaryData/add(org.apache.parquet.pig.Schema,java.lang.Object)#org/apache/parquet/pig/summary/StringSummaryData/add(java.lang.String)
org/apache/parquet/pig/summary/FieldSummaryData/add(org.apache.parquet.pig.Schema,java.lang.Object)#org/apache/parquet/pig/summary/SummaryData/add(java.lang.Object)
org/apache/parquet/pig/summary/FieldSummaryData/add(org.apache.parquet.pig.Schema,java.lang.Object)#org/apache/parquet/pig/summary/TupleSummaryData/addTuple(org.apache.parquet.pig.Schema,org.apache.parquet.pig.Tuple)
org/apache/parquet/pig/summary/FieldSummaryData/add(org.apache.parquet.pig.Schema,java.lang.Object)#org/apache/parquet/pig/summary/NumberSummaryData/add(java.lang.Number)
org/apache/parquet/pig/summary/FieldSummaryData/add(org.apache.parquet.pig.Schema,java.lang.Object)#org/apache/parquet/pig/summary/MapSummaryData/add(org.apache.parquet.pig.Schema,java.util.Map)
org/apache/parquet/pig/summary/FieldSummaryData/add(org.apache.parquet.pig.Schema,java.lang.Object)#org/apache/parquet/pig/summary/BagSummaryData/add(org.apache.parquet.pig.Schema,org.apache.parquet.pig.DataBag)
org/apache/parquet/pig/summary/FieldSummaryData/add(org.apache.parquet.pig.Schema,java.lang.Object)#org/apache/parquet/pig/summary/MapSummaryData/MapSummaryData()
org/apache/parquet/pig/summary/FieldSummaryData/add(org.apache.parquet.pig.Schema,java.lang.Object)#org/apache/parquet/pig/summary/BagSummaryData/BagSummaryData()
org/apache/parquet/pig/summary/FieldSummaryData/add(org.apache.parquet.pig.Schema,java.lang.Object)#org/apache/parquet/pig/summary/TupleSummaryData/TupleSummaryData()
org/apache/parquet/pig/summary/FieldSummaryData/add(org.apache.parquet.pig.Schema,java.lang.Object)#org/apache/parquet/pig/summary/StringSummaryData/StringSummaryData()
org/apache/parquet/pig/summary/FieldSummaryData/merge(org.apache.parquet.pig.summary.SummaryData)#org/apache/parquet/pig/summary/SummaryData/merge(org.apache.parquet.pig.summary.SummaryData)
org/apache/parquet/pig/summary/FieldSummaryData/merge(org.apache.parquet.pig.summary.SummaryData)#org/apache/parquet/pig/summary/FieldSummaryData/setName(java.lang.String)
org/apache/parquet/pig/summary/FieldSummaryData/merge(org.apache.parquet.pig.summary.SummaryData)#org/apache/parquet/pig/summary/SummaryData/merge(T,T)
org/apache/parquet/cascading/convert/TupleRecordMaterializer/getCurrentRecord()#org/apache/parquet/cascading/convert/TupleConverter/getCurrentTuple()
org/apache/parquet/proto/ProtoRecordConverterTest/testRepeatedInt()#org/apache/parquet/proto/TestUtils/testData(T[])
org/apache/parquet/proto/ProtoRecordConverterTest/testAllTypes()#org/apache/parquet/proto/TestUtils/testData(T[])
org/apache/parquet/proto/ProtoRecordConverterTest/testRepeatedMessages()#org/apache/parquet/proto/TestUtils/testData(T[])
org/apache/parquet/proto/ProtoRecordConverterTest/testAllTypesMultiple()#org/apache/parquet/proto/TestUtils/testData(T[])
org/apache/parquet/proto/ProtoRecordConverterTest/testLargeProtobufferFieldId()#org/apache/parquet/proto/TestUtils/testData(T[])
org/apache/parquet/proto/ProtoRecordConverterTest/testSimple()#org/apache/parquet/proto/TestUtils/testData(T[])
org/apache/parquet/proto/ProtoRecordConverterTest/testDefaults()#org/apache/parquet/proto/TestUtils/testData(T[])
org/apache/parquet/statistics/RandomValues/StringGenerator/nextBinaryValue()#java/lang/String/getBytes()
org/apache/parquet/statistics/RandomValues/StringGenerator/nextBinaryValue()#org/apache/parquet/statistics/RandomValues/StringGenerator/nextValue()
org/apache/parquet/statistics/RandomValues/StringGenerator/nextBinaryValue()#org/apache/parquet/statistics/RandomValues/RandomBinaryBase/asReusedBinary(byte[])
org/apache/parquet/statistics/RandomValues/StringGenerator/nextValue()#org/apache/parquet/statistics/RandomValues/RandomValueGenerator/randomInt(int)
org/apache/parquet/statistics/RandomValues/StringGenerator/nextValue()#org/apache/parquet/statistics/RandomValues/RandomValueGenerator/randomString(int)
org/apache/parquet/cascading/ParquetValueScheme/setProjectionPushdown(org.apache.parquet.hadoop.JobConf)#org/apache/parquet/hadoop/thrift/ThriftReadSupport/setProjectionPushdown(org.apache.parquet.hadoop.JobConf,java.lang.String)
org/apache/parquet/cascading/ParquetValueScheme/setRecordClass(org.apache.parquet.hadoop.JobConf)#org/apache/parquet/hadoop/thrift/ParquetThriftInputFormat/setThriftClass(org.apache.parquet.hadoop.JobConf,java.lang.Class)
org/apache/parquet/cascading/ParquetValueScheme/source(org.apache.parquet.cascading.FlowProcess,org.apache.parquet.cascading.SourceCall)#org/apache/parquet/hadoop/mapred/Container/get()
org/apache/parquet/cascading/ParquetValueScheme/sink(org.apache.parquet.cascading.FlowProcess,org.apache.parquet.cascading.SinkCall)#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/apache/parquet/cascading/ParquetValueScheme/setStrictProjectionPushdown(org.apache.parquet.hadoop.JobConf)#org/apache/parquet/hadoop/thrift/ThriftReadSupport/setStrictFieldProjectionFilter(org.apache.parquet.hadoop.Configuration,java.lang.String)
org/apache/parquet/cascading/ParquetValueScheme/sourceConfInit(org.apache.parquet.cascading.FlowProcess,org.apache.parquet.cascading.Tap,org.apache.parquet.hadoop.JobConf)#org/apache/parquet/cascading/ParquetValueScheme/setRecordClass(org.apache.parquet.hadoop.JobConf)
org/apache/parquet/cascading/ParquetValueScheme/sourceConfInit(org.apache.parquet.cascading.FlowProcess,org.apache.parquet.cascading.Tap,org.apache.parquet.hadoop.JobConf)#org/apache/parquet/cascading/ParquetValueScheme/setStrictProjectionPushdown(org.apache.parquet.hadoop.JobConf)
org/apache/parquet/cascading/ParquetValueScheme/sourceConfInit(org.apache.parquet.cascading.FlowProcess,org.apache.parquet.cascading.Tap,org.apache.parquet.hadoop.JobConf)#org/apache/parquet/cascading/ParquetValueScheme/setProjectionPushdown(org.apache.parquet.hadoop.JobConf)
org/apache/parquet/cascading/ParquetValueScheme/sourceConfInit(org.apache.parquet.cascading.FlowProcess,org.apache.parquet.cascading.Tap,org.apache.parquet.hadoop.JobConf)#org/apache/parquet/cascading/ParquetValueScheme/setPredicatePushdown(org.apache.parquet.hadoop.JobConf)
org/apache/parquet/cascading/ParquetValueScheme/setPredicatePushdown(org.apache.parquet.hadoop.JobConf)#org/apache/parquet/hadoop/ParquetInputFormat/setFilterPredicate(org.apache.parquet.hadoop.Configuration,org.apache.parquet.filter2.predicate.FilterPredicate)
org/apache/parquet/statistics/RandomValues/DoubleGenerator/nextValue()#org/apache/parquet/statistics/RandomValues/RandomValueGenerator/randomDouble(double)
org/apache/parquet/hadoop/thrift/ParquetThriftInputFormat/setThriftClass(org.apache.parquet.hadoop.JobConf,java.lang.Class)#java/lang/Class/getName()
org/apache/parquet/hadoop/thrift/ParquetThriftInputFormat/setThriftClass(org.apache.parquet.hadoop.Configuration,java.lang.Class)#java/lang/Class/getName()
org/apache/parquet/thrift/ThriftRecordConverter/PrimitiveCounter/addFloat(float)#org/apache/parquet/io/api/PrimitiveConverter/addFloat(float)
org/apache/parquet/thrift/ThriftRecordConverter/PrimitiveCounter/addInt(int)#org/apache/parquet/io/api/PrimitiveConverter/addInt(int)
org/apache/parquet/thrift/ThriftRecordConverter/PrimitiveCounter/addBinary(org.apache.parquet.io.api.Binary)#org/apache/parquet/io/api/PrimitiveConverter/addBinary(org.apache.parquet.io.api.Binary)
org/apache/parquet/thrift/ThriftRecordConverter/PrimitiveCounter/addBoolean(boolean)#org/apache/parquet/io/api/PrimitiveConverter/addBoolean(boolean)
org/apache/parquet/thrift/ThriftRecordConverter/PrimitiveCounter/addLong(long)#org/apache/parquet/io/api/PrimitiveConverter/addLong(long)
org/apache/parquet/thrift/ThriftRecordConverter/PrimitiveCounter/addDouble(double)#org/apache/parquet/io/api/PrimitiveConverter/addDouble(double)
org/apache/parquet/thrift/ProtocolReadToWrite/readOne(org.apache.parquet.hadoop.thrift.TProtocol,org.apache.parquet.hadoop.thrift.TProtocol)#org/apache/parquet/thrift/ProtocolReadToWrite/readOneStruct(org.apache.parquet.hadoop.thrift.TProtocol,org.apache.parquet.hadoop.thrift.TProtocol)
org/apache/parquet/thrift/ProtocolReadToWrite/readOneList(org.apache.parquet.hadoop.thrift.TProtocol,org.apache.parquet.hadoop.thrift.TProtocol)#org/apache/parquet/thrift/ProtocolReadToWrite/readCollectionElements(org.apache.parquet.hadoop.thrift.TProtocol,org.apache.parquet.hadoop.thrift.TProtocol,int,byte)
org/apache/parquet/thrift/ProtocolReadToWrite/readOneSet(org.apache.parquet.hadoop.thrift.TProtocol,org.apache.parquet.hadoop.thrift.TProtocol)#org/apache/parquet/thrift/ProtocolReadToWrite/readCollectionElements(org.apache.parquet.hadoop.thrift.TProtocol,org.apache.parquet.hadoop.thrift.TProtocol,int,byte)
org/apache/parquet/thrift/ProtocolReadToWrite/readOneValue(org.apache.parquet.hadoop.thrift.TProtocol,org.apache.parquet.hadoop.thrift.TProtocol,byte)#org/apache/parquet/thrift/ProtocolReadToWrite/readOneList(org.apache.parquet.hadoop.thrift.TProtocol,org.apache.parquet.hadoop.thrift.TProtocol)
org/apache/parquet/thrift/ProtocolReadToWrite/readOneValue(org.apache.parquet.hadoop.thrift.TProtocol,org.apache.parquet.hadoop.thrift.TProtocol,byte)#org/apache/parquet/thrift/ProtocolReadToWrite/readOneSet(org.apache.parquet.hadoop.thrift.TProtocol,org.apache.parquet.hadoop.thrift.TProtocol)
org/apache/parquet/thrift/ProtocolReadToWrite/readOneValue(org.apache.parquet.hadoop.thrift.TProtocol,org.apache.parquet.hadoop.thrift.TProtocol,byte)#org/apache/parquet/thrift/ProtocolReadToWrite/readOneMap(org.apache.parquet.hadoop.thrift.TProtocol,org.apache.parquet.hadoop.thrift.TProtocol)
org/apache/parquet/thrift/ProtocolReadToWrite/readOneValue(org.apache.parquet.hadoop.thrift.TProtocol,org.apache.parquet.hadoop.thrift.TProtocol,byte)#org/apache/parquet/thrift/ProtocolReadToWrite/readOneStruct(org.apache.parquet.hadoop.thrift.TProtocol,org.apache.parquet.hadoop.thrift.TProtocol)
org/apache/parquet/thrift/ProtocolReadToWrite/readOneMap(org.apache.parquet.hadoop.thrift.TProtocol,org.apache.parquet.hadoop.thrift.TProtocol)#org/apache/parquet/thrift/ProtocolReadToWrite/readOneValue(org.apache.parquet.hadoop.thrift.TProtocol,org.apache.parquet.hadoop.thrift.TProtocol,byte)
org/apache/parquet/thrift/ProtocolReadToWrite/readOneStruct(org.apache.parquet.hadoop.thrift.TProtocol,org.apache.parquet.hadoop.thrift.TProtocol)#org/apache/parquet/thrift/ProtocolReadToWrite/readOneValue(org.apache.parquet.hadoop.thrift.TProtocol,org.apache.parquet.hadoop.thrift.TProtocol,byte)
org/apache/parquet/thrift/ProtocolReadToWrite/readCollectionElements(org.apache.parquet.hadoop.thrift.TProtocol,org.apache.parquet.hadoop.thrift.TProtocol,int,byte)#org/apache/parquet/thrift/ProtocolReadToWrite/readOneValue(org.apache.parquet.hadoop.thrift.TProtocol,org.apache.parquet.hadoop.thrift.TProtocol,byte)
org/apache/parquet/avro/AvroRecordConverter/isTransientOrStatic(java.lang.reflect.Field)#java/lang/reflect/Field/getModifiers()
org/apache/parquet/avro/AvroRecordConverter/getAvroField(java.lang.String)#java/lang/String/format(java.lang.String,java.lang.Object[])
org/apache/parquet/avro/AvroRecordConverter/getAvroField(java.lang.String)#org/apache/parquet/io/InvalidRecordException/InvalidRecordException(java.lang.String)
org/apache/parquet/avro/AvroRecordConverter/end()#org/apache/parquet/avro/AvroRecordConverter/fillInDefaults()
org/apache/parquet/avro/AvroRecordConverter/end()#org/apache/parquet/avro/ParentValueContainer/add(java.lang.Object)
org/apache/parquet/avro/AvroRecordConverter/getStringableClass(org.apache.parquet.pig.Schema,org.apache.parquet.avro.GenericData)#java/lang/Class/isAssignableFrom(java.lang.Class)
org/apache/parquet/avro/AvroRecordConverter/isElementType(org.apache.parquet.schema.Type,org.apache.parquet.pig.Schema)#org/apache/parquet/schema/Type/isRepetition(org.apache.parquet.schema.Type.Repetition)
org/apache/parquet/avro/AvroRecordConverter/isElementType(org.apache.parquet.schema.Type,org.apache.parquet.pig.Schema)#org/apache/parquet/schema/GroupType/getFieldCount()
org/apache/parquet/avro/AvroRecordConverter/isElementType(org.apache.parquet.schema.Type,org.apache.parquet.pig.Schema)#org/apache/parquet/schema/GroupType/getType(int)
org/apache/parquet/avro/AvroRecordConverter/isElementType(org.apache.parquet.schema.Type,org.apache.parquet.pig.Schema)#org/apache/parquet/schema/Type/isPrimitive()
org/apache/parquet/avro/AvroRecordConverter/isElementType(org.apache.parquet.schema.Type,org.apache.parquet.pig.Schema)#org/apache/parquet/schema/Type/asGroupType()
org/apache/parquet/avro/AvroRecordConverter/isElementType(org.apache.parquet.schema.Type,org.apache.parquet.pig.Schema)#org/apache/parquet/avro/AvroSchemaConverter/convert(org.apache.parquet.schema.GroupType)
org/apache/parquet/avro/AvroRecordConverter/newStringConverter(org.apache.parquet.pig.Schema,org.apache.parquet.avro.GenericData,org.apache.parquet.avro.ParentValueContainer)#org/apache/parquet/avro/AvroConverters/FieldStringableConverter/FieldStringableConverter(org.apache.parquet.avro.ParentValueContainer,java.lang.Class)
org/apache/parquet/avro/AvroRecordConverter/newStringConverter(org.apache.parquet.pig.Schema,org.apache.parquet.avro.GenericData,org.apache.parquet.avro.ParentValueContainer)#org/apache/parquet/avro/AvroRecordConverter/getStringableClass(org.apache.parquet.pig.Schema,org.apache.parquet.avro.GenericData)
org/apache/parquet/avro/AvroRecordConverter/newStringConverter(org.apache.parquet.pig.Schema,org.apache.parquet.avro.GenericData,org.apache.parquet.avro.ParentValueContainer)#org/apache/parquet/avro/AvroConverters/FieldStringConverter/FieldStringConverter(org.apache.parquet.avro.ParentValueContainer)
org/apache/parquet/avro/AvroRecordConverter/newStringConverter(org.apache.parquet.pig.Schema,org.apache.parquet.avro.GenericData,org.apache.parquet.avro.ParentValueContainer)#org/apache/parquet/avro/AvroConverters/FieldUTF8Converter/FieldUTF8Converter(org.apache.parquet.avro.ParentValueContainer)
org/apache/parquet/avro/AvroRecordConverter/newConverter(org.apache.parquet.pig.Schema,org.apache.parquet.schema.Type,org.apache.parquet.avro.GenericData,java.lang.Class,org.apache.parquet.avro.ParentValueContainer)#org/apache/parquet/schema/Type/asGroupType()
org/apache/parquet/avro/AvroRecordConverter/newConverter(org.apache.parquet.pig.Schema,org.apache.parquet.schema.Type,org.apache.parquet.avro.GenericData,java.lang.Class,org.apache.parquet.avro.ParentValueContainer)#java/lang/String/format(java.lang.String,java.lang.Object[])
org/apache/parquet/avro/AvroRecordConverter/newConverter(org.apache.parquet.pig.Schema,org.apache.parquet.schema.Type,org.apache.parquet.avro.GenericData,java.lang.Class,org.apache.parquet.avro.ParentValueContainer)#org/apache/parquet/avro/AvroRecordConverter/newStringConverter(org.apache.parquet.pig.Schema,org.apache.parquet.avro.GenericData,org.apache.parquet.avro.ParentValueContainer)
org/apache/parquet/avro/AvroRecordConverter/newConverter(org.apache.parquet.pig.Schema,org.apache.parquet.schema.Type,org.apache.parquet.avro.GenericData,java.lang.Class,org.apache.parquet.avro.ParentValueContainer)#org/apache/parquet/avro/AvroRecordConverter/MapConverter/MapConverter(org.apache.parquet.avro.ParentValueContainer,org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,org.apache.parquet.avro.GenericData)
org/apache/parquet/avro/AvroRecordConverter/newConverter(org.apache.parquet.pig.Schema,org.apache.parquet.schema.Type,org.apache.parquet.avro.GenericData,java.lang.Class,org.apache.parquet.avro.ParentValueContainer)#org/apache/parquet/avro/AvroConverters/FieldBooleanConverter/FieldBooleanConverter(org.apache.parquet.avro.ParentValueContainer)
org/apache/parquet/avro/AvroRecordConverter/newConverter(org.apache.parquet.pig.Schema,org.apache.parquet.schema.Type,org.apache.parquet.avro.GenericData,java.lang.Class,org.apache.parquet.avro.ParentValueContainer)#org/apache/parquet/avro/AvroRecordConverter/AvroArrayConverter/AvroArrayConverter(org.apache.parquet.avro.ParentValueContainer,org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,org.apache.parquet.avro.GenericData,java.lang.Class)
org/apache/parquet/avro/AvroRecordConverter/newConverter(org.apache.parquet.pig.Schema,org.apache.parquet.schema.Type,org.apache.parquet.avro.GenericData,java.lang.Class,org.apache.parquet.avro.ParentValueContainer)#org/apache/parquet/avro/AvroRecordConverter/AvroCollectionConverter/AvroCollectionConverter(org.apache.parquet.avro.ParentValueContainer,org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,org.apache.parquet.avro.GenericData,java.lang.Class)
org/apache/parquet/avro/AvroRecordConverter/newConverter(org.apache.parquet.pig.Schema,org.apache.parquet.schema.Type,org.apache.parquet.avro.GenericData,java.lang.Class,org.apache.parquet.avro.ParentValueContainer)#org/apache/parquet/avro/ParentValueContainer/getConversionContainer(org.apache.parquet.avro.ParentValueContainer,org.apache.parquet.avro.Conversion,org.apache.parquet.pig.Schema)
org/apache/parquet/avro/AvroRecordConverter/newConverter(org.apache.parquet.pig.Schema,org.apache.parquet.schema.Type,org.apache.parquet.avro.GenericData,java.lang.Class,org.apache.parquet.avro.ParentValueContainer)#org/apache/parquet/avro/AvroConverters/FieldByteArrayConverter/FieldByteArrayConverter(org.apache.parquet.avro.ParentValueContainer)
org/apache/parquet/avro/AvroRecordConverter/newConverter(org.apache.parquet.pig.Schema,org.apache.parquet.schema.Type,org.apache.parquet.avro.GenericData,java.lang.Class,org.apache.parquet.avro.ParentValueContainer)#java/lang/Class/isArray()
org/apache/parquet/avro/AvroRecordConverter/newConverter(org.apache.parquet.pig.Schema,org.apache.parquet.schema.Type,org.apache.parquet.avro.GenericData,java.lang.Class,org.apache.parquet.avro.ParentValueContainer)#org/apache/parquet/avro/AvroConverters/FieldIntegerConverter/FieldIntegerConverter(org.apache.parquet.avro.ParentValueContainer)
org/apache/parquet/avro/AvroRecordConverter/newConverter(org.apache.parquet.pig.Schema,org.apache.parquet.schema.Type,org.apache.parquet.avro.GenericData,java.lang.Class,org.apache.parquet.avro.ParentValueContainer)#java/lang/Class/getComponentType()
org/apache/parquet/avro/AvroRecordConverter/newConverter(org.apache.parquet.pig.Schema,org.apache.parquet.schema.Type,org.apache.parquet.avro.GenericData,java.lang.Class,org.apache.parquet.avro.ParentValueContainer)#org/apache/parquet/avro/AvroConverters/FieldShortConverter/FieldShortConverter(org.apache.parquet.avro.ParentValueContainer)
org/apache/parquet/avro/AvroRecordConverter/newConverter(org.apache.parquet.pig.Schema,org.apache.parquet.schema.Type,org.apache.parquet.avro.GenericData,java.lang.Class,org.apache.parquet.avro.ParentValueContainer)#org/apache/parquet/avro/AvroConverters/FieldFloatConverter/FieldFloatConverter(org.apache.parquet.avro.ParentValueContainer)
org/apache/parquet/avro/AvroRecordConverter/newConverter(org.apache.parquet.pig.Schema,org.apache.parquet.schema.Type,org.apache.parquet.avro.GenericData,java.lang.Class,org.apache.parquet.avro.ParentValueContainer)#org/apache/parquet/avro/AvroConverters/FieldDoubleConverter/FieldDoubleConverter(org.apache.parquet.avro.ParentValueContainer)
org/apache/parquet/avro/AvroRecordConverter/newConverter(org.apache.parquet.pig.Schema,org.apache.parquet.schema.Type,org.apache.parquet.avro.GenericData,java.lang.Class,org.apache.parquet.avro.ParentValueContainer)#org/apache/parquet/avro/AvroConverters/FieldByteConverter/FieldByteConverter(org.apache.parquet.avro.ParentValueContainer)
org/apache/parquet/avro/AvroRecordConverter/newConverter(org.apache.parquet.pig.Schema,org.apache.parquet.schema.Type,org.apache.parquet.avro.GenericData,java.lang.Class,org.apache.parquet.avro.ParentValueContainer)#org/apache/parquet/avro/AvroConverters/FieldLongConverter/FieldLongConverter(org.apache.parquet.avro.ParentValueContainer)
org/apache/parquet/avro/AvroRecordConverter/newConverter(org.apache.parquet.pig.Schema,org.apache.parquet.schema.Type,org.apache.parquet.avro.GenericData,java.lang.Class,org.apache.parquet.avro.ParentValueContainer)#org/apache/parquet/avro/AvroConverters/FieldFixedConverter/FieldFixedConverter(org.apache.parquet.avro.ParentValueContainer,org.apache.parquet.pig.Schema,org.apache.parquet.avro.GenericData)
org/apache/parquet/avro/AvroRecordConverter/newConverter(org.apache.parquet.pig.Schema,org.apache.parquet.schema.Type,org.apache.parquet.avro.GenericData,java.lang.Class,org.apache.parquet.avro.ParentValueContainer)#org/apache/parquet/avro/AvroConverters/FieldByteBufferConverter/FieldByteBufferConverter(org.apache.parquet.avro.ParentValueContainer)
org/apache/parquet/avro/AvroRecordConverter/newConverter(org.apache.parquet.pig.Schema,org.apache.parquet.schema.Type,org.apache.parquet.avro.GenericData,java.lang.Class,org.apache.parquet.avro.ParentValueContainer)#org/apache/parquet/avro/AvroConverters/FieldCharConverter/FieldCharConverter(org.apache.parquet.avro.ParentValueContainer)
org/apache/parquet/avro/AvroRecordConverter/newConverter(org.apache.parquet.pig.Schema,org.apache.parquet.schema.Type,org.apache.parquet.avro.GenericData,java.lang.Class,org.apache.parquet.avro.ParentValueContainer)#org/apache/parquet/avro/AvroRecordConverter/getDatumClass(org.apache.parquet.avro.Conversion,java.lang.Class,org.apache.parquet.pig.Schema,org.apache.parquet.avro.GenericData)
org/apache/parquet/avro/AvroRecordConverter/newConverter(org.apache.parquet.pig.Schema,org.apache.parquet.schema.Type,org.apache.parquet.avro.GenericData,java.lang.Class,org.apache.parquet.avro.ParentValueContainer)#org/apache/parquet/avro/AvroRecordConverter/AvroUnionConverter/AvroUnionConverter(org.apache.parquet.avro.ParentValueContainer,org.apache.parquet.schema.Type,org.apache.parquet.pig.Schema,org.apache.parquet.avro.GenericData)
org/apache/parquet/avro/AvroRecordConverter/newConverter(org.apache.parquet.pig.Schema,org.apache.parquet.schema.Type,org.apache.parquet.avro.GenericData,java.lang.Class,org.apache.parquet.avro.ParentValueContainer)#java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)
org/apache/parquet/avro/AvroRecordConverter/newConverter(org.apache.parquet.pig.Schema,org.apache.parquet.schema.Type,org.apache.parquet.avro.GenericData,java.lang.Class,org.apache.parquet.avro.ParentValueContainer)#org/apache/parquet/avro/AvroRecordConverter/AvroRecordConverter(org.apache.parquet.avro.ParentValueContainer,org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,org.apache.parquet.avro.GenericData)
org/apache/parquet/avro/AvroRecordConverter/newConverter(org.apache.parquet.pig.Schema,org.apache.parquet.schema.Type,org.apache.parquet.avro.GenericData,java.lang.Class,org.apache.parquet.avro.ParentValueContainer)#org/apache/parquet/avro/AvroConverters/FieldEnumConverter/FieldEnumConverter(org.apache.parquet.avro.ParentValueContainer,org.apache.parquet.pig.Schema,org.apache.parquet.avro.GenericData)
org/apache/parquet/avro/AvroRecordConverter/getDatumClass(org.apache.parquet.pig.Schema,org.apache.parquet.avro.GenericData)#org/apache/parquet/avro/AvroRecordConverter/getDatumClass(org.apache.parquet.avro.Conversion,java.lang.Class,org.apache.parquet.pig.Schema,org.apache.parquet.avro.GenericData)
org/apache/parquet/avro/AvroRecordConverter/fillInDefaults()#org/apache/parquet/avro/AvroRecordConverter/deepCopy(org.apache.parquet.pig.Schema,java.lang.Object)
org/apache/parquet/avro/AvroRecordConverter/fillInDefaults()#org/apache/parquet/avro/AvroRecordConverter/set(java.lang.String,int,java.lang.Object)
org/apache/parquet/avro/AvroRecordConverter/getDatumClass(org.apache.parquet.avro.Conversion,java.lang.Class,org.apache.parquet.pig.Schema,org.apache.parquet.avro.GenericData)#java/lang/Object/getClass()
org/apache/parquet/avro/AvroRecordConverter/getDatumClass(org.apache.parquet.avro.Conversion,java.lang.Class,org.apache.parquet.pig.Schema,org.apache.parquet.avro.GenericData)#java/lang/reflect/Method/invoke(java.lang.Object,java.lang.Object[])
org/apache/parquet/avro/AvroRecordConverter/getDatumClass(org.apache.parquet.avro.Conversion,java.lang.Class,org.apache.parquet.pig.Schema,org.apache.parquet.avro.GenericData)#java/lang/Class/getMethod(java.lang.String,java.lang.Class<?>[])
org/apache/parquet/avro/AvroRecordConverter/newConverter(org.apache.parquet.pig.Schema,org.apache.parquet.schema.Type,org.apache.parquet.avro.GenericData,org.apache.parquet.avro.ParentValueContainer)#org/apache/parquet/avro/AvroRecordConverter/newConverter(org.apache.parquet.pig.Schema,org.apache.parquet.schema.Type,org.apache.parquet.avro.GenericData,java.lang.Class,org.apache.parquet.avro.ParentValueContainer)
org/apache/parquet/avro/AvroRecordConverter/getFieldsByName(java.lang.Class,boolean)#java/lang/Package/getName()
org/apache/parquet/avro/AvroRecordConverter/getFieldsByName(java.lang.Class,boolean)#java/lang/Class/getSuperclass()
org/apache/parquet/avro/AvroRecordConverter/getFieldsByName(java.lang.Class,boolean)#java/lang/reflect/AnnotatedElement/getAnnotation(java.lang.Class)
org/apache/parquet/avro/AvroRecordConverter/getFieldsByName(java.lang.Class,boolean)#java/lang/reflect/Field/getType()
org/apache/parquet/avro/AvroRecordConverter/getFieldsByName(java.lang.Class,boolean)#java/lang/Class/getPackage()
org/apache/parquet/avro/AvroRecordConverter/getFieldsByName(java.lang.Class,boolean)#java/lang/String/startsWith(java.lang.String)
org/apache/parquet/avro/AvroRecordConverter/getFieldsByName(java.lang.Class,boolean)#java/util/Map/put(K,V)
org/apache/parquet/avro/AvroRecordConverter/getFieldsByName(java.lang.Class,boolean)#java/util/LinkedHashMap/LinkedHashMap()
org/apache/parquet/avro/AvroRecordConverter/getFieldsByName(java.lang.Class,boolean)#org/apache/parquet/avro/AvroRecordConverter/isTransientOrStatic(java.lang.reflect.Field)
org/apache/parquet/avro/AvroRecordConverter/getFieldsByName(java.lang.Class,boolean)#java/lang/reflect/Field/getName()
org/apache/parquet/avro/AvroRecordConverter/getFieldsByName(java.lang.Class,boolean)#java/lang/Class/getDeclaredFields()
org/apache/parquet/avro/AvroRecordConverter/getFieldsByName(java.lang.Class,boolean)#java/lang/reflect/AccessibleObject/isAnnotationPresent(java.lang.Class)
org/apache/parquet/hadoop/DirectCodecFactory/DirectCodecPool/CodecPool/borrowCompressor()#org/apache/parquet/hadoop/DirectCodecFactory/DirectCodecPool/borrow(org.apache.parquet.hadoop.GenericObjectPool)
org/apache/parquet/hadoop/DirectCodecFactory/DirectCodecPool/CodecPool/borrowDecompressor()#org/apache/parquet/hadoop/DirectCodecFactory/DirectCodecPool/borrow(org.apache.parquet.hadoop.GenericObjectPool)
org/apache/parquet/hadoop/DirectCodecFactory/DirectCodecPool/CodecPool/borrowDirectDecompressor()#org/apache/parquet/Preconditions/checkArgument(boolean,java.lang.String)
org/apache/parquet/hadoop/DirectCodecFactory/DirectCodecPool/CodecPool/borrowDirectDecompressor()#org/apache/parquet/hadoop/DirectCodecFactory/DirectCodecPool/ParquetCompressionCodecException/ParquetCompressionCodecException(java.lang.Throwable)
org/apache/parquet/hadoop/DirectCodecFactory/SnappyCompressor/release()#org/apache/parquet/hadoop/DirectCodecFactory/release(java.nio.ByteBuffer)
org/apache/parquet/hadoop/DirectCodecFactory/SnappyCompressor/compress(org.apache.parquet.bytes.BytesInput)#org/apache/parquet/hadoop/DirectCodecFactory/ensure(java.nio.ByteBuffer,int)
org/apache/parquet/hadoop/DirectCodecFactory/SnappyCompressor/compress(org.apache.parquet.bytes.BytesInput)#java/nio/Buffer/flip()
org/apache/parquet/hadoop/DirectCodecFactory/SnappyCompressor/compress(org.apache.parquet.bytes.BytesInput)#org/apache/parquet/bytes/BytesInput/from(java.nio.ByteBuffer,int,int)
org/apache/parquet/hadoop/DirectCodecFactory/SnappyCompressor/compress(org.apache.parquet.bytes.BytesInput)#org/apache/parquet/bytes/BytesInput/size()
org/apache/parquet/hadoop/DirectCodecFactory/SnappyCompressor/compress(org.apache.parquet.bytes.BytesInput)#org/apache/parquet/bytes/BytesInput/toByteBuffer()
org/apache/parquet/hadoop/DirectCodecFactory/SnappyCompressor/compress(org.apache.parquet.bytes.BytesInput)#java/nio/ByteBuffer/put(java.nio.ByteBuffer)
org/apache/parquet/hadoop/DirectCodecFactory/SnappyCompressor/compress(org.apache.parquet.bytes.BytesInput)#java/nio/ByteBuffer/isDirect()
org/apache/parquet/io/RecordConsumerLoggingWrapper/endField(java.lang.String,int)#org/apache/parquet/io/RecordConsumerLoggingWrapper/logClose(java.lang.String)
org/apache/parquet/io/RecordConsumerLoggingWrapper/endField(java.lang.String,int)#org/apache/parquet/io/api/RecordConsumer/endField(java.lang.String,int)
org/apache/parquet/io/RecordConsumerLoggingWrapper/addBinary(org.apache.parquet.io.api.Binary)#java/util/Arrays/toString(byte[])
org/apache/parquet/io/RecordConsumerLoggingWrapper/addBinary(org.apache.parquet.io.api.Binary)#org/apache/parquet/io/api/RecordConsumer/addBinary(org.apache.parquet.io.api.Binary)
org/apache/parquet/io/RecordConsumerLoggingWrapper/addBinary(org.apache.parquet.io.api.Binary)#org/apache/parquet/io/RecordConsumerLoggingWrapper/log(java.lang.Object,java.lang.Object[])
org/apache/parquet/io/RecordConsumerLoggingWrapper/addBinary(org.apache.parquet.io.api.Binary)#org/apache/parquet/io/api/Binary/getBytesUnsafe()
org/apache/parquet/io/RecordConsumerLoggingWrapper/startGroup()#org/apache/parquet/io/api/RecordConsumer/startGroup()
org/apache/parquet/io/RecordConsumerLoggingWrapper/startGroup()#org/apache/parquet/io/RecordConsumerLoggingWrapper/log(java.lang.Object,java.lang.Object[])
org/apache/parquet/io/RecordConsumerLoggingWrapper/log(java.lang.Object,java.lang.Object[])#org/apache/parquet/io/RecordConsumerLoggingWrapper/indent()
org/apache/parquet/io/RecordConsumerLoggingWrapper/addFloat(float)#org/apache/parquet/io/RecordConsumerLoggingWrapper/log(java.lang.Object,java.lang.Object[])
org/apache/parquet/io/RecordConsumerLoggingWrapper/addFloat(float)#org/apache/parquet/io/api/RecordConsumer/addFloat(float)
org/apache/parquet/io/RecordConsumerLoggingWrapper/endGroup()#org/apache/parquet/io/RecordConsumerLoggingWrapper/log(java.lang.Object,java.lang.Object[])
org/apache/parquet/io/RecordConsumerLoggingWrapper/endGroup()#org/apache/parquet/io/api/RecordConsumer/endGroup()
org/apache/parquet/io/RecordConsumerLoggingWrapper/startMessage()#org/apache/parquet/io/RecordConsumerLoggingWrapper/log(java.lang.Object,java.lang.Object[])
org/apache/parquet/io/RecordConsumerLoggingWrapper/startMessage()#org/apache/parquet/io/api/RecordConsumer/startMessage()
org/apache/parquet/io/RecordConsumerLoggingWrapper/addInteger(int)#org/apache/parquet/io/api/RecordConsumer/addInteger(int)
org/apache/parquet/io/RecordConsumerLoggingWrapper/addInteger(int)#org/apache/parquet/io/RecordConsumerLoggingWrapper/log(java.lang.Object,java.lang.Object[])
org/apache/parquet/io/RecordConsumerLoggingWrapper/flush()#org/apache/parquet/io/api/RecordConsumer/flush()
org/apache/parquet/io/RecordConsumerLoggingWrapper/flush()#org/apache/parquet/io/RecordConsumerLoggingWrapper/log(java.lang.Object,java.lang.Object[])
org/apache/parquet/io/RecordConsumerLoggingWrapper/endMessage()#org/apache/parquet/io/api/RecordConsumer/endMessage()
org/apache/parquet/io/RecordConsumerLoggingWrapper/endMessage()#org/apache/parquet/io/RecordConsumerLoggingWrapper/log(java.lang.Object,java.lang.Object[])
org/apache/parquet/io/RecordConsumerLoggingWrapper/indent()#java/lang/StringBuilder/append(java.lang.String)
org/apache/parquet/io/RecordConsumerLoggingWrapper/indent()#java/lang/StringBuilder/StringBuilder()
org/apache/parquet/io/RecordConsumerLoggingWrapper/indent()#java/lang/StringBuilder/toString()
org/apache/parquet/io/RecordConsumerLoggingWrapper/logClose(java.lang.String)#org/apache/parquet/io/RecordConsumerLoggingWrapper/log(java.lang.Object,java.lang.Object[])
org/apache/parquet/io/RecordConsumerLoggingWrapper/logOpen(java.lang.String)#org/apache/parquet/io/RecordConsumerLoggingWrapper/log(java.lang.Object,java.lang.Object[])
org/apache/parquet/io/RecordConsumerLoggingWrapper/startField(java.lang.String,int)#org/apache/parquet/io/api/RecordConsumer/startField(java.lang.String,int)
org/apache/parquet/io/RecordConsumerLoggingWrapper/startField(java.lang.String,int)#org/apache/parquet/io/RecordConsumerLoggingWrapper/logOpen(java.lang.String)
org/apache/parquet/io/RecordConsumerLoggingWrapper/addBoolean(boolean)#org/apache/parquet/io/api/RecordConsumer/addBoolean(boolean)
org/apache/parquet/io/RecordConsumerLoggingWrapper/addBoolean(boolean)#org/apache/parquet/io/RecordConsumerLoggingWrapper/log(java.lang.Object,java.lang.Object[])
org/apache/parquet/io/RecordConsumerLoggingWrapper/addLong(long)#org/apache/parquet/io/api/RecordConsumer/addLong(long)
org/apache/parquet/io/RecordConsumerLoggingWrapper/addLong(long)#org/apache/parquet/io/RecordConsumerLoggingWrapper/log(java.lang.Object,java.lang.Object[])
org/apache/parquet/io/RecordConsumerLoggingWrapper/addDouble(double)#org/apache/parquet/io/api/RecordConsumer/addDouble(double)
org/apache/parquet/io/RecordConsumerLoggingWrapper/addDouble(double)#org/apache/parquet/io/RecordConsumerLoggingWrapper/log(java.lang.Object,java.lang.Object[])
org/apache/parquet/thrift/ThriftRecordConverter/getCurrentRecord()#org/apache/parquet/thrift/ParquetReadProtocol/addAll(java.util.Collection)
org/apache/parquet/thrift/ThriftRecordConverter/getCurrentRecord()#org/apache/parquet/thrift/projection/amend/ProtocolEventsAmender/ProtocolEventsAmender(java.util.List)
org/apache/parquet/thrift/ThriftRecordConverter/getCurrentRecord()#org/apache/parquet/thrift/projection/amend/ProtocolEventsAmender/amendMissingRequiredFields(org.apache.parquet.thrift.struct.ThriftType.StructType)
org/apache/parquet/thrift/ThriftRecordConverter/getCurrentRecord()#org/apache/parquet/thrift/ParquetReadProtocol/clear()
org/apache/parquet/thrift/ThriftRecordConverter/getCurrentRecord()#org/apache/parquet/thrift/ThriftReader/readOneRecord(org.apache.parquet.hadoop.thrift.TProtocol)
org/apache/parquet/thrift/ThriftRecordConverter/getCurrentRecord()#org/apache/parquet/io/api/RecordMaterializer/RecordMaterializationException/RecordMaterializationException(java.lang.String,java.lang.Throwable)
org/apache/parquet/thrift/ThriftRecordConverter/hasMissingRequiredFieldInGroupType(org.apache.parquet.schema.GroupType,org.apache.parquet.schema.GroupType)#org/apache/parquet/schema/Type/getName()
org/apache/parquet/thrift/ThriftRecordConverter/hasMissingRequiredFieldInGroupType(org.apache.parquet.schema.GroupType,org.apache.parquet.schema.GroupType)#org/apache/parquet/schema/GroupType/getType(java.lang.String)
org/apache/parquet/thrift/ThriftRecordConverter/hasMissingRequiredFieldInGroupType(org.apache.parquet.schema.GroupType,org.apache.parquet.schema.GroupType)#org/apache/parquet/schema/GroupType/getFields()
org/apache/parquet/thrift/ThriftRecordConverter/hasMissingRequiredFieldInGroupType(org.apache.parquet.schema.GroupType,org.apache.parquet.schema.GroupType)#org/apache/parquet/thrift/ThriftRecordConverter/hasMissingRequiredFieldInGroupType(org.apache.parquet.schema.GroupType,org.apache.parquet.schema.GroupType)
org/apache/parquet/thrift/ThriftRecordConverter/hasMissingRequiredFieldInGroupType(org.apache.parquet.schema.GroupType,org.apache.parquet.schema.GroupType)#org/apache/parquet/schema/Type/asGroupType()
org/apache/parquet/thrift/ThriftRecordConverter/hasMissingRequiredFieldInGroupType(org.apache.parquet.schema.GroupType,org.apache.parquet.schema.GroupType)#org/apache/parquet/schema/Type/getRepetition()
org/apache/parquet/thrift/ThriftRecordConverter/hasMissingRequiredFieldInGroupType(org.apache.parquet.schema.GroupType,org.apache.parquet.schema.GroupType)#org/apache/parquet/schema/GroupType/containsField(java.lang.String)
org/apache/parquet/thrift/ThriftRecordConverter/hasMissingRequiredFieldInGroupType(org.apache.parquet.schema.GroupType,org.apache.parquet.schema.GroupType)#org/apache/parquet/schema/Type/isPrimitive()
org/apache/parquet/thrift/ThriftRecordConverter/newConverter(java.util.List,org.apache.parquet.schema.Type,org.apache.parquet.thrift.struct.ThriftField)#org/apache/parquet/thrift/struct/ThriftField/getType()
org/apache/parquet/thrift/ThriftRecordConverter/newConverter(java.util.List,org.apache.parquet.schema.Type,org.apache.parquet.thrift.struct.ThriftField)#org/apache/parquet/schema/Type/asGroupType()
org/apache/parquet/thrift/ThriftRecordConverter/newConverter(java.util.List,org.apache.parquet.schema.Type,org.apache.parquet.thrift.struct.ThriftField)#org/apache/parquet/thrift/ThriftRecordConverter/ListConverter/ListConverter(java.util.List,org.apache.parquet.schema.GroupType,org.apache.parquet.thrift.struct.ThriftField)
org/apache/parquet/thrift/ThriftRecordConverter/newConverter(java.util.List,org.apache.parquet.schema.Type,org.apache.parquet.thrift.struct.ThriftField)#org/apache/parquet/thrift/ThriftRecordConverter/FieldEnumConverter/FieldEnumConverter(java.util.List,org.apache.parquet.thrift.struct.ThriftField)
org/apache/parquet/thrift/ThriftRecordConverter/newConverter(java.util.List,org.apache.parquet.schema.Type,org.apache.parquet.thrift.struct.ThriftField)#org/apache/parquet/thrift/ThriftRecordConverter/FieldStringConverter/FieldStringConverter(java.util.List,org.apache.parquet.thrift.struct.ThriftField)
org/apache/parquet/thrift/ThriftRecordConverter/newConverter(java.util.List,org.apache.parquet.schema.Type,org.apache.parquet.thrift.struct.ThriftField)#org/apache/parquet/thrift/struct/ThriftType/getType()
org/apache/parquet/thrift/ThriftRecordConverter/newConverter(java.util.List,org.apache.parquet.schema.Type,org.apache.parquet.thrift.struct.ThriftField)#org/apache/parquet/thrift/ThriftRecordConverter/MapConverter/MapConverter(java.util.List,org.apache.parquet.schema.GroupType,org.apache.parquet.thrift.struct.ThriftField)
org/apache/parquet/thrift/ThriftRecordConverter/newConverter(java.util.List,org.apache.parquet.schema.Type,org.apache.parquet.thrift.struct.ThriftField)#org/apache/parquet/thrift/ThriftRecordConverter/SetConverter/SetConverter(java.util.List,org.apache.parquet.schema.GroupType,org.apache.parquet.thrift.struct.ThriftField)
org/apache/parquet/thrift/ThriftRecordConverter/newConverter(java.util.List,org.apache.parquet.schema.Type,org.apache.parquet.thrift.struct.ThriftField)#org/apache/parquet/thrift/ThriftRecordConverter/FieldPrimitiveConverter/FieldPrimitiveConverter(java.util.List,org.apache.parquet.thrift.struct.ThriftField)
org/apache/parquet/thrift/ThriftRecordConverter/newConverter(java.util.List,org.apache.parquet.schema.Type,org.apache.parquet.thrift.struct.ThriftField)#org/apache/parquet/thrift/ThriftRecordConverter/StructConverter/StructConverter(java.util.List,org.apache.parquet.schema.GroupType,org.apache.parquet.thrift.struct.ThriftField)
org/apache/parquet/hadoop/api/InitContext/getMergedKeyValueMetaData()#java/util/Map/Entry/getValue()
org/apache/parquet/hadoop/api/InitContext/getMergedKeyValueMetaData()#java/util/Set/size()
org/apache/parquet/hadoop/api/InitContext/getMergedKeyValueMetaData()#java/util/Map/Entry/getKey()
org/apache/parquet/hadoop/api/InitContext/getMergedKeyValueMetaData()#java/util/Set/iterator()
org/apache/parquet/hadoop/api/InitContext/getMergedKeyValueMetaData()#java/util/Map/entrySet()
org/apache/parquet/hadoop/api/InitContext/getMergedKeyValueMetaData()#java/util/Iterator/next()
org/apache/parquet/hadoop/api/InitContext/getMergedKeyValueMetaData()#java/util/HashMap/HashMap()
org/apache/parquet/hadoop/api/InitContext/getMergedKeyValueMetaData()#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/apache/parquet/hadoop/api/InitContext/getMergedKeyValueMetaData()#java/util/Map/put(K,V)
org/apache/parquet/hadoop/codec/SnappyCodec/createInputStream(java.io.InputStream,org.apache.parquet.hadoop.codec.Decompressor)#org/apache/parquet/hadoop/codec/NonBlockedDecompressorStream/NonBlockedDecompressorStream(java.io.InputStream,org.apache.parquet.hadoop.codec.Decompressor,int)
org/apache/parquet/hadoop/codec/SnappyCodec/createCompressor()#org/apache/parquet/hadoop/codec/SnappyCompressor/SnappyCompressor()
org/apache/parquet/hadoop/codec/SnappyCodec/createDecompressor()#org/apache/parquet/hadoop/codec/SnappyDecompressor/SnappyDecompressor()
org/apache/parquet/hadoop/codec/SnappyCodec/createOutputStream(java.io.OutputStream,org.apache.parquet.hadoop.codec.Compressor)#org/apache/parquet/hadoop/codec/NonBlockedCompressorStream/NonBlockedCompressorStream(java.io.OutputStream,org.apache.parquet.hadoop.codec.Compressor,int)
org/apache/parquet/hadoop/codec/SnappyCodec/createInputStream(java.io.InputStream)#org/apache/parquet/hadoop/codec/SnappyCodec/createInputStream(java.io.InputStream,org.apache.parquet.hadoop.codec.Decompressor)
org/apache/parquet/hadoop/codec/SnappyCodec/createInputStream(java.io.InputStream)#org/apache/parquet/hadoop/codec/SnappyCodec/createDecompressor()
org/apache/parquet/hadoop/codec/SnappyCodec/createOutputStream(java.io.OutputStream)#org/apache/parquet/hadoop/codec/SnappyCodec/createOutputStream(java.io.OutputStream,org.apache.parquet.hadoop.codec.Compressor)
org/apache/parquet/hadoop/codec/SnappyCodec/createOutputStream(java.io.OutputStream)#org/apache/parquet/hadoop/codec/SnappyCodec/createCompressor()
org/apache/hadoop/hive/ql/io/parquet/read/DataWritableReadSupport/prepareForRead(org.apache.parquet.hadoop.Configuration,java.util.Map,org.apache.parquet.schema.MessageType,org.apache.parquet.hadoop.api.ReadSupport.ReadContext)#org/apache/parquet/hadoop/api/ReadSupport/ReadContext/getReadSupportMetadata()
org/apache/hadoop/hive/ql/io/parquet/read/DataWritableReadSupport/prepareForRead(org.apache.parquet.hadoop.Configuration,java.util.Map,org.apache.parquet.schema.MessageType,org.apache.parquet.hadoop.api.ReadSupport.ReadContext)#org/apache/hadoop/hive/ql/io/parquet/read/DataWritableReadSupport/resolveSchemaAccess(org.apache.parquet.schema.MessageType,org.apache.parquet.schema.MessageType,org.apache.parquet.hadoop.Configuration)
org/apache/hadoop/hive/ql/io/parquet/read/DataWritableReadSupport/prepareForRead(org.apache.parquet.hadoop.Configuration,java.util.Map,org.apache.parquet.schema.MessageType,org.apache.parquet.hadoop.api.ReadSupport.ReadContext)#java/util/Map/get(java.lang.Object)
org/apache/hadoop/hive/ql/io/parquet/read/DataWritableReadSupport/prepareForRead(org.apache.parquet.hadoop.Configuration,java.util.Map,org.apache.parquet.schema.MessageType,org.apache.parquet.hadoop.api.ReadSupport.ReadContext)#org/apache/parquet/hadoop/api/ReadSupport/ReadContext/getRequestedSchema()
org/apache/hadoop/hive/ql/io/parquet/read/DataWritableReadSupport/prepareForRead(org.apache.parquet.hadoop.Configuration,java.util.Map,org.apache.parquet.schema.MessageType,org.apache.parquet.hadoop.api.ReadSupport.ReadContext)#org/apache/parquet/schema/MessageTypeParser/parseMessageType(java.lang.String)
org/apache/hadoop/hive/ql/io/parquet/read/DataWritableReadSupport/prepareForRead(org.apache.parquet.hadoop.Configuration,java.util.Map,org.apache.parquet.schema.MessageType,org.apache.parquet.hadoop.api.ReadSupport.ReadContext)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/apache/hadoop/hive/ql/io/parquet/read/DataWritableReadSupport/prepareForRead(org.apache.parquet.hadoop.Configuration,java.util.Map,org.apache.parquet.schema.MessageType,org.apache.parquet.hadoop.api.ReadSupport.ReadContext)#org/apache/hadoop/hive/ql/io/parquet/convert/DataWritableRecordConverter/DataWritableRecordConverter(org.apache.parquet.schema.GroupType,org.apache.parquet.schema.GroupType)
org/apache/hadoop/hive/ql/io/parquet/read/DataWritableReadSupport/resolveSchemaAccess(org.apache.parquet.schema.MessageType,org.apache.parquet.schema.MessageType,org.apache.parquet.hadoop.Configuration)#java/util/ArrayList/ArrayList()
org/apache/hadoop/hive/ql/io/parquet/read/DataWritableReadSupport/resolveSchemaAccess(org.apache.parquet.schema.MessageType,org.apache.parquet.schema.MessageType,org.apache.parquet.hadoop.Configuration)#org/apache/parquet/schema/Type/getName()
org/apache/hadoop/hive/ql/io/parquet/read/DataWritableReadSupport/resolveSchemaAccess(org.apache.parquet.schema.MessageType,org.apache.parquet.schema.MessageType,org.apache.parquet.hadoop.Configuration)#org/apache/parquet/schema/MessageType/MessageType(java.lang.String,java.util.List)
org/apache/hadoop/hive/ql/io/parquet/read/DataWritableReadSupport/resolveSchemaAccess(org.apache.parquet.schema.MessageType,org.apache.parquet.schema.MessageType,org.apache.parquet.hadoop.Configuration)#java/util/List/add(E)
org/apache/hadoop/hive/ql/io/parquet/read/DataWritableReadSupport/resolveSchemaAccess(org.apache.parquet.schema.MessageType,org.apache.parquet.schema.MessageType,org.apache.parquet.hadoop.Configuration)#org/apache/parquet/schema/GroupType/getFields()
org/apache/hadoop/hive/ql/io/parquet/read/DataWritableReadSupport/resolveSchemaAccess(org.apache.parquet.schema.MessageType,org.apache.parquet.schema.MessageType,org.apache.parquet.hadoop.Configuration)#org/apache/hadoop/hive/ql/io/parquet/read/DataWritableReadSupport/getColumns(java.lang.String)
org/apache/hadoop/hive/ql/io/parquet/read/DataWritableReadSupport/resolveSchemaAccess(org.apache.parquet.schema.MessageType,org.apache.parquet.schema.MessageType,org.apache.parquet.hadoop.Configuration)#org/apache/parquet/schema/GroupType/getType(int)
org/apache/hadoop/hive/ql/io/parquet/read/DataWritableReadSupport/resolveSchemaAccess(org.apache.parquet.schema.MessageType,org.apache.parquet.schema.MessageType,org.apache.parquet.hadoop.Configuration)#java/util/List/indexOf(java.lang.Object)
org/apache/hadoop/hive/ql/io/parquet/read/DataWritableReadSupport/init(org.apache.parquet.hadoop.Configuration,java.util.Map,org.apache.parquet.schema.MessageType)#org/apache/parquet/schema/Type/toString()
org/apache/hadoop/hive/ql/io/parquet/read/DataWritableReadSupport/init(org.apache.parquet.hadoop.Configuration,java.util.Map,org.apache.parquet.schema.MessageType)#java/util/ArrayList/ArrayList()
org/apache/hadoop/hive/ql/io/parquet/read/DataWritableReadSupport/init(org.apache.parquet.hadoop.Configuration,java.util.Map,org.apache.parquet.schema.MessageType)#org/apache/parquet/schema/Type/getName()
org/apache/hadoop/hive/ql/io/parquet/read/DataWritableReadSupport/init(org.apache.parquet.hadoop.Configuration,java.util.Map,org.apache.parquet.schema.MessageType)#org/apache/parquet/schema/PrimitiveType/PrimitiveType(org.apache.parquet.schema.Type.Repetition,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,java.lang.String)
org/apache/hadoop/hive/ql/io/parquet/read/DataWritableReadSupport/init(org.apache.parquet.hadoop.Configuration,java.util.Map,org.apache.parquet.schema.MessageType)#org/apache/hadoop/hive/ql/io/parquet/read/DataWritableReadSupport/resolveSchemaAccess(org.apache.parquet.schema.MessageType,org.apache.parquet.schema.MessageType,org.apache.parquet.hadoop.Configuration)
org/apache/hadoop/hive/ql/io/parquet/read/DataWritableReadSupport/init(org.apache.parquet.hadoop.Configuration,java.util.Map,org.apache.parquet.schema.MessageType)#java/util/HashMap/HashMap()
org/apache/hadoop/hive/ql/io/parquet/read/DataWritableReadSupport/init(org.apache.parquet.hadoop.Configuration,java.util.Map,org.apache.parquet.schema.MessageType)#org/apache/parquet/schema/GroupType/getType(java.lang.String)
org/apache/hadoop/hive/ql/io/parquet/read/DataWritableReadSupport/init(org.apache.parquet.hadoop.Configuration,java.util.Map,org.apache.parquet.schema.MessageType)#org/apache/parquet/schema/MessageType/MessageType(java.lang.String,java.util.List)
org/apache/hadoop/hive/ql/io/parquet/read/DataWritableReadSupport/init(org.apache.parquet.hadoop.Configuration,java.util.Map,org.apache.parquet.schema.MessageType)#java/util/List/add(E)
org/apache/hadoop/hive/ql/io/parquet/read/DataWritableReadSupport/init(org.apache.parquet.hadoop.Configuration,java.util.Map,org.apache.parquet.schema.MessageType)#java/util/List/get(int)
org/apache/hadoop/hive/ql/io/parquet/read/DataWritableReadSupport/init(org.apache.parquet.hadoop.Configuration,java.util.Map,org.apache.parquet.schema.MessageType)#java/util/Map/put(K,V)
org/apache/hadoop/hive/ql/io/parquet/read/DataWritableReadSupport/init(org.apache.parquet.hadoop.Configuration,java.util.Map,org.apache.parquet.schema.MessageType)#org/apache/hadoop/hive/ql/io/parquet/read/DataWritableReadSupport/getColumns(java.lang.String)
org/apache/hadoop/hive/ql/io/parquet/read/DataWritableReadSupport/init(org.apache.parquet.hadoop.Configuration,java.util.Map,org.apache.parquet.schema.MessageType)#org/apache/parquet/hadoop/api/ReadSupport/ReadContext/ReadContext(org.apache.parquet.schema.MessageType,java.util.Map)
org/apache/hadoop/hive/ql/io/parquet/read/DataWritableReadSupport/init(org.apache.parquet.hadoop.Configuration,java.util.Map,org.apache.parquet.schema.MessageType)#org/apache/parquet/schema/GroupType/containsField(java.lang.String)
org/apache/hadoop/hive/ql/io/parquet/read/DataWritableReadSupport/getColumns(java.lang.String)#org/apache/parquet/hive/HiveBindingFactory/create()
org/apache/hadoop/hive/ql/io/parquet/read/DataWritableReadSupport/getColumns(java.lang.String)#org/apache/parquet/hive/HiveBinding/getColumns(java.lang.String)
org/apache/hadoop/hive/ql/io/parquet/read/DataWritableReadSupport/getColumns(java.lang.String)#org/apache/parquet/hive/HiveBindingFactory/HiveBindingFactory()
org/apache/parquet/thrift/ThriftRecordConverter/GroupFieldhandler/start()#org/apache/parquet/io/api/GroupConverter/start()
org/apache/parquet/thrift/ThriftRecordConverter/GroupFieldhandler/getConverter(int)#org/apache/parquet/io/api/GroupConverter/getConverter(int)
org/apache/parquet/thrift/ThriftRecordConverter/GroupFieldhandler/end()#org/apache/parquet/io/api/GroupConverter/end()
org/apache/parquet/Log/getLog(java.lang.Class)#org/apache/parquet/Log/Log(java.lang.Class)
org/apache/parquet/Log/warn(java.lang.Object)#java/lang/String/valueOf(java.lang.Object)
org/apache/parquet/Log/warn(java.lang.Object,java.lang.Throwable)#java/lang/String/valueOf(java.lang.Object)
org/apache/parquet/Log/info(java.lang.Object,java.lang.Throwable)#java/lang/String/valueOf(java.lang.Object)
org/apache/parquet/Log/error(java.lang.Object)#java/lang/String/valueOf(java.lang.Object)
org/apache/parquet/Log/error(java.lang.Object,java.lang.Throwable)#java/lang/String/valueOf(java.lang.Object)
org/apache/parquet/Log/info(java.lang.Object)#java/lang/String/valueOf(java.lang.Object)
org/apache/parquet/Log/debug(java.lang.Object,java.lang.Throwable)#java/lang/String/valueOf(java.lang.Object)
org/apache/parquet/Log/debug(java.lang.Object)#java/lang/String/valueOf(java.lang.Object)
org/apache/parquet/pig/ParquetStorer/checkSchema(org.apache.parquet.pig.ResourceSchema)#java/util/Properties/setProperty(java.lang.String,java.lang.String)
org/apache/parquet/pig/ParquetStorer/checkSchema(org.apache.parquet.pig.ResourceSchema)#org/apache/parquet/pig/ParquetStorer/getProperties()
org/apache/parquet/pig/ParquetStorer/getProperties()#java/lang/Object/getClass()
org/apache/parquet/pig/ParquetStorer/putNext(org.apache.parquet.pig.Tuple)#java/lang/Thread/interrupted()
org/apache/parquet/pig/ParquetStorer/putNext(org.apache.parquet.pig.Tuple)#org/apache/parquet/io/ParquetEncodingException/ParquetEncodingException(java.lang.String,java.lang.Throwable)
org/apache/parquet/pig/ParquetStorer/getSchema()#java/util/Properties/getProperty(java.lang.String)
org/apache/parquet/pig/ParquetStorer/getSchema()#org/apache/parquet/pig/ParquetStorer/getProperties()
org/apache/parquet/pig/ParquetStorer/getSchema()#org/apache/parquet/io/ParquetEncodingException/ParquetEncodingException(java.lang.String)
org/apache/parquet/pig/ParquetStorer/getSchema()#org/apache/parquet/io/ParquetEncodingException/ParquetEncodingException(java.lang.String,java.lang.Throwable)
org/apache/parquet/pig/ParquetStorer/getOutputFormat()#org/apache/parquet/hadoop/ParquetOutputFormat/ParquetOutputFormat(S)
org/apache/parquet/pig/ParquetStorer/getOutputFormat()#org/apache/parquet/pig/TupleWriteSupport/TupleWriteSupport(org.apache.parquet.pig.Schema)
org/apache/parquet/pig/ParquetStorer/getOutputFormat()#org/apache/parquet/pig/ParquetStorer/getSchema()
org/apache/parquet/filter2/compat/FilterCompat/FilterPredicateCompat/accept(org.apache.parquet.filter2.compat.FilterCompat.Visitor)#org/apache/parquet/filter2/compat/FilterCompat/Visitor/visit(org.apache.parquet.filter2.compat.FilterCompat.FilterPredicateCompat)
org/apache/parquet/column/values/bitpacking/FourBitPackingReader/read()#java/io/InputStream/read()
org/apache/parquet/SemanticVersionTest/assertLessThan(java.lang.String,java.lang.String)#org/apache/parquet/SemanticVersion/compareTo(org.apache.parquet.SemanticVersion)
org/apache/parquet/SemanticVersionTest/assertLessThan(java.lang.String,java.lang.String)#org/apache/parquet/SemanticVersion/parse(java.lang.String)
org/apache/parquet/SemanticVersionTest/testUnknownComparisons()#org/apache/parquet/SemanticVersionTest/assertLessThan(java.lang.String,java.lang.String)
org/apache/parquet/SemanticVersionTest/testCompare()#org/apache/parquet/SemanticVersion/compareTo(org.apache.parquet.SemanticVersion)
org/apache/parquet/SemanticVersionTest/testCompare()#org/apache/parquet/SemanticVersion/SemanticVersion(int,int,int)
org/apache/parquet/SemanticVersionTest/testCompare()#org/apache/parquet/SemanticVersion/SemanticVersion(int,int,int,boolean)
org/apache/parquet/SemanticVersionTest/assertEqualTo(java.lang.String,java.lang.String)#org/apache/parquet/SemanticVersion/compareTo(org.apache.parquet.SemanticVersion)
org/apache/parquet/SemanticVersionTest/assertEqualTo(java.lang.String,java.lang.String)#org/apache/parquet/SemanticVersion/parse(java.lang.String)
org/apache/parquet/SemanticVersionTest/testDistributionVersions()#org/apache/parquet/SemanticVersionTest/assertLessThan(java.lang.String,java.lang.String)
org/apache/parquet/SemanticVersionTest/testDistributionVersions()#org/apache/parquet/SemanticVersionTest/assertEqualTo(java.lang.String,java.lang.String)
org/apache/parquet/SemanticVersionTest/testSemverBuildInfoExamples()#org/apache/parquet/SemanticVersionTest/assertEqualTo(java.lang.String,java.lang.String)
org/apache/parquet/SemanticVersionTest/testSemverPrereleaseExamples()#org/apache/parquet/SemanticVersionTest/assertLessThan(java.lang.String,java.lang.String)
org/apache/parquet/SemanticVersionTest/testSemverPrereleaseExamples()#java/util/List/size()
org/apache/parquet/SemanticVersionTest/testSemverPrereleaseExamples()#java/util/Arrays/asList(T[])
org/apache/parquet/SemanticVersionTest/testSemverPrereleaseExamples()#org/apache/parquet/SemanticVersionTest/assertEqualTo(java.lang.String,java.lang.String)
org/apache/parquet/SemanticVersionTest/testSemverPrereleaseExamples()#java/util/List/get(int)
org/apache/parquet/SemanticVersionTest/testParse()#org/apache/parquet/SemanticVersion/SemanticVersion(int,int,int,java.lang.String,java.lang.String,java.lang.String)
org/apache/parquet/SemanticVersionTest/testParse()#org/apache/parquet/SemanticVersion/SemanticVersion(int,int,int,boolean)
org/apache/parquet/SemanticVersionTest/testParse()#org/apache/parquet/SemanticVersion/SemanticVersion(int,int,int)
org/apache/parquet/SemanticVersionTest/testParse()#org/apache/parquet/SemanticVersion/parse(java.lang.String)
org/apache/parquet/format/converter/ParquetMetadataConverter/fromParquetSchema(java.util.List)#org/apache/parquet/schema/Types/buildMessage()
org/apache/parquet/format/converter/ParquetMetadataConverter/fromParquetSchema(java.util.List)#org/apache/parquet/schema/Types/MessageTypeBuilder/named(java.lang.String)
org/apache/parquet/format/converter/ParquetMetadataConverter/fromParquetSchema(java.util.List)#org/apache/parquet/format/converter/ParquetMetadataConverter/buildChildren(org.apache.parquet.schema.Types.GroupBuilder,java.util.Iterator,int)
org/apache/parquet/format/converter/ParquetMetadataConverter/addRowGroup(org.apache.parquet.hadoop.metadata.ParquetMetadata,java.util.List,org.apache.parquet.hadoop.metadata.BlockMetaData)#org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/getStatistics()
org/apache/parquet/format/converter/ParquetMetadataConverter/addRowGroup(org.apache.parquet.hadoop.metadata.ParquetMetadata,java.util.List,org.apache.parquet.hadoop.metadata.BlockMetaData)#org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/getPath()
org/apache/parquet/format/converter/ParquetMetadataConverter/addRowGroup(org.apache.parquet.hadoop.metadata.ParquetMetadata,java.util.List,org.apache.parquet.hadoop.metadata.BlockMetaData)#org/apache/parquet/format/converter/ParquetMetadataConverter/toParquetStatistics(org.apache.parquet.column.statistics.Statistics)
org/apache/parquet/format/converter/ParquetMetadataConverter/addRowGroup(org.apache.parquet.hadoop.metadata.ParquetMetadata,java.util.List,org.apache.parquet.hadoop.metadata.BlockMetaData)#org/apache/parquet/hadoop/metadata/BlockMetaData/getRowCount()
org/apache/parquet/format/converter/ParquetMetadataConverter/addRowGroup(org.apache.parquet.hadoop.metadata.ParquetMetadata,java.util.List,org.apache.parquet.hadoop.metadata.BlockMetaData)#org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/getCodec()
org/apache/parquet/format/converter/ParquetMetadataConverter/addRowGroup(org.apache.parquet.hadoop.metadata.ParquetMetadata,java.util.List,org.apache.parquet.hadoop.metadata.BlockMetaData)#java/util/Arrays/asList(T[])
org/apache/parquet/format/converter/ParquetMetadataConverter/addRowGroup(org.apache.parquet.hadoop.metadata.ParquetMetadata,java.util.List,org.apache.parquet.hadoop.metadata.BlockMetaData)#org/apache/parquet/format/converter/ParquetMetadataConverter/convertEncodingStats(org.apache.parquet.column.EncodingStats)
org/apache/parquet/format/converter/ParquetMetadataConverter/addRowGroup(org.apache.parquet.hadoop.metadata.ParquetMetadata,java.util.List,org.apache.parquet.hadoop.metadata.BlockMetaData)#org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/getFirstDataPageOffset()
org/apache/parquet/format/converter/ParquetMetadataConverter/addRowGroup(org.apache.parquet.hadoop.metadata.ParquetMetadata,java.util.List,org.apache.parquet.hadoop.metadata.BlockMetaData)#org/apache/parquet/column/statistics/Statistics/isEmpty()
org/apache/parquet/format/converter/ParquetMetadataConverter/addRowGroup(org.apache.parquet.hadoop.metadata.ParquetMetadata,java.util.List,org.apache.parquet.hadoop.metadata.BlockMetaData)#org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/getType()
org/apache/parquet/format/converter/ParquetMetadataConverter/addRowGroup(org.apache.parquet.hadoop.metadata.ParquetMetadata,java.util.List,org.apache.parquet.hadoop.metadata.BlockMetaData)#org/apache/parquet/hadoop/metadata/BlockMetaData/getColumns()
org/apache/parquet/format/converter/ParquetMetadataConverter/addRowGroup(org.apache.parquet.hadoop.metadata.ParquetMetadata,java.util.List,org.apache.parquet.hadoop.metadata.BlockMetaData)#org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/getEncodingStats()
org/apache/parquet/format/converter/ParquetMetadataConverter/addRowGroup(org.apache.parquet.hadoop.metadata.ParquetMetadata,java.util.List,org.apache.parquet.hadoop.metadata.BlockMetaData)#java/util/ArrayList/ArrayList()
org/apache/parquet/format/converter/ParquetMetadataConverter/addRowGroup(org.apache.parquet.hadoop.metadata.ParquetMetadata,java.util.List,org.apache.parquet.hadoop.metadata.BlockMetaData)#org/apache/parquet/hadoop/metadata/ColumnPath/toArray()
org/apache/parquet/format/converter/ParquetMetadataConverter/addRowGroup(org.apache.parquet.hadoop.metadata.ParquetMetadata,java.util.List,org.apache.parquet.hadoop.metadata.BlockMetaData)#org/apache/parquet/hadoop/metadata/BlockMetaData/getTotalByteSize()
org/apache/parquet/format/converter/ParquetMetadataConverter/addRowGroup(org.apache.parquet.hadoop.metadata.ParquetMetadata,java.util.List,org.apache.parquet.hadoop.metadata.BlockMetaData)#org/apache/parquet/hadoop/metadata/CompressionCodecName/getParquetCompressionCodec()
org/apache/parquet/format/converter/ParquetMetadataConverter/addRowGroup(org.apache.parquet.hadoop.metadata.ParquetMetadata,java.util.List,org.apache.parquet.hadoop.metadata.BlockMetaData)#org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/getTotalUncompressedSize()
org/apache/parquet/format/converter/ParquetMetadataConverter/addRowGroup(org.apache.parquet.hadoop.metadata.ParquetMetadata,java.util.List,org.apache.parquet.hadoop.metadata.BlockMetaData)#org/apache/parquet/format/converter/ParquetMetadataConverter/getType(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/format/converter/ParquetMetadataConverter/addRowGroup(org.apache.parquet.hadoop.metadata.ParquetMetadata,java.util.List,org.apache.parquet.hadoop.metadata.BlockMetaData)#org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/getEncodings()
org/apache/parquet/format/converter/ParquetMetadataConverter/addRowGroup(org.apache.parquet.hadoop.metadata.ParquetMetadata,java.util.List,org.apache.parquet.hadoop.metadata.BlockMetaData)#org/apache/parquet/format/converter/ParquetMetadataConverter/toFormatEncodings(java.util.Set)
org/apache/parquet/format/converter/ParquetMetadataConverter/addRowGroup(org.apache.parquet.hadoop.metadata.ParquetMetadata,java.util.List,org.apache.parquet.hadoop.metadata.BlockMetaData)#org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/getDictionaryPageOffset()
org/apache/parquet/format/converter/ParquetMetadataConverter/addRowGroup(org.apache.parquet.hadoop.metadata.ParquetMetadata,java.util.List,org.apache.parquet.hadoop.metadata.BlockMetaData)#org/apache/parquet/hadoop/metadata/BlockMetaData/getPath()
org/apache/parquet/format/converter/ParquetMetadataConverter/addRowGroup(org.apache.parquet.hadoop.metadata.ParquetMetadata,java.util.List,org.apache.parquet.hadoop.metadata.BlockMetaData)#org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/getTotalSize()
org/apache/parquet/format/converter/ParquetMetadataConverter/addRowGroup(org.apache.parquet.hadoop.metadata.ParquetMetadata,java.util.List,org.apache.parquet.hadoop.metadata.BlockMetaData)#org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/getValueCount()
org/apache/parquet/format/converter/ParquetMetadataConverter/addRowGroup(org.apache.parquet.hadoop.metadata.ParquetMetadata,java.util.List,org.apache.parquet.hadoop.metadata.BlockMetaData)#java/lang/Object/Object()
org/apache/parquet/format/converter/ParquetMetadataConverter/writeDataPageHeader(int,int,int,org.apache.parquet.column.statistics.Statistics,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding,java.io.OutputStream)#org/apache/parquet/format/converter/ParquetMetadataConverter/newDataPageHeader(int,int,int,org.apache.parquet.column.statistics.Statistics,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding)
org/apache/parquet/format/converter/ParquetMetadataConverter/convertEncodingStats(java.util.List)#org/apache/parquet/column/EncodingStats/Builder/addDictEncoding(org.apache.parquet.column.Encoding,int)
org/apache/parquet/format/converter/ParquetMetadataConverter/convertEncodingStats(java.util.List)#org/apache/parquet/column/EncodingStats/Builder/build()
org/apache/parquet/format/converter/ParquetMetadataConverter/convertEncodingStats(java.util.List)#org/apache/parquet/column/EncodingStats/Builder/addDataEncoding(org.apache.parquet.column.Encoding,int)
org/apache/parquet/format/converter/ParquetMetadataConverter/convertEncodingStats(java.util.List)#org/apache/parquet/column/EncodingStats/Builder/Builder()
org/apache/parquet/format/converter/ParquetMetadataConverter/convertEncodingStats(java.util.List)#org/apache/parquet/format/converter/ParquetMetadataConverter/getEncoding(org.apache.parquet.format.converter.Encoding)
org/apache/parquet/format/converter/ParquetMetadataConverter/convertEncodingStats(java.util.List)#org/apache/parquet/column/EncodingStats/Builder/withV2Pages()
org/apache/parquet/format/converter/ParquetMetadataConverter/sortOrder(org.apache.parquet.schema.PrimitiveType)#org/apache/parquet/schema/Type/getOriginalType()
org/apache/parquet/format/converter/ParquetMetadataConverter/sortOrder(org.apache.parquet.schema.PrimitiveType)#org/apache/parquet/schema/PrimitiveType/getPrimitiveTypeName()
org/apache/parquet/format/converter/ParquetMetadataConverter/sortOrder(org.apache.parquet.schema.PrimitiveType)#org/apache/parquet/format/converter/ParquetMetadataConverter/defaultSortOrder(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/format/converter/ParquetMetadataConverter/fromParquetMetadata(org.apache.parquet.format.converter.FileMetaData)#org/apache/parquet/hadoop/metadata/BlockMetaData/BlockMetaData()
org/apache/parquet/format/converter/ParquetMetadataConverter/fromParquetMetadata(org.apache.parquet.format.converter.FileMetaData)#org/apache/parquet/format/converter/ParquetMetadataConverter/fromParquetStatistics(java.lang.String,org.apache.parquet.format.converter.Statistics,org.apache.parquet.schema.PrimitiveType)
org/apache/parquet/format/converter/ParquetMetadataConverter/fromParquetMetadata(org.apache.parquet.format.converter.FileMetaData)#org/apache/parquet/hadoop/metadata/BlockMetaData/setTotalByteSize(long)
org/apache/parquet/format/converter/ParquetMetadataConverter/fromParquetMetadata(org.apache.parquet.format.converter.FileMetaData)#org/apache/parquet/format/converter/ParquetMetadataConverter/fromParquetSchema(java.util.List)
org/apache/parquet/format/converter/ParquetMetadataConverter/fromParquetMetadata(org.apache.parquet.format.converter.FileMetaData)#org/apache/parquet/hadoop/metadata/ColumnPath/toArray()
org/apache/parquet/format/converter/ParquetMetadataConverter/fromParquetMetadata(org.apache.parquet.format.converter.FileMetaData)#java/util/HashMap/HashMap()
org/apache/parquet/format/converter/ParquetMetadataConverter/fromParquetMetadata(org.apache.parquet.format.converter.FileMetaData)#org/apache/parquet/schema/Type/asPrimitiveType()
org/apache/parquet/format/converter/ParquetMetadataConverter/fromParquetMetadata(org.apache.parquet.format.converter.FileMetaData)#java/lang/String/equals(java.lang.Object)
org/apache/parquet/format/converter/ParquetMetadataConverter/fromParquetMetadata(org.apache.parquet.format.converter.FileMetaData)#org/apache/parquet/format/converter/ParquetMetadataConverter/convertEncodingStats(java.util.List)
org/apache/parquet/format/converter/ParquetMetadataConverter/fromParquetMetadata(org.apache.parquet.format.converter.FileMetaData)#org/apache/parquet/io/ParquetDecodingException/ParquetDecodingException(java.lang.String)
org/apache/parquet/format/converter/ParquetMetadataConverter/fromParquetMetadata(org.apache.parquet.format.converter.FileMetaData)#org/apache/parquet/hadoop/metadata/ParquetMetadata/ParquetMetadata(org.apache.parquet.hadoop.metadata.FileMetaData,java.util.List)
org/apache/parquet/format/converter/ParquetMetadataConverter/fromParquetMetadata(org.apache.parquet.format.converter.FileMetaData)#java/util/Map/put(K,V)
org/apache/parquet/format/converter/ParquetMetadataConverter/fromParquetMetadata(org.apache.parquet.format.converter.FileMetaData)#org/apache/parquet/schema/MessageType/getType(java.lang.String[])
org/apache/parquet/format/converter/ParquetMetadataConverter/fromParquetMetadata(org.apache.parquet.format.converter.FileMetaData)#org/apache/parquet/hadoop/metadata/BlockMetaData/setPath(java.lang.String)
org/apache/parquet/format/converter/ParquetMetadataConverter/fromParquetMetadata(org.apache.parquet.format.converter.FileMetaData)#java/util/ArrayList/ArrayList()
org/apache/parquet/format/converter/ParquetMetadataConverter/fromParquetMetadata(org.apache.parquet.format.converter.FileMetaData)#org/apache/parquet/hadoop/metadata/FileMetaData/FileMetaData(org.apache.parquet.schema.MessageType,java.util.Map,java.lang.String)
org/apache/parquet/format/converter/ParquetMetadataConverter/fromParquetMetadata(org.apache.parquet.format.converter.FileMetaData)#org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/get(org.apache.parquet.hadoop.metadata.ColumnPath,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.hadoop.metadata.CompressionCodecName,org.apache.parquet.column.EncodingStats,java.util.Set,org.apache.parquet.column.statistics.Statistics,long,long,long,long,long)
org/apache/parquet/format/converter/ParquetMetadataConverter/fromParquetMetadata(org.apache.parquet.format.converter.FileMetaData)#java/util/List/add(E)
org/apache/parquet/format/converter/ParquetMetadataConverter/fromParquetMetadata(org.apache.parquet.format.converter.FileMetaData)#org/apache/parquet/hadoop/metadata/CompressionCodecName/fromParquet(org.apache.parquet.hadoop.metadata.CompressionCodec)
org/apache/parquet/format/converter/ParquetMetadataConverter/fromParquetMetadata(org.apache.parquet.format.converter.FileMetaData)#org/apache/parquet/hadoop/metadata/BlockMetaData/addColumn(org.apache.parquet.hadoop.metadata.ColumnChunkMetaData)
org/apache/parquet/format/converter/ParquetMetadataConverter/fromParquetMetadata(org.apache.parquet.format.converter.FileMetaData)#org/apache/parquet/schema/PrimitiveType/getPrimitiveTypeName()
org/apache/parquet/format/converter/ParquetMetadataConverter/fromParquetMetadata(org.apache.parquet.format.converter.FileMetaData)#org/apache/parquet/hadoop/metadata/BlockMetaData/setRowCount(long)
org/apache/parquet/format/converter/ParquetMetadataConverter/fromParquetMetadata(org.apache.parquet.format.converter.FileMetaData)#org/apache/parquet/format/converter/ParquetMetadataConverter/getPath(org.apache.parquet.format.converter.ColumnMetaData)
org/apache/parquet/format/converter/ParquetMetadataConverter/fromParquetMetadata(org.apache.parquet.format.converter.FileMetaData)#org/apache/parquet/format/converter/ParquetMetadataConverter/fromFormatEncodings(java.util.List)
org/apache/parquet/format/converter/ParquetMetadataConverter/offsets(long[])#java/util/Set/add(E)
org/apache/parquet/format/converter/ParquetMetadataConverter/offsets(long[])#java/util/HashSet/HashSet()
org/apache/parquet/format/converter/ParquetMetadataConverter/offsets(long[])#org/apache/parquet/format/converter/ParquetMetadataConverter/OffsetMetadataFilter/OffsetMetadataFilter(java.util.Set)
org/apache/parquet/format/converter/ParquetMetadataConverter/writeDictionaryPageHeader(int,int,int,org.apache.parquet.column.Encoding,java.io.OutputStream)#org/apache/parquet/format/converter/ParquetMetadataConverter/getEncoding(org.apache.parquet.column.Encoding)
org/apache/parquet/format/converter/ParquetMetadataConverter/writeDictionaryPageHeader(int,int,int,org.apache.parquet.column.Encoding,java.io.OutputStream)#java/lang/Object/Object()
org/apache/parquet/format/converter/ParquetMetadataConverter/fromParquetStatistics(java.lang.String,org.apache.parquet.format.converter.Statistics,org.apache.parquet.schema.PrimitiveType)#org/apache/parquet/format/converter/ParquetMetadataConverter/overrideSortOrderToSigned(org.apache.parquet.schema.PrimitiveType)
org/apache/parquet/format/converter/ParquetMetadataConverter/fromParquetStatistics(java.lang.String,org.apache.parquet.format.converter.Statistics,org.apache.parquet.schema.PrimitiveType)#org/apache/parquet/format/converter/ParquetMetadataConverter/sortOrder(org.apache.parquet.schema.PrimitiveType)
org/apache/parquet/format/converter/ParquetMetadataConverter/fromParquetStatistics(java.lang.String,org.apache.parquet.format.converter.Statistics,org.apache.parquet.schema.PrimitiveType)#org/apache/parquet/schema/PrimitiveType/getPrimitiveTypeName()
org/apache/parquet/format/converter/ParquetMetadataConverter/fromParquetStatistics(java.lang.String,org.apache.parquet.format.converter.Statistics,org.apache.parquet.schema.PrimitiveType)#org/apache/parquet/format/converter/ParquetMetadataConverter/fromParquetStatisticsInternal(java.lang.String,org.apache.parquet.format.converter.Statistics,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.format.converter.ParquetMetadataConverter.SortOrder)
org/apache/parquet/format/converter/ParquetMetadataConverter/getConvertedType(org.apache.parquet.schema.OriginalType)#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/apache/parquet/format/converter/ParquetMetadataConverter/fromParquetStatistics(java.lang.String,org.apache.parquet.format.converter.Statistics,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)#org/apache/parquet/format/converter/ParquetMetadataConverter/fromParquetStatisticsInternal(java.lang.String,org.apache.parquet.format.converter.Statistics,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.format.converter.ParquetMetadataConverter.SortOrder)
org/apache/parquet/format/converter/ParquetMetadataConverter/fromParquetStatistics(java.lang.String,org.apache.parquet.format.converter.Statistics,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)#org/apache/parquet/format/converter/ParquetMetadataConverter/defaultSortOrder(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/format/converter/ParquetMetadataConverter/toParquetStatistics(org.apache.parquet.column.statistics.Statistics)#org/apache/parquet/column/statistics/Statistics/hasNonNullValue()
org/apache/parquet/format/converter/ParquetMetadataConverter/toParquetStatistics(org.apache.parquet.column.statistics.Statistics)#org/apache/parquet/column/statistics/Statistics/getNumNulls()
org/apache/parquet/format/converter/ParquetMetadataConverter/toParquetStatistics(org.apache.parquet.column.statistics.Statistics)#org/apache/parquet/column/statistics/Statistics/getMaxBytes()
org/apache/parquet/format/converter/ParquetMetadataConverter/toParquetStatistics(org.apache.parquet.column.statistics.Statistics)#org/apache/parquet/column/statistics/Statistics/isEmpty()
org/apache/parquet/format/converter/ParquetMetadataConverter/toParquetStatistics(org.apache.parquet.column.statistics.Statistics)#org/apache/parquet/column/statistics/Statistics/isSmallerThan(long)
org/apache/parquet/format/converter/ParquetMetadataConverter/toParquetStatistics(org.apache.parquet.column.statistics.Statistics)#org/apache/parquet/column/statistics/Statistics/getMinBytes()
org/apache/parquet/format/converter/ParquetMetadataConverter/newDataPageV2Header(int,int,int,int,int,org.apache.parquet.column.statistics.Statistics,org.apache.parquet.column.Encoding,int,int)#org/apache/parquet/format/converter/ParquetMetadataConverter/toParquetStatistics(org.apache.parquet.column.statistics.Statistics)
org/apache/parquet/format/converter/ParquetMetadataConverter/newDataPageV2Header(int,int,int,int,int,org.apache.parquet.column.statistics.Statistics,org.apache.parquet.column.Encoding,int,int)#org/apache/parquet/format/converter/ParquetMetadataConverter/getEncoding(org.apache.parquet.column.Encoding)
org/apache/parquet/format/converter/ParquetMetadataConverter/newDataPageV2Header(int,int,int,int,int,org.apache.parquet.column.statistics.Statistics,org.apache.parquet.column.Encoding,int,int)#org/apache/parquet/column/statistics/Statistics/isEmpty()
org/apache/parquet/format/converter/ParquetMetadataConverter/newDataPageV2Header(int,int,int,int,int,org.apache.parquet.column.statistics.Statistics,org.apache.parquet.column.Encoding,int,int)#java/lang/Object/Object()
org/apache/parquet/format/converter/ParquetMetadataConverter/addToList(java.util.List,org.apache.parquet.schema.Type)#org/apache/parquet/format/converter/ParquetMetadataConverter/addToList(java/util/List,org/apache/parquet/schema/Type)/$anonymous1/()
org/apache/parquet/format/converter/ParquetMetadataConverter/addToList(java.util.List,org.apache.parquet.schema.Type)#org/apache/parquet/schema/Type/accept(org.apache.parquet.schema.TypeVisitor)
org/apache/parquet/format/converter/ParquetMetadataConverter/overrideSortOrderToSigned(org.apache.parquet.schema.PrimitiveType)#org/apache/parquet/schema/Type/getOriginalType()
org/apache/parquet/format/converter/ParquetMetadataConverter/overrideSortOrderToSigned(org.apache.parquet.schema.PrimitiveType)#java/util/Set/contains(java.lang.Object)
org/apache/parquet/format/converter/ParquetMetadataConverter/overrideSortOrderToSigned(org.apache.parquet.schema.PrimitiveType)#org/apache/parquet/schema/PrimitiveType/getPrimitiveTypeName()
org/apache/parquet/format/converter/ParquetMetadataConverter/toParquetSchema(org.apache.parquet.schema.MessageType)#java/util/ArrayList/ArrayList()
org/apache/parquet/format/converter/ParquetMetadataConverter/toParquetSchema(org.apache.parquet.schema.MessageType)#org/apache/parquet/format/converter/ParquetMetadataConverter/addToList(java.util.List,org.apache.parquet.schema.Type)
org/apache/parquet/format/converter/ParquetMetadataConverter/writeDataPageHeader(int,int,int,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding,java.io.OutputStream)#org/apache/parquet/column/statistics/BooleanStatistics/BooleanStatistics()
org/apache/parquet/format/converter/ParquetMetadataConverter/writeDataPageHeader(int,int,int,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding,java.io.OutputStream)#org/apache/parquet/format/converter/ParquetMetadataConverter/newDataPageHeader(int,int,int,org.apache.parquet.column.statistics.Statistics,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding)
org/apache/parquet/format/converter/ParquetMetadataConverter/toParquetMetadata(int,org.apache.parquet.hadoop.metadata.ParquetMetadata)#org/apache/parquet/hadoop/metadata/FileMetaData/getCreatedBy()
org/apache/parquet/format/converter/ParquetMetadataConverter/toParquetMetadata(int,org.apache.parquet.hadoop.metadata.ParquetMetadata)#java/util/ArrayList/ArrayList()
org/apache/parquet/format/converter/ParquetMetadataConverter/toParquetMetadata(int,org.apache.parquet.hadoop.metadata.ParquetMetadata)#org/apache/parquet/hadoop/metadata/ParquetMetadata/getBlocks()
org/apache/parquet/format/converter/ParquetMetadataConverter/toParquetMetadata(int,org.apache.parquet.hadoop.metadata.ParquetMetadata)#java/util/Map/Entry/getValue()
org/apache/parquet/format/converter/ParquetMetadataConverter/toParquetMetadata(int,org.apache.parquet.hadoop.metadata.ParquetMetadata)#org/apache/parquet/hadoop/metadata/ParquetMetadata/getFileMetaData()
org/apache/parquet/format/converter/ParquetMetadataConverter/toParquetMetadata(int,org.apache.parquet.hadoop.metadata.ParquetMetadata)#org/apache/parquet/format/converter/ParquetMetadataConverter/toParquetSchema(org.apache.parquet.schema.MessageType)
org/apache/parquet/format/converter/ParquetMetadataConverter/toParquetMetadata(int,org.apache.parquet.hadoop.metadata.ParquetMetadata)#org/apache/parquet/hadoop/metadata/BlockMetaData/getRowCount()
org/apache/parquet/format/converter/ParquetMetadataConverter/toParquetMetadata(int,org.apache.parquet.hadoop.metadata.ParquetMetadata)#org/apache/parquet/format/converter/ParquetMetadataConverter/addRowGroup(org.apache.parquet.hadoop.metadata.ParquetMetadata,java.util.List,org.apache.parquet.hadoop.metadata.BlockMetaData)
org/apache/parquet/format/converter/ParquetMetadataConverter/toParquetMetadata(int,org.apache.parquet.hadoop.metadata.ParquetMetadata)#org/apache/parquet/format/converter/ParquetMetadataConverter/addKeyValue(org.apache.parquet.format.converter.FileMetaData,java.lang.String,java.lang.String)
org/apache/parquet/format/converter/ParquetMetadataConverter/toParquetMetadata(int,org.apache.parquet.hadoop.metadata.ParquetMetadata)#java/util/Map/Entry/getKey()
org/apache/parquet/format/converter/ParquetMetadataConverter/toParquetMetadata(int,org.apache.parquet.hadoop.metadata.ParquetMetadata)#java/util/Map/entrySet()
org/apache/parquet/format/converter/ParquetMetadataConverter/toParquetMetadata(int,org.apache.parquet.hadoop.metadata.ParquetMetadata)#java/lang/Object/Object()
org/apache/parquet/format/converter/ParquetMetadataConverter/toParquetMetadata(int,org.apache.parquet.hadoop.metadata.ParquetMetadata)#org/apache/parquet/hadoop/metadata/FileMetaData/getSchema()
org/apache/parquet/format/converter/ParquetMetadataConverter/toParquetMetadata(int,org.apache.parquet.hadoop.metadata.ParquetMetadata)#org/apache/parquet/hadoop/metadata/FileMetaData/getKeyValueMetaData()
org/apache/parquet/format/converter/ParquetMetadataConverter/getEncoding(org.apache.parquet.column.Encoding)#java/lang/Enum/name()
org/apache/parquet/format/converter/ParquetMetadataConverter/newDataPageHeader(int,int,int,org.apache.parquet.column.statistics.Statistics,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding)#org/apache/parquet/format/converter/ParquetMetadataConverter/toParquetStatistics(org.apache.parquet.column.statistics.Statistics)
org/apache/parquet/format/converter/ParquetMetadataConverter/newDataPageHeader(int,int,int,org.apache.parquet.column.statistics.Statistics,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding)#org/apache/parquet/format/converter/ParquetMetadataConverter/getEncoding(org.apache.parquet.column.Encoding)
org/apache/parquet/format/converter/ParquetMetadataConverter/newDataPageHeader(int,int,int,org.apache.parquet.column.statistics.Statistics,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding)#org/apache/parquet/column/statistics/Statistics/isEmpty()
org/apache/parquet/format/converter/ParquetMetadataConverter/newDataPageHeader(int,int,int,org.apache.parquet.column.statistics.Statistics,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding)#java/lang/Object/Object()
org/apache/parquet/format/converter/ParquetMetadataConverter/buildChildren(org.apache.parquet.schema.Types.GroupBuilder,java.util.Iterator,int)#org/apache/parquet/schema/Types/Builder/named(java.lang.String)
org/apache/parquet/format/converter/ParquetMetadataConverter/buildChildren(org.apache.parquet.schema.Types.GroupBuilder,java.util.Iterator,int)#org/apache/parquet/schema/Types/BasePrimitiveBuilder/scale(int)
org/apache/parquet/format/converter/ParquetMetadataConverter/buildChildren(org.apache.parquet.schema.Types.GroupBuilder,java.util.Iterator,int)#org/apache/parquet/schema/Types/Builder/as(org.apache.parquet.schema.OriginalType)
org/apache/parquet/format/converter/ParquetMetadataConverter/buildChildren(org.apache.parquet.schema.Types.GroupBuilder,java.util.Iterator,int)#org/apache/parquet/format/converter/ParquetMetadataConverter/buildChildren(org.apache.parquet.schema.Types.GroupBuilder,java.util.Iterator,int)
org/apache/parquet/format/converter/ParquetMetadataConverter/buildChildren(org.apache.parquet.schema.Types.GroupBuilder,java.util.Iterator,int)#org/apache/parquet/format/converter/ParquetMetadataConverter/getOriginalType(org.apache.parquet.format.converter.ConvertedType)
org/apache/parquet/format/converter/ParquetMetadataConverter/buildChildren(org.apache.parquet.schema.Types.GroupBuilder,java.util.Iterator,int)#org/apache/parquet/schema/Types/BaseGroupBuilder/group(org.apache.parquet.schema.Type.Repetition)
org/apache/parquet/format/converter/ParquetMetadataConverter/buildChildren(org.apache.parquet.schema.Types.GroupBuilder,java.util.Iterator,int)#org/apache/parquet/format/converter/ParquetMetadataConverter/getPrimitive(org.apache.parquet.format.converter.Type)
org/apache/parquet/format/converter/ParquetMetadataConverter/buildChildren(org.apache.parquet.schema.Types.GroupBuilder,java.util.Iterator,int)#org/apache/parquet/schema/Types/Builder/id(int)
org/apache/parquet/format/converter/ParquetMetadataConverter/buildChildren(org.apache.parquet.schema.Types.GroupBuilder,java.util.Iterator,int)#org/apache/parquet/format/converter/ParquetMetadataConverter/fromParquetRepetition(org.apache.parquet.format.converter.FieldRepetitionType)
org/apache/parquet/format/converter/ParquetMetadataConverter/buildChildren(org.apache.parquet.schema.Types.GroupBuilder,java.util.Iterator,int)#org/apache/parquet/schema/Types/BasePrimitiveBuilder/length(int)
org/apache/parquet/format/converter/ParquetMetadataConverter/buildChildren(org.apache.parquet.schema.Types.GroupBuilder,java.util.Iterator,int)#org/apache/parquet/schema/Types/BaseGroupBuilder/primitive(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.schema.Type.Repetition)
org/apache/parquet/format/converter/ParquetMetadataConverter/buildChildren(org.apache.parquet.schema.Types.GroupBuilder,java.util.Iterator,int)#org/apache/parquet/schema/Types/BasePrimitiveBuilder/precision(int)
org/apache/parquet/format/converter/ParquetMetadataConverter/readParquetMetadata(java.io.InputStream)#org/apache/parquet/format/converter/ParquetMetadataConverter/readParquetMetadata(java.io.InputStream,org.apache.parquet.format.converter.ParquetMetadataConverter.MetadataFilter)
org/apache/parquet/format/converter/ParquetMetadataConverter/getOffset(org.apache.parquet.format.converter.RowGroup)#org/apache/parquet/format/converter/ParquetMetadataConverter/getOffset(org.apache.parquet.format.converter.RowGroup)
org/apache/parquet/format/converter/ParquetMetadataConverter/getOriginalType(org.apache.parquet.format.converter.ConvertedType)#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/apache/parquet/format/converter/ParquetMetadataConverter/convertEncodingStats(org.apache.parquet.column.EncodingStats)#org/apache/parquet/column/EncodingStats/getNumDataPagesEncodedAs(org.apache.parquet.column.Encoding)
org/apache/parquet/format/converter/ParquetMetadataConverter/convertEncodingStats(org.apache.parquet.column.EncodingStats)#java/util/ArrayList/ArrayList()
org/apache/parquet/format/converter/ParquetMetadataConverter/convertEncodingStats(org.apache.parquet.column.EncodingStats)#org/apache/parquet/column/EncodingStats/getDataEncodings()
org/apache/parquet/format/converter/ParquetMetadataConverter/convertEncodingStats(org.apache.parquet.column.EncodingStats)#org/apache/parquet/column/EncodingStats/usesV2Pages()
org/apache/parquet/format/converter/ParquetMetadataConverter/convertEncodingStats(org.apache.parquet.column.EncodingStats)#org/apache/parquet/column/EncodingStats/getDictionaryEncodings()
org/apache/parquet/format/converter/ParquetMetadataConverter/convertEncodingStats(org.apache.parquet.column.EncodingStats)#java/lang/Object/Object()
org/apache/parquet/format/converter/ParquetMetadataConverter/convertEncodingStats(org.apache.parquet.column.EncodingStats)#org/apache/parquet/column/EncodingStats/getNumDictionaryPagesEncodedAs(org.apache.parquet.column.Encoding)
org/apache/parquet/format/converter/ParquetMetadataConverter/convertEncodingStats(org.apache.parquet.column.EncodingStats)#org/apache/parquet/format/converter/ParquetMetadataConverter/getEncoding(org.apache.parquet.column.Encoding)
org/apache/parquet/format/converter/ParquetMetadataConverter/readParquetMetadata(java.io.InputStream,org.apache.parquet.format.converter.ParquetMetadataConverter.MetadataFilter)#org/apache/parquet/format/converter/ParquetMetadataConverter/MetadataFilter/accept(org.apache.parquet.format.converter.ParquetMetadataConverter.MetadataFilterVisitor)
org/apache/parquet/format/converter/ParquetMetadataConverter/readParquetMetadata(java.io.InputStream,org.apache.parquet.format.converter.ParquetMetadataConverter.MetadataFilter)#org/apache/parquet/hadoop/metadata/ParquetMetadata/toPrettyJSON(org.apache.parquet.hadoop.metadata.ParquetMetadata)
org/apache/parquet/format/converter/ParquetMetadataConverter/readParquetMetadata(java.io.InputStream,org.apache.parquet.format.converter.ParquetMetadataConverter.MetadataFilter)#org/apache/parquet/format/converter/ParquetMetadataConverter/fromParquetMetadata(org.apache.parquet.format.converter.FileMetaData)
org/apache/parquet/format/converter/ParquetMetadataConverter/readParquetMetadata(java.io.InputStream,org.apache.parquet.format.converter.ParquetMetadataConverter.MetadataFilter)#org/apache/parquet/format/converter/ParquetMetadataConverter/readParquetMetadata(java/io/InputStream,org/apache/parquet/format/converter/ParquetMetadataConverter/MetadataFilter)/$anonymous1/()
org/apache/parquet/format/converter/ParquetMetadataConverter/toParquetRepetition(org.apache.parquet.schema.Type.Repetition)#java/lang/Enum/name()
org/apache/parquet/format/converter/ParquetMetadataConverter/writeDataPageV2Header(int,int,int,int,int,org.apache.parquet.column.statistics.Statistics,org.apache.parquet.column.Encoding,int,int,java.io.OutputStream)#org/apache/parquet/format/converter/ParquetMetadataConverter/newDataPageV2Header(int,int,int,int,int,org.apache.parquet.column.statistics.Statistics,org.apache.parquet.column.Encoding,int,int)
org/apache/parquet/format/converter/ParquetMetadataConverter/getType(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/apache/parquet/format/converter/ParquetMetadataConverter/toFormatEncodings(java.util.Set)#java/util/ArrayList/ArrayList(int)
org/apache/parquet/format/converter/ParquetMetadataConverter/toFormatEncodings(java.util.Set)#java/util/Set/size()
org/apache/parquet/format/converter/ParquetMetadataConverter/toFormatEncodings(java.util.Set)#org/apache/parquet/format/converter/ParquetMetadataConverter/getEncoding(org.apache.parquet.column.Encoding)
org/apache/parquet/format/converter/ParquetMetadataConverter/filterFileMetaDataByMidpoint(org.apache.parquet.format.converter.FileMetaData,org.apache.parquet.format.converter.ParquetMetadataConverter.RangeMetadataFilter)#java/util/ArrayList/ArrayList()
org/apache/parquet/format/converter/ParquetMetadataConverter/filterFileMetaDataByMidpoint(org.apache.parquet.format.converter.FileMetaData,org.apache.parquet.format.converter.ParquetMetadataConverter.RangeMetadataFilter)#org/apache/parquet/format/converter/ParquetMetadataConverter/RangeMetadataFilter/contains(long)
org/apache/parquet/format/converter/ParquetMetadataConverter/filterFileMetaDataByMidpoint(org.apache.parquet.format.converter.FileMetaData,org.apache.parquet.format.converter.ParquetMetadataConverter.RangeMetadataFilter)#org/apache/parquet/format/converter/ParquetMetadataConverter/getOffset(org.apache.parquet.format.converter.RowGroup)
org/apache/parquet/format/converter/ParquetMetadataConverter/getPrimitive(org.apache.parquet.format.converter.Type)#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/apache/parquet/format/converter/ParquetMetadataConverter/filterFileMetaDataByStart(org.apache.parquet.format.converter.FileMetaData,org.apache.parquet.format.converter.ParquetMetadataConverter.OffsetMetadataFilter)#java/util/ArrayList/ArrayList()
org/apache/parquet/format/converter/ParquetMetadataConverter/filterFileMetaDataByStart(org.apache.parquet.format.converter.FileMetaData,org.apache.parquet.format.converter.ParquetMetadataConverter.OffsetMetadataFilter)#org/apache/parquet/format/converter/ParquetMetadataConverter/getOffset(org.apache.parquet.format.converter.RowGroup)
org/apache/parquet/format/converter/ParquetMetadataConverter/filterFileMetaDataByStart(org.apache.parquet.format.converter.FileMetaData,org.apache.parquet.format.converter.ParquetMetadataConverter.OffsetMetadataFilter)#org/apache/parquet/format/converter/ParquetMetadataConverter/OffsetMetadataFilter/contains(long)
org/apache/parquet/format/converter/ParquetMetadataConverter/fromParquetStatisticsInternal(java.lang.String,org.apache.parquet.format.converter.Statistics,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.format.converter.ParquetMetadataConverter.SortOrder)#org/apache/parquet/column/statistics/Statistics/setNumNulls(long)
org/apache/parquet/format/converter/ParquetMetadataConverter/fromParquetStatisticsInternal(java.lang.String,org.apache.parquet.format.converter.Statistics,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.format.converter.ParquetMetadataConverter.SortOrder)#org/apache/parquet/column/statistics/Statistics/setMinMaxFromBytes(byte[],byte[])
org/apache/parquet/format/converter/ParquetMetadataConverter/fromParquetStatisticsInternal(java.lang.String,org.apache.parquet.format.converter.Statistics,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.format.converter.ParquetMetadataConverter.SortOrder)#org/apache/parquet/column/statistics/Statistics/getStatsBasedOnType(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/format/converter/ParquetMetadataConverter/fromParquetStatisticsInternal(java.lang.String,org.apache.parquet.format.converter.Statistics,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.format.converter.ParquetMetadataConverter.SortOrder)#org/apache/parquet/CorruptStatistics/shouldIgnoreStatistics(java.lang.String,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/format/converter/ParquetMetadataConverter/fromParquetStatistics(org.apache.parquet.format.converter.Statistics,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)#org/apache/parquet/format/converter/ParquetMetadataConverter/fromParquetStatistics(java.lang.String,org.apache.parquet.format.converter.Statistics,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/format/converter/ParquetMetadataConverter/fromParquetRepetition(org.apache.parquet.format.converter.FieldRepetitionType)#org/apache/parquet/schema/Type/Repetition/valueOf(java.lang.String)
org/apache/parquet/format/converter/ParquetMetadataConverter/getPath(org.apache.parquet.format.converter.ColumnMetaData)#org/apache/parquet/hadoop/metadata/ColumnPath/get(java.lang.String[])
org/apache/parquet/format/converter/ParquetMetadataConverter/getEncoding(org.apache.parquet.format.converter.Encoding)#org/apache/parquet/column/Encoding/valueOf(java.lang.String)
org/apache/parquet/format/converter/ParquetMetadataConverter/fromFormatEncodings(java.util.List)#java/util/concurrent/ConcurrentHashMap/putIfAbsent(K,V)
org/apache/parquet/format/converter/ParquetMetadataConverter/fromFormatEncodings(java.util.List)#java/util/Set/add(E)
org/apache/parquet/format/converter/ParquetMetadataConverter/fromFormatEncodings(java.util.List)#java/util/HashSet/HashSet()
org/apache/parquet/format/converter/ParquetMetadataConverter/fromFormatEncodings(java.util.List)#java/util/Collections/unmodifiableSet(java.util.Set)
org/apache/parquet/format/converter/ParquetMetadataConverter/fromFormatEncodings(java.util.List)#org/apache/parquet/format/converter/ParquetMetadataConverter/getEncoding(org.apache.parquet.format.converter.Encoding)
org/apache/parquet/format/converter/ParquetMetadataConverter/range(long,long)#org/apache/parquet/format/converter/ParquetMetadataConverter/RangeMetadataFilter/RangeMetadataFilter(long,long)
org/apache/parquet/io/PerfTest/read(org.apache.parquet.column.page.mem.MemPageStore,org.apache.parquet.schema.MessageType,java.lang.String)#org/apache/parquet/io/PerfTest/read(org.apache.parquet.io.RecordReader,int,org.apache.parquet.schema.MessageType)
org/apache/parquet/io/PerfTest/read(org.apache.parquet.column.page.mem.MemPageStore,org.apache.parquet.schema.MessageType,java.lang.String)#java/io/PrintStream/println(java.lang.String)
org/apache/parquet/io/PerfTest/read(org.apache.parquet.column.page.mem.MemPageStore,org.apache.parquet.schema.MessageType,java.lang.String)#java/io/PrintStream/println()
org/apache/parquet/io/PerfTest/read(org.apache.parquet.column.page.mem.MemPageStore,org.apache.parquet.schema.MessageType,java.lang.String)#org/apache/parquet/io/MessageColumnIO/getRecordReader(org.apache.parquet.column.page.PageReadStore,org.apache.parquet.io.api.RecordMaterializer)
org/apache/parquet/io/PerfTest/read(org.apache.parquet.column.page.mem.MemPageStore,org.apache.parquet.schema.MessageType,java.lang.String)#org/apache/parquet/example/DummyRecordConverter/DummyRecordConverter(org.apache.parquet.schema.MessageType)
org/apache/parquet/io/PerfTest/read(org.apache.parquet.column.page.mem.MemPageStore,org.apache.parquet.schema.MessageType,java.lang.String)#org/apache/parquet/io/PerfTest/newColumnFactory(org.apache.parquet.schema.MessageType)
org/apache/parquet/io/PerfTest/write(org.apache.parquet.column.page.mem.MemPageStore,org.apache.parquet.example.data.GroupWriter,int)#org/apache/parquet/example/data/GroupWriter/write(org.apache.parquet.example.data.Group)
org/apache/parquet/io/PerfTest/write(org.apache.parquet.column.page.mem.MemPageStore,org.apache.parquet.example.data.GroupWriter,int)#org/apache/parquet/column/page/mem/MemPageStore/addRowCount(long)
org/apache/parquet/io/PerfTest/write(org.apache.parquet.column.page.mem.MemPageStore,org.apache.parquet.example.data.GroupWriter,int)#java/io/PrintStream/printf(java.lang.String,java.lang.Object[])
org/apache/parquet/io/PerfTest/write(org.apache.parquet.column.page.mem.MemPageStore,org.apache.parquet.example.data.GroupWriter,int)#java/lang/System/currentTimeMillis()
org/apache/parquet/io/PerfTest/read(org.apache.parquet.io.RecordReader,int,org.apache.parquet.schema.MessageType)#java/io/PrintStream/print(java.lang.String)
org/apache/parquet/io/PerfTest/read(org.apache.parquet.io.RecordReader,int,org.apache.parquet.schema.MessageType)#org/apache/parquet/io/RecordReader/read()
org/apache/parquet/io/PerfTest/read(org.apache.parquet.io.RecordReader,int,org.apache.parquet.schema.MessageType)#java/lang/System/currentTimeMillis()
org/apache/parquet/io/PerfTest/read(org.apache.parquet.io.RecordReader,int,org.apache.parquet.schema.MessageType)#java/lang/Object/equals(java.lang.Object)
org/apache/parquet/io/PerfTest/read(org.apache.parquet.io.RecordReader,int,org.apache.parquet.schema.MessageType)#java/lang/System/gc()
org/apache/parquet/io/PerfTest/read(org.apache.parquet.io.RecordReader,int,org.apache.parquet.schema.MessageType)#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/apache/parquet/io/PerfTest/read(org.apache.parquet.io.RecordReader,int,org.apache.parquet.schema.MessageType)#java/io/PrintStream/printf(java.lang.String,java.lang.Object[])
org/apache/parquet/io/PerfTest/main(java.lang.String[])#org/apache/parquet/column/page/mem/MemPageStore/MemPageStore(long)
org/apache/parquet/io/PerfTest/main(java.lang.String[])#org/apache/parquet/io/PerfTest/read(org.apache.parquet.column.page.mem.MemPageStore)
org/apache/parquet/io/PerfTest/main(java.lang.String[])#org/apache/parquet/io/PerfTest/write(org.apache.parquet.column.page.mem.MemPageStore)
org/apache/parquet/io/PerfTest/read(org.apache.parquet.column.page.mem.MemPageStore)#org/apache/parquet/io/PerfTest/read(org.apache.parquet.column.page.mem.MemPageStore,org.apache.parquet.schema.MessageType,java.lang.String)
org/apache/parquet/io/PerfTest/newColumnFactory(org.apache.parquet.schema.MessageType)#org/apache/parquet/io/ColumnIOFactory/getColumnIO(org.apache.parquet.schema.MessageType)
org/apache/parquet/io/PerfTest/newColumnFactory(org.apache.parquet.schema.MessageType)#org/apache/parquet/io/ColumnIOFactory/ColumnIOFactory()
org/apache/parquet/io/PerfTest/write(org.apache.parquet.column.page.mem.MemPageStore)#org/apache/parquet/column/impl/ColumnWriteStoreV1/maxColMemSize()
org/apache/parquet/io/PerfTest/write(org.apache.parquet.column.page.mem.MemPageStore)#org/apache/parquet/column/ParquetProperties/builder()
org/apache/parquet/io/PerfTest/write(org.apache.parquet.column.page.mem.MemPageStore)#org/apache/parquet/column/impl/ColumnWriteStoreV1/flush()
org/apache/parquet/io/PerfTest/write(org.apache.parquet.column.page.mem.MemPageStore)#java/io/PrintStream/println()
org/apache/parquet/io/PerfTest/write(org.apache.parquet.column.page.mem.MemPageStore)#org/apache/parquet/column/impl/ColumnWriteStoreV1/ColumnWriteStoreV1(org.apache.parquet.column.page.PageWriteStore,org.apache.parquet.column.ParquetProperties)
org/apache/parquet/io/PerfTest/write(org.apache.parquet.column.page.mem.MemPageStore)#org/apache/parquet/column/ParquetProperties/Builder/withDictionaryEncoding(boolean)
org/apache/parquet/io/PerfTest/write(org.apache.parquet.column.page.mem.MemPageStore)#org/apache/parquet/io/MessageColumnIO/getRecordWriter(org.apache.parquet.column.ColumnWriteStore)
org/apache/parquet/io/PerfTest/write(org.apache.parquet.column.page.mem.MemPageStore)#org/apache/parquet/io/PerfTest/newColumnFactory(org.apache.parquet.schema.MessageType)
org/apache/parquet/io/PerfTest/write(org.apache.parquet.column.page.mem.MemPageStore)#org/apache/parquet/column/impl/ColumnWriteStoreV1/getBufferedSize()
org/apache/parquet/io/PerfTest/write(org.apache.parquet.column.page.mem.MemPageStore)#org/apache/parquet/io/PerfTest/write(org.apache.parquet.column.page.mem.MemPageStore,org.apache.parquet.example.data.GroupWriter,int)
org/apache/parquet/io/PerfTest/write(org.apache.parquet.column.page.mem.MemPageStore)#org/apache/parquet/column/ParquetProperties/Builder/withPageSize(int)
org/apache/parquet/io/PerfTest/write(org.apache.parquet.column.page.mem.MemPageStore)#org/apache/parquet/column/ParquetProperties/Builder/build()
org/apache/parquet/io/PerfTest/write(org.apache.parquet.column.page.mem.MemPageStore)#org/apache/parquet/example/data/GroupWriter/GroupWriter(org.apache.parquet.io.api.RecordConsumer,org.apache.parquet.schema.GroupType)
org/apache/parquet/io/PerfTest/write(org.apache.parquet.column.page.mem.MemPageStore)#org/apache/parquet/example/data/GroupWriter/write(org.apache.parquet.example.data.Group)
org/apache/parquet/io/PerfTest/write(org.apache.parquet.column.page.mem.MemPageStore)#java/io/PrintStream/println(java.lang.String)
org/apache/parquet/hadoop/mapred/DeprecatedParquetInputFormat/RecordReaderWrapper/getProgress()#java/lang/Thread/interrupted()
org/apache/parquet/hadoop/mapred/DeprecatedParquetInputFormat/RecordReaderWrapper/getProgress()#java/io/IOException/IOException(java.lang.Throwable)
org/apache/parquet/hadoop/mapred/DeprecatedParquetInputFormat/RecordReaderWrapper/getProgress()#org/apache/parquet/hadoop/ParquetRecordReader/getProgress()
org/apache/parquet/hadoop/mapred/DeprecatedParquetInputFormat/RecordReaderWrapper/getPos()#org/apache/parquet/hadoop/mapred/DeprecatedParquetInputFormat/RecordReaderWrapper/getProgress()
org/apache/parquet/hadoop/mapred/DeprecatedParquetInputFormat/RecordReaderWrapper/close()#org/apache/parquet/hadoop/ParquetRecordReader/close()
org/apache/parquet/hadoop/mapred/DeprecatedParquetInputFormat/RecordReaderWrapper/next(java.lang.Void,org.apache.parquet.hadoop.mapred.Container)#org/apache/parquet/hadoop/mapred/Container/set(T)
org/apache/parquet/hadoop/mapred/DeprecatedParquetInputFormat/RecordReaderWrapper/next(java.lang.Void,org.apache.parquet.hadoop.mapred.Container)#org/apache/parquet/hadoop/ParquetRecordReader/getCurrentValue()
org/apache/parquet/hadoop/mapred/DeprecatedParquetInputFormat/RecordReaderWrapper/next(java.lang.Void,org.apache.parquet.hadoop.mapred.Container)#java/io/IOException/IOException(java.lang.Throwable)
org/apache/parquet/hadoop/mapred/DeprecatedParquetInputFormat/RecordReaderWrapper/next(java.lang.Void,org.apache.parquet.hadoop.mapred.Container)#org/apache/parquet/hadoop/ParquetRecordReader/nextKeyValue()
org/apache/parquet/bytes/BytesInput/EmptyBytesInput/toByteBuffer()#java/nio/ByteBuffer/allocate(int)
org/apache/parquet/schema/Types/BaseListBuilder/ListElementBuilder/named(java.lang.String)#org/apache/parquet/schema/Types/Builder/named(java.lang.String)
org/apache/parquet/schema/Types/BaseListBuilder/ListElementBuilder/named(java.lang.String)#org/apache/parquet/schema/Types/BaseListBuilder/setElementType(org.apache.parquet.schema.Type)
org/apache/parquet/schema/Types/BaseListBuilder/ListElementBuilder/named(java.lang.String)#org/apache/parquet/schema/Types/BaseListBuilder/build(java.lang.String)
org/apache/parquet/hadoop/TestParquetWriterNewPage/test()#org/apache/parquet/io/api/Binary/toStringUsingUTF8()
org/apache/parquet/hadoop/TestParquetWriterNewPage/test()#org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/getPath()
org/apache/parquet/hadoop/TestParquetWriterNewPage/test()#org/apache/parquet/example/data/GroupValueSource/getDouble(java.lang.String,int)
org/apache/parquet/hadoop/TestParquetWriterNewPage/test()#org/apache/parquet/example/data/Group/append(java.lang.String,java.lang.String)
org/apache/parquet/hadoop/TestParquetWriterNewPage/test()#org/apache/parquet/hadoop/ParquetReader/builder(org.apache.parquet.hadoop.api.ReadSupport,org.apache.parquet.hadoop.Path)
org/apache/parquet/hadoop/TestParquetWriterNewPage/test()#org/apache/parquet/example/data/Group/append(java.lang.String,int)
org/apache/parquet/hadoop/TestParquetWriterNewPage/test()#java/util/Map/get(java.lang.Object)
org/apache/parquet/hadoop/TestParquetWriterNewPage/test()#org/apache/parquet/example/data/GroupValueSource/getFloat(java.lang.String,int)
org/apache/parquet/hadoop/TestParquetWriterNewPage/test()#org/apache/parquet/example/data/GroupValueSource/getLong(java.lang.String,int)
org/apache/parquet/hadoop/TestParquetWriterNewPage/test()#org/apache/parquet/hadoop/ParquetWriter/write(T)
org/apache/parquet/hadoop/TestParquetWriterNewPage/test()#org/apache/parquet/example/data/Group/append(java.lang.String,double)
org/apache/parquet/hadoop/TestParquetWriterNewPage/test()#org/apache/parquet/example/data/Group/append(java.lang.String,org.apache.parquet.io.api.Binary)
org/apache/parquet/hadoop/TestParquetWriterNewPage/test()#org/apache/parquet/hadoop/ParquetReader/read()
org/apache/parquet/hadoop/TestParquetWriterNewPage/test()#java/lang/Enum/name()
org/apache/parquet/hadoop/TestParquetWriterNewPage/test()#org/apache/parquet/hadoop/ParquetReader/close()
org/apache/parquet/hadoop/TestParquetWriterNewPage/test()#org/apache/parquet/hadoop/metadata/ParquetMetadata/getBlocks()
org/apache/parquet/hadoop/TestParquetWriterNewPage/test()#org/apache/parquet/example/data/simple/SimpleGroupFactory/SimpleGroupFactory(org.apache.parquet.schema.MessageType)
org/apache/parquet/hadoop/TestParquetWriterNewPage/test()#org/apache/parquet/hadoop/metadata/ColumnPath/toDotString()
org/apache/parquet/hadoop/TestParquetWriterNewPage/test()#org/apache/parquet/hadoop/ParquetWriter/ParquetWriter(org.apache.parquet.hadoop.Path,org.apache.parquet.hadoop.api.WriteSupport,org.apache.parquet.hadoop.metadata.CompressionCodecName,int,int,int,boolean,boolean,org.apache.parquet.column.ParquetProperties.WriterVersion,org.apache.parquet.hadoop.Configuration)
org/apache/parquet/hadoop/TestParquetWriterNewPage/test()#java/util/Arrays/asList(T[])
org/apache/parquet/hadoop/TestParquetWriterNewPage/test()#org/apache/parquet/schema/MessageTypeParser/parseMessageType(java.lang.String)
org/apache/parquet/hadoop/TestParquetWriterNewPage/test()#org/apache/parquet/example/data/GroupValueSource/getInteger(java.lang.String,int)
org/apache/parquet/hadoop/TestParquetWriterNewPage/test()#org/apache/parquet/hadoop/example/GroupWriteSupport/setSchema(org.apache.parquet.schema.MessageType,org.apache.parquet.hadoop.Configuration)
org/apache/parquet/hadoop/TestParquetWriterNewPage/test()#java/util/HashMap/HashMap()
org/apache/parquet/hadoop/TestParquetWriterNewPage/test()#org/apache/parquet/example/data/Group/append(java.lang.String,long)
org/apache/parquet/hadoop/TestParquetWriterNewPage/test()#java/lang/String/equals(java.lang.Object)
org/apache/parquet/hadoop/TestParquetWriterNewPage/test()#org/apache/parquet/example/data/Group/append(java.lang.String,boolean)
org/apache/parquet/hadoop/TestParquetWriterNewPage/test()#org/apache/parquet/io/api/Binary/fromConstantByteArray(byte[])
org/apache/parquet/hadoop/TestParquetWriterNewPage/test()#java/util/Set/contains(java.lang.Object)
org/apache/parquet/hadoop/TestParquetWriterNewPage/test()#org/apache/parquet/hadoop/ParquetWriter/close()
org/apache/parquet/hadoop/TestParquetWriterNewPage/test()#org/apache/parquet/hadoop/example/GroupReadSupport/GroupReadSupport()
org/apache/parquet/hadoop/TestParquetWriterNewPage/test()#org/apache/parquet/hadoop/example/GroupWriteSupport/GroupWriteSupport()
org/apache/parquet/hadoop/TestParquetWriterNewPage/test()#org/apache/parquet/column/ParquetProperties/WriterVersion/values()
org/apache/parquet/hadoop/TestParquetWriterNewPage/test()#org/apache/parquet/example/data/GroupValueSource/getBinary(java.lang.String,int)
org/apache/parquet/hadoop/TestParquetWriterNewPage/test()#org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/getEncodings()
org/apache/parquet/hadoop/TestParquetWriterNewPage/test()#java/util/Map/put(K,V)
org/apache/parquet/hadoop/TestParquetWriterNewPage/test()#org/apache/parquet/example/data/GroupValueSource/getBoolean(java.lang.String,int)
org/apache/parquet/hadoop/TestParquetWriterNewPage/test()#org/apache/parquet/hadoop/ParquetFileReader/readFooter(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path,org.apache.parquet.format.converter.ParquetMetadataConverter.MetadataFilter)
org/apache/parquet/hadoop/TestParquetWriterNewPage/test()#org/apache/parquet/example/data/GroupValueSource/getFieldRepetitionCount(java.lang.String)
org/apache/parquet/hadoop/TestParquetWriterNewPage/test()#org/apache/parquet/hadoop/metadata/BlockMetaData/getColumns()
org/apache/parquet/hadoop/TestParquetWriterNewPage/test()#org/apache/parquet/example/data/simple/SimpleGroupFactory/newGroup()
org/apache/parquet/hadoop/TestParquetWriterNewPage/test()#org/apache/parquet/example/data/GroupValueSource/getInt96(java.lang.String,int)
org/apache/parquet/hadoop/TestParquetWriterNewPage/test()#java/lang/Object/Object()
org/apache/parquet/hadoop/TestParquetWriterNewPage/test()#org/apache/parquet/example/data/Group/append(java.lang.String,float)
org/apache/parquet/bytes/LittleEndianDataOutputStream/write(byte[],int,int)#java/io/OutputStream/write(byte[],int,int)
org/apache/parquet/bytes/LittleEndianDataOutputStream/writeInt(int)#java/io/OutputStream/write(int)
org/apache/parquet/bytes/LittleEndianDataOutputStream/writeFloat(float)#java/lang/Float/floatToIntBits(float)
org/apache/parquet/bytes/LittleEndianDataOutputStream/writeFloat(float)#org/apache/parquet/bytes/LittleEndianDataOutputStream/writeInt(int)
org/apache/parquet/bytes/LittleEndianDataOutputStream/close()#org/apache/parquet/IOExceptionUtils/closeQuietly(java.io.Closeable)
org/apache/parquet/bytes/LittleEndianDataOutputStream/write(int)#java/io/OutputStream/write(int)
org/apache/parquet/bytes/LittleEndianDataOutputStream/flush()#java/io/OutputStream/flush()
org/apache/parquet/bytes/LittleEndianDataOutputStream/writeShort(int)#java/io/OutputStream/write(int)
org/apache/parquet/bytes/LittleEndianDataOutputStream/writeByte(int)#java/io/OutputStream/write(int)
org/apache/parquet/bytes/LittleEndianDataOutputStream/writeBoolean(boolean)#java/io/OutputStream/write(int)
org/apache/parquet/bytes/LittleEndianDataOutputStream/writeDouble(double)#java/lang/Double/doubleToLongBits(double)
org/apache/parquet/bytes/LittleEndianDataOutputStream/writeDouble(double)#org/apache/parquet/bytes/LittleEndianDataOutputStream/writeLong(long)
org/apache/parquet/bytes/LittleEndianDataOutputStream/writeLong(long)#java/io/OutputStream/write(byte[],int,int)
org/apache/parquet/scrooge/ParquetScroogeScheme/sourceConfInit(org.apache.parquet.scrooge.FlowProcess,org.apache.parquet.cascading.Tap,org.apache.parquet.hadoop.JobConf)#org/apache/parquet/hadoop/thrift/ThriftReadSupport/setRecordConverterClass(org.apache.parquet.hadoop.JobConf,java.lang.Class)
org/apache/parquet/scrooge/ParquetScroogeScheme/sourceConfInit(org.apache.parquet.scrooge.FlowProcess,org.apache.parquet.cascading.Tap,org.apache.parquet.hadoop.JobConf)#org/apache/parquet/cascading/ParquetValueScheme/sourceConfInit(org.apache.parquet.cascading.FlowProcess,org.apache.parquet.cascading.Tap,org.apache.parquet.hadoop.JobConf)
org/apache/parquet/scrooge/ParquetScroogeScheme/sourceConfInit(org.apache.parquet.scrooge.FlowProcess,org.apache.parquet.cascading.Tap,org.apache.parquet.hadoop.JobConf)#org/apache/parquet/hadoop/ParquetInputFormat/setReadSupportClass(org.apache.parquet.hadoop.Job,java.lang.Class)
org/apache/parquet/scrooge/ParquetScroogeScheme/sinkConfInit(org.apache.parquet.scrooge.FlowProcess,org.apache.parquet.cascading.Tap,org.apache.parquet.hadoop.JobConf)#org/apache/parquet/hadoop/ParquetOutputFormat/setWriteSupportClass(org.apache.parquet.hadoop.Job,java.lang.Class)
org/apache/parquet/scrooge/ParquetScroogeScheme/sinkConfInit(org.apache.parquet.scrooge.FlowProcess,org.apache.parquet.cascading.Tap,org.apache.parquet.hadoop.JobConf)#org/apache/parquet/hadoop/mapred/DeprecatedParquetOutputFormat/setAsOutputFormat(org.apache.parquet.hadoop.JobConf)
org/apache/parquet/scrooge/ParquetScroogeScheme/sinkConfInit(org.apache.parquet.scrooge.FlowProcess,org.apache.parquet.cascading.Tap,org.apache.parquet.hadoop.JobConf)#org/apache/parquet/cascading/ParquetValueScheme/Config/getKlass()
org/apache/parquet/scrooge/ParquetScroogeScheme/sinkConfInit(org.apache.parquet.scrooge.FlowProcess,org.apache.parquet.cascading.Tap,org.apache.parquet.hadoop.JobConf)#org/apache/parquet/scrooge/ScroogeWriteSupport/setScroogeClass(org.apache.parquet.hadoop.Configuration,java.lang.Class)
org/apache/parquet/proto/ProtoWriteSupport/IntWriter/writeRawValue(java.lang.Object)#org/apache/parquet/io/api/RecordConsumer/addInteger(int)
org/apache/parquet/column/values/delta/benchmark/BenchmarkIntegerOutputSize/testRangedNumbersWithSmallVariations()#org/apache/parquet/column/values/delta/benchmark/BenchmarkIntegerOutputSize/testRangedNumbersWithSmallVariations()/$anonymous1/()
org/apache/parquet/column/values/delta/benchmark/BenchmarkIntegerOutputSize/testRangedNumbersWithSmallVariations()#org/apache/parquet/column/values/delta/benchmark/BenchmarkIntegerOutputSize/testRandomIntegers(org.apache.parquet.column.values.delta.benchmark.BenchmarkIntegerOutputSize.IntFunc,int)
org/apache/parquet/column/values/delta/benchmark/BenchmarkIntegerOutputSize/testRangedNumbersWithSmallVariations()#java/util/Random/Random()
org/apache/parquet/column/values/delta/benchmark/BenchmarkIntegerOutputSize/testSmallNumbersWithSmallVariations()#org/apache/parquet/column/values/delta/benchmark/BenchmarkIntegerOutputSize/testSmallNumbersWithSmallVariations()/$anonymous1/()
org/apache/parquet/column/values/delta/benchmark/BenchmarkIntegerOutputSize/testSmallNumbersWithSmallVariations()#org/apache/parquet/column/values/delta/benchmark/BenchmarkIntegerOutputSize/testRandomIntegers(org.apache.parquet.column.values.delta.benchmark.BenchmarkIntegerOutputSize.IntFunc,int)
org/apache/parquet/column/values/delta/benchmark/BenchmarkIntegerOutputSize/testSmallNumbersWithSmallVariations()#java/util/Random/Random()
org/apache/parquet/column/values/delta/benchmark/BenchmarkIntegerOutputSize/testSmallNumberVariation()#org/apache/parquet/column/values/delta/benchmark/BenchmarkIntegerOutputSize/testSmallNumberVariation()/$anonymous1/()
org/apache/parquet/column/values/delta/benchmark/BenchmarkIntegerOutputSize/testSmallNumberVariation()#org/apache/parquet/column/values/delta/benchmark/BenchmarkIntegerOutputSize/testRandomIntegers(org.apache.parquet.column.values.delta.benchmark.BenchmarkIntegerOutputSize.IntFunc,int)
org/apache/parquet/column/values/delta/benchmark/BenchmarkIntegerOutputSize/testSmallNumberVariation()#java/util/Random/Random()
org/apache/parquet/column/values/delta/benchmark/BenchmarkIntegerOutputSize/testBigNumbers()#org/apache/parquet/column/values/delta/benchmark/BenchmarkIntegerOutputSize/testRandomIntegers(org.apache.parquet.column.values.delta.benchmark.BenchmarkIntegerOutputSize.IntFunc,int)
org/apache/parquet/column/values/delta/benchmark/BenchmarkIntegerOutputSize/testBigNumbers()#java/util/Random/Random()
org/apache/parquet/column/values/delta/benchmark/BenchmarkIntegerOutputSize/testBigNumbers()#org/apache/parquet/column/values/delta/benchmark/BenchmarkIntegerOutputSize/testBigNumbers()/$anonymous1/()
org/apache/parquet/column/values/delta/benchmark/BenchmarkIntegerOutputSize/estimatedSize()#java/lang/Math/ceil(double)
org/apache/parquet/column/values/delta/benchmark/BenchmarkIntegerOutputSize/testRandomIntegers(org.apache.parquet.column.values.delta.benchmark.BenchmarkIntegerOutputSize.IntFunc,int)#org/apache/parquet/column/values/rle/RunLengthBitPackingHybridValuesWriter/writeInteger(int)
org/apache/parquet/column/values/delta/benchmark/BenchmarkIntegerOutputSize/testRandomIntegers(org.apache.parquet.column.values.delta.benchmark.BenchmarkIntegerOutputSize.IntFunc,int)#org/apache/parquet/column/values/ValuesWriter/getBytes()
org/apache/parquet/column/values/delta/benchmark/BenchmarkIntegerOutputSize/testRandomIntegers(org.apache.parquet.column.values.delta.benchmark.BenchmarkIntegerOutputSize.IntFunc,int)#java/io/PrintStream/println(java.lang.String)
org/apache/parquet/column/values/delta/benchmark/BenchmarkIntegerOutputSize/testRandomIntegers(org.apache.parquet.column.values.delta.benchmark.BenchmarkIntegerOutputSize.IntFunc,int)#org/apache/parquet/column/values/ValuesWriter/writeInteger(int)
org/apache/parquet/column/values/delta/benchmark/BenchmarkIntegerOutputSize/testRandomIntegers(org.apache.parquet.column.values.delta.benchmark.BenchmarkIntegerOutputSize.IntFunc,int)#org/apache/parquet/column/values/rle/RunLengthBitPackingHybridValuesWriter/getBytes()
org/apache/parquet/column/values/delta/benchmark/BenchmarkIntegerOutputSize/testRandomIntegers(org.apache.parquet.column.values.delta.benchmark.BenchmarkIntegerOutputSize.IntFunc,int)#org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForInteger/DeltaBinaryPackingValuesWriterForInteger(int,int,int,int,org.apache.parquet.bytes.ByteBufferAllocator)
org/apache/parquet/column/values/delta/benchmark/BenchmarkIntegerOutputSize/testRandomIntegers(org.apache.parquet.column.values.delta.benchmark.BenchmarkIntegerOutputSize.IntFunc,int)#org/apache/parquet/bytes/DirectByteBufferAllocator/DirectByteBufferAllocator()
org/apache/parquet/column/values/delta/benchmark/BenchmarkIntegerOutputSize/testRandomIntegers(org.apache.parquet.column.values.delta.benchmark.BenchmarkIntegerOutputSize.IntFunc,int)#org/apache/parquet/bytes/BytesInput/size()
org/apache/parquet/column/values/delta/benchmark/BenchmarkIntegerOutputSize/testRandomIntegers(org.apache.parquet.column.values.delta.benchmark.BenchmarkIntegerOutputSize.IntFunc,int)#org/apache/parquet/column/values/delta/benchmark/BenchmarkIntegerOutputSize/IntFunc/getIntValue()
org/apache/parquet/column/values/delta/benchmark/BenchmarkIntegerOutputSize/testRandomIntegers(org.apache.parquet.column.values.delta.benchmark.BenchmarkIntegerOutputSize.IntFunc,int)#org/apache/parquet/column/values/delta/benchmark/BenchmarkIntegerOutputSize/estimatedSize()
org/apache/parquet/column/values/delta/benchmark/BenchmarkIntegerOutputSize/testRandomIntegers(org.apache.parquet.column.values.delta.benchmark.BenchmarkIntegerOutputSize.IntFunc,int)#org/apache/parquet/column/values/rle/RunLengthBitPackingHybridValuesWriter/RunLengthBitPackingHybridValuesWriter(int,int,int,org.apache.parquet.bytes.ByteBufferAllocator)
org/apache/parquet/hadoop/thrift/TestInputOutputFormat/waitForJob(org.apache.parquet.hadoop.Job)#java/lang/Thread/sleep(long)
org/apache/parquet/hadoop/thrift/TestInputOutputFormat/waitForJob(org.apache.parquet.hadoop.Job)#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/apache/parquet/hadoop/thrift/TestInputOutputFormat/nextAddressbook(int)#java/util/ArrayList/ArrayList()
org/apache/parquet/hadoop/thrift/TestInputOutputFormat/nextAddressbook(int)#java/lang/Object/Object()
org/apache/parquet/hadoop/thrift/TestInputOutputFormat/testReadWrite()#org/apache/parquet/hadoop/thrift/ParquetThriftOutputFormat/setThriftClass(org.apache.parquet.hadoop.Job,java.lang.Class)
org/apache/parquet/hadoop/thrift/TestInputOutputFormat/testReadWrite()#org/apache/parquet/hadoop/thrift/TestInputOutputFormat/nextAddressbook(int)
org/apache/parquet/hadoop/thrift/TestInputOutputFormat/testReadWrite()#java/io/File/File(java.lang.String,java.lang.String)
org/apache/parquet/hadoop/thrift/TestInputOutputFormat/testReadWrite()#org/apache/parquet/hadoop/ParquetOutputFormat/setCompression(org.apache.parquet.hadoop.Job,org.apache.parquet.hadoop.metadata.CompressionCodecName)
org/apache/parquet/hadoop/thrift/TestInputOutputFormat/testReadWrite()#java/lang/String/indexOf(java.lang.String)
org/apache/parquet/hadoop/thrift/TestInputOutputFormat/testReadWrite()#java/lang/String/substring(int)
org/apache/parquet/hadoop/thrift/TestInputOutputFormat/testReadWrite()#java/io/BufferedReader/close()
org/apache/parquet/hadoop/thrift/TestInputOutputFormat/testReadWrite()#org/apache/parquet/hadoop/thrift/TestInputOutputFormat/waitForJob(org.apache.parquet.hadoop.Job)
org/apache/parquet/hadoop/thrift/TestInputOutputFormat/testReadWrite()#java/io/BufferedReader/BufferedReader(java.io.Reader)
org/apache/parquet/hadoop/thrift/TestInputOutputFormat/testReadWrite()#java/io/BufferedReader/readLine()
org/apache/parquet/hadoop/thrift/TestInputOutputFormat/testReadWrite()#java/lang/Object/Object()
org/apache/parquet/hadoop/thrift/TestInputOutputFormat/testReadWrite()#java/io/FileReader/FileReader(java.io.File)
org/apache/parquet/hadoop/thrift/TestInputOutputFormat/write(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path,org.apache.parquet.hadoop.Path,java.lang.Class,java.lang.Class)#org/apache/parquet/hadoop/thrift/TestInputOutputFormat/waitForJob(org.apache.parquet.hadoop.Job)
org/apache/parquet/hadoop/thrift/TestInputOutputFormat/write(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path,org.apache.parquet.hadoop.Path,java.lang.Class,java.lang.Class)#org/apache/parquet/hadoop/thrift/ParquetThriftOutputFormat/setThriftClass(org.apache.parquet.hadoop.Job,java.lang.Class)
org/apache/parquet/hadoop/thrift/TestInputOutputFormat/write(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path,org.apache.parquet.hadoop.Path,java.lang.Class,java.lang.Class)#org/apache/parquet/hadoop/ParquetOutputFormat/setCompression(org.apache.parquet.hadoop.Job,org.apache.parquet.hadoop.metadata.CompressionCodecName)
org/apache/parquet/hadoop/thrift/TestInputOutputFormat/write(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path,org.apache.parquet.hadoop.Path,java.lang.Class,java.lang.Class)#java/lang/Object/Object()
org/apache/parquet/hadoop/thrift/TestInputOutputFormat/read(java.lang.String,int)#java/io/BufferedReader/close()
org/apache/parquet/hadoop/thrift/TestInputOutputFormat/read(java.lang.String,int)#java/io/PrintStream/println(java.lang.String)
org/apache/parquet/hadoop/thrift/TestInputOutputFormat/read(java.lang.String,int)#java/io/File/File(java.lang.String)
org/apache/parquet/hadoop/thrift/TestInputOutputFormat/read(java.lang.String,int)#java/lang/String/toString()
org/apache/parquet/hadoop/thrift/TestInputOutputFormat/read(java.lang.String,int)#java/lang/String/indexOf(java.lang.String)
org/apache/parquet/hadoop/thrift/TestInputOutputFormat/read(java.lang.String,int)#java/lang/String/substring(int)
org/apache/parquet/hadoop/thrift/TestInputOutputFormat/read(java.lang.String,int)#java/io/FileReader/FileReader(java.io.File)
org/apache/parquet/hadoop/thrift/TestInputOutputFormat/read(java.lang.String,int)#java/io/BufferedReader/BufferedReader(java.io.Reader)
org/apache/parquet/hadoop/thrift/TestInputOutputFormat/read(java.lang.String,int)#java/io/BufferedReader/readLine()
org/apache/parquet/hadoop/thrift/TestInputOutputFormat/testSchemaEvolution()#org/apache/parquet/hadoop/thrift/TestInputOutputFormat/waitForJob(org.apache.parquet.hadoop.Job)
org/apache/parquet/hadoop/thrift/TestInputOutputFormat/testSchemaEvolution()#org/apache/parquet/hadoop/thrift/TestInputOutputFormat/read(java.lang.String,int)
org/apache/parquet/hadoop/thrift/TestInputOutputFormat/testSchemaEvolution()#org/apache/parquet/hadoop/thrift/ParquetThriftInputFormat/setThriftClass(org.apache.parquet.hadoop.JobConf,java.lang.Class)
org/apache/parquet/hadoop/thrift/TestInputOutputFormat/testSchemaEvolution()#org/apache/parquet/hadoop/thrift/TestInputOutputFormat/write(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path,org.apache.parquet.hadoop.Path,java.lang.Class,java.lang.Class)
org/apache/parquet/hadoop/thrift/TestInputOutputFormat/testSchemaEvolution()#java/lang/Object/Object()
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesReader/readLong()#org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesReader/checkRead()
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesReader/initFromPage(int,java.nio.ByteBuffer,int)#org/apache/parquet/bytes/ByteBufferInputStream/available()
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesReader/initFromPage(int,java.nio.ByteBuffer,int)#org/apache/parquet/column/values/delta/DeltaBinaryPackingConfig/readConfig(java.io.InputStream)
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesReader/initFromPage(int,java.nio.ByteBuffer,int)#org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesReader/loadNewBlockToBuffer()
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesReader/initFromPage(int,java.nio.ByteBuffer,int)#org/apache/parquet/bytes/BytesUtils/readZigZagVarLong(java.io.InputStream)
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesReader/initFromPage(int,java.nio.ByteBuffer,int)#java/nio/Buffer/limit()
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesReader/initFromPage(int,java.nio.ByteBuffer,int)#org/apache/parquet/bytes/ByteBufferInputStream/ByteBufferInputStream(java.nio.ByteBuffer,int,int)
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesReader/initFromPage(int,java.nio.ByteBuffer,int)#org/apache/parquet/bytes/BytesUtils/readUnsignedVarInt(java.io.InputStream)
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesReader/initFromPage(int,java.nio.ByteBuffer,int)#org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesReader/allocateValuesBuffer()
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesReader/unpackMiniBlock(org.apache.parquet.column.values.bitpacking.BytePackerForLong)#org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesReader/unpack8Values(org.apache.parquet.column.values.bitpacking.BytePackerForLong)
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesReader/checkRead()#org/apache/parquet/io/ParquetDecodingException/ParquetDecodingException(java.lang.String)
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesReader/loadNewBlockToBuffer()#org/apache/parquet/column/values/bitpacking/Packer/newBytePackerForLong(int)
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesReader/loadNewBlockToBuffer()#org/apache/parquet/bytes/BytesUtils/readZigZagVarLong(java.io.InputStream)
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesReader/loadNewBlockToBuffer()#org/apache/parquet/io/ParquetDecodingException/ParquetDecodingException(java.lang.String,java.lang.Throwable)
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesReader/loadNewBlockToBuffer()#org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesReader/readBitWidthsForMiniBlocks()
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesReader/loadNewBlockToBuffer()#org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesReader/unpackMiniBlock(org.apache.parquet.column.values.bitpacking.BytePackerForLong)
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesReader/readInteger()#org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesReader/readLong()
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesReader/unpack8Values(org.apache.parquet.column.values.bitpacking.BytePackerForLong)#org/apache/parquet/column/values/bitpacking/BytePackerForLong/unpack8Values(java.nio.ByteBuffer,int,long[],int)
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesReader/unpack8Values(org.apache.parquet.column.values.bitpacking.BytePackerForLong)#org/apache/parquet/column/values/bitpacking/BytePackerForLong/getBitWidth()
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesReader/unpack8Values(org.apache.parquet.column.values.bitpacking.BytePackerForLong)#java/nio/Buffer/limit()
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesReader/unpack8Values(org.apache.parquet.column.values.bitpacking.BytePackerForLong)#org/apache/parquet/bytes/ByteBufferInputStream/available()
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesReader/unpack8Values(org.apache.parquet.column.values.bitpacking.BytePackerForLong)#org/apache/parquet/bytes/ByteBufferInputStream/skip(long)
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesReader/skip()#org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesReader/checkRead()
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesReader/allocateValuesBuffer()#java/lang/Math/ceil(double)
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesReader/readBitWidthsForMiniBlocks()#org/apache/parquet/bytes/BytesUtils/readIntLittleEndianOnOneByte(java.io.InputStream)
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesReader/readBitWidthsForMiniBlocks()#org/apache/parquet/io/ParquetDecodingException/ParquetDecodingException(java.lang.String,java.lang.Throwable)
org/apache/parquet/hadoop/example/GroupWriteSupport/init(org.apache.parquet.hadoop.Configuration)#org/apache/parquet/hadoop/api/WriteSupport/WriteContext/WriteContext(org.apache.parquet.schema.MessageType,java.util.Map)
org/apache/parquet/hadoop/example/GroupWriteSupport/init(org.apache.parquet.hadoop.Configuration)#org/apache/parquet/hadoop/example/GroupWriteSupport/getSchema(org.apache.parquet.hadoop.Configuration)
org/apache/parquet/hadoop/example/GroupWriteSupport/prepareForWrite(org.apache.parquet.io.api.RecordConsumer)#org/apache/parquet/example/data/GroupWriter/GroupWriter(org.apache.parquet.io.api.RecordConsumer,org.apache.parquet.schema.GroupType)
org/apache/parquet/hadoop/example/GroupWriteSupport/setSchema(org.apache.parquet.schema.MessageType,org.apache.parquet.hadoop.Configuration)#org/apache/parquet/schema/Type/toString()
org/apache/parquet/hadoop/example/GroupWriteSupport/write(org.apache.parquet.example.data.Group)#org/apache/parquet/example/data/GroupWriter/write(org.apache.parquet.example.data.Group)
org/apache/parquet/hadoop/example/GroupWriteSupport/getSchema(org.apache.parquet.hadoop.Configuration)#org/apache/parquet/schema/MessageTypeParser/parseMessageType(java.lang.String)
org/apache/parquet/hadoop/example/GroupWriteSupport/getSchema(org.apache.parquet.hadoop.Configuration)#org/apache/parquet/Preconditions/checkNotNull(T,java.lang.String)
org/apache/parquet/avro/AvroIndexedRecordConverter/FieldFixedConverter/addBinary(org.apache.parquet.io.api.Binary)#java/lang/reflect/Constructor/newInstance(java.lang.Object[])
org/apache/parquet/avro/AvroIndexedRecordConverter/FieldFixedConverter/addBinary(org.apache.parquet.io.api.Binary)#java/lang/RuntimeException/RuntimeException(java.lang.Throwable)
org/apache/parquet/avro/AvroIndexedRecordConverter/FieldFixedConverter/addBinary(org.apache.parquet.io.api.Binary)#org/apache/parquet/io/api/Binary/getBytes()
org/apache/parquet/avro/AvroIndexedRecordConverter/FieldFixedConverter/addBinary(org.apache.parquet.io.api.Binary)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/parquet/avro/AvroIndexedRecordConverter/FieldFixedConverter/addBinary(org.apache.parquet.io.api.Binary)#java/lang/Object/Object()
org/apache/parquet/avro/AvroIndexedRecordConverter/FieldFixedConverter/addBinary(org.apache.parquet.io.api.Binary)#org/apache/parquet/avro/ParentValueContainer/add(java.lang.Object)
org/apache/parquet/column/values/plain/BooleanPlainValuesReader/readBoolean()#org/apache/parquet/column/values/bitpacking/ByteBitPackingValuesReader/readInteger()
org/apache/parquet/column/values/plain/BooleanPlainValuesReader/initFromPage(int,java.nio.ByteBuffer,int)#java/nio/Buffer/limit()
org/apache/parquet/column/values/plain/BooleanPlainValuesReader/initFromPage(int,java.nio.ByteBuffer,int)#org/apache/parquet/column/values/bitpacking/ByteBitPackingValuesReader/initFromPage(int,java.nio.ByteBuffer,int)
org/apache/parquet/column/values/plain/BooleanPlainValuesReader/skip()#org/apache/parquet/column/values/bitpacking/ByteBitPackingValuesReader/readInteger()
org/apache/parquet/column/values/plain/BooleanPlainValuesReader/getNextOffset()#org/apache/parquet/column/values/bitpacking/ByteBitPackingValuesReader/getNextOffset()
org/apache/parquet/column/values/plain/PlainValuesReader/DoublePlainValuesReader/skip()#org/apache/parquet/bytes/LittleEndianDataInputStream/skipBytes(int)
org/apache/parquet/column/values/plain/PlainValuesReader/DoublePlainValuesReader/skip()#org/apache/parquet/io/ParquetDecodingException/ParquetDecodingException(java.lang.String,java.lang.Throwable)
org/apache/parquet/column/values/plain/PlainValuesReader/DoublePlainValuesReader/readDouble()#org/apache/parquet/io/ParquetDecodingException/ParquetDecodingException(java.lang.String,java.lang.Throwable)
org/apache/parquet/column/values/plain/PlainValuesReader/DoublePlainValuesReader/readDouble()#org/apache/parquet/bytes/LittleEndianDataInputStream/readDouble()
org/apache/parquet/hadoop/TestInputOutputFormatWithPadding/getDataFile(java.io.File)#java/io/File/getName()
org/apache/parquet/hadoop/TestInputOutputFormatWithPadding/getDataFile(java.io.File)#java/lang/String/startsWith(java.lang.String)
org/apache/parquet/hadoop/TestInputOutputFormatWithPadding/getDataFile(java.io.File)#java/io/File/listFiles()
org/apache/parquet/hadoop/TestInputOutputFormatWithPadding/testBasicBehaviorWithPadding()#org/apache/parquet/schema/Type/toString()
org/apache/parquet/hadoop/TestInputOutputFormatWithPadding/testBasicBehaviorWithPadding()#org/apache/parquet/hadoop/TestInputOutputFormatWithPadding/waitForJob(org.apache.parquet.hadoop.Job)
org/apache/parquet/hadoop/TestInputOutputFormatWithPadding/testBasicBehaviorWithPadding()#java/lang/StringBuilder/append(java.lang.String)
org/apache/parquet/hadoop/TestInputOutputFormatWithPadding/testBasicBehaviorWithPadding()#org/apache/parquet/hadoop/ParquetOutputFormat/setEnableDictionary(org.apache.parquet.hadoop.Job,boolean)
org/apache/parquet/hadoop/TestInputOutputFormatWithPadding/testBasicBehaviorWithPadding()#org/apache/parquet/hadoop/ParquetOutputFormat/setPageSize(org.apache.parquet.hadoop.Job,int)
org/apache/parquet/hadoop/TestInputOutputFormatWithPadding/testBasicBehaviorWithPadding()#java/util/Set/add(E)
org/apache/parquet/hadoop/TestInputOutputFormatWithPadding/testBasicBehaviorWithPadding()#org/apache/parquet/Files/readAllLines(java.io.File,java.nio.charset.Charset)
org/apache/parquet/hadoop/TestInputOutputFormatWithPadding/testBasicBehaviorWithPadding()#java/lang/String/getBytes(java.lang.String)
org/apache/parquet/hadoop/TestInputOutputFormatWithPadding/testBasicBehaviorWithPadding()#org/apache/parquet/hadoop/ParquetOutputFormat/setDictionaryPageSize(org.apache.parquet.hadoop.Job,int)
org/apache/parquet/hadoop/TestInputOutputFormatWithPadding/testBasicBehaviorWithPadding()#java/io/FileOutputStream/write(byte[])
org/apache/parquet/hadoop/TestInputOutputFormatWithPadding/testBasicBehaviorWithPadding()#org/apache/parquet/hadoop/ParquetOutputFormat/setBlockSize(org.apache.parquet.hadoop.Job,int)
org/apache/parquet/hadoop/TestInputOutputFormatWithPadding/testBasicBehaviorWithPadding()#org/apache/parquet/hadoop/metadata/ParquetMetadata/getBlocks()
org/apache/parquet/hadoop/TestInputOutputFormatWithPadding/testBasicBehaviorWithPadding()#org/apache/parquet/hadoop/TestInputOutputFormatWithPadding/getDataFile(java.io.File)
org/apache/parquet/hadoop/TestInputOutputFormatWithPadding/testBasicBehaviorWithPadding()#org/apache/parquet/hadoop/ParquetOutputFormat/setWriteSupportClass(org.apache.parquet.hadoop.Job,java.lang.Class)
org/apache/parquet/hadoop/TestInputOutputFormatWithPadding/testBasicBehaviorWithPadding()#org/apache/parquet/hadoop/ParquetOutputFormat/setMaxPaddingSize(org.apache.parquet.hadoop.util.JobContext,int)
org/apache/parquet/hadoop/TestInputOutputFormatWithPadding/testBasicBehaviorWithPadding()#java/lang/StringBuilder/StringBuilder()
org/apache/parquet/hadoop/TestInputOutputFormatWithPadding/testBasicBehaviorWithPadding()#org/apache/parquet/hadoop/metadata/BlockMetaData/getStartingPos()
org/apache/parquet/hadoop/TestInputOutputFormatWithPadding/testBasicBehaviorWithPadding()#java/io/File/toURI()
org/apache/parquet/hadoop/TestInputOutputFormatWithPadding/testBasicBehaviorWithPadding()#org/apache/parquet/hadoop/ParquetInputFormat/setReadSupportClass(org.apache.parquet.hadoop.Job,java.lang.Class)
org/apache/parquet/hadoop/TestInputOutputFormatWithPadding/testBasicBehaviorWithPadding()#java/util/Set/remove(java.lang.Object)
org/apache/parquet/hadoop/TestInputOutputFormatWithPadding/testBasicBehaviorWithPadding()#org/apache/parquet/hadoop/ParquetFileReader/readFooter(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path,org.apache.parquet.format.converter.ParquetMetadataConverter.MetadataFilter)
org/apache/parquet/hadoop/TestInputOutputFormatWithPadding/testBasicBehaviorWithPadding()#java/io/FileOutputStream/close()
org/apache/parquet/hadoop/TestInputOutputFormatWithPadding/testBasicBehaviorWithPadding()#java/io/FileOutputStream/FileOutputStream(java.io.File)
org/apache/parquet/hadoop/TestInputOutputFormatWithPadding/testBasicBehaviorWithPadding()#java/io/File/delete()
org/apache/parquet/hadoop/TestInputOutputFormatWithPadding/testBasicBehaviorWithPadding()#java/lang/Object/Object()
org/apache/parquet/hadoop/TestInputOutputFormatWithPadding/testBasicBehaviorWithPadding()#java/lang/StringBuilder/toString()
org/apache/parquet/hadoop/TestInputOutputFormatWithPadding/testBasicBehaviorWithPadding()#java/io/File/toString()
org/apache/parquet/hadoop/TestInputOutputFormatWithPadding/waitForJob(org.apache.parquet.hadoop.Job)#java/lang/Thread/sleep(long)
org/apache/parquet/hadoop/TestInputOutputFormatWithPadding/waitForJob(org.apache.parquet.hadoop.Job)#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/apache/parquet/avro/AvroRecordConverter/AvroCollectionConverter/start()#org/apache/parquet/avro/AvroRecordConverter/AvroCollectionConverter/newContainer()
org/apache/parquet/avro/AvroRecordConverter/AvroCollectionConverter/newContainer()#java/lang/Class/isAssignableFrom(java.lang.Class)
org/apache/parquet/avro/AvroRecordConverter/AvroCollectionConverter/newContainer()#java/util/ArrayList/ArrayList()
org/apache/parquet/avro/AvroRecordConverter/AvroCollectionConverter/end()#org/apache/parquet/avro/ParentValueContainer/add(java.lang.Object)
org/apache/parquet/avro/TestSpecificInputOutputFormat/ElectricCarFilter/bind(java.lang.Iterable)#org/apache/parquet/filter/UnboundRecordFilter/bind(java.lang.Iterable)
org/apache/parquet/schema/TestMessageType/testIDs()#org/apache/parquet/schema/Type/toString()
org/apache/parquet/schema/TestMessageType/testIDs()#org/apache/parquet/schema/PrimitiveType/PrimitiveType(org.apache.parquet.schema.Type.Repetition,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,java.lang.String)
org/apache/parquet/schema/TestMessageType/testIDs()#org/apache/parquet/schema/GroupType/withId(int)
org/apache/parquet/schema/TestMessageType/testIDs()#org/apache/parquet/schema/PrimitiveType/withId(int)
org/apache/parquet/schema/TestMessageType/testIDs()#org/apache/parquet/schema/MessageType/MessageType(java.lang.String,org.apache.parquet.schema.Type[])
org/apache/parquet/schema/TestMessageType/testIDs()#org/apache/parquet/schema/MessageTypeParser/parseMessageType(java.lang.String)
org/apache/parquet/schema/TestMessageType/testIDs()#org/apache/parquet/schema/GroupType/GroupType(org.apache.parquet.schema.Type.Repetition,java.lang.String,org.apache.parquet.schema.Type[])
org/apache/parquet/schema/TestMessageType/testMergeSchema()#org/apache/parquet/schema/MessageType/union(org.apache.parquet.schema.MessageType)
org/apache/parquet/schema/TestMessageType/testMergeSchema()#org/apache/parquet/schema/Types/Builder/named(java.lang.String)
org/apache/parquet/schema/TestMessageType/testMergeSchema()#org/apache/parquet/schema/Types/Builder/as(org.apache.parquet.schema.OriginalType)
org/apache/parquet/schema/TestMessageType/testMergeSchema()#org/apache/parquet/schema/Types/BaseGroupBuilder/addField(org.apache.parquet.schema.Type)
org/apache/parquet/schema/TestMessageType/testMergeSchema()#java/lang/Throwable/getMessage()
org/apache/parquet/schema/TestMessageType/testMergeSchema()#org/apache/parquet/schema/GroupType/GroupType(org.apache.parquet.schema.Type.Repetition,java.lang.String,org.apache.parquet.schema.Type[])
org/apache/parquet/schema/TestMessageType/testMergeSchema()#org/apache/parquet/schema/Types/optional(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/schema/TestMessageType/testMergeSchema()#org/apache/parquet/schema/MessageType/MessageType(java.lang.String,org.apache.parquet.schema.Type[])
org/apache/parquet/schema/TestMessageType/testMergeSchema()#org/apache/parquet/schema/Types/BasePrimitiveBuilder/length(int)
org/apache/parquet/schema/TestMessageType/testMergeSchema()#org/apache/parquet/schema/Types/buildMessage()
org/apache/parquet/schema/TestMessageType/testMergeSchema()#org/apache/parquet/schema/PrimitiveType/PrimitiveType(org.apache.parquet.schema.Type.Repetition,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,java.lang.String)
org/apache/parquet/schema/TestMessageType/test()#org/apache/parquet/schema/Type/toString()
org/apache/parquet/schema/TestMessageType/test()#org/apache/parquet/schema/MessageTypeParser/parseMessageType(java.lang.String)
org/apache/parquet/schema/TestMessageType/testNestedTypes()#org/apache/parquet/schema/Type/toString()
org/apache/parquet/schema/TestMessageType/testNestedTypes()#org/apache/parquet/schema/MessageType/getMaxDefinitionLevel(java.lang.String[])
org/apache/parquet/schema/TestMessageType/testNestedTypes()#org/apache/parquet/schema/Type/asPrimitiveType()
org/apache/parquet/schema/TestMessageType/testNestedTypes()#org/apache/parquet/schema/MessageType/getType(java.lang.String[])
org/apache/parquet/schema/TestMessageType/testNestedTypes()#org/apache/parquet/schema/PrimitiveType/getPrimitiveTypeName()
org/apache/parquet/schema/TestMessageType/testNestedTypes()#org/apache/parquet/schema/MessageTypeParser/parseMessageType(java.lang.String)
org/apache/parquet/schema/TestMessageType/testNestedTypes()#org/apache/parquet/schema/MessageType/getMaxRepetitionLevel(java.lang.String[])
org/apache/parquet/schema/TestMessageType/testMergeSchemaWithOriginalType()#org/apache/parquet/schema/MessageType/union(org.apache.parquet.schema.MessageType)
org/apache/parquet/schema/TestMessageType/testMergeSchemaWithOriginalType()#org/apache/parquet/schema/PrimitiveType/PrimitiveType(org.apache.parquet.schema.Type.Repetition,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,java.lang.String)
org/apache/parquet/schema/TestMessageType/testMergeSchemaWithOriginalType()#org/apache/parquet/schema/MessageType/MessageType(java.lang.String,org.apache.parquet.schema.Type[])
org/apache/parquet/schema/TestMessageType/testMergeSchemaWithOriginalType()#org/apache/parquet/schema/GroupType/GroupType(org.apache.parquet.schema.Type.Repetition,java.lang.String,org.apache.parquet.schema.OriginalType,org.apache.parquet.schema.Type[])
org/apache/parquet/schema/TestMessageType/testMergeSchemaWithOriginalType()#org/apache/parquet/schema/GroupType/GroupType(org.apache.parquet.schema.Type.Repetition,java.lang.String,org.apache.parquet.schema.Type[])
org/apache/parquet/thrift/projection/deprecated/PathGlobPattern/toString()#java/util/regex/Pattern/toString()
org/apache/parquet/thrift/projection/deprecated/PathGlobPattern/matches(java.lang.CharSequence)#java/util/regex/Matcher/matches()
org/apache/parquet/thrift/projection/deprecated/PathGlobPattern/matches(java.lang.CharSequence)#java/util/regex/Pattern/matcher(java.lang.CharSequence)
org/apache/parquet/thrift/projection/deprecated/PathGlobPattern/error(java.lang.String,java.lang.String,int)#java/util/regex/PatternSyntaxException/PatternSyntaxException(java.lang.String,java.lang.String,int)
org/apache/parquet/thrift/projection/deprecated/PathGlobPattern/set(java.lang.String)#java/util/regex/Pattern/compile(java.lang.String)
org/apache/parquet/thrift/projection/deprecated/PathGlobPattern/set(java.lang.String)#java/lang/String/length()
org/apache/parquet/thrift/projection/deprecated/PathGlobPattern/set(java.lang.String)#org/apache/parquet/thrift/projection/deprecated/PathGlobPattern/error(java.lang.String,java.lang.String,int)
org/apache/parquet/thrift/projection/deprecated/PathGlobPattern/set(java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/apache/parquet/thrift/projection/deprecated/PathGlobPattern/set(java.lang.String)#java/lang/StringBuilder/append(char)
org/apache/parquet/thrift/projection/deprecated/PathGlobPattern/set(java.lang.String)#java/lang/StringBuilder/toString()
org/apache/parquet/thrift/projection/deprecated/PathGlobPattern/set(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/apache/parquet/thrift/projection/deprecated/PathGlobPattern/set(java.lang.String)#java/lang/String/charAt(int)
org/apache/parquet/io/ColumnIO/toString()#org/apache/parquet/schema/Type/getName()
org/apache/parquet/io/ColumnIO/toString()#java/lang/Class/getSimpleName()
org/apache/parquet/io/ColumnIO/toString()#java/util/Arrays/toString(java.lang.Object[])
org/apache/parquet/io/ColumnIO/toString()#java/lang/Object/getClass()
org/apache/parquet/io/ColumnIO/setLevels(int,int,java.lang.String[],int[],java.util.List,java.util.List)#org/apache/parquet/io/ColumnIO/setFieldPath(java.lang.String[],int[])
org/apache/parquet/io/ColumnIO/setLevels(int,int,java.lang.String[],int[],java.util.List,java.util.List)#org/apache/parquet/io/ColumnIO/setRepetitionLevel(int)
org/apache/parquet/io/ColumnIO/setLevels(int,int,java.lang.String[],int[],java.util.List,java.util.List)#org/apache/parquet/io/ColumnIO/setDefinitionLevel(int)
org/apache/parquet/io/ColumnIO/getParent(int)#org/apache/parquet/io/ColumnIO/getFieldPath()
org/apache/parquet/io/ColumnIO/getParent(int)#java/util/Arrays/toString(java.lang.Object[])
org/apache/parquet/io/ColumnIO/getParent(int)#org/apache/parquet/io/ColumnIO/getDefinitionLevel()
org/apache/parquet/io/ColumnIO/getParent(int)#org/apache/parquet/io/ColumnIO/getRepetitionLevel()
org/apache/parquet/io/ColumnIO/getParent(int)#org/apache/parquet/io/InvalidRecordException/InvalidRecordException(java.lang.String)
org/apache/parquet/io/ColumnIO/getParent(int)#org/apache/parquet/io/ColumnIO/getParent(int)
org/apache/parquet/io/ColumnIO/getParent(int)#org/apache/parquet/io/ColumnIO/getParent()
org/apache/parquet/io/ColumnIO/getParent(int)#org/apache/parquet/schema/Type/isRepetition(org.apache.parquet.schema.Type.Repetition)
org/apache/parquet/io/ColumnIO/getParent(int)#org/apache/parquet/io/ColumnIO/getType()
org/apache/parquet/avro/TestSpecificInputOutputFormat/waitForJob(org.apache.parquet.hadoop.Job)#java/lang/Thread/sleep(long)
org/apache/parquet/avro/TestSpecificInputOutputFormat/waitForJob(org.apache.parquet.hadoop.Job)#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/apache/parquet/avro/TestSpecificInputOutputFormat/createParquetFile()#org/apache/parquet/avro/TestSpecificInputOutputFormat/waitForJob(org.apache.parquet.hadoop.Job)
org/apache/parquet/avro/TestSpecificInputOutputFormat/createParquetFile()#java/lang/Object/Object()
org/apache/parquet/avro/TestSpecificInputOutputFormat/createParquetFile()#org/apache/parquet/avro/AvroParquetOutputFormat/setSchema(org.apache.parquet.hadoop.Job,org.apache.parquet.pig.Schema)
org/apache/parquet/avro/TestSpecificInputOutputFormat/nextRecord(int)#java/lang/String/format(java.lang.String,java.lang.Object[])
org/apache/parquet/avro/TestSpecificInputOutputFormat/nextRecord(int)#java/lang/String/getBytes()
org/apache/parquet/avro/TestSpecificInputOutputFormat/testReadWrite()#java/lang/String/equals(java.lang.Object)
org/apache/parquet/avro/TestSpecificInputOutputFormat/testReadWrite()#org/apache/parquet/avro/AvroParquetReader/AvroParquetReader(org.apache.parquet.hadoop.Path)
org/apache/parquet/avro/TestSpecificInputOutputFormat/testReadWrite()#org/apache/parquet/hadoop/ParquetInputFormat/setUnboundRecordFilter(org.apache.parquet.hadoop.Job,java.lang.Class)
org/apache/parquet/avro/TestSpecificInputOutputFormat/testReadWrite()#org/apache/parquet/avro/TestSpecificInputOutputFormat/nextRecord(int)
org/apache/parquet/avro/TestSpecificInputOutputFormat/testReadWrite()#java/lang/Object/Object()
org/apache/parquet/avro/TestSpecificInputOutputFormat/testReadWrite()#org/apache/parquet/avro/AvroParquetOutputFormat/setSchema(org.apache.parquet.hadoop.Job,org.apache.parquet.pig.Schema)
org/apache/parquet/avro/TestSpecificInputOutputFormat/testReadWrite()#org/apache/parquet/avro/AvroParquetInputFormat/setRequestedProjection(org.apache.parquet.hadoop.Job,org.apache.parquet.pig.Schema)
org/apache/parquet/avro/TestSpecificInputOutputFormat/testReadWrite()#org/apache/parquet/avro/TestSpecificInputOutputFormat/waitForJob(org.apache.parquet.hadoop.Job)
org/apache/parquet/avro/TestSpecificInputOutputFormat/testReadWriteChangedCar()#java/lang/String/equals(java.lang.Object)
org/apache/parquet/avro/TestSpecificInputOutputFormat/testReadWriteChangedCar()#org/apache/parquet/avro/AvroParquetReader/AvroParquetReader(org.apache.parquet.hadoop.Path)
org/apache/parquet/avro/TestSpecificInputOutputFormat/testReadWriteChangedCar()#org/apache/parquet/hadoop/ParquetInputFormat/setUnboundRecordFilter(org.apache.parquet.hadoop.Job,java.lang.Class)
org/apache/parquet/avro/TestSpecificInputOutputFormat/testReadWriteChangedCar()#java/lang/Object/Object()
org/apache/parquet/avro/TestSpecificInputOutputFormat/testReadWriteChangedCar()#org/apache/parquet/avro/AvroParquetOutputFormat/setSchema(org.apache.parquet.hadoop.Job,org.apache.parquet.pig.Schema)
org/apache/parquet/avro/TestSpecificInputOutputFormat/testReadWriteChangedCar()#org/apache/parquet/avro/AvroParquetInputFormat/setRequestedProjection(org.apache.parquet.hadoop.Job,org.apache.parquet.pig.Schema)
org/apache/parquet/avro/TestSpecificInputOutputFormat/testReadWriteChangedCar()#org/apache/parquet/avro/TestSpecificInputOutputFormat/waitForJob(org.apache.parquet.hadoop.Job)
org/apache/parquet/avro/TestSpecificInputOutputFormat/testReadWriteChangedCar()#org/apache/parquet/avro/TestSpecificInputOutputFormat/nextRecord(int)
org/apache/parquet/avro/TestSpecificInputOutputFormat/testReadWriteChangedCar()#org/apache/parquet/avro/AvroParquetInputFormat/setAvroReadSchema(org.apache.parquet.hadoop.Job,org.apache.parquet.pig.Schema)
org/apache/parquet/Closeables/closeAndSwallowIOExceptions(java.io.Closeable)#java/io/Closeable/close()
org/apache/parquet/Closeables/close(java.io.Closeable)#java/io/Closeable/close()
org/apache/parquet/column/impl/TestColumnReaderImpl/test()#org/apache/parquet/column/ParquetProperties/Builder/withPageSize(int)
org/apache/parquet/column/impl/TestColumnReaderImpl/test()#org/apache/parquet/column/impl/ColumnReaderImpl/ColumnReaderImpl(org.apache.parquet.column.ColumnDescriptor,org.apache.parquet.column.page.PageReader,org.apache.parquet.io.api.PrimitiveConverter,org.apache.parquet.VersionParser.ParsedVersion)
org/apache/parquet/column/impl/TestColumnReaderImpl/test()#org/apache/parquet/column/ParquetProperties/Builder/build()
org/apache/parquet/column/impl/TestColumnReaderImpl/test()#org/apache/parquet/column/ParquetProperties/builder()
org/apache/parquet/column/impl/TestColumnReaderImpl/test()#org/apache/parquet/column/ColumnReader/consume()
org/apache/parquet/column/impl/TestColumnReaderImpl/test()#org/apache/parquet/schema/MessageType/getColumns()
org/apache/parquet/column/impl/TestColumnReaderImpl/test()#org/apache/parquet/column/ParquetProperties/Builder/withDictionaryPageSize(int)
org/apache/parquet/column/impl/TestColumnReaderImpl/test()#org/apache/parquet/column/page/mem/MemPageWriter/MemPageWriter()
org/apache/parquet/column/impl/TestColumnReaderImpl/test()#org/apache/parquet/schema/MessageTypeParser/parseMessageType(java.lang.String)
org/apache/parquet/column/impl/TestColumnReaderImpl/test()#org/apache/parquet/column/impl/TestColumnReaderImpl/ValidatingConverter/ValidatingConverter()
org/apache/parquet/column/impl/TestColumnReaderImpl/test()#org/apache/parquet/io/api/Binary/fromString(java.lang.String)
org/apache/parquet/column/impl/TestColumnReaderImpl/test()#org/apache/parquet/column/page/mem/MemPageWriter/getPages()
org/apache/parquet/column/impl/TestColumnReaderImpl/test()#org/apache/parquet/column/ParquetProperties/Builder/withWriterVersion(org.apache.parquet.column.ParquetProperties.WriterVersion)
org/apache/parquet/column/impl/TestColumnReaderImpl/test()#org/apache/parquet/column/ColumnReader/getCurrentDefinitionLevel()
org/apache/parquet/column/impl/TestColumnReaderImpl/test()#java/util/List/iterator()
org/apache/parquet/column/impl/TestColumnReaderImpl/test()#org/apache/parquet/VersionParser/parse(java.lang.String)
org/apache/parquet/column/impl/TestColumnReaderImpl/test()#org/apache/parquet/column/impl/ColumnWriterV2/write(org.apache.parquet.io.api.Binary,int,int)
org/apache/parquet/column/impl/TestColumnReaderImpl/test()#org/apache/parquet/column/page/DataPageV2/getRowCount()
org/apache/parquet/column/impl/TestColumnReaderImpl/test()#org/apache/parquet/column/impl/ColumnWriterV2/writePage(long)
org/apache/parquet/column/impl/TestColumnReaderImpl/test()#org/apache/parquet/column/page/mem/MemPageWriter/getDictionaryPage()
org/apache/parquet/column/impl/TestColumnReaderImpl/test()#org/apache/parquet/column/page/DataPage/getValueCount()
org/apache/parquet/column/impl/TestColumnReaderImpl/test()#org/apache/parquet/column/impl/ColumnWriterV2/finalizeColumnChunk()
org/apache/parquet/column/impl/TestColumnReaderImpl/test()#org/apache/parquet/column/page/mem/MemPageReader/MemPageReader(long,java.util.Iterator,org.apache.parquet.column.page.DictionaryPage)
org/apache/parquet/column/impl/TestColumnReaderImpl/test()#org/apache/parquet/column/ColumnReader/writeCurrentValueToConverter()
org/apache/parquet/column/impl/TestColumnReaderImpl/test()#java/util/List/get(int)
org/apache/parquet/column/impl/TestColumnReaderImpl/test()#org/apache/parquet/column/ColumnReader/getCurrentRepetitionLevel()
org/apache/parquet/column/impl/TestColumnReaderImpl/test()#org/apache/parquet/column/impl/ColumnWriterV2/ColumnWriterV2(org.apache.parquet.column.ColumnDescriptor,org.apache.parquet.column.page.PageWriter,org.apache.parquet.column.ParquetProperties)
org/apache/parquet/column/impl/TestColumnReaderImpl/testOptional()#org/apache/parquet/column/ParquetProperties/Builder/withPageSize(int)
org/apache/parquet/column/impl/TestColumnReaderImpl/testOptional()#org/apache/parquet/column/impl/ColumnReaderImpl/ColumnReaderImpl(org.apache.parquet.column.ColumnDescriptor,org.apache.parquet.column.page.PageReader,org.apache.parquet.io.api.PrimitiveConverter,org.apache.parquet.VersionParser.ParsedVersion)
org/apache/parquet/column/impl/TestColumnReaderImpl/testOptional()#org/apache/parquet/column/page/DataPageV2/getRowCount()
org/apache/parquet/column/impl/TestColumnReaderImpl/testOptional()#org/apache/parquet/column/ParquetProperties/Builder/build()
org/apache/parquet/column/impl/TestColumnReaderImpl/testOptional()#org/apache/parquet/column/ParquetProperties/builder()
org/apache/parquet/column/impl/TestColumnReaderImpl/testOptional()#org/apache/parquet/column/ColumnReader/consume()
org/apache/parquet/column/impl/TestColumnReaderImpl/testOptional()#org/apache/parquet/schema/MessageType/getColumns()
org/apache/parquet/column/impl/TestColumnReaderImpl/testOptional()#org/apache/parquet/column/ParquetProperties/Builder/withDictionaryPageSize(int)
org/apache/parquet/column/impl/TestColumnReaderImpl/testOptional()#org/apache/parquet/column/page/mem/MemPageWriter/MemPageWriter()
org/apache/parquet/column/impl/TestColumnReaderImpl/testOptional()#org/apache/parquet/schema/MessageTypeParser/parseMessageType(java.lang.String)
org/apache/parquet/column/impl/TestColumnReaderImpl/testOptional()#org/apache/parquet/column/impl/TestColumnReaderImpl/ValidatingConverter/ValidatingConverter()
org/apache/parquet/column/impl/TestColumnReaderImpl/testOptional()#org/apache/parquet/column/page/mem/MemPageWriter/getPages()
org/apache/parquet/column/impl/TestColumnReaderImpl/testOptional()#org/apache/parquet/column/impl/ColumnWriterV2/writeNull(int,int)
org/apache/parquet/column/impl/TestColumnReaderImpl/testOptional()#org/apache/parquet/column/ParquetProperties/Builder/withWriterVersion(org.apache.parquet.column.ParquetProperties.WriterVersion)
org/apache/parquet/column/impl/TestColumnReaderImpl/testOptional()#org/apache/parquet/column/ColumnReader/getCurrentDefinitionLevel()
org/apache/parquet/column/impl/TestColumnReaderImpl/testOptional()#java/util/List/iterator()
org/apache/parquet/column/impl/TestColumnReaderImpl/testOptional()#org/apache/parquet/VersionParser/parse(java.lang.String)
org/apache/parquet/column/impl/TestColumnReaderImpl/testOptional()#org/apache/parquet/column/impl/ColumnWriterV2/writePage(long)
org/apache/parquet/column/impl/TestColumnReaderImpl/testOptional()#org/apache/parquet/column/page/mem/MemPageWriter/getDictionaryPage()
org/apache/parquet/column/impl/TestColumnReaderImpl/testOptional()#org/apache/parquet/column/page/DataPage/getValueCount()
org/apache/parquet/column/impl/TestColumnReaderImpl/testOptional()#org/apache/parquet/column/impl/ColumnWriterV2/finalizeColumnChunk()
org/apache/parquet/column/impl/TestColumnReaderImpl/testOptional()#org/apache/parquet/column/page/mem/MemPageReader/MemPageReader(long,java.util.Iterator,org.apache.parquet.column.page.DictionaryPage)
org/apache/parquet/column/impl/TestColumnReaderImpl/testOptional()#java/util/List/get(int)
org/apache/parquet/column/impl/TestColumnReaderImpl/testOptional()#org/apache/parquet/column/ColumnReader/getCurrentRepetitionLevel()
org/apache/parquet/column/impl/TestColumnReaderImpl/testOptional()#org/apache/parquet/column/impl/ColumnWriterV2/ColumnWriterV2(org.apache.parquet.column.ColumnDescriptor,org.apache.parquet.column.page.PageWriter,org.apache.parquet.column.ParquetProperties)
org/apache/parquet/tools/json/JsonRecordFormatter/JsonPrimitiveWriter/formatResults(java.util.List)#org/apache/parquet/schema/Type/getRepetition()
org/apache/parquet/tools/json/JsonRecordFormatter/JsonPrimitiveWriter/formatResults(java.util.List)#java/util/List/get(int)
org/apache/parquet/statistics/TestStatistics/StatsValidator/validate(T)#java/lang/Comparable/compareTo(T)
org/apache/parquet/avro/ParentValueContainer/LogicalTypePrimitiveContainer/addInt(int)#org/apache/parquet/avro/ParentValueContainer/add(java.lang.Object)
org/apache/parquet/avro/ParentValueContainer/LogicalTypePrimitiveContainer/addDouble(double)#org/apache/parquet/avro/ParentValueContainer/add(java.lang.Object)
org/apache/parquet/avro/ParentValueContainer/LogicalTypePrimitiveContainer/addBoolean(boolean)#org/apache/parquet/avro/ParentValueContainer/add(java.lang.Object)
org/apache/parquet/avro/ParentValueContainer/LogicalTypePrimitiveContainer/addChar(char)#org/apache/parquet/avro/ParentValueContainer/add(java.lang.Object)
org/apache/parquet/avro/ParentValueContainer/LogicalTypePrimitiveContainer/addLong(long)#org/apache/parquet/avro/ParentValueContainer/add(java.lang.Object)
org/apache/parquet/avro/ParentValueContainer/LogicalTypePrimitiveContainer/addByte(byte)#org/apache/parquet/avro/ParentValueContainer/add(java.lang.Object)
org/apache/parquet/avro/ParentValueContainer/LogicalTypePrimitiveContainer/addShort(short)#org/apache/parquet/avro/ParentValueContainer/add(java.lang.Object)
org/apache/parquet/avro/ParentValueContainer/LogicalTypePrimitiveContainer/addFloat(float)#org/apache/parquet/avro/ParentValueContainer/add(java.lang.Object)
org/apache/parquet/avro/AvroRecordMaterializer/getCurrentRecord()#org/apache/parquet/avro/AvroRecordConverter/getCurrentRecord()
org/apache/parquet/avro/AvroWriteSupport/ListWriter/writeCharArray(char[])#org/apache/parquet/io/api/RecordConsumer/addInteger(int)
org/apache/parquet/avro/AvroWriteSupport/ListWriter/writeCharArray(char[])#org/apache/parquet/avro/AvroWriteSupport/ListWriter/startArray()
org/apache/parquet/avro/AvroWriteSupport/ListWriter/writeCharArray(char[])#org/apache/parquet/avro/AvroWriteSupport/ListWriter/endArray()
org/apache/parquet/avro/AvroWriteSupport/ListWriter/writeJavaArray(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,java.lang.Class,java.lang.Object)#org/apache/parquet/avro/AvroWriteSupport/ListWriter/writeCharArray(char[])
org/apache/parquet/avro/AvroWriteSupport/ListWriter/writeJavaArray(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,java.lang.Class,java.lang.Object)#java/lang/Class/getComponentType()
org/apache/parquet/avro/AvroWriteSupport/ListWriter/writeJavaArray(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,java.lang.Class,java.lang.Object)#java/lang/Class/isPrimitive()
org/apache/parquet/avro/AvroWriteSupport/ListWriter/writeJavaArray(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,java.lang.Class,java.lang.Object)#org/apache/parquet/Preconditions/checkArgument(boolean,java.lang.String)
org/apache/parquet/avro/AvroWriteSupport/ListWriter/writeJavaArray(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,java.lang.Class,java.lang.Object)#org/apache/parquet/avro/AvroWriteSupport/ListWriter/writeLongArray(long[])
org/apache/parquet/avro/AvroWriteSupport/ListWriter/writeJavaArray(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,java.lang.Class,java.lang.Object)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/parquet/avro/AvroWriteSupport/ListWriter/writeJavaArray(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,java.lang.Class,java.lang.Object)#org/apache/parquet/avro/AvroWriteSupport/ListWriter/writeByteArray(byte[])
org/apache/parquet/avro/AvroWriteSupport/ListWriter/writeJavaArray(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,java.lang.Class,java.lang.Object)#org/apache/parquet/avro/AvroWriteSupport/ListWriter/writeBooleanArray(boolean[])
org/apache/parquet/avro/AvroWriteSupport/ListWriter/writeJavaArray(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,java.lang.Class,java.lang.Object)#org/apache/parquet/avro/AvroWriteSupport/ListWriter/writeDoubleArray(double[])
org/apache/parquet/avro/AvroWriteSupport/ListWriter/writeJavaArray(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,java.lang.Class,java.lang.Object)#org/apache/parquet/avro/AvroWriteSupport/ListWriter/writeIntArray(int[])
org/apache/parquet/avro/AvroWriteSupport/ListWriter/writeJavaArray(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,java.lang.Class,java.lang.Object)#org/apache/parquet/avro/AvroWriteSupport/ListWriter/writeFloatArray(float[])
org/apache/parquet/avro/AvroWriteSupport/ListWriter/writeJavaArray(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,java.lang.Class,java.lang.Object)#org/apache/parquet/avro/AvroWriteSupport/ListWriter/writeShortArray(short[])
org/apache/parquet/avro/AvroWriteSupport/ListWriter/writeJavaArray(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,java.lang.Class,java.lang.Object)#org/apache/parquet/avro/AvroWriteSupport/ListWriter/writeObjectArray(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,java.lang.Object[])
org/apache/parquet/avro/AvroWriteSupport/ListWriter/writeJavaArray(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,java.lang.Class,java.lang.Object)#java/lang/Class/getName()
org/apache/parquet/avro/AvroWriteSupport/ListWriter/writeLongArray(long[])#org/apache/parquet/io/api/RecordConsumer/addLong(long)
org/apache/parquet/avro/AvroWriteSupport/ListWriter/writeLongArray(long[])#org/apache/parquet/avro/AvroWriteSupport/ListWriter/startArray()
org/apache/parquet/avro/AvroWriteSupport/ListWriter/writeLongArray(long[])#org/apache/parquet/avro/AvroWriteSupport/ListWriter/endArray()
org/apache/parquet/avro/AvroWriteSupport/ListWriter/writeList(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,java.lang.Object)#java/lang/Class/isArray()
org/apache/parquet/avro/AvroWriteSupport/ListWriter/writeList(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,java.lang.Object)#org/apache/parquet/avro/AvroWriteSupport/ListWriter/writeJavaArray(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,java.lang.Class,java.lang.Object)
org/apache/parquet/avro/AvroWriteSupport/ListWriter/writeList(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,java.lang.Object)#org/apache/parquet/Preconditions/checkArgument(boolean,java.lang.String)
org/apache/parquet/avro/AvroWriteSupport/ListWriter/writeList(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,java.lang.Object)#java/lang/Class/getName()
org/apache/parquet/avro/AvroWriteSupport/ListWriter/writeList(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,java.lang.Object)#org/apache/parquet/avro/AvroWriteSupport/ListWriter/writeCollection(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,java.util.Collection)
org/apache/parquet/avro/AvroWriteSupport/ListWriter/writeList(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,java.lang.Object)#org/apache/parquet/io/api/RecordConsumer/startGroup()
org/apache/parquet/avro/AvroWriteSupport/ListWriter/writeList(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,java.lang.Object)#java/lang/Object/getClass()
org/apache/parquet/avro/AvroWriteSupport/ListWriter/writeList(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,java.lang.Object)#org/apache/parquet/io/api/RecordConsumer/endGroup()
org/apache/parquet/avro/AvroWriteSupport/ListWriter/writeByteArray(byte[])#org/apache/parquet/io/api/RecordConsumer/addInteger(int)
org/apache/parquet/avro/AvroWriteSupport/ListWriter/writeByteArray(byte[])#org/apache/parquet/avro/AvroWriteSupport/ListWriter/startArray()
org/apache/parquet/avro/AvroWriteSupport/ListWriter/writeByteArray(byte[])#org/apache/parquet/avro/AvroWriteSupport/ListWriter/endArray()
org/apache/parquet/avro/AvroWriteSupport/ListWriter/writeBooleanArray(boolean[])#org/apache/parquet/io/api/RecordConsumer/addBoolean(boolean)
org/apache/parquet/avro/AvroWriteSupport/ListWriter/writeBooleanArray(boolean[])#org/apache/parquet/avro/AvroWriteSupport/ListWriter/startArray()
org/apache/parquet/avro/AvroWriteSupport/ListWriter/writeBooleanArray(boolean[])#org/apache/parquet/avro/AvroWriteSupport/ListWriter/endArray()
org/apache/parquet/avro/AvroWriteSupport/ListWriter/writeDoubleArray(double[])#org/apache/parquet/io/api/RecordConsumer/addDouble(double)
org/apache/parquet/avro/AvroWriteSupport/ListWriter/writeDoubleArray(double[])#org/apache/parquet/avro/AvroWriteSupport/ListWriter/startArray()
org/apache/parquet/avro/AvroWriteSupport/ListWriter/writeDoubleArray(double[])#org/apache/parquet/avro/AvroWriteSupport/ListWriter/endArray()
org/apache/parquet/avro/AvroWriteSupport/ListWriter/writeIntArray(int[])#org/apache/parquet/io/api/RecordConsumer/addInteger(int)
org/apache/parquet/avro/AvroWriteSupport/ListWriter/writeIntArray(int[])#org/apache/parquet/avro/AvroWriteSupport/ListWriter/startArray()
org/apache/parquet/avro/AvroWriteSupport/ListWriter/writeIntArray(int[])#org/apache/parquet/avro/AvroWriteSupport/ListWriter/endArray()
org/apache/parquet/avro/AvroWriteSupport/ListWriter/writeFloatArray(float[])#org/apache/parquet/avro/AvroWriteSupport/ListWriter/startArray()
org/apache/parquet/avro/AvroWriteSupport/ListWriter/writeFloatArray(float[])#org/apache/parquet/avro/AvroWriteSupport/ListWriter/endArray()
org/apache/parquet/avro/AvroWriteSupport/ListWriter/writeFloatArray(float[])#org/apache/parquet/io/api/RecordConsumer/addFloat(float)
org/apache/parquet/avro/AvroWriteSupport/ListWriter/writeShortArray(short[])#org/apache/parquet/io/api/RecordConsumer/addInteger(int)
org/apache/parquet/avro/AvroWriteSupport/ListWriter/writeShortArray(short[])#org/apache/parquet/avro/AvroWriteSupport/ListWriter/startArray()
org/apache/parquet/avro/AvroWriteSupport/ListWriter/writeShortArray(short[])#org/apache/parquet/avro/AvroWriteSupport/ListWriter/endArray()
org/apache/parquet/avro/AvroConverters/FieldBooleanConverter/addBoolean(boolean)#org/apache/parquet/avro/ParentValueContainer/addBoolean(boolean)
org/apache/parquet/hadoop/DirectCodecFactory/SnappyDecompressor/decompress(java.nio.ByteBuffer,int,java.nio.ByteBuffer,int)#java/nio/Buffer/clear()
org/apache/parquet/hadoop/DirectCodecFactory/SnappyDecompressor/decompress(java.nio.ByteBuffer,int,java.nio.ByteBuffer,int)#java/nio/Buffer/limit(int)
org/apache/parquet/hadoop/DirectCodecFactory/SnappyDecompressor/decompress(org.apache.parquet.bytes.BytesInput,int)#org/apache/parquet/hadoop/CodecFactory/HeapBytesDecompressor/decompress(org.apache.parquet.bytes.BytesInput,int)
org/apache/parquet/filter2/predicate/Operators/LtEq/accept(org.apache.parquet.filter2.predicate.FilterPredicate.Visitor)#org/apache/parquet/filter2/predicate/FilterPredicate/Visitor/visit(org.apache.parquet.filter2.predicate.Operators.LtEq)
org/apache/parquet/hadoop/example/TestInputOutputFormat/runMapReduceJob(org.apache.parquet.hadoop.metadata.CompressionCodecName)#java/util/Collections/emptyMap()
org/apache/parquet/hadoop/example/TestInputOutputFormat/runMapReduceJob(org.apache.parquet.hadoop.metadata.CompressionCodecName)#org/apache/parquet/hadoop/example/TestInputOutputFormat/runMapReduceJob(org.apache.parquet.hadoop.metadata.CompressionCodecName,java.util.Map)
org/apache/parquet/hadoop/example/TestInputOutputFormat/waitForJob(org.apache.parquet.hadoop.Job)#java/lang/Thread/sleep(long)
org/apache/parquet/hadoop/example/TestInputOutputFormat/waitForJob(org.apache.parquet.hadoop.Job)#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/apache/parquet/hadoop/example/TestInputOutputFormat/testReadWriteWithoutCounter()#org/apache/parquet/hadoop/example/TestInputOutputFormat/runMapReduceJob(org.apache.parquet.hadoop.metadata.CompressionCodecName)
org/apache/parquet/hadoop/example/TestInputOutputFormat/testReadWriteWithoutCounter()#org/apache/parquet/hadoop/example/TestInputOutputFormat/value(org.apache.parquet.hadoop.Job,java.lang.String,java.lang.String)
org/apache/parquet/hadoop/example/TestInputOutputFormat/testReadWriteFilter()#java/util/Iterator/remove()
org/apache/parquet/hadoop/example/TestInputOutputFormat/testReadWriteFilter()#java/lang/String/split(java.lang.String,int)
org/apache/parquet/hadoop/example/TestInputOutputFormat/testReadWriteFilter()#org/apache/parquet/hadoop/example/TestInputOutputFormat/testReadWriteFilter()/$anonymous1/()
org/apache/parquet/hadoop/example/TestInputOutputFormat/testReadWriteFilter()#java/util/Iterator/hasNext()
org/apache/parquet/hadoop/example/TestInputOutputFormat/testReadWriteFilter()#java/lang/StringBuilder/append(java.lang.String)
org/apache/parquet/hadoop/example/TestInputOutputFormat/testReadWriteFilter()#java/io/File/File(java.lang.String)
org/apache/parquet/hadoop/example/TestInputOutputFormat/testReadWriteFilter()#java/io/File/File(java.lang.String,java.lang.String)
org/apache/parquet/hadoop/example/TestInputOutputFormat/testReadWriteFilter()#java/lang/StringBuilder/StringBuilder()
org/apache/parquet/hadoop/example/TestInputOutputFormat/testReadWriteFilter()#org/apache/parquet/Files/readAllLines(java.io.File,java.nio.charset.Charset)
org/apache/parquet/hadoop/example/TestInputOutputFormat/testReadWriteFilter()#org/apache/parquet/Strings/join(java.lang.Iterable,java.lang.String)
org/apache/parquet/hadoop/example/TestInputOutputFormat/testReadWriteFilter()#java/lang/StringBuilder/toString()
org/apache/parquet/hadoop/example/TestInputOutputFormat/testReadWriteFilter()#java/lang/String/length()
org/apache/parquet/hadoop/example/TestInputOutputFormat/testReadWriteFilter()#org/apache/parquet/filter2/predicate/FilterApi/lt(C,T)
org/apache/parquet/hadoop/example/TestInputOutputFormat/testReadWriteFilter()#org/apache/parquet/hadoop/ParquetInputFormat/setFilterPredicate(org.apache.parquet.hadoop.Configuration,org.apache.parquet.filter2.predicate.FilterPredicate)
org/apache/parquet/hadoop/example/TestInputOutputFormat/testReadWriteFilter()#org/apache/parquet/filter2/predicate/FilterApi/intColumn(java.lang.String)
org/apache/parquet/hadoop/example/TestInputOutputFormat/testReadWriteFilter()#java/util/Iterator/next()
org/apache/parquet/hadoop/example/TestInputOutputFormat/testReadWriteFilter()#org/apache/parquet/hadoop/example/TestInputOutputFormat/runMapReduceJob(org.apache.parquet.hadoop.metadata.CompressionCodecName,java.util.Map)
org/apache/parquet/hadoop/example/TestInputOutputFormat/testReadWriteFilter()#java/lang/StringBuilder/deleteCharAt(int)
org/apache/parquet/hadoop/example/TestInputOutputFormat/testReadWriteFilter()#java/util/List/iterator()
org/apache/parquet/hadoop/example/TestInputOutputFormat/testReadWriteFilter()#java/lang/AbstractStringBuilder/length()
org/apache/parquet/hadoop/example/TestInputOutputFormat/testReadWrite(org.apache.parquet.hadoop.metadata.CompressionCodecName)#java/util/Collections/emptyMap()
org/apache/parquet/hadoop/example/TestInputOutputFormat/testReadWrite(org.apache.parquet.hadoop.metadata.CompressionCodecName)#org/apache/parquet/hadoop/example/TestInputOutputFormat/testReadWrite(org.apache.parquet.hadoop.metadata.CompressionCodecName,java.util.Map)
org/apache/parquet/hadoop/example/TestInputOutputFormat/testProjection()#org/apache/parquet/hadoop/example/TestInputOutputFormat/runMapReduceJob(org.apache.parquet.hadoop.metadata.CompressionCodecName)
org/apache/parquet/hadoop/example/TestInputOutputFormat/testReadWrite(org.apache.parquet.hadoop.metadata.CompressionCodecName,java.util.Map)#java/io/BufferedReader/close()
org/apache/parquet/hadoop/example/TestInputOutputFormat/testReadWrite(org.apache.parquet.hadoop.metadata.CompressionCodecName,java.util.Map)#org/apache/parquet/hadoop/example/TestInputOutputFormat/runMapReduceJob(org.apache.parquet.hadoop.metadata.CompressionCodecName,java.util.Map)
org/apache/parquet/hadoop/example/TestInputOutputFormat/testReadWrite(org.apache.parquet.hadoop.metadata.CompressionCodecName,java.util.Map)#java/io/File/File(java.lang.String)
org/apache/parquet/hadoop/example/TestInputOutputFormat/testReadWrite(org.apache.parquet.hadoop.metadata.CompressionCodecName,java.util.Map)#java/io/File/File(java.lang.String,java.lang.String)
org/apache/parquet/hadoop/example/TestInputOutputFormat/testReadWrite(org.apache.parquet.hadoop.metadata.CompressionCodecName,java.util.Map)#java/lang/String/indexOf(java.lang.String)
org/apache/parquet/hadoop/example/TestInputOutputFormat/testReadWrite(org.apache.parquet.hadoop.metadata.CompressionCodecName,java.util.Map)#java/lang/String/substring(int)
org/apache/parquet/hadoop/example/TestInputOutputFormat/testReadWrite(org.apache.parquet.hadoop.metadata.CompressionCodecName,java.util.Map)#java/io/FileReader/FileReader(java.io.File)
org/apache/parquet/hadoop/example/TestInputOutputFormat/testReadWrite(org.apache.parquet.hadoop.metadata.CompressionCodecName,java.util.Map)#java/io/BufferedReader/BufferedReader(java.io.Reader)
org/apache/parquet/hadoop/example/TestInputOutputFormat/testReadWrite(org.apache.parquet.hadoop.metadata.CompressionCodecName,java.util.Map)#java/io/BufferedReader/readLine()
org/apache/parquet/hadoop/example/TestInputOutputFormat/testReadWriteTaskSideMDAggressiveFilter()#org/apache/parquet/filter2/predicate/FilterApi/eq(C,T)
org/apache/parquet/hadoop/example/TestInputOutputFormat/testReadWriteTaskSideMDAggressiveFilter()#java/util/List/isEmpty()
org/apache/parquet/hadoop/example/TestInputOutputFormat/testReadWriteTaskSideMDAggressiveFilter()#org/apache/parquet/hadoop/example/TestInputOutputFormat/testReadWriteTaskSideMDAggressiveFilter()/$anonymous1/()
org/apache/parquet/hadoop/example/TestInputOutputFormat/testReadWriteTaskSideMDAggressiveFilter()#org/apache/parquet/hadoop/example/TestInputOutputFormat/runMapReduceJob(org.apache.parquet.hadoop.metadata.CompressionCodecName,java.util.Map)
org/apache/parquet/hadoop/example/TestInputOutputFormat/testReadWriteTaskSideMDAggressiveFilter()#java/io/File/File(java.lang.String,java.lang.String)
org/apache/parquet/hadoop/example/TestInputOutputFormat/testReadWriteTaskSideMDAggressiveFilter()#org/apache/parquet/Files/readAllLines(java.io.File,java.nio.charset.Charset)
org/apache/parquet/hadoop/example/TestInputOutputFormat/testReadWriteTaskSideMDAggressiveFilter()#org/apache/parquet/hadoop/ParquetInputFormat/setFilterPredicate(org.apache.parquet.hadoop.Configuration,org.apache.parquet.filter2.predicate.FilterPredicate)
org/apache/parquet/hadoop/example/TestInputOutputFormat/testReadWriteTaskSideMDAggressiveFilter()#org/apache/parquet/filter2/predicate/FilterApi/intColumn(java.lang.String)
org/apache/parquet/hadoop/example/TestInputOutputFormat/testReadWriteTaskSideMD()#org/apache/parquet/hadoop/example/TestInputOutputFormat/testReadWriteTaskSideMD()/$anonymous1/()
org/apache/parquet/hadoop/example/TestInputOutputFormat/testReadWriteTaskSideMD()#org/apache/parquet/hadoop/example/TestInputOutputFormat/testReadWrite(org.apache.parquet.hadoop.metadata.CompressionCodecName,java.util.Map)
org/apache/parquet/hadoop/example/TestInputOutputFormat/runMapReduceJob(org.apache.parquet.hadoop.metadata.CompressionCodecName,java.util.Map)#org/apache/parquet/hadoop/example/TestInputOutputFormat/waitForJob(org.apache.parquet.hadoop.Job)
org/apache/parquet/hadoop/example/TestInputOutputFormat/runMapReduceJob(org.apache.parquet.hadoop.metadata.CompressionCodecName,java.util.Map)#java/util/Map/Entry/getValue()
org/apache/parquet/hadoop/example/TestInputOutputFormat/runMapReduceJob(org.apache.parquet.hadoop.metadata.CompressionCodecName,java.util.Map)#org/apache/parquet/hadoop/ParquetOutputFormat/setWriteSupportClass(org.apache.parquet.hadoop.Job,java.lang.Class)
org/apache/parquet/hadoop/example/TestInputOutputFormat/runMapReduceJob(org.apache.parquet.hadoop.metadata.CompressionCodecName,java.util.Map)#org/apache/parquet/schema/MessageTypeParser/parseMessageType(java.lang.String)
org/apache/parquet/hadoop/example/TestInputOutputFormat/runMapReduceJob(org.apache.parquet.hadoop.metadata.CompressionCodecName,java.util.Map)#org/apache/parquet/hadoop/example/GroupWriteSupport/setSchema(org.apache.parquet.schema.MessageType,org.apache.parquet.hadoop.Configuration)
org/apache/parquet/hadoop/example/TestInputOutputFormat/runMapReduceJob(org.apache.parquet.hadoop.metadata.CompressionCodecName,java.util.Map)#org/apache/parquet/hadoop/ParquetInputFormat/setReadSupportClass(org.apache.parquet.hadoop.Job,java.lang.Class)
org/apache/parquet/hadoop/example/TestInputOutputFormat/runMapReduceJob(org.apache.parquet.hadoop.metadata.CompressionCodecName,java.util.Map)#java/util/Map/entrySet()
org/apache/parquet/hadoop/example/TestInputOutputFormat/runMapReduceJob(org.apache.parquet.hadoop.metadata.CompressionCodecName,java.util.Map)#java/lang/Object/Object()
org/apache/parquet/hadoop/example/TestInputOutputFormat/runMapReduceJob(org.apache.parquet.hadoop.metadata.CompressionCodecName,java.util.Map)#java/util/Map/Entry/getKey()
org/apache/parquet/hadoop/example/TestInputOutputFormat/runMapReduceJob(org.apache.parquet.hadoop.metadata.CompressionCodecName,java.util.Map)#org/apache/parquet/hadoop/ParquetOutputFormat/setCompression(org.apache.parquet.hadoop.Job,org.apache.parquet.hadoop.metadata.CompressionCodecName)
org/apache/parquet/hadoop/example/TestInputOutputFormat/value(org.apache.parquet.hadoop.Job,java.lang.String,java.lang.String)#java/lang/reflect/Method/invoke(java.lang.Object,java.lang.Object[])
org/apache/parquet/hadoop/example/TestInputOutputFormat/value(org.apache.parquet.hadoop.Job,java.lang.String,java.lang.String)#java/lang/Class/getMethod(java.lang.String,java.lang.Class<?>[])
org/apache/parquet/hadoop/example/TestInputOutputFormat/testReadWriteWithCounter()#org/apache/parquet/hadoop/example/TestInputOutputFormat/runMapReduceJob(org.apache.parquet.hadoop.metadata.CompressionCodecName)
org/apache/parquet/hadoop/example/TestInputOutputFormat/testReadWriteWithCounter()#org/apache/parquet/hadoop/example/TestInputOutputFormat/value(org.apache.parquet.hadoop.Job,java.lang.String,java.lang.String)
org/apache/parquet/hadoop/example/TestInputOutputFormat/testReadWrite()#org/apache/parquet/hadoop/example/TestInputOutputFormat/testReadWrite(org.apache.parquet.hadoop.metadata.CompressionCodecName)
org/apache/parquet/pig/convert/MapConverter/start()#java/util/Map/clear()
org/apache/parquet/pig/convert/MapConverter/getConverter(int)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/parquet/pig/convert/MapConverter/end()#org/apache/parquet/pig/convert/ParentValueContainer/add(java.lang.Object)
org/apache/parquet/pig/convert/MapConverter/end()#java/util/LinkedHashMap/LinkedHashMap(java.util.Map)
org/apache/parquet/benchmarks/ReadBenchmarks/read(org.apache.parquet.hadoop.Path,int,org.apache.parquet.benchmarks.Blackhole)#org/apache/parquet/hadoop/ParquetReader/read()
org/apache/parquet/benchmarks/ReadBenchmarks/read(org.apache.parquet.hadoop.Path,int,org.apache.parquet.benchmarks.Blackhole)#org/apache/parquet/hadoop/ParquetReader/close()
org/apache/parquet/benchmarks/ReadBenchmarks/read(org.apache.parquet.hadoop.Path,int,org.apache.parquet.benchmarks.Blackhole)#org/apache/parquet/example/data/GroupValueSource/getDouble(java.lang.String,int)
org/apache/parquet/benchmarks/ReadBenchmarks/read(org.apache.parquet.hadoop.Path,int,org.apache.parquet.benchmarks.Blackhole)#org/apache/parquet/hadoop/ParquetReader/builder(org.apache.parquet.hadoop.api.ReadSupport,org.apache.parquet.hadoop.Path)
org/apache/parquet/benchmarks/ReadBenchmarks/read(org.apache.parquet.hadoop.Path,int,org.apache.parquet.benchmarks.Blackhole)#org/apache/parquet/example/data/GroupValueSource/getFloat(java.lang.String,int)
org/apache/parquet/benchmarks/ReadBenchmarks/read(org.apache.parquet.hadoop.Path,int,org.apache.parquet.benchmarks.Blackhole)#org/apache/parquet/example/data/GroupValueSource/getInteger(java.lang.String,int)
org/apache/parquet/benchmarks/ReadBenchmarks/read(org.apache.parquet.hadoop.Path,int,org.apache.parquet.benchmarks.Blackhole)#org/apache/parquet/example/data/GroupValueSource/getLong(java.lang.String,int)
org/apache/parquet/benchmarks/ReadBenchmarks/read(org.apache.parquet.hadoop.Path,int,org.apache.parquet.benchmarks.Blackhole)#org/apache/parquet/hadoop/example/GroupReadSupport/GroupReadSupport()
org/apache/parquet/benchmarks/ReadBenchmarks/read(org.apache.parquet.hadoop.Path,int,org.apache.parquet.benchmarks.Blackhole)#org/apache/parquet/example/data/GroupValueSource/getBinary(java.lang.String,int)
org/apache/parquet/benchmarks/ReadBenchmarks/read(org.apache.parquet.hadoop.Path,int,org.apache.parquet.benchmarks.Blackhole)#org/apache/parquet/example/data/GroupValueSource/getBoolean(java.lang.String,int)
org/apache/parquet/benchmarks/ReadBenchmarks/read(org.apache.parquet.hadoop.Path,int,org.apache.parquet.benchmarks.Blackhole)#org/apache/parquet/example/data/GroupValueSource/getInt96(java.lang.String,int)
org/apache/parquet/benchmarks/ReadBenchmarks/read1MRowsBS256MPS4MUncompressed(org.apache.parquet.benchmarks.Blackhole)#org/apache/parquet/benchmarks/ReadBenchmarks/read(org.apache.parquet.hadoop.Path,int,org.apache.parquet.benchmarks.Blackhole)
org/apache/parquet/benchmarks/ReadBenchmarks/read1MRowsDefaultBlockAndPageSizeSNAPPY(org.apache.parquet.benchmarks.Blackhole)#org/apache/parquet/benchmarks/ReadBenchmarks/read(org.apache.parquet.hadoop.Path,int,org.apache.parquet.benchmarks.Blackhole)
org/apache/parquet/benchmarks/ReadBenchmarks/read1MRowsBS512MPS4MUncompressed(org.apache.parquet.benchmarks.Blackhole)#org/apache/parquet/benchmarks/ReadBenchmarks/read(org.apache.parquet.hadoop.Path,int,org.apache.parquet.benchmarks.Blackhole)
org/apache/parquet/benchmarks/ReadBenchmarks/read1MRowsBS256MPS8MUncompressed(org.apache.parquet.benchmarks.Blackhole)#org/apache/parquet/benchmarks/ReadBenchmarks/read(org.apache.parquet.hadoop.Path,int,org.apache.parquet.benchmarks.Blackhole)
org/apache/parquet/benchmarks/ReadBenchmarks/read1MRowsBS512MPS8MUncompressed(org.apache.parquet.benchmarks.Blackhole)#org/apache/parquet/benchmarks/ReadBenchmarks/read(org.apache.parquet.hadoop.Path,int,org.apache.parquet.benchmarks.Blackhole)
org/apache/parquet/benchmarks/ReadBenchmarks/read1MRowsDefaultBlockAndPageSizeGZIP(org.apache.parquet.benchmarks.Blackhole)#org/apache/parquet/benchmarks/ReadBenchmarks/read(org.apache.parquet.hadoop.Path,int,org.apache.parquet.benchmarks.Blackhole)
org/apache/parquet/benchmarks/ReadBenchmarks/read1MRowsDefaultBlockAndPageSizeUncompressed(org.apache.parquet.benchmarks.Blackhole)#org/apache/parquet/benchmarks/ReadBenchmarks/read(org.apache.parquet.hadoop.Path,int,org.apache.parquet.benchmarks.Blackhole)
org/apache/parquet/thrift/BufferedProtocolReadToWrite/writeDoubleAction(java.util.List,double)#org/apache/parquet/thrift/BufferedProtocolReadToWrite/writeDoubleAction(java/util/List,double)/$anonymous1/()
org/apache/parquet/thrift/BufferedProtocolReadToWrite/writeDoubleAction(java.util.List,double)#java/util/List/add(E)
org/apache/parquet/thrift/BufferedProtocolReadToWrite/writeBoolAction(java.util.List,boolean)#org/apache/parquet/thrift/BufferedProtocolReadToWrite/writeBoolAction(java/util/List,boolean)/$anonymous1/()
org/apache/parquet/thrift/BufferedProtocolReadToWrite/writeBoolAction(java.util.List,boolean)#java/util/List/add(E)
org/apache/parquet/thrift/BufferedProtocolReadToWrite/writeStringAction(java.util.List,java.nio.ByteBuffer)#org/apache/parquet/thrift/BufferedProtocolReadToWrite/writeStringAction(java/util/List,java/nio/ByteBuffer)/$anonymous1/()
org/apache/parquet/thrift/BufferedProtocolReadToWrite/writeStringAction(java.util.List,java.nio.ByteBuffer)#java/util/List/add(E)
org/apache/parquet/thrift/BufferedProtocolReadToWrite/writeLongAction(java.util.List,long)#org/apache/parquet/thrift/BufferedProtocolReadToWrite/writeLongAction(java/util/List,long)/$anonymous1/()
org/apache/parquet/thrift/BufferedProtocolReadToWrite/writeLongAction(java.util.List,long)#java/util/List/add(E)
org/apache/parquet/thrift/BufferedProtocolReadToWrite/readOneMap(org.apache.parquet.hadoop.thrift.TProtocol,java.util.List,org.apache.parquet.thrift.struct.ThriftType.MapType)#org/apache/parquet/thrift/struct/ThriftType/MapType/getKey()
org/apache/parquet/thrift/BufferedProtocolReadToWrite/readOneMap(org.apache.parquet.hadoop.thrift.TProtocol,java.util.List,org.apache.parquet.thrift.struct.ThriftType.MapType)#org/apache/parquet/thrift/struct/ThriftField/getType()
org/apache/parquet/thrift/BufferedProtocolReadToWrite/readOneMap(org.apache.parquet.hadoop.thrift.TProtocol,java.util.List,org.apache.parquet.thrift.struct.ThriftType.MapType)#org/apache/parquet/thrift/BufferedProtocolReadToWrite/readOneMap(org/apache/parquet/hadoop/thrift/TProtocol,java/util/List,org/apache/parquet/thrift/struct/ThriftType/MapType)/$anonymous1/()
org/apache/parquet/thrift/BufferedProtocolReadToWrite/readOneMap(org.apache.parquet.hadoop.thrift.TProtocol,java.util.List,org.apache.parquet.thrift.struct.ThriftType.MapType)#org/apache/parquet/thrift/struct/ThriftType/MapType/getValue()
org/apache/parquet/thrift/BufferedProtocolReadToWrite/readOneMap(org.apache.parquet.hadoop.thrift.TProtocol,java.util.List,org.apache.parquet.thrift.struct.ThriftType.MapType)#java/util/List/add(E)
org/apache/parquet/thrift/BufferedProtocolReadToWrite/readOneMap(org.apache.parquet.hadoop.thrift.TProtocol,java.util.List,org.apache.parquet.thrift.struct.ThriftType.MapType)#org/apache/parquet/thrift/BufferedProtocolReadToWrite/readOneValue(org.apache.parquet.hadoop.thrift.TProtocol,byte,java.util.List,org.apache.parquet.thrift.struct.ThriftType)
org/apache/parquet/thrift/BufferedProtocolReadToWrite/readOne(org.apache.parquet.hadoop.thrift.TProtocol,org.apache.parquet.hadoop.thrift.TProtocol)#org/apache/parquet/thrift/SkippableException/SkippableException(java.lang.String,java.lang.Throwable)
org/apache/parquet/thrift/BufferedProtocolReadToWrite/readOne(org.apache.parquet.hadoop.thrift.TProtocol,org.apache.parquet.hadoop.thrift.TProtocol)#org/apache/parquet/thrift/BufferedProtocolReadToWrite/Action/write(org.apache.parquet.hadoop.thrift.TProtocol)
org/apache/parquet/thrift/BufferedProtocolReadToWrite/readOne(org.apache.parquet.hadoop.thrift.TProtocol,org.apache.parquet.hadoop.thrift.TProtocol)#java/util/LinkedList/LinkedList()
org/apache/parquet/thrift/BufferedProtocolReadToWrite/readOne(org.apache.parquet.hadoop.thrift.TProtocol,org.apache.parquet.hadoop.thrift.TProtocol)#org/apache/parquet/thrift/BufferedProtocolReadToWrite/notifyRecordHasFieldIgnored()
org/apache/parquet/thrift/BufferedProtocolReadToWrite/readOne(org.apache.parquet.hadoop.thrift.TProtocol,org.apache.parquet.hadoop.thrift.TProtocol)#org/apache/parquet/thrift/BufferedProtocolReadToWrite/error(java.lang.String,java.util.List)
org/apache/parquet/thrift/BufferedProtocolReadToWrite/readOne(org.apache.parquet.hadoop.thrift.TProtocol,org.apache.parquet.hadoop.thrift.TProtocol)#org/apache/parquet/thrift/BufferedProtocolReadToWrite/readOneStruct(org.apache.parquet.hadoop.thrift.TProtocol,java.util.List,org.apache.parquet.thrift.struct.ThriftType.StructType)
org/apache/parquet/thrift/BufferedProtocolReadToWrite/handleUnrecognizedField(org.apache.parquet.thrift.projection.amend.TField,org.apache.parquet.thrift.struct.ThriftType.StructType,org.apache.parquet.hadoop.thrift.TProtocol)#org/apache/parquet/thrift/struct/ThriftType/StructType/getStructOrUnionType()
org/apache/parquet/thrift/BufferedProtocolReadToWrite/handleUnrecognizedField(org.apache.parquet.thrift.projection.amend.TField,org.apache.parquet.thrift.struct.ThriftType.StructType,org.apache.parquet.hadoop.thrift.TProtocol)#org/apache/parquet/thrift/ProtocolReadToWrite/readOneValue(org.apache.parquet.hadoop.thrift.TProtocol,org.apache.parquet.hadoop.thrift.TProtocol,byte)
org/apache/parquet/thrift/BufferedProtocolReadToWrite/handleUnrecognizedField(org.apache.parquet.thrift.projection.amend.TField,org.apache.parquet.thrift.struct.ThriftType.StructType,org.apache.parquet.hadoop.thrift.TProtocol)#org/apache/parquet/thrift/DecodingSchemaMismatchException/DecodingSchemaMismatchException(java.lang.String)
org/apache/parquet/thrift/BufferedProtocolReadToWrite/handleUnrecognizedField(org.apache.parquet.thrift.projection.amend.TField,org.apache.parquet.thrift.struct.ThriftType.StructType,org.apache.parquet.hadoop.thrift.TProtocol)#org/apache/parquet/thrift/BufferedProtocolReadToWrite/NullProtocol/NullProtocol()
org/apache/parquet/thrift/BufferedProtocolReadToWrite/handleUnrecognizedField(org.apache.parquet.thrift.projection.amend.TField,org.apache.parquet.thrift.struct.ThriftType.StructType,org.apache.parquet.hadoop.thrift.TProtocol)#org/apache/parquet/thrift/ProtocolReadToWrite/ProtocolReadToWrite()
org/apache/parquet/thrift/BufferedProtocolReadToWrite/handleUnrecognizedField(org.apache.parquet.thrift.projection.amend.TField,org.apache.parquet.thrift.struct.ThriftType.StructType,org.apache.parquet.hadoop.thrift.TProtocol)#org/apache/parquet/thrift/BufferedProtocolReadToWrite/notifyIgnoredFieldsOfRecord(org.apache.parquet.thrift.projection.amend.TField)
org/apache/parquet/thrift/BufferedProtocolReadToWrite/handleUnrecognizedField(org.apache.parquet.thrift.projection.amend.TField,org.apache.parquet.thrift.struct.ThriftType.StructType,org.apache.parquet.hadoop.thrift.TProtocol)#org/apache/parquet/thrift/BufferedProtocolReadToWrite/unknownStructOrUnion(org.apache.parquet.thrift.struct.ThriftType.StructType)
org/apache/parquet/thrift/BufferedProtocolReadToWrite/handleUnrecognizedField(org.apache.parquet.thrift.projection.amend.TField,org.apache.parquet.thrift.struct.ThriftType.StructType,org.apache.parquet.hadoop.thrift.TProtocol)#org/apache/parquet/thrift/BufferedProtocolReadToWrite/unrecognizedStructOrUnion(org.apache.parquet.thrift.struct.ThriftType.StructType.StructOrUnionType)
org/apache/parquet/thrift/BufferedProtocolReadToWrite/unknownStructOrUnion(org.apache.parquet.thrift.struct.ThriftType.StructType)#org/apache/parquet/ShouldNeverHappenException/ShouldNeverHappenException(java.lang.String)
org/apache/parquet/thrift/BufferedProtocolReadToWrite/unrecognizedStructOrUnion(org.apache.parquet.thrift.struct.ThriftType.StructType.StructOrUnionType)#org/apache/parquet/ShouldNeverHappenException/ShouldNeverHappenException(java.lang.String)
org/apache/parquet/thrift/BufferedProtocolReadToWrite/checkEnum(org.apache.parquet.thrift.struct.ThriftType,int)#org/apache/parquet/thrift/struct/ThriftType/EnumType/getEnumValueById(int)
org/apache/parquet/thrift/BufferedProtocolReadToWrite/checkEnum(org.apache.parquet.thrift.struct.ThriftType,int)#org/apache/parquet/thrift/struct/ThriftType/getType()
org/apache/parquet/thrift/BufferedProtocolReadToWrite/checkEnum(org.apache.parquet.thrift.struct.ThriftType,int)#org/apache/parquet/thrift/DecodingSchemaMismatchException/DecodingSchemaMismatchException(java.lang.String)
org/apache/parquet/thrift/BufferedProtocolReadToWrite/typeName(byte)#java/lang/Enum/name()
org/apache/parquet/thrift/BufferedProtocolReadToWrite/typeName(byte)#org/apache/parquet/thrift/struct/ThriftTypeID/fromByte(byte)
org/apache/parquet/thrift/BufferedProtocolReadToWrite/typeName(byte)#java/lang/String/valueOf(int)
org/apache/parquet/thrift/BufferedProtocolReadToWrite/writeByteAction(java.util.List,byte)#java/util/List/add(E)
org/apache/parquet/thrift/BufferedProtocolReadToWrite/writeByteAction(java.util.List,byte)#org/apache/parquet/thrift/BufferedProtocolReadToWrite/writeByteAction(java/util/List,byte)/$anonymous1/()
org/apache/parquet/thrift/BufferedProtocolReadToWrite/assertUnionHasExactlyOneChild(org.apache.parquet.thrift.struct.ThriftType.StructType,int)#org/apache/parquet/thrift/struct/ThriftType/StructType/getStructOrUnionType()
org/apache/parquet/thrift/BufferedProtocolReadToWrite/assertUnionHasExactlyOneChild(org.apache.parquet.thrift.struct.ThriftType.StructType,int)#org/apache/parquet/thrift/DecodingSchemaMismatchException/DecodingSchemaMismatchException(java.lang.String)
org/apache/parquet/thrift/BufferedProtocolReadToWrite/assertUnionHasExactlyOneChild(org.apache.parquet.thrift.struct.ThriftType.StructType,int)#org/apache/parquet/thrift/BufferedProtocolReadToWrite/unknownStructOrUnion(org.apache.parquet.thrift.struct.ThriftType.StructType)
org/apache/parquet/thrift/BufferedProtocolReadToWrite/assertUnionHasExactlyOneChild(org.apache.parquet.thrift.struct.ThriftType.StructType,int)#org/apache/parquet/thrift/BufferedProtocolReadToWrite/unrecognizedStructOrUnion(org.apache.parquet.thrift.struct.ThriftType.StructType.StructOrUnionType)
org/apache/parquet/thrift/BufferedProtocolReadToWrite/notifyRecordHasFieldIgnored()#org/apache/parquet/thrift/FieldIgnoredHandler/handleRecordHasFieldIgnored()
org/apache/parquet/thrift/BufferedProtocolReadToWrite/readOneValue(org.apache.parquet.hadoop.thrift.TProtocol,byte,java.util.List,org.apache.parquet.thrift.struct.ThriftType)#org/apache/parquet/thrift/BufferedProtocolReadToWrite/writeDoubleAction(java.util.List,double)
org/apache/parquet/thrift/BufferedProtocolReadToWrite/readOneValue(org.apache.parquet.hadoop.thrift.TProtocol,byte,java.util.List,org.apache.parquet.thrift.struct.ThriftType)#org/apache/parquet/thrift/BufferedProtocolReadToWrite/writeBoolAction(java.util.List,boolean)
org/apache/parquet/thrift/BufferedProtocolReadToWrite/readOneValue(org.apache.parquet.hadoop.thrift.TProtocol,byte,java.util.List,org.apache.parquet.thrift.struct.ThriftType)#org/apache/parquet/thrift/BufferedProtocolReadToWrite/readOneMap(org.apache.parquet.hadoop.thrift.TProtocol,java.util.List,org.apache.parquet.thrift.struct.ThriftType.MapType)
org/apache/parquet/thrift/BufferedProtocolReadToWrite/readOneValue(org.apache.parquet.hadoop.thrift.TProtocol,byte,java.util.List,org.apache.parquet.thrift.struct.ThriftType)#org/apache/parquet/thrift/BufferedProtocolReadToWrite/writeLongAction(java.util.List,long)
org/apache/parquet/thrift/BufferedProtocolReadToWrite/readOneValue(org.apache.parquet.hadoop.thrift.TProtocol,byte,java.util.List,org.apache.parquet.thrift.struct.ThriftType)#org/apache/parquet/thrift/BufferedProtocolReadToWrite/readOneSet(org.apache.parquet.hadoop.thrift.TProtocol,java.util.List,org.apache.parquet.thrift.struct.ThriftType.SetType)
org/apache/parquet/thrift/BufferedProtocolReadToWrite/readOneValue(org.apache.parquet.hadoop.thrift.TProtocol,byte,java.util.List,org.apache.parquet.thrift.struct.ThriftType)#org/apache/parquet/thrift/struct/ThriftTypeID/getSerializedThriftType()
org/apache/parquet/thrift/BufferedProtocolReadToWrite/readOneValue(org.apache.parquet.hadoop.thrift.TProtocol,byte,java.util.List,org.apache.parquet.thrift.struct.ThriftType)#org/apache/parquet/thrift/BufferedProtocolReadToWrite/writeStringAction(java.util.List,java.nio.ByteBuffer)
org/apache/parquet/thrift/BufferedProtocolReadToWrite/readOneValue(org.apache.parquet.hadoop.thrift.TProtocol,byte,java.util.List,org.apache.parquet.thrift.struct.ThriftType)#org/apache/parquet/thrift/struct/ThriftType/getType()
org/apache/parquet/thrift/BufferedProtocolReadToWrite/readOneValue(org.apache.parquet.hadoop.thrift.TProtocol,byte,java.util.List,org.apache.parquet.thrift.struct.ThriftType)#org/apache/parquet/thrift/BufferedProtocolReadToWrite/checkEnum(org.apache.parquet.thrift.struct.ThriftType,int)
org/apache/parquet/thrift/BufferedProtocolReadToWrite/readOneValue(org.apache.parquet.hadoop.thrift.TProtocol,byte,java.util.List,org.apache.parquet.thrift.struct.ThriftType)#org/apache/parquet/thrift/BufferedProtocolReadToWrite/typeName(byte)
org/apache/parquet/thrift/BufferedProtocolReadToWrite/readOneValue(org.apache.parquet.hadoop.thrift.TProtocol,byte,java.util.List,org.apache.parquet.thrift.struct.ThriftType)#org/apache/parquet/thrift/DecodingSchemaMismatchException/DecodingSchemaMismatchException(java.lang.String)
org/apache/parquet/thrift/BufferedProtocolReadToWrite/readOneValue(org.apache.parquet.hadoop.thrift.TProtocol,byte,java.util.List,org.apache.parquet.thrift.struct.ThriftType)#org/apache/parquet/thrift/BufferedProtocolReadToWrite/writeByteAction(java.util.List,byte)
org/apache/parquet/thrift/BufferedProtocolReadToWrite/readOneValue(org.apache.parquet.hadoop.thrift.TProtocol,byte,java.util.List,org.apache.parquet.thrift.struct.ThriftType)#org/apache/parquet/thrift/BufferedProtocolReadToWrite/readOneList(org.apache.parquet.hadoop.thrift.TProtocol,java.util.List,org.apache.parquet.thrift.struct.ThriftType.ListType)
org/apache/parquet/thrift/BufferedProtocolReadToWrite/readOneValue(org.apache.parquet.hadoop.thrift.TProtocol,byte,java.util.List,org.apache.parquet.thrift.struct.ThriftType)#org/apache/parquet/thrift/BufferedProtocolReadToWrite/writeShortAction(java.util.List,short)
org/apache/parquet/thrift/BufferedProtocolReadToWrite/readOneValue(org.apache.parquet.hadoop.thrift.TProtocol,byte,java.util.List,org.apache.parquet.thrift.struct.ThriftType)#org/apache/parquet/thrift/BufferedProtocolReadToWrite/readOneStruct(org.apache.parquet.hadoop.thrift.TProtocol,java.util.List,org.apache.parquet.thrift.struct.ThriftType.StructType)
org/apache/parquet/thrift/BufferedProtocolReadToWrite/readOneValue(org.apache.parquet.hadoop.thrift.TProtocol,byte,java.util.List,org.apache.parquet.thrift.struct.ThriftType)#org/apache/parquet/thrift/BufferedProtocolReadToWrite/writeIntAction(java.util.List,int)
org/apache/parquet/thrift/BufferedProtocolReadToWrite/readOneSet(org.apache.parquet.hadoop.thrift.TProtocol,java.util.List,org.apache.parquet.thrift.struct.ThriftType.SetType)#org/apache/parquet/thrift/struct/ThriftField/getType()
org/apache/parquet/thrift/BufferedProtocolReadToWrite/readOneSet(org.apache.parquet.hadoop.thrift.TProtocol,java.util.List,org.apache.parquet.thrift.struct.ThriftType.SetType)#java/util/List/add(E)
org/apache/parquet/thrift/BufferedProtocolReadToWrite/readOneSet(org.apache.parquet.hadoop.thrift.TProtocol,java.util.List,org.apache.parquet.thrift.struct.ThriftType.SetType)#org/apache/parquet/thrift/BufferedProtocolReadToWrite/readOneSet(org/apache/parquet/hadoop/thrift/TProtocol,java/util/List,org/apache/parquet/thrift/struct/ThriftType/SetType)/$anonymous1/()
org/apache/parquet/thrift/BufferedProtocolReadToWrite/readOneSet(org.apache.parquet.hadoop.thrift.TProtocol,java.util.List,org.apache.parquet.thrift.struct.ThriftType.SetType)#org/apache/parquet/thrift/struct/ThriftType/SetType/getValues()
org/apache/parquet/thrift/BufferedProtocolReadToWrite/readOneSet(org.apache.parquet.hadoop.thrift.TProtocol,java.util.List,org.apache.parquet.thrift.struct.ThriftType.SetType)#org/apache/parquet/thrift/BufferedProtocolReadToWrite/readCollectionElements(org.apache.parquet.hadoop.thrift.TProtocol,int,byte,java.util.List,org.apache.parquet.thrift.struct.ThriftType)
org/apache/parquet/thrift/BufferedProtocolReadToWrite/error(java.lang.String,java.util.List)#org/apache/parquet/thrift/BufferedProtocolReadToWrite/Action/toDebugString()
org/apache/parquet/thrift/BufferedProtocolReadToWrite/error(java.lang.String,java.util.List)#java/lang/StringBuilder/append(java.lang.String)
org/apache/parquet/thrift/BufferedProtocolReadToWrite/error(java.lang.String,java.util.List)#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/apache/parquet/thrift/BufferedProtocolReadToWrite/error(java.lang.String,java.util.List)#java/lang/StringBuilder/toString()
org/apache/parquet/thrift/BufferedProtocolReadToWrite/readOneList(org.apache.parquet.hadoop.thrift.TProtocol,java.util.List,org.apache.parquet.thrift.struct.ThriftType.ListType)#org/apache/parquet/thrift/struct/ThriftType/ListType/getValues()
org/apache/parquet/thrift/BufferedProtocolReadToWrite/readOneList(org.apache.parquet.hadoop.thrift.TProtocol,java.util.List,org.apache.parquet.thrift.struct.ThriftType.ListType)#org/apache/parquet/thrift/struct/ThriftField/getType()
org/apache/parquet/thrift/BufferedProtocolReadToWrite/readOneList(org.apache.parquet.hadoop.thrift.TProtocol,java.util.List,org.apache.parquet.thrift.struct.ThriftType.ListType)#org/apache/parquet/thrift/BufferedProtocolReadToWrite/readOneList(org/apache/parquet/hadoop/thrift/TProtocol,java/util/List,org/apache/parquet/thrift/struct/ThriftType/ListType)/$anonymous1/()
org/apache/parquet/thrift/BufferedProtocolReadToWrite/readOneList(org.apache.parquet.hadoop.thrift.TProtocol,java.util.List,org.apache.parquet.thrift.struct.ThriftType.ListType)#java/util/List/add(E)
org/apache/parquet/thrift/BufferedProtocolReadToWrite/readOneList(org.apache.parquet.hadoop.thrift.TProtocol,java.util.List,org.apache.parquet.thrift.struct.ThriftType.ListType)#org/apache/parquet/thrift/BufferedProtocolReadToWrite/readCollectionElements(org.apache.parquet.hadoop.thrift.TProtocol,int,byte,java.util.List,org.apache.parquet.thrift.struct.ThriftType)
org/apache/parquet/thrift/BufferedProtocolReadToWrite/writeShortAction(java.util.List,short)#org/apache/parquet/thrift/BufferedProtocolReadToWrite/writeShortAction(java/util/List,short)/$anonymous1/()
org/apache/parquet/thrift/BufferedProtocolReadToWrite/writeShortAction(java.util.List,short)#java/util/List/add(E)
org/apache/parquet/thrift/BufferedProtocolReadToWrite/readOneStruct(org.apache.parquet.hadoop.thrift.TProtocol,java.util.List,org.apache.parquet.thrift.struct.ThriftType.StructType)#org/apache/parquet/thrift/struct/ThriftField/getType()
org/apache/parquet/thrift/BufferedProtocolReadToWrite/readOneStruct(org.apache.parquet.hadoop.thrift.TProtocol,java.util.List,org.apache.parquet.thrift.struct.ThriftType.StructType)#org/apache/parquet/thrift/BufferedProtocolReadToWrite/handleUnrecognizedField(org.apache.parquet.thrift.projection.amend.TField,org.apache.parquet.thrift.struct.ThriftType.StructType,org.apache.parquet.hadoop.thrift.TProtocol)
org/apache/parquet/thrift/BufferedProtocolReadToWrite/readOneStruct(org.apache.parquet.hadoop.thrift.TProtocol,java.util.List,org.apache.parquet.thrift.struct.ThriftType.StructType)#org/apache/parquet/thrift/BufferedProtocolReadToWrite/readOneStruct(org/apache/parquet/hadoop/thrift/TProtocol,java/util/List,org/apache/parquet/thrift/struct/ThriftType/StructType)/$anonymous2/()
org/apache/parquet/thrift/BufferedProtocolReadToWrite/readOneStruct(org.apache.parquet.hadoop.thrift.TProtocol,java.util.List,org.apache.parquet.thrift.struct.ThriftType.StructType)#org/apache/parquet/thrift/BufferedProtocolReadToWrite/readOneStruct(org/apache/parquet/hadoop/thrift/TProtocol,java/util/List,org/apache/parquet/thrift/struct/ThriftType/StructType)/$anonymous1/()
org/apache/parquet/thrift/BufferedProtocolReadToWrite/readOneStruct(org.apache.parquet.hadoop.thrift.TProtocol,java.util.List,org.apache.parquet.thrift.struct.ThriftType.StructType)#org/apache/parquet/thrift/struct/ThriftType/StructType/getChildById(short)
org/apache/parquet/thrift/BufferedProtocolReadToWrite/readOneStruct(org.apache.parquet.hadoop.thrift.TProtocol,java.util.List,org.apache.parquet.thrift.struct.ThriftType.StructType)#org/apache/parquet/thrift/BufferedProtocolReadToWrite/assertUnionHasExactlyOneChild(org.apache.parquet.thrift.struct.ThriftType.StructType,int)
org/apache/parquet/thrift/BufferedProtocolReadToWrite/readOneStruct(org.apache.parquet.hadoop.thrift.TProtocol,java.util.List,org.apache.parquet.thrift.struct.ThriftType.StructType)#java/util/List/add(E)
org/apache/parquet/thrift/BufferedProtocolReadToWrite/readOneStruct(org.apache.parquet.hadoop.thrift.TProtocol,java.util.List,org.apache.parquet.thrift.struct.ThriftType.StructType)#org/apache/parquet/thrift/BufferedProtocolReadToWrite/readOneValue(org.apache.parquet.hadoop.thrift.TProtocol,byte,java.util.List,org.apache.parquet.thrift.struct.ThriftType)
org/apache/parquet/thrift/BufferedProtocolReadToWrite/writeIntAction(java.util.List,int)#org/apache/parquet/thrift/BufferedProtocolReadToWrite/writeIntAction(java/util/List,int)/$anonymous1/()
org/apache/parquet/thrift/BufferedProtocolReadToWrite/writeIntAction(java.util.List,int)#java/util/List/add(E)
org/apache/parquet/thrift/BufferedProtocolReadToWrite/readCollectionElements(org.apache.parquet.hadoop.thrift.TProtocol,int,byte,java.util.List,org.apache.parquet.thrift.struct.ThriftType)#org/apache/parquet/thrift/BufferedProtocolReadToWrite/readOneValue(org.apache.parquet.hadoop.thrift.TProtocol,byte,java.util.List,org.apache.parquet.thrift.struct.ThriftType)
org/apache/parquet/thrift/BufferedProtocolReadToWrite/notifyIgnoredFieldsOfRecord(org.apache.parquet.thrift.projection.amend.TField)#org/apache/parquet/thrift/FieldIgnoredHandler/handleFieldIgnored(org.apache.parquet.thrift.projection.amend.TField)
org/apache/parquet/filter2/recordlevel/PhoneBookWriter/User/equals(java.lang.Object)#java/lang/String/equals(java.lang.Object)
org/apache/parquet/filter2/recordlevel/PhoneBookWriter/User/equals(java.lang.Object)#java/lang/Object/getClass()
org/apache/parquet/filter2/recordlevel/PhoneBookWriter/User/equals(java.lang.Object)#org/apache/parquet/filter2/recordlevel/PhoneBookWriter/Location/equals(java.lang.Object)
org/apache/parquet/filter2/recordlevel/PhoneBookWriter/User/equals(java.lang.Object)#java/util/List/equals(java.lang.Object)
org/apache/parquet/filter2/recordlevel/PhoneBookWriter/User/hashCode()#java/lang/String/hashCode()
org/apache/parquet/filter2/recordlevel/PhoneBookWriter/User/hashCode()#org/apache/parquet/filter2/recordlevel/PhoneBookWriter/Location/hashCode()
org/apache/parquet/filter2/recordlevel/PhoneBookWriter/User/hashCode()#java/util/List/hashCode()
org/apache/parquet/column/TestEncodingStats/testV2Fallback()#org/apache/parquet/column/EncodingStats/Builder/addDataEncoding(org.apache.parquet.column.Encoding)
org/apache/parquet/column/TestEncodingStats/testV2Fallback()#org/apache/parquet/column/EncodingStats/hasNonDictionaryEncodedPages()
org/apache/parquet/column/TestEncodingStats/testV2Fallback()#org/apache/parquet/column/EncodingStats/Builder/build()
org/apache/parquet/column/TestEncodingStats/testV2Fallback()#org/apache/parquet/column/EncodingStats/Builder/addDictEncoding(org.apache.parquet.column.Encoding)
org/apache/parquet/column/TestEncodingStats/testV2Fallback()#org/apache/parquet/column/EncodingStats/usesV2Pages()
org/apache/parquet/column/TestEncodingStats/testV2Fallback()#org/apache/parquet/column/EncodingStats/hasDictionaryEncodedPages()
org/apache/parquet/column/TestEncodingStats/testV2Fallback()#org/apache/parquet/column/EncodingStats/hasDictionaryPages()
org/apache/parquet/column/TestEncodingStats/testV2Fallback()#org/apache/parquet/column/EncodingStats/Builder/Builder()
org/apache/parquet/column/TestEncodingStats/testV2Fallback()#org/apache/parquet/column/EncodingStats/Builder/withV2Pages()
org/apache/parquet/column/TestEncodingStats/testV2AllDictionary()#org/apache/parquet/column/EncodingStats/Builder/addDataEncoding(org.apache.parquet.column.Encoding)
org/apache/parquet/column/TestEncodingStats/testV2AllDictionary()#org/apache/parquet/column/EncodingStats/hasNonDictionaryEncodedPages()
org/apache/parquet/column/TestEncodingStats/testV2AllDictionary()#org/apache/parquet/column/EncodingStats/Builder/build()
org/apache/parquet/column/TestEncodingStats/testV2AllDictionary()#org/apache/parquet/column/EncodingStats/Builder/addDictEncoding(org.apache.parquet.column.Encoding)
org/apache/parquet/column/TestEncodingStats/testV2AllDictionary()#org/apache/parquet/column/EncodingStats/usesV2Pages()
org/apache/parquet/column/TestEncodingStats/testV2AllDictionary()#org/apache/parquet/column/EncodingStats/hasDictionaryEncodedPages()
org/apache/parquet/column/TestEncodingStats/testV2AllDictionary()#org/apache/parquet/column/EncodingStats/hasDictionaryPages()
org/apache/parquet/column/TestEncodingStats/testV2AllDictionary()#org/apache/parquet/column/EncodingStats/Builder/Builder()
org/apache/parquet/column/TestEncodingStats/testV2AllDictionary()#org/apache/parquet/column/EncodingStats/Builder/withV2Pages()
org/apache/parquet/column/TestEncodingStats/testV1AllDictionary()#org/apache/parquet/column/EncodingStats/Builder/addDataEncoding(org.apache.parquet.column.Encoding)
org/apache/parquet/column/TestEncodingStats/testV1AllDictionary()#org/apache/parquet/column/EncodingStats/hasNonDictionaryEncodedPages()
org/apache/parquet/column/TestEncodingStats/testV1AllDictionary()#org/apache/parquet/column/EncodingStats/Builder/build()
org/apache/parquet/column/TestEncodingStats/testV1AllDictionary()#org/apache/parquet/column/EncodingStats/Builder/addDictEncoding(org.apache.parquet.column.Encoding)
org/apache/parquet/column/TestEncodingStats/testV1AllDictionary()#org/apache/parquet/column/EncodingStats/usesV2Pages()
org/apache/parquet/column/TestEncodingStats/testV1AllDictionary()#org/apache/parquet/column/EncodingStats/hasDictionaryEncodedPages()
org/apache/parquet/column/TestEncodingStats/testV1AllDictionary()#org/apache/parquet/column/EncodingStats/hasDictionaryPages()
org/apache/parquet/column/TestEncodingStats/testV1AllDictionary()#org/apache/parquet/column/EncodingStats/Builder/Builder()
org/apache/parquet/column/TestEncodingStats/testCounts()#org/apache/parquet/column/EncodingStats/Builder/build()
org/apache/parquet/column/TestEncodingStats/testCounts()#org/apache/parquet/column/EncodingStats/Builder/addDataEncoding(org.apache.parquet.column.Encoding,int)
org/apache/parquet/column/TestEncodingStats/testCounts()#org/apache/parquet/column/EncodingStats/getNumDataPagesEncodedAs(org.apache.parquet.column.Encoding)
org/apache/parquet/column/TestEncodingStats/testCounts()#org/apache/parquet/column/EncodingStats/Builder/addDataEncoding(org.apache.parquet.column.Encoding)
org/apache/parquet/column/TestEncodingStats/testCounts()#org/apache/parquet/column/EncodingStats/getNumDictionaryPagesEncodedAs(org.apache.parquet.column.Encoding)
org/apache/parquet/column/TestEncodingStats/testCounts()#org/apache/parquet/column/EncodingStats/Builder/addDictEncoding(org.apache.parquet.column.Encoding)
org/apache/parquet/column/TestEncodingStats/testCounts()#org/apache/parquet/column/EncodingStats/Builder/Builder()
org/apache/parquet/column/TestEncodingStats/testCounts()#org/apache/parquet/column/EncodingStats/Builder/withV2Pages()
org/apache/parquet/column/TestEncodingStats/testNoPages()#org/apache/parquet/column/EncodingStats/hasNonDictionaryEncodedPages()
org/apache/parquet/column/TestEncodingStats/testNoPages()#org/apache/parquet/column/EncodingStats/Builder/build()
org/apache/parquet/column/TestEncodingStats/testNoPages()#org/apache/parquet/column/EncodingStats/usesV2Pages()
org/apache/parquet/column/TestEncodingStats/testNoPages()#org/apache/parquet/column/EncodingStats/hasDictionaryEncodedPages()
org/apache/parquet/column/TestEncodingStats/testNoPages()#org/apache/parquet/column/EncodingStats/hasDictionaryPages()
org/apache/parquet/column/TestEncodingStats/testNoPages()#org/apache/parquet/column/EncodingStats/Builder/Builder()
org/apache/parquet/column/TestEncodingStats/testReusedBuilder()#org/apache/parquet/column/EncodingStats/Builder/addDataEncoding(org.apache.parquet.column.Encoding)
org/apache/parquet/column/TestEncodingStats/testReusedBuilder()#org/apache/parquet/column/EncodingStats/Builder/clear()
org/apache/parquet/column/TestEncodingStats/testReusedBuilder()#org/apache/parquet/column/EncodingStats/Builder/build()
org/apache/parquet/column/TestEncodingStats/testReusedBuilder()#org/apache/parquet/column/EncodingStats/Builder/addDictEncoding(org.apache.parquet.column.Encoding)
org/apache/parquet/column/TestEncodingStats/testReusedBuilder()#java/util/HashMap/HashMap()
org/apache/parquet/column/TestEncodingStats/testReusedBuilder()#java/util/Map/put(K,V)
org/apache/parquet/column/TestEncodingStats/testReusedBuilder()#org/apache/parquet/column/EncodingStats/Builder/addDataEncoding(org.apache.parquet.column.Encoding,int)
org/apache/parquet/column/TestEncodingStats/testReusedBuilder()#org/apache/parquet/column/EncodingStats/Builder/Builder()
org/apache/parquet/column/TestEncodingStats/testReusedBuilder()#org/apache/parquet/column/EncodingStats/Builder/withV2Pages()
org/apache/parquet/column/TestEncodingStats/testV1NoDictionary()#org/apache/parquet/column/EncodingStats/Builder/addDataEncoding(org.apache.parquet.column.Encoding)
org/apache/parquet/column/TestEncodingStats/testV1NoDictionary()#org/apache/parquet/column/EncodingStats/hasNonDictionaryEncodedPages()
org/apache/parquet/column/TestEncodingStats/testV1NoDictionary()#org/apache/parquet/column/EncodingStats/Builder/build()
org/apache/parquet/column/TestEncodingStats/testV1NoDictionary()#org/apache/parquet/column/EncodingStats/usesV2Pages()
org/apache/parquet/column/TestEncodingStats/testV1NoDictionary()#org/apache/parquet/column/EncodingStats/hasDictionaryEncodedPages()
org/apache/parquet/column/TestEncodingStats/testV1NoDictionary()#org/apache/parquet/column/EncodingStats/hasDictionaryPages()
org/apache/parquet/column/TestEncodingStats/testV1NoDictionary()#org/apache/parquet/column/EncodingStats/Builder/Builder()
org/apache/parquet/column/TestEncodingStats/testV2NoDictionary()#org/apache/parquet/column/EncodingStats/Builder/addDataEncoding(org.apache.parquet.column.Encoding)
org/apache/parquet/column/TestEncodingStats/testV2NoDictionary()#org/apache/parquet/column/EncodingStats/hasNonDictionaryEncodedPages()
org/apache/parquet/column/TestEncodingStats/testV2NoDictionary()#org/apache/parquet/column/EncodingStats/Builder/build()
org/apache/parquet/column/TestEncodingStats/testV2NoDictionary()#org/apache/parquet/column/EncodingStats/usesV2Pages()
org/apache/parquet/column/TestEncodingStats/testV2NoDictionary()#org/apache/parquet/column/EncodingStats/hasDictionaryEncodedPages()
org/apache/parquet/column/TestEncodingStats/testV2NoDictionary()#org/apache/parquet/column/EncodingStats/hasDictionaryPages()
org/apache/parquet/column/TestEncodingStats/testV2NoDictionary()#org/apache/parquet/column/EncodingStats/Builder/Builder()
org/apache/parquet/column/TestEncodingStats/testV2NoDictionary()#org/apache/parquet/column/EncodingStats/Builder/withV2Pages()
org/apache/parquet/column/TestEncodingStats/testV1Fallback()#org/apache/parquet/column/EncodingStats/Builder/addDataEncoding(org.apache.parquet.column.Encoding)
org/apache/parquet/column/TestEncodingStats/testV1Fallback()#org/apache/parquet/column/EncodingStats/hasNonDictionaryEncodedPages()
org/apache/parquet/column/TestEncodingStats/testV1Fallback()#org/apache/parquet/column/EncodingStats/Builder/build()
org/apache/parquet/column/TestEncodingStats/testV1Fallback()#org/apache/parquet/column/EncodingStats/Builder/addDictEncoding(org.apache.parquet.column.Encoding)
org/apache/parquet/column/TestEncodingStats/testV1Fallback()#org/apache/parquet/column/EncodingStats/usesV2Pages()
org/apache/parquet/column/TestEncodingStats/testV1Fallback()#org/apache/parquet/column/EncodingStats/hasDictionaryEncodedPages()
org/apache/parquet/column/TestEncodingStats/testV1Fallback()#org/apache/parquet/column/EncodingStats/hasDictionaryPages()
org/apache/parquet/column/TestEncodingStats/testV1Fallback()#org/apache/parquet/column/EncodingStats/Builder/Builder()
org/apache/parquet/column/TestEncodingStats/testNoDataPages()#org/apache/parquet/column/EncodingStats/hasNonDictionaryEncodedPages()
org/apache/parquet/column/TestEncodingStats/testNoDataPages()#org/apache/parquet/column/EncodingStats/Builder/build()
org/apache/parquet/column/TestEncodingStats/testNoDataPages()#org/apache/parquet/column/EncodingStats/Builder/addDictEncoding(org.apache.parquet.column.Encoding)
org/apache/parquet/column/TestEncodingStats/testNoDataPages()#org/apache/parquet/column/EncodingStats/usesV2Pages()
org/apache/parquet/column/TestEncodingStats/testNoDataPages()#org/apache/parquet/column/EncodingStats/hasDictionaryEncodedPages()
org/apache/parquet/column/TestEncodingStats/testNoDataPages()#org/apache/parquet/column/EncodingStats/hasDictionaryPages()
org/apache/parquet/column/TestEncodingStats/testNoDataPages()#org/apache/parquet/column/EncodingStats/Builder/Builder()
org/apache/parquet/bytes/BytesInput/UnsignedVarLongBytesInput/size()#java/lang/Long/numberOfLeadingZeros(long)
org/apache/parquet/bytes/BytesInput/UnsignedVarLongBytesInput/writeAllTo(java.io.OutputStream)#org/apache/parquet/bytes/BytesUtils/writeUnsignedVarLong(long,java.io.OutputStream)
org/apache/parquet/hadoop/InternalParquetRecordReader/toSetMultiMap(java.util.Map)#java/util/Map/Entry/getValue()
org/apache/parquet/hadoop/InternalParquetRecordReader/toSetMultiMap(java.util.Map)#java/util/Collections/unmodifiableMap(java.util.Map)
org/apache/parquet/hadoop/InternalParquetRecordReader/toSetMultiMap(java.util.Map)#java/util/HashMap/HashMap()
org/apache/parquet/hadoop/InternalParquetRecordReader/toSetMultiMap(java.util.Map)#java/util/Set/add(E)
org/apache/parquet/hadoop/InternalParquetRecordReader/toSetMultiMap(java.util.Map)#java/util/Map/Entry/getKey()
org/apache/parquet/hadoop/InternalParquetRecordReader/toSetMultiMap(java.util.Map)#java/util/Map/put(K,V)
org/apache/parquet/hadoop/InternalParquetRecordReader/toSetMultiMap(java.util.Map)#java/util/HashSet/HashSet()
org/apache/parquet/hadoop/InternalParquetRecordReader/toSetMultiMap(java.util.Map)#java/util/Map/entrySet()
org/apache/parquet/hadoop/InternalParquetRecordReader/toSetMultiMap(java.util.Map)#java/util/Collections/unmodifiableSet(java.util.Set)
org/apache/parquet/hadoop/InternalParquetRecordReader/checkRead()#org/apache/parquet/io/MessageColumnIO/getRecordReader(org.apache.parquet.column.page.PageReadStore,org.apache.parquet.io.api.RecordMaterializer,org.apache.parquet.filter2.compat.FilterCompat.Filter)
org/apache/parquet/hadoop/InternalParquetRecordReader/checkRead()#java/io/IOException/IOException(java.lang.String)
org/apache/parquet/hadoop/InternalParquetRecordReader/checkRead()#org/apache/parquet/hadoop/util/counters/BenchmarkCounter/incrementTime(long)
org/apache/parquet/hadoop/InternalParquetRecordReader/checkRead()#org/apache/parquet/io/ColumnIOFactory/getColumnIO(org.apache.parquet.schema.MessageType,org.apache.parquet.schema.MessageType,boolean)
org/apache/parquet/hadoop/InternalParquetRecordReader/checkRead()#org/apache/parquet/hadoop/ParquetFileReader/readNextRowGroup()
org/apache/parquet/hadoop/InternalParquetRecordReader/checkRead()#org/apache/parquet/column/page/PageReadStore/getRowCount()
org/apache/parquet/hadoop/InternalParquetRecordReader/checkRead()#java/lang/System/currentTimeMillis()
org/apache/parquet/hadoop/InternalParquetRecordReader/initialize(org.apache.parquet.hadoop.ParquetFileReader,org.apache.parquet.hadoop.Configuration)#org/apache/parquet/hadoop/InternalParquetRecordReader/toSetMultiMap(java.util.Map)
org/apache/parquet/hadoop/InternalParquetRecordReader/initialize(org.apache.parquet.hadoop.ParquetFileReader,org.apache.parquet.hadoop.Configuration)#org/apache/parquet/hadoop/metadata/ParquetMetadata/getFileMetaData()
org/apache/parquet/hadoop/InternalParquetRecordReader/initialize(org.apache.parquet.hadoop.ParquetFileReader,org.apache.parquet.hadoop.Configuration)#org/apache/parquet/hadoop/api/InitContext/InitContext(org.apache.parquet.hadoop.Configuration,java.util.Map,org.apache.parquet.schema.MessageType)
org/apache/parquet/hadoop/InternalParquetRecordReader/initialize(org.apache.parquet.hadoop.ParquetFileReader,org.apache.parquet.hadoop.Configuration)#org/apache/parquet/hadoop/api/ReadSupport/ReadContext/getRequestedSchema()
org/apache/parquet/hadoop/InternalParquetRecordReader/initialize(org.apache.parquet.hadoop.ParquetFileReader,org.apache.parquet.hadoop.Configuration)#java/util/List/size()
org/apache/parquet/hadoop/InternalParquetRecordReader/initialize(org.apache.parquet.hadoop.ParquetFileReader,org.apache.parquet.hadoop.Configuration)#org/apache/parquet/hadoop/UnmaterializableRecordCounter/UnmaterializableRecordCounter(org.apache.parquet.hadoop.Configuration,long)
org/apache/parquet/hadoop/InternalParquetRecordReader/initialize(org.apache.parquet.hadoop.ParquetFileReader,org.apache.parquet.hadoop.Configuration)#org/apache/parquet/io/ColumnIOFactory/ColumnIOFactory(java.lang.String)
org/apache/parquet/hadoop/InternalParquetRecordReader/initialize(org.apache.parquet.hadoop.ParquetFileReader,org.apache.parquet.hadoop.Configuration)#org/apache/parquet/hadoop/ParquetFileReader/getRecordCount()
org/apache/parquet/hadoop/InternalParquetRecordReader/initialize(org.apache.parquet.hadoop.ParquetFileReader,org.apache.parquet.hadoop.Configuration)#org/apache/parquet/hadoop/ParquetFileReader/getFooter()
org/apache/parquet/hadoop/InternalParquetRecordReader/initialize(org.apache.parquet.hadoop.ParquetFileReader,org.apache.parquet.hadoop.Configuration)#org/apache/parquet/schema/MessageType/getPaths()
org/apache/parquet/hadoop/InternalParquetRecordReader/initialize(org.apache.parquet.hadoop.ParquetFileReader,org.apache.parquet.hadoop.Configuration)#org/apache/parquet/hadoop/metadata/FileMetaData/getCreatedBy()
org/apache/parquet/hadoop/InternalParquetRecordReader/initialize(org.apache.parquet.hadoop.ParquetFileReader,org.apache.parquet.hadoop.Configuration)#org/apache/parquet/hadoop/api/ReadSupport/prepareForRead(org.apache.parquet.hadoop.Configuration,java.util.Map,org.apache.parquet.schema.MessageType,org.apache.parquet.hadoop.api.ReadSupport.ReadContext)
org/apache/parquet/hadoop/InternalParquetRecordReader/initialize(org.apache.parquet.hadoop.ParquetFileReader,org.apache.parquet.hadoop.Configuration)#org/apache/parquet/hadoop/ParquetFileReader/setRequestedSchema(org.apache.parquet.schema.MessageType)
org/apache/parquet/hadoop/InternalParquetRecordReader/initialize(org.apache.parquet.hadoop.ParquetFileReader,org.apache.parquet.hadoop.Configuration)#org/apache/parquet/hadoop/api/ReadSupport/init(org.apache.parquet.hadoop.api.InitContext)
org/apache/parquet/hadoop/InternalParquetRecordReader/initialize(org.apache.parquet.hadoop.ParquetFileReader,org.apache.parquet.hadoop.Configuration)#org/apache/parquet/hadoop/metadata/FileMetaData/getSchema()
org/apache/parquet/hadoop/InternalParquetRecordReader/initialize(org.apache.parquet.hadoop.ParquetFileReader,org.apache.parquet.hadoop.Configuration)#org/apache/parquet/hadoop/metadata/FileMetaData/getKeyValueMetaData()
org/apache/parquet/hadoop/InternalParquetRecordReader/close()#org/apache/parquet/hadoop/ParquetFileReader/close()
org/apache/parquet/hadoop/InternalParquetRecordReader/nextKeyValue()#org/apache/parquet/hadoop/ParquetFileReader/getPath()
org/apache/parquet/hadoop/InternalParquetRecordReader/nextKeyValue()#java/lang/String/format(java.lang.String,java.lang.Object[])
org/apache/parquet/hadoop/InternalParquetRecordReader/nextKeyValue()#org/apache/parquet/io/RecordReader/shouldSkipCurrentRecord()
org/apache/parquet/hadoop/InternalParquetRecordReader/nextKeyValue()#org/apache/parquet/hadoop/UnmaterializableRecordCounter/incErrors(org.apache.parquet.io.api.RecordMaterializer.RecordMaterializationException)
org/apache/parquet/hadoop/InternalParquetRecordReader/nextKeyValue()#org/apache/parquet/hadoop/InternalParquetRecordReader/checkRead()
org/apache/parquet/hadoop/InternalParquetRecordReader/nextKeyValue()#org/apache/parquet/io/RecordReader/read()
org/apache/parquet/hadoop/InternalParquetRecordReader/nextKeyValue()#org/apache/parquet/io/ParquetDecodingException/ParquetDecodingException(java.lang.String,java.lang.Throwable)
org/apache/parquet/SemanticVersion/Prerelease/compareTo(org.apache.parquet.SemanticVersion.Prerelease)#org/apache/parquet/SemanticVersion/NumberOrString/compareTo(org.apache.parquet.SemanticVersion.NumberOrString)
org/apache/parquet/SemanticVersion/Prerelease/compareTo(org.apache.parquet.SemanticVersion.Prerelease)#java/util/List/get(int)
org/apache/parquet/SemanticVersion/Prerelease/compareTo(org.apache.parquet.SemanticVersion.Prerelease)#java/lang/Math/min(int,int)
org/apache/parquet/SemanticVersion/Prerelease/compareTo(org.apache.parquet.SemanticVersion.Prerelease)#org/apache/parquet/SemanticVersion/compareIntegers(int,int)
org/apache/parquet/SemanticVersion/Prerelease/compareTo(org.apache.parquet.SemanticVersion.Prerelease)#java/util/List/size()
org/apache/parquet/avro/AvroConverters/FieldDoubleConverter/addInt(int)#org/apache/parquet/avro/ParentValueContainer/addDouble(double)
org/apache/parquet/avro/AvroConverters/FieldDoubleConverter/addFloat(float)#org/apache/parquet/avro/ParentValueContainer/addDouble(double)
org/apache/parquet/avro/AvroConverters/FieldDoubleConverter/addLong(long)#org/apache/parquet/avro/ParentValueContainer/addDouble(double)
org/apache/parquet/avro/AvroConverters/FieldDoubleConverter/addDouble(double)#org/apache/parquet/avro/ParentValueContainer/addDouble(double)
org/apache/parquet/column/page/mem/MemPageReader/readPage()#java/util/Iterator/hasNext()
org/apache/parquet/column/page/mem/MemPageReader/readPage()#java/util/Iterator/next()
org/apache/parquet/column/page/mem/MemPageReader/readPage()#org/apache/parquet/io/ParquetDecodingException/ParquetDecodingException(java.lang.String)
org/apache/parquet/column/values/bitpacking/TestByteBasedBitPackingEncoder/testSlabBoundary()#org/apache/parquet/column/values/bitpacking/ByteBasedBitPackingEncoder/ByteBasedBitPackingEncoder(int,org.apache.parquet.column.values.bitpacking.Packer)
org/apache/parquet/column/values/bitpacking/TestByteBasedBitPackingEncoder/testSlabBoundary()#java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)
org/apache/parquet/column/values/bitpacking/TestByteBasedBitPackingEncoder/testSlabBoundary()#org/apache/parquet/column/values/bitpacking/ByteBasedBitPackingEncoder/writeInt(int)
org/apache/parquet/io/api/Converter/asPrimitiveConverter()#java/lang/Class/getName()
org/apache/parquet/io/api/Converter/asPrimitiveConverter()#java/lang/ClassCastException/ClassCastException(java.lang.String)
org/apache/parquet/io/api/Converter/asPrimitiveConverter()#java/lang/Object/getClass()
org/apache/parquet/io/api/Converter/asGroupConverter()#java/lang/Class/getName()
org/apache/parquet/io/api/Converter/asGroupConverter()#java/lang/ClassCastException/ClassCastException(java.lang.String)
org/apache/parquet/io/api/Converter/asGroupConverter()#java/lang/Object/getClass()
org/apache/parquet/statistics/RandomValues/IntGenerator/nextValue()#org/apache/parquet/statistics/RandomValues/RandomValueGenerator/randomInt(int)
org/apache/parquet/hadoop/metadata/BlockMetaData/getStartingPos()#org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/getStartingPos()
org/apache/parquet/hadoop/metadata/BlockMetaData/getStartingPos()#java/util/List/get(int)
org/apache/parquet/hadoop/metadata/BlockMetaData/getStartingPos()#org/apache/parquet/hadoop/metadata/BlockMetaData/getColumns()
org/apache/parquet/hadoop/metadata/BlockMetaData/addColumn(org.apache.parquet.hadoop.metadata.ColumnChunkMetaData)#java/util/List/add(E)
org/apache/parquet/hadoop/metadata/BlockMetaData/getCompressedSize()#org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/getTotalSize()
org/apache/parquet/hadoop/metadata/BlockMetaData/getCompressedSize()#org/apache/parquet/hadoop/metadata/BlockMetaData/getColumns()
org/apache/parquet/hadoop/metadata/BlockMetaData/getColumns()#java/util/Collections/unmodifiableList(java.util.List)
org/apache/parquet/thrift/ParquetWriteProtocol/FieldBaseWriteProtocol/start()#org/apache/parquet/thrift/ParquetWriteProtocol/Events/start()
org/apache/parquet/thrift/ParquetWriteProtocol/FieldBaseWriteProtocol/end()#org/apache/parquet/thrift/ParquetWriteProtocol/Events/end()
org/apache/parquet/column/values/rle/RunLengthBitPackingHybridValuesWriter/getAllocatedSize()#org/apache/parquet/column/values/rle/RunLengthBitPackingHybridEncoder/getAllocatedSize()
org/apache/parquet/column/values/rle/RunLengthBitPackingHybridValuesWriter/getBytes()#org/apache/parquet/bytes/BytesInput/concat(org.apache.parquet.bytes.BytesInput[])
org/apache/parquet/column/values/rle/RunLengthBitPackingHybridValuesWriter/getBytes()#org/apache/parquet/Ints/checkedCast(long)
org/apache/parquet/column/values/rle/RunLengthBitPackingHybridValuesWriter/getBytes()#org/apache/parquet/io/ParquetEncodingException/ParquetEncodingException(java.lang.Throwable)
org/apache/parquet/column/values/rle/RunLengthBitPackingHybridValuesWriter/getBytes()#org/apache/parquet/bytes/BytesInput/fromInt(int)
org/apache/parquet/column/values/rle/RunLengthBitPackingHybridValuesWriter/getBytes()#org/apache/parquet/bytes/BytesInput/size()
org/apache/parquet/column/values/rle/RunLengthBitPackingHybridValuesWriter/getBytes()#org/apache/parquet/column/values/rle/RunLengthBitPackingHybridEncoder/toBytes()
org/apache/parquet/column/values/rle/RunLengthBitPackingHybridValuesWriter/memUsageString(java.lang.String)#org/apache/parquet/column/values/rle/RunLengthBitPackingHybridValuesWriter/getAllocatedSize()
org/apache/parquet/column/values/rle/RunLengthBitPackingHybridValuesWriter/memUsageString(java.lang.String)#java/lang/String/format(java.lang.String,java.lang.Object[])
org/apache/parquet/column/values/rle/RunLengthBitPackingHybridValuesWriter/reset()#org/apache/parquet/column/values/rle/RunLengthBitPackingHybridEncoder/reset()
org/apache/parquet/column/values/rle/RunLengthBitPackingHybridValuesWriter/getBufferedSize()#org/apache/parquet/column/values/rle/RunLengthBitPackingHybridEncoder/getBufferedSize()
org/apache/parquet/column/values/rle/RunLengthBitPackingHybridValuesWriter/close()#org/apache/parquet/column/values/rle/RunLengthBitPackingHybridEncoder/close()
org/apache/parquet/column/values/rle/RunLengthBitPackingHybridValuesWriter/writeBoolean(boolean)#org/apache/parquet/column/values/rle/RunLengthBitPackingHybridValuesWriter/writeInteger(int)
org/apache/parquet/column/values/rle/RunLengthBitPackingHybridValuesWriter/writeInteger(int)#org/apache/parquet/io/ParquetEncodingException/ParquetEncodingException(java.lang.Throwable)
org/apache/parquet/column/values/rle/RunLengthBitPackingHybridValuesWriter/writeInteger(int)#org/apache/parquet/column/values/rle/RunLengthBitPackingHybridEncoder/writeInt(int)
org/apache/parquet/column/values/bitpacking/SixBitPackingReader/read()#java/io/InputStream/read()
org/apache/parquet/column/values/bitpacking/SixBitPackingReader/read()#org/apache/parquet/column/values/bitpacking/BaseBitPackingReader/alignToBytes(int)
org/apache/parquet/pig/convert/TupleConverter/FieldIntegerConverter/addInt(int)#org/apache/parquet/pig/convert/ParentValueContainer/add(java.lang.Object)
org/apache/parquet/pig/convert/TupleConverter/FieldIntegerConverter/addBinary(org.apache.parquet.io.api.Binary)#org/apache/parquet/io/api/Binary/toStringUsingUTF8()
org/apache/parquet/pig/convert/TupleConverter/FieldIntegerConverter/addBinary(org.apache.parquet.io.api.Binary)#org/apache/parquet/pig/convert/ParentValueContainer/add(java.lang.Object)
org/apache/parquet/pig/convert/TupleConverter/FieldIntegerConverter/addBinary(org.apache.parquet.io.api.Binary)#java/lang/Integer/parseInt(java.lang.String)
org/apache/parquet/pig/convert/TupleConverter/FieldIntegerConverter/addFloat(float)#org/apache/parquet/pig/convert/ParentValueContainer/add(java.lang.Object)
org/apache/parquet/pig/convert/TupleConverter/FieldIntegerConverter/addLong(long)#org/apache/parquet/pig/convert/ParentValueContainer/add(java.lang.Object)
org/apache/parquet/pig/convert/TupleConverter/FieldIntegerConverter/addDouble(double)#org/apache/parquet/pig/convert/ParentValueContainer/add(java.lang.Object)
org/apache/parquet/pig/convert/TupleConverter/FieldIntegerConverter/addBoolean(boolean)#org/apache/parquet/pig/convert/ParentValueContainer/add(java.lang.Object)
org/apache/parquet/hadoop/ParquetOutputFormat/getRecordWriter(org.apache.parquet.hadoop.TaskAttemptContext,org.apache.parquet.hadoop.Path)#org/apache/parquet/hadoop/util/ContextUtil/getConfiguration(org.apache.parquet.hadoop.util.JobContext)
org/apache/parquet/hadoop/ParquetOutputFormat/getRecordWriter(org.apache.parquet.hadoop.TaskAttemptContext,org.apache.parquet.hadoop.Path)#org/apache/parquet/hadoop/ParquetOutputFormat/getCodec(org.apache.parquet.hadoop.TaskAttemptContext)
org/apache/parquet/hadoop/ParquetOutputFormat/getRecordWriter(org.apache.parquet.hadoop.TaskAttemptContext,org.apache.parquet.hadoop.Path)#org/apache/parquet/hadoop/ParquetOutputFormat/getRecordWriter(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path,org.apache.parquet.hadoop.metadata.CompressionCodecName)
org/apache/parquet/hadoop/ParquetOutputFormat/getOutputCommitter(org.apache.parquet.hadoop.TaskAttemptContext)#org/apache/parquet/hadoop/ParquetOutputCommitter/ParquetOutputCommitter(org.apache.parquet.hadoop.Path,org.apache.parquet.hadoop.TaskAttemptContext)
org/apache/parquet/hadoop/ParquetOutputFormat/setEnableDictionary(org.apache.parquet.hadoop.Job,boolean)#org/apache/parquet/hadoop/util/ContextUtil/getConfiguration(org.apache.parquet.hadoop.util.JobContext)
org/apache/parquet/hadoop/ParquetOutputFormat/setBlockSize(org.apache.parquet.hadoop.Job,int)#org/apache/parquet/hadoop/util/ContextUtil/getConfiguration(org.apache.parquet.hadoop.util.JobContext)
org/apache/parquet/hadoop/ParquetOutputFormat/getWriteSupportClass(org.apache.parquet.hadoop.Configuration)#org/apache/parquet/hadoop/util/ConfigurationUtil/getClassFromConfig(org.apache.parquet.hadoop.Configuration,java.lang.String,java.lang.Class)
org/apache/parquet/hadoop/ParquetOutputFormat/getWriteSupport(org.apache.parquet.hadoop.Configuration)#org/apache/parquet/hadoop/ParquetOutputFormat/getWriteSupportClass(org.apache.parquet.hadoop.Configuration)
org/apache/parquet/hadoop/ParquetOutputFormat/getWriteSupport(org.apache.parquet.hadoop.Configuration)#java/lang/Class/newInstance()
org/apache/parquet/hadoop/ParquetOutputFormat/getWriteSupport(org.apache.parquet.hadoop.Configuration)#org/apache/parquet/hadoop/BadConfigurationException/BadConfigurationException(java.lang.String,java.lang.Throwable)
org/apache/parquet/hadoop/ParquetOutputFormat/getWriteSupport(org.apache.parquet.hadoop.Configuration)#org/apache/parquet/Preconditions/checkNotNull(T,java.lang.String)
org/apache/parquet/hadoop/ParquetOutputFormat/getCompression(org.apache.parquet.hadoop.Configuration)#org/apache/parquet/hadoop/codec/CodecConfig/getParquetCompressionCodec(org.apache.parquet.hadoop.Configuration)
org/apache/parquet/hadoop/ParquetOutputFormat/getWriterVersion(org.apache.parquet.hadoop.Configuration)#java/lang/Enum/toString()
org/apache/parquet/hadoop/ParquetOutputFormat/getWriterVersion(org.apache.parquet.hadoop.Configuration)#org/apache/parquet/column/ParquetProperties/WriterVersion/fromString(java.lang.String)
org/apache/parquet/hadoop/ParquetOutputFormat/isCompressionSet(org.apache.parquet.hadoop.util.JobContext)#org/apache/parquet/hadoop/ParquetOutputFormat/isCompressionSet(org.apache.parquet.hadoop.util.JobContext)
org/apache/parquet/hadoop/ParquetOutputFormat/isCompressionSet(org.apache.parquet.hadoop.util.JobContext)#org/apache/parquet/hadoop/util/ContextUtil/getConfiguration(org.apache.parquet.hadoop.util.JobContext)
org/apache/parquet/hadoop/ParquetOutputFormat/getDictionaryPageSize(org.apache.parquet.hadoop.util.JobContext)#org/apache/parquet/hadoop/ParquetOutputFormat/getDictionaryPageSize(org.apache.parquet.hadoop.util.JobContext)
org/apache/parquet/hadoop/ParquetOutputFormat/getDictionaryPageSize(org.apache.parquet.hadoop.util.JobContext)#org/apache/parquet/hadoop/util/ContextUtil/getConfiguration(org.apache.parquet.hadoop.util.JobContext)
org/apache/parquet/hadoop/ParquetOutputFormat/setWriteSupportClass(org.apache.parquet.hadoop.JobConf,java.lang.Class)#java/lang/Class/getName()
org/apache/parquet/hadoop/ParquetOutputFormat/setValidation(org.apache.parquet.hadoop.util.JobContext,boolean)#org/apache/parquet/hadoop/ParquetOutputFormat/setValidation(org.apache.parquet.hadoop.util.JobContext,boolean)
org/apache/parquet/hadoop/ParquetOutputFormat/setValidation(org.apache.parquet.hadoop.util.JobContext,boolean)#org/apache/parquet/hadoop/util/ContextUtil/getConfiguration(org.apache.parquet.hadoop.util.JobContext)
org/apache/parquet/hadoop/ParquetOutputFormat/isCompressionSet(org.apache.parquet.hadoop.Configuration)#org/apache/parquet/hadoop/codec/CodecConfig/isParquetCompressionSet(org.apache.parquet.hadoop.Configuration)
org/apache/parquet/hadoop/ParquetOutputFormat/setPageSize(org.apache.parquet.hadoop.Job,int)#org/apache/parquet/hadoop/util/ContextUtil/getConfiguration(org.apache.parquet.hadoop.util.JobContext)
org/apache/parquet/hadoop/ParquetOutputFormat/setWriteSupportClass(org.apache.parquet.hadoop.Job,java.lang.Class)#java/lang/Class/getName()
org/apache/parquet/hadoop/ParquetOutputFormat/setWriteSupportClass(org.apache.parquet.hadoop.Job,java.lang.Class)#org/apache/parquet/hadoop/util/ContextUtil/getConfiguration(org.apache.parquet.hadoop.util.JobContext)
org/apache/parquet/hadoop/ParquetOutputFormat/setMaxPaddingSize(org.apache.parquet.hadoop.util.JobContext,int)#org/apache/parquet/hadoop/ParquetOutputFormat/setMaxPaddingSize(org.apache.parquet.hadoop.util.JobContext,int)
org/apache/parquet/hadoop/ParquetOutputFormat/setMaxPaddingSize(org.apache.parquet.hadoop.util.JobContext,int)#org/apache/parquet/hadoop/util/ContextUtil/getConfiguration(org.apache.parquet.hadoop.util.JobContext)
org/apache/parquet/hadoop/ParquetOutputFormat/getJobSummaryLevel(org.apache.parquet.hadoop.Configuration)#java/lang/Boolean/valueOf(java.lang.String)
org/apache/parquet/hadoop/ParquetOutputFormat/getJobSummaryLevel(org.apache.parquet.hadoop.Configuration)#java/lang/String/toUpperCase()
org/apache/parquet/hadoop/ParquetOutputFormat/getJobSummaryLevel(org.apache.parquet.hadoop.Configuration)#org/apache/parquet/hadoop/ParquetOutputFormat/JobSummaryLevel/valueOf(java.lang.String)
org/apache/parquet/hadoop/ParquetOutputFormat/getEnableDictionary(org.apache.parquet.hadoop.util.JobContext)#org/apache/parquet/hadoop/ParquetOutputFormat/getEnableDictionary(org.apache.parquet.hadoop.util.JobContext)
org/apache/parquet/hadoop/ParquetOutputFormat/getEnableDictionary(org.apache.parquet.hadoop.util.JobContext)#org/apache/parquet/hadoop/util/ContextUtil/getConfiguration(org.apache.parquet.hadoop.util.JobContext)
org/apache/parquet/hadoop/ParquetOutputFormat/getValidation(org.apache.parquet.hadoop.util.JobContext)#org/apache/parquet/hadoop/ParquetOutputFormat/getValidation(org.apache.parquet.hadoop.util.JobContext)
org/apache/parquet/hadoop/ParquetOutputFormat/getValidation(org.apache.parquet.hadoop.util.JobContext)#org/apache/parquet/hadoop/util/ContextUtil/getConfiguration(org.apache.parquet.hadoop.util.JobContext)
org/apache/parquet/hadoop/ParquetOutputFormat/setCompression(org.apache.parquet.hadoop.Job,org.apache.parquet.hadoop.metadata.CompressionCodecName)#java/lang/Enum/name()
org/apache/parquet/hadoop/ParquetOutputFormat/setCompression(org.apache.parquet.hadoop.Job,org.apache.parquet.hadoop.metadata.CompressionCodecName)#org/apache/parquet/hadoop/util/ContextUtil/getConfiguration(org.apache.parquet.hadoop.util.JobContext)
org/apache/parquet/hadoop/ParquetOutputFormat/getBlockSize(org.apache.parquet.hadoop.util.JobContext)#org/apache/parquet/hadoop/ParquetOutputFormat/getBlockSize(org.apache.parquet.hadoop.util.JobContext)
org/apache/parquet/hadoop/ParquetOutputFormat/getBlockSize(org.apache.parquet.hadoop.util.JobContext)#org/apache/parquet/hadoop/util/ContextUtil/getConfiguration(org.apache.parquet.hadoop.util.JobContext)
org/apache/parquet/hadoop/ParquetOutputFormat/getCodec(org.apache.parquet.hadoop.TaskAttemptContext)#org/apache/parquet/hadoop/codec/CodecConfig/from(org.apache.parquet.hadoop.JobConf)
org/apache/parquet/hadoop/ParquetOutputFormat/setDictionaryPageSize(org.apache.parquet.hadoop.Job,int)#org/apache/parquet/hadoop/util/ContextUtil/getConfiguration(org.apache.parquet.hadoop.util.JobContext)
org/apache/parquet/hadoop/ParquetOutputFormat/getRecordWriter(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path,org.apache.parquet.hadoop.metadata.CompressionCodecName)#org/apache/parquet/hadoop/ParquetOutputFormat/getMaxRowCountForPageSizeCheck(org.apache.parquet.hadoop.Configuration)
org/apache/parquet/hadoop/ParquetOutputFormat/getRecordWriter(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path,org.apache.parquet.hadoop.metadata.CompressionCodecName)#org/apache/parquet/hadoop/ParquetOutputFormat/getWriterVersion(org.apache.parquet.hadoop.Configuration)
org/apache/parquet/hadoop/ParquetOutputFormat/getRecordWriter(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path,org.apache.parquet.hadoop.metadata.CompressionCodecName)#org/apache/parquet/column/ParquetProperties/getMinRowCountForPageSizeCheck()
org/apache/parquet/hadoop/ParquetOutputFormat/getRecordWriter(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path,org.apache.parquet.hadoop.metadata.CompressionCodecName)#org/apache/parquet/column/ParquetProperties/isEnableDictionary()
org/apache/parquet/hadoop/ParquetOutputFormat/getRecordWriter(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path,org.apache.parquet.hadoop.metadata.CompressionCodecName)#org/apache/parquet/hadoop/MemoryManager/getMemoryPoolRatio()
org/apache/parquet/hadoop/ParquetOutputFormat/getRecordWriter(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path,org.apache.parquet.hadoop.metadata.CompressionCodecName)#org/apache/parquet/column/ParquetProperties/getPageSizeThreshold()
org/apache/parquet/hadoop/ParquetOutputFormat/getRecordWriter(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path,org.apache.parquet.hadoop.metadata.CompressionCodecName)#org/apache/parquet/hadoop/api/WriteSupport/WriteContext/getExtraMetaData()
org/apache/parquet/hadoop/ParquetOutputFormat/getRecordWriter(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path,org.apache.parquet.hadoop.metadata.CompressionCodecName)#org/apache/parquet/hadoop/ParquetOutputFormat/getMinRowCountForPageSizeCheck(org.apache.parquet.hadoop.Configuration)
org/apache/parquet/hadoop/ParquetOutputFormat/getRecordWriter(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path,org.apache.parquet.hadoop.metadata.CompressionCodecName)#org/apache/parquet/hadoop/ParquetFileWriter/ParquetFileWriter(org.apache.parquet.hadoop.Configuration,org.apache.parquet.schema.MessageType,org.apache.parquet.hadoop.Path,org.apache.parquet.hadoop.ParquetFileWriter.Mode,long,int)
org/apache/parquet/hadoop/ParquetOutputFormat/getRecordWriter(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path,org.apache.parquet.hadoop.metadata.CompressionCodecName)#org/apache/parquet/hadoop/ParquetOutputFormat/getLongBlockSize(org.apache.parquet.hadoop.Configuration)
org/apache/parquet/hadoop/ParquetOutputFormat/getRecordWriter(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path,org.apache.parquet.hadoop.metadata.CompressionCodecName)#org/apache/parquet/column/ParquetProperties/estimateNextSizeCheck()
org/apache/parquet/hadoop/ParquetOutputFormat/getRecordWriter(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path,org.apache.parquet.hadoop.metadata.CompressionCodecName)#org/apache/parquet/hadoop/ParquetOutputFormat/getPageSize(org.apache.parquet.hadoop.util.JobContext)
org/apache/parquet/hadoop/ParquetOutputFormat/getRecordWriter(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path,org.apache.parquet.hadoop.metadata.CompressionCodecName)#org/apache/parquet/column/ParquetProperties/getMaxRowCountForPageSizeCheck()
org/apache/parquet/hadoop/ParquetOutputFormat/getRecordWriter(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path,org.apache.parquet.hadoop.metadata.CompressionCodecName)#org/apache/parquet/hadoop/ParquetOutputFormat/getWriteSupport(org.apache.parquet.hadoop.Configuration)
org/apache/parquet/hadoop/ParquetOutputFormat/getRecordWriter(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path,org.apache.parquet.hadoop.metadata.CompressionCodecName)#org/apache/parquet/column/ParquetProperties/Builder/withPageSize(int)
org/apache/parquet/hadoop/ParquetOutputFormat/getRecordWriter(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path,org.apache.parquet.hadoop.metadata.CompressionCodecName)#org/apache/parquet/hadoop/ParquetOutputFormat/getMaxPaddingSize(org.apache.parquet.hadoop.Configuration)
org/apache/parquet/hadoop/ParquetOutputFormat/getRecordWriter(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path,org.apache.parquet.hadoop.metadata.CompressionCodecName)#org/apache/parquet/hadoop/api/WriteSupport/WriteContext/getSchema()
org/apache/parquet/hadoop/ParquetOutputFormat/getRecordWriter(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path,org.apache.parquet.hadoop.metadata.CompressionCodecName)#org/apache/parquet/hadoop/ParquetOutputFormat/getDictionaryPageSize(org.apache.parquet.hadoop.util.JobContext)
org/apache/parquet/hadoop/ParquetOutputFormat/getRecordWriter(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path,org.apache.parquet.hadoop.metadata.CompressionCodecName)#org/apache/parquet/hadoop/MemoryManager/MemoryManager(float,long)
org/apache/parquet/hadoop/ParquetOutputFormat/getRecordWriter(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path,org.apache.parquet.hadoop.metadata.CompressionCodecName)#org/apache/parquet/column/ParquetProperties/builder()
org/apache/parquet/hadoop/ParquetOutputFormat/getRecordWriter(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path,org.apache.parquet.hadoop.metadata.CompressionCodecName)#org/apache/parquet/hadoop/ParquetRecordWriter/ParquetRecordWriter(org.apache.parquet.hadoop.ParquetFileWriter,org.apache.parquet.hadoop.api.WriteSupport,org.apache.parquet.schema.MessageType,java.util.Map,long,org.apache.parquet.hadoop.metadata.CompressionCodecName,boolean,org.apache.parquet.column.ParquetProperties,org.apache.parquet.hadoop.MemoryManager,org.apache.parquet.hadoop.Configuration)
org/apache/parquet/hadoop/ParquetOutputFormat/getRecordWriter(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path,org.apache.parquet.hadoop.metadata.CompressionCodecName)#org/apache/parquet/hadoop/api/WriteSupport/init(org.apache.parquet.hadoop.Configuration)
org/apache/parquet/hadoop/ParquetOutputFormat/getRecordWriter(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path,org.apache.parquet.hadoop.metadata.CompressionCodecName)#org/apache/parquet/hadoop/ParquetOutputFormat/getValidation(org.apache.parquet.hadoop.util.JobContext)
org/apache/parquet/hadoop/ParquetOutputFormat/getRecordWriter(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path,org.apache.parquet.hadoop.metadata.CompressionCodecName)#org/apache/parquet/hadoop/ParquetOutputFormat/getEnableDictionary(org.apache.parquet.hadoop.util.JobContext)
org/apache/parquet/hadoop/ParquetOutputFormat/getRecordWriter(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path,org.apache.parquet.hadoop.metadata.CompressionCodecName)#org/apache/parquet/hadoop/ParquetFileWriter/start()
org/apache/parquet/hadoop/ParquetOutputFormat/getRecordWriter(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path,org.apache.parquet.hadoop.metadata.CompressionCodecName)#org/apache/parquet/column/ParquetProperties/getDictionaryPageSizeThreshold()
org/apache/parquet/hadoop/ParquetOutputFormat/getRecordWriter(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path,org.apache.parquet.hadoop.metadata.CompressionCodecName)#org/apache/parquet/hadoop/ParquetOutputFormat/getEstimatePageSizeCheck(org.apache.parquet.hadoop.Configuration)
org/apache/parquet/hadoop/ParquetOutputFormat/getRecordWriter(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path,org.apache.parquet.hadoop.metadata.CompressionCodecName)#org/apache/parquet/column/ParquetProperties/getWriterVersion()
org/apache/parquet/hadoop/ParquetOutputFormat/getRecordWriter(org.apache.parquet.hadoop.TaskAttemptContext)#org/apache/parquet/hadoop/metadata/CompressionCodecName/getExtension()
org/apache/parquet/hadoop/ParquetOutputFormat/getRecordWriter(org.apache.parquet.hadoop.TaskAttemptContext)#org/apache/parquet/hadoop/util/ContextUtil/getConfiguration(org.apache.parquet.hadoop.util.JobContext)
org/apache/parquet/hadoop/ParquetOutputFormat/getRecordWriter(org.apache.parquet.hadoop.TaskAttemptContext)#org/apache/parquet/hadoop/ParquetOutputFormat/getCodec(org.apache.parquet.hadoop.TaskAttemptContext)
org/apache/parquet/hadoop/ParquetOutputFormat/getRecordWriter(org.apache.parquet.hadoop.TaskAttemptContext)#org/apache/parquet/hadoop/ParquetOutputFormat/getRecordWriter(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path,org.apache.parquet.hadoop.metadata.CompressionCodecName)
org/apache/parquet/hadoop/ParquetOutputFormat/getPageSize(org.apache.parquet.hadoop.util.JobContext)#org/apache/parquet/hadoop/util/ContextUtil/getConfiguration(org.apache.parquet.hadoop.util.JobContext)
org/apache/parquet/hadoop/ParquetOutputFormat/getPageSize(org.apache.parquet.hadoop.util.JobContext)#org/apache/parquet/hadoop/ParquetOutputFormat/getPageSize(org.apache.parquet.hadoop.util.JobContext)
org/apache/parquet/hadoop/ParquetOutputFormat/getCompression(org.apache.parquet.hadoop.util.JobContext)#org/apache/parquet/hadoop/util/ContextUtil/getConfiguration(org.apache.parquet.hadoop.util.JobContext)
org/apache/parquet/hadoop/ParquetOutputFormat/getCompression(org.apache.parquet.hadoop.util.JobContext)#org/apache/parquet/hadoop/ParquetOutputFormat/getCompression(org.apache.parquet.hadoop.util.JobContext)
org/apache/parquet/hadoop/thrift/ParquetThriftBytesOutputFormat/getThriftClass(org.apache.parquet.hadoop.Job)#org/apache/parquet/hadoop/thrift/TBaseWriteSupport/getThriftClass(org.apache.parquet.hadoop.Configuration)
org/apache/parquet/hadoop/thrift/ParquetThriftBytesOutputFormat/getThriftClass(org.apache.parquet.hadoop.Job)#org/apache/parquet/hadoop/util/ContextUtil/getConfiguration(org.apache.parquet.hadoop.util.JobContext)
org/apache/parquet/hadoop/thrift/ParquetThriftBytesOutputFormat/setThriftClass(org.apache.parquet.hadoop.Job,java.lang.Class)#org/apache/parquet/hadoop/thrift/TBaseWriteSupport/setThriftClass(org.apache.parquet.hadoop.Configuration,java.lang.Class)
org/apache/parquet/hadoop/thrift/ParquetThriftBytesOutputFormat/setThriftClass(org.apache.parquet.hadoop.Job,java.lang.Class)#org/apache/parquet/hadoop/util/ContextUtil/getConfiguration(org.apache.parquet.hadoop.util.JobContext)
org/apache/parquet/hadoop/thrift/ParquetThriftBytesOutputFormat/setTProtocolClass(org.apache.parquet.hadoop.Job,java.lang.Class)#org/apache/parquet/hadoop/thrift/ThriftBytesWriteSupport/setTProtocolClass(org.apache.parquet.hadoop.Configuration,java.lang.Class)
org/apache/parquet/hadoop/thrift/ParquetThriftBytesOutputFormat/setTProtocolClass(org.apache.parquet.hadoop.Job,java.lang.Class)#org/apache/parquet/hadoop/util/ContextUtil/getConfiguration(org.apache.parquet.hadoop.util.JobContext)
org/apache/parquet/bytes/BytesInput/IntBytesInput/writeAllTo(java.io.OutputStream)#org/apache/parquet/bytes/BytesUtils/writeIntLittleEndian(java.io.OutputStream,int)
org/apache/parquet/bytes/BytesInput/IntBytesInput/toByteBuffer()#java/nio/ByteBuffer/allocate(int)
org/apache/parquet/bytes/BytesInput/IntBytesInput/toByteBuffer()#java/nio/ByteBuffer/putInt(int,int)
org/apache/parquet/io/TestFiltered/StringEndsWithAPredicate/functionToApply(java.lang.String)#java/lang/String/endsWith(java.lang.String)
org/apache/parquet/filter2/predicate/Operators/Not/hashCode()#java/lang/Object/hashCode()
org/apache/parquet/filter2/predicate/Operators/Not/hashCode()#java/lang/Object/getClass()
org/apache/parquet/filter2/predicate/Operators/Not/accept(org.apache.parquet.filter2.predicate.FilterPredicate.Visitor)#org/apache/parquet/filter2/predicate/FilterPredicate/Visitor/visit(org.apache.parquet.filter2.predicate.Operators.Not)
org/apache/parquet/filter2/predicate/Operators/Not/equals(java.lang.Object)#java/lang/Object/equals(java.lang.Object)
org/apache/parquet/filter2/predicate/Operators/Not/equals(java.lang.Object)#java/lang/Object/getClass()
org/apache/parquet/hive/TestHiveBindingFactory/testHive010WithSpaces()#org/apache/parquet/hive/HiveBindingFactory/createInternal(java.lang.Class)
org/apache/parquet/hive/TestHiveBindingFactory/testNoHiveVersion()#org/apache/parquet/hive/HiveBindingFactory/createInternal(java.lang.Class)
org/apache/parquet/hive/TestHiveBindingFactory/testMissingHiveVersionInfoClass()#org/apache/parquet/hive/TestHiveBindingFactory/NoopClassLoader/NoopClassLoader()
org/apache/parquet/hive/TestHiveBindingFactory/testMissingHiveVersionInfoClass()#org/apache/parquet/hive/HiveBindingFactory/create(java.lang.ClassLoader)
org/apache/parquet/hive/TestHiveBindingFactory/testBlankHiveVersion()#org/apache/parquet/hive/HiveBindingFactory/createInternal(java.lang.Class)
org/apache/parquet/hive/TestHiveBindingFactory/setup()#org/apache/parquet/hive/HiveBindingFactory/HiveBindingFactory()
org/apache/parquet/hive/TestHiveBindingFactory/testUnknownHiveVersion()#org/apache/parquet/hive/HiveBindingFactory/createInternal(java.lang.Class)
org/apache/parquet/hive/TestHiveBindingFactory/testHive010()#org/apache/parquet/hive/HiveBindingFactory/createInternal(java.lang.Class)
org/apache/parquet/hive/TestHiveBindingFactory/testHive011()#org/apache/parquet/hive/HiveBindingFactory/createInternal(java.lang.Class)
org/apache/parquet/hive/TestHiveBindingFactory/testNullHiveVersion()#org/apache/parquet/hive/HiveBindingFactory/createInternal(java.lang.Class)
org/apache/parquet/hive/TestHiveBindingFactory/testHive012()#org/apache/parquet/hive/HiveBindingFactory/createInternal(java.lang.Class)
org/apache/parquet/hive/TestHiveBindingFactory/testHive013()#org/apache/parquet/hive/HiveBindingFactory/createInternal(java.lang.Class)
org/apache/parquet/tools/read/SimpleListRecord/toJsonObject()#java/util/List/size()
org/apache/parquet/tools/read/SimpleListRecord/toJsonObject()#org/apache/parquet/tools/read/SimpleRecord/toJsonValue(java.lang.Object)
org/apache/parquet/tools/read/SimpleListRecord/toJsonObject()#org/apache/parquet/tools/read/SimpleRecord/NameValue/getValue()
org/apache/parquet/tools/read/SimpleListRecord/toJsonObject()#java/util/List/get(int)
org/apache/parquet/schema/Types/BaseListBuilder/ElementBuilder/named(java.lang.String)#org/apache/parquet/schema/Types/Builder/named(java.lang.String)
org/apache/parquet/schema/Types/BaseListBuilder/ElementBuilder/named(java.lang.String)#org/apache/parquet/schema/Types/BasePrimitiveBuilder/build(java.lang.String)
org/apache/parquet/schema/Types/BaseListBuilder/ElementBuilder/named(java.lang.String)#org/apache/parquet/schema/Types/BaseListBuilder/setElementType(org.apache.parquet.schema.Type)
org/apache/hadoop/hive/ql/io/parquet/writable/BinaryWritable/equals(java.lang.Object)#org/apache/parquet/io/api/Binary/equals(java.lang.Object)
org/apache/hadoop/hive/ql/io/parquet/writable/BinaryWritable/getString()#org/apache/parquet/io/api/Binary/toStringUsingUTF8()
org/apache/hadoop/hive/ql/io/parquet/writable/BinaryWritable/getBytes()#org/apache/parquet/io/api/Binary/getBytes()
org/apache/hadoop/hive/ql/io/parquet/writable/BinaryWritable/write(java.io.DataOutput)#org/apache/parquet/io/api/Binary/writeTo(java.io.DataOutput)
org/apache/hadoop/hive/ql/io/parquet/writable/BinaryWritable/write(java.io.DataOutput)#org/apache/parquet/io/api/Binary/length()
org/apache/hadoop/hive/ql/io/parquet/writable/BinaryWritable/write(java.io.DataOutput)#java/io/DataOutput/writeInt(int)
org/apache/hadoop/hive/ql/io/parquet/writable/BinaryWritable/hashCode()#java/lang/Object/hashCode()
org/apache/hadoop/hive/ql/io/parquet/writable/BinaryWritable/readFields(java.io.DataInput)#java/io/DataInput/readInt()
org/apache/hadoop/hive/ql/io/parquet/writable/BinaryWritable/readFields(java.io.DataInput)#org/apache/parquet/io/api/Binary/fromConstantByteArray(byte[])
org/apache/hadoop/hive/ql/io/parquet/writable/BinaryWritable/readFields(java.io.DataInput)#java/io/DataInput/readFully(byte[])
org/apache/parquet/example/data/simple/Int96Value/toString()#java/lang/String/valueOf(java.lang.Object)
org/apache/parquet/example/data/simple/Int96Value/writeValue(org.apache.parquet.io.api.RecordConsumer)#org/apache/parquet/io/api/RecordConsumer/addBinary(org.apache.parquet.io.api.Binary)
org/apache/parquet/hadoop/MemoryManager/registerScaleCallBack(java.lang.String,java.lang.Runnable)#java/util/Map/containsKey(java.lang.Object)
org/apache/parquet/hadoop/MemoryManager/registerScaleCallBack(java.lang.String,java.lang.Runnable)#org/apache/parquet/Preconditions/checkNotNull(T,java.lang.String)
org/apache/parquet/hadoop/MemoryManager/registerScaleCallBack(java.lang.String,java.lang.Runnable)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/parquet/hadoop/MemoryManager/registerScaleCallBack(java.lang.String,java.lang.Runnable)#java/util/Map/put(K,V)
org/apache/parquet/hadoop/MemoryManager/checkRatio(float)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/parquet/hadoop/MemoryManager/removeWriter(org.apache.parquet.hadoop.InternalParquetRecordWriter)#java/util/Map/isEmpty()
org/apache/parquet/hadoop/MemoryManager/removeWriter(org.apache.parquet.hadoop.InternalParquetRecordWriter)#java/util/Map/containsKey(java.lang.Object)
org/apache/parquet/hadoop/MemoryManager/removeWriter(org.apache.parquet.hadoop.InternalParquetRecordWriter)#java/util/Map/remove(java.lang.Object)
org/apache/parquet/hadoop/MemoryManager/removeWriter(org.apache.parquet.hadoop.InternalParquetRecordWriter)#org/apache/parquet/hadoop/MemoryManager/updateAllocation()
org/apache/parquet/hadoop/MemoryManager/updateAllocation()#java/lang/Math/floor(double)
org/apache/parquet/hadoop/MemoryManager/updateAllocation()#java/util/Map/Entry/getValue()
org/apache/parquet/hadoop/MemoryManager/updateAllocation()#org/apache/parquet/hadoop/InternalParquetRecordWriter/getSchema()
org/apache/parquet/hadoop/MemoryManager/updateAllocation()#java/lang/Runnable/run()
org/apache/parquet/hadoop/MemoryManager/updateAllocation()#java/lang/Math/max(int,int)
org/apache/parquet/hadoop/MemoryManager/updateAllocation()#org/apache/parquet/schema/MessageType/getColumns()
org/apache/parquet/hadoop/MemoryManager/updateAllocation()#java/lang/String/format(java.lang.String,java.lang.Object[])
org/apache/parquet/hadoop/MemoryManager/updateAllocation()#java/util/Map/values()
org/apache/parquet/hadoop/MemoryManager/updateAllocation()#java/util/Map/keySet()
org/apache/parquet/hadoop/MemoryManager/updateAllocation()#java/util/Map/Entry/getKey()
org/apache/parquet/hadoop/MemoryManager/updateAllocation()#java/util/Map/entrySet()
org/apache/parquet/hadoop/MemoryManager/updateAllocation()#java/util/List/size()
org/apache/parquet/hadoop/MemoryManager/updateAllocation()#org/apache/parquet/hadoop/InternalParquetRecordWriter/setRowGroupSizeThreshold(long)
org/apache/parquet/hadoop/MemoryManager/updateAllocation()#java/util/Map/size()
org/apache/parquet/hadoop/MemoryManager/updateAllocation()#org/apache/parquet/hadoop/MemoryManager/updateAllocation()/$anonymous1/(java.lang.String)
org/apache/parquet/hadoop/MemoryManager/getScaleCallBacks()#java/util/Collections/unmodifiableMap(java.util.Map)
org/apache/parquet/hadoop/MemoryManager/addWriter(org.apache.parquet.hadoop.InternalParquetRecordWriter,java.lang.Long)#java/util/Map/get(java.lang.Object)
org/apache/parquet/hadoop/MemoryManager/addWriter(org.apache.parquet.hadoop.InternalParquetRecordWriter,java.lang.Long)#org/apache/parquet/hadoop/MemoryManager/updateAllocation()
org/apache/parquet/hadoop/MemoryManager/addWriter(org.apache.parquet.hadoop.InternalParquetRecordWriter,java.lang.Long)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/parquet/hadoop/MemoryManager/addWriter(org.apache.parquet.hadoop.InternalParquetRecordWriter,java.lang.Long)#java/util/Map/put(K,V)
org/apache/parquet/pig/summary/SummaryData/toJSON(org.apache.parquet.pig.summary.SummaryData)#org/apache/parquet/pig/summary/SummaryData/toJSON(org.apache.parquet.pig.summary.SummaryData,org.apache.parquet.pig.summary.ObjectMapper)
org/apache/parquet/pig/summary/SummaryData/toString()#org/apache/parquet/pig/summary/SummaryData/toJSON(org.apache.parquet.pig.summary.SummaryData)
org/apache/parquet/pig/summary/SummaryData/fromJSON(java.lang.String,java.lang.Class)#java/lang/RuntimeException/RuntimeException(java.lang.Throwable)
org/apache/parquet/pig/summary/SummaryData/fromJSON(java.lang.String,java.lang.Class)#java/io/StringReader/StringReader(java.lang.String)
org/apache/parquet/pig/summary/SummaryData/fromJSON(java.lang.String,java.lang.Class)#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/apache/parquet/pig/summary/SummaryData/toPrettyJSON(org.apache.parquet.pig.summary.SummaryData)#org/apache/parquet/pig/summary/SummaryData/toJSON(org.apache.parquet.pig.summary.SummaryData,org.apache.parquet.pig.summary.ObjectMapper)
org/apache/parquet/pig/summary/SummaryData/getField(org.apache.parquet.pig.Schema,int)#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/apache/parquet/pig/summary/SummaryData/merge(T,T)#org/apache/parquet/pig/summary/SummaryData/merge(org.apache.parquet.pig.summary.SummaryData)
org/apache/parquet/pig/summary/SummaryData/toJSON(org.apache.parquet.pig.summary.SummaryData,org.apache.parquet.pig.summary.ObjectMapper)#java/lang/RuntimeException/RuntimeException(java.lang.Throwable)
org/apache/parquet/pig/summary/SummaryData/toJSON(org.apache.parquet.pig.summary.SummaryData,org.apache.parquet.pig.summary.ObjectMapper)#java/io/StringWriter/StringWriter()
org/apache/parquet/pig/summary/SummaryData/toJSON(org.apache.parquet.pig.summary.SummaryData,org.apache.parquet.pig.summary.ObjectMapper)#java/io/StringWriter/toString()
org/apache/parquet/pig/summary/SummaryData/toJSON(org.apache.parquet.pig.summary.SummaryData,org.apache.parquet.pig.summary.ObjectMapper)#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/apache/parquet/column/values/plain/PlainValuesWriter/writeInteger(int)#org/apache/parquet/bytes/LittleEndianDataOutputStream/writeInt(int)
org/apache/parquet/column/values/plain/PlainValuesWriter/writeInteger(int)#org/apache/parquet/io/ParquetEncodingException/ParquetEncodingException(java.lang.String,java.lang.Throwable)
org/apache/parquet/column/values/plain/PlainValuesWriter/getAllocatedSize()#org/apache/parquet/bytes/CapacityByteArrayOutputStream/getCapacity()
org/apache/parquet/column/values/plain/PlainValuesWriter/getBytes()#org/apache/parquet/bytes/LittleEndianDataOutputStream/flush()
org/apache/parquet/column/values/plain/PlainValuesWriter/getBytes()#org/apache/parquet/bytes/CapacityByteArrayOutputStream/size()
org/apache/parquet/column/values/plain/PlainValuesWriter/getBytes()#org/apache/parquet/io/ParquetEncodingException/ParquetEncodingException(java.lang.String,java.lang.Throwable)
org/apache/parquet/column/values/plain/PlainValuesWriter/getBytes()#org/apache/parquet/bytes/BytesInput/from(org.apache.parquet.bytes.CapacityByteArrayOutputStream)
org/apache/parquet/column/values/plain/PlainValuesWriter/memUsageString(java.lang.String)#org/apache/parquet/bytes/CapacityByteArrayOutputStream/memUsageString(java.lang.String)
org/apache/parquet/column/values/plain/PlainValuesWriter/reset()#org/apache/parquet/bytes/CapacityByteArrayOutputStream/reset()
org/apache/parquet/column/values/plain/PlainValuesWriter/writeByte(int)#org/apache/parquet/io/ParquetEncodingException/ParquetEncodingException(java.lang.String,java.lang.Throwable)
org/apache/parquet/column/values/plain/PlainValuesWriter/writeByte(int)#org/apache/parquet/bytes/LittleEndianDataOutputStream/write(int)
org/apache/parquet/column/values/plain/PlainValuesWriter/writeBytes(org.apache.parquet.io.api.Binary)#org/apache/parquet/io/api/Binary/length()
org/apache/parquet/column/values/plain/PlainValuesWriter/writeBytes(org.apache.parquet.io.api.Binary)#org/apache/parquet/bytes/LittleEndianDataOutputStream/writeInt(int)
org/apache/parquet/column/values/plain/PlainValuesWriter/writeBytes(org.apache.parquet.io.api.Binary)#org/apache/parquet/io/ParquetEncodingException/ParquetEncodingException(java.lang.String,java.lang.Throwable)
org/apache/parquet/column/values/plain/PlainValuesWriter/writeBytes(org.apache.parquet.io.api.Binary)#org/apache/parquet/io/api/Binary/writeTo(java.io.OutputStream)
org/apache/parquet/column/values/plain/PlainValuesWriter/getBufferedSize()#org/apache/parquet/bytes/CapacityByteArrayOutputStream/size()
org/apache/parquet/column/values/plain/PlainValuesWriter/writeFloat(float)#org/apache/parquet/bytes/LittleEndianDataOutputStream/writeFloat(float)
org/apache/parquet/column/values/plain/PlainValuesWriter/writeFloat(float)#org/apache/parquet/io/ParquetEncodingException/ParquetEncodingException(java.lang.String,java.lang.Throwable)
org/apache/parquet/column/values/plain/PlainValuesWriter/close()#org/apache/parquet/bytes/CapacityByteArrayOutputStream/close()
org/apache/parquet/column/values/plain/PlainValuesWriter/close()#org/apache/parquet/bytes/LittleEndianDataOutputStream/close()
org/apache/parquet/column/values/plain/PlainValuesWriter/writeDouble(double)#org/apache/parquet/io/ParquetEncodingException/ParquetEncodingException(java.lang.String,java.lang.Throwable)
org/apache/parquet/column/values/plain/PlainValuesWriter/writeDouble(double)#org/apache/parquet/bytes/LittleEndianDataOutputStream/writeDouble(double)
org/apache/parquet/column/values/plain/PlainValuesWriter/writeLong(long)#org/apache/parquet/io/ParquetEncodingException/ParquetEncodingException(java.lang.String,java.lang.Throwable)
org/apache/parquet/column/values/plain/PlainValuesWriter/writeLong(long)#org/apache/parquet/bytes/LittleEndianDataOutputStream/writeLong(long)
org/apache/parquet/avro/AvroConverters/FieldStringConverter/convert(org.apache.parquet.io.api.Binary)#org/apache/parquet/io/api/Binary/toStringUsingUTF8()
org/apache/parquet/schema/Type/ID/toString()#java/lang/String/valueOf(int)
org/apache/parquet/avro/TestArrayCompatibility/assertReaderContains(org.apache.parquet.avro.AvroParquetReader,org.apache.parquet.pig.Schema,T[])#org/apache/parquet/hadoop/ParquetReader/read()
org/apache/parquet/avro/TestArrayCompatibility/testAvroCompatOptionalGroupInListWithSchema()#org/apache/parquet/avro/TestArrayCompatibility/assertReaderContains(org.apache.parquet.avro.AvroParquetReader,org.apache.parquet.pig.Schema,T[])
org/apache/parquet/avro/TestArrayCompatibility/testAvroCompatOptionalGroupInListWithSchema()#org/apache/parquet/avro/AvroTestUtil/record(java.lang.String,Schema.Field[])
org/apache/parquet/avro/TestArrayCompatibility/testAvroCompatOptionalGroupInListWithSchema()#org/apache/parquet/avro/AvroReadSupport/setAvroReadSchema(org.apache.parquet.hadoop.Configuration,org.apache.parquet.pig.Schema)
org/apache/parquet/avro/TestArrayCompatibility/testAvroCompatOptionalGroupInListWithSchema()#org/apache/parquet/avro/AvroParquetReader/AvroParquetReader(org.apache.parquet.hadoop.Path,org.apache.parquet.filter.UnboundRecordFilter)
org/apache/parquet/avro/TestArrayCompatibility/testAvroCompatOptionalGroupInListWithSchema()#org/apache/parquet/avro/AvroTestUtil/primitive(Schema.Type)
org/apache/parquet/avro/TestArrayCompatibility/testAvroCompatOptionalGroupInListWithSchema()#org/apache/parquet/avro/AvroTestUtil/optional(org.apache.parquet.pig.Schema)
org/apache/parquet/avro/TestArrayCompatibility/testAvroCompatOptionalGroupInListWithSchema()#org/apache/parquet/avro/AvroTestUtil/field(java.lang.String,org.apache.parquet.pig.Schema)
org/apache/parquet/avro/TestArrayCompatibility/testAvroCompatOptionalGroupInListWithSchema()#org/apache/parquet/avro/AvroTestUtil/optionalField(java.lang.String,org.apache.parquet.pig.Schema)
org/apache/parquet/avro/TestArrayCompatibility/testAvroCompatOptionalGroupInListWithSchema()#org/apache/parquet/avro/TestArrayCompatibility/testAvroCompatOptionalGroupInListWithSchema()/$anonymous1/()
org/apache/parquet/avro/TestArrayCompatibility/testAvroCompatOptionalGroupInListWithSchema()#java/util/Arrays/asList(T[])
org/apache/parquet/avro/TestArrayCompatibility/testAvroCompatOptionalGroupInListWithSchema()#java/lang/Object/Object()
org/apache/parquet/avro/TestArrayCompatibility/testAvroCompatOptionalGroupInListWithSchema()#org/apache/parquet/avro/AvroTestUtil/instance(org.apache.parquet.pig.Schema,java.lang.Object[])
org/apache/parquet/avro/TestArrayCompatibility/testAvroCompatOptionalGroupInListWithSchema()#org/apache/parquet/DirectWriterTest/writeDirect(java.lang.String,org.apache.parquet.DirectWriterTest.DirectWriter)
org/apache/parquet/avro/TestArrayCompatibility/testAvroCompatOptionalGroupInListWithSchema()#org/apache/parquet/avro/AvroTestUtil/array(org.apache.parquet.pig.Schema)
org/apache/parquet/avro/TestArrayCompatibility/testThriftCompatListInList()#org/apache/parquet/avro/TestArrayCompatibility/assertReaderContains(org.apache.parquet.avro.AvroParquetReader,org.apache.parquet.pig.Schema,T[])
org/apache/parquet/avro/TestArrayCompatibility/testThriftCompatListInList()#org/apache/parquet/avro/AvroTestUtil/record(java.lang.String,Schema.Field[])
org/apache/parquet/avro/TestArrayCompatibility/testThriftCompatListInList()#org/apache/parquet/avro/AvroTestUtil/optionalField(java.lang.String,org.apache.parquet.pig.Schema)
org/apache/parquet/avro/TestArrayCompatibility/testThriftCompatListInList()#org/apache/parquet/avro/TestArrayCompatibility/testThriftCompatListInList()/$anonymous1/()
org/apache/parquet/avro/TestArrayCompatibility/testThriftCompatListInList()#java/util/Arrays/asList(T[])
org/apache/parquet/avro/TestArrayCompatibility/testThriftCompatListInList()#org/apache/parquet/avro/TestArrayCompatibility/newBehaviorReader(org.apache.parquet.hadoop.Path)
org/apache/parquet/avro/TestArrayCompatibility/testThriftCompatListInList()#org/apache/parquet/avro/AvroTestUtil/primitive(Schema.Type)
org/apache/parquet/avro/TestArrayCompatibility/testThriftCompatListInList()#org/apache/parquet/avro/TestArrayCompatibility/oldBehaviorReader(org.apache.parquet.hadoop.Path)
org/apache/parquet/avro/TestArrayCompatibility/testThriftCompatListInList()#org/apache/parquet/avro/AvroTestUtil/instance(org.apache.parquet.pig.Schema,java.lang.Object[])
org/apache/parquet/avro/TestArrayCompatibility/testThriftCompatListInList()#org/apache/parquet/DirectWriterTest/writeDirect(java.lang.String,org.apache.parquet.DirectWriterTest.DirectWriter)
org/apache/parquet/avro/TestArrayCompatibility/testThriftCompatListInList()#org/apache/parquet/avro/AvroTestUtil/array(org.apache.parquet.pig.Schema)
org/apache/parquet/avro/TestArrayCompatibility/testNewOptionalGroupInList()#org/apache/parquet/avro/TestArrayCompatibility/assertReaderContains(org.apache.parquet.avro.AvroParquetReader,org.apache.parquet.pig.Schema,T[])
org/apache/parquet/avro/TestArrayCompatibility/testNewOptionalGroupInList()#org/apache/parquet/avro/AvroTestUtil/record(java.lang.String,Schema.Field[])
org/apache/parquet/avro/TestArrayCompatibility/testNewOptionalGroupInList()#org/apache/parquet/avro/TestArrayCompatibility/testNewOptionalGroupInList()/$anonymous1/()
org/apache/parquet/avro/TestArrayCompatibility/testNewOptionalGroupInList()#java/util/Arrays/asList(T[])
org/apache/parquet/avro/TestArrayCompatibility/testNewOptionalGroupInList()#org/apache/parquet/avro/TestArrayCompatibility/newBehaviorReader(org.apache.parquet.hadoop.Path)
org/apache/parquet/avro/TestArrayCompatibility/testNewOptionalGroupInList()#org/apache/parquet/avro/AvroTestUtil/primitive(Schema.Type)
org/apache/parquet/avro/TestArrayCompatibility/testNewOptionalGroupInList()#org/apache/parquet/avro/AvroTestUtil/optional(org.apache.parquet.pig.Schema)
org/apache/parquet/avro/TestArrayCompatibility/testNewOptionalGroupInList()#org/apache/parquet/avro/AvroTestUtil/field(java.lang.String,org.apache.parquet.pig.Schema)
org/apache/parquet/avro/TestArrayCompatibility/testNewOptionalGroupInList()#org/apache/parquet/avro/AvroTestUtil/optionalField(java.lang.String,org.apache.parquet.pig.Schema)
org/apache/parquet/avro/TestArrayCompatibility/testNewOptionalGroupInList()#org/apache/parquet/avro/TestArrayCompatibility/oldBehaviorReader(org.apache.parquet.hadoop.Path)
org/apache/parquet/avro/TestArrayCompatibility/testNewOptionalGroupInList()#org/apache/parquet/avro/AvroTestUtil/instance(org.apache.parquet.pig.Schema,java.lang.Object[])
org/apache/parquet/avro/TestArrayCompatibility/testNewOptionalGroupInList()#org/apache/parquet/DirectWriterTest/writeDirect(java.lang.String,org.apache.parquet.DirectWriterTest.DirectWriter)
org/apache/parquet/avro/TestArrayCompatibility/testNewOptionalGroupInList()#org/apache/parquet/avro/AvroTestUtil/array(org.apache.parquet.pig.Schema)
org/apache/parquet/avro/TestArrayCompatibility/testUnannotatedListOfPrimitives()#org/apache/parquet/avro/TestArrayCompatibility/assertReaderContains(org.apache.parquet.avro.AvroParquetReader,org.apache.parquet.pig.Schema,T[])
org/apache/parquet/avro/TestArrayCompatibility/testUnannotatedListOfPrimitives()#org/apache/parquet/avro/TestArrayCompatibility/testUnannotatedListOfPrimitives()/$anonymous1/()
org/apache/parquet/avro/TestArrayCompatibility/testUnannotatedListOfPrimitives()#org/apache/parquet/avro/AvroTestUtil/record(java.lang.String,Schema.Field[])
org/apache/parquet/avro/TestArrayCompatibility/testUnannotatedListOfPrimitives()#org/apache/parquet/avro/AvroTestUtil/field(java.lang.String,org.apache.parquet.pig.Schema)
org/apache/parquet/avro/TestArrayCompatibility/testUnannotatedListOfPrimitives()#java/util/Arrays/asList(T[])
org/apache/parquet/avro/TestArrayCompatibility/testUnannotatedListOfPrimitives()#org/apache/parquet/avro/TestArrayCompatibility/newBehaviorReader(org.apache.parquet.hadoop.Path)
org/apache/parquet/avro/TestArrayCompatibility/testUnannotatedListOfPrimitives()#org/apache/parquet/avro/AvroTestUtil/primitive(Schema.Type)
org/apache/parquet/avro/TestArrayCompatibility/testUnannotatedListOfPrimitives()#org/apache/parquet/avro/TestArrayCompatibility/oldBehaviorReader(org.apache.parquet.hadoop.Path)
org/apache/parquet/avro/TestArrayCompatibility/testUnannotatedListOfPrimitives()#org/apache/parquet/avro/AvroTestUtil/instance(org.apache.parquet.pig.Schema,java.lang.Object[])
org/apache/parquet/avro/TestArrayCompatibility/testUnannotatedListOfPrimitives()#org/apache/parquet/DirectWriterTest/writeDirect(java.lang.String,org.apache.parquet.DirectWriterTest.DirectWriter)
org/apache/parquet/avro/TestArrayCompatibility/testUnannotatedListOfPrimitives()#org/apache/parquet/avro/AvroTestUtil/array(org.apache.parquet.pig.Schema)
org/apache/parquet/avro/TestArrayCompatibility/testMultiFieldGroupInList()#org/apache/parquet/avro/TestArrayCompatibility/assertReaderContains(org.apache.parquet.avro.AvroParquetReader,org.apache.parquet.pig.Schema,T[])
org/apache/parquet/avro/TestArrayCompatibility/testMultiFieldGroupInList()#org/apache/parquet/avro/TestArrayCompatibility/testMultiFieldGroupInList()/$anonymous1/()
org/apache/parquet/avro/TestArrayCompatibility/testMultiFieldGroupInList()#org/apache/parquet/avro/AvroTestUtil/record(java.lang.String,Schema.Field[])
org/apache/parquet/avro/TestArrayCompatibility/testMultiFieldGroupInList()#java/util/Arrays/asList(T[])
org/apache/parquet/avro/TestArrayCompatibility/testMultiFieldGroupInList()#org/apache/parquet/avro/TestArrayCompatibility/newBehaviorReader(org.apache.parquet.hadoop.Path)
org/apache/parquet/avro/TestArrayCompatibility/testMultiFieldGroupInList()#org/apache/parquet/avro/AvroTestUtil/primitive(Schema.Type)
org/apache/parquet/avro/TestArrayCompatibility/testMultiFieldGroupInList()#org/apache/parquet/avro/AvroTestUtil/field(java.lang.String,org.apache.parquet.pig.Schema)
org/apache/parquet/avro/TestArrayCompatibility/testMultiFieldGroupInList()#org/apache/parquet/avro/AvroTestUtil/optionalField(java.lang.String,org.apache.parquet.pig.Schema)
org/apache/parquet/avro/TestArrayCompatibility/testMultiFieldGroupInList()#org/apache/parquet/avro/TestArrayCompatibility/oldBehaviorReader(org.apache.parquet.hadoop.Path)
org/apache/parquet/avro/TestArrayCompatibility/testMultiFieldGroupInList()#org/apache/parquet/avro/AvroTestUtil/instance(org.apache.parquet.pig.Schema,java.lang.Object[])
org/apache/parquet/avro/TestArrayCompatibility/testMultiFieldGroupInList()#org/apache/parquet/DirectWriterTest/writeDirect(java.lang.String,org.apache.parquet.DirectWriterTest.DirectWriter)
org/apache/parquet/avro/TestArrayCompatibility/testMultiFieldGroupInList()#org/apache/parquet/avro/AvroTestUtil/array(org.apache.parquet.pig.Schema)
org/apache/parquet/avro/TestArrayCompatibility/newBehaviorReader(org.apache.parquet.hadoop.Path,org.apache.parquet.pig.Schema)#org/apache/parquet/avro/AvroReadSupport/setAvroReadSchema(org.apache.parquet.hadoop.Configuration,org.apache.parquet.pig.Schema)
org/apache/parquet/avro/TestArrayCompatibility/newBehaviorReader(org.apache.parquet.hadoop.Path,org.apache.parquet.pig.Schema)#org/apache/parquet/avro/AvroParquetReader/AvroParquetReader(org.apache.parquet.hadoop.Path,org.apache.parquet.filter.UnboundRecordFilter)
org/apache/parquet/avro/TestArrayCompatibility/newBehaviorReader(org.apache.parquet.hadoop.Path,org.apache.parquet.pig.Schema)#java/lang/Object/Object()
org/apache/parquet/avro/TestArrayCompatibility/newBehaviorReader(org.apache.parquet.hadoop.Path)#org/apache/parquet/avro/AvroParquetReader/AvroParquetReader(org.apache.parquet.hadoop.Path,org.apache.parquet.filter.UnboundRecordFilter)
org/apache/parquet/avro/TestArrayCompatibility/oldBehaviorReader(org.apache.parquet.hadoop.Path,org.apache.parquet.pig.Schema)#org/apache/parquet/avro/AvroReadSupport/setAvroReadSchema(org.apache.parquet.hadoop.Configuration,org.apache.parquet.pig.Schema)
org/apache/parquet/avro/TestArrayCompatibility/oldBehaviorReader(org.apache.parquet.hadoop.Path,org.apache.parquet.pig.Schema)#org/apache/parquet/avro/AvroParquetReader/AvroParquetReader(org.apache.parquet.hadoop.Path,org.apache.parquet.filter.UnboundRecordFilter)
org/apache/parquet/avro/TestArrayCompatibility/oldBehaviorReader(org.apache.parquet.hadoop.Path,org.apache.parquet.pig.Schema)#java/lang/Object/Object()
org/apache/parquet/avro/TestArrayCompatibility/testAvroCompatOptionalGroupInList()#org/apache/parquet/avro/TestArrayCompatibility/assertReaderContains(org.apache.parquet.avro.AvroParquetReader,org.apache.parquet.pig.Schema,T[])
org/apache/parquet/avro/TestArrayCompatibility/testAvroCompatOptionalGroupInList()#org/apache/parquet/avro/AvroTestUtil/record(java.lang.String,Schema.Field[])
org/apache/parquet/avro/TestArrayCompatibility/testAvroCompatOptionalGroupInList()#java/util/Arrays/asList(T[])
org/apache/parquet/avro/TestArrayCompatibility/testAvroCompatOptionalGroupInList()#org/apache/parquet/avro/TestArrayCompatibility/testAvroCompatOptionalGroupInList()/$anonymous1/()
org/apache/parquet/avro/TestArrayCompatibility/testAvroCompatOptionalGroupInList()#org/apache/parquet/avro/TestArrayCompatibility/newBehaviorReader(org.apache.parquet.hadoop.Path)
org/apache/parquet/avro/TestArrayCompatibility/testAvroCompatOptionalGroupInList()#org/apache/parquet/avro/AvroTestUtil/primitive(Schema.Type)
org/apache/parquet/avro/TestArrayCompatibility/testAvroCompatOptionalGroupInList()#org/apache/parquet/avro/AvroTestUtil/field(java.lang.String,org.apache.parquet.pig.Schema)
org/apache/parquet/avro/TestArrayCompatibility/testAvroCompatOptionalGroupInList()#org/apache/parquet/avro/AvroTestUtil/optionalField(java.lang.String,org.apache.parquet.pig.Schema)
org/apache/parquet/avro/TestArrayCompatibility/testAvroCompatOptionalGroupInList()#org/apache/parquet/avro/TestArrayCompatibility/oldBehaviorReader(org.apache.parquet.hadoop.Path)
org/apache/parquet/avro/TestArrayCompatibility/testAvroCompatOptionalGroupInList()#org/apache/parquet/avro/AvroTestUtil/instance(org.apache.parquet.pig.Schema,java.lang.Object[])
org/apache/parquet/avro/TestArrayCompatibility/testAvroCompatOptionalGroupInList()#org/apache/parquet/DirectWriterTest/writeDirect(java.lang.String,org.apache.parquet.DirectWriterTest.DirectWriter)
org/apache/parquet/avro/TestArrayCompatibility/testAvroCompatOptionalGroupInList()#org/apache/parquet/avro/AvroTestUtil/array(org.apache.parquet.pig.Schema)
org/apache/parquet/avro/TestArrayCompatibility/testAvroCompatListInList()#org/apache/parquet/avro/TestArrayCompatibility/assertReaderContains(org.apache.parquet.avro.AvroParquetReader,org.apache.parquet.pig.Schema,T[])
org/apache/parquet/avro/TestArrayCompatibility/testAvroCompatListInList()#org/apache/parquet/avro/AvroTestUtil/record(java.lang.String,Schema.Field[])
org/apache/parquet/avro/TestArrayCompatibility/testAvroCompatListInList()#org/apache/parquet/avro/AvroTestUtil/optionalField(java.lang.String,org.apache.parquet.pig.Schema)
org/apache/parquet/avro/TestArrayCompatibility/testAvroCompatListInList()#java/util/Arrays/asList(T[])
org/apache/parquet/avro/TestArrayCompatibility/testAvroCompatListInList()#org/apache/parquet/avro/TestArrayCompatibility/testAvroCompatListInList()/$anonymous1/()
org/apache/parquet/avro/TestArrayCompatibility/testAvroCompatListInList()#org/apache/parquet/avro/TestArrayCompatibility/newBehaviorReader(org.apache.parquet.hadoop.Path)
org/apache/parquet/avro/TestArrayCompatibility/testAvroCompatListInList()#org/apache/parquet/avro/AvroTestUtil/primitive(Schema.Type)
org/apache/parquet/avro/TestArrayCompatibility/testAvroCompatListInList()#org/apache/parquet/avro/TestArrayCompatibility/oldBehaviorReader(org.apache.parquet.hadoop.Path)
org/apache/parquet/avro/TestArrayCompatibility/testAvroCompatListInList()#org/apache/parquet/avro/AvroTestUtil/instance(org.apache.parquet.pig.Schema,java.lang.Object[])
org/apache/parquet/avro/TestArrayCompatibility/testAvroCompatListInList()#org/apache/parquet/DirectWriterTest/writeDirect(java.lang.String,org.apache.parquet.DirectWriterTest.DirectWriter)
org/apache/parquet/avro/TestArrayCompatibility/testAvroCompatListInList()#org/apache/parquet/avro/AvroTestUtil/array(org.apache.parquet.pig.Schema)
org/apache/parquet/avro/TestArrayCompatibility/testListOfSingleElementStructsWithElementField()#org/apache/parquet/avro/TestArrayCompatibility/assertReaderContains(org.apache.parquet.avro.AvroParquetReader,org.apache.parquet.pig.Schema,T[])
org/apache/parquet/avro/TestArrayCompatibility/testListOfSingleElementStructsWithElementField()#org/apache/parquet/avro/AvroSchemaConverter/convert(org.apache.parquet.schema.MessageType)
org/apache/parquet/avro/TestArrayCompatibility/testListOfSingleElementStructsWithElementField()#org/apache/parquet/avro/AvroTestUtil/record(java.lang.String,Schema.Field[])
org/apache/parquet/avro/TestArrayCompatibility/testListOfSingleElementStructsWithElementField()#org/apache/parquet/avro/TestArrayCompatibility/testListOfSingleElementStructsWithElementField()/$anonymous1/()
org/apache/parquet/avro/TestArrayCompatibility/testListOfSingleElementStructsWithElementField()#org/apache/parquet/hadoop/ParquetFileReader/getFileMetaData()
org/apache/parquet/avro/TestArrayCompatibility/testListOfSingleElementStructsWithElementField()#org/apache/parquet/hadoop/ParquetFileReader/open(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path)
org/apache/parquet/avro/TestArrayCompatibility/testListOfSingleElementStructsWithElementField()#java/util/Arrays/asList(T[])
org/apache/parquet/avro/TestArrayCompatibility/testListOfSingleElementStructsWithElementField()#org/apache/parquet/avro/TestArrayCompatibility/newBehaviorReader(org.apache.parquet.hadoop.Path,org.apache.parquet.pig.Schema)
org/apache/parquet/avro/TestArrayCompatibility/testListOfSingleElementStructsWithElementField()#org/apache/parquet/avro/AvroSchemaConverter/AvroSchemaConverter(org.apache.parquet.hadoop.Configuration)
org/apache/parquet/avro/TestArrayCompatibility/testListOfSingleElementStructsWithElementField()#org/apache/parquet/hadoop/metadata/FileMetaData/getSchema()
org/apache/parquet/avro/TestArrayCompatibility/testListOfSingleElementStructsWithElementField()#org/apache/parquet/avro/TestArrayCompatibility/newBehaviorReader(org.apache.parquet.hadoop.Path)
org/apache/parquet/avro/TestArrayCompatibility/testListOfSingleElementStructsWithElementField()#org/apache/parquet/avro/TestArrayCompatibility/oldBehaviorReader(org.apache.parquet.hadoop.Path,org.apache.parquet.pig.Schema)
org/apache/parquet/avro/TestArrayCompatibility/testListOfSingleElementStructsWithElementField()#org/apache/parquet/avro/AvroTestUtil/primitive(Schema.Type)
org/apache/parquet/avro/TestArrayCompatibility/testListOfSingleElementStructsWithElementField()#org/apache/parquet/avro/AvroTestUtil/field(java.lang.String,org.apache.parquet.pig.Schema)
org/apache/parquet/avro/TestArrayCompatibility/testListOfSingleElementStructsWithElementField()#org/apache/parquet/avro/AvroTestUtil/optionalField(java.lang.String,org.apache.parquet.pig.Schema)
org/apache/parquet/avro/TestArrayCompatibility/testListOfSingleElementStructsWithElementField()#org/apache/parquet/avro/TestArrayCompatibility/oldBehaviorReader(org.apache.parquet.hadoop.Path)
org/apache/parquet/avro/TestArrayCompatibility/testListOfSingleElementStructsWithElementField()#org/apache/parquet/avro/AvroTestUtil/instance(org.apache.parquet.pig.Schema,java.lang.Object[])
org/apache/parquet/avro/TestArrayCompatibility/testListOfSingleElementStructsWithElementField()#org/apache/parquet/DirectWriterTest/writeDirect(java.lang.String,org.apache.parquet.DirectWriterTest.DirectWriter)
org/apache/parquet/avro/TestArrayCompatibility/testListOfSingleElementStructsWithElementField()#org/apache/parquet/avro/AvroTestUtil/array(org.apache.parquet.pig.Schema)
org/apache/parquet/avro/TestArrayCompatibility/testNewRequiredGroupInList()#org/apache/parquet/avro/TestArrayCompatibility/assertReaderContains(org.apache.parquet.avro.AvroParquetReader,org.apache.parquet.pig.Schema,T[])
org/apache/parquet/avro/TestArrayCompatibility/testNewRequiredGroupInList()#org/apache/parquet/avro/AvroTestUtil/record(java.lang.String,Schema.Field[])
org/apache/parquet/avro/TestArrayCompatibility/testNewRequiredGroupInList()#org/apache/parquet/avro/TestArrayCompatibility/testNewRequiredGroupInList()/$anonymous1/()
org/apache/parquet/avro/TestArrayCompatibility/testNewRequiredGroupInList()#java/util/Arrays/asList(T[])
org/apache/parquet/avro/TestArrayCompatibility/testNewRequiredGroupInList()#org/apache/parquet/avro/TestArrayCompatibility/newBehaviorReader(org.apache.parquet.hadoop.Path)
org/apache/parquet/avro/TestArrayCompatibility/testNewRequiredGroupInList()#org/apache/parquet/avro/AvroTestUtil/primitive(Schema.Type)
org/apache/parquet/avro/TestArrayCompatibility/testNewRequiredGroupInList()#org/apache/parquet/avro/AvroTestUtil/field(java.lang.String,org.apache.parquet.pig.Schema)
org/apache/parquet/avro/TestArrayCompatibility/testNewRequiredGroupInList()#org/apache/parquet/avro/AvroTestUtil/optionalField(java.lang.String,org.apache.parquet.pig.Schema)
org/apache/parquet/avro/TestArrayCompatibility/testNewRequiredGroupInList()#org/apache/parquet/avro/TestArrayCompatibility/oldBehaviorReader(org.apache.parquet.hadoop.Path)
org/apache/parquet/avro/TestArrayCompatibility/testNewRequiredGroupInList()#org/apache/parquet/avro/AvroTestUtil/instance(org.apache.parquet.pig.Schema,java.lang.Object[])
org/apache/parquet/avro/TestArrayCompatibility/testNewRequiredGroupInList()#org/apache/parquet/DirectWriterTest/writeDirect(java.lang.String,org.apache.parquet.DirectWriterTest.DirectWriter)
org/apache/parquet/avro/TestArrayCompatibility/testNewRequiredGroupInList()#org/apache/parquet/avro/AvroTestUtil/array(org.apache.parquet.pig.Schema)
org/apache/parquet/avro/TestArrayCompatibility/testUnannotatedListOfGroups()#org/apache/parquet/avro/TestArrayCompatibility/assertReaderContains(org.apache.parquet.avro.AvroParquetReader,org.apache.parquet.pig.Schema,T[])
org/apache/parquet/avro/TestArrayCompatibility/testUnannotatedListOfGroups()#org/apache/parquet/avro/AvroTestUtil/record(java.lang.String,Schema.Field[])
org/apache/parquet/avro/TestArrayCompatibility/testUnannotatedListOfGroups()#org/apache/parquet/avro/AvroTestUtil/field(java.lang.String,org.apache.parquet.pig.Schema)
org/apache/parquet/avro/TestArrayCompatibility/testUnannotatedListOfGroups()#java/util/Arrays/asList(T[])
org/apache/parquet/avro/TestArrayCompatibility/testUnannotatedListOfGroups()#org/apache/parquet/avro/TestArrayCompatibility/newBehaviorReader(org.apache.parquet.hadoop.Path)
org/apache/parquet/avro/TestArrayCompatibility/testUnannotatedListOfGroups()#org/apache/parquet/avro/AvroTestUtil/primitive(Schema.Type)
org/apache/parquet/avro/TestArrayCompatibility/testUnannotatedListOfGroups()#org/apache/parquet/avro/TestArrayCompatibility/testUnannotatedListOfGroups()/$anonymous1/()
org/apache/parquet/avro/TestArrayCompatibility/testUnannotatedListOfGroups()#org/apache/parquet/avro/TestArrayCompatibility/oldBehaviorReader(org.apache.parquet.hadoop.Path)
org/apache/parquet/avro/TestArrayCompatibility/testUnannotatedListOfGroups()#org/apache/parquet/avro/AvroTestUtil/instance(org.apache.parquet.pig.Schema,java.lang.Object[])
org/apache/parquet/avro/TestArrayCompatibility/testUnannotatedListOfGroups()#org/apache/parquet/DirectWriterTest/writeDirect(java.lang.String,org.apache.parquet.DirectWriterTest.DirectWriter)
org/apache/parquet/avro/TestArrayCompatibility/testUnannotatedListOfGroups()#org/apache/parquet/avro/AvroTestUtil/array(org.apache.parquet.pig.Schema)
org/apache/parquet/avro/TestArrayCompatibility/testThriftCompatRequiredGroupInList()#org/apache/parquet/avro/TestArrayCompatibility/assertReaderContains(org.apache.parquet.avro.AvroParquetReader,org.apache.parquet.pig.Schema,T[])
org/apache/parquet/avro/TestArrayCompatibility/testThriftCompatRequiredGroupInList()#org/apache/parquet/avro/AvroTestUtil/record(java.lang.String,Schema.Field[])
org/apache/parquet/avro/TestArrayCompatibility/testThriftCompatRequiredGroupInList()#java/util/Arrays/asList(T[])
org/apache/parquet/avro/TestArrayCompatibility/testThriftCompatRequiredGroupInList()#org/apache/parquet/avro/TestArrayCompatibility/newBehaviorReader(org.apache.parquet.hadoop.Path)
org/apache/parquet/avro/TestArrayCompatibility/testThriftCompatRequiredGroupInList()#org/apache/parquet/avro/AvroTestUtil/primitive(Schema.Type)
org/apache/parquet/avro/TestArrayCompatibility/testThriftCompatRequiredGroupInList()#org/apache/parquet/avro/TestArrayCompatibility/testThriftCompatRequiredGroupInList()/$anonymous1/()
org/apache/parquet/avro/TestArrayCompatibility/testThriftCompatRequiredGroupInList()#org/apache/parquet/avro/AvroTestUtil/field(java.lang.String,org.apache.parquet.pig.Schema)
org/apache/parquet/avro/TestArrayCompatibility/testThriftCompatRequiredGroupInList()#org/apache/parquet/avro/AvroTestUtil/optionalField(java.lang.String,org.apache.parquet.pig.Schema)
org/apache/parquet/avro/TestArrayCompatibility/testThriftCompatRequiredGroupInList()#org/apache/parquet/avro/TestArrayCompatibility/oldBehaviorReader(org.apache.parquet.hadoop.Path)
org/apache/parquet/avro/TestArrayCompatibility/testThriftCompatRequiredGroupInList()#org/apache/parquet/avro/AvroTestUtil/instance(org.apache.parquet.pig.Schema,java.lang.Object[])
org/apache/parquet/avro/TestArrayCompatibility/testThriftCompatRequiredGroupInList()#org/apache/parquet/DirectWriterTest/writeDirect(java.lang.String,org.apache.parquet.DirectWriterTest.DirectWriter)
org/apache/parquet/avro/TestArrayCompatibility/testThriftCompatRequiredGroupInList()#org/apache/parquet/avro/AvroTestUtil/array(org.apache.parquet.pig.Schema)
org/apache/parquet/avro/TestArrayCompatibility/testSingleFieldGroupInList()#org/apache/parquet/avro/TestArrayCompatibility/assertReaderContains(org.apache.parquet.avro.AvroParquetReader,org.apache.parquet.pig.Schema,T[])
org/apache/parquet/avro/TestArrayCompatibility/testSingleFieldGroupInList()#org/apache/parquet/avro/AvroTestUtil/record(java.lang.String,Schema.Field[])
org/apache/parquet/avro/TestArrayCompatibility/testSingleFieldGroupInList()#java/util/Arrays/asList(T[])
org/apache/parquet/avro/TestArrayCompatibility/testSingleFieldGroupInList()#org/apache/parquet/avro/TestArrayCompatibility/newBehaviorReader(org.apache.parquet.hadoop.Path)
org/apache/parquet/avro/TestArrayCompatibility/testSingleFieldGroupInList()#org/apache/parquet/avro/TestArrayCompatibility/testSingleFieldGroupInList()/$anonymous1/()
org/apache/parquet/avro/TestArrayCompatibility/testSingleFieldGroupInList()#org/apache/parquet/avro/AvroTestUtil/primitive(Schema.Type)
org/apache/parquet/avro/TestArrayCompatibility/testSingleFieldGroupInList()#org/apache/parquet/avro/AvroTestUtil/field(java.lang.String,org.apache.parquet.pig.Schema)
org/apache/parquet/avro/TestArrayCompatibility/testSingleFieldGroupInList()#org/apache/parquet/avro/AvroTestUtil/optionalField(java.lang.String,org.apache.parquet.pig.Schema)
org/apache/parquet/avro/TestArrayCompatibility/testSingleFieldGroupInList()#org/apache/parquet/avro/TestArrayCompatibility/oldBehaviorReader(org.apache.parquet.hadoop.Path)
org/apache/parquet/avro/TestArrayCompatibility/testSingleFieldGroupInList()#org/apache/parquet/avro/AvroTestUtil/instance(org.apache.parquet.pig.Schema,java.lang.Object[])
org/apache/parquet/avro/TestArrayCompatibility/testSingleFieldGroupInList()#org/apache/parquet/DirectWriterTest/writeDirect(java.lang.String,org.apache.parquet.DirectWriterTest.DirectWriter)
org/apache/parquet/avro/TestArrayCompatibility/testSingleFieldGroupInList()#org/apache/parquet/avro/AvroTestUtil/array(org.apache.parquet.pig.Schema)
org/apache/parquet/avro/TestArrayCompatibility/testRepeatedPrimitiveInList()#org/apache/parquet/avro/TestArrayCompatibility/assertReaderContains(org.apache.parquet.avro.AvroParquetReader,org.apache.parquet.pig.Schema,T[])
org/apache/parquet/avro/TestArrayCompatibility/testRepeatedPrimitiveInList()#org/apache/parquet/avro/AvroTestUtil/record(java.lang.String,Schema.Field[])
org/apache/parquet/avro/TestArrayCompatibility/testRepeatedPrimitiveInList()#org/apache/parquet/avro/AvroTestUtil/field(java.lang.String,org.apache.parquet.pig.Schema)
org/apache/parquet/avro/TestArrayCompatibility/testRepeatedPrimitiveInList()#java/util/Arrays/asList(T[])
org/apache/parquet/avro/TestArrayCompatibility/testRepeatedPrimitiveInList()#org/apache/parquet/avro/TestArrayCompatibility/testRepeatedPrimitiveInList()/$anonymous1/()
org/apache/parquet/avro/TestArrayCompatibility/testRepeatedPrimitiveInList()#org/apache/parquet/avro/TestArrayCompatibility/newBehaviorReader(org.apache.parquet.hadoop.Path)
org/apache/parquet/avro/TestArrayCompatibility/testRepeatedPrimitiveInList()#org/apache/parquet/avro/TestArrayCompatibility/oldBehaviorReader(org.apache.parquet.hadoop.Path)
org/apache/parquet/avro/TestArrayCompatibility/testRepeatedPrimitiveInList()#org/apache/parquet/avro/AvroTestUtil/instance(org.apache.parquet.pig.Schema,java.lang.Object[])
org/apache/parquet/avro/TestArrayCompatibility/testRepeatedPrimitiveInList()#org/apache/parquet/DirectWriterTest/writeDirect(java.lang.String,org.apache.parquet.DirectWriterTest.DirectWriter)
org/apache/parquet/avro/TestArrayCompatibility/testRepeatedPrimitiveInList()#org/apache/parquet/avro/AvroTestUtil/array(org.apache.parquet.pig.Schema)
org/apache/parquet/avro/TestArrayCompatibility/testHiveCompatOptionalGroupInList()#org/apache/parquet/avro/TestArrayCompatibility/assertReaderContains(org.apache.parquet.avro.AvroParquetReader,org.apache.parquet.pig.Schema,T[])
org/apache/parquet/avro/TestArrayCompatibility/testHiveCompatOptionalGroupInList()#org/apache/parquet/avro/AvroTestUtil/record(java.lang.String,Schema.Field[])
org/apache/parquet/avro/TestArrayCompatibility/testHiveCompatOptionalGroupInList()#java/util/Arrays/asList(T[])
org/apache/parquet/avro/TestArrayCompatibility/testHiveCompatOptionalGroupInList()#org/apache/parquet/avro/TestArrayCompatibility/testHiveCompatOptionalGroupInList()/$anonymous1/()
org/apache/parquet/avro/TestArrayCompatibility/testHiveCompatOptionalGroupInList()#org/apache/parquet/avro/TestArrayCompatibility/newBehaviorReader(org.apache.parquet.hadoop.Path)
org/apache/parquet/avro/TestArrayCompatibility/testHiveCompatOptionalGroupInList()#org/apache/parquet/avro/AvroTestUtil/primitive(Schema.Type)
org/apache/parquet/avro/TestArrayCompatibility/testHiveCompatOptionalGroupInList()#org/apache/parquet/avro/AvroTestUtil/optional(org.apache.parquet.pig.Schema)
org/apache/parquet/avro/TestArrayCompatibility/testHiveCompatOptionalGroupInList()#org/apache/parquet/avro/AvroTestUtil/field(java.lang.String,org.apache.parquet.pig.Schema)
org/apache/parquet/avro/TestArrayCompatibility/testHiveCompatOptionalGroupInList()#org/apache/parquet/avro/AvroTestUtil/optionalField(java.lang.String,org.apache.parquet.pig.Schema)
org/apache/parquet/avro/TestArrayCompatibility/testHiveCompatOptionalGroupInList()#org/apache/parquet/avro/TestArrayCompatibility/oldBehaviorReader(org.apache.parquet.hadoop.Path)
org/apache/parquet/avro/TestArrayCompatibility/testHiveCompatOptionalGroupInList()#org/apache/parquet/avro/AvroTestUtil/instance(org.apache.parquet.pig.Schema,java.lang.Object[])
org/apache/parquet/avro/TestArrayCompatibility/testHiveCompatOptionalGroupInList()#org/apache/parquet/DirectWriterTest/writeDirect(java.lang.String,org.apache.parquet.DirectWriterTest.DirectWriter)
org/apache/parquet/avro/TestArrayCompatibility/testHiveCompatOptionalGroupInList()#org/apache/parquet/avro/AvroTestUtil/array(org.apache.parquet.pig.Schema)
org/apache/parquet/avro/TestArrayCompatibility/oldBehaviorReader(org.apache.parquet.hadoop.Path)#org/apache/parquet/avro/AvroParquetReader/AvroParquetReader(org.apache.parquet.hadoop.Path,org.apache.parquet.filter.UnboundRecordFilter)
org/apache/parquet/avro/TestArrayCompatibility/testSingleFieldGroupInListWithSchema()#org/apache/parquet/avro/TestArrayCompatibility/assertReaderContains(org.apache.parquet.avro.AvroParquetReader,org.apache.parquet.pig.Schema,T[])
org/apache/parquet/avro/TestArrayCompatibility/testSingleFieldGroupInListWithSchema()#org/apache/parquet/avro/AvroTestUtil/record(java.lang.String,Schema.Field[])
org/apache/parquet/avro/TestArrayCompatibility/testSingleFieldGroupInListWithSchema()#java/util/HashMap/HashMap()
org/apache/parquet/avro/TestArrayCompatibility/testSingleFieldGroupInListWithSchema()#org/apache/parquet/avro/TestArrayCompatibility/testSingleFieldGroupInListWithSchema()/$anonymous1/()
org/apache/parquet/avro/TestArrayCompatibility/testSingleFieldGroupInListWithSchema()#org/apache/parquet/avro/TestArrayCompatibility/newBehaviorReader(org.apache.parquet.hadoop.Path)
org/apache/parquet/avro/TestArrayCompatibility/testSingleFieldGroupInListWithSchema()#java/util/Map/put(K,V)
org/apache/parquet/avro/TestArrayCompatibility/testSingleFieldGroupInListWithSchema()#org/apache/parquet/avro/AvroTestUtil/primitive(Schema.Type)
org/apache/parquet/avro/TestArrayCompatibility/testSingleFieldGroupInListWithSchema()#org/apache/parquet/avro/AvroTestUtil/array(org.apache.parquet.pig.Schema)
org/apache/parquet/avro/TestArrayCompatibility/testSingleFieldGroupInListWithSchema()#org/apache/parquet/avro/AvroTestUtil/field(java.lang.String,org.apache.parquet.pig.Schema)
org/apache/parquet/avro/TestArrayCompatibility/testSingleFieldGroupInListWithSchema()#org/apache/parquet/avro/AvroTestUtil/optionalField(java.lang.String,org.apache.parquet.pig.Schema)
org/apache/parquet/avro/TestArrayCompatibility/testSingleFieldGroupInListWithSchema()#org/apache/parquet/DirectWriterTest/writeDirect(java.lang.String,org.apache.parquet.DirectWriterTest.DirectWriter,java.util.Map)
org/apache/parquet/avro/TestArrayCompatibility/testSingleFieldGroupInListWithSchema()#java/util/Arrays/asList(T[])
org/apache/parquet/avro/TestArrayCompatibility/testSingleFieldGroupInListWithSchema()#org/apache/parquet/avro/TestArrayCompatibility/oldBehaviorReader(org.apache.parquet.hadoop.Path)
org/apache/parquet/avro/TestArrayCompatibility/testSingleFieldGroupInListWithSchema()#org/apache/parquet/avro/AvroTestUtil/instance(org.apache.parquet.pig.Schema,java.lang.Object[])
org/apache/parquet/filter2/predicate/TestSchemaCompatibilityValidator/testTwiceDeclaredColumn()#org/apache/parquet/filter2/predicate/SchemaCompatibilityValidator/validate(org.apache.parquet.filter2.predicate.FilterPredicate,org.apache.parquet.schema.MessageType)
org/apache/parquet/filter2/predicate/TestSchemaCompatibilityValidator/testTwiceDeclaredColumn()#org/apache/parquet/filter2/predicate/FilterApi/eq(C,T)
org/apache/parquet/filter2/predicate/TestSchemaCompatibilityValidator/testTwiceDeclaredColumn()#java/lang/Throwable/getMessage()
org/apache/parquet/filter2/predicate/TestSchemaCompatibilityValidator/testTwiceDeclaredColumn()#org/apache/parquet/io/api/Binary/fromString(java.lang.String)
org/apache/parquet/filter2/predicate/TestSchemaCompatibilityValidator/testFindsInvalidTypes()#org/apache/parquet/filter2/predicate/SchemaCompatibilityValidator/validate(org.apache.parquet.filter2.predicate.FilterPredicate,org.apache.parquet.schema.MessageType)
org/apache/parquet/filter2/predicate/TestSchemaCompatibilityValidator/testFindsInvalidTypes()#java/lang/Throwable/getMessage()
org/apache/parquet/filter2/predicate/TestSchemaCompatibilityValidator/testValidType()#org/apache/parquet/filter2/predicate/SchemaCompatibilityValidator/validate(org.apache.parquet.filter2.predicate.FilterPredicate,org.apache.parquet.schema.MessageType)
org/apache/parquet/filter2/predicate/TestSchemaCompatibilityValidator/testRepeatedNotSupported()#org/apache/parquet/filter2/predicate/SchemaCompatibilityValidator/validate(org.apache.parquet.filter2.predicate.FilterPredicate,org.apache.parquet.schema.MessageType)
org/apache/parquet/filter2/predicate/TestSchemaCompatibilityValidator/testRepeatedNotSupported()#org/apache/parquet/filter2/predicate/FilterApi/eq(C,T)
org/apache/parquet/filter2/predicate/TestSchemaCompatibilityValidator/testRepeatedNotSupported()#java/lang/Throwable/getMessage()
org/apache/parquet/pig/ParquetLoader/getParquetInputFormat()#org/apache/parquet/pig/ParquetLoader/checkSetLocationHasBeenCalled()
org/apache/parquet/pig/ParquetLoader/getParquetInputFormat()#org/apache/parquet/pig/ParquetLoader/UnregisteringParquetInputFormat/UnregisteringParquetInputFormat(java.lang.String)
org/apache/parquet/pig/ParquetLoader/getParquetInputFormat()#java/lang/ref/SoftReference/SoftReference(T)
org/apache/parquet/pig/ParquetLoader/isElephantBirdCompatible(org.apache.parquet.hadoop.Job)#org/apache/parquet/hadoop/util/ContextUtil/getConfiguration(org.apache.parquet.hadoop.util.JobContext)
org/apache/parquet/pig/ParquetLoader/buildFilter(org.apache.parquet.pig.OpType,org.apache.parquet.pig.Column,org.apache.parquet.pig.Const)#org/apache/parquet/pig/ParquetLoader/getValue(org.apache.parquet.pig.Const,java.lang.Class)
org/apache/parquet/pig/ParquetLoader/buildFilter(org.apache.parquet.pig.OpType,org.apache.parquet.pig.Column,org.apache.parquet.pig.Const)#org/apache/parquet/filter2/predicate/Operators/Column/getColumnType()
org/apache/parquet/pig/ParquetLoader/buildFilter(org.apache.parquet.pig.OpType,org.apache.parquet.pig.Column,org.apache.parquet.pig.Const)#org/apache/parquet/filter2/predicate/FilterApi/doubleColumn(java.lang.String)
org/apache/parquet/pig/ParquetLoader/buildFilter(org.apache.parquet.pig.OpType,org.apache.parquet.pig.Column,org.apache.parquet.pig.Const)#org/apache/parquet/filter2/predicate/FilterApi/notEq(C,T)
org/apache/parquet/pig/ParquetLoader/buildFilter(org.apache.parquet.pig.OpType,org.apache.parquet.pig.Column,org.apache.parquet.pig.Const)#org/apache/parquet/filter2/predicate/FilterApi/intColumn(java.lang.String)
org/apache/parquet/pig/ParquetLoader/buildFilter(org.apache.parquet.pig.OpType,org.apache.parquet.pig.Column,org.apache.parquet.pig.Const)#org/apache/parquet/filter2/predicate/FilterApi/longColumn(java.lang.String)
org/apache/parquet/pig/ParquetLoader/buildFilter(org.apache.parquet.pig.OpType,org.apache.parquet.pig.Column,org.apache.parquet.pig.Const)#org/apache/parquet/filter2/predicate/FilterApi/floatColumn(java.lang.String)
org/apache/parquet/pig/ParquetLoader/buildFilter(org.apache.parquet.pig.OpType,org.apache.parquet.pig.Column,org.apache.parquet.pig.Const)#org/apache/parquet/pig/ParquetLoader/op(Expression.OpType,COL,org.apache.parquet.pig.Const)
org/apache/parquet/pig/ParquetLoader/buildFilter(org.apache.parquet.pig.OpType,org.apache.parquet.pig.Column,org.apache.parquet.pig.Const)#org/apache/parquet/filter2/predicate/FilterApi/eq(C,T)
org/apache/parquet/pig/ParquetLoader/buildFilter(org.apache.parquet.pig.OpType,org.apache.parquet.pig.Column,org.apache.parquet.pig.Const)#org/apache/parquet/filter2/predicate/FilterApi/booleanColumn(java.lang.String)
org/apache/parquet/pig/ParquetLoader/buildFilter(org.apache.parquet.pig.OpType,org.apache.parquet.pig.Column,org.apache.parquet.pig.Const)#org/apache/parquet/filter2/predicate/FilterApi/binaryColumn(java.lang.String)
org/apache/parquet/pig/ParquetLoader/buildFilter(org.apache.parquet.pig.OpType,org.apache.parquet.pig.Column,org.apache.parquet.pig.Const)#java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)
org/apache/parquet/pig/ParquetLoader/buildFilter(org.apache.parquet.pig.OpType,org.apache.parquet.pig.Column,org.apache.parquet.pig.Const)#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/apache/parquet/pig/ParquetLoader/checkSetLocationHasBeenCalled()#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/apache/parquet/pig/ParquetLoader/pushProjection(org.apache.parquet.pig.RequiredFieldList)#org/apache/parquet/pig/PigSchemaConverter/pigSchemaToString(org.apache.parquet.pig.Schema)
org/apache/parquet/pig/ParquetLoader/pushProjection(org.apache.parquet.pig.RequiredFieldList)#org/apache/parquet/pig/ParquetLoader/storeInUDFContext(java.lang.String,java.lang.Object)
org/apache/parquet/pig/ParquetLoader/pushProjection(org.apache.parquet.pig.RequiredFieldList)#org/apache/parquet/pig/ParquetLoader/getSchemaFromRequiredFieldList(org.apache.parquet.pig.Schema,java.util.List)
org/apache/parquet/pig/ParquetLoader/pushProjection(org.apache.parquet.pig.RequiredFieldList)#org/apache/parquet/pig/PigSchemaConverter/serializeRequiredFieldList(org.apache.parquet.pig.RequiredFieldList)
org/apache/parquet/pig/ParquetLoader/buildFilter(org.apache.parquet.pig.Expression)#org/apache/parquet/filter2/predicate/LogicalInverseRewriter/rewrite(org.apache.parquet.filter2.predicate.FilterPredicate)
org/apache/parquet/pig/ParquetLoader/buildFilter(org.apache.parquet.pig.Expression)#org/apache/parquet/pig/ParquetLoader/buildFilter(org.apache.parquet.pig.OpType,org.apache.parquet.pig.Column,org.apache.parquet.pig.Const)
org/apache/parquet/pig/ParquetLoader/buildFilter(org.apache.parquet.pig.Expression)#org/apache/parquet/filter2/predicate/FilterApi/or(org.apache.parquet.filter2.predicate.FilterPredicate,org.apache.parquet.filter2.predicate.FilterPredicate)
org/apache/parquet/pig/ParquetLoader/buildFilter(org.apache.parquet.pig.Expression)#org/apache/parquet/filter2/predicate/FilterApi/and(org.apache.parquet.filter2.predicate.FilterPredicate,org.apache.parquet.filter2.predicate.FilterPredicate)
org/apache/parquet/pig/ParquetLoader/buildFilter(org.apache.parquet.pig.Expression)#org/apache/parquet/pig/ParquetLoader/buildFilter(org.apache.parquet.pig.Expression)
org/apache/parquet/pig/ParquetLoader/buildFilter(org.apache.parquet.pig.Expression)#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/apache/parquet/pig/ParquetLoader/buildFilter(org.apache.parquet.pig.Expression)#org/apache/parquet/filter2/predicate/FilterApi/not(org.apache.parquet.filter2.predicate.FilterPredicate)
org/apache/parquet/pig/ParquetLoader/getStatistics(java.lang.String,org.apache.parquet.hadoop.Job)#org/apache/parquet/pig/ParquetLoader/setInput(java.lang.String,org.apache.parquet.hadoop.Job)
org/apache/parquet/pig/ParquetLoader/getStatistics(java.lang.String,org.apache.parquet.hadoop.Job)#org/apache/parquet/pig/ParquetLoader/getParquetInputFormat()
org/apache/parquet/pig/ParquetLoader/getStatistics(java.lang.String,org.apache.parquet.hadoop.Job)#java/lang/String/format(java.lang.String,java.lang.Object[])
org/apache/parquet/pig/ParquetLoader/setInput(java.lang.String,org.apache.parquet.hadoop.Job)#java/lang/Boolean/parseBoolean(java.lang.String)
org/apache/parquet/pig/ParquetLoader/setInput(java.lang.String,org.apache.parquet.hadoop.Job)#org/apache/parquet/pig/ParquetLoader/getPropertyFromUDFContext(java.lang.String)
org/apache/parquet/pig/ParquetLoader/setInput(java.lang.String,org.apache.parquet.hadoop.Job)#org/apache/parquet/pig/PigSchemaConverter/pigSchemaToString(org.apache.parquet.pig.Schema)
org/apache/parquet/pig/ParquetLoader/setInput(java.lang.String,org.apache.parquet.hadoop.Job)#org/apache/parquet/pig/ParquetLoader/storeInUDFContext(java.lang.String,java.lang.Object)
org/apache/parquet/pig/ParquetLoader/setInput(java.lang.String,org.apache.parquet.hadoop.Job)#org/apache/parquet/hadoop/ParquetInputFormat/setFilterPredicate(org.apache.parquet.hadoop.Configuration,org.apache.parquet.filter2.predicate.FilterPredicate)
org/apache/parquet/pig/ParquetLoader/setInput(java.lang.String,org.apache.parquet.hadoop.Job)#org/apache/parquet/pig/PigSchemaConverter/serializeRequiredFieldList(org.apache.parquet.pig.RequiredFieldList)
org/apache/parquet/pig/ParquetLoader/setInput(java.lang.String,org.apache.parquet.hadoop.Job)#org/apache/parquet/pig/ParquetLoader/getFromUDFContext(java.lang.String)
org/apache/parquet/pig/ParquetLoader/setInput(java.lang.String,org.apache.parquet.hadoop.Job)#org/apache/parquet/hadoop/util/ContextUtil/getConfiguration(org.apache.parquet.hadoop.util.JobContext)
org/apache/parquet/pig/ParquetLoader/setInput(java.lang.String,org.apache.parquet.hadoop.Job)#org/apache/parquet/pig/PigSchemaConverter/deserializeRequiredFieldList(java.lang.String)
org/apache/parquet/pig/ParquetLoader/setInput(java.lang.String,org.apache.parquet.hadoop.Job)#org/apache/parquet/pig/ParquetLoader/initSchema(org.apache.parquet.hadoop.Job)
org/apache/parquet/pig/ParquetLoader/setInput(java.lang.String,org.apache.parquet.hadoop.Job)#java/lang/Boolean/toString(boolean)
org/apache/parquet/pig/ParquetLoader/setInput(java.lang.String,org.apache.parquet.hadoop.Job)#org/apache/parquet/pig/PigSchemaConverter/parsePigSchema(java.lang.String)
org/apache/parquet/pig/ParquetLoader/getPartitionKeys(java.lang.String,org.apache.parquet.hadoop.Job)#org/apache/parquet/pig/ParquetLoader/setInput(java.lang.String,org.apache.parquet.hadoop.Job)
org/apache/parquet/pig/ParquetLoader/getPartitionKeys(java.lang.String,org.apache.parquet.hadoop.Job)#java/lang/String/format(java.lang.String,java.lang.Object[])
org/apache/parquet/pig/ParquetLoader/getInputFormat()#org/apache/parquet/pig/ParquetLoader/getParquetInputFormat()
org/apache/parquet/pig/ParquetLoader/getValue(org.apache.parquet.pig.Const,java.lang.Class)#java/lang/Class/cast(java.lang.Object)
org/apache/parquet/pig/ParquetLoader/getValue(org.apache.parquet.pig.Const,java.lang.Class)#org/apache/parquet/io/api/Binary/fromString(java.lang.String)
org/apache/parquet/pig/ParquetLoader/getPropertyFromUDFContext(java.lang.String)#java/lang/Object/getClass()
org/apache/parquet/pig/ParquetLoader/convertToElephantBirdCompatibleSchema(org.apache.parquet.pig.Schema)#org/apache/parquet/pig/ParquetLoader/convertToElephantBirdCompatibleSchema(org.apache.parquet.pig.Schema)
org/apache/parquet/pig/ParquetLoader/getSupportedExpressionTypes()#java/util/Arrays/asList(T[])
org/apache/parquet/pig/ParquetLoader/getNext()#java/lang/Thread/interrupted()
org/apache/parquet/pig/ParquetLoader/getNext()#org/apache/parquet/io/ParquetDecodingException/ParquetDecodingException(java.lang.String,java.lang.Throwable)
org/apache/parquet/pig/ParquetLoader/storeInUDFContext(java.lang.String,java.lang.Object)#java/util/Hashtable/put(K,V)
org/apache/parquet/pig/ParquetLoader/storeInUDFContext(java.lang.String,java.lang.Object)#java/lang/Object/getClass()
org/apache/parquet/pig/ParquetLoader/setPushdownPredicate(org.apache.parquet.pig.Expression)#org/apache/parquet/pig/ParquetLoader/storeInUDFContext(java.lang.String,java.lang.Object)
org/apache/parquet/pig/ParquetLoader/setPushdownPredicate(org.apache.parquet.pig.Expression)#org/apache/parquet/pig/ParquetLoader/buildFilter(org.apache.parquet.pig.Expression)
org/apache/parquet/pig/ParquetLoader/getPredicateFields(java.lang.String,org.apache.parquet.hadoop.Job)#java/util/ArrayList/ArrayList()
org/apache/parquet/pig/ParquetLoader/getPredicateFields(java.lang.String,org.apache.parquet.hadoop.Job)#java/util/List/add(E)
org/apache/parquet/pig/ParquetLoader/getFromUDFContext(java.lang.String)#java/lang/Object/getClass()
org/apache/parquet/pig/ParquetLoader/getFeatures()#java/util/Arrays/asList(T[])
org/apache/parquet/pig/ParquetLoader/getSchemaFromRequiredFieldList(org.apache.parquet.pig.Schema,java.util.List)#org/apache/parquet/pig/ParquetLoader/getSchemaFromRequiredFieldList(org.apache.parquet.pig.Schema,java.util.List)
org/apache/parquet/pig/ParquetLoader/getSchema(java.lang.String,org.apache.parquet.hadoop.Job)#org/apache/parquet/pig/ParquetLoader/setInput(java.lang.String,org.apache.parquet.hadoop.Job)
org/apache/parquet/pig/ParquetLoader/getSchema(java.lang.String,org.apache.parquet.hadoop.Job)#java/lang/String/format(java.lang.String,java.lang.Object[])
org/apache/parquet/pig/ParquetLoader/getSchema(java.lang.String,org.apache.parquet.hadoop.Job)#java/lang/Object/Object()
org/apache/parquet/pig/ParquetLoader/setLocation(java.lang.String,org.apache.parquet.hadoop.Job)#org/apache/parquet/pig/ParquetLoader/setInput(java.lang.String,org.apache.parquet.hadoop.Job)
org/apache/parquet/pig/ParquetLoader/setLocation(java.lang.String,org.apache.parquet.hadoop.Job)#java/lang/String/format(java.lang.String,java.lang.Object[])
org/apache/parquet/pig/ParquetLoader/initSchema(org.apache.parquet.hadoop.Job)#org/apache/parquet/pig/ParquetLoader/getParquetInputFormat()
org/apache/parquet/pig/ParquetLoader/initSchema(org.apache.parquet.hadoop.Job)#org/apache/parquet/pig/ParquetLoader/isElephantBirdCompatible(org.apache.parquet.hadoop.Job)
org/apache/parquet/pig/ParquetLoader/initSchema(org.apache.parquet.hadoop.Job)#org/apache/parquet/pig/ParquetLoader/convertToElephantBirdCompatibleSchema(org.apache.parquet.pig.Schema)
org/apache/parquet/pig/ParquetLoader/initSchema(org.apache.parquet.hadoop.Job)#org/apache/parquet/pig/TupleReadSupport/getPigSchemaFromMultipleFiles(org.apache.parquet.schema.MessageType,java.util.Map)
org/apache/parquet/pig/ParquetLoader/initSchema(org.apache.parquet.hadoop.Job)#org/apache/parquet/hadoop/metadata/GlobalMetaData/getKeyValueMetaData()
org/apache/parquet/pig/ParquetLoader/initSchema(org.apache.parquet.hadoop.Job)#org/apache/parquet/hadoop/metadata/GlobalMetaData/getSchema()
org/apache/parquet/pig/ParquetLoader/op(Expression.OpType,COL,org.apache.parquet.pig.Const)#org/apache/parquet/filter2/predicate/FilterApi/ltEq(C,T)
org/apache/parquet/pig/ParquetLoader/op(Expression.OpType,COL,org.apache.parquet.pig.Const)#org/apache/parquet/pig/ParquetLoader/getValue(org.apache.parquet.pig.Const,java.lang.Class)
org/apache/parquet/pig/ParquetLoader/op(Expression.OpType,COL,org.apache.parquet.pig.Const)#org/apache/parquet/filter2/predicate/FilterApi/eq(C,T)
org/apache/parquet/pig/ParquetLoader/op(Expression.OpType,COL,org.apache.parquet.pig.Const)#org/apache/parquet/filter2/predicate/FilterApi/lt(C,T)
org/apache/parquet/pig/ParquetLoader/op(Expression.OpType,COL,org.apache.parquet.pig.Const)#org/apache/parquet/filter2/predicate/FilterApi/notEq(C,T)
org/apache/parquet/pig/ParquetLoader/op(Expression.OpType,COL,org.apache.parquet.pig.Const)#org/apache/parquet/filter2/predicate/FilterApi/gtEq(C,T)
org/apache/parquet/pig/ParquetLoader/op(Expression.OpType,COL,org.apache.parquet.pig.Const)#org/apache/parquet/filter2/predicate/FilterApi/gt(C,T)
org/apache/parquet/pig/ParquetLoader/op(Expression.OpType,COL,org.apache.parquet.pig.Const)#org/apache/parquet/filter2/predicate/Operators/Column/getColumnType()
org/apache/parquet/tools/read/SimpleReadSupport/prepareForRead(org.apache.parquet.hadoop.Configuration,java.util.Map,org.apache.parquet.schema.MessageType,org.apache.parquet.hadoop.api.ReadSupport.ReadContext)#org/apache/parquet/tools/read/SimpleRecordMaterializer/SimpleRecordMaterializer(org.apache.parquet.schema.MessageType)
org/apache/parquet/tools/read/SimpleReadSupport/init(org.apache.parquet.hadoop.api.InitContext)#org/apache/parquet/hadoop/api/ReadSupport/ReadContext/ReadContext(org.apache.parquet.schema.MessageType)
org/apache/parquet/tools/read/SimpleReadSupport/init(org.apache.parquet.hadoop.api.InitContext)#org/apache/parquet/hadoop/api/InitContext/getFileSchema()
org/apache/parquet/proto/ProtoWriteSupport/DoubleWriter/writeRawValue(java.lang.Object)#org/apache/parquet/io/api/RecordConsumer/addDouble(double)
org/apache/parquet/proto/ProtoWriteSupport/StringWriter/writeRawValue(java.lang.Object)#org/apache/parquet/io/api/Binary/fromString(java.lang.String)
org/apache/parquet/proto/ProtoWriteSupport/StringWriter/writeRawValue(java.lang.Object)#org/apache/parquet/io/api/RecordConsumer/addBinary(org.apache.parquet.io.api.Binary)
org/apache/parquet/avro/AvroConverters/FieldUTF8Converter/convert(org.apache.parquet.io.api.Binary)#org/apache/parquet/io/api/Binary/getBytes()
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForLongTest/writeData(long[],int)#org/apache/parquet/column/values/ValuesWriter/writeLong(long)
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForLongTest/writeData(long[])#org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForLongTest/writeData(long[],int)
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForLongTest/randomDataTest()#org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForLongTest/shouldReadAndWrite(long[],int)
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForLongTest/randomDataTest()#java/util/Random/nextInt(int)
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForLongTest/randomDataTest()#org/apache/parquet/column/values/ValuesWriter/reset()
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForLongTest/randomDataTest()#java/util/Random/nextLong()
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForLongTest/shouldThrowExceptionWhenReadMoreThanWritten()#org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesReader/readLong()
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForLongTest/shouldThrowExceptionWhenReadMoreThanWritten()#java/lang/Throwable/getMessage()
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForLongTest/shouldThrowExceptionWhenReadMoreThanWritten()#org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForLongTest/shouldWriteAndRead(long[])
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForLongTest/shouldReturnCorrectOffsetAfterInitialization()#org/apache/parquet/column/values/ValuesWriter/getBytes()
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForLongTest/shouldReturnCorrectOffsetAfterInitialization()#org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesReader/readLong()
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForLongTest/shouldReturnCorrectOffsetAfterInitialization()#org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForLongTest/writeData(long[])
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForLongTest/shouldReturnCorrectOffsetAfterInitialization()#org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesReader/initFromPage(int,java.nio.ByteBuffer,int)
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForLongTest/shouldReturnCorrectOffsetAfterInitialization()#org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesReader/DeltaBinaryPackingValuesReader()
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForLongTest/shouldReturnCorrectOffsetAfterInitialization()#org/apache/parquet/bytes/BytesInput/toByteArray()
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForLongTest/shouldReturnCorrectOffsetAfterInitialization()#java/nio/ByteBuffer/wrap(byte[])
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForLongTest/shouldReturnCorrectOffsetAfterInitialization()#org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesReader/getNextOffset()
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForLongTest/shouldReturnCorrectOffsetAfterInitialization()#java/lang/System/arraycopy(java.lang.Object,int,java.lang.Object,int,int)
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForLongTest/shouldReadMaxMinValue()#org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForLongTest/shouldWriteAndRead(long[])
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForLongTest/shouldWriteAndReadWhenDeltasAreSame()#org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForLongTest/shouldWriteAndRead(long[])
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForLongTest/shouldReadAndWrite(long[],int)#java/lang/Math/ceil(double)
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForLongTest/shouldReadAndWrite(long[],int)#org/apache/parquet/column/values/ValuesWriter/getBytes()
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForLongTest/shouldReadAndWrite(long[],int)#org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForLongTest/writeData(long[],int)
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForLongTest/shouldReadAndWrite(long[],int)#org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesReader/readLong()
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForLongTest/shouldReadAndWrite(long[],int)#org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesReader/DeltaBinaryPackingValuesReader()
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForLongTest/shouldReadAndWrite(long[],int)#org/apache/parquet/bytes/BytesInput/toByteArray()
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForLongTest/shouldReadAndWrite(long[],int)#org/apache/parquet/column/values/ValuesReader/initFromPage(int,byte[],int)
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForLongTest/shouldWriteAndReadWhenAMiniBlockIsNotFullyWritten()#java/util/Random/nextLong()
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForLongTest/shouldWriteAndReadWhenAMiniBlockIsNotFullyWritten()#org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForLongTest/shouldWriteAndRead(long[])
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForLongTest/shouldSkip()#org/apache/parquet/column/values/ValuesWriter/getBytes()
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForLongTest/shouldSkip()#org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesReader/readLong()
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForLongTest/shouldSkip()#org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForLongTest/writeData(long[])
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForLongTest/shouldSkip()#org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesReader/initFromPage(int,java.nio.ByteBuffer,int)
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForLongTest/shouldSkip()#org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesReader/DeltaBinaryPackingValuesReader()
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForLongTest/shouldSkip()#org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesReader/skip()
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForLongTest/shouldSkip()#org/apache/parquet/bytes/BytesInput/toByteBuffer()
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForLongTest/shouldReadWriteWhenDataIsNotAlignedWithBlock()#java/util/Random/nextInt(int)
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForLongTest/shouldReadWriteWhenDataIsNotAlignedWithBlock()#org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForLongTest/shouldWriteAndRead(long[])
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForLongTest/shouldWriteAndRead(long[])#org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForLongTest/shouldReadAndWrite(long[],int)
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForLongTest/shouldWriteWhenDeltaIs0ForEachBlock()#org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForLongTest/shouldWriteAndRead(long[])
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForLongTest/miniBlockSizeShouldBeMultipleOf8()#org/apache/parquet/bytes/DirectByteBufferAllocator/DirectByteBufferAllocator()
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForLongTest/miniBlockSizeShouldBeMultipleOf8()#org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForLong/DeltaBinaryPackingValuesWriterForLong(int,int,int,int,org.apache.parquet.bytes.ByteBufferAllocator)
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForLongTest/shouldWriteAndReadWhenBlockIsNotFullyWritten()#java/util/Random/nextLong()
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForLongTest/shouldWriteAndReadWhenBlockIsNotFullyWritten()#org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForLongTest/shouldWriteAndRead(long[])
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForLongTest/shouldReset()#org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForLongTest/shouldReadWriteWhenDataIsNotAlignedWithBlock()
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForLongTest/shouldReset()#org/apache/parquet/column/values/ValuesWriter/reset()
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForLongTest/shouldReset()#org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForLongTest/shouldWriteAndRead(long[])
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForLongTest/shouldWriteNegativeDeltas()#java/util/Random/nextInt(int)
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForLongTest/shouldWriteNegativeDeltas()#org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForLongTest/shouldWriteAndRead(long[])
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForLongTest/shouldWriteWhenDataIsAlignedWithBlock()#java/util/Random/nextLong()
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForLongTest/shouldWriteWhenDataIsAlignedWithBlock()#org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForLongTest/shouldWriteAndRead(long[])
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForLongTest/shouldWriteAndReadWhenValuesAreSame()#org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForLongTest/shouldWriteAndRead(long[])
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForLongTest/setUp()#org/apache/parquet/bytes/DirectByteBufferAllocator/DirectByteBufferAllocator()
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForLongTest/setUp()#org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForLong/DeltaBinaryPackingValuesWriterForLong(int,int,int,int,org.apache.parquet.bytes.ByteBufferAllocator)
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForLongTest/setUp()#java/util/Random/Random(long)
org/apache/parquet/thrift/struct/ThriftType/StructType/equals(java.lang.Object)#java/util/Arrays/equals(java.lang.Object[],java.lang.Object[])
org/apache/parquet/thrift/struct/ThriftType/StructType/equals(java.lang.Object)#java/lang/Object/getClass()
org/apache/parquet/thrift/struct/ThriftType/StructType/accept(org.apache.parquet.thrift.struct.ThriftType.StateVisitor,S)#org/apache/parquet/thrift/struct/ThriftType/StateVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.StructType,S)
org/apache/parquet/thrift/struct/ThriftType/StructType/accept(org.apache.parquet.thrift.struct.ThriftType.TypeVisitor)#org/apache/parquet/thrift/struct/ThriftType/TypeVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.StructType)
org/apache/parquet/thrift/struct/ThriftType/StructType/hashCode()#java/util/Arrays/hashCode(java.lang.Object[])
org/apache/parquet/hadoop/thrift/TestParquetToThriftReadWriteAndProjection/testDropMapValueStruct()#org/apache/parquet/hadoop/thrift/TestParquetToThriftReadWriteAndProjection/makeStructV4WithExtracStructField(java.lang.String)
org/apache/parquet/hadoop/thrift/TestParquetToThriftReadWriteAndProjection/testDropMapValueStruct()#java/util/HashMap/HashMap()
org/apache/parquet/hadoop/thrift/TestParquetToThriftReadWriteAndProjection/testDropMapValueStruct()#org/apache/parquet/hadoop/thrift/TestParquetToThriftReadWriteAndProjection/shouldDoProjectionWithThriftColumnFilter(java.lang.String,org.apache.parquet.hadoop.thrift.TBase,org.apache.parquet.hadoop.thrift.TBase,java.lang.Class)
org/apache/parquet/hadoop/thrift/TestParquetToThriftReadWriteAndProjection/testDropMapValueStruct()#java/lang/Object/Object()
org/apache/parquet/hadoop/thrift/TestParquetToThriftReadWriteAndProjection/testPullInRequiredSets()#java/util/Arrays/asList(T[])
org/apache/parquet/hadoop/thrift/TestParquetToThriftReadWriteAndProjection/testPullInRequiredSets()#org/apache/parquet/hadoop/thrift/TestParquetToThriftReadWriteAndProjection/shouldDoProjectionWithThriftColumnFilter(java.lang.String,org.apache.parquet.hadoop.thrift.TBase,org.apache.parquet.hadoop.thrift.TBase,java.lang.Class)
org/apache/parquet/hadoop/thrift/TestParquetToThriftReadWriteAndProjection/testPullInRequiredSets()#java/util/HashSet/HashSet()
org/apache/parquet/hadoop/thrift/TestParquetToThriftReadWriteAndProjection/testPullInRequiredSets()#java/util/HashSet/HashSet(java.util.Collection)
org/apache/parquet/hadoop/thrift/TestParquetToThriftReadWriteAndProjection/testPullingInRequiredStructWithFilter()#java/util/Arrays/asList(T[])
org/apache/parquet/hadoop/thrift/TestParquetToThriftReadWriteAndProjection/testPullingInRequiredStructWithFilter()#org/apache/parquet/hadoop/thrift/TestParquetToThriftReadWriteAndProjection/shouldDoProjectionWithThriftColumnFilter(java.lang.String,org.apache.parquet.hadoop.thrift.TBase,org.apache.parquet.hadoop.thrift.TBase,java.lang.Class)
org/apache/parquet/hadoop/thrift/TestParquetToThriftReadWriteAndProjection/testPullingInRequiredStructWithFilter()#java/lang/Object/Object()
org/apache/parquet/hadoop/thrift/TestParquetToThriftReadWriteAndProjection/testDropMapValueNestedPrim()#java/util/HashMap/HashMap()
org/apache/parquet/hadoop/thrift/TestParquetToThriftReadWriteAndProjection/testDropMapValueNestedPrim()#org/apache/parquet/hadoop/thrift/TestParquetToThriftReadWriteAndProjection/shouldDoProjectionWithThriftColumnFilter(java.lang.String,org.apache.parquet.hadoop.thrift.TBase,org.apache.parquet.hadoop.thrift.TBase,java.lang.Class)
org/apache/parquet/hadoop/thrift/TestParquetToThriftReadWriteAndProjection/testDropMapValueNestedPrim()#java/util/Map/put(K,V)
org/apache/parquet/hadoop/thrift/TestParquetToThriftReadWriteAndProjection/testReorderdOptionalFields()#org/apache/parquet/hadoop/thrift/TestParquetToThriftReadWriteAndProjection/shouldDoProjectionWithThriftColumnFilter(java.lang.String,org.apache.parquet.hadoop.thrift.TBase,org.apache.parquet.hadoop.thrift.TBase,java.lang.Class)
org/apache/parquet/hadoop/thrift/TestParquetToThriftReadWriteAndProjection/testPullInPrimitiveValues()#org/apache/parquet/hadoop/thrift/TestParquetToThriftReadWriteAndProjection/shouldDoProjectionWithThriftColumnFilter(java.lang.String,org.apache.parquet.hadoop.thrift.TBase,org.apache.parquet.hadoop.thrift.TBase,java.lang.Class)
org/apache/parquet/hadoop/thrift/TestParquetToThriftReadWriteAndProjection/testDropMapValueNestedStruct()#org/apache/parquet/hadoop/thrift/TestParquetToThriftReadWriteAndProjection/makeStructV4WithExtracStructField(java.lang.String)
org/apache/parquet/hadoop/thrift/TestParquetToThriftReadWriteAndProjection/testDropMapValueNestedStruct()#java/util/HashMap/HashMap()
org/apache/parquet/hadoop/thrift/TestParquetToThriftReadWriteAndProjection/testDropMapValueNestedStruct()#org/apache/parquet/hadoop/thrift/TestParquetToThriftReadWriteAndProjection/shouldDoProjectionWithThriftColumnFilter(java.lang.String,org.apache.parquet.hadoop.thrift.TBase,org.apache.parquet.hadoop.thrift.TBase,java.lang.Class)
org/apache/parquet/hadoop/thrift/TestParquetToThriftReadWriteAndProjection/testDropMapValueNestedStruct()#java/lang/Object/Object()
org/apache/parquet/hadoop/thrift/TestParquetToThriftReadWriteAndProjection/testPullInRequiredLists()#java/util/ArrayList/ArrayList()
org/apache/parquet/hadoop/thrift/TestParquetToThriftReadWriteAndProjection/testPullInRequiredLists()#java/util/Arrays/asList(T[])
org/apache/parquet/hadoop/thrift/TestParquetToThriftReadWriteAndProjection/testPullInRequiredLists()#org/apache/parquet/hadoop/thrift/TestParquetToThriftReadWriteAndProjection/shouldDoProjectionWithThriftColumnFilter(java.lang.String,org.apache.parquet.hadoop.thrift.TBase,org.apache.parquet.hadoop.thrift.TBase,java.lang.Class)
org/apache/parquet/hadoop/thrift/TestParquetToThriftReadWriteAndProjection/testPullInRequiredLists()#java/lang/Object/Object()
org/apache/parquet/hadoop/thrift/TestParquetToThriftReadWriteAndProjection/shouldDoProjection(org.apache.parquet.hadoop.Configuration,T,T,java.lang.Class)#org/apache/parquet/hadoop/ParquetInputFormat/getSplits(org.apache.parquet.hadoop.util.JobContext)
org/apache/parquet/hadoop/thrift/TestParquetToThriftReadWriteAndProjection/shouldDoProjection(org.apache.parquet.hadoop.Configuration,T,T,java.lang.Class)#org/apache/parquet/hadoop/util/ContextUtil/newJobContext(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.util.JobID)
org/apache/parquet/hadoop/thrift/TestParquetToThriftReadWriteAndProjection/shouldDoProjection(org.apache.parquet.hadoop.Configuration,T,T,java.lang.Class)#org/apache/parquet/hadoop/ParquetInputFormat/createRecordReader(org.apache.parquet.hadoop.InputSplit,org.apache.parquet.hadoop.TaskAttemptContext)
org/apache/parquet/hadoop/thrift/TestParquetToThriftReadWriteAndProjection/shouldDoProjection(org.apache.parquet.hadoop.Configuration,T,T,java.lang.Class)#org/apache/parquet/hadoop/util/ContextUtil/newTaskAttemptContext(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.util.TaskAttemptID)
org/apache/parquet/hadoop/thrift/TestParquetToThriftReadWriteAndProjection/shouldDoProjection(org.apache.parquet.hadoop.Configuration,T,T,java.lang.Class)#org/apache/parquet/hadoop/thrift/ThriftToParquetFileWriter/close()
org/apache/parquet/hadoop/thrift/TestParquetToThriftReadWriteAndProjection/shouldDoProjection(org.apache.parquet.hadoop.Configuration,T,T,java.lang.Class)#java/io/ByteArrayOutputStream/toByteArray()
org/apache/parquet/hadoop/thrift/TestParquetToThriftReadWriteAndProjection/shouldDoProjection(org.apache.parquet.hadoop.Configuration,T,T,java.lang.Class)#java/io/ByteArrayOutputStream/ByteArrayOutputStream()
org/apache/parquet/hadoop/thrift/TestParquetToThriftReadWriteAndProjection/shouldDoProjection(org.apache.parquet.hadoop.Configuration,T,T,java.lang.Class)#java/lang/Object/Object()
org/apache/parquet/hadoop/thrift/TestParquetToThriftReadWriteAndProjection/shouldDoProjection(org.apache.parquet.hadoop.Configuration,T,T,java.lang.Class)#org/apache/parquet/hadoop/thrift/ThriftToParquetFileWriter/write(org.apache.parquet.hadoop.thrift.BytesWritable)
org/apache/parquet/hadoop/thrift/TestParquetToThriftReadWriteAndProjection/shouldDoProjection(org.apache.parquet.hadoop.Configuration,T,T,java.lang.Class)#org/apache/parquet/hadoop/thrift/ThriftToParquetFileWriter/ThriftToParquetFileWriter(org.apache.parquet.hadoop.Path,org.apache.parquet.hadoop.TaskAttemptContext,org.apache.parquet.hadoop.thrift.TProtocolFactory,java.lang.Class)
org/apache/parquet/hadoop/thrift/TestParquetToThriftReadWriteAndProjection/shouldDoProjection(org.apache.parquet.hadoop.Configuration,T,T,java.lang.Class)#org/apache/parquet/hadoop/thrift/ParquetThriftInputFormat/ParquetThriftInputFormat()
org/apache/parquet/hadoop/thrift/TestParquetToThriftReadWriteAndProjection/shouldDoProjection(org.apache.parquet.hadoop.Configuration,T,T,java.lang.Class)#org/apache/parquet/hadoop/util/ContextUtil/getConfiguration(org.apache.parquet.hadoop.util.JobContext)
org/apache/parquet/hadoop/thrift/TestParquetToThriftReadWriteAndProjection/testPullInRequiredMaps()#java/util/HashMap/HashMap()
org/apache/parquet/hadoop/thrift/TestParquetToThriftReadWriteAndProjection/testPullInRequiredMaps()#org/apache/parquet/hadoop/thrift/TestParquetToThriftReadWriteAndProjection/shouldDoProjectionWithThriftColumnFilter(java.lang.String,org.apache.parquet.hadoop.thrift.TBase,org.apache.parquet.hadoop.thrift.TBase,java.lang.Class)
org/apache/parquet/hadoop/thrift/TestParquetToThriftReadWriteAndProjection/testPullInRequiredMaps()#java/util/Map/put(K,V)
org/apache/parquet/hadoop/thrift/TestParquetToThriftReadWriteAndProjection/testDropMapValuePrimitive()#java/util/HashMap/HashMap()
org/apache/parquet/hadoop/thrift/TestParquetToThriftReadWriteAndProjection/testDropMapValuePrimitive()#org/apache/parquet/hadoop/thrift/TestParquetToThriftReadWriteAndProjection/shouldDoProjectionWithThriftColumnFilter(java.lang.String,org.apache.parquet.hadoop.thrift.TBase,org.apache.parquet.hadoop.thrift.TBase,java.lang.Class)
org/apache/parquet/hadoop/thrift/TestParquetToThriftReadWriteAndProjection/testDropMapValuePrimitive()#java/util/Map/put(K,V)
org/apache/parquet/hadoop/thrift/TestParquetToThriftReadWriteAndProjection/shouldDoProjectionWithThriftColumnFilter(java.lang.String,org.apache.parquet.hadoop.thrift.TBase,org.apache.parquet.hadoop.thrift.TBase,java.lang.Class)#org/apache/parquet/hadoop/thrift/TestParquetToThriftReadWriteAndProjection/shouldDoProjection(org.apache.parquet.hadoop.Configuration,T,T,java.lang.Class)
org/apache/parquet/hadoop/thrift/TestParquetToThriftReadWriteAndProjection/testProjectOutOptionalFields()#java/util/Arrays/asList(T[])
org/apache/parquet/hadoop/thrift/TestParquetToThriftReadWriteAndProjection/testProjectOutOptionalFields()#org/apache/parquet/hadoop/thrift/TestParquetToThriftReadWriteAndProjection/shouldDoProjectionWithThriftColumnFilter(java.lang.String,org.apache.parquet.hadoop.thrift.TBase,org.apache.parquet.hadoop.thrift.TBase,java.lang.Class)
org/apache/parquet/hadoop/thrift/TestParquetToThriftReadWriteAndProjection/testProjectOutOptionalFields()#java/lang/Object/Object()
org/apache/parquet/hadoop/thrift/TestParquetToThriftReadWriteAndProjection/testThriftOptionalFieldsWithReadProjectionUsingParquetSchema()#java/util/Arrays/asList(T[])
org/apache/parquet/hadoop/thrift/TestParquetToThriftReadWriteAndProjection/testThriftOptionalFieldsWithReadProjectionUsingParquetSchema()#java/lang/Object/Object()
org/apache/parquet/hadoop/thrift/TestParquetToThriftReadWriteAndProjection/testThriftOptionalFieldsWithReadProjectionUsingParquetSchema()#org/apache/parquet/hadoop/thrift/TestParquetToThriftReadWriteAndProjection/shouldDoProjection(org.apache.parquet.hadoop.Configuration,T,T,java.lang.Class)
org/apache/parquet/avro/AvroCompatRecordMaterializer/getCurrentRecord()#org/apache/parquet/avro/AvroIndexedRecordConverter/getCurrentRecord()
org/apache/parquet/filter2/predicate/Operators/LogicalNotUserDefined/hashCode()#java/lang/Object/hashCode()
org/apache/parquet/filter2/predicate/Operators/LogicalNotUserDefined/hashCode()#java/lang/Object/getClass()
org/apache/parquet/filter2/predicate/Operators/LogicalNotUserDefined/accept(org.apache.parquet.filter2.predicate.FilterPredicate.Visitor)#org/apache/parquet/filter2/predicate/FilterPredicate/Visitor/visit(org.apache.parquet.filter2.predicate.Operators.LogicalNotUserDefined)
org/apache/parquet/filter2/predicate/Operators/LogicalNotUserDefined/equals(java.lang.Object)#java/lang/Object/equals(java.lang.Object)
org/apache/parquet/filter2/predicate/Operators/LogicalNotUserDefined/equals(java.lang.Object)#java/lang/Object/getClass()
org/apache/parquet/hadoop/codec/NonBlockedCompressorStream/write(byte[],int,int)#java/io/IOException/IOException(java.lang.String)
org/apache/parquet/hadoop/codec/NonBlockedCompressorStream/write(byte[],int,int)#java/lang/IndexOutOfBoundsException/IndexOutOfBoundsException()
org/apache/parquet/pig/PigSchemaConverter/ColumnIndexAccess/filterTupleSchema(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,org.apache.parquet.pig.RequiredFieldList)#java/util/ArrayList/ArrayList()
org/apache/parquet/pig/PigSchemaConverter/ColumnIndexAccess/filterTupleSchema(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,org.apache.parquet.pig.RequiredFieldList)#org/apache/parquet/pig/PigSchemaConverter/filter(org.apache.parquet.schema.Type,org.apache.parquet.pig.convert.FieldSchema)
org/apache/parquet/pig/PigSchemaConverter/ColumnIndexAccess/filterTupleSchema(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,org.apache.parquet.pig.RequiredFieldList)#org/apache/parquet/schema/GroupType/getFieldCount()
org/apache/parquet/pig/PigSchemaConverter/ColumnIndexAccess/filterTupleSchema(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,org.apache.parquet.pig.RequiredFieldList)#java/util/List/add(E)
org/apache/parquet/pig/PigSchemaConverter/ColumnIndexAccess/filterTupleSchema(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,org.apache.parquet.pig.RequiredFieldList)#java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)
org/apache/parquet/pig/PigSchemaConverter/ColumnIndexAccess/filterTupleSchema(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,org.apache.parquet.pig.RequiredFieldList)#java/lang/Object/Object()
org/apache/parquet/pig/PigSchemaConverter/ColumnIndexAccess/filterTupleSchema(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,org.apache.parquet.pig.RequiredFieldList)#org/apache/parquet/schema/GroupType/getFields()
org/apache/parquet/pig/PigSchemaConverter/ColumnIndexAccess/filterTupleSchema(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,org.apache.parquet.pig.RequiredFieldList)#java/util/List/get(int)
org/apache/parquet/hadoop/ParquetFileReader/ConsecutiveChunkList/readAll(org.apache.parquet.io.SeekableInputStream)#java/util/ArrayList/ArrayList(int)
org/apache/parquet/hadoop/ParquetFileReader/ConsecutiveChunkList/readAll(org.apache.parquet.io.SeekableInputStream)#org/apache/parquet/io/SeekableInputStream/seek(long)
org/apache/parquet/hadoop/ParquetFileReader/ConsecutiveChunkList/readAll(org.apache.parquet.io.SeekableInputStream)#org/apache/parquet/hadoop/ParquetFileReader/WorkaroundChunk/WorkaroundChunk(org.apache.parquet.hadoop.ParquetFileReader.ChunkDescriptor,java.nio.ByteBuffer,int,org.apache.parquet.io.SeekableInputStream)
org/apache/parquet/hadoop/ParquetFileReader/ConsecutiveChunkList/readAll(org.apache.parquet.io.SeekableInputStream)#java/util/List/get(int)
org/apache/parquet/hadoop/ParquetFileReader/ConsecutiveChunkList/readAll(org.apache.parquet.io.SeekableInputStream)#org/apache/parquet/bytes/ByteBufferAllocator/allocate(int)
org/apache/parquet/hadoop/ParquetFileReader/ConsecutiveChunkList/readAll(org.apache.parquet.io.SeekableInputStream)#org/apache/parquet/hadoop/util/counters/BenchmarkCounter/incrementBytesRead(long)
org/apache/parquet/hadoop/ParquetFileReader/ConsecutiveChunkList/readAll(org.apache.parquet.io.SeekableInputStream)#java/util/List/size()
org/apache/parquet/hadoop/ParquetFileReader/ConsecutiveChunkList/readAll(org.apache.parquet.io.SeekableInputStream)#org/apache/parquet/hadoop/ParquetFileReader/Chunk/Chunk(org.apache.parquet.hadoop.ParquetFileReader.ChunkDescriptor,java.nio.ByteBuffer,int)
org/apache/parquet/hadoop/ParquetFileReader/ConsecutiveChunkList/readAll(org.apache.parquet.io.SeekableInputStream)#org/apache/parquet/io/SeekableInputStream/readFully(java.nio.ByteBuffer)
org/apache/parquet/hadoop/ParquetFileReader/ConsecutiveChunkList/readAll(org.apache.parquet.io.SeekableInputStream)#java/util/List/add(E)
org/apache/parquet/hadoop/ParquetFileReader/ConsecutiveChunkList/addChunk(org.apache.parquet.hadoop.ParquetFileReader.ChunkDescriptor)#java/util/List/add(E)
org/apache/parquet/filter2/predicate/Operators/Column/hashCode()#org/apache/parquet/hadoop/metadata/ColumnPath/hashCode()
org/apache/parquet/filter2/predicate/Operators/Column/hashCode()#java/lang/Object/hashCode()
org/apache/parquet/filter2/predicate/Operators/Column/toString()#org/apache/parquet/hadoop/metadata/ColumnPath/toDotString()
org/apache/parquet/filter2/predicate/Operators/Column/equals(java.lang.Object)#java/lang/Object/equals(java.lang.Object)
org/apache/parquet/filter2/predicate/Operators/Column/equals(java.lang.Object)#org/apache/parquet/hadoop/metadata/ColumnPath/equals(java.lang.Object)
org/apache/parquet/filter2/predicate/Operators/Column/equals(java.lang.Object)#java/lang/Object/getClass()
org/apache/parquet/schema/Types/BaseMapBuilder/ListValueBuilder/named(java.lang.String)#org/apache/parquet/schema/Types/Builder/named(java.lang.String)
org/apache/parquet/schema/Types/BaseMapBuilder/ListValueBuilder/named(java.lang.String)#org/apache/parquet/schema/Types/BaseListBuilder/build(java.lang.String)
org/apache/parquet/schema/Types/BaseMapBuilder/ListValueBuilder/named(java.lang.String)#org/apache/parquet/schema/Types/BaseMapBuilder/setValueType(org.apache.parquet.schema.Type)
org/apache/parquet/hadoop/DirectCodecFactory/ensure(java.nio.ByteBuffer,int)#java/nio/Buffer/clear()
org/apache/parquet/hadoop/DirectCodecFactory/ensure(java.nio.ByteBuffer,int)#org/apache/parquet/hadoop/DirectCodecFactory/release(java.nio.ByteBuffer)
org/apache/parquet/hadoop/DirectCodecFactory/ensure(java.nio.ByteBuffer,int)#java/nio/Buffer/capacity()
org/apache/parquet/hadoop/DirectCodecFactory/ensure(java.nio.ByteBuffer,int)#org/apache/parquet/bytes/ByteBufferAllocator/allocate(int)
org/apache/parquet/hadoop/DirectCodecFactory/createCompressor(org.apache.parquet.hadoop.metadata.CompressionCodecName)#org/apache/parquet/hadoop/CodecFactory/getCodec(org.apache.parquet.hadoop.metadata.CompressionCodecName)
org/apache/parquet/hadoop/DirectCodecFactory/createCompressor(org.apache.parquet.hadoop.metadata.CompressionCodecName)#org/apache/parquet/hadoop/CodecFactory/HeapBytesCompressor/HeapBytesCompressor(org.apache.parquet.hadoop.metadata.CompressionCodecName)
org/apache/parquet/hadoop/DirectCodecFactory/createCompressor(org.apache.parquet.hadoop.metadata.CompressionCodecName)#org/apache/parquet/hadoop/DirectCodecFactory/NoopCompressor/NoopCompressor()
org/apache/parquet/hadoop/DirectCodecFactory/createCompressor(org.apache.parquet.hadoop.metadata.CompressionCodecName)#org/apache/parquet/hadoop/DirectCodecFactory/SnappyCompressor/SnappyCompressor()
org/apache/parquet/hadoop/DirectCodecFactory/release(java.nio.ByteBuffer)#org/apache/parquet/bytes/ByteBufferAllocator/release(java.nio.ByteBuffer)
org/apache/parquet/hadoop/DirectCodecFactory/close()#org/apache/parquet/hadoop/CodecFactory/release()
org/apache/parquet/hadoop/DirectCodecFactory/createDecompressor(org.apache.parquet.hadoop.metadata.CompressionCodecName)#org/apache/parquet/hadoop/DirectCodecFactory/FullDirectDecompressor/FullDirectDecompressor(org.apache.parquet.hadoop.metadata.CompressionCodecName)
org/apache/parquet/hadoop/DirectCodecFactory/createDecompressor(org.apache.parquet.hadoop.metadata.CompressionCodecName)#org/apache/parquet/hadoop/DirectCodecFactory/DirectCodecPool/codec(org.apache.parquet.hadoop.metadata.CompressionCodec)
org/apache/parquet/hadoop/DirectCodecFactory/createDecompressor(org.apache.parquet.hadoop.metadata.CompressionCodecName)#org/apache/parquet/hadoop/CodecFactory/getCodec(org.apache.parquet.hadoop.metadata.CompressionCodecName)
org/apache/parquet/hadoop/DirectCodecFactory/createDecompressor(org.apache.parquet.hadoop.metadata.CompressionCodecName)#org/apache/parquet/hadoop/DirectCodecFactory/IndirectDecompressor/IndirectDecompressor(org.apache.parquet.hadoop.metadata.CompressionCodec)
org/apache/parquet/hadoop/DirectCodecFactory/createDecompressor(org.apache.parquet.hadoop.metadata.CompressionCodecName)#org/apache/parquet/hadoop/DirectCodecFactory/SnappyDecompressor/SnappyDecompressor()
org/apache/parquet/hadoop/DirectCodecFactory/createDecompressor(org.apache.parquet.hadoop.metadata.CompressionCodecName)#org/apache/parquet/hadoop/DirectCodecFactory/NoopDecompressor/NoopDecompressor()
org/apache/parquet/avro/TestCircularReferences/ReferenceManager/ReferenceableTracker/fromRecord(org.apache.parquet.avro.IndexedRecord,org.apache.parquet.pig.Schema,org.apache.parquet.avro.LogicalType)#org/apache/parquet/avro/TestCircularReferences/ReferenceManager/Callback/set(java.lang.Object)
org/apache/parquet/avro/TestCircularReferences/ReferenceManager/ReferenceableTracker/fromRecord(org.apache.parquet.avro.IndexedRecord,org.apache.parquet.pig.Schema,org.apache.parquet.avro.LogicalType)#java/util/Map/get(java.lang.Object)
org/apache/parquet/avro/TestCircularReferences/ReferenceManager/ReferenceableTracker/fromRecord(org.apache.parquet.avro.IndexedRecord,org.apache.parquet.pig.Schema,org.apache.parquet.avro.LogicalType)#org/apache/parquet/avro/TestCircularReferences/ReferenceManager/ReferenceableTracker/getId(org.apache.parquet.avro.IndexedRecord,org.apache.parquet.pig.Schema)
org/apache/parquet/avro/TestCircularReferences/ReferenceManager/ReferenceableTracker/fromRecord(org.apache.parquet.avro.IndexedRecord,org.apache.parquet.pig.Schema,org.apache.parquet.avro.LogicalType)#java/util/Map/put(K,V)
org/apache/parquet/avro/TestCircularReferences/ReferenceManager/ReferenceableTracker/getId(org.apache.parquet.avro.IndexedRecord,org.apache.parquet.pig.Schema)#org/apache/parquet/avro/TestCircularReferences/Referenceable/getIdFieldName()
org/apache/parquet/avro/TestCircularReferences/ReferenceManager/ReferenceableTracker/toRecord(org.apache.parquet.avro.IndexedRecord,org.apache.parquet.pig.Schema,org.apache.parquet.avro.LogicalType)#org/apache/parquet/avro/TestCircularReferences/ReferenceManager/ReferenceableTracker/getId(org.apache.parquet.avro.IndexedRecord,org.apache.parquet.pig.Schema)
org/apache/parquet/avro/TestCircularReferences/ReferenceManager/ReferenceableTracker/toRecord(org.apache.parquet.avro.IndexedRecord,org.apache.parquet.pig.Schema,org.apache.parquet.avro.LogicalType)#java/util/Map/put(K,V)
org/apache/parquet/encoding/bitpacking/ByteBasedBitPackingGenerator/generateScheme(boolean,boolean,java.lang.String)#java/io/Writer/append(java.lang.CharSequence)
org/apache/parquet/encoding/bitpacking/ByteBasedBitPackingGenerator/generateScheme(boolean,boolean,java.lang.String)#java/io/File/getAbsoluteFile()
org/apache/parquet/encoding/bitpacking/ByteBasedBitPackingGenerator/generateScheme(boolean,boolean,java.lang.String)#java/io/File/exists()
org/apache/parquet/encoding/bitpacking/ByteBasedBitPackingGenerator/generateScheme(boolean,boolean,java.lang.String)#java/io/File/File(java.lang.String)
org/apache/parquet/encoding/bitpacking/ByteBasedBitPackingGenerator/generateScheme(boolean,boolean,java.lang.String)#java/io/OutputStreamWriter/close()
org/apache/parquet/encoding/bitpacking/ByteBasedBitPackingGenerator/generateScheme(boolean,boolean,java.lang.String)#java/io/File/mkdirs()
org/apache/parquet/encoding/bitpacking/ByteBasedBitPackingGenerator/generateScheme(boolean,boolean,java.lang.String)#java/io/File/getParentFile()
org/apache/parquet/encoding/bitpacking/ByteBasedBitPackingGenerator/generateScheme(boolean,boolean,java.lang.String)#org/apache/parquet/encoding/bitpacking/ByteBasedBitPackingGenerator/generateClass(java.io.FileWriter,int,boolean,boolean)
org/apache/parquet/encoding/bitpacking/ByteBasedBitPackingGenerator/generateScheme(boolean,boolean,java.lang.String)#java/io/FileWriter/FileWriter(java.io.File)
org/apache/parquet/encoding/bitpacking/ByteBasedBitPackingGenerator/visualizeAlignment(java.io.FileWriter,int,int,int,int,int,int,int)#java/lang/Math/max(int,int)
org/apache/parquet/encoding/bitpacking/ByteBasedBitPackingGenerator/visualizeAlignment(java.io.FileWriter,int,int,int,int,int,int,int)#java/io/Writer/append(java.lang.CharSequence)
org/apache/parquet/encoding/bitpacking/ByteBasedBitPackingGenerator/visualizeAlignment(java.io.FileWriter,int,int,int,int,int,int,int)#java/lang/String/valueOf(int)
org/apache/parquet/encoding/bitpacking/ByteBasedBitPackingGenerator/main(java.lang.String[])#org/apache/parquet/encoding/bitpacking/ByteBasedBitPackingGenerator/generateScheme(boolean,boolean,java.lang.String)
org/apache/parquet/encoding/bitpacking/ByteBasedBitPackingGenerator/align(int,int)#java/lang/StringBuilder/append(java.lang.String)
org/apache/parquet/encoding/bitpacking/ByteBasedBitPackingGenerator/align(int,int)#java/lang/String/length()
org/apache/parquet/encoding/bitpacking/ByteBasedBitPackingGenerator/align(int,int)#java/lang/StringBuilder/StringBuilder()
org/apache/parquet/encoding/bitpacking/ByteBasedBitPackingGenerator/align(int,int)#java/lang/StringBuilder/toString()
org/apache/parquet/encoding/bitpacking/ByteBasedBitPackingGenerator/align(int,int)#java/lang/String/valueOf(int)
org/apache/parquet/encoding/bitpacking/ByteBasedBitPackingGenerator/getShift(java.io.FileWriter,int,boolean,boolean,int,int)#org/apache/parquet/encoding/bitpacking/ByteBasedBitPackingGenerator/visualizeAlignment(java.io.FileWriter,int,int,int,int,int,int,int)
org/apache/parquet/encoding/bitpacking/ByteBasedBitPackingGenerator/getShift(java.io.FileWriter,int,boolean,boolean,int,int)#java/lang/Math/max(int,int)
org/apache/parquet/encoding/bitpacking/ByteBasedBitPackingGenerator/getShift(java.io.FileWriter,int,boolean,boolean,int,int)#java/lang/Math/min(int,int)
org/apache/parquet/encoding/bitpacking/ByteBasedBitPackingGenerator/getShift(java.io.FileWriter,int,boolean,boolean,int,int)#org/apache/parquet/encoding/bitpacking/ByteBasedBitPackingGenerator/ShiftMask/ShiftMask(int,long)
org/apache/parquet/encoding/bitpacking/ByteBasedBitPackingGenerator/getShift(java.io.FileWriter,int,boolean,boolean,int,int)#org/apache/parquet/encoding/bitpacking/ByteBasedBitPackingGenerator/genMask(int,boolean)
org/apache/parquet/encoding/bitpacking/ByteBasedBitPackingGenerator/generatePack(java.io.FileWriter,int,int,boolean,boolean)#java/io/Writer/append(java.lang.CharSequence)
org/apache/parquet/encoding/bitpacking/ByteBasedBitPackingGenerator/generatePack(java.io.FileWriter,int,int,boolean,boolean)#org/apache/parquet/encoding/bitpacking/ByteBasedBitPackingGenerator/align(int,int)
org/apache/parquet/encoding/bitpacking/ByteBasedBitPackingGenerator/generatePack(java.io.FileWriter,int,int,boolean,boolean)#org/apache/parquet/encoding/bitpacking/ByteBasedBitPackingGenerator/getShift(java.io.FileWriter,int,boolean,boolean,int,int)
org/apache/parquet/encoding/bitpacking/ByteBasedBitPackingGenerator/generatePack(java.io.FileWriter,int,int,boolean,boolean)#org/apache/parquet/encoding/bitpacking/ByteBasedBitPackingGenerator/genMask(int,boolean)
org/apache/parquet/encoding/bitpacking/ByteBasedBitPackingGenerator/generateUnpack(java.io.FileWriter,int,int,boolean,boolean,boolean)#java/io/Writer/append(java.lang.CharSequence)
org/apache/parquet/encoding/bitpacking/ByteBasedBitPackingGenerator/generateUnpack(java.io.FileWriter,int,int,boolean,boolean,boolean)#org/apache/parquet/encoding/bitpacking/ByteBasedBitPackingGenerator/align(int,int)
org/apache/parquet/encoding/bitpacking/ByteBasedBitPackingGenerator/generateUnpack(java.io.FileWriter,int,int,boolean,boolean,boolean)#org/apache/parquet/encoding/bitpacking/ByteBasedBitPackingGenerator/paddedByteCountFromBits(int)
org/apache/parquet/encoding/bitpacking/ByteBasedBitPackingGenerator/generateUnpack(java.io.FileWriter,int,int,boolean,boolean,boolean)#org/apache/parquet/encoding/bitpacking/ByteBasedBitPackingGenerator/getShift(java.io.FileWriter,int,boolean,boolean,int,int)
org/apache/parquet/encoding/bitpacking/ByteBasedBitPackingGenerator/generateClass(java.io.FileWriter,int,boolean,boolean)#java/io/Writer/append(java.lang.CharSequence)
org/apache/parquet/encoding/bitpacking/ByteBasedBitPackingGenerator/generateClass(java.io.FileWriter,int,boolean,boolean)#org/apache/parquet/encoding/bitpacking/ByteBasedBitPackingGenerator/generateUnpack(java.io.FileWriter,int,int,boolean,boolean,boolean)
org/apache/parquet/encoding/bitpacking/ByteBasedBitPackingGenerator/generateClass(java.io.FileWriter,int,boolean,boolean)#org/apache/parquet/encoding/bitpacking/ByteBasedBitPackingGenerator/generatePack(java.io.FileWriter,int,int,boolean,boolean)
org/apache/parquet/schema/ConversionPatterns/stringKeyMapType(org.apache.parquet.schema.Type.Repetition,java.lang.String,java.lang.String,org.apache.parquet.schema.Type)#org/apache/parquet/schema/ConversionPatterns/mapType(org.apache.parquet.schema.Type.Repetition,java.lang.String,java.lang.String,org.apache.parquet.schema.Type,org.apache.parquet.schema.Type)
org/apache/parquet/schema/ConversionPatterns/stringKeyMapType(org.apache.parquet.schema.Type.Repetition,java.lang.String,java.lang.String,org.apache.parquet.schema.Type)#org/apache/parquet/schema/PrimitiveType/PrimitiveType(org.apache.parquet.schema.Type.Repetition,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,java.lang.String,org.apache.parquet.schema.OriginalType)
org/apache/parquet/schema/ConversionPatterns/mapType(org.apache.parquet.schema.Type.Repetition,java.lang.String,java.lang.String,org.apache.parquet.schema.Type,org.apache.parquet.schema.Type)#org/apache/parquet/schema/Type/getName()
org/apache/parquet/schema/ConversionPatterns/mapType(org.apache.parquet.schema.Type.Repetition,java.lang.String,java.lang.String,org.apache.parquet.schema.Type,org.apache.parquet.schema.Type)#org/apache/parquet/schema/GroupType/GroupType(org.apache.parquet.schema.Type.Repetition,java.lang.String,org.apache.parquet.schema.OriginalType,org.apache.parquet.schema.Type[])
org/apache/parquet/schema/ConversionPatterns/mapType(org.apache.parquet.schema.Type.Repetition,java.lang.String,java.lang.String,org.apache.parquet.schema.Type,org.apache.parquet.schema.Type)#java/lang/String/equals(java.lang.Object)
org/apache/parquet/schema/ConversionPatterns/mapType(org.apache.parquet.schema.Type.Repetition,java.lang.String,java.lang.String,org.apache.parquet.schema.Type,org.apache.parquet.schema.Type)#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/apache/parquet/schema/ConversionPatterns/mapType(org.apache.parquet.schema.Type.Repetition,java.lang.String,java.lang.String,org.apache.parquet.schema.Type,org.apache.parquet.schema.Type)#org/apache/parquet/schema/ConversionPatterns/listWrapper(org.apache.parquet.schema.Type.Repetition,java.lang.String,org.apache.parquet.schema.OriginalType,org.apache.parquet.schema.Type)
org/apache/parquet/schema/ConversionPatterns/listOfElements(org.apache.parquet.schema.Type.Repetition,java.lang.String,org.apache.parquet.schema.Type)#org/apache/parquet/schema/Type/getName()
org/apache/parquet/schema/ConversionPatterns/listOfElements(org.apache.parquet.schema.Type.Repetition,java.lang.String,org.apache.parquet.schema.Type)#org/apache/parquet/schema/GroupType/GroupType(org.apache.parquet.schema.Type.Repetition,java.lang.String,org.apache.parquet.schema.Type[])
org/apache/parquet/schema/ConversionPatterns/listOfElements(org.apache.parquet.schema.Type.Repetition,java.lang.String,org.apache.parquet.schema.Type)#org/apache/parquet/Preconditions/checkArgument(boolean,java.lang.String)
org/apache/parquet/schema/ConversionPatterns/listOfElements(org.apache.parquet.schema.Type.Repetition,java.lang.String,org.apache.parquet.schema.Type)#java/lang/String/equals(java.lang.Object)
org/apache/parquet/schema/ConversionPatterns/listOfElements(org.apache.parquet.schema.Type.Repetition,java.lang.String,org.apache.parquet.schema.Type)#org/apache/parquet/schema/ConversionPatterns/listWrapper(org.apache.parquet.schema.Type.Repetition,java.lang.String,org.apache.parquet.schema.OriginalType,org.apache.parquet.schema.Type)
org/apache/parquet/schema/ConversionPatterns/mapType(org.apache.parquet.schema.Type.Repetition,java.lang.String,org.apache.parquet.schema.Type,org.apache.parquet.schema.Type)#org/apache/parquet/schema/ConversionPatterns/mapType(org.apache.parquet.schema.Type.Repetition,java.lang.String,java.lang.String,org.apache.parquet.schema.Type,org.apache.parquet.schema.Type)
org/apache/parquet/schema/ConversionPatterns/stringKeyMapType(org.apache.parquet.schema.Type.Repetition,java.lang.String,org.apache.parquet.schema.Type)#org/apache/parquet/schema/ConversionPatterns/stringKeyMapType(org.apache.parquet.schema.Type.Repetition,java.lang.String,java.lang.String,org.apache.parquet.schema.Type)
org/apache/parquet/schema/ConversionPatterns/listWrapper(org.apache.parquet.schema.Type.Repetition,java.lang.String,org.apache.parquet.schema.OriginalType,org.apache.parquet.schema.Type)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/parquet/schema/ConversionPatterns/listWrapper(org.apache.parquet.schema.Type.Repetition,java.lang.String,org.apache.parquet.schema.OriginalType,org.apache.parquet.schema.Type)#org/apache/parquet/schema/Type/isRepetition(org.apache.parquet.schema.Type.Repetition)
org/apache/parquet/schema/ConversionPatterns/listWrapper(org.apache.parquet.schema.Type.Repetition,java.lang.String,org.apache.parquet.schema.OriginalType,org.apache.parquet.schema.Type)#org/apache/parquet/schema/GroupType/GroupType(org.apache.parquet.schema.Type.Repetition,java.lang.String,org.apache.parquet.schema.OriginalType,org.apache.parquet.schema.Type[])
org/apache/parquet/schema/ConversionPatterns/listType(org.apache.parquet.schema.Type.Repetition,java.lang.String,org.apache.parquet.schema.Type)#org/apache/parquet/schema/ConversionPatterns/listWrapper(org.apache.parquet.schema.Type.Repetition,java.lang.String,org.apache.parquet.schema.OriginalType,org.apache.parquet.schema.Type)
org/apache/parquet/bytes/BytesInput/fromZigZagVarInt(int)#org/apache/parquet/bytes/BytesInput/UnsignedVarIntBytesInput/UnsignedVarIntBytesInput(int)
org/apache/parquet/bytes/BytesInput/copy(org.apache.parquet.bytes.BytesInput)#org/apache/parquet/bytes/BytesInput/from(byte[])
org/apache/parquet/bytes/BytesInput/copy(org.apache.parquet.bytes.BytesInput)#org/apache/parquet/bytes/BytesInput/toByteArray()
org/apache/parquet/bytes/BytesInput/from(byte[],int,int)#org/apache/parquet/bytes/BytesInput/ByteArrayBytesInput/ByteArrayBytesInput(byte[],int,int)
org/apache/parquet/bytes/BytesInput/toInputStream()#org/apache/parquet/bytes/ByteBufferInputStream/ByteBufferInputStream(java.nio.ByteBuffer)
org/apache/parquet/bytes/BytesInput/toInputStream()#org/apache/parquet/bytes/BytesInput/toByteBuffer()
org/apache/parquet/bytes/BytesInput/toByteArray()#org/apache/parquet/bytes/BytesInput/BAOS/getBuf()
org/apache/parquet/bytes/BytesInput/toByteArray()#org/apache/parquet/bytes/BytesInput/BAOS/BAOS(int)
org/apache/parquet/bytes/BytesInput/toByteArray()#java/io/ByteArrayOutputStream/size()
org/apache/parquet/bytes/BytesInput/toByteArray()#org/apache/parquet/bytes/BytesInput/writeAllTo(java.io.OutputStream)
org/apache/parquet/bytes/BytesInput/toByteArray()#org/apache/parquet/bytes/BytesInput/size()
org/apache/parquet/bytes/BytesInput/concat(org.apache.parquet.bytes.BytesInput[])#java/util/Arrays/asList(T[])
org/apache/parquet/bytes/BytesInput/concat(org.apache.parquet.bytes.BytesInput[])#org/apache/parquet/bytes/BytesInput/SequenceBytesIn/SequenceBytesIn(java.util.List)
org/apache/parquet/bytes/BytesInput/fromUnsignedVarLong(long)#org/apache/parquet/bytes/BytesInput/UnsignedVarLongBytesInput/UnsignedVarLongBytesInput(long)
org/apache/parquet/bytes/BytesInput/concat(java.util.List)#org/apache/parquet/bytes/BytesInput/SequenceBytesIn/SequenceBytesIn(java.util.List)
org/apache/parquet/bytes/BytesInput/from(java.io.ByteArrayOutputStream)#org/apache/parquet/bytes/BytesInput/BAOSBytesInput/BAOSBytesInput(java.io.ByteArrayOutputStream)
org/apache/parquet/bytes/BytesInput/fromInt(int)#org/apache/parquet/bytes/BytesInput/IntBytesInput/IntBytesInput(int)
org/apache/parquet/bytes/BytesInput/from(java.nio.ByteBuffer,int,int)#org/apache/parquet/bytes/BytesInput/ByteBufferBytesInput/ByteBufferBytesInput(java.nio.ByteBuffer,int,int)
org/apache/parquet/bytes/BytesInput/from(byte[])#org/apache/parquet/bytes/BytesInput/ByteArrayBytesInput/ByteArrayBytesInput(byte[],int,int)
org/apache/parquet/bytes/BytesInput/fromZigZagVarLong(long)#org/apache/parquet/bytes/BytesInput/UnsignedVarLongBytesInput/UnsignedVarLongBytesInput(long)
org/apache/parquet/bytes/BytesInput/from(java.io.InputStream,int)#org/apache/parquet/bytes/BytesInput/StreamBytesInput/StreamBytesInput(java.io.InputStream,int)
org/apache/parquet/bytes/BytesInput/toByteBuffer()#org/apache/parquet/bytes/BytesInput/toByteArray()
org/apache/parquet/bytes/BytesInput/toByteBuffer()#java/nio/ByteBuffer/wrap(byte[])
org/apache/parquet/bytes/BytesInput/from(org.apache.parquet.bytes.CapacityByteArrayOutputStream)#org/apache/parquet/bytes/BytesInput/CapacityBAOSBytesInput/CapacityBAOSBytesInput(org.apache.parquet.bytes.CapacityByteArrayOutputStream)
org/apache/parquet/bytes/BytesInput/fromUnsignedVarInt(int)#org/apache/parquet/bytes/BytesInput/UnsignedVarIntBytesInput/UnsignedVarIntBytesInput(int)
org/apache/parquet/filter2/compat/TestRowGroupFilter/testApplyRowGroupFilters()#org/apache/parquet/column/statistics/Statistics/setNumNulls(long)
org/apache/parquet/filter2/compat/TestRowGroupFilter/testApplyRowGroupFilters()#java/util/ArrayList/ArrayList()
org/apache/parquet/filter2/compat/TestRowGroupFilter/testApplyRowGroupFilters()#org/apache/parquet/hadoop/TestInputFormat/makeBlockFromStats(org.apache.parquet.column.statistics.IntStatistics,long)
org/apache/parquet/filter2/compat/TestRowGroupFilter/testApplyRowGroupFilters()#org/apache/parquet/filter2/predicate/FilterApi/eq(C,T)
org/apache/parquet/filter2/compat/TestRowGroupFilter/testApplyRowGroupFilters()#org/apache/parquet/filter2/predicate/FilterApi/notEq(C,T)
org/apache/parquet/filter2/compat/TestRowGroupFilter/testApplyRowGroupFilters()#org/apache/parquet/column/statistics/IntStatistics/IntStatistics()
org/apache/parquet/filter2/compat/TestRowGroupFilter/testApplyRowGroupFilters()#java/util/List/add(E)
org/apache/parquet/filter2/compat/TestRowGroupFilter/testApplyRowGroupFilters()#org/apache/parquet/filter2/compat/FilterCompat/get(org.apache.parquet.filter2.predicate.FilterPredicate)
org/apache/parquet/filter2/compat/TestRowGroupFilter/testApplyRowGroupFilters()#org/apache/parquet/filter2/compat/RowGroupFilter/filterRowGroups(org.apache.parquet.filter2.compat.FilterCompat.Filter,java.util.List,org.apache.parquet.schema.MessageType)
org/apache/parquet/filter2/compat/TestRowGroupFilter/testApplyRowGroupFilters()#org/apache/parquet/column/statistics/IntStatistics/setMinMax(int,int)
org/apache/parquet/filter2/compat/TestRowGroupFilter/testApplyRowGroupFilters()#org/apache/parquet/schema/MessageTypeParser/parseMessageType(java.lang.String)
org/apache/parquet/filter2/compat/TestRowGroupFilter/testApplyRowGroupFilters()#java/util/Arrays/asList(T[])
org/apache/parquet/filter2/compat/TestRowGroupFilter/testApplyRowGroupFilters()#org/apache/parquet/filter2/predicate/FilterApi/intColumn(java.lang.String)
org/apache/parquet/statistics/RandomValues/RandomValueGenerator/shouldGenerateNull()#java/util/Random/nextInt(int)
org/apache/parquet/statistics/RandomValues/RandomValueGenerator/randomInt()#org/apache/parquet/statistics/RandomValues/RandomValueGenerator/randomInt(int)
org/apache/parquet/statistics/RandomValues/RandomValueGenerator/randomFloat(float)#java/util/Random/nextFloat()
org/apache/parquet/statistics/RandomValues/RandomValueGenerator/randomInt96(java.math.BigInteger)#org/apache/parquet/statistics/RandomValues/RandomValueGenerator/randomInt96()
org/apache/parquet/statistics/RandomValues/RandomValueGenerator/randomInt96(java.math.BigInteger)#java/math/BigInteger/compareTo(java.math.BigInteger)
org/apache/parquet/statistics/RandomValues/RandomValueGenerator/randomLong()#java/util/Random/nextLong()
org/apache/parquet/statistics/RandomValues/RandomValueGenerator/randomFloat()#java/util/Random/nextFloat()
org/apache/parquet/statistics/RandomValues/RandomValueGenerator/randomDouble()#java/util/Random/nextDouble()
org/apache/parquet/statistics/RandomValues/RandomValueGenerator/randomInt96()#java/math/BigInteger/BigInteger(int,java.util.Random)
org/apache/parquet/statistics/RandomValues/RandomValueGenerator/randomInt(int)#java/util/Random/nextInt(int)
org/apache/parquet/statistics/RandomValues/RandomValueGenerator/randomInt(int)#java/lang/Math/abs(int)
org/apache/parquet/statistics/RandomValues/RandomValueGenerator/randomFixedLengthString(int)#java/lang/StringBuilder/StringBuilder()
org/apache/parquet/statistics/RandomValues/RandomValueGenerator/randomFixedLengthString(int)#java/lang/StringBuilder/append(char)
org/apache/parquet/statistics/RandomValues/RandomValueGenerator/randomFixedLengthString(int)#org/apache/parquet/statistics/RandomValues/RandomValueGenerator/randomLetter()
org/apache/parquet/statistics/RandomValues/RandomValueGenerator/randomFixedLengthString(int)#java/lang/StringBuilder/toString()
org/apache/parquet/statistics/RandomValues/RandomValueGenerator/randomString(int)#org/apache/parquet/statistics/RandomValues/RandomValueGenerator/randomInt(int)
org/apache/parquet/statistics/RandomValues/RandomValueGenerator/randomString(int)#org/apache/parquet/statistics/RandomValues/RandomValueGenerator/randomFixedLengthString(int)
org/apache/parquet/statistics/RandomValues/RandomValueGenerator/randomLong(long)#org/apache/parquet/statistics/RandomValues/RandomValueGenerator/randomLong()
org/apache/parquet/statistics/RandomValues/RandomValueGenerator/randomDouble(double)#java/util/Random/nextDouble()
org/apache/parquet/statistics/RandomValues/RandomValueGenerator/randomLetter()#java/lang/String/charAt(int)
org/apache/parquet/statistics/RandomValues/RandomValueGenerator/randomLetter()#java/lang/String/length()
org/apache/parquet/statistics/RandomValues/RandomValueGenerator/randomLetter()#org/apache/parquet/statistics/RandomValues/RandomValueGenerator/randomInt()
org/apache/parquet/column/values/dictionary/DictionaryValuesWriter/PlainDoubleDictionaryValuesWriter/writeDouble(double)#org/apache/parquet/column/values/dictionary/IntList/add(int)
org/apache/parquet/column/values/dictionary/DictionaryValuesWriter/PlainDoubleDictionaryValuesWriter/fallBackDictionaryEncodedData(org.apache.parquet.column.values.ValuesWriter)#org/apache/parquet/column/values/dictionary/IntList/IntIterator/hasNext()
org/apache/parquet/column/values/dictionary/DictionaryValuesWriter/PlainDoubleDictionaryValuesWriter/fallBackDictionaryEncodedData(org.apache.parquet.column.values.ValuesWriter)#org/apache/parquet/column/values/ValuesWriter/writeDouble(double)
org/apache/parquet/column/values/dictionary/DictionaryValuesWriter/PlainDoubleDictionaryValuesWriter/fallBackDictionaryEncodedData(org.apache.parquet.column.values.ValuesWriter)#org/apache/parquet/column/values/dictionary/DictionaryValuesWriter/PlainDoubleDictionaryValuesWriter/getDictionarySize()
org/apache/parquet/column/values/dictionary/DictionaryValuesWriter/PlainDoubleDictionaryValuesWriter/fallBackDictionaryEncodedData(org.apache.parquet.column.values.ValuesWriter)#org/apache/parquet/column/values/dictionary/IntList/IntIterator/next()
org/apache/parquet/column/values/dictionary/DictionaryValuesWriter/PlainDoubleDictionaryValuesWriter/fallBackDictionaryEncodedData(org.apache.parquet.column.values.ValuesWriter)#org/apache/parquet/column/values/dictionary/IntList/iterator()
org/apache/parquet/column/values/dictionary/DictionaryValuesWriter/PlainDoubleDictionaryValuesWriter/toDictPageAndClose()#org/apache/parquet/column/values/plain/PlainValuesWriter/writeDouble(double)
org/apache/parquet/column/values/dictionary/DictionaryValuesWriter/PlainDoubleDictionaryValuesWriter/toDictPageAndClose()#org/apache/parquet/column/values/dictionary/DictionaryValuesWriter/dictPage(org.apache.parquet.column.values.ValuesWriter)
org/apache/parquet/column/values/dictionary/DictionaryValuesWriter/PlainDoubleDictionaryValuesWriter/toDictPageAndClose()#org/apache/parquet/column/values/plain/PlainValuesWriter/PlainValuesWriter(int,int,org.apache.parquet.bytes.ByteBufferAllocator)
org/apache/parquet/hadoop/DeprecatedOutputFormatTest/testReadWrite()#org/apache/parquet/hadoop/DeprecatedOutputFormatTest/runMapReduceJob(org.apache.parquet.hadoop.metadata.CompressionCodecName)
org/apache/parquet/hadoop/DeprecatedOutputFormatTest/runMapReduceJob(org.apache.parquet.hadoop.metadata.CompressionCodecName)#org/apache/parquet/schema/MessageTypeParser/parseMessageType(java.lang.String)
org/apache/parquet/hadoop/DeprecatedOutputFormatTest/runMapReduceJob(org.apache.parquet.hadoop.metadata.CompressionCodecName)#org/apache/parquet/hadoop/example/GroupWriteSupport/setSchema(org.apache.parquet.schema.MessageType,org.apache.parquet.hadoop.Configuration)
org/apache/parquet/hadoop/DeprecatedOutputFormatTest/runMapReduceJob(org.apache.parquet.hadoop.metadata.CompressionCodecName)#org/apache/parquet/hadoop/mapred/DeprecatedParquetOutputFormat/setWriteSupportClass(org.apache.parquet.hadoop.Configuration,java.lang.Class)
org/apache/parquet/hadoop/DeprecatedOutputFormatTest/runMapReduceJob(org.apache.parquet.hadoop.metadata.CompressionCodecName)#org/apache/parquet/hadoop/mapred/DeprecatedParquetOutputFormat/setCompression(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.metadata.CompressionCodecName)
org/apache/parquet/bytes/BytesInput/SequenceBytesIn/writeAllTo(java.io.OutputStream)#org/apache/parquet/bytes/BytesInput/writeAllTo(java.io.OutputStream)
org/apache/parquet/bytes/BytesInput/SequenceBytesIn/writeAllTo(java.io.OutputStream)#org/apache/parquet/bytes/BytesInput/size()
org/apache/parquet/avro/AvroParquetWriter/Builder/getWriteSupport(org.apache.parquet.hadoop.Configuration)#org/apache/parquet/avro/AvroParquetWriter/writeSupport(org.apache.parquet.hadoop.Configuration,org.apache.parquet.pig.Schema,org.apache.parquet.avro.GenericData)
org/apache/parquet/cascading/convert/TupleConverter/TuplePrimitiveConverter/addInt(int)#org/apache/parquet/cascading/convert/TupleConverter/getCurrentTuple()
org/apache/parquet/cascading/convert/TupleConverter/TuplePrimitiveConverter/addBinary(org.apache.parquet.io.api.Binary)#org/apache/parquet/io/api/Binary/toStringUsingUTF8()
org/apache/parquet/cascading/convert/TupleConverter/TuplePrimitiveConverter/addBinary(org.apache.parquet.io.api.Binary)#org/apache/parquet/cascading/convert/TupleConverter/getCurrentTuple()
org/apache/parquet/cascading/convert/TupleConverter/TuplePrimitiveConverter/addFloat(float)#org/apache/parquet/cascading/convert/TupleConverter/getCurrentTuple()
org/apache/parquet/cascading/convert/TupleConverter/TuplePrimitiveConverter/addLong(long)#org/apache/parquet/cascading/convert/TupleConverter/getCurrentTuple()
org/apache/parquet/cascading/convert/TupleConverter/TuplePrimitiveConverter/addBoolean(boolean)#org/apache/parquet/cascading/convert/TupleConverter/getCurrentTuple()
org/apache/parquet/cascading/convert/TupleConverter/TuplePrimitiveConverter/addDouble(double)#org/apache/parquet/cascading/convert/TupleConverter/getCurrentTuple()
org/apache/parquet/Ints/checkedCast(long)#java/lang/String/format(java.lang.String,java.lang.Object[])
org/apache/parquet/Ints/checkedCast(long)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/parquet/example/data/simple/convert/SimplePrimitiveConverter/addInt(int)#org/apache/parquet/example/data/simple/convert/SimpleGroupConverter/getCurrentRecord()
org/apache/parquet/example/data/simple/convert/SimplePrimitiveConverter/addInt(int)#org/apache/parquet/example/data/Group/add(int,int)
org/apache/parquet/example/data/simple/convert/SimplePrimitiveConverter/addBinary(org.apache.parquet.io.api.Binary)#org/apache/parquet/example/data/simple/convert/SimpleGroupConverter/getCurrentRecord()
org/apache/parquet/example/data/simple/convert/SimplePrimitiveConverter/addBinary(org.apache.parquet.io.api.Binary)#org/apache/parquet/example/data/Group/add(int,org.apache.parquet.io.api.Binary)
org/apache/parquet/example/data/simple/convert/SimplePrimitiveConverter/addFloat(float)#org/apache/parquet/example/data/simple/convert/SimpleGroupConverter/getCurrentRecord()
org/apache/parquet/example/data/simple/convert/SimplePrimitiveConverter/addFloat(float)#org/apache/parquet/example/data/Group/add(int,float)
org/apache/parquet/example/data/simple/convert/SimplePrimitiveConverter/addLong(long)#org/apache/parquet/example/data/simple/convert/SimpleGroupConverter/getCurrentRecord()
org/apache/parquet/example/data/simple/convert/SimplePrimitiveConverter/addLong(long)#org/apache/parquet/example/data/Group/add(int,long)
org/apache/parquet/example/data/simple/convert/SimplePrimitiveConverter/addBoolean(boolean)#org/apache/parquet/example/data/simple/convert/SimpleGroupConverter/getCurrentRecord()
org/apache/parquet/example/data/simple/convert/SimplePrimitiveConverter/addBoolean(boolean)#org/apache/parquet/example/data/Group/add(int,boolean)
org/apache/parquet/example/data/simple/convert/SimplePrimitiveConverter/addDouble(double)#org/apache/parquet/example/data/simple/convert/SimpleGroupConverter/getCurrentRecord()
org/apache/parquet/example/data/simple/convert/SimplePrimitiveConverter/addDouble(double)#org/apache/parquet/example/data/Group/add(int,double)
org/apache/parquet/column/values/bitpacking/ByteBitPackingValuesReader/readInteger()#java/nio/ByteBuffer/get(byte[],int,int)
org/apache/parquet/column/values/bitpacking/ByteBitPackingValuesReader/readInteger()#java/nio/Buffer/position(int)
org/apache/parquet/column/values/bitpacking/ByteBitPackingValuesReader/readInteger()#java/nio/Buffer/limit()
org/apache/parquet/column/values/bitpacking/ByteBitPackingValuesReader/readInteger()#org/apache/parquet/column/values/bitpacking/BytePacker/unpack8Values(byte[],int,int[],int)
org/apache/parquet/column/values/bitpacking/ByteBitPackingValuesReader/readInteger()#org/apache/parquet/column/values/bitpacking/BytePacker/unpack8Values(java.nio.ByteBuffer,int,int[],int)
org/apache/parquet/column/values/bitpacking/ByteBitPackingValuesReader/initFromPage(int,java.nio.ByteBuffer,int)#org/apache/parquet/bytes/BytesUtils/paddedByteCountFromBits(int)
org/apache/parquet/column/values/bitpacking/ByteBitPackingValuesReader/skip()#org/apache/parquet/column/values/bitpacking/ByteBitPackingValuesReader/readInteger()
org/apache/parquet/thrift/ThriftRecordConverter/FieldPrimitiveConverter/addInt(int)#java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)
org/apache/parquet/thrift/ThriftRecordConverter/FieldPrimitiveConverter/addInt(int)#org/apache/parquet/thrift/ThriftRecordConverter/FieldPrimitiveConverter/addInt(int)/$anonymous3/(java.lang.String)
org/apache/parquet/thrift/ThriftRecordConverter/FieldPrimitiveConverter/addInt(int)#org/apache/parquet/thrift/ThriftRecordConverter/FieldPrimitiveConverter/addInt(int)/$anonymous2/(java.lang.String)
org/apache/parquet/thrift/ThriftRecordConverter/FieldPrimitiveConverter/addInt(int)#org/apache/parquet/thrift/ThriftRecordConverter/FieldPrimitiveConverter/addInt(int)/$anonymous1/(java.lang.String)
org/apache/parquet/thrift/ThriftRecordConverter/FieldPrimitiveConverter/addFloat(float)#org/apache/parquet/thrift/ThriftRecordConverter/FieldPrimitiveConverter/addFloat(float)/$anonymous1/(java.lang.String)
org/apache/parquet/thrift/ThriftRecordConverter/FieldPrimitiveConverter/addLong(long)#org/apache/parquet/thrift/ThriftRecordConverter/FieldPrimitiveConverter/addLong(long)/$anonymous1/(java.lang.String)
org/apache/parquet/thrift/ThriftRecordConverter/FieldPrimitiveConverter/addBoolean(boolean)#org/apache/parquet/thrift/ThriftRecordConverter/FieldPrimitiveConverter/addBoolean(boolean)/$anonymous1/(java.lang.String)
org/apache/parquet/thrift/ThriftRecordConverter/FieldPrimitiveConverter/addDouble(double)#org/apache/parquet/thrift/ThriftRecordConverter/FieldPrimitiveConverter/addDouble(double)/$anonymous1/(java.lang.String)
org/apache/parquet/format/converter/ParquetMetadataConverter/NoFilter/accept(org.apache.parquet.format.converter.ParquetMetadataConverter.MetadataFilterVisitor)#org/apache/parquet/format/converter/ParquetMetadataConverter/MetadataFilterVisitor/visit(org.apache.parquet.format.converter.ParquetMetadataConverter.NoFilter)
org/apache/parquet/bytes/BytesInput/UnsignedVarIntBytesInput/writeAllTo(java.io.OutputStream)#org/apache/parquet/bytes/BytesUtils/writeUnsignedVarInt(int,java.io.OutputStream)
org/apache/parquet/bytes/BytesInput/UnsignedVarIntBytesInput/size()#java/lang/Integer/numberOfLeadingZeros(int)
org/apache/parquet/bytes/BytesInput/UnsignedVarIntBytesInput/toByteBuffer()#java/nio/ByteBuffer/allocate(int)
org/apache/parquet/bytes/BytesInput/UnsignedVarIntBytesInput/toByteBuffer()#org/apache/parquet/bytes/BytesUtils/writeUnsignedVarInt(int,java.nio.ByteBuffer)
org/apache/parquet/bytes/BytesInput/UnsignedVarIntBytesInput/toByteBuffer()#org/apache/parquet/bytes/BytesInput/UnsignedVarIntBytesInput/size()
org/apache/parquet/filter2/predicate/Operators/BinaryLogicalFilterPredicate/hashCode()#java/lang/Object/hashCode()
org/apache/parquet/filter2/predicate/Operators/BinaryLogicalFilterPredicate/hashCode()#java/lang/Object/getClass()
org/apache/parquet/filter2/predicate/Operators/BinaryLogicalFilterPredicate/equals(java.lang.Object)#java/lang/Object/equals(java.lang.Object)
org/apache/parquet/filter2/predicate/Operators/BinaryLogicalFilterPredicate/equals(java.lang.Object)#java/lang/Object/getClass()
org/apache/parquet/schema/Type/asPrimitiveType()#java/lang/ClassCastException/ClassCastException(java.lang.String)
org/apache/parquet/schema/Type/asPrimitiveType()#org/apache/parquet/schema/Type/isPrimitive()
org/apache/parquet/schema/Type/checkContains(org.apache.parquet.schema.Type)#java/lang/String/equals(java.lang.Object)
org/apache/parquet/schema/Type/checkContains(org.apache.parquet.schema.Type)#org/apache/parquet/io/InvalidRecordException/InvalidRecordException(java.lang.String)
org/apache/parquet/schema/Type/equals(org.apache.parquet.schema.Type)#org/apache/parquet/schema/Type/eqOrBothNull(java.lang.Object,java.lang.Object)
org/apache/parquet/schema/Type/equals(org.apache.parquet.schema.Type)#java/lang/String/equals(java.lang.Object)
org/apache/parquet/schema/Type/equals(java.lang.Object)#org/apache/parquet/schema/Type/equals(org.apache.parquet.schema.Type)
org/apache/parquet/schema/Type/toString()#org/apache/parquet/schema/Type/writeToStringBuilder(java.lang.StringBuilder,java.lang.String)
org/apache/parquet/schema/Type/toString()#java/lang/StringBuilder/StringBuilder()
org/apache/parquet/schema/Type/toString()#java/lang/StringBuilder/toString()
org/apache/parquet/schema/Type/asGroupType()#java/lang/ClassCastException/ClassCastException(java.lang.String)
org/apache/parquet/schema/Type/asGroupType()#org/apache/parquet/schema/Type/isPrimitive()
org/apache/parquet/schema/Type/hashCode()#java/lang/String/hashCode()
org/apache/parquet/schema/Type/hashCode()#org/apache/parquet/schema/Type/ID/hashCode()
org/apache/parquet/schema/Type/hashCode()#java/lang/Enum/hashCode()
org/apache/parquet/schema/Type/eqOrBothNull(java.lang.Object,java.lang.Object)#java/lang/Object/equals(java.lang.Object)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilter/expandDictionary(org.apache.parquet.hadoop.metadata.ColumnChunkMetaData)#org/apache/parquet/column/Dictionary/decodeToBinary(int)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilter/expandDictionary(org.apache.parquet.hadoop.metadata.ColumnChunkMetaData)#org/apache/parquet/column/ColumnDescriptor/ColumnDescriptor(java.lang.String[],org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,int,int)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilter/expandDictionary(org.apache.parquet.hadoop.metadata.ColumnChunkMetaData)#org/apache/parquet/column/Dictionary/decodeToInt(int)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilter/expandDictionary(org.apache.parquet.hadoop.metadata.ColumnChunkMetaData)#org/apache/parquet/column/page/DictionaryPageReadStore/readDictionaryPage(org.apache.parquet.column.ColumnDescriptor)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilter/expandDictionary(org.apache.parquet.hadoop.metadata.ColumnChunkMetaData)#org/apache/parquet/hadoop/metadata/ColumnPath/toArray()
org/apache/parquet/filter2/dictionarylevel/DictionaryFilter/expandDictionary(org.apache.parquet.hadoop.metadata.ColumnChunkMetaData)#org/apache/parquet/column/Dictionary/decodeToDouble(int)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilter/expandDictionary(org.apache.parquet.hadoop.metadata.ColumnChunkMetaData)#java/util/Set/add(E)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilter/expandDictionary(org.apache.parquet.hadoop.metadata.ColumnChunkMetaData)#org/apache/parquet/column/page/DictionaryPage/getEncoding()
org/apache/parquet/filter2/dictionarylevel/DictionaryFilter/expandDictionary(org.apache.parquet.hadoop.metadata.ColumnChunkMetaData)#org/apache/parquet/column/Dictionary/getMaxId()
org/apache/parquet/filter2/dictionarylevel/DictionaryFilter/expandDictionary(org.apache.parquet.hadoop.metadata.ColumnChunkMetaData)#org/apache/parquet/column/Encoding/initDictionary(org.apache.parquet.column.ColumnDescriptor,org.apache.parquet.column.page.DictionaryPage)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilter/expandDictionary(org.apache.parquet.hadoop.metadata.ColumnChunkMetaData)#org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/getType()
org/apache/parquet/filter2/dictionarylevel/DictionaryFilter/expandDictionary(org.apache.parquet.hadoop.metadata.ColumnChunkMetaData)#org/apache/parquet/column/Dictionary/decodeToFloat(int)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilter/expandDictionary(org.apache.parquet.hadoop.metadata.ColumnChunkMetaData)#java/util/HashSet/HashSet()
org/apache/parquet/filter2/dictionarylevel/DictionaryFilter/expandDictionary(org.apache.parquet.hadoop.metadata.ColumnChunkMetaData)#org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/getPath()
org/apache/parquet/filter2/dictionarylevel/DictionaryFilter/expandDictionary(org.apache.parquet.hadoop.metadata.ColumnChunkMetaData)#org/apache/parquet/column/Dictionary/decodeToLong(int)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilter/visit(org.apache.parquet.filter2.predicate.Operators.GtEq)#org/apache/parquet/filter2/predicate/Operators/ColumnFilterPredicate/getColumn()
org/apache/parquet/filter2/dictionarylevel/DictionaryFilter/visit(org.apache.parquet.filter2.predicate.Operators.GtEq)#org/apache/parquet/filter2/dictionarylevel/DictionaryFilter/expandDictionary(org.apache.parquet.hadoop.metadata.ColumnChunkMetaData)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilter/visit(org.apache.parquet.filter2.predicate.Operators.GtEq)#org/apache/parquet/filter2/dictionarylevel/DictionaryFilter/getColumnChunk(org.apache.parquet.hadoop.metadata.ColumnPath)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilter/visit(org.apache.parquet.filter2.predicate.Operators.GtEq)#org/apache/parquet/filter2/predicate/Operators/Column/getColumnPath()
org/apache/parquet/filter2/dictionarylevel/DictionaryFilter/visit(org.apache.parquet.filter2.predicate.Operators.GtEq)#java/lang/Comparable/compareTo(T)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilter/visit(org.apache.parquet.filter2.predicate.Operators.GtEq)#org/apache/parquet/filter2/predicate/Operators/ColumnFilterPredicate/getValue()
org/apache/parquet/filter2/dictionarylevel/DictionaryFilter/visit(org.apache.parquet.filter2.predicate.Operators.GtEq)#org/apache/parquet/filter2/dictionarylevel/DictionaryFilter/hasNonDictionaryPages(org.apache.parquet.hadoop.metadata.ColumnChunkMetaData)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilter/visit(org.apache.parquet.filter2.predicate.Operators.NotEq)#org/apache/parquet/filter2/predicate/Operators/ColumnFilterPredicate/getColumn()
org/apache/parquet/filter2/dictionarylevel/DictionaryFilter/visit(org.apache.parquet.filter2.predicate.Operators.NotEq)#org/apache/parquet/filter2/dictionarylevel/DictionaryFilter/expandDictionary(org.apache.parquet.hadoop.metadata.ColumnChunkMetaData)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilter/visit(org.apache.parquet.filter2.predicate.Operators.NotEq)#java/util/Set/size()
org/apache/parquet/filter2/dictionarylevel/DictionaryFilter/visit(org.apache.parquet.filter2.predicate.Operators.NotEq)#org/apache/parquet/filter2/dictionarylevel/DictionaryFilter/getColumnChunk(org.apache.parquet.hadoop.metadata.ColumnPath)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilter/visit(org.apache.parquet.filter2.predicate.Operators.NotEq)#org/apache/parquet/filter2/predicate/Operators/Column/getColumnPath()
org/apache/parquet/filter2/dictionarylevel/DictionaryFilter/visit(org.apache.parquet.filter2.predicate.Operators.NotEq)#java/util/Set/contains(java.lang.Object)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilter/visit(org.apache.parquet.filter2.predicate.Operators.NotEq)#org/apache/parquet/filter2/predicate/Operators/ColumnFilterPredicate/getValue()
org/apache/parquet/filter2/dictionarylevel/DictionaryFilter/visit(org.apache.parquet.filter2.predicate.Operators.NotEq)#org/apache/parquet/filter2/dictionarylevel/DictionaryFilter/hasNonDictionaryPages(org.apache.parquet.hadoop.metadata.ColumnChunkMetaData)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilter/visit(org.apache.parquet.filter2.predicate.Operators.UserDefined)#java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilter/visit(org.apache.parquet.filter2.predicate.Operators.LtEq)#org/apache/parquet/filter2/predicate/Operators/ColumnFilterPredicate/getColumn()
org/apache/parquet/filter2/dictionarylevel/DictionaryFilter/visit(org.apache.parquet.filter2.predicate.Operators.LtEq)#org/apache/parquet/filter2/dictionarylevel/DictionaryFilter/expandDictionary(org.apache.parquet.hadoop.metadata.ColumnChunkMetaData)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilter/visit(org.apache.parquet.filter2.predicate.Operators.LtEq)#org/apache/parquet/filter2/dictionarylevel/DictionaryFilter/getColumnChunk(org.apache.parquet.hadoop.metadata.ColumnPath)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilter/visit(org.apache.parquet.filter2.predicate.Operators.LtEq)#org/apache/parquet/filter2/predicate/Operators/Column/getColumnPath()
org/apache/parquet/filter2/dictionarylevel/DictionaryFilter/visit(org.apache.parquet.filter2.predicate.Operators.LtEq)#java/lang/Comparable/compareTo(T)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilter/visit(org.apache.parquet.filter2.predicate.Operators.LtEq)#org/apache/parquet/filter2/predicate/Operators/ColumnFilterPredicate/getValue()
org/apache/parquet/filter2/dictionarylevel/DictionaryFilter/visit(org.apache.parquet.filter2.predicate.Operators.LtEq)#org/apache/parquet/filter2/dictionarylevel/DictionaryFilter/hasNonDictionaryPages(org.apache.parquet.hadoop.metadata.ColumnChunkMetaData)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilter/visit(org.apache.parquet.filter2.predicate.Operators.Gt)#org/apache/parquet/filter2/predicate/Operators/ColumnFilterPredicate/getColumn()
org/apache/parquet/filter2/dictionarylevel/DictionaryFilter/visit(org.apache.parquet.filter2.predicate.Operators.Gt)#org/apache/parquet/filter2/dictionarylevel/DictionaryFilter/expandDictionary(org.apache.parquet.hadoop.metadata.ColumnChunkMetaData)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilter/visit(org.apache.parquet.filter2.predicate.Operators.Gt)#org/apache/parquet/filter2/dictionarylevel/DictionaryFilter/getColumnChunk(org.apache.parquet.hadoop.metadata.ColumnPath)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilter/visit(org.apache.parquet.filter2.predicate.Operators.Gt)#org/apache/parquet/filter2/predicate/Operators/Column/getColumnPath()
org/apache/parquet/filter2/dictionarylevel/DictionaryFilter/visit(org.apache.parquet.filter2.predicate.Operators.Gt)#java/lang/Comparable/compareTo(T)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilter/visit(org.apache.parquet.filter2.predicate.Operators.Gt)#org/apache/parquet/filter2/predicate/Operators/ColumnFilterPredicate/getValue()
org/apache/parquet/filter2/dictionarylevel/DictionaryFilter/visit(org.apache.parquet.filter2.predicate.Operators.Gt)#org/apache/parquet/filter2/dictionarylevel/DictionaryFilter/hasNonDictionaryPages(org.apache.parquet.hadoop.metadata.ColumnChunkMetaData)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilter/visit(org.apache.parquet.filter2.predicate.Operators.Not)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilter/visit(org.apache.parquet.filter2.predicate.Operators.Lt)#org/apache/parquet/filter2/predicate/Operators/ColumnFilterPredicate/getColumn()
org/apache/parquet/filter2/dictionarylevel/DictionaryFilter/visit(org.apache.parquet.filter2.predicate.Operators.Lt)#org/apache/parquet/filter2/dictionarylevel/DictionaryFilter/expandDictionary(org.apache.parquet.hadoop.metadata.ColumnChunkMetaData)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilter/visit(org.apache.parquet.filter2.predicate.Operators.Lt)#org/apache/parquet/filter2/dictionarylevel/DictionaryFilter/getColumnChunk(org.apache.parquet.hadoop.metadata.ColumnPath)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilter/visit(org.apache.parquet.filter2.predicate.Operators.Lt)#org/apache/parquet/filter2/predicate/Operators/Column/getColumnPath()
org/apache/parquet/filter2/dictionarylevel/DictionaryFilter/visit(org.apache.parquet.filter2.predicate.Operators.Lt)#java/lang/Comparable/compareTo(T)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilter/visit(org.apache.parquet.filter2.predicate.Operators.Lt)#org/apache/parquet/filter2/predicate/Operators/ColumnFilterPredicate/getValue()
org/apache/parquet/filter2/dictionarylevel/DictionaryFilter/visit(org.apache.parquet.filter2.predicate.Operators.Lt)#org/apache/parquet/filter2/dictionarylevel/DictionaryFilter/hasNonDictionaryPages(org.apache.parquet.hadoop.metadata.ColumnChunkMetaData)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilter/visit(org.apache.parquet.filter2.predicate.Operators.Or)#org/apache/parquet/filter2/predicate/FilterPredicate/accept(org.apache.parquet.filter2.predicate.FilterPredicate.Visitor)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilter/visit(org.apache.parquet.filter2.predicate.Operators.Or)#org/apache/parquet/filter2/predicate/Operators/BinaryLogicalFilterPredicate/getRight()
org/apache/parquet/filter2/dictionarylevel/DictionaryFilter/visit(org.apache.parquet.filter2.predicate.Operators.Or)#org/apache/parquet/filter2/predicate/Operators/BinaryLogicalFilterPredicate/getLeft()
org/apache/parquet/filter2/dictionarylevel/DictionaryFilter/hasNonDictionaryPages(org.apache.parquet.hadoop.metadata.ColumnChunkMetaData)#org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/getEncodingStats()
org/apache/parquet/filter2/dictionarylevel/DictionaryFilter/hasNonDictionaryPages(org.apache.parquet.hadoop.metadata.ColumnChunkMetaData)#org/apache/parquet/column/EncodingStats/hasNonDictionaryEncodedPages()
org/apache/parquet/filter2/dictionarylevel/DictionaryFilter/hasNonDictionaryPages(org.apache.parquet.hadoop.metadata.ColumnChunkMetaData)#java/util/Set/isEmpty()
org/apache/parquet/filter2/dictionarylevel/DictionaryFilter/hasNonDictionaryPages(org.apache.parquet.hadoop.metadata.ColumnChunkMetaData)#org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/getEncodings()
org/apache/parquet/filter2/dictionarylevel/DictionaryFilter/hasNonDictionaryPages(org.apache.parquet.hadoop.metadata.ColumnChunkMetaData)#java/util/Set/remove(java.lang.Object)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilter/hasNonDictionaryPages(org.apache.parquet.hadoop.metadata.ColumnChunkMetaData)#java/util/HashSet/HashSet(java.util.Collection)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilter/canDrop(org.apache.parquet.filter2.predicate.FilterPredicate,java.util.List,org.apache.parquet.column.page.DictionaryPageReadStore)#org/apache/parquet/Preconditions/checkNotNull(T,java.lang.String)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilter/canDrop(org.apache.parquet.filter2.predicate.FilterPredicate,java.util.List,org.apache.parquet.column.page.DictionaryPageReadStore)#org/apache/parquet/filter2/predicate/FilterPredicate/accept(org.apache.parquet.filter2.predicate.FilterPredicate.Visitor)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilter/canDrop(org.apache.parquet.filter2.predicate.FilterPredicate,java.util.List,org.apache.parquet.column.page.DictionaryPageReadStore)#org/apache/parquet/filter2/dictionarylevel/DictionaryFilter/DictionaryFilter(java.util.List,org.apache.parquet.column.page.DictionaryPageReadStore)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilter/getColumnChunk(org.apache.parquet.hadoop.metadata.ColumnPath)#java/util/Map/get(java.lang.Object)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilter/visit(org.apache.parquet.filter2.predicate.Operators.And)#org/apache/parquet/filter2/predicate/FilterPredicate/accept(org.apache.parquet.filter2.predicate.FilterPredicate.Visitor)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilter/visit(org.apache.parquet.filter2.predicate.Operators.And)#org/apache/parquet/filter2/predicate/Operators/BinaryLogicalFilterPredicate/getRight()
org/apache/parquet/filter2/dictionarylevel/DictionaryFilter/visit(org.apache.parquet.filter2.predicate.Operators.And)#org/apache/parquet/filter2/predicate/Operators/BinaryLogicalFilterPredicate/getLeft()
org/apache/parquet/filter2/dictionarylevel/DictionaryFilter/visit(org.apache.parquet.filter2.predicate.Operators.Eq)#org/apache/parquet/filter2/predicate/Operators/ColumnFilterPredicate/getColumn()
org/apache/parquet/filter2/dictionarylevel/DictionaryFilter/visit(org.apache.parquet.filter2.predicate.Operators.Eq)#org/apache/parquet/filter2/dictionarylevel/DictionaryFilter/expandDictionary(org.apache.parquet.hadoop.metadata.ColumnChunkMetaData)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilter/visit(org.apache.parquet.filter2.predicate.Operators.Eq)#org/apache/parquet/filter2/dictionarylevel/DictionaryFilter/getColumnChunk(org.apache.parquet.hadoop.metadata.ColumnPath)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilter/visit(org.apache.parquet.filter2.predicate.Operators.Eq)#org/apache/parquet/filter2/predicate/Operators/Column/getColumnPath()
org/apache/parquet/filter2/dictionarylevel/DictionaryFilter/visit(org.apache.parquet.filter2.predicate.Operators.Eq)#java/util/Set/contains(java.lang.Object)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilter/visit(org.apache.parquet.filter2.predicate.Operators.Eq)#org/apache/parquet/filter2/predicate/Operators/ColumnFilterPredicate/getValue()
org/apache/parquet/filter2/dictionarylevel/DictionaryFilter/visit(org.apache.parquet.filter2.predicate.Operators.Eq)#org/apache/parquet/filter2/dictionarylevel/DictionaryFilter/hasNonDictionaryPages(org.apache.parquet.hadoop.metadata.ColumnChunkMetaData)
org/apache/parquet/filter2/dictionarylevel/DictionaryFilter/visit(org.apache.parquet.filter2.predicate.Operators.LogicalNotUserDefined)#java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)
org/apache/parquet/tools/util/PrettyPrintWriter/Span/isEmpty()#java/lang/String/isEmpty()
org/apache/parquet/tools/util/PrettyPrintWriter/Span/toString(java.lang.StringBuilder)#java/lang/StringBuilder/append(java.lang.String)
org/apache/parquet/tools/util/PrettyPrintWriter/Span/indexOf(char,int)#java/lang/String/indexOf(int,int)
org/apache/parquet/tools/util/PrettyPrintWriter/Span/canAppend(org.apache.parquet.tools.util.PrettyPrintWriter.Span)#java/lang/String/equals(java.lang.Object)
org/apache/parquet/tools/util/PrettyPrintWriter/Span/length()#java/lang/String/length()
org/apache/parquet/tools/util/PrettyPrintWriter/Span/trimTo(int,org.apache.parquet.tools.util.PrettyPrintWriter.Span)#org/apache/parquet/tools/util/PrettyPrintWriter/Span/isEmpty()
org/apache/parquet/tools/util/PrettyPrintWriter/Span/trimTo(int,org.apache.parquet.tools.util.PrettyPrintWriter.Span)#java/lang/String/substring(int,int)
org/apache/parquet/tools/util/PrettyPrintWriter/Span/trimTo(int,org.apache.parquet.tools.util.PrettyPrintWriter.Span)#org/apache/parquet/tools/util/PrettyPrintWriter/Span/length()
org/apache/parquet/tools/util/PrettyPrintWriter/Span/toString()#org/apache/parquet/tools/util/PrettyPrintWriter/Span/toString(java.lang.StringBuilder)
org/apache/parquet/tools/util/PrettyPrintWriter/Span/toString()#java/lang/StringBuilder/StringBuilder()
org/apache/parquet/tools/util/PrettyPrintWriter/Span/toString()#java/lang/StringBuilder/toString()
org/apache/parquet/tools/util/PrettyPrintWriter/Span/spaceOut(int,int)#java/lang/Character/isWhitespace(char)
org/apache/parquet/tools/util/PrettyPrintWriter/Span/spaceOut(int,int)#java/lang/String/charAt(int)
org/apache/parquet/tools/util/PrettyPrintWriter/Span/spaceOut(int,int)#java/lang/String/length()
org/apache/parquet/tools/util/PrettyPrintWriter/Span/spaceOut(int,int)#java/lang/String/substring(int,int)
org/apache/parquet/tools/util/PrettyPrintWriter/Span/spaceOut(int,int)#java/lang/String/substring(int)
org/apache/parquet/tools/util/PrettyPrintWriter/Span/countCharacter(char)#java/lang/String/charAt(int)
org/apache/parquet/tools/util/PrettyPrintWriter/Span/countCharacter(char)#java/lang/String/length()
org/apache/parquet/thrift/struct/ThriftType/SetType/equals(java.lang.Object)#org/apache/parquet/thrift/struct/ThriftField/equals(java.lang.Object)
org/apache/parquet/thrift/struct/ThriftType/SetType/equals(java.lang.Object)#org/apache/parquet/thrift/struct/ThriftType/equals(java.lang.Object)
org/apache/parquet/thrift/struct/ThriftType/SetType/hashCode()#org/apache/parquet/thrift/struct/ThriftField/hashCode()
org/apache/parquet/thrift/struct/ThriftType/SetType/hashCode()#org/apache/parquet/thrift/struct/ThriftType/hashCode()
org/apache/parquet/thrift/struct/ThriftType/SetType/accept(org.apache.parquet.thrift.struct.ThriftType.StateVisitor,S)#org/apache/parquet/thrift/struct/ThriftType/StateVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.SetType,S)
org/apache/parquet/thrift/struct/ThriftType/SetType/accept(org.apache.parquet.thrift.struct.ThriftType.TypeVisitor)#org/apache/parquet/thrift/struct/ThriftType/TypeVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.SetType)
org/apache/parquet/avro/AvroRecordConverter/AvroArrayConverter/end()#java/util/ArrayList/toArray()
org/apache/parquet/avro/AvroRecordConverter/AvroArrayConverter/end()#org/apache/parquet/avro/ParentValueContainer/add(java.lang.Object)
org/apache/parquet/avro/AvroRecordConverter/AvroArrayConverter/start()#java/util/Collection/clear()
org/apache/parquet/avro/AvroRecordConverter/AvroArrayConverter/createSetterAndContainer()#java/util/ArrayList/ArrayList()
org/apache/parquet/avro/AvroRecordConverter/AvroArrayConverter/createSetterAndContainer()#org/apache/parquet/avro/AvroRecordConverter/AvroArrayConverter/createSetterAndContainer()/$anonymous9/()
org/apache/parquet/avro/AvroRecordConverter/AvroArrayConverter/createSetterAndContainer()#org/apache/parquet/avro/AvroRecordConverter/AvroArrayConverter/createSetterAndContainer()/$anonymous8/()
org/apache/parquet/avro/AvroRecordConverter/AvroArrayConverter/createSetterAndContainer()#org/apache/parquet/avro/AvroRecordConverter/AvroArrayConverter/createSetterAndContainer()/$anonymous7/()
org/apache/parquet/avro/AvroRecordConverter/AvroArrayConverter/createSetterAndContainer()#org/apache/parquet/avro/AvroRecordConverter/AvroArrayConverter/createSetterAndContainer()/$anonymous6/()
org/apache/parquet/avro/AvroRecordConverter/AvroArrayConverter/createSetterAndContainer()#org/apache/parquet/avro/AvroRecordConverter/AvroArrayConverter/createSetterAndContainer()/$anonymous5/()
org/apache/parquet/avro/AvroRecordConverter/AvroArrayConverter/createSetterAndContainer()#org/apache/parquet/avro/AvroRecordConverter/AvroArrayConverter/createSetterAndContainer()/$anonymous4/()
org/apache/parquet/avro/AvroRecordConverter/AvroArrayConverter/createSetterAndContainer()#org/apache/parquet/avro/AvroRecordConverter/AvroArrayConverter/createSetterAndContainer()/$anonymous3/()
org/apache/parquet/avro/AvroRecordConverter/AvroArrayConverter/createSetterAndContainer()#org/apache/parquet/avro/AvroRecordConverter/AvroArrayConverter/createSetterAndContainer()/$anonymous2/()
org/apache/parquet/avro/AvroRecordConverter/AvroArrayConverter/createSetterAndContainer()#org/apache/parquet/avro/AvroRecordConverter/AvroArrayConverter/createSetterAndContainer()/$anonymous1/()
org/apache/parquet/pig/TestPigSchemaConverter/testFixedConversion(java.lang.String,java.lang.String)#org/apache/parquet/schema/MessageTypeParser/parseMessageType(java.lang.String)
org/apache/parquet/pig/TestPigSchemaConverter/testFixedConversion(java.lang.String,java.lang.String)#org/apache/parquet/pig/PigSchemaConverter/convert(org.apache.parquet.schema.MessageType)
org/apache/parquet/pig/TestPigSchemaConverter/testSchemaEvolution()#org/apache/parquet/schema/PrimitiveType/PrimitiveType(org.apache.parquet.schema.Type.Repetition,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,java.lang.String)
org/apache/parquet/pig/TestPigSchemaConverter/testSchemaEvolution()#org/apache/parquet/pig/PigSchemaConverter/pigSchemaToString(org.apache.parquet.pig.Schema)
org/apache/parquet/pig/TestPigSchemaConverter/testSchemaEvolution()#java/util/LinkedHashSet/LinkedHashSet(java.util.Collection)
org/apache/parquet/pig/TestPigSchemaConverter/testSchemaEvolution()#java/util/Arrays/asList(T[])
org/apache/parquet/pig/TestPigSchemaConverter/testSchemaEvolution()#java/util/Map/put(K,V)
org/apache/parquet/pig/TestPigSchemaConverter/testSchemaEvolution()#org/apache/parquet/schema/MessageType/MessageType(java.lang.String,org.apache.parquet.schema.Type[])
org/apache/parquet/pig/TestPigSchemaConverter/testSchemaEvolution()#org/apache/parquet/pig/TupleReadSupport/getPigSchemaFromMultipleFiles(org.apache.parquet.schema.MessageType,java.util.Map)
org/apache/parquet/pig/TestPigSchemaConverter/testSchemaEvolution()#java/util/LinkedHashMap/LinkedHashMap()
org/apache/parquet/pig/TestPigSchemaConverter/testMap()#org/apache/parquet/pig/TestPigSchemaConverter/testConversion(java.lang.String,java.lang.String)
org/apache/parquet/pig/TestPigSchemaConverter/testPigConversion(java.lang.String)#org/apache/parquet/pig/PigSchemaConverter/convert(org.apache.parquet.schema.MessageType)
org/apache/parquet/pig/TestPigSchemaConverter/testAnnonymousField()#org/apache/parquet/pig/TestPigSchemaConverter/testConversion(java.lang.String,java.lang.String)
org/apache/parquet/pig/TestPigSchemaConverter/testMapTuple()#org/apache/parquet/pig/TestPigSchemaConverter/testPigConversion(java.lang.String)
org/apache/parquet/pig/TestPigSchemaConverter/testListOfPrimitiveIsABag()#org/apache/parquet/pig/TestPigSchemaConverter/testFixedConversion(java.lang.String,java.lang.String)
org/apache/parquet/pig/TestPigSchemaConverter/testMultiBag()#org/apache/parquet/pig/TestPigSchemaConverter/testPigConversion(java.lang.String)
org/apache/parquet/pig/TestPigSchemaConverter/testMapWithFixed()#org/apache/parquet/pig/TestPigSchemaConverter/testFixedConversion(java.lang.String,java.lang.String)
org/apache/parquet/pig/TestPigSchemaConverter/testTupleBagWithAnonymousInnerField()#org/apache/parquet/pig/TestPigSchemaConverter/testConversion(java.lang.String,java.lang.String)
org/apache/parquet/pig/TestPigSchemaConverter/testMap2()#org/apache/parquet/pig/TestPigSchemaConverter/testConversion(java.lang.String,java.lang.String)
org/apache/parquet/pig/TestPigSchemaConverter/testMap3()#org/apache/parquet/pig/TestPigSchemaConverter/testConversion(java.lang.String,java.lang.String)
org/apache/parquet/pig/TestPigSchemaConverter/testMapOfList()#org/apache/parquet/pig/TestPigSchemaConverter/testPigConversion(java.lang.String)
org/apache/parquet/pig/TestPigSchemaConverter/testListsOfPrimitive()#org/apache/parquet/schema/Types/buildGroup(org.apache.parquet.schema.Type.Repetition)
org/apache/parquet/pig/TestPigSchemaConverter/testListsOfPrimitive()#org/apache/parquet/schema/Type/Repetition/values()
org/apache/parquet/pig/TestPigSchemaConverter/testListsOfPrimitive()#org/apache/parquet/schema/Types/Builder/named(java.lang.String)
org/apache/parquet/pig/TestPigSchemaConverter/testListsOfPrimitive()#org/apache/parquet/schema/PrimitiveType/PrimitiveTypeName/values()
org/apache/parquet/pig/TestPigSchemaConverter/testListsOfPrimitive()#org/apache/parquet/schema/Types/Builder/as(org.apache.parquet.schema.OriginalType)
org/apache/parquet/pig/TestPigSchemaConverter/testListsOfPrimitive()#org/apache/parquet/schema/Types/BaseGroupBuilder/addField(org.apache.parquet.schema.Type)
org/apache/parquet/pig/TestPigSchemaConverter/testListsOfPrimitive()#org/apache/parquet/pig/PigSchemaConverter/convertField(org.apache.parquet.schema.Type)
org/apache/parquet/pig/TestPigSchemaConverter/testListsOfPrimitive()#org/apache/parquet/schema/Types/primitive(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.schema.Type.Repetition)
org/apache/parquet/pig/TestPigSchemaConverter/testListsOfPrimitive()#org/apache/parquet/schema/Types/BasePrimitiveBuilder/length(int)
org/apache/parquet/pig/TestPigSchemaConverter/testTupleBag()#org/apache/parquet/pig/TestPigSchemaConverter/testConversion(java.lang.String,java.lang.String)
org/apache/parquet/pig/TestPigSchemaConverter/testSimpleBag()#org/apache/parquet/pig/TestPigSchemaConverter/testPigConversion(java.lang.String)
org/apache/parquet/pig/TestPigSchemaConverter/testMapSimple()#org/apache/parquet/pig/TestPigSchemaConverter/testPigConversion(java.lang.String)
org/apache/parquet/pig/TestPigSchemaConverter/testConversion(java.lang.String,java.lang.String)#org/apache/parquet/schema/Type/toString()
org/apache/parquet/pig/TestPigSchemaConverter/testConversion(java.lang.String,java.lang.String)#org/apache/parquet/schema/MessageTypeParser/parseMessageType(java.lang.String)
org/apache/parquet/pig/TestPigSchemaConverter/testConversion(java.lang.String,java.lang.String)#org/apache/parquet/pig/PigSchemaConverter/filter(org.apache.parquet.schema.MessageType,org.apache.parquet.pig.Schema,org.apache.parquet.pig.RequiredFieldList)
org/apache/parquet/pig/TestPigSchemaConverter/testConversion(java.lang.String,java.lang.String)#org/apache/parquet/pig/PigSchemaConverter/convert(org.apache.parquet.schema.MessageType)
org/apache/parquet/pig/TestPigSchemaConverter/testMap4()#org/apache/parquet/pig/TestPigSchemaConverter/testConversion(java.lang.String,java.lang.String)
org/apache/parquet/column/values/delta/benchmark/BenchmarkReadingRandomIntegers/readingDelta()#org/apache/parquet/column/values/delta/benchmark/BenchmarkReadingRandomIntegers/readData(org.apache.parquet.column.values.ValuesReader,byte[])
org/apache/parquet/column/values/delta/benchmark/BenchmarkReadingRandomIntegers/readingDelta()#org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesReader/DeltaBinaryPackingValuesReader()
org/apache/parquet/column/values/delta/benchmark/BenchmarkReadingRandomIntegers/readData(org.apache.parquet.column.values.ValuesReader,byte[])#org/apache/parquet/column/values/ValuesReader/initFromPage(int,java.nio.ByteBuffer,int)
org/apache/parquet/column/values/delta/benchmark/BenchmarkReadingRandomIntegers/readData(org.apache.parquet.column.values.ValuesReader,byte[])#java/nio/ByteBuffer/wrap(byte[])
org/apache/parquet/column/values/delta/benchmark/BenchmarkReadingRandomIntegers/readData(org.apache.parquet.column.values.ValuesReader,byte[])#org/apache/parquet/column/values/ValuesReader/readInteger()
org/apache/parquet/column/values/delta/benchmark/BenchmarkReadingRandomIntegers/prepare()#org/apache/parquet/column/values/ValuesWriter/getBytes()
org/apache/parquet/column/values/delta/benchmark/BenchmarkReadingRandomIntegers/prepare()#org/apache/parquet/column/values/ValuesWriter/writeInteger(int)
org/apache/parquet/column/values/delta/benchmark/BenchmarkReadingRandomIntegers/prepare()#java/util/Random/nextInt(int)
org/apache/parquet/column/values/delta/benchmark/BenchmarkReadingRandomIntegers/prepare()#org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForInteger/DeltaBinaryPackingValuesWriterForInteger(int,int,int,int,org.apache.parquet.bytes.ByteBufferAllocator)
org/apache/parquet/column/values/delta/benchmark/BenchmarkReadingRandomIntegers/prepare()#org/apache/parquet/bytes/DirectByteBufferAllocator/DirectByteBufferAllocator()
org/apache/parquet/column/values/delta/benchmark/BenchmarkReadingRandomIntegers/prepare()#java/util/Random/Random()
org/apache/parquet/column/values/delta/benchmark/BenchmarkReadingRandomIntegers/prepare()#org/apache/parquet/bytes/BytesInput/toByteArray()
org/apache/parquet/column/values/delta/benchmark/BenchmarkReadingRandomIntegers/prepare()#org/apache/parquet/column/values/rle/RunLengthBitPackingHybridValuesWriter/RunLengthBitPackingHybridValuesWriter(int,int,int,org.apache.parquet.bytes.ByteBufferAllocator)
org/apache/parquet/column/values/delta/benchmark/BenchmarkReadingRandomIntegers/readingRLE()#org/apache/parquet/column/values/rle/RunLengthBitPackingHybridValuesReader/RunLengthBitPackingHybridValuesReader(int)
org/apache/parquet/column/values/delta/benchmark/BenchmarkReadingRandomIntegers/readingRLE()#org/apache/parquet/column/values/delta/benchmark/BenchmarkReadingRandomIntegers/readData(org.apache.parquet.column.values.ValuesReader,byte[])
org/apache/parquet/hadoop/TestInputFormatColumnProjection/Reader/map(java.lang.Void,org.apache.parquet.example.data.Group,org.apache.parquet.hadoop.Context)#org/apache/parquet/hadoop/util/ContextUtil/getCounter(org.apache.parquet.hadoop.TaskAttemptContext,java.lang.String,java.lang.String)
org/apache/parquet/hadoop/TestInputFormatColumnProjection/Reader/map(java.lang.Void,org.apache.parquet.example.data.Group,org.apache.parquet.hadoop.Context)#org/apache/parquet/hadoop/TestInputFormatColumnProjection/Reader/setBytesReadCounter(org.apache.parquet.hadoop.util.counters.mapreduce.Counter)
org/apache/parquet/bytes/BytesInput/CapacityBAOSBytesInput/writeAllTo(java.io.OutputStream)#org/apache/parquet/bytes/CapacityByteArrayOutputStream/writeTo(java.io.OutputStream)
org/apache/parquet/bytes/BytesInput/CapacityBAOSBytesInput/size()#org/apache/parquet/bytes/CapacityByteArrayOutputStream/size()
org/apache/parquet/tools/read/SimpleRecord/toString()#java/lang/Object/toString()
org/apache/parquet/tools/read/SimpleRecord/prettyPrintJson(java.io.PrintWriter)#org/apache/parquet/tools/read/SimpleRecord/toJsonObject()
org/apache/parquet/tools/read/SimpleRecord/prettyPrintJson(java.io.PrintWriter)#java/io/PrintWriter/write(char[])
org/apache/parquet/tools/read/SimpleRecord/prettyPrint(java.io.PrintWriter,int)#java/lang/String/valueOf(java.lang.Object)
org/apache/parquet/tools/read/SimpleRecord/prettyPrint(java.io.PrintWriter,int)#java/util/Arrays/toString(double[])
org/apache/parquet/tools/read/SimpleRecord/prettyPrint(java.io.PrintWriter,int)#java/util/Arrays/deepToString(java.lang.Object[])
org/apache/parquet/tools/read/SimpleRecord/prettyPrint(java.io.PrintWriter,int)#java/io/PrintWriter/print(java.lang.String)
org/apache/parquet/tools/read/SimpleRecord/prettyPrint(java.io.PrintWriter,int)#java/io/PrintWriter/println(java.lang.String)
org/apache/parquet/tools/read/SimpleRecord/prettyPrint(java.io.PrintWriter,int)#java/lang/Class/isAssignableFrom(java.lang.Class)
org/apache/parquet/tools/read/SimpleRecord/prettyPrint(java.io.PrintWriter,int)#java/io/PrintWriter/println()
org/apache/parquet/tools/read/SimpleRecord/prettyPrint(java.io.PrintWriter,int)#java/lang/Class/isArray()
org/apache/parquet/tools/read/SimpleRecord/prettyPrint(java.io.PrintWriter,int)#org/apache/parquet/tools/read/SimpleRecord/prettyPrint(java.io.PrintWriter,int)
org/apache/parquet/tools/read/SimpleRecord/prettyPrint(java.io.PrintWriter,int)#java/io/PrintWriter/print(char[])
org/apache/parquet/tools/read/SimpleRecord/prettyPrint(java.io.PrintWriter,int)#java/util/Arrays/toString(float[])
org/apache/parquet/tools/read/SimpleRecord/prettyPrint(java.io.PrintWriter,int)#java/util/Arrays/toString(short[])
org/apache/parquet/tools/read/SimpleRecord/prettyPrint(java.io.PrintWriter,int)#org/apache/parquet/tools/read/SimpleRecord/NameValue/getValue()
org/apache/parquet/tools/read/SimpleRecord/prettyPrint(java.io.PrintWriter,int)#java/util/Arrays/toString(int[])
org/apache/parquet/tools/read/SimpleRecord/prettyPrint(java.io.PrintWriter,int)#java/lang/Object/getClass()
org/apache/parquet/tools/read/SimpleRecord/prettyPrint(java.io.PrintWriter,int)#org/apache/parquet/tools/read/SimpleRecord/NameValue/getName()
org/apache/parquet/tools/read/SimpleRecord/prettyPrint(java.io.PrintWriter,int)#java/util/Arrays/toString(long[])
org/apache/parquet/tools/read/SimpleRecord/prettyPrint(java.io.PrintWriter,int)#java/util/Arrays/toString(boolean[])
org/apache/parquet/tools/read/SimpleRecord/toJsonObject()#org/apache/parquet/tools/read/SimpleRecord/NameValue/getValue()
org/apache/parquet/tools/read/SimpleRecord/toJsonObject()#java/util/Map/put(K,V)
org/apache/parquet/tools/read/SimpleRecord/toJsonObject()#org/apache/parquet/tools/read/SimpleRecord/NameValue/getName()
org/apache/parquet/tools/read/SimpleRecord/toJsonObject()#org/apache/parquet/tools/read/SimpleRecord/toJsonValue(java.lang.Object)
org/apache/parquet/tools/read/SimpleRecord/prettyPrint()#org/apache/parquet/tools/read/SimpleRecord/prettyPrint(java.io.PrintWriter)
org/apache/parquet/tools/read/SimpleRecord/prettyPrint()#java/io/PrintWriter/PrintWriter(java.io.OutputStream,boolean)
org/apache/parquet/tools/read/SimpleRecord/getValues()#java/util/Collections/unmodifiableList(java.util.List)
org/apache/parquet/tools/read/SimpleRecord/toJsonValue(java.lang.Object)#java/lang/Class/isAssignableFrom(java.lang.Class)
org/apache/parquet/tools/read/SimpleRecord/toJsonValue(java.lang.Object)#org/apache/parquet/tools/read/SimpleRecord/toJsonObject()
org/apache/parquet/tools/read/SimpleRecord/toJsonValue(java.lang.Object)#java/lang/Object/getClass()
org/apache/parquet/tools/read/SimpleRecord/prettyPrint(java.io.PrintWriter)#org/apache/parquet/tools/read/SimpleRecord/prettyPrint(java.io.PrintWriter,int)
org/apache/parquet/tools/read/SimpleRecord/add(java.lang.String,java.lang.Object)#org/apache/parquet/tools/read/SimpleRecord/NameValue/NameValue(java.lang.String,java.lang.Object)
org/apache/parquet/tools/read/SimpleRecord/add(java.lang.String,java.lang.Object)#java/util/List/add(E)
org/apache/parquet/pig/convert/TupleConverter/FieldFloatConverter/addInt(int)#org/apache/parquet/pig/convert/ParentValueContainer/add(java.lang.Object)
org/apache/parquet/pig/convert/TupleConverter/FieldFloatConverter/addBinary(org.apache.parquet.io.api.Binary)#org/apache/parquet/io/api/Binary/toStringUsingUTF8()
org/apache/parquet/pig/convert/TupleConverter/FieldFloatConverter/addBinary(org.apache.parquet.io.api.Binary)#org/apache/parquet/pig/convert/ParentValueContainer/add(java.lang.Object)
org/apache/parquet/pig/convert/TupleConverter/FieldFloatConverter/addBinary(org.apache.parquet.io.api.Binary)#java/lang/Float/parseFloat(java.lang.String)
org/apache/parquet/pig/convert/TupleConverter/FieldFloatConverter/addFloat(float)#org/apache/parquet/pig/convert/ParentValueContainer/add(java.lang.Object)
org/apache/parquet/pig/convert/TupleConverter/FieldFloatConverter/addLong(long)#org/apache/parquet/pig/convert/ParentValueContainer/add(java.lang.Object)
org/apache/parquet/pig/convert/TupleConverter/FieldFloatConverter/addBoolean(boolean)#org/apache/parquet/pig/convert/ParentValueContainer/add(java.lang.Object)
org/apache/parquet/pig/convert/TupleConverter/FieldFloatConverter/addDouble(double)#org/apache/parquet/pig/convert/ParentValueContainer/add(java.lang.Object)
org/apache/parquet/hadoop/ParquetFileWriter/PaddingAlignment/alignForRowGroup(org.apache.parquet.hadoop.FSDataOutputStream)#java/lang/Math/min(long,long)
org/apache/parquet/hadoop/ParquetFileWriter/PaddingAlignment/alignForRowGroup(org.apache.parquet.hadoop.FSDataOutputStream)#org/apache/parquet/hadoop/ParquetFileWriter/PaddingAlignment/isPaddingNeeded(long)
org/apache/parquet/hadoop/ParquetFileWriter/PaddingAlignment/nextRowGroupSize(org.apache.parquet.hadoop.FSDataOutputStream)#java/lang/Math/min(long,long)
org/apache/parquet/hadoop/ParquetFileWriter/PaddingAlignment/nextRowGroupSize(org.apache.parquet.hadoop.FSDataOutputStream)#org/apache/parquet/hadoop/ParquetFileWriter/PaddingAlignment/isPaddingNeeded(long)
org/apache/parquet/hadoop/ParquetFileWriter/PaddingAlignment/get(long,long,int)#org/apache/parquet/hadoop/ParquetFileWriter/PaddingAlignment/PaddingAlignment(long,long,int)
org/apache/parquet/glob/TestWildcardPath/testComplex()#org/apache/parquet/glob/TestWildcardPath/assertMatches(org.apache.parquet.glob.WildcardPath,java.lang.String[])
org/apache/parquet/glob/TestWildcardPath/testComplex()#org/apache/parquet/glob/TestWildcardPath/assertDoesNotMatch(org.apache.parquet.glob.WildcardPath,java.lang.String[])
org/apache/parquet/glob/TestWildcardPath/testComplex()#org/apache/parquet/glob/WildcardPath/WildcardPath(java.lang.String,java.lang.String,char)
org/apache/parquet/glob/TestWildcardPath/testStarMatchesEverything()#org/apache/parquet/glob/TestWildcardPath/assertMatches(org.apache.parquet.glob.WildcardPath,java.lang.String[])
org/apache/parquet/glob/TestWildcardPath/testStarMatchesEverything()#org/apache/parquet/glob/WildcardPath/WildcardPath(java.lang.String,java.lang.String,char)
org/apache/parquet/glob/TestWildcardPath/assertMatches(org.apache.parquet.glob.WildcardPath,java.lang.String[])#java/lang/String/format(java.lang.String,java.lang.Object[])
org/apache/parquet/glob/TestWildcardPath/assertMatches(org.apache.parquet.glob.WildcardPath,java.lang.String[])#org/apache/parquet/glob/WildcardPath/matches(java.lang.String)
org/apache/parquet/glob/TestWildcardPath/testEmptyString()#org/apache/parquet/glob/TestWildcardPath/assertMatches(org.apache.parquet.glob.WildcardPath,java.lang.String[])
org/apache/parquet/glob/TestWildcardPath/testEmptyString()#org/apache/parquet/glob/TestWildcardPath/assertDoesNotMatch(org.apache.parquet.glob.WildcardPath,java.lang.String[])
org/apache/parquet/glob/TestWildcardPath/testEmptyString()#org/apache/parquet/glob/WildcardPath/WildcardPath(java.lang.String,java.lang.String,char)
org/apache/parquet/glob/TestWildcardPath/assertDoesNotMatch(org.apache.parquet.glob.WildcardPath,java.lang.String[])#java/lang/String/format(java.lang.String,java.lang.Object[])
org/apache/parquet/glob/TestWildcardPath/assertDoesNotMatch(org.apache.parquet.glob.WildcardPath,java.lang.String[])#org/apache/parquet/glob/WildcardPath/matches(java.lang.String)
org/apache/parquet/glob/TestWildcardPath/testChildrenPathsMatch()#org/apache/parquet/glob/TestWildcardPath/assertMatches(org.apache.parquet.glob.WildcardPath,java.lang.String[])
org/apache/parquet/glob/TestWildcardPath/testChildrenPathsMatch()#org/apache/parquet/glob/TestWildcardPath/assertDoesNotMatch(org.apache.parquet.glob.WildcardPath,java.lang.String[])
org/apache/parquet/glob/TestWildcardPath/testChildrenPathsMatch()#org/apache/parquet/glob/WildcardPath/WildcardPath(java.lang.String,java.lang.String,char)
org/apache/parquet/glob/TestWildcardPath/testStarsAtBeginAndEnd()#org/apache/parquet/glob/TestWildcardPath/assertMatches(org.apache.parquet.glob.WildcardPath,java.lang.String[])
org/apache/parquet/glob/TestWildcardPath/testStarsAtBeginAndEnd()#org/apache/parquet/glob/TestWildcardPath/assertDoesNotMatch(org.apache.parquet.glob.WildcardPath,java.lang.String[])
org/apache/parquet/glob/TestWildcardPath/testStarsAtBeginAndEnd()#org/apache/parquet/glob/WildcardPath/WildcardPath(java.lang.String,java.lang.String,char)
org/apache/parquet/glob/TestWildcardPath/testNoWildcards()#org/apache/parquet/glob/TestWildcardPath/assertMatches(org.apache.parquet.glob.WildcardPath,java.lang.String[])
org/apache/parquet/glob/TestWildcardPath/testNoWildcards()#org/apache/parquet/glob/TestWildcardPath/assertDoesNotMatch(org.apache.parquet.glob.WildcardPath,java.lang.String[])
org/apache/parquet/glob/TestWildcardPath/testNoWildcards()#org/apache/parquet/glob/WildcardPath/WildcardPath(java.lang.String,java.lang.String,char)
org/apache/parquet/glob/TestWildcardPath/testDoubleStarsIgnored()#org/apache/parquet/glob/TestWildcardPath/assertMatches(org.apache.parquet.glob.WildcardPath,java.lang.String[])
org/apache/parquet/glob/TestWildcardPath/testDoubleStarsIgnored()#org/apache/parquet/glob/TestWildcardPath/assertDoesNotMatch(org.apache.parquet.glob.WildcardPath,java.lang.String[])
org/apache/parquet/glob/TestWildcardPath/testDoubleStarsIgnored()#org/apache/parquet/glob/WildcardPath/WildcardPath(java.lang.String,java.lang.String,char)
org/apache/parquet/io/ColumnIOFactory/ColumnIOCreatorVisitor/visit(org.apache.parquet.schema.GroupType)#org/apache/parquet/schema/Type/asGroupType()
org/apache/parquet/io/ColumnIOFactory/ColumnIOCreatorVisitor/visit(org.apache.parquet.schema.GroupType)#org/apache/parquet/io/ColumnIOFactory/ColumnIOCreatorVisitor/visitChildren(org.apache.parquet.io.GroupColumnIO,org.apache.parquet.schema.GroupType,org.apache.parquet.schema.GroupType)
org/apache/parquet/io/ColumnIOFactory/ColumnIOCreatorVisitor/visit(org.apache.parquet.schema.GroupType)#org/apache/parquet/io/GroupColumnIO/add(org.apache.parquet.io.ColumnIO)
org/apache/parquet/io/ColumnIOFactory/ColumnIOCreatorVisitor/visit(org.apache.parquet.schema.GroupType)#org/apache/parquet/schema/Type/isPrimitive()
org/apache/parquet/io/ColumnIOFactory/ColumnIOCreatorVisitor/visit(org.apache.parquet.schema.GroupType)#org/apache/parquet/io/ColumnIOFactory/ColumnIOCreatorVisitor/incompatibleSchema(org.apache.parquet.schema.Type,org.apache.parquet.schema.Type)
org/apache/parquet/io/ColumnIOFactory/ColumnIOCreatorVisitor/visit(org.apache.parquet.schema.GroupType)#org/apache/parquet/io/GroupColumnIO/GroupColumnIO(org.apache.parquet.schema.GroupType,org.apache.parquet.io.GroupColumnIO,int)
org/apache/parquet/io/ColumnIOFactory/ColumnIOCreatorVisitor/incompatibleSchema(org.apache.parquet.schema.Type,org.apache.parquet.schema.Type)#org/apache/parquet/io/ParquetDecodingException/ParquetDecodingException(java.lang.String)
org/apache/parquet/io/ColumnIOFactory/ColumnIOCreatorVisitor/visit(org.apache.parquet.schema.PrimitiveType)#org/apache/parquet/io/ColumnIOFactory/ColumnIOCreatorVisitor/incompatibleSchema(org.apache.parquet.schema.Type,org.apache.parquet.schema.Type)
org/apache/parquet/io/ColumnIOFactory/ColumnIOCreatorVisitor/visit(org.apache.parquet.schema.PrimitiveType)#org/apache/parquet/schema/Type/asPrimitiveType()
org/apache/parquet/io/ColumnIOFactory/ColumnIOCreatorVisitor/visit(org.apache.parquet.schema.PrimitiveType)#java/util/List/add(E)
org/apache/parquet/io/ColumnIOFactory/ColumnIOCreatorVisitor/visit(org.apache.parquet.schema.PrimitiveType)#org/apache/parquet/schema/PrimitiveType/getPrimitiveTypeName()
org/apache/parquet/io/ColumnIOFactory/ColumnIOCreatorVisitor/visit(org.apache.parquet.schema.PrimitiveType)#org/apache/parquet/io/GroupColumnIO/add(org.apache.parquet.io.ColumnIO)
org/apache/parquet/io/ColumnIOFactory/ColumnIOCreatorVisitor/visit(org.apache.parquet.schema.PrimitiveType)#org/apache/parquet/schema/Type/isPrimitive()
org/apache/parquet/io/ColumnIOFactory/ColumnIOCreatorVisitor/visit(org.apache.parquet.schema.PrimitiveType)#java/util/List/size()
org/apache/parquet/io/ColumnIOFactory/ColumnIOCreatorVisitor/visit(org.apache.parquet.schema.PrimitiveType)#org/apache/parquet/io/PrimitiveColumnIO/PrimitiveColumnIO(org.apache.parquet.schema.Type,org.apache.parquet.io.GroupColumnIO,int,int)
org/apache/parquet/io/ColumnIOFactory/ColumnIOCreatorVisitor/visit(org.apache.parquet.schema.MessageType)#org/apache/parquet/io/MessageColumnIO/setLevels()
org/apache/parquet/io/ColumnIOFactory/ColumnIOCreatorVisitor/visit(org.apache.parquet.schema.MessageType)#org/apache/parquet/io/MessageColumnIO/MessageColumnIO(org.apache.parquet.schema.MessageType,boolean,java.lang.String)
org/apache/parquet/io/ColumnIOFactory/ColumnIOCreatorVisitor/visit(org.apache.parquet.schema.MessageType)#org/apache/parquet/io/ColumnIOFactory/ColumnIOCreatorVisitor/visitChildren(org.apache.parquet.io.GroupColumnIO,org.apache.parquet.schema.GroupType,org.apache.parquet.schema.GroupType)
org/apache/parquet/io/ColumnIOFactory/ColumnIOCreatorVisitor/visit(org.apache.parquet.schema.MessageType)#org/apache/parquet/io/MessageColumnIO/setLeaves(java.util.List)
org/apache/parquet/io/ColumnIOFactory/ColumnIOCreatorVisitor/visitChildren(org.apache.parquet.io.GroupColumnIO,org.apache.parquet.schema.GroupType,org.apache.parquet.schema.GroupType)#org/apache/parquet/schema/Type/getName()
org/apache/parquet/io/ColumnIOFactory/ColumnIOCreatorVisitor/visitChildren(org.apache.parquet.io.GroupColumnIO,org.apache.parquet.schema.GroupType,org.apache.parquet.schema.GroupType)#org/apache/parquet/schema/Type/getRepetition()
org/apache/parquet/io/ColumnIOFactory/ColumnIOCreatorVisitor/visitChildren(org.apache.parquet.io.GroupColumnIO,org.apache.parquet.schema.GroupType,org.apache.parquet.schema.GroupType)#org/apache/parquet/schema/Type/Repetition/isMoreRestrictiveThan(org.apache.parquet.schema.Type.Repetition)
org/apache/parquet/io/ColumnIOFactory/ColumnIOCreatorVisitor/visitChildren(org.apache.parquet.io.GroupColumnIO,org.apache.parquet.schema.GroupType,org.apache.parquet.schema.GroupType)#org/apache/parquet/io/ColumnIOFactory/ColumnIOCreatorVisitor/incompatibleSchema(org.apache.parquet.schema.Type,org.apache.parquet.schema.Type)
org/apache/parquet/io/ColumnIOFactory/ColumnIOCreatorVisitor/visitChildren(org.apache.parquet.io.GroupColumnIO,org.apache.parquet.schema.GroupType,org.apache.parquet.schema.GroupType)#org/apache/parquet/schema/GroupType/getFieldIndex(java.lang.String)
org/apache/parquet/io/ColumnIOFactory/ColumnIOCreatorVisitor/visitChildren(org.apache.parquet.io.GroupColumnIO,org.apache.parquet.schema.GroupType,org.apache.parquet.schema.GroupType)#org/apache/parquet/schema/Type/accept(org.apache.parquet.schema.TypeVisitor)
org/apache/parquet/io/ColumnIOFactory/ColumnIOCreatorVisitor/visitChildren(org.apache.parquet.io.GroupColumnIO,org.apache.parquet.schema.GroupType,org.apache.parquet.schema.GroupType)#org/apache/parquet/schema/GroupType/getFields()
org/apache/parquet/io/ColumnIOFactory/ColumnIOCreatorVisitor/visitChildren(org.apache.parquet.io.GroupColumnIO,org.apache.parquet.schema.GroupType,org.apache.parquet.schema.GroupType)#org/apache/parquet/schema/GroupType/getType(int)
org/apache/parquet/io/ColumnIOFactory/ColumnIOCreatorVisitor/visitChildren(org.apache.parquet.io.GroupColumnIO,org.apache.parquet.schema.GroupType,org.apache.parquet.schema.GroupType)#org/apache/parquet/schema/GroupType/containsField(java.lang.String)
org/apache/parquet/io/api/Binary/ByteArrayBackedBinary/slice(int,int)#org/apache/parquet/io/api/Binary/fromReusedByteArray(byte[],int,int)
org/apache/parquet/io/api/Binary/ByteArrayBackedBinary/slice(int,int)#org/apache/parquet/io/api/Binary/fromConstantByteArray(byte[],int,int)
org/apache/parquet/io/api/Binary/ByteArrayBackedBinary/equals(byte[],int,int)#org/apache/parquet/io/api/Binary/equals(byte[],int,int,byte[],int,int)
org/apache/parquet/io/api/Binary/ByteArrayBackedBinary/equals(org.apache.parquet.io.api.Binary)#org/apache/parquet/io/api/Binary/equals(byte[],int,int)
org/apache/parquet/io/api/Binary/ByteArrayBackedBinary/getBytes()#java/util/Arrays/copyOfRange(byte[],int,int)
org/apache/parquet/io/api/Binary/ByteArrayBackedBinary/toStringUsingUTF8()#java/nio/charset/Charset/decode(java.nio.ByteBuffer)
org/apache/parquet/io/api/Binary/ByteArrayBackedBinary/toStringUsingUTF8()#java/nio/CharBuffer/toString()
org/apache/parquet/io/api/Binary/ByteArrayBackedBinary/toStringUsingUTF8()#java/nio/ByteBuffer/wrap(byte[])
org/apache/parquet/io/api/Binary/ByteArrayBackedBinary/compareTo(java.nio.ByteBuffer,int,int)#org/apache/parquet/io/api/Binary/compareByteArrayToByteBuffer(byte[],int,int,java.nio.ByteBuffer,int,int)
org/apache/parquet/io/api/Binary/ByteArrayBackedBinary/compareTo(byte[],int,int)#org/apache/parquet/io/api/Binary/compareTwoByteArrays(byte[],int,int,byte[],int,int)
org/apache/parquet/io/api/Binary/ByteArrayBackedBinary/toByteBuffer()#java/nio/ByteBuffer/wrap(byte[])
org/apache/parquet/io/api/Binary/ByteArrayBackedBinary/hashCode()#org/apache/parquet/io/api/Binary/hashCode(byte[],int,int)
org/apache/parquet/io/api/Binary/ByteArrayBackedBinary/writeTo(java.io.DataOutput)#java/io/DataOutput/write(byte[])
org/apache/parquet/io/api/Binary/ByteArrayBackedBinary/compareTo(org.apache.parquet.io.api.Binary)#org/apache/parquet/io/api/Binary/compareTo(byte[],int,int)
org/apache/parquet/io/api/Binary/ByteArrayBackedBinary/writeTo(java.io.OutputStream)#java/io/OutputStream/write(byte[])
org/apache/parquet/io/api/Binary/ByteArrayBackedBinary/equals(java.nio.ByteBuffer,int,int)#org/apache/parquet/io/api/Binary/equals(byte[],int,int,java.nio.ByteBuffer,int,int)
org/apache/parquet/tools/read/TestSimpleMapRecord/testBinary()#org/apache/parquet/tools/read/TestSimpleMapRecord/TestRecord/TestRecord(int,int)
org/apache/parquet/tools/read/TestSimpleMapRecord/testBinary()#org/apache/parquet/tools/read/SimpleMapRecord/keyToString(java.lang.Object)
org/apache/parquet/tools/read/TestSimpleMapRecord/testBinary()#org/apache/parquet/tools/read/SimpleMapRecord/SimpleMapRecord()
org/apache/parquet/tools/read/TestSimpleMapRecord/testBinary()#java/lang/String/getBytes()
org/apache/parquet/bytes/BytesInput/ByteArrayBytesInput/writeAllTo(java.io.OutputStream)#java/io/OutputStream/write(byte[],int,int)
org/apache/parquet/bytes/BytesInput/ByteArrayBytesInput/toByteBuffer()#java/nio/ByteBuffer/wrap(byte[],int,int)
org/apache/parquet/hadoop/TestInputFormat/setUp()#java/util/ArrayList/ArrayList()
org/apache/parquet/hadoop/TestInputFormat/setUp()#org/apache/parquet/hadoop/metadata/FileMetaData/FileMetaData(org.apache.parquet.schema.MessageType,java.util.Map,java.lang.String)
org/apache/parquet/hadoop/TestInputFormat/setUp()#org/apache/parquet/schema/MessageTypeParser/parseMessageType(java.lang.String)
org/apache/parquet/hadoop/TestInputFormat/setUp()#java/util/HashMap/HashMap()
org/apache/parquet/hadoop/TestInputFormat/setUp()#java/util/List/add(E)
org/apache/parquet/hadoop/TestInputFormat/setUp()#org/apache/parquet/hadoop/TestInputFormat/newBlock(long,long)
org/apache/parquet/hadoop/TestInputFormat/shouldOneSplitRowGroupOffsetBe(org.apache.parquet.hadoop.ParquetInputSplit,int[])#org/apache/parquet/hadoop/ParquetInputSplit/getRowGroupOffsets()
org/apache/parquet/hadoop/TestInputFormat/shouldOneSplitRowGroupOffsetBe(org.apache.parquet.hadoop.ParquetInputSplit,int[])#org/apache/parquet/hadoop/ParquetInputSplit/toString()
org/apache/parquet/hadoop/TestInputFormat/testRowGroupNotAlignToHDFSBlock()#org/apache/parquet/hadoop/TestInputFormat/withHDFSBlockSize(long[])
org/apache/parquet/hadoop/TestInputFormat/testRowGroupNotAlignToHDFSBlock()#org/apache/parquet/hadoop/TestInputFormat/generateSplitByMinMaxSize(long,long)
org/apache/parquet/hadoop/TestInputFormat/testRowGroupNotAlignToHDFSBlock()#org/apache/parquet/hadoop/TestInputFormat/shouldSplitLengthBe(java.util.List,int[])
org/apache/parquet/hadoop/TestInputFormat/testRowGroupNotAlignToHDFSBlock()#org/apache/parquet/hadoop/TestInputFormat/shouldSplitBlockSizeBe(java.util.List,int[])
org/apache/parquet/hadoop/TestInputFormat/testRowGroupNotAlignToHDFSBlock()#org/apache/parquet/hadoop/TestInputFormat/shouldSplitLocationBe(java.util.List,int[])
org/apache/parquet/hadoop/TestInputFormat/testFooterCacheValueIsNewer()#java/io/File/setLastModified(long)
org/apache/parquet/hadoop/TestInputFormat/testFooterCacheValueIsNewer()#org/apache/parquet/hadoop/TestInputFormat/getTempFile()
org/apache/parquet/hadoop/TestInputFormat/testFooterCacheValueIsNewer()#org/apache/parquet/hadoop/ParquetInputFormat/FootersCacheValue/isNewerThan(org.apache.parquet.hadoop.ParquetInputFormat.FootersCacheValue)
org/apache/parquet/hadoop/TestInputFormat/testFooterCacheValueIsNewer()#java/io/File/lastModified()
org/apache/parquet/hadoop/TestInputFormat/testFooterCacheValueIsNewer()#org/apache/parquet/hadoop/TestInputFormat/getDummyCacheValue(java.io.File,org.apache.parquet.hadoop.FileSystem)
org/apache/parquet/hadoop/TestInputFormat/testGenerateSplitsAlignedWithHDFSBlock()#org/apache/parquet/hadoop/TestInputFormat/withHDFSBlockSize(long[])
org/apache/parquet/hadoop/TestInputFormat/testGenerateSplitsAlignedWithHDFSBlock()#org/apache/parquet/hadoop/TestInputFormat/generateSplitByMinMaxSize(long,long)
org/apache/parquet/hadoop/TestInputFormat/testGenerateSplitsAlignedWithHDFSBlock()#org/apache/parquet/hadoop/TestInputFormat/shouldSplitLengthBe(java.util.List,int[])
org/apache/parquet/hadoop/TestInputFormat/testGenerateSplitsAlignedWithHDFSBlock()#org/apache/parquet/hadoop/TestInputFormat/shouldSplitBlockSizeBe(java.util.List,int[])
org/apache/parquet/hadoop/TestInputFormat/testGenerateSplitsAlignedWithHDFSBlock()#org/apache/parquet/hadoop/TestInputFormat/shouldSplitLocationBe(java.util.List,int[])
org/apache/parquet/hadoop/TestInputFormat/testGetFootersReturnsInPredictableOrder()#java/io/File/File(java.io.File,java.lang.String)
org/apache/parquet/hadoop/TestInputFormat/testGetFootersReturnsInPredictableOrder()#java/lang/String/format(java.lang.String,java.lang.Object[])
org/apache/parquet/hadoop/TestInputFormat/testGetFootersReturnsInPredictableOrder()#org/apache/parquet/hadoop/Footer/getFile()
org/apache/parquet/hadoop/TestInputFormat/testGetFootersReturnsInPredictableOrder()#java/io/File/getAbsolutePath()
org/apache/parquet/hadoop/TestInputFormat/testGetFootersReturnsInPredictableOrder()#java/util/List/get(int)
org/apache/parquet/hadoop/TestInputFormat/testGetFootersReturnsInPredictableOrder()#org/apache/parquet/hadoop/ParquetInputFormat/ParquetInputFormat()
org/apache/parquet/hadoop/TestInputFormat/testGetFootersReturnsInPredictableOrder()#org/apache/parquet/hadoop/ParquetInputFormat/getFooters(org.apache.parquet.hadoop.util.JobContext)
org/apache/parquet/hadoop/TestInputFormat/testGetFootersReturnsInPredictableOrder()#java/io/File/deleteOnExit()
org/apache/parquet/hadoop/TestInputFormat/testGetFootersReturnsInPredictableOrder()#org/apache/parquet/hadoop/TestInputFormat/createParquetFile(java.io.File)
org/apache/parquet/hadoop/TestInputFormat/testGenerateSplitsSmallerThanMaxSizeAndAlignToHDFS()#org/apache/parquet/hadoop/TestInputFormat/withHDFSBlockSize(long[])
org/apache/parquet/hadoop/TestInputFormat/testGenerateSplitsSmallerThanMaxSizeAndAlignToHDFS()#org/apache/parquet/hadoop/TestInputFormat/generateSplitByMinMaxSize(long,long)
org/apache/parquet/hadoop/TestInputFormat/testGenerateSplitsSmallerThanMaxSizeAndAlignToHDFS()#org/apache/parquet/hadoop/TestInputFormat/shouldSplitLengthBe(java.util.List,int[])
org/apache/parquet/hadoop/TestInputFormat/testGenerateSplitsSmallerThanMaxSizeAndAlignToHDFS()#org/apache/parquet/hadoop/TestInputFormat/shouldSplitBlockSizeBe(java.util.List,int[])
org/apache/parquet/hadoop/TestInputFormat/testGenerateSplitsSmallerThanMaxSizeAndAlignToHDFS()#org/apache/parquet/hadoop/TestInputFormat/shouldSplitLocationBe(java.util.List,int[])
org/apache/parquet/hadoop/TestInputFormat/generateSplitByDeprecatedConstructor(long,long)#org/apache/parquet/schema/Type/toString()
org/apache/parquet/hadoop/TestInputFormat/generateSplitByDeprecatedConstructor(long,long)#java/util/ArrayList/ArrayList()
org/apache/parquet/hadoop/TestInputFormat/generateSplitByDeprecatedConstructor(long,long)#org/apache/parquet/hadoop/ClientSideMetadataSplitStrategy/generateSplitInfo(java.util.List,org.apache.parquet.hadoop.BlockLocation[],long,long)
org/apache/parquet/hadoop/TestInputFormat/generateSplitByDeprecatedConstructor(long,long)#org/apache/parquet/hadoop/ParquetInputSplit/ParquetInputSplit(org.apache.parquet.hadoop.Path,long,long,java.lang.String[],java.util.List,java.lang.String,java.lang.String,java.util.Map,java.util.Map)
org/apache/parquet/hadoop/TestInputFormat/generateSplitByDeprecatedConstructor(long,long)#java/util/List/add(E)
org/apache/parquet/hadoop/TestInputFormat/testThrowExceptionWhenMaxSplitSizeIsNegative()#org/apache/parquet/hadoop/TestInputFormat/generateSplitByMinMaxSize(long,long)
org/apache/parquet/hadoop/TestInputFormat/testThrowExceptionWhenMaxSplitSizeIsNegative()#java/lang/Throwable/getMessage()
org/apache/parquet/hadoop/TestInputFormat/makeBlockFromStats(org.apache.parquet.column.statistics.IntStatistics,long)#org/apache/parquet/hadoop/metadata/BlockMetaData/BlockMetaData()
org/apache/parquet/hadoop/TestInputFormat/makeBlockFromStats(org.apache.parquet.column.statistics.IntStatistics,long)#org/apache/parquet/hadoop/metadata/BlockMetaData/setTotalByteSize(long)
org/apache/parquet/hadoop/TestInputFormat/makeBlockFromStats(org.apache.parquet.column.statistics.IntStatistics,long)#java/util/Arrays/asList(T[])
org/apache/parquet/hadoop/TestInputFormat/makeBlockFromStats(org.apache.parquet.column.statistics.IntStatistics,long)#org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/get(org.apache.parquet.hadoop.metadata.ColumnPath,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.hadoop.metadata.CompressionCodecName,java.util.Set,org.apache.parquet.column.statistics.Statistics,long,long,long,long,long)
org/apache/parquet/hadoop/TestInputFormat/makeBlockFromStats(org.apache.parquet.column.statistics.IntStatistics,long)#org/apache/parquet/hadoop/metadata/BlockMetaData/addColumn(org.apache.parquet.hadoop.metadata.ColumnChunkMetaData)
org/apache/parquet/hadoop/TestInputFormat/makeBlockFromStats(org.apache.parquet.column.statistics.IntStatistics,long)#org/apache/parquet/hadoop/metadata/BlockMetaData/setRowCount(long)
org/apache/parquet/hadoop/TestInputFormat/makeBlockFromStats(org.apache.parquet.column.statistics.IntStatistics,long)#org/apache/parquet/hadoop/metadata/ColumnPath/get(java.lang.String[])
org/apache/parquet/hadoop/TestInputFormat/makeBlockFromStats(org.apache.parquet.column.statistics.IntStatistics,long)#java/util/HashSet/HashSet(java.util.Collection)
org/apache/parquet/hadoop/TestInputFormat/withHDFSBlockSize(long[])#java/lang/Object/Object()
org/apache/parquet/hadoop/TestInputFormat/generateSplitByMinMaxSize(long,long)#org/apache/parquet/schema/Type/toString()
org/apache/parquet/hadoop/TestInputFormat/generateSplitByMinMaxSize(long,long)#org/apache/parquet/hadoop/ClientSideMetadataSplitStrategy/generateSplits(java.util.List,org.apache.parquet.hadoop.BlockLocation[],org.apache.parquet.hadoop.FileStatus,java.lang.String,java.util.Map,long,long)
org/apache/parquet/hadoop/TestInputFormat/getTempFile()#java/io/File/createTempFile(java.lang.String,java.lang.String)
org/apache/parquet/hadoop/TestInputFormat/getTempFile()#java/io/File/deleteOnExit()
org/apache/parquet/hadoop/TestInputFormat/shouldSplitStartBe(java.util.List,long[])#org/apache/parquet/hadoop/TestInputFormat/message(java.util.List)
org/apache/parquet/hadoop/TestInputFormat/shouldSplitStartBe(java.util.List,long[])#java/util/List/size()
org/apache/parquet/hadoop/TestInputFormat/shouldSplitStartBe(java.util.List,long[])#java/util/List/get(int)
org/apache/parquet/hadoop/TestInputFormat/testThrowExceptionWhenMaxSplitSizeIsSmallerThanMinSplitSize()#org/apache/parquet/hadoop/TestInputFormat/generateSplitByMinMaxSize(long,long)
org/apache/parquet/hadoop/TestInputFormat/testThrowExceptionWhenMaxSplitSizeIsSmallerThanMinSplitSize()#java/lang/Throwable/getMessage()
org/apache/parquet/hadoop/TestInputFormat/testDeprecatedConstructorOfParquetInputSplit()#org/apache/parquet/hadoop/TestInputFormat/shouldOneSplitRowGroupOffsetBe(org.apache.parquet.hadoop.ParquetInputSplit,int[])
org/apache/parquet/hadoop/TestInputFormat/testDeprecatedConstructorOfParquetInputSplit()#org/apache/parquet/hadoop/TestInputFormat/withHDFSBlockSize(long[])
org/apache/parquet/hadoop/TestInputFormat/testDeprecatedConstructorOfParquetInputSplit()#org/apache/parquet/hadoop/TestInputFormat/shouldSplitStartBe(java.util.List,long[])
org/apache/parquet/hadoop/TestInputFormat/testDeprecatedConstructorOfParquetInputSplit()#org/apache/parquet/hadoop/TestInputFormat/shouldSplitLengthBe(java.util.List,int[])
org/apache/parquet/hadoop/TestInputFormat/testDeprecatedConstructorOfParquetInputSplit()#java/util/List/get(int)
org/apache/parquet/hadoop/TestInputFormat/testDeprecatedConstructorOfParquetInputSplit()#org/apache/parquet/hadoop/TestInputFormat/shouldSplitBlockSizeBe(java.util.List,int[])
org/apache/parquet/hadoop/TestInputFormat/testDeprecatedConstructorOfParquetInputSplit()#org/apache/parquet/hadoop/TestInputFormat/generateSplitByDeprecatedConstructor(long,long)
org/apache/parquet/hadoop/TestInputFormat/message(java.util.List)#java/lang/String/valueOf(java.lang.Object)
org/apache/parquet/hadoop/TestInputFormat/message(java.util.List)#java/util/Arrays/toString(long[])
org/apache/parquet/hadoop/TestInputFormat/testGenerateSplitsCrossHDFSBlockBoundaryToSatisfyMinSize()#org/apache/parquet/hadoop/TestInputFormat/withHDFSBlockSize(long[])
org/apache/parquet/hadoop/TestInputFormat/testGenerateSplitsCrossHDFSBlockBoundaryToSatisfyMinSize()#org/apache/parquet/hadoop/TestInputFormat/generateSplitByMinMaxSize(long,long)
org/apache/parquet/hadoop/TestInputFormat/testGenerateSplitsCrossHDFSBlockBoundaryToSatisfyMinSize()#org/apache/parquet/hadoop/TestInputFormat/shouldSplitLengthBe(java.util.List,int[])
org/apache/parquet/hadoop/TestInputFormat/testGenerateSplitsCrossHDFSBlockBoundaryToSatisfyMinSize()#org/apache/parquet/hadoop/TestInputFormat/shouldSplitBlockSizeBe(java.util.List,int[])
org/apache/parquet/hadoop/TestInputFormat/testGenerateSplitsCrossHDFSBlockBoundaryToSatisfyMinSize()#org/apache/parquet/hadoop/TestInputFormat/shouldSplitLocationBe(java.util.List,int[])
org/apache/parquet/hadoop/TestInputFormat/testGenerateSplitsNotAlignedWithHDFSBlock()#org/apache/parquet/hadoop/TestInputFormat/withHDFSBlockSize(long[])
org/apache/parquet/hadoop/TestInputFormat/testGenerateSplitsNotAlignedWithHDFSBlock()#org/apache/parquet/hadoop/TestInputFormat/generateSplitByMinMaxSize(long,long)
org/apache/parquet/hadoop/TestInputFormat/testGenerateSplitsNotAlignedWithHDFSBlock()#org/apache/parquet/hadoop/TestInputFormat/shouldSplitLengthBe(java.util.List,int[])
org/apache/parquet/hadoop/TestInputFormat/testGenerateSplitsNotAlignedWithHDFSBlock()#org/apache/parquet/hadoop/TestInputFormat/shouldSplitBlockSizeBe(java.util.List,int[])
org/apache/parquet/hadoop/TestInputFormat/testGenerateSplitsNotAlignedWithHDFSBlock()#org/apache/parquet/hadoop/TestInputFormat/shouldSplitLocationBe(java.util.List,int[])
org/apache/parquet/hadoop/TestInputFormat/shouldSplitLengthBe(java.util.List,int[])#org/apache/parquet/hadoop/TestInputFormat/message(java.util.List)
org/apache/parquet/hadoop/TestInputFormat/shouldSplitLengthBe(java.util.List,int[])#java/util/List/size()
org/apache/parquet/hadoop/TestInputFormat/shouldSplitLengthBe(java.util.List,int[])#java/util/List/get(int)
org/apache/parquet/hadoop/TestInputFormat/testFooterCacheValueIsCurrent()#java/io/File/setLastModified(long)
org/apache/parquet/hadoop/TestInputFormat/testFooterCacheValueIsCurrent()#org/apache/parquet/hadoop/TestInputFormat/getTempFile()
org/apache/parquet/hadoop/TestInputFormat/testFooterCacheValueIsCurrent()#org/apache/parquet/hadoop/ParquetInputFormat/FileStatusWrapper/FileStatusWrapper(org.apache.parquet.hadoop.FileStatus)
org/apache/parquet/hadoop/TestInputFormat/testFooterCacheValueIsCurrent()#java/io/File/lastModified()
org/apache/parquet/hadoop/TestInputFormat/testFooterCacheValueIsCurrent()#java/io/File/getAbsolutePath()
org/apache/parquet/hadoop/TestInputFormat/testFooterCacheValueIsCurrent()#org/apache/parquet/hadoop/TestInputFormat/getDummyCacheValue(java.io.File,org.apache.parquet.hadoop.FileSystem)
org/apache/parquet/hadoop/TestInputFormat/testFooterCacheValueIsCurrent()#org/apache/parquet/hadoop/ParquetInputFormat/FootersCacheValue/isCurrent(org.apache.parquet.hadoop.ParquetInputFormat.FileStatusWrapper)
org/apache/parquet/hadoop/TestInputFormat/testOnlyOneKindOfFilterSupported()#org/apache/parquet/filter2/predicate/FilterApi/eq(C,T)
org/apache/parquet/hadoop/TestInputFormat/testOnlyOneKindOfFilterSupported()#java/lang/Throwable/getMessage()
org/apache/parquet/hadoop/TestInputFormat/testOnlyOneKindOfFilterSupported()#org/apache/parquet/filter2/predicate/FilterApi/or(org.apache.parquet.filter2.predicate.FilterPredicate,org.apache.parquet.filter2.predicate.FilterPredicate)
org/apache/parquet/hadoop/TestInputFormat/testOnlyOneKindOfFilterSupported()#org/apache/parquet/hadoop/ParquetInputFormat/setUnboundRecordFilter(org.apache.parquet.hadoop.Job,java.lang.Class)
org/apache/parquet/hadoop/TestInputFormat/testOnlyOneKindOfFilterSupported()#org/apache/parquet/hadoop/ParquetInputFormat/setFilterPredicate(org.apache.parquet.hadoop.Configuration,org.apache.parquet.filter2.predicate.FilterPredicate)
org/apache/parquet/hadoop/TestInputFormat/testOnlyOneKindOfFilterSupported()#org/apache/parquet/filter2/predicate/FilterApi/intColumn(java.lang.String)
org/apache/parquet/hadoop/TestInputFormat/getDummyCacheValue(java.io.File,org.apache.parquet.hadoop.FileSystem)#org/apache/parquet/hadoop/ParquetInputFormat/FileStatusWrapper/FileStatusWrapper(org.apache.parquet.hadoop.FileStatus)
org/apache/parquet/hadoop/TestInputFormat/getDummyCacheValue(java.io.File,org.apache.parquet.hadoop.FileSystem)#org/apache/parquet/hadoop/Footer/Footer(org.apache.parquet.hadoop.Path,org.apache.parquet.hadoop.metadata.ParquetMetadata)
org/apache/parquet/hadoop/TestInputFormat/getDummyCacheValue(java.io.File,org.apache.parquet.hadoop.FileSystem)#org/apache/parquet/hadoop/ParquetInputFormat/FootersCacheValue/FootersCacheValue(org.apache.parquet.hadoop.ParquetInputFormat.FileStatusWrapper,org.apache.parquet.hadoop.Footer)
org/apache/parquet/hadoop/TestInputFormat/getDummyCacheValue(java.io.File,org.apache.parquet.hadoop.FileSystem)#org/apache/parquet/hadoop/ParquetInputFormat/FootersCacheValue/isCurrent(org.apache.parquet.hadoop.ParquetInputFormat.FileStatusWrapper)
org/apache/parquet/hadoop/TestInputFormat/getDummyCacheValue(java.io.File,org.apache.parquet.hadoop.FileSystem)#java/io/File/getPath()
org/apache/parquet/hadoop/TestInputFormat/newBlock(long,long)#org/apache/parquet/hadoop/metadata/BlockMetaData/BlockMetaData()
org/apache/parquet/hadoop/TestInputFormat/newBlock(long,long)#org/apache/parquet/hadoop/metadata/BlockMetaData/setTotalByteSize(long)
org/apache/parquet/hadoop/TestInputFormat/newBlock(long,long)#org/apache/parquet/column/statistics/BinaryStatistics/BinaryStatistics()
org/apache/parquet/hadoop/TestInputFormat/newBlock(long,long)#java/util/Arrays/asList(T[])
org/apache/parquet/hadoop/TestInputFormat/newBlock(long,long)#org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/get(org.apache.parquet.hadoop.metadata.ColumnPath,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.hadoop.metadata.CompressionCodecName,java.util.Set,org.apache.parquet.column.statistics.Statistics,long,long,long,long,long)
org/apache/parquet/hadoop/TestInputFormat/newBlock(long,long)#org/apache/parquet/hadoop/metadata/BlockMetaData/addColumn(org.apache.parquet.hadoop.metadata.ColumnChunkMetaData)
org/apache/parquet/hadoop/TestInputFormat/newBlock(long,long)#org/apache/parquet/hadoop/metadata/ColumnPath/get(java.lang.String[])
org/apache/parquet/hadoop/TestInputFormat/newBlock(long,long)#java/util/HashSet/HashSet(java.util.Collection)
org/apache/parquet/hadoop/TestInputFormat/testMultipleRowGroupsInABlockToAlignHDFSBlock()#org/apache/parquet/hadoop/TestInputFormat/withHDFSBlockSize(long[])
org/apache/parquet/hadoop/TestInputFormat/testMultipleRowGroupsInABlockToAlignHDFSBlock()#org/apache/parquet/hadoop/TestInputFormat/generateSplitByMinMaxSize(long,long)
org/apache/parquet/hadoop/TestInputFormat/testMultipleRowGroupsInABlockToAlignHDFSBlock()#org/apache/parquet/hadoop/TestInputFormat/shouldSplitLengthBe(java.util.List,int[])
org/apache/parquet/hadoop/TestInputFormat/testMultipleRowGroupsInABlockToAlignHDFSBlock()#org/apache/parquet/hadoop/TestInputFormat/shouldSplitBlockSizeBe(java.util.List,int[])
org/apache/parquet/hadoop/TestInputFormat/testMultipleRowGroupsInABlockToAlignHDFSBlock()#org/apache/parquet/hadoop/TestInputFormat/shouldSplitLocationBe(java.util.List,int[])
org/apache/parquet/hadoop/TestInputFormat/shouldSplitBlockSizeBe(java.util.List,int[])#org/apache/parquet/hadoop/ParquetInputSplit/getRowGroupOffsets()
org/apache/parquet/hadoop/TestInputFormat/shouldSplitBlockSizeBe(java.util.List,int[])#org/apache/parquet/hadoop/TestInputFormat/message(java.util.List)
org/apache/parquet/hadoop/TestInputFormat/shouldSplitBlockSizeBe(java.util.List,int[])#java/util/List/size()
org/apache/parquet/hadoop/TestInputFormat/shouldSplitBlockSizeBe(java.util.List,int[])#java/util/List/get(int)
org/apache/parquet/hadoop/TestInputFormat/createParquetFile(java.io.File)#org/apache/parquet/hadoop/ParquetFileWriter/startColumn(org.apache.parquet.column.ColumnDescriptor,long,org.apache.parquet.hadoop.metadata.CompressionCodecName)
org/apache/parquet/hadoop/TestInputFormat/createParquetFile(java.io.File)#org/apache/parquet/hadoop/ParquetFileWriter/endColumn()
org/apache/parquet/hadoop/TestInputFormat/createParquetFile(java.io.File)#org/apache/parquet/schema/MessageTypeParser/parseMessageType(java.lang.String)
org/apache/parquet/hadoop/TestInputFormat/createParquetFile(java.io.File)#java/util/HashMap/HashMap()
org/apache/parquet/hadoop/TestInputFormat/createParquetFile(java.io.File)#org/apache/parquet/hadoop/ParquetFileWriter/endBlock()
org/apache/parquet/hadoop/TestInputFormat/createParquetFile(java.io.File)#java/io/File/toURI()
org/apache/parquet/hadoop/TestInputFormat/createParquetFile(java.io.File)#org/apache/parquet/bytes/BytesInput/from(byte[])
org/apache/parquet/hadoop/TestInputFormat/createParquetFile(java.io.File)#org/apache/parquet/hadoop/ParquetFileWriter/end(java.util.Map)
org/apache/parquet/hadoop/TestInputFormat/createParquetFile(java.io.File)#org/apache/parquet/hadoop/ParquetFileWriter/start()
org/apache/parquet/hadoop/TestInputFormat/createParquetFile(java.io.File)#org/apache/parquet/hadoop/ParquetFileWriter/writeDataPage(int,int,org.apache.parquet.bytes.BytesInput,org.apache.parquet.column.statistics.Statistics,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding)
org/apache/parquet/hadoop/TestInputFormat/createParquetFile(java.io.File)#org/apache/parquet/column/statistics/BinaryStatistics/BinaryStatistics()
org/apache/parquet/hadoop/TestInputFormat/createParquetFile(java.io.File)#org/apache/parquet/hadoop/ParquetFileWriter/ParquetFileWriter(org.apache.parquet.hadoop.Configuration,org.apache.parquet.schema.MessageType,org.apache.parquet.hadoop.Path)
org/apache/parquet/hadoop/TestInputFormat/createParquetFile(java.io.File)#org/apache/parquet/schema/MessageType/getColumnDescription(java.lang.String[])
org/apache/parquet/hadoop/TestInputFormat/createParquetFile(java.io.File)#org/apache/parquet/hadoop/ParquetFileWriter/startBlock(long)
org/apache/parquet/hadoop/TestInputFormat/testGetFilter()#org/apache/parquet/filter2/compat/FilterCompat/FilterPredicateCompat/getFilterPredicate()
org/apache/parquet/hadoop/TestInputFormat/testGetFilter()#org/apache/parquet/filter2/predicate/FilterApi/eq(C,T)
org/apache/parquet/hadoop/TestInputFormat/testGetFilter()#org/apache/parquet/hadoop/ParquetInputFormat/getFilter(org.apache.parquet.hadoop.Configuration)
org/apache/parquet/hadoop/TestInputFormat/testGetFilter()#org/apache/parquet/filter2/predicate/FilterApi/notEq(C,T)
org/apache/parquet/hadoop/TestInputFormat/testGetFilter()#org/apache/parquet/filter2/predicate/FilterApi/or(org.apache.parquet.filter2.predicate.FilterPredicate,org.apache.parquet.filter2.predicate.FilterPredicate)
org/apache/parquet/hadoop/TestInputFormat/testGetFilter()#org/apache/parquet/filter2/predicate/FilterApi/and(org.apache.parquet.filter2.predicate.FilterPredicate,org.apache.parquet.filter2.predicate.FilterPredicate)
org/apache/parquet/hadoop/TestInputFormat/testGetFilter()#org/apache/parquet/filter2/predicate/FilterApi/not(org.apache.parquet.filter2.predicate.FilterPredicate)
org/apache/parquet/hadoop/TestInputFormat/testGetFilter()#org/apache/parquet/hadoop/ParquetInputFormat/setFilterPredicate(org.apache.parquet.hadoop.Configuration,org.apache.parquet.filter2.predicate.FilterPredicate)
org/apache/parquet/hadoop/TestInputFormat/testGetFilter()#org/apache/parquet/filter2/predicate/FilterApi/intColumn(java.lang.String)
org/apache/parquet/hadoop/TestInputFormat/shouldSplitLocationBe(java.util.List,int[])#org/apache/parquet/hadoop/TestInputFormat/message(java.util.List)
org/apache/parquet/hadoop/TestInputFormat/shouldSplitLocationBe(java.util.List,int[])#java/util/List/size()
org/apache/parquet/hadoop/TestInputFormat/shouldSplitLocationBe(java.util.List,int[])#java/util/List/get(int)
org/apache/parquet/hadoop/TestInputFormat/shouldSplitLocationBe(java.util.List,int[])#java/util/Arrays/toString(long[])
org/apache/parquet/TestPreconditions/testCheckState()#org/apache/parquet/Preconditions/checkState(boolean,java.lang.String,java.lang.Object[])
org/apache/parquet/TestPreconditions/testCheckState()#java/lang/Throwable/getMessage()
org/apache/parquet/TestPreconditions/testCheckArgument()#java/lang/Throwable/getMessage()
org/apache/parquet/TestPreconditions/testCheckArgument()#org/apache/parquet/Preconditions/checkArgument(boolean,java.lang.String,java.lang.Object[])
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForInteger/writeInteger(int)#org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForInteger/flushBlockBuffer()
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForInteger/reset()#org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriter/reset()
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForInteger/close()#org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriter/close()
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForInteger/flushBlockBuffer()#org/apache/parquet/column/values/bitpacking/BytePacker/pack8Values(int[],int,byte[],int)
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForInteger/flushBlockBuffer()#org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriter/writeBitWidthForMiniBlock(int)
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForInteger/flushBlockBuffer()#org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForInteger/writeMinDelta()
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForInteger/flushBlockBuffer()#org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriter/getMiniBlockCountToFlush(double)
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForInteger/flushBlockBuffer()#org/apache/parquet/bytes/CapacityByteArrayOutputStream/write(byte[],int,int)
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForInteger/flushBlockBuffer()#org/apache/parquet/column/values/bitpacking/Packer/newBytePacker(int)
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForInteger/flushBlockBuffer()#org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForInteger/calculateBitWidthsForDeltaBlockBuffer(int)
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForInteger/getBytes()#org/apache/parquet/bytes/BytesInput/fromZigZagVarInt(int)
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForInteger/getBytes()#org/apache/parquet/bytes/BytesInput/concat(org.apache.parquet.bytes.BytesInput[])
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForInteger/getBytes()#org/apache/parquet/column/values/delta/DeltaBinaryPackingConfig/toBytesInput()
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForInteger/getBytes()#org/apache/parquet/bytes/BytesInput/from(org.apache.parquet.bytes.CapacityByteArrayOutputStream)
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForInteger/getBytes()#org/apache/parquet/bytes/BytesInput/fromUnsignedVarInt(int)
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForInteger/getBytes()#org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForInteger/flushBlockBuffer()
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForInteger/writeMinDelta()#org/apache/parquet/io/ParquetEncodingException/ParquetEncodingException(java.lang.String,java.lang.Throwable)
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForInteger/writeMinDelta()#org/apache/parquet/bytes/BytesUtils/writeZigZagVarInt(int,java.io.OutputStream)
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForInteger/calculateBitWidthsForDeltaBlockBuffer(int)#java/lang/Integer/numberOfLeadingZeros(int)
org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForInteger/calculateBitWidthsForDeltaBlockBuffer(int)#java/lang/Math/min(int,int)
org/apache/parquet/format/converter/ParquetMetadataConverter/OffsetMetadataFilter/accept(org.apache.parquet.format.converter.ParquetMetadataConverter.MetadataFilterVisitor)#org/apache/parquet/format/converter/ParquetMetadataConverter/MetadataFilterVisitor/visit(org.apache.parquet.format.converter.ParquetMetadataConverter.OffsetMetadataFilter)
org/apache/parquet/format/converter/ParquetMetadataConverter/OffsetMetadataFilter/contains(long)#java/util/Set/contains(java.lang.Object)
org/apache/parquet/tools/command/DumpCommand/DumpGroupConverter/getConverter(int)#org/apache/parquet/tools/command/DumpCommand/DumpConverter/DumpConverter()
org/apache/parquet/io/ColumnIOFactory/getColumnIO(org.apache.parquet.schema.MessageType)#org/apache/parquet/io/ColumnIOFactory/getColumnIO(org.apache.parquet.schema.MessageType,org.apache.parquet.schema.MessageType)
org/apache/parquet/io/ColumnIOFactory/getColumnIO(org.apache.parquet.schema.MessageType,org.apache.parquet.schema.MessageType,boolean)#org/apache/parquet/schema/MessageType/accept(org.apache.parquet.schema.TypeVisitor)
org/apache/parquet/io/ColumnIOFactory/getColumnIO(org.apache.parquet.schema.MessageType,org.apache.parquet.schema.MessageType,boolean)#org/apache/parquet/io/ColumnIOFactory/ColumnIOCreatorVisitor/ColumnIOCreatorVisitor(boolean,org.apache.parquet.schema.MessageType,java.lang.String,boolean)
org/apache/parquet/io/ColumnIOFactory/getColumnIO(org.apache.parquet.schema.MessageType,org.apache.parquet.schema.MessageType,boolean)#org/apache/parquet/io/ColumnIOFactory/ColumnIOCreatorVisitor/getColumnIO()
org/apache/parquet/io/ColumnIOFactory/getColumnIO(org.apache.parquet.schema.MessageType,org.apache.parquet.schema.MessageType)#org/apache/parquet/io/ColumnIOFactory/getColumnIO(org.apache.parquet.schema.MessageType,org.apache.parquet.schema.MessageType,boolean)
org/apache/parquet/column/impl/ColumnReaderImpl/Binding/getLong()#java/lang/UnsupportedOperationException/UnsupportedOperationException()
org/apache/parquet/column/impl/ColumnReaderImpl/Binding/getFloat()#java/lang/UnsupportedOperationException/UnsupportedOperationException()
org/apache/parquet/column/impl/ColumnReaderImpl/Binding/getBinary()#java/lang/UnsupportedOperationException/UnsupportedOperationException()
org/apache/parquet/column/impl/ColumnReaderImpl/Binding/getInteger()#java/lang/UnsupportedOperationException/UnsupportedOperationException()
org/apache/parquet/column/impl/ColumnReaderImpl/Binding/getBoolean()#java/lang/UnsupportedOperationException/UnsupportedOperationException()
org/apache/parquet/column/impl/ColumnReaderImpl/Binding/getDictionaryId()#java/lang/UnsupportedOperationException/UnsupportedOperationException()
org/apache/parquet/column/impl/ColumnReaderImpl/Binding/getDouble()#java/lang/UnsupportedOperationException/UnsupportedOperationException()
org/apache/parquet/filter/NotRecordFilter/not(org.apache.parquet.filter.UnboundRecordFilter)#org/apache/parquet/filter/NotRecordFilter/not(org/apache/parquet/filter/UnboundRecordFilter)/$anonymous1/()
org/apache/parquet/filter/NotRecordFilter/not(org.apache.parquet.filter.UnboundRecordFilter)#org/apache/parquet/Preconditions/checkNotNull(T,java.lang.String)
org/apache/parquet/filter/NotRecordFilter/isMatch()#org/apache/parquet/filter/RecordFilter/isMatch()
org/apache/parquet/filter/ColumnPredicates/equalTo(double)#org/apache/parquet/filter/ColumnPredicates/equalTo(double)/$anonymous1/()
org/apache/parquet/filter/ColumnPredicates/applyFunctionToLong(org.apache.parquet.filter.ColumnPredicates.LongPredicateFunction)#org/apache/parquet/filter/ColumnPredicates/applyFunctionToLong(org/apache/parquet/filter/ColumnPredicates/LongPredicateFunction)/$anonymous1/()
org/apache/parquet/filter/ColumnPredicates/equalTo(int)#org/apache/parquet/filter/ColumnPredicates/equalTo(int)/$anonymous1/()
org/apache/parquet/filter/ColumnPredicates/equalTo(long)#org/apache/parquet/filter/ColumnPredicates/equalTo(long)/$anonymous1/()
org/apache/parquet/filter/ColumnPredicates/equalTo(float)#org/apache/parquet/filter/ColumnPredicates/equalTo(float)/$anonymous1/()
org/apache/parquet/filter/ColumnPredicates/applyFunctionToString(org.apache.parquet.filter.ColumnPredicates.PredicateFunction)#org/apache/parquet/filter/ColumnPredicates/applyFunctionToString(org/apache/parquet/filter/ColumnPredicates/PredicateFunction)/$anonymous1/()
org/apache/parquet/filter/ColumnPredicates/applyFunctionToBinary(org.apache.parquet.filter.ColumnPredicates.PredicateFunction)#org/apache/parquet/filter/ColumnPredicates/applyFunctionToBinary(org/apache/parquet/filter/ColumnPredicates/PredicateFunction)/$anonymous1/()
org/apache/parquet/filter/ColumnPredicates/equalTo(boolean)#org/apache/parquet/filter/ColumnPredicates/equalTo(boolean)/$anonymous1/()
org/apache/parquet/filter/ColumnPredicates/equalTo(java.lang.String)#org/apache/parquet/filter/ColumnPredicates/equalTo(java/lang/String)/$anonymous1/()
org/apache/parquet/filter/ColumnPredicates/equalTo(java.lang.String)#org/apache/parquet/Preconditions/checkNotNull(T,java.lang.String)
org/apache/parquet/filter/ColumnPredicates/applyFunctionToDouble(org.apache.parquet.filter.ColumnPredicates.DoublePredicateFunction)#org/apache/parquet/filter/ColumnPredicates/applyFunctionToDouble(org/apache/parquet/filter/ColumnPredicates/DoublePredicateFunction)/$anonymous1/()
org/apache/parquet/filter/ColumnPredicates/equalTo(E)#java/lang/Enum/name()
org/apache/parquet/filter/ColumnPredicates/equalTo(E)#org/apache/parquet/filter/ColumnPredicates/equalTo(E)/$anonymous1/()
org/apache/parquet/filter/ColumnPredicates/equalTo(E)#org/apache/parquet/Preconditions/checkNotNull(T,java.lang.String)
org/apache/parquet/filter/ColumnPredicates/applyFunctionToFloat(org.apache.parquet.filter.ColumnPredicates.FloatPredicateFunction)#org/apache/parquet/filter/ColumnPredicates/applyFunctionToFloat(org/apache/parquet/filter/ColumnPredicates/FloatPredicateFunction)/$anonymous1/()
org/apache/parquet/filter/ColumnPredicates/applyFunctionToBoolean(org.apache.parquet.filter.ColumnPredicates.BooleanPredicateFunction)#org/apache/parquet/filter/ColumnPredicates/applyFunctionToBoolean(org/apache/parquet/filter/ColumnPredicates/BooleanPredicateFunction)/$anonymous1/()
org/apache/parquet/filter/ColumnPredicates/applyFunctionToInteger(org.apache.parquet.filter.ColumnPredicates.IntegerPredicateFunction)#org/apache/parquet/filter/ColumnPredicates/applyFunctionToInteger(org/apache/parquet/filter/ColumnPredicates/IntegerPredicateFunction)/$anonymous1/()
org/apache/parquet/statistics/RandomValues/Int96Generator/nextBinaryValue()#org/apache/parquet/statistics/RandomValues/Int96Generator/nextValue()
org/apache/parquet/statistics/RandomValues/Int96Generator/nextBinaryValue()#java/math/BigInteger/toByteArray()
org/apache/parquet/statistics/RandomValues/Int96Generator/nextBinaryValue()#org/apache/parquet/statistics/RandomValues/RandomBinaryBase/asReusedBinary(byte[])
org/apache/parquet/statistics/RandomValues/Int96Generator/nextValue()#java/math/BigInteger/add(java.math.BigInteger)
org/apache/parquet/statistics/RandomValues/Int96Generator/nextValue()#org/apache/parquet/statistics/RandomValues/RandomValueGenerator/randomInt96(java.math.BigInteger)
org/apache/parquet/avro/AvroIndexedRecordConverter/AvroUnionConverter/end()#org/apache/parquet/avro/ParentValueContainer/add(java.lang.Object)
org/apache/hadoop/hive/ql/io/parquet/serde/TestDeepParquetHiveMapInspector/testRegularMap()#org/apache/hadoop/hive/ql/io/parquet/serde/DeepParquetHiveMapInspector/getMapValueElement(java.lang.Object,java.lang.Object)
org/apache/hadoop/hive/ql/io/parquet/serde/TestDeepParquetHiveMapInspector/testRegularMap()#java/lang/Object/Object()
org/apache/hadoop/hive/ql/io/parquet/serde/TestDeepParquetHiveMapInspector/testNullMap()#org/apache/hadoop/hive/ql/io/parquet/serde/DeepParquetHiveMapInspector/getMapValueElement(java.lang.Object,java.lang.Object)
org/apache/hadoop/hive/ql/io/parquet/serde/TestDeepParquetHiveMapInspector/testNullContainer()#org/apache/hadoop/hive/ql/io/parquet/serde/DeepParquetHiveMapInspector/getMapValueElement(java.lang.Object,java.lang.Object)
org/apache/hadoop/hive/ql/io/parquet/serde/TestDeepParquetHiveMapInspector/testEmptyContainer()#org/apache/hadoop/hive/ql/io/parquet/serde/DeepParquetHiveMapInspector/getMapValueElement(java.lang.Object,java.lang.Object)
org/apache/hadoop/hive/ql/io/parquet/serde/TestDeepParquetHiveMapInspector/testEmptyContainer()#java/lang/Object/Object()
org/apache/hadoop/hive/ql/io/parquet/serde/TestDeepParquetHiveMapInspector/testHashMap()#org/apache/hadoop/hive/ql/io/parquet/serde/DeepParquetHiveMapInspector/getMapValueElement(java.lang.Object,java.lang.Object)
org/apache/hadoop/hive/ql/io/parquet/serde/TestDeepParquetHiveMapInspector/testHashMap()#java/util/HashMap/HashMap()
org/apache/hadoop/hive/ql/io/parquet/serde/TestDeepParquetHiveMapInspector/setUp()#org/apache/hadoop/hive/ql/io/parquet/serde/DeepParquetHiveMapInspector/DeepParquetHiveMapInspector(org.apache.hadoop.hive.ql.io.parquet.serde.ObjectInspector,org.apache.hadoop.hive.ql.io.parquet.serde.ObjectInspector)
org/apache/parquet/hadoop/ColumnChunkPageReadStore/ColumnChunkPageReader/readDictionaryPage()#org/apache/parquet/column/page/DictionaryPage/getBytes()
org/apache/parquet/hadoop/ColumnChunkPageReadStore/ColumnChunkPageReader/readDictionaryPage()#org/apache/parquet/column/page/Page/getUncompressedSize()
org/apache/parquet/hadoop/ColumnChunkPageReadStore/ColumnChunkPageReader/readDictionaryPage()#org/apache/parquet/column/page/DictionaryPage/DictionaryPage(org.apache.parquet.bytes.BytesInput,int,org.apache.parquet.column.Encoding)
org/apache/parquet/hadoop/ColumnChunkPageReadStore/ColumnChunkPageReader/readDictionaryPage()#org/apache/parquet/hadoop/CodecFactory/BytesDecompressor/decompress(org.apache.parquet.bytes.BytesInput,int)
org/apache/parquet/hadoop/ColumnChunkPageReadStore/ColumnChunkPageReader/readDictionaryPage()#org/apache/parquet/column/page/DictionaryPage/getEncoding()
org/apache/parquet/hadoop/ColumnChunkPageReadStore/ColumnChunkPageReader/readDictionaryPage()#org/apache/parquet/io/ParquetDecodingException/ParquetDecodingException(java.lang.String,java.lang.Throwable)
org/apache/parquet/hadoop/ColumnChunkPageReadStore/ColumnChunkPageReader/readDictionaryPage()#org/apache/parquet/column/page/DictionaryPage/getDictionarySize()
org/apache/parquet/hadoop/ColumnChunkPageReadStore/ColumnChunkPageReader/readPage()#java/util/List/remove(int)
org/apache/parquet/hadoop/ColumnChunkPageReadStore/ColumnChunkPageReader/readPage()#java/util/List/isEmpty()
org/apache/parquet/hadoop/ColumnChunkPageReadStore/ColumnChunkPageReader/readPage()#org/apache/parquet/column/page/DataPage/accept(org.apache.parquet.column.page.DataPage.Visitor)
org/apache/parquet/hadoop/ColumnChunkPageReadStore/ColumnChunkPageReader/readPage()#org/apache/parquet/hadoop/ColumnChunkPageReadStore/ColumnChunkPageReader/readPage()/$anonymous1/()
org/apache/parquet/schema/Types/BaseMapBuilder/ValueBuilder/named(java.lang.String)#org/apache/parquet/schema/Types/Builder/named(java.lang.String)
org/apache/parquet/schema/Types/BaseMapBuilder/ValueBuilder/named(java.lang.String)#org/apache/parquet/schema/Types/BasePrimitiveBuilder/build(java.lang.String)
org/apache/parquet/schema/Types/BaseMapBuilder/ValueBuilder/named(java.lang.String)#org/apache/parquet/schema/Types/BaseMapBuilder/setValueType(org.apache.parquet.schema.Type)
org/apache/parquet/hadoop/example/GroupReadSupport/prepareForRead(org.apache.parquet.hadoop.Configuration,java.util.Map,org.apache.parquet.schema.MessageType,org.apache.parquet.hadoop.api.ReadSupport.ReadContext)#org/apache/parquet/example/data/simple/convert/GroupRecordConverter/GroupRecordConverter(org.apache.parquet.schema.MessageType)
org/apache/parquet/hadoop/example/GroupReadSupport/prepareForRead(org.apache.parquet.hadoop.Configuration,java.util.Map,org.apache.parquet.schema.MessageType,org.apache.parquet.hadoop.api.ReadSupport.ReadContext)#org/apache/parquet/hadoop/api/ReadSupport/ReadContext/getRequestedSchema()
org/apache/parquet/hadoop/example/GroupReadSupport/init(org.apache.parquet.hadoop.Configuration,java.util.Map,org.apache.parquet.schema.MessageType)#org/apache/parquet/hadoop/api/ReadSupport/ReadContext/ReadContext(org.apache.parquet.schema.MessageType)
org/apache/parquet/hadoop/example/GroupReadSupport/init(org.apache.parquet.hadoop.Configuration,java.util.Map,org.apache.parquet.schema.MessageType)#org/apache/parquet/hadoop/api/ReadSupport/getSchemaForRead(org.apache.parquet.schema.MessageType,java.lang.String)
org/apache/parquet/hadoop/mapred/DeprecatedParquetOutputFormat/getRecordWriter(org.apache.parquet.hadoop.FileSystem,org.apache.parquet.hadoop.JobConf,java.lang.String,org.apache.hadoop.hive.ql.io.parquet.Progressable)#org/apache/parquet/hadoop/mapred/DeprecatedParquetOutputFormat/RecordWriterWrapper/RecordWriterWrapper(org.apache.parquet.hadoop.ParquetOutputFormat,org.apache.parquet.hadoop.FileSystem,org.apache.parquet.hadoop.JobConf,java.lang.String,org.apache.hadoop.hive.ql.io.parquet.Progressable)
org/apache/parquet/hadoop/mapred/DeprecatedParquetOutputFormat/getCodec(org.apache.parquet.hadoop.JobConf)#org/apache/parquet/hadoop/codec/CodecConfig/from(org.apache.parquet.hadoop.JobConf)
org/apache/parquet/hadoop/mapred/DeprecatedParquetOutputFormat/getDefaultWorkFile(org.apache.parquet.hadoop.JobConf,java.lang.String,java.lang.String)#java/lang/Object/Object()
org/apache/parquet/hadoop/mapred/DeprecatedParquetOutputFormat/setWriteSupportClass(org.apache.parquet.hadoop.Configuration,java.lang.Class)#java/lang/Class/getName()
org/apache/parquet/hadoop/mapred/DeprecatedParquetOutputFormat/setCompression(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.metadata.CompressionCodecName)#java/lang/Enum/name()
org/apache/parquet/schema/Types/BasePrimitiveBuilder/decimalMetadata()#org/apache/parquet/schema/DecimalMetadata/DecimalMetadata(int,int)
org/apache/parquet/schema/Types/BasePrimitiveBuilder/decimalMetadata()#org/apache/parquet/Preconditions/checkArgument(boolean,java.lang.String)
org/apache/parquet/schema/Types/BasePrimitiveBuilder/build(java.lang.String)#org/apache/parquet/Preconditions/checkState(boolean,java.lang.String)
org/apache/parquet/schema/Types/BasePrimitiveBuilder/build(java.lang.String)#java/lang/Enum/toString()
org/apache/parquet/schema/Types/BasePrimitiveBuilder/build(java.lang.String)#org/apache/parquet/schema/Types/BasePrimitiveBuilder/maxPrecision(int)
org/apache/parquet/schema/Types/BasePrimitiveBuilder/build(java.lang.String)#org/apache/parquet/schema/DecimalMetadata/getPrecision()
org/apache/parquet/schema/Types/BasePrimitiveBuilder/build(java.lang.String)#org/apache/parquet/Preconditions/checkArgument(boolean,java.lang.String)
org/apache/parquet/schema/Types/BasePrimitiveBuilder/build(java.lang.String)#org/apache/parquet/schema/PrimitiveType/PrimitiveType(org.apache.parquet.schema.Type.Repetition,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,int,java.lang.String,org.apache.parquet.schema.OriginalType,org.apache.parquet.schema.DecimalMetadata,org.apache.parquet.schema.Type.ID)
org/apache/parquet/schema/Types/BasePrimitiveBuilder/build(java.lang.String)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/apache/parquet/schema/Types/BasePrimitiveBuilder/build(java.lang.String)#org/apache/parquet/schema/Types/BasePrimitiveBuilder/decimalMetadata()
org/apache/parquet/schema/Types/BasePrimitiveBuilder/precision(int)#org/apache/parquet/schema/Types/BasePrimitiveBuilder/self()
org/apache/parquet/schema/Types/BasePrimitiveBuilder/length(int)#org/apache/parquet/schema/Types/BasePrimitiveBuilder/self()
org/apache/parquet/schema/Types/BasePrimitiveBuilder/scale(int)#org/apache/parquet/schema/Types/BasePrimitiveBuilder/self()
org/apache/parquet/schema/Types/BasePrimitiveBuilder/maxPrecision(int)#java/lang/Math/floor(double)
org/apache/parquet/schema/Types/BasePrimitiveBuilder/maxPrecision(int)#java/lang/Math/round(double)
org/apache/parquet/schema/Types/BasePrimitiveBuilder/maxPrecision(int)#java/lang/Math/log10(double)
org/apache/parquet/schema/Types/BasePrimitiveBuilder/maxPrecision(int)#java/lang/Math/pow(double,double)
org/apache/parquet/arrow/schema/TestSchemaConverter/testAllMap()#org/apache/parquet/arrow/schema/SchemaConverter/map(org.apache.parquet.pig.Schema,org.apache.parquet.schema.MessageType)
org/apache/parquet/arrow/schema/TestSchemaConverter/testAllMap()#org/apache/parquet/arrow/schema/TestSchemaConverter/toSummaryString(org.apache.parquet.arrow.schema.SchemaMapping)
org/apache/parquet/arrow/schema/TestSchemaConverter/testAllArrowToParquet()#org/apache/parquet/schema/Type/toString()
org/apache/parquet/arrow/schema/TestSchemaConverter/testAllArrowToParquet()#org/apache/parquet/arrow/schema/SchemaConverter/fromArrow(org.apache.parquet.pig.Schema)
org/apache/parquet/arrow/schema/TestSchemaConverter/field(java.lang.String,boolean,org.apache.parquet.arrow.schema.ArrowType,org.apache.parquet.arrow.schema.Field[])#java/util/Arrays/asList(T[])
org/apache/parquet/arrow/schema/TestSchemaConverter/field(java.lang.String,boolean,org.apache.parquet.arrow.schema.ArrowType,org.apache.parquet.arrow.schema.Field[])#java/lang/Object/Object()
org/apache/parquet/arrow/schema/TestSchemaConverter/testComplexArrowToParquet()#org/apache/parquet/schema/Type/toString()
org/apache/parquet/arrow/schema/TestSchemaConverter/testComplexArrowToParquet()#org/apache/parquet/arrow/schema/SchemaConverter/fromArrow(org.apache.parquet.pig.Schema)
org/apache/parquet/arrow/schema/TestSchemaConverter/toSummaryString(org.apache.parquet.arrow.schema.SchemaMapping)#org/apache/parquet/arrow/schema/TestSchemaConverter/toSummaryString(java.util.List)
org/apache/parquet/arrow/schema/TestSchemaConverter/toSummaryString(org.apache.parquet.arrow.schema.SchemaMapping)#org/apache/parquet/arrow/schema/SchemaMapping/getChildren()
org/apache/parquet/arrow/schema/TestSchemaConverter/assertEquals(org.apache.parquet.pig.Schema,org.apache.parquet.pig.Schema)#org/apache/parquet/arrow/schema/TestSchemaConverter/compareFields(java.util.List,java.util.List)
org/apache/parquet/arrow/schema/TestSchemaConverter/toSummaryString(java.util.List)#org/apache/parquet/arrow/schema/TestSchemaConverter/toSummaryString(java.util.List)
org/apache/parquet/arrow/schema/TestSchemaConverter/toSummaryString(java.util.List)#org/apache/parquet/arrow/schema/SchemaMapping/TypeMapping/accept(org.apache.parquet.arrow.schema.SchemaMapping.TypeMappingVisitor)
org/apache/parquet/arrow/schema/TestSchemaConverter/toSummaryString(java.util.List)#java/lang/StringBuilder/append(java.lang.String)
org/apache/parquet/arrow/schema/TestSchemaConverter/toSummaryString(java.util.List)#java/util/List/isEmpty()
org/apache/parquet/arrow/schema/TestSchemaConverter/toSummaryString(java.util.List)#org/apache/parquet/arrow/schema/TestSchemaConverter/toSummaryString(java/util/List)/$anonymous1/()
org/apache/parquet/arrow/schema/TestSchemaConverter/toSummaryString(java.util.List)#java/lang/StringBuilder/StringBuilder()
org/apache/parquet/arrow/schema/TestSchemaConverter/toSummaryString(java.util.List)#java/lang/AbstractStringBuilder/length()
org/apache/parquet/arrow/schema/TestSchemaConverter/toSummaryString(java.util.List)#org/apache/parquet/arrow/schema/SchemaMapping/TypeMapping/getChildren()
org/apache/parquet/arrow/schema/TestSchemaConverter/toSummaryString(java.util.List)#java/lang/StringBuilder/toString()
org/apache/parquet/arrow/schema/TestSchemaConverter/field(java.lang.String,org.apache.parquet.arrow.schema.ArrowType,org.apache.parquet.arrow.schema.Field[])#org/apache/parquet/arrow/schema/TestSchemaConverter/field(java.lang.String,boolean,org.apache.parquet.arrow.schema.ArrowType,org.apache.parquet.arrow.schema.Field[])
org/apache/parquet/arrow/schema/TestSchemaConverter/testRepeatedMap()#org/apache/parquet/arrow/schema/SchemaConverter/map(org.apache.parquet.pig.Schema,org.apache.parquet.schema.MessageType)
org/apache/parquet/arrow/schema/TestSchemaConverter/testRepeatedMap()#org/apache/parquet/arrow/schema/TestSchemaConverter/toSummaryString(org.apache.parquet.arrow.schema.SchemaMapping)
org/apache/parquet/arrow/schema/TestSchemaConverter/compareFields(java.util.List,java.util.List)#org/apache/parquet/arrow/schema/TestSchemaConverter/compareFields(java.util.List,java.util.List)
org/apache/parquet/arrow/schema/TestSchemaConverter/testSupportedParquetToArrow()#org/apache/parquet/arrow/schema/SchemaConverter/fromParquet(org.apache.parquet.schema.MessageType)
org/apache/parquet/arrow/schema/TestSchemaConverter/testSupportedParquetToArrow()#org/apache/parquet/arrow/schema/SchemaMapping/getArrowSchema()
org/apache/parquet/arrow/schema/TestSchemaConverter/testSupportedParquetToArrow()#org/apache/parquet/arrow/schema/TestSchemaConverter/assertEquals(org.apache.parquet.pig.Schema,org.apache.parquet.pig.Schema)
org/apache/parquet/arrow/schema/TestSchemaConverter/testRepeatedParquetToArrow()#org/apache/parquet/arrow/schema/SchemaConverter/fromParquet(org.apache.parquet.schema.MessageType)
org/apache/parquet/arrow/schema/TestSchemaConverter/testRepeatedParquetToArrow()#org/apache/parquet/arrow/schema/SchemaMapping/getArrowSchema()
org/apache/parquet/arrow/schema/TestSchemaConverter/testRepeatedParquetToArrow()#org/apache/parquet/arrow/schema/TestSchemaConverter/assertEquals(org.apache.parquet.pig.Schema,org.apache.parquet.pig.Schema)
org/apache/parquet/filter2/predicate/TestValidTypeMap/testValidTypes()#org/apache/parquet/filter2/predicate/ValidTypeMap/assertTypeValid(org.apache.parquet.filter2.predicate.Operators.Column,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/filter2/predicate/TestValidTypeMap/testMismatchedTypes()#java/lang/Throwable/getMessage()
org/apache/parquet/filter2/predicate/TestValidTypeMap/testMismatchedTypes()#org/apache/parquet/filter2/predicate/ValidTypeMap/assertTypeValid(org.apache.parquet.filter2.predicate.Operators.Column,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/filter2/predicate/TestValidTypeMap/testUnsupportedType()#java/lang/Throwable/getMessage()
org/apache/parquet/filter2/predicate/TestValidTypeMap/testUnsupportedType()#org/apache/parquet/filter2/predicate/ValidTypeMap/assertTypeValid(org.apache.parquet.filter2.predicate.Operators.Column,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/hadoop/thrift/TBaseWriteSupport/setThriftClass(org.apache.parquet.hadoop.Configuration,java.lang.Class)#org/apache/parquet/hadoop/thrift/AbstractThriftWriteSupport/setGenericThriftClass(org.apache.parquet.hadoop.Configuration,java.lang.Class)
org/apache/parquet/hadoop/thrift/TBaseWriteSupport/getThriftStruct()#org/apache/parquet/thrift/ThriftSchemaConverter/toStructType(java.lang.Class)
org/apache/parquet/hadoop/thrift/TBaseWriteSupport/getThriftClass(org.apache.parquet.hadoop.Configuration)#org/apache/parquet/hadoop/thrift/AbstractThriftWriteSupport/getGenericThriftClass(org.apache.parquet.hadoop.Configuration)
org/apache/parquet/hadoop/thrift/TBaseWriteSupport/write(T)#org/apache/parquet/io/ParquetEncodingException/ParquetEncodingException(java.lang.String)
org/apache/parquet/hadoop/mapred/DeprecatedParquetOutputFormat/RecordWriterWrapper/close(org.apache.parquet.hadoop.Reporter)#org/apache/parquet/hadoop/ParquetRecordWriter/close(org.apache.parquet.hadoop.TaskAttemptContext)
org/apache/parquet/hadoop/mapred/DeprecatedParquetOutputFormat/RecordWriterWrapper/close(org.apache.parquet.hadoop.Reporter)#java/lang/Thread/interrupted()
org/apache/parquet/hadoop/mapred/DeprecatedParquetOutputFormat/RecordWriterWrapper/close(org.apache.parquet.hadoop.Reporter)#java/io/IOException/IOException(java.lang.Throwable)
org/apache/parquet/hadoop/mapred/DeprecatedParquetOutputFormat/RecordWriterWrapper/write(java.lang.Void,V)#java/lang/Thread/interrupted()
org/apache/parquet/hadoop/mapred/DeprecatedParquetOutputFormat/RecordWriterWrapper/write(java.lang.Void,V)#org/apache/parquet/hadoop/ParquetRecordWriter/write(java.lang.Void,T)
org/apache/parquet/hadoop/mapred/DeprecatedParquetOutputFormat/RecordWriterWrapper/write(java.lang.Void,V)#java/io/IOException/IOException(java.lang.Throwable)
org/apache/hadoop/hive/ql/io/parquet/convert/HiveSchemaConverter/convertTypes(java.util.List,java.util.List)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/apache/hadoop/hive/ql/io/parquet/convert/HiveSchemaConverter/convertTypes(java.util.List,java.util.List)#java/util/List/size()
org/apache/hadoop/hive/ql/io/parquet/convert/HiveSchemaConverter/convertTypes(java.util.List,java.util.List)#org/apache/hadoop/hive/ql/io/parquet/convert/HiveSchemaConverter/convertType(java.lang.String,org.apache.hadoop.hive.ql.io.parquet.TypeInfo)
org/apache/hadoop/hive/ql/io/parquet/convert/HiveSchemaConverter/convertTypes(java.util.List,java.util.List)#java/util/List/get(int)
org/apache/hadoop/hive/ql/io/parquet/convert/HiveSchemaConverter/convert(java.util.List,java.util.List)#org/apache/hadoop/hive/ql/io/parquet/convert/HiveSchemaConverter/convertTypes(java.util.List,java.util.List)
org/apache/hadoop/hive/ql/io/parquet/convert/HiveSchemaConverter/convert(java.util.List,java.util.List)#org/apache/parquet/schema/MessageType/MessageType(java.lang.String,org.apache.parquet.schema.Type[])
org/apache/hadoop/hive/ql/io/parquet/convert/HiveSchemaConverter/convertStructType(java.lang.String,org.apache.hadoop.hive.ql.io.parquet.serde.StructTypeInfo)#org/apache/hadoop/hive/ql/io/parquet/convert/HiveSchemaConverter/convertTypes(java.util.List,java.util.List)
org/apache/hadoop/hive/ql/io/parquet/convert/HiveSchemaConverter/convertStructType(java.lang.String,org.apache.hadoop.hive.ql.io.parquet.serde.StructTypeInfo)#org/apache/parquet/schema/GroupType/GroupType(org.apache.parquet.schema.Type.Repetition,java.lang.String,java.util.List)
org/apache/hadoop/hive/ql/io/parquet/convert/HiveSchemaConverter/listWrapper(java.lang.String,org.apache.parquet.schema.OriginalType,org.apache.parquet.schema.GroupType)#org/apache/parquet/schema/GroupType/GroupType(org.apache.parquet.schema.Type.Repetition,java.lang.String,org.apache.parquet.schema.OriginalType,org.apache.parquet.schema.Type[])
org/apache/hadoop/hive/ql/io/parquet/convert/HiveSchemaConverter/convertType(java.lang.String,org.apache.hadoop.hive.ql.io.parquet.TypeInfo)#org/apache/hadoop/hive/ql/io/parquet/convert/HiveSchemaConverter/convertType(java.lang.String,org.apache.hadoop.hive.ql.io.parquet.TypeInfo,org.apache.parquet.schema.Type.Repetition)
org/apache/hadoop/hive/ql/io/parquet/convert/HiveSchemaConverter/convertType(java.lang.String,org.apache.hadoop.hive.ql.io.parquet.TypeInfo,org.apache.parquet.schema.Type.Repetition)#org/apache/parquet/schema/PrimitiveType/PrimitiveType(org.apache.parquet.schema.Type.Repetition,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,java.lang.String)
org/apache/hadoop/hive/ql/io/parquet/convert/HiveSchemaConverter/convertType(java.lang.String,org.apache.hadoop.hive.ql.io.parquet.TypeInfo,org.apache.parquet.schema.Type.Repetition)#org/apache/hadoop/hive/ql/io/parquet/convert/HiveSchemaConverter/convertStructType(java.lang.String,org.apache.hadoop.hive.ql.io.parquet.serde.StructTypeInfo)
org/apache/hadoop/hive/ql/io/parquet/convert/HiveSchemaConverter/convertType(java.lang.String,org.apache.hadoop.hive.ql.io.parquet.TypeInfo,org.apache.parquet.schema.Type.Repetition)#java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)
org/apache/hadoop/hive/ql/io/parquet/convert/HiveSchemaConverter/convertType(java.lang.String,org.apache.hadoop.hive.ql.io.parquet.TypeInfo,org.apache.parquet.schema.Type.Repetition)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/hadoop/hive/ql/io/parquet/convert/HiveSchemaConverter/convertType(java.lang.String,org.apache.hadoop.hive.ql.io.parquet.TypeInfo,org.apache.parquet.schema.Type.Repetition)#org/apache/hadoop/hive/ql/io/parquet/convert/HiveSchemaConverter/convertMapType(java.lang.String,org.apache.hadoop.hive.ql.io.parquet.convert.MapTypeInfo)
org/apache/hadoop/hive/ql/io/parquet/convert/HiveSchemaConverter/convertType(java.lang.String,org.apache.hadoop.hive.ql.io.parquet.TypeInfo,org.apache.parquet.schema.Type.Repetition)#org/apache/hadoop/hive/ql/io/parquet/convert/HiveSchemaConverter/convertArrayType(java.lang.String,org.apache.hadoop.hive.ql.io.parquet.convert.ListTypeInfo)
org/apache/hadoop/hive/ql/io/parquet/convert/HiveSchemaConverter/convertMapType(java.lang.String,org.apache.hadoop.hive.ql.io.parquet.convert.MapTypeInfo)#org/apache/parquet/schema/ConversionPatterns/mapType(org.apache.parquet.schema.Type.Repetition,java.lang.String,org.apache.parquet.schema.Type,org.apache.parquet.schema.Type)
org/apache/hadoop/hive/ql/io/parquet/convert/HiveSchemaConverter/convertMapType(java.lang.String,org.apache.hadoop.hive.ql.io.parquet.convert.MapTypeInfo)#org/apache/hadoop/hive/ql/io/parquet/convert/HiveSchemaConverter/convertType(java.lang.String,org.apache.hadoop.hive.ql.io.parquet.TypeInfo)
org/apache/hadoop/hive/ql/io/parquet/convert/HiveSchemaConverter/convertMapType(java.lang.String,org.apache.hadoop.hive.ql.io.parquet.convert.MapTypeInfo)#org/apache/hadoop/hive/ql/io/parquet/convert/HiveSchemaConverter/convertType(java.lang.String,org.apache.hadoop.hive.ql.io.parquet.TypeInfo,org.apache.parquet.schema.Type.Repetition)
org/apache/hadoop/hive/ql/io/parquet/convert/HiveSchemaConverter/convertArrayType(java.lang.String,org.apache.hadoop.hive.ql.io.parquet.convert.ListTypeInfo)#org/apache/parquet/schema/GroupType/GroupType(org.apache.parquet.schema.Type.Repetition,java.lang.String,java.util.List)
org/apache/hadoop/hive/ql/io/parquet/convert/HiveSchemaConverter/convertArrayType(java.lang.String,org.apache.hadoop.hive.ql.io.parquet.convert.ListTypeInfo)#org/apache/hadoop/hive/ql/io/parquet/convert/HiveSchemaConverter/listWrapper(java.lang.String,org.apache.parquet.schema.OriginalType,org.apache.parquet.schema.GroupType)
org/apache/hadoop/hive/ql/io/parquet/convert/HiveSchemaConverter/convertArrayType(java.lang.String,org.apache.hadoop.hive.ql.io.parquet.convert.ListTypeInfo)#org/apache/hadoop/hive/ql/io/parquet/convert/HiveSchemaConverter/convertType(java.lang.String,org.apache.hadoop.hive.ql.io.parquet.TypeInfo)
org/apache/parquet/avro/TestInputOutputFormat/MyMapper/run(org.apache.parquet.hadoop.Context)#org/apache/parquet/avro/TestInputOutputFormat/nextRecord(java.lang.Integer)
org/apache/parquet/filter2/predicate/Operators/And/accept(org.apache.parquet.filter2.predicate.FilterPredicate.Visitor)#org/apache/parquet/filter2/predicate/FilterPredicate/Visitor/visit(org.apache.parquet.filter2.predicate.Operators.And)
org/apache/parquet/column/values/delta/benchmark/SmallRangeWritingBenchmarkTest/writeRLEWithSmallBitWidthTest()#org/apache/parquet/bytes/DirectByteBufferAllocator/DirectByteBufferAllocator()
org/apache/parquet/column/values/delta/benchmark/SmallRangeWritingBenchmarkTest/writeRLEWithSmallBitWidthTest()#org/apache/parquet/column/values/delta/benchmark/BenchMarkTest/runWriteTest(org.apache.parquet.column.values.ValuesWriter)
org/apache/parquet/column/values/delta/benchmark/SmallRangeWritingBenchmarkTest/writeRLEWithSmallBitWidthTest()#org/apache/parquet/column/values/rle/RunLengthBitPackingHybridValuesWriter/RunLengthBitPackingHybridValuesWriter(int,int,int,org.apache.parquet.bytes.ByteBufferAllocator)
org/apache/parquet/column/values/delta/benchmark/SmallRangeWritingBenchmarkTest/prepare()#java/util/Random/nextInt(int)
org/apache/parquet/column/values/delta/benchmark/SmallRangeWritingBenchmarkTest/prepare()#java/util/Random/Random()
org/apache/parquet/avro/AvroIndexedRecordConverter/MapConverter/end()#org/apache/parquet/avro/ParentValueContainer/add(java.lang.Object)
org/apache/parquet/avro/AvroIndexedRecordConverter/MapConverter/start()#java/util/HashMap/HashMap()
org/apache/parquet/schema/TypeUtil/checkValidWriteSchema(org.apache.parquet.schema.GroupType)#org/apache/parquet/schema/TypeUtil/checkValidWriteSchema(org/apache/parquet/schema/GroupType)/$anonymous1/()
org/apache/parquet/schema/TypeUtil/checkValidWriteSchema(org.apache.parquet.schema.GroupType)#org/apache/parquet/schema/GroupType/accept(org.apache.parquet.schema.TypeVisitor)
org/apache/hadoop/hive/ql/io/parquet/serde/ParquetHiveArrayInspector/getListElement(java.lang.Object,int)#java/lang/Class/getCanonicalName()
org/apache/hadoop/hive/ql/io/parquet/serde/ParquetHiveArrayInspector/getListElement(java.lang.Object,int)#java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)
org/apache/hadoop/hive/ql/io/parquet/serde/ParquetHiveArrayInspector/getListElement(java.lang.Object,int)#java/lang/Object/getClass()
org/apache/hadoop/hive/ql/io/parquet/serde/ParquetHiveArrayInspector/getList(java.lang.Object)#java/util/ArrayList/ArrayList()
org/apache/hadoop/hive/ql/io/parquet/serde/ParquetHiveArrayInspector/getList(java.lang.Object)#java/lang/Class/getCanonicalName()
org/apache/hadoop/hive/ql/io/parquet/serde/ParquetHiveArrayInspector/getList(java.lang.Object)#java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)
org/apache/hadoop/hive/ql/io/parquet/serde/ParquetHiveArrayInspector/getList(java.lang.Object)#java/lang/Object/getClass()
org/apache/hadoop/hive/ql/io/parquet/serde/ParquetHiveArrayInspector/create(int)#java/util/ArrayList/ArrayList(int)
org/apache/hadoop/hive/ql/io/parquet/serde/ParquetHiveArrayInspector/create(int)#java/util/ArrayList/add(E)
org/apache/hadoop/hive/ql/io/parquet/serde/ParquetHiveArrayInspector/getListLength(java.lang.Object)#java/lang/Class/getCanonicalName()
org/apache/hadoop/hive/ql/io/parquet/serde/ParquetHiveArrayInspector/getListLength(java.lang.Object)#java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)
org/apache/hadoop/hive/ql/io/parquet/serde/ParquetHiveArrayInspector/getListLength(java.lang.Object)#java/lang/Object/getClass()
org/apache/hadoop/hive/ql/io/parquet/serde/ParquetHiveArrayInspector/resize(java.lang.Object,int)#java/util/ArrayList/remove(int)
org/apache/hadoop/hive/ql/io/parquet/serde/ParquetHiveArrayInspector/resize(java.lang.Object,int)#java/util/ArrayList/ensureCapacity(int)
org/apache/hadoop/hive/ql/io/parquet/serde/ParquetHiveArrayInspector/resize(java.lang.Object,int)#java/util/ArrayList/size()
org/apache/hadoop/hive/ql/io/parquet/serde/ParquetHiveArrayInspector/resize(java.lang.Object,int)#java/util/ArrayList/add(E)
org/apache/hadoop/hive/ql/io/parquet/serde/ParquetHiveArrayInspector/set(java.lang.Object,int,java.lang.Object)#java/util/ArrayList/set(int,E)
org/apache/hadoop/hive/ql/io/parquet/serde/ParquetHiveArrayInspector/equals(java.lang.Object)#java/lang/Object/getClass()
org/apache/parquet/column/values/bitpacking/OneBitPackingReader/read()#java/io/InputStream/read()
org/apache/parquet/example/data/simple/BooleanValue/writeValue(org.apache.parquet.io.api.RecordConsumer)#org/apache/parquet/io/api/RecordConsumer/addBoolean(boolean)
org/apache/parquet/example/data/simple/BooleanValue/toString()#java/lang/String/valueOf(boolean)
org/apache/parquet/hadoop/example/TestInputOutputFormat/MyWriteSupport/finalizeWrite()#org/apache/parquet/hadoop/api/WriteSupport/FinalizedWriteContext/FinalizedWriteContext(java.util.Map)
org/apache/parquet/hadoop/example/TestInputOutputFormat/MyWriteSupport/finalizeWrite()#java/util/HashMap/HashMap()
org/apache/parquet/hadoop/example/TestInputOutputFormat/MyWriteSupport/finalizeWrite()#java/util/Map/put(K,V)
org/apache/parquet/hadoop/example/TestInputOutputFormat/MyWriteSupport/finalizeWrite()#java/lang/String/valueOf(long)
org/apache/parquet/hadoop/example/TestInputOutputFormat/MyWriteSupport/write(org.apache.parquet.example.data.Group)#org/apache/parquet/hadoop/api/DelegatingWriteSupport/write(T)
org/apache/parquet/VersionTest/testVersionParser()#org/apache/parquet/VersionParser/ParsedVersion/ParsedVersion(java.lang.String,java.lang.String,java.lang.String)
org/apache/parquet/VersionTest/testVersionParser()#org/apache/parquet/VersionParser/parse(java.lang.String)
org/apache/parquet/VersionTest/testVersion()#org/apache/parquet/VersionTest/assertVersionValid(java.lang.String)
org/apache/parquet/VersionTest/assertVersionValid(java.lang.String)#java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)
org/apache/parquet/VersionTest/testFullVersion()#org/apache/parquet/VersionTest/assertVersionValid(java.lang.String)
org/apache/parquet/VersionTest/testFullVersion()#org/apache/parquet/VersionParser/parse(java.lang.String)
org/apache/hadoop/hive/ql/io/parquet/serde/StandardParquetHiveMapInspector/getMapValueElement(java.lang.Object,java.lang.Object)#java/lang/Object/equals(java.lang.Object)
org/apache/hadoop/hive/ql/io/parquet/serde/StandardParquetHiveMapInspector/getMapValueElement(java.lang.Object,java.lang.Object)#java/util/Map/get(java.lang.Object)
org/apache/hadoop/hive/ql/io/parquet/serde/StandardParquetHiveMapInspector/getMapValueElement(java.lang.Object,java.lang.Object)#java/lang/Class/getCanonicalName()
org/apache/hadoop/hive/ql/io/parquet/serde/StandardParquetHiveMapInspector/getMapValueElement(java.lang.Object,java.lang.Object)#java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)
org/apache/hadoop/hive/ql/io/parquet/serde/StandardParquetHiveMapInspector/getMapValueElement(java.lang.Object,java.lang.Object)#java/lang/Object/getClass()
org/apache/parquet/example/data/simple/Primitive/getBoolean()#java/lang/UnsupportedOperationException/UnsupportedOperationException()
org/apache/parquet/example/data/simple/Primitive/getInt96()#java/lang/UnsupportedOperationException/UnsupportedOperationException()
org/apache/parquet/example/data/simple/Primitive/getLong()#java/lang/UnsupportedOperationException/UnsupportedOperationException()
org/apache/parquet/example/data/simple/Primitive/getFloat()#java/lang/UnsupportedOperationException/UnsupportedOperationException()
org/apache/parquet/example/data/simple/Primitive/getInteger()#java/lang/UnsupportedOperationException/UnsupportedOperationException()
org/apache/parquet/example/data/simple/Primitive/getBinary()#java/lang/UnsupportedOperationException/UnsupportedOperationException()
org/apache/parquet/example/data/simple/Primitive/getDouble()#java/lang/UnsupportedOperationException/UnsupportedOperationException()
org/apache/parquet/example/data/simple/Primitive/getString()#java/lang/UnsupportedOperationException/UnsupportedOperationException()
org/apache/parquet/bytes/ConcatenatingByteArrayCollector/collect(org.apache.parquet.bytes.BytesInput)#java/util/List/add(E)
org/apache/parquet/bytes/ConcatenatingByteArrayCollector/collect(org.apache.parquet.bytes.BytesInput)#org/apache/parquet/bytes/BytesInput/toByteArray()
org/apache/parquet/bytes/ConcatenatingByteArrayCollector/memUsageString(java.lang.String)#java/lang/Class/getSimpleName()
org/apache/parquet/bytes/ConcatenatingByteArrayCollector/memUsageString(java.lang.String)#java/lang/String/format(java.lang.String,java.lang.Object[])
org/apache/parquet/bytes/ConcatenatingByteArrayCollector/memUsageString(java.lang.String)#java/util/List/size()
org/apache/parquet/bytes/ConcatenatingByteArrayCollector/memUsageString(java.lang.String)#java/lang/Object/getClass()
org/apache/parquet/bytes/ConcatenatingByteArrayCollector/writeAllTo(java.io.OutputStream)#java/io/OutputStream/write(byte[])
org/apache/parquet/bytes/ConcatenatingByteArrayCollector/reset()#java/util/List/clear()
org/apache/parquet/tools/read/SimpleMapRecordConverter/start()#org/apache/parquet/tools/read/SimpleMapRecord/SimpleMapRecord()
org/apache/parquet/column/mem/TestMemColumn/testMemColumnSeveralPages()#org/apache/parquet/column/page/mem/MemPageStore/MemPageStore(long)
org/apache/parquet/column/mem/TestMemColumn/testMemColumnSeveralPages()#org/apache/parquet/column/ColumnReader/consume()
org/apache/parquet/column/mem/TestMemColumn/testMemColumnSeveralPages()#org/apache/parquet/column/impl/ColumnWriteStoreV1/flush()
org/apache/parquet/column/mem/TestMemColumn/testMemColumnSeveralPages()#org/apache/parquet/schema/MessageType/getColumnDescription(java.lang.String[])
org/apache/parquet/column/mem/TestMemColumn/testMemColumnSeveralPages()#org/apache/parquet/column/ColumnReader/getTotalValueCount()
org/apache/parquet/column/mem/TestMemColumn/testMemColumnSeveralPages()#org/apache/parquet/column/ColumnReader/getCurrentDefinitionLevel()
org/apache/parquet/column/mem/TestMemColumn/testMemColumnSeveralPages()#org/apache/parquet/column/ColumnReader/getCurrentRepetitionLevel()
org/apache/parquet/column/mem/TestMemColumn/testMemColumnSeveralPages()#org/apache/parquet/column/mem/TestMemColumn/newColumnWriteStoreImpl(org.apache.parquet.column.page.mem.MemPageStore)
org/apache/parquet/column/mem/TestMemColumn/testMemColumnSeveralPages()#org/apache/parquet/column/ColumnReader/getLong()
org/apache/parquet/column/mem/TestMemColumn/testMemColumnSeveralPages()#org/apache/parquet/schema/MessageTypeParser/parseMessageType(java.lang.String)
org/apache/parquet/column/mem/TestMemColumn/testMemColumnSeveralPages()#org/apache/parquet/column/mem/TestMemColumn/getColumnReader(org.apache.parquet.column.page.mem.MemPageStore,org.apache.parquet.column.ColumnDescriptor,org.apache.parquet.schema.MessageType)
org/apache/parquet/column/mem/TestMemColumn/testMemColumnSeveralPages()#org/apache/parquet/column/ColumnWriter/write(long,int,int)
org/apache/parquet/column/mem/TestMemColumn/testMemColumnSeveralPages()#org/apache/parquet/column/impl/ColumnWriteStoreV1/getColumnWriter(org.apache.parquet.column.ColumnDescriptor)
org/apache/parquet/column/mem/TestMemColumn/getColumnReader(org.apache.parquet.column.page.mem.MemPageStore,org.apache.parquet.column.ColumnDescriptor,org.apache.parquet.schema.MessageType)#org/apache/parquet/column/impl/ColumnReadStoreImpl/ColumnReadStoreImpl(org.apache.parquet.column.page.PageReadStore,org.apache.parquet.io.api.GroupConverter,org.apache.parquet.schema.MessageType,java.lang.String)
org/apache/parquet/column/mem/TestMemColumn/getColumnReader(org.apache.parquet.column.page.mem.MemPageStore,org.apache.parquet.column.ColumnDescriptor,org.apache.parquet.schema.MessageType)#org/apache/parquet/example/DummyRecordConverter/getRootConverter()
org/apache/parquet/column/mem/TestMemColumn/getColumnReader(org.apache.parquet.column.page.mem.MemPageStore,org.apache.parquet.column.ColumnDescriptor,org.apache.parquet.schema.MessageType)#org/apache/parquet/example/DummyRecordConverter/DummyRecordConverter(org.apache.parquet.schema.MessageType)
org/apache/parquet/column/mem/TestMemColumn/getColumnReader(org.apache.parquet.column.page.mem.MemPageStore,org.apache.parquet.column.ColumnDescriptor,org.apache.parquet.schema.MessageType)#org/apache/parquet/column/impl/ColumnReadStoreImpl/getColumnReader(org.apache.parquet.column.ColumnDescriptor)
org/apache/parquet/column/mem/TestMemColumn/getColumnWriter(org.apache.parquet.column.ColumnDescriptor,org.apache.parquet.column.page.mem.MemPageStore)#org/apache/parquet/column/impl/ColumnWriteStoreV1/getColumnWriter(org.apache.parquet.column.ColumnDescriptor)
org/apache/parquet/column/mem/TestMemColumn/getColumnWriter(org.apache.parquet.column.ColumnDescriptor,org.apache.parquet.column.page.mem.MemPageStore)#org/apache/parquet/column/mem/TestMemColumn/newColumnWriteStoreImpl(org.apache.parquet.column.page.mem.MemPageStore)
org/apache/parquet/column/mem/TestMemColumn/testMemColumnBinary()#org/apache/parquet/column/ColumnReader/getBinary()
org/apache/parquet/column/mem/TestMemColumn/testMemColumnBinary()#org/apache/parquet/column/impl/ColumnWriteStoreV1/flush()
org/apache/parquet/column/mem/TestMemColumn/testMemColumnBinary()#org/apache/parquet/schema/MessageType/getColumnDescription(java.lang.String[])
org/apache/parquet/column/mem/TestMemColumn/testMemColumnBinary()#org/apache/parquet/io/api/Binary/fromString(java.lang.String)
org/apache/parquet/column/mem/TestMemColumn/testMemColumnBinary()#org/apache/parquet/column/ColumnReader/getTotalValueCount()
org/apache/parquet/column/mem/TestMemColumn/testMemColumnBinary()#org/apache/parquet/column/impl/ColumnWriteStoreV1/getColumnWriter(org.apache.parquet.column.ColumnDescriptor)
org/apache/parquet/column/mem/TestMemColumn/testMemColumnBinary()#org/apache/parquet/column/ColumnReader/getCurrentDefinitionLevel()
org/apache/parquet/column/mem/TestMemColumn/testMemColumnBinary()#org/apache/parquet/column/ColumnReader/getCurrentRepetitionLevel()
org/apache/parquet/column/mem/TestMemColumn/testMemColumnBinary()#org/apache/parquet/column/mem/TestMemColumn/newColumnWriteStoreImpl(org.apache.parquet.column.page.mem.MemPageStore)
org/apache/parquet/column/mem/TestMemColumn/testMemColumnBinary()#org/apache/parquet/column/page/mem/MemPageStore/MemPageStore(long)
org/apache/parquet/column/mem/TestMemColumn/testMemColumnBinary()#org/apache/parquet/io/api/Binary/toStringUsingUTF8()
org/apache/parquet/column/mem/TestMemColumn/testMemColumnBinary()#org/apache/parquet/column/ColumnWriter/write(org.apache.parquet.io.api.Binary,int,int)
org/apache/parquet/column/mem/TestMemColumn/testMemColumnBinary()#org/apache/parquet/column/ColumnReader/consume()
org/apache/parquet/column/mem/TestMemColumn/testMemColumnBinary()#org/apache/parquet/schema/MessageTypeParser/parseMessageType(java.lang.String)
org/apache/parquet/column/mem/TestMemColumn/testMemColumnBinary()#org/apache/parquet/column/mem/TestMemColumn/getColumnReader(org.apache.parquet.column.page.mem.MemPageStore,org.apache.parquet.column.ColumnDescriptor,org.apache.parquet.schema.MessageType)
org/apache/parquet/column/mem/TestMemColumn/testMemColumnSeveralPagesRepeated()#org/apache/parquet/column/page/mem/MemPageStore/MemPageStore(long)
org/apache/parquet/column/mem/TestMemColumn/testMemColumnSeveralPagesRepeated()#org/apache/parquet/column/ColumnReader/consume()
org/apache/parquet/column/mem/TestMemColumn/testMemColumnSeveralPagesRepeated()#org/apache/parquet/column/impl/ColumnWriteStoreV1/flush()
org/apache/parquet/column/mem/TestMemColumn/testMemColumnSeveralPagesRepeated()#org/apache/parquet/schema/MessageType/getColumnDescription(java.lang.String[])
org/apache/parquet/column/mem/TestMemColumn/testMemColumnSeveralPagesRepeated()#org/apache/parquet/column/ColumnWriter/writeNull(int,int)
org/apache/parquet/column/mem/TestMemColumn/testMemColumnSeveralPagesRepeated()#org/apache/parquet/column/ColumnReader/getTotalValueCount()
org/apache/parquet/column/mem/TestMemColumn/testMemColumnSeveralPagesRepeated()#org/apache/parquet/column/ColumnReader/getCurrentDefinitionLevel()
org/apache/parquet/column/mem/TestMemColumn/testMemColumnSeveralPagesRepeated()#org/apache/parquet/column/ColumnReader/getCurrentRepetitionLevel()
org/apache/parquet/column/mem/TestMemColumn/testMemColumnSeveralPagesRepeated()#org/apache/parquet/column/mem/TestMemColumn/newColumnWriteStoreImpl(org.apache.parquet.column.page.mem.MemPageStore)
org/apache/parquet/column/mem/TestMemColumn/testMemColumnSeveralPagesRepeated()#org/apache/parquet/column/ColumnReader/getLong()
org/apache/parquet/column/mem/TestMemColumn/testMemColumnSeveralPagesRepeated()#org/apache/parquet/schema/MessageTypeParser/parseMessageType(java.lang.String)
org/apache/parquet/column/mem/TestMemColumn/testMemColumnSeveralPagesRepeated()#org/apache/parquet/column/mem/TestMemColumn/getColumnReader(org.apache.parquet.column.page.mem.MemPageStore,org.apache.parquet.column.ColumnDescriptor,org.apache.parquet.schema.MessageType)
org/apache/parquet/column/mem/TestMemColumn/testMemColumnSeveralPagesRepeated()#org/apache/parquet/column/ColumnWriter/write(long,int,int)
org/apache/parquet/column/mem/TestMemColumn/testMemColumnSeveralPagesRepeated()#org/apache/parquet/column/impl/ColumnWriteStoreV1/getColumnWriter(org.apache.parquet.column.ColumnDescriptor)
org/apache/parquet/column/mem/TestMemColumn/testMemColumn()#org/apache/parquet/column/page/mem/MemPageStore/MemPageStore(long)
org/apache/parquet/column/mem/TestMemColumn/testMemColumn()#org/apache/parquet/column/ColumnReader/consume()
org/apache/parquet/column/mem/TestMemColumn/testMemColumn()#org/apache/parquet/column/impl/ColumnWriteStoreV1/flush()
org/apache/parquet/column/mem/TestMemColumn/testMemColumn()#org/apache/parquet/schema/MessageType/getColumnDescription(java.lang.String[])
org/apache/parquet/column/mem/TestMemColumn/testMemColumn()#org/apache/parquet/column/ColumnReader/getTotalValueCount()
org/apache/parquet/column/mem/TestMemColumn/testMemColumn()#org/apache/parquet/column/ColumnReader/getCurrentDefinitionLevel()
org/apache/parquet/column/mem/TestMemColumn/testMemColumn()#org/apache/parquet/column/ColumnReader/getCurrentRepetitionLevel()
org/apache/parquet/column/mem/TestMemColumn/testMemColumn()#org/apache/parquet/column/mem/TestMemColumn/newColumnWriteStoreImpl(org.apache.parquet.column.page.mem.MemPageStore)
org/apache/parquet/column/mem/TestMemColumn/testMemColumn()#org/apache/parquet/column/ColumnReader/getLong()
org/apache/parquet/column/mem/TestMemColumn/testMemColumn()#org/apache/parquet/schema/MessageTypeParser/parseMessageType(java.lang.String)
org/apache/parquet/column/mem/TestMemColumn/testMemColumn()#org/apache/parquet/column/mem/TestMemColumn/getColumnReader(org.apache.parquet.column.page.mem.MemPageStore,org.apache.parquet.column.ColumnDescriptor,org.apache.parquet.schema.MessageType)
org/apache/parquet/column/mem/TestMemColumn/testMemColumn()#org/apache/parquet/column/ColumnWriter/write(long,int,int)
org/apache/parquet/column/mem/TestMemColumn/testMemColumn()#org/apache/parquet/column/impl/ColumnWriteStoreV1/getColumnWriter(org.apache.parquet.column.ColumnDescriptor)
org/apache/parquet/column/mem/TestMemColumn/newColumnWriteStoreImpl(org.apache.parquet.column.page.mem.MemPageStore)#org/apache/parquet/column/ParquetProperties/Builder/withPageSize(int)
org/apache/parquet/column/mem/TestMemColumn/newColumnWriteStoreImpl(org.apache.parquet.column.page.mem.MemPageStore)#org/apache/parquet/column/ParquetProperties/Builder/build()
org/apache/parquet/column/mem/TestMemColumn/newColumnWriteStoreImpl(org.apache.parquet.column.page.mem.MemPageStore)#org/apache/parquet/column/ParquetProperties/builder()
org/apache/parquet/column/mem/TestMemColumn/newColumnWriteStoreImpl(org.apache.parquet.column.page.mem.MemPageStore)#org/apache/parquet/column/impl/ColumnWriteStoreV1/ColumnWriteStoreV1(org.apache.parquet.column.page.PageWriteStore,org.apache.parquet.column.ParquetProperties)
org/apache/parquet/column/mem/TestMemColumn/newColumnWriteStoreImpl(org.apache.parquet.column.page.mem.MemPageStore)#org/apache/parquet/column/ParquetProperties/Builder/withDictionaryEncoding(boolean)
org/apache/parquet/hadoop/DirectCodecFactory/FullDirectDecompressor/release()#org/apache/parquet/hadoop/DirectCodecFactory/DirectCodecPool/returnDirectDecompressor(java.lang.Object)
org/apache/parquet/hadoop/DirectCodecFactory/FullDirectDecompressor/release()#org/apache/parquet/hadoop/CodecFactory/HeapBytesDecompressor/release()
org/apache/parquet/hadoop/DirectCodecFactory/FullDirectDecompressor/decompress(java.nio.ByteBuffer,int,java.nio.ByteBuffer,int)#java/nio/Buffer/clear()
org/apache/parquet/hadoop/DirectCodecFactory/FullDirectDecompressor/decompress(java.nio.ByteBuffer,int,java.nio.ByteBuffer,int)#java/nio/Buffer/limit(int)
org/apache/parquet/hadoop/DirectCodecFactory/FullDirectDecompressor/decompress(java.nio.ByteBuffer,int,java.nio.ByteBuffer,int)#java/nio/Buffer/position(int)
org/apache/parquet/hadoop/DirectCodecFactory/FullDirectDecompressor/decompress(java.nio.ByteBuffer,int,java.nio.ByteBuffer,int)#org/apache/parquet/hadoop/DirectCodecFactory/DirectCodecPool/ParquetCompressionCodecException/ParquetCompressionCodecException(java.lang.Throwable)
org/apache/parquet/hadoop/DirectCodecFactory/FullDirectDecompressor/decompress(java.nio.ByteBuffer,int,java.nio.ByteBuffer,int)#java/lang/reflect/Method/invoke(java.lang.Object,java.lang.Object[])
org/apache/parquet/hadoop/DirectCodecFactory/FullDirectDecompressor/decompress(org.apache.parquet.bytes.BytesInput,int)#org/apache/parquet/hadoop/CodecFactory/HeapBytesDecompressor/decompress(org.apache.parquet.bytes.BytesInput,int)
org/apache/parquet/cascading/TestParquetTBaseScheme/doRead(org.apache.parquet.cascading.Scheme)#org/apache/parquet/cascading/TestParquetTBaseScheme/createFileForRead()
org/apache/parquet/cascading/TestParquetTBaseScheme/doRead(org.apache.parquet.cascading.Scheme)#java/io/File/File(java.lang.String)
org/apache/parquet/cascading/TestParquetTBaseScheme/doRead(org.apache.parquet.cascading.Scheme)#org/apache/parquet/cascading/TestParquetTBaseScheme/UnpackThriftFunction/UnpackThriftFunction()
org/apache/parquet/cascading/TestParquetTBaseScheme/doRead(org.apache.parquet.cascading.Scheme)#java/lang/Object/Object()
org/apache/parquet/cascading/TestParquetTBaseScheme/testReadWithoutClass()#org/apache/parquet/cascading/ParquetTBaseScheme/ParquetTBaseScheme()
org/apache/parquet/cascading/TestParquetTBaseScheme/testReadWithoutClass()#org/apache/parquet/cascading/TestParquetTBaseScheme/doRead(org.apache.parquet.cascading.Scheme)
org/apache/parquet/cascading/TestParquetTBaseScheme/createFileForRead()#org/apache/parquet/hadoop/util/ContextUtil/newTaskAttemptContext(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.util.TaskAttemptID)
org/apache/parquet/cascading/TestParquetTBaseScheme/createFileForRead()#java/io/ByteArrayOutputStream/reset()
org/apache/parquet/cascading/TestParquetTBaseScheme/createFileForRead()#org/apache/parquet/hadoop/thrift/ThriftToParquetFileWriter/close()
org/apache/parquet/cascading/TestParquetTBaseScheme/createFileForRead()#java/io/ByteArrayOutputStream/toByteArray()
org/apache/parquet/cascading/TestParquetTBaseScheme/createFileForRead()#java/io/ByteArrayOutputStream/ByteArrayOutputStream()
org/apache/parquet/cascading/TestParquetTBaseScheme/createFileForRead()#org/apache/parquet/hadoop/thrift/ThriftToParquetFileWriter/write(org.apache.parquet.hadoop.thrift.BytesWritable)
org/apache/parquet/cascading/TestParquetTBaseScheme/createFileForRead()#org/apache/parquet/hadoop/thrift/ThriftToParquetFileWriter/ThriftToParquetFileWriter(org.apache.parquet.hadoop.Path,org.apache.parquet.hadoop.TaskAttemptContext,org.apache.parquet.hadoop.thrift.TProtocolFactory,java.lang.Class)
org/apache/parquet/cascading/TestParquetTBaseScheme/testWrite()#org/apache/parquet/cascading/ParquetTBaseScheme/ParquetTBaseScheme(java.lang.Class)
org/apache/parquet/cascading/TestParquetTBaseScheme/testWrite()#org/apache/parquet/cascading/TestParquetTBaseScheme/PackThriftFunction/PackThriftFunction()
org/apache/parquet/cascading/TestParquetTBaseScheme/testWrite()#java/lang/Object/Object()
org/apache/parquet/cascading/TestParquetTBaseScheme/testRead()#org/apache/parquet/cascading/TestParquetTBaseScheme/doRead(org.apache.parquet.cascading.Scheme)
org/apache/parquet/cascading/TestParquetTBaseScheme/testRead()#org/apache/parquet/cascading/ParquetTBaseScheme/ParquetTBaseScheme(java.lang.Class)
org/apache/parquet/thrift/ParquetWriteProtocol/MessageWriteProtocol/writeStructEnd()#org/apache/parquet/io/api/RecordConsumer/endMessage()
org/apache/parquet/thrift/ParquetWriteProtocol/MessageWriteProtocol/writeStructBegin(org.apache.parquet.thrift.TStruct)#org/apache/parquet/io/api/RecordConsumer/startMessage()
org/apache/parquet/thrift/ParquetWriteProtocol/PrimitiveWriteProtocol/writeI16(short)#org/apache/parquet/thrift/ParquetWriteProtocol/FieldBaseWriteProtocol/start()
org/apache/parquet/thrift/ParquetWriteProtocol/PrimitiveWriteProtocol/writeI16(short)#org/apache/parquet/io/api/RecordConsumer/addInteger(int)
org/apache/parquet/thrift/ParquetWriteProtocol/PrimitiveWriteProtocol/writeI16(short)#org/apache/parquet/thrift/ParquetWriteProtocol/FieldBaseWriteProtocol/end()
org/apache/parquet/thrift/ParquetWriteProtocol/PrimitiveWriteProtocol/writeString(java.lang.String)#org/apache/parquet/thrift/ParquetWriteProtocol/writeStringToRecordConsumer(java.lang.String)
org/apache/parquet/thrift/ParquetWriteProtocol/PrimitiveWriteProtocol/writeString(java.lang.String)#org/apache/parquet/thrift/ParquetWriteProtocol/FieldBaseWriteProtocol/start()
org/apache/parquet/thrift/ParquetWriteProtocol/PrimitiveWriteProtocol/writeString(java.lang.String)#org/apache/parquet/thrift/ParquetWriteProtocol/FieldBaseWriteProtocol/end()
org/apache/parquet/thrift/ParquetWriteProtocol/PrimitiveWriteProtocol/writeBool(boolean)#org/apache/parquet/io/api/RecordConsumer/addBoolean(boolean)
org/apache/parquet/thrift/ParquetWriteProtocol/PrimitiveWriteProtocol/writeBool(boolean)#org/apache/parquet/thrift/ParquetWriteProtocol/FieldBaseWriteProtocol/start()
org/apache/parquet/thrift/ParquetWriteProtocol/PrimitiveWriteProtocol/writeBool(boolean)#org/apache/parquet/thrift/ParquetWriteProtocol/FieldBaseWriteProtocol/end()
org/apache/parquet/thrift/ParquetWriteProtocol/PrimitiveWriteProtocol/writeBinary(java.nio.ByteBuffer)#org/apache/parquet/thrift/ParquetWriteProtocol/FieldBaseWriteProtocol/start()
org/apache/parquet/thrift/ParquetWriteProtocol/PrimitiveWriteProtocol/writeBinary(java.nio.ByteBuffer)#org/apache/parquet/thrift/ParquetWriteProtocol/writeBinaryToRecordConsumer(java.nio.ByteBuffer)
org/apache/parquet/thrift/ParquetWriteProtocol/PrimitiveWriteProtocol/writeBinary(java.nio.ByteBuffer)#org/apache/parquet/thrift/ParquetWriteProtocol/FieldBaseWriteProtocol/end()
org/apache/parquet/thrift/ParquetWriteProtocol/PrimitiveWriteProtocol/writeI32(int)#org/apache/parquet/thrift/ParquetWriteProtocol/FieldBaseWriteProtocol/start()
org/apache/parquet/thrift/ParquetWriteProtocol/PrimitiveWriteProtocol/writeI32(int)#org/apache/parquet/io/api/RecordConsumer/addInteger(int)
org/apache/parquet/thrift/ParquetWriteProtocol/PrimitiveWriteProtocol/writeI32(int)#org/apache/parquet/thrift/ParquetWriteProtocol/FieldBaseWriteProtocol/end()
org/apache/parquet/thrift/ParquetWriteProtocol/PrimitiveWriteProtocol/writeI64(long)#org/apache/parquet/io/api/RecordConsumer/addLong(long)
org/apache/parquet/thrift/ParquetWriteProtocol/PrimitiveWriteProtocol/writeI64(long)#org/apache/parquet/thrift/ParquetWriteProtocol/FieldBaseWriteProtocol/start()
org/apache/parquet/thrift/ParquetWriteProtocol/PrimitiveWriteProtocol/writeI64(long)#org/apache/parquet/thrift/ParquetWriteProtocol/FieldBaseWriteProtocol/end()
org/apache/parquet/thrift/ParquetWriteProtocol/PrimitiveWriteProtocol/writeDouble(double)#org/apache/parquet/io/api/RecordConsumer/addDouble(double)
org/apache/parquet/thrift/ParquetWriteProtocol/PrimitiveWriteProtocol/writeDouble(double)#org/apache/parquet/thrift/ParquetWriteProtocol/FieldBaseWriteProtocol/start()
org/apache/parquet/thrift/ParquetWriteProtocol/PrimitiveWriteProtocol/writeDouble(double)#org/apache/parquet/thrift/ParquetWriteProtocol/FieldBaseWriteProtocol/end()
org/apache/parquet/thrift/ParquetWriteProtocol/PrimitiveWriteProtocol/writeByte(byte)#org/apache/parquet/thrift/ParquetWriteProtocol/FieldBaseWriteProtocol/start()
org/apache/parquet/thrift/ParquetWriteProtocol/PrimitiveWriteProtocol/writeByte(byte)#org/apache/parquet/io/api/RecordConsumer/addInteger(int)
org/apache/parquet/thrift/ParquetWriteProtocol/PrimitiveWriteProtocol/writeByte(byte)#org/apache/parquet/thrift/ParquetWriteProtocol/FieldBaseWriteProtocol/end()
org/apache/parquet/pig/ParquetLoader/UnregisteringParquetInputFormat/createRecordReader(org.apache.parquet.hadoop.InputSplit,org.apache.parquet.hadoop.TaskAttemptContext)#org/apache/parquet/hadoop/ParquetInputFormat/createRecordReader(org.apache.parquet.hadoop.InputSplit,org.apache.parquet.hadoop.TaskAttemptContext)
org/apache/parquet/pig/summary/TestSummary/validate(java.lang.String,int)#org/apache/parquet/pig/summary/MapSummaryData/getKey()
org/apache/parquet/pig/summary/TestSummary/validate(java.lang.String,int)#org/apache/parquet/pig/summary/BagSummaryData/getContent()
org/apache/parquet/pig/summary/TestSummary/validate(java.lang.String,int)#org/apache/parquet/pig/summary/SummaryData/fromJSON(java.lang.String,java.lang.Class)
org/apache/parquet/pig/summary/TestSummary/validate(java.lang.String,int)#org/apache/parquet/pig/summary/SummaryData/getCount()
org/apache/parquet/pig/summary/TestSummary/validate(java.lang.String,int)#java/lang/Long/longValue()
org/apache/parquet/pig/summary/TestSummary/validate(java.lang.String,int)#java/util/List/get(int)
org/apache/parquet/pig/summary/TestSummary/validate(java.lang.String,int)#org/apache/parquet/pig/summary/FieldSummaryData/getNull()
org/apache/parquet/pig/summary/TestSummary/validate(java.lang.String,int)#org/apache/parquet/pig/summary/FieldSummaryData/getMap()
org/apache/parquet/pig/summary/TestSummary/validate(java.lang.String,int)#org/apache/parquet/pig/summary/TupleSummaryData/getFields()
org/apache/parquet/pig/summary/TestSummary/validate(java.lang.String,int)#org/apache/parquet/pig/summary/FieldSummaryData/getBag()
org/apache/parquet/pig/summary/TestSummary/validate(java.lang.String,int)#org/apache/parquet/pig/summary/FieldSummaryData/getTuple()
org/apache/parquet/pig/summary/TestSummary/t(java.lang.Object[])#java/util/Arrays/asList(T[])
org/apache/parquet/pig/summary/TestSummary/testEvalFunc()#org/apache/parquet/pig/summary/TestSummary/validate(java.lang.String,int)
org/apache/parquet/pig/summary/TestSummary/testEvalFunc()#org/apache/parquet/pig/summary/Summary/exec(org.apache.parquet.pig.Tuple)
org/apache/parquet/pig/summary/TestSummary/testEvalFunc()#org/apache/parquet/pig/summary/TestSummary/t(java.lang.Object[])
org/apache/parquet/pig/summary/TestSummary/testEvalFunc()#org/apache/parquet/pig/summary/Summary/Summary()
org/apache/parquet/pig/summary/TestSummary/testMaxIsZero()#java/util/ArrayList/ArrayList()
org/apache/parquet/pig/summary/TestSummary/testMaxIsZero()#org/apache/parquet/pig/summary/TestSummary/t(java.lang.Object[])
org/apache/parquet/pig/summary/TestSummary/testMaxIsZero()#org/apache/parquet/pig/summary/SummaryData/fromJSON(java.lang.String,java.lang.Class)
org/apache/parquet/pig/summary/TestSummary/testMaxIsZero()#org/apache/parquet/pig/summary/ValueStat/getMax()
org/apache/parquet/pig/summary/TestSummary/testMaxIsZero()#java/lang/Class/getName()
org/apache/parquet/pig/summary/TestSummary/testMaxIsZero()#java/util/List/get(int)
org/apache/parquet/pig/summary/TestSummary/testMaxIsZero()#org/apache/parquet/pig/summary/FieldSummaryData/getNumber()
org/apache/parquet/pig/summary/TestSummary/testMaxIsZero()#java/lang/Object/Object()
org/apache/parquet/pig/summary/TestSummary/testMaxIsZero()#org/apache/parquet/pig/summary/TupleSummaryData/getFields()
org/apache/parquet/pig/summary/TestSummary/testMaxIsZero()#java/io/PrintStream/println(java.lang.Object)
org/apache/parquet/pig/summary/TestSummary/testMaxIsZero()#org/apache/parquet/pig/summary/NumberSummaryData/getValue()
org/apache/parquet/pig/summary/TestSummary/testPigScript()#java/util/ArrayList/ArrayList()
org/apache/parquet/pig/summary/TestSummary/testPigScript()#org/apache/parquet/pig/summary/TestSummary/t(java.lang.Object[])
org/apache/parquet/pig/summary/TestSummary/testPigScript()#org/apache/parquet/pig/summary/SummaryData/fromJSON(java.lang.String,java.lang.Class)
org/apache/parquet/pig/summary/TestSummary/testPigScript()#java/lang/Class/getName()
org/apache/parquet/pig/summary/TestSummary/testPigScript()#org/apache/parquet/pig/summary/TestSummary/b(org.apache.parquet.pig.summary.Tuple[])
org/apache/parquet/pig/summary/TestSummary/testPigScript()#java/io/PrintStream/println(char[])
org/apache/parquet/pig/summary/TestSummary/testPigScript()#java/io/PrintStream/println(java.lang.Object)
org/apache/parquet/pig/summary/TestSummary/testPigScript()#org/apache/parquet/pig/summary/TestSummary/m(java.lang.Object[])
org/apache/parquet/pig/summary/TestSummary/testPigScript()#java/lang/Object/Object()
org/apache/parquet/pig/summary/TestSummary/testAlgebraic()#org/apache/parquet/pig/summary/TestSummary/validate(java.lang.String,int)
org/apache/parquet/pig/summary/TestSummary/testAlgebraic()#org/apache/parquet/pig/summary/TestSummary/t(java.lang.Object[])
org/apache/parquet/pig/summary/TestSummary/testAlgebraic()#org/apache/parquet/pig/summary/Summary/Initial/exec(org.apache.parquet.pig.Tuple)
org/apache/parquet/pig/summary/TestSummary/testAlgebraic()#org/apache/parquet/pig/summary/Summary/Intermediate/exec(org.apache.parquet.pig.Tuple)
org/apache/parquet/pig/summary/TestSummary/testAlgebraic()#org/apache/parquet/pig/summary/Summary/Intermediate/Intermediate()
org/apache/parquet/pig/summary/TestSummary/testAlgebraic()#org/apache/parquet/pig/summary/Summary/Final/exec(org.apache.parquet.pig.Tuple)
org/apache/parquet/pig/summary/TestSummary/testAlgebraic()#org/apache/parquet/pig/summary/TestSummary/b(org.apache.parquet.pig.summary.Tuple[])
org/apache/parquet/pig/summary/TestSummary/testAlgebraic()#org/apache/parquet/pig/summary/Summary/Initial/Initial()
org/apache/parquet/pig/summary/TestSummary/testAlgebraic()#org/apache/parquet/pig/summary/Summary/Final/Final()
org/apache/parquet/pig/summary/TestSummary/b(org.apache.parquet.pig.summary.Tuple[])#java/util/Arrays/asList(T[])
org/apache/parquet/pig/summary/TestSummary/m(java.lang.Object[])#java/util/HashMap/HashMap()
org/apache/parquet/pig/summary/TestSummary/m(java.lang.Object[])#java/util/Map/put(K,V)
org/apache/parquet/filter2/predicate/Operators/GtEq/accept(org.apache.parquet.filter2.predicate.FilterPredicate.Visitor)#org/apache/parquet/filter2/predicate/FilterPredicate/Visitor/visit(org.apache.parquet.filter2.predicate.Operators.GtEq)
org/apache/parquet/hadoop/util/HadoopStreams/getReadableClass()#java/lang/Class/forName(java.lang.String)
org/apache/parquet/hadoop/util/HadoopStreams/wrap(org.apache.parquet.hadoop.FSDataInputStream)#java/lang/reflect/Constructor/newInstance(java.lang.Object[])
org/apache/parquet/hadoop/util/HadoopStreams/wrap(org.apache.parquet.hadoop.FSDataInputStream)#java/lang/reflect/InvocationTargetException/getTargetException()
org/apache/parquet/hadoop/util/HadoopStreams/wrap(org.apache.parquet.hadoop.FSDataInputStream)#java/lang/Class/isInstance(java.lang.Object)
org/apache/parquet/hadoop/util/HadoopStreams/wrap(org.apache.parquet.hadoop.FSDataInputStream)#org/apache/parquet/io/ParquetDecodingException/ParquetDecodingException(java.lang.String,java.lang.Throwable)
org/apache/parquet/hadoop/util/HadoopStreams/wrap(org.apache.parquet.hadoop.FSDataInputStream)#org/apache/parquet/hadoop/util/H1SeekableInputStream/H1SeekableInputStream(org.apache.parquet.hadoop.FSDataInputStream)
org/apache/parquet/hadoop/util/HadoopStreams/getH2SeekableClass()#java/lang/Class/forName(java.lang.String)
org/apache/parquet/hadoop/util/HadoopStreams/getH2SeekableConstructor()#java/lang/Class/getConstructor(java.lang.Class<?>[])
org/apache/parquet/hadoop/util/HadoopStreams/getH2SeekableConstructor()#org/apache/parquet/hadoop/util/HadoopStreams/getH2SeekableClass()
org/apache/parquet/avro/AvroWriteSupport/ThreeLevelListWriter/startArray()#org/apache/parquet/io/api/RecordConsumer/startField(java.lang.String,int)
org/apache/parquet/avro/AvroWriteSupport/ThreeLevelListWriter/startArray()#org/apache/parquet/io/api/RecordConsumer/startGroup()
org/apache/parquet/avro/AvroWriteSupport/ThreeLevelListWriter/writeObjectArray(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,java.lang.Object[])#org/apache/parquet/io/api/RecordConsumer/startField(java.lang.String,int)
org/apache/parquet/avro/AvroWriteSupport/ThreeLevelListWriter/writeObjectArray(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,java.lang.Object[])#org/apache/parquet/schema/Type/asGroupType()
org/apache/parquet/avro/AvroWriteSupport/ThreeLevelListWriter/writeObjectArray(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,java.lang.Object[])#org/apache/parquet/io/api/RecordConsumer/endField(java.lang.String,int)
org/apache/parquet/avro/AvroWriteSupport/ThreeLevelListWriter/writeObjectArray(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,java.lang.Object[])#org/apache/parquet/schema/Type/isRepetition(org.apache.parquet.schema.Type.Repetition)
org/apache/parquet/avro/AvroWriteSupport/ThreeLevelListWriter/writeObjectArray(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,java.lang.Object[])#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/apache/parquet/avro/AvroWriteSupport/ThreeLevelListWriter/writeObjectArray(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,java.lang.Object[])#org/apache/parquet/io/api/RecordConsumer/endGroup()
org/apache/parquet/avro/AvroWriteSupport/ThreeLevelListWriter/writeObjectArray(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,java.lang.Object[])#org/apache/parquet/schema/GroupType/getType(int)
org/apache/parquet/avro/AvroWriteSupport/ThreeLevelListWriter/writeObjectArray(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,java.lang.Object[])#org/apache/parquet/io/api/RecordConsumer/startGroup()
org/apache/parquet/avro/AvroWriteSupport/ThreeLevelListWriter/writeObjectArray(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,java.lang.Object[])#org/apache/parquet/avro/AvroWriteSupport/writeValue(org.apache.parquet.schema.Type,org.apache.parquet.pig.Schema,java.lang.Object)
org/apache/parquet/avro/AvroWriteSupport/ThreeLevelListWriter/endArray()#org/apache/parquet/io/api/RecordConsumer/endField(java.lang.String,int)
org/apache/parquet/avro/AvroWriteSupport/ThreeLevelListWriter/endArray()#org/apache/parquet/io/api/RecordConsumer/endGroup()
org/apache/parquet/avro/AvroWriteSupport/ThreeLevelListWriter/writeCollection(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,java.util.Collection)#org/apache/parquet/io/api/RecordConsumer/startField(java.lang.String,int)
org/apache/parquet/avro/AvroWriteSupport/ThreeLevelListWriter/writeCollection(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,java.util.Collection)#org/apache/parquet/schema/Type/asGroupType()
org/apache/parquet/avro/AvroWriteSupport/ThreeLevelListWriter/writeCollection(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,java.util.Collection)#org/apache/parquet/schema/Type/isRepetition(org.apache.parquet.schema.Type.Repetition)
org/apache/parquet/avro/AvroWriteSupport/ThreeLevelListWriter/writeCollection(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,java.util.Collection)#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/apache/parquet/avro/AvroWriteSupport/ThreeLevelListWriter/writeCollection(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,java.util.Collection)#org/apache/parquet/io/api/RecordConsumer/endGroup()
org/apache/parquet/avro/AvroWriteSupport/ThreeLevelListWriter/writeCollection(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,java.util.Collection)#org/apache/parquet/schema/GroupType/getType(int)
org/apache/parquet/avro/AvroWriteSupport/ThreeLevelListWriter/writeCollection(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,java.util.Collection)#java/util/Collection/size()
org/apache/parquet/avro/AvroWriteSupport/ThreeLevelListWriter/writeCollection(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,java.util.Collection)#org/apache/parquet/io/api/RecordConsumer/endField(java.lang.String,int)
org/apache/parquet/avro/AvroWriteSupport/ThreeLevelListWriter/writeCollection(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,java.util.Collection)#org/apache/parquet/io/api/RecordConsumer/startGroup()
org/apache/parquet/avro/AvroWriteSupport/ThreeLevelListWriter/writeCollection(org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,java.util.Collection)#org/apache/parquet/avro/AvroWriteSupport/writeValue(org.apache.parquet.schema.Type,org.apache.parquet.pig.Schema,java.lang.Object)
org/apache/parquet/hadoop/TestSnappyCodec/TestSnappy(org.apache.parquet.hadoop.codec.SnappyCompressor,org.apache.parquet.hadoop.codec.SnappyDecompressor,java.lang.String[])#org/apache/parquet/hadoop/codec/SnappyCompressor/reset()
org/apache/parquet/hadoop/TestSnappyCodec/TestSnappy(org.apache.parquet.hadoop.codec.SnappyCompressor,org.apache.parquet.hadoop.codec.SnappyDecompressor,java.lang.String[])#org/apache/parquet/hadoop/codec/SnappyDecompressor/reset()
org/apache/parquet/hadoop/TestSnappyCodec/TestSnappy(org.apache.parquet.hadoop.codec.SnappyCompressor,org.apache.parquet.hadoop.codec.SnappyDecompressor,java.lang.String[])#java/lang/String/length()
org/apache/parquet/hadoop/TestSnappyCodec/TestSnappy(org.apache.parquet.hadoop.codec.SnappyCompressor,org.apache.parquet.hadoop.codec.SnappyDecompressor,java.lang.String[])#org/apache/parquet/hadoop/codec/SnappyDecompressor/needsInput()
org/apache/parquet/hadoop/TestSnappyCodec/TestSnappy(org.apache.parquet.hadoop.codec.SnappyCompressor,org.apache.parquet.hadoop.codec.SnappyDecompressor,java.lang.String[])#org/apache/parquet/hadoop/codec/SnappyCompressor/needsInput()
org/apache/parquet/hadoop/TestSnappyCodec/TestSnappy(org.apache.parquet.hadoop.codec.SnappyCompressor,org.apache.parquet.hadoop.codec.SnappyDecompressor,java.lang.String[])#org/apache/parquet/hadoop/codec/SnappyDecompressor/finished()
org/apache/parquet/hadoop/TestSnappyCodec/TestSnappy(org.apache.parquet.hadoop.codec.SnappyCompressor,org.apache.parquet.hadoop.codec.SnappyDecompressor,java.lang.String[])#org/apache/parquet/hadoop/codec/SnappyCompressor/finish()
org/apache/parquet/hadoop/TestSnappyCodec/TestSnappy(org.apache.parquet.hadoop.codec.SnappyCompressor,org.apache.parquet.hadoop.codec.SnappyDecompressor,java.lang.String[])#org/apache/parquet/hadoop/codec/SnappyDecompressor/setInput(byte[],int,int)
org/apache/parquet/hadoop/TestSnappyCodec/TestSnappy(org.apache.parquet.hadoop.codec.SnappyCompressor,org.apache.parquet.hadoop.codec.SnappyDecompressor,java.lang.String[])#org/apache/parquet/hadoop/codec/SnappyCompressor/setInput(byte[],int,int)
org/apache/parquet/hadoop/TestSnappyCodec/TestSnappy(org.apache.parquet.hadoop.codec.SnappyCompressor,org.apache.parquet.hadoop.codec.SnappyDecompressor,java.lang.String[])#org/apache/parquet/hadoop/codec/SnappyDecompressor/decompress(byte[],int,int)
org/apache/parquet/hadoop/TestSnappyCodec/TestSnappy(org.apache.parquet.hadoop.codec.SnappyCompressor,org.apache.parquet.hadoop.codec.SnappyDecompressor,java.lang.String[])#org/apache/parquet/hadoop/codec/SnappyCompressor/finished()
org/apache/parquet/hadoop/TestSnappyCodec/TestSnappy(org.apache.parquet.hadoop.codec.SnappyCompressor,org.apache.parquet.hadoop.codec.SnappyDecompressor,java.lang.String[])#org/apache/parquet/hadoop/codec/SnappyCompressor/compress(byte[],int,int)
org/apache/parquet/hadoop/TestSnappyCodec/TestSnappy(org.apache.parquet.hadoop.codec.SnappyCompressor,org.apache.parquet.hadoop.codec.SnappyDecompressor,java.lang.String[])#java/lang/String/getBytes()
org/apache/parquet/hadoop/TestSnappyCodec/TestSnappy(org.apache.parquet.hadoop.codec.SnappyCompressor,org.apache.parquet.hadoop.codec.SnappyDecompressor,java.lang.String[])#java/lang/System/arraycopy(java.lang.Object,int,java.lang.Object,int,int)
org/apache/parquet/hadoop/TestSnappyCodec/TestSnappyStream()#org/apache/parquet/hadoop/codec/SnappyCodec/setConf(org.apache.parquet.hadoop.Configuration)
org/apache/parquet/hadoop/TestSnappyCodec/TestSnappyStream()#org/apache/parquet/hadoop/codec/SnappyCodec/SnappyCodec()
org/apache/parquet/hadoop/TestSnappyCodec/TestSnappyStream()#org/apache/parquet/hadoop/codec/SnappyCodec/createOutputStream(java.io.OutputStream)
org/apache/parquet/hadoop/TestSnappyCodec/TestSnappyStream()#java/io/ByteArrayOutputStream/toByteArray()
org/apache/parquet/hadoop/TestSnappyCodec/TestSnappyStream()#java/lang/Math/min(int,int)
org/apache/parquet/hadoop/TestSnappyCodec/TestSnappyStream()#java/io/ByteArrayOutputStream/ByteArrayOutputStream()
org/apache/parquet/hadoop/TestSnappyCodec/TestSnappyStream()#java/io/ByteArrayInputStream/ByteArrayInputStream(byte[])
org/apache/parquet/hadoop/TestSnappyCodec/TestSnappyStream()#org/apache/parquet/hadoop/codec/SnappyCodec/createInputStream(java.io.InputStream)
org/apache/parquet/hadoop/TestSnappyCodec/TestSnappy()#org/apache/parquet/hadoop/TestSnappyCodec/TestSnappy(org.apache.parquet.hadoop.codec.SnappyCompressor,org.apache.parquet.hadoop.codec.SnappyDecompressor,java.lang.String[])
org/apache/parquet/hadoop/TestSnappyCodec/TestSnappy()#org/apache/parquet/hadoop/codec/SnappyCompressor/SnappyCompressor()
org/apache/parquet/hadoop/TestSnappyCodec/TestSnappy()#org/apache/parquet/hadoop/codec/SnappyDecompressor/SnappyDecompressor()
org/apache/parquet/filter2/recordlevel/TestIncrementallyUpdatedFilterPredicateEvaluator/intIsNull()#org/apache/parquet/filter2/recordlevel/TestIncrementallyUpdatedFilterPredicateEvaluator/intIsNull()/$anonymous1/()
org/apache/parquet/filter2/recordlevel/TestIncrementallyUpdatedFilterPredicateEvaluator/testOr()#org/apache/parquet/filter2/recordlevel/TestIncrementallyUpdatedFilterPredicateEvaluator/doOrTest(org.apache.parquet.filter2.recordlevel.IncrementallyUpdatedFilterPredicate.ValueInspector,org.apache.parquet.filter2.recordlevel.IncrementallyUpdatedFilterPredicate.ValueInspector,int,int,boolean)
org/apache/parquet/filter2/recordlevel/TestIncrementallyUpdatedFilterPredicateEvaluator/testOr()#org/apache/parquet/filter2/recordlevel/TestIncrementallyUpdatedFilterPredicateEvaluator/intIsEven()
org/apache/parquet/filter2/recordlevel/TestIncrementallyUpdatedFilterPredicateEvaluator/testValueInspector()#org/apache/parquet/filter2/recordlevel/TestIncrementallyUpdatedFilterPredicateEvaluator/intIsNull()
org/apache/parquet/filter2/recordlevel/TestIncrementallyUpdatedFilterPredicateEvaluator/testValueInspector()#org/apache/parquet/filter2/recordlevel/IncrementallyUpdatedFilterPredicate/ValueInspector/reset()
org/apache/parquet/filter2/recordlevel/TestIncrementallyUpdatedFilterPredicateEvaluator/testValueInspector()#org/apache/parquet/filter2/recordlevel/IncrementallyUpdatedFilterPredicate/ValueInspector/updateNull()
org/apache/parquet/filter2/recordlevel/TestIncrementallyUpdatedFilterPredicateEvaluator/testValueInspector()#org/apache/parquet/filter2/recordlevel/IncrementallyUpdatedFilterPredicateEvaluator/evaluate(org.apache.parquet.filter2.recordlevel.IncrementallyUpdatedFilterPredicate)
org/apache/parquet/filter2/recordlevel/TestIncrementallyUpdatedFilterPredicateEvaluator/testValueInspector()#org/apache/parquet/filter2/recordlevel/IncrementallyUpdatedFilterPredicate/ValueInspector/update(int)
org/apache/parquet/filter2/recordlevel/TestIncrementallyUpdatedFilterPredicateEvaluator/testValueInspector()#org/apache/parquet/filter2/recordlevel/TestIncrementallyUpdatedFilterPredicateEvaluator/intIsEven()
org/apache/parquet/filter2/recordlevel/TestIncrementallyUpdatedFilterPredicateEvaluator/testAnd()#org/apache/parquet/filter2/recordlevel/TestIncrementallyUpdatedFilterPredicateEvaluator/intIsEven()
org/apache/parquet/filter2/recordlevel/TestIncrementallyUpdatedFilterPredicateEvaluator/testAnd()#org/apache/parquet/filter2/recordlevel/TestIncrementallyUpdatedFilterPredicateEvaluator/doAndTest(org.apache.parquet.filter2.recordlevel.IncrementallyUpdatedFilterPredicate.ValueInspector,org.apache.parquet.filter2.recordlevel.IncrementallyUpdatedFilterPredicate.ValueInspector,int,int,boolean)
org/apache/parquet/filter2/recordlevel/TestIncrementallyUpdatedFilterPredicateEvaluator/doOrTest(org.apache.parquet.filter2.recordlevel.IncrementallyUpdatedFilterPredicate.ValueInspector,org.apache.parquet.filter2.recordlevel.IncrementallyUpdatedFilterPredicate.ValueInspector,int,int,boolean)#org/apache/parquet/filter2/recordlevel/IncrementallyUpdatedFilterPredicate/ValueInspector/reset()
org/apache/parquet/filter2/recordlevel/TestIncrementallyUpdatedFilterPredicateEvaluator/doOrTest(org.apache.parquet.filter2.recordlevel.IncrementallyUpdatedFilterPredicate.ValueInspector,org.apache.parquet.filter2.recordlevel.IncrementallyUpdatedFilterPredicate.ValueInspector,int,int,boolean)#org/apache/parquet/filter2/recordlevel/IncrementallyUpdatedFilterPredicateEvaluator/evaluate(org.apache.parquet.filter2.recordlevel.IncrementallyUpdatedFilterPredicate)
org/apache/parquet/filter2/recordlevel/TestIncrementallyUpdatedFilterPredicateEvaluator/doOrTest(org.apache.parquet.filter2.recordlevel.IncrementallyUpdatedFilterPredicate.ValueInspector,org.apache.parquet.filter2.recordlevel.IncrementallyUpdatedFilterPredicate.ValueInspector,int,int,boolean)#org/apache/parquet/filter2/recordlevel/IncrementallyUpdatedFilterPredicate/ValueInspector/update(int)
org/apache/parquet/filter2/recordlevel/TestIncrementallyUpdatedFilterPredicateEvaluator/doOrTest(org.apache.parquet.filter2.recordlevel.IncrementallyUpdatedFilterPredicate.ValueInspector,org.apache.parquet.filter2.recordlevel.IncrementallyUpdatedFilterPredicate.ValueInspector,int,int,boolean)#org/apache/parquet/filter2/recordlevel/IncrementallyUpdatedFilterPredicate/Or/Or(org.apache.parquet.filter2.recordlevel.IncrementallyUpdatedFilterPredicate,org.apache.parquet.filter2.recordlevel.IncrementallyUpdatedFilterPredicate)
org/apache/parquet/filter2/recordlevel/TestIncrementallyUpdatedFilterPredicateEvaluator/testShortCircuit()#org/apache/parquet/filter2/recordlevel/TestIncrementallyUpdatedFilterPredicateEvaluator/testShortCircuit()/$anonymous1/()
org/apache/parquet/filter2/recordlevel/TestIncrementallyUpdatedFilterPredicateEvaluator/testShortCircuit()#org/apache/parquet/filter2/recordlevel/IncrementallyUpdatedFilterPredicate/ValueInspector/reset()
org/apache/parquet/filter2/recordlevel/TestIncrementallyUpdatedFilterPredicateEvaluator/testShortCircuit()#org/apache/parquet/filter2/recordlevel/IncrementallyUpdatedFilterPredicate/And/And(org.apache.parquet.filter2.recordlevel.IncrementallyUpdatedFilterPredicate,org.apache.parquet.filter2.recordlevel.IncrementallyUpdatedFilterPredicate)
org/apache/parquet/filter2/recordlevel/TestIncrementallyUpdatedFilterPredicateEvaluator/testShortCircuit()#org/apache/parquet/filter2/recordlevel/IncrementallyUpdatedFilterPredicateEvaluator/evaluate(org.apache.parquet.filter2.recordlevel.IncrementallyUpdatedFilterPredicate)
org/apache/parquet/filter2/recordlevel/TestIncrementallyUpdatedFilterPredicateEvaluator/testShortCircuit()#org/apache/parquet/filter2/recordlevel/IncrementallyUpdatedFilterPredicate/ValueInspector/update(int)
org/apache/parquet/filter2/recordlevel/TestIncrementallyUpdatedFilterPredicateEvaluator/testShortCircuit()#org/apache/parquet/filter2/recordlevel/TestIncrementallyUpdatedFilterPredicateEvaluator/intIsEven()
org/apache/parquet/filter2/recordlevel/TestIncrementallyUpdatedFilterPredicateEvaluator/testShortCircuit()#org/apache/parquet/filter2/recordlevel/IncrementallyUpdatedFilterPredicate/Or/Or(org.apache.parquet.filter2.recordlevel.IncrementallyUpdatedFilterPredicate,org.apache.parquet.filter2.recordlevel.IncrementallyUpdatedFilterPredicate)
org/apache/parquet/filter2/recordlevel/TestIncrementallyUpdatedFilterPredicateEvaluator/doubleMoreThan10()#org/apache/parquet/filter2/recordlevel/TestIncrementallyUpdatedFilterPredicateEvaluator/doubleMoreThan10()/$anonymous1/()
org/apache/parquet/filter2/recordlevel/TestIncrementallyUpdatedFilterPredicateEvaluator/intIsEven()#org/apache/parquet/filter2/recordlevel/TestIncrementallyUpdatedFilterPredicateEvaluator/intIsEven()/$anonymous1/()
org/apache/parquet/filter2/recordlevel/TestIncrementallyUpdatedFilterPredicateEvaluator/doAndTest(org.apache.parquet.filter2.recordlevel.IncrementallyUpdatedFilterPredicate.ValueInspector,org.apache.parquet.filter2.recordlevel.IncrementallyUpdatedFilterPredicate.ValueInspector,int,int,boolean)#org/apache/parquet/filter2/recordlevel/IncrementallyUpdatedFilterPredicate/ValueInspector/reset()
org/apache/parquet/filter2/recordlevel/TestIncrementallyUpdatedFilterPredicateEvaluator/doAndTest(org.apache.parquet.filter2.recordlevel.IncrementallyUpdatedFilterPredicate.ValueInspector,org.apache.parquet.filter2.recordlevel.IncrementallyUpdatedFilterPredicate.ValueInspector,int,int,boolean)#org/apache/parquet/filter2/recordlevel/IncrementallyUpdatedFilterPredicate/And/And(org.apache.parquet.filter2.recordlevel.IncrementallyUpdatedFilterPredicate,org.apache.parquet.filter2.recordlevel.IncrementallyUpdatedFilterPredicate)
org/apache/parquet/filter2/recordlevel/TestIncrementallyUpdatedFilterPredicateEvaluator/doAndTest(org.apache.parquet.filter2.recordlevel.IncrementallyUpdatedFilterPredicate.ValueInspector,org.apache.parquet.filter2.recordlevel.IncrementallyUpdatedFilterPredicate.ValueInspector,int,int,boolean)#org/apache/parquet/filter2/recordlevel/IncrementallyUpdatedFilterPredicateEvaluator/evaluate(org.apache.parquet.filter2.recordlevel.IncrementallyUpdatedFilterPredicate)
org/apache/parquet/filter2/recordlevel/TestIncrementallyUpdatedFilterPredicateEvaluator/doAndTest(org.apache.parquet.filter2.recordlevel.IncrementallyUpdatedFilterPredicate.ValueInspector,org.apache.parquet.filter2.recordlevel.IncrementallyUpdatedFilterPredicate.ValueInspector,int,int,boolean)#org/apache/parquet/filter2/recordlevel/IncrementallyUpdatedFilterPredicate/ValueInspector/update(int)
org/apache/parquet/avro/AvroIndexedRecordConverter/FieldEnumConverter/addBinary(org.apache.parquet.io.api.Binary)#org/apache/parquet/io/api/Binary/toStringUsingUTF8()
org/apache/parquet/avro/AvroIndexedRecordConverter/FieldEnumConverter/addBinary(org.apache.parquet.io.api.Binary)#java/lang/Enum/valueOf(java.lang.Class,java.lang.String)
org/apache/parquet/avro/AvroIndexedRecordConverter/FieldEnumConverter/addBinary(org.apache.parquet.io.api.Binary)#org/apache/parquet/avro/ParentValueContainer/add(java.lang.Object)
org/apache/parquet/filter2/statisticslevel/TestStatisticsFilter/SevensAndEightsUdp/canDrop(org.apache.parquet.filter2.predicate.Statistics)#org/apache/parquet/filter2/predicate/Statistics/getMin()
org/apache/parquet/filter2/statisticslevel/TestStatisticsFilter/SevensAndEightsUdp/canDrop(org.apache.parquet.filter2.predicate.Statistics)#org/apache/parquet/filter2/predicate/Statistics/getMax()
org/apache/parquet/filter2/statisticslevel/TestStatisticsFilter/SevensAndEightsUdp/keep(java.lang.Integer)#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/apache/parquet/filter2/statisticslevel/TestStatisticsFilter/SevensAndEightsUdp/inverseCanDrop(org.apache.parquet.filter2.predicate.Statistics)#org/apache/parquet/filter2/predicate/Statistics/getMin()
org/apache/parquet/filter2/statisticslevel/TestStatisticsFilter/SevensAndEightsUdp/inverseCanDrop(org.apache.parquet.filter2.predicate.Statistics)#org/apache/parquet/filter2/predicate/Statistics/getMax()
org/apache/parquet/schema/Types/BaseMapBuilder/MapValueBuilder/named(java.lang.String)#org/apache/parquet/schema/Types/Builder/named(java.lang.String)
org/apache/parquet/schema/Types/BaseMapBuilder/MapValueBuilder/named(java.lang.String)#org/apache/parquet/schema/Types/BaseMapBuilder/build(java.lang.String)
org/apache/parquet/schema/Types/BaseMapBuilder/MapValueBuilder/named(java.lang.String)#org/apache/parquet/schema/Types/BaseMapBuilder/setValueType(org.apache.parquet.schema.Type)
org/apache/parquet/bytes/BytesInput/StreamBytesInput/writeAllTo(java.io.OutputStream)#org/apache/parquet/bytes/BytesInput/StreamBytesInput/toByteArray()
org/apache/parquet/bytes/BytesInput/StreamBytesInput/writeAllTo(java.io.OutputStream)#java/io/OutputStream/write(byte[])
org/apache/parquet/bytes/BytesInput/StreamBytesInput/toByteArray()#java/io/DataInputStream/DataInputStream(java.io.InputStream)
org/apache/parquet/bytes/BytesInput/StreamBytesInput/toByteArray()#java/io/DataInputStream/readFully(byte[])
org/apache/parquet/column/statistics/DoubleStatistics/setMinMax(double,double)#org/apache/parquet/column/statistics/Statistics/markAsNotEmpty()
org/apache/parquet/column/statistics/DoubleStatistics/getMaxBytes()#org/apache/parquet/bytes/BytesUtils/longToBytes(long)
org/apache/parquet/column/statistics/DoubleStatistics/getMaxBytes()#java/lang/Double/doubleToLongBits(double)
org/apache/parquet/column/statistics/DoubleStatistics/initializeStats(double,double)#org/apache/parquet/column/statistics/Statistics/markAsNotEmpty()
org/apache/parquet/column/statistics/DoubleStatistics/mergeStatisticsMinMax(org.apache.parquet.column.statistics.Statistics)#org/apache/parquet/column/statistics/DoubleStatistics/initializeStats(double,double)
org/apache/parquet/column/statistics/DoubleStatistics/mergeStatisticsMinMax(org.apache.parquet.column.statistics.Statistics)#org/apache/parquet/column/statistics/Statistics/hasNonNullValue()
org/apache/parquet/column/statistics/DoubleStatistics/mergeStatisticsMinMax(org.apache.parquet.column.statistics.Statistics)#org/apache/parquet/column/statistics/DoubleStatistics/getMin()
org/apache/parquet/column/statistics/DoubleStatistics/mergeStatisticsMinMax(org.apache.parquet.column.statistics.Statistics)#org/apache/parquet/column/statistics/DoubleStatistics/getMax()
org/apache/parquet/column/statistics/DoubleStatistics/mergeStatisticsMinMax(org.apache.parquet.column.statistics.Statistics)#org/apache/parquet/column/statistics/DoubleStatistics/updateStats(double,double)
org/apache/parquet/column/statistics/DoubleStatistics/setMinMaxFromBytes(byte[],byte[])#org/apache/parquet/bytes/BytesUtils/bytesToLong(byte[])
org/apache/parquet/column/statistics/DoubleStatistics/setMinMaxFromBytes(byte[],byte[])#java/lang/Double/longBitsToDouble(long)
org/apache/parquet/column/statistics/DoubleStatistics/setMinMaxFromBytes(byte[],byte[])#org/apache/parquet/column/statistics/Statistics/markAsNotEmpty()
org/apache/parquet/column/statistics/DoubleStatistics/updateStats(double)#org/apache/parquet/column/statistics/DoubleStatistics/initializeStats(double,double)
org/apache/parquet/column/statistics/DoubleStatistics/updateStats(double)#org/apache/parquet/column/statistics/Statistics/hasNonNullValue()
org/apache/parquet/column/statistics/DoubleStatistics/updateStats(double)#org/apache/parquet/column/statistics/DoubleStatistics/updateStats(double,double)
org/apache/parquet/column/statistics/DoubleStatistics/isSmallerThan(long)#org/apache/parquet/column/statistics/Statistics/hasNonNullValue()
org/apache/parquet/column/statistics/DoubleStatistics/getMinBytes()#org/apache/parquet/bytes/BytesUtils/longToBytes(long)
org/apache/parquet/column/statistics/DoubleStatistics/getMinBytes()#java/lang/Double/doubleToLongBits(double)
org/apache/parquet/column/statistics/DoubleStatistics/toString()#org/apache/parquet/column/statistics/Statistics/hasNonNullValue()
org/apache/parquet/column/statistics/DoubleStatistics/toString()#java/lang/String/format(java.lang.String,java.lang.Object[])
org/apache/parquet/column/statistics/DoubleStatistics/toString()#org/apache/parquet/column/statistics/Statistics/getNumNulls()
org/apache/parquet/column/statistics/DoubleStatistics/toString()#org/apache/parquet/column/statistics/Statistics/isEmpty()
org/apache/parquet/thrift/ThriftSchemaConvertVisitor/visitPrimitiveType(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.thrift.ThriftSchemaConvertVisitor.State)#org/apache/parquet/thrift/ThriftSchemaConvertVisitor/visitPrimitiveType(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.schema.OriginalType,org.apache.parquet.thrift.ThriftSchemaConvertVisitor.State)
org/apache/parquet/thrift/ThriftSchemaConvertVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.I64Type,org.apache.parquet.thrift.ThriftSchemaConvertVisitor.State)#org/apache/parquet/thrift/ThriftSchemaConvertVisitor/visitPrimitiveType(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.thrift.ThriftSchemaConvertVisitor.State)
org/apache/parquet/thrift/ThriftSchemaConvertVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.I32Type,org.apache.parquet.thrift.ThriftSchemaConvertVisitor.State)#org/apache/parquet/thrift/ThriftSchemaConvertVisitor/visitPrimitiveType(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.thrift.ThriftSchemaConvertVisitor.State)
org/apache/parquet/thrift/ThriftSchemaConvertVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.StructType,org.apache.parquet.thrift.ThriftSchemaConvertVisitor.State)#org/apache/parquet/thrift/ConvertedField/Keep/Keep(org.apache.parquet.thrift.projection.FieldsPath,org.apache.parquet.schema.Type)
org/apache/parquet/thrift/ThriftSchemaConvertVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.StructType,org.apache.parquet.thrift.ThriftSchemaConvertVisitor.State)#org/apache/parquet/thrift/struct/ThriftField/getType()
org/apache/parquet/thrift/ThriftSchemaConvertVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.StructType,org.apache.parquet.thrift.ThriftSchemaConvertVisitor.State)#org/apache/parquet/schema/GroupType/GroupType(org.apache.parquet.schema.Type.Repetition,java.lang.String,java.util.List)
org/apache/parquet/thrift/ThriftSchemaConvertVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.StructType,org.apache.parquet.thrift.ThriftSchemaConvertVisitor.State)#org/apache/parquet/thrift/struct/ThriftType/StructType/getStructOrUnionType()
org/apache/parquet/thrift/ThriftSchemaConvertVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.StructType,org.apache.parquet.thrift.ThriftSchemaConvertVisitor.State)#org/apache/parquet/thrift/ConvertedField/asKeep()
org/apache/parquet/thrift/ThriftSchemaConvertVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.StructType,org.apache.parquet.thrift.ThriftSchemaConvertVisitor.State)#org/apache/parquet/thrift/struct/ThriftType/StructType/getChildren()
org/apache/parquet/thrift/ThriftSchemaConvertVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.StructType,org.apache.parquet.thrift.ThriftSchemaConvertVisitor.State)#java/util/List/add(E)
org/apache/parquet/thrift/ThriftSchemaConvertVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.StructType,org.apache.parquet.thrift.ThriftSchemaConvertVisitor.State)#org/apache/parquet/thrift/struct/ThriftField/getName()
org/apache/parquet/thrift/ThriftSchemaConvertVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.StructType,org.apache.parquet.thrift.ThriftSchemaConvertVisitor.State)#org/apache/parquet/thrift/ConvertedField/isSentinelUnion()
org/apache/parquet/thrift/ThriftSchemaConvertVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.StructType,org.apache.parquet.thrift.ThriftSchemaConvertVisitor.State)#org/apache/parquet/thrift/ConvertedField/SentinelUnion/SentinelUnion(org.apache.parquet.thrift.projection.FieldsPath,org.apache.parquet.schema.Type)
org/apache/parquet/thrift/ThriftSchemaConvertVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.StructType,org.apache.parquet.thrift.ThriftSchemaConvertVisitor.State)#org/apache/parquet/thrift/projection/FieldsPath/push(org.apache.parquet.thrift.struct.ThriftField)
org/apache/parquet/thrift/ThriftSchemaConvertVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.StructType,org.apache.parquet.thrift.ThriftSchemaConvertVisitor.State)#org/apache/parquet/thrift/ThriftSchemaConvertVisitor/getRepetition(org.apache.parquet.thrift.struct.ThriftField)
org/apache/parquet/thrift/ThriftSchemaConvertVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.StructType,org.apache.parquet.thrift.ThriftSchemaConvertVisitor.State)#org/apache/parquet/thrift/ThriftSchemaConvertVisitor/State/State(org.apache.parquet.thrift.projection.FieldsPath,org.apache.parquet.schema.Type.Repetition,java.lang.String)
org/apache/parquet/thrift/ThriftSchemaConvertVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.StructType,org.apache.parquet.thrift.ThriftSchemaConvertVisitor.State)#org/apache/parquet/schema/Type/withId(int)
org/apache/parquet/thrift/ThriftSchemaConvertVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.StructType,org.apache.parquet.thrift.ThriftSchemaConvertVisitor.State)#java/util/ArrayList/ArrayList()
org/apache/parquet/thrift/ThriftSchemaConvertVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.StructType,org.apache.parquet.thrift.ThriftSchemaConvertVisitor.State)#org/apache/parquet/thrift/ConvertedField/SentinelUnion/getType()
org/apache/parquet/thrift/ThriftSchemaConvertVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.StructType,org.apache.parquet.thrift.ThriftSchemaConvertVisitor.State)#org/apache/parquet/thrift/ConvertedField/Keep/getType()
org/apache/parquet/thrift/ThriftSchemaConvertVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.StructType,org.apache.parquet.thrift.ThriftSchemaConvertVisitor.State)#org/apache/parquet/thrift/ConvertedField/isKeep()
org/apache/parquet/thrift/ThriftSchemaConvertVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.StructType,org.apache.parquet.thrift.ThriftSchemaConvertVisitor.State)#org/apache/parquet/thrift/KeepOnlyFirstPrimitiveFilter/KeepOnlyFirstPrimitiveFilter()
org/apache/parquet/thrift/ThriftSchemaConvertVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.StructType,org.apache.parquet.thrift.ThriftSchemaConvertVisitor.State)#org/apache/parquet/thrift/ThriftSchemaConvertVisitor/ThriftSchemaConvertVisitor(org.apache.parquet.thrift.projection.FieldProjectionFilter,boolean,boolean)
org/apache/parquet/thrift/ThriftSchemaConvertVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.StructType,org.apache.parquet.thrift.ThriftSchemaConvertVisitor.State)#org/apache/parquet/thrift/ConvertedField/Drop/Drop(org.apache.parquet.thrift.projection.FieldsPath)
org/apache/parquet/thrift/ThriftSchemaConvertVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.StructType,org.apache.parquet.thrift.ThriftSchemaConvertVisitor.State)#org/apache/parquet/thrift/ConvertedField/asSentinelUnion()
org/apache/parquet/thrift/ThriftSchemaConvertVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.StructType,org.apache.parquet.thrift.ThriftSchemaConvertVisitor.State)#org/apache/parquet/thrift/ThriftSchemaConvertVisitor/isUnion(org.apache.parquet.thrift.struct.ThriftType.StructType.StructOrUnionType)
org/apache/parquet/thrift/ThriftSchemaConvertVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.StructType,org.apache.parquet.thrift.ThriftSchemaConvertVisitor.State)#org/apache/parquet/thrift/struct/ThriftType/accept(org.apache.parquet.thrift.struct.ThriftType.StateVisitor,S)
org/apache/parquet/thrift/ThriftSchemaConvertVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.StructType,org.apache.parquet.thrift.ThriftSchemaConvertVisitor.State)#org/apache/parquet/thrift/struct/ThriftField/getFieldId()
org/apache/parquet/thrift/ThriftSchemaConvertVisitor/visitListLike(org.apache.parquet.thrift.struct.ThriftField,org.apache.parquet.thrift.ThriftSchemaConvertVisitor.State,boolean)#org/apache/parquet/thrift/ThriftSchemaConvertVisitor/State/State(org.apache.parquet.thrift.projection.FieldsPath,org.apache.parquet.schema.Type.Repetition,java.lang.String)
org/apache/parquet/thrift/ThriftSchemaConvertVisitor/visitListLike(org.apache.parquet.thrift.struct.ThriftField,org.apache.parquet.thrift.ThriftSchemaConvertVisitor.State,boolean)#org/apache/parquet/thrift/ConvertedField/Keep/Keep(org.apache.parquet.thrift.projection.FieldsPath,org.apache.parquet.schema.Type)
org/apache/parquet/thrift/ThriftSchemaConvertVisitor/visitListLike(org.apache.parquet.thrift.struct.ThriftField,org.apache.parquet.thrift.ThriftSchemaConvertVisitor.State,boolean)#org/apache/parquet/thrift/ConvertedField/Keep/getType()
org/apache/parquet/thrift/ThriftSchemaConvertVisitor/visitListLike(org.apache.parquet.thrift.struct.ThriftField,org.apache.parquet.thrift.ThriftSchemaConvertVisitor.State,boolean)#org/apache/parquet/thrift/struct/ThriftField/getType()
org/apache/parquet/thrift/ThriftSchemaConvertVisitor/visitListLike(org.apache.parquet.thrift.struct.ThriftField,org.apache.parquet.thrift.ThriftSchemaConvertVisitor.State,boolean)#org/apache/parquet/thrift/ConvertedField/isKeep()
org/apache/parquet/thrift/ThriftSchemaConvertVisitor/visitListLike(org.apache.parquet.thrift.struct.ThriftField,org.apache.parquet.thrift.ThriftSchemaConvertVisitor.State,boolean)#org/apache/parquet/thrift/ConvertedField/asKeep()
org/apache/parquet/thrift/ThriftSchemaConvertVisitor/visitListLike(org.apache.parquet.thrift.struct.ThriftField,org.apache.parquet.thrift.ThriftSchemaConvertVisitor.State,boolean)#org/apache/parquet/thrift/struct/ThriftType/accept(org.apache.parquet.thrift.struct.ThriftType.StateVisitor,S)
org/apache/parquet/thrift/ThriftSchemaConvertVisitor/visitListLike(org.apache.parquet.thrift.struct.ThriftField,org.apache.parquet.thrift.ThriftSchemaConvertVisitor.State,boolean)#org/apache/parquet/schema/ConversionPatterns/listType(org.apache.parquet.schema.Type.Repetition,java.lang.String,org.apache.parquet.schema.Type)
org/apache/parquet/thrift/ThriftSchemaConvertVisitor/visitListLike(org.apache.parquet.thrift.struct.ThriftField,org.apache.parquet.thrift.ThriftSchemaConvertVisitor.State,boolean)#org/apache/parquet/thrift/projection/ThriftProjectionException/ThriftProjectionException(java.lang.String)
org/apache/parquet/thrift/ThriftSchemaConvertVisitor/visitListLike(org.apache.parquet.thrift.struct.ThriftField,org.apache.parquet.thrift.ThriftSchemaConvertVisitor.State,boolean)#org/apache/parquet/schema/Type/equals(java.lang.Object)
org/apache/parquet/thrift/ThriftSchemaConvertVisitor/visitListLike(org.apache.parquet.thrift.struct.ThriftField,org.apache.parquet.thrift.ThriftSchemaConvertVisitor.State,boolean)#org/apache/parquet/thrift/ThriftSchemaConvertVisitor/ThriftSchemaConvertVisitor(org.apache.parquet.thrift.projection.FieldProjectionFilter,boolean,boolean)
org/apache/parquet/thrift/ThriftSchemaConvertVisitor/visitListLike(org.apache.parquet.thrift.struct.ThriftField,org.apache.parquet.thrift.ThriftSchemaConvertVisitor.State,boolean)#org/apache/parquet/thrift/ConvertedField/Drop/Drop(org.apache.parquet.thrift.projection.FieldsPath)
org/apache/parquet/thrift/ThriftSchemaConvertVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.EnumType,org.apache.parquet.thrift.ThriftSchemaConvertVisitor.State)#org/apache/parquet/thrift/ThriftSchemaConvertVisitor/visitPrimitiveType(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.schema.OriginalType,org.apache.parquet.thrift.ThriftSchemaConvertVisitor.State)
org/apache/parquet/thrift/ThriftSchemaConvertVisitor/convert(org.apache.parquet.thrift.struct.ThriftType.StructType,org.apache.parquet.thrift.projection.FieldProjectionFilter,boolean)#org/apache/parquet/thrift/projection/ThriftProjectionException/ThriftProjectionException(java.lang.String)
org/apache/parquet/thrift/ThriftSchemaConvertVisitor/convert(org.apache.parquet.thrift.struct.ThriftType.StructType,org.apache.parquet.thrift.projection.FieldProjectionFilter,boolean)#org/apache/parquet/thrift/ThriftSchemaConvertVisitor/State/State(org.apache.parquet.thrift.projection.FieldsPath,org.apache.parquet.schema.Type.Repetition,java.lang.String)
org/apache/parquet/thrift/ThriftSchemaConvertVisitor/convert(org.apache.parquet.thrift.struct.ThriftType.StructType,org.apache.parquet.thrift.projection.FieldProjectionFilter,boolean)#org/apache/parquet/thrift/ConvertedField/Keep/getType()
org/apache/parquet/thrift/ThriftSchemaConvertVisitor/convert(org.apache.parquet.thrift.struct.ThriftType.StructType,org.apache.parquet.thrift.projection.FieldProjectionFilter,boolean)#org/apache/parquet/schema/Type/asGroupType()
org/apache/parquet/thrift/ThriftSchemaConvertVisitor/convert(org.apache.parquet.thrift.struct.ThriftType.StructType,org.apache.parquet.thrift.projection.FieldProjectionFilter,boolean)#org/apache/parquet/thrift/ConvertedField/isKeep()
org/apache/parquet/thrift/ThriftSchemaConvertVisitor/convert(org.apache.parquet.thrift.struct.ThriftType.StructType,org.apache.parquet.thrift.projection.FieldProjectionFilter,boolean)#org/apache/parquet/thrift/ThriftSchemaConvertVisitor/ThriftSchemaConvertVisitor(org.apache.parquet.thrift.projection.FieldProjectionFilter,boolean,boolean)
org/apache/parquet/thrift/ThriftSchemaConvertVisitor/convert(org.apache.parquet.thrift.struct.ThriftType.StructType,org.apache.parquet.thrift.projection.FieldProjectionFilter,boolean)#org/apache/parquet/thrift/struct/ThriftType/StructType/accept(org.apache.parquet.thrift.struct.ThriftType.StateVisitor,S)
org/apache/parquet/thrift/ThriftSchemaConvertVisitor/convert(org.apache.parquet.thrift.struct.ThriftType.StructType,org.apache.parquet.thrift.projection.FieldProjectionFilter,boolean)#org/apache/parquet/schema/MessageType/MessageType(java.lang.String,java.util.List)
org/apache/parquet/thrift/ThriftSchemaConvertVisitor/convert(org.apache.parquet.thrift.struct.ThriftType.StructType,org.apache.parquet.thrift.projection.FieldProjectionFilter,boolean)#org/apache/parquet/schema/GroupType/getFields()
org/apache/parquet/thrift/ThriftSchemaConvertVisitor/convert(org.apache.parquet.thrift.struct.ThriftType.StructType,org.apache.parquet.thrift.projection.FieldProjectionFilter,boolean)#org/apache/parquet/thrift/projection/FieldsPath/FieldsPath()
org/apache/parquet/thrift/ThriftSchemaConvertVisitor/convert(org.apache.parquet.thrift.struct.ThriftType.StructType,org.apache.parquet.thrift.projection.FieldProjectionFilter,boolean)#org/apache/parquet/thrift/ConvertedField/asKeep()
org/apache/parquet/thrift/ThriftSchemaConvertVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.BoolType,org.apache.parquet.thrift.ThriftSchemaConvertVisitor.State)#org/apache/parquet/thrift/ThriftSchemaConvertVisitor/visitPrimitiveType(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.thrift.ThriftSchemaConvertVisitor.State)
org/apache/parquet/thrift/ThriftSchemaConvertVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.I16Type,org.apache.parquet.thrift.ThriftSchemaConvertVisitor.State)#org/apache/parquet/thrift/ThriftSchemaConvertVisitor/visitPrimitiveType(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.thrift.ThriftSchemaConvertVisitor.State)
org/apache/parquet/thrift/ThriftSchemaConvertVisitor/visitPrimitiveType(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.schema.OriginalType,org.apache.parquet.thrift.ThriftSchemaConvertVisitor.State)#org/apache/parquet/thrift/ConvertedField/Keep/Keep(org.apache.parquet.thrift.projection.FieldsPath,org.apache.parquet.schema.Type)
org/apache/parquet/thrift/ThriftSchemaConvertVisitor/visitPrimitiveType(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.schema.OriginalType,org.apache.parquet.thrift.ThriftSchemaConvertVisitor.State)#org/apache/parquet/thrift/projection/FieldProjectionFilter/keep(org.apache.parquet.thrift.projection.FieldsPath)
org/apache/parquet/thrift/ThriftSchemaConvertVisitor/visitPrimitiveType(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.schema.OriginalType,org.apache.parquet.thrift.ThriftSchemaConvertVisitor.State)#org/apache/parquet/schema/Types/Builder/named(java.lang.String)
org/apache/parquet/thrift/ThriftSchemaConvertVisitor/visitPrimitiveType(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.schema.OriginalType,org.apache.parquet.thrift.ThriftSchemaConvertVisitor.State)#org/apache/parquet/schema/Types/Builder/as(org.apache.parquet.schema.OriginalType)
org/apache/parquet/thrift/ThriftSchemaConvertVisitor/visitPrimitiveType(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.schema.OriginalType,org.apache.parquet.thrift.ThriftSchemaConvertVisitor.State)#org/apache/parquet/thrift/ConvertedField/Drop/Drop(org.apache.parquet.thrift.projection.FieldsPath)
org/apache/parquet/thrift/ThriftSchemaConvertVisitor/visitPrimitiveType(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.schema.OriginalType,org.apache.parquet.thrift.ThriftSchemaConvertVisitor.State)#org/apache/parquet/schema/Types/primitive(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.schema.Type.Repetition)
org/apache/parquet/thrift/ThriftSchemaConvertVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.ListType,org.apache.parquet.thrift.ThriftSchemaConvertVisitor.State)#org/apache/parquet/thrift/struct/ThriftType/ListType/getValues()
org/apache/parquet/thrift/ThriftSchemaConvertVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.ListType,org.apache.parquet.thrift.ThriftSchemaConvertVisitor.State)#org/apache/parquet/thrift/ThriftSchemaConvertVisitor/visitListLike(org.apache.parquet.thrift.struct.ThriftField,org.apache.parquet.thrift.ThriftSchemaConvertVisitor.State,boolean)
org/apache/parquet/thrift/ThriftSchemaConvertVisitor/convert(org.apache.parquet.thrift.struct.ThriftType.StructType,org.apache.parquet.thrift.projection.FieldProjectionFilter)#org/apache/parquet/thrift/ThriftSchemaConvertVisitor/convert(org.apache.parquet.thrift.struct.ThriftType.StructType,org.apache.parquet.thrift.projection.FieldProjectionFilter,boolean)
org/apache/parquet/thrift/ThriftSchemaConvertVisitor/isUnion(org.apache.parquet.thrift.struct.ThriftType.StructType.StructOrUnionType)#org/apache/parquet/ShouldNeverHappenException/ShouldNeverHappenException(java.lang.String)
org/apache/parquet/thrift/ThriftSchemaConvertVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.ByteType,org.apache.parquet.thrift.ThriftSchemaConvertVisitor.State)#org/apache/parquet/thrift/ThriftSchemaConvertVisitor/visitPrimitiveType(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.thrift.ThriftSchemaConvertVisitor.State)
org/apache/parquet/thrift/ThriftSchemaConvertVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.MapType,org.apache.parquet.thrift.ThriftSchemaConvertVisitor.State)#org/apache/parquet/thrift/ThriftSchemaConvertVisitor/State/State(org.apache.parquet.thrift.projection.FieldsPath,org.apache.parquet.schema.Type.Repetition,java.lang.String)
org/apache/parquet/thrift/ThriftSchemaConvertVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.MapType,org.apache.parquet.thrift.ThriftSchemaConvertVisitor.State)#org/apache/parquet/thrift/ConvertedField/Keep/getType()
org/apache/parquet/thrift/ThriftSchemaConvertVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.MapType,org.apache.parquet.thrift.ThriftSchemaConvertVisitor.State)#org/apache/parquet/thrift/struct/ThriftField/getType()
org/apache/parquet/thrift/ThriftSchemaConvertVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.MapType,org.apache.parquet.thrift.ThriftSchemaConvertVisitor.State)#org/apache/parquet/thrift/projection/FieldsPath/push(org.apache.parquet.thrift.struct.ThriftField)
org/apache/parquet/thrift/ThriftSchemaConvertVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.MapType,org.apache.parquet.thrift.ThriftSchemaConvertVisitor.State)#org/apache/parquet/thrift/struct/ThriftType/accept(org.apache.parquet.thrift.struct.ThriftType.StateVisitor,S)
org/apache/parquet/thrift/ThriftSchemaConvertVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.MapType,org.apache.parquet.thrift.ThriftSchemaConvertVisitor.State)#org/apache/parquet/thrift/projection/ThriftProjectionException/ThriftProjectionException(java.lang.String)
org/apache/parquet/thrift/ThriftSchemaConvertVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.MapType,org.apache.parquet.thrift.ThriftSchemaConvertVisitor.State)#org/apache/parquet/schema/Type/equals(java.lang.Object)
org/apache/parquet/thrift/ThriftSchemaConvertVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.MapType,org.apache.parquet.thrift.ThriftSchemaConvertVisitor.State)#org/apache/parquet/thrift/struct/ThriftType/MapType/getKey()
org/apache/parquet/thrift/ThriftSchemaConvertVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.MapType,org.apache.parquet.thrift.ThriftSchemaConvertVisitor.State)#org/apache/parquet/thrift/ConvertedField/Keep/Keep(org.apache.parquet.thrift.projection.FieldsPath,org.apache.parquet.schema.Type)
org/apache/parquet/thrift/ThriftSchemaConvertVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.MapType,org.apache.parquet.thrift.ThriftSchemaConvertVisitor.State)#org/apache/parquet/thrift/ConvertedField/isKeep()
org/apache/parquet/thrift/ThriftSchemaConvertVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.MapType,org.apache.parquet.thrift.ThriftSchemaConvertVisitor.State)#org/apache/parquet/thrift/KeepOnlyFirstPrimitiveFilter/KeepOnlyFirstPrimitiveFilter()
org/apache/parquet/thrift/ThriftSchemaConvertVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.MapType,org.apache.parquet.thrift.ThriftSchemaConvertVisitor.State)#org/apache/parquet/thrift/ThriftSchemaConvertVisitor/ThriftSchemaConvertVisitor(org.apache.parquet.thrift.projection.FieldProjectionFilter,boolean,boolean)
org/apache/parquet/thrift/ThriftSchemaConvertVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.MapType,org.apache.parquet.thrift.ThriftSchemaConvertVisitor.State)#org/apache/parquet/thrift/ConvertedField/Drop/Drop(org.apache.parquet.thrift.projection.FieldsPath)
org/apache/parquet/thrift/ThriftSchemaConvertVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.MapType,org.apache.parquet.thrift.ThriftSchemaConvertVisitor.State)#org/apache/parquet/schema/ConversionPatterns/mapType(org.apache.parquet.schema.Type.Repetition,java.lang.String,org.apache.parquet.schema.Type,org.apache.parquet.schema.Type)
org/apache/parquet/thrift/ThriftSchemaConvertVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.MapType,org.apache.parquet.thrift.ThriftSchemaConvertVisitor.State)#org/apache/parquet/thrift/struct/ThriftType/MapType/getValue()
org/apache/parquet/thrift/ThriftSchemaConvertVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.MapType,org.apache.parquet.thrift.ThriftSchemaConvertVisitor.State)#org/apache/parquet/thrift/ConvertedField/asKeep()
org/apache/parquet/thrift/ThriftSchemaConvertVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.SetType,org.apache.parquet.thrift.ThriftSchemaConvertVisitor.State)#org/apache/parquet/thrift/ThriftSchemaConvertVisitor/visitListLike(org.apache.parquet.thrift.struct.ThriftField,org.apache.parquet.thrift.ThriftSchemaConvertVisitor.State,boolean)
org/apache/parquet/thrift/ThriftSchemaConvertVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.SetType,org.apache.parquet.thrift.ThriftSchemaConvertVisitor.State)#org/apache/parquet/thrift/struct/ThriftType/SetType/getValues()
org/apache/parquet/thrift/ThriftSchemaConvertVisitor/getRepetition(org.apache.parquet.thrift.struct.ThriftField)#org/apache/parquet/thrift/struct/ThriftField/getRequirement()
org/apache/parquet/thrift/ThriftSchemaConvertVisitor/getRepetition(org.apache.parquet.thrift.struct.ThriftField)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/parquet/thrift/ThriftSchemaConvertVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.DoubleType,org.apache.parquet.thrift.ThriftSchemaConvertVisitor.State)#org/apache/parquet/thrift/ThriftSchemaConvertVisitor/visitPrimitiveType(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.thrift.ThriftSchemaConvertVisitor.State)
org/apache/parquet/thrift/ThriftSchemaConvertVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.StringType,org.apache.parquet.thrift.ThriftSchemaConvertVisitor.State)#org/apache/parquet/thrift/ThriftSchemaConvertVisitor/visitPrimitiveType(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.schema.OriginalType,org.apache.parquet.thrift.ThriftSchemaConvertVisitor.State)
org/apache/parquet/thrift/TestParquetWriteProtocol/testMapInSet()#java/util/HashMap/HashMap()
org/apache/parquet/thrift/TestParquetWriteProtocol/testMapInSet()#java/util/Set/add(E)
org/apache/parquet/thrift/TestParquetWriteProtocol/testMapInSet()#java/util/Map/put(K,V)
org/apache/parquet/thrift/TestParquetWriteProtocol/testMapInSet()#org/apache/parquet/thrift/TestParquetWriteProtocol/validateThrift(java.lang.String[],org.apache.parquet.scrooge.TBase)
org/apache/parquet/thrift/TestParquetWriteProtocol/testMapInSet()#java/util/HashSet/HashSet()
org/apache/parquet/thrift/TestParquetWriteProtocol/testMapInSet()#org/apache/parquet/thrift/TestParquetWriteProtocol/validatePig(java.lang.String[],org.apache.parquet.scrooge.TBase)
org/apache/parquet/thrift/TestParquetWriteProtocol/testProtocolEmptyAdressBook()#java/util/ArrayList/ArrayList()
org/apache/parquet/thrift/TestParquetWriteProtocol/testProtocolEmptyAdressBook()#org/apache/parquet/thrift/TestParquetWriteProtocol/validateThrift(java.lang.String[],org.apache.parquet.scrooge.TBase)
org/apache/parquet/thrift/TestParquetWriteProtocol/testProtocolEmptyAdressBook()#org/apache/parquet/thrift/TestParquetWriteProtocol/validatePig(java.lang.String[],org.apache.parquet.scrooge.TBase)
org/apache/parquet/thrift/TestParquetWriteProtocol/testNameList()#java/util/ArrayList/ArrayList()
org/apache/parquet/thrift/TestParquetWriteProtocol/testNameList()#java/util/List/add(E)
org/apache/parquet/thrift/TestParquetWriteProtocol/testNameList()#org/apache/parquet/thrift/TestParquetWriteProtocol/validateThrift(java.lang.String[],org.apache.parquet.scrooge.TBase)
org/apache/parquet/thrift/TestParquetWriteProtocol/testNameList()#org/apache/parquet/thrift/TestParquetWriteProtocol/validatePig(java.lang.String[],org.apache.parquet.scrooge.TBase)
org/apache/parquet/thrift/TestParquetWriteProtocol/testOneOfEach()#java/util/ArrayList/ArrayList()
org/apache/parquet/thrift/TestParquetWriteProtocol/testOneOfEach()#java/util/Arrays/copyOf(U[],int,java.lang.Class)
org/apache/parquet/thrift/TestParquetWriteProtocol/testOneOfEach()#java/nio/ByteBuffer/wrap(byte[])
org/apache/parquet/thrift/TestParquetWriteProtocol/testOneOfEach()#org/apache/parquet/thrift/TestParquetWriteProtocol/validateThrift(java.lang.String[],org.apache.parquet.scrooge.TBase)
org/apache/parquet/thrift/TestParquetWriteProtocol/testOneOfEach()#java/lang/String/getBytes()
org/apache/parquet/thrift/TestParquetWriteProtocol/testOneOfEach()#org/apache/parquet/thrift/TestParquetWriteProtocol/validatePig(java.lang.String[],org.apache.parquet.scrooge.TBase)
org/apache/parquet/thrift/TestParquetWriteProtocol/testStructInMap()#java/util/Collections/singletonMap(K,V)
org/apache/parquet/thrift/TestParquetWriteProtocol/testStructInMap()#java/util/HashMap/HashMap()
org/apache/parquet/thrift/TestParquetWriteProtocol/testStructInMap()#org/apache/parquet/thrift/TestParquetWriteProtocol/validateThrift(java.lang.String[],org.apache.parquet.scrooge.TBase)
org/apache/parquet/thrift/TestParquetWriteProtocol/testStructInMap()#org/apache/parquet/thrift/TestParquetWriteProtocol/validatePig(java.lang.String[],org.apache.parquet.scrooge.TBase)
org/apache/parquet/thrift/TestParquetWriteProtocol/testStructInMap()#java/lang/Object/Object()
org/apache/parquet/thrift/TestParquetWriteProtocol/testProtocolAddressBook()#java/util/ArrayList/ArrayList()
org/apache/parquet/thrift/TestParquetWriteProtocol/testProtocolAddressBook()#java/util/Arrays/asList(T[])
org/apache/parquet/thrift/TestParquetWriteProtocol/testProtocolAddressBook()#java/util/Arrays/copyOf(U[],int,java.lang.Class)
org/apache/parquet/thrift/TestParquetWriteProtocol/testProtocolAddressBook()#org/apache/parquet/thrift/TestParquetWriteProtocol/validateThrift(java.lang.String[],org.apache.parquet.scrooge.TBase)
org/apache/parquet/thrift/TestParquetWriteProtocol/testProtocolAddressBook()#org/apache/parquet/thrift/TestParquetWriteProtocol/validatePig(java.lang.String[],org.apache.parquet.scrooge.TBase)
org/apache/parquet/thrift/TestParquetWriteProtocol/testProtocolAddressBook()#java/lang/Object/Object()
org/apache/parquet/thrift/TestParquetWriteProtocol/validateThrift(java.lang.String[],org.apache.parquet.scrooge.TBase)#org/apache/parquet/thrift/ThriftSchemaConverter/convert(java.lang.Class)
org/apache/parquet/thrift/TestParquetWriteProtocol/validateThrift(java.lang.String[],org.apache.parquet.scrooge.TBase)#org/apache/parquet/io/RecordConsumerLoggingWrapper/RecordConsumerLoggingWrapper(org.apache.parquet.io.api.RecordConsumer)
org/apache/parquet/thrift/TestParquetWriteProtocol/validateThrift(java.lang.String[],org.apache.parquet.scrooge.TBase)#org/apache/parquet/io/ExpectationValidatingRecordConsumer/ExpectationValidatingRecordConsumer(java.util.Deque)
org/apache/parquet/thrift/TestParquetWriteProtocol/validateThrift(java.lang.String[],org.apache.parquet.scrooge.TBase)#org/apache/parquet/io/ColumnIOFactory/getColumnIO(org.apache.parquet.schema.MessageType)
org/apache/parquet/thrift/TestParquetWriteProtocol/validateThrift(java.lang.String[],org.apache.parquet.scrooge.TBase)#java/util/Arrays/asList(T[])
org/apache/parquet/thrift/TestParquetWriteProtocol/validateThrift(java.lang.String[],org.apache.parquet.scrooge.TBase)#org/apache/parquet/thrift/ThriftSchemaConverter/toStructType(java.lang.Class)
org/apache/parquet/thrift/TestParquetWriteProtocol/validateThrift(java.lang.String[],org.apache.parquet.scrooge.TBase)#java/util/ArrayDeque/ArrayDeque(java.util.Collection)
org/apache/parquet/thrift/TestParquetWriteProtocol/validateThrift(java.lang.String[],org.apache.parquet.scrooge.TBase)#org/apache/parquet/thrift/ParquetWriteProtocol/ParquetWriteProtocol(org.apache.parquet.io.api.RecordConsumer,org.apache.parquet.io.MessageColumnIO,org.apache.parquet.thrift.struct.ThriftType.StructType)
org/apache/parquet/thrift/TestParquetWriteProtocol/validateThrift(java.lang.String[],org.apache.parquet.scrooge.TBase)#org/apache/parquet/io/ColumnIOFactory/ColumnIOFactory()
org/apache/parquet/thrift/TestParquetWriteProtocol/validateThrift(java.lang.String[],org.apache.parquet.scrooge.TBase)#org/apache/parquet/thrift/ThriftSchemaConverter/ThriftSchemaConverter()
org/apache/parquet/thrift/TestParquetWriteProtocol/validatePig(java.lang.String[],org.apache.parquet.scrooge.TBase)#org/apache/parquet/io/ExpectationValidatingRecordConsumer/ExpectationValidatingRecordConsumer(java.util.Deque)
org/apache/parquet/thrift/TestParquetWriteProtocol/validatePig(java.lang.String[],org.apache.parquet.scrooge.TBase)#java/util/Arrays/asList(T[])
org/apache/parquet/thrift/TestParquetWriteProtocol/validatePig(java.lang.String[],org.apache.parquet.scrooge.TBase)#org/apache/parquet/pig/TupleWriteSupport/TupleWriteSupport(org.apache.parquet.pig.Schema)
org/apache/parquet/thrift/TestParquetWriteProtocol/validatePig(java.lang.String[],org.apache.parquet.scrooge.TBase)#org/apache/parquet/pig/TupleWriteSupport/write(org.apache.parquet.pig.Tuple)
org/apache/parquet/thrift/TestParquetWriteProtocol/validatePig(java.lang.String[],org.apache.parquet.scrooge.TBase)#org/apache/parquet/pig/TupleWriteSupport/prepareForWrite(org.apache.parquet.io.api.RecordConsumer)
org/apache/parquet/thrift/TestParquetWriteProtocol/validatePig(java.lang.String[],org.apache.parquet.scrooge.TBase)#org/apache/parquet/pig/PigSchemaConverter/convert(org.apache.parquet.schema.MessageType)
org/apache/parquet/thrift/TestParquetWriteProtocol/validatePig(java.lang.String[],org.apache.parquet.scrooge.TBase)#java/util/ArrayDeque/ArrayDeque(java.util.Collection)
org/apache/parquet/thrift/TestParquetWriteProtocol/validatePig(java.lang.String[],org.apache.parquet.scrooge.TBase)#org/apache/parquet/pig/TupleWriteSupport/init(org.apache.parquet.hadoop.Configuration)
org/apache/parquet/thrift/TestParquetWriteProtocol/validatePig(java.lang.String[],org.apache.parquet.scrooge.TBase)#java/lang/Object/Object()
org/apache/parquet/thrift/TestParquetWriteProtocol/validatePig(java.lang.String[],org.apache.parquet.scrooge.TBase)#org/apache/parquet/pig/PigSchemaConverter/PigSchemaConverter()
org/apache/parquet/thrift/TestParquetWriteProtocol/testMap()#java/util/TreeMap/TreeMap()
org/apache/parquet/thrift/TestParquetWriteProtocol/testMap()#java/util/Map/put(K,V)
org/apache/parquet/thrift/TestParquetWriteProtocol/testMap()#org/apache/parquet/thrift/TestParquetWriteProtocol/validateThrift(java.lang.String[],org.apache.parquet.scrooge.TBase)
org/apache/parquet/thrift/TestParquetWriteProtocol/testMap()#org/apache/parquet/thrift/TestParquetWriteProtocol/validatePig(java.lang.String[],org.apache.parquet.scrooge.TBase)
org/apache/parquet/avro/TestReflectLogicalTypes/Pair/hashCode()#java/util/Arrays/hashCode(java.lang.Object[])
org/apache/parquet/avro/TestReflectLogicalTypes/Pair/of(X,Y)#org/apache/parquet/avro/TestReflectLogicalTypes/Pair/Pair(X,Y)
org/apache/parquet/avro/TestReflectLogicalTypes/Pair/equals(java.lang.Object)#java/lang/Object/equals(java.lang.Object)
org/apache/parquet/avro/TestReflectLogicalTypes/Pair/equals(java.lang.Object)#java/lang/Object/getClass()
org/apache/parquet/hadoop/ParquetFileReader/Chunk/readAllPages()#org/apache/parquet/hadoop/metadata/FileMetaData/getCreatedBy()
org/apache/parquet/hadoop/ParquetFileReader/Chunk/readAllPages()#org/apache/parquet/bytes/ByteBufferInputStream/skip(long)
org/apache/parquet/hadoop/ParquetFileReader/Chunk/readAllPages()#org/apache/parquet/format/converter/ParquetMetadataConverter/fromParquetStatistics(java.lang.String,org.apache.parquet.format.converter.Statistics,org.apache.parquet.schema.PrimitiveType)
org/apache/parquet/hadoop/ParquetFileReader/Chunk/readAllPages()#java/io/IOException/IOException(java.lang.String)
org/apache/parquet/hadoop/ParquetFileReader/Chunk/readAllPages()#org/apache/parquet/hadoop/ParquetFileReader/getFileMetaData()
org/apache/parquet/hadoop/ParquetFileReader/Chunk/readAllPages()#org/apache/parquet/column/page/DictionaryPage/DictionaryPage(org.apache.parquet.bytes.BytesInput,int,int,org.apache.parquet.column.Encoding)
org/apache/parquet/hadoop/ParquetFileReader/Chunk/readAllPages()#org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/getCodec()
org/apache/parquet/hadoop/ParquetFileReader/Chunk/readAllPages()#java/util/List/size()
org/apache/parquet/hadoop/ParquetFileReader/Chunk/readAllPages()#org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/getFirstDataPageOffset()
org/apache/parquet/hadoop/ParquetFileReader/Chunk/readAllPages()#org/apache/parquet/io/ParquetDecodingException/ParquetDecodingException(java.lang.String)
org/apache/parquet/hadoop/ParquetFileReader/Chunk/readAllPages()#org/apache/parquet/hadoop/metadata/FileMetaData/getSchema()
org/apache/parquet/hadoop/ParquetFileReader/Chunk/readAllPages()#org/apache/parquet/hadoop/ParquetFileReader/Chunk/pos()
org/apache/parquet/hadoop/ParquetFileReader/Chunk/readAllPages()#org/apache/parquet/schema/MessageType/getType(java.lang.String[])
org/apache/parquet/hadoop/ParquetFileReader/Chunk/readAllPages()#org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/getValueCount()
org/apache/parquet/hadoop/ParquetFileReader/Chunk/readAllPages()#org/apache/parquet/hadoop/ParquetFileReader/getPath()
org/apache/parquet/hadoop/ParquetFileReader/Chunk/readAllPages()#java/util/ArrayList/ArrayList()
org/apache/parquet/hadoop/ParquetFileReader/Chunk/readAllPages()#org/apache/parquet/column/page/DataPageV1/DataPageV1(org.apache.parquet.bytes.BytesInput,int,int,org.apache.parquet.column.statistics.Statistics,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding)
org/apache/parquet/hadoop/ParquetFileReader/Chunk/readAllPages()#org/apache/parquet/hadoop/ParquetFileReader/Chunk/readPageHeader()
org/apache/parquet/hadoop/ParquetFileReader/Chunk/readAllPages()#org/apache/parquet/schema/Type/asPrimitiveType()
org/apache/parquet/hadoop/ParquetFileReader/Chunk/readAllPages()#org/apache/parquet/hadoop/CodecFactory/getDecompressor(org.apache.parquet.hadoop.metadata.CompressionCodecName)
org/apache/parquet/hadoop/ParquetFileReader/Chunk/readAllPages()#org/apache/parquet/column/page/DataPageV2/DataPageV2(int,int,int,org.apache.parquet.bytes.BytesInput,org.apache.parquet.bytes.BytesInput,org.apache.parquet.column.Encoding,org.apache.parquet.bytes.BytesInput,int,org.apache.parquet.column.statistics.Statistics,boolean)
org/apache/parquet/hadoop/ParquetFileReader/Chunk/readAllPages()#org/apache/parquet/column/ColumnDescriptor/getPath()
org/apache/parquet/hadoop/ParquetFileReader/Chunk/readAllPages()#org/apache/parquet/hadoop/ColumnChunkPageReadStore/ColumnChunkPageReader/ColumnChunkPageReader(org.apache.parquet.hadoop.CodecFactory.BytesDecompressor,java.util.List,org.apache.parquet.column.page.DictionaryPage)
org/apache/parquet/hadoop/ParquetFileReader/Chunk/readAllPages()#java/util/List/add(E)
org/apache/parquet/hadoop/ParquetFileReader/Chunk/readAllPages()#org/apache/parquet/format/converter/ParquetMetadataConverter/getEncoding(org.apache.parquet.format.converter.Encoding)
org/apache/parquet/hadoop/ParquetFileReader/Chunk/readAllPages()#org/apache/parquet/hadoop/ParquetFileReader/Chunk/readAsBytesInput(int)
org/apache/parquet/hadoop/ParquetFileReader/Chunk/pos()#java/nio/Buffer/position()
org/apache/parquet/hadoop/ParquetFileReader/Chunk/readAsBytesInput(int)#java/nio/Buffer/position()
org/apache/parquet/hadoop/ParquetFileReader/Chunk/readAsBytesInput(int)#java/nio/Buffer/position(int)
org/apache/parquet/hadoop/ParquetFileReader/Chunk/readAsBytesInput(int)#org/apache/parquet/bytes/BytesInput/from(java.nio.ByteBuffer,int,int)
org/apache/parquet/hadoop/util/H2SeekableInputStream/readFully(org.apache.parquet.hadoop.util.H2SeekableInputStream.Reader,java.nio.ByteBuffer)#java/nio/Buffer/remaining()
org/apache/parquet/hadoop/util/H2SeekableInputStream/readFully(org.apache.parquet.hadoop.util.H2SeekableInputStream.Reader,java.nio.ByteBuffer)#java/nio/Buffer/hasRemaining()
org/apache/parquet/hadoop/util/H2SeekableInputStream/readFully(org.apache.parquet.hadoop.util.H2SeekableInputStream.Reader,java.nio.ByteBuffer)#org/apache/parquet/hadoop/util/H2SeekableInputStream/Reader/read(java.nio.ByteBuffer)
org/apache/parquet/hadoop/util/H2SeekableInputStream/readFully(org.apache.parquet.hadoop.util.H2SeekableInputStream.Reader,java.nio.ByteBuffer)#java/io/EOFException/EOFException(java.lang.String)
org/apache/parquet/hadoop/util/H2SeekableInputStream/readFully(java.nio.ByteBuffer)#org/apache/parquet/hadoop/util/H2SeekableInputStream/readFully(org.apache.parquet.hadoop.util.H2SeekableInputStream.Reader,java.nio.ByteBuffer)
org/apache/parquet/hadoop/TestParquetOutputFormatJobSummaryLevel/testDeprecatedStillWorks()#org/apache/parquet/hadoop/ParquetOutputFormat/getJobSummaryLevel(org.apache.parquet.hadoop.Configuration)
org/apache/parquet/hadoop/TestParquetOutputFormatJobSummaryLevel/testDefault()#org/apache/parquet/hadoop/ParquetOutputFormat/getJobSummaryLevel(org.apache.parquet.hadoop.Configuration)
org/apache/parquet/hadoop/TestParquetOutputFormatJobSummaryLevel/testLevelTakesPrecedence()#org/apache/parquet/hadoop/ParquetOutputFormat/getJobSummaryLevel(org.apache.parquet.hadoop.Configuration)
org/apache/parquet/hadoop/TestParquetOutputFormatJobSummaryLevel/testLevelParses()#org/apache/parquet/hadoop/ParquetOutputFormat/getJobSummaryLevel(org.apache.parquet.hadoop.Configuration)
org/apache/parquet/proto/ProtoMessageConverter/ProtoBooleanConverter/addBoolean(boolean)#org/apache/parquet/proto/ProtoMessageConverter/ParentValueContainer/add(java.lang.Object)
org/apache/parquet/hadoop/TestParquetFileWriter/testMergeFooters()#java/util/ArrayList/ArrayList()
org/apache/parquet/hadoop/TestParquetFileWriter/testMergeFooters()#org/apache/parquet/schema/PrimitiveType/PrimitiveType(org.apache.parquet.schema.Type.Repetition,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,java.lang.String)
org/apache/parquet/hadoop/TestParquetFileWriter/testMergeFooters()#org/apache/parquet/hadoop/metadata/ParquetMetadata/getFileMetaData()
org/apache/parquet/hadoop/TestParquetFileWriter/testMergeFooters()#org/apache/parquet/hadoop/metadata/FileMetaData/FileMetaData(org.apache.parquet.schema.MessageType,java.util.Map,java.lang.String)
org/apache/parquet/hadoop/TestParquetFileWriter/testMergeFooters()#java/util/List/addAll(java.util.Collection)
org/apache/parquet/hadoop/TestParquetFileWriter/testMergeFooters()#org/apache/parquet/hadoop/metadata/FileMetaData/getSchema()
org/apache/parquet/hadoop/TestParquetFileWriter/testMergeFooters()#java/util/List/add(E)
org/apache/parquet/hadoop/TestParquetFileWriter/testMergeFooters()#org/apache/parquet/hadoop/metadata/ParquetMetadata/ParquetMetadata(org.apache.parquet.hadoop.metadata.FileMetaData,java.util.List)
org/apache/parquet/hadoop/TestParquetFileWriter/testMergeFooters()#org/apache/parquet/hadoop/metadata/BlockMetaData/BlockMetaData()
org/apache/parquet/hadoop/TestParquetFileWriter/testMergeFooters()#org/apache/parquet/hadoop/metadata/ParquetMetadata/getBlocks()
org/apache/parquet/hadoop/TestParquetFileWriter/testMergeFooters()#java/util/HashMap/HashMap()
org/apache/parquet/hadoop/TestParquetFileWriter/testMergeFooters()#org/apache/parquet/hadoop/Footer/Footer(org.apache.parquet.hadoop.Path,org.apache.parquet.hadoop.metadata.ParquetMetadata)
org/apache/parquet/hadoop/TestParquetFileWriter/testMergeFooters()#org/apache/parquet/schema/MessageType/MessageType(java.lang.String,org.apache.parquet.schema.Type[])
org/apache/parquet/hadoop/TestParquetFileWriter/testMergeFooters()#org/apache/parquet/hadoop/ParquetFileWriter/mergeFooters(org.apache.parquet.hadoop.Path,java.util.List)
org/apache/parquet/hadoop/TestParquetFileWriter/createFile(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path,org.apache.parquet.schema.MessageType)#org/apache/parquet/hadoop/ParquetFileWriter/endColumn()
org/apache/parquet/hadoop/TestParquetFileWriter/createFile(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path,org.apache.parquet.schema.MessageType)#java/util/HashMap/HashMap()
org/apache/parquet/hadoop/TestParquetFileWriter/createFile(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path,org.apache.parquet.schema.MessageType)#org/apache/parquet/hadoop/ParquetFileWriter/endBlock()
org/apache/parquet/hadoop/TestParquetFileWriter/createFile(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path,org.apache.parquet.schema.MessageType)#org/apache/parquet/bytes/BytesInput/from(byte[])
org/apache/parquet/hadoop/TestParquetFileWriter/createFile(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path,org.apache.parquet.schema.MessageType)#org/apache/parquet/hadoop/ParquetFileWriter/end(java.util.Map)
org/apache/parquet/hadoop/TestParquetFileWriter/createFile(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path,org.apache.parquet.schema.MessageType)#org/apache/parquet/hadoop/ParquetFileWriter/start()
org/apache/parquet/hadoop/TestParquetFileWriter/createFile(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path,org.apache.parquet.schema.MessageType)#org/apache/parquet/hadoop/ParquetFileWriter/writeDataPage(int,int,org.apache.parquet.bytes.BytesInput,org.apache.parquet.column.statistics.Statistics,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding)
org/apache/parquet/hadoop/TestParquetFileWriter/createFile(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path,org.apache.parquet.schema.MessageType)#org/apache/parquet/hadoop/ParquetFileWriter/startColumn(org.apache.parquet.column.ColumnDescriptor,long,org.apache.parquet.hadoop.metadata.CompressionCodecName)
org/apache/parquet/hadoop/TestParquetFileWriter/createFile(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path,org.apache.parquet.schema.MessageType)#java/util/HashMap/put(K,V)
org/apache/parquet/hadoop/TestParquetFileWriter/createFile(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path,org.apache.parquet.schema.MessageType)#org/apache/parquet/column/statistics/BinaryStatistics/BinaryStatistics()
org/apache/parquet/hadoop/TestParquetFileWriter/createFile(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path,org.apache.parquet.schema.MessageType)#org/apache/parquet/hadoop/ParquetFileWriter/ParquetFileWriter(org.apache.parquet.hadoop.Configuration,org.apache.parquet.schema.MessageType,org.apache.parquet.hadoop.Path)
org/apache/parquet/hadoop/TestParquetFileWriter/createFile(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path,org.apache.parquet.schema.MessageType)#org/apache/parquet/schema/MessageType/getColumnDescription(java.lang.String[])
org/apache/parquet/hadoop/TestParquetFileWriter/createFile(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path,org.apache.parquet.schema.MessageType)#org/apache/parquet/hadoop/ParquetFileWriter/startBlock(long)
org/apache/parquet/hadoop/TestParquetFileWriter/testWriteRead()#org/apache/parquet/hadoop/metadata/ParquetMetadata/getBlocks()
org/apache/parquet/hadoop/TestParquetFileWriter/testWriteRead()#org/apache/parquet/hadoop/ParquetFileWriter/startColumn(org.apache.parquet.column.ColumnDescriptor,long,org.apache.parquet.hadoop.metadata.CompressionCodecName)
org/apache/parquet/hadoop/TestParquetFileWriter/testWriteRead()#org/apache/parquet/hadoop/metadata/BlockMetaData/getTotalByteSize()
org/apache/parquet/hadoop/TestParquetFileWriter/testWriteRead()#java/util/Arrays/asList(T[])
org/apache/parquet/hadoop/TestParquetFileWriter/testWriteRead()#java/util/HashMap/HashMap()
org/apache/parquet/hadoop/TestParquetFileWriter/testWriteRead()#org/apache/parquet/hadoop/ParquetFileReader/readFooter(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path)
org/apache/parquet/hadoop/TestParquetFileWriter/testWriteRead()#java/io/File/toURI()
org/apache/parquet/hadoop/TestParquetFileWriter/testWriteRead()#org/apache/parquet/bytes/BytesInput/from(byte[])
org/apache/parquet/hadoop/TestParquetFileWriter/testWriteRead()#org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/getEncodings()
org/apache/parquet/hadoop/TestParquetFileWriter/testWriteRead()#org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/getTotalSize()
org/apache/parquet/hadoop/TestParquetFileWriter/testWriteRead()#java/util/HashSet/HashSet()
org/apache/parquet/hadoop/TestParquetFileWriter/testWriteRead()#java/io/File/delete()
org/apache/parquet/hadoop/TestParquetFileWriter/testWriteRead()#java/util/HashSet/add(E)
org/apache/parquet/hadoop/TestParquetFileWriter/testWriteRead()#org/apache/parquet/hadoop/ParquetFileWriter/endColumn()
org/apache/parquet/hadoop/TestParquetFileWriter/testWriteRead()#org/apache/parquet/hadoop/metadata/ParquetMetadata/getFileMetaData()
org/apache/parquet/hadoop/TestParquetFileWriter/testWriteRead()#org/apache/parquet/hadoop/PrintFooter/main(java.lang.String[])
org/apache/parquet/hadoop/TestParquetFileWriter/testWriteRead()#org/apache/parquet/hadoop/ParquetFileWriter/ParquetFileWriter(org.apache.parquet.hadoop.Configuration,org.apache.parquet.schema.MessageType,org.apache.parquet.hadoop.Path)
org/apache/parquet/hadoop/TestParquetFileWriter/testWriteRead()#org/apache/parquet/schema/MessageType/getColumnDescription(java.lang.String[])
org/apache/parquet/hadoop/TestParquetFileWriter/testWriteRead()#java/util/List/size()
org/apache/parquet/hadoop/TestParquetFileWriter/testWriteRead()#org/apache/parquet/hadoop/ParquetFileWriter/startBlock(long)
org/apache/parquet/hadoop/TestParquetFileWriter/testWriteRead()#org/apache/parquet/hadoop/TestParquetFileWriter/validateContains(org.apache.parquet.schema.MessageType,org.apache.parquet.column.page.PageReadStore,java.lang.String[],int,org.apache.parquet.bytes.BytesInput)
org/apache/parquet/hadoop/TestParquetFileWriter/testWriteRead()#org/apache/parquet/hadoop/ParquetFileWriter/endBlock()
org/apache/parquet/hadoop/TestParquetFileWriter/testWriteRead()#org/apache/parquet/hadoop/ParquetFileWriter/end(java.util.Map)
org/apache/parquet/hadoop/TestParquetFileWriter/testWriteRead()#java/util/List/get(int)
org/apache/parquet/hadoop/TestParquetFileWriter/testWriteRead()#org/apache/parquet/hadoop/ParquetFileWriter/start()
org/apache/parquet/hadoop/TestParquetFileWriter/testWriteRead()#org/apache/parquet/hadoop/ParquetFileReader/ParquetFileReader(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.metadata.FileMetaData,org.apache.parquet.hadoop.Path,java.util.List,java.util.List)
org/apache/parquet/hadoop/TestParquetFileWriter/testWriteRead()#org/apache/parquet/column/page/PageReadStore/getRowCount()
org/apache/parquet/hadoop/TestParquetFileWriter/testWriteRead()#org/apache/parquet/hadoop/ParquetFileWriter/writeDataPage(int,int,org.apache.parquet.bytes.BytesInput,org.apache.parquet.column.statistics.Statistics,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding)
org/apache/parquet/hadoop/TestParquetFileWriter/testWriteRead()#org/apache/parquet/hadoop/ParquetFileReader/readNextRowGroup()
org/apache/parquet/hadoop/TestParquetFileWriter/testWriteRead()#org/apache/parquet/hadoop/ParquetFileWriter/getPos()
org/apache/parquet/hadoop/TestParquetFileWriter/testWriteRead()#org/apache/parquet/hadoop/metadata/BlockMetaData/getColumns()
org/apache/parquet/hadoop/TestParquetFileWriter/testMetaDataFile()#org/apache/parquet/hadoop/TestParquetFileWriter/createFile(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path,org.apache.parquet.schema.MessageType)
org/apache/parquet/hadoop/TestParquetFileWriter/testMetaDataFile()#org/apache/parquet/hadoop/TestUtils/enforceEmptyDir(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path)
org/apache/parquet/hadoop/TestParquetFileWriter/testMetaDataFile()#org/apache/parquet/hadoop/TestParquetFileWriter/validateFooters(java.util.List)
org/apache/parquet/hadoop/TestParquetFileWriter/testMetaDataFile()#java/util/List/size()
org/apache/parquet/hadoop/TestParquetFileWriter/testMetaDataFile()#org/apache/parquet/hadoop/ParquetFileReader/readFooters(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.FileStatus,boolean)
org/apache/parquet/hadoop/TestParquetFileWriter/testMetaDataFile()#org/apache/parquet/hadoop/ParquetFileReader/readAllFootersInParallelUsingSummaryFiles(org.apache.parquet.hadoop.Configuration,java.util.Collection,boolean)
org/apache/parquet/hadoop/TestParquetFileWriter/testMetaDataFile()#org/apache/parquet/hadoop/ParquetFileReader/readSummaryFile(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.FileStatus)
org/apache/parquet/hadoop/TestParquetFileWriter/testMetaDataFile()#java/lang/Object/Object()
org/apache/parquet/hadoop/TestParquetFileWriter/testMetaDataFile()#org/apache/parquet/schema/MessageTypeParser/parseMessageType(java.lang.String)
org/apache/parquet/hadoop/TestParquetFileWriter/testMetaDataFile()#java/util/Arrays/asList(T[])
org/apache/parquet/hadoop/TestParquetFileWriter/testMetaDataFile()#org/apache/parquet/hadoop/ParquetFileWriter/writeMetadataFile(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path,java.util.List,org.apache.parquet.hadoop.ParquetOutputFormat.JobSummaryLevel)
org/apache/parquet/hadoop/TestParquetFileWriter/testMetaDataFile()#java/io/File/toURI()
org/apache/parquet/hadoop/TestParquetFileWriter/validateContains(org.apache.parquet.schema.MessageType,org.apache.parquet.column.page.PageReadStore,java.lang.String[],int,org.apache.parquet.bytes.BytesInput)#org/apache/parquet/column/page/PageReader/readPage()
org/apache/parquet/hadoop/TestParquetFileWriter/validateContains(org.apache.parquet.schema.MessageType,org.apache.parquet.column.page.PageReadStore,java.lang.String[],int,org.apache.parquet.bytes.BytesInput)#org/apache/parquet/column/page/PageReadStore/getPageReader(org.apache.parquet.column.ColumnDescriptor)
org/apache/parquet/hadoop/TestParquetFileWriter/validateContains(org.apache.parquet.schema.MessageType,org.apache.parquet.column.page.PageReadStore,java.lang.String[],int,org.apache.parquet.bytes.BytesInput)#org/apache/parquet/schema/MessageType/getColumnDescription(java.lang.String[])
org/apache/parquet/hadoop/TestParquetFileWriter/validateContains(org.apache.parquet.schema.MessageType,org.apache.parquet.column.page.PageReadStore,java.lang.String[],int,org.apache.parquet.bytes.BytesInput)#org/apache/parquet/bytes/BytesInput/toByteArray()
org/apache/parquet/hadoop/TestParquetFileWriter/validateContains(org.apache.parquet.schema.MessageType,org.apache.parquet.column.page.PageReadStore,java.lang.String[],int,org.apache.parquet.bytes.BytesInput)#org/apache/parquet/column/page/DataPage/getValueCount()
org/apache/parquet/hadoop/TestParquetFileWriter/validateContains(org.apache.parquet.schema.MessageType,org.apache.parquet.column.page.PageReadStore,java.lang.String[],int,org.apache.parquet.bytes.BytesInput)#org/apache/parquet/column/page/DataPageV1/getBytes()
org/apache/parquet/hadoop/TestParquetFileWriter/testWriteReadStatisticsAllNulls()#org/apache/parquet/schema/MessageTypeParser/parseMessageType(java.lang.String)
org/apache/parquet/hadoop/TestParquetFileWriter/testWriteReadStatisticsAllNulls()#org/apache/parquet/hadoop/ParquetWriter/ParquetWriter(org.apache.parquet.hadoop.Path,org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.api.WriteSupport)
org/apache/parquet/hadoop/TestParquetFileWriter/testWriteReadStatisticsAllNulls()#org/apache/parquet/column/statistics/Statistics/isEmpty()
org/apache/parquet/hadoop/TestParquetFileWriter/testWriteReadStatisticsAllNulls()#org/apache/parquet/CorruptStatistics/shouldIgnoreStatistics(java.lang.String,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/hadoop/TestParquetFileWriter/testWriteReadStatisticsAllNulls()#org/apache/parquet/example/data/simple/SimpleGroup/SimpleGroup(org.apache.parquet.schema.GroupType)
org/apache/parquet/hadoop/TestParquetFileWriter/testWriteReadStatisticsAllNulls()#org/apache/parquet/hadoop/metadata/BlockMetaData/getColumns()
org/apache/parquet/hadoop/TestParquetFileWriter/testWriteReadStatisticsAllNulls()#java/io/File/delete()
org/apache/parquet/hadoop/TestParquetFileWriter/testWriteReadStatisticsAllNulls()#org/apache/parquet/hadoop/metadata/ParquetMetadata/getBlocks()
org/apache/parquet/hadoop/TestParquetFileWriter/testWriteReadStatisticsAllNulls()#org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/getStatistics()
org/apache/parquet/hadoop/TestParquetFileWriter/testWriteReadStatisticsAllNulls()#org/apache/parquet/hadoop/example/GroupWriteSupport/setSchema(org.apache.parquet.schema.MessageType,org.apache.parquet.hadoop.Configuration)
org/apache/parquet/hadoop/TestParquetFileWriter/testWriteReadStatisticsAllNulls()#org/apache/parquet/column/statistics/Statistics/getNumNulls()
org/apache/parquet/hadoop/TestParquetFileWriter/testWriteReadStatisticsAllNulls()#org/apache/parquet/hadoop/ParquetFileReader/readFooter(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path)
org/apache/parquet/hadoop/TestParquetFileWriter/testWriteReadStatisticsAllNulls()#org/apache/parquet/hadoop/ParquetWriter/close()
org/apache/parquet/hadoop/TestParquetFileWriter/testWriteReadStatisticsAllNulls()#org/apache/parquet/hadoop/example/GroupWriteSupport/GroupWriteSupport()
org/apache/parquet/hadoop/TestParquetFileWriter/testWriteReadStatisticsAllNulls()#java/io/File/toURI()
org/apache/parquet/hadoop/TestParquetFileWriter/testWriteReadStatisticsAllNulls()#org/apache/parquet/hadoop/ParquetWriter/write(T)
org/apache/parquet/hadoop/TestParquetFileWriter/testWriteReadStatisticsAllNulls()#java/util/List/get(int)
org/apache/parquet/hadoop/TestParquetFileWriter/testMergeMetadata()#org/apache/parquet/schema/PrimitiveType/PrimitiveType(org.apache.parquet.schema.Type.Repetition,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,java.lang.String)
org/apache/parquet/hadoop/TestParquetFileWriter/testMergeMetadata()#org/apache/parquet/hadoop/metadata/FileMetaData/FileMetaData(org.apache.parquet.schema.MessageType,java.util.Map,java.lang.String)
org/apache/parquet/hadoop/TestParquetFileWriter/testMergeMetadata()#java/util/HashMap/HashMap()
org/apache/parquet/hadoop/TestParquetFileWriter/testMergeMetadata()#org/apache/parquet/hadoop/ParquetFileWriter/mergeInto(org.apache.parquet.hadoop.metadata.FileMetaData,org.apache.parquet.hadoop.metadata.GlobalMetaData)
org/apache/parquet/hadoop/TestParquetFileWriter/testMergeMetadata()#org/apache/parquet/schema/MessageType/MessageType(java.lang.String,org.apache.parquet.schema.Type[])
org/apache/parquet/hadoop/TestParquetFileWriter/testMergeMetadata()#org/apache/parquet/hadoop/metadata/GlobalMetaData/getSchema()
org/apache/parquet/hadoop/TestParquetFileWriter/validateFooters(java.util.List)#org/apache/parquet/hadoop/metadata/ParquetMetadata/getBlocks()
org/apache/parquet/hadoop/TestParquetFileWriter/validateFooters(java.util.List)#java/lang/String/valueOf(java.lang.Object)
org/apache/parquet/hadoop/TestParquetFileWriter/validateFooters(java.util.List)#org/apache/parquet/hadoop/metadata/ParquetMetadata/getFileMetaData()
org/apache/parquet/hadoop/TestParquetFileWriter/validateFooters(java.util.List)#java/util/Map/get(java.lang.Object)
org/apache/parquet/hadoop/TestParquetFileWriter/validateFooters(java.util.List)#java/util/List/size()
org/apache/parquet/hadoop/TestParquetFileWriter/validateFooters(java.util.List)#java/io/File/exists()
org/apache/parquet/hadoop/TestParquetFileWriter/validateFooters(java.util.List)#org/apache/parquet/hadoop/metadata/FileMetaData/getKeyValueMetaData()
org/apache/parquet/hadoop/TestParquetFileWriter/validateFooters(java.util.List)#java/lang/String/startsWith(java.lang.String)
org/apache/parquet/hadoop/TestParquetFileWriter/validateFooters(java.util.List)#java/io/File/getPath()
org/apache/parquet/hadoop/TestParquetFileWriter/validateFooters(java.util.List)#org/apache/parquet/hadoop/Footer/getParquetMetadata()
org/apache/parquet/hadoop/TestParquetFileWriter/validateFooters(java.util.List)#java/io/File/getName()
org/apache/parquet/hadoop/TestParquetFileWriter/validateFooters(java.util.List)#org/apache/parquet/hadoop/Footer/getFile()
org/apache/parquet/hadoop/TestParquetFileWriter/validateFooters(java.util.List)#java/io/File/File(java.lang.String)
org/apache/parquet/hadoop/TestParquetFileWriter/testWriteReadStatistics()#org/apache/parquet/column/statistics/BinaryStatistics/getMinBytes()
org/apache/parquet/hadoop/TestParquetFileWriter/testWriteReadStatistics()#org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/getPath()
org/apache/parquet/hadoop/TestParquetFileWriter/testWriteReadStatistics()#org/apache/parquet/hadoop/ParquetFileWriter/startColumn(org.apache.parquet.column.ColumnDescriptor,long,org.apache.parquet.hadoop.metadata.CompressionCodecName)
org/apache/parquet/hadoop/TestParquetFileWriter/testWriteReadStatistics()#org/apache/parquet/hadoop/ParquetFileWriter/endColumn()
org/apache/parquet/hadoop/TestParquetFileWriter/testWriteReadStatistics()#org/apache/parquet/schema/MessageTypeParser/parseMessageType(java.lang.String)
org/apache/parquet/hadoop/TestParquetFileWriter/testWriteReadStatistics()#java/util/HashMap/HashMap()
org/apache/parquet/hadoop/TestParquetFileWriter/testWriteReadStatistics()#org/apache/parquet/column/statistics/BinaryStatistics/getMaxBytes()
org/apache/parquet/hadoop/TestParquetFileWriter/testWriteReadStatistics()#org/apache/parquet/bytes/BytesInput/from(byte[])
org/apache/parquet/hadoop/TestParquetFileWriter/testWriteReadStatistics()#org/apache/parquet/column/statistics/LongStatistics/setMinMax(long,long)
org/apache/parquet/hadoop/TestParquetFileWriter/testWriteReadStatistics()#org/apache/parquet/hadoop/ParquetFileWriter/writeDataPage(int,int,org.apache.parquet.bytes.BytesInput,org.apache.parquet.column.statistics.Statistics,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding)
org/apache/parquet/hadoop/TestParquetFileWriter/testWriteReadStatistics()#org/apache/parquet/hadoop/metadata/BlockMetaData/getColumns()
org/apache/parquet/hadoop/TestParquetFileWriter/testWriteReadStatistics()#java/io/File/delete()
org/apache/parquet/hadoop/TestParquetFileWriter/testWriteReadStatistics()#org/apache/parquet/hadoop/metadata/ParquetMetadata/getBlocks()
org/apache/parquet/hadoop/TestParquetFileWriter/testWriteReadStatistics()#org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/getStatistics()
org/apache/parquet/hadoop/TestParquetFileWriter/testWriteReadStatistics()#org/apache/parquet/column/statistics/LongStatistics/LongStatistics()
org/apache/parquet/hadoop/TestParquetFileWriter/testWriteReadStatistics()#org/apache/parquet/column/statistics/BinaryStatistics/BinaryStatistics()
org/apache/parquet/hadoop/TestParquetFileWriter/testWriteReadStatistics()#org/apache/parquet/hadoop/ParquetFileWriter/ParquetFileWriter(org.apache.parquet.hadoop.Configuration,org.apache.parquet.schema.MessageType,org.apache.parquet.hadoop.Path)
org/apache/parquet/hadoop/TestParquetFileWriter/testWriteReadStatistics()#org/apache/parquet/schema/MessageType/getColumnDescription(java.lang.String[])
org/apache/parquet/hadoop/TestParquetFileWriter/testWriteReadStatistics()#org/apache/parquet/column/statistics/Statistics/equals(java.lang.Object)
org/apache/parquet/hadoop/TestParquetFileWriter/testWriteReadStatistics()#org/apache/parquet/hadoop/ParquetFileWriter/startBlock(long)
org/apache/parquet/hadoop/TestParquetFileWriter/testWriteReadStatistics()#org/apache/parquet/hadoop/ParquetFileWriter/endBlock()
org/apache/parquet/hadoop/TestParquetFileWriter/testWriteReadStatistics()#org/apache/parquet/column/statistics/BinaryStatistics/setMinMax(org.apache.parquet.io.api.Binary,org.apache.parquet.io.api.Binary)
org/apache/parquet/hadoop/TestParquetFileWriter/testWriteReadStatistics()#org/apache/parquet/io/api/Binary/fromString(java.lang.String)
org/apache/parquet/hadoop/TestParquetFileWriter/testWriteReadStatistics()#org/apache/parquet/hadoop/ParquetFileReader/readFooter(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path)
org/apache/parquet/hadoop/TestParquetFileWriter/testWriteReadStatistics()#java/lang/String/String(byte[])
org/apache/parquet/hadoop/TestParquetFileWriter/testWriteReadStatistics()#java/io/File/toURI()
org/apache/parquet/hadoop/TestParquetFileWriter/testWriteReadStatistics()#org/apache/parquet/hadoop/ParquetFileWriter/end(java.util.Map)
org/apache/parquet/hadoop/TestParquetFileWriter/testWriteReadStatistics()#java/util/List/get(int)
org/apache/parquet/hadoop/TestParquetFileWriter/testWriteReadStatistics()#org/apache/parquet/CorruptStatistics/shouldIgnoreStatistics(java.lang.String,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/hadoop/TestParquetFileWriter/testWriteReadStatistics()#org/apache/parquet/hadoop/ParquetFileWriter/start()
org/apache/parquet/hadoop/TestParquetFileWriter/testAlignmentWithPadding()#org/apache/parquet/hadoop/metadata/ParquetMetadata/getBlocks()
org/apache/parquet/hadoop/TestParquetFileWriter/testAlignmentWithPadding()#org/apache/parquet/bytes/BytesUtils/readIntLittleEndian(java.io.InputStream)
org/apache/parquet/hadoop/TestParquetFileWriter/testAlignmentWithPadding()#org/apache/parquet/hadoop/ParquetFileWriter/startColumn(org.apache.parquet.column.ColumnDescriptor,long,org.apache.parquet.hadoop.metadata.CompressionCodecName)
org/apache/parquet/hadoop/TestParquetFileWriter/testAlignmentWithPadding()#org/apache/parquet/hadoop/PrintFooter/main(java.lang.String[])
org/apache/parquet/hadoop/TestParquetFileWriter/testAlignmentWithPadding()#org/apache/parquet/hadoop/metadata/BlockMetaData/getTotalByteSize()
org/apache/parquet/hadoop/TestParquetFileWriter/testAlignmentWithPadding()#java/util/Arrays/asList(T[])
org/apache/parquet/hadoop/TestParquetFileWriter/testAlignmentWithPadding()#java/util/HashMap/HashMap()
org/apache/parquet/hadoop/TestParquetFileWriter/testAlignmentWithPadding()#org/apache/parquet/hadoop/ParquetFileReader/readFooter(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path)
org/apache/parquet/hadoop/TestParquetFileWriter/testAlignmentWithPadding()#org/apache/parquet/bytes/BytesInput/from(byte[])
org/apache/parquet/hadoop/TestParquetFileWriter/testAlignmentWithPadding()#org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/getEncodings()
org/apache/parquet/hadoop/TestParquetFileWriter/testAlignmentWithPadding()#org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/getTotalSize()
org/apache/parquet/hadoop/TestParquetFileWriter/testAlignmentWithPadding()#java/util/HashSet/HashSet()
org/apache/parquet/hadoop/TestParquetFileWriter/testAlignmentWithPadding()#java/util/HashSet/add(E)
org/apache/parquet/hadoop/TestParquetFileWriter/testAlignmentWithPadding()#org/apache/parquet/hadoop/ParquetFileWriter/endColumn()
org/apache/parquet/hadoop/TestParquetFileWriter/testAlignmentWithPadding()#org/apache/parquet/hadoop/metadata/ParquetMetadata/getFileMetaData()
org/apache/parquet/hadoop/TestParquetFileWriter/testAlignmentWithPadding()#org/apache/parquet/schema/MessageType/getColumnDescription(java.lang.String[])
org/apache/parquet/hadoop/TestParquetFileWriter/testAlignmentWithPadding()#java/util/List/size()
org/apache/parquet/hadoop/TestParquetFileWriter/testAlignmentWithPadding()#org/apache/parquet/hadoop/ParquetFileWriter/startBlock(long)
org/apache/parquet/hadoop/TestParquetFileWriter/testAlignmentWithPadding()#org/apache/parquet/hadoop/TestParquetFileWriter/validateContains(org.apache.parquet.schema.MessageType,org.apache.parquet.column.page.PageReadStore,java.lang.String[],int,org.apache.parquet.bytes.BytesInput)
org/apache/parquet/hadoop/TestParquetFileWriter/testAlignmentWithPadding()#org/apache/parquet/hadoop/ParquetFileWriter/endBlock()
org/apache/parquet/hadoop/TestParquetFileWriter/testAlignmentWithPadding()#org/apache/parquet/hadoop/metadata/BlockMetaData/getStartingPos()
org/apache/parquet/hadoop/TestParquetFileWriter/testAlignmentWithPadding()#java/io/File/toURI()
org/apache/parquet/hadoop/TestParquetFileWriter/testAlignmentWithPadding()#org/apache/parquet/hadoop/ParquetFileWriter/end(java.util.Map)
org/apache/parquet/hadoop/TestParquetFileWriter/testAlignmentWithPadding()#java/util/List/get(int)
org/apache/parquet/hadoop/TestParquetFileWriter/testAlignmentWithPadding()#org/apache/parquet/hadoop/ParquetFileWriter/start()
org/apache/parquet/hadoop/TestParquetFileWriter/testAlignmentWithPadding()#org/apache/parquet/hadoop/ParquetFileReader/ParquetFileReader(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.metadata.FileMetaData,org.apache.parquet.hadoop.Path,java.util.List,java.util.List)
org/apache/parquet/hadoop/TestParquetFileWriter/testAlignmentWithPadding()#org/apache/parquet/column/page/PageReadStore/getRowCount()
org/apache/parquet/hadoop/TestParquetFileWriter/testAlignmentWithPadding()#org/apache/parquet/hadoop/ParquetFileWriter/writeDataPage(int,int,org.apache.parquet.bytes.BytesInput,org.apache.parquet.column.statistics.Statistics,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding)
org/apache/parquet/hadoop/TestParquetFileWriter/testAlignmentWithPadding()#org/apache/parquet/hadoop/ParquetFileReader/readNextRowGroup()
org/apache/parquet/hadoop/TestParquetFileWriter/testAlignmentWithPadding()#org/apache/parquet/hadoop/ParquetFileWriter/getPos()
org/apache/parquet/hadoop/TestParquetFileWriter/testAlignmentWithPadding()#org/apache/parquet/hadoop/metadata/BlockMetaData/getColumns()
org/apache/parquet/hadoop/TestParquetFileWriter/testAlignmentWithPadding()#org/apache/parquet/hadoop/ParquetFileWriter/ParquetFileWriter(org.apache.parquet.hadoop.Configuration,org.apache.parquet.schema.MessageType,org.apache.parquet.hadoop.Path,long,int)
org/apache/parquet/hadoop/TestParquetFileWriter/testWriteMetadataFileWithRelativeOutputPath()#java/util/ArrayList/ArrayList()
org/apache/parquet/hadoop/TestParquetFileWriter/testWriteMetadataFileWithRelativeOutputPath()#org/apache/parquet/schema/PrimitiveType/PrimitiveType(org.apache.parquet.schema.Type.Repetition,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,java.lang.String)
org/apache/parquet/hadoop/TestParquetFileWriter/testWriteMetadataFileWithRelativeOutputPath()#org/apache/parquet/hadoop/metadata/ParquetMetadata/getFileMetaData()
org/apache/parquet/hadoop/TestParquetFileWriter/testWriteMetadataFileWithRelativeOutputPath()#org/apache/parquet/hadoop/metadata/FileMetaData/FileMetaData(org.apache.parquet.schema.MessageType,java.util.Map,java.lang.String)
org/apache/parquet/hadoop/TestParquetFileWriter/testWriteMetadataFileWithRelativeOutputPath()#org/apache/parquet/hadoop/ParquetFileWriter/writeMetadataFile(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path,java.util.List,org.apache.parquet.hadoop.ParquetOutputFormat.JobSummaryLevel)
org/apache/parquet/hadoop/TestParquetFileWriter/testWriteMetadataFileWithRelativeOutputPath()#java/util/List/add(E)
org/apache/parquet/hadoop/TestParquetFileWriter/testWriteMetadataFileWithRelativeOutputPath()#org/apache/parquet/schema/MessageType/MessageType(java.lang.String,org.apache.parquet.schema.Type[])
org/apache/parquet/hadoop/TestParquetFileWriter/testWriteMetadataFileWithRelativeOutputPath()#java/lang/Object/Object()
org/apache/parquet/hadoop/TestParquetFileWriter/testWriteMetadataFileWithRelativeOutputPath()#java/util/HashMap/HashMap()
org/apache/parquet/hadoop/TestParquetFileWriter/testWriteMetadataFileWithRelativeOutputPath()#org/apache/parquet/hadoop/Footer/Footer(org.apache.parquet.hadoop.Path,org.apache.parquet.hadoop.metadata.ParquetMetadata)
org/apache/parquet/hadoop/TestParquetFileWriter/testWriteMode()#org/apache/parquet/schema/MessageTypeParser/parseMessageType(java.lang.String)
org/apache/parquet/hadoop/TestParquetFileWriter/testWriteMode()#java/io/File/toURI()
org/apache/parquet/hadoop/TestParquetFileWriter/testWriteMode()#org/apache/parquet/hadoop/ParquetFileWriter/ParquetFileWriter(org.apache.parquet.hadoop.Configuration,org.apache.parquet.schema.MessageType,org.apache.parquet.hadoop.Path,org.apache.parquet.hadoop.ParquetFileWriter.Mode)
org/apache/parquet/hadoop/TestParquetFileWriter/testWriteMode()#java/io/File/delete()
org/apache/parquet/hadoop/TestParquetFileWriter/testConvertToThriftStatistics()#org/apache/parquet/column/statistics/LongStatistics/getMin()
org/apache/parquet/hadoop/TestParquetFileWriter/testConvertToThriftStatistics()#org/apache/parquet/column/statistics/LongStatistics/updateStats(long)
org/apache/parquet/hadoop/TestParquetFileWriter/testConvertToThriftStatistics()#org/apache/parquet/column/statistics/LongStatistics/LongStatistics()
org/apache/parquet/hadoop/TestParquetFileWriter/testConvertToThriftStatistics()#org/apache/parquet/column/statistics/Statistics/getNumNulls()
org/apache/parquet/hadoop/TestParquetFileWriter/testConvertToThriftStatistics()#org/apache/parquet/column/statistics/LongStatistics/getMax()
org/apache/parquet/hadoop/TestParquetFileWriter/testConvertToThriftStatistics()#org/apache/parquet/format/converter/ParquetMetadataConverter/fromParquetStatistics(java.lang.String,org.apache.parquet.format.converter.Statistics,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/hadoop/TestParquetFileWriter/testConvertToThriftStatistics()#org/apache/parquet/format/converter/ParquetMetadataConverter/toParquetStatistics(org.apache.parquet.column.statistics.Statistics)
org/apache/parquet/hadoop/TestParquetFileWriter/testAlignmentWithNoPaddingNeeded()#org/apache/parquet/hadoop/metadata/ParquetMetadata/getBlocks()
org/apache/parquet/hadoop/TestParquetFileWriter/testAlignmentWithNoPaddingNeeded()#org/apache/parquet/bytes/BytesUtils/readIntLittleEndian(java.io.InputStream)
org/apache/parquet/hadoop/TestParquetFileWriter/testAlignmentWithNoPaddingNeeded()#org/apache/parquet/hadoop/ParquetFileWriter/startColumn(org.apache.parquet.column.ColumnDescriptor,long,org.apache.parquet.hadoop.metadata.CompressionCodecName)
org/apache/parquet/hadoop/TestParquetFileWriter/testAlignmentWithNoPaddingNeeded()#org/apache/parquet/hadoop/PrintFooter/main(java.lang.String[])
org/apache/parquet/hadoop/TestParquetFileWriter/testAlignmentWithNoPaddingNeeded()#org/apache/parquet/hadoop/metadata/BlockMetaData/getTotalByteSize()
org/apache/parquet/hadoop/TestParquetFileWriter/testAlignmentWithNoPaddingNeeded()#java/util/Arrays/asList(T[])
org/apache/parquet/hadoop/TestParquetFileWriter/testAlignmentWithNoPaddingNeeded()#java/util/HashMap/HashMap()
org/apache/parquet/hadoop/TestParquetFileWriter/testAlignmentWithNoPaddingNeeded()#org/apache/parquet/hadoop/ParquetFileReader/readFooter(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path)
org/apache/parquet/hadoop/TestParquetFileWriter/testAlignmentWithNoPaddingNeeded()#org/apache/parquet/bytes/BytesInput/from(byte[])
org/apache/parquet/hadoop/TestParquetFileWriter/testAlignmentWithNoPaddingNeeded()#org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/getEncodings()
org/apache/parquet/hadoop/TestParquetFileWriter/testAlignmentWithNoPaddingNeeded()#org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/getTotalSize()
org/apache/parquet/hadoop/TestParquetFileWriter/testAlignmentWithNoPaddingNeeded()#java/util/HashSet/HashSet()
org/apache/parquet/hadoop/TestParquetFileWriter/testAlignmentWithNoPaddingNeeded()#java/util/HashSet/add(E)
org/apache/parquet/hadoop/TestParquetFileWriter/testAlignmentWithNoPaddingNeeded()#org/apache/parquet/hadoop/ParquetFileWriter/endColumn()
org/apache/parquet/hadoop/TestParquetFileWriter/testAlignmentWithNoPaddingNeeded()#org/apache/parquet/hadoop/metadata/ParquetMetadata/getFileMetaData()
org/apache/parquet/hadoop/TestParquetFileWriter/testAlignmentWithNoPaddingNeeded()#org/apache/parquet/schema/MessageType/getColumnDescription(java.lang.String[])
org/apache/parquet/hadoop/TestParquetFileWriter/testAlignmentWithNoPaddingNeeded()#java/util/List/size()
org/apache/parquet/hadoop/TestParquetFileWriter/testAlignmentWithNoPaddingNeeded()#org/apache/parquet/hadoop/ParquetFileWriter/startBlock(long)
org/apache/parquet/hadoop/TestParquetFileWriter/testAlignmentWithNoPaddingNeeded()#org/apache/parquet/hadoop/TestParquetFileWriter/validateContains(org.apache.parquet.schema.MessageType,org.apache.parquet.column.page.PageReadStore,java.lang.String[],int,org.apache.parquet.bytes.BytesInput)
org/apache/parquet/hadoop/TestParquetFileWriter/testAlignmentWithNoPaddingNeeded()#org/apache/parquet/hadoop/ParquetFileWriter/endBlock()
org/apache/parquet/hadoop/TestParquetFileWriter/testAlignmentWithNoPaddingNeeded()#org/apache/parquet/hadoop/metadata/BlockMetaData/getStartingPos()
org/apache/parquet/hadoop/TestParquetFileWriter/testAlignmentWithNoPaddingNeeded()#java/io/File/toURI()
org/apache/parquet/hadoop/TestParquetFileWriter/testAlignmentWithNoPaddingNeeded()#org/apache/parquet/hadoop/ParquetFileWriter/end(java.util.Map)
org/apache/parquet/hadoop/TestParquetFileWriter/testAlignmentWithNoPaddingNeeded()#java/util/List/get(int)
org/apache/parquet/hadoop/TestParquetFileWriter/testAlignmentWithNoPaddingNeeded()#org/apache/parquet/hadoop/ParquetFileWriter/start()
org/apache/parquet/hadoop/TestParquetFileWriter/testAlignmentWithNoPaddingNeeded()#org/apache/parquet/hadoop/ParquetFileReader/ParquetFileReader(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.metadata.FileMetaData,org.apache.parquet.hadoop.Path,java.util.List,java.util.List)
org/apache/parquet/hadoop/TestParquetFileWriter/testAlignmentWithNoPaddingNeeded()#org/apache/parquet/column/page/PageReadStore/getRowCount()
org/apache/parquet/hadoop/TestParquetFileWriter/testAlignmentWithNoPaddingNeeded()#org/apache/parquet/hadoop/ParquetFileWriter/writeDataPage(int,int,org.apache.parquet.bytes.BytesInput,org.apache.parquet.column.statistics.Statistics,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding)
org/apache/parquet/hadoop/TestParquetFileWriter/testAlignmentWithNoPaddingNeeded()#org/apache/parquet/hadoop/ParquetFileReader/readNextRowGroup()
org/apache/parquet/hadoop/TestParquetFileWriter/testAlignmentWithNoPaddingNeeded()#org/apache/parquet/hadoop/ParquetFileWriter/getPos()
org/apache/parquet/hadoop/TestParquetFileWriter/testAlignmentWithNoPaddingNeeded()#org/apache/parquet/hadoop/metadata/BlockMetaData/getColumns()
org/apache/parquet/hadoop/TestParquetFileWriter/testAlignmentWithNoPaddingNeeded()#org/apache/parquet/hadoop/ParquetFileWriter/ParquetFileWriter(org.apache.parquet.hadoop.Configuration,org.apache.parquet.schema.MessageType,org.apache.parquet.hadoop.Path,long,int)
org/apache/parquet/hadoop/metadata/EncodingList/hashCode()#java/lang/Enum/hashCode()
org/apache/parquet/hadoop/metadata/EncodingList/getEncodingList(java.util.List)#org/apache/parquet/hadoop/metadata/EncodingList/EncodingList(java.util.List)
org/apache/parquet/hadoop/metadata/EncodingList/getEncodingList(java.util.List)#org/apache/parquet/hadoop/metadata/Canonicalizer/canonicalize(T)
org/apache/parquet/hadoop/metadata/EncodingList/size()#java/util/List/size()
org/apache/parquet/hadoop/metadata/EncodingList/equals(java.lang.Object)#java/lang/Enum/equals(java.lang.Object)
org/apache/parquet/hadoop/metadata/EncodingList/equals(java.lang.Object)#java/util/List/size()
org/apache/parquet/hadoop/metadata/EncodingList/equals(java.lang.Object)#java/util/List/get(int)
org/apache/parquet/hadoop/metadata/EncodingList/iterator()#java/util/List/iterator()
org/apache/parquet/hadoop/codec/CodecConfigTest/shouldUseParquetFlagToSetCodec(java.lang.String,org.apache.parquet.hadoop.metadata.CompressionCodecName)#org/apache/parquet/hadoop/util/ContextUtil/newTaskAttemptContext(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.util.TaskAttemptID)
org/apache/parquet/hadoop/codec/CodecConfigTest/shouldUseParquetFlagToSetCodec(java.lang.String,org.apache.parquet.hadoop.metadata.CompressionCodecName)#org/apache/parquet/hadoop/codec/CodecConfig/from(org.apache.parquet.hadoop.JobConf)
org/apache/parquet/hadoop/codec/CodecConfigTest/shouldUseParquetFlagToSetCodec(java.lang.String,org.apache.parquet.hadoop.metadata.CompressionCodecName)#java/lang/Object/Object()
org/apache/parquet/hadoop/codec/CodecConfigTest/testReadingCodecs()#org/apache/parquet/hadoop/codec/CodecConfigTest/shouldUseParquetFlagToSetCodec(java.lang.String,org.apache.parquet.hadoop.metadata.CompressionCodecName)
org/apache/parquet/hadoop/codec/CodecConfigTest/testReadingCodecs()#org/apache/parquet/hadoop/codec/CodecConfigTest/shouldUseHadoopFlagToSetCodec(java.lang.String,org.apache.parquet.hadoop.metadata.CompressionCodecName)
org/apache/parquet/hadoop/codec/CodecConfigTest/testReadingCodecs()#org/apache/parquet/hadoop/metadata/CompressionCodecName/getHadoopCompressionCodecClassName()
org/apache/parquet/hadoop/codec/CodecConfigTest/shouldUseHadoopFlagToSetCodec(java.lang.String,org.apache.parquet.hadoop.metadata.CompressionCodecName)#org/apache/parquet/hadoop/util/ContextUtil/newTaskAttemptContext(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.util.TaskAttemptID)
org/apache/parquet/hadoop/codec/CodecConfigTest/shouldUseHadoopFlagToSetCodec(java.lang.String,org.apache.parquet.hadoop.metadata.CompressionCodecName)#org/apache/parquet/hadoop/codec/CodecConfig/from(org.apache.parquet.hadoop.JobConf)
org/apache/parquet/hadoop/codec/CodecConfigTest/shouldUseHadoopFlagToSetCodec(java.lang.String,org.apache.parquet.hadoop.metadata.CompressionCodecName)#java/lang/Object/Object()
org/apache/parquet/filter/PagedRecordFilter/page(long,long)#org/apache/parquet/filter/PagedRecordFilter/page(long,long)/$anonymous1/()
org/apache/parquet/bytes/LittleEndianDataInputStream/readLong()#org/apache/parquet/bytes/LittleEndianDataInputStream/readFully(byte[],int,int)
org/apache/parquet/bytes/LittleEndianDataInputStream/readUnsignedByte()#java/io/InputStream/read()
org/apache/parquet/bytes/LittleEndianDataInputStream/readUnsignedByte()#java/io/EOFException/EOFException()
org/apache/parquet/bytes/LittleEndianDataInputStream/read()#java/io/InputStream/read()
org/apache/parquet/bytes/LittleEndianDataInputStream/readFully(byte[],int,int)#java/io/InputStream/read(byte[],int,int)
org/apache/parquet/bytes/LittleEndianDataInputStream/readFully(byte[],int,int)#java/lang/IndexOutOfBoundsException/IndexOutOfBoundsException()
org/apache/parquet/bytes/LittleEndianDataInputStream/readFully(byte[],int,int)#java/io/EOFException/EOFException()
org/apache/parquet/bytes/LittleEndianDataInputStream/hashCode()#java/lang/Object/hashCode()
org/apache/parquet/bytes/LittleEndianDataInputStream/available()#java/io/InputStream/available()
org/apache/parquet/bytes/LittleEndianDataInputStream/readUnsignedShort()#java/io/InputStream/read()
org/apache/parquet/bytes/LittleEndianDataInputStream/readUnsignedShort()#java/io/EOFException/EOFException()
org/apache/parquet/bytes/LittleEndianDataInputStream/readDouble()#org/apache/parquet/bytes/LittleEndianDataInputStream/readLong()
org/apache/parquet/bytes/LittleEndianDataInputStream/readDouble()#java/lang/Double/longBitsToDouble(long)
org/apache/parquet/bytes/LittleEndianDataInputStream/mark(int)#java/io/InputStream/mark(int)
org/apache/parquet/bytes/LittleEndianDataInputStream/readInt()#java/io/InputStream/read()
org/apache/parquet/bytes/LittleEndianDataInputStream/readInt()#java/io/EOFException/EOFException()
org/apache/parquet/bytes/LittleEndianDataInputStream/markSupported()#java/io/InputStream/markSupported()
org/apache/parquet/bytes/LittleEndianDataInputStream/skipBytes(int)#java/io/InputStream/skip(long)
org/apache/parquet/bytes/LittleEndianDataInputStream/readShort()#java/io/InputStream/read()
org/apache/parquet/bytes/LittleEndianDataInputStream/readShort()#java/io/EOFException/EOFException()
org/apache/parquet/bytes/LittleEndianDataInputStream/readFloat()#java/lang/Float/intBitsToFloat(int)
org/apache/parquet/bytes/LittleEndianDataInputStream/readFloat()#org/apache/parquet/bytes/LittleEndianDataInputStream/readInt()
org/apache/parquet/bytes/LittleEndianDataInputStream/readByte()#java/io/InputStream/read()
org/apache/parquet/bytes/LittleEndianDataInputStream/readByte()#java/io/EOFException/EOFException()
org/apache/parquet/bytes/LittleEndianDataInputStream/readFully(byte[])#org/apache/parquet/bytes/LittleEndianDataInputStream/readFully(byte[],int,int)
org/apache/parquet/bytes/LittleEndianDataInputStream/reset()#java/io/InputStream/reset()
org/apache/parquet/bytes/LittleEndianDataInputStream/skip(long)#java/io/InputStream/skip(long)
org/apache/parquet/bytes/LittleEndianDataInputStream/readBoolean()#java/io/InputStream/read()
org/apache/parquet/bytes/LittleEndianDataInputStream/readBoolean()#java/io/EOFException/EOFException()
org/apache/parquet/bytes/LittleEndianDataInputStream/read(byte[],int,int)#java/io/InputStream/read(byte[],int,int)
org/apache/parquet/bytes/LittleEndianDataInputStream/read(byte[])#java/io/InputStream/read(byte[])
org/apache/parquet/bytes/LittleEndianDataInputStream/equals(java.lang.Object)#java/lang/Object/equals(java.lang.Object)
org/apache/parquet/bytes/LittleEndianDataInputStream/close()#java/io/InputStream/close()
org/apache/parquet/thrift/projection/amend/ReadFieldBeginProtocol/readFieldBegin()#org/apache/parquet/thrift/struct/ThriftField/getName()
org/apache/parquet/thrift/projection/amend/ReadFieldBeginProtocol/readFieldBegin()#org/apache/parquet/thrift/struct/ThriftField/getFieldId()
org/apache/parquet/thrift/pig/ParquetThriftStorer/putNext(org.apache.parquet.pig.Tuple)#org/apache/parquet/io/ParquetEncodingException/ParquetEncodingException(java.lang.String,java.lang.Throwable)
org/apache/parquet/thrift/pig/ParquetThriftStorer/getOutputFormat()#org/apache/parquet/thrift/pig/TupleToThriftWriteSupport/TupleToThriftWriteSupport(java.lang.String)
org/apache/parquet/thrift/pig/ParquetThriftStorer/getOutputFormat()#org/apache/parquet/hadoop/ParquetOutputFormat/ParquetOutputFormat(S)
org/apache/parquet/avro/TestSpecificReadWrite/getVwPassat()#java/lang/String/getBytes()
org/apache/parquet/avro/TestSpecificReadWrite/testFilterMatchesMultipleBlocks()#org/apache/parquet/avro/TestSpecificReadWrite/getVwPassat()
org/apache/parquet/avro/TestSpecificReadWrite/testFilterMatchesMultipleBlocks()#org/apache/parquet/filter/ColumnRecordFilter/column(java.lang.String,org.apache.parquet.filter.ColumnPredicates.Predicate)
org/apache/parquet/avro/TestSpecificReadWrite/testFilterMatchesMultipleBlocks()#org/apache/parquet/avro/AvroParquetReader/AvroParquetReader(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path,org.apache.parquet.filter.UnboundRecordFilter)
org/apache/parquet/avro/TestSpecificReadWrite/testFilterMatchesMultipleBlocks()#org/apache/parquet/filter/ColumnPredicates/equalTo(java.lang.String)
org/apache/parquet/avro/TestSpecificReadWrite/testFilterMatchesMultipleBlocks()#org/apache/parquet/avro/TestSpecificReadWrite/writeCarsToParquetFile(int,org.apache.parquet.hadoop.metadata.CompressionCodecName,boolean,int,int)
org/apache/parquet/avro/TestSpecificReadWrite/testFilterMatchesMultipleBlocks()#org/apache/parquet/avro/TestSpecificReadWrite/getVwPolo()
org/apache/parquet/avro/TestSpecificReadWrite/testCompatReadWriteSpecific()#org/apache/parquet/avro/TestSpecificReadWrite/getVwPassat()
org/apache/parquet/avro/TestSpecificReadWrite/testCompatReadWriteSpecific()#org/apache/parquet/avro/AvroParquetReader/AvroParquetReader(org.apache.parquet.hadoop.Path,org.apache.parquet.filter.UnboundRecordFilter)
org/apache/parquet/avro/TestSpecificReadWrite/testCompatReadWriteSpecific()#org/apache/parquet/avro/TestSpecificReadWrite/getBmwMini()
org/apache/parquet/avro/TestSpecificReadWrite/testCompatReadWriteSpecific()#org/apache/parquet/avro/TestSpecificReadWrite/writeCarsToParquetFile(int,org.apache.parquet.hadoop.metadata.CompressionCodecName,boolean)
org/apache/parquet/avro/TestSpecificReadWrite/testCompatReadWriteSpecific()#org/apache/parquet/avro/TestSpecificReadWrite/getVwPolo()
org/apache/parquet/avro/TestSpecificReadWrite/testProjection()#java/util/ArrayList/ArrayList()
org/apache/parquet/avro/TestSpecificReadWrite/testProjection()#java/lang/String/equals(java.lang.Object)
org/apache/parquet/avro/TestSpecificReadWrite/testProjection()#org/apache/parquet/avro/AvroParquetReader/AvroParquetReader(org.apache.parquet.hadoop.Path,org.apache.parquet.filter.UnboundRecordFilter)
org/apache/parquet/avro/TestSpecificReadWrite/testProjection()#org/apache/parquet/avro/AvroReadSupport/setRequestedProjection(org.apache.parquet.hadoop.Configuration,org.apache.parquet.pig.Schema)
org/apache/parquet/avro/TestSpecificReadWrite/testProjection()#java/lang/Object/Object()
org/apache/parquet/avro/TestSpecificReadWrite/testProjection()#org/apache/parquet/avro/TestSpecificReadWrite/writeCarsToParquetFile(int,org.apache.parquet.hadoop.metadata.CompressionCodecName,boolean)
org/apache/parquet/avro/TestSpecificReadWrite/testFilterMatchesFinalBlockOnly()#org/apache/parquet/avro/TestSpecificReadWrite/getVwPassat()
org/apache/parquet/avro/TestSpecificReadWrite/testFilterMatchesFinalBlockOnly()#org/apache/parquet/filter/ColumnRecordFilter/column(java.lang.String,org.apache.parquet.filter.ColumnPredicates.Predicate)
org/apache/parquet/avro/TestSpecificReadWrite/testFilterMatchesFinalBlockOnly()#java/lang/Class/getSimpleName()
org/apache/parquet/avro/TestSpecificReadWrite/testFilterMatchesFinalBlockOnly()#org/apache/parquet/avro/AvroParquetReader/AvroParquetReader(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path,org.apache.parquet.filter.UnboundRecordFilter)
org/apache/parquet/avro/TestSpecificReadWrite/testFilterMatchesFinalBlockOnly()#org/apache/parquet/filter/ColumnPredicates/equalTo(java.lang.String)
org/apache/parquet/avro/TestSpecificReadWrite/testFilterMatchesFinalBlockOnly()#org/apache/parquet/avro/AvroParquetWriter/AvroParquetWriter(org.apache.parquet.hadoop.Path,org.apache.parquet.pig.Schema,org.apache.parquet.hadoop.metadata.CompressionCodecName,int,int,boolean)
org/apache/parquet/avro/TestSpecificReadWrite/testFilterMatchesFinalBlockOnly()#java/lang/Object/getClass()
org/apache/parquet/avro/TestSpecificReadWrite/testFilterMatchesFinalBlockOnly()#org/apache/parquet/avro/TestSpecificReadWrite/getBmwMini()
org/apache/parquet/avro/TestSpecificReadWrite/testFilterMatchesFinalBlockOnly()#org/apache/parquet/avro/TestSpecificReadWrite/getVwPolo()
org/apache/parquet/avro/TestSpecificReadWrite/testFilterMatchesFinalBlockOnly()#java/io/File/createTempFile(java.lang.String,java.lang.String)
org/apache/parquet/avro/TestSpecificReadWrite/testFilterMatchesFinalBlockOnly()#java/io/File/deleteOnExit()
org/apache/parquet/avro/TestSpecificReadWrite/testFilterMatchesFinalBlockOnly()#java/io/File/delete()
org/apache/parquet/avro/TestSpecificReadWrite/testFilterMatchesFinalBlockOnly()#java/io/File/getPath()
org/apache/parquet/avro/TestSpecificReadWrite/testFilterOnSubAttribute()#org/apache/parquet/avro/TestSpecificReadWrite/getVwPassat()
org/apache/parquet/avro/TestSpecificReadWrite/testFilterOnSubAttribute()#org/apache/parquet/filter/ColumnRecordFilter/column(java.lang.String,org.apache.parquet.filter.ColumnPredicates.Predicate)
org/apache/parquet/avro/TestSpecificReadWrite/testFilterOnSubAttribute()#org/apache/parquet/avro/AvroParquetReader/AvroParquetReader(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path,org.apache.parquet.filter.UnboundRecordFilter)
org/apache/parquet/avro/TestSpecificReadWrite/testFilterOnSubAttribute()#org/apache/parquet/filter/ColumnPredicates/equalTo(boolean)
org/apache/parquet/avro/TestSpecificReadWrite/testFilterOnSubAttribute()#org/apache/parquet/filter/ColumnPredicates/equalTo(java.lang.String)
org/apache/parquet/avro/TestSpecificReadWrite/testFilterOnSubAttribute()#org/apache/parquet/filter/ColumnPredicates/equalTo(float)
org/apache/parquet/avro/TestSpecificReadWrite/testFilterOnSubAttribute()#org/apache/parquet/avro/TestSpecificReadWrite/getBmwMini()
org/apache/parquet/avro/TestSpecificReadWrite/testFilterOnSubAttribute()#org/apache/parquet/avro/TestSpecificReadWrite/writeCarsToParquetFile(int,org.apache.parquet.hadoop.metadata.CompressionCodecName,boolean)
org/apache/parquet/avro/TestSpecificReadWrite/testFilterOnSubAttribute()#org/apache/parquet/avro/TestSpecificReadWrite/getVwPolo()
org/apache/parquet/avro/TestSpecificReadWrite/writeCarsToParquetFile(int,org.apache.parquet.hadoop.metadata.CompressionCodecName,boolean,int,int)#org/apache/parquet/avro/TestSpecificReadWrite/getVwPassat()
org/apache/parquet/avro/TestSpecificReadWrite/writeCarsToParquetFile(int,org.apache.parquet.hadoop.metadata.CompressionCodecName,boolean,int,int)#java/lang/Class/getSimpleName()
org/apache/parquet/avro/TestSpecificReadWrite/writeCarsToParquetFile(int,org.apache.parquet.hadoop.metadata.CompressionCodecName,boolean,int,int)#org/apache/parquet/avro/AvroParquetWriter/AvroParquetWriter(org.apache.parquet.hadoop.Path,org.apache.parquet.pig.Schema,org.apache.parquet.hadoop.metadata.CompressionCodecName,int,int,boolean)
org/apache/parquet/avro/TestSpecificReadWrite/writeCarsToParquetFile(int,org.apache.parquet.hadoop.metadata.CompressionCodecName,boolean,int,int)#java/lang/Object/getClass()
org/apache/parquet/avro/TestSpecificReadWrite/writeCarsToParquetFile(int,org.apache.parquet.hadoop.metadata.CompressionCodecName,boolean,int,int)#org/apache/parquet/avro/TestSpecificReadWrite/getBmwMini()
org/apache/parquet/avro/TestSpecificReadWrite/writeCarsToParquetFile(int,org.apache.parquet.hadoop.metadata.CompressionCodecName,boolean,int,int)#org/apache/parquet/avro/TestSpecificReadWrite/getVwPolo()
org/apache/parquet/avro/TestSpecificReadWrite/writeCarsToParquetFile(int,org.apache.parquet.hadoop.metadata.CompressionCodecName,boolean,int,int)#java/io/File/createTempFile(java.lang.String,java.lang.String)
org/apache/parquet/avro/TestSpecificReadWrite/writeCarsToParquetFile(int,org.apache.parquet.hadoop.metadata.CompressionCodecName,boolean,int,int)#java/io/File/deleteOnExit()
org/apache/parquet/avro/TestSpecificReadWrite/writeCarsToParquetFile(int,org.apache.parquet.hadoop.metadata.CompressionCodecName,boolean,int,int)#java/io/File/delete()
org/apache/parquet/avro/TestSpecificReadWrite/writeCarsToParquetFile(int,org.apache.parquet.hadoop.metadata.CompressionCodecName,boolean,int,int)#java/io/File/getPath()
org/apache/parquet/avro/TestSpecificReadWrite/getBmwMini()#java/lang/String/getBytes()
org/apache/parquet/avro/TestSpecificReadWrite/testReadWriteSpecificWithDictionary()#org/apache/parquet/avro/TestSpecificReadWrite/getVwPassat()
org/apache/parquet/avro/TestSpecificReadWrite/testReadWriteSpecificWithDictionary()#org/apache/parquet/avro/AvroParquetReader/AvroParquetReader(org.apache.parquet.hadoop.Path,org.apache.parquet.filter.UnboundRecordFilter)
org/apache/parquet/avro/TestSpecificReadWrite/testReadWriteSpecificWithDictionary()#org/apache/parquet/avro/TestSpecificReadWrite/getBmwMini()
org/apache/parquet/avro/TestSpecificReadWrite/testReadWriteSpecificWithDictionary()#org/apache/parquet/avro/TestSpecificReadWrite/writeCarsToParquetFile(int,org.apache.parquet.hadoop.metadata.CompressionCodecName,boolean)
org/apache/parquet/avro/TestSpecificReadWrite/testReadWriteSpecificWithDictionary()#org/apache/parquet/avro/TestSpecificReadWrite/getVwPolo()
org/apache/parquet/avro/TestSpecificReadWrite/testAvroReadSchema()#org/apache/parquet/avro/AvroReadSupport/setAvroReadSchema(org.apache.parquet.hadoop.Configuration,org.apache.parquet.pig.Schema)
org/apache/parquet/avro/TestSpecificReadWrite/testAvroReadSchema()#org/apache/parquet/avro/AvroParquetReader/AvroParquetReader(org.apache.parquet.hadoop.Path,org.apache.parquet.filter.UnboundRecordFilter)
org/apache/parquet/avro/TestSpecificReadWrite/testAvroReadSchema()#java/lang/Object/Object()
org/apache/parquet/avro/TestSpecificReadWrite/testAvroReadSchema()#org/apache/parquet/avro/TestSpecificReadWrite/writeCarsToParquetFile(int,org.apache.parquet.hadoop.metadata.CompressionCodecName,boolean)
org/apache/parquet/avro/TestSpecificReadWrite/testFilterMatchesNoBlocks()#org/apache/parquet/filter/ColumnRecordFilter/column(java.lang.String,org.apache.parquet.filter.ColumnPredicates.Predicate)
org/apache/parquet/avro/TestSpecificReadWrite/testFilterMatchesNoBlocks()#org/apache/parquet/avro/AvroParquetReader/AvroParquetReader(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path,org.apache.parquet.filter.UnboundRecordFilter)
org/apache/parquet/avro/TestSpecificReadWrite/testFilterMatchesNoBlocks()#org/apache/parquet/filter/ColumnPredicates/equalTo(java.lang.String)
org/apache/parquet/avro/TestSpecificReadWrite/testFilterMatchesNoBlocks()#org/apache/parquet/avro/TestSpecificReadWrite/writeCarsToParquetFile(int,org.apache.parquet.hadoop.metadata.CompressionCodecName,boolean,int,int)
org/apache/parquet/avro/TestSpecificReadWrite/testFilterWithDictionary()#org/apache/parquet/avro/TestSpecificReadWrite/getVwPassat()
org/apache/parquet/avro/TestSpecificReadWrite/testFilterWithDictionary()#org/apache/parquet/filter/ColumnRecordFilter/column(java.lang.String,org.apache.parquet.filter.ColumnPredicates.Predicate)
org/apache/parquet/avro/TestSpecificReadWrite/testFilterWithDictionary()#org/apache/parquet/avro/AvroParquetReader/AvroParquetReader(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path,org.apache.parquet.filter.UnboundRecordFilter)
org/apache/parquet/avro/TestSpecificReadWrite/testFilterWithDictionary()#org/apache/parquet/filter/ColumnPredicates/equalTo(java.lang.String)
org/apache/parquet/avro/TestSpecificReadWrite/testFilterWithDictionary()#org/apache/parquet/avro/TestSpecificReadWrite/writeCarsToParquetFile(int,org.apache.parquet.hadoop.metadata.CompressionCodecName,boolean)
org/apache/parquet/avro/TestSpecificReadWrite/testFilterWithDictionary()#org/apache/parquet/avro/TestSpecificReadWrite/getVwPolo()
org/apache/parquet/avro/TestSpecificReadWrite/data()#java/util/Arrays/asList(T[])
org/apache/parquet/avro/TestSpecificReadWrite/writeCarsToParquetFile(int,org.apache.parquet.hadoop.metadata.CompressionCodecName,boolean)#org/apache/parquet/avro/TestSpecificReadWrite/writeCarsToParquetFile(int,org.apache.parquet.hadoop.metadata.CompressionCodecName,boolean,int,int)
org/apache/parquet/avro/TestSpecificReadWrite/getVwPolo()#java/lang/String/getBytes()
org/apache/parquet/avro/TestSpecificReadWrite/testFilterMatchesMultiple()#org/apache/parquet/avro/TestSpecificReadWrite/getVwPassat()
org/apache/parquet/avro/TestSpecificReadWrite/testFilterMatchesMultiple()#org/apache/parquet/filter/ColumnRecordFilter/column(java.lang.String,org.apache.parquet.filter.ColumnPredicates.Predicate)
org/apache/parquet/avro/TestSpecificReadWrite/testFilterMatchesMultiple()#org/apache/parquet/avro/AvroParquetReader/AvroParquetReader(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path,org.apache.parquet.filter.UnboundRecordFilter)
org/apache/parquet/avro/TestSpecificReadWrite/testFilterMatchesMultiple()#org/apache/parquet/filter/ColumnPredicates/equalTo(java.lang.String)
org/apache/parquet/avro/TestSpecificReadWrite/testFilterMatchesMultiple()#org/apache/parquet/avro/TestSpecificReadWrite/writeCarsToParquetFile(int,org.apache.parquet.hadoop.metadata.CompressionCodecName,boolean)
org/apache/parquet/avro/TestSpecificReadWrite/testFilterMatchesMultiple()#org/apache/parquet/avro/TestSpecificReadWrite/getVwPolo()
org/apache/parquet/column/statistics/FloatStatistics/setMinMax(float,float)#org/apache/parquet/column/statistics/Statistics/markAsNotEmpty()
org/apache/parquet/column/statistics/FloatStatistics/getMaxBytes()#org/apache/parquet/bytes/BytesUtils/intToBytes(int)
org/apache/parquet/column/statistics/FloatStatistics/getMaxBytes()#java/lang/Float/floatToIntBits(float)
org/apache/parquet/column/statistics/FloatStatistics/initializeStats(float,float)#org/apache/parquet/column/statistics/Statistics/markAsNotEmpty()
org/apache/parquet/column/statistics/FloatStatistics/mergeStatisticsMinMax(org.apache.parquet.column.statistics.Statistics)#org/apache/parquet/column/statistics/FloatStatistics/initializeStats(float,float)
org/apache/parquet/column/statistics/FloatStatistics/mergeStatisticsMinMax(org.apache.parquet.column.statistics.Statistics)#org/apache/parquet/column/statistics/Statistics/hasNonNullValue()
org/apache/parquet/column/statistics/FloatStatistics/mergeStatisticsMinMax(org.apache.parquet.column.statistics.Statistics)#org/apache/parquet/column/statistics/FloatStatistics/getMin()
org/apache/parquet/column/statistics/FloatStatistics/mergeStatisticsMinMax(org.apache.parquet.column.statistics.Statistics)#org/apache/parquet/column/statistics/FloatStatistics/updateStats(float,float)
org/apache/parquet/column/statistics/FloatStatistics/mergeStatisticsMinMax(org.apache.parquet.column.statistics.Statistics)#org/apache/parquet/column/statistics/FloatStatistics/getMax()
org/apache/parquet/column/statistics/FloatStatistics/updateStats(float)#org/apache/parquet/column/statistics/FloatStatistics/initializeStats(float,float)
org/apache/parquet/column/statistics/FloatStatistics/updateStats(float)#org/apache/parquet/column/statistics/Statistics/hasNonNullValue()
org/apache/parquet/column/statistics/FloatStatistics/updateStats(float)#org/apache/parquet/column/statistics/FloatStatistics/updateStats(float,float)
org/apache/parquet/column/statistics/FloatStatistics/toString()#org/apache/parquet/column/statistics/Statistics/hasNonNullValue()
org/apache/parquet/column/statistics/FloatStatistics/toString()#java/lang/String/format(java.lang.String,java.lang.Object[])
org/apache/parquet/column/statistics/FloatStatistics/toString()#org/apache/parquet/column/statistics/Statistics/getNumNulls()
org/apache/parquet/column/statistics/FloatStatistics/toString()#org/apache/parquet/column/statistics/Statistics/isEmpty()
org/apache/parquet/column/statistics/FloatStatistics/setMinMaxFromBytes(byte[],byte[])#java/lang/Float/intBitsToFloat(int)
org/apache/parquet/column/statistics/FloatStatistics/setMinMaxFromBytes(byte[],byte[])#org/apache/parquet/bytes/BytesUtils/bytesToInt(byte[])
org/apache/parquet/column/statistics/FloatStatistics/setMinMaxFromBytes(byte[],byte[])#org/apache/parquet/column/statistics/Statistics/markAsNotEmpty()
org/apache/parquet/column/statistics/FloatStatistics/isSmallerThan(long)#org/apache/parquet/column/statistics/Statistics/hasNonNullValue()
org/apache/parquet/column/statistics/FloatStatistics/getMinBytes()#org/apache/parquet/bytes/BytesUtils/intToBytes(int)
org/apache/parquet/column/statistics/FloatStatistics/getMinBytes()#java/lang/Float/floatToIntBits(float)
org/apache/parquet/column/values/dictionary/IntList/add(int)#org/apache/parquet/column/values/dictionary/IntList/allocateSlab()
org/apache/parquet/column/values/dictionary/IntList/add(int)#org/apache/parquet/column/values/dictionary/IntList/updateCurrentSlabSize()
org/apache/parquet/column/values/dictionary/IntList/add(int)#java/util/List/add(E)
org/apache/parquet/column/values/dictionary/IntList/iterator()#org/apache/parquet/column/values/dictionary/IntList/IntIterator/IntIterator(int[][],int)
org/apache/parquet/column/values/dictionary/IntList/iterator()#org/apache/parquet/column/values/dictionary/IntList/allocateSlab()
org/apache/parquet/column/values/dictionary/IntList/iterator()#java/util/List/toArray(T[])
org/apache/parquet/column/values/dictionary/IntList/iterator()#java/util/List/size()
org/apache/parquet/column/values/dictionary/IntList/iterator()#org/apache/parquet/column/values/dictionary/IntList/size()
org/apache/parquet/hadoop/util/H1SeekableInputStream/readFullyHeapBuffer(org.apache.parquet.hadoop.FSDataInputStream,java.nio.ByteBuffer)#java/nio/ByteBuffer/arrayOffset()
org/apache/parquet/hadoop/util/H1SeekableInputStream/readFullyHeapBuffer(org.apache.parquet.hadoop.FSDataInputStream,java.nio.ByteBuffer)#java/nio/Buffer/position()
org/apache/parquet/hadoop/util/H1SeekableInputStream/readFullyHeapBuffer(org.apache.parquet.hadoop.FSDataInputStream,java.nio.ByteBuffer)#java/nio/Buffer/remaining()
org/apache/parquet/hadoop/util/H1SeekableInputStream/readFullyHeapBuffer(org.apache.parquet.hadoop.FSDataInputStream,java.nio.ByteBuffer)#java/nio/Buffer/position(int)
org/apache/parquet/hadoop/util/H1SeekableInputStream/readFullyHeapBuffer(org.apache.parquet.hadoop.FSDataInputStream,java.nio.ByteBuffer)#java/nio/Buffer/limit()
org/apache/parquet/hadoop/util/H1SeekableInputStream/readFullyHeapBuffer(org.apache.parquet.hadoop.FSDataInputStream,java.nio.ByteBuffer)#java/nio/ByteBuffer/array()
org/apache/parquet/hadoop/util/H1SeekableInputStream/readFullyDirectBuffer(org.apache.parquet.hadoop.FSDataInputStream,java.nio.ByteBuffer,byte[])#java/nio/Buffer/remaining()
org/apache/parquet/hadoop/util/H1SeekableInputStream/readFullyDirectBuffer(org.apache.parquet.hadoop.FSDataInputStream,java.nio.ByteBuffer,byte[])#java/io/EOFException/EOFException(java.lang.String)
org/apache/parquet/hadoop/util/H1SeekableInputStream/readFullyDirectBuffer(org.apache.parquet.hadoop.FSDataInputStream,java.nio.ByteBuffer,byte[])#java/lang/Math/min(int,int)
org/apache/parquet/hadoop/util/H1SeekableInputStream/readFullyDirectBuffer(org.apache.parquet.hadoop.FSDataInputStream,java.nio.ByteBuffer,byte[])#java/nio/ByteBuffer/put(byte[],int,int)
org/apache/parquet/hadoop/util/H1SeekableInputStream/read(java.nio.ByteBuffer)#org/apache/parquet/hadoop/util/H1SeekableInputStream/readDirectBuffer(org.apache.parquet.hadoop.FSDataInputStream,java.nio.ByteBuffer,byte[])
org/apache/parquet/hadoop/util/H1SeekableInputStream/read(java.nio.ByteBuffer)#java/nio/ByteBuffer/hasArray()
org/apache/parquet/hadoop/util/H1SeekableInputStream/read(java.nio.ByteBuffer)#org/apache/parquet/hadoop/util/H1SeekableInputStream/readHeapBuffer(org.apache.parquet.hadoop.FSDataInputStream,java.nio.ByteBuffer)
org/apache/parquet/hadoop/util/H1SeekableInputStream/readDirectBuffer(org.apache.parquet.hadoop.FSDataInputStream,java.nio.ByteBuffer,byte[])#java/nio/ByteBuffer/put(byte[])
org/apache/parquet/hadoop/util/H1SeekableInputStream/readDirectBuffer(org.apache.parquet.hadoop.FSDataInputStream,java.nio.ByteBuffer,byte[])#java/nio/Buffer/remaining()
org/apache/parquet/hadoop/util/H1SeekableInputStream/readDirectBuffer(org.apache.parquet.hadoop.FSDataInputStream,java.nio.ByteBuffer,byte[])#java/lang/Math/min(int,int)
org/apache/parquet/hadoop/util/H1SeekableInputStream/readDirectBuffer(org.apache.parquet.hadoop.FSDataInputStream,java.nio.ByteBuffer,byte[])#java/nio/ByteBuffer/put(byte[],int,int)
org/apache/parquet/hadoop/util/H1SeekableInputStream/readHeapBuffer(org.apache.parquet.hadoop.FSDataInputStream,java.nio.ByteBuffer)#java/nio/ByteBuffer/arrayOffset()
org/apache/parquet/hadoop/util/H1SeekableInputStream/readHeapBuffer(org.apache.parquet.hadoop.FSDataInputStream,java.nio.ByteBuffer)#java/nio/Buffer/position()
org/apache/parquet/hadoop/util/H1SeekableInputStream/readHeapBuffer(org.apache.parquet.hadoop.FSDataInputStream,java.nio.ByteBuffer)#java/nio/Buffer/remaining()
org/apache/parquet/hadoop/util/H1SeekableInputStream/readHeapBuffer(org.apache.parquet.hadoop.FSDataInputStream,java.nio.ByteBuffer)#java/nio/Buffer/position(int)
org/apache/parquet/hadoop/util/H1SeekableInputStream/readHeapBuffer(org.apache.parquet.hadoop.FSDataInputStream,java.nio.ByteBuffer)#java/nio/ByteBuffer/array()
org/apache/parquet/hadoop/util/H1SeekableInputStream/readFully(java.nio.ByteBuffer)#org/apache/parquet/hadoop/util/H1SeekableInputStream/readFullyHeapBuffer(org.apache.parquet.hadoop.FSDataInputStream,java.nio.ByteBuffer)
org/apache/parquet/hadoop/util/H1SeekableInputStream/readFully(java.nio.ByteBuffer)#org/apache/parquet/hadoop/util/H1SeekableInputStream/readFullyDirectBuffer(org.apache.parquet.hadoop.FSDataInputStream,java.nio.ByteBuffer,byte[])
org/apache/parquet/hadoop/util/H1SeekableInputStream/readFully(java.nio.ByteBuffer)#java/nio/ByteBuffer/hasArray()
org/apache/parquet/avro/TestCircularReferences/Referenceable/validate(org.apache.parquet.pig.Schema)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/parquet/hadoop/ColumnChunkPageWriteStore/ColumnChunkPageWriter/writeDictionaryPage(org.apache.parquet.column.page.DictionaryPage)#org/apache/parquet/column/page/DictionaryPage/getBytes()
org/apache/parquet/hadoop/ColumnChunkPageWriteStore/ColumnChunkPageWriter/writeDictionaryPage(org.apache.parquet.column.page.DictionaryPage)#org/apache/parquet/column/page/DictionaryPage/DictionaryPage(org.apache.parquet.bytes.BytesInput,int,int,org.apache.parquet.column.Encoding)
org/apache/parquet/hadoop/ColumnChunkPageWriteStore/ColumnChunkPageWriter/writeDictionaryPage(org.apache.parquet.column.page.DictionaryPage)#org/apache/parquet/bytes/BytesInput/copy(org.apache.parquet.bytes.BytesInput)
org/apache/parquet/hadoop/ColumnChunkPageWriteStore/ColumnChunkPageWriter/writeDictionaryPage(org.apache.parquet.column.page.DictionaryPage)#org/apache/parquet/column/page/DictionaryPage/getEncoding()
org/apache/parquet/hadoop/ColumnChunkPageWriteStore/ColumnChunkPageWriter/writeDictionaryPage(org.apache.parquet.column.page.DictionaryPage)#org/apache/parquet/bytes/BytesInput/size()
org/apache/parquet/hadoop/ColumnChunkPageWriteStore/ColumnChunkPageWriter/writeDictionaryPage(org.apache.parquet.column.page.DictionaryPage)#org/apache/parquet/column/page/DictionaryPage/getDictionarySize()
org/apache/parquet/hadoop/ColumnChunkPageWriteStore/ColumnChunkPageWriter/writeDictionaryPage(org.apache.parquet.column.page.DictionaryPage)#org/apache/parquet/io/ParquetEncodingException/ParquetEncodingException(java.lang.String)
org/apache/parquet/hadoop/ColumnChunkPageWriteStore/ColumnChunkPageWriter/writeDictionaryPage(org.apache.parquet.column.page.DictionaryPage)#org/apache/parquet/hadoop/CodecFactory/BytesCompressor/compress(org.apache.parquet.bytes.BytesInput)
org/apache/parquet/hadoop/ColumnChunkPageWriteStore/ColumnChunkPageWriter/memUsageString(java.lang.String)#org/apache/parquet/bytes/ConcatenatingByteArrayCollector/memUsageString(java.lang.String)
org/apache/parquet/hadoop/ColumnChunkPageWriteStore/ColumnChunkPageWriter/writePageV2(int,int,int,org.apache.parquet.bytes.BytesInput,org.apache.parquet.bytes.BytesInput,org.apache.parquet.column.Encoding,org.apache.parquet.bytes.BytesInput,org.apache.parquet.column.statistics.Statistics)#org/apache/parquet/hadoop/ColumnChunkPageWriteStore/ColumnChunkPageWriter/toIntWithCheck(long)
org/apache/parquet/hadoop/ColumnChunkPageWriteStore/ColumnChunkPageWriter/writePageV2(int,int,int,org.apache.parquet.bytes.BytesInput,org.apache.parquet.bytes.BytesInput,org.apache.parquet.column.Encoding,org.apache.parquet.bytes.BytesInput,org.apache.parquet.column.statistics.Statistics)#org/apache/parquet/bytes/ConcatenatingByteArrayCollector/collect(org.apache.parquet.bytes.BytesInput)
org/apache/parquet/hadoop/ColumnChunkPageWriteStore/ColumnChunkPageWriter/writePageV2(int,int,int,org.apache.parquet.bytes.BytesInput,org.apache.parquet.bytes.BytesInput,org.apache.parquet.column.Encoding,org.apache.parquet.bytes.BytesInput,org.apache.parquet.column.statistics.Statistics)#org/apache/parquet/bytes/BytesInput/concat(org.apache.parquet.bytes.BytesInput[])
org/apache/parquet/hadoop/ColumnChunkPageWriteStore/ColumnChunkPageWriter/writePageV2(int,int,int,org.apache.parquet.bytes.BytesInput,org.apache.parquet.bytes.BytesInput,org.apache.parquet.column.Encoding,org.apache.parquet.bytes.BytesInput,org.apache.parquet.column.statistics.Statistics)#java/io/ByteArrayOutputStream/reset()
org/apache/parquet/hadoop/ColumnChunkPageWriteStore/ColumnChunkPageWriter/writePageV2(int,int,int,org.apache.parquet.bytes.BytesInput,org.apache.parquet.bytes.BytesInput,org.apache.parquet.column.Encoding,org.apache.parquet.bytes.BytesInput,org.apache.parquet.column.statistics.Statistics)#org/apache/parquet/hadoop/CodecFactory/BytesCompressor/compress(org.apache.parquet.bytes.BytesInput)
org/apache/parquet/hadoop/ColumnChunkPageWriteStore/ColumnChunkPageWriter/writePageV2(int,int,int,org.apache.parquet.bytes.BytesInput,org.apache.parquet.bytes.BytesInput,org.apache.parquet.column.Encoding,org.apache.parquet.bytes.BytesInput,org.apache.parquet.column.statistics.Statistics)#java/util/List/add(E)
org/apache/parquet/hadoop/ColumnChunkPageWriteStore/ColumnChunkPageWriter/writePageV2(int,int,int,org.apache.parquet.bytes.BytesInput,org.apache.parquet.bytes.BytesInput,org.apache.parquet.column.Encoding,org.apache.parquet.bytes.BytesInput,org.apache.parquet.column.statistics.Statistics)#org/apache/parquet/bytes/BytesInput/from(java.io.ByteArrayOutputStream)
org/apache/parquet/hadoop/ColumnChunkPageWriteStore/ColumnChunkPageWriter/writePageV2(int,int,int,org.apache.parquet.bytes.BytesInput,org.apache.parquet.bytes.BytesInput,org.apache.parquet.column.Encoding,org.apache.parquet.bytes.BytesInput,org.apache.parquet.column.statistics.Statistics)#org/apache/parquet/column/statistics/Statistics/mergeStatistics(org.apache.parquet.column.statistics.Statistics)
org/apache/parquet/hadoop/ColumnChunkPageWriteStore/ColumnChunkPageWriter/writePageV2(int,int,int,org.apache.parquet.bytes.BytesInput,org.apache.parquet.bytes.BytesInput,org.apache.parquet.column.Encoding,org.apache.parquet.bytes.BytesInput,org.apache.parquet.column.statistics.Statistics)#org/apache/parquet/bytes/BytesInput/size()
org/apache/parquet/hadoop/ColumnChunkPageWriteStore/ColumnChunkPageWriter/writePageV2(int,int,int,org.apache.parquet.bytes.BytesInput,org.apache.parquet.bytes.BytesInput,org.apache.parquet.column.Encoding,org.apache.parquet.bytes.BytesInput,org.apache.parquet.column.statistics.Statistics)#org/apache/parquet/format/converter/ParquetMetadataConverter/writeDataPageV2Header(int,int,int,int,int,org.apache.parquet.column.statistics.Statistics,org.apache.parquet.column.Encoding,int,int,java.io.OutputStream)
org/apache/parquet/hadoop/ColumnChunkPageWriteStore/ColumnChunkPageWriter/writeToFileWriter(org.apache.parquet.hadoop.ParquetFileWriter)#org/apache/parquet/column/page/Page/getUncompressedSize()
org/apache/parquet/hadoop/ColumnChunkPageWriteStore/ColumnChunkPageWriter/writeToFileWriter(org.apache.parquet.hadoop.ParquetFileWriter)#org/apache/parquet/hadoop/ParquetFileWriter/startColumn(org.apache.parquet.column.ColumnDescriptor,long,org.apache.parquet.hadoop.metadata.CompressionCodecName)
org/apache/parquet/hadoop/ColumnChunkPageWriteStore/ColumnChunkPageWriter/writeToFileWriter(org.apache.parquet.hadoop.ParquetFileWriter)#java/lang/String/format(java.lang.String,java.lang.Object[])
org/apache/parquet/hadoop/ColumnChunkPageWriteStore/ColumnChunkPageWriter/writeToFileWriter(org.apache.parquet.hadoop.ParquetFileWriter)#org/apache/parquet/hadoop/ParquetFileWriter/writeDictionaryPage(org.apache.parquet.column.page.DictionaryPage)
org/apache/parquet/hadoop/ColumnChunkPageWriteStore/ColumnChunkPageWriter/writeToFileWriter(org.apache.parquet.hadoop.ParquetFileWriter)#org/apache/parquet/bytes/ConcatenatingByteArrayCollector/size()
org/apache/parquet/hadoop/ColumnChunkPageWriteStore/ColumnChunkPageWriter/writeToFileWriter(org.apache.parquet.hadoop.ParquetFileWriter)#java/util/List/clear()
org/apache/parquet/hadoop/ColumnChunkPageWriteStore/ColumnChunkPageWriter/writeToFileWriter(org.apache.parquet.hadoop.ParquetFileWriter)#org/apache/parquet/column/page/DictionaryPage/getDictionarySize()
org/apache/parquet/hadoop/ColumnChunkPageWriteStore/ColumnChunkPageWriter/writeToFileWriter(org.apache.parquet.hadoop.ParquetFileWriter)#java/util/Set/clear()
org/apache/parquet/hadoop/ColumnChunkPageWriteStore/ColumnChunkPageWriter/writeToFileWriter(org.apache.parquet.hadoop.ParquetFileWriter)#java/util/HashSet/HashSet(java.util.Collection)
org/apache/parquet/hadoop/ColumnChunkPageWriteStore/ColumnChunkPageWriter/writeToFileWriter(org.apache.parquet.hadoop.ParquetFileWriter)#org/apache/parquet/hadoop/ParquetFileWriter/endColumn()
org/apache/parquet/hadoop/ColumnChunkPageWriteStore/ColumnChunkPageWriter/writeToFileWriter(org.apache.parquet.hadoop.ParquetFileWriter)#org/apache/parquet/hadoop/CodecFactory/BytesCompressor/getCodecName()
org/apache/parquet/hadoop/ColumnChunkPageWriteStore/ColumnChunkPageWriter/writeToFileWriter(org.apache.parquet.hadoop.ParquetFileWriter)#org/apache/parquet/hadoop/ParquetFileWriter/writeDataPages(org.apache.parquet.bytes.BytesInput,long,long,org.apache.parquet.column.statistics.Statistics,java.util.Set,java.util.Set,java.util.List)
org/apache/parquet/hadoop/ColumnChunkPageWriteStore/ColumnChunkPageWriter/getMemSize()#org/apache/parquet/bytes/ConcatenatingByteArrayCollector/size()
org/apache/parquet/hadoop/ColumnChunkPageWriteStore/ColumnChunkPageWriter/writePage(org.apache.parquet.bytes.BytesInput,int,org.apache.parquet.column.statistics.Statistics,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding)#org/apache/parquet/bytes/ConcatenatingByteArrayCollector/collect(org.apache.parquet.bytes.BytesInput)
org/apache/parquet/hadoop/ColumnChunkPageWriteStore/ColumnChunkPageWriter/writePage(org.apache.parquet.bytes.BytesInput,int,org.apache.parquet.column.statistics.Statistics,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding)#org/apache/parquet/bytes/BytesInput/concat(org.apache.parquet.bytes.BytesInput[])
org/apache/parquet/hadoop/ColumnChunkPageWriteStore/ColumnChunkPageWriter/writePage(org.apache.parquet.bytes.BytesInput,int,org.apache.parquet.column.statistics.Statistics,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding)#org/apache/parquet/bytes/BytesInput/size()
org/apache/parquet/hadoop/ColumnChunkPageWriteStore/ColumnChunkPageWriter/writePage(org.apache.parquet.bytes.BytesInput,int,org.apache.parquet.column.statistics.Statistics,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding)#java/util/List/add(E)
org/apache/parquet/hadoop/ColumnChunkPageWriteStore/ColumnChunkPageWriter/writePage(org.apache.parquet.bytes.BytesInput,int,org.apache.parquet.column.statistics.Statistics,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding)#org/apache/parquet/bytes/BytesInput/from(java.io.ByteArrayOutputStream)
org/apache/parquet/hadoop/ColumnChunkPageWriteStore/ColumnChunkPageWriter/writePage(org.apache.parquet.bytes.BytesInput,int,org.apache.parquet.column.statistics.Statistics,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding)#java/util/Set/add(E)
org/apache/parquet/hadoop/ColumnChunkPageWriteStore/ColumnChunkPageWriter/writePage(org.apache.parquet.bytes.BytesInput,int,org.apache.parquet.column.statistics.Statistics,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding)#org/apache/parquet/column/statistics/Statistics/mergeStatistics(org.apache.parquet.column.statistics.Statistics)
org/apache/parquet/hadoop/ColumnChunkPageWriteStore/ColumnChunkPageWriter/writePage(org.apache.parquet.bytes.BytesInput,int,org.apache.parquet.column.statistics.Statistics,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding)#org/apache/parquet/format/converter/ParquetMetadataConverter/writeDataPageHeader(int,int,int,org.apache.parquet.column.statistics.Statistics,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding,java.io.OutputStream)
org/apache/parquet/hadoop/ColumnChunkPageWriteStore/ColumnChunkPageWriter/writePage(org.apache.parquet.bytes.BytesInput,int,org.apache.parquet.column.statistics.Statistics,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding)#java/io/ByteArrayOutputStream/reset()
org/apache/parquet/hadoop/ColumnChunkPageWriteStore/ColumnChunkPageWriter/writePage(org.apache.parquet.bytes.BytesInput,int,org.apache.parquet.column.statistics.Statistics,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding)#org/apache/parquet/io/ParquetEncodingException/ParquetEncodingException(java.lang.String)
org/apache/parquet/hadoop/ColumnChunkPageWriteStore/ColumnChunkPageWriter/writePage(org.apache.parquet.bytes.BytesInput,int,org.apache.parquet.column.statistics.Statistics,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding)#org/apache/parquet/hadoop/CodecFactory/BytesCompressor/compress(org.apache.parquet.bytes.BytesInput)
org/apache/parquet/hadoop/ColumnChunkPageWriteStore/ColumnChunkPageWriter/toIntWithCheck(long)#org/apache/parquet/io/ParquetEncodingException/ParquetEncodingException(java.lang.String)
org/apache/parquet/hadoop/ColumnChunkPageWriteStore/ColumnChunkPageWriter/allocatedSize()#org/apache/parquet/bytes/ConcatenatingByteArrayCollector/size()
org/apache/parquet/column/values/plain/FixedLenByteArrayPlainValuesWriter/getAllocatedSize()#org/apache/parquet/bytes/CapacityByteArrayOutputStream/getCapacity()
org/apache/parquet/column/values/plain/FixedLenByteArrayPlainValuesWriter/getBytes()#org/apache/parquet/bytes/LittleEndianDataOutputStream/flush()
org/apache/parquet/column/values/plain/FixedLenByteArrayPlainValuesWriter/getBytes()#org/apache/parquet/bytes/CapacityByteArrayOutputStream/size()
org/apache/parquet/column/values/plain/FixedLenByteArrayPlainValuesWriter/getBytes()#org/apache/parquet/io/ParquetEncodingException/ParquetEncodingException(java.lang.String,java.lang.Throwable)
org/apache/parquet/column/values/plain/FixedLenByteArrayPlainValuesWriter/getBytes()#org/apache/parquet/bytes/BytesInput/from(org.apache.parquet.bytes.CapacityByteArrayOutputStream)
org/apache/parquet/column/values/plain/FixedLenByteArrayPlainValuesWriter/memUsageString(java.lang.String)#org/apache/parquet/bytes/CapacityByteArrayOutputStream/memUsageString(java.lang.String)
org/apache/parquet/column/values/plain/FixedLenByteArrayPlainValuesWriter/reset()#org/apache/parquet/bytes/CapacityByteArrayOutputStream/reset()
org/apache/parquet/column/values/plain/FixedLenByteArrayPlainValuesWriter/close()#org/apache/parquet/bytes/CapacityByteArrayOutputStream/close()
org/apache/parquet/column/values/plain/FixedLenByteArrayPlainValuesWriter/writeBytes(org.apache.parquet.io.api.Binary)#org/apache/parquet/io/api/Binary/length()
org/apache/parquet/column/values/plain/FixedLenByteArrayPlainValuesWriter/writeBytes(org.apache.parquet.io.api.Binary)#org/apache/parquet/io/ParquetEncodingException/ParquetEncodingException(java.lang.String,java.lang.Throwable)
org/apache/parquet/column/values/plain/FixedLenByteArrayPlainValuesWriter/writeBytes(org.apache.parquet.io.api.Binary)#org/apache/parquet/io/api/Binary/writeTo(java.io.OutputStream)
org/apache/parquet/column/values/plain/FixedLenByteArrayPlainValuesWriter/writeBytes(org.apache.parquet.io.api.Binary)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/parquet/column/values/plain/FixedLenByteArrayPlainValuesWriter/getBufferedSize()#org/apache/parquet/bytes/CapacityByteArrayOutputStream/size()
org/apache/parquet/avro/AvroParquetReader/builder(org.apache.parquet.hadoop.Path)#org/apache/parquet/avro/AvroParquetReader/Builder/Builder(org.apache.parquet.hadoop.Path)
org/apache/parquet/schema/Types/BaseListBuilder/requiredElement(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)#org/apache/parquet/schema/Types/BaseListBuilder/element(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.schema.Type.Repetition)
org/apache/parquet/schema/Types/BaseListBuilder/optionalListElement()#org/apache/parquet/schema/Types/BaseListBuilder/listElement(org.apache.parquet.schema.Type.Repetition)
org/apache/parquet/schema/Types/BaseListBuilder/element(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.schema.Type.Repetition)#org/apache/parquet/schema/Types/Builder/repetition(org.apache.parquet.schema.Type.Repetition)
org/apache/parquet/schema/Types/BaseListBuilder/element(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.schema.Type.Repetition)#org/apache/parquet/schema/Types/BaseListBuilder/ElementBuilder/ElementBuilder(L,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/schema/Types/BaseListBuilder/element(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.schema.Type.Repetition)#org/apache/parquet/schema/Types/BaseListBuilder/self()
org/apache/parquet/schema/Types/BaseListBuilder/requiredGroupElement()#org/apache/parquet/schema/Types/BaseListBuilder/groupElement(org.apache.parquet.schema.Type.Repetition)
org/apache/parquet/schema/Types/BaseListBuilder/mapElement(org.apache.parquet.schema.Type.Repetition)#org/apache/parquet/schema/Types/Builder/repetition(org.apache.parquet.schema.Type.Repetition)
org/apache/parquet/schema/Types/BaseListBuilder/mapElement(org.apache.parquet.schema.Type.Repetition)#org/apache/parquet/schema/Types/BaseListBuilder/MapElementBuilder/MapElementBuilder(L)
org/apache/parquet/schema/Types/BaseListBuilder/mapElement(org.apache.parquet.schema.Type.Repetition)#org/apache/parquet/schema/Types/BaseListBuilder/self()
org/apache/parquet/schema/Types/BaseListBuilder/optionalMapElement()#org/apache/parquet/schema/Types/BaseListBuilder/mapElement(org.apache.parquet.schema.Type.Repetition)
org/apache/parquet/schema/Types/BaseListBuilder/listElement(org.apache.parquet.schema.Type.Repetition)#org/apache/parquet/schema/Types/BaseListBuilder/self()
org/apache/parquet/schema/Types/BaseListBuilder/listElement(org.apache.parquet.schema.Type.Repetition)#org/apache/parquet/schema/Types/Builder/repetition(org.apache.parquet.schema.Type.Repetition)
org/apache/parquet/schema/Types/BaseListBuilder/listElement(org.apache.parquet.schema.Type.Repetition)#org/apache/parquet/schema/Types/BaseListBuilder/ListElementBuilder/ListElementBuilder(L)
org/apache/parquet/schema/Types/BaseListBuilder/optionalElement(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)#org/apache/parquet/schema/Types/BaseListBuilder/element(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.schema.Type.Repetition)
org/apache/parquet/schema/Types/BaseListBuilder/requiredListElement()#org/apache/parquet/schema/Types/BaseListBuilder/listElement(org.apache.parquet.schema.Type.Repetition)
org/apache/parquet/schema/Types/BaseListBuilder/element(org.apache.parquet.schema.Type)#org/apache/parquet/schema/Types/BaseListBuilder/setElementType(org.apache.parquet.schema.Type)
org/apache/parquet/schema/Types/BaseListBuilder/element(org.apache.parquet.schema.Type)#org/apache/parquet/schema/Types/BaseListBuilder/self()
org/apache/parquet/schema/Types/BaseListBuilder/setElementType(org.apache.parquet.schema.Type)#org/apache/parquet/Preconditions/checkState(boolean,java.lang.String)
org/apache/parquet/schema/Types/BaseListBuilder/setElementType(org.apache.parquet.schema.Type)#org/apache/parquet/schema/Types/BaseListBuilder/self()
org/apache/parquet/schema/Types/BaseListBuilder/optionalGroupElement()#org/apache/parquet/schema/Types/BaseListBuilder/groupElement(org.apache.parquet.schema.Type.Repetition)
org/apache/parquet/schema/Types/BaseListBuilder/requiredMapElement()#org/apache/parquet/schema/Types/BaseListBuilder/mapElement(org.apache.parquet.schema.Type.Repetition)
org/apache/parquet/schema/Types/BaseListBuilder/build(java.lang.String)#org/apache/parquet/schema/Types/buildGroup(org.apache.parquet.schema.Type.Repetition)
org/apache/parquet/schema/Types/BaseListBuilder/build(java.lang.String)#org/apache/parquet/Preconditions/checkState(boolean,java.lang.String)
org/apache/parquet/schema/Types/BaseListBuilder/build(java.lang.String)#org/apache/parquet/schema/Types/Builder/named(java.lang.String)
org/apache/parquet/schema/Types/BaseListBuilder/build(java.lang.String)#org/apache/parquet/schema/Types/Builder/as(org.apache.parquet.schema.OriginalType)
org/apache/parquet/schema/Types/BaseListBuilder/build(java.lang.String)#org/apache/parquet/schema/Types/BaseGroupBuilder/addFields(org.apache.parquet.schema.Type[])
org/apache/parquet/schema/Types/BaseListBuilder/build(java.lang.String)#org/apache/parquet/schema/Types/BaseGroupBuilder/repeatedGroup()
org/apache/parquet/schema/Types/BaseListBuilder/build(java.lang.String)#org/apache/parquet/Preconditions/checkNotNull(T,java.lang.String)
org/apache/parquet/schema/Types/BaseListBuilder/groupElement(org.apache.parquet.schema.Type.Repetition)#org/apache/parquet/schema/Types/Builder/repetition(org.apache.parquet.schema.Type.Repetition)
org/apache/parquet/schema/Types/BaseListBuilder/groupElement(org.apache.parquet.schema.Type.Repetition)#org/apache/parquet/schema/Types/BaseListBuilder/GroupElementBuilder/GroupElementBuilder(L)
org/apache/parquet/schema/Types/BaseListBuilder/groupElement(org.apache.parquet.schema.Type.Repetition)#org/apache/parquet/schema/Types/BaseListBuilder/self()
org/apache/parquet/hadoop/example/ExampleParquetWriter/builder(org.apache.parquet.hadoop.Path)#org/apache/parquet/hadoop/example/ExampleParquetWriter/Builder/Builder(org.apache.parquet.hadoop.Path)
org/apache/parquet/thrift/ThriftRecordConverter/PrimitiveFieldHandler/addInt(int)#org/apache/parquet/io/api/PrimitiveConverter/addInt(int)
org/apache/parquet/thrift/ThriftRecordConverter/PrimitiveFieldHandler/addInt(int)#org/apache/parquet/thrift/ThriftRecordConverter/PrimitiveFieldHandler/startField()
org/apache/parquet/thrift/ThriftRecordConverter/PrimitiveFieldHandler/addInt(int)#org/apache/parquet/thrift/ThriftRecordConverter/PrimitiveFieldHandler/endField()
org/apache/parquet/thrift/ThriftRecordConverter/PrimitiveFieldHandler/addFloat(float)#org/apache/parquet/thrift/ThriftRecordConverter/PrimitiveFieldHandler/startField()
org/apache/parquet/thrift/ThriftRecordConverter/PrimitiveFieldHandler/addFloat(float)#org/apache/parquet/io/api/PrimitiveConverter/addFloat(float)
org/apache/parquet/thrift/ThriftRecordConverter/PrimitiveFieldHandler/addFloat(float)#org/apache/parquet/thrift/ThriftRecordConverter/PrimitiveFieldHandler/endField()
org/apache/parquet/thrift/ThriftRecordConverter/PrimitiveFieldHandler/addLong(long)#org/apache/parquet/thrift/ThriftRecordConverter/PrimitiveFieldHandler/startField()
org/apache/parquet/thrift/ThriftRecordConverter/PrimitiveFieldHandler/addLong(long)#org/apache/parquet/thrift/ThriftRecordConverter/PrimitiveFieldHandler/endField()
org/apache/parquet/thrift/ThriftRecordConverter/PrimitiveFieldHandler/addLong(long)#org/apache/parquet/io/api/PrimitiveConverter/addLong(long)
org/apache/parquet/thrift/ThriftRecordConverter/PrimitiveFieldHandler/addBoolean(boolean)#org/apache/parquet/thrift/ThriftRecordConverter/PrimitiveFieldHandler/startField()
org/apache/parquet/thrift/ThriftRecordConverter/PrimitiveFieldHandler/addBoolean(boolean)#org/apache/parquet/thrift/ThriftRecordConverter/PrimitiveFieldHandler/endField()
org/apache/parquet/thrift/ThriftRecordConverter/PrimitiveFieldHandler/addBoolean(boolean)#org/apache/parquet/io/api/PrimitiveConverter/addBoolean(boolean)
org/apache/parquet/thrift/ThriftRecordConverter/PrimitiveFieldHandler/addDouble(double)#org/apache/parquet/thrift/ThriftRecordConverter/PrimitiveFieldHandler/startField()
org/apache/parquet/thrift/ThriftRecordConverter/PrimitiveFieldHandler/addDouble(double)#org/apache/parquet/thrift/ThriftRecordConverter/PrimitiveFieldHandler/endField()
org/apache/parquet/thrift/ThriftRecordConverter/PrimitiveFieldHandler/addDouble(double)#org/apache/parquet/io/api/PrimitiveConverter/addDouble(double)
org/apache/parquet/thrift/ThriftRecordConverter/PrimitiveFieldHandler/addBinary(org.apache.parquet.io.api.Binary)#org/apache/parquet/io/api/PrimitiveConverter/addBinary(org.apache.parquet.io.api.Binary)
org/apache/parquet/thrift/ThriftRecordConverter/PrimitiveFieldHandler/addBinary(org.apache.parquet.io.api.Binary)#org/apache/parquet/thrift/ThriftRecordConverter/PrimitiveFieldHandler/startField()
org/apache/parquet/thrift/ThriftRecordConverter/PrimitiveFieldHandler/addBinary(org.apache.parquet.io.api.Binary)#org/apache/parquet/thrift/ThriftRecordConverter/PrimitiveFieldHandler/endField()
org/apache/parquet/thrift/projection/FieldsPath/isValueFieldOfMap(org.apache.parquet.thrift.struct.ThriftField,org.apache.parquet.thrift.struct.ThriftField)#org/apache/parquet/thrift/struct/ThriftField/getType()
org/apache/parquet/thrift/projection/FieldsPath/isValueFieldOfMap(org.apache.parquet.thrift.struct.ThriftField,org.apache.parquet.thrift.struct.ThriftField)#org/apache/parquet/thrift/struct/ThriftType/MapType/getValue()
org/apache/parquet/thrift/projection/FieldsPath/toDelimitedString(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/apache/parquet/thrift/projection/FieldsPath/toDelimitedString(java.lang.String)#java/util/ArrayList/size()
org/apache/parquet/thrift/projection/FieldsPath/toDelimitedString(java.lang.String)#org/apache/parquet/thrift/struct/ThriftField/getName()
org/apache/parquet/thrift/projection/FieldsPath/toDelimitedString(java.lang.String)#java/lang/AbstractStringBuilder/length()
org/apache/parquet/thrift/projection/FieldsPath/toDelimitedString(java.lang.String)#java/util/ArrayList/get(int)
org/apache/parquet/thrift/projection/FieldsPath/toDelimitedString(java.lang.String)#org/apache/parquet/thrift/projection/FieldsPath/isValueFieldOfMap(org.apache.parquet.thrift.struct.ThriftField,org.apache.parquet.thrift.struct.ThriftField)
org/apache/parquet/thrift/projection/FieldsPath/toDelimitedString(java.lang.String)#java/lang/AbstractStringBuilder/substring(int,int)
org/apache/parquet/thrift/projection/FieldsPath/toDelimitedString(java.lang.String)#org/apache/parquet/thrift/projection/FieldsPath/isKeyFieldOfMap(org.apache.parquet.thrift.struct.ThriftField,org.apache.parquet.thrift.struct.ThriftField)
org/apache/parquet/thrift/projection/FieldsPath/toDelimitedString(java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/apache/parquet/thrift/projection/FieldsPath/isKeyFieldOfMap(org.apache.parquet.thrift.struct.ThriftField,org.apache.parquet.thrift.struct.ThriftField)#org/apache/parquet/thrift/struct/ThriftType/MapType/getKey()
org/apache/parquet/thrift/projection/FieldsPath/isKeyFieldOfMap(org.apache.parquet.thrift.struct.ThriftField,org.apache.parquet.thrift.struct.ThriftField)#org/apache/parquet/thrift/struct/ThriftField/getType()
org/apache/parquet/thrift/projection/FieldsPath/toString()#org/apache/parquet/thrift/projection/FieldsPath/toDelimitedString(java.lang.String)
org/apache/parquet/thrift/projection/FieldsPath/push(org.apache.parquet.thrift.struct.ThriftField)#java/util/ArrayList/ArrayList(java.util.Collection)
org/apache/parquet/thrift/projection/FieldsPath/push(org.apache.parquet.thrift.struct.ThriftField)#org/apache/parquet/thrift/projection/FieldsPath/FieldsPath(java.util.ArrayList)
org/apache/parquet/thrift/projection/FieldsPath/push(org.apache.parquet.thrift.struct.ThriftField)#java/util/ArrayList/add(E)
org/apache/parquet/hadoop/metadata/GlobalMetaData/merge()#java/lang/Object/toString()
org/apache/parquet/hadoop/metadata/GlobalMetaData/merge()#java/util/Map/Entry/getValue()
org/apache/parquet/hadoop/metadata/GlobalMetaData/merge()#java/util/Set/size()
org/apache/parquet/hadoop/metadata/GlobalMetaData/merge()#org/apache/parquet/hadoop/metadata/FileMetaData/FileMetaData(org.apache.parquet.schema.MessageType,java.util.Map,java.lang.String)
org/apache/parquet/hadoop/metadata/GlobalMetaData/merge()#java/util/Map/Entry/getKey()
org/apache/parquet/hadoop/metadata/GlobalMetaData/merge()#java/util/Set/iterator()
org/apache/parquet/hadoop/metadata/GlobalMetaData/merge()#java/util/Map/entrySet()
org/apache/parquet/hadoop/metadata/GlobalMetaData/merge()#java/util/Iterator/next()
org/apache/parquet/hadoop/metadata/GlobalMetaData/merge()#java/util/HashMap/HashMap()
org/apache/parquet/hadoop/metadata/GlobalMetaData/merge()#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/apache/parquet/hadoop/metadata/GlobalMetaData/merge()#java/util/Map/put(K,V)
org/apache/parquet/filter2/recordlevel/IncrementallyUpdatedFilterPredicateResetter/reset(org.apache.parquet.filter2.recordlevel.IncrementallyUpdatedFilterPredicate)#org/apache/parquet/Preconditions/checkNotNull(T,java.lang.String)
org/apache/parquet/filter2/recordlevel/IncrementallyUpdatedFilterPredicateResetter/reset(org.apache.parquet.filter2.recordlevel.IncrementallyUpdatedFilterPredicate)#org/apache/parquet/filter2/recordlevel/IncrementallyUpdatedFilterPredicate/accept(org.apache.parquet.filter2.recordlevel.IncrementallyUpdatedFilterPredicate.Visitor)
org/apache/parquet/filter2/recordlevel/IncrementallyUpdatedFilterPredicateResetter/visit(org.apache.parquet.filter2.recordlevel.IncrementallyUpdatedFilterPredicate.ValueInspector)#org/apache/parquet/filter2/recordlevel/IncrementallyUpdatedFilterPredicate/ValueInspector/reset()
org/apache/parquet/filter2/recordlevel/IncrementallyUpdatedFilterPredicateResetter/visit(org.apache.parquet.filter2.recordlevel.IncrementallyUpdatedFilterPredicate.Or)#org/apache/parquet/filter2/recordlevel/IncrementallyUpdatedFilterPredicate/BinaryLogical/getLeft()
org/apache/parquet/filter2/recordlevel/IncrementallyUpdatedFilterPredicateResetter/visit(org.apache.parquet.filter2.recordlevel.IncrementallyUpdatedFilterPredicate.Or)#org/apache/parquet/filter2/recordlevel/IncrementallyUpdatedFilterPredicate/BinaryLogical/getRight()
org/apache/parquet/filter2/recordlevel/IncrementallyUpdatedFilterPredicateResetter/visit(org.apache.parquet.filter2.recordlevel.IncrementallyUpdatedFilterPredicate.Or)#org/apache/parquet/filter2/recordlevel/IncrementallyUpdatedFilterPredicate/accept(org.apache.parquet.filter2.recordlevel.IncrementallyUpdatedFilterPredicate.Visitor)
org/apache/parquet/filter2/recordlevel/IncrementallyUpdatedFilterPredicateResetter/visit(org.apache.parquet.filter2.recordlevel.IncrementallyUpdatedFilterPredicate.And)#org/apache/parquet/filter2/recordlevel/IncrementallyUpdatedFilterPredicate/BinaryLogical/getLeft()
org/apache/parquet/filter2/recordlevel/IncrementallyUpdatedFilterPredicateResetter/visit(org.apache.parquet.filter2.recordlevel.IncrementallyUpdatedFilterPredicate.And)#org/apache/parquet/filter2/recordlevel/IncrementallyUpdatedFilterPredicate/BinaryLogical/getRight()
org/apache/parquet/filter2/recordlevel/IncrementallyUpdatedFilterPredicateResetter/visit(org.apache.parquet.filter2.recordlevel.IncrementallyUpdatedFilterPredicate.And)#org/apache/parquet/filter2/recordlevel/IncrementallyUpdatedFilterPredicate/accept(org.apache.parquet.filter2.recordlevel.IncrementallyUpdatedFilterPredicate.Visitor)
org/apache/parquet/hadoop/thrift/TestCorruptThriftRecords/ReadMapper/map(java.lang.Void,T,org.apache.parquet.hadoop.Context)#java/util/List/add(E)
org/apache/parquet/hadoop/thrift/TestCorruptThriftRecords/ReadMapper/setup(org.apache.parquet.hadoop.Context)#java/util/ArrayList/ArrayList()
org/apache/parquet/scrooge/ScroogeReadSupport/getProjectedSchema(org.apache.parquet.thrift.projection.FieldProjectionFilter)#org/apache/parquet/thrift/ThriftSchemaConverter/convert(org.apache.parquet.thrift.struct.ThriftType.StructType)
org/apache/parquet/scrooge/ScroogeReadSupport/getProjectedSchema(org.apache.parquet.thrift.projection.FieldProjectionFilter)#org/apache/parquet/scrooge/ScroogeStructConverter/ScroogeStructConverter()
org/apache/parquet/scrooge/ScroogeReadSupport/getProjectedSchema(org.apache.parquet.thrift.projection.FieldProjectionFilter)#org/apache/parquet/thrift/ThriftSchemaConverter/ThriftSchemaConverter(org.apache.parquet.thrift.projection.FieldProjectionFilter)
org/apache/parquet/scrooge/ScroogeReadSupport/getProjectedSchema(org.apache.parquet.thrift.projection.FieldProjectionFilter)#org/apache/parquet/scrooge/ScroogeStructConverter/convert(java.lang.Class)
org/apache/parquet/hadoop/ClientSideMetadataSplitStrategy/HDFSBlocks/checkBelongingToANewHDFSBlock(org.apache.parquet.hadoop.metadata.BlockMetaData)#org/apache/parquet/hadoop/ClientSideMetadataSplitStrategy/HDFSBlocks/getHDFSBlockEndingPosition(int)
org/apache/parquet/hadoop/ClientSideMetadataSplitStrategy/HDFSBlocks/checkBelongingToANewHDFSBlock(org.apache.parquet.hadoop.metadata.BlockMetaData)#org/apache/parquet/hadoop/metadata/BlockMetaData/getStartingPos()
org/apache/parquet/hadoop/ClientSideMetadataSplitStrategy/HDFSBlocks/checkBelongingToANewHDFSBlock(org.apache.parquet.hadoop.metadata.BlockMetaData)#org/apache/parquet/io/ParquetDecodingException/ParquetDecodingException(java.lang.String)
org/apache/parquet/hadoop/ClientSideMetadataSplitStrategy/HDFSBlocks/checkBelongingToANewHDFSBlock(org.apache.parquet.hadoop.metadata.BlockMetaData)#org/apache/parquet/hadoop/metadata/BlockMetaData/getCompressedSize()
org/apache/parquet/avro/TestReflectInputOutputFormat/MyMapper/run(org.apache.parquet.hadoop.Context)#org/apache/parquet/avro/TestReflectInputOutputFormat/nextRecord(int)
org/apache/parquet/thrift/ParquetWriteProtocol/StructWriteProtocol/writeFieldEnd()#org/apache/parquet/io/ColumnIO/getName()
org/apache/parquet/thrift/ParquetWriteProtocol/StructWriteProtocol/writeFieldEnd()#org/apache/parquet/io/api/RecordConsumer/endField(java.lang.String,int)
org/apache/parquet/thrift/ParquetWriteProtocol/StructWriteProtocol/writeFieldEnd()#org/apache/parquet/io/ColumnIO/getIndex()
org/apache/parquet/thrift/ParquetWriteProtocol/StructWriteProtocol/writeFieldBegin(org.apache.parquet.thrift.projection.amend.TField)#org/apache/parquet/io/ColumnIO/getName()
org/apache/parquet/thrift/ParquetWriteProtocol/StructWriteProtocol/writeFieldBegin(org.apache.parquet.thrift.projection.amend.TField)#org/apache/parquet/io/api/RecordConsumer/startField(java.lang.String,int)
org/apache/parquet/thrift/ParquetWriteProtocol/StructWriteProtocol/writeFieldBegin(org.apache.parquet.thrift.projection.amend.TField)#org/apache/parquet/io/ColumnIO/getType()
org/apache/parquet/thrift/ParquetWriteProtocol/StructWriteProtocol/writeFieldBegin(org.apache.parquet.thrift.projection.amend.TField)#org/apache/parquet/io/ColumnIO/getIndex()
org/apache/parquet/thrift/ParquetWriteProtocol/StructWriteProtocol/writeFieldBegin(org.apache.parquet.thrift.projection.amend.TField)#org/apache/parquet/io/ParquetEncodingException/ParquetEncodingException(java.lang.String)
org/apache/parquet/thrift/ParquetWriteProtocol/StructWriteProtocol/writeStructEnd()#org/apache/parquet/thrift/ParquetWriteProtocol/FieldBaseWriteProtocol/end()
org/apache/parquet/thrift/ParquetWriteProtocol/StructWriteProtocol/writeStructEnd()#org/apache/parquet/io/api/RecordConsumer/endGroup()
org/apache/parquet/thrift/ParquetWriteProtocol/StructWriteProtocol/writeStructBegin(org.apache.parquet.thrift.TStruct)#org/apache/parquet/thrift/ParquetWriteProtocol/FieldBaseWriteProtocol/start()
org/apache/parquet/thrift/ParquetWriteProtocol/StructWriteProtocol/writeStructBegin(org.apache.parquet.thrift.TStruct)#org/apache/parquet/io/api/RecordConsumer/startGroup()
org/apache/parquet/hadoop/TestMergeMetadataFiles/testThrowsWhenIncompatible()#java/lang/Throwable/getMessage()
org/apache/parquet/hadoop/TestMergeMetadataFiles/testThrowsWhenIncompatible()#java/util/Arrays/asList(T[])
org/apache/parquet/hadoop/TestMergeMetadataFiles/testThrowsWhenIncompatible()#java/io/File/getAbsolutePath()
org/apache/parquet/hadoop/TestMergeMetadataFiles/testThrowsWhenIncompatible()#org/apache/parquet/hadoop/TestMergeMetadataFiles/writeFiles(boolean)
org/apache/parquet/hadoop/TestMergeMetadataFiles/testThrowsWhenIncompatible()#org/apache/parquet/hadoop/ParquetFileWriter/writeMergedMetadataFile(java.util.List,org.apache.parquet.hadoop.Path,org.apache.parquet.hadoop.Configuration)
org/apache/parquet/hadoop/TestMergeMetadataFiles/testThrowsWhenIncompatible()#java/lang/String/equals(java.lang.Object)
org/apache/parquet/hadoop/TestMergeMetadataFiles/testThrowsWhenIncompatible()#java/io/File/File(java.lang.String,java.lang.String)
org/apache/parquet/hadoop/TestMergeMetadataFiles/testMergeMetadataFiles()#org/apache/parquet/hadoop/metadata/ParquetMetadata/getBlocks()
org/apache/parquet/hadoop/TestMergeMetadataFiles/testMergeMetadataFiles()#org/apache/parquet/hadoop/metadata/ParquetMetadata/getFileMetaData()
org/apache/parquet/hadoop/TestMergeMetadataFiles/testMergeMetadataFiles()#java/util/List/isEmpty()
org/apache/parquet/hadoop/TestMergeMetadataFiles/testMergeMetadataFiles()#java/util/List/size()
org/apache/parquet/hadoop/TestMergeMetadataFiles/testMergeMetadataFiles()#java/util/Arrays/asList(T[])
org/apache/parquet/hadoop/TestMergeMetadataFiles/testMergeMetadataFiles()#java/io/File/File(java.lang.String,java.lang.String)
org/apache/parquet/hadoop/TestMergeMetadataFiles/testMergeMetadataFiles()#java/io/File/getAbsolutePath()
org/apache/parquet/hadoop/TestMergeMetadataFiles/testMergeMetadataFiles()#org/apache/parquet/hadoop/metadata/FileMetaData/getSchema()
org/apache/parquet/hadoop/TestMergeMetadataFiles/testMergeMetadataFiles()#org/apache/parquet/hadoop/TestMergeMetadataFiles/writeFiles(boolean)
org/apache/parquet/hadoop/TestMergeMetadataFiles/testMergeMetadataFiles()#org/apache/parquet/hadoop/metadata/FileMetaData/getKeyValueMetaData()
org/apache/parquet/hadoop/TestMergeMetadataFiles/testMergeMetadataFiles()#org/apache/parquet/hadoop/ParquetFileReader/readFooter(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path,org.apache.parquet.format.converter.ParquetMetadataConverter.MetadataFilter)
org/apache/parquet/hadoop/TestMergeMetadataFiles/testMergeMetadataFiles()#org/apache/parquet/hadoop/ParquetFileWriter/writeMergedMetadataFile(java.util.List,org.apache.parquet.hadoop.Path,org.apache.parquet.hadoop.Configuration)
org/apache/parquet/hadoop/TestMergeMetadataFiles/writeFiles(boolean)#org/apache/parquet/hadoop/TestMergeMetadataFiles/WrittenFileInfo/WrittenFileInfo()
org/apache/parquet/hadoop/TestMergeMetadataFiles/writeFiles(boolean)#java/io/File/File(java.io.File,java.lang.String)
org/apache/parquet/hadoop/TestMergeMetadataFiles/writeFiles(boolean)#java/io/File/File(java.lang.String,java.lang.String)
org/apache/parquet/hadoop/TestMergeMetadataFiles/writeFiles(boolean)#org/apache/parquet/hadoop/ParquetFileWriter/writeMetadataFile(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path,java.util.List,org.apache.parquet.hadoop.ParquetOutputFormat.JobSummaryLevel)
org/apache/parquet/hadoop/TestMergeMetadataFiles/writeFiles(boolean)#java/io/File/getAbsolutePath()
org/apache/parquet/hadoop/TestMergeMetadataFiles/writeFiles(boolean)#org/apache/parquet/hadoop/ParquetFileReader/readFooters(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.FileStatus,boolean)
org/apache/parquet/hadoop/TestMergeMetadataFiles/writeFiles(boolean)#org/apache/parquet/hadoop/TestMergeMetadataFiles/writeFile(java.io.File,org.apache.parquet.hadoop.Configuration,boolean)
org/apache/parquet/hadoop/TestMergeMetadataFiles/writeFile(java.io.File,org.apache.parquet.hadoop.Configuration,boolean)#org/apache/parquet/hadoop/example/ExampleParquetWriter/builder(org.apache.parquet.hadoop.Path)
org/apache/parquet/hadoop/TestMergeMetadataFiles/writeFile(java.io.File,org.apache.parquet.hadoop.Configuration,boolean)#org/apache/parquet/example/data/Group/append(java.lang.String,java.lang.String)
org/apache/parquet/hadoop/TestMergeMetadataFiles/writeFile(java.io.File,org.apache.parquet.hadoop.Configuration,boolean)#org/apache/parquet/example/data/Group/append(java.lang.String,int)
org/apache/parquet/hadoop/TestMergeMetadataFiles/writeFile(java.io.File,org.apache.parquet.hadoop.Configuration,boolean)#org/apache/parquet/example/data/simple/SimpleGroupFactory/SimpleGroupFactory(org.apache.parquet.schema.MessageType)
org/apache/parquet/hadoop/TestMergeMetadataFiles/writeFile(java.io.File,org.apache.parquet.hadoop.Configuration,boolean)#org/apache/parquet/hadoop/ParquetWriter/close()
org/apache/parquet/hadoop/TestMergeMetadataFiles/writeFile(java.io.File,org.apache.parquet.hadoop.Configuration,boolean)#java/io/File/getAbsolutePath()
org/apache/parquet/hadoop/TestMergeMetadataFiles/writeFile(java.io.File,org.apache.parquet.hadoop.Configuration,boolean)#org/apache/parquet/hadoop/ParquetWriter/write(T)
org/apache/parquet/hadoop/TestMergeMetadataFiles/writeFile(java.io.File,org.apache.parquet.hadoop.Configuration,boolean)#java/util/Map/put(K,V)
org/apache/parquet/hadoop/TestMergeMetadataFiles/writeFile(java.io.File,org.apache.parquet.hadoop.Configuration,boolean)#org/apache/parquet/example/data/Group/append(java.lang.String,double)
org/apache/parquet/hadoop/TestMergeMetadataFiles/writeFile(java.io.File,org.apache.parquet.hadoop.Configuration,boolean)#org/apache/parquet/example/data/simple/SimpleGroupFactory/newGroup()
org/apache/parquet/hadoop/TestMergeMetadataFiles/writeFile(java.io.File,org.apache.parquet.hadoop.Configuration,boolean)#org/apache/parquet/example/data/Group/append(java.lang.String,float)
org/apache/parquet/hadoop/TestMergeMetadataFiles/writeFile(java.io.File,org.apache.parquet.hadoop.Configuration,boolean)#org/apache/parquet/example/data/Group/append(java.lang.String,org.apache.parquet.io.api.Binary)
org/apache/parquet/hadoop/TestMergeMetadataFiles/writeFile(java.io.File,org.apache.parquet.hadoop.Configuration,boolean)#org/apache/parquet/hadoop/example/GroupWriteSupport/setSchema(org.apache.parquet.schema.MessageType,org.apache.parquet.hadoop.Configuration)
org/apache/parquet/hadoop/TestMergeMetadataFiles/writeFile(java.io.File,org.apache.parquet.hadoop.Configuration,boolean)#java/util/HashMap/HashMap()
org/apache/parquet/hadoop/TestMergeMetadataFiles/writeFile(java.io.File,org.apache.parquet.hadoop.Configuration,boolean)#org/apache/parquet/example/data/Group/append(java.lang.String,long)
org/apache/parquet/hadoop/TestMergeMetadataFiles/writeFile(java.io.File,org.apache.parquet.hadoop.Configuration,boolean)#org/apache/parquet/example/data/Group/append(java.lang.String,boolean)
org/apache/parquet/hadoop/TestMergeMetadataFiles/writeFile(java.io.File,org.apache.parquet.hadoop.Configuration,boolean)#org/apache/parquet/io/api/Binary/fromConstantByteArray(byte[])
org/apache/parquet/thrift/ThriftParquetReader/build(org.apache.parquet.hadoop.Path)#org/apache/parquet/thrift/ThriftParquetReader/Builder/Builder(org.apache.parquet.hadoop.Path)
org/apache/parquet/avro/AvroConverters/FieldStringableConverter/convert(org.apache.parquet.io.api.Binary)#java/lang/reflect/Constructor/newInstance(java.lang.Object[])
org/apache/parquet/avro/AvroConverters/FieldStringableConverter/convert(org.apache.parquet.io.api.Binary)#org/apache/parquet/io/api/Binary/toStringUsingUTF8()
org/apache/parquet/avro/AvroConverters/FieldStringableConverter/convert(org.apache.parquet.io.api.Binary)#org/apache/parquet/io/ParquetDecodingException/ParquetDecodingException(java.lang.String,java.lang.Throwable)
org/apache/parquet/thrift/ThriftRecordConverter/GroupCounter/end()#org/apache/parquet/io/api/GroupConverter/end()
org/apache/parquet/thrift/ThriftRecordConverter/GroupCounter/start()#org/apache/parquet/io/api/GroupConverter/start()
org/apache/parquet/thrift/ThriftRecordConverter/GroupCounter/getConverter(int)#org/apache/parquet/io/api/GroupConverter/getConverter(int)
org/apache/parquet/filter2/recordlevel/TestRecordLevelFilters/StartWithP/keep(org.apache.parquet.io.api.Binary)#org/apache/parquet/io/api/Binary/toStringUsingUTF8()
org/apache/parquet/filter2/recordlevel/TestRecordLevelFilters/StartWithP/keep(org.apache.parquet.io.api.Binary)#java/lang/String/startsWith(java.lang.String)
org/apache/parquet/IOExceptionUtils/closeQuietly(java.io.Closeable)#org/apache/parquet/IOExceptionUtils/closeQuietly(java/io/Closeable)/$anonymous1/(java.lang.String,java.lang.Throwable)
org/apache/parquet/IOExceptionUtils/closeQuietly(java.io.Closeable)#java/io/Closeable/close()
org/apache/parquet/column/statistics/TestStatistics/testMergingBooleanStats()#org/apache/parquet/column/statistics/BooleanStatistics/getMin()
org/apache/parquet/column/statistics/TestStatistics/testMergingBooleanStats()#org/apache/parquet/column/statistics/BooleanStatistics/BooleanStatistics()
org/apache/parquet/column/statistics/TestStatistics/testMergingBooleanStats()#org/apache/parquet/column/statistics/Statistics/mergeStatistics(org.apache.parquet.column.statistics.Statistics)
org/apache/parquet/column/statistics/TestStatistics/testMergingBooleanStats()#org/apache/parquet/column/statistics/BooleanStatistics/getMax()
org/apache/parquet/column/statistics/TestStatistics/testMergingBooleanStats()#org/apache/parquet/column/statistics/BooleanStatistics/updateStats(boolean)
org/apache/parquet/column/statistics/TestStatistics/testFloatMinMax()#org/apache/parquet/column/statistics/FloatStatistics/getMaxBytes()
org/apache/parquet/column/statistics/TestStatistics/testFloatMinMax()#java/nio/ByteBuffer/order(java.nio.ByteOrder)
org/apache/parquet/column/statistics/TestStatistics/testFloatMinMax()#org/apache/parquet/column/statistics/FloatStatistics/updateStats(float)
org/apache/parquet/column/statistics/TestStatistics/testFloatMinMax()#org/apache/parquet/column/statistics/FloatStatistics/getMinBytes()
org/apache/parquet/column/statistics/TestStatistics/testFloatMinMax()#java/nio/ByteBuffer/wrap(byte[])
org/apache/parquet/column/statistics/TestStatistics/testFloatMinMax()#org/apache/parquet/column/statistics/FloatStatistics/toString()
org/apache/parquet/column/statistics/TestStatistics/testFloatMinMax()#org/apache/parquet/column/statistics/FloatStatistics/setMinMaxFromBytes(byte[],byte[])
org/apache/parquet/column/statistics/TestStatistics/testFloatMinMax()#org/apache/parquet/column/statistics/FloatStatistics/getMax()
org/apache/parquet/column/statistics/TestStatistics/testFloatMinMax()#java/nio/ByteBuffer/getFloat()
org/apache/parquet/column/statistics/TestStatistics/testFloatMinMax()#org/apache/parquet/column/statistics/FloatStatistics/FloatStatistics()
org/apache/parquet/column/statistics/TestStatistics/testFloatMinMax()#org/apache/parquet/column/statistics/FloatStatistics/getMin()
org/apache/parquet/column/statistics/TestStatistics/testDoubleMinMax()#org/apache/parquet/column/statistics/DoubleStatistics/getMaxBytes()
org/apache/parquet/column/statistics/TestStatistics/testDoubleMinMax()#java/nio/ByteBuffer/getDouble()
org/apache/parquet/column/statistics/TestStatistics/testDoubleMinMax()#org/apache/parquet/column/statistics/DoubleStatistics/updateStats(double)
org/apache/parquet/column/statistics/TestStatistics/testDoubleMinMax()#java/nio/ByteBuffer/order(java.nio.ByteOrder)
org/apache/parquet/column/statistics/TestStatistics/testDoubleMinMax()#org/apache/parquet/column/statistics/DoubleStatistics/DoubleStatistics()
org/apache/parquet/column/statistics/TestStatistics/testDoubleMinMax()#org/apache/parquet/column/statistics/DoubleStatistics/getMin()
org/apache/parquet/column/statistics/TestStatistics/testDoubleMinMax()#org/apache/parquet/column/statistics/DoubleStatistics/getMinBytes()
org/apache/parquet/column/statistics/TestStatistics/testDoubleMinMax()#java/nio/ByteBuffer/wrap(byte[])
org/apache/parquet/column/statistics/TestStatistics/testDoubleMinMax()#org/apache/parquet/column/statistics/DoubleStatistics/setMinMaxFromBytes(byte[],byte[])
org/apache/parquet/column/statistics/TestStatistics/testDoubleMinMax()#org/apache/parquet/column/statistics/DoubleStatistics/toString()
org/apache/parquet/column/statistics/TestStatistics/testDoubleMinMax()#org/apache/parquet/column/statistics/DoubleStatistics/getMax()
org/apache/parquet/column/statistics/TestStatistics/testNumNulls()#org/apache/parquet/column/statistics/Statistics/setNumNulls(long)
org/apache/parquet/column/statistics/TestStatistics/testNumNulls()#org/apache/parquet/column/statistics/Statistics/incrementNumNulls()
org/apache/parquet/column/statistics/TestStatistics/testNumNulls()#org/apache/parquet/column/statistics/Statistics/incrementNumNulls(long)
org/apache/parquet/column/statistics/TestStatistics/testNumNulls()#org/apache/parquet/column/statistics/Statistics/getNumNulls()
org/apache/parquet/column/statistics/TestStatistics/testNumNulls()#org/apache/parquet/column/statistics/IntStatistics/IntStatistics()
org/apache/parquet/column/statistics/TestStatistics/testBooleanMinMax()#org/apache/parquet/column/statistics/BooleanStatistics/getMin()
org/apache/parquet/column/statistics/TestStatistics/testBooleanMinMax()#org/apache/parquet/column/statistics/BooleanStatistics/getMinBytes()
org/apache/parquet/column/statistics/TestStatistics/testBooleanMinMax()#org/apache/parquet/column/statistics/BooleanStatistics/BooleanStatistics()
org/apache/parquet/column/statistics/TestStatistics/testBooleanMinMax()#org/apache/parquet/column/statistics/BooleanStatistics/setMinMaxFromBytes(byte[],byte[])
org/apache/parquet/column/statistics/TestStatistics/testBooleanMinMax()#org/apache/parquet/column/statistics/BooleanStatistics/getMaxBytes()
org/apache/parquet/column/statistics/TestStatistics/testBooleanMinMax()#org/apache/parquet/column/statistics/BooleanStatistics/toString()
org/apache/parquet/column/statistics/TestStatistics/testBooleanMinMax()#org/apache/parquet/column/statistics/BooleanStatistics/getMax()
org/apache/parquet/column/statistics/TestStatistics/testBooleanMinMax()#org/apache/parquet/column/statistics/BooleanStatistics/updateStats(boolean)
org/apache/parquet/column/statistics/TestStatistics/testMergingIntStats()#org/apache/parquet/column/statistics/IntStatistics/updateStats(int)
org/apache/parquet/column/statistics/TestStatistics/testMergingIntStats()#org/apache/parquet/column/statistics/IntStatistics/getMax()
org/apache/parquet/column/statistics/TestStatistics/testMergingIntStats()#org/apache/parquet/column/statistics/Statistics/mergeStatistics(org.apache.parquet.column.statistics.Statistics)
org/apache/parquet/column/statistics/TestStatistics/testMergingIntStats()#org/apache/parquet/column/statistics/IntStatistics/IntStatistics()
org/apache/parquet/column/statistics/TestStatistics/testMergingIntStats()#org/apache/parquet/column/statistics/IntStatistics/getMin()
org/apache/parquet/column/statistics/TestStatistics/testMergingFloatStats()#org/apache/parquet/column/statistics/FloatStatistics/updateStats(float)
org/apache/parquet/column/statistics/TestStatistics/testMergingFloatStats()#org/apache/parquet/column/statistics/Statistics/mergeStatistics(org.apache.parquet.column.statistics.Statistics)
org/apache/parquet/column/statistics/TestStatistics/testMergingFloatStats()#org/apache/parquet/column/statistics/FloatStatistics/getMax()
org/apache/parquet/column/statistics/TestStatistics/testMergingFloatStats()#org/apache/parquet/column/statistics/FloatStatistics/FloatStatistics()
org/apache/parquet/column/statistics/TestStatistics/testMergingFloatStats()#org/apache/parquet/column/statistics/FloatStatistics/getMin()
org/apache/parquet/column/statistics/TestStatistics/testMergingStatistics()#org/apache/parquet/column/statistics/TestStatistics/testMergingBooleanStats()
org/apache/parquet/column/statistics/TestStatistics/testMergingStatistics()#org/apache/parquet/column/statistics/TestStatistics/testMergingFloatStats()
org/apache/parquet/column/statistics/TestStatistics/testMergingStatistics()#org/apache/parquet/column/statistics/TestStatistics/testMergingLongStats()
org/apache/parquet/column/statistics/TestStatistics/testMergingStatistics()#org/apache/parquet/column/statistics/TestStatistics/testMergingIntStats()
org/apache/parquet/column/statistics/TestStatistics/testMergingStatistics()#org/apache/parquet/column/statistics/TestStatistics/testMergingStringStats()
org/apache/parquet/column/statistics/TestStatistics/testMergingStatistics()#org/apache/parquet/column/statistics/TestStatistics/testMergingDoubleStats()
org/apache/parquet/column/statistics/TestStatistics/testMergingLongStats()#org/apache/parquet/column/statistics/LongStatistics/getMin()
org/apache/parquet/column/statistics/TestStatistics/testMergingLongStats()#org/apache/parquet/column/statistics/LongStatistics/updateStats(long)
org/apache/parquet/column/statistics/TestStatistics/testMergingLongStats()#org/apache/parquet/column/statistics/LongStatistics/LongStatistics()
org/apache/parquet/column/statistics/TestStatistics/testMergingLongStats()#org/apache/parquet/column/statistics/Statistics/mergeStatistics(org.apache.parquet.column.statistics.Statistics)
org/apache/parquet/column/statistics/TestStatistics/testMergingLongStats()#org/apache/parquet/column/statistics/LongStatistics/getMax()
org/apache/parquet/column/statistics/TestStatistics/testLongMinMax()#org/apache/parquet/column/statistics/LongStatistics/getMin()
org/apache/parquet/column/statistics/TestStatistics/testLongMinMax()#org/apache/parquet/column/statistics/LongStatistics/setMinMaxFromBytes(byte[],byte[])
org/apache/parquet/column/statistics/TestStatistics/testLongMinMax()#org/apache/parquet/column/statistics/LongStatistics/updateStats(long)
org/apache/parquet/column/statistics/TestStatistics/testLongMinMax()#java/nio/ByteBuffer/order(java.nio.ByteOrder)
org/apache/parquet/column/statistics/TestStatistics/testLongMinMax()#org/apache/parquet/column/statistics/LongStatistics/LongStatistics()
org/apache/parquet/column/statistics/TestStatistics/testLongMinMax()#org/apache/parquet/column/statistics/LongStatistics/getMaxBytes()
org/apache/parquet/column/statistics/TestStatistics/testLongMinMax()#java/nio/ByteBuffer/getLong()
org/apache/parquet/column/statistics/TestStatistics/testLongMinMax()#org/apache/parquet/column/statistics/LongStatistics/toString()
org/apache/parquet/column/statistics/TestStatistics/testLongMinMax()#org/apache/parquet/column/statistics/LongStatistics/getMax()
org/apache/parquet/column/statistics/TestStatistics/testLongMinMax()#java/nio/ByteBuffer/wrap(byte[])
org/apache/parquet/column/statistics/TestStatistics/testLongMinMax()#org/apache/parquet/column/statistics/LongStatistics/getMinBytes()
org/apache/parquet/column/statistics/TestStatistics/testBinaryMinMaxForReusedBackingByteArray()#org/apache/parquet/column/statistics/BinaryStatistics/getMinBytes()
org/apache/parquet/column/statistics/TestStatistics/testBinaryMinMaxForReusedBackingByteArray()#org/apache/parquet/io/api/Binary/fromReusedByteArray(byte[])
org/apache/parquet/column/statistics/TestStatistics/testBinaryMinMaxForReusedBackingByteArray()#org/apache/parquet/column/statistics/BinaryStatistics/BinaryStatistics()
org/apache/parquet/column/statistics/TestStatistics/testBinaryMinMaxForReusedBackingByteArray()#org/apache/parquet/column/statistics/BinaryStatistics/getMaxBytes()
org/apache/parquet/column/statistics/TestStatistics/testBinaryMinMaxForReusedBackingByteArray()#org/apache/parquet/column/statistics/BinaryStatistics/updateStats(org.apache.parquet.io.api.Binary)
org/apache/parquet/column/statistics/TestStatistics/testBinaryMinMax()#org/apache/parquet/column/statistics/BinaryStatistics/getMinBytes()
org/apache/parquet/column/statistics/TestStatistics/testBinaryMinMax()#org/apache/parquet/column/statistics/BinaryStatistics/toString()
org/apache/parquet/column/statistics/TestStatistics/testBinaryMinMax()#org/apache/parquet/column/statistics/BinaryStatistics/getMax()
org/apache/parquet/column/statistics/TestStatistics/testBinaryMinMax()#org/apache/parquet/column/statistics/BinaryStatistics/getMaxBytes()
org/apache/parquet/column/statistics/TestStatistics/testBinaryMinMax()#org/apache/parquet/io/api/Binary/fromString(java.lang.String)
org/apache/parquet/column/statistics/TestStatistics/testBinaryMinMax()#java/lang/String/String(byte[])
org/apache/parquet/column/statistics/TestStatistics/testBinaryMinMax()#org/apache/parquet/column/statistics/BinaryStatistics/getMin()
org/apache/parquet/column/statistics/TestStatistics/testBinaryMinMax()#org/apache/parquet/column/statistics/BinaryStatistics/updateStats(org.apache.parquet.io.api.Binary)
org/apache/parquet/column/statistics/TestStatistics/testBinaryMinMax()#org/apache/parquet/column/statistics/BinaryStatistics/BinaryStatistics()
org/apache/parquet/column/statistics/TestStatistics/testBinaryMinMax()#org/apache/parquet/column/statistics/BinaryStatistics/setMinMaxFromBytes(byte[],byte[])
org/apache/parquet/column/statistics/TestStatistics/testIntMinMax()#org/apache/parquet/column/statistics/IntStatistics/toString()
org/apache/parquet/column/statistics/TestStatistics/testIntMinMax()#org/apache/parquet/column/statistics/IntStatistics/setMinMaxFromBytes(byte[],byte[])
org/apache/parquet/column/statistics/TestStatistics/testIntMinMax()#org/apache/parquet/column/statistics/IntStatistics/getMaxBytes()
org/apache/parquet/column/statistics/TestStatistics/testIntMinMax()#org/apache/parquet/column/statistics/IntStatistics/getMinBytes()
org/apache/parquet/column/statistics/TestStatistics/testIntMinMax()#org/apache/parquet/column/statistics/IntStatistics/updateStats(int)
org/apache/parquet/column/statistics/TestStatistics/testIntMinMax()#org/apache/parquet/column/statistics/IntStatistics/getMax()
org/apache/parquet/column/statistics/TestStatistics/testIntMinMax()#java/nio/ByteBuffer/order(java.nio.ByteOrder)
org/apache/parquet/column/statistics/TestStatistics/testIntMinMax()#java/nio/ByteBuffer/getInt()
org/apache/parquet/column/statistics/TestStatistics/testIntMinMax()#org/apache/parquet/column/statistics/IntStatistics/IntStatistics()
org/apache/parquet/column/statistics/TestStatistics/testIntMinMax()#java/nio/ByteBuffer/wrap(byte[])
org/apache/parquet/column/statistics/TestStatistics/testIntMinMax()#org/apache/parquet/column/statistics/IntStatistics/getMin()
org/apache/parquet/column/statistics/TestStatistics/testMergingStringStats()#org/apache/parquet/column/statistics/BinaryStatistics/BinaryStatistics()
org/apache/parquet/column/statistics/TestStatistics/testMergingStringStats()#org/apache/parquet/column/statistics/BinaryStatistics/getMax()
org/apache/parquet/column/statistics/TestStatistics/testMergingStringStats()#org/apache/parquet/column/statistics/Statistics/mergeStatistics(org.apache.parquet.column.statistics.Statistics)
org/apache/parquet/column/statistics/TestStatistics/testMergingStringStats()#org/apache/parquet/io/api/Binary/fromString(java.lang.String)
org/apache/parquet/column/statistics/TestStatistics/testMergingStringStats()#org/apache/parquet/column/statistics/BinaryStatistics/getMin()
org/apache/parquet/column/statistics/TestStatistics/testMergingStringStats()#org/apache/parquet/column/statistics/BinaryStatistics/updateStats(org.apache.parquet.io.api.Binary)
org/apache/parquet/column/statistics/TestStatistics/testMergingDoubleStats()#org/apache/parquet/column/statistics/DoubleStatistics/updateStats(double)
org/apache/parquet/column/statistics/TestStatistics/testMergingDoubleStats()#org/apache/parquet/column/statistics/DoubleStatistics/DoubleStatistics()
org/apache/parquet/column/statistics/TestStatistics/testMergingDoubleStats()#org/apache/parquet/column/statistics/DoubleStatistics/getMin()
org/apache/parquet/column/statistics/TestStatistics/testMergingDoubleStats()#org/apache/parquet/column/statistics/Statistics/mergeStatistics(org.apache.parquet.column.statistics.Statistics)
org/apache/parquet/column/statistics/TestStatistics/testMergingDoubleStats()#org/apache/parquet/column/statistics/DoubleStatistics/getMax()
org/apache/parquet/column/values/bitpacking/BytePacker/unpack32Values(byte[],int,int[],int)#org/apache/parquet/column/values/bitpacking/BytePacker/unpack32Values(java.nio.ByteBuffer,int,int[],int)
org/apache/parquet/column/values/bitpacking/BytePacker/unpack32Values(byte[],int,int[],int)#java/nio/ByteBuffer/wrap(byte[])
org/apache/parquet/column/values/bitpacking/BytePacker/unpack8Values(byte[],int,int[],int)#java/nio/ByteBuffer/wrap(byte[])
org/apache/parquet/column/values/bitpacking/BytePacker/unpack8Values(byte[],int,int[],int)#org/apache/parquet/column/values/bitpacking/BytePacker/unpack8Values(java.nio.ByteBuffer,int,int[],int)
org/apache/parquet/hadoop/ParquetFileReader/filterRowGroups(org.apache.parquet.filter2.compat.FilterCompat.Filter)#java/util/ArrayList/ArrayList()
org/apache/parquet/hadoop/ParquetFileReader/filterRowGroups(org.apache.parquet.filter2.compat.FilterCompat.Filter)#java/util/List/add(E)
org/apache/parquet/hadoop/ParquetFileReader/filterRowGroups(org.apache.parquet.filter2.compat.FilterCompat.Filter)#org/apache/parquet/filter2/compat/RowGroupFilter/filterRowGroups(java.util.List,org.apache.parquet.filter2.compat.FilterCompat.Filter,java.util.List,org.apache.parquet.hadoop.ParquetFileReader)
org/apache/parquet/hadoop/ParquetFileReader/getFileMetaData()#org/apache/parquet/hadoop/metadata/ParquetMetadata/getFileMetaData()
org/apache/parquet/hadoop/ParquetFileReader/getFileMetaData()#org/apache/parquet/hadoop/ParquetFileReader/getFooter()
org/apache/parquet/hadoop/ParquetFileReader/readAllFootersInParallel(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.FileStatus)#org/apache/parquet/hadoop/ParquetFileReader/readAllFootersInParallel(org.apache.parquet.hadoop.Configuration,java.util.List,boolean)
org/apache/parquet/hadoop/ParquetFileReader/open(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path,org.apache.parquet.format.converter.ParquetMetadataConverter.MetadataFilter)#org/apache/parquet/hadoop/ParquetFileReader/ParquetFileReader(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path,org.apache.parquet.format.converter.ParquetMetadataConverter.MetadataFilter)
org/apache/parquet/hadoop/ParquetFileReader/getDictionaryReader(org.apache.parquet.hadoop.metadata.BlockMetaData)#org/apache/parquet/hadoop/DictionaryPageReader/DictionaryPageReader(org.apache.parquet.hadoop.ParquetFileReader,org.apache.parquet.hadoop.metadata.BlockMetaData)
org/apache/parquet/hadoop/ParquetFileReader/readFooter(org.apache.parquet.io.InputFile,org.apache.parquet.format.converter.ParquetMetadataConverter.MetadataFilter)#java/lang/Object/toString()
org/apache/parquet/hadoop/ParquetFileReader/readFooter(org.apache.parquet.io.InputFile,org.apache.parquet.format.converter.ParquetMetadataConverter.MetadataFilter)#org/apache/parquet/io/InputFile/getLength()
org/apache/parquet/hadoop/ParquetFileReader/readFooter(org.apache.parquet.io.InputFile,org.apache.parquet.format.converter.ParquetMetadataConverter.MetadataFilter)#org/apache/parquet/hadoop/ParquetFileReader/readFooter(org.apache.parquet.format.converter.ParquetMetadataConverter,long,java.lang.String,org.apache.parquet.io.SeekableInputStream,org.apache.parquet.format.converter.ParquetMetadataConverter.MetadataFilter)
org/apache/parquet/hadoop/ParquetFileReader/readFooter(org.apache.parquet.io.InputFile,org.apache.parquet.format.converter.ParquetMetadataConverter.MetadataFilter)#org/apache/parquet/format/converter/ParquetMetadataConverter/ParquetMetadataConverter()
org/apache/parquet/hadoop/ParquetFileReader/readFooter(org.apache.parquet.io.InputFile,org.apache.parquet.format.converter.ParquetMetadataConverter.MetadataFilter)#org/apache/parquet/hadoop/util/HadoopInputFile/getConfiguration()
org/apache/parquet/hadoop/ParquetFileReader/readFooter(org.apache.parquet.io.InputFile,org.apache.parquet.format.converter.ParquetMetadataConverter.MetadataFilter)#org/apache/parquet/format/converter/ParquetMetadataConverter/ParquetMetadataConverter(org.apache.parquet.hadoop.Configuration)
org/apache/parquet/hadoop/ParquetFileReader/readFooter(org.apache.parquet.io.InputFile,org.apache.parquet.format.converter.ParquetMetadataConverter.MetadataFilter)#org/apache/parquet/io/InputFile/newStream()
org/apache/parquet/hadoop/ParquetFileReader/skipNextRowGroup()#org/apache/parquet/hadoop/ParquetFileReader/advanceToNextBlock()
org/apache/parquet/hadoop/ParquetFileReader/setRequestedSchema(org.apache.parquet.schema.MessageType)#org/apache/parquet/schema/MessageType/getColumns()
org/apache/parquet/hadoop/ParquetFileReader/setRequestedSchema(org.apache.parquet.schema.MessageType)#org/apache/parquet/column/ColumnDescriptor/getPath()
org/apache/parquet/hadoop/ParquetFileReader/setRequestedSchema(org.apache.parquet.schema.MessageType)#java/util/Map/clear()
org/apache/parquet/hadoop/ParquetFileReader/setRequestedSchema(org.apache.parquet.schema.MessageType)#java/util/Map/put(K,V)
org/apache/parquet/hadoop/ParquetFileReader/setRequestedSchema(org.apache.parquet.schema.MessageType)#org/apache/parquet/hadoop/metadata/ColumnPath/get(java.lang.String[])
org/apache/parquet/hadoop/ParquetFileReader/getNextDictionaryReader()#org/apache/parquet/hadoop/ParquetFileReader/getDictionaryReader(org.apache.parquet.hadoop.metadata.BlockMetaData)
org/apache/parquet/hadoop/ParquetFileReader/getNextDictionaryReader()#java/util/List/size()
org/apache/parquet/hadoop/ParquetFileReader/getNextDictionaryReader()#java/util/List/get(int)
org/apache/parquet/hadoop/ParquetFileReader/listFiles(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.FileStatus)#java/util/ArrayList/ArrayList()
org/apache/parquet/hadoop/ParquetFileReader/listFiles(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.FileStatus)#org/apache/parquet/hadoop/ParquetFileReader/listFiles(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.FileStatus)
org/apache/parquet/hadoop/ParquetFileReader/listFiles(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.FileStatus)#java/util/Arrays/asList(T[])
org/apache/parquet/hadoop/ParquetFileReader/readFooter(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.FileStatus)#org/apache/parquet/hadoop/ParquetFileReader/readFooter(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path,org.apache.parquet.format.converter.ParquetMetadataConverter.MetadataFilter)
org/apache/parquet/hadoop/ParquetFileReader/advanceToNextBlock()#java/util/List/size()
org/apache/parquet/hadoop/ParquetFileReader/footersFromSummaryFile(org.apache.parquet.hadoop.Path,org.apache.parquet.hadoop.metadata.ParquetMetadata)#java/util/ArrayList/ArrayList()
org/apache/parquet/hadoop/ParquetFileReader/footersFromSummaryFile(org.apache.parquet.hadoop.Path,org.apache.parquet.hadoop.metadata.ParquetMetadata)#org/apache/parquet/hadoop/metadata/ParquetMetadata/getBlocks()
org/apache/parquet/hadoop/ParquetFileReader/footersFromSummaryFile(org.apache.parquet.hadoop.Path,org.apache.parquet.hadoop.metadata.ParquetMetadata)#org/apache/parquet/hadoop/metadata/ParquetMetadata/getFileMetaData()
org/apache/parquet/hadoop/ParquetFileReader/footersFromSummaryFile(org.apache.parquet.hadoop.Path,org.apache.parquet.hadoop.metadata.ParquetMetadata)#java/util/List/add(E)
org/apache/parquet/hadoop/ParquetFileReader/footersFromSummaryFile(org.apache.parquet.hadoop.Path,org.apache.parquet.hadoop.metadata.ParquetMetadata)#org/apache/parquet/hadoop/metadata/ParquetMetadata/ParquetMetadata(org.apache.parquet.hadoop.metadata.FileMetaData,java.util.List)
org/apache/parquet/hadoop/ParquetFileReader/footersFromSummaryFile(org.apache.parquet.hadoop.Path,org.apache.parquet.hadoop.metadata.ParquetMetadata)#org/apache/parquet/hadoop/metadata/BlockMetaData/getPath()
org/apache/parquet/hadoop/ParquetFileReader/footersFromSummaryFile(org.apache.parquet.hadoop.Path,org.apache.parquet.hadoop.metadata.ParquetMetadata)#java/lang/Object/Object()
org/apache/parquet/hadoop/ParquetFileReader/footersFromSummaryFile(org.apache.parquet.hadoop.Path,org.apache.parquet.hadoop.metadata.ParquetMetadata)#java/util/HashMap/HashMap()
org/apache/parquet/hadoop/ParquetFileReader/footersFromSummaryFile(org.apache.parquet.hadoop.Path,org.apache.parquet.hadoop.metadata.ParquetMetadata)#org/apache/parquet/hadoop/Footer/Footer(org.apache.parquet.hadoop.Path,org.apache.parquet.hadoop.metadata.ParquetMetadata)
org/apache/parquet/hadoop/ParquetFileReader/open(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path)#org/apache/parquet/hadoop/ParquetFileReader/ParquetFileReader(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path)
org/apache/parquet/hadoop/ParquetFileReader/open(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path,org.apache.parquet.hadoop.metadata.ParquetMetadata)#org/apache/parquet/hadoop/ParquetFileReader/ParquetFileReader(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path,org.apache.parquet.hadoop.metadata.ParquetMetadata)
org/apache/parquet/hadoop/ParquetFileReader/readFooter(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path)#org/apache/parquet/hadoop/ParquetFileReader/readFooter(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path,org.apache.parquet.format.converter.ParquetMetadataConverter.MetadataFilter)
org/apache/parquet/hadoop/ParquetFileReader/readFooters(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.FileStatus)#org/apache/parquet/hadoop/ParquetFileReader/readFooters(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.FileStatus,boolean)
org/apache/parquet/hadoop/ParquetFileReader/readFooter(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.FileStatus,org.apache.parquet.format.converter.ParquetMetadataConverter.MetadataFilter)#org/apache/parquet/hadoop/ParquetFileReader/readFooter(org.apache.parquet.io.InputFile,org.apache.parquet.format.converter.ParquetMetadataConverter.MetadataFilter)
org/apache/parquet/hadoop/ParquetFileReader/readFooter(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.FileStatus,org.apache.parquet.format.converter.ParquetMetadataConverter.MetadataFilter)#org/apache/parquet/hadoop/util/HadoopInputFile/fromStatus(org.apache.parquet.hadoop.FileStatus,org.apache.parquet.hadoop.Configuration)
org/apache/parquet/hadoop/ParquetFileReader/readAllFootersInParallelUsingSummaryFiles(org.apache.parquet.hadoop.Configuration,java.util.List)#org/apache/parquet/hadoop/ParquetFileReader/readAllFootersInParallelUsingSummaryFiles(org.apache.parquet.hadoop.Configuration,java.util.Collection,boolean)
org/apache/parquet/hadoop/ParquetFileReader/runAllInParallel(int,java.util.List)#java/util/ArrayList/ArrayList()
org/apache/parquet/hadoop/ParquetFileReader/runAllInParallel(int,java.util.List)#java/util/ArrayList/ArrayList(int)
org/apache/parquet/hadoop/ParquetFileReader/runAllInParallel(int,java.util.List)#java/util/List/size()
org/apache/parquet/hadoop/ParquetFileReader/runAllInParallel(int,java.util.List)#java/util/concurrent/ExecutorService/shutdownNow()
org/apache/parquet/hadoop/ParquetFileReader/runAllInParallel(int,java.util.List)#java/util/List/add(E)
org/apache/parquet/hadoop/ParquetFileReader/runAllInParallel(int,java.util.List)#java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)
org/apache/parquet/hadoop/ParquetFileReader/runAllInParallel(int,java.util.List)#java/util/concurrent/Executors/newFixedThreadPool(int)
org/apache/parquet/hadoop/ParquetFileReader/runAllInParallel(int,java.util.List)#java/util/concurrent/Future/get()
org/apache/parquet/hadoop/ParquetFileReader/runAllInParallel(int,java.util.List)#java/util/concurrent/ExecutorService/submit(java.util.concurrent.Callable)
org/apache/parquet/hadoop/ParquetFileReader/readAllFootersInParallel(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.FileStatus,boolean)#org/apache/parquet/hadoop/ParquetFileReader/listFiles(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.FileStatus)
org/apache/parquet/hadoop/ParquetFileReader/readAllFootersInParallel(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.FileStatus,boolean)#org/apache/parquet/hadoop/ParquetFileReader/readAllFootersInParallel(org.apache.parquet.hadoop.Configuration,java.util.List,boolean)
org/apache/parquet/hadoop/ParquetFileReader/readFooters(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.FileStatus,boolean)#org/apache/parquet/hadoop/ParquetFileReader/listFiles(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.FileStatus)
org/apache/parquet/hadoop/ParquetFileReader/readFooters(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.FileStatus,boolean)#org/apache/parquet/hadoop/ParquetFileReader/readAllFootersInParallelUsingSummaryFiles(org.apache.parquet.hadoop.Configuration,java.util.Collection,boolean)
org/apache/parquet/hadoop/ParquetFileReader/getRecordCount()#org/apache/parquet/hadoop/metadata/BlockMetaData/getRowCount()
org/apache/parquet/hadoop/ParquetFileReader/readCompressedDictionary(org.apache.parquet.format.converter.PageHeader,org.apache.parquet.io.SeekableInputStream)#org/apache/parquet/column/page/DictionaryPage/DictionaryPage(org.apache.parquet.bytes.BytesInput,int,int,org.apache.parquet.column.Encoding)
org/apache/parquet/hadoop/ParquetFileReader/readCompressedDictionary(org.apache.parquet.format.converter.PageHeader,org.apache.parquet.io.SeekableInputStream)#org/apache/parquet/bytes/BytesInput/from(byte[])
org/apache/parquet/hadoop/ParquetFileReader/readCompressedDictionary(org.apache.parquet.format.converter.PageHeader,org.apache.parquet.io.SeekableInputStream)#org/apache/parquet/io/SeekableInputStream/readFully(byte[])
org/apache/parquet/hadoop/ParquetFileReader/readCompressedDictionary(org.apache.parquet.format.converter.PageHeader,org.apache.parquet.io.SeekableInputStream)#org/apache/parquet/format/converter/ParquetMetadataConverter/getEncoding(org.apache.parquet.format.converter.Encoding)
org/apache/parquet/hadoop/ParquetFileReader/getFooter()#org/apache/parquet/io/ParquetDecodingException/ParquetDecodingException(java.lang.String,java.lang.Throwable)
org/apache/parquet/hadoop/ParquetFileReader/getFooter()#org/apache/parquet/hadoop/ParquetFileReader/readFooter(org.apache.parquet.format.converter.ParquetMetadataConverter,long,java.lang.String,org.apache.parquet.io.SeekableInputStream,org.apache.parquet.format.converter.ParquetMetadataConverter.MetadataFilter)
org/apache/parquet/hadoop/ParquetFileReader/appendTo(org.apache.parquet.hadoop.ParquetFileWriter)#org/apache/parquet/hadoop/ParquetFileWriter/appendRowGroups(org.apache.parquet.io.SeekableInputStream,java.util.List,boolean)
org/apache/parquet/hadoop/ParquetFileReader/readAllFootersInParallelUsingSummaryFiles(org.apache.parquet.hadoop.Configuration,java.util.Collection,boolean)#java/util/ArrayList/ArrayList()
org/apache/parquet/hadoop/ParquetFileReader/readAllFootersInParallelUsingSummaryFiles(org.apache.parquet.hadoop.Configuration,java.util.Collection,boolean)#java/util/ArrayList/ArrayList(java.util.Collection)
org/apache/parquet/hadoop/ParquetFileReader/readAllFootersInParallelUsingSummaryFiles(org.apache.parquet.hadoop.Configuration,java.util.Collection,boolean)#java/io/IOException/IOException(java.lang.String,java.lang.Throwable)
org/apache/parquet/hadoop/ParquetFileReader/readAllFootersInParallelUsingSummaryFiles(org.apache.parquet.hadoop.Configuration,java.util.Collection,boolean)#java/util/List/addAll(java.util.Collection)
org/apache/parquet/hadoop/ParquetFileReader/readAllFootersInParallelUsingSummaryFiles(org.apache.parquet.hadoop.Configuration,java.util.Collection,boolean)#java/util/HashMap/HashMap()
org/apache/parquet/hadoop/ParquetFileReader/readAllFootersInParallelUsingSummaryFiles(org.apache.parquet.hadoop.Configuration,java.util.Collection,boolean)#org/apache/parquet/hadoop/ParquetFileReader/runAllInParallel(int,java.util.List)
org/apache/parquet/hadoop/ParquetFileReader/readAllFootersInParallelUsingSummaryFiles(org.apache.parquet.hadoop.Configuration,java.util.Collection,boolean)#java/util/List/add(E)
org/apache/parquet/hadoop/ParquetFileReader/readAllFootersInParallelUsingSummaryFiles(org.apache.parquet.hadoop.Configuration,java.util.Collection,boolean)#org/apache/parquet/hadoop/ParquetFileReader/readAllFootersInParallelUsingSummaryFiles(org/apache/parquet/hadoop/Configuration,java/util/Collection,boolean)/$anonymous1/()
org/apache/parquet/hadoop/ParquetFileReader/readAllFootersInParallelUsingSummaryFiles(org.apache.parquet.hadoop.Configuration,java.util.Collection,boolean)#java/util/HashSet/HashSet()
org/apache/parquet/hadoop/ParquetFileReader/readAllFootersInParallelUsingSummaryFiles(org.apache.parquet.hadoop.Configuration,java.util.Collection,boolean)#org/apache/parquet/hadoop/ParquetFileReader/readAllFootersInParallel(org.apache.parquet.hadoop.Configuration,java.util.List,boolean)
org/apache/parquet/hadoop/ParquetFileReader/readFooter(org.apache.parquet.format.converter.ParquetMetadataConverter,long,java.lang.String,org.apache.parquet.io.SeekableInputStream,org.apache.parquet.format.converter.ParquetMetadataConverter.MetadataFilter)#org/apache/parquet/io/SeekableInputStream/seek(long)
org/apache/parquet/hadoop/ParquetFileReader/readFooter(org.apache.parquet.format.converter.ParquetMetadataConverter,long,java.lang.String,org.apache.parquet.io.SeekableInputStream,org.apache.parquet.format.converter.ParquetMetadataConverter.MetadataFilter)#org/apache/parquet/bytes/BytesUtils/readIntLittleEndian(java.io.InputStream)
org/apache/parquet/hadoop/ParquetFileReader/readFooter(org.apache.parquet.format.converter.ParquetMetadataConverter,long,java.lang.String,org.apache.parquet.io.SeekableInputStream,org.apache.parquet.format.converter.ParquetMetadataConverter.MetadataFilter)#java/util/Arrays/equals(byte[],byte[])
org/apache/parquet/hadoop/ParquetFileReader/readFooter(org.apache.parquet.format.converter.ParquetMetadataConverter,long,java.lang.String,org.apache.parquet.io.SeekableInputStream,org.apache.parquet.format.converter.ParquetMetadataConverter.MetadataFilter)#java/util/Arrays/toString(byte[])
org/apache/parquet/hadoop/ParquetFileReader/readFooter(org.apache.parquet.format.converter.ParquetMetadataConverter,long,java.lang.String,org.apache.parquet.io.SeekableInputStream,org.apache.parquet.format.converter.ParquetMetadataConverter.MetadataFilter)#org/apache/parquet/format/converter/ParquetMetadataConverter/readParquetMetadata(java.io.InputStream,org.apache.parquet.format.converter.ParquetMetadataConverter.MetadataFilter)
org/apache/parquet/hadoop/ParquetFileReader/readFooter(org.apache.parquet.format.converter.ParquetMetadataConverter,long,java.lang.String,org.apache.parquet.io.SeekableInputStream,org.apache.parquet.format.converter.ParquetMetadataConverter.MetadataFilter)#org/apache/parquet/io/SeekableInputStream/readFully(byte[])
org/apache/parquet/hadoop/ParquetFileReader/readFooter(org.apache.parquet.format.converter.ParquetMetadataConverter,long,java.lang.String,org.apache.parquet.io.SeekableInputStream,org.apache.parquet.format.converter.ParquetMetadataConverter.MetadataFilter)#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/apache/parquet/hadoop/ParquetFileReader/readDictionary(org.apache.parquet.hadoop.metadata.ColumnChunkMetaData)#org/apache/parquet/column/page/DictionaryPage/getBytes()
org/apache/parquet/hadoop/ParquetFileReader/readDictionary(org.apache.parquet.hadoop.metadata.ColumnChunkMetaData)#org/apache/parquet/column/page/DictionaryPage/DictionaryPage(org.apache.parquet.bytes.BytesInput,int,org.apache.parquet.column.Encoding)
org/apache/parquet/hadoop/ParquetFileReader/readDictionary(org.apache.parquet.hadoop.metadata.ColumnChunkMetaData)#org/apache/parquet/io/SeekableInputStream/getPos()
org/apache/parquet/hadoop/ParquetFileReader/readDictionary(org.apache.parquet.hadoop.metadata.ColumnChunkMetaData)#org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/getStartingPos()
org/apache/parquet/hadoop/ParquetFileReader/readDictionary(org.apache.parquet.hadoop.metadata.ColumnChunkMetaData)#org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/getCodec()
org/apache/parquet/hadoop/ParquetFileReader/readDictionary(org.apache.parquet.hadoop.metadata.ColumnChunkMetaData)#org/apache/parquet/hadoop/CodecFactory/getDecompressor(org.apache.parquet.hadoop.metadata.CompressionCodecName)
org/apache/parquet/hadoop/ParquetFileReader/readDictionary(org.apache.parquet.hadoop.metadata.ColumnChunkMetaData)#org/apache/parquet/hadoop/CodecFactory/BytesDecompressor/decompress(org.apache.parquet.bytes.BytesInput,int)
org/apache/parquet/hadoop/ParquetFileReader/readDictionary(org.apache.parquet.hadoop.metadata.ColumnChunkMetaData)#org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/getEncodings()
org/apache/parquet/hadoop/ParquetFileReader/readDictionary(org.apache.parquet.hadoop.metadata.ColumnChunkMetaData)#org/apache/parquet/io/SeekableInputStream/seek(long)
org/apache/parquet/hadoop/ParquetFileReader/readDictionary(org.apache.parquet.hadoop.metadata.ColumnChunkMetaData)#org/apache/parquet/column/page/Page/getUncompressedSize()
org/apache/parquet/hadoop/ParquetFileReader/readDictionary(org.apache.parquet.hadoop.metadata.ColumnChunkMetaData)#org/apache/parquet/column/page/DictionaryPage/getEncoding()
org/apache/parquet/hadoop/ParquetFileReader/readDictionary(org.apache.parquet.hadoop.metadata.ColumnChunkMetaData)#java/util/Set/contains(java.lang.Object)
org/apache/parquet/hadoop/ParquetFileReader/readDictionary(org.apache.parquet.hadoop.metadata.ColumnChunkMetaData)#org/apache/parquet/column/page/DictionaryPage/getDictionarySize()
org/apache/parquet/hadoop/ParquetFileReader/readDictionary(org.apache.parquet.hadoop.metadata.ColumnChunkMetaData)#org/apache/parquet/hadoop/ParquetFileReader/readCompressedDictionary(org.apache.parquet.format.converter.PageHeader,org.apache.parquet.io.SeekableInputStream)
org/apache/parquet/hadoop/ParquetFileReader/readAllFootersInParallel(org.apache.parquet.hadoop.Configuration,java.util.List)#org/apache/parquet/hadoop/ParquetFileReader/readAllFootersInParallel(org.apache.parquet.hadoop.Configuration,java.util.List,boolean)
org/apache/parquet/hadoop/ParquetFileReader/readFooter(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path,org.apache.parquet.format.converter.ParquetMetadataConverter.MetadataFilter)#org/apache/parquet/hadoop/ParquetFileReader/readFooter(org.apache.parquet.io.InputFile,org.apache.parquet.format.converter.ParquetMetadataConverter.MetadataFilter)
org/apache/parquet/hadoop/ParquetFileReader/readFooter(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path,org.apache.parquet.format.converter.ParquetMetadataConverter.MetadataFilter)#org/apache/parquet/hadoop/util/HadoopInputFile/fromPath(org.apache.parquet.hadoop.Path,org.apache.parquet.hadoop.Configuration)
org/apache/parquet/hadoop/ParquetFileReader/readFooters(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path)#org/apache/parquet/hadoop/ParquetFileReader/status(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path)
org/apache/parquet/hadoop/ParquetFileReader/readFooters(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path)#org/apache/parquet/hadoop/ParquetFileReader/readFooters(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path)
org/apache/parquet/hadoop/ParquetFileReader/readNextRowGroup()#org/apache/parquet/hadoop/ParquetFileReader/ConsecutiveChunkList/ConsecutiveChunkList(long)
org/apache/parquet/hadoop/ParquetFileReader/readNextRowGroup()#java/util/ArrayList/ArrayList()
org/apache/parquet/hadoop/ParquetFileReader/readNextRowGroup()#org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/getPath()
org/apache/parquet/hadoop/ParquetFileReader/readNextRowGroup()#org/apache/parquet/hadoop/util/counters/BenchmarkCounter/incrementTotalBytes(long)
org/apache/parquet/hadoop/ParquetFileReader/readNextRowGroup()#org/apache/parquet/hadoop/DictionaryPageReader/setRowGroup(org.apache.parquet.hadoop.ColumnChunkPageReadStore)
org/apache/parquet/hadoop/ParquetFileReader/readNextRowGroup()#java/util/List/add(E)
org/apache/parquet/hadoop/ParquetFileReader/readNextRowGroup()#java/util/List/get(int)
org/apache/parquet/hadoop/ParquetFileReader/readNextRowGroup()#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/apache/parquet/hadoop/ParquetFileReader/readNextRowGroup()#org/apache/parquet/hadoop/ParquetFileReader/ConsecutiveChunkList/readAll(org.apache.parquet.io.SeekableInputStream)
org/apache/parquet/hadoop/ParquetFileReader/readNextRowGroup()#org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/getTotalSize()
org/apache/parquet/hadoop/ParquetFileReader/readNextRowGroup()#org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/getStartingPos()
org/apache/parquet/hadoop/ParquetFileReader/readNextRowGroup()#org/apache/parquet/hadoop/ParquetFileReader/Chunk/readAllPages()
org/apache/parquet/hadoop/ParquetFileReader/readNextRowGroup()#org/apache/parquet/hadoop/ParquetFileReader/ChunkDescriptor/ChunkDescriptor(org.apache.parquet.column.ColumnDescriptor,org.apache.parquet.hadoop.metadata.ColumnChunkMetaData,long,int)
org/apache/parquet/hadoop/ParquetFileReader/readNextRowGroup()#org/apache/parquet/hadoop/metadata/BlockMetaData/getRowCount()
org/apache/parquet/hadoop/ParquetFileReader/readNextRowGroup()#org/apache/parquet/hadoop/ParquetFileReader/advanceToNextBlock()
org/apache/parquet/hadoop/ParquetFileReader/readNextRowGroup()#java/util/Map/get(java.lang.Object)
org/apache/parquet/hadoop/ParquetFileReader/readNextRowGroup()#org/apache/parquet/hadoop/ColumnChunkPageReadStore/addColumn(org.apache.parquet.column.ColumnDescriptor,org.apache.parquet.hadoop.ColumnChunkPageReadStore.ColumnChunkPageReader)
org/apache/parquet/hadoop/ParquetFileReader/readNextRowGroup()#java/util/List/size()
org/apache/parquet/hadoop/ParquetFileReader/readNextRowGroup()#org/apache/parquet/hadoop/ParquetFileReader/ConsecutiveChunkList/endPos()
org/apache/parquet/hadoop/ParquetFileReader/readNextRowGroup()#org/apache/parquet/hadoop/metadata/BlockMetaData/getColumns()
org/apache/parquet/hadoop/ParquetFileReader/readNextRowGroup()#org/apache/parquet/hadoop/ParquetFileReader/ConsecutiveChunkList/addChunk(org.apache.parquet.hadoop.ParquetFileReader.ChunkDescriptor)
org/apache/parquet/hadoop/ParquetFileReader/readNextRowGroup()#org/apache/parquet/hadoop/ColumnChunkPageReadStore/ColumnChunkPageReadStore(long)
org/apache/parquet/hadoop/ParquetFileReader/readSummaryFile(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.FileStatus)#org/apache/parquet/hadoop/ParquetFileReader/footersFromSummaryFile(org.apache.parquet.hadoop.Path,org.apache.parquet.hadoop.metadata.ParquetMetadata)
org/apache/parquet/hadoop/ParquetFileReader/readSummaryFile(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.FileStatus)#org/apache/parquet/hadoop/ParquetFileReader/filter(boolean)
org/apache/parquet/hadoop/ParquetFileReader/readSummaryFile(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.FileStatus)#org/apache/parquet/hadoop/ParquetFileReader/readFooter(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path,org.apache.parquet.format.converter.ParquetMetadataConverter.MetadataFilter)
org/apache/parquet/hadoop/ParquetFileReader/readSummaryMetadata(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path,boolean)#org/apache/parquet/hadoop/ParquetFileReader/filter(boolean)
org/apache/parquet/hadoop/ParquetFileReader/readSummaryMetadata(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path,boolean)#org/apache/parquet/hadoop/ParquetFileReader/readFooter(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path,org.apache.parquet.format.converter.ParquetMetadataConverter.MetadataFilter)
org/apache/parquet/hadoop/ParquetFileReader/readSummaryMetadata(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path,boolean)#java/lang/Object/Object()
org/apache/parquet/hadoop/ParquetFileReader/close()#java/io/InputStream/close()
org/apache/parquet/hadoop/ParquetFileReader/close()#org/apache/parquet/hadoop/CodecFactory/release()
org/apache/parquet/hadoop/ParquetFileReader/readAllFootersInParallel(org.apache.parquet.hadoop.Configuration,java.util.List,boolean)#java/util/ArrayList/ArrayList()
org/apache/parquet/hadoop/ParquetFileReader/readAllFootersInParallel(org.apache.parquet.hadoop.Configuration,java.util.List,boolean)#java/io/IOException/IOException(java.lang.String,java.lang.Throwable)
org/apache/parquet/hadoop/ParquetFileReader/readAllFootersInParallel(org.apache.parquet.hadoop.Configuration,java.util.List,boolean)#java/lang/Throwable/getMessage()
org/apache/parquet/hadoop/ParquetFileReader/readAllFootersInParallel(org.apache.parquet.hadoop.Configuration,java.util.List,boolean)#java/lang/Throwable/getCause()
org/apache/parquet/hadoop/ParquetFileReader/readAllFootersInParallel(org.apache.parquet.hadoop.Configuration,java.util.List,boolean)#org/apache/parquet/hadoop/ParquetFileReader/readAllFootersInParallel(org/apache/parquet/hadoop/Configuration,java/util/List,boolean)/$anonymous1/()
org/apache/parquet/hadoop/ParquetFileReader/readAllFootersInParallel(org.apache.parquet.hadoop.Configuration,java.util.List,boolean)#org/apache/parquet/hadoop/ParquetFileReader/runAllInParallel(int,java.util.List)
org/apache/parquet/hadoop/ParquetFileReader/readAllFootersInParallel(org.apache.parquet.hadoop.Configuration,java.util.List,boolean)#java/util/List/add(E)
org/apache/parquet/example/data/simple/convert/GroupRecordConverter/getCurrentRecord()#org/apache/parquet/example/data/simple/convert/SimpleGroupConverter/getCurrentRecord()
org/apache/parquet/column/values/ValuesWriter/writeBytes(org.apache.parquet.io.api.Binary)#java/lang/Class/getName()
org/apache/parquet/column/values/ValuesWriter/writeBytes(org.apache.parquet.io.api.Binary)#java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)
org/apache/parquet/column/values/ValuesWriter/writeBytes(org.apache.parquet.io.api.Binary)#java/lang/Object/getClass()
org/apache/parquet/column/values/ValuesWriter/writeFloat(float)#java/lang/Class/getName()
org/apache/parquet/column/values/ValuesWriter/writeFloat(float)#java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)
org/apache/parquet/column/values/ValuesWriter/writeFloat(float)#java/lang/Object/getClass()
org/apache/parquet/column/values/ValuesWriter/writeBoolean(boolean)#java/lang/Class/getName()
org/apache/parquet/column/values/ValuesWriter/writeBoolean(boolean)#java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)
org/apache/parquet/column/values/ValuesWriter/writeBoolean(boolean)#java/lang/Object/getClass()
org/apache/parquet/column/values/ValuesWriter/writeDouble(double)#java/lang/Class/getName()
org/apache/parquet/column/values/ValuesWriter/writeDouble(double)#java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)
org/apache/parquet/column/values/ValuesWriter/writeDouble(double)#java/lang/Object/getClass()
org/apache/parquet/column/values/ValuesWriter/writeLong(long)#java/lang/Class/getName()
org/apache/parquet/column/values/ValuesWriter/writeLong(long)#java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)
org/apache/parquet/column/values/ValuesWriter/writeLong(long)#java/lang/Object/getClass()
org/apache/parquet/column/values/ValuesWriter/writeByte(int)#java/lang/Class/getName()
org/apache/parquet/column/values/ValuesWriter/writeByte(int)#java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)
org/apache/parquet/column/values/ValuesWriter/writeByte(int)#java/lang/Object/getClass()
org/apache/parquet/column/values/ValuesWriter/writeInteger(int)#java/lang/Class/getName()
org/apache/parquet/column/values/ValuesWriter/writeInteger(int)#java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)
org/apache/parquet/column/values/ValuesWriter/writeInteger(int)#java/lang/Object/getClass()
org/apache/hadoop/hive/ql/io/parquet/TestParquetSerDe/arrayWritableEquals(org.apache.hadoop.hive.ql.io.parquet.serde.ArrayWritable,org.apache.hadoop.hive.ql.io.parquet.serde.ArrayWritable)#org/apache/hadoop/hive/ql/io/parquet/TestParquetSerDe/arrayWritableEquals(org.apache.hadoop.hive.ql.io.parquet.serde.ArrayWritable,org.apache.hadoop.hive.ql.io.parquet.serde.ArrayWritable)
org/apache/hadoop/hive/ql/io/parquet/TestParquetSerDe/deserializeAndSerializeLazySimple(org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe,org.apache.hadoop.hive.ql.io.parquet.serde.ArrayWritable)#org/apache/hadoop/hive/ql/io/parquet/serde/ParquetHiveSerDe/getObjectInspector()
org/apache/hadoop/hive/ql/io/parquet/TestParquetSerDe/deserializeAndSerializeLazySimple(org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe,org.apache.hadoop.hive.ql.io.parquet.serde.ArrayWritable)#org/apache/hadoop/hive/ql/io/parquet/serde/ParquetHiveSerDe/getSerDeStats()
org/apache/hadoop/hive/ql/io/parquet/TestParquetSerDe/deserializeAndSerializeLazySimple(org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe,org.apache.hadoop.hive.ql.io.parquet.serde.ArrayWritable)#org/apache/hadoop/hive/ql/io/parquet/serde/ParquetHiveSerDe/serialize(java.lang.Object,org.apache.hadoop.hive.ql.io.parquet.serde.ObjectInspector)
org/apache/hadoop/hive/ql/io/parquet/TestParquetSerDe/deserializeAndSerializeLazySimple(org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe,org.apache.hadoop.hive.ql.io.parquet.serde.ArrayWritable)#org/apache/hadoop/hive/ql/io/parquet/serde/ParquetHiveSerDe/deserialize(org.apache.hadoop.hive.ql.io.parquet.serde.Writable)
org/apache/hadoop/hive/ql/io/parquet/TestParquetSerDe/deserializeAndSerializeLazySimple(org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe,org.apache.hadoop.hive.ql.io.parquet.serde.ArrayWritable)#java/lang/Object/getClass()
org/apache/hadoop/hive/ql/io/parquet/TestParquetSerDe/deserializeAndSerializeLazySimple(org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe,org.apache.hadoop.hive.ql.io.parquet.serde.ArrayWritable)#org/apache/hadoop/hive/ql/io/parquet/TestParquetSerDe/arrayWritableEquals(org.apache.hadoop.hive.ql.io.parquet.serde.ArrayWritable,org.apache.hadoop.hive.ql.io.parquet.serde.ArrayWritable)
org/apache/hadoop/hive/ql/io/parquet/TestParquetSerDe/testParquetHiveSerDe()#java/lang/Throwable/printStackTrace()
org/apache/hadoop/hive/ql/io/parquet/TestParquetSerDe/testParquetHiveSerDe()#org/apache/hadoop/hive/ql/io/parquet/serde/ParquetHiveSerDe/ParquetHiveSerDe()
org/apache/hadoop/hive/ql/io/parquet/TestParquetSerDe/testParquetHiveSerDe()#java/io/PrintStream/println(java.lang.String)
org/apache/hadoop/hive/ql/io/parquet/TestParquetSerDe/testParquetHiveSerDe()#org/apache/parquet/io/api/Binary/fromString(java.lang.String)
org/apache/hadoop/hive/ql/io/parquet/TestParquetSerDe/testParquetHiveSerDe()#org/apache/hadoop/hive/ql/io/parquet/TestParquetSerDe/deserializeAndSerializeLazySimple(org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe,org.apache.hadoop.hive.ql.io.parquet.serde.ArrayWritable)
org/apache/hadoop/hive/ql/io/parquet/TestParquetSerDe/testParquetHiveSerDe()#org/apache/hadoop/hive/ql/io/parquet/writable/BinaryWritable/BinaryWritable(org.apache.parquet.io.api.Binary)
org/apache/hadoop/hive/ql/io/parquet/TestParquetSerDe/testParquetHiveSerDe()#org/apache/hadoop/hive/ql/io/parquet/serde/ParquetHiveSerDe/initialize(org.apache.parquet.hadoop.Configuration,java.util.Properties)
org/apache/hadoop/hive/ql/io/parquet/TestParquetSerDe/testParquetHiveSerDe()#org/apache/hadoop/hive/ql/io/parquet/TestParquetSerDe/createProperties()
org/apache/hadoop/hive/ql/io/parquet/TestParquetSerDe/testParquetHiveSerDe()#java/lang/Object/Object()
org/apache/hadoop/hive/ql/io/parquet/TestParquetSerDe/createProperties()#java/util/Properties/setProperty(java.lang.String,java.lang.String)
org/apache/hadoop/hive/ql/io/parquet/TestParquetSerDe/createProperties()#java/util/Properties/Properties()
org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/FieldsMarker/reset(int)#java/util/BitSet/clear(int,int)
org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/FieldsMarker/isWritten(int)#java/util/BitSet/get(int)
org/apache/parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/FieldsMarker/markWritten(int)#java/util/BitSet/set(int)
org/apache/parquet/filter2/predicate/TestLogicalInverter/testComplex()#org/apache/parquet/filter2/predicate/LogicalInverter/invert(org.apache.parquet.filter2.predicate.FilterPredicate)
org/apache/parquet/filter2/predicate/TestLogicalInverter/testBaseCases()#org/apache/parquet/filter2/predicate/FilterApi/ltEq(C,T)
org/apache/parquet/filter2/predicate/TestLogicalInverter/testBaseCases()#org/apache/parquet/filter2/predicate/FilterApi/gt(C,T)
org/apache/parquet/filter2/predicate/TestLogicalInverter/testBaseCases()#org/apache/parquet/filter2/predicate/FilterApi/eq(C,T)
org/apache/parquet/filter2/predicate/TestLogicalInverter/testBaseCases()#org/apache/parquet/filter2/predicate/FilterApi/lt(C,T)
org/apache/parquet/filter2/predicate/TestLogicalInverter/testBaseCases()#org/apache/parquet/filter2/predicate/FilterApi/notEq(C,T)
org/apache/parquet/filter2/predicate/TestLogicalInverter/testBaseCases()#org/apache/parquet/filter2/predicate/LogicalInverter/invert(org.apache.parquet.filter2.predicate.FilterPredicate)
org/apache/parquet/filter2/predicate/TestLogicalInverter/testBaseCases()#org/apache/parquet/filter2/predicate/FilterApi/or(org.apache.parquet.filter2.predicate.FilterPredicate,org.apache.parquet.filter2.predicate.FilterPredicate)
org/apache/parquet/filter2/predicate/TestLogicalInverter/testBaseCases()#org/apache/parquet/filter2/predicate/FilterApi/userDefined(org.apache.parquet.filter2.predicate.Operators.Column,java.lang.Class)
org/apache/parquet/filter2/predicate/TestLogicalInverter/testBaseCases()#org/apache/parquet/filter2/predicate/FilterApi/and(org.apache.parquet.filter2.predicate.FilterPredicate,org.apache.parquet.filter2.predicate.FilterPredicate)
org/apache/parquet/filter2/predicate/TestLogicalInverter/testBaseCases()#org/apache/parquet/filter2/predicate/Operators/LogicalNotUserDefined/LogicalNotUserDefined(org.apache.parquet.filter2.predicate.Operators.UserDefined)
org/apache/parquet/filter2/predicate/TestLogicalInverter/testBaseCases()#org/apache/parquet/filter2/predicate/FilterApi/gtEq(C,T)
org/apache/parquet/filter2/predicate/TestLogicalInverter/testBaseCases()#org/apache/parquet/filter2/predicate/FilterApi/not(org.apache.parquet.filter2.predicate.FilterPredicate)
org/apache/parquet/hadoop/ParquetFileReader/WorkaroundChunk/readPageHeader()#java/nio/Buffer/position(int)
org/apache/parquet/hadoop/ParquetFileReader/WorkaroundChunk/readPageHeader()#org/apache/parquet/hadoop/ParquetFileReader/Chunk/pos()
org/apache/parquet/hadoop/ParquetFileReader/WorkaroundChunk/readPageHeader()#java/io/SequenceInputStream/SequenceInputStream(java.io.InputStream,java.io.InputStream)
org/apache/parquet/hadoop/ParquetFileReader/WorkaroundChunk/readAsBytesInput(int)#org/apache/parquet/bytes/BytesInput/concat(org.apache.parquet.bytes.BytesInput[])
org/apache/parquet/hadoop/ParquetFileReader/WorkaroundChunk/readAsBytesInput(int)#org/apache/parquet/bytes/BytesInput/copy(org.apache.parquet.bytes.BytesInput)
org/apache/parquet/hadoop/ParquetFileReader/WorkaroundChunk/readAsBytesInput(int)#org/apache/parquet/bytes/BytesInput/from(java.io.InputStream,int)
org/apache/parquet/hadoop/ParquetFileReader/WorkaroundChunk/readAsBytesInput(int)#org/apache/parquet/hadoop/ParquetFileReader/Chunk/pos()
org/apache/parquet/hadoop/ParquetFileReader/WorkaroundChunk/readAsBytesInput(int)#org/apache/parquet/hadoop/ParquetFileReader/Chunk/readAsBytesInput(int)
org/apache/parquet/tools/read/SimpleRecordMaterializer/getCurrentRecord()#org/apache/parquet/tools/read/SimpleRecordConverter/getCurrentRecord()
org/apache/parquet/filter/AndRecordFilter/isMatch()#org/apache/parquet/filter/RecordFilter/isMatch()
org/apache/parquet/filter/AndRecordFilter/and(org.apache.parquet.filter.UnboundRecordFilter,org.apache.parquet.filter.UnboundRecordFilter)#org/apache/parquet/filter/AndRecordFilter/and(org/apache/parquet/filter/UnboundRecordFilter,org/apache/parquet/filter/UnboundRecordFilter)/$anonymous1/()
org/apache/parquet/filter/AndRecordFilter/and(org.apache.parquet.filter.UnboundRecordFilter,org.apache.parquet.filter.UnboundRecordFilter)#org/apache/parquet/Preconditions/checkNotNull(T,java.lang.String)
org/apache/parquet/avro/AvroIndexedRecordConverter/newConverter(org.apache.parquet.pig.Schema,org.apache.parquet.schema.Type,org.apache.parquet.avro.GenericData,org.apache.parquet.avro.ParentValueContainer)#org/apache/parquet/avro/AvroIndexedRecordConverter/AvroIndexedRecordConverter(org.apache.parquet.avro.ParentValueContainer,org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,org.apache.parquet.avro.GenericData)
org/apache/parquet/avro/AvroIndexedRecordConverter/newConverter(org.apache.parquet.pig.Schema,org.apache.parquet.schema.Type,org.apache.parquet.avro.GenericData,org.apache.parquet.avro.ParentValueContainer)#org/apache/parquet/avro/AvroConverters/FieldIntegerConverter/FieldIntegerConverter(org.apache.parquet.avro.ParentValueContainer)
org/apache/parquet/avro/AvroIndexedRecordConverter/newConverter(org.apache.parquet.pig.Schema,org.apache.parquet.schema.Type,org.apache.parquet.avro.GenericData,org.apache.parquet.avro.ParentValueContainer)#org/apache/parquet/avro/AvroConverters/FieldFloatConverter/FieldFloatConverter(org.apache.parquet.avro.ParentValueContainer)
org/apache/parquet/avro/AvroIndexedRecordConverter/newConverter(org.apache.parquet.pig.Schema,org.apache.parquet.schema.Type,org.apache.parquet.avro.GenericData,org.apache.parquet.avro.ParentValueContainer)#java/lang/String/format(java.lang.String,java.lang.Object[])
org/apache/parquet/avro/AvroIndexedRecordConverter/newConverter(org.apache.parquet.pig.Schema,org.apache.parquet.schema.Type,org.apache.parquet.avro.GenericData,org.apache.parquet.avro.ParentValueContainer)#org/apache/parquet/avro/AvroConverters/FieldBooleanConverter/FieldBooleanConverter(org.apache.parquet.avro.ParentValueContainer)
org/apache/parquet/avro/AvroIndexedRecordConverter/newConverter(org.apache.parquet.pig.Schema,org.apache.parquet.schema.Type,org.apache.parquet.avro.GenericData,org.apache.parquet.avro.ParentValueContainer)#java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)
org/apache/parquet/avro/AvroIndexedRecordConverter/newConverter(org.apache.parquet.pig.Schema,org.apache.parquet.schema.Type,org.apache.parquet.avro.GenericData,org.apache.parquet.avro.ParentValueContainer)#org/apache/parquet/avro/AvroIndexedRecordConverter/FieldFixedConverter/FieldFixedConverter(org.apache.parquet.avro.ParentValueContainer,org.apache.parquet.pig.Schema,org.apache.parquet.avro.GenericData)
org/apache/parquet/avro/AvroIndexedRecordConverter/newConverter(org.apache.parquet.pig.Schema,org.apache.parquet.schema.Type,org.apache.parquet.avro.GenericData,org.apache.parquet.avro.ParentValueContainer)#org/apache/parquet/avro/ParentValueContainer/getConversionContainer(org.apache.parquet.avro.ParentValueContainer,org.apache.parquet.avro.Conversion,org.apache.parquet.pig.Schema)
org/apache/parquet/avro/AvroIndexedRecordConverter/newConverter(org.apache.parquet.pig.Schema,org.apache.parquet.schema.Type,org.apache.parquet.avro.GenericData,org.apache.parquet.avro.ParentValueContainer)#org/apache/parquet/avro/AvroIndexedRecordConverter/FieldEnumConverter/FieldEnumConverter(org.apache.parquet.avro.ParentValueContainer,org.apache.parquet.pig.Schema,org.apache.parquet.avro.GenericData)
org/apache/parquet/avro/AvroIndexedRecordConverter/newConverter(org.apache.parquet.pig.Schema,org.apache.parquet.schema.Type,org.apache.parquet.avro.GenericData,org.apache.parquet.avro.ParentValueContainer)#org/apache/parquet/schema/Type/asGroupType()
org/apache/parquet/avro/AvroIndexedRecordConverter/newConverter(org.apache.parquet.pig.Schema,org.apache.parquet.schema.Type,org.apache.parquet.avro.GenericData,org.apache.parquet.avro.ParentValueContainer)#org/apache/parquet/avro/AvroConverters/FieldLongConverter/FieldLongConverter(org.apache.parquet.avro.ParentValueContainer)
org/apache/parquet/avro/AvroIndexedRecordConverter/newConverter(org.apache.parquet.pig.Schema,org.apache.parquet.schema.Type,org.apache.parquet.avro.GenericData,org.apache.parquet.avro.ParentValueContainer)#org/apache/parquet/avro/AvroConverters/FieldByteBufferConverter/FieldByteBufferConverter(org.apache.parquet.avro.ParentValueContainer)
org/apache/parquet/avro/AvroIndexedRecordConverter/newConverter(org.apache.parquet.pig.Schema,org.apache.parquet.schema.Type,org.apache.parquet.avro.GenericData,org.apache.parquet.avro.ParentValueContainer)#org/apache/parquet/avro/AvroIndexedRecordConverter/AvroUnionConverter/AvroUnionConverter(org.apache.parquet.avro.ParentValueContainer,org.apache.parquet.schema.Type,org.apache.parquet.pig.Schema,org.apache.parquet.avro.GenericData)
org/apache/parquet/avro/AvroIndexedRecordConverter/newConverter(org.apache.parquet.pig.Schema,org.apache.parquet.schema.Type,org.apache.parquet.avro.GenericData,org.apache.parquet.avro.ParentValueContainer)#org/apache/parquet/avro/AvroConverters/FieldStringConverter/FieldStringConverter(org.apache.parquet.avro.ParentValueContainer)
org/apache/parquet/avro/AvroIndexedRecordConverter/newConverter(org.apache.parquet.pig.Schema,org.apache.parquet.schema.Type,org.apache.parquet.avro.GenericData,org.apache.parquet.avro.ParentValueContainer)#org/apache/parquet/avro/AvroConverters/FieldDoubleConverter/FieldDoubleConverter(org.apache.parquet.avro.ParentValueContainer)
org/apache/parquet/avro/AvroIndexedRecordConverter/newConverter(org.apache.parquet.pig.Schema,org.apache.parquet.schema.Type,org.apache.parquet.avro.GenericData,org.apache.parquet.avro.ParentValueContainer)#org/apache/parquet/avro/AvroIndexedRecordConverter/AvroArrayConverter/AvroArrayConverter(org.apache.parquet.avro.ParentValueContainer,org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,org.apache.parquet.avro.GenericData)
org/apache/parquet/avro/AvroIndexedRecordConverter/newConverter(org.apache.parquet.pig.Schema,org.apache.parquet.schema.Type,org.apache.parquet.avro.GenericData,org.apache.parquet.avro.ParentValueContainer)#org/apache/parquet/avro/AvroIndexedRecordConverter/MapConverter/MapConverter(org.apache.parquet.avro.ParentValueContainer,org.apache.parquet.schema.GroupType,org.apache.parquet.pig.Schema,org.apache.parquet.avro.GenericData)
org/apache/parquet/avro/AvroIndexedRecordConverter/getDatumClass(org.apache.parquet.avro.GenericData,org.apache.parquet.pig.Schema)#java/lang/Object/getClass()
org/apache/parquet/avro/AvroIndexedRecordConverter/end()#org/apache/parquet/avro/AvroIndexedRecordConverter/fillInDefaults()
org/apache/parquet/avro/AvroIndexedRecordConverter/end()#org/apache/parquet/avro/ParentValueContainer/add(java.lang.Object)
org/apache/parquet/avro/AvroIndexedRecordConverter/fillInDefaults()#org/apache/parquet/avro/AvroIndexedRecordConverter/deepCopy(org.apache.parquet.pig.Schema,java.lang.Object)
org/apache/parquet/avro/AvroIndexedRecordConverter/start()#java/lang/Object/Object()
org/apache/parquet/avro/AvroIndexedRecordConverter/getAvroField(java.lang.String)#java/lang/String/format(java.lang.String,java.lang.Object[])
org/apache/parquet/avro/AvroIndexedRecordConverter/getAvroField(java.lang.String)#org/apache/parquet/io/InvalidRecordException/InvalidRecordException(java.lang.String)
org/apache/parquet/thrift/ThriftRecordConverter/SetConverter/collectionStart(int,byte)#org/apache/parquet/thrift/ThriftRecordConverter/SetConverter/collectionStart(int,byte)/$anonymous1/(java.lang.String)
org/apache/parquet/avro/RecordWithUUIDList/hashCode()#java/util/List/hashCode()
org/apache/parquet/avro/RecordWithUUIDList/equals(java.lang.Object)#java/util/List/equals(java.lang.Object)
org/apache/parquet/thrift/TestThriftParquetReaderWriter/testWriteRead()#org/apache/parquet/thrift/ThriftParquetWriter/ThriftParquetWriter(org.apache.parquet.hadoop.Path,java.lang.Class,org.apache.parquet.hadoop.metadata.CompressionCodecName)
org/apache/parquet/thrift/TestThriftParquetReaderWriter/testWriteRead()#org/apache/parquet/thrift/ThriftParquetReader/ThriftParquetReader(org.apache.parquet.hadoop.Path)
org/apache/parquet/thrift/TestThriftParquetReaderWriter/testWriteRead()#java/util/Arrays/asList(T[])
org/apache/parquet/thrift/TestThriftParquetReaderWriter/testWriteRead()#org/apache/parquet/thrift/ThriftParquetReader/ThriftParquetReader(org.apache.parquet.hadoop.Path,java.lang.Class)
org/apache/parquet/thrift/TestThriftParquetReaderWriter/testWriteRead()#java/lang/Object/Object()
org/apache/parquet/thrift/struct/TestThriftType/testParseUnionInfo()#org/apache/parquet/thrift/struct/ThriftType/fromJSON(java.lang.String)
org/apache/parquet/thrift/struct/TestThriftType/testParseUnionInfo()#org/apache/parquet/thrift/struct/ThriftType/StructType/getStructOrUnionType()
org/apache/parquet/thrift/struct/TestThriftType/testWriteUnionInfo()#org/apache/parquet/thrift/struct/ThriftType/StructType/StructType(java.util.List,org.apache.parquet.thrift.struct.ThriftType.StructType.StructOrUnionType)
org/apache/parquet/thrift/struct/TestThriftType/testWriteUnionInfo()#org/apache/parquet/thrift/struct/ThriftType/toJSON()
org/apache/parquet/thrift/struct/TestThriftType/testWriteUnionInfo()#java/util/LinkedList/LinkedList()
org/apache/parquet/tools/util/MetadataUtils/showDetails(org.apache.parquet.tools.util.PrettyPrintWriter,java.util.List)#org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/getPath()
org/apache/parquet/tools/util/MetadataUtils/showDetails(org.apache.parquet.tools.util.PrettyPrintWriter,java.util.List)#java/util/Map/get(java.lang.Object)
org/apache/parquet/tools/util/MetadataUtils/showDetails(org.apache.parquet.tools.util.PrettyPrintWriter,java.util.List)#org/apache/parquet/hadoop/metadata/ColumnPath/toArray()
org/apache/parquet/tools/util/MetadataUtils/showDetails(org.apache.parquet.tools.util.PrettyPrintWriter,java.util.List)#java/util/Map/containsKey(java.lang.Object)
org/apache/parquet/tools/util/MetadataUtils/showDetails(org.apache.parquet.tools.util.PrettyPrintWriter,java.util.List)#java/util/Map/put(K,V)
org/apache/parquet/tools/util/MetadataUtils/showDetails(org.apache.parquet.tools.util.PrettyPrintWriter,java.util.List)#org/apache/parquet/tools/util/MetadataUtils/showColumnChunkDetails(org.apache.parquet.tools.util.PrettyPrintWriter,java.util.Map,int)
org/apache/parquet/tools/util/MetadataUtils/showDetails(org.apache.parquet.tools.util.PrettyPrintWriter,java.util.List)#java/util/LinkedHashMap/LinkedHashMap()
org/apache/parquet/tools/util/MetadataUtils/showDetails(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.hadoop.metadata.ParquetMetadata)#org/apache/parquet/hadoop/metadata/ParquetMetadata/getBlocks()
org/apache/parquet/tools/util/MetadataUtils/showDetails(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.hadoop.metadata.ParquetMetadata)#org/apache/parquet/hadoop/metadata/ParquetMetadata/getFileMetaData()
org/apache/parquet/tools/util/MetadataUtils/showDetails(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.hadoop.metadata.ParquetMetadata)#org/apache/parquet/tools/util/MetadataUtils/showDetails(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.hadoop.metadata.FileMetaData)
org/apache/parquet/tools/util/MetadataUtils/showDetails(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.hadoop.metadata.ParquetMetadata)#org/apache/parquet/tools/util/PrettyPrintWriter/println()
org/apache/parquet/tools/util/MetadataUtils/showDetails(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.hadoop.metadata.ParquetMetadata)#org/apache/parquet/tools/util/MetadataUtils/showDetails(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.hadoop.metadata.BlockMetaData,java.lang.Long)
org/apache/parquet/tools/util/MetadataUtils/showDetails(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.hadoop.metadata.ColumnChunkMetaData,boolean)#org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/getPath()
org/apache/parquet/tools/util/MetadataUtils/showDetails(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.hadoop.metadata.ColumnChunkMetaData,boolean)#org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/getFirstDataPageOffset()
org/apache/parquet/tools/util/MetadataUtils/showDetails(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.hadoop.metadata.ColumnChunkMetaData,boolean)#java/lang/String/isEmpty()
org/apache/parquet/tools/util/MetadataUtils/showDetails(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.hadoop.metadata.ColumnChunkMetaData,boolean)#org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/getTotalUncompressedSize()
org/apache/parquet/tools/util/MetadataUtils/showDetails(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.hadoop.metadata.ColumnChunkMetaData,boolean)#org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/getEncodings()
org/apache/parquet/tools/util/MetadataUtils/showDetails(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.hadoop.metadata.ColumnChunkMetaData,boolean)#org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/getDictionaryPageOffset()
org/apache/parquet/tools/util/MetadataUtils/showDetails(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.hadoop.metadata.ColumnChunkMetaData,boolean)#org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/getType()
org/apache/parquet/tools/util/MetadataUtils/showDetails(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.hadoop.metadata.ColumnChunkMetaData,boolean)#org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/getTotalSize()
org/apache/parquet/tools/util/MetadataUtils/showDetails(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.hadoop.metadata.ColumnChunkMetaData,boolean)#org/apache/parquet/tools/util/PrettyPrintWriter/format(java.lang.String,java.lang.Object[])
org/apache/parquet/tools/util/MetadataUtils/showDetails(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.hadoop.metadata.ColumnChunkMetaData,boolean)#org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/getCodec()
org/apache/parquet/tools/util/MetadataUtils/showDetails(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.hadoop.metadata.ColumnChunkMetaData,boolean)#org/apache/parquet/tools/util/PrettyPrintWriter/println()
org/apache/parquet/tools/util/MetadataUtils/showDetails(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.hadoop.metadata.ColumnChunkMetaData,boolean)#org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/getValueCount()
org/apache/parquet/tools/util/MetadataUtils/showDetails(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.schema.Type)#org/apache/parquet/tools/util/MetadataUtils/showDetails(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.schema.Type,int,org.apache.parquet.schema.MessageType,java.util.List)
org/apache/parquet/tools/util/MetadataUtils/showDetails(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.hadoop.metadata.BlockMetaData)#org/apache/parquet/tools/util/MetadataUtils/showDetails(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.hadoop.metadata.BlockMetaData,java.lang.Long)
org/apache/parquet/tools/util/MetadataUtils/showDetails(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.schema.Type,int,org.apache.parquet.schema.MessageType,java.util.List)#org/apache/parquet/schema/Type/asGroupType()
org/apache/parquet/tools/util/MetadataUtils/showDetails(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.schema.Type,int,org.apache.parquet.schema.MessageType,java.util.List)#org/apache/parquet/tools/util/MetadataUtils/showDetails(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.schema.GroupType,int,org.apache.parquet.schema.MessageType,java.util.List)
org/apache/parquet/tools/util/MetadataUtils/showDetails(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.schema.Type,int,org.apache.parquet.schema.MessageType,java.util.List)#org/apache/parquet/schema/Type/asPrimitiveType()
org/apache/parquet/tools/util/MetadataUtils/showDetails(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.schema.Type,int,org.apache.parquet.schema.MessageType,java.util.List)#org/apache/parquet/tools/util/MetadataUtils/showDetails(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.schema.PrimitiveType,int,org.apache.parquet.schema.MessageType,java.util.List)
org/apache/parquet/tools/util/MetadataUtils/showDetails(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.schema.GroupType,int,org.apache.parquet.schema.MessageType,java.util.List)#org/apache/parquet/schema/Type/getName()
org/apache/parquet/tools/util/MetadataUtils/showDetails(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.schema.GroupType,int,org.apache.parquet.schema.MessageType,java.util.List)#java/util/List/remove(int)
org/apache/parquet/tools/util/MetadataUtils/showDetails(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.schema.GroupType,int,org.apache.parquet.schema.MessageType,java.util.List)#org/apache/parquet/schema/Type/getRepetition()
org/apache/parquet/tools/util/MetadataUtils/showDetails(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.schema.GroupType,int,org.apache.parquet.schema.MessageType,java.util.List)#org/apache/parquet/tools/util/PrettyPrintWriter/format(java.lang.String,java.lang.Object[])
org/apache/parquet/tools/util/MetadataUtils/showDetails(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.schema.GroupType,int,org.apache.parquet.schema.MessageType,java.util.List)#org/apache/parquet/tools/util/MetadataUtils/showDetails(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.schema.Type,int,org.apache.parquet.schema.MessageType,java.util.List)
org/apache/parquet/tools/util/MetadataUtils/showDetails(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.schema.GroupType,int,org.apache.parquet.schema.MessageType,java.util.List)#java/util/List/size()
org/apache/parquet/tools/util/MetadataUtils/showDetails(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.schema.GroupType,int,org.apache.parquet.schema.MessageType,java.util.List)#org/apache/parquet/schema/GroupType/getFieldCount()
org/apache/parquet/tools/util/MetadataUtils/showDetails(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.schema.GroupType,int,org.apache.parquet.schema.MessageType,java.util.List)#java/util/List/add(E)
org/apache/parquet/tools/util/MetadataUtils/showDetails(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.schema.GroupType,int,org.apache.parquet.schema.MessageType,java.util.List)#org/apache/parquet/schema/GroupType/getFields()
org/apache/parquet/tools/util/MetadataUtils/showDetails(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.schema.PrimitiveType,int,org.apache.parquet.schema.MessageType,java.util.List)#java/util/List/remove(int)
org/apache/parquet/tools/util/MetadataUtils/showDetails(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.schema.PrimitiveType,int,org.apache.parquet.schema.MessageType,java.util.List)#org/apache/parquet/tools/util/PrettyPrintWriter/format(java.lang.String,java.lang.Object[])
org/apache/parquet/tools/util/MetadataUtils/showDetails(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.schema.PrimitiveType,int,org.apache.parquet.schema.MessageType,java.util.List)#java/util/List/add(E)
org/apache/parquet/tools/util/MetadataUtils/showDetails(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.schema.PrimitiveType,int,org.apache.parquet.schema.MessageType,java.util.List)#org/apache/parquet/column/ColumnDescriptor/getMaxRepetitionLevel()
org/apache/parquet/tools/util/MetadataUtils/showDetails(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.schema.PrimitiveType,int,org.apache.parquet.schema.MessageType,java.util.List)#org/apache/parquet/tools/util/PrettyPrintWriter/println()
org/apache/parquet/tools/util/MetadataUtils/showDetails(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.schema.PrimitiveType,int,org.apache.parquet.schema.MessageType,java.util.List)#org/apache/parquet/schema/Type/getName()
org/apache/parquet/tools/util/MetadataUtils/showDetails(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.schema.PrimitiveType,int,org.apache.parquet.schema.MessageType,java.util.List)#org/apache/parquet/schema/Type/getOriginalType()
org/apache/parquet/tools/util/MetadataUtils/showDetails(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.schema.PrimitiveType,int,org.apache.parquet.schema.MessageType,java.util.List)#java/util/List/toArray(T[])
org/apache/parquet/tools/util/MetadataUtils/showDetails(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.schema.PrimitiveType,int,org.apache.parquet.schema.MessageType,java.util.List)#org/apache/parquet/schema/Type/getRepetition()
org/apache/parquet/tools/util/MetadataUtils/showDetails(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.schema.PrimitiveType,int,org.apache.parquet.schema.MessageType,java.util.List)#org/apache/parquet/schema/MessageType/getColumnDescription(java.lang.String[])
org/apache/parquet/tools/util/MetadataUtils/showDetails(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.schema.PrimitiveType,int,org.apache.parquet.schema.MessageType,java.util.List)#java/util/List/size()
org/apache/parquet/tools/util/MetadataUtils/showDetails(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.schema.PrimitiveType,int,org.apache.parquet.schema.MessageType,java.util.List)#org/apache/parquet/column/ColumnDescriptor/getMaxDefinitionLevel()
org/apache/parquet/tools/util/MetadataUtils/showDetails(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.schema.PrimitiveType,int,org.apache.parquet.schema.MessageType,java.util.List)#org/apache/parquet/schema/PrimitiveType/getPrimitiveTypeName()
org/apache/parquet/tools/util/MetadataUtils/showColumnChunkDetails(org.apache.parquet.tools.util.PrettyPrintWriter,java.util.Map,int)#java/util/Map/Entry/getKey()
org/apache/parquet/tools/util/MetadataUtils/showColumnChunkDetails(org.apache.parquet.tools.util.PrettyPrintWriter,java.util.Map,int)#org/apache/parquet/tools/util/PrettyPrintWriter/print(java.lang.String)
org/apache/parquet/tools/util/MetadataUtils/showColumnChunkDetails(org.apache.parquet.tools.util.PrettyPrintWriter,java.util.Map,int)#org/apache/parquet/tools/util/PrettyPrintWriter/println(java.lang.String)
org/apache/parquet/tools/util/MetadataUtils/showColumnChunkDetails(org.apache.parquet.tools.util.PrettyPrintWriter,java.util.Map,int)#org/apache/parquet/tools/util/MetadataUtils/showColumnChunkDetails(org.apache.parquet.tools.util.PrettyPrintWriter,java.util.Map,int)
org/apache/parquet/tools/util/MetadataUtils/showColumnChunkDetails(org.apache.parquet.tools.util.PrettyPrintWriter,java.util.Map,int)#java/util/Map/entrySet()
org/apache/parquet/tools/util/MetadataUtils/showColumnChunkDetails(org.apache.parquet.tools.util.PrettyPrintWriter,java.util.Map,int)#org/apache/parquet/tools/util/MetadataUtils/showDetails(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.hadoop.metadata.ColumnChunkMetaData,boolean)
org/apache/parquet/tools/util/MetadataUtils/showColumnChunkDetails(org.apache.parquet.tools.util.PrettyPrintWriter,java.util.Map,int)#java/util/Map/Entry/getValue()
org/apache/parquet/tools/util/MetadataUtils/showDetails(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.hadoop.metadata.BlockMetaData,java.lang.Long)#org/apache/parquet/tools/util/MetadataUtils/showDetails(org.apache.parquet.tools.util.PrettyPrintWriter,java.util.List)
org/apache/parquet/tools/util/MetadataUtils/showDetails(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.hadoop.metadata.BlockMetaData,java.lang.Long)#org/apache/parquet/hadoop/metadata/BlockMetaData/getRowCount()
org/apache/parquet/tools/util/MetadataUtils/showDetails(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.hadoop.metadata.BlockMetaData,java.lang.Long)#org/apache/parquet/tools/util/PrettyPrintWriter/format(java.lang.String,java.lang.Object[])
org/apache/parquet/tools/util/MetadataUtils/showDetails(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.hadoop.metadata.BlockMetaData,java.lang.Long)#org/apache/parquet/hadoop/metadata/BlockMetaData/getStartingPos()
org/apache/parquet/tools/util/MetadataUtils/showDetails(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.hadoop.metadata.BlockMetaData,java.lang.Long)#org/apache/parquet/hadoop/metadata/BlockMetaData/getColumns()
org/apache/parquet/tools/util/MetadataUtils/showDetails(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.hadoop.metadata.BlockMetaData,java.lang.Long)#org/apache/parquet/tools/util/PrettyPrintWriter/rule(char)
org/apache/parquet/tools/util/MetadataUtils/showDetails(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.hadoop.metadata.BlockMetaData,java.lang.Long)#org/apache/parquet/hadoop/metadata/BlockMetaData/getTotalByteSize()
org/apache/parquet/tools/util/MetadataUtils/showDetails(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.hadoop.metadata.ColumnChunkMetaData)#org/apache/parquet/tools/util/MetadataUtils/showDetails(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.hadoop.metadata.ColumnChunkMetaData,boolean)
org/apache/parquet/tools/util/MetadataUtils/showDetails(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.schema.PrimitiveType)#org/apache/parquet/tools/util/MetadataUtils/showDetails(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.schema.PrimitiveType,int,org.apache.parquet.schema.MessageType,java.util.List)
org/apache/parquet/tools/util/MetadataUtils/showDetails(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.schema.MessageType)#java/util/ArrayList/ArrayList()
org/apache/parquet/tools/util/MetadataUtils/showDetails(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.schema.MessageType)#org/apache/parquet/tools/util/MetadataUtils/showDetails(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.schema.Type,int,org.apache.parquet.schema.MessageType,java.util.List)
org/apache/parquet/tools/util/MetadataUtils/showDetails(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.schema.MessageType)#org/apache/parquet/schema/GroupType/getFields()
org/apache/parquet/tools/util/MetadataUtils/showDetails(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.schema.GroupType)#org/apache/parquet/tools/util/MetadataUtils/showDetails(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.schema.GroupType,int,org.apache.parquet.schema.MessageType,java.util.List)
org/apache/parquet/tools/util/MetadataUtils/showDetails(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.hadoop.metadata.FileMetaData)#org/apache/parquet/hadoop/metadata/FileMetaData/getCreatedBy()
org/apache/parquet/tools/util/MetadataUtils/showDetails(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.hadoop.metadata.FileMetaData)#org/apache/parquet/tools/util/MetadataUtils/showDetails(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.schema.MessageType)
org/apache/parquet/tools/util/MetadataUtils/showDetails(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.hadoop.metadata.FileMetaData)#org/apache/parquet/schema/Type/getName()
org/apache/parquet/tools/util/MetadataUtils/showDetails(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.hadoop.metadata.FileMetaData)#java/util/Map/Entry/getValue()
org/apache/parquet/tools/util/MetadataUtils/showDetails(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.hadoop.metadata.FileMetaData)#org/apache/parquet/tools/util/PrettyPrintWriter/format(java.lang.String,java.lang.Object[])
org/apache/parquet/tools/util/MetadataUtils/showDetails(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.hadoop.metadata.FileMetaData)#org/apache/parquet/tools/util/PrettyPrintWriter/decrementTabLevel()
org/apache/parquet/tools/util/MetadataUtils/showDetails(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.hadoop.metadata.FileMetaData)#java/util/Map/Entry/getKey()
org/apache/parquet/tools/util/MetadataUtils/showDetails(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.hadoop.metadata.FileMetaData)#org/apache/parquet/tools/util/PrettyPrintWriter/print(java.lang.String)
org/apache/parquet/tools/util/MetadataUtils/showDetails(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.hadoop.metadata.FileMetaData)#java/util/Map/entrySet()
org/apache/parquet/tools/util/MetadataUtils/showDetails(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.hadoop.metadata.FileMetaData)#org/apache/parquet/tools/util/PrettyPrintWriter/println()
org/apache/parquet/tools/util/MetadataUtils/showDetails(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.hadoop.metadata.FileMetaData)#org/apache/parquet/tools/util/PrettyPrintWriter/rule(char)
org/apache/parquet/tools/util/MetadataUtils/showDetails(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.hadoop.metadata.FileMetaData)#org/apache/parquet/tools/util/PrettyPrintWriter/incrementTabLevel()
org/apache/parquet/tools/util/MetadataUtils/showDetails(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.hadoop.metadata.FileMetaData)#org/apache/parquet/hadoop/metadata/FileMetaData/getSchema()
org/apache/parquet/tools/util/MetadataUtils/showDetails(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.hadoop.metadata.FileMetaData)#org/apache/parquet/hadoop/metadata/FileMetaData/getKeyValueMetaData()
org/apache/parquet/tools/util/MetadataUtils/showDetails(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/ColumnDescriptor/getType()
org/apache/parquet/tools/util/MetadataUtils/showDetails(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/tools/util/PrettyPrintWriter/format(java.lang.String,java.lang.Object[])
org/apache/parquet/tools/util/MetadataUtils/showDetails(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/ColumnDescriptor/getPath()
org/apache/parquet/tools/util/MetadataUtils/showDetails(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/ColumnDescriptor/getMaxDefinitionLevel()
org/apache/parquet/tools/util/MetadataUtils/showDetails(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/ColumnDescriptor/getMaxRepetitionLevel()
org/apache/parquet/column/values/bitpacking/TestBitPacking/testTwo()#org/apache/parquet/column/values/bitpacking/TestBitPacking/validateEncodeDecode(int,int[],java.lang.String)
org/apache/parquet/column/values/bitpacking/TestBitPacking/testOne_9_0s()#org/apache/parquet/column/values/bitpacking/TestBitPacking/validateEncodeDecode(int,int[],java.lang.String)
org/apache/parquet/column/values/bitpacking/TestBitPacking/testOne_1()#org/apache/parquet/column/values/bitpacking/TestBitPacking/validateEncodeDecode(int,int[],java.lang.String)
org/apache/parquet/column/values/bitpacking/TestBitPacking/testSix()#org/apache/parquet/column/values/bitpacking/TestBitPacking/validateEncodeDecode(int,int[],java.lang.String)
org/apache/parquet/column/values/bitpacking/TestBitPacking/toString(int[])#java/lang/StringBuilder/append(java.lang.String)
org/apache/parquet/column/values/bitpacking/TestBitPacking/toString(int[])#java/lang/StringBuilder/append(int)
org/apache/parquet/column/values/bitpacking/TestBitPacking/toString(int[])#java/lang/StringBuilder/StringBuilder()
org/apache/parquet/column/values/bitpacking/TestBitPacking/toString(int[])#java/lang/StringBuilder/toString()
org/apache/parquet/column/values/bitpacking/TestBitPacking/testOne()#org/apache/parquet/column/values/bitpacking/TestBitPacking/validateEncodeDecode(int,int[],java.lang.String)
org/apache/parquet/column/values/bitpacking/TestBitPacking/testOne_1_1()#org/apache/parquet/column/values/bitpacking/TestBitPacking/validateEncodeDecode(int,int[],java.lang.String)
org/apache/parquet/column/values/bitpacking/TestBitPacking/testSeven()#org/apache/parquet/column/values/bitpacking/TestBitPacking/validateEncodeDecode(int,int[],java.lang.String)
org/apache/parquet/column/values/bitpacking/TestBitPacking/testOne_9_1s()#org/apache/parquet/column/values/bitpacking/TestBitPacking/validateEncodeDecode(int,int[],java.lang.String)
org/apache/parquet/column/values/bitpacking/TestBitPacking/testFour()#org/apache/parquet/column/values/bitpacking/TestBitPacking/validateEncodeDecode(int,int[],java.lang.String)
org/apache/parquet/column/values/bitpacking/TestBitPacking/testOne_9_0s_1_1()#org/apache/parquet/column/values/bitpacking/TestBitPacking/validateEncodeDecode(int,int[],java.lang.String)
org/apache/parquet/column/values/bitpacking/TestBitPacking/testZero()#org/apache/parquet/column/values/bitpacking/TestBitPacking/validateEncodeDecode(int,int[],java.lang.String)
org/apache/parquet/column/values/bitpacking/TestBitPacking/testOne_7_0s_1_1()#org/apache/parquet/column/values/bitpacking/TestBitPacking/validateEncodeDecode(int,int[],java.lang.String)
org/apache/parquet/column/values/bitpacking/TestBitPacking/validateEncodeDecode(int,int[],java.lang.String)#org/apache/parquet/column/values/bitpacking/BitPacking/getBitPackingWriter(int,java.io.OutputStream)
org/apache/parquet/column/values/bitpacking/TestBitPacking/validateEncodeDecode(int,int[],java.lang.String)#org/apache/parquet/column/values/bitpacking/BitPacking/createBitPackingReader(int,java.io.InputStream,long)
org/apache/parquet/column/values/bitpacking/TestBitPacking/validateEncodeDecode(int,int[],java.lang.String)#org/apache/parquet/column/values/bitpacking/BitPacking/BitPackingWriter/finish()
org/apache/parquet/column/values/bitpacking/TestBitPacking/validateEncodeDecode(int,int[],java.lang.String)#java/io/ByteArrayInputStream/ByteArrayInputStream(byte[])
org/apache/parquet/column/values/bitpacking/TestBitPacking/validateEncodeDecode(int,int[],java.lang.String)#org/apache/parquet/column/values/bitpacking/TestBitPacking/toString(byte[])
org/apache/parquet/column/values/bitpacking/TestBitPacking/validateEncodeDecode(int,int[],java.lang.String)#org/apache/parquet/column/values/bitpacking/BitPacking/BitPackingWriter/write(int)
org/apache/parquet/column/values/bitpacking/TestBitPacking/validateEncodeDecode(int,int[],java.lang.String)#java/io/ByteArrayOutputStream/toByteArray()
org/apache/parquet/column/values/bitpacking/TestBitPacking/validateEncodeDecode(int,int[],java.lang.String)#org/apache/parquet/column/values/bitpacking/TestBitPacking/toString(int[])
org/apache/parquet/column/values/bitpacking/TestBitPacking/validateEncodeDecode(int,int[],java.lang.String)#org/apache/parquet/column/values/bitpacking/BitPacking/BitPackingReader/read()
org/apache/parquet/column/values/bitpacking/TestBitPacking/validateEncodeDecode(int,int[],java.lang.String)#java/io/ByteArrayOutputStream/ByteArrayOutputStream()
org/apache/parquet/column/values/bitpacking/TestBitPacking/testOne_0()#org/apache/parquet/column/values/bitpacking/TestBitPacking/validateEncodeDecode(int,int[],java.lang.String)
org/apache/parquet/column/values/bitpacking/TestBitPacking/toString(byte[])#java/lang/StringBuilder/append(java.lang.String)
org/apache/parquet/column/values/bitpacking/TestBitPacking/toString(byte[])#java/lang/Integer/toBinaryString(int)
org/apache/parquet/column/values/bitpacking/TestBitPacking/toString(byte[])#java/lang/String/length()
org/apache/parquet/column/values/bitpacking/TestBitPacking/toString(byte[])#java/lang/StringBuilder/StringBuilder()
org/apache/parquet/column/values/bitpacking/TestBitPacking/toString(byte[])#java/lang/StringBuilder/toString()
org/apache/parquet/column/values/bitpacking/TestBitPacking/testFive()#org/apache/parquet/column/values/bitpacking/TestBitPacking/validateEncodeDecode(int,int[],java.lang.String)
org/apache/parquet/column/values/bitpacking/TestBitPacking/testThree()#org/apache/parquet/column/values/bitpacking/TestBitPacking/validateEncodeDecode(int,int[],java.lang.String)
org/apache/parquet/column/values/bitpacking/TestBitPacking/testOne_0_0()#org/apache/parquet/column/values/bitpacking/TestBitPacking/validateEncodeDecode(int,int[],java.lang.String)
org/apache/parquet/column/values/bitpacking/TestBitPacking/toString(long[])#java/lang/StringBuilder/append(java.lang.String)
org/apache/parquet/column/values/bitpacking/TestBitPacking/toString(long[])#java/lang/StringBuilder/append(long)
org/apache/parquet/column/values/bitpacking/TestBitPacking/toString(long[])#java/lang/StringBuilder/StringBuilder()
org/apache/parquet/column/values/bitpacking/TestBitPacking/toString(long[])#java/lang/StringBuilder/toString()
org/apache/parquet/column/impl/ColumnWriteStoreV1/getColumnDescriptors()#java/util/Map/keySet()
org/apache/parquet/column/impl/ColumnWriteStoreV1/flush()#java/util/Map/values()
org/apache/parquet/column/impl/ColumnWriteStoreV1/flush()#org/apache/parquet/column/impl/ColumnWriterV1/flush()
org/apache/parquet/column/impl/ColumnWriteStoreV1/memUsageString()#java/lang/StringBuilder/append(java.lang.String)
org/apache/parquet/column/impl/ColumnWriteStoreV1/memUsageString()#org/apache/parquet/column/impl/ColumnWriterV1/memUsageString(java.lang.String)
org/apache/parquet/column/impl/ColumnWriteStoreV1/memUsageString()#java/lang/StringBuilder/toString()
org/apache/parquet/column/impl/ColumnWriteStoreV1/memUsageString()#java/util/Map/values()
org/apache/parquet/column/impl/ColumnWriteStoreV1/memUsageString()#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/apache/parquet/column/impl/ColumnWriteStoreV1/newMemColumn(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/page/PageWriteStore/getPageWriter(org.apache.parquet.column.ColumnDescriptor)
org/apache/parquet/column/impl/ColumnWriteStoreV1/newMemColumn(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/impl/ColumnWriterV1/ColumnWriterV1(org.apache.parquet.column.ColumnDescriptor,org.apache.parquet.column.page.PageWriter,org.apache.parquet.column.ParquetProperties)
org/apache/parquet/column/impl/ColumnWriteStoreV1/getColumnWriter(org.apache.parquet.column.ColumnDescriptor)#java/util/Map/get(java.lang.Object)
org/apache/parquet/column/impl/ColumnWriteStoreV1/getColumnWriter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/impl/ColumnWriteStoreV1/newMemColumn(org.apache.parquet.column.ColumnDescriptor)
org/apache/parquet/column/impl/ColumnWriteStoreV1/getColumnWriter(org.apache.parquet.column.ColumnDescriptor)#java/util/Map/put(K,V)
org/apache/parquet/column/impl/ColumnWriteStoreV1/toString()#java/util/Map/Entry/getValue()
org/apache/parquet/column/impl/ColumnWriteStoreV1/toString()#java/lang/StringBuilder/append(long)
org/apache/parquet/column/impl/ColumnWriteStoreV1/toString()#java/util/Map/entrySet()
org/apache/parquet/column/impl/ColumnWriteStoreV1/toString()#java/lang/StringBuilder/toString()
org/apache/parquet/column/impl/ColumnWriteStoreV1/toString()#java/util/Arrays/toString(java.lang.Object[])
org/apache/parquet/column/impl/ColumnWriteStoreV1/toString()#java/lang/StringBuilder/append(java.lang.String)
org/apache/parquet/column/impl/ColumnWriteStoreV1/toString()#org/apache/parquet/column/ColumnDescriptor/getPath()
org/apache/parquet/column/impl/ColumnWriteStoreV1/toString()#java/util/Map/Entry/getKey()
org/apache/parquet/column/impl/ColumnWriteStoreV1/toString()#java/lang/StringBuilder/StringBuilder()
org/apache/parquet/column/impl/ColumnWriteStoreV1/toString()#org/apache/parquet/column/impl/ColumnWriterV1/getBufferedSizeInMemory()
org/apache/parquet/column/impl/ColumnWriteStoreV1/close()#java/util/Map/values()
org/apache/parquet/column/impl/ColumnWriteStoreV1/close()#org/apache/parquet/column/impl/ColumnWriterV1/close()
org/apache/parquet/column/impl/ColumnWriteStoreV1/getAllocatedSize()#org/apache/parquet/column/impl/ColumnWriterV1/allocatedSize()
org/apache/parquet/column/impl/ColumnWriteStoreV1/getAllocatedSize()#java/util/Map/values()
org/apache/parquet/column/impl/ColumnWriteStoreV1/maxColMemSize()#org/apache/parquet/column/impl/ColumnWriterV1/getBufferedSizeInMemory()
org/apache/parquet/column/impl/ColumnWriteStoreV1/maxColMemSize()#java/lang/Math/max(long,long)
org/apache/parquet/column/impl/ColumnWriteStoreV1/maxColMemSize()#java/util/Map/values()
org/apache/parquet/column/impl/ColumnWriteStoreV1/getBufferedSize()#java/util/Map/values()
org/apache/parquet/column/impl/ColumnWriteStoreV1/getBufferedSize()#org/apache/parquet/column/impl/ColumnWriterV1/getBufferedSizeInMemory()
org/apache/parquet/thrift/struct/CompatibilityChecker/checkCompatibility(org.apache.parquet.thrift.struct.ThriftType.StructType,org.apache.parquet.thrift.struct.ThriftType.StructType)#org/apache/parquet/thrift/struct/State/State(org.apache.parquet.thrift.struct.ThriftType,org.apache.parquet.thrift.projection.FieldsPath)
org/apache/parquet/thrift/struct/CompatibilityChecker/checkCompatibility(org.apache.parquet.thrift.struct.ThriftType.StructType,org.apache.parquet.thrift.struct.ThriftType.StructType)#org/apache/parquet/thrift/struct/ThriftType/StructType/accept(org.apache.parquet.thrift.struct.ThriftType.StateVisitor,S)
org/apache/parquet/thrift/struct/CompatibilityChecker/checkCompatibility(org.apache.parquet.thrift.struct.ThriftType.StructType,org.apache.parquet.thrift.struct.ThriftType.StructType)#org/apache/parquet/thrift/projection/FieldsPath/FieldsPath()
org/apache/parquet/thrift/struct/CompatibilityChecker/checkCompatibility(org.apache.parquet.thrift.struct.ThriftType.StructType,org.apache.parquet.thrift.struct.ThriftType.StructType)#org/apache/parquet/thrift/struct/CompatibleCheckerVisitor/getReport()
org/apache/parquet/thrift/struct/CompatibilityChecker/checkCompatibility(org.apache.parquet.thrift.struct.ThriftType.StructType,org.apache.parquet.thrift.struct.ThriftType.StructType)#org/apache/parquet/thrift/struct/CompatibleCheckerVisitor/CompatibleCheckerVisitor()
org/apache/parquet/column/values/deltalengthbytearray/TestDeltaLengthByteArray/testLengths()#org/apache/parquet/column/values/deltalengthbytearray/DeltaLengthByteArrayValuesWriter/getBytes()
org/apache/parquet/column/values/deltalengthbytearray/TestDeltaLengthByteArray/testLengths()#org/apache/parquet/column/values/deltalengthbytearray/TestDeltaLengthByteArray/getDeltaLengthByteArrayValuesWriter()
org/apache/parquet/column/values/deltalengthbytearray/TestDeltaLengthByteArray/testLengths()#org/apache/parquet/column/values/Utils/writeData(org.apache.parquet.column.values.ValuesWriter,java.lang.String[])
org/apache/parquet/column/values/deltalengthbytearray/TestDeltaLengthByteArray/testLengths()#org/apache/parquet/column/values/Utils/readInts(org.apache.parquet.column.values.ValuesReader,byte[],int)
org/apache/parquet/column/values/deltalengthbytearray/TestDeltaLengthByteArray/testLengths()#java/lang/String/length()
org/apache/parquet/column/values/deltalengthbytearray/TestDeltaLengthByteArray/testLengths()#org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesReader/DeltaBinaryPackingValuesReader()
org/apache/parquet/column/values/deltalengthbytearray/TestDeltaLengthByteArray/testLengths()#org/apache/parquet/bytes/BytesInput/toByteArray()
org/apache/parquet/column/values/deltalengthbytearray/TestDeltaLengthByteArray/testRandomStrings()#org/apache/parquet/column/values/deltalengthbytearray/DeltaLengthByteArrayValuesWriter/getBytes()
org/apache/parquet/column/values/deltalengthbytearray/TestDeltaLengthByteArray/testRandomStrings()#org/apache/parquet/column/values/deltalengthbytearray/TestDeltaLengthByteArray/getDeltaLengthByteArrayValuesWriter()
org/apache/parquet/column/values/deltalengthbytearray/TestDeltaLengthByteArray/testRandomStrings()#org/apache/parquet/column/values/Utils/writeData(org.apache.parquet.column.values.ValuesWriter,java.lang.String[])
org/apache/parquet/column/values/deltalengthbytearray/TestDeltaLengthByteArray/testRandomStrings()#org/apache/parquet/column/values/Utils/readData(org.apache.parquet.column.values.ValuesReader,byte[],int)
org/apache/parquet/column/values/deltalengthbytearray/TestDeltaLengthByteArray/testRandomStrings()#org/apache/parquet/io/api/Binary/fromString(java.lang.String)
org/apache/parquet/column/values/deltalengthbytearray/TestDeltaLengthByteArray/testRandomStrings()#org/apache/parquet/column/values/Utils/getRandomStringSamples(int,int)
org/apache/parquet/column/values/deltalengthbytearray/TestDeltaLengthByteArray/testRandomStrings()#org/apache/parquet/bytes/BytesInput/toByteArray()
org/apache/parquet/column/values/deltalengthbytearray/TestDeltaLengthByteArray/testRandomStrings()#org/apache/parquet/column/values/deltalengthbytearray/DeltaLengthByteArrayValuesReader/DeltaLengthByteArrayValuesReader()
org/apache/parquet/column/values/deltalengthbytearray/TestDeltaLengthByteArray/getDeltaLengthByteArrayValuesWriter()#org/apache/parquet/column/values/deltalengthbytearray/DeltaLengthByteArrayValuesWriter/DeltaLengthByteArrayValuesWriter(int,int,org.apache.parquet.bytes.ByteBufferAllocator)
org/apache/parquet/column/values/deltalengthbytearray/TestDeltaLengthByteArray/getDeltaLengthByteArrayValuesWriter()#org/apache/parquet/bytes/DirectByteBufferAllocator/DirectByteBufferAllocator()
org/apache/parquet/column/values/deltalengthbytearray/TestDeltaLengthByteArray/testSerialization()#org/apache/parquet/column/values/deltalengthbytearray/DeltaLengthByteArrayValuesWriter/getBytes()
org/apache/parquet/column/values/deltalengthbytearray/TestDeltaLengthByteArray/testSerialization()#org/apache/parquet/column/values/deltalengthbytearray/TestDeltaLengthByteArray/getDeltaLengthByteArrayValuesWriter()
org/apache/parquet/column/values/deltalengthbytearray/TestDeltaLengthByteArray/testSerialization()#org/apache/parquet/column/values/Utils/writeData(org.apache.parquet.column.values.ValuesWriter,java.lang.String[])
org/apache/parquet/column/values/deltalengthbytearray/TestDeltaLengthByteArray/testSerialization()#org/apache/parquet/column/values/Utils/readData(org.apache.parquet.column.values.ValuesReader,byte[],int)
org/apache/parquet/column/values/deltalengthbytearray/TestDeltaLengthByteArray/testSerialization()#org/apache/parquet/io/api/Binary/fromString(java.lang.String)
org/apache/parquet/column/values/deltalengthbytearray/TestDeltaLengthByteArray/testSerialization()#org/apache/parquet/bytes/BytesInput/toByteArray()
org/apache/parquet/column/values/deltalengthbytearray/TestDeltaLengthByteArray/testSerialization()#org/apache/parquet/column/values/deltalengthbytearray/DeltaLengthByteArrayValuesReader/DeltaLengthByteArrayValuesReader()
org/apache/parquet/cascading/TestParquetTupleScheme/createFileForRead()#org/apache/parquet/hadoop/util/ContextUtil/newTaskAttemptContext(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.util.TaskAttemptID)
org/apache/parquet/cascading/TestParquetTupleScheme/createFileForRead()#java/io/ByteArrayOutputStream/reset()
org/apache/parquet/cascading/TestParquetTupleScheme/createFileForRead()#org/apache/parquet/hadoop/thrift/ThriftToParquetFileWriter/close()
org/apache/parquet/cascading/TestParquetTupleScheme/createFileForRead()#java/io/ByteArrayOutputStream/toByteArray()
org/apache/parquet/cascading/TestParquetTupleScheme/createFileForRead()#java/io/ByteArrayOutputStream/ByteArrayOutputStream()
org/apache/parquet/cascading/TestParquetTupleScheme/createFileForRead()#org/apache/parquet/hadoop/thrift/ThriftToParquetFileWriter/write(org.apache.parquet.hadoop.thrift.BytesWritable)
org/apache/parquet/cascading/TestParquetTupleScheme/createFileForRead()#org/apache/parquet/hadoop/thrift/ThriftToParquetFileWriter/ThriftToParquetFileWriter(org.apache.parquet.hadoop.Path,org.apache.parquet.hadoop.TaskAttemptContext,org.apache.parquet.hadoop.thrift.TProtocolFactory,java.lang.Class)
org/apache/parquet/cascading/TestParquetTupleScheme/testReadPattern()#org/apache/parquet/cascading/TestParquetTupleScheme/testReadWrite(java.lang.String)
org/apache/parquet/cascading/TestParquetTupleScheme/testFieldProjection()#org/apache/parquet/cascading/ParquetTupleScheme/ParquetTupleScheme(org.apache.parquet.cascading.Fields)
org/apache/parquet/cascading/TestParquetTupleScheme/testFieldProjection()#org/apache/parquet/cascading/TestParquetTupleScheme/createFileForRead()
org/apache/parquet/cascading/TestParquetTupleScheme/testFieldProjection()#java/io/File/File(java.lang.String)
org/apache/parquet/cascading/TestParquetTupleScheme/testFieldProjection()#org/apache/parquet/cascading/TestParquetTupleScheme/ProjectedTupleFunction/ProjectedTupleFunction()
org/apache/parquet/cascading/TestParquetTupleScheme/testFieldProjection()#java/lang/Object/Object()
org/apache/parquet/cascading/TestParquetTupleScheme/testReadWrite(java.lang.String)#org/apache/parquet/cascading/ParquetTupleScheme/ParquetTupleScheme(org.apache.parquet.cascading.Fields)
org/apache/parquet/cascading/TestParquetTupleScheme/testReadWrite(java.lang.String)#org/apache/parquet/cascading/TestParquetTupleScheme/createFileForRead()
org/apache/parquet/cascading/TestParquetTupleScheme/testReadWrite(java.lang.String)#java/io/File/File(java.lang.String)
org/apache/parquet/cascading/TestParquetTupleScheme/testReadWrite(java.lang.String)#org/apache/parquet/cascading/TestParquetTupleScheme/UnpackTupleFunction/UnpackTupleFunction()
org/apache/parquet/cascading/TestParquetTupleScheme/testReadWrite(java.lang.String)#java/lang/Object/Object()
org/apache/parquet/thrift/struct/ThriftType/I64Type/accept(org.apache.parquet.thrift.struct.ThriftType.TypeVisitor)#org/apache/parquet/thrift/struct/ThriftType/TypeVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.I64Type)
org/apache/parquet/thrift/struct/ThriftType/I64Type/accept(org.apache.parquet.thrift.struct.ThriftType.StateVisitor,S)#org/apache/parquet/thrift/struct/ThriftType/StateVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.I64Type,S)
org/apache/parquet/column/values/dictionary/TestDictionary/testSecondPageFallBack()#org/apache/parquet/column/values/plain/BinaryPlainValuesReader/BinaryPlainValuesReader()
org/apache/parquet/column/values/dictionary/TestDictionary/testSecondPageFallBack()#org/apache/parquet/column/values/dictionary/TestDictionary/checkRepeated(int,org.apache.parquet.bytes.BytesInput,org.apache.parquet.column.values.ValuesReader,java.lang.String)
org/apache/parquet/column/values/dictionary/TestDictionary/testSecondPageFallBack()#org/apache/parquet/column/values/dictionary/TestDictionary/writeRepeated(int,org.apache.parquet.column.values.ValuesWriter,java.lang.String)
org/apache/parquet/column/values/dictionary/TestDictionary/testSecondPageFallBack()#org/apache/parquet/column/values/dictionary/TestDictionary/checkDistinct(int,org.apache.parquet.bytes.BytesInput,org.apache.parquet.column.values.ValuesReader,java.lang.String)
org/apache/parquet/column/values/dictionary/TestDictionary/testSecondPageFallBack()#org/apache/parquet/column/values/dictionary/TestDictionary/writeDistinct(int,org.apache.parquet.column.values.ValuesWriter,java.lang.String)
org/apache/parquet/column/values/dictionary/TestDictionary/testSecondPageFallBack()#org/apache/parquet/column/values/dictionary/TestDictionary/newPlainBinaryDictionaryValuesWriter(int,int)
org/apache/parquet/column/values/dictionary/TestDictionary/testSecondPageFallBack()#org/apache/parquet/column/values/dictionary/TestDictionary/getBytesAndCheckEncoding(org.apache.parquet.column.values.ValuesWriter,org.apache.parquet.column.Encoding)
org/apache/parquet/column/values/dictionary/TestDictionary/testSecondPageFallBack()#org/apache/parquet/column/values/dictionary/TestDictionary/initDicReader(org.apache.parquet.column.values.ValuesWriter,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/column/values/dictionary/TestDictionary/testDoubleDictionary()#org/apache/parquet/column/values/dictionary/DictionaryValuesReader/readDouble()
org/apache/parquet/column/values/dictionary/TestDictionary/testDoubleDictionary()#org/apache/parquet/column/values/fallback/FallbackValuesWriter/writeDouble(double)
org/apache/parquet/column/values/dictionary/TestDictionary/testDoubleDictionary()#org/apache/parquet/column/values/dictionary/DictionaryValuesReader/initFromPage(int,java.nio.ByteBuffer,int)
org/apache/parquet/column/values/dictionary/TestDictionary/testDoubleDictionary()#org/apache/parquet/column/values/dictionary/DictionaryValuesWriter/PlainDoubleDictionaryValuesWriter/getDictionarySize()
org/apache/parquet/column/values/dictionary/TestDictionary/testDoubleDictionary()#org/apache/parquet/bytes/BytesInput/toByteBuffer()
org/apache/parquet/column/values/dictionary/TestDictionary/testDoubleDictionary()#org/apache/parquet/column/values/dictionary/TestDictionary/getBytesAndCheckEncoding(org.apache.parquet.column.values.ValuesWriter,org.apache.parquet.column.Encoding)
org/apache/parquet/column/values/dictionary/TestDictionary/testDoubleDictionary()#org/apache/parquet/column/values/dictionary/TestDictionary/initDicReader(org.apache.parquet.column.values.ValuesWriter,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/column/values/dictionary/TestDictionary/testDoubleDictionary()#org/apache/parquet/column/values/dictionary/TestDictionary/newPlainDoubleDictionaryValuesWriter(int,int)
org/apache/parquet/column/values/dictionary/TestDictionary/testFloatDictionaryFallBack()#org/apache/parquet/column/values/fallback/FallbackValuesWriter/getBufferedSize()
org/apache/parquet/column/values/dictionary/TestDictionary/testFloatDictionaryFallBack()#org/apache/parquet/column/values/plain/PlainValuesReader/FloatPlainValuesReader/FloatPlainValuesReader()
org/apache/parquet/column/values/dictionary/TestDictionary/testFloatDictionaryFallBack()#org/apache/parquet/column/values/fallback/FallbackValuesWriter/resetDictionary()
org/apache/parquet/column/values/dictionary/TestDictionary/testFloatDictionaryFallBack()#org/apache/parquet/column/values/dictionary/TestDictionary/newPlainFloatDictionaryValuesWriter(int,int)
org/apache/parquet/column/values/dictionary/TestDictionary/testFloatDictionaryFallBack()#org/apache/parquet/column/values/fallback/FallbackValuesWriter/reset()
org/apache/parquet/column/values/dictionary/TestDictionary/testFloatDictionaryFallBack()#org/apache/parquet/column/values/dictionary/TestDictionary/roundTripFloat(org.apache.parquet.column.values.fallback.FallbackValuesWriter,org.apache.parquet.column.values.ValuesReader,int)
org/apache/parquet/column/values/dictionary/TestDictionary/writeDistinct(int,org.apache.parquet.column.values.ValuesWriter,java.lang.String)#org/apache/parquet/column/values/ValuesWriter/writeBytes(org.apache.parquet.io.api.Binary)
org/apache/parquet/column/values/dictionary/TestDictionary/writeDistinct(int,org.apache.parquet.column.values.ValuesWriter,java.lang.String)#org/apache/parquet/io/api/Binary/fromString(java.lang.String)
org/apache/parquet/column/values/dictionary/TestDictionary/newPlainIntegerDictionaryValuesWriter(int,int)#org/apache/parquet/column/values/dictionary/TestDictionary/plainFallBack(I,int)
org/apache/parquet/column/values/dictionary/TestDictionary/newPlainIntegerDictionaryValuesWriter(int,int)#org/apache/parquet/bytes/DirectByteBufferAllocator/DirectByteBufferAllocator()
org/apache/parquet/column/values/dictionary/TestDictionary/newPlainIntegerDictionaryValuesWriter(int,int)#org/apache/parquet/column/values/dictionary/DictionaryValuesWriter/PlainIntegerDictionaryValuesWriter/PlainIntegerDictionaryValuesWriter(int,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding,org.apache.parquet.bytes.ByteBufferAllocator)
org/apache/parquet/column/values/dictionary/TestDictionary/newPlainFloatDictionaryValuesWriter(int,int)#org/apache/parquet/column/values/dictionary/TestDictionary/plainFallBack(I,int)
org/apache/parquet/column/values/dictionary/TestDictionary/newPlainFloatDictionaryValuesWriter(int,int)#org/apache/parquet/bytes/DirectByteBufferAllocator/DirectByteBufferAllocator()
org/apache/parquet/column/values/dictionary/TestDictionary/newPlainFloatDictionaryValuesWriter(int,int)#org/apache/parquet/column/values/dictionary/DictionaryValuesWriter/PlainFloatDictionaryValuesWriter/PlainFloatDictionaryValuesWriter(int,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding,org.apache.parquet.bytes.ByteBufferAllocator)
org/apache/parquet/column/values/dictionary/TestDictionary/testLongDictionary()#org/apache/parquet/column/values/fallback/FallbackValuesWriter/writeLong(long)
org/apache/parquet/column/values/dictionary/TestDictionary/testLongDictionary()#org/apache/parquet/column/values/dictionary/DictionaryValuesReader/initFromPage(int,java.nio.ByteBuffer,int)
org/apache/parquet/column/values/dictionary/TestDictionary/testLongDictionary()#org/apache/parquet/column/values/dictionary/DictionaryValuesReader/readLong()
org/apache/parquet/column/values/dictionary/TestDictionary/testLongDictionary()#org/apache/parquet/column/values/dictionary/TestDictionary/newPlainLongDictionaryValuesWriter(int,int)
org/apache/parquet/column/values/dictionary/TestDictionary/testLongDictionary()#org/apache/parquet/bytes/BytesInput/toByteBuffer()
org/apache/parquet/column/values/dictionary/TestDictionary/testLongDictionary()#org/apache/parquet/column/values/dictionary/DictionaryValuesWriter/PlainLongDictionaryValuesWriter/getDictionarySize()
org/apache/parquet/column/values/dictionary/TestDictionary/testLongDictionary()#org/apache/parquet/column/values/dictionary/TestDictionary/getBytesAndCheckEncoding(org.apache.parquet.column.values.ValuesWriter,org.apache.parquet.column.Encoding)
org/apache/parquet/column/values/dictionary/TestDictionary/testLongDictionary()#org/apache/parquet/column/values/dictionary/TestDictionary/initDicReader(org.apache.parquet.column.values.ValuesWriter,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/column/values/dictionary/TestDictionary/testLongDictionaryFallBack()#org/apache/parquet/column/values/fallback/FallbackValuesWriter/getBufferedSize()
org/apache/parquet/column/values/dictionary/TestDictionary/testLongDictionaryFallBack()#org/apache/parquet/column/values/plain/PlainValuesReader/LongPlainValuesReader/LongPlainValuesReader()
org/apache/parquet/column/values/dictionary/TestDictionary/testLongDictionaryFallBack()#org/apache/parquet/column/values/fallback/FallbackValuesWriter/resetDictionary()
org/apache/parquet/column/values/dictionary/TestDictionary/testLongDictionaryFallBack()#org/apache/parquet/column/values/dictionary/TestDictionary/newPlainLongDictionaryValuesWriter(int,int)
org/apache/parquet/column/values/dictionary/TestDictionary/testLongDictionaryFallBack()#org/apache/parquet/column/values/dictionary/TestDictionary/roundTripLong(org.apache.parquet.column.values.fallback.FallbackValuesWriter,org.apache.parquet.column.values.ValuesReader,int)
org/apache/parquet/column/values/dictionary/TestDictionary/testLongDictionaryFallBack()#org/apache/parquet/column/values/fallback/FallbackValuesWriter/reset()
org/apache/parquet/column/values/dictionary/TestDictionary/testFirstPageFallBack()#org/apache/parquet/column/values/plain/BinaryPlainValuesReader/BinaryPlainValuesReader()
org/apache/parquet/column/values/dictionary/TestDictionary/testFirstPageFallBack()#org/apache/parquet/column/values/dictionary/TestDictionary/checkRepeated(int,org.apache.parquet.bytes.BytesInput,org.apache.parquet.column.values.ValuesReader,java.lang.String)
org/apache/parquet/column/values/dictionary/TestDictionary/testFirstPageFallBack()#org/apache/parquet/column/values/dictionary/TestDictionary/writeRepeated(int,org.apache.parquet.column.values.ValuesWriter,java.lang.String)
org/apache/parquet/column/values/dictionary/TestDictionary/testFirstPageFallBack()#org/apache/parquet/column/values/dictionary/TestDictionary/checkDistinct(int,org.apache.parquet.bytes.BytesInput,org.apache.parquet.column.values.ValuesReader,java.lang.String)
org/apache/parquet/column/values/dictionary/TestDictionary/testFirstPageFallBack()#org/apache/parquet/column/values/dictionary/TestDictionary/writeDistinct(int,org.apache.parquet.column.values.ValuesWriter,java.lang.String)
org/apache/parquet/column/values/dictionary/TestDictionary/testFirstPageFallBack()#org/apache/parquet/column/values/dictionary/TestDictionary/newPlainBinaryDictionaryValuesWriter(int,int)
org/apache/parquet/column/values/dictionary/TestDictionary/testFirstPageFallBack()#org/apache/parquet/column/values/dictionary/TestDictionary/getBytesAndCheckEncoding(org.apache.parquet.column.values.ValuesWriter,org.apache.parquet.column.Encoding)
org/apache/parquet/column/values/dictionary/TestDictionary/roundTripLong(org.apache.parquet.column.values.fallback.FallbackValuesWriter,org.apache.parquet.column.values.ValuesReader,int)#org/apache/parquet/column/values/fallback/FallbackValuesWriter/getBytes()
org/apache/parquet/column/values/dictionary/TestDictionary/roundTripLong(org.apache.parquet.column.values.fallback.FallbackValuesWriter,org.apache.parquet.column.values.ValuesReader,int)#org/apache/parquet/column/values/fallback/FallbackValuesWriter/writeLong(long)
org/apache/parquet/column/values/dictionary/TestDictionary/roundTripLong(org.apache.parquet.column.values.fallback.FallbackValuesWriter,org.apache.parquet.column.values.ValuesReader,int)#org/apache/parquet/column/values/ValuesReader/initFromPage(int,java.nio.ByteBuffer,int)
org/apache/parquet/column/values/dictionary/TestDictionary/roundTripLong(org.apache.parquet.column.values.fallback.FallbackValuesWriter,org.apache.parquet.column.values.ValuesReader,int)#org/apache/parquet/column/values/ValuesReader/readLong()
org/apache/parquet/column/values/dictionary/TestDictionary/roundTripLong(org.apache.parquet.column.values.fallback.FallbackValuesWriter,org.apache.parquet.column.values.ValuesReader,int)#org/apache/parquet/column/values/fallback/FallbackValuesWriter/getEncoding()
org/apache/parquet/column/values/dictionary/TestDictionary/roundTripLong(org.apache.parquet.column.values.fallback.FallbackValuesWriter,org.apache.parquet.column.values.ValuesReader,int)#org/apache/parquet/bytes/BytesInput/toByteBuffer()
org/apache/parquet/column/values/dictionary/TestDictionary/testBinaryDictionary()#org/apache/parquet/column/values/plain/BinaryPlainValuesReader/BinaryPlainValuesReader()
org/apache/parquet/column/values/dictionary/TestDictionary/testBinaryDictionary()#org/apache/parquet/column/values/dictionary/TestDictionary/checkRepeated(int,org.apache.parquet.bytes.BytesInput,org.apache.parquet.column.values.ValuesReader,java.lang.String)
org/apache/parquet/column/values/dictionary/TestDictionary/testBinaryDictionary()#org/apache/parquet/column/values/dictionary/TestDictionary/writeRepeated(int,org.apache.parquet.column.values.ValuesWriter,java.lang.String)
org/apache/parquet/column/values/dictionary/TestDictionary/testBinaryDictionary()#org/apache/parquet/column/values/dictionary/TestDictionary/checkDistinct(int,org.apache.parquet.bytes.BytesInput,org.apache.parquet.column.values.ValuesReader,java.lang.String)
org/apache/parquet/column/values/dictionary/TestDictionary/testBinaryDictionary()#org/apache/parquet/column/values/dictionary/TestDictionary/writeDistinct(int,org.apache.parquet.column.values.ValuesWriter,java.lang.String)
org/apache/parquet/column/values/dictionary/TestDictionary/testBinaryDictionary()#org/apache/parquet/column/values/dictionary/TestDictionary/newPlainBinaryDictionaryValuesWriter(int,int)
org/apache/parquet/column/values/dictionary/TestDictionary/testBinaryDictionary()#org/apache/parquet/column/values/dictionary/TestDictionary/getBytesAndCheckEncoding(org.apache.parquet.column.values.ValuesWriter,org.apache.parquet.column.Encoding)
org/apache/parquet/column/values/dictionary/TestDictionary/testBinaryDictionary()#org/apache/parquet/column/values/dictionary/TestDictionary/initDicReader(org.apache.parquet.column.values.ValuesWriter,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/column/values/dictionary/TestDictionary/roundTripFloat(org.apache.parquet.column.values.fallback.FallbackValuesWriter,org.apache.parquet.column.values.ValuesReader,int)#org/apache/parquet/column/values/ValuesReader/initFromPage(int,java.nio.ByteBuffer,int)
org/apache/parquet/column/values/dictionary/TestDictionary/roundTripFloat(org.apache.parquet.column.values.fallback.FallbackValuesWriter,org.apache.parquet.column.values.ValuesReader,int)#org/apache/parquet/column/values/fallback/FallbackValuesWriter/getEncoding()
org/apache/parquet/column/values/dictionary/TestDictionary/roundTripFloat(org.apache.parquet.column.values.fallback.FallbackValuesWriter,org.apache.parquet.column.values.ValuesReader,int)#org/apache/parquet/bytes/BytesInput/toByteBuffer()
org/apache/parquet/column/values/dictionary/TestDictionary/roundTripFloat(org.apache.parquet.column.values.fallback.FallbackValuesWriter,org.apache.parquet.column.values.ValuesReader,int)#org/apache/parquet/column/values/ValuesReader/readFloat()
org/apache/parquet/column/values/dictionary/TestDictionary/roundTripFloat(org.apache.parquet.column.values.fallback.FallbackValuesWriter,org.apache.parquet.column.values.ValuesReader,int)#org/apache/parquet/column/values/fallback/FallbackValuesWriter/writeFloat(float)
org/apache/parquet/column/values/dictionary/TestDictionary/roundTripFloat(org.apache.parquet.column.values.fallback.FallbackValuesWriter,org.apache.parquet.column.values.ValuesReader,int)#org/apache/parquet/column/values/fallback/FallbackValuesWriter/getBytes()
org/apache/parquet/column/values/dictionary/TestDictionary/testIntDictionaryFallBack()#org/apache/parquet/column/values/fallback/FallbackValuesWriter/getBufferedSize()
org/apache/parquet/column/values/dictionary/TestDictionary/testIntDictionaryFallBack()#org/apache/parquet/column/values/plain/PlainValuesReader/IntegerPlainValuesReader/IntegerPlainValuesReader()
org/apache/parquet/column/values/dictionary/TestDictionary/testIntDictionaryFallBack()#org/apache/parquet/column/values/dictionary/TestDictionary/roundTripInt(org.apache.parquet.column.values.fallback.FallbackValuesWriter,org.apache.parquet.column.values.ValuesReader,int)
org/apache/parquet/column/values/dictionary/TestDictionary/testIntDictionaryFallBack()#org/apache/parquet/column/values/dictionary/TestDictionary/newPlainIntegerDictionaryValuesWriter(int,int)
org/apache/parquet/column/values/dictionary/TestDictionary/testIntDictionaryFallBack()#org/apache/parquet/column/values/fallback/FallbackValuesWriter/resetDictionary()
org/apache/parquet/column/values/dictionary/TestDictionary/testIntDictionaryFallBack()#org/apache/parquet/column/values/fallback/FallbackValuesWriter/reset()
org/apache/parquet/column/values/dictionary/TestDictionary/testFloatDictionary()#org/apache/parquet/column/values/dictionary/DictionaryValuesReader/readFloat()
org/apache/parquet/column/values/dictionary/TestDictionary/testFloatDictionary()#org/apache/parquet/column/values/fallback/FallbackValuesWriter/writeFloat(float)
org/apache/parquet/column/values/dictionary/TestDictionary/testFloatDictionary()#org/apache/parquet/column/values/dictionary/DictionaryValuesWriter/PlainFloatDictionaryValuesWriter/getDictionarySize()
org/apache/parquet/column/values/dictionary/TestDictionary/testFloatDictionary()#org/apache/parquet/column/values/dictionary/DictionaryValuesReader/initFromPage(int,java.nio.ByteBuffer,int)
org/apache/parquet/column/values/dictionary/TestDictionary/testFloatDictionary()#org/apache/parquet/column/values/dictionary/TestDictionary/newPlainFloatDictionaryValuesWriter(int,int)
org/apache/parquet/column/values/dictionary/TestDictionary/testFloatDictionary()#org/apache/parquet/bytes/BytesInput/toByteBuffer()
org/apache/parquet/column/values/dictionary/TestDictionary/testFloatDictionary()#org/apache/parquet/column/values/dictionary/TestDictionary/getBytesAndCheckEncoding(org.apache.parquet.column.values.ValuesWriter,org.apache.parquet.column.Encoding)
org/apache/parquet/column/values/dictionary/TestDictionary/testFloatDictionary()#org/apache/parquet/column/values/dictionary/TestDictionary/initDicReader(org.apache.parquet.column.values.ValuesWriter,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/column/values/dictionary/TestDictionary/plainFallBack(I,int)#org/apache/parquet/column/values/fallback/FallbackValuesWriter/of(I,F)
org/apache/parquet/column/values/dictionary/TestDictionary/plainFallBack(I,int)#org/apache/parquet/bytes/DirectByteBufferAllocator/DirectByteBufferAllocator()
org/apache/parquet/column/values/dictionary/TestDictionary/plainFallBack(I,int)#org/apache/parquet/column/values/plain/PlainValuesWriter/PlainValuesWriter(int,int,org.apache.parquet.bytes.ByteBufferAllocator)
org/apache/parquet/column/values/dictionary/TestDictionary/testDoubleDictionaryFallBack()#org/apache/parquet/column/values/fallback/FallbackValuesWriter/getBufferedSize()
org/apache/parquet/column/values/dictionary/TestDictionary/testDoubleDictionaryFallBack()#org/apache/parquet/column/values/plain/PlainValuesReader/DoublePlainValuesReader/DoublePlainValuesReader()
org/apache/parquet/column/values/dictionary/TestDictionary/testDoubleDictionaryFallBack()#org/apache/parquet/column/values/dictionary/TestDictionary/roundTripDouble(org.apache.parquet.column.values.fallback.FallbackValuesWriter,org.apache.parquet.column.values.ValuesReader,int)
org/apache/parquet/column/values/dictionary/TestDictionary/testDoubleDictionaryFallBack()#org/apache/parquet/column/values/fallback/FallbackValuesWriter/resetDictionary()
org/apache/parquet/column/values/dictionary/TestDictionary/testDoubleDictionaryFallBack()#org/apache/parquet/column/values/fallback/FallbackValuesWriter/reset()
org/apache/parquet/column/values/dictionary/TestDictionary/testDoubleDictionaryFallBack()#org/apache/parquet/column/values/dictionary/TestDictionary/newPlainDoubleDictionaryValuesWriter(int,int)
org/apache/parquet/column/values/dictionary/TestDictionary/checkRepeated(int,org.apache.parquet.bytes.BytesInput,org.apache.parquet.column.values.ValuesReader,java.lang.String)#org/apache/parquet/io/api/Binary/toStringUsingUTF8()
org/apache/parquet/column/values/dictionary/TestDictionary/checkRepeated(int,org.apache.parquet.bytes.BytesInput,org.apache.parquet.column.values.ValuesReader,java.lang.String)#org/apache/parquet/column/values/ValuesReader/initFromPage(int,java.nio.ByteBuffer,int)
org/apache/parquet/column/values/dictionary/TestDictionary/checkRepeated(int,org.apache.parquet.bytes.BytesInput,org.apache.parquet.column.values.ValuesReader,java.lang.String)#org/apache/parquet/column/values/ValuesReader/readBytes()
org/apache/parquet/column/values/dictionary/TestDictionary/checkRepeated(int,org.apache.parquet.bytes.BytesInput,org.apache.parquet.column.values.ValuesReader,java.lang.String)#org/apache/parquet/bytes/BytesInput/toByteBuffer()
org/apache/parquet/column/values/dictionary/TestDictionary/testZeroValues()#java/nio/Buffer/remaining()
org/apache/parquet/column/values/dictionary/TestDictionary/testZeroValues()#org/apache/parquet/column/values/fallback/FallbackValuesWriter/writeInteger(int)
org/apache/parquet/column/values/dictionary/TestDictionary/testZeroValues()#org/apache/parquet/column/values/dictionary/DictionaryValuesReader/initFromPage(int,java.nio.ByteBuffer,int)
org/apache/parquet/column/values/dictionary/TestDictionary/testZeroValues()#org/apache/parquet/column/values/dictionary/TestDictionary/newPlainIntegerDictionaryValuesWriter(int,int)
org/apache/parquet/column/values/dictionary/TestDictionary/testZeroValues()#java/nio/ByteBuffer/wrap(byte[])
org/apache/parquet/column/values/dictionary/TestDictionary/testZeroValues()#org/apache/parquet/column/values/dictionary/TestDictionary/getBytesAndCheckEncoding(org.apache.parquet.column.values.ValuesWriter,org.apache.parquet.column.Encoding)
org/apache/parquet/column/values/dictionary/TestDictionary/testZeroValues()#org/apache/parquet/column/values/dictionary/TestDictionary/initDicReader(org.apache.parquet.column.values.ValuesWriter,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/column/values/dictionary/TestDictionary/writeRepeated(int,org.apache.parquet.column.values.ValuesWriter,java.lang.String)#org/apache/parquet/column/values/ValuesWriter/writeBytes(org.apache.parquet.io.api.Binary)
org/apache/parquet/column/values/dictionary/TestDictionary/writeRepeated(int,org.apache.parquet.column.values.ValuesWriter,java.lang.String)#org/apache/parquet/io/api/Binary/fromString(java.lang.String)
org/apache/parquet/column/values/dictionary/TestDictionary/checkDistinct(int,org.apache.parquet.bytes.BytesInput,org.apache.parquet.column.values.ValuesReader,java.lang.String)#org/apache/parquet/io/api/Binary/toStringUsingUTF8()
org/apache/parquet/column/values/dictionary/TestDictionary/checkDistinct(int,org.apache.parquet.bytes.BytesInput,org.apache.parquet.column.values.ValuesReader,java.lang.String)#org/apache/parquet/column/values/ValuesReader/initFromPage(int,java.nio.ByteBuffer,int)
org/apache/parquet/column/values/dictionary/TestDictionary/checkDistinct(int,org.apache.parquet.bytes.BytesInput,org.apache.parquet.column.values.ValuesReader,java.lang.String)#org/apache/parquet/column/values/ValuesReader/readBytes()
org/apache/parquet/column/values/dictionary/TestDictionary/checkDistinct(int,org.apache.parquet.bytes.BytesInput,org.apache.parquet.column.values.ValuesReader,java.lang.String)#org/apache/parquet/bytes/BytesInput/toByteBuffer()
org/apache/parquet/column/values/dictionary/TestDictionary/roundTripDouble(org.apache.parquet.column.values.fallback.FallbackValuesWriter,org.apache.parquet.column.values.ValuesReader,int)#org/apache/parquet/column/values/fallback/FallbackValuesWriter/getBytes()
org/apache/parquet/column/values/dictionary/TestDictionary/roundTripDouble(org.apache.parquet.column.values.fallback.FallbackValuesWriter,org.apache.parquet.column.values.ValuesReader,int)#org/apache/parquet/column/values/ValuesReader/readDouble()
org/apache/parquet/column/values/dictionary/TestDictionary/roundTripDouble(org.apache.parquet.column.values.fallback.FallbackValuesWriter,org.apache.parquet.column.values.ValuesReader,int)#org/apache/parquet/column/values/fallback/FallbackValuesWriter/writeDouble(double)
org/apache/parquet/column/values/dictionary/TestDictionary/roundTripDouble(org.apache.parquet.column.values.fallback.FallbackValuesWriter,org.apache.parquet.column.values.ValuesReader,int)#org/apache/parquet/column/values/ValuesReader/initFromPage(int,java.nio.ByteBuffer,int)
org/apache/parquet/column/values/dictionary/TestDictionary/roundTripDouble(org.apache.parquet.column.values.fallback.FallbackValuesWriter,org.apache.parquet.column.values.ValuesReader,int)#org/apache/parquet/column/values/fallback/FallbackValuesWriter/getEncoding()
org/apache/parquet/column/values/dictionary/TestDictionary/roundTripDouble(org.apache.parquet.column.values.fallback.FallbackValuesWriter,org.apache.parquet.column.values.ValuesReader,int)#org/apache/parquet/bytes/BytesInput/toByteBuffer()
org/apache/parquet/column/values/dictionary/TestDictionary/roundTripInt(org.apache.parquet.column.values.fallback.FallbackValuesWriter,org.apache.parquet.column.values.ValuesReader,int)#org/apache/parquet/column/values/fallback/FallbackValuesWriter/getBytes()
org/apache/parquet/column/values/dictionary/TestDictionary/roundTripInt(org.apache.parquet.column.values.fallback.FallbackValuesWriter,org.apache.parquet.column.values.ValuesReader,int)#org/apache/parquet/column/values/ValuesReader/initFromPage(int,java.nio.ByteBuffer,int)
org/apache/parquet/column/values/dictionary/TestDictionary/roundTripInt(org.apache.parquet.column.values.fallback.FallbackValuesWriter,org.apache.parquet.column.values.ValuesReader,int)#org/apache/parquet/column/values/fallback/FallbackValuesWriter/writeInteger(int)
org/apache/parquet/column/values/dictionary/TestDictionary/roundTripInt(org.apache.parquet.column.values.fallback.FallbackValuesWriter,org.apache.parquet.column.values.ValuesReader,int)#org/apache/parquet/column/values/fallback/FallbackValuesWriter/getEncoding()
org/apache/parquet/column/values/dictionary/TestDictionary/roundTripInt(org.apache.parquet.column.values.fallback.FallbackValuesWriter,org.apache.parquet.column.values.ValuesReader,int)#org/apache/parquet/bytes/BytesInput/toByteBuffer()
org/apache/parquet/column/values/dictionary/TestDictionary/roundTripInt(org.apache.parquet.column.values.fallback.FallbackValuesWriter,org.apache.parquet.column.values.ValuesReader,int)#org/apache/parquet/column/values/ValuesReader/readInteger()
org/apache/parquet/column/values/dictionary/TestDictionary/newPlainBinaryDictionaryValuesWriter(int,int)#org/apache/parquet/column/values/dictionary/DictionaryValuesWriter/PlainBinaryDictionaryValuesWriter/PlainBinaryDictionaryValuesWriter(int,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding,org.apache.parquet.bytes.ByteBufferAllocator)
org/apache/parquet/column/values/dictionary/TestDictionary/newPlainBinaryDictionaryValuesWriter(int,int)#org/apache/parquet/column/values/dictionary/TestDictionary/plainFallBack(I,int)
org/apache/parquet/column/values/dictionary/TestDictionary/newPlainBinaryDictionaryValuesWriter(int,int)#org/apache/parquet/bytes/DirectByteBufferAllocator/DirectByteBufferAllocator()
org/apache/parquet/column/values/dictionary/TestDictionary/writeRepeatedWithReuse(int,org.apache.parquet.column.values.ValuesWriter,java.lang.String)#org/apache/parquet/io/api/Binary/length()
org/apache/parquet/column/values/dictionary/TestDictionary/writeRepeatedWithReuse(int,org.apache.parquet.column.values.ValuesWriter,java.lang.String)#org/apache/parquet/io/api/Binary/fromReusedByteArray(byte[])
org/apache/parquet/column/values/dictionary/TestDictionary/writeRepeatedWithReuse(int,org.apache.parquet.column.values.ValuesWriter,java.lang.String)#org/apache/parquet/column/values/ValuesWriter/writeBytes(org.apache.parquet.io.api.Binary)
org/apache/parquet/column/values/dictionary/TestDictionary/writeRepeatedWithReuse(int,org.apache.parquet.column.values.ValuesWriter,java.lang.String)#org/apache/parquet/io/api/Binary/fromString(java.lang.String)
org/apache/parquet/column/values/dictionary/TestDictionary/writeRepeatedWithReuse(int,org.apache.parquet.column.values.ValuesWriter,java.lang.String)#java/lang/String/getBytes(java.lang.String)
org/apache/parquet/column/values/dictionary/TestDictionary/writeRepeatedWithReuse(int,org.apache.parquet.column.values.ValuesWriter,java.lang.String)#org/apache/parquet/io/api/Binary/getBytesUnsafe()
org/apache/parquet/column/values/dictionary/TestDictionary/writeRepeatedWithReuse(int,org.apache.parquet.column.values.ValuesWriter,java.lang.String)#java/lang/System/arraycopy(java.lang.Object,int,java.lang.Object,int,int)
org/apache/parquet/column/values/dictionary/TestDictionary/newPlainLongDictionaryValuesWriter(int,int)#org/apache/parquet/column/values/dictionary/TestDictionary/plainFallBack(I,int)
org/apache/parquet/column/values/dictionary/TestDictionary/newPlainLongDictionaryValuesWriter(int,int)#org/apache/parquet/bytes/DirectByteBufferAllocator/DirectByteBufferAllocator()
org/apache/parquet/column/values/dictionary/TestDictionary/newPlainLongDictionaryValuesWriter(int,int)#org/apache/parquet/column/values/dictionary/DictionaryValuesWriter/PlainLongDictionaryValuesWriter/PlainLongDictionaryValuesWriter(int,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding,org.apache.parquet.bytes.ByteBufferAllocator)
org/apache/parquet/column/values/dictionary/TestDictionary/testBinaryDictionaryChangedValues()#org/apache/parquet/column/values/plain/BinaryPlainValuesReader/BinaryPlainValuesReader()
org/apache/parquet/column/values/dictionary/TestDictionary/testBinaryDictionaryChangedValues()#org/apache/parquet/column/values/dictionary/TestDictionary/checkRepeated(int,org.apache.parquet.bytes.BytesInput,org.apache.parquet.column.values.ValuesReader,java.lang.String)
org/apache/parquet/column/values/dictionary/TestDictionary/testBinaryDictionaryChangedValues()#org/apache/parquet/column/values/dictionary/TestDictionary/checkDistinct(int,org.apache.parquet.bytes.BytesInput,org.apache.parquet.column.values.ValuesReader,java.lang.String)
org/apache/parquet/column/values/dictionary/TestDictionary/testBinaryDictionaryChangedValues()#org/apache/parquet/column/values/dictionary/TestDictionary/writeDistinct(int,org.apache.parquet.column.values.ValuesWriter,java.lang.String)
org/apache/parquet/column/values/dictionary/TestDictionary/testBinaryDictionaryChangedValues()#org/apache/parquet/column/values/dictionary/TestDictionary/getBytesAndCheckEncoding(org.apache.parquet.column.values.ValuesWriter,org.apache.parquet.column.Encoding)
org/apache/parquet/column/values/dictionary/TestDictionary/testBinaryDictionaryChangedValues()#org/apache/parquet/column/values/dictionary/TestDictionary/initDicReader(org.apache.parquet.column.values.ValuesWriter,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/column/values/dictionary/TestDictionary/testBinaryDictionaryChangedValues()#org/apache/parquet/column/values/dictionary/TestDictionary/newPlainBinaryDictionaryValuesWriter(int,int)
org/apache/parquet/column/values/dictionary/TestDictionary/testBinaryDictionaryChangedValues()#org/apache/parquet/column/values/dictionary/TestDictionary/writeRepeatedWithReuse(int,org.apache.parquet.column.values.ValuesWriter,java.lang.String)
org/apache/parquet/column/values/dictionary/TestDictionary/testIntDictionary()#org/apache/parquet/column/values/dictionary/DictionaryValuesReader/readInteger()
org/apache/parquet/column/values/dictionary/TestDictionary/testIntDictionary()#org/apache/parquet/column/values/dictionary/DictionaryValuesWriter/PlainIntegerDictionaryValuesWriter/getDictionarySize()
org/apache/parquet/column/values/dictionary/TestDictionary/testIntDictionary()#org/apache/parquet/column/values/fallback/FallbackValuesWriter/writeInteger(int)
org/apache/parquet/column/values/dictionary/TestDictionary/testIntDictionary()#org/apache/parquet/column/values/dictionary/DictionaryValuesReader/initFromPage(int,java.nio.ByteBuffer,int)
org/apache/parquet/column/values/dictionary/TestDictionary/testIntDictionary()#org/apache/parquet/column/values/dictionary/TestDictionary/newPlainIntegerDictionaryValuesWriter(int,int)
org/apache/parquet/column/values/dictionary/TestDictionary/testIntDictionary()#org/apache/parquet/bytes/BytesInput/toByteBuffer()
org/apache/parquet/column/values/dictionary/TestDictionary/testIntDictionary()#org/apache/parquet/column/values/dictionary/TestDictionary/getBytesAndCheckEncoding(org.apache.parquet.column.values.ValuesWriter,org.apache.parquet.column.Encoding)
org/apache/parquet/column/values/dictionary/TestDictionary/testIntDictionary()#org/apache/parquet/column/values/dictionary/TestDictionary/initDicReader(org.apache.parquet.column.values.ValuesWriter,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/column/values/dictionary/TestDictionary/testBinaryDictionaryFallBack()#org/apache/parquet/io/api/Binary/length()
org/apache/parquet/column/values/dictionary/TestDictionary/testBinaryDictionaryFallBack()#org/apache/parquet/column/values/ValuesReader/initFromPage(int,java.nio.ByteBuffer,int)
org/apache/parquet/column/values/dictionary/TestDictionary/testBinaryDictionaryFallBack()#org/apache/parquet/column/values/ValuesReader/readBytes()
org/apache/parquet/column/values/dictionary/TestDictionary/testBinaryDictionaryFallBack()#org/apache/parquet/column/values/ValuesWriter/writeBytes(org.apache.parquet.io.api.Binary)
org/apache/parquet/column/values/dictionary/TestDictionary/testBinaryDictionaryFallBack()#org/apache/parquet/column/values/dictionary/TestDictionary/newPlainBinaryDictionaryValuesWriter(int,int)
org/apache/parquet/column/values/dictionary/TestDictionary/testBinaryDictionaryFallBack()#org/apache/parquet/column/values/ValuesWriter/getEncoding()
org/apache/parquet/column/values/dictionary/TestDictionary/testBinaryDictionaryFallBack()#org/apache/parquet/io/api/Binary/fromString(java.lang.String)
org/apache/parquet/column/values/dictionary/TestDictionary/testBinaryDictionaryFallBack()#org/apache/parquet/column/values/ValuesWriter/reset()
org/apache/parquet/column/values/dictionary/TestDictionary/testBinaryDictionaryFallBack()#org/apache/parquet/bytes/BytesInput/toByteBuffer()
org/apache/parquet/column/values/dictionary/TestDictionary/testBinaryDictionaryFallBack()#org/apache/parquet/column/values/ValuesWriter/getBufferedSize()
org/apache/parquet/column/values/dictionary/TestDictionary/testBinaryDictionaryFallBack()#org/apache/parquet/column/values/plain/BinaryPlainValuesReader/BinaryPlainValuesReader()
org/apache/parquet/column/values/dictionary/TestDictionary/testBinaryDictionaryFallBack()#org/apache/parquet/column/values/ValuesWriter/getBytes()
org/apache/parquet/column/values/dictionary/TestDictionary/getBytesAndCheckEncoding(org.apache.parquet.column.values.ValuesWriter,org.apache.parquet.column.Encoding)#org/apache/parquet/column/values/ValuesWriter/getBytes()
org/apache/parquet/column/values/dictionary/TestDictionary/getBytesAndCheckEncoding(org.apache.parquet.column.values.ValuesWriter,org.apache.parquet.column.Encoding)#org/apache/parquet/bytes/BytesInput/copy(org.apache.parquet.bytes.BytesInput)
org/apache/parquet/column/values/dictionary/TestDictionary/getBytesAndCheckEncoding(org.apache.parquet.column.values.ValuesWriter,org.apache.parquet.column.Encoding)#org/apache/parquet/column/values/ValuesWriter/getEncoding()
org/apache/parquet/column/values/dictionary/TestDictionary/getBytesAndCheckEncoding(org.apache.parquet.column.values.ValuesWriter,org.apache.parquet.column.Encoding)#org/apache/parquet/column/values/ValuesWriter/reset()
org/apache/parquet/column/values/dictionary/TestDictionary/initDicReader(org.apache.parquet.column.values.ValuesWriter,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)#org/apache/parquet/column/values/dictionary/DictionaryValuesReader/DictionaryValuesReader(org.apache.parquet.column.Dictionary)
org/apache/parquet/column/values/dictionary/TestDictionary/initDicReader(org.apache.parquet.column.values.ValuesWriter,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)#org/apache/parquet/column/page/DictionaryPage/copy()
org/apache/parquet/column/values/dictionary/TestDictionary/initDicReader(org.apache.parquet.column.values.ValuesWriter,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)#org/apache/parquet/column/ColumnDescriptor/ColumnDescriptor(java.lang.String[],org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,int,int)
org/apache/parquet/column/values/dictionary/TestDictionary/initDicReader(org.apache.parquet.column.values.ValuesWriter,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)#org/apache/parquet/column/values/ValuesWriter/toDictPageAndClose()
org/apache/parquet/column/values/dictionary/TestDictionary/initDicReader(org.apache.parquet.column.values.ValuesWriter,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)#org/apache/parquet/column/Encoding/initDictionary(org.apache.parquet.column.ColumnDescriptor,org.apache.parquet.column.page.DictionaryPage)
org/apache/parquet/column/values/dictionary/TestDictionary/newPlainDoubleDictionaryValuesWriter(int,int)#org/apache/parquet/column/values/dictionary/DictionaryValuesWriter/PlainDoubleDictionaryValuesWriter/PlainDoubleDictionaryValuesWriter(int,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding,org.apache.parquet.bytes.ByteBufferAllocator)
org/apache/parquet/column/values/dictionary/TestDictionary/newPlainDoubleDictionaryValuesWriter(int,int)#org/apache/parquet/column/values/dictionary/TestDictionary/plainFallBack(I,int)
org/apache/parquet/column/values/dictionary/TestDictionary/newPlainDoubleDictionaryValuesWriter(int,int)#org/apache/parquet/bytes/DirectByteBufferAllocator/DirectByteBufferAllocator()
org/apache/parquet/benchmarks/BenchmarkUtils/deleteIfExists(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path)#java/lang/Throwable/printStackTrace()
org/apache/parquet/benchmarks/BenchmarkUtils/deleteIfExists(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path)#java/io/PrintStream/println(char[])
org/apache/parquet/filter2/recordlevel/TestValueInspector/testReusable()#org/apache/parquet/filter2/recordlevel/IncrementallyUpdatedFilterPredicate/ValueInspector/reset()
org/apache/parquet/filter2/recordlevel/TestValueInspector/testReusable()#org/apache/parquet/filter2/recordlevel/IncrementallyUpdatedFilterPredicate/ValueInspector/getResult()
org/apache/parquet/filter2/recordlevel/TestValueInspector/testReusable()#java/util/Arrays/asList(T[])
org/apache/parquet/filter2/recordlevel/TestValueInspector/testReusable()#org/apache/parquet/filter2/recordlevel/IncrementallyUpdatedFilterPredicate/ValueInspector/update(int)
org/apache/parquet/filter2/recordlevel/TestValueInspector/testReusable()#org/apache/parquet/filter2/recordlevel/TestIncrementallyUpdatedFilterPredicateEvaluator/intIsEven()
org/apache/parquet/filter2/recordlevel/TestValueInspector/testLifeCycle()#org/apache/parquet/filter2/recordlevel/IncrementallyUpdatedFilterPredicate/ValueInspector/reset()
org/apache/parquet/filter2/recordlevel/TestValueInspector/testLifeCycle()#org/apache/parquet/filter2/recordlevel/IncrementallyUpdatedFilterPredicate/ValueInspector/getResult()
org/apache/parquet/filter2/recordlevel/TestValueInspector/testLifeCycle()#java/lang/Throwable/getMessage()
org/apache/parquet/filter2/recordlevel/TestValueInspector/testLifeCycle()#org/apache/parquet/filter2/recordlevel/IncrementallyUpdatedFilterPredicate/ValueInspector/update(int)
org/apache/parquet/filter2/recordlevel/TestValueInspector/testLifeCycle()#org/apache/parquet/filter2/recordlevel/IncrementallyUpdatedFilterPredicate/ValueInspector/isKnown()
org/apache/parquet/filter2/recordlevel/TestValueInspector/testLifeCycle()#org/apache/parquet/filter2/recordlevel/TestIncrementallyUpdatedFilterPredicateEvaluator/intIsEven()
org/apache/parquet/pig/summary/Summary/JSONTuple/readFields(java.io.DataInput)#java/lang/UnsupportedOperationException/UnsupportedOperationException()
org/apache/parquet/pig/summary/Summary/JSONTuple/toDelimitedString(java.lang.String)#org/apache/parquet/pig/summary/Summary/JSONTuple/json()
org/apache/parquet/pig/summary/Summary/JSONTuple/compareTo(java.lang.Object)#java/lang/UnsupportedOperationException/UnsupportedOperationException()
org/apache/parquet/pig/summary/Summary/JSONTuple/append(java.lang.Object)#java/lang/UnsupportedOperationException/UnsupportedOperationException()
org/apache/parquet/pig/summary/Summary/JSONTuple/set(int,java.lang.Object)#java/lang/UnsupportedOperationException/UnsupportedOperationException()
org/apache/parquet/pig/summary/Summary/JSONTuple/iterator()#org/apache/parquet/pig/summary/Summary/JSONTuple/getAll()
org/apache/parquet/pig/summary/Summary/JSONTuple/iterator()#java/util/List/iterator()
org/apache/parquet/pig/summary/Summary/JSONTuple/json()#org/apache/parquet/pig/summary/SummaryData/toJSON(org.apache.parquet.pig.summary.SummaryData)
org/apache/parquet/pig/summary/Summary/JSONTuple/reference(org.apache.parquet.pig.Tuple)#java/lang/UnsupportedOperationException/UnsupportedOperationException()
org/apache/parquet/pig/summary/Summary/JSONTuple/get(int)#org/apache/parquet/pig/summary/Summary/JSONTuple/json()
org/apache/parquet/pig/summary/Summary/JSONTuple/getAll()#java/util/ArrayList/ArrayList(java.util.Collection)
org/apache/parquet/pig/summary/Summary/JSONTuple/getAll()#java/util/Arrays/asList(T[])
org/apache/parquet/pig/summary/Summary/JSONTuple/getAll()#org/apache/parquet/pig/summary/Summary/JSONTuple/json()
org/apache/parquet/pig/summary/Summary/JSONTuple/write(java.io.DataOutput)#org/apache/parquet/pig/summary/Summary/JSONTuple/json()
org/apache/parquet/hadoop/metadata/ParquetMetadata/toPrettyJSON(org.apache.parquet.hadoop.metadata.ParquetMetadata)#org/apache/parquet/hadoop/metadata/ParquetMetadata/toJSON(org.apache.parquet.hadoop.metadata.ParquetMetadata,boolean)
org/apache/parquet/hadoop/metadata/ParquetMetadata/toJSON(org.apache.parquet.hadoop.metadata.ParquetMetadata,boolean)#java/lang/RuntimeException/RuntimeException(java.lang.Throwable)
org/apache/parquet/hadoop/metadata/ParquetMetadata/toJSON(org.apache.parquet.hadoop.metadata.ParquetMetadata,boolean)#java/io/StringWriter/StringWriter()
org/apache/parquet/hadoop/metadata/ParquetMetadata/toJSON(org.apache.parquet.hadoop.metadata.ParquetMetadata,boolean)#java/io/StringWriter/toString()
org/apache/parquet/hadoop/metadata/ParquetMetadata/toJSON(org.apache.parquet.hadoop.metadata.ParquetMetadata,boolean)#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/apache/parquet/hadoop/metadata/ParquetMetadata/fromJSON(java.lang.String)#java/lang/RuntimeException/RuntimeException(java.lang.Throwable)
org/apache/parquet/hadoop/metadata/ParquetMetadata/fromJSON(java.lang.String)#java/io/StringReader/StringReader(java.lang.String)
org/apache/parquet/hadoop/metadata/ParquetMetadata/fromJSON(java.lang.String)#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/apache/parquet/hadoop/metadata/ParquetMetadata/toJSON(org.apache.parquet.hadoop.metadata.ParquetMetadata)#org/apache/parquet/hadoop/metadata/ParquetMetadata/toJSON(org.apache.parquet.hadoop.metadata.ParquetMetadata,boolean)
org/apache/parquet/hadoop/ParquetWriter/Builder/withWriterVersion(org.apache.parquet.column.ParquetProperties.WriterVersion)#org/apache/parquet/column/ParquetProperties/Builder/withWriterVersion(org.apache.parquet.column.ParquetProperties.WriterVersion)
org/apache/parquet/hadoop/ParquetWriter/Builder/withWriterVersion(org.apache.parquet.column.ParquetProperties.WriterVersion)#org/apache/parquet/hadoop/ParquetWriter/Builder/self()
org/apache/parquet/hadoop/ParquetWriter/Builder/withPageSize(int)#org/apache/parquet/column/ParquetProperties/Builder/withPageSize(int)
org/apache/parquet/hadoop/ParquetWriter/Builder/withPageSize(int)#org/apache/parquet/hadoop/ParquetWriter/Builder/self()
org/apache/parquet/hadoop/ParquetWriter/Builder/withMaxPaddingSize(int)#org/apache/parquet/hadoop/ParquetWriter/Builder/self()
org/apache/parquet/hadoop/ParquetWriter/Builder/build()#org/apache/parquet/column/ParquetProperties/Builder/build()
org/apache/parquet/hadoop/ParquetWriter/Builder/build()#org/apache/parquet/hadoop/ParquetWriter/ParquetWriter(org.apache.parquet.hadoop.Path,org.apache.parquet.hadoop.ParquetFileWriter.Mode,org.apache.parquet.hadoop.api.WriteSupport,org.apache.parquet.hadoop.metadata.CompressionCodecName,int,boolean,org.apache.parquet.hadoop.Configuration,int,org.apache.parquet.column.ParquetProperties)
org/apache/parquet/hadoop/ParquetWriter/Builder/build()#org/apache/parquet/hadoop/ParquetWriter/Builder/getWriteSupport(org.apache.parquet.hadoop.Configuration)
org/apache/parquet/hadoop/ParquetWriter/Builder/withCompressionCodec(org.apache.parquet.hadoop.metadata.CompressionCodecName)#org/apache/parquet/hadoop/ParquetWriter/Builder/self()
org/apache/parquet/hadoop/ParquetWriter/Builder/withDictionaryEncoding(boolean)#org/apache/parquet/column/ParquetProperties/Builder/withDictionaryEncoding(boolean)
org/apache/parquet/hadoop/ParquetWriter/Builder/withDictionaryEncoding(boolean)#org/apache/parquet/hadoop/ParquetWriter/Builder/self()
org/apache/parquet/hadoop/ParquetWriter/Builder/enableValidation()#org/apache/parquet/hadoop/ParquetWriter/Builder/self()
org/apache/parquet/hadoop/ParquetWriter/Builder/withConf(org.apache.parquet.hadoop.Configuration)#org/apache/parquet/hadoop/ParquetWriter/Builder/self()
org/apache/parquet/hadoop/ParquetWriter/Builder/withValidation(boolean)#org/apache/parquet/hadoop/ParquetWriter/Builder/self()
org/apache/parquet/hadoop/ParquetWriter/Builder/enableDictionaryEncoding()#org/apache/parquet/column/ParquetProperties/Builder/withDictionaryEncoding(boolean)
org/apache/parquet/hadoop/ParquetWriter/Builder/enableDictionaryEncoding()#org/apache/parquet/hadoop/ParquetWriter/Builder/self()
org/apache/parquet/hadoop/ParquetWriter/Builder/withWriteMode(org.apache.parquet.hadoop.ParquetFileWriter.Mode)#org/apache/parquet/hadoop/ParquetWriter/Builder/self()
org/apache/parquet/hadoop/ParquetWriter/Builder/withRowGroupSize(int)#org/apache/parquet/hadoop/ParquetWriter/Builder/self()
org/apache/parquet/hadoop/ParquetWriter/Builder/withDictionaryPageSize(int)#org/apache/parquet/column/ParquetProperties/Builder/withDictionaryPageSize(int)
org/apache/parquet/hadoop/ParquetWriter/Builder/withDictionaryPageSize(int)#org/apache/parquet/hadoop/ParquetWriter/Builder/self()
org/apache/parquet/example/data/GroupValueSource/getFloat(java.lang.String,int)#org/apache/parquet/schema/GroupType/getFieldIndex(java.lang.String)
org/apache/parquet/example/data/GroupValueSource/getFloat(java.lang.String,int)#org/apache/parquet/example/data/GroupValueSource/getType()
org/apache/parquet/example/data/GroupValueSource/getFloat(java.lang.String,int)#org/apache/parquet/example/data/GroupValueSource/getFloat(int,int)
org/apache/parquet/example/data/GroupValueSource/getGroup(java.lang.String,int)#org/apache/parquet/schema/GroupType/getFieldIndex(java.lang.String)
org/apache/parquet/example/data/GroupValueSource/getGroup(java.lang.String,int)#org/apache/parquet/example/data/GroupValueSource/getType()
org/apache/parquet/example/data/GroupValueSource/getGroup(java.lang.String,int)#org/apache/parquet/example/data/GroupValueSource/getGroup(int,int)
org/apache/parquet/example/data/GroupValueSource/getLong(java.lang.String,int)#org/apache/parquet/schema/GroupType/getFieldIndex(java.lang.String)
org/apache/parquet/example/data/GroupValueSource/getLong(java.lang.String,int)#org/apache/parquet/example/data/GroupValueSource/getType()
org/apache/parquet/example/data/GroupValueSource/getLong(java.lang.String,int)#org/apache/parquet/example/data/GroupValueSource/getLong(int,int)
org/apache/parquet/example/data/GroupValueSource/getBoolean(java.lang.String,int)#org/apache/parquet/schema/GroupType/getFieldIndex(java.lang.String)
org/apache/parquet/example/data/GroupValueSource/getBoolean(java.lang.String,int)#org/apache/parquet/example/data/GroupValueSource/getBoolean(int,int)
org/apache/parquet/example/data/GroupValueSource/getBoolean(java.lang.String,int)#org/apache/parquet/example/data/GroupValueSource/getType()
org/apache/parquet/example/data/GroupValueSource/getDouble(java.lang.String,int)#org/apache/parquet/example/data/GroupValueSource/getDouble(int,int)
org/apache/parquet/example/data/GroupValueSource/getDouble(java.lang.String,int)#org/apache/parquet/schema/GroupType/getFieldIndex(java.lang.String)
org/apache/parquet/example/data/GroupValueSource/getDouble(java.lang.String,int)#org/apache/parquet/example/data/GroupValueSource/getType()
org/apache/parquet/example/data/GroupValueSource/getString(java.lang.String,int)#org/apache/parquet/example/data/GroupValueSource/getString(int,int)
org/apache/parquet/example/data/GroupValueSource/getString(java.lang.String,int)#org/apache/parquet/schema/GroupType/getFieldIndex(java.lang.String)
org/apache/parquet/example/data/GroupValueSource/getString(java.lang.String,int)#org/apache/parquet/example/data/GroupValueSource/getType()
org/apache/parquet/example/data/GroupValueSource/getInteger(java.lang.String,int)#org/apache/parquet/schema/GroupType/getFieldIndex(java.lang.String)
org/apache/parquet/example/data/GroupValueSource/getInteger(java.lang.String,int)#org/apache/parquet/example/data/GroupValueSource/getType()
org/apache/parquet/example/data/GroupValueSource/getInteger(java.lang.String,int)#org/apache/parquet/example/data/GroupValueSource/getInteger(int,int)
org/apache/parquet/example/data/GroupValueSource/getBinary(java.lang.String,int)#org/apache/parquet/schema/GroupType/getFieldIndex(java.lang.String)
org/apache/parquet/example/data/GroupValueSource/getBinary(java.lang.String,int)#org/apache/parquet/example/data/GroupValueSource/getBinary(int,int)
org/apache/parquet/example/data/GroupValueSource/getBinary(java.lang.String,int)#org/apache/parquet/example/data/GroupValueSource/getType()
org/apache/parquet/example/data/GroupValueSource/getFieldRepetitionCount(java.lang.String)#org/apache/parquet/schema/GroupType/getFieldIndex(java.lang.String)
org/apache/parquet/example/data/GroupValueSource/getFieldRepetitionCount(java.lang.String)#org/apache/parquet/example/data/GroupValueSource/getFieldRepetitionCount(int)
org/apache/parquet/example/data/GroupValueSource/getFieldRepetitionCount(java.lang.String)#org/apache/parquet/example/data/GroupValueSource/getType()
org/apache/parquet/example/data/GroupValueSource/getInt96(java.lang.String,int)#org/apache/parquet/example/data/GroupValueSource/getInt96(int,int)
org/apache/parquet/example/data/GroupValueSource/getInt96(java.lang.String,int)#org/apache/parquet/schema/GroupType/getFieldIndex(java.lang.String)
org/apache/parquet/example/data/GroupValueSource/getInt96(java.lang.String,int)#org/apache/parquet/example/data/GroupValueSource/getType()
org/apache/hadoop/hive/ql/io/parquet/MapredParquetOutputFormat/getParquerRecordWriterWrapper(org.apache.parquet.hadoop.ParquetOutputFormat,org.apache.parquet.hadoop.JobConf,java.lang.String,org.apache.hadoop.hive.ql.io.parquet.Progressable)#org/apache/hadoop/hive/ql/io/parquet/write/ParquetRecordWriterWrapper/ParquetRecordWriterWrapper(org.apache.hadoop.hive.ql.io.parquet.OutputFormat,org.apache.parquet.hadoop.JobConf,java.lang.String,org.apache.hadoop.hive.ql.io.parquet.Progressable)
org/apache/hadoop/hive/ql/io/parquet/MapredParquetOutputFormat/getParquerRecordWriterWrapper(org.apache.parquet.hadoop.ParquetOutputFormat,org.apache.parquet.hadoop.JobConf,java.lang.String,org.apache.hadoop.hive.ql.io.parquet.Progressable)#java/lang/String/toString()
org/apache/hadoop/hive/ql/io/parquet/MapredParquetOutputFormat/getHiveRecordWriter(org.apache.parquet.hadoop.JobConf,org.apache.parquet.hadoop.Path,java.lang.Class,boolean,java.util.Properties,org.apache.hadoop.hive.ql.io.parquet.Progressable)#java/util/ArrayList/ArrayList()
org/apache/hadoop/hive/ql/io/parquet/MapredParquetOutputFormat/getHiveRecordWriter(org.apache.parquet.hadoop.JobConf,org.apache.parquet.hadoop.Path,java.lang.Class,boolean,java.util.Properties,org.apache.hadoop.hive.ql.io.parquet.Progressable)#org/apache/hadoop/hive/ql/io/parquet/MapredParquetOutputFormat/getParquerRecordWriterWrapper(org.apache.parquet.hadoop.ParquetOutputFormat,org.apache.parquet.hadoop.JobConf,java.lang.String,org.apache.hadoop.hive.ql.io.parquet.Progressable)
org/apache/hadoop/hive/ql/io/parquet/MapredParquetOutputFormat/getHiveRecordWriter(org.apache.parquet.hadoop.JobConf,org.apache.parquet.hadoop.Path,java.lang.Class,boolean,java.util.Properties,org.apache.hadoop.hive.ql.io.parquet.Progressable)#java/lang/String/split(java.lang.String)
org/apache/hadoop/hive/ql/io/parquet/MapredParquetOutputFormat/getHiveRecordWriter(org.apache.parquet.hadoop.JobConf,org.apache.parquet.hadoop.Path,java.lang.Class,boolean,java.util.Properties,org.apache.hadoop.hive.ql.io.parquet.Progressable)#java/lang/String/length()
org/apache/hadoop/hive/ql/io/parquet/MapredParquetOutputFormat/getHiveRecordWriter(org.apache.parquet.hadoop.JobConf,org.apache.parquet.hadoop.Path,java.lang.Class,boolean,java.util.Properties,org.apache.hadoop.hive.ql.io.parquet.Progressable)#java/util/Arrays/asList(T[])
org/apache/hadoop/hive/ql/io/parquet/MapredParquetOutputFormat/getHiveRecordWriter(org.apache.parquet.hadoop.JobConf,org.apache.parquet.hadoop.Path,java.lang.Class,boolean,java.util.Properties,org.apache.hadoop.hive.ql.io.parquet.Progressable)#org/apache/hadoop/hive/ql/io/parquet/write/DataWritableWriteSupport/setSchema(org.apache.parquet.schema.MessageType,org.apache.parquet.hadoop.Configuration)
org/apache/hadoop/hive/ql/io/parquet/MapredParquetOutputFormat/getHiveRecordWriter(org.apache.parquet.hadoop.JobConf,org.apache.parquet.hadoop.Path,java.lang.Class,boolean,java.util.Properties,org.apache.hadoop.hive.ql.io.parquet.Progressable)#org/apache/hadoop/hive/ql/io/parquet/convert/HiveSchemaConverter/convert(java.util.List,java.util.List)
org/apache/hadoop/hive/ql/io/parquet/MapredParquetOutputFormat/getHiveRecordWriter(org.apache.parquet.hadoop.JobConf,org.apache.parquet.hadoop.Path,java.lang.Class,boolean,java.util.Properties,org.apache.hadoop.hive.ql.io.parquet.Progressable)#java/util/Properties/getProperty(java.lang.String)
org/apache/hadoop/hive/ql/io/parquet/MapredParquetOutputFormat/getRecordWriter(org.apache.parquet.hadoop.FileSystem,org.apache.parquet.hadoop.JobConf,java.lang.String,org.apache.hadoop.hive.ql.io.parquet.Progressable)#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/apache/parquet/column/values/deltastrings/DeltaByteArrayReader/skip()#org/apache/parquet/column/values/deltastrings/DeltaByteArrayReader/readBytes()
org/apache/parquet/column/values/deltastrings/DeltaByteArrayReader/readBytes()#org/apache/parquet/io/api/Binary/length()
org/apache/parquet/column/values/deltastrings/DeltaByteArrayReader/readBytes()#org/apache/parquet/column/values/ValuesReader/readBytes()
org/apache/parquet/column/values/deltastrings/DeltaByteArrayReader/readBytes()#org/apache/parquet/io/api/Binary/fromConstantByteArray(byte[])
org/apache/parquet/column/values/deltastrings/DeltaByteArrayReader/readBytes()#org/apache/parquet/io/api/Binary/getBytesUnsafe()
org/apache/parquet/column/values/deltastrings/DeltaByteArrayReader/readBytes()#java/lang/System/arraycopy(java.lang.Object,int,java.lang.Object,int,int)
org/apache/parquet/column/values/deltastrings/DeltaByteArrayReader/readBytes()#org/apache/parquet/column/values/ValuesReader/readInteger()
org/apache/parquet/column/values/deltastrings/DeltaByteArrayReader/initFromPage(int,java.nio.ByteBuffer,int)#org/apache/parquet/column/values/ValuesReader/initFromPage(int,java.nio.ByteBuffer,int)
org/apache/parquet/column/values/deltastrings/DeltaByteArrayReader/initFromPage(int,java.nio.ByteBuffer,int)#org/apache/parquet/column/values/ValuesReader/getNextOffset()
org/apache/parquet/avro/TestInputOutputFormat/MyMapper2/map(java.lang.Void,org.apache.parquet.avro.GenericRecord,org.apache.parquet.hadoop.Context)#java/lang/Object/Object()
org/apache/parquet/column/values/dictionary/PlainValuesDictionary/PlainLongDictionary/toString()#java/lang/StringBuilder/append(java.lang.String)
org/apache/parquet/column/values/dictionary/PlainValuesDictionary/PlainLongDictionary/toString()#java/lang/StringBuilder/append(int)
org/apache/parquet/column/values/dictionary/PlainValuesDictionary/PlainLongDictionary/toString()#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/apache/parquet/column/values/dictionary/PlainValuesDictionary/PlainLongDictionary/toString()#java/lang/StringBuilder/append(long)
org/apache/parquet/column/values/dictionary/PlainValuesDictionary/PlainLongDictionary/toString()#java/lang/StringBuilder/toString()
org/apache/parquet/hadoop/TestInputFormatColumnProjection/waitForJob(org.apache.parquet.hadoop.Job)#java/lang/Thread/sleep(long)
org/apache/parquet/hadoop/TestInputFormatColumnProjection/waitForJob(org.apache.parquet.hadoop.Job)#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/apache/parquet/hadoop/TestInputFormatColumnProjection/testProjectionSize()#org/apache/parquet/schema/Types/buildMessage()
org/apache/parquet/hadoop/TestInputFormatColumnProjection/testProjectionSize()#org/apache/parquet/schema/Types/Builder/named(java.lang.String)
org/apache/parquet/hadoop/TestInputFormatColumnProjection/testProjectionSize()#org/apache/parquet/hadoop/ParquetOutputFormat/setPageSize(org.apache.parquet.hadoop.Job,int)
org/apache/parquet/hadoop/TestInputFormatColumnProjection/testProjectionSize()#org/apache/parquet/hadoop/ParquetOutputFormat/setMaxPaddingSize(org.apache.parquet.hadoop.util.JobContext,int)
org/apache/parquet/hadoop/TestInputFormatColumnProjection/testProjectionSize()#java/io/File/toURI()
org/apache/parquet/hadoop/TestInputFormatColumnProjection/testProjectionSize()#java/lang/String/getBytes(java.lang.String)
org/apache/parquet/hadoop/TestInputFormatColumnProjection/testProjectionSize()#org/apache/parquet/hadoop/ParquetOutputFormat/setDictionaryPageSize(org.apache.parquet.hadoop.Job,int)
org/apache/parquet/hadoop/TestInputFormatColumnProjection/testProjectionSize()#java/io/FileOutputStream/write(byte[])
org/apache/parquet/hadoop/TestInputFormatColumnProjection/testProjectionSize()#org/apache/parquet/schema/Types/BaseGroupBuilder/required(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/hadoop/TestInputFormatColumnProjection/testProjectionSize()#java/io/FileOutputStream/close()
org/apache/parquet/hadoop/TestInputFormatColumnProjection/testProjectionSize()#org/apache/parquet/hadoop/ParquetOutputFormat/setBlockSize(org.apache.parquet.hadoop.Job,int)
org/apache/parquet/hadoop/TestInputFormatColumnProjection/testProjectionSize()#java/io/File/toString()
org/apache/parquet/hadoop/TestInputFormatColumnProjection/testProjectionSize()#java/lang/Class/isInterface()
org/apache/parquet/hadoop/TestInputFormatColumnProjection/testProjectionSize()#org/apache/parquet/schema/Type/toString()
org/apache/parquet/hadoop/TestInputFormatColumnProjection/testProjectionSize()#org/apache/parquet/schema/Types/Builder/as(org.apache.parquet.schema.OriginalType)
org/apache/parquet/hadoop/TestInputFormatColumnProjection/testProjectionSize()#org/apache/parquet/hadoop/ParquetOutputFormat/setEnableDictionary(org.apache.parquet.hadoop.Job,boolean)
org/apache/parquet/hadoop/TestInputFormatColumnProjection/testProjectionSize()#org/apache/parquet/hadoop/TestInputFormatColumnProjection/waitForJob(org.apache.parquet.hadoop.Job)
org/apache/parquet/hadoop/TestInputFormatColumnProjection/testProjectionSize()#java/io/FileOutputStream/FileOutputStream(java.io.File)
org/apache/parquet/hadoop/TestInputFormatColumnProjection/testProjectionSize()#java/io/File/delete()
org/apache/parquet/hadoop/TestInputFormatColumnProjection/testProjectionSize()#java/lang/Object/Object()
org/apache/parquet/schema/Types/BaseMapBuilder/GroupValueBuilder/named(java.lang.String)#org/apache/parquet/schema/Types/Builder/named(java.lang.String)
org/apache/parquet/schema/Types/BaseMapBuilder/GroupValueBuilder/named(java.lang.String)#org/apache/parquet/schema/Types/BaseGroupBuilder/build(java.lang.String)
org/apache/parquet/schema/Types/BaseMapBuilder/GroupValueBuilder/named(java.lang.String)#org/apache/parquet/schema/Types/BaseMapBuilder/setValueType(org.apache.parquet.schema.Type)
org/apache/parquet/proto/utils/ReadUsingMR/read(org.apache.parquet.hadoop.Path)#java/util/ArrayList/ArrayList()
org/apache/parquet/proto/utils/ReadUsingMR/read(org.apache.parquet.hadoop.Path)#org/apache/parquet/proto/utils/WriteUsingMR/waitForJob(org.apache.parquet.hadoop.Job)
org/apache/parquet/proto/utils/ReadUsingMR/read(org.apache.parquet.hadoop.Path)#java/util/Collections/unmodifiableList(java.util.List)
org/apache/parquet/proto/utils/ReadUsingMR/read(org.apache.parquet.hadoop.Path)#org/apache/parquet/proto/ProtoParquetInputFormat/setRequestedProjection(org.apache.parquet.hadoop.Job,java.lang.String)
org/apache/parquet/proto/utils/ReadUsingMR/read(org.apache.parquet.hadoop.Path)#java/lang/Object/Object()
org/apache/parquet/proto/ProtoWriteSupport/ArrayWriter/writeField(java.lang.Object)#org/apache/parquet/io/api/RecordConsumer/startField(java.lang.String,int)
org/apache/parquet/proto/ProtoWriteSupport/ArrayWriter/writeField(java.lang.Object)#org/apache/parquet/io/api/RecordConsumer/endField(java.lang.String,int)
org/apache/parquet/proto/ProtoWriteSupport/ArrayWriter/writeField(java.lang.Object)#org/apache/parquet/proto/ProtoWriteSupport/FieldWriter/writeRawValue(java.lang.Object)
org/apache/parquet/proto/ProtoWriteSupport/ArrayWriter/writeRawValue(java.lang.Object)#java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)
org/apache/parquet/thrift/ConvertedField/ConvertedFieldBase/asSentinelUnion()#org/apache/parquet/ShouldNeverHappenException/ShouldNeverHappenException(java.lang.String)
org/apache/parquet/thrift/ConvertedField/ConvertedFieldBase/asKeep()#org/apache/parquet/ShouldNeverHappenException/ShouldNeverHappenException(java.lang.String)
org/apache/parquet/thrift/ConvertedField/ConvertedFieldBase/asDrop()#org/apache/parquet/ShouldNeverHappenException/ShouldNeverHappenException(java.lang.String)
org/apache/parquet/hadoop/mapred/DeprecatedParquetInputFormat/ParquetInputSplitWrapper/write(java.io.DataOutput)#org/apache/parquet/hadoop/ParquetInputSplit/write(java.io.DataOutput)
org/apache/parquet/hadoop/mapred/DeprecatedParquetInputFormat/ParquetInputSplitWrapper/readFields(java.io.DataInput)#org/apache/parquet/hadoop/ParquetInputSplit/ParquetInputSplit()
org/apache/parquet/hadoop/mapred/DeprecatedParquetInputFormat/ParquetInputSplitWrapper/readFields(java.io.DataInput)#org/apache/parquet/hadoop/ParquetInputSplit/readFields(java.io.DataInput)
org/apache/parquet/column/values/plain/PlainValuesReader/IntegerPlainValuesReader/skip()#org/apache/parquet/bytes/LittleEndianDataInputStream/skipBytes(int)
org/apache/parquet/column/values/plain/PlainValuesReader/IntegerPlainValuesReader/skip()#org/apache/parquet/io/ParquetDecodingException/ParquetDecodingException(java.lang.String,java.lang.Throwable)
org/apache/parquet/column/values/plain/PlainValuesReader/IntegerPlainValuesReader/readInteger()#org/apache/parquet/io/ParquetDecodingException/ParquetDecodingException(java.lang.String,java.lang.Throwable)
org/apache/parquet/column/values/plain/PlainValuesReader/IntegerPlainValuesReader/readInteger()#org/apache/parquet/bytes/LittleEndianDataInputStream/readInt()
org/apache/parquet/avro/AvroReadSupport/init(org.apache.parquet.hadoop.Configuration,java.util.Map,org.apache.parquet.schema.MessageType)#org/apache/parquet/avro/AvroSchemaConverter/convert(org.apache.parquet.pig.Schema)
org/apache/parquet/avro/AvroReadSupport/init(org.apache.parquet.hadoop.Configuration,java.util.Map,org.apache.parquet.schema.MessageType)#org/apache/parquet/avro/AvroSchemaConverter/AvroSchemaConverter(org.apache.parquet.hadoop.Configuration)
org/apache/parquet/avro/AvroReadSupport/init(org.apache.parquet.hadoop.Configuration,java.util.Map,org.apache.parquet.schema.MessageType)#java/util/Map/put(K,V)
org/apache/parquet/avro/AvroReadSupport/init(org.apache.parquet.hadoop.Configuration,java.util.Map,org.apache.parquet.schema.MessageType)#java/util/LinkedHashMap/LinkedHashMap()
org/apache/parquet/avro/AvroReadSupport/init(org.apache.parquet.hadoop.Configuration,java.util.Map,org.apache.parquet.schema.MessageType)#org/apache/parquet/hadoop/api/ReadSupport/ReadContext/ReadContext(org.apache.parquet.schema.MessageType,java.util.Map)
org/apache/parquet/avro/AvroReadSupport/newCompatMaterializer(org.apache.parquet.schema.MessageType,org.apache.parquet.pig.Schema,org.apache.parquet.avro.GenericData)#org/apache/parquet/avro/AvroCompatRecordMaterializer/AvroCompatRecordMaterializer(org.apache.parquet.schema.MessageType,org.apache.parquet.pig.Schema,org.apache.parquet.avro.GenericData)
org/apache/parquet/avro/AvroReadSupport/prepareForRead(org.apache.parquet.hadoop.Configuration,java.util.Map,org.apache.parquet.schema.MessageType,org.apache.parquet.hadoop.api.ReadSupport.ReadContext)#org/apache/parquet/avro/AvroSchemaConverter/convert(org.apache.parquet.schema.MessageType)
org/apache/parquet/avro/AvroReadSupport/prepareForRead(org.apache.parquet.hadoop.Configuration,java.util.Map,org.apache.parquet.schema.MessageType,org.apache.parquet.hadoop.api.ReadSupport.ReadContext)#java/lang/Boolean/valueOf(java.lang.String)
org/apache/parquet/avro/AvroReadSupport/prepareForRead(org.apache.parquet.hadoop.Configuration,java.util.Map,org.apache.parquet.schema.MessageType,org.apache.parquet.hadoop.api.ReadSupport.ReadContext)#org/apache/parquet/avro/AvroReadSupport/newCompatMaterializer(org.apache.parquet.schema.MessageType,org.apache.parquet.pig.Schema,org.apache.parquet.avro.GenericData)
org/apache/parquet/avro/AvroReadSupport/prepareForRead(org.apache.parquet.hadoop.Configuration,java.util.Map,org.apache.parquet.schema.MessageType,org.apache.parquet.hadoop.api.ReadSupport.ReadContext)#org/apache/parquet/hadoop/api/ReadSupport/ReadContext/getReadSupportMetadata()
org/apache/parquet/avro/AvroReadSupport/prepareForRead(org.apache.parquet.hadoop.Configuration,java.util.Map,org.apache.parquet.schema.MessageType,org.apache.parquet.hadoop.api.ReadSupport.ReadContext)#java/util/Map/get(java.lang.Object)
org/apache/parquet/avro/AvroReadSupport/prepareForRead(org.apache.parquet.hadoop.Configuration,java.util.Map,org.apache.parquet.schema.MessageType,org.apache.parquet.hadoop.api.ReadSupport.ReadContext)#org/apache/parquet/hadoop/api/ReadSupport/ReadContext/getRequestedSchema()
org/apache/parquet/avro/AvroReadSupport/prepareForRead(org.apache.parquet.hadoop.Configuration,java.util.Map,org.apache.parquet.schema.MessageType,org.apache.parquet.hadoop.api.ReadSupport.ReadContext)#org/apache/parquet/avro/AvroReadSupport/getDataModel(org.apache.parquet.hadoop.Configuration)
org/apache/parquet/avro/AvroReadSupport/prepareForRead(org.apache.parquet.hadoop.Configuration,java.util.Map,org.apache.parquet.schema.MessageType,org.apache.parquet.hadoop.api.ReadSupport.ReadContext)#org/apache/parquet/avro/AvroSchemaConverter/AvroSchemaConverter(org.apache.parquet.hadoop.Configuration)
org/apache/parquet/avro/AvroReadSupport/prepareForRead(org.apache.parquet.hadoop.Configuration,java.util.Map,org.apache.parquet.schema.MessageType,org.apache.parquet.hadoop.api.ReadSupport.ReadContext)#org/apache/parquet/avro/AvroRecordMaterializer/AvroRecordMaterializer(org.apache.parquet.schema.MessageType,org.apache.parquet.pig.Schema,org.apache.parquet.avro.GenericData)
org/apache/parquet/avro/AvroReadSupport/setAvroDataSupplier(org.apache.parquet.hadoop.Configuration,java.lang.Class)#java/lang/Class/getName()
org/apache/parquet/hadoop/util/ContextUtil/newJobContext(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.util.JobID)#java/lang/reflect/Constructor/newInstance(java.lang.Object[])
org/apache/parquet/hadoop/util/ContextUtil/newJobContext(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.util.JobID)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String,java.lang.Throwable)
org/apache/parquet/hadoop/util/ContextUtil/findCounterMethod(org.apache.parquet.hadoop.TaskAttemptContext)#java/lang/Class/isAssignableFrom(java.lang.Class)
org/apache/parquet/hadoop/util/ContextUtil/findCounterMethod(org.apache.parquet.hadoop.TaskAttemptContext)#java/util/Map/get(java.lang.Object)
org/apache/parquet/hadoop/util/ContextUtil/findCounterMethod(org.apache.parquet.hadoop.TaskAttemptContext)#java/lang/reflect/Method/getReturnType()
org/apache/parquet/hadoop/util/ContextUtil/findCounterMethod(org.apache.parquet.hadoop.TaskAttemptContext)#java/util/Map/containsKey(java.lang.Object)
org/apache/parquet/hadoop/util/ContextUtil/findCounterMethod(org.apache.parquet.hadoop.TaskAttemptContext)#java/util/Map/put(K,V)
org/apache/parquet/hadoop/util/ContextUtil/newTaskAttemptContext(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.util.TaskAttemptID)#java/lang/reflect/Constructor/newInstance(java.lang.Object[])
org/apache/parquet/hadoop/util/ContextUtil/newTaskAttemptContext(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.util.TaskAttemptID)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String,java.lang.Throwable)
org/apache/parquet/hadoop/util/ContextUtil/getConfiguration(org.apache.parquet.hadoop.util.JobContext)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String,java.lang.Throwable)
org/apache/parquet/hadoop/util/ContextUtil/getConfiguration(org.apache.parquet.hadoop.util.JobContext)#java/lang/reflect/Method/invoke(java.lang.Object,java.lang.Object[])
org/apache/parquet/hadoop/util/ContextUtil/incrementCounter(org.apache.parquet.hadoop.util.counters.mapreduce.Counter,long)#org/apache/parquet/hadoop/util/ContextUtil/invoke(java.lang.reflect.Method,java.lang.Object,java.lang.Object[])
org/apache/parquet/hadoop/util/ContextUtil/hasCounterMethod(org.apache.parquet.hadoop.TaskAttemptContext)#org/apache/parquet/hadoop/util/ContextUtil/findCounterMethod(org.apache.parquet.hadoop.TaskAttemptContext)
org/apache/parquet/hadoop/util/ContextUtil/newGenericCounter(java.lang.String,java.lang.String,long)#java/lang/reflect/Constructor/newInstance(java.lang.Object[])
org/apache/parquet/hadoop/util/ContextUtil/newGenericCounter(java.lang.String,java.lang.String,long)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String,java.lang.Throwable)
org/apache/parquet/hadoop/util/ContextUtil/getCounter(org.apache.parquet.hadoop.TaskAttemptContext,java.lang.String,java.lang.String)#org/apache/parquet/hadoop/util/ContextUtil/findCounterMethod(org.apache.parquet.hadoop.TaskAttemptContext)
org/apache/parquet/hadoop/util/ContextUtil/getCounter(org.apache.parquet.hadoop.TaskAttemptContext,java.lang.String,java.lang.String)#org/apache/parquet/hadoop/util/ContextUtil/invoke(java.lang.reflect.Method,java.lang.Object,java.lang.Object[])
org/apache/parquet/hadoop/util/ContextUtil/invoke(java.lang.reflect.Method,java.lang.Object,java.lang.Object[])#java/lang/reflect/Method/getName()
org/apache/parquet/hadoop/util/ContextUtil/invoke(java.lang.reflect.Method,java.lang.Object,java.lang.Object[])#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String,java.lang.Throwable)
org/apache/parquet/hadoop/util/ContextUtil/invoke(java.lang.reflect.Method,java.lang.Object,java.lang.Object[])#java/lang/reflect/Method/invoke(java.lang.Object,java.lang.Object[])
org/apache/parquet/scrooge/TestCorruptScroogeRecords/setupJob(org.apache.parquet.hadoop.Job,org.apache.parquet.hadoop.Path)#org/apache/parquet/hadoop/thrift/ThriftReadSupport/setRecordConverterClass(org.apache.parquet.hadoop.JobConf,java.lang.Class)
org/apache/parquet/scrooge/TestCorruptScroogeRecords/setupJob(org.apache.parquet.hadoop.Job,org.apache.parquet.hadoop.Path)#org/apache/parquet/hadoop/thrift/ParquetThriftInputFormat/setThriftClass(org.apache.parquet.hadoop.JobConf,java.lang.Class)
org/apache/parquet/scrooge/TestCorruptScroogeRecords/assertEqualsExcepted(java.util.List,java.util.List)#java/util/ArrayList/ArrayList()
org/apache/parquet/scrooge/TestCorruptScroogeRecords/assertEqualsExcepted(java.util.List,java.util.List)#java/io/ByteArrayInputStream/ByteArrayInputStream(byte[])
org/apache/parquet/scrooge/TestCorruptScroogeRecords/assertEqualsExcepted(java.util.List,java.util.List)#java/io/ByteArrayOutputStream/toByteArray()
org/apache/parquet/scrooge/TestCorruptScroogeRecords/assertEqualsExcepted(java.util.List,java.util.List)#java/io/ByteArrayOutputStream/ByteArrayOutputStream()
org/apache/parquet/thrift/struct/ThriftType/I32Type/accept(org.apache.parquet.thrift.struct.ThriftType.TypeVisitor)#org/apache/parquet/thrift/struct/ThriftType/TypeVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.I32Type)
org/apache/parquet/thrift/struct/ThriftType/I32Type/accept(org.apache.parquet.thrift.struct.ThriftType.StateVisitor,S)#org/apache/parquet/thrift/struct/ThriftType/StateVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.I32Type,S)
org/apache/parquet/column/impl/ColumnWriteStoreV2/getColumnDescriptors()#java/util/Map/keySet()
org/apache/parquet/column/impl/ColumnWriteStoreV2/flush()#org/apache/parquet/column/impl/ColumnWriterV2/writePage(long)
org/apache/parquet/column/impl/ColumnWriteStoreV2/flush()#org/apache/parquet/column/impl/ColumnWriterV2/getRowsWrittenSoFar()
org/apache/parquet/column/impl/ColumnWriteStoreV2/flush()#java/util/Map/values()
org/apache/parquet/column/impl/ColumnWriteStoreV2/flush()#org/apache/parquet/column/impl/ColumnWriterV2/finalizeColumnChunk()
org/apache/parquet/column/impl/ColumnWriteStoreV2/sizeCheck()#java/lang/Math/min(long,long)
org/apache/parquet/column/impl/ColumnWriteStoreV2/sizeCheck()#org/apache/parquet/column/ParquetProperties/getMinRowCountForPageSizeCheck()
org/apache/parquet/column/impl/ColumnWriteStoreV2/sizeCheck()#org/apache/parquet/column/impl/ColumnWriterV2/writePage(long)
org/apache/parquet/column/impl/ColumnWriteStoreV2/sizeCheck()#org/apache/parquet/column/impl/ColumnWriterV2/getRowsWrittenSoFar()
org/apache/parquet/column/impl/ColumnWriteStoreV2/sizeCheck()#org/apache/parquet/column/ParquetProperties/estimateNextSizeCheck()
org/apache/parquet/column/impl/ColumnWriteStoreV2/sizeCheck()#org/apache/parquet/column/ParquetProperties/getMaxRowCountForPageSizeCheck()
org/apache/parquet/column/impl/ColumnWriteStoreV2/sizeCheck()#java/lang/Math/max(long,long)
org/apache/parquet/column/impl/ColumnWriteStoreV2/sizeCheck()#org/apache/parquet/column/ParquetProperties/getPageSizeThreshold()
org/apache/parquet/column/impl/ColumnWriteStoreV2/sizeCheck()#org/apache/parquet/column/impl/ColumnWriterV2/getCurrentPageBufferedSize()
org/apache/parquet/column/impl/ColumnWriteStoreV2/getAllocatedSize()#org/apache/parquet/column/impl/ColumnWriterV2/allocatedSize()
org/apache/parquet/column/impl/ColumnWriteStoreV2/getAllocatedSize()#java/util/Map/values()
org/apache/parquet/column/impl/ColumnWriteStoreV2/close()#org/apache/parquet/column/impl/ColumnWriteStoreV2/flush()
org/apache/parquet/column/impl/ColumnWriteStoreV2/close()#java/util/Map/values()
org/apache/parquet/column/impl/ColumnWriteStoreV2/close()#org/apache/parquet/column/impl/ColumnWriterV2/close()
org/apache/parquet/column/impl/ColumnWriteStoreV2/memUsageString()#java/lang/StringBuilder/append(java.lang.String)
org/apache/parquet/column/impl/ColumnWriteStoreV2/memUsageString()#org/apache/parquet/column/impl/ColumnWriterV2/memUsageString(java.lang.String)
org/apache/parquet/column/impl/ColumnWriteStoreV2/memUsageString()#java/lang/StringBuilder/toString()
org/apache/parquet/column/impl/ColumnWriteStoreV2/memUsageString()#java/util/Map/values()
org/apache/parquet/column/impl/ColumnWriteStoreV2/memUsageString()#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/apache/parquet/column/impl/ColumnWriteStoreV2/endRecord()#org/apache/parquet/column/impl/ColumnWriteStoreV2/sizeCheck()
org/apache/parquet/column/impl/ColumnWriteStoreV2/toString()#java/util/Map/Entry/getValue()
org/apache/parquet/column/impl/ColumnWriteStoreV2/toString()#org/apache/parquet/column/impl/ColumnWriterV2/getTotalBufferedSize()
org/apache/parquet/column/impl/ColumnWriteStoreV2/toString()#java/lang/StringBuilder/append(long)
org/apache/parquet/column/impl/ColumnWriteStoreV2/toString()#java/lang/StringBuilder/StringBuilder()
org/apache/parquet/column/impl/ColumnWriteStoreV2/toString()#java/util/Map/entrySet()
org/apache/parquet/column/impl/ColumnWriteStoreV2/toString()#java/lang/StringBuilder/toString()
org/apache/parquet/column/impl/ColumnWriteStoreV2/toString()#java/util/Arrays/toString(java.lang.Object[])
org/apache/parquet/column/impl/ColumnWriteStoreV2/toString()#java/lang/StringBuilder/append(java.lang.String)
org/apache/parquet/column/impl/ColumnWriteStoreV2/toString()#org/apache/parquet/column/ColumnDescriptor/getPath()
org/apache/parquet/column/impl/ColumnWriteStoreV2/toString()#java/util/Map/Entry/getKey()
org/apache/parquet/column/impl/ColumnWriteStoreV2/getColumnWriter(org.apache.parquet.column.ColumnDescriptor)#java/util/Map/get(java.lang.Object)
org/apache/parquet/column/impl/ColumnWriteStoreV2/getBufferedSize()#org/apache/parquet/column/impl/ColumnWriterV2/getTotalBufferedSize()
org/apache/parquet/column/impl/ColumnWriteStoreV2/getBufferedSize()#java/util/Map/values()
org/apache/parquet/avro/RecordWithUUIDArray/hashCode()#java/util/Arrays/hashCode(java.lang.Object[])
org/apache/parquet/avro/RecordWithUUIDArray/equals(java.lang.Object)#java/util/Arrays/equals(java.lang.Object[],java.lang.Object[])
org/apache/parquet/io/BaseRecordReader/addPrimitiveBINARY(java.lang.String,int,org.apache.parquet.io.api.Binary)#org/apache/parquet/io/BaseRecordReader/endField(java.lang.String,int)
org/apache/parquet/io/BaseRecordReader/addPrimitiveBINARY(java.lang.String,int,org.apache.parquet.io.api.Binary)#org/apache/parquet/io/api/RecordConsumer/addBinary(org.apache.parquet.io.api.Binary)
org/apache/parquet/io/BaseRecordReader/addPrimitiveBINARY(java.lang.String,int,org.apache.parquet.io.api.Binary)#org/apache/parquet/io/BaseRecordReader/startField(java.lang.String,int)
org/apache/parquet/io/BaseRecordReader/startGroup(java.lang.String,int)#org/apache/parquet/io/api/RecordConsumer/startGroup()
org/apache/parquet/io/BaseRecordReader/startGroup(java.lang.String,int)#org/apache/parquet/io/BaseRecordReader/startField(java.lang.String,int)
org/apache/parquet/io/BaseRecordReader/read()#org/apache/parquet/io/BaseRecordReader/readOneRecord()
org/apache/parquet/io/BaseRecordReader/read()#org/apache/parquet/io/api/RecordMaterializer/getCurrentRecord()
org/apache/parquet/io/BaseRecordReader/addPrimitiveINT64(java.lang.String,int,long)#org/apache/parquet/io/api/RecordConsumer/addLong(long)
org/apache/parquet/io/BaseRecordReader/addPrimitiveINT64(java.lang.String,int,long)#org/apache/parquet/io/BaseRecordReader/endField(java.lang.String,int)
org/apache/parquet/io/BaseRecordReader/addPrimitiveINT64(java.lang.String,int,long)#org/apache/parquet/io/BaseRecordReader/startField(java.lang.String,int)
org/apache/parquet/io/BaseRecordReader/endMessage()#org/apache/parquet/io/api/RecordConsumer/endMessage()
org/apache/parquet/io/BaseRecordReader/endMessage()#org/apache/parquet/io/api/RecordConsumer/endField(java.lang.String,int)
org/apache/parquet/io/BaseRecordReader/addPrimitiveINT32(java.lang.String,int,int)#org/apache/parquet/io/api/RecordConsumer/addInteger(int)
org/apache/parquet/io/BaseRecordReader/addPrimitiveINT32(java.lang.String,int,int)#org/apache/parquet/io/BaseRecordReader/endField(java.lang.String,int)
org/apache/parquet/io/BaseRecordReader/addPrimitiveINT32(java.lang.String,int,int)#org/apache/parquet/io/BaseRecordReader/startField(java.lang.String,int)
org/apache/parquet/io/BaseRecordReader/endField(java.lang.String,int)#org/apache/parquet/io/api/RecordConsumer/endField(java.lang.String,int)
org/apache/parquet/io/BaseRecordReader/getCaseId(int,int,int,int)#org/apache/parquet/io/RecordReaderImplementation/State/getCase(int,int,int)
org/apache/parquet/io/BaseRecordReader/getCaseId(int,int,int,int)#org/apache/parquet/io/RecordReaderImplementation/Case/getID()
org/apache/parquet/io/BaseRecordReader/endGroup(java.lang.String,int)#org/apache/parquet/io/BaseRecordReader/endField(java.lang.String,int)
org/apache/parquet/io/BaseRecordReader/endGroup(java.lang.String,int)#org/apache/parquet/io/api/RecordConsumer/endField(java.lang.String,int)
org/apache/parquet/io/BaseRecordReader/endGroup(java.lang.String,int)#org/apache/parquet/io/api/RecordConsumer/endGroup()
org/apache/parquet/io/BaseRecordReader/error(java.lang.String)#org/apache/parquet/io/ParquetDecodingException/ParquetDecodingException(java.lang.String)
org/apache/parquet/io/BaseRecordReader/startMessage()#org/apache/parquet/io/api/RecordConsumer/startMessage()
org/apache/parquet/io/BaseRecordReader/startField(java.lang.String,int)#org/apache/parquet/io/api/RecordConsumer/startField(java.lang.String,int)
org/apache/parquet/io/BaseRecordReader/startField(java.lang.String,int)#org/apache/parquet/io/api/RecordConsumer/endField(java.lang.String,int)
org/apache/parquet/glob/GlobParser/parseOneOf(java.lang.String)#java/util/ArrayList/ArrayList()
org/apache/parquet/glob/GlobParser/parseOneOf(java.lang.String)#java/lang/String/charAt(int)
org/apache/parquet/glob/GlobParser/parseOneOf(java.lang.String)#java/lang/String/length()
org/apache/parquet/glob/GlobParser/parseOneOf(java.lang.String)#java/lang/String/substring(int,int)
org/apache/parquet/glob/GlobParser/parseOneOf(java.lang.String)#org/apache/parquet/glob/GlobParser/parse(java.lang.String)
org/apache/parquet/glob/GlobParser/parseOneOf(java.lang.String)#java/util/List/add(E)
org/apache/parquet/glob/GlobParser/parseOneOf(java.lang.String)#org/apache/parquet/glob/GlobParser/GlobParseException/GlobParseException(java.lang.String)
org/apache/parquet/glob/GlobParser/parseOneOf(java.lang.String)#org/apache/parquet/glob/GlobParser/annotateMessage(java.lang.String,int)
org/apache/parquet/glob/GlobParser/parseOneOf(java.lang.String)#org/apache/parquet/glob/GlobNode/OneOf/OneOf(java.util.List)
org/apache/parquet/glob/GlobParser/parse(java.lang.String)#java/util/ArrayList/ArrayList()
org/apache/parquet/glob/GlobParser/parse(java.lang.String)#org/apache/parquet/glob/GlobNode/GlobNodeSequence/GlobNodeSequence(java.util.List)
org/apache/parquet/glob/GlobParser/parse(java.lang.String)#java/lang/String/charAt(int)
org/apache/parquet/glob/GlobParser/parse(java.lang.String)#java/lang/String/length()
org/apache/parquet/glob/GlobParser/parse(java.lang.String)#java/util/Arrays/asList(T[])
org/apache/parquet/glob/GlobParser/parse(java.lang.String)#java/lang/String/equals(java.lang.Object)
org/apache/parquet/glob/GlobParser/parse(java.lang.String)#java/util/List/add(E)
org/apache/parquet/glob/GlobParser/parse(java.lang.String)#org/apache/parquet/glob/GlobParser/GlobParseException/GlobParseException(java.lang.String)
org/apache/parquet/glob/GlobParser/parse(java.lang.String)#org/apache/parquet/glob/GlobParser/annotateMessage(java.lang.String,int)
org/apache/parquet/glob/GlobParser/parse(java.lang.String)#org/apache/parquet/glob/GlobNode/Atom/Atom(java.lang.String)
org/apache/parquet/glob/GlobParser/parse(java.lang.String)#org/apache/parquet/glob/GlobParser/parseOneOf(java.lang.String)
org/apache/parquet/glob/GlobParser/parse(java.lang.String)#java/lang/String/isEmpty()
org/apache/parquet/glob/GlobParser/parse(java.lang.String)#java/lang/String/substring(int,int)
org/apache/parquet/glob/GlobParser/annotateMessage(java.lang.String,int)#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/apache/parquet/glob/GlobParser/annotateMessage(java.lang.String,int)#java/lang/StringBuilder/append(char)
org/apache/parquet/glob/GlobParser/annotateMessage(java.lang.String,int)#java/lang/StringBuilder/toString()
org/apache/parquet/bytes/BytesUtils/readIntLittleEndian(java.nio.ByteBuffer,int)#java/nio/ByteBuffer/get(int)
org/apache/parquet/bytes/BytesUtils/readIntLittleEndian(java.io.InputStream)#java/io/InputStream/read()
org/apache/parquet/bytes/BytesUtils/readIntLittleEndian(java.io.InputStream)#java/io/EOFException/EOFException()
org/apache/parquet/bytes/BytesUtils/writeUnsignedVarInt(int,java.io.OutputStream)#java/io/OutputStream/write(int)
org/apache/parquet/bytes/BytesUtils/readZigZagVarLong(java.io.InputStream)#org/apache/parquet/bytes/BytesUtils/readUnsignedVarLong(java.io.InputStream)
org/apache/parquet/bytes/BytesUtils/writeUnsignedVarInt(int,java.nio.ByteBuffer)#java/nio/ByteBuffer/putInt(int)
org/apache/parquet/bytes/BytesUtils/writeIntLittleEndianPaddedOnBitWidth(java.io.OutputStream,int,int)#java/io/IOException/IOException(java.lang.String)
org/apache/parquet/bytes/BytesUtils/writeIntLittleEndianPaddedOnBitWidth(java.io.OutputStream,int,int)#org/apache/parquet/bytes/BytesUtils/paddedByteCountFromBits(int)
org/apache/parquet/bytes/BytesUtils/writeIntLittleEndianPaddedOnBitWidth(java.io.OutputStream,int,int)#org/apache/parquet/bytes/BytesUtils/writeIntLittleEndian(java.io.OutputStream,int)
org/apache/parquet/bytes/BytesUtils/writeIntLittleEndianPaddedOnBitWidth(java.io.OutputStream,int,int)#org/apache/parquet/bytes/BytesUtils/writeIntLittleEndianOnOneByte(java.io.OutputStream,int)
org/apache/parquet/bytes/BytesUtils/writeIntLittleEndianPaddedOnBitWidth(java.io.OutputStream,int,int)#org/apache/parquet/bytes/BytesUtils/writeIntLittleEndianOnThreeBytes(java.io.OutputStream,int)
org/apache/parquet/bytes/BytesUtils/writeIntLittleEndianPaddedOnBitWidth(java.io.OutputStream,int,int)#org/apache/parquet/bytes/BytesUtils/writeIntLittleEndianOnTwoBytes(java.io.OutputStream,int)
org/apache/parquet/bytes/BytesUtils/writeIntLittleEndianPaddedOnBitWidth(java.io.OutputStream,int,int)#java/lang/String/format(java.lang.String,java.lang.Object[])
org/apache/parquet/bytes/BytesUtils/writeIntLittleEndianOnOneByte(java.io.OutputStream,int)#java/io/OutputStream/write(int)
org/apache/parquet/bytes/BytesUtils/readUnsignedVarInt(java.io.InputStream)#java/io/InputStream/read()
org/apache/parquet/bytes/BytesUtils/readUnsignedVarLong(java.io.InputStream)#java/io/InputStream/read()
org/apache/parquet/bytes/BytesUtils/readIntLittleEndianOnThreeBytes(java.io.InputStream)#java/io/InputStream/read()
org/apache/parquet/bytes/BytesUtils/readIntLittleEndianOnThreeBytes(java.io.InputStream)#java/io/EOFException/EOFException()
org/apache/parquet/bytes/BytesUtils/writeUnsignedVarLong(long,java.io.OutputStream)#java/io/OutputStream/write(int)
org/apache/parquet/bytes/BytesUtils/writeZigZagVarInt(int,java.io.OutputStream)#org/apache/parquet/bytes/BytesUtils/writeUnsignedVarInt(int,java.io.OutputStream)
org/apache/parquet/bytes/BytesUtils/readZigZagVarInt(java.io.InputStream)#org/apache/parquet/bytes/BytesUtils/readUnsignedVarInt(java.io.InputStream)
org/apache/parquet/bytes/BytesUtils/getWidthFromMaxInt(int)#java/lang/Integer/numberOfLeadingZeros(int)
org/apache/parquet/bytes/BytesUtils/readIntLittleEndianOnOneByte(java.io.InputStream)#java/io/InputStream/read()
org/apache/parquet/bytes/BytesUtils/readIntLittleEndianOnOneByte(java.io.InputStream)#java/io/EOFException/EOFException()
org/apache/parquet/bytes/BytesUtils/readIntLittleEndianOnTwoBytes(java.io.InputStream)#java/io/InputStream/read()
org/apache/parquet/bytes/BytesUtils/readIntLittleEndianOnTwoBytes(java.io.InputStream)#java/io/EOFException/EOFException()
org/apache/parquet/bytes/BytesUtils/writeIntLittleEndianOnTwoBytes(java.io.OutputStream,int)#java/io/OutputStream/write(int)
org/apache/parquet/bytes/BytesUtils/writeIntLittleEndian(java.io.OutputStream,int)#java/io/OutputStream/write(int)
org/apache/parquet/bytes/BytesUtils/writeZigZagVarLong(long,java.io.OutputStream)#org/apache/parquet/bytes/BytesUtils/writeUnsignedVarLong(long,java.io.OutputStream)
org/apache/parquet/bytes/BytesUtils/writeIntLittleEndianOnThreeBytes(java.io.OutputStream,int)#java/io/OutputStream/write(int)
org/apache/parquet/bytes/BytesUtils/readIntLittleEndianPaddedOnBitWidth(java.io.InputStream,int)#org/apache/parquet/bytes/BytesUtils/readIntLittleEndian(java.io.InputStream)
org/apache/parquet/bytes/BytesUtils/readIntLittleEndianPaddedOnBitWidth(java.io.InputStream,int)#java/lang/String/format(java.lang.String,java.lang.Object[])
org/apache/parquet/bytes/BytesUtils/readIntLittleEndianPaddedOnBitWidth(java.io.InputStream,int)#org/apache/parquet/bytes/BytesUtils/readIntLittleEndianOnThreeBytes(java.io.InputStream)
org/apache/parquet/bytes/BytesUtils/readIntLittleEndianPaddedOnBitWidth(java.io.InputStream,int)#org/apache/parquet/bytes/BytesUtils/readIntLittleEndianOnOneByte(java.io.InputStream)
org/apache/parquet/bytes/BytesUtils/readIntLittleEndianPaddedOnBitWidth(java.io.InputStream,int)#java/io/IOException/IOException(java.lang.String)
org/apache/parquet/bytes/BytesUtils/readIntLittleEndianPaddedOnBitWidth(java.io.InputStream,int)#org/apache/parquet/bytes/BytesUtils/readIntLittleEndianOnTwoBytes(java.io.InputStream)
org/apache/parquet/bytes/BytesUtils/readIntLittleEndianPaddedOnBitWidth(java.io.InputStream,int)#org/apache/parquet/bytes/BytesUtils/paddedByteCountFromBits(int)
org/apache/parquet/thrift/projection/StrictFieldProjectionFilter/getUnmatchedPatterns()#java/util/ArrayList/ArrayList()
org/apache/parquet/thrift/projection/StrictFieldProjectionFilter/getUnmatchedPatterns()#org/apache/parquet/thrift/projection/StrictFieldProjectionFilter/WildcardPathStatus/getWildcardPath()
org/apache/parquet/thrift/projection/StrictFieldProjectionFilter/getUnmatchedPatterns()#org/apache/parquet/thrift/projection/StrictFieldProjectionFilter/WildcardPathStatus/hasMatched()
org/apache/parquet/thrift/projection/StrictFieldProjectionFilter/getUnmatchedPatterns()#java/util/List/add(E)
org/apache/parquet/thrift/projection/StrictFieldProjectionFilter/fromSemicolonDelimitedString(java.lang.String)#org/apache/parquet/thrift/projection/StrictFieldProjectionFilter/StrictFieldProjectionFilter(java.util.List)
org/apache/parquet/thrift/projection/StrictFieldProjectionFilter/fromSemicolonDelimitedString(java.lang.String)#org/apache/parquet/thrift/projection/StrictFieldProjectionFilter/parseSemicolonDelimitedString(java.lang.String)
org/apache/parquet/thrift/projection/StrictFieldProjectionFilter/keep(java.lang.String)#org/apache/parquet/thrift/projection/StrictFieldProjectionFilter/WildcardPathStatus/getWildcardPath()
org/apache/parquet/thrift/projection/StrictFieldProjectionFilter/keep(java.lang.String)#java/lang/String/equals(java.lang.Object)
org/apache/parquet/thrift/projection/StrictFieldProjectionFilter/keep(java.lang.String)#org/apache/parquet/thrift/projection/StrictFieldProjectionFilter/WildcardPathStatus/matches(java.lang.String)
org/apache/parquet/thrift/projection/StrictFieldProjectionFilter/keep(java.lang.String)#org/apache/parquet/glob/WildcardPath/getParentGlobPath()
org/apache/parquet/thrift/projection/StrictFieldProjectionFilter/keep(java.lang.String)#java/lang/String/format(java.lang.String,java.lang.Object[])
org/apache/parquet/thrift/projection/StrictFieldProjectionFilter/keep(java.lang.String)#org/apache/parquet/glob/WildcardPath/getOriginalPattern()
org/apache/parquet/thrift/projection/StrictFieldProjectionFilter/keep(java.lang.String)#org/apache/parquet/thrift/projection/StrictFieldProjectionFilter/warn(java.lang.String)
org/apache/parquet/thrift/projection/StrictFieldProjectionFilter/keep(org.apache.parquet.thrift.projection.FieldsPath)#org/apache/parquet/thrift/projection/StrictFieldProjectionFilter/keep(java.lang.String)
org/apache/parquet/thrift/projection/StrictFieldProjectionFilter/keep(org.apache.parquet.thrift.projection.FieldsPath)#org/apache/parquet/thrift/projection/FieldsPath/toDelimitedString(java.lang.String)
org/apache/parquet/thrift/projection/StrictFieldProjectionFilter/assertNoUnmatchedPatterns()#org/apache/parquet/thrift/projection/ThriftProjectionException/ThriftProjectionException(java.lang.String)
org/apache/parquet/thrift/projection/StrictFieldProjectionFilter/assertNoUnmatchedPatterns()#org/apache/parquet/thrift/projection/StrictFieldProjectionFilter/getUnmatchedPatterns()
org/apache/parquet/thrift/projection/StrictFieldProjectionFilter/assertNoUnmatchedPatterns()#java/lang/StringBuilder/append(java.lang.String)
org/apache/parquet/thrift/projection/StrictFieldProjectionFilter/assertNoUnmatchedPatterns()#java/util/List/isEmpty()
org/apache/parquet/thrift/projection/StrictFieldProjectionFilter/assertNoUnmatchedPatterns()#java/lang/StringBuilder/append(char)
org/apache/parquet/thrift/projection/StrictFieldProjectionFilter/assertNoUnmatchedPatterns()#java/lang/StringBuilder/toString()
org/apache/parquet/thrift/projection/StrictFieldProjectionFilter/assertNoUnmatchedPatterns()#org/apache/parquet/glob/WildcardPath/getParentGlobPath()
org/apache/parquet/thrift/projection/StrictFieldProjectionFilter/assertNoUnmatchedPatterns()#java/lang/String/format(java.lang.String,java.lang.Object[])
org/apache/parquet/thrift/projection/StrictFieldProjectionFilter/assertNoUnmatchedPatterns()#org/apache/parquet/glob/WildcardPath/getOriginalPattern()
org/apache/parquet/thrift/projection/StrictFieldProjectionFilter/assertNoUnmatchedPatterns()#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/apache/parquet/thrift/projection/StrictFieldProjectionFilter/parseSemicolonDelimitedString(java.lang.String)#org/apache/parquet/thrift/projection/ThriftProjectionException/ThriftProjectionException(java.lang.String)
org/apache/parquet/thrift/projection/StrictFieldProjectionFilter/parseSemicolonDelimitedString(java.lang.String)#java/util/ArrayList/ArrayList()
org/apache/parquet/thrift/projection/StrictFieldProjectionFilter/parseSemicolonDelimitedString(java.lang.String)#java/lang/String/split(java.lang.String)
org/apache/parquet/thrift/projection/StrictFieldProjectionFilter/parseSemicolonDelimitedString(java.lang.String)#java/util/List/isEmpty()
org/apache/parquet/thrift/projection/StrictFieldProjectionFilter/parseSemicolonDelimitedString(java.lang.String)#java/lang/String/format(java.lang.String,java.lang.Object[])
org/apache/parquet/thrift/projection/StrictFieldProjectionFilter/parseSemicolonDelimitedString(java.lang.String)#java/lang/String/isEmpty()
org/apache/parquet/thrift/projection/StrictFieldProjectionFilter/parseSemicolonDelimitedString(java.lang.String)#java/util/List/add(E)
org/apache/parquet/proto/ProtoParquetInputFormat/setRequestedProjection(org.apache.parquet.hadoop.Job,java.lang.String)#org/apache/parquet/proto/ProtoReadSupport/setRequestedProjection(org.apache.parquet.hadoop.Configuration,java.lang.String)
org/apache/parquet/proto/ProtoParquetInputFormat/setRequestedProjection(org.apache.parquet.hadoop.Job,java.lang.String)#org/apache/parquet/hadoop/util/ContextUtil/getConfiguration(org.apache.parquet.hadoop.util.JobContext)
org/apache/parquet/bytes/BytesInput/BAOSBytesInput/writeAllTo(java.io.OutputStream)#java/io/ByteArrayOutputStream/writeTo(java.io.OutputStream)
org/apache/parquet/bytes/BytesInput/BAOSBytesInput/size()#java/io/ByteArrayOutputStream/size()
org/apache/parquet/hadoop/ColumnChunkPageReadStore/getPageReader(org.apache.parquet.column.ColumnDescriptor)#java/util/Map/get(java.lang.Object)
org/apache/parquet/hadoop/ColumnChunkPageReadStore/getPageReader(org.apache.parquet.column.ColumnDescriptor)#java/util/Map/keySet()
org/apache/parquet/hadoop/ColumnChunkPageReadStore/getPageReader(org.apache.parquet.column.ColumnDescriptor)#java/util/Map/containsKey(java.lang.Object)
org/apache/parquet/hadoop/ColumnChunkPageReadStore/getPageReader(org.apache.parquet.column.ColumnDescriptor)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/parquet/hadoop/ColumnChunkPageReadStore/addColumn(org.apache.parquet.column.ColumnDescriptor,org.apache.parquet.hadoop.ColumnChunkPageReadStore.ColumnChunkPageReader)#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/apache/parquet/hadoop/ColumnChunkPageReadStore/addColumn(org.apache.parquet.column.ColumnDescriptor,org.apache.parquet.hadoop.ColumnChunkPageReadStore.ColumnChunkPageReader)#java/util/Map/put(K,V)
org/apache/parquet/hadoop/ColumnChunkPageReadStore/readDictionaryPage(org.apache.parquet.column.ColumnDescriptor)#java/util/Map/get(java.lang.Object)
org/apache/parquet/hadoop/ColumnChunkPageReadStore/readDictionaryPage(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/hadoop/ColumnChunkPageReadStore/ColumnChunkPageReader/readDictionaryPage()
org/apache/parquet/hadoop/TestLruCache/testOlderValueIsIgnored()#org/apache/parquet/hadoop/LruCache/put(K,V)
org/apache/parquet/hadoop/TestLruCache/testOlderValueIsIgnored()#org/apache/parquet/hadoop/LruCache/LruCache(int)
org/apache/parquet/hadoop/TestLruCache/testOlderValueIsIgnored()#org/apache/parquet/hadoop/TestLruCache/SimpleValue/SimpleValue(boolean,boolean)
org/apache/parquet/hadoop/TestLruCache/testOlderValueIsIgnored()#org/apache/parquet/hadoop/LruCache/getCurrentValue(K)
org/apache/parquet/hadoop/TestLruCache/testRemove()#org/apache/parquet/hadoop/LruCache/size()
org/apache/parquet/hadoop/TestLruCache/testRemove()#org/apache/parquet/hadoop/LruCache/put(K,V)
org/apache/parquet/hadoop/TestLruCache/testRemove()#org/apache/parquet/hadoop/LruCache/LruCache(int)
org/apache/parquet/hadoop/TestLruCache/testRemove()#org/apache/parquet/hadoop/TestLruCache/SimpleValue/SimpleValue(boolean,boolean)
org/apache/parquet/hadoop/TestLruCache/testRemove()#org/apache/parquet/hadoop/LruCache/getCurrentValue(K)
org/apache/parquet/hadoop/TestLruCache/testRemove()#org/apache/parquet/hadoop/LruCache/remove(K)
org/apache/parquet/hadoop/TestLruCache/testClear()#org/apache/parquet/hadoop/LruCache/size()
org/apache/parquet/hadoop/TestLruCache/testClear()#org/apache/parquet/hadoop/LruCache/clear()
org/apache/parquet/hadoop/TestLruCache/testClear()#org/apache/parquet/hadoop/LruCache/put(K,V)
org/apache/parquet/hadoop/TestLruCache/testClear()#org/apache/parquet/hadoop/LruCache/LruCache(int)
org/apache/parquet/hadoop/TestLruCache/testClear()#org/apache/parquet/hadoop/TestLruCache/SimpleValue/SimpleValue(boolean,boolean)
org/apache/parquet/hadoop/TestLruCache/testClear()#org/apache/parquet/hadoop/LruCache/getCurrentValue(K)
org/apache/parquet/hadoop/TestLruCache/testCurrentValueOverwritesExisting()#org/apache/parquet/hadoop/LruCache/size()
org/apache/parquet/hadoop/TestLruCache/testCurrentValueOverwritesExisting()#org/apache/parquet/hadoop/LruCache/put(K,V)
org/apache/parquet/hadoop/TestLruCache/testCurrentValueOverwritesExisting()#org/apache/parquet/hadoop/LruCache/LruCache(int)
org/apache/parquet/hadoop/TestLruCache/testCurrentValueOverwritesExisting()#org/apache/parquet/hadoop/TestLruCache/SimpleValue/SimpleValue(boolean,boolean)
org/apache/parquet/hadoop/TestLruCache/testCurrentValueOverwritesExisting()#org/apache/parquet/hadoop/LruCache/getCurrentValue(K)
org/apache/parquet/hadoop/TestLruCache/testGetOutdatedValueReturnsNull()#org/apache/parquet/hadoop/LruCache/size()
org/apache/parquet/hadoop/TestLruCache/testGetOutdatedValueReturnsNull()#org/apache/parquet/hadoop/TestLruCache/SimpleValue/setCurrent(boolean)
org/apache/parquet/hadoop/TestLruCache/testGetOutdatedValueReturnsNull()#org/apache/parquet/hadoop/LruCache/put(K,V)
org/apache/parquet/hadoop/TestLruCache/testGetOutdatedValueReturnsNull()#org/apache/parquet/hadoop/LruCache/LruCache(int)
org/apache/parquet/hadoop/TestLruCache/testGetOutdatedValueReturnsNull()#org/apache/parquet/hadoop/TestLruCache/SimpleValue/SimpleValue(boolean,boolean)
org/apache/parquet/hadoop/TestLruCache/testGetOutdatedValueReturnsNull()#org/apache/parquet/hadoop/LruCache/getCurrentValue(K)
org/apache/parquet/hadoop/TestLruCache/testMaxSize()#org/apache/parquet/hadoop/LruCache/size()
org/apache/parquet/hadoop/TestLruCache/testMaxSize()#org/apache/parquet/hadoop/LruCache/put(K,V)
org/apache/parquet/hadoop/TestLruCache/testMaxSize()#org/apache/parquet/hadoop/LruCache/LruCache(int)
org/apache/parquet/hadoop/TestLruCache/testMaxSize()#org/apache/parquet/hadoop/TestLruCache/SimpleValue/SimpleValue(boolean,boolean)
org/apache/parquet/hadoop/TestLruCache/testMaxSize()#org/apache/parquet/hadoop/LruCache/getCurrentValue(K)
org/apache/parquet/hadoop/TestLruCache/testOutdatedValueIsIgnored()#org/apache/parquet/hadoop/LruCache/size()
org/apache/parquet/hadoop/TestLruCache/testOutdatedValueIsIgnored()#org/apache/parquet/hadoop/LruCache/put(K,V)
org/apache/parquet/hadoop/TestLruCache/testOutdatedValueIsIgnored()#org/apache/parquet/hadoop/LruCache/LruCache(int)
org/apache/parquet/hadoop/TestLruCache/testOutdatedValueIsIgnored()#org/apache/parquet/hadoop/TestLruCache/SimpleValue/SimpleValue(boolean,boolean)
org/apache/parquet/hadoop/TestLruCache/testOutdatedValueIsIgnored()#org/apache/parquet/hadoop/LruCache/getCurrentValue(K)
org/apache/parquet/tools/command/MergeCommand/execute(org.apache.parquet.tools.command.CommandLine)#org/apache/parquet/hadoop/ParquetFileWriter/appendFile(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path)
org/apache/parquet/tools/command/MergeCommand/execute(org.apache.parquet.tools.command.CommandLine)#org/apache/parquet/tools/command/MergeCommand/mergedMetadata(java.util.List)
org/apache/parquet/tools/command/MergeCommand/execute(org.apache.parquet.tools.command.CommandLine)#java/util/List/subList(int,int)
org/apache/parquet/tools/command/MergeCommand/execute(org.apache.parquet.tools.command.CommandLine)#org/apache/parquet/hadoop/ParquetFileWriter/ParquetFileWriter(org.apache.parquet.hadoop.Configuration,org.apache.parquet.schema.MessageType,org.apache.parquet.hadoop.Path,org.apache.parquet.hadoop.ParquetFileWriter.Mode)
org/apache/parquet/tools/command/MergeCommand/execute(org.apache.parquet.tools.command.CommandLine)#org/apache/parquet/hadoop/ParquetFileWriter/start()
org/apache/parquet/tools/command/MergeCommand/execute(org.apache.parquet.tools.command.CommandLine)#java/util/List/size()
org/apache/parquet/tools/command/MergeCommand/execute(org.apache.parquet.tools.command.CommandLine)#org/apache/parquet/tools/command/MergeCommand/getInputFiles(java.util.List)
org/apache/parquet/tools/command/MergeCommand/execute(org.apache.parquet.tools.command.CommandLine)#org/apache/parquet/hadoop/metadata/FileMetaData/getSchema()
org/apache/parquet/tools/command/MergeCommand/execute(org.apache.parquet.tools.command.CommandLine)#org/apache/parquet/hadoop/metadata/FileMetaData/getKeyValueMetaData()
org/apache/parquet/tools/command/MergeCommand/execute(org.apache.parquet.tools.command.CommandLine)#org/apache/parquet/hadoop/ParquetFileWriter/end(java.util.Map)
org/apache/parquet/tools/command/MergeCommand/execute(org.apache.parquet.tools.command.CommandLine)#java/util/List/get(int)
org/apache/parquet/tools/command/MergeCommand/getInputFilesFromDirectory(org.apache.parquet.hadoop.FileStatus)#java/util/ArrayList/ArrayList()
org/apache/parquet/tools/command/MergeCommand/mergedMetadata(java.util.List)#org/apache/parquet/hadoop/ParquetFileWriter/mergeMetadataFiles(java.util.List,org.apache.parquet.hadoop.Configuration)
org/apache/parquet/tools/command/MergeCommand/parseInputFiles(java.util.List)#java/util/ArrayList/ArrayList()
org/apache/parquet/tools/command/MergeCommand/getInputFiles(java.util.List)#org/apache/parquet/tools/command/MergeCommand/getInputFilesFromDirectory(org.apache.parquet.hadoop.FileStatus)
org/apache/parquet/tools/command/MergeCommand/getInputFiles(java.util.List)#org/apache/parquet/tools/command/MergeCommand/parseInputFiles(java.util.List)
org/apache/parquet/tools/command/MergeCommand/getInputFiles(java.util.List)#java/util/List/size()
org/apache/parquet/tools/command/MergeCommand/getInputFiles(java.util.List)#org/apache/parquet/tools/command/MergeCommand/checkParquetFiles(java.util.List)
org/apache/parquet/tools/command/MergeCommand/getInputFiles(java.util.List)#java/util/List/get(int)
org/apache/parquet/tools/command/MergeCommand/checkParquetFiles(java.util.List)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/parquet/arrow/schema/SchemaMapping/UnionTypeMapping/accept(org.apache.parquet.arrow.schema.SchemaMapping.TypeMappingVisitor)#org/apache/parquet/arrow/schema/SchemaMapping/TypeMappingVisitor/visit(org.apache.parquet.arrow.schema.SchemaMapping.UnionTypeMapping)
org/apache/parquet/filter2/recordlevel/TestRecordLevelFilters/testUserDefinedByInstance()#org/apache/parquet/filter2/predicate/FilterApi/userDefined(org.apache.parquet.filter2.predicate.Operators.Column,U)
org/apache/parquet/filter2/recordlevel/TestRecordLevelFilters/testUserDefinedByInstance()#org/apache/parquet/filter2/recordlevel/TestRecordLevelFilters/SetInFilter/SetInFilter(java.util.HashSet)
org/apache/parquet/filter2/recordlevel/TestRecordLevelFilters/testUserDefinedByInstance()#org/apache/parquet/filter2/recordlevel/PhoneBookWriter/readFile(java.io.File,org.apache.parquet.filter2.compat.FilterCompat.Filter)
org/apache/parquet/filter2/recordlevel/TestRecordLevelFilters/testUserDefinedByInstance()#org/apache/parquet/filter2/recordlevel/TestRecordLevelFilters/testUserDefinedByInstance()/$anonymous1/()
org/apache/parquet/filter2/recordlevel/TestRecordLevelFilters/testUserDefinedByInstance()#org/apache/parquet/filter2/predicate/FilterApi/longColumn(java.lang.String)
org/apache/parquet/filter2/recordlevel/TestRecordLevelFilters/testUserDefinedByInstance()#org/apache/parquet/filter2/recordlevel/TestRecordLevelFilters/assertFilter(java.util.List,org.apache.parquet.filter2.recordlevel.TestRecordLevelFilters.UserFilter)
org/apache/parquet/filter2/recordlevel/TestRecordLevelFilters/testUserDefinedByInstance()#java/util/HashSet/HashSet()
org/apache/parquet/filter2/recordlevel/TestRecordLevelFilters/testUserDefinedByInstance()#org/apache/parquet/filter2/compat/FilterCompat/get(org.apache.parquet.filter2.predicate.FilterPredicate)
org/apache/parquet/filter2/recordlevel/TestRecordLevelFilters/testUserDefinedByInstance()#java/util/HashSet/add(E)
org/apache/parquet/filter2/recordlevel/TestRecordLevelFilters/makeUsers()#java/util/ArrayList/ArrayList()
org/apache/parquet/filter2/recordlevel/TestRecordLevelFilters/makeUsers()#org/apache/parquet/filter2/recordlevel/PhoneBookWriter/PhoneNumber/PhoneNumber(long,java.lang.String)
org/apache/parquet/filter2/recordlevel/TestRecordLevelFilters/makeUsers()#org/apache/parquet/filter2/recordlevel/PhoneBookWriter/User/User(long,java.lang.String,java.util.List,org.apache.parquet.filter2.recordlevel.PhoneBookWriter.Location)
org/apache/parquet/filter2/recordlevel/TestRecordLevelFilters/makeUsers()#java/util/Arrays/asList(T[])
org/apache/parquet/filter2/recordlevel/TestRecordLevelFilters/makeUsers()#java/util/List/add(E)
org/apache/parquet/filter2/recordlevel/TestRecordLevelFilters/makeUsers()#org/apache/parquet/filter2/recordlevel/PhoneBookWriter/Location/Location(java.lang.Double,java.lang.Double)
org/apache/parquet/filter2/recordlevel/TestRecordLevelFilters/testAllFilter()#java/util/ArrayList/ArrayList()
org/apache/parquet/filter2/recordlevel/TestRecordLevelFilters/testAllFilter()#org/apache/parquet/filter2/recordlevel/PhoneBookWriter/readFile(java.io.File,org.apache.parquet.filter2.compat.FilterCompat.Filter)
org/apache/parquet/filter2/recordlevel/TestRecordLevelFilters/testAllFilter()#org/apache/parquet/filter2/predicate/FilterApi/eq(C,T)
org/apache/parquet/filter2/recordlevel/TestRecordLevelFilters/testAllFilter()#org/apache/parquet/io/api/Binary/fromString(java.lang.String)
org/apache/parquet/filter2/recordlevel/TestRecordLevelFilters/testAllFilter()#org/apache/parquet/filter2/predicate/FilterApi/binaryColumn(java.lang.String)
org/apache/parquet/filter2/recordlevel/TestRecordLevelFilters/testAllFilter()#org/apache/parquet/filter2/compat/FilterCompat/get(org.apache.parquet.filter2.predicate.FilterPredicate)
org/apache/parquet/filter2/recordlevel/TestRecordLevelFilters/testNoFilter()#org/apache/parquet/filter2/recordlevel/PhoneBookWriter/readFile(java.io.File,org.apache.parquet.filter2.compat.FilterCompat.Filter)
org/apache/parquet/filter2/recordlevel/TestRecordLevelFilters/testNoFilter()#org/apache/parquet/filter2/recordlevel/TestRecordLevelFilters/assertFilter(java.util.List,org.apache.parquet.filter2.recordlevel.TestRecordLevelFilters.UserFilter)
org/apache/parquet/filter2/recordlevel/TestRecordLevelFilters/testNoFilter()#org/apache/parquet/filter2/recordlevel/TestRecordLevelFilters/testNoFilter()/$anonymous1/()
org/apache/parquet/filter2/recordlevel/TestRecordLevelFilters/getExpected(org.apache.parquet.filter2.recordlevel.TestRecordLevelFilters.UserFilter)#java/util/ArrayList/ArrayList()
org/apache/parquet/filter2/recordlevel/TestRecordLevelFilters/getExpected(org.apache.parquet.filter2.recordlevel.TestRecordLevelFilters.UserFilter)#org/apache/parquet/filter2/recordlevel/PhoneBookWriter/groupFromUser(org.apache.parquet.filter2.recordlevel.PhoneBookWriter.User)
org/apache/parquet/filter2/recordlevel/TestRecordLevelFilters/getExpected(org.apache.parquet.filter2.recordlevel.TestRecordLevelFilters.UserFilter)#java/util/List/add(E)
org/apache/parquet/filter2/recordlevel/TestRecordLevelFilters/getExpected(org.apache.parquet.filter2.recordlevel.TestRecordLevelFilters.UserFilter)#org/apache/parquet/filter2/recordlevel/TestRecordLevelFilters/UserFilter/keep(org.apache.parquet.filter2.recordlevel.PhoneBookWriter.User)
org/apache/parquet/filter2/recordlevel/TestRecordLevelFilters/testNameNotNull()#org/apache/parquet/filter2/recordlevel/PhoneBookWriter/readFile(java.io.File,org.apache.parquet.filter2.compat.FilterCompat.Filter)
org/apache/parquet/filter2/recordlevel/TestRecordLevelFilters/testNameNotNull()#org/apache/parquet/filter2/recordlevel/TestRecordLevelFilters/testNameNotNull()/$anonymous1/()
org/apache/parquet/filter2/recordlevel/TestRecordLevelFilters/testNameNotNull()#org/apache/parquet/filter2/predicate/FilterApi/notEq(C,T)
org/apache/parquet/filter2/recordlevel/TestRecordLevelFilters/testNameNotNull()#org/apache/parquet/filter2/recordlevel/TestRecordLevelFilters/assertFilter(java.util.List,org.apache.parquet.filter2.recordlevel.TestRecordLevelFilters.UserFilter)
org/apache/parquet/filter2/recordlevel/TestRecordLevelFilters/testNameNotNull()#org/apache/parquet/filter2/predicate/FilterApi/binaryColumn(java.lang.String)
org/apache/parquet/filter2/recordlevel/TestRecordLevelFilters/testNameNotNull()#org/apache/parquet/filter2/compat/FilterCompat/get(org.apache.parquet.filter2.predicate.FilterPredicate)
org/apache/parquet/filter2/recordlevel/TestRecordLevelFilters/setup()#org/apache/parquet/filter2/recordlevel/TestRecordLevelFilters/makeUsers()
org/apache/parquet/filter2/recordlevel/TestRecordLevelFilters/setup()#org/apache/parquet/filter2/recordlevel/PhoneBookWriter/writeToFile(java.util.List)
org/apache/parquet/filter2/recordlevel/TestRecordLevelFilters/testNameNotStartWithP()#org/apache/parquet/filter2/recordlevel/PhoneBookWriter/readFile(java.io.File,org.apache.parquet.filter2.compat.FilterCompat.Filter)
org/apache/parquet/filter2/recordlevel/TestRecordLevelFilters/testNameNotStartWithP()#org/apache/parquet/filter2/recordlevel/TestRecordLevelFilters/testNameNotStartWithP()/$anonymous1/()
org/apache/parquet/filter2/recordlevel/TestRecordLevelFilters/testNameNotStartWithP()#org/apache/parquet/filter2/predicate/FilterApi/userDefined(org.apache.parquet.filter2.predicate.Operators.Column,java.lang.Class)
org/apache/parquet/filter2/recordlevel/TestRecordLevelFilters/testNameNotStartWithP()#org/apache/parquet/filter2/recordlevel/TestRecordLevelFilters/assertFilter(java.util.List,org.apache.parquet.filter2.recordlevel.TestRecordLevelFilters.UserFilter)
org/apache/parquet/filter2/recordlevel/TestRecordLevelFilters/testNameNotStartWithP()#org/apache/parquet/filter2/predicate/FilterApi/binaryColumn(java.lang.String)
org/apache/parquet/filter2/recordlevel/TestRecordLevelFilters/testNameNotStartWithP()#org/apache/parquet/filter2/compat/FilterCompat/get(org.apache.parquet.filter2.predicate.FilterPredicate)
org/apache/parquet/filter2/recordlevel/TestRecordLevelFilters/testNameNotStartWithP()#org/apache/parquet/filter2/predicate/FilterApi/not(org.apache.parquet.filter2.predicate.FilterPredicate)
org/apache/parquet/filter2/recordlevel/TestRecordLevelFilters/testComplex()#org/apache/parquet/filter2/recordlevel/PhoneBookWriter/readFile(java.io.File,org.apache.parquet.filter2.compat.FilterCompat.Filter)
org/apache/parquet/filter2/recordlevel/TestRecordLevelFilters/testComplex()#org/apache/parquet/filter2/predicate/FilterApi/gt(C,T)
org/apache/parquet/filter2/recordlevel/TestRecordLevelFilters/testComplex()#org/apache/parquet/filter2/predicate/FilterApi/eq(C,T)
org/apache/parquet/filter2/recordlevel/TestRecordLevelFilters/testComplex()#org/apache/parquet/filter2/predicate/FilterApi/doubleColumn(java.lang.String)
org/apache/parquet/filter2/recordlevel/TestRecordLevelFilters/testComplex()#org/apache/parquet/filter2/recordlevel/TestRecordLevelFilters/testComplex()/$anonymous1/()
org/apache/parquet/filter2/recordlevel/TestRecordLevelFilters/testComplex()#org/apache/parquet/filter2/predicate/FilterApi/notEq(C,T)
org/apache/parquet/filter2/recordlevel/TestRecordLevelFilters/testComplex()#org/apache/parquet/filter2/predicate/FilterApi/or(org.apache.parquet.filter2.predicate.FilterPredicate,org.apache.parquet.filter2.predicate.FilterPredicate)
org/apache/parquet/filter2/recordlevel/TestRecordLevelFilters/testComplex()#org/apache/parquet/io/api/Binary/fromString(java.lang.String)
org/apache/parquet/filter2/recordlevel/TestRecordLevelFilters/testComplex()#org/apache/parquet/filter2/predicate/FilterApi/and(org.apache.parquet.filter2.predicate.FilterPredicate,org.apache.parquet.filter2.predicate.FilterPredicate)
org/apache/parquet/filter2/recordlevel/TestRecordLevelFilters/testComplex()#org/apache/parquet/filter2/recordlevel/TestRecordLevelFilters/assertFilter(java.util.List,org.apache.parquet.filter2.recordlevel.TestRecordLevelFilters.UserFilter)
org/apache/parquet/filter2/recordlevel/TestRecordLevelFilters/testComplex()#org/apache/parquet/filter2/predicate/FilterApi/binaryColumn(java.lang.String)
org/apache/parquet/filter2/recordlevel/TestRecordLevelFilters/testComplex()#org/apache/parquet/filter2/compat/FilterCompat/get(org.apache.parquet.filter2.predicate.FilterPredicate)
org/apache/parquet/filter2/recordlevel/TestRecordLevelFilters/assertFilter(java.util.List,org.apache.parquet.filter2.recordlevel.TestRecordLevelFilters.UserFilter)#java/lang/Object/toString()
org/apache/parquet/filter2/recordlevel/TestRecordLevelFilters/assertFilter(java.util.List,org.apache.parquet.filter2.recordlevel.TestRecordLevelFilters.UserFilter)#java/util/Iterator/hasNext()
org/apache/parquet/filter2/recordlevel/TestRecordLevelFilters/assertFilter(java.util.List,org.apache.parquet.filter2.recordlevel.TestRecordLevelFilters.UserFilter)#java/util/List/size()
org/apache/parquet/filter2/recordlevel/TestRecordLevelFilters/assertFilter(java.util.List,org.apache.parquet.filter2.recordlevel.TestRecordLevelFilters.UserFilter)#java/util/Iterator/next()
org/apache/parquet/filter2/recordlevel/TestRecordLevelFilters/assertFilter(java.util.List,org.apache.parquet.filter2.recordlevel.TestRecordLevelFilters.UserFilter)#java/util/List/iterator()
org/apache/parquet/filter2/recordlevel/TestRecordLevelFilters/assertFilter(java.util.List,org.apache.parquet.filter2.recordlevel.TestRecordLevelFilters.UserFilter)#org/apache/parquet/filter2/recordlevel/TestRecordLevelFilters/getExpected(org.apache.parquet.filter2.recordlevel.TestRecordLevelFilters.UserFilter)
org/apache/parquet/column/values/bitpacking/BaseBitPackingReader/alignToBytes(int)#org/apache/parquet/bytes/BytesUtils/paddedByteCountFromBits(int)
org/apache/parquet/avro/RecordWithUUID/hashCode()#java/util/UUID/hashCode()
org/apache/parquet/avro/RecordWithUUID/equals(java.lang.Object)#java/util/UUID/equals(java.lang.Object)
org/apache/parquet/VersionParser/ParsedVersion/hashCode()#java/lang/String/hashCode()
org/apache/parquet/VersionParser/ParsedVersion/equals(java.lang.Object)#java/lang/String/equals(java.lang.Object)
org/apache/parquet/VersionParser/ParsedVersion/equals(java.lang.Object)#java/lang/Object/getClass()
org/apache/parquet/avro/AvroConverters/FieldByteConverter/addInt(int)#org/apache/parquet/avro/ParentValueContainer/addByte(byte)
org/apache/parquet/hadoop/TestParquetWriterAppendBlocks/createSourceData()#org/apache/parquet/hadoop/example/ExampleParquetWriter/builder(org.apache.parquet.hadoop.Path)
org/apache/parquet/hadoop/TestParquetWriterAppendBlocks/createSourceData()#java/util/UUID/randomUUID()
org/apache/parquet/hadoop/TestParquetWriterAppendBlocks/createSourceData()#org/apache/parquet/hadoop/ParquetWriter/close()
org/apache/parquet/hadoop/TestParquetWriterAppendBlocks/createSourceData()#org/apache/parquet/example/data/Group/add(java.lang.String,int)
org/apache/parquet/hadoop/TestParquetWriterAppendBlocks/createSourceData()#java/util/List/add(E)
org/apache/parquet/hadoop/TestParquetWriterAppendBlocks/createSourceData()#org/apache/parquet/hadoop/ParquetWriter/write(T)
org/apache/parquet/hadoop/TestParquetWriterAppendBlocks/createSourceData()#java/util/UUID/toString()
org/apache/parquet/hadoop/TestParquetWriterAppendBlocks/createSourceData()#org/apache/parquet/example/data/Group/add(java.lang.String,java.lang.String)
org/apache/parquet/hadoop/TestParquetWriterAppendBlocks/createSourceData()#org/apache/parquet/hadoop/TestParquetWriterAppendBlocks/newTemp()
org/apache/parquet/hadoop/TestParquetWriterAppendBlocks/createSourceData()#org/apache/parquet/example/data/simple/SimpleGroupFactory/newGroup()
org/apache/parquet/hadoop/TestParquetWriterAppendBlocks/assertColumnsEquivalent(java.util.List,java.util.List)#org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/getStartingPos()
org/apache/parquet/hadoop/TestParquetWriterAppendBlocks/assertColumnsEquivalent(java.util.List,java.util.List)#java/util/List/size()
org/apache/parquet/hadoop/TestParquetWriterAppendBlocks/assertColumnsEquivalent(java.util.List,java.util.List)#org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/getTotalSize()
org/apache/parquet/hadoop/TestParquetWriterAppendBlocks/assertColumnsEquivalent(java.util.List,java.util.List)#org/apache/parquet/hadoop/TestParquetWriterAppendBlocks/assertColumnMetadataEquivalent(org.apache.parquet.hadoop.metadata.ColumnChunkMetaData,org.apache.parquet.hadoop.metadata.ColumnChunkMetaData)
org/apache/parquet/hadoop/TestParquetWriterAppendBlocks/assertColumnsEquivalent(java.util.List,java.util.List)#java/util/List/get(int)
org/apache/parquet/hadoop/TestParquetWriterAppendBlocks/testAllowDroppingColumns()#org/apache/parquet/hadoop/ParquetReader/read()
org/apache/parquet/hadoop/TestParquetWriterAppendBlocks/testAllowDroppingColumns()#org/apache/parquet/hadoop/metadata/ParquetMetadata/getBlocks()
org/apache/parquet/hadoop/TestParquetWriterAppendBlocks/testAllowDroppingColumns()#org/apache/parquet/schema/Types/Builder/named(java.lang.String)
org/apache/parquet/hadoop/TestParquetWriterAppendBlocks/testAllowDroppingColumns()#org/apache/parquet/schema/Types/Builder/as(org.apache.parquet.schema.OriginalType)
org/apache/parquet/hadoop/TestParquetWriterAppendBlocks/testAllowDroppingColumns()#org/apache/parquet/hadoop/ParquetFileWriter/ParquetFileWriter(org.apache.parquet.hadoop.Configuration,org.apache.parquet.schema.MessageType,org.apache.parquet.hadoop.Path)
org/apache/parquet/hadoop/TestParquetWriterAppendBlocks/testAllowDroppingColumns()#java/util/LinkedList/LinkedList()
org/apache/parquet/hadoop/TestParquetWriterAppendBlocks/testAllowDroppingColumns()#org/apache/parquet/hadoop/example/GroupReadSupport/GroupReadSupport()
org/apache/parquet/hadoop/TestParquetWriterAppendBlocks/testAllowDroppingColumns()#java/util/LinkedList/size()
org/apache/parquet/hadoop/TestParquetWriterAppendBlocks/testAllowDroppingColumns()#java/util/LinkedList/addAll(java.util.Collection)
org/apache/parquet/hadoop/TestParquetWriterAppendBlocks/testAllowDroppingColumns()#org/apache/parquet/hadoop/ParquetFileWriter/end(java.util.Map)
org/apache/parquet/hadoop/TestParquetWriterAppendBlocks/testAllowDroppingColumns()#org/apache/parquet/hadoop/ParquetFileWriter/start()
org/apache/parquet/hadoop/TestParquetWriterAppendBlocks/testAllowDroppingColumns()#org/apache/parquet/schema/Types/BaseGroupBuilder/required(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/hadoop/TestParquetWriterAppendBlocks/testAllowDroppingColumns()#org/apache/parquet/hadoop/ParquetFileReader/readFooter(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path,org.apache.parquet.format.converter.ParquetMetadataConverter.MetadataFilter)
org/apache/parquet/hadoop/TestParquetWriterAppendBlocks/testAllowDroppingColumns()#org/apache/parquet/schema/Types/buildMessage()
org/apache/parquet/hadoop/TestParquetWriterAppendBlocks/testAllowDroppingColumns()#org/apache/parquet/example/data/GroupValueSource/getString(java.lang.String,int)
org/apache/parquet/hadoop/TestParquetWriterAppendBlocks/testAllowDroppingColumns()#org/apache/parquet/hadoop/ParquetReader/builder(org.apache.parquet.hadoop.api.ReadSupport,org.apache.parquet.hadoop.Path)
org/apache/parquet/hadoop/TestParquetWriterAppendBlocks/testAllowDroppingColumns()#org/apache/parquet/hadoop/ParquetFileWriter/appendFile(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path)
org/apache/parquet/hadoop/TestParquetWriterAppendBlocks/testAllowDroppingColumns()#java/util/LinkedList/removeFirst()
org/apache/parquet/hadoop/TestParquetWriterAppendBlocks/testAllowDroppingColumns()#java/util/List/size()
org/apache/parquet/hadoop/TestParquetWriterAppendBlocks/testAllowDroppingColumns()#org/apache/parquet/hadoop/TestParquetWriterAppendBlocks/newTemp()
org/apache/parquet/hadoop/TestParquetWriterAppendBlocks/testAllowDroppingColumns()#org/apache/parquet/hadoop/metadata/BlockMetaData/getColumns()
org/apache/parquet/hadoop/TestParquetWriterAppendBlocks/assertColumnMetadataEquivalent(org.apache.parquet.hadoop.metadata.ColumnChunkMetaData,org.apache.parquet.hadoop.metadata.ColumnChunkMetaData)#org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/getStatistics()
org/apache/parquet/hadoop/TestParquetWriterAppendBlocks/assertColumnMetadataEquivalent(org.apache.parquet.hadoop.metadata.ColumnChunkMetaData,org.apache.parquet.hadoop.metadata.ColumnChunkMetaData)#org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/getPath()
org/apache/parquet/hadoop/TestParquetWriterAppendBlocks/assertColumnMetadataEquivalent(org.apache.parquet.hadoop.metadata.ColumnChunkMetaData,org.apache.parquet.hadoop.metadata.ColumnChunkMetaData)#org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/getCodec()
org/apache/parquet/hadoop/TestParquetWriterAppendBlocks/assertColumnMetadataEquivalent(org.apache.parquet.hadoop.metadata.ColumnChunkMetaData,org.apache.parquet.hadoop.metadata.ColumnChunkMetaData)#org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/getTotalUncompressedSize()
org/apache/parquet/hadoop/TestParquetWriterAppendBlocks/assertColumnMetadataEquivalent(org.apache.parquet.hadoop.metadata.ColumnChunkMetaData,org.apache.parquet.hadoop.metadata.ColumnChunkMetaData)#org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/getEncodings()
org/apache/parquet/hadoop/TestParquetWriterAppendBlocks/assertColumnMetadataEquivalent(org.apache.parquet.hadoop.metadata.ColumnChunkMetaData,org.apache.parquet.hadoop.metadata.ColumnChunkMetaData)#org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/getType()
org/apache/parquet/hadoop/TestParquetWriterAppendBlocks/assertColumnMetadataEquivalent(org.apache.parquet.hadoop.metadata.ColumnChunkMetaData,org.apache.parquet.hadoop.metadata.ColumnChunkMetaData)#org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/getTotalSize()
org/apache/parquet/hadoop/TestParquetWriterAppendBlocks/assertColumnMetadataEquivalent(org.apache.parquet.hadoop.metadata.ColumnChunkMetaData,org.apache.parquet.hadoop.metadata.ColumnChunkMetaData)#org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/getValueCount()
org/apache/parquet/hadoop/TestParquetWriterAppendBlocks/testMergedMetadata()#org/apache/parquet/hadoop/metadata/ParquetMetadata/getBlocks()
org/apache/parquet/hadoop/TestParquetWriterAppendBlocks/testMergedMetadata()#org/apache/parquet/hadoop/ParquetFileWriter/appendFile(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path)
org/apache/parquet/hadoop/TestParquetWriterAppendBlocks/testMergedMetadata()#org/apache/parquet/hadoop/metadata/BlockMetaData/getRowCount()
org/apache/parquet/hadoop/TestParquetWriterAppendBlocks/testMergedMetadata()#org/apache/parquet/hadoop/ParquetFileWriter/ParquetFileWriter(org.apache.parquet.hadoop.Configuration,org.apache.parquet.schema.MessageType,org.apache.parquet.hadoop.Path)
org/apache/parquet/hadoop/TestParquetWriterAppendBlocks/testMergedMetadata()#org/apache/parquet/hadoop/metadata/BlockMetaData/getTotalByteSize()
org/apache/parquet/hadoop/TestParquetWriterAppendBlocks/testMergedMetadata()#org/apache/parquet/hadoop/TestParquetWriterAppendBlocks/assertColumnsEquivalent(java.util.List,java.util.List)
org/apache/parquet/hadoop/TestParquetWriterAppendBlocks/testMergedMetadata()#java/util/LinkedList/LinkedList()
org/apache/parquet/hadoop/TestParquetWriterAppendBlocks/testMergedMetadata()#org/apache/parquet/hadoop/metadata/BlockMetaData/getStartingPos()
org/apache/parquet/hadoop/TestParquetWriterAppendBlocks/testMergedMetadata()#java/util/LinkedList/size()
org/apache/parquet/hadoop/TestParquetWriterAppendBlocks/testMergedMetadata()#java/util/LinkedList/addAll(java.util.Collection)
org/apache/parquet/hadoop/TestParquetWriterAppendBlocks/testMergedMetadata()#org/apache/parquet/hadoop/ParquetFileWriter/start()
org/apache/parquet/hadoop/TestParquetWriterAppendBlocks/testMergedMetadata()#org/apache/parquet/hadoop/ParquetFileReader/readFooter(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path,org.apache.parquet.format.converter.ParquetMetadataConverter.MetadataFilter)
org/apache/parquet/hadoop/TestParquetWriterAppendBlocks/testMergedMetadata()#java/util/LinkedList/removeFirst()
org/apache/parquet/hadoop/TestParquetWriterAppendBlocks/testMergedMetadata()#java/util/List/size()
org/apache/parquet/hadoop/TestParquetWriterAppendBlocks/testMergedMetadata()#org/apache/parquet/hadoop/metadata/BlockMetaData/getCompressedSize()
org/apache/parquet/hadoop/TestParquetWriterAppendBlocks/testMergedMetadata()#org/apache/parquet/hadoop/ParquetFileWriter/end(java.util.Map)
org/apache/parquet/hadoop/TestParquetWriterAppendBlocks/testMergedMetadata()#org/apache/parquet/hadoop/TestParquetWriterAppendBlocks/newTemp()
org/apache/parquet/hadoop/TestParquetWriterAppendBlocks/testMergedMetadata()#org/apache/parquet/hadoop/metadata/BlockMetaData/getColumns()
org/apache/parquet/hadoop/TestParquetWriterAppendBlocks/newTemp()#org/apache/parquet/Preconditions/checkArgument(boolean,java.lang.String)
org/apache/parquet/hadoop/TestParquetWriterAppendBlocks/newTemp()#java/io/File/delete()
org/apache/parquet/hadoop/TestParquetWriterAppendBlocks/newTemp()#java/io/File/toString()
org/apache/parquet/hadoop/TestParquetWriterAppendBlocks/testFailDroppingColumns()#org/apache/parquet/schema/Types/buildMessage()
org/apache/parquet/hadoop/TestParquetWriterAppendBlocks/testFailDroppingColumns()#org/apache/parquet/schema/Types/Builder/named(java.lang.String)
org/apache/parquet/hadoop/TestParquetWriterAppendBlocks/testFailDroppingColumns()#org/apache/parquet/schema/Types/Builder/as(org.apache.parquet.schema.OriginalType)
org/apache/parquet/hadoop/TestParquetWriterAppendBlocks/testFailDroppingColumns()#org/apache/parquet/hadoop/ParquetFileWriter/ParquetFileWriter(org.apache.parquet.hadoop.Configuration,org.apache.parquet.schema.MessageType,org.apache.parquet.hadoop.Path)
org/apache/parquet/hadoop/TestParquetWriterAppendBlocks/testFailDroppingColumns()#org/apache/parquet/hadoop/TestUtils/assertThrows(java.lang.String,java.lang.Class,java.util.concurrent.Callable)
org/apache/parquet/hadoop/TestParquetWriterAppendBlocks/testFailDroppingColumns()#org/apache/parquet/hadoop/ParquetFileWriter/start()
org/apache/parquet/hadoop/TestParquetWriterAppendBlocks/testFailDroppingColumns()#org/apache/parquet/schema/Types/BaseGroupBuilder/required(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/hadoop/TestParquetWriterAppendBlocks/testFailDroppingColumns()#org/apache/parquet/hadoop/ParquetFileReader/readFooter(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path,org.apache.parquet.format.converter.ParquetMetadataConverter.MetadataFilter)
org/apache/parquet/hadoop/TestParquetWriterAppendBlocks/testFailDroppingColumns()#org/apache/parquet/hadoop/TestParquetWriterAppendBlocks/testFailDroppingColumns()/$anonymous1/()
org/apache/parquet/hadoop/TestParquetWriterAppendBlocks/testFailDroppingColumns()#org/apache/parquet/hadoop/TestParquetWriterAppendBlocks/newTemp()
org/apache/parquet/hadoop/TestParquetWriterAppendBlocks/testFailMissingColumn()#org/apache/parquet/schema/Types/buildMessage()
org/apache/parquet/hadoop/TestParquetWriterAppendBlocks/testFailMissingColumn()#org/apache/parquet/schema/Types/Builder/named(java.lang.String)
org/apache/parquet/hadoop/TestParquetWriterAppendBlocks/testFailMissingColumn()#org/apache/parquet/schema/Types/Builder/as(org.apache.parquet.schema.OriginalType)
org/apache/parquet/hadoop/TestParquetWriterAppendBlocks/testFailMissingColumn()#org/apache/parquet/hadoop/ParquetFileWriter/ParquetFileWriter(org.apache.parquet.hadoop.Configuration,org.apache.parquet.schema.MessageType,org.apache.parquet.hadoop.Path)
org/apache/parquet/hadoop/TestParquetWriterAppendBlocks/testFailMissingColumn()#org/apache/parquet/hadoop/TestUtils/assertThrows(java.lang.String,java.lang.Class,java.util.concurrent.Callable)
org/apache/parquet/hadoop/TestParquetWriterAppendBlocks/testFailMissingColumn()#org/apache/parquet/hadoop/ParquetFileWriter/start()
org/apache/parquet/hadoop/TestParquetWriterAppendBlocks/testFailMissingColumn()#org/apache/parquet/schema/Types/BaseGroupBuilder/required(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/hadoop/TestParquetWriterAppendBlocks/testFailMissingColumn()#org/apache/parquet/hadoop/TestParquetWriterAppendBlocks/testFailMissingColumn()/$anonymous1/()
org/apache/parquet/hadoop/TestParquetWriterAppendBlocks/testFailMissingColumn()#org/apache/parquet/hadoop/TestParquetWriterAppendBlocks/newTemp()
org/apache/parquet/hadoop/TestParquetWriterAppendBlocks/testBasicBehavior()#org/apache/parquet/hadoop/ParquetReader/read()
org/apache/parquet/hadoop/TestParquetWriterAppendBlocks/testBasicBehavior()#org/apache/parquet/example/data/GroupValueSource/getString(java.lang.String,int)
org/apache/parquet/hadoop/TestParquetWriterAppendBlocks/testBasicBehavior()#org/apache/parquet/hadoop/ParquetFileWriter/ParquetFileWriter(org.apache.parquet.hadoop.Configuration,org.apache.parquet.schema.MessageType,org.apache.parquet.hadoop.Path)
org/apache/parquet/hadoop/TestParquetWriterAppendBlocks/testBasicBehavior()#java/util/LinkedList/removeFirst()
org/apache/parquet/hadoop/TestParquetWriterAppendBlocks/testBasicBehavior()#org/apache/parquet/example/data/GroupValueSource/getInteger(java.lang.String,int)
org/apache/parquet/hadoop/TestParquetWriterAppendBlocks/testBasicBehavior()#java/util/LinkedList/LinkedList()
org/apache/parquet/hadoop/TestParquetWriterAppendBlocks/testBasicBehavior()#org/apache/parquet/hadoop/example/GroupReadSupport/GroupReadSupport()
org/apache/parquet/hadoop/TestParquetWriterAppendBlocks/testBasicBehavior()#java/util/LinkedList/size()
org/apache/parquet/hadoop/TestParquetWriterAppendBlocks/testBasicBehavior()#java/util/LinkedList/addAll(java.util.Collection)
org/apache/parquet/hadoop/TestParquetWriterAppendBlocks/testBasicBehavior()#org/apache/parquet/hadoop/ParquetFileWriter/end(java.util.Map)
org/apache/parquet/hadoop/TestParquetWriterAppendBlocks/testBasicBehavior()#org/apache/parquet/hadoop/ParquetFileWriter/start()
org/apache/parquet/hadoop/TestParquetWriterAppendBlocks/testBasicBehavior()#org/apache/parquet/hadoop/TestParquetWriterAppendBlocks/newTemp()
org/apache/parquet/hadoop/TestParquetWriterAppendBlocks/testBasicBehavior()#org/apache/parquet/hadoop/ParquetReader/builder(org.apache.parquet.hadoop.api.ReadSupport,org.apache.parquet.hadoop.Path)
org/apache/parquet/hadoop/TestParquetWriterAppendBlocks/testBasicBehavior()#org/apache/parquet/hadoop/ParquetFileWriter/appendFile(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path)
org/apache/parquet/pig/convert/TupleConverter/FieldDoubleConverter/addFloat(float)#org/apache/parquet/pig/convert/ParentValueContainer/add(java.lang.Object)
org/apache/parquet/pig/convert/TupleConverter/FieldDoubleConverter/addInt(int)#org/apache/parquet/pig/convert/ParentValueContainer/add(java.lang.Object)
org/apache/parquet/pig/convert/TupleConverter/FieldDoubleConverter/addBinary(org.apache.parquet.io.api.Binary)#org/apache/parquet/io/api/Binary/toStringUsingUTF8()
org/apache/parquet/pig/convert/TupleConverter/FieldDoubleConverter/addBinary(org.apache.parquet.io.api.Binary)#org/apache/parquet/pig/convert/ParentValueContainer/add(java.lang.Object)
org/apache/parquet/pig/convert/TupleConverter/FieldDoubleConverter/addBinary(org.apache.parquet.io.api.Binary)#java/lang/Double/parseDouble(java.lang.String)
org/apache/parquet/pig/convert/TupleConverter/FieldDoubleConverter/addLong(long)#org/apache/parquet/pig/convert/ParentValueContainer/add(java.lang.Object)
org/apache/parquet/pig/convert/TupleConverter/FieldDoubleConverter/addDouble(double)#org/apache/parquet/pig/convert/ParentValueContainer/add(java.lang.Object)
org/apache/parquet/pig/convert/TupleConverter/FieldDoubleConverter/addBoolean(boolean)#org/apache/parquet/pig/convert/ParentValueContainer/add(java.lang.Object)
org/apache/parquet/hadoop/ParquetInputFormat/FootersCacheValue/getPath()#org/apache/parquet/hadoop/Footer/getFile()
org/apache/parquet/hadoop/ParquetInputFormat/FootersCacheValue/isCurrent(org.apache.parquet.hadoop.ParquetInputFormat.FileStatusWrapper)#org/apache/parquet/hadoop/ParquetInputFormat/FileStatusWrapper/getModificationTime()
org/apache/parquet/proto/ProtoWriteSupport/FieldWriter/writeField(java.lang.Object)#org/apache/parquet/io/api/RecordConsumer/startField(java.lang.String,int)
org/apache/parquet/proto/ProtoWriteSupport/FieldWriter/writeField(java.lang.Object)#org/apache/parquet/io/api/RecordConsumer/endField(java.lang.String,int)
org/apache/parquet/proto/ProtoWriteSupport/FieldWriter/writeField(java.lang.Object)#org/apache/parquet/proto/ProtoWriteSupport/FieldWriter/writeRawValue(java.lang.Object)
org/apache/parquet/io/RecordReaderImplementation/read()#org/apache/parquet/column/ColumnReader/consume()
org/apache/parquet/io/RecordReaderImplementation/read()#org/apache/parquet/io/api/GroupConverter/end()
org/apache/parquet/io/RecordReaderImplementation/read()#org/apache/parquet/column/ColumnReader/writeCurrentValueToConverter()
org/apache/parquet/io/RecordReaderImplementation/read()#org/apache/parquet/io/api/RecordMaterializer/skipCurrentRecord()
org/apache/parquet/io/RecordReaderImplementation/read()#org/apache/parquet/column/ColumnReader/getCurrentDefinitionLevel()
org/apache/parquet/io/RecordReaderImplementation/read()#org/apache/parquet/io/api/GroupConverter/start()
org/apache/parquet/io/RecordReaderImplementation/read()#org/apache/parquet/column/ColumnReader/getCurrentRepetitionLevel()
org/apache/parquet/io/RecordReaderImplementation/read()#org/apache/parquet/io/api/RecordMaterializer/getCurrentRecord()
org/apache/parquet/io/RecordReaderImplementation/wrap(org.apache.parquet.io.api.RecordConsumer)#org/apache/parquet/io/RecordConsumerLoggingWrapper/RecordConsumerLoggingWrapper(org.apache.parquet.io.api.RecordConsumer)
org/apache/parquet/io/RecordReaderImplementation/getColumnReaders()#java/util/Arrays/asList(T[])
org/apache/parquet/io/RecordReaderImplementation/validator(org.apache.parquet.io.api.RecordConsumer,boolean,org.apache.parquet.schema.MessageType)#org/apache/parquet/io/ValidatingRecordConsumer/ValidatingRecordConsumer(org.apache.parquet.io.api.RecordConsumer,org.apache.parquet.schema.MessageType)
org/apache/parquet/io/RecordReaderImplementation/getCommonParentLevel(java.lang.String[],java.lang.String[])#java/lang/String/equals(java.lang.Object)
org/apache/parquet/io/RecordReaderImplementation/getCommonParentLevel(java.lang.String[],java.lang.String[])#java/lang/Math/min(int,int)
org/apache/parquet/avro/AvroConverters/FieldIntegerConverter/addInt(int)#org/apache/parquet/avro/ParentValueContainer/addInt(int)
org/apache/parquet/hadoop/api/WriteSupport/finalizeWrite()#org/apache/parquet/hadoop/api/WriteSupport/FinalizedWriteContext/FinalizedWriteContext(java.util.Map)
org/apache/parquet/hadoop/api/WriteSupport/finalizeWrite()#java/util/HashMap/HashMap()
org/apache/parquet/avro/AvroConverters/FieldByteBufferConverter/convert(org.apache.parquet.io.api.Binary)#org/apache/parquet/io/api/Binary/getBytes()
org/apache/parquet/avro/AvroConverters/FieldByteBufferConverter/convert(org.apache.parquet.io.api.Binary)#java/nio/ByteBuffer/wrap(byte[])
org/apache/parquet/hadoop/ClientSideMetadataSplitStrategy/SplitInfo/getRowGroupCount()#java/util/List/size()
org/apache/parquet/hadoop/ClientSideMetadataSplitStrategy/SplitInfo/getParquetInputSplit(org.apache.parquet.hadoop.FileStatus,java.lang.String,java.util.Map)#org/apache/parquet/hadoop/ClientSideMetadataSplitStrategy/SplitInfo/getRowGroupCount()
org/apache/parquet/hadoop/ClientSideMetadataSplitStrategy/SplitInfo/getParquetInputSplit(org.apache.parquet.hadoop.FileStatus,java.lang.String,java.util.Map)#org/apache/parquet/schema/MessageType/containsPath(java.lang.String[])
org/apache/parquet/hadoop/ClientSideMetadataSplitStrategy/SplitInfo/getParquetInputSplit(org.apache.parquet.hadoop.FileStatus,java.lang.String,java.util.Map)#org/apache/parquet/schema/MessageTypeParser/parseMessageType(java.lang.String)
org/apache/parquet/hadoop/ClientSideMetadataSplitStrategy/SplitInfo/getParquetInputSplit(org.apache.parquet.hadoop.FileStatus,java.lang.String,java.util.Map)#org/apache/parquet/hadoop/ParquetInputSplit/ParquetInputSplit(org.apache.parquet.hadoop.Path,long,long,long,java.lang.String[],long[])
org/apache/parquet/hadoop/ClientSideMetadataSplitStrategy/SplitInfo/getParquetInputSplit(org.apache.parquet.hadoop.FileStatus,java.lang.String,java.util.Map)#org/apache/parquet/hadoop/metadata/BlockMetaData/getStartingPos()
org/apache/parquet/hadoop/ClientSideMetadataSplitStrategy/SplitInfo/getParquetInputSplit(org.apache.parquet.hadoop.FileStatus,java.lang.String,java.util.Map)#java/util/List/get(int)
org/apache/parquet/hadoop/ClientSideMetadataSplitStrategy/SplitInfo/getParquetInputSplit(org.apache.parquet.hadoop.FileStatus,java.lang.String,java.util.Map)#org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/getTotalSize()
org/apache/parquet/hadoop/ClientSideMetadataSplitStrategy/SplitInfo/getParquetInputSplit(org.apache.parquet.hadoop.FileStatus,java.lang.String,java.util.Map)#org/apache/parquet/hadoop/metadata/BlockMetaData/getColumns()
org/apache/parquet/hadoop/ClientSideMetadataSplitStrategy/SplitInfo/getParquetInputSplit(org.apache.parquet.hadoop.FileStatus,java.lang.String,java.util.Map)#org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/getPath()
org/apache/parquet/hadoop/ClientSideMetadataSplitStrategy/SplitInfo/getParquetInputSplit(org.apache.parquet.hadoop.FileStatus,java.lang.String,java.util.Map)#org/apache/parquet/hadoop/ClientSideMetadataSplitStrategy/SplitInfo/getRowGroups()
org/apache/parquet/hadoop/ClientSideMetadataSplitStrategy/SplitInfo/getParquetInputSplit(org.apache.parquet.hadoop.FileStatus,java.lang.String,java.util.Map)#org/apache/parquet/hadoop/metadata/ColumnPath/toArray()
org/apache/parquet/hadoop/ClientSideMetadataSplitStrategy/SplitInfo/getParquetInputSplit(org.apache.parquet.hadoop.FileStatus,java.lang.String,java.util.Map)#org/apache/parquet/hadoop/metadata/BlockMetaData/getTotalByteSize()
org/apache/parquet/hadoop/ClientSideMetadataSplitStrategy/SplitInfo/addRowGroup(org.apache.parquet.hadoop.metadata.BlockMetaData)#java/util/List/add(E)
org/apache/parquet/hadoop/ClientSideMetadataSplitStrategy/SplitInfo/addRowGroup(org.apache.parquet.hadoop.metadata.BlockMetaData)#org/apache/parquet/hadoop/metadata/BlockMetaData/getCompressedSize()
org/apache/hadoop/hive/ql/io/parquet/serde/primitive/ParquetShortInspector/getPrimitiveWritableObject(java.lang.Object)#org/apache/hadoop/hive/ql/io/parquet/serde/primitive/ParquetShortInspector/get(java.lang.Object)
org/apache/parquet/hadoop/util/SerializationUtil/writeObjectToConfAsBase64(java.lang.String,java.lang.Object,org.apache.parquet.hadoop.Configuration)#java/util/zip/GZIPOutputStream/GZIPOutputStream(java.io.OutputStream)
org/apache/parquet/hadoop/util/SerializationUtil/writeObjectToConfAsBase64(java.lang.String,java.lang.Object,org.apache.parquet.hadoop.Configuration)#java/lang/String/String(byte[],java.lang.String)
org/apache/parquet/hadoop/util/SerializationUtil/writeObjectToConfAsBase64(java.lang.String,java.lang.Object,org.apache.parquet.hadoop.Configuration)#java/io/ObjectOutputStream/writeObject(java.lang.Object)
org/apache/parquet/hadoop/util/SerializationUtil/writeObjectToConfAsBase64(java.lang.String,java.lang.Object,org.apache.parquet.hadoop.Configuration)#java/io/ByteArrayOutputStream/ByteArrayOutputStream()
org/apache/parquet/hadoop/util/SerializationUtil/writeObjectToConfAsBase64(java.lang.String,java.lang.Object,org.apache.parquet.hadoop.Configuration)#org/apache/parquet/Closeables/close(java.io.Closeable)
org/apache/parquet/hadoop/util/SerializationUtil/writeObjectToConfAsBase64(java.lang.String,java.lang.Object,org.apache.parquet.hadoop.Configuration)#java/io/ObjectOutputStream/ObjectOutputStream(java.io.OutputStream)
org/apache/parquet/hadoop/util/SerializationUtil/writeObjectToConfAsBase64(java.lang.String,java.lang.Object,org.apache.parquet.hadoop.Configuration)#java/io/ByteArrayOutputStream/toByteArray()
org/apache/parquet/hadoop/util/SerializationUtil/readObjectFromConfAsBase64(java.lang.String,org.apache.parquet.hadoop.Configuration)#java/util/zip/GZIPInputStream/GZIPInputStream(java.io.InputStream)
org/apache/parquet/hadoop/util/SerializationUtil/readObjectFromConfAsBase64(java.lang.String,org.apache.parquet.hadoop.Configuration)#java/io/IOException/IOException(java.lang.String,java.lang.Throwable)
org/apache/parquet/hadoop/util/SerializationUtil/readObjectFromConfAsBase64(java.lang.String,org.apache.parquet.hadoop.Configuration)#java/io/ByteArrayInputStream/ByteArrayInputStream(byte[])
org/apache/parquet/hadoop/util/SerializationUtil/readObjectFromConfAsBase64(java.lang.String,org.apache.parquet.hadoop.Configuration)#java/io/ObjectInputStream/readObject()
org/apache/parquet/hadoop/util/SerializationUtil/readObjectFromConfAsBase64(java.lang.String,org.apache.parquet.hadoop.Configuration)#java/lang/String/getBytes(java.lang.String)
org/apache/parquet/hadoop/util/SerializationUtil/readObjectFromConfAsBase64(java.lang.String,org.apache.parquet.hadoop.Configuration)#java/io/ObjectInputStream/ObjectInputStream(java.io.InputStream)
org/apache/parquet/hadoop/util/SerializationUtil/readObjectFromConfAsBase64(java.lang.String,org.apache.parquet.hadoop.Configuration)#org/apache/parquet/Closeables/close(java.io.Closeable)
org/apache/parquet/column/values/rle/RunLengthBitPackingHybridEncoder/reset(boolean)#org/apache/parquet/bytes/CapacityByteArrayOutputStream/reset()
org/apache/parquet/column/values/rle/RunLengthBitPackingHybridEncoder/writeRleRun()#org/apache/parquet/column/values/rle/RunLengthBitPackingHybridEncoder/endPreviousBitPackedRun()
org/apache/parquet/column/values/rle/RunLengthBitPackingHybridEncoder/writeRleRun()#org/apache/parquet/bytes/BytesUtils/writeUnsignedVarInt(int,java.io.OutputStream)
org/apache/parquet/column/values/rle/RunLengthBitPackingHybridEncoder/writeRleRun()#org/apache/parquet/bytes/BytesUtils/writeIntLittleEndianPaddedOnBitWidth(java.io.OutputStream,int,int)
org/apache/parquet/column/values/rle/RunLengthBitPackingHybridEncoder/writeOrAppendBitPackedRun()#org/apache/parquet/column/values/rle/RunLengthBitPackingHybridEncoder/endPreviousBitPackedRun()
org/apache/parquet/column/values/rle/RunLengthBitPackingHybridEncoder/writeOrAppendBitPackedRun()#org/apache/parquet/column/values/bitpacking/BytePacker/pack8Values(int[],int,byte[],int)
org/apache/parquet/column/values/rle/RunLengthBitPackingHybridEncoder/writeOrAppendBitPackedRun()#org/apache/parquet/bytes/CapacityByteArrayOutputStream/write(int)
org/apache/parquet/column/values/rle/RunLengthBitPackingHybridEncoder/writeOrAppendBitPackedRun()#java/io/OutputStream/write(byte[])
org/apache/parquet/column/values/rle/RunLengthBitPackingHybridEncoder/writeOrAppendBitPackedRun()#org/apache/parquet/bytes/CapacityByteArrayOutputStream/getCurrentIndex()
org/apache/parquet/column/values/rle/RunLengthBitPackingHybridEncoder/reset()#org/apache/parquet/column/values/rle/RunLengthBitPackingHybridEncoder/reset(boolean)
org/apache/parquet/column/values/rle/RunLengthBitPackingHybridEncoder/writeInt(int)#org/apache/parquet/column/values/rle/RunLengthBitPackingHybridEncoder/writeRleRun()
org/apache/parquet/column/values/rle/RunLengthBitPackingHybridEncoder/writeInt(int)#org/apache/parquet/column/values/rle/RunLengthBitPackingHybridEncoder/writeOrAppendBitPackedRun()
org/apache/parquet/column/values/rle/RunLengthBitPackingHybridEncoder/close()#org/apache/parquet/column/values/rle/RunLengthBitPackingHybridEncoder/reset(boolean)
org/apache/parquet/column/values/rle/RunLengthBitPackingHybridEncoder/close()#org/apache/parquet/bytes/CapacityByteArrayOutputStream/close()
org/apache/parquet/column/values/rle/RunLengthBitPackingHybridEncoder/endPreviousBitPackedRun()#org/apache/parquet/bytes/CapacityByteArrayOutputStream/setByte(long,byte)
org/apache/parquet/column/values/rle/RunLengthBitPackingHybridEncoder/toBytes()#org/apache/parquet/column/values/rle/RunLengthBitPackingHybridEncoder/endPreviousBitPackedRun()
org/apache/parquet/column/values/rle/RunLengthBitPackingHybridEncoder/toBytes()#org/apache/parquet/column/values/rle/RunLengthBitPackingHybridEncoder/writeRleRun()
org/apache/parquet/column/values/rle/RunLengthBitPackingHybridEncoder/toBytes()#org/apache/parquet/column/values/rle/RunLengthBitPackingHybridEncoder/writeOrAppendBitPackedRun()
org/apache/parquet/column/values/rle/RunLengthBitPackingHybridEncoder/toBytes()#org/apache/parquet/Preconditions/checkArgument(boolean,java.lang.String)
org/apache/parquet/column/values/rle/RunLengthBitPackingHybridEncoder/toBytes()#org/apache/parquet/bytes/BytesInput/from(org.apache.parquet.bytes.CapacityByteArrayOutputStream)
org/apache/parquet/column/values/rle/RunLengthBitPackingHybridEncoder/getAllocatedSize()#org/apache/parquet/bytes/CapacityByteArrayOutputStream/getCapacity()
org/apache/parquet/column/values/rle/RunLengthBitPackingHybridEncoder/getBufferedSize()#org/apache/parquet/bytes/CapacityByteArrayOutputStream/size()
org/apache/parquet/filter2/recordlevel/PhoneBookWriter/Location/hashCode()#java/lang/Double/hashCode()
org/apache/parquet/filter2/recordlevel/PhoneBookWriter/Location/equals(java.lang.Object)#java/lang/Double/equals(java.lang.Object)
org/apache/parquet/filter2/recordlevel/PhoneBookWriter/Location/equals(java.lang.Object)#java/lang/Object/getClass()
org/apache/parquet/hadoop/TestParquetWriter/testBadWriteSchema()#java/io/File/exists()
org/apache/parquet/hadoop/TestParquetWriter/testBadWriteSchema()#org/apache/parquet/hadoop/TestUtils/assertThrows(java.lang.String,java.lang.Class,java.util.concurrent.Callable)
org/apache/parquet/hadoop/TestParquetWriter/testBadWriteSchema()#org/apache/parquet/hadoop/TestParquetWriter/testBadWriteSchema()/$anonymous1/()
org/apache/parquet/hadoop/TestParquetWriter/testBadWriteSchema()#java/io/File/delete()
org/apache/parquet/hadoop/TestParquetWriter/test()#org/apache/parquet/io/api/Binary/toStringUsingUTF8()
org/apache/parquet/hadoop/TestParquetWriter/test()#org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/getPath()
org/apache/parquet/hadoop/TestParquetWriter/test()#org/apache/parquet/example/data/GroupValueSource/getDouble(java.lang.String,int)
org/apache/parquet/hadoop/TestParquetWriter/test()#org/apache/parquet/example/data/Group/append(java.lang.String,java.lang.String)
org/apache/parquet/hadoop/TestParquetWriter/test()#org/apache/parquet/example/data/Group/append(java.lang.String,int)
org/apache/parquet/hadoop/TestParquetWriter/test()#java/util/Map/get(java.lang.Object)
org/apache/parquet/hadoop/TestParquetWriter/test()#org/apache/parquet/example/data/GroupValueSource/getFloat(java.lang.String,int)
org/apache/parquet/hadoop/TestParquetWriter/test()#org/apache/parquet/example/data/GroupValueSource/getLong(java.lang.String,int)
org/apache/parquet/hadoop/TestParquetWriter/test()#org/apache/parquet/hadoop/ParquetWriter/write(T)
org/apache/parquet/hadoop/TestParquetWriter/test()#org/apache/parquet/example/data/Group/append(java.lang.String,double)
org/apache/parquet/hadoop/TestParquetWriter/test()#org/apache/parquet/hadoop/ParquetFileReader/readFooter(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path,org.apache.parquet.format.converter.ParquetMetadataConverter.MetadataFilter)
org/apache/parquet/hadoop/TestParquetWriter/test()#org/apache/parquet/example/data/Group/append(java.lang.String,org.apache.parquet.io.api.Binary)
org/apache/parquet/hadoop/TestParquetWriter/test()#org/apache/parquet/hadoop/ParquetReader/read()
org/apache/parquet/hadoop/TestParquetWriter/test()#java/lang/Enum/name()
org/apache/parquet/hadoop/TestParquetWriter/test()#org/apache/parquet/hadoop/ParquetReader/close()
org/apache/parquet/hadoop/TestParquetWriter/test()#org/apache/parquet/hadoop/metadata/ParquetMetadata/getBlocks()
org/apache/parquet/hadoop/TestParquetWriter/test()#org/apache/parquet/hadoop/TestUtils/enforceEmptyDir(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path)
org/apache/parquet/hadoop/TestParquetWriter/test()#org/apache/parquet/hadoop/metadata/ParquetMetadata/getFileMetaData()
org/apache/parquet/hadoop/TestParquetWriter/test()#org/apache/parquet/hadoop/ParquetReader/builder(org.apache.parquet.hadoop.api.ReadSupport,org.apache.parquet.hadoop.Path)
org/apache/parquet/hadoop/TestParquetWriter/test()#org/apache/parquet/example/data/simple/SimpleGroupFactory/SimpleGroupFactory(org.apache.parquet.schema.MessageType)
org/apache/parquet/hadoop/TestParquetWriter/test()#org/apache/parquet/hadoop/metadata/ColumnPath/toDotString()
org/apache/parquet/hadoop/TestParquetWriter/test()#org/apache/parquet/hadoop/ParquetWriter/ParquetWriter(org.apache.parquet.hadoop.Path,org.apache.parquet.hadoop.api.WriteSupport,org.apache.parquet.hadoop.metadata.CompressionCodecName,int,int,int,boolean,boolean,org.apache.parquet.column.ParquetProperties.WriterVersion,org.apache.parquet.hadoop.Configuration)
org/apache/parquet/hadoop/TestParquetWriter/test()#java/util/Arrays/asList(T[])
org/apache/parquet/hadoop/TestParquetWriter/test()#org/apache/parquet/schema/MessageTypeParser/parseMessageType(java.lang.String)
org/apache/parquet/hadoop/TestParquetWriter/test()#org/apache/parquet/example/data/GroupValueSource/getInteger(java.lang.String,int)
org/apache/parquet/hadoop/TestParquetWriter/test()#org/apache/parquet/hadoop/example/GroupWriteSupport/setSchema(org.apache.parquet.schema.MessageType,org.apache.parquet.hadoop.Configuration)
org/apache/parquet/hadoop/TestParquetWriter/test()#java/util/HashMap/HashMap()
org/apache/parquet/hadoop/TestParquetWriter/test()#org/apache/parquet/example/data/Group/append(java.lang.String,long)
org/apache/parquet/hadoop/TestParquetWriter/test()#java/lang/String/equals(java.lang.Object)
org/apache/parquet/hadoop/TestParquetWriter/test()#org/apache/parquet/example/data/Group/append(java.lang.String,boolean)
org/apache/parquet/hadoop/TestParquetWriter/test()#org/apache/parquet/io/api/Binary/fromConstantByteArray(byte[])
org/apache/parquet/hadoop/TestParquetWriter/test()#java/util/Set/contains(java.lang.Object)
org/apache/parquet/hadoop/TestParquetWriter/test()#org/apache/parquet/hadoop/ParquetWriter/close()
org/apache/parquet/hadoop/TestParquetWriter/test()#org/apache/parquet/hadoop/example/GroupReadSupport/GroupReadSupport()
org/apache/parquet/hadoop/TestParquetWriter/test()#org/apache/parquet/hadoop/example/GroupWriteSupport/GroupWriteSupport()
org/apache/parquet/hadoop/TestParquetWriter/test()#org/apache/parquet/column/ParquetProperties/WriterVersion/values()
org/apache/parquet/hadoop/TestParquetWriter/test()#org/apache/parquet/example/data/GroupValueSource/getBinary(java.lang.String,int)
org/apache/parquet/hadoop/TestParquetWriter/test()#org/apache/parquet/hadoop/metadata/FileMetaData/getKeyValueMetaData()
org/apache/parquet/hadoop/TestParquetWriter/test()#org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/getEncodings()
org/apache/parquet/hadoop/TestParquetWriter/test()#java/util/Map/put(K,V)
org/apache/parquet/hadoop/TestParquetWriter/test()#org/apache/parquet/example/data/GroupValueSource/getBoolean(java.lang.String,int)
org/apache/parquet/hadoop/TestParquetWriter/test()#org/apache/parquet/hadoop/metadata/BlockMetaData/getColumns()
org/apache/parquet/hadoop/TestParquetWriter/test()#org/apache/parquet/example/data/simple/SimpleGroupFactory/newGroup()
org/apache/parquet/hadoop/TestParquetWriter/test()#org/apache/parquet/example/data/GroupValueSource/getInt96(java.lang.String,int)
org/apache/parquet/hadoop/TestParquetWriter/test()#java/lang/Object/Object()
org/apache/parquet/hadoop/TestParquetWriter/test()#org/apache/parquet/example/data/Group/append(java.lang.String,float)
org/apache/parquet/statistics/TestStatistics/SingletonPageReader/getTotalValueCount()#org/apache/parquet/column/page/DataPage/getValueCount()
org/apache/parquet/schema/GroupType/convertChildren(java.util.List,org.apache.parquet.schema.TypeConverter)#java/util/ArrayList/ArrayList(int)
org/apache/parquet/schema/GroupType/convertChildren(java.util.List,org.apache.parquet.schema.TypeConverter)#java/util/List/size()
org/apache/parquet/schema/GroupType/convertChildren(java.util.List,org.apache.parquet.schema.TypeConverter)#java/util/List/add(E)
org/apache/parquet/schema/GroupType/convertChildren(java.util.List,org.apache.parquet.schema.TypeConverter)#org/apache/parquet/schema/Type/convert(java.util.List,org.apache.parquet.schema.TypeConverter)
org/apache/parquet/schema/GroupType/union(org.apache.parquet.schema.Type,boolean)#org/apache/parquet/schema/GroupType/mergeFields(org.apache.parquet.schema.GroupType)
org/apache/parquet/schema/GroupType/union(org.apache.parquet.schema.Type,boolean)#org/apache/parquet/schema/Type/getId()
org/apache/parquet/schema/GroupType/union(org.apache.parquet.schema.Type,boolean)#org/apache/parquet/schema/Type/isPrimitive()
org/apache/parquet/schema/GroupType/union(org.apache.parquet.schema.Type,boolean)#org/apache/parquet/schema/Type/getName()
org/apache/parquet/schema/GroupType/union(org.apache.parquet.schema.Type,boolean)#org/apache/parquet/schema/Type/getOriginalType()
org/apache/parquet/schema/GroupType/union(org.apache.parquet.schema.Type,boolean)#org/apache/parquet/schema/GroupType/GroupType(org.apache.parquet.schema.Type.Repetition,java.lang.String,org.apache.parquet.schema.OriginalType,java.util.List,org.apache.parquet.schema.Type.ID)
org/apache/parquet/schema/GroupType/union(org.apache.parquet.schema.Type,boolean)#org/apache/parquet/schema/IncompatibleSchemaModificationException/IncompatibleSchemaModificationException(java.lang.String)
org/apache/parquet/schema/GroupType/union(org.apache.parquet.schema.Type,boolean)#org/apache/parquet/schema/Type/asGroupType()
org/apache/parquet/schema/GroupType/union(org.apache.parquet.schema.Type,boolean)#org/apache/parquet/schema/Type/getRepetition()
org/apache/parquet/schema/GroupType/containsPath(java.lang.String[],int)#org/apache/parquet/schema/Type/containsPath(java.lang.String[],int)
org/apache/parquet/schema/GroupType/containsPath(java.lang.String[],int)#org/apache/parquet/schema/GroupType/getType(java.lang.String)
org/apache/parquet/schema/GroupType/containsPath(java.lang.String[],int)#org/apache/parquet/schema/GroupType/containsField(java.lang.String)
org/apache/parquet/schema/GroupType/hashCode()#org/apache/parquet/schema/Type/getOriginalType()
org/apache/parquet/schema/GroupType/hashCode()#java/util/Objects/hash(java.lang.Object[])
org/apache/parquet/schema/GroupType/hashCode()#org/apache/parquet/schema/GroupType/getFields()
org/apache/parquet/schema/GroupType/withId(int)#org/apache/parquet/schema/GroupType/GroupType(org.apache.parquet.schema.Type.Repetition,java.lang.String,org.apache.parquet.schema.OriginalType,java.util.List,org.apache.parquet.schema.Type.ID)
org/apache/parquet/schema/GroupType/withId(int)#org/apache/parquet/schema/Type/getRepetition()
org/apache/parquet/schema/GroupType/withId(int)#org/apache/parquet/schema/Type/ID/ID(int)
org/apache/parquet/schema/GroupType/withId(int)#org/apache/parquet/schema/Type/getName()
org/apache/parquet/schema/GroupType/withId(int)#org/apache/parquet/schema/Type/getOriginalType()
org/apache/parquet/schema/GroupType/mergeFields(org.apache.parquet.schema.GroupType)#org/apache/parquet/schema/GroupType/mergeFields(org.apache.parquet.schema.GroupType,boolean)
org/apache/parquet/schema/GroupType/equals(org.apache.parquet.schema.Type)#org/apache/parquet/schema/Type/getOriginalType()
org/apache/parquet/schema/GroupType/equals(org.apache.parquet.schema.Type)#org/apache/parquet/schema/Type/asGroupType()
org/apache/parquet/schema/GroupType/equals(org.apache.parquet.schema.Type)#org/apache/parquet/schema/GroupType/getFields()
org/apache/parquet/schema/GroupType/equals(org.apache.parquet.schema.Type)#java/util/List/equals(java.lang.Object)
org/apache/parquet/schema/GroupType/equals(org.apache.parquet.schema.Type)#org/apache/parquet/schema/Type/equals(org.apache.parquet.schema.Type)
org/apache/parquet/schema/GroupType/equals(org.apache.parquet.schema.Type)#org/apache/parquet/schema/Type/isPrimitive()
org/apache/parquet/schema/GroupType/checkContains(org.apache.parquet.schema.Type)#org/apache/parquet/schema/GroupType/checkGroupContains(org.apache.parquet.schema.Type)
org/apache/parquet/schema/GroupType/checkContains(org.apache.parquet.schema.Type)#org/apache/parquet/schema/Type/checkContains(org.apache.parquet.schema.Type)
org/apache/parquet/schema/GroupType/accept(org.apache.parquet.schema.TypeVisitor)#org/apache/parquet/schema/TypeVisitor/visit(org.apache.parquet.schema.GroupType)
org/apache/parquet/schema/GroupType/getFieldName(int)#org/apache/parquet/schema/Type/getName()
org/apache/parquet/schema/GroupType/getFieldName(int)#java/util/List/get(int)
org/apache/parquet/schema/GroupType/containsField(java.lang.String)#java/util/Map/containsKey(java.lang.Object)
org/apache/parquet/schema/GroupType/convert(java.util.List,org.apache.parquet.schema.TypeConverter)#org/apache/parquet/schema/GroupType/convertChildren(java.util.List,org.apache.parquet.schema.TypeConverter)
org/apache/parquet/schema/GroupType/convert(java.util.List,org.apache.parquet.schema.TypeConverter)#java/util/List/add(E)
org/apache/parquet/schema/GroupType/convert(java.util.List,org.apache.parquet.schema.TypeConverter)#org/apache/parquet/schema/TypeConverter/convertGroupType(java.util.List,org.apache.parquet.schema.GroupType,java.util.List)
org/apache/parquet/schema/GroupType/convert(java.util.List,org.apache.parquet.schema.TypeConverter)#java/util/ArrayList/ArrayList(java.util.Collection)
org/apache/parquet/schema/GroupType/union(org.apache.parquet.schema.Type)#org/apache/parquet/schema/GroupType/union(org.apache.parquet.schema.Type,boolean)
org/apache/parquet/schema/GroupType/typeHashCode()#org/apache/parquet/schema/GroupType/hashCode()
org/apache/parquet/schema/GroupType/writeToStringBuilder(java.lang.StringBuilder,java.lang.String)#java/lang/Enum/name()
org/apache/parquet/schema/GroupType/writeToStringBuilder(java.lang.StringBuilder,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/apache/parquet/schema/GroupType/writeToStringBuilder(java.lang.StringBuilder,java.lang.String)#org/apache/parquet/schema/Type/getRepetition()
org/apache/parquet/schema/GroupType/writeToStringBuilder(java.lang.StringBuilder,java.lang.String)#org/apache/parquet/schema/Type/getId()
org/apache/parquet/schema/GroupType/writeToStringBuilder(java.lang.StringBuilder,java.lang.String)#org/apache/parquet/schema/Type/getName()
org/apache/parquet/schema/GroupType/writeToStringBuilder(java.lang.StringBuilder,java.lang.String)#org/apache/parquet/schema/Type/getOriginalType()
org/apache/parquet/schema/GroupType/writeToStringBuilder(java.lang.StringBuilder,java.lang.String)#java/lang/String/toLowerCase(java.util.Locale)
org/apache/parquet/schema/GroupType/writeToStringBuilder(java.lang.StringBuilder,java.lang.String)#org/apache/parquet/schema/GroupType/membersDisplayString(java.lang.StringBuilder,java.lang.String)
org/apache/parquet/schema/GroupType/getMaxDefinitionLevel(java.lang.String[],int)#org/apache/parquet/schema/Type/isRepetition(org.apache.parquet.schema.Type.Repetition)
org/apache/parquet/schema/GroupType/getMaxDefinitionLevel(java.lang.String[],int)#org/apache/parquet/schema/GroupType/getType(java.lang.String)
org/apache/parquet/schema/GroupType/getMaxDefinitionLevel(java.lang.String[],int)#org/apache/parquet/schema/Type/getMaxDefinitionLevel(java.lang.String[],int)
org/apache/parquet/schema/GroupType/withNewFields(org.apache.parquet.schema.Type[])#java/util/Arrays/asList(T[])
org/apache/parquet/schema/GroupType/withNewFields(org.apache.parquet.schema.Type[])#org/apache/parquet/schema/GroupType/withNewFields(java.util.List)
org/apache/parquet/schema/GroupType/getMaxRepetitionLevel(java.lang.String[],int)#org/apache/parquet/schema/Type/isRepetition(org.apache.parquet.schema.Type.Repetition)
org/apache/parquet/schema/GroupType/getMaxRepetitionLevel(java.lang.String[],int)#org/apache/parquet/schema/GroupType/getType(java.lang.String)
org/apache/parquet/schema/GroupType/getMaxRepetitionLevel(java.lang.String[],int)#org/apache/parquet/schema/Type/getMaxRepetitionLevel(java.lang.String[],int)
org/apache/parquet/schema/GroupType/checkGroupContains(org.apache.parquet.schema.Type)#org/apache/parquet/schema/Type/getName()
org/apache/parquet/schema/GroupType/checkGroupContains(org.apache.parquet.schema.Type)#org/apache/parquet/schema/Type/asGroupType()
org/apache/parquet/schema/GroupType/checkGroupContains(org.apache.parquet.schema.Type)#org/apache/parquet/schema/Type/checkContains(org.apache.parquet.schema.Type)
org/apache/parquet/schema/GroupType/checkGroupContains(org.apache.parquet.schema.Type)#org/apache/parquet/schema/GroupType/getType(java.lang.String)
org/apache/parquet/schema/GroupType/checkGroupContains(org.apache.parquet.schema.Type)#org/apache/parquet/io/InvalidRecordException/InvalidRecordException(java.lang.String)
org/apache/parquet/schema/GroupType/checkGroupContains(org.apache.parquet.schema.Type)#org/apache/parquet/schema/GroupType/getFields()
org/apache/parquet/schema/GroupType/checkGroupContains(org.apache.parquet.schema.Type)#org/apache/parquet/schema/Type/isPrimitive()
org/apache/parquet/schema/GroupType/membersDisplayString(java.lang.StringBuilder,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/apache/parquet/schema/GroupType/membersDisplayString(java.lang.StringBuilder,java.lang.String)#org/apache/parquet/schema/Type/writeToStringBuilder(java.lang.StringBuilder,java.lang.String)
org/apache/parquet/schema/GroupType/membersDisplayString(java.lang.StringBuilder,java.lang.String)#org/apache/parquet/schema/Type/isPrimitive()
org/apache/parquet/schema/GroupType/typeEquals(org.apache.parquet.schema.Type)#org/apache/parquet/schema/GroupType/equals(org.apache.parquet.schema.Type)
org/apache/parquet/schema/GroupType/getType(java.lang.String[],int)#org/apache/parquet/schema/Type/getType(java.lang.String[],int)
org/apache/parquet/schema/GroupType/getType(java.lang.String[],int)#org/apache/parquet/schema/GroupType/getType(java.lang.String)
org/apache/parquet/schema/GroupType/getPaths(int)#java/util/ArrayList/ArrayList()
org/apache/parquet/schema/GroupType/getPaths(int)#org/apache/parquet/schema/Type/getName()
org/apache/parquet/schema/GroupType/getPaths(int)#org/apache/parquet/schema/Type/getPaths(int)
org/apache/parquet/schema/GroupType/getPaths(int)#java/util/List/add(E)
org/apache/parquet/schema/GroupType/getFieldIndex(java.lang.String)#java/util/Map/get(java.lang.Object)
org/apache/parquet/schema/GroupType/getFieldIndex(java.lang.String)#org/apache/parquet/io/InvalidRecordException/InvalidRecordException(java.lang.String)
org/apache/parquet/schema/GroupType/getFieldIndex(java.lang.String)#java/util/Map/containsKey(java.lang.Object)
org/apache/parquet/schema/GroupType/mergeFields(org.apache.parquet.schema.GroupType,boolean)#java/util/ArrayList/ArrayList()
org/apache/parquet/schema/GroupType/mergeFields(org.apache.parquet.schema.GroupType,boolean)#org/apache/parquet/schema/IncompatibleSchemaModificationException/IncompatibleSchemaModificationException(java.lang.String)
org/apache/parquet/schema/GroupType/mergeFields(org.apache.parquet.schema.GroupType,boolean)#org/apache/parquet/schema/Type/getRepetition()
org/apache/parquet/schema/GroupType/mergeFields(org.apache.parquet.schema.GroupType,boolean)#org/apache/parquet/schema/Type/Repetition/isMoreRestrictiveThan(org.apache.parquet.schema.Type.Repetition)
org/apache/parquet/schema/GroupType/mergeFields(org.apache.parquet.schema.GroupType,boolean)#org/apache/parquet/schema/GroupType/getType(java.lang.String)
org/apache/parquet/schema/GroupType/mergeFields(org.apache.parquet.schema.GroupType,boolean)#java/util/List/add(E)
org/apache/parquet/schema/GroupType/mergeFields(org.apache.parquet.schema.GroupType,boolean)#org/apache/parquet/schema/GroupType/getFields()
org/apache/parquet/schema/GroupType/mergeFields(org.apache.parquet.schema.GroupType,boolean)#org/apache/parquet/schema/Type/union(org.apache.parquet.schema.Type,boolean)
org/apache/parquet/schema/GroupType/mergeFields(org.apache.parquet.schema.GroupType,boolean)#org/apache/parquet/schema/GroupType/containsField(java.lang.String)
org/apache/parquet/schema/GroupType/mergeFields(org.apache.parquet.schema.GroupType,boolean)#org/apache/parquet/schema/Type/getName()
org/apache/parquet/schema/GroupType/mergeFields(org.apache.parquet.schema.GroupType,boolean)#org/apache/parquet/schema/Type/getOriginalType()
org/apache/parquet/schema/GroupType/getType(java.lang.String)#org/apache/parquet/schema/GroupType/getFieldIndex(java.lang.String)
org/apache/parquet/schema/GroupType/getType(java.lang.String)#org/apache/parquet/schema/GroupType/getType(int)
org/apache/parquet/schema/GroupType/getFieldCount()#java/util/List/size()
org/apache/parquet/schema/GroupType/withNewFields(java.util.List)#org/apache/parquet/schema/GroupType/GroupType(org.apache.parquet.schema.Type.Repetition,java.lang.String,org.apache.parquet.schema.OriginalType,java.util.List,org.apache.parquet.schema.Type.ID)
org/apache/parquet/schema/GroupType/withNewFields(java.util.List)#org/apache/parquet/schema/Type/getRepetition()
org/apache/parquet/schema/GroupType/withNewFields(java.util.List)#org/apache/parquet/schema/Type/getId()
org/apache/parquet/schema/GroupType/withNewFields(java.util.List)#org/apache/parquet/schema/Type/getName()
org/apache/parquet/schema/GroupType/withNewFields(java.util.List)#org/apache/parquet/schema/Type/getOriginalType()
org/apache/parquet/schema/GroupType/getType(int)#java/util/List/get(int)
org/apache/parquet/thrift/projection/amend/DefaultProtocolEventsGenerator/createProtocolEventsForField(org.apache.parquet.thrift.struct.ThriftField)#org/apache/parquet/thrift/struct/ThriftField/getType()
org/apache/parquet/thrift/projection/amend/DefaultProtocolEventsGenerator/createProtocolEventsForField(org.apache.parquet.thrift.struct.ThriftField)#org/apache/parquet/thrift/projection/amend/ReadFieldBeginProtocol/ReadFieldBeginProtocol(org.apache.parquet.thrift.struct.ThriftField)
org/apache/parquet/thrift/projection/amend/DefaultProtocolEventsGenerator/createProtocolEventsForField(org.apache.parquet.thrift.struct.ThriftField)#org/apache/parquet/thrift/projection/amend/DefaultEventsVisitor/getEvents()
org/apache/parquet/thrift/projection/amend/DefaultProtocolEventsGenerator/createProtocolEventsForField(org.apache.parquet.thrift.struct.ThriftField)#java/util/List/addAll(java.util.Collection)
org/apache/parquet/thrift/projection/amend/DefaultProtocolEventsGenerator/createProtocolEventsForField(org.apache.parquet.thrift.struct.ThriftField)#org/apache/parquet/thrift/projection/amend/DefaultEventsVisitor/DefaultEventsVisitor()
org/apache/parquet/thrift/projection/amend/DefaultProtocolEventsGenerator/createProtocolEventsForField(org.apache.parquet.thrift.struct.ThriftField)#java/util/List/add(E)
org/apache/parquet/thrift/projection/amend/DefaultProtocolEventsGenerator/createProtocolEventsForField(org.apache.parquet.thrift.struct.ThriftField)#org/apache/parquet/thrift/struct/ThriftType/accept(org.apache.parquet.thrift.struct.ThriftType.StateVisitor,S)
org/apache/parquet/schema/Types/buildGroup(org.apache.parquet.schema.Type.Repetition)#org/apache/parquet/schema/Types/Builder/repetition(org.apache.parquet.schema.Type.Repetition)
org/apache/parquet/schema/Types/buildGroup(org.apache.parquet.schema.Type.Repetition)#org/apache/parquet/schema/Types/GroupBuilder/GroupBuilder(java.lang.Class)
org/apache/parquet/schema/Types/requiredGroup()#org/apache/parquet/schema/Types/Builder/repetition(org.apache.parquet.schema.Type.Repetition)
org/apache/parquet/schema/Types/requiredGroup()#org/apache/parquet/schema/Types/GroupBuilder/GroupBuilder(java.lang.Class)
org/apache/parquet/schema/Types/repeatedGroup()#org/apache/parquet/schema/Types/Builder/repetition(org.apache.parquet.schema.Type.Repetition)
org/apache/parquet/schema/Types/repeatedGroup()#org/apache/parquet/schema/Types/GroupBuilder/GroupBuilder(java.lang.Class)
org/apache/parquet/schema/Types/list(org.apache.parquet.schema.Type.Repetition)#org/apache/parquet/schema/Types/Builder/repetition(org.apache.parquet.schema.Type.Repetition)
org/apache/parquet/schema/Types/list(org.apache.parquet.schema.Type.Repetition)#org/apache/parquet/schema/Types/ListBuilder/ListBuilder(java.lang.Class)
org/apache/parquet/schema/Types/optional(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)#org/apache/parquet/schema/Types/Builder/repetition(org.apache.parquet.schema.Type.Repetition)
org/apache/parquet/schema/Types/optional(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)#org/apache/parquet/schema/Types/PrimitiveBuilder/PrimitiveBuilder(java.lang.Class,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/schema/Types/repeated(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)#org/apache/parquet/schema/Types/Builder/repetition(org.apache.parquet.schema.Type.Repetition)
org/apache/parquet/schema/Types/repeated(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)#org/apache/parquet/schema/Types/PrimitiveBuilder/PrimitiveBuilder(java.lang.Class,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/schema/Types/optionalMap()#org/apache/parquet/schema/Types/map(org.apache.parquet.schema.Type.Repetition)
org/apache/parquet/schema/Types/buildMessage()#org/apache/parquet/schema/Types/MessageTypeBuilder/MessageTypeBuilder()
org/apache/parquet/schema/Types/requiredMap()#org/apache/parquet/schema/Types/map(org.apache.parquet.schema.Type.Repetition)
org/apache/parquet/schema/Types/optionalGroup()#org/apache/parquet/schema/Types/Builder/repetition(org.apache.parquet.schema.Type.Repetition)
org/apache/parquet/schema/Types/optionalGroup()#org/apache/parquet/schema/Types/GroupBuilder/GroupBuilder(java.lang.Class)
org/apache/parquet/schema/Types/requiredList()#org/apache/parquet/schema/Types/list(org.apache.parquet.schema.Type.Repetition)
org/apache/parquet/schema/Types/optionalList()#org/apache/parquet/schema/Types/list(org.apache.parquet.schema.Type.Repetition)
org/apache/parquet/schema/Types/required(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)#org/apache/parquet/schema/Types/Builder/repetition(org.apache.parquet.schema.Type.Repetition)
org/apache/parquet/schema/Types/required(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)#org/apache/parquet/schema/Types/PrimitiveBuilder/PrimitiveBuilder(java.lang.Class,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/schema/Types/primitive(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.schema.Type.Repetition)#org/apache/parquet/schema/Types/Builder/repetition(org.apache.parquet.schema.Type.Repetition)
org/apache/parquet/schema/Types/primitive(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.schema.Type.Repetition)#org/apache/parquet/schema/Types/PrimitiveBuilder/PrimitiveBuilder(java.lang.Class,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/schema/Types/map(org.apache.parquet.schema.Type.Repetition)#org/apache/parquet/schema/Types/Builder/repetition(org.apache.parquet.schema.Type.Repetition)
org/apache/parquet/schema/Types/map(org.apache.parquet.schema.Type.Repetition)#org/apache/parquet/schema/Types/MapBuilder/MapBuilder(java.lang.Class)
org/apache/parquet/hadoop/util/counters/mapreduce/MapReduceCounterLoader/getCounterByNameAndFlag(java.lang.String,java.lang.String,java.lang.String)#org/apache/parquet/hadoop/util/counters/BenchmarkCounter/NullCounter/NullCounter()
org/apache/parquet/hadoop/util/counters/mapreduce/MapReduceCounterLoader/getCounterByNameAndFlag(java.lang.String,java.lang.String,java.lang.String)#org/apache/parquet/hadoop/util/ContextUtil/getConfiguration(org.apache.parquet.hadoop.util.JobContext)
org/apache/parquet/hadoop/util/counters/mapreduce/MapReduceCounterLoader/getCounterByNameAndFlag(java.lang.String,java.lang.String,java.lang.String)#org/apache/parquet/hadoop/util/ContextUtil/getCounter(org.apache.parquet.hadoop.TaskAttemptContext,java.lang.String,java.lang.String)
org/apache/parquet/hadoop/util/counters/mapreduce/MapReduceCounterLoader/getCounterByNameAndFlag(java.lang.String,java.lang.String,java.lang.String)#org/apache/parquet/hadoop/util/counters/mapreduce/MapReduceCounterAdapter/MapReduceCounterAdapter(org.apache.parquet.hadoop.util.counters.mapreduce.Counter)
org/apache/parquet/column/Dictionary/decodeToBinary(int)#java/lang/Class/getName()
org/apache/parquet/column/Dictionary/decodeToBinary(int)#java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)
org/apache/parquet/column/Dictionary/decodeToBinary(int)#java/lang/Object/getClass()
org/apache/parquet/column/Dictionary/decodeToLong(int)#java/lang/Class/getName()
org/apache/parquet/column/Dictionary/decodeToLong(int)#java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)
org/apache/parquet/column/Dictionary/decodeToLong(int)#java/lang/Object/getClass()
org/apache/parquet/column/Dictionary/decodeToInt(int)#java/lang/Class/getName()
org/apache/parquet/column/Dictionary/decodeToInt(int)#java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)
org/apache/parquet/column/Dictionary/decodeToInt(int)#java/lang/Object/getClass()
org/apache/parquet/column/Dictionary/decodeToDouble(int)#java/lang/Class/getName()
org/apache/parquet/column/Dictionary/decodeToDouble(int)#java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)
org/apache/parquet/column/Dictionary/decodeToDouble(int)#java/lang/Object/getClass()
org/apache/parquet/column/Dictionary/decodeToFloat(int)#java/lang/Class/getName()
org/apache/parquet/column/Dictionary/decodeToFloat(int)#java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)
org/apache/parquet/column/Dictionary/decodeToFloat(int)#java/lang/Object/getClass()
org/apache/parquet/column/Dictionary/decodeToBoolean(int)#java/lang/Class/getName()
org/apache/parquet/column/Dictionary/decodeToBoolean(int)#java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)
org/apache/parquet/column/Dictionary/decodeToBoolean(int)#java/lang/Object/getClass()
org/apache/parquet/filter2/recordlevel/FilteringRecordMaterializer/getCurrentRecord()#org/apache/parquet/filter2/recordlevel/IncrementallyUpdatedFilterPredicateResetter/reset(org.apache.parquet.filter2.recordlevel.IncrementallyUpdatedFilterPredicate)
org/apache/parquet/filter2/recordlevel/FilteringRecordMaterializer/getCurrentRecord()#org/apache/parquet/filter2/recordlevel/IncrementallyUpdatedFilterPredicateEvaluator/evaluate(org.apache.parquet.filter2.recordlevel.IncrementallyUpdatedFilterPredicate)
org/apache/parquet/filter2/recordlevel/FilteringRecordMaterializer/getCurrentRecord()#org/apache/parquet/io/api/RecordMaterializer/getCurrentRecord()
org/apache/parquet/filter2/recordlevel/FilteringRecordMaterializer/intArrayToList(int[])#java/util/ArrayList/ArrayList(int)
org/apache/parquet/filter2/recordlevel/FilteringRecordMaterializer/intArrayToList(int[])#java/util/List/add(E)
org/apache/parquet/filter2/recordlevel/FilteringRecordMaterializer/skipCurrentRecord()#org/apache/parquet/io/api/RecordMaterializer/skipCurrentRecord()
org/apache/parquet/filter2/recordlevel/FilteringRecordMaterializer/getIndexFieldPathList(org.apache.parquet.io.PrimitiveColumnIO)#org/apache/parquet/io/ColumnIO/getIndexFieldPath()
org/apache/parquet/filter2/recordlevel/FilteringRecordMaterializer/getIndexFieldPathList(org.apache.parquet.io.PrimitiveColumnIO)#org/apache/parquet/filter2/recordlevel/FilteringRecordMaterializer/intArrayToList(int[])
org/apache/parquet/proto/ProtoParquetOutputFormat/setProtobufClass(org.apache.parquet.hadoop.Job,java.lang.Class)#org/apache/parquet/proto/ProtoWriteSupport/setSchema(org.apache.parquet.hadoop.Configuration,java.lang.Class)
org/apache/parquet/proto/ProtoParquetOutputFormat/setProtobufClass(org.apache.parquet.hadoop.Job,java.lang.Class)#org/apache/parquet/hadoop/util/ContextUtil/getConfiguration(org.apache.parquet.hadoop.util.JobContext)
org/apache/parquet/pig/convert/TupleConverter/FieldStringConverter/addFloat(float)#org/apache/parquet/pig/convert/ParentValueContainer/add(java.lang.Object)
org/apache/parquet/pig/convert/TupleConverter/FieldStringConverter/addFloat(float)#java/lang/Float/toString(float)
org/apache/parquet/pig/convert/TupleConverter/FieldStringConverter/setDictionary(org.apache.parquet.column.Dictionary)#org/apache/parquet/column/Dictionary/decodeToBinary(int)
org/apache/parquet/pig/convert/TupleConverter/FieldStringConverter/setDictionary(org.apache.parquet.column.Dictionary)#org/apache/parquet/io/api/Binary/toStringUsingUTF8()
org/apache/parquet/pig/convert/TupleConverter/FieldStringConverter/setDictionary(org.apache.parquet.column.Dictionary)#org/apache/parquet/column/Dictionary/getMaxId()
org/apache/parquet/pig/convert/TupleConverter/FieldStringConverter/addValueFromDictionary(int)#org/apache/parquet/pig/convert/ParentValueContainer/add(java.lang.Object)
org/apache/parquet/pig/convert/TupleConverter/FieldStringConverter/addInt(int)#org/apache/parquet/pig/convert/ParentValueContainer/add(java.lang.Object)
org/apache/parquet/pig/convert/TupleConverter/FieldStringConverter/addInt(int)#java/lang/Integer/toString(int)
org/apache/parquet/pig/convert/TupleConverter/FieldStringConverter/addBinary(org.apache.parquet.io.api.Binary)#org/apache/parquet/io/api/Binary/toStringUsingUTF8()
org/apache/parquet/pig/convert/TupleConverter/FieldStringConverter/addBinary(org.apache.parquet.io.api.Binary)#org/apache/parquet/pig/convert/ParentValueContainer/add(java.lang.Object)
org/apache/parquet/pig/convert/TupleConverter/FieldStringConverter/addDouble(double)#java/lang/Double/toString(double)
org/apache/parquet/pig/convert/TupleConverter/FieldStringConverter/addDouble(double)#org/apache/parquet/pig/convert/ParentValueContainer/add(java.lang.Object)
org/apache/parquet/pig/convert/TupleConverter/FieldStringConverter/addBoolean(boolean)#org/apache/parquet/pig/convert/ParentValueContainer/add(java.lang.Object)
org/apache/parquet/pig/convert/TupleConverter/FieldStringConverter/addBoolean(boolean)#java/lang/Boolean/toString(boolean)
org/apache/parquet/pig/convert/TupleConverter/FieldStringConverter/addLong(long)#org/apache/parquet/pig/convert/ParentValueContainer/add(java.lang.Object)
org/apache/parquet/pig/convert/TupleConverter/FieldStringConverter/addLong(long)#java/lang/Long/toString(long)
org/apache/parquet/pig/summary/Summary/Intermediate/exec(org.apache.parquet.pig.Tuple)#org/apache/parquet/pig/summary/Summary/JSONTuple/JSONTuple(org.apache.parquet.pig.summary.TupleSummaryData)
org/apache/parquet/pig/summary/Summary/Intermediate/exec(org.apache.parquet.pig.Tuple)#org/apache/parquet/pig/summary/Summary/merge(org.apache.parquet.pig.Tuple)
org/apache/parquet/column/values/dictionary/DictionaryValuesWriter/fallBackAllValuesTo(org.apache.parquet.column.values.ValuesWriter)#org/apache/parquet/column/values/dictionary/DictionaryValuesWriter/clearDictionaryContent()
org/apache/parquet/column/values/dictionary/DictionaryValuesWriter/fallBackAllValuesTo(org.apache.parquet.column.values.ValuesWriter)#org/apache/parquet/column/values/dictionary/DictionaryValuesWriter/fallBackDictionaryEncodedData(org.apache.parquet.column.values.ValuesWriter)
org/apache/parquet/column/values/dictionary/DictionaryValuesWriter/fallBackAllValuesTo(org.apache.parquet.column.values.ValuesWriter)#org/apache/parquet/column/values/dictionary/IntList/IntList()
org/apache/parquet/column/values/dictionary/DictionaryValuesWriter/reset()#org/apache/parquet/column/values/dictionary/DictionaryValuesWriter/close()
org/apache/parquet/column/values/dictionary/DictionaryValuesWriter/reset()#org/apache/parquet/column/values/dictionary/IntList/IntList()
org/apache/parquet/column/values/dictionary/DictionaryValuesWriter/getAllocatedSize()#org/apache/parquet/column/values/dictionary/IntList/size()
org/apache/parquet/column/values/dictionary/DictionaryValuesWriter/getBufferedSize()#org/apache/parquet/column/values/dictionary/IntList/size()
org/apache/parquet/column/values/dictionary/DictionaryValuesWriter/shouldFallBack()#org/apache/parquet/column/values/dictionary/DictionaryValuesWriter/getDictionarySize()
org/apache/parquet/column/values/dictionary/DictionaryValuesWriter/getBytes()#org/apache/parquet/column/values/rle/RunLengthBitPackingHybridEncoder/RunLengthBitPackingHybridEncoder(int,int,int,org.apache.parquet.bytes.ByteBufferAllocator)
org/apache/parquet/column/values/dictionary/DictionaryValuesWriter/getBytes()#org/apache/parquet/column/values/dictionary/IntList/IntIterator/hasNext()
org/apache/parquet/column/values/dictionary/DictionaryValuesWriter/getBytes()#org/apache/parquet/bytes/BytesUtils/getWidthFromMaxInt(int)
org/apache/parquet/column/values/dictionary/DictionaryValuesWriter/getBytes()#org/apache/parquet/bytes/BytesInput/concat(org.apache.parquet.bytes.BytesInput[])
org/apache/parquet/column/values/dictionary/DictionaryValuesWriter/getBytes()#org/apache/parquet/bytes/BytesInput/size()
org/apache/parquet/column/values/dictionary/DictionaryValuesWriter/getBytes()#org/apache/parquet/column/values/rle/RunLengthBitPackingHybridEncoder/toBytes()
org/apache/parquet/column/values/dictionary/DictionaryValuesWriter/getBytes()#org/apache/parquet/column/values/rle/RunLengthBitPackingHybridEncoder/writeInt(int)
org/apache/parquet/column/values/dictionary/DictionaryValuesWriter/getBytes()#org/apache/parquet/bytes/BytesInput/from(byte[])
org/apache/parquet/column/values/dictionary/DictionaryValuesWriter/getBytes()#org/apache/parquet/io/ParquetEncodingException/ParquetEncodingException(java.lang.String,java.lang.Throwable)
org/apache/parquet/column/values/dictionary/DictionaryValuesWriter/getBytes()#org/apache/parquet/column/values/dictionary/IntList/IntIterator/next()
org/apache/parquet/column/values/dictionary/DictionaryValuesWriter/getBytes()#org/apache/parquet/column/values/dictionary/DictionaryValuesWriter/getDictionarySize()
org/apache/parquet/column/values/dictionary/DictionaryValuesWriter/getBytes()#java/util/List/add(E)
org/apache/parquet/column/values/dictionary/DictionaryValuesWriter/getBytes()#org/apache/parquet/bytes/CapacityByteArrayOutputStream/initialSlabSizeHeuristic(int,int,int)
org/apache/parquet/column/values/dictionary/DictionaryValuesWriter/getBytes()#org/apache/parquet/column/values/dictionary/IntList/iterator()
org/apache/parquet/column/values/dictionary/DictionaryValuesWriter/close()#org/apache/parquet/column/values/rle/RunLengthBitPackingHybridEncoder/close()
org/apache/parquet/column/values/dictionary/DictionaryValuesWriter/close()#java/util/List/clear()
org/apache/parquet/column/values/dictionary/DictionaryValuesWriter/memUsageString(java.lang.String)#java/lang/String/format(java.lang.String,java.lang.Object[])
org/apache/parquet/column/values/dictionary/DictionaryValuesWriter/memUsageString(java.lang.String)#org/apache/parquet/column/values/dictionary/IntList/size()
org/apache/parquet/column/values/dictionary/DictionaryValuesWriter/memUsageString(java.lang.String)#java/lang/String/valueOf(int)
org/apache/parquet/column/values/dictionary/DictionaryValuesWriter/resetDictionary()#org/apache/parquet/column/values/dictionary/DictionaryValuesWriter/clearDictionaryContent()
org/apache/parquet/column/values/dictionary/DictionaryValuesWriter/dictPage(org.apache.parquet.column.values.ValuesWriter)#org/apache/parquet/column/values/ValuesWriter/getBytes()
org/apache/parquet/column/values/dictionary/DictionaryValuesWriter/dictPage(org.apache.parquet.column.values.ValuesWriter)#org/apache/parquet/column/page/DictionaryPage/DictionaryPage(org.apache.parquet.bytes.BytesInput,int,org.apache.parquet.column.Encoding)
org/apache/parquet/column/values/dictionary/DictionaryValuesWriter/dictPage(org.apache.parquet.column.values.ValuesWriter)#org/apache/parquet/column/values/ValuesWriter/close()
org/apache/parquet/filter2/predicate/TestLogicalInverseRewriter/testComplex()#org/apache/parquet/filter2/predicate/LogicalInverseRewriter/rewrite(org.apache.parquet.filter2.predicate.FilterPredicate)
org/apache/parquet/filter2/predicate/TestLogicalInverseRewriter/testBaseCases()#org/apache/parquet/filter2/predicate/FilterApi/gt(C,T)
org/apache/parquet/filter2/predicate/TestLogicalInverseRewriter/testBaseCases()#org/apache/parquet/filter2/predicate/FilterApi/eq(C,T)
org/apache/parquet/filter2/predicate/TestLogicalInverseRewriter/testBaseCases()#org/apache/parquet/filter2/predicate/FilterApi/lt(C,T)
org/apache/parquet/filter2/predicate/TestLogicalInverseRewriter/testBaseCases()#org/apache/parquet/filter2/predicate/FilterApi/notEq(C,T)
org/apache/parquet/filter2/predicate/TestLogicalInverseRewriter/testBaseCases()#org/apache/parquet/filter2/predicate/FilterApi/userDefined(org.apache.parquet.filter2.predicate.Operators.Column,java.lang.Class)
org/apache/parquet/filter2/predicate/TestLogicalInverseRewriter/testBaseCases()#org/apache/parquet/filter2/predicate/FilterApi/and(org.apache.parquet.filter2.predicate.FilterPredicate,org.apache.parquet.filter2.predicate.FilterPredicate)
org/apache/parquet/filter2/predicate/TestLogicalInverseRewriter/testBaseCases()#org/apache/parquet/filter2/predicate/Operators/LogicalNotUserDefined/LogicalNotUserDefined(org.apache.parquet.filter2.predicate.Operators.UserDefined)
org/apache/parquet/filter2/predicate/TestLogicalInverseRewriter/testBaseCases()#org/apache/parquet/filter2/predicate/FilterApi/gtEq(C,T)
org/apache/parquet/filter2/predicate/TestLogicalInverseRewriter/testBaseCases()#org/apache/parquet/filter2/predicate/FilterApi/not(org.apache.parquet.filter2.predicate.FilterPredicate)
org/apache/parquet/filter2/predicate/TestLogicalInverseRewriter/testBaseCases()#org/apache/parquet/filter2/predicate/FilterApi/ltEq(C,T)
org/apache/parquet/filter2/predicate/TestLogicalInverseRewriter/testBaseCases()#org/apache/parquet/filter2/predicate/LogicalInverseRewriter/rewrite(org.apache.parquet.filter2.predicate.FilterPredicate)
org/apache/parquet/filter2/predicate/TestLogicalInverseRewriter/testBaseCases()#org/apache/parquet/filter2/predicate/FilterApi/or(org.apache.parquet.filter2.predicate.FilterPredicate,org.apache.parquet.filter2.predicate.FilterPredicate)
org/apache/parquet/filter2/predicate/TestLogicalInverseRewriter/testBaseCases()#org/apache/parquet/filter2/predicate/TestLogicalInverseRewriter/assertNoOp(org.apache.parquet.filter2.predicate.FilterPredicate)
org/apache/parquet/filter2/predicate/TestLogicalInverseRewriter/assertNoOp(org.apache.parquet.filter2.predicate.FilterPredicate)#org/apache/parquet/filter2/predicate/LogicalInverseRewriter/rewrite(org.apache.parquet.filter2.predicate.FilterPredicate)
org/apache/parquet/column/values/fallback/FallbackValuesWriter/writeByte(int)#org/apache/parquet/column/values/ValuesWriter/writeByte(int)
org/apache/parquet/column/values/fallback/FallbackValuesWriter/writeByte(int)#org/apache/parquet/column/values/fallback/FallbackValuesWriter/checkFallback()
org/apache/parquet/column/values/fallback/FallbackValuesWriter/writeInteger(int)#org/apache/parquet/column/values/ValuesWriter/writeInteger(int)
org/apache/parquet/column/values/fallback/FallbackValuesWriter/writeInteger(int)#org/apache/parquet/column/values/fallback/FallbackValuesWriter/checkFallback()
org/apache/parquet/column/values/fallback/FallbackValuesWriter/toDictPageAndClose()#org/apache/parquet/column/values/ValuesWriter/toDictPageAndClose()
org/apache/parquet/column/values/fallback/FallbackValuesWriter/fallBack()#org/apache/parquet/column/values/RequiresFallback/fallBackAllValuesTo(org.apache.parquet.column.values.ValuesWriter)
org/apache/parquet/column/values/fallback/FallbackValuesWriter/getEncoding()#org/apache/parquet/column/values/ValuesWriter/getEncoding()
org/apache/parquet/column/values/fallback/FallbackValuesWriter/getEncoding()#org/apache/parquet/column/Encoding/usesDictionary()
org/apache/parquet/column/values/fallback/FallbackValuesWriter/checkFallback()#org/apache/parquet/column/values/RequiresFallback/shouldFallBack()
org/apache/parquet/column/values/fallback/FallbackValuesWriter/checkFallback()#org/apache/parquet/column/values/fallback/FallbackValuesWriter/fallBack()
org/apache/parquet/column/values/fallback/FallbackValuesWriter/reset()#org/apache/parquet/column/values/ValuesWriter/reset()
org/apache/parquet/column/values/fallback/FallbackValuesWriter/getAllocatedSize()#org/apache/parquet/column/values/ValuesWriter/getAllocatedSize()
org/apache/parquet/column/values/fallback/FallbackValuesWriter/of(I,F)#org/apache/parquet/column/values/fallback/FallbackValuesWriter/FallbackValuesWriter(I,F)
org/apache/parquet/column/values/fallback/FallbackValuesWriter/writeFloat(float)#org/apache/parquet/column/values/fallback/FallbackValuesWriter/checkFallback()
org/apache/parquet/column/values/fallback/FallbackValuesWriter/writeFloat(float)#org/apache/parquet/column/values/ValuesWriter/writeFloat(float)
org/apache/parquet/column/values/fallback/FallbackValuesWriter/getBytes()#org/apache/parquet/column/values/ValuesWriter/getBytes()
org/apache/parquet/column/values/fallback/FallbackValuesWriter/getBytes()#org/apache/parquet/column/values/fallback/FallbackValuesWriter/fallBack()
org/apache/parquet/column/values/fallback/FallbackValuesWriter/getBytes()#org/apache/parquet/bytes/BytesInput/size()
org/apache/parquet/column/values/fallback/FallbackValuesWriter/getBytes()#org/apache/parquet/column/values/RequiresFallback/isCompressionSatisfying(long,long)
org/apache/parquet/column/values/fallback/FallbackValuesWriter/close()#org/apache/parquet/column/values/ValuesWriter/close()
org/apache/parquet/column/values/fallback/FallbackValuesWriter/memUsageString(java.lang.String)#org/apache/parquet/column/values/ValuesWriter/memUsageString(java.lang.String)
org/apache/parquet/column/values/fallback/FallbackValuesWriter/memUsageString(java.lang.String)#java/lang/String/format(java.lang.String,java.lang.Object[])
org/apache/parquet/column/values/fallback/FallbackValuesWriter/writeLong(long)#org/apache/parquet/column/values/ValuesWriter/writeLong(long)
org/apache/parquet/column/values/fallback/FallbackValuesWriter/writeLong(long)#org/apache/parquet/column/values/fallback/FallbackValuesWriter/checkFallback()
org/apache/parquet/column/values/fallback/FallbackValuesWriter/writeDouble(double)#org/apache/parquet/column/values/ValuesWriter/writeDouble(double)
org/apache/parquet/column/values/fallback/FallbackValuesWriter/writeDouble(double)#org/apache/parquet/column/values/fallback/FallbackValuesWriter/checkFallback()
org/apache/parquet/column/values/fallback/FallbackValuesWriter/writeBytes(org.apache.parquet.io.api.Binary)#org/apache/parquet/io/api/Binary/length()
org/apache/parquet/column/values/fallback/FallbackValuesWriter/writeBytes(org.apache.parquet.io.api.Binary)#org/apache/parquet/column/values/ValuesWriter/writeBytes(org.apache.parquet.io.api.Binary)
org/apache/parquet/column/values/fallback/FallbackValuesWriter/writeBytes(org.apache.parquet.io.api.Binary)#org/apache/parquet/column/values/fallback/FallbackValuesWriter/checkFallback()
org/apache/parquet/column/values/fallback/FallbackValuesWriter/resetDictionary()#org/apache/parquet/column/values/ValuesWriter/resetDictionary()
org/apache/parquet/CorruptStatistics/warnParseErrorOnce(java.lang.String,java.lang.Throwable)#java/util/concurrent/atomic/AtomicBoolean/getAndSet(boolean)
org/apache/parquet/CorruptStatistics/warnOnce(java.lang.String)#java/util/concurrent/atomic/AtomicBoolean/getAndSet(boolean)
org/apache/parquet/CorruptStatistics/shouldIgnoreStatistics(java.lang.String,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)#org/apache/parquet/CorruptStatistics/warnParseErrorOnce(java.lang.String,java.lang.Throwable)
org/apache/parquet/CorruptStatistics/shouldIgnoreStatistics(java.lang.String,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)#org/apache/parquet/SemanticVersion/compareTo(org.apache.parquet.SemanticVersion)
org/apache/parquet/CorruptStatistics/shouldIgnoreStatistics(java.lang.String,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)#org/apache/parquet/CorruptStatistics/warnOnce(java.lang.String)
org/apache/parquet/CorruptStatistics/shouldIgnoreStatistics(java.lang.String,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)#org/apache/parquet/Strings/isNullOrEmpty(java.lang.String)
org/apache/parquet/CorruptStatistics/shouldIgnoreStatistics(java.lang.String,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)#java/lang/String/equals(java.lang.Object)
org/apache/parquet/CorruptStatistics/shouldIgnoreStatistics(java.lang.String,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)#org/apache/parquet/SemanticVersion/parse(java.lang.String)
org/apache/parquet/CorruptStatistics/shouldIgnoreStatistics(java.lang.String,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)#org/apache/parquet/VersionParser/parse(java.lang.String)
org/apache/parquet/column/values/bitpacking/TwoBitPackingReader/read()#java/io/InputStream/read()
org/apache/parquet/arrow/schema/SchemaMapping/ListTypeMapping/accept(org.apache.parquet.arrow.schema.SchemaMapping.TypeMappingVisitor)#org/apache/parquet/arrow/schema/SchemaMapping/TypeMappingVisitor/visit(org.apache.parquet.arrow.schema.SchemaMapping.ListTypeMapping)
org/apache/parquet/example/data/simple/SimpleGroup/getInteger(int,int)#org/apache/parquet/example/data/simple/SimpleGroup/getValue(int,int)
org/apache/parquet/example/data/simple/SimpleGroup/getInteger(int,int)#org/apache/parquet/example/data/simple/IntegerValue/getInteger()
org/apache/parquet/example/data/simple/SimpleGroup/getFloat(int,int)#org/apache/parquet/example/data/simple/FloatValue/getFloat()
org/apache/parquet/example/data/simple/SimpleGroup/getFloat(int,int)#org/apache/parquet/example/data/simple/SimpleGroup/getValue(int,int)
org/apache/parquet/example/data/simple/SimpleGroup/add(int,org.apache.parquet.example.data.simple.NanoTime)#org/apache/parquet/example/data/simple/NanoTime/toInt96()
org/apache/parquet/example/data/simple/SimpleGroup/add(int,org.apache.parquet.example.data.simple.NanoTime)#org/apache/parquet/example/data/simple/SimpleGroup/add(int,org.apache.parquet.example.data.simple.Primitive)
org/apache/parquet/example/data/simple/SimpleGroup/getTimeNanos(int,int)#org/apache/parquet/example/data/simple/SimpleGroup/getValue(int,int)
org/apache/parquet/example/data/simple/SimpleGroup/getTimeNanos(int,int)#org/apache/parquet/example/data/simple/NanoTime/fromInt96(org.apache.parquet.example.data.simple.Int96Value)
org/apache/parquet/example/data/simple/SimpleGroup/add(int,boolean)#org/apache/parquet/example/data/simple/BooleanValue/BooleanValue(boolean)
org/apache/parquet/example/data/simple/SimpleGroup/add(int,boolean)#org/apache/parquet/example/data/simple/SimpleGroup/add(int,org.apache.parquet.example.data.simple.Primitive)
org/apache/parquet/example/data/simple/SimpleGroup/writeValue(int,int,org.apache.parquet.io.api.RecordConsumer)#org/apache/parquet/example/data/simple/SimpleGroup/getValue(int,int)
org/apache/parquet/example/data/simple/SimpleGroup/writeValue(int,int,org.apache.parquet.io.api.RecordConsumer)#org/apache/parquet/example/data/simple/Primitive/writeValue(org.apache.parquet.io.api.RecordConsumer)
org/apache/parquet/example/data/simple/SimpleGroup/getBoolean(int,int)#org/apache/parquet/example/data/simple/BooleanValue/getBoolean()
org/apache/parquet/example/data/simple/SimpleGroup/getBoolean(int,int)#org/apache/parquet/example/data/simple/SimpleGroup/getValue(int,int)
org/apache/parquet/example/data/simple/SimpleGroup/add(int,double)#org/apache/parquet/example/data/simple/SimpleGroup/add(int,org.apache.parquet.example.data.simple.Primitive)
org/apache/parquet/example/data/simple/SimpleGroup/add(int,double)#org/apache/parquet/example/data/simple/DoubleValue/DoubleValue(double)
org/apache/parquet/example/data/simple/SimpleGroup/getGroup(int,int)#org/apache/parquet/example/data/simple/SimpleGroup/getValue(int,int)
org/apache/parquet/example/data/simple/SimpleGroup/add(int,org.apache.parquet.io.api.Binary)#org/apache/parquet/schema/Type/getName()
org/apache/parquet/example/data/simple/SimpleGroup/add(int,org.apache.parquet.io.api.Binary)#org/apache/parquet/schema/Type/asPrimitiveType()
org/apache/parquet/example/data/simple/SimpleGroup/add(int,org.apache.parquet.io.api.Binary)#org/apache/parquet/example/data/simple/SimpleGroup/add(int,org.apache.parquet.example.data.simple.Primitive)
org/apache/parquet/example/data/simple/SimpleGroup/add(int,org.apache.parquet.io.api.Binary)#org/apache/parquet/example/data/simple/BinaryValue/BinaryValue(org.apache.parquet.io.api.Binary)
org/apache/parquet/example/data/simple/SimpleGroup/add(int,org.apache.parquet.io.api.Binary)#org/apache/parquet/example/data/simple/SimpleGroup/getType()
org/apache/parquet/example/data/simple/SimpleGroup/add(int,org.apache.parquet.io.api.Binary)#org/apache/parquet/schema/PrimitiveType/getPrimitiveTypeName()
org/apache/parquet/example/data/simple/SimpleGroup/add(int,org.apache.parquet.io.api.Binary)#org/apache/parquet/schema/GroupType/getType(int)
org/apache/parquet/example/data/simple/SimpleGroup/add(int,org.apache.parquet.io.api.Binary)#org/apache/parquet/example/data/simple/Int96Value/Int96Value(org.apache.parquet.io.api.Binary)
org/apache/parquet/example/data/simple/SimpleGroup/add(int,org.apache.parquet.io.api.Binary)#java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)
org/apache/parquet/example/data/simple/SimpleGroup/getValueToString(int,int)#java/lang/String/valueOf(java.lang.Object)
org/apache/parquet/example/data/simple/SimpleGroup/getValueToString(int,int)#org/apache/parquet/example/data/simple/SimpleGroup/getValue(int,int)
org/apache/parquet/example/data/simple/SimpleGroup/getString(int,int)#org/apache/parquet/example/data/simple/SimpleGroup/getValue(int,int)
org/apache/parquet/example/data/simple/SimpleGroup/getString(int,int)#org/apache/parquet/example/data/simple/BinaryValue/getString()
org/apache/parquet/example/data/simple/SimpleGroup/getDouble(int,int)#org/apache/parquet/example/data/simple/DoubleValue/getDouble()
org/apache/parquet/example/data/simple/SimpleGroup/getDouble(int,int)#org/apache/parquet/example/data/simple/SimpleGroup/getValue(int,int)
org/apache/parquet/example/data/simple/SimpleGroup/add(int,org.apache.parquet.example.data.Group)#java/util/List/add(E)
org/apache/parquet/example/data/simple/SimpleGroup/add(int,int)#org/apache/parquet/example/data/simple/IntegerValue/IntegerValue(int)
org/apache/parquet/example/data/simple/SimpleGroup/add(int,int)#org/apache/parquet/example/data/simple/SimpleGroup/add(int,org.apache.parquet.example.data.simple.Primitive)
org/apache/parquet/example/data/simple/SimpleGroup/add(int,java.lang.String)#org/apache/parquet/example/data/simple/BinaryValue/BinaryValue(org.apache.parquet.io.api.Binary)
org/apache/parquet/example/data/simple/SimpleGroup/add(int,java.lang.String)#org/apache/parquet/example/data/simple/SimpleGroup/add(int,org.apache.parquet.example.data.simple.Primitive)
org/apache/parquet/example/data/simple/SimpleGroup/add(int,java.lang.String)#org/apache/parquet/io/api/Binary/fromString(java.lang.String)
org/apache/parquet/example/data/simple/SimpleGroup/getValue(int,int)#java/util/List/get(int)
org/apache/parquet/example/data/simple/SimpleGroup/getValue(int,int)#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/apache/parquet/example/data/simple/SimpleGroup/getValue(int,int)#org/apache/parquet/schema/GroupType/getFieldName(int)
org/apache/parquet/example/data/simple/SimpleGroup/addGroup(int)#org/apache/parquet/example/data/simple/SimpleGroup/SimpleGroup(org.apache.parquet.schema.GroupType)
org/apache/parquet/example/data/simple/SimpleGroup/addGroup(int)#org/apache/parquet/schema/GroupType/getType(int)
org/apache/parquet/example/data/simple/SimpleGroup/addGroup(int)#org/apache/parquet/example/data/simple/SimpleGroup/add(int,org.apache.parquet.example.data.Group)
org/apache/parquet/example/data/simple/SimpleGroup/addGroup(int)#org/apache/parquet/schema/Type/asGroupType()
org/apache/parquet/example/data/simple/SimpleGroup/add(int,long)#org/apache/parquet/example/data/simple/LongValue/LongValue(long)
org/apache/parquet/example/data/simple/SimpleGroup/add(int,long)#org/apache/parquet/example/data/simple/SimpleGroup/add(int,org.apache.parquet.example.data.simple.Primitive)
org/apache/parquet/example/data/simple/SimpleGroup/getInt96(int,int)#org/apache/parquet/example/data/simple/Int96Value/getInt96()
org/apache/parquet/example/data/simple/SimpleGroup/getInt96(int,int)#org/apache/parquet/example/data/simple/SimpleGroup/getValue(int,int)
org/apache/parquet/example/data/simple/SimpleGroup/getFieldRepetitionCount(int)#java/util/List/size()
org/apache/parquet/example/data/simple/SimpleGroup/getBinary(int,int)#org/apache/parquet/example/data/simple/BinaryValue/getBinary()
org/apache/parquet/example/data/simple/SimpleGroup/getBinary(int,int)#org/apache/parquet/example/data/simple/SimpleGroup/getValue(int,int)
org/apache/parquet/example/data/simple/SimpleGroup/toString(java.lang.String)#org/apache/parquet/schema/Type/getName()
org/apache/parquet/example/data/simple/SimpleGroup/toString(java.lang.String)#java/lang/Object/toString()
org/apache/parquet/example/data/simple/SimpleGroup/toString(java.lang.String)#java/util/List/size()
org/apache/parquet/example/data/simple/SimpleGroup/toString(java.lang.String)#org/apache/parquet/example/data/simple/SimpleGroup/toString(java.lang.String)
org/apache/parquet/example/data/simple/SimpleGroup/toString(java.lang.String)#org/apache/parquet/schema/GroupType/getFields()
org/apache/parquet/example/data/simple/SimpleGroup/add(int,org.apache.parquet.example.data.simple.Primitive)#java/util/List/isEmpty()
org/apache/parquet/example/data/simple/SimpleGroup/add(int,org.apache.parquet.example.data.simple.Primitive)#org/apache/parquet/schema/Type/isRepetition(org.apache.parquet.schema.Type.Repetition)
org/apache/parquet/example/data/simple/SimpleGroup/add(int,org.apache.parquet.example.data.simple.Primitive)#java/util/List/add(E)
org/apache/parquet/example/data/simple/SimpleGroup/add(int,org.apache.parquet.example.data.simple.Primitive)#org/apache/parquet/schema/GroupType/getType(int)
org/apache/parquet/example/data/simple/SimpleGroup/add(int,org.apache.parquet.example.data.simple.Primitive)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/apache/parquet/example/data/simple/SimpleGroup/add(int,org.apache.parquet.example.data.simple.Primitive)#org/apache/parquet/schema/Type/getName()
org/apache/parquet/example/data/simple/SimpleGroup/toString()#org/apache/parquet/example/data/simple/SimpleGroup/toString(java.lang.String)
org/apache/parquet/example/data/simple/SimpleGroup/getLong(int,int)#org/apache/parquet/example/data/simple/LongValue/getLong()
org/apache/parquet/example/data/simple/SimpleGroup/getLong(int,int)#org/apache/parquet/example/data/simple/SimpleGroup/getValue(int,int)
org/apache/parquet/example/data/simple/SimpleGroup/add(int,float)#org/apache/parquet/example/data/simple/SimpleGroup/add(int,org.apache.parquet.example.data.simple.Primitive)
org/apache/parquet/example/data/simple/SimpleGroup/add(int,float)#org/apache/parquet/example/data/simple/FloatValue/FloatValue(float)
org/apache/parquet/thrift/ParquetReadProtocol/readMapEnd()#org/apache/parquet/thrift/ParquetReadProtocol/next()
org/apache/parquet/thrift/ParquetReadProtocol/readI16()#org/apache/parquet/thrift/ParquetReadProtocol/next()
org/apache/parquet/thrift/ParquetReadProtocol/readMessageBegin()#org/apache/parquet/thrift/ParquetReadProtocol/next()
org/apache/parquet/thrift/ParquetReadProtocol/readStructBegin()#org/apache/parquet/thrift/ParquetReadProtocol/next()
org/apache/parquet/thrift/ParquetReadProtocol/readSetBegin()#org/apache/parquet/thrift/ParquetReadProtocol/next()
org/apache/parquet/thrift/ParquetReadProtocol/readByte()#org/apache/parquet/thrift/ParquetReadProtocol/next()
org/apache/parquet/thrift/ParquetReadProtocol/readBool()#org/apache/parquet/thrift/ParquetReadProtocol/next()
org/apache/parquet/thrift/ParquetReadProtocol/readMapBegin()#org/apache/parquet/thrift/ParquetReadProtocol/next()
org/apache/parquet/thrift/ParquetReadProtocol/readMessageEnd()#org/apache/parquet/thrift/ParquetReadProtocol/next()
org/apache/parquet/thrift/ParquetReadProtocol/readStructEnd()#org/apache/parquet/thrift/ParquetReadProtocol/next()
org/apache/parquet/thrift/ParquetReadProtocol/readI32()#org/apache/parquet/thrift/ParquetReadProtocol/next()
org/apache/parquet/thrift/ParquetReadProtocol/readFieldEnd()#org/apache/parquet/thrift/ParquetReadProtocol/next()
org/apache/parquet/thrift/ParquetReadProtocol/readBinary()#org/apache/parquet/thrift/ParquetReadProtocol/next()
org/apache/parquet/thrift/ParquetReadProtocol/readFieldBegin()#org/apache/parquet/thrift/ParquetReadProtocol/next()
org/apache/parquet/thrift/ParquetReadProtocol/readListEnd()#org/apache/parquet/thrift/ParquetReadProtocol/next()
org/apache/parquet/thrift/ParquetReadProtocol/readDouble()#org/apache/parquet/thrift/ParquetReadProtocol/next()
org/apache/parquet/thrift/ParquetReadProtocol/readString()#org/apache/parquet/thrift/ParquetReadProtocol/next()
org/apache/parquet/thrift/ParquetReadProtocol/readI64()#org/apache/parquet/thrift/ParquetReadProtocol/next()
org/apache/parquet/thrift/ParquetReadProtocol/readSetEnd()#org/apache/parquet/thrift/ParquetReadProtocol/next()
org/apache/parquet/thrift/ParquetReadProtocol/readListBegin()#org/apache/parquet/thrift/ParquetReadProtocol/next()
org/apache/parquet/thrift/TestThriftMetaData/testToStringDoesNotThrow()#org/apache/parquet/thrift/struct/ThriftType/StructType/StructType(java.util.List,org.apache.parquet.thrift.struct.ThriftType.StructType.StructOrUnionType)
org/apache/parquet/thrift/TestThriftMetaData/testToStringDoesNotThrow()#java/util/ArrayList/ArrayList()
org/apache/parquet/thrift/TestThriftMetaData/testToStringDoesNotThrow()#org/apache/parquet/thrift/ThriftMetaData/ThriftMetaData(java.lang.String,org.apache.parquet.thrift.struct.ThriftType.StructType)
org/apache/parquet/thrift/TestThriftMetaData/testToStringDoesNotThrow()#org/apache/parquet/thrift/ThriftMetaData/toString()
org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/getStartingPos()#org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/getFirstDataPageOffset()
org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/getStartingPos()#org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/getDictionaryPageOffset()
org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/getEncodings()#org/apache/parquet/hadoop/metadata/ColumnChunkProperties/getEncodings()
org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/getPath()#org/apache/parquet/hadoop/metadata/ColumnChunkProperties/getPath()
org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/get(org.apache.parquet.hadoop.metadata.ColumnPath,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.hadoop.metadata.CompressionCodecName,org.apache.parquet.column.EncodingStats,java.util.Set,org.apache.parquet.column.statistics.Statistics,long,long,long,long,long)#org/apache/parquet/hadoop/metadata/LongColumnChunkMetaData/LongColumnChunkMetaData(org.apache.parquet.hadoop.metadata.ColumnPath,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.hadoop.metadata.CompressionCodecName,org.apache.parquet.column.EncodingStats,java.util.Set,org.apache.parquet.column.statistics.Statistics,long,long,long,long,long)
org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/get(org.apache.parquet.hadoop.metadata.ColumnPath,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.hadoop.metadata.CompressionCodecName,org.apache.parquet.column.EncodingStats,java.util.Set,org.apache.parquet.column.statistics.Statistics,long,long,long,long,long)#org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/positiveLongFitsInAnInt(long)
org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/get(org.apache.parquet.hadoop.metadata.ColumnPath,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.hadoop.metadata.CompressionCodecName,org.apache.parquet.column.EncodingStats,java.util.Set,org.apache.parquet.column.statistics.Statistics,long,long,long,long,long)#org/apache/parquet/hadoop/metadata/IntColumnChunkMetaData/IntColumnChunkMetaData(org.apache.parquet.hadoop.metadata.ColumnPath,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.hadoop.metadata.CompressionCodecName,org.apache.parquet.column.EncodingStats,java.util.Set,org.apache.parquet.column.statistics.Statistics,long,long,long,long,long)
org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/getCodec()#org/apache/parquet/hadoop/metadata/ColumnChunkProperties/getCodec()
org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/get(org.apache.parquet.hadoop.metadata.ColumnPath,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.hadoop.metadata.CompressionCodecName,java.util.Set,org.apache.parquet.column.statistics.Statistics,long,long,long,long,long)#org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/get(org.apache.parquet.hadoop.metadata.ColumnPath,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.hadoop.metadata.CompressionCodecName,org.apache.parquet.column.EncodingStats,java.util.Set,org.apache.parquet.column.statistics.Statistics,long,long,long,long,long)
org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/toString()#org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/getFirstDataPageOffset()
org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/toString()#org/apache/parquet/hadoop/metadata/ColumnChunkProperties/toString()
org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/getType()#org/apache/parquet/hadoop/metadata/ColumnChunkProperties/getType()
org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/get(org.apache.parquet.hadoop.metadata.ColumnPath,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.hadoop.metadata.CompressionCodecName,java.util.Set,long,long,long,long,long)#org/apache/parquet/column/statistics/BooleanStatistics/BooleanStatistics()
org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/get(org.apache.parquet.hadoop.metadata.ColumnPath,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.hadoop.metadata.CompressionCodecName,java.util.Set,long,long,long,long,long)#org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/get(org.apache.parquet.hadoop.metadata.ColumnPath,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.hadoop.metadata.CompressionCodecName,org.apache.parquet.column.EncodingStats,java.util.Set,org.apache.parquet.column.statistics.Statistics,long,long,long,long,long)
org/apache/parquet/scrooge/ScroogeStructConverterTest/testConvertListNestEnum()#org/apache/parquet/scrooge/ScroogeStructConverterTest/shouldConvertConsistentlyWithThriftStructConverter(java.lang.Class)
org/apache/parquet/scrooge/ScroogeStructConverterTest/testConvertSetNestList()#org/apache/parquet/scrooge/ScroogeStructConverterTest/shouldConvertConsistentlyWithThriftStructConverter(java.lang.Class)
org/apache/parquet/scrooge/ScroogeStructConverterTest/testConvertPrimitiveSet()#org/apache/parquet/scrooge/ScroogeStructConverterTest/shouldConvertConsistentlyWithThriftStructConverter(java.lang.Class)
org/apache/parquet/scrooge/ScroogeStructConverterTest/shouldConvertConsistentlyWithThriftStructConverter(java.lang.Class)#java/lang/Class/forName(java.lang.String)
org/apache/parquet/scrooge/ScroogeStructConverterTest/shouldConvertConsistentlyWithThriftStructConverter(java.lang.Class)#org/apache/parquet/scrooge/ScroogeStructConverterTest/toParquetSchema(org.apache.parquet.thrift.struct.ThriftType.StructType)
org/apache/parquet/scrooge/ScroogeStructConverterTest/shouldConvertConsistentlyWithThriftStructConverter(java.lang.Class)#java/lang/Class/getName()
org/apache/parquet/scrooge/ScroogeStructConverterTest/shouldConvertConsistentlyWithThriftStructConverter(java.lang.Class)#org/apache/parquet/scrooge/ScroogeStructConverter/convert(java.lang.Class)
org/apache/parquet/scrooge/ScroogeStructConverterTest/shouldConvertConsistentlyWithThriftStructConverter(java.lang.Class)#java/lang/String/replaceFirst(java.lang.String,java.lang.String)
org/apache/parquet/scrooge/ScroogeStructConverterTest/shouldConvertConsistentlyWithThriftStructConverter(java.lang.Class)#org/apache/parquet/thrift/ThriftSchemaConverter/toStructType(java.lang.Class)
org/apache/parquet/scrooge/ScroogeStructConverterTest/shouldConvertConsistentlyWithThriftStructConverter(java.lang.Class)#org/apache/parquet/scrooge/ScroogeStructConverter/ScroogeStructConverter()
org/apache/parquet/scrooge/ScroogeStructConverterTest/testConvertEnum()#org/apache/parquet/scrooge/ScroogeStructConverterTest/shouldConvertConsistentlyWithThriftStructConverter(java.lang.Class)
org/apache/parquet/scrooge/ScroogeStructConverterTest/testConvertSetNestMap()#org/apache/parquet/scrooge/ScroogeStructConverterTest/shouldConvertConsistentlyWithThriftStructConverter(java.lang.Class)
org/apache/parquet/scrooge/ScroogeStructConverterTest/toParquetSchema(org.apache.parquet.thrift.struct.ThriftType.StructType)#org/apache/parquet/thrift/ThriftSchemaConverter/convertWithoutProjection(org.apache.parquet.thrift.struct.ThriftType.StructType)
org/apache/parquet/scrooge/ScroogeStructConverterTest/testConvertPrimitiveList()#org/apache/parquet/scrooge/ScroogeStructConverterTest/shouldConvertConsistentlyWithThriftStructConverter(java.lang.Class)
org/apache/parquet/scrooge/ScroogeStructConverterTest/testConvertListNestMap()#org/apache/parquet/scrooge/ScroogeStructConverterTest/shouldConvertConsistentlyWithThriftStructConverter(java.lang.Class)
org/apache/parquet/scrooge/ScroogeStructConverterTest/testConvertListNestSet()#org/apache/parquet/scrooge/ScroogeStructConverterTest/shouldConvertConsistentlyWithThriftStructConverter(java.lang.Class)
org/apache/parquet/scrooge/ScroogeStructConverterTest/testConvertMapNestSet()#org/apache/parquet/scrooge/ScroogeStructConverterTest/shouldConvertConsistentlyWithThriftStructConverter(java.lang.Class)
org/apache/parquet/scrooge/ScroogeStructConverterTest/testConvertMapNestList()#org/apache/parquet/scrooge/ScroogeStructConverterTest/shouldConvertConsistentlyWithThriftStructConverter(java.lang.Class)
org/apache/parquet/scrooge/ScroogeStructConverterTest/testBinary()#org/apache/parquet/scrooge/ScroogeStructConverterTest/shouldConvertConsistentlyWithThriftStructConverter(java.lang.Class)
org/apache/parquet/scrooge/ScroogeStructConverterTest/testConvertNestedList()#org/apache/parquet/scrooge/ScroogeStructConverterTest/shouldConvertConsistentlyWithThriftStructConverter(java.lang.Class)
org/apache/parquet/scrooge/ScroogeStructConverterTest/testConvertOptionalPrimitiveMap()#org/apache/parquet/scrooge/ScroogeStructConverterTest/shouldConvertConsistentlyWithThriftStructConverter(java.lang.Class)
org/apache/parquet/scrooge/ScroogeStructConverterTest/testConvertStruct()#org/apache/parquet/scrooge/ScroogeStructConverterTest/shouldConvertConsistentlyWithThriftStructConverter(java.lang.Class)
org/apache/parquet/scrooge/ScroogeStructConverterTest/testUnion()#org/apache/parquet/scrooge/ScroogeStructConverterTest/shouldConvertConsistentlyWithThriftStructConverter(java.lang.Class)
org/apache/parquet/scrooge/ScroogeStructConverterTest/testConvertPrimitiveMapValue()#org/apache/parquet/scrooge/ScroogeStructConverterTest/shouldConvertConsistentlyWithThriftStructConverter(java.lang.Class)
org/apache/parquet/scrooge/ScroogeStructConverterTest/testDefaultFields()#org/apache/parquet/scrooge/ScroogeStructConverterTest/shouldConvertConsistentlyWithThriftStructConverter(java.lang.Class)
org/apache/parquet/scrooge/ScroogeStructConverterTest/testMapComplex()#org/apache/parquet/scrooge/ScroogeStructConverterTest/shouldConvertConsistentlyWithThriftStructConverter(java.lang.Class)
org/apache/parquet/scrooge/ScroogeStructConverterTest/testConvertMapNestMap()#org/apache/parquet/scrooge/ScroogeStructConverterTest/shouldConvertConsistentlyWithThriftStructConverter(java.lang.Class)
org/apache/parquet/scrooge/ScroogeStructConverterTest/testConvertSetNestSet()#org/apache/parquet/scrooge/ScroogeStructConverterTest/shouldConvertConsistentlyWithThriftStructConverter(java.lang.Class)
org/apache/parquet/scrooge/ScroogeStructConverterTest/testMapBinary()#org/apache/parquet/scrooge/ScroogeStructConverterTest/shouldConvertConsistentlyWithThriftStructConverter(java.lang.Class)
org/apache/parquet/scrooge/ScroogeStructConverterTest/testConvertPrimitiveMapKey()#org/apache/parquet/scrooge/ScroogeStructConverterTest/shouldConvertConsistentlyWithThriftStructConverter(java.lang.Class)
org/apache/parquet/proto/ProtoMessageConverter/ProtoBinaryConverter/addBinary(org.apache.parquet.io.api.Binary)#org/apache/parquet/io/api/Binary/toByteBuffer()
org/apache/parquet/proto/ProtoMessageConverter/ProtoBinaryConverter/addBinary(org.apache.parquet.io.api.Binary)#org/apache/parquet/proto/ProtoMessageConverter/ParentValueContainer/add(java.lang.Object)
org/apache/parquet/column/values/deltalengthbytearray/DeltaLengthByteArrayValuesWriter/getBufferedSize()#org/apache/parquet/bytes/CapacityByteArrayOutputStream/size()
org/apache/parquet/column/values/deltalengthbytearray/DeltaLengthByteArrayValuesWriter/getBufferedSize()#org/apache/parquet/column/values/ValuesWriter/getBufferedSize()
org/apache/parquet/column/values/deltalengthbytearray/DeltaLengthByteArrayValuesWriter/getBytes()#org/apache/parquet/bytes/LittleEndianDataOutputStream/flush()
org/apache/parquet/column/values/deltalengthbytearray/DeltaLengthByteArrayValuesWriter/getBytes()#org/apache/parquet/column/values/ValuesWriter/getBytes()
org/apache/parquet/column/values/deltalengthbytearray/DeltaLengthByteArrayValuesWriter/getBytes()#org/apache/parquet/io/ParquetEncodingException/ParquetEncodingException(java.lang.String,java.lang.Throwable)
org/apache/parquet/column/values/deltalengthbytearray/DeltaLengthByteArrayValuesWriter/getBytes()#org/apache/parquet/bytes/BytesInput/from(org.apache.parquet.bytes.CapacityByteArrayOutputStream)
org/apache/parquet/column/values/deltalengthbytearray/DeltaLengthByteArrayValuesWriter/getBytes()#org/apache/parquet/bytes/CapacityByteArrayOutputStream/size()
org/apache/parquet/column/values/deltalengthbytearray/DeltaLengthByteArrayValuesWriter/getBytes()#org/apache/parquet/bytes/BytesInput/concat(org.apache.parquet.bytes.BytesInput[])
org/apache/parquet/column/values/deltalengthbytearray/DeltaLengthByteArrayValuesWriter/close()#org/apache/parquet/bytes/CapacityByteArrayOutputStream/close()
org/apache/parquet/column/values/deltalengthbytearray/DeltaLengthByteArrayValuesWriter/close()#org/apache/parquet/column/values/ValuesWriter/close()
org/apache/parquet/column/values/deltalengthbytearray/DeltaLengthByteArrayValuesWriter/memUsageString(java.lang.String)#org/apache/parquet/bytes/CapacityByteArrayOutputStream/memUsageString(java.lang.String)
org/apache/parquet/column/values/deltalengthbytearray/DeltaLengthByteArrayValuesWriter/memUsageString(java.lang.String)#org/apache/parquet/column/values/ValuesWriter/memUsageString(java.lang.String)
org/apache/parquet/column/values/deltalengthbytearray/DeltaLengthByteArrayValuesWriter/reset()#org/apache/parquet/column/values/ValuesWriter/reset()
org/apache/parquet/column/values/deltalengthbytearray/DeltaLengthByteArrayValuesWriter/reset()#org/apache/parquet/bytes/CapacityByteArrayOutputStream/reset()
org/apache/parquet/column/values/deltalengthbytearray/DeltaLengthByteArrayValuesWriter/writeBytes(org.apache.parquet.io.api.Binary)#org/apache/parquet/io/api/Binary/length()
org/apache/parquet/column/values/deltalengthbytearray/DeltaLengthByteArrayValuesWriter/writeBytes(org.apache.parquet.io.api.Binary)#org/apache/parquet/column/values/ValuesWriter/writeInteger(int)
org/apache/parquet/column/values/deltalengthbytearray/DeltaLengthByteArrayValuesWriter/writeBytes(org.apache.parquet.io.api.Binary)#org/apache/parquet/io/ParquetEncodingException/ParquetEncodingException(java.lang.String,java.lang.Throwable)
org/apache/parquet/column/values/deltalengthbytearray/DeltaLengthByteArrayValuesWriter/writeBytes(org.apache.parquet.io.api.Binary)#org/apache/parquet/io/api/Binary/writeTo(java.io.OutputStream)
org/apache/parquet/column/values/deltalengthbytearray/DeltaLengthByteArrayValuesWriter/getAllocatedSize()#org/apache/parquet/column/values/ValuesWriter/getAllocatedSize()
org/apache/parquet/column/values/deltalengthbytearray/DeltaLengthByteArrayValuesWriter/getAllocatedSize()#org/apache/parquet/bytes/CapacityByteArrayOutputStream/getCapacity()
org/apache/parquet/column/values/bitpacking/FiveBitPackingReader/read()#java/io/InputStream/read()
org/apache/parquet/column/values/bitpacking/FiveBitPackingReader/read()#org/apache/parquet/column/values/bitpacking/BaseBitPackingReader/alignToBytes(int)
org/apache/parquet/hadoop/codec/CodecConfig/MapreduceCodecConfig/getConfiguration()#org/apache/parquet/hadoop/util/ContextUtil/getConfiguration(org.apache.parquet.hadoop.util.JobContext)
org/apache/parquet/column/page/DictionaryPage/toString()#org/apache/parquet/column/page/Page/getUncompressedSize()
org/apache/parquet/column/page/DictionaryPage/toString()#org/apache/parquet/bytes/BytesInput/size()
org/apache/parquet/column/page/DictionaryPage/copy()#org/apache/parquet/column/page/Page/getUncompressedSize()
org/apache/parquet/column/page/DictionaryPage/copy()#org/apache/parquet/column/page/DictionaryPage/DictionaryPage(org.apache.parquet.bytes.BytesInput,int,int,org.apache.parquet.column.Encoding)
org/apache/parquet/column/page/DictionaryPage/copy()#org/apache/parquet/bytes/BytesInput/copy(org.apache.parquet.bytes.BytesInput)
org/apache/parquet/column/values/bitpacking/BitPackingValuesWriter/getBufferedSize()#org/apache/parquet/bytes/CapacityByteArrayOutputStream/size()
org/apache/parquet/column/values/bitpacking/BitPackingValuesWriter/close()#org/apache/parquet/bytes/CapacityByteArrayOutputStream/close()
org/apache/parquet/column/values/bitpacking/BitPackingValuesWriter/memUsageString(java.lang.String)#org/apache/parquet/bytes/CapacityByteArrayOutputStream/memUsageString(java.lang.String)
org/apache/parquet/column/values/bitpacking/BitPackingValuesWriter/reset()#org/apache/parquet/column/values/bitpacking/BitPackingValuesWriter/init()
org/apache/parquet/column/values/bitpacking/BitPackingValuesWriter/reset()#org/apache/parquet/bytes/CapacityByteArrayOutputStream/reset()
org/apache/parquet/column/values/bitpacking/BitPackingValuesWriter/init()#org/apache/parquet/column/values/bitpacking/BitPacking/getBitPackingWriter(int,java.io.OutputStream)
org/apache/parquet/column/values/bitpacking/BitPackingValuesWriter/getBytes()#org/apache/parquet/column/values/bitpacking/BitPacking/BitPackingWriter/finish()
org/apache/parquet/column/values/bitpacking/BitPackingValuesWriter/getBytes()#org/apache/parquet/io/ParquetEncodingException/ParquetEncodingException(java.lang.Throwable)
org/apache/parquet/column/values/bitpacking/BitPackingValuesWriter/getBytes()#org/apache/parquet/bytes/BytesInput/from(org.apache.parquet.bytes.CapacityByteArrayOutputStream)
org/apache/parquet/column/values/bitpacking/BitPackingValuesWriter/writeInteger(int)#org/apache/parquet/io/ParquetEncodingException/ParquetEncodingException(java.lang.Throwable)
org/apache/parquet/column/values/bitpacking/BitPackingValuesWriter/writeInteger(int)#org/apache/parquet/column/values/bitpacking/BitPacking/BitPackingWriter/write(int)
org/apache/parquet/column/values/bitpacking/BitPackingValuesWriter/getAllocatedSize()#org/apache/parquet/bytes/CapacityByteArrayOutputStream/getCapacity()
org/apache/parquet/column/values/plain/PlainValuesReader/FloatPlainValuesReader/skip()#org/apache/parquet/bytes/LittleEndianDataInputStream/skipBytes(int)
org/apache/parquet/column/values/plain/PlainValuesReader/FloatPlainValuesReader/skip()#org/apache/parquet/io/ParquetDecodingException/ParquetDecodingException(java.lang.String,java.lang.Throwable)
org/apache/parquet/column/values/plain/PlainValuesReader/FloatPlainValuesReader/readFloat()#org/apache/parquet/bytes/LittleEndianDataInputStream/readFloat()
org/apache/parquet/column/values/plain/PlainValuesReader/FloatPlainValuesReader/readFloat()#org/apache/parquet/io/ParquetDecodingException/ParquetDecodingException(java.lang.String,java.lang.Throwable)
org/apache/parquet/example/data/simple/convert/SimpleGroupConverter/start()#org/apache/parquet/example/data/Group/addGroup(int)
org/apache/parquet/example/data/simple/convert/SimpleGroupConverter/start()#org/apache/parquet/example/data/simple/convert/SimpleGroupConverter/getCurrentRecord()
org/apache/parquet/hadoop/ParquetFileWriter/NoAlignment/get(long)#org/apache/parquet/hadoop/ParquetFileWriter/NoAlignment/NoAlignment(long)
org/apache/parquet/io/api/Binary/FromStringBinary/encodeUTF8(java.lang.String)#org/apache/parquet/io/ParquetEncodingException/ParquetEncodingException(java.lang.String,java.lang.Throwable)
org/apache/parquet/io/api/Binary/FromStringBinary/encodeUTF8(java.lang.String)#java/lang/String/getBytes(java.lang.String)
org/apache/parquet/io/api/Binary/FromStringBinary/encodeUTF8(java.lang.String)#java/nio/ByteBuffer/wrap(byte[])
org/apache/parquet/io/api/Binary/FromStringBinary/toString()#org/apache/parquet/io/api/Binary/ByteBufferBackedBinary/toStringUsingUTF8()
org/apache/parquet/filter2/statisticslevel/TestStatisticsFilter/DropNullUdp/keep(java.lang.Integer)#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/apache/parquet/hadoop/TestColumnChunkPageWriteStore/intValue(org.apache.parquet.bytes.BytesInput)#org/apache/parquet/bytes/LittleEndianDataInputStream/LittleEndianDataInputStream(java.io.InputStream)
org/apache/parquet/hadoop/TestColumnChunkPageWriteStore/intValue(org.apache.parquet.bytes.BytesInput)#java/io/ByteArrayInputStream/ByteArrayInputStream(byte[])
org/apache/parquet/hadoop/TestColumnChunkPageWriteStore/intValue(org.apache.parquet.bytes.BytesInput)#org/apache/parquet/bytes/BytesInput/writeAllTo(java.io.OutputStream)
org/apache/parquet/hadoop/TestColumnChunkPageWriteStore/intValue(org.apache.parquet.bytes.BytesInput)#java/io/ByteArrayOutputStream/toByteArray()
org/apache/parquet/hadoop/TestColumnChunkPageWriteStore/intValue(org.apache.parquet.bytes.BytesInput)#java/io/ByteArrayOutputStream/ByteArrayOutputStream()
org/apache/parquet/hadoop/TestColumnChunkPageWriteStore/intValue(org.apache.parquet.bytes.BytesInput)#org/apache/parquet/bytes/LittleEndianDataInputStream/close()
org/apache/parquet/hadoop/TestColumnChunkPageWriteStore/intValue(org.apache.parquet.bytes.BytesInput)#org/apache/parquet/bytes/LittleEndianDataInputStream/readInt()
org/apache/parquet/hadoop/TestColumnChunkPageWriteStore/testColumnOrderV1()#org/apache/parquet/schema/Types/buildMessage()
org/apache/parquet/hadoop/TestColumnChunkPageWriteStore/testColumnOrderV1()#org/apache/parquet/hadoop/ColumnChunkPageWriteStore/getPageWriter(org.apache.parquet.column.ColumnDescriptor)
org/apache/parquet/hadoop/TestColumnChunkPageWriteStore/testColumnOrderV1()#org/apache/parquet/schema/Types/Builder/named(java.lang.String)
org/apache/parquet/hadoop/TestColumnChunkPageWriteStore/testColumnOrderV1()#org/apache/parquet/bytes/BytesInput/fromInt(int)
org/apache/parquet/hadoop/TestColumnChunkPageWriteStore/testColumnOrderV1()#org/apache/parquet/hadoop/ColumnChunkPageWriteStore/flushToFileWriter(org.apache.parquet.hadoop.ParquetFileWriter)
org/apache/parquet/hadoop/TestColumnChunkPageWriteStore/testColumnOrderV1()#org/apache/parquet/schema/Types/BaseGroupBuilder/required(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/hadoop/TestColumnChunkPageWriteStore/testColumnOrderV1()#org/apache/parquet/column/page/PageWriter/writePage(org.apache.parquet.bytes.BytesInput,int,org.apache.parquet.column.statistics.Statistics,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding)
org/apache/parquet/hadoop/TestColumnChunkPageWriteStore/testColumnOrderV1()#org/apache/parquet/schema/Types/Builder/as(org.apache.parquet.schema.OriginalType)
org/apache/parquet/hadoop/TestColumnChunkPageWriteStore/testColumnOrderV1()#org/apache/parquet/bytes/HeapByteBufferAllocator/HeapByteBufferAllocator()
org/apache/parquet/hadoop/TestColumnChunkPageWriteStore/testColumnOrderV1()#org/apache/parquet/schema/MessageType/getColumns()
org/apache/parquet/hadoop/TestColumnChunkPageWriteStore/testColumnOrderV1()#org/apache/parquet/column/statistics/BinaryStatistics/BinaryStatistics()
org/apache/parquet/hadoop/TestColumnChunkPageWriteStore/testColumnOrderV1()#org/apache/parquet/hadoop/ColumnChunkPageWriteStore/ColumnChunkPageWriteStore(org.apache.parquet.hadoop.CodecFactory.BytesCompressor,org.apache.parquet.schema.MessageType,org.apache.parquet.bytes.ByteBufferAllocator)
org/apache/parquet/hadoop/TestColumnChunkPageWriteStore/testColumnOrderV1()#org/apache/parquet/hadoop/TestColumnChunkPageWriteStore/compressor(org.apache.parquet.hadoop.metadata.CompressionCodecName)
org/apache/parquet/hadoop/TestColumnChunkPageWriteStore/compressor(org.apache.parquet.hadoop.metadata.CompressionCodecName)#org/apache/parquet/hadoop/CodecFactory/getCompressor(org.apache.parquet.hadoop.metadata.CompressionCodecName)
org/apache/parquet/hadoop/TestColumnChunkPageWriteStore/compressor(org.apache.parquet.hadoop.metadata.CompressionCodecName)#org/apache/parquet/hadoop/CodecFactory/CodecFactory(org.apache.parquet.hadoop.Configuration,int)
org/apache/parquet/hadoop/TestColumnChunkPageWriteStore/test()#org/apache/parquet/hadoop/metadata/ParquetMetadata/getBlocks()
org/apache/parquet/hadoop/TestColumnChunkPageWriteStore/test()#org/apache/parquet/column/page/PageReader/readPage()
org/apache/parquet/hadoop/TestColumnChunkPageWriteStore/test()#org/apache/parquet/column/page/DataPageV2/getRowCount()
org/apache/parquet/hadoop/TestColumnChunkPageWriteStore/test()#org/apache/parquet/hadoop/TestColumnChunkPageWriteStore/intValue(org.apache.parquet.bytes.BytesInput)
org/apache/parquet/hadoop/TestColumnChunkPageWriteStore/test()#org/apache/parquet/hadoop/ColumnChunkPageWriteStore/getPageWriter(org.apache.parquet.column.ColumnDescriptor)
org/apache/parquet/hadoop/TestColumnChunkPageWriteStore/test()#org/apache/parquet/hadoop/metadata/ParquetMetadata/getFileMetaData()
org/apache/parquet/hadoop/TestColumnChunkPageWriteStore/test()#org/apache/parquet/column/page/PageReadStore/getPageReader(org.apache.parquet.column.ColumnDescriptor)
org/apache/parquet/hadoop/TestColumnChunkPageWriteStore/test()#org/apache/parquet/column/page/DataPageV2/getDataEncoding()
org/apache/parquet/hadoop/TestColumnChunkPageWriteStore/test()#org/apache/parquet/schema/MessageTypeParser/parseMessageType(java.lang.String)
org/apache/parquet/hadoop/TestColumnChunkPageWriteStore/test()#org/apache/parquet/column/page/DataPageV2/getStatistics()
org/apache/parquet/hadoop/TestColumnChunkPageWriteStore/test()#org/apache/parquet/column/page/DataPageV2/getData()
org/apache/parquet/hadoop/TestColumnChunkPageWriteStore/test()#org/apache/parquet/hadoop/ParquetFileReader/readFooter(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path,org.apache.parquet.format.converter.ParquetMetadataConverter.MetadataFilter)
org/apache/parquet/hadoop/TestColumnChunkPageWriteStore/test()#org/apache/parquet/hadoop/ParquetFileReader/readNextRowGroup()
org/apache/parquet/hadoop/TestColumnChunkPageWriteStore/test()#org/apache/parquet/hadoop/ParquetFileReader/close()
org/apache/parquet/hadoop/TestColumnChunkPageWriteStore/test()#org/apache/parquet/column/page/PageWriter/writePageV2(int,int,int,org.apache.parquet.bytes.BytesInput,org.apache.parquet.bytes.BytesInput,org.apache.parquet.column.Encoding,org.apache.parquet.bytes.BytesInput,org.apache.parquet.column.statistics.Statistics)
org/apache/parquet/hadoop/TestColumnChunkPageWriteStore/test()#org/apache/parquet/bytes/HeapByteBufferAllocator/HeapByteBufferAllocator()
org/apache/parquet/hadoop/TestColumnChunkPageWriteStore/test()#org/apache/parquet/schema/MessageType/getColumns()
org/apache/parquet/hadoop/TestColumnChunkPageWriteStore/test()#org/apache/parquet/column/statistics/BinaryStatistics/BinaryStatistics()
org/apache/parquet/hadoop/TestColumnChunkPageWriteStore/test()#org/apache/parquet/hadoop/ParquetFileWriter/ParquetFileWriter(org.apache.parquet.hadoop.Configuration,org.apache.parquet.schema.MessageType,org.apache.parquet.hadoop.Path)
org/apache/parquet/hadoop/TestColumnChunkPageWriteStore/test()#org/apache/parquet/column/page/DataPageV2/getNullCount()
org/apache/parquet/hadoop/TestColumnChunkPageWriteStore/test()#org/apache/parquet/hadoop/ParquetFileWriter/startBlock(long)
org/apache/parquet/hadoop/TestColumnChunkPageWriteStore/test()#org/apache/parquet/column/statistics/Statistics/toString()
org/apache/parquet/hadoop/TestColumnChunkPageWriteStore/test()#java/util/HashMap/HashMap()
org/apache/parquet/hadoop/TestColumnChunkPageWriteStore/test()#org/apache/parquet/column/page/DataPageV2/getRepetitionLevels()
org/apache/parquet/hadoop/TestColumnChunkPageWriteStore/test()#org/apache/parquet/hadoop/ParquetFileWriter/endBlock()
org/apache/parquet/hadoop/TestColumnChunkPageWriteStore/test()#org/apache/parquet/bytes/BytesInput/fromInt(int)
org/apache/parquet/hadoop/TestColumnChunkPageWriteStore/test()#org/apache/parquet/hadoop/ColumnChunkPageWriteStore/flushToFileWriter(org.apache.parquet.hadoop.ParquetFileWriter)
org/apache/parquet/hadoop/TestColumnChunkPageWriteStore/test()#org/apache/parquet/column/page/DataPageV2/getDefinitionLevels()
org/apache/parquet/hadoop/TestColumnChunkPageWriteStore/test()#org/apache/parquet/column/page/DataPage/getValueCount()
org/apache/parquet/hadoop/TestColumnChunkPageWriteStore/test()#org/apache/parquet/hadoop/ColumnChunkPageWriteStore/ColumnChunkPageWriteStore(org.apache.parquet.hadoop.CodecFactory.BytesCompressor,org.apache.parquet.schema.MessageType,org.apache.parquet.bytes.ByteBufferAllocator)
org/apache/parquet/hadoop/TestColumnChunkPageWriteStore/test()#org/apache/parquet/hadoop/TestColumnChunkPageWriteStore/compressor(org.apache.parquet.hadoop.metadata.CompressionCodecName)
org/apache/parquet/hadoop/TestColumnChunkPageWriteStore/test()#org/apache/parquet/hadoop/ParquetFileWriter/end(java.util.Map)
org/apache/parquet/hadoop/TestColumnChunkPageWriteStore/test()#java/util/List/get(int)
org/apache/parquet/hadoop/TestColumnChunkPageWriteStore/test()#org/apache/parquet/hadoop/ParquetFileWriter/start()
org/apache/parquet/hadoop/TestColumnChunkPageWriteStore/test()#org/apache/parquet/hadoop/ParquetFileReader/ParquetFileReader(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.metadata.FileMetaData,org.apache.parquet.hadoop.Path,java.util.List,java.util.List)
org/apache/parquet/thrift/struct/ThriftType/ListType/accept(org.apache.parquet.thrift.struct.ThriftType.TypeVisitor)#org/apache/parquet/thrift/struct/ThriftType/TypeVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.ListType)
org/apache/parquet/thrift/struct/ThriftType/ListType/hashCode()#org/apache/parquet/thrift/struct/ThriftField/hashCode()
org/apache/parquet/thrift/struct/ThriftType/ListType/hashCode()#org/apache/parquet/thrift/struct/ThriftType/hashCode()
org/apache/parquet/thrift/struct/ThriftType/ListType/accept(org.apache.parquet.thrift.struct.ThriftType.StateVisitor,S)#org/apache/parquet/thrift/struct/ThriftType/StateVisitor/visit(org.apache.parquet.thrift.struct.ThriftType.ListType,S)
org/apache/parquet/thrift/struct/ThriftType/ListType/equals(java.lang.Object)#org/apache/parquet/thrift/struct/ThriftField/equals(java.lang.Object)
org/apache/parquet/thrift/struct/ThriftType/ListType/equals(java.lang.Object)#org/apache/parquet/thrift/struct/ThriftType/equals(java.lang.Object)
org/apache/parquet/column/TestColumnDescriptor/testComparesTo()#org/apache/parquet/column/ColumnDescriptor/compareTo(org.apache.parquet.column.ColumnDescriptor)
org/apache/parquet/column/TestColumnDescriptor/testComparesTo()#org/apache/parquet/column/TestColumnDescriptor/column(java.lang.String[])
org/apache/parquet/column/TestColumnDescriptor/column(java.lang.String[])#org/apache/parquet/column/ColumnDescriptor/ColumnDescriptor(java.lang.String[],org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,int,int)
org/apache/parquet/avro/TestReflectInputOutputFormat/LeatherTrim/hashCode()#java/lang/String/hashCode()
org/apache/parquet/avro/TestReflectInputOutputFormat/LeatherTrim/equals(java.lang.Object)#java/lang/String/equals(java.lang.Object)
org/apache/parquet/avro/TestReflectInputOutputFormat/LeatherTrim/equals(java.lang.Object)#java/lang/Object/getClass()
org/apache/parquet/thrift/struct/JSON/fromJSON(java.lang.String,java.lang.Class)#java/lang/RuntimeException/RuntimeException(java.lang.Throwable)
org/apache/parquet/thrift/struct/JSON/toJSON(java.lang.Object)#java/lang/RuntimeException/RuntimeException(java.lang.Throwable)
org/apache/parquet/thrift/struct/JSON/toJSON(java.lang.Object)#java/io/StringWriter/StringWriter()
org/apache/parquet/thrift/struct/JSON/toJSON(java.lang.Object)#java/io/StringWriter/toString()
org/apache/parquet/proto/ProtoMessageConverter/ProtoEnumConverter/translateEnumValue(org.apache.parquet.io.api.Binary)#org/apache/parquet/io/InvalidRecordException/InvalidRecordException(java.lang.String)
org/apache/parquet/proto/ProtoMessageConverter/ProtoEnumConverter/makeLookupStructure(Descriptors.FieldDescriptor)#java/util/HashMap/HashMap()
org/apache/parquet/proto/ProtoMessageConverter/ProtoEnumConverter/makeLookupStructure(Descriptors.FieldDescriptor)#org/apache/parquet/io/api/Binary/fromString(java.lang.String)
org/apache/parquet/proto/ProtoMessageConverter/ProtoEnumConverter/addValueFromDictionary(int)#org/apache/parquet/proto/ProtoMessageConverter/ParentValueContainer/add(java.lang.Object)
org/apache/parquet/proto/ProtoMessageConverter/ProtoEnumConverter/addBinary(org.apache.parquet.io.api.Binary)#org/apache/parquet/proto/ProtoMessageConverter/ProtoEnumConverter/translateEnumValue(org.apache.parquet.io.api.Binary)
org/apache/parquet/proto/ProtoMessageConverter/ProtoEnumConverter/addBinary(org.apache.parquet.io.api.Binary)#org/apache/parquet/proto/ProtoMessageConverter/ParentValueContainer/add(java.lang.Object)
org/apache/parquet/proto/ProtoMessageConverter/ProtoEnumConverter/setDictionary(org.apache.parquet.column.Dictionary)#org/apache/parquet/column/Dictionary/decodeToBinary(int)
org/apache/parquet/proto/ProtoMessageConverter/ProtoEnumConverter/setDictionary(org.apache.parquet.column.Dictionary)#org/apache/parquet/proto/ProtoMessageConverter/ProtoEnumConverter/translateEnumValue(org.apache.parquet.io.api.Binary)
org/apache/parquet/proto/ProtoMessageConverter/ProtoEnumConverter/setDictionary(org.apache.parquet.column.Dictionary)#org/apache/parquet/column/Dictionary/getMaxId()
org/apache/parquet/hadoop/PrintFooter/ColStats/add(long,long,long,java.util.Collection,org.apache.parquet.column.statistics.Statistics)#java/util/Set/addAll(java.util.Collection)
org/apache/parquet/hadoop/PrintFooter/ColStats/add(long,long,long,java.util.Collection,org.apache.parquet.column.statistics.Statistics)#org/apache/parquet/hadoop/PrintFooter/Stats/add(long)
org/apache/parquet/hadoop/PrintFooter/ColStats/toString()#org/apache/parquet/hadoop/PrintFooter/Stats/toString(int)
org/apache/parquet/hadoop/PrintFooter/ColStats/toString()#org/apache/parquet/column/statistics/Statistics/toString()
org/apache/parquet/hadoop/PrintFooter/ColStats/toString()#org/apache/parquet/hadoop/PrintFooter/humanReadable(long)
org/apache/parquet/hadoop/DeprecatedInputFormatTest/ReadMapper/map(org.apache.parquet.hadoop.LongWritable,org.apache.hadoop.hive.serde2.objectinspector.primitive.Text,org.apache.parquet.hadoop.Context)#org/apache/parquet/example/data/Group/append(java.lang.String,int)
org/apache/parquet/hadoop/DeprecatedInputFormatTest/ReadMapper/map(org.apache.parquet.hadoop.LongWritable,org.apache.hadoop.hive.serde2.objectinspector.primitive.Text,org.apache.parquet.hadoop.Context)#org/apache/parquet/example/data/Group/append(java.lang.String,org.apache.parquet.example.data.simple.NanoTime)
org/apache/parquet/hadoop/DeprecatedInputFormatTest/ReadMapper/map(org.apache.parquet.hadoop.LongWritable,org.apache.hadoop.hive.serde2.objectinspector.primitive.Text,org.apache.parquet.hadoop.Context)#org/apache/parquet/example/data/simple/SimpleGroupFactory/newGroup()
org/apache/parquet/hadoop/DeprecatedInputFormatTest/ReadMapper/setup(org.apache.parquet.hadoop.Context)#org/apache/parquet/example/data/simple/SimpleGroupFactory/SimpleGroupFactory(org.apache.parquet.schema.MessageType)
org/apache/parquet/hadoop/DeprecatedInputFormatTest/ReadMapper/setup(org.apache.parquet.hadoop.Context)#org/apache/parquet/hadoop/util/ContextUtil/getConfiguration(org.apache.parquet.hadoop.util.JobContext)
org/apache/parquet/hadoop/DeprecatedInputFormatTest/ReadMapper/setup(org.apache.parquet.hadoop.Context)#org/apache/parquet/hadoop/example/GroupWriteSupport/getSchema(org.apache.parquet.hadoop.Configuration)
org/apache/parquet/proto/ProtoWriteSupport/FloatWriter/writeRawValue(java.lang.Object)#org/apache/parquet/io/api/RecordConsumer/addFloat(float)
org/apache/parquet/proto/ProtoWriteSupport/validatedMapping(Descriptors.Descriptor,org.apache.parquet.schema.GroupType)#org/apache/parquet/schema/IncompatibleSchemaModificationException/IncompatibleSchemaModificationException(java.lang.String)
org/apache/parquet/proto/ProtoWriteSupport/validatedMapping(Descriptors.Descriptor,org.apache.parquet.schema.GroupType)#org/apache/parquet/schema/GroupType/getFieldIndex(java.lang.String)
org/apache/parquet/proto/ProtoWriteSupport/init(org.apache.parquet.hadoop.Configuration)#org/apache/parquet/hadoop/api/WriteSupport/WriteContext/WriteContext(org.apache.parquet.schema.MessageType,java.util.Map)
org/apache/parquet/proto/ProtoWriteSupport/init(org.apache.parquet.hadoop.Configuration)#org/apache/parquet/proto/ProtoWriteSupport/validatedMapping(Descriptors.Descriptor,org.apache.parquet.schema.GroupType)
org/apache/parquet/proto/ProtoWriteSupport/init(org.apache.parquet.hadoop.Configuration)#org/apache/parquet/proto/ProtoWriteSupport/serializeDescriptor(java.lang.Class)
org/apache/parquet/proto/ProtoWriteSupport/init(org.apache.parquet.hadoop.Configuration)#org/apache/parquet/proto/ProtoWriteSupport/MessageWriter/MessageWriter(Descriptors.Descriptor,org.apache.parquet.schema.GroupType)
org/apache/parquet/proto/ProtoWriteSupport/init(org.apache.parquet.hadoop.Configuration)#java/util/HashMap/HashMap()
org/apache/parquet/proto/ProtoWriteSupport/init(org.apache.parquet.hadoop.Configuration)#org/apache/parquet/proto/ProtoSchemaConverter/convert(java.lang.Class)
org/apache/parquet/proto/ProtoWriteSupport/init(org.apache.parquet.hadoop.Configuration)#org/apache/parquet/proto/ProtoSchemaConverter/ProtoSchemaConverter()
org/apache/parquet/proto/ProtoWriteSupport/init(org.apache.parquet.hadoop.Configuration)#java/util/Map/put(K,V)
org/apache/parquet/proto/ProtoWriteSupport/init(org.apache.parquet.hadoop.Configuration)#java/lang/Class/getName()
org/apache/parquet/proto/ProtoWriteSupport/init(org.apache.parquet.hadoop.Configuration)#org/apache/parquet/hadoop/BadConfigurationException/BadConfigurationException(java.lang.String)
org/apache/parquet/proto/ProtoWriteSupport/write(T)#org/apache/parquet/io/api/RecordConsumer/endMessage()
org/apache/parquet/proto/ProtoWriteSupport/write(T)#org/apache/parquet/proto/ProtoWriteSupport/MessageWriter/writeTopLevelMessage(java.lang.Object)
org/apache/parquet/proto/ProtoWriteSupport/write(T)#java/lang/Throwable/getMessage()
org/apache/parquet/proto/ProtoWriteSupport/write(T)#org/apache/parquet/io/api/RecordConsumer/startMessage()
org/apache/parquet/proto/ProtoWriteSupport/unknownType(Descriptors.FieldDescriptor)#org/apache/parquet/io/InvalidRecordException/InvalidRecordException(java.lang.String)
org/apache/parquet/column/values/bitpacking/SevenBitPackingReader/read()#java/io/InputStream/read()
org/apache/parquet/column/values/bitpacking/SevenBitPackingReader/read()#org/apache/parquet/column/values/bitpacking/BaseBitPackingReader/alignToBytes(int)
org/apache/parquet/avro/AvroConverters/FieldFloatConverter/addFloat(float)#org/apache/parquet/avro/ParentValueContainer/addFloat(float)
org/apache/parquet/avro/AvroConverters/FieldFloatConverter/addLong(long)#org/apache/parquet/avro/ParentValueContainer/addFloat(float)
org/apache/parquet/avro/AvroConverters/FieldFloatConverter/addInt(int)#org/apache/parquet/avro/ParentValueContainer/addFloat(float)
org/apache/parquet/io/api/TestBinary/testByteArraySliceBackedBinary()#org/apache/parquet/io/api/TestBinary/testBinary(org.apache.parquet.io.api.TestBinary.BinaryFactory,boolean)
org/apache/parquet/io/api/TestBinary/testSerializable(org.apache.parquet.io.api.TestBinary.BinaryFactory,boolean)#java/io/ByteArrayInputStream/ByteArrayInputStream(byte[])
org/apache/parquet/io/api/TestBinary/testSerializable(org.apache.parquet.io.api.TestBinary.BinaryFactory,boolean)#java/io/ObjectInputStream/readObject()
org/apache/parquet/io/api/TestBinary/testSerializable(org.apache.parquet.io.api.TestBinary.BinaryFactory,boolean)#java/io/ObjectOutputStream/writeObject(java.lang.Object)
org/apache/parquet/io/api/TestBinary/testSerializable(org.apache.parquet.io.api.TestBinary.BinaryFactory,boolean)#org/apache/parquet/io/api/TestBinary/BinaryFactory/get(byte[],boolean)
org/apache/parquet/io/api/TestBinary/testSerializable(org.apache.parquet.io.api.TestBinary.BinaryFactory,boolean)#java/lang/String/getBytes(java.lang.String)
org/apache/parquet/io/api/TestBinary/testSerializable(org.apache.parquet.io.api.TestBinary.BinaryFactory,boolean)#java/io/ObjectInputStream/ObjectInputStream(java.io.InputStream)
org/apache/parquet/io/api/TestBinary/testSerializable(org.apache.parquet.io.api.TestBinary.BinaryFactory,boolean)#java/io/ByteArrayOutputStream/close()
org/apache/parquet/io/api/TestBinary/testSerializable(org.apache.parquet.io.api.TestBinary.BinaryFactory,boolean)#java/io/ByteArrayOutputStream/ByteArrayOutputStream()
org/apache/parquet/io/api/TestBinary/testSerializable(org.apache.parquet.io.api.TestBinary.BinaryFactory,boolean)#java/io/ObjectOutputStream/close()
org/apache/parquet/io/api/TestBinary/testSerializable(org.apache.parquet.io.api.TestBinary.BinaryFactory,boolean)#java/io/ObjectOutputStream/ObjectOutputStream(java.io.OutputStream)
org/apache/parquet/io/api/TestBinary/testSerializable(org.apache.parquet.io.api.TestBinary.BinaryFactory,boolean)#java/io/ByteArrayOutputStream/toByteArray()
org/apache/parquet/io/api/TestBinary/testByteBufferBackedBinary()#org/apache/parquet/io/api/TestBinary/testBinary(org.apache.parquet.io.api.TestBinary.BinaryFactory,boolean)
org/apache/parquet/io/api/TestBinary/testWriteAllTo()#java/nio/ByteBuffer/put(byte[])
org/apache/parquet/io/api/TestBinary/testWriteAllTo()#org/apache/parquet/io/api/Binary/fromConstantByteBuffer(java.nio.ByteBuffer)
org/apache/parquet/io/api/TestBinary/testWriteAllTo()#java/nio/Buffer/flip()
org/apache/parquet/io/api/TestBinary/testWriteAllTo()#org/apache/parquet/io/api/TestBinary/testWriteAllToHelper(org.apache.parquet.io.api.Binary,byte[])
org/apache/parquet/io/api/TestBinary/testWriteAllTo()#java/nio/ByteBuffer/allocateDirect(int)
org/apache/parquet/io/api/TestBinary/testWriteAllTo()#java/nio/ByteBuffer/wrap(byte[])
org/apache/parquet/io/api/TestBinary/testBinary(org.apache.parquet.io.api.TestBinary.BinaryFactory,boolean)#org/apache/parquet/io/api/TestBinary/testSerializable(org.apache.parquet.io.api.TestBinary.BinaryFactory,boolean)
org/apache/parquet/io/api/TestBinary/testBinary(org.apache.parquet.io.api.TestBinary.BinaryFactory,boolean)#org/apache/parquet/io/api/TestBinary/testReusedCopy(org.apache.parquet.io.api.TestBinary.BinaryFactory)
org/apache/parquet/io/api/TestBinary/testBinary(org.apache.parquet.io.api.TestBinary.BinaryFactory,boolean)#org/apache/parquet/io/api/TestBinary/testSlice(org.apache.parquet.io.api.TestBinary.BinaryFactory,boolean)
org/apache/parquet/io/api/TestBinary/testBinary(org.apache.parquet.io.api.TestBinary.BinaryFactory,boolean)#org/apache/parquet/io/api/TestBinary/testConstantCopy(org.apache.parquet.io.api.TestBinary.BinaryFactory)
org/apache/parquet/io/api/TestBinary/testReusedCopy(org.apache.parquet.io.api.TestBinary.BinaryFactory)#org/apache/parquet/io/api/TestBinary/BinaryFactory/get(byte[],boolean)
org/apache/parquet/io/api/TestBinary/testReusedCopy(org.apache.parquet.io.api.TestBinary.BinaryFactory)#java/lang/String/getBytes(java.lang.String)
org/apache/parquet/io/api/TestBinary/testReusedCopy(org.apache.parquet.io.api.TestBinary.BinaryFactory)#org/apache/parquet/io/api/Binary/getBytesUnsafe()
org/apache/parquet/io/api/TestBinary/testReusedCopy(org.apache.parquet.io.api.TestBinary.BinaryFactory)#org/apache/parquet/io/api/Binary/isBackingBytesReused()
org/apache/parquet/io/api/TestBinary/testReusedCopy(org.apache.parquet.io.api.TestBinary.BinaryFactory)#org/apache/parquet/io/api/TestBinary/mutate(byte[])
org/apache/parquet/io/api/TestBinary/testReusedCopy(org.apache.parquet.io.api.TestBinary.BinaryFactory)#org/apache/parquet/io/api/Binary/getBytes()
org/apache/parquet/io/api/TestBinary/testReusedCopy(org.apache.parquet.io.api.TestBinary.BinaryFactory)#org/apache/parquet/io/api/Binary/copy()
org/apache/parquet/io/api/TestBinary/testEqualityMethods()#org/apache/parquet/io/api/Binary/fromConstantByteBuffer(java.nio.ByteBuffer)
org/apache/parquet/io/api/TestBinary/testEqualityMethods()#org/apache/parquet/io/api/Binary/fromConstantByteArray(byte[],int,int)
org/apache/parquet/io/api/TestBinary/testEqualityMethods()#java/nio/ByteBuffer/wrap(byte[],int,int)
org/apache/parquet/io/api/TestBinary/testEqualityMethods()#java/lang/String/getBytes()
org/apache/parquet/io/api/TestBinary/testByteArrayBackedBinary()#org/apache/parquet/io/api/TestBinary/testBinary(org.apache.parquet.io.api.TestBinary.BinaryFactory,boolean)
org/apache/parquet/io/api/TestBinary/padded(byte[])#java/lang/System/arraycopy(java.lang.Object,int,java.lang.Object,int,int)
org/apache/parquet/io/api/TestBinary/testSlice(org.apache.parquet.io.api.TestBinary.BinaryFactory,boolean)#org/apache/parquet/io/api/Binary/slice(int,int)
org/apache/parquet/io/api/TestBinary/testSlice(org.apache.parquet.io.api.TestBinary.BinaryFactory,boolean)#java/lang/String/length()
org/apache/parquet/io/api/TestBinary/testSlice(org.apache.parquet.io.api.TestBinary.BinaryFactory,boolean)#org/apache/parquet/io/api/TestBinary/BinaryFactory/get(byte[],boolean)
org/apache/parquet/io/api/TestBinary/testSlice(org.apache.parquet.io.api.TestBinary.BinaryFactory,boolean)#java/lang/String/getBytes(java.lang.String)
org/apache/parquet/io/api/TestBinary/testSlice(org.apache.parquet.io.api.TestBinary.BinaryFactory,boolean)#org/apache/parquet/io/api/Binary/getBytesUnsafe()
org/apache/parquet/io/api/TestBinary/testWriteAllToHelper(org.apache.parquet.io.api.Binary,byte[])#java/io/ByteArrayOutputStream/ByteArrayOutputStream(int)
org/apache/parquet/io/api/TestBinary/testWriteAllToHelper(org.apache.parquet.io.api.Binary,byte[])#org/apache/parquet/io/api/Binary/writeTo(java.io.OutputStream)
org/apache/parquet/io/api/TestBinary/testWriteAllToHelper(org.apache.parquet.io.api.Binary,byte[])#java/io/ByteArrayOutputStream/toByteArray()
org/apache/parquet/io/api/TestBinary/testFromStringBinary()#org/apache/parquet/io/api/TestBinary/testBinary(org.apache.parquet.io.api.TestBinary.BinaryFactory,boolean)
org/apache/parquet/io/api/TestBinary/testConstantCopy(org.apache.parquet.io.api.TestBinary.BinaryFactory)#org/apache/parquet/io/api/Binary/isBackingBytesReused()
org/apache/parquet/io/api/TestBinary/testConstantCopy(org.apache.parquet.io.api.TestBinary.BinaryFactory)#org/apache/parquet/io/api/TestBinary/BinaryFactory/get(byte[],boolean)
org/apache/parquet/io/api/TestBinary/testConstantCopy(org.apache.parquet.io.api.TestBinary.BinaryFactory)#java/lang/String/getBytes(java.lang.String)
org/apache/parquet/io/api/TestBinary/testConstantCopy(org.apache.parquet.io.api.TestBinary.BinaryFactory)#org/apache/parquet/io/api/Binary/getBytesUnsafe()
org/apache/parquet/io/api/TestBinary/testConstantCopy(org.apache.parquet.io.api.TestBinary.BinaryFactory)#org/apache/parquet/io/api/Binary/getBytes()
org/apache/parquet/io/api/TestBinary/testConstantCopy(org.apache.parquet.io.api.TestBinary.BinaryFactory)#org/apache/parquet/io/api/Binary/copy()
org/apache/parquet/proto/ProtoWriteSupport/LongWriter/writeRawValue(java.lang.Object)#org/apache/parquet/io/api/RecordConsumer/addLong(long)
org/apache/parquet/hadoop/ParquetReader/read()#org/apache/parquet/hadoop/ParquetReader/read()
org/apache/parquet/hadoop/ParquetReader/read()#org/apache/parquet/hadoop/InternalParquetRecordReader/getCurrentValue()
org/apache/parquet/hadoop/ParquetReader/read()#org/apache/parquet/hadoop/InternalParquetRecordReader/nextKeyValue()
org/apache/parquet/hadoop/ParquetReader/read()#java/io/IOException/IOException(java.lang.Throwable)
org/apache/parquet/hadoop/ParquetReader/read()#org/apache/parquet/hadoop/ParquetReader/initReader()
org/apache/parquet/hadoop/ParquetReader/close()#org/apache/parquet/hadoop/InternalParquetRecordReader/close()
org/apache/parquet/hadoop/ParquetReader/builder(org.apache.parquet.hadoop.api.ReadSupport,org.apache.parquet.hadoop.Path)#org/apache/parquet/hadoop/ParquetReader/Builder/Builder(org.apache.parquet.hadoop.api.ReadSupport,org.apache.parquet.hadoop.Path)
org/apache/parquet/hadoop/ParquetReader/initReader()#org/apache/parquet/hadoop/Footer/getParquetMetadata()
org/apache/parquet/hadoop/ParquetReader/initReader()#org/apache/parquet/hadoop/ParquetFileReader/filterRowGroups(org.apache.parquet.filter2.compat.FilterCompat.Filter)
org/apache/parquet/hadoop/ParquetReader/initReader()#java/util/Iterator/hasNext()
org/apache/parquet/hadoop/ParquetReader/initReader()#java/util/Iterator/next()
org/apache/parquet/hadoop/ParquetReader/initReader()#org/apache/parquet/hadoop/InternalParquetRecordReader/initialize(org.apache.parquet.hadoop.ParquetFileReader,org.apache.parquet.hadoop.Configuration)
org/apache/parquet/hadoop/ParquetReader/initReader()#org/apache/parquet/hadoop/InternalParquetRecordReader/close()
org/apache/parquet/hadoop/ParquetReader/initReader()#org/apache/parquet/hadoop/InternalParquetRecordReader/InternalParquetRecordReader(org.apache.parquet.hadoop.api.ReadSupport,org.apache.parquet.filter2.compat.FilterCompat.Filter)
org/apache/parquet/hadoop/ParquetReader/initReader()#org/apache/parquet/hadoop/Footer/getFile()
org/apache/parquet/hadoop/ParquetReader/initReader()#org/apache/parquet/hadoop/ParquetFileReader/open(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path,org.apache.parquet.hadoop.metadata.ParquetMetadata)
org/apache/parquet/hadoop/TestInputOutputFormatWithPadding/Reader/map(java.lang.Void,org.apache.parquet.example.data.Group,org.apache.parquet.hadoop.Context)#org/apache/parquet/example/data/GroupValueSource/getString(java.lang.String,int)
org/apache/parquet/tools/command/CatCommand/execute(org.apache.parquet.tools.command.CommandLine)#org/apache/parquet/hadoop/ParquetReader/read()
org/apache/parquet/tools/command/CatCommand/execute(org.apache.parquet.tools.command.CommandLine)#org/apache/parquet/hadoop/ParquetReader/close()
org/apache/parquet/tools/command/CatCommand/execute(org.apache.parquet.tools.command.CommandLine)#org/apache/parquet/tools/read/SimpleRecord/prettyPrint(java.io.PrintWriter)
org/apache/parquet/tools/command/CatCommand/execute(org.apache.parquet.tools.command.CommandLine)#java/io/PrintWriter/write(java.lang.String)
org/apache/parquet/tools/command/CatCommand/execute(org.apache.parquet.tools.command.CommandLine)#org/apache/parquet/tools/read/SimpleReadSupport/SimpleReadSupport()
org/apache/parquet/tools/command/CatCommand/execute(org.apache.parquet.tools.command.CommandLine)#org/apache/parquet/hadoop/ParquetFileReader/readFooter(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path)
org/apache/parquet/tools/command/CatCommand/execute(org.apache.parquet.tools.command.CommandLine)#org/apache/parquet/hadoop/metadata/FileMetaData/getSchema()
org/apache/parquet/tools/command/CatCommand/execute(org.apache.parquet.tools.command.CommandLine)#org/apache/parquet/tools/json/JsonRecordFormatter/fromSchema(org.apache.parquet.schema.MessageType)
org/apache/parquet/tools/command/CatCommand/execute(org.apache.parquet.tools.command.CommandLine)#java/io/PrintWriter/PrintWriter(java.io.OutputStream,boolean)
org/apache/parquet/tools/command/CatCommand/execute(org.apache.parquet.tools.command.CommandLine)#org/apache/parquet/tools/command/ArgsOnlyCommand/execute(org.apache.parquet.tools.command.CommandLine)
org/apache/parquet/tools/command/CatCommand/execute(org.apache.parquet.tools.command.CommandLine)#java/io/PrintWriter/println()
org/apache/parquet/tools/command/CatCommand/execute(org.apache.parquet.tools.command.CommandLine)#org/apache/parquet/hadoop/metadata/ParquetMetadata/getFileMetaData()
org/apache/parquet/tools/command/CatCommand/execute(org.apache.parquet.tools.command.CommandLine)#org/apache/parquet/hadoop/ParquetReader/builder(org.apache.parquet.hadoop.api.ReadSupport,org.apache.parquet.hadoop.Path)
org/apache/parquet/tools/command/CatCommand/execute(org.apache.parquet.tools.command.CommandLine)#org/apache/parquet/tools/json/JsonRecordFormatter/JsonGroupFormatter/formatRecord(org.apache.parquet.tools.read.SimpleRecord)
org/apache/parquet/schema/Types/BaseGroupBuilder/optionalMap()#org/apache/parquet/schema/Types/MapBuilder/MapBuilder(P)
org/apache/parquet/schema/Types/BaseGroupBuilder/optionalMap()#org/apache/parquet/schema/Types/Builder/repetition(org.apache.parquet.schema.Type.Repetition)
org/apache/parquet/schema/Types/BaseGroupBuilder/optionalMap()#org/apache/parquet/schema/Types/BaseGroupBuilder/self()
org/apache/parquet/schema/Types/BaseGroupBuilder/optionalList()#org/apache/parquet/schema/Types/BaseGroupBuilder/list(org.apache.parquet.schema.Type.Repetition)
org/apache/parquet/schema/Types/BaseGroupBuilder/requiredGroup()#org/apache/parquet/schema/Types/GroupBuilder/GroupBuilder(P)
org/apache/parquet/schema/Types/BaseGroupBuilder/requiredGroup()#org/apache/parquet/schema/Types/Builder/repetition(org.apache.parquet.schema.Type.Repetition)
org/apache/parquet/schema/Types/BaseGroupBuilder/requiredGroup()#org/apache/parquet/schema/Types/BaseGroupBuilder/self()
org/apache/parquet/schema/Types/BaseGroupBuilder/addFields(org.apache.parquet.schema.Type[])#java/util/Collections/addAll(java.util.Collection,T[])
org/apache/parquet/schema/Types/BaseGroupBuilder/addFields(org.apache.parquet.schema.Type[])#org/apache/parquet/schema/Types/BaseGroupBuilder/self()
org/apache/parquet/schema/Types/BaseGroupBuilder/addField(org.apache.parquet.schema.Type)#java/util/List/add(E)
org/apache/parquet/schema/Types/BaseGroupBuilder/addField(org.apache.parquet.schema.Type)#org/apache/parquet/schema/Types/BaseGroupBuilder/self()
org/apache/parquet/schema/Types/BaseGroupBuilder/repeatedGroup()#org/apache/parquet/schema/Types/GroupBuilder/GroupBuilder(P)
org/apache/parquet/schema/Types/BaseGroupBuilder/repeatedGroup()#org/apache/parquet/schema/Types/Builder/repetition(org.apache.parquet.schema.Type.Repetition)
org/apache/parquet/schema/Types/BaseGroupBuilder/repeatedGroup()#org/apache/parquet/schema/Types/BaseGroupBuilder/self()
org/apache/parquet/schema/Types/BaseGroupBuilder/list(org.apache.parquet.schema.Type.Repetition)#org/apache/parquet/schema/Types/ListBuilder/ListBuilder(P)
org/apache/parquet/schema/Types/BaseGroupBuilder/list(org.apache.parquet.schema.Type.Repetition)#org/apache/parquet/schema/Types/Builder/repetition(org.apache.parquet.schema.Type.Repetition)
org/apache/parquet/schema/Types/BaseGroupBuilder/list(org.apache.parquet.schema.Type.Repetition)#org/apache/parquet/schema/Types/BaseGroupBuilder/self()
org/apache/parquet/schema/Types/BaseGroupBuilder/primitive(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.schema.Type.Repetition)#org/apache/parquet/schema/Types/Builder/repetition(org.apache.parquet.schema.Type.Repetition)
org/apache/parquet/schema/Types/BaseGroupBuilder/primitive(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.schema.Type.Repetition)#org/apache/parquet/schema/Types/PrimitiveBuilder/PrimitiveBuilder(P,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/schema/Types/BaseGroupBuilder/primitive(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.schema.Type.Repetition)#org/apache/parquet/schema/Types/BaseGroupBuilder/self()
org/apache/parquet/schema/Types/BaseGroupBuilder/optional(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)#org/apache/parquet/schema/Types/Builder/repetition(org.apache.parquet.schema.Type.Repetition)
org/apache/parquet/schema/Types/BaseGroupBuilder/optional(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)#org/apache/parquet/schema/Types/PrimitiveBuilder/PrimitiveBuilder(P,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/schema/Types/BaseGroupBuilder/optional(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)#org/apache/parquet/schema/Types/BaseGroupBuilder/self()
org/apache/parquet/schema/Types/BaseGroupBuilder/required(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)#org/apache/parquet/schema/Types/Builder/repetition(org.apache.parquet.schema.Type.Repetition)
org/apache/parquet/schema/Types/BaseGroupBuilder/required(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)#org/apache/parquet/schema/Types/PrimitiveBuilder/PrimitiveBuilder(P,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/schema/Types/BaseGroupBuilder/required(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)#org/apache/parquet/schema/Types/BaseGroupBuilder/self()
org/apache/parquet/schema/Types/BaseGroupBuilder/repeated(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)#org/apache/parquet/schema/Types/Builder/repetition(org.apache.parquet.schema.Type.Repetition)
org/apache/parquet/schema/Types/BaseGroupBuilder/repeated(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)#org/apache/parquet/schema/Types/PrimitiveBuilder/PrimitiveBuilder(P,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/schema/Types/BaseGroupBuilder/repeated(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)#org/apache/parquet/schema/Types/BaseGroupBuilder/self()
org/apache/parquet/schema/Types/BaseGroupBuilder/requiredMap()#org/apache/parquet/schema/Types/MapBuilder/MapBuilder(P)
org/apache/parquet/schema/Types/BaseGroupBuilder/requiredMap()#org/apache/parquet/schema/Types/Builder/repetition(org.apache.parquet.schema.Type.Repetition)
org/apache/parquet/schema/Types/BaseGroupBuilder/requiredMap()#org/apache/parquet/schema/Types/BaseGroupBuilder/self()
org/apache/parquet/schema/Types/BaseGroupBuilder/requiredList()#org/apache/parquet/schema/Types/BaseGroupBuilder/list(org.apache.parquet.schema.Type.Repetition)
org/apache/parquet/schema/Types/BaseGroupBuilder/optionalGroup()#org/apache/parquet/schema/Types/GroupBuilder/GroupBuilder(P)
org/apache/parquet/schema/Types/BaseGroupBuilder/optionalGroup()#org/apache/parquet/schema/Types/Builder/repetition(org.apache.parquet.schema.Type.Repetition)
org/apache/parquet/schema/Types/BaseGroupBuilder/optionalGroup()#org/apache/parquet/schema/Types/BaseGroupBuilder/self()
org/apache/parquet/schema/Types/BaseGroupBuilder/group(org.apache.parquet.schema.Type.Repetition)#org/apache/parquet/schema/Types/GroupBuilder/GroupBuilder(P)
org/apache/parquet/schema/Types/BaseGroupBuilder/group(org.apache.parquet.schema.Type.Repetition)#org/apache/parquet/schema/Types/Builder/repetition(org.apache.parquet.schema.Type.Repetition)
org/apache/parquet/schema/Types/BaseGroupBuilder/group(org.apache.parquet.schema.Type.Repetition)#org/apache/parquet/schema/Types/BaseGroupBuilder/self()
org/apache/parquet/schema/Types/BaseGroupBuilder/build(java.lang.String)#org/apache/parquet/schema/GroupType/GroupType(org.apache.parquet.schema.Type.Repetition,java.lang.String,org.apache.parquet.schema.OriginalType,java.util.List,org.apache.parquet.schema.Type.ID)
org/apache/parquet/schema/Types/BaseGroupBuilder/map(org.apache.parquet.schema.Type.Repetition)#org/apache/parquet/schema/Types/MapBuilder/MapBuilder(P)
org/apache/parquet/schema/Types/BaseGroupBuilder/map(org.apache.parquet.schema.Type.Repetition)#org/apache/parquet/schema/Types/Builder/repetition(org.apache.parquet.schema.Type.Repetition)
org/apache/parquet/schema/Types/BaseGroupBuilder/map(org.apache.parquet.schema.Type.Repetition)#org/apache/parquet/schema/Types/BaseGroupBuilder/self()
org/apache/parquet/io/ExpectationValidatingRecordConsumer/endField(java.lang.String,int)#org/apache/parquet/io/ExpectationValidatingRecordConsumer/validate(java.lang.String)
org/apache/parquet/io/ExpectationValidatingRecordConsumer/addFloat(float)#org/apache/parquet/io/ExpectationValidatingRecordConsumer/validate(java.lang.String)
org/apache/parquet/io/ExpectationValidatingRecordConsumer/startMessage()#org/apache/parquet/io/ExpectationValidatingRecordConsumer/validate(java.lang.String)
org/apache/parquet/io/ExpectationValidatingRecordConsumer/endMessage()#org/apache/parquet/io/ExpectationValidatingRecordConsumer/validate(java.lang.String)
org/apache/parquet/io/ExpectationValidatingRecordConsumer/startField(java.lang.String,int)#org/apache/parquet/io/ExpectationValidatingRecordConsumer/validate(java.lang.String)
org/apache/parquet/io/ExpectationValidatingRecordConsumer/validate(java.lang.String)#java/util/Deque/pop()
org/apache/parquet/io/ExpectationValidatingRecordConsumer/addBinary(org.apache.parquet.io.api.Binary)#org/apache/parquet/io/api/Binary/toStringUsingUTF8()
org/apache/parquet/io/ExpectationValidatingRecordConsumer/addBinary(org.apache.parquet.io.api.Binary)#org/apache/parquet/io/ExpectationValidatingRecordConsumer/validate(java.lang.String)
org/apache/parquet/io/ExpectationValidatingRecordConsumer/startGroup()#org/apache/parquet/io/ExpectationValidatingRecordConsumer/validate(java.lang.String)
org/apache/parquet/io/ExpectationValidatingRecordConsumer/addBoolean(boolean)#org/apache/parquet/io/ExpectationValidatingRecordConsumer/validate(java.lang.String)
org/apache/parquet/io/ExpectationValidatingRecordConsumer/addLong(long)#org/apache/parquet/io/ExpectationValidatingRecordConsumer/validate(java.lang.String)
org/apache/parquet/io/ExpectationValidatingRecordConsumer/addDouble(double)#org/apache/parquet/io/ExpectationValidatingRecordConsumer/validate(java.lang.String)
org/apache/parquet/io/ExpectationValidatingRecordConsumer/endGroup()#org/apache/parquet/io/ExpectationValidatingRecordConsumer/validate(java.lang.String)
org/apache/parquet/io/ExpectationValidatingRecordConsumer/addInteger(int)#org/apache/parquet/io/ExpectationValidatingRecordConsumer/validate(java.lang.String)
org/apache/parquet/io/ExpectationValidatingRecordConsumer/flush()#org/apache/parquet/io/ExpectationValidatingRecordConsumer/validate(java.lang.String)
org/apache/parquet/cascading/ParquetValueScheme/Config/withFilterPredicate(org.apache.parquet.filter2.predicate.FilterPredicate)#org/apache/parquet/cascading/ParquetValueScheme/Config/Config(java.lang.Class,org.apache.parquet.filter2.predicate.FilterPredicate,java.lang.String,java.lang.String)
org/apache/parquet/cascading/ParquetValueScheme/Config/withFilterPredicate(org.apache.parquet.filter2.predicate.FilterPredicate)#org/apache/parquet/Preconditions/checkNotNull(T,java.lang.String)
org/apache/parquet/cascading/ParquetValueScheme/Config/withProjectionString(java.lang.String)#org/apache/parquet/cascading/ParquetValueScheme/Config/Config(java.lang.Class,org.apache.parquet.filter2.predicate.FilterPredicate,java.lang.String,java.lang.String)
org/apache/parquet/cascading/ParquetValueScheme/Config/withProjectionString(java.lang.String)#org/apache/parquet/Preconditions/checkNotNull(T,java.lang.String)
org/apache/parquet/cascading/ParquetValueScheme/Config/withRecordClass(java.lang.Class)#org/apache/parquet/cascading/ParquetValueScheme/Config/Config(java.lang.Class,org.apache.parquet.filter2.predicate.FilterPredicate,java.lang.String,java.lang.String)
org/apache/parquet/cascading/ParquetValueScheme/Config/withRecordClass(java.lang.Class)#org/apache/parquet/Preconditions/checkNotNull(T,java.lang.String)
org/apache/parquet/cascading/ParquetValueScheme/Config/withStrictProjectionString(java.lang.String)#org/apache/parquet/cascading/ParquetValueScheme/Config/Config(java.lang.Class,org.apache.parquet.filter2.predicate.FilterPredicate,java.lang.String,java.lang.String)
org/apache/parquet/cascading/ParquetValueScheme/Config/withStrictProjectionString(java.lang.String)#org/apache/parquet/Preconditions/checkNotNull(T,java.lang.String)
org/apache/parquet/tools/command/ShowMetaCommand/execute(org.apache.parquet.tools.command.CommandLine)#org/apache/parquet/tools/util/PrettyPrintWriter/Builder/withAutoColumn()
org/apache/parquet/tools/command/ShowMetaCommand/execute(org.apache.parquet.tools.command.CommandLine)#org/apache/parquet/tools/util/PrettyPrintWriter/Builder/withColumnPadding(int)
org/apache/parquet/tools/command/ShowMetaCommand/execute(org.apache.parquet.tools.command.CommandLine)#org/apache/parquet/tools/util/PrettyPrintWriter/stdoutPrettyPrinter()
org/apache/parquet/tools/command/ShowMetaCommand/execute(org.apache.parquet.tools.command.CommandLine)#org/apache/parquet/tools/util/PrettyPrintWriter/Builder/build()
org/apache/parquet/tools/command/ShowMetaCommand/execute(org.apache.parquet.tools.command.CommandLine)#org/apache/parquet/tools/util/PrettyPrintWriter/format(java.lang.String,java.lang.Object[])
org/apache/parquet/tools/command/ShowMetaCommand/execute(org.apache.parquet.tools.command.CommandLine)#org/apache/parquet/hadoop/Footer/getFile()
org/apache/parquet/tools/command/ShowMetaCommand/execute(org.apache.parquet.tools.command.CommandLine)#org/apache/parquet/hadoop/ParquetFileReader/readFooters(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.FileStatus,boolean)
org/apache/parquet/tools/command/ShowMetaCommand/execute(org.apache.parquet.tools.command.CommandLine)#org/apache/parquet/tools/command/ArgsOnlyCommand/execute(org.apache.parquet.tools.command.CommandLine)
org/apache/parquet/tools/command/ShowMetaCommand/execute(org.apache.parquet.tools.command.CommandLine)#org/apache/parquet/tools/util/PrettyPrintWriter/flushColumns()
org/apache/parquet/tools/command/ShowMetaCommand/execute(org.apache.parquet.tools.command.CommandLine)#org/apache/parquet/tools/util/MetadataUtils/showDetails(org.apache.parquet.tools.util.PrettyPrintWriter,org.apache.parquet.hadoop.metadata.ParquetMetadata)
org/apache/parquet/tools/command/ShowMetaCommand/execute(org.apache.parquet.tools.command.CommandLine)#org/apache/parquet/tools/util/PrettyPrintWriter/Builder/withWhitespaceHandler(org.apache.parquet.tools.util.PrettyPrintWriter.WhiteSpaceHandler)
org/apache/parquet/tools/command/ShowMetaCommand/execute(org.apache.parquet.tools.command.CommandLine)#org/apache/parquet/hadoop/Footer/getParquetMetadata()
org/apache/parquet/filter2/TestFiltersWithMissingColumns/testOrMissingColumnFilter()#org/apache/parquet/filter2/predicate/FilterApi/ltEq(C,T)
org/apache/parquet/filter2/TestFiltersWithMissingColumns/testOrMissingColumnFilter()#org/apache/parquet/filter2/predicate/FilterApi/gt(C,T)
org/apache/parquet/filter2/TestFiltersWithMissingColumns/testOrMissingColumnFilter()#org/apache/parquet/filter2/predicate/FilterApi/eq(C,T)
org/apache/parquet/filter2/TestFiltersWithMissingColumns/testOrMissingColumnFilter()#org/apache/parquet/filter2/predicate/FilterApi/doubleColumn(java.lang.String)
org/apache/parquet/filter2/TestFiltersWithMissingColumns/testOrMissingColumnFilter()#org/apache/parquet/filter2/predicate/FilterApi/lt(C,T)
org/apache/parquet/filter2/TestFiltersWithMissingColumns/testOrMissingColumnFilter()#org/apache/parquet/filter2/predicate/FilterApi/or(org.apache.parquet.filter2.predicate.FilterPredicate,org.apache.parquet.filter2.predicate.FilterPredicate)
org/apache/parquet/filter2/TestFiltersWithMissingColumns/testOrMissingColumnFilter()#org/apache/parquet/io/api/Binary/fromString(java.lang.String)
org/apache/parquet/filter2/TestFiltersWithMissingColumns/testOrMissingColumnFilter()#org/apache/parquet/filter2/predicate/FilterApi/longColumn(java.lang.String)
org/apache/parquet/filter2/TestFiltersWithMissingColumns/testOrMissingColumnFilter()#org/apache/parquet/filter2/predicate/FilterApi/binaryColumn(java.lang.String)
org/apache/parquet/filter2/TestFiltersWithMissingColumns/testOrMissingColumnFilter()#org/apache/parquet/filter2/predicate/FilterApi/gtEq(C,T)
org/apache/parquet/filter2/TestFiltersWithMissingColumns/testOrMissingColumnFilter()#org/apache/parquet/filter2/TestFiltersWithMissingColumns/countFilteredRecords(org.apache.parquet.hadoop.Path,org.apache.parquet.filter2.predicate.FilterPredicate)
org/apache/parquet/filter2/TestFiltersWithMissingColumns/testOrMissingColumnFilter()#org/apache/parquet/filter2/predicate/FilterApi/notEq(C,T)
org/apache/parquet/filter2/TestFiltersWithMissingColumns/testAndMissingColumnFilter()#org/apache/parquet/filter2/predicate/FilterApi/ltEq(C,T)
org/apache/parquet/filter2/TestFiltersWithMissingColumns/testAndMissingColumnFilter()#org/apache/parquet/filter2/predicate/FilterApi/gt(C,T)
org/apache/parquet/filter2/TestFiltersWithMissingColumns/testAndMissingColumnFilter()#org/apache/parquet/filter2/predicate/FilterApi/eq(C,T)
org/apache/parquet/filter2/TestFiltersWithMissingColumns/testAndMissingColumnFilter()#org/apache/parquet/filter2/predicate/FilterApi/doubleColumn(java.lang.String)
org/apache/parquet/filter2/TestFiltersWithMissingColumns/testAndMissingColumnFilter()#org/apache/parquet/filter2/predicate/FilterApi/lt(C,T)
org/apache/parquet/filter2/TestFiltersWithMissingColumns/testAndMissingColumnFilter()#org/apache/parquet/io/api/Binary/fromString(java.lang.String)
org/apache/parquet/filter2/TestFiltersWithMissingColumns/testAndMissingColumnFilter()#org/apache/parquet/filter2/predicate/FilterApi/binaryColumn(java.lang.String)
org/apache/parquet/filter2/TestFiltersWithMissingColumns/testAndMissingColumnFilter()#org/apache/parquet/filter2/predicate/FilterApi/gtEq(C,T)
org/apache/parquet/filter2/TestFiltersWithMissingColumns/testAndMissingColumnFilter()#org/apache/parquet/filter2/TestFiltersWithMissingColumns/countFilteredRecords(org.apache.parquet.hadoop.Path,org.apache.parquet.filter2.predicate.FilterPredicate)
org/apache/parquet/filter2/TestFiltersWithMissingColumns/testAndMissingColumnFilter()#org/apache/parquet/filter2/predicate/FilterApi/notEq(C,T)
org/apache/parquet/filter2/TestFiltersWithMissingColumns/testAndMissingColumnFilter()#org/apache/parquet/filter2/predicate/FilterApi/longColumn(java.lang.String)
org/apache/parquet/filter2/TestFiltersWithMissingColumns/testAndMissingColumnFilter()#org/apache/parquet/filter2/predicate/FilterApi/and(org.apache.parquet.filter2.predicate.FilterPredicate,org.apache.parquet.filter2.predicate.FilterPredicate)
org/apache/parquet/filter2/TestFiltersWithMissingColumns/testSimpleMissingColumnFilter()#org/apache/parquet/filter2/predicate/FilterApi/lt(C,T)
org/apache/parquet/filter2/TestFiltersWithMissingColumns/testSimpleMissingColumnFilter()#org/apache/parquet/filter2/TestFiltersWithMissingColumns/countFilteredRecords(org.apache.parquet.hadoop.Path,org.apache.parquet.filter2.predicate.FilterPredicate)
org/apache/parquet/filter2/TestFiltersWithMissingColumns/testSimpleMissingColumnFilter()#org/apache/parquet/filter2/predicate/FilterApi/longColumn(java.lang.String)
org/apache/parquet/filter2/TestFiltersWithMissingColumns/testNormalFilter()#org/apache/parquet/filter2/predicate/FilterApi/lt(C,T)
org/apache/parquet/filter2/TestFiltersWithMissingColumns/testNormalFilter()#org/apache/parquet/filter2/TestFiltersWithMissingColumns/countFilteredRecords(org.apache.parquet.hadoop.Path,org.apache.parquet.filter2.predicate.FilterPredicate)
org/apache/parquet/filter2/TestFiltersWithMissingColumns/testNormalFilter()#org/apache/parquet/filter2/predicate/FilterApi/longColumn(java.lang.String)
org/apache/parquet/filter2/TestFiltersWithMissingColumns/createDataFile()#org/apache/parquet/hadoop/example/ExampleParquetWriter/builder(org.apache.parquet.hadoop.Path)
org/apache/parquet/filter2/TestFiltersWithMissingColumns/createDataFile()#org/apache/parquet/example/data/Group/add(int,long)
org/apache/parquet/filter2/TestFiltersWithMissingColumns/createDataFile()#org/apache/parquet/schema/Types/buildMessage()
org/apache/parquet/filter2/TestFiltersWithMissingColumns/createDataFile()#org/apache/parquet/schema/Types/Builder/named(java.lang.String)
org/apache/parquet/filter2/TestFiltersWithMissingColumns/createDataFile()#org/apache/parquet/schema/Types/Builder/as(org.apache.parquet.schema.OriginalType)
org/apache/parquet/filter2/TestFiltersWithMissingColumns/createDataFile()#org/apache/parquet/example/data/simple/SimpleGroupFactory/SimpleGroupFactory(org.apache.parquet.schema.MessageType)
org/apache/parquet/filter2/TestFiltersWithMissingColumns/createDataFile()#org/apache/parquet/hadoop/ParquetWriter/close()
org/apache/parquet/filter2/TestFiltersWithMissingColumns/createDataFile()#org/apache/parquet/hadoop/ParquetWriter/write(T)
org/apache/parquet/filter2/TestFiltersWithMissingColumns/createDataFile()#org/apache/parquet/schema/Types/BaseGroupBuilder/required(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/filter2/TestFiltersWithMissingColumns/createDataFile()#org/apache/parquet/example/data/Group/add(int,java.lang.String)
org/apache/parquet/filter2/TestFiltersWithMissingColumns/createDataFile()#org/apache/parquet/example/data/simple/SimpleGroupFactory/newGroup()
org/apache/parquet/filter2/TestFiltersWithMissingColumns/createDataFile()#java/io/File/toString()
org/apache/parquet/filter2/TestFiltersWithMissingColumns/countFilteredRecords(org.apache.parquet.hadoop.Path,org.apache.parquet.filter2.predicate.FilterPredicate)#org/apache/parquet/hadoop/ParquetReader/read()
org/apache/parquet/filter2/TestFiltersWithMissingColumns/countFilteredRecords(org.apache.parquet.hadoop.Path,org.apache.parquet.filter2.predicate.FilterPredicate)#org/apache/parquet/hadoop/ParquetReader/close()
org/apache/parquet/filter2/TestFiltersWithMissingColumns/countFilteredRecords(org.apache.parquet.hadoop.Path,org.apache.parquet.filter2.predicate.FilterPredicate)#org/apache/parquet/hadoop/ParquetReader/builder(org.apache.parquet.hadoop.api.ReadSupport,org.apache.parquet.hadoop.Path)
org/apache/parquet/filter2/TestFiltersWithMissingColumns/countFilteredRecords(org.apache.parquet.hadoop.Path,org.apache.parquet.filter2.predicate.FilterPredicate)#org/apache/parquet/hadoop/example/GroupReadSupport/GroupReadSupport()
org/apache/parquet/filter2/TestFiltersWithMissingColumns/countFilteredRecords(org.apache.parquet.hadoop.Path,org.apache.parquet.filter2.predicate.FilterPredicate)#org/apache/parquet/filter2/compat/FilterCompat/get(org.apache.parquet.filter2.predicate.FilterPredicate)
org/apache/parquet/pig/summary/Summary/Initial/exec(org.apache.parquet.pig.Tuple)#org/apache/parquet/pig/summary/Summary/JSONTuple/JSONTuple(org.apache.parquet.pig.summary.TupleSummaryData)
org/apache/parquet/pig/summary/Summary/Initial/exec(org.apache.parquet.pig.Tuple)#org/apache/parquet/pig/summary/Summary/sumUp(org.apache.parquet.pig.Schema,org.apache.parquet.pig.Tuple)
org/apache/parquet/hadoop/thrift/TestThriftToParquetFileWriter/testWriteFileListOfMap()#org/apache/parquet/hadoop/ParquetReader/read()
org/apache/parquet/hadoop/thrift/TestThriftToParquetFileWriter/testWriteFileListOfMap()#org/apache/parquet/hadoop/thrift/TestThriftToParquetFileWriter/createFile(T[])
org/apache/parquet/hadoop/thrift/TestThriftToParquetFileWriter/testWriteFileListOfMap()#java/util/Arrays/asList(T[])
org/apache/parquet/hadoop/thrift/TestThriftToParquetFileWriter/testWriteFileListOfMap()#java/util/HashMap/HashMap()
org/apache/parquet/hadoop/thrift/TestThriftToParquetFileWriter/testWriteFileListOfMap()#java/util/Map/put(K,V)
org/apache/parquet/hadoop/thrift/TestThriftToParquetFileWriter/testWriteFileListOfMap()#org/apache/parquet/example/data/Group/getGroup(java.lang.String,int)
org/apache/parquet/hadoop/thrift/TestThriftToParquetFileWriter/testWriteFileListOfMap()#org/apache/parquet/example/data/GroupValueSource/getFieldRepetitionCount(java.lang.String)
org/apache/parquet/hadoop/thrift/TestThriftToParquetFileWriter/testWriteFileListOfMap()#org/apache/parquet/hadoop/thrift/TestThriftToParquetFileWriter/createRecordReader(org.apache.parquet.hadoop.Path)
org/apache/parquet/hadoop/thrift/TestThriftToParquetFileWriter/createFile(T[])#org/apache/parquet/hadoop/util/ContextUtil/newTaskAttemptContext(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.util.TaskAttemptID)
org/apache/parquet/hadoop/thrift/TestThriftToParquetFileWriter/createFile(T[])#org/apache/parquet/hadoop/thrift/ThriftToParquetFileWriter/close()
org/apache/parquet/hadoop/thrift/TestThriftToParquetFileWriter/createFile(T[])#java/io/ByteArrayOutputStream/toByteArray()
org/apache/parquet/hadoop/thrift/TestThriftToParquetFileWriter/createFile(T[])#java/lang/Object/getClass()
org/apache/parquet/hadoop/thrift/TestThriftToParquetFileWriter/createFile(T[])#java/io/ByteArrayOutputStream/ByteArrayOutputStream()
org/apache/parquet/hadoop/thrift/TestThriftToParquetFileWriter/createFile(T[])#org/apache/parquet/hadoop/thrift/ThriftToParquetFileWriter/write(org.apache.parquet.hadoop.thrift.BytesWritable)
org/apache/parquet/hadoop/thrift/TestThriftToParquetFileWriter/createFile(T[])#org/apache/parquet/hadoop/thrift/ThriftToParquetFileWriter/ThriftToParquetFileWriter(org.apache.parquet.hadoop.Path,org.apache.parquet.hadoop.TaskAttemptContext,org.apache.parquet.hadoop.thrift.TProtocolFactory,java.lang.Class)
org/apache/parquet/hadoop/thrift/TestThriftToParquetFileWriter/testWriteFileMapOfList()#org/apache/parquet/hadoop/ParquetReader/read()
org/apache/parquet/hadoop/thrift/TestThriftToParquetFileWriter/testWriteFileMapOfList()#org/apache/parquet/io/api/Binary/toStringUsingUTF8()
org/apache/parquet/hadoop/thrift/TestThriftToParquetFileWriter/testWriteFileMapOfList()#java/util/Map/get(java.lang.Object)
org/apache/parquet/hadoop/thrift/TestThriftToParquetFileWriter/testWriteFileMapOfList()#org/apache/parquet/hadoop/thrift/TestThriftToParquetFileWriter/createFile(T[])
org/apache/parquet/hadoop/thrift/TestThriftToParquetFileWriter/testWriteFileMapOfList()#java/util/List/size()
org/apache/parquet/hadoop/thrift/TestThriftToParquetFileWriter/testWriteFileMapOfList()#java/util/Arrays/asList(T[])
org/apache/parquet/hadoop/thrift/TestThriftToParquetFileWriter/testWriteFileMapOfList()#java/util/HashMap/HashMap()
org/apache/parquet/hadoop/thrift/TestThriftToParquetFileWriter/testWriteFileMapOfList()#java/util/Map/put(K,V)
org/apache/parquet/hadoop/thrift/TestThriftToParquetFileWriter/testWriteFileMapOfList()#org/apache/parquet/example/data/Group/getGroup(java.lang.String,int)
org/apache/parquet/hadoop/thrift/TestThriftToParquetFileWriter/testWriteFileMapOfList()#org/apache/parquet/hadoop/thrift/TestThriftToParquetFileWriter/createRecordReader(org.apache.parquet.hadoop.Path)
org/apache/parquet/hadoop/thrift/TestThriftToParquetFileWriter/testWriteFileMapOfList()#org/apache/parquet/example/data/GroupValueSource/getFieldRepetitionCount(int)
org/apache/parquet/hadoop/thrift/TestThriftToParquetFileWriter/testWriteFileMapOfList()#org/apache/parquet/example/data/GroupValueSource/getBinary(java.lang.String,int)
org/apache/parquet/hadoop/thrift/TestThriftToParquetFileWriter/testWriteFile()#org/apache/parquet/hadoop/ParquetReader/read()
org/apache/parquet/hadoop/thrift/TestThriftToParquetFileWriter/testWriteFile()#org/apache/parquet/example/data/GroupValueSource/getString(java.lang.String,int)
org/apache/parquet/hadoop/thrift/TestThriftToParquetFileWriter/testWriteFile()#org/apache/parquet/hadoop/thrift/TestThriftToParquetFileWriter/createFile(T[])
org/apache/parquet/hadoop/thrift/TestThriftToParquetFileWriter/testWriteFile()#java/util/Arrays/asList(T[])
org/apache/parquet/hadoop/thrift/TestThriftToParquetFileWriter/testWriteFile()#org/apache/parquet/example/data/Group/getGroup(int,int)
org/apache/parquet/hadoop/thrift/TestThriftToParquetFileWriter/testWriteFile()#org/apache/parquet/example/data/Group/getGroup(java.lang.String,int)
org/apache/parquet/hadoop/thrift/TestThriftToParquetFileWriter/testWriteFile()#org/apache/parquet/example/data/GroupValueSource/getFieldRepetitionCount(java.lang.String)
org/apache/parquet/hadoop/thrift/TestThriftToParquetFileWriter/testWriteFile()#org/apache/parquet/hadoop/thrift/TestThriftToParquetFileWriter/createRecordReader(org.apache.parquet.hadoop.Path)
org/apache/parquet/hadoop/thrift/TestThriftToParquetFileWriter/testWriteFile()#java/lang/Object/Object()
org/apache/parquet/hadoop/thrift/TestThriftToParquetFileWriter/testWriteFileMapOfLists()#org/apache/parquet/hadoop/ParquetReader/read()
org/apache/parquet/hadoop/thrift/TestThriftToParquetFileWriter/testWriteFileMapOfLists()#org/apache/parquet/io/api/Binary/toStringUsingUTF8()
org/apache/parquet/hadoop/thrift/TestThriftToParquetFileWriter/testWriteFileMapOfLists()#org/apache/parquet/hadoop/thrift/TestThriftToParquetFileWriter/createFile(T[])
org/apache/parquet/hadoop/thrift/TestThriftToParquetFileWriter/testWriteFileMapOfLists()#java/util/Arrays/asList(T[])
org/apache/parquet/hadoop/thrift/TestThriftToParquetFileWriter/testWriteFileMapOfLists()#java/util/HashMap/HashMap()
org/apache/parquet/hadoop/thrift/TestThriftToParquetFileWriter/testWriteFileMapOfLists()#org/apache/parquet/example/data/GroupValueSource/getBinary(java.lang.String,int)
org/apache/parquet/hadoop/thrift/TestThriftToParquetFileWriter/testWriteFileMapOfLists()#java/util/Map/put(K,V)
org/apache/parquet/hadoop/thrift/TestThriftToParquetFileWriter/testWriteFileMapOfLists()#org/apache/parquet/example/data/Group/getGroup(java.lang.String,int)
org/apache/parquet/hadoop/thrift/TestThriftToParquetFileWriter/testWriteFileMapOfLists()#org/apache/parquet/hadoop/thrift/TestThriftToParquetFileWriter/createRecordReader(org.apache.parquet.hadoop.Path)
org/apache/parquet/hadoop/thrift/TestThriftToParquetFileWriter/testWriteStatistics()#org/apache/parquet/column/statistics/DoubleStatistics/setMinMax(double,double)
org/apache/parquet/hadoop/thrift/TestThriftToParquetFileWriter/testWriteStatistics()#org/apache/parquet/column/statistics/BooleanStatistics/BooleanStatistics()
org/apache/parquet/hadoop/thrift/TestThriftToParquetFileWriter/testWriteStatistics()#org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/getPath()
org/apache/parquet/hadoop/thrift/TestThriftToParquetFileWriter/testWriteStatistics()#org/apache/parquet/column/statistics/IntStatistics/setMinMax(int,int)
org/apache/parquet/hadoop/thrift/TestThriftToParquetFileWriter/testWriteStatistics()#org/apache/parquet/hadoop/thrift/TestThriftToParquetFileWriter/createFile(T[])
org/apache/parquet/hadoop/thrift/TestThriftToParquetFileWriter/testWriteStatistics()#org/apache/parquet/column/statistics/Statistics/equals(java.lang.Object)
org/apache/parquet/hadoop/thrift/TestThriftToParquetFileWriter/testWriteStatistics()#org/apache/parquet/column/statistics/BinaryStatistics/setMinMax(org.apache.parquet.io.api.Binary,org.apache.parquet.io.api.Binary)
org/apache/parquet/hadoop/thrift/TestThriftToParquetFileWriter/testWriteStatistics()#org/apache/parquet/column/statistics/IntStatistics/IntStatistics()
org/apache/parquet/hadoop/thrift/TestThriftToParquetFileWriter/testWriteStatistics()#org/apache/parquet/column/statistics/LongStatistics/setMinMax(long,long)
org/apache/parquet/hadoop/thrift/TestThriftToParquetFileWriter/testWriteStatistics()#org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/getType()
org/apache/parquet/hadoop/thrift/TestThriftToParquetFileWriter/testWriteStatistics()#org/apache/parquet/column/statistics/BooleanStatistics/setMinMax(boolean,boolean)
org/apache/parquet/hadoop/thrift/TestThriftToParquetFileWriter/testWriteStatistics()#org/apache/parquet/hadoop/metadata/BlockMetaData/getColumns()
org/apache/parquet/hadoop/thrift/TestThriftToParquetFileWriter/testWriteStatistics()#org/apache/parquet/hadoop/metadata/ParquetMetadata/getBlocks()
org/apache/parquet/hadoop/thrift/TestThriftToParquetFileWriter/testWriteStatistics()#org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/getStatistics()
org/apache/parquet/hadoop/thrift/TestThriftToParquetFileWriter/testWriteStatistics()#org/apache/parquet/column/statistics/LongStatistics/LongStatistics()
org/apache/parquet/hadoop/thrift/TestThriftToParquetFileWriter/testWriteStatistics()#org/apache/parquet/column/statistics/BinaryStatistics/BinaryStatistics()
org/apache/parquet/hadoop/thrift/TestThriftToParquetFileWriter/testWriteStatistics()#org/apache/parquet/column/statistics/DoubleStatistics/DoubleStatistics()
org/apache/parquet/hadoop/thrift/TestThriftToParquetFileWriter/testWriteStatistics()#org/apache/parquet/io/api/Binary/fromString(java.lang.String)
org/apache/parquet/hadoop/thrift/TestThriftToParquetFileWriter/testWriteStatistics()#org/apache/parquet/hadoop/ParquetFileReader/readFooter(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path)
org/apache/parquet/hadoop/thrift/TestThriftToParquetFileWriter/testWriteStatistics()#org/apache/parquet/hadoop/metadata/ColumnPath/toString()
org/apache/parquet/hadoop/thrift/TestThriftToParquetFileWriter/createRecordReader(org.apache.parquet.hadoop.Path)#org/apache/parquet/hadoop/metadata/ParquetMetadata/getFileMetaData()
org/apache/parquet/hadoop/thrift/TestThriftToParquetFileWriter/createRecordReader(org.apache.parquet.hadoop.Path)#org/apache/parquet/hadoop/ParquetReader/ParquetReader(org.apache.parquet.hadoop.Path,org.apache.parquet.hadoop.api.ReadSupport)
org/apache/parquet/hadoop/thrift/TestThriftToParquetFileWriter/createRecordReader(org.apache.parquet.hadoop.Path)#org/apache/parquet/hadoop/ParquetFileReader/readFooter(org.apache.parquet.hadoop.Configuration,org.apache.parquet.hadoop.Path)
org/apache/parquet/hadoop/thrift/TestThriftToParquetFileWriter/createRecordReader(org.apache.parquet.hadoop.Path)#org/apache/parquet/hadoop/example/GroupReadSupport/GroupReadSupport()
org/apache/parquet/hadoop/thrift/TestThriftToParquetFileWriter/createRecordReader(org.apache.parquet.hadoop.Path)#org/apache/parquet/hadoop/metadata/FileMetaData/getSchema()
org/apache/parquet/hadoop/thrift/TestThriftToParquetFileWriter/createRecordReader(org.apache.parquet.hadoop.Path)#org/apache/parquet/hadoop/example/GroupReadSupport/init(org.apache.parquet.hadoop.Configuration,java.util.Map,org.apache.parquet.schema.MessageType)
org/apache/parquet/filter2/predicate/TestFilterApiMethods/IsMultipleOf/hashCode()#java/lang/Long/Long(long)
org/apache/parquet/filter2/predicate/TestFilterApiMethods/IsMultipleOf/hashCode()#java/lang/Long/hashCode()
org/apache/parquet/filter2/predicate/TestFilterApiMethods/IsMultipleOf/equals(java.lang.Object)#java/lang/Object/getClass()
org/apache/parquet/filter2/predicate/Operators/UserDefined/accept(org.apache.parquet.filter2.predicate.FilterPredicate.Visitor)#org/apache/parquet/filter2/predicate/FilterPredicate/Visitor/visit(org.apache.parquet.filter2.predicate.Operators.UserDefined)
org/apache/parquet/tools/Main/mergeOptions(org.apache.parquet.tools.command.Options,org.apache.parquet.tools.Options[])#org/apache/parquet/tools/Main/mergeOptionsInto(org.apache.parquet.tools.command.Options,org.apache.parquet.tools.command.Options)
org/apache/parquet/tools/Main/showUsage(java.lang.String,org.apache.parquet.tools.command.Command)#java/io/PrintWriter/PrintWriter(java.io.OutputStream,boolean)
org/apache/parquet/tools/Main/showUsage(java.lang.String,org.apache.parquet.tools.command.Command)#org/apache/parquet/tools/command/Command/getOptions()
org/apache/parquet/tools/Main/showUsage(java.lang.String,org.apache.parquet.tools.command.Command)#org/apache/parquet/tools/Main/showUsage(org.apache.parquet.tools.HelpFormatter,java.io.PrintWriter,java.lang.String,org.apache.parquet.tools.command.Command)
org/apache/parquet/tools/Main/showUsage(org.apache.parquet.tools.HelpFormatter,java.io.PrintWriter,java.lang.String,org.apache.parquet.tools.command.Command)#org/apache/parquet/tools/Main/mergeOptions(org.apache.parquet.tools.command.Options,org.apache.parquet.tools.Options[])
org/apache/parquet/tools/Main/showUsage(org.apache.parquet.tools.HelpFormatter,java.io.PrintWriter,java.lang.String,org.apache.parquet.tools.command.Command)#org/apache/parquet/tools/command/Command/getOptions()
org/apache/parquet/tools/Main/showUsage(org.apache.parquet.tools.HelpFormatter,java.io.PrintWriter,java.lang.String,org.apache.parquet.tools.command.Command)#org/apache/parquet/tools/command/Command/getUsageDescription()
org/apache/parquet/tools/Main/die(java.lang.String,boolean,java.lang.String,org.apache.parquet.tools.command.Command)#java/io/PrintStream/println(java.lang.String)
org/apache/parquet/tools/Main/die(java.lang.String,boolean,java.lang.String,org.apache.parquet.tools.command.Command)#org/apache/parquet/tools/Main/showUsage(java.lang.String,org.apache.parquet.tools.command.Command)
org/apache/parquet/tools/Main/die(java.lang.String,boolean,java.lang.String,org.apache.parquet.tools.command.Command)#java/io/PrintStream/println()
org/apache/parquet/tools/Main/die(java.lang.String,boolean,java.lang.String,org.apache.parquet.tools.command.Command)#org/apache/parquet/tools/Main/showUsage()
org/apache/parquet/tools/Main/die(java.lang.String,boolean,java.lang.String,org.apache.parquet.tools.command.Command)#java/lang/System/exit(int)
org/apache/parquet/tools/Main/die(java.lang.String,boolean)#org/apache/parquet/tools/Main/die(java.lang.String,boolean,java.lang.String,org.apache.parquet.tools.command.Command)
org/apache/parquet/tools/Main/showUsage()#java/io/PrintWriter/println()
org/apache/parquet/tools/Main/showUsage()#java/util/Map/Entry/getValue()
org/apache/parquet/tools/Main/showUsage()#org/apache/parquet/tools/Main/showUsage(org.apache.parquet.tools.HelpFormatter,java.io.PrintWriter,java.lang.String,org.apache.parquet.tools.command.Command)
org/apache/parquet/tools/Main/showUsage()#java/util/Map/Entry/getKey()
org/apache/parquet/tools/Main/showUsage()#org/apache/parquet/tools/command/Registry/allCommands()
org/apache/parquet/tools/Main/showUsage()#java/util/Map/entrySet()
org/apache/parquet/tools/Main/showUsage()#java/io/PrintWriter/PrintWriter(java.io.OutputStream,boolean)
org/apache/parquet/tools/Main/die(java.lang.Throwable,boolean)#org/apache/parquet/tools/Main/die(java.lang.Throwable,boolean,java.lang.String,org.apache.parquet.tools.command.Command)
org/apache/parquet/tools/Main/die(java.lang.Throwable,boolean,java.lang.String,org.apache.parquet.tools.command.Command)#org/apache/parquet/tools/Main/die(java.lang.String,boolean,java.lang.String,org.apache.parquet.tools.command.Command)
org/apache/parquet/tools/Main/die(java.lang.Throwable,boolean,java.lang.String,org.apache.parquet.tools.command.Command)#java/lang/Throwable/getMessage()
org/apache/parquet/tools/Main/main(java.lang.String[])#java/lang/System/setOut(java.io.PrintStream)
org/apache/parquet/tools/Main/main(java.lang.String[])#org/apache/parquet/tools/Main/mergeOptions(org.apache.parquet.tools.command.Options,org.apache.parquet.tools.Options[])
org/apache/parquet/tools/Main/main(java.lang.String[])#org/apache/parquet/tools/command/Command/execute(org.apache.parquet.tools.command.CommandLine)
org/apache/parquet/tools/Main/main(java.lang.String[])#org/apache/parquet/tools/Main/showUsage(java.lang.String,org.apache.parquet.tools.command.Command)
org/apache/parquet/tools/Main/main(java.lang.String[])#org/apache/parquet/tools/Main/showUsage()
org/apache/parquet/tools/Main/main(java.lang.String[])#org/apache/parquet/tools/Main/die(java.lang.Throwable,boolean,java.lang.String,org.apache.parquet.tools.command.Command)
org/apache/parquet/tools/Main/main(java.lang.String[])#java/util/Arrays/copyOfRange(T[],int,int)
org/apache/parquet/tools/Main/main(java.lang.String[])#org/apache/parquet/tools/command/Command/supportsExtraArgs()
org/apache/parquet/tools/Main/main(java.lang.String[])#org/apache/parquet/tools/Main/die(java.lang.String,boolean,java.lang.String,org.apache.parquet.tools.command.Command)
org/apache/parquet/tools/Main/main(java.lang.String[])#java/lang/System/setErr(java.io.PrintStream)
org/apache/parquet/tools/Main/main(java.lang.String[])#org/apache/parquet/tools/command/Command/getOptions()
org/apache/parquet/tools/Main/main(java.lang.String[])#java/lang/System/exit(int)
org/apache/parquet/tools/Main/main(java.lang.String[])#java/lang/String/equals(java.lang.Object)
org/apache/parquet/tools/Main/main(java.lang.String[])#java/lang/Throwable/printStackTrace(java.io.PrintStream)
org/apache/parquet/tools/Main/main(java.lang.String[])#java/io/PrintStream/PrintStream(java.io.OutputStream)
org/apache/parquet/tools/Main/main(java.lang.String[])#org/apache/parquet/tools/Main/main(java/lang/String[])/$anonymous1/()
org/apache/parquet/tools/Main/main(java.lang.String[])#java/lang/System/setProperty(java.lang.String,java.lang.String)
org/apache/parquet/tools/Main/main(java.lang.String[])#org/apache/parquet/tools/command/Registry/getCommandByName(java.lang.String)
org/apache/parquet/CorruptDeltaByteArrays/requiresSequentialReads(org.apache.parquet.VersionParser.ParsedVersion,org.apache.parquet.column.Encoding)#org/apache/parquet/VersionParser/ParsedVersion/hasSemanticVersion()
org/apache/parquet/CorruptDeltaByteArrays/requiresSequentialReads(org.apache.parquet.VersionParser.ParsedVersion,org.apache.parquet.column.Encoding)#org/apache/parquet/CorruptDeltaByteArrays/requiresSequentialReads(org.apache.parquet.SemanticVersion,org.apache.parquet.column.Encoding)
org/apache/parquet/CorruptDeltaByteArrays/requiresSequentialReads(org.apache.parquet.VersionParser.ParsedVersion,org.apache.parquet.column.Encoding)#org/apache/parquet/VersionParser/ParsedVersion/getSemanticVersion()
org/apache/parquet/CorruptDeltaByteArrays/requiresSequentialReads(org.apache.parquet.VersionParser.ParsedVersion,org.apache.parquet.column.Encoding)#java/lang/String/equals(java.lang.Object)
org/apache/parquet/CorruptDeltaByteArrays/requiresSequentialReads(org.apache.parquet.SemanticVersion,org.apache.parquet.column.Encoding)#org/apache/parquet/SemanticVersion/compareTo(org.apache.parquet.SemanticVersion)
org/apache/parquet/CorruptDeltaByteArrays/requiresSequentialReads(java.lang.String,org.apache.parquet.column.Encoding)#org/apache/parquet/CorruptDeltaByteArrays/warnParseError(java.lang.String,java.lang.Throwable)
org/apache/parquet/CorruptDeltaByteArrays/requiresSequentialReads(java.lang.String,org.apache.parquet.column.Encoding)#org/apache/parquet/CorruptDeltaByteArrays/requiresSequentialReads(org.apache.parquet.VersionParser.ParsedVersion,org.apache.parquet.column.Encoding)
org/apache/parquet/CorruptDeltaByteArrays/requiresSequentialReads(java.lang.String,org.apache.parquet.column.Encoding)#org/apache/parquet/Strings/isNullOrEmpty(java.lang.String)
org/apache/parquet/CorruptDeltaByteArrays/requiresSequentialReads(java.lang.String,org.apache.parquet.column.Encoding)#org/apache/parquet/VersionParser/parse(java.lang.String)
org/apache/parquet/avro/AvroConverters/FieldShortConverter/addInt(int)#org/apache/parquet/avro/ParentValueContainer/addShort(short)
org/apache/parquet/column/values/factory/DefaultValuesWriterFactory/initialize(org.apache.parquet.column.ParquetProperties)#org/apache/parquet/column/values/factory/ValuesWriterFactory/initialize(org.apache.parquet.column.ParquetProperties)
org/apache/parquet/column/values/factory/DefaultValuesWriterFactory/initialize(org.apache.parquet.column.ParquetProperties)#org/apache/parquet/column/ParquetProperties/getWriterVersion()
org/apache/parquet/column/values/factory/DefaultValuesWriterFactory/dictWriterWithFallBack(org.apache.parquet.column.ColumnDescriptor,org.apache.parquet.column.ParquetProperties,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding,org.apache.parquet.column.values.ValuesWriter)#org/apache/parquet/column/values/fallback/FallbackValuesWriter/of(I,F)
org/apache/parquet/column/values/factory/DefaultValuesWriterFactory/dictWriterWithFallBack(org.apache.parquet.column.ColumnDescriptor,org.apache.parquet.column.ParquetProperties,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding,org.apache.parquet.column.values.ValuesWriter)#org/apache/parquet/column/ParquetProperties/isEnableDictionary()
org/apache/parquet/column/values/factory/DefaultValuesWriterFactory/dictWriterWithFallBack(org.apache.parquet.column.ColumnDescriptor,org.apache.parquet.column.ParquetProperties,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding,org.apache.parquet.column.values.ValuesWriter)#org/apache/parquet/column/values/factory/DefaultValuesWriterFactory/dictionaryWriter(org.apache.parquet.column.ColumnDescriptor,org.apache.parquet.column.ParquetProperties,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding)
org/apache/parquet/column/values/factory/DefaultValuesWriterFactory/newValuesWriter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/values/factory/ValuesWriterFactory/newValuesWriter(org.apache.parquet.column.ColumnDescriptor)
org/apache/parquet/column/values/factory/DefaultValuesWriterFactory/dictionaryWriter(org.apache.parquet.column.ColumnDescriptor,org.apache.parquet.column.ParquetProperties,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding)#org/apache/parquet/column/ColumnDescriptor/getType()
org/apache/parquet/column/values/factory/DefaultValuesWriterFactory/dictionaryWriter(org.apache.parquet.column.ColumnDescriptor,org.apache.parquet.column.ParquetProperties,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding)#org/apache/parquet/column/ColumnDescriptor/getTypeLength()
org/apache/parquet/column/values/factory/DefaultValuesWriterFactory/dictionaryWriter(org.apache.parquet.column.ColumnDescriptor,org.apache.parquet.column.ParquetProperties,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding)#org/apache/parquet/column/values/dictionary/DictionaryValuesWriter/PlainFixedLenArrayDictionaryValuesWriter/PlainFixedLenArrayDictionaryValuesWriter(int,int,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding,org.apache.parquet.bytes.ByteBufferAllocator)
org/apache/parquet/column/values/factory/DefaultValuesWriterFactory/dictionaryWriter(org.apache.parquet.column.ColumnDescriptor,org.apache.parquet.column.ParquetProperties,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding)#org/apache/parquet/column/values/dictionary/DictionaryValuesWriter/PlainLongDictionaryValuesWriter/PlainLongDictionaryValuesWriter(int,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding,org.apache.parquet.bytes.ByteBufferAllocator)
org/apache/parquet/column/values/factory/DefaultValuesWriterFactory/dictionaryWriter(org.apache.parquet.column.ColumnDescriptor,org.apache.parquet.column.ParquetProperties,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding)#org/apache/parquet/column/ParquetProperties/getAllocator()
org/apache/parquet/column/values/factory/DefaultValuesWriterFactory/dictionaryWriter(org.apache.parquet.column.ColumnDescriptor,org.apache.parquet.column.ParquetProperties,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding)#org/apache/parquet/column/values/dictionary/DictionaryValuesWriter/PlainDoubleDictionaryValuesWriter/PlainDoubleDictionaryValuesWriter(int,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding,org.apache.parquet.bytes.ByteBufferAllocator)
org/apache/parquet/column/values/factory/DefaultValuesWriterFactory/dictionaryWriter(org.apache.parquet.column.ColumnDescriptor,org.apache.parquet.column.ParquetProperties,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding)#org/apache/parquet/column/values/dictionary/DictionaryValuesWriter/PlainBinaryDictionaryValuesWriter/PlainBinaryDictionaryValuesWriter(int,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding,org.apache.parquet.bytes.ByteBufferAllocator)
org/apache/parquet/column/values/factory/DefaultValuesWriterFactory/dictionaryWriter(org.apache.parquet.column.ColumnDescriptor,org.apache.parquet.column.ParquetProperties,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding)#org/apache/parquet/column/values/dictionary/DictionaryValuesWriter/PlainFloatDictionaryValuesWriter/PlainFloatDictionaryValuesWriter(int,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding,org.apache.parquet.bytes.ByteBufferAllocator)
org/apache/parquet/column/values/factory/DefaultValuesWriterFactory/dictionaryWriter(org.apache.parquet.column.ColumnDescriptor,org.apache.parquet.column.ParquetProperties,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding)#org/apache/parquet/column/values/dictionary/DictionaryValuesWriter/PlainIntegerDictionaryValuesWriter/PlainIntegerDictionaryValuesWriter(int,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding,org.apache.parquet.bytes.ByteBufferAllocator)
org/apache/parquet/column/values/factory/DefaultValuesWriterFactory/dictionaryWriter(org.apache.parquet.column.ColumnDescriptor,org.apache.parquet.column.ParquetProperties,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/parquet/column/values/factory/DefaultValuesWriterFactory/dictionaryWriter(org.apache.parquet.column.ColumnDescriptor,org.apache.parquet.column.ParquetProperties,org.apache.parquet.column.Encoding,org.apache.parquet.column.Encoding)#org/apache/parquet/column/ParquetProperties/getDictionaryPageSizeThreshold()
org/apache/parquet/io/ConverterConsumer/addBinary(org.apache.parquet.io.api.Binary)#org/apache/parquet/io/api/PrimitiveConverter/addBinary(org.apache.parquet.io.api.Binary)
org/apache/parquet/io/ConverterConsumer/endField(java.lang.String,int)#java/util/Deque/pop()
org/apache/parquet/io/ConverterConsumer/startGroup()#org/apache/parquet/io/api/GroupConverter/start()
org/apache/parquet/io/ConverterConsumer/endMessage()#org/apache/parquet/io/api/GroupConverter/end()
org/apache/parquet/io/ConverterConsumer/startField(java.lang.String,int)#org/apache/parquet/io/api/Converter/asPrimitiveConverter()
org/apache/parquet/io/ConverterConsumer/startField(java.lang.String,int)#org/apache/parquet/io/api/GroupConverter/getConverter(int)
org/apache/parquet/io/ConverterConsumer/startField(java.lang.String,int)#org/apache/parquet/schema/Type/isPrimitive()
org/apache/parquet/io/ConverterConsumer/startField(java.lang.String,int)#org/apache/parquet/io/api/Converter/asGroupConverter()
org/apache/parquet/io/ConverterConsumer/startField(java.lang.String,int)#org/apache/parquet/schema/Type/asGroupType()
org/apache/parquet/io/ConverterConsumer/startField(java.lang.String,int)#org/apache/parquet/schema/GroupType/getType(int)
org/apache/parquet/io/ConverterConsumer/startField(java.lang.String,int)#java/util/Deque/push(E)
org/apache/parquet/io/ConverterConsumer/addFloat(float)#org/apache/parquet/io/api/PrimitiveConverter/addFloat(float)
org/apache/parquet/io/ConverterConsumer/addDouble(double)#org/apache/parquet/io/api/PrimitiveConverter/addDouble(double)
org/apache/parquet/io/ConverterConsumer/addBoolean(boolean)#org/apache/parquet/io/api/PrimitiveConverter/addBoolean(boolean)
org/apache/parquet/io/ConverterConsumer/addLong(long)#org/apache/parquet/io/api/PrimitiveConverter/addLong(long)
org/apache/parquet/io/ConverterConsumer/endGroup()#org/apache/parquet/io/api/GroupConverter/end()
org/apache/parquet/io/ConverterConsumer/addInteger(int)#org/apache/parquet/io/api/PrimitiveConverter/addInt(int)
org/apache/parquet/io/ConverterConsumer/startMessage()#org/apache/parquet/io/api/GroupConverter/start()
org/apache/parquet/hadoop/api/DelegatingWriteSupport/write(T)#org/apache/parquet/hadoop/api/WriteSupport/write(T)
org/apache/parquet/hadoop/api/DelegatingWriteSupport/init(org.apache.parquet.hadoop.Configuration)#org/apache/parquet/hadoop/api/WriteSupport/init(org.apache.parquet.hadoop.Configuration)
org/apache/parquet/hadoop/api/DelegatingWriteSupport/prepareForWrite(org.apache.parquet.io.api.RecordConsumer)#org/apache/parquet/hadoop/api/WriteSupport/prepareForWrite(org.apache.parquet.io.api.RecordConsumer)
org/apache/parquet/hadoop/api/DelegatingWriteSupport/toString()#java/lang/Object/toString()
org/apache/parquet/hadoop/api/DelegatingWriteSupport/toString()#java/lang/Class/getName()
org/apache/parquet/hadoop/api/DelegatingWriteSupport/toString()#java/lang/Object/getClass()
org/apache/parquet/hadoop/api/DelegatingWriteSupport/finalizeWrite()#org/apache/parquet/hadoop/api/WriteSupport/finalizeWrite()
org/apache/parquet/hadoop/api/DelegatingWriteSupport/getName()#org/apache/parquet/hadoop/api/WriteSupport/getName()
org/apache/parquet/hadoop/metadata/IntColumnChunkMetaData/positiveLongToInt(long)#org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/positiveLongFitsInAnInt(long)
org/apache/parquet/hadoop/metadata/IntColumnChunkMetaData/positiveLongToInt(long)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/parquet/hadoop/metadata/IntColumnChunkMetaData/getFirstDataPageOffset()#org/apache/parquet/hadoop/metadata/IntColumnChunkMetaData/intToPositiveLong(int)
org/apache/parquet/hadoop/metadata/IntColumnChunkMetaData/getDictionaryPageOffset()#org/apache/parquet/hadoop/metadata/IntColumnChunkMetaData/intToPositiveLong(int)
org/apache/parquet/hadoop/metadata/IntColumnChunkMetaData/getValueCount()#org/apache/parquet/hadoop/metadata/IntColumnChunkMetaData/intToPositiveLong(int)
org/apache/parquet/hadoop/metadata/IntColumnChunkMetaData/getTotalUncompressedSize()#org/apache/parquet/hadoop/metadata/IntColumnChunkMetaData/intToPositiveLong(int)
org/apache/parquet/hadoop/metadata/IntColumnChunkMetaData/getTotalSize()#org/apache/parquet/hadoop/metadata/IntColumnChunkMetaData/intToPositiveLong(int)
org/apache/parquet/hadoop/PrintFooter/Stats/toString(int)#org/apache/parquet/hadoop/PrintFooter/humanReadable(long)
org/apache/parquet/hadoop/PrintFooter/Stats/add(long)#java/lang/Math/min(long,long)
org/apache/parquet/hadoop/PrintFooter/Stats/add(long)#java/lang/Math/max(long,long)
org/apache/parquet/pig/TestParquetStorer/testComplexSchema()#java/util/ArrayList/ArrayList()
org/apache/parquet/pig/TestParquetStorer/testComplexSchema()#java/lang/String/replaceAll(java.lang.String,java.lang.String)
org/apache/parquet/pig/TestParquetStorer/testComplexSchema()#java/lang/Class/getName()
org/apache/parquet/pig/TestParquetStorer/testComplexSchema()#java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)
org/apache/parquet/pig/TestParquetStorer/testComplexSchema()#java/util/Collections/shuffle(java.util.List)
org/apache/parquet/pig/TestParquetStorer/testComplexSchema()#java/lang/Object/Object()
org/apache/parquet/pig/TestParquetStorer/testStorerCompressed()#java/util/ArrayList/ArrayList()
org/apache/parquet/pig/TestParquetStorer/testStorerCompressed()#java/util/Properties/setProperty(java.lang.String,java.lang.String)
org/apache/parquet/pig/TestParquetStorer/testStorerCompressed()#java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)
org/apache/parquet/pig/TestParquetStorer/testStorerCompressed()#java/lang/Object/Object()
org/apache/parquet/pig/TestParquetStorer/testStorerCompressed()#java/util/Properties/Properties()
org/apache/parquet/pig/TestParquetStorer/testStorerCompressed()#java/lang/Class/getName()
org/apache/parquet/pig/TestParquetStorer/testMultipleSchema()#java/util/ArrayList/ArrayList()
org/apache/parquet/pig/TestParquetStorer/testMultipleSchema()#java/util/Properties/setProperty(java.lang.String,java.lang.String)
org/apache/parquet/pig/TestParquetStorer/testMultipleSchema()#java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)
org/apache/parquet/pig/TestParquetStorer/testMultipleSchema()#java/lang/Object/Object()
org/apache/parquet/pig/TestParquetStorer/testMultipleSchema()#java/lang/String/equals(java.lang.Object)
org/apache/parquet/pig/TestParquetStorer/testMultipleSchema()#java/util/Properties/Properties()
org/apache/parquet/pig/TestParquetStorer/testMultipleSchema()#java/lang/Class/getName()
org/apache/parquet/pig/TestParquetStorer/testStorer()#java/util/ArrayList/ArrayList()
org/apache/parquet/pig/TestParquetStorer/testStorer()#java/util/Properties/setProperty(java.lang.String,java.lang.String)
org/apache/parquet/pig/TestParquetStorer/testStorer()#java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)
org/apache/parquet/pig/TestParquetStorer/testStorer()#java/lang/Object/Object()
org/apache/parquet/pig/TestParquetStorer/testStorer()#java/util/Properties/Properties()
org/apache/parquet/pig/TestParquetStorer/testStorer()#java/lang/Class/getName()
org/apache/parquet/avro/AvroRecordConverter/AvroUnionConverter/end()#org/apache/parquet/avro/ParentValueContainer/add(java.lang.Object)
org/apache/parquet/column/values/dictionary/DictionaryValuesWriter/PlainLongDictionaryValuesWriter/fallBackDictionaryEncodedData(org.apache.parquet.column.values.ValuesWriter)#org/apache/parquet/column/values/dictionary/IntList/IntIterator/hasNext()
org/apache/parquet/column/values/dictionary/DictionaryValuesWriter/PlainLongDictionaryValuesWriter/fallBackDictionaryEncodedData(org.apache.parquet.column.values.ValuesWriter)#org/apache/parquet/column/values/ValuesWriter/writeLong(long)
org/apache/parquet/column/values/dictionary/DictionaryValuesWriter/PlainLongDictionaryValuesWriter/fallBackDictionaryEncodedData(org.apache.parquet.column.values.ValuesWriter)#org/apache/parquet/column/values/dictionary/IntList/IntIterator/next()
org/apache/parquet/column/values/dictionary/DictionaryValuesWriter/PlainLongDictionaryValuesWriter/fallBackDictionaryEncodedData(org.apache.parquet.column.values.ValuesWriter)#org/apache/parquet/column/values/dictionary/DictionaryValuesWriter/PlainLongDictionaryValuesWriter/getDictionarySize()
org/apache/parquet/column/values/dictionary/DictionaryValuesWriter/PlainLongDictionaryValuesWriter/fallBackDictionaryEncodedData(org.apache.parquet.column.values.ValuesWriter)#org/apache/parquet/column/values/dictionary/IntList/iterator()
org/apache/parquet/column/values/dictionary/DictionaryValuesWriter/PlainLongDictionaryValuesWriter/writeLong(long)#org/apache/parquet/column/values/dictionary/IntList/add(int)
org/apache/parquet/column/values/dictionary/DictionaryValuesWriter/PlainLongDictionaryValuesWriter/toDictPageAndClose()#org/apache/parquet/column/values/plain/PlainValuesWriter/writeLong(long)
org/apache/parquet/column/values/dictionary/DictionaryValuesWriter/PlainLongDictionaryValuesWriter/toDictPageAndClose()#org/apache/parquet/column/values/dictionary/DictionaryValuesWriter/dictPage(org.apache.parquet.column.values.ValuesWriter)
org/apache/parquet/column/values/dictionary/DictionaryValuesWriter/PlainLongDictionaryValuesWriter/toDictPageAndClose()#org/apache/parquet/column/values/plain/PlainValuesWriter/PlainValuesWriter(int,int,org.apache.parquet.bytes.ByteBufferAllocator)
org/apache/parquet/thrift/TestProtocolReadToWrite/testEnumMissingSchema()#org/apache/parquet/thrift/TestProtocolReadToWrite/CountingErrorHandler/CountingErrorHandler()
org/apache/parquet/thrift/TestProtocolReadToWrite/testEnumMissingSchema()#org/apache/parquet/thrift/TestProtocolReadToWrite/protocol(java.io.OutputStream)
org/apache/parquet/thrift/TestProtocolReadToWrite/testEnumMissingSchema()#org/apache/parquet/thrift/BufferedProtocolReadToWrite/BufferedProtocolReadToWrite(org.apache.parquet.thrift.struct.ThriftType.StructType,org.apache.parquet.thrift.FieldIgnoredHandler)
org/apache/parquet/thrift/TestProtocolReadToWrite/testEnumMissingSchema()#org/apache/parquet/thrift/BufferedProtocolReadToWrite/readOne(org.apache.parquet.hadoop.thrift.TProtocol,org.apache.parquet.hadoop.thrift.TProtocol)
org/apache/parquet/thrift/TestProtocolReadToWrite/testEnumMissingSchema()#java/io/ByteArrayInputStream/ByteArrayInputStream(byte[])
org/apache/parquet/thrift/TestProtocolReadToWrite/testEnumMissingSchema()#java/lang/Throwable/getMessage()
org/apache/parquet/thrift/TestProtocolReadToWrite/testEnumMissingSchema()#org/apache/parquet/thrift/TestProtocolReadToWrite/protocol(java.io.InputStream)
org/apache/parquet/thrift/TestProtocolReadToWrite/testEnumMissingSchema()#java/io/ByteArrayOutputStream/toByteArray()
org/apache/parquet/thrift/TestProtocolReadToWrite/testEnumMissingSchema()#java/io/ByteArrayOutputStream/ByteArrayOutputStream()
org/apache/parquet/thrift/TestProtocolReadToWrite/testEnumMissingSchema()#java/lang/Object/Object()
org/apache/parquet/thrift/TestProtocolReadToWrite/testEnumMissingSchema()#org/apache/parquet/thrift/ThriftSchemaConverter/toStructType(java.lang.Class)
org/apache/parquet/thrift/TestProtocolReadToWrite/testEnumMissingSchema()#java/lang/Throwable/getCause()
org/apache/parquet/thrift/TestProtocolReadToWrite/testEnumMissingSchema()#java/lang/Object/getClass()
org/apache/parquet/thrift/TestProtocolReadToWrite/testEnumMissingSchema()#java/lang/String/contains(java.lang.CharSequence)
org/apache/parquet/thrift/TestProtocolReadToWrite/testMapSet()#java/util/HashMap/HashMap()
org/apache/parquet/thrift/TestProtocolReadToWrite/testMapSet()#java/util/Set/add(E)
org/apache/parquet/thrift/TestProtocolReadToWrite/testMapSet()#org/apache/parquet/thrift/TestProtocolReadToWrite/writeReadCompare(org.apache.parquet.scrooge.TBase)
org/apache/parquet/thrift/TestProtocolReadToWrite/testMapSet()#java/util/Map/put(K,V)
org/apache/parquet/thrift/TestProtocolReadToWrite/testMapSet()#java/util/HashSet/HashSet()
org/apache/parquet/thrift/TestProtocolReadToWrite/protocol(java.io.OutputStream)#java/lang/Object/Object()
org/apache/parquet/thrift/TestProtocolReadToWrite/testIncompatibleSchemaRecord()#org/apache/parquet/thrift/TestProtocolReadToWrite/protocol(java.io.OutputStream)
org/apache/parquet/thrift/TestProtocolReadToWrite/testIncompatibleSchemaRecord()#org/apache/parquet/thrift/BufferedProtocolReadToWrite/BufferedProtocolReadToWrite(org.apache.parquet.thrift.struct.ThriftType.StructType,org.apache.parquet.thrift.FieldIgnoredHandler)
org/apache/parquet/thrift/TestProtocolReadToWrite/testIncompatibleSchemaRecord()#org/apache/parquet/thrift/BufferedProtocolReadToWrite/readOne(org.apache.parquet.hadoop.thrift.TProtocol,org.apache.parquet.hadoop.thrift.TProtocol)
org/apache/parquet/thrift/TestProtocolReadToWrite/testIncompatibleSchemaRecord()#java/io/ByteArrayInputStream/ByteArrayInputStream(byte[])
org/apache/parquet/thrift/TestProtocolReadToWrite/testIncompatibleSchemaRecord()#java/lang/Throwable/getMessage()
org/apache/parquet/thrift/TestProtocolReadToWrite/testIncompatibleSchemaRecord()#org/apache/parquet/thrift/TestProtocolReadToWrite/protocol(java.io.InputStream)
org/apache/parquet/thrift/TestProtocolReadToWrite/testIncompatibleSchemaRecord()#java/lang/String/contains(java.lang.CharSequence)
org/apache/parquet/thrift/TestProtocolReadToWrite/testIncompatibleSchemaRecord()#java/lang/String/getBytes()
org/apache/parquet/thrift/TestProtocolReadToWrite/testIncompatibleSchemaRecord()#java/io/ByteArrayOutputStream/ByteArrayOutputStream()
org/apache/parquet/thrift/TestProtocolReadToWrite/testIncompatibleSchemaRecord()#org/apache/parquet/thrift/TestProtocolReadToWrite/CountingErrorHandler/CountingErrorHandler()
org/apache/parquet/thrift/TestProtocolReadToWrite/testIncompatibleSchemaRecord()#java/util/ArrayList/ArrayList()
org/apache/parquet/thrift/TestProtocolReadToWrite/testIncompatibleSchemaRecord()#org/apache/parquet/thrift/ThriftSchemaConverter/toStructType(java.lang.Class)
org/apache/parquet/thrift/TestProtocolReadToWrite/testIncompatibleSchemaRecord()#java/lang/Throwable/getCause()
org/apache/parquet/thrift/TestProtocolReadToWrite/testIncompatibleSchemaRecord()#java/nio/ByteBuffer/wrap(byte[])
org/apache/parquet/thrift/TestProtocolReadToWrite/testIncompatibleSchemaRecord()#java/io/ByteArrayOutputStream/toByteArray()
org/apache/parquet/thrift/TestProtocolReadToWrite/testWriteRead()#java/util/ArrayList/ArrayList()
org/apache/parquet/thrift/TestProtocolReadToWrite/testWriteRead()#java/util/Arrays/asList(T[])
org/apache/parquet/thrift/TestProtocolReadToWrite/testWriteRead()#org/apache/parquet/thrift/TestProtocolReadToWrite/writeReadCompare(org.apache.parquet.scrooge.TBase)
org/apache/parquet/thrift/TestProtocolReadToWrite/testWriteRead()#java/lang/Object/Object()
org/apache/parquet/thrift/TestProtocolReadToWrite/writeReadCompare(org.apache.parquet.scrooge.TBase)#java/lang/Class/getSimpleName()
org/apache/parquet/thrift/TestProtocolReadToWrite/writeReadCompare(org.apache.parquet.scrooge.TBase)#org/apache/parquet/thrift/TestProtocolReadToWrite/protocol(java.io.OutputStream)
org/apache/parquet/thrift/TestProtocolReadToWrite/writeReadCompare(org.apache.parquet.scrooge.TBase)#org/apache/parquet/thrift/BufferedProtocolReadToWrite/BufferedProtocolReadToWrite(org.apache.parquet.thrift.struct.ThriftType.StructType)
org/apache/parquet/thrift/TestProtocolReadToWrite/writeReadCompare(org.apache.parquet.scrooge.TBase)#java/io/ByteArrayInputStream/ByteArrayInputStream(byte[])
org/apache/parquet/thrift/TestProtocolReadToWrite/writeReadCompare(org.apache.parquet.scrooge.TBase)#org/apache/parquet/thrift/ThriftSchemaConverter/toStructType(java.lang.Class)
org/apache/parquet/thrift/TestProtocolReadToWrite/writeReadCompare(org.apache.parquet.scrooge.TBase)#org/apache/parquet/thrift/ProtocolPipe/readOne(org.apache.parquet.hadoop.thrift.TProtocol,org.apache.parquet.hadoop.thrift.TProtocol)
org/apache/parquet/thrift/TestProtocolReadToWrite/writeReadCompare(org.apache.parquet.scrooge.TBase)#org/apache/parquet/thrift/TestProtocolReadToWrite/protocol(java.io.InputStream)
org/apache/parquet/thrift/TestProtocolReadToWrite/writeReadCompare(org.apache.parquet.scrooge.TBase)#java/io/ByteArrayOutputStream/toByteArray()
org/apache/parquet/thrift/TestProtocolReadToWrite/writeReadCompare(org.apache.parquet.scrooge.TBase)#java/lang/Object/getClass()
org/apache/parquet/thrift/TestProtocolReadToWrite/writeReadCompare(org.apache.parquet.scrooge.TBase)#org/apache/parquet/thrift/ProtocolReadToWrite/ProtocolReadToWrite()
org/apache/parquet/thrift/TestProtocolReadToWrite/writeReadCompare(org.apache.parquet.scrooge.TBase)#java/io/ByteArrayOutputStream/ByteArrayOutputStream()
org/apache/parquet/thrift/TestProtocolReadToWrite/protocol(java.io.InputStream)#java/lang/Object/Object()
org/apache/parquet/thrift/TestProtocolReadToWrite/testOneOfEach()#java/util/ArrayList/ArrayList()
org/apache/parquet/thrift/TestProtocolReadToWrite/testOneOfEach()#org/apache/parquet/thrift/TestProtocolReadToWrite/writeReadCompare(org.apache.parquet.scrooge.TBase)
org/apache/parquet/thrift/TestProtocolReadToWrite/testOneOfEach()#java/nio/ByteBuffer/wrap(byte[])
org/apache/parquet/thrift/TestProtocolReadToWrite/testOneOfEach()#java/lang/String/getBytes()
org/apache/parquet/thrift/TestProtocolReadToWrite/testUnionWithStructWithUnknownField()#org/apache/parquet/thrift/TestProtocolReadToWrite/CountingErrorHandler/CountingErrorHandler()
org/apache/parquet/thrift/TestProtocolReadToWrite/testUnionWithStructWithUnknownField()#org/apache/parquet/thrift/TestProtocolReadToWrite/protocol(java.io.OutputStream)
org/apache/parquet/thrift/TestProtocolReadToWrite/testUnionWithStructWithUnknownField()#org/apache/parquet/thrift/BufferedProtocolReadToWrite/BufferedProtocolReadToWrite(org.apache.parquet.thrift.struct.ThriftType.StructType,org.apache.parquet.thrift.FieldIgnoredHandler)
org/apache/parquet/thrift/TestProtocolReadToWrite/testUnionWithStructWithUnknownField()#org/apache/parquet/thrift/BufferedProtocolReadToWrite/readOne(org.apache.parquet.hadoop.thrift.TProtocol,org.apache.parquet.hadoop.thrift.TProtocol)
org/apache/parquet/thrift/TestProtocolReadToWrite/testUnionWithStructWithUnknownField()#java/io/ByteArrayInputStream/ByteArrayInputStream(byte[])
org/apache/parquet/thrift/TestProtocolReadToWrite/testUnionWithStructWithUnknownField()#org/apache/parquet/thrift/ThriftSchemaConverter/toStructType(java.lang.Class)
org/apache/parquet/thrift/TestProtocolReadToWrite/testUnionWithStructWithUnknownField()#org/apache/parquet/thrift/TestProtocolReadToWrite/protocol(java.io.InputStream)
org/apache/parquet/thrift/TestProtocolReadToWrite/testUnionWithStructWithUnknownField()#java/io/ByteArrayOutputStream/toByteArray()
org/apache/parquet/thrift/TestProtocolReadToWrite/testUnionWithStructWithUnknownField()#java/io/ByteArrayOutputStream/ByteArrayOutputStream()
org/apache/parquet/thrift/TestProtocolReadToWrite/testEmptyStruct()#org/apache/parquet/thrift/TestProtocolReadToWrite/writeReadCompare(org.apache.parquet.scrooge.TBase)
org/apache/parquet/thrift/TestProtocolReadToWrite/testUnionWithExtraOrNoValues()#org/apache/parquet/thrift/TestProtocolReadToWrite/CountingErrorHandler/CountingErrorHandler()
org/apache/parquet/thrift/TestProtocolReadToWrite/testUnionWithExtraOrNoValues()#org/apache/parquet/thrift/TestProtocolReadToWrite/protocol(java.io.OutputStream)
org/apache/parquet/thrift/TestProtocolReadToWrite/testUnionWithExtraOrNoValues()#org/apache/parquet/thrift/BufferedProtocolReadToWrite/BufferedProtocolReadToWrite(org.apache.parquet.thrift.struct.ThriftType.StructType,org.apache.parquet.thrift.FieldIgnoredHandler)
org/apache/parquet/thrift/TestProtocolReadToWrite/testUnionWithExtraOrNoValues()#org/apache/parquet/thrift/BufferedProtocolReadToWrite/readOne(org.apache.parquet.hadoop.thrift.TProtocol,org.apache.parquet.hadoop.thrift.TProtocol)
org/apache/parquet/thrift/TestProtocolReadToWrite/testUnionWithExtraOrNoValues()#java/io/ByteArrayInputStream/ByteArrayInputStream(byte[])
org/apache/parquet/thrift/TestProtocolReadToWrite/testUnionWithExtraOrNoValues()#java/lang/Throwable/getMessage()
org/apache/parquet/thrift/TestProtocolReadToWrite/testUnionWithExtraOrNoValues()#org/apache/parquet/thrift/TestProtocolReadToWrite/protocol(java.io.InputStream)
org/apache/parquet/thrift/TestProtocolReadToWrite/testUnionWithExtraOrNoValues()#java/lang/String/startsWith(java.lang.String)
org/apache/parquet/thrift/TestProtocolReadToWrite/testUnionWithExtraOrNoValues()#java/io/ByteArrayOutputStream/toByteArray()
org/apache/parquet/thrift/TestProtocolReadToWrite/testUnionWithExtraOrNoValues()#java/lang/Object/getClass()
org/apache/parquet/thrift/TestProtocolReadToWrite/testUnionWithExtraOrNoValues()#java/io/ByteArrayOutputStream/ByteArrayOutputStream()
org/apache/parquet/thrift/TestProtocolReadToWrite/testUnionWithExtraOrNoValues()#java/lang/Object/Object()
org/apache/parquet/thrift/TestProtocolReadToWrite/testUnionWithExtraOrNoValues()#org/apache/parquet/thrift/ThriftSchemaConverter/toStructType(java.lang.Class)
org/apache/parquet/thrift/TestProtocolReadToWrite/testUnionWithExtraOrNoValues()#java/lang/Throwable/getCause()
org/apache/parquet/thrift/TestProtocolReadToWrite/TestExtraFieldWhenFieldIndexIsNotStartFromZero()#org/apache/parquet/thrift/TestProtocolReadToWrite/protocol(java.io.OutputStream)
org/apache/parquet/thrift/TestProtocolReadToWrite/TestExtraFieldWhenFieldIndexIsNotStartFromZero()#org/apache/parquet/thrift/BufferedProtocolReadToWrite/BufferedProtocolReadToWrite(org.apache.parquet.thrift.struct.ThriftType.StructType,org.apache.parquet.thrift.FieldIgnoredHandler)
org/apache/parquet/thrift/TestProtocolReadToWrite/TestExtraFieldWhenFieldIndexIsNotStartFromZero()#org/apache/parquet/thrift/BufferedProtocolReadToWrite/readOne(org.apache.parquet.hadoop.thrift.TProtocol,org.apache.parquet.hadoop.thrift.TProtocol)
org/apache/parquet/thrift/TestProtocolReadToWrite/TestExtraFieldWhenFieldIndexIsNotStartFromZero()#java/io/ByteArrayInputStream/ByteArrayInputStream(byte[])
org/apache/parquet/thrift/TestProtocolReadToWrite/TestExtraFieldWhenFieldIndexIsNotStartFromZero()#org/apache/parquet/thrift/TestProtocolReadToWrite/TestExtraFieldWhenFieldIndexIsNotStartFromZero()/$anonymous1/()
org/apache/parquet/thrift/TestProtocolReadToWrite/TestExtraFieldWhenFieldIndexIsNotStartFromZero()#org/apache/parquet/thrift/ThriftSchemaConverter/toStructType(java.lang.Class)
org/apache/parquet/thrift/TestProtocolReadToWrite/TestExtraFieldWhenFieldIndexIsNotStartFromZero()#org/apache/parquet/thrift/TestProtocolReadToWrite/protocol(java.io.InputStream)
org/apache/parquet/thrift/TestProtocolReadToWrite/TestExtraFieldWhenFieldIndexIsNotStartFromZero()#java/io/ByteArrayOutputStream/toByteArray()
org/apache/parquet/thrift/TestProtocolReadToWrite/TestExtraFieldWhenFieldIndexIsNotStartFromZero()#java/io/ByteArrayOutputStream/ByteArrayOutputStream()
org/apache/parquet/thrift/TestProtocolReadToWrite/TestExtraFieldWhenFieldIndexIsNotStartFromZero()#java/lang/Object/Object()
org/apache/parquet/thrift/TestProtocolReadToWrite/testUnrecognizedUnionMemberSchema()#org/apache/parquet/thrift/TestProtocolReadToWrite/CountingErrorHandler/CountingErrorHandler()
org/apache/parquet/thrift/TestProtocolReadToWrite/testUnrecognizedUnionMemberSchema()#org/apache/parquet/thrift/TestProtocolReadToWrite/protocol(java.io.OutputStream)
org/apache/parquet/thrift/TestProtocolReadToWrite/testUnrecognizedUnionMemberSchema()#org/apache/parquet/thrift/BufferedProtocolReadToWrite/BufferedProtocolReadToWrite(org.apache.parquet.thrift.struct.ThriftType.StructType,org.apache.parquet.thrift.FieldIgnoredHandler)
org/apache/parquet/thrift/TestProtocolReadToWrite/testUnrecognizedUnionMemberSchema()#org/apache/parquet/thrift/BufferedProtocolReadToWrite/readOne(org.apache.parquet.hadoop.thrift.TProtocol,org.apache.parquet.hadoop.thrift.TProtocol)
org/apache/parquet/thrift/TestProtocolReadToWrite/testUnrecognizedUnionMemberSchema()#java/io/ByteArrayInputStream/ByteArrayInputStream(byte[])
org/apache/parquet/thrift/TestProtocolReadToWrite/testUnrecognizedUnionMemberSchema()#java/lang/Throwable/getMessage()
org/apache/parquet/thrift/TestProtocolReadToWrite/testUnrecognizedUnionMemberSchema()#org/apache/parquet/thrift/TestProtocolReadToWrite/protocol(java.io.InputStream)
org/apache/parquet/thrift/TestProtocolReadToWrite/testUnrecognizedUnionMemberSchema()#java/lang/String/startsWith(java.lang.String)
org/apache/parquet/thrift/TestProtocolReadToWrite/testUnrecognizedUnionMemberSchema()#java/io/ByteArrayOutputStream/toByteArray()
org/apache/parquet/thrift/TestProtocolReadToWrite/testUnrecognizedUnionMemberSchema()#java/lang/Object/getClass()
org/apache/parquet/thrift/TestProtocolReadToWrite/testUnrecognizedUnionMemberSchema()#java/io/ByteArrayOutputStream/ByteArrayOutputStream()
org/apache/parquet/thrift/TestProtocolReadToWrite/testUnrecognizedUnionMemberSchema()#java/lang/Object/Object()
org/apache/parquet/thrift/TestProtocolReadToWrite/testUnrecognizedUnionMemberSchema()#org/apache/parquet/thrift/ThriftSchemaConverter/toStructType(java.lang.Class)
org/apache/parquet/thrift/TestProtocolReadToWrite/testUnrecognizedUnionMemberSchema()#java/lang/Throwable/getCause()
org/apache/parquet/thrift/TestProtocolReadToWrite/testMissingFieldHandling()#org/apache/parquet/thrift/TestProtocolReadToWrite/protocol(java.io.OutputStream)
org/apache/parquet/thrift/TestProtocolReadToWrite/testMissingFieldHandling()#org/apache/parquet/thrift/BufferedProtocolReadToWrite/readOne(org.apache.parquet.hadoop.thrift.TProtocol,org.apache.parquet.hadoop.thrift.TProtocol)
org/apache/parquet/thrift/TestProtocolReadToWrite/testMissingFieldHandling()#java/io/ByteArrayInputStream/ByteArrayInputStream(byte[])
org/apache/parquet/thrift/TestProtocolReadToWrite/testMissingFieldHandling()#org/apache/parquet/thrift/ThriftSchemaConverter/toStructType(java.lang.Class)
org/apache/parquet/thrift/TestProtocolReadToWrite/testMissingFieldHandling()#org/apache/parquet/thrift/TestProtocolReadToWrite/protocol(java.io.InputStream)
org/apache/parquet/thrift/TestProtocolReadToWrite/testMissingFieldHandling()#java/io/ByteArrayOutputStream/toByteArray()
org/apache/parquet/thrift/TestProtocolReadToWrite/testMissingFieldHandling()#java/io/ByteArrayOutputStream/ByteArrayOutputStream()
org/apache/parquet/thrift/TestProtocolReadToWrite/testMissingFieldHandling()#org/apache/parquet/thrift/TestProtocolReadToWrite/testMissingFieldHandling()/$anonymous1/()
org/apache/parquet/thrift/TestProtocolReadToWrite/testMissingFieldHandling()#org/apache/parquet/thrift/BufferedProtocolReadToWrite/BufferedProtocolReadToWrite(org.apache.parquet.thrift.struct.ThriftType.StructType,org.apache.parquet.thrift.FieldIgnoredHandler)
org/apache/parquet/thrift/TestProtocolReadToWrite/testMissingFieldHandling()#java/lang/Class/newInstance()
org/apache/parquet/avro/AvroConverters/BinaryConverter/addBinary(org.apache.parquet.io.api.Binary)#org/apache/parquet/avro/AvroConverters/BinaryConverter/convert(org.apache.parquet.io.api.Binary)
org/apache/parquet/avro/AvroConverters/BinaryConverter/addBinary(org.apache.parquet.io.api.Binary)#org/apache/parquet/avro/ParentValueContainer/add(java.lang.Object)
org/apache/parquet/avro/AvroConverters/BinaryConverter/addValueFromDictionary(int)#org/apache/parquet/avro/ParentValueContainer/add(java.lang.Object)
org/apache/parquet/avro/AvroConverters/BinaryConverter/setDictionary(org.apache.parquet.column.Dictionary)#org/apache/parquet/column/Dictionary/decodeToBinary(int)
org/apache/parquet/avro/AvroConverters/BinaryConverter/setDictionary(org.apache.parquet.column.Dictionary)#org/apache/parquet/avro/AvroConverters/BinaryConverter/convert(org.apache.parquet.io.api.Binary)
org/apache/parquet/avro/AvroConverters/BinaryConverter/setDictionary(org.apache.parquet.column.Dictionary)#org/apache/parquet/column/Dictionary/getMaxId()
org/apache/parquet/avro/AvroRecordConverter/MapConverter/MapKeyValueConverter/getConverter(int)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/parquet/avro/AvroRecordConverter/MapConverter/MapKeyValueConverter/end()#java/util/Map/put(K,V)
org/apache/parquet/hadoop/DictionaryPageReader/reusableCopy(org.apache.parquet.column.page.DictionaryPage)#org/apache/parquet/column/page/DictionaryPage/getBytes()
org/apache/parquet/hadoop/DictionaryPageReader/reusableCopy(org.apache.parquet.column.page.DictionaryPage)#org/apache/parquet/column/page/DictionaryPage/DictionaryPage(org.apache.parquet.bytes.BytesInput,int,org.apache.parquet.column.Encoding)
org/apache/parquet/hadoop/DictionaryPageReader/reusableCopy(org.apache.parquet.column.page.DictionaryPage)#org/apache/parquet/column/page/DictionaryPage/getEncoding()
org/apache/parquet/hadoop/DictionaryPageReader/reusableCopy(org.apache.parquet.column.page.DictionaryPage)#org/apache/parquet/bytes/BytesInput/from(byte[])
org/apache/parquet/hadoop/DictionaryPageReader/reusableCopy(org.apache.parquet.column.page.DictionaryPage)#org/apache/parquet/io/ParquetDecodingException/ParquetDecodingException(java.lang.String,java.lang.Throwable)
org/apache/parquet/hadoop/DictionaryPageReader/reusableCopy(org.apache.parquet.column.page.DictionaryPage)#org/apache/parquet/column/page/DictionaryPage/getDictionarySize()
org/apache/parquet/hadoop/DictionaryPageReader/reusableCopy(org.apache.parquet.column.page.DictionaryPage)#org/apache/parquet/bytes/BytesInput/toByteArray()
org/apache/parquet/hadoop/DictionaryPageReader/hasDictionaryPage(org.apache.parquet.hadoop.metadata.ColumnChunkMetaData)#org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/getEncodingStats()
org/apache/parquet/hadoop/DictionaryPageReader/hasDictionaryPage(org.apache.parquet.hadoop.metadata.ColumnChunkMetaData)#java/util/Set/contains(java.lang.Object)
org/apache/parquet/hadoop/DictionaryPageReader/hasDictionaryPage(org.apache.parquet.hadoop.metadata.ColumnChunkMetaData)#org/apache/parquet/hadoop/metadata/ColumnChunkMetaData/getEncodings()
org/apache/parquet/hadoop/DictionaryPageReader/hasDictionaryPage(org.apache.parquet.hadoop.metadata.ColumnChunkMetaData)#org/apache/parquet/column/EncodingStats/hasDictionaryEncodedPages()
org/apache/parquet/hadoop/DictionaryPageReader/hasDictionaryPage(org.apache.parquet.hadoop.metadata.ColumnChunkMetaData)#org/apache/parquet/column/EncodingStats/hasDictionaryPages()
org/apache/parquet/hadoop/DictionaryPageReader/readDictionaryPage(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/hadoop/DictionaryPageReader/reusableCopy(org.apache.parquet.column.page.DictionaryPage)
org/apache/parquet/hadoop/DictionaryPageReader/readDictionaryPage(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/hadoop/DictionaryPageReader/hasDictionaryPage(org.apache.parquet.hadoop.metadata.ColumnChunkMetaData)
org/apache/parquet/hadoop/DictionaryPageReader/readDictionaryPage(org.apache.parquet.column.ColumnDescriptor)#java/util/Map/get(java.lang.Object)
org/apache/parquet/hadoop/DictionaryPageReader/readDictionaryPage(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/ColumnDescriptor/getPath()
org/apache/parquet/hadoop/DictionaryPageReader/readDictionaryPage(org.apache.parquet.column.ColumnDescriptor)#java/util/Map/containsKey(java.lang.Object)
org/apache/parquet/hadoop/DictionaryPageReader/readDictionaryPage(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/Strings/join(java.lang.String[],java.lang.String)
org/apache/parquet/hadoop/DictionaryPageReader/readDictionaryPage(org.apache.parquet.column.ColumnDescriptor)#java/util/Map/put(K,V)
org/apache/parquet/hadoop/DictionaryPageReader/readDictionaryPage(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/io/ParquetDecodingException/ParquetDecodingException(java.lang.String)
org/apache/parquet/hadoop/DictionaryPageReader/readDictionaryPage(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/io/ParquetDecodingException/ParquetDecodingException(java.lang.String,java.lang.Throwable)
org/apache/parquet/hadoop/DictionaryPageReader/readDictionaryPage(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/hadoop/ParquetFileReader/readDictionary(org.apache.parquet.hadoop.metadata.ColumnChunkMetaData)
org/apache/parquet/hadoop/DictionaryPageReader/readDictionaryPage(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/hadoop/ColumnChunkPageReadStore/readDictionaryPage(org.apache.parquet.column.ColumnDescriptor)
org/apache/parquet/thrift/TestThriftRecordConverter/testUnknownEnumThrowsGoodException()#org/apache/parquet/thrift/struct/ThriftField/ThriftField(java.lang.String,short,org.apache.parquet.thrift.struct.ThriftField.Requirement,org.apache.parquet.thrift.struct.ThriftType)
org/apache/parquet/thrift/TestThriftRecordConverter/testUnknownEnumThrowsGoodException()#java/util/ArrayList/ArrayList()
org/apache/parquet/thrift/TestThriftRecordConverter/testUnknownEnumThrowsGoodException()#org/apache/parquet/thrift/ThriftRecordConverter/FieldEnumConverter/addBinary(org.apache.parquet.io.api.Binary)
org/apache/parquet/thrift/TestThriftRecordConverter/testUnknownEnumThrowsGoodException()#org/apache/parquet/thrift/ThriftRecordConverter/FieldEnumConverter/FieldEnumConverter(java.util.List,org.apache.parquet.thrift.struct.ThriftField)
org/apache/parquet/thrift/TestThriftRecordConverter/testUnknownEnumThrowsGoodException()#org/apache/parquet/thrift/struct/ThriftType/EnumValue/EnumValue(int,java.lang.String)
org/apache/parquet/thrift/TestThriftRecordConverter/testUnknownEnumThrowsGoodException()#org/apache/parquet/thrift/struct/ThriftType/EnumType/EnumType(java.util.List)
org/apache/parquet/thrift/TestThriftRecordConverter/testUnknownEnumThrowsGoodException()#java/lang/Throwable/getMessage()
org/apache/parquet/thrift/TestThriftRecordConverter/testUnknownEnumThrowsGoodException()#java/util/Arrays/asList(T[])
org/apache/parquet/thrift/TestThriftRecordConverter/testUnknownEnumThrowsGoodException()#org/apache/parquet/io/api/Binary/fromString(java.lang.String)
org/apache/parquet/thrift/TestThriftRecordConverter/constructorDoesNotRequireStructOrUnionTypeMeta()#org/apache/parquet/thrift/struct/ThriftType/fromJSON(java.lang.String)
org/apache/parquet/thrift/TestThriftRecordConverter/constructorDoesNotRequireStructOrUnionTypeMeta()#java/io/File/File(java.lang.String)
org/apache/parquet/thrift/TestThriftRecordConverter/constructorDoesNotRequireStructOrUnionTypeMeta()#org/apache/parquet/Files/readAllLines(java.io.File,java.nio.charset.Charset)
org/apache/parquet/thrift/TestThriftRecordConverter/constructorDoesNotRequireStructOrUnionTypeMeta()#org/apache/parquet/thrift/ThriftSchemaConverter/convert(java.lang.Class)
org/apache/parquet/thrift/TestThriftRecordConverter/constructorDoesNotRequireStructOrUnionTypeMeta()#org/apache/parquet/thrift/ThriftRecordConverter/ThriftRecordConverter(org.apache.parquet.thrift.ThriftReader,java.lang.String,org.apache.parquet.schema.MessageType,org.apache.parquet.thrift.struct.ThriftType.StructType)
org/apache/parquet/thrift/TestThriftRecordConverter/constructorDoesNotRequireStructOrUnionTypeMeta()#org/apache/parquet/thrift/TestThriftRecordConverter/constructorDoesNotRequireStructOrUnionTypeMeta()/$anonymous1/()
org/apache/parquet/thrift/TestThriftRecordConverter/constructorDoesNotRequireStructOrUnionTypeMeta()#org/apache/parquet/Strings/join(java.lang.Iterable,java.lang.String)
org/apache/parquet/thrift/TestThriftRecordConverter/constructorDoesNotRequireStructOrUnionTypeMeta()#java/nio/charset/Charset/forName(java.lang.String)
org/apache/parquet/thrift/TestThriftRecordConverter/constructorDoesNotRequireStructOrUnionTypeMeta()#org/apache/parquet/thrift/ThriftSchemaConverter/ThriftSchemaConverter()
org/apache/parquet/column/impl/ColumnReaderImpl/RLEIntIterator/nextInt()#org/apache/parquet/column/values/rle/RunLengthBitPackingHybridDecoder/readInt()
org/apache/parquet/column/impl/ColumnReaderImpl/RLEIntIterator/nextInt()#org/apache/parquet/io/ParquetDecodingException/ParquetDecodingException(java.lang.Throwable)
org/apache/parquet/avro/TestStringBehavior/testSpecific()#org/apache/parquet/avro/AvroParquetReader/builder(org.apache.parquet.hadoop.Path)
org/apache/parquet/avro/TestStringBehavior/testSpecific()#org/apache/parquet/avro/TestStringBehavior/keyClass(java.lang.Object)
org/apache/parquet/avro/TestStringBehavior/testSpecific()#org/apache/parquet/avro/AvroReadSupport/setAvroReadSchema(org.apache.parquet.hadoop.Configuration,org.apache.parquet.pig.Schema)
org/apache/parquet/avro/TestStringBehavior/testSpecific()#java/lang/Object/Object()
org/apache/parquet/avro/TestStringBehavior/testSpecific()#org/apache/parquet/avro/AvroReadSupport/setAvroDataSupplier(org.apache.parquet.hadoop.Configuration,java.lang.Class)
org/apache/parquet/avro/TestStringBehavior/keyClass(java.lang.Object)#java/util/Map/keySet()
org/apache/parquet/avro/TestStringBehavior/testReflectJavaClass()#org/apache/parquet/hadoop/ParquetReader/read()
org/apache/parquet/avro/TestStringBehavior/testReflectJavaClass()#org/apache/parquet/avro/AvroReadSupport/setAvroReadSchema(org.apache.parquet.hadoop.Configuration,org.apache.parquet.pig.Schema)
org/apache/parquet/avro/TestStringBehavior/testReflectJavaClass()#java/io/PrintStream/println(char[])
org/apache/parquet/avro/TestStringBehavior/testReflectJavaClass()#java/lang/Object/getClass()
org/apache/parquet/avro/TestStringBehavior/testReflectJavaClass()#org/apache/parquet/avro/AvroReadSupport/setRequestedProjection(org.apache.parquet.hadoop.Configuration,org.apache.parquet.pig.Schema)
org/apache/parquet/avro/TestStringBehavior/testReflectJavaClass()#java/lang/Object/Object()
org/apache/parquet/avro/TestStringBehavior/testReflectJavaClass()#org/apache/parquet/avro/AvroReadSupport/setAvroDataSupplier(org.apache.parquet.hadoop.Configuration,java.lang.Class)
org/apache/parquet/avro/TestStringBehavior/testReflectJavaClass()#org/apache/parquet/hadoop/ParquetReader/close()
org/apache/parquet/avro/TestStringBehavior/testReflectJavaClass()#org/apache/parquet/avro/AvroParquetReader/builder(org.apache.parquet.hadoop.Path)
org/apache/parquet/avro/TestStringBehavior/testReflect()#org/apache/parquet/hadoop/ParquetReader/read()
org/apache/parquet/avro/TestStringBehavior/testReflect()#org/apache/parquet/avro/TestStringBehavior/keyClass(java.lang.Object)
org/apache/parquet/avro/TestStringBehavior/testReflect()#org/apache/parquet/avro/AvroReadSupport/setAvroReadSchema(org.apache.parquet.hadoop.Configuration,org.apache.parquet.pig.Schema)
org/apache/parquet/avro/TestStringBehavior/testReflect()#java/lang/Object/getClass()
org/apache/parquet/avro/TestStringBehavior/testReflect()#java/lang/Object/Object()
org/apache/parquet/avro/TestStringBehavior/testReflect()#org/apache/parquet/avro/AvroReadSupport/setAvroDataSupplier(org.apache.parquet.hadoop.Configuration,java.lang.Class)
org/apache/parquet/avro/TestStringBehavior/testReflect()#org/apache/parquet/hadoop/ParquetReader/close()
org/apache/parquet/avro/TestStringBehavior/testReflect()#org/apache/parquet/avro/AvroParquetReader/builder(org.apache.parquet.hadoop.Path)
org/apache/parquet/avro/TestStringBehavior/writeDataFiles()#java/math/BigDecimal/toString()
org/apache/parquet/avro/TestStringBehavior/writeDataFiles()#org/apache/parquet/avro/AvroParquetWriter/builder(org.apache.parquet.hadoop.Path)
org/apache/parquet/avro/TestStringBehavior/writeDataFiles()#java/io/File/deleteOnExit()
org/apache/parquet/avro/TestStringBehavior/writeDataFiles()#java/io/File/getPath()
org/apache/parquet/avro/TestStringBehavior/writeDataFiles()#java/io/File/delete()
org/apache/parquet/avro/TestStringBehavior/writeDataFiles()#java/lang/Object/Object()
org/apache/parquet/avro/TestStringBehavior/testGeneric()#org/apache/parquet/avro/AvroParquetReader/builder(org.apache.parquet.hadoop.Path)
org/apache/parquet/avro/TestStringBehavior/testGeneric()#org/apache/parquet/avro/TestStringBehavior/keyClass(java.lang.Object)
org/apache/parquet/avro/TestStringBehavior/testGeneric()#org/apache/parquet/avro/AvroReadSupport/setAvroReadSchema(org.apache.parquet.hadoop.Configuration,org.apache.parquet.pig.Schema)
org/apache/parquet/avro/TestStringBehavior/testGeneric()#java/lang/Object/Object()
org/apache/parquet/avro/TestStringBehavior/testGeneric()#org/apache/parquet/avro/AvroReadSupport/setAvroDataSupplier(org.apache.parquet.hadoop.Configuration,java.lang.Class)
org/apache/parquet/encodings/FileEncodingsIT/PageValuesValidator/validateNextValue(java.lang.Object)#java/lang/String/format(java.lang.String,java.lang.Object[])
org/apache/parquet/encodings/FileEncodingsIT/PageValuesValidator/validateNextValue(java.lang.Object)#java/util/List/get(int)
org/apache/parquet/encodings/FileEncodingsIT/PageValuesValidator/validateValuesForPage(int,int,org.apache.parquet.column.page.DictionaryPage,org.apache.parquet.column.page.DataPage,org.apache.parquet.column.ColumnDescriptor,java.util.List)#org/apache/parquet/column/impl/ColumnReaderImpl/ColumnReaderImpl(org.apache.parquet.column.ColumnDescriptor,org.apache.parquet.column.page.PageReader,org.apache.parquet.io.api.PrimitiveConverter,org.apache.parquet.VersionParser.ParsedVersion)
org/apache/parquet/encodings/FileEncodingsIT/PageValuesValidator/validateValuesForPage(int,int,org.apache.parquet.column.page.DictionaryPage,org.apache.parquet.column.page.DataPage,org.apache.parquet.column.ColumnDescriptor,java.util.List)#org/apache/parquet/statistics/TestStatistics/SingletonPageReader/SingletonPageReader(org.apache.parquet.column.page.DictionaryPage,org.apache.parquet.column.page.DataPage)
org/apache/parquet/encodings/FileEncodingsIT/PageValuesValidator/validateValuesForPage(int,int,org.apache.parquet.column.page.DictionaryPage,org.apache.parquet.column.page.DataPage,org.apache.parquet.column.ColumnDescriptor,java.util.List)#org/apache/parquet/column/ColumnDescriptor/getType()
org/apache/parquet/encodings/FileEncodingsIT/PageValuesValidator/validateValuesForPage(int,int,org.apache.parquet.column.page.DictionaryPage,org.apache.parquet.column.page.DataPage,org.apache.parquet.column.ColumnDescriptor,java.util.List)#org/apache/parquet/column/impl/ColumnReaderImpl/consume()
org/apache/parquet/encodings/FileEncodingsIT/PageValuesValidator/validateValuesForPage(int,int,org.apache.parquet.column.page.DictionaryPage,org.apache.parquet.column.page.DataPage,org.apache.parquet.column.ColumnDescriptor,java.util.List)#org/apache/parquet/encodings/FileEncodingsIT/PageValuesValidator/getConverter(int,int,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,java.util.List)
org/apache/parquet/encodings/FileEncodingsIT/PageValuesValidator/validateValuesForPage(int,int,org.apache.parquet.column.page.DictionaryPage,org.apache.parquet.column.page.DataPage,org.apache.parquet.column.ColumnDescriptor,java.util.List)#org/apache/parquet/column/impl/ColumnReaderImpl/writeCurrentValueToConverter()
org/apache/parquet/encodings/FileEncodingsIT/PageValuesValidator/validateValuesForPage(int,int,org.apache.parquet.column.page.DictionaryPage,org.apache.parquet.column.page.DataPage,org.apache.parquet.column.ColumnDescriptor,java.util.List)#org/apache/parquet/statistics/TestStatistics/SingletonPageReader/getTotalValueCount()
org/apache/parquet/encodings/FileEncodingsIT/PageValuesValidator/getConverter(int,int,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,java.util.List)#org/apache/parquet/encodings/FileEncodingsIT/PageValuesValidator/getConverter(int,int,org/apache/parquet/schema/PrimitiveType/PrimitiveTypeName,java/util/List)/$anonymous1/()
org/apache/parquet/encodings/FileEncodingsIT/PageValuesValidator/getConverter(int,int,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,java.util.List)#org/apache/parquet/schema/PrimitiveType/PrimitiveTypeName/convert(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeNameConverter)
org/apache/parquet/DirectWriterTest/writeDirect(org.apache.parquet.schema.MessageType,org.apache.parquet.DirectWriterTest.DirectWriter)#org/apache/parquet/DirectWriterTest/writeDirect(org.apache.parquet.schema.MessageType,org.apache.parquet.DirectWriterTest.DirectWriter,java.util.Map)
org/apache/parquet/DirectWriterTest/writeDirect(org.apache.parquet.schema.MessageType,org.apache.parquet.DirectWriterTest.DirectWriter)#java/util/HashMap/HashMap()
org/apache/parquet/DirectWriterTest/writeDirect(java.lang.String,org.apache.parquet.DirectWriterTest.DirectWriter,java.util.Map)#org/apache/parquet/schema/MessageTypeParser/parseMessageType(java.lang.String)
org/apache/parquet/DirectWriterTest/writeDirect(java.lang.String,org.apache.parquet.DirectWriterTest.DirectWriter,java.util.Map)#org/apache/parquet/DirectWriterTest/writeDirect(org.apache.parquet.schema.MessageType,org.apache.parquet.DirectWriterTest.DirectWriter,java.util.Map)
org/apache/parquet/DirectWriterTest/writeDirect(org.apache.parquet.schema.MessageType,org.apache.parquet.DirectWriterTest.DirectWriter,java.util.Map)#org/apache/parquet/hadoop/ParquetWriter/ParquetWriter(org.apache.parquet.hadoop.Path,org.apache.parquet.hadoop.api.WriteSupport)
org/apache/parquet/DirectWriterTest/writeDirect(org.apache.parquet.schema.MessageType,org.apache.parquet.DirectWriterTest.DirectWriter,java.util.Map)#java/util/UUID/randomUUID()
org/apache/parquet/DirectWriterTest/writeDirect(org.apache.parquet.schema.MessageType,org.apache.parquet.DirectWriterTest.DirectWriter,java.util.Map)#org/apache/parquet/hadoop/ParquetWriter/close()
org/apache/parquet/DirectWriterTest/writeDirect(org.apache.parquet.schema.MessageType,org.apache.parquet.DirectWriterTest.DirectWriter,java.util.Map)#org/apache/parquet/hadoop/ParquetWriter/write(T)
org/apache/parquet/DirectWriterTest/writeDirect(org.apache.parquet.schema.MessageType,org.apache.parquet.DirectWriterTest.DirectWriter,java.util.Map)#java/io/File/deleteOnExit()
org/apache/parquet/DirectWriterTest/writeDirect(org.apache.parquet.schema.MessageType,org.apache.parquet.DirectWriterTest.DirectWriter,java.util.Map)#java/util/UUID/toString()
org/apache/parquet/DirectWriterTest/writeDirect(org.apache.parquet.schema.MessageType,org.apache.parquet.DirectWriterTest.DirectWriter,java.util.Map)#java/io/File/delete()
org/apache/parquet/DirectWriterTest/writeDirect(org.apache.parquet.schema.MessageType,org.apache.parquet.DirectWriterTest.DirectWriter,java.util.Map)#java/io/File/getPath()
org/apache/parquet/DirectWriterTest/writeDirect(org.apache.parquet.schema.MessageType,org.apache.parquet.DirectWriterTest.DirectWriter,java.util.Map)#org/apache/parquet/DirectWriterTest/DirectWriteSupport/DirectWriteSupport(org.apache.parquet.schema.MessageType,org.apache.parquet.DirectWriterTest.DirectWriter,java.util.Map)
org/apache/parquet/DirectWriterTest/writeDirect(java.lang.String,org.apache.parquet.DirectWriterTest.DirectWriter)#org/apache/parquet/DirectWriterTest/writeDirect(org.apache.parquet.schema.MessageType,org.apache.parquet.DirectWriterTest.DirectWriter)
org/apache/parquet/DirectWriterTest/writeDirect(java.lang.String,org.apache.parquet.DirectWriterTest.DirectWriter)#org/apache/parquet/schema/MessageTypeParser/parseMessageType(java.lang.String)
org/apache/parquet/avro/TestCircularReferences/Reference/validate(org.apache.parquet.pig.Schema)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/parquet/column/values/delta/benchmark/BenchMarkTest/runWriteTest(org.apache.parquet.column.values.ValuesWriter)#org/apache/parquet/column/values/ValuesWriter/getBytes()
org/apache/parquet/column/values/delta/benchmark/BenchMarkTest/runWriteTest(org.apache.parquet.column.values.ValuesWriter)#java/io/PrintStream/println(java.lang.String)
org/apache/parquet/column/values/delta/benchmark/BenchMarkTest/runWriteTest(org.apache.parquet.column.values.ValuesWriter)#org/apache/parquet/column/values/ValuesWriter/writeInteger(int)
org/apache/parquet/column/values/delta/benchmark/BenchMarkTest/runWriteTest(org.apache.parquet.column.values.ValuesWriter)#java/lang/System/nanoTime()
org/apache/parquet/column/values/delta/benchmark/BenchMarkTest/runWriteTest(org.apache.parquet.column.values.ValuesWriter)#org/apache/parquet/column/values/ValuesWriter/reset()
org/apache/parquet/column/values/delta/benchmark/BenchMarkTest/runWriteTest(org.apache.parquet.column.values.ValuesWriter)#org/apache/parquet/bytes/BytesInput/size()
org/apache/parquet/hadoop/ParquetRecordWriter/write(java.lang.Void,T)#org/apache/parquet/hadoop/InternalParquetRecordWriter/write(T)
org/apache/parquet/hadoop/ParquetRecordWriter/close(org.apache.parquet.hadoop.TaskAttemptContext)#org/apache/parquet/hadoop/InternalParquetRecordWriter/close()
org/apache/parquet/hadoop/ParquetRecordWriter/close(org.apache.parquet.hadoop.TaskAttemptContext)#org/apache/parquet/hadoop/MemoryManager/removeWriter(org.apache.parquet.hadoop.InternalParquetRecordWriter)
org/apache/parquet/hadoop/ParquetRecordWriter/close(org.apache.parquet.hadoop.TaskAttemptContext)#org/apache/parquet/hadoop/CodecFactory/release()
org/apache/parquet/proto/ProtoRecordConverter/start()#org/apache/parquet/proto/ProtoMessageConverter/start()
org/apache/parquet/filter2/predicate/Operators/NotEq/accept(org.apache.parquet.filter2.predicate.FilterPredicate.Visitor)#org/apache/parquet/filter2/predicate/FilterPredicate/Visitor/visit(org.apache.parquet.filter2.predicate.Operators.NotEq)
org/apache/parquet/tools/util/PrettyPrintWriter/Line/spaceOut(int,int)#org/apache/parquet/tools/util/PrettyPrintWriter/Span/spaceOut(int,int)
org/apache/parquet/tools/util/PrettyPrintWriter/Line/spaceOut(int,int)#org/apache/parquet/tools/util/PrettyPrintWriter/Span/length()
org/apache/parquet/tools/util/PrettyPrintWriter/Line/append(org.apache.parquet.tools.util.PrettyPrintWriter.Span)#java/util/List/isEmpty()
org/apache/parquet/tools/util/PrettyPrintWriter/Line/append(org.apache.parquet.tools.util.PrettyPrintWriter.Span)#java/util/List/size()
org/apache/parquet/tools/util/PrettyPrintWriter/Line/append(org.apache.parquet.tools.util.PrettyPrintWriter.Span)#org/apache/parquet/tools/util/PrettyPrintWriter/Span/canAppend(org.apache.parquet.tools.util.PrettyPrintWriter.Span)
org/apache/parquet/tools/util/PrettyPrintWriter/Line/append(org.apache.parquet.tools.util.PrettyPrintWriter.Span)#java/util/List/get(int)
org/apache/parquet/tools/util/PrettyPrintWriter/Line/append(org.apache.parquet.tools.util.PrettyPrintWriter.Span)#org/apache/parquet/tools/util/PrettyPrintWriter/Span/length()
org/apache/parquet/tools/util/PrettyPrintWriter/Line/append(org.apache.parquet.tools.util.PrettyPrintWriter.Span)#org/apache/parquet/tools/util/PrettyPrintWriter/Span/append(org.apache.parquet.tools.util.PrettyPrintWriter.Span)
org/apache/parquet/tools/util/PrettyPrintWriter/Line/append(org.apache.parquet.tools.util.PrettyPrintWriter.Span)#java/util/List/add(E)
org/apache/parquet/tools/util/PrettyPrintWriter/Line/countCharacter(char)#org/apache/parquet/tools/util/PrettyPrintWriter/Span/countCharacter(char)
org/apache/parquet/tools/util/PrettyPrintWriter/Line/toString(java.lang.StringBuilder)#org/apache/parquet/tools/util/PrettyPrintWriter/Span/toString(java.lang.StringBuilder)
org/apache/parquet/tools/util/PrettyPrintWriter/Line/indexOf(char,int)#org/apache/parquet/tools/util/PrettyPrintWriter/Span/indexOf(char,int)
org/apache/parquet/tools/util/PrettyPrintWriter/Line/indexOf(char,int)#org/apache/parquet/tools/util/PrettyPrintWriter/Span/length()
org/apache/parquet/tools/util/PrettyPrintWriter/Line/trimTo(int,org.apache.parquet.tools.util.PrettyPrintWriter.Span)#java/util/List/remove(int)
org/apache/parquet/tools/util/PrettyPrintWriter/Line/trimTo(int,org.apache.parquet.tools.util.PrettyPrintWriter.Span)#java/util/List/size()
org/apache/parquet/tools/util/PrettyPrintWriter/Line/trimTo(int,org.apache.parquet.tools.util.PrettyPrintWriter.Span)#java/util/List/get(int)
org/apache/parquet/tools/util/PrettyPrintWriter/Line/trimTo(int,org.apache.parquet.tools.util.PrettyPrintWriter.Span)#org/apache/parquet/tools/util/PrettyPrintWriter/Span/length()
org/apache/parquet/tools/util/PrettyPrintWriter/Line/trimTo(int,org.apache.parquet.tools.util.PrettyPrintWriter.Span)#org/apache/parquet/tools/util/PrettyPrintWriter/Span/trimTo(int,org.apache.parquet.tools.util.PrettyPrintWriter.Span)
org/apache/parquet/column/ParquetProperties/newColumnWriteStore(org.apache.parquet.schema.MessageType,org.apache.parquet.column.page.PageWriteStore)#org/apache/parquet/column/impl/ColumnWriteStoreV1/ColumnWriteStoreV1(org.apache.parquet.column.page.PageWriteStore,org.apache.parquet.column.ParquetProperties)
org/apache/parquet/column/ParquetProperties/newColumnWriteStore(org.apache.parquet.schema.MessageType,org.apache.parquet.column.page.PageWriteStore)#org/apache/parquet/column/impl/ColumnWriteStoreV2/ColumnWriteStoreV2(org.apache.parquet.schema.MessageType,org.apache.parquet.column.page.PageWriteStore,org.apache.parquet.column.ParquetProperties)
org/apache/parquet/column/ParquetProperties/newColumnWriteStore(org.apache.parquet.schema.MessageType,org.apache.parquet.column.page.PageWriteStore)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/parquet/column/ParquetProperties/newValuesWriter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/values/factory/ValuesWriterFactory/newValuesWriter(org.apache.parquet.column.ColumnDescriptor)
org/apache/parquet/column/ParquetProperties/newDefinitionLevelWriter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/ParquetProperties/newColumnDescriptorValuesWriter(int)
org/apache/parquet/column/ParquetProperties/newDefinitionLevelWriter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/ColumnDescriptor/getMaxDefinitionLevel()
org/apache/parquet/column/ParquetProperties/newRepetitionLevelWriter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/ParquetProperties/newColumnDescriptorValuesWriter(int)
org/apache/parquet/column/ParquetProperties/newRepetitionLevelWriter(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/ColumnDescriptor/getMaxRepetitionLevel()
org/apache/parquet/column/ParquetProperties/builder()#org/apache/parquet/column/ParquetProperties/Builder/Builder()
org/apache/parquet/column/ParquetProperties/newRepetitionLevelEncoder(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/ParquetProperties/newLevelEncoder(int)
org/apache/parquet/column/ParquetProperties/newRepetitionLevelEncoder(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/ColumnDescriptor/getMaxRepetitionLevel()
org/apache/parquet/column/ParquetProperties/copy(org.apache.parquet.column.ParquetProperties)#org/apache/parquet/column/ParquetProperties/Builder/Builder(org.apache.parquet.column.ParquetProperties)
org/apache/parquet/column/ParquetProperties/newDefinitionLevelEncoder(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/ParquetProperties/newLevelEncoder(int)
org/apache/parquet/column/ParquetProperties/newDefinitionLevelEncoder(org.apache.parquet.column.ColumnDescriptor)#org/apache/parquet/column/ColumnDescriptor/getMaxDefinitionLevel()
org/apache/parquet/column/ParquetProperties/newColumnDescriptorValuesWriter(int)#org/apache/parquet/bytes/BytesUtils/getWidthFromMaxInt(int)
org/apache/parquet/column/ParquetProperties/newColumnDescriptorValuesWriter(int)#org/apache/parquet/column/values/bitpacking/DevNullValuesWriter/DevNullValuesWriter()
org/apache/parquet/column/ParquetProperties/newColumnDescriptorValuesWriter(int)#org/apache/parquet/column/values/rle/RunLengthBitPackingHybridValuesWriter/RunLengthBitPackingHybridValuesWriter(int,int,int,org.apache.parquet.bytes.ByteBufferAllocator)
org/apache/parquet/column/ParquetProperties/newLevelEncoder(int)#org/apache/parquet/column/values/rle/RunLengthBitPackingHybridEncoder/RunLengthBitPackingHybridEncoder(int,int,int,org.apache.parquet.bytes.ByteBufferAllocator)
org/apache/parquet/column/ParquetProperties/newLevelEncoder(int)#org/apache/parquet/bytes/BytesUtils/getWidthFromMaxInt(int)
org/apache/parquet/io/TestFiltered/testFilterOnInteger()#org/apache/parquet/io/MessageColumnIO/getRecordReader(org.apache.parquet.column.page.PageReadStore,org.apache.parquet.io.api.RecordMaterializer,org.apache.parquet.filter2.compat.FilterCompat.Filter)
org/apache/parquet/io/TestFiltered/testFilterOnInteger()#org/apache/parquet/example/data/simple/convert/GroupRecordConverter/GroupRecordConverter(org.apache.parquet.schema.MessageType)
org/apache/parquet/io/TestFiltered/testFilterOnInteger()#org/apache/parquet/io/ColumnIOFactory/getColumnIO(org.apache.parquet.schema.MessageType)
org/apache/parquet/io/TestFiltered/testFilterOnInteger()#org/apache/parquet/io/ColumnIOFactory/ColumnIOFactory(boolean)
org/apache/parquet/io/TestFiltered/testFilterOnInteger()#org/apache/parquet/filter/ColumnPredicates/equalTo(long)
org/apache/parquet/io/TestFiltered/testFilterOnInteger()#org/apache/parquet/filter2/compat/FilterCompat/get(org.apache.parquet.filter.UnboundRecordFilter)
org/apache/parquet/io/TestFiltered/testFilterOnInteger()#org/apache/parquet/io/TestFiltered/writeTestRecords(org.apache.parquet.io.MessageColumnIO,int)
org/apache/parquet/io/TestFiltered/testFilterOnInteger()#org/apache/parquet/filter/ColumnRecordFilter/column(java.lang.String,org.apache.parquet.filter.ColumnPredicates.Predicate)
org/apache/parquet/io/TestFiltered/testFilterOnInteger()#org/apache/parquet/io/TestFiltered/readOne(org.apache.parquet.io.RecordReader,java.lang.String,org.apache.parquet.example.data.Group)
org/apache/parquet/io/TestFiltered/testFilterOnString()#org/apache/parquet/io/MessageColumnIO/getRecordReader(org.apache.parquet.column.page.PageReadStore,org.apache.parquet.io.api.RecordMaterializer,org.apache.parquet.filter2.compat.FilterCompat.Filter)
org/apache/parquet/io/TestFiltered/testFilterOnString()#org/apache/parquet/example/data/simple/convert/GroupRecordConverter/GroupRecordConverter(org.apache.parquet.schema.MessageType)
org/apache/parquet/io/TestFiltered/testFilterOnString()#org/apache/parquet/io/TestFiltered/readAll(org.apache.parquet.io.RecordReader)
org/apache/parquet/io/TestFiltered/testFilterOnString()#java/util/List/size()
org/apache/parquet/io/TestFiltered/testFilterOnString()#org/apache/parquet/io/ColumnIOFactory/ColumnIOFactory(boolean)
org/apache/parquet/io/TestFiltered/testFilterOnString()#org/apache/parquet/filter2/compat/FilterCompat/get(org.apache.parquet.filter.UnboundRecordFilter)
org/apache/parquet/io/TestFiltered/testFilterOnString()#org/apache/parquet/io/TestFiltered/writeTestRecords(org.apache.parquet.io.MessageColumnIO,int)
org/apache/parquet/io/TestFiltered/testFilterOnString()#org/apache/parquet/filter/ColumnRecordFilter/column(java.lang.String,org.apache.parquet.filter.ColumnPredicates.Predicate)
org/apache/parquet/io/TestFiltered/testFilterOnString()#org/apache/parquet/io/TestFiltered/readOne(org.apache.parquet.io.RecordReader,java.lang.String,org.apache.parquet.example.data.Group)
org/apache/parquet/io/TestFiltered/testFilterOnString()#org/apache/parquet/filter/ColumnPredicates/equalTo(java.lang.String)
org/apache/parquet/io/TestFiltered/testFilterOnString()#org/apache/parquet/io/ColumnIOFactory/getColumnIO(org.apache.parquet.schema.MessageType)
org/apache/parquet/io/TestFiltered/testApplyFunctionFilterOnString()#org/apache/parquet/io/MessageColumnIO/getRecordReader(org.apache.parquet.column.page.PageReadStore,org.apache.parquet.io.api.RecordMaterializer,org.apache.parquet.filter2.compat.FilterCompat.Filter)
org/apache/parquet/io/TestFiltered/testApplyFunctionFilterOnString()#org/apache/parquet/example/data/simple/convert/GroupRecordConverter/GroupRecordConverter(org.apache.parquet.schema.MessageType)
org/apache/parquet/io/TestFiltered/testApplyFunctionFilterOnString()#org/apache/parquet/io/TestFiltered/readAll(org.apache.parquet.io.RecordReader)
org/apache/parquet/io/TestFiltered/testApplyFunctionFilterOnString()#java/util/List/size()
org/apache/parquet/io/TestFiltered/testApplyFunctionFilterOnString()#org/apache/parquet/io/ColumnIOFactory/ColumnIOFactory(boolean)
org/apache/parquet/io/TestFiltered/testApplyFunctionFilterOnString()#org/apache/parquet/io/TestFiltered/writeTestRecords(org.apache.parquet.io.MessageColumnIO,int)
org/apache/parquet/io/TestFiltered/testApplyFunctionFilterOnString()#org/apache/parquet/filter/ColumnRecordFilter/column(java.lang.String,org.apache.parquet.filter.ColumnPredicates.Predicate)
org/apache/parquet/io/TestFiltered/testApplyFunctionFilterOnString()#org/apache/parquet/io/TestFiltered/StringEndsWithAPredicate/StringEndsWithAPredicate()
org/apache/parquet/io/TestFiltered/testApplyFunctionFilterOnString()#org/apache/parquet/io/TestFiltered/readOne(org.apache.parquet.io.RecordReader,java.lang.String,org.apache.parquet.example.data.Group)
org/apache/parquet/io/TestFiltered/testApplyFunctionFilterOnString()#org/apache/parquet/filter/ColumnPredicates/equalTo(java.lang.String)
org/apache/parquet/io/TestFiltered/testApplyFunctionFilterOnString()#org/apache/parquet/io/ColumnIOFactory/getColumnIO(org.apache.parquet.schema.MessageType)
org/apache/parquet/io/TestFiltered/testApplyFunctionFilterOnString()#org/apache/parquet/filter2/compat/FilterCompat/get(org.apache.parquet.filter.UnboundRecordFilter)
org/apache/parquet/io/TestFiltered/testApplyFunctionFilterOnString()#org/apache/parquet/filter/ColumnPredicates/applyFunctionToString(org.apache.parquet.filter.ColumnPredicates.PredicateFunction)
org/apache/parquet/io/TestFiltered/readAll(org.apache.parquet.io.RecordReader)#java/util/ArrayList/ArrayList()
org/apache/parquet/io/TestFiltered/readAll(org.apache.parquet.io.RecordReader)#org/apache/parquet/io/RecordReader/read()
org/apache/parquet/io/TestFiltered/readAll(org.apache.parquet.io.RecordReader)#java/util/List/add(E)
org/apache/parquet/io/TestFiltered/testPaged()#org/apache/parquet/io/MessageColumnIO/getRecordReader(org.apache.parquet.column.page.PageReadStore,org.apache.parquet.io.api.RecordMaterializer,org.apache.parquet.filter2.compat.FilterCompat.Filter)
org/apache/parquet/io/TestFiltered/testPaged()#java/lang/Object/toString()
org/apache/parquet/io/TestFiltered/testPaged()#org/apache/parquet/example/data/simple/convert/GroupRecordConverter/GroupRecordConverter(org.apache.parquet.schema.MessageType)
org/apache/parquet/io/TestFiltered/testPaged()#org/apache/parquet/io/TestFiltered/readAll(org.apache.parquet.io.RecordReader)
org/apache/parquet/io/TestFiltered/testPaged()#org/apache/parquet/io/ColumnIOFactory/getColumnIO(org.apache.parquet.schema.MessageType)
org/apache/parquet/io/TestFiltered/testPaged()#java/util/List/size()
org/apache/parquet/io/TestFiltered/testPaged()#org/apache/parquet/io/ColumnIOFactory/ColumnIOFactory(boolean)
org/apache/parquet/io/TestFiltered/testPaged()#org/apache/parquet/filter/PagedRecordFilter/page(long,long)
org/apache/parquet/io/TestFiltered/testPaged()#org/apache/parquet/filter2/compat/FilterCompat/get(org.apache.parquet.filter.UnboundRecordFilter)
org/apache/parquet/io/TestFiltered/testPaged()#org/apache/parquet/io/TestFiltered/writeTestRecords(org.apache.parquet.io.MessageColumnIO,int)
org/apache/parquet/io/TestFiltered/testPaged()#org/apache/parquet/example/data/simple/SimpleGroup/toString()
org/apache/parquet/io/TestFiltered/testPaged()#java/util/List/get(int)
org/apache/parquet/io/TestFiltered/testFilteredAndPaged()#org/apache/parquet/filter/ColumnRecordFilter/column(java.lang.String,org.apache.parquet.filter.ColumnPredicates.Predicate)
org/apache/parquet/io/TestFiltered/testFilteredAndPaged()#org/apache/parquet/io/MessageColumnIO/getRecordReader(org.apache.parquet.column.page.PageReadStore,org.apache.parquet.io.api.RecordMaterializer,org.apache.parquet.filter2.compat.FilterCompat.Filter)
org/apache/parquet/io/TestFiltered/testFilteredAndPaged()#org/apache/parquet/example/data/simple/convert/GroupRecordConverter/GroupRecordConverter(org.apache.parquet.schema.MessageType)
org/apache/parquet/io/TestFiltered/testFilteredAndPaged()#org/apache/parquet/io/TestFiltered/readAll(org.apache.parquet.io.RecordReader)
org/apache/parquet/io/TestFiltered/testFilteredAndPaged()#org/apache/parquet/io/ColumnIOFactory/getColumnIO(org.apache.parquet.schema.MessageType)
org/apache/parquet/io/TestFiltered/testFilteredAndPaged()#java/util/List/size()
org/apache/parquet/io/TestFiltered/testFilteredAndPaged()#org/apache/parquet/io/ColumnIOFactory/ColumnIOFactory(boolean)
org/apache/parquet/io/TestFiltered/testFilteredAndPaged()#org/apache/parquet/filter/ColumnPredicates/equalTo(long)
org/apache/parquet/io/TestFiltered/testFilteredAndPaged()#org/apache/parquet/filter/PagedRecordFilter/page(long,long)
org/apache/parquet/io/TestFiltered/testFilteredAndPaged()#org/apache/parquet/filter2/compat/FilterCompat/get(org.apache.parquet.filter.UnboundRecordFilter)
org/apache/parquet/io/TestFiltered/testFilteredAndPaged()#org/apache/parquet/io/TestFiltered/writeTestRecords(org.apache.parquet.io.MessageColumnIO,int)
org/apache/parquet/io/TestFiltered/testFilteredAndPaged()#java/lang/Object/toString()
org/apache/parquet/io/TestFiltered/testFilteredAndPaged()#org/apache/parquet/filter/AndRecordFilter/and(org.apache.parquet.filter.UnboundRecordFilter,org.apache.parquet.filter.UnboundRecordFilter)
org/apache/parquet/io/TestFiltered/testFilteredAndPaged()#org/apache/parquet/example/data/simple/SimpleGroup/toString()
org/apache/parquet/io/TestFiltered/testFilteredAndPaged()#java/util/List/get(int)
org/apache/parquet/io/TestFiltered/writeTestRecords(org.apache.parquet.io.MessageColumnIO,int)#org/apache/parquet/column/page/mem/MemPageStore/MemPageStore(long)
org/apache/parquet/io/TestFiltered/writeTestRecords(org.apache.parquet.io.MessageColumnIO,int)#org/apache/parquet/column/ParquetProperties/builder()
org/apache/parquet/io/TestFiltered/writeTestRecords(org.apache.parquet.io.MessageColumnIO,int)#org/apache/parquet/example/data/GroupWriter/write(org.apache.parquet.example.data.Group)
org/apache/parquet/io/TestFiltered/writeTestRecords(org.apache.parquet.io.MessageColumnIO,int)#org/apache/parquet/column/impl/ColumnWriteStoreV1/flush()
org/apache/parquet/io/TestFiltered/writeTestRecords(org.apache.parquet.io.MessageColumnIO,int)#org/apache/parquet/column/impl/ColumnWriteStoreV1/ColumnWriteStoreV1(org.apache.parquet.column.page.PageWriteStore,org.apache.parquet.column.ParquetProperties)
org/apache/parquet/io/TestFiltered/writeTestRecords(org.apache.parquet.io.MessageColumnIO,int)#org/apache/parquet/column/ParquetProperties/Builder/withDictionaryEncoding(boolean)
org/apache/parquet/io/TestFiltered/writeTestRecords(org.apache.parquet.io.MessageColumnIO,int)#org/apache/parquet/io/MessageColumnIO/getRecordWriter(org.apache.parquet.column.ColumnWriteStore)
org/apache/parquet/io/TestFiltered/writeTestRecords(org.apache.parquet.io.MessageColumnIO,int)#org/apache/parquet/io/api/RecordConsumer/flush()
org/apache/parquet/io/TestFiltered/writeTestRecords(org.apache.parquet.io.MessageColumnIO,int)#org/apache/parquet/column/ParquetProperties/Builder/withPageSize(int)
org/apache/parquet/io/TestFiltered/writeTestRecords(org.apache.parquet.io.MessageColumnIO,int)#org/apache/parquet/column/ParquetProperties/Builder/build()
org/apache/parquet/io/TestFiltered/writeTestRecords(org.apache.parquet.io.MessageColumnIO,int)#org/apache/parquet/example/data/GroupWriter/GroupWriter(org.apache.parquet.io.api.RecordConsumer,org.apache.parquet.schema.GroupType)
org/apache/parquet/io/TestFiltered/readOne(org.apache.parquet.io.RecordReader,java.lang.String,org.apache.parquet.example.data.Group)#java/lang/Object/toString()
org/apache/parquet/io/TestFiltered/readOne(org.apache.parquet.io.RecordReader,java.lang.String,org.apache.parquet.example.data.Group)#org/apache/parquet/io/TestFiltered/readAll(org.apache.parquet.io.RecordReader)
org/apache/parquet/io/TestFiltered/readOne(org.apache.parquet.io.RecordReader,java.lang.String,org.apache.parquet.example.data.Group)#java/util/List/size()
org/apache/parquet/io/TestFiltered/readOne(org.apache.parquet.io.RecordReader,java.lang.String,org.apache.parquet.example.data.Group)#java/util/List/get(int)
org/apache/parquet/io/TestFiltered/testApplyFunctionFilterOnLong()#org/apache/parquet/example/data/simple/convert/GroupRecordConverter/GroupRecordConverter(org.apache.parquet.schema.MessageType)
org/apache/parquet/io/TestFiltered/testApplyFunctionFilterOnLong()#org/apache/parquet/io/ColumnIOFactory/getColumnIO(org.apache.parquet.schema.MessageType)
org/apache/parquet/io/TestFiltered/testApplyFunctionFilterOnLong()#org/apache/parquet/io/ColumnIOFactory/ColumnIOFactory(boolean)
org/apache/parquet/io/TestFiltered/testApplyFunctionFilterOnLong()#org/apache/parquet/filter/ColumnPredicates/equalTo(long)
org/apache/parquet/io/TestFiltered/testApplyFunctionFilterOnLong()#org/apache/parquet/filter2/compat/FilterCompat/get(org.apache.parquet.filter.UnboundRecordFilter)
org/apache/parquet/io/TestFiltered/testApplyFunctionFilterOnLong()#org/apache/parquet/io/TestFiltered/writeTestRecords(org.apache.parquet.io.MessageColumnIO,int)
org/apache/parquet/io/TestFiltered/testApplyFunctionFilterOnLong()#org/apache/parquet/filter/ColumnRecordFilter/column(java.lang.String,org.apache.parquet.filter.ColumnPredicates.Predicate)
org/apache/parquet/io/TestFiltered/testApplyFunctionFilterOnLong()#org/apache/parquet/io/TestFiltered/LongGreaterThan15Predicate/LongGreaterThan15Predicate()
org/apache/parquet/io/TestFiltered/testApplyFunctionFilterOnLong()#org/apache/parquet/io/TestFiltered/readOne(org.apache.parquet.io.RecordReader,java.lang.String,org.apache.parquet.example.data.Group)
org/apache/parquet/io/TestFiltered/testApplyFunctionFilterOnLong()#org/apache/parquet/filter/ColumnPredicates/applyFunctionToLong(org.apache.parquet.filter.ColumnPredicates.LongPredicateFunction)
org/apache/parquet/io/TestFiltered/testApplyFunctionFilterOnLong()#org/apache/parquet/io/MessageColumnIO/getRecordReader(org.apache.parquet.column.page.PageReadStore,org.apache.parquet.io.api.RecordMaterializer,org.apache.parquet.filter2.compat.FilterCompat.Filter)
org/apache/parquet/io/TestFiltered/testFilteredOrPaged()#org/apache/parquet/filter/ColumnRecordFilter/column(java.lang.String,org.apache.parquet.filter.ColumnPredicates.Predicate)
org/apache/parquet/io/TestFiltered/testFilteredOrPaged()#org/apache/parquet/io/MessageColumnIO/getRecordReader(org.apache.parquet.column.page.PageReadStore,org.apache.parquet.io.api.RecordMaterializer,org.apache.parquet.filter2.compat.FilterCompat.Filter)
org/apache/parquet/io/TestFiltered/testFilteredOrPaged()#java/lang/Object/toString()
org/apache/parquet/io/TestFiltered/testFilteredOrPaged()#org/apache/parquet/filter/OrRecordFilter/or(org.apache.parquet.filter.UnboundRecordFilter,org.apache.parquet.filter.UnboundRecordFilter)
org/apache/parquet/io/TestFiltered/testFilteredOrPaged()#org/apache/parquet/example/data/simple/convert/GroupRecordConverter/GroupRecordConverter(org.apache.parquet.schema.MessageType)
org/apache/parquet/io/TestFiltered/testFilteredOrPaged()#org/apache/parquet/io/TestFiltered/readAll(org.apache.parquet.io.RecordReader)
org/apache/parquet/io/TestFiltered/testFilteredOrPaged()#org/apache/parquet/io/ColumnIOFactory/getColumnIO(org.apache.parquet.schema.MessageType)
org/apache/parquet/io/TestFiltered/testFilteredOrPaged()#java/util/List/size()
org/apache/parquet/io/TestFiltered/testFilteredOrPaged()#org/apache/parquet/io/ColumnIOFactory/ColumnIOFactory(boolean)
org/apache/parquet/io/TestFiltered/testFilteredOrPaged()#org/apache/parquet/filter/ColumnPredicates/equalTo(long)
org/apache/parquet/io/TestFiltered/testFilteredOrPaged()#org/apache/parquet/filter2/compat/FilterCompat/get(org.apache.parquet.filter.UnboundRecordFilter)
org/apache/parquet/io/TestFiltered/testFilteredOrPaged()#org/apache/parquet/io/TestFiltered/writeTestRecords(org.apache.parquet.io.MessageColumnIO,int)
org/apache/parquet/io/TestFiltered/testFilteredOrPaged()#org/apache/parquet/example/data/simple/SimpleGroup/toString()
org/apache/parquet/io/TestFiltered/testFilteredOrPaged()#java/util/List/get(int)
org/apache/parquet/io/TestFiltered/testFilteredNotPaged()#org/apache/parquet/filter/ColumnRecordFilter/column(java.lang.String,org.apache.parquet.filter.ColumnPredicates.Predicate)
org/apache/parquet/io/TestFiltered/testFilteredNotPaged()#org/apache/parquet/io/MessageColumnIO/getRecordReader(org.apache.parquet.column.page.PageReadStore,org.apache.parquet.io.api.RecordMaterializer,org.apache.parquet.filter2.compat.FilterCompat.Filter)
org/apache/parquet/io/TestFiltered/testFilteredNotPaged()#java/lang/Object/toString()
org/apache/parquet/io/TestFiltered/testFilteredNotPaged()#org/apache/parquet/filter/NotRecordFilter/not(org.apache.parquet.filter.UnboundRecordFilter)
org/apache/parquet/io/TestFiltered/testFilteredNotPaged()#org/apache/parquet/example/data/simple/convert/GroupRecordConverter/GroupRecordConverter(org.apache.parquet.schema.MessageType)
org/apache/parquet/io/TestFiltered/testFilteredNotPaged()#org/apache/parquet/io/TestFiltered/readAll(org.apache.parquet.io.RecordReader)
org/apache/parquet/io/TestFiltered/testFilteredNotPaged()#org/apache/parquet/io/ColumnIOFactory/getColumnIO(org.apache.parquet.schema.MessageType)
org/apache/parquet/io/TestFiltered/testFilteredNotPaged()#java/util/List/size()
org/apache/parquet/io/TestFiltered/testFilteredNotPaged()#org/apache/parquet/io/ColumnIOFactory/ColumnIOFactory(boolean)
org/apache/parquet/io/TestFiltered/testFilteredNotPaged()#org/apache/parquet/filter/ColumnPredicates/equalTo(long)
org/apache/parquet/io/TestFiltered/testFilteredNotPaged()#org/apache/parquet/filter2/compat/FilterCompat/get(org.apache.parquet.filter.UnboundRecordFilter)
org/apache/parquet/io/TestFiltered/testFilteredNotPaged()#org/apache/parquet/io/TestFiltered/writeTestRecords(org.apache.parquet.io.MessageColumnIO,int)
org/apache/parquet/io/TestFiltered/testFilteredNotPaged()#org/apache/parquet/example/data/simple/SimpleGroup/toString()
org/apache/parquet/io/TestFiltered/testFilteredNotPaged()#java/util/List/get(int)
org/apache/parquet/filter2/recordlevel/FilteringPrimitiveConverter/addBinary(org.apache.parquet.io.api.Binary)#org/apache/parquet/io/api/PrimitiveConverter/addBinary(org.apache.parquet.io.api.Binary)
org/apache/parquet/filter2/recordlevel/FilteringPrimitiveConverter/addBinary(org.apache.parquet.io.api.Binary)#org/apache/parquet/filter2/recordlevel/IncrementallyUpdatedFilterPredicate/ValueInspector/update(org.apache.parquet.io.api.Binary)
org/apache/parquet/filter2/recordlevel/FilteringPrimitiveConverter/addFloat(float)#org/apache/parquet/filter2/recordlevel/IncrementallyUpdatedFilterPredicate/ValueInspector/update(float)
org/apache/parquet/filter2/recordlevel/FilteringPrimitiveConverter/addFloat(float)#org/apache/parquet/io/api/PrimitiveConverter/addFloat(float)
org/apache/parquet/filter2/recordlevel/FilteringPrimitiveConverter/setDictionary(org.apache.parquet.column.Dictionary)#java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)
org/apache/parquet/filter2/recordlevel/FilteringPrimitiveConverter/addValueFromDictionary(int)#java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)
org/apache/parquet/filter2/recordlevel/FilteringPrimitiveConverter/addDouble(double)#org/apache/parquet/io/api/PrimitiveConverter/addDouble(double)
org/apache/parquet/filter2/recordlevel/FilteringPrimitiveConverter/addDouble(double)#org/apache/parquet/filter2/recordlevel/IncrementallyUpdatedFilterPredicate/ValueInspector/update(double)
org/apache/parquet/filter2/recordlevel/FilteringPrimitiveConverter/addLong(long)#org/apache/parquet/filter2/recordlevel/IncrementallyUpdatedFilterPredicate/ValueInspector/update(long)
org/apache/parquet/filter2/recordlevel/FilteringPrimitiveConverter/addLong(long)#org/apache/parquet/io/api/PrimitiveConverter/addLong(long)
org/apache/parquet/filter2/recordlevel/FilteringPrimitiveConverter/addBoolean(boolean)#org/apache/parquet/io/api/PrimitiveConverter/addBoolean(boolean)
org/apache/parquet/filter2/recordlevel/FilteringPrimitiveConverter/addBoolean(boolean)#org/apache/parquet/filter2/recordlevel/IncrementallyUpdatedFilterPredicate/ValueInspector/update(boolean)
org/apache/parquet/filter2/recordlevel/FilteringPrimitiveConverter/addInt(int)#org/apache/parquet/io/api/PrimitiveConverter/addInt(int)
org/apache/parquet/filter2/recordlevel/FilteringPrimitiveConverter/addInt(int)#org/apache/parquet/filter2/recordlevel/IncrementallyUpdatedFilterPredicate/ValueInspector/update(int)
org/apache/parquet/filter2/compat/FilterCompat/get(org.apache.parquet.filter2.predicate.FilterPredicate,org.apache.parquet.filter.UnboundRecordFilter)#org/apache/parquet/Preconditions/checkArgument(boolean,java.lang.String)
org/apache/parquet/filter2/compat/FilterCompat/get(org.apache.parquet.filter2.predicate.FilterPredicate,org.apache.parquet.filter.UnboundRecordFilter)#org/apache/parquet/filter2/compat/FilterCompat/get(org.apache.parquet.filter.UnboundRecordFilter)
org/apache/parquet/filter2/compat/FilterCompat/get(org.apache.parquet.filter2.predicate.FilterPredicate,org.apache.parquet.filter.UnboundRecordFilter)#org/apache/parquet/filter2/compat/FilterCompat/get(org.apache.parquet.filter2.predicate.FilterPredicate)
org/apache/parquet/filter2/compat/FilterCompat/get(org.apache.parquet.filter.UnboundRecordFilter)#org/apache/parquet/filter2/compat/FilterCompat/UnboundRecordFilterCompat/UnboundRecordFilterCompat(org.apache.parquet.filter.UnboundRecordFilter)
org/apache/parquet/filter2/compat/FilterCompat/get(org.apache.parquet.filter2.predicate.FilterPredicate)#org/apache/parquet/filter2/predicate/LogicalInverseRewriter/rewrite(org.apache.parquet.filter2.predicate.FilterPredicate)
org/apache/parquet/filter2/compat/FilterCompat/get(org.apache.parquet.filter2.predicate.FilterPredicate)#org/apache/parquet/filter2/compat/FilterCompat/FilterPredicateCompat/FilterPredicateCompat(org.apache.parquet.filter2.predicate.FilterPredicate)
org/apache/parquet/filter2/compat/FilterCompat/get(org.apache.parquet.filter2.predicate.FilterPredicate)#java/lang/Object/equals(java.lang.Object)
org/apache/parquet/filter2/compat/FilterCompat/get(org.apache.parquet.filter2.predicate.FilterPredicate)#org/apache/parquet/Preconditions/checkNotNull(T,java.lang.String)
org/apache/parquet/pig/convert/TupleConverter/BagConverter/getConverter(int)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/parquet/pig/convert/TupleConverter/BagConverter/end()#org/apache/parquet/pig/convert/ParentValueContainer/add(java.lang.Object)
org/apache/parquet/pig/convert/TupleConverter/BagConverter/end()#java/util/ArrayList/ArrayList(java.util.Collection)
org/apache/parquet/SemanticVersion/compareTo(org.apache.parquet.SemanticVersion)#org/apache/parquet/SemanticVersion/compareBooleans(boolean,boolean)
org/apache/parquet/SemanticVersion/compareTo(org.apache.parquet.SemanticVersion)#org/apache/parquet/SemanticVersion/compareIntegers(int,int)
org/apache/parquet/SemanticVersion/compareTo(org.apache.parquet.SemanticVersion)#org/apache/parquet/SemanticVersion/Prerelease/compareTo(org.apache.parquet.SemanticVersion.Prerelease)
org/apache/parquet/SemanticVersion/equals(java.lang.Object)#org/apache/parquet/SemanticVersion/compareTo(org.apache.parquet.SemanticVersion)
org/apache/parquet/SemanticVersion/equals(java.lang.Object)#java/lang/Object/getClass()
org/apache/parquet/SemanticVersion/toString()#java/lang/StringBuilder/append(java.lang.String)
org/apache/parquet/SemanticVersion/toString()#java/lang/StringBuilder/append(int)
org/apache/parquet/SemanticVersion/toString()#java/lang/StringBuilder/StringBuilder()
org/apache/parquet/SemanticVersion/toString()#java/lang/StringBuilder/toString()
org/apache/parquet/SemanticVersion/parse(java.lang.String)#java/util/regex/Matcher/group(int)
org/apache/parquet/SemanticVersion/parse(java.lang.String)#org/apache/parquet/SemanticVersion/SemanticVersionParseException/SemanticVersionParseException(java.lang.Throwable)
org/apache/parquet/SemanticVersion/parse(java.lang.String)#org/apache/parquet/SemanticVersion/SemanticVersion(int,int,int,java.lang.String,java.lang.String,java.lang.String)
org/apache/parquet/SemanticVersion/parse(java.lang.String)#java/util/regex/Matcher/matches()
org/apache/parquet/SemanticVersion/parse(java.lang.String)#java/lang/String/format(java.lang.String,java.lang.Object[])
org/apache/parquet/SemanticVersion/parse(java.lang.String)#java/lang/Integer/valueOf(java.lang.String)
org/apache/parquet/SemanticVersion/parse(java.lang.String)#org/apache/parquet/SemanticVersion/SemanticVersionParseException/SemanticVersionParseException(java.lang.String)
org/apache/parquet/SemanticVersion/parse(java.lang.String)#java/util/regex/Pattern/matcher(java.lang.CharSequence)
org/apache/parquet/schema/TestTypeBuilders/testRequiredMapWithinList()#java/util/ArrayList/ArrayList()
org/apache/parquet/schema/TestTypeBuilders/testRequiredMapWithinList()#org/apache/parquet/schema/PrimitiveType/PrimitiveType(org.apache.parquet.schema.Type.Repetition,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,java.lang.String)
org/apache/parquet/schema/TestTypeBuilders/testRequiredMapWithinList()#org/apache/parquet/schema/GroupType/GroupType(org.apache.parquet.schema.Type.Repetition,java.lang.String,java.util.List)
org/apache/parquet/schema/TestTypeBuilders/testRequiredMapWithinList()#org/apache/parquet/schema/Types/optionalList()
org/apache/parquet/schema/TestTypeBuilders/testRequiredMapWithinList()#org/apache/parquet/schema/Types/BaseMapBuilder/KeyBuilder/requiredValue(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/schema/TestTypeBuilders/testRequiredMapWithinList()#org/apache/parquet/schema/Types/BaseListBuilder/requiredMapElement()
org/apache/parquet/schema/TestTypeBuilders/testRequiredMapWithinList()#org/apache/parquet/schema/GroupType/GroupType(org.apache.parquet.schema.Type.Repetition,java.lang.String,org.apache.parquet.schema.OriginalType,org.apache.parquet.schema.Type[])
org/apache/parquet/schema/TestTypeBuilders/testRequiredMapWithinList()#org/apache/parquet/schema/Types/BaseMapBuilder/key(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/schema/TestTypeBuilders/testRequiredMapWithinList()#java/util/List/add(E)
org/apache/parquet/schema/TestTypeBuilders/testRequiredMapWithinList()#org/apache/parquet/schema/Types/BaseMapBuilder/ValueBuilder/named(java.lang.String)
org/apache/parquet/schema/TestTypeBuilders/testIntervalAnnotationRejectsNonFixed()#org/apache/parquet/schema/TestTypeBuilders/testIntervalAnnotationRejectsNonFixed()/$anonymous1/()
org/apache/parquet/schema/TestTypeBuilders/testIntervalAnnotationRejectsNonFixed()#org/apache/parquet/schema/TestTypeBuilders/assertThrows(java.lang.String,java.lang.Class,java.util.concurrent.Callable)
org/apache/parquet/schema/TestTypeBuilders/testMapWithGroupKeyAndRequiredMapValue()#java/util/ArrayList/ArrayList()
org/apache/parquet/schema/TestTypeBuilders/testMapWithGroupKeyAndRequiredMapValue()#org/apache/parquet/schema/Types/BaseGroupBuilder/optionalMap()
org/apache/parquet/schema/TestTypeBuilders/testMapWithGroupKeyAndRequiredMapValue()#org/apache/parquet/schema/Types/BaseMapBuilder/groupKey()
org/apache/parquet/schema/TestTypeBuilders/testMapWithGroupKeyAndRequiredMapValue()#org/apache/parquet/schema/Types/Builder/named(java.lang.String)
org/apache/parquet/schema/TestTypeBuilders/testMapWithGroupKeyAndRequiredMapValue()#org/apache/parquet/schema/GroupType/GroupType(org.apache.parquet.schema.Type.Repetition,java.lang.String,java.util.List)
org/apache/parquet/schema/TestTypeBuilders/testMapWithGroupKeyAndRequiredMapValue()#org/apache/parquet/schema/Types/BaseMapBuilder/GroupKeyBuilder/requiredMapValue()
org/apache/parquet/schema/TestTypeBuilders/testMapWithGroupKeyAndRequiredMapValue()#org/apache/parquet/schema/Types/BaseGroupBuilder/required(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/schema/TestTypeBuilders/testMapWithGroupKeyAndRequiredMapValue()#org/apache/parquet/schema/MessageType/MessageType(java.lang.String,org.apache.parquet.schema.Type[])
org/apache/parquet/schema/TestTypeBuilders/testMapWithGroupKeyAndRequiredMapValue()#org/apache/parquet/schema/Types/BaseMapBuilder/KeyBuilder/requiredValue(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/schema/TestTypeBuilders/testMapWithGroupKeyAndRequiredMapValue()#org/apache/parquet/schema/Types/buildMessage()
org/apache/parquet/schema/TestTypeBuilders/testMapWithGroupKeyAndRequiredMapValue()#org/apache/parquet/schema/PrimitiveType/PrimitiveType(org.apache.parquet.schema.Type.Repetition,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,java.lang.String)
org/apache/parquet/schema/TestTypeBuilders/testMapWithGroupKeyAndRequiredMapValue()#org/apache/parquet/schema/GroupType/GroupType(org.apache.parquet.schema.Type.Repetition,java.lang.String,org.apache.parquet.schema.OriginalType,org.apache.parquet.schema.Type[])
org/apache/parquet/schema/TestTypeBuilders/testMapWithGroupKeyAndRequiredMapValue()#org/apache/parquet/schema/GroupType/GroupType(org.apache.parquet.schema.Type.Repetition,java.lang.String,org.apache.parquet.schema.Type[])
org/apache/parquet/schema/TestTypeBuilders/testMapWithGroupKeyAndRequiredMapValue()#org/apache/parquet/schema/Types/BaseMapBuilder/key(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/schema/TestTypeBuilders/testMapWithGroupKeyAndRequiredMapValue()#java/util/List/add(E)
org/apache/parquet/schema/TestTypeBuilders/testMapWithGroupKeyAndRequiredMapValue()#org/apache/parquet/schema/Types/BaseMapBuilder/ValueBuilder/named(java.lang.String)
org/apache/parquet/schema/TestTypeBuilders/testMapWithGroupKeyAndOptionalMapValue()#java/util/ArrayList/ArrayList()
org/apache/parquet/schema/TestTypeBuilders/testMapWithGroupKeyAndOptionalMapValue()#org/apache/parquet/schema/Types/BaseGroupBuilder/optionalMap()
org/apache/parquet/schema/TestTypeBuilders/testMapWithGroupKeyAndOptionalMapValue()#org/apache/parquet/schema/Types/BaseMapBuilder/groupKey()
org/apache/parquet/schema/TestTypeBuilders/testMapWithGroupKeyAndOptionalMapValue()#org/apache/parquet/schema/Types/Builder/named(java.lang.String)
org/apache/parquet/schema/TestTypeBuilders/testMapWithGroupKeyAndOptionalMapValue()#org/apache/parquet/schema/GroupType/GroupType(org.apache.parquet.schema.Type.Repetition,java.lang.String,java.util.List)
org/apache/parquet/schema/TestTypeBuilders/testMapWithGroupKeyAndOptionalMapValue()#org/apache/parquet/schema/Types/BaseMapBuilder/GroupKeyBuilder/optionalMapValue()
org/apache/parquet/schema/TestTypeBuilders/testMapWithGroupKeyAndOptionalMapValue()#org/apache/parquet/schema/Types/BaseGroupBuilder/required(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/schema/TestTypeBuilders/testMapWithGroupKeyAndOptionalMapValue()#org/apache/parquet/schema/MessageType/MessageType(java.lang.String,org.apache.parquet.schema.Type[])
org/apache/parquet/schema/TestTypeBuilders/testMapWithGroupKeyAndOptionalMapValue()#org/apache/parquet/schema/Types/BaseMapBuilder/KeyBuilder/requiredValue(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/schema/TestTypeBuilders/testMapWithGroupKeyAndOptionalMapValue()#org/apache/parquet/schema/Types/buildMessage()
org/apache/parquet/schema/TestTypeBuilders/testMapWithGroupKeyAndOptionalMapValue()#org/apache/parquet/schema/PrimitiveType/PrimitiveType(org.apache.parquet.schema.Type.Repetition,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,java.lang.String)
org/apache/parquet/schema/TestTypeBuilders/testMapWithGroupKeyAndOptionalMapValue()#org/apache/parquet/schema/GroupType/GroupType(org.apache.parquet.schema.Type.Repetition,java.lang.String,org.apache.parquet.schema.OriginalType,org.apache.parquet.schema.Type[])
org/apache/parquet/schema/TestTypeBuilders/testMapWithGroupKeyAndOptionalMapValue()#org/apache/parquet/schema/GroupType/GroupType(org.apache.parquet.schema.Type.Repetition,java.lang.String,org.apache.parquet.schema.Type[])
org/apache/parquet/schema/TestTypeBuilders/testMapWithGroupKeyAndOptionalMapValue()#org/apache/parquet/schema/Types/BaseMapBuilder/key(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/schema/TestTypeBuilders/testMapWithGroupKeyAndOptionalMapValue()#java/util/List/add(E)
org/apache/parquet/schema/TestTypeBuilders/testMapWithGroupKeyAndOptionalMapValue()#org/apache/parquet/schema/Types/BaseMapBuilder/ValueBuilder/named(java.lang.String)
org/apache/parquet/schema/TestTypeBuilders/testMapWithOptionalValue()#java/util/ArrayList/ArrayList()
org/apache/parquet/schema/TestTypeBuilders/testMapWithOptionalValue()#org/apache/parquet/schema/Types/BaseGroupBuilder/requiredMap()
org/apache/parquet/schema/TestTypeBuilders/testMapWithOptionalValue()#org/apache/parquet/schema/Types/Builder/named(java.lang.String)
org/apache/parquet/schema/TestTypeBuilders/testMapWithOptionalValue()#org/apache/parquet/schema/GroupType/GroupType(org.apache.parquet.schema.Type.Repetition,java.lang.String,java.util.List)
org/apache/parquet/schema/TestTypeBuilders/testMapWithOptionalValue()#org/apache/parquet/schema/GroupType/GroupType(org.apache.parquet.schema.Type.Repetition,java.lang.String,org.apache.parquet.schema.OriginalType,org.apache.parquet.schema.Type[])
org/apache/parquet/schema/TestTypeBuilders/testMapWithOptionalValue()#org/apache/parquet/schema/MessageType/MessageType(java.lang.String,org.apache.parquet.schema.Type[])
org/apache/parquet/schema/TestTypeBuilders/testMapWithOptionalValue()#org/apache/parquet/schema/Types/BaseMapBuilder/KeyBuilder/optionalValue(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/schema/TestTypeBuilders/testMapWithOptionalValue()#org/apache/parquet/schema/Types/buildMessage()
org/apache/parquet/schema/TestTypeBuilders/testMapWithOptionalValue()#org/apache/parquet/schema/PrimitiveType/PrimitiveType(org.apache.parquet.schema.Type.Repetition,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,java.lang.String)
org/apache/parquet/schema/TestTypeBuilders/testMapWithOptionalValue()#org/apache/parquet/schema/Types/BaseMapBuilder/key(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/schema/TestTypeBuilders/testMapWithOptionalValue()#java/util/List/add(E)
org/apache/parquet/schema/TestTypeBuilders/testMapWithOptionalValue()#org/apache/parquet/schema/Types/BaseMapBuilder/ValueBuilder/named(java.lang.String)
org/apache/parquet/schema/TestTypeBuilders/testOptionalMapWithinList()#java/util/ArrayList/ArrayList()
org/apache/parquet/schema/TestTypeBuilders/testOptionalMapWithinList()#org/apache/parquet/schema/PrimitiveType/PrimitiveType(org.apache.parquet.schema.Type.Repetition,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,java.lang.String)
org/apache/parquet/schema/TestTypeBuilders/testOptionalMapWithinList()#org/apache/parquet/schema/GroupType/GroupType(org.apache.parquet.schema.Type.Repetition,java.lang.String,java.util.List)
org/apache/parquet/schema/TestTypeBuilders/testOptionalMapWithinList()#org/apache/parquet/schema/Types/optionalList()
org/apache/parquet/schema/TestTypeBuilders/testOptionalMapWithinList()#org/apache/parquet/schema/GroupType/GroupType(org.apache.parquet.schema.Type.Repetition,java.lang.String,org.apache.parquet.schema.OriginalType,org.apache.parquet.schema.Type[])
org/apache/parquet/schema/TestTypeBuilders/testOptionalMapWithinList()#org/apache/parquet/schema/Types/BaseListBuilder/optionalMapElement()
org/apache/parquet/schema/TestTypeBuilders/testOptionalMapWithinList()#org/apache/parquet/schema/Types/BaseMapBuilder/KeyBuilder/requiredValue(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/schema/TestTypeBuilders/testOptionalMapWithinList()#org/apache/parquet/schema/Types/BaseMapBuilder/key(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/schema/TestTypeBuilders/testOptionalMapWithinList()#java/util/List/add(E)
org/apache/parquet/schema/TestTypeBuilders/testOptionalMapWithinList()#org/apache/parquet/schema/Types/BaseMapBuilder/ValueBuilder/named(java.lang.String)
org/apache/parquet/schema/TestTypeBuilders/testIntervalAnnotationRejectsNonFixed12()#org/apache/parquet/schema/TestTypeBuilders/testIntervalAnnotationRejectsNonFixed12()/$anonymous1/()
org/apache/parquet/schema/TestTypeBuilders/testIntervalAnnotationRejectsNonFixed12()#org/apache/parquet/schema/TestTypeBuilders/assertThrows(java.lang.String,java.lang.Class,java.util.concurrent.Callable)
org/apache/parquet/schema/TestTypeBuilders/testMapWithGroupKeyAndRequiredGroupValue()#java/util/ArrayList/ArrayList()
org/apache/parquet/schema/TestTypeBuilders/testMapWithGroupKeyAndRequiredGroupValue()#org/apache/parquet/schema/Types/BaseGroupBuilder/optionalMap()
org/apache/parquet/schema/TestTypeBuilders/testMapWithGroupKeyAndRequiredGroupValue()#org/apache/parquet/schema/Types/BaseMapBuilder/groupKey()
org/apache/parquet/schema/TestTypeBuilders/testMapWithGroupKeyAndRequiredGroupValue()#org/apache/parquet/schema/Types/Builder/named(java.lang.String)
org/apache/parquet/schema/TestTypeBuilders/testMapWithGroupKeyAndRequiredGroupValue()#org/apache/parquet/schema/GroupType/GroupType(org.apache.parquet.schema.Type.Repetition,java.lang.String,java.util.List)
org/apache/parquet/schema/TestTypeBuilders/testMapWithGroupKeyAndRequiredGroupValue()#org/apache/parquet/schema/Types/BaseMapBuilder/GroupKeyBuilder/requiredGroupValue()
org/apache/parquet/schema/TestTypeBuilders/testMapWithGroupKeyAndRequiredGroupValue()#org/apache/parquet/schema/GroupType/GroupType(org.apache.parquet.schema.Type.Repetition,java.lang.String,org.apache.parquet.schema.OriginalType,org.apache.parquet.schema.Type[])
org/apache/parquet/schema/TestTypeBuilders/testMapWithGroupKeyAndRequiredGroupValue()#java/util/List/add(E)
org/apache/parquet/schema/TestTypeBuilders/testMapWithGroupKeyAndRequiredGroupValue()#org/apache/parquet/schema/Types/BaseGroupBuilder/optional(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/schema/TestTypeBuilders/testMapWithGroupKeyAndRequiredGroupValue()#org/apache/parquet/schema/MessageType/MessageType(java.lang.String,org.apache.parquet.schema.Type[])
org/apache/parquet/schema/TestTypeBuilders/testMapWithGroupKeyAndRequiredGroupValue()#org/apache/parquet/schema/Types/BaseMapBuilder/GroupValueBuilder/named(java.lang.String)
org/apache/parquet/schema/TestTypeBuilders/testMapWithGroupKeyAndRequiredGroupValue()#org/apache/parquet/schema/Types/buildMessage()
org/apache/parquet/schema/TestTypeBuilders/testMapWithGroupKeyAndRequiredGroupValue()#org/apache/parquet/schema/PrimitiveType/PrimitiveType(org.apache.parquet.schema.Type.Repetition,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,java.lang.String)
org/apache/parquet/schema/TestTypeBuilders/testMapWithNestedGroupKeyAndNestedGroupValue()#java/util/ArrayList/ArrayList()
org/apache/parquet/schema/TestTypeBuilders/testMapWithNestedGroupKeyAndNestedGroupValue()#org/apache/parquet/schema/Types/Builder/named(java.lang.String)
org/apache/parquet/schema/TestTypeBuilders/testMapWithNestedGroupKeyAndNestedGroupValue()#org/apache/parquet/schema/Types/BaseGroupBuilder/requiredGroup()
org/apache/parquet/schema/TestTypeBuilders/testMapWithNestedGroupKeyAndNestedGroupValue()#org/apache/parquet/schema/Types/BaseMapBuilder/GroupKeyBuilder/optionalGroupValue()
org/apache/parquet/schema/TestTypeBuilders/testMapWithNestedGroupKeyAndNestedGroupValue()#org/apache/parquet/schema/GroupType/GroupType(org.apache.parquet.schema.Type.Repetition,java.lang.String,org.apache.parquet.schema.OriginalType,org.apache.parquet.schema.Type[])
org/apache/parquet/schema/TestTypeBuilders/testMapWithNestedGroupKeyAndNestedGroupValue()#java/util/List/add(E)
org/apache/parquet/schema/TestTypeBuilders/testMapWithNestedGroupKeyAndNestedGroupValue()#org/apache/parquet/schema/Types/BaseGroupBuilder/optional(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/schema/TestTypeBuilders/testMapWithNestedGroupKeyAndNestedGroupValue()#org/apache/parquet/schema/Types/BaseGroupBuilder/required(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/schema/TestTypeBuilders/testMapWithNestedGroupKeyAndNestedGroupValue()#org/apache/parquet/schema/MessageType/MessageType(java.lang.String,org.apache.parquet.schema.Type[])
org/apache/parquet/schema/TestTypeBuilders/testMapWithNestedGroupKeyAndNestedGroupValue()#org/apache/parquet/schema/Types/BaseMapBuilder/GroupValueBuilder/named(java.lang.String)
org/apache/parquet/schema/TestTypeBuilders/testMapWithNestedGroupKeyAndNestedGroupValue()#org/apache/parquet/schema/Types/buildMessage()
org/apache/parquet/schema/TestTypeBuilders/testMapWithNestedGroupKeyAndNestedGroupValue()#org/apache/parquet/schema/PrimitiveType/PrimitiveType(org.apache.parquet.schema.Type.Repetition,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,java.lang.String)
org/apache/parquet/schema/TestTypeBuilders/testMapWithNestedGroupKeyAndNestedGroupValue()#org/apache/parquet/schema/Types/BaseMapBuilder/groupKey()
org/apache/parquet/schema/TestTypeBuilders/testMapWithNestedGroupKeyAndNestedGroupValue()#org/apache/parquet/schema/Types/BaseGroupBuilder/requiredMap()
org/apache/parquet/schema/TestTypeBuilders/testMapWithNestedGroupKeyAndNestedGroupValue()#org/apache/parquet/schema/Types/BaseGroupBuilder/optionalGroup()
org/apache/parquet/schema/TestTypeBuilders/testMapWithNestedGroupKeyAndNestedGroupValue()#org/apache/parquet/schema/GroupType/GroupType(org.apache.parquet.schema.Type.Repetition,java.lang.String,java.util.List)
org/apache/parquet/schema/TestTypeBuilders/testMapWithGroupKeyAndOptionalGroupValue()#java/util/ArrayList/ArrayList()
org/apache/parquet/schema/TestTypeBuilders/testMapWithGroupKeyAndOptionalGroupValue()#org/apache/parquet/schema/Types/optionalMap()
org/apache/parquet/schema/TestTypeBuilders/testMapWithGroupKeyAndOptionalGroupValue()#org/apache/parquet/schema/PrimitiveType/PrimitiveType(org.apache.parquet.schema.Type.Repetition,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,java.lang.String)
org/apache/parquet/schema/TestTypeBuilders/testMapWithGroupKeyAndOptionalGroupValue()#org/apache/parquet/schema/Types/BaseMapBuilder/groupKey()
org/apache/parquet/schema/TestTypeBuilders/testMapWithGroupKeyAndOptionalGroupValue()#org/apache/parquet/schema/Types/Builder/named(java.lang.String)
org/apache/parquet/schema/TestTypeBuilders/testMapWithGroupKeyAndOptionalGroupValue()#org/apache/parquet/schema/GroupType/GroupType(org.apache.parquet.schema.Type.Repetition,java.lang.String,java.util.List)
org/apache/parquet/schema/TestTypeBuilders/testMapWithGroupKeyAndOptionalGroupValue()#org/apache/parquet/schema/Types/BaseMapBuilder/GroupKeyBuilder/optionalGroupValue()
org/apache/parquet/schema/TestTypeBuilders/testMapWithGroupKeyAndOptionalGroupValue()#org/apache/parquet/schema/GroupType/GroupType(org.apache.parquet.schema.Type.Repetition,java.lang.String,org.apache.parquet.schema.OriginalType,org.apache.parquet.schema.Type[])
org/apache/parquet/schema/TestTypeBuilders/testMapWithGroupKeyAndOptionalGroupValue()#java/util/List/add(E)
org/apache/parquet/schema/TestTypeBuilders/testMapWithGroupKeyAndOptionalGroupValue()#org/apache/parquet/schema/Types/BaseGroupBuilder/optional(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/schema/TestTypeBuilders/testMapWithGroupKeyAndOptionalGroupValue()#org/apache/parquet/schema/Types/BaseMapBuilder/GroupValueBuilder/named(java.lang.String)
org/apache/parquet/schema/TestTypeBuilders/testMapWithNullValue()#java/util/ArrayList/ArrayList()
org/apache/parquet/schema/TestTypeBuilders/testMapWithNullValue()#org/apache/parquet/schema/Types/BaseGroupBuilder/optionalMap()
org/apache/parquet/schema/TestTypeBuilders/testMapWithNullValue()#org/apache/parquet/schema/GroupType/GroupType(org.apache.parquet.schema.Type.Repetition,java.lang.String,java.util.List)
org/apache/parquet/schema/TestTypeBuilders/testMapWithNullValue()#org/apache/parquet/schema/GroupType/GroupType(org.apache.parquet.schema.Type.Repetition,java.lang.String,org.apache.parquet.schema.OriginalType,org.apache.parquet.schema.Type[])
org/apache/parquet/schema/TestTypeBuilders/testMapWithNullValue()#org/apache/parquet/schema/MessageType/MessageType(java.lang.String,org.apache.parquet.schema.Type[])
org/apache/parquet/schema/TestTypeBuilders/testMapWithNullValue()#org/apache/parquet/schema/Types/buildMessage()
org/apache/parquet/schema/TestTypeBuilders/testMapWithNullValue()#org/apache/parquet/schema/PrimitiveType/PrimitiveType(org.apache.parquet.schema.Type.Repetition,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,java.lang.String)
org/apache/parquet/schema/TestTypeBuilders/testMapWithNullValue()#org/apache/parquet/schema/Types/Builder/named(java.lang.String)
org/apache/parquet/schema/TestTypeBuilders/testMapWithNullValue()#org/apache/parquet/schema/Types/BaseMapBuilder/KeyBuilder/named(java.lang.String)
org/apache/parquet/schema/TestTypeBuilders/testMapWithNullValue()#org/apache/parquet/schema/Types/BaseMapBuilder/key(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/schema/TestTypeBuilders/testMapWithNullValue()#java/util/List/add(E)
org/apache/parquet/schema/TestTypeBuilders/testListOfOptionalGroup()#java/util/ArrayList/ArrayList()
org/apache/parquet/schema/TestTypeBuilders/testListOfOptionalGroup()#org/apache/parquet/schema/PrimitiveType/PrimitiveType(org.apache.parquet.schema.Type.Repetition,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,java.lang.String)
org/apache/parquet/schema/TestTypeBuilders/testListOfOptionalGroup()#org/apache/parquet/schema/Types/BaseListBuilder/optionalGroupElement()
org/apache/parquet/schema/TestTypeBuilders/testListOfOptionalGroup()#java/util/List/add(E)
org/apache/parquet/schema/TestTypeBuilders/testListOfOptionalGroup()#org/apache/parquet/schema/Types/BaseGroupBuilder/optional(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/schema/TestTypeBuilders/testListOfOptionalGroup()#org/apache/parquet/schema/Types/Builder/named(java.lang.String)
org/apache/parquet/schema/TestTypeBuilders/testListOfOptionalGroup()#org/apache/parquet/schema/Types/BaseListBuilder/GroupElementBuilder/named(java.lang.String)
org/apache/parquet/schema/TestTypeBuilders/testListOfOptionalGroup()#org/apache/parquet/schema/GroupType/GroupType(org.apache.parquet.schema.Type.Repetition,java.lang.String,java.util.List)
org/apache/parquet/schema/TestTypeBuilders/testListOfOptionalGroup()#org/apache/parquet/schema/Types/requiredList()
org/apache/parquet/schema/TestTypeBuilders/testListOfOptionalGroup()#org/apache/parquet/schema/GroupType/GroupType(org.apache.parquet.schema.Type.Repetition,java.lang.String,org.apache.parquet.schema.OriginalType,org.apache.parquet.schema.Type[])
org/apache/parquet/schema/TestTypeBuilders/testListOfOptionalGroup()#org/apache/parquet/schema/GroupType/GroupType(org.apache.parquet.schema.Type.Repetition,java.lang.String,org.apache.parquet.schema.Type[])
org/apache/parquet/schema/TestTypeBuilders/testGroupTypeConstruction()#org/apache/parquet/schema/Types/buildGroup(org.apache.parquet.schema.Type.Repetition)
org/apache/parquet/schema/TestTypeBuilders/testGroupTypeConstruction()#org/apache/parquet/schema/Type/Repetition/values()
org/apache/parquet/schema/TestTypeBuilders/testGroupTypeConstruction()#org/apache/parquet/schema/Types/optionalGroup()
org/apache/parquet/schema/TestTypeBuilders/testGroupTypeConstruction()#org/apache/parquet/schema/Types/BaseGroupBuilder/optionalGroup()
org/apache/parquet/schema/TestTypeBuilders/testGroupTypeConstruction()#org/apache/parquet/schema/Types/BaseGroupBuilder/addFields(org.apache.parquet.schema.Type[])
org/apache/parquet/schema/TestTypeBuilders/testGroupTypeConstruction()#org/apache/parquet/schema/Types/BaseGroupBuilder/addField(org.apache.parquet.schema.Type)
org/apache/parquet/schema/TestTypeBuilders/testGroupTypeConstruction()#org/apache/parquet/schema/Types/repeatedGroup()
org/apache/parquet/schema/TestTypeBuilders/testGroupTypeConstruction()#org/apache/parquet/schema/GroupType/GroupType(org.apache.parquet.schema.Type.Repetition,java.lang.String,org.apache.parquet.schema.Type[])
org/apache/parquet/schema/TestTypeBuilders/testGroupTypeConstruction()#org/apache/parquet/schema/Types/BaseGroupBuilder/repeatedGroup()
org/apache/parquet/schema/TestTypeBuilders/testGroupTypeConstruction()#org/apache/parquet/schema/Types/BaseGroupBuilder/group(org.apache.parquet.schema.Type.Repetition)
org/apache/parquet/schema/TestTypeBuilders/testGroupTypeConstruction()#org/apache/parquet/schema/Types/optional(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/schema/TestTypeBuilders/testGroupTypeConstruction()#org/apache/parquet/schema/Types/required(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/schema/TestTypeBuilders/testGroupTypeConstruction()#org/apache/parquet/schema/Types/Builder/named(java.lang.String)
org/apache/parquet/schema/TestTypeBuilders/testGroupTypeConstruction()#org/apache/parquet/schema/Types/requiredGroup()
org/apache/parquet/schema/TestTypeBuilders/testGroupTypeConstruction()#org/apache/parquet/schema/Types/Builder/as(org.apache.parquet.schema.OriginalType)
org/apache/parquet/schema/TestTypeBuilders/testGroupTypeConstruction()#org/apache/parquet/schema/Types/BaseGroupBuilder/requiredGroup()
org/apache/parquet/schema/TestTypeBuilders/testPrimitiveTypeConstruction()#org/apache/parquet/schema/PrimitiveType/PrimitiveType(org.apache.parquet.schema.Type.Repetition,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,java.lang.String)
org/apache/parquet/schema/TestTypeBuilders/testPrimitiveTypeConstruction()#org/apache/parquet/schema/Types/Builder/named(java.lang.String)
org/apache/parquet/schema/TestTypeBuilders/testPrimitiveTypeConstruction()#org/apache/parquet/schema/Types/optional(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/schema/TestTypeBuilders/testPrimitiveTypeConstruction()#org/apache/parquet/schema/Types/repeated(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/schema/TestTypeBuilders/testPrimitiveTypeConstruction()#java/lang/Enum/toString()
org/apache/parquet/schema/TestTypeBuilders/testPrimitiveTypeConstruction()#org/apache/parquet/schema/Type/Repetition/values()
org/apache/parquet/schema/TestTypeBuilders/testPrimitiveTypeConstruction()#org/apache/parquet/schema/Types/required(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/schema/TestTypeBuilders/testPrimitiveTypeConstruction()#org/apache/parquet/schema/Types/primitive(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.schema.Type.Repetition)
org/apache/parquet/schema/TestTypeBuilders/testMapWithRequiredValue()#java/util/ArrayList/ArrayList()
org/apache/parquet/schema/TestTypeBuilders/testMapWithRequiredValue()#org/apache/parquet/schema/Types/BaseGroupBuilder/requiredMap()
org/apache/parquet/schema/TestTypeBuilders/testMapWithRequiredValue()#org/apache/parquet/schema/Types/Builder/named(java.lang.String)
org/apache/parquet/schema/TestTypeBuilders/testMapWithRequiredValue()#org/apache/parquet/schema/GroupType/GroupType(org.apache.parquet.schema.Type.Repetition,java.lang.String,java.util.List)
org/apache/parquet/schema/TestTypeBuilders/testMapWithRequiredValue()#org/apache/parquet/schema/GroupType/GroupType(org.apache.parquet.schema.Type.Repetition,java.lang.String,org.apache.parquet.schema.OriginalType,org.apache.parquet.schema.Type[])
org/apache/parquet/schema/TestTypeBuilders/testMapWithRequiredValue()#org/apache/parquet/schema/MessageType/MessageType(java.lang.String,org.apache.parquet.schema.Type[])
org/apache/parquet/schema/TestTypeBuilders/testMapWithRequiredValue()#org/apache/parquet/schema/Types/BaseMapBuilder/KeyBuilder/requiredValue(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/schema/TestTypeBuilders/testMapWithRequiredValue()#org/apache/parquet/schema/Types/buildMessage()
org/apache/parquet/schema/TestTypeBuilders/testMapWithRequiredValue()#org/apache/parquet/schema/PrimitiveType/PrimitiveType(org.apache.parquet.schema.Type.Repetition,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,java.lang.String)
org/apache/parquet/schema/TestTypeBuilders/testMapWithRequiredValue()#org/apache/parquet/schema/Types/BaseMapBuilder/key(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/schema/TestTypeBuilders/testMapWithRequiredValue()#java/util/List/add(E)
org/apache/parquet/schema/TestTypeBuilders/testMapWithRequiredValue()#org/apache/parquet/schema/Types/BaseMapBuilder/ValueBuilder/named(java.lang.String)
org/apache/parquet/schema/TestTypeBuilders/testMapWithDefaultKeyAndNullValue()#java/util/ArrayList/ArrayList()
org/apache/parquet/schema/TestTypeBuilders/testMapWithDefaultKeyAndNullValue()#org/apache/parquet/schema/Types/buildMessage()
org/apache/parquet/schema/TestTypeBuilders/testMapWithDefaultKeyAndNullValue()#org/apache/parquet/schema/Types/BaseGroupBuilder/optionalMap()
org/apache/parquet/schema/TestTypeBuilders/testMapWithDefaultKeyAndNullValue()#org/apache/parquet/schema/Types/Builder/named(java.lang.String)
org/apache/parquet/schema/TestTypeBuilders/testMapWithDefaultKeyAndNullValue()#org/apache/parquet/schema/GroupType/GroupType(org.apache.parquet.schema.Type.Repetition,java.lang.String,java.util.List)
org/apache/parquet/schema/TestTypeBuilders/testMapWithDefaultKeyAndNullValue()#org/apache/parquet/schema/GroupType/GroupType(org.apache.parquet.schema.Type.Repetition,java.lang.String,org.apache.parquet.schema.OriginalType,org.apache.parquet.schema.Type[])
org/apache/parquet/schema/TestTypeBuilders/testMapWithDefaultKeyAndNullValue()#java/util/List/add(E)
org/apache/parquet/schema/TestTypeBuilders/testMapWithDefaultKeyAndNullValue()#org/apache/parquet/schema/PrimitiveType/PrimitiveType(org.apache.parquet.schema.Type.Repetition,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,java.lang.String,org.apache.parquet.schema.OriginalType)
org/apache/parquet/schema/TestTypeBuilders/testMapWithDefaultKeyAndNullValue()#org/apache/parquet/schema/MessageType/MessageType(java.lang.String,org.apache.parquet.schema.Type[])
org/apache/parquet/schema/TestTypeBuilders/testMapWithRequiredGroupValue()#java/util/ArrayList/ArrayList()
org/apache/parquet/schema/TestTypeBuilders/testMapWithRequiredGroupValue()#org/apache/parquet/schema/Types/BaseGroupBuilder/optionalMap()
org/apache/parquet/schema/TestTypeBuilders/testMapWithRequiredGroupValue()#org/apache/parquet/schema/Types/Builder/named(java.lang.String)
org/apache/parquet/schema/TestTypeBuilders/testMapWithRequiredGroupValue()#org/apache/parquet/schema/GroupType/GroupType(org.apache.parquet.schema.Type.Repetition,java.lang.String,java.util.List)
org/apache/parquet/schema/TestTypeBuilders/testMapWithRequiredGroupValue()#org/apache/parquet/schema/GroupType/GroupType(org.apache.parquet.schema.Type.Repetition,java.lang.String,org.apache.parquet.schema.OriginalType,org.apache.parquet.schema.Type[])
org/apache/parquet/schema/TestTypeBuilders/testMapWithRequiredGroupValue()#org/apache/parquet/schema/Types/BaseMapBuilder/KeyBuilder/requiredGroupValue()
org/apache/parquet/schema/TestTypeBuilders/testMapWithRequiredGroupValue()#org/apache/parquet/schema/Types/BaseGroupBuilder/optional(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/schema/TestTypeBuilders/testMapWithRequiredGroupValue()#org/apache/parquet/schema/MessageType/MessageType(java.lang.String,org.apache.parquet.schema.Type[])
org/apache/parquet/schema/TestTypeBuilders/testMapWithRequiredGroupValue()#org/apache/parquet/schema/Types/BaseMapBuilder/GroupValueBuilder/named(java.lang.String)
org/apache/parquet/schema/TestTypeBuilders/testMapWithRequiredGroupValue()#org/apache/parquet/schema/Types/buildMessage()
org/apache/parquet/schema/TestTypeBuilders/testMapWithRequiredGroupValue()#org/apache/parquet/schema/PrimitiveType/PrimitiveType(org.apache.parquet.schema.Type.Repetition,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,java.lang.String)
org/apache/parquet/schema/TestTypeBuilders/testMapWithRequiredGroupValue()#org/apache/parquet/schema/Types/BaseMapBuilder/key(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/schema/TestTypeBuilders/testMapWithRequiredGroupValue()#java/util/List/add(E)
org/apache/parquet/schema/TestTypeBuilders/testMapWithOptionalListValue()#org/apache/parquet/schema/Types/BaseGroupBuilder/optionalMap()
org/apache/parquet/schema/TestTypeBuilders/testMapWithOptionalListValue()#org/apache/parquet/schema/Types/BaseMapBuilder/KeyBuilder/optionalListValue()
org/apache/parquet/schema/TestTypeBuilders/testMapWithOptionalListValue()#org/apache/parquet/schema/Types/Builder/named(java.lang.String)
org/apache/parquet/schema/TestTypeBuilders/testMapWithOptionalListValue()#org/apache/parquet/schema/GroupType/GroupType(org.apache.parquet.schema.Type.Repetition,java.lang.String,java.util.List)
org/apache/parquet/schema/TestTypeBuilders/testMapWithOptionalListValue()#org/apache/parquet/schema/Types/BaseListBuilder/ElementBuilder/named(java.lang.String)
org/apache/parquet/schema/TestTypeBuilders/testMapWithOptionalListValue()#org/apache/parquet/schema/MessageType/MessageType(java.lang.String,org.apache.parquet.schema.Type[])
org/apache/parquet/schema/TestTypeBuilders/testMapWithOptionalListValue()#org/apache/parquet/schema/Types/BaseListBuilder/optionalElement(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/schema/TestTypeBuilders/testMapWithOptionalListValue()#java/util/ArrayList/ArrayList()
org/apache/parquet/schema/TestTypeBuilders/testMapWithOptionalListValue()#org/apache/parquet/schema/Types/buildMessage()
org/apache/parquet/schema/TestTypeBuilders/testMapWithOptionalListValue()#org/apache/parquet/schema/PrimitiveType/PrimitiveType(org.apache.parquet.schema.Type.Repetition,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,java.lang.String)
org/apache/parquet/schema/TestTypeBuilders/testMapWithOptionalListValue()#org/apache/parquet/schema/GroupType/GroupType(org.apache.parquet.schema.Type.Repetition,java.lang.String,org.apache.parquet.schema.OriginalType,org.apache.parquet.schema.Type[])
org/apache/parquet/schema/TestTypeBuilders/testMapWithOptionalListValue()#org/apache/parquet/schema/GroupType/GroupType(org.apache.parquet.schema.Type.Repetition,java.lang.String,org.apache.parquet.schema.Type[])
org/apache/parquet/schema/TestTypeBuilders/testMapWithOptionalListValue()#org/apache/parquet/schema/Types/BaseMapBuilder/key(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/schema/TestTypeBuilders/testMapWithOptionalListValue()#java/util/List/add(E)
org/apache/parquet/schema/TestTypeBuilders/testMapWithOptionalGroupValue()#java/util/ArrayList/ArrayList()
org/apache/parquet/schema/TestTypeBuilders/testMapWithOptionalGroupValue()#org/apache/parquet/schema/Types/BaseGroupBuilder/optionalMap()
org/apache/parquet/schema/TestTypeBuilders/testMapWithOptionalGroupValue()#org/apache/parquet/schema/Types/Builder/named(java.lang.String)
org/apache/parquet/schema/TestTypeBuilders/testMapWithOptionalGroupValue()#org/apache/parquet/schema/GroupType/GroupType(org.apache.parquet.schema.Type.Repetition,java.lang.String,java.util.List)
org/apache/parquet/schema/TestTypeBuilders/testMapWithOptionalGroupValue()#org/apache/parquet/schema/GroupType/GroupType(org.apache.parquet.schema.Type.Repetition,java.lang.String,org.apache.parquet.schema.OriginalType,org.apache.parquet.schema.Type[])
org/apache/parquet/schema/TestTypeBuilders/testMapWithOptionalGroupValue()#org/apache/parquet/schema/Types/BaseMapBuilder/KeyBuilder/optionalGroupValue()
org/apache/parquet/schema/TestTypeBuilders/testMapWithOptionalGroupValue()#org/apache/parquet/schema/Types/BaseGroupBuilder/optional(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/schema/TestTypeBuilders/testMapWithOptionalGroupValue()#org/apache/parquet/schema/MessageType/MessageType(java.lang.String,org.apache.parquet.schema.Type[])
org/apache/parquet/schema/TestTypeBuilders/testMapWithOptionalGroupValue()#org/apache/parquet/schema/Types/BaseMapBuilder/GroupValueBuilder/named(java.lang.String)
org/apache/parquet/schema/TestTypeBuilders/testMapWithOptionalGroupValue()#org/apache/parquet/schema/Types/buildMessage()
org/apache/parquet/schema/TestTypeBuilders/testMapWithOptionalGroupValue()#org/apache/parquet/schema/PrimitiveType/PrimitiveType(org.apache.parquet.schema.Type.Repetition,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,java.lang.String)
org/apache/parquet/schema/TestTypeBuilders/testMapWithOptionalGroupValue()#org/apache/parquet/schema/Types/BaseMapBuilder/key(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/schema/TestTypeBuilders/testMapWithOptionalGroupValue()#java/util/List/add(E)
org/apache/parquet/schema/TestTypeBuilders/testEmptyGroup()#org/apache/parquet/schema/Types/optionalGroup()
org/apache/parquet/schema/TestTypeBuilders/testEmptyGroup()#org/apache/parquet/schema/Types/repeatedGroup()
org/apache/parquet/schema/TestTypeBuilders/testEmptyGroup()#org/apache/parquet/schema/GroupType/GroupType(org.apache.parquet.schema.Type.Repetition,java.lang.String,org.apache.parquet.schema.Type[])
org/apache/parquet/schema/TestTypeBuilders/testEmptyGroup()#org/apache/parquet/schema/Types/Builder/named(java.lang.String)
org/apache/parquet/schema/TestTypeBuilders/testEmptyGroup()#org/apache/parquet/schema/Types/requiredGroup()
org/apache/parquet/schema/TestTypeBuilders/testMapWithRequiredListValue()#org/apache/parquet/schema/Types/BaseGroupBuilder/optionalMap()
org/apache/parquet/schema/TestTypeBuilders/testMapWithRequiredListValue()#org/apache/parquet/schema/GroupType/GroupType(org.apache.parquet.schema.Type.Repetition,java.lang.String,java.util.List)
org/apache/parquet/schema/TestTypeBuilders/testMapWithRequiredListValue()#org/apache/parquet/schema/Types/BaseListBuilder/ElementBuilder/named(java.lang.String)
org/apache/parquet/schema/TestTypeBuilders/testMapWithRequiredListValue()#org/apache/parquet/schema/MessageType/MessageType(java.lang.String,org.apache.parquet.schema.Type[])
org/apache/parquet/schema/TestTypeBuilders/testMapWithRequiredListValue()#org/apache/parquet/schema/Types/BaseListBuilder/optionalElement(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/schema/TestTypeBuilders/testMapWithRequiredListValue()#java/util/ArrayList/ArrayList()
org/apache/parquet/schema/TestTypeBuilders/testMapWithRequiredListValue()#org/apache/parquet/schema/Types/buildMessage()
org/apache/parquet/schema/TestTypeBuilders/testMapWithRequiredListValue()#org/apache/parquet/schema/PrimitiveType/PrimitiveType(org.apache.parquet.schema.Type.Repetition,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,java.lang.String)
org/apache/parquet/schema/TestTypeBuilders/testMapWithRequiredListValue()#org/apache/parquet/schema/Types/Builder/named(java.lang.String)
org/apache/parquet/schema/TestTypeBuilders/testMapWithRequiredListValue()#org/apache/parquet/schema/Types/BaseMapBuilder/KeyBuilder/requiredListValue()
org/apache/parquet/schema/TestTypeBuilders/testMapWithRequiredListValue()#org/apache/parquet/schema/GroupType/GroupType(org.apache.parquet.schema.Type.Repetition,java.lang.String,org.apache.parquet.schema.OriginalType,org.apache.parquet.schema.Type[])
org/apache/parquet/schema/TestTypeBuilders/testMapWithRequiredListValue()#org/apache/parquet/schema/GroupType/GroupType(org.apache.parquet.schema.Type.Repetition,java.lang.String,org.apache.parquet.schema.Type[])
org/apache/parquet/schema/TestTypeBuilders/testMapWithRequiredListValue()#org/apache/parquet/schema/Types/BaseMapBuilder/key(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/schema/TestTypeBuilders/testMapWithRequiredListValue()#java/util/List/add(E)
org/apache/parquet/schema/TestTypeBuilders/testDecimalAnnotationPrecisionScaleBound()#org/apache/parquet/schema/TestTypeBuilders/testDecimalAnnotationPrecisionScaleBound()/$anonymous4/()
org/apache/parquet/schema/TestTypeBuilders/testDecimalAnnotationPrecisionScaleBound()#org/apache/parquet/schema/TestTypeBuilders/testDecimalAnnotationPrecisionScaleBound()/$anonymous3/()
org/apache/parquet/schema/TestTypeBuilders/testDecimalAnnotationPrecisionScaleBound()#org/apache/parquet/schema/TestTypeBuilders/testDecimalAnnotationPrecisionScaleBound()/$anonymous2/()
org/apache/parquet/schema/TestTypeBuilders/testDecimalAnnotationPrecisionScaleBound()#org/apache/parquet/schema/TestTypeBuilders/testDecimalAnnotationPrecisionScaleBound()/$anonymous1/()
org/apache/parquet/schema/TestTypeBuilders/testDecimalAnnotationPrecisionScaleBound()#org/apache/parquet/schema/TestTypeBuilders/assertThrows(java.lang.String,java.lang.Class,java.util.concurrent.Callable)
org/apache/parquet/schema/TestTypeBuilders/testOptionalListWithinGroup()#org/apache/parquet/schema/PrimitiveType/PrimitiveType(org.apache.parquet.schema.Type.Repetition,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,java.lang.String)
org/apache/parquet/schema/TestTypeBuilders/testOptionalListWithinGroup()#org/apache/parquet/schema/GroupType/GroupType(org.apache.parquet.schema.Type.Repetition,java.lang.String,java.util.List)
org/apache/parquet/schema/TestTypeBuilders/testOptionalListWithinGroup()#org/apache/parquet/schema/Types/BaseListBuilder/ElementBuilder/named(java.lang.String)
org/apache/parquet/schema/TestTypeBuilders/testOptionalListWithinGroup()#java/util/List/add(E)
org/apache/parquet/schema/TestTypeBuilders/testOptionalListWithinGroup()#org/apache/parquet/schema/Types/BaseListBuilder/optionalElement(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/schema/TestTypeBuilders/testOptionalListWithinGroup()#java/util/ArrayList/ArrayList()
org/apache/parquet/schema/TestTypeBuilders/testOptionalListWithinGroup()#org/apache/parquet/schema/Types/Builder/named(java.lang.String)
org/apache/parquet/schema/TestTypeBuilders/testOptionalListWithinGroup()#org/apache/parquet/schema/Types/BaseGroupBuilder/optionalList()
org/apache/parquet/schema/TestTypeBuilders/testOptionalListWithinGroup()#org/apache/parquet/schema/Types/requiredGroup()
org/apache/parquet/schema/TestTypeBuilders/testOptionalListWithinGroup()#org/apache/parquet/schema/GroupType/GroupType(org.apache.parquet.schema.Type.Repetition,java.lang.String,org.apache.parquet.schema.OriginalType,org.apache.parquet.schema.Type[])
org/apache/parquet/schema/TestTypeBuilders/testOptionalListWithinGroup()#org/apache/parquet/schema/GroupType/GroupType(org.apache.parquet.schema.Type.Repetition,java.lang.String,org.apache.parquet.schema.Type[])
org/apache/parquet/schema/TestTypeBuilders/testMapWithRequiredMapValue()#java/util/ArrayList/ArrayList()
org/apache/parquet/schema/TestTypeBuilders/testMapWithRequiredMapValue()#org/apache/parquet/schema/Types/BaseGroupBuilder/optionalMap()
org/apache/parquet/schema/TestTypeBuilders/testMapWithRequiredMapValue()#org/apache/parquet/schema/Types/Builder/named(java.lang.String)
org/apache/parquet/schema/TestTypeBuilders/testMapWithRequiredMapValue()#org/apache/parquet/schema/GroupType/GroupType(org.apache.parquet.schema.Type.Repetition,java.lang.String,java.util.List)
org/apache/parquet/schema/TestTypeBuilders/testMapWithRequiredMapValue()#org/apache/parquet/schema/GroupType/GroupType(org.apache.parquet.schema.Type.Repetition,java.lang.String,org.apache.parquet.schema.OriginalType,org.apache.parquet.schema.Type[])
org/apache/parquet/schema/TestTypeBuilders/testMapWithRequiredMapValue()#org/apache/parquet/schema/Types/BaseMapBuilder/KeyBuilder/requiredMapValue()
org/apache/parquet/schema/TestTypeBuilders/testMapWithRequiredMapValue()#org/apache/parquet/schema/MessageType/MessageType(java.lang.String,org.apache.parquet.schema.Type[])
org/apache/parquet/schema/TestTypeBuilders/testMapWithRequiredMapValue()#org/apache/parquet/schema/Types/BaseMapBuilder/KeyBuilder/requiredValue(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/schema/TestTypeBuilders/testMapWithRequiredMapValue()#org/apache/parquet/schema/Types/buildMessage()
org/apache/parquet/schema/TestTypeBuilders/testMapWithRequiredMapValue()#org/apache/parquet/schema/PrimitiveType/PrimitiveType(org.apache.parquet.schema.Type.Repetition,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,java.lang.String)
org/apache/parquet/schema/TestTypeBuilders/testMapWithRequiredMapValue()#org/apache/parquet/schema/Types/BaseMapBuilder/key(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/schema/TestTypeBuilders/testMapWithRequiredMapValue()#java/util/List/add(E)
org/apache/parquet/schema/TestTypeBuilders/testMapWithRequiredMapValue()#org/apache/parquet/schema/Types/BaseMapBuilder/ValueBuilder/named(java.lang.String)
org/apache/parquet/schema/TestTypeBuilders/testIntervalAnnotation()#org/apache/parquet/schema/Types/Builder/named(java.lang.String)
org/apache/parquet/schema/TestTypeBuilders/testIntervalAnnotation()#org/apache/parquet/schema/Types/Builder/as(org.apache.parquet.schema.OriginalType)
org/apache/parquet/schema/TestTypeBuilders/testIntervalAnnotation()#org/apache/parquet/schema/PrimitiveType/PrimitiveType(org.apache.parquet.schema.Type.Repetition,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,int,java.lang.String,org.apache.parquet.schema.OriginalType)
org/apache/parquet/schema/TestTypeBuilders/testIntervalAnnotation()#org/apache/parquet/schema/Types/required(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/schema/TestTypeBuilders/testIntervalAnnotation()#org/apache/parquet/schema/Types/BasePrimitiveBuilder/length(int)
org/apache/parquet/schema/TestTypeBuilders/testRequiredNestedList()#org/apache/parquet/schema/Types/BaseListBuilder/requiredListElement()
org/apache/parquet/schema/TestTypeBuilders/testRequiredNestedList()#org/apache/parquet/schema/PrimitiveType/PrimitiveType(org.apache.parquet.schema.Type.Repetition,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,java.lang.String)
org/apache/parquet/schema/TestTypeBuilders/testRequiredNestedList()#org/apache/parquet/schema/GroupType/GroupType(org.apache.parquet.schema.Type.Repetition,java.lang.String,java.util.List)
org/apache/parquet/schema/TestTypeBuilders/testRequiredNestedList()#org/apache/parquet/schema/Types/optionalList()
org/apache/parquet/schema/TestTypeBuilders/testRequiredNestedList()#org/apache/parquet/schema/Types/BaseListBuilder/ElementBuilder/named(java.lang.String)
org/apache/parquet/schema/TestTypeBuilders/testRequiredNestedList()#java/util/List/add(E)
org/apache/parquet/schema/TestTypeBuilders/testRequiredNestedList()#org/apache/parquet/schema/Types/BaseListBuilder/optionalElement(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/schema/TestTypeBuilders/testRequiredNestedList()#java/util/ArrayList/ArrayList()
org/apache/parquet/schema/TestTypeBuilders/testRequiredNestedList()#org/apache/parquet/schema/GroupType/GroupType(org.apache.parquet.schema.Type.Repetition,java.lang.String,org.apache.parquet.schema.OriginalType,org.apache.parquet.schema.Type[])
org/apache/parquet/schema/TestTypeBuilders/testRequiredNestedList()#org/apache/parquet/schema/GroupType/GroupType(org.apache.parquet.schema.Type.Repetition,java.lang.String,org.apache.parquet.schema.Type[])
org/apache/parquet/schema/TestTypeBuilders/testOptionalNestedList()#org/apache/parquet/schema/Types/BaseListBuilder/optionalListElement()
org/apache/parquet/schema/TestTypeBuilders/testOptionalNestedList()#org/apache/parquet/schema/PrimitiveType/PrimitiveType(org.apache.parquet.schema.Type.Repetition,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,java.lang.String)
org/apache/parquet/schema/TestTypeBuilders/testOptionalNestedList()#org/apache/parquet/schema/GroupType/GroupType(org.apache.parquet.schema.Type.Repetition,java.lang.String,java.util.List)
org/apache/parquet/schema/TestTypeBuilders/testOptionalNestedList()#org/apache/parquet/schema/Types/optionalList()
org/apache/parquet/schema/TestTypeBuilders/testOptionalNestedList()#org/apache/parquet/schema/Types/BaseListBuilder/ElementBuilder/named(java.lang.String)
org/apache/parquet/schema/TestTypeBuilders/testOptionalNestedList()#java/util/List/add(E)
org/apache/parquet/schema/TestTypeBuilders/testOptionalNestedList()#org/apache/parquet/schema/Types/BaseListBuilder/optionalElement(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/schema/TestTypeBuilders/testOptionalNestedList()#java/util/ArrayList/ArrayList()
org/apache/parquet/schema/TestTypeBuilders/testOptionalNestedList()#org/apache/parquet/schema/GroupType/GroupType(org.apache.parquet.schema.Type.Repetition,java.lang.String,org.apache.parquet.schema.OriginalType,org.apache.parquet.schema.Type[])
org/apache/parquet/schema/TestTypeBuilders/testOptionalNestedList()#org/apache/parquet/schema/GroupType/GroupType(org.apache.parquet.schema.Type.Repetition,java.lang.String,org.apache.parquet.schema.Type[])
org/apache/parquet/schema/TestTypeBuilders/testRequiredListWithinGroup()#org/apache/parquet/schema/PrimitiveType/PrimitiveType(org.apache.parquet.schema.Type.Repetition,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,java.lang.String)
org/apache/parquet/schema/TestTypeBuilders/testRequiredListWithinGroup()#org/apache/parquet/schema/Types/BaseGroupBuilder/requiredList()
org/apache/parquet/schema/TestTypeBuilders/testRequiredListWithinGroup()#org/apache/parquet/schema/GroupType/GroupType(org.apache.parquet.schema.Type.Repetition,java.lang.String,java.util.List)
org/apache/parquet/schema/TestTypeBuilders/testRequiredListWithinGroup()#org/apache/parquet/schema/Types/BaseListBuilder/ElementBuilder/named(java.lang.String)
org/apache/parquet/schema/TestTypeBuilders/testRequiredListWithinGroup()#java/util/List/add(E)
org/apache/parquet/schema/TestTypeBuilders/testRequiredListWithinGroup()#org/apache/parquet/schema/Types/BaseListBuilder/optionalElement(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/schema/TestTypeBuilders/testRequiredListWithinGroup()#java/util/ArrayList/ArrayList()
org/apache/parquet/schema/TestTypeBuilders/testRequiredListWithinGroup()#org/apache/parquet/schema/Types/Builder/named(java.lang.String)
org/apache/parquet/schema/TestTypeBuilders/testRequiredListWithinGroup()#org/apache/parquet/schema/Types/requiredGroup()
org/apache/parquet/schema/TestTypeBuilders/testRequiredListWithinGroup()#org/apache/parquet/schema/GroupType/GroupType(org.apache.parquet.schema.Type.Repetition,java.lang.String,org.apache.parquet.schema.OriginalType,org.apache.parquet.schema.Type[])
org/apache/parquet/schema/TestTypeBuilders/testRequiredListWithinGroup()#org/apache/parquet/schema/GroupType/GroupType(org.apache.parquet.schema.Type.Repetition,java.lang.String,org.apache.parquet.schema.Type[])
org/apache/parquet/schema/TestTypeBuilders/testMapWithOptionalMapValue()#java/util/ArrayList/ArrayList()
org/apache/parquet/schema/TestTypeBuilders/testMapWithOptionalMapValue()#org/apache/parquet/schema/Types/BaseGroupBuilder/optionalMap()
org/apache/parquet/schema/TestTypeBuilders/testMapWithOptionalMapValue()#org/apache/parquet/schema/Types/Builder/named(java.lang.String)
org/apache/parquet/schema/TestTypeBuilders/testMapWithOptionalMapValue()#org/apache/parquet/schema/GroupType/GroupType(org.apache.parquet.schema.Type.Repetition,java.lang.String,java.util.List)
org/apache/parquet/schema/TestTypeBuilders/testMapWithOptionalMapValue()#org/apache/parquet/schema/GroupType/GroupType(org.apache.parquet.schema.Type.Repetition,java.lang.String,org.apache.parquet.schema.OriginalType,org.apache.parquet.schema.Type[])
org/apache/parquet/schema/TestTypeBuilders/testMapWithOptionalMapValue()#org/apache/parquet/schema/Types/BaseMapBuilder/KeyBuilder/optionalMapValue()
org/apache/parquet/schema/TestTypeBuilders/testMapWithOptionalMapValue()#org/apache/parquet/schema/MessageType/MessageType(java.lang.String,org.apache.parquet.schema.Type[])
org/apache/parquet/schema/TestTypeBuilders/testMapWithOptionalMapValue()#org/apache/parquet/schema/Types/BaseMapBuilder/KeyBuilder/requiredValue(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/schema/TestTypeBuilders/testMapWithOptionalMapValue()#org/apache/parquet/schema/Types/buildMessage()
org/apache/parquet/schema/TestTypeBuilders/testMapWithOptionalMapValue()#org/apache/parquet/schema/PrimitiveType/PrimitiveType(org.apache.parquet.schema.Type.Repetition,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,java.lang.String)
org/apache/parquet/schema/TestTypeBuilders/testMapWithOptionalMapValue()#org/apache/parquet/schema/Types/BaseMapBuilder/key(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/schema/TestTypeBuilders/testMapWithOptionalMapValue()#java/util/List/add(E)
org/apache/parquet/schema/TestTypeBuilders/testMapWithOptionalMapValue()#org/apache/parquet/schema/Types/BaseMapBuilder/ValueBuilder/named(java.lang.String)
org/apache/parquet/schema/TestTypeBuilders/testInt64AnnotationsRejectNonInt64()#org/apache/parquet/schema/TestTypeBuilders/testInt64AnnotationsRejectNonInt64()/$anonymous1/()
org/apache/parquet/schema/TestTypeBuilders/testInt64AnnotationsRejectNonInt64()#org/apache/parquet/schema/TestTypeBuilders/assertThrows(java.lang.String,java.lang.Class,java.util.concurrent.Callable)
org/apache/parquet/schema/TestTypeBuilders/testInt64AnnotationsRejectNonInt64()#org/apache/parquet/schema/TestTypeBuilders/testInt64AnnotationsRejectNonInt64()/$anonymous2/()
org/apache/parquet/schema/TestTypeBuilders/testInt32Annotations()#org/apache/parquet/schema/Types/Builder/named(java.lang.String)
org/apache/parquet/schema/TestTypeBuilders/testInt32Annotations()#org/apache/parquet/schema/Types/Builder/as(org.apache.parquet.schema.OriginalType)
org/apache/parquet/schema/TestTypeBuilders/testInt32Annotations()#org/apache/parquet/schema/Types/required(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/schema/TestTypeBuilders/testInt32Annotations()#org/apache/parquet/schema/PrimitiveType/PrimitiveType(org.apache.parquet.schema.Type.Repetition,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,java.lang.String,org.apache.parquet.schema.OriginalType)
org/apache/parquet/schema/TestTypeBuilders/testInt32AnnotationsRejectNonInt32()#org/apache/parquet/schema/TestTypeBuilders/testInt32AnnotationsRejectNonInt32()/$anonymous1/()
org/apache/parquet/schema/TestTypeBuilders/testInt32AnnotationsRejectNonInt32()#org/apache/parquet/schema/TestTypeBuilders/assertThrows(java.lang.String,java.lang.Class,java.util.concurrent.Callable)
org/apache/parquet/schema/TestTypeBuilders/testInt32AnnotationsRejectNonInt32()#org/apache/parquet/schema/TestTypeBuilders/testInt32AnnotationsRejectNonInt32()/$anonymous2/()
org/apache/parquet/schema/TestTypeBuilders/testListOfReqGroup()#java/util/ArrayList/ArrayList()
org/apache/parquet/schema/TestTypeBuilders/testListOfReqGroup()#org/apache/parquet/schema/PrimitiveType/PrimitiveType(org.apache.parquet.schema.Type.Repetition,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,java.lang.String)
org/apache/parquet/schema/TestTypeBuilders/testListOfReqGroup()#org/apache/parquet/schema/Types/BaseListBuilder/requiredGroupElement()
org/apache/parquet/schema/TestTypeBuilders/testListOfReqGroup()#java/util/List/add(E)
org/apache/parquet/schema/TestTypeBuilders/testListOfReqGroup()#org/apache/parquet/schema/Types/BaseGroupBuilder/optional(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/schema/TestTypeBuilders/testListOfReqGroup()#org/apache/parquet/schema/Types/Builder/named(java.lang.String)
org/apache/parquet/schema/TestTypeBuilders/testListOfReqGroup()#org/apache/parquet/schema/Types/BaseListBuilder/GroupElementBuilder/named(java.lang.String)
org/apache/parquet/schema/TestTypeBuilders/testListOfReqGroup()#org/apache/parquet/schema/GroupType/GroupType(org.apache.parquet.schema.Type.Repetition,java.lang.String,java.util.List)
org/apache/parquet/schema/TestTypeBuilders/testListOfReqGroup()#org/apache/parquet/schema/Types/requiredList()
org/apache/parquet/schema/TestTypeBuilders/testListOfReqGroup()#org/apache/parquet/schema/GroupType/GroupType(org.apache.parquet.schema.Type.Repetition,java.lang.String,org.apache.parquet.schema.OriginalType,org.apache.parquet.schema.Type[])
org/apache/parquet/schema/TestTypeBuilders/testListOfReqGroup()#org/apache/parquet/schema/GroupType/GroupType(org.apache.parquet.schema.Type.Repetition,java.lang.String,org.apache.parquet.schema.Type[])
org/apache/parquet/schema/TestTypeBuilders/testDecimalAnnotationMissingPrecision()#org/apache/parquet/schema/TestTypeBuilders/testDecimalAnnotationMissingPrecision()/$anonymous1/()
org/apache/parquet/schema/TestTypeBuilders/testDecimalAnnotationMissingPrecision()#org/apache/parquet/schema/TestTypeBuilders/testDecimalAnnotationMissingPrecision()/$anonymous3/()
org/apache/parquet/schema/TestTypeBuilders/testDecimalAnnotationMissingPrecision()#org/apache/parquet/schema/TestTypeBuilders/testDecimalAnnotationMissingPrecision()/$anonymous2/()
org/apache/parquet/schema/TestTypeBuilders/testDecimalAnnotationMissingPrecision()#org/apache/parquet/schema/TestTypeBuilders/testDecimalAnnotationMissingPrecision()/$anonymous4/()
org/apache/parquet/schema/TestTypeBuilders/testDecimalAnnotationMissingPrecision()#org/apache/parquet/schema/TestTypeBuilders/assertThrows(java.lang.String,java.lang.Class,java.util.concurrent.Callable)
org/apache/parquet/schema/TestTypeBuilders/testFixedLengthEquals()#org/apache/parquet/schema/Types/Builder/named(java.lang.String)
org/apache/parquet/schema/TestTypeBuilders/testFixedLengthEquals()#org/apache/parquet/schema/Types/required(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/schema/TestTypeBuilders/testFixedLengthEquals()#org/apache/parquet/schema/Type/equals(org.apache.parquet.schema.Type)
org/apache/parquet/schema/TestTypeBuilders/testFixedLengthEquals()#org/apache/parquet/schema/Types/BasePrimitiveBuilder/length(int)
org/apache/parquet/schema/TestTypeBuilders/testInt64Annotations()#org/apache/parquet/schema/Types/Builder/named(java.lang.String)
org/apache/parquet/schema/TestTypeBuilders/testInt64Annotations()#org/apache/parquet/schema/Types/Builder/as(org.apache.parquet.schema.OriginalType)
org/apache/parquet/schema/TestTypeBuilders/testInt64Annotations()#org/apache/parquet/schema/Types/required(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/schema/TestTypeBuilders/testInt64Annotations()#org/apache/parquet/schema/PrimitiveType/PrimitiveType(org.apache.parquet.schema.Type.Repetition,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,java.lang.String,org.apache.parquet.schema.OriginalType)
org/apache/parquet/schema/TestTypeBuilders/testOptionalListWithinGroupWithReqElement()#org/apache/parquet/schema/Types/BaseListBuilder/requiredElement(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/schema/TestTypeBuilders/testOptionalListWithinGroupWithReqElement()#java/util/ArrayList/ArrayList()
org/apache/parquet/schema/TestTypeBuilders/testOptionalListWithinGroupWithReqElement()#org/apache/parquet/schema/PrimitiveType/PrimitiveType(org.apache.parquet.schema.Type.Repetition,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,java.lang.String)
org/apache/parquet/schema/TestTypeBuilders/testOptionalListWithinGroupWithReqElement()#org/apache/parquet/schema/GroupType/GroupType(org.apache.parquet.schema.Type.Repetition,java.lang.String,java.util.List)
org/apache/parquet/schema/TestTypeBuilders/testOptionalListWithinGroupWithReqElement()#org/apache/parquet/schema/Types/BaseListBuilder/ElementBuilder/named(java.lang.String)
org/apache/parquet/schema/TestTypeBuilders/testOptionalListWithinGroupWithReqElement()#java/util/List/add(E)
org/apache/parquet/schema/TestTypeBuilders/testOptionalListWithinGroupWithReqElement()#org/apache/parquet/schema/Types/Builder/named(java.lang.String)
org/apache/parquet/schema/TestTypeBuilders/testOptionalListWithinGroupWithReqElement()#org/apache/parquet/schema/Types/BaseGroupBuilder/optionalList()
org/apache/parquet/schema/TestTypeBuilders/testOptionalListWithinGroupWithReqElement()#org/apache/parquet/schema/Types/requiredGroup()
org/apache/parquet/schema/TestTypeBuilders/testOptionalListWithinGroupWithReqElement()#org/apache/parquet/schema/GroupType/GroupType(org.apache.parquet.schema.Type.Repetition,java.lang.String,org.apache.parquet.schema.OriginalType,org.apache.parquet.schema.Type[])
org/apache/parquet/schema/TestTypeBuilders/testOptionalListWithinGroupWithReqElement()#org/apache/parquet/schema/GroupType/GroupType(org.apache.parquet.schema.Type.Repetition,java.lang.String,org.apache.parquet.schema.Type[])
org/apache/parquet/schema/TestTypeBuilders/testDECIMALAnnotationRejectsUnsupportedTypes()#org/apache/parquet/schema/TestTypeBuilders/assertThrows(java.lang.String,java.lang.Class,java.util.concurrent.Callable)
org/apache/parquet/schema/TestTypeBuilders/testDECIMALAnnotationRejectsUnsupportedTypes()#org/apache/parquet/schema/TestTypeBuilders/testDECIMALAnnotationRejectsUnsupportedTypes()/$anonymous1/()
org/apache/parquet/schema/TestTypeBuilders/testMapWithGroupKeyAndOptionalValue()#java/util/ArrayList/ArrayList()
org/apache/parquet/schema/TestTypeBuilders/testMapWithGroupKeyAndOptionalValue()#org/apache/parquet/schema/Types/BaseGroupBuilder/optionalMap()
org/apache/parquet/schema/TestTypeBuilders/testMapWithGroupKeyAndOptionalValue()#org/apache/parquet/schema/Types/BaseMapBuilder/groupKey()
org/apache/parquet/schema/TestTypeBuilders/testMapWithGroupKeyAndOptionalValue()#org/apache/parquet/schema/Types/Builder/named(java.lang.String)
org/apache/parquet/schema/TestTypeBuilders/testMapWithGroupKeyAndOptionalValue()#org/apache/parquet/schema/GroupType/GroupType(org.apache.parquet.schema.Type.Repetition,java.lang.String,java.util.List)
org/apache/parquet/schema/TestTypeBuilders/testMapWithGroupKeyAndOptionalValue()#org/apache/parquet/schema/GroupType/GroupType(org.apache.parquet.schema.Type.Repetition,java.lang.String,org.apache.parquet.schema.OriginalType,org.apache.parquet.schema.Type[])
org/apache/parquet/schema/TestTypeBuilders/testMapWithGroupKeyAndOptionalValue()#org/apache/parquet/schema/MessageType/MessageType(java.lang.String,org.apache.parquet.schema.Type[])
org/apache/parquet/schema/TestTypeBuilders/testMapWithGroupKeyAndOptionalValue()#org/apache/parquet/schema/Types/buildMessage()
org/apache/parquet/schema/TestTypeBuilders/testMapWithGroupKeyAndOptionalValue()#org/apache/parquet/schema/PrimitiveType/PrimitiveType(org.apache.parquet.schema.Type.Repetition,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,java.lang.String)
org/apache/parquet/schema/TestTypeBuilders/testMapWithGroupKeyAndOptionalValue()#java/util/List/add(E)
org/apache/parquet/schema/TestTypeBuilders/testMapWithGroupKeyAndOptionalValue()#org/apache/parquet/schema/Types/BaseMapBuilder/ValueBuilder/named(java.lang.String)
org/apache/parquet/schema/TestTypeBuilders/testMapWithGroupKeyAndOptionalValue()#org/apache/parquet/schema/Types/BaseGroupBuilder/optional(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/schema/TestTypeBuilders/testMapWithGroupKeyAndOptionalValue()#org/apache/parquet/schema/Types/BaseMapBuilder/GroupKeyBuilder/optionalValue(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/schema/TestTypeBuilders/testOptionalMap()#java/util/ArrayList/ArrayList()
org/apache/parquet/schema/TestTypeBuilders/testOptionalMap()#org/apache/parquet/schema/Types/optionalMap()
org/apache/parquet/schema/TestTypeBuilders/testOptionalMap()#org/apache/parquet/schema/PrimitiveType/PrimitiveType(org.apache.parquet.schema.Type.Repetition,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,java.lang.String)
org/apache/parquet/schema/TestTypeBuilders/testOptionalMap()#org/apache/parquet/schema/GroupType/GroupType(org.apache.parquet.schema.Type.Repetition,java.lang.String,java.util.List)
org/apache/parquet/schema/TestTypeBuilders/testOptionalMap()#org/apache/parquet/schema/GroupType/GroupType(org.apache.parquet.schema.Type.Repetition,java.lang.String,org.apache.parquet.schema.OriginalType,org.apache.parquet.schema.Type[])
org/apache/parquet/schema/TestTypeBuilders/testOptionalMap()#org/apache/parquet/schema/Types/BaseMapBuilder/KeyBuilder/requiredValue(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/schema/TestTypeBuilders/testOptionalMap()#org/apache/parquet/schema/Types/BaseMapBuilder/key(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/schema/TestTypeBuilders/testOptionalMap()#java/util/List/add(E)
org/apache/parquet/schema/TestTypeBuilders/testOptionalMap()#org/apache/parquet/schema/Types/BaseMapBuilder/ValueBuilder/named(java.lang.String)
org/apache/parquet/schema/TestTypeBuilders/testFixedWithoutLength()#org/apache/parquet/schema/Types/Builder/named(java.lang.String)
org/apache/parquet/schema/TestTypeBuilders/testFixedWithoutLength()#org/apache/parquet/schema/Types/required(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/schema/TestTypeBuilders/testEmptyMessage()#org/apache/parquet/schema/Types/buildMessage()
org/apache/parquet/schema/TestTypeBuilders/testEmptyMessage()#org/apache/parquet/schema/Types/MessageTypeBuilder/named(java.lang.String)
org/apache/parquet/schema/TestTypeBuilders/testEmptyMessage()#org/apache/parquet/schema/MessageType/MessageType(java.lang.String,org.apache.parquet.schema.Type[])
org/apache/parquet/schema/TestTypeBuilders/testMapWithGroupKeyAndRequiredValue()#java/util/ArrayList/ArrayList()
org/apache/parquet/schema/TestTypeBuilders/testMapWithGroupKeyAndRequiredValue()#org/apache/parquet/schema/Types/BaseGroupBuilder/optionalMap()
org/apache/parquet/schema/TestTypeBuilders/testMapWithGroupKeyAndRequiredValue()#org/apache/parquet/schema/Types/BaseMapBuilder/groupKey()
org/apache/parquet/schema/TestTypeBuilders/testMapWithGroupKeyAndRequiredValue()#org/apache/parquet/schema/Types/Builder/named(java.lang.String)
org/apache/parquet/schema/TestTypeBuilders/testMapWithGroupKeyAndRequiredValue()#org/apache/parquet/schema/GroupType/GroupType(org.apache.parquet.schema.Type.Repetition,java.lang.String,java.util.List)
org/apache/parquet/schema/TestTypeBuilders/testMapWithGroupKeyAndRequiredValue()#org/apache/parquet/schema/GroupType/GroupType(org.apache.parquet.schema.Type.Repetition,java.lang.String,org.apache.parquet.schema.OriginalType,org.apache.parquet.schema.Type[])
org/apache/parquet/schema/TestTypeBuilders/testMapWithGroupKeyAndRequiredValue()#org/apache/parquet/schema/Types/BaseMapBuilder/GroupKeyBuilder/requiredValue(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/schema/TestTypeBuilders/testMapWithGroupKeyAndRequiredValue()#org/apache/parquet/schema/Types/BaseGroupBuilder/optional(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/schema/TestTypeBuilders/testMapWithGroupKeyAndRequiredValue()#org/apache/parquet/schema/MessageType/MessageType(java.lang.String,org.apache.parquet.schema.Type[])
org/apache/parquet/schema/TestTypeBuilders/testMapWithGroupKeyAndRequiredValue()#org/apache/parquet/schema/Types/buildMessage()
org/apache/parquet/schema/TestTypeBuilders/testMapWithGroupKeyAndRequiredValue()#org/apache/parquet/schema/PrimitiveType/PrimitiveType(org.apache.parquet.schema.Type.Repetition,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,java.lang.String)
org/apache/parquet/schema/TestTypeBuilders/testMapWithGroupKeyAndRequiredValue()#java/util/List/add(E)
org/apache/parquet/schema/TestTypeBuilders/testMapWithGroupKeyAndRequiredValue()#org/apache/parquet/schema/Types/BaseMapBuilder/ValueBuilder/named(java.lang.String)
org/apache/parquet/schema/TestTypeBuilders/testRequiredMap()#java/util/ArrayList/ArrayList()
org/apache/parquet/schema/TestTypeBuilders/testRequiredMap()#org/apache/parquet/schema/GroupType/GroupType(org.apache.parquet.schema.Type.Repetition,java.lang.String,java.util.List)
org/apache/parquet/schema/TestTypeBuilders/testRequiredMap()#org/apache/parquet/schema/GroupType/GroupType(org.apache.parquet.schema.Type.Repetition,java.lang.String,org.apache.parquet.schema.OriginalType,org.apache.parquet.schema.Type[])
org/apache/parquet/schema/TestTypeBuilders/testRequiredMap()#org/apache/parquet/schema/Types/BaseMapBuilder/KeyBuilder/requiredValue(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/schema/TestTypeBuilders/testRequiredMap()#org/apache/parquet/schema/PrimitiveType/PrimitiveType(org.apache.parquet.schema.Type.Repetition,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,java.lang.String)
org/apache/parquet/schema/TestTypeBuilders/testRequiredMap()#org/apache/parquet/schema/Types/requiredMap()
org/apache/parquet/schema/TestTypeBuilders/testRequiredMap()#org/apache/parquet/schema/Types/BaseMapBuilder/key(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/schema/TestTypeBuilders/testRequiredMap()#java/util/List/add(E)
org/apache/parquet/schema/TestTypeBuilders/testRequiredMap()#org/apache/parquet/schema/Types/BaseMapBuilder/ValueBuilder/named(java.lang.String)
org/apache/parquet/schema/TestTypeBuilders/testMapWithPreBuiltKeyAndValueTypes()#org/apache/parquet/schema/Types/buildMessage()
org/apache/parquet/schema/TestTypeBuilders/testMapWithPreBuiltKeyAndValueTypes()#org/apache/parquet/schema/Types/Builder/named(java.lang.String)
org/apache/parquet/schema/TestTypeBuilders/testMapWithPreBuiltKeyAndValueTypes()#org/apache/parquet/schema/Types/BaseMapBuilder/key(org.apache.parquet.schema.Type)
org/apache/parquet/schema/TestTypeBuilders/testMapWithPreBuiltKeyAndValueTypes()#org/apache/parquet/schema/Types/required(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/schema/TestTypeBuilders/testMapWithPreBuiltKeyAndValueTypes()#org/apache/parquet/schema/MessageType/MessageType(java.lang.String,org.apache.parquet.schema.Type[])
org/apache/parquet/schema/TestTypeBuilders/testMapWithPreBuiltKeyAndValueTypes()#org/apache/parquet/schema/Types/BaseMapBuilder/value(org.apache.parquet.schema.Type)
org/apache/parquet/schema/TestTypeBuilders/testMapWithPreBuiltKeyAndValueTypes()#org/apache/parquet/schema/Types/BaseGroupBuilder/requiredMap()
org/apache/parquet/schema/TestTypeBuilders/testMapWithPreBuiltKeyAndValueTypes()#org/apache/parquet/schema/GroupType/GroupType(org.apache.parquet.schema.Type.Repetition,java.lang.String,org.apache.parquet.schema.OriginalType,org.apache.parquet.schema.Type[])
org/apache/parquet/schema/TestTypeBuilders/testMapWithPreBuiltKeyAndValueTypes()#org/apache/parquet/schema/GroupType/GroupType(org.apache.parquet.schema.Type.Repetition,java.lang.String,org.apache.parquet.schema.Type[])
org/apache/parquet/schema/TestTypeBuilders/testBinaryAnnotationsRejectsNonBinary()#org/apache/parquet/schema/TestTypeBuilders/testBinaryAnnotationsRejectsNonBinary()/$anonymous2/()
org/apache/parquet/schema/TestTypeBuilders/testBinaryAnnotationsRejectsNonBinary()#org/apache/parquet/schema/TestTypeBuilders/testBinaryAnnotationsRejectsNonBinary()/$anonymous1/()
org/apache/parquet/schema/TestTypeBuilders/testBinaryAnnotationsRejectsNonBinary()#org/apache/parquet/schema/TestTypeBuilders/assertThrows(java.lang.String,java.lang.Class,java.util.concurrent.Callable)
org/apache/parquet/schema/TestTypeBuilders/testListWithRequiredPreBuiltElement()#org/apache/parquet/schema/PrimitiveType/PrimitiveType(org.apache.parquet.schema.Type.Repetition,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,java.lang.String)
org/apache/parquet/schema/TestTypeBuilders/testListWithRequiredPreBuiltElement()#org/apache/parquet/schema/Types/Builder/named(java.lang.String)
org/apache/parquet/schema/TestTypeBuilders/testListWithRequiredPreBuiltElement()#org/apache/parquet/schema/Types/requiredList()
org/apache/parquet/schema/TestTypeBuilders/testListWithRequiredPreBuiltElement()#org/apache/parquet/schema/Types/BaseListBuilder/element(org.apache.parquet.schema.Type)
org/apache/parquet/schema/TestTypeBuilders/testListWithRequiredPreBuiltElement()#org/apache/parquet/schema/Types/primitive(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.schema.Type.Repetition)
org/apache/parquet/schema/TestTypeBuilders/testListWithRequiredPreBuiltElement()#org/apache/parquet/schema/GroupType/GroupType(org.apache.parquet.schema.Type.Repetition,java.lang.String,org.apache.parquet.schema.OriginalType,org.apache.parquet.schema.Type[])
org/apache/parquet/schema/TestTypeBuilders/testListWithRequiredPreBuiltElement()#org/apache/parquet/schema/GroupType/GroupType(org.apache.parquet.schema.Type.Repetition,java.lang.String,org.apache.parquet.schema.Type[])
org/apache/parquet/schema/TestTypeBuilders/testMapWithGroupKeyAndOptionalListValue()#org/apache/parquet/schema/Types/BaseGroupBuilder/optionalMap()
org/apache/parquet/schema/TestTypeBuilders/testMapWithGroupKeyAndOptionalListValue()#org/apache/parquet/schema/Types/BaseMapBuilder/groupKey()
org/apache/parquet/schema/TestTypeBuilders/testMapWithGroupKeyAndOptionalListValue()#org/apache/parquet/schema/Types/Builder/named(java.lang.String)
org/apache/parquet/schema/TestTypeBuilders/testMapWithGroupKeyAndOptionalListValue()#org/apache/parquet/schema/GroupType/GroupType(org.apache.parquet.schema.Type.Repetition,java.lang.String,java.util.List)
org/apache/parquet/schema/TestTypeBuilders/testMapWithGroupKeyAndOptionalListValue()#org/apache/parquet/schema/Types/BaseMapBuilder/GroupKeyBuilder/optionalListValue()
org/apache/parquet/schema/TestTypeBuilders/testMapWithGroupKeyAndOptionalListValue()#org/apache/parquet/schema/Types/BaseListBuilder/ElementBuilder/named(java.lang.String)
org/apache/parquet/schema/TestTypeBuilders/testMapWithGroupKeyAndOptionalListValue()#java/util/List/add(E)
org/apache/parquet/schema/TestTypeBuilders/testMapWithGroupKeyAndOptionalListValue()#org/apache/parquet/schema/Types/BaseGroupBuilder/required(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/schema/TestTypeBuilders/testMapWithGroupKeyAndOptionalListValue()#org/apache/parquet/schema/MessageType/MessageType(java.lang.String,org.apache.parquet.schema.Type[])
org/apache/parquet/schema/TestTypeBuilders/testMapWithGroupKeyAndOptionalListValue()#org/apache/parquet/schema/Types/BaseListBuilder/optionalElement(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/schema/TestTypeBuilders/testMapWithGroupKeyAndOptionalListValue()#java/util/ArrayList/ArrayList()
org/apache/parquet/schema/TestTypeBuilders/testMapWithGroupKeyAndOptionalListValue()#org/apache/parquet/schema/Types/buildMessage()
org/apache/parquet/schema/TestTypeBuilders/testMapWithGroupKeyAndOptionalListValue()#org/apache/parquet/schema/PrimitiveType/PrimitiveType(org.apache.parquet.schema.Type.Repetition,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,java.lang.String)
org/apache/parquet/schema/TestTypeBuilders/testMapWithGroupKeyAndOptionalListValue()#org/apache/parquet/schema/GroupType/GroupType(org.apache.parquet.schema.Type.Repetition,java.lang.String,org.apache.parquet.schema.OriginalType,org.apache.parquet.schema.Type[])
org/apache/parquet/schema/TestTypeBuilders/testMapWithGroupKeyAndOptionalListValue()#org/apache/parquet/schema/GroupType/GroupType(org.apache.parquet.schema.Type.Repetition,java.lang.String,org.apache.parquet.schema.Type[])
org/apache/parquet/schema/TestTypeBuilders/testMapWithGroupKeyAndRequiredListValue()#org/apache/parquet/schema/Types/BaseGroupBuilder/optionalMap()
org/apache/parquet/schema/TestTypeBuilders/testMapWithGroupKeyAndRequiredListValue()#org/apache/parquet/schema/Types/BaseMapBuilder/groupKey()
org/apache/parquet/schema/TestTypeBuilders/testMapWithGroupKeyAndRequiredListValue()#org/apache/parquet/schema/Types/Builder/named(java.lang.String)
org/apache/parquet/schema/TestTypeBuilders/testMapWithGroupKeyAndRequiredListValue()#org/apache/parquet/schema/GroupType/GroupType(org.apache.parquet.schema.Type.Repetition,java.lang.String,java.util.List)
org/apache/parquet/schema/TestTypeBuilders/testMapWithGroupKeyAndRequiredListValue()#org/apache/parquet/schema/Types/BaseMapBuilder/GroupKeyBuilder/requiredListValue()
org/apache/parquet/schema/TestTypeBuilders/testMapWithGroupKeyAndRequiredListValue()#org/apache/parquet/schema/Types/BaseListBuilder/ElementBuilder/named(java.lang.String)
org/apache/parquet/schema/TestTypeBuilders/testMapWithGroupKeyAndRequiredListValue()#java/util/List/add(E)
org/apache/parquet/schema/TestTypeBuilders/testMapWithGroupKeyAndRequiredListValue()#org/apache/parquet/schema/Types/BaseGroupBuilder/required(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/schema/TestTypeBuilders/testMapWithGroupKeyAndRequiredListValue()#org/apache/parquet/schema/MessageType/MessageType(java.lang.String,org.apache.parquet.schema.Type[])
org/apache/parquet/schema/TestTypeBuilders/testMapWithGroupKeyAndRequiredListValue()#org/apache/parquet/schema/Types/BaseListBuilder/optionalElement(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/schema/TestTypeBuilders/testMapWithGroupKeyAndRequiredListValue()#java/util/ArrayList/ArrayList()
org/apache/parquet/schema/TestTypeBuilders/testMapWithGroupKeyAndRequiredListValue()#org/apache/parquet/schema/Types/buildMessage()
org/apache/parquet/schema/TestTypeBuilders/testMapWithGroupKeyAndRequiredListValue()#org/apache/parquet/schema/PrimitiveType/PrimitiveType(org.apache.parquet.schema.Type.Repetition,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,java.lang.String)
org/apache/parquet/schema/TestTypeBuilders/testMapWithGroupKeyAndRequiredListValue()#org/apache/parquet/schema/GroupType/GroupType(org.apache.parquet.schema.Type.Repetition,java.lang.String,org.apache.parquet.schema.OriginalType,org.apache.parquet.schema.Type[])
org/apache/parquet/schema/TestTypeBuilders/testMapWithGroupKeyAndRequiredListValue()#org/apache/parquet/schema/GroupType/GroupType(org.apache.parquet.schema.Type.Repetition,java.lang.String,org.apache.parquet.schema.Type[])
org/apache/parquet/schema/TestTypeBuilders/testFixedTypeConstruction()#org/apache/parquet/schema/Type/Repetition/values()
org/apache/parquet/schema/TestTypeBuilders/testFixedTypeConstruction()#org/apache/parquet/schema/Types/optional(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/schema/TestTypeBuilders/testFixedTypeConstruction()#org/apache/parquet/schema/Types/repeated(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/schema/TestTypeBuilders/testFixedTypeConstruction()#org/apache/parquet/schema/Types/BasePrimitiveBuilder/length(int)
org/apache/parquet/schema/TestTypeBuilders/testFixedTypeConstruction()#org/apache/parquet/schema/Types/Builder/named(java.lang.String)
org/apache/parquet/schema/TestTypeBuilders/testFixedTypeConstruction()#org/apache/parquet/schema/PrimitiveType/PrimitiveType(org.apache.parquet.schema.Type.Repetition,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,int,java.lang.String)
org/apache/parquet/schema/TestTypeBuilders/testFixedTypeConstruction()#org/apache/parquet/schema/Types/required(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/schema/TestTypeBuilders/testFixedTypeConstruction()#org/apache/parquet/schema/Types/primitive(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,org.apache.parquet.schema.Type.Repetition)
org/apache/parquet/schema/TestTypeBuilders/testRequiredList()#org/apache/parquet/schema/Types/BaseListBuilder/optionalElement(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/schema/TestTypeBuilders/testRequiredList()#org/apache/parquet/schema/PrimitiveType/PrimitiveType(org.apache.parquet.schema.Type.Repetition,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,java.lang.String)
org/apache/parquet/schema/TestTypeBuilders/testRequiredList()#org/apache/parquet/schema/Types/requiredList()
org/apache/parquet/schema/TestTypeBuilders/testRequiredList()#org/apache/parquet/schema/Types/BaseListBuilder/ElementBuilder/named(java.lang.String)
org/apache/parquet/schema/TestTypeBuilders/testRequiredList()#org/apache/parquet/schema/GroupType/GroupType(org.apache.parquet.schema.Type.Repetition,java.lang.String,org.apache.parquet.schema.OriginalType,org.apache.parquet.schema.Type[])
org/apache/parquet/schema/TestTypeBuilders/testRequiredList()#org/apache/parquet/schema/GroupType/GroupType(org.apache.parquet.schema.Type.Repetition,java.lang.String,org.apache.parquet.schema.Type[])
org/apache/parquet/schema/TestTypeBuilders/testPaperExample()#org/apache/parquet/schema/Types/Builder/named(java.lang.String)
org/apache/parquet/schema/TestTypeBuilders/testPaperExample()#org/apache/parquet/schema/Types/BaseGroupBuilder/optionalGroup()
org/apache/parquet/schema/TestTypeBuilders/testPaperExample()#org/apache/parquet/schema/GroupType/GroupType(org.apache.parquet.schema.Type.Repetition,java.lang.String,org.apache.parquet.schema.Type[])
org/apache/parquet/schema/TestTypeBuilders/testPaperExample()#org/apache/parquet/schema/Types/BaseGroupBuilder/repeatedGroup()
org/apache/parquet/schema/TestTypeBuilders/testPaperExample()#org/apache/parquet/schema/Types/BaseGroupBuilder/optional(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/schema/TestTypeBuilders/testPaperExample()#org/apache/parquet/schema/Types/BaseGroupBuilder/required(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/schema/TestTypeBuilders/testPaperExample()#org/apache/parquet/schema/MessageType/MessageType(java.lang.String,org.apache.parquet.schema.Type[])
org/apache/parquet/schema/TestTypeBuilders/testPaperExample()#org/apache/parquet/schema/Types/BaseGroupBuilder/repeated(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/schema/TestTypeBuilders/testPaperExample()#org/apache/parquet/schema/Types/buildMessage()
org/apache/parquet/schema/TestTypeBuilders/testPaperExample()#org/apache/parquet/schema/PrimitiveType/PrimitiveType(org.apache.parquet.schema.Type.Repetition,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,java.lang.String)
org/apache/parquet/schema/TestTypeBuilders/testDecimalAnnotation()#org/apache/parquet/schema/Types/buildMessage()
org/apache/parquet/schema/TestTypeBuilders/testDecimalAnnotation()#org/apache/parquet/schema/Types/Builder/named(java.lang.String)
org/apache/parquet/schema/TestTypeBuilders/testDecimalAnnotation()#org/apache/parquet/schema/Types/BasePrimitiveBuilder/scale(int)
org/apache/parquet/schema/TestTypeBuilders/testDecimalAnnotation()#org/apache/parquet/schema/Types/BasePrimitiveBuilder/precision(int)
org/apache/parquet/schema/TestTypeBuilders/testDecimalAnnotation()#org/apache/parquet/schema/MessageType/MessageType(java.lang.String,org.apache.parquet.schema.Type[])
org/apache/parquet/schema/TestTypeBuilders/testDecimalAnnotation()#org/apache/parquet/schema/Types/BasePrimitiveBuilder/length(int)
org/apache/parquet/schema/TestTypeBuilders/testDecimalAnnotation()#org/apache/parquet/schema/Types/Builder/as(org.apache.parquet.schema.OriginalType)
org/apache/parquet/schema/TestTypeBuilders/testDecimalAnnotation()#org/apache/parquet/schema/DecimalMetadata/DecimalMetadata(int,int)
org/apache/parquet/schema/TestTypeBuilders/testDecimalAnnotation()#org/apache/parquet/schema/Types/BaseGroupBuilder/required(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/schema/TestTypeBuilders/testDecimalAnnotation()#org/apache/parquet/schema/PrimitiveType/PrimitiveType(org.apache.parquet.schema.Type.Repetition,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,int,java.lang.String,org.apache.parquet.schema.OriginalType,org.apache.parquet.schema.DecimalMetadata,org.apache.parquet.schema.Type.ID)
org/apache/parquet/schema/TestTypeBuilders/testFixedWithLength()#org/apache/parquet/schema/Types/required(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/schema/TestTypeBuilders/testFixedWithLength()#org/apache/parquet/schema/Types/BasePrimitiveBuilder/length(int)
org/apache/parquet/schema/TestTypeBuilders/testFixedWithLength()#org/apache/parquet/schema/Types/Builder/named(java.lang.String)
org/apache/parquet/schema/TestTypeBuilders/testFixedWithLength()#org/apache/parquet/schema/PrimitiveType/PrimitiveType(org.apache.parquet.schema.Type.Repetition,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,int,java.lang.String)
org/apache/parquet/schema/TestTypeBuilders/testOptionalList()#org/apache/parquet/schema/Types/BaseListBuilder/optionalElement(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/schema/TestTypeBuilders/testOptionalList()#org/apache/parquet/schema/PrimitiveType/PrimitiveType(org.apache.parquet.schema.Type.Repetition,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,java.lang.String)
org/apache/parquet/schema/TestTypeBuilders/testOptionalList()#org/apache/parquet/schema/Types/optionalList()
org/apache/parquet/schema/TestTypeBuilders/testOptionalList()#org/apache/parquet/schema/Types/BaseListBuilder/ElementBuilder/named(java.lang.String)
org/apache/parquet/schema/TestTypeBuilders/testOptionalList()#org/apache/parquet/schema/GroupType/GroupType(org.apache.parquet.schema.Type.Repetition,java.lang.String,org.apache.parquet.schema.OriginalType,org.apache.parquet.schema.Type[])
org/apache/parquet/schema/TestTypeBuilders/testOptionalList()#org/apache/parquet/schema/GroupType/GroupType(org.apache.parquet.schema.Type.Repetition,java.lang.String,org.apache.parquet.schema.Type[])
org/apache/parquet/schema/TestTypeBuilders/testBinaryAnnotations()#org/apache/parquet/schema/Types/Builder/named(java.lang.String)
org/apache/parquet/schema/TestTypeBuilders/testBinaryAnnotations()#org/apache/parquet/schema/Types/Builder/as(org.apache.parquet.schema.OriginalType)
org/apache/parquet/schema/TestTypeBuilders/testBinaryAnnotations()#org/apache/parquet/schema/Types/required(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/schema/TestTypeBuilders/testBinaryAnnotations()#org/apache/parquet/schema/PrimitiveType/PrimitiveType(org.apache.parquet.schema.Type.Repetition,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,java.lang.String,org.apache.parquet.schema.OriginalType)
org/apache/parquet/schema/TestTypeBuilders/assertThrows(java.lang.String,java.lang.Class,java.util.concurrent.Callable)#java/lang/Class/getName()
org/apache/parquet/schema/TestTypeBuilders/assertThrows(java.lang.String,java.lang.Class,java.util.concurrent.Callable)#java/util/concurrent/Callable/call()
org/apache/parquet/schema/TestTypeBuilders/assertThrows(java.lang.String,java.lang.Class,java.util.concurrent.Callable)#java/lang/Object/getClass()
org/apache/parquet/schema/TestTypeBuilders/testDecimalAnnotationMissingScale()#org/apache/parquet/schema/Types/buildMessage()
org/apache/parquet/schema/TestTypeBuilders/testDecimalAnnotationMissingScale()#org/apache/parquet/schema/Types/Builder/named(java.lang.String)
org/apache/parquet/schema/TestTypeBuilders/testDecimalAnnotationMissingScale()#org/apache/parquet/schema/Types/BasePrimitiveBuilder/precision(int)
org/apache/parquet/schema/TestTypeBuilders/testDecimalAnnotationMissingScale()#org/apache/parquet/schema/MessageType/MessageType(java.lang.String,org.apache.parquet.schema.Type[])
org/apache/parquet/schema/TestTypeBuilders/testDecimalAnnotationMissingScale()#org/apache/parquet/schema/Types/BasePrimitiveBuilder/length(int)
org/apache/parquet/schema/TestTypeBuilders/testDecimalAnnotationMissingScale()#org/apache/parquet/schema/Types/Builder/as(org.apache.parquet.schema.OriginalType)
org/apache/parquet/schema/TestTypeBuilders/testDecimalAnnotationMissingScale()#org/apache/parquet/schema/DecimalMetadata/DecimalMetadata(int,int)
org/apache/parquet/schema/TestTypeBuilders/testDecimalAnnotationMissingScale()#org/apache/parquet/schema/Types/BaseGroupBuilder/required(org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName)
org/apache/parquet/schema/TestTypeBuilders/testDecimalAnnotationMissingScale()#org/apache/parquet/schema/PrimitiveType/PrimitiveType(org.apache.parquet.schema.Type.Repetition,org.apache.parquet.schema.PrimitiveType.PrimitiveTypeName,int,java.lang.String,org.apache.parquet.schema.OriginalType,org.apache.parquet.schema.DecimalMetadata,org.apache.parquet.schema.Type.ID)
org/apache/parquet/schema/TestTypeBuilders/testDecimalAnnotationLengthCheck()#org/apache/parquet/schema/TestTypeBuilders/testDecimalAnnotationLengthCheck()/$anonymous4/()
org/apache/parquet/schema/TestTypeBuilders/testDecimalAnnotationLengthCheck()#org/apache/parquet/schema/TestTypeBuilders/testDecimalAnnotationLengthCheck()/$anonymous3/()
org/apache/parquet/schema/TestTypeBuilders/testDecimalAnnotationLengthCheck()#org/apache/parquet/schema/TestTypeBuilders/testDecimalAnnotationLengthCheck()/$anonymous2/()
org/apache/parquet/schema/TestTypeBuilders/testDecimalAnnotationLengthCheck()#org/apache/parquet/schema/TestTypeBuilders/testDecimalAnnotationLengthCheck()/$anonymous1/()
org/apache/parquet/schema/TestTypeBuilders/testDecimalAnnotationLengthCheck()#org/apache/parquet/schema/TestTypeBuilders/assertThrows(java.lang.String,java.lang.Class,java.util.concurrent.Callable)
org/apache/parquet/pig/convert/MapConverter/BufferMap/put(java.lang.String,java.lang.Object)#java/util/AbstractMap/SimpleImmutableEntry/SimpleImmutableEntry(K,V)
org/apache/parquet/pig/convert/MapConverter/BufferMap/put(java.lang.String,java.lang.Object)#java/util/List/add(E)
org/apache/parquet/pig/convert/MapConverter/BufferMap/clear()#java/util/List/clear()
org/apache/parquet/column/values/bitpacking/ThreeBitPackingWriter/write(int)#java/io/OutputStream/write(int)
org/apache/parquet/column/values/bitpacking/ThreeBitPackingWriter/finish()#org/apache/parquet/column/values/bitpacking/BaseBitPackingWriter/finish(int,int,java.io.OutputStream)
org/apache/parquet/avro/AvroRecordConverter/AvroCollectionConverter/ElementConverter/getConverter(int)#org/apache/parquet/Preconditions/checkArgument(boolean,java.lang.String)
org/apache/parquet/avro/AvroRecordConverter/AvroCollectionConverter/ElementConverter/end()#java/util/Collection/add(E)
