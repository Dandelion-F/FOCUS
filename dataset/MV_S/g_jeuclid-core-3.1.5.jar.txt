net/sourceforge/jeuclid/elements/presentation/general/Menclose/parseNotations()#java/util/Stack/Stack()
net/sourceforge/jeuclid/elements/presentation/general/Menclose/parseNotations()#java/lang/String/split(java.lang.String)
net/sourceforge/jeuclid/elements/presentation/general/Menclose/parseNotations()#java/lang/StringBuilder/StringBuilder()
net/sourceforge/jeuclid/elements/presentation/general/Menclose/parseNotations()#java/lang/StringBuilder/toString()
net/sourceforge/jeuclid/elements/presentation/general/Menclose/parseNotations()#java/lang/StringBuilder/append(java.lang.String)
net/sourceforge/jeuclid/elements/presentation/general/Menclose/parseNotations()#java/util/Stack/push(java.lang.Object)
net/sourceforge/jeuclid/elements/presentation/general/Menclose/parseNotations()#java/lang/String/toLowerCase(java.util.Locale)
net/sourceforge/jeuclid/elements/presentation/general/Menclose/parseNotations()#java/lang/String/length()
net/sourceforge/jeuclid/elements/presentation/general/Menclose/parseNotations()#java/util/Map/get(java.lang.Object)
net/sourceforge/jeuclid/elements/presentation/general/Menclose/parseNotations()#org/apache/commons/logging/Log/info(java.lang.Object)
net/sourceforge/jeuclid/swing/JMathComponent/setParameters(java.util.Map)#java/util/Map$Entry/getKey()
net/sourceforge/jeuclid/swing/JMathComponent/setParameters(java.util.Map)#java/util/Iterator/next()
net/sourceforge/jeuclid/swing/JMathComponent/setParameters(java.util.Map)#net/sourceforge/jeuclid/context/Parameter/name()
net/sourceforge/jeuclid/swing/JMathComponent/setParameters(java.util.Map)#net/sourceforge/jeuclid/swing/JMathComponent/revalidate()
net/sourceforge/jeuclid/swing/JMathComponent/setParameters(java.util.Map)#net/sourceforge/jeuclid/swing/JMathComponent/repaint()
net/sourceforge/jeuclid/swing/JMathComponent/setParameters(java.util.Map)#java/util/Map$Entry/getValue()
net/sourceforge/jeuclid/swing/JMathComponent/setParameters(java.util.Map)#java/util/Map/entrySet()
net/sourceforge/jeuclid/swing/JMathComponent/setParameters(java.util.Map)#net/sourceforge/jeuclid/swing/JMathComponent/firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)
net/sourceforge/jeuclid/swing/JMathComponent/setParameters(java.util.Map)#java/util/Iterator/hasNext()
net/sourceforge/jeuclid/swing/JMathComponent/setParameters(java.util.Map)#net/sourceforge/jeuclid/MutableLayoutContext/getParameter(net.sourceforge.jeuclid.context.Parameter)
net/sourceforge/jeuclid/swing/JMathComponent/setParameters(java.util.Map)#java/util/Set/iterator()
net/sourceforge/jeuclid/elements/support/text/StringUtil/convertStringtoAttributedString(java.lang.String,net.sourceforge.jeuclid.elements.support.attributes.MathVariant,float,net.sourceforge.jeuclid.LayoutContext)#java/lang/Integer/intValue()
net/sourceforge/jeuclid/elements/support/text/StringUtil/convertStringtoAttributedString(java.lang.String,net.sourceforge.jeuclid.elements.support.attributes.MathVariant,float,net.sourceforge.jeuclid.LayoutContext)#java/util/ArrayList/ArrayList()
net/sourceforge/jeuclid/elements/support/text/StringUtil/convertStringtoAttributedString(java.lang.String,net.sourceforge.jeuclid.elements.support.attributes.MathVariant,float,net.sourceforge.jeuclid.LayoutContext)#java/lang/String/charAt(int)
net/sourceforge/jeuclid/elements/support/text/StringUtil/convertStringtoAttributedString(java.lang.String,net.sourceforge.jeuclid.elements.support.attributes.MathVariant,float,net.sourceforge.jeuclid.LayoutContext)#java/lang/StringBuilder/appendCodePoint(int)
net/sourceforge/jeuclid/elements/support/text/StringUtil/convertStringtoAttributedString(java.lang.String,net.sourceforge.jeuclid.elements.support.attributes.MathVariant,float,net.sourceforge.jeuclid.LayoutContext)#java/lang/String/codePointAt(int)
net/sourceforge/jeuclid/elements/support/text/StringUtil/convertStringtoAttributedString(java.lang.String,net.sourceforge.jeuclid.elements.support.attributes.MathVariant,float,net.sourceforge.jeuclid.LayoutContext)#java/lang/StringBuilder/StringBuilder()
net/sourceforge/jeuclid/elements/support/text/StringUtil/convertStringtoAttributedString(java.lang.String,net.sourceforge.jeuclid.elements.support.attributes.MathVariant,float,net.sourceforge.jeuclid.LayoutContext)#java/util/List/add(java.lang.Object)
net/sourceforge/jeuclid/elements/support/text/StringUtil/convertStringtoAttributedString(java.lang.String,net.sourceforge.jeuclid.elements.support.attributes.MathVariant,float,net.sourceforge.jeuclid.LayoutContext)#java/lang/StringBuilder/length()
net/sourceforge/jeuclid/elements/support/text/StringUtil/convertStringtoAttributedString(java.lang.String,net.sourceforge.jeuclid.elements.support.attributes.MathVariant,float,net.sourceforge.jeuclid.LayoutContext)#java/lang/StringBuilder/toString()
net/sourceforge/jeuclid/elements/support/text/StringUtil/convertStringtoAttributedString(java.lang.String,net.sourceforge.jeuclid.elements.support.attributes.MathVariant,float,net.sourceforge.jeuclid.LayoutContext)#java/lang/Character/isSupplementaryCodePoint(int)
net/sourceforge/jeuclid/elements/support/text/StringUtil/convertStringtoAttributedString(java.lang.String,net.sourceforge.jeuclid.elements.support.attributes.MathVariant,float,net.sourceforge.jeuclid.LayoutContext)#java/text/AttributedString/addAttribute(java.text.AttributedCharacterIterator$Attribute,java.lang.Object,int,int)
net/sourceforge/jeuclid/elements/support/text/StringUtil/convertStringtoAttributedString(java.lang.String,net.sourceforge.jeuclid.elements.support.attributes.MathVariant,float,net.sourceforge.jeuclid.LayoutContext)#java/lang/String/length()
net/sourceforge/jeuclid/elements/support/text/StringUtil/convertStringtoAttributedString(java.lang.String,net.sourceforge.jeuclid.elements.support.attributes.MathVariant,float,net.sourceforge.jeuclid.LayoutContext)#java/lang/Character/isLowSurrogate(char)
net/sourceforge/jeuclid/elements/support/text/StringUtil/convertStringtoAttributedString(java.lang.String,net.sourceforge.jeuclid.elements.support.attributes.MathVariant,float,net.sourceforge.jeuclid.LayoutContext)#java/text/AttributedString/AttributedString(java.lang.String)
net/sourceforge/jeuclid/elements/support/text/StringUtil/convertStringtoAttributedString(java.lang.String,net.sourceforge.jeuclid.elements.support.attributes.MathVariant,float,net.sourceforge.jeuclid.LayoutContext)#java/util/List/get(int)
net/sourceforge/jeuclid/elements/support/text/StringUtil/convertStringtoAttributedString(java.lang.String,net.sourceforge.jeuclid.elements.support.attributes.MathVariant,float,net.sourceforge.jeuclid.LayoutContext)#java/lang/Character/isHighSurrogate(char)
net/sourceforge/jeuclid/elements/support/text/StringUtil/convertStringtoAttributedString(java.lang.String,net.sourceforge.jeuclid.elements.support.attributes.MathVariant,float,net.sourceforge.jeuclid.LayoutContext)#java/lang/StringBuilder/charAt(int)
net/sourceforge/jeuclid/elements/support/text/StringUtil/createTextLayoutFromAttributedString(java.awt.Graphics2D,java.text.AttributedString,net.sourceforge.jeuclid.LayoutContext)#java/awt/Font/getSize2D()
net/sourceforge/jeuclid/elements/support/text/StringUtil/createTextLayoutFromAttributedString(java.awt.Graphics2D,java.text.AttributedString,net.sourceforge.jeuclid.LayoutContext)#java/awt/Font/Font(java.lang.String,int,int)
net/sourceforge/jeuclid/elements/support/text/StringUtil/createTextLayoutFromAttributedString(java.awt.Graphics2D,java.text.AttributedString,net.sourceforge.jeuclid.LayoutContext)#java/awt/font/TextLayout/TextLayout(java.text.AttributedCharacterIterator,java.awt.font.FontRenderContext)
net/sourceforge/jeuclid/elements/support/text/StringUtil/createTextLayoutFromAttributedString(java.awt.Graphics2D,java.text.AttributedString,net.sourceforge.jeuclid.LayoutContext)#java/awt/font/TextLayout/TextLayout(java.lang.String,java.awt.Font,java.awt.font.FontRenderContext)
net/sourceforge/jeuclid/elements/support/text/StringUtil/createTextLayoutFromAttributedString(java.awt.Graphics2D,java.text.AttributedString,net.sourceforge.jeuclid.LayoutContext)#java/lang/Float/floatValue()
net/sourceforge/jeuclid/elements/support/text/StringUtil/createTextLayoutFromAttributedString(java.awt.Graphics2D,java.text.AttributedString,net.sourceforge.jeuclid.LayoutContext)#java/text/AttributedString/getIterator()
net/sourceforge/jeuclid/elements/support/text/StringUtil/createTextLayoutFromAttributedString(java.awt.Graphics2D,java.text.AttributedString,net.sourceforge.jeuclid.LayoutContext)#java/lang/Boolean/booleanValue()
net/sourceforge/jeuclid/elements/support/text/StringUtil/createTextLayoutFromAttributedString(java.awt.Graphics2D,java.text.AttributedString,net.sourceforge.jeuclid.LayoutContext)#java/awt/Graphics2D/getFontRenderContext()
net/sourceforge/jeuclid/elements/support/text/StringUtil/createTextLayoutFromAttributedString(java.awt.Graphics2D,java.text.AttributedString,net.sourceforge.jeuclid.LayoutContext)#java/text/AttributedCharacterIterator/first()
net/sourceforge/jeuclid/elements/support/text/StringUtil/createTextLayoutFromAttributedString(java.awt.Graphics2D,java.text.AttributedString,net.sourceforge.jeuclid.LayoutContext)#java/awt/font/FontRenderContext/getTransform()
net/sourceforge/jeuclid/elements/support/text/StringUtil/createTextLayoutFromAttributedString(java.awt.Graphics2D,java.text.AttributedString,net.sourceforge.jeuclid.LayoutContext)#java/awt/font/FontRenderContext/FontRenderContext(java.awt.geom.AffineTransform,boolean,boolean)
net/sourceforge/jeuclid/elements/support/text/StringUtil/createTextLayoutFromAttributedString(java.awt.Graphics2D,java.text.AttributedString,net.sourceforge.jeuclid.LayoutContext)#java/text/AttributedCharacterIterator/getAttribute(java.text.AttributedCharacterIterator$Attribute)
net/sourceforge/jeuclid/elements/presentation/table/Mtable/calculateBasicColumnWidth(net.sourceforge.jeuclid.layout.LayoutView,net.sourceforge.jeuclid.layout.LayoutStage,int,java.util.List[])#java/util/ArrayList/ArrayList()
net/sourceforge/jeuclid/elements/presentation/table/Mtable/calculateBasicColumnWidth(net.sourceforge.jeuclid.layout.LayoutView,net.sourceforge.jeuclid.layout.LayoutStage,int,java.util.List[])#java/lang/Boolean/parseBoolean(java.lang.String)
net/sourceforge/jeuclid/elements/presentation/table/Mtable/calculateBasicColumnWidth(net.sourceforge.jeuclid.layout.LayoutView,net.sourceforge.jeuclid.layout.LayoutStage,int,java.util.List[])#java/util/Iterator/hasNext()
net/sourceforge/jeuclid/elements/presentation/table/Mtable/calculateBasicColumnWidth(net.sourceforge.jeuclid.layout.LayoutView,net.sourceforge.jeuclid.layout.LayoutStage,int,java.util.List[])#java/lang/Float/valueOf(float)
net/sourceforge/jeuclid/elements/presentation/table/Mtable/calculateBasicColumnWidth(net.sourceforge.jeuclid.layout.LayoutView,net.sourceforge.jeuclid.layout.LayoutStage,int,java.util.List[])#java/util/List/size()
net/sourceforge/jeuclid/elements/presentation/table/Mtable/calculateBasicColumnWidth(net.sourceforge.jeuclid.layout.LayoutView,net.sourceforge.jeuclid.layout.LayoutStage,int,java.util.List[])#java/util/Iterator/next()
net/sourceforge/jeuclid/elements/presentation/table/Mtable/calculateBasicColumnWidth(net.sourceforge.jeuclid.layout.LayoutView,net.sourceforge.jeuclid.layout.LayoutStage,int,java.util.List[])#java/lang/Float/floatValue()
net/sourceforge/jeuclid/elements/presentation/table/Mtable/calculateBasicColumnWidth(net.sourceforge.jeuclid.layout.LayoutView,net.sourceforge.jeuclid.layout.LayoutStage,int,java.util.List[])#java/util/List/add(java.lang.Object)
net/sourceforge/jeuclid/elements/presentation/table/Mtable/calculateBasicColumnWidth(net.sourceforge.jeuclid.layout.LayoutView,net.sourceforge.jeuclid.layout.LayoutStage,int,java.util.List[])#java/lang/Math/max(float,float)
net/sourceforge/jeuclid/elements/presentation/table/Mtable/calculateBasicColumnWidth(net.sourceforge.jeuclid.layout.LayoutView,net.sourceforge.jeuclid.layout.LayoutStage,int,java.util.List[])#java/util/List/get(int)
net/sourceforge/jeuclid/elements/presentation/table/Mtable/calculateBasicColumnWidth(net.sourceforge.jeuclid.layout.LayoutView,net.sourceforge.jeuclid.layout.LayoutStage,int,java.util.List[])#java/util/List/iterator()
net/sourceforge/jeuclid/elements/presentation/table/Mtable/calculateBasicColumnWidth(net.sourceforge.jeuclid.layout.LayoutView,net.sourceforge.jeuclid.layout.LayoutStage,int,java.util.List[])#java/util/List/set(int,java.lang.Object)
net/sourceforge/jeuclid/converter/ConverterRegistry/getAvailableExtensions()#java/util/Iterator/hasNext()
net/sourceforge/jeuclid/converter/ConverterRegistry/getAvailableExtensions()#java/util/Map$Entry/getKey()
net/sourceforge/jeuclid/converter/ConverterRegistry/getAvailableExtensions()#java/util/Iterator/next()
net/sourceforge/jeuclid/converter/ConverterRegistry/getAvailableExtensions()#java/util/Set/iterator()
net/sourceforge/jeuclid/converter/ConverterRegistry/getAvailableExtensions()#java/util/Map/containsKey(java.lang.Object)
net/sourceforge/jeuclid/converter/ConverterRegistry/getAvailableExtensions()#java/util/Map$Entry/getValue()
net/sourceforge/jeuclid/converter/ConverterRegistry/getAvailableExtensions()#java/util/HashSet/HashSet()
net/sourceforge/jeuclid/converter/ConverterRegistry/getAvailableExtensions()#java/util/Map/entrySet()
net/sourceforge/jeuclid/converter/ConverterRegistry/getAvailableExtensions()#java/util/Set/add(java.lang.Object)
net/sourceforge/jeuclid/parser/Parser/parseStreamSourceAsXml(javax.xml.transform.stream.StreamSource)#javax/xml/transform/stream/StreamSource/getSystemId()
net/sourceforge/jeuclid/parser/Parser/parseStreamSourceAsXml(javax.xml.transform.stream.StreamSource)#javax/xml/transform/stream/StreamSource/getInputStream()
net/sourceforge/jeuclid/parser/Parser/parseStreamSourceAsXml(javax.xml.transform.stream.StreamSource)#java/lang/StringBuilder/append(java.lang.String)
net/sourceforge/jeuclid/parser/Parser/parseStreamSourceAsXml(javax.xml.transform.stream.StreamSource)#org/xml/sax/InputSource/InputSource(java.io.InputStream)
net/sourceforge/jeuclid/parser/Parser/parseStreamSourceAsXml(javax.xml.transform.stream.StreamSource)#org/xml/sax/InputSource/InputSource(java.lang.String)
net/sourceforge/jeuclid/parser/Parser/parseStreamSourceAsXml(javax.xml.transform.stream.StreamSource)#javax/xml/parsers/DocumentBuilder/parse(org.xml.sax.InputSource)
net/sourceforge/jeuclid/parser/Parser/parseStreamSourceAsXml(javax.xml.transform.stream.StreamSource)#java/lang/StringBuilder/StringBuilder()
net/sourceforge/jeuclid/parser/Parser/parseStreamSourceAsXml(javax.xml.transform.stream.StreamSource)#org/xml/sax/InputSource/InputSource(java.io.Reader)
net/sourceforge/jeuclid/parser/Parser/parseStreamSourceAsXml(javax.xml.transform.stream.StreamSource)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
net/sourceforge/jeuclid/parser/Parser/parseStreamSourceAsXml(javax.xml.transform.stream.StreamSource)#java/lang/StringBuilder/append(java.lang.Object)
net/sourceforge/jeuclid/parser/Parser/parseStreamSourceAsXml(javax.xml.transform.stream.StreamSource)#javax/xml/transform/stream/StreamSource/getReader()
net/sourceforge/jeuclid/parser/Parser/parseStreamSourceAsXml(javax.xml.transform.stream.StreamSource)#java/lang/StringBuilder/toString()
net/sourceforge/jeuclid/parser/Parser/createDocumentBuilder()#org/apache/commons/logging/Log/debug(java.lang.Object)
net/sourceforge/jeuclid/parser/Parser/createDocumentBuilder()#org/apache/commons/logging/Log/warn(java.lang.Object)
net/sourceforge/jeuclid/parser/Parser/createDocumentBuilder()#java/lang/StringBuilder/append(java.lang.String)
net/sourceforge/jeuclid/parser/Parser/createDocumentBuilder()#java/lang/AssertionError/AssertionError(java.lang.Object)
net/sourceforge/jeuclid/parser/Parser/createDocumentBuilder()#java/lang/UnsupportedOperationException/getMessage()
net/sourceforge/jeuclid/parser/Parser/createDocumentBuilder()#java/lang/StringBuilder/StringBuilder()
net/sourceforge/jeuclid/parser/Parser/createDocumentBuilder()#net/sourceforge/jeuclid/parser/Parser$LoggerErrorHandler/LoggerErrorHandler()
net/sourceforge/jeuclid/parser/Parser/createDocumentBuilder()#javax/xml/parsers/ParserConfigurationException/getMessage()
net/sourceforge/jeuclid/parser/Parser/createDocumentBuilder()#java/lang/StringBuilder/toString()
net/sourceforge/jeuclid/parser/Parser/createDocumentBuilder()#javax/xml/parsers/DocumentBuilder/setEntityResolver(org.xml.sax.EntityResolver)
net/sourceforge/jeuclid/parser/Parser/createDocumentBuilder()#javax/xml/parsers/DocumentBuilder/setErrorHandler(org.xml.sax.ErrorHandler)
net/sourceforge/jeuclid/parser/Parser/parseStreamSourceAsOdf(javax.xml.transform.stream.StreamSource)#java/util/zip/ZipInputStream/ZipInputStream(java.io.InputStream)
net/sourceforge/jeuclid/parser/Parser/parseStreamSourceAsOdf(javax.xml.transform.stream.StreamSource)#javax/xml/parsers/DocumentBuilder/parse(java.io.InputStream)
net/sourceforge/jeuclid/parser/Parser/parseStreamSourceAsOdf(javax.xml.transform.stream.StreamSource)#javax/xml/transform/stream/StreamSource/getInputStream()
net/sourceforge/jeuclid/parser/Parser/parseStreamSourceAsOdf(javax.xml.transform.stream.StreamSource)#java/lang/StringBuilder/append(java.lang.String)
net/sourceforge/jeuclid/parser/Parser/parseStreamSourceAsOdf(javax.xml.transform.stream.StreamSource)#java/util/zip/ZipEntry/getName()
net/sourceforge/jeuclid/parser/Parser/parseStreamSourceAsOdf(javax.xml.transform.stream.StreamSource)#java/lang/String/equals(java.lang.Object)
net/sourceforge/jeuclid/parser/Parser/parseStreamSourceAsOdf(javax.xml.transform.stream.StreamSource)#java/lang/StringBuilder/StringBuilder()
net/sourceforge/jeuclid/parser/Parser/parseStreamSourceAsOdf(javax.xml.transform.stream.StreamSource)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
net/sourceforge/jeuclid/parser/Parser/parseStreamSourceAsOdf(javax.xml.transform.stream.StreamSource)#java/lang/StringBuilder/append(java.lang.Object)
net/sourceforge/jeuclid/parser/Parser/parseStreamSourceAsOdf(javax.xml.transform.stream.StreamSource)#java/util/zip/ZipInputStream/getNextEntry()
net/sourceforge/jeuclid/parser/Parser/parseStreamSourceAsOdf(javax.xml.transform.stream.StreamSource)#java/lang/StringBuilder/toString()
net/sourceforge/jeuclid/parser/Parser/parse(javax.xml.transform.Source)#javax/xml/transform/dom/DOMSource/getNode()
net/sourceforge/jeuclid/parser/Parser/parse(javax.xml.transform.Source)#javax/xml/transform/dom/DOMResult/getNode()
net/sourceforge/jeuclid/parser/Parser/parse(javax.xml.transform.Source)#javax/xml/transform/TransformerFactory/newInstance()
net/sourceforge/jeuclid/parser/Parser/parse(javax.xml.transform.Source)#org/apache/commons/logging/Log/warn(java.lang.Object)
net/sourceforge/jeuclid/parser/Parser/parse(javax.xml.transform.Source)#java/lang/StringBuilder/append(java.lang.String)
net/sourceforge/jeuclid/parser/Parser/parse(javax.xml.transform.Source)#org/apache/xmlgraphics/image/loader/ImageSource/getInputStream()
net/sourceforge/jeuclid/parser/Parser/parse(javax.xml.transform.Source)#javax/xml/transform/TransformerException/getMessage()
net/sourceforge/jeuclid/parser/Parser/parse(javax.xml.transform.Source)#java/lang/StringBuilder/StringBuilder()
net/sourceforge/jeuclid/parser/Parser/parse(javax.xml.transform.Source)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String,java.lang.Throwable)
net/sourceforge/jeuclid/parser/Parser/parse(javax.xml.transform.Source)#javax/xml/transform/stream/StreamSource/StreamSource(java.io.InputStream)
net/sourceforge/jeuclid/parser/Parser/parse(javax.xml.transform.Source)#javax/xml/transform/dom/DOMResult/DOMResult()
net/sourceforge/jeuclid/parser/Parser/parse(javax.xml.transform.Source)#java/lang/StringBuilder/append(java.lang.Object)
net/sourceforge/jeuclid/parser/Parser/parse(javax.xml.transform.Source)#javax/xml/transform/Transformer/transform(javax.xml.transform.Source,javax.xml.transform.Result)
net/sourceforge/jeuclid/parser/Parser/parse(javax.xml.transform.Source)#java/lang/StringBuilder/toString()
net/sourceforge/jeuclid/parser/Parser/parse(javax.xml.transform.Source)#javax/xml/transform/TransformerFactory/newTransformer()
net/sourceforge/jeuclid/elements/support/attributes/AttributesHelper/convertSizeToPt(java.lang.String,net.sourceforge.jeuclid.LayoutContext,java.lang.String)#java/lang/Float/parseFloat(java.lang.String)
net/sourceforge/jeuclid/elements/support/attributes/AttributesHelper/convertSizeToPt(java.lang.String,net.sourceforge.jeuclid.LayoutContext,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
net/sourceforge/jeuclid/elements/support/attributes/AttributesHelper/convertSizeToPt(java.lang.String,net.sourceforge.jeuclid.LayoutContext,java.lang.String)#java/lang/String/substring(int,int)
net/sourceforge/jeuclid/elements/support/attributes/AttributesHelper/convertSizeToPt(java.lang.String,net.sourceforge.jeuclid.LayoutContext,java.lang.String)#java/lang/StringBuilder/StringBuilder()
net/sourceforge/jeuclid/elements/support/attributes/AttributesHelper/convertSizeToPt(java.lang.String,net.sourceforge.jeuclid.LayoutContext,java.lang.String)#java/lang/StringBuilder/append(float)
net/sourceforge/jeuclid/elements/support/attributes/AttributesHelper/convertSizeToPt(java.lang.String,net.sourceforge.jeuclid.LayoutContext,java.lang.String)#java/lang/StringBuilder/toString()
net/sourceforge/jeuclid/elements/support/attributes/AttributesHelper/convertSizeToPt(java.lang.String,net.sourceforge.jeuclid.LayoutContext,java.lang.String)#org/apache/commons/logging/Log/warn(java.lang.Object)
net/sourceforge/jeuclid/elements/support/attributes/AttributesHelper/convertSizeToPt(java.lang.String,net.sourceforge.jeuclid.LayoutContext,java.lang.String)#java/lang/String/length()
net/sourceforge/jeuclid/elements/support/attributes/AttributesHelper/convertSizeToPt(java.lang.String,net.sourceforge.jeuclid.LayoutContext,java.lang.String)#java/util/Map/get(java.lang.Object)
net/sourceforge/jeuclid/elements/support/attributes/AttributesHelper/convertSizeToPt(java.lang.String,net.sourceforge.jeuclid.LayoutContext,java.lang.String)#java/lang/String/substring(int)
net/sourceforge/jeuclid/elements/support/attributes/AttributesHelper/convertSizeToPt(java.lang.String,net.sourceforge.jeuclid.LayoutContext,java.lang.String)#java/lang/Float/floatValue()
net/sourceforge/jeuclid/elements/support/attributes/AttributesHelper/convertSizeToPt(java.lang.String,net.sourceforge.jeuclid.LayoutContext,java.lang.String)#java/util/Map/containsKey(java.lang.Object)
net/sourceforge/jeuclid/elements/support/attributes/AttributesHelper/parseRelativeSize(java.lang.String,net.sourceforge.jeuclid.LayoutContext,float)#java/lang/Float/parseFloat(java.lang.String)
net/sourceforge/jeuclid/elements/support/attributes/AttributesHelper/parseRelativeSize(java.lang.String,net.sourceforge.jeuclid.LayoutContext,float)#java/lang/StringBuilder/append(java.lang.String)
net/sourceforge/jeuclid/elements/support/attributes/AttributesHelper/parseRelativeSize(java.lang.String,net.sourceforge.jeuclid.LayoutContext,float)#java/lang/String/substring(int,int)
net/sourceforge/jeuclid/elements/support/attributes/AttributesHelper/parseRelativeSize(java.lang.String,net.sourceforge.jeuclid.LayoutContext,float)#java/lang/StringBuilder/StringBuilder()
net/sourceforge/jeuclid/elements/support/attributes/AttributesHelper/parseRelativeSize(java.lang.String,net.sourceforge.jeuclid.LayoutContext,float)#java/lang/StringBuilder/toString()
net/sourceforge/jeuclid/elements/support/attributes/AttributesHelper/parseRelativeSize(java.lang.String,net.sourceforge.jeuclid.LayoutContext,float)#org/apache/commons/logging/Log/warn(java.lang.Object)
net/sourceforge/jeuclid/elements/support/attributes/AttributesHelper/parseRelativeSize(java.lang.String,net.sourceforge.jeuclid.LayoutContext,float)#java/lang/String/length()
net/sourceforge/jeuclid/elements/support/attributes/AttributesHelper/parseRelativeSize(java.lang.String,net.sourceforge.jeuclid.LayoutContext,float)#java/util/Map/get(java.lang.Object)
net/sourceforge/jeuclid/elements/support/attributes/AttributesHelper/parseRelativeSize(java.lang.String,net.sourceforge.jeuclid.LayoutContext,float)#java/lang/String/substring(int)
net/sourceforge/jeuclid/elements/support/attributes/AttributesHelper/parseRelativeSize(java.lang.String,net.sourceforge.jeuclid.LayoutContext,float)#java/lang/Float/floatValue()
net/sourceforge/jeuclid/elements/support/attributes/AttributesHelper/parseRelativeSize(java.lang.String,net.sourceforge.jeuclid.LayoutContext,float)#java/util/Map/containsKey(java.lang.Object)
net/sourceforge/jeuclid/elements/support/attributes/AttributesHelper/colorTOsRGBString(java.awt.Color)#java/awt/Color/getBlue()
net/sourceforge/jeuclid/elements/support/attributes/AttributesHelper/colorTOsRGBString(java.awt.Color)#java/awt/Color/getRed()
net/sourceforge/jeuclid/elements/support/attributes/AttributesHelper/colorTOsRGBString(java.awt.Color)#java/lang/StringBuffer/StringBuffer(int)
net/sourceforge/jeuclid/elements/support/attributes/AttributesHelper/colorTOsRGBString(java.awt.Color)#java/lang/StringBuffer/append(char)
net/sourceforge/jeuclid/elements/support/attributes/AttributesHelper/colorTOsRGBString(java.awt.Color)#java/lang/String/length()
net/sourceforge/jeuclid/elements/support/attributes/AttributesHelper/colorTOsRGBString(java.awt.Color)#java/awt/Color/getAlpha()
net/sourceforge/jeuclid/elements/support/attributes/AttributesHelper/colorTOsRGBString(java.awt.Color)#java/lang/Integer/toHexString(int)
net/sourceforge/jeuclid/elements/support/attributes/AttributesHelper/colorTOsRGBString(java.awt.Color)#java/lang/StringBuffer/toString()
net/sourceforge/jeuclid/elements/support/attributes/AttributesHelper/colorTOsRGBString(java.awt.Color)#java/awt/Color/getGreen()
net/sourceforge/jeuclid/elements/support/attributes/AttributesHelper/colorTOsRGBString(java.awt.Color)#java/lang/StringBuffer/append(java.lang.String)
net/sourceforge/jeuclid/converter/Converter/convert(org.w3c.dom.Node,java.io.File,java.lang.String,net.sourceforge.jeuclid.MutableLayoutContext)#java/io/OutputStream/close()
net/sourceforge/jeuclid/converter/Converter/convert(org.w3c.dom.Node,java.io.File,java.lang.String,net.sourceforge.jeuclid.MutableLayoutContext)#org/apache/commons/logging/Log/debug(java.lang.Object)
net/sourceforge/jeuclid/converter/Converter/convert(org.w3c.dom.Node,java.io.File,java.lang.String,net.sourceforge.jeuclid.MutableLayoutContext)#java/lang/StringBuilder/append(java.lang.String)
net/sourceforge/jeuclid/converter/Converter/convert(org.w3c.dom.Node,java.io.File,java.lang.String,net.sourceforge.jeuclid.MutableLayoutContext)#java/io/BufferedOutputStream/BufferedOutputStream(java.io.OutputStream)
net/sourceforge/jeuclid/converter/Converter/convert(org.w3c.dom.Node,java.io.File,java.lang.String,net.sourceforge.jeuclid.MutableLayoutContext)#java/lang/StringBuilder/append(java.lang.Object)
net/sourceforge/jeuclid/converter/Converter/convert(org.w3c.dom.Node,java.io.File,java.lang.String,net.sourceforge.jeuclid.MutableLayoutContext)#java/lang/StringBuilder/toString()
net/sourceforge/jeuclid/converter/Converter/convert(org.w3c.dom.Node,java.io.File,java.lang.String,net.sourceforge.jeuclid.MutableLayoutContext)#java/lang/StringBuilder/StringBuilder()
net/sourceforge/jeuclid/converter/Converter/convert(org.w3c.dom.Node,java.io.File,java.lang.String,net.sourceforge.jeuclid.MutableLayoutContext)#java/io/File/delete()
net/sourceforge/jeuclid/converter/Converter/convert(org.w3c.dom.Node,java.io.File,java.lang.String,net.sourceforge.jeuclid.MutableLayoutContext)#java/io/FileOutputStream/FileOutputStream(java.io.File)
net/sourceforge/jeuclid/elements/support/operatordict/OperatorDictionary/DictionaryReader/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#net/sourceforge/jeuclid/elements/support/operatordict/UnknownAttributeException/getMessage()
net/sourceforge/jeuclid/elements/support/operatordict/OperatorDictionary/DictionaryReader/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#org/xml/sax/Attributes/getQName(int)
net/sourceforge/jeuclid/elements/support/operatordict/OperatorDictionary/DictionaryReader/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#org/xml/sax/Attributes/getLength()
net/sourceforge/jeuclid/elements/support/operatordict/OperatorDictionary/DictionaryReader/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#net/sourceforge/jeuclid/elements/support/operatordict/OperatorForm/parseOperatorForm(java.lang.String)
net/sourceforge/jeuclid/elements/support/operatordict/OperatorDictionary/DictionaryReader/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#java/lang/String/equals(java.lang.Object)
net/sourceforge/jeuclid/elements/support/operatordict/OperatorDictionary/DictionaryReader/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#org/apache/commons/logging/Log/fatal(java.lang.Object)
net/sourceforge/jeuclid/elements/support/operatordict/OperatorDictionary/DictionaryReader/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#net/sourceforge/jeuclid/elements/support/operatordict/OperatorAttribute/parseOperatorAttribute(java.lang.String)
net/sourceforge/jeuclid/elements/support/operatordict/OperatorDictionary/DictionaryReader/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#java/util/Map/put(java.lang.Object,java.lang.Object)
net/sourceforge/jeuclid/elements/support/operatordict/OperatorDictionary/DictionaryReader/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#org/xml/sax/Attributes/getValue(java.lang.String)
net/sourceforge/jeuclid/elements/support/operatordict/OperatorDictionary/DictionaryReader/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#java/util/TreeMap/TreeMap()
net/sourceforge/jeuclid/elements/support/operatordict/OperatorDictionary/DictionaryReader/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#org/xml/sax/Attributes/getValue(int)
net/sourceforge/jeuclid/elements/support/operatordict/OperatorDictionary/DictionaryReader/endElement(java.lang.String,java.lang.String,java.lang.String)#java/util/Map/put(java.lang.Object,java.lang.Object)
net/sourceforge/jeuclid/elements/support/operatordict/OperatorDictionary/DictionaryReader/endElement(java.lang.String,java.lang.String,java.lang.String)#java/util/Map$Entry/getKey()
net/sourceforge/jeuclid/elements/support/operatordict/OperatorDictionary/DictionaryReader/endElement(java.lang.String,java.lang.String,java.lang.String)#java/util/Map/get(java.lang.Object)
net/sourceforge/jeuclid/elements/support/operatordict/OperatorDictionary/DictionaryReader/endElement(java.lang.String,java.lang.String,java.lang.String)#java/lang/String/equals(java.lang.Object)
net/sourceforge/jeuclid/elements/support/operatordict/OperatorDictionary/DictionaryReader/endElement(java.lang.String,java.lang.String,java.lang.String)#java/util/Set/iterator()
net/sourceforge/jeuclid/elements/support/operatordict/OperatorDictionary/DictionaryReader/endElement(java.lang.String,java.lang.String,java.lang.String)#java/util/Map$Entry/getValue()
net/sourceforge/jeuclid/elements/support/operatordict/OperatorDictionary/DictionaryReader/endElement(java.lang.String,java.lang.String,java.lang.String)#java/util/Map/entrySet()
net/sourceforge/jeuclid/elements/support/operatordict/OperatorDictionary/DictionaryReader/endElement(java.lang.String,java.lang.String,java.lang.String)#java/util/Iterator/hasNext()
net/sourceforge/jeuclid/elements/support/operatordict/OperatorDictionary/DictionaryReader/endElement(java.lang.String,java.lang.String,java.lang.String)#java/util/EnumMap/EnumMap(java.lang.Class)
net/sourceforge/jeuclid/elements/support/operatordict/OperatorDictionary/DictionaryReader/endElement(java.lang.String,java.lang.String,java.lang.String)#java/util/TreeMap/TreeMap()
net/sourceforge/jeuclid/elements/support/operatordict/OperatorDictionary/DictionaryReader/endElement(java.lang.String,java.lang.String,java.lang.String)#java/util/Iterator/next()
net/sourceforge/jeuclid/ant/MathMLConverter/process(java.io.File,java.util.List,java.io.File)#org/apache/tools/ant/util/FileUtils/delete(java.io.File)
net/sourceforge/jeuclid/ant/MathMLConverter/process(java.io.File,java.util.List,java.io.File)#java/util/Iterator/hasNext()
net/sourceforge/jeuclid/ant/MathMLConverter/process(java.io.File,java.util.List,java.io.File)#java/lang/StringBuilder/append(java.lang.String)
net/sourceforge/jeuclid/ant/MathMLConverter/process(java.io.File,java.util.List,java.io.File)#org/apache/tools/ant/BuildException/BuildException(java.lang.Throwable)
net/sourceforge/jeuclid/ant/MathMLConverter/process(java.io.File,java.util.List,java.io.File)#java/util/Iterator/next()
net/sourceforge/jeuclid/ant/MathMLConverter/process(java.io.File,java.util.List,java.io.File)#java/lang/StringBuilder/append(char)
net/sourceforge/jeuclid/ant/MathMLConverter/process(java.io.File,java.util.List,java.io.File)#java/lang/StringBuilder/append(java.lang.Object)
net/sourceforge/jeuclid/ant/MathMLConverter/process(java.io.File,java.util.List,java.io.File)#java/util/List/iterator()
net/sourceforge/jeuclid/ant/MathMLConverter/process(java.io.File,java.util.List,java.io.File)#org/apache/tools/ant/util/FileUtils/isUpToDate(java.io.File,java.io.File)
net/sourceforge/jeuclid/ant/MathMLConverter/process(java.io.File,java.util.List,java.io.File)#org/apache/tools/ant/util/FileUtils/resolveFile(java.io.File,java.lang.String)
net/sourceforge/jeuclid/ant/MathMLConverter/process(java.io.File,java.util.List,java.io.File)#java/lang/StringBuilder/toString()
net/sourceforge/jeuclid/ant/MathMLConverter/process(java.io.File,java.util.List,java.io.File)#org/apache/tools/ant/util/FileUtils/createNewFile(java.io.File,boolean)
net/sourceforge/jeuclid/ant/MathMLConverter/process(java.io.File,java.util.List,java.io.File)#java/lang/String/substring(int,int)
net/sourceforge/jeuclid/ant/MathMLConverter/process(java.io.File,java.util.List,java.io.File)#java/lang/StringBuilder/StringBuilder()
net/sourceforge/jeuclid/ant/MathMLConverter/process(java.io.File,java.util.List,java.io.File)#net/sourceforge/jeuclid/ant/MathMLConverter/log(java.lang.String,int)
net/sourceforge/jeuclid/ant/MathMLConverter/process(java.io.File,java.util.List,java.io.File)#java/lang/String/lastIndexOf(int)
net/sourceforge/jeuclid/ant/MathMLConverter/execute()#net/sourceforge/jeuclid/ant/MathMLConverter/getProject()
net/sourceforge/jeuclid/ant/MathMLConverter/execute()#net/sourceforge/jeuclid/ant/MathMLConverter/getDirectoryScanner(java.io.File)
net/sourceforge/jeuclid/ant/MathMLConverter/execute()#org/apache/tools/ant/BuildException/BuildException(java.lang.Throwable)
net/sourceforge/jeuclid/ant/MathMLConverter/execute()#org/apache/tools/ant/DirectoryScanner/getIncludedFiles()
net/sourceforge/jeuclid/ant/MathMLConverter/execute()#java/util/Arrays/asList(java.lang.Object[])
net/sourceforge/jeuclid/ant/MathMLConverter/execute()#java/io/File/list()
net/sourceforge/jeuclid/ant/MathMLConverter/execute()#org/apache/tools/ant/BuildException/BuildException(java.lang.String)
net/sourceforge/jeuclid/ant/MathMLConverter/execute()#java/lang/StringBuilder/append(java.lang.Object)
net/sourceforge/jeuclid/ant/MathMLConverter/execute()#org/apache/tools/ant/util/FileUtils/resolveFile(java.io.File,java.lang.String)
net/sourceforge/jeuclid/ant/MathMLConverter/execute()#java/util/Arrays/toString(java.lang.Object[])
net/sourceforge/jeuclid/ant/MathMLConverter/execute()#java/lang/StringBuilder/append(java.lang.String)
net/sourceforge/jeuclid/ant/MathMLConverter/execute()#java/lang/StringBuilder/StringBuilder()
net/sourceforge/jeuclid/ant/MathMLConverter/execute()#net/sourceforge/jeuclid/ant/MathMLConverter/log(java.lang.String,int)
net/sourceforge/jeuclid/ant/MathMLConverter/execute()#org/apache/tools/ant/Project/resolveFile(java.lang.String)
net/sourceforge/jeuclid/ant/MathMLConverter/execute()#java/lang/StringBuilder/toString()
net/sourceforge/jeuclid/ant/MathMLConverter/execute()#org/apache/tools/ant/DirectoryScanner/getIncludedDirectories()
net/sourceforge/jeuclid/elements/presentation/general/AbstractRoot/layoutStageInvariant(net.sourceforge.jeuclid.layout.LayoutView,net.sourceforge.jeuclid.layout.LayoutInfo,net.sourceforge.jeuclid.layout.LayoutStage,net.sourceforge.jeuclid.LayoutContext)#net/sourceforge/jeuclid/elements/presentation/general/AbstractRoot/getMiddleShift(java.awt.Graphics2D,net.sourceforge.jeuclid.LayoutContext)
net/sourceforge/jeuclid/elements/presentation/general/AbstractRoot/layoutStageInvariant(net.sourceforge.jeuclid.layout.LayoutView,net.sourceforge.jeuclid.layout.LayoutInfo,net.sourceforge.jeuclid.layout.LayoutStage,net.sourceforge.jeuclid.LayoutContext)#java/util/Iterator/next()
net/sourceforge/jeuclid/elements/presentation/general/AbstractRoot/layoutStageInvariant(net.sourceforge.jeuclid.layout.LayoutView,net.sourceforge.jeuclid.layout.LayoutInfo,net.sourceforge.jeuclid.layout.LayoutStage,net.sourceforge.jeuclid.LayoutContext)#java/awt/FontMetrics/getAscent()
net/sourceforge/jeuclid/elements/presentation/general/AbstractRoot/layoutStageInvariant(net.sourceforge.jeuclid.layout.LayoutView,net.sourceforge.jeuclid.layout.LayoutInfo,net.sourceforge.jeuclid.layout.LayoutStage,net.sourceforge.jeuclid.LayoutContext)#java/util/List/clear()
net/sourceforge/jeuclid/elements/presentation/general/AbstractRoot/layoutStageInvariant(net.sourceforge.jeuclid.layout.LayoutView,net.sourceforge.jeuclid.layout.LayoutInfo,net.sourceforge.jeuclid.layout.LayoutStage,net.sourceforge.jeuclid.LayoutContext)#java/util/List/add(java.lang.Object)
net/sourceforge/jeuclid/elements/presentation/general/AbstractRoot/layoutStageInvariant(net.sourceforge.jeuclid.layout.LayoutView,net.sourceforge.jeuclid.layout.LayoutInfo,net.sourceforge.jeuclid.layout.LayoutStage,net.sourceforge.jeuclid.LayoutContext)#java/util/Iterator/hasNext()
net/sourceforge/jeuclid/elements/presentation/general/AbstractRoot/layoutStageInvariant(net.sourceforge.jeuclid.layout.LayoutView,net.sourceforge.jeuclid.layout.LayoutInfo,net.sourceforge.jeuclid.layout.LayoutStage,net.sourceforge.jeuclid.LayoutContext)#net/sourceforge/jeuclid/elements/presentation/general/AbstractRoot/applyLocalAttributesToContext(net.sourceforge.jeuclid.LayoutContext)
net/sourceforge/jeuclid/elements/presentation/general/AbstractRoot/layoutStageInvariant(net.sourceforge.jeuclid.layout.LayoutView,net.sourceforge.jeuclid.layout.LayoutInfo,net.sourceforge.jeuclid.layout.LayoutStage,net.sourceforge.jeuclid.LayoutContext)#java/lang/Math/max(float,float)
net/sourceforge/jeuclid/elements/presentation/general/AbstractRoot/layoutStageInvariant(net.sourceforge.jeuclid.layout.LayoutView,net.sourceforge.jeuclid.layout.LayoutInfo,net.sourceforge.jeuclid.layout.LayoutStage,net.sourceforge.jeuclid.LayoutContext)#net/sourceforge/jeuclid/elements/presentation/general/AbstractRoot/getIndex()
net/sourceforge/jeuclid/elements/presentation/general/AbstractRoot/layoutStageInvariant(net.sourceforge.jeuclid.layout.LayoutView,net.sourceforge.jeuclid.layout.LayoutInfo,net.sourceforge.jeuclid.layout.LayoutStage,net.sourceforge.jeuclid.LayoutContext)#java/awt/FontMetrics/getDescent()
net/sourceforge/jeuclid/elements/presentation/general/AbstractRoot/layoutStageInvariant(net.sourceforge.jeuclid.layout.LayoutView,net.sourceforge.jeuclid.layout.LayoutInfo,net.sourceforge.jeuclid.layout.LayoutStage,net.sourceforge.jeuclid.LayoutContext)#java/util/List/iterator()
net/sourceforge/jeuclid/elements/presentation/general/AbstractRoot/layoutStageInvariant(net.sourceforge.jeuclid.layout.LayoutView,net.sourceforge.jeuclid.layout.LayoutInfo,net.sourceforge.jeuclid.layout.LayoutStage,net.sourceforge.jeuclid.LayoutContext)#net/sourceforge/jeuclid/elements/presentation/general/AbstractRoot/getFontMetrics(java.awt.Graphics2D,net.sourceforge.jeuclid.LayoutContext)
net/sourceforge/jeuclid/converter/ImageIODetector/detectConversionPlugins(net.sourceforge.jeuclid.converter.ConverterRegistry)#javax/imageio/ImageIO/getImageWritersByMIMEType(java.lang.String)
net/sourceforge/jeuclid/converter/ImageIODetector/detectConversionPlugins(net.sourceforge.jeuclid.converter.ConverterRegistry)#javax/imageio/spi/ImageWriterSpi/getFileSuffixes()
net/sourceforge/jeuclid/converter/ImageIODetector/detectConversionPlugins(net.sourceforge.jeuclid.converter.ConverterRegistry)#javax/imageio/ImageIO/getWriterMIMETypes()
net/sourceforge/jeuclid/converter/ImageIODetector/detectConversionPlugins(net.sourceforge.jeuclid.converter.ConverterRegistry)#java/util/Iterator/next()
net/sourceforge/jeuclid/converter/ImageIODetector/detectConversionPlugins(net.sourceforge.jeuclid.converter.ConverterRegistry)#java/util/Set/contains(java.lang.Object)
net/sourceforge/jeuclid/converter/ImageIODetector/detectConversionPlugins(net.sourceforge.jeuclid.converter.ConverterRegistry)#java/util/TreeSet/TreeSet()
net/sourceforge/jeuclid/converter/ImageIODetector/detectConversionPlugins(net.sourceforge.jeuclid.converter.ConverterRegistry)#java/util/Set/add(java.lang.Object)
net/sourceforge/jeuclid/converter/ImageIODetector/detectConversionPlugins(net.sourceforge.jeuclid.converter.ConverterRegistry)#java/util/Iterator/hasNext()
net/sourceforge/jeuclid/converter/ImageIODetector/detectConversionPlugins(net.sourceforge.jeuclid.converter.ConverterRegistry)#javax/imageio/ImageWriter/getOriginatingProvider()
net/sourceforge/jeuclid/converter/ImageIOConverter/convert(org.w3c.dom.Node,net.sourceforge.jeuclid.LayoutContext,java.io.OutputStream)#java/awt/Dimension/Dimension(int,int)
net/sourceforge/jeuclid/converter/ImageIOConverter/convert(org.w3c.dom.Node,net.sourceforge.jeuclid.LayoutContext,java.io.OutputStream)#javax/imageio/ImageWriter/setOutput(java.lang.Object)
net/sourceforge/jeuclid/converter/ImageIOConverter/convert(org.w3c.dom.Node,net.sourceforge.jeuclid.LayoutContext,java.io.OutputStream)#javax/imageio/stream/MemoryCacheImageOutputStream/MemoryCacheImageOutputStream(java.io.OutputStream)
net/sourceforge/jeuclid/converter/ImageIOConverter/convert(org.w3c.dom.Node,net.sourceforge.jeuclid.LayoutContext,java.io.OutputStream)#java/awt/image/BufferedImage/getHeight()
net/sourceforge/jeuclid/converter/ImageIOConverter/convert(org.w3c.dom.Node,net.sourceforge.jeuclid.LayoutContext,java.io.OutputStream)#java/awt/image/ColorModel/hasAlpha()
net/sourceforge/jeuclid/converter/ImageIOConverter/convert(org.w3c.dom.Node,net.sourceforge.jeuclid.LayoutContext,java.io.OutputStream)#javax/imageio/stream/ImageOutputStream/close()
net/sourceforge/jeuclid/converter/ImageIOConverter/convert(org.w3c.dom.Node,net.sourceforge.jeuclid.LayoutContext,java.io.OutputStream)#javax/imageio/ImageWriter/write(java.awt.image.RenderedImage)
net/sourceforge/jeuclid/converter/ImageIOConverter/convert(org.w3c.dom.Node,net.sourceforge.jeuclid.LayoutContext,java.io.OutputStream)#java/awt/image/BufferedImage/getWidth()
net/sourceforge/jeuclid/converter/ImageIOConverter/convert(org.w3c.dom.Node,net.sourceforge.jeuclid.LayoutContext,java.io.OutputStream)#java/awt/image/BufferedImage/getColorModel()
net/sourceforge/jeuclid/elements/support/text/CharacterMapping/addAlternateGlyph(java.util.List,net.sourceforge.jeuclid.elements.support.text.CodePointAndVariant)#org/apache/xmlgraphics/fonts/Glyphs/getUnicodeSequenceForGlyphName(java.lang.String)
net/sourceforge/jeuclid/elements/support/text/CharacterMapping/addAlternateGlyph(java.util.List,net.sourceforge.jeuclid.elements.support.text.CodePointAndVariant)#java/util/Iterator/hasNext()
net/sourceforge/jeuclid/elements/support/text/CharacterMapping/addAlternateGlyph(java.util.List,net.sourceforge.jeuclid.elements.support.text.CodePointAndVariant)#java/util/Iterator/next()
net/sourceforge/jeuclid/elements/support/text/CharacterMapping/addAlternateGlyph(java.util.List,net.sourceforge.jeuclid.elements.support.text.CodePointAndVariant)#java/lang/String/codePointAt(int)
net/sourceforge/jeuclid/elements/support/text/CharacterMapping/addAlternateGlyph(java.util.List,net.sourceforge.jeuclid.elements.support.text.CodePointAndVariant)#java/util/List/contains(java.lang.Object)
net/sourceforge/jeuclid/elements/support/text/CharacterMapping/addAlternateGlyph(java.util.List,net.sourceforge.jeuclid.elements.support.text.CodePointAndVariant)#org/apache/xmlgraphics/fonts/Glyphs/stringToGlyph(java.lang.String)
net/sourceforge/jeuclid/elements/support/text/CharacterMapping/addAlternateGlyph(java.util.List,net.sourceforge.jeuclid.elements.support.text.CodePointAndVariant)#java/lang/String/String(int[],int,int)
net/sourceforge/jeuclid/elements/support/text/CharacterMapping/addAlternateGlyph(java.util.List,net.sourceforge.jeuclid.elements.support.text.CodePointAndVariant)#java/util/List/add(java.lang.Object)
net/sourceforge/jeuclid/elements/support/text/CharacterMapping/addAlternateGlyph(java.util.List,net.sourceforge.jeuclid.elements.support.text.CodePointAndVariant)#java/util/List/iterator()
net/sourceforge/jeuclid/elements/support/text/CharacterMapping/addAlternateGlyph(java.util.List,net.sourceforge.jeuclid.elements.support.text.CodePointAndVariant)#org/apache/xmlgraphics/fonts/Glyphs/getCharNameAlternativesFor(java.lang.String)
net/sourceforge/jeuclid/font/DefaultFontFactory/autoloadFontsFromClasspath()#java/net/URL/openStream()
net/sourceforge/jeuclid/font/DefaultFontFactory/autoloadFontsFromClasspath()#java/util/Iterator/hasNext()
net/sourceforge/jeuclid/font/DefaultFontFactory/autoloadFontsFromClasspath()#org/apache/commons/logging/Log/warn(java.lang.Object)
net/sourceforge/jeuclid/font/DefaultFontFactory/autoloadFontsFromClasspath()#java/io/IOException/getMessage()
net/sourceforge/jeuclid/font/DefaultFontFactory/autoloadFontsFromClasspath()#java/awt/Font/createFont(int,java.io.InputStream)
net/sourceforge/jeuclid/font/DefaultFontFactory/autoloadFontsFromClasspath()#java/util/Iterator/next()
net/sourceforge/jeuclid/font/DefaultFontFactory/autoloadFontsFromClasspath()#java/awt/FontFormatException/getMessage()
net/sourceforge/jeuclid/font/DefaultFontFactory/autoloadFontsFromClasspath()#org/apache/xmlgraphics/util/ClasspathResource/listResourcesOfMimeType(java.lang.String)
net/sourceforge/jeuclid/font/DefaultFontFactory/autoloadFontsFromClasspath()#org/apache/xmlgraphics/util/ClasspathResource/getInstance()
net/sourceforge/jeuclid/font/DefaultFontFactory/autoloadFontsFromClasspath()#java/util/List/iterator()
net/sourceforge/jeuclid/converter/FreeHepInternalDetector/actuallyDetectConversionPlugins(net.sourceforge.jeuclid.converter.ConverterRegistry)#java/lang/reflect/Constructor/newInstance(java.lang.Object[])
net/sourceforge/jeuclid/converter/FreeHepInternalDetector/actuallyDetectConversionPlugins(net.sourceforge.jeuclid.converter.ConverterRegistry)#org/apache/commons/logging/Log/debug(java.lang.Object)
net/sourceforge/jeuclid/converter/FreeHepInternalDetector/actuallyDetectConversionPlugins(net.sourceforge.jeuclid.converter.ConverterRegistry)#java/util/Iterator/hasNext()
net/sourceforge/jeuclid/converter/FreeHepInternalDetector/actuallyDetectConversionPlugins(net.sourceforge.jeuclid.converter.ConverterRegistry)#java/util/Map$Entry/getKey()
net/sourceforge/jeuclid/converter/FreeHepInternalDetector/actuallyDetectConversionPlugins(net.sourceforge.jeuclid.converter.ConverterRegistry)#java/util/Set/iterator()
net/sourceforge/jeuclid/converter/FreeHepInternalDetector/actuallyDetectConversionPlugins(net.sourceforge.jeuclid.converter.ConverterRegistry)#java/lang/Class/getConstructor(java.lang.Class[])
net/sourceforge/jeuclid/converter/FreeHepInternalDetector/actuallyDetectConversionPlugins(net.sourceforge.jeuclid.converter.ConverterRegistry)#java/util/Map$Entry/getValue()
net/sourceforge/jeuclid/converter/FreeHepInternalDetector/actuallyDetectConversionPlugins(net.sourceforge.jeuclid.converter.ConverterRegistry)#java/util/Map/entrySet()
net/sourceforge/jeuclid/converter/FreeHepInternalDetector/actuallyDetectConversionPlugins(net.sourceforge.jeuclid.converter.ConverterRegistry)#java/util/Iterator/next()
net/sourceforge/jeuclid/elements/presentation/general/Mstyle/StyleLayoutContext/applyScriptlevel(java.lang.Object)#java/lang/Integer/intValue()
net/sourceforge/jeuclid/elements/presentation/general/Mstyle/StyleLayoutContext/applyScriptlevel(java.lang.Object)#org/apache/commons/logging/Log/warn(java.lang.Object)
net/sourceforge/jeuclid/elements/presentation/general/Mstyle/StyleLayoutContext/applyScriptlevel(java.lang.Object)#java/lang/String/length()
net/sourceforge/jeuclid/elements/presentation/general/Mstyle/StyleLayoutContext/applyScriptlevel(java.lang.Object)#java/lang/StringBuilder/StringBuilder()
net/sourceforge/jeuclid/elements/presentation/general/Mstyle/StyleLayoutContext/applyScriptlevel(java.lang.Object)#java/lang/Integer/valueOf(int)
net/sourceforge/jeuclid/elements/presentation/general/Mstyle/StyleLayoutContext/applyScriptlevel(java.lang.Object)#java/lang/StringBuilder/toString()
net/sourceforge/jeuclid/elements/presentation/general/Mstyle/StyleLayoutContext/applyScriptlevel(java.lang.Object)#java/lang/StringBuilder/append(java.lang.String)
net/sourceforge/jeuclid/elements/presentation/general/Mstyle/StyleLayoutContext/applyScriptlevel(java.lang.Object)#java/lang/String/charAt(int)
net/sourceforge/jeuclid/elements/presentation/general/Mstyle/StyleLayoutContext/applyScriptlevel(java.lang.Object)#java/lang/String/trim()
net/sourceforge/jeuclid/elements/presentation/general/Mstyle/StyleLayoutContext/applyScriptlevel(java.lang.Object)#java/lang/String/substring(int)
net/sourceforge/jeuclid/elements/presentation/general/Mstyle/StyleLayoutContext/applyScriptlevel(java.lang.Object)#java/lang/Integer/parseInt(java.lang.String)
net/sourceforge/jeuclid/elements/presentation/general/Mfenced/createDelegates()#org/w3c/dom/Document/createElement(java.lang.String)
net/sourceforge/jeuclid/elements/presentation/general/Mfenced/createDelegates()#java/lang/String/valueOf(char)
net/sourceforge/jeuclid/elements/presentation/general/Mfenced/createDelegates()#net/sourceforge/jeuclid/elements/presentation/general/Mfenced/getMathElement(int)
net/sourceforge/jeuclid/elements/presentation/general/Mfenced/createDelegates()#java/lang/String/charAt(int)
net/sourceforge/jeuclid/elements/presentation/general/Mfenced/createDelegates()#net/sourceforge/jeuclid/elements/presentation/general/Mfenced/getOwnerDocument()
net/sourceforge/jeuclid/elements/presentation/general/Mfenced/createDelegates()#java/lang/String/length()
net/sourceforge/jeuclid/elements/presentation/general/Mfenced/createDelegates()#net/sourceforge/jeuclid/elements/presentation/general/Mfenced/getMathElementCount()
net/sourceforge/jeuclid/elements/presentation/general/Mfenced/createDelegates()#java/util/List/add(java.lang.Object)
net/sourceforge/jeuclid/elements/presentation/general/Mfenced/createDelegates()#java/util/ArrayList/ArrayList(int)
net/sourceforge/jeuclid/elements/presentation/general/Mfenced/createDelegates()#net/sourceforge/jeuclid/elements/presentation/token/Mo/setTextContent(java.lang.String)
net/sourceforge/jeuclid/elements/support/attributes/MathVariant/createFont(float,int,net.sourceforge.jeuclid.LayoutContext,boolean)#org/apache/commons/logging/Log/warn(java.lang.Object)
net/sourceforge/jeuclid/elements/support/attributes/MathVariant/createFont(float,int,net.sourceforge.jeuclid.LayoutContext,boolean)#java/lang/StringBuilder/append(java.lang.String)
net/sourceforge/jeuclid/elements/support/attributes/MathVariant/createFont(float,int,net.sourceforge.jeuclid.LayoutContext,boolean)#java/util/Map/get(java.lang.Object)
net/sourceforge/jeuclid/elements/support/attributes/MathVariant/createFont(float,int,net.sourceforge.jeuclid.LayoutContext,boolean)#java/util/Set/contains(java.lang.Object)
net/sourceforge/jeuclid/elements/support/attributes/MathVariant/createFont(float,int,net.sourceforge.jeuclid.LayoutContext,boolean)#java/lang/StringBuilder/StringBuilder()
net/sourceforge/jeuclid/elements/support/attributes/MathVariant/createFont(float,int,net.sourceforge.jeuclid.LayoutContext,boolean)#java/lang/Integer/valueOf(int)
net/sourceforge/jeuclid/elements/support/attributes/MathVariant/createFont(float,int,net.sourceforge.jeuclid.LayoutContext,boolean)#java/lang/StringBuilder/toString()
net/sourceforge/jeuclid/elements/support/attributes/MathVariant/createFont(float,int,net.sourceforge.jeuclid.LayoutContext,boolean)#java/lang/Integer/toHexString(int)
net/sourceforge/jeuclid/elements/support/attributes/MathVariant/createFont(float,int,net.sourceforge.jeuclid.LayoutContext,boolean)#org/apache/commons/logging/Log/info(java.lang.Object)
net/sourceforge/jeuclid/elements/support/attributes/MathVariant/createFont(float,int,net.sourceforge.jeuclid.LayoutContext,boolean)#java/util/Set/add(java.lang.Object)
net/sourceforge/jeuclid/elements/presentation/table/Mtable/VAlign/parseString(java.lang.String)#org/apache/commons/logging/Log/warn(java.lang.Object)
net/sourceforge/jeuclid/elements/presentation/table/Mtable/VAlign/parseString(java.lang.String)#net/sourceforge/jeuclid/elements/presentation/table/Mtable$VAlign/VAlign(int,int)
net/sourceforge/jeuclid/elements/presentation/table/Mtable/VAlign/parseString(java.lang.String)#java/lang/StringBuilder/StringBuilder()
net/sourceforge/jeuclid/elements/presentation/table/Mtable/VAlign/parseString(java.lang.String)#java/lang/String/startsWith(java.lang.String)
net/sourceforge/jeuclid/elements/presentation/table/Mtable/VAlign/parseString(java.lang.String)#java/lang/StringBuilder/toString()
net/sourceforge/jeuclid/elements/presentation/table/Mtable/VAlign/parseString(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
net/sourceforge/jeuclid/elements/presentation/table/Mtable/VAlign/parseString(java.lang.String)#java/lang/String/trim()
net/sourceforge/jeuclid/elements/presentation/table/Mtable/VAlign/parseString(java.lang.String)#java/lang/String/toLowerCase(java.util.Locale)
net/sourceforge/jeuclid/elements/presentation/table/Mtable/VAlign/parseString(java.lang.String)#java/lang/String/length()
net/sourceforge/jeuclid/elements/presentation/table/Mtable/VAlign/parseString(java.lang.String)#java/lang/String/substring(int)
net/sourceforge/jeuclid/elements/presentation/table/Mtable/VAlign/parseString(java.lang.String)#java/lang/Integer/parseInt(java.lang.String)
net/sourceforge/jeuclid/elements/presentation/script/Mmultiscripts/rewriteChildren()#org/w3c/dom/Document/createElement(java.lang.String)
net/sourceforge/jeuclid/elements/presentation/script/Mmultiscripts/rewriteChildren()#org/w3c/dom/NodeList/getLength()
net/sourceforge/jeuclid/elements/presentation/script/Mmultiscripts/rewriteChildren()#net/sourceforge/jeuclid/elements/presentation/script/Mmultiscripts/getOwnerDocument()
net/sourceforge/jeuclid/elements/presentation/script/Mmultiscripts/rewriteChildren()#java/util/List/size()
net/sourceforge/jeuclid/elements/presentation/script/Mmultiscripts/rewriteChildren()#net/sourceforge/jeuclid/elements/presentation/script/Mmultiscripts/getChildNodes()
net/sourceforge/jeuclid/elements/presentation/script/Mmultiscripts/rewriteChildren()#org/w3c/dom/NodeList/item(int)
net/sourceforge/jeuclid/elements/presentation/script/Mmultiscripts/rewriteChildren()#net/sourceforge/jeuclid/elements/presentation/script/Mmultiscripts/removeChild(org.w3c.dom.Node)
net/sourceforge/jeuclid/elements/presentation/script/Mmultiscripts/rewriteChildren()#net/sourceforge/jeuclid/elements/presentation/script/Mmultiscripts/addMathElement(org.w3c.dom.mathml.MathMLElement)
net/sourceforge/jeuclid/elements/presentation/script/Mmultiscripts/rewriteChildren()#java/util/List/get(int)
net/sourceforge/jeuclid/elements/support/operatordict/OperatorDictionary/initializeFromXML()#java/lang/Class/getResourceAsStream(java.lang.String)
net/sourceforge/jeuclid/elements/support/operatordict/OperatorDictionary/initializeFromXML()#java/lang/StringBuilder/append(java.lang.String)
net/sourceforge/jeuclid/elements/support/operatordict/OperatorDictionary/initializeFromXML()#javax/xml/parsers/SAXParserFactory/newInstance()
net/sourceforge/jeuclid/elements/support/operatordict/OperatorDictionary/initializeFromXML()#net/sourceforge/jeuclid/elements/support/operatordict/OperatorDictionary$DictionaryReader/DictionaryReader(net.sourceforge.jeuclid.elements.support.operatordict.OperatorDictionary)
net/sourceforge/jeuclid/elements/support/operatordict/OperatorDictionary/initializeFromXML()#org/xml/sax/SAXException/getMessage()
net/sourceforge/jeuclid/elements/support/operatordict/OperatorDictionary/initializeFromXML()#javax/xml/parsers/ParserConfigurationException/getMessage()
net/sourceforge/jeuclid/elements/support/operatordict/OperatorDictionary/initializeFromXML()#org/xml/sax/XMLReader/setContentHandler(org.xml.sax.ContentHandler)
net/sourceforge/jeuclid/elements/support/operatordict/OperatorDictionary/initializeFromXML()#java/lang/StringBuilder/toString()
net/sourceforge/jeuclid/elements/support/operatordict/OperatorDictionary/initializeFromXML()#org/apache/commons/logging/Log/warn(java.lang.Object,java.lang.Throwable)
net/sourceforge/jeuclid/elements/support/operatordict/OperatorDictionary/initializeFromXML()#org/apache/commons/logging/Log/warn(java.lang.Object)
net/sourceforge/jeuclid/elements/support/operatordict/OperatorDictionary/initializeFromXML()#javax/xml/parsers/SAXParserFactory/newSAXParser()
net/sourceforge/jeuclid/elements/support/operatordict/OperatorDictionary/initializeFromXML()#javax/xml/parsers/SAXParser/getXMLReader()
net/sourceforge/jeuclid/elements/support/operatordict/OperatorDictionary/initializeFromXML()#org/xml/sax/InputSource/InputSource(java.io.InputStream)
net/sourceforge/jeuclid/elements/support/operatordict/OperatorDictionary/initializeFromXML()#java/lang/StringBuilder/StringBuilder()
net/sourceforge/jeuclid/elements/support/operatordict/OperatorDictionary/initializeFromXML()#org/xml/sax/XMLReader/parse(org.xml.sax.InputSource)
net/sourceforge/jeuclid/converter/BatikConverter/convert(org.w3c.dom.Node,net.sourceforge.jeuclid.LayoutContext)#java/lang/Math/ceil(double)
net/sourceforge/jeuclid/converter/BatikConverter/convert(org.w3c.dom.Node,net.sourceforge.jeuclid.LayoutContext)#org/apache/batik/svggen/SVGGeneratorContext/createDefault(org.w3c.dom.Document)
net/sourceforge/jeuclid/converter/BatikConverter/convert(org.w3c.dom.Node,net.sourceforge.jeuclid.LayoutContext)#org/w3c/dom/Document/getFirstChild()
net/sourceforge/jeuclid/converter/BatikConverter/convert(org.w3c.dom.Node,net.sourceforge.jeuclid.LayoutContext)#org/apache/batik/svggen/SVGGraphics2D/SVGGraphics2D(org.apache.batik.svggen.SVGGeneratorContext,boolean)
net/sourceforge/jeuclid/converter/BatikConverter/convert(org.w3c.dom.Node,net.sourceforge.jeuclid.LayoutContext)#org/apache/batik/svggen/SVGGraphics2D/getRoot()
net/sourceforge/jeuclid/converter/BatikConverter/convert(org.w3c.dom.Node,net.sourceforge.jeuclid.LayoutContext)#org/apache/batik/svggen/SVGGeneratorContext/setComment(java.lang.String)
net/sourceforge/jeuclid/converter/BatikConverter/convert(org.w3c.dom.Node,net.sourceforge.jeuclid.LayoutContext)#org/w3c/dom/DOMImplementation/createDocument(java.lang.String,java.lang.String,org.w3c.dom.DocumentType)
net/sourceforge/jeuclid/converter/BatikConverter/convert(org.w3c.dom.Node,net.sourceforge.jeuclid.LayoutContext)#org/w3c/dom/Document/replaceChild(org.w3c.dom.Node,org.w3c.dom.Node)
net/sourceforge/jeuclid/converter/BatikConverter/convert(org.w3c.dom.Node,net.sourceforge.jeuclid.LayoutContext)#java/awt/Dimension/Dimension(int,int)
net/sourceforge/jeuclid/converter/BatikConverter/convert(org.w3c.dom.Node,net.sourceforge.jeuclid.LayoutContext)#net/sourceforge/jeuclid/converter/ConverterPlugin$DocumentWithDimension/DocumentWithDimension(org.w3c.dom.Document,java.awt.Dimension,float)
net/sourceforge/jeuclid/converter/BatikConverter/convert(org.w3c.dom.Node,net.sourceforge.jeuclid.LayoutContext)#org/apache/batik/svggen/SVGGraphics2D/setSVGCanvasSize(java.awt.Dimension)
net/sourceforge/jeuclid/MathMLSerializer/serializeDocument(org.w3c.dom.Node,boolean,boolean)#javax/xml/transform/TransformerFactory/newInstance()
net/sourceforge/jeuclid/MathMLSerializer/serializeDocument(org.w3c.dom.Node,boolean,boolean)#javax/xml/transform/stream/StreamResult/StreamResult(java.io.Writer)
net/sourceforge/jeuclid/MathMLSerializer/serializeDocument(org.w3c.dom.Node,boolean,boolean)#org/apache/commons/logging/Log/warn(java.lang.Object)
net/sourceforge/jeuclid/MathMLSerializer/serializeDocument(org.w3c.dom.Node,boolean,boolean)#javax/xml/transform/dom/DOMSource/DOMSource(org.w3c.dom.Node)
net/sourceforge/jeuclid/MathMLSerializer/serializeDocument(org.w3c.dom.Node,boolean,boolean)#javax/xml/transform/Transformer/setOutputProperty(java.lang.String,java.lang.String)
net/sourceforge/jeuclid/MathMLSerializer/serializeDocument(org.w3c.dom.Node,boolean,boolean)#java/io/StringWriter/StringWriter()
net/sourceforge/jeuclid/MathMLSerializer/serializeDocument(org.w3c.dom.Node,boolean,boolean)#java/io/StringWriter/toString()
net/sourceforge/jeuclid/MathMLSerializer/serializeDocument(org.w3c.dom.Node,boolean,boolean)#javax/xml/transform/Transformer/transform(javax.xml.transform.Source,javax.xml.transform.Result)
net/sourceforge/jeuclid/MathMLSerializer/serializeDocument(org.w3c.dom.Node,boolean,boolean)#javax/xml/transform/TransformerFactory/newTransformer()
net/sourceforge/jeuclid/DOMBuilder/createJeuclidDom(org.w3c.dom.Node,boolean)#org/apache/commons/logging/Log/warn(java.lang.Object)
net/sourceforge/jeuclid/DOMBuilder/createJeuclidDom(org.w3c.dom.Node,boolean)#java/lang/StringBuilder/append(java.lang.String)
net/sourceforge/jeuclid/DOMBuilder/createJeuclidDom(org.w3c.dom.Node,boolean)#javax/xml/transform/dom/DOMSource/DOMSource(org.w3c.dom.Node)
net/sourceforge/jeuclid/DOMBuilder/createJeuclidDom(org.w3c.dom.Node,boolean)#java/lang/StringBuilder/StringBuilder()
net/sourceforge/jeuclid/DOMBuilder/createJeuclidDom(org.w3c.dom.Node,boolean)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
net/sourceforge/jeuclid/DOMBuilder/createJeuclidDom(org.w3c.dom.Node,boolean)#org/w3c/dom/Document/getDocumentElement()
net/sourceforge/jeuclid/DOMBuilder/createJeuclidDom(org.w3c.dom.Node,boolean)#java/lang/StringBuilder/toString()
net/sourceforge/jeuclid/DOMBuilder/createJeuclidDom(org.w3c.dom.Node,boolean)#org/w3c/dom/Node/getFirstChild()
net/sourceforge/jeuclid/DOMBuilder/createJeuclidDom(org.w3c.dom.Node,boolean)#org/w3c/dom/DOMException/getMessage()
net/sourceforge/jeuclid/DOMBuilder/createJeuclidDom(org.w3c.dom.Node,boolean)#java/lang/NullPointerException/getMessage()
net/sourceforge/jeuclid/DOMBuilder/createJeuclidDom(org.w3c.dom.Node,boolean)#javax/xml/transform/TransformerException/getMessage()
net/sourceforge/jeuclid/DOMBuilder/createJeuclidDom(org.w3c.dom.Node,boolean)#javax/xml/transform/dom/DOMResult/DOMResult(org.w3c.dom.Node)
net/sourceforge/jeuclid/DOMBuilder/createJeuclidDom(org.w3c.dom.Node,boolean)#java/lang/StringBuilder/append(java.lang.Object)
net/sourceforge/jeuclid/DOMBuilder/createJeuclidDom(org.w3c.dom.Node,boolean)#javax/xml/transform/Transformer/transform(javax.xml.transform.Source,javax.xml.transform.Result)
net/sourceforge/jeuclid/converter/Processor/processSubtree(org.w3c.dom.Node,net.sourceforge.jeuclid.LayoutContext)#net/sourceforge/jeuclid/converter/ConverterPlugin$DocumentWithDimension/getBaseline()
net/sourceforge/jeuclid/converter/Processor/processSubtree(org.w3c.dom.Node,net.sourceforge.jeuclid.LayoutContext)#org/w3c/dom/Node/getLocalName()
net/sourceforge/jeuclid/converter/Processor/processSubtree(org.w3c.dom.Node,net.sourceforge.jeuclid.LayoutContext)#org/w3c/dom/Node/getParentNode()
net/sourceforge/jeuclid/converter/Processor/processSubtree(org.w3c.dom.Node,net.sourceforge.jeuclid.LayoutContext)#java/awt/Dimension/getHeight()
net/sourceforge/jeuclid/converter/Processor/processSubtree(org.w3c.dom.Node,net.sourceforge.jeuclid.LayoutContext)#java/lang/String/equals(java.lang.Object)
net/sourceforge/jeuclid/converter/Processor/processSubtree(org.w3c.dom.Node,net.sourceforge.jeuclid.LayoutContext)#net/sourceforge/jeuclid/converter/ConverterPlugin$DocumentWithDimension/getDimension()
net/sourceforge/jeuclid/converter/Processor/processSubtree(org.w3c.dom.Node,net.sourceforge.jeuclid.LayoutContext)#java/lang/StringBuilder/toString()
net/sourceforge/jeuclid/converter/Processor/processSubtree(org.w3c.dom.Node,net.sourceforge.jeuclid.LayoutContext)#java/lang/StringBuilder/append(java.lang.String)
net/sourceforge/jeuclid/converter/Processor/processSubtree(org.w3c.dom.Node,net.sourceforge.jeuclid.LayoutContext)#org/w3c/dom/Document/getFirstChild()
net/sourceforge/jeuclid/converter/Processor/processSubtree(org.w3c.dom.Node,net.sourceforge.jeuclid.LayoutContext)#org/w3c/dom/Element/setAttribute(java.lang.String,java.lang.String)
net/sourceforge/jeuclid/converter/Processor/processSubtree(org.w3c.dom.Node,net.sourceforge.jeuclid.LayoutContext)#java/lang/StringBuilder/StringBuilder()
net/sourceforge/jeuclid/converter/Processor/processSubtree(org.w3c.dom.Node,net.sourceforge.jeuclid.LayoutContext)#org/w3c/dom/Node/getNamespaceURI()
net/sourceforge/jeuclid/converter/Processor/processSubtree(org.w3c.dom.Node,net.sourceforge.jeuclid.LayoutContext)#net/sourceforge/jeuclid/converter/ConverterPlugin$DocumentWithDimension/getDocument()
net/sourceforge/jeuclid/converter/Processor/processSubtree(org.w3c.dom.Node,net.sourceforge.jeuclid.LayoutContext)#java/lang/StringBuilder/append(float)
net/sourceforge/jeuclid/converter/Processor/safeReplaceChild(org.w3c.dom.Node,org.w3c.dom.Node,org.w3c.dom.Node)#org/w3c/dom/Node/removeChild(org.w3c.dom.Node)
net/sourceforge/jeuclid/converter/Processor/safeReplaceChild(org.w3c.dom.Node,org.w3c.dom.Node,org.w3c.dom.Node)#org/apache/commons/logging/Log/warn(java.lang.Object)
net/sourceforge/jeuclid/converter/Processor/safeReplaceChild(org.w3c.dom.Node,org.w3c.dom.Node,org.w3c.dom.Node)#java/lang/StringBuilder/append(java.lang.String)
net/sourceforge/jeuclid/converter/Processor/safeReplaceChild(org.w3c.dom.Node,org.w3c.dom.Node,org.w3c.dom.Node)#javax/xml/transform/dom/DOMSource/DOMSource(org.w3c.dom.Node)
net/sourceforge/jeuclid/converter/Processor/safeReplaceChild(org.w3c.dom.Node,org.w3c.dom.Node,org.w3c.dom.Node)#java/lang/StringBuilder/StringBuilder()
net/sourceforge/jeuclid/converter/Processor/safeReplaceChild(org.w3c.dom.Node,org.w3c.dom.Node,org.w3c.dom.Node)#javax/xml/transform/Transformer/transform(javax.xml.transform.Source,javax.xml.transform.Result)
net/sourceforge/jeuclid/converter/Processor/safeReplaceChild(org.w3c.dom.Node,org.w3c.dom.Node,org.w3c.dom.Node)#java/lang/StringBuilder/toString()
net/sourceforge/jeuclid/converter/Processor/safeReplaceChild(org.w3c.dom.Node,org.w3c.dom.Node,org.w3c.dom.Node)#javax/xml/transform/TransformerException/getMessage()
net/sourceforge/jeuclid/converter/Processor/safeReplaceChild(org.w3c.dom.Node,org.w3c.dom.Node,org.w3c.dom.Node)#javax/xml/transform/dom/DOMResult/DOMResult(org.w3c.dom.Node)
net/sourceforge/jeuclid/converter/Processor/process(javax.xml.transform.Source,javax.xml.transform.Result,net.sourceforge.jeuclid.LayoutContext)#java/lang/StringBuilder/append(java.lang.String)
net/sourceforge/jeuclid/converter/Processor/process(javax.xml.transform.Source,javax.xml.transform.Result,net.sourceforge.jeuclid.LayoutContext)#javax/xml/transform/dom/DOMSource/DOMSource(org.w3c.dom.Node)
net/sourceforge/jeuclid/converter/Processor/process(javax.xml.transform.Source,javax.xml.transform.Result,net.sourceforge.jeuclid.LayoutContext)#org/apache/commons/logging/Log/info(java.lang.Object)
net/sourceforge/jeuclid/converter/Processor/process(javax.xml.transform.Source,javax.xml.transform.Result,net.sourceforge.jeuclid.LayoutContext)#java/lang/StringBuilder/StringBuilder()
net/sourceforge/jeuclid/converter/Processor/process(javax.xml.transform.Source,javax.xml.transform.Result,net.sourceforge.jeuclid.LayoutContext)#javax/xml/transform/TransformerException/TransformerException(java.lang.String,java.lang.Throwable)
net/sourceforge/jeuclid/converter/Processor/process(javax.xml.transform.Source,javax.xml.transform.Result,net.sourceforge.jeuclid.LayoutContext)#javax/xml/transform/Result/getSystemId()
net/sourceforge/jeuclid/converter/Processor/process(javax.xml.transform.Source,javax.xml.transform.Result,net.sourceforge.jeuclid.LayoutContext)#java/lang/StringBuilder/toString()
net/sourceforge/jeuclid/converter/Processor/process(javax.xml.transform.Source,javax.xml.transform.Result,net.sourceforge.jeuclid.LayoutContext)#javax/xml/transform/Transformer/transform(javax.xml.transform.Source,javax.xml.transform.Result)
net/sourceforge/jeuclid/converter/Processor/process(javax.xml.transform.Source,javax.xml.transform.Result,net.sourceforge.jeuclid.LayoutContext)#javax/xml/transform/Source/getSystemId()
