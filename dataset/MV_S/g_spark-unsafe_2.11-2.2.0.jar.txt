org/apache/spark/unsafe/Platform/<clinit>()#java/lang/Class/getDeclaredMethod(java.lang.String,java.lang.Class[])
org/apache/spark/unsafe/Platform/<clinit>()#java/lang/reflect/Field/get(java.lang.Object)
org/apache/spark/unsafe/Platform/<clinit>()#java/lang/reflect/Field/setAccessible(boolean)
org/apache/spark/unsafe/Platform/<clinit>()#java/lang/Class/getDeclaredField(java.lang.String)
org/apache/spark/unsafe/Platform/<clinit>()#java/lang/reflect/Method/setAccessible(boolean)
org/apache/spark/unsafe/Platform/<clinit>()#java/lang/ClassLoader/getSystemClassLoader()
org/apache/spark/unsafe/Platform/<clinit>()#java/lang/Class/forName(java.lang.String,boolean,java.lang.ClassLoader)
org/apache/spark/unsafe/Platform/<clinit>()#java/lang/reflect/Method/invoke(java.lang.Object,java.lang.Object[])
org/apache/spark/unsafe/Platform/<clinit>()#java/lang/String/matches(java.lang.String)
org/apache/spark/unsafe/Platform/<clinit>()#java/lang/System/getProperty(java.lang.String,java.lang.String)
org/apache/spark/unsafe/Platform/<clinit>()#java/lang/Boolean/equals(java.lang.Object)
org/apache/spark/unsafe/Platform/<clinit>()#java/lang/String/equals(java.lang.Object)
org/apache/spark/unsafe/Platform/<clinit>()#sun/misc/Unsafe/arrayBaseOffset(java.lang.Class)
org/apache/spark/unsafe/Platform/allocateDirectBuffer(int)#java/lang/Class/forName(java.lang.String)
org/apache/spark/unsafe/Platform/allocateDirectBuffer(int)#java/lang/reflect/Constructor/newInstance(java.lang.Object[])
org/apache/spark/unsafe/Platform/allocateDirectBuffer(int)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/apache/spark/unsafe/Platform/allocateDirectBuffer(int)#java/lang/Long/valueOf(long)
org/apache/spark/unsafe/Platform/allocateDirectBuffer(int)#java/lang/Class/getDeclaredField(java.lang.String)
org/apache/spark/unsafe/Platform/allocateDirectBuffer(int)#sun/misc/Cleaner/create(java.lang.Object,java.lang.Runnable)
org/apache/spark/unsafe/Platform/allocateDirectBuffer(int)#java/lang/Class/getDeclaredConstructor(java.lang.Class[])
org/apache/spark/unsafe/Platform/allocateDirectBuffer(int)#java/lang/reflect/Field/set(java.lang.Object,java.lang.Object)
org/apache/spark/unsafe/Platform/allocateDirectBuffer(int)#java/lang/Integer/valueOf(int)
org/apache/spark/unsafe/Platform/allocateDirectBuffer(int)#java/lang/reflect/Constructor/setAccessible(boolean)
org/apache/spark/unsafe/Platform/allocateDirectBuffer(int)#java/lang/reflect/Field/setAccessible(boolean)
org/apache/spark/unsafe/types/UTF8String/translate(java.util.Map)#java/lang/StringBuilder/append(char)
org/apache/spark/unsafe/types/UTF8String/translate(java.util.Map)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/spark/unsafe/types/UTF8String/translate(java.util.Map)#java/lang/Character/charValue()
org/apache/spark/unsafe/types/UTF8String/translate(java.util.Map)#java/lang/StringBuilder/toString()
org/apache/spark/unsafe/types/UTF8String/translate(java.util.Map)#java/lang/String/charAt(int)
org/apache/spark/unsafe/types/UTF8String/translate(java.util.Map)#java/lang/String/length()
org/apache/spark/unsafe/types/UTF8String/translate(java.util.Map)#java/util/Map/get(java.lang.Object)
org/apache/spark/unsafe/types/UTF8String/translate(java.util.Map)#java/lang/StringBuilder/StringBuilder()
org/apache/spark/unsafe/types/UTF8String/translate(java.util.Map)#java/lang/Character/valueOf(char)
org/apache/spark/unsafe/types/CalendarInterval/fromDayTimeString(java.lang.String)#java/util/regex/Matcher/group(int)
org/apache/spark/unsafe/types/CalendarInterval/fromDayTimeString(java.lang.String)#java/util/regex/Matcher/matches()
org/apache/spark/unsafe/types/CalendarInterval/fromDayTimeString(java.lang.String)#java/lang/String/equals(java.lang.Object)
org/apache/spark/unsafe/types/CalendarInterval/fromDayTimeString(java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/apache/spark/unsafe/types/CalendarInterval/fromDayTimeString(java.lang.String)#java/util/regex/Pattern/matcher(java.lang.CharSequence)
org/apache/spark/unsafe/types/CalendarInterval/fromDayTimeString(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/apache/spark/unsafe/types/CalendarInterval/fromDayTimeString(java.lang.String)#java/lang/String/trim()
org/apache/spark/unsafe/types/CalendarInterval/fromDayTimeString(java.lang.String)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/spark/unsafe/types/CalendarInterval/fromDayTimeString(java.lang.String)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String,java.lang.Throwable)
org/apache/spark/unsafe/types/CalendarInterval/fromDayTimeString(java.lang.String)#java/lang/StringBuilder/toString()
org/apache/spark/unsafe/types/CalendarInterval/fromDayTimeString(java.lang.String)#java/lang/Exception/getMessage()
org/apache/spark/unsafe/types/CalendarInterval/fromSingleUnitString(java.lang.String,java.lang.String)#java/lang/Long/parseLong(java.lang.String)
org/apache/spark/unsafe/types/CalendarInterval/fromSingleUnitString(java.lang.String,java.lang.String)#java/util/regex/Matcher/matches()
org/apache/spark/unsafe/types/CalendarInterval/fromSingleUnitString(java.lang.String,java.lang.String)#java/lang/String/format(java.lang.String,java.lang.Object[])
org/apache/spark/unsafe/types/CalendarInterval/fromSingleUnitString(java.lang.String,java.lang.String)#java/lang/String/equals(java.lang.Object)
org/apache/spark/unsafe/types/CalendarInterval/fromSingleUnitString(java.lang.String,java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/apache/spark/unsafe/types/CalendarInterval/fromSingleUnitString(java.lang.String,java.lang.String)#java/util/regex/Pattern/matcher(java.lang.CharSequence)
org/apache/spark/unsafe/types/CalendarInterval/fromSingleUnitString(java.lang.String,java.lang.String)#java/util/regex/Matcher/group(int)
org/apache/spark/unsafe/types/CalendarInterval/fromSingleUnitString(java.lang.String,java.lang.String)#java/lang/String/hashCode()
org/apache/spark/unsafe/types/CalendarInterval/fromSingleUnitString(java.lang.String,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/apache/spark/unsafe/types/CalendarInterval/fromSingleUnitString(java.lang.String,java.lang.String)#java/lang/String/trim()
org/apache/spark/unsafe/types/CalendarInterval/fromSingleUnitString(java.lang.String,java.lang.String)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/spark/unsafe/types/CalendarInterval/fromSingleUnitString(java.lang.String,java.lang.String)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String,java.lang.Throwable)
org/apache/spark/unsafe/types/CalendarInterval/fromSingleUnitString(java.lang.String,java.lang.String)#java/lang/StringBuilder/toString()
org/apache/spark/unsafe/types/CalendarInterval/fromSingleUnitString(java.lang.String,java.lang.String)#java/lang/Exception/getMessage()
org/apache/spark/unsafe/types/CalendarInterval/fromYearMonthString(java.lang.String)#java/util/regex/Matcher/group(int)
org/apache/spark/unsafe/types/CalendarInterval/fromYearMonthString(java.lang.String)#java/util/regex/Matcher/matches()
org/apache/spark/unsafe/types/CalendarInterval/fromYearMonthString(java.lang.String)#java/lang/String/equals(java.lang.Object)
org/apache/spark/unsafe/types/CalendarInterval/fromYearMonthString(java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/apache/spark/unsafe/types/CalendarInterval/fromYearMonthString(java.lang.String)#java/util/regex/Pattern/matcher(java.lang.CharSequence)
org/apache/spark/unsafe/types/CalendarInterval/fromYearMonthString(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/apache/spark/unsafe/types/CalendarInterval/fromYearMonthString(java.lang.String)#java/lang/String/trim()
org/apache/spark/unsafe/types/CalendarInterval/fromYearMonthString(java.lang.String)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/spark/unsafe/types/CalendarInterval/fromYearMonthString(java.lang.String)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String,java.lang.Throwable)
org/apache/spark/unsafe/types/CalendarInterval/fromYearMonthString(java.lang.String)#java/lang/StringBuilder/toString()
org/apache/spark/unsafe/types/CalendarInterval/fromYearMonthString(java.lang.String)#java/lang/Exception/getMessage()
