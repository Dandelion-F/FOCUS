org/apache/fop/layoutmgr/list/ListItemLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/area/Block/getChildAreas()
org/apache/fop/layoutmgr/list/ListItemLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/layoutmgr/list/ListItemLayoutManager/isLast(org.apache.fop.layoutmgr.Position)
org/apache/fop/layoutmgr/list/ListItemLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext)#java/util/List/get(int)
org/apache/fop/layoutmgr/list/ListItemLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext)#java/lang/AssertionError/AssertionError()
org/apache/fop/layoutmgr/list/ListItemLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/layoutmgr/list/ListItemLayoutManager$ListItemPosition/getBodyFirstIndex()
org/apache/fop/layoutmgr/list/ListItemLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/layoutmgr/list/ListItemLayoutManager/registerMarkers(boolean,boolean,boolean)
org/apache/fop/layoutmgr/list/ListItemLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/layoutmgr/list/ListItemLayoutManager/checkEndOfLayout(org.apache.fop.layoutmgr.Position)
org/apache/fop/layoutmgr/list/ListItemLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/area/Block/setBPD(int)
org/apache/fop/layoutmgr/list/ListItemLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext)#java/util/LinkedList/isEmpty()
org/apache/fop/layoutmgr/list/ListItemLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/layoutmgr/list/ListItemLayoutManager$ListItemPosition/getLabelLastIndex()
org/apache/fop/layoutmgr/list/ListItemLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext)#java/lang/Math/max(int,int)
org/apache/fop/layoutmgr/list/ListItemLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/layoutmgr/list/ListItemLayoutManager/addId()
org/apache/fop/layoutmgr/list/ListItemLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/area/Block/getAllocBPD()
org/apache/fop/layoutmgr/list/ListItemLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/layoutmgr/list/ListItemLayoutManager/isFirst(org.apache.fop.layoutmgr.Position)
org/apache/fop/layoutmgr/list/ListItemLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/layoutmgr/list/ListItemLayoutManager$ListItemPosition/getLabelFirstIndex()
org/apache/fop/layoutmgr/list/ListItemLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext)#java/util/List/size()
org/apache/fop/layoutmgr/list/ListItemLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext)#java/util/LinkedList/getLast()
org/apache/fop/layoutmgr/list/ListItemLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext)#java/util/LinkedList/getFirst()
org/apache/fop/layoutmgr/list/ListItemLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext)#java/util/LinkedList/add(java.lang.Object)
org/apache/fop/layoutmgr/list/ListItemLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/layoutmgr/list/ListItemLayoutManager$ListItemPosition/getBodyLastIndex()
org/apache/fop/layoutmgr/list/ListItemLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/layoutmgr/list/ListItemLayoutManager/flush()
org/apache/fop/layoutmgr/list/ListItemLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext)#java/util/LinkedList/LinkedList()
org/apache/fop/layoutmgr/list/ListItemLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int,java.util.Stack,org.apache.fop.layoutmgr.Position,org.apache.fop.layoutmgr.LayoutManager)#org/apache/fop/layoutmgr/list/ListItemLayoutManager/getKeepTogether()
org/apache/fop/layoutmgr/list/ListItemLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int,java.util.Stack,org.apache.fop.layoutmgr.Position,org.apache.fop.layoutmgr.LayoutManager)#java/util/List/remove(int)
org/apache/fop/layoutmgr/list/ListItemLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int,java.util.Stack,org.apache.fop.layoutmgr.Position,org.apache.fop.layoutmgr.LayoutManager)#org/apache/fop/layoutmgr/list/ListItemLayoutManager/wrapPositionElements(java.util.List,java.util.List,boolean)
org/apache/fop/layoutmgr/list/ListItemLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int,java.util.Stack,org.apache.fop.layoutmgr.Position,org.apache.fop.layoutmgr.LayoutManager)#java/util/LinkedList/LinkedList()
org/apache/fop/layoutmgr/list/ListItemLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int,java.util.Stack,org.apache.fop.layoutmgr.Position,org.apache.fop.layoutmgr.LayoutManager)#org/apache/fop/layoutmgr/list/ListItemLayoutManager/addLastVisibleMarks(java.util.List,org.apache.fop.layoutmgr.LayoutContext,int)
org/apache/fop/layoutmgr/list/ListItemLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int,java.util.Stack,org.apache.fop.layoutmgr.Position,org.apache.fop.layoutmgr.LayoutManager)#org/apache/fop/layoutmgr/KnuthBlockBox/getWidth()
org/apache/fop/layoutmgr/list/ListItemLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int,java.util.Stack,org.apache.fop.layoutmgr.Position,org.apache.fop.layoutmgr.LayoutManager)#java/util/List/add(java.lang.Object)
org/apache/fop/layoutmgr/list/ListItemLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int,java.util.Stack,org.apache.fop.layoutmgr.Position,org.apache.fop.layoutmgr.LayoutManager)#org/apache/fop/layoutmgr/list/ListItemLayoutManager/addKnuthElementsForBreakAfter(java.util.List,org.apache.fop.layoutmgr.LayoutContext)
org/apache/fop/layoutmgr/list/ListItemLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int,java.util.Stack,org.apache.fop.layoutmgr.Position,org.apache.fop.layoutmgr.LayoutManager)#org/apache/fop/layoutmgr/list/ListItemLayoutManager$ListItemPosition/getOriginalBodyPosition()
org/apache/fop/layoutmgr/list/ListItemLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int,java.util.Stack,org.apache.fop.layoutmgr.Position,org.apache.fop.layoutmgr.LayoutManager)#org/apache/fop/layoutmgr/list/ListItemLayoutManager$ListItemPosition/access$100(org.apache.fop.layoutmgr.list.ListItemLayoutManager$ListItemPosition)
org/apache/fop/layoutmgr/list/ListItemLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int,java.util.Stack,org.apache.fop.layoutmgr.Position,org.apache.fop.layoutmgr.LayoutManager)#org/apache/fop/layoutmgr/list/ListItemLayoutManager$ListItemPosition/access$200(org.apache.fop.layoutmgr.list.ListItemLayoutManager$ListItemPosition)
org/apache/fop/layoutmgr/list/ListItemLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int,java.util.Stack,org.apache.fop.layoutmgr.Position,org.apache.fop.layoutmgr.LayoutManager)#org/apache/fop/layoutmgr/list/ListItemLayoutManager$ListItemPosition/access$300(org.apache.fop.layoutmgr.list.ListItemLayoutManager$ListItemPosition)
org/apache/fop/layoutmgr/list/ListItemLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int,java.util.Stack,org.apache.fop.layoutmgr.Position,org.apache.fop.layoutmgr.LayoutManager)#org/apache/fop/layoutmgr/list/ListItemLayoutManager/getKeepWithNext()
org/apache/fop/layoutmgr/list/ListItemLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int,java.util.Stack,org.apache.fop.layoutmgr.Position,org.apache.fop.layoutmgr.LayoutManager)#org/apache/fop/layoutmgr/list/ListItemLayoutManager$ListItemPosition/getOriginalLabelPosition()
org/apache/fop/layoutmgr/list/ListItemLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int,java.util.Stack,org.apache.fop.layoutmgr.Position,org.apache.fop.layoutmgr.LayoutManager)#org/apache/fop/layoutmgr/list/ListItemLayoutManager/breakBeforeServed(org.apache.fop.layoutmgr.LayoutContext,java.util.List)
org/apache/fop/layoutmgr/list/ListItemLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int,java.util.Stack,org.apache.fop.layoutmgr.Position,org.apache.fop.layoutmgr.LayoutManager)#java/util/Stack/Stack()
org/apache/fop/layoutmgr/list/ListItemLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int,java.util.Stack,org.apache.fop.layoutmgr.Position,org.apache.fop.layoutmgr.LayoutManager)#org/apache/fop/layoutmgr/list/ListItemLayoutManager/getKeepWithPrevious()
org/apache/fop/layoutmgr/list/ListItemLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int,java.util.Stack,org.apache.fop.layoutmgr.Position,org.apache.fop.layoutmgr.LayoutManager)#java/util/Stack/push(java.lang.Object)
org/apache/fop/layoutmgr/list/ListItemLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int,java.util.Stack,org.apache.fop.layoutmgr.Position,org.apache.fop.layoutmgr.LayoutManager)#java/util/List/isEmpty()
org/apache/fop/layoutmgr/list/ListItemLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int,java.util.Stack,org.apache.fop.layoutmgr.Position,org.apache.fop.layoutmgr.LayoutManager)#java/util/Collections/emptyList()
org/apache/fop/layoutmgr/list/ListItemLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int,java.util.Stack,org.apache.fop.layoutmgr.Position,org.apache.fop.layoutmgr.LayoutManager)#org/apache/fop/layoutmgr/list/ListItemContentLayoutManager/initialize()
org/apache/fop/layoutmgr/list/ListItemLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int,java.util.Stack,org.apache.fop.layoutmgr.Position,org.apache.fop.layoutmgr.LayoutManager)#java/util/List/addAll(java.util.Collection)
org/apache/fop/layoutmgr/list/ListItemLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int,java.util.Stack,org.apache.fop.layoutmgr.Position,org.apache.fop.layoutmgr.LayoutManager)#org/apache/fop/layoutmgr/list/ListItemLayoutManager/makeChildLayoutContext(org.apache.fop.layoutmgr.LayoutContext)
org/apache/fop/layoutmgr/list/ListItemLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int,java.util.Stack,org.apache.fop.layoutmgr.Position,org.apache.fop.layoutmgr.LayoutManager)#java/util/List/get(int)
org/apache/fop/layoutmgr/list/ListItemLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int,java.util.Stack,org.apache.fop.layoutmgr.Position,org.apache.fop.layoutmgr.LayoutManager)#org/apache/fop/fo/flow/AbstractListItemPart/getId()
org/apache/fop/layoutmgr/list/ListItemLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int,java.util.Stack,org.apache.fop.layoutmgr.Position,org.apache.fop.layoutmgr.LayoutManager)#org/apache/fop/layoutmgr/list/ListItemLayoutManager/setFinished(boolean)
org/apache/fop/layoutmgr/list/ListItemLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int,java.util.Stack,org.apache.fop.layoutmgr.Position,org.apache.fop.layoutmgr.LayoutManager)#org/apache/fop/layoutmgr/list/ListItemLayoutManager$ListItemPosition/access$000(org.apache.fop.layoutmgr.list.ListItemLayoutManager$ListItemPosition)
org/apache/fop/layoutmgr/list/ListItemLayoutManager/getCombinedKnuthElementsForListItem(java.util.List,java.util.List,org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/layoutmgr/KnuthElement/getPosition()
org/apache/fop/layoutmgr/list/ListItemLayoutManager/getCombinedKnuthElementsForListItem(java.util.List,java.util.List,org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/layoutmgr/list/ListItemLayoutManager/getKeepTogether()
org/apache/fop/layoutmgr/list/ListItemLayoutManager/getCombinedKnuthElementsForListItem(java.util.List,java.util.List,org.apache.fop.layoutmgr.LayoutContext)#java/util/LinkedList/isEmpty()
org/apache/fop/layoutmgr/list/ListItemLayoutManager/getCombinedKnuthElementsForListItem(java.util.List,java.util.List,org.apache.fop.layoutmgr.LayoutContext)#java/util/Collections/emptyList()
org/apache/fop/layoutmgr/list/ListItemLayoutManager/getCombinedKnuthElementsForListItem(java.util.List,java.util.List,org.apache.fop.layoutmgr.LayoutContext)#java/util/LinkedList/add(java.lang.Object)
org/apache/fop/layoutmgr/list/ListItemLayoutManager/getCombinedKnuthElementsForListItem(java.util.List,java.util.List,org.apache.fop.layoutmgr.LayoutContext)#java/util/LinkedList/LinkedList()
org/apache/fop/layoutmgr/list/ListItemLayoutManager/getCombinedKnuthElementsForListItem(java.util.List,java.util.List,org.apache.fop.layoutmgr.LayoutContext)#java/util/LinkedList/addAll(java.util.Collection)
org/apache/fop/layoutmgr/list/ListItemLayoutManager/getCombinedKnuthElementsForListItem(java.util.List,java.util.List,org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/layoutmgr/list/ListItemLayoutManager$ListItemPosition/setOriginalBodyPosition(org.apache.fop.layoutmgr.Position)
org/apache/fop/layoutmgr/list/ListItemLayoutManager/getCombinedKnuthElementsForListItem(java.util.List,java.util.List,org.apache.fop.layoutmgr.LayoutContext)#java/util/ArrayList/ArrayList(java.util.Collection)
org/apache/fop/layoutmgr/list/ListItemLayoutManager/getCombinedKnuthElementsForListItem(java.util.List,java.util.List,org.apache.fop.layoutmgr.LayoutContext)#java/lang/Math/max(int,int)
org/apache/fop/layoutmgr/list/ListItemLayoutManager/getCombinedKnuthElementsForListItem(java.util.List,java.util.List,org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/layoutmgr/list/ListItemLayoutManager$ListItemPosition/setOriginalLabelPosition(org.apache.fop.layoutmgr.Position)
org/apache/fop/layoutmgr/list/ListItemLayoutManager/getCombinedKnuthElementsForListItem(java.util.List,java.util.List,org.apache.fop.layoutmgr.LayoutContext)#java/util/List/size()
org/apache/fop/layoutmgr/list/ListItemLayoutManager/getCombinedKnuthElementsForListItem(java.util.List,java.util.List,org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/layoutmgr/list/ListItemLayoutManager$ListItemPosition/ListItemPosition(org.apache.fop.layoutmgr.list.ListItemLayoutManager,org.apache.fop.layoutmgr.LayoutManager,int,int,int,int)
org/apache/fop/layoutmgr/list/ListItemLayoutManager/getCombinedKnuthElementsForListItem(java.util.List,java.util.List,org.apache.fop.layoutmgr.LayoutContext)#java/util/List/get(int)
org/apache/fop/events/EventExceptionManager/throwException(org.apache.fop.events.Event,java.lang.String)#java/util/Iterator/hasNext()
org/apache/fop/events/EventExceptionManager/throwException(org.apache.fop.events.Event,java.lang.String)#org/apache/fop/events/EventExceptionManager$ExceptionFactory/createException(org.apache.fop.events.Event)
org/apache/fop/events/EventExceptionManager/throwException(org.apache.fop.events.Event,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/events/EventExceptionManager/throwException(org.apache.fop.events.Event,java.lang.String)#java/util/Map/get(java.lang.Object)
org/apache/fop/events/EventExceptionManager/throwException(org.apache.fop.events.Event,java.lang.String)#java/util/Map/values()
org/apache/fop/events/EventExceptionManager/throwException(org.apache.fop.events.Event,java.lang.String)#java/util/Iterator/next()
org/apache/fop/events/EventExceptionManager/throwException(org.apache.fop.events.Event,java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/events/EventExceptionManager/throwException(org.apache.fop.events.Event,java.lang.String)#java/util/Collection/iterator()
org/apache/fop/events/EventExceptionManager/throwException(org.apache.fop.events.Event,java.lang.String)#java/lang/StringBuilder/toString()
org/apache/fop/events/EventExceptionManager/throwException(org.apache.fop.events.Event,java.lang.String)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/fop/events/EventExceptionManager/throwException(org.apache.fop.events.Event,java.lang.String)#java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)
org/apache/fop/events/EventExceptionManager/throwException(org.apache.fop.events.Event,java.lang.String)#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/apache/fop/fonts/Typeface/warnMissingGlyph(char)#org/apache/commons/logging/Log/warn(java.lang.Object)
org/apache/fop/fonts/Typeface/warnMissingGlyph(char)#java/lang/StringBuilder/append(int)
org/apache/fop/fonts/Typeface/warnMissingGlyph(char)#java/lang/Integer/toHexString(int)
org/apache/fop/fonts/Typeface/warnMissingGlyph(char)#org/apache/xmlgraphics/fonts/Glyphs/charToGlyphName(char)
org/apache/fop/fonts/Typeface/warnMissingGlyph(char)#java/util/Set/contains(java.lang.Object)
org/apache/fop/fonts/Typeface/warnMissingGlyph(char)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/fonts/Typeface/warnMissingGlyph(char)#java/lang/StringBuilder/toString()
org/apache/fop/fonts/Typeface/warnMissingGlyph(char)#java/util/Set/size()
org/apache/fop/fonts/Typeface/warnMissingGlyph(char)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/fonts/Typeface/warnMissingGlyph(char)#java/lang/Character/Character(char)
org/apache/fop/fonts/Typeface/warnMissingGlyph(char)#java/util/HashSet/HashSet()
org/apache/fop/fonts/Typeface/warnMissingGlyph(char)#org/apache/fop/fonts/Typeface/getFontName()
org/apache/fop/fonts/Typeface/warnMissingGlyph(char)#java/util/Set/add(java.lang.Object)
org/apache/fop/layoutmgr/AbstractLayoutManager/addChildLM(org.apache.fop.layoutmgr.LayoutManager)#java/util/ArrayList/ArrayList(int)
org/apache/fop/layoutmgr/AbstractLayoutManager/addChildLM(org.apache.fop.layoutmgr.LayoutManager)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/layoutmgr/AbstractLayoutManager/addChildLM(org.apache.fop.layoutmgr.LayoutManager)#java/lang/Class/getName()
org/apache/fop/layoutmgr/AbstractLayoutManager/addChildLM(org.apache.fop.layoutmgr.LayoutManager)#java/util/List/add(java.lang.Object)
org/apache/fop/layoutmgr/AbstractLayoutManager/addChildLM(org.apache.fop.layoutmgr.LayoutManager)#java/lang/StringBuilder/toString()
org/apache/fop/layoutmgr/AbstractLayoutManager/addChildLM(org.apache.fop.layoutmgr.LayoutManager)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/layoutmgr/AbstractLayoutManager/addChildLM(org.apache.fop.layoutmgr.LayoutManager)#org/apache/commons/logging/Log/trace(java.lang.Object)
org/apache/fop/layoutmgr/AbstractLayoutManager/addChildLM(org.apache.fop.layoutmgr.LayoutManager)#java/lang/Object/getClass()
org/apache/fop/layoutmgr/AbstractLayoutManager/addChildLM(org.apache.fop.layoutmgr.LayoutManager)#org/apache/commons/logging/Log/isTraceEnabled()
org/apache/fop/render/ps/svg/PSSVGGraphics2D/outputPattern(org.apache.fop.render.gradient.Pattern)#org/apache/fop/render/ps/svg/PSSVGGraphics2D/getPSGenerator()
org/apache/fop/render/ps/svg/PSSVGGraphics2D/outputPattern(org.apache.fop.render.gradient.Pattern)#java/util/Iterator/hasNext()
org/apache/fop/render/ps/svg/PSSVGGraphics2D/outputPattern(org.apache.fop.render.gradient.Pattern)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/render/ps/svg/PSSVGGraphics2D/outputPattern(org.apache.fop.render.gradient.Pattern)#java/lang/StringBuilder/append(int)
org/apache/fop/render/ps/svg/PSSVGGraphics2D/outputPattern(org.apache.fop.render.gradient.Pattern)#java/lang/StringBuilder/StringBuilder(int)
org/apache/fop/render/ps/svg/PSSVGGraphics2D/outputPattern(org.apache.fop.render.gradient.Pattern)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/render/ps/svg/PSSVGGraphics2D/outputPattern(org.apache.fop.render.gradient.Pattern)#java/util/List/iterator()
org/apache/fop/render/ps/svg/PSSVGGraphics2D/outputPattern(org.apache.fop.render.gradient.Pattern)#java/lang/StringBuilder/toString()
org/apache/fop/render/ps/svg/PSSVGGraphics2D/outputPattern(org.apache.fop.render.gradient.Pattern)#java/util/Iterator/next()
org/apache/fop/render/ps/svg/PSSVGGraphics2D/outputPattern(org.apache.fop.render.gradient.Pattern)#java/lang/Double/doubleValue()
org/apache/fop/render/ps/svg/PSSVGGraphics2D/outputPattern(org.apache.fop.render.gradient.Pattern)#org/apache/xmlgraphics/ps/PSGenerator/formatDouble(double)
org/apache/fop/render/afp/AFPPainter/AFPBorderPainterAdapter/BorderImagePainter/paint(java.awt.Graphics2D,java.awt.geom.Rectangle2D)#org/apache/fop/render/afp/AFPPainter$AFPBorderPainterAdapter/access$100(org.apache.fop.render.afp.AFPPainter$AFPBorderPainterAdapter,int,int,java.awt.geom.AffineTransform)
org/apache/fop/render/afp/AFPPainter/AFPBorderPainterAdapter/BorderImagePainter/paint(java.awt.Graphics2D,java.awt.geom.Rectangle2D)#java/awt/Graphics2D/setColor(java.awt.Color)
org/apache/fop/render/afp/AFPPainter/AFPBorderPainterAdapter/BorderImagePainter/paint(java.awt.Graphics2D,java.awt.geom.Rectangle2D)#java/awt/Rectangle/Rectangle(int,int,int,int)
org/apache/fop/render/afp/AFPPainter/AFPBorderPainterAdapter/BorderImagePainter/paint(java.awt.Graphics2D,java.awt.geom.Rectangle2D)#java/awt/Graphics2D/fill(java.awt.Shape)
org/apache/fop/render/afp/AFPPainter/AFPBorderPainterAdapter/BorderImagePainter/paint(java.awt.Graphics2D,java.awt.geom.Rectangle2D)#java/awt/geom/AffineTransform/AffineTransform(float,float,float,float,float,float)
org/apache/fop/render/afp/AFPPainter/AFPBorderPainterAdapter/BorderImagePainter/paint(java.awt.Graphics2D,java.awt.geom.Rectangle2D)#java/awt/geom/Area/transform(java.awt.geom.AffineTransform)
org/apache/fop/render/afp/AFPPainter/AFPBorderPainterAdapter/BorderImagePainter/paint(java.awt.Graphics2D,java.awt.geom.Rectangle2D)#java/awt/geom/Area/Area(java.awt.Shape)
org/apache/fop/render/afp/AFPPainter/AFPBorderPainterAdapter/BorderImagePainter/paint(java.awt.Graphics2D,java.awt.geom.Rectangle2D)#org/apache/fop/render/afp/AFPPainter$AFPBorderPainterAdapter/access$200(org.apache.fop.render.afp.AFPPainter$AFPBorderPainterAdapter,int,int,int,int,java.awt.geom.AffineTransform)
org/apache/fop/render/afp/AFPPainter/AFPBorderPainterAdapter/BorderImagePainter/paint(java.awt.Graphics2D,java.awt.geom.Rectangle2D)#org/apache/fop/render/afp/AFPPainter$AFPBorderPainterAdapter/access$300(org.apache.fop.render.afp.AFPPainter$AFPBorderPainterAdapter,int,int,int,int,java.awt.geom.AffineTransform)
org/apache/fop/render/afp/AFPPainter/AFPBorderPainterAdapter/BorderImagePainter/paint(java.awt.Graphics2D,java.awt.geom.Rectangle2D)#java/awt/geom/Area/add(java.awt.geom.Area)
org/apache/fop/render/afp/AFPPainter/AFPBorderPainterAdapter/BorderImagePainter/paint(java.awt.Graphics2D,java.awt.geom.Rectangle2D)#java/awt/geom/GeneralPath/GeneralPath()
org/apache/fop/render/afp/AFPPainter/AFPBorderPainterAdapter/BorderImagePainter/paint(java.awt.Graphics2D,java.awt.geom.Rectangle2D)#java/awt/geom/AffineTransform/AffineTransform()
org/apache/fop/render/afp/AFPPainter/AFPBorderPainterAdapter/BorderImagePainter/paint(java.awt.Graphics2D,java.awt.geom.Rectangle2D)#java/awt/geom/Area/subtract(java.awt.geom.Area)
org/apache/fop/render/afp/AFPPainter/AFPBorderPainterAdapter/BorderImagePainter/paint(java.awt.Graphics2D,java.awt.geom.Rectangle2D)#java/awt/geom/GeneralPath/lineTo(float,float)
org/apache/fop/render/afp/AFPPainter/AFPBorderPainterAdapter/BorderImagePainter/paint(java.awt.Graphics2D,java.awt.geom.Rectangle2D)#java/awt/geom/Area/Area()
org/apache/fop/render/afp/AFPPainter/AFPBorderPainterAdapter/BorderImagePainter/paint(java.awt.Graphics2D,java.awt.geom.Rectangle2D)#java/awt/geom/GeneralPath/moveTo(float,float)
org/apache/fop/complexscripts/fonts/GlyphCoverageTable/MappedCoverageTable/populate(java.util.List)#java/lang/Integer/intValue()
org/apache/fop/complexscripts/fonts/GlyphCoverageTable/MappedCoverageTable/populate(java.util.List)#java/util/Iterator/hasNext()
org/apache/fop/complexscripts/fonts/GlyphCoverageTable/MappedCoverageTable/populate(java.util.List)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/complexscripts/fonts/GlyphCoverageTable/MappedCoverageTable/populate(java.util.List)#java/lang/StringBuilder/append(int)
org/apache/fop/complexscripts/fonts/GlyphCoverageTable/MappedCoverageTable/populate(java.util.List)#java/util/List/size()
org/apache/fop/complexscripts/fonts/GlyphCoverageTable/MappedCoverageTable/populate(java.util.List)#org/apache/commons/logging/Log/info(java.lang.Object)
org/apache/fop/complexscripts/fonts/GlyphCoverageTable/MappedCoverageTable/populate(java.util.List)#java/util/Iterator/next()
org/apache/fop/complexscripts/fonts/GlyphCoverageTable/MappedCoverageTable/populate(java.util.List)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/complexscripts/fonts/GlyphCoverageTable/MappedCoverageTable/populate(java.util.List)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/fop/complexscripts/fonts/GlyphCoverageTable/MappedCoverageTable/populate(java.util.List)#java/util/List/iterator()
org/apache/fop/complexscripts/fonts/GlyphCoverageTable/MappedCoverageTable/populate(java.util.List)#java/lang/AssertionError/AssertionError()
org/apache/fop/complexscripts/fonts/GlyphCoverageTable/MappedCoverageTable/populate(java.util.List)#java/lang/StringBuilder/toString()
org/apache/fop/pdf/PDFLinearization/HintTable/writeSharedTable(org.apache.commons.io.output.CountingOutputStream)#java/lang/Integer/intValue()
org/apache/fop/pdf/PDFLinearization/HintTable/writeSharedTable(org.apache.commons.io.output.CountingOutputStream)#org/apache/fop/pdf/PDFLinearization$HintTable/put(java.lang.String,java.lang.Object)
org/apache/fop/pdf/PDFLinearization/HintTable/writeSharedTable(org.apache.commons.io.output.CountingOutputStream)#java/util/Iterator/hasNext()
org/apache/fop/pdf/PDFLinearization/HintTable/writeSharedTable(org.apache.commons.io.output.CountingOutputStream)#org/apache/commons/io/output/CountingOutputStream/getCount()
org/apache/fop/pdf/PDFLinearization/HintTable/writeSharedTable(org.apache.commons.io.output.CountingOutputStream)#java/util/List/size()
org/apache/fop/pdf/PDFLinearization/HintTable/writeSharedTable(org.apache.commons.io.output.CountingOutputStream)#java/util/Iterator/next()
org/apache/fop/pdf/PDFLinearization/HintTable/writeSharedTable(org.apache.commons.io.output.CountingOutputStream)#org/apache/fop/pdf/PDFLinearization$HintTable/writeCard16(int,java.io.OutputStream)
org/apache/fop/pdf/PDFLinearization/HintTable/writeSharedTable(org.apache.commons.io.output.CountingOutputStream)#org/apache/fop/pdf/PDFLinearization$HintTable/writeULong(int,java.io.OutputStream)
org/apache/fop/pdf/PDFLinearization/HintTable/writeSharedTable(org.apache.commons.io.output.CountingOutputStream)#java/lang/Integer/valueOf(int)
org/apache/fop/pdf/PDFLinearization/HintTable/writeSharedTable(org.apache.commons.io.output.CountingOutputStream)#java/util/List/iterator()
org/apache/fop/pdf/PDFLinearization/HintTable/outputRawStreamData(java.io.OutputStream)#java/lang/Integer/intValue()
org/apache/fop/pdf/PDFLinearization/HintTable/outputRawStreamData(java.io.OutputStream)#org/apache/fop/pdf/PDFLinearization$HintTable/put(java.lang.String,java.lang.Object)
org/apache/fop/pdf/PDFLinearization/HintTable/outputRawStreamData(java.io.OutputStream)#java/util/Iterator/hasNext()
org/apache/fop/pdf/PDFLinearization/HintTable/outputRawStreamData(java.io.OutputStream)#java/util/Map$Entry/getKey()
org/apache/fop/pdf/PDFLinearization/HintTable/outputRawStreamData(java.io.OutputStream)#org/apache/fop/pdf/PDFLinearization$HintTable/writeSharedTable(org.apache.commons.io.output.CountingOutputStream)
org/apache/fop/pdf/PDFLinearization/HintTable/outputRawStreamData(java.io.OutputStream)#org/apache/commons/io/output/CountingOutputStream/getCount()
org/apache/fop/pdf/PDFLinearization/HintTable/outputRawStreamData(java.io.OutputStream)#java/util/Iterator/next()
org/apache/fop/pdf/PDFLinearization/HintTable/outputRawStreamData(java.io.OutputStream)#org/apache/commons/io/output/CountingOutputStream/CountingOutputStream(java.io.OutputStream)
org/apache/fop/pdf/PDFLinearization/HintTable/outputRawStreamData(java.io.OutputStream)#java/util/Set/iterator()
org/apache/fop/pdf/PDFLinearization/HintTable/outputRawStreamData(java.io.OutputStream)#org/apache/fop/pdf/PDFLinearization$HintTable/writeULong(int,java.io.OutputStream)
org/apache/fop/pdf/PDFLinearization/HintTable/outputRawStreamData(java.io.OutputStream)#java/util/Map$Entry/getValue()
org/apache/fop/pdf/PDFLinearization/HintTable/outputRawStreamData(java.io.OutputStream)#java/util/List/iterator()
org/apache/fop/pdf/PDFLinearization/HintTable/outputRawStreamData(java.io.OutputStream)#java/util/Map/entrySet()
org/apache/fop/pdf/PDFLinearization/HintTable/outputRawStreamData(java.io.OutputStream)#org/apache/fop/pdf/PDFLinearization$HintTable/writeCard16(int,java.io.OutputStream)
org/apache/fop/pdf/PDFLinearization/HintTable/outputRawStreamData(java.io.OutputStream)#java/lang/String/equals(java.lang.Object)
org/apache/fop/pdf/PDFLinearization/HintTable/outputRawStreamData(java.io.OutputStream)#java/lang/Integer/valueOf(int)
org/apache/fop/pdf/PDFLinearization/HintTable/outputRawStreamData(java.io.OutputStream)#java/util/List/get(int)
org/apache/fop/render/java2d/Java2DImageHandlerGraphics2D/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/xmlgraphics/java2d/Graphics2DImagePainter/paint(java.awt.Graphics2D,java.awt.geom.Rectangle2D)
org/apache/fop/render/java2d/Java2DImageHandlerGraphics2D/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/xmlgraphics/image/loader/ImageSize/getDimensionMpt()
org/apache/fop/render/java2d/Java2DImageHandlerGraphics2D/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/awt/Graphics2D/create()
org/apache/fop/render/java2d/Java2DImageHandlerGraphics2D/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/awt/geom/Rectangle2D$Double/Double(double,double,double,double)
org/apache/fop/render/java2d/Java2DImageHandlerGraphics2D/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/awt/Dimension/getHeight()
org/apache/fop/render/java2d/Java2DImageHandlerGraphics2D/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/awt/Dimension/getWidth()
org/apache/fop/render/java2d/Java2DImageHandlerGraphics2D/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/xmlgraphics/image/loader/impl/ImageGraphics2D/getGraphics2DImagePainter()
org/apache/fop/render/java2d/Java2DImageHandlerGraphics2D/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/awt/Graphics2D/translate(int,int)
org/apache/fop/render/java2d/Java2DImageHandlerGraphics2D/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/xmlgraphics/image/loader/Image/getInfo()
org/apache/fop/render/java2d/Java2DImageHandlerGraphics2D/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/awt/Graphics2D/dispose()
org/apache/fop/render/java2d/Java2DImageHandlerGraphics2D/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/awt/Graphics2D/scale(double,double)
org/apache/fop/render/java2d/Java2DImageHandlerGraphics2D/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/xmlgraphics/image/loader/ImageInfo/getSize()
org/apache/fop/render/awt/viewer/PreviewPanel/ViewportScroller/mouseDragged(java.awt.event.MouseEvent)#java/awt/event/MouseEvent/getX()
org/apache/fop/render/awt/viewer/PreviewPanel/ViewportScroller/mouseDragged(java.awt.event.MouseEvent)#java/awt/event/MouseEvent/getY()
org/apache/fop/render/awt/viewer/PreviewPanel/ViewportScroller/mouseDragged(java.awt.event.MouseEvent)#java/lang/Math/max(int,int)
org/apache/fop/render/awt/viewer/PreviewPanel/ViewportScroller/mouseDragged(java.awt.event.MouseEvent)#java/awt/Point/Point(int,int)
org/apache/fop/render/awt/viewer/PreviewPanel/ViewportScroller/mouseDragged(java.awt.event.MouseEvent)#javax/swing/JViewport/getExtentSize()
org/apache/fop/render/awt/viewer/PreviewPanel/ViewportScroller/mouseDragged(java.awt.event.MouseEvent)#javax/swing/JViewport/getViewPosition()
org/apache/fop/render/awt/viewer/PreviewPanel/ViewportScroller/mouseDragged(java.awt.event.MouseEvent)#java/lang/Math/min(int,int)
org/apache/fop/render/awt/viewer/PreviewPanel/ViewportScroller/mouseDragged(java.awt.event.MouseEvent)#javax/swing/JViewport/setViewPosition(java.awt.Point)
org/apache/fop/render/awt/viewer/PreviewPanel/ViewportScroller/mouseDragged(java.awt.event.MouseEvent)#javax/swing/JViewport/getViewSize()
org/apache/fop/render/ps/PSImageHandlerGraphics2D/buildFormGenerator(int,org.apache.fop.render.ps.PSImageFormResource,org.apache.xmlgraphics.image.loader.ImageInfo,org.apache.xmlgraphics.image.loader.impl.ImageGraphics2D)#org/apache/xmlgraphics/image/loader/ImageSize/getDimensionPt()
org/apache/fop/render/ps/PSImageHandlerGraphics2D/buildFormGenerator(int,org.apache.fop.render.ps.PSImageFormResource,org.apache.xmlgraphics.image.loader.ImageInfo,org.apache.xmlgraphics.image.loader.impl.ImageGraphics2D)#org/apache/xmlgraphics/image/loader/ImageInfo/getOriginalURI()
org/apache/fop/render/ps/PSImageHandlerGraphics2D/buildFormGenerator(int,org.apache.fop.render.ps.PSImageFormResource,org.apache.xmlgraphics.image.loader.ImageInfo,org.apache.xmlgraphics.image.loader.impl.ImageGraphics2D)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/render/ps/PSImageHandlerGraphics2D/buildFormGenerator(int,org.apache.fop.render.ps.PSImageFormResource,org.apache.xmlgraphics.image.loader.ImageInfo,org.apache.xmlgraphics.image.loader.impl.ImageGraphics2D)#org/apache/fop/render/ps/PSImageFormResource/getName()
org/apache/fop/render/ps/PSImageHandlerGraphics2D/buildFormGenerator(int,org.apache.fop.render.ps.PSImageFormResource,org.apache.xmlgraphics.image.loader.ImageInfo,org.apache.xmlgraphics.image.loader.impl.ImageGraphics2D)#org/apache/xmlgraphics/image/loader/ImageSize/getDimensionMpt()
org/apache/fop/render/ps/PSImageHandlerGraphics2D/buildFormGenerator(int,org.apache.fop.render.ps.PSImageFormResource,org.apache.xmlgraphics.image.loader.ImageInfo,org.apache.xmlgraphics.image.loader.impl.ImageGraphics2D)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/render/ps/PSImageHandlerGraphics2D/buildFormGenerator(int,org.apache.fop.render.ps.PSImageFormResource,org.apache.xmlgraphics.image.loader.ImageInfo,org.apache.xmlgraphics.image.loader.impl.ImageGraphics2D)#org/apache/xmlgraphics/image/loader/ImageInfo/getSize()
org/apache/fop/render/ps/PSImageHandlerGraphics2D/buildFormGenerator(int,org.apache.fop.render.ps.PSImageFormResource,org.apache.xmlgraphics.image.loader.ImageInfo,org.apache.xmlgraphics.image.loader.impl.ImageGraphics2D)#org/apache/fop/render/ps/PSImageHandlerGraphics2D$1/1(org.apache.fop.render.ps.PSImageHandlerGraphics2D,java.lang.String,java.lang.String,java.awt.geom.Dimension2D,org.apache.xmlgraphics.image.loader.impl.ImageGraphics2D,java.awt.geom.Dimension2D)
org/apache/fop/render/ps/PSImageHandlerGraphics2D/buildFormGenerator(int,org.apache.fop.render.ps.PSImageFormResource,org.apache.xmlgraphics.image.loader.ImageInfo,org.apache.xmlgraphics.image.loader.impl.ImageGraphics2D)#org/apache/xmlgraphics/image/loader/ImageInfo/getMimeType()
org/apache/fop/render/ps/PSImageHandlerGraphics2D/buildFormGenerator(int,org.apache.fop.render.ps.PSImageFormResource,org.apache.xmlgraphics.image.loader.ImageInfo,org.apache.xmlgraphics.image.loader.impl.ImageGraphics2D)#java/lang/StringBuilder/toString()
org/apache/fop/render/ps/PSImageHandlerGraphics2D/buildFormGenerator(int,org.apache.fop.render.ps.PSImageFormResource,org.apache.xmlgraphics.image.loader.ImageInfo,org.apache.xmlgraphics.image.loader.impl.ImageGraphics2D)#org/apache/fop/render/ps/PSImageHandlerGraphics2D$2/2(org.apache.fop.render.ps.PSImageHandlerGraphics2D,java.lang.String,java.lang.String,java.awt.geom.Dimension2D,org.apache.fop.render.ps.PSImageFormResource,org.apache.xmlgraphics.image.loader.impl.ImageGraphics2D,java.awt.geom.Dimension2D)
org/apache/fop/render/ps/PSImageHandlerGraphics2D/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/xmlgraphics/java2d/Graphics2DImagePainter/paint(java.awt.Graphics2D,java.awt.geom.Rectangle2D)
org/apache/fop/render/ps/PSImageHandlerGraphics2D/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/xmlgraphics/ps/PSGenerator/getCurrentState()
org/apache/fop/render/ps/PSImageHandlerGraphics2D/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/xmlgraphics/ps/PSGenerator/concatMatrix(double,double,double,double,double,double)
org/apache/fop/render/ps/PSImageHandlerGraphics2D/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/awt/geom/AffineTransform/translate(double,double)
org/apache/fop/render/ps/PSImageHandlerGraphics2D/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/awt/Rectangle/getWidth()
org/apache/fop/render/ps/PSImageHandlerGraphics2D/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/xmlgraphics/java2d/ps/PSGraphics2D/setGraphicContext(org.apache.xmlgraphics.java2d.GraphicContext)
org/apache/fop/render/ps/PSImageHandlerGraphics2D/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/xmlgraphics/java2d/Graphics2DImagePainter/getImageSize()
org/apache/fop/render/ps/PSImageHandlerGraphics2D/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/awt/geom/Rectangle2D$Double/Double(double,double,double,double)
org/apache/fop/render/ps/PSImageHandlerGraphics2D/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/awt/Dimension/getWidth()
org/apache/fop/render/ps/PSImageHandlerGraphics2D/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/xmlgraphics/java2d/ps/PSGraphics2D/PSGraphics2D(boolean,org.apache.xmlgraphics.ps.PSGenerator)
org/apache/fop/render/ps/PSImageHandlerGraphics2D/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/xmlgraphics/ps/PSState/concatMatrix(java.awt.geom.AffineTransform)
org/apache/fop/render/ps/PSImageHandlerGraphics2D/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/xmlgraphics/java2d/GeneralGraphics2DImagePainter/getGraphics(boolean,org.apache.xmlgraphics.ps.PSGenerator)
org/apache/fop/render/ps/PSImageHandlerGraphics2D/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/awt/Dimension/getHeight()
org/apache/fop/render/ps/PSImageHandlerGraphics2D/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/xmlgraphics/ps/PSGenerator/commentln(java.lang.String)
org/apache/fop/render/ps/PSImageHandlerGraphics2D/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/awt/Rectangle/getHeight()
org/apache/fop/render/ps/PSImageHandlerGraphics2D/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/awt/geom/AffineTransform/AffineTransform()
org/apache/fop/render/ps/PSImageHandlerGraphics2D/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/xmlgraphics/java2d/GraphicContext/GraphicContext()
org/apache/fop/render/ps/PSImageHandlerGraphics2D/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/xmlgraphics/ps/PSGenerator/restoreGraphicsState()
org/apache/fop/render/ps/PSImageHandlerGraphics2D/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/awt/Rectangle/getX()
org/apache/fop/render/ps/PSImageHandlerGraphics2D/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/xmlgraphics/image/loader/impl/ImageGraphics2D/getGraphics2DImagePainter()
org/apache/fop/render/ps/PSImageHandlerGraphics2D/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/awt/Rectangle/getY()
org/apache/fop/render/ps/PSImageHandlerGraphics2D/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/xmlgraphics/ps/PSGenerator/saveGraphicsState()
org/apache/fop/render/intermediate/IFParser/Handler/TextHandler/endElement()#org/apache/fop/render/intermediate/IFParser$Handler/access$3200(org.apache.fop.render.intermediate.IFParser$Handler)
org/apache/fop/render/intermediate/IFParser/Handler/TextHandler/endElement()#org/xml/sax/Attributes/getValue(java.lang.String)
org/apache/fop/render/intermediate/IFParser/Handler/TextHandler/endElement()#java/lang/Boolean/valueOf(java.lang.String)
org/apache/fop/render/intermediate/IFParser/Handler/TextHandler/endElement()#java/lang/StringBuffer/toString()
org/apache/fop/render/intermediate/IFParser/Handler/TextHandler/endElement()#org/apache/fop/render/intermediate/IFParser$Handler/access$2600(org.apache.fop.render.intermediate.IFParser$Handler)
org/apache/fop/render/intermediate/IFParser/Handler/TextHandler/endElement()#org/apache/fop/render/intermediate/IFParser$Handler/access$3600(org.apache.fop.render.intermediate.IFParser$Handler)
org/apache/fop/render/intermediate/IFParser/Handler/TextHandler/endElement()#org/apache/fop/render/intermediate/IFParser$Handler/access$3400(org.apache.fop.render.intermediate.IFParser$Handler,org.xml.sax.Attributes)
org/apache/fop/render/intermediate/IFParser/Handler/TextHandler/endElement()#java/lang/Integer/parseInt(java.lang.String)
org/apache/fop/render/intermediate/IFParser/Handler/TextHandler/endElement()#java/lang/Boolean/booleanValue()
org/apache/fop/render/intermediate/IFParser/Handler/TextHandler/endElement()#org/apache/fop/render/intermediate/IFParser$Handler/access$3500(org.apache.fop.render.intermediate.IFParser$Handler)
org/apache/fop/render/intermediate/IFParser/Handler/TextHandler/endElement()#org/apache/fop/render/intermediate/IFParser$Handler/access$2400(org.apache.fop.render.intermediate.IFParser$Handler)
org/apache/fop/complexscripts/fonts/GlyphPositioningTable/PairSubtableFormat2/populate(java.util.List)#java/lang/Integer/intValue()
org/apache/fop/complexscripts/fonts/GlyphPositioningTable/PairSubtableFormat2/populate(java.util.List)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/complexscripts/fonts/GlyphPositioningTable/PairSubtableFormat2/populate(java.util.List)#java/lang/StringBuilder/append(int)
org/apache/fop/complexscripts/fonts/GlyphPositioningTable/PairSubtableFormat2/populate(java.util.List)#java/util/List/size()
org/apache/fop/complexscripts/fonts/GlyphPositioningTable/PairSubtableFormat2/populate(java.util.List)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/complexscripts/fonts/GlyphPositioningTable/PairSubtableFormat2/populate(java.util.List)#java/util/List/get(int)
org/apache/fop/complexscripts/fonts/GlyphPositioningTable/PairSubtableFormat2/populate(java.util.List)#java/lang/StringBuilder/toString()
org/apache/fop/complexscripts/fonts/GlyphPositioningTable/PairSubtableFormat2/populate(java.util.List)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/fop/complexscripts/fonts/GlyphPositioningTable/PairSubtableFormat2/populate(java.util.List)#java/lang/Object/getClass()
org/apache/fop/complexscripts/util/NumberConverter/parseFormatTokens(java.lang.String)#java/lang/Integer/intValue()
org/apache/fop/complexscripts/util/NumberConverter/parseFormatTokens(java.lang.String)#java/util/ArrayList/ArrayList()
org/apache/fop/complexscripts/util/NumberConverter/parseFormatTokens(java.lang.String)#java/util/List/remove(int)
org/apache/fop/complexscripts/util/NumberConverter/parseFormatTokens(java.lang.String)#java/util/List/size()
org/apache/fop/complexscripts/util/NumberConverter/parseFormatTokens(java.lang.String)#java/util/List/toArray(java.lang.Object[])
org/apache/fop/complexscripts/util/NumberConverter/parseFormatTokens(java.lang.String)#java/util/List/add(java.lang.Object)
org/apache/fop/complexscripts/util/NumberConverter/parseFormatTokens(java.lang.String)#java/lang/Integer/valueOf(int)
org/apache/fop/complexscripts/util/NumberConverter/parseFormatTokens(java.lang.String)#java/util/List/isEmpty()
org/apache/fop/complexscripts/util/NumberConverter/parseFormatTokens(java.lang.String)#java/lang/String/length()
org/apache/fop/complexscripts/util/NumberConverter/parseFormatTokens(java.lang.String)#java/util/List/clear()
org/apache/fop/render/afp/AFPFontConfig/OutlineFontConfig/getFontInfo(org.apache.fop.apps.io.InternalResourceResolver,org.apache.fop.afp.AFPEventProducer)#org/apache/fop/render/afp/AFPFontConfig$AFPFontConfigData/access$900(org.apache.fop.render.afp.AFPFontConfig$AFPFontConfigData)
org/apache/fop/render/afp/AFPFontConfig/OutlineFontConfig/getFontInfo(org.apache.fop.apps.io.InternalResourceResolver,org.apache.fop.afp.AFPEventProducer)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/render/afp/AFPFontConfig/OutlineFontConfig/getFontInfo(org.apache.fop.apps.io.InternalResourceResolver,org.apache.fop.afp.AFPEventProducer)#org/apache/fop/render/afp/AFPFontConfig$OutlineFontConfig/getAccessor(org.apache.fop.apps.io.InternalResourceResolver)
org/apache/fop/render/afp/AFPFontConfig/OutlineFontConfig/getFontInfo(org.apache.fop.apps.io.InternalResourceResolver,org.apache.fop.afp.AFPEventProducer)#java/lang/StringBuilder/toString()
org/apache/fop/render/afp/AFPFontConfig/OutlineFontConfig/getFontInfo(org.apache.fop.apps.io.InternalResourceResolver,org.apache.fop.afp.AFPEventProducer)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/render/afp/AFPFontConfig/OutlineFontConfig/getFontInfo(org.apache.fop.apps.io.InternalResourceResolver,org.apache.fop.afp.AFPEventProducer)#org/apache/fop/render/afp/AFPFontConfig$OutlineFontConfig/getFontInfo(org.apache.fop.afp.fonts.AFPFont,org.apache.fop.render.afp.AFPFontConfig$AFPFontConfigData)
org/apache/fop/render/afp/AFPFontConfig/OutlineFontConfig/getFontInfo(org.apache.fop.apps.io.InternalResourceResolver,org.apache.fop.afp.AFPEventProducer)#org/apache/fop/render/afp/AFPFontConfig$AFPFontConfigData/access$1400(org.apache.fop.render.afp.AFPFontConfig$AFPFontConfigData)
org/apache/fop/render/afp/AFPFontConfig/OutlineFontConfig/getFontInfo(org.apache.fop.apps.io.InternalResourceResolver,org.apache.fop.afp.AFPEventProducer)#org/apache/commons/logging/Log/error(java.lang.Object)
org/apache/fop/render/afp/AFPFontConfig/OutlineFontConfig/getFontInfo(org.apache.fop.apps.io.InternalResourceResolver,org.apache.fop.afp.AFPEventProducer)#org/apache/fop/render/afp/AFPFontConfig$AFPFontConfigData/access$1100(org.apache.fop.render.afp.AFPFontConfig$AFPFontConfigData)
org/apache/fop/render/afp/AFPFontConfig/OutlineFontConfig/getFontInfo(org.apache.fop.apps.io.InternalResourceResolver,org.apache.fop.afp.AFPEventProducer)#org/apache/fop/render/afp/AFPFontConfig$AFPFontConfigData/access$1000(org.apache.fop.render.afp.AFPFontConfig$AFPFontConfigData)
org/apache/fop/complexscripts/fonts/GlyphPositioningTable/MarkToBaseSubtableFormat1/populate(java.util.List)#java/lang/Integer/intValue()
org/apache/fop/complexscripts/fonts/GlyphPositioningTable/MarkToBaseSubtableFormat1/populate(java.util.List)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/complexscripts/fonts/GlyphPositioningTable/MarkToBaseSubtableFormat1/populate(java.util.List)#java/lang/StringBuilder/append(int)
org/apache/fop/complexscripts/fonts/GlyphPositioningTable/MarkToBaseSubtableFormat1/populate(java.util.List)#java/util/List/size()
org/apache/fop/complexscripts/fonts/GlyphPositioningTable/MarkToBaseSubtableFormat1/populate(java.util.List)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/complexscripts/fonts/GlyphPositioningTable/MarkToBaseSubtableFormat1/populate(java.util.List)#java/util/List/get(int)
org/apache/fop/complexscripts/fonts/GlyphPositioningTable/MarkToBaseSubtableFormat1/populate(java.util.List)#java/lang/StringBuilder/toString()
org/apache/fop/complexscripts/fonts/GlyphPositioningTable/MarkToBaseSubtableFormat1/populate(java.util.List)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/fop/complexscripts/fonts/GlyphPositioningTable/MarkToBaseSubtableFormat1/populate(java.util.List)#java/lang/Object/getClass()
org/apache/fop/render/pcl/PCLPainter/drawTextNative(int,int,int,int,int[][],java.lang.String,org.apache.fop.fonts.FontTriplet)#java/lang/StringBuffer/StringBuffer(int)
org/apache/fop/render/pcl/PCLPainter/drawTextNative(int,int,int,int,int[][],java.lang.String,org.apache.fop.fonts.FontTriplet)#java/lang/String/charAt(int)
org/apache/fop/render/pcl/PCLPainter/drawTextNative(int,int,int,int,int[][],java.lang.String,org.apache.fop.fonts.FontTriplet)#java/lang/Math/max(int,int)
org/apache/fop/render/pcl/PCLPainter/drawTextNative(int,int,int,int,int[][],java.lang.String,org.apache.fop.fonts.FontTriplet)#java/lang/String/getBytes(java.lang.String)
org/apache/fop/render/pcl/PCLPainter/drawTextNative(int,int,int,int,int[][],java.lang.String,org.apache.fop.fonts.FontTriplet)#java/io/OutputStream/write(byte[])
org/apache/fop/render/pcl/PCLPainter/drawTextNative(int,int,int,int,int[][],java.lang.String,org.apache.fop.fonts.FontTriplet)#org/apache/fop/render/pcl/PCLPainter/getFontInfo()
org/apache/fop/render/pcl/PCLPainter/drawTextNative(int,int,int,int,int[][],java.lang.String,org.apache.fop.fonts.FontTriplet)#java/lang/StringBuffer/append(char)
org/apache/fop/render/pcl/PCLPainter/drawTextNative(int,int,int,int,int[][],java.lang.String,org.apache.fop.fonts.FontTriplet)#java/lang/String/length()
org/apache/fop/render/pcl/PCLPainter/drawTextNative(int,int,int,int,int[][],java.lang.String,org.apache.fop.fonts.FontTriplet)#java/lang/StringBuffer/toString()
org/apache/fop/render/pcl/PCLPainter/drawTextNative(int,int,int,int,int[][],java.lang.String,org.apache.fop.fonts.FontTriplet)#java/lang/StringBuffer/append(java.lang.String)
org/apache/fop/render/ps/PSImageHandlerRenderedImage/generateForm(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,org.apache.fop.render.ps.PSImageFormResource)#org/apache/fop/render/ps/PSImageFormResource/getName()
org/apache/fop/render/ps/PSImageHandlerRenderedImage/generateForm(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,org.apache.fop.render.ps.PSImageFormResource)#org/apache/xmlgraphics/image/loader/ImageSize/getDimensionPt()
org/apache/fop/render/ps/PSImageHandlerRenderedImage/generateForm(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,org.apache.fop.render.ps.PSImageFormResource)#org/apache/xmlgraphics/image/loader/ImageInfo/getOriginalURI()
org/apache/fop/render/ps/PSImageHandlerRenderedImage/generateForm(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,org.apache.fop.render.ps.PSImageFormResource)#org/apache/xmlgraphics/ps/ImageFormGenerator/ImageFormGenerator(java.lang.String,java.lang.String,java.awt.geom.Dimension2D,java.awt.image.RenderedImage,boolean)
org/apache/fop/render/ps/PSImageHandlerRenderedImage/generateForm(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,org.apache.fop.render.ps.PSImageFormResource)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/render/ps/PSImageHandlerRenderedImage/generateForm(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,org.apache.fop.render.ps.PSImageFormResource)#java/lang/StringBuilder/toString()
org/apache/fop/render/ps/PSImageHandlerRenderedImage/generateForm(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,org.apache.fop.render.ps.PSImageFormResource)#org/apache/xmlgraphics/image/loader/Image/getInfo()
org/apache/fop/render/ps/PSImageHandlerRenderedImage/generateForm(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,org.apache.fop.render.ps.PSImageFormResource)#org/apache/xmlgraphics/ps/FormGenerator/generate(org.apache.xmlgraphics.ps.PSGenerator)
org/apache/fop/render/ps/PSImageHandlerRenderedImage/generateForm(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,org.apache.fop.render.ps.PSImageFormResource)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/render/ps/PSImageHandlerRenderedImage/generateForm(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,org.apache.fop.render.ps.PSImageFormResource)#org/apache/xmlgraphics/image/loader/ImageInfo/getSize()
org/apache/fop/render/ps/PSImageHandlerRenderedImage/generateForm(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,org.apache.fop.render.ps.PSImageFormResource)#org/apache/xmlgraphics/image/loader/impl/ImageRendered/getRenderedImage()
org/apache/fop/render/ps/PSImageHandlerRenderedImage/generateForm(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,org.apache.fop.render.ps.PSImageFormResource)#org/apache/xmlgraphics/image/loader/ImageInfo/getMimeType()
org/apache/fop/render/ps/PSImageHandlerRenderedImage/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/awt/Dimension/Dimension(int,int)
org/apache/fop/render/ps/PSImageHandlerRenderedImage/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/xmlgraphics/ps/PSImageUtils/writeImage(org.apache.xmlgraphics.ps.ImageEncoder,java.awt.Dimension,java.lang.String,java.awt.geom.Rectangle2D,java.awt.image.ColorModel,org.apache.xmlgraphics.ps.PSGenerator,java.awt.image.RenderedImage)
org/apache/fop/render/ps/PSImageHandlerRenderedImage/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/awt/Rectangle/getWidth()
org/apache/fop/render/ps/PSImageHandlerRenderedImage/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/xmlgraphics/ps/ImageEncodingHelper/ImageEncodingHelper(java.awt.image.RenderedImage)
org/apache/fop/render/ps/PSImageHandlerRenderedImage/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/awt/geom/Rectangle2D$Double/Double(double,double,double,double)
org/apache/fop/render/ps/PSImageHandlerRenderedImage/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/lang/Class/getName()
org/apache/fop/render/ps/PSImageHandlerRenderedImage/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/xmlgraphics/ps/ImageEncodingHelper/getEncodedColorModel()
org/apache/fop/render/ps/PSImageHandlerRenderedImage/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/awt/image/BufferedImage/getGraphics()
org/apache/fop/render/ps/PSImageHandlerRenderedImage/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/awt/Rectangle/getHeight()
org/apache/fop/render/ps/PSImageHandlerRenderedImage/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/lang/Object/getClass()
org/apache/fop/render/ps/PSImageHandlerRenderedImage/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/awt/image/RenderedImage/getColorModel()
org/apache/fop/render/ps/PSImageHandlerRenderedImage/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/awt/Rectangle/getY()
org/apache/fop/render/ps/PSImageHandlerRenderedImage/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/awt/Graphics2D/drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)
org/apache/fop/render/ps/PSImageHandlerRenderedImage/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/awt/image/RenderedImage/getWidth()
org/apache/fop/render/ps/PSImageHandlerRenderedImage/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/awt/Graphics2D/dispose()
org/apache/fop/render/ps/PSImageHandlerRenderedImage/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/awt/image/BufferedImage/BufferedImage(int,int,int)
org/apache/fop/render/ps/PSImageHandlerRenderedImage/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/xmlgraphics/ps/ImageEncodingHelper/createRenderedImageEncoder(java.awt.image.RenderedImage)
org/apache/fop/render/ps/PSImageHandlerRenderedImage/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/awt/Graphics2D/setBackground(java.awt.Color)
org/apache/fop/render/ps/PSImageHandlerRenderedImage/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/xmlgraphics/image/loader/impl/ImageRendered/getRenderedImage()
org/apache/fop/render/ps/PSImageHandlerRenderedImage/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/awt/image/ColorModel/hasAlpha()
org/apache/fop/render/ps/PSImageHandlerRenderedImage/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/awt/Graphics2D/clearRect(int,int,int,int)
org/apache/fop/render/ps/PSImageHandlerRenderedImage/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/awt/image/RenderedImage/getHeight()
org/apache/fop/render/ps/PSImageHandlerRenderedImage/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/awt/Rectangle/getX()
org/apache/fop/afp/goca/AbstractGraphicsCoord/toString()#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/afp/goca/AbstractGraphicsCoord/toString()#java/lang/StringBuffer/append(char)
org/apache/fop/afp/goca/AbstractGraphicsCoord/toString()#java/lang/StringBuffer/length()
org/apache/fop/afp/goca/AbstractGraphicsCoord/toString()#org/apache/fop/afp/goca/AbstractGraphicsCoord/getName()
org/apache/fop/afp/goca/AbstractGraphicsCoord/toString()#java/lang/StringBuffer/toString()
org/apache/fop/afp/goca/AbstractGraphicsCoord/toString()#java/lang/StringBuilder/StringBuilder()
org/apache/fop/afp/goca/AbstractGraphicsCoord/toString()#java/lang/StringBuffer/append(int)
org/apache/fop/afp/goca/AbstractGraphicsCoord/toString()#java/lang/StringBuffer/StringBuffer()
org/apache/fop/afp/goca/AbstractGraphicsCoord/toString()#java/lang/StringBuilder/toString()
org/apache/fop/fonts/type1/AFMFile/overridePrimaryEncoding(org.apache.fop.fonts.SingleByteEncoding)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/fop/fonts/type1/AFMFile/overridePrimaryEncoding(org.apache.fop.fonts.SingleByteEncoding)#java/util/Iterator/hasNext()
org/apache/fop/fonts/type1/AFMFile/overridePrimaryEncoding(org.apache.fop.fonts.SingleByteEncoding)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/fonts/type1/AFMFile/overridePrimaryEncoding(org.apache.fop.fonts.SingleByteEncoding)#java/lang/StringBuilder/append(int)
org/apache/fop/fonts/type1/AFMFile/overridePrimaryEncoding(org.apache.fop.fonts.SingleByteEncoding)#org/apache/commons/logging/Log/isDebugEnabled()
org/apache/fop/fonts/type1/AFMFile/overridePrimaryEncoding(org.apache.fop.fonts.SingleByteEncoding)#java/lang/Integer/toHexString(int)
org/apache/fop/fonts/type1/AFMFile/overridePrimaryEncoding(org.apache.fop.fonts.SingleByteEncoding)#java/util/Iterator/next()
org/apache/fop/fonts/type1/AFMFile/overridePrimaryEncoding(org.apache.fop.fonts.SingleByteEncoding)#java/lang/String/equals(java.lang.Object)
org/apache/fop/fonts/type1/AFMFile/overridePrimaryEncoding(org.apache.fop.fonts.SingleByteEncoding)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/fonts/type1/AFMFile/overridePrimaryEncoding(org.apache.fop.fonts.SingleByteEncoding)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/fop/fonts/type1/AFMFile/overridePrimaryEncoding(org.apache.fop.fonts.SingleByteEncoding)#java/util/List/iterator()
org/apache/fop/fonts/type1/AFMFile/overridePrimaryEncoding(org.apache.fop.fonts.SingleByteEncoding)#java/lang/StringBuilder/append(double)
org/apache/fop/fonts/type1/AFMFile/overridePrimaryEncoding(org.apache.fop.fonts.SingleByteEncoding)#java/lang/StringBuilder/toString()
org/apache/fop/fonts/type1/AFMFile/createXKerningMapEncoded()#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/fop/fonts/type1/AFMFile/createXKerningMapEncoded()#java/lang/Math/round(double)
org/apache/fop/fonts/type1/AFMFile/createXKerningMapEncoded()#java/util/Iterator/hasNext()
org/apache/fop/fonts/type1/AFMFile/createXKerningMapEncoded()#java/util/Map$Entry/getKey()
org/apache/fop/fonts/type1/AFMFile/createXKerningMapEncoded()#java/awt/geom/Dimension2D/getWidth()
org/apache/fop/fonts/type1/AFMFile/createXKerningMapEncoded()#java/lang/Integer/valueOf(int)
org/apache/fop/fonts/type1/AFMFile/createXKerningMapEncoded()#java/util/Map/entrySet()
org/apache/fop/fonts/type1/AFMFile/createXKerningMapEncoded()#java/util/Map/get(java.lang.Object)
org/apache/fop/fonts/type1/AFMFile/createXKerningMapEncoded()#java/util/Iterator/next()
org/apache/fop/fonts/type1/AFMFile/createXKerningMapEncoded()#java/util/HashMap/HashMap()
org/apache/fop/fonts/type1/AFMFile/createXKerningMapEncoded()#java/util/Set/iterator()
org/apache/fop/fonts/type1/AFMFile/createXKerningMapEncoded()#java/util/Map$Entry/getValue()
org/apache/fop/complexscripts/bidi/DelimitedTextRange/assignLevels(org.apache.fop.complexscripts.bidi.TextInterval,int[])#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/fop/complexscripts/bidi/DelimitedTextRange/assignLevels(org.apache.fop.complexscripts.bidi.TextInterval,int[])#java/lang/StringBuilder/append(int)
org/apache/fop/complexscripts/bidi/DelimitedTextRange/assignLevels(org.apache.fop.complexscripts.bidi.TextInterval,int[])#org/apache/commons/logging/Log/isDebugEnabled()
org/apache/fop/complexscripts/bidi/DelimitedTextRange/assignLevels(org.apache.fop.complexscripts.bidi.TextInterval,int[])#java/lang/StringBuilder/StringBuilder()
org/apache/fop/complexscripts/bidi/DelimitedTextRange/assignLevels(org.apache.fop.complexscripts.bidi.TextInterval,int[])#java/lang/StringBuilder/append(java.lang.Object)
org/apache/fop/complexscripts/bidi/DelimitedTextRange/assignLevels(org.apache.fop.complexscripts.bidi.TextInterval,int[])#java/util/Vector/add(java.lang.Object)
org/apache/fop/complexscripts/bidi/DelimitedTextRange/assignLevels(org.apache.fop.complexscripts.bidi.TextInterval,int[])#java/lang/StringBuilder/toString()
org/apache/fop/complexscripts/bidi/DelimitedTextRange/assignLevels(org.apache.fop.complexscripts.bidi.TextInterval,int[])#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/complexscripts/bidi/DelimitedTextRange/assignLevels(org.apache.fop.complexscripts.bidi.TextInterval,int[])#java/util/Vector/Vector()
org/apache/fop/complexscripts/bidi/DelimitedTextRange/toString()#java/util/Iterator/hasNext()
org/apache/fop/complexscripts/bidi/DelimitedTextRange/toString()#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/complexscripts/bidi/DelimitedTextRange/toString()#java/lang/StringBuffer/append(char)
org/apache/fop/complexscripts/bidi/DelimitedTextRange/toString()#java/util/Iterator/next()
org/apache/fop/complexscripts/bidi/DelimitedTextRange/toString()#java/lang/StringBuffer/toString()
org/apache/fop/complexscripts/bidi/DelimitedTextRange/toString()#java/lang/StringBuilder/StringBuilder()
org/apache/fop/complexscripts/bidi/DelimitedTextRange/toString()#java/lang/StringBuilder/toString()
org/apache/fop/complexscripts/bidi/DelimitedTextRange/toString()#java/lang/StringBuffer/StringBuffer(java.lang.String)
org/apache/fop/complexscripts/bidi/DelimitedTextRange/toString()#java/util/List/iterator()
org/apache/fop/complexscripts/bidi/DelimitedTextRange/toString()#java/lang/StringBuffer/append(java.lang.String)
org/apache/fop/fo/FOElementMapping/initialize()#org/apache/fop/fo/FOElementMapping$MarkerMaker/MarkerMaker()
org/apache/fop/fo/FOElementMapping/initialize()#org/apache/fop/fo/FOElementMapping$ListItemMaker/ListItemMaker()
org/apache/fop/fo/FOElementMapping/initialize()#org/apache/fop/fo/FOElementMapping$PageNumberCitationMaker/PageNumberCitationMaker()
org/apache/fop/fo/FOElementMapping/initialize()#org/apache/fop/fo/FOElementMapping$FlowMaker/FlowMaker()
org/apache/fop/fo/FOElementMapping/initialize()#org/apache/fop/fo/FOElementMapping$RepeatablePageMasterAlternativesMaker/RepeatablePageMasterAlternativesMaker()
org/apache/fop/fo/FOElementMapping/initialize()#org/apache/fop/fo/FOElementMapping$TableRowMaker/TableRowMaker()
org/apache/fop/fo/FOElementMapping/initialize()#org/apache/fop/fo/FOElementMapping$DeclarationsMaker/DeclarationsMaker()
org/apache/fop/fo/FOElementMapping/initialize()#org/apache/fop/fo/FOElementMapping$LeaderMaker/LeaderMaker()
org/apache/fop/fo/FOElementMapping/initialize()#org/apache/fop/fo/FOElementMapping$InlineMaker/InlineMaker()
org/apache/fop/fo/FOElementMapping/initialize()#org/apache/fop/fo/FOElementMapping$InitialPropertySetMaker/InitialPropertySetMaker()
org/apache/fop/fo/FOElementMapping/initialize()#org/apache/fop/fo/FOElementMapping$BidiOverrideMaker/BidiOverrideMaker()
org/apache/fop/fo/FOElementMapping/initialize()#org/apache/fop/fo/FOElementMapping$TableCaptionMaker/TableCaptionMaker()
org/apache/fop/fo/FOElementMapping/initialize()#org/apache/fop/fo/FOElementMapping$PageNumberMaker/PageNumberMaker()
org/apache/fop/fo/FOElementMapping/initialize()#org/apache/fop/fo/FOElementMapping$RetrieveMarkerMaker/RetrieveMarkerMaker()
org/apache/fop/fo/FOElementMapping/initialize()#org/apache/fop/fo/FOElementMapping$ColorProfileMaker/ColorProfileMaker()
org/apache/fop/fo/FOElementMapping/initialize()#org/apache/fop/fo/FOElementMapping$BookmarkMaker/BookmarkMaker()
org/apache/fop/fo/FOElementMapping/initialize()#org/apache/fop/fo/FOElementMapping$RegionBodyMaker/RegionBodyMaker()
org/apache/fop/fo/FOElementMapping/initialize()#org/apache/fop/fo/FOElementMapping$InstreamForeignObjectMaker/InstreamForeignObjectMaker()
org/apache/fop/fo/FOElementMapping/initialize()#org/apache/fop/fo/FOElementMapping$StaticContentMaker/StaticContentMaker()
org/apache/fop/fo/FOElementMapping/initialize()#org/apache/fop/fo/FOElementMapping$TitleMaker/TitleMaker()
org/apache/fop/fo/FOElementMapping/initialize()#org/apache/fop/fo/FOElementMapping$MultiPropertiesMaker/MultiPropertiesMaker()
org/apache/fop/fo/FOElementMapping/initialize()#org/apache/fop/fo/FOElementMapping$PageNumberCitationLastMaker/PageNumberCitationLastMaker()
org/apache/fop/fo/FOElementMapping/initialize()#org/apache/fop/fo/FOElementMapping$BookmarkTitleMaker/BookmarkTitleMaker()
org/apache/fop/fo/FOElementMapping/initialize()#org/apache/fop/fo/FOElementMapping$ListBlockMaker/ListBlockMaker()
org/apache/fop/fo/FOElementMapping/initialize()#org/apache/fop/fo/FOElementMapping$RegionStartMaker/RegionStartMaker()
org/apache/fop/fo/FOElementMapping/initialize()#org/apache/fop/fo/FOElementMapping$RepeatablePageMasterReferenceMaker/RepeatablePageMasterReferenceMaker()
org/apache/fop/fo/FOElementMapping/initialize()#org/apache/fop/fo/FOElementMapping$TableHeaderMaker/TableHeaderMaker()
org/apache/fop/fo/FOElementMapping/initialize()#org/apache/fop/fo/FOElementMapping$RegionAfterMaker/RegionAfterMaker()
org/apache/fop/fo/FOElementMapping/initialize()#org/apache/fop/fo/FOElementMapping$ListItemLabelMaker/ListItemLabelMaker()
org/apache/fop/fo/FOElementMapping/initialize()#org/apache/fop/fo/FOElementMapping$BlockMaker/BlockMaker()
org/apache/fop/fo/FOElementMapping/initialize()#org/apache/fop/fo/FOElementMapping$MultiToggleMaker/MultiToggleMaker()
org/apache/fop/fo/FOElementMapping/initialize()#org/apache/fop/fo/FOElementMapping$ExternalGraphicMaker/ExternalGraphicMaker()
org/apache/fop/fo/FOElementMapping/initialize()#org/apache/fop/fo/FOElementMapping$TableAndCaptionMaker/TableAndCaptionMaker()
org/apache/fop/fo/FOElementMapping/initialize()#org/apache/fop/fo/FOElementMapping$MultiSwitchMaker/MultiSwitchMaker()
org/apache/fop/fo/FOElementMapping/initialize()#org/apache/fop/fo/FOElementMapping$RegionEndMaker/RegionEndMaker()
org/apache/fop/fo/FOElementMapping/initialize()#org/apache/fop/fo/FOElementMapping$WrapperMaker/WrapperMaker()
org/apache/fop/fo/FOElementMapping/initialize()#org/apache/fop/fo/FOElementMapping$CharacterMaker/CharacterMaker()
org/apache/fop/fo/FOElementMapping/initialize()#org/apache/fop/fo/FOElementMapping$TableFooterMaker/TableFooterMaker()
org/apache/fop/fo/FOElementMapping/initialize()#org/apache/fop/fo/FOElementMapping$MultiCaseMaker/MultiCaseMaker()
org/apache/fop/fo/FOElementMapping/initialize()#org/apache/fop/fo/FOElementMapping$TableMaker/TableMaker()
org/apache/fop/fo/FOElementMapping/initialize()#org/apache/fop/fo/FOElementMapping$SinglePageMasterReferenceMaker/SinglePageMasterReferenceMaker()
org/apache/fop/fo/FOElementMapping/initialize()#org/apache/fop/fo/FOElementMapping$BasicLinkMaker/BasicLinkMaker()
org/apache/fop/fo/FOElementMapping/initialize()#org/apache/fop/fo/FOElementMapping$LayoutMasterSetMaker/LayoutMasterSetMaker()
org/apache/fop/fo/FOElementMapping/initialize()#org/apache/fop/fo/FOElementMapping$FloatMaker/FloatMaker()
org/apache/fop/fo/FOElementMapping/initialize()#org/apache/fop/fo/FOElementMapping$RetrieveTableMarkerMaker/RetrieveTableMarkerMaker()
org/apache/fop/fo/FOElementMapping/initialize()#org/apache/fop/fo/FOElementMapping$InlineContainerMaker/InlineContainerMaker()
org/apache/fop/fo/FOElementMapping/initialize()#org/apache/fop/fo/FOElementMapping$TableColumnMaker/TableColumnMaker()
org/apache/fop/fo/FOElementMapping/initialize()#org/apache/fop/fo/FOElementMapping$TableCellMaker/TableCellMaker()
org/apache/fop/fo/FOElementMapping/initialize()#org/apache/fop/fo/FOElementMapping$TableBodyMaker/TableBodyMaker()
org/apache/fop/fo/FOElementMapping/initialize()#java/util/HashMap/HashMap()
org/apache/fop/fo/FOElementMapping/initialize()#java/util/HashMap/put(java.lang.Object,java.lang.Object)
org/apache/fop/fo/FOElementMapping/initialize()#org/apache/fop/fo/FOElementMapping$ConditionalPageMasterReferenceMaker/ConditionalPageMasterReferenceMaker()
org/apache/fop/fo/FOElementMapping/initialize()#org/apache/fop/fo/FOElementMapping$MultiPropertySetMaker/MultiPropertySetMaker()
org/apache/fop/fo/FOElementMapping/initialize()#org/apache/fop/fo/FOElementMapping$BlockContainerMaker/BlockContainerMaker()
org/apache/fop/fo/FOElementMapping/initialize()#org/apache/fop/fo/FOElementMapping$BookmarkTreeMaker/BookmarkTreeMaker()
org/apache/fop/fo/FOElementMapping/initialize()#org/apache/fop/fo/FOElementMapping$SimplePageMasterMaker/SimplePageMasterMaker()
org/apache/fop/fo/FOElementMapping/initialize()#org/apache/fop/fo/FOElementMapping$ListItemBodyMaker/ListItemBodyMaker()
org/apache/fop/fo/FOElementMapping/initialize()#org/apache/fop/fo/FOElementMapping$RegionBeforeMaker/RegionBeforeMaker()
org/apache/fop/fo/FOElementMapping/initialize()#org/apache/fop/fo/FOElementMapping$PageSequenceMasterMaker/PageSequenceMasterMaker()
org/apache/fop/fo/FOElementMapping/initialize()#org/apache/fop/fo/FOElementMapping$RootMaker/RootMaker()
org/apache/fop/fo/FOElementMapping/initialize()#org/apache/fop/fo/FOElementMapping$FootnoteBodyMaker/FootnoteBodyMaker()
org/apache/fop/fo/FOElementMapping/initialize()#org/apache/fop/fo/FOElementMapping$PageSequenceMaker/PageSequenceMaker()
org/apache/fop/fo/FOElementMapping/initialize()#org/apache/fop/fo/FOElementMapping$FootnoteMaker/FootnoteMaker()
org/apache/fop/render/java2d/Java2DImageHandlerRenderedImage/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/xmlgraphics/image/loader/ImageSize/getWidthMpt()
org/apache/fop/render/java2d/Java2DImageHandlerRenderedImage/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/awt/Rectangle/getWidth()
org/apache/fop/render/java2d/Java2DImageHandlerRenderedImage/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/awt/geom/AffineTransform/scale(double,double)
org/apache/fop/render/java2d/Java2DImageHandlerRenderedImage/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/xmlgraphics/image/loader/ImageSize/getDpiVertical()
org/apache/fop/render/java2d/Java2DImageHandlerRenderedImage/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/awt/image/BufferedImage/getHeight()
org/apache/fop/render/java2d/Java2DImageHandlerRenderedImage/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/xmlgraphics/image/loader/impl/ImageRendered/getTransparentColor()
org/apache/fop/render/java2d/Java2DImageHandlerRenderedImage/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/awt/image/RenderedImage/getColorModel()
org/apache/fop/render/java2d/Java2DImageHandlerRenderedImage/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/awt/image/BufferedImage/getRGB(int,int)
org/apache/fop/render/java2d/Java2DImageHandlerRenderedImage/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/awt/image/BufferedImage/getAlphaRaster()
org/apache/fop/render/java2d/Java2DImageHandlerRenderedImage/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/xmlgraphics/image/loader/ImageSize/getHeightMpt()
org/apache/fop/render/java2d/Java2DImageHandlerRenderedImage/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/xmlgraphics/image/loader/Image/getInfo()
org/apache/fop/render/java2d/Java2DImageHandlerRenderedImage/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/awt/geom/AffineTransform/translate(double,double)
org/apache/fop/render/java2d/Java2DImageHandlerRenderedImage/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/xmlgraphics/image/loader/ImageInfo/getSize()
org/apache/fop/render/java2d/Java2DImageHandlerRenderedImage/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/awt/Graphics2D/drawRenderedImage(java.awt.image.RenderedImage,java.awt.geom.AffineTransform)
org/apache/fop/render/java2d/Java2DImageHandlerRenderedImage/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/awt/image/BufferedImage/getWidth()
org/apache/fop/render/java2d/Java2DImageHandlerRenderedImage/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/awt/image/WritableRaster/setPixel(int,int,int[])
org/apache/fop/render/java2d/Java2DImageHandlerRenderedImage/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/xmlgraphics/image/loader/impl/ImageRendered/getRenderedImage()
org/apache/fop/render/java2d/Java2DImageHandlerRenderedImage/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/awt/image/ColorModel/hasAlpha()
org/apache/fop/render/java2d/Java2DImageHandlerRenderedImage/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/awt/Rectangle/getHeight()
org/apache/fop/render/java2d/Java2DImageHandlerRenderedImage/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/awt/geom/AffineTransform/AffineTransform()
org/apache/fop/render/java2d/Java2DImageHandlerRenderedImage/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/awt/Color/getRGB()
org/apache/fop/render/java2d/Java2DImageHandlerRenderedImage/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/xmlgraphics/image/loader/ImageSize/getDpiHorizontal()
org/apache/fop/fonts/truetype/OTFSubSetFile/getUsedFDFonts()#java/lang/Integer/intValue()
org/apache/fop/fonts/truetype/OTFSubSetFile/getUsedFDFonts()#java/util/ArrayList/ArrayList()
org/apache/fop/fonts/truetype/OTFSubSetFile/getUsedFDFonts()#java/util/LinkedHashMap/get(java.lang.Object)
org/apache/fop/fonts/truetype/OTFSubSetFile/getUsedFDFonts()#java/util/Iterator/hasNext()
org/apache/fop/fonts/truetype/OTFSubSetFile/getUsedFDFonts()#org/apache/fop/fonts/truetype/OTFSubSetFile$FDIndexReference/getOldFDIndex()
org/apache/fop/fonts/truetype/OTFSubSetFile/getUsedFDFonts()#java/util/Iterator/next()
org/apache/fop/fonts/truetype/OTFSubSetFile/getUsedFDFonts()#java/util/Set/iterator()
org/apache/fop/fonts/truetype/OTFSubSetFile/getUsedFDFonts()#java/lang/Integer/valueOf(int)
org/apache/fop/fonts/truetype/OTFSubSetFile/getUsedFDFonts()#java/util/List/contains(java.lang.Object)
org/apache/fop/fonts/truetype/OTFSubSetFile/getUsedFDFonts()#java/util/LinkedHashMap/keySet()
org/apache/fop/fonts/truetype/OTFSubSetFile/getUsedFDFonts()#java/util/List/add(java.lang.Object)
org/apache/fop/fonts/truetype/OTFSubSetFile/sortByValue(java.util.Map)#org/apache/fop/fonts/truetype/OTFSubSetFile$1/1(org.apache.fop.fonts.truetype.OTFSubSetFile)
org/apache/fop/fonts/truetype/OTFSubSetFile/sortByValue(java.util.Map)#java/util/ArrayList/ArrayList(java.util.Collection)
org/apache/fop/fonts/truetype/OTFSubSetFile/sortByValue(java.util.Map)#java/util/Iterator/hasNext()
org/apache/fop/fonts/truetype/OTFSubSetFile/sortByValue(java.util.Map)#java/util/Map$Entry/getKey()
org/apache/fop/fonts/truetype/OTFSubSetFile/sortByValue(java.util.Map)#java/util/LinkedHashMap/put(java.lang.Object,java.lang.Object)
org/apache/fop/fonts/truetype/OTFSubSetFile/sortByValue(java.util.Map)#java/util/Map$Entry/getValue()
org/apache/fop/fonts/truetype/OTFSubSetFile/sortByValue(java.util.Map)#java/util/List/iterator()
org/apache/fop/fonts/truetype/OTFSubSetFile/sortByValue(java.util.Map)#java/util/Map/entrySet()
org/apache/fop/fonts/truetype/OTFSubSetFile/sortByValue(java.util.Map)#java/util/LinkedHashMap/LinkedHashMap()
org/apache/fop/fonts/truetype/OTFSubSetFile/sortByValue(java.util.Map)#java/util/Iterator/next()
org/apache/fop/fonts/truetype/OTFSubSetFile/sortByValue(java.util.Map)#java/util/Collections/sort(java.util.List,java.util.Comparator)
org/apache/fop/fonts/truetype/OTFSubSetFile/writeStringIndex()#java/util/LinkedHashMap/get(java.lang.Object)
org/apache/fop/fonts/truetype/OTFSubSetFile/writeStringIndex()#java/util/Iterator/hasNext()
org/apache/fop/fonts/truetype/OTFSubSetFile/writeStringIndex()#java/util/LinkedHashMap/put(java.lang.Object,java.lang.Object)
org/apache/fop/fonts/truetype/OTFSubSetFile/writeStringIndex()#java/util/Map/get(java.lang.Object)
org/apache/fop/fonts/truetype/OTFSubSetFile/writeStringIndex()#org/apache/fontbox/cff/CFFStandardString/getName(int)
org/apache/fop/fonts/truetype/OTFSubSetFile/writeStringIndex()#org/apache/fop/fonts/cff/CFFDataReader$CFFIndexData/getNumObjects()
org/apache/fop/fonts/truetype/OTFSubSetFile/writeStringIndex()#java/lang/String/String(byte[])
org/apache/fop/fonts/truetype/OTFSubSetFile/writeStringIndex()#java/lang/Integer/intValue()
org/apache/fop/fonts/truetype/OTFSubSetFile/writeStringIndex()#java/util/List/size()
org/apache/fop/fonts/truetype/OTFSubSetFile/writeStringIndex()#java/util/Iterator/next()
org/apache/fop/fonts/truetype/OTFSubSetFile/writeStringIndex()#java/lang/Number/intValue()
org/apache/fop/fonts/truetype/OTFSubSetFile/writeStringIndex()#org/apache/fop/fonts/cff/CFFDataReader$CFFIndexData/getValue(int)
org/apache/fop/fonts/truetype/OTFSubSetFile/writeStringIndex()#java/util/Set/iterator()
org/apache/fop/fonts/truetype/OTFSubSetFile/writeStringIndex()#java/util/LinkedHashMap/keySet()
org/apache/fop/fonts/truetype/OTFSubSetFile/writeStringIndex()#java/util/List/add(java.lang.Object)
org/apache/fop/fonts/truetype/OTFSubSetFile/writeStringIndex()#java/lang/Integer/valueOf(int)
org/apache/fop/fonts/truetype/OTFSubSetFile/writeStringIndex()#java/util/List/get(int)
org/apache/fop/fonts/truetype/OTFSubSetFile/writeStringIndex()#java/util/LinkedHashMap/LinkedHashMap()
org/apache/fop/fonts/truetype/OTFSubSetFile/writeStringIndex()#org/apache/fop/fonts/cff/CFFDataReader$DICTEntry/getOperands()
org/apache/fop/fonts/truetype/OTFSubSetFile/preScanForSubsetIndexSize(byte[])#org/apache/fop/fonts/truetype/OTFSubSetFile$BytesNumber/BytesNumber(int,int)
org/apache/fop/fonts/truetype/OTFSubSetFile/preScanForSubsetIndexSize(byte[])#org/apache/fop/fonts/cff/CFFDataReader$CFFIndexData/getNumObjects()
org/apache/fop/fonts/truetype/OTFSubSetFile/preScanForSubsetIndexSize(byte[])#org/apache/fop/fonts/truetype/OTFSubSetFile$BytesNumber/clearNumber()
org/apache/fop/fonts/truetype/OTFSubSetFile/preScanForSubsetIndexSize(byte[])#java/util/List/add(java.lang.Object)
org/apache/fop/fonts/truetype/OTFSubSetFile/preScanForSubsetIndexSize(byte[])#java/lang/Integer/valueOf(int)
org/apache/fop/fonts/truetype/OTFSubSetFile/preScanForSubsetIndexSize(byte[])#org/apache/fop/fonts/cff/CFFDataReader$CFFIndexData/getValue(int)
org/apache/fop/fonts/truetype/OTFSubSetFile/preScanForSubsetIndexSize(byte[])#java/util/List/contains(java.lang.Object)
org/apache/fop/fonts/truetype/OTFSubSetFile/preScanForSubsetIndexSize(byte[])#org/apache/fop/fonts/truetype/OTFSubSetFile$BytesNumber/getNumBytes()
org/apache/fop/fonts/truetype/OTFSubSetFile/preScanForSubsetIndexSize(byte[])#org/apache/fop/fonts/truetype/OTFSubSetFile$BytesNumber/getNumber()
org/apache/fop/fonts/truetype/OTFSubSetFile/storeFDStrings(java.util.List)#java/lang/Integer/intValue()
org/apache/fop/fonts/truetype/OTFSubSetFile/storeFDStrings(java.util.List)#java/util/ArrayList/ArrayList()
org/apache/fop/fonts/truetype/OTFSubSetFile/storeFDStrings(java.util.List)#org/apache/fop/fonts/cff/CFFDataReader$FontDict/getByteData()
org/apache/fop/fonts/truetype/OTFSubSetFile/storeFDStrings(java.util.List)#java/util/Map/get(java.lang.Object)
org/apache/fop/fonts/truetype/OTFSubSetFile/storeFDStrings(java.util.List)#java/util/List/size()
org/apache/fop/fonts/truetype/OTFSubSetFile/storeFDStrings(java.util.List)#java/lang/Number/intValue()
org/apache/fop/fonts/truetype/OTFSubSetFile/storeFDStrings(java.util.List)#java/util/ArrayList/add(java.lang.Object)
org/apache/fop/fonts/truetype/OTFSubSetFile/storeFDStrings(java.util.List)#org/apache/fop/fonts/cff/CFFDataReader$CFFIndexData/getValue(int)
org/apache/fop/fonts/truetype/OTFSubSetFile/storeFDStrings(java.util.List)#java/util/List/add(java.lang.Object)
org/apache/fop/fonts/truetype/OTFSubSetFile/storeFDStrings(java.util.List)#org/apache/fop/fonts/cff/CFFDataReader$DICTEntry/getOperands()
org/apache/fop/fonts/truetype/OTFSubSetFile/storeFDStrings(java.util.List)#java/lang/Integer/valueOf(int)
org/apache/fop/fonts/truetype/OTFSubSetFile/storeFDStrings(java.util.List)#java/util/List/get(int)
org/apache/fop/fonts/truetype/OTFSubSetFile/writeROSEntry(org.apache.fop.fonts.cff.CFFDataReader$DICTEntry)#java/lang/Integer/intValue()
org/apache/fop/fonts/truetype/OTFSubSetFile/writeROSEntry(org.apache.fop.fonts.cff.CFFDataReader$DICTEntry)#org/apache/fop/fonts/cff/CFFDataReader$DICTEntry/getByteData()
org/apache/fop/fonts/truetype/OTFSubSetFile/writeROSEntry(org.apache.fop.fonts.cff.CFFDataReader$DICTEntry)#java/util/List/size()
org/apache/fop/fonts/truetype/OTFSubSetFile/writeROSEntry(org.apache.fop.fonts.cff.CFFDataReader$DICTEntry)#java/lang/Number/intValue()
org/apache/fop/fonts/truetype/OTFSubSetFile/writeROSEntry(org.apache.fop.fonts.cff.CFFDataReader$DICTEntry)#org/apache/fop/fonts/cff/CFFDataReader$CFFIndexData/getValue(int)
org/apache/fop/fonts/truetype/OTFSubSetFile/writeROSEntry(org.apache.fop.fonts.cff.CFFDataReader$DICTEntry)#java/util/List/add(java.lang.Object)
org/apache/fop/fonts/truetype/OTFSubSetFile/writeROSEntry(org.apache.fop.fonts.cff.CFFDataReader$DICTEntry)#org/apache/fop/fonts/cff/CFFDataReader$DICTEntry/getOperands()
org/apache/fop/fonts/truetype/OTFSubSetFile/writeROSEntry(org.apache.fop.fonts.cff.CFFDataReader$DICTEntry)#org/apache/fop/fonts/cff/CFFDataReader$DICTEntry/getOperandLengths()
org/apache/fop/fonts/truetype/OTFSubSetFile/writeROSEntry(org.apache.fop.fonts.cff.CFFDataReader$DICTEntry)#java/util/List/get(int)
org/apache/fop/fonts/truetype/OTFSubSetFile/writeROSEntry(org.apache.fop.fonts.cff.CFFDataReader$DICTEntry)#java/lang/String/getBytes()
org/apache/fop/fonts/truetype/OTFSubSetFile/writeTopDICT()#java/util/LinkedHashMap/entrySet()
org/apache/fop/fonts/truetype/OTFSubSetFile/writeTopDICT()#java/util/Arrays/asList(java.lang.Object[])
org/apache/fop/fonts/truetype/OTFSubSetFile/writeTopDICT()#java/util/Iterator/next()
org/apache/fop/fonts/truetype/OTFSubSetFile/writeTopDICT()#java/lang/String/equals(java.lang.Object)
org/apache/fop/fonts/truetype/OTFSubSetFile/writeTopDICT()#java/util/Set/iterator()
org/apache/fop/fonts/truetype/OTFSubSetFile/writeTopDICT()#java/util/List/contains(java.lang.Object)
org/apache/fop/fonts/truetype/OTFSubSetFile/writeTopDICT()#java/util/Map$Entry/getValue()
org/apache/fop/fonts/truetype/OTFSubSetFile/writeTopDICT()#java/util/Iterator/hasNext()
org/apache/fop/fonts/truetype/OTFSubSetFile/writeTopDICT()#org/apache/fop/fonts/cff/CFFDataReader$DICTEntry/getByteData()
org/apache/fop/fonts/truetype/OTFSubSetFile/writeTopDICT()#java/util/Map$Entry/getKey()
org/apache/fop/fonts/truetype/OTFSubSetFile/createCharStringData()#java/util/Iterator/hasNext()
org/apache/fop/fonts/truetype/OTFSubSetFile/createCharStringData()#java/util/List/size()
org/apache/fop/fonts/truetype/OTFSubSetFile/createCharStringData()#java/util/List/clear()
org/apache/fop/fonts/truetype/OTFSubSetFile/createCharStringData()#java/util/List/get(int)
org/apache/fop/fonts/truetype/OTFSubSetFile/createCharStringData()#org/apache/fop/fonts/cff/CFFDataReader$DICTEntry/getOperands()
org/apache/fop/fonts/truetype/OTFSubSetFile/createCharStringData()#java/lang/Integer/intValue()
org/apache/fop/fonts/truetype/OTFSubSetFile/createCharStringData()#java/util/ArrayList/ArrayList()
org/apache/fop/fonts/truetype/OTFSubSetFile/createCharStringData()#java/util/Map/get(java.lang.Object)
org/apache/fop/fonts/truetype/OTFSubSetFile/createCharStringData()#java/util/Iterator/next()
org/apache/fop/fonts/truetype/OTFSubSetFile/createCharStringData()#java/lang/Number/intValue()
org/apache/fop/fonts/truetype/OTFSubSetFile/createCharStringData()#org/apache/fop/fonts/cff/CFFDataReader$CFFIndexData/getValue(int)
org/apache/fop/fonts/truetype/OTFSubSetFile/createCharStringData()#java/util/Set/iterator()
org/apache/fop/fonts/truetype/OTFSubSetFile/createCharStringData()#java/util/LinkedHashMap/keySet()
org/apache/fop/fonts/truetype/OTFSubSetFile/createCharStringData()#java/util/List/add(java.lang.Object)
org/apache/fop/fonts/truetype/OTFSubSetFile/writeEncoding(org.apache.fontbox.cff.encoding.CFFEncoding)#java/util/LinkedHashMap/get(java.lang.Object)
org/apache/fop/fonts/truetype/OTFSubSetFile/writeEncoding(org.apache.fontbox.cff.encoding.CFFEncoding)#java/util/Iterator/hasNext()
org/apache/fop/fonts/truetype/OTFSubSetFile/writeEncoding(org.apache.fontbox.cff.encoding.CFFEncoding)#java/util/LinkedHashMap/keySet()
org/apache/fop/fonts/truetype/OTFSubSetFile/writeEncoding(org.apache.fontbox.cff.encoding.CFFEncoding)#org/apache/fop/fonts/cff/CFFDataReader$DICTEntry/getOperands()
org/apache/fop/fonts/truetype/OTFSubSetFile/writeEncoding(org.apache.fontbox.cff.encoding.CFFEncoding)#java/lang/Integer/intValue()
org/apache/fop/fonts/truetype/OTFSubSetFile/writeEncoding(org.apache.fontbox.cff.encoding.CFFEncoding)#java/util/Iterator/next()
org/apache/fop/fonts/truetype/OTFSubSetFile/writeEncoding(org.apache.fontbox.cff.encoding.CFFEncoding)#java/lang/Number/intValue()
org/apache/fop/fonts/truetype/OTFSubSetFile/writeEncoding(org.apache.fontbox.cff.encoding.CFFEncoding)#java/util/LinkedHashMap/size()
org/apache/fop/fonts/truetype/OTFSubSetFile/writeEncoding(org.apache.fontbox.cff.encoding.CFFEncoding)#java/util/Set/iterator()
org/apache/fop/fonts/truetype/OTFSubSetFile/writeEncoding(org.apache.fontbox.cff.encoding.CFFEncoding)#org/apache/fontbox/cff/encoding/CFFEncoding/getCode(int)
org/apache/fop/fonts/truetype/OTFSubSetFile/writeEncoding(org.apache.fontbox.cff.encoding.CFFEncoding)#java/lang/Integer/valueOf(int)
org/apache/fop/fonts/truetype/OTFSubSetFile/writeEncoding(org.apache.fontbox.cff.encoding.CFFEncoding)#java/util/List/get(int)
org/apache/fop/fonts/truetype/OTFSubSetFile/writeCIDDictsAndSubrs(java.util.List)#java/lang/Integer/intValue()
org/apache/fop/fonts/truetype/OTFSubSetFile/writeCIDDictsAndSubrs(java.util.List)#java/util/ArrayList/ArrayList()
org/apache/fop/fonts/truetype/OTFSubSetFile/writeCIDDictsAndSubrs(java.util.List)#org/apache/fop/fonts/cff/CFFDataReader$DICTEntry/getOffset()
org/apache/fop/fonts/truetype/OTFSubSetFile/writeCIDDictsAndSubrs(java.util.List)#org/apache/fop/fonts/cff/CFFDataReader$FontDict/getPrivateDictData()
org/apache/fop/fonts/truetype/OTFSubSetFile/writeCIDDictsAndSubrs(java.util.List)#java/util/List/size()
org/apache/fop/fonts/truetype/OTFSubSetFile/writeCIDDictsAndSubrs(java.util.List)#java/util/List/add(java.lang.Object)
org/apache/fop/fonts/truetype/OTFSubSetFile/writeCIDDictsAndSubrs(java.util.List)#java/util/HashMap/get(java.lang.Object)
org/apache/fop/fonts/truetype/OTFSubSetFile/writeCIDDictsAndSubrs(java.util.List)#org/apache/fop/fonts/cff/CFFDataReader$DICTEntry/getOperandLength()
org/apache/fop/fonts/truetype/OTFSubSetFile/writeCIDDictsAndSubrs(java.util.List)#java/lang/Integer/valueOf(int)
org/apache/fop/fonts/truetype/OTFSubSetFile/writeCIDDictsAndSubrs(java.util.List)#java/util/List/get(int)
org/apache/fop/fonts/truetype/OTFSubSetFile/writeCIDDictsAndSubrs(java.util.List)#java/util/ArrayList/get(int)
org/apache/fop/fonts/truetype/OTFSubSetFile/createCharStringDataCID()#java/lang/Integer/intValue()
org/apache/fop/fonts/truetype/OTFSubSetFile/createCharStringDataCID()#org/apache/fop/fonts/cff/CFFDataReader$Format3FDSelect/getRanges()
org/apache/fop/fonts/truetype/OTFSubSetFile/createCharStringDataCID()#java/util/Set/size()
org/apache/fop/fonts/truetype/OTFSubSetFile/createCharStringDataCID()#java/util/LinkedHashMap/put(java.lang.Object,java.lang.Object)
org/apache/fop/fonts/truetype/OTFSubSetFile/createCharStringDataCID()#java/util/List/size()
org/apache/fop/fonts/truetype/OTFSubSetFile/createCharStringDataCID()#org/apache/fop/fonts/truetype/OTFSubSetFile$FDIndexReference/getNewFDIndex()
org/apache/fop/fonts/truetype/OTFSubSetFile/createCharStringDataCID()#java/util/ArrayList/add(java.lang.Object)
org/apache/fop/fonts/truetype/OTFSubSetFile/createCharStringDataCID()#java/util/List/contains(java.lang.Object)
org/apache/fop/fonts/truetype/OTFSubSetFile/createCharStringDataCID()#java/util/ArrayList/get(int)
org/apache/fop/fonts/truetype/OTFSubSetFile/createCharStringDataCID()#java/util/LinkedHashMap/LinkedHashMap()
org/apache/fop/fonts/truetype/OTFSubSetFile/createCharStringDataCID()#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/fop/fonts/truetype/OTFSubSetFile/createCharStringDataCID()#java/util/ArrayList/ArrayList()
org/apache/fop/fonts/truetype/OTFSubSetFile/createCharStringDataCID()#java/util/LinkedHashMap/get(java.lang.Object)
org/apache/fop/fonts/truetype/OTFSubSetFile/createCharStringDataCID()#org/apache/fop/fonts/cff/CFFDataReader$Format3FDSelect/getSentinelGID()
org/apache/fop/fonts/truetype/OTFSubSetFile/createCharStringDataCID()#java/util/Iterator/hasNext()
org/apache/fop/fonts/truetype/OTFSubSetFile/createCharStringDataCID()#org/apache/fop/fonts/cff/CFFDataReader$FontDict/getLocalSubrData()
org/apache/fop/fonts/truetype/OTFSubSetFile/createCharStringDataCID()#java/util/Map/get(java.lang.Object)
org/apache/fop/fonts/truetype/OTFSubSetFile/createCharStringDataCID()#java/util/Iterator/next()
org/apache/fop/fonts/truetype/OTFSubSetFile/createCharStringDataCID()#java/util/HashMap/HashMap()
org/apache/fop/fonts/truetype/OTFSubSetFile/createCharStringDataCID()#org/apache/fop/fonts/cff/CFFDataReader$CFFIndexData/getValue(int)
org/apache/fop/fonts/truetype/OTFSubSetFile/createCharStringDataCID()#java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)
org/apache/fop/fonts/truetype/OTFSubSetFile/createCharStringDataCID()#java/util/Set/iterator()
org/apache/fop/fonts/truetype/OTFSubSetFile/createCharStringDataCID()#java/util/List/clear()
org/apache/fop/fonts/truetype/OTFSubSetFile/createCharStringDataCID()#java/util/LinkedHashMap/keySet()
org/apache/fop/fonts/truetype/OTFSubSetFile/createCharStringDataCID()#java/util/List/add(java.lang.Object)
org/apache/fop/fonts/truetype/OTFSubSetFile/createCharStringDataCID()#java/util/List/get(int)
org/apache/fop/fonts/truetype/OTFSubSetFile/createCharStringDataCID()#java/util/Set/toArray(java.lang.Object[])
org/apache/fop/fonts/truetype/OTFSubSetFile/createCharStringDataCID()#java/lang/Integer/valueOf(int)
org/apache/fop/fonts/truetype/OTFSubSetFile/createCharStringDataCID()#java/util/List/indexOf(java.lang.Object)
org/apache/fop/fonts/truetype/OTFSubSetFile/createCharStringDataCID()#org/apache/fop/fonts/truetype/OTFSubSetFile$FDIndexReference/FDIndexReference(org.apache.fop.fonts.truetype.OTFSubSetFile,int,int)
org/apache/fop/render/afp/AFPDocumentHandler/handleExtensionObject(java.lang.Object)#org/apache/fop/render/afp/extensions/AFPPageOverlay/getName()
org/apache/fop/render/afp/AFPDocumentHandler/handleExtensionObject(java.lang.Object)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/fop/render/afp/AFPDocumentHandler/handleExtensionObject(java.lang.Object)#org/apache/fop/render/afp/extensions/AFPPageSegmentElement$AFPPageSegmentSetup/getResourceSrc()
org/apache/fop/render/afp/AFPDocumentHandler/handleExtensionObject(java.lang.Object)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/render/afp/AFPDocumentHandler/handleExtensionObject(java.lang.Object)#org/apache/fop/render/afp/extensions/AFPIncludeFormMap/getName()
org/apache/fop/render/afp/AFPDocumentHandler/handleExtensionObject(java.lang.Object)#org/apache/fop/render/afp/AFPDocumentHandler/getUserAgent()
org/apache/fop/render/afp/AFPDocumentHandler/handleExtensionObject(java.lang.Object)#org/apache/fop/render/afp/extensions/AFPInvokeMediumMap/getName()
org/apache/fop/render/afp/AFPDocumentHandler/handleExtensionObject(java.lang.Object)#org/apache/fop/render/afp/extensions/AFPPageSegmentElement$AFPPageSegmentSetup/getName()
org/apache/fop/render/afp/AFPDocumentHandler/handleExtensionObject(java.lang.Object)#java/util/List/add(java.lang.Object)
org/apache/fop/render/afp/AFPDocumentHandler/handleExtensionObject(java.lang.Object)#org/apache/fop/render/afp/extensions/AFPPageSetup/getElementName()
org/apache/fop/render/afp/AFPDocumentHandler/handleExtensionObject(java.lang.Object)#org/apache/fop/render/afp/extensions/AFPPageSetup/getName()
org/apache/fop/render/afp/AFPDocumentHandler/handleExtensionObject(java.lang.Object)#java/lang/String/equals(java.lang.Object)
org/apache/fop/render/afp/AFPDocumentHandler/handleExtensionObject(java.lang.Object)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/render/afp/AFPDocumentHandler/handleExtensionObject(java.lang.Object)#org/apache/fop/render/afp/AFPDocumentHandler$Location/ordinal()
org/apache/fop/render/afp/AFPDocumentHandler/handleExtensionObject(java.lang.Object)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/fop/render/afp/AFPDocumentHandler/handleExtensionObject(java.lang.Object)#java/lang/StringBuilder/toString()
org/apache/fop/render/afp/AFPDocumentHandler/handleExtensionObject(java.lang.Object)#org/apache/fop/render/afp/extensions/AFPPageSegmentElement$AFPPageSegmentSetup/getValue()
org/apache/fop/render/afp/AFPDocumentHandler/endPageSequence()#java/util/Iterator/remove()
org/apache/fop/render/afp/AFPDocumentHandler/endPageSequence()#java/util/Iterator/hasNext()
org/apache/fop/render/afp/AFPDocumentHandler/endPageSequence()#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/render/afp/AFPDocumentHandler/endPageSequence()#java/util/Iterator/next()
org/apache/fop/render/afp/AFPDocumentHandler/endPageSequence()#java/lang/StringBuilder/StringBuilder()
org/apache/fop/render/afp/AFPDocumentHandler/endPageSequence()#java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)
org/apache/fop/render/afp/AFPDocumentHandler/endPageSequence()#java/lang/StringBuilder/append(java.lang.Object)
org/apache/fop/render/afp/AFPDocumentHandler/endPageSequence()#java/lang/StringBuilder/toString()
org/apache/fop/render/afp/AFPDocumentHandler/endPageSequence()#java/lang/String/equals(java.lang.Object)
org/apache/fop/render/afp/AFPDocumentHandler/endPageSequence()#java/util/List/iterator()
org/apache/fop/render/afp/AFPDocumentHandler/endPageSequence()#org/apache/fop/render/afp/extensions/AFPPageSetup/getElementName()
org/apache/fop/fo/FOText/TextCharIterator/remove()#java/nio/CharBuffer/position(int)
org/apache/fop/fo/FOText/TextCharIterator/remove()#java/nio/CharBuffer/limit()
org/apache/fop/fo/FOText/TextCharIterator/remove()#java/nio/CharBuffer/hasRemaining()
org/apache/fop/fo/FOText/TextCharIterator/remove()#java/lang/IllegalStateException/IllegalStateException()
org/apache/fop/fo/FOText/TextCharIterator/remove()#java/nio/CharBuffer/put(java.nio.CharBuffer)
org/apache/fop/fo/FOText/TextCharIterator/remove()#java/nio/CharBuffer/limit(int)
org/apache/fop/fo/FOText/TextCharIterator/remove()#java/nio/CharBuffer/mark()
org/apache/fop/fo/FOText/TextCharIterator/remove()#java/nio/CharBuffer/reset()
org/apache/fop/fo/FOText/TextCharIterator/remove()#java/nio/CharBuffer/slice()
org/apache/fop/render/pdf/ImageRawJPEGAdapter/outputContents(java.io.OutputStream)#org/apache/xmlgraphics/image/loader/impl/JPEGFile/JPEGFile(java.io.InputStream)
org/apache/fop/render/pdf/ImageRawJPEGAdapter/outputContents(java.io.OutputStream)#java/io/InputStream/reset()
org/apache/fop/render/pdf/ImageRawJPEGAdapter/outputContents(java.io.OutputStream)#java/io/OutputStream/write(int)
org/apache/fop/render/pdf/ImageRawJPEGAdapter/outputContents(java.io.OutputStream)#java/lang/String/equals(java.lang.Object)
org/apache/fop/render/pdf/ImageRawJPEGAdapter/outputContents(java.io.OutputStream)#java/io/DataInput/readFully(byte[],int,int)
org/apache/fop/render/pdf/ImageRawJPEGAdapter/outputContents(java.io.OutputStream)#java/io/OutputStream/write(byte[],int,int)
org/apache/fop/render/pdf/ImageRawJPEGAdapter/outputContents(java.io.OutputStream)#org/apache/xmlgraphics/image/loader/Image/getICCProfile()
org/apache/fop/render/pdf/ImageRawJPEGAdapter/outputContents(java.io.OutputStream)#org/apache/xmlgraphics/image/loader/util/ImageUtil/decorateMarkSupported(java.io.InputStream)
org/apache/fop/render/pdf/ImageRawJPEGAdapter/outputContents(java.io.OutputStream)#org/apache/commons/io/IOUtils/copy(java.io.InputStream,java.io.OutputStream)
org/apache/fop/render/pdf/ImageRawJPEGAdapter/outputContents(java.io.OutputStream)#org/apache/xmlgraphics/image/loader/impl/JPEGFile/getDataInput()
org/apache/fop/render/pdf/ImageRawJPEGAdapter/outputContents(java.io.OutputStream)#java/io/IOException/IOException(java.lang.String)
org/apache/fop/render/pdf/ImageRawJPEGAdapter/outputContents(java.io.OutputStream)#org/apache/commons/io/IOUtils/closeQuietly(java.io.InputStream)
org/apache/fop/render/pdf/ImageRawJPEGAdapter/outputContents(java.io.OutputStream)#java/io/InputStream/mark(int)
org/apache/fop/render/pdf/ImageRawJPEGAdapter/outputContents(java.io.OutputStream)#java/lang/String/String(byte[],java.lang.String)
org/apache/fop/render/pdf/ImageRawJPEGAdapter/outputContents(java.io.OutputStream)#org/apache/xmlgraphics/image/loader/impl/ImageRawJPEG/createInputStream()
org/apache/fop/render/pdf/ImageRawJPEGAdapter/outputContents(java.io.OutputStream)#java/io/DataInput/skipBytes(int)
org/apache/fop/render/pdf/ImageRawJPEGAdapter/outputContents(java.io.OutputStream)#org/apache/xmlgraphics/image/loader/impl/JPEGFile/skipCurrentMarkerSegment()
org/apache/fop/render/pdf/ImageRawJPEGAdapter/outputContents(java.io.OutputStream)#java/io/DataInput/readFully(byte[])
org/apache/fop/render/pdf/ImageRawJPEGAdapter/outputContents(java.io.OutputStream)#java/lang/Math/min(int,int)
org/apache/fop/render/pdf/ImageRawJPEGAdapter/outputContents(java.io.OutputStream)#org/apache/xmlgraphics/image/loader/impl/JPEGFile/readMarkerSegment()
org/apache/fop/render/pdf/ImageRawJPEGAdapter/outputContents(java.io.OutputStream)#org/apache/xmlgraphics/image/loader/impl/JPEGFile/readSegmentLength()
org/apache/fop/complexscripts/fonts/GlyphSubstitutionTable/ChainedContextualSubtableFormat2/populate(java.util.List)#java/lang/Integer/intValue()
org/apache/fop/complexscripts/fonts/GlyphSubstitutionTable/ChainedContextualSubtableFormat2/populate(java.util.List)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/complexscripts/fonts/GlyphSubstitutionTable/ChainedContextualSubtableFormat2/populate(java.util.List)#java/lang/StringBuilder/append(int)
org/apache/fop/complexscripts/fonts/GlyphSubstitutionTable/ChainedContextualSubtableFormat2/populate(java.util.List)#java/util/List/size()
org/apache/fop/complexscripts/fonts/GlyphSubstitutionTable/ChainedContextualSubtableFormat2/populate(java.util.List)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/complexscripts/fonts/GlyphSubstitutionTable/ChainedContextualSubtableFormat2/populate(java.util.List)#java/util/List/get(int)
org/apache/fop/complexscripts/fonts/GlyphSubstitutionTable/ChainedContextualSubtableFormat2/populate(java.util.List)#java/lang/StringBuilder/toString()
org/apache/fop/complexscripts/fonts/GlyphSubstitutionTable/ChainedContextualSubtableFormat2/populate(java.util.List)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/fop/complexscripts/fonts/GlyphSubstitutionTable/ChainedContextualSubtableFormat2/populate(java.util.List)#java/lang/Object/getClass()
org/apache/fop/pdf/PDFText/escapeText(java.lang.String,boolean)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/apache/fop/pdf/PDFText/escapeText(java.lang.String,boolean)#java/lang/StringBuffer/StringBuffer(int)
org/apache/fop/pdf/PDFText/escapeText(java.lang.String,boolean)#java/lang/String/charAt(int)
org/apache/fop/pdf/PDFText/escapeText(java.lang.String,boolean)#java/lang/String/length()
org/apache/fop/pdf/PDFText/escapeText(java.lang.String,boolean)#java/lang/StringBuffer/toString()
org/apache/fop/pdf/PDFText/escapeText(java.lang.String,boolean)#org/apache/avalon/framework/CascadingRuntimeException/CascadingRuntimeException(java.lang.String,java.lang.Throwable)
org/apache/fop/pdf/PDFText/escapeText(java.lang.String,boolean)#java/lang/String/getBytes(java.lang.String)
org/apache/fop/pdf/PDFText/escapeText(java.lang.String,boolean)#java/lang/StringBuffer/append(java.lang.String)
org/apache/fop/pdf/PDFText/escapeText(java.lang.String,boolean)#java/lang/Integer/toOctalString(int)
org/apache/fop/pdf/xref/CrossReferenceStream/output(java.io.OutputStream)#java/util/Iterator/hasNext()
org/apache/fop/pdf/xref/CrossReferenceStream/output(java.io.OutputStream)#java/util/List/iterator()
org/apache/fop/pdf/xref/CrossReferenceStream/output(java.io.OutputStream)#java/io/ByteArrayOutputStream/ByteArrayOutputStream()
org/apache/fop/pdf/xref/CrossReferenceStream/output(java.io.OutputStream)#java/lang/AssertionError/AssertionError()
org/apache/fop/pdf/xref/CrossReferenceStream/output(java.io.OutputStream)#java/io/DataOutputStream/close()
org/apache/fop/pdf/xref/CrossReferenceStream/output(java.io.OutputStream)#org/apache/fop/pdf/PDFStream/setObjectNumber(org.apache.fop.pdf.PDFObjectNumber)
org/apache/fop/pdf/xref/CrossReferenceStream/output(java.io.OutputStream)#org/apache/fop/pdf/PDFStream/setDocument(org.apache.fop.pdf.PDFDocument)
org/apache/fop/pdf/xref/CrossReferenceStream/output(java.io.OutputStream)#org/apache/fop/pdf/xref/CrossReferenceStream$1/1(org.apache.fop.pdf.xref.CrossReferenceStream,org.apache.fop.pdf.PDFDictionary,boolean)
org/apache/fop/pdf/xref/CrossReferenceStream/output(java.io.OutputStream)#java/util/Iterator/next()
org/apache/fop/pdf/xref/CrossReferenceStream/output(java.io.OutputStream)#java/io/DataOutputStream/DataOutputStream(java.io.OutputStream)
org/apache/fop/pdf/xref/CrossReferenceStream/output(java.io.OutputStream)#java/io/ByteArrayOutputStream/toByteArray()
org/apache/fop/area/AreaTreeParser/Handler/RegionViewportMaker/startElement(org.xml.sax.Attributes)#org/apache/fop/area/AreaTreeParser$Handler/access$4500()
org/apache/fop/area/AreaTreeParser/Handler/RegionViewportMaker/startElement(org.xml.sax.Attributes)#java/util/Stack/push(java.lang.Object)
org/apache/fop/area/AreaTreeParser/Handler/RegionViewportMaker/startElement(org.xml.sax.Attributes)#org/apache/fop/area/AreaTreeParser$Handler/access$4300(org.apache.fop.area.AreaTreeParser$Handler,org.xml.sax.Attributes,org.apache.fop.area.Area,java.lang.Object[])
org/apache/fop/area/AreaTreeParser/Handler/RegionViewportMaker/startElement(org.xml.sax.Attributes)#org/apache/fop/area/AreaTreeParser$Handler/access$4100(org.apache.fop.area.AreaTreeParser$Handler,org.xml.sax.Attributes,org.apache.fop.area.Area)
org/apache/fop/area/AreaTreeParser/Handler/RegionViewportMaker/startElement(org.xml.sax.Attributes)#org/apache/fop/area/AreaTreeParser$Handler/access$4200()
org/apache/fop/area/AreaTreeParser/Handler/RegionViewportMaker/startElement(org.xml.sax.Attributes)#org/apache/fop/area/AreaTreeParser$Handler/access$4400()
org/apache/fop/area/AreaTreeParser/Handler/RegionViewportMaker/startElement(org.xml.sax.Attributes)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/apache/fop/area/AreaTreeParser/Handler/RegionViewportMaker/startElement(org.xml.sax.Attributes)#org/apache/fop/area/AreaTreeParser$Handler/access$3500(org.xml.sax.Attributes,org.apache.fop.area.AreaTreeObject)
org/apache/fop/area/AreaTreeParser/Handler/RegionViewportMaker/startElement(org.xml.sax.Attributes)#org/apache/fop/area/AreaTreeParser$Handler/access$4000(org.apache.fop.area.AreaTreeParser$Handler)
org/apache/fop/area/AreaTreeParser/Handler/RegionViewportMaker/startElement(org.xml.sax.Attributes)#org/apache/fop/area/AreaTreeParser$Handler/access$3600(org.apache.fop.area.AreaTreeParser$Handler)
org/apache/fop/render/intermediate/BorderPainter/clipBackground(java.awt.Rectangle,org.apache.fop.traits.BorderProps,org.apache.fop.traits.BorderProps,org.apache.fop.traits.BorderProps,org.apache.fop.traits.BorderProps)#org/apache/fop/render/intermediate/BorderPainter$PathPainter/lineHorizTo(int)
org/apache/fop/render/intermediate/BorderPainter/clipBackground(java.awt.Rectangle,org.apache.fop.traits.BorderProps,org.apache.fop.traits.BorderProps,org.apache.fop.traits.BorderProps,org.apache.fop.traits.BorderProps)#org/apache/fop/render/intermediate/BorderPainter$Corner/access$400(org.apache.fop.render.intermediate.BorderPainter$Corner)
org/apache/fop/render/intermediate/BorderPainter/clipBackground(java.awt.Rectangle,org.apache.fop.traits.BorderProps,org.apache.fop.traits.BorderProps,org.apache.fop.traits.BorderProps,org.apache.fop.traits.BorderProps)#org/apache/fop/render/intermediate/BorderPainter$PathPainter/lineVertTo(int)
org/apache/fop/render/intermediate/BorderPainter/clipBackground(java.awt.Rectangle,org.apache.fop.traits.BorderProps,org.apache.fop.traits.BorderProps,org.apache.fop.traits.BorderProps,org.apache.fop.traits.BorderProps)#org/apache/fop/render/intermediate/BorderPainter$PathPainter/PathPainter(org.apache.fop.render.intermediate.BorderPainter,int,int)
org/apache/fop/render/intermediate/BorderPainter/clipBackground(java.awt.Rectangle,org.apache.fop.traits.BorderProps,org.apache.fop.traits.BorderProps,org.apache.fop.traits.BorderProps,org.apache.fop.traits.BorderProps)#org/apache/fop/render/intermediate/BorderPainter$Corner/createEndAfterCorner(org.apache.fop.render.intermediate.BorderPainter$BorderSegment,org.apache.fop.render.intermediate.BorderPainter$BorderSegment,double)
org/apache/fop/render/intermediate/BorderPainter/clipBackground(java.awt.Rectangle,org.apache.fop.traits.BorderProps,org.apache.fop.traits.BorderProps,org.apache.fop.traits.BorderProps,org.apache.fop.traits.BorderProps)#org/apache/fop/render/intermediate/BorderPainter$Corner/createAfterStartCorner(org.apache.fop.render.intermediate.BorderPainter$BorderSegment,org.apache.fop.render.intermediate.BorderPainter$BorderSegment,double)
org/apache/fop/render/intermediate/BorderPainter/clipBackground(java.awt.Rectangle,org.apache.fop.traits.BorderProps,org.apache.fop.traits.BorderProps,org.apache.fop.traits.BorderProps,org.apache.fop.traits.BorderProps)#org/apache/fop/render/intermediate/BorderPainter$Corner/createBeforeEndCorner(org.apache.fop.render.intermediate.BorderPainter$BorderSegment,org.apache.fop.render.intermediate.BorderPainter$BorderSegment,double)
org/apache/fop/render/intermediate/BorderPainter/clipBackground(java.awt.Rectangle,org.apache.fop.traits.BorderProps,org.apache.fop.traits.BorderProps,org.apache.fop.traits.BorderProps,org.apache.fop.traits.BorderProps)#org/apache/fop/render/intermediate/BorderPainter$Corner/createStartBeforeCorner(org.apache.fop.render.intermediate.BorderPainter$BorderSegment,org.apache.fop.render.intermediate.BorderPainter$BorderSegment,double)
org/apache/fop/render/intermediate/BorderPainter/clipBackground(java.awt.Rectangle,org.apache.fop.traits.BorderProps,org.apache.fop.traits.BorderProps,org.apache.fop.traits.BorderProps,org.apache.fop.traits.BorderProps)#org/apache/fop/render/intermediate/BorderPainter$Corner/access$300(org.apache.fop.render.intermediate.BorderPainter$Corner)
org/apache/fop/render/intermediate/BorderPainter/clipBackground(java.awt.Rectangle,org.apache.fop.traits.BorderProps,org.apache.fop.traits.BorderProps,org.apache.fop.traits.BorderProps,org.apache.fop.traits.BorderProps)#org/apache/fop/render/intermediate/BorderPainter$PathPainter/drawCorner(org.apache.fop.render.intermediate.BorderPainter$Corner)
org/apache/fop/render/intermediate/BorderPainter/clipBackground(java.awt.Rectangle,org.apache.fop.traits.BorderProps,org.apache.fop.traits.BorderProps,org.apache.fop.traits.BorderProps,org.apache.fop.traits.BorderProps)#org/apache/fop/render/intermediate/BorderPainter$BorderSegment/getWidth()
org/apache/fop/pdf/PDFICCBasedColorSpace/setupsRGBColorProfile(org.apache.fop.pdf.PDFDocument)#org/apache/xmlgraphics/java2d/color/profile/ColorProfileUtil/getICC_Profile(int)
org/apache/fop/pdf/PDFICCBasedColorSpace/setupsRGBColorProfile(org.apache.fop.pdf.PDFDocument)#org/apache/commons/io/IOUtils/closeQuietly(java.io.InputStream)
org/apache/fop/pdf/PDFICCBasedColorSpace/setupsRGBColorProfile(org.apache.fop.pdf.PDFDocument)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/pdf/PDFICCBasedColorSpace/setupsRGBColorProfile(org.apache.fop.pdf.PDFDocument)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/pdf/PDFICCBasedColorSpace/setupsRGBColorProfile(org.apache.fop.pdf.PDFDocument)#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/apache/fop/pdf/PDFICCBasedColorSpace/setupsRGBColorProfile(org.apache.fop.pdf.PDFDocument)#java/lang/StringBuilder/toString()
org/apache/fop/pdf/PDFICCBasedColorSpace/setupsRGBColorProfile(org.apache.fop.pdf.PDFDocument)#org/apache/xmlgraphics/java2d/color/profile/ColorProfileUtil/getICC_Profile(java.io.InputStream)
org/apache/fop/pdf/PDFICCBasedColorSpace/setupsRGBColorProfile(org.apache.fop.pdf.PDFDocument)#java/lang/Class/getResourceAsStream(java.lang.String)
org/apache/fop/pdf/PDFICCBasedColorSpace/setupsRGBColorProfile(org.apache.fop.pdf.PDFDocument)#java/io/IOException/getMessage()
org/apache/fop/render/intermediate/extensions/URIAction/toSAX(org.xml.sax.ContentHandler)#org/apache/fop/render/intermediate/extensions/URIAction/hasID()
org/apache/fop/render/intermediate/extensions/URIAction/toSAX(org.xml.sax.ContentHandler)#org/apache/xmlgraphics/util/QName/getNamespaceURI()
org/apache/fop/render/intermediate/extensions/URIAction/toSAX(org.xml.sax.ContentHandler)#org/xml/sax/ContentHandler/endElement(java.lang.String,java.lang.String,java.lang.String)
org/apache/fop/render/intermediate/extensions/URIAction/toSAX(org.xml.sax.ContentHandler)#org/xml/sax/helpers/AttributesImpl/addAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
org/apache/fop/render/intermediate/extensions/URIAction/toSAX(org.xml.sax.ContentHandler)#org/xml/sax/helpers/AttributesImpl/AttributesImpl()
org/apache/fop/render/intermediate/extensions/URIAction/toSAX(org.xml.sax.ContentHandler)#org/apache/fop/render/intermediate/extensions/URIAction/getID()
org/apache/fop/render/intermediate/extensions/URIAction/toSAX(org.xml.sax.ContentHandler)#org/apache/xmlgraphics/util/QName/getLocalName()
org/apache/fop/render/intermediate/extensions/URIAction/toSAX(org.xml.sax.ContentHandler)#org/xml/sax/ContentHandler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)
org/apache/fop/render/intermediate/extensions/URIAction/toSAX(org.xml.sax.ContentHandler)#org/apache/xmlgraphics/util/QName/getQName()
org/apache/fop/render/ps/PSImageHandlerEPS/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/xmlgraphics/ps/PSImageUtils/renderEPS(java.io.InputStream,java.lang.String,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.apache.xmlgraphics.ps.PSGenerator)
org/apache/fop/render/ps/PSImageHandlerEPS/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/commons/io/IOUtils/closeQuietly(java.io.InputStream)
org/apache/fop/render/ps/PSImageHandlerEPS/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/xmlgraphics/image/loader/ImageSize/getDimensionPt()
org/apache/fop/render/ps/PSImageHandlerEPS/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/xmlgraphics/image/loader/Image/getInfo()
org/apache/fop/render/ps/PSImageHandlerEPS/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/xmlgraphics/image/loader/ImageInfo/getSize()
org/apache/fop/render/ps/PSImageHandlerEPS/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/xmlgraphics/image/loader/impl/ImageRawEPS/getBoundingBox()
org/apache/fop/render/ps/PSImageHandlerEPS/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/awt/geom/Rectangle2D$Float/Float(float,float,float,float)
org/apache/fop/render/ps/PSImageHandlerEPS/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/awt/Rectangle/getHeight()
org/apache/fop/render/ps/PSImageHandlerEPS/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/awt/geom/Rectangle2D$Double/Double()
org/apache/fop/render/ps/PSImageHandlerEPS/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/awt/geom/Point2D$Double/Double()
org/apache/fop/render/ps/PSImageHandlerEPS/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/awt/Rectangle/getY()
org/apache/fop/render/ps/PSImageHandlerEPS/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/xmlgraphics/image/loader/impl/ImageRawEPS/createInputStream()
org/apache/fop/render/ps/PSImageHandlerEPS/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/awt/Rectangle/getWidth()
org/apache/fop/render/ps/PSImageHandlerEPS/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/xmlgraphics/image/loader/ImageInfo/getOriginalURI()
org/apache/fop/render/ps/PSImageHandlerEPS/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/awt/Rectangle/getX()
org/apache/fop/render/ps/PSImageHandlerEPS/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/awt/geom/Rectangle2D/setFrame(java.awt.geom.Point2D,java.awt.geom.Dimension2D)
org/apache/fop/fonts/FontSetup/addConfiguredFonts(org.apache.fop.fonts.FontInfo,java.util.List,int,org.apache.fop.apps.io.InternalResourceResolver,boolean)#java/util/Iterator/hasNext()
org/apache/fop/fonts/FontSetup/addConfiguredFonts(org.apache.fop.fonts.FontInfo,java.util.List,int,org.apache.fop.apps.io.InternalResourceResolver,boolean)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/fonts/FontSetup/addConfiguredFonts(org.apache.fop.fonts.FontInfo,java.util.List,int,org.apache.fop.apps.io.InternalResourceResolver,boolean)#java/lang/StringBuilder/append(int)
org/apache/fop/fonts/FontSetup/addConfiguredFonts(org.apache.fop.fonts.FontInfo,java.util.List,int,org.apache.fop.apps.io.InternalResourceResolver,boolean)#java/util/Iterator/next()
org/apache/fop/fonts/FontSetup/addConfiguredFonts(org.apache.fop.fonts.FontInfo,java.util.List,int,org.apache.fop.apps.io.InternalResourceResolver,boolean)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/fonts/FontSetup/addConfiguredFonts(org.apache.fop.fonts.FontInfo,java.util.List,int,org.apache.fop.apps.io.InternalResourceResolver,boolean)#java/util/List/get(int)
org/apache/fop/fonts/FontSetup/addConfiguredFonts(org.apache.fop.fonts.FontInfo,java.util.List,int,org.apache.fop.apps.io.InternalResourceResolver,boolean)#java/util/List/iterator()
org/apache/fop/fonts/FontSetup/addConfiguredFonts(org.apache.fop.fonts.FontInfo,java.util.List,int,org.apache.fop.apps.io.InternalResourceResolver,boolean)#java/lang/AssertionError/AssertionError()
org/apache/fop/fonts/FontSetup/addConfiguredFonts(org.apache.fop.fonts.FontInfo,java.util.List,int,org.apache.fop.apps.io.InternalResourceResolver,boolean)#java/lang/StringBuilder/toString()
org/apache/fop/fonts/FontSetup/addConfiguredFonts(org.apache.fop.fonts.FontInfo,java.util.List,int,org.apache.fop.apps.io.InternalResourceResolver,boolean)#java/util/List/size()
org/apache/fop/pdf/PDFInfo/toPDF()#java/util/Iterator/hasNext()
org/apache/fop/pdf/PDFInfo/toPDF()#java/io/ByteArrayOutputStream/ByteArrayOutputStream(int)
org/apache/fop/pdf/PDFInfo/toPDF()#java/util/Set/iterator()
org/apache/fop/pdf/PDFInfo/toPDF()#java/io/ByteArrayOutputStream/write(byte[])
org/apache/fop/pdf/PDFInfo/toPDF()#java/io/ByteArrayOutputStream/toByteArray()
org/apache/fop/pdf/PDFInfo/toPDF()#java/util/Map$Entry/getValue()
org/apache/fop/pdf/PDFInfo/toPDF()#org/apache/fop/pdf/PDFInfo/getDocumentSafely()
org/apache/fop/pdf/PDFInfo/toPDF()#java/util/Map/entrySet()
org/apache/fop/pdf/PDFInfo/toPDF()#org/apache/fop/pdf/PDFInfo/encodeText(java.lang.String)
org/apache/fop/pdf/PDFInfo/toPDF()#java/util/Map$Entry/getKey()
org/apache/fop/pdf/PDFInfo/toPDF()#org/apache/fop/pdf/PDFInfo/encodeString(java.lang.String)
org/apache/fop/pdf/PDFInfo/toPDF()#java/lang/String/length()
org/apache/fop/pdf/PDFInfo/toPDF()#java/util/Iterator/next()
org/apache/fop/pdf/PDFInfo/toPDF()#java/util/Date/Date()
org/apache/fop/pdf/PDFInfo/toPDF()#org/apache/fop/pdf/PDFXMode/getName()
org/apache/fop/pdf/PDFInfo/toPDF()#org/apache/fop/pdf/PDFInfo/encode(java.lang.String)
org/apache/fop/pdf/PDFInfo/toPDF()#org/apache/commons/logging/Log/error(java.lang.Object,java.lang.Throwable)
org/apache/fop/layoutmgr/inline/LeaderLayoutManager/getLeaderInlineArea(org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/area/inline/Space/setIPD(int)
org/apache/fop/layoutmgr/inline/LeaderLayoutManager/getLeaderInlineArea(org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/area/inline/Space/setBidiLevel(int)
org/apache/fop/layoutmgr/inline/LeaderLayoutManager/getLeaderInlineArea(org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/area/inline/InlineArea/setBidiLevel(int)
org/apache/fop/layoutmgr/inline/LeaderLayoutManager/getLeaderInlineArea(org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/fo/flow/Leader/getChildNodes()
org/apache/fop/layoutmgr/inline/LeaderLayoutManager/getLeaderInlineArea(org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/layoutmgr/inline/LeaderLayoutManager/addChildLM(org.apache.fop.layoutmgr.LayoutManager)
org/apache/fop/layoutmgr/inline/LeaderLayoutManager/getLeaderInlineArea(org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/fo/flow/Leader/getId()
org/apache/fop/layoutmgr/inline/LeaderLayoutManager/getLeaderInlineArea(org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/area/inline/TextArea/setBaselineOffset(int)
org/apache/fop/layoutmgr/inline/LeaderLayoutManager/getLeaderInlineArea(org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/area/inline/TextArea/setBPD(int)
org/apache/fop/layoutmgr/inline/LeaderLayoutManager/getLeaderInlineArea(org.apache.fop.layoutmgr.LayoutContext)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/layoutmgr/inline/LeaderLayoutManager/getLeaderInlineArea(org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/area/inline/InlineArea/addTrait(java.lang.Integer,java.lang.Object)
org/apache/fop/layoutmgr/inline/LeaderLayoutManager/getLeaderInlineArea(org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/fo/flow/Leader/getBidiLevel()
org/apache/fop/layoutmgr/inline/LeaderLayoutManager/getLeaderInlineArea(org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/fo/FObj/getLocator()
org/apache/fop/layoutmgr/inline/LeaderLayoutManager/getLeaderInlineArea(org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/area/inline/InlineArea/setBPD(int)
org/apache/fop/layoutmgr/inline/LeaderLayoutManager/getLeaderInlineArea(org.apache.fop.layoutmgr.LayoutContext)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/layoutmgr/inline/LeaderLayoutManager/getLeaderInlineArea(org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/layoutmgr/inline/InlineLevelEventProducer$Provider/get(org.apache.fop.events.EventBroadcaster)
org/apache/fop/layoutmgr/inline/LeaderLayoutManager/getLeaderInlineArea(org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/fo/flow/Leader/getColor()
org/apache/fop/layoutmgr/inline/LeaderLayoutManager/getLeaderInlineArea(org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/area/inline/TextArea/addTrait(java.lang.Integer,java.lang.Object)
org/apache/fop/layoutmgr/inline/LeaderLayoutManager/getLeaderInlineArea(org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/fo/FObj/getUserAgent()
org/apache/fop/layoutmgr/inline/LeaderLayoutManager/getLeaderInlineArea(org.apache.fop.layoutmgr.LayoutContext)#java/lang/StringBuilder/append(char)
org/apache/fop/layoutmgr/inline/LeaderLayoutManager/getLeaderInlineArea(org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/layoutmgr/inline/LeaderLayoutManager/getFObj()
org/apache/fop/layoutmgr/inline/LeaderLayoutManager/getLeaderInlineArea(org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/area/inline/FilledArea/setBPD(int)
org/apache/fop/layoutmgr/inline/LeaderLayoutManager/getLeaderInlineArea(org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/area/inline/TextArea/getBPD()
org/apache/fop/layoutmgr/inline/LeaderLayoutManager/getLeaderInlineArea(org.apache.fop.layoutmgr.LayoutContext)#java/lang/StringBuilder/toString()
org/apache/fop/layoutmgr/inline/LeaderLayoutManager/getLeaderInlineArea(org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/fo/flow/Leader/getBidiLevelRecursive()
org/apache/fop/layoutmgr/inline/LeaderLayoutManager/getLeaderInlineArea(org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/area/inline/TextArea/setIPD(int)
org/apache/fop/layoutmgr/inline/LeaderLayoutManager/getLeaderInlineArea(org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/area/inline/FilledArea/addChildArea(org.apache.fop.area.Area)
org/apache/fop/area/LineArea/finish()#org/apache/fop/area/LineArea$LineAdjustingInfo/access$100(org.apache.fop.area.LineArea$LineAdjustingInfo)
org/apache/fop/area/LineArea/finish()#org/apache/fop/area/LineArea$LineAdjustingInfo/access$200(org.apache.fop.area.LineArea$LineAdjustingInfo)
org/apache/fop/area/LineArea/finish()#org/apache/fop/area/LineArea$LineAdjustingInfo/access$400(org.apache.fop.area.LineArea$LineAdjustingInfo)
org/apache/fop/area/LineArea/finish()#org/apache/fop/area/LineArea$LineAdjustingInfo/access$500(org.apache.fop.area.LineArea$LineAdjustingInfo)
org/apache/fop/area/LineArea/finish()#org/apache/fop/area/LineArea$LineAdjustingInfo/access$600(org.apache.fop.area.LineArea$LineAdjustingInfo)
org/apache/fop/area/LineArea/finish()#org/apache/fop/area/LineArea$LineAdjustingInfo/access$202(org.apache.fop.area.LineArea$LineAdjustingInfo,double)
org/apache/fop/area/LineArea/finish()#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/area/LineArea/finish()#org/apache/fop/area/LineArea$LineAdjustingInfo/access$402(org.apache.fop.area.LineArea$LineAdjustingInfo,boolean)
org/apache/fop/area/LineArea/finish()#java/util/List/get(int)
org/apache/fop/area/LineArea/finish()#java/lang/StringBuilder/toString()
org/apache/fop/area/LineArea/finish()#java/util/List/size()
org/apache/fop/area/LineArea/finish()#java/lang/StringBuilder/StringBuilder()
org/apache/fop/area/LineArea/finish()#org/apache/commons/logging/Log/trace(java.lang.Object)
org/apache/fop/area/LineArea/finish()#java/lang/StringBuilder/append(java.lang.Object)
org/apache/fop/area/LineArea/finish()#org/apache/commons/logging/Log/isTraceEnabled()
org/apache/fop/hyphenation/PatternParser/createParser()#javax/xml/parsers/SAXParserFactory/setNamespaceAware(boolean)
org/apache/fop/hyphenation/PatternParser/createParser()#javax/xml/parsers/SAXParserFactory/newSAXParser()
org/apache/fop/hyphenation/PatternParser/createParser()#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/hyphenation/PatternParser/createParser()#javax/xml/parsers/SAXParserFactory/newInstance()
org/apache/fop/hyphenation/PatternParser/createParser()#javax/xml/parsers/SAXParser/getXMLReader()
org/apache/fop/hyphenation/PatternParser/createParser()#java/lang/StringBuilder/StringBuilder()
org/apache/fop/hyphenation/PatternParser/createParser()#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/apache/fop/hyphenation/PatternParser/createParser()#java/lang/StringBuilder/toString()
org/apache/fop/hyphenation/PatternParser/createParser()#java/lang/Exception/getMessage()
org/apache/fop/hyphenation/PatternParser/normalizeException(java.util.ArrayList)#java/util/ArrayList/ArrayList()
org/apache/fop/hyphenation/PatternParser/normalizeException(java.util.ArrayList)#java/lang/String/String(char[])
org/apache/fop/hyphenation/PatternParser/normalizeException(java.util.ArrayList)#java/lang/String/charAt(int)
org/apache/fop/hyphenation/PatternParser/normalizeException(java.util.ArrayList)#java/lang/StringBuffer/append(char)
org/apache/fop/hyphenation/PatternParser/normalizeException(java.util.ArrayList)#java/util/ArrayList/size()
org/apache/fop/hyphenation/PatternParser/normalizeException(java.util.ArrayList)#java/util/ArrayList/get(int)
org/apache/fop/hyphenation/PatternParser/normalizeException(java.util.ArrayList)#java/lang/StringBuffer/StringBuffer()
org/apache/fop/hyphenation/PatternParser/normalizeException(java.util.ArrayList)#java/lang/StringBuffer/setLength(int)
org/apache/fop/hyphenation/PatternParser/normalizeException(java.util.ArrayList)#java/lang/String/length()
org/apache/fop/hyphenation/PatternParser/normalizeException(java.util.ArrayList)#java/lang/StringBuffer/length()
org/apache/fop/hyphenation/PatternParser/normalizeException(java.util.ArrayList)#java/util/ArrayList/add(java.lang.Object)
org/apache/fop/hyphenation/PatternParser/normalizeException(java.util.ArrayList)#java/lang/StringBuffer/toString()
org/apache/fop/hyphenation/PatternParser/readToken(java.lang.StringBuffer)#java/lang/Character/isWhitespace(char)
org/apache/fop/hyphenation/PatternParser/readToken(java.lang.StringBuffer)#java/lang/StringBuffer/length()
org/apache/fop/hyphenation/PatternParser/readToken(java.lang.StringBuffer)#java/lang/StringBuffer/toString()
org/apache/fop/hyphenation/PatternParser/readToken(java.lang.StringBuffer)#java/lang/String/substring(int,int)
org/apache/fop/hyphenation/PatternParser/readToken(java.lang.StringBuffer)#java/lang/StringBuffer/setLength(int)
org/apache/fop/hyphenation/PatternParser/readToken(java.lang.StringBuffer)#java/lang/StringBuffer/setCharAt(int,char)
org/apache/fop/hyphenation/PatternParser/readToken(java.lang.StringBuffer)#java/lang/StringBuffer/charAt(int)
org/apache/fop/hyphenation/PatternParser/readToken(java.lang.StringBuffer)#java/lang/StringBuffer/append(java.lang.StringBuffer)
org/apache/fop/hyphenation/PatternParser/readToken(java.lang.StringBuffer)#java/lang/StringBuffer/append(java.lang.String)
org/apache/fop/hyphenation/PatternParser/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#java/lang/String/charAt(int)
org/apache/fop/hyphenation/PatternParser/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#java/lang/StringBuffer/setLength(int)
org/apache/fop/hyphenation/PatternParser/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#org/xml/sax/Attributes/getValue(java.lang.String)
org/apache/fop/hyphenation/PatternParser/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#java/util/ArrayList/ArrayList()
org/apache/fop/hyphenation/PatternParser/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#java/lang/String/length()
org/apache/fop/hyphenation/PatternParser/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#java/lang/StringBuffer/length()
org/apache/fop/hyphenation/PatternParser/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#java/lang/String/equals(java.lang.Object)
org/apache/fop/hyphenation/PatternParser/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#java/util/ArrayList/add(java.lang.Object)
org/apache/fop/hyphenation/PatternParser/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#java/lang/StringBuffer/toString()
org/apache/fop/hyphenation/PatternParser/parse(java.io.File)#java/net/MalformedURLException/getMessage()
org/apache/fop/hyphenation/PatternParser/parse(java.io.File)#java/net/URL/toExternalForm()
org/apache/fop/hyphenation/PatternParser/parse(java.io.File)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/hyphenation/PatternParser/parse(java.io.File)#java/net/URI/toURL()
org/apache/fop/hyphenation/PatternParser/parse(java.io.File)#org/xml/sax/InputSource/InputSource(java.lang.String)
org/apache/fop/hyphenation/PatternParser/parse(java.io.File)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/fop/hyphenation/PatternParser/parse(java.io.File)#java/lang/StringBuilder/toString()
org/apache/fop/hyphenation/PatternParser/parse(java.io.File)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/hyphenation/PatternParser/parse(java.io.File)#java/io/File/toURI()
org/apache/fop/hyphenation/PatternParser/getInterletterValues(java.lang.String)#java/lang/StringBuffer/append(char)
org/apache/fop/hyphenation/PatternParser/getInterletterValues(java.lang.String)#java/lang/String/length()
org/apache/fop/hyphenation/PatternParser/getInterletterValues(java.lang.String)#java/lang/Character/isDigit(char)
org/apache/fop/hyphenation/PatternParser/getInterletterValues(java.lang.String)#java/lang/StringBuffer/toString()
org/apache/fop/hyphenation/PatternParser/getInterletterValues(java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/hyphenation/PatternParser/getInterletterValues(java.lang.String)#java/lang/StringBuffer/StringBuffer()
org/apache/fop/hyphenation/PatternParser/getInterletterValues(java.lang.String)#java/lang/StringBuilder/toString()
org/apache/fop/hyphenation/PatternParser/getInterletterValues(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/hyphenation/PatternParser/getInterletterValues(java.lang.String)#java/lang/String/charAt(int)
org/apache/fop/hyphenation/PatternParser/getLocationString(org.xml.sax.SAXParseException)#org/xml/sax/SAXParseException/getColumnNumber()
org/apache/fop/hyphenation/PatternParser/getLocationString(org.xml.sax.SAXParseException)#java/lang/StringBuffer/append(char)
org/apache/fop/hyphenation/PatternParser/getLocationString(org.xml.sax.SAXParseException)#org/xml/sax/SAXParseException/getSystemId()
org/apache/fop/hyphenation/PatternParser/getLocationString(org.xml.sax.SAXParseException)#java/lang/StringBuffer/toString()
org/apache/fop/hyphenation/PatternParser/getLocationString(org.xml.sax.SAXParseException)#java/lang/String/lastIndexOf(int)
org/apache/fop/hyphenation/PatternParser/getLocationString(org.xml.sax.SAXParseException)#java/lang/String/substring(int)
org/apache/fop/hyphenation/PatternParser/getLocationString(org.xml.sax.SAXParseException)#java/lang/StringBuffer/append(int)
org/apache/fop/hyphenation/PatternParser/getLocationString(org.xml.sax.SAXParseException)#java/lang/StringBuffer/append(java.lang.String)
org/apache/fop/hyphenation/PatternParser/getLocationString(org.xml.sax.SAXParseException)#org/xml/sax/SAXParseException/getLineNumber()
org/apache/fop/hyphenation/PatternParser/getLocationString(org.xml.sax.SAXParseException)#java/lang/StringBuffer/StringBuffer()
org/apache/fop/pdf/PDFPageLabels/addPageLabel(int,java.lang.String)#java/lang/String/toLowerCase()
org/apache/fop/pdf/PDFPageLabels/addPageLabel(int,java.lang.String)#java/lang/String/charAt(int)
org/apache/fop/pdf/PDFPageLabels/addPageLabel(int,java.lang.String)#java/util/regex/Matcher/matches()
org/apache/fop/pdf/PDFPageLabels/addPageLabel(int,java.lang.String)#java/lang/String/length()
org/apache/fop/pdf/PDFPageLabels/addPageLabel(int,java.lang.String)#java/lang/String/equals(java.lang.Object)
org/apache/fop/pdf/PDFPageLabels/addPageLabel(int,java.lang.String)#java/lang/Integer/parseInt(java.lang.String)
org/apache/fop/pdf/PDFPageLabels/addPageLabel(int,java.lang.String)#java/util/regex/Pattern/matcher(java.lang.CharSequence)
org/apache/fop/pdf/PDFPageLabels/addPageLabel(int,java.lang.String)#org/apache/fop/pdf/PDFPageLabels/getNums()
org/apache/fop/pdf/PDFPageLabels/addPageLabel(int,java.lang.String)#java/lang/String/substring(int,int)
org/apache/fop/layoutmgr/table/TableStepper/switchToNextRow()#java/util/Iterator/hasNext()
org/apache/fop/layoutmgr/table/TableStepper/switchToNextRow()#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/layoutmgr/table/TableStepper/switchToNextRow()#java/lang/StringBuilder/append(int)
org/apache/fop/layoutmgr/table/TableStepper/switchToNextRow()#java/util/List/addAll(java.util.Collection)
org/apache/fop/layoutmgr/table/TableStepper/switchToNextRow()#java/util/Iterator/next()
org/apache/fop/layoutmgr/table/TableStepper/switchToNextRow()#java/util/List/clear()
org/apache/fop/layoutmgr/table/TableStepper/switchToNextRow()#org/apache/commons/logging/Log/isTraceEnabled()
org/apache/fop/layoutmgr/table/TableStepper/switchToNextRow()#java/util/List/iterator()
org/apache/fop/layoutmgr/table/TableStepper/switchToNextRow()#java/lang/StringBuilder/toString()
org/apache/fop/layoutmgr/table/TableStepper/switchToNextRow()#java/lang/StringBuilder/StringBuilder()
org/apache/fop/layoutmgr/table/TableStepper/switchToNextRow()#org/apache/commons/logging/Log/trace(java.lang.Object)
org/apache/fop/layoutmgr/table/TableStepper/considerRowLastStep(int)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/layoutmgr/table/TableStepper/considerRowLastStep(int)#java/lang/Math/max(int,int)
org/apache/fop/layoutmgr/table/TableStepper/considerRowLastStep(int)#java/lang/StringBuilder/append(int)
org/apache/fop/layoutmgr/table/TableStepper/considerRowLastStep(int)#java/util/Iterator/next()
org/apache/fop/layoutmgr/table/TableStepper/considerRowLastStep(int)#org/apache/commons/logging/Log/isTraceEnabled()
org/apache/fop/layoutmgr/table/TableStepper/considerRowLastStep(int)#java/util/List/iterator()
org/apache/fop/layoutmgr/table/TableStepper/considerRowLastStep(int)#java/util/Iterator/hasNext()
org/apache/fop/layoutmgr/table/TableStepper/considerRowLastStep(int)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/layoutmgr/table/TableStepper/considerRowLastStep(int)#org/apache/commons/logging/Log/trace(java.lang.Object)
org/apache/fop/layoutmgr/table/TableStepper/considerRowLastStep(int)#java/lang/StringBuilder/toString()
org/apache/fop/layoutmgr/table/TableStepper/getCombinedKnuthElementsForRowGroup(org.apache.fop.layoutmgr.LayoutContext,org.apache.fop.fo.flow.table.EffRow[],int)#java/util/ArrayList/ArrayList(int)
org/apache/fop/layoutmgr/table/TableStepper/getCombinedKnuthElementsForRowGroup(org.apache.fop.layoutmgr.LayoutContext,org.apache.fop.fo.flow.table.EffRow[],int)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/layoutmgr/table/TableStepper/getCombinedKnuthElementsForRowGroup(org.apache.fop.layoutmgr.LayoutContext,org.apache.fop.fo.flow.table.EffRow[],int)#java/util/List/iterator()
org/apache/fop/layoutmgr/table/TableStepper/getCombinedKnuthElementsForRowGroup(org.apache.fop.layoutmgr.LayoutContext,org.apache.fop.fo.flow.table.EffRow[],int)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/fop/layoutmgr/table/TableStepper/getCombinedKnuthElementsForRowGroup(org.apache.fop.layoutmgr.LayoutContext,org.apache.fop.fo.flow.table.EffRow[],int)#java/util/LinkedList/isEmpty()
org/apache/fop/layoutmgr/table/TableStepper/getCombinedKnuthElementsForRowGroup(org.apache.fop.layoutmgr.LayoutContext,org.apache.fop.fo.flow.table.EffRow[],int)#java/util/Iterator/hasNext()
org/apache/fop/layoutmgr/table/TableStepper/getCombinedKnuthElementsForRowGroup(org.apache.fop.layoutmgr.LayoutContext,org.apache.fop.fo.flow.table.EffRow[],int)#java/lang/Math/max(int,int)
org/apache/fop/layoutmgr/table/TableStepper/getCombinedKnuthElementsForRowGroup(org.apache.fop.layoutmgr.LayoutContext,org.apache.fop.fo.flow.table.EffRow[],int)#java/lang/StringBuilder/append(int)
org/apache/fop/layoutmgr/table/TableStepper/getCombinedKnuthElementsForRowGroup(org.apache.fop.layoutmgr.LayoutContext,org.apache.fop.fo.flow.table.EffRow[],int)#org/apache/commons/logging/Log/isDebugEnabled()
org/apache/fop/layoutmgr/table/TableStepper/getCombinedKnuthElementsForRowGroup(org.apache.fop.layoutmgr.LayoutContext,org.apache.fop.fo.flow.table.EffRow[],int)#java/util/List/size()
org/apache/fop/layoutmgr/table/TableStepper/getCombinedKnuthElementsForRowGroup(org.apache.fop.layoutmgr.LayoutContext,org.apache.fop.fo.flow.table.EffRow[],int)#java/util/Iterator/next()
org/apache/fop/layoutmgr/table/TableStepper/getCombinedKnuthElementsForRowGroup(org.apache.fop.layoutmgr.LayoutContext,org.apache.fop.fo.flow.table.EffRow[],int)#java/util/LinkedList/add(java.lang.Object)
org/apache/fop/layoutmgr/table/TableStepper/getCombinedKnuthElementsForRowGroup(org.apache.fop.layoutmgr.LayoutContext,org.apache.fop.fo.flow.table.EffRow[],int)#java/util/LinkedList/LinkedList()
org/apache/fop/layoutmgr/table/TableStepper/getCombinedKnuthElementsForRowGroup(org.apache.fop.layoutmgr.LayoutContext,org.apache.fop.fo.flow.table.EffRow[],int)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/layoutmgr/table/TableStepper/getCombinedKnuthElementsForRowGroup(org.apache.fop.layoutmgr.LayoutContext,org.apache.fop.fo.flow.table.EffRow[],int)#org/apache/commons/logging/Log/trace(java.lang.Object)
org/apache/fop/layoutmgr/table/TableStepper/getCombinedKnuthElementsForRowGroup(org.apache.fop.layoutmgr.LayoutContext,org.apache.fop.fo.flow.table.EffRow[],int)#java/util/LinkedList/size()
org/apache/fop/layoutmgr/table/TableStepper/getCombinedKnuthElementsForRowGroup(org.apache.fop.layoutmgr.LayoutContext,org.apache.fop.fo.flow.table.EffRow[],int)#java/util/List/add(java.lang.Object)
org/apache/fop/layoutmgr/table/TableStepper/getCombinedKnuthElementsForRowGroup(org.apache.fop.layoutmgr.LayoutContext,org.apache.fop.fo.flow.table.EffRow[],int)#org/apache/fop/layoutmgr/table/TableLayoutManager/getKeepTogether()
org/apache/fop/layoutmgr/table/TableStepper/getCombinedKnuthElementsForRowGroup(org.apache.fop.layoutmgr.LayoutContext,org.apache.fop.fo.flow.table.EffRow[],int)#java/lang/AssertionError/AssertionError()
org/apache/fop/layoutmgr/table/TableStepper/getCombinedKnuthElementsForRowGroup(org.apache.fop.layoutmgr.LayoutContext,org.apache.fop.fo.flow.table.EffRow[],int)#java/lang/StringBuilder/toString()
org/apache/fop/complexscripts/scripts/IndicScriptProcessor/DefaultSyllabizer/segmentize(org.apache.fop.complexscripts.util.GlyphSequence,org.apache.fop.complexscripts.scripts.IndicScriptProcessor$Segment[])#org/apache/fop/complexscripts/scripts/IndicScriptProcessor$Segment/getCount()
org/apache/fop/complexscripts/scripts/IndicScriptProcessor/DefaultSyllabizer/segmentize(org.apache.fop.complexscripts.util.GlyphSequence,org.apache.fop.complexscripts.scripts.IndicScriptProcessor$Segment[])#java/util/Vector/size()
org/apache/fop/complexscripts/scripts/IndicScriptProcessor/DefaultSyllabizer/segmentize(org.apache.fop.complexscripts.util.GlyphSequence,org.apache.fop.complexscripts.scripts.IndicScriptProcessor$Segment[])#org/apache/fop/complexscripts/scripts/IndicScriptProcessor$Segment/getOffset()
org/apache/fop/complexscripts/scripts/IndicScriptProcessor/DefaultSyllabizer/segmentize(org.apache.fop.complexscripts.util.GlyphSequence,org.apache.fop.complexscripts.scripts.IndicScriptProcessor$Segment[])#java/util/Vector/Vector()
org/apache/fop/complexscripts/scripts/IndicScriptProcessor/DefaultSyllabizer/segmentize(org.apache.fop.complexscripts.util.GlyphSequence,org.apache.fop.complexscripts.scripts.IndicScriptProcessor$Segment[])#java/util/Vector/Vector(int)
org/apache/fop/complexscripts/scripts/IndicScriptProcessor/DefaultSyllabizer/segmentize(org.apache.fop.complexscripts.util.GlyphSequence,org.apache.fop.complexscripts.scripts.IndicScriptProcessor$Segment[])#java/lang/Integer/valueOf(int)
org/apache/fop/complexscripts/scripts/IndicScriptProcessor/DefaultSyllabizer/segmentize(org.apache.fop.complexscripts.util.GlyphSequence,org.apache.fop.complexscripts.scripts.IndicScriptProcessor$Segment[])#java/util/Vector/add(java.lang.Object)
org/apache/fop/complexscripts/scripts/IndicScriptProcessor/DefaultSyllabizer/segmentize(org.apache.fop.complexscripts.util.GlyphSequence,org.apache.fop.complexscripts.scripts.IndicScriptProcessor$Segment[])#java/util/Vector/toArray(java.lang.Object[])
org/apache/fop/complexscripts/scripts/IndicScriptProcessor/DefaultSyllabizer/segmentize(org.apache.fop.complexscripts.util.GlyphSequence,org.apache.fop.complexscripts.scripts.IndicScriptProcessor$Segment[])#org/apache/fop/complexscripts/scripts/IndicScriptProcessor$DefaultSyllabizer/toIntArray(java.util.Vector)
org/apache/fop/area/AreaTreeParser/Handler/InlineMaker/startElement(org.xml.sax.Attributes)#org/apache/fop/area/AreaTreeParser$Handler/access$3500(org.xml.sax.Attributes,org.apache.fop.area.AreaTreeObject)
org/apache/fop/area/AreaTreeParser/Handler/InlineMaker/startElement(org.xml.sax.Attributes)#java/util/Stack/push(java.lang.Object)
org/apache/fop/area/AreaTreeParser/Handler/InlineMaker/startElement(org.xml.sax.Attributes)#org/apache/fop/area/AreaTreeParser$Handler/access$3600(org.apache.fop.area.AreaTreeParser$Handler)
org/apache/fop/area/AreaTreeParser/Handler/InlineMaker/startElement(org.xml.sax.Attributes)#org/apache/fop/area/AreaTreeParser$Handler/access$4300(org.apache.fop.area.AreaTreeParser$Handler,org.xml.sax.Attributes,org.apache.fop.area.Area,java.lang.Object[])
org/apache/fop/area/AreaTreeParser/Handler/InlineMaker/startElement(org.xml.sax.Attributes)#org/apache/fop/area/AreaTreeParser$Handler/access$4100(org.apache.fop.area.AreaTreeParser$Handler,org.xml.sax.Attributes,org.apache.fop.area.Area)
org/apache/fop/area/AreaTreeParser/Handler/InlineMaker/startElement(org.xml.sax.Attributes)#java/util/Stack/peek()
org/apache/fop/area/AreaTreeParser/Handler/InlineMaker/startElement(org.xml.sax.Attributes)#org/apache/fop/area/AreaTreeParser$Handler/access$4200()
org/apache/fop/area/AreaTreeParser/Handler/InlineMaker/startElement(org.xml.sax.Attributes)#org/apache/fop/area/AreaTreeParser$Handler/access$4400()
org/apache/fop/area/AreaTreeParser/Handler/InlineMaker/startElement(org.xml.sax.Attributes)#org/apache/fop/area/AreaTreeParser$Handler/access$4500()
org/apache/fop/render/RendererContext/RendererContextWrapper/toString()#org/apache/fop/render/RendererContext$RendererContextWrapper/getWidth()
org/apache/fop/render/RendererContext/RendererContextWrapper/toString()#org/apache/fop/render/RendererContext$RendererContextWrapper/getHeight()
org/apache/fop/render/RendererContext/RendererContextWrapper/toString()#org/apache/fop/render/RendererContext$RendererContextWrapper/getCurrentXPosition()
org/apache/fop/render/RendererContext/RendererContextWrapper/toString()#org/apache/fop/render/RendererContext$RendererContextWrapper/getCurrentYPosition()
org/apache/fop/render/RendererContext/RendererContextWrapper/toString()#org/apache/fop/render/RendererContext$RendererContextWrapper/getForeignAttributes()
org/apache/fop/render/RendererContext/RendererContextWrapper/toString()#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/render/RendererContext/RendererContextWrapper/toString()#java/lang/StringBuilder/append(int)
org/apache/fop/render/RendererContext/RendererContextWrapper/toString()#java/lang/StringBuilder/StringBuilder()
org/apache/fop/render/RendererContext/RendererContextWrapper/toString()#org/apache/fop/render/RendererContext$RendererContextWrapper/getUserAgent()
org/apache/fop/render/RendererContext/RendererContextWrapper/toString()#java/lang/StringBuilder/append(java.lang.Object)
org/apache/fop/render/RendererContext/RendererContextWrapper/toString()#java/lang/StringBuilder/toString()
org/apache/fop/svg/AbstractFOPImageElementBridge/createImageGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.util.ParsedURL)#org/apache/xmlgraphics/image/loader/ImageManager/getImageInfo(java.lang.String,org.apache.xmlgraphics.image.loader.ImageSessionContext)
org/apache/fop/svg/AbstractFOPImageElementBridge/createImageGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.util.ParsedURL)#org/apache/fop/svg/AbstractFOPImageElementBridge/getImageBounds(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)
org/apache/fop/svg/AbstractFOPImageElementBridge/createImageGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.util.ParsedURL)#org/apache/xmlgraphics/image/loader/ImageManager/convertImage(org.apache.xmlgraphics.image.loader.Image,org.apache.xmlgraphics.image.loader.ImageFlavor[])
org/apache/fop/svg/AbstractFOPImageElementBridge/createImageGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.util.ParsedURL)#java/awt/geom/Rectangle2D/getWidth()
org/apache/fop/svg/AbstractFOPImageElementBridge/createImageGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.util.ParsedURL)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/svg/AbstractFOPImageElementBridge/createImageGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.util.ParsedURL)#org/apache/xmlgraphics/image/loader/impl/ImageXMLDOM/getDocument()
org/apache/fop/svg/AbstractFOPImageElementBridge/createImageGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.util.ParsedURL)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/fop/svg/AbstractFOPImageElementBridge/createImageGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.util.ParsedURL)#org/apache/batik/bridge/UserAgent/displayError(java.lang.Exception)
org/apache/fop/svg/AbstractFOPImageElementBridge/createImageGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.util.ParsedURL)#org/apache/fop/svg/AbstractFOPImageElementBridge$Graphics2DNode/Graphics2DNode(org.apache.xmlgraphics.image.loader.impl.ImageGraphics2D)
org/apache/fop/svg/AbstractFOPImageElementBridge/createImageGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.util.ParsedURL)#org/apache/fop/svg/AbstractFOPImageElementBridge/initializeViewport(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,float[],java.awt.geom.Rectangle2D)
org/apache/fop/svg/AbstractFOPImageElementBridge/createImageGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.util.ParsedURL)#org/apache/batik/gvt/AbstractGraphicsNode/getPrimitiveBounds()
org/apache/fop/svg/AbstractFOPImageElementBridge/createImageGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.util.ParsedURL)#org/apache/xmlgraphics/image/loader/ImageException/ImageException(java.lang.String)
org/apache/fop/svg/AbstractFOPImageElementBridge/createImageGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.util.ParsedURL)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/svg/AbstractFOPImageElementBridge/createImageGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.util.ParsedURL)#java/awt/geom/Rectangle2D/getHeight()
org/apache/fop/svg/AbstractFOPImageElementBridge/createImageGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.util.ParsedURL)#org/apache/batik/util/ParsedURL/toString()
org/apache/fop/svg/AbstractFOPImageElementBridge/createImageGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.util.ParsedURL)#java/lang/StringBuilder/toString()
org/apache/fop/svg/AbstractFOPImageElementBridge/createImageGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.util.ParsedURL)#org/apache/batik/bridge/BridgeContext/getUserAgent()
org/apache/fop/svg/AbstractFOPImageElementBridge/createImageGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.util.ParsedURL)#org/apache/fop/svg/AbstractFOPImageElementBridge/createSVGImageNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.svg.SVGDocument)
org/apache/fop/svg/AbstractFOPImageElementBridge/createImageGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.util.ParsedURL)#org/apache/xmlgraphics/image/loader/ImageManager/getImage(org.apache.xmlgraphics.image.loader.ImageInfo,org.apache.xmlgraphics.image.loader.ImageFlavor[],org.apache.xmlgraphics.image.loader.ImageSessionContext)
org/apache/fop/image/loader/batik/ImageConverterSVG2G2D/convert(org.apache.xmlgraphics.image.loader.Image,java.util.Map)#java/awt/Dimension/Dimension(int,int)
org/apache/fop/image/loader/batik/ImageConverterSVG2G2D/convert(org.apache.xmlgraphics.image.loader.Image,java.util.Map)#org/apache/xmlgraphics/image/loader/ImageSize/getWidthMpt()
org/apache/fop/image/loader/batik/ImageConverterSVG2G2D/convert(org.apache.xmlgraphics.image.loader.Image,java.util.Map)#org/apache/xmlgraphics/image/loader/Image/getInfo()
org/apache/fop/image/loader/batik/ImageConverterSVG2G2D/convert(org.apache.xmlgraphics.image.loader.Image,java.util.Map)#java/util/Map/get(java.lang.Object)
org/apache/fop/image/loader/batik/ImageConverterSVG2G2D/convert(org.apache.xmlgraphics.image.loader.Image,java.util.Map)#org/apache/batik/bridge/GVTBuilder/build(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Document)
org/apache/fop/image/loader/batik/ImageConverterSVG2G2D/convert(org.apache.xmlgraphics.image.loader.Image,java.util.Map)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/image/loader/batik/ImageConverterSVG2G2D/convert(org.apache.xmlgraphics.image.loader.Image,java.util.Map)#org/apache/xmlgraphics/image/loader/impl/ImageXMLDOM/getDocument()
org/apache/fop/image/loader/batik/ImageConverterSVG2G2D/convert(org.apache.xmlgraphics.image.loader.Image,java.util.Map)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/fop/image/loader/batik/ImageConverterSVG2G2D/convert(org.apache.xmlgraphics.image.loader.Image,java.util.Map)#org/apache/batik/bridge/GVTBuilder/GVTBuilder()
org/apache/fop/image/loader/batik/ImageConverterSVG2G2D/convert(org.apache.xmlgraphics.image.loader.Image,java.util.Map)#org/apache/xmlgraphics/image/loader/impl/ImageXMLDOM/getSize()
org/apache/fop/image/loader/batik/ImageConverterSVG2G2D/convert(org.apache.xmlgraphics.image.loader.Image,java.util.Map)#org/apache/xmlgraphics/image/loader/ImageSize/getHeightMpt()
org/apache/fop/image/loader/batik/ImageConverterSVG2G2D/convert(org.apache.xmlgraphics.image.loader.Image,java.util.Map)#java/lang/Number/doubleValue()
org/apache/fop/image/loader/batik/ImageConverterSVG2G2D/convert(org.apache.xmlgraphics.image.loader.Image,java.util.Map)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/image/loader/batik/ImageConverterSVG2G2D/convert(org.apache.xmlgraphics.image.loader.Image,java.util.Map)#org/apache/xmlgraphics/image/loader/ImageException/ImageException(java.lang.String,java.lang.Throwable)
org/apache/fop/image/loader/batik/ImageConverterSVG2G2D/convert(org.apache.xmlgraphics.image.loader.Image,java.util.Map)#org/apache/batik/bridge/BridgeContext/BridgeContext(org.apache.batik.bridge.UserAgent)
org/apache/fop/image/loader/batik/ImageConverterSVG2G2D/convert(org.apache.xmlgraphics.image.loader.Image,java.util.Map)#org/apache/xmlgraphics/image/loader/impl/ImageGraphics2D/ImageGraphics2D(org.apache.xmlgraphics.image.loader.ImageInfo,org.apache.xmlgraphics.java2d.Graphics2DImagePainter)
org/apache/fop/image/loader/batik/ImageConverterSVG2G2D/convert(org.apache.xmlgraphics.image.loader.Image,java.util.Map)#java/lang/String/equals(java.lang.Object)
org/apache/fop/image/loader/batik/ImageConverterSVG2G2D/convert(org.apache.xmlgraphics.image.loader.Image,java.util.Map)#org/apache/xmlgraphics/image/loader/impl/ImageXMLDOM/getRootNamespace()
org/apache/fop/image/loader/batik/ImageConverterSVG2G2D/convert(org.apache.xmlgraphics.image.loader.Image,java.util.Map)#java/lang/StringBuilder/toString()
org/apache/fop/image/loader/batik/ImageConverterSVG2G2D/convert(org.apache.xmlgraphics.image.loader.Image,java.util.Map)#org/apache/fop/image/loader/batik/ImageConverterSVG2G2D/checkSourceFlavor(org.apache.xmlgraphics.image.loader.Image)
org/apache/fop/layoutmgr/list/ListBlockLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext)#java/util/LinkedList/listIterator()
org/apache/fop/layoutmgr/list/ListBlockLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/layoutmgr/list/ListBlockLayoutManager/isFirst(org.apache.fop.layoutmgr.Position)
org/apache/fop/layoutmgr/list/ListBlockLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext)#java/util/LinkedList/LinkedList()
org/apache/fop/layoutmgr/list/ListBlockLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/layoutmgr/list/ListBlockLayoutManager/flush()
org/apache/fop/layoutmgr/list/ListBlockLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/layoutmgr/list/ListBlockLayoutManager/registerMarkers(boolean,boolean,boolean)
org/apache/fop/layoutmgr/list/ListBlockLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/layoutmgr/list/ListBlockLayoutManager/checkEndOfLayout(org.apache.fop.layoutmgr.Position)
org/apache/fop/layoutmgr/list/ListBlockLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/layoutmgr/list/ListBlockLayoutManager/addBlockSpacing(double,org.apache.fop.traits.MinOptMax)
org/apache/fop/layoutmgr/list/ListBlockLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/layoutmgr/list/ListBlockLayoutManager/addId()
org/apache/fop/layoutmgr/list/ListBlockLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext)#java/util/LinkedList/add(java.lang.Object)
org/apache/fop/layoutmgr/list/ListBlockLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/layoutmgr/list/ListBlockLayoutManager/isLast(org.apache.fop.layoutmgr.Position)
org/apache/fop/fonts/truetype/TTFFile/readName()#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/fop/fonts/truetype/TTFFile/readName()#java/lang/StringBuilder/append(int)
org/apache/fop/fonts/truetype/TTFFile/readName()#java/util/Set/add(java.lang.Object)
org/apache/fop/fonts/truetype/TTFFile/readName()#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/fonts/truetype/TTFFile/readName()#java/lang/String/length()
org/apache/fop/fonts/truetype/TTFFile/readName()#org/apache/commons/logging/Log/isDebugEnabled()
org/apache/fop/fonts/truetype/TTFFile/readName()#java/lang/StringBuilder/StringBuilder()
org/apache/fop/fonts/truetype/TTFFile/readName()#org/apache/fop/fonts/truetype/TTFFile/seekTab(org.apache.fop.fonts.truetype.FontFileReader,org.apache.fop.fonts.truetype.OFTableName,long)
org/apache/fop/fonts/truetype/TTFFile/readName()#java/lang/StringBuilder/toString()
org/apache/fop/fo/flow/table/GridUnit/toString()#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/fo/flow/table/GridUnit/toString()#org/apache/fop/fo/flow/table/PrimaryGridUnit/getCell()
org/apache/fop/fo/flow/table/GridUnit/toString()#java/lang/StringBuffer/append(int)
org/apache/fop/fo/flow/table/GridUnit/toString()#java/lang/StringBuffer/append(java.lang.String)
org/apache/fop/fo/flow/table/GridUnit/toString()#java/lang/StringBuffer/StringBuffer()
org/apache/fop/fo/flow/table/GridUnit/toString()#java/lang/StringBuilder/toString()
org/apache/fop/fo/flow/table/GridUnit/toString()#java/lang/Integer/toBinaryString(int)
org/apache/fop/fo/flow/table/GridUnit/toString()#org/apache/fop/fo/flow/table/TableCell/getId()
org/apache/fop/fo/flow/table/GridUnit/toString()#java/lang/StringBuffer/toString()
org/apache/fop/fo/flow/table/GridUnit/toString()#java/lang/StringBuilder/StringBuilder()
org/apache/fop/fonts/base14/HelveticaBold/<clinit>()#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/fop/fonts/base14/HelveticaBold/<clinit>()#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/fonts/base14/HelveticaBold/<clinit>()#java/lang/Integer/Integer(int)
org/apache/fop/fonts/base14/HelveticaBold/<clinit>()#java/awt/Rectangle/Rectangle(int,int,int,int)
org/apache/fop/fonts/base14/HelveticaBold/<clinit>()#java/util/Map/get(java.lang.Object)
org/apache/fop/fonts/base14/HelveticaBold/<clinit>()#java/util/HashMap/HashMap()
org/apache/fop/fonts/base14/HelveticaBold/<clinit>()#java/lang/StringBuilder/StringBuilder()
org/apache/fop/fonts/base14/HelveticaBold/<clinit>()#java/util/HashSet/HashSet()
org/apache/fop/fonts/base14/HelveticaBold/<clinit>()#java/util/Set/add(java.lang.Object)
org/apache/fop/fonts/base14/HelveticaBold/<clinit>()#java/lang/StringBuilder/toString()
org/apache/fop/fonts/base14/HelveticaBold/<clinit>()#java/net/URI/URI(java.lang.String)
org/apache/fop/fonts/base14/HelveticaBold/<clinit>()#java/lang/String/toLowerCase()
org/apache/fop/area/AreaTreeParser/Handler/SpaceMaker/endElement()#java/nio/CharBuffer/charAt(int)
org/apache/fop/area/AreaTreeParser/Handler/SpaceMaker/endElement()#org/apache/fop/area/AreaTreeParser$Handler/access$5400(org.apache.fop.area.AreaTreeParser$Handler)
org/apache/fop/area/AreaTreeParser/Handler/SpaceMaker/endElement()#org/apache/fop/area/AreaTreeParser$Handler/access$5700(org.apache.fop.area.AreaTreeParser$Handler)
org/apache/fop/area/AreaTreeParser/Handler/SpaceMaker/endElement()#org/apache/fop/area/AreaTreeParser$Handler/access$4300(org.apache.fop.area.AreaTreeParser$Handler,org.xml.sax.Attributes,org.apache.fop.area.Area,java.lang.Object[])
org/apache/fop/area/AreaTreeParser/Handler/SpaceMaker/endElement()#org/apache/fop/area/inline/AbstractTextArea/addChildArea(org.apache.fop.area.Area)
org/apache/fop/area/AreaTreeParser/Handler/SpaceMaker/endElement()#org/apache/fop/area/AreaTreeParser$Handler/access$4100(org.apache.fop.area.AreaTreeParser$Handler,org.xml.sax.Attributes,org.apache.fop.area.Area)
org/apache/fop/area/AreaTreeParser/Handler/SpaceMaker/endElement()#org/apache/fop/area/inline/Space/setBlockProgressionOffset(int)
org/apache/fop/area/AreaTreeParser/Handler/SpaceMaker/endElement()#java/nio/CharBuffer/flip()
org/apache/fop/area/AreaTreeParser/Handler/SpaceMaker/endElement()#java/util/Stack/peek()
org/apache/fop/area/AreaTreeParser/Handler/SpaceMaker/endElement()#org/apache/fop/area/AreaTreeParser$Handler/access$4200()
org/apache/fop/area/AreaTreeParser/Handler/SpaceMaker/endElement()#org/apache/fop/area/AreaTreeParser$Handler/access$4400()
org/apache/fop/area/AreaTreeParser/Handler/SpaceMaker/endElement()#org/apache/fop/area/AreaTreeParser$Handler/access$4500()
org/apache/fop/area/AreaTreeParser/Handler/SpaceMaker/endElement()#org/apache/fop/area/AreaTreeParser$Handler/access$5600(org.apache.fop.area.AreaTreeParser$Handler)
org/apache/fop/area/AreaTreeParser/Handler/SpaceMaker/endElement()#org/apache/fop/area/AreaTreeParser$Handler/access$3600(org.apache.fop.area.AreaTreeParser$Handler)
org/apache/fop/area/AreaTreeParser/Handler/SpaceMaker/endElement()#java/nio/CharBuffer/position()
org/apache/fop/area/AreaTreeParser/Handler/SpaceMaker/endElement()#org/apache/fop/area/inline/SpaceArea/setParentArea(org.apache.fop.area.Area)
org/apache/fop/afp/AFPGraphics2D/doDrawing(java.awt.Shape,boolean)#org/apache/xmlgraphics/java2d/GraphicContext/getTransform()
org/apache/fop/afp/AFPGraphics2D/doDrawing(java.awt.Shape,boolean)#java/lang/Math/round(double)
org/apache/fop/afp/AFPGraphics2D/doDrawing(java.awt.Shape,boolean)#java/awt/geom/Ellipse2D/getHeight()
org/apache/fop/afp/AFPGraphics2D/doDrawing(java.awt.Shape,boolean)#java/awt/geom/AffineTransform/transform(double[],int,double[],int,int)
org/apache/fop/afp/AFPGraphics2D/doDrawing(java.awt.Shape,boolean)#java/awt/geom/AffineTransform/getScaleX()
org/apache/fop/afp/AFPGraphics2D/doDrawing(java.awt.Shape,boolean)#org/apache/xmlgraphics/java2d/GraphicContext/getPaint()
org/apache/fop/afp/AFPGraphics2D/doDrawing(java.awt.Shape,boolean)#java/awt/geom/PathIterator/next()
org/apache/fop/afp/AFPGraphics2D/doDrawing(java.awt.Shape,boolean)#org/apache/xmlgraphics/java2d/GraphicContext/getColor()
org/apache/fop/afp/AFPGraphics2D/doDrawing(java.awt.Shape,boolean)#java/awt/geom/Ellipse2D/getCenterY()
org/apache/fop/afp/AFPGraphics2D/doDrawing(java.awt.Shape,boolean)#java/awt/geom/PathIterator/currentSegment(double[])
org/apache/fop/afp/AFPGraphics2D/doDrawing(java.awt.Shape,boolean)#org/apache/xmlgraphics/java2d/GraphicContext/getStroke()
org/apache/fop/afp/AFPGraphics2D/doDrawing(java.awt.Shape,boolean)#java/awt/Shape/getPathIterator(java.awt.geom.AffineTransform)
org/apache/fop/afp/AFPGraphics2D/doDrawing(java.awt.Shape,boolean)#java/awt/geom/Ellipse2D/getCenterX()
org/apache/fop/afp/AFPGraphics2D/doDrawing(java.awt.Shape,boolean)#java/awt/geom/Ellipse2D/getWidth()
org/apache/fop/afp/AFPGraphics2D/drawRenderedImage(java.awt.image.RenderedImage,java.awt.geom.AffineTransform)#org/apache/xmlgraphics/java2d/GraphicContext/getTransform()
org/apache/fop/afp/AFPGraphics2D/drawRenderedImage(java.awt.image.RenderedImage,java.awt.geom.AffineTransform)#java/lang/Math/round(double)
org/apache/fop/afp/AFPGraphics2D/drawRenderedImage(java.awt.image.RenderedImage,java.awt.geom.AffineTransform)#java/awt/geom/AffineTransform/getTranslateY()
org/apache/fop/afp/AFPGraphics2D/drawRenderedImage(java.awt.image.RenderedImage,java.awt.geom.AffineTransform)#org/apache/xmlgraphics/image/loader/ImageInfo/getSize()
org/apache/fop/afp/AFPGraphics2D/drawRenderedImage(java.awt.image.RenderedImage,java.awt.geom.AffineTransform)#org/apache/fop/afp/modca/ObjectAreaDescriptor/getHeight()
org/apache/fop/afp/AFPGraphics2D/drawRenderedImage(java.awt.image.RenderedImage,java.awt.geom.AffineTransform)#org/apache/xmlgraphics/image/loader/impl/ImageRendered/ImageRendered(org.apache.xmlgraphics.image.loader.ImageInfo,java.awt.image.RenderedImage,java.awt.Color)
org/apache/fop/afp/AFPGraphics2D/drawRenderedImage(java.awt.image.RenderedImage,java.awt.geom.AffineTransform)#org/apache/xmlgraphics/image/loader/ImageSize/calcSizeFromPixels()
org/apache/fop/afp/AFPGraphics2D/drawRenderedImage(java.awt.image.RenderedImage,java.awt.geom.AffineTransform)#java/awt/geom/AffineTransform/getTranslateX()
org/apache/fop/afp/AFPGraphics2D/drawRenderedImage(java.awt.image.RenderedImage,java.awt.geom.AffineTransform)#java/awt/image/RenderedImage/getWidth()
org/apache/fop/afp/AFPGraphics2D/drawRenderedImage(java.awt.image.RenderedImage,java.awt.geom.AffineTransform)#org/apache/xmlgraphics/image/loader/ImageInfo/ImageInfo(java.lang.String,java.lang.String)
org/apache/fop/afp/AFPGraphics2D/drawRenderedImage(java.awt.image.RenderedImage,java.awt.geom.AffineTransform)#java/awt/geom/AffineTransform/getScaleX()
org/apache/fop/afp/AFPGraphics2D/drawRenderedImage(java.awt.image.RenderedImage,java.awt.geom.AffineTransform)#org/apache/fop/afp/modca/GraphicsObject/getObjectEnvironmentGroup()
org/apache/fop/afp/AFPGraphics2D/drawRenderedImage(java.awt.image.RenderedImage,java.awt.geom.AffineTransform)#java/awt/geom/AffineTransform/getScaleY()
org/apache/fop/afp/AFPGraphics2D/drawRenderedImage(java.awt.image.RenderedImage,java.awt.geom.AffineTransform)#java/awt/Rectangle/Rectangle(int,int,int,int)
org/apache/fop/afp/AFPGraphics2D/drawRenderedImage(java.awt.image.RenderedImage,java.awt.geom.AffineTransform)#org/apache/xmlgraphics/image/loader/ImageInfo/setSize(org.apache.xmlgraphics.image.loader.ImageSize)
org/apache/fop/afp/AFPGraphics2D/drawRenderedImage(java.awt.image.RenderedImage,java.awt.geom.AffineTransform)#org/apache/xmlgraphics/image/loader/ImageSize/ImageSize(int,int,double)
org/apache/fop/afp/AFPGraphics2D/drawRenderedImage(java.awt.image.RenderedImage,java.awt.geom.AffineTransform)#java/awt/image/RenderedImage/getHeight()
org/apache/fop/afp/AFPGraphics2D/applyStroke(java.awt.Stroke)#org/apache/commons/logging/Log/warn(java.lang.Object)
org/apache/fop/afp/AFPGraphics2D/applyStroke(java.awt.Stroke)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/afp/AFPGraphics2D/applyStroke(java.awt.Stroke)#java/lang/Class/getName()
org/apache/fop/afp/AFPGraphics2D/applyStroke(java.awt.Stroke)#java/lang/Object/getClass()
org/apache/fop/afp/AFPGraphics2D/applyStroke(java.awt.Stroke)#org/apache/fop/afp/AFPPaintingState/setDashArray(float[])
org/apache/fop/afp/AFPGraphics2D/applyStroke(java.awt.Stroke)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/afp/AFPGraphics2D/applyStroke(java.awt.Stroke)#java/awt/BasicStroke/getDashArray()
org/apache/fop/afp/AFPGraphics2D/applyStroke(java.awt.Stroke)#java/lang/StringBuilder/toString()
org/apache/fop/afp/AFPGraphics2D/applyStroke(java.awt.Stroke)#java/awt/BasicStroke/getLineWidth()
org/apache/fop/afp/AFPGraphics2D/drawBufferedImage(java.awt.Image,java.awt.image.BufferedImage,int,int,java.awt.image.ImageObserver)#java/awt/Color/Color(int,int,int,int)
org/apache/fop/afp/AFPGraphics2D/drawBufferedImage(java.awt.Image,java.awt.image.BufferedImage,int,int,java.awt.image.ImageObserver)#java/awt/Graphics2D/drawImage(java.awt.Image,int,int,int,int,java.awt.image.ImageObserver)
org/apache/fop/afp/AFPGraphics2D/drawBufferedImage(java.awt.Image,java.awt.image.BufferedImage,int,int,java.awt.image.ImageObserver)#java/awt/Graphics2D/dispose()
org/apache/fop/afp/AFPGraphics2D/drawBufferedImage(java.awt.Image,java.awt.image.BufferedImage,int,int,java.awt.image.ImageObserver)#java/awt/Rectangle/Rectangle(int,int,int,int)
org/apache/fop/afp/AFPGraphics2D/drawBufferedImage(java.awt.Image,java.awt.image.BufferedImage,int,int,java.awt.image.ImageObserver)#java/awt/image/BufferedImage/getHeight()
org/apache/fop/afp/AFPGraphics2D/drawBufferedImage(java.awt.Image,java.awt.image.BufferedImage,int,int,java.awt.image.ImageObserver)#org/apache/xmlgraphics/java2d/GraphicContext/getComposite()
org/apache/fop/afp/AFPGraphics2D/drawBufferedImage(java.awt.Image,java.awt.image.BufferedImage,int,int,java.awt.image.ImageObserver)#java/awt/Graphics2D/setPaint(java.awt.Paint)
org/apache/fop/afp/AFPGraphics2D/drawBufferedImage(java.awt.Image,java.awt.image.BufferedImage,int,int,java.awt.image.ImageObserver)#java/awt/Graphics2D/setComposite(java.awt.Composite)
org/apache/fop/afp/AFPGraphics2D/drawBufferedImage(java.awt.Image,java.awt.image.BufferedImage,int,int,java.awt.image.ImageObserver)#java/awt/image/BufferedImage/createGraphics()
org/apache/fop/afp/AFPGraphics2D/drawBufferedImage(java.awt.Image,java.awt.image.BufferedImage,int,int,java.awt.image.ImageObserver)#java/awt/image/BufferedImage/getWidth()
org/apache/fop/afp/AFPGraphics2D/drawBufferedImage(java.awt.Image,java.awt.image.BufferedImage,int,int,java.awt.image.ImageObserver)#java/awt/Graphics2D/setBackground(java.awt.Color)
org/apache/fop/afp/AFPGraphics2D/drawBufferedImage(java.awt.Image,java.awt.image.BufferedImage,int,int,java.awt.image.ImageObserver)#java/awt/Graphics2D/clip(java.awt.Shape)
org/apache/fop/afp/AFPGraphics2D/drawBufferedImage(java.awt.Image,java.awt.image.BufferedImage,int,int,java.awt.image.ImageObserver)#java/awt/Graphics2D/fillRect(int,int,int,int)
org/apache/fop/render/pdf/PDFStructureTreeBuilder/<clinit>()#org/apache/fop/render/pdf/PDFStructureTreeBuilder$InlineHolderBuilder/InlineHolderBuilder()
org/apache/fop/render/pdf/PDFStructureTreeBuilder/<clinit>()#org/apache/fop/render/pdf/PDFStructureTreeBuilder$RegionBuilder/RegionBuilder()
org/apache/fop/render/pdf/PDFStructureTreeBuilder/<clinit>()#org/apache/fop/render/pdf/PDFStructureTreeBuilder$PageSequenceBuilder/PageSequenceBuilder()
org/apache/fop/render/pdf/PDFStructureTreeBuilder/<clinit>()#org/apache/fop/render/pdf/PDFStructureTreeBuilder$LanguageHolderBuilder/LanguageHolderBuilder(org.apache.fop.pdf.StructureType)
org/apache/fop/render/pdf/PDFStructureTreeBuilder/<clinit>()#org/apache/fop/render/pdf/PDFStructureTreeBuilder$DefaultStructureElementBuilder/DefaultStructureElementBuilder(org.apache.fop.pdf.StructureType)
org/apache/fop/render/pdf/PDFStructureTreeBuilder/<clinit>()#java/lang/Class/desiredAssertionStatus()
org/apache/fop/render/pdf/PDFStructureTreeBuilder/<clinit>()#org/apache/fop/render/pdf/PDFStructureTreeBuilder$PlaceholderBuilder/PlaceholderBuilder(org.apache.fop.render.pdf.PDFStructureTreeBuilder$1)
org/apache/fop/render/pdf/PDFStructureTreeBuilder/<clinit>()#java/util/HashMap/HashMap()
org/apache/fop/render/pdf/PDFStructureTreeBuilder/<clinit>()#org/apache/fop/render/pdf/PDFStructureTreeBuilder$TableFooterBuilder/TableFooterBuilder()
org/apache/fop/render/pdf/PDFStructureTreeBuilder/<clinit>()#org/apache/fop/render/pdf/PDFStructureTreeBuilder$TableCellBuilder/TableCellBuilder()
org/apache/fop/render/pdf/PDFStructureTreeBuilder/<clinit>()#org/apache/fop/render/pdf/PDFStructureTreeBuilder$ImageBuilder/ImageBuilder()
org/apache/fop/render/pdf/PDFStructureTreeBuilder/<clinit>()#org/apache/fop/render/pdf/PDFStructureTreeBuilder$TableBuilder/TableBuilder()
org/apache/fop/render/ps/ResourceHandler/IncludeResourceListener/processEvent(org.apache.xmlgraphics.ps.dsc.events.DSCEvent,org.apache.xmlgraphics.ps.dsc.DSCParser)#org/apache/xmlgraphics/ps/dsc/DSCParser/nextEvent()
org/apache/fop/render/ps/ResourceHandler/IncludeResourceListener/processEvent(org.apache.xmlgraphics.ps.dsc.events.DSCEvent,org.apache.xmlgraphics.ps.dsc.DSCParser)#java/io/IOException/IOException(java.lang.String)
org/apache/fop/render/ps/ResourceHandler/IncludeResourceListener/processEvent(org.apache.xmlgraphics.ps.dsc.events.DSCEvent,org.apache.xmlgraphics.ps.dsc.DSCParser)#org/apache/xmlgraphics/ps/dsc/events/DSCEvent/isDSCComment()
org/apache/fop/render/ps/ResourceHandler/IncludeResourceListener/processEvent(org.apache.xmlgraphics.ps.dsc.events.DSCEvent,org.apache.xmlgraphics.ps.dsc.DSCParser)#java/util/Map/get(java.lang.Object)
org/apache/fop/render/ps/ResourceHandler/IncludeResourceListener/processEvent(org.apache.xmlgraphics.ps.dsc.events.DSCEvent,org.apache.xmlgraphics.ps.dsc.DSCParser)#org/apache/xmlgraphics/ps/dsc/DSCParser/next()
org/apache/fop/render/ps/ResourceHandler/IncludeResourceListener/processEvent(org.apache.xmlgraphics.ps.dsc.events.DSCEvent,org.apache.xmlgraphics.ps.dsc.DSCParser)#org/apache/xmlgraphics/ps/dsc/events/DSCEvent/isLine()
org/apache/fop/render/ps/ResourceHandler/IncludeResourceListener/processEvent(org.apache.xmlgraphics.ps.dsc.events.DSCEvent,org.apache.xmlgraphics.ps.dsc.DSCParser)#org/apache/xmlgraphics/ps/PSGenerator/writeln(java.lang.String)
org/apache/fop/render/ps/ResourceHandler/IncludeResourceListener/processEvent(org.apache.xmlgraphics.ps.dsc.events.DSCEvent,org.apache.xmlgraphics.ps.dsc.DSCParser)#org/apache/xmlgraphics/ps/PSResource/getType()
org/apache/fop/render/ps/ResourceHandler/IncludeResourceListener/processEvent(org.apache.xmlgraphics.ps.dsc.events.DSCEvent,org.apache.xmlgraphics.ps.dsc.DSCParser)#org/apache/xmlgraphics/ps/dsc/events/DSCEvent/asLine()
org/apache/fop/render/ps/ResourceHandler/IncludeResourceListener/processEvent(org.apache.xmlgraphics.ps.dsc.events.DSCEvent,org.apache.xmlgraphics.ps.dsc.DSCParser)#java/lang/String/endsWith(java.lang.String)
org/apache/fop/render/ps/ResourceHandler/IncludeResourceListener/processEvent(org.apache.xmlgraphics.ps.dsc.events.DSCEvent,org.apache.xmlgraphics.ps.dsc.DSCParser)#java/util/Map/containsValue(java.lang.Object)
org/apache/fop/render/ps/ResourceHandler/IncludeResourceListener/processEvent(org.apache.xmlgraphics.ps.dsc.events.DSCEvent,org.apache.xmlgraphics.ps.dsc.DSCParser)#org/apache/xmlgraphics/ps/dsc/events/DSCCommentIncludeResource/getResource()
org/apache/fop/render/ps/ResourceHandler/IncludeResourceListener/processEvent(org.apache.xmlgraphics.ps.dsc.events.DSCEvent,org.apache.xmlgraphics.ps.dsc.DSCParser)#org/apache/xmlgraphics/ps/dsc/events/PostScriptLine/getLine()
org/apache/fop/render/ps/ResourceHandler/IncludeResourceListener/processEvent(org.apache.xmlgraphics.ps.dsc.events.DSCEvent,org.apache.xmlgraphics.ps.dsc.DSCParser)#java/lang/String/equals(java.lang.Object)
org/apache/fop/render/ps/ResourceHandler/IncludeResourceListener/processEvent(org.apache.xmlgraphics.ps.dsc.events.DSCEvent,org.apache.xmlgraphics.ps.dsc.DSCParser)#org/apache/xmlgraphics/ps/dsc/events/PostScriptLine/generate(org.apache.xmlgraphics.ps.PSGenerator)
org/apache/fop/afp/modca/AbstractNamedAFPObject/getNameBytes()#org/apache/commons/logging/Log/warn(java.lang.Object)
org/apache/fop/afp/modca/AbstractNamedAFPObject/getNameBytes()#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/afp/modca/AbstractNamedAFPObject/getNameBytes()#java/lang/StringBuilder/append(int)
org/apache/fop/afp/modca/AbstractNamedAFPObject/getNameBytes()#java/lang/String/length()
org/apache/fop/afp/modca/AbstractNamedAFPObject/getNameBytes()#java/lang/String/substring(int,int)
org/apache/fop/afp/modca/AbstractNamedAFPObject/getNameBytes()#java/lang/StringBuilder/StringBuilder()
org/apache/fop/afp/modca/AbstractNamedAFPObject/getNameBytes()#java/lang/String/getBytes(java.lang.String)
org/apache/fop/afp/modca/AbstractNamedAFPObject/getNameBytes()#java/lang/String/getBytes()
org/apache/fop/afp/modca/AbstractNamedAFPObject/getNameBytes()#java/lang/StringBuilder/toString()
org/apache/fop/afp/goca/GraphicsSetProcessColor/writeToStream(java.io.OutputStream)#java/lang/IllegalStateException/IllegalStateException()
org/apache/fop/afp/goca/GraphicsSetProcessColor/writeToStream(java.io.OutputStream)#java/awt/Color/getColorSpace()
org/apache/fop/afp/goca/GraphicsSetProcessColor/writeToStream(java.io.OutputStream)#org/apache/commons/io/output/ByteArrayOutputStream/ByteArrayOutputStream()
org/apache/fop/afp/goca/GraphicsSetProcessColor/writeToStream(java.io.OutputStream)#java/lang/Math/round(float)
org/apache/fop/afp/goca/GraphicsSetProcessColor/writeToStream(java.io.OutputStream)#org/apache/commons/io/IOUtils/closeQuietly(java.io.OutputStream)
org/apache/fop/afp/goca/GraphicsSetProcessColor/writeToStream(java.io.OutputStream)#org/apache/commons/io/output/ByteArrayOutputStream/writeTo(java.io.OutputStream)
org/apache/fop/afp/goca/GraphicsSetProcessColor/writeToStream(java.io.OutputStream)#java/io/DataOutputStream/DataOutputStream(java.io.OutputStream)
org/apache/fop/afp/goca/GraphicsSetProcessColor/writeToStream(java.io.OutputStream)#java/io/DataOutputStream/writeByte(int)
org/apache/fop/afp/goca/GraphicsSetProcessColor/writeToStream(java.io.OutputStream)#java/awt/Color/getColorComponents(float[])
org/apache/fop/afp/goca/GraphicsSetProcessColor/writeToStream(java.io.OutputStream)#java/awt/color/ColorSpace/getType()
org/apache/fop/afp/goca/GraphicsSetProcessColor/writeToStream(java.io.OutputStream)#org/apache/commons/io/output/ByteArrayOutputStream/write(int)
org/apache/fop/afp/goca/GraphicsSetProcessColor/writeToStream(java.io.OutputStream)#java/io/OutputStream/write(byte[])
org/apache/fop/render/afp/AFPGraphics2DAdapter/paintImage(org.apache.xmlgraphics.java2d.Graphics2DImagePainter,org.apache.fop.render.RendererContext,int,int,int,int)#java/awt/geom/AffineTransform/translate(double,double)
org/apache/fop/render/afp/AFPGraphics2DAdapter/paintImage(org.apache.xmlgraphics.java2d.Graphics2DImagePainter,org.apache.fop.render.RendererContext,int,int,int,int)#org/apache/fop/util/AbstractPaintingState$AbstractData/getTransform()
org/apache/fop/render/afp/AFPGraphics2DAdapter/paintImage(org.apache.xmlgraphics.java2d.Graphics2DImagePainter,org.apache.fop.render.RendererContext,int,int,int,int)#java/awt/Dimension/getHeight()
org/apache/fop/render/afp/AFPGraphics2DAdapter/paintImage(org.apache.xmlgraphics.java2d.Graphics2DImagePainter,org.apache.fop.render.RendererContext,int,int,int,int)#org/apache/fop/afp/AFPPaintingState/getData()
org/apache/fop/render/afp/AFPGraphics2DAdapter/paintImage(org.apache.xmlgraphics.java2d.Graphics2DImagePainter,org.apache.fop.render.RendererContext,int,int,int,int)#java/awt/Dimension/getWidth()
org/apache/fop/render/afp/AFPGraphics2DAdapter/paintImage(org.apache.xmlgraphics.java2d.Graphics2DImagePainter,org.apache.fop.render.RendererContext,int,int,int,int)#org/apache/fop/afp/AFPGraphics2D/drawImage(java.awt.Image,java.awt.geom.AffineTransform,java.awt.image.ImageObserver)
org/apache/fop/render/afp/AFPGraphics2DAdapter/paintImage(org.apache.xmlgraphics.java2d.Graphics2DImagePainter,org.apache.fop.render.RendererContext,int,int,int,int)#org/apache/fop/afp/AFPPaintingState/restore()
org/apache/fop/render/afp/AFPGraphics2DAdapter/paintImage(org.apache.xmlgraphics.java2d.Graphics2DImagePainter,org.apache.fop.render.RendererContext,int,int,int,int)#org/apache/fop/afp/AFPPaintingState/save()
org/apache/fop/render/afp/AFPGraphics2DAdapter/paintImage(org.apache.xmlgraphics.java2d.Graphics2DImagePainter,org.apache.fop.render.RendererContext,int,int,int,int)#org/apache/fop/render/afp/AFPGraphics2DAdapter/paintToBufferedImage(org.apache.xmlgraphics.java2d.Graphics2DImagePainter,org.apache.fop.render.RendererContext$RendererContextWrapper,int,boolean,boolean)
org/apache/fop/render/afp/AFPGraphics2DAdapter/paintImage(org.apache.xmlgraphics.java2d.Graphics2DImagePainter,org.apache.fop.render.RendererContext,int,int,int,int)#org/apache/xmlgraphics/java2d/Graphics2DImagePainter/getImageSize()
org/apache/fop/render/afp/AFPGraphics2DAdapter/paintImage(org.apache.xmlgraphics.java2d.Graphics2DImagePainter,org.apache.fop.render.RendererContext,int,int,int,int)#java/awt/geom/Rectangle2D$Double/Double(double,double,double,double)
org/apache/fop/render/afp/AFPGraphics2DAdapter/paintImage(org.apache.xmlgraphics.java2d.Graphics2DImagePainter,org.apache.fop.render.RendererContext,int,int,int,int)#java/lang/Math/round(float)
org/apache/fop/complexscripts/fonts/GlyphTable/assembleLookups(java.lang.String[],java.util.Map)#org/apache/fop/complexscripts/fonts/GlyphTable$UseSpec/UseSpec(org.apache.fop.complexscripts.fonts.GlyphTable$LookupTable,java.lang.String)
org/apache/fop/complexscripts/fonts/GlyphTable/assembleLookups(java.lang.String[],java.util.Map)#java/util/Map$Entry/getKey()
org/apache/fop/complexscripts/fonts/GlyphTable/assembleLookups(java.lang.String[],java.util.Map)#java/util/Iterator/next()
org/apache/fop/complexscripts/fonts/GlyphTable/assembleLookups(java.lang.String[],java.util.Map)#java/lang/String/equals(java.lang.Object)
org/apache/fop/complexscripts/fonts/GlyphTable/assembleLookups(java.lang.String[],java.util.Map)#java/util/Set/iterator()
org/apache/fop/complexscripts/fonts/GlyphTable/assembleLookups(java.lang.String[],java.util.Map)#org/apache/fop/complexscripts/fonts/GlyphTable$LookupSpec/getFeature()
org/apache/fop/complexscripts/fonts/GlyphTable/assembleLookups(java.lang.String[],java.util.Map)#java/util/List/iterator()
org/apache/fop/complexscripts/fonts/GlyphTable/assembleLookups(java.lang.String[],java.util.Map)#java/util/TreeSet/TreeSet()
org/apache/fop/complexscripts/fonts/GlyphTable/assembleLookups(java.lang.String[],java.util.Map)#java/util/Map/entrySet()
org/apache/fop/complexscripts/fonts/GlyphTable/assembleLookups(java.lang.String[],java.util.Map)#java/util/TreeSet/add(java.lang.Object)
org/apache/fop/complexscripts/fonts/GlyphTable/assembleLookups(java.lang.String[],java.util.Map)#java/util/Iterator/hasNext()
org/apache/fop/complexscripts/fonts/GlyphTable/assembleLookups(java.lang.String[],java.util.Map)#java/util/TreeSet/size()
org/apache/fop/complexscripts/fonts/GlyphTable/assembleLookups(java.lang.String[],java.util.Map)#java/util/Map$Entry/getValue()
org/apache/fop/complexscripts/fonts/GlyphTable/assembleLookups(java.lang.String[],java.util.Map)#java/util/TreeSet/toArray(java.lang.Object[])
org/apache/fop/complexscripts/fonts/GlyphTable/getLookupTables()#java/util/ArrayList/ArrayList(int)
org/apache/fop/complexscripts/fonts/GlyphTable/getLookupTables()#java/util/Map/get(java.lang.Object)
org/apache/fop/complexscripts/fonts/GlyphTable/getLookupTables()#java/util/TreeSet/iterator()
org/apache/fop/complexscripts/fonts/GlyphTable/getLookupTables()#java/util/List/add(java.lang.Object)
org/apache/fop/complexscripts/fonts/GlyphTable/getLookupTables()#java/util/TreeSet/TreeSet(java.util.Collection)
org/apache/fop/complexscripts/fonts/GlyphTable/getLookupTables()#java/util/Iterator/hasNext()
org/apache/fop/complexscripts/fonts/GlyphTable/getLookupTables()#java/util/TreeSet/size()
org/apache/fop/complexscripts/fonts/GlyphTable/getLookupTables()#java/util/Iterator/next()
org/apache/fop/complexscripts/fonts/GlyphTable/getLookupTables()#java/util/Map/keySet()
org/apache/fop/complexscripts/fonts/GlyphTable/matchLookupSpecs(java.lang.String,java.lang.String,java.lang.String)#org/apache/fop/complexscripts/fonts/GlyphTable$LookupSpec/getScript()
org/apache/fop/complexscripts/fonts/GlyphTable/matchLookupSpecs(java.lang.String,java.lang.String,java.lang.String)#java/util/ArrayList/ArrayList()
org/apache/fop/complexscripts/fonts/GlyphTable/matchLookupSpecs(java.lang.String,java.lang.String,java.lang.String)#java/util/Iterator/hasNext()
org/apache/fop/complexscripts/fonts/GlyphTable/matchLookupSpecs(java.lang.String,java.lang.String,java.lang.String)#org/apache/fop/complexscripts/fonts/GlyphTable$LookupSpec/getLanguage()
org/apache/fop/complexscripts/fonts/GlyphTable/matchLookupSpecs(java.lang.String,java.lang.String,java.lang.String)#java/lang/String/equals(java.lang.Object)
org/apache/fop/complexscripts/fonts/GlyphTable/matchLookupSpecs(java.lang.String,java.lang.String,java.lang.String)#java/util/Set/iterator()
org/apache/fop/complexscripts/fonts/GlyphTable/matchLookupSpecs(java.lang.String,java.lang.String,java.lang.String)#org/apache/fop/complexscripts/fonts/GlyphTable$LookupSpec/getFeature()
org/apache/fop/complexscripts/fonts/GlyphTable/matchLookupSpecs(java.lang.String,java.lang.String,java.lang.String)#java/util/List/add(java.lang.Object)
org/apache/fop/complexscripts/fonts/GlyphTable/matchLookupSpecs(java.lang.String,java.lang.String,java.lang.String)#java/util/Iterator/next()
org/apache/fop/complexscripts/fonts/GlyphTable/matchLookupSpecs(java.lang.String,java.lang.String,java.lang.String)#java/util/Map/keySet()
org/apache/fop/svg/PDFGraphics2D/fill(java.awt.Shape)#java/awt/geom/PathIterator/getWindingRule()
org/apache/fop/svg/PDFGraphics2D/fill(java.awt.Shape)#java/io/StringWriter/write(java.lang.String)
org/apache/fop/svg/PDFGraphics2D/fill(java.awt.Shape)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/svg/PDFGraphics2D/fill(java.awt.Shape)#java/awt/geom/AffineTransform/getMatrix(double[])
org/apache/fop/svg/PDFGraphics2D/fill(java.awt.Shape)#java/awt/Color/getAlpha()
org/apache/fop/svg/PDFGraphics2D/fill(java.awt.Shape)#org/apache/fop/svg/PDFGraphics2D/getColor()
org/apache/fop/svg/PDFGraphics2D/fill(java.awt.Shape)#java/awt/geom/AffineTransform/isIdentity()
org/apache/fop/svg/PDFGraphics2D/fill(java.awt.Shape)#java/awt/geom/Rectangle2D/getWidth()
org/apache/fop/svg/PDFGraphics2D/fill(java.awt.Shape)#org/apache/fop/svg/PDFGraphics2D/getPaint()
org/apache/fop/svg/PDFGraphics2D/fill(java.awt.Shape)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/svg/PDFGraphics2D/fill(java.awt.Shape)#java/awt/geom/Rectangle2D/getMinX()
org/apache/fop/svg/PDFGraphics2D/fill(java.awt.Shape)#org/apache/fop/svg/PDFGraphics2D/getBackground()
org/apache/fop/svg/PDFGraphics2D/fill(java.awt.Shape)#java/awt/geom/Rectangle2D/getHeight()
org/apache/fop/svg/PDFGraphics2D/fill(java.awt.Shape)#java/awt/geom/Rectangle2D/getMinY()
org/apache/fop/svg/PDFGraphics2D/fill(java.awt.Shape)#org/apache/fop/svg/PDFGraphics2D/getClip()
org/apache/fop/svg/PDFGraphics2D/fill(java.awt.Shape)#org/apache/fop/pdf/PDFPaintingState/checkTransform(java.awt.geom.AffineTransform)
org/apache/fop/svg/PDFGraphics2D/fill(java.awt.Shape)#java/awt/Shape/getPathIterator(java.awt.geom.AffineTransform)
org/apache/fop/svg/PDFGraphics2D/fill(java.awt.Shape)#org/apache/fop/svg/PDFGraphics2D/getTransform()
org/apache/fop/svg/PDFGraphics2D/fill(java.awt.Shape)#java/lang/StringBuilder/toString()
org/apache/fop/svg/PDFGraphics2D/createPattern(org.apache.batik.gvt.PatternPaint,boolean)#java/awt/geom/Rectangle2D/getY()
org/apache/fop/svg/PDFGraphics2D/createPattern(org.apache.batik.gvt.PatternPaint,boolean)#org/apache/batik/gvt/PatternPaint/getPatternRect()
org/apache/fop/svg/PDFGraphics2D/createPattern(org.apache.batik.gvt.PatternPaint,boolean)#java/util/ArrayList/ArrayList()
org/apache/fop/svg/PDFGraphics2D/createPattern(org.apache.batik.gvt.PatternPaint,boolean)#java/awt/geom/AffineTransform/AffineTransform(java.awt.geom.AffineTransform)
org/apache/fop/svg/PDFGraphics2D/createPattern(org.apache.batik.gvt.PatternPaint,boolean)#java/awt/geom/AffineTransform/getMatrix(double[])
org/apache/fop/svg/PDFGraphics2D/createPattern(org.apache.batik.gvt.PatternPaint,boolean)#java/awt/geom/AffineTransform/concatenate(java.awt.geom.AffineTransform)
org/apache/fop/svg/PDFGraphics2D/createPattern(org.apache.batik.gvt.PatternPaint,boolean)#org/apache/xmlgraphics/java2d/GraphicContext/GraphicContext()
org/apache/fop/svg/PDFGraphics2D/createPattern(org.apache.batik.gvt.PatternPaint,boolean)#org/apache/batik/gvt/GraphicsNode/paint(java.awt.Graphics2D)
org/apache/fop/svg/PDFGraphics2D/createPattern(org.apache.batik.gvt.PatternPaint,boolean)#org/apache/xmlgraphics/java2d/GraphicContext/validateTransformStack()
org/apache/fop/svg/PDFGraphics2D/createPattern(org.apache.batik.gvt.PatternPaint,boolean)#java/awt/geom/Rectangle2D/getX()
org/apache/fop/svg/PDFGraphics2D/createPattern(org.apache.batik.gvt.PatternPaint,boolean)#org/apache/batik/gvt/PatternPaint/getPatternTransform()
org/apache/fop/svg/PDFGraphics2D/createPattern(org.apache.batik.gvt.PatternPaint,boolean)#java/io/StringWriter/write(java.lang.String)
org/apache/fop/svg/PDFGraphics2D/createPattern(org.apache.batik.gvt.PatternPaint,boolean)#org/apache/fop/svg/PDFGraphics2D/getRenderingHints()
org/apache/fop/svg/PDFGraphics2D/createPattern(org.apache.batik.gvt.PatternPaint,boolean)#java/lang/Double/Double(double)
org/apache/fop/svg/PDFGraphics2D/createPattern(org.apache.batik.gvt.PatternPaint,boolean)#java/awt/geom/Rectangle2D/getWidth()
org/apache/fop/svg/PDFGraphics2D/createPattern(org.apache.batik.gvt.PatternPaint,boolean)#java/awt/geom/Rectangle2D/getHeight()
org/apache/fop/svg/PDFGraphics2D/createPattern(org.apache.batik.gvt.PatternPaint,boolean)#org/apache/batik/gvt/PatternPaint/getGraphicsNode()
org/apache/fop/svg/PDFGraphics2D/createPattern(org.apache.batik.gvt.PatternPaint,boolean)#java/util/List/add(java.lang.Object)
org/apache/fop/svg/PDFGraphics2D/createPattern(org.apache.batik.gvt.PatternPaint,boolean)#org/apache/fop/svg/PDFGraphics2D/setRenderingHints(java.util.Map)
org/apache/fop/svg/PDFGraphics2D/createPattern(org.apache.batik.gvt.PatternPaint,boolean)#org/apache/fop/svg/PDFGraphics2D/getTransform()
org/apache/fop/svg/PDFGraphics2D/draw(java.awt.Shape)#java/awt/geom/AffineTransform/getMatrix(double[])
org/apache/fop/svg/PDFGraphics2D/draw(java.awt.Shape)#java/awt/Color/getAlpha()
org/apache/fop/svg/PDFGraphics2D/draw(java.awt.Shape)#org/apache/fop/svg/PDFGraphics2D/getColor()
org/apache/fop/svg/PDFGraphics2D/draw(java.awt.Shape)#org/apache/fop/svg/PDFGraphics2D/getBackground()
org/apache/fop/svg/PDFGraphics2D/draw(java.awt.Shape)#java/awt/geom/AffineTransform/isIdentity()
org/apache/fop/svg/PDFGraphics2D/draw(java.awt.Shape)#org/apache/fop/svg/PDFGraphics2D/getPaint()
org/apache/fop/svg/PDFGraphics2D/draw(java.awt.Shape)#org/apache/fop/svg/PDFGraphics2D/getClip()
org/apache/fop/svg/PDFGraphics2D/draw(java.awt.Shape)#org/apache/fop/pdf/PDFPaintingState/checkTransform(java.awt.geom.AffineTransform)
org/apache/fop/svg/PDFGraphics2D/draw(java.awt.Shape)#java/awt/Shape/getPathIterator(java.awt.geom.AffineTransform)
org/apache/fop/svg/PDFGraphics2D/draw(java.awt.Shape)#org/apache/fop/svg/PDFGraphics2D/getTransform()
org/apache/fop/svg/PDFGraphics2D/draw(java.awt.Shape)#java/awt/Stroke/createStrokedShape(java.awt.Shape)
org/apache/fop/svg/PDFGraphics2D/draw(java.awt.Shape)#org/apache/fop/svg/PDFGraphics2D/getStroke()
org/apache/fop/svg/PDFGraphics2D/applyUnknownPaint(java.awt.Paint,java.awt.Shape)#java/awt/geom/Rectangle2D/getY()
org/apache/fop/svg/PDFGraphics2D/applyUnknownPaint(java.awt.Paint,java.awt.Shape)#java/lang/Object/toString()
org/apache/fop/svg/PDFGraphics2D/applyUnknownPaint(java.awt.Paint,java.awt.Shape)#org/apache/fop/svg/PDFGraphics2D/getRenderingHints()
org/apache/fop/svg/PDFGraphics2D/applyUnknownPaint(java.awt.Paint,java.awt.Shape)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/svg/PDFGraphics2D/applyUnknownPaint(java.awt.Paint,java.awt.Shape)#java/awt/geom/Rectangle2D/getWidth()
org/apache/fop/svg/PDFGraphics2D/applyUnknownPaint(java.awt.Paint,java.awt.Shape)#java/awt/Rectangle/intersection(java.awt.Rectangle)
org/apache/fop/svg/PDFGraphics2D/applyUnknownPaint(java.awt.Paint,java.awt.Shape)#java/awt/geom/Rectangle2D/getHeight()
org/apache/fop/svg/PDFGraphics2D/applyUnknownPaint(java.awt.Paint,java.awt.Shape)#java/awt/Shape/getBounds()
org/apache/fop/svg/PDFGraphics2D/applyUnknownPaint(java.awt.Paint,java.awt.Shape)#java/io/StringWriter/write(java.lang.String)
org/apache/fop/svg/PDFGraphics2D/applyUnknownPaint(java.awt.Paint,java.awt.Shape)#java/awt/geom/Rectangle2D/intersect(java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D)
org/apache/fop/svg/PDFGraphics2D/applyUnknownPaint(java.awt.Paint,java.awt.Shape)#java/awt/geom/Rectangle2D/intersects(java.awt.geom.Rectangle2D)
org/apache/fop/svg/PDFGraphics2D/applyUnknownPaint(java.awt.Paint,java.awt.Shape)#java/awt/image/BufferedImage/getRGB(int,int,int,int,int[],int,int)
org/apache/fop/svg/PDFGraphics2D/applyUnknownPaint(java.awt.Paint,java.awt.Shape)#java/awt/Shape/getBounds2D()
org/apache/fop/svg/PDFGraphics2D/applyUnknownPaint(java.awt.Paint,java.awt.Shape)#java/awt/image/WritableRaster/createWritableTranslatedChild(int,int)
org/apache/fop/svg/PDFGraphics2D/applyUnknownPaint(java.awt.Paint,java.awt.Shape)#java/awt/color/ColorSpace/getInstance(int)
org/apache/fop/svg/PDFGraphics2D/applyUnknownPaint(java.awt.Paint,java.awt.Shape)#java/awt/image/ColorModel/isAlphaPremultiplied()
org/apache/fop/svg/PDFGraphics2D/applyUnknownPaint(java.awt.Paint,java.awt.Shape)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/svg/PDFGraphics2D/applyUnknownPaint(java.awt.Paint,java.awt.Shape)#java/awt/image/ColorModel/hasAlpha()
org/apache/fop/svg/PDFGraphics2D/applyUnknownPaint(java.awt.Paint,java.awt.Shape)#org/apache/fop/svg/PDFGraphics2D/getClip()
org/apache/fop/svg/PDFGraphics2D/applyUnknownPaint(java.awt.Paint,java.awt.Shape)#java/awt/image/BufferedImage/BufferedImage(java.awt.image.ColorModel,java.awt.image.WritableRaster,boolean,java.util.Hashtable)
org/apache/fop/svg/PDFGraphics2D/applyUnknownPaint(java.awt.Paint,java.awt.Shape)#java/awt/PaintContext/getColorModel()
org/apache/fop/svg/PDFGraphics2D/applyUnknownPaint(java.awt.Paint,java.awt.Shape)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/fop/svg/PDFGraphics2D/applyUnknownPaint(java.awt.Paint,java.awt.Shape)#java/awt/Paint/createContext(java.awt.image.ColorModel,java.awt.Rectangle,java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform,java.awt.RenderingHints)
org/apache/fop/svg/PDFGraphics2D/applyUnknownPaint(java.awt.Paint,java.awt.Shape)#java/awt/Rectangle/intersects(java.awt.Rectangle)
org/apache/fop/svg/PDFGraphics2D/applyUnknownPaint(java.awt.Paint,java.awt.Shape)#org/apache/fop/svg/PDFGraphics2D/getTransform()
org/apache/fop/svg/PDFGraphics2D/applyUnknownPaint(java.awt.Paint,java.awt.Shape)#org/apache/fop/pdf/PDFImageXObject/makeReference()
org/apache/fop/svg/PDFGraphics2D/applyUnknownPaint(java.awt.Paint,java.awt.Shape)#java/lang/AssertionError/AssertionError()
org/apache/fop/svg/PDFGraphics2D/applyUnknownPaint(java.awt.Paint,java.awt.Shape)#java/awt/image/DirectColorModel/DirectColorModel(java.awt.color.ColorSpace,int,int,int,int,int,boolean,int)
org/apache/fop/svg/PDFGraphics2D/applyUnknownPaint(java.awt.Paint,java.awt.Shape)#java/awt/geom/AffineTransform/createTransformedShape(java.awt.Shape)
org/apache/fop/svg/PDFGraphics2D/applyUnknownPaint(java.awt.Paint,java.awt.Shape)#java/lang/StringBuilder/toString()
org/apache/fop/svg/PDFGraphics2D/applyUnknownPaint(java.awt.Paint,java.awt.Shape)#java/awt/geom/Rectangle2D/getX()
org/apache/fop/svg/PDFGraphics2D/applyUnknownPaint(java.awt.Paint,java.awt.Shape)#java/awt/PaintContext/getRaster(int,int,int,int)
org/apache/fop/svg/PDFGraphics2D/addNativeImage(org.apache.xmlgraphics.image.loader.Image,float,float,float,float)#java/lang/Class/getName()
org/apache/fop/svg/PDFGraphics2D/addNativeImage(org.apache.xmlgraphics.image.loader.Image,float,float,float,float)#java/lang/Object/hashCode()
org/apache/fop/svg/PDFGraphics2D/addNativeImage(org.apache.xmlgraphics.image.loader.Image,float,float,float,float)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/svg/PDFGraphics2D/addNativeImage(org.apache.xmlgraphics.image.loader.Image,float,float,float,float)#java/lang/Object/getClass()
org/apache/fop/svg/PDFGraphics2D/addNativeImage(org.apache.xmlgraphics.image.loader.Image,float,float,float,float)#java/lang/StringBuilder/toString()
org/apache/fop/svg/PDFGraphics2D/addNativeImage(org.apache.xmlgraphics.image.loader.Image,float,float,float,float)#org/apache/xmlgraphics/image/loader/Image/getInfo()
org/apache/fop/svg/PDFGraphics2D/addNativeImage(org.apache.xmlgraphics.image.loader.Image,float,float,float,float)#java/awt/geom/AffineTransform/translate(double,double)
org/apache/fop/svg/PDFGraphics2D/addNativeImage(org.apache.xmlgraphics.image.loader.Image,float,float,float,float)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/svg/PDFGraphics2D/addNativeImage(org.apache.xmlgraphics.image.loader.Image,float,float,float,float)#java/lang/StringBuilder/append(int)
org/apache/fop/svg/PDFGraphics2D/addNativeImage(org.apache.xmlgraphics.image.loader.Image,float,float,float,float)#org/apache/xmlgraphics/image/loader/ImageInfo/getOriginalURI()
org/apache/fop/svg/PDFGraphics2D/addNativeImage(org.apache.xmlgraphics.image.loader.Image,float,float,float,float)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/fop/svg/PDFGraphics2D/addNativeImage(org.apache.xmlgraphics.image.loader.Image,float,float,float,float)#java/awt/geom/AffineTransform/AffineTransform()
org/apache/fop/svg/PDFGraphics2D/drawString(java.lang.String,float,float)#java/io/StringWriter/write(java.lang.String)
org/apache/fop/svg/PDFGraphics2D/drawString(java.lang.String,float,float)#java/awt/geom/AffineTransform/getMatrix(double[])
org/apache/fop/svg/PDFGraphics2D/drawString(java.lang.String,float,float)#java/awt/Color/getAlpha()
org/apache/fop/svg/PDFGraphics2D/drawString(java.lang.String,float,float)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/svg/PDFGraphics2D/drawString(java.lang.String,float,float)#java/awt/geom/AffineTransform/concatenate(java.awt.geom.AffineTransform)
org/apache/fop/svg/PDFGraphics2D/drawString(java.lang.String,float,float)#org/apache/fop/svg/PDFGraphics2D/getFont()
org/apache/fop/svg/PDFGraphics2D/drawString(java.lang.String,float,float)#java/lang/Integer/valueOf(int)
org/apache/fop/svg/PDFGraphics2D/drawString(java.lang.String,float,float)#java/awt/geom/AffineTransform/AffineTransform()
org/apache/fop/svg/PDFGraphics2D/drawString(java.lang.String,float,float)#java/awt/geom/AffineTransform/translate(double,double)
org/apache/fop/svg/PDFGraphics2D/drawString(java.lang.String,float,float)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/svg/PDFGraphics2D/drawString(java.lang.String,float,float)#java/lang/String/charAt(int)
org/apache/fop/svg/PDFGraphics2D/drawString(java.lang.String,float,float)#java/awt/geom/AffineTransform/scale(double,double)
org/apache/fop/svg/PDFGraphics2D/drawString(java.lang.String,float,float)#java/lang/String/length()
org/apache/fop/svg/PDFGraphics2D/drawString(java.lang.String,float,float)#java/util/Map/isEmpty()
org/apache/fop/svg/PDFGraphics2D/drawString(java.lang.String,float,float)#java/io/StringWriter/write(int)
org/apache/fop/svg/PDFGraphics2D/drawString(java.lang.String,float,float)#org/apache/fop/svg/PDFGraphics2D/getPaint()
org/apache/fop/svg/PDFGraphics2D/drawString(java.lang.String,float,float)#java/awt/Font/getTransform()
org/apache/fop/svg/PDFGraphics2D/drawString(java.lang.String,float,float)#org/apache/fop/svg/PDFGraphics2D/getColor()
org/apache/fop/svg/PDFGraphics2D/drawString(java.lang.String,float,float)#org/apache/fop/svg/PDFGraphics2D/getClip()
org/apache/fop/svg/PDFGraphics2D/drawString(java.lang.String,float,float)#org/apache/fop/svg/PDFGraphics2D/getTransform()
org/apache/fop/svg/PDFGraphics2D/drawString(java.lang.String,float,float)#java/lang/StringBuilder/toString()
org/apache/fop/svg/PDFGraphics2D/drawString(java.lang.String,float,float)#java/lang/Integer/toOctalString(int)
org/apache/fop/svg/PDFGraphics2D/applyPaint(java.awt.Paint,boolean)#java/awt/GradientPaint/getColor2()
org/apache/fop/svg/PDFGraphics2D/applyPaint(java.awt.Paint,boolean)#java/io/StringWriter/write(java.lang.String)
org/apache/fop/svg/PDFGraphics2D/applyPaint(java.awt.Paint,boolean)#org/apache/batik/ext/awt/LinearGradientPaint/LinearGradientPaint(float,float,float,float,float[],java.awt.Color[],org.apache.batik.ext.awt.MultipleGradientPaint$CycleMethodEnum)
org/apache/fop/svg/PDFGraphics2D/applyPaint(java.awt.Paint,boolean)#java/awt/GradientPaint/getPoint2()
org/apache/fop/svg/PDFGraphics2D/applyPaint(java.awt.Paint,boolean)#java/awt/GradientPaint/getPoint1()
org/apache/fop/svg/PDFGraphics2D/applyPaint(java.awt.Paint,boolean)#org/apache/fop/svg/PDFGraphics2D/getTransform()
org/apache/fop/svg/PDFGraphics2D/applyPaint(java.awt.Paint,boolean)#java/awt/geom/Point2D/getX()
org/apache/fop/svg/PDFGraphics2D/applyPaint(java.awt.Paint,boolean)#java/awt/GradientPaint/isCyclic()
org/apache/fop/svg/PDFGraphics2D/applyPaint(java.awt.Paint,boolean)#java/awt/GradientPaint/getColor1()
org/apache/fop/svg/PDFGraphics2D/applyPaint(java.awt.Paint,boolean)#java/awt/geom/Point2D/getY()
org/apache/fop/svg/PDFGraphics2D/drawImage(java.awt.Image,int,int,int,int,java.awt.image.ImageObserver)#java/awt/Rectangle/Rectangle(int,int,int,int)
org/apache/fop/svg/PDFGraphics2D/drawImage(java.awt.Image,int,int,int,int,java.awt.image.ImageObserver)#java/awt/image/BufferedImage/getHeight()
org/apache/fop/svg/PDFGraphics2D/drawImage(java.awt.Image,int,int,int,int,java.awt.image.ImageObserver)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/svg/PDFGraphics2D/drawImage(java.awt.Image,int,int,int,int,java.awt.image.ImageObserver)#org/apache/xmlgraphics/java2d/GraphicContext/getComposite()
org/apache/fop/svg/PDFGraphics2D/drawImage(java.awt.Image,int,int,int,int,java.awt.image.ImageObserver)#java/lang/StringBuilder/toString()
org/apache/fop/svg/PDFGraphics2D/drawImage(java.awt.Image,int,int,int,int,java.awt.image.ImageObserver)#java/awt/Color/Color(int,int,int,int)
org/apache/fop/svg/PDFGraphics2D/drawImage(java.awt.Image,int,int,int,int,java.awt.image.ImageObserver)#java/awt/Dimension/Dimension(int,int)
org/apache/fop/svg/PDFGraphics2D/drawImage(java.awt.Image,int,int,int,int,java.awt.image.ImageObserver)#java/lang/Object/toString()
org/apache/fop/svg/PDFGraphics2D/drawImage(java.awt.Image,int,int,int,int,java.awt.image.ImageObserver)#java/awt/Graphics2D/drawImage(java.awt.Image,int,int,int,int,java.awt.image.ImageObserver)
org/apache/fop/svg/PDFGraphics2D/drawImage(java.awt.Image,int,int,int,int,java.awt.image.ImageObserver)#java/awt/geom/AffineTransform/translate(double,double)
org/apache/fop/svg/PDFGraphics2D/drawImage(java.awt.Image,int,int,int,int,java.awt.image.ImageObserver)#java/awt/Graphics2D/dispose()
org/apache/fop/svg/PDFGraphics2D/drawImage(java.awt.Image,int,int,int,int,java.awt.image.ImageObserver)#java/awt/Graphics2D/setPaint(java.awt.Paint)
org/apache/fop/svg/PDFGraphics2D/drawImage(java.awt.Image,int,int,int,int,java.awt.image.ImageObserver)#java/awt/Graphics2D/setComposite(java.awt.Composite)
org/apache/fop/svg/PDFGraphics2D/drawImage(java.awt.Image,int,int,int,int,java.awt.image.ImageObserver)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/svg/PDFGraphics2D/drawImage(java.awt.Image,int,int,int,int,java.awt.image.ImageObserver)#java/awt/image/BufferedImage/createGraphics()
org/apache/fop/svg/PDFGraphics2D/drawImage(java.awt.Image,int,int,int,int,java.awt.image.ImageObserver)#java/awt/image/BufferedImage/getWidth()
org/apache/fop/svg/PDFGraphics2D/drawImage(java.awt.Image,int,int,int,int,java.awt.image.ImageObserver)#java/awt/Graphics2D/setBackground(java.awt.Color)
org/apache/fop/svg/PDFGraphics2D/drawImage(java.awt.Image,int,int,int,int,java.awt.image.ImageObserver)#java/awt/Graphics2D/clip(java.awt.Shape)
org/apache/fop/svg/PDFGraphics2D/drawImage(java.awt.Image,int,int,int,int,java.awt.image.ImageObserver)#java/awt/Graphics2D/fillRect(int,int,int,int)
org/apache/fop/svg/PDFGraphics2D/drawImage(java.awt.Image,int,int,int,int,java.awt.image.ImageObserver)#java/awt/geom/AffineTransform/AffineTransform()
org/apache/fop/svg/PDFGraphics2D/applyStroke(java.awt.Stroke)#java/awt/BasicStroke/getEndCap()
org/apache/fop/svg/PDFGraphics2D/applyStroke(java.awt.Stroke)#java/io/StringWriter/write(java.lang.String)
org/apache/fop/svg/PDFGraphics2D/applyStroke(java.awt.Stroke)#java/awt/BasicStroke/getLineJoin()
org/apache/fop/svg/PDFGraphics2D/applyStroke(java.awt.Stroke)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/svg/PDFGraphics2D/applyStroke(java.awt.Stroke)#java/lang/Math/max(float,float)
org/apache/fop/svg/PDFGraphics2D/applyStroke(java.awt.Stroke)#java/awt/BasicStroke/getDashPhase()
org/apache/fop/svg/PDFGraphics2D/applyStroke(java.awt.Stroke)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/svg/PDFGraphics2D/applyStroke(java.awt.Stroke)#java/awt/BasicStroke/getDashArray()
org/apache/fop/svg/PDFGraphics2D/applyStroke(java.awt.Stroke)#java/lang/StringBuilder/toString()
org/apache/fop/svg/PDFGraphics2D/applyStroke(java.awt.Stroke)#java/awt/BasicStroke/getMiterLimit()
org/apache/fop/svg/PDFGraphics2D/applyStroke(java.awt.Stroke)#java/awt/BasicStroke/getLineWidth()
org/apache/fop/svg/PDFTranscoder/transcode(org.w3c.dom.Document,java.lang.String,org.apache.batik.transcoder.TranscoderOutput)#org/apache/batik/transcoder/TranscoderException/TranscoderException(java.lang.String,java.lang.Exception)
org/apache/fop/svg/PDFTranscoder/transcode(org.w3c.dom.Document,java.lang.String,org.apache.batik.transcoder.TranscoderOutput)#org/apache/batik/transcoder/TranscoderException/TranscoderException(java.lang.Exception)
org/apache/fop/svg/PDFTranscoder/transcode(org.w3c.dom.Document,java.lang.String,org.apache.batik.transcoder.TranscoderOutput)#org/apache/fop/svg/PDFTranscoder/isTextStroked()
org/apache/fop/svg/PDFTranscoder/transcode(org.w3c.dom.Document,java.lang.String,org.apache.batik.transcoder.TranscoderOutput)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/svg/PDFTranscoder/transcode(org.w3c.dom.Document,java.lang.String,org.apache.batik.transcoder.TranscoderOutput)#org/apache/fop/svg/PDFTranscoder/getDeviceResolution()
org/apache/fop/svg/PDFTranscoder/transcode(org.w3c.dom.Document,java.lang.String,org.apache.batik.transcoder.TranscoderOutput)#org/apache/batik/transcoder/TranscodingHints/get(java.lang.Object)
org/apache/fop/svg/PDFTranscoder/transcode(org.w3c.dom.Document,java.lang.String,org.apache.batik.transcoder.TranscoderOutput)#org/apache/fop/svg/AbstractFOPTranscoder$FOPTranscoderUserAgent/setFontFamilyResolver(org.apache.fop.svg.font.FOPFontFamilyResolver)
org/apache/fop/svg/PDFTranscoder/transcode(org.w3c.dom.Document,java.lang.String,org.apache.batik.transcoder.TranscoderOutput)#java/io/BufferedOutputStream/BufferedOutputStream(java.io.OutputStream)
org/apache/fop/svg/PDFTranscoder/transcode(org.w3c.dom.Document,java.lang.String,org.apache.batik.transcoder.TranscoderOutput)#org/apache/batik/bridge/UnitProcessor/userSpaceToSVG(float,short,short,org.apache.batik.parser.UnitProcessor$Context)
org/apache/fop/svg/PDFTranscoder/transcode(org.w3c.dom.Document,java.lang.String,org.apache.batik.transcoder.TranscoderOutput)#org/apache/fop/svg/PDFTranscoder/setupImageInfrastructure(java.lang.String)
org/apache/fop/svg/PDFTranscoder/transcode(org.w3c.dom.Document,java.lang.String,org.apache.batik.transcoder.TranscoderOutput)#org/apache/batik/transcoder/TranscoderOutput/getOutputStream()
org/apache/fop/svg/PDFTranscoder/transcode(org.w3c.dom.Document,java.lang.String,org.apache.batik.transcoder.TranscoderOutput)#org/apache/fop/svg/AbstractFOPTranscoder/transcode(org.w3c.dom.Document,java.lang.String,org.apache.batik.transcoder.TranscoderOutput)
org/apache/fop/svg/PDFTranscoder/transcode(org.w3c.dom.Document,java.lang.String,org.apache.batik.transcoder.TranscoderOutput)#java/lang/StringBuilder/append(int)
org/apache/fop/svg/PDFTranscoder/transcode(org.w3c.dom.Document,java.lang.String,org.apache.batik.transcoder.TranscoderOutput)#org/apache/batik/bridge/UnitProcessor/createContext(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)
org/apache/fop/svg/PDFTranscoder/transcode(org.w3c.dom.Document,java.lang.String,org.apache.batik.transcoder.TranscoderOutput)#org/apache/fop/svg/PDFDocumentGraphics2D/setRenderingHint(java.awt.RenderingHints$Key,java.lang.Object)
org/apache/fop/svg/PDFTranscoder/transcode(org.w3c.dom.Document,java.lang.String,org.apache.batik.transcoder.TranscoderOutput)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/svg/PDFTranscoder/transcode(org.w3c.dom.Document,java.lang.String,org.apache.batik.transcoder.TranscoderOutput)#org/apache/commons/logging/Log/trace(java.lang.Object)
org/apache/fop/svg/PDFTranscoder/transcode(org.w3c.dom.Document,java.lang.String,org.apache.batik.transcoder.TranscoderOutput)#org/apache/batik/transcoder/TranscodingHints/containsKey(java.lang.Object)
org/apache/fop/svg/PDFTranscoder/transcode(org.w3c.dom.Document,java.lang.String,org.apache.batik.transcoder.TranscoderOutput)#org/apache/fop/svg/PDFTranscoder/getEffectiveConfiguration()
org/apache/fop/svg/PDFTranscoder/transcode(org.w3c.dom.Document,java.lang.String,org.apache.batik.transcoder.TranscoderOutput)#org/apache/fop/svg/PDFDocumentGraphics2D/setGraphicContext(org.apache.xmlgraphics.java2d.GraphicContext)
org/apache/fop/svg/PDFTranscoder/transcode(org.w3c.dom.Document,java.lang.String,org.apache.batik.transcoder.TranscoderOutput)#org/apache/fop/svg/PDFTranscoder/getLogger()
org/apache/fop/svg/PDFTranscoder/transcode(org.w3c.dom.Document,java.lang.String,org.apache.batik.transcoder.TranscoderOutput)#org/apache/fop/svg/PDFDocumentGraphics2D/transform(java.awt.geom.AffineTransform)
org/apache/fop/svg/PDFTranscoder/transcode(org.w3c.dom.Document,java.lang.String,org.apache.batik.transcoder.TranscoderOutput)#org/apache/xmlgraphics/java2d/GraphicContext/GraphicContext()
org/apache/fop/svg/PDFTranscoder/transcode(org.w3c.dom.Document,java.lang.String,org.apache.batik.transcoder.TranscoderOutput)#org/apache/commons/logging/Log/isTraceEnabled()
org/apache/fop/svg/PDFTranscoder/transcode(org.w3c.dom.Document,java.lang.String,org.apache.batik.transcoder.TranscoderOutput)#org/w3c/dom/Document/getDocumentElement()
org/apache/fop/svg/PDFTranscoder/transcode(org.w3c.dom.Document,java.lang.String,org.apache.batik.transcoder.TranscoderOutput)#org/apache/batik/gvt/GraphicsNode/paint(java.awt.Graphics2D)
org/apache/fop/svg/PDFTranscoder/transcode(org.w3c.dom.Document,java.lang.String,org.apache.batik.transcoder.TranscoderOutput)#java/lang/StringBuilder/append(float)
org/apache/fop/svg/PDFTranscoder/transcode(org.w3c.dom.Document,java.lang.String,org.apache.batik.transcoder.TranscoderOutput)#java/lang/StringBuilder/toString()
org/apache/fop/fonts/base14/TimesItalic/<clinit>()#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/fop/fonts/base14/TimesItalic/<clinit>()#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/fonts/base14/TimesItalic/<clinit>()#java/lang/Integer/Integer(int)
org/apache/fop/fonts/base14/TimesItalic/<clinit>()#java/awt/Rectangle/Rectangle(int,int,int,int)
org/apache/fop/fonts/base14/TimesItalic/<clinit>()#java/util/Map/get(java.lang.Object)
org/apache/fop/fonts/base14/TimesItalic/<clinit>()#java/util/HashMap/HashMap()
org/apache/fop/fonts/base14/TimesItalic/<clinit>()#java/lang/StringBuilder/StringBuilder()
org/apache/fop/fonts/base14/TimesItalic/<clinit>()#java/util/HashSet/HashSet()
org/apache/fop/fonts/base14/TimesItalic/<clinit>()#java/util/Set/add(java.lang.Object)
org/apache/fop/fonts/base14/TimesItalic/<clinit>()#java/lang/StringBuilder/toString()
org/apache/fop/fonts/base14/TimesItalic/<clinit>()#java/net/URI/URI(java.lang.String)
org/apache/fop/fonts/base14/TimesItalic/<clinit>()#java/lang/String/toLowerCase()
org/apache/fop/image/loader/batik/ImageConverterG2D2SVG/convert(org.apache.xmlgraphics.image.loader.Image,java.util.Map)#org/apache/xmlgraphics/java2d/Graphics2DImagePainter/paint(java.awt.Graphics2D,java.awt.geom.Rectangle2D)
org/apache/fop/image/loader/batik/ImageConverterG2D2SVG/convert(org.apache.xmlgraphics.image.loader.Image,java.util.Map)#org/apache/xmlgraphics/image/loader/Image/getInfo()
org/apache/fop/image/loader/batik/ImageConverterG2D2SVG/convert(org.apache.xmlgraphics.image.loader.Image,java.util.Map)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/image/loader/batik/ImageConverterG2D2SVG/convert(org.apache.xmlgraphics.image.loader.Image,java.util.Map)#org/apache/batik/svggen/SVGGeneratorContext/setEmbeddedFontsOn(boolean)
org/apache/fop/image/loader/batik/ImageConverterG2D2SVG/convert(org.apache.xmlgraphics.image.loader.Image,java.util.Map)#java/lang/StringBuilder/append(int)
org/apache/fop/image/loader/batik/ImageConverterG2D2SVG/convert(org.apache.xmlgraphics.image.loader.Image,java.util.Map)#org/apache/batik/svggen/SVGGraphics2D/SVGGraphics2D(org.apache.batik.svggen.SVGGeneratorContext,boolean)
org/apache/fop/image/loader/batik/ImageConverterG2D2SVG/convert(org.apache.xmlgraphics.image.loader.Image,java.util.Map)#org/apache/batik/svggen/SVGGraphics2D/setSVGCanvasSize(java.awt.Dimension)
org/apache/fop/image/loader/batik/ImageConverterG2D2SVG/convert(org.apache.xmlgraphics.image.loader.Image,java.util.Map)#org/apache/batik/dom/GenericDOMImplementation/getDOMImplementation()
org/apache/fop/image/loader/batik/ImageConverterG2D2SVG/convert(org.apache.xmlgraphics.image.loader.Image,java.util.Map)#org/apache/batik/svggen/SVGGraphics2D/dispose()
org/apache/fop/image/loader/batik/ImageConverterG2D2SVG/convert(org.apache.xmlgraphics.image.loader.Image,java.util.Map)#org/w3c/dom/Document/getDocumentElement()
org/apache/fop/image/loader/batik/ImageConverterG2D2SVG/convert(org.apache.xmlgraphics.image.loader.Image,java.util.Map)#org/apache/xmlgraphics/image/loader/impl/ImageGraphics2D/getGraphics2DImagePainter()
org/apache/fop/image/loader/batik/ImageConverterG2D2SVG/convert(org.apache.xmlgraphics.image.loader.Image,java.util.Map)#org/apache/xmlgraphics/image/loader/ImageSize/getDimensionMpt()
org/apache/fop/image/loader/batik/ImageConverterG2D2SVG/convert(org.apache.xmlgraphics.image.loader.Image,java.util.Map)#org/apache/batik/svggen/SVGGeneratorContext/createDefault(org.w3c.dom.Document)
org/apache/fop/image/loader/batik/ImageConverterG2D2SVG/convert(org.apache.xmlgraphics.image.loader.Image,java.util.Map)#org/w3c/dom/Element/setAttribute(java.lang.String,java.lang.String)
org/apache/fop/image/loader/batik/ImageConverterG2D2SVG/convert(org.apache.xmlgraphics.image.loader.Image,java.util.Map)#org/apache/xmlgraphics/image/loader/impl/ImageXMLDOM/ImageXMLDOM(org.apache.xmlgraphics.image.loader.ImageInfo,org.w3c.dom.Document,org.apache.xmlgraphics.image.loader.XMLNamespaceEnabledImageFlavor)
org/apache/fop/image/loader/batik/ImageConverterG2D2SVG/convert(org.apache.xmlgraphics.image.loader.Image,java.util.Map)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/image/loader/batik/ImageConverterG2D2SVG/convert(org.apache.xmlgraphics.image.loader.Image,java.util.Map)#java/awt/geom/Rectangle2D$Float/Float(float,float,float,float)
org/apache/fop/image/loader/batik/ImageConverterG2D2SVG/convert(org.apache.xmlgraphics.image.loader.Image,java.util.Map)#org/apache/batik/svggen/SVGGeneratorContext/setComment(java.lang.String)
org/apache/fop/image/loader/batik/ImageConverterG2D2SVG/convert(org.apache.xmlgraphics.image.loader.Image,java.util.Map)#org/apache/batik/svggen/SVGGraphics2D/getRoot(org.w3c.dom.Element)
org/apache/fop/image/loader/batik/ImageConverterG2D2SVG/convert(org.apache.xmlgraphics.image.loader.Image,java.util.Map)#org/w3c/dom/DOMImplementation/createDocument(java.lang.String,java.lang.String,org.w3c.dom.DocumentType)
org/apache/fop/image/loader/batik/ImageConverterG2D2SVG/convert(org.apache.xmlgraphics.image.loader.Image,java.util.Map)#org/apache/xmlgraphics/image/loader/Image/getSize()
org/apache/fop/image/loader/batik/ImageConverterG2D2SVG/convert(org.apache.xmlgraphics.image.loader.Image,java.util.Map)#java/lang/StringBuilder/toString()
org/apache/fop/image/loader/batik/ImageConverterG2D2SVG/convert(org.apache.xmlgraphics.image.loader.Image,java.util.Map)#org/apache/fop/image/loader/batik/ImageConverterG2D2SVG/checkSourceFlavor(org.apache.xmlgraphics.image.loader.Image)
org/apache/fop/render/pcl/PCLRenderingUtil/transformedPoint(int,int,java.awt.geom.AffineTransform,org.apache.fop.render.pcl.PCLPageDefinition,int)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/apache/fop/render/pcl/PCLRenderingUtil/transformedPoint(int,int,java.awt.geom.AffineTransform,org.apache.fop.render.pcl.PCLPageDefinition,int)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/render/pcl/PCLRenderingUtil/transformedPoint(int,int,java.awt.geom.AffineTransform,org.apache.fop.render.pcl.PCLPageDefinition,int)#java/awt/geom/AffineTransform/transform(java.awt.geom.Point2D,java.awt.geom.Point2D)
org/apache/fop/render/pcl/PCLRenderingUtil/transformedPoint(int,int,java.awt.geom.AffineTransform,org.apache.fop.render.pcl.PCLPageDefinition,int)#java/lang/StringBuilder/append(int)
org/apache/fop/render/pcl/PCLRenderingUtil/transformedPoint(int,int,java.awt.geom.AffineTransform,org.apache.fop.render.pcl.PCLPageDefinition,int)#java/awt/geom/Point2D$Float/Float(float,float)
org/apache/fop/render/pcl/PCLRenderingUtil/transformedPoint(int,int,java.awt.geom.AffineTransform,org.apache.fop.render.pcl.PCLPageDefinition,int)#java/awt/geom/Point2D$Float/Float()
org/apache/fop/render/pcl/PCLRenderingUtil/transformedPoint(int,int,java.awt.geom.AffineTransform,org.apache.fop.render.pcl.PCLPageDefinition,int)#org/apache/xmlgraphics/util/UnitConv/in2mpt(double)
org/apache/fop/render/pcl/PCLRenderingUtil/transformedPoint(int,int,java.awt.geom.AffineTransform,org.apache.fop.render.pcl.PCLPageDefinition,int)#java/lang/StringBuilder/toString()
org/apache/fop/render/pcl/PCLRenderingUtil/transformedPoint(int,int,java.awt.geom.AffineTransform,org.apache.fop.render.pcl.PCLPageDefinition,int)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/render/pcl/PCLRenderingUtil/transformedPoint(int,int,java.awt.geom.AffineTransform,org.apache.fop.render.pcl.PCLPageDefinition,int)#org/apache/commons/logging/Log/trace(java.lang.Object)
org/apache/fop/render/pcl/PCLRenderingUtil/transformedPoint(int,int,java.awt.geom.AffineTransform,org.apache.fop.render.pcl.PCLPageDefinition,int)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/fop/render/pcl/PCLRenderingUtil/transformedPoint(int,int,java.awt.geom.AffineTransform,org.apache.fop.render.pcl.PCLPageDefinition,int)#org/apache/commons/logging/Log/isTraceEnabled()
org/apache/fop/fonts/type1/AFMParser/<clinit>()#org/apache/fop/fonts/type1/AFMParser$NotImplementedYet/NotImplementedYet(java.lang.String)
org/apache/fop/fonts/type1/AFMParser/<clinit>()#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/fop/fonts/type1/AFMParser/<clinit>()#org/apache/fop/fonts/type1/AFMParser$IsCIDFont/IsCIDFont(org.apache.fop.fonts.type1.AFMParser$1)
org/apache/fop/fonts/type1/AFMParser/<clinit>()#java/util/HashMap/HashMap()
org/apache/fop/fonts/type1/AFMParser/<clinit>()#org/apache/fop/fonts/type1/AFMParser$WritingDirBooleanSetter/WritingDirBooleanSetter(java.lang.String)
org/apache/fop/fonts/type1/AFMParser/<clinit>()#org/apache/commons/logging/LogFactory/getLog(java.lang.Class)
org/apache/fop/fonts/type1/AFMParser/<clinit>()#org/apache/fop/fonts/type1/AFMParser$IntegerSetter/IntegerSetter(java.lang.String)
org/apache/fop/fonts/type1/AFMParser/<clinit>()#java/lang/Integer/Integer(int)
org/apache/fop/fonts/type1/AFMParser/<clinit>()#org/apache/fop/fonts/type1/AFMParser$NamedCharacterSetter/NamedCharacterSetter(java.lang.String)
org/apache/fop/fonts/type1/AFMParser/<clinit>()#org/apache/fop/fonts/type1/AFMParser$WritingDirNumberSetter/WritingDirNumberSetter(java.lang.String)
org/apache/fop/fonts/type1/AFMParser/<clinit>()#org/apache/fop/fonts/type1/AFMParser$NumberSetter/NumberSetter(java.lang.String)
org/apache/fop/fonts/type1/AFMParser/<clinit>()#org/apache/fop/fonts/type1/AFMParser$WritingDirDoubleSetter/WritingDirDoubleSetter(java.lang.String)
org/apache/fop/fonts/type1/AFMParser/<clinit>()#org/apache/fop/fonts/type1/AFMParser$StringSetter/StringSetter(java.lang.String)
org/apache/fop/fonts/type1/AFMParser/<clinit>()#org/apache/fop/fonts/type1/AFMParser$DoubleSetter/DoubleSetter(java.lang.String)
org/apache/fop/fonts/type1/AFMParser/<clinit>()#org/apache/fop/fonts/type1/AFMParser$CharBBox/CharBBox(org.apache.fop.fonts.type1.AFMParser$1)
org/apache/fop/fonts/type1/AFMParser/<clinit>()#org/apache/fop/fonts/type1/AFMParser$FontBBox/FontBBox(org.apache.fop.fonts.type1.AFMParser$1)
org/apache/fop/fonts/type1/AFMParser/<clinit>()#org/apache/fop/fonts/type1/AFMParser$KPXHandler/KPXHandler(org.apache.fop.fonts.type1.AFMParser$1)
org/apache/fop/fonts/type1/AFMParser/<clinit>()#org/apache/fop/fonts/type1/AFMParser$StartFontMetrics/StartFontMetrics(org.apache.fop.fonts.type1.AFMParser$1)
org/apache/fop/fonts/type1/AFMParser/<clinit>()#org/apache/fop/fonts/type1/AFMParser$IsBaseFont/IsBaseFont(org.apache.fop.fonts.type1.AFMParser$1)
org/apache/fop/fonts/type1/AFMParser/<clinit>()#org/apache/fop/fonts/type1/AFMParser$StartDirection/StartDirection(org.apache.fop.fonts.type1.AFMParser$1)
org/apache/fop/fonts/type1/AFMParser/<clinit>()#org/apache/fop/fonts/type1/AFMParser$EndDirection/EndDirection(org.apache.fop.fonts.type1.AFMParser$1)
org/apache/fop/pdf/PDFMetadata/updateInfoFromMetadata(org.apache.xmlgraphics.xmp.Metadata,org.apache.fop.pdf.PDFInfo)#org/apache/xmlgraphics/xmp/schemas/DublinCoreAdapter/getCreators()
org/apache/fop/pdf/PDFMetadata/updateInfoFromMetadata(org.apache.xmlgraphics.xmp.Metadata,org.apache.fop.pdf.PDFInfo)#org/apache/xmlgraphics/xmp/schemas/XMPBasicSchema/getAdapter(org.apache.xmlgraphics.xmp.Metadata)
org/apache/fop/pdf/PDFMetadata/updateInfoFromMetadata(org.apache.xmlgraphics.xmp.Metadata,org.apache.fop.pdf.PDFInfo)#org/apache/xmlgraphics/xmp/schemas/pdf/AdobePDFAdapter/getProducer()
org/apache/fop/pdf/PDFMetadata/updateInfoFromMetadata(org.apache.xmlgraphics.xmp.Metadata,org.apache.fop.pdf.PDFInfo)#org/apache/xmlgraphics/xmp/schemas/XMPBasicAdapter/setModifyDate(java.util.Date)
org/apache/fop/pdf/PDFMetadata/updateInfoFromMetadata(org.apache.xmlgraphics.xmp.Metadata,org.apache.fop.pdf.PDFInfo)#org/apache/xmlgraphics/xmp/schemas/XMPBasicAdapter/getCreateDate()
org/apache/fop/pdf/PDFMetadata/updateInfoFromMetadata(org.apache.xmlgraphics.xmp.Metadata,org.apache.fop.pdf.PDFInfo)#org/apache/xmlgraphics/xmp/schemas/DublinCoreSchema/getAdapter(org.apache.xmlgraphics.xmp.Metadata)
org/apache/fop/pdf/PDFMetadata/updateInfoFromMetadata(org.apache.xmlgraphics.xmp.Metadata,org.apache.fop.pdf.PDFInfo)#org/apache/xmlgraphics/xmp/schemas/pdf/AdobePDFAdapter/getKeywords()
org/apache/fop/pdf/PDFMetadata/updateInfoFromMetadata(org.apache.xmlgraphics.xmp.Metadata,org.apache.fop.pdf.PDFInfo)#org/apache/xmlgraphics/xmp/schemas/DublinCoreAdapter/getTitle()
org/apache/fop/pdf/PDFMetadata/updateInfoFromMetadata(org.apache.xmlgraphics.xmp.Metadata,org.apache.fop.pdf.PDFInfo)#org/apache/xmlgraphics/xmp/schemas/XMPBasicAdapter/setCreateDate(java.util.Date)
org/apache/fop/pdf/PDFMetadata/updateInfoFromMetadata(org.apache.xmlgraphics.xmp.Metadata,org.apache.fop.pdf.PDFInfo)#org/apache/xmlgraphics/xmp/schemas/XMPBasicAdapter/getModifyDate()
org/apache/fop/pdf/PDFMetadata/updateInfoFromMetadata(org.apache.xmlgraphics.xmp.Metadata,org.apache.fop.pdf.PDFInfo)#org/apache/xmlgraphics/xmp/schemas/XMPBasicAdapter/getCreatorTool()
org/apache/fop/pdf/PDFMetadata/updateInfoFromMetadata(org.apache.xmlgraphics.xmp.Metadata,org.apache.fop.pdf.PDFInfo)#org/apache/xmlgraphics/xmp/schemas/pdf/AdobePDFSchema/getAdapter(org.apache.xmlgraphics.xmp.Metadata)
org/apache/fop/pdf/PDFMetadata/updateInfoFromMetadata(org.apache.xmlgraphics.xmp.Metadata,org.apache.fop.pdf.PDFInfo)#org/apache/xmlgraphics/xmp/schemas/DublinCoreAdapter/getDescription()
org/apache/fop/pdf/PDFMetadata/createXMPFromPDFDocument(org.apache.fop.pdf.PDFDocument)#java/lang/String/valueOf(char)
org/apache/fop/pdf/PDFMetadata/createXMPFromPDFDocument(org.apache.fop.pdf.PDFDocument)#org/apache/xmlgraphics/xmp/schemas/pdf/XAPMMXMPSchema/getAdapter(org.apache.xmlgraphics.xmp.Metadata)
org/apache/fop/pdf/PDFMetadata/createXMPFromPDFDocument(org.apache.fop.pdf.PDFDocument)#org/apache/xmlgraphics/xmp/schemas/pdf/AdobePDFAdapter/setPDFVersion(java.lang.String)
org/apache/fop/pdf/PDFMetadata/createXMPFromPDFDocument(org.apache.fop.pdf.PDFDocument)#org/apache/xmlgraphics/xmp/schemas/pdf/AdobePDFAdapter/setTrapped(java.lang.String)
org/apache/fop/pdf/PDFMetadata/createXMPFromPDFDocument(org.apache.fop.pdf.PDFDocument)#org/apache/xmlgraphics/xmp/schemas/pdf/AdobePDFAdapter/setKeywords(java.lang.String)
org/apache/fop/pdf/PDFMetadata/createXMPFromPDFDocument(org.apache.fop.pdf.PDFDocument)#java/util/UUID/randomUUID()
org/apache/fop/pdf/PDFMetadata/createXMPFromPDFDocument(org.apache.fop.pdf.PDFDocument)#org/apache/xmlgraphics/xmp/schemas/XMPBasicAdapter/setModifyDate(java.util.Date)
org/apache/fop/pdf/PDFMetadata/createXMPFromPDFDocument(org.apache.fop.pdf.PDFDocument)#org/apache/xmlgraphics/xmp/schemas/pdf/PDFAXMPSchema/getAdapter(org.apache.xmlgraphics.xmp.Metadata)
org/apache/fop/pdf/PDFMetadata/createXMPFromPDFDocument(org.apache.fop.pdf.PDFDocument)#org/apache/xmlgraphics/xmp/schemas/pdf/PDFVTXMPSchema/getAdapter(org.apache.xmlgraphics.xmp.Metadata)
org/apache/fop/pdf/PDFMetadata/createXMPFromPDFDocument(org.apache.fop.pdf.PDFDocument)#org/apache/xmlgraphics/xmp/schemas/XMPBasicAdapter/setCreatorTool(java.lang.String)
org/apache/fop/pdf/PDFMetadata/createXMPFromPDFDocument(org.apache.fop.pdf.PDFDocument)#org/apache/xmlgraphics/xmp/schemas/DublinCoreAdapter/setTitle(java.lang.String)
org/apache/fop/pdf/PDFMetadata/createXMPFromPDFDocument(org.apache.fop.pdf.PDFDocument)#org/apache/xmlgraphics/xmp/schemas/pdf/XAPMMAdapter/setVersion(java.lang.String)
org/apache/fop/pdf/PDFMetadata/createXMPFromPDFDocument(org.apache.fop.pdf.PDFDocument)#org/apache/xmlgraphics/xmp/schemas/pdf/PDFXXMPSchema/getAdapter(org.apache.xmlgraphics.xmp.Metadata)
org/apache/fop/pdf/PDFMetadata/createXMPFromPDFDocument(org.apache.fop.pdf.PDFDocument)#org/apache/fop/pdf/PDFAMode/getPart()
org/apache/fop/pdf/PDFMetadata/createXMPFromPDFDocument(org.apache.fop.pdf.PDFDocument)#org/apache/xmlgraphics/xmp/schemas/pdf/PDFXAdapter/setVersion(java.lang.String)
org/apache/fop/pdf/PDFMetadata/createXMPFromPDFDocument(org.apache.fop.pdf.PDFDocument)#org/apache/xmlgraphics/xmp/schemas/pdf/XAPMMAdapter/setRenditionClass(java.lang.String)
org/apache/fop/pdf/PDFMetadata/createXMPFromPDFDocument(org.apache.fop.pdf.PDFDocument)#org/apache/xmlgraphics/xmp/schemas/pdf/PDFAAdapter/setPart(int)
org/apache/fop/pdf/PDFMetadata/createXMPFromPDFDocument(org.apache.fop.pdf.PDFDocument)#org/apache/xmlgraphics/xmp/schemas/XMPBasicSchema/getAdapter(org.apache.xmlgraphics.xmp.Metadata)
org/apache/fop/pdf/PDFMetadata/createXMPFromPDFDocument(org.apache.fop.pdf.PDFDocument)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/pdf/PDFMetadata/createXMPFromPDFDocument(org.apache.fop.pdf.PDFDocument)#org/apache/xmlgraphics/xmp/schemas/DublinCoreAdapter/addDate(java.util.Date)
org/apache/fop/pdf/PDFMetadata/createXMPFromPDFDocument(org.apache.fop.pdf.PDFDocument)#org/apache/xmlgraphics/xmp/schemas/pdf/PDFAAdapter/setConformance(java.lang.String)
org/apache/fop/pdf/PDFMetadata/createXMPFromPDFDocument(org.apache.fop.pdf.PDFDocument)#org/apache/xmlgraphics/xmp/schemas/pdf/PDFVTAdapter/setVersion(java.lang.String)
org/apache/fop/pdf/PDFMetadata/createXMPFromPDFDocument(org.apache.fop.pdf.PDFDocument)#org/apache/xmlgraphics/xmp/schemas/XMPBasicAdapter/setCreateDate(java.util.Date)
org/apache/fop/pdf/PDFMetadata/createXMPFromPDFDocument(org.apache.fop.pdf.PDFDocument)#org/apache/fop/pdf/PDFAMode/isEnabled()
org/apache/fop/pdf/PDFMetadata/createXMPFromPDFDocument(org.apache.fop.pdf.PDFDocument)#org/apache/xmlgraphics/xmp/schemas/DublinCoreAdapter/setDescription(java.lang.String,java.lang.String)
org/apache/fop/pdf/PDFMetadata/createXMPFromPDFDocument(org.apache.fop.pdf.PDFDocument)#java/util/Date/Date()
org/apache/fop/pdf/PDFMetadata/createXMPFromPDFDocument(org.apache.fop.pdf.PDFDocument)#org/apache/fop/pdf/PDFXMode/getName()
org/apache/fop/pdf/PDFMetadata/createXMPFromPDFDocument(org.apache.fop.pdf.PDFDocument)#org/apache/xmlgraphics/xmp/schemas/pdf/XAPMMAdapter/setInstanceID(java.lang.String)
org/apache/fop/pdf/PDFMetadata/createXMPFromPDFDocument(org.apache.fop.pdf.PDFDocument)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/pdf/PDFMetadata/createXMPFromPDFDocument(org.apache.fop.pdf.PDFDocument)#org/apache/xmlgraphics/xmp/schemas/DublinCoreSchema/getAdapter(org.apache.xmlgraphics.xmp.Metadata)
org/apache/fop/pdf/PDFMetadata/createXMPFromPDFDocument(org.apache.fop.pdf.PDFDocument)#org/apache/xmlgraphics/xmp/schemas/DublinCoreAdapter/addCreator(java.lang.String)
org/apache/fop/pdf/PDFMetadata/createXMPFromPDFDocument(org.apache.fop.pdf.PDFDocument)#org/apache/xmlgraphics/xmp/schemas/pdf/AdobePDFSchema/getAdapter(org.apache.xmlgraphics.xmp.Metadata)
org/apache/fop/pdf/PDFMetadata/createXMPFromPDFDocument(org.apache.fop.pdf.PDFDocument)#org/apache/xmlgraphics/xmp/schemas/pdf/AdobePDFAdapter/setProducer(java.lang.String)
org/apache/fop/pdf/PDFMetadata/createXMPFromPDFDocument(org.apache.fop.pdf.PDFDocument)#org/apache/xmlgraphics/xmp/schemas/pdf/XAPMMAdapter/setDocumentID(java.lang.String)
org/apache/fop/pdf/PDFMetadata/createXMPFromPDFDocument(org.apache.fop.pdf.PDFDocument)#org/apache/xmlgraphics/xmp/schemas/pdf/PDFVTAdapter/setModifyDate(java.util.Date)
org/apache/fop/pdf/PDFMetadata/createXMPFromPDFDocument(org.apache.fop.pdf.PDFDocument)#org/apache/xmlgraphics/xmp/Metadata/Metadata()
org/apache/fop/pdf/PDFMetadata/createXMPFromPDFDocument(org.apache.fop.pdf.PDFDocument)#org/apache/xmlgraphics/xmp/schemas/DublinCoreAdapter/setFormat(java.lang.String)
org/apache/fop/pdf/PDFMetadata/createXMPFromPDFDocument(org.apache.fop.pdf.PDFDocument)#org/apache/xmlgraphics/xmp/schemas/DublinCoreAdapter/addLanguage(java.lang.String)
org/apache/fop/pdf/PDFMetadata/createXMPFromPDFDocument(org.apache.fop.pdf.PDFDocument)#java/util/UUID/toString()
org/apache/fop/pdf/PDFMetadata/createXMPFromPDFDocument(org.apache.fop.pdf.PDFDocument)#java/lang/StringBuilder/toString()
org/apache/fop/pdf/PDFMetadata/createXMPFromPDFDocument(org.apache.fop.pdf.PDFDocument)#org/apache/fop/pdf/PDFAMode/getConformanceLevel()
org/apache/fop/image/loader/batik/ImageConverterWMF2G2D/Graphics2DImagePainterWMF/paint(java.awt.Graphics2D,java.awt.geom.Rectangle2D)#java/awt/geom/Rectangle2D/getY()
org/apache/fop/image/loader/batik/ImageConverterWMF2G2D/Graphics2DImagePainterWMF/paint(java.awt.Graphics2D,java.awt.geom.Rectangle2D)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/fop/image/loader/batik/ImageConverterWMF2G2D/Graphics2DImagePainterWMF/paint(java.awt.Graphics2D,java.awt.geom.Rectangle2D)#java/awt/Graphics2D/translate(double,double)
org/apache/fop/image/loader/batik/ImageConverterWMF2G2D/Graphics2DImagePainterWMF/paint(java.awt.Graphics2D,java.awt.geom.Rectangle2D)#org/apache/commons/logging/Log/isDebugEnabled()
org/apache/fop/image/loader/batik/ImageConverterWMF2G2D/Graphics2DImagePainterWMF/paint(java.awt.Graphics2D,java.awt.geom.Rectangle2D)#java/awt/geom/Rectangle2D/getWidth()
org/apache/fop/image/loader/batik/ImageConverterWMF2G2D/Graphics2DImagePainterWMF/paint(java.awt.Graphics2D,java.awt.geom.Rectangle2D)#java/lang/StringBuilder/append(long)
org/apache/fop/image/loader/batik/ImageConverterWMF2G2D/Graphics2DImagePainterWMF/paint(java.awt.Graphics2D,java.awt.geom.Rectangle2D)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/image/loader/batik/ImageConverterWMF2G2D/Graphics2DImagePainterWMF/paint(java.awt.Graphics2D,java.awt.geom.Rectangle2D)#java/awt/geom/Rectangle2D/getHeight()
org/apache/fop/image/loader/batik/ImageConverterWMF2G2D/Graphics2DImagePainterWMF/paint(java.awt.Graphics2D,java.awt.geom.Rectangle2D)#java/lang/System/currentTimeMillis()
org/apache/fop/image/loader/batik/ImageConverterWMF2G2D/Graphics2DImagePainterWMF/paint(java.awt.Graphics2D,java.awt.geom.Rectangle2D)#org/apache/batik/transcoder/wmf/tosvg/WMFRecordStore/getHeightPixels()
org/apache/fop/image/loader/batik/ImageConverterWMF2G2D/Graphics2DImagePainterWMF/paint(java.awt.Graphics2D,java.awt.geom.Rectangle2D)#java/awt/Graphics2D/scale(double,double)
org/apache/fop/image/loader/batik/ImageConverterWMF2G2D/Graphics2DImagePainterWMF/paint(java.awt.Graphics2D,java.awt.geom.Rectangle2D)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/image/loader/batik/ImageConverterWMF2G2D/Graphics2DImagePainterWMF/paint(java.awt.Graphics2D,java.awt.geom.Rectangle2D)#org/apache/batik/transcoder/wmf/tosvg/WMFPainter/paint(java.awt.Graphics)
org/apache/fop/image/loader/batik/ImageConverterWMF2G2D/Graphics2DImagePainterWMF/paint(java.awt.Graphics2D,java.awt.geom.Rectangle2D)#org/apache/batik/transcoder/wmf/tosvg/WMFPainter/WMFPainter(org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore,float)
org/apache/fop/image/loader/batik/ImageConverterWMF2G2D/Graphics2DImagePainterWMF/paint(java.awt.Graphics2D,java.awt.geom.Rectangle2D)#java/awt/geom/Rectangle2D/getX()
org/apache/fop/image/loader/batik/ImageConverterWMF2G2D/Graphics2DImagePainterWMF/paint(java.awt.Graphics2D,java.awt.geom.Rectangle2D)#java/lang/StringBuilder/toString()
org/apache/fop/image/loader/batik/ImageConverterWMF2G2D/Graphics2DImagePainterWMF/paint(java.awt.Graphics2D,java.awt.geom.Rectangle2D)#org/apache/batik/transcoder/wmf/tosvg/WMFRecordStore/getWidthPixels()
org/apache/fop/render/ps/PSImageHandlerRawPNG/generateForm(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,org.apache.fop.render.ps.PSImageFormResource)#org/apache/fop/render/ps/PSImageFormResource/getName()
org/apache/fop/render/ps/PSImageHandlerRawPNG/generateForm(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,org.apache.fop.render.ps.PSImageFormResource)#org/apache/xmlgraphics/image/loader/ImageSize/getDimensionPt()
org/apache/fop/render/ps/PSImageHandlerRawPNG/generateForm(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,org.apache.fop.render.ps.PSImageFormResource)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/render/ps/PSImageHandlerRawPNG/generateForm(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,org.apache.fop.render.ps.PSImageFormResource)#org/apache/xmlgraphics/image/loader/ImageInfo/getMimeType()
org/apache/fop/render/ps/PSImageHandlerRawPNG/generateForm(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,org.apache.fop.render.ps.PSImageFormResource)#org/apache/xmlgraphics/image/loader/impl/ImageRawPNG/getColorSpace()
org/apache/fop/render/ps/PSImageHandlerRawPNG/generateForm(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,org.apache.fop.render.ps.PSImageFormResource)#java/lang/StringBuilder/toString()
org/apache/fop/render/ps/PSImageHandlerRawPNG/generateForm(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,org.apache.fop.render.ps.PSImageFormResource)#org/apache/xmlgraphics/image/loader/Image/getInfo()
org/apache/fop/render/ps/PSImageHandlerRawPNG/generateForm(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,org.apache.fop.render.ps.PSImageFormResource)#org/apache/xmlgraphics/ps/FormGenerator/generate(org.apache.xmlgraphics.ps.PSGenerator)
org/apache/fop/render/ps/PSImageHandlerRawPNG/generateForm(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,org.apache.fop.render.ps.PSImageFormResource)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/render/ps/PSImageHandlerRawPNG/generateForm(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,org.apache.fop.render.ps.PSImageFormResource)#org/apache/xmlgraphics/image/loader/ImageInfo/getSize()
org/apache/fop/render/ps/PSImageHandlerRawPNG/generateForm(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,org.apache.fop.render.ps.PSImageFormResource)#org/apache/xmlgraphics/image/loader/ImageSize/getDimensionPx()
org/apache/fop/render/ps/PSImageHandlerRawPNG/generateForm(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,org.apache.fop.render.ps.PSImageFormResource)#org/apache/xmlgraphics/image/loader/ImageInfo/getOriginalURI()
org/apache/fop/render/ps/PSImageHandlerRawPNG/generateForm(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,org.apache.fop.render.ps.PSImageFormResource)#org/apache/xmlgraphics/ps/ImageFormGenerator/ImageFormGenerator(java.lang.String,java.lang.String,java.awt.geom.Dimension2D,java.awt.Dimension,org.apache.xmlgraphics.ps.ImageEncoder,java.awt.color.ColorSpace,boolean)
org/apache/fop/render/ps/PSImageHandlerRawPNG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/xmlgraphics/image/loader/Image/getInfo()
org/apache/fop/render/ps/PSImageHandlerRawPNG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/xmlgraphics/image/loader/ImageInfo/getSize()
org/apache/fop/render/ps/PSImageHandlerRawPNG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/lang/Class/getName()
org/apache/fop/render/ps/PSImageHandlerRawPNG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/awt/geom/Rectangle2D$Float/Float(float,float,float,float)
org/apache/fop/render/ps/PSImageHandlerRawPNG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/lang/Object/getClass()
org/apache/fop/render/ps/PSImageHandlerRawPNG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/awt/Rectangle/getX()
org/apache/fop/render/ps/PSImageHandlerRawPNG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/xmlgraphics/image/loader/ImageSize/getDimensionPx()
org/apache/fop/render/ps/PSImageHandlerRawPNG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/awt/Rectangle/getWidth()
org/apache/fop/render/ps/PSImageHandlerRawPNG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/xmlgraphics/image/loader/impl/ImageRawPNG/getColorModel()
org/apache/fop/render/ps/PSImageHandlerRawPNG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/awt/Rectangle/getHeight()
org/apache/fop/render/ps/PSImageHandlerRawPNG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/xmlgraphics/ps/PSImageUtils/writeImage(org.apache.xmlgraphics.ps.ImageEncoder,java.awt.Dimension,java.lang.String,java.awt.geom.Rectangle2D,java.awt.image.ColorModel,org.apache.xmlgraphics.ps.PSGenerator)
org/apache/fop/render/ps/PSImageHandlerRawPNG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/awt/Rectangle/getY()
org/apache/fop/events/model/EventModelParser/Handler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#java/lang/Class/forName(java.lang.String)
org/apache/fop/events/model/EventModelParser/Handler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#org/xml/sax/SAXException/SAXException(java.lang.String)
org/apache/fop/events/model/EventModelParser/Handler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#org/apache/fop/events/model/EventSeverity/valueOf(java.lang.String)
org/apache/fop/events/model/EventModelParser/Handler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#java/lang/String/length()
org/apache/fop/events/model/EventModelParser/Handler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#java/lang/String/equals(java.lang.Object)
org/apache/fop/events/model/EventModelParser/Handler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/events/model/EventModelParser/Handler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#org/xml/sax/SAXException/SAXException(java.lang.String,java.lang.Exception)
org/apache/fop/events/model/EventModelParser/Handler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#java/util/Stack/peek()
org/apache/fop/events/model/EventModelParser/Handler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#java/lang/StringBuilder/toString()
org/apache/fop/events/model/EventModelParser/Handler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#org/xml/sax/Attributes/getValue(java.lang.String)
org/apache/fop/events/model/EventModelParser/Handler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#java/util/Stack/size()
org/apache/fop/events/model/EventModelParser/Handler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/events/model/EventModelParser/Handler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#java/util/Stack/push(java.lang.Object)
org/apache/fop/render/pcl/PCLDocumentHandler/createAllBitmapPainter()#java/awt/RenderingHints/put(java.lang.Object,java.lang.Object)
org/apache/fop/render/pcl/PCLDocumentHandler/createAllBitmapPainter()#java/lang/Math/ceil(double)
org/apache/fop/render/pcl/PCLDocumentHandler/createAllBitmapPainter()#java/awt/RenderingHints/RenderingHints(java.util.Map)
org/apache/fop/render/pcl/PCLDocumentHandler/createAllBitmapPainter()#java/awt/Graphics2D/setBackground(java.awt.Color)
org/apache/fop/render/pcl/PCLDocumentHandler/createAllBitmapPainter()#java/awt/Graphics2D/clearRect(int,int,int,int)
org/apache/fop/render/pcl/PCLDocumentHandler/createAllBitmapPainter()#java/awt/Graphics2D/setRenderingHint(java.awt.RenderingHints$Key,java.lang.Object)
org/apache/fop/render/pcl/PCLDocumentHandler/createAllBitmapPainter()#java/awt/Graphics2D/addRenderingHints(java.util.Map)
org/apache/fop/render/pcl/PCLDocumentHandler/createAllBitmapPainter()#org/apache/fop/render/pcl/PCLDocumentHandler/getFontInfo()
org/apache/fop/render/pcl/PCLDocumentHandler/createAllBitmapPainter()#java/awt/Graphics2D/scale(double,double)
org/apache/fop/render/pcl/PCLDocumentHandler/createAllBitmapPainter()#java/awt/image/BufferedImage/createGraphics()
org/apache/fop/render/pcl/PCLDocumentHandler/createAllBitmapPainter()#org/apache/fop/render/pcl/PCLDocumentHandler/getContext()
org/apache/fop/render/pcl/PCLDocumentHandler/createAllBitmapPainter()#org/apache/xmlgraphics/util/UnitConv/mpt2px(double,int)
org/apache/fop/render/pcl/PCLDocumentHandler/createAllBitmapPainter()#java/awt/Graphics2D/translate(int,int)
org/apache/fop/fonts/MultiByteFont/mapCharsToGlyphs(java.lang.CharSequence,java.util.List)#java/util/ArrayList/ArrayList(java.util.Collection)
org/apache/fop/fonts/MultiByteFont/mapCharsToGlyphs(java.lang.CharSequence,java.util.List)#java/lang/CharSequence/length()
org/apache/fop/fonts/MultiByteFont/mapCharsToGlyphs(java.lang.CharSequence,java.util.List)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/fonts/MultiByteFont/mapCharsToGlyphs(java.lang.CharSequence,java.util.List)#java/lang/StringBuilder/append(int)
org/apache/fop/fonts/MultiByteFont/mapCharsToGlyphs(java.lang.CharSequence,java.util.List)#java/nio/IntBuffer/flip()
org/apache/fop/fonts/MultiByteFont/mapCharsToGlyphs(java.lang.CharSequence,java.util.List)#org/apache/fop/fonts/MultiByteFont/notifyMapOperation()
org/apache/fop/fonts/MultiByteFont/mapCharsToGlyphs(java.lang.CharSequence,java.util.List)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/fop/fonts/MultiByteFont/mapCharsToGlyphs(java.lang.CharSequence,java.util.List)#java/lang/StringBuilder/toString()
org/apache/fop/fonts/MultiByteFont/mapCharsToGlyphs(java.lang.CharSequence,java.util.List)#java/util/List/size()
org/apache/fop/fonts/MultiByteFont/mapCharsToGlyphs(java.lang.CharSequence,java.util.List)#java/lang/CharSequence/charAt(int)
org/apache/fop/fonts/MultiByteFont/mapCharsToGlyphs(java.lang.CharSequence,java.util.List)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/fonts/MultiByteFont/mapCharsToGlyphs(java.lang.CharSequence,java.util.List)#java/nio/IntBuffer/put(int)
org/apache/fop/fonts/MultiByteFont/mapCharsToGlyphs(java.lang.CharSequence,java.util.List)#java/nio/IntBuffer/allocate(int)
org/apache/fop/fonts/MultiByteFont/mapCharsToGlyphs(java.lang.CharSequence,java.util.List)#org/apache/fop/fonts/MultiByteFont/warnMissingGlyph(char)
org/apache/fop/fonts/MultiByteFont/mapGlyphsToChars(org.apache.fop.complexscripts.util.GlyphSequence)#org/apache/fop/fonts/MultiByteFont/getFullName()
org/apache/fop/fonts/MultiByteFont/mapGlyphsToChars(org.apache.fop.complexscripts.util.GlyphSequence)#java/nio/CharBuffer/put(char)
org/apache/fop/fonts/MultiByteFont/mapGlyphsToChars(org.apache.fop.complexscripts.util.GlyphSequence)#org/apache/commons/logging/Log/warn(java.lang.Object)
org/apache/fop/fonts/MultiByteFont/mapGlyphsToChars(org.apache.fop.complexscripts.util.GlyphSequence)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/fonts/MultiByteFont/mapGlyphsToChars(org.apache.fop.complexscripts.util.GlyphSequence)#java/lang/StringBuilder/append(int)
org/apache/fop/fonts/MultiByteFont/mapGlyphsToChars(org.apache.fop.complexscripts.util.GlyphSequence)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/fonts/MultiByteFont/mapGlyphsToChars(org.apache.fop.complexscripts.util.GlyphSequence)#java/lang/StringBuilder/append(char)
org/apache/fop/fonts/MultiByteFont/mapGlyphsToChars(org.apache.fop.complexscripts.util.GlyphSequence)#java/nio/CharBuffer/flip()
org/apache/fop/fonts/MultiByteFont/mapGlyphsToChars(org.apache.fop.complexscripts.util.GlyphSequence)#java/lang/StringBuilder/toString()
org/apache/fop/fonts/MultiByteFont/mapGlyphsToChars(org.apache.fop.complexscripts.util.GlyphSequence)#java/nio/CharBuffer/allocate(int)
org/apache/fop/afp/util/BinaryUtils/convert(java.lang.String)#java/lang/String/length()
org/apache/fop/afp/util/BinaryUtils/convert(java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/afp/util/BinaryUtils/convert(java.lang.String)#java/io/ByteArrayOutputStream/write(int)
org/apache/fop/afp/util/BinaryUtils/convert(java.lang.String)#java/io/ByteArrayOutputStream/ByteArrayOutputStream()
org/apache/fop/afp/util/BinaryUtils/convert(java.lang.String)#java/lang/StringBuilder/toString()
org/apache/fop/afp/util/BinaryUtils/convert(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/afp/util/BinaryUtils/convert(java.lang.String)#java/lang/String/charAt(int)
org/apache/fop/afp/util/BinaryUtils/convert(java.lang.String)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/fop/afp/util/BinaryUtils/convert(java.lang.String)#java/io/ByteArrayOutputStream/toByteArray()
org/apache/fop/render/bitmap/PNGRenderer/writeImage(java.io.OutputStream,java.awt.image.RenderedImage)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/fop/render/bitmap/PNGRenderer/writeImage(java.io.OutputStream,java.awt.image.RenderedImage)#org/apache/commons/logging/Log/isDebugEnabled()
org/apache/fop/render/bitmap/PNGRenderer/writeImage(java.io.OutputStream,java.awt.image.RenderedImage)#org/apache/xmlgraphics/image/writer/ImageWriterParams/setResolution(int)
org/apache/fop/render/bitmap/PNGRenderer/writeImage(java.io.OutputStream,java.awt.image.RenderedImage)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/render/bitmap/PNGRenderer/writeImage(java.io.OutputStream,java.awt.image.RenderedImage)#java/lang/Math/round(float)
org/apache/fop/render/bitmap/PNGRenderer/writeImage(java.io.OutputStream,java.awt.image.RenderedImage)#java/lang/Object/getClass()
org/apache/fop/render/bitmap/PNGRenderer/writeImage(java.io.OutputStream,java.awt.image.RenderedImage)#java/lang/StringBuilder/toString()
org/apache/fop/render/bitmap/PNGRenderer/writeImage(java.io.OutputStream,java.awt.image.RenderedImage)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/render/bitmap/PNGRenderer/writeImage(java.io.OutputStream,java.awt.image.RenderedImage)#org/apache/fop/render/bitmap/PNGRenderer/getUserAgent()
org/apache/fop/render/bitmap/PNGRenderer/writeImage(java.io.OutputStream,java.awt.image.RenderedImage)#java/lang/Class/getName()
org/apache/fop/render/bitmap/PNGRenderer/writeImage(java.io.OutputStream,java.awt.image.RenderedImage)#org/apache/xmlgraphics/image/writer/ImageWriter/writeImage(java.awt.image.RenderedImage,java.io.OutputStream,org.apache.xmlgraphics.image.writer.ImageWriterParams)
org/apache/fop/render/bitmap/PNGRenderer/writeImage(java.io.OutputStream,java.awt.image.RenderedImage)#org/apache/xmlgraphics/image/writer/ImageWriterParams/ImageWriterParams()
org/apache/fop/render/bitmap/PNGRenderer/writeImage(java.io.OutputStream,java.awt.image.RenderedImage)#org/apache/fop/render/bitmap/BitmapRendererEventProducer$Provider/get(org.apache.fop.events.EventBroadcaster)
org/apache/fop/render/bitmap/PNGRenderer/writeImage(java.io.OutputStream,java.awt.image.RenderedImage)#org/apache/xmlgraphics/image/writer/ImageWriterRegistry/getWriterFor(java.lang.String)
org/apache/fop/render/bitmap/PNGRenderer/writeImage(java.io.OutputStream,java.awt.image.RenderedImage)#org/apache/xmlgraphics/image/writer/ImageWriterRegistry/getInstance()
org/apache/fop/render/bitmap/PNGRenderer/stopRenderer()#org/apache/fop/render/bitmap/PNGRenderer/getPageImage(org.apache.fop.area.PageViewport)
org/apache/fop/render/bitmap/PNGRenderer/stopRenderer()#java/lang/StringBuilder/append(int)
org/apache/fop/render/bitmap/PNGRenderer/stopRenderer()#org/apache/commons/logging/Log/isDebugEnabled()
org/apache/fop/render/bitmap/PNGRenderer/stopRenderer()#java/util/List/size()
org/apache/fop/render/bitmap/PNGRenderer/stopRenderer()#java/lang/StringBuilder/StringBuilder()
org/apache/fop/render/bitmap/PNGRenderer/stopRenderer()#org/apache/commons/io/IOUtils/closeQuietly(java.io.OutputStream)
org/apache/fop/render/bitmap/PNGRenderer/stopRenderer()#java/util/List/get(int)
org/apache/fop/render/bitmap/PNGRenderer/stopRenderer()#java/lang/StringBuilder/toString()
org/apache/fop/render/bitmap/PNGRenderer/stopRenderer()#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/fop/render/bitmap/PNGRenderer/stopRenderer()#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/render/bitmap/PNGRenderer/stopRenderer()#org/apache/fop/render/bitmap/PNGRenderer/getUserAgent()
org/apache/fop/render/bitmap/PNGRenderer/stopRenderer()#org/apache/fop/render/bitmap/BitmapRendererEventProducer$Provider/get(org.apache.fop.events.EventBroadcaster)
org/apache/fop/util/text/HexFieldPart/write(java.lang.StringBuffer,java.util.Map)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/util/text/HexFieldPart/write(java.lang.StringBuffer,java.util.Map)#java/util/Map/get(java.lang.Object)
org/apache/fop/util/text/HexFieldPart/write(java.lang.StringBuffer,java.util.Map)#java/lang/Integer/toHexString(int)
org/apache/fop/util/text/HexFieldPart/write(java.lang.StringBuffer,java.util.Map)#java/lang/Number/intValue()
org/apache/fop/util/text/HexFieldPart/write(java.lang.StringBuffer,java.util.Map)#java/lang/Class/getName()
org/apache/fop/util/text/HexFieldPart/write(java.lang.StringBuffer,java.util.Map)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/util/text/HexFieldPart/write(java.lang.StringBuffer,java.util.Map)#java/util/Map/containsKey(java.lang.Object)
org/apache/fop/util/text/HexFieldPart/write(java.lang.StringBuffer,java.util.Map)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/fop/util/text/HexFieldPart/write(java.lang.StringBuffer,java.util.Map)#java/lang/Object/getClass()
org/apache/fop/util/text/HexFieldPart/write(java.lang.StringBuffer,java.util.Map)#java/lang/StringBuffer/append(java.lang.String)
org/apache/fop/util/text/HexFieldPart/write(java.lang.StringBuffer,java.util.Map)#java/lang/Character/charValue()
org/apache/fop/util/text/HexFieldPart/write(java.lang.StringBuffer,java.util.Map)#java/lang/StringBuilder/toString()
org/apache/fop/events/LoggingEventListener/processEvent(org.apache.fop.events.Event)#org/apache/commons/logging/Log/warn(java.lang.Object)
org/apache/fop/events/LoggingEventListener/processEvent(org.apache.fop.events.Event)#org/apache/commons/logging/Log/info(java.lang.Object)
org/apache/fop/events/LoggingEventListener/processEvent(org.apache.fop.events.Event)#java/lang/String/equals(java.lang.Object)
org/apache/fop/events/LoggingEventListener/processEvent(org.apache.fop.events.Event)#java/util/Set/add(java.lang.Object)
org/apache/fop/events/LoggingEventListener/processEvent(org.apache.fop.events.Event)#java/lang/AssertionError/AssertionError()
org/apache/fop/events/LoggingEventListener/processEvent(org.apache.fop.events.Event)#org/apache/commons/logging/Log/fatal(java.lang.Object,java.lang.Throwable)
org/apache/fop/events/LoggingEventListener/processEvent(org.apache.fop.events.Event)#org/apache/commons/logging/Log/fatal(java.lang.Object)
org/apache/fop/events/LoggingEventListener/processEvent(org.apache.fop.events.Event)#java/util/Set/contains(java.lang.Object)
org/apache/fop/events/LoggingEventListener/processEvent(org.apache.fop.events.Event)#org/apache/commons/logging/Log/error(java.lang.Object,java.lang.Throwable)
org/apache/fop/events/LoggingEventListener/processEvent(org.apache.fop.events.Event)#org/apache/commons/logging/Log/error(java.lang.Object)
org/apache/fop/render/java2d/InstalledFontCollection/setup(int,org.apache.fop.fonts.FontInfo)#java/lang/String/toLowerCase()
org/apache/fop/render/java2d/InstalledFontCollection/setup(int,org.apache.fop.fonts.FontInfo)#java/awt/Font/getItalicAngle()
org/apache/fop/render/java2d/InstalledFontCollection/setup(int,org.apache.fop.fonts.FontInfo)#java/awt/GraphicsEnvironment/getAllFonts()
org/apache/fop/render/java2d/InstalledFontCollection/setup(int,org.apache.fop.fonts.FontInfo)#java/lang/String/equals(java.lang.Object)
org/apache/fop/render/java2d/InstalledFontCollection/setup(int,org.apache.fop.fonts.FontInfo)#java/util/Set/contains(java.lang.Object)
org/apache/fop/render/java2d/InstalledFontCollection/setup(int,org.apache.fop.fonts.FontInfo)#org/apache/commons/logging/Log/isTraceEnabled()
org/apache/fop/render/java2d/InstalledFontCollection/setup(int,org.apache.fop.fonts.FontInfo)#java/awt/Font/getName()
org/apache/fop/render/java2d/InstalledFontCollection/setup(int,org.apache.fop.fonts.FontInfo)#java/lang/StringBuilder/append(float)
org/apache/fop/render/java2d/InstalledFontCollection/setup(int,org.apache.fop.fonts.FontInfo)#java/awt/Font/getPSName()
org/apache/fop/render/java2d/InstalledFontCollection/setup(int,org.apache.fop.fonts.FontInfo)#java/lang/StringBuilder/toString()
org/apache/fop/render/java2d/InstalledFontCollection/setup(int,org.apache.fop.fonts.FontInfo)#java/awt/GraphicsEnvironment/getLocalGraphicsEnvironment()
org/apache/fop/render/java2d/InstalledFontCollection/setup(int,org.apache.fop.fonts.FontInfo)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/render/java2d/InstalledFontCollection/setup(int,org.apache.fop.fonts.FontInfo)#java/awt/Font/getFontName()
org/apache/fop/render/java2d/InstalledFontCollection/setup(int,org.apache.fop.fonts.FontInfo)#java/lang/StringBuilder/append(int)
org/apache/fop/render/java2d/InstalledFontCollection/setup(int,org.apache.fop.fonts.FontInfo)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/render/java2d/InstalledFontCollection/setup(int,org.apache.fop.fonts.FontInfo)#org/apache/commons/logging/Log/trace(java.lang.Object)
org/apache/fop/render/java2d/InstalledFontCollection/setup(int,org.apache.fop.fonts.FontInfo)#java/awt/Font/getFamily()
org/apache/fop/render/java2d/InstalledFontCollection/setup(int,org.apache.fop.fonts.FontInfo)#java/awt/Font/getStyle()
org/apache/fop/complexscripts/fonts/GlyphPositioningTable/MarkToMarkSubtableFormat1/populate(java.util.List)#java/lang/Integer/intValue()
org/apache/fop/complexscripts/fonts/GlyphPositioningTable/MarkToMarkSubtableFormat1/populate(java.util.List)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/complexscripts/fonts/GlyphPositioningTable/MarkToMarkSubtableFormat1/populate(java.util.List)#java/lang/StringBuilder/append(int)
org/apache/fop/complexscripts/fonts/GlyphPositioningTable/MarkToMarkSubtableFormat1/populate(java.util.List)#java/util/List/size()
org/apache/fop/complexscripts/fonts/GlyphPositioningTable/MarkToMarkSubtableFormat1/populate(java.util.List)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/complexscripts/fonts/GlyphPositioningTable/MarkToMarkSubtableFormat1/populate(java.util.List)#java/util/List/get(int)
org/apache/fop/complexscripts/fonts/GlyphPositioningTable/MarkToMarkSubtableFormat1/populate(java.util.List)#java/lang/StringBuilder/toString()
org/apache/fop/complexscripts/fonts/GlyphPositioningTable/MarkToMarkSubtableFormat1/populate(java.util.List)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/fop/complexscripts/fonts/GlyphPositioningTable/MarkToMarkSubtableFormat1/populate(java.util.List)#java/lang/Object/getClass()
org/apache/fop/render/pcl/PCLGraphics2D/draw(java.awt.Shape)#org/apache/fop/render/pcl/PCLGraphics2D/getStroke()
org/apache/fop/render/pcl/PCLGraphics2D/draw(java.awt.Shape)#org/apache/fop/render/pcl/PCLGraphics2D/getColor()
org/apache/fop/render/pcl/PCLGraphics2D/draw(java.awt.Shape)#java/awt/Color/equals(java.lang.Object)
org/apache/fop/render/pcl/PCLGraphics2D/draw(java.awt.Shape)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/render/pcl/PCLGraphics2D/draw(java.awt.Shape)#java/lang/StringBuilder/toString()
org/apache/fop/render/pcl/PCLGraphics2D/draw(java.awt.Shape)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/render/pcl/PCLGraphics2D/draw(java.awt.Shape)#org/apache/fop/render/pcl/PCLGraphics2D/getClip()
org/apache/fop/render/pcl/PCLGraphics2D/draw(java.awt.Shape)#java/awt/Shape/getPathIterator(java.awt.geom.AffineTransform)
org/apache/fop/render/pcl/PCLGraphics2D/draw(java.awt.Shape)#org/apache/fop/render/pcl/PCLGraphics2D/getTransform()
org/apache/fop/render/pcl/PCLGraphics2D/draw(java.awt.Shape)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/fop/render/pcl/PCLGraphics2D/applyStroke(java.awt.Stroke)#java/awt/BasicStroke/getEndCap()
org/apache/fop/render/pcl/PCLGraphics2D/applyStroke(java.awt.Stroke)#java/awt/BasicStroke/getLineJoin()
org/apache/fop/render/pcl/PCLGraphics2D/applyStroke(java.awt.Stroke)#java/awt/geom/Point2D/distance(double,double)
org/apache/fop/render/pcl/PCLGraphics2D/applyStroke(java.awt.Stroke)#java/awt/geom/Point2D$Double/Double(double,double)
org/apache/fop/render/pcl/PCLGraphics2D/applyStroke(java.awt.Stroke)#java/lang/Class/getName()
org/apache/fop/render/pcl/PCLGraphics2D/applyStroke(java.awt.Stroke)#java/awt/geom/AffineTransform/deltaTransform(java.awt.geom.Point2D,java.awt.geom.Point2D)
org/apache/fop/render/pcl/PCLGraphics2D/applyStroke(java.awt.Stroke)#java/lang/Math/min(int,int)
org/apache/fop/render/pcl/PCLGraphics2D/applyStroke(java.awt.Stroke)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/render/pcl/PCLGraphics2D/applyStroke(java.awt.Stroke)#java/io/PrintStream/println(java.lang.String)
org/apache/fop/render/pcl/PCLGraphics2D/applyStroke(java.awt.Stroke)#java/lang/StringBuilder/append(int)
org/apache/fop/render/pcl/PCLGraphics2D/applyStroke(java.awt.Stroke)#org/apache/xmlgraphics/util/UnitConv/pt2mm(double)
org/apache/fop/render/pcl/PCLGraphics2D/applyStroke(java.awt.Stroke)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/render/pcl/PCLGraphics2D/applyStroke(java.awt.Stroke)#java/awt/BasicStroke/getDashArray()
org/apache/fop/render/pcl/PCLGraphics2D/applyStroke(java.awt.Stroke)#java/lang/Object/getClass()
org/apache/fop/render/pcl/PCLGraphics2D/applyStroke(java.awt.Stroke)#org/apache/fop/render/pcl/PCLGraphics2D/getTransform()
org/apache/fop/render/pcl/PCLGraphics2D/applyStroke(java.awt.Stroke)#java/lang/StringBuilder/toString()
org/apache/fop/render/pcl/PCLGraphics2D/applyStroke(java.awt.Stroke)#java/awt/BasicStroke/getMiterLimit()
org/apache/fop/render/pcl/PCLGraphics2D/applyStroke(java.awt.Stroke)#java/awt/BasicStroke/getLineWidth()
org/apache/fop/render/ImageHandlerRegistry/discoverHandlers()#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/fop/render/ImageHandlerRegistry/discoverHandlers()#java/util/Iterator/hasNext()
org/apache/fop/render/ImageHandlerRegistry/discoverHandlers()#org/apache/commons/logging/Log/isDebugEnabled()
org/apache/fop/render/ImageHandlerRegistry/discoverHandlers()#java/util/Iterator/next()
org/apache/fop/render/ImageHandlerRegistry/discoverHandlers()#java/lang/Class/getName()
org/apache/fop/render/ImageHandlerRegistry/discoverHandlers()#java/lang/StringBuilder/StringBuilder()
org/apache/fop/render/ImageHandlerRegistry/discoverHandlers()#org/apache/commons/logging/Log/error(java.lang.Object,java.lang.Throwable)
org/apache/fop/render/ImageHandlerRegistry/discoverHandlers()#java/lang/Object/getClass()
org/apache/fop/render/ImageHandlerRegistry/discoverHandlers()#java/lang/StringBuilder/toString()
org/apache/fop/render/ImageHandlerRegistry/discoverHandlers()#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/render/ImageHandlerRegistry/discoverHandlers()#org/apache/xmlgraphics/util/Service/providers(java.lang.Class)
org/apache/fop/area/AreaTreeParser/Handler/RegionBodyMaker/startElement(org.xml.sax.Attributes)#org/xml/sax/Attributes/getValue(java.lang.String)
org/apache/fop/area/AreaTreeParser/Handler/RegionBodyMaker/startElement(org.xml.sax.Attributes)#java/util/Stack/push(java.lang.Object)
org/apache/fop/area/AreaTreeParser/Handler/RegionBodyMaker/startElement(org.xml.sax.Attributes)#org/apache/fop/area/AreaTreeParser$Handler/access$4900(org.xml.sax.Attributes,java.lang.String)
org/apache/fop/area/AreaTreeParser/Handler/RegionBodyMaker/startElement(org.xml.sax.Attributes)#org/apache/fop/area/AreaTreeParser$Handler/access$3600(org.apache.fop.area.AreaTreeParser$Handler)
org/apache/fop/area/AreaTreeParser/Handler/RegionBodyMaker/startElement(org.xml.sax.Attributes)#org/apache/fop/area/AreaTreeParser$Handler/access$4800(org.apache.fop.area.AreaTreeParser$Handler)
org/apache/fop/area/AreaTreeParser/Handler/RegionBodyMaker/startElement(org.xml.sax.Attributes)#org/apache/fop/area/AreaTreeParser$Handler/access$4100(org.apache.fop.area.AreaTreeParser$Handler,org.xml.sax.Attributes,org.apache.fop.area.Area)
org/apache/fop/area/AreaTreeParser/Handler/RegionBodyMaker/startElement(org.xml.sax.Attributes)#org/apache/fop/area/AreaTreeParser$Handler/access$5000()
org/apache/fop/area/AreaTreeParser/Handler/RegionBodyMaker/startElement(org.xml.sax.Attributes)#org/apache/fop/area/BodyRegion/setCTM(org.apache.fop.area.CTM)
org/apache/fop/area/AreaTreeParser/Handler/RegionBodyMaker/startElement(org.xml.sax.Attributes)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/apache/fop/area/AreaTreeParser/Handler/RegionBodyMaker/startElement(org.xml.sax.Attributes)#org/apache/fop/area/AreaTreeParser$Handler/access$3500(org.xml.sax.Attributes,org.apache.fop.area.AreaTreeObject)
org/apache/fop/area/AreaTreeParser/Handler/RegionBodyMaker/startElement(org.xml.sax.Attributes)#org/apache/fop/area/AreaTreeParser$Handler/access$4000(org.apache.fop.area.AreaTreeParser$Handler)
org/apache/fop/area/AreaTreeParser/Handler/RegionBodyMaker/startElement(org.xml.sax.Attributes)#org/apache/fop/area/AreaTreeParser$Handler/access$4300(org.apache.fop.area.AreaTreeParser$Handler,org.xml.sax.Attributes,org.apache.fop.area.Area,java.lang.Object[])
org/apache/fop/area/AreaTreeParser/Handler/RegionBodyMaker/startElement(org.xml.sax.Attributes)#org/apache/fop/area/AreaTreeParser$Handler/access$3800(org.apache.fop.area.AreaTreeParser$Handler)
org/apache/fop/fonts/apps/AbstractFontReader/writeFontXML(org.w3c.dom.Document,java.io.File)#java/io/OutputStream/close()
org/apache/fop/fonts/apps/AbstractFontReader/writeFontXML(org.w3c.dom.Document,java.io.File)#javax/xml/transform/TransformerFactory/newInstance()
org/apache/fop/fonts/apps/AbstractFontReader/writeFontXML(org.w3c.dom.Document,java.io.File)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/fonts/apps/AbstractFontReader/writeFontXML(org.w3c.dom.Document,java.io.File)#javax/xml/transform/dom/DOMSource/DOMSource(org.w3c.dom.Node)
org/apache/fop/fonts/apps/AbstractFontReader/writeFontXML(org.w3c.dom.Document,java.io.File)#org/apache/commons/logging/Log/info(java.lang.Object)
org/apache/fop/fonts/apps/AbstractFontReader/writeFontXML(org.w3c.dom.Document,java.io.File)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/fonts/apps/AbstractFontReader/writeFontXML(org.w3c.dom.Document,java.io.File)#javax/xml/transform/stream/StreamResult/StreamResult(java.io.OutputStream)
org/apache/fop/fonts/apps/AbstractFontReader/writeFontXML(org.w3c.dom.Document,java.io.File)#java/io/FileOutputStream/FileOutputStream(java.io.File)
org/apache/fop/fonts/apps/AbstractFontReader/writeFontXML(org.w3c.dom.Document,java.io.File)#java/io/BufferedOutputStream/BufferedOutputStream(java.io.OutputStream)
org/apache/fop/fonts/apps/AbstractFontReader/writeFontXML(org.w3c.dom.Document,java.io.File)#javax/xml/transform/TransformerException/TransformerException(java.lang.String,java.lang.Throwable)
org/apache/fop/fonts/apps/AbstractFontReader/writeFontXML(org.w3c.dom.Document,java.io.File)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/fop/fonts/apps/AbstractFontReader/writeFontXML(org.w3c.dom.Document,java.io.File)#javax/xml/transform/Transformer/transform(javax.xml.transform.Source,javax.xml.transform.Result)
org/apache/fop/fonts/apps/AbstractFontReader/writeFontXML(org.w3c.dom.Document,java.io.File)#java/lang/StringBuilder/toString()
org/apache/fop/fonts/apps/AbstractFontReader/writeFontXML(org.w3c.dom.Document,java.io.File)#javax/xml/transform/TransformerFactory/newTransformer()
org/apache/fop/fo/pagination/Declarations/endOfNode()#org/apache/fop/fo/pagination/ColorProfile/getName()
org/apache/fop/fo/pagination/Declarations/endOfNode()#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/fop/fo/pagination/Declarations/endOfNode()#org/apache/fop/fo/FONode$FONodeIterator/hasNext()
org/apache/fop/fo/pagination/Declarations/endOfNode()#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/fo/pagination/Declarations/endOfNode()#org/apache/fop/fo/pagination/Declarations/getFOValidationEventProducer()
org/apache/fop/fo/pagination/Declarations/endOfNode()#org/apache/fop/fo/pagination/Declarations/getChildNodes()
org/apache/fop/fo/pagination/Declarations/endOfNode()#java/lang/String/equals(java.lang.Object)
org/apache/fop/fo/pagination/Declarations/endOfNode()#java/lang/StringBuilder/StringBuilder()
org/apache/fop/fo/pagination/Declarations/endOfNode()#org/apache/fop/fo/FONode$FONodeIterator/nextNode()
org/apache/fop/fo/pagination/Declarations/endOfNode()#java/lang/StringBuilder/toString()
org/apache/fop/fo/XMLObj/createBasicDocument()#org/w3c/dom/Element/hasAttributeNS(java.lang.String,java.lang.String)
org/apache/fop/fo/XMLObj/createBasicDocument()#org/w3c/dom/Element/setAttributeNS(java.lang.String,java.lang.String,java.lang.String)
org/apache/fop/fo/XMLObj/createBasicDocument()#org/w3c/dom/Document/appendChild(org.w3c.dom.Node)
org/apache/fop/fo/XMLObj/createBasicDocument()#org/w3c/dom/Document/createElementNS(java.lang.String,java.lang.String)
org/apache/fop/fo/XMLObj/createBasicDocument()#javax/xml/parsers/DocumentBuilderFactory/newDocumentBuilder()
org/apache/fop/fo/XMLObj/createBasicDocument()#javax/xml/parsers/DocumentBuilderFactory/newInstance()
org/apache/fop/fo/XMLObj/createBasicDocument()#org/apache/commons/logging/Log/error(java.lang.Object,java.lang.Throwable)
org/apache/fop/fo/XMLObj/createBasicDocument()#javax/xml/parsers/DocumentBuilderFactory/setNamespaceAware(boolean)
org/apache/fop/fo/XMLObj/createBasicDocument()#org/apache/fop/fo/XMLObj/getNamespaceURI()
org/apache/fop/fo/XMLObj/createBasicDocument()#org/w3c/dom/Document/getDocumentElement()
org/apache/fop/fo/XMLObj/createBasicDocument()#javax/xml/parsers/DocumentBuilder/newDocument()
org/apache/fop/fo/XMLObj/setAttributes(org.w3c.dom.Element,org.xml.sax.Attributes)#org/xml/sax/Attributes/getQName(int)
org/apache/fop/fo/XMLObj/setAttributes(org.w3c.dom.Element,org.xml.sax.Attributes)#org/xml/sax/Attributes/getLength()
org/apache/fop/fo/XMLObj/setAttributes(org.w3c.dom.Element,org.xml.sax.Attributes)#org/w3c/dom/Element/setAttributeNS(java.lang.String,java.lang.String,java.lang.String)
org/apache/fop/fo/XMLObj/setAttributes(org.w3c.dom.Element,org.xml.sax.Attributes)#java/lang/String/equals(java.lang.Object)
org/apache/fop/fo/XMLObj/setAttributes(org.w3c.dom.Element,org.xml.sax.Attributes)#java/lang/String/indexOf(java.lang.String)
org/apache/fop/fo/XMLObj/setAttributes(org.w3c.dom.Element,org.xml.sax.Attributes)#java/lang/String/substring(int)
org/apache/fop/fo/XMLObj/setAttributes(org.w3c.dom.Element,org.xml.sax.Attributes)#java/util/HashMap/get(java.lang.Object)
org/apache/fop/fo/XMLObj/setAttributes(org.w3c.dom.Element,org.xml.sax.Attributes)#org/xml/sax/Attributes/getValue(int)
org/apache/fop/fo/XMLObj/setAttributes(org.w3c.dom.Element,org.xml.sax.Attributes)#java/util/HashMap/put(java.lang.Object,java.lang.Object)
org/apache/fop/fo/XMLObj/setAttributes(org.w3c.dom.Element,org.xml.sax.Attributes)#org/w3c/dom/Element/setAttribute(java.lang.String,java.lang.String)
org/apache/fop/fo/XMLObj/setAttributes(org.w3c.dom.Element,org.xml.sax.Attributes)#java/lang/String/substring(int,int)
org/apache/fop/render/ps/ImageEncoderCCITTFax/getImplicitFilter()#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/apache/fop/render/ps/ImageEncoderCCITTFax/getImplicitFilter()#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/render/ps/ImageEncoderCCITTFax/getImplicitFilter()#org/apache/xmlgraphics/image/loader/impl/ImageRawCCITTFax/getCompression()
org/apache/fop/render/ps/ImageEncoderCCITTFax/getImplicitFilter()#org/apache/xmlgraphics/image/loader/impl/ImageRawCCITTFax/getSize()
org/apache/fop/render/ps/ImageEncoderCCITTFax/getImplicitFilter()#java/lang/StringBuilder/StringBuilder()
org/apache/fop/render/ps/ImageEncoderCCITTFax/getImplicitFilter()#org/apache/xmlgraphics/ps/PSDictionary/toString()
org/apache/fop/render/ps/ImageEncoderCCITTFax/getImplicitFilter()#org/apache/xmlgraphics/ps/PSDictionary/put(java.lang.Object,java.lang.Object)
org/apache/fop/render/ps/ImageEncoderCCITTFax/getImplicitFilter()#java/lang/StringBuilder/toString()
org/apache/fop/render/ps/ImageEncoderCCITTFax/getImplicitFilter()#java/lang/Integer/Integer(int)
org/apache/fop/render/ps/ImageEncoderCCITTFax/getImplicitFilter()#org/apache/xmlgraphics/ps/PSDictionary/PSDictionary()
org/apache/fop/render/ps/ImageEncoderCCITTFax/getImplicitFilter()#org/apache/xmlgraphics/image/loader/ImageSize/getWidthPx()
org/apache/fop/render/ps/ImageEncoderCCITTFax/getImplicitFilter()#java/lang/StringBuilder/append(int)
org/apache/fop/image/loader/batik/PreloaderWMF/Loader/getImage(java.lang.String,javax.xml.transform.Source,org.apache.xmlgraphics.image.loader.ImageContext)#org/apache/xmlgraphics/image/loader/ImageSize/setResolution(double)
org/apache/fop/image/loader/batik/PreloaderWMF/Loader/getImage(java.lang.String,javax.xml.transform.Source,org.apache.xmlgraphics.image.loader.ImageContext)#org/apache/commons/io/IOUtils/closeQuietly(java.io.InputStream)
org/apache/fop/image/loader/batik/PreloaderWMF/Loader/getImage(java.lang.String,javax.xml.transform.Source,org.apache.xmlgraphics.image.loader.ImageContext)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/image/loader/batik/PreloaderWMF/Loader/getImage(java.lang.String,javax.xml.transform.Source,org.apache.xmlgraphics.image.loader.ImageContext)#org/apache/batik/transcoder/wmf/tosvg/WMFRecordStore/WMFRecordStore()
org/apache/fop/image/loader/batik/PreloaderWMF/Loader/getImage(java.lang.String,javax.xml.transform.Source,org.apache.xmlgraphics.image.loader.ImageContext)#java/io/DataInputStream/DataInputStream(java.io.InputStream)
org/apache/fop/image/loader/batik/PreloaderWMF/Loader/getImage(java.lang.String,javax.xml.transform.Source,org.apache.xmlgraphics.image.loader.ImageContext)#java/io/InputStream/mark(int)
org/apache/fop/image/loader/batik/PreloaderWMF/Loader/getImage(java.lang.String,javax.xml.transform.Source,org.apache.xmlgraphics.image.loader.ImageContext)#org/apache/xmlgraphics/image/loader/ImageInfo/getCustomObjects()
org/apache/fop/image/loader/batik/PreloaderWMF/Loader/getImage(java.lang.String,javax.xml.transform.Source,org.apache.xmlgraphics.image.loader.ImageContext)#org/apache/batik/transcoder/wmf/tosvg/WMFRecordStore/getWidthUnits()
org/apache/fop/image/loader/batik/PreloaderWMF/Loader/getImage(java.lang.String,javax.xml.transform.Source,org.apache.xmlgraphics.image.loader.ImageContext)#org/apache/commons/io/EndianUtils/swapInteger(int)
org/apache/fop/image/loader/batik/PreloaderWMF/Loader/getImage(java.lang.String,javax.xml.transform.Source,org.apache.xmlgraphics.image.loader.ImageContext)#org/apache/xmlgraphics/image/loader/ImageSize/setSizeInPixels(int,int)
org/apache/fop/image/loader/batik/PreloaderWMF/Loader/getImage(java.lang.String,javax.xml.transform.Source,org.apache.xmlgraphics.image.loader.ImageContext)#org/apache/xmlgraphics/image/loader/ImageInfo/setSize(org.apache.xmlgraphics.image.loader.ImageSize)
org/apache/fop/image/loader/batik/PreloaderWMF/Loader/getImage(java.lang.String,javax.xml.transform.Source,org.apache.xmlgraphics.image.loader.ImageContext)#java/io/DataInputStream/reset()
org/apache/fop/image/loader/batik/PreloaderWMF/Loader/getImage(java.lang.String,javax.xml.transform.Source,org.apache.xmlgraphics.image.loader.ImageContext)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/fop/image/loader/batik/PreloaderWMF/Loader/getImage(java.lang.String,javax.xml.transform.Source,org.apache.xmlgraphics.image.loader.ImageContext)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/fop/image/loader/batik/PreloaderWMF/Loader/getImage(java.lang.String,javax.xml.transform.Source,org.apache.xmlgraphics.image.loader.ImageContext)#org/apache/xmlgraphics/io/XmlSourceUtil/needInputStream(javax.xml.transform.Source)
org/apache/fop/image/loader/batik/PreloaderWMF/Loader/getImage(java.lang.String,javax.xml.transform.Source,org.apache.xmlgraphics.image.loader.ImageContext)#org/apache/batik/transcoder/wmf/tosvg/WMFRecordStore/getMetaFileUnitsPerInch()
org/apache/fop/image/loader/batik/PreloaderWMF/Loader/getImage(java.lang.String,javax.xml.transform.Source,org.apache.xmlgraphics.image.loader.ImageContext)#org/apache/xmlgraphics/image/loader/ImageInfo/ImageInfo(java.lang.String,java.lang.String)
org/apache/fop/image/loader/batik/PreloaderWMF/Loader/getImage(java.lang.String,javax.xml.transform.Source,org.apache.xmlgraphics.image.loader.ImageContext)#org/apache/commons/logging/Log/warn(java.lang.Object,java.lang.Throwable)
org/apache/fop/image/loader/batik/PreloaderWMF/Loader/getImage(java.lang.String,javax.xml.transform.Source,org.apache.xmlgraphics.image.loader.ImageContext)#org/apache/xmlgraphics/image/loader/ImageSize/ImageSize()
org/apache/fop/image/loader/batik/PreloaderWMF/Loader/getImage(java.lang.String,javax.xml.transform.Source,org.apache.xmlgraphics.image.loader.ImageContext)#java/io/InputStream/reset()
org/apache/fop/image/loader/batik/PreloaderWMF/Loader/getImage(java.lang.String,javax.xml.transform.Source,org.apache.xmlgraphics.image.loader.ImageContext)#org/apache/batik/transcoder/wmf/tosvg/WMFRecordStore/read(java.io.DataInputStream)
org/apache/fop/image/loader/batik/PreloaderWMF/Loader/getImage(java.lang.String,javax.xml.transform.Source,org.apache.xmlgraphics.image.loader.ImageContext)#java/io/DataInputStream/readInt()
org/apache/fop/image/loader/batik/PreloaderWMF/Loader/getImage(java.lang.String,javax.xml.transform.Source,org.apache.xmlgraphics.image.loader.ImageContext)#java/io/IOException/getMessage()
org/apache/fop/image/loader/batik/PreloaderWMF/Loader/getImage(java.lang.String,javax.xml.transform.Source,org.apache.xmlgraphics.image.loader.ImageContext)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/image/loader/batik/PreloaderWMF/Loader/getImage(java.lang.String,javax.xml.transform.Source,org.apache.xmlgraphics.image.loader.ImageContext)#org/apache/batik/transcoder/wmf/tosvg/WMFRecordStore/getHeightUnits()
org/apache/fop/image/loader/batik/PreloaderWMF/Loader/getImage(java.lang.String,javax.xml.transform.Source,org.apache.xmlgraphics.image.loader.ImageContext)#java/lang/StringBuilder/toString()
org/apache/fop/image/loader/batik/PreloaderWMF/Loader/getImage(java.lang.String,javax.xml.transform.Source,org.apache.xmlgraphics.image.loader.ImageContext)#org/apache/xmlgraphics/image/loader/ImageSize/calcSizeFromPixels()
org/apache/fop/render/awt/viewer/PreviewPanel/Reloader/run()#org/apache/fop/render/awt/AWTRenderer/getNumberOfPages()
org/apache/fop/render/awt/viewer/PreviewPanel/Reloader/run()#javax/swing/JPanel/add(java.awt.Component)
org/apache/fop/render/awt/viewer/PreviewPanel/Reloader/run()#org/apache/fop/render/awt/AWTRenderer/clearViewportList()
org/apache/fop/render/awt/viewer/PreviewPanel/Reloader/run()#javax/swing/JLabel/JLabel(java.lang.String)
org/apache/fop/render/awt/viewer/PreviewPanel/Reloader/run()#org/apache/fop/render/awt/AWTRenderer/isRenderingDone()
org/apache/fop/render/awt/viewer/PreviewPanel/Reloader/run()#javax/swing/JOptionPane/showMessageDialog(java.awt.Component,java.lang.Object,java.lang.String,int)
org/apache/fop/render/awt/viewer/PreviewPanel/Reloader/run()#org/apache/fop/render/awt/viewer/ImageProxyPanel/setBorder(javax.swing.border.Border)
org/apache/fop/render/awt/viewer/PreviewPanel/Reloader/run()#javax/swing/JPanel/removeAll()
org/apache/fop/render/awt/viewer/PreviewPanel/Reloader/run()#javax/swing/border/EmptyBorder/EmptyBorder(int,int,int,int)
org/apache/fop/fo/expr/PropertyParser/parsePrimaryExpr()#org/apache/fop/datatypes/Length/isAbsolute()
org/apache/fop/fo/expr/PropertyParser/parsePrimaryExpr()#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/fo/expr/PropertyParser/parsePrimaryExpr()#java/lang/String/length()
org/apache/fop/fo/expr/PropertyParser/parsePrimaryExpr()#java/lang/String/substring(int,int)
org/apache/fop/fo/expr/PropertyParser/parsePrimaryExpr()#java/util/HashMap/get(java.lang.Object)
org/apache/fop/fo/expr/PropertyParser/parsePrimaryExpr()#java/lang/StringBuilder/toString()
org/apache/fop/fo/expr/PropertyParser/parsePrimaryExpr()#java/lang/Double/parseDouble(java.lang.String)
org/apache/fop/fo/expr/PropertyParser/parsePrimaryExpr()#java/lang/String/equals(java.lang.Object)
org/apache/fop/fo/expr/PropertyParser/parsePrimaryExpr()#java/lang/StringBuilder/StringBuilder()
org/apache/fop/fo/expr/PropertyParser/parsePrimaryExpr()#org/apache/fop/fo/expr/PropertyParser/next()
org/apache/fop/fo/expr/PropertyParser/parsePrimaryExpr()#org/apache/fop/fo/FObj/getUserAgent()
org/apache/fop/fo/expr/PropertyParser/parsePrimaryExpr()#java/lang/String/substring(int)
org/apache/fop/fo/expr/PropertyParser/parsePrimaryExpr()#java/lang/Integer/Integer(java.lang.String)
org/apache/fop/fo/expr/PropertyParser/parsePrimaryExpr()#java/lang/Double/Double(java.lang.String)
org/apache/fop/fo/expr/PropertyParser/parseArgs(org.apache.fop.fo.expr.Function)#java/util/ArrayList/ArrayList(int)
org/apache/fop/fo/expr/PropertyParser/parseArgs(org.apache.fop.fo.expr.Function)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/fo/expr/PropertyParser/parseArgs(org.apache.fop.fo.expr.Function)#java/util/List/size()
org/apache/fop/fo/expr/PropertyParser/parseArgs(org.apache.fop.fo.expr.Function)#java/util/List/toArray(java.lang.Object[])
org/apache/fop/fo/expr/PropertyParser/parseArgs(org.apache.fop.fo.expr.Function)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/fo/expr/PropertyParser/parseArgs(org.apache.fop.fo.expr.Function)#org/apache/fop/fo/expr/PropertyParser/next()
org/apache/fop/fo/expr/PropertyParser/parseArgs(org.apache.fop.fo.expr.Function)#java/lang/StringBuilder/toString()
org/apache/fop/fo/expr/PropertyParser/parseArgs(org.apache.fop.fo.expr.Function)#java/lang/StringBuilder/append(int)
org/apache/fop/fo/expr/PropertyParser/parseArgs(org.apache.fop.fo.expr.Function)#java/util/List/add(java.lang.Object)
org/apache/fop/cli/Main/startFOPWithDynamicClasspath(java.lang.String[])#java/lang/Class/getMethod(java.lang.String,java.lang.Class[])
org/apache/fop/cli/Main/startFOPWithDynamicClasspath(java.lang.String[])#java/lang/Thread/currentThread()
org/apache/fop/cli/Main/startFOPWithDynamicClasspath(java.lang.String[])#java/lang/System/exit(int)
org/apache/fop/cli/Main/startFOPWithDynamicClasspath(java.lang.String[])#java/lang/Exception/printStackTrace()
org/apache/fop/cli/Main/startFOPWithDynamicClasspath(java.lang.String[])#java/lang/Class/forName(java.lang.String,boolean,java.lang.ClassLoader)
org/apache/fop/cli/Main/startFOPWithDynamicClasspath(java.lang.String[])#org/apache/fop/cli/Main$2/2(java.net.URL[])
org/apache/fop/cli/Main/startFOPWithDynamicClasspath(java.lang.String[])#java/io/PrintStream/println(java.lang.String)
org/apache/fop/cli/Main/startFOPWithDynamicClasspath(java.lang.String[])#java/lang/Thread/setContextClassLoader(java.lang.ClassLoader)
org/apache/fop/cli/Main/startFOPWithDynamicClasspath(java.lang.String[])#java/lang/reflect/Method/invoke(java.lang.Object,java.lang.Object[])
org/apache/fop/cli/Main/startFOPWithDynamicClasspath(java.lang.String[])#java/security/AccessController/doPrivileged(java.security.PrivilegedAction)
org/apache/fop/cli/Main/getJARList()#java/util/ArrayList/ArrayList()
org/apache/fop/cli/Main/getJARList()#java/io/File/getName()
org/apache/fop/cli/Main/getJARList()#java/io/File/File(java.io.File,java.lang.String)
org/apache/fop/cli/Main/getJARList()#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/cli/Main/getJARList()#java/util/List/size()
org/apache/fop/cli/Main/getJARList()#java/io/File/exists()
org/apache/fop/cli/Main/getJARList()#java/io/File/File(java.lang.String)
org/apache/fop/cli/Main/getJARList()#java/io/File/getAbsolutePath()
org/apache/fop/cli/Main/getJARList()#java/util/List/add(java.lang.Object)
org/apache/fop/cli/Main/getJARList()#org/apache/fop/cli/Main$1/1()
org/apache/fop/cli/Main/getJARList()#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/apache/fop/cli/Main/getJARList()#java/io/File/getAbsoluteFile()
org/apache/fop/cli/Main/getJARList()#java/net/URI/toURL()
org/apache/fop/cli/Main/getJARList()#java/io/File/listFiles(java.io.FileFilter)
org/apache/fop/cli/Main/getJARList()#java/lang/String/equals(java.lang.Object)
org/apache/fop/cli/Main/getJARList()#java/util/List/toArray(java.lang.Object[])
org/apache/fop/cli/Main/getJARList()#java/lang/System/getProperty(java.lang.String)
org/apache/fop/cli/Main/getJARList()#java/lang/StringBuilder/StringBuilder()
org/apache/fop/cli/Main/getJARList()#java/io/File/toURI()
org/apache/fop/cli/Main/getJARList()#java/lang/StringBuilder/toString()
org/apache/fop/cli/Main/getJARList()#java/io/File/getParentFile()
org/apache/fop/fonts/FontInfo/addFontProperties(java.lang.String,org.apache.fop.fonts.FontTriplet)#java/lang/Integer/intValue()
org/apache/fop/fonts/FontInfo/addFontProperties(java.lang.String,org.apache.fop.fonts.FontTriplet)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/fonts/FontInfo/addFontProperties(java.lang.String,org.apache.fop.fonts.FontTriplet)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/fonts/FontInfo/addFontProperties(java.lang.String,org.apache.fop.fonts.FontTriplet)#java/lang/Integer/valueOf(int)
org/apache/fop/fonts/FontInfo/addFontProperties(java.lang.String,org.apache.fop.fonts.FontTriplet)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/fop/fonts/FontInfo/addFontProperties(java.lang.String,org.apache.fop.fonts.FontTriplet)#java/lang/StringBuilder/toString()
org/apache/fop/fonts/FontInfo/addFontProperties(java.lang.String,org.apache.fop.fonts.FontTriplet)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/fop/fonts/FontInfo/addFontProperties(java.lang.String,org.apache.fop.fonts.FontTriplet)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/fop/fonts/FontInfo/addFontProperties(java.lang.String,org.apache.fop.fonts.FontTriplet)#org/apache/commons/logging/Log/isDebugEnabled()
org/apache/fop/fonts/FontInfo/addFontProperties(java.lang.String,org.apache.fop.fonts.FontTriplet)#java/util/Map/get(java.lang.Object)
org/apache/fop/fonts/FontInfo/getFontInstanceForAWTFont(java.awt.Font)#java/awt/Font/getSize2D()
org/apache/fop/fonts/FontInfo/getFontInstanceForAWTFont(java.awt.Font)#java/util/Iterator/hasNext()
org/apache/fop/fonts/FontInfo/getFontInstanceForAWTFont(java.awt.Font)#java/util/List/isEmpty()
org/apache/fop/fonts/FontInfo/getFontInstanceForAWTFont(java.awt.Font)#java/util/Iterator/next()
org/apache/fop/fonts/FontInfo/getFontInstanceForAWTFont(java.awt.Font)#java/lang/String/equals(java.lang.Object)
org/apache/fop/fonts/FontInfo/getFontInstanceForAWTFont(java.awt.Font)#java/awt/Font/getFamily()
org/apache/fop/fonts/FontInfo/getFontInstanceForAWTFont(java.awt.Font)#java/lang/Math/round(float)
org/apache/fop/fonts/FontInfo/getFontInstanceForAWTFont(java.awt.Font)#java/awt/Font/isItalic()
org/apache/fop/fonts/FontInfo/getFontInstanceForAWTFont(java.awt.Font)#java/awt/Font/isBold()
org/apache/fop/fonts/FontInfo/getFontInstanceForAWTFont(java.awt.Font)#java/util/List/iterator()
org/apache/fop/fonts/FontInfo/getFontInstanceForAWTFont(java.awt.Font)#java/awt/Font/getName()
org/apache/fop/fonts/FontInfo/fontLookup(java.lang.String[],java.lang.String,int)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/apache/fop/fonts/FontInfo/fontLookup(java.lang.String[],java.lang.String,int)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/fonts/FontInfo/fontLookup(java.lang.String[],java.lang.String,int)#java/util/List/size()
org/apache/fop/fonts/FontInfo/fontLookup(java.lang.String[],java.lang.String,int)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/fonts/FontInfo/fontLookup(java.lang.String[],java.lang.String,int)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/fop/fonts/FontInfo/fontLookup(java.lang.String[],java.lang.String,int)#java/lang/StringBuffer/append(java.lang.String)
org/apache/fop/fonts/FontInfo/fontLookup(java.lang.String[],java.lang.String,int)#java/lang/StringBuffer/StringBuffer()
org/apache/fop/fonts/FontInfo/fontLookup(java.lang.String[],java.lang.String,int)#java/lang/StringBuilder/toString()
org/apache/fop/fonts/FontInfo/fontLookup(java.lang.String[],java.lang.String,int)#java/util/List/toArray(java.lang.Object[])
org/apache/fop/fonts/FontInfo/fontLookup(java.lang.String[],java.lang.String,int)#java/lang/StringBuffer/toString()
org/apache/fop/fonts/FontInfo/toString()#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/fonts/FontInfo/toString()#java/lang/StringBuilder/StringBuilder()
org/apache/fop/fonts/FontInfo/toString()#java/util/Set/iterator()
org/apache/fop/fonts/FontInfo/toString()#java/lang/StringBuffer/append(java.lang.String)
org/apache/fop/fonts/FontInfo/toString()#java/util/TreeSet/TreeSet()
org/apache/fop/fonts/FontInfo/toString()#java/lang/StringBuffer/StringBuffer()
org/apache/fop/fonts/FontInfo/toString()#java/lang/StringBuilder/toString()
org/apache/fop/fonts/FontInfo/toString()#java/util/SortedSet/add(java.lang.Object)
org/apache/fop/fonts/FontInfo/toString()#java/util/Iterator/hasNext()
org/apache/fop/fonts/FontInfo/toString()#java/util/Iterator/next()
org/apache/fop/fonts/FontInfo/toString()#java/util/Map/keySet()
org/apache/fop/fonts/FontInfo/toString()#java/util/SortedSet/iterator()
org/apache/fop/fonts/FontInfo/toString()#java/lang/StringBuffer/toString()
org/apache/fop/fonts/FontInfo/getTripletsFor(java.lang.String)#java/util/ArrayList/ArrayList()
org/apache/fop/fonts/FontInfo/getTripletsFor(java.lang.String)#java/util/Iterator/hasNext()
org/apache/fop/fonts/FontInfo/getTripletsFor(java.lang.String)#java/util/Map$Entry/getKey()
org/apache/fop/fonts/FontInfo/getTripletsFor(java.lang.String)#java/util/Iterator/next()
org/apache/fop/fonts/FontInfo/getTripletsFor(java.lang.String)#java/lang/String/equals(java.lang.Object)
org/apache/fop/fonts/FontInfo/getTripletsFor(java.lang.String)#java/util/Set/iterator()
org/apache/fop/fonts/FontInfo/getTripletsFor(java.lang.String)#java/util/List/add(java.lang.Object)
org/apache/fop/fonts/FontInfo/getTripletsFor(java.lang.String)#java/util/Map$Entry/getValue()
org/apache/fop/fonts/FontInfo/getTripletsFor(java.lang.String)#java/util/Map/entrySet()
org/apache/fop/fonts/FontInfo/logDuplicateFont(org.apache.fop.fonts.FontTriplet,boolean,java.lang.String,int,java.lang.String,int)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/fop/fonts/FontInfo/logDuplicateFont(org.apache.fop.fonts.FontTriplet,boolean,java.lang.String,int,java.lang.String,int)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/fonts/FontInfo/logDuplicateFont(org.apache.fop.fonts.FontTriplet,boolean,java.lang.String,int,java.lang.String,int)#java/lang/StringBuilder/append(int)
org/apache/fop/fonts/FontInfo/logDuplicateFont(org.apache.fop.fonts.FontTriplet,boolean,java.lang.String,int,java.lang.String,int)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/fonts/FontInfo/logDuplicateFont(org.apache.fop.fonts.FontTriplet,boolean,java.lang.String,int,java.lang.String,int)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/fop/fonts/FontInfo/logDuplicateFont(org.apache.fop.fonts.FontTriplet,boolean,java.lang.String,int,java.lang.String,int)#org/apache/fop/fonts/Typeface/getFullName()
org/apache/fop/fonts/FontInfo/logDuplicateFont(org.apache.fop.fonts.FontTriplet,boolean,java.lang.String,int,java.lang.String,int)#java/lang/StringBuilder/toString()
org/apache/fop/fonts/FontInfo/logDuplicateFont(org.apache.fop.fonts.FontTriplet,boolean,java.lang.String,int,java.lang.String,int)#org/apache/commons/logging/Log/isDebugEnabled()
org/apache/fop/fonts/FontInfo/logDuplicateFont(org.apache.fop.fonts.FontTriplet,boolean,java.lang.String,int,java.lang.String,int)#java/util/Map/get(java.lang.Object)
org/apache/fop/render/pdf/extensions/PDFDictionaryAttachment/toSAX(org.xml.sax.ContentHandler,org.apache.fop.render.pdf.extensions.PDFCollectionEntryExtension)#org/xml/sax/helpers/AttributesImpl/AttributesImpl()
org/apache/fop/render/pdf/extensions/PDFDictionaryAttachment/toSAX(org.xml.sax.ContentHandler,org.apache.fop.render.pdf.extensions.PDFCollectionEntryExtension)#org/apache/fop/render/pdf/extensions/PDFCollectionEntryExtension/getElementName()
org/apache/fop/render/pdf/extensions/PDFDictionaryAttachment/toSAX(org.xml.sax.ContentHandler,org.apache.fop.render.pdf.extensions.PDFCollectionEntryExtension)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/render/pdf/extensions/PDFDictionaryAttachment/toSAX(org.xml.sax.ContentHandler,org.apache.fop.render.pdf.extensions.PDFCollectionEntryExtension)#org/xml/sax/ContentHandler/endElement(java.lang.String,java.lang.String,java.lang.String)
org/apache/fop/render/pdf/extensions/PDFDictionaryAttachment/toSAX(org.xml.sax.ContentHandler,org.apache.fop.render.pdf.extensions.PDFCollectionEntryExtension)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/render/pdf/extensions/PDFDictionaryAttachment/toSAX(org.xml.sax.ContentHandler,org.apache.fop.render.pdf.extensions.PDFCollectionEntryExtension)#org/xml/sax/ContentHandler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)
org/apache/fop/render/pdf/extensions/PDFDictionaryAttachment/toSAX(org.xml.sax.ContentHandler,org.apache.fop.render.pdf.extensions.PDFCollectionEntryExtension)#java/lang/String/toCharArray()
org/apache/fop/render/pdf/extensions/PDFDictionaryAttachment/toSAX(org.xml.sax.ContentHandler,org.apache.fop.render.pdf.extensions.PDFCollectionEntryExtension)#org/apache/fop/render/pdf/extensions/PDFCollectionEntryExtension/getValueAsXMLEscapedString()
org/apache/fop/render/pdf/extensions/PDFDictionaryAttachment/toSAX(org.xml.sax.ContentHandler,org.apache.fop.render.pdf.extensions.PDFCollectionEntryExtension)#java/lang/StringBuilder/toString()
org/apache/fop/render/pdf/extensions/PDFDictionaryAttachment/toSAX(org.xml.sax.ContentHandler,org.apache.fop.render.pdf.extensions.PDFCollectionEntryExtension)#org/xml/sax/ContentHandler/characters(char[],int,int)
org/apache/fop/render/pdf/extensions/PDFDictionaryAttachment/toSAX(org.xml.sax.ContentHandler,org.apache.fop.render.pdf.extensions.PDFArrayExtension)#org/xml/sax/helpers/AttributesImpl/AttributesImpl()
org/apache/fop/render/pdf/extensions/PDFDictionaryAttachment/toSAX(org.xml.sax.ContentHandler,org.apache.fop.render.pdf.extensions.PDFArrayExtension)#java/util/Iterator/hasNext()
org/apache/fop/render/pdf/extensions/PDFDictionaryAttachment/toSAX(org.xml.sax.ContentHandler,org.apache.fop.render.pdf.extensions.PDFArrayExtension)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/render/pdf/extensions/PDFDictionaryAttachment/toSAX(org.xml.sax.ContentHandler,org.apache.fop.render.pdf.extensions.PDFArrayExtension)#org/xml/sax/ContentHandler/endElement(java.lang.String,java.lang.String,java.lang.String)
org/apache/fop/render/pdf/extensions/PDFDictionaryAttachment/toSAX(org.xml.sax.ContentHandler,org.apache.fop.render.pdf.extensions.PDFArrayExtension)#org/xml/sax/ContentHandler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)
org/apache/fop/render/pdf/extensions/PDFDictionaryAttachment/toSAX(org.xml.sax.ContentHandler,org.apache.fop.render.pdf.extensions.PDFArrayExtension)#java/util/List/iterator()
org/apache/fop/render/pdf/extensions/PDFDictionaryAttachment/toSAX(org.xml.sax.ContentHandler,org.apache.fop.render.pdf.extensions.PDFArrayExtension)#java/lang/StringBuilder/toString()
org/apache/fop/render/pdf/extensions/PDFDictionaryAttachment/toSAX(org.xml.sax.ContentHandler,org.apache.fop.render.pdf.extensions.PDFArrayExtension)#java/util/Iterator/next()
org/apache/fop/render/pdf/extensions/PDFDictionaryAttachment/toSAX(org.xml.sax.ContentHandler,org.apache.fop.render.pdf.extensions.PDFArrayExtension)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/render/pdf/extensions/PDFDictionaryAttachment/toSAX(org.xml.sax.ContentHandler,org.apache.fop.render.pdf.extensions.PDFDictionaryExtension)#java/util/Iterator/hasNext()
org/apache/fop/render/pdf/extensions/PDFDictionaryAttachment/toSAX(org.xml.sax.ContentHandler,org.apache.fop.render.pdf.extensions.PDFDictionaryExtension)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/render/pdf/extensions/PDFDictionaryAttachment/toSAX(org.xml.sax.ContentHandler,org.apache.fop.render.pdf.extensions.PDFDictionaryExtension)#org/xml/sax/ContentHandler/endElement(java.lang.String,java.lang.String,java.lang.String)
org/apache/fop/render/pdf/extensions/PDFDictionaryAttachment/toSAX(org.xml.sax.ContentHandler,org.apache.fop.render.pdf.extensions.PDFDictionaryExtension)#java/util/Iterator/next()
org/apache/fop/render/pdf/extensions/PDFDictionaryAttachment/toSAX(org.xml.sax.ContentHandler,org.apache.fop.render.pdf.extensions.PDFDictionaryExtension)#org/xml/sax/ContentHandler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)
org/apache/fop/render/pdf/extensions/PDFDictionaryAttachment/toSAX(org.xml.sax.ContentHandler,org.apache.fop.render.pdf.extensions.PDFDictionaryExtension)#java/util/List/iterator()
org/apache/fop/render/pdf/extensions/PDFDictionaryAttachment/toSAX(org.xml.sax.ContentHandler,org.apache.fop.render.pdf.extensions.PDFDictionaryExtension)#java/lang/StringBuilder/toString()
org/apache/fop/render/pdf/extensions/PDFDictionaryAttachment/toSAX(org.xml.sax.ContentHandler,org.apache.fop.render.pdf.extensions.PDFDictionaryExtension)#org/xml/sax/helpers/AttributesImpl/AttributesImpl()
org/apache/fop/render/pdf/extensions/PDFDictionaryAttachment/toSAX(org.xml.sax.ContentHandler,org.apache.fop.render.pdf.extensions.PDFDictionaryExtension)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/render/rtf/rtflib/tools/PercentContext/getBaseLength(int,org.apache.fop.fo.FObj)#java/lang/Integer/intValue()
org/apache/fop/render/rtf/rtflib/tools/PercentContext/getBaseLength(int,org.apache.fop.fo.FObj)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/render/rtf/rtflib/tools/PercentContext/getBaseLength(int,org.apache.fop.fo.FObj)#java/lang/StringBuilder/append(int)
org/apache/fop/render/rtf/rtflib/tools/PercentContext/getBaseLength(int,org.apache.fop.fo.FObj)#java/util/Map/get(java.lang.Object)
org/apache/fop/render/rtf/rtflib/tools/PercentContext/getBaseLength(int,org.apache.fop.fo.FObj)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/render/rtf/rtflib/tools/PercentContext/getBaseLength(int,org.apache.fop.fo.FObj)#java/lang/Integer/parseInt(java.lang.String)
org/apache/fop/render/rtf/rtflib/tools/PercentContext/getBaseLength(int,org.apache.fop.fo.FObj)#org/apache/commons/logging/Log/error(java.lang.Object)
org/apache/fop/render/rtf/rtflib/tools/PercentContext/getBaseLength(int,org.apache.fop.fo.FObj)#java/lang/Exception/Exception(java.lang.String)
org/apache/fop/render/rtf/rtflib/tools/PercentContext/getBaseLength(int,org.apache.fop.fo.FObj)#java/lang/StringBuilder/toString()
org/apache/fop/render/rtf/rtflib/tools/PercentContext/getBaseLength(int,org.apache.fop.fo.FObj)#java/lang/Object/toString()
org/apache/fop/render/rtf/rtflib/tools/PercentContext/getBaseLength(int,org.apache.fop.fo.FObj)#org/apache/fop/fo/FObj/getParent()
org/apache/fop/render/rtf/rtflib/tools/PercentContext/findParent(org.apache.fop.fo.FONode)#java/lang/Object/toString()
org/apache/fop/render/rtf/rtflib/tools/PercentContext/findParent(org.apache.fop.fo.FONode)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/render/rtf/rtflib/tools/PercentContext/findParent(org.apache.fop.fo.FONode)#java/lang/Integer/Integer(int)
org/apache/fop/render/rtf/rtflib/tools/PercentContext/findParent(org.apache.fop.fo.FONode)#java/util/Map/get(java.lang.Object)
org/apache/fop/render/rtf/rtflib/tools/PercentContext/findParent(org.apache.fop.fo.FONode)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/render/rtf/rtflib/tools/PercentContext/findParent(org.apache.fop.fo.FONode)#java/util/Map/containsKey(java.lang.Object)
org/apache/fop/render/rtf/rtflib/tools/PercentContext/findParent(org.apache.fop.fo.FONode)#java/lang/Integer/Integer(java.lang.String)
org/apache/fop/render/rtf/rtflib/tools/PercentContext/findParent(org.apache.fop.fo.FONode)#org/apache/commons/logging/Log/error(java.lang.Object)
org/apache/fop/render/rtf/rtflib/tools/PercentContext/findParent(org.apache.fop.fo.FONode)#java/lang/StringBuilder/toString()
org/apache/fop/complexscripts/scripts/IndicScriptProcessor/Syllabizer/getSyllabizer(java.lang.String,java.lang.String,java.lang.Class)#org/apache/fop/complexscripts/scripts/IndicScriptProcessor$DefaultSyllabizer/DefaultSyllabizer(java.lang.String,java.lang.String)
org/apache/fop/complexscripts/scripts/IndicScriptProcessor/Syllabizer/getSyllabizer(java.lang.String,java.lang.String,java.lang.Class)#org/apache/fop/complexscripts/scripts/IndicScriptProcessor$Syllabizer/makeSyllabizer(java.lang.String,java.lang.String,java.lang.Class)
org/apache/fop/complexscripts/scripts/IndicScriptProcessor/Syllabizer/getSyllabizer(java.lang.String,java.lang.String,java.lang.Class)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/fop/complexscripts/scripts/IndicScriptProcessor/Syllabizer/getSyllabizer(java.lang.String,java.lang.String,java.lang.Class)#org/apache/commons/logging/Log/warn(java.lang.Object)
org/apache/fop/complexscripts/scripts/IndicScriptProcessor/Syllabizer/getSyllabizer(java.lang.String,java.lang.String,java.lang.Class)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/complexscripts/scripts/IndicScriptProcessor/Syllabizer/getSyllabizer(java.lang.String,java.lang.String,java.lang.Class)#java/util/Map/get(java.lang.Object)
org/apache/fop/complexscripts/scripts/IndicScriptProcessor/Syllabizer/getSyllabizer(java.lang.String,java.lang.String,java.lang.Class)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/complexscripts/scripts/IndicScriptProcessor/Syllabizer/getSyllabizer(java.lang.String,java.lang.String,java.lang.Class)#org/apache/fop/complexscripts/scripts/IndicScriptProcessor$Syllabizer/makeSyllabizerId(java.lang.String,java.lang.String)
org/apache/fop/complexscripts/scripts/IndicScriptProcessor/Syllabizer/getSyllabizer(java.lang.String,java.lang.String,java.lang.Class)#java/lang/StringBuilder/toString()
org/apache/fop/render/pdf/PDFImageHandlerGraphics2D/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/xmlgraphics/image/loader/ImageSize/getDimensionMpt()
org/apache/fop/render/pdf/PDFImageHandlerGraphics2D/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/awt/Dimension/getWidth()
org/apache/fop/render/pdf/PDFImageHandlerGraphics2D/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/awt/geom/AffineTransform/AffineTransform()
org/apache/fop/render/pdf/PDFImageHandlerGraphics2D/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/xmlgraphics/java2d/GraphicContext/GraphicContext()
org/apache/fop/render/pdf/PDFImageHandlerGraphics2D/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/xmlgraphics/image/loader/impl/ImageGraphics2D/getGraphics2DImagePainter()
org/apache/fop/render/pdf/PDFImageHandlerGraphics2D/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/lang/StringBuilder/toString()
org/apache/fop/render/pdf/PDFImageHandlerGraphics2D/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/xmlgraphics/java2d/Graphics2DImagePainter/paint(java.awt.Graphics2D,java.awt.geom.Rectangle2D)
org/apache/fop/render/pdf/PDFImageHandlerGraphics2D/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/xmlgraphics/image/loader/Image/getInfo()
org/apache/fop/render/pdf/PDFImageHandlerGraphics2D/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/awt/geom/AffineTransform/translate(double,double)
org/apache/fop/render/pdf/PDFImageHandlerGraphics2D/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/render/pdf/PDFImageHandlerGraphics2D/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/xmlgraphics/image/loader/ImageInfo/getSize()
org/apache/fop/render/pdf/PDFImageHandlerGraphics2D/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/awt/geom/Rectangle2D$Double/Double(double,double,double,double)
org/apache/fop/render/pdf/PDFImageHandlerGraphics2D/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/fop/pdf/PDFPage/makeReference()
org/apache/fop/render/pdf/PDFImageHandlerGraphics2D/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/awt/Dimension/getHeight()
org/apache/fop/render/pdf/PDFImageHandlerGraphics2D/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/render/pdf/PDFImageHandlerGraphics2D/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/fop/pdf/PDFPaintingState/concatenate(java.awt.geom.AffineTransform)
org/apache/fop/render/pdf/PDFImageHandlerGraphics2D/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/lang/StringBuilder/append(float)
org/apache/fop/fonts/apps/PFMReader/main(java.lang.String[])#org/apache/fop/fonts/apps/PFMReader/writeFontXML(org.w3c.dom.Document,java.lang.String)
org/apache/fop/fonts/apps/PFMReader/main(java.lang.String[])#org/apache/fop/fonts/apps/PFMReader/determineLogLevel(java.util.Map)
org/apache/fop/fonts/apps/PFMReader/main(java.lang.String[])#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/fonts/apps/PFMReader/main(java.lang.String[])#java/util/Map/get(java.lang.Object)
org/apache/fop/fonts/apps/PFMReader/main(java.lang.String[])#java/util/HashMap/HashMap()
org/apache/fop/fonts/apps/PFMReader/main(java.lang.String[])#java/lang/System/exit(int)
org/apache/fop/fonts/apps/PFMReader/main(java.lang.String[])#org/apache/commons/logging/Log/error(java.lang.Object,java.lang.Throwable)
org/apache/fop/fonts/apps/PFMReader/main(java.lang.String[])#org/apache/fop/fonts/apps/PFMReader/parseArguments(java.util.Map,java.lang.String[])
org/apache/fop/fonts/apps/PFMReader/main(java.lang.String[])#org/apache/commons/logging/Log/info(java.lang.Object)
org/apache/fop/fonts/apps/PFMReader/main(java.lang.String[])#java/lang/StringBuilder/StringBuilder()
org/apache/fop/fonts/apps/PFMReader/main(java.lang.String[])#java/lang/StringBuilder/toString()
org/apache/fop/fonts/apps/PFMReader/constructFontXML(org.apache.fop.fonts.type1.PFMFile,java.lang.String,java.lang.String,java.lang.String,java.lang.String)#org/w3c/dom/Document/createElement(java.lang.String)
org/apache/fop/fonts/apps/PFMReader/constructFontXML(org.apache.fop.fonts.type1.PFMFile,java.lang.String,java.lang.String,java.lang.String,java.lang.String)#org/w3c/dom/Element/setAttribute(java.lang.String,java.lang.String)
org/apache/fop/fonts/apps/PFMReader/constructFontXML(org.apache.fop.fonts.type1.PFMFile,java.lang.String,java.lang.String,java.lang.String,java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/fonts/apps/PFMReader/constructFontXML(org.apache.fop.fonts.type1.PFMFile,java.lang.String,java.lang.String,java.lang.String,java.lang.String)#java/util/Map/entrySet()
org/apache/fop/fonts/apps/PFMReader/constructFontXML(org.apache.fop.fonts.type1.PFMFile,java.lang.String,java.lang.String,java.lang.String,java.lang.String)#java/util/Iterator/hasNext()
org/apache/fop/fonts/apps/PFMReader/constructFontXML(org.apache.fop.fonts.type1.PFMFile,java.lang.String,java.lang.String,java.lang.String,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/fonts/apps/PFMReader/constructFontXML(org.apache.fop.fonts.type1.PFMFile,java.lang.String,java.lang.String,java.lang.String,java.lang.String)#java/util/Map$Entry/getKey()
org/apache/fop/fonts/apps/PFMReader/constructFontXML(org.apache.fop.fonts.type1.PFMFile,java.lang.String,java.lang.String,java.lang.String,java.lang.String)#org/w3c/dom/Document/appendChild(org.w3c.dom.Node)
org/apache/fop/fonts/apps/PFMReader/constructFontXML(org.apache.fop.fonts.type1.PFMFile,java.lang.String,java.lang.String,java.lang.String,java.lang.String)#java/lang/Integer/Integer(int)
org/apache/fop/fonts/apps/PFMReader/constructFontXML(org.apache.fop.fonts.type1.PFMFile,java.lang.String,java.lang.String,java.lang.String,java.lang.String)#java/lang/Integer/toString()
org/apache/fop/fonts/apps/PFMReader/constructFontXML(org.apache.fop.fonts.type1.PFMFile,java.lang.String,java.lang.String,java.lang.String,java.lang.String)#java/lang/Integer/toString(int)
org/apache/fop/fonts/apps/PFMReader/constructFontXML(org.apache.fop.fonts.type1.PFMFile,java.lang.String,java.lang.String,java.lang.String,java.lang.String)#org/w3c/dom/Element/appendChild(org.w3c.dom.Node)
org/apache/fop/fonts/apps/PFMReader/constructFontXML(org.apache.fop.fonts.type1.PFMFile,java.lang.String,java.lang.String,java.lang.String,java.lang.String)#java/util/Map/get(java.lang.Object)
org/apache/fop/fonts/apps/PFMReader/constructFontXML(org.apache.fop.fonts.type1.PFMFile,java.lang.String,java.lang.String,java.lang.String,java.lang.String)#org/apache/commons/logging/Log/info(java.lang.Object)
org/apache/fop/fonts/apps/PFMReader/constructFontXML(org.apache.fop.fonts.type1.PFMFile,java.lang.String,java.lang.String,java.lang.String,java.lang.String)#java/util/Iterator/next()
org/apache/fop/fonts/apps/PFMReader/constructFontXML(org.apache.fop.fonts.type1.PFMFile,java.lang.String,java.lang.String,java.lang.String,java.lang.String)#java/util/Map/keySet()
org/apache/fop/fonts/apps/PFMReader/constructFontXML(org.apache.fop.fonts.type1.PFMFile,java.lang.String,java.lang.String,java.lang.String,java.lang.String)#javax/xml/parsers/DocumentBuilderFactory/newDocumentBuilder()
org/apache/fop/fonts/apps/PFMReader/constructFontXML(org.apache.fop.fonts.type1.PFMFile,java.lang.String,java.lang.String,java.lang.String,java.lang.String)#java/util/Set/iterator()
org/apache/fop/fonts/apps/PFMReader/constructFontXML(org.apache.fop.fonts.type1.PFMFile,java.lang.String,java.lang.String,java.lang.String,java.lang.String)#org/w3c/dom/Document/createTextNode(java.lang.String)
org/apache/fop/fonts/apps/PFMReader/constructFontXML(org.apache.fop.fonts.type1.PFMFile,java.lang.String,java.lang.String,java.lang.String,java.lang.String)#javax/xml/parsers/DocumentBuilderFactory/newInstance()
org/apache/fop/fonts/apps/PFMReader/constructFontXML(org.apache.fop.fonts.type1.PFMFile,java.lang.String,java.lang.String,java.lang.String,java.lang.String)#org/apache/commons/logging/Log/error(java.lang.Object,java.lang.Throwable)
org/apache/fop/fonts/apps/PFMReader/constructFontXML(org.apache.fop.fonts.type1.PFMFile,java.lang.String,java.lang.String,java.lang.String,java.lang.String)#java/util/Map$Entry/getValue()
org/apache/fop/fonts/apps/PFMReader/constructFontXML(org.apache.fop.fonts.type1.PFMFile,java.lang.String,java.lang.String,java.lang.String,java.lang.String)#javax/xml/parsers/DocumentBuilder/newDocument()
org/apache/fop/fonts/apps/PFMReader/constructFontXML(org.apache.fop.fonts.type1.PFMFile,java.lang.String,java.lang.String,java.lang.String,java.lang.String)#java/lang/StringBuilder/toString()
org/apache/fop/fonts/truetype/TTFSubSetFile/readFont(org.apache.fop.fonts.truetype.FontFileReader,java.lang.String,java.lang.String,java.util.Map)#java/io/IOException/IOException(java.lang.String)
org/apache/fop/fonts/truetype/TTFSubSetFile/readFont(org.apache.fop.fonts.truetype.FontFileReader,java.lang.String,java.lang.String,java.util.Map)#java/util/Map/size()
org/apache/fop/fonts/truetype/TTFSubSetFile/readFont(org.apache.fop.fonts.truetype.FontFileReader,java.lang.String,java.lang.String,java.util.Map)#org/apache/fop/fonts/truetype/TTFSubSetFile/readFontHeader()
org/apache/fop/fonts/truetype/TTFSubSetFile/readFont(org.apache.fop.fonts.truetype.FontFileReader,java.lang.String,java.lang.String,java.util.Map)#org/apache/fop/fonts/truetype/TTFSubSetFile/getNumGlyphs()
org/apache/fop/fonts/truetype/TTFSubSetFile/readFont(org.apache.fop.fonts.truetype.FontFileReader,java.lang.String,java.lang.String,java.util.Map)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/fop/fonts/truetype/TTFSubSetFile/readFont(org.apache.fop.fonts.truetype.FontFileReader,java.lang.String,java.lang.String,java.util.Map)#org/apache/fop/fonts/truetype/TTFSubSetFile/readDirTabs()
org/apache/fop/fonts/truetype/TTFSubSetFile/readFont(org.apache.fop.fonts.truetype.FontFileReader,java.lang.String,java.lang.String,java.util.Map)#java/util/HashMap/HashMap(java.util.Map)
org/apache/fop/fonts/truetype/TTFSubSetFile/readFont(org.apache.fop.fonts.truetype.FontFileReader,java.lang.String,java.lang.String,java.util.Map)#org/apache/fop/fonts/truetype/TTFSubSetFile/readHorizontalHeader()
org/apache/fop/fonts/truetype/TTFSubSetFile/readFont(org.apache.fop.fonts.truetype.FontFileReader,java.lang.String,java.lang.String,java.util.Map)#org/apache/fop/fonts/truetype/TTFSubSetFile/checkTTC(java.lang.String,java.lang.String)
org/apache/fop/fonts/truetype/TTFSubSetFile/readFont(org.apache.fop.fonts.truetype.FontFileReader,java.lang.String,java.lang.String,java.util.Map)#org/apache/fop/fonts/truetype/TTFSubSetFile/readHorizontalMetrics()
org/apache/fop/fonts/truetype/TTFSubSetFile/readFont(org.apache.fop.fonts.truetype.FontFileReader,java.lang.String,java.lang.String,java.util.Map)#org/apache/fop/fonts/truetype/TTFSubSetFile/readIndexToLocation()
org/apache/fop/fonts/truetype/TTFSubSetFile/createHmtx(org.apache.fop.fonts.truetype.FontFileReader,java.util.Map)#java/lang/Integer/intValue()
org/apache/fop/fonts/truetype/TTFSubSetFile/createHmtx(org.apache.fop.fonts.truetype.FontFileReader,java.util.Map)#java/io/IOException/IOException(java.lang.String)
org/apache/fop/fonts/truetype/TTFSubSetFile/createHmtx(org.apache.fop.fonts.truetype.FontFileReader,java.util.Map)#java/util/Iterator/hasNext()
org/apache/fop/fonts/truetype/TTFSubSetFile/createHmtx(org.apache.fop.fonts.truetype.FontFileReader,java.util.Map)#java/util/Map$Entry/getKey()
org/apache/fop/fonts/truetype/TTFSubSetFile/createHmtx(org.apache.fop.fonts.truetype.FontFileReader,java.util.Map)#java/util/Map/get(java.lang.Object)
org/apache/fop/fonts/truetype/TTFSubSetFile/createHmtx(org.apache.fop.fonts.truetype.FontFileReader,java.util.Map)#java/util/Iterator/next()
org/apache/fop/fonts/truetype/TTFSubSetFile/createHmtx(org.apache.fop.fonts.truetype.FontFileReader,java.util.Map)#java/util/Set/iterator()
org/apache/fop/fonts/truetype/TTFSubSetFile/createHmtx(org.apache.fop.fonts.truetype.FontFileReader,java.util.Map)#java/util/Map/entrySet()
org/apache/fop/fonts/truetype/TTFSubSetFile/createHmtx(org.apache.fop.fonts.truetype.FontFileReader,java.util.Map)#java/util/Map/size()
org/apache/fop/fonts/truetype/TTFSubSetFile/createHmtx(org.apache.fop.fonts.truetype.FontFileReader,java.util.Map)#java/util/Map$Entry/getValue()
org/apache/fop/area/AreaTreeParser/Handler/PageViewportMaker/startElement(org.xml.sax.Attributes)#java/util/Stack/pop()
org/apache/fop/area/AreaTreeParser/Handler/PageViewportMaker/startElement(org.xml.sax.Attributes)#org/apache/fop/area/AreaTreeParser$Handler/access$3500(org.xml.sax.Attributes,org.apache.fop.area.AreaTreeObject)
org/apache/fop/area/AreaTreeParser/Handler/PageViewportMaker/startElement(org.xml.sax.Attributes)#org/apache/fop/area/AreaTreeParser$Handler/access$3800(org.apache.fop.area.AreaTreeParser$Handler)
org/apache/fop/area/AreaTreeParser/Handler/PageViewportMaker/startElement(org.xml.sax.Attributes)#org/apache/fop/area/AreaTreeParser$Handler/access$3900(org.apache.fop.area.AreaTreeParser$Handler)
org/apache/fop/area/AreaTreeParser/Handler/PageViewportMaker/startElement(org.xml.sax.Attributes)#java/util/Stack/isEmpty()
org/apache/fop/area/AreaTreeParser/Handler/PageViewportMaker/startElement(org.xml.sax.Attributes)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/fop/area/AreaTreeParser/Handler/PageViewportMaker/startElement(org.xml.sax.Attributes)#org/xml/sax/Attributes/getValue(java.lang.String)
org/apache/fop/area/AreaTreeParser/Handler/PageViewportMaker/startElement(org.xml.sax.Attributes)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/apache/fop/area/AreaTreeParser/Handler/PageViewportMaker/startElement(org.xml.sax.Attributes)#org/apache/fop/area/AreaTreeParser$Handler/access$3600(org.apache.fop.area.AreaTreeParser$Handler)
org/apache/fop/area/AreaTreeParser/Handler/PageViewportMaker/startElement(org.xml.sax.Attributes)#org/apache/fop/area/AreaTreeParser$Handler/access$3700(org.apache.fop.area.AreaTreeParser$Handler)
org/apache/fop/area/AreaTreeParser/Handler/PageViewportMaker/startElement(org.xml.sax.Attributes)#org/apache/fop/area/AreaTreeParser$Handler/access$3802(org.apache.fop.area.AreaTreeParser$Handler,org.apache.fop.area.PageViewport)
org/apache/fop/area/AreaTreeParser/Handler/PageViewportMaker/startElement(org.xml.sax.Attributes)#java/util/Stack/peek()
org/apache/fop/tools/anttasks/RunTest/createUrls(java.lang.String)#java/util/ArrayList/ArrayList()
org/apache/fop/tools/anttasks/RunTest/createUrls(java.lang.String)#java/net/URI/toURL()
org/apache/fop/tools/anttasks/RunTest/createUrls(java.lang.String)#java/util/List/size()
org/apache/fop/tools/anttasks/RunTest/createUrls(java.lang.String)#java/io/File/File(java.lang.String)
org/apache/fop/tools/anttasks/RunTest/createUrls(java.lang.String)#java/util/List/toArray(java.lang.Object[])
org/apache/fop/tools/anttasks/RunTest/createUrls(java.lang.String)#java/io/File/toURI()
org/apache/fop/tools/anttasks/RunTest/createUrls(java.lang.String)#java/util/List/add(java.lang.Object)
org/apache/fop/tools/anttasks/RunTest/createUrls(java.lang.String)#java/io/File/listFiles()
org/apache/fop/tools/anttasks/RunTest/createUrls(java.lang.String)#java/io/File/getPath()
org/apache/fop/tools/anttasks/RunTest/createUrls(java.lang.String)#java/lang/String/endsWith(java.lang.String)
org/apache/fop/tools/anttasks/RunTest/testNewBuild()#java/util/Iterator/hasNext()
org/apache/fop/tools/anttasks/RunTest/testNewBuild()#java/util/Map/isEmpty()
org/apache/fop/tools/anttasks/RunTest/testNewBuild()#java/util/Iterator/next()
org/apache/fop/tools/anttasks/RunTest/testNewBuild()#java/net/MalformedURLException/printStackTrace()
org/apache/fop/tools/anttasks/RunTest/testNewBuild()#java/lang/StringBuilder/StringBuilder()
org/apache/fop/tools/anttasks/RunTest/testNewBuild()#java/util/Set/iterator()
org/apache/fop/tools/anttasks/RunTest/testNewBuild()#org/apache/tools/ant/BuildException/BuildException(java.lang.String)
org/apache/fop/tools/anttasks/RunTest/testNewBuild()#java/lang/Boolean/booleanValue()
org/apache/fop/tools/anttasks/RunTest/testNewBuild()#java/lang/StringBuilder/toString()
org/apache/fop/tools/anttasks/RunTest/testNewBuild()#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/tools/anttasks/RunTest/testNewBuild()#java/util/Map$Entry/getKey()
org/apache/fop/tools/anttasks/RunTest/testNewBuild()#java/io/PrintStream/println(java.lang.String)
org/apache/fop/tools/anttasks/RunTest/testNewBuild()#java/lang/StringBuilder/append(java.lang.Object)
org/apache/fop/tools/anttasks/RunTest/testNewBuild()#java/util/Map$Entry/getValue()
org/apache/fop/tools/anttasks/RunTest/testNewBuild()#java/util/Map/entrySet()
org/apache/fop/tools/anttasks/RunTest/testNewBuild()#java/net/URLClassLoader/URLClassLoader(java.net.URL[])
org/apache/fop/tools/anttasks/RunTest/runReference()#java/lang/Object/equals(java.lang.Object)
org/apache/fop/tools/anttasks/RunTest/runReference()#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/tools/anttasks/RunTest/runReference()#java/lang/Class/getMethod(java.lang.String,java.lang.Class[])
org/apache/fop/tools/anttasks/RunTest/runReference()#java/lang/StringBuilder/StringBuilder()
org/apache/fop/tools/anttasks/RunTest/runReference()#java/io/File/mkdirs()
org/apache/fop/tools/anttasks/RunTest/runReference()#java/net/MalformedURLException/printStackTrace()
org/apache/fop/tools/anttasks/RunTest/runReference()#java/io/File/File(java.lang.String)
org/apache/fop/tools/anttasks/RunTest/runReference()#java/lang/Class/forName(java.lang.String,boolean,java.lang.ClassLoader)
org/apache/fop/tools/anttasks/RunTest/runReference()#org/apache/tools/ant/BuildException/BuildException(java.lang.String)
org/apache/fop/tools/anttasks/RunTest/runReference()#java/lang/reflect/Method/invoke(java.lang.Object,java.lang.Object[])
org/apache/fop/tools/anttasks/RunTest/runReference()#java/security/AccessController/doPrivileged(java.security.PrivilegedAction)
org/apache/fop/tools/anttasks/RunTest/runReference()#java/lang/StringBuilder/toString()
org/apache/fop/tools/anttasks/RunTest/runReference()#org/apache/fop/tools/anttasks/RunTest$1/1(org.apache.fop.tools.anttasks.RunTest,java.net.URL[])
org/apache/fop/fo/pagination/LayoutMasterSet/checkRegionNames()#java/util/Iterator/hasNext()
org/apache/fop/fo/pagination/LayoutMasterSet/checkRegionNames()#java/util/Map/get(java.lang.Object)
org/apache/fop/fo/pagination/LayoutMasterSet/checkRegionNames()#java/util/Map/values()
org/apache/fop/fo/pagination/LayoutMasterSet/checkRegionNames()#java/util/Collection/iterator()
org/apache/fop/fo/pagination/LayoutMasterSet/checkRegionNames()#org/apache/fop/fo/pagination/LayoutMasterSet/getLocator()
org/apache/fop/fo/pagination/LayoutMasterSet/checkRegionNames()#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/fop/fo/pagination/LayoutMasterSet/checkRegionNames()#java/util/Iterator/next()
org/apache/fop/fo/pagination/LayoutMasterSet/checkRegionNames()#java/util/HashMap/HashMap()
org/apache/fop/fo/pagination/LayoutMasterSet/checkRegionNames()#java/lang/String/equals(java.lang.Object)
org/apache/fop/fo/pagination/LayoutMasterSet/checkRegionNames()#org/apache/fop/fo/pagination/LayoutMasterSet/getFOValidationEventProducer()
org/apache/fop/fo/pagination/LayoutMasterSet/checkRegionNames()#java/util/Map/containsKey(java.lang.Object)
org/apache/fop/render/AbstractPathOrientedRenderer/renderBlockViewport(org.apache.fop.area.BlockViewport,java.util.List)#org/apache/fop/area/BlockViewport/getIPD()
org/apache/fop/render/AbstractPathOrientedRenderer/renderBlockViewport(org.apache.fop.area.BlockViewport,java.util.List)#org/apache/fop/area/BlockViewport/getBorderAndPaddingWidthBefore()
org/apache/fop/render/AbstractPathOrientedRenderer/renderBlockViewport(org.apache.fop.area.BlockViewport,java.util.List)#org/apache/fop/area/BlockViewport/getSpaceBefore()
org/apache/fop/render/AbstractPathOrientedRenderer/renderBlockViewport(org.apache.fop.area.BlockViewport,java.util.List)#org/apache/fop/area/BlockViewport/getBorderAndPaddingWidthEnd()
org/apache/fop/render/AbstractPathOrientedRenderer/renderBlockViewport(org.apache.fop.area.BlockViewport,java.util.List)#org/apache/fop/area/BlockViewport/getBorderAndPaddingWidthAfter()
org/apache/fop/render/AbstractPathOrientedRenderer/renderBlockViewport(org.apache.fop.area.BlockViewport,java.util.List)#org/apache/fop/area/BlockViewport/getXOffset()
org/apache/fop/render/AbstractPathOrientedRenderer/renderBlockViewport(org.apache.fop.area.BlockViewport,java.util.List)#org/apache/fop/area/BlockViewport/getYOffset()
org/apache/fop/render/AbstractPathOrientedRenderer/renderBlockViewport(org.apache.fop.area.BlockViewport,java.util.List)#org/apache/fop/area/BlockViewport/getStartIndent()
org/apache/fop/render/AbstractPathOrientedRenderer/renderBlockViewport(org.apache.fop.area.BlockViewport,java.util.List)#org/apache/fop/area/BlockViewport/getAllocBPD()
org/apache/fop/render/AbstractPathOrientedRenderer/renderBlockViewport(org.apache.fop.area.BlockViewport,java.util.List)#org/apache/fop/area/BlockViewport/getBorderAndPaddingWidthStart()
org/apache/fop/render/AbstractPathOrientedRenderer/renderBlockViewport(org.apache.fop.area.BlockViewport,java.util.List)#java/awt/geom/AffineTransform/concatenate(java.awt.geom.AffineTransform)
org/apache/fop/render/AbstractPathOrientedRenderer/renderBlockViewport(org.apache.fop.area.BlockViewport,java.util.List)#org/apache/fop/area/BlockViewport/getBidiLevel()
org/apache/fop/render/AbstractPathOrientedRenderer/renderBlockViewport(org.apache.fop.area.BlockViewport,java.util.List)#java/awt/geom/AffineTransform/translate(double,double)
org/apache/fop/render/AbstractPathOrientedRenderer/renderBlockViewport(org.apache.fop.area.BlockViewport,java.util.List)#org/apache/fop/area/BlockViewport/getForeignAttributeValue(org.apache.xmlgraphics.util.QName)
org/apache/fop/render/AbstractPathOrientedRenderer/renderBlockViewport(org.apache.fop.area.BlockViewport,java.util.List)#java/awt/Rectangle/Rectangle(int,int,int,int)
org/apache/fop/render/AbstractPathOrientedRenderer/renderBlockViewport(org.apache.fop.area.BlockViewport,java.util.List)#org/apache/fop/render/AbstractPathOrientedRenderer/endVParea()
org/apache/fop/render/AbstractPathOrientedRenderer/renderBlockViewport(org.apache.fop.area.BlockViewport,java.util.List)#org/apache/fop/render/AbstractPathOrientedRenderer/startVParea(org.apache.fop.area.CTM,java.awt.Rectangle)
org/apache/fop/render/AbstractPathOrientedRenderer/renderBlockViewport(org.apache.fop.area.BlockViewport,java.util.List)#org/apache/batik/parser/AWTTransformProducer/createAffineTransform(java.lang.String)
org/apache/fop/render/AbstractPathOrientedRenderer/renderBlockViewport(org.apache.fop.area.BlockViewport,java.util.List)#java/awt/geom/AffineTransform/isIdentity()
org/apache/fop/render/AbstractPathOrientedRenderer/renderBlockViewport(org.apache.fop.area.BlockViewport,java.util.List)#java/awt/geom/AffineTransform/AffineTransform()
org/apache/fop/render/AbstractPathOrientedRenderer/renderBlockViewport(org.apache.fop.area.BlockViewport,java.util.List)#org/apache/fop/area/BlockViewport/getBPD()
org/apache/fop/render/AbstractPathOrientedRenderer/renderBlockViewport(org.apache.fop.area.BlockViewport,java.util.List)#org/apache/fop/area/BlockViewport/getPositioning()
org/apache/fop/render/AbstractPathOrientedRenderer/renderBlockViewport(org.apache.fop.area.BlockViewport,java.util.List)#org/apache/fop/render/AbstractPathOrientedRenderer/renderBlocks(org.apache.fop.area.Block,java.util.List)
org/apache/fop/render/AbstractPathOrientedRenderer/drawBackground(float,float,float,float,org.apache.fop.area.Trait$Background,org.apache.fop.traits.BorderProps,org.apache.fop.traits.BorderProps,org.apache.fop.traits.BorderProps,org.apache.fop.traits.BorderProps)#org/apache/fop/area/Trait$Background/getImageTargetHeight()
org/apache/fop/render/AbstractPathOrientedRenderer/drawBackground(float,float,float,float,org.apache.fop.area.Trait$Background,org.apache.fop.traits.BorderProps,org.apache.fop.traits.BorderProps,org.apache.fop.traits.BorderProps,org.apache.fop.traits.BorderProps)#java/lang/Math/min(double,double)
org/apache/fop/render/AbstractPathOrientedRenderer/drawBackground(float,float,float,float,org.apache.fop.area.Trait$Background,org.apache.fop.traits.BorderProps,org.apache.fop.traits.BorderProps,org.apache.fop.traits.BorderProps,org.apache.fop.traits.BorderProps)#org/apache/fop/area/Trait$Background/getImageTargetWidth()
org/apache/fop/render/AbstractPathOrientedRenderer/drawBackground(float,float,float,float,org.apache.fop.area.Trait$Background,org.apache.fop.traits.BorderProps,org.apache.fop.traits.BorderProps,org.apache.fop.traits.BorderProps,org.apache.fop.traits.BorderProps)#org/apache/fop/area/Trait$Background/getRepeat()
org/apache/fop/render/AbstractPathOrientedRenderer/drawBackground(float,float,float,float,org.apache.fop.area.Trait$Background,org.apache.fop.traits.BorderProps,org.apache.fop.traits.BorderProps,org.apache.fop.traits.BorderProps,org.apache.fop.traits.BorderProps)#org/apache/xmlgraphics/image/loader/ImageSize/getWidthMpt()
org/apache/fop/render/AbstractPathOrientedRenderer/drawBackground(float,float,float,float,org.apache.fop.area.Trait$Background,org.apache.fop.traits.BorderProps,org.apache.fop.traits.BorderProps,org.apache.fop.traits.BorderProps,org.apache.fop.traits.BorderProps)#org/apache/xmlgraphics/image/loader/ImageSize/getHeightMpt()
org/apache/fop/render/AbstractPathOrientedRenderer/drawBackground(float,float,float,float,org.apache.fop.area.Trait$Background,org.apache.fop.traits.BorderProps,org.apache.fop.traits.BorderProps,org.apache.fop.traits.BorderProps,org.apache.fop.traits.BorderProps)#org/apache/xmlgraphics/image/loader/ImageInfo/getSize()
org/apache/fop/render/AbstractPathOrientedRenderer/drawBackground(float,float,float,float,org.apache.fop.area.Trait$Background,org.apache.fop.traits.BorderProps,org.apache.fop.traits.BorderProps,org.apache.fop.traits.BorderProps,org.apache.fop.traits.BorderProps)#org/apache/fop/area/Trait$Background/getHoriz()
org/apache/fop/render/AbstractPathOrientedRenderer/drawBackground(float,float,float,float,org.apache.fop.area.Trait$Background,org.apache.fop.traits.BorderProps,org.apache.fop.traits.BorderProps,org.apache.fop.traits.BorderProps,org.apache.fop.traits.BorderProps)#org/apache/fop/area/Trait$Background/getColor()
org/apache/fop/render/AbstractPathOrientedRenderer/drawBackground(float,float,float,float,org.apache.fop.area.Trait$Background,org.apache.fop.traits.BorderProps,org.apache.fop.traits.BorderProps,org.apache.fop.traits.BorderProps,org.apache.fop.traits.BorderProps)#java/awt/geom/Rectangle2D$Float/Float(float,float,float,float)
org/apache/fop/render/AbstractPathOrientedRenderer/drawBackground(float,float,float,float,org.apache.fop.area.Trait$Background,org.apache.fop.traits.BorderProps,org.apache.fop.traits.BorderProps,org.apache.fop.traits.BorderProps,org.apache.fop.traits.BorderProps)#org/apache/fop/area/Trait$Background/getImageInfo()
org/apache/fop/render/AbstractPathOrientedRenderer/drawBackground(float,float,float,float,org.apache.fop.area.Trait$Background,org.apache.fop.traits.BorderProps,org.apache.fop.traits.BorderProps,org.apache.fop.traits.BorderProps,org.apache.fop.traits.BorderProps)#org/apache/fop/area/Trait$Background/getURL()
org/apache/fop/render/AbstractPathOrientedRenderer/drawBackground(float,float,float,float,org.apache.fop.area.Trait$Background,org.apache.fop.traits.BorderProps,org.apache.fop.traits.BorderProps,org.apache.fop.traits.BorderProps,org.apache.fop.traits.BorderProps)#org/apache/fop/area/Trait$Background/getVertical()
org/apache/fop/render/AbstractPathOrientedRenderer/renderInlineViewport(org.apache.fop.area.inline.InlineViewport)#org/apache/fop/area/inline/InlineViewport/getBorderAndPaddingWidthBefore()
org/apache/fop/render/AbstractPathOrientedRenderer/renderInlineViewport(org.apache.fop.area.inline.InlineViewport)#org/apache/fop/render/PrintRenderer/renderInlineViewport(org.apache.fop.area.inline.InlineViewport)
org/apache/fop/render/AbstractPathOrientedRenderer/renderInlineViewport(org.apache.fop.area.inline.InlineViewport)#org/apache/fop/area/inline/InlineViewport/getBorderAndPaddingWidthEnd()
org/apache/fop/render/AbstractPathOrientedRenderer/renderInlineViewport(org.apache.fop.area.inline.InlineViewport)#org/apache/fop/area/inline/InlineViewport/getBorderAndPaddingWidthAfter()
org/apache/fop/render/AbstractPathOrientedRenderer/renderInlineViewport(org.apache.fop.area.inline.InlineViewport)#org/apache/fop/area/inline/InlineViewport/getBlockProgressionOffset()
org/apache/fop/render/AbstractPathOrientedRenderer/renderInlineViewport(org.apache.fop.area.inline.InlineViewport)#org/apache/fop/area/inline/InlineViewport/getBorderAndPaddingWidthStart()
org/apache/fop/render/AbstractPathOrientedRenderer/renderInlineViewport(org.apache.fop.area.inline.InlineViewport)#org/apache/fop/area/inline/InlineViewport/getBPD()
org/apache/fop/render/AbstractPathOrientedRenderer/renderInlineViewport(org.apache.fop.area.inline.InlineViewport)#org/apache/fop/area/inline/InlineViewport/getIPD()
org/apache/fop/render/AbstractPathOrientedRenderer/renderInlineViewport(org.apache.fop.area.inline.InlineViewport)#org/apache/fop/area/inline/InlineViewport/getBidiLevel()
org/apache/fop/render/bitmap/BitmapRendererConfig/BitmapRendererConfigParser/build(org.apache.fop.render.bitmap.BitmapRendererConfig,org.apache.fop.apps.FOUserAgent,org.apache.avalon.framework.configuration.Configuration)#org/apache/fop/render/java2d/Java2DRendererConfig$Java2DRendererConfigParser/Java2DRendererConfigParser(java.lang.String)
org/apache/fop/render/bitmap/BitmapRendererConfig/BitmapRendererConfigParser/build(org.apache.fop.render.bitmap.BitmapRendererConfig,org.apache.fop.apps.FOUserAgent,org.apache.avalon.framework.configuration.Configuration)#org/apache/avalon/framework/configuration/Configuration/getValueAsBoolean(boolean)
org/apache/fop/render/bitmap/BitmapRendererConfig/BitmapRendererConfigParser/build(org.apache.fop.render.bitmap.BitmapRendererConfig,org.apache.fop.apps.FOUserAgent,org.apache.avalon.framework.configuration.Configuration)#java/util/EnumMap/put(java.lang.Enum,java.lang.Object)
org/apache/fop/render/bitmap/BitmapRendererConfig/BitmapRendererConfigParser/build(org.apache.fop.render.bitmap.BitmapRendererConfig,org.apache.fop.apps.FOUserAgent,org.apache.avalon.framework.configuration.Configuration)#org/apache/fop/render/bitmap/BitmapRendererConfig$BitmapRendererConfigParser/getValue(org.apache.avalon.framework.configuration.Configuration,org.apache.fop.render.bitmap.BitmapRendererOption)
org/apache/fop/render/bitmap/BitmapRendererConfig/BitmapRendererConfigParser/build(org.apache.fop.render.bitmap.BitmapRendererConfig,org.apache.fop.apps.FOUserAgent,org.apache.avalon.framework.configuration.Configuration)#org/apache/fop/render/bitmap/BitmapRendererConfig$BitmapRendererConfigParser/getBufferedImageIntegerFromColor(org.apache.fop.render.bitmap.BitmapRendererOption)
org/apache/fop/render/bitmap/BitmapRendererConfig/BitmapRendererConfigParser/build(org.apache.fop.render.bitmap.BitmapRendererConfig,org.apache.fop.apps.FOUserAgent,org.apache.avalon.framework.configuration.Configuration)#org/apache/fop/render/java2d/Java2DRendererConfig$Java2DRendererConfigParser/build(org.apache.fop.apps.FOUserAgent,org.apache.avalon.framework.configuration.Configuration)
org/apache/fop/render/bitmap/BitmapRendererConfig/BitmapRendererConfigParser/build(org.apache.fop.render.bitmap.BitmapRendererConfig,org.apache.fop.apps.FOUserAgent,org.apache.avalon.framework.configuration.Configuration)#org/apache/fop/render/bitmap/BitmapRendererConfig$BitmapRendererConfigParser/setParam(org.apache.fop.render.bitmap.BitmapRendererConfig,org.apache.fop.render.bitmap.BitmapRendererOption,java.lang.Object)
org/apache/fop/render/bitmap/BitmapRendererConfig/BitmapRendererConfigParser/build(org.apache.fop.render.bitmap.BitmapRendererConfig,org.apache.fop.apps.FOUserAgent,org.apache.avalon.framework.configuration.Configuration)#org/apache/fop/render/bitmap/BitmapRendererOption/getValue(java.lang.String)
org/apache/fop/render/bitmap/BitmapRendererConfig/BitmapRendererConfigParser/build(org.apache.fop.render.bitmap.BitmapRendererConfig,org.apache.fop.apps.FOUserAgent,org.apache.avalon.framework.configuration.Configuration)#java/lang/Boolean/booleanValue()
org/apache/fop/render/bitmap/BitmapRendererConfig/BitmapRendererConfigParser/build(org.apache.fop.render.bitmap.BitmapRendererConfig,org.apache.fop.apps.FOUserAgent,org.apache.avalon.framework.configuration.Configuration)#java/lang/Boolean/valueOf(boolean)
org/apache/fop/render/bitmap/BitmapRendererConfig/BitmapRendererConfigParser/build(org.apache.fop.render.bitmap.BitmapRendererConfig,org.apache.fop.apps.FOUserAgent,org.apache.avalon.framework.configuration.Configuration)#org/apache/fop/render/bitmap/BitmapRendererOption/getDefaultValue()
org/apache/fop/render/bitmap/BitmapRendererConfig/BitmapRendererConfigParser/build(org.apache.fop.render.bitmap.BitmapRendererConfig,org.apache.fop.apps.FOUserAgent,org.apache.avalon.framework.configuration.Configuration)#org/apache/fop/render/bitmap/BitmapRendererConfig$BitmapRendererConfigParser/getChild(org.apache.avalon.framework.configuration.Configuration,org.apache.fop.render.bitmap.BitmapRendererOption)
org/apache/fop/area/AreaTreeParser/Handler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#org/xml/sax/ContentHandler/startDocument()
org/apache/fop/area/AreaTreeParser/Handler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#org/xml/sax/SAXException/SAXException(java.lang.String)
org/apache/fop/area/AreaTreeParser/Handler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#javax/xml/transform/sax/TransformerHandler/setResult(javax.xml.transform.Result)
org/apache/fop/area/AreaTreeParser/Handler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#org/apache/commons/logging/Log/warn(java.lang.Object)
org/apache/fop/area/AreaTreeParser/Handler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/area/AreaTreeParser/Handler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#org/xml/sax/SAXException/SAXException(java.lang.String,java.lang.Exception)
org/apache/fop/area/AreaTreeParser/Handler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#org/w3c/dom/DOMImplementation/createDocument(java.lang.String,java.lang.String,org.w3c.dom.DocumentType)
org/apache/fop/area/AreaTreeParser/Handler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#org/w3c/dom/Document/getDocumentElement()
org/apache/fop/area/AreaTreeParser/Handler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#java/util/Stack/peek()
org/apache/fop/area/AreaTreeParser/Handler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#org/apache/fop/area/AreaTreeParser$Handler/startAreaTreeElement(java.lang.String,org.xml.sax.Attributes)
org/apache/fop/area/AreaTreeParser/Handler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#org/xml/sax/helpers/DefaultHandler/DefaultHandler()
org/apache/fop/area/AreaTreeParser/Handler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#javax/xml/transform/sax/SAXTransformerFactory/newTransformerHandler()
org/apache/fop/area/AreaTreeParser/Handler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/area/AreaTreeParser/Handler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#java/util/Stack/push(java.lang.Object)
org/apache/fop/area/AreaTreeParser/Handler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#java/lang/String/length()
org/apache/fop/area/AreaTreeParser/Handler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#java/lang/String/equals(java.lang.Object)
org/apache/fop/area/AreaTreeParser/Handler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#javax/xml/transform/dom/DOMResult/DOMResult(org.w3c.dom.Node)
org/apache/fop/area/AreaTreeParser/Handler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#org/xml/sax/ContentHandler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)
org/apache/fop/area/AreaTreeParser/Handler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#java/lang/StringBuilder/toString()
org/apache/fop/area/AreaTreeParser/Handler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#org/w3c/dom/Document/removeChild(org.w3c.dom.Node)
org/apache/fop/area/AreaTreeParser/Handler/characters(char[],int,int)#java/nio/CharBuffer/capacity()
org/apache/fop/area/AreaTreeParser/Handler/characters(char[],int,int)#java/nio/CharBuffer/limit()
org/apache/fop/area/AreaTreeParser/Handler/characters(char[],int,int)#java/nio/CharBuffer/allocate(int)
org/apache/fop/area/AreaTreeParser/Handler/characters(char[],int,int)#java/nio/CharBuffer/put(java.nio.CharBuffer)
org/apache/fop/area/AreaTreeParser/Handler/characters(char[],int,int)#java/nio/CharBuffer/limit(int)
org/apache/fop/area/AreaTreeParser/Handler/characters(char[],int,int)#java/nio/CharBuffer/position()
org/apache/fop/area/AreaTreeParser/Handler/characters(char[],int,int)#java/nio/CharBuffer/flip()
org/apache/fop/area/AreaTreeParser/Handler/characters(char[],int,int)#java/nio/CharBuffer/put(char[],int,int)
org/apache/fop/area/AreaTreeParser/Handler/characters(char[],int,int)#org/xml/sax/ContentHandler/characters(char[],int,int)
org/apache/fop/area/AreaTreeParser/Handler/setTraits(org.xml.sax.Attributes,org.apache.fop.area.Area,java.lang.Object[])#org/apache/fop/traits/BorderProps/valueOf(org.apache.fop.apps.FOUserAgent,java.lang.String)
org/apache/fop/area/AreaTreeParser/Handler/setTraits(org.xml.sax.Attributes,org.apache.fop.area.Area,java.lang.Object[])#org/apache/fop/area/Trait$Background/Background()
org/apache/fop/area/AreaTreeParser/Handler/setTraits(org.xml.sax.Attributes,org.apache.fop.area.Area,java.lang.Object[])#org/apache/fop/area/Trait$Background/setHoriz(int)
org/apache/fop/area/AreaTreeParser/Handler/setTraits(org.xml.sax.Attributes,org.apache.fop.area.Area,java.lang.Object[])#org/apache/xmlgraphics/image/loader/ImageManager/getImageInfo(java.lang.String,org.apache.xmlgraphics.image.loader.ImageSessionContext)
org/apache/fop/area/AreaTreeParser/Handler/setTraits(org.xml.sax.Attributes,org.apache.fop.area.Area,java.lang.Object[])#org/apache/fop/area/Trait$ExternalLink/makeFromTraitValue(java.lang.String)
org/apache/fop/area/AreaTreeParser/Handler/setTraits(org.xml.sax.Attributes,org.apache.fop.area.Area,java.lang.Object[])#org/xml/sax/Attributes/getValue(java.lang.String)
org/apache/fop/area/AreaTreeParser/Handler/setTraits(org.xml.sax.Attributes,org.apache.fop.area.Area,java.lang.Object[])#java/lang/Boolean/valueOf(java.lang.String)
org/apache/fop/area/AreaTreeParser/Handler/setTraits(org.xml.sax.Attributes,org.apache.fop.area.Area,java.lang.Object[])#org/apache/fop/area/Trait$Background/setRepeat(java.lang.String)
org/apache/fop/area/AreaTreeParser/Handler/setTraits(org.xml.sax.Attributes,org.apache.fop.area.Area,java.lang.Object[])#org/apache/fop/area/Trait$Background/setURL(java.lang.String)
org/apache/fop/area/AreaTreeParser/Handler/setTraits(org.xml.sax.Attributes,org.apache.fop.area.Area,java.lang.Object[])#java/lang/Integer/equals(java.lang.Object)
org/apache/fop/area/AreaTreeParser/Handler/setTraits(org.xml.sax.Attributes,org.apache.fop.area.Area,java.lang.Object[])#org/apache/fop/area/Trait$Background/setVertical(int)
org/apache/fop/area/AreaTreeParser/Handler/setTraits(org.xml.sax.Attributes,org.apache.fop.area.Area,java.lang.Object[])#org/apache/fop/ResourceEventProducer$Provider/get(org.apache.fop.events.EventBroadcaster)
org/apache/fop/area/AreaTreeParser/Handler/setTraits(org.xml.sax.Attributes,org.apache.fop.area.Area,java.lang.Object[])#org/apache/fop/area/Trait$InternalLink/InternalLink(java.lang.String)
org/apache/fop/area/AreaTreeParser/Handler/setTraits(org.xml.sax.Attributes,org.apache.fop.area.Area,java.lang.Object[])#java/util/Set/contains(java.lang.Object)
org/apache/fop/area/AreaTreeParser/Handler/setTraits(org.xml.sax.Attributes,org.apache.fop.area.Area,java.lang.Object[])#org/apache/fop/area/AreaTreeParser$Handler/getLocator()
org/apache/fop/area/AreaTreeParser/Handler/setTraits(org.xml.sax.Attributes,org.apache.fop.area.Area,java.lang.Object[])#java/lang/Integer/Integer(java.lang.String)
org/apache/fop/area/AreaTreeParser/Handler/setTraits(org.xml.sax.Attributes,org.apache.fop.area.Area,java.lang.Object[])#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/fop/area/AreaTreeParser/Handler/setTraits(org.xml.sax.Attributes,org.apache.fop.area.Area,java.lang.Object[])#org/apache/fop/area/Trait$Background/setImageInfo(org.apache.xmlgraphics.image.loader.ImageInfo)
org/apache/fop/area/AreaTreeParser/Handler/setTraits(org.xml.sax.Attributes,org.apache.fop.area.Area,java.lang.Object[])#org/apache/fop/area/Trait$Background/setColor(java.awt.Color)
org/apache/fop/area/AreaTreeParser/Handler/setTraits(org.xml.sax.Attributes,org.apache.fop.area.Area,java.lang.Object[])#java/util/Set/add(java.lang.Object)
org/apache/fop/area/AreaTreeParser/Handler/endElement(java.lang.String,java.lang.String,java.lang.String)#java/util/Stack/size()
org/apache/fop/area/AreaTreeParser/Handler/endElement(java.lang.String,java.lang.String,java.lang.String)#java/util/Stack/pop()
org/apache/fop/area/AreaTreeParser/Handler/endElement(java.lang.String,java.lang.String,java.lang.String)#java/util/Map/get(java.lang.Object)
org/apache/fop/area/AreaTreeParser/Handler/endElement(java.lang.String,java.lang.String,java.lang.String)#org/xml/sax/ContentHandler/endElement(java.lang.String,java.lang.String,java.lang.String)
org/apache/fop/area/AreaTreeParser/Handler/endElement(java.lang.String,java.lang.String,java.lang.String)#java/lang/String/equals(java.lang.Object)
org/apache/fop/area/AreaTreeParser/Handler/endElement(java.lang.String,java.lang.String,java.lang.String)#org/apache/fop/util/ContentHandlerFactory$ObjectSource/getObject()
org/apache/fop/area/AreaTreeParser/Handler/endElement(java.lang.String,java.lang.String,java.lang.String)#org/apache/fop/area/AreaTreeParser$Handler$Maker/endElement()
org/apache/fop/area/AreaTreeParser/Handler/endElement(java.lang.String,java.lang.String,java.lang.String)#java/nio/CharBuffer/clear()
org/apache/fop/area/AreaTreeParser/Handler/endElement(java.lang.String,java.lang.String,java.lang.String)#org/apache/fop/area/AreaTreeParser$Handler/handleExternallyGeneratedObject(java.lang.Object)
org/apache/fop/area/AreaTreeParser/Handler/endElement(java.lang.String,java.lang.String,java.lang.String)#org/xml/sax/ContentHandler/endDocument()
org/apache/fop/complexscripts/fonts/GlyphPositioningTable/MarkToLigatureSubtableFormat1/populate(java.util.List)#java/lang/Integer/intValue()
org/apache/fop/complexscripts/fonts/GlyphPositioningTable/MarkToLigatureSubtableFormat1/populate(java.util.List)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/complexscripts/fonts/GlyphPositioningTable/MarkToLigatureSubtableFormat1/populate(java.util.List)#java/lang/StringBuilder/append(int)
org/apache/fop/complexscripts/fonts/GlyphPositioningTable/MarkToLigatureSubtableFormat1/populate(java.util.List)#java/util/List/size()
org/apache/fop/complexscripts/fonts/GlyphPositioningTable/MarkToLigatureSubtableFormat1/populate(java.util.List)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/complexscripts/fonts/GlyphPositioningTable/MarkToLigatureSubtableFormat1/populate(java.util.List)#java/util/List/get(int)
org/apache/fop/complexscripts/fonts/GlyphPositioningTable/MarkToLigatureSubtableFormat1/populate(java.util.List)#java/lang/StringBuilder/toString()
org/apache/fop/complexscripts/fonts/GlyphPositioningTable/MarkToLigatureSubtableFormat1/populate(java.util.List)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/fop/complexscripts/fonts/GlyphPositioningTable/MarkToLigatureSubtableFormat1/populate(java.util.List)#java/lang/Object/getClass()
org/apache/fop/render/print/PageableRenderer/getPageFormat(int)#java/awt/print/Paper/setSize(double,double)
org/apache/fop/render/print/PageableRenderer/getPageFormat(int)#java/awt/print/PageFormat/setOrientation(int)
org/apache/fop/render/print/PageableRenderer/getPageFormat(int)#java/lang/IndexOutOfBoundsException/IndexOutOfBoundsException(java.lang.String)
org/apache/fop/render/print/PageableRenderer/getPageFormat(int)#java/awt/print/Paper/Paper()
org/apache/fop/render/print/PageableRenderer/getPageFormat(int)#java/awt/geom/Rectangle2D/getWidth()
org/apache/fop/render/print/PageableRenderer/getPageFormat(int)#java/awt/geom/Rectangle2D/getHeight()
org/apache/fop/render/print/PageableRenderer/getPageFormat(int)#org/apache/fop/render/print/PageableRenderer/getPageViewport(int)
org/apache/fop/render/print/PageableRenderer/getPageFormat(int)#java/awt/print/Paper/setImageableArea(double,double,double,double)
org/apache/fop/render/print/PageableRenderer/getPageFormat(int)#java/awt/print/PageFormat/setPaper(java.awt.print.Paper)
org/apache/fop/render/print/PageableRenderer/getPageFormat(int)#java/awt/print/PageFormat/PageFormat()
org/apache/fop/render/print/PageableRenderer/getPageFormat(int)#org/apache/fop/render/print/PageableRenderer/getNumberOfPages()
org/apache/fop/fonts/base14/TimesRoman/<clinit>()#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/fop/fonts/base14/TimesRoman/<clinit>()#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/fonts/base14/TimesRoman/<clinit>()#java/lang/Integer/Integer(int)
org/apache/fop/fonts/base14/TimesRoman/<clinit>()#java/awt/Rectangle/Rectangle(int,int,int,int)
org/apache/fop/fonts/base14/TimesRoman/<clinit>()#java/util/Map/get(java.lang.Object)
org/apache/fop/fonts/base14/TimesRoman/<clinit>()#java/util/HashMap/HashMap()
org/apache/fop/fonts/base14/TimesRoman/<clinit>()#java/lang/StringBuilder/StringBuilder()
org/apache/fop/fonts/base14/TimesRoman/<clinit>()#java/util/HashSet/HashSet()
org/apache/fop/fonts/base14/TimesRoman/<clinit>()#java/util/Set/add(java.lang.Object)
org/apache/fop/fonts/base14/TimesRoman/<clinit>()#java/lang/StringBuilder/toString()
org/apache/fop/fonts/base14/TimesRoman/<clinit>()#java/net/URI/URI(java.lang.String)
org/apache/fop/fonts/base14/TimesRoman/<clinit>()#java/lang/String/toLowerCase()
org/apache/fop/util/text/AdvancedMessageFormat/<clinit>()#org/apache/fop/util/text/AdvancedMessageFormat$Function/getName()
org/apache/fop/util/text/AdvancedMessageFormat/<clinit>()#java/util/regex/Pattern/compile(java.lang.String)
org/apache/fop/util/text/AdvancedMessageFormat/<clinit>()#java/util/Iterator/hasNext()
org/apache/fop/util/text/AdvancedMessageFormat/<clinit>()#org/apache/xmlgraphics/util/Service/providers(java.lang.Class)
org/apache/fop/util/text/AdvancedMessageFormat/<clinit>()#org/apache/fop/util/text/AdvancedMessageFormat$PartFactory/getFormat()
org/apache/fop/util/text/AdvancedMessageFormat/<clinit>()#java/util/List/add(java.lang.Object)
org/apache/fop/util/text/AdvancedMessageFormat/<clinit>()#java/lang/Class/desiredAssertionStatus()
org/apache/fop/util/text/AdvancedMessageFormat/<clinit>()#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/fop/util/text/AdvancedMessageFormat/<clinit>()#java/util/ArrayList/ArrayList()
org/apache/fop/util/text/AdvancedMessageFormat/<clinit>()#java/util/Iterator/next()
org/apache/fop/util/text/AdvancedMessageFormat/<clinit>()#java/util/HashMap/HashMap()
org/apache/fop/util/text/AdvancedMessageFormat/parseInnerPattern(java.lang.CharSequence,org.apache.fop.util.text.AdvancedMessageFormat$CompositePart,java.lang.StringBuffer,int)#org/apache/fop/util/text/AdvancedMessageFormat$CompositePart/CompositePart(boolean)
org/apache/fop/util/text/AdvancedMessageFormat/parseInnerPattern(java.lang.CharSequence,org.apache.fop.util.text.AdvancedMessageFormat$CompositePart,java.lang.StringBuffer,int)#java/lang/CharSequence/length()
org/apache/fop/util/text/AdvancedMessageFormat/parseInnerPattern(java.lang.CharSequence,org.apache.fop.util.text.AdvancedMessageFormat$CompositePart,java.lang.StringBuffer,int)#java/lang/StringBuffer/append(char)
org/apache/fop/util/text/AdvancedMessageFormat/parseInnerPattern(java.lang.CharSequence,org.apache.fop.util.text.AdvancedMessageFormat$CompositePart,java.lang.StringBuffer,int)#java/lang/StringBuffer/length()
org/apache/fop/util/text/AdvancedMessageFormat/parseInnerPattern(java.lang.CharSequence,org.apache.fop.util.text.AdvancedMessageFormat$CompositePart,java.lang.StringBuffer,int)#org/apache/fop/util/text/AdvancedMessageFormat$TextPart/TextPart(java.lang.String)
org/apache/fop/util/text/AdvancedMessageFormat/parseInnerPattern(java.lang.CharSequence,org.apache.fop.util.text.AdvancedMessageFormat$CompositePart,java.lang.StringBuffer,int)#org/apache/fop/util/text/AdvancedMessageFormat$CompositePart/newSection()
org/apache/fop/util/text/AdvancedMessageFormat/parseInnerPattern(java.lang.CharSequence,org.apache.fop.util.text.AdvancedMessageFormat$CompositePart,java.lang.StringBuffer,int)#java/lang/AssertionError/AssertionError()
org/apache/fop/util/text/AdvancedMessageFormat/parseInnerPattern(java.lang.CharSequence,org.apache.fop.util.text.AdvancedMessageFormat$CompositePart,java.lang.StringBuffer,int)#java/lang/StringBuffer/setLength(int)
org/apache/fop/util/text/AdvancedMessageFormat/parseInnerPattern(java.lang.CharSequence,org.apache.fop.util.text.AdvancedMessageFormat$CompositePart,java.lang.StringBuffer,int)#java/lang/CharSequence/charAt(int)
org/apache/fop/util/text/AdvancedMessageFormat/parseInnerPattern(java.lang.CharSequence,org.apache.fop.util.text.AdvancedMessageFormat$CompositePart,java.lang.StringBuffer,int)#org/apache/fop/util/text/AdvancedMessageFormat$CompositePart/addChild(org.apache.fop.util.text.AdvancedMessageFormat$Part)
org/apache/fop/util/text/AdvancedMessageFormat/parseInnerPattern(java.lang.CharSequence,org.apache.fop.util.text.AdvancedMessageFormat$CompositePart,java.lang.StringBuffer,int)#java/lang/StringBuffer/toString()
org/apache/fop/util/text/AdvancedMessageFormat/parseField(java.lang.String)#org/apache/fop/util/text/AdvancedMessageFormat$PartFactory/newPart(java.lang.String,java.lang.String)
org/apache/fop/util/text/AdvancedMessageFormat/parseField(java.lang.String)#java/util/regex/Pattern/split(java.lang.CharSequence,int)
org/apache/fop/util/text/AdvancedMessageFormat/parseField(java.lang.String)#java/util/Map/get(java.lang.Object)
org/apache/fop/util/text/AdvancedMessageFormat/parseField(java.lang.String)#org/apache/fop/util/text/AdvancedMessageFormat$FunctionPart/FunctionPart(java.lang.String)
org/apache/fop/util/text/AdvancedMessageFormat/parseField(java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/util/text/AdvancedMessageFormat/parseField(java.lang.String)#java/lang/String/substring(int)
org/apache/fop/util/text/AdvancedMessageFormat/parseField(java.lang.String)#java/lang/String/startsWith(java.lang.String)
org/apache/fop/util/text/AdvancedMessageFormat/parseField(java.lang.String)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/fop/util/text/AdvancedMessageFormat/parseField(java.lang.String)#java/lang/StringBuilder/toString()
org/apache/fop/util/text/AdvancedMessageFormat/parseField(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/util/text/AdvancedMessageFormat/parseField(java.lang.String)#org/apache/fop/util/text/AdvancedMessageFormat$SimpleFieldPart/SimpleFieldPart(java.lang.String)
org/apache/fop/render/xml/XMLRenderer/renderPage(org.apache.fop.area.PageViewport)#org/xml/sax/helpers/AttributesImpl/clear()
org/apache/fop/render/xml/XMLRenderer/renderPage(org.apache.fop.area.PageViewport)#org/apache/fop/render/xml/XMLRenderer/startElement(java.lang.String,org.xml.sax.Attributes)
org/apache/fop/render/xml/XMLRenderer/renderPage(org.apache.fop.area.PageViewport)#org/apache/fop/render/xml/AbstractXMLRenderer/renderPage(org.apache.fop.area.PageViewport)
org/apache/fop/render/xml/XMLRenderer/renderPage(org.apache.fop.area.PageViewport)#org/apache/fop/render/xml/XMLRenderer/handlePageExtensionAttachments(org.apache.fop.area.PageViewport)
org/apache/fop/render/xml/XMLRenderer/renderPage(org.apache.fop.area.PageViewport)#org/apache/fop/render/xml/XMLRenderer/addAttribute(java.lang.String,int)
org/apache/fop/render/xml/XMLRenderer/renderPage(org.apache.fop.area.PageViewport)#org/apache/fop/render/xml/XMLRenderer/startElement(java.lang.String)
org/apache/fop/render/xml/XMLRenderer/renderPage(org.apache.fop.area.PageViewport)#org/apache/fop/render/xml/XMLRenderer/addAttribute(java.lang.String,java.awt.geom.Rectangle2D)
org/apache/fop/render/xml/XMLRenderer/renderPage(org.apache.fop.area.PageViewport)#org/apache/fop/render/xml/XMLRenderer/addAttribute(java.lang.String,java.lang.String)
org/apache/fop/render/xml/XMLRenderer/renderPage(org.apache.fop.area.PageViewport)#org/apache/fop/render/xml/XMLRenderer/endElement(java.lang.String)
org/apache/fop/render/xml/XMLRenderer/addTraitAttributes(org.apache.fop.area.Area)#java/lang/Integer/intValue()
org/apache/fop/render/xml/XMLRenderer/addTraitAttributes(org.apache.fop.area.Area)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/apache/fop/render/xml/XMLRenderer/addTraitAttributes(org.apache.fop.area.Area)#java/util/Iterator/hasNext()
org/apache/fop/render/xml/XMLRenderer/addTraitAttributes(org.apache.fop.area.Area)#org/apache/fop/area/Trait$Background/getHoriz()
org/apache/fop/render/xml/XMLRenderer/addTraitAttributes(org.apache.fop.area.Area)#java/lang/String/equals(java.lang.Object)
org/apache/fop/render/xml/XMLRenderer/addTraitAttributes(org.apache.fop.area.Area)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/render/xml/XMLRenderer/addTraitAttributes(org.apache.fop.area.Area)#java/util/Map$Entry/getValue()
org/apache/fop/render/xml/XMLRenderer/addTraitAttributes(org.apache.fop.area.Area)#org/apache/fop/area/Trait$Background/getURL()
org/apache/fop/render/xml/XMLRenderer/addTraitAttributes(org.apache.fop.area.Area)#org/apache/fop/area/Trait$Background/getRepeat()
org/apache/fop/render/xml/XMLRenderer/addTraitAttributes(org.apache.fop.area.Area)#java/lang/Object/toString()
org/apache/fop/render/xml/XMLRenderer/addTraitAttributes(org.apache.fop.area.Area)#java/lang/Object/equals(java.lang.Object)
org/apache/fop/render/xml/XMLRenderer/addTraitAttributes(org.apache.fop.area.Area)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/render/xml/XMLRenderer/addTraitAttributes(org.apache.fop.area.Area)#java/util/Map$Entry/getKey()
org/apache/fop/render/xml/XMLRenderer/addTraitAttributes(org.apache.fop.area.Area)#java/lang/StringBuilder/append(int)
org/apache/fop/render/xml/XMLRenderer/addTraitAttributes(org.apache.fop.area.Area)#org/apache/fop/area/Trait$Background/toString()
org/apache/fop/render/xml/XMLRenderer/addTraitAttributes(org.apache.fop.area.Area)#org/apache/fop/area/Trait$Background/getColor()
org/apache/fop/render/xml/XMLRenderer/addTraitAttributes(org.apache.fop.area.Area)#java/util/Iterator/next()
org/apache/fop/render/xml/XMLRenderer/addTraitAttributes(org.apache.fop.area.Area)#org/apache/fop/render/xml/XMLRenderer/addAttribute(java.lang.String,int)
org/apache/fop/render/xml/XMLRenderer/addTraitAttributes(org.apache.fop.area.Area)#java/util/Set/iterator()
org/apache/fop/render/xml/XMLRenderer/addTraitAttributes(org.apache.fop.area.Area)#java/util/Map/entrySet()
org/apache/fop/render/xml/XMLRenderer/addTraitAttributes(org.apache.fop.area.Area)#org/apache/fop/render/xml/XMLRenderer/addAttribute(java.lang.String,java.lang.String)
org/apache/fop/render/xml/XMLRenderer/addTraitAttributes(org.apache.fop.area.Area)#org/apache/fop/area/Trait$InternalLink/xmlAttribute()
org/apache/fop/render/xml/XMLRenderer/addTraitAttributes(org.apache.fop.area.Area)#org/apache/fop/area/Trait$Background/getVertical()
org/apache/fop/render/xml/XMLRenderer/addTraitAttributes(org.apache.fop.area.Area)#java/lang/StringBuilder/toString()
org/apache/fop/render/xml/XMLRenderer/renderBlock(org.apache.fop.area.Block)#org/xml/sax/helpers/AttributesImpl/clear()
org/apache/fop/render/xml/XMLRenderer/renderBlock(org.apache.fop.area.Block)#org/apache/fop/render/xml/XMLRenderer/startElement(java.lang.String,org.xml.sax.Attributes)
org/apache/fop/render/xml/XMLRenderer/renderBlock(org.apache.fop.area.Block)#org/apache/fop/area/BlockViewport/getXOffset()
org/apache/fop/render/xml/XMLRenderer/renderBlock(org.apache.fop.area.Block)#org/apache/fop/area/BlockViewport/getYOffset()
org/apache/fop/render/xml/XMLRenderer/renderBlock(org.apache.fop.area.Block)#org/apache/fop/render/xml/AbstractXMLRenderer/renderBlock(org.apache.fop.area.Block)
org/apache/fop/render/xml/XMLRenderer/renderBlock(org.apache.fop.area.Block)#org/apache/fop/area/Block/getYOffset()
org/apache/fop/render/xml/XMLRenderer/renderBlock(org.apache.fop.area.Block)#org/apache/fop/render/xml/XMLRenderer/endElement(java.lang.String)
org/apache/fop/render/xml/XMLRenderer/renderBlock(org.apache.fop.area.Block)#org/apache/fop/render/xml/XMLRenderer/addAttribute(java.lang.String,int)
org/apache/fop/render/xml/XMLRenderer/renderBlock(org.apache.fop.area.Block)#org/apache/fop/area/Block/getXOffset()
org/apache/fop/render/xml/XMLRenderer/renderBlock(org.apache.fop.area.Block)#org/apache/fop/area/BlockViewport/getPositioning()
org/apache/fop/render/xml/XMLRenderer/renderBlock(org.apache.fop.area.Block)#org/apache/fop/render/xml/XMLRenderer/addAttribute(java.lang.String,java.lang.String)
org/apache/fop/render/xml/XMLRenderer/startPageSequence(org.apache.fop.area.PageSequence)#org/xml/sax/helpers/AttributesImpl/clear()
org/apache/fop/render/xml/XMLRenderer/startPageSequence(org.apache.fop.area.PageSequence)#org/apache/fop/render/xml/XMLRenderer/startElement(java.lang.String,org.xml.sax.Attributes)
org/apache/fop/render/xml/XMLRenderer/startPageSequence(org.apache.fop.area.PageSequence)#java/util/List/size()
org/apache/fop/render/xml/XMLRenderer/startPageSequence(org.apache.fop.area.PageSequence)#org/apache/fop/render/xml/XMLRenderer/handleDocumentExtensionAttachments()
org/apache/fop/render/xml/XMLRenderer/startPageSequence(org.apache.fop.area.PageSequence)#org/apache/fop/render/xml/XMLRenderer/startElement(java.lang.String)
org/apache/fop/render/xml/XMLRenderer/startPageSequence(org.apache.fop.area.PageSequence)#org/apache/fop/area/PageSequence/getExtensionAttachments()
org/apache/fop/render/xml/XMLRenderer/startPageSequence(org.apache.fop.area.PageSequence)#org/apache/xmlgraphics/util/QName/QName(java.lang.String,java.lang.String)
org/apache/fop/render/xml/XMLRenderer/startPageSequence(org.apache.fop.area.PageSequence)#java/util/List/get(int)
org/apache/fop/render/xml/XMLRenderer/startPageSequence(org.apache.fop.area.PageSequence)#org/apache/fop/render/xml/XMLRenderer/addAttribute(org.apache.xmlgraphics.util.QName,java.lang.String)
org/apache/fop/render/xml/XMLRenderer/startPageSequence(org.apache.fop.area.PageSequence)#org/apache/fop/render/xml/XMLRenderer/endElement(java.lang.String)
org/apache/fop/render/xml/XMLRenderer/renderRegionViewport(org.apache.fop.area.RegionViewport)#org/xml/sax/helpers/AttributesImpl/clear()
org/apache/fop/render/xml/XMLRenderer/renderRegionViewport(org.apache.fop.area.RegionViewport)#org/apache/fop/render/xml/XMLRenderer/addAttribute(java.lang.String,java.awt.geom.Rectangle2D)
org/apache/fop/render/xml/XMLRenderer/renderRegionViewport(org.apache.fop.area.RegionViewport)#org/apache/fop/render/xml/XMLRenderer/renderRegion(org.apache.fop.area.RegionReference)
org/apache/fop/render/xml/XMLRenderer/renderRegionViewport(org.apache.fop.area.RegionViewport)#org/apache/fop/render/xml/XMLRenderer/startElement(java.lang.String,org.xml.sax.Attributes)
org/apache/fop/render/xml/XMLRenderer/renderRegionViewport(org.apache.fop.area.RegionViewport)#org/apache/fop/render/xml/XMLRenderer/renderBodyRegion(org.apache.fop.area.BodyRegion)
org/apache/fop/render/xml/XMLRenderer/renderRegionViewport(org.apache.fop.area.RegionViewport)#org/apache/fop/render/xml/XMLRenderer/addAttribute(java.lang.String,int)
org/apache/fop/render/xml/XMLRenderer/renderRegionViewport(org.apache.fop.area.RegionViewport)#org/apache/fop/render/xml/XMLRenderer/addAttribute(java.lang.String,java.lang.String)
org/apache/fop/render/xml/XMLRenderer/renderRegionViewport(org.apache.fop.area.RegionViewport)#java/lang/AssertionError/AssertionError()
org/apache/fop/render/xml/XMLRenderer/renderRegionViewport(org.apache.fop.area.RegionViewport)#org/apache/fop/render/xml/XMLRenderer/endElement(java.lang.String)
org/apache/fop/render/xml/XMLRenderer/renderText(org.apache.fop.area.inline.TextArea)#org/xml/sax/helpers/AttributesImpl/clear()
org/apache/fop/render/xml/XMLRenderer/renderText(org.apache.fop.area.inline.TextArea)#org/apache/fop/area/inline/TextArea/getTextWordSpaceAdjust()
org/apache/fop/render/xml/XMLRenderer/renderText(org.apache.fop.area.inline.TextArea)#org/apache/fop/area/inline/TextArea/getTextLetterSpaceAdjust()
org/apache/fop/render/xml/XMLRenderer/renderText(org.apache.fop.area.inline.TextArea)#org/apache/fop/area/inline/TextArea/getBlockProgressionOffset()
org/apache/fop/render/xml/XMLRenderer/renderText(org.apache.fop.area.inline.TextArea)#org/apache/fop/render/xml/AbstractXMLRenderer/renderText(org.apache.fop.area.inline.TextArea)
org/apache/fop/render/xml/XMLRenderer/renderText(org.apache.fop.area.inline.TextArea)#org/apache/fop/render/xml/XMLRenderer/endElement(java.lang.String)
org/apache/fop/render/xml/XMLRenderer/renderText(org.apache.fop.area.inline.TextArea)#org/apache/fop/area/inline/TextArea/getBaselineOffset()
org/apache/fop/render/xml/XMLRenderer/renderText(org.apache.fop.area.inline.TextArea)#org/apache/fop/render/xml/XMLRenderer/startElement(java.lang.String,org.xml.sax.Attributes)
org/apache/fop/render/xml/XMLRenderer/renderText(org.apache.fop.area.inline.TextArea)#org/apache/fop/render/xml/XMLRenderer/addAttribute(java.lang.String,int)
org/apache/fop/render/xml/XMLRenderer/startRenderer(java.io.OutputStream)#javax/xml/transform/sax/SAXTransformerFactory/newTransformerHandler()
org/apache/fop/render/xml/XMLRenderer/startRenderer(java.io.OutputStream)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/fop/render/xml/XMLRenderer/startRenderer(java.io.OutputStream)#javax/xml/transform/sax/SAXTransformerFactory/newInstance()
org/apache/fop/render/xml/XMLRenderer/startRenderer(java.io.OutputStream)#org/apache/fop/render/xml/XMLRenderer/handleSAXException(org.xml.sax.SAXException)
org/apache/fop/render/xml/XMLRenderer/startRenderer(java.io.OutputStream)#javax/xml/transform/sax/TransformerHandler/setResult(javax.xml.transform.Result)
org/apache/fop/render/xml/XMLRenderer/startRenderer(java.io.OutputStream)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/render/xml/XMLRenderer/startRenderer(java.io.OutputStream)#org/apache/fop/render/xml/XMLRenderer/comment(java.lang.String)
org/apache/fop/render/xml/XMLRenderer/startRenderer(java.io.OutputStream)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/render/xml/XMLRenderer/startRenderer(java.io.OutputStream)#javax/xml/transform/stream/StreamResult/StreamResult(java.io.OutputStream)
org/apache/fop/render/xml/XMLRenderer/startRenderer(java.io.OutputStream)#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/apache/fop/render/xml/XMLRenderer/startRenderer(java.io.OutputStream)#javax/xml/transform/TransformerConfigurationException/getMessage()
org/apache/fop/render/xml/XMLRenderer/startRenderer(java.io.OutputStream)#org/apache/fop/render/xml/XMLRenderer/addAttribute(java.lang.String,java.lang.String)
org/apache/fop/render/xml/XMLRenderer/startRenderer(java.io.OutputStream)#java/lang/StringBuilder/toString()
org/apache/fop/render/xml/XMLRenderer/startRenderer(java.io.OutputStream)#org/xml/sax/helpers/AttributesImpl/clear()
org/apache/fop/render/xml/XMLRenderer/startRenderer(java.io.OutputStream)#org/xml/sax/ContentHandler/startDocument()
org/apache/fop/render/xml/XMLRenderer/startRenderer(java.io.OutputStream)#org/apache/fop/render/xml/XMLRenderer/startElement(java.lang.String,org.xml.sax.Attributes)
org/apache/fop/render/xml/XMLRenderer/renderWord(org.apache.fop.area.inline.WordArea)#org/xml/sax/helpers/AttributesImpl/clear()
org/apache/fop/render/xml/XMLRenderer/renderWord(org.apache.fop.area.inline.WordArea)#java/lang/StringBuffer/append(char)
org/apache/fop/render/xml/XMLRenderer/renderWord(org.apache.fop.area.inline.WordArea)#org/apache/fop/area/inline/WordArea/getBlockProgressionOffset()
org/apache/fop/render/xml/XMLRenderer/renderWord(org.apache.fop.area.inline.WordArea)#java/lang/StringBuffer/toString()
org/apache/fop/render/xml/XMLRenderer/renderWord(org.apache.fop.area.inline.WordArea)#org/apache/fop/render/xml/XMLRenderer/addAttribute(java.lang.String,int)
org/apache/fop/render/xml/XMLRenderer/renderWord(org.apache.fop.area.inline.WordArea)#java/lang/StringBuffer/append(int)
org/apache/fop/render/xml/XMLRenderer/renderWord(org.apache.fop.area.inline.WordArea)#org/apache/fop/render/xml/AbstractXMLRenderer/renderWord(org.apache.fop.area.inline.WordArea)
org/apache/fop/render/xml/XMLRenderer/renderWord(org.apache.fop.area.inline.WordArea)#org/apache/fop/render/xml/XMLRenderer/addAttribute(java.lang.String,java.lang.String)
org/apache/fop/render/xml/XMLRenderer/renderWord(org.apache.fop.area.inline.WordArea)#org/apache/fop/render/xml/XMLRenderer/endElement(java.lang.String)
org/apache/fop/render/xml/XMLRenderer/renderWord(org.apache.fop.area.inline.WordArea)#org/apache/fop/render/xml/XMLRenderer/startElement(java.lang.String,org.xml.sax.Attributes)
org/apache/fop/render/xml/XMLRenderer/renderWord(org.apache.fop.area.inline.WordArea)#org/apache/fop/render/xml/XMLRenderer/characters(java.lang.String)
org/apache/fop/render/xml/XMLRenderer/renderWord(org.apache.fop.area.inline.WordArea)#java/lang/StringBuffer/StringBuffer(int)
org/apache/fop/render/xml/XMLRenderer/handleExtensionAttachments(java.util.List)#java/util/Iterator/hasNext()
org/apache/fop/render/xml/XMLRenderer/handleExtensionAttachments(java.util.List)#org/apache/commons/logging/Log/warn(java.lang.Object)
org/apache/fop/render/xml/XMLRenderer/handleExtensionAttachments(java.util.List)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/render/xml/XMLRenderer/handleExtensionAttachments(java.util.List)#java/util/List/size()
org/apache/fop/render/xml/XMLRenderer/handleExtensionAttachments(java.util.List)#java/util/Iterator/next()
org/apache/fop/render/xml/XMLRenderer/handleExtensionAttachments(java.util.List)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/render/xml/XMLRenderer/handleExtensionAttachments(java.util.List)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/fop/render/xml/XMLRenderer/handleExtensionAttachments(java.util.List)#java/util/List/iterator()
org/apache/fop/render/xml/XMLRenderer/handleExtensionAttachments(java.util.List)#java/lang/StringBuilder/toString()
org/apache/fop/render/xml/XMLRenderer/handleExtensionAttachments(java.util.List)#org/apache/fop/render/xml/XMLRenderer/startElement(java.lang.String)
org/apache/fop/render/xml/XMLRenderer/handleExtensionAttachments(java.util.List)#org/apache/commons/logging/Log/error(java.lang.Object,java.lang.Throwable)
org/apache/fop/render/xml/XMLRenderer/handleExtensionAttachments(java.util.List)#org/apache/xmlgraphics/util/XMLizable/toSAX(org.xml.sax.ContentHandler)
org/apache/fop/render/xml/XMLRenderer/handleExtensionAttachments(java.util.List)#org/apache/fop/render/xml/XMLRenderer/endElement(java.lang.String)
org/apache/fop/render/xml/XMLRenderer/transferForeignObjects(org.apache.fop.area.AreaTreeObject)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/fop/render/xml/XMLRenderer/transferForeignObjects(org.apache.fop.area.AreaTreeObject)#org/apache/xmlgraphics/util/QName/getPrefix()
org/apache/fop/render/xml/XMLRenderer/transferForeignObjects(org.apache.fop.area.AreaTreeObject)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/render/xml/XMLRenderer/transferForeignObjects(org.apache.fop.area.AreaTreeObject)#java/util/Set/iterator()
org/apache/fop/render/xml/XMLRenderer/transferForeignObjects(org.apache.fop.area.AreaTreeObject)#org/xml/sax/helpers/AttributesImpl/addAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
org/apache/fop/render/xml/XMLRenderer/transferForeignObjects(org.apache.fop.area.AreaTreeObject)#java/util/Map$Entry/getValue()
org/apache/fop/render/xml/XMLRenderer/transferForeignObjects(org.apache.fop.area.AreaTreeObject)#java/util/Map/entrySet()
org/apache/fop/render/xml/XMLRenderer/transferForeignObjects(org.apache.fop.area.AreaTreeObject)#org/apache/fop/render/xml/XMLRenderer/addAttribute(org.apache.xmlgraphics.util.QName,java.lang.String)
org/apache/fop/render/xml/XMLRenderer/transferForeignObjects(org.apache.fop.area.AreaTreeObject)#java/lang/StringBuilder/toString()
org/apache/fop/render/xml/XMLRenderer/transferForeignObjects(org.apache.fop.area.AreaTreeObject)#java/util/Iterator/hasNext()
org/apache/fop/render/xml/XMLRenderer/transferForeignObjects(org.apache.fop.area.AreaTreeObject)#org/apache/xmlgraphics/util/QName/getNamespaceURI()
org/apache/fop/render/xml/XMLRenderer/transferForeignObjects(org.apache.fop.area.AreaTreeObject)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/render/xml/XMLRenderer/transferForeignObjects(org.apache.fop.area.AreaTreeObject)#java/util/Map$Entry/getKey()
org/apache/fop/render/xml/XMLRenderer/transferForeignObjects(org.apache.fop.area.AreaTreeObject)#java/util/Iterator/next()
org/apache/fop/render/xml/XMLRenderer/transferForeignObjects(org.apache.fop.area.AreaTreeObject)#java/util/HashMap/HashMap()
org/apache/fop/render/bitmap/TIFFRendererConfig/TIFFRendererConfigParser/build(org.apache.fop.apps.FOUserAgent,org.apache.avalon.framework.configuration.Configuration)#org/apache/fop/render/bitmap/TIFFRendererConfig$TIFFRendererConfigParser/setParam(org.apache.fop.render.bitmap.TIFFRendererConfig$TIFFRendererOption,java.lang.Object)
org/apache/fop/render/bitmap/TIFFRendererConfig/TIFFRendererConfigParser/build(org.apache.fop.apps.FOUserAgent,org.apache.avalon.framework.configuration.Configuration)#java/lang/Boolean/valueOf(java.lang.String)
org/apache/fop/render/bitmap/TIFFRendererConfig/TIFFRendererConfigParser/build(org.apache.fop.apps.FOUserAgent,org.apache.avalon.framework.configuration.Configuration)#org/apache/fop/render/bitmap/TIFFRendererConfig$TIFFRendererConfigParser/build(org.apache.fop.apps.FOUserAgent,org.apache.avalon.framework.configuration.Configuration)
org/apache/fop/render/bitmap/TIFFRendererConfig/TIFFRendererConfigParser/build(org.apache.fop.apps.FOUserAgent,org.apache.avalon.framework.configuration.Configuration)#org/apache/fop/fonts/DefaultFontConfig$DefaultFontConfigParser/DefaultFontConfigParser()
org/apache/fop/render/bitmap/TIFFRendererConfig/TIFFRendererConfigParser/build(org.apache.fop.apps.FOUserAgent,org.apache.avalon.framework.configuration.Configuration)#org/apache/fop/render/bitmap/TIFFCompressionValue/getType(java.lang.String)
org/apache/fop/render/bitmap/TIFFRendererConfig/TIFFRendererConfigParser/build(org.apache.fop.apps.FOUserAgent,org.apache.avalon.framework.configuration.Configuration)#org/apache/fop/render/bitmap/TIFFRendererConfig$TIFFRendererConfigParser/getValue(org.apache.avalon.framework.configuration.Configuration,org.apache.fop.render.bitmap.TIFFRendererConfig$TIFFRendererOption)
org/apache/fop/render/bitmap/TIFFRendererConfig/TIFFRendererConfigParser/build(org.apache.fop.apps.FOUserAgent,org.apache.avalon.framework.configuration.Configuration)#org/apache/fop/fonts/DefaultFontConfig$DefaultFontConfigParser/parse(org.apache.avalon.framework.configuration.Configuration,boolean)
org/apache/fop/render/bitmap/TIFFRendererConfig/TIFFRendererConfigParser/build(org.apache.fop.apps.FOUserAgent,org.apache.avalon.framework.configuration.Configuration)#org/apache/xmlgraphics/image/writer/Endianness/getEndianType(java.lang.String)
org/apache/fop/render/bitmap/TIFFRendererConfig/TIFFRendererConfigParser/build(org.apache.fop.apps.FOUserAgent,org.apache.avalon.framework.configuration.Configuration)#org/apache/fop/render/bitmap/BitmapRendererConfig$BitmapRendererConfigParser/build(org.apache.fop.render.bitmap.BitmapRendererConfig,org.apache.fop.apps.FOUserAgent,org.apache.avalon.framework.configuration.Configuration)
org/apache/fop/util/ContentHandlerFactoryRegistry/discover()#java/util/Iterator/hasNext()
org/apache/fop/util/ContentHandlerFactoryRegistry/discover()#org/apache/commons/logging/Log/isDebugEnabled()
org/apache/fop/util/ContentHandlerFactoryRegistry/discover()#java/util/Iterator/next()
org/apache/fop/util/ContentHandlerFactoryRegistry/discover()#java/lang/Class/getName()
org/apache/fop/util/ContentHandlerFactoryRegistry/discover()#java/lang/StringBuilder/StringBuilder()
org/apache/fop/util/ContentHandlerFactoryRegistry/discover()#org/apache/commons/logging/Log/error(java.lang.Object,java.lang.Throwable)
org/apache/fop/util/ContentHandlerFactoryRegistry/discover()#java/lang/Object/getClass()
org/apache/fop/util/ContentHandlerFactoryRegistry/discover()#java/lang/StringBuilder/toString()
org/apache/fop/util/ContentHandlerFactoryRegistry/discover()#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/fop/util/ContentHandlerFactoryRegistry/discover()#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/util/ContentHandlerFactoryRegistry/discover()#org/apache/xmlgraphics/util/Service/providers(java.lang.Class)
org/apache/fop/render/afp/AFPImageHandlerSVG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/fop/afp/AFPPaintingState/save()
org/apache/fop/render/afp/AFPImageHandlerSVG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/xmlgraphics/image/loader/ImageSize/getDimensionMpt()
org/apache/fop/render/afp/AFPImageHandlerSVG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/xmlgraphics/image/loader/impl/ImageXMLDOM/getDocument()
org/apache/fop/render/afp/AFPImageHandlerSVG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/fop/afp/AFPGraphicsObjectInfo/setObjectAreaInfo(org.apache.fop.afp.AFPObjectAreaInfo)
org/apache/fop/render/afp/AFPImageHandlerSVG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/xmlgraphics/image/loader/Image/getInfo()
org/apache/fop/render/afp/AFPImageHandlerSVG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/awt/geom/AffineTransform/translate(double,double)
org/apache/fop/render/afp/AFPImageHandlerSVG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/fop/afp/AFPPaintingState/concatenate(java.awt.geom.AffineTransform)
org/apache/fop/render/afp/AFPImageHandlerSVG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/xmlgraphics/image/loader/ImageInfo/getOriginalURI()
org/apache/fop/render/afp/AFPImageHandlerSVG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/batik/bridge/GVTBuilder/build(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Document)
org/apache/fop/render/afp/AFPImageHandlerSVG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/fop/svg/SVGEventProducer$Provider/get(org.apache.fop.events.EventBroadcaster)
org/apache/fop/render/afp/AFPImageHandlerSVG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/awt/geom/AffineTransform/AffineTransform()
org/apache/fop/render/afp/AFPImageHandlerSVG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/xmlgraphics/java2d/GraphicContext/GraphicContext()
org/apache/fop/render/afp/AFPImageHandlerSVG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/batik/bridge/GVTBuilder/GVTBuilder()
org/apache/fop/render/afp/AFPImageHandlerSVG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/xmlgraphics/image/loader/Image/getSize()
org/apache/fop/render/afp/AFPImageHandlerSVG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/fop/render/afp/AFPRenderingContext/getUserAgent()
org/apache/fop/render/afp/AFPImageHandlerSVG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/lang/AssertionError/AssertionError()
org/apache/fop/render/afp/AFPImageHandlerSVG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/fop/afp/AFPGraphicsObjectInfo/getResourceInfo()
org/apache/fop/render/afp/AFPImageHandlerSVG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/fop/afp/AFPPaintingState/restore()
org/apache/fop/render/AbstractImageHandlerGraphics2D/paintToBufferedImage(org.apache.xmlgraphics.java2d.Graphics2DImagePainter,java.awt.Dimension,int,boolean,boolean)#org/apache/xmlgraphics/java2d/Graphics2DImagePainter/paint(java.awt.Graphics2D,java.awt.geom.Rectangle2D)
org/apache/fop/render/AbstractImageHandlerGraphics2D/paintToBufferedImage(org.apache.xmlgraphics.java2d.Graphics2DImagePainter,java.awt.Dimension,int,boolean,boolean)#java/lang/Math/ceil(double)
org/apache/fop/render/AbstractImageHandlerGraphics2D/paintToBufferedImage(org.apache.xmlgraphics.java2d.Graphics2DImagePainter,java.awt.Dimension,int,boolean,boolean)#java/awt/geom/Rectangle2D$Double/Double(double,double,double,double)
org/apache/fop/render/AbstractImageHandlerGraphics2D/paintToBufferedImage(org.apache.xmlgraphics.java2d.Graphics2DImagePainter,java.awt.Dimension,int,boolean,boolean)#java/awt/Dimension/getHeight()
org/apache/fop/render/AbstractImageHandlerGraphics2D/paintToBufferedImage(org.apache.xmlgraphics.java2d.Graphics2DImagePainter,java.awt.Dimension,int,boolean,boolean)#java/awt/Graphics2D/setBackground(java.awt.Color)
org/apache/fop/render/AbstractImageHandlerGraphics2D/paintToBufferedImage(org.apache.xmlgraphics.java2d.Graphics2DImagePainter,java.awt.Dimension,int,boolean,boolean)#java/awt/Dimension/getWidth()
org/apache/fop/render/AbstractImageHandlerGraphics2D/paintToBufferedImage(org.apache.xmlgraphics.java2d.Graphics2DImagePainter,java.awt.Dimension,int,boolean,boolean)#java/awt/Graphics2D/clearRect(int,int,int,int)
org/apache/fop/render/AbstractImageHandlerGraphics2D/paintToBufferedImage(org.apache.xmlgraphics.java2d.Graphics2DImagePainter,java.awt.Dimension,int,boolean,boolean)#org/apache/xmlgraphics/util/UnitConv/mpt2px(double,int)
org/apache/fop/render/AbstractImageHandlerGraphics2D/paintToBufferedImage(org.apache.xmlgraphics.java2d.Graphics2DImagePainter,java.awt.Dimension,int,boolean,boolean)#java/awt/Graphics2D/dispose()
org/apache/fop/render/AbstractImageHandlerGraphics2D/paintToBufferedImage(org.apache.xmlgraphics.java2d.Graphics2DImagePainter,java.awt.Dimension,int,boolean,boolean)#java/awt/image/BufferedImage/BufferedImage(int,int,int)
org/apache/fop/render/AbstractImageHandlerGraphics2D/paintToBufferedImage(org.apache.xmlgraphics.java2d.Graphics2DImagePainter,java.awt.Dimension,int,boolean,boolean)#java/awt/Graphics2D/scale(double,double)
org/apache/fop/render/AbstractImageHandlerGraphics2D/paintToBufferedImage(org.apache.xmlgraphics.java2d.Graphics2DImagePainter,java.awt.Dimension,int,boolean,boolean)#java/awt/image/BufferedImage/createGraphics()
org/apache/fop/render/AbstractImageHandlerGraphics2D/paintToBufferedImage(org.apache.xmlgraphics.java2d.Graphics2DImagePainter,java.awt.Dimension,int,boolean,boolean)#java/awt/Graphics2D/setColor(java.awt.Color)
org/apache/fop/render/AbstractImageHandlerGraphics2D/paintToBufferedImage(org.apache.xmlgraphics.java2d.Graphics2DImagePainter,java.awt.Dimension,int,boolean,boolean)#java/awt/Graphics2D/setRenderingHint(java.awt.RenderingHints$Key,java.lang.Object)
org/apache/fop/area/Trait/ExternalLink/makeFromTraitValue(java.lang.String)#java/lang/Boolean/valueOf(java.lang.String)
org/apache/fop/area/Trait/ExternalLink/makeFromTraitValue(java.lang.String)#java/lang/String/split(java.lang.String)
org/apache/fop/area/Trait/ExternalLink/makeFromTraitValue(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/area/Trait/ExternalLink/makeFromTraitValue(java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/area/Trait/ExternalLink/makeFromTraitValue(java.lang.String)#java/lang/String/substring(int)
org/apache/fop/area/Trait/ExternalLink/makeFromTraitValue(java.lang.String)#org/apache/fop/area/Trait$ExternalLink/ExternalLink(java.lang.String,boolean)
org/apache/fop/area/Trait/ExternalLink/makeFromTraitValue(java.lang.String)#java/lang/String/startsWith(java.lang.String)
org/apache/fop/area/Trait/ExternalLink/makeFromTraitValue(java.lang.String)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/fop/area/Trait/ExternalLink/makeFromTraitValue(java.lang.String)#java/lang/Boolean/booleanValue()
org/apache/fop/area/Trait/ExternalLink/makeFromTraitValue(java.lang.String)#java/lang/StringBuilder/toString()
org/apache/fop/afp/AFPDitheredRectanglePainter/paint(org.apache.fop.afp.PaintingInfo)#org/apache/fop/afp/AFPImageObjectInfo/setDataHeightRes(int)
org/apache/fop/afp/AFPDitheredRectanglePainter/paint(org.apache.fop.afp.PaintingInfo)#java/awt/Dimension/Dimension(int,int)
org/apache/fop/afp/AFPDitheredRectanglePainter/paint(org.apache.fop.afp.PaintingInfo)#java/lang/Math/round(double)
org/apache/fop/afp/AFPDitheredRectanglePainter/paint(org.apache.fop.afp.PaintingInfo)#java/awt/geom/AffineTransform/transform(java.awt.geom.Point2D,java.awt.geom.Point2D)
org/apache/fop/afp/AFPDitheredRectanglePainter/paint(org.apache.fop.afp.PaintingInfo)#org/apache/fop/afp/AFPPaintingState/getData()
org/apache/fop/afp/AFPDitheredRectanglePainter/paint(org.apache.fop.afp.PaintingInfo)#org/apache/fop/afp/AFPPaintingState/getColor()
org/apache/fop/afp/AFPDitheredRectanglePainter/paint(org.apache.fop.afp.PaintingInfo)#java/lang/Math/round(float)
org/apache/fop/afp/AFPDitheredRectanglePainter/paint(org.apache.fop.afp.PaintingInfo)#org/apache/fop/afp/AFPImageObjectInfo/setMimeType(java.lang.String)
org/apache/fop/afp/AFPDitheredRectanglePainter/paint(org.apache.fop.afp.PaintingInfo)#org/apache/fop/afp/AFPImageObjectInfo/setDataHeight(int)
org/apache/fop/afp/AFPDitheredRectanglePainter/paint(org.apache.fop.afp.PaintingInfo)#org/apache/xmlgraphics/image/loader/ImageSize/getDpiHorizontal()
org/apache/fop/afp/AFPDitheredRectanglePainter/paint(org.apache.fop.afp.PaintingInfo)#java/awt/geom/Point2D/getY()
org/apache/fop/afp/AFPDitheredRectanglePainter/paint(org.apache.fop.afp.PaintingInfo)#org/apache/fop/afp/AFPImageObjectInfo/setObjectAreaInfo(org.apache.fop.afp.AFPObjectAreaInfo)
org/apache/fop/afp/AFPDitheredRectanglePainter/paint(org.apache.fop.afp.PaintingInfo)#org/apache/fop/afp/AFPImageObjectInfo/setMappingOption(byte)
org/apache/fop/afp/AFPDitheredRectanglePainter/paint(org.apache.fop.afp.PaintingInfo)#org/apache/fop/afp/AFPImageObjectInfo/setDataWidthRes(int)
org/apache/fop/afp/AFPDitheredRectanglePainter/paint(org.apache.fop.afp.PaintingInfo)#org/apache/fop/util/AbstractPaintingState$AbstractData/getTransform()
org/apache/fop/afp/AFPDitheredRectanglePainter/paint(org.apache.fop.afp.PaintingInfo)#org/apache/fop/afp/AFPImageObjectInfo/setData(byte[])
org/apache/fop/afp/AFPDitheredRectanglePainter/paint(org.apache.fop.afp.PaintingInfo)#org/apache/xmlgraphics/image/loader/ImageSize/getDpiVertical()
org/apache/fop/afp/AFPDitheredRectanglePainter/paint(org.apache.fop.afp.PaintingInfo)#org/apache/fop/afp/AFPImageObjectInfo/setDataWidth(int)
org/apache/fop/afp/AFPDitheredRectanglePainter/paint(org.apache.fop.afp.PaintingInfo)#java/awt/geom/Point2D$Float/Float(float,float)
org/apache/fop/afp/AFPDitheredRectanglePainter/paint(org.apache.fop.afp.PaintingInfo)#org/apache/xmlgraphics/image/loader/ImageSize/ImageSize(int,int,double)
org/apache/fop/afp/AFPDitheredRectanglePainter/paint(org.apache.fop.afp.PaintingInfo)#java/awt/geom/Point2D/getX()
org/apache/fop/afp/AFPDitheredRectanglePainter/paint(org.apache.fop.afp.PaintingInfo)#org/apache/fop/afp/AFPImageObjectInfo/getResourceInfo()
org/apache/fop/fonts/FontManagerConfigurator/createFontsMatcher(java.util.List,boolean)#java/util/ArrayList/ArrayList()
org/apache/fop/fonts/FontManagerConfigurator/createFontsMatcher(java.util.List,boolean)#java/util/List/size()
org/apache/fop/fonts/FontManagerConfigurator/createFontsMatcher(java.util.List,boolean)#java/util/Iterator/next()
org/apache/fop/fonts/FontManagerConfigurator/createFontsMatcher(java.util.List,boolean)#org/apache/fop/fonts/FontManagerConfigurator$FontFamilyRegExFontTripletMatcher/FontFamilyRegExFontTripletMatcher(java.lang.String)
org/apache/fop/fonts/FontManagerConfigurator/createFontsMatcher(java.util.List,boolean)#java/util/List/toArray(java.lang.Object[])
org/apache/fop/fonts/FontManagerConfigurator/createFontsMatcher(java.util.List,boolean)#java/util/List/add(java.lang.Object)
org/apache/fop/fonts/FontManagerConfigurator/createFontsMatcher(java.util.List,boolean)#java/util/List/iterator()
org/apache/fop/fonts/FontManagerConfigurator/createFontsMatcher(java.util.List,boolean)#java/util/Iterator/hasNext()
org/apache/fop/fonts/FontManagerConfigurator/createFontsMatcher(java.util.List,boolean)#org/apache/fop/fonts/FontManagerConfigurator$OrFontTripletMatcher/OrFontTripletMatcher(org.apache.fop.fonts.FontTriplet$Matcher[])
org/apache/fop/fonts/FontCache/addFont(org.apache.fop.fonts.EmbedFontInfo,org.apache.fop.apps.io.InternalResourceResolver)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/fop/fonts/FontCache/addFont(org.apache.fop.fonts.EmbedFontInfo,org.apache.fop.apps.io.InternalResourceResolver)#java/io/File/File(java.net.URI)
org/apache/fop/fonts/FontCache/addFont(org.apache.fop.fonts.EmbedFontInfo,org.apache.fop.apps.io.InternalResourceResolver)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/fonts/FontCache/addFont(org.apache.fop.fonts.EmbedFontInfo,org.apache.fop.apps.io.InternalResourceResolver)#java/util/Map/get(java.lang.Object)
org/apache/fop/fonts/FontCache/addFont(org.apache.fop.fonts.EmbedFontInfo,org.apache.fop.apps.io.InternalResourceResolver)#java/io/File/lastModified()
org/apache/fop/fonts/FontCache/addFont(org.apache.fop.fonts.EmbedFontInfo,org.apache.fop.apps.io.InternalResourceResolver)#java/lang/StringBuilder/toString()
org/apache/fop/fonts/FontCache/addFont(org.apache.fop.fonts.EmbedFontInfo,org.apache.fop.apps.io.InternalResourceResolver)#org/apache/fop/fonts/FontCache$CachedFontFile/containsFont(org.apache.fop.fonts.EmbedFontInfo)
org/apache/fop/fonts/FontCache/addFont(org.apache.fop.fonts.EmbedFontInfo,org.apache.fop.apps.io.InternalResourceResolver)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/fonts/FontCache/addFont(org.apache.fop.fonts.EmbedFontInfo,org.apache.fop.apps.io.InternalResourceResolver)#org/apache/commons/logging/Log/trace(java.lang.Object)
org/apache/fop/fonts/FontCache/addFont(org.apache.fop.fonts.EmbedFontInfo,org.apache.fop.apps.io.InternalResourceResolver)#org/apache/fop/fonts/FontCache$CachedFontFile/put(org.apache.fop.fonts.EmbedFontInfo)
org/apache/fop/fonts/FontCache/addFont(org.apache.fop.fonts.EmbedFontInfo,org.apache.fop.apps.io.InternalResourceResolver)#org/apache/fop/fonts/FontCache$CachedFontFile/CachedFontFile(long)
org/apache/fop/fonts/FontCache/addFont(org.apache.fop.fonts.EmbedFontInfo,org.apache.fop.apps.io.InternalResourceResolver)#org/apache/commons/logging/Log/isTraceEnabled()
org/apache/fop/fonts/FontCache/saveTo(java.io.File)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/fonts/FontCache/saveTo(java.io.File)#java/io/ObjectOutputStream/writeObject(java.lang.Object)
org/apache/fop/fonts/FontCache/saveTo(java.io.File)#java/io/FileOutputStream/FileOutputStream(java.io.File)
org/apache/fop/fonts/FontCache/saveTo(java.io.File)#java/lang/StringBuilder/toString()
org/apache/fop/fonts/FontCache/saveTo(java.io.File)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/fonts/FontCache/saveTo(java.io.File)#org/apache/commons/logging/Log/trace(java.lang.Object)
org/apache/fop/fonts/FontCache/saveTo(java.io.File)#org/apache/commons/io/IOUtils/closeQuietly(java.io.OutputStream)
org/apache/fop/fonts/FontCache/saveTo(java.io.File)#java/io/File/getCanonicalPath()
org/apache/fop/fonts/FontCache/saveTo(java.io.File)#java/io/ObjectOutputStream/ObjectOutputStream(java.io.OutputStream)
org/apache/fop/fonts/FontCache/saveTo(java.io.File)#java/io/BufferedOutputStream/BufferedOutputStream(java.io.OutputStream)
org/apache/fop/fonts/FontCache/loadFrom(java.io.File)#java/lang/ClassNotFoundException/getMessage()
org/apache/fop/fonts/FontCache/loadFrom(java.io.File)#org/apache/commons/io/IOUtils/closeQuietly(java.io.InputStream)
org/apache/fop/fonts/FontCache/loadFrom(java.io.File)#org/apache/commons/logging/Log/warn(java.lang.Object)
org/apache/fop/fonts/FontCache/loadFrom(java.io.File)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/fonts/FontCache/loadFrom(java.io.File)#java/io/IOException/getMessage()
org/apache/fop/fonts/FontCache/loadFrom(java.io.File)#java/io/File/getAbsolutePath()
org/apache/fop/fonts/FontCache/loadFrom(java.io.File)#java/io/File/getCanonicalPath()
org/apache/fop/fonts/FontCache/loadFrom(java.io.File)#org/apache/commons/logging/Log/isTraceEnabled()
org/apache/fop/fonts/FontCache/loadFrom(java.io.File)#java/io/FileInputStream/FileInputStream(java.io.File)
org/apache/fop/fonts/FontCache/loadFrom(java.io.File)#java/io/File/delete()
org/apache/fop/fonts/FontCache/loadFrom(java.io.File)#java/lang/StringBuilder/toString()
org/apache/fop/fonts/FontCache/loadFrom(java.io.File)#java/io/File/exists()
org/apache/fop/fonts/FontCache/loadFrom(java.io.File)#java/io/ObjectInputStream/readObject()
org/apache/fop/fonts/FontCache/loadFrom(java.io.File)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/fonts/FontCache/loadFrom(java.io.File)#org/apache/commons/logging/Log/trace(java.lang.Object)
org/apache/fop/fonts/FontCache/loadFrom(java.io.File)#java/io/BufferedInputStream/BufferedInputStream(java.io.InputStream)
org/apache/fop/fonts/FontCache/loadFrom(java.io.File)#java/io/ObjectInputStream/ObjectInputStream(java.io.InputStream)
org/apache/fop/fonts/FontCache/getLastModified(java.net.URI)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/fop/fonts/FontCache/getLastModified(java.net.URI)#java/net/URL/openConnection()
org/apache/fop/fonts/FontCache/getLastModified(java.net.URI)#org/apache/commons/io/IOUtils/closeQuietly(java.io.InputStream)
org/apache/fop/fonts/FontCache/getLastModified(java.net.URI)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/fonts/FontCache/getLastModified(java.net.URI)#java/net/URI/toURL()
org/apache/fop/fonts/FontCache/getLastModified(java.net.URI)#java/io/IOException/getMessage()
org/apache/fop/fonts/FontCache/getLastModified(java.net.URI)#java/net/URLConnection/getLastModified()
org/apache/fop/fonts/FontCache/getLastModified(java.net.URI)#java/net/URLConnection/getInputStream()
org/apache/fop/fonts/FontCache/getLastModified(java.net.URI)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/fonts/FontCache/getLastModified(java.net.URI)#java/lang/StringBuilder/toString()
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfAttributes/setXslAttributes(org.xml.sax.Attributes)#org/xml/sax/Attributes/getIndex(java.lang.String)
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfAttributes/setXslAttributes(org.xml.sax.Attributes)#org/xml/sax/helpers/AttributesImpl/AttributesImpl(org.xml.sax.Attributes)
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfAttributes/setXslAttributes(org.xml.sax.Attributes)#org/xml/sax/Attributes/getQName(int)
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfAttributes/setXslAttributes(org.xml.sax.Attributes)#org/xml/sax/Attributes/getLength()
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfAttributes/setXslAttributes(org.xml.sax.Attributes)#org/xml/sax/Attributes/getLocalName(int)
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfAttributes/setXslAttributes(org.xml.sax.Attributes)#org/xml/sax/Attributes/getValue(int)
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfAttributes/setXslAttributes(org.xml.sax.Attributes)#org/xml/sax/Attributes/getURI(int)
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfAttributes/setXslAttributes(org.xml.sax.Attributes)#org/xml/sax/helpers/AttributesImpl/addAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfAttributes/setXslAttributes(org.xml.sax.Attributes)#org/xml/sax/helpers/AttributesImpl/setAttribute(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfAttributes/setXslAttributes(org.xml.sax.Attributes)#org/xml/sax/Attributes/getType(int)
org/apache/fop/layoutmgr/table/ActiveCell/handleExplicitHeight(org.apache.fop.traits.MinOptMax,org.apache.fop.traits.MinOptMax)#org/apache/fop/layoutmgr/KnuthElement/isBox()
org/apache/fop/layoutmgr/table/ActiveCell/handleExplicitHeight(org.apache.fop.traits.MinOptMax,org.apache.fop.traits.MinOptMax)#java/util/ListIterator/set(java.lang.Object)
org/apache/fop/layoutmgr/table/ActiveCell/handleExplicitHeight(org.apache.fop.traits.MinOptMax,org.apache.fop.traits.MinOptMax)#org/apache/fop/layoutmgr/table/ActiveCell$FillerPenalty/FillerPenalty(org.apache.fop.layoutmgr.KnuthPenalty,int)
org/apache/fop/layoutmgr/table/ActiveCell/handleExplicitHeight(org.apache.fop.traits.MinOptMax,org.apache.fop.traits.MinOptMax)#java/lang/Math/max(int,int)
org/apache/fop/layoutmgr/table/ActiveCell/handleExplicitHeight(org.apache.fop.traits.MinOptMax,org.apache.fop.traits.MinOptMax)#java/util/ListIterator/next()
org/apache/fop/layoutmgr/table/ActiveCell/handleExplicitHeight(org.apache.fop.traits.MinOptMax,org.apache.fop.traits.MinOptMax)#org/apache/fop/layoutmgr/KnuthElement/isGlue()
org/apache/fop/layoutmgr/table/ActiveCell/handleExplicitHeight(org.apache.fop.traits.MinOptMax,org.apache.fop.traits.MinOptMax)#java/util/ListIterator/nextIndex()
org/apache/fop/layoutmgr/table/ActiveCell/handleExplicitHeight(org.apache.fop.traits.MinOptMax,org.apache.fop.traits.MinOptMax)#java/util/List/listIterator()
org/apache/fop/layoutmgr/table/ActiveCell/handleExplicitHeight(org.apache.fop.traits.MinOptMax,org.apache.fop.traits.MinOptMax)#java/util/List/add(int,java.lang.Object)
org/apache/fop/layoutmgr/table/ActiveCell/handleExplicitHeight(org.apache.fop.traits.MinOptMax,org.apache.fop.traits.MinOptMax)#org/apache/fop/layoutmgr/table/ActiveCell$FillerPenalty/FillerPenalty(int)
org/apache/fop/layoutmgr/table/ActiveCell/handleExplicitHeight(org.apache.fop.traits.MinOptMax,org.apache.fop.traits.MinOptMax)#java/util/ListIterator/hasNext()
org/apache/fop/layoutmgr/table/ActiveCell/handleExplicitHeight(org.apache.fop.traits.MinOptMax,org.apache.fop.traits.MinOptMax)#java/util/List/add(java.lang.Object)
org/apache/fop/layoutmgr/table/ActiveCell/handleExplicitHeight(org.apache.fop.traits.MinOptMax,org.apache.fop.traits.MinOptMax)#org/apache/fop/layoutmgr/table/ActiveCell$FillerBox/FillerBox(int)
org/apache/fop/layoutmgr/table/ActiveCell/getLastStep()#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/fop/layoutmgr/table/ActiveCell/getLastStep()#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/layoutmgr/table/ActiveCell/getLastStep()#org/apache/fop/layoutmgr/table/ActiveCell$Step/access$100(org.apache.fop.layoutmgr.table.ActiveCell$Step)
org/apache/fop/layoutmgr/table/ActiveCell/getLastStep()#java/util/List/size()
org/apache/fop/layoutmgr/table/ActiveCell/getLastStep()#org/apache/fop/layoutmgr/table/ActiveCell$Step/access$700(org.apache.fop.layoutmgr.table.ActiveCell$Step)
org/apache/fop/layoutmgr/table/ActiveCell/getLastStep()#java/lang/StringBuilder/StringBuilder()
org/apache/fop/layoutmgr/table/ActiveCell/getLastStep()#java/lang/StringBuilder/append(java.lang.Object)
org/apache/fop/layoutmgr/table/ActiveCell/getLastStep()#java/lang/AssertionError/AssertionError()
org/apache/fop/layoutmgr/table/ActiveCell/getLastStep()#java/lang/StringBuilder/toString()
org/apache/fop/layoutmgr/table/ActiveCell/getLastStep()#java/lang/StringBuilder/append(int)
org/apache/fop/layoutmgr/table/ActiveCell/getLastStep()#org/apache/fop/layoutmgr/table/ActiveCell$Step/access$200(org.apache.fop.layoutmgr.table.ActiveCell$Step)
org/apache/fop/layoutmgr/table/ActiveCell/gotoNextLegalBreak()#org/apache/fop/layoutmgr/KnuthElement/isPenalty()
org/apache/fop/layoutmgr/table/ActiveCell/gotoNextLegalBreak()#org/apache/fop/layoutmgr/table/ActiveCell$Step/access$102(org.apache.fop.layoutmgr.table.ActiveCell$Step,int)
org/apache/fop/layoutmgr/table/ActiveCell/gotoNextLegalBreak()#org/apache/fop/layoutmgr/table/ActiveCell$Step/access$202(org.apache.fop.layoutmgr.table.ActiveCell$Step,int)
org/apache/fop/layoutmgr/table/ActiveCell/gotoNextLegalBreak()#org/apache/fop/layoutmgr/table/ActiveCell$Step/access$712(org.apache.fop.layoutmgr.table.ActiveCell$Step,int)
org/apache/fop/layoutmgr/table/ActiveCell/gotoNextLegalBreak()#org/apache/fop/layoutmgr/table/ActiveCell$Step/access$600(org.apache.fop.layoutmgr.table.ActiveCell$Step)
org/apache/fop/layoutmgr/table/ActiveCell/gotoNextLegalBreak()#org/apache/fop/layoutmgr/KnuthElement/isGlue()
org/apache/fop/layoutmgr/table/ActiveCell/gotoNextLegalBreak()#org/apache/fop/layoutmgr/KnuthPenalty/getWidth()
org/apache/fop/layoutmgr/table/ActiveCell/gotoNextLegalBreak()#java/util/ListIterator/hasNext()
org/apache/fop/layoutmgr/table/ActiveCell/gotoNextLegalBreak()#org/apache/fop/layoutmgr/table/ActiveCell$Step/access$412(org.apache.fop.layoutmgr.table.ActiveCell$Step,int)
org/apache/fop/layoutmgr/table/ActiveCell/gotoNextLegalBreak()#org/apache/fop/layoutmgr/table/ActiveCell$Step/access$302(org.apache.fop.layoutmgr.table.ActiveCell$Step,int)
org/apache/fop/layoutmgr/table/ActiveCell/gotoNextLegalBreak()#org/apache/fop/layoutmgr/table/ActiveCell$Step/access$200(org.apache.fop.layoutmgr.table.ActiveCell$Step)
org/apache/fop/layoutmgr/table/ActiveCell/gotoNextLegalBreak()#org/apache/fop/layoutmgr/table/ActiveCell$Step/access$402(org.apache.fop.layoutmgr.table.ActiveCell$Step,int)
org/apache/fop/layoutmgr/table/ActiveCell/gotoNextLegalBreak()#org/apache/fop/layoutmgr/table/ActiveCell$Step/access$502(org.apache.fop.layoutmgr.table.ActiveCell$Step,int)
org/apache/fop/layoutmgr/table/ActiveCell/gotoNextLegalBreak()#org/apache/fop/layoutmgr/table/ActiveCell$Step/access$602(org.apache.fop.layoutmgr.table.ActiveCell$Step,java.util.List)
org/apache/fop/layoutmgr/table/ActiveCell/gotoNextLegalBreak()#org/apache/fop/layoutmgr/table/ActiveCell$Step/access$802(org.apache.fop.layoutmgr.table.ActiveCell$Step,int)
org/apache/fop/layoutmgr/table/ActiveCell/gotoNextLegalBreak()#org/apache/fop/layoutmgr/table/ActiveCell$Step/access$700(org.apache.fop.layoutmgr.table.ActiveCell$Step)
org/apache/fop/layoutmgr/table/ActiveCell/gotoNextLegalBreak()#java/util/List/addAll(java.util.Collection)
org/apache/fop/layoutmgr/table/ActiveCell/gotoNextLegalBreak()#java/util/ListIterator/next()
org/apache/fop/layoutmgr/table/ActiveCell/gotoNextLegalBreak()#java/util/LinkedList/LinkedList()
org/apache/fop/layoutmgr/table/ActiveCell/gotoNextLegalBreak()#java/util/List/clear()
org/apache/fop/layoutmgr/table/ActiveCell/gotoNextLegalBreak()#java/util/ListIterator/nextIndex()
org/apache/fop/pdf/PDFLinearization/assignNumbers()#java/util/Iterator/hasNext()
org/apache/fop/pdf/PDFLinearization/assignNumbers()#org/apache/fop/pdf/PDFLinearization$LinearPDFDictionary/LinearPDFDictionary(org.apache.fop.pdf.PDFDocument)
org/apache/fop/pdf/PDFLinearization/assignNumbers()#java/util/List/size()
org/apache/fop/pdf/PDFLinearization/assignNumbers()#java/util/Iterator/next()
org/apache/fop/pdf/PDFLinearization/assignNumbers()#java/util/Set/contains(java.lang.Object)
org/apache/fop/pdf/PDFLinearization/assignNumbers()#java/util/Set/iterator()
org/apache/fop/pdf/PDFLinearization/assignNumbers()#java/util/List/get(int)
org/apache/fop/pdf/PDFLinearization/assignNumbers()#java/util/List/iterator()
org/apache/fop/pdf/PDFLinearization/assignNumbers()#java/util/List/isEmpty()
org/apache/fop/pdf/PDFLinearization/assignNumbers()#java/util/Map/get(java.lang.Object)
org/apache/fop/pdf/PDFLinearization/outputPages(java.io.OutputStream)#java/util/Iterator/hasNext()
org/apache/fop/pdf/PDFLinearization/outputPages(java.io.OutputStream)#java/util/Set/size()
org/apache/fop/pdf/PDFLinearization/outputPages(java.io.OutputStream)#org/apache/commons/io/output/CountingOutputStream/CountingOutputStream(java.io.OutputStream)
org/apache/fop/pdf/PDFLinearization/outputPages(java.io.OutputStream)#org/apache/fop/pdf/PDFLinearization$2/2(org.apache.fop.pdf.PDFLinearization)
org/apache/fop/pdf/PDFLinearization/outputPages(java.io.OutputStream)#java/io/ByteArrayOutputStream/size()
org/apache/fop/pdf/PDFLinearization/outputPages(java.io.OutputStream)#java/util/Set/iterator()
org/apache/fop/pdf/PDFLinearization/outputPages(java.io.OutputStream)#java/util/List/add(java.lang.Object)
org/apache/fop/pdf/PDFLinearization/outputPages(java.io.OutputStream)#java/io/ByteArrayOutputStream/ByteArrayOutputStream()
org/apache/fop/pdf/PDFLinearization/outputPages(java.io.OutputStream)#java/io/OutputStream/write(byte[])
org/apache/fop/pdf/PDFLinearization/outputPages(java.io.OutputStream)#java/util/List/remove(java.lang.Object)
org/apache/fop/pdf/PDFLinearization/outputPages(java.io.OutputStream)#java/lang/Long/valueOf(long)
org/apache/fop/pdf/PDFLinearization/outputPages(java.io.OutputStream)#org/apache/commons/io/output/CountingOutputStream/getCount()
org/apache/fop/pdf/PDFLinearization/outputPages(java.io.OutputStream)#java/util/List/size()
org/apache/fop/pdf/PDFLinearization/outputPages(java.io.OutputStream)#java/util/List/addAll(java.util.Collection)
org/apache/fop/pdf/PDFLinearization/outputPages(java.io.OutputStream)#java/util/Iterator/next()
org/apache/fop/pdf/PDFLinearization/outputPages(java.io.OutputStream)#java/util/Collections/sort(java.util.List,java.util.Comparator)
org/apache/fop/pdf/PDFLinearization/outputPages(java.io.OutputStream)#java/io/ByteArrayOutputStream/toByteArray()
org/apache/fop/pdf/PDFLinearization/writePage1(java.util.Set,java.io.OutputStream)#java/lang/Integer/intValue()
org/apache/fop/pdf/PDFLinearization/writePage1(java.util.Set,java.io.OutputStream)#java/util/Iterator/hasNext()
org/apache/fop/pdf/PDFLinearization/writePage1(java.util.Set,java.io.OutputStream)#java/util/Set/contains(java.lang.Object)
org/apache/fop/pdf/PDFLinearization/writePage1(java.util.Set,java.io.OutputStream)#java/util/Set/iterator()
org/apache/fop/pdf/PDFLinearization/writePage1(java.util.Set,java.io.OutputStream)#java/util/List/set(int,java.lang.Object)
org/apache/fop/pdf/PDFLinearization/writePage1(java.util.Set,java.io.OutputStream)#java/io/ByteArrayOutputStream/ByteArrayOutputStream()
org/apache/fop/pdf/PDFLinearization/writePage1(java.util.Set,java.io.OutputStream)#java/util/Iterator/next()
org/apache/fop/pdf/PDFLinearization/writePage1(java.util.Set,java.io.OutputStream)#java/lang/Double/doubleValue()
org/apache/fop/pdf/PDFLinearization/writePage1(java.util.Set,java.io.OutputStream)#java/lang/Integer/valueOf(int)
org/apache/fop/pdf/PDFLinearization/writePage1(java.util.Set,java.io.OutputStream)#java/util/List/get(int)
org/apache/fop/pdf/PDFLinearization/getPage1Children()#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/fop/pdf/PDFLinearization/getPage1Children()#java/util/LinkedHashSet/LinkedHashSet()
org/apache/fop/pdf/PDFLinearization/getPage1Children()#java/util/List/isEmpty()
org/apache/fop/pdf/PDFLinearization/getPage1Children()#java/util/List/size()
org/apache/fop/pdf/PDFLinearization/getPage1Children()#java/util/List/get(int)
org/apache/fop/pdf/PDFLinearization/getPage1Children()#java/util/List/add(int,java.lang.Object)
org/apache/fop/pdf/PDFLinearization/getPage1Children()#java/util/Set/add(java.lang.Object)
org/apache/fop/pdf/PDFLinearization/getPage1Children()#org/apache/fop/pdf/PDFLinearization$HintTable/HintTable(org.apache.fop.pdf.PDFDocument)
org/apache/fop/pdf/PDFLinearization/getPage1Children()#java/util/List/remove(java.lang.Object)
org/apache/fop/pdf/PDFLinearization/getPage1Children()#org/apache/fop/pdf/PDFPage/getChildren(java.util.Set)
org/apache/fop/fonts/SingleByteFont/findAlternative(char)#org/apache/xmlgraphics/fonts/Glyphs/getUnicodeSequenceForGlyphName(java.lang.String)
org/apache/fop/fonts/SingleByteFont/findAlternative(char)#java/util/HashMap/HashMap()
org/apache/fop/fonts/SingleByteFont/findAlternative(char)#org/apache/xmlgraphics/fonts/Glyphs/charToGlyphName(char)
org/apache/fop/fonts/SingleByteFont/findAlternative(char)#java/lang/StringBuilder/append(char)
org/apache/fop/fonts/SingleByteFont/findAlternative(char)#java/lang/Character/charValue()
org/apache/fop/fonts/SingleByteFont/findAlternative(char)#java/lang/StringBuilder/toString()
org/apache/fop/fonts/SingleByteFont/findAlternative(char)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/fop/fonts/SingleByteFont/findAlternative(char)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/fop/fonts/SingleByteFont/findAlternative(char)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/fonts/SingleByteFont/findAlternative(char)#java/lang/String/charAt(int)
org/apache/fop/fonts/SingleByteFont/findAlternative(char)#org/apache/commons/logging/Log/isDebugEnabled()
org/apache/fop/fonts/SingleByteFont/findAlternative(char)#java/util/Map/get(java.lang.Object)
org/apache/fop/fonts/SingleByteFont/findAlternative(char)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/fonts/SingleByteFont/findAlternative(char)#java/lang/Character/valueOf(char)
org/apache/fop/fonts/SingleByteFont/findAlternative(char)#org/apache/xmlgraphics/fonts/Glyphs/getCharNameAlternativesFor(java.lang.String)
org/apache/fop/fonts/SingleByteFont/mapUnencodedChar(char)#org/apache/fop/fonts/SingleByteFont/getFontName()
org/apache/fop/fonts/SingleByteFont/mapUnencodedChar(char)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/fonts/SingleByteFont/mapUnencodedChar(char)#java/lang/StringBuilder/append(int)
org/apache/fop/fonts/SingleByteFont/mapUnencodedChar(char)#java/util/Map/get(java.lang.Object)
org/apache/fop/fonts/SingleByteFont/mapUnencodedChar(char)#java/util/List/add(java.lang.Object)
org/apache/fop/fonts/SingleByteFont/mapUnencodedChar(char)#java/lang/StringBuilder/toString()
org/apache/fop/fonts/SingleByteFont/mapUnencodedChar(char)#java/util/ArrayList/ArrayList()
org/apache/fop/fonts/SingleByteFont/mapUnencodedChar(char)#java/util/List/size()
org/apache/fop/fonts/SingleByteFont/mapUnencodedChar(char)#org/apache/fop/fonts/SingleByteFont$UnencodedCharacter/getCharacter()
org/apache/fop/fonts/SingleByteFont/mapUnencodedChar(char)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/fonts/SingleByteFont/mapUnencodedChar(char)#java/lang/Character/valueOf(char)
org/apache/fop/fo/FOPropertyMapping/createAreaDimensionProperties()#org/apache/fop/fo/properties/EnumProperty$Maker/Maker(int)
org/apache/fop/fo/FOPropertyMapping/createAreaDimensionProperties()#org/apache/fop/fo/properties/DimensionPropertyMaker/setRelative(boolean)
org/apache/fop/fo/FOPropertyMapping/createAreaDimensionProperties()#org/apache/fop/fo/properties/LengthProperty$Maker/setPercentBase(int)
org/apache/fop/fo/FOPropertyMapping/createAreaDimensionProperties()#org/apache/fop/fo/properties/DimensionPropertyMaker/setCorresponding(int,int,int,int)
org/apache/fop/fo/FOPropertyMapping/createAreaDimensionProperties()#org/apache/fop/fo/properties/LengthProperty$Maker/setByShorthand(boolean)
org/apache/fop/fo/FOPropertyMapping/createAreaDimensionProperties()#org/apache/fop/fo/properties/LengthRangeProperty$Maker/Maker(int)
org/apache/fop/fo/FOPropertyMapping/createAreaDimensionProperties()#org/apache/fop/fo/properties/LengthProperty$Maker/addEnum(java.lang.String,org.apache.fop.fo.properties.Property)
org/apache/fop/fo/FOPropertyMapping/createAreaDimensionProperties()#org/apache/fop/fo/properties/LengthProperty$Maker/Maker(int)
org/apache/fop/fo/FOPropertyMapping/createAreaDimensionProperties()#org/apache/fop/fo/properties/LengthProperty$Maker/setInherited(boolean)
org/apache/fop/fo/FOPropertyMapping/createAreaDimensionProperties()#org/apache/fop/fo/properties/LengthProperty$Maker/setDefault(java.lang.String)
org/apache/fop/fo/FOPropertyMapping/createShorthandProperties()#org/apache/fop/fo/properties/EnumProperty$Maker/Maker(int)
org/apache/fop/fo/FOPropertyMapping/createShorthandProperties()#org/apache/fop/fo/properties/ListProperty$Maker/Maker(int)
org/apache/fop/fo/FOPropertyMapping/createShorthandProperties()#org/apache/fop/fo/properties/BackgroundPositionShorthand$Parser/Parser()
org/apache/fop/fo/FOPropertyMapping/createShorthandProperties()#org/apache/fop/fo/properties/BackgroundPositionShorthand$Maker/Maker(int)
org/apache/fop/fo/FOPropertyMapping/createShorthandProperties()#org/apache/fop/fo/properties/FontShorthandProperty$Maker/Maker(int)
org/apache/fop/fo/FOPropertyMapping/createShorthandProperties()#org/apache/fop/fo/properties/LengthProperty$Maker/Maker(int)
org/apache/fop/fo/FOPropertyMapping/createShorthandProperties()#org/apache/fop/fo/properties/URIProperty$Maker/Maker(int)
org/apache/fop/fo/FOPropertyMapping/createShorthandProperties()#org/apache/fop/fo/properties/ToBeImplementedProperty$Maker/Maker(int)
org/apache/fop/fo/FOPropertyMapping/createShorthandProperties()#org/apache/fop/fo/properties/StringProperty$Maker/Maker(int)
org/apache/fop/render/pdf/ImageRawPNGAdapter/outputContents(java.io.OutputStream)#org/apache/commons/io/IOUtils/closeQuietly(java.io.InputStream)
org/apache/fop/render/pdf/ImageRawPNGAdapter/outputContents(java.io.OutputStream)#org/apache/xmlgraphics/image/loader/ImageSize/getWidthPx()
org/apache/fop/render/pdf/ImageRawPNGAdapter/outputContents(java.io.OutputStream)#java/util/zip/DeflaterOutputStream/DeflaterOutputStream(java.io.OutputStream,java.util.zip.Deflater)
org/apache/fop/render/pdf/ImageRawPNGAdapter/outputContents(java.io.OutputStream)#java/util/zip/DeflaterOutputStream/write(byte[],int,int)
org/apache/fop/render/pdf/ImageRawPNGAdapter/outputContents(java.io.OutputStream)#org/apache/xmlgraphics/image/loader/impl/ImageRawStream/createInputStream()
org/apache/fop/render/pdf/ImageRawPNGAdapter/outputContents(java.io.OutputStream)#java/io/DataInputStream/readFully(byte[],int,int)
org/apache/fop/render/pdf/ImageRawPNGAdapter/outputContents(java.io.OutputStream)#org/apache/commons/io/IOUtils/closeQuietly(java.io.OutputStream)
org/apache/fop/render/pdf/ImageRawPNGAdapter/outputContents(java.io.OutputStream)#java/util/zip/DeflaterOutputStream/write(int)
org/apache/fop/render/pdf/ImageRawPNGAdapter/outputContents(java.io.OutputStream)#org/apache/xmlgraphics/image/loader/Image/getSize()
org/apache/fop/render/pdf/ImageRawPNGAdapter/outputContents(java.io.OutputStream)#java/io/DataInputStream/read()
org/apache/fop/render/pdf/ImageRawPNGAdapter/outputContents(java.io.OutputStream)#java/util/zip/Inflater/Inflater()
org/apache/fop/render/pdf/ImageRawPNGAdapter/outputContents(java.io.OutputStream)#org/apache/commons/io/IOUtils/copy(java.io.InputStream,java.io.OutputStream)
org/apache/fop/render/pdf/ImageRawPNGAdapter/outputContents(java.io.OutputStream)#java/util/zip/Deflater/Deflater()
org/apache/fop/render/pdf/ImageRawPNGAdapter/outputContents(java.io.OutputStream)#java/io/DataInputStream/DataInputStream(java.io.InputStream)
org/apache/fop/render/pdf/ImageRawPNGAdapter/outputContents(java.io.OutputStream)#java/util/zip/InflaterInputStream/InflaterInputStream(java.io.InputStream,java.util.zip.Inflater)
org/apache/fop/render/pdf/ImageRawPNGAdapter/setup(org.apache.fop.pdf.PDFDocument)#org/apache/fop/pdf/FlateFilter/setApplied(boolean)
org/apache/fop/render/pdf/ImageRawPNGAdapter/setup(org.apache.fop.pdf.PDFDocument)#org/apache/commons/io/IOUtils/closeQuietly(java.io.InputStream)
org/apache/fop/render/pdf/ImageRawPNGAdapter/setup(org.apache.fop.pdf.PDFDocument)#org/apache/fop/render/pdf/ImageRawPNGAdapter/disallowMultipleFilters()
org/apache/fop/render/pdf/ImageRawPNGAdapter/setup(org.apache.fop.pdf.PDFDocument)#org/apache/xmlgraphics/image/loader/Image/getInfo()
org/apache/fop/render/pdf/ImageRawPNGAdapter/setup(org.apache.fop.pdf.PDFDocument)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/render/pdf/ImageRawPNGAdapter/setup(org.apache.fop.pdf.PDFDocument)#java/util/zip/DeflaterOutputStream/DeflaterOutputStream(java.io.OutputStream,java.util.zip.Deflater)
org/apache/fop/render/pdf/ImageRawPNGAdapter/setup(org.apache.fop.pdf.PDFDocument)#java/util/zip/DeflaterOutputStream/write(byte[],int,int)
org/apache/fop/render/pdf/ImageRawPNGAdapter/setup(org.apache.fop.pdf.PDFDocument)#java/awt/image/ColorModel/getTransparency()
org/apache/fop/render/pdf/ImageRawPNGAdapter/setup(org.apache.fop.pdf.PDFDocument)#org/apache/commons/io/IOUtils/closeQuietly(java.io.OutputStream)
org/apache/fop/render/pdf/ImageRawPNGAdapter/setup(org.apache.fop.pdf.PDFDocument)#java/util/zip/Inflater/Inflater()
org/apache/fop/render/pdf/ImageRawPNGAdapter/setup(org.apache.fop.pdf.PDFDocument)#java/util/zip/Deflater/Deflater()
org/apache/fop/render/pdf/ImageRawPNGAdapter/setup(org.apache.fop.pdf.PDFDocument)#org/apache/xmlgraphics/image/loader/ImageSize/getHeightPx()
org/apache/fop/render/pdf/ImageRawPNGAdapter/setup(org.apache.fop.pdf.PDFDocument)#org/apache/fop/render/pdf/ImageRawPNGAdapter/getKey()
org/apache/fop/render/pdf/ImageRawPNGAdapter/setup(org.apache.fop.pdf.PDFDocument)#org/apache/xmlgraphics/image/loader/ImageSize/getWidthPx()
org/apache/fop/render/pdf/ImageRawPNGAdapter/setup(org.apache.fop.pdf.PDFDocument)#org/apache/xmlgraphics/image/loader/ImageInfo/getOriginalURI()
org/apache/fop/render/pdf/ImageRawPNGAdapter/setup(org.apache.fop.pdf.PDFDocument)#java/io/DataInputStream/DataInputStream(java.io.InputStream)
org/apache/fop/render/pdf/ImageRawPNGAdapter/setup(org.apache.fop.pdf.PDFDocument)#java/util/zip/InflaterInputStream/InflaterInputStream(java.io.InputStream,java.util.zip.Inflater)
org/apache/fop/render/pdf/ImageRawPNGAdapter/setup(org.apache.fop.pdf.PDFDocument)#org/apache/commons/io/output/ByteArrayOutputStream/toByteArray()
org/apache/fop/render/pdf/ImageRawPNGAdapter/setup(org.apache.fop.pdf.PDFDocument)#org/apache/xmlgraphics/image/loader/impl/ImageRawStream/createInputStream()
org/apache/fop/render/pdf/ImageRawPNGAdapter/setup(org.apache.fop.pdf.PDFDocument)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/render/pdf/ImageRawPNGAdapter/setup(org.apache.fop.pdf.PDFDocument)#org/apache/commons/io/output/ByteArrayOutputStream/ByteArrayOutputStream()
org/apache/fop/render/pdf/ImageRawPNGAdapter/setup(org.apache.fop.pdf.PDFDocument)#java/awt/image/ColorModel/hasAlpha()
org/apache/fop/render/pdf/ImageRawPNGAdapter/setup(org.apache.fop.pdf.PDFDocument)#java/io/DataInputStream/readFully(byte[],int,int)
org/apache/fop/render/pdf/ImageRawPNGAdapter/setup(org.apache.fop.pdf.PDFDocument)#java/awt/image/ColorModel/getNumComponents()
org/apache/fop/render/pdf/ImageRawPNGAdapter/setup(org.apache.fop.pdf.PDFDocument)#java/util/zip/DeflaterOutputStream/write(int)
org/apache/fop/render/pdf/ImageRawPNGAdapter/setup(org.apache.fop.pdf.PDFDocument)#org/apache/xmlgraphics/image/loader/impl/ImageRawPNG/getColorModel()
org/apache/fop/render/pdf/ImageRawPNGAdapter/setup(org.apache.fop.pdf.PDFDocument)#java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)
org/apache/fop/render/pdf/ImageRawPNGAdapter/setup(org.apache.fop.pdf.PDFDocument)#org/apache/xmlgraphics/image/loader/Image/getSize()
org/apache/fop/render/pdf/ImageRawPNGAdapter/setup(org.apache.fop.pdf.PDFDocument)#java/io/DataInputStream/read()
org/apache/fop/render/pdf/ImageRawPNGAdapter/setup(org.apache.fop.pdf.PDFDocument)#org/apache/fop/pdf/PDFImageXObject/makeReference()
org/apache/fop/render/pdf/ImageRawPNGAdapter/setup(org.apache.fop.pdf.PDFDocument)#java/lang/StringBuilder/toString()
org/apache/fop/render/afp/AFPImageHandlerRenderedImage/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/fop/render/afp/AFPImageHandlerRenderedImage$RenderedImageEncoder/access$100(org.apache.fop.render.afp.AFPImageHandlerRenderedImage$RenderedImageEncoder,org.apache.fop.afp.AFPImageObjectInfo,org.apache.fop.afp.AFPPaintingState)
org/apache/fop/render/afp/AFPImageHandlerRenderedImage/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/xmlgraphics/image/loader/Image/getInfo()
org/apache/fop/render/afp/AFPImageHandlerRenderedImage/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/render/afp/AFPImageHandlerRenderedImage/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/xmlgraphics/image/loader/ImageInfo/getOriginalURI()
org/apache/fop/render/afp/AFPImageHandlerRenderedImage/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/fop/render/afp/AFPImageHandlerRenderedImage/createObjectAreaInfo(org.apache.fop.afp.AFPPaintingState,java.awt.Rectangle)
org/apache/fop/render/afp/AFPImageHandlerRenderedImage/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/lang/System/currentTimeMillis()
org/apache/fop/render/afp/AFPImageHandlerRenderedImage/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/lang/AssertionError/AssertionError()
org/apache/fop/render/afp/AFPImageHandlerRenderedImage/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/lang/StringBuilder/toString()
org/apache/fop/render/afp/AFPImageHandlerRenderedImage/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/fop/render/afp/AFPImageHandlerRenderedImage/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/fop/render/afp/AFPImageHandlerRenderedImage$RenderedImageEncoder/RenderedImageEncoder(org.apache.xmlgraphics.image.loader.impl.ImageRendered,java.awt.Dimension,org.apache.fop.render.afp.AFPImageHandlerRenderedImage$1)
org/apache/fop/render/afp/AFPImageHandlerRenderedImage/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/fop/afp/AFPImageObjectInfo/setObjectAreaInfo(org.apache.fop.afp.AFPObjectAreaInfo)
org/apache/fop/render/afp/AFPImageHandlerRenderedImage/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/fop/render/afp/AFPImageHandlerRenderedImage/createResourceInformation(java.lang.String,java.util.Map)
org/apache/fop/render/afp/AFPImageHandlerRenderedImage/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/fop/render/afp/AFPImageHandlerRenderedImage$RenderedImageEncoder/access$200(org.apache.fop.render.afp.AFPImageHandlerRenderedImage$RenderedImageEncoder,org.apache.fop.afp.AFPImageObjectInfo,org.apache.fop.afp.AFPPaintingState)
org/apache/fop/render/afp/AFPImageHandlerRenderedImage/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/fop/afp/AFPImageObjectInfo/setResourceInfo(org.apache.fop.afp.AFPResourceInfo)
org/apache/fop/render/afp/AFPImageHandlerRenderedImage/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/commons/logging/Log/isDebugEnabled()
org/apache/fop/render/afp/AFPImageHandlerRenderedImage/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/lang/StringBuilder/append(long)
org/apache/fop/render/afp/AFPImageHandlerRenderedImage/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/awt/Rectangle/getSize()
org/apache/fop/render/afp/AFPImageHandlerRenderedImage/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/render/pcl/PCLGenerator/paintMonochromeBitmap(java.awt.image.RenderedImage,int)#java/awt/image/RenderedImage/getSampleModel()
org/apache/fop/render/pcl/PCLGenerator/paintMonochromeBitmap(java.awt.image.RenderedImage,int)#java/awt/image/DataBufferByte/getData()
org/apache/fop/render/pcl/PCLGenerator/paintMonochromeBitmap(java.awt.image.RenderedImage,int)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/render/pcl/PCLGenerator/paintMonochromeBitmap(java.awt.image.RenderedImage,int)#java/awt/image/Raster/getSample(int,int,int)
org/apache/fop/render/pcl/PCLGenerator/paintMonochromeBitmap(java.awt.image.RenderedImage,int)#java/awt/image/DataBufferByte/getNumBanks()
org/apache/fop/render/pcl/PCLGenerator/paintMonochromeBitmap(java.awt.image.RenderedImage,int)#java/lang/Object/equals(java.lang.Object)
org/apache/fop/render/pcl/PCLGenerator/paintMonochromeBitmap(java.awt.image.RenderedImage,int)#java/awt/image/RenderedImage/getWidth()
org/apache/fop/render/pcl/PCLGenerator/paintMonochromeBitmap(java.awt.image.RenderedImage,int)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/render/pcl/PCLGenerator/paintMonochromeBitmap(java.awt.image.RenderedImage,int)#java/awt/image/MultiPixelPackedSampleModel/MultiPixelPackedSampleModel(int,int,int,int)
org/apache/fop/render/pcl/PCLGenerator/paintMonochromeBitmap(java.awt.image.RenderedImage,int)#org/apache/fop/render/pcl/PCLGenerator$Encoder/addBit(boolean)
org/apache/fop/render/pcl/PCLGenerator/paintMonochromeBitmap(java.awt.image.RenderedImage,int)#org/apache/fop/render/pcl/PCLGenerator$Encoder/Encoder(org.apache.fop.render.pcl.PCLGenerator,java.awt.image.RenderedImage)
org/apache/fop/render/pcl/PCLGenerator/paintMonochromeBitmap(java.awt.image.RenderedImage,int)#java/lang/StringBuilder/append(int)
org/apache/fop/render/pcl/PCLGenerator/paintMonochromeBitmap(java.awt.image.RenderedImage,int)#java/awt/image/IndexColorModel/getTransferType()
org/apache/fop/render/pcl/PCLGenerator/paintMonochromeBitmap(java.awt.image.RenderedImage,int)#java/awt/image/Raster/getDataElements(int,int,int,int,java.lang.Object)
org/apache/fop/render/pcl/PCLGenerator/paintMonochromeBitmap(java.awt.image.RenderedImage,int)#java/awt/image/MultiPixelPackedSampleModel/getScanlineStride()
org/apache/fop/render/pcl/PCLGenerator/paintMonochromeBitmap(java.awt.image.RenderedImage,int)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/fop/render/pcl/PCLGenerator/paintMonochromeBitmap(java.awt.image.RenderedImage,int)#java/awt/image/IndexColorModel/getRGB(int)
org/apache/fop/render/pcl/PCLGenerator/paintMonochromeBitmap(java.awt.image.RenderedImage,int)#java/awt/image/RenderedImage/getColorModel()
org/apache/fop/render/pcl/PCLGenerator/paintMonochromeBitmap(java.awt.image.RenderedImage,int)#java/awt/image/RenderedImage/getHeight()
org/apache/fop/render/pcl/PCLGenerator/paintMonochromeBitmap(java.awt.image.RenderedImage,int)#java/awt/image/Raster/getDataBuffer()
org/apache/fop/render/pcl/PCLGenerator/paintMonochromeBitmap(java.awt.image.RenderedImage,int)#org/apache/fop/render/pcl/PCLGenerator$Encoder/add8Bits(byte)
org/apache/fop/render/pcl/PCLGenerator/paintMonochromeBitmap(java.awt.image.RenderedImage,int)#org/apache/fop/render/pcl/PCLGenerator$Encoder/endLine()
org/apache/fop/render/pcl/PCLGenerator/paintMonochromeBitmap(java.awt.image.RenderedImage,int)#java/lang/StringBuilder/toString()
org/apache/fop/render/pcl/PCLGenerator/paintMonochromeBitmap(java.awt.image.RenderedImage,int)#java/awt/image/RenderedImage/getData()
org/apache/fop/render/pcl/PCLGenerator/paintBitmap(java.awt.image.RenderedImage,java.awt.Dimension,boolean)#java/awt/Dimension/Dimension(int,int)
org/apache/fop/render/pcl/PCLGenerator/paintBitmap(java.awt.image.RenderedImage,java.awt.Dimension,boolean)#java/lang/Math/ceil(double)
org/apache/fop/render/pcl/PCLGenerator/paintBitmap(java.awt.image.RenderedImage,java.awt.Dimension,boolean)#java/awt/image/RenderedImage/getWidth()
org/apache/fop/render/pcl/PCLGenerator/paintBitmap(java.awt.image.RenderedImage,java.awt.Dimension,boolean)#java/lang/Math/round(double)
org/apache/fop/render/pcl/PCLGenerator/paintBitmap(java.awt.image.RenderedImage,java.awt.Dimension,boolean)#java/awt/Dimension/equals(java.lang.Object)
org/apache/fop/render/pcl/PCLGenerator/paintBitmap(java.awt.image.RenderedImage,java.awt.Dimension,boolean)#java/lang/Math/max(double,double)
org/apache/fop/render/pcl/PCLGenerator/paintBitmap(java.awt.image.RenderedImage,java.awt.Dimension,boolean)#java/awt/image/RenderedImage/getHeight()
org/apache/fop/render/pcl/PCLGenerator/paintBitmap(java.awt.image.RenderedImage,java.awt.Dimension,boolean)#org/apache/xmlgraphics/util/UnitConv/mpt2px(double,int)
org/apache/fop/render/pcl/PCLGenerator/paintBitmap(java.awt.image.RenderedImage,java.awt.Dimension,boolean)#org/apache/xmlgraphics/util/UnitConv/mpt2in(double)
org/apache/fop/render/pcl/PCLGenerator/defineGrayscalePattern(java.awt.Color,int,int)#java/awt/Color/getBlue()
org/apache/fop/render/pcl/PCLGenerator/defineGrayscalePattern(java.awt.Color,int,int)#java/awt/Color/getRed()
org/apache/fop/render/pcl/PCLGenerator/defineGrayscalePattern(java.awt.Color,int,int)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/render/pcl/PCLGenerator/defineGrayscalePattern(java.awt.Color,int,int)#java/awt/Color/getGreen()
org/apache/fop/render/pcl/PCLGenerator/defineGrayscalePattern(java.awt.Color,int,int)#org/apache/commons/io/output/ByteArrayOutputStream/writeTo(java.io.OutputStream)
org/apache/fop/render/pcl/PCLGenerator/defineGrayscalePattern(java.awt.Color,int,int)#java/io/DataOutputStream/DataOutputStream(java.io.OutputStream)
org/apache/fop/render/pcl/PCLGenerator/defineGrayscalePattern(java.awt.Color,int,int)#org/apache/commons/io/output/ByteArrayOutputStream/size()
org/apache/fop/render/pcl/PCLGenerator/defineGrayscalePattern(java.awt.Color,int,int)#org/apache/commons/io/output/ByteArrayOutputStream/write(int)
org/apache/fop/render/pcl/PCLGenerator/defineGrayscalePattern(java.awt.Color,int,int)#java/io/DataOutputStream/writeByte(int)
org/apache/fop/render/pcl/PCLGenerator/defineGrayscalePattern(java.awt.Color,int,int)#java/lang/StringBuilder/toString()
org/apache/fop/render/pcl/PCLGenerator/defineGrayscalePattern(java.awt.Color,int,int)#java/io/DataOutputStream/write(byte[])
org/apache/fop/render/pcl/PCLGenerator/defineGrayscalePattern(java.awt.Color,int,int)#java/lang/StringBuilder/append(int)
org/apache/fop/render/pcl/PCLGenerator/defineGrayscalePattern(java.awt.Color,int,int)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/render/pcl/PCLGenerator/defineGrayscalePattern(java.awt.Color,int,int)#org/apache/commons/io/output/ByteArrayOutputStream/ByteArrayOutputStream()
org/apache/fop/render/pcl/PCLGenerator/defineGrayscalePattern(java.awt.Color,int,int)#java/io/DataOutputStream/writeShort(int)
org/apache/fop/render/pcl/PCLGenerator/defineGrayscalePattern(java.awt.Color,int,int)#org/apache/commons/io/IOUtils/closeQuietly(java.io.OutputStream)
org/apache/fop/render/afp/AFPRendererConfig/ParserHelper/configureImages()#org/apache/fop/render/afp/AFPRendererConfig$ParserHelper/configureJpegImages(org.apache.avalon.framework.configuration.Configuration)
org/apache/fop/render/afp/AFPRendererConfig/ParserHelper/configureImages()#java/lang/Byte/valueOf(byte)
org/apache/fop/render/afp/AFPRendererConfig/ParserHelper/configureImages()#org/apache/fop/render/afp/AFPRendererConfig$ImagesModeOptions/forName(java.lang.String)
org/apache/fop/render/afp/AFPRendererConfig/ParserHelper/configureImages()#java/lang/Float/valueOf(float)
org/apache/fop/render/afp/AFPRendererConfig/ParserHelper/configureImages()#org/apache/avalon/framework/configuration/Configuration/getAttributeAsBoolean(java.lang.String,boolean)
org/apache/fop/render/afp/AFPRendererConfig/ParserHelper/configureImages()#java/lang/Boolean/valueOf(boolean)
org/apache/fop/render/afp/AFPRendererConfig/ParserHelper/configureImages()#org/apache/fop/render/afp/AFPRendererConfig$ImagesModeOptions/getName()
org/apache/fop/render/afp/AFPRendererConfig/ParserHelper/configureImages()#java/lang/Float/parseFloat(java.lang.String)
org/apache/fop/render/afp/AFPRendererConfig/ParserHelper/configureImages()#java/util/EnumMap/put(java.lang.Enum,java.lang.Object)
org/apache/fop/render/afp/AFPRendererConfig/ParserHelper/configureImages()#java/lang/String/equals(java.lang.Object)
org/apache/fop/render/afp/AFPRendererConfig/ParserHelper/configureImages()#org/apache/fop/render/afp/AFPRendererOption/getName()
org/apache/fop/render/afp/AFPRendererConfig/ParserHelper/configureImages()#java/lang/Integer/valueOf(int)
org/apache/fop/render/afp/AFPRendererConfig/ParserHelper/configureImages()#org/apache/avalon/framework/configuration/Configuration/getChild(java.lang.String)
org/apache/fop/render/afp/AFPRendererConfig/ParserHelper/configureImages()#java/lang/String/startsWith(java.lang.String)
org/apache/fop/render/afp/AFPRendererConfig/ParserHelper/configureImages()#org/apache/fop/render/afp/AFPRendererConfig$ParserHelper/setParam(org.apache.fop.render.afp.AFPRendererOption,java.lang.Object)
org/apache/fop/render/afp/AFPRendererConfig/ParserHelper/configureImages()#org/apache/fop/render/afp/AFPRendererConfig$ImagesModeOptions/getModeAttribute()
org/apache/fop/render/afp/AFPRendererConfig/ParserHelper/configureImages()#org/apache/avalon/framework/configuration/Configuration/getAttributeAsInteger(java.lang.String,int)
org/apache/fop/render/afp/AFPRendererConfig/ParserHelper/configureImages()#org/apache/avalon/framework/configuration/Configuration/getAttribute(java.lang.String,java.lang.String)
org/apache/fop/render/afp/AFPRendererConfig/ParserHelper/configure()#java/lang/String/equalsIgnoreCase(java.lang.String)
org/apache/fop/render/afp/AFPRendererConfig/ParserHelper/configure()#org/apache/fop/render/afp/AFPRendererConfig$ParserHelper/createResourceLevel()
org/apache/fop/render/afp/AFPRendererConfig/ParserHelper/configure()#org/apache/avalon/framework/configuration/Configuration/getValueAsInteger(int)
org/apache/fop/render/afp/AFPRendererConfig/ParserHelper/configure()#org/apache/fop/render/afp/AFPRendererConfig$ParserHelper/configureImages()
org/apache/fop/render/afp/AFPRendererConfig/ParserHelper/configure()#org/apache/fop/render/afp/AFPRendererOption/getName()
org/apache/fop/render/afp/AFPRendererConfig/ParserHelper/configure()#java/lang/Boolean/valueOf(boolean)
org/apache/fop/render/afp/AFPRendererConfig/ParserHelper/configure()#org/apache/fop/render/afp/AFPShadingMode/getValueOf(java.lang.String)
org/apache/fop/render/afp/AFPRendererConfig/ParserHelper/configure()#org/apache/avalon/framework/configuration/Configuration/getAttribute(java.lang.String,java.lang.String)
org/apache/fop/render/afp/AFPRendererConfig/ParserHelper/configure()#org/apache/fop/render/afp/AFPShadingMode/getName()
org/apache/fop/render/afp/AFPRendererConfig/ParserHelper/configure()#java/lang/Float/valueOf(float)
org/apache/fop/render/afp/AFPRendererConfig/ParserHelper/configure()#org/apache/avalon/framework/configuration/Configuration/getValue(java.lang.String)
org/apache/fop/render/afp/AFPRendererConfig/ParserHelper/configure()#org/apache/avalon/framework/configuration/Configuration/getAttributeAsBoolean(java.lang.String,boolean)
org/apache/fop/render/afp/AFPRendererConfig/ParserHelper/configure()#org/apache/avalon/framework/configuration/Configuration/getValueAsFloat()
org/apache/fop/render/afp/AFPRendererConfig/ParserHelper/configure()#java/lang/Integer/valueOf(int)
org/apache/fop/render/afp/AFPRendererConfig/ParserHelper/configure()#org/apache/avalon/framework/configuration/Configuration/getChild(java.lang.String)
org/apache/fop/render/afp/AFPRendererConfig/ParserHelper/configure()#org/apache/fop/render/afp/AFPRendererConfig$ParserHelper/setParam(org.apache.fop.render.afp.AFPRendererOption,java.lang.Object)
org/apache/fop/render/afp/AFPRendererConfig/ParserHelper/configure()#org/apache/avalon/framework/configuration/Configuration/getChild(java.lang.String,boolean)
org/apache/fop/render/afp/AFPRendererConfig/ParserHelper/configure()#org/apache/fop/render/afp/AFPRendererConfig$ParserHelper/createResourceGroupFile()
org/apache/fop/render/ps/ResourceHandler/determineInlineForms(java.util.Map)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/fop/render/ps/ResourceHandler/determineInlineForms(java.util.Map)#java/util/Iterator/hasNext()
org/apache/fop/render/ps/ResourceHandler/determineInlineForms(java.util.Map)#java/util/Map$Entry/getKey()
org/apache/fop/render/ps/ResourceHandler/determineInlineForms(java.util.Map)#org/apache/xmlgraphics/ps/dsc/ResourceTracker/declareInlined(org.apache.xmlgraphics.ps.PSResource)
org/apache/fop/render/ps/ResourceHandler/determineInlineForms(java.util.Map)#java/util/Iterator/next()
org/apache/fop/render/ps/ResourceHandler/determineInlineForms(java.util.Map)#java/util/Set/iterator()
org/apache/fop/render/ps/ResourceHandler/determineInlineForms(java.util.Map)#java/util/Map$Entry/getValue()
org/apache/fop/render/ps/ResourceHandler/determineInlineForms(java.util.Map)#java/util/Map/entrySet()
org/apache/fop/render/ps/ResourceHandler/determineInlineForms(java.util.Map)#org/apache/xmlgraphics/ps/dsc/ResourceTracker/getUsageCount(org.apache.xmlgraphics.ps.PSResource)
org/apache/fop/render/ps/ResourceHandler/generateFormForImage(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.render.ps.PSImageFormResource)#org/apache/xmlgraphics/image/loader/ImageManager/getImageInfo(java.lang.String,org.apache.xmlgraphics.image.loader.ImageSessionContext)
org/apache/fop/render/ps/ResourceHandler/generateFormForImage(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.render.ps.PSImageFormResource)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/apache/fop/render/ps/ResourceHandler/generateFormForImage(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.render.ps.PSImageFormResource)#org/apache/fop/ResourceEventProducer$Provider/get(org.apache.fop.events.EventBroadcaster)
org/apache/fop/render/ps/ResourceHandler/generateFormForImage(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.render.ps.PSImageFormResource)#org/apache/xmlgraphics/image/loader/ImageManager/getImage(org.apache.xmlgraphics.image.loader.ImageInfo,org.apache.xmlgraphics.image.loader.ImageFlavor[],java.util.Map,org.apache.xmlgraphics.image.loader.ImageSessionContext)
org/apache/fop/render/ps/ResourceHandler/generateFormForImage(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.render.ps.PSImageFormResource)#java/lang/Class/getName()
org/apache/fop/render/ps/ResourceHandler/generateFormForImage(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.render.ps.PSImageFormResource)#org/apache/xmlgraphics/image/loader/util/ImageUtil/getDefaultHints(org.apache.xmlgraphics.image.loader.ImageSessionContext)
org/apache/fop/render/ps/ResourceHandler/generateFormForImage(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.render.ps.PSImageFormResource)#java/lang/StringBuilder/toString()
org/apache/fop/render/ps/ResourceHandler/generateFormForImage(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.render.ps.PSImageFormResource)#org/apache/xmlgraphics/image/loader/Image/getInfo()
org/apache/fop/render/ps/ResourceHandler/generateFormForImage(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.render.ps.PSImageFormResource)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/render/ps/ResourceHandler/generateFormForImage(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.render.ps.PSImageFormResource)#org/apache/xmlgraphics/image/loader/ImageInfo/toString()
org/apache/fop/render/ps/ResourceHandler/generateFormForImage(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.render.ps.PSImageFormResource)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/render/ps/ResourceHandler/generateFormForImage(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.render.ps.PSImageFormResource)#org/apache/commons/logging/Log/trace(java.lang.Object)
org/apache/fop/render/ps/ResourceHandler/generateFormForImage(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.render.ps.PSImageFormResource)#java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)
org/apache/fop/render/ps/ResourceHandler/generateFormForImage(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.render.ps.PSImageFormResource)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/fop/render/ps/ResourceHandler/generateFormForImage(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.render.ps.PSImageFormResource)#java/lang/Object/getClass()
org/apache/fop/render/ps/ResourceHandler/generateFormForImage(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.render.ps.PSImageFormResource)#org/apache/commons/logging/Log/isTraceEnabled()
org/apache/fop/render/ps/ResourceHandler/process(java.io.InputStream,java.io.OutputStream,int,java.awt.geom.Rectangle2D)#org/apache/xmlgraphics/ps/dsc/ResourceTracker/getDocumentNeededResources()
org/apache/fop/render/ps/ResourceHandler/process(java.io.InputStream,java.io.OutputStream,int,java.awt.geom.Rectangle2D)#org/apache/xmlgraphics/ps/dsc/events/DSCCommentDocumentSuppliedResources/DSCCommentDocumentSuppliedResources(java.util.Collection)
org/apache/fop/render/ps/ResourceHandler/process(java.io.InputStream,java.io.OutputStream,int,java.awt.geom.Rectangle2D)#org/apache/xmlgraphics/ps/dsc/DSCParser/nextPSComment(java.lang.String,org.apache.xmlgraphics.ps.PSGenerator)
org/apache/fop/render/ps/ResourceHandler/process(java.io.InputStream,java.io.OutputStream,int,java.awt.geom.Rectangle2D)#org/apache/xmlgraphics/ps/dsc/DSCParser/setCheckEOF(boolean)
org/apache/fop/render/ps/ResourceHandler/process(java.io.InputStream,java.io.OutputStream,int,java.awt.geom.Rectangle2D)#org/apache/xmlgraphics/ps/dsc/events/DSCCommentPage/generate(org.apache.xmlgraphics.ps.PSGenerator)
org/apache/fop/render/ps/ResourceHandler/process(java.io.InputStream,java.io.OutputStream,int,java.awt.geom.Rectangle2D)#org/apache/fop/render/ps/ResourceHandler$1/1(org.apache.fop.render.ps.ResourceHandler)
org/apache/fop/render/ps/ResourceHandler/process(java.io.InputStream,java.io.OutputStream,int,java.awt.geom.Rectangle2D)#org/apache/xmlgraphics/ps/dsc/events/DSCCommentPages/DSCCommentPages(int)
org/apache/fop/render/ps/ResourceHandler/process(java.io.InputStream,java.io.OutputStream,int,java.awt.geom.Rectangle2D)#org/apache/xmlgraphics/ps/dsc/events/DSCCommentDocumentNeededResources/generate(org.apache.xmlgraphics.ps.PSGenerator)
org/apache/fop/render/ps/ResourceHandler/process(java.io.InputStream,java.io.OutputStream,int,java.awt.geom.Rectangle2D)#org/apache/xmlgraphics/ps/dsc/tools/DSCTools/headerCommentsEndHere(org.apache.xmlgraphics.ps.dsc.events.DSCEvent)
org/apache/fop/render/ps/ResourceHandler/process(java.io.InputStream,java.io.OutputStream,int,java.awt.geom.Rectangle2D)#org/apache/xmlgraphics/ps/dsc/tools/DSCTools/checkAndSkipDSC30Header(org.apache.xmlgraphics.ps.dsc.DSCParser)
org/apache/fop/render/ps/ResourceHandler/process(java.io.InputStream,java.io.OutputStream,int,java.awt.geom.Rectangle2D)#org/apache/xmlgraphics/ps/dsc/events/DSCComment/generate(org.apache.xmlgraphics.ps.PSGenerator)
org/apache/fop/render/ps/ResourceHandler/process(java.io.InputStream,java.io.OutputStream,int,java.awt.geom.Rectangle2D)#org/apache/xmlgraphics/ps/dsc/tools/DSCTools/nextPageOrTrailer(org.apache.xmlgraphics.ps.dsc.DSCParser,org.apache.xmlgraphics.ps.PSGenerator)
org/apache/fop/render/ps/ResourceHandler/process(java.io.InputStream,java.io.OutputStream,int,java.awt.geom.Rectangle2D)#org/apache/xmlgraphics/ps/dsc/DSCParser/nextEvent()
org/apache/fop/render/ps/ResourceHandler/process(java.io.InputStream,java.io.OutputStream,int,java.awt.geom.Rectangle2D)#org/apache/xmlgraphics/ps/dsc/events/DSCEvent/isDSCComment()
org/apache/fop/render/ps/ResourceHandler/process(java.io.InputStream,java.io.OutputStream,int,java.awt.geom.Rectangle2D)#org/apache/xmlgraphics/ps/dsc/events/DSCCommentHiResBoundingBox/generate(org.apache.xmlgraphics.ps.PSGenerator)
org/apache/fop/render/ps/ResourceHandler/process(java.io.InputStream,java.io.OutputStream,int,java.awt.geom.Rectangle2D)#org/apache/xmlgraphics/ps/dsc/events/DSCCommentPages/generate(org.apache.xmlgraphics.ps.PSGenerator)
org/apache/fop/render/ps/ResourceHandler/process(java.io.InputStream,java.io.OutputStream,int,java.awt.geom.Rectangle2D)#org/apache/fop/render/ps/ResourceHandler$IncludeResourceListener/IncludeResourceListener(org.apache.fop.render.ps.ResourceHandler,org.apache.xmlgraphics.ps.PSGenerator)
org/apache/fop/render/ps/ResourceHandler/process(java.io.InputStream,java.io.OutputStream,int,java.awt.geom.Rectangle2D)#org/apache/xmlgraphics/ps/dsc/DSCParser/setFilter(org.apache.xmlgraphics.ps.dsc.DSCFilter)
org/apache/fop/render/ps/ResourceHandler/process(java.io.InputStream,java.io.OutputStream,int,java.awt.geom.Rectangle2D)#org/apache/xmlgraphics/ps/dsc/events/DSCCommentBoundingBox/generate(org.apache.xmlgraphics.ps.PSGenerator)
org/apache/fop/render/ps/ResourceHandler/process(java.io.InputStream,java.io.OutputStream,int,java.awt.geom.Rectangle2D)#org/apache/xmlgraphics/ps/dsc/DSCException/DSCException(java.lang.String)
org/apache/fop/render/ps/ResourceHandler/process(java.io.InputStream,java.io.OutputStream,int,java.awt.geom.Rectangle2D)#org/apache/xmlgraphics/ps/dsc/DSCParser/hasNext()
org/apache/fop/render/ps/ResourceHandler/process(java.io.InputStream,java.io.OutputStream,int,java.awt.geom.Rectangle2D)#org/apache/xmlgraphics/ps/dsc/events/DSCCommentHiResBoundingBox/DSCCommentHiResBoundingBox(java.awt.geom.Rectangle2D)
org/apache/fop/render/ps/ResourceHandler/process(java.io.InputStream,java.io.OutputStream,int,java.awt.geom.Rectangle2D)#org/apache/xmlgraphics/ps/dsc/events/DSCComment/getName()
org/apache/fop/render/ps/ResourceHandler/process(java.io.InputStream,java.io.OutputStream,int,java.awt.geom.Rectangle2D)#org/apache/xmlgraphics/ps/dsc/events/DSCCommentDocumentSuppliedResources/generate(org.apache.xmlgraphics.ps.PSGenerator)
org/apache/fop/render/ps/ResourceHandler/process(java.io.InputStream,java.io.OutputStream,int,java.awt.geom.Rectangle2D)#org/apache/xmlgraphics/ps/PSGenerator/PSGenerator(java.io.OutputStream)
org/apache/fop/render/ps/ResourceHandler/process(java.io.InputStream,java.io.OutputStream,int,java.awt.geom.Rectangle2D)#org/apache/xmlgraphics/ps/dsc/events/DSCEvent/asDSCComment()
org/apache/fop/render/ps/ResourceHandler/process(java.io.InputStream,java.io.OutputStream,int,java.awt.geom.Rectangle2D)#org/apache/xmlgraphics/ps/dsc/DSCParser/addListener(org.apache.xmlgraphics.ps.dsc.DSCListener)
org/apache/fop/render/ps/ResourceHandler/process(java.io.InputStream,java.io.OutputStream,int,java.awt.geom.Rectangle2D)#org/apache/xmlgraphics/ps/dsc/DSCParser/DSCParser(java.io.InputStream)
org/apache/fop/render/ps/ResourceHandler/process(java.io.InputStream,java.io.OutputStream,int,java.awt.geom.Rectangle2D)#org/apache/xmlgraphics/ps/dsc/events/DSCCommentBoundingBox/DSCCommentBoundingBox(java.awt.geom.Rectangle2D)
org/apache/fop/render/ps/ResourceHandler/process(java.io.InputStream,java.io.OutputStream,int,java.awt.geom.Rectangle2D)#org/apache/xmlgraphics/ps/dsc/events/DSCHeaderComment/generate(org.apache.xmlgraphics.ps.PSGenerator)
org/apache/fop/render/ps/ResourceHandler/process(java.io.InputStream,java.io.OutputStream,int,java.awt.geom.Rectangle2D)#org/apache/xmlgraphics/ps/dsc/events/DSCCommentLanguageLevel/getLanguageLevel()
org/apache/fop/render/ps/ResourceHandler/process(java.io.InputStream,java.io.OutputStream,int,java.awt.geom.Rectangle2D)#java/lang/String/equals(java.lang.Object)
org/apache/fop/render/ps/ResourceHandler/process(java.io.InputStream,java.io.OutputStream,int,java.awt.geom.Rectangle2D)#org/apache/xmlgraphics/ps/PSGenerator/setPSLevel(int)
org/apache/fop/render/ps/ResourceHandler/process(java.io.InputStream,java.io.OutputStream,int,java.awt.geom.Rectangle2D)#org/apache/xmlgraphics/ps/dsc/events/DSCCommentDocumentNeededResources/DSCCommentDocumentNeededResources(java.util.Collection)
org/apache/fop/render/ps/ResourceHandler/process(java.io.InputStream,java.io.OutputStream,int,java.awt.geom.Rectangle2D)#org/apache/xmlgraphics/ps/dsc/DSCParser/nextDSCComment(java.lang.String,org.apache.xmlgraphics.ps.PSGenerator)
org/apache/fop/render/ps/ResourceHandler/process(java.io.InputStream,java.io.OutputStream,int,java.awt.geom.Rectangle2D)#org/apache/xmlgraphics/ps/PSGenerator/flush()
org/apache/fop/render/ps/ResourceHandler/process(java.io.InputStream,java.io.OutputStream,int,java.awt.geom.Rectangle2D)#org/apache/xmlgraphics/ps/dsc/ResourceTracker/getDocumentSuppliedResources()
org/apache/fop/render/ps/ResourceHandler/process(java.io.InputStream,java.io.OutputStream,int,java.awt.geom.Rectangle2D)#org/apache/xmlgraphics/ps/dsc/events/DSCEvent/generate(org.apache.xmlgraphics.ps.PSGenerator)
org/apache/fop/render/ps/ResourceHandler/process(java.io.InputStream,java.io.OutputStream,int,java.awt.geom.Rectangle2D)#org/apache/xmlgraphics/ps/dsc/DefaultNestedDocumentHandler/DefaultNestedDocumentHandler(org.apache.xmlgraphics.ps.PSGenerator)
org/apache/fop/render/afp/AFPPainter/AFPBorderPainterAdapter/paintCornersAsBitmap(org.apache.xmlgraphics.java2d.Graphics2DImagePainter,java.awt.Rectangle,java.lang.String)#org/apache/xmlgraphics/image/loader/ImageSize/setResolution(double)
org/apache/fop/render/afp/AFPPainter/AFPBorderPainterAdapter/paintCornersAsBitmap(org.apache.xmlgraphics.java2d.Graphics2DImagePainter,java.awt.Rectangle,java.lang.String)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/fop/render/afp/AFPPainter/AFPBorderPainterAdapter/paintCornersAsBitmap(org.apache.xmlgraphics.java2d.Graphics2DImagePainter,java.awt.Rectangle,java.lang.String)#org/apache/xmlgraphics/image/loader/impl/ImageGraphics2D/ImageGraphics2D(org.apache.xmlgraphics.image.loader.ImageInfo,org.apache.xmlgraphics.java2d.Graphics2DImagePainter)
org/apache/fop/render/afp/AFPPainter/AFPBorderPainterAdapter/paintCornersAsBitmap(org.apache.xmlgraphics.java2d.Graphics2DImagePainter,java.awt.Rectangle,java.lang.String)#java/util/HashMap/HashMap()
org/apache/fop/render/afp/AFPPainter/AFPBorderPainterAdapter/paintCornersAsBitmap(org.apache.xmlgraphics.java2d.Graphics2DImagePainter,java.awt.Rectangle,java.lang.String)#java/util/HashMap/HashMap(int)
org/apache/fop/render/afp/AFPPainter/AFPBorderPainterAdapter/paintCornersAsBitmap(org.apache.xmlgraphics.java2d.Graphics2DImagePainter,java.awt.Rectangle,java.lang.String)#java/lang/Integer/valueOf(int)
org/apache/fop/render/afp/AFPPainter/AFPBorderPainterAdapter/paintCornersAsBitmap(org.apache.xmlgraphics.java2d.Graphics2DImagePainter,java.awt.Rectangle,java.lang.String)#org/apache/xmlgraphics/image/loader/ImageSize/setSizeInMillipoints(int,int)
org/apache/fop/render/afp/AFPPainter/AFPBorderPainterAdapter/paintCornersAsBitmap(org.apache.xmlgraphics.java2d.Graphics2DImagePainter,java.awt.Rectangle,java.lang.String)#org/apache/xmlgraphics/image/loader/ImageInfo/setSize(org.apache.xmlgraphics.image.loader.ImageSize)
org/apache/fop/render/afp/AFPPainter/AFPBorderPainterAdapter/paintCornersAsBitmap(org.apache.xmlgraphics.java2d.Graphics2DImagePainter,java.awt.Rectangle,java.lang.String)#org/apache/xmlgraphics/image/loader/ImageSize/calcPixelsFromSize()
org/apache/fop/render/afp/AFPPainter/AFPBorderPainterAdapter/paintCornersAsBitmap(org.apache.xmlgraphics.java2d.Graphics2DImagePainter,java.awt.Rectangle,java.lang.String)#org/apache/xmlgraphics/image/loader/ImageInfo/ImageInfo(java.lang.String,java.lang.String)
org/apache/fop/render/afp/AFPPainter/AFPBorderPainterAdapter/paintCornersAsBitmap(org.apache.xmlgraphics.java2d.Graphics2DImagePainter,java.awt.Rectangle,java.lang.String)#org/apache/xmlgraphics/image/loader/ImageSize/ImageSize()
org/apache/fop/render/afp/AFPPainter/AFPBorderPainterAdapter/makeCornerBorderBPD(int,int,int,int,java.awt.geom.AffineTransform)#java/awt/Rectangle/Rectangle(int,int,int,int)
org/apache/fop/render/afp/AFPPainter/AFPBorderPainterAdapter/makeCornerBorderBPD(int,int,int,int,java.awt.geom.AffineTransform)#java/awt/geom/Area/transform(java.awt.geom.AffineTransform)
org/apache/fop/render/afp/AFPPainter/AFPBorderPainterAdapter/makeCornerBorderBPD(int,int,int,int,java.awt.geom.AffineTransform)#java/awt/geom/Area/Area(java.awt.Shape)
org/apache/fop/render/afp/AFPPainter/AFPBorderPainterAdapter/makeCornerBorderBPD(int,int,int,int,java.awt.geom.AffineTransform)#java/awt/geom/GeneralPath/GeneralPath()
org/apache/fop/render/afp/AFPPainter/AFPBorderPainterAdapter/makeCornerBorderBPD(int,int,int,int,java.awt.geom.AffineTransform)#java/awt/geom/GeneralPath/moveTo(float,float)
org/apache/fop/render/afp/AFPPainter/AFPBorderPainterAdapter/makeCornerBorderBPD(int,int,int,int,java.awt.geom.AffineTransform)#java/awt/geom/Ellipse2D$Double/Double()
org/apache/fop/render/afp/AFPPainter/AFPBorderPainterAdapter/makeCornerBorderBPD(int,int,int,int,java.awt.geom.AffineTransform)#java/awt/geom/Area/intersect(java.awt.geom.Area)
org/apache/fop/render/afp/AFPPainter/AFPBorderPainterAdapter/makeCornerBorderBPD(int,int,int,int,java.awt.geom.AffineTransform)#java/awt/geom/Area/subtract(java.awt.geom.Area)
org/apache/fop/render/afp/AFPPainter/AFPBorderPainterAdapter/makeCornerBorderBPD(int,int,int,int,java.awt.geom.AffineTransform)#java/awt/geom/GeneralPath/lineTo(float,float)
org/apache/fop/render/afp/AFPPainter/AFPBorderPainterAdapter/makeCornerBorderIPD(int,int,int,int,java.awt.geom.AffineTransform)#java/awt/Rectangle/Rectangle(int,int,int,int)
org/apache/fop/render/afp/AFPPainter/AFPBorderPainterAdapter/makeCornerBorderIPD(int,int,int,int,java.awt.geom.AffineTransform)#java/awt/geom/Area/transform(java.awt.geom.AffineTransform)
org/apache/fop/render/afp/AFPPainter/AFPBorderPainterAdapter/makeCornerBorderIPD(int,int,int,int,java.awt.geom.AffineTransform)#java/awt/geom/Area/Area(java.awt.Shape)
org/apache/fop/render/afp/AFPPainter/AFPBorderPainterAdapter/makeCornerBorderIPD(int,int,int,int,java.awt.geom.AffineTransform)#java/awt/geom/GeneralPath/GeneralPath()
org/apache/fop/render/afp/AFPPainter/AFPBorderPainterAdapter/makeCornerBorderIPD(int,int,int,int,java.awt.geom.AffineTransform)#java/awt/geom/GeneralPath/moveTo(float,float)
org/apache/fop/render/afp/AFPPainter/AFPBorderPainterAdapter/makeCornerBorderIPD(int,int,int,int,java.awt.geom.AffineTransform)#java/awt/geom/Ellipse2D$Double/Double()
org/apache/fop/render/afp/AFPPainter/AFPBorderPainterAdapter/makeCornerBorderIPD(int,int,int,int,java.awt.geom.AffineTransform)#java/awt/geom/Area/intersect(java.awt.geom.Area)
org/apache/fop/render/afp/AFPPainter/AFPBorderPainterAdapter/makeCornerBorderIPD(int,int,int,int,java.awt.geom.AffineTransform)#java/awt/geom/Area/subtract(java.awt.geom.Area)
org/apache/fop/render/afp/AFPPainter/AFPBorderPainterAdapter/makeCornerBorderIPD(int,int,int,int,java.awt.geom.AffineTransform)#java/awt/geom/GeneralPath/lineTo(float,float)
org/apache/fop/render/XMLHandlerRegistry/discoverXMLHandlers()#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/fop/render/XMLHandlerRegistry/discoverXMLHandlers()#java/util/Iterator/hasNext()
org/apache/fop/render/XMLHandlerRegistry/discoverXMLHandlers()#org/apache/commons/logging/Log/isDebugEnabled()
org/apache/fop/render/XMLHandlerRegistry/discoverXMLHandlers()#java/util/Iterator/next()
org/apache/fop/render/XMLHandlerRegistry/discoverXMLHandlers()#java/lang/Class/getName()
org/apache/fop/render/XMLHandlerRegistry/discoverXMLHandlers()#java/lang/StringBuilder/StringBuilder()
org/apache/fop/render/XMLHandlerRegistry/discoverXMLHandlers()#org/apache/commons/logging/Log/error(java.lang.Object,java.lang.Throwable)
org/apache/fop/render/XMLHandlerRegistry/discoverXMLHandlers()#java/lang/Object/getClass()
org/apache/fop/render/XMLHandlerRegistry/discoverXMLHandlers()#java/lang/StringBuilder/toString()
org/apache/fop/render/XMLHandlerRegistry/discoverXMLHandlers()#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/render/XMLHandlerRegistry/discoverXMLHandlers()#org/apache/xmlgraphics/util/Service/providers(java.lang.Class)
org/apache/fop/fonts/base14/TimesBoldItalic/<clinit>()#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/fop/fonts/base14/TimesBoldItalic/<clinit>()#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/fonts/base14/TimesBoldItalic/<clinit>()#java/lang/Integer/Integer(int)
org/apache/fop/fonts/base14/TimesBoldItalic/<clinit>()#java/awt/Rectangle/Rectangle(int,int,int,int)
org/apache/fop/fonts/base14/TimesBoldItalic/<clinit>()#java/util/Map/get(java.lang.Object)
org/apache/fop/fonts/base14/TimesBoldItalic/<clinit>()#java/util/HashMap/HashMap()
org/apache/fop/fonts/base14/TimesBoldItalic/<clinit>()#java/lang/StringBuilder/StringBuilder()
org/apache/fop/fonts/base14/TimesBoldItalic/<clinit>()#java/util/HashSet/HashSet()
org/apache/fop/fonts/base14/TimesBoldItalic/<clinit>()#java/util/Set/add(java.lang.Object)
org/apache/fop/fonts/base14/TimesBoldItalic/<clinit>()#java/lang/StringBuilder/toString()
org/apache/fop/fonts/base14/TimesBoldItalic/<clinit>()#java/net/URI/URI(java.lang.String)
org/apache/fop/fonts/base14/TimesBoldItalic/<clinit>()#java/lang/String/toLowerCase()
org/apache/fop/layoutmgr/AbstractBreaker/getNextBlockList(org.apache.fop.layoutmgr.LayoutContext,int,org.apache.fop.layoutmgr.Position,org.apache.fop.layoutmgr.LayoutManager,java.util.List)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/fop/layoutmgr/AbstractBreaker/getNextBlockList(org.apache.fop.layoutmgr.LayoutContext,int,org.apache.fop.layoutmgr.Position,org.apache.fop.layoutmgr.LayoutManager,java.util.List)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/layoutmgr/AbstractBreaker/getNextBlockList(org.apache.fop.layoutmgr.LayoutContext,int,org.apache.fop.layoutmgr.Position,org.apache.fop.layoutmgr.LayoutManager,java.util.List)#java/util/List/isEmpty()
org/apache/fop/layoutmgr/AbstractBreaker/getNextBlockList(org.apache.fop.layoutmgr.LayoutContext,int,org.apache.fop.layoutmgr.Position,org.apache.fop.layoutmgr.LayoutManager,java.util.List)#java/util/List/addAll(int,java.util.Collection)
org/apache/fop/layoutmgr/AbstractBreaker/getNextBlockList(org.apache.fop.layoutmgr.LayoutContext,int,org.apache.fop.layoutmgr.Position,org.apache.fop.layoutmgr.LayoutManager,java.util.List)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/layoutmgr/AbstractBreaker/getNextBlockList(org.apache.fop.layoutmgr.LayoutContext,int,org.apache.fop.layoutmgr.Position,org.apache.fop.layoutmgr.LayoutManager,java.util.List)#java/util/ListIterator/previous()
org/apache/fop/layoutmgr/AbstractBreaker/getNextBlockList(org.apache.fop.layoutmgr.LayoutContext,int,org.apache.fop.layoutmgr.Position,org.apache.fop.layoutmgr.LayoutManager,java.util.List)#java/lang/StringBuilder/toString()
org/apache/fop/layoutmgr/AbstractBreaker/getNextBlockList(org.apache.fop.layoutmgr.LayoutContext,int,org.apache.fop.layoutmgr.Position,org.apache.fop.layoutmgr.LayoutManager,java.util.List)#java/util/ListIterator/remove()
org/apache/fop/layoutmgr/AbstractBreaker/getNextBlockList(org.apache.fop.layoutmgr.LayoutContext,int,org.apache.fop.layoutmgr.Position,org.apache.fop.layoutmgr.LayoutManager,java.util.List)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/apache/fop/layoutmgr/AbstractBreaker/getNextBlockList(org.apache.fop.layoutmgr.LayoutContext,int,org.apache.fop.layoutmgr.Position,org.apache.fop.layoutmgr.LayoutManager,java.util.List)#java/lang/StringBuilder/append(int)
org/apache/fop/layoutmgr/AbstractBreaker/getNextBlockList(org.apache.fop.layoutmgr.LayoutContext,int,org.apache.fop.layoutmgr.Position,org.apache.fop.layoutmgr.LayoutManager,java.util.List)#org/apache/fop/layoutmgr/AbstractBreaker$BlockSequence/BlockSequence(int,int)
org/apache/fop/layoutmgr/AbstractBreaker/getNextBlockList(org.apache.fop.layoutmgr.LayoutContext,int,org.apache.fop.layoutmgr.Position,org.apache.fop.layoutmgr.LayoutManager,java.util.List)#java/util/List/size()
org/apache/fop/layoutmgr/AbstractBreaker/getNextBlockList(org.apache.fop.layoutmgr.LayoutContext,int,org.apache.fop.layoutmgr.Position,org.apache.fop.layoutmgr.LayoutManager,java.util.List)#org/apache/fop/layoutmgr/KnuthPenalty/getPosition()
org/apache/fop/layoutmgr/AbstractBreaker/getNextBlockList(org.apache.fop.layoutmgr.LayoutContext,int,org.apache.fop.layoutmgr.Position,org.apache.fop.layoutmgr.LayoutManager,java.util.List)#org/apache/fop/layoutmgr/AbstractBreaker$BlockSequence/endBlockSequence(org.apache.fop.layoutmgr.Position)
org/apache/fop/layoutmgr/AbstractBreaker/getNextBlockList(org.apache.fop.layoutmgr.LayoutContext,int,org.apache.fop.layoutmgr.Position,org.apache.fop.layoutmgr.LayoutManager,java.util.List)#java/util/List/add(java.lang.Object)
org/apache/fop/layoutmgr/AbstractBreaker/getNextBlockList(org.apache.fop.layoutmgr.LayoutContext,int,org.apache.fop.layoutmgr.Position,org.apache.fop.layoutmgr.LayoutManager,java.util.List)#org/apache/fop/layoutmgr/AbstractBreaker$BlockSequence/addAll(java.util.Collection)
org/apache/fop/layoutmgr/AbstractBreaker/getNextBlockList(org.apache.fop.layoutmgr.LayoutContext,int,org.apache.fop.layoutmgr.Position,org.apache.fop.layoutmgr.LayoutManager,java.util.List)#java/util/List/listIterator(int)
org/apache/fop/layoutmgr/AbstractBreaker/doLayout(int,boolean)#org/apache/fop/layoutmgr/AbstractBreaker$BlockSequence/access$000(org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence)
org/apache/fop/layoutmgr/AbstractBreaker/doLayout(int,boolean)#java/lang/Class/getName()
org/apache/fop/layoutmgr/AbstractBreaker/doLayout(int,boolean)#java/util/LinkedList/size()
org/apache/fop/layoutmgr/AbstractBreaker/doLayout(int,boolean)#java/util/List/clear()
org/apache/fop/layoutmgr/AbstractBreaker/doLayout(int,boolean)#java/util/List/get(int)
org/apache/fop/layoutmgr/AbstractBreaker/doLayout(int,boolean)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/fop/layoutmgr/AbstractBreaker/doLayout(int,boolean)#java/util/ArrayList/ArrayList()
org/apache/fop/layoutmgr/AbstractBreaker/doLayout(int,boolean)#org/apache/fop/layoutmgr/PageBreakingAlgorithm/findBreakingPoints(org.apache.fop.layoutmgr.KnuthSequence,double,boolean,int)
org/apache/fop/layoutmgr/AbstractBreaker/doLayout(int,boolean)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/layoutmgr/AbstractBreaker/doLayout(int,boolean)#java/lang/StringBuilder/append(int)
org/apache/fop/layoutmgr/AbstractBreaker/doLayout(int,boolean)#org/apache/commons/logging/Log/isDebugEnabled()
org/apache/fop/layoutmgr/AbstractBreaker/doLayout(int,boolean)#java/util/List/size()
org/apache/fop/layoutmgr/AbstractBreaker/doLayout(int,boolean)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/layoutmgr/AbstractBreaker/doLayout(int,boolean)#org/apache/commons/logging/Log/trace(java.lang.Object)
org/apache/fop/layoutmgr/AbstractBreaker/doLayout(int,boolean)#java/lang/Object/getClass()
org/apache/fop/layoutmgr/AbstractBreaker/doLayout(int,boolean)#org/apache/fop/layoutmgr/PageBreakingAlgorithm/setConstantLineWidth(int)
org/apache/fop/layoutmgr/AbstractBreaker/doLayout(int,boolean)#java/lang/Math/abs(int)
org/apache/fop/layoutmgr/AbstractBreaker/doLayout(int,boolean)#java/lang/StringBuilder/toString()
org/apache/fop/layoutmgr/AbstractBreaker/getNextBlockListChangedIPD(org.apache.fop.layoutmgr.LayoutContext,org.apache.fop.layoutmgr.PageBreakingAlgorithm,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence)#org/apache/fop/layoutmgr/KnuthElement/getPosition()
org/apache/fop/layoutmgr/AbstractBreaker/getNextBlockListChangedIPD(org.apache.fop.layoutmgr.LayoutContext,org.apache.fop.layoutmgr.PageBreakingAlgorithm,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence)#org/apache/fop/layoutmgr/KnuthElement/isBox()
org/apache/fop/layoutmgr/AbstractBreaker/getNextBlockListChangedIPD(org.apache.fop.layoutmgr.LayoutContext,org.apache.fop.layoutmgr.PageBreakingAlgorithm,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence)#java/util/Iterator/hasNext()
org/apache/fop/layoutmgr/AbstractBreaker/getNextBlockListChangedIPD(org.apache.fop.layoutmgr.LayoutContext,org.apache.fop.layoutmgr.PageBreakingAlgorithm,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/layoutmgr/AbstractBreaker/getNextBlockListChangedIPD(org.apache.fop.layoutmgr.LayoutContext,org.apache.fop.layoutmgr.PageBreakingAlgorithm,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence)#java/lang/StringBuilder/append(int)
org/apache/fop/layoutmgr/AbstractBreaker/getNextBlockListChangedIPD(org.apache.fop.layoutmgr.LayoutContext,org.apache.fop.layoutmgr.PageBreakingAlgorithm,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence)#java/util/Collections/emptyList()
org/apache/fop/layoutmgr/AbstractBreaker/getNextBlockListChangedIPD(org.apache.fop.layoutmgr.LayoutContext,org.apache.fop.layoutmgr.PageBreakingAlgorithm,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence)#java/util/LinkedList/LinkedList()
org/apache/fop/layoutmgr/AbstractBreaker/getNextBlockListChangedIPD(org.apache.fop.layoutmgr.LayoutContext,org.apache.fop.layoutmgr.PageBreakingAlgorithm,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence)#java/util/List/add(java.lang.Object)
org/apache/fop/layoutmgr/AbstractBreaker/getNextBlockListChangedIPD(org.apache.fop.layoutmgr.LayoutContext,org.apache.fop.layoutmgr.PageBreakingAlgorithm,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/fop/layoutmgr/AbstractBreaker/getNextBlockListChangedIPD(org.apache.fop.layoutmgr.LayoutContext,org.apache.fop.layoutmgr.PageBreakingAlgorithm,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence)#org/apache/fop/layoutmgr/PageBreakingAlgorithm/getElement(int)
org/apache/fop/layoutmgr/AbstractBreaker/getNextBlockListChangedIPD(org.apache.fop.layoutmgr.LayoutContext,org.apache.fop.layoutmgr.PageBreakingAlgorithm,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence)#java/util/Iterator/next()
org/apache/fop/layoutmgr/AbstractBreaker/getNextBlockListChangedIPD(org.apache.fop.layoutmgr.LayoutContext,org.apache.fop.layoutmgr.PageBreakingAlgorithm,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/layoutmgr/AbstractBreaker/getNextBlockListChangedIPD(org.apache.fop.layoutmgr.LayoutContext,org.apache.fop.layoutmgr.PageBreakingAlgorithm,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence)#org/apache/commons/logging/Log/trace(java.lang.Object)
org/apache/fop/layoutmgr/AbstractBreaker/getNextBlockListChangedIPD(org.apache.fop.layoutmgr.LayoutContext,org.apache.fop.layoutmgr.PageBreakingAlgorithm,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence)#org/apache/fop/layoutmgr/AbstractBreaker$BlockSequence/listIterator(int)
org/apache/fop/layoutmgr/AbstractBreaker/getNextBlockListChangedIPD(org.apache.fop.layoutmgr.LayoutContext,org.apache.fop.layoutmgr.PageBreakingAlgorithm,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence)#java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)
org/apache/fop/layoutmgr/AbstractBreaker/getNextBlockListChangedIPD(org.apache.fop.layoutmgr.LayoutContext,org.apache.fop.layoutmgr.PageBreakingAlgorithm,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence)#org/apache/fop/fo/FObj/getUserAgent()
org/apache/fop/layoutmgr/AbstractBreaker/getNextBlockListChangedIPD(org.apache.fop.layoutmgr.LayoutContext,org.apache.fop.layoutmgr.PageBreakingAlgorithm,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence)#org/apache/fop/layoutmgr/BlockLevelEventProducer$Provider/get(org.apache.fop.events.EventBroadcaster)
org/apache/fop/layoutmgr/AbstractBreaker/getNextBlockListChangedIPD(org.apache.fop.layoutmgr.LayoutContext,org.apache.fop.layoutmgr.PageBreakingAlgorithm,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence)#java/lang/StringBuilder/toString()
org/apache/fop/layoutmgr/AbstractBreaker/addAreas(org.apache.fop.layoutmgr.PageBreakingAlgorithm,int,int,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence,org.apache.fop.layoutmgr.LayoutContext)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/layoutmgr/AbstractBreaker/addAreas(org.apache.fop.layoutmgr.PageBreakingAlgorithm,int,int,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence,org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/layoutmgr/AbstractBreaker$PageBreakPosition/getLeafPos()
org/apache/fop/layoutmgr/AbstractBreaker/addAreas(org.apache.fop.layoutmgr.PageBreakingAlgorithm,int,int,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence,org.apache.fop.layoutmgr.LayoutContext)#org/apache/commons/logging/Log/isDebugEnabled()
org/apache/fop/layoutmgr/AbstractBreaker/addAreas(org.apache.fop.layoutmgr.PageBreakingAlgorithm,int,int,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence,org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/layoutmgr/AbstractBreaker$BlockSequence/size()
org/apache/fop/layoutmgr/AbstractBreaker/addAreas(org.apache.fop.layoutmgr.PageBreakingAlgorithm,int,int,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence,org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/layoutmgr/AbstractBreaker$BlockSequence/getElement(int)
org/apache/fop/layoutmgr/AbstractBreaker/addAreas(org.apache.fop.layoutmgr.PageBreakingAlgorithm,int,int,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence,org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/layoutmgr/AbstractBreaker$BlockSequence/getStartOn()
org/apache/fop/layoutmgr/AbstractBreaker/addAreas(org.apache.fop.layoutmgr.PageBreakingAlgorithm,int,int,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence,org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/layoutmgr/AbstractBreaker$BlockSequence/get(int)
org/apache/fop/layoutmgr/AbstractBreaker/addAreas(org.apache.fop.layoutmgr.PageBreakingAlgorithm,int,int,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence,org.apache.fop.layoutmgr.LayoutContext)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/fop/layoutmgr/AbstractBreaker/addAreas(org.apache.fop.layoutmgr.PageBreakingAlgorithm,int,int,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence,org.apache.fop.layoutmgr.LayoutContext)#java/lang/StringBuilder/append(int)
org/apache/fop/layoutmgr/AbstractBreaker/addAreas(org.apache.fop.layoutmgr.PageBreakingAlgorithm,int,int,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence,org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/layoutmgr/KnuthElement/isGlue()
org/apache/fop/layoutmgr/AbstractBreaker/addAreas(org.apache.fop.layoutmgr.PageBreakingAlgorithm,int,int,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence,org.apache.fop.layoutmgr.LayoutContext)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/layoutmgr/AbstractBreaker/addAreas(org.apache.fop.layoutmgr.PageBreakingAlgorithm,int,int,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence,org.apache.fop.layoutmgr.LayoutContext)#java/lang/StringBuilder/toString()
org/apache/fop/layoutmgr/AbstractBreaker/addAreas(org.apache.fop.layoutmgr.PageBreakingAlgorithm,int,int,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence,org.apache.fop.layoutmgr.LayoutContext)#java/util/LinkedList/get(int)
org/apache/fop/pdf/PDFToUnicodeCMap/ToUnicodeCMapBuilder/writeBFRangeEntries(char[])#org/apache/fop/pdf/PDFToUnicodeCMap$ToUnicodeCMapBuilder/padCharIndex(int)
org/apache/fop/pdf/PDFToUnicodeCMap/ToUnicodeCMapBuilder/writeBFRangeEntries(char[])#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/pdf/PDFToUnicodeCMap/ToUnicodeCMapBuilder/writeBFRangeEntries(char[])#java/lang/StringBuilder/append(int)
org/apache/fop/pdf/PDFToUnicodeCMap/ToUnicodeCMapBuilder/writeBFRangeEntries(char[])#java/lang/Integer/toHexString(int)
org/apache/fop/pdf/PDFToUnicodeCMap/ToUnicodeCMapBuilder/writeBFRangeEntries(char[])#org/apache/fop/pdf/PDFToUnicodeCMap$ToUnicodeCMapBuilder/padHexString(java.lang.String,int)
org/apache/fop/pdf/PDFToUnicodeCMap/ToUnicodeCMapBuilder/writeBFRangeEntries(char[])#java/lang/StringBuilder/toString()
org/apache/fop/pdf/PDFToUnicodeCMap/ToUnicodeCMapBuilder/writeBFRangeEntries(char[])#java/lang/StringBuilder/StringBuilder()
org/apache/fop/pdf/PDFToUnicodeCMap/ToUnicodeCMapBuilder/writeBFRangeEntries(char[])#org/apache/fop/pdf/PDFToUnicodeCMap$ToUnicodeCMapBuilder/startOfRange(char[],int)
org/apache/fop/pdf/PDFToUnicodeCMap/ToUnicodeCMapBuilder/writeBFRangeEntries(char[])#java/io/Writer/write(java.lang.String)
org/apache/fop/pdf/PDFToUnicodeCMap/ToUnicodeCMapBuilder/writeBFRangeEntries(char[])#org/apache/fop/pdf/PDFToUnicodeCMap$ToUnicodeCMapBuilder/endOfRange(char[],int)
org/apache/fop/pdf/PDFToUnicodeCMap/ToUnicodeCMapBuilder/writeBFRangeEntries(char[])#java/lang/Math/min(int,int)
org/apache/fop/pdf/PDFToUnicodeCMap/ToUnicodeCMapBuilder/writeBFCharEntries(char[])#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/pdf/PDFToUnicodeCMap/ToUnicodeCMapBuilder/writeBFCharEntries(char[])#java/lang/StringBuilder/append(int)
org/apache/fop/pdf/PDFToUnicodeCMap/ToUnicodeCMapBuilder/writeBFCharEntries(char[])#java/lang/Integer/toHexString(int)
org/apache/fop/pdf/PDFToUnicodeCMap/ToUnicodeCMapBuilder/writeBFCharEntries(char[])#java/lang/Math/min(int,int)
org/apache/fop/pdf/PDFToUnicodeCMap/ToUnicodeCMapBuilder/writeBFCharEntries(char[])#org/apache/fop/pdf/PDFToUnicodeCMap$ToUnicodeCMapBuilder/padHexString(java.lang.String,int)
org/apache/fop/pdf/PDFToUnicodeCMap/ToUnicodeCMapBuilder/writeBFCharEntries(char[])#java/lang/StringBuilder/toString()
org/apache/fop/pdf/PDFToUnicodeCMap/ToUnicodeCMapBuilder/writeBFCharEntries(char[])#org/apache/fop/pdf/PDFToUnicodeCMap$ToUnicodeCMapBuilder/padCharIndex(int)
org/apache/fop/pdf/PDFToUnicodeCMap/ToUnicodeCMapBuilder/writeBFCharEntries(char[])#org/apache/fop/pdf/PDFToUnicodeCMap$ToUnicodeCMapBuilder/partOfRange(char[],int)
org/apache/fop/pdf/PDFToUnicodeCMap/ToUnicodeCMapBuilder/writeBFCharEntries(char[])#java/lang/StringBuilder/StringBuilder()
org/apache/fop/pdf/PDFToUnicodeCMap/ToUnicodeCMapBuilder/writeBFCharEntries(char[])#java/io/Writer/write(java.lang.String)
org/apache/fop/complexscripts/fonts/GlyphPositioningTable/ContextualSubtableFormat2/populate(java.util.List)#java/lang/Integer/intValue()
org/apache/fop/complexscripts/fonts/GlyphPositioningTable/ContextualSubtableFormat2/populate(java.util.List)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/complexscripts/fonts/GlyphPositioningTable/ContextualSubtableFormat2/populate(java.util.List)#java/lang/StringBuilder/append(int)
org/apache/fop/complexscripts/fonts/GlyphPositioningTable/ContextualSubtableFormat2/populate(java.util.List)#java/util/List/size()
org/apache/fop/complexscripts/fonts/GlyphPositioningTable/ContextualSubtableFormat2/populate(java.util.List)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/complexscripts/fonts/GlyphPositioningTable/ContextualSubtableFormat2/populate(java.util.List)#java/util/List/get(int)
org/apache/fop/complexscripts/fonts/GlyphPositioningTable/ContextualSubtableFormat2/populate(java.util.List)#java/lang/StringBuilder/toString()
org/apache/fop/complexscripts/fonts/GlyphPositioningTable/ContextualSubtableFormat2/populate(java.util.List)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/fop/complexscripts/fonts/GlyphPositioningTable/ContextualSubtableFormat2/populate(java.util.List)#java/lang/Object/getClass()
org/apache/fop/pdf/xref/CrossReferenceTable/outputXref()#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/pdf/xref/CrossReferenceTable/outputXref()#java/lang/StringBuilder/append(int)
org/apache/fop/pdf/xref/CrossReferenceTable/outputXref()#java/lang/String/length()
org/apache/fop/pdf/xref/CrossReferenceTable/outputXref()#java/lang/StringBuilder/StringBuilder()
org/apache/fop/pdf/xref/CrossReferenceTable/outputXref()#java/lang/String/substring(int)
org/apache/fop/pdf/xref/CrossReferenceTable/outputXref()#java/util/List/get(int)
org/apache/fop/pdf/xref/CrossReferenceTable/outputXref()#java/lang/AssertionError/AssertionError()
org/apache/fop/pdf/xref/CrossReferenceTable/outputXref()#java/lang/StringBuilder/toString()
org/apache/fop/pdf/xref/CrossReferenceTable/outputXref()#java/io/IOException/IOException(java.lang.String)
org/apache/fop/pdf/xref/CrossReferenceTable/outputXref()#java/lang/String/valueOf(java.lang.Object)
org/apache/fop/render/rtf/RTFHandler/recurseFONode(org.apache.fop.fo.FONode)#java/util/Iterator/hasNext()
org/apache/fop/render/rtf/RTFHandler/recurseFONode(org.apache.fop.fo.FONode)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/render/rtf/RTFHandler/recurseFONode(org.apache.fop.fo.FONode)#java/util/Map/get(java.lang.Object)
org/apache/fop/render/rtf/RTFHandler/recurseFONode(org.apache.fop.fo.FONode)#org/apache/fop/fo/flow/table/Table/getLocator()
org/apache/fop/render/rtf/RTFHandler/recurseFONode(org.apache.fop.fo.FONode)#java/util/List/iterator()
org/apache/fop/render/rtf/RTFHandler/recurseFONode(org.apache.fop.fo.FONode)#org/apache/fop/render/rtf/RTFHandler/getUserAgent()
org/apache/fop/render/rtf/RTFHandler/recurseFONode(org.apache.fop.fo.FONode)#java/util/Iterator/next()
org/apache/fop/render/rtf/RTFHandler/recurseFONode(org.apache.fop.fo.FONode)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/render/rtf/RTFHandler/recurseFONode(org.apache.fop.fo.FONode)#org/apache/commons/logging/Log/trace(java.lang.Object)
org/apache/fop/render/rtf/RTFHandler/recurseFONode(org.apache.fop.fo.FONode)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/fop/render/rtf/RTFHandler/recurseFONode(org.apache.fop.fo.FONode)#org/apache/commons/logging/Log/isTraceEnabled()
org/apache/fop/render/rtf/RTFHandler/recurseFONode(org.apache.fop.fo.FONode)#org/apache/fop/render/rtf/RTFEventProducer$Provider/get(org.apache.fop.events.EventBroadcaster)
org/apache/fop/render/rtf/RTFHandler/recurseFONode(org.apache.fop.fo.FONode)#java/lang/StringBuilder/toString()
org/apache/fop/render/rtf/RTFHandler/putGraphic(org.apache.fop.fo.flow.AbstractGraphics,org.apache.xmlgraphics.image.loader.Image)#org/apache/fop/render/rtf/RTFHandler/getUserAgent()
org/apache/fop/render/rtf/RTFHandler/putGraphic(org.apache.fop.fo.flow.AbstractGraphics,org.apache.xmlgraphics.image.loader.Image)#org/apache/fop/ResourceEventProducer$Provider/get(org.apache.fop.events.EventBroadcaster)
org/apache/fop/render/rtf/RTFHandler/putGraphic(org.apache.fop.fo.flow.AbstractGraphics,org.apache.xmlgraphics.image.loader.Image)#org/apache/xmlgraphics/image/loader/impl/ImageRawStream/createInputStream()
org/apache/fop/render/rtf/RTFHandler/putGraphic(org.apache.fop.fo.flow.AbstractGraphics,org.apache.xmlgraphics.image.loader.Image)#java/lang/Math/round(float)
org/apache/fop/render/rtf/RTFHandler/putGraphic(org.apache.fop.fo.flow.AbstractGraphics,org.apache.xmlgraphics.image.loader.Image)#org/apache/fop/render/rtf/RTFHandler$1/1(org.apache.fop.render.rtf.RTFHandler,org.apache.xmlgraphics.image.loader.ImageInfo)
org/apache/fop/render/rtf/RTFHandler/putGraphic(org.apache.fop.fo.flow.AbstractGraphics,org.apache.xmlgraphics.image.loader.Image)#java/lang/StringBuilder/toString()
org/apache/fop/render/rtf/RTFHandler/putGraphic(org.apache.fop.fo.flow.AbstractGraphics,org.apache.xmlgraphics.image.loader.Image)#org/apache/xmlgraphics/image/loader/ImageSize/getDimensionMpt()
org/apache/fop/render/rtf/RTFHandler/putGraphic(org.apache.fop.fo.flow.AbstractGraphics,org.apache.xmlgraphics.image.loader.Image)#org/apache/commons/io/IOUtils/closeQuietly(java.io.InputStream)
org/apache/fop/render/rtf/RTFHandler/putGraphic(org.apache.fop.fo.flow.AbstractGraphics,org.apache.xmlgraphics.image.loader.Image)#org/apache/xmlgraphics/image/loader/Image/getInfo()
org/apache/fop/render/rtf/RTFHandler/putGraphic(org.apache.fop.fo.flow.AbstractGraphics,org.apache.xmlgraphics.image.loader.Image)#org/apache/commons/logging/Log/warn(java.lang.Object)
org/apache/fop/render/rtf/RTFHandler/putGraphic(org.apache.fop.fo.flow.AbstractGraphics,org.apache.xmlgraphics.image.loader.Image)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/render/rtf/RTFHandler/putGraphic(org.apache.fop.fo.flow.AbstractGraphics,org.apache.xmlgraphics.image.loader.Image)#org/apache/xmlgraphics/image/loader/ImageInfo/getSize()
org/apache/fop/render/rtf/RTFHandler/putGraphic(org.apache.fop.fo.flow.AbstractGraphics,org.apache.xmlgraphics.image.loader.Image)#java/lang/StringBuilder/append(int)
org/apache/fop/render/rtf/RTFHandler/putGraphic(org.apache.fop.fo.flow.AbstractGraphics,org.apache.xmlgraphics.image.loader.Image)#org/apache/xmlgraphics/image/loader/ImageInfo/getOriginalURI()
org/apache/fop/render/rtf/RTFHandler/putGraphic(org.apache.fop.fo.flow.AbstractGraphics,org.apache.xmlgraphics.image.loader.Image)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/render/rtf/RTFHandler/putGraphic(org.apache.fop.fo.flow.AbstractGraphics,org.apache.xmlgraphics.image.loader.Image)#org/apache/commons/io/IOUtils/toByteArray(java.io.InputStream)
org/apache/fop/render/rtf/RTFHandler/startCell(org.apache.fop.fo.flow.table.TableCell)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/render/rtf/RTFHandler/startCell(org.apache.fop.fo.flow.table.TableCell)#org/apache/commons/logging/Log/error(java.lang.Object)
org/apache/fop/render/rtf/RTFHandler/startCell(org.apache.fop.fo.flow.table.TableCell)#java/lang/Integer/intValue()
org/apache/fop/render/rtf/RTFHandler/startCell(org.apache.fop.fo.flow.table.TableCell)#java/lang/Integer/Integer(int)
org/apache/fop/render/rtf/RTFHandler/startCell(org.apache.fop.fo.flow.table.TableCell)#org/apache/fop/render/rtf/rtflib/rtfdoc/RtfTableCell/getRtfAttributes()
org/apache/fop/render/rtf/RTFHandler/startCell(org.apache.fop.fo.flow.table.TableCell)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/render/rtf/RTFHandler/startCell(org.apache.fop.fo.flow.table.TableCell)#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/apache/fop/render/rtf/RTFHandler/startCell(org.apache.fop.fo.flow.table.TableCell)#java/lang/StringBuilder/toString()
org/apache/fop/render/rtf/RTFHandler/startCell(org.apache.fop.fo.flow.table.TableCell)#java/lang/Exception/getMessage()
org/apache/fop/render/rtf/RTFHandler/startFlow(org.apache.fop.fo.pagination.Flow)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/fop/render/rtf/RTFHandler/startFlow(org.apache.fop.fo.pagination.Flow)#org/apache/commons/logging/Log/warn(java.lang.Object)
org/apache/fop/render/rtf/RTFHandler/startFlow(org.apache.fop.fo.pagination.Flow)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/render/rtf/RTFHandler/startFlow(org.apache.fop.fo.pagination.Flow)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/render/rtf/RTFHandler/startFlow(org.apache.fop.fo.pagination.Flow)#java/lang/String/equals(java.lang.Object)
org/apache/fop/render/rtf/RTFHandler/startFlow(org.apache.fop.fo.pagination.Flow)#org/apache/commons/logging/Log/error(java.lang.Object)
org/apache/fop/render/rtf/RTFHandler/startFlow(org.apache.fop.fo.pagination.Flow)#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/apache/fop/render/rtf/RTFHandler/startFlow(org.apache.fop.fo.pagination.Flow)#java/lang/StringBuilder/toString()
org/apache/fop/render/rtf/RTFHandler/startFlow(org.apache.fop.fo.pagination.Flow)#java/lang/Exception/getMessage()
org/apache/fop/render/rtf/RTFHandler/endInstreamForeignObject(org.apache.fop.fo.flow.InstreamForeignObject)#org/apache/xmlgraphics/image/loader/ImageSize/setResolution(double)
org/apache/fop/render/rtf/RTFHandler/endInstreamForeignObject(org.apache.fop.fo.flow.InstreamForeignObject)#java/lang/Math/round(double)
org/apache/fop/render/rtf/RTFHandler/endInstreamForeignObject(org.apache.fop.fo.flow.InstreamForeignObject)#org/apache/fop/ResourceEventProducer$Provider/get(org.apache.fop.events.EventBroadcaster)
org/apache/fop/render/rtf/RTFHandler/endInstreamForeignObject(org.apache.fop.fo.flow.InstreamForeignObject)#java/awt/geom/Point2D$Float/Float(float,float)
org/apache/fop/render/rtf/RTFHandler/endInstreamForeignObject(org.apache.fop.fo.flow.InstreamForeignObject)#org/apache/xmlgraphics/image/loader/util/ImageUtil/getDefaultHints(org.apache.xmlgraphics.image.loader.ImageSessionContext)
org/apache/fop/render/rtf/RTFHandler/endInstreamForeignObject(org.apache.fop.fo.flow.InstreamForeignObject)#java/awt/geom/Point2D/getX()
org/apache/fop/render/rtf/RTFHandler/endInstreamForeignObject(org.apache.fop.fo.flow.InstreamForeignObject)#org/apache/fop/render/rtf/RTFHandler/getUserAgent()
org/apache/fop/render/rtf/RTFHandler/endInstreamForeignObject(org.apache.fop.fo.flow.InstreamForeignObject)#org/apache/fop/fo/XMLObj/getLocator()
org/apache/fop/render/rtf/RTFHandler/endInstreamForeignObject(org.apache.fop.fo.flow.InstreamForeignObject)#org/apache/xmlgraphics/image/loader/ImageInfo/ImageInfo(java.lang.String,java.lang.String)
org/apache/fop/render/rtf/RTFHandler/endInstreamForeignObject(org.apache.fop.fo.flow.InstreamForeignObject)#org/apache/xmlgraphics/image/loader/ImageSize/ImageSize()
org/apache/fop/render/rtf/RTFHandler/endInstreamForeignObject(org.apache.fop.fo.flow.InstreamForeignObject)#org/apache/xmlgraphics/image/loader/impl/ImageXMLDOM/ImageXMLDOM(org.apache.xmlgraphics.image.loader.ImageInfo,org.w3c.dom.Document,java.lang.String)
org/apache/fop/render/rtf/RTFHandler/endInstreamForeignObject(org.apache.fop.fo.flow.InstreamForeignObject)#org/apache/fop/fo/XMLObj/getNamespaceURI()
org/apache/fop/render/rtf/RTFHandler/endInstreamForeignObject(org.apache.fop.fo.flow.InstreamForeignObject)#org/apache/xmlgraphics/image/loader/ImageSize/setSizeInMillipoints(int,int)
org/apache/fop/render/rtf/RTFHandler/endInstreamForeignObject(org.apache.fop.fo.flow.InstreamForeignObject)#org/apache/fop/fo/flow/InstreamForeignObject/getUserAgent()
org/apache/fop/render/rtf/RTFHandler/endInstreamForeignObject(org.apache.fop.fo.flow.InstreamForeignObject)#org/apache/xmlgraphics/image/loader/ImageInfo/setSize(org.apache.xmlgraphics.image.loader.ImageSize)
org/apache/fop/render/rtf/RTFHandler/endInstreamForeignObject(org.apache.fop.fo.flow.InstreamForeignObject)#org/apache/xmlgraphics/image/loader/ImageManager/convertImage(org.apache.xmlgraphics.image.loader.Image,org.apache.xmlgraphics.image.loader.ImageFlavor[],java.util.Map)
org/apache/fop/render/rtf/RTFHandler/endInstreamForeignObject(org.apache.fop.fo.flow.InstreamForeignObject)#java/awt/geom/Point2D/getY()
org/apache/fop/render/rtf/RTFHandler/endInstreamForeignObject(org.apache.fop.fo.flow.InstreamForeignObject)#org/apache/xmlgraphics/image/loader/ImageSize/calcPixelsFromSize()
org/apache/fop/layoutmgr/LayoutManagerMapping/makeLayoutManagers(org.apache.fop.fo.FONode,java.util.List)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/layoutmgr/LayoutManagerMapping/makeLayoutManagers(org.apache.fop.fo.FONode,java.util.List)#java/lang/String/equals(java.lang.Object)
org/apache/fop/layoutmgr/LayoutManagerMapping/makeLayoutManagers(org.apache.fop.fo.FONode,java.util.List)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/layoutmgr/LayoutManagerMapping/makeLayoutManagers(org.apache.fop.fo.FONode,java.util.List)#org/apache/commons/logging/Log/error(java.lang.Object)
org/apache/fop/layoutmgr/LayoutManagerMapping/makeLayoutManagers(org.apache.fop.fo.FONode,java.util.List)#java/lang/StringBuilder/toString()
org/apache/fop/layoutmgr/LayoutManagerMapping/makeLayoutManagers(org.apache.fop.fo.FONode,java.util.List)#org/apache/fop/layoutmgr/LayoutManagerMapping$Maker/make(org.apache.fop.fo.FONode,java.util.List)
org/apache/fop/layoutmgr/LayoutManagerMapping/makeLayoutManagers(org.apache.fop.fo.FONode,java.util.List)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/fop/layoutmgr/LayoutManagerMapping/makeLayoutManagers(org.apache.fop.fo.FONode,java.util.List)#org/apache/commons/logging/Log/isDebugEnabled()
org/apache/fop/layoutmgr/LayoutManagerMapping/makeLayoutManagers(org.apache.fop.fo.FONode,java.util.List)#java/util/Map/get(java.lang.Object)
org/apache/fop/layoutmgr/LayoutManagerMapping/makeLayoutManagers(org.apache.fop.fo.FONode,java.util.List)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/fop/layoutmgr/LayoutManagerMapping/makeLayoutManagers(org.apache.fop.fo.FONode,java.util.List)#java/lang/Object/getClass()
org/apache/fop/layoutmgr/LayoutManagerMapping/initialize()#org/apache/fop/layoutmgr/LayoutManagerMapping$Maker/Maker()
org/apache/fop/layoutmgr/LayoutManagerMapping/initialize()#org/apache/fop/layoutmgr/LayoutManagerMapping$WrapperLayoutManagerMaker/WrapperLayoutManagerMaker(org.apache.fop.layoutmgr.LayoutManagerMapping)
org/apache/fop/layoutmgr/LayoutManagerMapping/initialize()#org/apache/fop/layoutmgr/LayoutManagerMapping$ListBlockLayoutManagerMaker/ListBlockLayoutManagerMaker()
org/apache/fop/layoutmgr/LayoutManagerMapping/initialize()#org/apache/fop/layoutmgr/LayoutManagerMapping$MultiCaseLayoutManagerMaker/MultiCaseLayoutManagerMaker(org.apache.fop.layoutmgr.LayoutManagerMapping)
org/apache/fop/layoutmgr/LayoutManagerMapping/initialize()#org/apache/fop/layoutmgr/LayoutManagerMapping$InlineContainerLayoutManagerMaker/InlineContainerLayoutManagerMaker()
org/apache/fop/layoutmgr/LayoutManagerMapping/initialize()#org/apache/fop/layoutmgr/LayoutManagerMapping$BasicLinkLayoutManagerMaker/BasicLinkLayoutManagerMaker()
org/apache/fop/layoutmgr/LayoutManagerMapping/initialize()#org/apache/fop/layoutmgr/LayoutManagerMapping$CharacterLayoutManagerMaker/CharacterLayoutManagerMaker()
org/apache/fop/layoutmgr/LayoutManagerMapping/initialize()#org/apache/fop/layoutmgr/LayoutManagerMapping$FloatLayoutManagerMaker/FloatLayoutManagerMaker()
org/apache/fop/layoutmgr/LayoutManagerMapping/initialize()#org/apache/fop/layoutmgr/LayoutManagerMapping$RetrieveMarkerLayoutManagerMaker/RetrieveMarkerLayoutManagerMaker(org.apache.fop.layoutmgr.LayoutManagerMapping)
org/apache/fop/layoutmgr/LayoutManagerMapping/initialize()#org/apache/fop/layoutmgr/LayoutManagerMapping$ExternalGraphicLayoutManagerMaker/ExternalGraphicLayoutManagerMaker()
org/apache/fop/layoutmgr/LayoutManagerMapping/initialize()#org/apache/fop/layoutmgr/LayoutManagerMapping$BlockLayoutManagerMaker/BlockLayoutManagerMaker()
org/apache/fop/layoutmgr/LayoutManagerMapping/initialize()#org/apache/fop/layoutmgr/LayoutManagerMapping$MultiSwitchLayoutManagerMaker/MultiSwitchLayoutManagerMaker(org.apache.fop.layoutmgr.LayoutManagerMapping)
org/apache/fop/layoutmgr/LayoutManagerMapping/initialize()#org/apache/fop/layoutmgr/LayoutManagerMapping$LeaderLayoutManagerMaker/LeaderLayoutManagerMaker()
org/apache/fop/layoutmgr/LayoutManagerMapping/initialize()#org/apache/fop/layoutmgr/LayoutManagerMapping$PageNumberCitationLayoutManagerMaker/PageNumberCitationLayoutManagerMaker()
org/apache/fop/layoutmgr/LayoutManagerMapping/initialize()#org/apache/fop/layoutmgr/LayoutManagerMapping$InlineLayoutManagerMaker/InlineLayoutManagerMaker()
org/apache/fop/layoutmgr/LayoutManagerMapping/initialize()#org/apache/fop/layoutmgr/LayoutManagerMapping$ListItemLayoutManagerMaker/ListItemLayoutManagerMaker()
org/apache/fop/layoutmgr/LayoutManagerMapping/initialize()#org/apache/fop/layoutmgr/LayoutManagerMapping$BlockContainerLayoutManagerMaker/BlockContainerLayoutManagerMaker()
org/apache/fop/layoutmgr/LayoutManagerMapping/initialize()#org/apache/fop/layoutmgr/LayoutManagerMapping$RetrieveTableMarkerLayoutManagerMaker/RetrieveTableMarkerLayoutManagerMaker(org.apache.fop.layoutmgr.LayoutManagerMapping)
org/apache/fop/layoutmgr/LayoutManagerMapping/initialize()#org/apache/fop/layoutmgr/LayoutManagerMapping$PageNumberCitationLastLayoutManagerMaker/PageNumberCitationLastLayoutManagerMaker()
org/apache/fop/layoutmgr/LayoutManagerMapping/initialize()#org/apache/fop/layoutmgr/LayoutManagerMapping$TableLayoutManagerMaker/TableLayoutManagerMaker()
org/apache/fop/layoutmgr/LayoutManagerMapping/initialize()#org/apache/fop/layoutmgr/LayoutManagerMapping$BidiOverrideLayoutManagerMaker/BidiOverrideLayoutManagerMaker()
org/apache/fop/layoutmgr/LayoutManagerMapping/initialize()#org/apache/fop/layoutmgr/LayoutManagerMapping$FOTextLayoutManagerMaker/FOTextLayoutManagerMaker()
org/apache/fop/layoutmgr/LayoutManagerMapping/initialize()#org/apache/fop/layoutmgr/LayoutManagerMapping$InstreamForeignObjectLayoutManagerMaker/InstreamForeignObjectLayoutManagerMaker()
org/apache/fop/layoutmgr/LayoutManagerMapping/initialize()#org/apache/fop/layoutmgr/LayoutManagerMapping$PageNumberLayoutManagerMaker/PageNumberLayoutManagerMaker()
org/apache/fop/layoutmgr/LayoutManagerMapping/initialize()#org/apache/fop/layoutmgr/LayoutManagerMapping$FootnoteLayoutManagerMaker/FootnoteLayoutManagerMaker()
org/apache/fop/layoutmgr/LayoutManagerMapping/makeLayoutManager(org.apache.fop.fo.FONode)#java/util/ArrayList/ArrayList()
org/apache/fop/layoutmgr/LayoutManagerMapping/makeLayoutManager(org.apache.fop.fo.FONode)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/apache/fop/layoutmgr/LayoutManagerMapping/makeLayoutManager(org.apache.fop.fo.FONode)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/layoutmgr/LayoutManagerMapping/makeLayoutManager(org.apache.fop.fo.FONode)#java/util/List/size()
org/apache/fop/layoutmgr/LayoutManagerMapping/makeLayoutManager(org.apache.fop.fo.FONode)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/layoutmgr/LayoutManagerMapping/makeLayoutManager(org.apache.fop.fo.FONode)#java/util/List/get(int)
org/apache/fop/layoutmgr/LayoutManagerMapping/makeLayoutManager(org.apache.fop.fo.FONode)#java/lang/StringBuilder/toString()
org/apache/fop/layoutmgr/LayoutManagerMapping/makeLayoutManager(org.apache.fop.fo.FONode)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/fop/layoutmgr/LayoutManagerMapping/makeLayoutManager(org.apache.fop.fo.FONode)#java/lang/Object/getClass()
org/apache/fop/render/ps/PSImageUtils/isImageInlined(org.apache.xmlgraphics.image.loader.ImageInfo,org.apache.fop.render.ps.PSRenderingContext)#org/apache/xmlgraphics/image/loader/ImageFlavor/equals(java.lang.Object)
org/apache/fop/render/ps/PSImageUtils/isImageInlined(org.apache.xmlgraphics.image.loader.ImageInfo,org.apache.fop.render.ps.PSRenderingContext)#org/apache/xmlgraphics/image/loader/ImageManager/choosePipeline(org.apache.xmlgraphics.image.loader.pipeline.ImageProviderPipeline[])
org/apache/fop/render/ps/PSImageUtils/isImageInlined(org.apache.xmlgraphics.image.loader.ImageInfo,org.apache.fop.render.ps.PSRenderingContext)#org/apache/xmlgraphics/image/loader/ImageManager/getPipelineFactory()
org/apache/fop/render/ps/PSImageUtils/isImageInlined(org.apache.xmlgraphics.image.loader.ImageInfo,org.apache.fop.render.ps.PSRenderingContext)#org/apache/xmlgraphics/image/loader/ImageInfo/getOriginalURI()
org/apache/fop/render/ps/PSImageUtils/isImageInlined(org.apache.xmlgraphics.image.loader.ImageInfo,org.apache.fop.render.ps.PSRenderingContext)#org/apache/xmlgraphics/image/loader/pipeline/PipelineFactory/determineCandidatePipelines(org.apache.xmlgraphics.image.loader.ImageInfo,org.apache.xmlgraphics.image.loader.ImageFlavor[])
org/apache/fop/render/ps/PSImageUtils/isImageInlined(org.apache.xmlgraphics.image.loader.ImageInfo,org.apache.fop.render.ps.PSRenderingContext)#java/lang/String/equals(java.lang.Object)
org/apache/fop/render/ps/PSImageUtils/isImageInlined(org.apache.xmlgraphics.image.loader.ImageInfo,org.apache.fop.render.ps.PSRenderingContext)#org/apache/xmlgraphics/image/loader/ImageInfo/getMimeType()
org/apache/fop/render/ps/PSImageUtils/isImageInlined(org.apache.xmlgraphics.image.loader.ImageInfo,org.apache.fop.render.ps.PSRenderingContext)#org/apache/fop/render/ps/PSRenderingContext/getUserAgent()
org/apache/fop/render/ps/PSImageUtils/isImageInlined(org.apache.xmlgraphics.image.loader.ImageInfo,org.apache.fop.render.ps.PSRenderingContext)#org/apache/xmlgraphics/image/loader/pipeline/ImageProviderPipeline/getTargetFlavor()
org/apache/fop/render/ps/PSImageUtils/drawForm(org.apache.xmlgraphics.ps.PSResource,org.apache.xmlgraphics.image.loader.ImageInfo,java.awt.Rectangle,org.apache.xmlgraphics.ps.PSGenerator)#java/awt/Rectangle/getWidth()
org/apache/fop/render/ps/PSImageUtils/drawForm(org.apache.xmlgraphics.ps.PSResource,org.apache.xmlgraphics.image.loader.ImageInfo,java.awt.Rectangle,org.apache.xmlgraphics.ps.PSGenerator)#org/apache/xmlgraphics/ps/PSGenerator/writeln(java.lang.String)
org/apache/fop/render/ps/PSImageUtils/drawForm(org.apache.xmlgraphics.ps.PSResource,org.apache.xmlgraphics.image.loader.ImageInfo,java.awt.Rectangle,org.apache.xmlgraphics.ps.PSGenerator)#org/apache/xmlgraphics/ps/dsc/ResourceTracker/notifyResourceUsageOnPage(org.apache.xmlgraphics.ps.PSResource)
org/apache/fop/render/ps/PSImageUtils/drawForm(org.apache.xmlgraphics.ps.PSResource,org.apache.xmlgraphics.image.loader.ImageInfo,java.awt.Rectangle,org.apache.xmlgraphics.ps.PSGenerator)#org/apache/fop/render/ps/PSImageUtils/translateAndScale(org.apache.xmlgraphics.ps.PSGenerator,java.awt.geom.Dimension2D,java.awt.geom.Rectangle2D)
org/apache/fop/render/ps/PSImageUtils/drawForm(org.apache.xmlgraphics.ps.PSResource,org.apache.xmlgraphics.image.loader.ImageInfo,java.awt.Rectangle,org.apache.xmlgraphics.ps.PSGenerator)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/render/ps/PSImageUtils/drawForm(org.apache.xmlgraphics.ps.PSResource,org.apache.xmlgraphics.image.loader.ImageInfo,java.awt.Rectangle,org.apache.xmlgraphics.ps.PSGenerator)#org/apache/xmlgraphics/ps/PSGenerator/getResourceTracker()
org/apache/fop/render/ps/PSImageUtils/drawForm(org.apache.xmlgraphics.ps.PSResource,org.apache.xmlgraphics.image.loader.ImageInfo,java.awt.Rectangle,org.apache.xmlgraphics.ps.PSGenerator)#java/awt/Rectangle/getMinX()
org/apache/fop/render/ps/PSImageUtils/drawForm(org.apache.xmlgraphics.ps.PSResource,org.apache.xmlgraphics.image.loader.ImageInfo,java.awt.Rectangle,org.apache.xmlgraphics.ps.PSGenerator)#org/apache/xmlgraphics/ps/PSGenerator/restoreGraphicsState()
org/apache/fop/render/ps/PSImageUtils/drawForm(org.apache.xmlgraphics.ps.PSResource,org.apache.xmlgraphics.image.loader.ImageInfo,java.awt.Rectangle,org.apache.xmlgraphics.ps.PSGenerator)#org/apache/xmlgraphics/ps/PSGenerator/saveGraphicsState()
org/apache/fop/render/ps/PSImageUtils/drawForm(org.apache.xmlgraphics.ps.PSResource,org.apache.xmlgraphics.image.loader.ImageInfo,java.awt.Rectangle,org.apache.xmlgraphics.ps.PSGenerator)#java/lang/StringBuilder/toString()
org/apache/fop/render/ps/PSImageUtils/drawForm(org.apache.xmlgraphics.ps.PSResource,org.apache.xmlgraphics.image.loader.ImageInfo,java.awt.Rectangle,org.apache.xmlgraphics.ps.PSGenerator)#org/apache/xmlgraphics/image/loader/ImageSize/getDimensionPt()
org/apache/fop/render/ps/PSImageUtils/drawForm(org.apache.xmlgraphics.ps.PSResource,org.apache.xmlgraphics.image.loader.ImageInfo,java.awt.Rectangle,org.apache.xmlgraphics.ps.PSGenerator)#org/apache/xmlgraphics/ps/PSResource/getName()
org/apache/fop/render/ps/PSImageUtils/drawForm(org.apache.xmlgraphics.ps.PSResource,org.apache.xmlgraphics.image.loader.ImageInfo,java.awt.Rectangle,org.apache.xmlgraphics.ps.PSGenerator)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/render/ps/PSImageUtils/drawForm(org.apache.xmlgraphics.ps.PSResource,org.apache.xmlgraphics.image.loader.ImageInfo,java.awt.Rectangle,org.apache.xmlgraphics.ps.PSGenerator)#org/apache/xmlgraphics/image/loader/ImageInfo/getSize()
org/apache/fop/render/ps/PSImageUtils/drawForm(org.apache.xmlgraphics.ps.PSResource,org.apache.xmlgraphics.image.loader.ImageInfo,java.awt.Rectangle,org.apache.xmlgraphics.ps.PSGenerator)#org/apache/xmlgraphics/ps/PSGenerator/writeDSCComment(java.lang.String,java.lang.Object)
org/apache/fop/render/ps/PSImageUtils/drawForm(org.apache.xmlgraphics.ps.PSResource,org.apache.xmlgraphics.image.loader.ImageInfo,java.awt.Rectangle,org.apache.xmlgraphics.ps.PSGenerator)#java/awt/geom/Rectangle2D$Double/Double(double,double,double,double)
org/apache/fop/render/ps/PSImageUtils/drawForm(org.apache.xmlgraphics.ps.PSResource,org.apache.xmlgraphics.image.loader.ImageInfo,java.awt.Rectangle,org.apache.xmlgraphics.ps.PSGenerator)#java/awt/Rectangle/getMinY()
org/apache/fop/render/ps/PSImageUtils/drawForm(org.apache.xmlgraphics.ps.PSResource,org.apache.xmlgraphics.image.loader.ImageInfo,java.awt.Rectangle,org.apache.xmlgraphics.ps.PSGenerator)#java/awt/Rectangle/getHeight()
org/apache/fop/svg/text/BidiAttributedCharacterIterator/annotateBidiLevels(java.text.AttributedCharacterIterator,int)#java/text/AttributedString/addAttribute(java.text.AttributedCharacterIterator$Attribute,java.lang.Object,int,int)
org/apache/fop/svg/text/BidiAttributedCharacterIterator/annotateBidiLevels(java.text.AttributedCharacterIterator,int)#java/lang/StringBuffer/StringBuffer(int)
org/apache/fop/svg/text/BidiAttributedCharacterIterator/annotateBidiLevels(java.text.AttributedCharacterIterator,int)#java/lang/Integer/Integer(int)
org/apache/fop/svg/text/BidiAttributedCharacterIterator/annotateBidiLevels(java.text.AttributedCharacterIterator,int)#java/lang/StringBuffer/append(char)
org/apache/fop/svg/text/BidiAttributedCharacterIterator/annotateBidiLevels(java.text.AttributedCharacterIterator,int)#java/text/AttributedCharacterIterator/getEndIndex()
org/apache/fop/svg/text/BidiAttributedCharacterIterator/annotateBidiLevels(java.text.AttributedCharacterIterator,int)#java/text/AttributedString/AttributedString(java.text.AttributedCharacterIterator,int,int)
org/apache/fop/svg/text/BidiAttributedCharacterIterator/annotateBidiLevels(java.text.AttributedCharacterIterator,int)#java/text/AttributedCharacterIterator/setIndex(int)
org/apache/fop/svg/text/BidiAttributedCharacterIterator/annotateBidiLevels(java.text.AttributedCharacterIterator,int)#java/text/AttributedString/getIterator()
org/apache/fop/svg/text/BidiAttributedCharacterIterator/annotateBidiLevels(java.text.AttributedCharacterIterator,int)#java/lang/AssertionError/AssertionError()
org/apache/fop/svg/text/BidiAttributedCharacterIterator/annotateBidiLevels(java.text.AttributedCharacterIterator,int)#java/text/AttributedCharacterIterator/getBeginIndex()
org/apache/fop/render/intermediate/IFSerializer/addForeignAttributes(org.xml.sax.helpers.AttributesImpl)#java/lang/Object/toString()
org/apache/fop/render/intermediate/IFSerializer/addForeignAttributes(org.xml.sax.helpers.AttributesImpl)#java/util/Map$Entry/getKey()
org/apache/fop/render/intermediate/IFSerializer/addForeignAttributes(org.xml.sax.helpers.AttributesImpl)#java/util/Map/isEmpty()
org/apache/fop/render/intermediate/IFSerializer/addForeignAttributes(org.xml.sax.helpers.AttributesImpl)#java/util/Iterator/next()
org/apache/fop/render/intermediate/IFSerializer/addForeignAttributes(org.xml.sax.helpers.AttributesImpl)#java/util/Set/iterator()
org/apache/fop/render/intermediate/IFSerializer/addForeignAttributes(org.xml.sax.helpers.AttributesImpl)#org/apache/fop/render/intermediate/IFSerializer/getContext()
org/apache/fop/render/intermediate/IFSerializer/addForeignAttributes(org.xml.sax.helpers.AttributesImpl)#java/util/Map$Entry/getValue()
org/apache/fop/render/intermediate/IFSerializer/addForeignAttributes(org.xml.sax.helpers.AttributesImpl)#java/util/Map/entrySet()
org/apache/fop/render/intermediate/IFSerializer/addForeignAttributes(org.xml.sax.helpers.AttributesImpl)#java/util/Iterator/hasNext()
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfExternalGraphic/setURL(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfExternalGraphic/setURL(java.lang.String)#java/io/File/File(java.lang.String)
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfExternalGraphic/setURL(java.lang.String)#org/apache/fop/render/rtf/rtflib/rtfdoc/RtfExternalGraphic$ExternalGraphicException/ExternalGraphicException(java.lang.String)
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfExternalGraphic/setURL(java.lang.String)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfExternalGraphic/setURL(java.lang.String)#java/lang/StringBuilder/toString()
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfExternalGraphic/setURL(java.lang.String)#java/net/URI/toURL()
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfExternalGraphic/setURL(java.lang.String)#java/net/URL/URL(java.lang.String)
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfExternalGraphic/setURL(java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfExternalGraphic/setURL(java.lang.String)#java/io/File/toURI()
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfExternalGraphic/writeRtfContentWithException()#java/io/Writer/write(char[])
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfExternalGraphic/writeRtfContentWithException()#org/apache/fop/render/rtf/rtflib/rtfdoc/RtfExternalGraphic/writeControlWord(java.lang.String)
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfExternalGraphic/writeRtfContentWithException()#org/apache/fop/render/rtf/rtflib/rtfdoc/RtfExternalGraphic/writeAttributes(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes,java.lang.String[])
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfExternalGraphic/writeRtfContentWithException()#java/lang/StringBuffer/StringBuffer(int)
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfExternalGraphic/writeRtfContentWithException()#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfExternalGraphic/writeRtfContentWithException()#java/lang/StringBuffer/append(char)
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfExternalGraphic/writeRtfContentWithException()#org/apache/fop/render/rtf/rtflib/rtfdoc/RtfExternalGraphic$FormatBase/convert(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfExternalGraphic$FormatBase,byte[])
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfExternalGraphic/writeRtfContentWithException()#java/lang/StringBuffer/length()
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfExternalGraphic/writeRtfContentWithException()#java/lang/Integer/toHexString(int)
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfExternalGraphic/writeRtfContentWithException()#org/apache/fop/render/rtf/rtflib/rtfdoc/RtfExternalGraphic/writeStarControlWord(java.lang.String)
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfExternalGraphic/writeRtfContentWithException()#java/io/File/File(java.lang.String)
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfExternalGraphic/writeRtfContentWithException()#org/apache/fop/render/rtf/rtflib/rtfdoc/RtfExternalGraphic$ExternalGraphicException/ExternalGraphicException(java.lang.String)
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfExternalGraphic/writeRtfContentWithException()#java/lang/StringBuffer/getChars(int,int,char[],int)
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfExternalGraphic/writeRtfContentWithException()#org/apache/fop/render/rtf/rtflib/rtfdoc/RtfExternalGraphic$FormatBase/getRtfTag()
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfExternalGraphic/writeRtfContentWithException()#java/lang/StringBuilder/append(java.lang.Object)
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfExternalGraphic/writeRtfContentWithException()#java/lang/StringBuffer/append(java.lang.String)
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfExternalGraphic/writeRtfContentWithException()#org/apache/fop/render/rtf/rtflib/rtfdoc/RtfExternalGraphic$FormatBase/getType()
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfExternalGraphic/writeRtfContentWithException()#java/lang/String/lastIndexOf(java.lang.String)
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfExternalGraphic/writeRtfContentWithException()#java/lang/StringBuilder/toString()
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfExternalGraphic/writeRtfContentWithException()#org/apache/fop/render/rtf/rtflib/rtfdoc/RtfExternalGraphic/getRtfAttributes()
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfExternalGraphic/writeRtfContentWithException()#java/io/File/getName()
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfExternalGraphic/writeRtfContentWithException()#java/net/URL/openStream()
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfExternalGraphic/writeRtfContentWithException()#org/apache/commons/io/IOUtils/closeQuietly(java.io.InputStream)
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfExternalGraphic/writeRtfContentWithException()#java/net/URL/getFile()
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfExternalGraphic/writeRtfContentWithException()#org/apache/fop/render/rtf/rtflib/rtfdoc/RtfExternalGraphic$FormatBase/determineFormat(byte[])
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfExternalGraphic/writeRtfContentWithException()#java/lang/String/equals(java.lang.Object)
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfExternalGraphic/writeRtfContentWithException()#org/apache/fop/render/rtf/rtflib/rtfdoc/RtfExternalGraphic/writeGroupMark(boolean)
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfExternalGraphic/writeRtfContentWithException()#java/lang/System/getProperty(java.lang.String)
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfExternalGraphic/writeRtfContentWithException()#java/lang/StringBuilder/StringBuilder()
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfExternalGraphic/writeRtfContentWithException()#java/io/Writer/write(java.lang.String)
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfExternalGraphic/writeRtfContentWithException()#java/lang/String/substring(int)
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfExternalGraphic/writeRtfContentWithException()#org/apache/commons/io/IOUtils/toByteArray(java.io.InputStream)
org/apache/fop/complexscripts/fonts/GlyphTable/ClassSequenceRule/toString()#java/lang/StringBuffer/toString()
org/apache/fop/complexscripts/fonts/GlyphTable/ClassSequenceRule/toString()#java/lang/StringBuilder/StringBuilder()
org/apache/fop/complexscripts/fonts/GlyphTable/ClassSequenceRule/toString()#org/apache/fop/complexscripts/fonts/GlyphTable$ClassSequenceRule/getLookups()
org/apache/fop/complexscripts/fonts/GlyphTable/ClassSequenceRule/toString()#java/util/Arrays/toString(int[])
org/apache/fop/complexscripts/fonts/GlyphTable/ClassSequenceRule/toString()#java/lang/StringBuffer/append(java.lang.String)
org/apache/fop/complexscripts/fonts/GlyphTable/ClassSequenceRule/toString()#java/lang/StringBuffer/StringBuffer()
org/apache/fop/complexscripts/fonts/GlyphTable/ClassSequenceRule/toString()#java/lang/StringBuilder/toString()
org/apache/fop/complexscripts/fonts/GlyphTable/ClassSequenceRule/toString()#java/util/Arrays/toString(java.lang.Object[])
org/apache/fop/complexscripts/fonts/GlyphTable/ClassSequenceRule/toString()#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/render/intermediate/IFParser/Handler/ImageHandler/endElement()#org/apache/fop/render/intermediate/IFParser$Handler/access$3200(org.apache.fop.render.intermediate.IFParser$Handler)
org/apache/fop/render/intermediate/IFParser/Handler/ImageHandler/endElement()#org/xml/sax/Attributes/getValue(java.lang.String)
org/apache/fop/render/intermediate/IFParser/Handler/ImageHandler/endElement()#org/apache/xmlgraphics/util/QName/getNamespaceURI()
org/apache/fop/render/intermediate/IFParser/Handler/ImageHandler/endElement()#java/lang/Integer/parseInt(java.lang.String)
org/apache/fop/render/intermediate/IFParser/Handler/ImageHandler/endElement()#org/apache/fop/render/intermediate/IFParser$Handler/access$2900(org.apache.fop.render.intermediate.IFParser$Handler)
org/apache/fop/render/intermediate/IFParser/Handler/ImageHandler/endElement()#org/apache/fop/render/intermediate/IFParser$Handler/access$3900(org.apache.fop.render.intermediate.IFParser$Handler)
org/apache/fop/render/intermediate/IFParser/Handler/ImageHandler/endElement()#org/apache/fop/render/intermediate/IFParser$Handler/access$2600(org.apache.fop.render.intermediate.IFParser$Handler)
org/apache/fop/render/intermediate/IFParser/Handler/ImageHandler/endElement()#org/apache/fop/render/intermediate/IFParser$Handler/access$3400(org.apache.fop.render.intermediate.IFParser$Handler,org.xml.sax.Attributes)
org/apache/fop/render/intermediate/IFParser/Handler/ImageHandler/endElement()#org/apache/fop/render/intermediate/IFParser$Handler/access$2800(org.apache.fop.render.intermediate.IFParser$Handler,java.util.Map)
org/apache/fop/render/intermediate/IFParser/Handler/ImageHandler/endElement()#java/awt/Rectangle/Rectangle(int,int,int,int)
org/apache/fop/render/intermediate/IFParser/Handler/ImageHandler/endElement()#org/apache/fop/render/intermediate/IFParser$Handler/access$3902(org.apache.fop.render.intermediate.IFParser$Handler,org.w3c.dom.Document)
org/apache/fop/render/intermediate/IFParser/Handler/ImageHandler/endElement()#org/apache/fop/render/intermediate/IFParser$Handler/access$2700(org.xml.sax.Attributes)
org/apache/fop/render/intermediate/IFParser/Handler/ImageHandler/endElement()#org/xml/sax/Attributes/getValue(java.lang.String,java.lang.String)
org/apache/fop/render/intermediate/IFParser/Handler/ImageHandler/endElement()#org/apache/xmlgraphics/util/QName/getLocalName()
org/apache/fop/render/intermediate/IFParser/Handler/ImageHandler/endElement()#org/apache/fop/render/intermediate/IFParser$Handler/access$3600(org.apache.fop.render.intermediate.IFParser$Handler)
org/apache/fop/render/intermediate/IFParser/Handler/ImageHandler/endElement()#org/apache/fop/render/intermediate/IFParser$Handler/access$3802(org.apache.fop.render.intermediate.IFParser$Handler,boolean)
org/apache/fop/render/ps/PSGraphicsPainter/drawLine(java.awt.Point,java.awt.Point,int,java.awt.Color,org.apache.fop.traits.RuleStyle)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/render/ps/PSGraphicsPainter/drawLine(java.awt.Point,java.awt.Point,int,java.awt.Color,org.apache.fop.traits.RuleStyle)#org/apache/xmlgraphics/ps/PSGenerator/mapCommand(java.lang.String)
org/apache/fop/render/ps/PSGraphicsPainter/drawLine(java.awt.Point,java.awt.Point,int,java.awt.Color,org.apache.fop.traits.RuleStyle)#org/apache/xmlgraphics/ps/PSGenerator/write(java.lang.String)
org/apache/fop/render/ps/PSGraphicsPainter/drawLine(java.awt.Point,java.awt.Point,int,java.awt.Color,org.apache.fop.traits.RuleStyle)#org/apache/xmlgraphics/ps/PSGenerator/writeln(java.lang.String)
org/apache/fop/render/ps/PSGraphicsPainter/drawLine(java.awt.Point,java.awt.Point,int,java.awt.Color,org.apache.fop.traits.RuleStyle)#java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)
org/apache/fop/render/ps/PSGraphicsPainter/drawLine(java.awt.Point,java.awt.Point,int,java.awt.Color,org.apache.fop.traits.RuleStyle)#java/lang/StringBuilder/toString()
org/apache/fop/render/ps/PSGraphicsPainter/drawLine(java.awt.Point,java.awt.Point,int,java.awt.Color,org.apache.fop.traits.RuleStyle)#org/apache/xmlgraphics/ps/PSGenerator/concatMatrix(double,double,double,double,double,double)
org/apache/fop/render/ps/PSGraphicsPainter/drawLine(java.awt.Point,java.awt.Point,int,java.awt.Color,org.apache.fop.traits.RuleStyle)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/render/ps/PSGraphicsPainter/drawLine(java.awt.Point,java.awt.Point,int,java.awt.Color,org.apache.fop.traits.RuleStyle)#org/apache/xmlgraphics/ps/PSGenerator/useColor(java.awt.Color)
org/apache/fop/render/ps/PSGraphicsPainter/drawLine(java.awt.Point,java.awt.Point,int,java.awt.Color,org.apache.fop.traits.RuleStyle)#org/apache/fop/traits/RuleStyle/getEnumValue()
org/apache/fop/render/ps/PSGraphicsPainter/drawBorderLine(org.apache.xmlgraphics.ps.PSGenerator,float,float,float,float,boolean,boolean,int,java.awt.Color)#java/lang/Math/abs(float)
org/apache/fop/render/ps/PSGraphicsPainter/drawBorderLine(org.apache.xmlgraphics.ps.PSGenerator,float,float,float,float,boolean,boolean,int,java.awt.Color)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/render/ps/PSGraphicsPainter/drawBorderLine(org.apache.xmlgraphics.ps.PSGenerator,float,float,float,float,boolean,boolean,int,java.awt.Color)#org/apache/xmlgraphics/ps/PSGenerator/useLineWidth(double)
org/apache/fop/render/ps/PSGraphicsPainter/drawBorderLine(org.apache.xmlgraphics.ps.PSGenerator,float,float,float,float,boolean,boolean,int,java.awt.Color)#java/lang/StringBuilder/append(float)
org/apache/fop/render/ps/PSGraphicsPainter/drawBorderLine(org.apache.xmlgraphics.ps.PSGenerator,float,float,float,float,boolean,boolean,int,java.awt.Color)#org/apache/xmlgraphics/ps/PSGenerator/useLineCap(int)
org/apache/fop/render/ps/PSGraphicsPainter/drawBorderLine(org.apache.xmlgraphics.ps.PSGenerator,float,float,float,float,boolean,boolean,int,java.awt.Color)#java/lang/StringBuilder/toString()
org/apache/fop/render/ps/PSGraphicsPainter/drawBorderLine(org.apache.xmlgraphics.ps.PSGenerator,float,float,float,float,boolean,boolean,int,java.awt.Color)#org/apache/xmlgraphics/ps/PSGenerator/useDash(java.lang.String)
org/apache/fop/render/ps/PSGraphicsPainter/drawBorderLine(org.apache.xmlgraphics.ps.PSGenerator,float,float,float,float,boolean,boolean,int,java.awt.Color)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/render/ps/PSGraphicsPainter/drawBorderLine(org.apache.xmlgraphics.ps.PSGenerator,float,float,float,float,boolean,boolean,int,java.awt.Color)#org/apache/xmlgraphics/ps/PSGenerator/useColor(java.awt.Color)
org/apache/fop/render/ps/PSGraphicsPainter/drawBorderLine(org.apache.xmlgraphics.ps.PSGenerator,float,float,float,float,boolean,boolean,int,java.awt.Color)#org/apache/commons/logging/Log/error(java.lang.Object)
org/apache/fop/fonts/type1/PostscriptParser/PSFixedArray/parseByte(byte,int)#java/util/LinkedHashMap/put(java.lang.Object,java.lang.Object)
org/apache/fop/fonts/type1/PostscriptParser/PSFixedArray/parseByte(byte,int)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/fonts/type1/PostscriptParser/PSFixedArray/parseByte(byte,int)#java/lang/Integer/parseInt(java.lang.String)
org/apache/fop/fonts/type1/PostscriptParser/PSFixedArray/parseByte(byte,int)#java/util/List/get(int)
org/apache/fop/fonts/type1/PostscriptParser/PSFixedArray/parseByte(byte,int)#java/lang/StringBuilder/toString()
org/apache/fop/fonts/type1/PostscriptParser/PSFixedArray/parseByte(byte,int)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/fonts/type1/PostscriptParser/PSFixedArray/parseByte(byte,int)#org/apache/fop/fonts/type1/PostscriptParser$PSFixedArray/parseToken(java.lang.String,int)
org/apache/fop/fonts/type1/PostscriptParser/PSFixedArray/parseByte(byte,int)#java/util/List/add(java.lang.Object)
org/apache/fop/fonts/type1/PostscriptParser/PSFixedArray/parseByte(byte,int)#java/lang/StringBuilder/append(char)
org/apache/fop/fonts/type1/PostscriptParser/PSFixedArray/addEntry(java.lang.String)#org/apache/fop/fonts/type1/PostscriptParser$PSFixedArray/setFoundUnexpected(boolean)
org/apache/fop/fonts/type1/PostscriptParser/PSFixedArray/addEntry(java.lang.String)#java/util/Scanner/useDelimiter(java.lang.String)
org/apache/fop/fonts/type1/PostscriptParser/PSFixedArray/addEntry(java.lang.String)#java/util/Scanner/nextInt()
org/apache/fop/fonts/type1/PostscriptParser/PSFixedArray/addEntry(java.lang.String)#java/lang/String/charAt(int)
org/apache/fop/fonts/type1/PostscriptParser/PSFixedArray/addEntry(java.lang.String)#java/util/Scanner/Scanner(java.lang.String)
org/apache/fop/fonts/type1/PostscriptParser/PSFixedArray/addEntry(java.lang.String)#java/lang/String/length()
org/apache/fop/fonts/type1/PostscriptParser/PSFixedArray/addEntry(java.lang.String)#java/util/HashMap/put(java.lang.Object,java.lang.Object)
org/apache/fop/fonts/type1/PostscriptParser/PSFixedArray/addEntry(java.lang.String)#java/lang/String/equals(java.lang.Object)
org/apache/fop/fonts/type1/PostscriptParser/PSFixedArray/addEntry(java.lang.String)#java/lang/String/replace(java.lang.CharSequence,java.lang.CharSequence)
org/apache/fop/fonts/type1/PostscriptParser/PSFixedArray/addEntry(java.lang.String)#java/util/Scanner/hasNext()
org/apache/fop/fonts/type1/PostscriptParser/PSFixedArray/addEntry(java.lang.String)#java/lang/Integer/valueOf(int)
org/apache/fop/fonts/type1/PostscriptParser/PSFixedArray/addEntry(java.lang.String)#java/util/Scanner/next()
org/apache/fop/fonts/type1/PostscriptParser/PSFixedArray/addEntry(java.lang.String)#java/lang/String/indexOf(int)
org/apache/fop/fonts/type1/PostscriptParser/PSFixedArray/parseToken(java.lang.String,int)#org/apache/fop/fonts/type1/PostscriptParser$PSFixedArray/checkForEnd(java.lang.String)
org/apache/fop/fonts/type1/PostscriptParser/PSFixedArray/parseToken(java.lang.String,int)#java/util/List/size()
org/apache/fop/fonts/type1/PostscriptParser/PSFixedArray/parseToken(java.lang.String,int)#java/lang/String/equals(java.lang.Object)
org/apache/fop/fonts/type1/PostscriptParser/PSFixedArray/parseToken(java.lang.String,int)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/fonts/type1/PostscriptParser/PSFixedArray/parseToken(java.lang.String,int)#java/util/List/add(java.lang.Object)
org/apache/fop/fonts/type1/PostscriptParser/PSFixedArray/parseToken(java.lang.String,int)#org/apache/fop/fonts/type1/PostscriptParser$PSFixedArray/isInteger(java.lang.String)
org/apache/fop/fonts/type1/PostscriptParser/PSFixedArray/parseToken(java.lang.String,int)#java/lang/StringBuilder/toString()
org/apache/fop/fonts/type1/PostscriptParser/PSFixedArray/parseToken(java.lang.String,int)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/fonts/type1/PostscriptParser/PSFixedArray/parseToken(java.lang.String,int)#java/lang/String/trim()
org/apache/fop/fonts/type1/PostscriptParser/PSFixedArray/parseToken(java.lang.String,int)#java/util/List/clear()
org/apache/fop/fonts/type1/PostscriptParser/PSFixedArray/parseToken(java.lang.String,int)#java/lang/Integer/parseInt(java.lang.String)
org/apache/fop/fonts/type1/PostscriptParser/PSFixedArray/parseToken(java.lang.String,int)#org/apache/fop/fonts/type1/PostscriptParser$PSFixedArray/addEntry(java.lang.String)
org/apache/fop/fonts/type1/PostscriptParser/PSFixedArray/parseToken(java.lang.String,int)#java/lang/String/startsWith(java.lang.String)
org/apache/fop/fonts/type1/PostscriptParser/PSFixedArray/parseToken(java.lang.String,int)#java/util/List/get(int)
org/apache/fop/layoutmgr/list/ListItemContentLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext)#java/util/LinkedList/listIterator()
org/apache/fop/layoutmgr/list/ListItemContentLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/layoutmgr/list/ListItemContentLayoutManager/checkEndOfLayout(org.apache.fop.layoutmgr.Position)
org/apache/fop/layoutmgr/list/ListItemContentLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext)#java/util/LinkedList/LinkedList()
org/apache/fop/layoutmgr/list/ListItemContentLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/layoutmgr/list/ListItemContentLayoutManager/registerMarkers(boolean,boolean,boolean)
org/apache/fop/layoutmgr/list/ListItemContentLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/layoutmgr/list/ListItemContentLayoutManager/isLast(org.apache.fop.layoutmgr.Position)
org/apache/fop/layoutmgr/list/ListItemContentLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/layoutmgr/list/ListItemContentLayoutManager/isFirst(org.apache.fop.layoutmgr.Position)
org/apache/fop/layoutmgr/list/ListItemContentLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext)#java/util/LinkedList/add(java.lang.Object)
org/apache/fop/layoutmgr/list/ListItemContentLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/layoutmgr/list/ListItemContentLayoutManager/addId()
org/apache/fop/layoutmgr/list/ListItemContentLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/layoutmgr/list/ListItemContentLayoutManager/flush()
org/apache/fop/apps/FopConfParser/setHyphPatNames(org.apache.avalon.framework.configuration.Configuration,org.apache.fop.apps.FopFactoryBuilder,boolean)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/apps/FopConfParser/setHyphPatNames(org.apache.avalon.framework.configuration.Configuration,org.apache.fop.apps.FopFactoryBuilder,boolean)#org/apache/avalon/framework/configuration/Configuration/getLocation()
org/apache/fop/apps/FopConfParser/setHyphPatNames(org.apache.avalon.framework.configuration.Configuration,org.apache.fop.apps.FopFactoryBuilder,boolean)#org/apache/avalon/framework/configuration/Configuration/getChildren(java.lang.String)
org/apache/fop/apps/FopConfParser/setHyphPatNames(org.apache.avalon.framework.configuration.Configuration,org.apache.fop.apps.FopFactoryBuilder,boolean)#java/util/HashMap/HashMap()
org/apache/fop/apps/FopConfParser/setHyphPatNames(org.apache.avalon.framework.configuration.Configuration,org.apache.fop.apps.FopFactoryBuilder,boolean)#java/util/Locale/getDefault()
org/apache/fop/apps/FopConfParser/setHyphPatNames(org.apache.avalon.framework.configuration.Configuration,org.apache.fop.apps.FopFactoryBuilder,boolean)#org/apache/avalon/framework/configuration/Configuration/getAttribute(java.lang.String,java.lang.String)
org/apache/fop/apps/FopConfParser/setHyphPatNames(org.apache.avalon.framework.configuration.Configuration,org.apache.fop.apps.FopFactoryBuilder,boolean)#java/lang/StringBuilder/toString()
org/apache/fop/apps/FopConfParser/setHyphPatNames(org.apache.avalon.framework.configuration.Configuration,org.apache.fop.apps.FopFactoryBuilder,boolean)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/fop/apps/FopConfParser/setHyphPatNames(org.apache.avalon.framework.configuration.Configuration,org.apache.fop.apps.FopFactoryBuilder,boolean)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/fop/apps/FopConfParser/setHyphPatNames(org.apache.avalon.framework.configuration.Configuration,org.apache.fop.apps.FopFactoryBuilder,boolean)#java/lang/String/toLowerCase(java.util.Locale)
org/apache/fop/apps/FopConfParser/setHyphPatNames(org.apache.avalon.framework.configuration.Configuration,org.apache.fop.apps.FopFactoryBuilder,boolean)#org/apache/commons/logging/Log/isDebugEnabled()
org/apache/fop/apps/FopConfParser/setHyphPatNames(org.apache.avalon.framework.configuration.Configuration,org.apache.fop.apps.FopFactoryBuilder,boolean)#java/lang/StringBuffer/length()
org/apache/fop/apps/FopConfParser/setHyphPatNames(org.apache.avalon.framework.configuration.Configuration,org.apache.fop.apps.FopFactoryBuilder,boolean)#org/apache/avalon/framework/configuration/Configuration/getValue(java.lang.String)
org/apache/fop/apps/FopConfParser/setHyphPatNames(org.apache.avalon.framework.configuration.Configuration,org.apache.fop.apps.FopFactoryBuilder,boolean)#java/lang/String/toUpperCase(java.util.Locale)
org/apache/fop/apps/FopConfParser/setHyphPatNames(org.apache.avalon.framework.configuration.Configuration,org.apache.fop.apps.FopFactoryBuilder,boolean)#java/lang/String/equals(java.lang.Object)
org/apache/fop/apps/FopConfParser/setHyphPatNames(org.apache.avalon.framework.configuration.Configuration,org.apache.fop.apps.FopFactoryBuilder,boolean)#java/lang/StringBuffer/toString()
org/apache/fop/apps/FopConfParser/setHyphPatNames(org.apache.avalon.framework.configuration.Configuration,org.apache.fop.apps.FopFactoryBuilder,boolean)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/apps/FopConfParser/setHyphPatNames(org.apache.avalon.framework.configuration.Configuration,org.apache.fop.apps.FopFactoryBuilder,boolean)#java/lang/String/matches(java.lang.String)
org/apache/fop/apps/FopConfParser/setHyphPatNames(org.apache.avalon.framework.configuration.Configuration,org.apache.fop.apps.FopFactoryBuilder,boolean)#java/lang/StringBuffer/StringBuffer()
org/apache/fop/apps/FopConfParser/configure(java.net.URI,org.apache.xmlgraphics.io.ResourceResolver,org.apache.avalon.framework.configuration.Configuration)#org/apache/avalon/framework/configuration/Configuration/getValue(java.lang.String)
org/apache/fop/apps/FopConfParser/configure(java.net.URI,org.apache.xmlgraphics.io.ResourceResolver,org.apache.avalon.framework.configuration.Configuration)#org/apache/commons/logging/Log/info(java.lang.Object)
org/apache/fop/apps/FopConfParser/configure(java.net.URI,org.apache.xmlgraphics.io.ResourceResolver,org.apache.avalon.framework.configuration.Configuration)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/apps/FopConfParser/configure(java.net.URI,org.apache.xmlgraphics.io.ResourceResolver,org.apache.avalon.framework.configuration.Configuration)#java/lang/StringBuilder/toString()
org/apache/fop/apps/FopConfParser/configure(java.net.URI,org.apache.xmlgraphics.io.ResourceResolver,org.apache.avalon.framework.configuration.Configuration)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/fop/apps/FopConfParser/configure(java.net.URI,org.apache.xmlgraphics.io.ResourceResolver,org.apache.avalon.framework.configuration.Configuration)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/apps/FopConfParser/configure(java.net.URI,org.apache.xmlgraphics.io.ResourceResolver,org.apache.avalon.framework.configuration.Configuration)#org/apache/commons/logging/Log/isInfoEnabled()
org/apache/fop/apps/FopConfParser/configure(java.net.URI,org.apache.xmlgraphics.io.ResourceResolver,org.apache.avalon.framework.configuration.Configuration)#org/apache/commons/logging/Log/isDebugEnabled()
org/apache/fop/apps/FopConfParser/configure(java.net.URI,org.apache.xmlgraphics.io.ResourceResolver,org.apache.avalon.framework.configuration.Configuration)#org/apache/avalon/framework/configuration/Configuration/getAttributeAsBoolean(java.lang.String,boolean)
org/apache/fop/apps/FopConfParser/configure(java.net.URI,org.apache.xmlgraphics.io.ResourceResolver,org.apache.avalon.framework.configuration.Configuration)#java/net/URI/resolve(java.net.URI)
org/apache/fop/apps/FopConfParser/configure(java.net.URI,org.apache.xmlgraphics.io.ResourceResolver,org.apache.avalon.framework.configuration.Configuration)#org/apache/avalon/framework/configuration/Configuration/getChild(java.lang.String)
org/apache/fop/apps/FopConfParser/configure(java.net.URI,org.apache.xmlgraphics.io.ResourceResolver,org.apache.avalon.framework.configuration.Configuration)#org/apache/avalon/framework/configuration/Configuration/getValueAsBoolean()
org/apache/fop/apps/FopConfParser/configure(java.net.URI,org.apache.xmlgraphics.io.ResourceResolver,org.apache.avalon.framework.configuration.Configuration)#org/apache/avalon/framework/configuration/Configuration/getChild(java.lang.String,boolean)
org/apache/fop/apps/FopConfParser/configure(java.net.URI,org.apache.xmlgraphics.io.ResourceResolver,org.apache.avalon.framework.configuration.Configuration)#org/apache/avalon/framework/configuration/Configuration/getValueAsFloat(float)
org/apache/fop/apps/FopConfParser/configure(java.net.URI,org.apache.xmlgraphics.io.ResourceResolver,org.apache.avalon.framework.configuration.Configuration)#org/apache/avalon/framework/configuration/Configuration/getAttribute(java.lang.String,java.lang.String)
org/apache/fop/apps/FopConfParser/configure(java.net.URI,org.apache.xmlgraphics.io.ResourceResolver,org.apache.avalon.framework.configuration.Configuration)#java/lang/StringBuilder/append(float)
org/apache/fop/apps/FopConfParser/configureImageLoading(org.apache.avalon.framework.configuration.Configuration,boolean)#org/apache/xmlgraphics/image/loader/spi/ImageImplRegistry/setAdditionalPenalty(java.lang.String,org.apache.xmlgraphics.image.loader.util.Penalty)
org/apache/fop/apps/FopConfParser/configureImageLoading(org.apache.avalon.framework.configuration.Configuration,boolean)#java/lang/String/toUpperCase(java.util.Locale)
org/apache/fop/apps/FopConfParser/configureImageLoading(org.apache.avalon.framework.configuration.Configuration,boolean)#org/apache/avalon/framework/configuration/Configuration/getChildren(java.lang.String)
org/apache/fop/apps/FopConfParser/configureImageLoading(org.apache.avalon.framework.configuration.Configuration,boolean)#org/apache/xmlgraphics/image/loader/ImageManager/getRegistry()
org/apache/fop/apps/FopConfParser/configureImageLoading(org.apache.avalon.framework.configuration.Configuration,boolean)#java/lang/Integer/parseInt(java.lang.String)
org/apache/fop/apps/FopConfParser/configureImageLoading(org.apache.avalon.framework.configuration.Configuration,boolean)#java/util/Locale/getDefault()
org/apache/fop/apps/FopConfParser/configureImageLoading(org.apache.avalon.framework.configuration.Configuration,boolean)#org/apache/xmlgraphics/image/loader/util/Penalty/toPenalty(int)
org/apache/fop/apps/FopConfParser/configureImageLoading(org.apache.avalon.framework.configuration.Configuration,boolean)#org/apache/avalon/framework/configuration/Configuration/getAttribute(java.lang.String)
org/apache/fop/apps/FopConfParser/configureImageLoading(org.apache.avalon.framework.configuration.Configuration,boolean)#java/lang/String/startsWith(java.lang.String)
org/apache/fop/fo/expr/RGBICCColorFunction/eval(org.apache.fop.fo.properties.Property[],org.apache.fop.fo.expr.PropertyInfo)#java/lang/Number/floatValue()
org/apache/fop/fo/expr/RGBICCColorFunction/eval(org.apache.fop.fo.properties.Property[],org.apache.fop.fo.expr.PropertyInfo)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/fo/expr/RGBICCColorFunction/eval(org.apache.fop.fo.properties.Property[],org.apache.fop.fo.expr.PropertyInfo)#java/lang/StringBuffer/append(java.lang.Object)
org/apache/fop/fo/expr/RGBICCColorFunction/eval(org.apache.fop.fo.properties.Property[],org.apache.fop.fo.expr.PropertyInfo)#java/lang/StringBuffer/toString()
org/apache/fop/fo/expr/RGBICCColorFunction/eval(org.apache.fop.fo.properties.Property[],org.apache.fop.fo.expr.PropertyInfo)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/fo/expr/RGBICCColorFunction/eval(org.apache.fop.fo.properties.Property[],org.apache.fop.fo.expr.PropertyInfo)#org/apache/fop/fo/FObj/getRoot()
org/apache/fop/fo/expr/RGBICCColorFunction/eval(org.apache.fop.fo.properties.Property[],org.apache.fop.fo.expr.PropertyInfo)#java/lang/StringBuffer/append(char)
org/apache/fop/fo/expr/RGBICCColorFunction/eval(org.apache.fop.fo.properties.Property[],org.apache.fop.fo.expr.PropertyInfo)#java/lang/StringBuffer/append(float)
org/apache/fop/fo/expr/RGBICCColorFunction/eval(org.apache.fop.fo.properties.Property[],org.apache.fop.fo.expr.PropertyInfo)#java/lang/StringBuffer/append(java.lang.String)
org/apache/fop/fo/expr/RGBICCColorFunction/eval(org.apache.fop.fo.properties.Property[],org.apache.fop.fo.expr.PropertyInfo)#java/lang/System/arraycopy(java.lang.Object,int,java.lang.Object,int,int)
org/apache/fop/fo/expr/RGBICCColorFunction/eval(org.apache.fop.fo.properties.Property[],org.apache.fop.fo.expr.PropertyInfo)#java/lang/StringBuffer/StringBuffer()
org/apache/fop/fo/expr/RGBICCColorFunction/eval(org.apache.fop.fo.properties.Property[],org.apache.fop.fo.expr.PropertyInfo)#java/lang/StringBuilder/toString()
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfExternalGraphic/FormatBase/determineFormat(byte[])#org/apache/fop/render/rtf/rtflib/rtfdoc/RtfExternalGraphic$FormatPNG/FormatPNG(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfExternalGraphic$1)
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfExternalGraphic/FormatBase/determineFormat(byte[])#org/apache/fop/render/rtf/rtflib/rtfdoc/RtfExternalGraphic$FormatPNG/isFormat(byte[])
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfExternalGraphic/FormatBase/determineFormat(byte[])#org/apache/fop/render/rtf/rtflib/rtfdoc/RtfExternalGraphic$FormatBMP/isFormat(byte[])
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfExternalGraphic/FormatBase/determineFormat(byte[])#org/apache/fop/render/rtf/rtflib/rtfdoc/RtfExternalGraphic$FormatGIF/isFormat(byte[])
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfExternalGraphic/FormatBase/determineFormat(byte[])#org/apache/fop/render/rtf/rtflib/rtfdoc/RtfExternalGraphic$FormatEMF/isFormat(byte[])
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfExternalGraphic/FormatBase/determineFormat(byte[])#org/apache/fop/render/rtf/rtflib/rtfdoc/RtfExternalGraphic$FormatJPG/FormatJPG(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfExternalGraphic$1)
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfExternalGraphic/FormatBase/determineFormat(byte[])#org/apache/fop/render/rtf/rtflib/rtfdoc/RtfExternalGraphic$FormatGIF/FormatGIF(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfExternalGraphic$1)
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfExternalGraphic/FormatBase/determineFormat(byte[])#org/apache/fop/render/rtf/rtflib/rtfdoc/RtfExternalGraphic$FormatBMP/FormatBMP(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfExternalGraphic$1)
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfExternalGraphic/FormatBase/determineFormat(byte[])#org/apache/fop/render/rtf/rtflib/rtfdoc/RtfExternalGraphic$FormatJPG/isFormat(byte[])
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfExternalGraphic/FormatBase/determineFormat(byte[])#org/apache/fop/render/rtf/rtflib/rtfdoc/RtfExternalGraphic$FormatEMF/FormatEMF(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfExternalGraphic$1)
org/apache/fop/pdf/PDFOutline/toPDF()#org/apache/fop/pdf/PDFOutline/referencePDF()
org/apache/fop/pdf/PDFOutline/toPDF()#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/pdf/PDFOutline/toPDF()#java/io/ByteArrayOutputStream/ByteArrayOutputStream(int)
org/apache/fop/pdf/PDFOutline/toPDF()#java/lang/StringBuilder/append(int)
org/apache/fop/pdf/PDFOutline/toPDF()#org/apache/fop/pdf/PDFOutline/encode(java.lang.String)
org/apache/fop/pdf/PDFOutline/toPDF()#java/lang/StringBuilder/StringBuilder()
org/apache/fop/pdf/PDFOutline/toPDF()#org/apache/commons/logging/Log/error(java.lang.Object,java.lang.Throwable)
org/apache/fop/pdf/PDFOutline/toPDF()#java/io/ByteArrayOutputStream/write(byte[])
org/apache/fop/pdf/PDFOutline/toPDF()#java/io/ByteArrayOutputStream/toByteArray()
org/apache/fop/pdf/PDFOutline/toPDF()#java/lang/StringBuilder/append(java.lang.Object)
org/apache/fop/pdf/PDFOutline/toPDF()#org/apache/fop/pdf/PDFOutline/encodeText(java.lang.String)
org/apache/fop/pdf/PDFOutline/toPDF()#java/lang/StringBuilder/toString()
org/apache/fop/fonts/base14/HelveticaBoldOblique/<clinit>()#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/fop/fonts/base14/HelveticaBoldOblique/<clinit>()#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/fonts/base14/HelveticaBoldOblique/<clinit>()#java/lang/Integer/Integer(int)
org/apache/fop/fonts/base14/HelveticaBoldOblique/<clinit>()#java/awt/Rectangle/Rectangle(int,int,int,int)
org/apache/fop/fonts/base14/HelveticaBoldOblique/<clinit>()#java/util/Map/get(java.lang.Object)
org/apache/fop/fonts/base14/HelveticaBoldOblique/<clinit>()#java/util/HashMap/HashMap()
org/apache/fop/fonts/base14/HelveticaBoldOblique/<clinit>()#java/lang/StringBuilder/StringBuilder()
org/apache/fop/fonts/base14/HelveticaBoldOblique/<clinit>()#java/util/HashSet/HashSet()
org/apache/fop/fonts/base14/HelveticaBoldOblique/<clinit>()#java/util/Set/add(java.lang.Object)
org/apache/fop/fonts/base14/HelveticaBoldOblique/<clinit>()#java/lang/StringBuilder/toString()
org/apache/fop/fonts/base14/HelveticaBoldOblique/<clinit>()#java/net/URI/URI(java.lang.String)
org/apache/fop/fonts/base14/HelveticaBoldOblique/<clinit>()#java/lang/String/toLowerCase()
org/apache/fop/fonts/GlyphMapping/processWordMapping(org.apache.fop.fonts.TextFragment,int,int,org.apache.fop.fonts.Font,char,boolean,int,boolean,boolean,boolean)#java/lang/CharSequence/length()
org/apache/fop/fonts/GlyphMapping/processWordMapping(org.apache.fop.fonts.TextFragment,int,int,org.apache.fop.fonts.Font,char,boolean,int,boolean,boolean,boolean)#java/lang/StringBuilder/append(int)
org/apache/fop/fonts/GlyphMapping/processWordMapping(org.apache.fop.fonts.TextFragment,int,int,org.apache.fop.fonts.Font,char,boolean,int,boolean,boolean,boolean)#java/lang/CharSequence/charAt(int)
org/apache/fop/fonts/GlyphMapping/processWordMapping(org.apache.fop.fonts.TextFragment,int,int,org.apache.fop.fonts.Font,char,boolean,int,boolean,boolean,boolean)#java/lang/String/equals(java.lang.Object)
org/apache/fop/fonts/GlyphMapping/processWordMapping(org.apache.fop.fonts.TextFragment,int,int,org.apache.fop.fonts.Font,char,boolean,int,boolean,boolean,boolean)#java/lang/StringBuilder/toString()
org/apache/fop/fonts/GlyphMapping/processWordMapping(org.apache.fop.fonts.TextFragment,int,int,org.apache.fop.fonts.Font,char,boolean,int,boolean,boolean,boolean)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/fop/fonts/GlyphMapping/processWordMapping(org.apache.fop.fonts.TextFragment,int,int,org.apache.fop.fonts.Font,char,boolean,int,boolean,boolean,boolean)#java/util/ArrayList/ArrayList()
org/apache/fop/fonts/GlyphMapping/processWordMapping(org.apache.fop.fonts.TextFragment,int,int,org.apache.fop.fonts.Font,char,boolean,int,boolean,boolean,boolean)#java/lang/Object/toString()
org/apache/fop/fonts/GlyphMapping/processWordMapping(org.apache.fop.fonts.TextFragment,int,int,org.apache.fop.fonts.Font,char,boolean,int,boolean,boolean,boolean)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/fonts/GlyphMapping/processWordMapping(org.apache.fop.fonts.TextFragment,int,int,org.apache.fop.fonts.Font,char,boolean,int,boolean,boolean,boolean)#org/apache/commons/logging/Log/isDebugEnabled()
org/apache/fop/fonts/GlyphMapping/processWordMapping(org.apache.fop.fonts.TextFragment,int,int,org.apache.fop.fonts.Font,char,boolean,int,boolean,boolean,boolean)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/util/DOM2SAX/writeNode(org.w3c.dom.Node)#org/xml/sax/helpers/AttributesImpl/AttributesImpl()
org/apache/fop/util/DOM2SAX/writeNode(org.w3c.dom.Node)#java/lang/String/length()
org/apache/fop/util/DOM2SAX/writeNode(org.w3c.dom.Node)#org/w3c/dom/Node/getFirstChild()
org/apache/fop/util/DOM2SAX/writeNode(org.w3c.dom.Node)#org/w3c/dom/Node/getNodeName()
org/apache/fop/util/DOM2SAX/writeNode(org.w3c.dom.Node)#java/lang/String/substring(int,int)
org/apache/fop/util/DOM2SAX/writeNode(org.w3c.dom.Node)#java/lang/String/substring(int)
org/apache/fop/util/DOM2SAX/writeNode(org.w3c.dom.Node)#org/xml/sax/ContentHandler/processingInstruction(java.lang.String,java.lang.String)
org/apache/fop/util/DOM2SAX/writeNode(org.w3c.dom.Node)#org/xml/sax/ContentHandler/characters(char[],int,int)
org/apache/fop/util/DOM2SAX/writeNode(org.w3c.dom.Node)#org/xml/sax/ContentHandler/startDocument()
org/apache/fop/util/DOM2SAX/writeNode(org.w3c.dom.Node)#org/xml/sax/ext/LexicalHandler/endCDATA()
org/apache/fop/util/DOM2SAX/writeNode(org.w3c.dom.Node)#org/w3c/dom/Node/getNodeValue()
org/apache/fop/util/DOM2SAX/writeNode(org.w3c.dom.Node)#org/w3c/dom/Node/getNextSibling()
org/apache/fop/util/DOM2SAX/writeNode(org.w3c.dom.Node)#java/util/ArrayList/ArrayList()
org/apache/fop/util/DOM2SAX/writeNode(org.w3c.dom.Node)#org/w3c/dom/NamedNodeMap/getLength()
org/apache/fop/util/DOM2SAX/writeNode(org.w3c.dom.Node)#org/xml/sax/ext/LexicalHandler/comment(char[],int,int)
org/apache/fop/util/DOM2SAX/writeNode(org.w3c.dom.Node)#java/util/List/size()
org/apache/fop/util/DOM2SAX/writeNode(org.w3c.dom.Node)#org/xml/sax/ContentHandler/endElement(java.lang.String,java.lang.String,java.lang.String)
org/apache/fop/util/DOM2SAX/writeNode(org.w3c.dom.Node)#java/lang/String/lastIndexOf(int)
org/apache/fop/util/DOM2SAX/writeNode(org.w3c.dom.Node)#org/w3c/dom/Node/getNamespaceURI()
org/apache/fop/util/DOM2SAX/writeNode(org.w3c.dom.Node)#java/util/List/add(java.lang.Object)
org/apache/fop/util/DOM2SAX/writeNode(org.w3c.dom.Node)#org/xml/sax/ContentHandler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)
org/apache/fop/util/DOM2SAX/writeNode(org.w3c.dom.Node)#org/xml/sax/helpers/AttributesImpl/addAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
org/apache/fop/util/DOM2SAX/writeNode(org.w3c.dom.Node)#java/lang/String/toCharArray()
org/apache/fop/util/DOM2SAX/writeNode(org.w3c.dom.Node)#java/lang/String/startsWith(java.lang.String)
org/apache/fop/util/DOM2SAX/writeNode(org.w3c.dom.Node)#java/util/List/get(int)
org/apache/fop/util/DOM2SAX/writeNode(org.w3c.dom.Node)#org/xml/sax/ext/LexicalHandler/startCDATA()
org/apache/fop/util/DOM2SAX/writeNode(org.w3c.dom.Node)#org/xml/sax/ContentHandler/endDocument()
org/apache/fop/util/DOM2SAX/writeNode(org.w3c.dom.Node)#org/w3c/dom/Node/getAttributes()
org/apache/fop/util/DOM2SAX/writeNode(org.w3c.dom.Node)#org/w3c/dom/NamedNodeMap/item(int)
org/apache/fop/util/DOM2SAX/writeNode(org.w3c.dom.Node)#org/w3c/dom/Node/getNodeType()
org/apache/fop/layoutmgr/BreakingAlgorithm/createForcedNodes(org.apache.fop.layoutmgr.BreakingAlgorithm$KnuthNode,int,int,int,double,double,int,int,int,int,int,int)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/fop/layoutmgr/BreakingAlgorithm/createForcedNodes(org.apache.fop.layoutmgr.BreakingAlgorithm$KnuthNode,int,int,int,double,double,int,int,int,int,int,int)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/layoutmgr/BreakingAlgorithm/createForcedNodes(org.apache.fop.layoutmgr.BreakingAlgorithm$KnuthNode,int,int,int,double,double,int,int,int,int,int,int)#org/apache/fop/layoutmgr/BreakingAlgorithm$BestRecords/addRecord(double,org.apache.fop.layoutmgr.BreakingAlgorithm$KnuthNode,double,int,int,int,int)
org/apache/fop/layoutmgr/BreakingAlgorithm/createForcedNodes(org.apache.fop.layoutmgr.BreakingAlgorithm$KnuthNode,int,int,int,double,double,int,int,int,int,int,int)#java/lang/StringBuilder/append(double)
org/apache/fop/layoutmgr/BreakingAlgorithm/createForcedNodes(org.apache.fop.layoutmgr.BreakingAlgorithm$KnuthNode,int,int,int,double,double,int,int,int,int,int,int)#java/lang/StringBuilder/toString()
org/apache/fop/layoutmgr/BreakingAlgorithm/createForcedNodes(org.apache.fop.layoutmgr.BreakingAlgorithm$KnuthNode,int,int,int,double,double,int,int,int,int,int,int)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/layoutmgr/BreakingAlgorithm/createForcedNodes(org.apache.fop.layoutmgr.BreakingAlgorithm$KnuthNode,int,int,int,double,double,int,int,int,int,int,int)#org/apache/commons/logging/Log/trace(java.lang.Object)
org/apache/fop/layoutmgr/BreakingAlgorithm/createForcedNodes(org.apache.fop.layoutmgr.BreakingAlgorithm$KnuthNode,int,int,int,double,double,int,int,int,int,int,int)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/fop/layoutmgr/BreakingAlgorithm/createForcedNodes(org.apache.fop.layoutmgr.BreakingAlgorithm$KnuthNode,int,int,int,double,double,int,int,int,int,int,int)#org/apache/commons/logging/Log/isTraceEnabled()
org/apache/fop/layoutmgr/BreakingAlgorithm/addBreaks(int,int)#org/apache/fop/layoutmgr/BreakingAlgorithm$BestRecords/getDemerits(int)
org/apache/fop/layoutmgr/BreakingAlgorithm/addBreaks(int,int)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/layoutmgr/BreakingAlgorithm/addBreaks(int,int)#java/lang/StringBuilder/append(int)
org/apache/fop/layoutmgr/BreakingAlgorithm/addBreaks(int,int)#org/apache/commons/logging/Log/isTraceEnabled()
org/apache/fop/layoutmgr/BreakingAlgorithm/addBreaks(int,int)#org/apache/fop/layoutmgr/KnuthElement/isForcedBreak()
org/apache/fop/layoutmgr/BreakingAlgorithm/addBreaks(int,int)#java/lang/StringBuilder/toString()
org/apache/fop/layoutmgr/BreakingAlgorithm/addBreaks(int,int)#org/apache/fop/layoutmgr/BreakingAlgorithm$BestRecords/reset()
org/apache/fop/layoutmgr/BreakingAlgorithm/addBreaks(int,int)#org/apache/fop/layoutmgr/KnuthElement/isBox()
org/apache/fop/layoutmgr/BreakingAlgorithm/addBreaks(int,int)#org/apache/fop/layoutmgr/KnuthSequence/size()
org/apache/fop/layoutmgr/BreakingAlgorithm/addBreaks(int,int)#org/apache/fop/layoutmgr/BreakingAlgorithm$BestRecords/hasRecords()
org/apache/fop/layoutmgr/BreakingAlgorithm/addBreaks(int,int)#org/apache/fop/layoutmgr/BreakingAlgorithm$BestRecords/notInfiniteDemerits(int)
org/apache/fop/layoutmgr/BreakingAlgorithm/addBreaks(int,int)#org/apache/fop/layoutmgr/BreakingAlgorithm$BestRecords/getMinDemerits()
org/apache/fop/layoutmgr/BreakingAlgorithm/addBreaks(int,int)#org/apache/fop/layoutmgr/KnuthElement/isGlue()
org/apache/fop/layoutmgr/BreakingAlgorithm/addBreaks(int,int)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/layoutmgr/BreakingAlgorithm/addBreaks(int,int)#org/apache/commons/logging/Log/trace(java.lang.Object)
org/apache/fop/layoutmgr/BreakingAlgorithm/considerLegalBreak(org.apache.fop.layoutmgr.KnuthElement,int)#java/lang/StringBuilder/append(int)
org/apache/fop/layoutmgr/BreakingAlgorithm/considerLegalBreak(org.apache.fop.layoutmgr.KnuthElement,int)#java/lang/StringBuilder/append(double)
org/apache/fop/layoutmgr/BreakingAlgorithm/considerLegalBreak(org.apache.fop.layoutmgr.KnuthElement,int)#java/lang/StringBuilder/toString()
org/apache/fop/layoutmgr/BreakingAlgorithm/considerLegalBreak(org.apache.fop.layoutmgr.KnuthElement,int)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/layoutmgr/BreakingAlgorithm/considerLegalBreak(org.apache.fop.layoutmgr.KnuthElement,int)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/layoutmgr/BreakingAlgorithm/considerLegalBreak(org.apache.fop.layoutmgr.KnuthElement,int)#org/apache/fop/layoutmgr/BreakingAlgorithm$FitnessClasses/computeFitness(double)
org/apache/fop/layoutmgr/BreakingAlgorithm/considerLegalBreak(org.apache.fop.layoutmgr.KnuthElement,int)#org/apache/commons/logging/Log/trace(java.lang.Object)
org/apache/fop/layoutmgr/BreakingAlgorithm/considerLegalBreak(org.apache.fop.layoutmgr.KnuthElement,int)#org/apache/commons/logging/Log/isTraceEnabled()
org/apache/fop/layoutmgr/BreakingAlgorithm/considerLegalBreak(org.apache.fop.layoutmgr.KnuthElement,int)#org/apache/fop/layoutmgr/KnuthElement/isForcedBreak()
org/apache/fop/layoutmgr/BreakingAlgorithm/findBreakingPoints(org.apache.fop.layoutmgr.KnuthSequence,int,double,boolean,int)#org/apache/fop/layoutmgr/KnuthElement/isBox()
org/apache/fop/layoutmgr/BreakingAlgorithm/findBreakingPoints(org.apache.fop.layoutmgr.KnuthSequence,int,double,boolean,int)#java/lang/StringBuilder/append(int)
org/apache/fop/layoutmgr/BreakingAlgorithm/findBreakingPoints(org.apache.fop.layoutmgr.KnuthSequence,int,double,boolean,int)#org/apache/commons/logging/Log/isTraceEnabled()
org/apache/fop/layoutmgr/BreakingAlgorithm/findBreakingPoints(org.apache.fop.layoutmgr.KnuthSequence,int,double,boolean,int)#java/lang/StringBuilder/append(double)
org/apache/fop/layoutmgr/BreakingAlgorithm/findBreakingPoints(org.apache.fop.layoutmgr.KnuthSequence,int,double,boolean,int)#java/lang/StringBuilder/toString()
org/apache/fop/layoutmgr/BreakingAlgorithm/findBreakingPoints(org.apache.fop.layoutmgr.KnuthSequence,int,double,boolean,int)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/fop/layoutmgr/BreakingAlgorithm/findBreakingPoints(org.apache.fop.layoutmgr.KnuthSequence,int,double,boolean,int)#org/apache/fop/layoutmgr/KnuthSequence/size()
org/apache/fop/layoutmgr/BreakingAlgorithm/findBreakingPoints(org.apache.fop.layoutmgr.KnuthSequence,int,double,boolean,int)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/layoutmgr/BreakingAlgorithm/findBreakingPoints(org.apache.fop.layoutmgr.KnuthSequence,int,double,boolean,int)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/layoutmgr/BreakingAlgorithm/findBreakingPoints(org.apache.fop.layoutmgr.KnuthSequence,int,double,boolean,int)#org/apache/commons/logging/Log/trace(java.lang.Object)
org/apache/fop/render/ps/PSImageHandlerRawJPEG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/xmlgraphics/image/loader/impl/ImageRawJPEG/getColorSpace()
org/apache/fop/render/ps/PSImageHandlerRawJPEG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/xmlgraphics/image/loader/Image/getInfo()
org/apache/fop/render/ps/PSImageHandlerRawJPEG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/xmlgraphics/image/loader/ImageInfo/getSize()
org/apache/fop/render/ps/PSImageHandlerRawJPEG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/awt/geom/Rectangle2D$Float/Float(float,float,float,float)
org/apache/fop/render/ps/PSImageHandlerRawJPEG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/awt/Rectangle/getHeight()
org/apache/fop/render/ps/PSImageHandlerRawJPEG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/awt/Rectangle/getX()
org/apache/fop/render/ps/PSImageHandlerRawJPEG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/awt/Rectangle/getY()
org/apache/fop/render/ps/PSImageHandlerRawJPEG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/xmlgraphics/image/loader/impl/ImageRawJPEG/isInverted()
org/apache/fop/render/ps/PSImageHandlerRawJPEG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/xmlgraphics/ps/PSImageUtils/writeImage(org.apache.xmlgraphics.ps.ImageEncoder,java.awt.Dimension,java.lang.String,java.awt.geom.Rectangle2D,java.awt.color.ColorSpace,int,boolean,org.apache.xmlgraphics.ps.PSGenerator)
org/apache/fop/render/ps/PSImageHandlerRawJPEG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/xmlgraphics/image/loader/ImageSize/getDimensionPx()
org/apache/fop/render/ps/PSImageHandlerRawJPEG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/awt/Rectangle/getWidth()
org/apache/fop/render/ps/PSImageHandlerRawJPEG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/xmlgraphics/image/loader/ImageInfo/getOriginalURI()
org/apache/fop/render/ps/PSImageHandlerRawJPEG/generateForm(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,org.apache.fop.render.ps.PSImageFormResource)#org/apache/xmlgraphics/image/loader/ImageSize/getDimensionPt()
org/apache/fop/render/ps/PSImageHandlerRawJPEG/generateForm(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,org.apache.fop.render.ps.PSImageFormResource)#org/apache/xmlgraphics/image/loader/impl/ImageRawJPEG/isInverted()
org/apache/fop/render/ps/PSImageHandlerRawJPEG/generateForm(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,org.apache.fop.render.ps.PSImageFormResource)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/render/ps/PSImageHandlerRawJPEG/generateForm(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,org.apache.fop.render.ps.PSImageFormResource)#org/apache/xmlgraphics/image/loader/ImageInfo/getMimeType()
org/apache/fop/render/ps/PSImageHandlerRawJPEG/generateForm(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,org.apache.fop.render.ps.PSImageFormResource)#java/lang/StringBuilder/toString()
org/apache/fop/render/ps/PSImageHandlerRawJPEG/generateForm(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,org.apache.fop.render.ps.PSImageFormResource)#org/apache/xmlgraphics/image/loader/impl/ImageRawJPEG/getColorSpace()
org/apache/fop/render/ps/PSImageHandlerRawJPEG/generateForm(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,org.apache.fop.render.ps.PSImageFormResource)#org/apache/fop/render/ps/PSImageFormResource/getName()
org/apache/fop/render/ps/PSImageHandlerRawJPEG/generateForm(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,org.apache.fop.render.ps.PSImageFormResource)#org/apache/xmlgraphics/image/loader/Image/getInfo()
org/apache/fop/render/ps/PSImageHandlerRawJPEG/generateForm(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,org.apache.fop.render.ps.PSImageFormResource)#org/apache/xmlgraphics/ps/FormGenerator/generate(org.apache.xmlgraphics.ps.PSGenerator)
org/apache/fop/render/ps/PSImageHandlerRawJPEG/generateForm(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,org.apache.fop.render.ps.PSImageFormResource)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/render/ps/PSImageHandlerRawJPEG/generateForm(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,org.apache.fop.render.ps.PSImageFormResource)#org/apache/xmlgraphics/image/loader/ImageInfo/getSize()
org/apache/fop/render/ps/PSImageHandlerRawJPEG/generateForm(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,org.apache.fop.render.ps.PSImageFormResource)#org/apache/xmlgraphics/image/loader/ImageSize/getDimensionPx()
org/apache/fop/render/ps/PSImageHandlerRawJPEG/generateForm(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,org.apache.fop.render.ps.PSImageFormResource)#org/apache/xmlgraphics/image/loader/ImageInfo/getOriginalURI()
org/apache/fop/render/ps/PSImageHandlerRawJPEG/generateForm(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,org.apache.fop.render.ps.PSImageFormResource)#org/apache/xmlgraphics/ps/ImageFormGenerator/ImageFormGenerator(java.lang.String,java.lang.String,java.awt.geom.Dimension2D,java.awt.Dimension,org.apache.xmlgraphics.ps.ImageEncoder,java.awt.color.ColorSpace,boolean)
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfFontManager/writeFonts(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfHeader)#org/apache/fop/render/rtf/rtflib/rtfdoc/RtfHeader/writeGroupMark(boolean)
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfFontManager/writeFonts(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfHeader)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfFontManager/writeFonts(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfHeader)#java/util/Vector/size()
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfFontManager/writeFonts(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfHeader)#java/lang/StringBuilder/append(int)
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfFontManager/writeFonts(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfHeader)#org/apache/fop/render/rtf/rtflib/rtfdoc/RtfHeader/writeControlWord(java.lang.String)
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfFontManager/writeFonts(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfHeader)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfFontManager/writeFonts(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfHeader)#java/util/Vector/elementAt(int)
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfFontManager/writeFonts(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfHeader)#java/lang/StringBuilder/toString()
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfFontManager/writeFonts(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfHeader)#org/apache/fop/render/rtf/rtflib/rtfdoc/RtfHeader/newLine()
org/apache/fop/render/java2d/ConfiguredFontCollection/setup(int,org.apache.fop.fonts.FontInfo)#java/util/Iterator/hasNext()
org/apache/fop/render/java2d/ConfiguredFontCollection/setup(int,org.apache.fop.fonts.FontInfo)#org/apache/commons/logging/Log/warn(java.lang.Object,java.lang.Throwable)
org/apache/fop/render/java2d/ConfiguredFontCollection/setup(int,org.apache.fop.fonts.FontInfo)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/render/java2d/ConfiguredFontCollection/setup(int,org.apache.fop.fonts.FontInfo)#java/lang/StringBuilder/append(int)
org/apache/fop/render/java2d/ConfiguredFontCollection/setup(int,org.apache.fop.fonts.FontInfo)#org/apache/commons/logging/Log/isDebugEnabled()
org/apache/fop/render/java2d/ConfiguredFontCollection/setup(int,org.apache.fop.fonts.FontInfo)#java/util/List/iterator()
org/apache/fop/render/java2d/ConfiguredFontCollection/setup(int,org.apache.fop.fonts.FontInfo)#java/lang/StringBuilder/toString()
org/apache/fop/render/java2d/ConfiguredFontCollection/setup(int,org.apache.fop.fonts.FontInfo)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/fop/render/java2d/ConfiguredFontCollection/setup(int,org.apache.fop.fonts.FontInfo)#java/util/List/size()
org/apache/fop/render/java2d/ConfiguredFontCollection/setup(int,org.apache.fop.fonts.FontInfo)#java/util/Iterator/next()
org/apache/fop/render/java2d/ConfiguredFontCollection/setup(int,org.apache.fop.fonts.FontInfo)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/render/java2d/ConfiguredFontCollection/setup(int,org.apache.fop.fonts.FontInfo)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/fop/util/ColorExt/toFunctionCall()#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/util/ColorExt/toFunctionCall()#java/lang/StringBuffer/append(float)
org/apache/fop/util/ColorExt/toFunctionCall()#java/lang/StringBuffer/toString()
org/apache/fop/util/ColorExt/toFunctionCall()#java/lang/StringBuilder/StringBuilder()
org/apache/fop/util/ColorExt/toFunctionCall()#java/lang/StringBuffer/append(java.lang.String)
org/apache/fop/util/ColorExt/toFunctionCall()#java/lang/StringBuilder/append(float)
org/apache/fop/util/ColorExt/toFunctionCall()#java/lang/StringBuilder/toString()
org/apache/fop/util/ColorExt/toFunctionCall()#java/lang/StringBuffer/StringBuffer(int)
org/apache/fop/util/ColorExt/toFunctionCall()#org/apache/fop/util/ColorExt/getColorComponents(float[])
org/apache/fop/fonts/type1/PostscriptParser/parse(byte[])#java/util/ArrayList/ArrayList()
org/apache/fop/fonts/type1/PostscriptParser/parse(byte[])#org/apache/fop/fonts/type1/PostscriptParser$PSSubroutine/getOperator()
org/apache/fop/fonts/type1/PostscriptParser/parse(byte[])#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/fonts/type1/PostscriptParser/parse(byte[])#java/lang/String/length()
org/apache/fop/fonts/type1/PostscriptParser/parse(byte[])#org/apache/fop/fonts/type1/PostscriptParser$PSVariable/PSVariable(org.apache.fop.fonts.type1.PostscriptParser,java.lang.String,int)
org/apache/fop/fonts/type1/PostscriptParser/parse(byte[])#java/util/List/size()
org/apache/fop/fonts/type1/PostscriptParser/parse(byte[])#java/util/HashMap/put(java.lang.Object,java.lang.Object)
org/apache/fop/fonts/type1/PostscriptParser/parse(byte[])#java/lang/String/equals(java.lang.Object)
org/apache/fop/fonts/type1/PostscriptParser/parse(byte[])#java/lang/StringBuilder/StringBuilder()
org/apache/fop/fonts/type1/PostscriptParser/parse(byte[])#org/apache/fop/fonts/type1/PostscriptParser$PSElement/parse(byte,int)
org/apache/fop/fonts/type1/PostscriptParser/parse(byte[])#java/util/List/clear()
org/apache/fop/fonts/type1/PostscriptParser/parse(byte[])#java/lang/StringBuilder/length()
org/apache/fop/fonts/type1/PostscriptParser/parse(byte[])#java/lang/StringBuilder/charAt(int)
org/apache/fop/fonts/type1/PostscriptParser/parse(byte[])#org/apache/fop/fonts/type1/PostscriptParser$PSElement/hasMore()
org/apache/fop/fonts/type1/PostscriptParser/parse(byte[])#org/apache/fop/fonts/type1/PostscriptParser$PSElement/getOperator()
org/apache/fop/fonts/type1/PostscriptParser/parse(byte[])#org/apache/commons/logging/Log/warn(java.lang.Object)
org/apache/fop/fonts/type1/PostscriptParser/parse(byte[])#java/util/List/add(java.lang.Object)
org/apache/fop/fonts/type1/PostscriptParser/parse(byte[])#java/lang/StringBuilder/append(char)
org/apache/fop/fonts/type1/PostscriptParser/parse(byte[])#java/util/List/get(int)
org/apache/fop/fonts/type1/PostscriptParser/parse(byte[])#org/apache/fop/fonts/type1/PostscriptParser$PSVariable/setEndPoint(int)
org/apache/fop/fonts/type1/PostscriptParser/parse(byte[])#org/apache/fop/fonts/type1/PostscriptParser$PSVariable/setValue(java.lang.String)
org/apache/fop/fonts/type1/PostscriptParser/parse(byte[])#java/lang/StringBuilder/toString()
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfTextrun/addParagraphBreak()#java/lang/Integer/intValue()
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfTextrun/addParagraphBreak()#java/util/ListIterator/remove()
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfTextrun/addParagraphBreak()#java/util/Stack/Stack()
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfTextrun/addParagraphBreak()#java/util/Stack/pop()
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfTextrun/addParagraphBreak()#java/util/List/size()
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfTextrun/addParagraphBreak()#java/util/ListIterator/next()
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfTextrun/addParagraphBreak()#java/util/ListIterator/previous()
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfTextrun/addParagraphBreak()#java/lang/Integer/valueOf(int)
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfTextrun/addParagraphBreak()#org/apache/fop/render/rtf/rtflib/rtfdoc/RtfTextrun/setChildren(java.util.List)
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfTextrun/addParagraphBreak()#java/util/List/listIterator(int)
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfTextrun/addParagraphBreak()#java/util/Stack/push(java.lang.Object)
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfTextrun/addParagraphBreak()#java/util/ListIterator/hasPrevious()
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfTextrun/addParagraphBreak()#org/apache/fop/render/rtf/rtflib/rtfdoc/RtfTextrun/getChildren()
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfTextrun/addParagraphBreak()#org/apache/fop/render/rtf/rtflib/rtfdoc/RtfTextrun$RtfCloseGroupMark/getBreakType()
org/apache/fop/pdf/PDFFilterList/buildFilterEntries(java.util.List)#java/lang/StringBuffer/StringBuffer(int)
org/apache/fop/pdf/PDFFilterList/buildFilterEntries(java.util.List)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/pdf/PDFFilterList/buildFilterEntries(java.util.List)#java/lang/String/length()
org/apache/fop/pdf/PDFFilterList/buildFilterEntries(java.util.List)#java/util/List/size()
org/apache/fop/pdf/PDFFilterList/buildFilterEntries(java.util.List)#java/lang/StringBuffer/toString()
org/apache/fop/pdf/PDFFilterList/buildFilterEntries(java.util.List)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/pdf/PDFFilterList/buildFilterEntries(java.util.List)#java/util/List/get(int)
org/apache/fop/pdf/PDFFilterList/buildFilterEntries(java.util.List)#java/lang/StringBuffer/append(java.lang.String)
org/apache/fop/pdf/PDFFilterList/buildFilterEntries(java.util.List)#java/lang/StringBuilder/toString()
org/apache/fop/render/awt/viewer/GoToPageDialog/jbInit(org.apache.fop.render.awt.viewer.Translator)#java/awt/Container/add(java.awt.Component)
org/apache/fop/render/awt/viewer/GoToPageDialog/jbInit(org.apache.fop.render.awt.viewer.Translator)#javax/swing/JPanel/setLayout(java.awt.LayoutManager)
org/apache/fop/render/awt/viewer/GoToPageDialog/jbInit(org.apache.fop.render.awt.viewer.Translator)#javax/swing/JButton/addActionListener(java.awt.event.ActionListener)
org/apache/fop/render/awt/viewer/GoToPageDialog/jbInit(org.apache.fop.render.awt.viewer.Translator)#java/awt/Dimension/Dimension(int,int)
org/apache/fop/render/awt/viewer/GoToPageDialog/jbInit(org.apache.fop.render.awt.viewer.Translator)#javax/swing/JButton/JButton()
org/apache/fop/render/awt/viewer/GoToPageDialog/jbInit(org.apache.fop.render.awt.viewer.Translator)#javax/swing/JTextField/JTextField()
org/apache/fop/render/awt/viewer/GoToPageDialog/jbInit(org.apache.fop.render.awt.viewer.Translator)#javax/swing/JPanel/JPanel()
org/apache/fop/render/awt/viewer/GoToPageDialog/jbInit(org.apache.fop.render.awt.viewer.Translator)#javax/swing/JLabel/JLabel()
org/apache/fop/render/awt/viewer/GoToPageDialog/jbInit(org.apache.fop.render.awt.viewer.Translator)#org/apache/fop/render/awt/viewer/GoToPageDialog/getContentPane()
org/apache/fop/render/awt/viewer/GoToPageDialog/jbInit(org.apache.fop.render.awt.viewer.Translator)#javax/swing/JButton/setText(java.lang.String)
org/apache/fop/render/awt/viewer/GoToPageDialog/jbInit(org.apache.fop.render.awt.viewer.Translator)#javax/swing/JLabel/setText(java.lang.String)
org/apache/fop/render/awt/viewer/GoToPageDialog/jbInit(org.apache.fop.render.awt.viewer.Translator)#java/awt/Insets/Insets(int,int,int,int)
org/apache/fop/render/awt/viewer/GoToPageDialog/jbInit(org.apache.fop.render.awt.viewer.Translator)#javax/swing/JPanel/setMinimumSize(java.awt.Dimension)
org/apache/fop/render/awt/viewer/GoToPageDialog/jbInit(org.apache.fop.render.awt.viewer.Translator)#org/apache/fop/render/awt/viewer/GoToPageDialog$2/2(org.apache.fop.render.awt.viewer.GoToPageDialog)
org/apache/fop/render/awt/viewer/GoToPageDialog/jbInit(org.apache.fop.render.awt.viewer.Translator)#org/apache/fop/render/awt/viewer/GoToPageDialog$1/1(org.apache.fop.render.awt.viewer.GoToPageDialog)
org/apache/fop/render/awt/viewer/GoToPageDialog/jbInit(org.apache.fop.render.awt.viewer.Translator)#java/awt/GridBagLayout/GridBagLayout()
org/apache/fop/render/awt/viewer/GoToPageDialog/jbInit(org.apache.fop.render.awt.viewer.Translator)#javax/swing/JPanel/add(java.awt.Component,java.lang.Object)
org/apache/fop/render/awt/viewer/GoToPageDialog/jbInit(org.apache.fop.render.awt.viewer.Translator)#java/awt/GridBagConstraints/GridBagConstraints(int,int,int,int,double,double,int,int,java.awt.Insets,int,int)
org/apache/fop/layoutmgr/SpaceResolver/removeConditionalBorderAndPadding(org.apache.fop.layoutmgr.UnresolvedListElement[],org.apache.fop.traits.MinOptMax[],boolean)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/layoutmgr/SpaceResolver/removeConditionalBorderAndPadding(org.apache.fop.layoutmgr.UnresolvedListElement[],org.apache.fop.traits.MinOptMax[],boolean)#java/lang/StringBuilder/toString()
org/apache/fop/layoutmgr/SpaceResolver/removeConditionalBorderAndPadding(org.apache.fop.layoutmgr.UnresolvedListElement[],org.apache.fop.traits.MinOptMax[],boolean)#org/apache/fop/layoutmgr/BorderOrPaddingElement/isConditional()
org/apache/fop/layoutmgr/SpaceResolver/removeConditionalBorderAndPadding(org.apache.fop.layoutmgr.UnresolvedListElement[],org.apache.fop.traits.MinOptMax[],boolean)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/fop/layoutmgr/SpaceResolver/removeConditionalBorderAndPadding(org.apache.fop.layoutmgr.UnresolvedListElement[],org.apache.fop.traits.MinOptMax[],boolean)#org/apache/fop/layoutmgr/BorderOrPaddingElement/isFirst()
org/apache/fop/layoutmgr/SpaceResolver/removeConditionalBorderAndPadding(org.apache.fop.layoutmgr.UnresolvedListElement[],org.apache.fop.traits.MinOptMax[],boolean)#org/apache/commons/logging/Log/isDebugEnabled()
org/apache/fop/layoutmgr/SpaceResolver/removeConditionalBorderAndPadding(org.apache.fop.layoutmgr.UnresolvedListElement[],org.apache.fop.traits.MinOptMax[],boolean)#org/apache/fop/layoutmgr/BorderOrPaddingElement/isLast()
org/apache/fop/layoutmgr/SpaceResolver/removeConditionalBorderAndPadding(org.apache.fop.layoutmgr.UnresolvedListElement[],org.apache.fop.traits.MinOptMax[],boolean)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/layoutmgr/SpaceResolver/removeConditionalBorderAndPadding(org.apache.fop.layoutmgr.UnresolvedListElement[],org.apache.fop.traits.MinOptMax[],boolean)#org/apache/commons/logging/Log/trace(java.lang.Object)
org/apache/fop/layoutmgr/SpaceResolver/removeConditionalBorderAndPadding(org.apache.fop.layoutmgr.UnresolvedListElement[],org.apache.fop.traits.MinOptMax[],boolean)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/fop/layoutmgr/SpaceResolver/removeConditionalBorderAndPadding(org.apache.fop.layoutmgr.UnresolvedListElement[],org.apache.fop.traits.MinOptMax[],boolean)#org/apache/commons/logging/Log/isTraceEnabled()
org/apache/fop/layoutmgr/SpaceResolver/resolveElementList(java.util.List)#java/util/ListIterator/remove()
org/apache/fop/layoutmgr/SpaceResolver/resolveElementList(java.util.List)#java/util/ListIterator/hasNext()
org/apache/fop/layoutmgr/SpaceResolver/resolveElementList(java.util.List)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/layoutmgr/SpaceResolver/resolveElementList(java.util.List)#java/util/List/isEmpty()
org/apache/fop/layoutmgr/SpaceResolver/resolveElementList(java.util.List)#java/lang/StringBuilder/append(boolean)
org/apache/fop/layoutmgr/SpaceResolver/resolveElementList(java.util.List)#java/util/ListIterator/next()
org/apache/fop/layoutmgr/SpaceResolver/resolveElementList(java.util.List)#java/util/List/add(java.lang.Object)
org/apache/fop/layoutmgr/SpaceResolver/resolveElementList(java.util.List)#java/util/List/listIterator()
org/apache/fop/layoutmgr/SpaceResolver/resolveElementList(java.util.List)#java/lang/StringBuilder/toString()
org/apache/fop/layoutmgr/SpaceResolver/resolveElementList(java.util.List)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/fop/layoutmgr/SpaceResolver/resolveElementList(java.util.List)#java/util/ArrayList/ArrayList()
org/apache/fop/layoutmgr/SpaceResolver/resolveElementList(java.util.List)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/layoutmgr/SpaceResolver/resolveElementList(java.util.List)#org/apache/commons/logging/Log/trace(java.lang.Object)
org/apache/fop/layoutmgr/SpaceResolver/resolveElementList(java.util.List)#java/util/ListIterator/previous()
org/apache/fop/layoutmgr/SpaceResolver/resolveElementList(java.util.List)#java/util/List/clear()
org/apache/fop/layoutmgr/SpaceResolver/resolveElementList(java.util.List)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/fop/layoutmgr/SpaceResolver/resolveElementList(java.util.List)#org/apache/commons/logging/Log/isTraceEnabled()
org/apache/fop/layoutmgr/SpaceResolver/performSpaceResolutionRules2to3(org.apache.fop.layoutmgr.UnresolvedListElement[],org.apache.fop.traits.MinOptMax[],int,int)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/layoutmgr/SpaceResolver/performSpaceResolutionRules2to3(org.apache.fop.layoutmgr.UnresolvedListElement[],org.apache.fop.traits.MinOptMax[],int,int)#java/lang/Math/max(int,int)
org/apache/fop/layoutmgr/SpaceResolver/performSpaceResolutionRules2to3(org.apache.fop.layoutmgr.UnresolvedListElement[],org.apache.fop.traits.MinOptMax[],int,int)#java/lang/StringBuilder/append(int)
org/apache/fop/layoutmgr/SpaceResolver/performSpaceResolutionRules2to3(org.apache.fop.layoutmgr.UnresolvedListElement[],org.apache.fop.traits.MinOptMax[],int,int)#org/apache/commons/logging/Log/isDebugEnabled()
org/apache/fop/layoutmgr/SpaceResolver/performSpaceResolutionRules2to3(org.apache.fop.layoutmgr.UnresolvedListElement[],org.apache.fop.traits.MinOptMax[],int,int)#java/lang/Math/min(int,int)
org/apache/fop/layoutmgr/SpaceResolver/performSpaceResolutionRules2to3(org.apache.fop.layoutmgr.UnresolvedListElement[],org.apache.fop.traits.MinOptMax[],int,int)#org/apache/fop/layoutmgr/SpaceElement/getLength()
org/apache/fop/layoutmgr/SpaceResolver/performSpaceResolutionRules2to3(org.apache.fop.layoutmgr.UnresolvedListElement[],org.apache.fop.traits.MinOptMax[],int,int)#java/lang/StringBuilder/toString()
org/apache/fop/layoutmgr/SpaceResolver/performSpaceResolutionRules2to3(org.apache.fop.layoutmgr.UnresolvedListElement[],org.apache.fop.traits.MinOptMax[],int,int)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/fop/layoutmgr/SpaceResolver/performSpaceResolutionRules2to3(org.apache.fop.layoutmgr.UnresolvedListElement[],org.apache.fop.traits.MinOptMax[],int,int)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/layoutmgr/SpaceResolver/performSpaceResolutionRules2to3(org.apache.fop.layoutmgr.UnresolvedListElement[],org.apache.fop.traits.MinOptMax[],int,int)#org/apache/commons/logging/Log/trace(java.lang.Object)
org/apache/fop/layoutmgr/SpaceResolver/performSpaceResolutionRules2to3(org.apache.fop.layoutmgr.UnresolvedListElement[],org.apache.fop.traits.MinOptMax[],int,int)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/fop/layoutmgr/SpaceResolver/performSpaceResolutionRules2to3(org.apache.fop.layoutmgr.UnresolvedListElement[],org.apache.fop.traits.MinOptMax[],int,int)#org/apache/commons/logging/Log/isTraceEnabled()
org/apache/fop/events/model/EventModel/writeXMLizable(org.apache.xmlgraphics.util.XMLizable,java.io.File)#javax/xml/transform/sax/SAXTransformerFactory/newTransformerHandler()
org/apache/fop/events/model/EventModel/writeXMLizable(org.apache.xmlgraphics.util.XMLizable,java.io.File)#javax/xml/transform/sax/TransformerHandler/setResult(javax.xml.transform.Result)
org/apache/fop/events/model/EventModel/writeXMLizable(org.apache.xmlgraphics.util.XMLizable,java.io.File)#javax/xml/transform/sax/TransformerHandler/endDocument()
org/apache/fop/events/model/EventModel/writeXMLizable(org.apache.xmlgraphics.util.XMLizable,java.io.File)#org/xml/sax/SAXException/getMessage()
org/apache/fop/events/model/EventModel/writeXMLizable(org.apache.xmlgraphics.util.XMLizable,java.io.File)#javax/xml/transform/Transformer/setOutputProperty(java.lang.String,java.lang.String)
org/apache/fop/events/model/EventModel/writeXMLizable(org.apache.xmlgraphics.util.XMLizable,java.io.File)#javax/xml/transform/sax/TransformerHandler/startDocument()
org/apache/fop/events/model/EventModel/writeXMLizable(org.apache.xmlgraphics.util.XMLizable,java.io.File)#org/apache/commons/io/IOUtils/closeQuietly(java.io.OutputStream)
org/apache/fop/events/model/EventModel/writeXMLizable(org.apache.xmlgraphics.util.XMLizable,java.io.File)#javax/xml/transform/stream/StreamResult/StreamResult(java.io.OutputStream)
org/apache/fop/events/model/EventModel/writeXMLizable(org.apache.xmlgraphics.util.XMLizable,java.io.File)#java/io/BufferedOutputStream/BufferedOutputStream(java.io.OutputStream)
org/apache/fop/events/model/EventModel/writeXMLizable(org.apache.xmlgraphics.util.XMLizable,java.io.File)#javax/xml/transform/TransformerConfigurationException/getMessage()
org/apache/fop/events/model/EventModel/writeXMLizable(org.apache.xmlgraphics.util.XMLizable,java.io.File)#javax/xml/transform/sax/SAXTransformerFactory/newInstance()
org/apache/fop/events/model/EventModel/writeXMLizable(org.apache.xmlgraphics.util.XMLizable,java.io.File)#javax/xml/transform/sax/TransformerHandler/getTransformer()
org/apache/fop/events/model/EventModel/writeXMLizable(org.apache.xmlgraphics.util.XMLizable,java.io.File)#javax/xml/transform/TransformerFactoryConfigurationError/getMessage()
org/apache/fop/events/model/EventModel/writeXMLizable(org.apache.xmlgraphics.util.XMLizable,java.io.File)#java/io/IOException/IOException(java.lang.String)
org/apache/fop/events/model/EventModel/writeXMLizable(org.apache.xmlgraphics.util.XMLizable,java.io.File)#org/apache/xmlgraphics/util/XMLizable/toSAX(org.xml.sax.ContentHandler)
org/apache/fop/events/model/EventModel/writeXMLizable(org.apache.xmlgraphics.util.XMLizable,java.io.File)#java/io/FileOutputStream/FileOutputStream(java.io.File)
org/apache/fop/layoutmgr/TraitSetter/addBackground(org.apache.fop.area.Area,org.apache.fop.fo.properties.CommonBorderPaddingBackground,org.apache.fop.datatypes.PercentBaseContext)#org/apache/fop/area/Trait$Background/setImageTargetHeight(int)
org/apache/fop/layoutmgr/TraitSetter/addBackground(org.apache.fop.area.Area,org.apache.fop.fo.properties.CommonBorderPaddingBackground,org.apache.fop.datatypes.PercentBaseContext)#org/apache/xmlgraphics/image/loader/ImageSize/getWidthMpt()
org/apache/fop/layoutmgr/TraitSetter/addBackground(org.apache.fop.area.Area,org.apache.fop.fo.properties.CommonBorderPaddingBackground,org.apache.fop.datatypes.PercentBaseContext)#org/apache/xmlgraphics/image/loader/ImageSize/getHeightMpt()
org/apache/fop/layoutmgr/TraitSetter/addBackground(org.apache.fop.area.Area,org.apache.fop.fo.properties.CommonBorderPaddingBackground,org.apache.fop.datatypes.PercentBaseContext)#org/apache/fop/area/Trait$Background/setURL(java.lang.String)
org/apache/fop/layoutmgr/TraitSetter/addBackground(org.apache.fop.area.Area,org.apache.fop.fo.properties.CommonBorderPaddingBackground,org.apache.fop.datatypes.PercentBaseContext)#org/apache/fop/area/Trait$Background/setVertical(int)
org/apache/fop/layoutmgr/TraitSetter/addBackground(org.apache.fop.area.Area,org.apache.fop.fo.properties.CommonBorderPaddingBackground,org.apache.fop.datatypes.PercentBaseContext)#org/apache/fop/area/Trait$Background/Background()
org/apache/fop/layoutmgr/TraitSetter/addBackground(org.apache.fop.area.Area,org.apache.fop.fo.properties.CommonBorderPaddingBackground,org.apache.fop.datatypes.PercentBaseContext)#org/apache/fop/area/Trait$Background/setImageInfo(org.apache.xmlgraphics.image.loader.ImageInfo)
org/apache/fop/layoutmgr/TraitSetter/addBackground(org.apache.fop.area.Area,org.apache.fop.fo.properties.CommonBorderPaddingBackground,org.apache.fop.datatypes.PercentBaseContext)#org/apache/fop/area/Trait$Background/setColor(java.awt.Color)
org/apache/fop/layoutmgr/TraitSetter/addBackground(org.apache.fop.area.Area,org.apache.fop.fo.properties.CommonBorderPaddingBackground,org.apache.fop.datatypes.PercentBaseContext)#org/apache/fop/area/Trait$Background/getRepeat()
org/apache/fop/layoutmgr/TraitSetter/addBackground(org.apache.fop.area.Area,org.apache.fop.fo.properties.CommonBorderPaddingBackground,org.apache.fop.datatypes.PercentBaseContext)#org/apache/fop/area/Trait$Background/setRepeat(int)
org/apache/fop/layoutmgr/TraitSetter/addBackground(org.apache.fop.area.Area,org.apache.fop.fo.properties.CommonBorderPaddingBackground,org.apache.fop.datatypes.PercentBaseContext)#org/apache/commons/logging/Log/warn(java.lang.Object)
org/apache/fop/layoutmgr/TraitSetter/addBackground(org.apache.fop.area.Area,org.apache.fop.fo.properties.CommonBorderPaddingBackground,org.apache.fop.datatypes.PercentBaseContext)#org/apache/xmlgraphics/image/loader/ImageInfo/getSize()
org/apache/fop/layoutmgr/TraitSetter/addBackground(org.apache.fop.area.Area,org.apache.fop.fo.properties.CommonBorderPaddingBackground,org.apache.fop.datatypes.PercentBaseContext)#org/apache/fop/area/Trait$Background/setImageTargetWidth(int)
org/apache/fop/layoutmgr/TraitSetter/addBackground(org.apache.fop.area.Area,org.apache.fop.fo.properties.CommonBorderPaddingBackground,org.apache.fop.datatypes.PercentBaseContext)#org/apache/fop/area/Trait$Background/getImageInfo()
org/apache/fop/layoutmgr/TraitSetter/addBackground(org.apache.fop.area.Area,org.apache.fop.fo.properties.CommonBorderPaddingBackground,org.apache.fop.datatypes.PercentBaseContext)#org/apache/fop/area/Trait$Background/setHoriz(int)
org/apache/fop/layoutmgr/TraitSetter/addBackground(org.apache.fop.area.Area,org.apache.fop.fo.properties.CommonBorderPaddingBackground,org.apache.fop.datatypes.PercentBaseContext,int,int,int,int)#org/apache/fop/area/Trait$Background/getRepeat()
org/apache/fop/layoutmgr/TraitSetter/addBackground(org.apache.fop.area.Area,org.apache.fop.fo.properties.CommonBorderPaddingBackground,org.apache.fop.datatypes.PercentBaseContext,int,int,int,int)#org/apache/xmlgraphics/image/loader/ImageSize/getWidthMpt()
org/apache/fop/layoutmgr/TraitSetter/addBackground(org.apache.fop.area.Area,org.apache.fop.fo.properties.CommonBorderPaddingBackground,org.apache.fop.datatypes.PercentBaseContext,int,int,int,int)#org/apache/xmlgraphics/image/loader/ImageSize/getHeightMpt()
org/apache/fop/layoutmgr/TraitSetter/addBackground(org.apache.fop.area.Area,org.apache.fop.fo.properties.CommonBorderPaddingBackground,org.apache.fop.datatypes.PercentBaseContext,int,int,int,int)#org/apache/xmlgraphics/image/loader/ImageInfo/getSize()
org/apache/fop/layoutmgr/TraitSetter/addBackground(org.apache.fop.area.Area,org.apache.fop.fo.properties.CommonBorderPaddingBackground,org.apache.fop.datatypes.PercentBaseContext,int,int,int,int)#org/apache/fop/area/Trait$Background/setURL(java.lang.String)
org/apache/fop/layoutmgr/TraitSetter/addBackground(org.apache.fop.area.Area,org.apache.fop.fo.properties.CommonBorderPaddingBackground,org.apache.fop.datatypes.PercentBaseContext,int,int,int,int)#org/apache/fop/area/Trait$Background/setVertical(int)
org/apache/fop/layoutmgr/TraitSetter/addBackground(org.apache.fop.area.Area,org.apache.fop.fo.properties.CommonBorderPaddingBackground,org.apache.fop.datatypes.PercentBaseContext,int,int,int,int)#org/apache/fop/area/Trait$Background/getImageInfo()
org/apache/fop/layoutmgr/TraitSetter/addBackground(org.apache.fop.area.Area,org.apache.fop.fo.properties.CommonBorderPaddingBackground,org.apache.fop.datatypes.PercentBaseContext,int,int,int,int)#org/apache/fop/area/Trait$Background/Background()
org/apache/fop/layoutmgr/TraitSetter/addBackground(org.apache.fop.area.Area,org.apache.fop.fo.properties.CommonBorderPaddingBackground,org.apache.fop.datatypes.PercentBaseContext,int,int,int,int)#org/apache/fop/area/Trait$Background/setImageInfo(org.apache.xmlgraphics.image.loader.ImageInfo)
org/apache/fop/layoutmgr/TraitSetter/addBackground(org.apache.fop.area.Area,org.apache.fop.fo.properties.CommonBorderPaddingBackground,org.apache.fop.datatypes.PercentBaseContext,int,int,int,int)#org/apache/fop/area/Trait$Background/setColor(java.awt.Color)
org/apache/fop/layoutmgr/TraitSetter/addBackground(org.apache.fop.area.Area,org.apache.fop.fo.properties.CommonBorderPaddingBackground,org.apache.fop.datatypes.PercentBaseContext,int,int,int,int)#org/apache/fop/area/Trait$Background/setRepeat(int)
org/apache/fop/layoutmgr/TraitSetter/addBackground(org.apache.fop.area.Area,org.apache.fop.fo.properties.CommonBorderPaddingBackground,org.apache.fop.datatypes.PercentBaseContext,int,int,int,int)#org/apache/commons/logging/Log/warn(java.lang.Object)
org/apache/fop/layoutmgr/TraitSetter/addBackground(org.apache.fop.area.Area,org.apache.fop.fo.properties.CommonBorderPaddingBackground,org.apache.fop.datatypes.PercentBaseContext,int,int,int,int)#org/apache/fop/area/Trait$Background/setHoriz(int)
org/apache/fop/render/ps/PSFontUtils/buildCharStrings(org.apache.xmlgraphics.ps.PSGenerator,boolean,org.apache.fop.fonts.CMapSegment[],java.util.Set,org.apache.fop.fonts.CustomFont)#java/lang/String/toUpperCase(java.util.Locale)
org/apache/fop/render/ps/PSFontUtils/buildCharStrings(org.apache.xmlgraphics.ps.PSGenerator,boolean,org.apache.fop.fonts.CMapSegment[],java.util.Set,org.apache.fop.fonts.CustomFont)#org/apache/xmlgraphics/ps/PSGenerator/write(java.lang.String)
org/apache/fop/render/ps/PSFontUtils/buildCharStrings(org.apache.xmlgraphics.ps.PSGenerator,boolean,org.apache.fop.fonts.CMapSegment[],java.util.Set,org.apache.fop.fonts.CustomFont)#java/lang/Integer/toHexString(int)
org/apache/fop/render/ps/PSFontUtils/buildCharStrings(org.apache.xmlgraphics.ps.PSGenerator,boolean,org.apache.fop.fonts.CMapSegment[],java.util.Set,org.apache.fop.fonts.CustomFont)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/render/ps/PSFontUtils/buildCharStrings(org.apache.xmlgraphics.ps.PSGenerator,boolean,org.apache.fop.fonts.CMapSegment[],java.util.Set,org.apache.fop.fonts.CustomFont)#java/util/Set/iterator()
org/apache/fop/render/ps/PSFontUtils/buildCharStrings(org.apache.xmlgraphics.ps.PSGenerator,boolean,org.apache.fop.fonts.CMapSegment[],java.util.Set,org.apache.fop.fonts.CustomFont)#java/lang/StringBuilder/toString()
org/apache/fop/render/ps/PSFontUtils/buildCharStrings(org.apache.xmlgraphics.ps.PSGenerator,boolean,org.apache.fop.fonts.CMapSegment[],java.util.Set,org.apache.fop.fonts.CustomFont)#org/apache/xmlgraphics/ps/PSGenerator/write(int)
org/apache/fop/render/ps/PSFontUtils/buildCharStrings(org.apache.xmlgraphics.ps.PSGenerator,boolean,org.apache.fop.fonts.CMapSegment[],java.util.Set,org.apache.fop.fonts.CustomFont)#org/apache/xmlgraphics/fonts/Glyphs/getUnicodeSequenceForGlyphName(java.lang.String)
org/apache/fop/render/ps/PSFontUtils/buildCharStrings(org.apache.xmlgraphics.ps.PSGenerator,boolean,org.apache.fop.fonts.CMapSegment[],java.util.Set,org.apache.fop.fonts.CustomFont)#java/util/Iterator/hasNext()
org/apache/fop/render/ps/PSFontUtils/buildCharStrings(org.apache.xmlgraphics.ps.PSGenerator,boolean,org.apache.fop.fonts.CMapSegment[],java.util.Set,org.apache.fop.fonts.CustomFont)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/render/ps/PSFontUtils/buildCharStrings(org.apache.xmlgraphics.ps.PSGenerator,boolean,org.apache.fop.fonts.CMapSegment[],java.util.Set,org.apache.fop.fonts.CustomFont)#java/lang/String/charAt(int)
org/apache/fop/render/ps/PSFontUtils/buildCharStrings(org.apache.xmlgraphics.ps.PSGenerator,boolean,org.apache.fop.fonts.CMapSegment[],java.util.Set,org.apache.fop.fonts.CustomFont)#java/util/Iterator/next()
org/apache/fop/render/ps/PSFontUtils/buildCharStrings(org.apache.xmlgraphics.ps.PSGenerator,boolean,org.apache.fop.fonts.CMapSegment[],java.util.Set,org.apache.fop.fonts.CustomFont)#org/apache/xmlgraphics/ps/PSGenerator/writeln(java.lang.String)
org/apache/fop/render/ps/PSFontUtils/buildCharStrings(org.apache.xmlgraphics.ps.PSGenerator,boolean,org.apache.fop.fonts.CMapSegment[],java.util.Set,org.apache.fop.fonts.CustomFont)#java/lang/String/equals(java.lang.Object)
org/apache/fop/render/ps/PSFontUtils/buildCharStrings(org.apache.xmlgraphics.ps.PSGenerator,boolean,org.apache.fop.fonts.CMapSegment[],java.util.Set,org.apache.fop.fonts.CustomFont)#org/apache/xmlgraphics/fonts/Glyphs/charToGlyphName(char)
org/apache/fop/render/ps/PSFontUtils/defineDerivedTrueTypeFont(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.render.ps.PSEventProducer,java.lang.String,java.lang.String,org.apache.fop.fonts.SingleByteEncoding,org.apache.fop.fonts.CMapSegment[])#org/apache/xmlgraphics/ps/PSGenerator/write(int)
org/apache/fop/render/ps/PSFontUtils/defineDerivedTrueTypeFont(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.render.ps.PSEventProducer,java.lang.String,java.lang.String,org.apache.fop.fonts.SingleByteEncoding,org.apache.fop.fonts.CMapSegment[])#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/render/ps/PSFontUtils/defineDerivedTrueTypeFont(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.render.ps.PSEventProducer,java.lang.String,java.lang.String,org.apache.fop.fonts.SingleByteEncoding,org.apache.fop.fonts.CMapSegment[])#java/lang/String/equals(java.lang.Object)
org/apache/fop/render/ps/PSFontUtils/defineDerivedTrueTypeFont(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.render.ps.PSEventProducer,java.lang.String,java.lang.String,org.apache.fop.fonts.SingleByteEncoding,org.apache.fop.fonts.CMapSegment[])#java/lang/StringBuilder/StringBuilder()
org/apache/fop/render/ps/PSFontUtils/defineDerivedTrueTypeFont(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.render.ps.PSEventProducer,java.lang.String,java.lang.String,org.apache.fop.fonts.SingleByteEncoding,org.apache.fop.fonts.CMapSegment[])#org/apache/xmlgraphics/ps/PSGenerator/getResourceTracker()
org/apache/fop/render/ps/PSFontUtils/defineDerivedTrueTypeFont(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.render.ps.PSEventProducer,java.lang.String,java.lang.String,org.apache.fop.fonts.SingleByteEncoding,org.apache.fop.fonts.CMapSegment[])#org/apache/xmlgraphics/ps/PSGenerator/writeDSCComment(java.lang.String)
org/apache/fop/render/ps/PSFontUtils/defineDerivedTrueTypeFont(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.render.ps.PSEventProducer,java.lang.String,java.lang.String,org.apache.fop.fonts.SingleByteEncoding,org.apache.fop.fonts.CMapSegment[])#java/lang/AssertionError/AssertionError()
org/apache/fop/render/ps/PSFontUtils/defineDerivedTrueTypeFont(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.render.ps.PSEventProducer,java.lang.String,java.lang.String,org.apache.fop.fonts.SingleByteEncoding,org.apache.fop.fonts.CMapSegment[])#org/apache/xmlgraphics/ps/PSGenerator/writeDSCComment(java.lang.String,java.lang.Object)
org/apache/fop/render/ps/PSFontUtils/defineDerivedTrueTypeFont(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.render.ps.PSEventProducer,java.lang.String,java.lang.String,org.apache.fop.fonts.SingleByteEncoding,org.apache.fop.fonts.CMapSegment[])#org/apache/xmlgraphics/ps/PSGenerator/write(java.lang.String)
org/apache/fop/render/ps/PSFontUtils/defineDerivedTrueTypeFont(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.render.ps.PSEventProducer,java.lang.String,java.lang.String,org.apache.fop.fonts.SingleByteEncoding,org.apache.fop.fonts.CMapSegment[])#org/apache/xmlgraphics/ps/PSGenerator/writeln(java.lang.String)
org/apache/fop/render/ps/PSFontUtils/defineDerivedTrueTypeFont(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.render.ps.PSEventProducer,java.lang.String,java.lang.String,org.apache.fop.fonts.SingleByteEncoding,org.apache.fop.fonts.CMapSegment[])#org/apache/xmlgraphics/ps/PSGenerator/commentln(java.lang.String)
org/apache/fop/render/ps/PSFontUtils/defineDerivedTrueTypeFont(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.render.ps.PSEventProducer,java.lang.String,java.lang.String,org.apache.fop.fonts.SingleByteEncoding,org.apache.fop.fonts.CMapSegment[])#org/apache/xmlgraphics/ps/dsc/ResourceTracker/registerSuppliedResource(org.apache.xmlgraphics.ps.PSResource)
org/apache/fop/render/ps/PSFontUtils/defineDerivedTrueTypeFont(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.render.ps.PSEventProducer,java.lang.String,java.lang.String,org.apache.fop.fonts.SingleByteEncoding,org.apache.fop.fonts.CMapSegment[])#java/lang/StringBuilder/toString()
org/apache/fop/render/ps/PSFontUtils/defineDerivedTrueTypeFont(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.render.ps.PSEventProducer,java.lang.String,java.lang.String,org.apache.fop.fonts.SingleByteEncoding,org.apache.fop.fonts.CMapSegment[])#org/apache/xmlgraphics/ps/PSResource/PSResource(java.lang.String,java.lang.String)
org/apache/fop/render/ps/PSFontUtils/defineEncoding(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.fonts.SingleByteEncoding)#org/apache/xmlgraphics/ps/PSGenerator/writeln(java.lang.String)
org/apache/fop/render/ps/PSFontUtils/defineEncoding(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.fonts.SingleByteEncoding)#java/lang/String/equals(java.lang.Object)
org/apache/fop/render/ps/PSFontUtils/defineEncoding(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.fonts.SingleByteEncoding)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/render/ps/PSFontUtils/defineEncoding(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.fonts.SingleByteEncoding)#org/apache/xmlgraphics/ps/PSGenerator/getResourceTracker()
org/apache/fop/render/ps/PSFontUtils/defineEncoding(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.fonts.SingleByteEncoding)#org/apache/xmlgraphics/ps/dsc/ResourceTracker/registerSuppliedResource(org.apache.xmlgraphics.ps.PSResource)
org/apache/fop/render/ps/PSFontUtils/defineEncoding(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.fonts.SingleByteEncoding)#org/apache/xmlgraphics/ps/PSGenerator/writeDSCComment(java.lang.String)
org/apache/fop/render/ps/PSFontUtils/defineEncoding(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.fonts.SingleByteEncoding)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/render/ps/PSFontUtils/defineEncoding(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.fonts.SingleByteEncoding)#org/apache/xmlgraphics/ps/PSGenerator/newLine()
org/apache/fop/render/ps/PSFontUtils/defineEncoding(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.fonts.SingleByteEncoding)#org/apache/xmlgraphics/ps/PSGenerator/writeDSCComment(java.lang.String,java.lang.Object)
org/apache/fop/render/ps/PSFontUtils/defineEncoding(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.fonts.SingleByteEncoding)#org/apache/xmlgraphics/ps/PSGenerator/write(java.lang.String)
org/apache/fop/render/ps/PSFontUtils/defineEncoding(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.fonts.SingleByteEncoding)#java/lang/StringBuilder/toString()
org/apache/fop/render/ps/PSFontUtils/defineEncoding(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.fonts.SingleByteEncoding)#org/apache/xmlgraphics/ps/PSResource/PSResource(java.lang.String,java.lang.String)
org/apache/fop/render/ps/PSFontUtils/reencodeFonts(org.apache.xmlgraphics.ps.PSGenerator,java.util.Map)#java/util/Map$Entry/getKey()
org/apache/fop/render/ps/PSFontUtils/reencodeFonts(org.apache.xmlgraphics.ps.PSGenerator,java.util.Map)#java/util/Set/iterator()
org/apache/fop/render/ps/PSFontUtils/reencodeFonts(org.apache.xmlgraphics.ps.PSGenerator,java.util.Map)#java/util/Collection/iterator()
org/apache/fop/render/ps/PSFontUtils/reencodeFonts(org.apache.xmlgraphics.ps.PSGenerator,java.util.Map)#java/util/Map/entrySet()
org/apache/fop/render/ps/PSFontUtils/reencodeFonts(org.apache.xmlgraphics.ps.PSGenerator,java.util.Map)#org/apache/xmlgraphics/ps/dsc/ResourceTracker/isResourceSupplied(org.apache.xmlgraphics.ps.PSResource)
org/apache/fop/render/ps/PSFontUtils/reencodeFonts(org.apache.xmlgraphics.ps.PSGenerator,java.util.Map)#java/util/Iterator/hasNext()
org/apache/fop/render/ps/PSFontUtils/reencodeFonts(org.apache.xmlgraphics.ps.PSGenerator,java.util.Map)#org/apache/fop/fonts/Typeface/getEmbedFontName()
org/apache/fop/render/ps/PSFontUtils/reencodeFonts(org.apache.xmlgraphics.ps.PSGenerator,java.util.Map)#java/util/Map/values()
org/apache/fop/render/ps/PSFontUtils/reencodeFonts(org.apache.xmlgraphics.ps.PSGenerator,java.util.Map)#org/apache/fop/render/ps/PSFontUtils/defineWinAnsiEncoding(org.apache.xmlgraphics.ps.PSGenerator)
org/apache/fop/render/ps/PSFontUtils/reencodeFonts(org.apache.xmlgraphics.ps.PSGenerator,java.util.Map)#java/util/Iterator/next()
org/apache/fop/render/ps/PSFontUtils/reencodeFonts(org.apache.xmlgraphics.ps.PSGenerator,java.util.Map)#org/apache/xmlgraphics/ps/PSGenerator/commentln(java.lang.String)
org/apache/fop/render/ps/PSFontUtils/reencodeFonts(org.apache.xmlgraphics.ps.PSGenerator,java.util.Map)#java/lang/String/equals(java.lang.Object)
org/apache/fop/render/ps/PSFontUtils/reencodeFonts(org.apache.xmlgraphics.ps.PSGenerator,java.util.Map)#org/apache/fop/render/ps/PSFontUtils/redefineFontEncoding(org.apache.xmlgraphics.ps.PSGenerator,java.lang.String,java.lang.String)
org/apache/fop/render/ps/PSFontUtils/reencodeFonts(org.apache.xmlgraphics.ps.PSGenerator,java.util.Map)#org/apache/xmlgraphics/ps/PSGenerator/getResourceTracker()
org/apache/fop/render/ps/PSFontUtils/reencodeFonts(org.apache.xmlgraphics.ps.PSGenerator,java.util.Map)#java/util/Map$Entry/getValue()
org/apache/fop/render/ps/PSFontUtils/defineDerivedFont(org.apache.xmlgraphics.ps.PSGenerator,java.lang.String,java.lang.String,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/render/ps/PSFontUtils/defineDerivedFont(org.apache.xmlgraphics.ps.PSGenerator,java.lang.String,java.lang.String,java.lang.String)#org/apache/xmlgraphics/ps/PSGenerator/writeDSCComment(java.lang.String,java.lang.Object)
org/apache/fop/render/ps/PSFontUtils/defineDerivedFont(org.apache.xmlgraphics.ps.PSGenerator,java.lang.String,java.lang.String,java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/render/ps/PSFontUtils/defineDerivedFont(org.apache.xmlgraphics.ps.PSGenerator,java.lang.String,java.lang.String,java.lang.String)#org/apache/xmlgraphics/ps/PSGenerator/getResourceTracker()
org/apache/fop/render/ps/PSFontUtils/defineDerivedFont(org.apache.xmlgraphics.ps.PSGenerator,java.lang.String,java.lang.String,java.lang.String)#org/apache/xmlgraphics/ps/dsc/ResourceTracker/registerSuppliedResource(org.apache.xmlgraphics.ps.PSResource)
org/apache/fop/render/ps/PSFontUtils/defineDerivedFont(org.apache.xmlgraphics.ps.PSGenerator,java.lang.String,java.lang.String,java.lang.String)#org/apache/xmlgraphics/ps/PSGenerator/writeDSCComment(java.lang.String)
org/apache/fop/render/ps/PSFontUtils/defineDerivedFont(org.apache.xmlgraphics.ps.PSGenerator,java.lang.String,java.lang.String,java.lang.String)#org/apache/xmlgraphics/ps/PSGenerator/writeln(java.lang.String)
org/apache/fop/render/ps/PSFontUtils/defineDerivedFont(org.apache.xmlgraphics.ps.PSGenerator,java.lang.String,java.lang.String,java.lang.String)#org/apache/xmlgraphics/ps/PSGenerator/commentln(java.lang.String)
org/apache/fop/render/ps/PSFontUtils/defineDerivedFont(org.apache.xmlgraphics.ps.PSGenerator,java.lang.String,java.lang.String,java.lang.String)#java/lang/StringBuilder/toString()
org/apache/fop/render/ps/PSFontUtils/defineDerivedFont(org.apache.xmlgraphics.ps.PSGenerator,java.lang.String,java.lang.String,java.lang.String)#org/apache/xmlgraphics/ps/PSResource/PSResource(java.lang.String,java.lang.String)
org/apache/fop/render/ps/PSFontUtils/writeFontDict(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.fonts.FontInfo,java.util.Map,boolean,org.apache.fop.render.ps.PSEventProducer)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/fop/render/ps/PSFontUtils/writeFontDict(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.fonts.FontInfo,java.util.Map,boolean,org.apache.fop.render.ps.PSEventProducer)#org/apache/fop/fonts/SingleByteFont/getCMap()
org/apache/fop/render/ps/PSFontUtils/writeFontDict(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.fonts.FontInfo,java.util.Map,boolean,org.apache.fop.render.ps.PSEventProducer)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/render/ps/PSFontUtils/writeFontDict(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.fonts.FontInfo,java.util.Map,boolean,org.apache.fop.render.ps.PSEventProducer)#java/lang/StringBuilder/append(int)
org/apache/fop/render/ps/PSFontUtils/writeFontDict(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.fonts.FontInfo,java.util.Map,boolean,org.apache.fop.render.ps.PSEventProducer)#org/apache/fop/fonts/Typeface/getFontType()
org/apache/fop/render/ps/PSFontUtils/writeFontDict(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.fonts.FontInfo,java.util.Map,boolean,org.apache.fop.render.ps.PSEventProducer)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/render/ps/PSFontUtils/writeFontDict(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.fonts.FontInfo,java.util.Map,boolean,org.apache.fop.render.ps.PSEventProducer)#java/util/Iterator/hasNext()
org/apache/fop/render/ps/PSFontUtils/writeFontDict(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.fonts.FontInfo,java.util.Map,boolean,org.apache.fop.render.ps.PSEventProducer)#org/apache/fop/fonts/Typeface/getEmbedFontName()
org/apache/fop/render/ps/PSFontUtils/writeFontDict(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.fonts.FontInfo,java.util.Map,boolean,org.apache.fop.render.ps.PSEventProducer)#java/util/Iterator/next()
org/apache/fop/render/ps/PSFontUtils/writeFontDict(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.fonts.FontInfo,java.util.Map,boolean,org.apache.fop.render.ps.PSEventProducer)#java/util/HashMap/HashMap()
org/apache/fop/render/ps/PSFontUtils/writeFontDict(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.fonts.FontInfo,java.util.Map,boolean,org.apache.fop.render.ps.PSEventProducer)#org/apache/xmlgraphics/ps/PSGenerator/commentln(java.lang.String)
org/apache/fop/render/ps/PSFontUtils/writeFontDict(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.fonts.FontInfo,java.util.Map,boolean,org.apache.fop.render.ps.PSEventProducer)#java/util/Map/keySet()
org/apache/fop/render/ps/PSFontUtils/writeFontDict(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.fonts.FontInfo,java.util.Map,boolean,org.apache.fop.render.ps.PSEventProducer)#java/util/Set/iterator()
org/apache/fop/render/ps/PSFontUtils/writeFontDict(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.fonts.FontInfo,java.util.Map,boolean,org.apache.fop.render.ps.PSEventProducer)#java/lang/StringBuilder/toString()
org/apache/fop/render/ps/PSFontUtils/writeFontDict(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.fonts.FontInfo,java.util.Map,boolean,org.apache.fop.render.ps.PSEventProducer)#org/apache/xmlgraphics/ps/PSResource/PSResource(java.lang.String,java.lang.String)
org/apache/fop/render/ps/PSFontUtils/determineSuppliedFonts(org.apache.xmlgraphics.ps.dsc.ResourceTracker,org.apache.fop.fonts.FontInfo,java.util.Map)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/fop/render/ps/PSFontUtils/determineSuppliedFonts(org.apache.xmlgraphics.ps.dsc.ResourceTracker,org.apache.fop.fonts.FontInfo,java.util.Map)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/render/ps/PSFontUtils/determineSuppliedFonts(org.apache.xmlgraphics.ps.dsc.ResourceTracker,org.apache.fop.fonts.FontInfo,java.util.Map)#java/lang/StringBuilder/append(int)
org/apache/fop/render/ps/PSFontUtils/determineSuppliedFonts(org.apache.xmlgraphics.ps.dsc.ResourceTracker,org.apache.fop.fonts.FontInfo,java.util.Map)#org/apache/fop/fonts/Typeface/getFontType()
org/apache/fop/render/ps/PSFontUtils/determineSuppliedFonts(org.apache.xmlgraphics.ps.dsc.ResourceTracker,org.apache.fop.fonts.FontInfo,java.util.Map)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/render/ps/PSFontUtils/determineSuppliedFonts(org.apache.xmlgraphics.ps.dsc.ResourceTracker,org.apache.fop.fonts.FontInfo,java.util.Map)#java/util/Set/iterator()
org/apache/fop/render/ps/PSFontUtils/determineSuppliedFonts(org.apache.xmlgraphics.ps.dsc.ResourceTracker,org.apache.fop.fonts.FontInfo,java.util.Map)#org/apache/xmlgraphics/ps/dsc/ResourceTracker/registerSuppliedResource(org.apache.xmlgraphics.ps.PSResource)
org/apache/fop/render/ps/PSFontUtils/determineSuppliedFonts(org.apache.xmlgraphics.ps.dsc.ResourceTracker,org.apache.fop.fonts.FontInfo,java.util.Map)#java/util/Iterator/hasNext()
org/apache/fop/render/ps/PSFontUtils/determineSuppliedFonts(org.apache.xmlgraphics.ps.dsc.ResourceTracker,org.apache.fop.fonts.FontInfo,java.util.Map)#org/apache/fop/fonts/Typeface/getEmbedFontName()
org/apache/fop/render/ps/PSFontUtils/determineSuppliedFonts(org.apache.xmlgraphics.ps.dsc.ResourceTracker,org.apache.fop.fonts.FontInfo,java.util.Map)#java/util/Iterator/next()
org/apache/fop/render/ps/PSFontUtils/determineSuppliedFonts(org.apache.xmlgraphics.ps.dsc.ResourceTracker,org.apache.fop.fonts.FontInfo,java.util.Map)#java/util/HashMap/HashMap()
org/apache/fop/render/ps/PSFontUtils/determineSuppliedFonts(org.apache.xmlgraphics.ps.dsc.ResourceTracker,org.apache.fop.fonts.FontInfo,java.util.Map)#java/util/Map/keySet()
org/apache/fop/render/ps/PSFontUtils/determineSuppliedFonts(org.apache.xmlgraphics.ps.dsc.ResourceTracker,org.apache.fop.fonts.FontInfo,java.util.Map)#java/lang/StringBuilder/toString()
org/apache/fop/render/ps/PSFontUtils/determineSuppliedFonts(org.apache.xmlgraphics.ps.dsc.ResourceTracker,org.apache.fop.fonts.FontInfo,java.util.Map)#org/apache/xmlgraphics/ps/PSResource/PSResource(java.lang.String,java.lang.String)
org/apache/fop/render/ps/PSFontUtils/embedType2CFF(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.fonts.MultiByteFont,java.io.InputStream)#java/util/Iterator/hasNext()
org/apache/fop/render/ps/PSFontUtils/embedType2CFF(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.fonts.MultiByteFont,java.io.InputStream)#org/apache/fop/fonts/MultiByteFont/setFontName(java.lang.String)
org/apache/fop/render/ps/PSFontUtils/embedType2CFF(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.fonts.MultiByteFont,java.io.InputStream)#java/lang/String/format(java.lang.String,java.lang.Object[])
org/apache/fop/render/ps/PSFontUtils/embedType2CFF(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.fonts.MultiByteFont,java.io.InputStream)#org/apache/fontbox/cff/CFFStandardString/getName(int)
org/apache/fop/render/ps/PSFontUtils/embedType2CFF(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.fonts.MultiByteFont,java.io.InputStream)#org/apache/fop/fonts/cff/CFFDataReader$CFFIndexData/getNumObjects()
org/apache/fop/render/ps/PSFontUtils/embedType2CFF(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.fonts.MultiByteFont,java.io.InputStream)#java/util/LinkedHashMap/keySet()
org/apache/fop/render/ps/PSFontUtils/embedType2CFF(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.fonts.MultiByteFont,java.io.InputStream)#org/apache/fop/fonts/cff/CFFDataReader$DICTEntry/getOperands()
org/apache/fop/render/ps/PSFontUtils/embedType2CFF(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.fonts.MultiByteFont,java.io.InputStream)#java/lang/StringBuilder/toString()
org/apache/fop/render/ps/PSFontUtils/embedType2CFF(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.fonts.MultiByteFont,java.io.InputStream)#java/lang/Integer/intValue()
org/apache/fop/render/ps/PSFontUtils/embedType2CFF(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.fonts.MultiByteFont,java.io.InputStream)#java/util/LinkedHashMap/get(java.lang.Object)
org/apache/fop/render/ps/PSFontUtils/embedType2CFF(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.fonts.MultiByteFont,java.io.InputStream)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/render/ps/PSFontUtils/embedType2CFF(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.fonts.MultiByteFont,java.io.InputStream)#org/apache/fop/fonts/MultiByteFont/getEmbeddingMode()
org/apache/fop/render/ps/PSFontUtils/embedType2CFF(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.fonts.MultiByteFont,java.io.InputStream)#java/lang/StringBuilder/append(int)
org/apache/fop/render/ps/PSFontUtils/embedType2CFF(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.fonts.MultiByteFont,java.io.InputStream)#java/lang/String/length()
org/apache/fop/render/ps/PSFontUtils/embedType2CFF(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.fonts.MultiByteFont,java.io.InputStream)#java/util/Map/get(java.lang.Object)
org/apache/fop/render/ps/PSFontUtils/embedType2CFF(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.fonts.MultiByteFont,java.io.InputStream)#java/util/Iterator/next()
org/apache/fop/render/ps/PSFontUtils/embedType2CFF(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.fonts.MultiByteFont,java.io.InputStream)#java/lang/Number/intValue()
org/apache/fop/render/ps/PSFontUtils/embedType2CFF(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.fonts.MultiByteFont,java.io.InputStream)#org/apache/xmlgraphics/ps/PSGenerator/writeln(java.lang.String)
org/apache/fop/render/ps/PSFontUtils/embedType2CFF(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.fonts.MultiByteFont,java.io.InputStream)#org/apache/xmlgraphics/ps/PSGenerator/writeByteArr(byte[])
org/apache/fop/render/ps/PSFontUtils/embedType2CFF(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.fonts.MultiByteFont,java.io.InputStream)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/render/ps/PSFontUtils/embedType2CFF(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.fonts.MultiByteFont,java.io.InputStream)#java/lang/String/String(byte[])
org/apache/fop/render/ps/PSFontUtils/embedType2CFF(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.fonts.MultiByteFont,java.io.InputStream)#org/apache/fop/fonts/cff/CFFDataReader$CFFIndexData/getValue(int)
org/apache/fop/render/ps/PSFontUtils/embedType2CFF(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.fonts.MultiByteFont,java.io.InputStream)#java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)
org/apache/fop/render/ps/PSFontUtils/embedType2CFF(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.fonts.MultiByteFont,java.io.InputStream)#java/util/Set/iterator()
org/apache/fop/render/ps/PSFontUtils/embedType2CFF(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.fonts.MultiByteFont,java.io.InputStream)#java/lang/Integer/valueOf(int)
org/apache/fop/render/ps/PSFontUtils/embedType2CFF(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.fonts.MultiByteFont,java.io.InputStream)#java/util/List/get(int)
org/apache/fop/render/ps/PSFontUtils/embedFont(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.fonts.Typeface,org.apache.xmlgraphics.ps.PSResource,org.apache.fop.render.ps.PSEventProducer)#org/apache/commons/logging/Log/warn(java.lang.Object)
org/apache/fop/render/ps/PSFontUtils/embedFont(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.fonts.Typeface,org.apache.xmlgraphics.ps.PSResource,org.apache.fop.render.ps.PSEventProducer)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/render/ps/PSFontUtils/embedFont(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.fonts.Typeface,org.apache.xmlgraphics.ps.PSResource,org.apache.fop.render.ps.PSEventProducer)#org/apache/xmlgraphics/ps/PSGenerator/writeDSCComment(java.lang.String,java.lang.Object)
org/apache/fop/render/ps/PSFontUtils/embedFont(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.fonts.Typeface,org.apache.xmlgraphics.ps.PSResource,org.apache.fop.render.ps.PSEventProducer)#org/apache/xmlgraphics/ps/PSGenerator/commentln(java.lang.String)
org/apache/fop/render/ps/PSFontUtils/embedFont(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.fonts.Typeface,org.apache.xmlgraphics.ps.PSResource,org.apache.fop.render.ps.PSEventProducer)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/render/ps/PSFontUtils/embedFont(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.fonts.Typeface,org.apache.xmlgraphics.ps.PSResource,org.apache.fop.render.ps.PSEventProducer)#org/apache/xmlgraphics/ps/PSGenerator/getResourceTracker()
org/apache/fop/render/ps/PSFontUtils/embedFont(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.fonts.Typeface,org.apache.xmlgraphics.ps.PSResource,org.apache.fop.render.ps.PSEventProducer)#java/lang/StringBuilder/toString()
org/apache/fop/render/ps/PSFontUtils/embedFont(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.fonts.Typeface,org.apache.xmlgraphics.ps.PSResource,org.apache.fop.render.ps.PSEventProducer)#org/apache/xmlgraphics/ps/PSGenerator/includeProcsetCIDInitResource()
org/apache/fop/render/ps/PSFontUtils/embedFont(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.fonts.Typeface,org.apache.xmlgraphics.ps.PSResource,org.apache.fop.render.ps.PSEventProducer)#org/apache/fop/fonts/Typeface/getFontType()
org/apache/fop/render/ps/PSFontUtils/embedFont(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.fonts.Typeface,org.apache.xmlgraphics.ps.PSResource,org.apache.fop.render.ps.PSEventProducer)#org/apache/xmlgraphics/ps/PSGenerator/embedIdentityH()
org/apache/fop/render/ps/PSFontUtils/embedFont(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.fonts.Typeface,org.apache.xmlgraphics.ps.PSResource,org.apache.fop.render.ps.PSEventProducer)#org/apache/xmlgraphics/ps/dsc/ResourceTracker/registerSuppliedResource(org.apache.xmlgraphics.ps.PSResource)
org/apache/fop/render/ps/PSFontUtils/embedFont(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.fonts.Typeface,org.apache.xmlgraphics.ps.PSResource,org.apache.fop.render.ps.PSEventProducer)#org/apache/xmlgraphics/ps/PSGenerator/writeDSCComment(java.lang.String)
org/apache/fop/render/ps/PSFontUtils/embedFont(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.fonts.Typeface,org.apache.xmlgraphics.ps.PSResource,org.apache.fop.render.ps.PSEventProducer)#org/apache/xmlgraphics/ps/PSGenerator/getProcsetCIDInitResource()
org/apache/fop/render/ps/PSFontUtils/embedFont(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.fonts.Typeface,org.apache.xmlgraphics.ps.PSResource,org.apache.fop.render.ps.PSEventProducer)#org/apache/xmlgraphics/ps/PSGenerator/getIdentityHCMapResource()
org/apache/fop/render/ps/PSFontUtils/embedType2CIDFont(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.fonts.MultiByteFont,java.io.InputStream)#org/apache/xmlgraphics/ps/PSGenerator/write(int)
org/apache/fop/render/ps/PSFontUtils/embedType2CIDFont(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.fonts.MultiByteFont,java.io.InputStream)#org/apache/xmlgraphics/ps/PSGenerator/write(java.lang.String)
org/apache/fop/render/ps/PSFontUtils/embedType2CIDFont(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.fonts.MultiByteFont,java.io.InputStream)#org/apache/xmlgraphics/ps/PSGenerator/writeln(java.lang.String)
org/apache/fop/render/ps/PSFontUtils/embedType2CIDFont(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.fonts.MultiByteFont,java.io.InputStream)#org/apache/xmlgraphics/ps/PSGenerator/getResourceTracker()
org/apache/fop/render/ps/PSFontUtils/embedType2CIDFont(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.fonts.MultiByteFont,java.io.InputStream)#org/apache/xmlgraphics/ps/PSResource/PSResource(java.lang.String,java.lang.String)
org/apache/fop/render/ps/PSFontUtils/embedType2CIDFont(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.fonts.MultiByteFont,java.io.InputStream)#java/util/BitSet/nextSetBit(int)
org/apache/fop/render/ps/PSFontUtils/embedType2CIDFont(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.fonts.MultiByteFont,java.io.InputStream)#org/apache/fop/fonts/CIDFontType/getValue()
org/apache/fop/render/ps/PSFontUtils/embedType2CIDFont(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.fonts.MultiByteFont,java.io.InputStream)#org/apache/fop/fonts/MultiByteFont/getEmbeddingMode()
org/apache/fop/render/ps/PSFontUtils/embedType2CIDFont(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.fonts.MultiByteFont,java.io.InputStream)#org/apache/xmlgraphics/ps/PSGenerator/newLine()
org/apache/fop/render/ps/PSFontUtils/embedType2CIDFont(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.fonts.MultiByteFont,java.io.InputStream)#org/apache/xmlgraphics/ps/dsc/ResourceTracker/registerSuppliedResource(org.apache.xmlgraphics.ps.PSResource)
org/apache/fop/render/ps/PSFontUtils/embedType2CIDFont(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.fonts.MultiByteFont,java.io.InputStream)#org/apache/fop/fonts/truetype/TTFFile/readFont(org.apache.fop.fonts.truetype.FontFileReader,java.lang.String)
org/apache/fop/render/ps/PSFontUtils/embedType2CIDFont(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.fonts.MultiByteFont,java.io.InputStream)#java/lang/AssertionError/AssertionError()
org/apache/fop/render/ps/PSFontUtils/writeEncoding(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.fonts.SingleByteFont)#java/lang/Integer/intValue()
org/apache/fop/render/ps/PSFontUtils/writeEncoding(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.fonts.SingleByteFont)#java/util/Iterator/hasNext()
org/apache/fop/render/ps/PSFontUtils/writeEncoding(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.fonts.SingleByteFont)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/render/ps/PSFontUtils/writeEncoding(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.fonts.SingleByteFont)#java/lang/StringBuilder/append(int)
org/apache/fop/render/ps/PSFontUtils/writeEncoding(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.fonts.SingleByteFont)#java/util/Map/get(java.lang.Object)
org/apache/fop/render/ps/PSFontUtils/writeEncoding(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.fonts.SingleByteFont)#java/lang/String/format(java.lang.String,java.lang.Object[])
org/apache/fop/render/ps/PSFontUtils/writeEncoding(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.fonts.SingleByteFont)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/render/ps/PSFontUtils/writeEncoding(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.fonts.SingleByteFont)#java/util/Set/iterator()
org/apache/fop/render/ps/PSFontUtils/writeEncoding(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.fonts.SingleByteFont)#java/lang/Integer/valueOf(int)
org/apache/fop/render/ps/PSFontUtils/writeEncoding(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.fonts.SingleByteFont)#org/apache/fop/fonts/SingleByteFont/getEmbedFontName()
org/apache/fop/render/ps/PSFontUtils/writeEncoding(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.fonts.SingleByteFont)#java/lang/StringBuilder/toString()
org/apache/fop/render/ps/PSFontUtils/writeEncoding(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.fonts.SingleByteFont)#java/util/Iterator/next()
org/apache/fop/render/ps/PSFontUtils/writeEncoding(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.fonts.SingleByteFont)#org/apache/xmlgraphics/ps/PSGenerator/writeln(java.lang.String)
org/apache/fop/render/ps/PSFontUtils/writeEncoding(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.fonts.SingleByteFont)#java/util/Map/keySet()
org/apache/fop/complexscripts/fonts/GlyphPositioningTable/ChainedContextualSubtableFormat2/populate(java.util.List)#java/lang/Integer/intValue()
org/apache/fop/complexscripts/fonts/GlyphPositioningTable/ChainedContextualSubtableFormat2/populate(java.util.List)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/complexscripts/fonts/GlyphPositioningTable/ChainedContextualSubtableFormat2/populate(java.util.List)#java/lang/StringBuilder/append(int)
org/apache/fop/complexscripts/fonts/GlyphPositioningTable/ChainedContextualSubtableFormat2/populate(java.util.List)#java/util/List/size()
org/apache/fop/complexscripts/fonts/GlyphPositioningTable/ChainedContextualSubtableFormat2/populate(java.util.List)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/complexscripts/fonts/GlyphPositioningTable/ChainedContextualSubtableFormat2/populate(java.util.List)#java/util/List/get(int)
org/apache/fop/complexscripts/fonts/GlyphPositioningTable/ChainedContextualSubtableFormat2/populate(java.util.List)#java/lang/StringBuilder/toString()
org/apache/fop/complexscripts/fonts/GlyphPositioningTable/ChainedContextualSubtableFormat2/populate(java.util.List)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/fop/complexscripts/fonts/GlyphPositioningTable/ChainedContextualSubtableFormat2/populate(java.util.List)#java/lang/Object/getClass()
org/apache/fop/render/RendererFactory/discoverRenderers()#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/fop/render/RendererFactory/discoverRenderers()#java/util/Iterator/hasNext()
org/apache/fop/render/RendererFactory/discoverRenderers()#org/apache/commons/logging/Log/isDebugEnabled()
org/apache/fop/render/RendererFactory/discoverRenderers()#java/util/Iterator/next()
org/apache/fop/render/RendererFactory/discoverRenderers()#java/lang/Class/getName()
org/apache/fop/render/RendererFactory/discoverRenderers()#java/lang/StringBuilder/StringBuilder()
org/apache/fop/render/RendererFactory/discoverRenderers()#org/apache/commons/logging/Log/error(java.lang.Object,java.lang.Throwable)
org/apache/fop/render/RendererFactory/discoverRenderers()#java/lang/Object/getClass()
org/apache/fop/render/RendererFactory/discoverRenderers()#java/lang/StringBuilder/toString()
org/apache/fop/render/RendererFactory/discoverRenderers()#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/render/RendererFactory/discoverRenderers()#org/apache/xmlgraphics/util/Service/providers(java.lang.Class)
org/apache/fop/render/RendererFactory/listSupportedMimeTypes()#java/util/ArrayList/ArrayList()
org/apache/fop/render/RendererFactory/listSupportedMimeTypes()#java/util/Iterator/hasNext()
org/apache/fop/render/RendererFactory/listSupportedMimeTypes()#java/util/List/size()
org/apache/fop/render/RendererFactory/listSupportedMimeTypes()#java/util/List/toArray(java.lang.Object[])
org/apache/fop/render/RendererFactory/listSupportedMimeTypes()#java/util/Collections/sort(java.util.List)
org/apache/fop/render/RendererFactory/listSupportedMimeTypes()#java/util/Set/iterator()
org/apache/fop/render/RendererFactory/listSupportedMimeTypes()#java/util/List/add(java.lang.Object)
org/apache/fop/render/RendererFactory/listSupportedMimeTypes()#java/util/Iterator/next()
org/apache/fop/render/RendererFactory/listSupportedMimeTypes()#java/util/Map/keySet()
org/apache/fop/render/RendererFactory/discoverFOEventHandlers()#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/fop/render/RendererFactory/discoverFOEventHandlers()#java/util/Iterator/hasNext()
org/apache/fop/render/RendererFactory/discoverFOEventHandlers()#org/apache/commons/logging/Log/isDebugEnabled()
org/apache/fop/render/RendererFactory/discoverFOEventHandlers()#java/util/Iterator/next()
org/apache/fop/render/RendererFactory/discoverFOEventHandlers()#java/lang/Class/getName()
org/apache/fop/render/RendererFactory/discoverFOEventHandlers()#java/lang/StringBuilder/StringBuilder()
org/apache/fop/render/RendererFactory/discoverFOEventHandlers()#org/apache/commons/logging/Log/error(java.lang.Object,java.lang.Throwable)
org/apache/fop/render/RendererFactory/discoverFOEventHandlers()#java/lang/Object/getClass()
org/apache/fop/render/RendererFactory/discoverFOEventHandlers()#java/lang/StringBuilder/toString()
org/apache/fop/render/RendererFactory/discoverFOEventHandlers()#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/render/RendererFactory/discoverFOEventHandlers()#org/apache/xmlgraphics/util/Service/providers(java.lang.Class)
org/apache/fop/render/RendererFactory/discoverDocumentHandlers()#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/fop/render/RendererFactory/discoverDocumentHandlers()#java/util/Iterator/hasNext()
org/apache/fop/render/RendererFactory/discoverDocumentHandlers()#org/apache/commons/logging/Log/isDebugEnabled()
org/apache/fop/render/RendererFactory/discoverDocumentHandlers()#java/util/Iterator/next()
org/apache/fop/render/RendererFactory/discoverDocumentHandlers()#java/lang/Class/getName()
org/apache/fop/render/RendererFactory/discoverDocumentHandlers()#java/lang/StringBuilder/StringBuilder()
org/apache/fop/render/RendererFactory/discoverDocumentHandlers()#org/apache/commons/logging/Log/error(java.lang.Object,java.lang.Throwable)
org/apache/fop/render/RendererFactory/discoverDocumentHandlers()#java/lang/Object/getClass()
org/apache/fop/render/RendererFactory/discoverDocumentHandlers()#java/lang/StringBuilder/toString()
org/apache/fop/render/RendererFactory/discoverDocumentHandlers()#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/render/RendererFactory/discoverDocumentHandlers()#org/apache/xmlgraphics/util/Service/providers(java.lang.Class)
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readContextualSubTableFormat1(int,int,long,int)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readContextualSubTableFormat1(int,int,long,int)#java/lang/StringBuilder/append(int)
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readContextualSubTableFormat1(int,int,long,int)#org/apache/commons/logging/Log/isDebugEnabled()
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readContextualSubTableFormat1(int,int,long,int)#org/apache/fop/complexscripts/fonts/GlyphTable$GlyphSequenceRule/GlyphSequenceRule(org.apache.fop.complexscripts.fonts.GlyphTable$RuleLookup[],int,int[])
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readContextualSubTableFormat1(int,int,long,int)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readContextualSubTableFormat1(int,int,long,int)#java/util/List/add(java.lang.Object)
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readContextualSubTableFormat1(int,int,long,int)#java/lang/StringBuilder/toString()
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readContextualSubTableFormat1(int,int,long,int)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readContextualSubTableFormat1(int,int,long,int)#org/apache/fop/complexscripts/fonts/GlyphTable$HomogeneousRuleSet/HomogeneousRuleSet(org.apache.fop.complexscripts.fonts.GlyphTable$Rule[])
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readContextualSubTableFormat2(int,int,long,int)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readContextualSubTableFormat2(int,int,long,int)#java/lang/StringBuilder/append(int)
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readContextualSubTableFormat2(int,int,long,int)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readContextualSubTableFormat2(int,int,long,int)#org/apache/commons/logging/Log/isDebugEnabled()
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readContextualSubTableFormat2(int,int,long,int)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readContextualSubTableFormat2(int,int,long,int)#java/lang/Integer/valueOf(int)
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readContextualSubTableFormat2(int,int,long,int)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readContextualSubTableFormat2(int,int,long,int)#org/apache/fop/complexscripts/fonts/GlyphTable$HomogeneousRuleSet/HomogeneousRuleSet(org.apache.fop.complexscripts.fonts.GlyphTable$Rule[])
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readContextualSubTableFormat2(int,int,long,int)#java/util/List/add(java.lang.Object)
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readContextualSubTableFormat2(int,int,long,int)#org/apache/fop/complexscripts/fonts/GlyphTable$ClassSequenceRule/ClassSequenceRule(org.apache.fop.complexscripts.fonts.GlyphTable$RuleLookup[],int,int[])
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readContextualSubTableFormat2(int,int,long,int)#java/lang/StringBuilder/toString()
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readContextualSubTableFormat3(int,int,long,int)#org/apache/fop/complexscripts/fonts/GlyphTable$CoverageSequenceRule/CoverageSequenceRule(org.apache.fop.complexscripts.fonts.GlyphTable$RuleLookup[],int,org.apache.fop.complexscripts.fonts.GlyphCoverageTable[])
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readContextualSubTableFormat3(int,int,long,int)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readContextualSubTableFormat3(int,int,long,int)#java/lang/StringBuilder/append(int)
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readContextualSubTableFormat3(int,int,long,int)#org/apache/commons/logging/Log/isDebugEnabled()
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readContextualSubTableFormat3(int,int,long,int)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readContextualSubTableFormat3(int,int,long,int)#java/util/List/add(java.lang.Object)
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readContextualSubTableFormat3(int,int,long,int)#java/lang/StringBuilder/toString()
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readContextualSubTableFormat3(int,int,long,int)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readContextualSubTableFormat3(int,int,long,int)#org/apache/fop/complexscripts/fonts/GlyphTable$HomogeneousRuleSet/HomogeneousRuleSet(org.apache.fop.complexscripts.fonts.GlyphTable$Rule[])
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readContextualSubTableFormat3(int,int,long,int)#java/lang/AssertionError/AssertionError()
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readChainedContextualPosTableFormat1(int,int,long,int)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readChainedContextualPosTableFormat1(int,int,long,int)#java/lang/StringBuilder/append(int)
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readChainedContextualPosTableFormat1(int,int,long,int)#org/apache/commons/logging/Log/isDebugEnabled()
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readChainedContextualPosTableFormat1(int,int,long,int)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readChainedContextualPosTableFormat1(int,int,long,int)#java/util/List/add(java.lang.Object)
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readChainedContextualPosTableFormat1(int,int,long,int)#org/apache/fop/complexscripts/fonts/GlyphTable$ChainedGlyphSequenceRule/ChainedGlyphSequenceRule(org.apache.fop.complexscripts.fonts.GlyphTable$RuleLookup[],int,int[],int[],int[])
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readChainedContextualPosTableFormat1(int,int,long,int)#java/lang/StringBuilder/toString()
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readChainedContextualPosTableFormat1(int,int,long,int)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readChainedContextualPosTableFormat1(int,int,long,int)#org/apache/fop/complexscripts/fonts/GlyphTable$HomogeneousRuleSet/HomogeneousRuleSet(org.apache.fop.complexscripts.fonts.GlyphTable$Rule[])
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readChainedContextualPosTableFormat2(int,int,long,int)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readChainedContextualPosTableFormat2(int,int,long,int)#java/lang/StringBuilder/append(int)
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readChainedContextualPosTableFormat2(int,int,long,int)#org/apache/commons/logging/Log/isDebugEnabled()
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readChainedContextualPosTableFormat2(int,int,long,int)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readChainedContextualPosTableFormat2(int,int,long,int)#java/util/List/add(java.lang.Object)
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readChainedContextualPosTableFormat2(int,int,long,int)#java/lang/Integer/valueOf(int)
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readChainedContextualPosTableFormat2(int,int,long,int)#org/apache/fop/complexscripts/fonts/GlyphTable$ChainedClassSequenceRule/ChainedClassSequenceRule(org.apache.fop.complexscripts.fonts.GlyphTable$RuleLookup[],int,int[],int[],int[])
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readChainedContextualPosTableFormat2(int,int,long,int)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readChainedContextualPosTableFormat2(int,int,long,int)#org/apache/fop/complexscripts/fonts/GlyphTable$HomogeneousRuleSet/HomogeneousRuleSet(org.apache.fop.complexscripts.fonts.GlyphTable$Rule[])
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readChainedContextualPosTableFormat2(int,int,long,int)#java/lang/StringBuilder/toString()
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readChainedContextualPosTableFormat3(int,int,long,int)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readChainedContextualPosTableFormat3(int,int,long,int)#java/lang/StringBuilder/append(int)
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readChainedContextualPosTableFormat3(int,int,long,int)#org/apache/commons/logging/Log/isDebugEnabled()
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readChainedContextualPosTableFormat3(int,int,long,int)#org/apache/fop/complexscripts/fonts/GlyphTable$ChainedCoverageSequenceRule/ChainedCoverageSequenceRule(org.apache.fop.complexscripts.fonts.GlyphTable$RuleLookup[],int,org.apache.fop.complexscripts.fonts.GlyphCoverageTable[],org.apache.fop.complexscripts.fonts.GlyphCoverageTable[],org.apache.fop.complexscripts.fonts.GlyphCoverageTable[])
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readChainedContextualPosTableFormat3(int,int,long,int)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readChainedContextualPosTableFormat3(int,int,long,int)#java/util/List/add(java.lang.Object)
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readChainedContextualPosTableFormat3(int,int,long,int)#java/lang/StringBuilder/toString()
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readChainedContextualPosTableFormat3(int,int,long,int)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readChainedContextualPosTableFormat3(int,int,long,int)#org/apache/fop/complexscripts/fonts/GlyphTable$HomogeneousRuleSet/HomogeneousRuleSet(org.apache.fop.complexscripts.fonts.GlyphTable$Rule[])
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readChainedContextualPosTableFormat3(int,int,long,int)#java/lang/AssertionError/AssertionError()
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readLigatureSubTableFormat1(int,int,long,int)#org/apache/fop/complexscripts/fonts/GlyphSubstitutionTable$LigatureSet/LigatureSet(java.util.List)
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readLigatureSubTableFormat1(int,int,long,int)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readLigatureSubTableFormat1(int,int,long,int)#java/lang/StringBuilder/append(int)
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readLigatureSubTableFormat1(int,int,long,int)#org/apache/fop/complexscripts/fonts/GlyphSubstitutionTable$Ligature/Ligature(int,int[])
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readLigatureSubTableFormat1(int,int,long,int)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readLigatureSubTableFormat1(int,int,long,int)#java/util/List/add(java.lang.Object)
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readLigatureSubTableFormat1(int,int,long,int)#java/lang/StringBuilder/toString()
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readLigatureSubTableFormat1(int,int,long,int)#java/util/ArrayList/ArrayList()
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readLigatureSubTableFormat1(int,int,long,int)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readLigatureSubTableFormat1(int,int,long,int)#org/apache/commons/logging/Log/isDebugEnabled()
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readGDEFMarkGlyphsTableFormat1(org.apache.fop.fonts.truetype.OFTableName,int,long,int)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readGDEFMarkGlyphsTableFormat1(org.apache.fop.fonts.truetype.OFTableName,int,long,int)#java/lang/StringBuilder/append(int)
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readGDEFMarkGlyphsTableFormat1(org.apache.fop.fonts.truetype.OFTableName,int,long,int)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readGDEFMarkGlyphsTableFormat1(org.apache.fop.fonts.truetype.OFTableName,int,long,int)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readGDEFMarkGlyphsTableFormat1(org.apache.fop.fonts.truetype.OFTableName,int,long,int)#org/apache/commons/logging/Log/isDebugEnabled()
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readGDEFMarkGlyphsTableFormat1(org.apache.fop.fonts.truetype.OFTableName,int,long,int)#java/util/Arrays/asList(java.lang.Object[])
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readGDEFMarkGlyphsTableFormat1(org.apache.fop.fonts.truetype.OFTableName,int,long,int)#java/lang/StringBuilder/append(long)
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readGDEFMarkGlyphsTableFormat1(org.apache.fop.fonts.truetype.OFTableName,int,long,int)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readGDEFMarkGlyphsTableFormat1(org.apache.fop.fonts.truetype.OFTableName,int,long,int)#java/lang/StringBuilder/toString()
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readFeatureTable(org.apache.fop.fonts.truetype.OFTableName,long,java.lang.String,int)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readFeatureTable(org.apache.fop.fonts.truetype.OFTableName,long,java.lang.String,int)#java/lang/StringBuilder/append(int)
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readFeatureTable(org.apache.fop.fonts.truetype.OFTableName,long,java.lang.String,int)#org/apache/commons/logging/Log/isDebugEnabled()
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readFeatureTable(org.apache.fop.fonts.truetype.OFTableName,long,java.lang.String,int)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readFeatureTable(org.apache.fop.fonts.truetype.OFTableName,long,java.lang.String,int)#java/util/List/add(java.lang.Object)
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readFeatureTable(org.apache.fop.fonts.truetype.OFTableName,long,java.lang.String,int)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readFeatureTable(org.apache.fop.fonts.truetype.OFTableName,long,java.lang.String,int)#java/lang/StringBuilder/toString()
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readFeatureTable(org.apache.fop.fonts.truetype.OFTableName,long,java.lang.String,int)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readFeatureTable(org.apache.fop.fonts.truetype.OFTableName,long,java.lang.String,int)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readFeatureTable(org.apache.fop.fonts.truetype.OFTableName,long,java.lang.String,int)#java/util/ArrayList/ArrayList()
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readPairPosTableFormat2(int,int,long,int)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readPairPosTableFormat2(int,int,long,int)#java/lang/StringBuilder/append(int)
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readPairPosTableFormat2(int,int,long,int)#org/apache/commons/logging/Log/isDebugEnabled()
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readPairPosTableFormat2(int,int,long,int)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readPairPosTableFormat2(int,int,long,int)#java/util/List/add(java.lang.Object)
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readPairPosTableFormat2(int,int,long,int)#java/lang/Integer/valueOf(int)
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readPairPosTableFormat2(int,int,long,int)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readPairPosTableFormat2(int,int,long,int)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readPairPosTableFormat2(int,int,long,int)#java/lang/StringBuilder/toString()
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readMarkToBasePosTableFormat1(int,int,long,int)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readMarkToBasePosTableFormat1(int,int,long,int)#java/lang/StringBuilder/append(int)
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readMarkToBasePosTableFormat1(int,int,long,int)#org/apache/commons/logging/Log/isDebugEnabled()
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readMarkToBasePosTableFormat1(int,int,long,int)#org/apache/fop/complexscripts/fonts/GlyphPositioningTable$MarkAnchor/MarkAnchor(int,org.apache.fop.complexscripts.fonts.GlyphPositioningTable$Anchor)
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readMarkToBasePosTableFormat1(int,int,long,int)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readMarkToBasePosTableFormat1(int,int,long,int)#java/util/List/add(java.lang.Object)
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readMarkToBasePosTableFormat1(int,int,long,int)#java/lang/Integer/valueOf(int)
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readMarkToBasePosTableFormat1(int,int,long,int)#java/lang/StringBuilder/toString()
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readMarkToBasePosTableFormat1(int,int,long,int)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readMarkToBasePosTableFormat1(int,int,long,int)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readClassDefTableFormat2(java.lang.String,long,int)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readClassDefTableFormat2(java.lang.String,long,int)#org/apache/fop/complexscripts/fonts/GlyphMappingTable$MappingRange/MappingRange(int,int,int)
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readClassDefTableFormat2(java.lang.String,long,int)#java/lang/StringBuilder/append(int)
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readClassDefTableFormat2(java.lang.String,long,int)#org/apache/commons/logging/Log/isDebugEnabled()
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readClassDefTableFormat2(java.lang.String,long,int)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readClassDefTableFormat2(java.lang.String,long,int)#java/util/List/add(java.lang.Object)
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readClassDefTableFormat2(java.lang.String,long,int)#java/util/ArrayList/ArrayList()
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readClassDefTableFormat2(java.lang.String,long,int)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readClassDefTableFormat2(java.lang.String,long,int)#java/lang/StringBuilder/toString()
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readScriptTable(org.apache.fop.fonts.truetype.OFTableName,long,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readScriptTable(org.apache.fop.fonts.truetype.OFTableName,long,java.lang.String)#java/lang/StringBuilder/append(int)
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readScriptTable(org.apache.fop.fonts.truetype.OFTableName,long,java.lang.String)#org/apache/commons/logging/Log/isDebugEnabled()
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readScriptTable(org.apache.fop.fonts.truetype.OFTableName,long,java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readScriptTable(org.apache.fop.fonts.truetype.OFTableName,long,java.lang.String)#java/util/List/add(java.lang.Object)
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readScriptTable(org.apache.fop.fonts.truetype.OFTableName,long,java.lang.String)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readScriptTable(org.apache.fop.fonts.truetype.OFTableName,long,java.lang.String)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readScriptTable(org.apache.fop.fonts.truetype.OFTableName,long,java.lang.String)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readScriptTable(org.apache.fop.fonts.truetype.OFTableName,long,java.lang.String)#java/util/ArrayList/ArrayList()
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readScriptTable(org.apache.fop.fonts.truetype.OFTableName,long,java.lang.String)#java/lang/StringBuilder/toString()
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readMarkToMarkPosTableFormat1(int,int,long,int)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readMarkToMarkPosTableFormat1(int,int,long,int)#java/lang/StringBuilder/append(int)
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readMarkToMarkPosTableFormat1(int,int,long,int)#org/apache/commons/logging/Log/isDebugEnabled()
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readMarkToMarkPosTableFormat1(int,int,long,int)#org/apache/fop/complexscripts/fonts/GlyphPositioningTable$MarkAnchor/MarkAnchor(int,org.apache.fop.complexscripts.fonts.GlyphPositioningTable$Anchor)
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readMarkToMarkPosTableFormat1(int,int,long,int)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readMarkToMarkPosTableFormat1(int,int,long,int)#java/util/List/add(java.lang.Object)
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readMarkToMarkPosTableFormat1(int,int,long,int)#java/lang/Integer/valueOf(int)
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readMarkToMarkPosTableFormat1(int,int,long,int)#java/lang/StringBuilder/toString()
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readMarkToMarkPosTableFormat1(int,int,long,int)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readMarkToMarkPosTableFormat1(int,int,long,int)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readChainedContextualSubTableFormat1(int,int,long,int)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readChainedContextualSubTableFormat1(int,int,long,int)#java/lang/StringBuilder/append(int)
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readChainedContextualSubTableFormat1(int,int,long,int)#org/apache/commons/logging/Log/isDebugEnabled()
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readChainedContextualSubTableFormat1(int,int,long,int)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readChainedContextualSubTableFormat1(int,int,long,int)#java/util/List/add(java.lang.Object)
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readChainedContextualSubTableFormat1(int,int,long,int)#org/apache/fop/complexscripts/fonts/GlyphTable$ChainedGlyphSequenceRule/ChainedGlyphSequenceRule(org.apache.fop.complexscripts.fonts.GlyphTable$RuleLookup[],int,int[],int[],int[])
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readChainedContextualSubTableFormat1(int,int,long,int)#java/lang/StringBuilder/toString()
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readChainedContextualSubTableFormat1(int,int,long,int)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readChainedContextualSubTableFormat1(int,int,long,int)#org/apache/fop/complexscripts/fonts/GlyphTable$HomogeneousRuleSet/HomogeneousRuleSet(org.apache.fop.complexscripts.fonts.GlyphTable$Rule[])
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readLookupTable(org.apache.fop.fonts.truetype.OFTableName,int,long)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readLookupTable(org.apache.fop.fonts.truetype.OFTableName,int,long)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readLookupTable(org.apache.fop.fonts.truetype.OFTableName,int,long)#org/apache/commons/logging/Log/isDebugEnabled()
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readLookupTable(org.apache.fop.fonts.truetype.OFTableName,int,long)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readLookupTable(org.apache.fop.fonts.truetype.OFTableName,int,long)#org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader$GPOSLookupType/toString(int)
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readLookupTable(org.apache.fop.fonts.truetype.OFTableName,int,long)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readLookupTable(org.apache.fop.fonts.truetype.OFTableName,int,long)#java/lang/StringBuilder/toString()
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readLookupTable(org.apache.fop.fonts.truetype.OFTableName,int,long)#org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader$GSUBLookupType/toString(int)
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readLookupTable(org.apache.fop.fonts.truetype.OFTableName,int,long)#java/lang/StringBuilder/append(int)
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readLookupTable(org.apache.fop.fonts.truetype.OFTableName,int,long)#org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader$LookupFlag/toString(int)
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readChainedContextualSubTableFormat2(int,int,long,int)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readChainedContextualSubTableFormat2(int,int,long,int)#java/lang/StringBuilder/append(int)
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readChainedContextualSubTableFormat2(int,int,long,int)#org/apache/commons/logging/Log/isDebugEnabled()
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readChainedContextualSubTableFormat2(int,int,long,int)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readChainedContextualSubTableFormat2(int,int,long,int)#java/util/List/add(java.lang.Object)
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readChainedContextualSubTableFormat2(int,int,long,int)#java/lang/Integer/valueOf(int)
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readChainedContextualSubTableFormat2(int,int,long,int)#org/apache/fop/complexscripts/fonts/GlyphTable$ChainedClassSequenceRule/ChainedClassSequenceRule(org.apache.fop.complexscripts.fonts.GlyphTable$RuleLookup[],int,int[],int[],int[])
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readChainedContextualSubTableFormat2(int,int,long,int)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readChainedContextualSubTableFormat2(int,int,long,int)#org/apache/fop/complexscripts/fonts/GlyphTable$HomogeneousRuleSet/HomogeneousRuleSet(org.apache.fop.complexscripts.fonts.GlyphTable$Rule[])
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readChainedContextualSubTableFormat2(int,int,long,int)#java/lang/StringBuilder/toString()
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readChainedContextualSubTableFormat3(int,int,long,int)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readChainedContextualSubTableFormat3(int,int,long,int)#java/lang/StringBuilder/append(int)
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readChainedContextualSubTableFormat3(int,int,long,int)#org/apache/commons/logging/Log/isDebugEnabled()
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readChainedContextualSubTableFormat3(int,int,long,int)#org/apache/fop/complexscripts/fonts/GlyphTable$ChainedCoverageSequenceRule/ChainedCoverageSequenceRule(org.apache.fop.complexscripts.fonts.GlyphTable$RuleLookup[],int,org.apache.fop.complexscripts.fonts.GlyphCoverageTable[],org.apache.fop.complexscripts.fonts.GlyphCoverageTable[],org.apache.fop.complexscripts.fonts.GlyphCoverageTable[])
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readChainedContextualSubTableFormat3(int,int,long,int)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readChainedContextualSubTableFormat3(int,int,long,int)#java/util/List/add(java.lang.Object)
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readChainedContextualSubTableFormat3(int,int,long,int)#java/lang/StringBuilder/toString()
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readChainedContextualSubTableFormat3(int,int,long,int)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readChainedContextualSubTableFormat3(int,int,long,int)#org/apache/fop/complexscripts/fonts/GlyphTable$HomogeneousRuleSet/HomogeneousRuleSet(org.apache.fop.complexscripts.fonts.GlyphTable$Rule[])
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readChainedContextualSubTableFormat3(int,int,long,int)#java/lang/AssertionError/AssertionError()
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readMarkToLigaturePosTableFormat1(int,int,long,int)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readMarkToLigaturePosTableFormat1(int,int,long,int)#java/lang/StringBuilder/append(int)
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readMarkToLigaturePosTableFormat1(int,int,long,int)#org/apache/commons/logging/Log/isDebugEnabled()
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readMarkToLigaturePosTableFormat1(int,int,long,int)#org/apache/fop/complexscripts/fonts/GlyphPositioningTable$MarkAnchor/MarkAnchor(int,org.apache.fop.complexscripts.fonts.GlyphPositioningTable$Anchor)
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readMarkToLigaturePosTableFormat1(int,int,long,int)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readMarkToLigaturePosTableFormat1(int,int,long,int)#java/util/List/add(java.lang.Object)
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readMarkToLigaturePosTableFormat1(int,int,long,int)#java/lang/Integer/valueOf(int)
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readMarkToLigaturePosTableFormat1(int,int,long,int)#java/lang/StringBuilder/toString()
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readMarkToLigaturePosTableFormat1(int,int,long,int)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readMarkToLigaturePosTableFormat1(int,int,long,int)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readCoverageTableFormat2(java.lang.String,long,int)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readCoverageTableFormat2(java.lang.String,long,int)#org/apache/fop/complexscripts/fonts/GlyphMappingTable$MappingRange/MappingRange(int,int,int)
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readCoverageTableFormat2(java.lang.String,long,int)#java/lang/StringBuilder/append(int)
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readCoverageTableFormat2(java.lang.String,long,int)#org/apache/commons/logging/Log/isDebugEnabled()
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readCoverageTableFormat2(java.lang.String,long,int)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readCoverageTableFormat2(java.lang.String,long,int)#java/util/List/add(java.lang.Object)
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readCoverageTableFormat2(java.lang.String,long,int)#java/lang/StringBuilder/toString()
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readCoverageTableFormat2(java.lang.String,long,int)#java/util/ArrayList/ArrayList()
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readCoverageTableFormat2(java.lang.String,long,int)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readLangSysTable(org.apache.fop.fonts.truetype.OFTableName,long,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readLangSysTable(org.apache.fop.fonts.truetype.OFTableName,long,java.lang.String)#java/lang/StringBuilder/append(int)
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readLangSysTable(org.apache.fop.fonts.truetype.OFTableName,long,java.lang.String)#org/apache/commons/logging/Log/isDebugEnabled()
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readLangSysTable(org.apache.fop.fonts.truetype.OFTableName,long,java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readLangSysTable(org.apache.fop.fonts.truetype.OFTableName,long,java.lang.String)#java/util/List/add(java.lang.Object)
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readLangSysTable(org.apache.fop.fonts.truetype.OFTableName,long,java.lang.String)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readLangSysTable(org.apache.fop.fonts.truetype.OFTableName,long,java.lang.String)#java/util/LinkedHashMap/LinkedHashMap()
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readLangSysTable(org.apache.fop.fonts.truetype.OFTableName,long,java.lang.String)#java/lang/StringBuilder/toString()
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readLangSysTable(org.apache.fop.fonts.truetype.OFTableName,long,java.lang.String)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readLangSysTable(org.apache.fop.fonts.truetype.OFTableName,long,java.lang.String)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readLangSysTable(org.apache.fop.fonts.truetype.OFTableName,long,java.lang.String)#java/util/ArrayList/ArrayList()
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readContextualPosTableFormat1(int,int,long,int)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readContextualPosTableFormat1(int,int,long,int)#java/lang/StringBuilder/append(int)
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readContextualPosTableFormat1(int,int,long,int)#org/apache/commons/logging/Log/isDebugEnabled()
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readContextualPosTableFormat1(int,int,long,int)#org/apache/fop/complexscripts/fonts/GlyphTable$GlyphSequenceRule/GlyphSequenceRule(org.apache.fop.complexscripts.fonts.GlyphTable$RuleLookup[],int,int[])
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readContextualPosTableFormat1(int,int,long,int)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readContextualPosTableFormat1(int,int,long,int)#java/util/List/add(java.lang.Object)
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readContextualPosTableFormat1(int,int,long,int)#java/lang/StringBuilder/toString()
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readContextualPosTableFormat1(int,int,long,int)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readContextualPosTableFormat1(int,int,long,int)#org/apache/fop/complexscripts/fonts/GlyphTable$HomogeneousRuleSet/HomogeneousRuleSet(org.apache.fop.complexscripts.fonts.GlyphTable$Rule[])
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readContextualPosTableFormat2(int,int,long,int)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readContextualPosTableFormat2(int,int,long,int)#java/lang/StringBuilder/append(int)
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readContextualPosTableFormat2(int,int,long,int)#org/apache/commons/logging/Log/isDebugEnabled()
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readContextualPosTableFormat2(int,int,long,int)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readContextualPosTableFormat2(int,int,long,int)#java/lang/Integer/valueOf(int)
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readContextualPosTableFormat2(int,int,long,int)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readContextualPosTableFormat2(int,int,long,int)#org/apache/fop/complexscripts/fonts/GlyphTable$HomogeneousRuleSet/HomogeneousRuleSet(org.apache.fop.complexscripts.fonts.GlyphTable$Rule[])
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readContextualPosTableFormat2(int,int,long,int)#java/util/List/add(java.lang.Object)
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readContextualPosTableFormat2(int,int,long,int)#org/apache/fop/complexscripts/fonts/GlyphTable$ClassSequenceRule/ClassSequenceRule(org.apache.fop.complexscripts.fonts.GlyphTable$RuleLookup[],int,int[])
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readContextualPosTableFormat2(int,int,long,int)#java/lang/StringBuilder/toString()
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readContextualPosTableFormat3(int,int,long,int)#org/apache/fop/complexscripts/fonts/GlyphTable$CoverageSequenceRule/CoverageSequenceRule(org.apache.fop.complexscripts.fonts.GlyphTable$RuleLookup[],int,org.apache.fop.complexscripts.fonts.GlyphCoverageTable[])
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readContextualPosTableFormat3(int,int,long,int)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readContextualPosTableFormat3(int,int,long,int)#java/lang/StringBuilder/append(int)
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readContextualPosTableFormat3(int,int,long,int)#org/apache/commons/logging/Log/isDebugEnabled()
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readContextualPosTableFormat3(int,int,long,int)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readContextualPosTableFormat3(int,int,long,int)#java/util/List/add(java.lang.Object)
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readContextualPosTableFormat3(int,int,long,int)#java/lang/StringBuilder/toString()
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readContextualPosTableFormat3(int,int,long,int)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readContextualPosTableFormat3(int,int,long,int)#org/apache/fop/complexscripts/fonts/GlyphTable$HomogeneousRuleSet/HomogeneousRuleSet(org.apache.fop.complexscripts.fonts.GlyphTable$Rule[])
org/apache/fop/complexscripts/fonts/OTFAdvancedTypographicTableReader/readContextualPosTableFormat3(int,int,long,int)#java/lang/AssertionError/AssertionError()
org/apache/fop/fonts/LazyFont/toString()#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/fonts/LazyFont/toString()#java/lang/StringBuffer/append(char)
org/apache/fop/fonts/LazyFont/toString()#java/lang/StringBuilder/append(boolean)
org/apache/fop/fonts/LazyFont/toString()#java/lang/StringBuffer/toString()
org/apache/fop/fonts/LazyFont/toString()#java/lang/StringBuilder/StringBuilder()
org/apache/fop/fonts/LazyFont/toString()#java/lang/StringBuffer/StringBuffer(java.lang.String)
org/apache/fop/fonts/LazyFont/toString()#java/lang/StringBuilder/append(java.lang.Object)
org/apache/fop/fonts/LazyFont/toString()#java/lang/StringBuffer/append(java.lang.String)
org/apache/fop/fonts/LazyFont/toString()#java/lang/StringBuilder/toString()
org/apache/fop/fonts/LazyFont/load(boolean)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/fonts/LazyFont/load(boolean)#java/lang/RuntimeException/RuntimeException(java.lang.Throwable)
org/apache/fop/fonts/LazyFont/load(boolean)#org/xml/sax/InputSource/InputSource(java.io.InputStream)
org/apache/fop/fonts/LazyFont/load(boolean)#org/xml/sax/InputSource/setSystemId(java.lang.String)
org/apache/fop/fonts/LazyFont/load(boolean)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/fonts/LazyFont/load(boolean)#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/apache/fop/fonts/LazyFont/load(boolean)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/fop/fonts/LazyFont/load(boolean)#org/apache/commons/logging/Log/error(java.lang.Object,java.lang.Throwable)
org/apache/fop/fonts/LazyFont/load(boolean)#java/lang/StringBuilder/toString()
org/apache/fop/fonts/LazyFont/load(boolean)#java/net/URI/toASCIIString()
org/apache/fop/cli/CommandLineOptions/parsePDFProfile(java.lang.String[],int)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/fop/cli/CommandLineOptions/parsePDFProfile(java.lang.String[],int)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/cli/CommandLineOptions/parsePDFProfile(java.lang.String[],int)#org/apache/fop/pdf/PDFAMode/getValueOf(java.lang.String)
org/apache/fop/cli/CommandLineOptions/parsePDFProfile(java.lang.String[],int)#java/util/Map/get(java.lang.Object)
org/apache/fop/cli/CommandLineOptions/parsePDFProfile(java.lang.String[],int)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/cli/CommandLineOptions/parsePDFProfile(java.lang.String[],int)#org/apache/fop/pdf/PDFAMode/getName()
org/apache/fop/cli/CommandLineOptions/parsePDFProfile(java.lang.String[],int)#java/lang/StringBuilder/toString()
org/apache/fop/cli/CommandLineOptions/parsePDFProfile(java.lang.String[],int)#org/apache/fop/pdf/PDFXMode/getValueOf(java.lang.String)
org/apache/fop/cli/CommandLineOptions/parsePDFProfile(java.lang.String[],int)#org/apache/fop/pdf/PDFXMode/getName()
org/apache/fop/render/pdf/AbstractImageAdapter/populateXObjectDictionaryForIndexColorModel(org.apache.fop.pdf.PDFDictionary,java.awt.image.IndexColorModel)#java/io/IOException/printStackTrace()
org/apache/fop/render/pdf/AbstractImageAdapter/populateXObjectDictionaryForIndexColorModel(org.apache.fop.pdf.PDFDictionary,java.awt.image.IndexColorModel)#java/awt/image/IndexColorModel/getGreens(byte[])
org/apache/fop/render/pdf/AbstractImageAdapter/populateXObjectDictionaryForIndexColorModel(org.apache.fop.pdf.PDFDictionary,java.awt.image.IndexColorModel)#org/apache/commons/io/output/ByteArrayOutputStream/write(byte[])
org/apache/fop/render/pdf/AbstractImageAdapter/populateXObjectDictionaryForIndexColorModel(org.apache.fop.pdf.PDFDictionary,java.awt.image.IndexColorModel)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/fop/render/pdf/AbstractImageAdapter/populateXObjectDictionaryForIndexColorModel(org.apache.fop.pdf.PDFDictionary,java.awt.image.IndexColorModel)#java/awt/image/IndexColorModel/getBlues(byte[])
org/apache/fop/render/pdf/AbstractImageAdapter/populateXObjectDictionaryForIndexColorModel(org.apache.fop.pdf.PDFDictionary,java.awt.image.IndexColorModel)#org/apache/xmlgraphics/image/loader/Image/getInfo()
org/apache/fop/render/pdf/AbstractImageAdapter/populateXObjectDictionaryForIndexColorModel(org.apache.fop.pdf.PDFDictionary,java.awt.image.IndexColorModel)#org/apache/commons/logging/Log/warn(java.lang.Object)
org/apache/fop/render/pdf/AbstractImageAdapter/populateXObjectDictionaryForIndexColorModel(org.apache.fop.pdf.PDFDictionary,java.awt.image.IndexColorModel)#java/awt/image/IndexColorModel/getRGBs(int[])
org/apache/fop/render/pdf/AbstractImageAdapter/populateXObjectDictionaryForIndexColorModel(org.apache.fop.pdf.PDFDictionary,java.awt.image.IndexColorModel)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/render/pdf/AbstractImageAdapter/populateXObjectDictionaryForIndexColorModel(org.apache.fop.pdf.PDFDictionary,java.awt.image.IndexColorModel)#java/awt/color/ColorSpace/getType()
org/apache/fop/render/pdf/AbstractImageAdapter/populateXObjectDictionaryForIndexColorModel(org.apache.fop.pdf.PDFDictionary,java.awt.image.IndexColorModel)#java/awt/image/IndexColorModel/getColorSpace()
org/apache/fop/render/pdf/AbstractImageAdapter/populateXObjectDictionaryForIndexColorModel(org.apache.fop.pdf.PDFDictionary,java.awt.image.IndexColorModel)#java/util/Arrays/equals(byte[],byte[])
org/apache/fop/render/pdf/AbstractImageAdapter/populateXObjectDictionaryForIndexColorModel(org.apache.fop.pdf.PDFDictionary,java.awt.image.IndexColorModel)#java/awt/image/IndexColorModel/getMapSize()
org/apache/fop/render/pdf/AbstractImageAdapter/populateXObjectDictionaryForIndexColorModel(org.apache.fop.pdf.PDFDictionary,java.awt.image.IndexColorModel)#org/apache/commons/io/output/ByteArrayOutputStream/toByteArray()
org/apache/fop/render/pdf/AbstractImageAdapter/populateXObjectDictionaryForIndexColorModel(org.apache.fop.pdf.PDFDictionary,java.awt.image.IndexColorModel)#java/awt/image/RenderedImage/getTile(int,int)
org/apache/fop/render/pdf/AbstractImageAdapter/populateXObjectDictionaryForIndexColorModel(org.apache.fop.pdf.PDFDictionary,java.awt.image.IndexColorModel)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/render/pdf/AbstractImageAdapter/populateXObjectDictionaryForIndexColorModel(org.apache.fop.pdf.PDFDictionary,java.awt.image.IndexColorModel)#org/apache/commons/io/output/ByteArrayOutputStream/ByteArrayOutputStream()
org/apache/fop/render/pdf/AbstractImageAdapter/populateXObjectDictionaryForIndexColorModel(org.apache.fop.pdf.PDFDictionary,java.awt.image.IndexColorModel)#org/apache/xmlgraphics/image/loader/impl/ImageRendered/getRenderedImage()
org/apache/fop/render/pdf/AbstractImageAdapter/populateXObjectDictionaryForIndexColorModel(org.apache.fop.pdf.PDFDictionary,java.awt.image.IndexColorModel)#java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)
org/apache/fop/render/pdf/AbstractImageAdapter/populateXObjectDictionaryForIndexColorModel(org.apache.fop.pdf.PDFDictionary,java.awt.image.IndexColorModel)#java/awt/image/IndexColorModel/getPixelSize()
org/apache/fop/render/pdf/AbstractImageAdapter/populateXObjectDictionaryForIndexColorModel(org.apache.fop.pdf.PDFDictionary,java.awt.image.IndexColorModel)#org/apache/commons/io/IOUtils/closeQuietly(java.io.OutputStream)
org/apache/fop/render/pdf/AbstractImageAdapter/populateXObjectDictionaryForIndexColorModel(org.apache.fop.pdf.PDFDictionary,java.awt.image.IndexColorModel)#java/awt/image/Raster/getDataBuffer()
org/apache/fop/render/pdf/AbstractImageAdapter/populateXObjectDictionaryForIndexColorModel(org.apache.fop.pdf.PDFDictionary,java.awt.image.IndexColorModel)#org/apache/commons/io/output/ByteArrayOutputStream/write(int)
org/apache/fop/render/pdf/AbstractImageAdapter/populateXObjectDictionaryForIndexColorModel(org.apache.fop.pdf.PDFDictionary,java.awt.image.IndexColorModel)#java/lang/StringBuilder/toString()
org/apache/fop/render/pdf/AbstractImageAdapter/populateXObjectDictionaryForIndexColorModel(org.apache.fop.pdf.PDFDictionary,java.awt.image.IndexColorModel)#java/awt/image/IndexColorModel/getReds(byte[])
org/apache/fop/layoutmgr/inline/FootnoteLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#org/apache/fop/layoutmgr/inline/InlineStackingLayoutManager/initialize()
org/apache/fop/layoutmgr/inline/FootnoteLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#org/apache/fop/layoutmgr/KnuthSequence/add(java.lang.Object)
org/apache/fop/layoutmgr/inline/FootnoteLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#java/util/List/size()
org/apache/fop/layoutmgr/inline/FootnoteLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#org/apache/fop/layoutmgr/FootnoteBodyLayoutManager/setParent(org.apache.fop.layoutmgr.LayoutManager)
org/apache/fop/layoutmgr/inline/FootnoteLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#java/util/List/add(java.lang.Object)
org/apache/fop/layoutmgr/inline/FootnoteLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#org/apache/fop/layoutmgr/inline/FootnoteLayoutManager/notifyPos(org.apache.fop.layoutmgr.Position)
org/apache/fop/layoutmgr/inline/FootnoteLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#java/util/ListIterator/hasNext()
org/apache/fop/layoutmgr/inline/FootnoteLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#org/apache/fop/layoutmgr/inline/InlineStackingLayoutManager/setParent(org.apache.fop.layoutmgr.LayoutManager)
org/apache/fop/layoutmgr/inline/FootnoteLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#org/apache/fop/layoutmgr/inline/InlineStackingLayoutManager/isFinished()
org/apache/fop/layoutmgr/inline/FootnoteLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#org/apache/fop/layoutmgr/KnuthSequence/listIterator()
org/apache/fop/layoutmgr/inline/FootnoteLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#java/util/List/addAll(java.util.Collection)
org/apache/fop/layoutmgr/inline/FootnoteLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#org/apache/fop/layoutmgr/inline/FootnoteLayoutManager/setFinished(boolean)
org/apache/fop/layoutmgr/inline/FootnoteLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#java/util/ListIterator/next()
org/apache/fop/layoutmgr/inline/FootnoteLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#java/util/LinkedList/LinkedList()
org/apache/fop/layoutmgr/inline/FootnoteLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#org/apache/fop/layoutmgr/FootnoteBodyLayoutManager/initialize()
org/apache/fop/layoutmgr/inline/FootnoteLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#java/util/List/listIterator()
org/apache/fop/layoutmgr/inline/FootnoteLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#org/apache/fop/layoutmgr/inline/InlineStackingLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)
org/apache/fop/util/DOMBuilderContentHandlerFactory/Handler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#org/xml/sax/SAXException/SAXException(java.lang.String,java.lang.Exception)
org/apache/fop/util/DOMBuilderContentHandlerFactory/Handler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#org/apache/fop/util/DOMBuilderContentHandlerFactory$Handler/setDelegateLexicalHandler(org.xml.sax.ext.LexicalHandler)
org/apache/fop/util/DOMBuilderContentHandlerFactory/Handler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#org/w3c/dom/DOMImplementation/createDocument(java.lang.String,java.lang.String,org.w3c.dom.DocumentType)
org/apache/fop/util/DOMBuilderContentHandlerFactory/Handler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#org/w3c/dom/Document/getDocumentElement()
org/apache/fop/util/DOMBuilderContentHandlerFactory/Handler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#org/w3c/dom/Document/removeChild(org.w3c.dom.Node)
org/apache/fop/util/DOMBuilderContentHandlerFactory/Handler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#javax/xml/transform/sax/SAXTransformerFactory/newTransformerHandler()
org/apache/fop/util/DOMBuilderContentHandlerFactory/Handler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#org/apache/fop/util/DOMBuilderContentHandlerFactory$Handler/setDelegateDTDHandler(org.xml.sax.DTDHandler)
org/apache/fop/util/DOMBuilderContentHandlerFactory/Handler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#org/apache/fop/util/DOMBuilderContentHandlerFactory$Handler/setDelegateContentHandler(org.xml.sax.ContentHandler)
org/apache/fop/util/DOMBuilderContentHandlerFactory/Handler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#javax/xml/transform/sax/TransformerHandler/setResult(javax.xml.transform.Result)
org/apache/fop/util/DOMBuilderContentHandlerFactory/Handler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#javax/xml/transform/sax/TransformerHandler/startDocument()
org/apache/fop/util/DOMBuilderContentHandlerFactory/Handler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#javax/xml/transform/dom/DOMResult/DOMResult(org.w3c.dom.Node)
org/apache/fop/area/AreaTreeParser/Handler/InlineBlockParentMaker/startElement(org.xml.sax.Attributes)#org/apache/fop/area/AreaTreeParser$Handler/access$3500(org.xml.sax.Attributes,org.apache.fop.area.AreaTreeObject)
org/apache/fop/area/AreaTreeParser/Handler/InlineBlockParentMaker/startElement(org.xml.sax.Attributes)#java/util/Stack/push(java.lang.Object)
org/apache/fop/area/AreaTreeParser/Handler/InlineBlockParentMaker/startElement(org.xml.sax.Attributes)#org/apache/fop/area/AreaTreeParser$Handler/access$3600(org.apache.fop.area.AreaTreeParser$Handler)
org/apache/fop/area/AreaTreeParser/Handler/InlineBlockParentMaker/startElement(org.xml.sax.Attributes)#org/apache/fop/area/AreaTreeParser$Handler/access$4300(org.apache.fop.area.AreaTreeParser$Handler,org.xml.sax.Attributes,org.apache.fop.area.Area,java.lang.Object[])
org/apache/fop/area/AreaTreeParser/Handler/InlineBlockParentMaker/startElement(org.xml.sax.Attributes)#org/apache/fop/area/AreaTreeParser$Handler/access$4100(org.apache.fop.area.AreaTreeParser$Handler,org.xml.sax.Attributes,org.apache.fop.area.Area)
org/apache/fop/area/AreaTreeParser/Handler/InlineBlockParentMaker/startElement(org.xml.sax.Attributes)#org/apache/fop/area/AreaTreeParser$Handler/access$4400()
org/apache/fop/area/AreaTreeParser/Handler/InlineBlockParentMaker/startElement(org.xml.sax.Attributes)#org/apache/fop/area/AreaTreeParser$Handler/access$4500()
org/apache/fop/area/AreaTreeParser/Handler/InlineBlockParentMaker/startElement(org.xml.sax.Attributes)#java/util/Stack/peek()
org/apache/fop/area/AreaTreeParser/Handler/InlineBlockParentMaker/startElement(org.xml.sax.Attributes)#org/apache/fop/area/AreaTreeParser$Handler/access$4200()
org/apache/fop/area/AreaTreeParser/Handler/InlineBlockParentMaker/startElement(org.xml.sax.Attributes)#org/apache/fop/area/inline/InlineBlockParent/setBlockProgressionOffset(int)
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfStyleSheetTable/writeStyleSheet(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfHeader)#org/apache/fop/render/rtf/rtflib/rtfdoc/RtfHeader/writeGroupMark(boolean)
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfStyleSheetTable/writeStyleSheet(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfHeader)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfStyleSheetTable/writeStyleSheet(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfHeader)#java/util/Vector/size()
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfStyleSheetTable/writeStyleSheet(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfHeader)#java/util/Hashtable/size()
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfStyleSheetTable/writeStyleSheet(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfHeader)#org/apache/fop/render/rtf/rtflib/rtfdoc/RtfHeader/writeControlWord(java.lang.String)
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfStyleSheetTable/writeStyleSheet(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfHeader)#java/util/Hashtable/get(java.lang.Object)
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfStyleSheetTable/writeStyleSheet(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfHeader)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfStyleSheetTable/writeStyleSheet(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfHeader)#org/apache/fop/render/rtf/rtflib/rtfdoc/RtfHeader/writeAttributes(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes,java.lang.String[])
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfStyleSheetTable/writeStyleSheet(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfHeader)#java/util/Vector/elementAt(int)
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfStyleSheetTable/writeStyleSheet(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfHeader)#java/lang/StringBuilder/toString()
org/apache/fop/pdf/PDFFunction/toByteString()#java/util/Iterator/hasNext()
org/apache/fop/pdf/PDFFunction/toByteString()#org/apache/fop/pdf/PDFFunction/encode(java.lang.String)
org/apache/fop/pdf/PDFFunction/toByteString()#java/lang/StringBuilder/StringBuilder()
org/apache/fop/pdf/PDFFunction/toByteString()#java/util/List/add(java.lang.Object)
org/apache/fop/pdf/PDFFunction/toByteString()#java/util/List/iterator()
org/apache/fop/pdf/PDFFunction/toByteString()#java/lang/StringBuilder/toString()
org/apache/fop/pdf/PDFFunction/toByteString()#java/util/ArrayList/ArrayList(int)
org/apache/fop/pdf/PDFFunction/toByteString()#org/apache/fop/pdf/PDFFunction/referencePDF()
org/apache/fop/pdf/PDFFunction/toByteString()#java/util/List/size()
org/apache/fop/pdf/PDFFunction/toByteString()#org/apache/fop/pdf/PDFFunction$1/1(org.apache.fop.pdf.PDFFunction)
org/apache/fop/pdf/PDFFunction/toByteString()#java/util/Iterator/next()
org/apache/fop/pdf/PDFFunction/toByteString()#org/apache/fop/pdf/PDFFunction$2/2(org.apache.fop.pdf.PDFFunction)
org/apache/fop/render/afp/AbstractAFPImageHandlerRawStream/updateDataObjectInfo(org.apache.fop.afp.AFPDataObjectInfo,org.apache.xmlgraphics.image.loader.impl.ImageRawStream,org.apache.fop.afp.AFPResourceManager)#org/apache/xmlgraphics/image/loader/ImageSize/getHeightPx()
org/apache/fop/render/afp/AbstractAFPImageHandlerRawStream/updateDataObjectInfo(org.apache.fop.afp.AFPDataObjectInfo,org.apache.xmlgraphics.image.loader.impl.ImageRawStream,org.apache.fop.afp.AFPResourceManager)#org/apache/xmlgraphics/image/loader/ImageSize/getWidthPx()
org/apache/fop/render/afp/AbstractAFPImageHandlerRawStream/updateDataObjectInfo(org.apache.fop.afp.AFPDataObjectInfo,org.apache.xmlgraphics.image.loader.impl.ImageRawStream,org.apache.fop.afp.AFPResourceManager)#org/apache/xmlgraphics/image/loader/impl/ImageRawStream/getFlavor()
org/apache/fop/render/afp/AbstractAFPImageHandlerRawStream/updateDataObjectInfo(org.apache.fop.afp.AFPDataObjectInfo,org.apache.xmlgraphics.image.loader.impl.ImageRawStream,org.apache.fop.afp.AFPResourceManager)#org/apache/xmlgraphics/image/loader/impl/ImageRawStream/getSize()
org/apache/fop/render/afp/AbstractAFPImageHandlerRawStream/updateDataObjectInfo(org.apache.fop.afp.AFPDataObjectInfo,org.apache.xmlgraphics.image.loader.impl.ImageRawStream,org.apache.fop.afp.AFPResourceManager)#org/apache/commons/io/IOUtils/closeQuietly(java.io.InputStream)
org/apache/fop/render/afp/AbstractAFPImageHandlerRawStream/updateDataObjectInfo(org.apache.fop.afp.AFPDataObjectInfo,org.apache.xmlgraphics.image.loader.impl.ImageRawStream,org.apache.fop.afp.AFPResourceManager)#org/apache/xmlgraphics/image/loader/ImageFlavor/getMimeType()
org/apache/fop/render/afp/AbstractAFPImageHandlerRawStream/updateDataObjectInfo(org.apache.fop.afp.AFPDataObjectInfo,org.apache.xmlgraphics.image.loader.impl.ImageRawStream,org.apache.fop.afp.AFPResourceManager)#org/apache/xmlgraphics/image/loader/ImageSize/getDpiVertical()
org/apache/fop/render/afp/AbstractAFPImageHandlerRawStream/updateDataObjectInfo(org.apache.fop.afp.AFPDataObjectInfo,org.apache.xmlgraphics.image.loader.impl.ImageRawStream,org.apache.fop.afp.AFPResourceManager)#org/apache/xmlgraphics/image/loader/impl/ImageRawStream/createInputStream()
org/apache/fop/render/afp/AbstractAFPImageHandlerRawStream/updateDataObjectInfo(org.apache.fop.afp.AFPDataObjectInfo,org.apache.xmlgraphics.image.loader.impl.ImageRawStream,org.apache.fop.afp.AFPResourceManager)#org/apache/commons/io/IOUtils/toByteArray(java.io.InputStream)
org/apache/fop/render/afp/AbstractAFPImageHandlerRawStream/updateDataObjectInfo(org.apache.fop.afp.AFPDataObjectInfo,org.apache.xmlgraphics.image.loader.impl.ImageRawStream,org.apache.fop.afp.AFPResourceManager)#org/apache/xmlgraphics/image/loader/ImageSize/getDpiHorizontal()
org/apache/fop/image/loader/batik/Graphics2DImagePainterImpl/prepare(java.awt.Graphics2D,java.awt.geom.Rectangle2D)#java/awt/geom/Rectangle2D/getY()
org/apache/fop/image/loader/batik/Graphics2DImagePainterImpl/prepare(java.awt.Graphics2D,java.awt.geom.Rectangle2D)#java/awt/Graphics2D/translate(double,double)
org/apache/fop/image/loader/batik/Graphics2DImagePainterImpl/prepare(java.awt.Graphics2D,java.awt.geom.Rectangle2D)#java/awt/Graphics2D/scale(double,double)
org/apache/fop/image/loader/batik/Graphics2DImagePainterImpl/prepare(java.awt.Graphics2D,java.awt.geom.Rectangle2D)#java/awt/geom/Rectangle2D/getX()
org/apache/fop/image/loader/batik/Graphics2DImagePainterImpl/prepare(java.awt.Graphics2D,java.awt.geom.Rectangle2D)#org/apache/batik/bridge/BridgeContext/getDocumentSize()
org/apache/fop/image/loader/batik/Graphics2DImagePainterImpl/prepare(java.awt.Graphics2D,java.awt.geom.Rectangle2D)#java/awt/geom/Rectangle2D/getWidth()
org/apache/fop/image/loader/batik/Graphics2DImagePainterImpl/prepare(java.awt.Graphics2D,java.awt.geom.Rectangle2D)#java/awt/geom/Dimension2D/getHeight()
org/apache/fop/image/loader/batik/Graphics2DImagePainterImpl/prepare(java.awt.Graphics2D,java.awt.geom.Rectangle2D)#java/awt/geom/Rectangle2D/getHeight()
org/apache/fop/image/loader/batik/Graphics2DImagePainterImpl/prepare(java.awt.Graphics2D,java.awt.geom.Rectangle2D)#java/awt/geom/Dimension2D/getWidth()
org/apache/fop/cli/InputHandler/createMainSource()#javax/xml/transform/sax/SAXSource/SAXSource(org.xml.sax.XMLReader,org.xml.sax.InputSource)
org/apache/fop/cli/InputHandler/createMainSource()#org/xml/sax/InputSource/InputSource(java.io.InputStream)
org/apache/fop/cli/InputHandler/createMainSource()#org/xml/sax/InputSource/setSystemId(java.lang.String)
org/apache/fop/cli/InputHandler/createMainSource()#javax/xml/transform/stream/StreamSource/StreamSource(java.io.InputStream,java.lang.String)
org/apache/fop/cli/InputHandler/createMainSource()#java/io/File/toURI()
org/apache/fop/cli/InputHandler/createMainSource()#javax/xml/transform/stream/StreamSource/StreamSource(java.io.File)
org/apache/fop/cli/InputHandler/createMainSource()#java/net/URI/toASCIIString()
org/apache/fop/cli/InputHandler/createMainSource()#java/io/FileInputStream/FileInputStream(java.io.File)
org/apache/fop/cli/InputHandler/createMainSource()#org/xml/sax/XMLReader/setEntityResolver(org.xml.sax.EntityResolver)
org/apache/fop/cli/InputHandler/transformTo(javax.xml.transform.Result)#javax/xml/transform/Transformer/setParameter(java.lang.String,java.lang.Object)
org/apache/fop/cli/InputHandler/transformTo(javax.xml.transform.Result)#javax/xml/transform/TransformerFactory/newInstance()
org/apache/fop/cli/InputHandler/transformTo(javax.xml.transform.Result)#java/util/Vector/size()
org/apache/fop/cli/InputHandler/transformTo(javax.xml.transform.Result)#javax/xml/transform/Transformer/setURIResolver(javax.xml.transform.URIResolver)
org/apache/fop/cli/InputHandler/transformTo(javax.xml.transform.Result)#javax/xml/transform/TransformerFactory/newTransformer(javax.xml.transform.Source)
org/apache/fop/cli/InputHandler/transformTo(javax.xml.transform.Result)#javax/xml/transform/Transformer/setErrorListener(javax.xml.transform.ErrorListener)
org/apache/fop/cli/InputHandler/transformTo(javax.xml.transform.Result)#javax/xml/transform/TransformerFactory/newTransformer()
org/apache/fop/cli/InputHandler/transformTo(javax.xml.transform.Result)#java/util/Vector/elementAt(int)
org/apache/fop/cli/InputHandler/transformTo(javax.xml.transform.Result)#javax/xml/transform/Transformer/transform(javax.xml.transform.Source,javax.xml.transform.Result)
org/apache/fop/cli/InputHandler/createCatalogResolver(org.apache.fop.apps.FOUserAgent)#java/lang/Class/forName(java.lang.String)
org/apache/fop/cli/InputHandler/createCatalogResolver(org.apache.fop.apps.FOUserAgent)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/cli/InputHandler/createCatalogResolver(org.apache.fop.apps.FOUserAgent)#org/apache/fop/ResourceEventProducer$Provider/get(org.apache.fop.events.EventBroadcaster)
org/apache/fop/cli/InputHandler/createCatalogResolver(org.apache.fop.apps.FOUserAgent)#java/lang/IllegalAccessException/getMessage()
org/apache/fop/cli/InputHandler/createCatalogResolver(org.apache.fop.apps.FOUserAgent)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/cli/InputHandler/createCatalogResolver(org.apache.fop.apps.FOUserAgent)#org/apache/commons/logging/Log/error(java.lang.Object)
org/apache/fop/cli/InputHandler/createCatalogResolver(org.apache.fop.apps.FOUserAgent)#java/lang/StringBuilder/toString()
org/apache/fop/cli/InputHandler/createCatalogResolver(org.apache.fop.apps.FOUserAgent)#java/lang/InstantiationException/getMessage()
org/apache/fop/cli/InputHandler/createCatalogResolver(org.apache.fop.apps.FOUserAgent)#java/lang/Class/newInstance()
org/apache/fop/layoutmgr/InlineKnuthSequence/addALetterSpace()#org/apache/fop/layoutmgr/InlineKnuthSequence/getLast()
org/apache/fop/layoutmgr/InlineKnuthSequence/addALetterSpace()#org/apache/fop/layoutmgr/KnuthBox/isAuxiliary()
org/apache/fop/layoutmgr/InlineKnuthSequence/addALetterSpace()#org/apache/fop/layoutmgr/InlineKnuthSequence/getElement(int)
org/apache/fop/layoutmgr/InlineKnuthSequence/addALetterSpace()#org/apache/fop/layoutmgr/InlineKnuthSequence/removeLast()
org/apache/fop/layoutmgr/InlineKnuthSequence/addALetterSpace()#org/apache/fop/layoutmgr/InlineKnuthSequence/size()
org/apache/fop/layoutmgr/InlineKnuthSequence/addALetterSpace()#org/apache/fop/layoutmgr/InlineKnuthSequence/addAll(java.util.Collection)
org/apache/fop/layoutmgr/InlineKnuthSequence/addALetterSpace()#java/util/LinkedList/add(java.lang.Object)
org/apache/fop/layoutmgr/InlineKnuthSequence/addALetterSpace()#java/util/LinkedList/addFirst(java.lang.Object)
org/apache/fop/layoutmgr/InlineKnuthSequence/addALetterSpace()#org/apache/fop/layoutmgr/KnuthBox/getLayoutManager()
org/apache/fop/layoutmgr/InlineKnuthSequence/addALetterSpace()#java/util/LinkedList/LinkedList()
org/apache/fop/tools/fontlist/FontListSerializer/generateSAX(java.util.SortedMap,java.lang.String,org.apache.fop.util.GenerationHelperContentHandler)#org/xml/sax/helpers/AttributesImpl/AttributesImpl()
org/apache/fop/tools/fontlist/FontListSerializer/generateSAX(java.util.SortedMap,java.lang.String,org.apache.fop.util.GenerationHelperContentHandler)#java/util/Iterator/hasNext()
org/apache/fop/tools/fontlist/FontListSerializer/generateSAX(java.util.SortedMap,java.lang.String,org.apache.fop.util.GenerationHelperContentHandler)#org/apache/fop/util/GenerationHelperContentHandler/endDocument()
org/apache/fop/tools/fontlist/FontListSerializer/generateSAX(java.util.SortedMap,java.lang.String,org.apache.fop.util.GenerationHelperContentHandler)#java/util/Map$Entry/getKey()
org/apache/fop/tools/fontlist/FontListSerializer/generateSAX(java.util.SortedMap,java.lang.String,org.apache.fop.util.GenerationHelperContentHandler)#org/apache/fop/util/GenerationHelperContentHandler/startDocument()
org/apache/fop/tools/fontlist/FontListSerializer/generateSAX(java.util.SortedMap,java.lang.String,org.apache.fop.util.GenerationHelperContentHandler)#java/util/Iterator/next()
org/apache/fop/tools/fontlist/FontListSerializer/generateSAX(java.util.SortedMap,java.lang.String,org.apache.fop.util.GenerationHelperContentHandler)#java/lang/String/equals(java.lang.Object)
org/apache/fop/tools/fontlist/FontListSerializer/generateSAX(java.util.SortedMap,java.lang.String,org.apache.fop.util.GenerationHelperContentHandler)#java/util/Set/iterator()
org/apache/fop/tools/fontlist/FontListSerializer/generateSAX(java.util.SortedMap,java.lang.String,org.apache.fop.util.GenerationHelperContentHandler)#org/xml/sax/helpers/AttributesImpl/addAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
org/apache/fop/tools/fontlist/FontListSerializer/generateSAX(java.util.SortedMap,java.lang.String,org.apache.fop.util.GenerationHelperContentHandler)#org/xml/sax/helpers/AttributesImpl/clear()
org/apache/fop/tools/fontlist/FontListSerializer/generateSAX(java.util.SortedMap,java.lang.String,org.apache.fop.util.GenerationHelperContentHandler)#java/util/Map$Entry/getValue()
org/apache/fop/tools/fontlist/FontListSerializer/generateSAX(java.util.SortedMap,java.lang.String,org.apache.fop.util.GenerationHelperContentHandler)#java/util/SortedMap/entrySet()
org/apache/fop/fonts/cff/CFFDataReader/CFFIndexData/parseIndexHeader(org.apache.fontbox.cff.CFFDataInput)#org/apache/fop/fonts/cff/CFFDataReader$CFFIndexData/getOffSize()
org/apache/fop/fonts/cff/CFFDataReader/CFFIndexData/parseIndexHeader(org.apache.fontbox.cff.CFFDataInput)#org/apache/fontbox/cff/CFFDataInput/readBytes(int)
org/apache/fop/fonts/cff/CFFDataReader/CFFIndexData/parseIndexHeader(org.apache.fontbox.cff.CFFDataInput)#org/apache/fontbox/cff/CFFDataInput/setPosition(int)
org/apache/fop/fonts/cff/CFFDataReader/CFFIndexData/parseIndexHeader(org.apache.fontbox.cff.CFFDataInput)#org/apache/fop/fonts/cff/CFFDataReader$CFFIndexData/setOffsets(int[])
org/apache/fop/fonts/cff/CFFDataReader/CFFIndexData/parseIndexHeader(org.apache.fontbox.cff.CFFDataInput)#org/apache/fontbox/cff/CFFDataInput/readCard8()
org/apache/fop/fonts/cff/CFFDataReader/CFFIndexData/parseIndexHeader(org.apache.fontbox.cff.CFFDataInput)#org/apache/fop/fonts/cff/CFFDataReader$CFFIndexData/getNumObjects()
org/apache/fop/fonts/cff/CFFDataReader/CFFIndexData/parseIndexHeader(org.apache.fontbox.cff.CFFDataInput)#org/apache/fop/fonts/cff/CFFDataReader$CFFIndexData/setNumObjects(int)
org/apache/fop/fonts/cff/CFFDataReader/CFFIndexData/parseIndexHeader(org.apache.fontbox.cff.CFFDataInput)#org/apache/fontbox/cff/CFFDataInput/getPosition()
org/apache/fop/fonts/cff/CFFDataReader/CFFIndexData/parseIndexHeader(org.apache.fontbox.cff.CFFDataInput)#org/apache/fontbox/cff/CFFDataInput/readCard16()
org/apache/fop/fonts/cff/CFFDataReader/CFFIndexData/parseIndexHeader(org.apache.fontbox.cff.CFFDataInput)#org/apache/fop/fonts/cff/CFFDataReader$CFFIndexData/setOffSize(int)
org/apache/fop/fonts/cff/CFFDataReader/CFFIndexData/parseIndexHeader(org.apache.fontbox.cff.CFFDataInput)#org/apache/fop/fonts/cff/CFFDataReader$CFFIndexData/setData(int,int)
org/apache/fop/fonts/cff/CFFDataReader/CFFIndexData/parseIndexHeader(org.apache.fontbox.cff.CFFDataInput)#org/apache/fontbox/cff/CFFDataInput/readOffSize()
org/apache/fop/pdf/PDFPages/notifyKidRegistered(org.apache.fop.pdf.PDFPage)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/apache/fop/pdf/PDFPages/notifyKidRegistered(org.apache.fop.pdf.PDFPage)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/pdf/PDFPages/notifyKidRegistered(org.apache.fop.pdf.PDFPage)#java/lang/StringBuilder/append(int)
org/apache/fop/pdf/PDFPages/notifyKidRegistered(org.apache.fop.pdf.PDFPage)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/pdf/PDFPages/notifyKidRegistered(org.apache.fop.pdf.PDFPage)#java/util/List/add(java.lang.Object)
org/apache/fop/pdf/PDFPages/notifyKidRegistered(org.apache.fop.pdf.PDFPage)#java/util/List/get(int)
org/apache/fop/pdf/PDFPages/notifyKidRegistered(org.apache.fop.pdf.PDFPage)#java/util/List/set(int,java.lang.Object)
org/apache/fop/pdf/PDFPages/notifyKidRegistered(org.apache.fop.pdf.PDFPage)#java/lang/StringBuilder/toString()
org/apache/fop/pdf/PDFPages/notifyKidRegistered(org.apache.fop.pdf.PDFPage)#java/util/List/size()
org/apache/fop/pdf/PDFPages/notifyKidRegistered(org.apache.fop.pdf.PDFPage)#org/apache/fop/pdf/PDFPage/makeReference()
org/apache/fop/render/gradient/GradientMaker/makeRadialGradient(org.apache.batik.ext.awt.RadialGradientPaint,java.awt.geom.AffineTransform,java.awt.geom.AffineTransform)#java/util/ArrayList/ArrayList(int)
org/apache/fop/render/gradient/GradientMaker/makeRadialGradient(org.apache.batik.ext.awt.RadialGradientPaint,java.awt.geom.AffineTransform,java.awt.geom.AffineTransform)#java/lang/Double/valueOf(double)
org/apache/fop/render/gradient/GradientMaker/makeRadialGradient(org.apache.batik.ext.awt.RadialGradientPaint,java.awt.geom.AffineTransform,java.awt.geom.AffineTransform)#org/apache/batik/ext/awt/RadialGradientPaint/getCenterPoint()
org/apache/fop/render/gradient/GradientMaker/makeRadialGradient(org.apache.batik.ext.awt.RadialGradientPaint,java.awt.geom.AffineTransform,java.awt.geom.AffineTransform)#org/apache/batik/ext/awt/RadialGradientPaint/getRadius()
org/apache/fop/render/gradient/GradientMaker/makeRadialGradient(org.apache.batik.ext.awt.RadialGradientPaint,java.awt.geom.AffineTransform,java.awt.geom.AffineTransform)#java/util/List/add(java.lang.Object)
org/apache/fop/render/gradient/GradientMaker/makeRadialGradient(org.apache.batik.ext.awt.RadialGradientPaint,java.awt.geom.AffineTransform,java.awt.geom.AffineTransform)#org/apache/batik/ext/awt/RadialGradientPaint/getFocusPoint()
org/apache/fop/render/gradient/GradientMaker/makeRadialGradient(org.apache.batik.ext.awt.RadialGradientPaint,java.awt.geom.AffineTransform,java.awt.geom.AffineTransform)#java/awt/geom/Point2D/getY()
org/apache/fop/render/gradient/GradientMaker/makeRadialGradient(org.apache.batik.ext.awt.RadialGradientPaint,java.awt.geom.AffineTransform,java.awt.geom.AffineTransform)#java/awt/geom/Point2D/getX()
org/apache/fop/render/gradient/GradientMaker/makeRadialGradient(org.apache.batik.ext.awt.RadialGradientPaint,java.awt.geom.AffineTransform,java.awt.geom.AffineTransform)#java/lang/Math/sqrt(double)
org/apache/fop/pdf/PDFResources/populateDictionary()#org/apache/fop/pdf/PDFResources/put(java.lang.String,java.lang.Object)
org/apache/fop/pdf/PDFResources/populateDictionary()#java/util/Map$Entry/getKey()
org/apache/fop/pdf/PDFResources/populateDictionary()#java/util/LinkedHashSet/LinkedHashSet()
org/apache/fop/pdf/PDFResources/populateDictionary()#java/util/Map$Entry/getValue()
org/apache/fop/pdf/PDFResources/populateDictionary()#java/util/Collection/iterator()
org/apache/fop/pdf/PDFResources/populateDictionary()#java/util/Iterator/hasNext()
org/apache/fop/pdf/PDFResources/populateDictionary()#java/util/Set/addAll(java.util.Collection)
org/apache/fop/pdf/PDFResources/populateDictionary()#java/util/Map/get(java.lang.Object)
org/apache/fop/pdf/PDFResources/populateDictionary()#java/util/Map/isEmpty()
org/apache/fop/pdf/PDFResources/populateDictionary()#org/apache/fop/pdf/PDFResources/get(java.lang.String)
org/apache/fop/pdf/PDFResources/populateDictionary()#java/util/Map/values()
org/apache/fop/pdf/PDFResources/populateDictionary()#java/util/Iterator/next()
org/apache/fop/pdf/PDFResources/populateDictionary()#java/util/Map/keySet()
org/apache/fop/pdf/PDFResources/populateDictionary()#java/util/Set/isEmpty()
org/apache/fop/pdf/PDFResources/populateDictionary()#java/util/Set/iterator()
org/apache/fop/pdf/PDFResources/populateDictionary()#java/util/Map/entrySet()
org/apache/fop/pdf/PDFResources/getChildren(java.util.Set,boolean)#org/apache/fop/pdf/PDFXObject/getChildren(java.util.Set)
org/apache/fop/pdf/PDFResources/getChildren(java.util.Set,boolean)#org/apache/fop/pdf/PDFGState/getChildren(java.util.Set)
org/apache/fop/pdf/PDFResources/getChildren(java.util.Set,boolean)#java/util/Iterator/hasNext()
org/apache/fop/pdf/PDFResources/getChildren(java.util.Set,boolean)#java/util/Set/iterator()
org/apache/fop/pdf/PDFResources/getChildren(java.util.Set,boolean)#java/util/Collection/iterator()
org/apache/fop/pdf/PDFResources/getChildren(java.util.Set,boolean)#java/util/Set/add(java.lang.Object)
org/apache/fop/pdf/PDFResources/getChildren(java.util.Set,boolean)#org/apache/fop/pdf/PDFPattern/getChildren(java.util.Set)
org/apache/fop/pdf/PDFResources/getChildren(java.util.Set,boolean)#org/apache/fop/pdf/PDFShading/getChildren(java.util.Set)
org/apache/fop/pdf/PDFResources/getChildren(java.util.Set,boolean)#java/util/Map/values()
org/apache/fop/pdf/PDFResources/getChildren(java.util.Set,boolean)#java/util/Iterator/next()
org/apache/fop/fo/flow/table/FixedColRowGroupBuilder/endTableRow()#org/apache/fop/fo/flow/table/TableRow/getLocator()
org/apache/fop/fo/flow/table/FixedColRowGroupBuilder/endTableRow()#org/apache/fop/fo/flow/table/TableRow/getUserAgent()
org/apache/fop/fo/flow/table/FixedColRowGroupBuilder/endTableRow()#java/util/List/size()
org/apache/fop/fo/flow/table/FixedColRowGroupBuilder/endTableRow()#java/util/Iterator/next()
org/apache/fop/fo/flow/table/FixedColRowGroupBuilder/endTableRow()#org/apache/fop/fo/flow/table/TableEventProducer$Provider/get(org.apache.fop.events.EventBroadcaster)
org/apache/fop/fo/flow/table/FixedColRowGroupBuilder/endTableRow()#org/apache/fop/fo/flow/table/TableRow/getName()
org/apache/fop/fo/flow/table/FixedColRowGroupBuilder/endTableRow()#java/util/List/get(int)
org/apache/fop/fo/flow/table/FixedColRowGroupBuilder/endTableRow()#java/util/List/iterator()
org/apache/fop/fo/flow/table/FixedColRowGroupBuilder/endTableRow()#java/lang/AssertionError/AssertionError()
org/apache/fop/fo/flow/table/FixedColRowGroupBuilder/endTableRow()#java/util/Iterator/hasNext()
org/apache/fop/layoutmgr/BlockContainerLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/layoutmgr/BlockContainerLayoutManager/isLast(org.apache.fop.layoutmgr.Position)
org/apache/fop/layoutmgr/BlockContainerLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/layoutmgr/BlockContainerLayoutManager/registerMarkers(boolean,boolean,boolean)
org/apache/fop/layoutmgr/BlockContainerLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/layoutmgr/BlockContainerLayoutManager/addBlockSpacing(double,org.apache.fop.traits.MinOptMax)
org/apache/fop/layoutmgr/BlockContainerLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext)#java/util/List/listIterator()
org/apache/fop/layoutmgr/BlockContainerLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/apache/fop/layoutmgr/BlockContainerLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/layoutmgr/BlockContainerLayoutManager/notifyEndOfLayout()
org/apache/fop/layoutmgr/BlockContainerLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/layoutmgr/BlockContainerLayoutManager$BlockContainerPosition/getBreaker()
org/apache/fop/layoutmgr/BlockContainerLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext)#java/util/LinkedList/LinkedList()
org/apache/fop/layoutmgr/BlockContainerLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/layoutmgr/BlockContainerLayoutManager/addId()
org/apache/fop/layoutmgr/BlockContainerLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext)#java/util/List/add(java.lang.Object)
org/apache/fop/layoutmgr/BlockContainerLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/layoutmgr/BlockContainerLayoutManager$BlockContainerBreaker/addContainedAreas(org.apache.fop.layoutmgr.LayoutContext)
org/apache/fop/layoutmgr/BlockContainerLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/layoutmgr/BlockContainerLayoutManager/isFirst(org.apache.fop.layoutmgr.Position)
org/apache/fop/layoutmgr/BlockContainerLayoutManager/generateNonInlinedBox()#org/apache/fop/fo/flow/BlockContainer/getUserAgent()
org/apache/fop/layoutmgr/BlockContainerLayoutManager/generateNonInlinedBox()#org/apache/fop/layoutmgr/BlockContainerLayoutManager/setContentAreaIPD(int)
org/apache/fop/layoutmgr/BlockContainerLayoutManager/generateNonInlinedBox()#org/apache/fop/layoutmgr/BlockContainerLayoutManager$BlockContainerPosition/BlockContainerPosition(org.apache.fop.layoutmgr.BlockContainerLayoutManager,org.apache.fop.layoutmgr.LayoutManager,org.apache.fop.layoutmgr.BlockContainerLayoutManager$BlockContainerBreaker)
org/apache/fop/layoutmgr/BlockContainerLayoutManager/generateNonInlinedBox()#org/apache/fop/layoutmgr/BlockContainerLayoutManager$BlockContainerBreaker/BlockContainerBreaker(org.apache.fop.layoutmgr.BlockContainerLayoutManager,org.apache.fop.layoutmgr.BlockContainerLayoutManager,org.apache.fop.traits.MinOptMax)
org/apache/fop/layoutmgr/BlockContainerLayoutManager/generateNonInlinedBox()#org/apache/fop/layoutmgr/BlockContainerLayoutManager$BlockContainerBreaker/access$000(org.apache.fop.layoutmgr.BlockContainerLayoutManager$BlockContainerBreaker)
org/apache/fop/layoutmgr/BlockContainerLayoutManager/generateNonInlinedBox()#org/apache/fop/layoutmgr/BlockContainerLayoutManager$BlockContainerBreaker/isOverflow()
org/apache/fop/layoutmgr/BlockContainerLayoutManager/generateNonInlinedBox()#org/apache/fop/layoutmgr/BlockContainerLayoutManager/notifyPos(org.apache.fop.layoutmgr.Position)
org/apache/fop/layoutmgr/BlockContainerLayoutManager/generateNonInlinedBox()#org/apache/fop/fo/flow/BlockContainer/getName()
org/apache/fop/layoutmgr/BlockContainerLayoutManager/generateNonInlinedBox()#org/apache/fop/fo/flow/BlockContainer/getLocator()
org/apache/fop/layoutmgr/BlockContainerLayoutManager/generateNonInlinedBox()#org/apache/fop/layoutmgr/BlockLevelEventProducer$Provider/get(org.apache.fop.events.EventBroadcaster)
org/apache/fop/layoutmgr/BlockContainerLayoutManager/generateNonInlinedBox()#org/apache/fop/layoutmgr/BlockContainerLayoutManager$BlockContainerBreaker/doLayout(int,boolean)
org/apache/fop/layoutmgr/BlockContainerLayoutManager/generateNonInlinedBox()#org/apache/fop/layoutmgr/BlockContainerLayoutManager$BlockContainerBreaker/getOverflowAmount()
org/apache/fop/layoutmgr/BlockContainerLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int,java.util.Stack,org.apache.fop.layoutmgr.Position,org.apache.fop.layoutmgr.LayoutManager)#org/apache/fop/layoutmgr/BlockContainerLayoutManager/getChildLM()
org/apache/fop/layoutmgr/BlockContainerLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int,java.util.Stack,org.apache.fop.layoutmgr.Position,org.apache.fop.layoutmgr.LayoutManager)#java/util/Stack/pop()
org/apache/fop/layoutmgr/BlockContainerLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int,java.util.Stack,org.apache.fop.layoutmgr.Position,org.apache.fop.layoutmgr.LayoutManager)#java/util/List/isEmpty()
org/apache/fop/layoutmgr/BlockContainerLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int,java.util.Stack,org.apache.fop.layoutmgr.Position,org.apache.fop.layoutmgr.LayoutManager)#java/util/LinkedList/LinkedList()
org/apache/fop/layoutmgr/BlockContainerLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int,java.util.Stack,org.apache.fop.layoutmgr.Position,org.apache.fop.layoutmgr.LayoutManager)#org/apache/fop/layoutmgr/BlockContainerLayoutManager/wrapPositionElements(java.util.List,java.util.List)
org/apache/fop/layoutmgr/BlockContainerLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int,java.util.Stack,org.apache.fop.layoutmgr.Position,org.apache.fop.layoutmgr.LayoutManager)#org/apache/fop/layoutmgr/BlockContainerLayoutManager/breakBeforeServed(org.apache.fop.layoutmgr.LayoutContext,java.util.List)
org/apache/fop/layoutmgr/BlockContainerLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int,java.util.Stack,org.apache.fop.layoutmgr.Position,org.apache.fop.layoutmgr.LayoutManager)#java/util/Stack/isEmpty()
org/apache/fop/layoutmgr/BlockContainerLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int,java.util.Stack,org.apache.fop.layoutmgr.Position,org.apache.fop.layoutmgr.LayoutManager)#org/apache/fop/layoutmgr/BlockContainerLayoutManager/addInBetweenBreak(java.util.List,org.apache.fop.layoutmgr.LayoutContext,org.apache.fop.layoutmgr.LayoutContext)
org/apache/fop/layoutmgr/BlockContainerLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int,java.util.Stack,org.apache.fop.layoutmgr.Position,org.apache.fop.layoutmgr.LayoutManager)#org/apache/fop/layoutmgr/BlockContainerLayoutManager/setCurrentChildLM(org.apache.fop.layoutmgr.LayoutManager)
org/apache/fop/layoutmgr/BlockContainerLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int,java.util.Stack,org.apache.fop.layoutmgr.Position,org.apache.fop.layoutmgr.LayoutManager)#org/apache/fop/layoutmgr/BlockContainerLayoutManager/addLastVisibleMarks(java.util.List,org.apache.fop.layoutmgr.LayoutContext,int)
org/apache/fop/layoutmgr/BlockContainerLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int,java.util.Stack,org.apache.fop.layoutmgr.Position,org.apache.fop.layoutmgr.LayoutManager)#org/apache/fop/layoutmgr/BlockContainerLayoutManager/addKnuthElementsForBreakAfter(java.util.List,org.apache.fop.layoutmgr.LayoutContext)
org/apache/fop/layoutmgr/BlockContainerLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int,java.util.Stack,org.apache.fop.layoutmgr.Position,org.apache.fop.layoutmgr.LayoutManager)#org/apache/fop/layoutmgr/BlockContainerLayoutManager/hasNextChildLM()
org/apache/fop/layoutmgr/BlockContainerLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int,java.util.Stack,org.apache.fop.layoutmgr.Position,org.apache.fop.layoutmgr.LayoutManager)#java/util/List/size()
org/apache/fop/layoutmgr/BlockContainerLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int,java.util.Stack,org.apache.fop.layoutmgr.Position,org.apache.fop.layoutmgr.LayoutManager)#org/apache/fop/layoutmgr/BlockContainerLayoutManager/getNextChildElements(org.apache.fop.layoutmgr.LayoutManager,org.apache.fop.layoutmgr.LayoutContext,org.apache.fop.layoutmgr.LayoutContext,int,java.util.Stack,org.apache.fop.layoutmgr.Position,org.apache.fop.layoutmgr.LayoutManager)
org/apache/fop/layoutmgr/BlockContainerLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int,java.util.Stack,org.apache.fop.layoutmgr.Position,org.apache.fop.layoutmgr.LayoutManager)#org/apache/fop/layoutmgr/BlockContainerLayoutManager/setFinished(boolean)
org/apache/fop/layoutmgr/BlockContainerLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int,java.util.Stack,org.apache.fop.layoutmgr.Position,org.apache.fop.layoutmgr.LayoutManager)#org/apache/fop/layoutmgr/BlockContainerLayoutManager/getKeepWithNext()
org/apache/fop/layoutmgr/BlockContainerLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int,java.util.Stack,org.apache.fop.layoutmgr.Position,org.apache.fop.layoutmgr.LayoutManager)#org/apache/fop/layoutmgr/BlockContainerLayoutManager/addFirstVisibleMarks(java.util.List,org.apache.fop.layoutmgr.LayoutContext,int)
org/apache/fop/layoutmgr/BlockContainerLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int,java.util.Stack,org.apache.fop.layoutmgr.Position,org.apache.fop.layoutmgr.LayoutManager)#java/util/List/addAll(java.util.Collection)
org/apache/fop/layoutmgr/BlockContainerLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int,java.util.Stack,org.apache.fop.layoutmgr.Position,org.apache.fop.layoutmgr.LayoutManager)#java/util/List/add(java.lang.Object)
org/apache/fop/layoutmgr/BlockContainerLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int,java.util.Stack,org.apache.fop.layoutmgr.Position,org.apache.fop.layoutmgr.LayoutManager)#java/lang/AssertionError/AssertionError()
org/apache/fop/layoutmgr/BlockContainerLayoutManager/setupAreaDimensions(org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/layoutmgr/BlockContainerLayoutManager/getIPIndents()
org/apache/fop/layoutmgr/BlockContainerLayoutManager/setupAreaDimensions(org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/fo/flow/BlockContainer/getName()
org/apache/fop/layoutmgr/BlockContainerLayoutManager/setupAreaDimensions(org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/fo/flow/BlockContainer/getLocator()
org/apache/fop/layoutmgr/BlockContainerLayoutManager/setupAreaDimensions(org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/fo/flow/BlockContainer/getUserAgent()
org/apache/fop/layoutmgr/BlockContainerLayoutManager/setupAreaDimensions(org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/layoutmgr/BlockContainerLayoutManager/getAncestorBlockAreaBPD()
org/apache/fop/layoutmgr/BlockContainerLayoutManager/setupAreaDimensions(org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/datatypes/Length/isAbsolute()
org/apache/fop/layoutmgr/BlockContainerLayoutManager/setupAreaDimensions(org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/layoutmgr/BlockContainerLayoutManager/updateContentAreaIPDwithOverconstrainedAdjust()
org/apache/fop/layoutmgr/BlockContainerLayoutManager/setupAreaDimensions(org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/datatypes/Length/getEnum()
org/apache/fop/layoutmgr/BlockContainerLayoutManager/setupAreaDimensions(org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/layoutmgr/BlockContainerLayoutManager/getContentAreaIPD()
org/apache/fop/layoutmgr/BlockContainerLayoutManager/setupAreaDimensions(org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/layoutmgr/BlockContainerLayoutManager/updateContentAreaIPDwithOverconstrainedAdjust(int)
org/apache/fop/layoutmgr/BlockContainerLayoutManager/setupAreaDimensions(org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/layoutmgr/BlockLevelEventProducer$Provider/get(org.apache.fop.events.EventBroadcaster)
org/apache/fop/layoutmgr/BlockContainerLayoutManager/setupAreaDimensions(org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/fo/flow/BlockContainer/getBidiLevel()
org/apache/fop/layoutmgr/BlockContainerLayoutManager/getParentArea(org.apache.fop.area.Area)#org/apache/fop/area/BlockViewport/setIPD(int)
org/apache/fop/layoutmgr/BlockContainerLayoutManager/getParentArea(org.apache.fop.area.Area)#org/apache/fop/area/BlockViewport/setBidiLevel(int)
org/apache/fop/layoutmgr/BlockContainerLayoutManager/getParentArea(org.apache.fop.area.Area)#org/apache/fop/layoutmgr/BlockContainerLayoutManager/getContentAreaIPD()
org/apache/fop/layoutmgr/BlockContainerLayoutManager/getParentArea(org.apache.fop.area.Area)#org/apache/fop/area/BlockViewport/setBPD(int)
org/apache/fop/layoutmgr/BlockContainerLayoutManager/getParentArea(org.apache.fop.area.Area)#org/apache/fop/area/BlockViewport/addTrait(java.lang.Integer,java.lang.Object)
org/apache/fop/layoutmgr/BlockContainerLayoutManager/getParentArea(org.apache.fop.area.Area)#org/apache/fop/area/BlockViewport/setYOffset(int)
org/apache/fop/layoutmgr/BlockContainerLayoutManager/getParentArea(org.apache.fop.area.Area)#org/apache/fop/fo/flow/BlockContainer/getLayer()
org/apache/fop/layoutmgr/BlockContainerLayoutManager/getParentArea(org.apache.fop.area.Area)#org/apache/fop/area/Block/addTrait(java.lang.Integer,java.lang.Object)
org/apache/fop/layoutmgr/BlockContainerLayoutManager/getParentArea(org.apache.fop.area.Area)#org/apache/fop/area/Block/setIPD(int)
org/apache/fop/layoutmgr/BlockContainerLayoutManager/getParentArea(org.apache.fop.area.Area)#org/apache/fop/area/Block/setBidiLevel(int)
org/apache/fop/layoutmgr/BlockContainerLayoutManager/getParentArea(org.apache.fop.area.Area)#org/apache/fop/area/BlockViewport/setPositioning(int)
org/apache/fop/layoutmgr/BlockContainerLayoutManager/getParentArea(org.apache.fop.area.Area)#org/apache/fop/fo/flow/BlockContainer/getId()
org/apache/fop/layoutmgr/BlockContainerLayoutManager/getParentArea(org.apache.fop.area.Area)#org/apache/fop/layoutmgr/BlockContainerLayoutManager/transferForeignAttributes(org.apache.fop.area.AreaTreeObject)
org/apache/fop/layoutmgr/BlockContainerLayoutManager/getParentArea(org.apache.fop.area.Area)#org/apache/fop/area/BlockViewport/setXOffset(int)
org/apache/fop/layoutmgr/BlockContainerLayoutManager/getParentArea(org.apache.fop.area.Area)#org/apache/fop/layoutmgr/BlockContainerLayoutManager/setCurrentArea(org.apache.fop.area.BlockParent)
org/apache/fop/layoutmgr/BlockContainerLayoutManager/getParentArea(org.apache.fop.area.Area)#org/apache/fop/fo/flow/BlockContainer/getBidiLevel()
org/apache/fop/layoutmgr/BlockContainerLayoutManager/getNextKnuthElementsAbsolute(org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/layoutmgr/BlockContainerLayoutManager/setContentAreaIPD(int)
org/apache/fop/layoutmgr/BlockContainerLayoutManager/getNextKnuthElementsAbsolute(org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/layoutmgr/BlockContainerLayoutManager/getCurrentPV()
org/apache/fop/layoutmgr/BlockContainerLayoutManager/getNextKnuthElementsAbsolute(org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/datatypes/Length/isAbsolute()
org/apache/fop/layoutmgr/BlockContainerLayoutManager/getNextKnuthElementsAbsolute(org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/layoutmgr/BlockContainerLayoutManager$BlockContainerBreaker/isOverflow()
org/apache/fop/layoutmgr/BlockContainerLayoutManager/getNextKnuthElementsAbsolute(org.apache.fop.layoutmgr.LayoutContext)#java/util/List/add(java.lang.Object)
org/apache/fop/layoutmgr/BlockContainerLayoutManager/getNextKnuthElementsAbsolute(org.apache.fop.layoutmgr.LayoutContext)#java/awt/Rectangle/getHeight()
org/apache/fop/layoutmgr/BlockContainerLayoutManager/getNextKnuthElementsAbsolute(org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/layoutmgr/BlockContainerLayoutManager/notifyPos(org.apache.fop.layoutmgr.Position)
org/apache/fop/layoutmgr/BlockContainerLayoutManager/getNextKnuthElementsAbsolute(org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/fo/flow/BlockContainer/getName()
org/apache/fop/layoutmgr/BlockContainerLayoutManager/getNextKnuthElementsAbsolute(org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/fo/flow/BlockContainer/getLocator()
org/apache/fop/layoutmgr/BlockContainerLayoutManager/getNextKnuthElementsAbsolute(org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/fo/flow/BlockContainer/getUserAgent()
org/apache/fop/layoutmgr/BlockContainerLayoutManager/getNextKnuthElementsAbsolute(org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/layoutmgr/BlockContainerLayoutManager/getAncestorBlockAreaBPD()
org/apache/fop/layoutmgr/BlockContainerLayoutManager/getNextKnuthElementsAbsolute(org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/layoutmgr/BlockContainerLayoutManager/getIPIndents()
org/apache/fop/layoutmgr/BlockContainerLayoutManager/getNextKnuthElementsAbsolute(org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/datatypes/Length/getEnum()
org/apache/fop/layoutmgr/BlockContainerLayoutManager/getNextKnuthElementsAbsolute(org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/layoutmgr/BlockContainerLayoutManager$BlockContainerPosition/BlockContainerPosition(org.apache.fop.layoutmgr.BlockContainerLayoutManager,org.apache.fop.layoutmgr.LayoutManager,org.apache.fop.layoutmgr.BlockContainerLayoutManager$BlockContainerBreaker)
org/apache/fop/layoutmgr/BlockContainerLayoutManager/getNextKnuthElementsAbsolute(org.apache.fop.layoutmgr.LayoutContext)#java/awt/Rectangle/getWidth()
org/apache/fop/layoutmgr/BlockContainerLayoutManager/getNextKnuthElementsAbsolute(org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/layoutmgr/BlockContainerLayoutManager/setFinished(boolean)
org/apache/fop/layoutmgr/BlockContainerLayoutManager/getNextKnuthElementsAbsolute(org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/layoutmgr/BlockContainerLayoutManager$BlockContainerBreaker/BlockContainerBreaker(org.apache.fop.layoutmgr.BlockContainerLayoutManager,org.apache.fop.layoutmgr.BlockContainerLayoutManager,org.apache.fop.traits.MinOptMax)
org/apache/fop/layoutmgr/BlockContainerLayoutManager/getNextKnuthElementsAbsolute(org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/layoutmgr/BlockContainerLayoutManager$BlockContainerBreaker/access$000(org.apache.fop.layoutmgr.BlockContainerLayoutManager$BlockContainerBreaker)
org/apache/fop/layoutmgr/BlockContainerLayoutManager/getNextKnuthElementsAbsolute(org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/layoutmgr/BlockContainerLayoutManager$BlockContainerBreaker/isEmpty()
org/apache/fop/layoutmgr/BlockContainerLayoutManager/getNextKnuthElementsAbsolute(org.apache.fop.layoutmgr.LayoutContext)#java/util/LinkedList/LinkedList()
org/apache/fop/layoutmgr/BlockContainerLayoutManager/getNextKnuthElementsAbsolute(org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/layoutmgr/BlockLevelEventProducer$Provider/get(org.apache.fop.events.EventBroadcaster)
org/apache/fop/layoutmgr/BlockContainerLayoutManager/getNextKnuthElementsAbsolute(org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/layoutmgr/BlockContainerLayoutManager$BlockContainerBreaker/doLayout(int,boolean)
org/apache/fop/layoutmgr/BlockContainerLayoutManager/getNextKnuthElementsAbsolute(org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/layoutmgr/BlockContainerLayoutManager$BlockContainerBreaker/getOverflowAmount()
org/apache/fop/render/intermediate/AbstractIFPainter/drawImage(org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle,org.apache.fop.render.RenderingContext,boolean,java.util.Map)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/render/intermediate/AbstractIFPainter/drawImage(org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle,org.apache.fop.render.RenderingContext,boolean,java.util.Map)#java/util/Map/putAll(java.util.Map)
org/apache/fop/render/intermediate/AbstractIFPainter/drawImage(org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle,org.apache.fop.render.RenderingContext,boolean,java.util.Map)#java/lang/Class/getName()
org/apache/fop/render/intermediate/AbstractIFPainter/drawImage(org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle,org.apache.fop.render.RenderingContext,boolean,java.util.Map)#org/apache/xmlgraphics/image/loader/ImageManager/convertImage(org.apache.xmlgraphics.image.loader.Image,org.apache.xmlgraphics.image.loader.ImageFlavor[],java.util.Map)
org/apache/fop/render/intermediate/AbstractIFPainter/drawImage(org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle,org.apache.fop.render.RenderingContext,boolean,java.util.Map)#java/lang/StringBuilder/toString()
org/apache/fop/render/intermediate/AbstractIFPainter/drawImage(org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle,org.apache.fop.render.RenderingContext,boolean,java.util.Map)#org/apache/xmlgraphics/image/loader/Image/getInfo()
org/apache/fop/render/intermediate/AbstractIFPainter/drawImage(org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle,org.apache.fop.render.RenderingContext,boolean,java.util.Map)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/render/intermediate/AbstractIFPainter/drawImage(org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle,org.apache.fop.render.RenderingContext,boolean,java.util.Map)#org/apache/commons/logging/Log/trace(java.lang.Object)
org/apache/fop/render/intermediate/AbstractIFPainter/drawImage(org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle,org.apache.fop.render.RenderingContext,boolean,java.util.Map)#java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)
org/apache/fop/render/intermediate/AbstractIFPainter/drawImage(org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle,org.apache.fop.render.RenderingContext,boolean,java.util.Map)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/fop/render/intermediate/AbstractIFPainter/drawImage(org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle,org.apache.fop.render.RenderingContext,boolean,java.util.Map)#java/lang/Object/getClass()
org/apache/fop/render/intermediate/AbstractIFPainter/drawImage(org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle,org.apache.fop.render.RenderingContext,boolean,java.util.Map)#org/apache/commons/logging/Log/isTraceEnabled()
org/apache/fop/fonts/substitute/FontQualifier/setFontWeight(java.lang.String)#java/util/Iterator/hasNext()
org/apache/fop/fonts/substitute/FontQualifier/setFontWeight(java.lang.String)#org/apache/fop/fonts/substitute/AttributeValue/valueOf(java.lang.String)
org/apache/fop/fonts/substitute/FontQualifier/setFontWeight(java.lang.String)#java/util/Iterator/next()
org/apache/fop/fonts/substitute/FontQualifier/setFontWeight(java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/fonts/substitute/FontQualifier/setFontWeight(java.lang.String)#org/apache/commons/logging/Log/error(java.lang.Object)
org/apache/fop/fonts/substitute/FontQualifier/setFontWeight(java.lang.String)#org/apache/fop/fonts/substitute/AttributeValue/iterator()
org/apache/fop/fonts/substitute/FontQualifier/setFontWeight(java.lang.String)#java/lang/StringBuilder/toString()
org/apache/fop/fonts/substitute/FontQualifier/setFontWeight(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/fonts/substitute/FontQualifier/setFontWeight(java.lang.String)#java/lang/String/trim()
org/apache/fop/fonts/substitute/FontQualifier/match(org.apache.fop.fonts.FontInfo)#java/lang/Integer/intValue()
org/apache/fop/fonts/substitute/FontQualifier/match(org.apache.fop.fonts.FontInfo)#java/util/ArrayList/ArrayList()
org/apache/fop/fonts/substitute/FontQualifier/match(org.apache.fop.fonts.FontInfo)#java/lang/String/equals(java.lang.Object)
org/apache/fop/fonts/substitute/FontQualifier/match(org.apache.fop.fonts.FontInfo)#java/util/Iterator/hasNext()
org/apache/fop/fonts/substitute/FontQualifier/match(org.apache.fop.fonts.FontInfo)#java/lang/String/toLowerCase()
org/apache/fop/fonts/substitute/FontQualifier/match(org.apache.fop.fonts.FontInfo)#java/util/Iterator/next()
org/apache/fop/fonts/substitute/FontQualifier/match(org.apache.fop.fonts.FontInfo)#java/util/Map/keySet()
org/apache/fop/fonts/substitute/FontQualifier/match(org.apache.fop.fonts.FontInfo)#java/util/Set/iterator()
org/apache/fop/fonts/substitute/FontQualifier/match(org.apache.fop.fonts.FontInfo)#java/util/List/add(java.lang.Object)
org/apache/fop/fonts/substitute/FontQualifier/match(org.apache.fop.fonts.FontInfo)#org/apache/fop/fonts/substitute/AttributeValue/iterator()
org/apache/fop/area/AreaTreeParser/Handler/TextMaker/startElement(org.xml.sax.Attributes)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/apache/fop/area/AreaTreeParser/Handler/TextMaker/startElement(org.xml.sax.Attributes)#org/apache/fop/area/inline/TextArea/setBaselineOffset(int)
org/apache/fop/area/AreaTreeParser/Handler/TextMaker/startElement(org.xml.sax.Attributes)#java/util/Stack/push(java.lang.Object)
org/apache/fop/area/AreaTreeParser/Handler/TextMaker/startElement(org.xml.sax.Attributes)#org/apache/fop/area/AreaTreeParser$Handler/access$5400(org.apache.fop.area.AreaTreeParser$Handler)
org/apache/fop/area/AreaTreeParser/Handler/TextMaker/startElement(org.xml.sax.Attributes)#org/apache/fop/area/AreaTreeParser$Handler/access$3600(org.apache.fop.area.AreaTreeParser$Handler)
org/apache/fop/area/AreaTreeParser/Handler/TextMaker/startElement(org.xml.sax.Attributes)#org/apache/fop/area/AreaTreeParser$Handler/access$4300(org.apache.fop.area.AreaTreeParser$Handler,org.xml.sax.Attributes,org.apache.fop.area.Area,java.lang.Object[])
org/apache/fop/area/AreaTreeParser/Handler/TextMaker/startElement(org.xml.sax.Attributes)#org/apache/fop/area/AreaTreeParser$Handler/access$4100(org.apache.fop.area.AreaTreeParser$Handler,org.xml.sax.Attributes,org.apache.fop.area.Area)
org/apache/fop/area/AreaTreeParser/Handler/TextMaker/startElement(org.xml.sax.Attributes)#org/apache/fop/area/inline/TextArea/setTextLetterSpaceAdjust(int)
org/apache/fop/area/AreaTreeParser/Handler/TextMaker/startElement(org.xml.sax.Attributes)#org/apache/fop/area/inline/TextArea/setBlockProgressionOffset(int)
org/apache/fop/area/AreaTreeParser/Handler/TextMaker/startElement(org.xml.sax.Attributes)#java/util/Stack/peek()
org/apache/fop/area/AreaTreeParser/Handler/TextMaker/startElement(org.xml.sax.Attributes)#org/apache/fop/area/AreaTreeParser$Handler/access$4200()
org/apache/fop/area/AreaTreeParser/Handler/TextMaker/startElement(org.xml.sax.Attributes)#org/apache/fop/area/AreaTreeParser$Handler/access$4500()
org/apache/fop/area/AreaTreeParser/Handler/TextMaker/startElement(org.xml.sax.Attributes)#org/apache/fop/area/inline/TextArea/setTextWordSpaceAdjust(int)
org/apache/fop/area/AreaTreeParser/Handler/TextMaker/startElement(org.xml.sax.Attributes)#org/apache/fop/area/AreaTreeParser$Handler/access$4400()
org/apache/fop/area/AreaTreeParser/Handler/TextMaker/startElement(org.xml.sax.Attributes)#org/apache/fop/area/AreaTreeParser$Handler/access$5500()
org/apache/fop/complexscripts/bidi/UnicodeBidiAlgorithm/dump(java.lang.String,int[],int[],int,int[])#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/fop/complexscripts/bidi/UnicodeBidiAlgorithm/dump(java.lang.String,int[],int[],int,int[])#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/complexscripts/bidi/UnicodeBidiAlgorithm/dump(java.lang.String,int[],int[],int,int[])#java/lang/StringBuffer/length()
org/apache/fop/complexscripts/bidi/UnicodeBidiAlgorithm/dump(java.lang.String,int[],int[],int,int[])#java/lang/StringBuilder/StringBuilder()
org/apache/fop/complexscripts/bidi/UnicodeBidiAlgorithm/dump(java.lang.String,int[],int[],int,int[])#java/lang/StringBuffer/append(java.lang.String)
org/apache/fop/complexscripts/bidi/UnicodeBidiAlgorithm/dump(java.lang.String,int[],int[],int,int[])#java/lang/StringBuffer/StringBuffer()
org/apache/fop/complexscripts/bidi/UnicodeBidiAlgorithm/dump(java.lang.String,int[],int[],int,int[])#java/lang/StringBuffer/append(char)
org/apache/fop/complexscripts/bidi/UnicodeBidiAlgorithm/dump(java.lang.String,int[],int[],int,int[])#java/lang/StringBuilder/append(int)
org/apache/fop/complexscripts/bidi/UnicodeBidiAlgorithm/dump(java.lang.String,int[],int[],int,int[])#java/lang/StringBuilder/toString()
org/apache/fop/complexscripts/bidi/UnicodeBidiAlgorithm/dump(java.lang.String,int[],int[],int,int[])#java/lang/StringBuffer/setLength(int)
org/apache/fop/afp/util/AFPResourceUtil/copyNamedResource(java.lang.String,java.io.InputStream,java.io.OutputStream)#java/io/IOException/IOException(java.lang.String)
org/apache/fop/afp/util/AFPResourceUtil/copyNamedResource(java.lang.String,java.io.InputStream,java.io.OutputStream)#org/apache/commons/logging/Log/isDebugEnabled()
org/apache/fop/afp/util/AFPResourceUtil/copyNamedResource(java.lang.String,java.io.InputStream,java.io.OutputStream)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/afp/util/AFPResourceUtil/copyNamedResource(java.lang.String,java.io.InputStream,java.io.OutputStream)#org/apache/fop/afp/util/AFPResourceUtil$1/1(java.lang.String,org.apache.fop.afp.parser.UnparsedStructuredField,org.apache.fop.afp.parser.MODCAParser,java.io.OutputStream)
org/apache/fop/afp/util/AFPResourceUtil/copyNamedResource(java.lang.String,java.io.InputStream,java.io.OutputStream)#java/util/Collection/add(java.lang.Object)
org/apache/fop/afp/util/AFPResourceUtil/copyNamedResource(java.lang.String,java.io.InputStream,java.io.OutputStream)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/fop/afp/util/AFPResourceUtil/copyNamedResource(java.lang.String,java.io.InputStream,java.io.OutputStream)#java/util/HashSet/HashSet()
org/apache/fop/afp/util/AFPResourceUtil/copyNamedResource(java.lang.String,java.io.InputStream,java.io.OutputStream)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/fop/afp/util/AFPResourceUtil/copyNamedResource(java.lang.String,java.io.InputStream,java.io.OutputStream)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/afp/util/AFPResourceUtil/copyNamedResource(java.lang.String,java.io.InputStream,java.io.OutputStream)#org/apache/fop/afp/modca/ResourceObject/writeToStream(java.io.OutputStream)
org/apache/fop/afp/util/AFPResourceUtil/copyNamedResource(java.lang.String,java.io.InputStream,java.io.OutputStream)#java/lang/String/equals(java.lang.Object)
org/apache/fop/afp/util/AFPResourceUtil/copyNamedResource(java.lang.String,java.io.InputStream,java.io.OutputStream)#java/lang/StringBuilder/toString()
org/apache/fop/pdf/PDFDocument/addObject(org.apache.fop.pdf.PDFObject)#java/lang/StringBuilder/append(int)
org/apache/fop/pdf/PDFDocument/addObject(org.apache.fop.pdf.PDFObject)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/pdf/PDFDocument/addObject(org.apache.fop.pdf.PDFObject)#java/util/List/add(java.lang.Object)
org/apache/fop/pdf/PDFDocument/addObject(org.apache.fop.pdf.PDFObject)#java/lang/NullPointerException/NullPointerException(java.lang.String)
org/apache/fop/pdf/PDFDocument/addObject(org.apache.fop.pdf.PDFObject)#java/lang/StringBuilder/toString()
org/apache/fop/pdf/PDFDocument/addObject(org.apache.fop.pdf.PDFObject)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/fop/pdf/PDFDocument/addObject(org.apache.fop.pdf.PDFObject)#java/util/ArrayList/ArrayList()
org/apache/fop/pdf/PDFDocument/addObject(org.apache.fop.pdf.PDFObject)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/apache/fop/pdf/PDFDocument/addObject(org.apache.fop.pdf.PDFObject)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/pdf/PDFDocument/writeTrailer(java.io.OutputStream,int,int,int,long,long)#java/lang/Long/valueOf(long)
org/apache/fop/pdf/PDFDocument/writeTrailer(java.io.OutputStream,int,int,int,long,long)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/pdf/PDFDocument/writeTrailer(java.io.OutputStream,int,int,int,long,long)#org/apache/fop/pdf/PDFDocument$UncompressedTrailerOutputHelper/UncompressedTrailerOutputHelper(org.apache.fop.pdf.PDFDocument,org.apache.fop.pdf.PDFDocument$1)
org/apache/fop/pdf/PDFDocument/writeTrailer(java.io.OutputStream,int,int,int,long,long)#java/lang/StringBuilder/append(long)
org/apache/fop/pdf/PDFDocument/writeTrailer(java.io.OutputStream,int,int,int,long,long)#org/apache/fop/pdf/PDFDocument$CompressedTrailerOutputHelper/CompressedTrailerOutputHelper(org.apache.fop.pdf.PDFDocument,org.apache.fop.pdf.PDFDocument$1)
org/apache/fop/pdf/PDFDocument/writeTrailer(java.io.OutputStream,int,int,int,long,long)#java/lang/StringBuilder/toString()
org/apache/fop/pdf/PDFDocument/writeTrailer(java.io.OutputStream,int,int,int,long,long)#org/apache/fop/pdf/PDFDocument$TrailerOutputHelper/outputStructureTreeElements(java.io.OutputStream)
org/apache/fop/pdf/PDFDocument/writeTrailer(java.io.OutputStream,int,int,int,long,long)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/pdf/PDFDocument/writeTrailer(java.io.OutputStream,int,int,int,long,long)#java/io/OutputStream/write(byte[])
org/apache/fop/pdf/PDFDocument/writeTrailer(java.io.OutputStream,int,int,int,long,long)#org/apache/fop/pdf/PDFDocument$TrailerOutputHelper/outputCrossReferenceObject(java.io.OutputStream,org.apache.fop.pdf.xref.TrailerDictionary,int,int,int)
org/apache/fop/pdf/PDFDocument/outputTrailerObjectsAndXref(java.io.OutputStream)#org/apache/fop/pdf/PDFDocument$TrailerOutputHelper/outputStructureTreeElements(java.io.OutputStream)
org/apache/fop/pdf/PDFDocument/outputTrailerObjectsAndXref(java.io.OutputStream)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/pdf/PDFDocument/outputTrailerObjectsAndXref(java.io.OutputStream)#org/apache/fop/pdf/PDFDocument$UncompressedTrailerOutputHelper/UncompressedTrailerOutputHelper(org.apache.fop.pdf.PDFDocument,org.apache.fop.pdf.PDFDocument$1)
org/apache/fop/pdf/PDFDocument/outputTrailerObjectsAndXref(java.io.OutputStream)#java/util/List/size()
org/apache/fop/pdf/PDFDocument/outputTrailerObjectsAndXref(java.io.OutputStream)#java/lang/StringBuilder/append(long)
org/apache/fop/pdf/PDFDocument/outputTrailerObjectsAndXref(java.io.OutputStream)#org/apache/fop/pdf/PDFDocument$CompressedTrailerOutputHelper/CompressedTrailerOutputHelper(org.apache.fop.pdf.PDFDocument,org.apache.fop.pdf.PDFDocument$1)
org/apache/fop/pdf/PDFDocument/outputTrailerObjectsAndXref(java.io.OutputStream)#java/lang/StringBuilder/toString()
org/apache/fop/pdf/PDFDocument/outputTrailerObjectsAndXref(java.io.OutputStream)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/pdf/PDFDocument/outputTrailerObjectsAndXref(java.io.OutputStream)#java/io/OutputStream/write(byte[])
org/apache/fop/pdf/PDFDocument/outputTrailerObjectsAndXref(java.io.OutputStream)#org/apache/fop/pdf/PDFDocument$TrailerOutputHelper/outputCrossReferenceObject(java.io.OutputStream,org.apache.fop.pdf.xref.TrailerDictionary,int,int,int)
org/apache/fop/pdf/PDFDocument/resolveExtensionReference(java.lang.String)#org/apache/fop/pdf/PDFNavigatorAction/makeReference()
org/apache/fop/pdf/PDFDocument/resolveExtensionReference(java.lang.String)#org/apache/fop/pdf/PDFLayer/makeReference()
org/apache/fop/pdf/PDFDocument/resolveExtensionReference(java.lang.String)#java/util/Iterator/hasNext()
org/apache/fop/pdf/PDFDocument/resolveExtensionReference(java.lang.String)#org/apache/fop/pdf/PDFNavigator/makeReference()
org/apache/fop/pdf/PDFDocument/resolveExtensionReference(java.lang.String)#java/util/Iterator/next()
org/apache/fop/pdf/PDFDocument/resolveExtensionReference(java.lang.String)#org/apache/fop/pdf/PDFNavigatorAction/hasId(java.lang.String)
org/apache/fop/pdf/PDFDocument/resolveExtensionReference(java.lang.String)#org/apache/fop/pdf/PDFLayer/hasId(java.lang.String)
org/apache/fop/pdf/PDFDocument/resolveExtensionReference(java.lang.String)#java/util/List/iterator()
org/apache/fop/pdf/PDFDocument/resolveExtensionReference(java.lang.String)#org/apache/fop/pdf/PDFNavigator/hasId(java.lang.String)
org/apache/fop/layoutmgr/AbstractPageSequenceLayoutManager/resolveRetrieveMarker(org.apache.fop.fo.flow.RetrieveMarker)#org/apache/fop/fo/flow/RetrieveMarker/bindMarker(org.apache.fop.fo.flow.Marker)
org/apache/fop/layoutmgr/AbstractPageSequenceLayoutManager/resolveRetrieveMarker(org.apache.fop.fo.flow.RetrieveMarker)#org/apache/fop/fo/flow/RetrieveMarker/changePositionTo(int)
org/apache/fop/layoutmgr/AbstractPageSequenceLayoutManager/resolveRetrieveMarker(org.apache.fop.fo.flow.RetrieveMarker)#org/apache/fop/fo/flow/RetrieveMarker/getRetrieveClassName()
org/apache/fop/layoutmgr/AbstractPageSequenceLayoutManager/resolveRetrieveMarker(org.apache.fop.fo.flow.RetrieveMarker)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/layoutmgr/AbstractPageSequenceLayoutManager/resolveRetrieveMarker(org.apache.fop.fo.flow.RetrieveMarker)#org/apache/fop/fo/flow/RetrieveMarker/getPosition()
org/apache/fop/layoutmgr/AbstractPageSequenceLayoutManager/resolveRetrieveMarker(org.apache.fop.fo.flow.RetrieveMarker)#java/lang/StringBuilder/toString()
org/apache/fop/layoutmgr/AbstractPageSequenceLayoutManager/resolveRetrieveMarker(org.apache.fop.fo.flow.RetrieveMarker)#org/apache/fop/layoutmgr/AbstractPageSequenceLayoutManager/getCurrentPV()
org/apache/fop/layoutmgr/AbstractPageSequenceLayoutManager/resolveRetrieveMarker(org.apache.fop.fo.flow.RetrieveMarker)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/fop/layoutmgr/AbstractPageSequenceLayoutManager/resolveRetrieveMarker(org.apache.fop.fo.flow.RetrieveMarker)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/util/ColorSpaceCache/get(java.lang.String,java.lang.String,org.apache.xmlgraphics.java2d.color.RenderingIntent)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/fop/util/ColorSpaceCache/get(java.lang.String,java.lang.String,org.apache.xmlgraphics.java2d.color.RenderingIntent)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/util/ColorSpaceCache/get(java.lang.String,java.lang.String,org.apache.xmlgraphics.java2d.color.RenderingIntent)#java/util/Map/get(java.lang.Object)
org/apache/fop/util/ColorSpaceCache/get(java.lang.String,java.lang.String,org.apache.xmlgraphics.java2d.color.RenderingIntent)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/util/ColorSpaceCache/get(java.lang.String,java.lang.String,org.apache.xmlgraphics.java2d.color.RenderingIntent)#java/util/Map/containsKey(java.lang.Object)
org/apache/fop/util/ColorSpaceCache/get(java.lang.String,java.lang.String,org.apache.xmlgraphics.java2d.color.RenderingIntent)#java/awt/color/ICC_Profile/getInstance(java.io.InputStream)
org/apache/fop/util/ColorSpaceCache/get(java.lang.String,java.lang.String,org.apache.xmlgraphics.java2d.color.RenderingIntent)#org/apache/xmlgraphics/java2d/color/ICCColorSpaceWithIntent/ICCColorSpaceWithIntent(java.awt.color.ICC_Profile,org.apache.xmlgraphics.java2d.color.RenderingIntent,java.lang.String,java.lang.String)
org/apache/fop/util/ColorSpaceCache/get(java.lang.String,java.lang.String,org.apache.xmlgraphics.java2d.color.RenderingIntent)#org/apache/commons/logging/Log/warn(java.lang.Object)
org/apache/fop/util/ColorSpaceCache/get(java.lang.String,java.lang.String,org.apache.xmlgraphics.java2d.color.RenderingIntent)#java/lang/StringBuilder/toString()
org/apache/fop/util/ColorSpaceCache/get(java.lang.String,java.lang.String,org.apache.xmlgraphics.java2d.color.RenderingIntent)#java/lang/Exception/getMessage()
org/apache/fop/fonts/base14/HelveticaOblique/<clinit>()#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/fop/fonts/base14/HelveticaOblique/<clinit>()#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/fonts/base14/HelveticaOblique/<clinit>()#java/lang/Integer/Integer(int)
org/apache/fop/fonts/base14/HelveticaOblique/<clinit>()#java/awt/Rectangle/Rectangle(int,int,int,int)
org/apache/fop/fonts/base14/HelveticaOblique/<clinit>()#java/util/Map/get(java.lang.Object)
org/apache/fop/fonts/base14/HelveticaOblique/<clinit>()#java/util/HashMap/HashMap()
org/apache/fop/fonts/base14/HelveticaOblique/<clinit>()#java/lang/StringBuilder/StringBuilder()
org/apache/fop/fonts/base14/HelveticaOblique/<clinit>()#java/util/HashSet/HashSet()
org/apache/fop/fonts/base14/HelveticaOblique/<clinit>()#java/util/Set/add(java.lang.Object)
org/apache/fop/fonts/base14/HelveticaOblique/<clinit>()#java/lang/StringBuilder/toString()
org/apache/fop/fonts/base14/HelveticaOblique/<clinit>()#java/net/URI/URI(java.lang.String)
org/apache/fop/fonts/base14/HelveticaOblique/<clinit>()#java/lang/String/toLowerCase()
org/apache/fop/fo/properties/FontShorthandProperty/Maker/make(org.apache.fop.fo.PropertyList,java.lang.String,org.apache.fop.fo.FObj)#org/apache/fop/fo/properties/FontShorthandProperty/setSpecifiedValue(java.lang.String)
org/apache/fop/fo/properties/FontShorthandProperty/Maker/make(org.apache.fop.fo.PropertyList,java.lang.String,org.apache.fop.fo.FObj)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/fo/properties/FontShorthandProperty/Maker/make(org.apache.fop.fo.PropertyList,java.lang.String,org.apache.fop.fo.FObj)#org/apache/fop/fo/properties/FontShorthandProperty$Maker/getName()
org/apache/fop/fo/properties/FontShorthandProperty/Maker/make(org.apache.fop.fo.PropertyList,java.lang.String,org.apache.fop.fo.FObj)#org/apache/fop/fo/properties/FontShorthandProperty$Maker/checkEnumValues(java.lang.String)
org/apache/fop/fo/properties/FontShorthandProperty/Maker/make(org.apache.fop.fo.PropertyList,java.lang.String,org.apache.fop.fo.FObj)#java/lang/String/lastIndexOf(int,int)
org/apache/fop/fo/properties/FontShorthandProperty/Maker/make(org.apache.fop.fo.PropertyList,java.lang.String,org.apache.fop.fo.FObj)#java/lang/String/substring(int,int)
org/apache/fop/fo/properties/FontShorthandProperty/Maker/make(org.apache.fop.fo.PropertyList,java.lang.String,org.apache.fop.fo.FObj)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/fo/properties/FontShorthandProperty/Maker/make(org.apache.fop.fo.PropertyList,java.lang.String,org.apache.fop.fo.FObj)#java/lang/String/substring(int)
org/apache/fop/fo/properties/FontShorthandProperty/Maker/make(org.apache.fop.fo.PropertyList,java.lang.String,org.apache.fop.fo.FObj)#java/util/List/get(int)
org/apache/fop/fo/properties/FontShorthandProperty/Maker/make(org.apache.fop.fo.PropertyList,java.lang.String,org.apache.fop.fo.FObj)#java/lang/String/indexOf(int,int)
org/apache/fop/fo/properties/FontShorthandProperty/Maker/make(org.apache.fop.fo.PropertyList,java.lang.String,org.apache.fop.fo.FObj)#java/lang/StringBuilder/toString()
org/apache/fop/fo/properties/FontShorthandProperty/Maker/make(org.apache.fop.fo.PropertyList,java.lang.String,org.apache.fop.fo.FObj)#org/apache/commons/logging/Log/warn(java.lang.Object)
org/apache/fop/fo/properties/FontShorthandProperty/Maker/make(org.apache.fop.fo.PropertyList,java.lang.String,org.apache.fop.fo.FObj)#java/lang/String/length()
org/apache/fop/fo/properties/FontShorthandProperty/Maker/make(org.apache.fop.fo.PropertyList,java.lang.String,org.apache.fop.fo.FObj)#org/apache/fop/fo/FObj/getLocator()
org/apache/fop/fo/properties/FontShorthandProperty/Maker/make(org.apache.fop.fo.PropertyList,java.lang.String,org.apache.fop.fo.FObj)#java/lang/String/equals(java.lang.Object)
org/apache/fop/fo/properties/FontShorthandProperty/Maker/make(org.apache.fop.fo.PropertyList,java.lang.String,org.apache.fop.fo.FObj)#org/apache/fop/fo/expr/PropertyException/setLocator(org.xml.sax.Locator)
org/apache/fop/fo/properties/FontShorthandProperty/Maker/make(org.apache.fop.fo.PropertyList,java.lang.String,org.apache.fop.fo.FObj)#java/lang/String/indexOf(int)
org/apache/fop/fonts/type1/PFMFile/load(java.io.InputStream)#java/lang/String/equalsIgnoreCase(java.lang.String)
org/apache/fop/fonts/type1/PFMFile/load(java.io.InputStream)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/fonts/type1/PFMFile/load(java.io.InputStream)#java/io/ByteArrayInputStream/ByteArrayInputStream(byte[])
org/apache/fop/fonts/type1/PFMFile/load(java.io.InputStream)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/fonts/type1/PFMFile/load(java.io.InputStream)#org/apache/commons/io/IOUtils/toByteArray(java.io.InputStream)
org/apache/fop/fonts/type1/PFMFile/load(java.io.InputStream)#java/io/IOException/IOException(java.lang.String)
org/apache/fop/fonts/type1/PFMFile/load(java.io.InputStream)#org/apache/commons/io/IOUtils/closeQuietly(java.io.InputStream)
org/apache/fop/fonts/type1/PFMFile/load(java.io.InputStream)#java/io/InputStream/read(byte[])
org/apache/fop/fonts/type1/PFMFile/load(java.io.InputStream)#org/apache/commons/logging/Log/warn(java.lang.Object)
org/apache/fop/fonts/type1/PFMFile/load(java.io.InputStream)#java/io/InputStream/reset()
org/apache/fop/fonts/type1/PFMFile/load(java.io.InputStream)#java/lang/StringBuilder/append(int)
org/apache/fop/fonts/type1/PFMFile/load(java.io.InputStream)#java/io/InputStream/mark(int)
org/apache/fop/fonts/type1/PFMFile/load(java.io.InputStream)#java/lang/String/String(byte[],java.lang.String)
org/apache/fop/fonts/type1/PFMFile/load(java.io.InputStream)#java/lang/StringBuilder/toString()
org/apache/fop/fonts/type1/PFMFile/loadKernPairs(org.apache.fop.fonts.type1.PFMInputStream)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/fop/fonts/type1/PFMFile/loadKernPairs(org.apache.fop.fonts.type1.PFMInputStream)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/fonts/type1/PFMFile/loadKernPairs(org.apache.fop.fonts.type1.PFMInputStream)#java/lang/StringBuilder/append(int)
org/apache/fop/fonts/type1/PFMFile/loadKernPairs(org.apache.fop.fonts.type1.PFMInputStream)#java/util/Map/get(java.lang.Object)
org/apache/fop/fonts/type1/PFMFile/loadKernPairs(org.apache.fop.fonts.type1.PFMInputStream)#java/util/HashMap/HashMap()
org/apache/fop/fonts/type1/PFMFile/loadKernPairs(org.apache.fop.fonts.type1.PFMInputStream)#java/lang/Integer/valueOf(int)
org/apache/fop/fonts/type1/PFMFile/loadKernPairs(org.apache.fop.fonts.type1.PFMInputStream)#org/apache/commons/logging/Log/isTraceEnabled()
org/apache/fop/fonts/type1/PFMFile/loadKernPairs(org.apache.fop.fonts.type1.PFMInputStream)#java/lang/StringBuilder/toString()
org/apache/fop/fonts/type1/PFMFile/loadKernPairs(org.apache.fop.fonts.type1.PFMInputStream)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/fonts/type1/PFMFile/loadKernPairs(org.apache.fop.fonts.type1.PFMInputStream)#org/apache/commons/logging/Log/trace(java.lang.Object)
org/apache/fop/complexscripts/util/UTF32/fromUTF32(java.lang.Integer[])#java/lang/Integer/intValue()
org/apache/fop/complexscripts/util/UTF32/fromUTF32(java.lang.Integer[])#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/complexscripts/util/UTF32/fromUTF32(java.lang.Integer[])#java/lang/StringBuffer/append(char)
org/apache/fop/complexscripts/util/UTF32/fromUTF32(java.lang.Integer[])#java/lang/String/length()
org/apache/fop/complexscripts/util/UTF32/fromUTF32(java.lang.Integer[])#java/lang/StringBuffer/toString()
org/apache/fop/complexscripts/util/UTF32/fromUTF32(java.lang.Integer[])#java/lang/String/substring(int,int)
org/apache/fop/complexscripts/util/UTF32/fromUTF32(java.lang.Integer[])#java/lang/StringBuilder/StringBuilder()
org/apache/fop/complexscripts/util/UTF32/fromUTF32(java.lang.Integer[])#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/fop/complexscripts/util/UTF32/fromUTF32(java.lang.Integer[])#java/lang/StringBuffer/StringBuffer()
org/apache/fop/complexscripts/util/UTF32/fromUTF32(java.lang.Integer[])#java/lang/StringBuilder/toString()
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfPageNumberCitation/writeRtfContent()#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfPageNumberCitation/writeRtfContent()#org/apache/fop/render/rtf/rtflib/rtfdoc/RtfPageNumberCitation/writeAttributes(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes,java.lang.String[])
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfPageNumberCitation/writeRtfContent()#org/apache/fop/render/rtf/rtflib/rtfdoc/RtfPageNumberCitation/writeStarControlWord(java.lang.String)
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfPageNumberCitation/writeRtfContent()#java/lang/String/length()
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfPageNumberCitation/writeRtfContent()#java/lang/String/substring(int,int)
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfPageNumberCitation/writeRtfContent()#org/apache/fop/render/rtf/rtflib/rtfdoc/RtfPageNumberCitation/writeGroupMark(boolean)
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfPageNumberCitation/writeRtfContent()#org/apache/fop/render/rtf/rtflib/rtfdoc/RtfPageNumberCitation/writeControlWord(java.lang.String)
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfPageNumberCitation/writeRtfContent()#java/lang/StringBuilder/toString()
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfPageNumberCitation/writeRtfContent()#java/lang/StringBuilder/StringBuilder()
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfPageNumberCitation/writeRtfContent()#java/lang/String/indexOf(java.lang.String)
org/apache/fop/complexscripts/bidi/UnflattenProcessor/generateTextContainer(org.apache.fop.area.inline.TextArea)#org/apache/fop/area/inline/TextArea/setBaselineOffset(int)
org/apache/fop/complexscripts/bidi/UnflattenProcessor/generateTextContainer(org.apache.fop.area.inline.TextArea)#org/apache/fop/area/inline/TextArea/getTextWordSpaceAdjust()
org/apache/fop/complexscripts/bidi/UnflattenProcessor/generateTextContainer(org.apache.fop.area.inline.TextArea)#org/apache/fop/area/inline/TextArea/setBPD(int)
org/apache/fop/complexscripts/bidi/UnflattenProcessor/generateTextContainer(org.apache.fop.area.inline.TextArea)#org/apache/fop/area/inline/TextArea/getBaselineOffset()
org/apache/fop/complexscripts/bidi/UnflattenProcessor/generateTextContainer(org.apache.fop.area.inline.TextArea)#org/apache/fop/area/inline/TextArea/getTextLetterSpaceAdjust()
org/apache/fop/complexscripts/bidi/UnflattenProcessor/generateTextContainer(org.apache.fop.area.inline.TextArea)#org/apache/fop/area/inline/TextArea/setTraits(java.util.Map)
org/apache/fop/complexscripts/bidi/UnflattenProcessor/generateTextContainer(org.apache.fop.area.inline.TextArea)#org/apache/fop/area/inline/TextArea/getBlockProgressionOffset()
org/apache/fop/complexscripts/bidi/UnflattenProcessor/generateTextContainer(org.apache.fop.area.inline.TextArea)#org/apache/fop/area/inline/TextArea/getTraits()
org/apache/fop/complexscripts/bidi/UnflattenProcessor/generateTextContainer(org.apache.fop.area.inline.TextArea)#org/apache/fop/area/inline/TextArea/setTextLetterSpaceAdjust(int)
org/apache/fop/complexscripts/bidi/UnflattenProcessor/generateTextContainer(org.apache.fop.area.inline.TextArea)#org/apache/fop/area/inline/TextArea/setBlockProgressionOffset(int)
org/apache/fop/complexscripts/bidi/UnflattenProcessor/generateTextContainer(org.apache.fop.area.inline.TextArea)#org/apache/fop/area/inline/TextArea/getBPD()
org/apache/fop/complexscripts/bidi/UnflattenProcessor/generateTextContainer(org.apache.fop.area.inline.TextArea)#org/apache/fop/area/inline/TextArea/setTextWordSpaceAdjust(int)
org/apache/fop/complexscripts/bidi/UnflattenProcessor/finishInlineContainer(java.util.List,org.apache.fop.area.inline.TextArea,org.apache.fop.area.inline.InlineArea)#java/util/Stack/empty()
org/apache/fop/complexscripts/bidi/UnflattenProcessor/finishInlineContainer(java.util.List,org.apache.fop.area.inline.TextArea,org.apache.fop.area.inline.InlineArea)#java/util/List/isEmpty()
org/apache/fop/complexscripts/bidi/UnflattenProcessor/finishInlineContainer(java.util.List,org.apache.fop.area.inline.TextArea,org.apache.fop.area.inline.InlineArea)#java/util/Iterator/next()
org/apache/fop/complexscripts/bidi/UnflattenProcessor/finishInlineContainer(java.util.List,org.apache.fop.area.inline.TextArea,org.apache.fop.area.inline.InlineArea)#java/util/List/add(java.lang.Object)
org/apache/fop/complexscripts/bidi/UnflattenProcessor/finishInlineContainer(java.util.List,org.apache.fop.area.inline.TextArea,org.apache.fop.area.inline.InlineArea)#java/util/List/iterator()
org/apache/fop/complexscripts/bidi/UnflattenProcessor/finishInlineContainer(java.util.List,org.apache.fop.area.inline.TextArea,org.apache.fop.area.inline.InlineArea)#java/util/Stack/peek()
org/apache/fop/complexscripts/bidi/UnflattenProcessor/finishInlineContainer(java.util.List,org.apache.fop.area.inline.TextArea,org.apache.fop.area.inline.InlineArea)#java/lang/AssertionError/AssertionError()
org/apache/fop/complexscripts/bidi/UnflattenProcessor/finishInlineContainer(java.util.List,org.apache.fop.area.inline.TextArea,org.apache.fop.area.inline.InlineArea)#java/util/Iterator/hasNext()
org/apache/fop/complexscripts/bidi/UnflattenProcessor/finishInlineContainer(java.util.List,org.apache.fop.area.inline.TextArea,org.apache.fop.area.inline.InlineArea)#java/util/Stack/pop()
org/apache/fop/fo/properties/TextDecorationMaker/convertProperty(org.apache.fop.fo.properties.Property,org.apache.fop.fo.PropertyList,org.apache.fop.fo.FObj)#java/util/List/size()
org/apache/fop/fo/properties/TextDecorationMaker/convertProperty(org.apache.fop.fo.properties.Property,org.apache.fop.fo.PropertyList,org.apache.fop.fo.FObj)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/fo/properties/TextDecorationMaker/convertProperty(org.apache.fop.fo.properties.Property,org.apache.fop.fo.PropertyList,org.apache.fop.fo.FObj)#java/util/List/get(int)
org/apache/fop/fo/properties/TextDecorationMaker/convertProperty(org.apache.fop.fo.properties.Property,org.apache.fop.fo.PropertyList,org.apache.fop.fo.FObj)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/fop/fo/properties/TextDecorationMaker/convertProperty(org.apache.fop.fo.properties.Property,org.apache.fop.fo.PropertyList,org.apache.fop.fo.FObj)#java/util/List/set(int,java.lang.Object)
org/apache/fop/fo/properties/TextDecorationMaker/convertProperty(org.apache.fop.fo.properties.Property,org.apache.fop.fo.PropertyList,org.apache.fop.fo.FObj)#java/lang/StringBuilder/toString()
org/apache/fop/fo/properties/TextDecorationMaker/convertProperty(org.apache.fop.fo.properties.Property,org.apache.fop.fo.PropertyList,org.apache.fop.fo.FObj)#org/apache/fop/fo/properties/TextDecorationMaker/checkEnumValues(java.lang.String)
org/apache/fop/fo/properties/TextDecorationMaker/convertProperty(org.apache.fop.fo.properties.Property,org.apache.fop.fo.PropertyList,org.apache.fop.fo.FObj)#org/apache/fop/fo/properties/ListProperty$Maker/convertProperty(org.apache.fop.fo.properties.Property,org.apache.fop.fo.PropertyList,org.apache.fop.fo.FObj)
org/apache/fop/fo/properties/TextDecorationMaker/convertProperty(org.apache.fop.fo.properties.Property,org.apache.fop.fo.PropertyList,org.apache.fop.fo.FObj)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/complexscripts/fonts/GlyphPositioningTable/MarkToLigatureSubtable/position(org.apache.fop.complexscripts.fonts.GlyphPositioningState)#org/apache/fop/complexscripts/fonts/GlyphPositioningTable$MarkToLigatureSubtable/getCoverageIndex(int)
org/apache/fop/complexscripts/fonts/GlyphPositioningTable/MarkToLigatureSubtable/position(org.apache.fop.complexscripts.fonts.GlyphPositioningState)#org/apache/fop/complexscripts/fonts/GlyphPositioningTable$MarkToLigatureSubtable/getLigatureAnchor(int,int,int,int)
org/apache/fop/complexscripts/fonts/GlyphPositioningTable/MarkToLigatureSubtable/position(org.apache.fop.complexscripts.fonts.GlyphPositioningState)#org/apache/fop/complexscripts/fonts/GlyphPositioningTable$MarkToLigatureSubtable/getMarkAnchor(int,int)
org/apache/fop/complexscripts/fonts/GlyphPositioningTable/MarkToLigatureSubtable/position(org.apache.fop.complexscripts.fonts.GlyphPositioningState)#org/apache/fop/complexscripts/fonts/GlyphPositioningState/getPosition()
org/apache/fop/complexscripts/fonts/GlyphPositioningTable/MarkToLigatureSubtable/position(org.apache.fop.complexscripts.fonts.GlyphPositioningState)#org/apache/fop/complexscripts/fonts/GlyphPositioningState/getGlyph(int)
org/apache/fop/complexscripts/fonts/GlyphPositioningTable/MarkToLigatureSubtable/position(org.apache.fop.complexscripts.fonts.GlyphPositioningState)#org/apache/fop/complexscripts/fonts/GlyphPositioningState/getGlyph()
org/apache/fop/complexscripts/fonts/GlyphPositioningTable/MarkToLigatureSubtable/position(org.apache.fop.complexscripts.fonts.GlyphPositioningState)#org/apache/fop/complexscripts/fonts/GlyphPositioningTable$MarkToLigatureSubtable/getMaxComponentCount()
org/apache/fop/complexscripts/fonts/GlyphPositioningTable/MarkToLigatureSubtable/position(org.apache.fop.complexscripts.fonts.GlyphPositioningState)#org/apache/fop/complexscripts/fonts/GlyphPositioningState/consume(int)
org/apache/fop/complexscripts/fonts/GlyphPositioningTable/MarkToLigatureSubtable/position(org.apache.fop.complexscripts.fonts.GlyphPositioningState)#org/apache/fop/complexscripts/fonts/GlyphPositioningTable$Anchor/getAlignmentAdjustment(org.apache.fop.complexscripts.fonts.GlyphPositioningTable$Anchor)
org/apache/fop/complexscripts/fonts/GlyphPositioningTable/MarkToLigatureSubtable/position(org.apache.fop.complexscripts.fonts.GlyphPositioningState)#org/apache/fop/complexscripts/fonts/GlyphPositioningTable$MarkAnchor/getMarkClass()
org/apache/fop/complexscripts/fonts/GlyphPositioningTable/MarkToLigatureSubtable/position(org.apache.fop.complexscripts.fonts.GlyphPositioningState)#org/apache/fop/complexscripts/fonts/GlyphPositioningState/isMark(int)
org/apache/fop/fo/properties/FontFamilyProperty/Maker/make(org.apache.fop.fo.PropertyList,java.lang.String,org.apache.fop.fo.FObj)#org/apache/commons/logging/Log/warn(java.lang.Object)
org/apache/fop/fo/properties/FontFamilyProperty/Maker/make(org.apache.fop.fo.PropertyList,java.lang.String,org.apache.fop.fo.FObj)#java/lang/String/length()
org/apache/fop/fo/properties/FontFamilyProperty/Maker/make(org.apache.fop.fo.PropertyList,java.lang.String,org.apache.fop.fo.FObj)#java/lang/String/equals(java.lang.Object)
org/apache/fop/fo/properties/FontFamilyProperty/Maker/make(org.apache.fop.fo.PropertyList,java.lang.String,org.apache.fop.fo.FObj)#java/lang/String/substring(int,int)
org/apache/fop/fo/properties/FontFamilyProperty/Maker/make(org.apache.fop.fo.PropertyList,java.lang.String,org.apache.fop.fo.FObj)#java/lang/String/substring(int)
org/apache/fop/fo/properties/FontFamilyProperty/Maker/make(org.apache.fop.fo.PropertyList,java.lang.String,org.apache.fop.fo.FObj)#java/lang/String/indexOf(int,int)
org/apache/fop/fo/properties/FontFamilyProperty/Maker/make(org.apache.fop.fo.PropertyList,java.lang.String,org.apache.fop.fo.FObj)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/fo/properties/FontFamilyProperty/Maker/make(org.apache.fop.fo.PropertyList,java.lang.String,org.apache.fop.fo.FObj)#java/lang/String/trim()
org/apache/fop/fo/properties/FontFamilyProperty/Maker/make(org.apache.fop.fo.PropertyList,java.lang.String,org.apache.fop.fo.FObj)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/fo/properties/FontFamilyProperty/Maker/make(org.apache.fop.fo.PropertyList,java.lang.String,org.apache.fop.fo.FObj)#java/lang/String/indexOf(java.lang.String)
org/apache/fop/fo/properties/FontFamilyProperty/Maker/make(org.apache.fop.fo.PropertyList,java.lang.String,org.apache.fop.fo.FObj)#java/lang/String/lastIndexOf(int)
org/apache/fop/fo/properties/FontFamilyProperty/Maker/make(org.apache.fop.fo.PropertyList,java.lang.String,org.apache.fop.fo.FObj)#java/lang/String/indexOf(int)
org/apache/fop/fo/properties/FontFamilyProperty/Maker/make(org.apache.fop.fo.PropertyList,java.lang.String,org.apache.fop.fo.FObj)#java/lang/StringBuilder/toString()
org/apache/fop/pdf/PDFImageXObject/output(java.io.OutputStream)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/pdf/PDFImageXObject/output(java.io.OutputStream)#org/apache/fop/pdf/PDFXObject/output(java.io.OutputStream)
org/apache/fop/pdf/PDFImageXObject/output(java.io.OutputStream)#org/apache/fop/pdf/PDFImageXObject/getDocument()
org/apache/fop/pdf/PDFImageXObject/output(java.io.OutputStream)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/pdf/PDFImageXObject/output(java.io.OutputStream)#java/util/UUID/nameUUIDFromBytes(byte[])
org/apache/fop/pdf/PDFImageXObject/output(java.io.OutputStream)#java/io/ByteArrayOutputStream/toByteArray()
org/apache/fop/pdf/PDFImageXObject/output(java.io.OutputStream)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/fop/pdf/PDFImageXObject/output(java.io.OutputStream)#java/io/ByteArrayOutputStream/ByteArrayOutputStream()
org/apache/fop/pdf/PDFImageXObject/output(java.io.OutputStream)#java/lang/StringBuilder/toString()
org/apache/fop/pdf/PDFImageXObject/output(java.io.OutputStream)#org/apache/fop/pdf/PDFImageXObject/put(java.lang.String,java.lang.Object)
org/apache/fop/hyphenation/SerializeHyphPattern/serializeFile(java.io.File,java.io.File)#java/io/ObjectOutputStream/writeObject(java.lang.Object)
org/apache/fop/hyphenation/SerializeHyphPattern/serializeFile(java.io.File,java.io.File)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/hyphenation/SerializeHyphPattern/serializeFile(java.io.File,java.io.File)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/hyphenation/SerializeHyphPattern/serializeFile(java.io.File,java.io.File)#java/io/PrintStream/println(java.lang.String)
org/apache/fop/hyphenation/SerializeHyphPattern/serializeFile(java.io.File,java.io.File)#java/io/ObjectOutputStream/ObjectOutputStream(java.io.OutputStream)
org/apache/fop/hyphenation/SerializeHyphPattern/serializeFile(java.io.File,java.io.File)#java/io/BufferedOutputStream/BufferedOutputStream(java.io.OutputStream)
org/apache/fop/hyphenation/SerializeHyphPattern/serializeFile(java.io.File,java.io.File)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/fop/hyphenation/SerializeHyphPattern/serializeFile(java.io.File,java.io.File)#java/io/PrintStream/println(java.lang.Object)
org/apache/fop/hyphenation/SerializeHyphPattern/serializeFile(java.io.File,java.io.File)#java/io/FileOutputStream/FileOutputStream(java.io.File)
org/apache/fop/hyphenation/SerializeHyphPattern/serializeFile(java.io.File,java.io.File)#java/lang/StringBuilder/toString()
org/apache/fop/hyphenation/SerializeHyphPattern/serializeFile(java.io.File,java.io.File)#java/io/ObjectOutputStream/close()
org/apache/fop/render/RendererContext/toString()#java/util/Iterator/hasNext()
org/apache/fop/render/RendererContext/toString()#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/render/RendererContext/toString()#java/util/Map/get(java.lang.Object)
org/apache/fop/render/RendererContext/toString()#java/lang/StringBuffer/toString()
org/apache/fop/render/RendererContext/toString()#java/lang/StringBuilder/StringBuilder()
org/apache/fop/render/RendererContext/toString()#java/util/Set/iterator()
org/apache/fop/render/RendererContext/toString()#java/lang/StringBuffer/StringBuffer(java.lang.String)
org/apache/fop/render/RendererContext/toString()#java/lang/StringBuilder/append(java.lang.Object)
org/apache/fop/render/RendererContext/toString()#java/lang/StringBuffer/append(java.lang.String)
org/apache/fop/render/RendererContext/toString()#java/lang/StringBuilder/toString()
org/apache/fop/render/RendererContext/toString()#java/util/Iterator/next()
org/apache/fop/render/RendererContext/toString()#java/util/Map/keySet()
org/apache/fop/layoutmgr/table/RowPainter/addAreaForEmptyGridUnit(org.apache.fop.fo.flow.table.EmptyGridUnit,int,int,int,int,int,boolean)#org/apache/fop/area/Block/setBPD(int)
org/apache/fop/layoutmgr/table/RowPainter/addAreaForEmptyGridUnit(org.apache.fop.fo.flow.table.EmptyGridUnit,int,int,int,int,int,boolean)#org/apache/fop/fo/flow/table/EmptyGridUnit/getBorderEnd()
org/apache/fop/layoutmgr/table/RowPainter/addAreaForEmptyGridUnit(org.apache.fop.fo.flow.table.EmptyGridUnit,int,int,int,int,int,boolean)#org/apache/fop/area/Block/setYOffset(int)
org/apache/fop/layoutmgr/table/RowPainter/addAreaForEmptyGridUnit(org.apache.fop.fo.flow.table.EmptyGridUnit,int,int,int,int,int,boolean)#org/apache/fop/fo/flow/table/EmptyGridUnit/getBorderAfter(int)
org/apache/fop/layoutmgr/table/RowPainter/addAreaForEmptyGridUnit(org.apache.fop.fo.flow.table.EmptyGridUnit,int,int,int,int,int,boolean)#org/apache/fop/area/Block/addTrait(java.lang.Integer,java.lang.Object)
org/apache/fop/layoutmgr/table/RowPainter/addAreaForEmptyGridUnit(org.apache.fop.fo.flow.table.EmptyGridUnit,int,int,int,int,int,boolean)#org/apache/fop/area/Block/setIPD(int)
org/apache/fop/layoutmgr/table/RowPainter/addAreaForEmptyGridUnit(org.apache.fop.fo.flow.table.EmptyGridUnit,int,int,int,int,int,boolean)#org/apache/fop/fo/properties/CommonBorderPaddingBackground$BorderInfo/getRetainedWidth()
org/apache/fop/layoutmgr/table/RowPainter/addAreaForEmptyGridUnit(org.apache.fop.fo.flow.table.EmptyGridUnit,int,int,int,int,int,boolean)#org/apache/fop/fo/flow/table/EmptyGridUnit/getBorderStart()
org/apache/fop/layoutmgr/table/RowPainter/addAreaForEmptyGridUnit(org.apache.fop.fo.flow.table.EmptyGridUnit,int,int,int,int,int,boolean)#org/apache/fop/fo/flow/table/EmptyGridUnit/getBorderBefore(int)
org/apache/fop/layoutmgr/table/RowPainter/addAreaForEmptyGridUnit(org.apache.fop.fo.flow.table.EmptyGridUnit,int,int,int,int,int,boolean)#org/apache/fop/area/Block/setXOffset(int)
org/apache/fop/layoutmgr/table/RowPainter/addAreasAndFlushRow(boolean,boolean)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/fop/layoutmgr/table/RowPainter/addAreasAndFlushRow(boolean,boolean)#java/lang/StringBuilder/append(int)
org/apache/fop/layoutmgr/table/RowPainter/addAreasAndFlushRow(boolean,boolean)#org/apache/commons/logging/Log/isDebugEnabled()
org/apache/fop/layoutmgr/table/RowPainter/addAreasAndFlushRow(boolean,boolean)#java/lang/AssertionError/AssertionError()
org/apache/fop/layoutmgr/table/RowPainter/addAreasAndFlushRow(boolean,boolean)#java/lang/StringBuilder/toString()
org/apache/fop/layoutmgr/table/RowPainter/addAreasAndFlushRow(boolean,boolean)#java/util/Arrays/fill(boolean[],int,int,boolean)
org/apache/fop/layoutmgr/table/RowPainter/addAreasAndFlushRow(boolean,boolean)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/layoutmgr/table/RowPainter/addAreasAndFlushRow(boolean,boolean)#java/lang/Math/max(int,int)
org/apache/fop/layoutmgr/table/RowPainter/addAreasAndFlushRow(boolean,boolean)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/layoutmgr/table/RowPainter/addAreasAndFlushRow(boolean,boolean)#java/util/List/clear()
org/apache/fop/layoutmgr/table/RowPainter/handleTableContentPosition(org.apache.fop.layoutmgr.table.TableContentPosition)#java/util/Iterator/hasNext()
org/apache/fop/layoutmgr/table/RowPainter/handleTableContentPosition(org.apache.fop.layoutmgr.table.TableContentPosition)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/layoutmgr/table/RowPainter/handleTableContentPosition(org.apache.fop.layoutmgr.table.TableContentPosition)#org/apache/commons/logging/Log/isDebugEnabled()
org/apache/fop/layoutmgr/table/RowPainter/handleTableContentPosition(org.apache.fop.layoutmgr.table.TableContentPosition)#java/util/Iterator/next()
org/apache/fop/layoutmgr/table/RowPainter/handleTableContentPosition(org.apache.fop.layoutmgr.table.TableContentPosition)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/layoutmgr/table/RowPainter/handleTableContentPosition(org.apache.fop.layoutmgr.table.TableContentPosition)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/fop/layoutmgr/table/RowPainter/handleTableContentPosition(org.apache.fop.layoutmgr.table.TableContentPosition)#java/util/List/iterator()
org/apache/fop/layoutmgr/table/RowPainter/handleTableContentPosition(org.apache.fop.layoutmgr.table.TableContentPosition)#java/lang/StringBuilder/toString()
org/apache/fop/layoutmgr/table/RowPainter/handleTableContentPosition(org.apache.fop.layoutmgr.table.TableContentPosition)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/fop/layoutmgr/table/RowPainter/handleTableContentPosition(org.apache.fop.layoutmgr.table.TableContentPosition)#java/lang/AssertionError/AssertionError()
org/apache/fop/render/afp/AFPSVGHandler/renderSVGDocument(org.apache.fop.render.RendererContext,org.w3c.dom.Document)#org/apache/fop/afp/AFPPaintingState/save()
org/apache/fop/render/afp/AFPSVGHandler/renderSVGDocument(org.apache.fop.render.RendererContext,org.w3c.dom.Document)#org/apache/fop/render/afp/AFPSVGHandler/buildGraphicsNode(org.apache.fop.apps.FOUserAgent,org.apache.batik.bridge.BridgeContext,org.w3c.dom.Document)
org/apache/fop/render/afp/AFPSVGHandler/renderSVGDocument(org.apache.fop.render.RendererContext,org.w3c.dom.Document)#org/apache/fop/render/afp/AFPSVGHandler/getDocumentURI(org.w3c.dom.Document)
org/apache/fop/render/afp/AFPSVGHandler/renderSVGDocument(org.apache.fop.render.RendererContext,org.w3c.dom.Document)#org/apache/fop/render/RendererContext$RendererContextWrapper/getCurrentXPosition()
org/apache/fop/render/afp/AFPSVGHandler/renderSVGDocument(org.apache.fop.render.RendererContext,org.w3c.dom.Document)#org/apache/fop/render/afp/AFPSVGHandler/getImageSize(org.apache.fop.render.RendererContext$RendererContextWrapper)
org/apache/fop/render/afp/AFPSVGHandler/renderSVGDocument(org.apache.fop.render.RendererContext,org.w3c.dom.Document)#org/apache/fop/afp/AFPGraphicsObjectInfo/setObjectAreaInfo(org.apache.fop.afp.AFPObjectAreaInfo)
org/apache/fop/render/afp/AFPSVGHandler/renderSVGDocument(org.apache.fop.render.RendererContext,org.w3c.dom.Document)#org/apache/fop/render/RendererContext$RendererContextWrapper/getCurrentYPosition()
org/apache/fop/render/afp/AFPSVGHandler/renderSVGDocument(org.apache.fop.render.RendererContext,org.w3c.dom.Document)#org/apache/fop/svg/SVGEventProducer$Provider/get(org.apache.fop.events.EventBroadcaster)
org/apache/fop/render/afp/AFPSVGHandler/renderSVGDocument(org.apache.fop.render.RendererContext,org.w3c.dom.Document)#org/apache/fop/afp/AFPPaintingState/restore()
org/apache/fop/fonts/type1/Type1SubsetFile/writeHeader(org.apache.fop.fonts.type1.PFBData,org.apache.fop.fonts.type1.PostscriptParser$PSElement)#java/lang/String/format(java.lang.String,java.lang.Object[])
org/apache/fop/fonts/type1/Type1SubsetFile/writeHeader(org.apache.fop.fonts.type1.PFBData,org.apache.fop.fonts.type1.PostscriptParser$PSElement)#java/util/Iterator/next()
org/apache/fop/fonts/type1/Type1SubsetFile/writeHeader(org.apache.fop.fonts.type1.PFBData,org.apache.fop.fonts.type1.PostscriptParser$PSElement)#org/apache/fop/fonts/type1/PostscriptParser$PSElement/getStartPoint()
org/apache/fop/fonts/type1/Type1SubsetFile/writeHeader(org.apache.fop.fonts.type1.PFBData,org.apache.fop.fonts.type1.PostscriptParser$PSElement)#java/io/ByteArrayOutputStream/write(byte[],int,int)
org/apache/fop/fonts/type1/Type1SubsetFile/writeHeader(org.apache.fop.fonts.type1.PFBData,org.apache.fop.fonts.type1.PostscriptParser$PSElement)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/fonts/type1/Type1SubsetFile/writeHeader(org.apache.fop.fonts.type1.PFBData,org.apache.fop.fonts.type1.PostscriptParser$PSElement)#java/util/Set/iterator()
org/apache/fop/fonts/type1/Type1SubsetFile/writeHeader(org.apache.fop.fonts.type1.PFBData,org.apache.fop.fonts.type1.PostscriptParser$PSElement)#java/lang/String/getBytes(java.lang.String)
org/apache/fop/fonts/type1/Type1SubsetFile/writeHeader(org.apache.fop.fonts.type1.PFBData,org.apache.fop.fonts.type1.PostscriptParser$PSElement)#java/util/Map$Entry/getValue()
org/apache/fop/fonts/type1/Type1SubsetFile/writeHeader(org.apache.fop.fonts.type1.PFBData,org.apache.fop.fonts.type1.PostscriptParser$PSElement)#java/io/ByteArrayOutputStream/ByteArrayOutputStream()
org/apache/fop/fonts/type1/Type1SubsetFile/writeHeader(org.apache.fop.fonts.type1.PFBData,org.apache.fop.fonts.type1.PostscriptParser$PSElement)#java/util/Map/entrySet()
org/apache/fop/fonts/type1/Type1SubsetFile/writeHeader(org.apache.fop.fonts.type1.PFBData,org.apache.fop.fonts.type1.PostscriptParser$PSElement)#java/lang/StringBuilder/toString()
org/apache/fop/fonts/type1/Type1SubsetFile/writeHeader(org.apache.fop.fonts.type1.PFBData,org.apache.fop.fonts.type1.PostscriptParser$PSElement)#java/util/Iterator/hasNext()
org/apache/fop/fonts/type1/Type1SubsetFile/writeHeader(org.apache.fop.fonts.type1.PFBData,org.apache.fop.fonts.type1.PostscriptParser$PSElement)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/fonts/type1/Type1SubsetFile/writeHeader(org.apache.fop.fonts.type1.PFBData,org.apache.fop.fonts.type1.PostscriptParser$PSElement)#java/util/Map$Entry/getKey()
org/apache/fop/fonts/type1/Type1SubsetFile/writeHeader(org.apache.fop.fonts.type1.PFBData,org.apache.fop.fonts.type1.PostscriptParser$PSElement)#java/io/ByteArrayOutputStream/write(byte[])
org/apache/fop/fonts/type1/Type1SubsetFile/writeHeader(org.apache.fop.fonts.type1.PFBData,org.apache.fop.fonts.type1.PostscriptParser$PSElement)#org/apache/fop/fonts/type1/PostscriptParser$PSElement/getEndPoint()
org/apache/fop/fonts/type1/Type1SubsetFile/readEncoding(org.apache.fop.fonts.type1.PostscriptParser$PSElement)#java/lang/Integer/intValue()
org/apache/fop/fonts/type1/Type1SubsetFile/readEncoding(org.apache.fop.fonts.type1.PostscriptParser$PSElement)#java/util/ArrayList/ArrayList()
org/apache/fop/fonts/type1/Type1SubsetFile/readEncoding(org.apache.fop.fonts.type1.PostscriptParser$PSElement)#java/util/Iterator/hasNext()
org/apache/fop/fonts/type1/Type1SubsetFile/readEncoding(org.apache.fop.fonts.type1.PostscriptParser$PSElement)#org/apache/commons/logging/Log/warn(java.lang.Object)
org/apache/fop/fonts/type1/Type1SubsetFile/readEncoding(org.apache.fop.fonts.type1.PostscriptParser$PSElement)#java/lang/String/format(java.lang.String,java.lang.Object[])
org/apache/fop/fonts/type1/Type1SubsetFile/readEncoding(org.apache.fop.fonts.type1.PostscriptParser$PSElement)#java/lang/String/equals(java.lang.Object)
org/apache/fop/fonts/type1/Type1SubsetFile/readEncoding(org.apache.fop.fonts.type1.PostscriptParser$PSElement)#java/util/List/clear()
org/apache/fop/fonts/type1/Type1SubsetFile/readEncoding(org.apache.fop.fonts.type1.PostscriptParser$PSElement)#java/util/List/add(java.lang.Object)
org/apache/fop/fonts/type1/Type1SubsetFile/readEncoding(org.apache.fop.fonts.type1.PostscriptParser$PSElement)#java/lang/Integer/valueOf(int)
org/apache/fop/fonts/type1/Type1SubsetFile/readEncoding(org.apache.fop.fonts.type1.PostscriptParser$PSElement)#java/util/List/iterator()
org/apache/fop/fonts/type1/Type1SubsetFile/readEncoding(org.apache.fop.fonts.type1.PostscriptParser$PSElement)#java/lang/StringBuilder/toString()
org/apache/fop/fonts/type1/Type1SubsetFile/readEncoding(org.apache.fop.fonts.type1.PostscriptParser$PSElement)#java/util/ArrayList/ArrayList(java.util.Collection)
org/apache/fop/fonts/type1/Type1SubsetFile/readEncoding(org.apache.fop.fonts.type1.PostscriptParser$PSElement)#org/apache/fop/fonts/type1/PostscriptParser$PSFixedArray/getEntries()
org/apache/fop/fonts/type1/Type1SubsetFile/readEncoding(org.apache.fop.fonts.type1.PostscriptParser$PSElement)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/fonts/type1/Type1SubsetFile/readEncoding(org.apache.fop.fonts.type1.PostscriptParser$PSElement)#java/lang/String/trim()
org/apache/fop/fonts/type1/Type1SubsetFile/readEncoding(org.apache.fop.fonts.type1.PostscriptParser$PSElement)#java/util/List/size()
org/apache/fop/fonts/type1/Type1SubsetFile/readEncoding(org.apache.fop.fonts.type1.PostscriptParser$PSElement)#org/apache/fop/fonts/type1/PostscriptParser$PSVariable/getValue()
org/apache/fop/fonts/type1/Type1SubsetFile/readEncoding(org.apache.fop.fonts.type1.PostscriptParser$PSElement)#java/util/Iterator/next()
org/apache/fop/fonts/type1/Type1SubsetFile/readEncoding(org.apache.fop.fonts.type1.PostscriptParser$PSElement)#java/util/Map/keySet()
org/apache/fop/fonts/type1/Type1SubsetFile/readEncoding(org.apache.fop.fonts.type1.PostscriptParser$PSElement)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/fonts/type1/Type1SubsetFile/readEncoding(org.apache.fop.fonts.type1.PostscriptParser$PSElement)#java/util/Collections/sort(java.util.List)
org/apache/fop/fonts/type1/Type1SubsetFile/searchEntries(java.util.HashMap,int)#java/lang/Integer/intValue()
org/apache/fop/fonts/type1/Type1SubsetFile/searchEntries(java.util.HashMap,int)#java/util/ArrayList/ArrayList()
org/apache/fop/fonts/type1/Type1SubsetFile/searchEntries(java.util.HashMap,int)#java/util/Iterator/hasNext()
org/apache/fop/fonts/type1/Type1SubsetFile/searchEntries(java.util.HashMap,int)#java/util/HashMap/entrySet()
org/apache/fop/fonts/type1/Type1SubsetFile/searchEntries(java.util.HashMap,int)#java/util/Map/get(java.lang.Object)
org/apache/fop/fonts/type1/Type1SubsetFile/searchEntries(java.util.HashMap,int)#java/util/Iterator/next()
org/apache/fop/fonts/type1/Type1SubsetFile/searchEntries(java.util.HashMap,int)#java/lang/String/equals(java.lang.Object)
org/apache/fop/fonts/type1/Type1SubsetFile/searchEntries(java.util.HashMap,int)#java/util/List/add(java.lang.Object)
org/apache/fop/fonts/type1/Type1SubsetFile/searchEntries(java.util.HashMap,int)#java/lang/Integer/valueOf(int)
org/apache/fop/fonts/type1/Type1SubsetFile/searchEntries(java.util.HashMap,int)#java/util/Map$Entry/getValue()
org/apache/fop/fonts/type1/Type1SubsetFile/searchEntries(java.util.HashMap,int)#java/util/Set/iterator()
org/apache/fop/fonts/type1/Type1SubsetFile/createSubset(org.apache.fop.fonts.SingleByteFont,boolean)#java/util/HashMap/clear()
org/apache/fop/fonts/type1/Type1SubsetFile/createSubset(org.apache.fop.fonts.SingleByteFont,boolean)#java/util/HashMap/HashMap()
org/apache/fop/fonts/type1/Type1SubsetFile/createSubset(org.apache.fop.fonts.SingleByteFont,boolean)#java/io/ByteArrayOutputStream/write(byte[])
org/apache/fop/fonts/type1/Type1SubsetFile/createSubset(org.apache.fop.fonts.SingleByteFont,boolean)#java/io/ByteArrayOutputStream/toByteArray()
org/apache/fop/fonts/type1/Type1SubsetFile/createSubset(org.apache.fop.fonts.SingleByteFont,boolean)#java/io/ByteArrayOutputStream/ByteArrayOutputStream()
org/apache/fop/fonts/type1/Type1SubsetFile/createSubset(org.apache.fop.fonts.SingleByteFont,boolean)#java/util/ArrayList/ArrayList()
org/apache/fop/fonts/type1/Type1SubsetFile/createSubset(org.apache.fop.fonts.SingleByteFont,boolean)#org/apache/fop/fonts/type1/Type1SubsetFile$BinaryCoder/encodeBytes(byte[],int,int)
org/apache/fop/fonts/type1/Type1SubsetFile/createSubset(org.apache.fop.fonts.SingleByteFont,boolean)#org/apache/fop/fonts/type1/PostscriptParser$PSElement/getFoundUnexpected()
org/apache/fop/fonts/type1/Type1SubsetFile/createSubset(org.apache.fop.fonts.SingleByteFont,boolean)#java/io/ByteArrayInputStream/ByteArrayInputStream(byte[])
org/apache/fop/fonts/type1/Type1SubsetFile/createSubset(org.apache.fop.fonts.SingleByteFont,boolean)#org/apache/fop/fonts/type1/Type1SubsetFile$BinaryCoder/decodeBytes(byte[],int,int)
org/apache/fop/fonts/type1/Type1SubsetFile/createSubset(org.apache.fop.fonts.SingleByteFont,boolean)#java/util/LinkedHashMap/clear()
org/apache/fop/fonts/type1/Type1SubsetFile/createSubset(org.apache.fop.fonts.SingleByteFont,boolean)#java/io/ByteArrayOutputStream/write(byte[],int,int)
org/apache/fop/fonts/type1/Type1SubsetFile/createSubset(org.apache.fop.fonts.SingleByteFont,boolean)#java/io/ByteArrayOutputStream/reset()
org/apache/fop/fonts/type1/Type1SubsetFile/createSubset(org.apache.fop.fonts.SingleByteFont,boolean)#java/util/List/clear()
org/apache/fop/fonts/type1/Type1SubsetFile/createSubset(org.apache.fop.fonts.SingleByteFont,boolean)#java/util/LinkedHashMap/LinkedHashMap()
org/apache/fop/fonts/type1/Type1SubsetFile/writeMainSection(byte[],java.util.List,org.apache.fop.fonts.type1.PostscriptParser$PSElement)#java/util/Iterator/hasNext()
org/apache/fop/fonts/type1/Type1SubsetFile/writeMainSection(byte[],java.util.List,org.apache.fop.fonts.type1.PostscriptParser$PSElement)#java/util/HashMap/entrySet()
org/apache/fop/fonts/type1/Type1SubsetFile/writeMainSection(byte[],java.util.List,org.apache.fop.fonts.type1.PostscriptParser$PSElement)#java/lang/String/format(java.lang.String,java.lang.Object[])
org/apache/fop/fonts/type1/Type1SubsetFile/writeMainSection(byte[],java.util.List,org.apache.fop.fonts.type1.PostscriptParser$PSElement)#java/util/Iterator/next()
org/apache/fop/fonts/type1/Type1SubsetFile/writeMainSection(byte[],java.util.List,org.apache.fop.fonts.type1.PostscriptParser$PSElement)#org/apache/fop/fonts/type1/PostscriptParser$PSElement/getStartPoint()
org/apache/fop/fonts/type1/Type1SubsetFile/writeMainSection(byte[],java.util.List,org.apache.fop.fonts.type1.PostscriptParser$PSElement)#java/io/ByteArrayOutputStream/write(byte[],int,int)
org/apache/fop/fonts/type1/Type1SubsetFile/writeMainSection(byte[],java.util.List,org.apache.fop.fonts.type1.PostscriptParser$PSElement)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/fonts/type1/Type1SubsetFile/writeMainSection(byte[],java.util.List,org.apache.fop.fonts.type1.PostscriptParser$PSElement)#java/util/Map$Entry/getValue()
org/apache/fop/fonts/type1/Type1SubsetFile/writeMainSection(byte[],java.util.List,org.apache.fop.fonts.type1.PostscriptParser$PSElement)#java/lang/StringBuilder/toString()
org/apache/fop/fonts/type1/Type1SubsetFile/writeMainSection(byte[],java.util.List,org.apache.fop.fonts.type1.PostscriptParser$PSElement)#java/util/LinkedHashMap/entrySet()
org/apache/fop/fonts/type1/Type1SubsetFile/writeMainSection(byte[],java.util.List,org.apache.fop.fonts.type1.PostscriptParser$PSElement)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/fonts/type1/Type1SubsetFile/writeMainSection(byte[],java.util.List,org.apache.fop.fonts.type1.PostscriptParser$PSElement)#java/util/Map$Entry/getKey()
org/apache/fop/fonts/type1/Type1SubsetFile/writeMainSection(byte[],java.util.List,org.apache.fop.fonts.type1.PostscriptParser$PSElement)#java/util/LinkedHashMap/size()
org/apache/fop/fonts/type1/Type1SubsetFile/writeMainSection(byte[],java.util.List,org.apache.fop.fonts.type1.PostscriptParser$PSElement)#java/util/Set/iterator()
org/apache/fop/fonts/type1/Type1SubsetFile/writeMainSection(byte[],java.util.List,org.apache.fop.fonts.type1.PostscriptParser$PSElement)#java/io/ByteArrayOutputStream/write(byte[])
org/apache/fop/fonts/type1/Type1SubsetFile/writeMainSection(byte[],java.util.List,org.apache.fop.fonts.type1.PostscriptParser$PSElement)#java/lang/Integer/valueOf(int)
org/apache/fop/fonts/type1/Type1SubsetFile/writeMainSection(byte[],java.util.List,org.apache.fop.fonts.type1.PostscriptParser$PSElement)#org/apache/fop/fonts/type1/PostscriptParser$PSElement/getEndPoint()
org/apache/fop/fonts/type1/Type1SubsetFile/writeMainSection(byte[],java.util.List,org.apache.fop.fonts.type1.PostscriptParser$PSElement)#java/util/HashMap/size()
org/apache/fop/fonts/type1/Type1SubsetFile/writeMainSection(byte[],java.util.List,org.apache.fop.fonts.type1.PostscriptParser$PSElement)#java/io/ByteArrayOutputStream/ByteArrayOutputStream()
org/apache/fop/fonts/type1/Type1SubsetFile/readMainSection(java.util.List,byte[],java.util.List,org.apache.fop.fonts.type1.PostscriptParser$PSElement)#org/apache/fop/fonts/SingleByteFont/getEmbedFileURI()
org/apache/fop/fonts/type1/Type1SubsetFile/readMainSection(java.util.List,byte[],java.util.List,org.apache.fop.fonts.type1.PostscriptParser$PSElement)#java/util/LinkedHashMap/get(java.lang.Object)
org/apache/fop/fonts/type1/Type1SubsetFile/readMainSection(java.util.List,byte[],java.util.List,org.apache.fop.fonts.type1.PostscriptParser$PSElement)#java/util/Iterator/hasNext()
org/apache/fop/fonts/type1/Type1SubsetFile/readMainSection(java.util.List,byte[],java.util.List,org.apache.fop.fonts.type1.PostscriptParser$PSElement)#org/apache/commons/logging/Log/warn(java.lang.Object)
org/apache/fop/fonts/type1/Type1SubsetFile/readMainSection(java.util.List,byte[],java.util.List,org.apache.fop.fonts.type1.PostscriptParser$PSElement)#java/net/URI/toString()
org/apache/fop/fonts/type1/Type1SubsetFile/readMainSection(java.util.List,byte[],java.util.List,org.apache.fop.fonts.type1.PostscriptParser$PSElement)#org/apache/fop/fonts/type1/Type1SubsetFile$BinaryCoder/decodeBytes(byte[],int,int)
org/apache/fop/fonts/type1/Type1SubsetFile/readMainSection(java.util.List,byte[],java.util.List,org.apache.fop.fonts.type1.PostscriptParser$PSElement)#org/apache/fop/fonts/type1/PostscriptParser$PSVariable/getValue()
org/apache/fop/fonts/type1/Type1SubsetFile/readMainSection(java.util.List,byte[],java.util.List,org.apache.fop.fonts.type1.PostscriptParser$PSElement)#java/util/Map/values()
org/apache/fop/fonts/type1/Type1SubsetFile/readMainSection(java.util.List,byte[],java.util.List,org.apache.fop.fonts.type1.PostscriptParser$PSElement)#java/lang/Integer/parseInt(java.lang.String)
org/apache/fop/fonts/type1/Type1SubsetFile/readMainSection(java.util.List,byte[],java.util.List,org.apache.fop.fonts.type1.PostscriptParser$PSElement)#java/util/List/add(java.lang.Object)
org/apache/fop/fonts/type1/Type1SubsetFile/readMainSection(java.util.List,byte[],java.util.List,org.apache.fop.fonts.type1.PostscriptParser$PSElement)#java/util/List/add(int,java.lang.Object)
org/apache/fop/fonts/type1/Type1SubsetFile/readMainSection(java.util.List,byte[],java.util.List,org.apache.fop.fonts.type1.PostscriptParser$PSElement)#java/util/Collection/iterator()
org/apache/fop/fonts/type1/Type1SubsetFile/readMainSection(java.util.List,byte[],java.util.List,org.apache.fop.fonts.type1.PostscriptParser$PSElement)#org/apache/fop/fonts/type1/Type1SubsetFile$BinaryCoder/encodeBytes(byte[],int,int)
org/apache/fop/fonts/type1/Type1SubsetFile/readMainSection(java.util.List,byte[],java.util.List,org.apache.fop.fonts.type1.PostscriptParser$PSElement)#java/lang/String/format(java.lang.String,java.lang.Object[])
org/apache/fop/fonts/type1/Type1SubsetFile/readMainSection(java.util.List,byte[],java.util.List,org.apache.fop.fonts.type1.PostscriptParser$PSElement)#java/util/Iterator/next()
org/apache/fop/fonts/type1/Type1SubsetFile/readMainSection(java.util.List,byte[],java.util.List,org.apache.fop.fonts.type1.PostscriptParser$PSElement)#java/util/HashMap/put(java.lang.Object,java.lang.Object)
org/apache/fop/fonts/type1/Type1SubsetFile/readMainSection(java.util.List,byte[],java.util.List,org.apache.fop.fonts.type1.PostscriptParser$PSElement)#java/lang/String/equals(java.lang.Object)
org/apache/fop/fonts/type1/Type1SubsetFile/readMainSection(java.util.List,byte[],java.util.List,org.apache.fop.fonts.type1.PostscriptParser$PSElement)#org/apache/fop/fonts/type1/PostscriptParser$PSDictionary/getBinaryEntries()
org/apache/fop/fonts/type1/Type1SubsetFile/createSubsetCharStrings(byte[],byte[],org.apache.fop.fonts.type1.PostscriptParser$PSFixedArray,java.util.List)#java/util/ArrayList/ArrayList()
org/apache/fop/fonts/type1/Type1SubsetFile/createSubsetCharStrings(byte[],byte[],org.apache.fop.fonts.type1.PostscriptParser$PSFixedArray,java.util.List)#java/util/LinkedHashMap/get(java.lang.Object)
org/apache/fop/fonts/type1/Type1SubsetFile/createSubsetCharStrings(byte[],byte[],org.apache.fop.fonts.type1.PostscriptParser$PSFixedArray,java.util.List)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/fonts/type1/Type1SubsetFile/createSubsetCharStrings(byte[],byte[],org.apache.fop.fonts.type1.PostscriptParser$PSFixedArray,java.util.List)#java/util/LinkedHashMap/put(java.lang.Object,java.lang.Object)
org/apache/fop/fonts/type1/Type1SubsetFile/createSubsetCharStrings(byte[],byte[],org.apache.fop.fonts.type1.PostscriptParser$PSFixedArray,java.util.List)#java/lang/String/format(java.lang.String,java.lang.Object[])
org/apache/fop/fonts/type1/Type1SubsetFile/createSubsetCharStrings(byte[],byte[],org.apache.fop.fonts.type1.PostscriptParser$PSFixedArray,java.util.List)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/fonts/type1/Type1SubsetFile/createSubsetCharStrings(byte[],byte[],org.apache.fop.fonts.type1.PostscriptParser$PSFixedArray,java.util.List)#java/util/List/add(java.lang.Object)
org/apache/fop/fonts/type1/Type1SubsetFile/createSubsetCharStrings(byte[],byte[],org.apache.fop.fonts.type1.PostscriptParser$PSFixedArray,java.util.List)#java/lang/StringBuilder/toString()
org/apache/fop/fonts/type1/Type1SubsetFile/createSubsetCharStrings(byte[],byte[],org.apache.fop.fonts.type1.PostscriptParser$PSFixedArray,java.util.List)#java/util/List/size()
org/apache/fop/fonts/type1/Type1SubsetFile/createSubsetCharStrings(byte[],byte[],org.apache.fop.fonts.type1.PostscriptParser$PSFixedArray,java.util.List)#org/apache/fop/fonts/type1/Type1SubsetFile$BytesNumber/getNumber()
org/apache/fop/fonts/type1/Type1SubsetFile/createSubsetCharStrings(byte[],byte[],org.apache.fop.fonts.type1.PostscriptParser$PSFixedArray,java.util.List)#java/util/List/clear()
org/apache/fop/fonts/type1/Type1SubsetFile/createSubsetCharStrings(byte[],byte[],org.apache.fop.fonts.type1.PostscriptParser$PSFixedArray,java.util.List)#java/lang/Integer/valueOf(int)
org/apache/fop/fonts/type1/Type1SubsetFile/createSubsetCharStrings(byte[],byte[],org.apache.fop.fonts.type1.PostscriptParser$PSFixedArray,java.util.List)#org/apache/fop/fonts/type1/Type1SubsetFile$BytesNumber/BytesNumber(int,int)
org/apache/fop/fonts/type1/Type1SubsetFile/createSubsetCharStrings(byte[],byte[],org.apache.fop.fonts.type1.PostscriptParser$PSFixedArray,java.util.List)#java/util/List/get(int)
org/apache/fop/fonts/type1/Type1SubsetFile/createSubsetCharStrings(byte[],byte[],org.apache.fop.fonts.type1.PostscriptParser$PSFixedArray,java.util.List)#org/apache/fop/fonts/type1/AdobeStandardEncoding/getCharFromCodePoint(int)
org/apache/fop/fonts/type1/Type1SubsetFile/findVariable(byte[],java.util.List,java.lang.String[],java.lang.String)#java/util/Iterator/hasNext()
org/apache/fop/fonts/type1/Type1SubsetFile/findVariable(byte[],java.util.List,java.lang.String[],java.lang.String)#org/apache/fop/fonts/type1/PostscriptParser$PSElement/getOperator()
org/apache/fop/fonts/type1/Type1SubsetFile/findVariable(byte[],java.util.List,java.lang.String[],java.lang.String)#java/lang/String/trim()
org/apache/fop/fonts/type1/Type1SubsetFile/findVariable(byte[],java.util.List,java.lang.String[],java.lang.String)#java/lang/String/length()
org/apache/fop/fonts/type1/Type1SubsetFile/findVariable(byte[],java.util.List,java.lang.String[],java.lang.String)#java/lang/String/String(byte[],java.lang.String)
org/apache/fop/fonts/type1/Type1SubsetFile/findVariable(byte[],java.util.List,java.lang.String[],java.lang.String)#java/util/Iterator/next()
org/apache/fop/fonts/type1/Type1SubsetFile/findVariable(byte[],java.util.List,java.lang.String[],java.lang.String)#org/apache/fop/fonts/type1/PostscriptParser$PSElement/getStartPoint()
org/apache/fop/fonts/type1/Type1SubsetFile/findVariable(byte[],java.util.List,java.lang.String[],java.lang.String)#java/lang/String/equals(java.lang.Object)
org/apache/fop/fonts/type1/Type1SubsetFile/findVariable(byte[],java.util.List,java.lang.String[],java.lang.String)#java/lang/String/substring(int,int)
org/apache/fop/fonts/type1/Type1SubsetFile/findVariable(byte[],java.util.List,java.lang.String[],java.lang.String)#org/apache/fop/fonts/type1/PostscriptParser$PSElement/getEndPoint()
org/apache/fop/fonts/type1/Type1SubsetFile/findVariable(byte[],java.util.List,java.lang.String[],java.lang.String)#java/util/List/iterator()
org/apache/fop/fonts/type1/Type1SubsetFile/findVariable(byte[],java.util.List,java.lang.String[],java.lang.String)#java/lang/System/arraycopy(java.lang.Object,int,java.lang.Object,int,int)
org/apache/fop/fonts/type1/Type1SubsetFile/readVariableContents(java.lang.String)#java/lang/Integer/intValue()
org/apache/fop/fonts/type1/Type1SubsetFile/readVariableContents(java.lang.String)#java/util/ArrayList/ArrayList()
org/apache/fop/fonts/type1/Type1SubsetFile/readVariableContents(java.lang.String)#java/lang/String/charAt(int)
org/apache/fop/fonts/type1/Type1SubsetFile/readVariableContents(java.lang.String)#java/lang/String/length()
org/apache/fop/fonts/type1/Type1SubsetFile/readVariableContents(java.lang.String)#java/util/List/size()
org/apache/fop/fonts/type1/Type1SubsetFile/readVariableContents(java.lang.String)#java/lang/String/substring(int,int)
org/apache/fop/fonts/type1/Type1SubsetFile/readVariableContents(java.lang.String)#java/lang/String/concat(java.lang.String)
org/apache/fop/fonts/type1/Type1SubsetFile/readVariableContents(java.lang.String)#java/util/List/add(java.lang.Object)
org/apache/fop/fonts/type1/Type1SubsetFile/readVariableContents(java.lang.String)#java/lang/Integer/valueOf(int)
org/apache/fop/fonts/type1/Type1SubsetFile/readVariableContents(java.lang.String)#java/util/List/get(int)
org/apache/fop/pdf/PDFOutputIntent/toPDF()#org/apache/commons/io/output/ByteArrayOutputStream/write(byte[])
org/apache/fop/pdf/PDFOutputIntent/toPDF()#java/lang/StringBuilder/StringBuilder()
org/apache/fop/pdf/PDFOutputIntent/toPDF()#org/apache/fop/pdf/PDFOutputIntent/encodeText(java.lang.String)
org/apache/fop/pdf/PDFOutputIntent/toPDF()#org/apache/commons/io/IOUtils/closeQuietly(java.io.OutputStream)
org/apache/fop/pdf/PDFOutputIntent/toPDF()#org/apache/commons/logging/Log/error(java.lang.Object,java.lang.Throwable)
org/apache/fop/pdf/PDFOutputIntent/toPDF()#org/apache/fop/pdf/PDFICCStream/referencePDF()
org/apache/fop/pdf/PDFOutputIntent/toPDF()#java/lang/StringBuilder/toString()
org/apache/fop/pdf/PDFOutputIntent/toPDF()#org/apache/fop/pdf/PDFOutputIntent/encode(java.lang.String)
org/apache/fop/pdf/PDFOutputIntent/toPDF()#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/pdf/PDFOutputIntent/toPDF()#org/apache/commons/io/output/ByteArrayOutputStream/toByteArray()
org/apache/fop/pdf/PDFOutputIntent/toPDF()#org/apache/commons/io/output/ByteArrayOutputStream/ByteArrayOutputStream(int)
org/apache/fop/render/pdf/PDFRenderingUtil/populateArray(org.apache.fop.pdf.PDFArray,java.util.List)#org/apache/fop/render/pdf/extensions/PDFCollectionEntryExtension/getValueAsBoolean()
org/apache/fop/render/pdf/PDFRenderingUtil/populateArray(org.apache.fop.pdf.PDFArray,java.util.List)#java/util/Iterator/hasNext()
org/apache/fop/render/pdf/PDFRenderingUtil/populateArray(org.apache.fop.pdf.PDFArray,java.util.List)#org/apache/fop/render/pdf/extensions/PDFCollectionEntryExtension/getValueAsNumber()
org/apache/fop/render/pdf/PDFRenderingUtil/populateArray(org.apache.fop.pdf.PDFArray,java.util.List)#org/apache/fop/render/pdf/extensions/PDFCollectionEntryExtension/getValueAsString()
org/apache/fop/render/pdf/PDFRenderingUtil/populateArray(org.apache.fop.pdf.PDFArray,java.util.List)#org/apache/fop/render/pdf/extensions/PDFCollectionEntryExtension/getType()
org/apache/fop/render/pdf/PDFRenderingUtil/populateArray(org.apache.fop.pdf.PDFArray,java.util.List)#java/util/List/iterator()
org/apache/fop/render/pdf/PDFRenderingUtil/populateArray(org.apache.fop.pdf.PDFArray,java.util.List)#java/lang/AssertionError/AssertionError()
org/apache/fop/render/pdf/PDFRenderingUtil/populateArray(org.apache.fop.pdf.PDFArray,java.util.List)#org/apache/fop/render/pdf/extensions/PDFCollectionEntryExtension/getValue()
org/apache/fop/render/pdf/PDFRenderingUtil/populateArray(org.apache.fop.pdf.PDFArray,java.util.List)#java/util/Iterator/next()
org/apache/fop/render/pdf/PDFRenderingUtil/setupPDFDocument(java.io.OutputStream)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/fop/render/pdf/PDFRenderingUtil/setupPDFDocument(java.io.OutputStream)#java/lang/Boolean/booleanValue()
org/apache/fop/render/pdf/PDFRenderingUtil/setupPDFDocument(java.io.OutputStream)#java/lang/StringBuilder/toString()
org/apache/fop/render/pdf/PDFRenderingUtil/setupPDFDocument(java.io.OutputStream)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/apache/fop/render/pdf/PDFRenderingUtil/setupPDFDocument(java.io.OutputStream)#org/apache/commons/logging/Log/warn(java.lang.Object)
org/apache/fop/render/pdf/PDFRenderingUtil/setupPDFDocument(java.io.OutputStream)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/render/pdf/PDFRenderingUtil/setupPDFDocument(java.io.OutputStream)#org/apache/fop/pdf/PDFAMode/isEnabled()
org/apache/fop/render/pdf/PDFRenderingUtil/setupPDFDocument(java.io.OutputStream)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/render/pdf/PDFRenderingUtil/setupPDFDocument(java.io.OutputStream)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/fop/render/pdf/PDFRenderingUtil/renderDictionaryExtension(org.apache.fop.render.pdf.extensions.PDFDictionaryExtension,org.apache.fop.pdf.PDFPage)#org/apache/fop/pdf/PDFPage/get(java.lang.String)
org/apache/fop/render/pdf/PDFRenderingUtil/renderDictionaryExtension(org.apache.fop.render.pdf.extensions.PDFDictionaryExtension,org.apache.fop.pdf.PDFPage)#java/util/Iterator/hasNext()
org/apache/fop/render/pdf/PDFRenderingUtil/renderDictionaryExtension(org.apache.fop.render.pdf.extensions.PDFDictionaryExtension,org.apache.fop.pdf.PDFPage)#java/lang/IllegalStateException/IllegalStateException()
org/apache/fop/render/pdf/PDFRenderingUtil/renderDictionaryExtension(org.apache.fop.render.pdf.extensions.PDFDictionaryExtension,org.apache.fop.pdf.PDFPage)#org/apache/xmlgraphics/util/DateFormatUtil/formatPDFDate(java.util.Date,java.util.TimeZone)
org/apache/fop/render/pdf/PDFRenderingUtil/renderDictionaryExtension(org.apache.fop.render.pdf.extensions.PDFDictionaryExtension,org.apache.fop.pdf.PDFPage)#org/apache/fop/pdf/PDFPage/put(java.lang.String,java.lang.Object)
org/apache/fop/render/pdf/PDFRenderingUtil/renderDictionaryExtension(org.apache.fop.render.pdf.extensions.PDFDictionaryExtension,org.apache.fop.pdf.PDFPage)#org/apache/fop/render/pdf/extensions/PDFCollectionEntryExtension/getValueAsString()
org/apache/fop/render/pdf/PDFRenderingUtil/renderDictionaryExtension(org.apache.fop.render.pdf.extensions.PDFDictionaryExtension,org.apache.fop.pdf.PDFPage)#java/util/Iterator/next()
org/apache/fop/render/pdf/PDFRenderingUtil/renderDictionaryExtension(org.apache.fop.render.pdf.extensions.PDFDictionaryExtension,org.apache.fop.pdf.PDFPage)#java/util/TimeZone/getDefault()
org/apache/fop/render/pdf/PDFRenderingUtil/renderDictionaryExtension(org.apache.fop.render.pdf.extensions.PDFDictionaryExtension,org.apache.fop.pdf.PDFPage)#java/util/Date/Date()
org/apache/fop/render/pdf/PDFRenderingUtil/renderDictionaryExtension(org.apache.fop.render.pdf.extensions.PDFDictionaryExtension,org.apache.fop.pdf.PDFPage)#java/util/List/iterator()
org/apache/fop/render/pdf/PDFRenderingUtil/renderDictionaryExtension(org.apache.fop.render.pdf.extensions.PDFDictionaryExtension,org.apache.fop.pdf.PDFPage)#java/lang/AssertionError/AssertionError()
org/apache/fop/render/pdf/PDFRenderingUtil/augmentDictionary(org.apache.fop.pdf.PDFDictionary,org.apache.fop.render.pdf.extensions.PDFDictionaryExtension)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/apache/fop/render/pdf/PDFRenderingUtil/augmentDictionary(org.apache.fop.pdf.PDFDictionary,org.apache.fop.render.pdf.extensions.PDFDictionaryExtension)#java/util/Iterator/hasNext()
org/apache/fop/render/pdf/PDFRenderingUtil/augmentDictionary(org.apache.fop.pdf.PDFDictionary,org.apache.fop.render.pdf.extensions.PDFDictionaryExtension)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/render/pdf/PDFRenderingUtil/augmentDictionary(org.apache.fop.pdf.PDFDictionary,org.apache.fop.render.pdf.extensions.PDFDictionaryExtension)#java/util/Iterator/next()
org/apache/fop/render/pdf/PDFRenderingUtil/augmentDictionary(org.apache.fop.pdf.PDFDictionary,org.apache.fop.render.pdf.extensions.PDFDictionaryExtension)#java/lang/String/isEmpty()
org/apache/fop/render/pdf/PDFRenderingUtil/augmentDictionary(org.apache.fop.pdf.PDFDictionary,org.apache.fop.render.pdf.extensions.PDFDictionaryExtension)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/render/pdf/PDFRenderingUtil/augmentDictionary(org.apache.fop.pdf.PDFDictionary,org.apache.fop.render.pdf.extensions.PDFDictionaryExtension)#java/util/List/iterator()
org/apache/fop/render/pdf/PDFRenderingUtil/augmentDictionary(org.apache.fop.pdf.PDFDictionary,org.apache.fop.render.pdf.extensions.PDFDictionaryExtension)#java/lang/StringBuilder/toString()
org/apache/fop/render/pdf/PDFRenderingUtil/augmentDictionary(org.apache.fop.pdf.PDFDictionary,org.apache.fop.render.pdf.extensions.PDFDictionaryExtension)#java/lang/String/split(java.lang.String)
org/apache/fop/render/pdf/PDFRenderingUtil/populateDictionary(org.apache.fop.pdf.PDFDictionary,java.util.List)#org/apache/fop/render/pdf/extensions/PDFCollectionEntryExtension/getValueAsBoolean()
org/apache/fop/render/pdf/PDFRenderingUtil/populateDictionary(org.apache.fop.pdf.PDFDictionary,java.util.List)#java/util/Iterator/hasNext()
org/apache/fop/render/pdf/PDFRenderingUtil/populateDictionary(org.apache.fop.pdf.PDFDictionary,java.util.List)#org/apache/fop/render/pdf/extensions/PDFCollectionEntryExtension/getValueAsNumber()
org/apache/fop/render/pdf/PDFRenderingUtil/populateDictionary(org.apache.fop.pdf.PDFDictionary,java.util.List)#org/apache/fop/render/pdf/extensions/PDFCollectionEntryExtension/getValueAsString()
org/apache/fop/render/pdf/PDFRenderingUtil/populateDictionary(org.apache.fop.pdf.PDFDictionary,java.util.List)#org/apache/fop/render/pdf/extensions/PDFCollectionEntryExtension/getType()
org/apache/fop/render/pdf/PDFRenderingUtil/populateDictionary(org.apache.fop.pdf.PDFDictionary,java.util.List)#java/util/List/iterator()
org/apache/fop/render/pdf/PDFRenderingUtil/populateDictionary(org.apache.fop.pdf.PDFDictionary,java.util.List)#java/lang/AssertionError/AssertionError()
org/apache/fop/render/pdf/PDFRenderingUtil/populateDictionary(org.apache.fop.pdf.PDFDictionary,java.util.List)#org/apache/fop/render/pdf/extensions/PDFCollectionEntryExtension/getValue()
org/apache/fop/render/pdf/PDFRenderingUtil/populateDictionary(org.apache.fop.pdf.PDFDictionary,java.util.List)#java/util/Iterator/next()
org/apache/fop/complexscripts/fonts/GlyphTable/ChainedGlyphSequenceRule/toString()#org/apache/fop/complexscripts/fonts/GlyphTable$ChainedGlyphSequenceRule/getLookups()
org/apache/fop/complexscripts/fonts/GlyphTable/ChainedGlyphSequenceRule/toString()#org/apache/fop/complexscripts/fonts/GlyphTable$ChainedGlyphSequenceRule/getGlyphs()
org/apache/fop/complexscripts/fonts/GlyphTable/ChainedGlyphSequenceRule/toString()#java/lang/StringBuffer/toString()
org/apache/fop/complexscripts/fonts/GlyphTable/ChainedGlyphSequenceRule/toString()#java/lang/StringBuilder/StringBuilder()
org/apache/fop/complexscripts/fonts/GlyphTable/ChainedGlyphSequenceRule/toString()#java/util/Arrays/toString(int[])
org/apache/fop/complexscripts/fonts/GlyphTable/ChainedGlyphSequenceRule/toString()#java/lang/StringBuffer/append(java.lang.String)
org/apache/fop/complexscripts/fonts/GlyphTable/ChainedGlyphSequenceRule/toString()#java/lang/StringBuffer/StringBuffer()
org/apache/fop/complexscripts/fonts/GlyphTable/ChainedGlyphSequenceRule/toString()#java/lang/StringBuilder/toString()
org/apache/fop/complexscripts/fonts/GlyphTable/ChainedGlyphSequenceRule/toString()#java/util/Arrays/toString(java.lang.Object[])
org/apache/fop/complexscripts/fonts/GlyphTable/ChainedGlyphSequenceRule/toString()#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/complexscripts/fonts/GlyphPositioningTable/SingleSubtableFormat1/populate(java.util.List)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/complexscripts/fonts/GlyphPositioningTable/SingleSubtableFormat1/populate(java.util.List)#org/apache/fop/complexscripts/fonts/GlyphPositioningTable$SingleSubtableFormat1/getCoverageSize()
org/apache/fop/complexscripts/fonts/GlyphPositioningTable/SingleSubtableFormat1/populate(java.util.List)#java/util/List/size()
org/apache/fop/complexscripts/fonts/GlyphPositioningTable/SingleSubtableFormat1/populate(java.util.List)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/complexscripts/fonts/GlyphPositioningTable/SingleSubtableFormat1/populate(java.util.List)#java/util/List/get(int)
org/apache/fop/complexscripts/fonts/GlyphPositioningTable/SingleSubtableFormat1/populate(java.util.List)#java/lang/AssertionError/AssertionError()
org/apache/fop/complexscripts/fonts/GlyphPositioningTable/SingleSubtableFormat1/populate(java.util.List)#java/lang/StringBuilder/toString()
org/apache/fop/complexscripts/fonts/GlyphPositioningTable/SingleSubtableFormat1/populate(java.util.List)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/fop/complexscripts/fonts/GlyphPositioningTable/SingleSubtableFormat1/populate(java.util.List)#java/lang/Object/getClass()
org/apache/fop/fo/flow/table/Table/validateChildNode(org.xml.sax.Locator,java.lang.String,java.lang.String)#org/apache/fop/fo/flow/table/Table/getName()
org/apache/fop/fo/flow/table/Table/validateChildNode(org.xml.sax.Locator,java.lang.String,java.lang.String)#org/apache/fop/fo/flow/table/Table/nodesOutOfOrderError(org.xml.sax.Locator,java.lang.String,java.lang.String)
org/apache/fop/fo/flow/table/Table/validateChildNode(org.xml.sax.Locator,java.lang.String,java.lang.String)#org/apache/fop/fo/flow/table/Table/invalidChildError(org.xml.sax.Locator,java.lang.String,java.lang.String)
org/apache/fop/fo/flow/table/Table/validateChildNode(org.xml.sax.Locator,java.lang.String,java.lang.String)#org/apache/fop/fo/flow/table/Table/nodesOutOfOrderError(org.xml.sax.Locator,java.lang.String,java.lang.String,boolean)
org/apache/fop/fo/flow/table/Table/validateChildNode(org.xml.sax.Locator,java.lang.String,java.lang.String)#org/apache/fop/fo/flow/table/Table/getLocator()
org/apache/fop/fo/flow/table/Table/validateChildNode(org.xml.sax.Locator,java.lang.String,java.lang.String)#org/apache/fop/fo/flow/table/Table/getUserAgent()
org/apache/fop/fo/flow/table/Table/validateChildNode(org.xml.sax.Locator,java.lang.String,java.lang.String)#org/apache/fop/fo/flow/table/Table/tooManyNodesError(org.xml.sax.Locator,java.lang.String)
org/apache/fop/fo/flow/table/Table/validateChildNode(org.xml.sax.Locator,java.lang.String,java.lang.String)#org/apache/fop/fo/flow/table/TableEventProducer$Provider/get(org.apache.fop.events.EventBroadcaster)
org/apache/fop/fo/flow/table/Table/validateChildNode(org.xml.sax.Locator,java.lang.String,java.lang.String)#java/lang/String/equals(java.lang.Object)
org/apache/fop/render/intermediate/IFParser/Handler/getForeignAttributes(org.xml.sax.Attributes)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/fop/render/intermediate/IFParser/Handler/getForeignAttributes(org.xml.sax.Attributes)#org/xml/sax/Attributes/getQName(int)
org/apache/fop/render/intermediate/IFParser/Handler/getForeignAttributes(org.xml.sax.Attributes)#java/lang/String/length()
org/apache/fop/render/intermediate/IFParser/Handler/getForeignAttributes(org.xml.sax.Attributes)#java/util/Set/contains(java.lang.Object)
org/apache/fop/render/intermediate/IFParser/Handler/getForeignAttributes(org.xml.sax.Attributes)#org/xml/sax/Attributes/getURI(int)
org/apache/fop/render/intermediate/IFParser/Handler/getForeignAttributes(org.xml.sax.Attributes)#org/xml/sax/Attributes/getLength()
org/apache/fop/render/intermediate/IFParser/Handler/getForeignAttributes(org.xml.sax.Attributes)#org/apache/xmlgraphics/util/QName/QName(java.lang.String,java.lang.String)
org/apache/fop/render/intermediate/IFParser/Handler/getForeignAttributes(org.xml.sax.Attributes)#org/xml/sax/Attributes/getValue(int)
org/apache/fop/render/intermediate/IFParser/Handler/getForeignAttributes(org.xml.sax.Attributes)#java/util/HashMap/HashMap()
org/apache/fop/render/intermediate/IFParser/Handler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#org/xml/sax/helpers/DefaultHandler/DefaultHandler()
org/apache/fop/render/intermediate/IFParser/Handler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#org/xml/sax/ContentHandler/startDocument()
org/apache/fop/render/intermediate/IFParser/Handler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#org/xml/sax/helpers/AttributesImpl/AttributesImpl(org.xml.sax.Attributes)
org/apache/fop/render/intermediate/IFParser/Handler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#org/xml/sax/SAXException/SAXException(java.lang.String)
org/apache/fop/render/intermediate/IFParser/Handler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#org/apache/commons/logging/Log/warn(java.lang.Object)
org/apache/fop/render/intermediate/IFParser/Handler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/render/intermediate/IFParser/Handler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#org/apache/fop/accessibility/AccessibilityEventProducer$Provider/get(org.apache.fop.events.EventBroadcaster)
org/apache/fop/render/intermediate/IFParser/Handler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#java/lang/String/equals(java.lang.Object)
org/apache/fop/render/intermediate/IFParser/Handler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#org/apache/fop/render/intermediate/IFParser$Handler/startIFElement(java.lang.String,org.xml.sax.Attributes)
org/apache/fop/render/intermediate/IFParser/Handler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#org/apache/fop/render/intermediate/IFParser$Handler/getLanguage(org.xml.sax.Attributes)
org/apache/fop/render/intermediate/IFParser/Handler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#org/xml/sax/Attributes/getValue(java.lang.String)
org/apache/fop/render/intermediate/IFParser/Handler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#java/lang/String/length()
org/apache/fop/render/intermediate/IFParser/Handler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/render/intermediate/IFParser/Handler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#org/apache/fop/render/intermediate/IFParser$Handler$StructureTreeHandler/startStructureTree(java.lang.String)
org/apache/fop/render/intermediate/IFParser/Handler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#org/xml/sax/ContentHandler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)
org/apache/fop/render/intermediate/IFParser/Handler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#org/apache/fop/render/intermediate/IFParser$Handler$MainStructureTreeHandler/MainStructureTreeHandler(org.apache.fop.render.intermediate.IFParser$Handler,org.apache.fop.accessibility.StructureTreeEventHandler,java.util.Locale)
org/apache/fop/render/intermediate/IFParser/Handler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#java/lang/StringBuilder/toString()
org/apache/fop/render/intermediate/IFParser/Handler/endElement(java.lang.String,java.lang.String,java.lang.String)#org/apache/fop/render/intermediate/IFParser$Handler/handleExternallyGeneratedObject(java.lang.Object)
org/apache/fop/render/intermediate/IFParser/Handler/endElement(java.lang.String,java.lang.String,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/render/intermediate/IFParser/Handler/endElement(java.lang.String,java.lang.String,java.lang.String)#java/util/Map/get(java.lang.Object)
org/apache/fop/render/intermediate/IFParser/Handler/endElement(java.lang.String,java.lang.String,java.lang.String)#org/xml/sax/ContentHandler/endElement(java.lang.String,java.lang.String,java.lang.String)
org/apache/fop/render/intermediate/IFParser/Handler/endElement(java.lang.String,java.lang.String,java.lang.String)#java/lang/String/equals(java.lang.Object)
org/apache/fop/render/intermediate/IFParser/Handler/endElement(java.lang.String,java.lang.String,java.lang.String)#org/apache/fop/render/intermediate/IFParser$Handler$ElementHandler/endElement()
org/apache/fop/render/intermediate/IFParser/Handler/endElement(java.lang.String,java.lang.String,java.lang.String)#org/apache/fop/render/intermediate/IFParser$Handler/handleIFException(org.apache.fop.render.intermediate.IFException)
org/apache/fop/render/intermediate/IFParser/Handler/endElement(java.lang.String,java.lang.String,java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/render/intermediate/IFParser/Handler/endElement(java.lang.String,java.lang.String,java.lang.String)#org/apache/commons/logging/Log/trace(java.lang.Object)
org/apache/fop/render/intermediate/IFParser/Handler/endElement(java.lang.String,java.lang.String,java.lang.String)#org/apache/fop/util/ContentHandlerFactory$ObjectSource/getObject()
org/apache/fop/render/intermediate/IFParser/Handler/endElement(java.lang.String,java.lang.String,java.lang.String)#org/xml/sax/ContentHandler/endDocument()
org/apache/fop/render/intermediate/IFParser/Handler/endElement(java.lang.String,java.lang.String,java.lang.String)#org/apache/commons/logging/Log/isTraceEnabled()
org/apache/fop/render/intermediate/IFParser/Handler/endElement(java.lang.String,java.lang.String,java.lang.String)#java/lang/StringBuilder/toString()
org/apache/fop/render/intermediate/IFParser/Handler/endElement(java.lang.String,java.lang.String,java.lang.String)#java/lang/StringBuffer/setLength(int)
org/apache/fop/area/AreaTreeParser/Handler/WordMaker/endElement()#org/xml/sax/Attributes/getValue(java.lang.String)
org/apache/fop/area/AreaTreeParser/Handler/WordMaker/endElement()#java/lang/String/trim()
org/apache/fop/area/AreaTreeParser/Handler/WordMaker/endElement()#org/apache/fop/area/AreaTreeParser$Handler/access$5400(org.apache.fop.area.AreaTreeParser$Handler)
org/apache/fop/area/AreaTreeParser/Handler/WordMaker/endElement()#org/apache/fop/area/AreaTreeParser$Handler/access$5600(org.apache.fop.area.AreaTreeParser$Handler)
org/apache/fop/area/AreaTreeParser/Handler/WordMaker/endElement()#org/apache/fop/area/AreaTreeParser$Handler/access$5700(org.apache.fop.area.AreaTreeParser$Handler)
org/apache/fop/area/AreaTreeParser/Handler/WordMaker/endElement()#java/nio/CharBuffer/toString()
org/apache/fop/area/AreaTreeParser/Handler/WordMaker/endElement()#org/apache/fop/area/inline/WordArea/setParentArea(org.apache.fop.area.Area)
org/apache/fop/area/AreaTreeParser/Handler/WordMaker/endElement()#org/apache/fop/area/inline/AbstractTextArea/addChildArea(org.apache.fop.area.Area)
org/apache/fop/area/AreaTreeParser/Handler/WordMaker/endElement()#java/nio/CharBuffer/flip()
org/apache/fop/hyphenation/Hyphenator/getUserHyphenationTree(java.lang.String,org.apache.fop.apps.io.InternalResourceResolver)#org/apache/commons/logging/Log/debug(java.lang.Object,java.lang.Throwable)
org/apache/fop/hyphenation/Hyphenator/getUserHyphenationTree(java.lang.String,org.apache.fop.apps.io.InternalResourceResolver)#org/apache/fop/hyphenation/HyphenationException/getMessage()
org/apache/fop/hyphenation/Hyphenator/getUserHyphenationTree(java.lang.String,org.apache.fop.apps.io.InternalResourceResolver)#org/apache/commons/io/IOUtils/closeQuietly(java.io.InputStream)
org/apache/fop/hyphenation/Hyphenator/getUserHyphenationTree(java.lang.String,org.apache.fop.apps.io.InternalResourceResolver)#org/apache/commons/logging/Log/isDebugEnabled()
org/apache/fop/hyphenation/Hyphenator/getUserHyphenationTree(java.lang.String,org.apache.fop.apps.io.InternalResourceResolver)#org/xml/sax/InputSource/InputSource(java.io.InputStream)
org/apache/fop/hyphenation/Hyphenator/getUserHyphenationTree(java.lang.String,org.apache.fop.apps.io.InternalResourceResolver)#org/xml/sax/InputSource/setSystemId(java.lang.String)
org/apache/fop/hyphenation/Hyphenator/getUserHyphenationTree(java.lang.String,org.apache.fop.apps.io.InternalResourceResolver)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/hyphenation/Hyphenator/getUserHyphenationTree(java.lang.String,org.apache.fop.apps.io.InternalResourceResolver)#org/apache/commons/logging/Log/error(java.lang.Object)
org/apache/fop/hyphenation/Hyphenator/getUserHyphenationTree(java.lang.String,org.apache.fop.apps.io.InternalResourceResolver)#java/lang/StringBuilder/toString()
org/apache/fop/hyphenation/Hyphenator/getUserHyphenationTree(java.lang.String,org.apache.fop.apps.io.InternalResourceResolver)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/hyphenation/Hyphenator/getUserHyphenationTree(java.lang.String,org.apache.fop.apps.io.InternalResourceResolver)#java/io/PrintStream/println(java.lang.String)
org/apache/fop/render/ps/FontResourceCache/getPostScriptNameForFontKey(java.lang.String)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/apache/fop/render/ps/FontResourceCache/getPostScriptNameForFontKey(java.lang.String)#org/apache/fop/fonts/Typeface/getEmbedFontName()
org/apache/fop/render/ps/FontResourceCache/getPostScriptNameForFontKey(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/render/ps/FontResourceCache/getPostScriptNameForFontKey(java.lang.String)#java/util/Map/get(java.lang.Object)
org/apache/fop/render/ps/FontResourceCache/getPostScriptNameForFontKey(java.lang.String)#java/lang/String/substring(int,int)
org/apache/fop/render/ps/FontResourceCache/getPostScriptNameForFontKey(java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/render/ps/FontResourceCache/getPostScriptNameForFontKey(java.lang.String)#java/lang/String/substring(int)
org/apache/fop/render/ps/FontResourceCache/getPostScriptNameForFontKey(java.lang.String)#java/lang/String/indexOf(int)
org/apache/fop/render/ps/FontResourceCache/getPostScriptNameForFontKey(java.lang.String)#java/lang/StringBuilder/toString()
org/apache/fop/image/loader/batik/PreloaderSVG/Loader/getImage(java.lang.String,javax.xml.transform.Source,org.apache.xmlgraphics.image.loader.ImageContext)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/fop/image/loader/batik/PreloaderSVG/Loader/getImage(java.lang.String,javax.xml.transform.Source,org.apache.xmlgraphics.image.loader.ImageContext)#org/apache/xmlgraphics/io/XmlSourceUtil/needInputStream(javax.xml.transform.Source)
org/apache/fop/image/loader/batik/PreloaderSVG/Loader/getImage(java.lang.String,javax.xml.transform.Source,org.apache.xmlgraphics.image.loader.ImageContext)#org/apache/commons/logging/Log/warn(java.lang.Object,java.lang.Throwable)
org/apache/fop/image/loader/batik/PreloaderSVG/Loader/getImage(java.lang.String,javax.xml.transform.Source,org.apache.xmlgraphics.image.loader.ImageContext)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/image/loader/batik/PreloaderSVG/Loader/getImage(java.lang.String,javax.xml.transform.Source,org.apache.xmlgraphics.image.loader.ImageContext)#java/io/InputStream/reset()
org/apache/fop/image/loader/batik/PreloaderSVG/Loader/getImage(java.lang.String,javax.xml.transform.Source,org.apache.xmlgraphics.image.loader.ImageContext)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/image/loader/batik/PreloaderSVG/Loader/getImage(java.lang.String,javax.xml.transform.Source,org.apache.xmlgraphics.image.loader.ImageContext)#org/apache/fop/image/loader/batik/PreloaderSVG$Loader/createImageInfo(java.lang.String,org.apache.xmlgraphics.image.loader.ImageContext,org.w3c.dom.svg.SVGDocument)
org/apache/fop/image/loader/batik/PreloaderSVG/Loader/getImage(java.lang.String,javax.xml.transform.Source,org.apache.xmlgraphics.image.loader.ImageContext)#javax/xml/transform/Source/getSystemId()
org/apache/fop/image/loader/batik/PreloaderSVG/Loader/getImage(java.lang.String,javax.xml.transform.Source,org.apache.xmlgraphics.image.loader.ImageContext)#org/apache/batik/anim/dom/SAXSVGDocumentFactory/SAXSVGDocumentFactory(java.lang.String)
org/apache/fop/image/loader/batik/PreloaderSVG/Loader/getImage(java.lang.String,javax.xml.transform.Source,org.apache.xmlgraphics.image.loader.ImageContext)#java/lang/StringBuilder/toString()
org/apache/fop/image/loader/batik/PreloaderSVG/Loader/getImage(java.lang.String,javax.xml.transform.Source,org.apache.xmlgraphics.image.loader.ImageContext)#javax/xml/transform/dom/DOMSource/getNode()
org/apache/fop/image/loader/batik/PreloaderSVG/Loader/getImage(java.lang.String,javax.xml.transform.Source,org.apache.xmlgraphics.image.loader.ImageContext)#org/apache/batik/anim/dom/SAXSVGDocumentFactory/createSVGDocument(java.lang.String,java.io.InputStream)
org/apache/fop/image/loader/batik/PreloaderSVG/Loader/getImage(java.lang.String,javax.xml.transform.Source,org.apache.xmlgraphics.image.loader.ImageContext)#java/io/InputStream/available()
org/apache/fop/image/loader/batik/PreloaderSVG/Loader/getImage(java.lang.String,javax.xml.transform.Source,org.apache.xmlgraphics.image.loader.ImageContext)#java/io/IOException/getMessage()
org/apache/fop/image/loader/batik/PreloaderSVG/Loader/getImage(java.lang.String,javax.xml.transform.Source,org.apache.xmlgraphics.image.loader.ImageContext)#java/io/InputStream/mark(int)
org/apache/fop/image/loader/batik/PreloaderSVG/Loader/createImageInfo(java.lang.String,org.apache.xmlgraphics.image.loader.ImageContext,org.w3c.dom.svg.SVGDocument)#java/lang/Math/round(double)
org/apache/fop/image/loader/batik/PreloaderSVG/Loader/createImageInfo(java.lang.String,org.apache.xmlgraphics.image.loader.ImageContext,org.w3c.dom.svg.SVGDocument)#java/lang/String/length()
org/apache/fop/image/loader/batik/PreloaderSVG/Loader/createImageInfo(java.lang.String,org.apache.xmlgraphics.image.loader.ImageContext,org.w3c.dom.svg.SVGDocument)#org/apache/batik/bridge/UnitProcessor/createContext(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)
org/apache/fop/image/loader/batik/PreloaderSVG/Loader/createImageInfo(java.lang.String,org.apache.xmlgraphics.image.loader.ImageContext,org.w3c.dom.svg.SVGDocument)#org/apache/xmlgraphics/image/loader/ImageInfo/getCustomObjects()
org/apache/fop/image/loader/batik/PreloaderSVG/Loader/createImageInfo(java.lang.String,org.apache.xmlgraphics.image.loader.ImageContext,org.w3c.dom.svg.SVGDocument)#org/apache/xmlgraphics/image/loader/impl/ImageXMLDOM/ImageXMLDOM(org.apache.xmlgraphics.image.loader.ImageInfo,org.w3c.dom.Document,org.apache.xmlgraphics.image.loader.XMLNamespaceEnabledImageFlavor)
org/apache/fop/image/loader/batik/PreloaderSVG/Loader/createImageInfo(java.lang.String,org.apache.xmlgraphics.image.loader.ImageContext,org.w3c.dom.svg.SVGDocument)#org/apache/xmlgraphics/image/loader/ImageSize/setSizeInMillipoints(int,int)
org/apache/fop/image/loader/batik/PreloaderSVG/Loader/createImageInfo(java.lang.String,org.apache.xmlgraphics.image.loader.ImageContext,org.w3c.dom.svg.SVGDocument)#org/apache/fop/image/loader/batik/PreloaderSVG$Loader$1/1(org.apache.fop.image.loader.batik.PreloaderSVG$Loader,float,java.awt.geom.AffineTransform,org.apache.batik.bridge.FontFamilyResolver)
org/apache/fop/image/loader/batik/PreloaderSVG/Loader/createImageInfo(java.lang.String,org.apache.xmlgraphics.image.loader.ImageContext,org.w3c.dom.svg.SVGDocument)#org/apache/xmlgraphics/image/loader/ImageSize/calcPixelsFromSize()
org/apache/fop/image/loader/batik/PreloaderSVG/Loader/createImageInfo(java.lang.String,org.apache.xmlgraphics.image.loader.ImageContext,org.w3c.dom.svg.SVGDocument)#org/apache/xmlgraphics/image/loader/ImageSize/setResolution(double)
org/apache/fop/image/loader/batik/PreloaderSVG/Loader/createImageInfo(java.lang.String,org.apache.xmlgraphics.image.loader.ImageContext,org.w3c.dom.svg.SVGDocument)#org/apache/xmlgraphics/image/loader/ImageContext/getSourceResolution()
org/apache/fop/image/loader/batik/PreloaderSVG/Loader/createImageInfo(java.lang.String,org.apache.xmlgraphics.image.loader.ImageContext,org.w3c.dom.svg.SVGDocument)#org/w3c/dom/Element/getAttributeNS(java.lang.String,java.lang.String)
org/apache/fop/image/loader/batik/PreloaderSVG/Loader/createImageInfo(java.lang.String,org.apache.xmlgraphics.image.loader.ImageContext,org.w3c.dom.svg.SVGDocument)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/fop/image/loader/batik/PreloaderSVG/Loader/createImageInfo(java.lang.String,org.apache.xmlgraphics.image.loader.ImageContext,org.w3c.dom.svg.SVGDocument)#org/apache/xmlgraphics/image/loader/ImageInfo/ImageInfo(java.lang.String,java.lang.String)
org/apache/fop/image/loader/batik/PreloaderSVG/Loader/createImageInfo(java.lang.String,org.apache.xmlgraphics.image.loader.ImageContext,org.w3c.dom.svg.SVGDocument)#org/apache/xmlgraphics/image/loader/ImageSize/ImageSize()
org/apache/fop/image/loader/batik/PreloaderSVG/Loader/createImageInfo(java.lang.String,org.apache.xmlgraphics.image.loader.ImageContext,org.w3c.dom.svg.SVGDocument)#org/apache/batik/bridge/BridgeContext/BridgeContext(org.apache.batik.bridge.UserAgent)
org/apache/fop/image/loader/batik/PreloaderSVG/Loader/createImageInfo(java.lang.String,org.apache.xmlgraphics.image.loader.ImageContext,org.w3c.dom.svg.SVGDocument)#org/apache/batik/bridge/UnitProcessor/svgHorizontalLengthToUserSpace(java.lang.String,java.lang.String,org.apache.batik.parser.UnitProcessor$Context)
org/apache/fop/image/loader/batik/PreloaderSVG/Loader/createImageInfo(java.lang.String,org.apache.xmlgraphics.image.loader.ImageContext,org.w3c.dom.svg.SVGDocument)#org/w3c/dom/svg/SVGDocument/getRootElement()
org/apache/fop/image/loader/batik/PreloaderSVG/Loader/createImageInfo(java.lang.String,org.apache.xmlgraphics.image.loader.ImageContext,org.w3c.dom.svg.SVGDocument)#java/awt/geom/AffineTransform/AffineTransform()
org/apache/fop/image/loader/batik/PreloaderSVG/Loader/createImageInfo(java.lang.String,org.apache.xmlgraphics.image.loader.ImageContext,org.w3c.dom.svg.SVGDocument)#org/apache/xmlgraphics/image/loader/ImageInfo/setSize(org.apache.xmlgraphics.image.loader.ImageSize)
org/apache/fop/image/loader/batik/PreloaderSVG/Loader/createImageInfo(java.lang.String,org.apache.xmlgraphics.image.loader.ImageContext,org.w3c.dom.svg.SVGDocument)#org/apache/batik/bridge/UnitProcessor/svgVerticalLengthToUserSpace(java.lang.String,java.lang.String,org.apache.batik.parser.UnitProcessor$Context)
org/apache/fop/apps/FOUserAgent/getRendererConfiguration(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/apps/FOUserAgent/getRendererConfiguration(java.lang.String)#org/apache/commons/logging/Log/isDebugEnabled()
org/apache/fop/apps/FOUserAgent/getRendererConfiguration(java.lang.String)#org/apache/avalon/framework/configuration/Configuration/getChildren(java.lang.String)
org/apache/fop/apps/FOUserAgent/getRendererConfiguration(java.lang.String)#java/lang/String/equals(java.lang.Object)
org/apache/fop/apps/FOUserAgent/getRendererConfiguration(java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/apps/FOUserAgent/getRendererConfiguration(java.lang.String)#java/lang/StringBuilder/toString()
org/apache/fop/apps/FOUserAgent/getRendererConfiguration(java.lang.String)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/fop/apps/FOUserAgent/getRendererConfiguration(java.lang.String)#org/apache/avalon/framework/configuration/Configuration/getAttribute(java.lang.String)
org/apache/fop/apps/FOUserAgent/getRendererConfiguration(java.lang.String)#org/apache/avalon/framework/configuration/Configuration/getChild(java.lang.String)
org/apache/fop/render/ps/NativeTextHandler/drawString(java.awt.Graphics2D,java.lang.String,float,float)#org/apache/xmlgraphics/java2d/ps/PSGraphics2D/getColor()
org/apache/fop/render/ps/NativeTextHandler/drawString(java.awt.Graphics2D,java.lang.String,float,float)#org/apache/xmlgraphics/java2d/ps/PSGraphics2D/getFont()
org/apache/fop/render/ps/NativeTextHandler/drawString(java.awt.Graphics2D,java.lang.String,float,float)#org/apache/xmlgraphics/java2d/ps/PSGraphics2D/getClip()
org/apache/fop/render/ps/NativeTextHandler/drawString(java.awt.Graphics2D,java.lang.String,float,float)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/render/ps/NativeTextHandler/drawString(java.awt.Graphics2D,java.lang.String,float,float)#org/apache/xmlgraphics/java2d/ps/PSGraphics2D/preparePainting()
org/apache/fop/render/ps/NativeTextHandler/drawString(java.awt.Graphics2D,java.lang.String,float,float)#java/lang/StringBuffer/toString()
org/apache/fop/render/ps/NativeTextHandler/drawString(java.awt.Graphics2D,java.lang.String,float,float)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/render/ps/NativeTextHandler/drawString(java.awt.Graphics2D,java.lang.String,float,float)#java/lang/StringBuffer/append(java.lang.String)
org/apache/fop/render/ps/NativeTextHandler/drawString(java.awt.Graphics2D,java.lang.String,float,float)#org/apache/xmlgraphics/ps/PSGenerator/saveGraphicsState()
org/apache/fop/render/ps/NativeTextHandler/drawString(java.awt.Graphics2D,java.lang.String,float,float)#java/lang/StringBuilder/toString()
org/apache/fop/render/ps/NativeTextHandler/drawString(java.awt.Graphics2D,java.lang.String,float,float)#org/apache/xmlgraphics/java2d/ps/PSGraphics2D/writeClip(java.awt.Shape)
org/apache/fop/render/ps/NativeTextHandler/drawString(java.awt.Graphics2D,java.lang.String,float,float)#org/apache/xmlgraphics/java2d/ps/PSGraphics2D/getTransform()
org/apache/fop/render/ps/NativeTextHandler/drawString(java.awt.Graphics2D,java.lang.String,float,float)#org/apache/xmlgraphics/ps/PSGenerator/writeln(java.lang.String)
org/apache/fop/render/ps/NativeTextHandler/drawString(java.awt.Graphics2D,java.lang.String,float,float)#org/apache/xmlgraphics/java2d/ps/PSGraphics2D/establishColor(java.awt.Color)
org/apache/fop/render/ps/NativeTextHandler/drawString(java.awt.Graphics2D,java.lang.String,float,float)#org/apache/xmlgraphics/ps/PSGenerator/concatMatrix(java.awt.geom.AffineTransform)
org/apache/fop/render/ps/NativeTextHandler/drawString(java.awt.Graphics2D,java.lang.String,float,float)#java/lang/StringBuffer/StringBuffer(java.lang.String)
org/apache/fop/render/ps/NativeTextHandler/drawString(java.awt.Graphics2D,java.lang.String,float,float)#org/apache/xmlgraphics/ps/PSGenerator/formatDouble(double)
org/apache/fop/render/ps/NativeTextHandler/drawString(java.awt.Graphics2D,java.lang.String,float,float)#org/apache/xmlgraphics/ps/PSGenerator/restoreGraphicsState()
org/apache/fop/render/ps/AbstractPSTranscoder/transcode(org.w3c.dom.Document,java.lang.String,org.apache.batik.transcoder.TranscoderOutput)#org/apache/fop/render/ps/AbstractPSTranscoder/getLogger()
org/apache/fop/render/ps/AbstractPSTranscoder/transcode(org.w3c.dom.Document,java.lang.String,org.apache.batik.transcoder.TranscoderOutput)#org/apache/xmlgraphics/java2d/ps/AbstractPSDocumentGraphics2D/finish()
org/apache/fop/render/ps/AbstractPSTranscoder/transcode(org.w3c.dom.Document,java.lang.String,org.apache.batik.transcoder.TranscoderOutput)#org/apache/batik/transcoder/TranscodingHints/get(java.lang.Object)
org/apache/fop/render/ps/AbstractPSTranscoder/transcode(org.w3c.dom.Document,java.lang.String,org.apache.batik.transcoder.TranscoderOutput)#org/apache/xmlgraphics/java2d/ps/AbstractPSDocumentGraphics2D/setTransform(java.awt.geom.AffineTransform)
org/apache/fop/render/ps/AbstractPSTranscoder/transcode(org.w3c.dom.Document,java.lang.String,org.apache.batik.transcoder.TranscoderOutput)#org/apache/batik/bridge/UnitProcessor/createContext(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)
org/apache/fop/render/ps/AbstractPSTranscoder/transcode(org.w3c.dom.Document,java.lang.String,org.apache.batik.transcoder.TranscoderOutput)#org/apache/batik/transcoder/TranscodingHints/containsKey(java.lang.Object)
org/apache/fop/render/ps/AbstractPSTranscoder/transcode(org.w3c.dom.Document,java.lang.String,org.apache.batik.transcoder.TranscoderOutput)#java/io/BufferedOutputStream/BufferedOutputStream(java.io.OutputStream)
org/apache/fop/render/ps/AbstractPSTranscoder/transcode(org.w3c.dom.Document,java.lang.String,org.apache.batik.transcoder.TranscoderOutput)#org/apache/xmlgraphics/java2d/GraphicContext/GraphicContext()
org/apache/fop/render/ps/AbstractPSTranscoder/transcode(org.w3c.dom.Document,java.lang.String,org.apache.batik.transcoder.TranscoderOutput)#org/w3c/dom/Document/getDocumentElement()
org/apache/fop/render/ps/AbstractPSTranscoder/transcode(org.w3c.dom.Document,java.lang.String,org.apache.batik.transcoder.TranscoderOutput)#org/apache/batik/bridge/UnitProcessor/userSpaceToSVG(float,short,short,org.apache.batik.parser.UnitProcessor$Context)
org/apache/fop/render/ps/AbstractPSTranscoder/transcode(org.w3c.dom.Document,java.lang.String,org.apache.batik.transcoder.TranscoderOutput)#org/apache/batik/transcoder/TranscoderOutput/getOutputStream()
org/apache/fop/render/ps/AbstractPSTranscoder/transcode(org.w3c.dom.Document,java.lang.String,org.apache.batik.transcoder.TranscoderOutput)#org/apache/xmlgraphics/java2d/ps/AbstractPSDocumentGraphics2D/setViewportDimension(float,float)
org/apache/fop/render/ps/AbstractPSTranscoder/transcode(org.w3c.dom.Document,java.lang.String,org.apache.batik.transcoder.TranscoderOutput)#org/apache/xmlgraphics/java2d/ps/AbstractPSDocumentGraphics2D/setBackgroundColor(java.awt.Color)
org/apache/fop/render/ps/AbstractPSTranscoder/transcode(org.w3c.dom.Document,java.lang.String,org.apache.batik.transcoder.TranscoderOutput)#org/apache/fop/svg/AbstractFOPTranscoder/transcode(org.w3c.dom.Document,java.lang.String,org.apache.batik.transcoder.TranscoderOutput)
org/apache/fop/render/ps/AbstractPSTranscoder/transcode(org.w3c.dom.Document,java.lang.String,org.apache.batik.transcoder.TranscoderOutput)#org/apache/fop/render/ps/AbstractPSTranscoder/getEffectiveConfiguration()
org/apache/fop/render/ps/AbstractPSTranscoder/transcode(org.w3c.dom.Document,java.lang.String,org.apache.batik.transcoder.TranscoderOutput)#org/apache/batik/transcoder/TranscoderException/TranscoderException(java.lang.Exception)
org/apache/fop/render/ps/AbstractPSTranscoder/transcode(org.w3c.dom.Document,java.lang.String,org.apache.batik.transcoder.TranscoderOutput)#org/apache/xmlgraphics/java2d/ps/AbstractPSDocumentGraphics2D/setGraphicContext(org.apache.xmlgraphics.java2d.GraphicContext)
org/apache/fop/render/ps/AbstractPSTranscoder/transcode(org.w3c.dom.Document,java.lang.String,org.apache.batik.transcoder.TranscoderOutput)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/render/ps/AbstractPSTranscoder/transcode(org.w3c.dom.Document,java.lang.String,org.apache.batik.transcoder.TranscoderOutput)#java/lang/StringBuilder/append(int)
org/apache/fop/render/ps/AbstractPSTranscoder/transcode(org.w3c.dom.Document,java.lang.String,org.apache.batik.transcoder.TranscoderOutput)#org/apache/xmlgraphics/java2d/ps/AbstractPSDocumentGraphics2D/setupDocument(java.io.OutputStream,int,int)
org/apache/fop/render/ps/AbstractPSTranscoder/transcode(org.w3c.dom.Document,java.lang.String,org.apache.batik.transcoder.TranscoderOutput)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/render/ps/AbstractPSTranscoder/transcode(org.w3c.dom.Document,java.lang.String,org.apache.batik.transcoder.TranscoderOutput)#org/apache/commons/logging/Log/trace(java.lang.Object)
org/apache/fop/render/ps/AbstractPSTranscoder/transcode(org.w3c.dom.Document,java.lang.String,org.apache.batik.transcoder.TranscoderOutput)#org/apache/fop/svg/AbstractFOPTranscoder$FOPTranscoderUserAgent/setFontFamilyResolver(org.apache.fop.svg.font.FOPFontFamilyResolver)
org/apache/fop/render/ps/AbstractPSTranscoder/transcode(org.w3c.dom.Document,java.lang.String,org.apache.batik.transcoder.TranscoderOutput)#org/apache/fop/render/ps/AbstractPSTranscoder/isTextStroked()
org/apache/fop/render/ps/AbstractPSTranscoder/transcode(org.w3c.dom.Document,java.lang.String,org.apache.batik.transcoder.TranscoderOutput)#org/apache/batik/gvt/GraphicsNode/paint(java.awt.Graphics2D)
org/apache/fop/render/ps/AbstractPSTranscoder/transcode(org.w3c.dom.Document,java.lang.String,org.apache.batik.transcoder.TranscoderOutput)#java/lang/StringBuilder/append(float)
org/apache/fop/render/ps/AbstractPSTranscoder/transcode(org.w3c.dom.Document,java.lang.String,org.apache.batik.transcoder.TranscoderOutput)#java/lang/StringBuilder/toString()
org/apache/fop/render/ps/AbstractPSTranscoder/transcode(org.w3c.dom.Document,java.lang.String,org.apache.batik.transcoder.TranscoderOutput)#org/apache/xmlgraphics/java2d/ps/AbstractPSDocumentGraphics2D/setCustomTextHandler(org.apache.xmlgraphics.java2d.TextHandler)
org/apache/fop/render/afp/AFPImageHandlerRawJPEG/updateIntrinsicSize(org.apache.fop.afp.AFPImageObjectInfo,org.apache.fop.afp.AFPPaintingState,org.apache.xmlgraphics.image.loader.ImageSize)#org/apache/fop/afp/AFPImageObjectInfo/setDataHeightRes(int)
org/apache/fop/render/afp/AFPImageHandlerRawJPEG/updateIntrinsicSize(org.apache.fop.afp.AFPImageObjectInfo,org.apache.fop.afp.AFPPaintingState,org.apache.xmlgraphics.image.loader.ImageSize)#java/lang/Math/round(double)
org/apache/fop/render/afp/AFPImageHandlerRawJPEG/updateIntrinsicSize(org.apache.fop.afp.AFPImageObjectInfo,org.apache.fop.afp.AFPPaintingState,org.apache.xmlgraphics.image.loader.ImageSize)#org/apache/fop/afp/AFPImageObjectInfo/setDataWidthRes(int)
org/apache/fop/render/afp/AFPImageHandlerRawJPEG/updateIntrinsicSize(org.apache.fop.afp.AFPImageObjectInfo,org.apache.fop.afp.AFPPaintingState,org.apache.xmlgraphics.image.loader.ImageSize)#org/apache/xmlgraphics/image/loader/ImageSize/getHeightPx()
org/apache/fop/render/afp/AFPImageHandlerRawJPEG/updateIntrinsicSize(org.apache.fop.afp.AFPImageObjectInfo,org.apache.fop.afp.AFPPaintingState,org.apache.xmlgraphics.image.loader.ImageSize)#org/apache/xmlgraphics/image/loader/ImageSize/getWidthPx()
org/apache/fop/render/afp/AFPImageHandlerRawJPEG/updateIntrinsicSize(org.apache.fop.afp.AFPImageObjectInfo,org.apache.fop.afp.AFPPaintingState,org.apache.xmlgraphics.image.loader.ImageSize)#org/apache/xmlgraphics/image/loader/ImageSize/getDpiVertical()
org/apache/fop/render/afp/AFPImageHandlerRawJPEG/updateIntrinsicSize(org.apache.fop.afp.AFPImageObjectInfo,org.apache.fop.afp.AFPPaintingState,org.apache.xmlgraphics.image.loader.ImageSize)#org/apache/fop/afp/AFPImageObjectInfo/setDataHeight(int)
org/apache/fop/render/afp/AFPImageHandlerRawJPEG/updateIntrinsicSize(org.apache.fop.afp.AFPImageObjectInfo,org.apache.fop.afp.AFPPaintingState,org.apache.xmlgraphics.image.loader.ImageSize)#org/apache/fop/afp/AFPImageObjectInfo/getObjectAreaInfo()
org/apache/fop/render/afp/AFPImageHandlerRawJPEG/updateIntrinsicSize(org.apache.fop.afp.AFPImageObjectInfo,org.apache.fop.afp.AFPPaintingState,org.apache.xmlgraphics.image.loader.ImageSize)#org/apache/xmlgraphics/image/loader/ImageSize/getDpiHorizontal()
org/apache/fop/render/afp/AFPImageHandlerRawJPEG/updateIntrinsicSize(org.apache.fop.afp.AFPImageObjectInfo,org.apache.fop.afp.AFPPaintingState,org.apache.xmlgraphics.image.loader.ImageSize)#org/apache/fop/afp/AFPImageObjectInfo/setDataWidth(int)
org/apache/fop/render/afp/AFPImageHandlerRawJPEG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/fop/render/afp/AFPImageHandlerRawJPEG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/xmlgraphics/image/loader/Image/getInfo()
org/apache/fop/render/afp/AFPImageHandlerRawJPEG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/render/afp/AFPImageHandlerRawJPEG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/fop/render/afp/AFPImageHandlerRawJPEG/createResourceInformation(java.lang.String,java.util.Map)
org/apache/fop/render/afp/AFPImageHandlerRawJPEG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/fop/afp/AFPImageObjectInfo/setData(byte[])
org/apache/fop/render/afp/AFPImageHandlerRawJPEG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/render/afp/AFPImageHandlerRawJPEG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/commons/io/IOUtils/toByteArray(java.io.InputStream)
org/apache/fop/render/afp/AFPImageHandlerRawJPEG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/fop/afp/AFPImageObjectInfo/setMimeType(java.lang.String)
org/apache/fop/render/afp/AFPImageHandlerRawJPEG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/lang/AssertionError/AssertionError()
org/apache/fop/render/afp/AFPImageHandlerRawJPEG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/lang/StringBuilder/toString()
org/apache/fop/render/afp/AFPImageHandlerRawJPEG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/apache/fop/render/afp/AFPImageHandlerRawJPEG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/fop/afp/AFPImageObjectInfo/setResourceInfo(org.apache.fop.afp.AFPResourceInfo)
org/apache/fop/render/afp/AFPImageHandlerRawJPEG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/fop/afp/AFPImageObjectInfo/setObjectAreaInfo(org.apache.fop.afp.AFPObjectAreaInfo)
org/apache/fop/render/afp/AFPImageHandlerRawJPEG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/xmlgraphics/image/loader/impl/ImageRawJPEG/getColorSpace()
org/apache/fop/render/afp/AFPImageHandlerRawJPEG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/commons/io/IOUtils/closeQuietly(java.io.InputStream)
org/apache/fop/render/afp/AFPImageHandlerRawJPEG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/awt/color/ColorSpace/getType()
org/apache/fop/render/afp/AFPImageHandlerRawJPEG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/xmlgraphics/image/loader/ImageInfo/getOriginalURI()
org/apache/fop/render/afp/AFPImageHandlerRawJPEG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/fop/render/afp/AFPImageHandlerRawJPEG/createObjectAreaInfo(org.apache.fop.afp.AFPPaintingState,java.awt.Rectangle)
org/apache/fop/render/afp/AFPImageHandlerRawJPEG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/fop/render/afp/AFPImageHandlerRawJPEG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/xmlgraphics/image/loader/impl/ImageRawJPEG/createInputStream()
org/apache/fop/render/afp/AFPImageHandlerRawJPEG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/xmlgraphics/image/loader/Image/getSize()
org/apache/fop/render/pdf/PDFDocumentHandler/startPage(int,java.lang.String,java.lang.String,java.awt.Dimension)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/fop/render/pdf/PDFDocumentHandler/startPage(int,java.lang.String,java.lang.String,java.awt.Dimension)#java/awt/Dimension/getHeight()
org/apache/fop/render/pdf/PDFDocumentHandler/startPage(int,java.lang.String,java.lang.String,java.awt.Dimension)#org/apache/fop/render/pdf/PDFDocumentHandler$PageReference/PageReference(org.apache.fop.pdf.PDFPage,java.awt.Dimension,org.apache.fop.render.pdf.PDFDocumentHandler$1)
org/apache/fop/render/pdf/PDFDocumentHandler/startPage(int,java.lang.String,java.lang.String,java.awt.Dimension)#java/awt/geom/Point2D/getX()
org/apache/fop/render/pdf/PDFDocumentHandler/startPage(int,java.lang.String,java.lang.String,java.awt.Dimension)#java/awt/geom/Point2D/getY()
org/apache/fop/render/pdf/PDFDocumentHandler/startPage(int,java.lang.String,java.lang.String,java.awt.Dimension)#java/awt/geom/AffineTransform/scale(double,double)
org/apache/fop/render/pdf/PDFDocumentHandler/startPage(int,java.lang.String,java.lang.String,java.awt.Dimension)#org/apache/fop/render/pdf/PDFDocumentHandler/getContext()
org/apache/fop/render/pdf/PDFDocumentHandler/startPage(int,java.lang.String,java.lang.String,java.awt.Dimension)#java/awt/geom/AffineTransform/AffineTransform(double,double,double,double,double,double)
org/apache/fop/render/pdf/PDFDocumentHandler/startPage(int,java.lang.String,java.lang.String,java.awt.Dimension)#java/lang/Integer/valueOf(int)
org/apache/fop/tools/anttasks/FileCompare/execute()#java/io/PrintWriter/PrintWriter(java.io.Writer,boolean)
org/apache/fop/tools/anttasks/FileCompare/execute()#java/lang/StringBuilder/StringBuilder()
org/apache/fop/tools/anttasks/FileCompare/execute()#java/lang/StringBuilder/append(java.lang.Object)
org/apache/fop/tools/anttasks/FileCompare/execute()#java/io/PrintWriter/println(java.lang.String)
org/apache/fop/tools/anttasks/FileCompare/execute()#java/lang/StringBuilder/toString()
org/apache/fop/tools/anttasks/FileCompare/execute()#java/io/File/getName()
org/apache/fop/tools/anttasks/FileCompare/execute()#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/tools/anttasks/FileCompare/execute()#java/io/PrintStream/println(java.lang.String)
org/apache/fop/tools/anttasks/FileCompare/execute()#java/io/File/File(java.lang.String)
org/apache/fop/tools/anttasks/FileCompare/execute()#java/io/FileWriter/FileWriter(java.lang.String)
org/apache/fop/pdf/PDFFactory/buildCIDSet(org.apache.fop.pdf.PDFFontDescriptor,org.apache.fop.fonts.CIDFont)#java/util/BitSet/get(int)
org/apache/fop/pdf/PDFFactory/buildCIDSet(org.apache.fop.pdf.PDFFontDescriptor,org.apache.fop.fonts.CIDFont)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/pdf/PDFFactory/buildCIDSet(org.apache.fop.pdf.PDFFontDescriptor,org.apache.fop.fonts.CIDFont)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/pdf/PDFFactory/buildCIDSet(org.apache.fop.pdf.PDFFontDescriptor,org.apache.fop.fonts.CIDFont)#org/apache/commons/io/IOUtils/closeQuietly(java.io.OutputStream)
org/apache/fop/pdf/PDFFactory/buildCIDSet(org.apache.fop.pdf.PDFFontDescriptor,org.apache.fop.fonts.CIDFont)#org/apache/commons/logging/Log/error(java.lang.Object,java.lang.Throwable)
org/apache/fop/pdf/PDFFactory/buildCIDSet(org.apache.fop.pdf.PDFFontDescriptor,org.apache.fop.fonts.CIDFont)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/fop/pdf/PDFFactory/buildCIDSet(org.apache.fop.pdf.PDFFontDescriptor,org.apache.fop.fonts.CIDFont)#java/util/BitSet/length()
org/apache/fop/pdf/PDFFactory/buildCIDSet(org.apache.fop.pdf.PDFFontDescriptor,org.apache.fop.fonts.CIDFont)#org/apache/commons/io/output/ByteArrayOutputStream/write(int)
org/apache/fop/pdf/PDFFactory/buildCIDSet(org.apache.fop.pdf.PDFFontDescriptor,org.apache.fop.fonts.CIDFont)#java/lang/StringBuilder/toString()
org/apache/fop/pdf/PDFFactory/buildCIDSet(org.apache.fop.pdf.PDFFontDescriptor,org.apache.fop.fonts.CIDFont)#org/apache/fop/fonts/CIDFont/getEmbedFontName()
org/apache/fop/pdf/PDFFactory/buildCIDSet(org.apache.fop.pdf.PDFFontDescriptor,org.apache.fop.fonts.CIDFont)#org/apache/commons/io/output/ByteArrayOutputStream/toByteArray()
org/apache/fop/pdf/PDFFactory/buildCIDSet(org.apache.fop.pdf.PDFFontDescriptor,org.apache.fop.fonts.CIDFont)#org/apache/commons/io/output/ByteArrayOutputStream/ByteArrayOutputStream(int)
org/apache/fop/pdf/PDFFactory/makeFontFile(org.apache.fop.fonts.FontDescriptor,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/pdf/PDFFactory/makeFontFile(org.apache.fop.fonts.FontDescriptor,java.lang.String)#java/io/ByteArrayInputStream/ByteArrayInputStream(byte[])
org/apache/fop/pdf/PDFFactory/makeFontFile(org.apache.fop.fonts.FontDescriptor,java.lang.String)#org/apache/commons/io/IOUtils/toByteArray(java.io.InputStream)
org/apache/fop/pdf/PDFFactory/makeFontFile(org.apache.fop.fonts.FontDescriptor,java.lang.String)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/fop/pdf/PDFFactory/makeFontFile(org.apache.fop.fonts.FontDescriptor,java.lang.String)#org/apache/commons/io/IOUtils/closeQuietly(java.io.InputStream)
org/apache/fop/pdf/PDFFactory/makeFontFile(org.apache.fop.fonts.FontDescriptor,java.lang.String)#org/apache/fop/fonts/FontDescriptor/getFontType()
org/apache/fop/pdf/PDFFactory/makeFontFile(org.apache.fop.fonts.FontDescriptor,java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/pdf/PDFFactory/makeFontFile(org.apache.fop.fonts.FontDescriptor,java.lang.String)#org/apache/commons/logging/Log/error(java.lang.Object,java.lang.Throwable)
org/apache/fop/pdf/PDFFactory/makeFontFile(org.apache.fop.fonts.FontDescriptor,java.lang.String)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/fop/pdf/PDFFactory/makeFontFile(org.apache.fop.fonts.FontDescriptor,java.lang.String)#java/lang/AssertionError/AssertionError()
org/apache/fop/pdf/PDFFactory/makeFontFile(org.apache.fop.fonts.FontDescriptor,java.lang.String)#java/lang/StringBuilder/toString()
org/apache/fop/pdf/PDFFactory/makeFontFile(org.apache.fop.fonts.FontDescriptor,java.lang.String)#org/apache/fop/fonts/FontDescriptor/getEmbedFontName()
org/apache/fop/pdf/PDFFactory/makeFont(java.lang.String,java.lang.String,java.lang.String,org.apache.fop.fonts.FontMetrics,org.apache.fop.fonts.FontDescriptor)#java/util/Map/size()
org/apache/fop/pdf/PDFFactory/makeFont(java.lang.String,java.lang.String,java.lang.String,org.apache.fop.fonts.FontMetrics,org.apache.fop.fonts.FontDescriptor)#org/apache/fop/fonts/SingleByteFont/getLastChar()
org/apache/fop/pdf/PDFFactory/makeFont(java.lang.String,java.lang.String,java.lang.String,org.apache.fop.fonts.FontMetrics,org.apache.fop.fonts.FontDescriptor)#java/lang/Integer/intValue()
org/apache/fop/pdf/PDFFactory/makeFont(java.lang.String,java.lang.String,java.lang.String,org.apache.fop.fonts.FontMetrics,org.apache.fop.fonts.FontDescriptor)#java/util/SortedSet/first()
org/apache/fop/pdf/PDFFactory/makeFont(java.lang.String,java.lang.String,java.lang.String,org.apache.fop.fonts.FontMetrics,org.apache.fop.fonts.FontDescriptor)#org/apache/fop/fonts/SingleByteFont/getFontName()
org/apache/fop/pdf/PDFFactory/makeFont(java.lang.String,java.lang.String,java.lang.String,org.apache.fop.fonts.FontMetrics,org.apache.fop.fonts.FontDescriptor)#org/apache/fop/fonts/SingleByteFont/getEmbeddingMode()
org/apache/fop/pdf/PDFFactory/makeFont(java.lang.String,java.lang.String,java.lang.String,org.apache.fop.fonts.FontMetrics,org.apache.fop.fonts.FontDescriptor)#java/util/SortedSet/size()
org/apache/fop/pdf/PDFFactory/makeFont(java.lang.String,java.lang.String,java.lang.String,org.apache.fop.fonts.FontMetrics,org.apache.fop.fonts.FontDescriptor)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/pdf/PDFFactory/makeFont(java.lang.String,java.lang.String,java.lang.String,org.apache.fop.fonts.FontMetrics,org.apache.fop.fonts.FontDescriptor)#java/lang/RuntimeException/RuntimeException(java.lang.Throwable)
org/apache/fop/pdf/PDFFactory/makeFont(java.lang.String,java.lang.String,java.lang.String,org.apache.fop.fonts.FontMetrics,org.apache.fop.fonts.FontDescriptor)#java/lang/StringBuilder/append(int)
org/apache/fop/pdf/PDFFactory/makeFont(java.lang.String,java.lang.String,java.lang.String,org.apache.fop.fonts.FontMetrics,org.apache.fop.fonts.FontDescriptor)#java/util/Map/get(java.lang.Object)
org/apache/fop/pdf/PDFFactory/makeFont(java.lang.String,java.lang.String,java.lang.String,org.apache.fop.fonts.FontMetrics,org.apache.fop.fonts.FontDescriptor)#org/apache/fop/fonts/SingleByteFont/isSymbolicFont()
org/apache/fop/pdf/PDFFactory/makeFont(java.lang.String,java.lang.String,java.lang.String,org.apache.fop.fonts.FontMetrics,org.apache.fop.fonts.FontDescriptor)#java/util/Map/keySet()
org/apache/fop/pdf/PDFFactory/makeFont(java.lang.String,java.lang.String,java.lang.String,org.apache.fop.fonts.FontMetrics,org.apache.fop.fonts.FontDescriptor)#org/apache/fop/fonts/SingleByteFont/getFirstChar()
org/apache/fop/pdf/PDFFactory/makeFont(java.lang.String,java.lang.String,java.lang.String,org.apache.fop.fonts.FontMetrics,org.apache.fop.fonts.FontDescriptor)#java/lang/String/equals(java.lang.Object)
org/apache/fop/pdf/PDFFactory/makeFont(java.lang.String,java.lang.String,java.lang.String,org.apache.fop.fonts.FontMetrics,org.apache.fop.fonts.FontDescriptor)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/pdf/PDFFactory/makeFont(java.lang.String,java.lang.String,java.lang.String,org.apache.fop.fonts.FontMetrics,org.apache.fop.fonts.FontDescriptor)#java/util/SortedSet/remove(java.lang.Object)
org/apache/fop/pdf/PDFFactory/makeFont(java.lang.String,java.lang.String,java.lang.String,org.apache.fop.fonts.FontMetrics,org.apache.fop.fonts.FontDescriptor)#org/apache/commons/io/IOUtils/toByteArray(java.io.InputStream)
org/apache/fop/pdf/PDFFactory/makeFont(java.lang.String,java.lang.String,java.lang.String,org.apache.fop.fonts.FontMetrics,org.apache.fop.fonts.FontDescriptor)#org/apache/fop/pdf/PDFDictionary/getObjectNumber()
org/apache/fop/pdf/PDFFactory/makeFont(java.lang.String,java.lang.String,java.lang.String,org.apache.fop.fonts.FontMetrics,org.apache.fop.fonts.FontDescriptor)#java/lang/Integer/valueOf(int)
org/apache/fop/pdf/PDFFactory/makeFont(java.lang.String,java.lang.String,java.lang.String,org.apache.fop.fonts.FontMetrics,org.apache.fop.fonts.FontDescriptor)#org/apache/fop/pdf/PDFFont/setObjectNumber(org.apache.fop.pdf.PDFObjectNumber)
org/apache/fop/pdf/PDFFactory/makeFont(java.lang.String,java.lang.String,java.lang.String,org.apache.fop.fonts.FontMetrics,org.apache.fop.fonts.FontDescriptor)#java/util/SortedSet/last()
org/apache/fop/pdf/PDFFactory/makeFont(java.lang.String,java.lang.String,java.lang.String,org.apache.fop.fonts.FontMetrics,org.apache.fop.fonts.FontDescriptor)#org/apache/fop/pdf/PDFCIDSystemInfo/setDocument(org.apache.fop.pdf.PDFDocument)
org/apache/fop/pdf/PDFFactory/makeFont(java.lang.String,java.lang.String,java.lang.String,org.apache.fop.fonts.FontMetrics,org.apache.fop.fonts.FontDescriptor)#org/apache/fop/pdf/PDFFont/setDocument(org.apache.fop.pdf.PDFDocument)
org/apache/fop/pdf/PDFFactory/makeFont(java.lang.String,java.lang.String,java.lang.String,org.apache.fop.fonts.FontMetrics,org.apache.fop.fonts.FontDescriptor)#org/apache/fop/pdf/PDFCMap/setData(byte[])
org/apache/fop/pdf/PDFFactory/makeFont(java.lang.String,java.lang.String,java.lang.String,org.apache.fop.fonts.FontMetrics,org.apache.fop.fonts.FontDescriptor)#java/lang/AssertionError/AssertionError()
org/apache/fop/pdf/PDFFactory/makeFont(java.lang.String,java.lang.String,java.lang.String,org.apache.fop.fonts.FontMetrics,org.apache.fop.fonts.FontDescriptor)#java/util/TreeSet/TreeSet(java.util.Collection)
org/apache/fop/pdf/PDFFactory/makeFont(java.lang.String,java.lang.String,java.lang.String,org.apache.fop.fonts.FontMetrics,org.apache.fop.fonts.FontDescriptor)#java/lang/StringBuilder/toString()
org/apache/fop/layoutmgr/inline/InlineLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/layoutmgr/inline/InlineLayoutManager/checkEndOfLayout(org.apache.fop.layoutmgr.Position)
org/apache/fop/layoutmgr/inline/InlineLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/layoutmgr/inline/InlineLayoutManager/isFirst(org.apache.fop.layoutmgr.Position)
org/apache/fop/layoutmgr/inline/InlineLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/layoutmgr/inline/InlineLayoutManager/addId()
org/apache/fop/layoutmgr/inline/InlineLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/layoutmgr/inline/InlineLayoutManager/getCurrentArea()
org/apache/fop/layoutmgr/inline/InlineLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/layoutmgr/inline/InlineLayoutManager/setCurrentArea(org.apache.fop.area.Area)
org/apache/fop/layoutmgr/inline/InlineLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/layoutmgr/inline/InlineLayoutManager/isLast(org.apache.fop.layoutmgr.Position)
org/apache/fop/layoutmgr/inline/InlineLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/layoutmgr/inline/InlineLayoutManager/addSpace(org.apache.fop.area.Area,org.apache.fop.traits.MinOptMax,double)
org/apache/fop/layoutmgr/inline/InlineLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/layoutmgr/inline/InlineLayoutManager/setChildContext(org.apache.fop.layoutmgr.LayoutContext)
org/apache/fop/layoutmgr/inline/InlineLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/layoutmgr/inline/InlineLayoutManager/getContext()
org/apache/fop/layoutmgr/inline/InlineLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/layoutmgr/inline/InlineLayoutManager/registerMarkers(boolean,boolean,boolean)
org/apache/fop/layoutmgr/inline/InlineLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/area/inline/InlineArea/setBPD(int)
org/apache/fop/layoutmgr/inline/InlineLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext)#java/util/LinkedList/LinkedList()
org/apache/fop/layoutmgr/inline/InlineLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext)#java/util/List/add(java.lang.Object)
org/apache/fop/layoutmgr/inline/InlineLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext)#java/util/List/listIterator()
org/apache/fop/layoutmgr/inline/InlineLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#org/apache/fop/layoutmgr/inline/InlineLayoutManager/setFinished(boolean)
org/apache/fop/layoutmgr/inline/InlineLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#java/util/List/add(java.lang.Object)
org/apache/fop/layoutmgr/inline/InlineLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#java/util/List/get(int)
org/apache/fop/layoutmgr/inline/InlineLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#org/apache/fop/layoutmgr/inline/InlineLayoutManager/getChildLM()
org/apache/fop/layoutmgr/inline/InlineLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#org/apache/fop/layoutmgr/BlockKnuthSequence/wrapPositions(org.apache.fop.layoutmgr.LayoutManager)
org/apache/fop/layoutmgr/inline/InlineLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#java/util/ListIterator/hasNext()
org/apache/fop/layoutmgr/inline/InlineLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#java/util/Iterator/hasNext()
org/apache/fop/layoutmgr/inline/InlineLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#org/apache/fop/layoutmgr/inline/InlineLayoutManager/hasNextChildLM()
org/apache/fop/layoutmgr/inline/InlineLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#org/apache/fop/layoutmgr/InlineKnuthSequence/add(java.lang.Object)
org/apache/fop/layoutmgr/inline/InlineLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#java/util/List/isEmpty()
org/apache/fop/layoutmgr/inline/InlineLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#java/util/Iterator/next()
org/apache/fop/layoutmgr/inline/InlineLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#java/util/ListIterator/next()
org/apache/fop/layoutmgr/inline/InlineLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#java/util/LinkedList/LinkedList()
org/apache/fop/layoutmgr/inline/InlineLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#org/apache/fop/fo/properties/SpaceProperty/getOptimum(org.apache.fop.datatypes.PercentBaseContext)
org/apache/fop/layoutmgr/inline/InlineLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#org/apache/commons/logging/Log/trace(java.lang.Object)
org/apache/fop/layoutmgr/inline/InlineLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#org/apache/fop/layoutmgr/inline/InlineLayoutManager/notifyPos(org.apache.fop.layoutmgr.Position)
org/apache/fop/layoutmgr/inline/InlineLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#java/lang/StringBuffer/StringBuffer(java.lang.String)
org/apache/fop/layoutmgr/inline/InlineLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#java/util/List/listIterator()
org/apache/fop/layoutmgr/inline/InlineLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#java/util/List/listIterator(int)
org/apache/fop/afp/fonts/CharacterSetBuilder/openInputStream(org.apache.fop.afp.util.AFPResourceAccessor,java.lang.String,org.apache.fop.afp.AFPEventProducer)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/fop/afp/fonts/CharacterSetBuilder/openInputStream(org.apache.fop.afp.util.AFPResourceAccessor,java.lang.String,org.apache.fop.afp.AFPEventProducer)#java/net/MalformedURLException/MalformedURLException(java.lang.String)
org/apache/fop/afp/fonts/CharacterSetBuilder/openInputStream(org.apache.fop.afp.util.AFPResourceAccessor,java.lang.String,org.apache.fop.afp.AFPEventProducer)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/afp/fonts/CharacterSetBuilder/openInputStream(org.apache.fop.afp.util.AFPResourceAccessor,java.lang.String,org.apache.fop.afp.AFPEventProducer)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/fop/afp/fonts/CharacterSetBuilder/openInputStream(org.apache.fop.afp.util.AFPResourceAccessor,java.lang.String,org.apache.fop.afp.AFPEventProducer)#java/net/URISyntaxException/getMessage()
org/apache/fop/afp/fonts/CharacterSetBuilder/openInputStream(org.apache.fop.afp.util.AFPResourceAccessor,java.lang.String,org.apache.fop.afp.AFPEventProducer)#java/lang/StringBuilder/toString()
org/apache/fop/afp/fonts/CharacterSetBuilder/openInputStream(org.apache.fop.afp.util.AFPResourceAccessor,java.lang.String,org.apache.fop.afp.AFPEventProducer)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/afp/fonts/CharacterSetBuilder/openInputStream(org.apache.fop.afp.util.AFPResourceAccessor,java.lang.String,org.apache.fop.afp.AFPEventProducer)#java/lang/String/trim()
org/apache/fop/afp/fonts/CharacterSetBuilder/openInputStream(org.apache.fop.afp.util.AFPResourceAccessor,java.lang.String,org.apache.fop.afp.AFPEventProducer)#org/apache/commons/logging/Log/isDebugEnabled()
org/apache/fop/afp/fonts/CharacterSetBuilder/processFont(java.lang.String,java.lang.String,java.lang.String,org.apache.fop.afp.fonts.CharacterSetType,org.apache.fop.afp.util.AFPResourceAccessor,org.apache.fop.afp.AFPEventProducer)#org/apache/xmlgraphics/image/loader/util/SoftMapCache/put(java.lang.Object,java.lang.Object)
org/apache/fop/afp/fonts/CharacterSetBuilder/processFont(java.lang.String,java.lang.String,java.lang.String,org.apache.fop.afp.fonts.CharacterSetType,org.apache.fop.afp.util.AFPResourceAccessor,org.apache.fop.afp.AFPEventProducer)#org/apache/fop/afp/fonts/CharacterSetBuilder$FontControl/getDpi()
org/apache/fop/afp/fonts/CharacterSetBuilder/processFont(java.lang.String,java.lang.String,java.lang.String,org.apache.fop.afp.fonts.CharacterSetType,org.apache.fop.afp.util.AFPResourceAccessor,org.apache.fop.afp.AFPEventProducer)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/afp/fonts/CharacterSetBuilder/processFont(java.lang.String,java.lang.String,java.lang.String,org.apache.fop.afp.fonts.CharacterSetType,org.apache.fop.afp.util.AFPResourceAccessor,org.apache.fop.afp.AFPEventProducer)#org/apache/fop/afp/fonts/CharacterSetBuilder$FontControl/isRelative()
org/apache/fop/afp/fonts/CharacterSetBuilder/processFont(java.lang.String,java.lang.String,java.lang.String,org.apache.fop.afp.fonts.CharacterSetType,org.apache.fop.afp.util.AFPResourceAccessor,org.apache.fop.afp.AFPEventProducer)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/fop/afp/fonts/CharacterSetBuilder/processFont(java.lang.String,java.lang.String,java.lang.String,org.apache.fop.afp.fonts.CharacterSetType,org.apache.fop.afp.util.AFPResourceAccessor,org.apache.fop.afp.AFPEventProducer)#java/io/IOException/IOException(java.lang.String)
org/apache/fop/afp/fonts/CharacterSetBuilder/processFont(java.lang.String,java.lang.String,java.lang.String,org.apache.fop.afp.fonts.CharacterSetType,org.apache.fop.afp.util.AFPResourceAccessor,org.apache.fop.afp.AFPEventProducer)#org/apache/xmlgraphics/image/loader/util/SoftMapCache/get(java.lang.Object)
org/apache/fop/afp/fonts/CharacterSetBuilder/processFont(java.lang.String,java.lang.String,java.lang.String,org.apache.fop.afp.fonts.CharacterSetType,org.apache.fop.afp.util.AFPResourceAccessor,org.apache.fop.afp.AFPEventProducer)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/afp/fonts/CharacterSetBuilder/processFont(java.lang.String,java.lang.String,java.lang.String,org.apache.fop.afp.fonts.CharacterSetType,org.apache.fop.afp.util.AFPResourceAccessor,org.apache.fop.afp.AFPEventProducer)#java/util/Map/get(java.lang.Object)
org/apache/fop/afp/fonts/CharacterSetBuilder/processFont(java.lang.String,java.lang.String,java.lang.String,org.apache.fop.afp.fonts.CharacterSetType,org.apache.fop.afp.util.AFPResourceAccessor,org.apache.fop.afp.AFPEventProducer)#org/apache/fop/afp/fonts/CharacterSetBuilder$FontDescriptor/getNominalFontSizeInMillipoints()
org/apache/fop/afp/fonts/CharacterSetBuilder/processFont(java.lang.String,java.lang.String,java.lang.String,org.apache.fop.afp.fonts.CharacterSetType,org.apache.fop.afp.util.AFPResourceAccessor,org.apache.fop.afp.AFPEventProducer)#org/apache/fop/afp/fonts/CharacterSetBuilder$ValueNormalizer/ValueNormalizer(double)
org/apache/fop/afp/fonts/CharacterSetBuilder/processFont(java.lang.String,java.lang.String,java.lang.String,org.apache.fop.afp.fonts.CharacterSetType,org.apache.fop.afp.util.AFPResourceAccessor,org.apache.fop.afp.AFPEventProducer)#java/lang/StringBuilder/toString()
org/apache/fop/afp/fonts/CharacterSetBuilder/processFont(java.lang.String,java.lang.String,java.lang.String,org.apache.fop.afp.fonts.CharacterSetType,org.apache.fop.afp.util.AFPResourceAccessor,org.apache.fop.afp.AFPEventProducer)#java/net/URI/toASCIIString()
org/apache/fop/afp/fonts/CharacterSetBuilder/processFontIndex(org.apache.fop.afp.util.StructuredFieldReader,org.apache.fop.afp.fonts.CharacterSetOrientation,java.util.Map,org.apache.fop.afp.fonts.CharacterSetBuilder$ValueNormalizer)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/fop/afp/fonts/CharacterSetBuilder/processFontIndex(org.apache.fop.afp.util.StructuredFieldReader,org.apache.fop.afp.fonts.CharacterSetOrientation,java.util.Map,org.apache.fop.afp.fonts.CharacterSetBuilder$ValueNormalizer)#org/apache/fop/afp/fonts/CharacterSetBuilder$ValueNormalizer/normalize(int)
org/apache/fop/afp/fonts/CharacterSetBuilder/processFontIndex(org.apache.fop.afp.util.StructuredFieldReader,org.apache.fop.afp.fonts.CharacterSetOrientation,java.util.Map,org.apache.fop.afp.fonts.CharacterSetBuilder$ValueNormalizer)#org/apache/commons/logging/Log/isTraceEnabled()
org/apache/fop/afp/fonts/CharacterSetBuilder/processFontIndex(org.apache.fop.afp.util.StructuredFieldReader,org.apache.fop.afp.fonts.CharacterSetOrientation,java.util.Map,org.apache.fop.afp.fonts.CharacterSetBuilder$ValueNormalizer)#java/lang/Math/abs(int)
org/apache/fop/afp/fonts/CharacterSetBuilder/processFontIndex(org.apache.fop.afp.util.StructuredFieldReader,org.apache.fop.afp.fonts.CharacterSetOrientation,java.util.Map,org.apache.fop.afp.fonts.CharacterSetBuilder$ValueNormalizer)#java/lang/StringBuilder/toString()
org/apache/fop/afp/fonts/CharacterSetBuilder/processFontIndex(org.apache.fop.afp.util.StructuredFieldReader,org.apache.fop.afp.fonts.CharacterSetOrientation,java.util.Map,org.apache.fop.afp.fonts.CharacterSetBuilder$ValueNormalizer)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/afp/fonts/CharacterSetBuilder/processFontIndex(org.apache.fop.afp.util.StructuredFieldReader,org.apache.fop.afp.fonts.CharacterSetOrientation,java.util.Map,org.apache.fop.afp.fonts.CharacterSetBuilder$ValueNormalizer)#java/lang/String/charAt(int)
org/apache/fop/afp/fonts/CharacterSetBuilder/processFontIndex(org.apache.fop.afp.util.StructuredFieldReader,org.apache.fop.afp.fonts.CharacterSetOrientation,java.util.Map,org.apache.fop.afp.fonts.CharacterSetBuilder$ValueNormalizer)#java/awt/Rectangle/Rectangle(int,int,int,int)
org/apache/fop/afp/fonts/CharacterSetBuilder/processFontIndex(org.apache.fop.afp.util.StructuredFieldReader,org.apache.fop.afp.fonts.CharacterSetOrientation,java.util.Map,org.apache.fop.afp.fonts.CharacterSetBuilder$ValueNormalizer)#java/lang/StringBuilder/append(int)
org/apache/fop/afp/fonts/CharacterSetBuilder/processFontIndex(org.apache.fop.afp.util.StructuredFieldReader,org.apache.fop.afp.fonts.CharacterSetOrientation,java.util.Map,org.apache.fop.afp.fonts.CharacterSetBuilder$ValueNormalizer)#org/apache/commons/logging/Log/isDebugEnabled()
org/apache/fop/afp/fonts/CharacterSetBuilder/processFontIndex(org.apache.fop.afp.util.StructuredFieldReader,org.apache.fop.afp.fonts.CharacterSetOrientation,java.util.Map,org.apache.fop.afp.fonts.CharacterSetBuilder$ValueNormalizer)#java/util/Map/get(java.lang.Object)
org/apache/fop/afp/fonts/CharacterSetBuilder/processFontIndex(org.apache.fop.afp.util.StructuredFieldReader,org.apache.fop.afp.fonts.CharacterSetOrientation,java.util.Map,org.apache.fop.afp.fonts.CharacterSetBuilder$ValueNormalizer)#java/lang/String/String(byte[],java.lang.String)
org/apache/fop/afp/fonts/CharacterSetBuilder/processFontIndex(org.apache.fop.afp.util.StructuredFieldReader,org.apache.fop.afp.fonts.CharacterSetOrientation,java.util.Map,org.apache.fop.afp.fonts.CharacterSetBuilder$ValueNormalizer)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/afp/fonts/CharacterSetBuilder/processFontIndex(org.apache.fop.afp.util.StructuredFieldReader,org.apache.fop.afp.fonts.CharacterSetOrientation,java.util.Map,org.apache.fop.afp.fonts.CharacterSetBuilder$ValueNormalizer)#org/apache/commons/logging/Log/trace(java.lang.Object)
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfHyperLink/writeRtfPrefix()#org/apache/fop/render/rtf/rtflib/rtfdoc/RtfContainer/writeGroupMark(boolean)
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfHyperLink/writeRtfPrefix()#org/apache/fop/render/rtf/rtflib/rtfdoc/RtfHyperLink/writeGroupMark(boolean)
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfHyperLink/writeRtfPrefix()#org/apache/fop/render/rtf/rtflib/rtfdoc/RtfContainer/writeControlWord(java.lang.String)
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfHyperLink/writeRtfPrefix()#java/lang/StringBuilder/toString()
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfHyperLink/writeRtfPrefix()#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfHyperLink/writeRtfPrefix()#org/apache/fop/render/rtf/rtflib/rtfdoc/RtfHyperLink/writeAttributes(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes,java.lang.String[])
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfHyperLink/writeRtfPrefix()#org/apache/fop/render/rtf/rtflib/rtfdoc/RtfContainer/writeStarControlWord(java.lang.String)
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfHyperLink/writeRtfPrefix()#java/lang/StringBuilder/StringBuilder()
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfHyperLink/writeRtfPrefix()#java/io/Writer/write(java.lang.String)
org/apache/fop/complexscripts/fonts/GlyphPositioningTable/SingleSubtableFormat2/populate(java.util.List)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/complexscripts/fonts/GlyphPositioningTable/SingleSubtableFormat2/populate(java.util.List)#java/util/List/size()
org/apache/fop/complexscripts/fonts/GlyphPositioningTable/SingleSubtableFormat2/populate(java.util.List)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/complexscripts/fonts/GlyphPositioningTable/SingleSubtableFormat2/populate(java.util.List)#java/util/List/get(int)
org/apache/fop/complexscripts/fonts/GlyphPositioningTable/SingleSubtableFormat2/populate(java.util.List)#java/lang/AssertionError/AssertionError()
org/apache/fop/complexscripts/fonts/GlyphPositioningTable/SingleSubtableFormat2/populate(java.util.List)#java/lang/StringBuilder/toString()
org/apache/fop/complexscripts/fonts/GlyphPositioningTable/SingleSubtableFormat2/populate(java.util.List)#org/apache/fop/complexscripts/fonts/GlyphPositioningTable$SingleSubtableFormat2/getCoverageSize()
org/apache/fop/complexscripts/fonts/GlyphPositioningTable/SingleSubtableFormat2/populate(java.util.List)#java/lang/StringBuilder/append(int)
org/apache/fop/complexscripts/fonts/GlyphPositioningTable/SingleSubtableFormat2/populate(java.util.List)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/fop/complexscripts/fonts/GlyphPositioningTable/SingleSubtableFormat2/populate(java.util.List)#java/lang/Object/getClass()
org/apache/fop/complexscripts/fonts/GlyphPositioningTable/MarkToMarkSubtable/position(org.apache.fop.complexscripts.fonts.GlyphPositioningState)#org/apache/fop/complexscripts/fonts/GlyphPositioningTable$MarkToMarkSubtable/getCoverageIndex(int)
org/apache/fop/complexscripts/fonts/GlyphPositioningTable/MarkToMarkSubtable/position(org.apache.fop.complexscripts.fonts.GlyphPositioningState)#org/apache/fop/complexscripts/fonts/GlyphPositioningTable$MarkToMarkSubtable/getMark2Anchor(int,int)
org/apache/fop/complexscripts/fonts/GlyphPositioningTable/MarkToMarkSubtable/position(org.apache.fop.complexscripts.fonts.GlyphPositioningState)#org/apache/fop/complexscripts/fonts/GlyphPositioningTable$MarkToMarkSubtable/getMark1Anchor(int,int)
org/apache/fop/complexscripts/fonts/GlyphPositioningTable/MarkToMarkSubtable/position(org.apache.fop.complexscripts.fonts.GlyphPositioningState)#org/apache/fop/complexscripts/fonts/GlyphPositioningTable$MarkAnchor/getMarkClass()
org/apache/fop/complexscripts/fonts/GlyphPositioningTable/MarkToMarkSubtable/position(org.apache.fop.complexscripts.fonts.GlyphPositioningState)#org/apache/fop/complexscripts/fonts/GlyphPositioningState/getGlyph(int)
org/apache/fop/complexscripts/fonts/GlyphPositioningTable/MarkToMarkSubtable/position(org.apache.fop.complexscripts.fonts.GlyphPositioningState)#org/apache/fop/complexscripts/fonts/GlyphPositioningState/hasPrev()
org/apache/fop/complexscripts/fonts/GlyphPositioningTable/MarkToMarkSubtable/position(org.apache.fop.complexscripts.fonts.GlyphPositioningState)#org/apache/fop/complexscripts/fonts/GlyphPositioningState/getGlyph()
org/apache/fop/complexscripts/fonts/GlyphPositioningTable/MarkToMarkSubtable/position(org.apache.fop.complexscripts.fonts.GlyphPositioningState)#org/apache/fop/complexscripts/fonts/GlyphPositioningState/consume(int)
org/apache/fop/complexscripts/fonts/GlyphPositioningTable/MarkToMarkSubtable/position(org.apache.fop.complexscripts.fonts.GlyphPositioningState)#org/apache/fop/complexscripts/fonts/GlyphPositioningTable$Anchor/getAlignmentAdjustment(org.apache.fop.complexscripts.fonts.GlyphPositioningTable$Anchor)
org/apache/fop/render/print/PrintRenderer/stopRenderer()#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/render/print/PrintRenderer/stopRenderer()#org/apache/fop/render/print/PrintRenderer/clearViewportList()
org/apache/fop/render/print/PrintRenderer/stopRenderer()#java/lang/Class/getName()
org/apache/fop/render/print/PrintRenderer/stopRenderer()#java/lang/StringBuilder/StringBuilder()
org/apache/fop/render/print/PrintRenderer/stopRenderer()#org/apache/commons/logging/Log/error(java.lang.Object)
org/apache/fop/render/print/PrintRenderer/stopRenderer()#java/lang/Object/getClass()
org/apache/fop/render/print/PrintRenderer/stopRenderer()#java/awt/print/PrinterJob/print()
org/apache/fop/render/print/PrintRenderer/stopRenderer()#java/lang/StringBuilder/toString()
org/apache/fop/render/print/PrintRenderer/stopRenderer()#java/io/IOException/IOException(java.lang.String)
org/apache/fop/render/print/PrintRenderer/stopRenderer()#java/awt/print/PrinterException/getMessage()
org/apache/fop/render/print/PrintRenderer/setRendererOptions()#java/awt/print/PrinterJob/setPageable(java.awt.print.Pageable)
org/apache/fop/render/print/PrintRenderer/setRendererOptions()#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/render/print/PrintRenderer/setRendererOptions()#java/util/Map/get(java.lang.Object)
org/apache/fop/render/print/PrintRenderer/setRendererOptions()#java/lang/StringBuilder/StringBuilder()
org/apache/fop/render/print/PrintRenderer/setRendererOptions()#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/fop/render/print/PrintRenderer/setRendererOptions()#java/lang/StringBuilder/toString()
org/apache/fop/render/print/PrintRenderer/setRendererOptions()#org/apache/fop/render/print/PrintRenderer/getPositiveInteger(java.lang.Object)
org/apache/fop/render/print/PrintRenderer/setRendererOptions()#java/lang/Class/getName()
org/apache/fop/render/print/PrintRenderer/setRendererOptions()#java/lang/Object/getClass()
org/apache/fop/render/print/PrintRenderer/setRendererOptions()#org/apache/fop/render/print/PrintRenderer/getUserAgent()
org/apache/fop/area/AreaTreeParser/Handler/LeaderMaker/startElement(org.xml.sax.Attributes)#org/xml/sax/Attributes/getValue(java.lang.String)
org/apache/fop/area/AreaTreeParser/Handler/LeaderMaker/startElement(org.xml.sax.Attributes)#org/apache/fop/area/AreaTreeParser$Handler/access$3500(org.xml.sax.Attributes,org.apache.fop.area.AreaTreeObject)
org/apache/fop/area/AreaTreeParser/Handler/LeaderMaker/startElement(org.xml.sax.Attributes)#org/apache/fop/area/inline/Leader/setBlockProgressionOffset(int)
org/apache/fop/area/AreaTreeParser/Handler/LeaderMaker/startElement(org.xml.sax.Attributes)#org/apache/fop/area/AreaTreeParser$Handler/access$3600(org.apache.fop.area.AreaTreeParser$Handler)
org/apache/fop/area/AreaTreeParser/Handler/LeaderMaker/startElement(org.xml.sax.Attributes)#org/apache/fop/area/AreaTreeParser$Handler/access$4300(org.apache.fop.area.AreaTreeParser$Handler,org.xml.sax.Attributes,org.apache.fop.area.Area,java.lang.Object[])
org/apache/fop/area/AreaTreeParser/Handler/LeaderMaker/startElement(org.xml.sax.Attributes)#org/apache/fop/area/AreaTreeParser$Handler/access$4200()
org/apache/fop/area/AreaTreeParser/Handler/LeaderMaker/startElement(org.xml.sax.Attributes)#org/apache/fop/area/AreaTreeParser$Handler/access$4500()
org/apache/fop/area/AreaTreeParser/Handler/LeaderMaker/startElement(org.xml.sax.Attributes)#org/apache/fop/area/AreaTreeParser$Handler/access$4100(org.apache.fop.area.AreaTreeParser$Handler,org.xml.sax.Attributes,org.apache.fop.area.Area)
org/apache/fop/area/AreaTreeParser/Handler/LeaderMaker/startElement(org.xml.sax.Attributes)#java/util/Stack/peek()
org/apache/fop/area/AreaTreeParser/Handler/LeaderMaker/startElement(org.xml.sax.Attributes)#org/apache/fop/area/AreaTreeParser$Handler/access$4400()
org/apache/fop/area/AreaTreeParser/Handler/LeaderMaker/startElement(org.xml.sax.Attributes)#org/apache/fop/area/AreaTreeParser$Handler/access$5500()
org/apache/fop/layoutmgr/table/TableCellLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext,int[],int,int,int,int,boolean,boolean,org.apache.fop.layoutmgr.table.RowPainter,int)#org/apache/fop/area/Block/setBidiLevel(int)
org/apache/fop/layoutmgr/table/TableCellLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext,int[],int,int,int,int,boolean,boolean,org.apache.fop.layoutmgr.table.RowPainter,int)#org/apache/fop/layoutmgr/table/TableCellLayoutManager$TableCellBreaker/doLayout(int,boolean)
org/apache/fop/layoutmgr/table/TableCellLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext,int[],int,int,int,int,boolean,boolean,org.apache.fop.layoutmgr.table.RowPainter,int)#org/apache/fop/fo/properties/CommonBorderPaddingBackground$BorderInfo/getRetainedWidth()
org/apache/fop/layoutmgr/table/TableCellLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext,int[],int,int,int,int,boolean,boolean,org.apache.fop.layoutmgr.table.RowPainter,int)#org/apache/fop/layoutmgr/table/TableCellLayoutManager/getParent()
org/apache/fop/layoutmgr/table/TableCellLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext,int[],int,int,int,int,boolean,boolean,org.apache.fop.layoutmgr.table.RowPainter,int)#org/apache/fop/area/Block/setBPD(int)
org/apache/fop/layoutmgr/table/TableCellLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext,int[],int,int,int,int,boolean,boolean,org.apache.fop.layoutmgr.table.RowPainter,int)#org/apache/fop/fo/flow/table/PrimaryGridUnit/getBorderAfter(int)
org/apache/fop/layoutmgr/table/TableCellLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext,int[],int,int,int,int,boolean,boolean,org.apache.fop.layoutmgr.table.RowPainter,int)#org/apache/fop/layoutmgr/table/TableCellLayoutManager/flush()
org/apache/fop/layoutmgr/table/TableCellLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext,int[],int,int,int,int,boolean,boolean,org.apache.fop.layoutmgr.table.RowPainter,int)#org/apache/fop/layoutmgr/table/TableCellLayoutManager/recreateChildrenLMs()
org/apache/fop/layoutmgr/table/TableCellLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext,int[],int,int,int,int,boolean,boolean,org.apache.fop.layoutmgr.table.RowPainter,int)#org/apache/fop/layoutmgr/table/TableCellLayoutManager/getFObj()
org/apache/fop/layoutmgr/table/TableCellLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext,int[],int,int,int,int,boolean,boolean,org.apache.fop.layoutmgr.table.RowPainter,int)#org/apache/fop/layoutmgr/table/TableCellLayoutManager/getChildLMs()
org/apache/fop/layoutmgr/table/TableCellLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext,int[],int,int,int,int,boolean,boolean,org.apache.fop.layoutmgr.table.RowPainter,int)#org/apache/fop/fo/flow/table/TableCell/getTable()
org/apache/fop/layoutmgr/table/TableCellLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext,int[],int,int,int,int,boolean,boolean,org.apache.fop.layoutmgr.table.RowPainter,int)#org/apache/fop/layoutmgr/table/TableCellLayoutManager$TableCellBreaker/setDescendantOfTableFooter(boolean)
org/apache/fop/layoutmgr/table/TableCellLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext,int[],int,int,int,int,boolean,boolean,org.apache.fop.layoutmgr.table.RowPainter,int)#org/apache/fop/layoutmgr/table/TableCellLayoutManager$TableCellBreaker/setRepeatedFooter(boolean)
org/apache/fop/layoutmgr/table/TableCellLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext,int[],int,int,int,int,boolean,boolean,org.apache.fop.layoutmgr.table.RowPainter,int)#org/apache/fop/fo/flow/table/TableCell/getBidiLevelRecursive()
org/apache/fop/layoutmgr/table/TableCellLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext,int[],int,int,int,int,boolean,boolean,org.apache.fop.layoutmgr.table.RowPainter,int)#org/apache/fop/fo/flow/table/PrimaryGridUnit/getBorderEnd()
org/apache/fop/layoutmgr/table/TableCellLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext,int[],int,int,int,int,boolean,boolean,org.apache.fop.layoutmgr.table.RowPainter,int)#org/apache/fop/layoutmgr/table/TableCellLayoutManager/notifyEndOfLayout()
org/apache/fop/layoutmgr/table/TableCellLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext,int[],int,int,int,int,boolean,boolean,org.apache.fop.layoutmgr.table.RowPainter,int)#org/apache/fop/fo/flow/table/PrimaryGridUnit/getCell()
org/apache/fop/layoutmgr/table/TableCellLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext,int[],int,int,int,int,boolean,boolean,org.apache.fop.layoutmgr.table.RowPainter,int)#java/util/List/get(int)
org/apache/fop/layoutmgr/table/TableCellLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext,int[],int,int,int,int,boolean,boolean,org.apache.fop.layoutmgr.table.RowPainter,int)#org/apache/fop/fo/flow/table/PrimaryGridUnit/getBorderBefore(int)
org/apache/fop/layoutmgr/table/TableCellLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext,int[],int,int,int,int,boolean,boolean,org.apache.fop.layoutmgr.table.RowPainter,int)#org/apache/fop/fo/flow/table/PrimaryGridUnit/getBorderStart()
org/apache/fop/layoutmgr/table/TableCellLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext,int[],int,int,int,int,boolean,boolean,org.apache.fop.layoutmgr.table.RowPainter,int)#org/apache/fop/layoutmgr/table/TableCellLayoutManager/addId()
org/apache/fop/layoutmgr/table/TableCellLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext,int[],int,int,int,int,boolean,boolean,org.apache.fop.layoutmgr.table.RowPainter,int)#org/apache/fop/layoutmgr/table/TableCellLayoutManager$TableCellBreaker/TableCellBreaker(org.apache.fop.layoutmgr.table.TableCellLayoutManager,int,int)
org/apache/fop/layoutmgr/table/TableCellLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext,int[],int,int,int,int,boolean,boolean,org.apache.fop.layoutmgr.table.RowPainter,int)#org/apache/fop/layoutmgr/table/TableCellLayoutManager$TableCellBreaker/setRepeatedHeader(boolean)
org/apache/fop/layoutmgr/table/TableCellLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#org/apache/fop/layoutmgr/table/TableCellLayoutManager/setFinished(boolean)
org/apache/fop/layoutmgr/table/TableCellLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#java/util/List/isEmpty()
org/apache/fop/layoutmgr/table/TableCellLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#java/util/List/addAll(java.util.Collection)
org/apache/fop/layoutmgr/table/TableCellLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#java/util/LinkedList/LinkedList()
org/apache/fop/layoutmgr/table/TableCellLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#org/apache/fop/layoutmgr/table/TableCellLayoutManager/notifyPos(org.apache.fop.layoutmgr.Position)
org/apache/fop/layoutmgr/table/TableCellLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#java/util/List/add(java.lang.Object)
org/apache/fop/layoutmgr/table/TableCellLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#java/util/List/get(int)
org/apache/fop/layoutmgr/table/TableCellLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#org/apache/fop/layoutmgr/table/TableCellLayoutManager/getChildLM()
org/apache/fop/layoutmgr/table/TableCellLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#org/apache/fop/layoutmgr/table/TableCellLayoutManager/addInBetweenBreak(java.util.List,org.apache.fop.layoutmgr.LayoutContext,org.apache.fop.layoutmgr.LayoutContext)
org/apache/fop/layoutmgr/table/TableCellLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/fop/layoutmgr/table/TableCellLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#java/util/List/remove(int)
org/apache/fop/layoutmgr/table/TableCellLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#org/apache/fop/layoutmgr/table/TableCellLayoutManager/wrapPositionElements(java.util.List,java.util.List)
org/apache/fop/layoutmgr/table/TableCellLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#java/lang/AssertionError/AssertionError()
org/apache/fop/layoutmgr/table/TableCellLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#org/apache/fop/layoutmgr/KnuthElement/isForcedBreak()
org/apache/fop/fonts/autodetect/WindowsFontDirFinder/find()#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/fonts/autodetect/WindowsFontDirFinder/find()#java/io/File/canRead()
org/apache/fop/fonts/autodetect/WindowsFontDirFinder/find()#java/lang/String/length()
org/apache/fop/fonts/autodetect/WindowsFontDirFinder/find()#java/io/File/exists()
org/apache/fop/fonts/autodetect/WindowsFontDirFinder/find()#java/io/File/File(java.lang.String)
org/apache/fop/fonts/autodetect/WindowsFontDirFinder/find()#java/lang/String/substring(int,int)
org/apache/fop/fonts/autodetect/WindowsFontDirFinder/find()#java/util/ArrayList/ArrayList()
org/apache/fop/fonts/autodetect/WindowsFontDirFinder/find()#java/lang/System/getProperty(java.lang.String)
org/apache/fop/fonts/autodetect/WindowsFontDirFinder/find()#java/lang/StringBuilder/StringBuilder()
org/apache/fop/fonts/autodetect/WindowsFontDirFinder/find()#java/util/List/add(java.lang.Object)
org/apache/fop/fonts/autodetect/WindowsFontDirFinder/find()#java/lang/StringBuilder/append(char)
org/apache/fop/fonts/autodetect/WindowsFontDirFinder/find()#java/lang/StringBuilder/toString()
org/apache/fop/fonts/autodetect/WindowsFontDirFinder/find()#java/lang/String/endsWith(java.lang.String)
org/apache/fop/util/bitmap/JAIMonochromeBitmapConverter/convertToMonochromePlanarImage(java.awt.image.BufferedImage)#java/awt/color/ColorSpace/getNumComponents()
org/apache/fop/util/bitmap/JAIMonochromeBitmapConverter/convertToMonochromePlanarImage(java.awt.image.BufferedImage)#javax/media/jai/LookupTableJAI/LookupTableJAI(byte[])
org/apache/fop/util/bitmap/JAIMonochromeBitmapConverter/convertToMonochromePlanarImage(java.awt.image.BufferedImage)#javax/media/jai/JAI/create(java.lang.String,java.awt.image.renderable.ParameterBlock,java.awt.RenderingHints)
org/apache/fop/util/bitmap/JAIMonochromeBitmapConverter/convertToMonochromePlanarImage(java.awt.image.BufferedImage)#java/awt/image/IndexColorModel/IndexColorModel(int,int,byte[],byte[],byte[])
org/apache/fop/util/bitmap/JAIMonochromeBitmapConverter/convertToMonochromePlanarImage(java.awt.image.BufferedImage)#javax/media/jai/ColorCube/createColorCube(int,int,int[])
org/apache/fop/util/bitmap/JAIMonochromeBitmapConverter/convertToMonochromePlanarImage(java.awt.image.BufferedImage)#java/awt/image/BufferedImage/getColorModel()
org/apache/fop/util/bitmap/JAIMonochromeBitmapConverter/convertToMonochromePlanarImage(java.awt.image.BufferedImage)#javax/media/jai/ImageLayout/setColorModel(java.awt.image.ColorModel)
org/apache/fop/util/bitmap/JAIMonochromeBitmapConverter/convertToMonochromePlanarImage(java.awt.image.BufferedImage)#javax/media/jai/ImageLayout/ImageLayout()
org/apache/fop/util/bitmap/JAIMonochromeBitmapConverter/convertToMonochromePlanarImage(java.awt.image.BufferedImage)#java/awt/image/ColorModel/getColorSpace()
org/apache/fop/util/bitmap/JAIMonochromeBitmapConverter/convertToMonochromePlanarImage(java.awt.image.BufferedImage)#java/awt/image/renderable/ParameterBlock/addSource(java.lang.Object)
org/apache/fop/util/bitmap/JAIMonochromeBitmapConverter/convertToMonochromePlanarImage(java.awt.image.BufferedImage)#java/awt/image/renderable/ParameterBlock/ParameterBlock()
org/apache/fop/util/bitmap/JAIMonochromeBitmapConverter/convertToMonochromePlanarImage(java.awt.image.BufferedImage)#java/awt/RenderingHints/RenderingHints(java.awt.RenderingHints$Key,java.lang.Object)
org/apache/fop/util/bitmap/JAIMonochromeBitmapConverter/convertToMonochromePlanarImage(java.awt.image.BufferedImage)#java/awt/image/renderable/ParameterBlock/add(java.lang.Object)
org/apache/fop/svg/ACIUtils/findFontsForBatikACI(java.text.AttributedCharacterIterator,org.apache.fop.fonts.FontInfo)#java/util/Iterator/hasNext()
org/apache/fop/svg/ACIUtils/findFontsForBatikACI(java.text.AttributedCharacterIterator,org.apache.fop.fonts.FontInfo)#java/lang/StringBuilder/append(int)
org/apache/fop/svg/ACIUtils/findFontsForBatikACI(java.text.AttributedCharacterIterator,org.apache.fop.fonts.FontInfo)#java/util/List/size()
org/apache/fop/svg/ACIUtils/findFontsForBatikACI(java.text.AttributedCharacterIterator,org.apache.fop.fonts.FontInfo)#java/util/Iterator/next()
org/apache/fop/svg/ACIUtils/findFontsForBatikACI(java.text.AttributedCharacterIterator,org.apache.fop.fonts.FontInfo)#java/util/List/toArray(java.lang.Object[])
org/apache/fop/svg/ACIUtils/findFontsForBatikACI(java.text.AttributedCharacterIterator,org.apache.fop.fonts.FontInfo)#java/lang/Float/floatValue()
org/apache/fop/svg/ACIUtils/findFontsForBatikACI(java.text.AttributedCharacterIterator,org.apache.fop.fonts.FontInfo)#java/util/List/add(java.lang.Object)
org/apache/fop/svg/ACIUtils/findFontsForBatikACI(java.text.AttributedCharacterIterator,org.apache.fop.fonts.FontInfo)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/fop/svg/ACIUtils/findFontsForBatikACI(java.text.AttributedCharacterIterator,org.apache.fop.fonts.FontInfo)#java/util/List/iterator()
org/apache/fop/svg/ACIUtils/findFontsForBatikACI(java.text.AttributedCharacterIterator,org.apache.fop.fonts.FontInfo)#org/apache/batik/gvt/font/GVTFontFamily/getFamilyName()
org/apache/fop/svg/ACIUtils/findFontsForBatikACI(java.text.AttributedCharacterIterator,org.apache.fop.fonts.FontInfo)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/fop/svg/ACIUtils/findFontsForBatikACI(java.text.AttributedCharacterIterator,org.apache.fop.fonts.FontInfo)#java/util/ArrayList/ArrayList()
org/apache/fop/svg/ACIUtils/findFontsForBatikACI(java.text.AttributedCharacterIterator,org.apache.fop.fonts.FontInfo)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/svg/ACIUtils/findFontsForBatikACI(java.text.AttributedCharacterIterator,org.apache.fop.fonts.FontInfo)#java/util/List/isEmpty()
org/apache/fop/svg/ACIUtils/findFontsForBatikACI(java.text.AttributedCharacterIterator,org.apache.fop.fonts.FontInfo)#org/apache/commons/logging/Log/isDebugEnabled()
org/apache/fop/svg/ACIUtils/findFontsForBatikACI(java.text.AttributedCharacterIterator,org.apache.fop.fonts.FontInfo)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/svg/ACIUtils/findFontsForBatikACI(java.text.AttributedCharacterIterator,org.apache.fop.fonts.FontInfo)#org/apache/batik/gvt/font/GVTFont/getFamilyName()
org/apache/fop/svg/ACIUtils/findFontsForBatikACI(java.text.AttributedCharacterIterator,org.apache.fop.fonts.FontInfo)#java/lang/StringBuilder/toString()
org/apache/fop/svg/ACIUtils/findFontsForBatikACI(java.text.AttributedCharacterIterator,org.apache.fop.fonts.FontInfo)#java/text/AttributedCharacterIterator/getAttribute(java.text.AttributedCharacterIterator$Attribute)
org/apache/fop/svg/ACIUtils/dumpAttrs(java.text.AttributedCharacterIterator)#java/text/AttributedCharacterIterator/current()
org/apache/fop/svg/ACIUtils/dumpAttrs(java.text.AttributedCharacterIterator)#java/lang/StringBuilder/append(int)
org/apache/fop/svg/ACIUtils/dumpAttrs(java.text.AttributedCharacterIterator)#java/text/AttributedCharacterIterator/getRunLimit()
org/apache/fop/svg/ACIUtils/dumpAttrs(java.text.AttributedCharacterIterator)#java/util/Iterator/next()
org/apache/fop/svg/ACIUtils/dumpAttrs(java.text.AttributedCharacterIterator)#java/util/Set/iterator()
org/apache/fop/svg/ACIUtils/dumpAttrs(java.text.AttributedCharacterIterator)#java/text/AttributedCharacterIterator/first()
org/apache/fop/svg/ACIUtils/dumpAttrs(java.text.AttributedCharacterIterator)#java/text/AttributedCharacterIterator/setIndex(int)
org/apache/fop/svg/ACIUtils/dumpAttrs(java.text.AttributedCharacterIterator)#java/util/Map/entrySet()
org/apache/fop/svg/ACIUtils/dumpAttrs(java.text.AttributedCharacterIterator)#java/lang/StringBuilder/toString()
org/apache/fop/svg/ACIUtils/dumpAttrs(java.text.AttributedCharacterIterator)#java/util/Iterator/hasNext()
org/apache/fop/svg/ACIUtils/dumpAttrs(java.text.AttributedCharacterIterator)#java/text/AttributedCharacterIterator/getBeginIndex()
org/apache/fop/svg/ACIUtils/dumpAttrs(java.text.AttributedCharacterIterator)#java/io/PrintStream/print(java.lang.String)
org/apache/fop/svg/ACIUtils/dumpAttrs(java.text.AttributedCharacterIterator)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/svg/ACIUtils/dumpAttrs(java.text.AttributedCharacterIterator)#java/util/Map$Entry/getKey()
org/apache/fop/svg/ACIUtils/dumpAttrs(java.text.AttributedCharacterIterator)#java/io/PrintStream/println(java.lang.String)
org/apache/fop/svg/ACIUtils/dumpAttrs(java.text.AttributedCharacterIterator)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/svg/ACIUtils/dumpAttrs(java.text.AttributedCharacterIterator)#java/text/AttributedCharacterIterator/getAttributes()
org/apache/fop/svg/ACIUtils/dumpAttrs(java.text.AttributedCharacterIterator)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/fop/svg/ACIUtils/dumpAttrs(java.text.AttributedCharacterIterator)#java/util/Map$Entry/getValue()
org/apache/fop/layoutmgr/inline/PageNumberLayoutManager/getEffectiveArea(org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/area/inline/ResolvedPageNumber/getBlockProgressionOffset()
org/apache/fop/layoutmgr/inline/PageNumberLayoutManager/getEffectiveArea(org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/area/inline/ResolvedPageNumber/getBPD()
org/apache/fop/layoutmgr/inline/PageNumberLayoutManager/getEffectiveArea(org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/area/inline/ResolvedPageNumber/getTraits()
org/apache/fop/layoutmgr/inline/PageNumberLayoutManager/getEffectiveArea(org.apache.fop.layoutmgr.LayoutContext)#java/util/Map/putAll(java.util.Map)
org/apache/fop/layoutmgr/inline/PageNumberLayoutManager/getEffectiveArea(org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/area/inline/ResolvedPageNumber/setIPD(int)
org/apache/fop/layoutmgr/inline/PageNumberLayoutManager/getEffectiveArea(org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/area/inline/ResolvedPageNumber/setBPD(int)
org/apache/fop/layoutmgr/inline/PageNumberLayoutManager/getEffectiveArea(org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/area/inline/ResolvedPageNumber/getBaselineOffset()
org/apache/fop/layoutmgr/inline/PageNumberLayoutManager/getEffectiveArea(org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/area/inline/ResolvedPageNumber/setBlockProgressionOffset(int)
org/apache/fop/layoutmgr/inline/PageNumberLayoutManager/getEffectiveArea(org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/area/inline/ResolvedPageNumber/getIPD()
org/apache/fop/layoutmgr/inline/PageNumberLayoutManager/getEffectiveArea(org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/area/inline/ResolvedPageNumber/setBaselineOffset(int)
org/apache/fop/layoutmgr/inline/PageNumberLayoutManager/getEffectiveArea(org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/fo/flow/PageNumber/getId()
org/apache/fop/layoutmgr/inline/PageNumberLayoutManager/getEffectiveArea(org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/area/inline/ResolvedPageNumber/addTrait(java.lang.Integer,java.lang.Object)
org/apache/fop/render/pcl/PCLImageHandlerGraphics2D/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/xmlgraphics/java2d/Graphics2DImagePainter/paint(java.awt.Graphics2D,java.awt.geom.Rectangle2D)
org/apache/fop/render/pcl/PCLImageHandlerGraphics2D/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/xmlgraphics/image/loader/ImageException/getMessage()
org/apache/fop/render/pcl/PCLImageHandlerGraphics2D/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/awt/geom/AffineTransform/scale(double,double)
org/apache/fop/render/pcl/PCLImageHandlerGraphics2D/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/xmlgraphics/util/UnitConv/mm2pt(double)
org/apache/fop/render/pcl/PCLImageHandlerGraphics2D/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/awt/Dimension/getWidth()
org/apache/fop/render/pcl/PCLImageHandlerGraphics2D/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/commons/io/output/ByteArrayOutputStream/writeTo(java.io.OutputStream)
org/apache/fop/render/pcl/PCLImageHandlerGraphics2D/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/awt/Dimension/Dimension(int,int)
org/apache/fop/render/pcl/PCLImageHandlerGraphics2D/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/fop/render/pcl/PCLImageHandlerGraphics2D/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/xmlgraphics/image/loader/ImageSize/getDimensionMpt()
org/apache/fop/render/pcl/PCLImageHandlerGraphics2D/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/io/IOException/IOException(java.lang.String)
org/apache/fop/render/pcl/PCLImageHandlerGraphics2D/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/xmlgraphics/java2d/GraphicContext/clone()
org/apache/fop/render/pcl/PCLImageHandlerGraphics2D/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/render/pcl/PCLImageHandlerGraphics2D/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/xmlgraphics/image/loader/ImageManager/convertImage(org.apache.xmlgraphics.image.loader.Image,org.apache.xmlgraphics.image.loader.ImageFlavor[])
org/apache/fop/render/pcl/PCLImageHandlerGraphics2D/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/awt/geom/Rectangle2D$Double/Double(double,double,double,double)
org/apache/fop/render/pcl/PCLImageHandlerGraphics2D/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/awt/Dimension/getHeight()
org/apache/fop/render/pcl/PCLImageHandlerGraphics2D/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/xmlgraphics/image/loader/impl/ImageGraphics2D/getSize()
org/apache/fop/render/pcl/PCLImageHandlerGraphics2D/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/lang/UnsupportedOperationException/getMessage()
org/apache/fop/render/pcl/PCLImageHandlerGraphics2D/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/render/pcl/PCLImageHandlerGraphics2D/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/commons/io/output/ByteArrayOutputStream/ByteArrayOutputStream()
org/apache/fop/render/pcl/PCLImageHandlerGraphics2D/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/xmlgraphics/image/loader/impl/ImageRendered/getRenderedImage()
org/apache/fop/render/pcl/PCLImageHandlerGraphics2D/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/xmlgraphics/java2d/GraphicContext/setTransform(java.awt.geom.AffineTransform)
org/apache/fop/render/pcl/PCLImageHandlerGraphics2D/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/awt/geom/AffineTransform/AffineTransform()
org/apache/fop/render/pcl/PCLImageHandlerGraphics2D/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/xmlgraphics/image/loader/impl/ImageGraphics2D/getGraphics2DImagePainter()
org/apache/fop/render/pcl/PCLImageHandlerGraphics2D/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/awt/geom/Point2D/getX()
org/apache/fop/render/pcl/PCLImageHandlerGraphics2D/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/lang/StringBuilder/toString()
org/apache/fop/render/pcl/PCLImageHandlerGraphics2D/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/awt/geom/Point2D/getY()
org/apache/fop/render/ps/PSTextPainter/PSTextRun/paintStrokedGlyphs(org.apache.xmlgraphics.java2d.ps.PSGraphics2D,org.apache.fop.render.ps.PSTextPainter$TextUtil,java.awt.Paint,java.awt.Stroke)#java/util/Iterator/hasNext()
org/apache/fop/render/ps/PSTextPainter/PSTextRun/paintStrokedGlyphs(org.apache.xmlgraphics.java2d.ps.PSGraphics2D,org.apache.fop.render.ps.PSTextPainter$TextUtil,java.awt.Paint,java.awt.Stroke)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/render/ps/PSTextPainter/PSTextRun/paintStrokedGlyphs(org.apache.xmlgraphics.java2d.ps.PSGraphics2D,org.apache.fop.render.ps.PSTextPainter$TextUtil,java.awt.Paint,java.awt.Stroke)#java/lang/StringBuilder/append(char)
org/apache/fop/render/ps/PSTextPainter/PSTextRun/paintStrokedGlyphs(org.apache.xmlgraphics.java2d.ps.PSGraphics2D,org.apache.fop.render.ps.PSTextPainter$TextUtil,java.awt.Paint,java.awt.Stroke)#org/apache/fop/render/ps/PSTextPainter$TextUtil/setCurrentFont(org.apache.fop.fonts.Font,char)
org/apache/fop/render/ps/PSTextPainter/PSTextRun/paintStrokedGlyphs(org.apache.xmlgraphics.java2d.ps.PSGraphics2D,org.apache.fop.render.ps.PSTextPainter$TextUtil,java.awt.Paint,java.awt.Stroke)#org/apache/fop/render/ps/PSTextPainter$PSTextRun/applyColor(java.awt.Paint)
org/apache/fop/render/ps/PSTextPainter/PSTextRun/paintStrokedGlyphs(org.apache.xmlgraphics.java2d.ps.PSGraphics2D,org.apache.fop.render.ps.PSTextPainter$TextUtil,java.awt.Paint,java.awt.Stroke)#java/awt/geom/Point2D/getX()
org/apache/fop/render/ps/PSTextPainter/PSTextRun/paintStrokedGlyphs(org.apache.xmlgraphics.java2d.ps.PSGraphics2D,org.apache.fop.render.ps.PSTextPainter$TextUtil,java.awt.Paint,java.awt.Stroke)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/render/ps/PSTextPainter/PSTextRun/paintStrokedGlyphs(org.apache.xmlgraphics.java2d.ps.PSGraphics2D,org.apache.fop.render.ps.PSTextPainter$TextUtil,java.awt.Paint,java.awt.Stroke)#java/lang/StringBuffer/charAt(int)
org/apache/fop/render/ps/PSTextPainter/PSTextRun/paintStrokedGlyphs(org.apache.xmlgraphics.java2d.ps.PSGraphics2D,org.apache.fop.render.ps.PSTextPainter$TextUtil,java.awt.Paint,java.awt.Stroke)#java/awt/geom/Point2D/setLocation(double,double)
org/apache/fop/render/ps/PSTextPainter/PSTextRun/paintStrokedGlyphs(org.apache.xmlgraphics.java2d.ps.PSGraphics2D,org.apache.fop.render.ps.PSTextPainter$TextUtil,java.awt.Paint,java.awt.Stroke)#java/lang/StringBuffer/length()
org/apache/fop/render/ps/PSTextPainter/PSTextRun/paintStrokedGlyphs(org.apache.xmlgraphics.java2d.ps.PSGraphics2D,org.apache.fop.render.ps.PSTextPainter$TextUtil,java.awt.Paint,java.awt.Stroke)#java/awt/geom/Point2D$Double/Double(double,double)
org/apache/fop/render/ps/PSTextPainter/PSTextRun/paintStrokedGlyphs(org.apache.xmlgraphics.java2d.ps.PSGraphics2D,org.apache.fop.render.ps.PSTextPainter$TextUtil,java.awt.Paint,java.awt.Stroke)#org/apache/xmlgraphics/ps/PSGenerator/write(java.lang.String)
org/apache/fop/render/ps/PSTextPainter/PSTextRun/paintStrokedGlyphs(org.apache.xmlgraphics.java2d.ps.PSGraphics2D,org.apache.fop.render.ps.PSTextPainter$TextUtil,java.awt.Paint,java.awt.Stroke)#org/apache/xmlgraphics/java2d/ps/PSGraphics2D/applyStroke(java.awt.Stroke,org.apache.xmlgraphics.ps.PSGenerator)
org/apache/fop/render/ps/PSTextPainter/PSTextRun/paintStrokedGlyphs(org.apache.xmlgraphics.java2d.ps.PSGraphics2D,org.apache.fop.render.ps.PSTextPainter$TextUtil,java.awt.Paint,java.awt.Stroke)#java/util/Iterator/next()
org/apache/fop/render/ps/PSTextPainter/PSTextRun/paintStrokedGlyphs(org.apache.xmlgraphics.java2d.ps.PSGraphics2D,org.apache.fop.render.ps.PSTextPainter$TextUtil,java.awt.Paint,java.awt.Stroke)#org/apache/xmlgraphics/ps/PSGenerator/writeln(java.lang.String)
org/apache/fop/render/ps/PSTextPainter/PSTextRun/paintStrokedGlyphs(org.apache.xmlgraphics.java2d.ps.PSGraphics2D,org.apache.fop.render.ps.PSTextPainter$TextUtil,java.awt.Paint,java.awt.Stroke)#org/apache/xmlgraphics/ps/PSGenerator/formatDouble5(double)
org/apache/fop/render/ps/PSTextPainter/PSTextRun/paintStrokedGlyphs(org.apache.xmlgraphics.java2d.ps.PSGraphics2D,org.apache.fop.render.ps.PSTextPainter$TextUtil,java.awt.Paint,java.awt.Stroke)#java/util/List/iterator()
org/apache/fop/render/ps/PSTextPainter/PSTextRun/paintStrokedGlyphs(org.apache.xmlgraphics.java2d.ps.PSGraphics2D,org.apache.fop.render.ps.PSTextPainter$TextUtil,java.awt.Paint,java.awt.Stroke)#java/lang/StringBuilder/toString()
org/apache/fop/render/ps/PSTextPainter/PSTextRun/paintStrokedGlyphs(org.apache.xmlgraphics.java2d.ps.PSGraphics2D,org.apache.fop.render.ps.PSTextPainter$TextUtil,java.awt.Paint,java.awt.Stroke)#java/awt/geom/Point2D/getY()
org/apache/fop/render/ps/PSTextPainter/PSTextRun/paintStrokedGlyphs(org.apache.xmlgraphics.java2d.ps.PSGraphics2D,org.apache.fop.render.ps.PSTextPainter$TextUtil,java.awt.Paint,java.awt.Stroke)#org/apache/fop/render/ps/PSTextPainter$TextUtil/selectFont(org.apache.fop.fonts.Font,char)
org/apache/fop/render/ps/PSTextPainter/PSTextRun/paintXYShow(org.apache.xmlgraphics.java2d.ps.PSGraphics2D,org.apache.fop.render.ps.PSTextPainter$TextUtil,java.awt.Paint,boolean,boolean)#org/apache/fop/render/ps/PSTextPainter$TextUtil/isMultiByte(org.apache.fop.fonts.Font)
org/apache/fop/render/ps/PSTextPainter/PSTextRun/paintXYShow(org.apache.xmlgraphics.java2d.ps.PSGraphics2D,org.apache.fop.render.ps.PSTextPainter$TextUtil,java.awt.Paint,boolean,boolean)#java/util/Iterator/hasNext()
org/apache/fop/render/ps/PSTextPainter/PSTextRun/paintXYShow(org.apache.xmlgraphics.java2d.ps.PSGraphics2D,org.apache.fop.render.ps.PSTextPainter$TextUtil,java.awt.Paint,boolean,boolean)#java/lang/StringBuffer/charAt(int)
org/apache/fop/render/ps/PSTextPainter/PSTextRun/paintXYShow(org.apache.xmlgraphics.java2d.ps.PSGraphics2D,org.apache.fop.render.ps.PSTextPainter$TextUtil,java.awt.Paint,boolean,boolean)#org/apache/fop/render/ps/PSTextPainter$PSTextRun/format(org.apache.xmlgraphics.ps.PSGenerator,double)
org/apache/fop/render/ps/PSTextPainter/PSTextRun/paintXYShow(org.apache.xmlgraphics.java2d.ps.PSGraphics2D,org.apache.fop.render.ps.PSTextPainter$TextUtil,java.awt.Paint,boolean,boolean)#java/lang/StringBuffer/length()
org/apache/fop/render/ps/PSTextPainter/PSTextRun/paintXYShow(org.apache.xmlgraphics.java2d.ps.PSGraphics2D,org.apache.fop.render.ps.PSTextPainter$TextUtil,java.awt.Paint,boolean,boolean)#org/apache/fop/render/ps/PSTextPainter$TextUtil/setCurrentFont(org.apache.fop.fonts.Font,char)
org/apache/fop/render/ps/PSTextPainter/PSTextRun/paintXYShow(org.apache.xmlgraphics.java2d.ps.PSGraphics2D,org.apache.fop.render.ps.PSTextPainter$TextUtil,java.awt.Paint,boolean,boolean)#org/apache/fop/render/ps/PSTextPainter$PSTextRun/applyColor(java.awt.Paint)
org/apache/fop/render/ps/PSTextPainter/PSTextRun/paintXYShow(org.apache.xmlgraphics.java2d.ps.PSGraphics2D,org.apache.fop.render.ps.PSTextPainter$TextUtil,java.awt.Paint,boolean,boolean)#java/lang/StringBuffer/append(char)
org/apache/fop/render/ps/PSTextPainter/PSTextRun/paintXYShow(org.apache.xmlgraphics.java2d.ps.PSGraphics2D,org.apache.fop.render.ps.PSTextPainter$TextUtil,java.awt.Paint,boolean,boolean)#java/util/Iterator/next()
org/apache/fop/render/ps/PSTextPainter/PSTextRun/paintXYShow(org.apache.xmlgraphics.java2d.ps.PSGraphics2D,org.apache.fop.render.ps.PSTextPainter$TextUtil,java.awt.Paint,boolean,boolean)#org/apache/xmlgraphics/ps/PSGenerator/writeln(java.lang.String)
org/apache/fop/render/ps/PSTextPainter/PSTextRun/paintXYShow(org.apache.xmlgraphics.java2d.ps.PSGraphics2D,org.apache.fop.render.ps.PSTextPainter$TextUtil,java.awt.Paint,boolean,boolean)#org/apache/xmlgraphics/ps/PSGenerator/escapeChar(char,java.lang.StringBuffer)
org/apache/fop/render/ps/PSTextPainter/PSTextRun/paintXYShow(org.apache.xmlgraphics.java2d.ps.PSGraphics2D,org.apache.fop.render.ps.PSTextPainter$TextUtil,java.awt.Paint,boolean,boolean)#java/lang/StringBuffer/toString()
org/apache/fop/render/ps/PSTextPainter/PSTextRun/paintXYShow(org.apache.xmlgraphics.java2d.ps.PSGraphics2D,org.apache.fop.render.ps.PSTextPainter$TextUtil,java.awt.Paint,boolean,boolean)#java/util/List/iterator()
org/apache/fop/render/ps/PSTextPainter/PSTextRun/paintXYShow(org.apache.xmlgraphics.java2d.ps.PSGraphics2D,org.apache.fop.render.ps.PSTextPainter$TextUtil,java.awt.Paint,boolean,boolean)#java/lang/StringBuffer/append(java.lang.String)
org/apache/fop/render/ps/PSTextPainter/PSTextRun/paintXYShow(org.apache.xmlgraphics.java2d.ps.PSGraphics2D,org.apache.fop.render.ps.PSTextPainter$TextUtil,java.awt.Paint,boolean,boolean)#java/awt/geom/Point2D/getX()
org/apache/fop/render/ps/PSTextPainter/PSTextRun/paintXYShow(org.apache.xmlgraphics.java2d.ps.PSGraphics2D,org.apache.fop.render.ps.PSTextPainter$TextUtil,java.awt.Paint,boolean,boolean)#java/lang/StringBuffer/StringBuffer()
org/apache/fop/render/ps/PSTextPainter/PSTextRun/paintXYShow(org.apache.xmlgraphics.java2d.ps.PSGraphics2D,org.apache.fop.render.ps.PSTextPainter$TextUtil,java.awt.Paint,boolean,boolean)#java/awt/geom/Point2D/getY()
org/apache/fop/render/ps/PSTextPainter/PSTextRun/paintXYShow(org.apache.xmlgraphics.java2d.ps.PSGraphics2D,org.apache.fop.render.ps.PSTextPainter$TextUtil,java.awt.Paint,boolean,boolean)#org/apache/fop/render/ps/PSTextPainter$TextUtil/selectFont(org.apache.fop.fonts.Font,char)
org/apache/fop/render/intermediate/AbstractBinaryWritingIFDocumentHandler/setResult(javax.xml.transform.Result)#javax/xml/transform/stream/StreamResult/getSystemId()
org/apache/fop/render/intermediate/AbstractBinaryWritingIFDocumentHandler/setResult(javax.xml.transform.Result)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/render/intermediate/AbstractBinaryWritingIFDocumentHandler/setResult(javax.xml.transform.Result)#javax/xml/transform/stream/StreamResult/getWriter()
org/apache/fop/render/intermediate/AbstractBinaryWritingIFDocumentHandler/setResult(javax.xml.transform.Result)#java/lang/Class/getName()
org/apache/fop/render/intermediate/AbstractBinaryWritingIFDocumentHandler/setResult(javax.xml.transform.Result)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/render/intermediate/AbstractBinaryWritingIFDocumentHandler/setResult(javax.xml.transform.Result)#java/lang/Object/getClass()
org/apache/fop/render/intermediate/AbstractBinaryWritingIFDocumentHandler/setResult(javax.xml.transform.Result)#javax/xml/transform/stream/StreamResult/getOutputStream()
org/apache/fop/render/intermediate/AbstractBinaryWritingIFDocumentHandler/setResult(javax.xml.transform.Result)#java/lang/StringBuilder/toString()
org/apache/fop/render/intermediate/AbstractBinaryWritingIFDocumentHandler/setResult(javax.xml.transform.Result)#java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)
org/apache/fop/render/intermediate/AbstractBinaryWritingIFDocumentHandler/setResult(javax.xml.transform.Result)#java/net/URI/create(java.lang.String)
org/apache/fop/render/intermediate/AbstractBinaryWritingIFDocumentHandler/setResult(javax.xml.transform.Result)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/fop/render/intermediate/AbstractBinaryWritingIFDocumentHandler/setResult(javax.xml.transform.Result)#org/apache/fop/render/intermediate/AbstractBinaryWritingIFDocumentHandler/getUserAgent()
org/apache/fop/render/intermediate/AbstractBinaryWritingIFDocumentHandler/setResult(javax.xml.transform.Result)#java/io/BufferedOutputStream/BufferedOutputStream(java.io.OutputStream)
org/apache/fop/render/rtf/PageAttributesConverter/convertPageAttributes(org.apache.fop.fo.pagination.SimplePageMaster)#java/lang/Integer/intValue()
org/apache/fop/render/rtf/PageAttributesConverter/convertPageAttributes(org.apache.fop.fo.pagination.SimplePageMaster)#org/apache/fop/render/rtf/FOPRtfAttributes/set(java.lang.String)
org/apache/fop/render/rtf/PageAttributesConverter/convertPageAttributes(org.apache.fop.fo.pagination.SimplePageMaster)#org/apache/fop/render/rtf/FOPRtfAttributes/getValue(java.lang.String)
org/apache/fop/render/rtf/PageAttributesConverter/convertPageAttributes(org.apache.fop.fo.pagination.SimplePageMaster)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/render/rtf/PageAttributesConverter/convertPageAttributes(org.apache.fop.fo.pagination.SimplePageMaster)#org/apache/fop/fo/pagination/RegionBA/getExtent()
org/apache/fop/render/rtf/PageAttributesConverter/convertPageAttributes(org.apache.fop.fo.pagination.SimplePageMaster)#org/apache/fop/render/rtf/FOPRtfAttributes/set(java.lang.String,java.lang.String)
org/apache/fop/render/rtf/PageAttributesConverter/convertPageAttributes(org.apache.fop.fo.pagination.SimplePageMaster)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/render/rtf/PageAttributesConverter/convertPageAttributes(org.apache.fop.fo.pagination.SimplePageMaster)#org/apache/commons/logging/Log/error(java.lang.Object)
org/apache/fop/render/rtf/PageAttributesConverter/convertPageAttributes(org.apache.fop.fo.pagination.SimplePageMaster)#java/lang/StringBuilder/toString()
org/apache/fop/render/rtf/PageAttributesConverter/convertPageAttributes(org.apache.fop.fo.pagination.SimplePageMaster)#java/lang/Exception/getMessage()
org/apache/fop/afp/AFPStreamer/getResourceGroup(org.apache.fop.afp.AFPResourceLevel)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/fop/afp/AFPStreamer/getResourceGroup(org.apache.fop.afp.AFPResourceLevel)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/afp/AFPStreamer/getResourceGroup(org.apache.fop.afp.AFPResourceLevel)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/afp/AFPStreamer/getResourceGroup(org.apache.fop.afp.AFPResourceLevel)#org/apache/commons/logging/Log/error(java.lang.Object)
org/apache/fop/afp/AFPStreamer/getResourceGroup(org.apache.fop.afp.AFPResourceLevel)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/fop/afp/AFPStreamer/getResourceGroup(org.apache.fop.afp.AFPResourceLevel)#org/apache/commons/logging/Log/warn(java.lang.Object)
org/apache/fop/afp/AFPStreamer/getResourceGroup(org.apache.fop.afp.AFPResourceLevel)#java/util/Map/get(java.lang.Object)
org/apache/fop/afp/AFPStreamer/getResourceGroup(org.apache.fop.afp.AFPResourceLevel)#java/io/BufferedOutputStream/BufferedOutputStream(java.io.OutputStream)
org/apache/fop/afp/AFPStreamer/getResourceGroup(org.apache.fop.afp.AFPResourceLevel)#java/lang/StringBuilder/toString()
org/apache/fop/complexscripts/fonts/GlyphSubstitutionTable/ContextualSubtableFormat2/populate(java.util.List)#java/lang/Integer/intValue()
org/apache/fop/complexscripts/fonts/GlyphSubstitutionTable/ContextualSubtableFormat2/populate(java.util.List)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/complexscripts/fonts/GlyphSubstitutionTable/ContextualSubtableFormat2/populate(java.util.List)#java/lang/StringBuilder/append(int)
org/apache/fop/complexscripts/fonts/GlyphSubstitutionTable/ContextualSubtableFormat2/populate(java.util.List)#java/util/List/size()
org/apache/fop/complexscripts/fonts/GlyphSubstitutionTable/ContextualSubtableFormat2/populate(java.util.List)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/complexscripts/fonts/GlyphSubstitutionTable/ContextualSubtableFormat2/populate(java.util.List)#java/util/List/get(int)
org/apache/fop/complexscripts/fonts/GlyphSubstitutionTable/ContextualSubtableFormat2/populate(java.util.List)#java/lang/StringBuilder/toString()
org/apache/fop/complexscripts/fonts/GlyphSubstitutionTable/ContextualSubtableFormat2/populate(java.util.List)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/fop/complexscripts/fonts/GlyphSubstitutionTable/ContextualSubtableFormat2/populate(java.util.List)#java/lang/Object/getClass()
org/apache/fop/tools/fontlist/FontListMain/writeToConsole(java.util.SortedMap)#java/io/PrintStream/flush()
org/apache/fop/tools/fontlist/FontListMain/writeToConsole(java.util.SortedMap)#java/util/Map$Entry/getKey()
org/apache/fop/tools/fontlist/FontListMain/writeToConsole(java.util.SortedMap)#java/lang/StringBuffer/append(java.lang.Object)
org/apache/fop/tools/fontlist/FontListMain/writeToConsole(java.util.SortedMap)#java/util/Iterator/next()
org/apache/fop/tools/fontlist/FontListMain/writeToConsole(java.util.SortedMap)#java/lang/StringBuffer/toString()
org/apache/fop/tools/fontlist/FontListMain/writeToConsole(java.util.SortedMap)#java/util/Set/iterator()
org/apache/fop/tools/fontlist/FontListMain/writeToConsole(java.util.SortedMap)#java/lang/StringBuffer/StringBuffer()
org/apache/fop/tools/fontlist/FontListMain/writeToConsole(java.util.SortedMap)#java/util/Iterator/hasNext()
org/apache/fop/tools/fontlist/FontListMain/writeToConsole(java.util.SortedMap)#java/io/PrintStream/print(java.lang.String)
org/apache/fop/tools/fontlist/FontListMain/writeToConsole(java.util.SortedMap)#java/lang/StringBuffer/append(char)
org/apache/fop/tools/fontlist/FontListMain/writeToConsole(java.util.SortedMap)#java/net/URI/toString()
org/apache/fop/tools/fontlist/FontListMain/writeToConsole(java.util.SortedMap)#java/util/Map$Entry/getValue()
org/apache/fop/tools/fontlist/FontListMain/writeToConsole(java.util.SortedMap)#java/util/SortedMap/entrySet()
org/apache/fop/tools/fontlist/FontListMain/writeToConsole(java.util.SortedMap)#java/util/List/iterator()
org/apache/fop/tools/fontlist/FontListMain/writeToConsole(java.util.SortedMap)#java/util/Collection/iterator()
org/apache/fop/tools/fontlist/FontListMain/writeToConsole(java.util.SortedMap)#java/lang/StringBuffer/append(java.lang.String)
org/apache/fop/tools/fontlist/FontListMain/generateXML(java.util.SortedMap,java.io.File,java.lang.String)#javax/xml/transform/sax/SAXTransformerFactory/newTransformerHandler()
org/apache/fop/tools/fontlist/FontListMain/generateXML(java.util.SortedMap,java.io.File,java.lang.String)#javax/xml/transform/Transformer/setParameter(java.lang.String,java.lang.Object)
org/apache/fop/tools/fontlist/FontListMain/generateXML(java.util.SortedMap,java.io.File,java.lang.String)#java/net/URL/toExternalForm()
org/apache/fop/tools/fontlist/FontListMain/generateXML(java.util.SortedMap,java.io.File,java.lang.String)#javax/xml/transform/sax/TransformerHandler/setResult(javax.xml.transform.Result)
org/apache/fop/tools/fontlist/FontListMain/generateXML(java.util.SortedMap,java.io.File,java.lang.String)#javax/xml/transform/sax/SAXResult/SAXResult(org.xml.sax.ContentHandler)
org/apache/fop/tools/fontlist/FontListMain/generateXML(java.util.SortedMap,java.io.File,java.lang.String)#javax/xml/transform/sax/SAXTransformerFactory/newTransformerHandler(javax.xml.transform.Source)
org/apache/fop/tools/fontlist/FontListMain/generateXML(java.util.SortedMap,java.io.File,java.lang.String)#org/apache/commons/io/IOUtils/closeQuietly(java.io.OutputStream)
org/apache/fop/tools/fontlist/FontListMain/generateXML(java.util.SortedMap,java.io.File,java.lang.String)#javax/xml/transform/stream/StreamResult/StreamResult(java.io.OutputStream)
org/apache/fop/tools/fontlist/FontListMain/generateXML(java.util.SortedMap,java.io.File,java.lang.String)#java/io/BufferedOutputStream/BufferedOutputStream(java.io.OutputStream)
org/apache/fop/tools/fontlist/FontListMain/generateXML(java.util.SortedMap,java.io.File,java.lang.String)#java/io/FileNotFoundException/FileNotFoundException(java.lang.String)
org/apache/fop/tools/fontlist/FontListMain/generateXML(java.util.SortedMap,java.io.File,java.lang.String)#java/io/FileOutputStream/FileOutputStream(java.io.File)
org/apache/fop/tools/fontlist/FontListMain/generateXML(java.util.SortedMap,java.io.File,java.lang.String)#javax/xml/transform/sax/SAXTransformerFactory/newInstance()
org/apache/fop/tools/fontlist/FontListMain/generateXML(java.util.SortedMap,java.io.File,java.lang.String)#javax/xml/transform/sax/TransformerHandler/getTransformer()
org/apache/fop/tools/fontlist/FontListMain/generateXML(java.util.SortedMap,java.io.File,java.lang.String)#javax/xml/transform/stream/StreamSource/StreamSource(java.lang.String)
org/apache/fop/tools/fontlist/FontListMain/generateXML(java.util.SortedMap,java.io.File,java.lang.String)#java/lang/Class/getResource(java.lang.String)
org/apache/fop/tools/fontlist/FontListMain/generateXML(java.util.SortedMap,java.io.File,java.lang.String)#java/lang/Object/getClass()
org/apache/fop/tools/fontlist/FontListMain/writeOutput(java.util.SortedMap)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/apache/fop/tools/fontlist/FontListMain/writeOutput(java.util.SortedMap)#java/io/File/File(java.io.File,java.lang.String)
org/apache/fop/tools/fontlist/FontListMain/writeOutput(java.util.SortedMap)#java/util/Iterator/next()
org/apache/fop/tools/fontlist/FontListMain/writeOutput(java.util.SortedMap)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/tools/fontlist/FontListMain/writeOutput(java.util.SortedMap)#java/util/Set/iterator()
org/apache/fop/tools/fontlist/FontListMain/writeOutput(java.util.SortedMap)#java/lang/StringBuilder/toString()
org/apache/fop/tools/fontlist/FontListMain/writeOutput(java.util.SortedMap)#java/util/Iterator/hasNext()
org/apache/fop/tools/fontlist/FontListMain/writeOutput(java.util.SortedMap)#java/io/File/isDirectory()
org/apache/fop/tools/fontlist/FontListMain/writeOutput(java.util.SortedMap)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/tools/fontlist/FontListMain/writeOutput(java.util.SortedMap)#java/util/Map$Entry/getKey()
org/apache/fop/tools/fontlist/FontListMain/writeOutput(java.util.SortedMap)#java/io/PrintStream/println(java.lang.String)
org/apache/fop/tools/fontlist/FontListMain/writeOutput(java.util.SortedMap)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/fop/tools/fontlist/FontListMain/writeOutput(java.util.SortedMap)#java/util/SortedMap/entrySet()
org/apache/fop/tools/fontlist/FontListMain/parseArguments(java.lang.String[])#java/lang/String/equalsIgnoreCase(java.lang.String)
org/apache/fop/tools/fontlist/FontListMain/parseArguments(java.lang.String[])#java/io/File/isDirectory()
org/apache/fop/tools/fontlist/FontListMain/parseArguments(java.lang.String[])#java/lang/String/equals(java.lang.Object)
org/apache/fop/tools/fontlist/FontListMain/parseArguments(java.lang.String[])#java/lang/StringBuilder/StringBuilder()
org/apache/fop/tools/fontlist/FontListMain/parseArguments(java.lang.String[])#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/fop/tools/fontlist/FontListMain/parseArguments(java.lang.String[])#java/lang/StringBuilder/toString()
org/apache/fop/tools/fontlist/FontListMain/parseArguments(java.lang.String[])#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/tools/fontlist/FontListMain/parseArguments(java.lang.String[])#java/io/PrintStream/println(java.lang.String)
org/apache/fop/tools/fontlist/FontListMain/parseArguments(java.lang.String[])#org/apache/commons/io/FilenameUtils/getExtension(java.lang.String)
org/apache/fop/tools/fontlist/FontListMain/parseArguments(java.lang.String[])#java/lang/System/exit(int)
org/apache/fop/tools/fontlist/FontListMain/parseArguments(java.lang.String[])#java/io/File/File(java.lang.String)
org/apache/fop/layoutmgr/FlowLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int,org.apache.fop.layoutmgr.Position,org.apache.fop.layoutmgr.LayoutManager)#org/apache/fop/layoutmgr/FlowLayoutManager/setCurrentChildLM(org.apache.fop.layoutmgr.LayoutManager)
org/apache/fop/layoutmgr/FlowLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int,org.apache.fop.layoutmgr.Position,org.apache.fop.layoutmgr.LayoutManager)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/apache/fop/layoutmgr/FlowLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int,org.apache.fop.layoutmgr.Position,org.apache.fop.layoutmgr.LayoutManager)#java/util/Stack/Stack()
org/apache/fop/layoutmgr/FlowLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int,org.apache.fop.layoutmgr.Position,org.apache.fop.layoutmgr.LayoutManager)#java/util/Stack/push(java.lang.Object)
org/apache/fop/layoutmgr/FlowLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int,org.apache.fop.layoutmgr.Position,org.apache.fop.layoutmgr.LayoutManager)#org/apache/fop/layoutmgr/FlowLayoutManager/setFinished(boolean)
org/apache/fop/layoutmgr/FlowLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int,org.apache.fop.layoutmgr.Position,org.apache.fop.layoutmgr.LayoutManager)#java/util/LinkedList/LinkedList()
org/apache/fop/layoutmgr/FlowLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int,org.apache.fop.layoutmgr.Position,org.apache.fop.layoutmgr.LayoutManager)#org/apache/fop/layoutmgr/FlowLayoutManager/getChildLM()
org/apache/fop/layoutmgr/FlowLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int,org.apache.fop.layoutmgr.Position,org.apache.fop.layoutmgr.LayoutManager)#java/util/List/isEmpty()
org/apache/fop/layoutmgr/FlowLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int,org.apache.fop.layoutmgr.Position,org.apache.fop.layoutmgr.LayoutManager)#java/lang/AssertionError/AssertionError()
org/apache/fop/layoutmgr/FlowLayoutManager/getChangedKnuthElements(java.util.List,int)#java/util/ListIterator/remove()
org/apache/fop/layoutmgr/FlowLayoutManager/getChangedKnuthElements(java.util.List,int)#java/util/ListIterator/hasNext()
org/apache/fop/layoutmgr/FlowLayoutManager/getChangedKnuthElements(java.util.List,int)#java/util/List/subList(int,int)
org/apache/fop/layoutmgr/FlowLayoutManager/getChangedKnuthElements(java.util.List,int)#java/util/List/size()
org/apache/fop/layoutmgr/FlowLayoutManager/getChangedKnuthElements(java.util.List,int)#java/util/List/addAll(java.util.Collection)
org/apache/fop/layoutmgr/FlowLayoutManager/getChangedKnuthElements(java.util.List,int)#org/apache/fop/layoutmgr/BlockLevelLayoutManager/getChangedKnuthElements(java.util.List,int)
org/apache/fop/layoutmgr/FlowLayoutManager/getChangedKnuthElements(java.util.List,int)#java/util/List/add(java.lang.Object)
org/apache/fop/layoutmgr/FlowLayoutManager/getChangedKnuthElements(java.util.List,int)#java/util/List/listIterator()
org/apache/fop/layoutmgr/FlowLayoutManager/getChangedKnuthElements(java.util.List,int)#org/apache/fop/layoutmgr/KnuthElement/getPosition()
org/apache/fop/layoutmgr/FlowLayoutManager/getChangedKnuthElements(java.util.List,int)#org/apache/fop/layoutmgr/KnuthElement/getLayoutManager()
org/apache/fop/layoutmgr/FlowLayoutManager/getChangedKnuthElements(java.util.List,int)#java/util/ListIterator/previousIndex()
org/apache/fop/layoutmgr/FlowLayoutManager/getChangedKnuthElements(java.util.List,int)#java/util/ListIterator/next()
org/apache/fop/layoutmgr/FlowLayoutManager/getChangedKnuthElements(java.util.List,int)#java/util/LinkedList/LinkedList()
org/apache/fop/layoutmgr/FlowLayoutManager/getChangedKnuthElements(java.util.List,int)#org/apache/fop/layoutmgr/KnuthElement/isGlue()
org/apache/fop/layoutmgr/FlowLayoutManager/getChangedKnuthElements(java.util.List,int)#org/apache/fop/layoutmgr/KnuthElement/setPosition(org.apache.fop.layoutmgr.Position)
org/apache/fop/render/pdf/extensions/PDFCollectionEntryElement/endOfNode()#java/lang/Math/floor(double)
org/apache/fop/render/pdf/extensions/PDFCollectionEntryElement/endOfNode()#java/lang/Boolean/valueOf(java.lang.String)
org/apache/fop/render/pdf/extensions/PDFCollectionEntryElement/endOfNode()#org/apache/fop/render/pdf/extensions/PDFCollectionEntryElement/invalidPropertyValueError(java.lang.String,java.lang.String,java.lang.Exception)
org/apache/fop/render/pdf/extensions/PDFCollectionEntryElement/endOfNode()#java/lang/Math/abs(double)
org/apache/fop/render/pdf/extensions/PDFCollectionEntryElement/endOfNode()#org/apache/fop/render/pdf/extensions/AbstractPDFExtensionElement/endOfNode()
org/apache/fop/render/pdf/extensions/PDFCollectionEntryElement/endOfNode()#java/lang/String/length()
org/apache/fop/render/pdf/extensions/PDFCollectionEntryElement/endOfNode()#org/apache/fop/render/pdf/extensions/PDFCollectionEntryExtension/setValue(java.lang.Object)
org/apache/fop/render/pdf/extensions/PDFCollectionEntryElement/endOfNode()#java/lang/Double/parseDouble(java.lang.String)
org/apache/fop/render/pdf/extensions/PDFCollectionEntryElement/endOfNode()#org/apache/fop/render/pdf/extensions/PDFCollectionEntryExtension/getType()
org/apache/fop/render/pdf/extensions/PDFCollectionEntryElement/endOfNode()#java/lang/Double/valueOf(double)
org/apache/fop/render/pdf/extensions/PDFCollectionEntryElement/endOfNode()#java/lang/Long/valueOf(long)
org/apache/fop/render/pdf/extensions/PDFCollectionEntryElement/endOfNode()#java/lang/String/equals(java.lang.Object)
org/apache/fop/render/pdf/extensions/PDFCollectionEntryElement/endOfNode()#java/lang/StringBuffer/toString()
org/apache/fop/complexscripts/util/CharScript/dominantScript(java.lang.CharSequence)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/fop/complexscripts/util/CharScript/dominantScript(java.lang.CharSequence)#java/util/Map$Entry/getKey()
org/apache/fop/complexscripts/util/CharScript/dominantScript(java.lang.CharSequence)#java/util/Map/get(java.lang.Object)
org/apache/fop/complexscripts/util/CharScript/dominantScript(java.lang.CharSequence)#java/lang/CharSequence/charAt(int)
org/apache/fop/complexscripts/util/CharScript/dominantScript(java.lang.CharSequence)#java/util/Set/iterator()
org/apache/fop/complexscripts/util/CharScript/dominantScript(java.lang.CharSequence)#java/lang/Integer/valueOf(int)
org/apache/fop/complexscripts/util/CharScript/dominantScript(java.lang.CharSequence)#java/util/Map$Entry/getValue()
org/apache/fop/complexscripts/util/CharScript/dominantScript(java.lang.CharSequence)#java/util/Map/entrySet()
org/apache/fop/complexscripts/util/CharScript/dominantScript(java.lang.CharSequence)#java/lang/AssertionError/AssertionError()
org/apache/fop/complexscripts/util/CharScript/dominantScript(java.lang.CharSequence)#java/lang/Integer/intValue()
org/apache/fop/complexscripts/util/CharScript/dominantScript(java.lang.CharSequence)#java/util/Iterator/hasNext()
org/apache/fop/complexscripts/util/CharScript/dominantScript(java.lang.CharSequence)#java/lang/CharSequence/length()
org/apache/fop/complexscripts/util/CharScript/dominantScript(java.lang.CharSequence)#java/util/Iterator/next()
org/apache/fop/complexscripts/util/CharScript/dominantScript(java.lang.CharSequence)#java/util/HashMap/HashMap()
org/apache/fop/complexscripts/util/CharScript/scriptsOf(java.lang.CharSequence)#java/util/Set/size()
org/apache/fop/complexscripts/util/CharScript/scriptsOf(java.lang.CharSequence)#java/lang/CharSequence/charAt(int)
org/apache/fop/complexscripts/util/CharScript/scriptsOf(java.lang.CharSequence)#java/util/Iterator/next()
org/apache/fop/complexscripts/util/CharScript/scriptsOf(java.lang.CharSequence)#java/util/Set/iterator()
org/apache/fop/complexscripts/util/CharScript/scriptsOf(java.lang.CharSequence)#java/lang/Integer/valueOf(int)
org/apache/fop/complexscripts/util/CharScript/scriptsOf(java.lang.CharSequence)#java/util/HashSet/HashSet()
org/apache/fop/complexscripts/util/CharScript/scriptsOf(java.lang.CharSequence)#java/util/Set/add(java.lang.Object)
org/apache/fop/complexscripts/util/CharScript/scriptsOf(java.lang.CharSequence)#java/lang/Integer/intValue()
org/apache/fop/complexscripts/util/CharScript/scriptsOf(java.lang.CharSequence)#java/util/Iterator/hasNext()
org/apache/fop/complexscripts/util/CharScript/scriptsOf(java.lang.CharSequence)#java/lang/CharSequence/length()
org/apache/fop/complexscripts/util/CharScript/scriptsOf(java.lang.CharSequence)#java/util/Arrays/sort(int[])
org/apache/fop/render/rtf/rtflib/rtfdoc/WhitespaceCollapser/processString(java.lang.String)#java/lang/Character/isWhitespace(char)
org/apache/fop/render/rtf/rtflib/rtfdoc/WhitespaceCollapser/processString(java.lang.String)#java/lang/StringBuffer/StringBuffer(int)
org/apache/fop/render/rtf/rtflib/rtfdoc/WhitespaceCollapser/processString(java.lang.String)#java/lang/String/length()
org/apache/fop/render/rtf/rtflib/rtfdoc/WhitespaceCollapser/processString(java.lang.String)#java/lang/StringBuffer/toString()
org/apache/fop/render/rtf/rtflib/rtfdoc/WhitespaceCollapser/processString(java.lang.String)#java/util/StringTokenizer/nextToken()
org/apache/fop/render/rtf/rtflib/rtfdoc/WhitespaceCollapser/processString(java.lang.String)#java/lang/StringBuffer/append(java.lang.String)
org/apache/fop/render/rtf/rtflib/rtfdoc/WhitespaceCollapser/processString(java.lang.String)#java/util/StringTokenizer/hasMoreTokens()
org/apache/fop/render/rtf/rtflib/rtfdoc/WhitespaceCollapser/processString(java.lang.String)#java/lang/String/charAt(int)
org/apache/fop/render/rtf/rtflib/rtfdoc/WhitespaceCollapser/processString(java.lang.String)#java/util/StringTokenizer/StringTokenizer(java.lang.String,java.lang.String)
org/apache/fop/render/rtf/rtflib/rtfdoc/WhitespaceCollapser/processString(java.lang.String)#java/lang/String/trim()
org/apache/fop/render/java2d/Java2DPainter/drawText(int,int,int,int,int[][],java.lang.String)#java/awt/Graphics2D/getFontRenderContext()
org/apache/fop/render/java2d/Java2DPainter/drawText(int,int,int,int,int[][],java.lang.String)#java/awt/Font/createGlyphVector(java.awt.font.FontRenderContext,java.lang.String)
org/apache/fop/render/java2d/Java2DPainter/drawText(int,int,int,int,int[][],java.lang.String)#java/awt/Graphics2D/drawGlyphVector(java.awt.font.GlyphVector,float,float)
org/apache/fop/render/java2d/Java2DPainter/drawText(int,int,int,int,int[][],java.lang.String)#java/lang/String/length()
org/apache/fop/render/java2d/Java2DPainter/drawText(int,int,int,int,int[][],java.lang.String)#java/awt/geom/Point2D$Float/Float(float,float)
org/apache/fop/render/java2d/Java2DPainter/drawText(int,int,int,int,int[][],java.lang.String)#java/awt/geom/Point2D/getY()
org/apache/fop/render/java2d/Java2DPainter/drawText(int,int,int,int,int[][],java.lang.String)#java/lang/String/charAt(int)
org/apache/fop/render/java2d/Java2DPainter/drawText(int,int,int,int,int[][],java.lang.String)#java/awt/font/GlyphVector/setGlyphPosition(int,java.awt.geom.Point2D)
org/apache/fop/render/java2d/Java2DPainter/drawText(int,int,int,int,int[][],java.lang.String)#java/awt/geom/Point2D/setLocation(double,double)
org/apache/fop/render/java2d/Java2DPainter/drawText(int,int,int,int,int[][],java.lang.String)#java/awt/Graphics2D/getFont()
org/apache/fop/render/java2d/Java2DPainter/drawText(int,int,int,int,int[][],java.lang.String)#java/awt/geom/Point2D/getX()
org/apache/fop/layoutmgr/BlockLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext)#java/util/LinkedList/listIterator()
org/apache/fop/layoutmgr/BlockLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/layoutmgr/BlockLayoutManager/isLast(org.apache.fop.layoutmgr.Position)
org/apache/fop/layoutmgr/BlockLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/layoutmgr/BlockLayoutManager/registerMarkers(boolean,boolean,boolean)
org/apache/fop/layoutmgr/BlockLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext)#java/util/LinkedList/add(java.lang.Object)
org/apache/fop/layoutmgr/BlockLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext)#java/util/LinkedList/LinkedList()
org/apache/fop/layoutmgr/BlockLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/layoutmgr/BlockLayoutManager/checkEndOfLayout(org.apache.fop.layoutmgr.Position)
org/apache/fop/layoutmgr/BlockLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/layoutmgr/BlockLayoutManager/isFirst(org.apache.fop.layoutmgr.Position)
org/apache/fop/layoutmgr/BlockLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/layoutmgr/BlockLayoutManager/addBlockSpacing(double,org.apache.fop.traits.MinOptMax)
org/apache/fop/layoutmgr/BlockLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/layoutmgr/BlockLayoutManager/addId()
org/apache/fop/fonts/truetype/OpenFont/readUnicodeCmap(long,int)#java/util/Iterator/hasNext()
org/apache/fop/fonts/truetype/OpenFont/readUnicodeCmap(long,int)#java/lang/Integer/Integer(int)
org/apache/fop/fonts/truetype/OpenFont/readUnicodeCmap(long,int)#java/lang/StringBuilder/append(int)
org/apache/fop/fonts/truetype/OpenFont/readUnicodeCmap(long,int)#java/lang/Integer/toHexString(int)
org/apache/fop/fonts/truetype/OpenFont/readUnicodeCmap(long,int)#java/util/Iterator/next()
org/apache/fop/fonts/truetype/OpenFont/readUnicodeCmap(long,int)#java/util/BitSet/BitSet(int)
org/apache/fop/fonts/truetype/OpenFont/readUnicodeCmap(long,int)#java/util/BitSet/set(int)
org/apache/fop/fonts/truetype/OpenFont/readUnicodeCmap(long,int)#org/apache/commons/logging/Log/isTraceEnabled()
org/apache/fop/fonts/truetype/OpenFont/readUnicodeCmap(long,int)#java/util/List/iterator()
org/apache/fop/fonts/truetype/OpenFont/readUnicodeCmap(long,int)#java/lang/StringBuilder/toString()
org/apache/fop/fonts/truetype/OpenFont/readUnicodeCmap(long,int)#java/lang/Integer/intValue()
org/apache/fop/fonts/truetype/OpenFont/readUnicodeCmap(long,int)#java/util/BitSet/get(int)
org/apache/fop/fonts/truetype/OpenFont/readUnicodeCmap(long,int)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/fop/fonts/truetype/OpenFont/readUnicodeCmap(long,int)#org/apache/fop/fonts/truetype/OpenFont$UnicodeMapping/UnicodeMapping(org.apache.fop.fonts.truetype.OpenFont,int,int)
org/apache/fop/fonts/truetype/OpenFont/readUnicodeCmap(long,int)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/fonts/truetype/OpenFont/readUnicodeCmap(long,int)#org/apache/commons/logging/Log/isDebugEnabled()
org/apache/fop/fonts/truetype/OpenFont/readUnicodeCmap(long,int)#java/util/Map/get(java.lang.Object)
org/apache/fop/fonts/truetype/OpenFont/readUnicodeCmap(long,int)#java/util/List/size()
org/apache/fop/fonts/truetype/OpenFont/readUnicodeCmap(long,int)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/fonts/truetype/OpenFont/readUnicodeCmap(long,int)#org/apache/commons/logging/Log/trace(java.lang.Object)
org/apache/fop/fonts/truetype/OpenFont/readUnicodeCmap(long,int)#java/util/List/add(java.lang.Object)
org/apache/fop/fonts/truetype/OpenFont/readUnicodeCmap(long,int)#org/apache/commons/logging/Log/error(java.lang.Object)
org/apache/fop/fonts/truetype/OpenFont/main(java.lang.String[])#org/apache/commons/io/IOUtils/closeQuietly(java.io.InputStream)
org/apache/fop/fonts/truetype/OpenFont/main(java.lang.String[])#java/io/FileInputStream/FileInputStream(java.lang.String)
org/apache/fop/fonts/truetype/OpenFont/main(java.lang.String[])#java/io/IOException/printStackTrace(java.io.PrintStream)
org/apache/fop/fonts/truetype/OpenFont/main(java.lang.String[])#java/lang/StringBuilder/StringBuilder()
org/apache/fop/fonts/truetype/OpenFont/main(java.lang.String[])#java/lang/StringBuilder/toString()
org/apache/fop/fonts/truetype/OpenFont/main(java.lang.String[])#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/fonts/truetype/OpenFont/main(java.lang.String[])#java/io/IOException/toString()
org/apache/fop/fonts/truetype/OpenFont/main(java.lang.String[])#java/io/PrintStream/println(java.lang.String)
org/apache/fop/fonts/truetype/OpenFont/main(java.lang.String[])#java/lang/String/equals(java.lang.Object)
org/apache/fop/fonts/truetype/OpenFont/getTTCnames(org.apache.fop.fonts.truetype.FontFileReader)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/fonts/truetype/OpenFont/getTTCnames(org.apache.fop.fonts.truetype.FontFileReader)#java/lang/StringBuilder/append(int)
org/apache/fop/fonts/truetype/OpenFont/getTTCnames(org.apache.fop.fonts.truetype.FontFileReader)#org/apache/commons/logging/Log/info(java.lang.Object)
org/apache/fop/fonts/truetype/OpenFont/getTTCnames(org.apache.fop.fonts.truetype.FontFileReader)#java/lang/String/equals(java.lang.Object)
org/apache/fop/fonts/truetype/OpenFont/getTTCnames(org.apache.fop.fonts.truetype.FontFileReader)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/fonts/truetype/OpenFont/getTTCnames(org.apache.fop.fonts.truetype.FontFileReader)#java/util/Set/clear()
org/apache/fop/fonts/truetype/OpenFont/getTTCnames(org.apache.fop.fonts.truetype.FontFileReader)#java/util/ArrayList/ArrayList()
org/apache/fop/fonts/truetype/OpenFont/getTTCnames(org.apache.fop.fonts.truetype.FontFileReader)#java/util/List/add(java.lang.Object)
org/apache/fop/fonts/truetype/OpenFont/getTTCnames(org.apache.fop.fonts.truetype.FontFileReader)#org/apache/commons/logging/Log/error(java.lang.Object)
org/apache/fop/fonts/truetype/OpenFont/getTTCnames(org.apache.fop.fonts.truetype.FontFileReader)#java/lang/StringBuilder/toString()
org/apache/fop/fonts/truetype/OpenFont/readPostScript()#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/fonts/truetype/OpenFont/readPostScript()#java/lang/StringBuilder/append(int)
org/apache/fop/fonts/truetype/OpenFont/readPostScript()#java/lang/Integer/toHexString(int)
org/apache/fop/fonts/truetype/OpenFont/readPostScript()#org/apache/commons/logging/Log/error(java.lang.Object)
org/apache/fop/fonts/truetype/OpenFont/readPostScript()#org/apache/commons/logging/Log/isTraceEnabled()
org/apache/fop/fonts/truetype/OpenFont/readPostScript()#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/fop/fonts/truetype/OpenFont/readPostScript()#org/apache/commons/logging/Log/isDebugEnabled()
org/apache/fop/fonts/truetype/OpenFont/readPostScript()#java/lang/StringBuilder/StringBuilder()
org/apache/fop/fonts/truetype/OpenFont/readPostScript()#org/apache/commons/logging/Log/trace(java.lang.Object)
org/apache/fop/fonts/truetype/OpenFont/readPostScript()#java/lang/StringBuilder/toString()
org/apache/fop/fonts/truetype/OpenFont/readDirTabs()#java/lang/StringBuilder/append(int)
org/apache/fop/fonts/truetype/OpenFont/readDirTabs()#java/lang/Integer/toHexString(int)
org/apache/fop/fonts/truetype/OpenFont/readDirTabs()#java/lang/StringBuilder/StringBuilder()
org/apache/fop/fonts/truetype/OpenFont/readDirTabs()#java/lang/StringBuilder/append(java.lang.Object)
org/apache/fop/fonts/truetype/OpenFont/readDirTabs()#java/lang/StringBuilder/toString()
org/apache/fop/fonts/truetype/OpenFont/readDirTabs()#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/fop/fonts/truetype/OpenFont/readDirTabs()#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/fop/fonts/truetype/OpenFont/readDirTabs()#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/fonts/truetype/OpenFont/readDirTabs()#java/util/HashMap/HashMap()
org/apache/fop/fonts/truetype/OpenFont/readDirTabs()#java/util/Map/keySet()
org/apache/fop/fonts/truetype/OpenFont/guessVerticalMetricsFromGlyphBBox()#java/lang/Integer/intValue()
org/apache/fop/fonts/truetype/OpenFont/guessVerticalMetricsFromGlyphBBox()#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/fonts/truetype/OpenFont/guessVerticalMetricsFromGlyphBBox()#java/util/List/size()
org/apache/fop/fonts/truetype/OpenFont/guessVerticalMetricsFromGlyphBBox()#java/lang/String/equals(java.lang.Object)
org/apache/fop/fonts/truetype/OpenFont/guessVerticalMetricsFromGlyphBBox()#java/lang/StringBuilder/StringBuilder()
org/apache/fop/fonts/truetype/OpenFont/guessVerticalMetricsFromGlyphBBox()#java/util/List/get(int)
org/apache/fop/fonts/truetype/OpenFont/guessVerticalMetricsFromGlyphBBox()#java/lang/StringBuilder/toString()
org/apache/fop/fonts/truetype/OpenFont/guessVerticalMetricsFromGlyphBBox()#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/fop/fonts/truetype/OpenFont/guessVerticalMetricsFromGlyphBBox()#org/apache/commons/logging/Log/isDebugEnabled()
org/apache/fop/fonts/truetype/OpenFont/readKerning()#java/lang/Integer/intValue()
org/apache/fop/fonts/truetype/OpenFont/readKerning()#java/util/Iterator/hasNext()
org/apache/fop/fonts/truetype/OpenFont/readKerning()#java/lang/Integer/Integer(int)
org/apache/fop/fonts/truetype/OpenFont/readKerning()#java/lang/StringBuilder/append(int)
org/apache/fop/fonts/truetype/OpenFont/readKerning()#java/lang/StringBuilder/StringBuilder()
org/apache/fop/fonts/truetype/OpenFont/readKerning()#java/util/Set/iterator()
org/apache/fop/fonts/truetype/OpenFont/readKerning()#java/util/List/listIterator()
org/apache/fop/fonts/truetype/OpenFont/readKerning()#java/util/Map$Entry/getValue()
org/apache/fop/fonts/truetype/OpenFont/readKerning()#java/util/Map/entrySet()
org/apache/fop/fonts/truetype/OpenFont/readKerning()#java/lang/StringBuilder/toString()
org/apache/fop/fonts/truetype/OpenFont/readKerning()#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/fop/fonts/truetype/OpenFont/readKerning()#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/fop/fonts/truetype/OpenFont/readKerning()#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/fonts/truetype/OpenFont/readKerning()#java/util/Map$Entry/getKey()
org/apache/fop/fonts/truetype/OpenFont/readKerning()#java/util/Map/get(java.lang.Object)
org/apache/fop/fonts/truetype/OpenFont/readKerning()#java/util/Map/size()
org/apache/fop/fonts/truetype/OpenFont/readKerning()#java/util/Iterator/next()
org/apache/fop/fonts/truetype/OpenFont/readKerning()#java/util/HashMap/HashMap()
org/apache/fop/area/inline/InlineParent/addChildArea(org.apache.fop.area.Area)#org/apache/fop/area/inline/InlineArea/getAllocIPD()
org/apache/fop/area/inline/InlineParent/addChildArea(org.apache.fop.area.Area)#java/lang/Math/max(int,int)
org/apache/fop/area/inline/InlineParent/addChildArea(org.apache.fop.area.Area)#java/util/List/size()
org/apache/fop/area/inline/InlineParent/addChildArea(org.apache.fop.area.Area)#org/apache/fop/area/inline/InlineArea/getBidiLevel()
org/apache/fop/area/inline/InlineParent/addChildArea(org.apache.fop.area.Area)#java/util/List/add(java.lang.Object)
org/apache/fop/area/inline/InlineParent/addChildArea(org.apache.fop.area.Area)#java/lang/AssertionError/AssertionError()
org/apache/fop/area/inline/InlineParent/addChildArea(org.apache.fop.area.Area)#org/apache/fop/area/inline/InlineParent/increaseIPD(int)
org/apache/fop/area/inline/InlineParent/addChildArea(org.apache.fop.area.Area)#java/lang/Math/min(int,int)
org/apache/fop/area/inline/InlineParent/addChildArea(org.apache.fop.area.Area)#org/apache/fop/area/inline/InlineParent/getIPD()
org/apache/fop/render/AbstractGraphics2DAdapter/paintToBufferedImage(org.apache.xmlgraphics.java2d.Graphics2DImagePainter,org.apache.fop.render.RendererContext$RendererContextWrapper,int,boolean,boolean)#org/apache/xmlgraphics/java2d/Graphics2DImagePainter/paint(java.awt.Graphics2D,java.awt.geom.Rectangle2D)
org/apache/fop/render/AbstractGraphics2DAdapter/paintToBufferedImage(org.apache.xmlgraphics.java2d.Graphics2DImagePainter,org.apache.fop.render.RendererContext$RendererContextWrapper,int,boolean,boolean)#org/apache/fop/render/RendererContext$RendererContextWrapper/getWidth()
org/apache/fop/render/AbstractGraphics2DAdapter/paintToBufferedImage(org.apache.xmlgraphics.java2d.Graphics2DImagePainter,org.apache.fop.render.RendererContext$RendererContextWrapper,int,boolean,boolean)#org/apache/fop/render/RendererContext$RendererContextWrapper/getHeight()
org/apache/fop/render/AbstractGraphics2DAdapter/paintToBufferedImage(org.apache.xmlgraphics.java2d.Graphics2DImagePainter,org.apache.fop.render.RendererContext$RendererContextWrapper,int,boolean,boolean)#java/awt/geom/Rectangle2D$Double/Double(double,double,double,double)
org/apache/fop/render/AbstractGraphics2DAdapter/paintToBufferedImage(org.apache.xmlgraphics.java2d.Graphics2DImagePainter,org.apache.fop.render.RendererContext$RendererContextWrapper,int,boolean,boolean)#java/awt/Graphics2D/setBackground(java.awt.Color)
org/apache/fop/render/AbstractGraphics2DAdapter/paintToBufferedImage(org.apache.xmlgraphics.java2d.Graphics2DImagePainter,org.apache.fop.render.RendererContext$RendererContextWrapper,int,boolean,boolean)#java/awt/Graphics2D/clearRect(int,int,int,int)
org/apache/fop/render/AbstractGraphics2DAdapter/paintToBufferedImage(org.apache.xmlgraphics.java2d.Graphics2DImagePainter,org.apache.fop.render.RendererContext$RendererContextWrapper,int,boolean,boolean)#java/awt/Graphics2D/dispose()
org/apache/fop/render/AbstractGraphics2DAdapter/paintToBufferedImage(org.apache.xmlgraphics.java2d.Graphics2DImagePainter,org.apache.fop.render.RendererContext$RendererContextWrapper,int,boolean,boolean)#java/awt/image/BufferedImage/BufferedImage(int,int,int)
org/apache/fop/render/AbstractGraphics2DAdapter/paintToBufferedImage(org.apache.xmlgraphics.java2d.Graphics2DImagePainter,org.apache.fop.render.RendererContext$RendererContextWrapper,int,boolean,boolean)#java/awt/Graphics2D/scale(double,double)
org/apache/fop/render/AbstractGraphics2DAdapter/paintToBufferedImage(org.apache.xmlgraphics.java2d.Graphics2DImagePainter,org.apache.fop.render.RendererContext$RendererContextWrapper,int,boolean,boolean)#java/awt/image/BufferedImage/createGraphics()
org/apache/fop/render/AbstractGraphics2DAdapter/paintToBufferedImage(org.apache.xmlgraphics.java2d.Graphics2DImagePainter,org.apache.fop.render.RendererContext$RendererContextWrapper,int,boolean,boolean)#java/awt/Graphics2D/setColor(java.awt.Color)
org/apache/fop/render/AbstractGraphics2DAdapter/paintToBufferedImage(org.apache.xmlgraphics.java2d.Graphics2DImagePainter,org.apache.fop.render.RendererContext$RendererContextWrapper,int,boolean,boolean)#java/awt/Graphics2D/setRenderingHint(java.awt.RenderingHints$Key,java.lang.Object)
org/apache/fop/render/ps/ImageEncoderPNG/writeTo(java.io.OutputStream)#org/apache/commons/io/IOUtils/closeQuietly(java.io.InputStream)
org/apache/fop/render/ps/ImageEncoderPNG/writeTo(java.io.OutputStream)#org/apache/xmlgraphics/image/loader/ImageSize/getWidthPx()
org/apache/fop/render/ps/ImageEncoderPNG/writeTo(java.io.OutputStream)#java/io/ByteArrayInputStream/ByteArrayInputStream(byte[])
org/apache/fop/render/ps/ImageEncoderPNG/writeTo(java.io.OutputStream)#java/util/zip/DeflaterOutputStream/DeflaterOutputStream(java.io.OutputStream,java.util.zip.Deflater)
org/apache/fop/render/ps/ImageEncoderPNG/writeTo(java.io.OutputStream)#java/util/zip/DeflaterOutputStream/write(byte[],int,int)
org/apache/fop/render/ps/ImageEncoderPNG/writeTo(java.io.OutputStream)#org/apache/xmlgraphics/image/loader/impl/ImageRawStream/createInputStream()
org/apache/fop/render/ps/ImageEncoderPNG/writeTo(java.io.OutputStream)#org/apache/xmlgraphics/image/loader/impl/ImageRawPNG/getSize()
org/apache/fop/render/ps/ImageEncoderPNG/writeTo(java.io.OutputStream)#java/io/DataInputStream/readFully(byte[],int,int)
org/apache/fop/render/ps/ImageEncoderPNG/writeTo(java.io.OutputStream)#org/apache/commons/io/IOUtils/closeQuietly(java.io.OutputStream)
org/apache/fop/render/ps/ImageEncoderPNG/writeTo(java.io.OutputStream)#java/util/zip/DeflaterOutputStream/write(int)
org/apache/fop/render/ps/ImageEncoderPNG/writeTo(java.io.OutputStream)#java/io/DataInputStream/read()
org/apache/fop/render/ps/ImageEncoderPNG/writeTo(java.io.OutputStream)#java/io/ByteArrayOutputStream/ByteArrayOutputStream()
org/apache/fop/render/ps/ImageEncoderPNG/writeTo(java.io.OutputStream)#java/util/zip/Inflater/Inflater()
org/apache/fop/render/ps/ImageEncoderPNG/writeTo(java.io.OutputStream)#org/apache/commons/io/IOUtils/copy(java.io.InputStream,java.io.OutputStream)
org/apache/fop/render/ps/ImageEncoderPNG/writeTo(java.io.OutputStream)#java/util/zip/Deflater/Deflater()
org/apache/fop/render/ps/ImageEncoderPNG/writeTo(java.io.OutputStream)#java/io/DataInputStream/DataInputStream(java.io.InputStream)
org/apache/fop/render/ps/ImageEncoderPNG/writeTo(java.io.OutputStream)#java/util/zip/InflaterInputStream/InflaterInputStream(java.io.InputStream,java.util.zip.Inflater)
org/apache/fop/render/ps/ImageEncoderPNG/writeTo(java.io.OutputStream)#java/util/zip/DeflaterOutputStream/close()
org/apache/fop/render/ps/ImageEncoderPNG/writeTo(java.io.OutputStream)#java/io/ByteArrayOutputStream/toByteArray()
org/apache/fop/pdf/PDFNumsArray/output(java.io.OutputStream)#java/util/Iterator/hasNext()
org/apache/fop/pdf/PDFNumsArray/output(java.io.OutputStream)#org/apache/commons/io/output/CountingOutputStream/getCount()
org/apache/fop/pdf/PDFNumsArray/output(java.io.OutputStream)#java/util/Iterator/next()
org/apache/fop/pdf/PDFNumsArray/output(java.io.OutputStream)#java/util/Set/iterator()
org/apache/fop/pdf/PDFNumsArray/output(java.io.OutputStream)#java/lang/StringBuilder/append(char)
org/apache/fop/pdf/PDFNumsArray/output(java.io.OutputStream)#org/apache/fop/pdf/PDFNumsArray/formatObject(java.lang.Object,java.io.OutputStream,java.lang.StringBuilder)
org/apache/fop/pdf/PDFNumsArray/output(java.io.OutputStream)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/pdf/PDFNumsArray/output(java.io.OutputStream)#java/util/Map$Entry/getKey()
org/apache/fop/pdf/PDFNumsArray/output(java.io.OutputStream)#org/apache/commons/io/output/CountingOutputStream/CountingOutputStream(java.io.OutputStream)
org/apache/fop/pdf/PDFNumsArray/output(java.io.OutputStream)#java/lang/StringBuilder/StringBuilder(int)
org/apache/fop/pdf/PDFNumsArray/output(java.io.OutputStream)#java/util/Map$Entry/getValue()
org/apache/fop/pdf/PDFNumsArray/output(java.io.OutputStream)#java/util/SortedMap/entrySet()
org/apache/fop/area/AreaTreeHandler/Statistics/logResults()#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/fop/area/AreaTreeHandler/Statistics/logResults()#java/lang/Math/round(double)
org/apache/fop/area/AreaTreeHandler/Statistics/logResults()#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/area/AreaTreeHandler/Statistics/logResults()#java/lang/StringBuilder/append(int)
org/apache/fop/area/AreaTreeHandler/Statistics/logResults()#java/lang/StringBuilder/append(long)
org/apache/fop/area/AreaTreeHandler/Statistics/logResults()#java/lang/Runtime/freeMemory()
org/apache/fop/area/AreaTreeHandler/Statistics/logResults()#java/lang/StringBuilder/StringBuilder()
org/apache/fop/area/AreaTreeHandler/Statistics/logResults()#java/lang/Runtime/totalMemory()
org/apache/fop/area/AreaTreeHandler/Statistics/logResults()#java/lang/System/currentTimeMillis()
org/apache/fop/area/AreaTreeHandler/Statistics/logResults()#java/lang/StringBuilder/toString()
org/apache/fop/render/pdf/ImageRenderedAdapter/setup(org.apache.fop.pdf.PDFDocument)#org/apache/xmlgraphics/image/loader/Image/getInfo()
org/apache/fop/render/pdf/ImageRenderedAdapter/setup(org.apache.fop.pdf.PDFDocument)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/render/pdf/ImageRenderedAdapter/setup(org.apache.fop.pdf.PDFDocument)#org/apache/xmlgraphics/image/loader/ImageInfo/getOriginalURI()
org/apache/fop/render/pdf/ImageRenderedAdapter/setup(org.apache.fop.pdf.PDFDocument)#java/awt/image/ColorModel/getTransparency()
org/apache/fop/render/pdf/ImageRenderedAdapter/setup(org.apache.fop.pdf.PDFDocument)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/render/pdf/ImageRenderedAdapter/setup(org.apache.fop.pdf.PDFDocument)#org/apache/fop/render/pdf/ImageRenderedAdapter/getKey()
org/apache/fop/render/pdf/ImageRenderedAdapter/setup(org.apache.fop.pdf.PDFDocument)#java/lang/StringBuilder/toString()
org/apache/fop/render/pdf/ImageRenderedAdapter/setup(org.apache.fop.pdf.PDFDocument)#org/apache/xmlgraphics/image/loader/impl/ImageRendered/getRenderedImage()
org/apache/fop/render/pdf/ImageRenderedAdapter/setup(org.apache.fop.pdf.PDFDocument)#java/awt/image/ColorModel/hasAlpha()
org/apache/fop/render/pdf/ImageRenderedAdapter/setup(org.apache.fop.pdf.PDFDocument)#org/apache/fop/pdf/PDFImageXObject/makeReference()
org/apache/fop/render/pdf/ImageRenderedAdapter/setup(org.apache.fop.pdf.PDFDocument)#java/awt/image/RenderedImage/getColorModel()
org/apache/fop/render/pdf/ImageRenderedAdapter/outputContents(java.io.OutputStream)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/fop/render/pdf/ImageRenderedAdapter/outputContents(java.io.OutputStream)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/render/pdf/ImageRenderedAdapter/outputContents(java.io.OutputStream)#org/apache/commons/logging/Log/isDebugEnabled()
org/apache/fop/render/pdf/ImageRenderedAdapter/outputContents(java.io.OutputStream)#org/apache/xmlgraphics/ps/ImageEncodingHelper/encode(java.io.OutputStream)
org/apache/fop/render/pdf/ImageRenderedAdapter/outputContents(java.io.OutputStream)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/render/pdf/ImageRenderedAdapter/outputContents(java.io.OutputStream)#java/lang/System/currentTimeMillis()
org/apache/fop/render/pdf/ImageRenderedAdapter/outputContents(java.io.OutputStream)#java/lang/StringBuilder/toString()
org/apache/fop/render/pdf/ImageRenderedAdapter/outputContents(java.io.OutputStream)#org/apache/xmlgraphics/ps/ImageEncodingHelper/setBWInvert(boolean)
org/apache/fop/render/pdf/ImageRenderedAdapter/outputContents(java.io.OutputStream)#java/lang/StringBuilder/append(long)
org/apache/fop/layoutmgr/table/TableLayoutManager/resolveRetrieveTableMarker(org.apache.fop.fo.flow.RetrieveTableMarker)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/fop/layoutmgr/table/TableLayoutManager/resolveRetrieveTableMarker(org.apache.fop.fo.flow.RetrieveTableMarker)#org/apache/fop/fo/flow/RetrieveTableMarker/bindMarker(org.apache.fop.fo.flow.Marker)
org/apache/fop/layoutmgr/table/TableLayoutManager/resolveRetrieveTableMarker(org.apache.fop.fo.flow.RetrieveTableMarker)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/layoutmgr/table/TableLayoutManager/resolveRetrieveTableMarker(org.apache.fop.fo.flow.RetrieveTableMarker)#org/apache/fop/fo/flow/RetrieveTableMarker/getRetrieveClassName()
org/apache/fop/layoutmgr/table/TableLayoutManager/resolveRetrieveTableMarker(org.apache.fop.fo.flow.RetrieveTableMarker)#org/apache/fop/fo/flow/RetrieveTableMarker/changePositionTo(int)
org/apache/fop/layoutmgr/table/TableLayoutManager/resolveRetrieveTableMarker(org.apache.fop.fo.flow.RetrieveTableMarker)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/layoutmgr/table/TableLayoutManager/resolveRetrieveTableMarker(org.apache.fop.fo.flow.RetrieveTableMarker)#org/apache/fop/fo/flow/RetrieveTableMarker/getBoundary()
org/apache/fop/layoutmgr/table/TableLayoutManager/resolveRetrieveTableMarker(org.apache.fop.fo.flow.RetrieveTableMarker)#org/apache/fop/layoutmgr/table/TableLayoutManager/getCurrentPV()
org/apache/fop/layoutmgr/table/TableLayoutManager/resolveRetrieveTableMarker(org.apache.fop.fo.flow.RetrieveTableMarker)#org/apache/fop/fo/flow/RetrieveTableMarker/getPosition()
org/apache/fop/layoutmgr/table/TableLayoutManager/resolveRetrieveTableMarker(org.apache.fop.fo.flow.RetrieveTableMarker)#java/lang/StringBuilder/toString()
org/apache/fop/layoutmgr/table/TableLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/area/Block/setBPD(int)
org/apache/fop/layoutmgr/table/TableLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/layoutmgr/table/TableLayoutManager/addBlockSpacing(double,org.apache.fop.traits.MinOptMax)
org/apache/fop/layoutmgr/table/TableLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext)#java/util/Iterator/hasNext()
org/apache/fop/layoutmgr/table/TableLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/layoutmgr/table/TableLayoutManager/flush()
org/apache/fop/layoutmgr/table/TableLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/layoutmgr/table/TableLayoutManager/getContentAreaIPD()
org/apache/fop/layoutmgr/table/TableLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext)#java/util/Iterator/next()
org/apache/fop/layoutmgr/table/TableLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/layoutmgr/table/TableLayoutManager/notifyEndOfLayout()
org/apache/fop/layoutmgr/table/TableLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext)#java/util/List/clear()
org/apache/fop/layoutmgr/table/TableLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/area/Block/getYOffset()
org/apache/fop/layoutmgr/table/TableLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/layoutmgr/table/TableLayoutManager$ColumnBackgroundInfo/access$100(org.apache.fop.layoutmgr.table.TableLayoutManager$ColumnBackgroundInfo)
org/apache/fop/layoutmgr/table/TableLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/layoutmgr/table/TableLayoutManager$ColumnBackgroundInfo/access$200(org.apache.fop.layoutmgr.table.TableLayoutManager$ColumnBackgroundInfo)
org/apache/fop/layoutmgr/table/TableLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/layoutmgr/table/TableLayoutManager$ColumnBackgroundInfo/access$300(org.apache.fop.layoutmgr.table.TableLayoutManager$ColumnBackgroundInfo)
org/apache/fop/layoutmgr/table/TableLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext)#java/util/List/iterator()
org/apache/fop/layoutmgr/table/TableLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/layoutmgr/table/TableLayoutManager/addId()
org/apache/fop/layoutmgr/table/TableLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#java/util/Iterator/next()
org/apache/fop/layoutmgr/table/TableLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#org/apache/fop/layoutmgr/table/TableLayoutManager/notifyPos(org.apache.fop.layoutmgr.Position)
org/apache/fop/layoutmgr/table/TableLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#org/apache/fop/fo/flow/table/Table/getName()
org/apache/fop/layoutmgr/table/TableLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#org/apache/fop/layoutmgr/table/TableLayoutManager/getParent()
org/apache/fop/layoutmgr/table/TableLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/fop/layoutmgr/table/TableLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#org/apache/fop/layoutmgr/table/TableLayoutManager/addKnuthElementsForSpaceAfter(java.util.List,int)
org/apache/fop/layoutmgr/table/TableLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#java/util/Iterator/hasNext()
org/apache/fop/layoutmgr/table/TableLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#org/apache/fop/layoutmgr/table/TableLayoutManager/setFinished(boolean)
org/apache/fop/layoutmgr/table/TableLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#org/apache/fop/layoutmgr/table/TableLayoutManager/addPendingMarks(org.apache.fop.layoutmgr.LayoutContext)
org/apache/fop/layoutmgr/table/TableLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#org/apache/fop/layoutmgr/table/TableLayoutManager/updateContentAreaIPDwithOverconstrainedAdjust(int)
org/apache/fop/layoutmgr/table/TableLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#org/apache/fop/layoutmgr/table/TableLayoutManager/addKnuthElementsForSpaceBefore(java.util.List,int)
org/apache/fop/layoutmgr/table/TableLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#org/apache/fop/layoutmgr/table/TableLayoutManager/addKnuthElementsForBorderPaddingAfter(java.util.List,boolean)
org/apache/fop/layoutmgr/table/TableLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#org/apache/fop/layoutmgr/table/TableLayoutManager/updateContentAreaIPDwithOverconstrainedAdjust()
org/apache/fop/layoutmgr/table/TableLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#org/apache/fop/layoutmgr/table/TableLayoutManager/getContentAreaIPD()
org/apache/fop/layoutmgr/table/TableLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#org/apache/fop/layoutmgr/table/TableLayoutManager/addKnuthElementsForBorderPaddingBefore(java.util.List,boolean)
org/apache/fop/layoutmgr/table/TableLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#java/util/LinkedList/LinkedList()
org/apache/fop/layoutmgr/table/TableLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#org/apache/fop/layoutmgr/table/TableLayoutManager/getKeepWithNext()
org/apache/fop/layoutmgr/table/TableLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#org/apache/fop/layoutmgr/BlockLevelEventProducer$Provider/get(org.apache.fop.events.EventBroadcaster)
org/apache/fop/layoutmgr/table/TableLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#java/util/List/add(java.lang.Object)
org/apache/fop/layoutmgr/table/TableLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#org/apache/fop/fo/flow/table/Table/getLocator()
org/apache/fop/layoutmgr/table/TableLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#java/util/List/add(int,java.lang.Object)
org/apache/fop/layoutmgr/table/TableLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#org/apache/fop/layoutmgr/table/TableLayoutManager/getKeepWithPrevious()
org/apache/fop/layoutmgr/table/TableLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#java/util/List/iterator()
org/apache/fop/layoutmgr/table/TableLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#org/apache/fop/fo/flow/table/Table/getUserAgent()
org/apache/fop/layoutmgr/table/TableLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#org/apache/fop/layoutmgr/table/TableLayoutManager/wrapPositionElements(java.util.List,java.util.List)
org/apache/fop/layoutmgr/table/TableLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#org/apache/fop/layoutmgr/table/TableLayoutManager/getIPIndents()
org/apache/fop/render/awt/AWTRenderer/getPageImageSize(int)#java/awt/Dimension/Dimension(int,int)
org/apache/fop/render/awt/AWTRenderer/getPageImageSize(int)#java/lang/Math/round(double)
org/apache/fop/render/awt/AWTRenderer/getPageImageSize(int)#org/apache/fop/area/PageViewport/getForeignAttributes()
org/apache/fop/render/awt/AWTRenderer/getPageImageSize(int)#org/apache/fop/render/awt/AWTRenderer/getPageViewport(int)
org/apache/fop/render/awt/AWTRenderer/getPageImageSize(int)#java/awt/geom/Rectangle2D/getWidth()
org/apache/fop/render/awt/AWTRenderer/getPageImageSize(int)#java/awt/geom/Rectangle2D/getHeight()
org/apache/fop/render/awt/AWTRenderer/getPageImageSize(int)#java/awt/geom/Point2D/getX()
org/apache/fop/render/awt/AWTRenderer/getPageImageSize(int)#java/awt/geom/Point2D/getY()
org/apache/fop/render/awt/AWTRenderer/getPageImageSize(int)#java/util/Map/get(java.lang.Object)
org/apache/fop/render/awt/AWTRenderer/getPageFormat(int)#java/awt/print/Paper/setSize(double,double)
org/apache/fop/render/awt/AWTRenderer/getPageFormat(int)#org/apache/fop/render/awt/AWTRenderer/getNumberOfPages()
org/apache/fop/render/awt/AWTRenderer/getPageFormat(int)#java/awt/print/PageFormat/setOrientation(int)
org/apache/fop/render/awt/AWTRenderer/getPageFormat(int)#java/lang/IndexOutOfBoundsException/IndexOutOfBoundsException(java.lang.String)
org/apache/fop/render/awt/AWTRenderer/getPageFormat(int)#java/awt/geom/Rectangle2D/getWidth()
org/apache/fop/render/awt/AWTRenderer/getPageFormat(int)#java/awt/print/PageFormat/PageFormat()
org/apache/fop/render/awt/AWTRenderer/getPageFormat(int)#java/awt/geom/Rectangle2D/getHeight()
org/apache/fop/render/awt/AWTRenderer/getPageFormat(int)#java/awt/print/Paper/setImageableArea(double,double,double,double)
org/apache/fop/render/awt/AWTRenderer/getPageFormat(int)#java/awt/print/PageFormat/setPaper(java.awt.print.Paper)
org/apache/fop/render/awt/AWTRenderer/getPageFormat(int)#java/awt/print/Paper/Paper()
org/apache/fop/render/awt/AWTRenderer/getPageFormat(int)#org/apache/fop/render/awt/AWTRenderer/getPageViewport(int)
org/apache/fop/fonts/apps/TTFReader/generateDOM4Kerning(org.w3c.dom.Element,org.apache.fop.fonts.truetype.TTFFile,boolean)#org/w3c/dom/Element/getOwnerDocument()
org/apache/fop/fonts/apps/TTFReader/generateDOM4Kerning(org.w3c.dom.Element,org.apache.fop.fonts.truetype.TTFFile,boolean)#java/util/Iterator/hasNext()
org/apache/fop/fonts/apps/TTFReader/generateDOM4Kerning(org.w3c.dom.Element,org.apache.fop.fonts.truetype.TTFFile,boolean)#java/util/Map$Entry/getKey()
org/apache/fop/fonts/apps/TTFReader/generateDOM4Kerning(org.w3c.dom.Element,org.apache.fop.fonts.truetype.TTFFile,boolean)#java/lang/Integer/toString()
org/apache/fop/fonts/apps/TTFReader/generateDOM4Kerning(org.w3c.dom.Element,org.apache.fop.fonts.truetype.TTFFile,boolean)#org/w3c/dom/Element/setAttribute(java.lang.String,java.lang.String)
org/apache/fop/fonts/apps/TTFReader/generateDOM4Kerning(org.w3c.dom.Element,org.apache.fop.fonts.truetype.TTFFile,boolean)#java/util/Set/iterator()
org/apache/fop/fonts/apps/TTFReader/generateDOM4Kerning(org.w3c.dom.Element,org.apache.fop.fonts.truetype.TTFFile,boolean)#org/apache/fop/fonts/truetype/TTFFile/getAnsiKerning()
org/apache/fop/fonts/apps/TTFReader/generateDOM4Kerning(org.w3c.dom.Element,org.apache.fop.fonts.truetype.TTFFile,boolean)#java/util/Map$Entry/getValue()
org/apache/fop/fonts/apps/TTFReader/generateDOM4Kerning(org.w3c.dom.Element,org.apache.fop.fonts.truetype.TTFFile,boolean)#org/apache/fop/fonts/truetype/TTFFile/getKerning()
org/apache/fop/fonts/apps/TTFReader/generateDOM4Kerning(org.w3c.dom.Element,org.apache.fop.fonts.truetype.TTFFile,boolean)#java/util/Map/entrySet()
org/apache/fop/fonts/apps/TTFReader/generateDOM4Kerning(org.w3c.dom.Element,org.apache.fop.fonts.truetype.TTFFile,boolean)#org/w3c/dom/Document/createElement(java.lang.String)
org/apache/fop/fonts/apps/TTFReader/generateDOM4Kerning(org.w3c.dom.Element,org.apache.fop.fonts.truetype.TTFFile,boolean)#java/lang/Integer/intValue()
org/apache/fop/fonts/apps/TTFReader/generateDOM4Kerning(org.w3c.dom.Element,org.apache.fop.fonts.truetype.TTFFile,boolean)#org/w3c/dom/Element/appendChild(org.w3c.dom.Node)
org/apache/fop/fonts/apps/TTFReader/generateDOM4Kerning(org.w3c.dom.Element,org.apache.fop.fonts.truetype.TTFFile,boolean)#java/util/Map/get(java.lang.Object)
org/apache/fop/fonts/apps/TTFReader/generateDOM4Kerning(org.w3c.dom.Element,org.apache.fop.fonts.truetype.TTFFile,boolean)#java/util/Iterator/next()
org/apache/fop/fonts/apps/TTFReader/generateDOM4Kerning(org.w3c.dom.Element,org.apache.fop.fonts.truetype.TTFFile,boolean)#java/util/Map/keySet()
org/apache/fop/fonts/apps/TTFReader/generateDOM4MultiByteExtras(org.w3c.dom.Element,org.apache.fop.fonts.truetype.TTFFile,boolean)#org/w3c/dom/Document/createElement(java.lang.String)
org/apache/fop/fonts/apps/TTFReader/generateDOM4MultiByteExtras(org.w3c.dom.Element,org.apache.fop.fonts.truetype.TTFFile,boolean)#org/w3c/dom/Element/getOwnerDocument()
org/apache/fop/fonts/apps/TTFReader/generateDOM4MultiByteExtras(org.w3c.dom.Element,org.apache.fop.fonts.truetype.TTFFile,boolean)#java/util/Iterator/hasNext()
org/apache/fop/fonts/apps/TTFReader/generateDOM4MultiByteExtras(org.w3c.dom.Element,org.apache.fop.fonts.truetype.TTFFile,boolean)#org/apache/fop/fonts/truetype/TTFFile/getBBox(int)
org/apache/fop/fonts/apps/TTFReader/generateDOM4MultiByteExtras(org.w3c.dom.Element,org.apache.fop.fonts.truetype.TTFFile,boolean)#org/apache/fop/fonts/truetype/TTFFile/getCMaps()
org/apache/fop/fonts/apps/TTFReader/generateDOM4MultiByteExtras(org.w3c.dom.Element,org.apache.fop.fonts.truetype.TTFFile,boolean)#org/w3c/dom/Element/appendChild(org.w3c.dom.Node)
org/apache/fop/fonts/apps/TTFReader/generateDOM4MultiByteExtras(org.w3c.dom.Element,org.apache.fop.fonts.truetype.TTFFile,boolean)#org/w3c/dom/Element/setAttribute(java.lang.String,java.lang.String)
org/apache/fop/fonts/apps/TTFReader/generateDOM4MultiByteExtras(org.w3c.dom.Element,org.apache.fop.fonts.truetype.TTFFile,boolean)#org/apache/fop/fonts/truetype/TTFFile/getWidths()
org/apache/fop/fonts/apps/TTFReader/generateDOM4MultiByteExtras(org.w3c.dom.Element,org.apache.fop.fonts.truetype.TTFFile,boolean)#org/w3c/dom/Document/createTextNode(java.lang.String)
org/apache/fop/fonts/apps/TTFReader/generateDOM4MultiByteExtras(org.w3c.dom.Element,org.apache.fop.fonts.truetype.TTFFile,boolean)#java/util/List/iterator()
org/apache/fop/fonts/apps/TTFReader/generateDOM4MultiByteExtras(org.w3c.dom.Element,org.apache.fop.fonts.truetype.TTFFile,boolean)#java/lang/String/valueOf(int)
org/apache/fop/fonts/apps/TTFReader/generateDOM4MultiByteExtras(org.w3c.dom.Element,org.apache.fop.fonts.truetype.TTFFile,boolean)#java/util/Iterator/next()
org/apache/fop/fonts/apps/TTFReader/loadTTF(java.lang.String,java.lang.String,boolean,boolean)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/fonts/apps/TTFReader/loadTTF(java.lang.String,java.lang.String,boolean,boolean)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/fonts/apps/TTFReader/loadTTF(java.lang.String,java.lang.String,boolean,boolean)#java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)
org/apache/fop/fonts/apps/TTFReader/loadTTF(java.lang.String,java.lang.String,boolean,boolean)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/fop/fonts/apps/TTFReader/loadTTF(java.lang.String,java.lang.String,boolean,boolean)#org/apache/fop/fonts/truetype/TTFFile/readFont(org.apache.fop.fonts.truetype.FontFileReader,java.lang.String,java.lang.String)
org/apache/fop/fonts/apps/TTFReader/loadTTF(java.lang.String,java.lang.String,boolean,boolean)#java/lang/StringBuilder/toString()
org/apache/fop/fonts/apps/TTFReader/loadTTF(java.lang.String,java.lang.String,boolean,boolean)#org/apache/fop/fonts/truetype/TTFFile/isCFF()
org/apache/fop/fonts/apps/TTFReader/loadTTF(java.lang.String,java.lang.String,boolean,boolean)#java/io/FileInputStream/FileInputStream(java.lang.String)
org/apache/fop/fonts/apps/TTFReader/loadTTF(java.lang.String,java.lang.String,boolean,boolean)#org/apache/commons/logging/Log/info(java.lang.Object)
org/apache/fop/fonts/apps/TTFReader/loadTTF(java.lang.String,java.lang.String,boolean,boolean)#org/apache/fop/fonts/truetype/TTFFile/getFamilyNames()
org/apache/fop/fonts/apps/TTFReader/loadTTF(java.lang.String,java.lang.String,boolean,boolean)#java/io/InputStream/close()
org/apache/fop/fonts/apps/TTFReader/main(java.lang.String[])#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/fonts/apps/TTFReader/main(java.lang.String[])#java/util/Map/get(java.lang.Object)
org/apache/fop/fonts/apps/TTFReader/main(java.lang.String[])#org/apache/commons/logging/Log/info(java.lang.Object)
org/apache/fop/fonts/apps/TTFReader/main(java.lang.String[])#java/lang/System/exit(int)
org/apache/fop/fonts/apps/TTFReader/main(java.lang.String[])#org/apache/fop/fonts/apps/TTFReader/determineLogLevel(java.util.Map)
org/apache/fop/fonts/apps/TTFReader/main(java.lang.String[])#org/apache/commons/logging/Log/error(java.lang.Object,java.lang.Throwable)
org/apache/fop/fonts/apps/TTFReader/main(java.lang.String[])#java/lang/StringBuilder/toString()
org/apache/fop/fonts/apps/TTFReader/main(java.lang.String[])#org/apache/fop/fonts/apps/TTFReader/parseArguments(java.util.Map,java.lang.String[])
org/apache/fop/fonts/apps/TTFReader/main(java.lang.String[])#java/util/HashMap/HashMap()
org/apache/fop/fonts/apps/TTFReader/main(java.lang.String[])#org/apache/fop/fonts/apps/TTFReader/writeFontXML(org.w3c.dom.Document,java.lang.String)
org/apache/fop/fonts/apps/TTFReader/main(java.lang.String[])#java/lang/String/equals(java.lang.Object)
org/apache/fop/fonts/apps/TTFReader/main(java.lang.String[])#org/apache/fop/fonts/truetype/TTFFile/isEmbeddable()
org/apache/fop/fonts/apps/TTFReader/main(java.lang.String[])#java/lang/StringBuilder/StringBuilder()
org/apache/fop/fonts/apps/TTFReader/generateDOM4SingleByteExtras(org.w3c.dom.Element,org.apache.fop.fonts.truetype.TTFFile,boolean)#org/w3c/dom/Document/createElement(java.lang.String)
org/apache/fop/fonts/apps/TTFReader/generateDOM4SingleByteExtras(org.w3c.dom.Element,org.apache.fop.fonts.truetype.TTFFile,boolean)#org/w3c/dom/Element/getOwnerDocument()
org/apache/fop/fonts/apps/TTFReader/generateDOM4SingleByteExtras(org.w3c.dom.Element,org.apache.fop.fonts.truetype.TTFFile,boolean)#org/apache/fop/fonts/truetype/TTFFile/getCharSetName()
org/apache/fop/fonts/apps/TTFReader/generateDOM4SingleByteExtras(org.w3c.dom.Element,org.apache.fop.fonts.truetype.TTFFile,boolean)#org/w3c/dom/Element/appendChild(org.w3c.dom.Node)
org/apache/fop/fonts/apps/TTFReader/generateDOM4SingleByteExtras(org.w3c.dom.Element,org.apache.fop.fonts.truetype.TTFFile,boolean)#org/apache/fop/fonts/truetype/TTFFile/getFirstChar()
org/apache/fop/fonts/apps/TTFReader/generateDOM4SingleByteExtras(org.w3c.dom.Element,org.apache.fop.fonts.truetype.TTFFile,boolean)#org/w3c/dom/Document/createTextNode(java.lang.String)
org/apache/fop/fonts/apps/TTFReader/generateDOM4SingleByteExtras(org.w3c.dom.Element,org.apache.fop.fonts.truetype.TTFFile,boolean)#org/apache/fop/fonts/truetype/TTFFile/getCharWidth(int)
org/apache/fop/fonts/apps/TTFReader/generateDOM4SingleByteExtras(org.w3c.dom.Element,org.apache.fop.fonts.truetype.TTFFile,boolean)#java/lang/String/valueOf(int)
org/apache/fop/fonts/apps/TTFReader/generateDOM4SingleByteExtras(org.w3c.dom.Element,org.apache.fop.fonts.truetype.TTFFile,boolean)#org/apache/fop/fonts/truetype/TTFFile/getLastChar()
org/apache/fop/fonts/apps/TTFReader/generateDOM4SingleByteExtras(org.w3c.dom.Element,org.apache.fop.fonts.truetype.TTFFile,boolean)#org/w3c/dom/Element/setAttribute(java.lang.String,java.lang.String)
org/apache/fop/fonts/apps/TTFReader/constructFontXML(org.apache.fop.fonts.truetype.TTFFile,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String)#org/w3c/dom/Document/appendChild(org.w3c.dom.Node)
org/apache/fop/fonts/apps/TTFReader/constructFontXML(org.apache.fop.fonts.truetype.TTFFile,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String)#org/w3c/dom/Element/appendChild(org.w3c.dom.Node)
org/apache/fop/fonts/apps/TTFReader/constructFontXML(org.apache.fop.fonts.truetype.TTFFile,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String)#org/apache/fop/fonts/truetype/TTFFile/getXHeight()
org/apache/fop/fonts/apps/TTFReader/constructFontXML(org.apache.fop.fonts.truetype.TTFFile,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String)#org/apache/commons/logging/Log/info(java.lang.Object)
org/apache/fop/fonts/apps/TTFReader/constructFontXML(org.apache.fop.fonts.truetype.TTFFile,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String)#org/apache/fop/fonts/truetype/TTFFile/getItalicAngle()
org/apache/fop/fonts/apps/TTFReader/constructFontXML(org.apache.fop.fonts.truetype.TTFFile,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String)#org/apache/fop/fonts/truetype/TTFFile/isEmbeddable()
org/apache/fop/fonts/apps/TTFReader/constructFontXML(org.apache.fop.fonts.truetype.TTFFile,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String)#org/apache/fop/fonts/truetype/TTFFile/getLowerCaseAscent()
org/apache/fop/fonts/apps/TTFReader/constructFontXML(org.apache.fop.fonts.truetype.TTFFile,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String)#org/apache/fop/fonts/truetype/TTFFile/getPostScriptName()
org/apache/fop/fonts/apps/TTFReader/constructFontXML(org.apache.fop.fonts.truetype.TTFFile,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String)#org/apache/fop/fonts/truetype/TTFFile/getFullName()
org/apache/fop/fonts/apps/TTFReader/constructFontXML(org.apache.fop.fonts.truetype.TTFFile,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String)#org/w3c/dom/Document/createElement(java.lang.String)
org/apache/fop/fonts/apps/TTFReader/constructFontXML(org.apache.fop.fonts.truetype.TTFFile,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String)#java/util/Set/size()
org/apache/fop/fonts/apps/TTFReader/constructFontXML(org.apache.fop.fonts.truetype.TTFFile,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String)#org/apache/fop/fonts/truetype/TTFFile/getCapHeight()
org/apache/fop/fonts/apps/TTFReader/constructFontXML(org.apache.fop.fonts.truetype.TTFFile,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String)#org/apache/fop/fonts/truetype/TTFFile/getLowerCaseDescent()
org/apache/fop/fonts/apps/TTFReader/constructFontXML(org.apache.fop.fonts.truetype.TTFFile,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String)#java/util/Iterator/next()
org/apache/fop/fonts/apps/TTFReader/constructFontXML(org.apache.fop.fonts.truetype.TTFFile,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String)#org/w3c/dom/Element/setAttribute(java.lang.String,java.lang.String)
org/apache/fop/fonts/apps/TTFReader/constructFontXML(org.apache.fop.fonts.truetype.TTFFile,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String)#org/apache/fop/fonts/truetype/TTFFile/getFamilyNames()
org/apache/fop/fonts/apps/TTFReader/constructFontXML(org.apache.fop.fonts.truetype.TTFFile,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String)#javax/xml/parsers/DocumentBuilderFactory/newDocumentBuilder()
org/apache/fop/fonts/apps/TTFReader/constructFontXML(org.apache.fop.fonts.truetype.TTFFile,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String)#java/util/Set/iterator()
org/apache/fop/fonts/apps/TTFReader/constructFontXML(org.apache.fop.fonts.truetype.TTFFile,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String)#org/apache/fop/fonts/truetype/TTFFile/getFlags()
org/apache/fop/fonts/apps/TTFReader/constructFontXML(org.apache.fop.fonts.truetype.TTFFile,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String)#org/w3c/dom/Document/createTextNode(java.lang.String)
org/apache/fop/fonts/apps/TTFReader/constructFontXML(org.apache.fop.fonts.truetype.TTFFile,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String)#javax/xml/parsers/DocumentBuilderFactory/newInstance()
org/apache/fop/fonts/apps/TTFReader/constructFontXML(org.apache.fop.fonts.truetype.TTFFile,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String)#org/apache/commons/logging/Log/error(java.lang.Object,java.lang.Throwable)
org/apache/fop/fonts/apps/TTFReader/constructFontXML(org.apache.fop.fonts.truetype.TTFFile,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String)#javax/xml/parsers/DocumentBuilder/newDocument()
org/apache/fop/fonts/apps/TTFReader/constructFontXML(org.apache.fop.fonts.truetype.TTFFile,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String)#org/apache/fop/fonts/truetype/TTFFile/getStemV()
org/apache/fop/fonts/apps/TTFReader/constructFontXML(org.apache.fop.fonts.truetype.TTFFile,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String)#java/lang/String/valueOf(int)
org/apache/fop/fonts/apps/TTFReader/constructFontXML(org.apache.fop.fonts.truetype.TTFFile,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String)#org/apache/fop/fonts/truetype/TTFFile/getFontBBox()
org/apache/fop/fonts/truetype/OFFontLoader/copyGlyphMetricsSingleByte(org.apache.fop.fonts.truetype.OpenFont)#java/util/Iterator/hasNext()
org/apache/fop/fonts/truetype/OFFontLoader/copyGlyphMetricsSingleByte(org.apache.fop.fonts.truetype.OpenFont)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/fonts/truetype/OFFontLoader/copyGlyphMetricsSingleByte(org.apache.fop.fonts.truetype.OpenFont)#java/lang/String/length()
org/apache/fop/fonts/truetype/OFFontLoader/copyGlyphMetricsSingleByte(org.apache.fop.fonts.truetype.OpenFont)#org/apache/fop/fonts/SingleByteFont/getFirstChar()
org/apache/fop/fonts/truetype/OFFontLoader/copyGlyphMetricsSingleByte(org.apache.fop.fonts.truetype.OpenFont)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/fonts/truetype/OFFontLoader/copyGlyphMetricsSingleByte(org.apache.fop.fonts.truetype.OpenFont)#java/lang/StringBuilder/toString()
org/apache/fop/fonts/truetype/OFFontLoader/copyGlyphMetricsSingleByte(org.apache.fop.fonts.truetype.OpenFont)#java/lang/Character/toString(char)
org/apache/fop/fonts/truetype/OFFontLoader/copyGlyphMetricsSingleByte(org.apache.fop.fonts.truetype.OpenFont)#java/awt/Rectangle/Rectangle(int,int,int,int)
org/apache/fop/fonts/truetype/OFFontLoader/copyGlyphMetricsSingleByte(org.apache.fop.fonts.truetype.OpenFont)#java/util/Iterator/next()
org/apache/fop/fonts/truetype/OFFontLoader/copyGlyphMetricsSingleByte(org.apache.fop.fonts.truetype.OpenFont)#org/apache/fop/fonts/SingleByteFont/getLastChar()
org/apache/fop/fonts/truetype/OFFontLoader/copyGlyphMetricsSingleByte(org.apache.fop.fonts.truetype.OpenFont)#java/util/List/iterator()
org/apache/fop/render/ps/PSPainter/drawText(int,int,int,int,int[][],java.lang.String)#org/apache/fop/render/ps/PSPainter/getFontInfo()
org/apache/fop/render/ps/PSPainter/drawText(int,int,int,int,int[][],java.lang.String)#java/lang/Integer/valueOf(int)
org/apache/fop/render/ps/PSPainter/drawText(int,int,int,int,int[][],java.lang.String)#org/apache/xmlgraphics/ps/PSGenerator/formatDouble(double)
org/apache/fop/render/ps/PSPainter/drawText(int,int,int,int,int[][],java.lang.String)#java/lang/Integer/intValue()
org/apache/fop/render/ps/PSPainter/drawText(int,int,int,int,int[][],java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/render/ps/PSPainter/drawText(int,int,int,int,int[][],java.lang.String)#java/lang/String/charAt(int)
org/apache/fop/render/ps/PSPainter/drawText(int,int,int,int,int[][],java.lang.String)#java/lang/StringBuilder/append(int)
org/apache/fop/render/ps/PSPainter/drawText(int,int,int,int,int[][],java.lang.String)#java/lang/Integer/toString(int)
org/apache/fop/render/ps/PSPainter/drawText(int,int,int,int,int[][],java.lang.String)#java/lang/String/length()
org/apache/fop/render/ps/PSPainter/drawText(int,int,int,int,int[][],java.lang.String)#java/util/Map/get(java.lang.Object)
org/apache/fop/render/ps/PSPainter/drawText(int,int,int,int,int[][],java.lang.String)#org/apache/fop/render/ps/PSPainter/getDocumentHandler()
org/apache/fop/render/ps/PSPainter/drawText(int,int,int,int,int[][],java.lang.String)#org/apache/fop/render/ps/PSPainter/getFontKey(org.apache.fop.fonts.FontTriplet)
org/apache/fop/render/ps/PSPainter/drawText(int,int,int,int,int[][],java.lang.String)#org/apache/xmlgraphics/ps/PSGenerator/writeln(java.lang.String)
org/apache/fop/render/ps/PSPainter/drawText(int,int,int,int,int[][],java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/render/ps/PSPainter/drawText(int,int,int,int,int[][],java.lang.String)#org/apache/xmlgraphics/ps/PSGenerator/useColor(java.awt.Color)
org/apache/fop/render/ps/PSPainter/drawText(int,int,int,int,int[][],java.lang.String)#java/lang/StringBuilder/toString()
org/apache/fop/render/ps/PSPainter/writeText(java.lang.String,int,int,int,int,int[][],org.apache.fop.fonts.Font,org.apache.fop.fonts.Typeface,boolean)#java/lang/StringBuffer/StringBuffer(int)
org/apache/fop/render/ps/PSPainter/writeText(java.lang.String,int,int,int,int,int[][],org.apache.fop.fonts.Font,org.apache.fop.fonts.Typeface,boolean)#org/apache/xmlgraphics/ps/PSGenerator/writeln(java.lang.String)
org/apache/fop/render/ps/PSPainter/writeText(java.lang.String,int,int,int,int,int[][],org.apache.fop.fonts.Font,org.apache.fop.fonts.Typeface,boolean)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/render/ps/PSPainter/writeText(java.lang.String,int,int,int,int,int[][],org.apache.fop.fonts.Font,org.apache.fop.fonts.Typeface,boolean)#java/lang/StringBuffer/insert(int,java.lang.String)
org/apache/fop/render/ps/PSPainter/writeText(java.lang.String,int,int,int,int,int[][],org.apache.fop.fonts.Font,org.apache.fop.fonts.Typeface,boolean)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/render/ps/PSPainter/writeText(java.lang.String,int,int,int,int,int[][],org.apache.fop.fonts.Font,org.apache.fop.fonts.Typeface,boolean)#java/lang/String/charAt(int)
org/apache/fop/render/ps/PSPainter/writeText(java.lang.String,int,int,int,int,int[][],org.apache.fop.fonts.Font,org.apache.fop.fonts.Typeface,boolean)#org/apache/fop/fonts/MultiByteFont/getEmbeddingMode()
org/apache/fop/render/ps/PSPainter/writeText(java.lang.String,int,int,int,int,int[][],org.apache.fop.fonts.Font,org.apache.fop.fonts.Typeface,boolean)#java/lang/StringBuffer/append(char)
org/apache/fop/render/ps/PSPainter/writeText(java.lang.String,int,int,int,int,int[][],org.apache.fop.fonts.Font,org.apache.fop.fonts.Typeface,boolean)#org/apache/xmlgraphics/ps/PSGenerator/mapCommand(java.lang.String)
org/apache/fop/render/ps/PSPainter/writeText(java.lang.String,int,int,int,int,int[][],org.apache.fop.fonts.Font,org.apache.fop.fonts.Typeface,boolean)#java/lang/Integer/toString(int)
org/apache/fop/render/ps/PSPainter/writeText(java.lang.String,int,int,int,int,int[][],org.apache.fop.fonts.Font,org.apache.fop.fonts.Typeface,boolean)#java/lang/StringBuffer/length()
org/apache/fop/render/ps/PSPainter/writeText(java.lang.String,int,int,int,int,int[][],org.apache.fop.fonts.Font,org.apache.fop.fonts.Typeface,boolean)#org/apache/xmlgraphics/ps/PSGenerator/escapeChar(char,java.lang.StringBuffer)
org/apache/fop/render/ps/PSPainter/writeText(java.lang.String,int,int,int,int,int[][],org.apache.fop.fonts.Font,org.apache.fop.fonts.Typeface,boolean)#java/lang/StringBuffer/toString()
org/apache/fop/render/ps/PSPainter/writeText(java.lang.String,int,int,int,int,int[][],org.apache.fop.fonts.Font,org.apache.fop.fonts.Typeface,boolean)#java/lang/StringBuffer/append(java.lang.String)
org/apache/fop/render/ps/PSPainter/writeText(java.lang.String,int,int,int,int,int[][],org.apache.fop.fonts.Font,org.apache.fop.fonts.Typeface,boolean)#java/lang/StringBuffer/StringBuffer()
org/apache/fop/render/ps/PSPainter/writeText(java.lang.String,int,int,int,int,int[][],org.apache.fop.fonts.Font,org.apache.fop.fonts.Typeface,boolean)#java/lang/StringBuilder/toString()
org/apache/fop/render/ps/PSPainter/writeText(java.lang.String,int,int,int,int,int[][],org.apache.fop.fonts.Font,org.apache.fop.fonts.Typeface,boolean)#java/lang/StringBuffer/setLength(int)
org/apache/fop/fonts/autodetect/FontInfoFinder/generateTripletsFromFont(org.apache.fop.fonts.CustomFont,java.util.Collection)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/fonts/autodetect/FontInfoFinder/generateTripletsFromFont(org.apache.fop.fonts.CustomFont,java.util.Collection)#java/util/Iterator/next()
org/apache/fop/fonts/autodetect/FontInfoFinder/generateTripletsFromFont(org.apache.fop.fonts.CustomFont,java.util.Collection)#java/lang/String/equals(java.lang.Object)
org/apache/fop/fonts/autodetect/FontInfoFinder/generateTripletsFromFont(org.apache.fop.fonts.CustomFont,java.util.Collection)#java/util/Set/iterator()
org/apache/fop/fonts/autodetect/FontInfoFinder/generateTripletsFromFont(org.apache.fop.fonts.CustomFont,java.util.Collection)#java/util/Collection/add(java.lang.Object)
org/apache/fop/fonts/autodetect/FontInfoFinder/generateTripletsFromFont(org.apache.fop.fonts.CustomFont,java.util.Collection)#java/lang/String/startsWith(java.lang.String)
org/apache/fop/fonts/autodetect/FontInfoFinder/generateTripletsFromFont(org.apache.fop.fonts.CustomFont,java.util.Collection)#java/lang/StringBuilder/toString()
org/apache/fop/fonts/autodetect/FontInfoFinder/generateTripletsFromFont(org.apache.fop.fonts.CustomFont,java.util.Collection)#java/util/Iterator/hasNext()
org/apache/fop/fonts/autodetect/FontInfoFinder/generateTripletsFromFont(org.apache.fop.fonts.CustomFont,java.util.Collection)#java/lang/String/toLowerCase()
org/apache/fop/fonts/autodetect/FontInfoFinder/generateTripletsFromFont(org.apache.fop.fonts.CustomFont,java.util.Collection)#java/lang/String/length()
org/apache/fop/fonts/autodetect/FontInfoFinder/generateTripletsFromFont(org.apache.fop.fonts.CustomFont,java.util.Collection)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/fonts/autodetect/FontInfoFinder/generateTripletsFromFont(org.apache.fop.fonts.CustomFont,java.util.Collection)#org/apache/commons/logging/Log/trace(java.lang.Object)
org/apache/fop/fonts/autodetect/FontInfoFinder/generateTripletsFromFont(org.apache.fop.fonts.CustomFont,java.util.Collection)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/fop/fonts/autodetect/FontInfoFinder/generateTripletsFromFont(org.apache.fop.fonts.CustomFont,java.util.Collection)#org/apache/commons/logging/Log/isTraceEnabled()
org/apache/fop/fonts/autodetect/FontInfoFinder/find(java.net.URI,org.apache.fop.apps.io.InternalResourceResolver,org.apache.fop.fonts.FontCache)#org/apache/commons/io/IOUtils/closeQuietly(java.io.InputStream)
org/apache/fop/fonts/autodetect/FontInfoFinder/find(java.net.URI,org.apache.fop.apps.io.InternalResourceResolver,org.apache.fop.fonts.FontCache)#org/apache/fop/fonts/truetype/OFFontLoader/getFont()
org/apache/fop/fonts/autodetect/FontInfoFinder/find(java.net.URI,org.apache.fop.apps.io.InternalResourceResolver,org.apache.fop.fonts.FontCache)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/fonts/autodetect/FontInfoFinder/find(java.net.URI,org.apache.fop.apps.io.InternalResourceResolver,org.apache.fop.fonts.FontCache)#java/util/List/size()
org/apache/fop/fonts/autodetect/FontInfoFinder/find(java.net.URI,org.apache.fop.apps.io.InternalResourceResolver,org.apache.fop.fonts.FontCache)#java/util/List/add(java.lang.Object)
org/apache/fop/fonts/autodetect/FontInfoFinder/find(java.net.URI,org.apache.fop.apps.io.InternalResourceResolver,org.apache.fop.fonts.FontCache)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/fop/fonts/autodetect/FontInfoFinder/find(java.net.URI,org.apache.fop.apps.io.InternalResourceResolver,org.apache.fop.fonts.FontCache)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/fop/fonts/autodetect/FontInfoFinder/find(java.net.URI,org.apache.fop.apps.io.InternalResourceResolver,org.apache.fop.fonts.FontCache)#java/util/ArrayList/ArrayList()
org/apache/fop/fonts/autodetect/FontInfoFinder/find(java.net.URI,org.apache.fop.apps.io.InternalResourceResolver,org.apache.fop.fonts.FontCache)#java/util/Iterator/hasNext()
org/apache/fop/fonts/autodetect/FontInfoFinder/find(java.net.URI,org.apache.fop.apps.io.InternalResourceResolver,org.apache.fop.fonts.FontCache)#java/lang/String/toLowerCase()
org/apache/fop/fonts/autodetect/FontInfoFinder/find(java.net.URI,org.apache.fop.apps.io.InternalResourceResolver,org.apache.fop.fonts.FontCache)#org/apache/commons/logging/Log/isDebugEnabled()
org/apache/fop/fonts/autodetect/FontInfoFinder/find(java.net.URI,org.apache.fop.apps.io.InternalResourceResolver,org.apache.fop.fonts.FontCache)#java/util/Iterator/next()
org/apache/fop/fonts/autodetect/FontInfoFinder/find(java.net.URI,org.apache.fop.apps.io.InternalResourceResolver,org.apache.fop.fonts.FontCache)#java/util/List/toArray(java.lang.Object[])
org/apache/fop/fonts/autodetect/FontInfoFinder/find(java.net.URI,org.apache.fop.apps.io.InternalResourceResolver,org.apache.fop.fonts.FontCache)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/fonts/autodetect/FontInfoFinder/find(java.net.URI,org.apache.fop.apps.io.InternalResourceResolver,org.apache.fop.fonts.FontCache)#org/apache/fop/fonts/CustomFont/setEventListener(org.apache.fop.fonts.FontEventListener)
org/apache/fop/fonts/autodetect/FontInfoFinder/find(java.net.URI,org.apache.fop.apps.io.InternalResourceResolver,org.apache.fop.fonts.FontCache)#java/util/List/iterator()
org/apache/fop/fonts/autodetect/FontInfoFinder/find(java.net.URI,org.apache.fop.apps.io.InternalResourceResolver,org.apache.fop.fonts.FontCache)#java/lang/StringBuilder/toString()
org/apache/fop/fonts/autodetect/FontInfoFinder/find(java.net.URI,org.apache.fop.apps.io.InternalResourceResolver,org.apache.fop.fonts.FontCache)#org/apache/fop/fonts/truetype/TTFFile/getTTCnames(org.apache.fop.fonts.truetype.FontFileReader)
org/apache/fop/fonts/autodetect/FontInfoFinder/find(java.net.URI,org.apache.fop.apps.io.InternalResourceResolver,org.apache.fop.fonts.FontCache)#java/net/URI/toASCIIString()
org/apache/fop/fonts/autodetect/FontInfoFinder/find(java.net.URI,org.apache.fop.apps.io.InternalResourceResolver,org.apache.fop.fonts.FontCache)#java/lang/String/endsWith(java.lang.String)
org/apache/fop/hyphenation/HyphenationTree/loadPatterns(java.lang.String)#java/net/MalformedURLException/getMessage()
org/apache/fop/hyphenation/HyphenationTree/loadPatterns(java.lang.String)#java/net/URL/toExternalForm()
org/apache/fop/hyphenation/HyphenationTree/loadPatterns(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/hyphenation/HyphenationTree/loadPatterns(java.lang.String)#java/net/URI/toURL()
org/apache/fop/hyphenation/HyphenationTree/loadPatterns(java.lang.String)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/fop/hyphenation/HyphenationTree/loadPatterns(java.lang.String)#java/lang/StringBuilder/toString()
org/apache/fop/hyphenation/HyphenationTree/loadPatterns(java.lang.String)#org/xml/sax/InputSource/InputSource(java.lang.String)
org/apache/fop/hyphenation/HyphenationTree/loadPatterns(java.lang.String)#java/io/File/File(java.lang.String)
org/apache/fop/hyphenation/HyphenationTree/loadPatterns(java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/hyphenation/HyphenationTree/loadPatterns(java.lang.String)#java/io/File/toURI()
org/apache/fop/hyphenation/HyphenationTree/main(java.lang.String[])#java/io/PrintStream/print(java.lang.String)
org/apache/fop/hyphenation/HyphenationTree/main(java.lang.String[])#java/io/ObjectOutputStream/flush()
org/apache/fop/hyphenation/HyphenationTree/main(java.lang.String[])#java/lang/Integer/parseInt(java.lang.String)
org/apache/fop/hyphenation/HyphenationTree/main(java.lang.String[])#java/io/ObjectOutputStream/ObjectOutputStream(java.io.OutputStream)
org/apache/fop/hyphenation/HyphenationTree/main(java.lang.String[])#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/hyphenation/HyphenationTree/main(java.lang.String[])#java/lang/String/trim()
org/apache/fop/hyphenation/HyphenationTree/main(java.lang.String[])#java/io/PrintStream/println(java.lang.String)
org/apache/fop/hyphenation/HyphenationTree/main(java.lang.String[])#java/lang/StringBuilder/append(int)
org/apache/fop/hyphenation/HyphenationTree/main(java.lang.String[])#java/io/FileInputStream/FileInputStream(java.lang.String)
org/apache/fop/hyphenation/HyphenationTree/main(java.lang.String[])#java/io/ObjectInputStream/readObject()
org/apache/fop/hyphenation/HyphenationTree/main(java.lang.String[])#java/io/FileReader/FileReader(java.lang.String)
org/apache/fop/hyphenation/HyphenationTree/main(java.lang.String[])#java/io/FileOutputStream/FileOutputStream(java.lang.String)
org/apache/fop/hyphenation/HyphenationTree/main(java.lang.String[])#java/lang/StringBuilder/append(long)
org/apache/fop/hyphenation/HyphenationTree/main(java.lang.String[])#java/lang/String/equals(java.lang.Object)
org/apache/fop/hyphenation/HyphenationTree/main(java.lang.String[])#java/lang/Exception/printStackTrace()
org/apache/fop/hyphenation/HyphenationTree/main(java.lang.String[])#java/io/ObjectOutputStream/writeObject(java.lang.Object)
org/apache/fop/hyphenation/HyphenationTree/main(java.lang.String[])#java/lang/StringBuilder/StringBuilder()
org/apache/fop/hyphenation/HyphenationTree/main(java.lang.String[])#java/io/ObjectInputStream/close()
org/apache/fop/hyphenation/HyphenationTree/main(java.lang.String[])#org/apache/commons/io/IOUtils/closeQuietly(java.io.Reader)
org/apache/fop/hyphenation/HyphenationTree/main(java.lang.String[])#java/io/InputStreamReader/InputStreamReader(java.io.InputStream)
org/apache/fop/hyphenation/HyphenationTree/main(java.lang.String[])#java/io/BufferedReader/BufferedReader(java.io.Reader)
org/apache/fop/hyphenation/HyphenationTree/main(java.lang.String[])#java/io/BufferedReader/readLine()
org/apache/fop/hyphenation/HyphenationTree/main(java.lang.String[])#java/io/ObjectInputStream/ObjectInputStream(java.io.InputStream)
org/apache/fop/hyphenation/HyphenationTree/main(java.lang.String[])#java/lang/StringBuilder/append(java.lang.Object)
org/apache/fop/hyphenation/HyphenationTree/main(java.lang.String[])#java/io/PrintStream/println(java.lang.Object)
org/apache/fop/hyphenation/HyphenationTree/main(java.lang.String[])#java/lang/System/currentTimeMillis()
org/apache/fop/hyphenation/HyphenationTree/main(java.lang.String[])#java/lang/StringBuilder/toString()
org/apache/fop/hyphenation/HyphenationTree/main(java.lang.String[])#java/io/ObjectOutputStream/close()
org/apache/fop/fo/extensions/svg/SVGElement/getDimension(java.awt.geom.Point2D)#org/apache/batik/anim/dom/SVGOMDocument/setURLObject(java.net.URL)
org/apache/fop/fo/extensions/svg/SVGElement/getDimension(java.awt.geom.Point2D)#org/apache/fop/fo/extensions/svg/SVGElement$1/1(org.apache.fop.fo.extensions.svg.SVGElement,float,java.awt.geom.Point2D)
org/apache/fop/fo/extensions/svg/SVGElement/getDimension(java.awt.geom.Point2D)#java/net/URI/toURL()
org/apache/fop/fo/extensions/svg/SVGElement/getDimension(java.awt.geom.Point2D)#java/awt/geom/Point2D$Double/Double(double,double)
org/apache/fop/fo/extensions/svg/SVGElement/getDimension(java.awt.geom.Point2D)#org/apache/batik/anim/dom/SVGOMElement/setAttributeNS(java.lang.String,java.lang.String,java.lang.String)
org/apache/fop/fo/extensions/svg/SVGElement/getDimension(java.awt.geom.Point2D)#java/awt/geom/Point2D/getX()
org/apache/fop/fo/extensions/svg/SVGElement/getDimension(java.awt.geom.Point2D)#java/awt/geom/Point2D/getY()
org/apache/fop/fo/extensions/svg/SVGElement/getDimension(java.awt.geom.Point2D)#org/apache/batik/anim/dom/SVGOMElement/setSVGContext(org.apache.batik.dom.svg.SVGContext)
org/apache/fop/fo/extensions/svg/SVGElement/getDimension(java.awt.geom.Point2D)#org/apache/commons/logging/Log/error(java.lang.Object,java.lang.Throwable)
org/apache/fop/fo/extensions/svg/SVGElement/getDimension(java.awt.geom.Point2D)#org/apache/fop/fo/extensions/svg/SVGElement/getUserAgent()
org/apache/fop/util/ColorUtil/toCIELabFunctionCall(org.apache.xmlgraphics.java2d.color.ColorWithAlternatives)#java/awt/Color/getBlue()
org/apache/fop/util/ColorUtil/toCIELabFunctionCall(org.apache.xmlgraphics.java2d.color.ColorWithAlternatives)#java/awt/Color/getRed()
org/apache/fop/util/ColorUtil/toCIELabFunctionCall(org.apache.xmlgraphics.java2d.color.ColorWithAlternatives)#org/apache/xmlgraphics/java2d/color/ColorWithAlternatives/getColorComponents(float[])
org/apache/fop/util/ColorUtil/toCIELabFunctionCall(org.apache.xmlgraphics.java2d.color.ColorWithAlternatives)#org/apache/xmlgraphics/java2d/color/ColorWithAlternatives/getColorSpace()
org/apache/fop/util/ColorUtil/toCIELabFunctionCall(org.apache.xmlgraphics.java2d.color.ColorWithAlternatives)#java/lang/StringBuffer/toString()
org/apache/fop/util/ColorUtil/toCIELabFunctionCall(org.apache.xmlgraphics.java2d.color.ColorWithAlternatives)#java/awt/Color/getGreen()
org/apache/fop/util/ColorUtil/toCIELabFunctionCall(org.apache.xmlgraphics.java2d.color.ColorWithAlternatives)#java/lang/StringBuffer/append(int)
org/apache/fop/util/ColorUtil/toCIELabFunctionCall(org.apache.xmlgraphics.java2d.color.ColorWithAlternatives)#java/lang/StringBuffer/StringBuffer(java.lang.String)
org/apache/fop/util/ColorUtil/toCIELabFunctionCall(org.apache.xmlgraphics.java2d.color.ColorWithAlternatives)#java/lang/StringBuffer/append(char)
org/apache/fop/util/ColorUtil/toCIELabFunctionCall(org.apache.xmlgraphics.java2d.color.ColorWithAlternatives)#org/apache/xmlgraphics/java2d/color/CIELabColorSpace/toNativeComponents(float[])
org/apache/fop/util/ColorUtil/toCIELabFunctionCall(org.apache.xmlgraphics.java2d.color.ColorWithAlternatives)#java/lang/StringBuffer/append(float)
org/apache/fop/util/ColorUtil/toRGBFunctionCall(java.awt.Color)#java/awt/Color/getBlue()
org/apache/fop/util/ColorUtil/toRGBFunctionCall(java.awt.Color)#java/awt/Color/getRed()
org/apache/fop/util/ColorUtil/toRGBFunctionCall(java.awt.Color)#java/lang/StringBuffer/append(char)
org/apache/fop/util/ColorUtil/toRGBFunctionCall(java.awt.Color)#java/lang/String/length()
org/apache/fop/util/ColorUtil/toRGBFunctionCall(java.awt.Color)#java/awt/Color/getAlpha()
org/apache/fop/util/ColorUtil/toRGBFunctionCall(java.awt.Color)#java/lang/Integer/toHexString(int)
org/apache/fop/util/ColorUtil/toRGBFunctionCall(java.awt.Color)#java/lang/StringBuffer/toString()
org/apache/fop/util/ColorUtil/toRGBFunctionCall(java.awt.Color)#java/awt/Color/getGreen()
org/apache/fop/util/ColorUtil/toRGBFunctionCall(java.awt.Color)#java/lang/StringBuffer/append(java.lang.String)
org/apache/fop/util/ColorUtil/toRGBFunctionCall(java.awt.Color)#java/lang/StringBuffer/StringBuffer()
org/apache/fop/util/ColorUtil/parseAsCIELabColor(org.apache.fop.apps.FOUserAgent,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/util/ColorUtil/parseAsCIELabColor(org.apache.fop.apps.FOUserAgent,java.lang.String)#org/apache/xmlgraphics/java2d/color/CIELabColorSpace/toColor(float,float,float,float)
org/apache/fop/util/ColorUtil/parseAsCIELabColor(org.apache.fop.apps.FOUserAgent,java.lang.String)#java/lang/String/substring(int,int)
org/apache/fop/util/ColorUtil/parseAsCIELabColor(org.apache.fop.apps.FOUserAgent,java.lang.String)#org/apache/xmlgraphics/java2d/color/ColorSpaces/getCIELabColorSpaceD50()
org/apache/fop/util/ColorUtil/parseAsCIELabColor(org.apache.fop.apps.FOUserAgent,java.lang.String)#java/awt/Color/Color(float,float,float)
org/apache/fop/util/ColorUtil/parseAsCIELabColor(org.apache.fop.apps.FOUserAgent,java.lang.String)#java/lang/StringBuilder/toString()
org/apache/fop/util/ColorUtil/parseAsCIELabColor(org.apache.fop.apps.FOUserAgent,java.lang.String)#java/lang/String/split(java.lang.String)
org/apache/fop/util/ColorUtil/parseAsCIELabColor(org.apache.fop.apps.FOUserAgent,java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/util/ColorUtil/parseAsCIELabColor(org.apache.fop.apps.FOUserAgent,java.lang.String)#java/lang/String/indexOf(java.lang.String)
org/apache/fop/util/ColorUtil/parseWithHash(java.lang.String)#java/awt/Color/Color(int,int,int,int)
org/apache/fop/util/ColorUtil/parseWithHash(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/util/ColorUtil/parseWithHash(java.lang.String)#java/lang/String/length()
org/apache/fop/util/ColorUtil/parseWithHash(java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/util/ColorUtil/parseWithHash(java.lang.String)#java/lang/String/substring(int)
org/apache/fop/util/ColorUtil/parseWithHash(java.lang.String)#java/lang/NumberFormatException/NumberFormatException()
org/apache/fop/util/ColorUtil/parseWithHash(java.lang.String)#java/lang/StringBuilder/toString()
org/apache/fop/util/ColorUtil/parseWithHash(java.lang.String)#java/lang/Integer/parseInt(java.lang.String,int)
org/apache/fop/util/ColorUtil/parseWithHash(java.lang.String)#java/lang/String/substring(int,int)
org/apache/fop/util/ColorUtil/parseAsJavaAWTColor(java.lang.String)#java/lang/String/substring(int,int)
org/apache/fop/util/ColorUtil/parseAsJavaAWTColor(java.lang.String)#java/lang/String/substring(int)
org/apache/fop/util/ColorUtil/parseAsJavaAWTColor(java.lang.String)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/fop/util/ColorUtil/parseAsJavaAWTColor(java.lang.String)#java/awt/Color/Color(float,float,float)
org/apache/fop/util/ColorUtil/parseAsJavaAWTColor(java.lang.String)#java/lang/StringBuilder/toString()
org/apache/fop/util/ColorUtil/parseAsJavaAWTColor(java.lang.String)#java/lang/Float/parseFloat(java.lang.String)
org/apache/fop/util/ColorUtil/parseAsJavaAWTColor(java.lang.String)#java/lang/String/split(java.lang.String)
org/apache/fop/util/ColorUtil/parseAsJavaAWTColor(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/util/ColorUtil/parseAsJavaAWTColor(java.lang.String)#java/lang/String/trim()
org/apache/fop/util/ColorUtil/parseAsJavaAWTColor(java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/util/ColorUtil/parseAsJavaAWTColor(java.lang.String)#java/lang/String/indexOf(java.lang.String)
org/apache/fop/util/ColorUtil/parseAsFopRgbIcc(org.apache.fop.apps.FOUserAgent,java.lang.String)#java/lang/String/equalsIgnoreCase(java.lang.String)
org/apache/fop/util/ColorUtil/parseAsFopRgbIcc(org.apache.fop.apps.FOUserAgent,java.lang.String)#org/apache/commons/logging/Log/warn(java.lang.Object)
org/apache/fop/util/ColorUtil/parseAsFopRgbIcc(org.apache.fop.apps.FOUserAgent,java.lang.String)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/fop/util/ColorUtil/parseAsFopRgbIcc(org.apache.fop.apps.FOUserAgent,java.lang.String)#java/lang/String/equals(java.lang.Object)
org/apache/fop/util/ColorUtil/parseAsFopRgbIcc(org.apache.fop.apps.FOUserAgent,java.lang.String)#java/lang/String/substring(int,int)
org/apache/fop/util/ColorUtil/parseAsFopRgbIcc(org.apache.fop.apps.FOUserAgent,java.lang.String)#org/apache/xmlgraphics/java2d/color/ColorWithAlternatives/ColorWithAlternatives(float,float,float,java.awt.Color[])
org/apache/fop/util/ColorUtil/parseAsFopRgbIcc(org.apache.fop.apps.FOUserAgent,java.lang.String)#java/awt/Color/getRGBColorComponents(float[])
org/apache/fop/util/ColorUtil/parseAsFopRgbIcc(org.apache.fop.apps.FOUserAgent,java.lang.String)#org/apache/xmlgraphics/java2d/color/ColorSpaces/isDeviceColorSpace(java.awt.color.ColorSpace)
org/apache/fop/util/ColorUtil/parseAsFopRgbIcc(org.apache.fop.apps.FOUserAgent,java.lang.String)#org/apache/xmlgraphics/java2d/color/NamedColorSpace/NamedColorSpace(java.lang.String,java.awt.Color,java.lang.String,java.lang.String)
org/apache/fop/util/ColorUtil/parseAsFopRgbIcc(org.apache.fop.apps.FOUserAgent,java.lang.String)#org/apache/xmlgraphics/java2d/color/ColorSpaces/getDeviceCMYKColorSpace()
org/apache/fop/util/ColorUtil/parseAsFopRgbIcc(org.apache.fop.apps.FOUserAgent,java.lang.String)#java/lang/Float/parseFloat(java.lang.String)
org/apache/fop/util/ColorUtil/parseAsFopRgbIcc(org.apache.fop.apps.FOUserAgent,java.lang.String)#java/lang/String/split(java.lang.String)
org/apache/fop/util/ColorUtil/parseAsFopRgbIcc(org.apache.fop.apps.FOUserAgent,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/util/ColorUtil/parseAsFopRgbIcc(org.apache.fop.apps.FOUserAgent,java.lang.String)#java/lang/String/trim()
org/apache/fop/util/ColorUtil/parseAsFopRgbIcc(org.apache.fop.apps.FOUserAgent,java.lang.String)#java/awt/Color/Color(java.awt.color.ColorSpace,float[],float)
org/apache/fop/util/ColorUtil/parseAsFopRgbIcc(org.apache.fop.apps.FOUserAgent,java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/util/ColorUtil/parseAsFopRgbIcc(org.apache.fop.apps.FOUserAgent,java.lang.String)#java/lang/String/indexOf(java.lang.String)
org/apache/fop/util/ColorUtil/parseAsFopRgbIcc(org.apache.fop.apps.FOUserAgent,java.lang.String)#java/lang/StringBuilder/toString()
org/apache/fop/util/ColorUtil/toFunctionCall(org.apache.xmlgraphics.java2d.color.ColorWithAlternatives)#org/apache/xmlgraphics/java2d/color/ColorWithAlternatives/hasAlternativeColors()
org/apache/fop/util/ColorUtil/toFunctionCall(org.apache.xmlgraphics.java2d.color.ColorWithAlternatives)#java/lang/String/equalsIgnoreCase(java.lang.String)
org/apache/fop/util/ColorUtil/toFunctionCall(org.apache.xmlgraphics.java2d.color.ColorWithAlternatives)#java/lang/StringBuffer/StringBuffer(int)
org/apache/fop/util/ColorUtil/toFunctionCall(org.apache.xmlgraphics.java2d.color.ColorWithAlternatives)#java/lang/StringBuffer/append(float)
org/apache/fop/util/ColorUtil/toFunctionCall(org.apache.xmlgraphics.java2d.color.ColorWithAlternatives)#java/lang/StringBuffer/toString()
org/apache/fop/util/ColorUtil/toFunctionCall(org.apache.xmlgraphics.java2d.color.ColorWithAlternatives)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/util/ColorUtil/toFunctionCall(org.apache.xmlgraphics.java2d.color.ColorWithAlternatives)#java/awt/color/ColorSpace/isCS_sRGB()
org/apache/fop/util/ColorUtil/toFunctionCall(org.apache.xmlgraphics.java2d.color.ColorWithAlternatives)#java/lang/StringBuffer/append(java.lang.String)
org/apache/fop/util/ColorUtil/toFunctionCall(org.apache.xmlgraphics.java2d.color.ColorWithAlternatives)#java/lang/AssertionError/AssertionError()
org/apache/fop/util/ColorUtil/toFunctionCall(org.apache.xmlgraphics.java2d.color.ColorWithAlternatives)#org/apache/xmlgraphics/java2d/color/ColorSpaces/getColorSpaceOrigin(java.awt.color.ColorSpace)
org/apache/fop/util/ColorUtil/toFunctionCall(org.apache.xmlgraphics.java2d.color.ColorWithAlternatives)#org/apache/xmlgraphics/java2d/color/ColorWithAlternatives/getAlternativeColors()
org/apache/fop/util/ColorUtil/toFunctionCall(org.apache.xmlgraphics.java2d.color.ColorWithAlternatives)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/util/ColorUtil/toFunctionCall(org.apache.xmlgraphics.java2d.color.ColorWithAlternatives)#java/awt/Color/getColorSpace()
org/apache/fop/util/ColorUtil/toFunctionCall(org.apache.xmlgraphics.java2d.color.ColorWithAlternatives)#org/apache/xmlgraphics/java2d/color/NamedColorSpace/getColorName()
org/apache/fop/util/ColorUtil/toFunctionCall(org.apache.xmlgraphics.java2d.color.ColorWithAlternatives)#org/apache/xmlgraphics/java2d/color/ColorSpaceOrigin/getProfileURI()
org/apache/fop/util/ColorUtil/toFunctionCall(org.apache.xmlgraphics.java2d.color.ColorWithAlternatives)#org/apache/xmlgraphics/java2d/color/ColorWithAlternatives/getColorSpace()
org/apache/fop/util/ColorUtil/toFunctionCall(org.apache.xmlgraphics.java2d.color.ColorWithAlternatives)#org/apache/xmlgraphics/java2d/color/ColorSpaces/isDeviceColorSpace(java.awt.color.ColorSpace)
org/apache/fop/util/ColorUtil/toFunctionCall(org.apache.xmlgraphics.java2d.color.ColorWithAlternatives)#org/apache/xmlgraphics/java2d/color/ColorSpaceOrigin/getProfileName()
org/apache/fop/util/ColorUtil/toFunctionCall(org.apache.xmlgraphics.java2d.color.ColorWithAlternatives)#java/lang/StringBuilder/toString()
org/apache/fop/util/ColorUtil/toFunctionCall(org.apache.xmlgraphics.java2d.color.ColorWithAlternatives)#java/awt/Color/getColorComponents(float[])
org/apache/fop/util/ColorUtil/parseAsFopRgbNamedColor(org.apache.fop.apps.FOUserAgent,java.lang.String)#org/apache/xmlgraphics/java2d/color/profile/NamedColorProfileParser/NamedColorProfileParser()
org/apache/fop/util/ColorUtil/parseAsFopRgbNamedColor(org.apache.fop.apps.FOUserAgent,java.lang.String)#org/apache/commons/logging/Log/warn(java.lang.Object)
org/apache/fop/util/ColorUtil/parseAsFopRgbNamedColor(org.apache.fop.apps.FOUserAgent,java.lang.String)#org/apache/xmlgraphics/java2d/color/profile/NamedColorProfileParser/isNamedColorProfile(java.awt.color.ICC_Profile)
org/apache/fop/util/ColorUtil/parseAsFopRgbNamedColor(org.apache.fop.apps.FOUserAgent,java.lang.String)#java/lang/String/equals(java.lang.Object)
org/apache/fop/util/ColorUtil/parseAsFopRgbNamedColor(org.apache.fop.apps.FOUserAgent,java.lang.String)#java/lang/String/substring(int,int)
org/apache/fop/util/ColorUtil/parseAsFopRgbNamedColor(org.apache.fop.apps.FOUserAgent,java.lang.String)#org/apache/xmlgraphics/java2d/color/profile/NamedColorProfile/getNamedColor(java.lang.String)
org/apache/fop/util/ColorUtil/parseAsFopRgbNamedColor(org.apache.fop.apps.FOUserAgent,java.lang.String)#java/lang/String/split(java.lang.String)
org/apache/fop/util/ColorUtil/parseAsFopRgbNamedColor(org.apache.fop.apps.FOUserAgent,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/util/ColorUtil/parseAsFopRgbNamedColor(org.apache.fop.apps.FOUserAgent,java.lang.String)#java/lang/String/trim()
org/apache/fop/util/ColorUtil/parseAsFopRgbNamedColor(org.apache.fop.apps.FOUserAgent,java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/util/ColorUtil/parseAsFopRgbNamedColor(org.apache.fop.apps.FOUserAgent,java.lang.String)#java/lang/String/indexOf(java.lang.String)
org/apache/fop/util/ColorUtil/parseAsFopRgbNamedColor(org.apache.fop.apps.FOUserAgent,java.lang.String)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/fop/util/ColorUtil/parseAsFopRgbNamedColor(org.apache.fop.apps.FOUserAgent,java.lang.String)#java/awt/color/ICC_ColorSpace/getProfile()
org/apache/fop/util/ColorUtil/parseAsFopRgbNamedColor(org.apache.fop.apps.FOUserAgent,java.lang.String)#java/lang/StringBuilder/toString()
org/apache/fop/util/ColorUtil/parseAsFopRgbNamedColor(org.apache.fop.apps.FOUserAgent,java.lang.String)#org/apache/xmlgraphics/java2d/color/profile/NamedColorProfileParser/parseProfile(java.awt.color.ICC_Profile,java.lang.String,java.lang.String)
org/apache/fop/util/ColorUtil/parseAsCMYK(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/util/ColorUtil/parseAsCMYK(java.lang.String)#java/lang/String/substring(int,int)
org/apache/fop/util/ColorUtil/parseAsCMYK(java.lang.String)#org/apache/xmlgraphics/java2d/color/ColorWithAlternatives/ColorWithAlternatives(float,float,float,java.awt.Color[])
org/apache/fop/util/ColorUtil/parseAsCMYK(java.lang.String)#java/awt/Color/getRGBColorComponents(float[])
org/apache/fop/util/ColorUtil/parseAsCMYK(java.lang.String)#org/apache/xmlgraphics/java2d/color/DeviceCMYKColorSpace/createCMYKColor(float[])
org/apache/fop/util/ColorUtil/parseAsCMYK(java.lang.String)#java/lang/StringBuilder/toString()
org/apache/fop/util/ColorUtil/parseAsCMYK(java.lang.String)#java/lang/String/split(java.lang.String)
org/apache/fop/util/ColorUtil/parseAsCMYK(java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/util/ColorUtil/parseAsCMYK(java.lang.String)#java/lang/String/indexOf(java.lang.String)
org/apache/fop/afp/AFPResourceManager/createIncludedResource(java.lang.String,java.net.URI,org.apache.fop.afp.util.AFPResourceAccessor,byte)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/afp/AFPResourceManager/createIncludedResource(java.lang.String,java.net.URI,org.apache.fop.afp.util.AFPResourceAccessor,byte)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/fop/afp/AFPResourceManager/createIncludedResource(java.lang.String,java.net.URI,org.apache.fop.afp.util.AFPResourceAccessor,byte)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/fop/afp/AFPResourceManager/createIncludedResource(java.lang.String,java.net.URI,org.apache.fop.afp.util.AFPResourceAccessor,byte)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/afp/AFPResourceManager/createIncludedResource(java.lang.String,java.net.URI,org.apache.fop.afp.util.AFPResourceAccessor,byte)#org/apache/commons/logging/Log/isDebugEnabled()
org/apache/fop/afp/AFPResourceManager/createIncludedResource(java.lang.String,java.net.URI,org.apache.fop.afp.util.AFPResourceAccessor,byte)#java/util/Map/get(java.lang.Object)
org/apache/fop/afp/AFPResourceManager/createIncludedResource(java.lang.String,java.net.URI,org.apache.fop.afp.util.AFPResourceAccessor,byte)#java/lang/StringBuilder/toString()
org/apache/fop/afp/AFPResourceManager/createIncludedResource(java.lang.String,java.net.URI,org.apache.fop.afp.util.AFPResourceAccessor,byte)#org/apache/fop/afp/AFPResourceManager$CachedObject/CachedObject(org.apache.fop.afp.AFPResourceManager,java.lang.String,org.apache.fop.afp.AFPDataObjectInfo)
org/apache/fop/afp/AFPResourceManager/createIncludedResource(java.lang.String,java.net.URI,org.apache.fop.afp.util.AFPResourceAccessor,byte)#java/net/URI/toASCIIString()
org/apache/fop/complexscripts/fonts/GlyphMappingTable/RangeMappingTable/populate(java.util.List)#org/apache/fop/complexscripts/fonts/GlyphMappingTable$MappingRange/getEnd()
org/apache/fop/complexscripts/fonts/GlyphMappingTable/RangeMappingTable/populate(java.util.List)#java/util/Iterator/hasNext()
org/apache/fop/complexscripts/fonts/GlyphMappingTable/RangeMappingTable/populate(java.util.List)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/complexscripts/fonts/GlyphMappingTable/RangeMappingTable/populate(java.util.List)#java/lang/StringBuilder/append(int)
org/apache/fop/complexscripts/fonts/GlyphMappingTable/RangeMappingTable/populate(java.util.List)#org/apache/fop/complexscripts/fonts/GlyphMappingTable$MappingRange/getStart()
org/apache/fop/complexscripts/fonts/GlyphMappingTable/RangeMappingTable/populate(java.util.List)#java/util/List/size()
org/apache/fop/complexscripts/fonts/GlyphMappingTable/RangeMappingTable/populate(java.util.List)#java/util/Iterator/next()
org/apache/fop/complexscripts/fonts/GlyphMappingTable/RangeMappingTable/populate(java.util.List)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/complexscripts/fonts/GlyphMappingTable/RangeMappingTable/populate(java.util.List)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/fop/complexscripts/fonts/GlyphMappingTable/RangeMappingTable/populate(java.util.List)#java/util/List/iterator()
org/apache/fop/complexscripts/fonts/GlyphMappingTable/RangeMappingTable/populate(java.util.List)#org/apache/fop/complexscripts/fonts/GlyphMappingTable$MappingRange/getIndex()
org/apache/fop/complexscripts/fonts/GlyphMappingTable/RangeMappingTable/populate(java.util.List)#java/lang/AssertionError/AssertionError()
org/apache/fop/complexscripts/fonts/GlyphMappingTable/RangeMappingTable/populate(java.util.List)#java/lang/StringBuilder/toString()
org/apache/fop/layoutmgr/ElementListUtils/removeLegalBreaks(java.util.List,int,boolean)#java/util/ListIterator/add(java.lang.Object)
org/apache/fop/layoutmgr/ElementListUtils/removeLegalBreaks(java.util.List,int,boolean)#java/util/ListIterator/set(java.lang.Object)
org/apache/fop/layoutmgr/ElementListUtils/removeLegalBreaks(java.util.List,int,boolean)#java/util/ListIterator/hasPrevious()
org/apache/fop/layoutmgr/ElementListUtils/removeLegalBreaks(java.util.List,int,boolean)#java/util/ListIterator/next()
org/apache/fop/layoutmgr/ElementListUtils/removeLegalBreaks(java.util.List,int,boolean)#java/util/ListIterator/previous()
org/apache/fop/layoutmgr/ElementListUtils/removeLegalBreaks(java.util.List,int,boolean)#org/apache/fop/layoutmgr/KnuthPenalty/getWidth()
org/apache/fop/layoutmgr/ElementListUtils/removeLegalBreaks(java.util.List,int,boolean)#java/util/List/listIterator(int)
org/apache/fop/layoutmgr/ElementListUtils/removeLegalBreaks(java.util.List,int,boolean)#java/util/ListIterator/hasNext()
org/apache/fop/layoutmgr/ElementListUtils/removeLegalBreaks(java.util.List,int,boolean)#org/apache/fop/layoutmgr/KnuthPenalty/isAuxiliary()
org/apache/fop/layoutmgr/ElementListUtils/removeLegalBreaks(java.util.List,int,boolean)#java/util/List/size()
org/apache/fop/layoutmgr/ElementListUtils/removeLegalBreaks(java.util.List,int,boolean)#org/apache/fop/layoutmgr/KnuthPenalty/getPosition()
org/apache/fop/layoutmgr/ElementListUtils/removeLegalBreaks(java.util.List,int,boolean)#org/apache/fop/layoutmgr/KnuthGlue/getWidth()
org/apache/fop/render/ps/FOPProcSet/writeTo(org.apache.xmlgraphics.ps.PSGenerator)#org/apache/fop/render/ps/FOPProcSet/getName()
org/apache/fop/render/ps/FOPProcSet/writeTo(org.apache.xmlgraphics.ps.PSGenerator)#org/apache/xmlgraphics/ps/PSGenerator/writeDSCComment(java.lang.String,java.lang.Object)
org/apache/fop/render/ps/FOPProcSet/writeTo(org.apache.xmlgraphics.ps.PSGenerator)#org/apache/xmlgraphics/ps/PSGenerator/writeln(java.lang.String)
org/apache/fop/render/ps/FOPProcSet/writeTo(org.apache.xmlgraphics.ps.PSGenerator)#org/apache/fop/render/ps/FOPProcSet/getRevision()
org/apache/fop/render/ps/FOPProcSet/writeTo(org.apache.xmlgraphics.ps.PSGenerator)#org/apache/fop/render/ps/FOPProcSet/getVersion()
org/apache/fop/render/ps/FOPProcSet/writeTo(org.apache.xmlgraphics.ps.PSGenerator)#org/apache/xmlgraphics/ps/PSGenerator/getResourceTracker()
org/apache/fop/render/ps/FOPProcSet/writeTo(org.apache.xmlgraphics.ps.PSGenerator)#org/apache/xmlgraphics/ps/dsc/ResourceTracker/registerSuppliedResource(org.apache.xmlgraphics.ps.PSResource)
org/apache/fop/render/ps/FOPProcSet/writeTo(org.apache.xmlgraphics.ps.PSGenerator)#org/apache/xmlgraphics/ps/PSGenerator/writeDSCComment(java.lang.String)
org/apache/fop/render/ps/FOPProcSet/writeTo(org.apache.xmlgraphics.ps.PSGenerator)#java/lang/Float/toString(float)
org/apache/fop/render/ps/FOPProcSet/writeTo(org.apache.xmlgraphics.ps.PSGenerator)#java/lang/Integer/toString(int)
org/apache/fop/render/ps/FOPProcSet/writeTo(org.apache.xmlgraphics.ps.PSGenerator)#org/apache/xmlgraphics/ps/PSGenerator/writeDSCComment(java.lang.String,java.lang.Object[])
org/apache/fop/pdf/PDFCIDFont/toPDF()#org/apache/fop/pdf/PDFCMap/referencePDF()
org/apache/fop/pdf/PDFCIDFont/toPDF()#org/apache/fop/pdf/PDFCIDFont/encode(java.lang.String)
org/apache/fop/pdf/PDFCIDFont/toPDF()#java/io/ByteArrayOutputStream/ByteArrayOutputStream(int)
org/apache/fop/pdf/PDFCIDFont/toPDF()#org/apache/commons/logging/Log/error(java.lang.Object,java.lang.Throwable)
org/apache/fop/pdf/PDFCIDFont/toPDF()#java/io/ByteArrayOutputStream/toByteArray()
org/apache/fop/pdf/PDFCIDFont/toPDF()#org/apache/fop/pdf/PDFStream/referencePDF()
org/apache/fop/pdf/PDFCIDFont/toPDF()#org/apache/fop/pdf/PDFCIDFontDescriptor/referencePDF()
org/apache/fop/pdf/PDFCIDFont/toPDF()#java/lang/Integer/toString()
org/apache/fop/pdf/PDFCIDFont/toPDF()#java/lang/Integer/toString(int)
org/apache/fop/pdf/PDFCIDFont/toPDF()#java/io/ByteArrayOutputStream/write(byte[])
org/apache/fop/tools/fontlist/FontListGenerator/buildFamilyMap(org.apache.fop.fonts.FontInfo)#java/util/Map$Entry/getKey()
org/apache/fop/tools/fontlist/FontListGenerator/buildFamilyMap(org.apache.fop.fonts.FontInfo)#java/util/Map/get(java.lang.Object)
org/apache/fop/tools/fontlist/FontListGenerator/buildFamilyMap(org.apache.fop.fonts.FontInfo)#java/util/SortedMap/get(java.lang.Object)
org/apache/fop/tools/fontlist/FontListGenerator/buildFamilyMap(org.apache.fop.fonts.FontInfo)#java/util/Set/contains(java.lang.Object)
org/apache/fop/tools/fontlist/FontListGenerator/buildFamilyMap(org.apache.fop.fonts.FontInfo)#java/util/Collections/sort(java.util.List)
org/apache/fop/tools/fontlist/FontListGenerator/buildFamilyMap(org.apache.fop.fonts.FontInfo)#java/util/List/add(java.lang.Object)
org/apache/fop/tools/fontlist/FontListGenerator/buildFamilyMap(org.apache.fop.fonts.FontInfo)#java/util/Set/remove(java.lang.Object)
org/apache/fop/tools/fontlist/FontListGenerator/buildFamilyMap(org.apache.fop.fonts.FontInfo)#java/util/Map$Entry/getValue()
org/apache/fop/tools/fontlist/FontListGenerator/buildFamilyMap(org.apache.fop.fonts.FontInfo)#java/util/Map/entrySet()
org/apache/fop/tools/fontlist/FontListGenerator/buildFamilyMap(org.apache.fop.fonts.FontInfo)#java/util/SortedSet/first()
org/apache/fop/tools/fontlist/FontListGenerator/buildFamilyMap(org.apache.fop.fonts.FontInfo)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/fop/tools/fontlist/FontListGenerator/buildFamilyMap(org.apache.fop.fonts.FontInfo)#java/util/ArrayList/ArrayList()
org/apache/fop/tools/fontlist/FontListGenerator/buildFamilyMap(org.apache.fop.fonts.FontInfo)#java/util/Iterator/hasNext()
org/apache/fop/tools/fontlist/FontListGenerator/buildFamilyMap(org.apache.fop.fonts.FontInfo)#java/util/TreeMap/TreeMap()
org/apache/fop/tools/fontlist/FontListGenerator/buildFamilyMap(org.apache.fop.fonts.FontInfo)#java/util/Iterator/next()
org/apache/fop/tools/fontlist/FontListGenerator/buildFamilyMap(org.apache.fop.fonts.FontInfo)#java/util/HashMap/HashMap()
org/apache/fop/tools/fontlist/FontListGenerator/buildFamilyMap(org.apache.fop.fonts.FontInfo)#java/util/Map/keySet()
org/apache/fop/tools/fontlist/FontListGenerator/buildFamilyMap(org.apache.fop.fonts.FontInfo)#java/util/Set/iterator()
org/apache/fop/tools/fontlist/FontListGenerator/buildFamilyMap(org.apache.fop.fonts.FontInfo)#java/util/HashSet/HashSet(java.util.Collection)
org/apache/fop/tools/fontlist/FontListGenerator/buildFamilyMap(org.apache.fop.fonts.FontInfo)#java/util/SortedMap/put(java.lang.Object,java.lang.Object)
org/apache/fop/fonts/type1/Type1FontLoader/buildCustomEncoding(java.lang.String,org.apache.fop.fonts.type1.AFMFile)#java/util/Iterator/hasNext()
org/apache/fop/fonts/type1/Type1FontLoader/buildCustomEncoding(java.lang.String,org.apache.fop.fonts.type1.AFMFile)#org/apache/commons/logging/Log/warn(java.lang.Object)
org/apache/fop/fonts/type1/Type1FontLoader/buildCustomEncoding(java.lang.String,org.apache.fop.fonts.type1.AFMFile)#org/apache/commons/logging/Log/info(java.lang.Object)
org/apache/fop/fonts/type1/Type1FontLoader/buildCustomEncoding(java.lang.String,org.apache.fop.fonts.type1.AFMFile)#java/util/Iterator/next()
org/apache/fop/fonts/type1/Type1FontLoader/buildCustomEncoding(java.lang.String,org.apache.fop.fonts.type1.AFMFile)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/fonts/type1/Type1FontLoader/buildCustomEncoding(java.lang.String,org.apache.fop.fonts.type1.AFMFile)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/fop/fonts/type1/Type1FontLoader/buildCustomEncoding(java.lang.String,org.apache.fop.fonts.type1.AFMFile)#java/util/List/iterator()
org/apache/fop/fonts/type1/Type1FontLoader/buildCustomEncoding(java.lang.String,org.apache.fop.fonts.type1.AFMFile)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/fonts/type1/Type1FontLoader/buildCustomEncoding(java.lang.String,org.apache.fop.fonts.type1.AFMFile)#java/lang/String/charAt(int)
org/apache/fop/fonts/type1/Type1FontLoader/buildCustomEncoding(java.lang.String,org.apache.fop.fonts.type1.AFMFile)#java/lang/String/length()
org/apache/fop/fonts/type1/Type1FontLoader/buildCustomEncoding(java.lang.String,org.apache.fop.fonts.type1.AFMFile)#java/lang/StringBuilder/toString()
org/apache/fop/fonts/type1/Type1FontLoader/read()#org/apache/commons/io/IOUtils/closeQuietly(java.io.InputStream)
org/apache/fop/fonts/type1/Type1FontLoader/read()#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/fonts/type1/Type1FontLoader/read()#java/lang/String/length()
org/apache/fop/fonts/type1/Type1FontLoader/read()#java/lang/String/substring(int,int)
org/apache/fop/fonts/type1/Type1FontLoader/read()#java/lang/StringBuilder/StringBuilder()
org/apache/fop/fonts/type1/Type1FontLoader/read()#java/lang/StringBuilder/append(java.lang.Object)
org/apache/fop/fonts/type1/Type1FontLoader/read()#java/io/FileNotFoundException/FileNotFoundException(java.lang.String)
org/apache/fop/fonts/type1/Type1FontLoader/read()#java/io/IOException/IOException(java.lang.Throwable)
org/apache/fop/fonts/type1/Type1FontLoader/read()#java/net/URI/toASCIIString()
org/apache/fop/fonts/type1/Type1FontLoader/read()#java/lang/StringBuilder/toString()
org/apache/fop/fonts/type1/Type1FontLoader/handleEncoding(org.apache.fop.fonts.type1.AFMFile,org.apache.fop.fonts.type1.PFMFile)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/fop/fonts/type1/Type1FontLoader/handleEncoding(org.apache.fop.fonts.type1.AFMFile,org.apache.fop.fonts.type1.PFMFile)#org/apache/commons/logging/Log/warn(java.lang.Object)
org/apache/fop/fonts/type1/Type1FontLoader/handleEncoding(org.apache.fop.fonts.type1.AFMFile,org.apache.fop.fonts.type1.PFMFile)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/fonts/type1/Type1FontLoader/handleEncoding(org.apache.fop.fonts.type1.AFMFile,org.apache.fop.fonts.type1.PFMFile)#org/apache/commons/logging/Log/isDebugEnabled()
org/apache/fop/fonts/type1/Type1FontLoader/handleEncoding(org.apache.fop.fonts.type1.AFMFile,org.apache.fop.fonts.type1.PFMFile)#java/lang/String/format(java.lang.String,java.lang.Object[])
org/apache/fop/fonts/type1/Type1FontLoader/handleEncoding(org.apache.fop.fonts.type1.AFMFile,org.apache.fop.fonts.type1.PFMFile)#java/lang/String/equals(java.lang.Object)
org/apache/fop/fonts/type1/Type1FontLoader/handleEncoding(org.apache.fop.fonts.type1.AFMFile,org.apache.fop.fonts.type1.PFMFile)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/fonts/type1/Type1FontLoader/handleEncoding(org.apache.fop.fonts.type1.AFMFile,org.apache.fop.fonts.type1.PFMFile)#java/lang/Integer/valueOf(int)
org/apache/fop/fonts/type1/Type1FontLoader/handleEncoding(org.apache.fop.fonts.type1.AFMFile,org.apache.fop.fonts.type1.PFMFile)#java/lang/StringBuilder/toString()
org/apache/fop/pdf/PDFEmbeddedFiles/sortNames()#org/apache/fop/pdf/PDFEmbeddedFiles/getNames()
org/apache/fop/pdf/PDFEmbeddedFiles/sortNames()#java/util/Iterator/hasNext()
org/apache/fop/pdf/PDFEmbeddedFiles/sortNames()#java/util/Map$Entry/getKey()
org/apache/fop/pdf/PDFEmbeddedFiles/sortNames()#java/util/Set/iterator()
org/apache/fop/pdf/PDFEmbeddedFiles/sortNames()#java/util/SortedMap/put(java.lang.Object,java.lang.Object)
org/apache/fop/pdf/PDFEmbeddedFiles/sortNames()#java/util/TreeMap/TreeMap()
org/apache/fop/pdf/PDFEmbeddedFiles/sortNames()#java/util/Iterator/next()
org/apache/fop/pdf/PDFEmbeddedFiles/sortNames()#java/util/Map$Entry/getValue()
org/apache/fop/pdf/PDFEmbeddedFiles/sortNames()#java/util/SortedMap/entrySet()
org/apache/fop/fo/extensions/svg/SVGDOMContentHandlerFactory/Handler/getDOMImplementation(java.lang.String)#java/lang/Class/forName(java.lang.String)
org/apache/fop/fo/extensions/svg/SVGDOMContentHandlerFactory/Handler/getDOMImplementation(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/fo/extensions/svg/SVGDOMContentHandlerFactory/Handler/getDOMImplementation(java.lang.String)#java/lang/Class/getMethod(java.lang.String,java.lang.Class[])
org/apache/fop/fo/extensions/svg/SVGDOMContentHandlerFactory/Handler/getDOMImplementation(java.lang.String)#java/lang/String/length()
org/apache/fop/fo/extensions/svg/SVGDOMContentHandlerFactory/Handler/getDOMImplementation(java.lang.String)#java/lang/String/equals(java.lang.Object)
org/apache/fop/fo/extensions/svg/SVGDOMContentHandlerFactory/Handler/getDOMImplementation(java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/fo/extensions/svg/SVGDOMContentHandlerFactory/Handler/getDOMImplementation(java.lang.String)#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/apache/fop/fo/extensions/svg/SVGDOMContentHandlerFactory/Handler/getDOMImplementation(java.lang.String)#java/lang/StringBuilder/toString()
org/apache/fop/fo/extensions/svg/SVGDOMContentHandlerFactory/Handler/getDOMImplementation(java.lang.String)#java/lang/reflect/Method/invoke(java.lang.Object,java.lang.Object[])
org/apache/fop/fo/extensions/svg/SVGDOMContentHandlerFactory/Handler/getDOMImplementation(java.lang.String)#org/apache/batik/anim/dom/SVGDOMImplementation/getDOMImplementation()
org/apache/fop/fo/extensions/svg/SVGDOMContentHandlerFactory/Handler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#org/apache/fop/fo/extensions/svg/SVGDOMContentHandlerFactory$Handler/getDOMImplementation(java.lang.String)
org/apache/fop/fo/extensions/svg/SVGDOMContentHandlerFactory/Handler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#org/xml/sax/Attributes/getValue(java.lang.String)
org/apache/fop/fo/extensions/svg/SVGDOMContentHandlerFactory/Handler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#org/apache/fop/fo/extensions/svg/SVGDOMContentHandlerFactory$Handler/setDelegateLexicalHandler(org.xml.sax.ext.LexicalHandler)
org/apache/fop/fo/extensions/svg/SVGDOMContentHandlerFactory/Handler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#javax/xml/transform/sax/TransformerHandler/setResult(javax.xml.transform.Result)
org/apache/fop/fo/extensions/svg/SVGDOMContentHandlerFactory/Handler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#org/xml/sax/SAXException/SAXException(java.lang.String,java.lang.Exception)
org/apache/fop/fo/extensions/svg/SVGDOMContentHandlerFactory/Handler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#org/w3c/dom/DOMImplementation/createDocument(java.lang.String,java.lang.String,org.w3c.dom.DocumentType)
org/apache/fop/fo/extensions/svg/SVGDOMContentHandlerFactory/Handler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#org/w3c/dom/Document/getDocumentElement()
org/apache/fop/fo/extensions/svg/SVGDOMContentHandlerFactory/Handler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#org/w3c/dom/Document/removeChild(org.w3c.dom.Node)
org/apache/fop/fo/extensions/svg/SVGDOMContentHandlerFactory/Handler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#javax/xml/transform/sax/SAXTransformerFactory/newTransformerHandler()
org/apache/fop/fo/extensions/svg/SVGDOMContentHandlerFactory/Handler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#org/apache/fop/fo/extensions/svg/SVGDOMContentHandlerFactory$Handler/setDelegateContentHandler(org.xml.sax.ContentHandler)
org/apache/fop/fo/extensions/svg/SVGDOMContentHandlerFactory/Handler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#org/apache/fop/fo/extensions/svg/SVGDOMContentHandlerFactory$Handler/setDelegateDTDHandler(org.xml.sax.DTDHandler)
org/apache/fop/fo/extensions/svg/SVGDOMContentHandlerFactory/Handler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#javax/xml/transform/sax/TransformerHandler/startDocument()
org/apache/fop/fo/extensions/svg/SVGDOMContentHandlerFactory/Handler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#javax/xml/transform/dom/DOMResult/DOMResult(org.w3c.dom.Node)
org/apache/fop/afp/modca/MapPageOverlay/addOverlay(java.lang.String)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/fop/afp/modca/MapPageOverlay/addOverlay(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/afp/modca/MapPageOverlay/addOverlay(java.lang.String)#java/util/List/size()
org/apache/fop/afp/modca/MapPageOverlay/addOverlay(java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/afp/modca/MapPageOverlay/addOverlay(java.lang.String)#java/lang/String/getBytes(java.lang.String)
org/apache/fop/afp/modca/MapPageOverlay/addOverlay(java.lang.String)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/fop/afp/modca/MapPageOverlay/addOverlay(java.lang.String)#java/lang/String/length()
org/apache/fop/afp/modca/MapPageOverlay/addOverlay(java.lang.String)#org/apache/commons/logging/Log/isDebugEnabled()
org/apache/fop/afp/modca/MapPageOverlay/addOverlay(java.lang.String)#java/util/List/add(java.lang.Object)
org/apache/fop/afp/modca/MapPageOverlay/addOverlay(java.lang.String)#org/apache/commons/logging/Log/error(java.lang.Object)
org/apache/fop/afp/modca/MapPageOverlay/addOverlay(java.lang.String)#java/lang/StringBuilder/toString()
org/apache/fop/util/XMLResourceBundle/CatalogueHandler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#org/xml/sax/Attributes/getValue(java.lang.String)
org/apache/fop/util/XMLResourceBundle/CatalogueHandler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#org/apache/xmlgraphics/util/QName/QName(java.lang.String,java.lang.String)
org/apache/fop/util/XMLResourceBundle/CatalogueHandler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#java/lang/String/equals(java.lang.Object)
org/apache/fop/util/XMLResourceBundle/CatalogueHandler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/util/XMLResourceBundle/CatalogueHandler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#org/apache/xmlgraphics/util/QName/getLocalName()
org/apache/fop/util/XMLResourceBundle/CatalogueHandler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#org/apache/fop/util/XMLResourceBundle$CatalogueHandler/isOwnNamespace(java.lang.String)
org/apache/fop/util/XMLResourceBundle/CatalogueHandler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#org/xml/sax/helpers/DefaultHandler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)
org/apache/fop/util/XMLResourceBundle/CatalogueHandler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/fop/util/XMLResourceBundle/CatalogueHandler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#org/xml/sax/SAXException/SAXException(java.lang.String)
org/apache/fop/util/XMLResourceBundle/CatalogueHandler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#org/apache/fop/util/XMLResourceBundle$CatalogueHandler/getParentElementName()
org/apache/fop/util/XMLResourceBundle/CatalogueHandler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/util/XMLResourceBundle/CatalogueHandler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#java/util/Stack/push(java.lang.Object)
org/apache/fop/util/XMLResourceBundle/CatalogueHandler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#java/lang/StringBuilder/toString()
org/apache/fop/util/XMLResourceBundle/CatalogueHandler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#java/lang/StringBuffer/setLength(int)
org/apache/fop/layoutmgr/table/TableContentLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/layoutmgr/table/TableContentLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/layoutmgr/table/TableLayoutManager/isFirst(org.apache.fop.layoutmgr.Position)
org/apache/fop/layoutmgr/table/TableContentLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext)#java/util/List/iterator()
org/apache/fop/layoutmgr/table/TableContentLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext)#java/lang/StringBuilder/toString()
org/apache/fop/layoutmgr/table/TableContentLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/fop/layoutmgr/table/TableContentLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext)#java/util/ArrayList/ArrayList()
org/apache/fop/layoutmgr/table/TableContentLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/layoutmgr/table/TableContentLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext)#org/apache/commons/logging/Log/isDebugEnabled()
org/apache/fop/layoutmgr/table/TableContentLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/layoutmgr/table/TableLayoutManager/isLast(org.apache.fop.layoutmgr.Position)
org/apache/fop/layoutmgr/table/TableContentLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext)#java/util/List/isEmpty()
org/apache/fop/layoutmgr/table/TableContentLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/layoutmgr/SpaceResolver$SpaceHandlingBreakPosition/getOriginalBreakPosition()
org/apache/fop/layoutmgr/table/TableContentLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext)#java/util/List/add(java.lang.Object)
org/apache/fop/layoutmgr/table/TableContentLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext)#org/apache/commons/logging/Log/error(java.lang.Object)
org/apache/fop/layoutmgr/table/TableContentLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/fop/layoutmgr/table/TableContentLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/fo/flow/table/Table/getMarkers()
org/apache/fop/layoutmgr/table/TableContentLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/layoutmgr/table/TableLayoutManager/getPSLM()
org/apache/fop/layoutmgr/table/TableContentLayoutManager/addAreas(org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/layoutmgr/table/TableLayoutManager/getCurrentPV()
org/apache/fop/layoutmgr/table/TableContentLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/fop/layoutmgr/table/TableContentLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/layoutmgr/table/TableContentLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#java/util/LinkedList/add(java.lang.Object)
org/apache/fop/layoutmgr/table/TableContentLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#java/util/LinkedList/LinkedList()
org/apache/fop/layoutmgr/table/TableContentLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#java/util/LinkedList/add(int,java.lang.Object)
org/apache/fop/layoutmgr/table/TableContentLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/layoutmgr/table/TableContentLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#java/lang/StringBuilder/toString()
org/apache/fop/layoutmgr/table/TableContentLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#java/lang/StringBuilder/append(int)
org/apache/fop/layoutmgr/table/TableContentLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#org/apache/commons/logging/Log/isDebugEnabled()
org/apache/fop/layoutmgr/table/TableContentLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#java/util/List/isEmpty()
org/apache/fop/layoutmgr/table/TableContentLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#java/util/LinkedList/getLast()
org/apache/fop/layoutmgr/table/TableContentLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#java/util/LinkedList/getFirst()
org/apache/fop/layoutmgr/table/TableContentLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#java/util/LinkedList/size()
org/apache/fop/layoutmgr/table/TableContentLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#java/util/LinkedList/addAll(java.util.Collection)
org/apache/fop/layoutmgr/table/TableContentLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/fop/layoutmgr/table/TableContentLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#org/apache/fop/layoutmgr/table/TableLayoutManager/getPSLM()
org/apache/fop/render/ps/PSImageHandlerRawCCITTFax/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/xmlgraphics/image/loader/Image/getInfo()
org/apache/fop/render/ps/PSImageHandlerRawCCITTFax/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/xmlgraphics/image/loader/ImageInfo/getSize()
org/apache/fop/render/ps/PSImageHandlerRawCCITTFax/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/xmlgraphics/ps/PSImageUtils/writeImage(org.apache.xmlgraphics.ps.ImageEncoder,java.awt.Dimension,java.lang.String,java.awt.geom.Rectangle2D,java.awt.color.ColorSpace,int,boolean,org.apache.xmlgraphics.ps.PSGenerator)
org/apache/fop/render/ps/PSImageHandlerRawCCITTFax/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/xmlgraphics/image/loader/impl/ImageRawCCITTFax/getColorSpace()
org/apache/fop/render/ps/PSImageHandlerRawCCITTFax/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/awt/geom/Rectangle2D$Float/Float(float,float,float,float)
org/apache/fop/render/ps/PSImageHandlerRawCCITTFax/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/awt/Rectangle/getHeight()
org/apache/fop/render/ps/PSImageHandlerRawCCITTFax/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/awt/Rectangle/getX()
org/apache/fop/render/ps/PSImageHandlerRawCCITTFax/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/awt/Rectangle/getY()
org/apache/fop/render/ps/PSImageHandlerRawCCITTFax/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/xmlgraphics/image/loader/ImageSize/getDimensionPx()
org/apache/fop/render/ps/PSImageHandlerRawCCITTFax/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/awt/Rectangle/getWidth()
org/apache/fop/render/ps/PSImageHandlerRawCCITTFax/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/xmlgraphics/image/loader/ImageInfo/getOriginalURI()
org/apache/fop/render/ps/PSImageHandlerRawCCITTFax/generateForm(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,org.apache.fop.render.ps.PSImageFormResource)#org/apache/fop/render/ps/PSImageFormResource/getName()
org/apache/fop/render/ps/PSImageHandlerRawCCITTFax/generateForm(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,org.apache.fop.render.ps.PSImageFormResource)#org/apache/xmlgraphics/image/loader/ImageSize/getDimensionPt()
org/apache/fop/render/ps/PSImageHandlerRawCCITTFax/generateForm(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,org.apache.fop.render.ps.PSImageFormResource)#org/apache/xmlgraphics/image/loader/impl/ImageRawCCITTFax/getColorSpace()
org/apache/fop/render/ps/PSImageHandlerRawCCITTFax/generateForm(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,org.apache.fop.render.ps.PSImageFormResource)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/render/ps/PSImageHandlerRawCCITTFax/generateForm(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,org.apache.fop.render.ps.PSImageFormResource)#org/apache/xmlgraphics/image/loader/ImageInfo/getMimeType()
org/apache/fop/render/ps/PSImageHandlerRawCCITTFax/generateForm(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,org.apache.fop.render.ps.PSImageFormResource)#java/lang/StringBuilder/toString()
org/apache/fop/render/ps/PSImageHandlerRawCCITTFax/generateForm(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,org.apache.fop.render.ps.PSImageFormResource)#org/apache/xmlgraphics/image/loader/Image/getInfo()
org/apache/fop/render/ps/PSImageHandlerRawCCITTFax/generateForm(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,org.apache.fop.render.ps.PSImageFormResource)#org/apache/xmlgraphics/ps/FormGenerator/generate(org.apache.xmlgraphics.ps.PSGenerator)
org/apache/fop/render/ps/PSImageHandlerRawCCITTFax/generateForm(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,org.apache.fop.render.ps.PSImageFormResource)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/render/ps/PSImageHandlerRawCCITTFax/generateForm(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,org.apache.fop.render.ps.PSImageFormResource)#org/apache/xmlgraphics/image/loader/ImageInfo/getSize()
org/apache/fop/render/ps/PSImageHandlerRawCCITTFax/generateForm(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,org.apache.fop.render.ps.PSImageFormResource)#org/apache/xmlgraphics/image/loader/ImageSize/getDimensionPx()
org/apache/fop/render/ps/PSImageHandlerRawCCITTFax/generateForm(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,org.apache.fop.render.ps.PSImageFormResource)#org/apache/xmlgraphics/image/loader/ImageInfo/getOriginalURI()
org/apache/fop/render/ps/PSImageHandlerRawCCITTFax/generateForm(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,org.apache.fop.render.ps.PSImageFormResource)#org/apache/xmlgraphics/ps/ImageFormGenerator/ImageFormGenerator(java.lang.String,java.lang.String,java.awt.geom.Dimension2D,java.awt.Dimension,org.apache.xmlgraphics.ps.ImageEncoder,java.awt.color.ColorSpace,int,boolean)
org/apache/fop/render/afp/AFPForeignAttributeReader/getResourceLevel(java.util.Map)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/render/afp/AFPForeignAttributeReader/getResourceLevel(java.util.Map)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/render/afp/AFPForeignAttributeReader/getResourceLevel(java.util.Map)#java/util/Map/containsKey(java.lang.Object)
org/apache/fop/render/afp/AFPForeignAttributeReader/getResourceLevel(java.util.Map)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/fop/render/afp/AFPForeignAttributeReader/getResourceLevel(java.util.Map)#org/apache/fop/afp/AFPResourceLevel/valueOf(java.lang.String)
org/apache/fop/render/afp/AFPForeignAttributeReader/getResourceLevel(java.util.Map)#java/lang/StringBuilder/toString()
org/apache/fop/render/afp/AFPForeignAttributeReader/getResourceLevel(java.util.Map)#java/util/Map/isEmpty()
org/apache/fop/render/afp/AFPForeignAttributeReader/getResourceLevel(java.util.Map)#java/util/Map/get(java.lang.Object)
org/apache/fop/render/afp/AFPForeignAttributeReader/getResourceLevel(java.util.Map)#java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)
org/apache/fop/render/afp/AFPForeignAttributeReader/getResourceLevel(java.util.Map)#java/net/URI/create(java.lang.String)
org/apache/fop/render/pdf/extensions/PDFDictionaryElement/startOfNode()#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/apache/fop/render/pdf/extensions/PDFDictionaryElement/startOfNode()#org/apache/fop/render/pdf/extensions/PDFDictionaryElement/getName()
org/apache/fop/render/pdf/extensions/PDFDictionaryElement/startOfNode()#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/render/pdf/extensions/PDFDictionaryElement/startOfNode()#org/apache/fop/render/pdf/extensions/PDFDictionaryElement/getNamespaceURI()
org/apache/fop/render/pdf/extensions/PDFDictionaryElement/startOfNode()#org/apache/fop/render/pdf/extensions/PDFDictionaryElement/invalidChildError(org.xml.sax.Locator,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
org/apache/fop/render/pdf/extensions/PDFDictionaryElement/startOfNode()#java/lang/StringBuilder/StringBuilder()
org/apache/fop/render/pdf/extensions/PDFDictionaryElement/startOfNode()#org/apache/fop/render/pdf/extensions/PDFObjectType/elementName()
org/apache/fop/render/pdf/extensions/PDFDictionaryElement/startOfNode()#org/apache/fop/render/pdf/extensions/PDFDictionaryType/hasValueOfElementName(java.lang.String)
org/apache/fop/render/pdf/extensions/PDFDictionaryElement/startOfNode()#java/lang/String/equals(java.lang.Object)
org/apache/fop/render/pdf/extensions/PDFDictionaryElement/startOfNode()#org/apache/fop/render/pdf/extensions/PDFDictionaryElement/getLocator()
org/apache/fop/render/pdf/extensions/PDFDictionaryElement/startOfNode()#java/lang/StringBuilder/toString()
org/apache/fop/fo/FObj/warnOnUnknownProperties(org.xml.sax.Attributes,java.lang.String,org.apache.fop.fo.PropertyList)#java/util/Iterator/hasNext()
org/apache/fop/fo/FObj/warnOnUnknownProperties(org.xml.sax.Attributes,java.lang.String,org.apache.fop.fo.PropertyList)#java/util/Iterator/next()
org/apache/fop/fo/FObj/warnOnUnknownProperties(org.xml.sax.Attributes,java.lang.String,org.apache.fop.fo.PropertyList)#org/apache/fop/fo/FObj/getLocator()
org/apache/fop/fo/FObj/warnOnUnknownProperties(org.xml.sax.Attributes,java.lang.String,org.apache.fop.fo.PropertyList)#org/apache/fop/fo/FObj/getUserAgent()
org/apache/fop/fo/FObj/warnOnUnknownProperties(org.xml.sax.Attributes,java.lang.String,org.apache.fop.fo.PropertyList)#java/util/Map$Entry/getValue()
org/apache/fop/fo/FObj/warnOnUnknownProperties(org.xml.sax.Attributes,java.lang.String,org.apache.fop.fo.PropertyList)#java/util/Map/entrySet()
org/apache/fop/fo/FObj/warnOnUnknownProperties(org.xml.sax.Attributes,java.lang.String,org.apache.fop.fo.PropertyList)#org/apache/fop/fo/FOValidationEventProducer$Provider/get(org.apache.fop.events.EventBroadcaster)
org/apache/fop/fo/FObj/warnOnUnknownProperties(org.xml.sax.Attributes,java.lang.String,org.apache.fop.fo.PropertyList)#java/util/Map$Entry/getKey()
org/apache/fop/fo/FObj/warnOnUnknownProperties(org.xml.sax.Attributes,java.lang.String,org.apache.fop.fo.PropertyList)#java/util/Set/iterator()
org/apache/fop/fo/FObj/addExtensionAttachment(org.apache.fop.fo.extensions.ExtensionAttachment)#org/apache/fop/fo/FObj/getName()
org/apache/fop/fo/FObj/addExtensionAttachment(org.apache.fop.fo.extensions.ExtensionAttachment)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/fo/FObj/addExtensionAttachment(org.apache.fop.fo.extensions.ExtensionAttachment)#org/apache/commons/logging/Log/isDebugEnabled()
org/apache/fop/fo/FObj/addExtensionAttachment(org.apache.fop.fo.extensions.ExtensionAttachment)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/fo/FObj/addExtensionAttachment(org.apache.fop.fo.extensions.ExtensionAttachment)#java/util/List/add(java.lang.Object)
org/apache/fop/fo/FObj/addExtensionAttachment(org.apache.fop.fo.extensions.ExtensionAttachment)#java/lang/NullPointerException/NullPointerException(java.lang.String)
org/apache/fop/fo/FObj/addExtensionAttachment(org.apache.fop.fo.extensions.ExtensionAttachment)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/fop/fo/FObj/addExtensionAttachment(org.apache.fop.fo.extensions.ExtensionAttachment)#java/lang/StringBuilder/toString()
org/apache/fop/fo/FObj/addExtensionAttachment(org.apache.fop.fo.extensions.ExtensionAttachment)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/fop/fo/FObj/addExtensionAttachment(org.apache.fop.fo.extensions.ExtensionAttachment)#java/util/ArrayList/ArrayList()
org/apache/fop/render/bitmap/AbstractBitmapDocumentHandler/startPageContent()#org/apache/fop/render/bitmap/BitmapRenderingSettings/getPageBackgroundColor()
org/apache/fop/render/bitmap/AbstractBitmapDocumentHandler/startPageContent()#java/awt/image/ColorModel/getPixelSize()
org/apache/fop/render/bitmap/AbstractBitmapDocumentHandler/startPageContent()#java/awt/Graphics2D/translate(double,double)
org/apache/fop/render/bitmap/AbstractBitmapDocumentHandler/startPageContent()#org/apache/fop/render/bitmap/BitmapRenderingSettings/hasTransparentPageBackground()
org/apache/fop/render/bitmap/AbstractBitmapDocumentHandler/startPageContent()#org/apache/fop/render/bitmap/AbstractBitmapDocumentHandler/getContext()
org/apache/fop/render/bitmap/AbstractBitmapDocumentHandler/startPageContent()#java/awt/Dimension/getWidth()
org/apache/fop/render/bitmap/AbstractBitmapDocumentHandler/startPageContent()#org/apache/fop/render/bitmap/AbstractBitmapDocumentHandler/getUserAgent()
org/apache/fop/render/bitmap/AbstractBitmapDocumentHandler/startPageContent()#java/awt/Graphics2D/fillRect(int,int,int,int)
org/apache/fop/render/bitmap/AbstractBitmapDocumentHandler/startPageContent()#java/awt/geom/Point2D$Double/Double()
org/apache/fop/render/bitmap/AbstractBitmapDocumentHandler/startPageContent()#java/awt/geom/Point2D/getX()
org/apache/fop/render/bitmap/AbstractBitmapDocumentHandler/startPageContent()#java/awt/geom/Point2D/getY()
org/apache/fop/render/bitmap/AbstractBitmapDocumentHandler/startPageContent()#java/awt/Graphics2D/setPaint(java.awt.Paint)
org/apache/fop/render/bitmap/AbstractBitmapDocumentHandler/startPageContent()#java/awt/Graphics2D/scale(double,double)
org/apache/fop/render/bitmap/AbstractBitmapDocumentHandler/startPageContent()#java/awt/image/BufferedImage/createGraphics()
org/apache/fop/render/bitmap/AbstractBitmapDocumentHandler/startPageContent()#java/awt/geom/Point2D/setLocation(double,double)
org/apache/fop/render/bitmap/AbstractBitmapDocumentHandler/startPageContent()#java/awt/Dimension/getHeight()
org/apache/fop/render/bitmap/AbstractBitmapDocumentHandler/startPageContent()#java/awt/image/BufferedImage/getWidth()
org/apache/fop/render/bitmap/AbstractBitmapDocumentHandler/startPageContent()#java/awt/image/BufferedImage/getColorModel()
org/apache/fop/render/bitmap/AbstractBitmapDocumentHandler/startPageContent()#java/awt/Graphics2D/setBackground(java.awt.Color)
org/apache/fop/render/bitmap/AbstractBitmapDocumentHandler/startPageContent()#java/awt/image/BufferedImage/getHeight()
org/apache/fop/render/bitmap/AbstractBitmapDocumentHandler/startPageContent()#org/apache/fop/render/bitmap/AbstractBitmapDocumentHandler/getFontInfo()
org/apache/fop/render/bitmap/AbstractBitmapDocumentHandler/startPageContent()#java/awt/Graphics2D/setRenderingHint(java.awt.RenderingHints$Key,java.lang.Object)
org/apache/fop/complexscripts/fonts/GlyphPositioningTable/MarkToBaseSubtable/position(org.apache.fop.complexscripts.fonts.GlyphPositioningState)#org/apache/fop/complexscripts/fonts/GlyphPositioningTable$Value/adjust(int,int,int,int)
org/apache/fop/complexscripts/fonts/GlyphPositioningTable/MarkToBaseSubtable/position(org.apache.fop.complexscripts.fonts.GlyphPositioningState)#org/apache/fop/complexscripts/fonts/GlyphPositioningTable$MarkToBaseSubtable/getCoverageIndex(int)
org/apache/fop/complexscripts/fonts/GlyphPositioningTable/MarkToBaseSubtable/position(org.apache.fop.complexscripts.fonts.GlyphPositioningState)#org/apache/fop/complexscripts/fonts/GlyphPositioningState/getPosition()
org/apache/fop/complexscripts/fonts/GlyphPositioningTable/MarkToBaseSubtable/position(org.apache.fop.complexscripts.fonts.GlyphPositioningState)#org/apache/fop/complexscripts/fonts/GlyphPositioningState/getGlyph(int)
org/apache/fop/complexscripts/fonts/GlyphPositioningTable/MarkToBaseSubtable/position(org.apache.fop.complexscripts.fonts.GlyphPositioningState)#org/apache/fop/complexscripts/fonts/GlyphPositioningTable$MarkToBaseSubtable/getMarkAnchor(int,int)
org/apache/fop/complexscripts/fonts/GlyphPositioningTable/MarkToBaseSubtable/position(org.apache.fop.complexscripts.fonts.GlyphPositioningState)#org/apache/fop/complexscripts/fonts/GlyphPositioningState/consume(int)
org/apache/fop/complexscripts/fonts/GlyphPositioningTable/MarkToBaseSubtable/position(org.apache.fop.complexscripts.fonts.GlyphPositioningState)#org/apache/fop/complexscripts/fonts/GlyphPositioningTable$Anchor/getAlignmentAdjustment(org.apache.fop.complexscripts.fonts.GlyphPositioningTable$Anchor)
org/apache/fop/complexscripts/fonts/GlyphPositioningTable/MarkToBaseSubtable/position(org.apache.fop.complexscripts.fonts.GlyphPositioningState)#org/apache/fop/complexscripts/fonts/GlyphPositioningTable$MarkAnchor/getMarkClass()
org/apache/fop/complexscripts/fonts/GlyphPositioningTable/MarkToBaseSubtable/position(org.apache.fop.complexscripts.fonts.GlyphPositioningState)#org/apache/fop/complexscripts/fonts/GlyphPositioningState/isMark(int)
org/apache/fop/complexscripts/fonts/GlyphPositioningTable/MarkToBaseSubtable/position(org.apache.fop.complexscripts.fonts.GlyphPositioningState)#org/apache/fop/complexscripts/fonts/GlyphPositioningTable$MarkToBaseSubtable/getBaseAnchor(int,int)
org/apache/fop/complexscripts/fonts/GlyphPositioningTable/MarkToBaseSubtable/position(org.apache.fop.complexscripts.fonts.GlyphPositioningState)#org/apache/fop/complexscripts/fonts/GlyphPositioningState/getGlyph()
org/apache/fop/tools/anttasks/FOPTaskStarter/renderInputHandler(org.apache.fop.cli.InputHandler,java.io.File,java.lang.String)#java/io/OutputStream/close()
org/apache/fop/tools/anttasks/FOPTaskStarter/renderInputHandler(org.apache.fop.cli.InputHandler,java.io.File,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/tools/anttasks/FOPTaskStarter/renderInputHandler(org.apache.fop.cli.InputHandler,java.io.File,java.lang.String)#org/apache/tools/ant/BuildException/BuildException(java.lang.Throwable)
org/apache/fop/tools/anttasks/FOPTaskStarter/renderInputHandler(org.apache.fop.cli.InputHandler,java.io.File,java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/tools/anttasks/FOPTaskStarter/renderInputHandler(org.apache.fop.cli.InputHandler,java.io.File,java.lang.String)#org/apache/commons/logging/Log/error(java.lang.Object,java.lang.Throwable)
org/apache/fop/tools/anttasks/FOPTaskStarter/renderInputHandler(org.apache.fop.cli.InputHandler,java.io.File,java.lang.String)#java/lang/StringBuilder/toString()
org/apache/fop/tools/anttasks/FOPTaskStarter/renderInputHandler(org.apache.fop.cli.InputHandler,java.io.File,java.lang.String)#org/apache/tools/ant/BuildException/BuildException(java.lang.String,java.lang.Throwable)
org/apache/fop/tools/anttasks/FOPTaskStarter/renderInputHandler(org.apache.fop.cli.InputHandler,java.io.File,java.lang.String)#java/io/BufferedOutputStream/BufferedOutputStream(java.io.OutputStream)
org/apache/fop/tools/anttasks/FOPTaskStarter/renderInputHandler(org.apache.fop.cli.InputHandler,java.io.File,java.lang.String)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/fop/tools/anttasks/FOPTaskStarter/renderInputHandler(org.apache.fop.cli.InputHandler,java.io.File,java.lang.String)#java/io/File/delete()
org/apache/fop/tools/anttasks/FOPTaskStarter/renderInputHandler(org.apache.fop.cli.InputHandler,java.io.File,java.lang.String)#java/io/FileOutputStream/FileOutputStream(java.io.File)
org/apache/fop/tools/anttasks/FOPTaskStarter/run()#org/apache/tools/ant/types/FileSet/getDirectoryScanner(org.apache.tools.ant.Project)
org/apache/fop/tools/anttasks/FOPTaskStarter/run()#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/tools/anttasks/FOPTaskStarter/run()#org/apache/tools/ant/util/GlobPatternMapper/mapFileName(java.lang.String)
org/apache/fop/tools/anttasks/FOPTaskStarter/run()#java/lang/StringBuilder/append(int)
org/apache/fop/tools/anttasks/FOPTaskStarter/run()#java/util/List/size()
org/apache/fop/tools/anttasks/FOPTaskStarter/run()#java/io/File/exists()
org/apache/fop/tools/anttasks/FOPTaskStarter/run()#java/io/File/mkdirs()
org/apache/fop/tools/anttasks/FOPTaskStarter/run()#java/util/List/get(int)
org/apache/fop/tools/anttasks/FOPTaskStarter/run()#org/apache/tools/ant/util/GlobPatternMapper/setTo(java.lang.String)
org/apache/fop/tools/anttasks/FOPTaskStarter/run()#java/io/File/getName()
org/apache/fop/tools/anttasks/FOPTaskStarter/run()#java/io/File/File(java.io.File,java.lang.String)
org/apache/fop/tools/anttasks/FOPTaskStarter/run()#org/apache/tools/ant/DirectoryScanner/getIncludedFiles()
org/apache/fop/tools/anttasks/FOPTaskStarter/run()#org/apache/tools/ant/util/GlobPatternMapper/GlobPatternMapper()
org/apache/fop/tools/anttasks/FOPTaskStarter/run()#java/io/File/lastModified()
org/apache/fop/tools/anttasks/FOPTaskStarter/run()#org/apache/tools/ant/util/GlobPatternMapper/setFrom(java.lang.String)
org/apache/fop/tools/anttasks/FOPTaskStarter/run()#java/lang/StringBuilder/StringBuilder()
org/apache/fop/tools/anttasks/FOPTaskStarter/run()#java/io/File/toURI()
org/apache/fop/tools/anttasks/FOPTaskStarter/run()#org/apache/tools/ant/BuildException/BuildException(java.lang.String)
org/apache/fop/tools/anttasks/FOPTaskStarter/run()#java/lang/StringBuilder/append(java.lang.Object)
org/apache/fop/tools/anttasks/FOPTaskStarter/run()#org/apache/fop/tools/anttasks/Fop/log(java.lang.String,int)
org/apache/fop/tools/anttasks/FOPTaskStarter/run()#org/apache/fop/tools/anttasks/Fop/getProject()
org/apache/fop/tools/anttasks/FOPTaskStarter/run()#org/apache/tools/ant/types/FileSet/getDir(org.apache.tools.ant.Project)
org/apache/fop/tools/anttasks/FOPTaskStarter/run()#java/lang/StringBuilder/toString()
org/apache/fop/tools/anttasks/FOPTaskStarter/run()#java/io/File/getParentFile()
org/apache/fop/tools/anttasks/FOPTaskStarter/run()#java/lang/String/endsWith(java.lang.String)
org/apache/fop/area/AreaTreeParser/Handler/ForeignObjectMaker/startElement(org.xml.sax.Attributes)#org/xml/sax/Attributes/getValue(java.lang.String)
org/apache/fop/area/AreaTreeParser/Handler/ForeignObjectMaker/startElement(org.xml.sax.Attributes)#org/apache/fop/area/AreaTreeParser$Handler/access$5902(org.apache.fop.area.AreaTreeParser$Handler,org.w3c.dom.DOMImplementation)
org/apache/fop/area/AreaTreeParser/Handler/ForeignObjectMaker/startElement(org.xml.sax.Attributes)#org/apache/fop/area/AreaTreeParser$Handler/access$3500(org.xml.sax.Attributes,org.apache.fop.area.AreaTreeObject)
org/apache/fop/area/AreaTreeParser/Handler/ForeignObjectMaker/startElement(org.xml.sax.Attributes)#org/apache/fop/area/AreaTreeParser$Handler/access$5900(org.apache.fop.area.AreaTreeParser$Handler)
org/apache/fop/area/AreaTreeParser/Handler/ForeignObjectMaker/startElement(org.xml.sax.Attributes)#org/apache/fop/area/AreaTreeParser$Handler/access$4300(org.apache.fop.area.AreaTreeParser$Handler,org.xml.sax.Attributes,org.apache.fop.area.Area,java.lang.Object[])
org/apache/fop/area/AreaTreeParser/Handler/ForeignObjectMaker/startElement(org.xml.sax.Attributes)#org/apache/fop/area/AreaTreeParser$Handler/access$4100(org.apache.fop.area.AreaTreeParser$Handler,org.xml.sax.Attributes,org.apache.fop.area.Area)
org/apache/fop/area/AreaTreeParser/Handler/ForeignObjectMaker/startElement(org.xml.sax.Attributes)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/area/AreaTreeParser/Handler/ForeignObjectMaker/startElement(org.xml.sax.Attributes)#org/apache/fop/area/AreaTreeParser$Handler/access$4200()
org/apache/fop/area/AreaTreeParser/Handler/ForeignObjectMaker/startElement(org.xml.sax.Attributes)#org/xml/sax/SAXException/SAXException(java.lang.String)
org/apache/fop/area/AreaTreeParser/Handler/ForeignObjectMaker/startElement(org.xml.sax.Attributes)#org/apache/fop/area/AreaTreeParser$Handler/access$6000(org.apache.fop.area.AreaTreeParser$Handler)
org/apache/fop/area/AreaTreeParser/Handler/ForeignObjectMaker/startElement(org.xml.sax.Attributes)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/area/AreaTreeParser/Handler/ForeignObjectMaker/startElement(org.xml.sax.Attributes)#java/util/Stack/push(java.lang.Object)
org/apache/fop/area/AreaTreeParser/Handler/ForeignObjectMaker/startElement(org.xml.sax.Attributes)#org/apache/fop/area/AreaTreeParser$Handler/access$3600(org.apache.fop.area.AreaTreeParser$Handler)
org/apache/fop/area/AreaTreeParser/Handler/ForeignObjectMaker/startElement(org.xml.sax.Attributes)#org/apache/fop/area/AreaTreeParser$Handler/access$5800(org.apache.fop.area.AreaTreeParser$Handler)
org/apache/fop/area/AreaTreeParser/Handler/ForeignObjectMaker/startElement(org.xml.sax.Attributes)#java/lang/StringBuilder/toString()
org/apache/fop/render/java2d/Java2DRenderer/drawImage(java.lang.String,java.awt.geom.Rectangle2D,java.util.Map)#java/lang/Math/round(double)
org/apache/fop/render/java2d/Java2DRenderer/drawImage(java.lang.String,java.awt.geom.Rectangle2D,java.util.Map)#org/apache/xmlgraphics/image/loader/ImageSize/getWidthMpt()
org/apache/fop/render/java2d/Java2DRenderer/drawImage(java.lang.String,java.awt.geom.Rectangle2D,java.util.Map)#org/apache/xmlgraphics/image/loader/ImageSize/getHeightMpt()
org/apache/fop/render/java2d/Java2DRenderer/drawImage(java.lang.String,java.awt.geom.Rectangle2D,java.util.Map)#org/apache/fop/ResourceEventProducer$Provider/get(org.apache.fop.events.EventBroadcaster)
org/apache/fop/render/java2d/Java2DRenderer/drawImage(java.lang.String,java.awt.geom.Rectangle2D,java.util.Map)#java/awt/geom/Rectangle2D/getWidth()
org/apache/fop/render/java2d/Java2DRenderer/drawImage(java.lang.String,java.awt.geom.Rectangle2D,java.util.Map)#org/apache/xmlgraphics/image/loader/util/ImageUtil/getDefaultHints(org.apache.xmlgraphics.image.loader.ImageSessionContext)
org/apache/fop/render/java2d/Java2DRenderer/drawImage(java.lang.String,java.awt.geom.Rectangle2D,java.util.Map)#org/apache/xmlgraphics/image/loader/impl/ImageXMLDOM/getDocument()
org/apache/fop/render/java2d/Java2DRenderer/drawImage(java.lang.String,java.awt.geom.Rectangle2D,java.util.Map)#org/apache/fop/render/java2d/Java2DRenderer/renderDocument(org.w3c.dom.Document,java.lang.String,java.awt.geom.Rectangle2D,java.util.Map)
org/apache/fop/render/java2d/Java2DRenderer/drawImage(java.lang.String,java.awt.geom.Rectangle2D,java.util.Map)#org/apache/xmlgraphics/image/loader/ImageSize/getDpiHorizontal()
org/apache/fop/render/java2d/Java2DRenderer/drawImage(java.lang.String,java.awt.geom.Rectangle2D,java.util.Map)#java/awt/geom/Rectangle2D/getX()
org/apache/fop/render/java2d/Java2DRenderer/drawImage(java.lang.String,java.awt.geom.Rectangle2D,java.util.Map)#java/awt/geom/Rectangle2D/getY()
org/apache/fop/render/java2d/Java2DRenderer/drawImage(java.lang.String,java.awt.geom.Rectangle2D,java.util.Map)#org/apache/xmlgraphics/image/loader/ImageManager/getImageInfo(java.lang.String,org.apache.xmlgraphics.image.loader.ImageSessionContext)
org/apache/fop/render/java2d/Java2DRenderer/drawImage(java.lang.String,java.awt.geom.Rectangle2D,java.util.Map)#java/awt/geom/AffineTransform/translate(double,double)
org/apache/fop/render/java2d/Java2DRenderer/drawImage(java.lang.String,java.awt.geom.Rectangle2D,java.util.Map)#org/apache/xmlgraphics/image/loader/ImageInfo/getSize()
org/apache/fop/render/java2d/Java2DRenderer/drawImage(java.lang.String,java.awt.geom.Rectangle2D,java.util.Map)#java/awt/Graphics2D/drawRenderedImage(java.awt.image.RenderedImage,java.awt.geom.AffineTransform)
org/apache/fop/render/java2d/Java2DRenderer/drawImage(java.lang.String,java.awt.geom.Rectangle2D,java.util.Map)#java/awt/geom/AffineTransform/scale(double,double)
org/apache/fop/render/java2d/Java2DRenderer/drawImage(java.lang.String,java.awt.geom.Rectangle2D,java.util.Map)#org/apache/xmlgraphics/image/loader/ImageSize/getDpiVertical()
org/apache/fop/render/java2d/Java2DRenderer/drawImage(java.lang.String,java.awt.geom.Rectangle2D,java.util.Map)#org/apache/xmlgraphics/image/loader/ImageManager/getImage(org.apache.xmlgraphics.image.loader.ImageInfo,org.apache.xmlgraphics.image.loader.ImageFlavor[],java.util.Map,org.apache.xmlgraphics.image.loader.ImageSessionContext)
org/apache/fop/render/java2d/Java2DRenderer/drawImage(java.lang.String,java.awt.geom.Rectangle2D,java.util.Map)#org/apache/xmlgraphics/image/loader/ImageInfo/toString()
org/apache/fop/render/java2d/Java2DRenderer/drawImage(java.lang.String,java.awt.geom.Rectangle2D,java.util.Map)#org/apache/xmlgraphics/image/loader/impl/ImageXMLDOM/getRootNamespace()
org/apache/fop/render/java2d/Java2DRenderer/drawImage(java.lang.String,java.awt.geom.Rectangle2D,java.util.Map)#org/apache/xmlgraphics/image/loader/impl/ImageRendered/getRenderedImage()
org/apache/fop/render/java2d/Java2DRenderer/drawImage(java.lang.String,java.awt.geom.Rectangle2D,java.util.Map)#java/awt/geom/Rectangle2D/getHeight()
org/apache/fop/render/java2d/Java2DRenderer/drawImage(java.lang.String,java.awt.geom.Rectangle2D,java.util.Map)#java/awt/geom/AffineTransform/AffineTransform()
org/apache/fop/render/java2d/Java2DRenderer/drawImage(java.lang.String,java.awt.geom.Rectangle2D,java.util.Map)#org/apache/xmlgraphics/image/loader/impl/ImageGraphics2D/getGraphics2DImagePainter()
org/apache/fop/render/java2d/Java2DRenderer/renderText(org.apache.fop.area.inline.TextArea)#org/apache/fop/render/java2d/Java2DRenderer/renderTextDecoration(org.apache.fop.fonts.FontMetrics,int,org.apache.fop.area.inline.InlineArea,int,int)
org/apache/fop/render/java2d/Java2DRenderer/renderText(org.apache.fop.area.inline.TextArea)#java/util/Map/get(java.lang.Object)
org/apache/fop/render/java2d/Java2DRenderer/renderText(org.apache.fop.area.inline.TextArea)#org/apache/fop/area/inline/TextArea/getBlockProgressionOffset()
org/apache/fop/render/java2d/Java2DRenderer/renderText(org.apache.fop.area.inline.TextArea)#org/apache/fop/area/inline/TextArea/getAllocIPD()
org/apache/fop/render/java2d/Java2DRenderer/renderText(org.apache.fop.area.inline.TextArea)#java/awt/geom/AffineTransform/AffineTransform()
org/apache/fop/render/java2d/Java2DRenderer/renderText(org.apache.fop.area.inline.TextArea)#java/awt/geom/AffineTransform/translate(double,double)
org/apache/fop/render/java2d/Java2DRenderer/renderText(org.apache.fop.area.inline.TextArea)#org/apache/fop/area/inline/TextArea/getBaselineOffset()
org/apache/fop/render/java2d/Java2DRenderer/renderText(org.apache.fop.area.inline.TextArea)#org/apache/fop/render/java2d/Java2DRenderer/renderInlineAreaBackAndBorders(org.apache.fop.area.inline.InlineArea)
org/apache/fop/render/java2d/Java2DRenderer/renderText(org.apache.fop.area.inline.TextArea)#org/apache/fop/area/inline/TextArea/getTraitAsInteger(java.lang.Integer)
org/apache/fop/render/java2d/Java2DRenderer/renderText(org.apache.fop.area.inline.TextArea)#org/apache/fop/render/java2d/Java2DRenderer/getFontFromArea(org.apache.fop.area.Area)
org/apache/fop/render/java2d/Java2DRenderer/renderText(org.apache.fop.area.inline.TextArea)#org/apache/fop/area/inline/TextArea/getBorderAndPaddingWidthStart()
org/apache/fop/render/java2d/Java2DRenderer/renderText(org.apache.fop.area.inline.TextArea,java.awt.Graphics2D,org.apache.fop.fonts.Font)#java/awt/Graphics2D/getFontRenderContext()
org/apache/fop/render/java2d/Java2DRenderer/renderText(org.apache.fop.area.inline.TextArea,java.awt.Graphics2D,org.apache.fop.fonts.Font)#java/awt/font/GlyphVector/getLogicalBounds()
org/apache/fop/render/java2d/Java2DRenderer/renderText(org.apache.fop.area.inline.TextArea,java.awt.Graphics2D,org.apache.fop.fonts.Font)#org/apache/fop/area/inline/TextArea/getTextWordSpaceAdjust()
org/apache/fop/render/java2d/Java2DRenderer/renderText(org.apache.fop.area.inline.TextArea,java.awt.Graphics2D,org.apache.fop.fonts.Font)#java/util/Iterator/hasNext()
org/apache/fop/render/java2d/Java2DRenderer/renderText(org.apache.fop.area.inline.TextArea,java.awt.Graphics2D,org.apache.fop.fonts.Font)#java/util/Iterator/next()
org/apache/fop/render/java2d/Java2DRenderer/renderText(org.apache.fop.area.inline.TextArea,java.awt.Graphics2D,org.apache.fop.fonts.Font)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/render/java2d/Java2DRenderer/renderText(org.apache.fop.area.inline.TextArea,java.awt.Graphics2D,org.apache.fop.fonts.Font)#org/apache/fop/area/inline/TextArea/getChildAreas()
org/apache/fop/render/java2d/Java2DRenderer/renderText(org.apache.fop.area.inline.TextArea,java.awt.Graphics2D,org.apache.fop.fonts.Font)#java/awt/font/GlyphVector/getGlyphPosition(int)
org/apache/fop/render/java2d/Java2DRenderer/renderText(org.apache.fop.area.inline.TextArea,java.awt.Graphics2D,org.apache.fop.fonts.Font)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/apache/fop/render/java2d/Java2DRenderer/renderText(org.apache.fop.area.inline.TextArea,java.awt.Graphics2D,org.apache.fop.fonts.Font)#java/awt/Font/createGlyphVector(java.awt.font.FontRenderContext,java.lang.String)
org/apache/fop/render/java2d/Java2DRenderer/renderText(org.apache.fop.area.inline.TextArea,java.awt.Graphics2D,org.apache.fop.fonts.Font)#org/apache/fop/area/inline/TextArea/getTrait(java.lang.Integer)
org/apache/fop/render/java2d/Java2DRenderer/renderText(org.apache.fop.area.inline.TextArea,java.awt.Graphics2D,org.apache.fop.fonts.Font)#java/awt/Graphics2D/drawGlyphVector(java.awt.font.GlyphVector,float,float)
org/apache/fop/render/java2d/Java2DRenderer/renderText(org.apache.fop.area.inline.TextArea,java.awt.Graphics2D,org.apache.fop.fonts.Font)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/render/java2d/Java2DRenderer/renderText(org.apache.fop.area.inline.TextArea,java.awt.Graphics2D,org.apache.fop.fonts.Font)#java/awt/Graphics2D/setColor(java.awt.Color)
org/apache/fop/render/java2d/Java2DRenderer/renderText(org.apache.fop.area.inline.TextArea,java.awt.Graphics2D,org.apache.fop.fonts.Font)#java/lang/String/charAt(int)
org/apache/fop/render/java2d/Java2DRenderer/renderText(org.apache.fop.area.inline.TextArea,java.awt.Graphics2D,org.apache.fop.fonts.Font)#java/awt/font/GlyphVector/setGlyphPosition(int,java.awt.geom.Point2D)
org/apache/fop/render/java2d/Java2DRenderer/renderText(org.apache.fop.area.inline.TextArea,java.awt.Graphics2D,org.apache.fop.fonts.Font)#java/awt/geom/Point2D/setLocation(double,double)
org/apache/fop/render/java2d/Java2DRenderer/renderText(org.apache.fop.area.inline.TextArea,java.awt.Graphics2D,org.apache.fop.fonts.Font)#org/apache/fop/area/inline/TextArea/getTextLetterSpaceAdjust()
org/apache/fop/render/java2d/Java2DRenderer/renderText(org.apache.fop.area.inline.TextArea,java.awt.Graphics2D,org.apache.fop.fonts.Font)#java/awt/geom/Rectangle2D/getWidth()
org/apache/fop/render/java2d/Java2DRenderer/renderText(org.apache.fop.area.inline.TextArea,java.awt.Graphics2D,org.apache.fop.fonts.Font)#java/awt/Graphics2D/getFont()
org/apache/fop/render/java2d/Java2DRenderer/renderText(org.apache.fop.area.inline.TextArea,java.awt.Graphics2D,org.apache.fop.fonts.Font)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/fop/render/java2d/Java2DRenderer/renderText(org.apache.fop.area.inline.TextArea,java.awt.Graphics2D,org.apache.fop.fonts.Font)#java/util/List/iterator()
org/apache/fop/render/java2d/Java2DRenderer/renderText(org.apache.fop.area.inline.TextArea,java.awt.Graphics2D,org.apache.fop.fonts.Font)#java/lang/StringBuilder/toString()
org/apache/fop/render/java2d/Java2DRenderer/renderText(org.apache.fop.area.inline.TextArea,java.awt.Graphics2D,org.apache.fop.fonts.Font)#java/awt/geom/Point2D/getY()
org/apache/fop/render/java2d/Java2DRenderer/getPageImage(org.apache.fop.area.PageViewport)#java/awt/geom/AffineTransform/scale(double,double)
org/apache/fop/render/java2d/Java2DRenderer/getPageImage(org.apache.fop.area.PageViewport)#org/apache/commons/logging/Log/info(java.lang.Object)
org/apache/fop/render/java2d/Java2DRenderer/getPageImage(org.apache.fop.area.PageViewport)#org/apache/fop/render/java2d/Java2DRenderer/renderPageAreas(org.apache.fop.area.Page)
org/apache/fop/render/java2d/Java2DRenderer/getPageImage(org.apache.fop.area.PageViewport)#java/awt/Rectangle/getSize()
org/apache/fop/render/java2d/Java2DRenderer/getPageImage(org.apache.fop.area.PageViewport)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/render/java2d/Java2DRenderer/getPageImage(org.apache.fop.area.PageViewport)#java/awt/geom/Point2D/getX()
org/apache/fop/render/java2d/Java2DRenderer/getPageImage(org.apache.fop.area.PageViewport)#java/awt/Graphics2D/getTransform()
org/apache/fop/render/java2d/Java2DRenderer/getPageImage(org.apache.fop.area.PageViewport)#java/lang/Math/round(double)
org/apache/fop/render/java2d/Java2DRenderer/getPageImage(org.apache.fop.area.PageViewport)#java/awt/geom/AffineTransform/translate(double,double)
org/apache/fop/render/java2d/Java2DRenderer/getPageImage(org.apache.fop.area.PageViewport)#org/apache/fop/area/PageViewport/getForeignAttributes()
org/apache/fop/render/java2d/Java2DRenderer/getPageImage(org.apache.fop.area.PageViewport)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/render/java2d/Java2DRenderer/getPageImage(org.apache.fop.area.PageViewport)#java/awt/image/BufferedImage/createGraphics()
org/apache/fop/render/java2d/Java2DRenderer/getPageImage(org.apache.fop.area.PageViewport)#java/awt/Graphics2D/setColor(java.awt.Color)
org/apache/fop/render/java2d/Java2DRenderer/getPageImage(org.apache.fop.area.PageViewport)#java/lang/StringBuilder/append(int)
org/apache/fop/render/java2d/Java2DRenderer/getPageImage(org.apache.fop.area.PageViewport)#java/awt/Rectangle/getWidth()
org/apache/fop/render/java2d/Java2DRenderer/getPageImage(org.apache.fop.area.PageViewport)#java/util/Map/get(java.lang.Object)
org/apache/fop/render/java2d/Java2DRenderer/getPageImage(org.apache.fop.area.PageViewport)#java/awt/Graphics2D/setRenderingHint(java.awt.RenderingHints$Key,java.lang.Object)
org/apache/fop/render/java2d/Java2DRenderer/getPageImage(org.apache.fop.area.PageViewport)#java/awt/Graphics2D/setTransform(java.awt.geom.AffineTransform)
org/apache/fop/render/java2d/Java2DRenderer/getPageImage(org.apache.fop.area.PageViewport)#java/awt/Rectangle/getMinX()
org/apache/fop/render/java2d/Java2DRenderer/getPageImage(org.apache.fop.area.PageViewport)#java/awt/Rectangle/getMinY()
org/apache/fop/render/java2d/Java2DRenderer/getPageImage(org.apache.fop.area.PageViewport)#java/awt/Graphics2D/fillRect(int,int,int,int)
org/apache/fop/render/java2d/Java2DRenderer/getPageImage(org.apache.fop.area.PageViewport)#java/awt/Rectangle/getHeight()
org/apache/fop/render/java2d/Java2DRenderer/getPageImage(org.apache.fop.area.PageViewport)#java/lang/StringBuilder/toString()
org/apache/fop/render/java2d/Java2DRenderer/getPageImage(org.apache.fop.area.PageViewport)#java/awt/geom/Point2D/getY()
org/apache/fop/render/java2d/Java2DRenderer/renderLeader(org.apache.fop.area.inline.Leader)#org/apache/fop/render/AbstractPathOrientedRenderer/renderLeader(org.apache.fop.area.inline.Leader)
org/apache/fop/render/java2d/Java2DRenderer/renderLeader(org.apache.fop.area.inline.Leader)#java/awt/Graphics2D/fill(java.awt.Shape)
org/apache/fop/render/java2d/Java2DRenderer/renderLeader(org.apache.fop.area.inline.Leader)#java/awt/geom/Line2D/getY1()
org/apache/fop/render/java2d/Java2DRenderer/renderLeader(org.apache.fop.area.inline.Leader)#java/awt/geom/Line2D/setLine(double,double,double,double)
org/apache/fop/render/java2d/Java2DRenderer/renderLeader(org.apache.fop.area.inline.Leader)#org/apache/fop/area/inline/Leader/getBlockProgressionOffset()
org/apache/fop/render/java2d/Java2DRenderer/renderLeader(org.apache.fop.area.inline.Leader)#org/apache/fop/area/inline/Leader/getBorderAndPaddingWidthStart()
org/apache/fop/render/java2d/Java2DRenderer/renderLeader(org.apache.fop.area.inline.Leader)#java/awt/geom/Line2D$Float/Float()
org/apache/fop/render/java2d/Java2DRenderer/renderLeader(org.apache.fop.area.inline.Leader)#org/apache/fop/render/java2d/Java2DRenderer/renderInlineAreaBackAndBorders(org.apache.fop.area.inline.InlineArea)
org/apache/fop/render/java2d/Java2DRenderer/renderLeader(org.apache.fop.area.inline.Leader)#java/awt/Graphics2D/draw(java.awt.Shape)
org/apache/fop/render/java2d/Java2DRenderer/renderLeader(org.apache.fop.area.inline.Leader)#java/awt/geom/Line2D/getX1()
org/apache/fop/render/java2d/Java2DRenderer/renderLeader(org.apache.fop.area.inline.Leader)#java/awt/geom/Line2D/getY2()
org/apache/fop/render/java2d/Java2DRenderer/renderLeader(org.apache.fop.area.inline.Leader)#org/apache/fop/area/inline/Leader/getIPD()
org/apache/fop/render/java2d/Java2DRenderer/renderLeader(org.apache.fop.area.inline.Leader)#org/apache/fop/area/inline/Leader/getTrait(java.lang.Integer)
org/apache/fop/render/java2d/Java2DRenderer/renderLeader(org.apache.fop.area.inline.Leader)#java/awt/geom/Line2D/getX2()
org/apache/fop/fo/properties/PropertyCache/fetch(java.lang.Object)#java/util/concurrent/atomic/AtomicInteger/incrementAndGet()
org/apache/fop/fo/properties/PropertyCache/fetch(java.lang.Object)#java/lang/ref/WeakReference/get()
org/apache/fop/fo/properties/PropertyCache/fetch(java.lang.Object)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/fo/properties/PropertyCache/fetch(java.lang.Object)#org/apache/commons/logging/Log/info(java.lang.Object)
org/apache/fop/fo/properties/PropertyCache/fetch(java.lang.Object)#java/lang/Class/getName()
org/apache/fop/fo/properties/PropertyCache/fetch(java.lang.Object)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/fo/properties/PropertyCache/fetch(java.lang.Object)#java/lang/ref/WeakReference/WeakReference(java.lang.Object)
org/apache/fop/fo/properties/PropertyCache/fetch(java.lang.Object)#java/lang/Integer/valueOf(int)
org/apache/fop/fo/properties/PropertyCache/fetch(java.lang.Object)#java/lang/Object/getClass()
org/apache/fop/fo/properties/PropertyCache/fetch(java.lang.Object)#java/util/concurrent/ConcurrentMap/get(java.lang.Object)
org/apache/fop/fo/properties/PropertyCache/fetch(java.lang.Object)#java/util/concurrent/ConcurrentMap/putIfAbsent(java.lang.Object,java.lang.Object)
org/apache/fop/fo/properties/PropertyCache/fetch(java.lang.Object)#java/lang/StringBuilder/toString()
org/apache/fop/fo/properties/PropertyCache/fetch(java.lang.Object)#java/lang/StringBuilder/append(int)
org/apache/fop/fo/properties/PropertyCache/fetch(java.lang.Object)#java/util/concurrent/atomic/AtomicInteger/get()
org/apache/fop/fo/properties/PropertyCache/fetch(java.lang.Object)#java/lang/Object/hashCode()
org/apache/fop/fo/properties/PropertyCache/fetch(java.lang.Object)#java/util/concurrent/ConcurrentMap/put(java.lang.Object,java.lang.Object)
org/apache/fop/layoutmgr/StaticContentLayoutManager/doLayout()#org/apache/fop/area/Block/getBPD()
org/apache/fop/layoutmgr/StaticContentLayoutManager/doLayout()#org/apache/fop/area/Block/getIPD()
org/apache/fop/layoutmgr/StaticContentLayoutManager/doLayout()#org/apache/fop/layoutmgr/StaticContentLayoutManager$StaticContentBreaker/StaticContentBreaker(org.apache.fop.layoutmgr.StaticContentLayoutManager,org.apache.fop.layoutmgr.StaticContentLayoutManager,int,int)
org/apache/fop/layoutmgr/StaticContentLayoutManager/doLayout()#org/apache/fop/fo/pagination/StaticContent/getLocator()
org/apache/fop/layoutmgr/StaticContentLayoutManager/doLayout()#org/apache/fop/fo/pagination/StaticContent/getUserAgent()
org/apache/fop/layoutmgr/StaticContentLayoutManager/doLayout()#java/lang/String/equals(java.lang.Object)
org/apache/fop/layoutmgr/StaticContentLayoutManager/doLayout()#org/apache/fop/fo/pagination/StaticContent/getFlowName()
org/apache/fop/layoutmgr/StaticContentLayoutManager/doLayout()#org/apache/fop/fo/pagination/SideRegion/getName()
org/apache/fop/layoutmgr/StaticContentLayoutManager/doLayout()#org/apache/fop/layoutmgr/PageSequenceLayoutManager/getCurrentPage()
org/apache/fop/layoutmgr/StaticContentLayoutManager/doLayout()#org/apache/fop/layoutmgr/StaticContentLayoutManager$StaticContentBreaker/isOverflow()
org/apache/fop/layoutmgr/StaticContentLayoutManager/doLayout()#org/apache/fop/layoutmgr/StaticContentLayoutManager$StaticContentBreaker/getOverflowAmount()
org/apache/fop/layoutmgr/StaticContentLayoutManager/doLayout()#org/apache/fop/layoutmgr/StaticContentLayoutManager$StaticContentBreaker/doLayout(int,boolean)
org/apache/fop/layoutmgr/StaticContentLayoutManager/doLayout()#org/apache/fop/area/RegionReference/getBPD()
org/apache/fop/layoutmgr/StaticContentLayoutManager/doLayout()#org/apache/fop/layoutmgr/BlockLevelEventProducer$Provider/get(org.apache.fop.events.EventBroadcaster)
org/apache/fop/layoutmgr/StaticContentLayoutManager/doLayout()#org/apache/fop/area/RegionReference/getIPD()
org/apache/fop/layoutmgr/StaticContentLayoutManager/doLayout()#org/apache/fop/fo/pagination/SideRegion/getOverflow()
org/apache/fop/layoutmgr/StaticContentLayoutManager/doLayout()#org/apache/fop/fo/pagination/SideRegion/getDisplayAlign()
org/apache/fop/layoutmgr/StaticContentLayoutManager/doLayout()#org/apache/fop/layoutmgr/StaticContentLayoutManager/getPSLM()
org/apache/fop/render/pdf/extensions/PDFExtensionHandler/endElement(java.lang.String,java.lang.String,java.lang.String)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/apache/fop/render/pdf/extensions/PDFExtensionHandler/endElement(java.lang.String,java.lang.String,java.lang.String)#java/util/Stack/pop()
org/apache/fop/render/pdf/extensions/PDFExtensionHandler/endElement(java.lang.String,java.lang.String,java.lang.String)#org/apache/fop/render/pdf/extensions/PDFObjectType/hasValueOfElementName(java.lang.String)
org/apache/fop/render/pdf/extensions/PDFExtensionHandler/endElement(java.lang.String,java.lang.String,java.lang.String)#org/xml/sax/SAXException/SAXException(java.lang.Exception)
org/apache/fop/render/pdf/extensions/PDFExtensionHandler/endElement(java.lang.String,java.lang.String,java.lang.String)#org/apache/fop/render/pdf/extensions/PDFObjectType/elementName()
org/apache/fop/render/pdf/extensions/PDFExtensionHandler/endElement(java.lang.String,java.lang.String,java.lang.String)#java/util/Stack/peek()
org/apache/fop/render/pdf/extensions/PDFExtensionHandler/endElement(java.lang.String,java.lang.String,java.lang.String)#org/apache/fop/render/pdf/extensions/PDFDictionaryType/hasValueOfElementName(java.lang.String)
org/apache/fop/render/pdf/extensions/PDFExtensionHandler/endElement(java.lang.String,java.lang.String,java.lang.String)#java/util/Stack/empty()
org/apache/fop/render/pdf/extensions/PDFExtensionHandler/endElement(java.lang.String,java.lang.String,java.lang.String)#org/xml/sax/Attributes/getValue(java.lang.String)
org/apache/fop/render/pdf/extensions/PDFExtensionHandler/endElement(java.lang.String,java.lang.String,java.lang.String)#org/apache/fop/render/pdf/extensions/PDFCollectionEntryExtension/setValue(java.lang.Object)
org/apache/fop/render/pdf/extensions/PDFExtensionHandler/endElement(java.lang.String,java.lang.String,java.lang.String)#java/lang/String/equals(java.lang.Object)
org/apache/fop/render/pdf/extensions/PDFExtensionHandler/endElement(java.lang.String,java.lang.String,java.lang.String)#java/lang/StringBuffer/toString()
org/apache/fop/render/pdf/extensions/PDFExtensionHandler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#org/xml/sax/helpers/AttributesImpl/AttributesImpl(org.xml.sax.Attributes)
org/apache/fop/render/pdf/extensions/PDFExtensionHandler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#org/xml/sax/SAXException/SAXException(java.lang.String)
org/apache/fop/render/pdf/extensions/PDFExtensionHandler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#org/apache/fop/render/pdf/extensions/PDFDictionaryType/elementName()
org/apache/fop/render/pdf/extensions/PDFExtensionHandler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#java/lang/String/equals(java.lang.Object)
org/apache/fop/render/pdf/extensions/PDFExtensionHandler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/render/pdf/extensions/PDFExtensionHandler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#org/apache/fop/render/pdf/extensions/PDFPageExtension/setProperty(java.lang.String,java.lang.String)
org/apache/fop/render/pdf/extensions/PDFExtensionHandler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#org/apache/fop/render/pdf/extensions/PDFObjectType/elementName()
org/apache/fop/render/pdf/extensions/PDFExtensionHandler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#org/apache/fop/render/pdf/extensions/PDFObjectType/valueOfElementName(java.lang.String)
org/apache/fop/render/pdf/extensions/PDFExtensionHandler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#org/apache/fop/render/pdf/extensions/PDFNavigatorExtension/setProperty(java.lang.String,java.lang.String)
org/apache/fop/render/pdf/extensions/PDFExtensionHandler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#java/util/Stack/empty()
org/apache/fop/render/pdf/extensions/PDFExtensionHandler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#org/xml/sax/Attributes/getValue(java.lang.String)
org/apache/fop/render/pdf/extensions/PDFExtensionHandler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#org/apache/fop/render/pdf/extensions/PDFObjectType/hasValueOfElementName(java.lang.String)
org/apache/fop/render/pdf/extensions/PDFExtensionHandler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#org/apache/fop/render/pdf/extensions/PDFDictionaryExtension/setKey(java.lang.String)
org/apache/fop/render/pdf/extensions/PDFExtensionHandler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#org/apache/commons/logging/Log/warn(java.lang.Object)
org/apache/fop/render/pdf/extensions/PDFExtensionHandler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/render/pdf/extensions/PDFExtensionHandler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#java/util/Stack/push(java.lang.Object)
org/apache/fop/render/pdf/extensions/PDFExtensionHandler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#org/apache/fop/render/pdf/extensions/PDFArrayExtension/setKey(java.lang.String)
org/apache/fop/render/pdf/extensions/PDFExtensionHandler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#org/apache/fop/render/pdf/extensions/PDFLayerExtension/setProperty(java.lang.String,java.lang.String)
org/apache/fop/render/pdf/extensions/PDFExtensionHandler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#java/util/Stack/peek()
org/apache/fop/render/pdf/extensions/PDFExtensionHandler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#org/apache/fop/render/pdf/extensions/PDFActionExtension/setProperty(java.lang.String,java.lang.String)
org/apache/fop/render/pdf/extensions/PDFExtensionHandler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#java/lang/StringBuilder/toString()
org/apache/fop/fonts/type1/AFMParser/BeanSetter/setValue(java.lang.Object,java.lang.Class,java.lang.Object)#java/lang/Class/getMethod(java.lang.String,java.lang.Class[])
org/apache/fop/fonts/type1/AFMParser/BeanSetter/setValue(java.lang.Object,java.lang.Class,java.lang.Object)#java/lang/reflect/InvocationTargetException/getMessage()
org/apache/fop/fonts/type1/AFMParser/BeanSetter/setValue(java.lang.Object,java.lang.Class,java.lang.Object)#java/lang/IllegalAccessException/getMessage()
org/apache/fop/fonts/type1/AFMParser/BeanSetter/setValue(java.lang.Object,java.lang.Class,java.lang.Object)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/fonts/type1/AFMParser/BeanSetter/setValue(java.lang.Object,java.lang.Class,java.lang.Object)#java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)
org/apache/fop/fonts/type1/AFMParser/BeanSetter/setValue(java.lang.Object,java.lang.Class,java.lang.Object)#java/lang/Object/getClass()
org/apache/fop/fonts/type1/AFMParser/BeanSetter/setValue(java.lang.Object,java.lang.Class,java.lang.Object)#java/lang/reflect/Method/invoke(java.lang.Object,java.lang.Object[])
org/apache/fop/fonts/type1/AFMParser/BeanSetter/setValue(java.lang.Object,java.lang.Class,java.lang.Object)#java/lang/StringBuilder/toString()
org/apache/fop/fonts/type1/AFMParser/BeanSetter/setValue(java.lang.Object,java.lang.Class,java.lang.Object)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/fonts/type1/AFMParser/BeanSetter/setValue(java.lang.Object,java.lang.Class,java.lang.Object)#java/lang/NoSuchMethodException/getMessage()
org/apache/fop/svg/AbstractFOPTextPainter/TextRunPainter/paintTextRun(org.apache.batik.bridge.StrokingTextPainter$TextRun,java.awt.Graphics2D)#java/lang/String/length()
org/apache/fop/svg/AbstractFOPTextPainter/TextRunPainter/paintTextRun(org.apache.batik.bridge.StrokingTextPainter$TextRun,java.awt.Graphics2D)#org/apache/batik/bridge/TextSpanLayout/getAdvance2D()
org/apache/fop/svg/AbstractFOPTextPainter/TextRunPainter/paintTextRun(org.apache.batik.bridge.StrokingTextPainter$TextRun,java.awt.Graphics2D)#org/apache/fop/svg/AbstractFOPTextPainter$TextRunPainter/updateLocationFromACI(java.text.AttributedCharacterIterator,java.awt.geom.Point2D)
org/apache/fop/svg/AbstractFOPTextPainter/TextRunPainter/paintTextRun(org.apache.batik.bridge.StrokingTextPainter$TextRun,java.awt.Graphics2D)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/svg/AbstractFOPTextPainter/TextRunPainter/paintTextRun(org.apache.batik.bridge.StrokingTextPainter$TextRun,java.awt.Graphics2D)#org/apache/batik/bridge/StrokingTextPainter$TextRun/getLayout()
org/apache/fop/svg/AbstractFOPTextPainter/TextRunPainter/paintTextRun(org.apache.batik.bridge.StrokingTextPainter$TextRun,java.awt.Graphics2D)#org/apache/batik/bridge/TextSpanLayout/getGlyphAdvances()
org/apache/fop/svg/AbstractFOPTextPainter/TextRunPainter/paintTextRun(org.apache.batik.bridge.StrokingTextPainter$TextRun,java.awt.Graphics2D)#java/awt/geom/Point2D/getX()
org/apache/fop/svg/AbstractFOPTextPainter/TextRunPainter/paintTextRun(org.apache.batik.bridge.StrokingTextPainter$TextRun,java.awt.Graphics2D)#java/awt/Graphics2D/getTransform()
org/apache/fop/svg/AbstractFOPTextPainter/TextRunPainter/paintTextRun(org.apache.batik.bridge.StrokingTextPainter$TextRun,java.awt.Graphics2D)#java/lang/Math/round(double)
org/apache/fop/svg/AbstractFOPTextPainter/TextRunPainter/paintTextRun(org.apache.batik.bridge.StrokingTextPainter$TextRun,java.awt.Graphics2D)#org/apache/fop/svg/FOPTextHandler/drawString(java.awt.Graphics2D,java.lang.String,float,float)
org/apache/fop/svg/AbstractFOPTextPainter/TextRunPainter/paintTextRun(org.apache.batik.bridge.StrokingTextPainter$TextRun,java.awt.Graphics2D)#java/awt/Graphics2D/setPaint(java.awt.Paint)
org/apache/fop/svg/AbstractFOPTextPainter/TextRunPainter/paintTextRun(org.apache.batik.bridge.StrokingTextPainter$TextRun,java.awt.Graphics2D)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/svg/AbstractFOPTextPainter/TextRunPainter/paintTextRun(org.apache.batik.bridge.StrokingTextPainter$TextRun,java.awt.Graphics2D)#java/lang/String/charAt(int)
org/apache/fop/svg/AbstractFOPTextPainter/TextRunPainter/paintTextRun(org.apache.batik.bridge.StrokingTextPainter$TextRun,java.awt.Graphics2D)#java/awt/Graphics2D/setColor(java.awt.Color)
org/apache/fop/svg/AbstractFOPTextPainter/TextRunPainter/paintTextRun(org.apache.batik.bridge.StrokingTextPainter$TextRun,java.awt.Graphics2D)#java/awt/geom/AffineTransform/getScaleX()
org/apache/fop/svg/AbstractFOPTextPainter/TextRunPainter/paintTextRun(org.apache.batik.bridge.StrokingTextPainter$TextRun,java.awt.Graphics2D)#java/awt/geom/Point2D/setLocation(double,double)
org/apache/fop/svg/AbstractFOPTextPainter/TextRunPainter/paintTextRun(org.apache.batik.bridge.StrokingTextPainter$TextRun,java.awt.Graphics2D)#java/awt/geom/AffineTransform/transform(java.awt.geom.Point2D,java.awt.geom.Point2D)
org/apache/fop/svg/AbstractFOPTextPainter/TextRunPainter/paintTextRun(org.apache.batik.bridge.StrokingTextPainter$TextRun,java.awt.Graphics2D)#org/apache/batik/bridge/TextNode$Anchor/getType()
org/apache/fop/svg/AbstractFOPTextPainter/TextRunPainter/paintTextRun(org.apache.batik.bridge.StrokingTextPainter$TextRun,java.awt.Graphics2D)#org/apache/batik/bridge/StrokingTextPainter$TextRun/getACI()
org/apache/fop/svg/AbstractFOPTextPainter/TextRunPainter/paintTextRun(org.apache.batik.bridge.StrokingTextPainter$TextRun,java.awt.Graphics2D)#java/lang/StringBuilder/append(char)
org/apache/fop/svg/AbstractFOPTextPainter/TextRunPainter/paintTextRun(org.apache.batik.bridge.StrokingTextPainter$TextRun,java.awt.Graphics2D)#java/text/AttributedCharacterIterator/first()
org/apache/fop/svg/AbstractFOPTextPainter/TextRunPainter/paintTextRun(org.apache.batik.bridge.StrokingTextPainter$TextRun,java.awt.Graphics2D)#java/lang/StringBuilder/toString()
org/apache/fop/svg/AbstractFOPTextPainter/TextRunPainter/paintTextRun(org.apache.batik.bridge.StrokingTextPainter$TextRun,java.awt.Graphics2D)#java/awt/geom/Point2D/getY()
org/apache/fop/svg/AbstractFOPTextPainter/TextRunPainter/paintTextRun(org.apache.batik.bridge.StrokingTextPainter$TextRun,java.awt.Graphics2D)#java/text/AttributedCharacterIterator/getAttribute(java.text.AttributedCharacterIterator$Attribute)
org/apache/fop/complexscripts/fonts/GlyphSubstitutionTable/AlternateSubtableFormat1/populate(java.util.List)#java/util/Iterator/hasNext()
org/apache/fop/complexscripts/fonts/GlyphSubstitutionTable/AlternateSubtableFormat1/populate(java.util.List)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/complexscripts/fonts/GlyphSubstitutionTable/AlternateSubtableFormat1/populate(java.util.List)#java/util/List/size()
org/apache/fop/complexscripts/fonts/GlyphSubstitutionTable/AlternateSubtableFormat1/populate(java.util.List)#java/util/Iterator/next()
org/apache/fop/complexscripts/fonts/GlyphSubstitutionTable/AlternateSubtableFormat1/populate(java.util.List)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/complexscripts/fonts/GlyphSubstitutionTable/AlternateSubtableFormat1/populate(java.util.List)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/fop/complexscripts/fonts/GlyphSubstitutionTable/AlternateSubtableFormat1/populate(java.util.List)#java/util/List/iterator()
org/apache/fop/complexscripts/fonts/GlyphSubstitutionTable/AlternateSubtableFormat1/populate(java.util.List)#java/lang/AssertionError/AssertionError()
org/apache/fop/complexscripts/fonts/GlyphSubstitutionTable/AlternateSubtableFormat1/populate(java.util.List)#java/lang/StringBuilder/toString()
org/apache/fop/render/ps/PSRenderingUtil/writeEnclosedExtensionAttachment(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.render.ps.extensions.PSExtensionAttachment)#java/lang/String/length()
org/apache/fop/render/ps/PSRenderingUtil/writeEnclosedExtensionAttachment(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.render.ps.extensions.PSExtensionAttachment)#java/io/StringReader/StringReader(java.lang.String)
org/apache/fop/render/ps/PSRenderingUtil/writeEnclosedExtensionAttachment(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.render.ps.extensions.PSExtensionAttachment)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/render/ps/PSRenderingUtil/writeEnclosedExtensionAttachment(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.render.ps.extensions.PSExtensionAttachment)#java/io/LineNumberReader/readLine()
org/apache/fop/render/ps/PSRenderingUtil/writeEnclosedExtensionAttachment(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.render.ps.extensions.PSExtensionAttachment)#java/lang/StringBuilder/toString()
org/apache/fop/render/ps/PSRenderingUtil/writeEnclosedExtensionAttachment(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.render.ps.extensions.PSExtensionAttachment)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/render/ps/PSRenderingUtil/writeEnclosedExtensionAttachment(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.render.ps.extensions.PSExtensionAttachment)#java/lang/String/trim()
org/apache/fop/render/ps/PSRenderingUtil/writeEnclosedExtensionAttachment(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.render.ps.extensions.PSExtensionAttachment)#org/apache/xmlgraphics/ps/PSGenerator/writeln(java.lang.String)
org/apache/fop/render/ps/PSRenderingUtil/writeEnclosedExtensionAttachment(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.render.ps.extensions.PSExtensionAttachment)#org/apache/xmlgraphics/ps/PSGenerator/commentln(java.lang.String)
org/apache/fop/render/ps/PSRenderingUtil/writeEnclosedExtensionAttachment(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.render.ps.extensions.PSExtensionAttachment)#java/io/LineNumberReader/LineNumberReader(java.io.Reader)
org/apache/fop/render/ps/PSRenderingUtil/writeSetupCodeList(org.apache.xmlgraphics.ps.PSGenerator,java.util.List,java.lang.String)#java/util/Iterator/remove()
org/apache/fop/render/ps/PSRenderingUtil/writeSetupCodeList(org.apache.xmlgraphics.ps.PSGenerator,java.util.List,java.lang.String)#java/util/Iterator/hasNext()
org/apache/fop/render/ps/PSRenderingUtil/writeSetupCodeList(org.apache.xmlgraphics.ps.PSGenerator,java.util.List,java.lang.String)#java/lang/String/length()
org/apache/fop/render/ps/PSRenderingUtil/writeSetupCodeList(org.apache.xmlgraphics.ps.PSGenerator,java.util.List,java.lang.String)#org/apache/fop/render/ps/extensions/PSSetupCode/getContent()
org/apache/fop/render/ps/PSRenderingUtil/writeSetupCodeList(org.apache.xmlgraphics.ps.PSGenerator,java.util.List,java.lang.String)#java/io/StringReader/StringReader(java.lang.String)
org/apache/fop/render/ps/PSRenderingUtil/writeSetupCodeList(org.apache.xmlgraphics.ps.PSGenerator,java.util.List,java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/render/ps/PSRenderingUtil/writeSetupCodeList(org.apache.xmlgraphics.ps.PSGenerator,java.util.List,java.lang.String)#java/io/LineNumberReader/LineNumberReader(java.io.Reader)
org/apache/fop/render/ps/PSRenderingUtil/writeSetupCodeList(org.apache.xmlgraphics.ps.PSGenerator,java.util.List,java.lang.String)#java/io/LineNumberReader/readLine()
org/apache/fop/render/ps/PSRenderingUtil/writeSetupCodeList(org.apache.xmlgraphics.ps.PSGenerator,java.util.List,java.lang.String)#java/util/List/iterator()
org/apache/fop/render/ps/PSRenderingUtil/writeSetupCodeList(org.apache.xmlgraphics.ps.PSGenerator,java.util.List,java.lang.String)#java/lang/StringBuilder/toString()
org/apache/fop/render/ps/PSRenderingUtil/writeSetupCodeList(org.apache.xmlgraphics.ps.PSGenerator,java.util.List,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/render/ps/PSRenderingUtil/writeSetupCodeList(org.apache.xmlgraphics.ps.PSGenerator,java.util.List,java.lang.String)#java/lang/String/trim()
org/apache/fop/render/ps/PSRenderingUtil/writeSetupCodeList(org.apache.xmlgraphics.ps.PSGenerator,java.util.List,java.lang.String)#java/util/Iterator/next()
org/apache/fop/render/ps/PSRenderingUtil/writeSetupCodeList(org.apache.xmlgraphics.ps.PSGenerator,java.util.List,java.lang.String)#org/apache/xmlgraphics/ps/PSGenerator/writeln(java.lang.String)
org/apache/fop/render/ps/PSRenderingUtil/writeSetupCodeList(org.apache.xmlgraphics.ps.PSGenerator,java.util.List,java.lang.String)#org/apache/xmlgraphics/ps/PSGenerator/commentln(java.lang.String)
org/apache/fop/util/XMLResourceBundle/getXMLBundle(java.lang.String,java.util.Locale,java.lang.ClassLoader)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/util/XMLResourceBundle/getXMLBundle(java.lang.String,java.util.Locale,java.lang.ClassLoader)#java/util/MissingResourceException/MissingResourceException(java.lang.String,java.lang.String,java.lang.String)
org/apache/fop/util/XMLResourceBundle/getXMLBundle(java.lang.String,java.util.Locale,java.lang.ClassLoader)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/util/XMLResourceBundle/getXMLBundle(java.lang.String,java.util.Locale,java.lang.ClassLoader)#java/lang/NullPointerException/NullPointerException(java.lang.String)
org/apache/fop/util/XMLResourceBundle/getXMLBundle(java.lang.String,java.util.Locale,java.lang.ClassLoader)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/fop/util/XMLResourceBundle/getXMLBundle(java.lang.String,java.util.Locale,java.lang.ClassLoader)#java/util/Locale/getDefault()
org/apache/fop/util/XMLResourceBundle/getXMLBundle(java.lang.String,java.util.Locale,java.lang.ClassLoader)#java/util/Locale/equals(java.lang.Object)
org/apache/fop/util/XMLResourceBundle/getXMLBundle(java.lang.String,java.util.Locale,java.lang.ClassLoader)#java/lang/AssertionError/AssertionError()
org/apache/fop/util/XMLResourceBundle/getXMLBundle(java.lang.String,java.util.Locale,java.lang.ClassLoader)#java/lang/StringBuilder/toString()
org/apache/fop/util/XMLResourceBundle/getXMLBundle(java.lang.String,java.util.Locale,java.lang.ClassLoader)#java/lang/StringBuilder/append(char)
org/apache/fop/util/XMLResourceBundle/handleGetXMLBundle(java.lang.String,java.lang.String,boolean,java.lang.ClassLoader)#org/apache/fop/util/XMLResourceBundle/setParent(java.util.ResourceBundle)
org/apache/fop/util/XMLResourceBundle/handleGetXMLBundle(java.lang.String,java.lang.String,boolean,java.lang.ClassLoader)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/fop/util/XMLResourceBundle/handleGetXMLBundle(java.lang.String,java.lang.String,boolean,java.lang.ClassLoader)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/util/XMLResourceBundle/handleGetXMLBundle(java.lang.String,java.lang.String,boolean,java.lang.ClassLoader)#java/util/Map/get(java.lang.Object)
org/apache/fop/util/XMLResourceBundle/handleGetXMLBundle(java.lang.String,java.lang.String,boolean,java.lang.ClassLoader)#java/lang/String/replace(char,char)
org/apache/fop/util/XMLResourceBundle/handleGetXMLBundle(java.lang.String,java.lang.String,boolean,java.lang.ClassLoader)#java/util/Hashtable/put(java.lang.Object,java.lang.Object)
org/apache/fop/util/XMLResourceBundle/handleGetXMLBundle(java.lang.String,java.lang.String,boolean,java.lang.ClassLoader)#java/lang/StringBuilder/toString()
org/apache/fop/util/XMLResourceBundle/handleGetXMLBundle(java.lang.String,java.lang.String,boolean,java.lang.ClassLoader)#java/util/MissingResourceException/MissingResourceException(java.lang.String,java.lang.String,java.lang.String)
org/apache/fop/util/XMLResourceBundle/handleGetXMLBundle(java.lang.String,java.lang.String,boolean,java.lang.ClassLoader)#java/io/IOException/getMessage()
org/apache/fop/util/XMLResourceBundle/handleGetXMLBundle(java.lang.String,java.lang.String,boolean,java.lang.ClassLoader)#java/util/Hashtable/get(java.lang.Object)
org/apache/fop/util/XMLResourceBundle/handleGetXMLBundle(java.lang.String,java.lang.String,boolean,java.lang.ClassLoader)#org/apache/fop/util/XMLResourceBundle$1/1(java.lang.ClassLoader,java.lang.String)
org/apache/fop/util/XMLResourceBundle/handleGetXMLBundle(java.lang.String,java.lang.String,boolean,java.lang.ClassLoader)#java/io/InputStream/close()
org/apache/fop/util/XMLResourceBundle/handleGetXMLBundle(java.lang.String,java.lang.String,boolean,java.lang.ClassLoader)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/util/XMLResourceBundle/handleGetXMLBundle(java.lang.String,java.lang.String,boolean,java.lang.ClassLoader)#java/util/Hashtable/Hashtable()
org/apache/fop/util/XMLResourceBundle/handleGetXMLBundle(java.lang.String,java.lang.String,boolean,java.lang.ClassLoader)#java/security/AccessController/doPrivileged(java.security.PrivilegedAction)
org/apache/fop/layoutmgr/inline/LineLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int,org.apache.fop.layoutmgr.LeafPosition)#java/util/Iterator/remove()
org/apache/fop/layoutmgr/inline/LineLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int,org.apache.fop.layoutmgr.LeafPosition)#org/apache/fop/layoutmgr/inline/LineLayoutManager/setFinished(boolean)
org/apache/fop/layoutmgr/inline/LineLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int,org.apache.fop.layoutmgr.LeafPosition)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/layoutmgr/inline/LineLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int,org.apache.fop.layoutmgr.LeafPosition)#java/lang/StringBuilder/append(int)
org/apache/fop/layoutmgr/inline/LineLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int,org.apache.fop.layoutmgr.LeafPosition)#java/util/List/size()
org/apache/fop/layoutmgr/inline/LineLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int,org.apache.fop.layoutmgr.LeafPosition)#org/apache/fop/layoutmgr/inline/LineLayoutManager$Paragraph/access$1002(org.apache.fop.layoutmgr.inline.LineLayoutManager$Paragraph,int)
org/apache/fop/layoutmgr/inline/LineLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int,org.apache.fop.layoutmgr.LeafPosition)#java/util/List/clear()
org/apache/fop/layoutmgr/inline/LineLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int,org.apache.fop.layoutmgr.LeafPosition)#java/util/List/get(int)
org/apache/fop/layoutmgr/inline/LineLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int,org.apache.fop.layoutmgr.LeafPosition)#org/apache/fop/layoutmgr/KnuthSequence/subList(int,int)
org/apache/fop/layoutmgr/inline/LineLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int,org.apache.fop.layoutmgr.LeafPosition)#org/apache/fop/layoutmgr/KnuthElement/isBox()
org/apache/fop/layoutmgr/inline/LineLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int,org.apache.fop.layoutmgr.LeafPosition)#java/util/Iterator/hasNext()
org/apache/fop/layoutmgr/inline/LineLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int,org.apache.fop.layoutmgr.LeafPosition)#java/util/List/remove(int)
org/apache/fop/layoutmgr/inline/LineLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int,org.apache.fop.layoutmgr.LeafPosition)#java/util/Iterator/next()
org/apache/fop/layoutmgr/inline/LineLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int,org.apache.fop.layoutmgr.LeafPosition)#org/apache/fop/layoutmgr/KnuthSequence/iterator()
org/apache/fop/layoutmgr/inline/LineLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int,org.apache.fop.layoutmgr.LeafPosition)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/layoutmgr/inline/LineLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int,org.apache.fop.layoutmgr.LeafPosition)#org/apache/commons/logging/Log/trace(java.lang.Object)
org/apache/fop/layoutmgr/inline/LineLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int,org.apache.fop.layoutmgr.LeafPosition)#java/lang/StringBuilder/toString()
org/apache/fop/layoutmgr/inline/LineLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int,org.apache.fop.layoutmgr.LeafPosition)#org/apache/fop/layoutmgr/LeafPosition/getIndex()
org/apache/fop/layoutmgr/inline/LineLayoutManager/getChangedKnuthElements(java.util.List,int)#org/apache/fop/layoutmgr/inline/LineLayoutManager$LineBreakPosition/access$1800(org.apache.fop.layoutmgr.inline.LineLayoutManager$LineBreakPosition)
org/apache/fop/layoutmgr/inline/LineLayoutManager/getChangedKnuthElements(java.util.List,int)#org/apache/fop/layoutmgr/inline/LineLayoutManager$LineBreakPosition/access$1700(org.apache.fop.layoutmgr.inline.LineLayoutManager$LineBreakPosition)
org/apache/fop/layoutmgr/inline/LineLayoutManager/getChangedKnuthElements(java.util.List,int)#org/apache/fop/layoutmgr/inline/LineLayoutManager$LineBreakPosition/access$1600(org.apache.fop.layoutmgr.inline.LineLayoutManager$LineBreakPosition)
org/apache/fop/layoutmgr/inline/LineLayoutManager/getChangedKnuthElements(java.util.List,int)#java/util/LinkedList/LinkedList()
org/apache/fop/layoutmgr/inline/LineLayoutManager/getChangedKnuthElements(java.util.List,int)#java/util/List/add(java.lang.Object)
org/apache/fop/layoutmgr/inline/LineLayoutManager/getChangedKnuthElements(java.util.List,int)#org/apache/fop/layoutmgr/inline/LineLayoutManager/handlingFloat()
org/apache/fop/layoutmgr/inline/LineLayoutManager/getChangedKnuthElements(java.util.List,int)#org/apache/fop/layoutmgr/inline/LineLayoutManager$LineBreakPosition/access$1900(org.apache.fop.layoutmgr.inline.LineLayoutManager$LineBreakPosition)
org/apache/fop/layoutmgr/inline/LineLayoutManager/getChangedKnuthElements(java.util.List,int)#org/apache/fop/layoutmgr/inline/LineLayoutManager$LineBreakPosition/access$1500(org.apache.fop.layoutmgr.inline.LineLayoutManager$LineBreakPosition)
org/apache/fop/layoutmgr/inline/LineLayoutManager/getChangedKnuthElements(java.util.List,int)#org/apache/fop/layoutmgr/inline/LineLayoutManager$LineBreakPosition/access$1300(org.apache.fop.layoutmgr.inline.LineLayoutManager$LineBreakPosition)
org/apache/fop/layoutmgr/inline/LineLayoutManager/getChangedKnuthElements(java.util.List,int)#org/apache/fop/layoutmgr/inline/LineLayoutManager$LineBreakPosition/access$2000(org.apache.fop.layoutmgr.inline.LineLayoutManager$LineBreakPosition)
org/apache/fop/layoutmgr/inline/LineLayoutManager/getChangedKnuthElements(java.util.List,int)#java/util/List/size()
org/apache/fop/layoutmgr/inline/LineLayoutManager/collectInlineKnuthElements(org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/layoutmgr/inline/LineLayoutManager$Paragraph/removeLast()
org/apache/fop/layoutmgr/inline/LineLayoutManager/collectInlineKnuthElements(org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/layoutmgr/KnuthElement/isBox()
org/apache/fop/layoutmgr/inline/LineLayoutManager/collectInlineKnuthElements(org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/layoutmgr/inline/InlineLevelLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)
org/apache/fop/layoutmgr/inline/LineLayoutManager/collectInlineKnuthElements(org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/layoutmgr/inline/LineLayoutManager$Paragraph/Paragraph(org.apache.fop.layoutmgr.inline.LineLayoutManager,int,int,int,int)
org/apache/fop/layoutmgr/inline/LineLayoutManager/collectInlineKnuthElements(org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/layoutmgr/inline/LineLayoutManager$Paragraph/addALetterSpace()
org/apache/fop/layoutmgr/inline/LineLayoutManager/collectInlineKnuthElements(org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/fo/flow/Block/getId()
org/apache/fop/layoutmgr/inline/LineLayoutManager/collectInlineKnuthElements(org.apache.fop.layoutmgr.LayoutContext)#org/apache/commons/logging/Log/trace(java.lang.Object)
org/apache/fop/layoutmgr/inline/LineLayoutManager/collectInlineKnuthElements(org.apache.fop.layoutmgr.LayoutContext)#java/util/List/add(java.lang.Object)
org/apache/fop/layoutmgr/inline/LineLayoutManager/collectInlineKnuthElements(org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/layoutmgr/inline/LineLayoutManager$Paragraph/add(java.lang.Object)
org/apache/fop/layoutmgr/inline/LineLayoutManager/collectInlineKnuthElements(org.apache.fop.layoutmgr.LayoutContext)#java/util/ListIterator/hasNext()
org/apache/fop/layoutmgr/inline/LineLayoutManager/collectInlineKnuthElements(org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/layoutmgr/inline/LineLayoutManager$Paragraph/addAll(java.util.Collection)
org/apache/fop/layoutmgr/inline/LineLayoutManager/collectInlineKnuthElements(org.apache.fop.layoutmgr.LayoutContext)#java/util/List/size()
org/apache/fop/layoutmgr/inline/LineLayoutManager/collectInlineKnuthElements(org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/layoutmgr/KnuthSequence/get(int)
org/apache/fop/layoutmgr/inline/LineLayoutManager/collectInlineKnuthElements(org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/layoutmgr/inline/LineLayoutManager$Paragraph/startSequence()
org/apache/fop/layoutmgr/inline/LineLayoutManager/collectInlineKnuthElements(org.apache.fop.layoutmgr.LayoutContext)#java/util/ListIterator/next()
org/apache/fop/layoutmgr/inline/LineLayoutManager/collectInlineKnuthElements(org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/layoutmgr/inline/LineLayoutManager/getChildLM()
org/apache/fop/layoutmgr/inline/LineLayoutManager/collectInlineKnuthElements(org.apache.fop.layoutmgr.LayoutContext)#java/util/List/get(int)
org/apache/fop/layoutmgr/inline/LineLayoutManager/collectInlineKnuthElements(org.apache.fop.layoutmgr.LayoutContext)#java/lang/StringBuffer/StringBuffer(java.lang.String)
org/apache/fop/layoutmgr/inline/LineLayoutManager/collectInlineKnuthElements(org.apache.fop.layoutmgr.LayoutContext)#java/util/List/listIterator()
org/apache/fop/layoutmgr/inline/LineLayoutManager/collectInlineKnuthElements(org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/layoutmgr/inline/LineLayoutManager$Paragraph/endParagraph()
org/apache/fop/layoutmgr/inline/LineLayoutManager/collectInlineKnuthElements(org.apache.fop.layoutmgr.LayoutContext)#org/apache/commons/logging/Log/isTraceEnabled()
org/apache/fop/layoutmgr/inline/LineLayoutManager/collectInlineKnuthElements(org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/layoutmgr/inline/LineLayoutManager$Paragraph/containsBox()
org/apache/fop/layoutmgr/inline/LineLayoutManager/collectInlineKnuthElements(org.apache.fop.layoutmgr.LayoutContext)#java/lang/StringBuffer/append(java.lang.String)
org/apache/fop/layoutmgr/inline/LineLayoutManager/collectInlineKnuthElements(org.apache.fop.layoutmgr.LayoutContext)#java/lang/AssertionError/AssertionError()
org/apache/fop/layoutmgr/inline/LineLayoutManager/processUpdates(org.apache.fop.layoutmgr.inline.LineLayoutManager$Paragraph,java.util.List)#java/util/ListIterator/hasNext()
org/apache/fop/layoutmgr/inline/LineLayoutManager/processUpdates(org.apache.fop.layoutmgr.inline.LineLayoutManager$Paragraph,java.util.List)#org/apache/fop/layoutmgr/inline/LineLayoutManager$Paragraph/subList(int,int)
org/apache/fop/layoutmgr/inline/LineLayoutManager/processUpdates(org.apache.fop.layoutmgr.inline.LineLayoutManager$Paragraph,java.util.List)#org/apache/fop/layoutmgr/inline/LineLayoutManager$Paragraph/size()
org/apache/fop/layoutmgr/inline/LineLayoutManager/processUpdates(org.apache.fop.layoutmgr.inline.LineLayoutManager$Paragraph,java.util.List)#org/apache/fop/layoutmgr/inline/LineLayoutManager$Update/access$2200(org.apache.fop.layoutmgr.inline.LineLayoutManager$Update)
org/apache/fop/layoutmgr/inline/LineLayoutManager/processUpdates(org.apache.fop.layoutmgr.inline.LineLayoutManager$Paragraph,java.util.List)#java/util/List/size()
org/apache/fop/layoutmgr/inline/LineLayoutManager/processUpdates(org.apache.fop.layoutmgr.inline.LineLayoutManager$Paragraph,java.util.List)#java/util/ListIterator/next()
org/apache/fop/layoutmgr/inline/LineLayoutManager/processUpdates(org.apache.fop.layoutmgr.inline.LineLayoutManager$Paragraph,java.util.List)#org/apache/fop/layoutmgr/inline/LineLayoutManager$Paragraph/access$2300(org.apache.fop.layoutmgr.inline.LineLayoutManager$Paragraph)
org/apache/fop/layoutmgr/inline/LineLayoutManager/processUpdates(org.apache.fop.layoutmgr.inline.LineLayoutManager$Paragraph,java.util.List)#org/apache/fop/layoutmgr/inline/InlineLevelLayoutManager/getChangedKnuthElements(java.util.List,int)
org/apache/fop/layoutmgr/inline/LineLayoutManager/processUpdates(org.apache.fop.layoutmgr.inline.LineLayoutManager$Paragraph,java.util.List)#java/util/List/listIterator()
org/apache/fop/layoutmgr/inline/LineLayoutManager/processUpdates(org.apache.fop.layoutmgr.inline.LineLayoutManager$Paragraph,java.util.List)#org/apache/fop/layoutmgr/inline/LineLayoutManager$Paragraph/addAll(int,java.util.Collection)
org/apache/fop/layoutmgr/inline/LineLayoutManager/processUpdates(org.apache.fop.layoutmgr.inline.LineLayoutManager$Paragraph,java.util.List)#org/apache/fop/layoutmgr/inline/LineLayoutManager$Update/access$2400(org.apache.fop.layoutmgr.inline.LineLayoutManager$Update)
org/apache/fop/layoutmgr/inline/LineLayoutManager/processUpdates(org.apache.fop.layoutmgr.inline.LineLayoutManager$Paragraph,java.util.List)#java/util/ListIterator/previous()
org/apache/fop/layoutmgr/inline/LineLayoutManager/processUpdates(org.apache.fop.layoutmgr.inline.LineLayoutManager$Paragraph,java.util.List)#java/util/List/clear()
org/apache/fop/layoutmgr/inline/LineLayoutManager/addInlineArea(org.apache.fop.layoutmgr.LayoutContext,org.apache.fop.layoutmgr.inline.LineLayoutManager$LineBreakPosition,boolean)#org/apache/fop/layoutmgr/inline/LineLayoutManager$LineBreakPosition/access$1900(org.apache.fop.layoutmgr.inline.LineLayoutManager$LineBreakPosition)
org/apache/fop/layoutmgr/inline/LineLayoutManager/addInlineArea(org.apache.fop.layoutmgr.LayoutContext,org.apache.fop.layoutmgr.inline.LineLayoutManager$LineBreakPosition,boolean)#org/apache/fop/layoutmgr/inline/LineLayoutManager$LineBreakPosition/access$1100(org.apache.fop.layoutmgr.inline.LineLayoutManager$LineBreakPosition)
org/apache/fop/layoutmgr/inline/LineLayoutManager/addInlineArea(org.apache.fop.layoutmgr.LayoutContext,org.apache.fop.layoutmgr.inline.LineLayoutManager$LineBreakPosition,boolean)#org/apache/fop/layoutmgr/KnuthElement/isGlue()
org/apache/fop/layoutmgr/inline/LineLayoutManager/addInlineArea(org.apache.fop.layoutmgr.LayoutContext,org.apache.fop.layoutmgr.inline.LineLayoutManager$LineBreakPosition,boolean)#org/apache/fop/layoutmgr/inline/LineLayoutManager$Paragraph/access$2300(org.apache.fop.layoutmgr.inline.LineLayoutManager$Paragraph)
org/apache/fop/layoutmgr/inline/LineLayoutManager/addInlineArea(org.apache.fop.layoutmgr.LayoutContext,org.apache.fop.layoutmgr.inline.LineLayoutManager$LineBreakPosition,boolean)#org/apache/fop/layoutmgr/inline/LineLayoutManager$Paragraph/access$1000(org.apache.fop.layoutmgr.inline.LineLayoutManager$Paragraph)
org/apache/fop/layoutmgr/inline/LineLayoutManager/addInlineArea(org.apache.fop.layoutmgr.LayoutContext,org.apache.fop.layoutmgr.inline.LineLayoutManager$LineBreakPosition,boolean)#org/apache/fop/layoutmgr/inline/LineLayoutManager$LineBreakPosition/getLeafPos()
org/apache/fop/layoutmgr/inline/LineLayoutManager/addInlineArea(org.apache.fop.layoutmgr.LayoutContext,org.apache.fop.layoutmgr.inline.LineLayoutManager$LineBreakPosition,boolean)#org/apache/fop/layoutmgr/KnuthElement/getLayoutManager()
org/apache/fop/layoutmgr/inline/LineLayoutManager/addInlineArea(org.apache.fop.layoutmgr.LayoutContext,org.apache.fop.layoutmgr.inline.LineLayoutManager$LineBreakPosition,boolean)#org/apache/fop/layoutmgr/KnuthElement/isBox()
org/apache/fop/layoutmgr/inline/LineLayoutManager/addInlineArea(org.apache.fop.layoutmgr.LayoutContext,org.apache.fop.layoutmgr.inline.LineLayoutManager$LineBreakPosition,boolean)#org/apache/fop/layoutmgr/inline/LineLayoutManager$LineBreakPosition/access$1800(org.apache.fop.layoutmgr.inline.LineLayoutManager$LineBreakPosition)
org/apache/fop/layoutmgr/inline/LineLayoutManager/addInlineArea(org.apache.fop.layoutmgr.LayoutContext,org.apache.fop.layoutmgr.inline.LineLayoutManager$LineBreakPosition,boolean)#java/util/ListIterator/hasNext()
org/apache/fop/layoutmgr/inline/LineLayoutManager/addInlineArea(org.apache.fop.layoutmgr.LayoutContext,org.apache.fop.layoutmgr.inline.LineLayoutManager$LineBreakPosition,boolean)#org/apache/fop/layoutmgr/inline/LineLayoutManager$LineBreakPosition/access$1700(org.apache.fop.layoutmgr.inline.LineLayoutManager$LineBreakPosition)
org/apache/fop/layoutmgr/inline/LineLayoutManager/addInlineArea(org.apache.fop.layoutmgr.LayoutContext,org.apache.fop.layoutmgr.inline.LineLayoutManager$LineBreakPosition,boolean)#org/apache/fop/layoutmgr/KnuthSequence/size()
org/apache/fop/layoutmgr/inline/LineLayoutManager/addInlineArea(org.apache.fop.layoutmgr.LayoutContext,org.apache.fop.layoutmgr.inline.LineLayoutManager$LineBreakPosition,boolean)#org/apache/fop/layoutmgr/inline/LineLayoutManager/setCurrentArea(org.apache.fop.area.Area)
org/apache/fop/layoutmgr/inline/LineLayoutManager/addInlineArea(org.apache.fop.layoutmgr.LayoutContext,org.apache.fop.layoutmgr.inline.LineLayoutManager$LineBreakPosition,boolean)#org/apache/fop/layoutmgr/inline/LineLayoutManager$LineBreakPosition/access$2800(org.apache.fop.layoutmgr.inline.LineLayoutManager$LineBreakPosition)
org/apache/fop/layoutmgr/inline/LineLayoutManager/addInlineArea(org.apache.fop.layoutmgr.LayoutContext,org.apache.fop.layoutmgr.inline.LineLayoutManager$LineBreakPosition,boolean)#org/apache/fop/layoutmgr/inline/LineLayoutManager$LineBreakPosition/access$2700(org.apache.fop.layoutmgr.inline.LineLayoutManager$LineBreakPosition)
org/apache/fop/layoutmgr/inline/LineLayoutManager/addInlineArea(org.apache.fop.layoutmgr.LayoutContext,org.apache.fop.layoutmgr.inline.LineLayoutManager$LineBreakPosition,boolean)#org/apache/fop/layoutmgr/inline/LineLayoutManager$LineBreakPosition/access$1600(org.apache.fop.layoutmgr.inline.LineLayoutManager$LineBreakPosition)
org/apache/fop/layoutmgr/inline/LineLayoutManager/addInlineArea(org.apache.fop.layoutmgr.LayoutContext,org.apache.fop.layoutmgr.inline.LineLayoutManager$LineBreakPosition,boolean)#org/apache/fop/layoutmgr/inline/LineLayoutManager$LineBreakPosition/access$2600(org.apache.fop.layoutmgr.inline.LineLayoutManager$LineBreakPosition)
org/apache/fop/layoutmgr/inline/LineLayoutManager/addInlineArea(org.apache.fop.layoutmgr.LayoutContext,org.apache.fop.layoutmgr.inline.LineLayoutManager$LineBreakPosition,boolean)#org/apache/fop/layoutmgr/inline/LineLayoutManager$LineBreakPosition/access$1500(org.apache.fop.layoutmgr.inline.LineLayoutManager$LineBreakPosition)
org/apache/fop/layoutmgr/inline/LineLayoutManager/addInlineArea(org.apache.fop.layoutmgr.LayoutContext,org.apache.fop.layoutmgr.inline.LineLayoutManager$LineBreakPosition,boolean)#org/apache/fop/area/LineArea/getBPD()
org/apache/fop/layoutmgr/inline/LineLayoutManager/addInlineArea(org.apache.fop.layoutmgr.LayoutContext,org.apache.fop.layoutmgr.inline.LineLayoutManager$LineBreakPosition,boolean)#org/apache/fop/layoutmgr/inline/LineLayoutManager$LineBreakPosition/access$2500(org.apache.fop.layoutmgr.inline.LineLayoutManager$LineBreakPosition)
org/apache/fop/layoutmgr/inline/LineLayoutManager/addInlineArea(org.apache.fop.layoutmgr.LayoutContext,org.apache.fop.layoutmgr.inline.LineLayoutManager$LineBreakPosition,boolean)#org/apache/fop/layoutmgr/inline/LineLayoutManager$LineBreakPosition/access$1400(org.apache.fop.layoutmgr.inline.LineLayoutManager$LineBreakPosition)
org/apache/fop/layoutmgr/inline/LineLayoutManager/addInlineArea(org.apache.fop.layoutmgr.LayoutContext,org.apache.fop.layoutmgr.inline.LineLayoutManager$LineBreakPosition,boolean)#org/apache/fop/area/LineArea/getBidiLevel()
org/apache/fop/layoutmgr/inline/LineLayoutManager/addInlineArea(org.apache.fop.layoutmgr.LayoutContext,org.apache.fop.layoutmgr.inline.LineLayoutManager$LineBreakPosition,boolean)#org/apache/fop/layoutmgr/KnuthSequence/listIterator(int)
org/apache/fop/layoutmgr/inline/LineLayoutManager/addInlineArea(org.apache.fop.layoutmgr.LayoutContext,org.apache.fop.layoutmgr.inline.LineLayoutManager$LineBreakPosition,boolean)#java/util/ListIterator/hasPrevious()
org/apache/fop/layoutmgr/inline/LineLayoutManager/addInlineArea(org.apache.fop.layoutmgr.LayoutContext,org.apache.fop.layoutmgr.inline.LineLayoutManager$LineBreakPosition,boolean)#org/apache/fop/layoutmgr/inline/LineLayoutManager$Paragraph/size()
org/apache/fop/layoutmgr/inline/LineLayoutManager/addInlineArea(org.apache.fop.layoutmgr.LayoutContext,org.apache.fop.layoutmgr.inline.LineLayoutManager$LineBreakPosition,boolean)#org/apache/fop/layoutmgr/inline/LineLayoutManager$LineBreakPosition/access$1300(org.apache.fop.layoutmgr.inline.LineLayoutManager$LineBreakPosition)
org/apache/fop/layoutmgr/inline/LineLayoutManager/addInlineArea(org.apache.fop.layoutmgr.LayoutContext,org.apache.fop.layoutmgr.inline.LineLayoutManager$LineBreakPosition,boolean)#org/apache/fop/layoutmgr/inline/LineLayoutManager$LineBreakPosition/access$1200(org.apache.fop.layoutmgr.inline.LineLayoutManager$LineBreakPosition)
org/apache/fop/layoutmgr/inline/LineLayoutManager/addInlineArea(org.apache.fop.layoutmgr.LayoutContext,org.apache.fop.layoutmgr.inline.LineLayoutManager$LineBreakPosition,boolean)#java/lang/Integer/Integer(int)
org/apache/fop/layoutmgr/inline/LineLayoutManager/addInlineArea(org.apache.fop.layoutmgr.LayoutContext,org.apache.fop.layoutmgr.inline.LineLayoutManager$LineBreakPosition,boolean)#org/apache/fop/layoutmgr/inline/LineLayoutManager$LineBreakPosition/access$2000(org.apache.fop.layoutmgr.inline.LineLayoutManager$LineBreakPosition)
org/apache/fop/layoutmgr/inline/LineLayoutManager/addInlineArea(org.apache.fop.layoutmgr.LayoutContext,org.apache.fop.layoutmgr.inline.LineLayoutManager$LineBreakPosition,boolean)#org/apache/fop/area/LineArea/getIPD()
org/apache/fop/layoutmgr/inline/LineLayoutManager/addInlineArea(org.apache.fop.layoutmgr.LayoutContext,org.apache.fop.layoutmgr.inline.LineLayoutManager$LineBreakPosition,boolean)#org/apache/fop/layoutmgr/inline/LineLayoutManager/setChildContext(org.apache.fop.layoutmgr.LayoutContext)
org/apache/fop/layoutmgr/inline/LineLayoutManager/addInlineArea(org.apache.fop.layoutmgr.LayoutContext,org.apache.fop.layoutmgr.inline.LineLayoutManager$LineBreakPosition,boolean)#java/util/ListIterator/next()
org/apache/fop/layoutmgr/inline/LineLayoutManager/addInlineArea(org.apache.fop.layoutmgr.LayoutContext,org.apache.fop.layoutmgr.inline.LineLayoutManager$LineBreakPosition,boolean)#java/util/ListIterator/previous()
org/apache/fop/layoutmgr/inline/LineLayoutManager/addInlineArea(org.apache.fop.layoutmgr.LayoutContext,org.apache.fop.layoutmgr.inline.LineLayoutManager$LineBreakPosition,boolean)#org/apache/fop/area/LineArea/setIPD(int)
org/apache/fop/layoutmgr/inline/LineLayoutManager/addInlineArea(org.apache.fop.layoutmgr.LayoutContext,org.apache.fop.layoutmgr.inline.LineLayoutManager$LineBreakPosition,boolean)#java/lang/Integer/valueOf(int)
org/apache/fop/layoutmgr/inline/LineLayoutManager/addInlineArea(org.apache.fop.layoutmgr.LayoutContext,org.apache.fop.layoutmgr.inline.LineLayoutManager$LineBreakPosition,boolean)#java/util/List/get(int)
org/apache/fop/layoutmgr/inline/LineLayoutManager/addInlineArea(org.apache.fop.layoutmgr.LayoutContext,org.apache.fop.layoutmgr.inline.LineLayoutManager$LineBreakPosition,boolean)#org/apache/fop/area/LineArea/setBidiLevel(int)
org/apache/fop/layoutmgr/inline/LineLayoutManager/addInlineArea(org.apache.fop.layoutmgr.LayoutContext,org.apache.fop.layoutmgr.inline.LineLayoutManager$LineBreakPosition,boolean)#org/apache/fop/area/LineArea/setBPD(int)
org/apache/fop/layoutmgr/inline/LineLayoutManager/addInlineArea(org.apache.fop.layoutmgr.LayoutContext,org.apache.fop.layoutmgr.inline.LineLayoutManager$LineBreakPosition,boolean)#org/apache/fop/area/LineArea/addTrait(java.lang.Integer,java.lang.Object)
org/apache/fop/layoutmgr/inline/LineLayoutManager/findOptimalBreakingPoints(int,org.apache.fop.layoutmgr.inline.LineLayoutManager$Paragraph,boolean)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/fop/layoutmgr/inline/LineLayoutManager/findOptimalBreakingPoints(int,org.apache.fop.layoutmgr.inline.LineLayoutManager$Paragraph,boolean)#org/apache/fop/layoutmgr/inline/LineLayoutManager$Paragraph/access$700(org.apache.fop.layoutmgr.inline.LineLayoutManager$Paragraph)
org/apache/fop/layoutmgr/inline/LineLayoutManager/findOptimalBreakingPoints(int,org.apache.fop.layoutmgr.inline.LineLayoutManager$Paragraph,boolean)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/layoutmgr/inline/LineLayoutManager/findOptimalBreakingPoints(int,org.apache.fop.layoutmgr.inline.LineLayoutManager$Paragraph,boolean)#org/apache/commons/logging/Log/isDebugEnabled()
org/apache/fop/layoutmgr/inline/LineLayoutManager/findOptimalBreakingPoints(int,org.apache.fop.layoutmgr.inline.LineLayoutManager$Paragraph,boolean)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/layoutmgr/inline/LineLayoutManager/findOptimalBreakingPoints(int,org.apache.fop.layoutmgr.inline.LineLayoutManager$Paragraph,boolean)#org/apache/fop/layoutmgr/inline/LineLayoutManager$LineBreakingAlgorithm/findBreakingPoints(org.apache.fop.layoutmgr.KnuthSequence,double,boolean,int)
org/apache/fop/layoutmgr/inline/LineLayoutManager/findOptimalBreakingPoints(int,org.apache.fop.layoutmgr.inline.LineLayoutManager$Paragraph,boolean)#java/lang/StringBuilder/append(double)
org/apache/fop/layoutmgr/inline/LineLayoutManager/findOptimalBreakingPoints(int,org.apache.fop.layoutmgr.inline.LineLayoutManager$Paragraph,boolean)#org/apache/fop/layoutmgr/inline/LineLayoutManager$LineBreakingAlgorithm/resetAlgorithm()
org/apache/fop/layoutmgr/inline/LineLayoutManager/findOptimalBreakingPoints(int,org.apache.fop.layoutmgr.inline.LineLayoutManager$Paragraph,boolean)#org/apache/fop/layoutmgr/inline/LineLayoutManager$LineBreakingAlgorithm/LineBreakingAlgorithm(org.apache.fop.layoutmgr.inline.LineLayoutManager,int,int,int,int,int,int,int,int,boolean,int,org.apache.fop.layoutmgr.inline.LineLayoutManager)
org/apache/fop/layoutmgr/inline/LineLayoutManager/findOptimalBreakingPoints(int,org.apache.fop.layoutmgr.inline.LineLayoutManager$Paragraph,boolean)#org/apache/fop/layoutmgr/inline/LineLayoutManager$LineBreakingAlgorithm/setConstantLineWidth(int)
org/apache/fop/layoutmgr/inline/LineLayoutManager/findOptimalBreakingPoints(int,org.apache.fop.layoutmgr.inline.LineLayoutManager$Paragraph,boolean)#java/lang/StringBuilder/append(boolean)
org/apache/fop/layoutmgr/inline/LineLayoutManager/findOptimalBreakingPoints(int,org.apache.fop.layoutmgr.inline.LineLayoutManager$Paragraph,boolean)#java/lang/StringBuilder/toString()
org/apache/fop/layoutmgr/inline/LineLayoutManager/findOptimalBreakingPoints(int,org.apache.fop.layoutmgr.inline.LineLayoutManager$Paragraph,boolean)#java/util/List/indexOf(java.lang.Object)
org/apache/fop/layoutmgr/inline/LineLayoutManager/findHyphenationPoints(org.apache.fop.layoutmgr.inline.LineLayoutManager$Paragraph)#org/apache/fop/layoutmgr/inline/LineLayoutManager$Update/Update(org.apache.fop.layoutmgr.inline.LineLayoutManager,org.apache.fop.layoutmgr.inline.InlineLevelLayoutManager,int,org.apache.fop.layoutmgr.inline.LineLayoutManager$1)
org/apache/fop/layoutmgr/inline/LineLayoutManager/findHyphenationPoints(org.apache.fop.layoutmgr.inline.LineLayoutManager$Paragraph)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/layoutmgr/inline/LineLayoutManager/findHyphenationPoints(org.apache.fop.layoutmgr.inline.LineLayoutManager$Paragraph)#java/util/ListIterator/previous()
org/apache/fop/layoutmgr/inline/LineLayoutManager/findHyphenationPoints(org.apache.fop.layoutmgr.inline.LineLayoutManager$Paragraph)#org/apache/commons/logging/Log/isTraceEnabled()
org/apache/fop/layoutmgr/inline/LineLayoutManager/findHyphenationPoints(org.apache.fop.layoutmgr.inline.LineLayoutManager$Paragraph)#java/lang/StringBuffer/append(java.lang.String)
org/apache/fop/layoutmgr/inline/LineLayoutManager/findHyphenationPoints(org.apache.fop.layoutmgr.inline.LineLayoutManager$Paragraph)#java/lang/StringBuilder/toString()
org/apache/fop/layoutmgr/inline/LineLayoutManager/findHyphenationPoints(org.apache.fop.layoutmgr.inline.LineLayoutManager$Paragraph)#org/apache/fop/layoutmgr/KnuthElement/getPosition()
org/apache/fop/layoutmgr/inline/LineLayoutManager/findHyphenationPoints(org.apache.fop.layoutmgr.inline.LineLayoutManager$Paragraph)#org/apache/fop/layoutmgr/KnuthElement/getLayoutManager()
org/apache/fop/layoutmgr/inline/LineLayoutManager/findHyphenationPoints(org.apache.fop.layoutmgr.inline.LineLayoutManager$Paragraph)#org/apache/fop/layoutmgr/KnuthElement/isBox()
org/apache/fop/layoutmgr/inline/LineLayoutManager/findHyphenationPoints(org.apache.fop.layoutmgr.inline.LineLayoutManager$Paragraph)#org/apache/fop/layoutmgr/inline/LineLayoutManager$Paragraph/listIterator(int)
org/apache/fop/layoutmgr/inline/LineLayoutManager/findHyphenationPoints(org.apache.fop.layoutmgr.inline.LineLayoutManager$Paragraph)#java/util/ListIterator/hasNext()
org/apache/fop/layoutmgr/inline/LineLayoutManager/findHyphenationPoints(org.apache.fop.layoutmgr.inline.LineLayoutManager$Paragraph)#java/util/ListIterator/previousIndex()
org/apache/fop/layoutmgr/inline/LineLayoutManager/findHyphenationPoints(org.apache.fop.layoutmgr.inline.LineLayoutManager$Paragraph)#java/lang/StringBuffer/toString()
org/apache/fop/layoutmgr/inline/LineLayoutManager/findHyphenationPoints(org.apache.fop.layoutmgr.inline.LineLayoutManager$Paragraph)#java/util/ListIterator/next()
org/apache/fop/layoutmgr/inline/LineLayoutManager/findHyphenationPoints(org.apache.fop.layoutmgr.inline.LineLayoutManager$Paragraph)#java/util/LinkedList/LinkedList()
org/apache/fop/layoutmgr/inline/LineLayoutManager/findHyphenationPoints(org.apache.fop.layoutmgr.inline.LineLayoutManager$Paragraph)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/layoutmgr/inline/LineLayoutManager/findHyphenationPoints(org.apache.fop.layoutmgr.inline.LineLayoutManager$Paragraph)#org/apache/commons/logging/Log/trace(java.lang.Object)
org/apache/fop/layoutmgr/inline/LineLayoutManager/findHyphenationPoints(org.apache.fop.layoutmgr.inline.LineLayoutManager$Paragraph)#org/apache/fop/layoutmgr/inline/LineLayoutManager$Paragraph/access$1000(org.apache.fop.layoutmgr.inline.LineLayoutManager$Paragraph)
org/apache/fop/layoutmgr/inline/LineLayoutManager/findHyphenationPoints(org.apache.fop.layoutmgr.inline.LineLayoutManager$Paragraph)#java/util/List/add(java.lang.Object)
org/apache/fop/layoutmgr/inline/LineLayoutManager/findHyphenationPoints(org.apache.fop.layoutmgr.inline.LineLayoutManager$Paragraph)#java/lang/StringBuffer/StringBuffer()
org/apache/fop/layoutmgr/inline/LineLayoutManager/postProcessLineBreaks(int,org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/layoutmgr/inline/LineLayoutManager$LineBreakPosition/getLeafPos()
org/apache/fop/layoutmgr/inline/LineLayoutManager/postProcessLineBreaks(int,org.apache.fop.layoutmgr.LayoutContext)#java/util/ListIterator/hasNext()
org/apache/fop/layoutmgr/inline/LineLayoutManager/postProcessLineBreaks(int,org.apache.fop.layoutmgr.LayoutContext)#java/util/Collections/emptyList()
org/apache/fop/layoutmgr/inline/LineLayoutManager/postProcessLineBreaks(int,org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/layoutmgr/inline/LineLayoutManager/notifyPos(org.apache.fop.layoutmgr.Position)
org/apache/fop/layoutmgr/inline/LineLayoutManager/postProcessLineBreaks(int,org.apache.fop.layoutmgr.LayoutContext)#java/util/List/add(java.lang.Object)
org/apache/fop/layoutmgr/inline/LineLayoutManager/postProcessLineBreaks(int,org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/layoutmgr/inline/LineLayoutManager/handlingFloat()
org/apache/fop/layoutmgr/inline/LineLayoutManager/postProcessLineBreaks(int,org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/layoutmgr/inline/LineLayoutManager$LineBreakPosition/access$1400(org.apache.fop.layoutmgr.inline.LineLayoutManager$LineBreakPosition)
org/apache/fop/layoutmgr/inline/LineLayoutManager/postProcessLineBreaks(int,org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/layoutmgr/inline/LineLayoutManager$LineBreakPosition/access$1300(org.apache.fop.layoutmgr.inline.LineLayoutManager$LineBreakPosition)
org/apache/fop/layoutmgr/inline/LineLayoutManager/postProcessLineBreaks(int,org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/layoutmgr/inline/LineLayoutManager$LineBreakPosition/access$1200(org.apache.fop.layoutmgr.inline.LineLayoutManager$LineBreakPosition)
org/apache/fop/layoutmgr/inline/LineLayoutManager/postProcessLineBreaks(int,org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/layoutmgr/inline/LineLayoutManager$LineBreakPosition/access$1100(org.apache.fop.layoutmgr.inline.LineLayoutManager$LineBreakPosition)
org/apache/fop/layoutmgr/inline/LineLayoutManager/postProcessLineBreaks(int,org.apache.fop.layoutmgr.LayoutContext)#java/util/List/isEmpty()
org/apache/fop/layoutmgr/inline/LineLayoutManager/postProcessLineBreaks(int,org.apache.fop.layoutmgr.LayoutContext)#java/util/List/size()
org/apache/fop/layoutmgr/inline/LineLayoutManager/postProcessLineBreaks(int,org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/layoutmgr/KnuthSequence/listIterator()
org/apache/fop/layoutmgr/inline/LineLayoutManager/postProcessLineBreaks(int,org.apache.fop.layoutmgr.LayoutContext)#java/util/List/addAll(java.util.Collection)
org/apache/fop/layoutmgr/inline/LineLayoutManager/postProcessLineBreaks(int,org.apache.fop.layoutmgr.LayoutContext)#java/util/ListIterator/next()
org/apache/fop/layoutmgr/inline/LineLayoutManager/postProcessLineBreaks(int,org.apache.fop.layoutmgr.LayoutContext)#java/util/LinkedList/LinkedList()
org/apache/fop/layoutmgr/inline/LineLayoutManager/postProcessLineBreaks(int,org.apache.fop.layoutmgr.LayoutContext)#java/util/List/get(int)
org/apache/fop/render/intermediate/extensions/GoToXYAction/toSAX(org.xml.sax.ContentHandler)#org/xml/sax/helpers/AttributesImpl/AttributesImpl()
org/apache/fop/render/intermediate/extensions/GoToXYAction/toSAX(org.xml.sax.ContentHandler)#org/apache/xmlgraphics/util/QName/getNamespaceURI()
org/apache/fop/render/intermediate/extensions/GoToXYAction/toSAX(org.xml.sax.ContentHandler)#java/lang/Integer/toString(int)
org/apache/fop/render/intermediate/extensions/GoToXYAction/toSAX(org.xml.sax.ContentHandler)#org/xml/sax/ContentHandler/endElement(java.lang.String,java.lang.String,java.lang.String)
org/apache/fop/render/intermediate/extensions/GoToXYAction/toSAX(org.xml.sax.ContentHandler)#org/apache/fop/render/intermediate/extensions/GoToXYAction/getID()
org/apache/fop/render/intermediate/extensions/GoToXYAction/toSAX(org.xml.sax.ContentHandler)#org/xml/sax/helpers/AttributesImpl/addAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
org/apache/fop/render/intermediate/extensions/GoToXYAction/toSAX(org.xml.sax.ContentHandler)#org/apache/xmlgraphics/util/QName/getQName()
org/apache/fop/render/intermediate/extensions/GoToXYAction/toSAX(org.xml.sax.ContentHandler)#org/apache/xmlgraphics/util/QName/getLocalName()
org/apache/fop/render/intermediate/extensions/GoToXYAction/toSAX(org.xml.sax.ContentHandler)#org/xml/sax/ContentHandler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)
org/apache/fop/render/afp/extensions/AFPExtensionHandler/endElement(java.lang.String,java.lang.String,java.lang.String)#org/xml/sax/Attributes/getValue(java.lang.String)
org/apache/fop/render/afp/extensions/AFPExtensionHandler/endElement(java.lang.String,java.lang.String,java.lang.String)#org/apache/fop/render/afp/extensions/AFPPageSegmentElement$AFPPageSegmentSetup/setValue(java.lang.String)
org/apache/fop/render/afp/extensions/AFPExtensionHandler/endElement(java.lang.String,java.lang.String,java.lang.String)#org/apache/fop/render/afp/extensions/AFPPageSegmentElement$AFPPageSegmentSetup/setResourceSrc(java.lang.String)
org/apache/fop/render/afp/extensions/AFPExtensionHandler/endElement(java.lang.String,java.lang.String,java.lang.String)#org/apache/fop/render/afp/extensions/AFPPageSegmentElement$AFPPageSegmentSetup/AFPPageSegmentSetup(java.lang.String)
org/apache/fop/render/afp/extensions/AFPExtensionHandler/endElement(java.lang.String,java.lang.String,java.lang.String)#java/net/URI/URI(java.lang.String)
org/apache/fop/render/afp/extensions/AFPExtensionHandler/endElement(java.lang.String,java.lang.String,java.lang.String)#org/apache/fop/render/afp/extensions/ExtensionPlacement/fromXMLValue(java.lang.String)
org/apache/fop/render/afp/extensions/AFPExtensionHandler/endElement(java.lang.String,java.lang.String,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/render/afp/extensions/AFPExtensionHandler/endElement(java.lang.String,java.lang.String,java.lang.String)#java/lang/String/length()
org/apache/fop/render/afp/extensions/AFPExtensionHandler/endElement(java.lang.String,java.lang.String,java.lang.String)#java/lang/StringBuffer/length()
org/apache/fop/render/afp/extensions/AFPExtensionHandler/endElement(java.lang.String,java.lang.String,java.lang.String)#java/lang/String/equals(java.lang.Object)
org/apache/fop/render/afp/extensions/AFPExtensionHandler/endElement(java.lang.String,java.lang.String,java.lang.String)#org/apache/fop/render/afp/extensions/AFPIncludeFormMap/setName(java.lang.String)
org/apache/fop/render/afp/extensions/AFPExtensionHandler/endElement(java.lang.String,java.lang.String,java.lang.String)#java/lang/StringBuffer/toString()
org/apache/fop/render/afp/extensions/AFPExtensionHandler/endElement(java.lang.String,java.lang.String,java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/render/afp/extensions/AFPExtensionHandler/endElement(java.lang.String,java.lang.String,java.lang.String)#org/xml/sax/SAXException/SAXException(java.lang.String,java.lang.Exception)
org/apache/fop/render/afp/extensions/AFPExtensionHandler/endElement(java.lang.String,java.lang.String,java.lang.String)#java/lang/Integer/parseInt(java.lang.String)
org/apache/fop/render/afp/extensions/AFPExtensionHandler/endElement(java.lang.String,java.lang.String,java.lang.String)#org/apache/fop/render/afp/extensions/AFPPageSegmentElement$AFPPageSegmentSetup/setContent(java.lang.String)
org/apache/fop/render/afp/extensions/AFPExtensionHandler/endElement(java.lang.String,java.lang.String,java.lang.String)#java/lang/StringBuilder/toString()
org/apache/fop/render/afp/extensions/AFPExtensionHandler/endElement(java.lang.String,java.lang.String,java.lang.String)#java/lang/StringBuffer/setLength(int)
org/apache/fop/fo/ElementMapping/getDefaultDOMImplementation()#javax/xml/parsers/DocumentBuilder/getDOMImplementation()
org/apache/fop/fo/ElementMapping/getDefaultDOMImplementation()#java/lang/StringBuilder/StringBuilder()
org/apache/fop/fo/ElementMapping/getDefaultDOMImplementation()#javax/xml/parsers/DocumentBuilderFactory/newDocumentBuilder()
org/apache/fop/fo/ElementMapping/getDefaultDOMImplementation()#javax/xml/parsers/DocumentBuilderFactory/newInstance()
org/apache/fop/fo/ElementMapping/getDefaultDOMImplementation()#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/apache/fop/fo/ElementMapping/getDefaultDOMImplementation()#java/lang/StringBuilder/toString()
org/apache/fop/fo/ElementMapping/getDefaultDOMImplementation()#javax/xml/parsers/DocumentBuilderFactory/setValidating(boolean)
org/apache/fop/fo/ElementMapping/getDefaultDOMImplementation()#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/fo/ElementMapping/getDefaultDOMImplementation()#javax/xml/parsers/DocumentBuilderFactory/setNamespaceAware(boolean)
org/apache/fop/fo/ElementMapping/getDefaultDOMImplementation()#javax/xml/parsers/ParserConfigurationException/getMessage()
org/apache/fop/layoutmgr/MultiSwitchLayoutManager/WhitespaceManagement/getKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#org/apache/fop/layoutmgr/WhitespaceManagementPenalty$Variant/Variant(org.apache.fop.layoutmgr.WhitespaceManagementPenalty,java.util.List,int)
org/apache/fop/layoutmgr/MultiSwitchLayoutManager/WhitespaceManagement/getKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#java/util/LinkedList/LinkedList()
org/apache/fop/layoutmgr/MultiSwitchLayoutManager/WhitespaceManagement/getKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#java/util/List/add(java.lang.Object)
org/apache/fop/layoutmgr/MultiSwitchLayoutManager/WhitespaceManagement/getKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#java/lang/Object/getClass()
org/apache/fop/layoutmgr/MultiSwitchLayoutManager/WhitespaceManagement/getKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#org/apache/fop/layoutmgr/MultiSwitchLayoutManager/getChildLM()
org/apache/fop/layoutmgr/MultiSwitchLayoutManager/WhitespaceManagement/getKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#org/apache/fop/layoutmgr/MultiSwitchLayoutManager/wrapPositionElements(java.util.List,java.util.List)
org/apache/fop/layoutmgr/MultiSwitchLayoutManager/WhitespaceManagement/getKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#org/apache/fop/layoutmgr/MultiSwitchLayoutManager$WhitespaceManagementPosition/WhitespaceManagementPosition(org.apache.fop.layoutmgr.LayoutManager)
org/apache/fop/layoutmgr/MultiSwitchLayoutManager/WhitespaceManagement/getKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#org/apache/fop/layoutmgr/MultiSwitchLayoutManager/makeChildLayoutContext(org.apache.fop.layoutmgr.LayoutContext)
org/apache/fop/layoutmgr/MultiSwitchLayoutManager/WhitespaceManagement/getKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#java/util/List/addAll(java.util.Collection)
org/apache/fop/complexscripts/fonts/GlyphPositioningTable/PairSubtable/position(org.apache.fop.complexscripts.fonts.GlyphPositioningState)#org/apache/fop/complexscripts/fonts/GlyphPositioningState/getGlyphsAvailable(int)
org/apache/fop/complexscripts/fonts/GlyphPositioningTable/PairSubtable/position(org.apache.fop.complexscripts.fonts.GlyphPositioningState)#org/apache/fop/complexscripts/fonts/GlyphPositioningTable$PairValues/getValue1()
org/apache/fop/complexscripts/fonts/GlyphPositioningTable/PairSubtable/position(org.apache.fop.complexscripts.fonts.GlyphPositioningState)#org/apache/fop/complexscripts/fonts/GlyphPositioningTable$PairSubtable/getCoverageIndex(int)
org/apache/fop/complexscripts/fonts/GlyphPositioningTable/PairSubtable/position(org.apache.fop.complexscripts.fonts.GlyphPositioningState)#org/apache/fop/complexscripts/fonts/GlyphPositioningState/isIgnoredGlyph(int)
org/apache/fop/complexscripts/fonts/GlyphPositioningTable/PairSubtable/position(org.apache.fop.complexscripts.fonts.GlyphPositioningState)#org/apache/fop/complexscripts/fonts/GlyphPositioningState/consume(int)
org/apache/fop/complexscripts/fonts/GlyphPositioningTable/PairSubtable/position(org.apache.fop.complexscripts.fonts.GlyphPositioningState)#org/apache/fop/complexscripts/fonts/GlyphPositioningState/getGlyph(int)
org/apache/fop/complexscripts/fonts/GlyphPositioningTable/PairSubtable/position(org.apache.fop.complexscripts.fonts.GlyphPositioningState)#org/apache/fop/complexscripts/fonts/GlyphPositioningState/getGlyphs(int,int,int[],int[])
org/apache/fop/complexscripts/fonts/GlyphPositioningTable/PairSubtable/position(org.apache.fop.complexscripts.fonts.GlyphPositioningState)#org/apache/fop/complexscripts/fonts/GlyphPositioningTable$PairSubtable/getPairValues(int,int,int)
org/apache/fop/complexscripts/fonts/GlyphPositioningTable/PairSubtable/position(org.apache.fop.complexscripts.fonts.GlyphPositioningState)#org/apache/fop/complexscripts/fonts/GlyphPositioningTable$PairValues/getValue2()
org/apache/fop/render/afp/AFPImageHandlerGraphics2D/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/fop/afp/AFPPaintingState/save()
org/apache/fop/render/afp/AFPImageHandlerGraphics2D/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/fop/afp/AFPPaintingState/concatenate(java.awt.geom.AffineTransform)
org/apache/fop/render/afp/AFPImageHandlerGraphics2D/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/fop/render/afp/AFPImageHandlerGraphics2D/createResourceInformation(java.lang.String,java.util.Map)
org/apache/fop/render/afp/AFPImageHandlerGraphics2D/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/awt/geom/AffineTransform/AffineTransform()
org/apache/fop/render/afp/AFPImageHandlerGraphics2D/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/xmlgraphics/image/loader/impl/ImageGraphics2D/getGraphics2DImagePainter()
org/apache/fop/render/afp/AFPImageHandlerGraphics2D/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/fop/afp/AFPPaintingState/restore()
org/apache/fop/render/afp/AFPImageHandlerGraphics2D/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/fop/afp/AFPGraphicsObjectInfo/setResourceInfo(org.apache.fop.afp.AFPResourceInfo)
org/apache/fop/render/afp/AFPImageHandlerGraphics2D/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/fop/afp/AFPGraphicsObjectInfo/setObjectAreaInfo(org.apache.fop.afp.AFPObjectAreaInfo)
org/apache/fop/render/afp/AFPImageHandlerGraphics2D/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/xmlgraphics/image/loader/Image/getInfo()
org/apache/fop/render/afp/AFPImageHandlerGraphics2D/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/awt/geom/AffineTransform/translate(double,double)
org/apache/fop/render/afp/AFPImageHandlerGraphics2D/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/fop/render/afp/AFPImageHandlerGraphics2D/createObjectAreaInfo(org.apache.fop.afp.AFPPaintingState,java.awt.Rectangle)
org/apache/fop/render/afp/AFPImageHandlerGraphics2D/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/xmlgraphics/image/loader/ImageInfo/getOriginalURI()
org/apache/fop/render/afp/AFPImageHandlerGraphics2D/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/xmlgraphics/java2d/GraphicContext/GraphicContext()
org/apache/fop/render/afp/AFPImageHandlerGraphics2D/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/lang/AssertionError/AssertionError()
org/apache/fop/render/afp/AFPImageHandlerGraphics2D/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/fop/afp/AFPGraphicsObjectInfo/getResourceInfo()
org/apache/fop/complexscripts/fonts/GlyphClassTable/MappedClassTable/populate(java.util.List)#java/lang/Integer/intValue()
org/apache/fop/complexscripts/fonts/GlyphClassTable/MappedClassTable/populate(java.util.List)#java/util/Iterator/hasNext()
org/apache/fop/complexscripts/fonts/GlyphClassTable/MappedClassTable/populate(java.util.List)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/complexscripts/fonts/GlyphClassTable/MappedClassTable/populate(java.util.List)#java/util/List/size()
org/apache/fop/complexscripts/fonts/GlyphClassTable/MappedClassTable/populate(java.util.List)#java/util/Iterator/next()
org/apache/fop/complexscripts/fonts/GlyphClassTable/MappedClassTable/populate(java.util.List)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/complexscripts/fonts/GlyphClassTable/MappedClassTable/populate(java.util.List)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/fop/complexscripts/fonts/GlyphClassTable/MappedClassTable/populate(java.util.List)#java/util/List/iterator()
org/apache/fop/complexscripts/fonts/GlyphClassTable/MappedClassTable/populate(java.util.List)#java/lang/AssertionError/AssertionError()
org/apache/fop/complexscripts/fonts/GlyphClassTable/MappedClassTable/populate(java.util.List)#java/lang/StringBuilder/toString()
org/apache/fop/complexscripts/fonts/GlyphClassTable/MappedClassTable/toString()#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/complexscripts/fonts/GlyphClassTable/MappedClassTable/toString()#java/lang/Integer/toString(int)
org/apache/fop/complexscripts/fonts/GlyphClassTable/MappedClassTable/toString()#java/lang/StringBuffer/toString()
org/apache/fop/complexscripts/fonts/GlyphClassTable/MappedClassTable/toString()#java/lang/StringBuilder/StringBuilder()
org/apache/fop/complexscripts/fonts/GlyphClassTable/MappedClassTable/toString()#java/lang/StringBuffer/append(java.lang.String)
org/apache/fop/complexscripts/fonts/GlyphClassTable/MappedClassTable/toString()#java/lang/StringBuffer/StringBuffer()
org/apache/fop/complexscripts/fonts/GlyphClassTable/MappedClassTable/toString()#java/lang/StringBuilder/toString()
org/apache/fop/complexscripts/fonts/GlyphClassTable/MappedClassTable/toString()#java/lang/StringBuffer/append(char)
org/apache/fop/complexscripts/fonts/GlyphClassTable/MappedClassTable/toString()#java/lang/StringBuilder/append(int)
org/apache/fop/render/intermediate/BorderPainter/PathPainter/drawCorner(org.apache.fop.render.intermediate.BorderPainter$Corner)#org/apache/fop/render/intermediate/BorderPainter$Corner/access$900(org.apache.fop.render.intermediate.BorderPainter$Corner)
org/apache/fop/render/intermediate/BorderPainter/PathPainter/drawCorner(org.apache.fop.render.intermediate.BorderPainter$Corner)#org/apache/fop/render/intermediate/BorderPainter$Corner/access$800(org.apache.fop.render.intermediate.BorderPainter$Corner)
org/apache/fop/render/intermediate/BorderPainter/PathPainter/drawCorner(org.apache.fop.render.intermediate.BorderPainter$Corner)#org/apache/fop/render/intermediate/BorderPainter$Corner/access$700(org.apache.fop.render.intermediate.BorderPainter$Corner)
org/apache/fop/render/intermediate/BorderPainter/PathPainter/drawCorner(org.apache.fop.render.intermediate.BorderPainter$Corner)#org/apache/fop/render/intermediate/BorderPainter$Corner/access$400(org.apache.fop.render.intermediate.BorderPainter$Corner)
org/apache/fop/render/intermediate/BorderPainter/PathPainter/drawCorner(org.apache.fop.render.intermediate.BorderPainter$Corner)#org/apache/fop/render/intermediate/BorderPainter$Corner/access$300(org.apache.fop.render.intermediate.BorderPainter$Corner)
org/apache/fop/render/intermediate/BorderPainter/PathPainter/drawCorner(org.apache.fop.render.intermediate.BorderPainter$Corner)#org/apache/fop/render/intermediate/BorderPainter$Corner/access$1300(org.apache.fop.render.intermediate.BorderPainter$Corner)
org/apache/fop/render/intermediate/BorderPainter/PathPainter/drawCorner(org.apache.fop.render.intermediate.BorderPainter$Corner)#org/apache/fop/render/intermediate/BorderPainter$Corner/access$1200(org.apache.fop.render.intermediate.BorderPainter$Corner)
org/apache/fop/render/intermediate/BorderPainter/PathPainter/drawCorner(org.apache.fop.render.intermediate.BorderPainter$Corner)#org/apache/fop/render/intermediate/BorderPainter$CornerAngles/access$1100(org.apache.fop.render.intermediate.BorderPainter$CornerAngles)
org/apache/fop/render/intermediate/BorderPainter/PathPainter/drawCorner(org.apache.fop.render.intermediate.BorderPainter$Corner)#org/apache/fop/render/intermediate/BorderPainter$CornerAngles/access$1000(org.apache.fop.render.intermediate.BorderPainter$CornerAngles)
org/apache/fop/pdf/PDFPattern/output(java.io.OutputStream)#org/apache/fop/pdf/PDFPattern/encode(java.lang.String)
org/apache/fop/pdf/PDFPattern/output(java.io.OutputStream)#org/apache/fop/pdf/PDFResources/referencePDF()
org/apache/fop/pdf/PDFPattern/output(java.io.OutputStream)#org/apache/fop/pdf/PDFPattern/getObjectNumber()
org/apache/fop/pdf/PDFPattern/output(java.io.OutputStream)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/pdf/PDFPattern/output(java.io.OutputStream)#java/lang/Double/Double(double)
org/apache/fop/pdf/PDFPattern/output(java.io.OutputStream)#java/lang/Double/doubleValue()
org/apache/fop/pdf/PDFPattern/output(java.io.OutputStream)#org/apache/fop/pdf/PDFPattern/getDocumentSafely()
org/apache/fop/pdf/PDFPattern/output(java.io.OutputStream)#java/util/List/get(int)
org/apache/fop/pdf/PDFPattern/output(java.io.OutputStream)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/fop/pdf/PDFPattern/output(java.io.OutputStream)#java/lang/StringBuilder/toString()
org/apache/fop/pdf/PDFPattern/output(java.io.OutputStream)#org/apache/fop/pdf/PDFStream/outputStreamData(org.apache.fop.pdf.StreamCache,java.io.OutputStream)
org/apache/fop/pdf/PDFPattern/output(java.io.OutputStream)#java/lang/StringBuffer/StringBuffer(int)
org/apache/fop/pdf/PDFPattern/output(java.io.OutputStream)#java/lang/StringBuilder/append(int)
org/apache/fop/pdf/PDFPattern/output(java.io.OutputStream)#org/apache/fop/pdf/PDFStream/encodeStream()
org/apache/fop/pdf/PDFPattern/output(java.io.OutputStream)#org/apache/fop/pdf/PDFStream/setObjectNumber(org.apache.fop.pdf.PDFObjectNumber)
org/apache/fop/pdf/PDFPattern/output(java.io.OutputStream)#org/apache/fop/pdf/PDFStream/setDocument(org.apache.fop.pdf.PDFDocument)
org/apache/fop/pdf/PDFPattern/output(java.io.OutputStream)#java/util/List/size()
org/apache/fop/pdf/PDFPattern/output(java.io.OutputStream)#org/apache/fop/pdf/PDFStream/getFilterList()
org/apache/fop/pdf/PDFPattern/output(java.io.OutputStream)#java/lang/StringBuffer/toString()
org/apache/fop/pdf/PDFPattern/output(java.io.OutputStream)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/pdf/PDFPattern/output(java.io.OutputStream)#org/apache/fop/pdf/PDFPattern/getDocument()
org/apache/fop/pdf/PDFPattern/output(java.io.OutputStream)#java/lang/StringBuffer/append(java.lang.String)
org/apache/fop/pdf/PDFPattern/output(java.io.OutputStream)#java/io/OutputStream/write(byte[])
org/apache/fop/pdf/PDFPattern/output(java.io.OutputStream)#org/apache/fop/pdf/PDFShading/referencePDF()
org/apache/fop/area/AreaTreeParser/Handler/InlineParentMaker/startElement(org.xml.sax.Attributes)#org/apache/fop/area/AreaTreeParser$Handler/access$3500(org.xml.sax.Attributes,org.apache.fop.area.AreaTreeObject)
org/apache/fop/area/AreaTreeParser/Handler/InlineParentMaker/startElement(org.xml.sax.Attributes)#java/util/Stack/push(java.lang.Object)
org/apache/fop/area/AreaTreeParser/Handler/InlineParentMaker/startElement(org.xml.sax.Attributes)#org/apache/fop/area/AreaTreeParser$Handler/access$3600(org.apache.fop.area.AreaTreeParser$Handler)
org/apache/fop/area/AreaTreeParser/Handler/InlineParentMaker/startElement(org.xml.sax.Attributes)#org/apache/fop/area/AreaTreeParser$Handler/access$4300(org.apache.fop.area.AreaTreeParser$Handler,org.xml.sax.Attributes,org.apache.fop.area.Area,java.lang.Object[])
org/apache/fop/area/AreaTreeParser/Handler/InlineParentMaker/startElement(org.xml.sax.Attributes)#org/apache/fop/area/inline/InlineParent/setBlockProgressionOffset(int)
org/apache/fop/area/AreaTreeParser/Handler/InlineParentMaker/startElement(org.xml.sax.Attributes)#org/apache/fop/area/AreaTreeParser$Handler/access$4100(org.apache.fop.area.AreaTreeParser$Handler,org.xml.sax.Attributes,org.apache.fop.area.Area)
org/apache/fop/area/AreaTreeParser/Handler/InlineParentMaker/startElement(org.xml.sax.Attributes)#java/util/Stack/peek()
org/apache/fop/area/AreaTreeParser/Handler/InlineParentMaker/startElement(org.xml.sax.Attributes)#org/apache/fop/area/AreaTreeParser$Handler/access$4400()
org/apache/fop/area/AreaTreeParser/Handler/InlineParentMaker/startElement(org.xml.sax.Attributes)#org/apache/fop/area/AreaTreeParser$Handler/access$4500()
org/apache/fop/area/AreaTreeParser/Handler/InlineParentMaker/startElement(org.xml.sax.Attributes)#org/apache/fop/area/AreaTreeParser$Handler/access$4200()
org/apache/fop/area/AreaTreeParser/Handler/InlineParentMaker/startElement(org.xml.sax.Attributes)#org/apache/fop/area/AreaTreeParser$Handler/access$5300()
org/apache/fop/render/bitmap/TIFFRenderer/LazyPageImagesIterator/next()#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/fop/render/bitmap/TIFFRenderer/LazyPageImagesIterator/next()#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/render/bitmap/TIFFRenderer/LazyPageImagesIterator/next()#org/apache/commons/logging/Log/isDebugEnabled()
org/apache/fop/render/bitmap/TIFFRenderer/LazyPageImagesIterator/next()#java/util/NoSuchElementException/NoSuchElementException(java.lang.String)
org/apache/fop/render/bitmap/TIFFRenderer/LazyPageImagesIterator/next()#java/awt/image/BufferedImage/getWidth()
org/apache/fop/render/bitmap/TIFFRenderer/LazyPageImagesIterator/next()#java/awt/image/BufferedImage/getHeight()
org/apache/fop/render/bitmap/TIFFRenderer/LazyPageImagesIterator/next()#java/lang/StringBuilder/StringBuilder()
org/apache/fop/render/bitmap/TIFFRenderer/LazyPageImagesIterator/next()#java/awt/image/SinglePixelPackedSampleModel/getNumBands()
org/apache/fop/render/bitmap/TIFFRenderer/LazyPageImagesIterator/next()#org/apache/xmlgraphics/image/GraphicsUtil/wrap(java.awt.image.RenderedImage)
org/apache/fop/render/bitmap/TIFFRenderer/LazyPageImagesIterator/next()#org/apache/xmlgraphics/image/rendered/FormatRed/FormatRed(org.apache.xmlgraphics.image.rendered.CachableRed,java.awt.image.SampleModel)
org/apache/fop/render/bitmap/TIFFRenderer/LazyPageImagesIterator/next()#java/awt/image/PixelInterleavedSampleModel/PixelInterleavedSampleModel(int,int,int,int,int,int[])
org/apache/fop/render/bitmap/TIFFRenderer/LazyPageImagesIterator/next()#org/apache/fop/render/bitmap/TIFFCompressionValue/getType(java.lang.String)
org/apache/fop/render/bitmap/TIFFRenderer/LazyPageImagesIterator/next()#java/lang/StringBuilder/toString()
org/apache/fop/render/bitmap/TIFFRenderer/LazyPageImagesIterator/next()#java/awt/image/BufferedImage/getSampleModel()
org/apache/fop/render/bitmap/TIFFRenderer/LazyPageImagesIterator/next()#java/lang/StringBuilder/append(int)
org/apache/fop/render/bitmap/TIFFRenderer/LazyPageImagesIterator/next()#org/apache/fop/render/bitmap/TIFFRenderer/getPageImage(int)
org/apache/fop/complexscripts/fonts/GlyphSubstitutionTable/LigatureSubtableFormat1/populate(java.util.List)#java/util/Iterator/hasNext()
org/apache/fop/complexscripts/fonts/GlyphSubstitutionTable/LigatureSubtableFormat1/populate(java.util.List)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/complexscripts/fonts/GlyphSubstitutionTable/LigatureSubtableFormat1/populate(java.util.List)#java/util/List/size()
org/apache/fop/complexscripts/fonts/GlyphSubstitutionTable/LigatureSubtableFormat1/populate(java.util.List)#java/util/Iterator/next()
org/apache/fop/complexscripts/fonts/GlyphSubstitutionTable/LigatureSubtableFormat1/populate(java.util.List)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/complexscripts/fonts/GlyphSubstitutionTable/LigatureSubtableFormat1/populate(java.util.List)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/fop/complexscripts/fonts/GlyphSubstitutionTable/LigatureSubtableFormat1/populate(java.util.List)#java/util/List/iterator()
org/apache/fop/complexscripts/fonts/GlyphSubstitutionTable/LigatureSubtableFormat1/populate(java.util.List)#java/lang/AssertionError/AssertionError()
org/apache/fop/complexscripts/fonts/GlyphSubstitutionTable/LigatureSubtableFormat1/populate(java.util.List)#java/lang/StringBuilder/toString()
org/apache/fop/render/ps/PSDocumentHandler/startDocument()#org/apache/fop/render/ps/PSDocumentHandler$FOPPSGeneratorImpl/FOPPSGeneratorImpl(org.apache.fop.render.ps.PSDocumentHandler,java.io.OutputStream)
org/apache/fop/render/ps/PSDocumentHandler/startDocument()#org/apache/xmlgraphics/io/TempResourceURIGenerator/generate()
org/apache/fop/render/ps/PSDocumentHandler/startDocument()#org/apache/fop/render/ps/PSDocumentHandler/getUserAgent()
org/apache/fop/render/ps/PSDocumentHandler/startDocument()#org/apache/xmlgraphics/ps/PSGenerator/setPSLevel(int)
org/apache/fop/render/ps/PSDocumentHandler/startDocument()#java/awt/geom/Rectangle2D$Double/Double()
org/apache/fop/render/ps/PSDocumentHandler/startDocument()#org/apache/xmlgraphics/ps/PSPageDeviceDictionary/PSPageDeviceDictionary()
org/apache/fop/render/ps/PSDocumentHandler/startDocument()#org/apache/fop/render/ps/PSDocumentHandler/getFontInfo()
org/apache/fop/render/ps/PSDocumentHandler/startDocument()#org/apache/xmlgraphics/ps/PSPageDeviceDictionary/put(java.lang.Object,java.lang.Object)
org/apache/fop/render/ps/PSDocumentHandler/startDocument()#java/io/BufferedOutputStream/BufferedOutputStream(java.io.OutputStream)
org/apache/fop/render/ps/PSDocumentHandler/startDocument()#org/apache/xmlgraphics/ps/PSPageDeviceDictionary/setFlushOnRetrieval(boolean)
org/apache/fop/render/ps/PSDocumentHandler/handleExtensionObject(java.lang.Object)#java/util/ArrayList/ArrayList()
org/apache/fop/render/ps/PSDocumentHandler/handleExtensionObject(java.lang.Object)#org/apache/fop/render/ps/extensions/PSSetPageDevice/getContent()
org/apache/fop/render/ps/PSDocumentHandler/handleExtensionObject(java.lang.Object)#java/util/List/contains(java.lang.Object)
org/apache/fop/render/ps/PSDocumentHandler/handleExtensionObject(java.lang.Object)#org/apache/xmlgraphics/ps/PSDictionary/valueOf(java.lang.String)
org/apache/fop/render/ps/PSDocumentHandler/handleExtensionObject(java.lang.Object)#org/apache/fop/render/ps/PSDocumentHandler/getUserAgent()
org/apache/fop/render/ps/PSDocumentHandler/handleExtensionObject(java.lang.Object)#org/apache/fop/render/ps/PSEventProducer$Provider/get(org.apache.fop.events.EventBroadcaster)
org/apache/fop/render/ps/PSDocumentHandler/handleExtensionObject(java.lang.Object)#org/apache/xmlgraphics/ps/PSPageDeviceDictionary/putAll(java.util.Map)
org/apache/fop/render/ps/PSDocumentHandler/handleExtensionObject(java.lang.Object)#java/util/List/add(java.lang.Object)
org/apache/fop/render/ps/PSDocumentHandler/handleExtensionObject(java.lang.Object)#java/util/Collection/add(java.lang.Object)
org/apache/fop/render/ps/PSDocumentHandler/startPage(int,java.lang.String,java.lang.String,java.awt.Dimension)#java/awt/geom/Rectangle2D/add(java.awt.geom.Rectangle2D)
org/apache/fop/render/ps/PSDocumentHandler/startPage(int,java.lang.String,java.lang.String,java.awt.Dimension)#java/lang/Math/round(double)
org/apache/fop/render/ps/PSDocumentHandler/startPage(int,java.lang.String,java.lang.String,java.awt.Dimension)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/render/ps/PSDocumentHandler/startPage(int,java.lang.String,java.lang.String,java.awt.Dimension)#java/lang/Integer/Integer(int)
org/apache/fop/render/ps/PSDocumentHandler/startPage(int,java.lang.String,java.lang.String,java.awt.Dimension)#java/lang/Double/Double(double)
org/apache/fop/render/ps/PSDocumentHandler/startPage(int,java.lang.String,java.lang.String,java.awt.Dimension)#org/apache/xmlgraphics/ps/PSGenerator/writeDSCComment(java.lang.String,java.lang.Object)
org/apache/fop/render/ps/PSDocumentHandler/startPage(int,java.lang.String,java.lang.String,java.awt.Dimension)#org/apache/xmlgraphics/ps/dsc/ResourceTracker/notifyResourceUsageOnPage(org.apache.xmlgraphics.ps.PSResource)
org/apache/fop/render/ps/PSDocumentHandler/startPage(int,java.lang.String,java.lang.String,java.awt.Dimension)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/render/ps/PSDocumentHandler/startPage(int,java.lang.String,java.lang.String,java.awt.Dimension)#org/apache/xmlgraphics/ps/PSGenerator/getResourceTracker()
org/apache/fop/render/ps/PSDocumentHandler/startPage(int,java.lang.String,java.lang.String,java.awt.Dimension)#java/util/List/add(java.lang.Object)
org/apache/fop/render/ps/PSDocumentHandler/startPage(int,java.lang.String,java.lang.String,java.awt.Dimension)#java/awt/geom/Rectangle2D/setRect(double,double,double,double)
org/apache/fop/render/ps/PSDocumentHandler/startPage(int,java.lang.String,java.lang.String,java.awt.Dimension)#java/lang/StringBuilder/toString()
org/apache/fop/render/ps/PSDocumentHandler/startPage(int,java.lang.String,java.lang.String,java.awt.Dimension)#java/lang/Long/Long(long)
org/apache/fop/render/ps/PSDocumentHandler/startPage(int,java.lang.String,java.lang.String,java.awt.Dimension)#java/util/ArrayList/ArrayList()
org/apache/fop/render/ps/PSDocumentHandler/startPage(int,java.lang.String,java.lang.String,java.awt.Dimension)#org/apache/xmlgraphics/ps/PSGenerator/writeDSCComment(java.lang.String,java.lang.Object[])
org/apache/fop/render/ps/PSDocumentHandler/startPage(int,java.lang.String,java.lang.String,java.awt.Dimension)#org/apache/xmlgraphics/ps/PSGenerator/commentln(java.lang.String)
org/apache/fop/render/ps/PSDocumentHandler/startPage(int,java.lang.String,java.lang.String,java.awt.Dimension)#org/apache/fop/render/ps/PSDocumentHandler$PageDefinition/PageDefinition(java.awt.geom.Dimension2D,boolean,org.apache.fop.render.ps.PSDocumentHandler$1)
org/apache/fop/render/ps/PSDocumentHandler/startPage(int,java.lang.String,java.lang.String,java.awt.Dimension)#org/apache/xmlgraphics/ps/PSPageDeviceDictionary/put(java.lang.Object,java.lang.Object)
org/apache/fop/render/ps/PSDocumentHandler/startPage(int,java.lang.String,java.lang.String,java.awt.Dimension)#org/apache/xmlgraphics/ps/dsc/ResourceTracker/notifyStartNewPage()
org/apache/fop/render/ps/PSDocumentHandler/startPage(int,java.lang.String,java.lang.String,java.awt.Dimension)#java/awt/geom/Rectangle2D$Double/Double()
org/apache/fop/render/ps/PSDocumentHandler/startPage(int,java.lang.String,java.lang.String,java.awt.Dimension)#org/apache/xmlgraphics/java2d/Dimension2DDouble/Dimension2DDouble(double,double)
org/apache/fop/render/ps/PSDocumentHandler/writeHeader()#java/lang/Integer/Integer(int)
org/apache/fop/render/ps/PSDocumentHandler/writeHeader()#org/apache/xmlgraphics/ps/PSGenerator/writeDSCComment(java.lang.String,java.lang.Object[])
org/apache/fop/render/ps/PSDocumentHandler/writeHeader()#org/apache/xmlgraphics/ps/PSGenerator/getPSLevel()
org/apache/fop/render/ps/PSDocumentHandler/writeHeader()#org/apache/xmlgraphics/ps/PSGenerator/writeDSCComment(java.lang.String,java.lang.Object)
org/apache/fop/render/ps/PSDocumentHandler/writeHeader()#java/util/Date/Date()
org/apache/fop/render/ps/PSDocumentHandler/writeHeader()#org/apache/fop/render/ps/PSDocumentHandler/getUserAgent()
org/apache/fop/render/ps/PSDocumentHandler/writeHeader()#org/apache/xmlgraphics/ps/PSGenerator/writeln(java.lang.String)
org/apache/fop/render/ps/PSDocumentHandler/writeHeader()#org/apache/xmlgraphics/ps/PSGenerator/commentln(java.lang.String)
org/apache/fop/render/ps/PSDocumentHandler/writeHeader()#org/apache/xmlgraphics/ps/PSGenerator/writeDSCComment(java.lang.String)
org/apache/fop/render/ps/PSDocumentHandler/writeHeader()#org/apache/xmlgraphics/ps/PSProcSets/writeStdProcSet(org.apache.xmlgraphics.ps.PSGenerator)
org/apache/fop/render/ps/PSDocumentHandler/writeHeader()#org/apache/xmlgraphics/ps/PSProcSets/writeEPSProcSet(org.apache.xmlgraphics.ps.PSGenerator)
org/apache/fop/render/ps/PSDocumentHandler/rewritePostScriptFile()#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/fop/render/ps/PSDocumentHandler/rewritePostScriptFile()#org/apache/commons/io/IOUtils/closeQuietly(java.io.InputStream)
org/apache/fop/render/ps/PSDocumentHandler/rewritePostScriptFile()#java/lang/StringBuilder/append(long)
org/apache/fop/render/ps/PSDocumentHandler/rewritePostScriptFile()#org/apache/xmlgraphics/ps/PSGenerator/getResourceTracker()
org/apache/fop/render/ps/PSDocumentHandler/rewritePostScriptFile()#java/io/BufferedInputStream/BufferedInputStream(java.io.InputStream)
org/apache/fop/render/ps/PSDocumentHandler/rewritePostScriptFile()#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/apache/fop/render/ps/PSDocumentHandler/rewritePostScriptFile()#java/lang/System/currentTimeMillis()
org/apache/fop/render/ps/PSDocumentHandler/rewritePostScriptFile()#java/lang/StringBuilder/toString()
org/apache/fop/render/ps/PSDocumentHandler/rewritePostScriptFile()#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/render/ps/PSDocumentHandler/rewritePostScriptFile()#org/apache/commons/logging/Log/isDebugEnabled()
org/apache/fop/render/ps/PSDocumentHandler/rewritePostScriptFile()#java/io/OutputStream/flush()
org/apache/fop/render/ps/PSDocumentHandler/rewritePostScriptFile()#java/lang/StringBuilder/StringBuilder()
org/apache/fop/render/ps/PSDocumentHandler/rewritePostScriptFile()#org/apache/fop/render/ps/PSDocumentHandler/getUserAgent()
org/apache/fop/render/ps/PSDocumentHandler/rewritePostScriptFile()#org/apache/xmlgraphics/ps/dsc/DSCException/getMessage()
org/apache/fop/render/ps/PSDocumentHandler/endDocument()#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/fop/render/ps/PSDocumentHandler/endDocument()#org/apache/xmlgraphics/ps/dsc/events/DSCCommentHiResBoundingBox/generate(org.apache.xmlgraphics.ps.PSGenerator)
org/apache/fop/render/ps/PSDocumentHandler/endDocument()#org/apache/xmlgraphics/ps/PSGenerator/writeDSCComment(java.lang.String,java.lang.Object)
org/apache/fop/render/ps/PSDocumentHandler/endDocument()#org/apache/xmlgraphics/ps/dsc/events/DSCCommentBoundingBox/DSCCommentBoundingBox(java.awt.geom.Rectangle2D)
org/apache/fop/render/ps/PSDocumentHandler/endDocument()#org/apache/xmlgraphics/ps/PSGenerator/flush()
org/apache/fop/render/ps/PSDocumentHandler/endDocument()#org/apache/xmlgraphics/ps/dsc/ResourceTracker/writeResources(boolean,org.apache.xmlgraphics.ps.PSGenerator)
org/apache/fop/render/ps/PSDocumentHandler/endDocument()#org/apache/xmlgraphics/ps/PSPageDeviceDictionary/clear()
org/apache/fop/render/ps/PSDocumentHandler/endDocument()#org/apache/xmlgraphics/ps/dsc/events/DSCCommentBoundingBox/generate(org.apache.xmlgraphics.ps.PSGenerator)
org/apache/fop/render/ps/PSDocumentHandler/endDocument()#java/lang/Integer/Integer(int)
org/apache/fop/render/ps/PSDocumentHandler/endDocument()#org/apache/xmlgraphics/ps/dsc/events/DSCCommentHiResBoundingBox/DSCCommentHiResBoundingBox(java.awt.geom.Rectangle2D)
org/apache/fop/render/ps/PSDocumentHandler/endDocument()#org/apache/xmlgraphics/ps/PSGenerator/getOutputStream()
org/apache/fop/render/ps/PSDocumentHandler/endDocument()#org/apache/xmlgraphics/ps/PSGenerator/getResourceTracker()
org/apache/fop/render/ps/PSDocumentHandler/endDocument()#org/apache/commons/io/IOUtils/closeQuietly(java.io.OutputStream)
org/apache/fop/render/ps/PSDocumentHandler/endDocument()#org/apache/xmlgraphics/ps/PSGenerator/writeDSCComment(java.lang.String)
org/apache/fop/render/ps/PSDocumentHandler/endPageHeader()#org/apache/xmlgraphics/ps/PSGenerator/concatMatrix(double,double,double,double,double,double)
org/apache/fop/render/ps/PSDocumentHandler/endPageHeader()#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/render/ps/PSDocumentHandler/endPageHeader()#org/apache/fop/render/ps/PSDocumentHandler$PageDefinition/access$200(org.apache.fop.render.ps.PSDocumentHandler$PageDefinition)
org/apache/fop/render/ps/PSDocumentHandler/endPageHeader()#org/apache/xmlgraphics/ps/PSGenerator/writeln(java.lang.String)
org/apache/fop/render/ps/PSDocumentHandler/endPageHeader()#java/lang/StringBuilder/StringBuilder()
org/apache/fop/render/ps/PSDocumentHandler/endPageHeader()#org/apache/fop/render/intermediate/AbstractBinaryWritingIFDocumentHandler/endPageHeader()
org/apache/fop/render/ps/PSDocumentHandler/endPageHeader()#java/lang/StringBuilder/toString()
org/apache/fop/render/ps/PSDocumentHandler/endPageHeader()#org/apache/xmlgraphics/ps/PSPageDeviceDictionary/getContent()
org/apache/fop/render/ps/PSDocumentHandler/endPageHeader()#org/apache/fop/render/ps/PSDocumentHandler$PageDefinition/access$100(org.apache.fop.render.ps.PSDocumentHandler$PageDefinition)
org/apache/fop/render/ps/PSDocumentHandler/endPageHeader()#java/awt/geom/Dimension2D/getHeight()
org/apache/fop/render/ps/PSDocumentHandler/endPageHeader()#org/apache/xmlgraphics/ps/PSPageDeviceDictionary/isEmpty()
org/apache/fop/render/ps/PSDocumentHandler/endPageHeader()#org/apache/xmlgraphics/ps/PSGenerator/writeDSCComment(java.lang.String)
org/apache/fop/render/ps/PSDocumentHandler/endPageHeader()#org/apache/xmlgraphics/ps/PSGenerator/formatDouble(double)
org/apache/fop/fonts/base14/TimesBold/<clinit>()#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/fop/fonts/base14/TimesBold/<clinit>()#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/fonts/base14/TimesBold/<clinit>()#java/lang/Integer/Integer(int)
org/apache/fop/fonts/base14/TimesBold/<clinit>()#java/awt/Rectangle/Rectangle(int,int,int,int)
org/apache/fop/fonts/base14/TimesBold/<clinit>()#java/util/Map/get(java.lang.Object)
org/apache/fop/fonts/base14/TimesBold/<clinit>()#java/util/HashMap/HashMap()
org/apache/fop/fonts/base14/TimesBold/<clinit>()#java/lang/StringBuilder/StringBuilder()
org/apache/fop/fonts/base14/TimesBold/<clinit>()#java/util/HashSet/HashSet()
org/apache/fop/fonts/base14/TimesBold/<clinit>()#java/util/Set/add(java.lang.Object)
org/apache/fop/fonts/base14/TimesBold/<clinit>()#java/lang/StringBuilder/toString()
org/apache/fop/fonts/base14/TimesBold/<clinit>()#java/net/URI/URI(java.lang.String)
org/apache/fop/fonts/base14/TimesBold/<clinit>()#java/lang/String/toLowerCase()
org/apache/fop/render/pdf/PDFImageHandlerSVG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/xmlgraphics/image/loader/ImageSize/getWidthMpt()
org/apache/fop/render/pdf/PDFImageHandlerSVG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/xmlgraphics/image/loader/ImageSize/getHeightMpt()
org/apache/fop/render/pdf/PDFImageHandlerSVG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/render/pdf/PDFImageHandlerSVG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/fop/pdf/PDFPage/makeReference()
org/apache/fop/render/pdf/PDFImageHandlerSVG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/fop/render/pdf/PDFImageHandlerSVG$TransparencyIgnoredEventListener/TransparencyIgnoredEventListener(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image)
org/apache/fop/render/pdf/PDFImageHandlerSVG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/batik/bridge/BridgeContext/getBridge(java.lang.String,java.lang.String)
org/apache/fop/render/pdf/PDFImageHandlerSVG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/fop/render/pdf/PDFImageHandlerSVG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/xmlgraphics/image/loader/Image/getInfo()
org/apache/fop/render/pdf/PDFImageHandlerSVG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/awt/geom/AffineTransform/getScaleX()
org/apache/fop/render/pdf/PDFImageHandlerSVG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/fop/pdf/PDFPaintingState/getTransform()
org/apache/fop/render/pdf/PDFImageHandlerSVG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/awt/geom/AffineTransform/getScaleY()
org/apache/fop/render/pdf/PDFImageHandlerSVG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/lang/StringBuilder/append(int)
org/apache/fop/render/pdf/PDFImageHandlerSVG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/xmlgraphics/image/loader/ImageInfo/getOriginalURI()
org/apache/fop/render/pdf/PDFImageHandlerSVG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/awt/geom/AffineTransform/scale(double,double)
org/apache/fop/render/pdf/PDFImageHandlerSVG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/commons/logging/Log/isDebugEnabled()
org/apache/fop/render/pdf/PDFImageHandlerSVG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/awt/geom/AffineTransform/AffineTransform(float,float,float,float,float,float)
org/apache/fop/render/pdf/PDFImageHandlerSVG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/fop/pdf/PDFPaintingState/restore()
org/apache/fop/render/pdf/PDFImageHandlerSVG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/batik/bridge/GVTBuilder/build(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Document)
org/apache/fop/render/pdf/PDFImageHandlerSVG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/render/pdf/PDFImageHandlerSVG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/awt/geom/AffineTransform/setTransform(java.awt.geom.AffineTransform)
org/apache/fop/render/pdf/PDFImageHandlerSVG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/commons/logging/Log/trace(java.lang.Object)
org/apache/fop/render/pdf/PDFImageHandlerSVG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/awt/geom/AffineTransform/concatenate(java.awt.geom.AffineTransform)
org/apache/fop/render/pdf/PDFImageHandlerSVG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/fop/pdf/PDFPaintingState/concatenate(java.awt.geom.AffineTransform)
org/apache/fop/render/pdf/PDFImageHandlerSVG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/xmlgraphics/image/loader/impl/ImageXMLDOM/getDocument()
org/apache/fop/render/pdf/PDFImageHandlerSVG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/fop/svg/SVGEventProducer$Provider/get(org.apache.fop.events.EventBroadcaster)
org/apache/fop/render/pdf/PDFImageHandlerSVG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/awt/geom/AffineTransform/isIdentity()
org/apache/fop/render/pdf/PDFImageHandlerSVG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/awt/geom/AffineTransform/AffineTransform()
org/apache/fop/render/pdf/PDFImageHandlerSVG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/fop/render/pdf/PDFImageHandlerSVG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/xmlgraphics/java2d/GraphicContext/GraphicContext()
org/apache/fop/render/pdf/PDFImageHandlerSVG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/batik/bridge/BridgeContext/dispose()
org/apache/fop/render/pdf/PDFImageHandlerSVG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/batik/bridge/GVTBuilder/GVTBuilder()
org/apache/fop/render/pdf/PDFImageHandlerSVG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/xmlgraphics/image/loader/Image/getSize()
org/apache/fop/render/pdf/PDFImageHandlerSVG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/commons/logging/Log/isTraceEnabled()
org/apache/fop/render/pdf/PDFImageHandlerSVG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/lang/StringBuilder/append(double)
org/apache/fop/render/pdf/PDFImageHandlerSVG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/lang/StringBuilder/append(float)
org/apache/fop/render/pdf/PDFImageHandlerSVG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/batik/gvt/GraphicsNode/paint(java.awt.Graphics2D)
org/apache/fop/render/pdf/PDFImageHandlerSVG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/lang/StringBuilder/toString()
org/apache/fop/render/pdf/PDFImageHandlerSVG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/fop/svg/PDFGraphics2D/scale(double,double)
org/apache/fop/afp/modca/MapPageSegment/writeToStream(java.io.OutputStream)#java/util/Iterator/hasNext()
org/apache/fop/afp/modca/MapPageSegment/writeToStream(java.io.OutputStream)#java/util/Iterator/next()
org/apache/fop/afp/modca/MapPageSegment/writeToStream(java.io.OutputStream)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/afp/modca/MapPageSegment/writeToStream(java.io.OutputStream)#java/util/Set/iterator()
org/apache/fop/afp/modca/MapPageSegment/writeToStream(java.io.OutputStream)#java/lang/String/getBytes(java.lang.String)
org/apache/fop/afp/modca/MapPageSegment/writeToStream(java.io.OutputStream)#org/apache/commons/logging/Log/error(java.lang.Object)
org/apache/fop/afp/modca/MapPageSegment/writeToStream(java.io.OutputStream)#java/lang/System/arraycopy(java.lang.Object,int,java.lang.Object,int,int)
org/apache/fop/afp/modca/MapPageSegment/writeToStream(java.io.OutputStream)#java/io/OutputStream/write(byte[])
org/apache/fop/afp/modca/MapPageSegment/writeToStream(java.io.OutputStream)#java/lang/StringBuilder/toString()
org/apache/fop/afp/modca/MapPageSegment/writeToStream(java.io.OutputStream)#java/util/Set/size()
org/apache/fop/afp/modca/MapPageSegment/writeToStream(java.io.OutputStream)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/afp/modca/MapPageSegment/addPageSegment(java.lang.String)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/fop/afp/modca/MapPageSegment/addPageSegment(java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/afp/modca/MapPageSegment/addPageSegment(java.lang.String)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/fop/afp/modca/MapPageSegment/addPageSegment(java.lang.String)#java/util/Set/add(java.lang.Object)
org/apache/fop/afp/modca/MapPageSegment/addPageSegment(java.lang.String)#java/util/Set/size()
org/apache/fop/afp/modca/MapPageSegment/addPageSegment(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/afp/modca/MapPageSegment/addPageSegment(java.lang.String)#java/lang/String/length()
org/apache/fop/afp/modca/MapPageSegment/addPageSegment(java.lang.String)#org/apache/commons/logging/Log/isDebugEnabled()
org/apache/fop/afp/modca/MapPageSegment/addPageSegment(java.lang.String)#java/lang/StringBuilder/toString()
org/apache/fop/afp/fonts/RasterFont/getCharacterSet(int)#java/lang/Integer/intValue()
org/apache/fop/afp/fonts/RasterFont/getCharacterSet(int)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/fop/afp/fonts/RasterFont/getCharacterSet(int)#java/util/SortedMap/tailMap(java.lang.Object)
org/apache/fop/afp/fonts/RasterFont/getCharacterSet(int)#org/apache/commons/logging/Log/warn(java.lang.Object)
org/apache/fop/afp/fonts/RasterFont/getCharacterSet(int)#java/util/Map/get(java.lang.Object)
org/apache/fop/afp/fonts/RasterFont/getCharacterSet(int)#java/util/HashMap/HashMap()
org/apache/fop/afp/fonts/RasterFont/getCharacterSet(int)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/afp/fonts/RasterFont/getCharacterSet(int)#org/apache/fop/afp/fonts/RasterFont/getFontName()
org/apache/fop/afp/fonts/RasterFont/getCharacterSet(int)#org/apache/commons/logging/Log/error(java.lang.Object)
org/apache/fop/afp/fonts/RasterFont/getCharacterSet(int)#java/lang/Integer/valueOf(int)
org/apache/fop/afp/fonts/RasterFont/getCharacterSet(int)#java/util/SortedMap/firstKey()
org/apache/fop/afp/fonts/RasterFont/getCharacterSet(int)#java/lang/StringBuilder/append(double)
org/apache/fop/afp/fonts/RasterFont/getCharacterSet(int)#java/lang/StringBuilder/append(float)
org/apache/fop/afp/fonts/RasterFont/getCharacterSet(int)#java/lang/StringBuilder/toString()
org/apache/fop/afp/fonts/RasterFont/getCharacterSet(int)#java/lang/Math/abs(double)
org/apache/fop/afp/fonts/RasterFont/getCharacterSet(int)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/afp/fonts/RasterFont/getCharacterSet(int)#java/util/SortedMap/get(java.lang.Object)
org/apache/fop/afp/fonts/RasterFont/getCharacterSet(int)#java/util/SortedMap/isEmpty()
org/apache/fop/afp/fonts/RasterFont/getCharacterSet(int)#java/util/SortedMap/lastKey()
org/apache/fop/afp/fonts/RasterFont/getCharacterSet(int)#java/util/SortedMap/headMap(java.lang.Object)
org/apache/fop/layoutmgr/inline/InlineStackingLayoutManager/getChangedKnuthElements(java.util.List,int,int)#java/util/LinkedList/listIterator()
org/apache/fop/layoutmgr/inline/InlineStackingLayoutManager/getChangedKnuthElements(java.util.List,int,int)#org/apache/fop/layoutmgr/KnuthElement/getPosition()
org/apache/fop/layoutmgr/inline/InlineStackingLayoutManager/getChangedKnuthElements(java.util.List,int,int)#java/util/ListIterator/hasNext()
org/apache/fop/layoutmgr/inline/InlineStackingLayoutManager/getChangedKnuthElements(java.util.List,int,int)#java/util/List/subList(int,int)
org/apache/fop/layoutmgr/inline/InlineStackingLayoutManager/getChangedKnuthElements(java.util.List,int,int)#java/util/List/size()
org/apache/fop/layoutmgr/inline/InlineStackingLayoutManager/getChangedKnuthElements(java.util.List,int,int)#org/apache/fop/layoutmgr/inline/InlineStackingLayoutManager/notifyPos(org.apache.fop.layoutmgr.Position)
org/apache/fop/layoutmgr/inline/InlineStackingLayoutManager/getChangedKnuthElements(java.util.List,int,int)#java/util/LinkedList/add(java.lang.Object)
org/apache/fop/layoutmgr/inline/InlineStackingLayoutManager/getChangedKnuthElements(java.util.List,int,int)#org/apache/fop/layoutmgr/KnuthElement/setPosition(org.apache.fop.layoutmgr.Position)
org/apache/fop/layoutmgr/inline/InlineStackingLayoutManager/getChangedKnuthElements(java.util.List,int,int)#java/util/LinkedList/addAll(java.util.Collection)
org/apache/fop/layoutmgr/inline/InlineStackingLayoutManager/getChangedKnuthElements(java.util.List,int,int)#java/util/List/listIterator()
org/apache/fop/layoutmgr/inline/InlineStackingLayoutManager/getChangedKnuthElements(java.util.List,int,int)#java/util/ListIterator/previousIndex()
org/apache/fop/layoutmgr/inline/InlineStackingLayoutManager/getChangedKnuthElements(java.util.List,int,int)#java/util/ListIterator/next()
org/apache/fop/layoutmgr/inline/InlineStackingLayoutManager/getChangedKnuthElements(java.util.List,int,int)#java/util/LinkedList/LinkedList()
org/apache/fop/layoutmgr/inline/InlineStackingLayoutManager/addALetterSpaceTo(java.util.List,int)#org/apache/fop/layoutmgr/KnuthElement/getPosition()
org/apache/fop/layoutmgr/inline/InlineStackingLayoutManager/addALetterSpaceTo(java.util.List,int)#java/util/ListIterator/hasNext()
org/apache/fop/layoutmgr/inline/InlineStackingLayoutManager/addALetterSpaceTo(java.util.List,int)#java/util/List/size()
org/apache/fop/layoutmgr/inline/InlineStackingLayoutManager/addALetterSpaceTo(java.util.List,int)#org/apache/fop/layoutmgr/inline/InlineStackingLayoutManager/notifyPos(org.apache.fop.layoutmgr.Position)
org/apache/fop/layoutmgr/inline/InlineStackingLayoutManager/addALetterSpaceTo(java.util.List,int)#java/util/ListIterator/next()
org/apache/fop/layoutmgr/inline/InlineStackingLayoutManager/addALetterSpaceTo(java.util.List,int)#org/apache/fop/layoutmgr/KnuthElement/setPosition(org.apache.fop.layoutmgr.Position)
org/apache/fop/layoutmgr/inline/InlineStackingLayoutManager/addALetterSpaceTo(java.util.List,int)#java/util/ListIterator/previous()
org/apache/fop/layoutmgr/inline/InlineStackingLayoutManager/addALetterSpaceTo(java.util.List,int)#java/util/List/listIterator()
org/apache/fop/layoutmgr/inline/InlineStackingLayoutManager/addALetterSpaceTo(java.util.List,int)#java/util/List/listIterator(int)
org/apache/fop/area/IDTracker/signalIDProcessed(java.lang.String)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/fop/area/IDTracker/signalIDProcessed(java.lang.String)#java/util/Iterator/hasNext()
org/apache/fop/area/IDTracker/signalIDProcessed(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/area/IDTracker/signalIDProcessed(java.lang.String)#java/util/Iterator/next()
org/apache/fop/area/IDTracker/signalIDProcessed(java.lang.String)#java/util/Set/contains(java.lang.Object)
org/apache/fop/area/IDTracker/signalIDProcessed(java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/area/IDTracker/signalIDProcessed(java.lang.String)#java/util/Set/iterator()
org/apache/fop/area/IDTracker/signalIDProcessed(java.lang.String)#java/util/Set/remove(java.lang.Object)
org/apache/fop/area/IDTracker/signalIDProcessed(java.lang.String)#java/util/Set/add(java.lang.Object)
org/apache/fop/area/IDTracker/signalIDProcessed(java.lang.String)#java/util/Map/remove(java.lang.Object)
org/apache/fop/area/IDTracker/signalIDProcessed(java.lang.String)#java/lang/StringBuilder/toString()
org/apache/fop/area/IDTracker/signalIDProcessed(java.lang.String)#org/apache/commons/logging/Log/isDebugEnabled()
org/apache/fop/area/IDTracker/signalIDProcessed(java.lang.String)#java/util/Map/get(java.lang.Object)
org/apache/fop/area/IDTracker/associateIDWithPageViewport(java.lang.String,org.apache.fop.area.PageViewport)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/area/IDTracker/associateIDWithPageViewport(java.lang.String,org.apache.fop.area.PageViewport)#java/util/Set/contains(java.lang.Object)
org/apache/fop/area/IDTracker/associateIDWithPageViewport(java.lang.String,org.apache.fop.area.PageViewport)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/area/IDTracker/associateIDWithPageViewport(java.lang.String,org.apache.fop.area.PageViewport)#java/util/List/add(java.lang.Object)
org/apache/fop/area/IDTracker/associateIDWithPageViewport(java.lang.String,org.apache.fop.area.PageViewport)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/fop/area/IDTracker/associateIDWithPageViewport(java.lang.String,org.apache.fop.area.PageViewport)#java/lang/StringBuilder/toString()
org/apache/fop/area/IDTracker/associateIDWithPageViewport(java.lang.String,org.apache.fop.area.PageViewport)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/fop/area/IDTracker/associateIDWithPageViewport(java.lang.String,org.apache.fop.area.PageViewport)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/fop/area/IDTracker/associateIDWithPageViewport(java.lang.String,org.apache.fop.area.PageViewport)#java/util/ArrayList/ArrayList()
org/apache/fop/area/IDTracker/associateIDWithPageViewport(java.lang.String,org.apache.fop.area.PageViewport)#org/apache/commons/logging/Log/isDebugEnabled()
org/apache/fop/area/IDTracker/associateIDWithPageViewport(java.lang.String,org.apache.fop.area.PageViewport)#java/util/Map/get(java.lang.Object)
org/apache/fop/area/IDTracker/associateIDWithPageViewport(java.lang.String,org.apache.fop.area.PageViewport)#java/util/List/contains(java.lang.Object)
org/apache/fop/fo/PropertyList/convertAttributeToProperty(org.xml.sax.Attributes,java.lang.String,java.lang.String)#org/apache/fop/fo/FObj/getName()
org/apache/fop/fo/PropertyList/convertAttributeToProperty(org.xml.sax.Attributes,java.lang.String,java.lang.String)#java/lang/String/startsWith(java.lang.String)
org/apache/fop/fo/PropertyList/convertAttributeToProperty(org.xml.sax.Attributes,java.lang.String,java.lang.String)#java/lang/StringBuilder/toString()
org/apache/fop/fo/PropertyList/convertAttributeToProperty(org.xml.sax.Attributes,java.lang.String,java.lang.String)#org/apache/fop/fo/FObj/getFOValidationEventProducer()
org/apache/fop/fo/PropertyList/convertAttributeToProperty(org.xml.sax.Attributes,java.lang.String,java.lang.String)#org/apache/xmlgraphics/util/QName/QName(java.lang.String,java.lang.String)
org/apache/fop/fo/PropertyList/convertAttributeToProperty(org.xml.sax.Attributes,java.lang.String,java.lang.String)#org/apache/commons/logging/Log/warn(java.lang.Object)
org/apache/fop/fo/PropertyList/convertAttributeToProperty(org.xml.sax.Attributes,java.lang.String,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/fo/PropertyList/convertAttributeToProperty(org.xml.sax.Attributes,java.lang.String,java.lang.String)#java/lang/String/equals(java.lang.Object)
org/apache/fop/fo/PropertyList/convertAttributeToProperty(org.xml.sax.Attributes,java.lang.String,java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/fo/PropertyList/addAttributesToList(org.xml.sax.Attributes)#java/lang/String/length()
org/apache/fop/fo/PropertyList/addAttributesToList(org.xml.sax.Attributes)#org/xml/sax/Attributes/getValue(int)
org/apache/fop/fo/PropertyList/addAttributesToList(org.xml.sax.Attributes)#java/lang/String/equals(java.lang.Object)
org/apache/fop/fo/PropertyList/addAttributesToList(org.xml.sax.Attributes)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/fo/PropertyList/addAttributesToList(org.xml.sax.Attributes)#org/xml/sax/Attributes/getURI(int)
org/apache/fop/fo/PropertyList/addAttributesToList(org.xml.sax.Attributes)#org/apache/fop/fo/FObj/getUserAgent()
org/apache/fop/fo/PropertyList/addAttributesToList(org.xml.sax.Attributes)#org/apache/xmlgraphics/util/QName/getLocalName()
org/apache/fop/fo/PropertyList/addAttributesToList(org.xml.sax.Attributes)#java/lang/StringBuilder/toString()
org/apache/fop/fo/PropertyList/addAttributesToList(org.xml.sax.Attributes)#org/xml/sax/Attributes/getQName(int)
org/apache/fop/fo/PropertyList/addAttributesToList(org.xml.sax.Attributes)#org/xml/sax/Attributes/getLength()
org/apache/fop/fo/PropertyList/addAttributesToList(org.xml.sax.Attributes)#org/apache/xmlgraphics/util/QName/QName(java.lang.String,java.lang.String)
org/apache/fop/fo/PropertyList/addAttributesToList(org.xml.sax.Attributes)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/fo/expr/CIELabColorFunction/eval(org.apache.fop.fo.properties.Property[],org.apache.fop.fo.expr.PropertyInfo)#java/lang/Number/floatValue()
org/apache/fop/fo/expr/CIELabColorFunction/eval(org.apache.fop.fo.properties.Property[],org.apache.fop.fo.expr.PropertyInfo)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/fo/expr/CIELabColorFunction/eval(org.apache.fop.fo.properties.Property[],org.apache.fop.fo.expr.PropertyInfo)#java/lang/StringBuffer/toString()
org/apache/fop/fo/expr/CIELabColorFunction/eval(org.apache.fop.fo.properties.Property[],org.apache.fop.fo.expr.PropertyInfo)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/fo/expr/CIELabColorFunction/eval(org.apache.fop.fo.properties.Property[],org.apache.fop.fo.expr.PropertyInfo)#org/apache/fop/fo/FObj/getUserAgent()
org/apache/fop/fo/expr/CIELabColorFunction/eval(org.apache.fop.fo.properties.Property[],org.apache.fop.fo.expr.PropertyInfo)#java/lang/StringBuilder/append(float)
org/apache/fop/fo/expr/CIELabColorFunction/eval(org.apache.fop.fo.properties.Property[],org.apache.fop.fo.expr.PropertyInfo)#java/lang/StringBuffer/StringBuffer()
org/apache/fop/fo/expr/CIELabColorFunction/eval(org.apache.fop.fo.properties.Property[],org.apache.fop.fo.expr.PropertyInfo)#java/lang/StringBuilder/toString()
org/apache/fop/fo/expr/CIELabColorFunction/eval(org.apache.fop.fo.properties.Property[],org.apache.fop.fo.expr.PropertyInfo)#java/lang/StringBuffer/append(java.lang.String)
org/apache/fop/fo/properties/PropertyMaker/make(org.apache.fop.fo.PropertyList,java.lang.String,org.apache.fop.fo.FObj)#org/apache/fop/fo/FObj/getName()
org/apache/fop/fo/properties/PropertyMaker/make(org.apache.fop.fo.PropertyList,java.lang.String,org.apache.fop.fo.FObj)#org/apache/commons/logging/Log/isWarnEnabled()
org/apache/fop/fo/properties/PropertyMaker/make(org.apache.fop.fo.PropertyList,java.lang.String,org.apache.fop.fo.FObj)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/fo/properties/PropertyMaker/make(org.apache.fop.fo.PropertyList,java.lang.String,org.apache.fop.fo.FObj)#java/lang/StringBuilder/toString()
org/apache/fop/fo/properties/PropertyMaker/make(org.apache.fop.fo.PropertyList,java.lang.String,org.apache.fop.fo.FObj)#org/apache/commons/logging/Log/warn(java.lang.Object)
org/apache/fop/fo/properties/PropertyMaker/make(org.apache.fop.fo.PropertyList,java.lang.String,org.apache.fop.fo.FObj)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/fo/properties/PropertyMaker/make(org.apache.fop.fo.PropertyList,java.lang.String,org.apache.fop.fo.FObj)#java/lang/String/trim()
org/apache/fop/fo/properties/PropertyMaker/make(org.apache.fop.fo.PropertyList,java.lang.String,org.apache.fop.fo.FObj)#org/apache/fop/fo/FObj/getLocator()
org/apache/fop/fo/properties/PropertyMaker/make(org.apache.fop.fo.PropertyList,java.lang.String,org.apache.fop.fo.FObj)#java/lang/String/equals(java.lang.Object)
org/apache/fop/fo/properties/PropertyMaker/make(org.apache.fop.fo.PropertyList,java.lang.String,org.apache.fop.fo.FObj)#org/apache/fop/fo/expr/PropertyException/setLocator(org.xml.sax.Locator)
org/apache/fop/fonts/cff/CFFDataReader/getLocalSubrsForGlyph(int)#java/lang/Integer/intValue()
org/apache/fop/fonts/cff/CFFDataReader/getLocalSubrsForGlyph(int)#org/apache/fop/fonts/cff/CFFDataReader$Format3FDSelect/getRanges()
org/apache/fop/fonts/cff/CFFDataReader/getLocalSubrsForGlyph(int)#java/util/Iterator/hasNext()
org/apache/fop/fonts/cff/CFFDataReader/getLocalSubrsForGlyph(int)#org/apache/fop/fonts/cff/CFFDataReader$FontDict/getLocalSubrData()
org/apache/fop/fonts/cff/CFFDataReader/getLocalSubrsForGlyph(int)#org/apache/fop/fonts/cff/CFFDataReader$Format0FDSelect/getFDIndexes()
org/apache/fop/fonts/cff/CFFDataReader/getLocalSubrsForGlyph(int)#java/util/Iterator/next()
org/apache/fop/fonts/cff/CFFDataReader/getLocalSubrsForGlyph(int)#org/apache/fontbox/cff/CFFDataInput/CFFDataInput(byte[])
org/apache/fop/fonts/cff/CFFDataReader/getLocalSubrsForGlyph(int)#java/util/Set/iterator()
org/apache/fop/fonts/cff/CFFDataReader/getLocalSubrsForGlyph(int)#java/util/List/get(int)
org/apache/fop/fonts/cff/CFFDataReader/getLocalSubrsForGlyph(int)#java/util/LinkedHashMap/keySet()
org/apache/fop/fonts/cff/CFFDataReader/getLocalSubrsForGlyph(int)#org/apache/fop/fonts/cff/CFFDataReader$CFFIndexData/getByteData()
org/apache/fop/fonts/cff/CFFDataReader/parseCIDData()#java/util/ArrayList/ArrayList()
org/apache/fop/fonts/cff/CFFDataReader/parseCIDData()#org/apache/fop/fonts/cff/CFFDataReader$FontDict/FontDict(org.apache.fop.fonts.cff.CFFDataReader)
org/apache/fop/fonts/cff/CFFDataReader/parseCIDData()#org/apache/fop/fonts/cff/CFFDataReader$CFFIndexData/getValuePosition(int)
org/apache/fop/fonts/cff/CFFDataReader/parseCIDData()#java/lang/Number/intValue()
org/apache/fop/fonts/cff/CFFDataReader/parseCIDData()#org/apache/fop/fonts/cff/CFFDataReader$CFFIndexData/getNumObjects()
org/apache/fop/fonts/cff/CFFDataReader/parseCIDData()#java/util/List/get(int)
org/apache/fop/fonts/cff/CFFDataReader/parseCIDData()#org/apache/fop/fonts/cff/CFFDataReader$DICTEntry/getOperands()
org/apache/fop/fonts/cff/CFFDataReader/parseCIDData()#java/util/LinkedHashMap/get(java.lang.Object)
org/apache/fop/fonts/cff/CFFDataReader/parseCIDData()#org/apache/fop/fonts/cff/CFFDataReader$FontDict/setByteData(int,int)
org/apache/fop/fonts/cff/CFFDataReader/parseCIDData()#org/apache/fop/fonts/cff/CFFDataReader$CFFIndexData/getValueLength(int)
org/apache/fop/fonts/cff/CFFDataReader/parseCIDData()#java/util/ArrayList/add(java.lang.Object)
org/apache/fop/fonts/cff/CFFDataReader/parseCIDData()#org/apache/fop/fonts/cff/CFFDataReader$FontDict/setFontName(java.lang.String)
org/apache/fop/fonts/cff/CFFDataReader/parseCIDData()#org/apache/fop/fonts/cff/CFFDataReader$CFFIndexData/getValue(int)
org/apache/fop/fonts/cff/CFFDataReader/readFormat3FDSelect()#org/apache/fop/fonts/cff/CFFDataReader$Format3FDSelect/setRanges(java.util.LinkedHashMap)
org/apache/fop/fonts/cff/CFFDataReader/readFormat3FDSelect()#org/apache/fontbox/cff/CFFDataInput/readCard16()
org/apache/fop/fonts/cff/CFFDataReader/readFormat3FDSelect()#org/apache/fop/fonts/cff/CFFDataReader$Format3FDSelect/setFormat(int)
org/apache/fop/fonts/cff/CFFDataReader/readFormat3FDSelect()#java/util/LinkedHashMap/put(java.lang.Object,java.lang.Object)
org/apache/fop/fonts/cff/CFFDataReader/readFormat3FDSelect()#org/apache/fop/fonts/cff/CFFDataReader$Format3FDSelect/setRangeCount(int)
org/apache/fop/fonts/cff/CFFDataReader/readFormat3FDSelect()#org/apache/fontbox/cff/CFFDataInput/readCard8()
org/apache/fop/fonts/cff/CFFDataReader/readFormat3FDSelect()#org/apache/fop/fonts/cff/CFFDataReader$Format3FDSelect/Format3FDSelect(org.apache.fop.fonts.cff.CFFDataReader)
org/apache/fop/fonts/cff/CFFDataReader/readFormat3FDSelect()#java/lang/Integer/valueOf(int)
org/apache/fop/fonts/cff/CFFDataReader/readFormat3FDSelect()#org/apache/fop/fonts/cff/CFFDataReader$Format3FDSelect/setSentinelGID(int)
org/apache/fop/fonts/cff/CFFDataReader/readFormat3FDSelect()#java/util/LinkedHashMap/LinkedHashMap()
org/apache/fop/fonts/cff/CFFDataReader/parseDictData(byte[])#org/apache/fop/fonts/cff/CFFDataReader$DICTEntry/DICTEntry()
org/apache/fop/fonts/cff/CFFDataReader/parseDictData(byte[])#java/util/ArrayList/ArrayList()
org/apache/fop/fonts/cff/CFFDataReader/parseDictData(byte[])#org/apache/fop/fonts/cff/CFFDataReader$DICTEntry/setOperandLengths(java.util.List)
org/apache/fop/fonts/cff/CFFDataReader/parseDictData(byte[])#org/apache/fontbox/cff/CFFOperator$Key/Key(int)
org/apache/fop/fonts/cff/CFFDataReader/parseDictData(byte[])#java/util/LinkedHashMap/put(java.lang.Object,java.lang.Object)
org/apache/fop/fonts/cff/CFFDataReader/parseDictData(byte[])#org/apache/fop/fonts/cff/CFFDataReader$DICTEntry/setOperatorName(java.lang.String)
org/apache/fop/fonts/cff/CFFDataReader/parseDictData(byte[])#org/apache/fop/fonts/cff/CFFDataReader$DICTEntry/setOperands(java.util.List)
org/apache/fop/fonts/cff/CFFDataReader/parseDictData(byte[])#org/apache/fop/fonts/cff/CFFDataReader$DICTEntry/setOperator(int[])
org/apache/fop/fonts/cff/CFFDataReader/parseDictData(byte[])#org/apache/fop/fonts/cff/CFFDataReader$DICTEntry/setOperandLength(int)
org/apache/fop/fonts/cff/CFFDataReader/parseDictData(byte[])#java/lang/StringBuilder/StringBuilder()
org/apache/fop/fonts/cff/CFFDataReader/parseDictData(byte[])#java/util/List/clear()
org/apache/fop/fonts/cff/CFFDataReader/parseDictData(byte[])#java/util/List/add(java.lang.Object)
org/apache/fop/fonts/cff/CFFDataReader/parseDictData(byte[])#java/lang/Integer/valueOf(int)
org/apache/fop/fonts/cff/CFFDataReader/parseDictData(byte[])#java/lang/System/arraycopy(java.lang.Object,int,java.lang.Object,int,int)
org/apache/fop/fonts/cff/CFFDataReader/parseDictData(byte[])#java/lang/StringBuilder/toString()
org/apache/fop/fonts/cff/CFFDataReader/parseDictData(byte[])#org/apache/fontbox/cff/CFFOperator$Key/Key(int,int)
org/apache/fop/fonts/cff/CFFDataReader/parseDictData(byte[])#org/apache/fop/fonts/cff/CFFDataReader$DICTEntry/setOffset(int)
org/apache/fop/fonts/cff/CFFDataReader/parseDictData(byte[])#java/util/ArrayList/ArrayList(java.util.Collection)
org/apache/fop/fonts/cff/CFFDataReader/parseDictData(byte[])#org/apache/fop/fonts/cff/CFFDataReader$DICTEntry/setByteData(byte[])
org/apache/fop/fonts/cff/CFFDataReader/parseDictData(byte[])#org/apache/fontbox/cff/CFFOperator/getOperator(org.apache.fontbox.cff.CFFOperator$Key)
org/apache/fop/fonts/cff/CFFDataReader/parseDictData(byte[])#java/lang/Double/valueOf(java.lang.String)
org/apache/fop/fonts/cff/CFFDataReader/parseDictData(byte[])#org/apache/fontbox/cff/CFFOperator/getName()
org/apache/fop/fonts/cff/CFFDataReader/parseDictData(byte[])#java/util/LinkedHashMap/LinkedHashMap()
org/apache/fop/fonts/cff/CFFDataReader/setFDData(org.apache.fop.fonts.cff.CFFDataReader$DICTEntry,org.apache.fop.fonts.cff.CFFDataReader$FontDict)#org/apache/fontbox/cff/CFFDataInput/readBytes(int)
org/apache/fop/fonts/cff/CFFDataReader/setFDData(org.apache.fop.fonts.cff.CFFDataReader$DICTEntry,org.apache.fop.fonts.cff.CFFDataReader$FontDict)#java/util/LinkedHashMap/get(java.lang.Object)
org/apache/fop/fonts/cff/CFFDataReader/setFDData(org.apache.fop.fonts.cff.CFFDataReader$DICTEntry,org.apache.fop.fonts.cff.CFFDataReader$FontDict)#org/apache/fop/fonts/cff/CFFDataReader$FontDict/setLocalSubrData(org.apache.fop.fonts.cff.CFFDataReader$CFFIndexData)
org/apache/fop/fonts/cff/CFFDataReader/setFDData(org.apache.fop.fonts.cff.CFFDataReader$DICTEntry,org.apache.fop.fonts.cff.CFFDataReader$FontDict)#org/apache/fop/fonts/cff/CFFDataReader$CFFIndexData/CFFIndexData(org.apache.fop.fonts.cff.CFFDataReader)
org/apache/fop/fonts/cff/CFFDataReader/setFDData(org.apache.fop.fonts.cff.CFFDataReader$DICTEntry,org.apache.fop.fonts.cff.CFFDataReader$FontDict)#org/apache/fontbox/cff/CFFDataInput/setPosition(int)
org/apache/fop/fonts/cff/CFFDataReader/setFDData(org.apache.fop.fonts.cff.CFFDataReader$DICTEntry,org.apache.fop.fonts.cff.CFFDataReader$FontDict)#java/lang/Number/intValue()
org/apache/fop/fonts/cff/CFFDataReader/setFDData(org.apache.fop.fonts.cff.CFFDataReader$DICTEntry,org.apache.fop.fonts.cff.CFFDataReader$FontDict)#org/apache/fop/fonts/cff/CFFDataReader$DICTEntry/getOperands()
org/apache/fop/fonts/cff/CFFDataReader/setFDData(org.apache.fop.fonts.cff.CFFDataReader$DICTEntry,org.apache.fop.fonts.cff.CFFDataReader$FontDict)#java/util/List/get(int)
org/apache/fop/fonts/cff/CFFDataReader/setFDData(org.apache.fop.fonts.cff.CFFDataReader$DICTEntry,org.apache.fop.fonts.cff.CFFDataReader$FontDict)#org/apache/fop/fonts/cff/CFFDataReader$FontDict/setPrivateDictData(int,int)
org/apache/fop/fonts/DefaultFontConfigurator/configure(org.apache.fop.fonts.FontConfig)#org/apache/commons/logging/Log/isDebugEnabled()
org/apache/fop/fonts/DefaultFontConfigurator/configure(org.apache.fop.fonts.FontConfig)#java/lang/System/currentTimeMillis()
org/apache/fop/fonts/DefaultFontConfigurator/configure(org.apache.fop.fonts.FontConfig)#java/lang/AssertionError/AssertionError()
org/apache/fop/fonts/DefaultFontConfigurator/configure(org.apache.fop.fonts.FontConfig)#java/lang/StringBuilder/toString()
org/apache/fop/fonts/DefaultFontConfigurator/configure(org.apache.fop.fonts.FontConfig)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/fop/fonts/DefaultFontConfigurator/configure(org.apache.fop.fonts.FontConfig)#java/util/ArrayList/ArrayList()
org/apache/fop/fonts/DefaultFontConfigurator/configure(org.apache.fop.fonts.FontConfig)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/fonts/DefaultFontConfigurator/configure(org.apache.fop.fonts.FontConfig)#java/util/List/size()
org/apache/fop/fonts/DefaultFontConfigurator/configure(org.apache.fop.fonts.FontConfig)#java/lang/StringBuilder/append(long)
org/apache/fop/fonts/DefaultFontConfigurator/configure(org.apache.fop.fonts.FontConfig)#java/util/Collections/unmodifiableList(java.util.List)
org/apache/fop/fonts/DefaultFontConfigurator/configure(org.apache.fop.fonts.FontConfig)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/fonts/DefaultFontConfigurator/getFontInfo(org.apache.fop.fonts.DefaultFontConfig$Font,org.apache.fop.fonts.FontCache)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/fop/fonts/DefaultFontConfigurator/getFontInfo(org.apache.fop.fonts.DefaultFontConfig$Font,org.apache.fop.fonts.FontCache)#org/apache/fop/fonts/DefaultFontConfig$Font/isAdvanced()
org/apache/fop/fonts/DefaultFontConfigurator/getFontInfo(org.apache.fop.fonts.DefaultFontConfig$Font,org.apache.fop.fonts.FontCache)#java/util/List/size()
org/apache/fop/fonts/DefaultFontConfigurator/getFontInfo(org.apache.fop.fonts.DefaultFontConfig$Font,org.apache.fop.fonts.FontCache)#org/apache/fop/fonts/EmbeddingMode/getValue(java.lang.String)
org/apache/fop/fonts/DefaultFontConfigurator/getFontInfo(org.apache.fop.fonts.DefaultFontConfig$Font,org.apache.fop.fonts.FontCache)#org/apache/fop/fonts/DefaultFontConfig$Font/getAfm()
org/apache/fop/fonts/DefaultFontConfigurator/getFontInfo(org.apache.fop.fonts.DefaultFontConfig$Font,org.apache.fop.fonts.FontCache)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/fonts/DefaultFontConfigurator/getFontInfo(org.apache.fop.fonts.DefaultFontConfig$Font,org.apache.fop.fonts.FontCache)#org/apache/fop/fonts/DefaultFontConfig$Font/isKerning()
org/apache/fop/fonts/DefaultFontConfigurator/getFontInfo(org.apache.fop.fonts.DefaultFontConfig$Font,org.apache.fop.fonts.FontCache)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/fop/fonts/DefaultFontConfigurator/getFontInfo(org.apache.fop.fonts.DefaultFontConfig$Font,org.apache.fop.fonts.FontCache)#org/apache/fop/fonts/DefaultFontConfig$Font/getTripletList()
org/apache/fop/fonts/DefaultFontConfigurator/getFontInfo(org.apache.fop.fonts.DefaultFontConfig$Font,org.apache.fop.fonts.FontCache)#java/lang/StringBuilder/toString()
org/apache/fop/fonts/DefaultFontConfigurator/getFontInfo(org.apache.fop.fonts.DefaultFontConfig$Font,org.apache.fop.fonts.FontCache)#org/apache/fop/fonts/EncodingMode/getValue(java.lang.String)
org/apache/fop/fonts/DefaultFontConfigurator/getFontInfo(org.apache.fop.fonts.DefaultFontConfig$Font,org.apache.fop.fonts.FontCache)#org/apache/fop/fonts/DefaultFontConfig$Font/getPfm()
org/apache/fop/fonts/DefaultFontConfigurator/getFontInfo(org.apache.fop.fonts.DefaultFontConfig$Font,org.apache.fop.fonts.FontCache)#org/apache/fop/fonts/DefaultFontConfig$Font/getEmbedURI()
org/apache/fop/fonts/DefaultFontConfigurator/getFontInfo(org.apache.fop.fonts.DefaultFontConfig$Font,org.apache.fop.fonts.FontCache)#org/apache/fop/fonts/DefaultFontConfig$Font/getEncodingMode()
org/apache/fop/fonts/DefaultFontConfigurator/getFontInfo(org.apache.fop.fonts.DefaultFontConfig$Font,org.apache.fop.fonts.FontCache)#org/apache/fop/fonts/DefaultFontConfig$Font/getEmbeddingMode()
org/apache/fop/fonts/DefaultFontConfigurator/getFontInfo(org.apache.fop.fonts.DefaultFontConfig$Font,org.apache.fop.fonts.FontCache)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/fonts/DefaultFontConfigurator/getFontInfo(org.apache.fop.fonts.DefaultFontConfig$Font,org.apache.fop.fonts.FontCache)#java/lang/StringBuilder/append(int)
org/apache/fop/fonts/DefaultFontConfigurator/getFontInfo(org.apache.fop.fonts.DefaultFontConfig$Font,org.apache.fop.fonts.FontCache)#org/apache/commons/logging/Log/isDebugEnabled()
org/apache/fop/fonts/DefaultFontConfigurator/getFontInfo(org.apache.fop.fonts.DefaultFontConfig$Font,org.apache.fop.fonts.FontCache)#org/apache/fop/fonts/DefaultFontConfig$Font/getMetrics()
org/apache/fop/fonts/DefaultFontConfigurator/getFontInfo(org.apache.fop.fonts.DefaultFontConfig$Font,org.apache.fop.fonts.FontCache)#org/apache/fop/fonts/DefaultFontConfig$Font/getSubFont()
org/apache/fop/fonts/DefaultFontConfigurator/getFontInfo(org.apache.fop.fonts.DefaultFontConfig$Font,org.apache.fop.fonts.FontCache)#java/util/List/get(int)
org/apache/fop/render/java2d/Java2DSVGHandler/renderSVGDocument(org.apache.fop.render.RendererContext,org.w3c.dom.Document)#java/awt/geom/AffineTransform/getScaleInstance(double,double)
org/apache/fop/render/java2d/Java2DSVGHandler/renderSVGDocument(org.apache.fop.render.RendererContext,org.w3c.dom.Document)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/fop/render/java2d/Java2DSVGHandler/renderSVGDocument(org.apache.fop.render.RendererContext,org.w3c.dom.Document)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/render/java2d/Java2DSVGHandler/renderSVGDocument(org.apache.fop.render.RendererContext,org.w3c.dom.Document)#org/apache/commons/logging/Log/isDebugEnabled()
org/apache/fop/render/java2d/Java2DSVGHandler/renderSVGDocument(org.apache.fop.render.RendererContext,org.w3c.dom.Document)#org/apache/fop/render/java2d/Java2DSVGHandler/getDocumentURI(org.w3c.dom.Document)
org/apache/fop/render/java2d/Java2DSVGHandler/renderSVGDocument(org.apache.fop.render.RendererContext,org.w3c.dom.Document)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/render/java2d/Java2DSVGHandler/renderSVGDocument(org.apache.fop.render.RendererContext,org.w3c.dom.Document)#java/awt/Graphics2D/setTransform(java.awt.geom.AffineTransform)
org/apache/fop/render/java2d/Java2DSVGHandler/renderSVGDocument(org.apache.fop.render.RendererContext,org.w3c.dom.Document)#java/awt/Graphics2D/transform(java.awt.geom.AffineTransform)
org/apache/fop/render/java2d/Java2DSVGHandler/renderSVGDocument(org.apache.fop.render.RendererContext,org.w3c.dom.Document)#org/apache/batik/gvt/GraphicsNode/paint(java.awt.Graphics2D)
org/apache/fop/render/java2d/Java2DSVGHandler/renderSVGDocument(org.apache.fop.render.RendererContext,org.w3c.dom.Document)#java/lang/StringBuilder/toString()
org/apache/fop/render/java2d/Java2DSVGHandler/renderSVGDocument(org.apache.fop.render.RendererContext,org.w3c.dom.Document)#java/awt/Graphics2D/getTransform()
org/apache/fop/render/java2d/Java2DSVGHandler/renderSVGDocument(org.apache.fop.render.RendererContext,org.w3c.dom.Document)#java/awt/Graphics2D/translate(double,double)
org/apache/fop/render/java2d/Java2DSVGHandler/renderSVGDocument(org.apache.fop.render.RendererContext,org.w3c.dom.Document)#org/apache/batik/bridge/BridgeContext/BridgeContext(org.apache.batik.bridge.UserAgent)
org/apache/fop/render/java2d/Java2DSVGHandler/renderSVGDocument(org.apache.fop.render.RendererContext,org.w3c.dom.Document)#org/apache/batik/bridge/BridgeContext/getDocumentSize()
org/apache/fop/render/java2d/Java2DSVGHandler/renderSVGDocument(org.apache.fop.render.RendererContext,org.w3c.dom.Document)#java/awt/geom/Dimension2D/getHeight()
org/apache/fop/render/java2d/Java2DSVGHandler/renderSVGDocument(org.apache.fop.render.RendererContext,org.w3c.dom.Document)#org/apache/batik/bridge/GVTBuilder/build(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Document)
org/apache/fop/render/java2d/Java2DSVGHandler/renderSVGDocument(org.apache.fop.render.RendererContext,org.w3c.dom.Document)#java/awt/geom/Dimension2D/getWidth()
org/apache/fop/render/java2d/Java2DSVGHandler/renderSVGDocument(org.apache.fop.render.RendererContext,org.w3c.dom.Document)#org/apache/fop/svg/SVGEventProducer$Provider/get(org.apache.fop.events.EventBroadcaster)
org/apache/fop/render/java2d/Java2DSVGHandler/renderSVGDocument(org.apache.fop.render.RendererContext,org.w3c.dom.Document)#java/awt/geom/AffineTransform/isIdentity()
org/apache/fop/render/java2d/Java2DSVGHandler/renderSVGDocument(org.apache.fop.render.RendererContext,org.w3c.dom.Document)#java/awt/geom/AffineTransform/AffineTransform()
org/apache/fop/render/java2d/Java2DSVGHandler/renderSVGDocument(org.apache.fop.render.RendererContext,org.w3c.dom.Document)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/fop/render/java2d/Java2DSVGHandler/renderSVGDocument(org.apache.fop.render.RendererContext,org.w3c.dom.Document)#org/apache/batik/bridge/GVTBuilder/GVTBuilder()
org/apache/fop/render/ps/PSSVGHandler/getPSInfo(org.apache.fop.render.RendererContext)#java/lang/Integer/intValue()
org/apache/fop/render/ps/PSSVGHandler/getPSInfo(org.apache.fop.render.RendererContext)#org/apache/fop/render/ps/PSSVGHandler$PSInfo/access$602(org.apache.fop.render.ps.PSSVGHandler$PSInfo,org.apache.avalon.framework.configuration.Configuration)
org/apache/fop/render/ps/PSSVGHandler/getPSInfo(org.apache.fop.render.RendererContext)#org/apache/fop/render/ps/PSSVGHandler$PSInfo/access$202(org.apache.fop.render.ps.PSSVGHandler$PSInfo,int)
org/apache/fop/render/ps/PSSVGHandler/getPSInfo(org.apache.fop.render.RendererContext)#org/apache/fop/render/ps/PSSVGHandler$PSInfo/access$302(org.apache.fop.render.ps.PSSVGHandler$PSInfo,int)
org/apache/fop/render/ps/PSSVGHandler/getPSInfo(org.apache.fop.render.RendererContext)#org/apache/fop/render/ps/PSSVGHandler$PSInfo/access$402(org.apache.fop.render.ps.PSSVGHandler$PSInfo,int)
org/apache/fop/render/ps/PSSVGHandler/getPSInfo(org.apache.fop.render.RendererContext)#org/apache/fop/render/ps/PSSVGHandler$PSInfo/access$002(org.apache.fop.render.ps.PSSVGHandler$PSInfo,org.apache.xmlgraphics.ps.PSGenerator)
org/apache/fop/render/ps/PSSVGHandler/getPSInfo(org.apache.fop.render.RendererContext)#org/apache/fop/render/ps/PSSVGHandler$PSInfo/access$102(org.apache.fop.render.ps.PSSVGHandler$PSInfo,org.apache.fop.fonts.FontInfo)
org/apache/fop/render/ps/PSSVGHandler/getPSInfo(org.apache.fop.render.RendererContext)#org/apache/fop/render/ps/PSSVGHandler$PSInfo/PSInfo()
org/apache/fop/render/ps/PSSVGHandler/getPSInfo(org.apache.fop.render.RendererContext)#org/apache/fop/render/ps/PSSVGHandler$PSInfo/access$502(org.apache.fop.render.ps.PSSVGHandler$PSInfo,int)
org/apache/fop/render/ps/PSSVGHandler/renderSVGDocument(org.apache.fop.render.RendererContext,org.w3c.dom.Document)#org/apache/fop/render/ps/PSSVGHandler$PSInfo/getWidth()
org/apache/fop/render/ps/PSSVGHandler/renderSVGDocument(org.apache.fop.render.RendererContext,org.w3c.dom.Document)#org/apache/xmlgraphics/ps/PSGenerator/getCurrentState()
org/apache/fop/render/ps/PSSVGHandler/renderSVGDocument(org.apache.fop.render.RendererContext,org.w3c.dom.Document)#org/apache/fop/render/ps/PSSVGHandler$PSInfo/access$100(org.apache.fop.render.ps.PSSVGHandler$PSInfo)
org/apache/fop/render/ps/PSSVGHandler/renderSVGDocument(org.apache.fop.render.RendererContext,org.w3c.dom.Document)#org/apache/xmlgraphics/java2d/ps/PSGraphics2D/setGraphicContext(org.apache.xmlgraphics.java2d.GraphicContext)
org/apache/fop/render/ps/PSSVGHandler/renderSVGDocument(org.apache.fop.render.RendererContext,org.w3c.dom.Document)#org/apache/fop/render/ps/PSSVGHandler/getDocumentURI(org.w3c.dom.Document)
org/apache/fop/render/ps/PSSVGHandler/renderSVGDocument(org.apache.fop.render.RendererContext,org.w3c.dom.Document)#java/lang/AssertionError/AssertionError()
org/apache/fop/render/ps/PSSVGHandler/renderSVGDocument(org.apache.fop.render.RendererContext,org.w3c.dom.Document)#org/apache/fop/render/ps/PSSVGHandler$PSInfo/getHeight()
org/apache/fop/render/ps/PSSVGHandler/renderSVGDocument(org.apache.fop.render.RendererContext,org.w3c.dom.Document)#org/apache/xmlgraphics/ps/PSGenerator/concatMatrix(double,double,double,double,double,double)
org/apache/fop/render/ps/PSSVGHandler/renderSVGDocument(org.apache.fop.render.RendererContext,org.w3c.dom.Document)#org/apache/fop/render/ps/PSSVGHandler$PSInfo/access$000(org.apache.fop.render.ps.PSSVGHandler$PSInfo)
org/apache/fop/render/ps/PSSVGHandler/renderSVGDocument(org.apache.fop.render.RendererContext,org.w3c.dom.Document)#org/apache/avalon/framework/configuration/Configuration/getValueAsBoolean(boolean)
org/apache/fop/render/ps/PSSVGHandler/renderSVGDocument(org.apache.fop.render.RendererContext,org.w3c.dom.Document)#java/awt/geom/AffineTransform/translate(double,double)
org/apache/fop/render/ps/PSSVGHandler/renderSVGDocument(org.apache.fop.render.RendererContext,org.w3c.dom.Document)#org/apache/fop/render/ps/PSSVGHandler$PSInfo/getHandlerConfiguration()
org/apache/fop/render/ps/PSSVGHandler/renderSVGDocument(org.apache.fop.render.RendererContext,org.w3c.dom.Document)#org/apache/fop/render/ps/PSSVGHandler$PSInfo/access$400(org.apache.fop.render.ps.PSSVGHandler$PSInfo)
org/apache/fop/render/ps/PSSVGHandler/renderSVGDocument(org.apache.fop.render.RendererContext,org.w3c.dom.Document)#org/apache/fop/render/ps/PSSVGHandler$PSInfo/access$500(org.apache.fop.render.ps.PSSVGHandler$PSInfo)
org/apache/fop/render/ps/PSSVGHandler/renderSVGDocument(org.apache.fop.render.RendererContext,org.w3c.dom.Document)#org/apache/batik/bridge/BridgeContext/getDocumentSize()
org/apache/fop/render/ps/PSSVGHandler/renderSVGDocument(org.apache.fop.render.RendererContext,org.w3c.dom.Document)#java/awt/geom/Dimension2D/getHeight()
org/apache/fop/render/ps/PSSVGHandler/renderSVGDocument(org.apache.fop.render.RendererContext,org.w3c.dom.Document)#org/apache/xmlgraphics/ps/PSGenerator/writeln(java.lang.String)
org/apache/fop/render/ps/PSSVGHandler/renderSVGDocument(org.apache.fop.render.RendererContext,org.w3c.dom.Document)#org/apache/xmlgraphics/ps/PSGenerator/commentln(java.lang.String)
org/apache/fop/render/ps/PSSVGHandler/renderSVGDocument(org.apache.fop.render.RendererContext,org.w3c.dom.Document)#org/apache/batik/bridge/GVTBuilder/build(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Document)
org/apache/fop/render/ps/PSSVGHandler/renderSVGDocument(org.apache.fop.render.RendererContext,org.w3c.dom.Document)#org/apache/xmlgraphics/java2d/ps/PSGraphics2D/PSGraphics2D(boolean,org.apache.xmlgraphics.ps.PSGenerator)
org/apache/fop/render/ps/PSSVGHandler/renderSVGDocument(org.apache.fop.render.RendererContext,org.w3c.dom.Document)#org/apache/xmlgraphics/ps/PSState/concatMatrix(java.awt.geom.AffineTransform)
org/apache/fop/render/ps/PSSVGHandler/renderSVGDocument(org.apache.fop.render.RendererContext,org.w3c.dom.Document)#java/awt/geom/Dimension2D/getWidth()
org/apache/fop/render/ps/PSSVGHandler/renderSVGDocument(org.apache.fop.render.RendererContext,org.w3c.dom.Document)#org/apache/fop/svg/SVGEventProducer$Provider/get(org.apache.fop.events.EventBroadcaster)
org/apache/fop/render/ps/PSSVGHandler/renderSVGDocument(org.apache.fop.render.RendererContext,org.w3c.dom.Document)#org/apache/xmlgraphics/ps/PSGenerator/defineRect(double,double,double,double)
org/apache/fop/render/ps/PSSVGHandler/renderSVGDocument(org.apache.fop.render.RendererContext,org.w3c.dom.Document)#java/awt/geom/AffineTransform/AffineTransform()
org/apache/fop/render/ps/PSSVGHandler/renderSVGDocument(org.apache.fop.render.RendererContext,org.w3c.dom.Document)#org/apache/xmlgraphics/java2d/GraphicContext/GraphicContext()
org/apache/fop/render/ps/PSSVGHandler/renderSVGDocument(org.apache.fop.render.RendererContext,org.w3c.dom.Document)#org/apache/batik/bridge/GVTBuilder/GVTBuilder()
org/apache/fop/render/ps/PSSVGHandler/renderSVGDocument(org.apache.fop.render.RendererContext,org.w3c.dom.Document)#org/apache/xmlgraphics/ps/PSGenerator/restoreGraphicsState()
org/apache/fop/render/ps/PSSVGHandler/renderSVGDocument(org.apache.fop.render.RendererContext,org.w3c.dom.Document)#org/apache/avalon/framework/configuration/Configuration/getChild(java.lang.String,boolean)
org/apache/fop/render/ps/PSSVGHandler/renderSVGDocument(org.apache.fop.render.RendererContext,org.w3c.dom.Document)#org/apache/batik/gvt/GraphicsNode/paint(java.awt.Graphics2D)
org/apache/fop/render/ps/PSSVGHandler/renderSVGDocument(org.apache.fop.render.RendererContext,org.w3c.dom.Document)#org/apache/xmlgraphics/ps/PSGenerator/saveGraphicsState()
org/apache/fop/pdf/ObjectStream/outputRawStreamData(java.io.OutputStream)#java/io/ByteArrayOutputStream/writeTo(java.io.OutputStream)
org/apache/fop/pdf/ObjectStream/outputRawStreamData(java.io.OutputStream)#java/util/Iterator/next()
org/apache/fop/pdf/ObjectStream/outputRawStreamData(java.io.OutputStream)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/pdf/ObjectStream/outputRawStreamData(java.io.OutputStream)#java/lang/StringBuilder/append(char)
org/apache/fop/pdf/ObjectStream/outputRawStreamData(java.io.OutputStream)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/fop/pdf/ObjectStream/outputRawStreamData(java.io.OutputStream)#java/util/List/iterator()
org/apache/fop/pdf/ObjectStream/outputRawStreamData(java.io.OutputStream)#java/io/ByteArrayOutputStream/ByteArrayOutputStream()
org/apache/fop/pdf/ObjectStream/outputRawStreamData(java.io.OutputStream)#java/io/OutputStream/write(byte[])
org/apache/fop/pdf/ObjectStream/outputRawStreamData(java.io.OutputStream)#java/lang/StringBuilder/toString()
org/apache/fop/pdf/ObjectStream/outputRawStreamData(java.io.OutputStream)#java/util/Iterator/hasNext()
org/apache/fop/pdf/ObjectStream/outputRawStreamData(java.io.OutputStream)#java/lang/StringBuilder/append(int)
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfLeader/writeRtfContent()#org/apache/fop/render/rtf/rtflib/rtfdoc/RtfLeader/writeGroupMark(boolean)
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfLeader/writeRtfContent()#java/lang/Object/toString()
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfLeader/writeRtfContent()#java/util/Iterator/hasNext()
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfLeader/writeRtfContent()#org/apache/fop/render/rtf/rtflib/rtfdoc/RtfContainer/writeAttributes(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes,java.lang.String[])
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfLeader/writeRtfContent()#java/lang/StringBuilder/append(int)
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfLeader/writeRtfContent()#java/util/Iterator/next()
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfLeader/writeRtfContent()#org/apache/fop/render/rtf/rtflib/rtfdoc/RtfLeader/writeAttributes(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes,java.lang.String[])
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfLeader/writeRtfContent()#java/lang/Integer/parseInt(java.lang.String)
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfLeader/writeRtfContent()#java/lang/StringBuilder/toString()
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfLeader/writeRtfContent()#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfLeader/writeRtfContent()#java/lang/String/equals(java.lang.Object)
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfLeader/writeRtfContent()#org/apache/fop/render/rtf/rtflib/rtfdoc/RtfLeader/writeControlWord(java.lang.String)
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfLeader/writeRtfContent()#java/lang/StringBuilder/StringBuilder()
org/apache/fop/tools/TestConverter/runTests(java.lang.String,java.lang.String,java.lang.String)#org/w3c/dom/Node/getNodeValue()
org/apache/fop/tools/TestConverter/runTests(java.lang.String,java.lang.String,java.lang.String)#org/w3c/dom/NodeList/getLength()
org/apache/fop/tools/TestConverter/runTests(java.lang.String,java.lang.String,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/tools/TestConverter/runTests(java.lang.String,java.lang.String,java.lang.String)#org/w3c/dom/Node/getNodeName()
org/apache/fop/tools/TestConverter/runTests(java.lang.String,java.lang.String,java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/tools/TestConverter/runTests(java.lang.String,java.lang.String,java.lang.String)#javax/xml/parsers/DocumentBuilderFactory/newInstance()
org/apache/fop/tools/TestConverter/runTests(java.lang.String,java.lang.String,java.lang.String)#java/io/File/mkdirs()
org/apache/fop/tools/TestConverter/runTests(java.lang.String,java.lang.String,java.lang.String)#org/w3c/dom/Node/getChildNodes()
org/apache/fop/tools/TestConverter/runTests(java.lang.String,java.lang.String,java.lang.String)#org/w3c/dom/NodeList/item(int)
org/apache/fop/tools/TestConverter/runTests(java.lang.String,java.lang.String,java.lang.String)#org/w3c/dom/Node/getAttributes()
org/apache/fop/tools/TestConverter/runTests(java.lang.String,java.lang.String,java.lang.String)#javax/xml/parsers/DocumentBuilder/parse(java.io.File)
org/apache/fop/tools/TestConverter/runTests(java.lang.String,java.lang.String,java.lang.String)#org/apache/commons/logging/impl/SimpleLog/debug(java.lang.Object)
org/apache/fop/tools/TestConverter/runTests(java.lang.String,java.lang.String,java.lang.String)#org/w3c/dom/Node/hasAttributes()
org/apache/fop/tools/TestConverter/runTests(java.lang.String,java.lang.String,java.lang.String)#java/lang/StringBuilder/toString()
org/apache/fop/tools/TestConverter/runTests(java.lang.String,java.lang.String,java.lang.String)#org/w3c/dom/Document/getChildNodes()
org/apache/fop/tools/TestConverter/runTests(java.lang.String,java.lang.String,java.lang.String)#java/io/File/File(java.lang.String)
org/apache/fop/tools/TestConverter/runTests(java.lang.String,java.lang.String,java.lang.String)#java/lang/String/equals(java.lang.Object)
org/apache/fop/tools/TestConverter/runTests(java.lang.String,java.lang.String,java.lang.String)#org/apache/commons/logging/impl/SimpleLog/error(java.lang.Object,java.lang.Throwable)
org/apache/fop/tools/TestConverter/runTests(java.lang.String,java.lang.String,java.lang.String)#javax/xml/parsers/DocumentBuilderFactory/newDocumentBuilder()
org/apache/fop/tools/TestConverter/runTests(java.lang.String,java.lang.String,java.lang.String)#org/w3c/dom/Document/getDocumentElement()
org/apache/fop/tools/TestConverter/runTests(java.lang.String,java.lang.String,java.lang.String)#org/w3c/dom/NamedNodeMap/getNamedItem(java.lang.String)
org/apache/fop/tools/TestConverter/runTestCase(org.w3c.dom.Node)#org/w3c/dom/Node/getNodeValue()
org/apache/fop/tools/TestConverter/runTestCase(org.w3c.dom.Node)#org/w3c/dom/NodeList/getLength()
org/apache/fop/tools/TestConverter/runTestCase(org.w3c.dom.Node)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/tools/TestConverter/runTestCase(org.w3c.dom.Node)#org/w3c/dom/Node/getNodeName()
org/apache/fop/tools/TestConverter/runTestCase(org.w3c.dom.Node)#java/lang/String/equals(java.lang.Object)
org/apache/fop/tools/TestConverter/runTestCase(org.w3c.dom.Node)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/tools/TestConverter/runTestCase(org.w3c.dom.Node)#org/w3c/dom/Node/getChildNodes()
org/apache/fop/tools/TestConverter/runTestCase(org.w3c.dom.Node)#org/w3c/dom/NodeList/item(int)
org/apache/fop/tools/TestConverter/runTestCase(org.w3c.dom.Node)#org/w3c/dom/Node/getAttributes()
org/apache/fop/tools/TestConverter/runTestCase(org.w3c.dom.Node)#org/w3c/dom/NamedNodeMap/getNamedItem(java.lang.String)
org/apache/fop/tools/TestConverter/runTestCase(org.w3c.dom.Node)#org/apache/commons/logging/impl/SimpleLog/debug(java.lang.Object)
org/apache/fop/tools/TestConverter/runTestCase(org.w3c.dom.Node)#org/w3c/dom/Node/hasAttributes()
org/apache/fop/tools/TestConverter/runTestCase(org.w3c.dom.Node)#java/lang/StringBuilder/toString()
org/apache/fop/tools/TestConverter/runTest(org.w3c.dom.Node,org.w3c.dom.Node)#java/io/File/getName()
org/apache/fop/tools/TestConverter/runTest(org.w3c.dom.Node,org.w3c.dom.Node)#java/io/File/File(java.io.File,java.lang.String)
org/apache/fop/tools/TestConverter/runTest(org.w3c.dom.Node,org.w3c.dom.Node)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/tools/TestConverter/runTest(org.w3c.dom.Node,org.w3c.dom.Node)#java/lang/String/length()
org/apache/fop/tools/TestConverter/runTest(org.w3c.dom.Node,org.w3c.dom.Node)#java/io/File/File(java.lang.String)
org/apache/fop/tools/TestConverter/runTest(org.w3c.dom.Node,org.w3c.dom.Node)#java/lang/Boolean/valueOf(boolean)
org/apache/fop/tools/TestConverter/runTest(org.w3c.dom.Node,org.w3c.dom.Node)#java/io/File/mkdirs()
org/apache/fop/tools/TestConverter/runTest(org.w3c.dom.Node,org.w3c.dom.Node)#org/apache/commons/logging/impl/SimpleLog/debug(java.lang.Object)
org/apache/fop/tools/TestConverter/runTest(org.w3c.dom.Node,org.w3c.dom.Node)#java/io/FileOutputStream/FileOutputStream(java.io.File)
org/apache/fop/tools/TestConverter/runTest(org.w3c.dom.Node,org.w3c.dom.Node)#org/w3c/dom/Node/getNodeValue()
org/apache/fop/tools/TestConverter/runTest(org.w3c.dom.Node,org.w3c.dom.Node)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/fop/tools/TestConverter/runTest(org.w3c.dom.Node,org.w3c.dom.Node)#java/lang/String/equals(java.lang.Object)
org/apache/fop/tools/TestConverter/runTest(org.w3c.dom.Node,org.w3c.dom.Node)#org/apache/commons/logging/impl/SimpleLog/error(java.lang.Object,java.lang.Throwable)
org/apache/fop/tools/TestConverter/runTest(org.w3c.dom.Node,org.w3c.dom.Node)#java/lang/String/substring(int,int)
org/apache/fop/tools/TestConverter/runTest(org.w3c.dom.Node,org.w3c.dom.Node)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/tools/TestConverter/runTest(org.w3c.dom.Node,org.w3c.dom.Node)#java/io/File/toURI()
org/apache/fop/tools/TestConverter/runTest(org.w3c.dom.Node,org.w3c.dom.Node)#org/apache/commons/io/IOUtils/closeQuietly(java.io.OutputStream)
org/apache/fop/tools/TestConverter/runTest(org.w3c.dom.Node,org.w3c.dom.Node)#java/io/BufferedOutputStream/BufferedOutputStream(java.io.OutputStream)
org/apache/fop/tools/TestConverter/runTest(org.w3c.dom.Node,org.w3c.dom.Node)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/fop/tools/TestConverter/runTest(org.w3c.dom.Node,org.w3c.dom.Node)#org/w3c/dom/Node/getAttributes()
org/apache/fop/tools/TestConverter/runTest(org.w3c.dom.Node,org.w3c.dom.Node)#org/w3c/dom/NamedNodeMap/getNamedItem(java.lang.String)
org/apache/fop/tools/TestConverter/runTest(org.w3c.dom.Node,org.w3c.dom.Node)#java/lang/StringBuilder/toString()
org/apache/fop/tools/TestConverter/runTest(org.w3c.dom.Node,org.w3c.dom.Node)#java/io/File/getParentFile()
org/apache/fop/tools/TestConverter/runTest(org.w3c.dom.Node,org.w3c.dom.Node)#java/lang/String/endsWith(java.lang.String)
org/apache/fop/render/afp/AFPImageHandlerRenderedImage/RenderedImageEncoder/encodeInvertedBilevel(org.apache.xmlgraphics.ps.ImageEncodingHelper,org.apache.fop.afp.AFPImageObjectInfo,java.io.OutputStream)#java/awt/image/RenderedImage/getSampleModel()
org/apache/fop/render/afp/AFPImageHandlerRenderedImage/RenderedImageEncoder/encodeInvertedBilevel(org.apache.xmlgraphics.ps.ImageEncodingHelper,org.apache.fop.afp.AFPImageObjectInfo,java.io.OutputStream)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/fop/render/afp/AFPImageHandlerRenderedImage/RenderedImageEncoder/encodeInvertedBilevel(org.apache.xmlgraphics.ps.ImageEncodingHelper,org.apache.fop.afp.AFPImageObjectInfo,java.io.OutputStream)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/apache/fop/render/afp/AFPImageHandlerRenderedImage/RenderedImageEncoder/encodeInvertedBilevel(org.apache.xmlgraphics.ps.ImageEncodingHelper,org.apache.fop.afp.AFPImageObjectInfo,java.io.OutputStream)#java/lang/Object/equals(java.lang.Object)
org/apache/fop/render/afp/AFPImageHandlerRenderedImage/RenderedImageEncoder/encodeInvertedBilevel(org.apache.xmlgraphics.ps.ImageEncodingHelper,org.apache.fop.afp.AFPImageObjectInfo,java.io.OutputStream)#java/awt/image/RenderedImage/getWidth()
org/apache/fop/render/afp/AFPImageHandlerRenderedImage/RenderedImageEncoder/encodeInvertedBilevel(org.apache.xmlgraphics.ps.ImageEncodingHelper,org.apache.fop.afp.AFPImageObjectInfo,java.io.OutputStream)#java/awt/image/MultiPixelPackedSampleModel/MultiPixelPackedSampleModel(int,int,int,int)
org/apache/fop/render/afp/AFPImageHandlerRenderedImage/RenderedImageEncoder/encodeInvertedBilevel(org.apache.xmlgraphics.ps.ImageEncodingHelper,org.apache.fop.afp.AFPImageObjectInfo,java.io.OutputStream)#java/awt/image/RenderedImage/getNumXTiles()
org/apache/fop/render/afp/AFPImageHandlerRenderedImage/RenderedImageEncoder/encodeInvertedBilevel(org.apache.xmlgraphics.ps.ImageEncodingHelper,org.apache.fop.afp.AFPImageObjectInfo,java.io.OutputStream)#java/io/OutputStream/write(byte[],int,int)
org/apache/fop/render/afp/AFPImageHandlerRenderedImage/RenderedImageEncoder/encodeInvertedBilevel(org.apache.xmlgraphics.ps.ImageEncodingHelper,org.apache.fop.afp.AFPImageObjectInfo,java.io.OutputStream)#java/awt/image/RenderedImage/getTile(int,int)
org/apache/fop/render/afp/AFPImageHandlerRenderedImage/RenderedImageEncoder/encodeInvertedBilevel(org.apache.xmlgraphics.ps.ImageEncodingHelper,org.apache.fop.afp.AFPImageObjectInfo,java.io.OutputStream)#java/awt/image/DataBufferByte/getData()
org/apache/fop/render/afp/AFPImageHandlerRenderedImage/RenderedImageEncoder/encodeInvertedBilevel(org.apache.xmlgraphics.ps.ImageEncodingHelper,org.apache.fop.afp.AFPImageObjectInfo,java.io.OutputStream)#java/awt/image/RenderedImage/getNumYTiles()
org/apache/fop/render/afp/AFPImageHandlerRenderedImage/RenderedImageEncoder/encodeInvertedBilevel(org.apache.xmlgraphics.ps.ImageEncodingHelper,org.apache.fop.afp.AFPImageObjectInfo,java.io.OutputStream)#java/lang/Math/min(int,int)
org/apache/fop/render/afp/AFPImageHandlerRenderedImage/RenderedImageEncoder/encodeInvertedBilevel(org.apache.xmlgraphics.ps.ImageEncodingHelper,org.apache.fop.afp.AFPImageObjectInfo,java.io.OutputStream)#org/apache/xmlgraphics/ps/ImageEncodingHelper/getImage()
org/apache/fop/render/afp/AFPImageHandlerRenderedImage/RenderedImageEncoder/encodeInvertedBilevel(org.apache.xmlgraphics.ps.ImageEncodingHelper,org.apache.fop.afp.AFPImageObjectInfo,java.io.OutputStream)#java/awt/image/RenderedImage/getHeight()
org/apache/fop/render/afp/AFPImageHandlerRenderedImage/RenderedImageEncoder/encodeInvertedBilevel(org.apache.xmlgraphics.ps.ImageEncodingHelper,org.apache.fop.afp.AFPImageObjectInfo,java.io.OutputStream)#java/awt/image/Raster/getDataBuffer()
org/apache/fop/render/afp/AFPImageHandlerRenderedImage/RenderedImageEncoder/encodeImage(org.apache.fop.afp.AFPImageObjectInfo,org.apache.fop.afp.AFPPaintingState)#org/apache/fop/render/afp/AFPImageHandlerRenderedImage$RenderedImageEncoder$FunctionSet/equals(java.lang.Object)
org/apache/fop/render/afp/AFPImageHandlerRenderedImage/RenderedImageEncoder/encodeImage(org.apache.fop.afp.AFPImageObjectInfo,org.apache.fop.afp.AFPPaintingState)#org/apache/fop/render/afp/AFPImageHandlerRenderedImage$RenderedImageEncoder/encodeViaRGB(java.awt.image.RenderedImage,org.apache.fop.afp.AFPImageObjectInfo,org.apache.fop.afp.AFPPaintingState,java.io.ByteArrayOutputStream)
org/apache/fop/render/afp/AFPImageHandlerRenderedImage/RenderedImageEncoder/encodeImage(org.apache.fop.afp.AFPImageObjectInfo,org.apache.fop.afp.AFPPaintingState)#org/apache/xmlgraphics/ps/ImageEncodingHelper/encode(java.io.OutputStream)
org/apache/fop/render/afp/AFPImageHandlerRenderedImage/RenderedImageEncoder/encodeImage(org.apache.fop.afp.AFPImageObjectInfo,org.apache.fop.afp.AFPPaintingState)#org/apache/xmlgraphics/ps/ImageEncodingHelper/ImageEncodingHelper(java.awt.image.RenderedImage,boolean)
org/apache/fop/render/afp/AFPImageHandlerRenderedImage/RenderedImageEncoder/encodeImage(org.apache.fop.afp.AFPImageObjectInfo,org.apache.fop.afp.AFPPaintingState)#java/io/ByteArrayOutputStream/toByteArray()
org/apache/fop/render/afp/AFPImageHandlerRenderedImage/RenderedImageEncoder/encodeImage(org.apache.fop.afp.AFPImageObjectInfo,org.apache.fop.afp.AFPPaintingState)#java/awt/image/RenderedImage/getColorModel()
org/apache/fop/render/afp/AFPImageHandlerRenderedImage/RenderedImageEncoder/encodeImage(org.apache.fop.afp.AFPImageObjectInfo,org.apache.fop.afp.AFPPaintingState)#java/io/ByteArrayOutputStream/ByteArrayOutputStream()
org/apache/fop/render/afp/AFPImageHandlerRenderedImage/RenderedImageEncoder/encodeImage(org.apache.fop.afp.AFPImageObjectInfo,org.apache.fop.afp.AFPPaintingState)#java/lang/StringBuilder/append(float)
org/apache/fop/render/afp/AFPImageHandlerRenderedImage/RenderedImageEncoder/encodeImage(org.apache.fop.afp.AFPImageObjectInfo,org.apache.fop.afp.AFPPaintingState)#java/lang/StringBuilder/toString()
org/apache/fop/render/afp/AFPImageHandlerRenderedImage/RenderedImageEncoder/encodeImage(org.apache.fop.afp.AFPImageObjectInfo,org.apache.fop.afp.AFPPaintingState)#java/awt/image/ColorModel/getPixelSize()
org/apache/fop/render/afp/AFPImageHandlerRenderedImage/RenderedImageEncoder/encodeImage(org.apache.fop.afp.AFPImageObjectInfo,org.apache.fop.afp.AFPPaintingState)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/fop/render/afp/AFPImageHandlerRenderedImage/RenderedImageEncoder/encodeImage(org.apache.fop.afp.AFPImageObjectInfo,org.apache.fop.afp.AFPPaintingState)#org/apache/fop/render/afp/AFPImageHandlerRenderedImage$RenderedImageEncoder$FunctionSet/access$400(org.apache.fop.render.afp.AFPImageHandlerRenderedImage$RenderedImageEncoder$FunctionSet)
org/apache/fop/render/afp/AFPImageHandlerRenderedImage/RenderedImageEncoder/encodeImage(org.apache.fop.afp.AFPImageObjectInfo,org.apache.fop.afp.AFPPaintingState)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/render/afp/AFPImageHandlerRenderedImage/RenderedImageEncoder/encodeImage(org.apache.fop.afp.AFPImageObjectInfo,org.apache.fop.afp.AFPPaintingState)#org/apache/fop/render/afp/AFPImageHandlerRenderedImage$RenderedImageEncoder/encodeInvertedBilevel(org.apache.xmlgraphics.ps.ImageEncodingHelper,org.apache.fop.afp.AFPImageObjectInfo,java.io.OutputStream)
org/apache/fop/render/afp/AFPImageHandlerRenderedImage/RenderedImageEncoder/encodeImage(org.apache.fop.afp.AFPImageObjectInfo,org.apache.fop.afp.AFPPaintingState)#org/apache/xmlgraphics/image/loader/ImageSize/getDimensionPx()
org/apache/fop/render/afp/AFPImageHandlerRenderedImage/RenderedImageEncoder/encodeImage(org.apache.fop.afp.AFPImageObjectInfo,org.apache.fop.afp.AFPPaintingState)#org/apache/commons/logging/Log/isDebugEnabled()
org/apache/fop/render/afp/AFPImageHandlerRenderedImage/RenderedImageEncoder/encodeImage(org.apache.fop.afp.AFPImageObjectInfo,org.apache.fop.afp.AFPPaintingState)#org/apache/fop/render/afp/AFPImageHandlerRenderedImage$RenderedImageEncoder/encodeToBaselineDCT(java.awt.image.RenderedImage,float,int,java.io.OutputStream)
org/apache/fop/render/afp/AFPImageHandlerRenderedImage/RenderedImageEncoder/encodeImage(org.apache.fop.afp.AFPImageObjectInfo,org.apache.fop.afp.AFPPaintingState)#org/apache/fop/afp/AFPImageObjectInfo/setData(byte[])
org/apache/fop/render/afp/AFPImageHandlerRenderedImage/RenderedImageEncoder/encodeImage(org.apache.fop.afp.AFPImageObjectInfo,org.apache.fop.afp.AFPPaintingState)#org/apache/fop/afp/AFPImageObjectInfo/setCreatePageSegment(boolean)
org/apache/fop/render/afp/AFPImageHandlerRenderedImage/RenderedImageEncoder/encodeImage(org.apache.fop.afp.AFPImageObjectInfo,org.apache.fop.afp.AFPPaintingState)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/render/afp/AFPImageHandlerRenderedImage/RenderedImageEncoder/encodeImage(org.apache.fop.afp.AFPImageObjectInfo,org.apache.fop.afp.AFPPaintingState)#org/apache/xmlgraphics/ps/ImageEncodingHelper/getEncodedColorModel()
org/apache/fop/render/afp/AFPImageHandlerRenderedImage/RenderedImageEncoder/encodeImage(org.apache.fop.afp.AFPImageObjectInfo,org.apache.fop.afp.AFPPaintingState)#org/apache/commons/logging/Log/trace(java.lang.Object)
org/apache/fop/render/afp/AFPImageHandlerRenderedImage/RenderedImageEncoder/encodeImage(org.apache.fop.afp.AFPImageObjectInfo,org.apache.fop.afp.AFPPaintingState)#org/apache/xmlgraphics/image/loader/impl/ImageRendered/getRenderedImage()
org/apache/fop/render/afp/AFPImageHandlerRenderedImage/RenderedImageEncoder/encodeImage(org.apache.fop.afp.AFPImageObjectInfo,org.apache.fop.afp.AFPPaintingState)#java/awt/image/ColorModel/hasAlpha()
org/apache/fop/render/afp/AFPImageHandlerRenderedImage/RenderedImageEncoder/encodeImage(org.apache.fop.afp.AFPImageObjectInfo,org.apache.fop.afp.AFPPaintingState)#org/apache/fop/afp/AFPImageObjectInfo/setMimeType(java.lang.String)
org/apache/fop/render/afp/AFPImageHandlerRenderedImage/RenderedImageEncoder/encodeImage(org.apache.fop.afp.AFPImageObjectInfo,org.apache.fop.afp.AFPPaintingState)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/fop/render/afp/AFPImageHandlerRenderedImage/RenderedImageEncoder/encodeImage(org.apache.fop.afp.AFPImageObjectInfo,org.apache.fop.afp.AFPPaintingState)#org/apache/commons/logging/Log/isTraceEnabled()
org/apache/fop/render/afp/AFPImageHandlerRenderedImage/RenderedImageEncoder/encodeImage(org.apache.fop.afp.AFPImageObjectInfo,org.apache.fop.afp.AFPPaintingState)#java/lang/AssertionError/AssertionError()
org/apache/fop/render/afp/AFPImageHandlerRenderedImage/RenderedImageEncoder/prepareEncoding(org.apache.fop.afp.AFPImageObjectInfo,org.apache.fop.afp.AFPPaintingState)#org/apache/fop/afp/AFPImageObjectInfo/setDataHeightRes(int)
org/apache/fop/render/afp/AFPImageHandlerRenderedImage/RenderedImageEncoder/prepareEncoding(org.apache.fop.afp.AFPImageObjectInfo,org.apache.fop.afp.AFPPaintingState)#java/lang/Math/ceil(double)
org/apache/fop/render/afp/AFPImageHandlerRenderedImage/RenderedImageEncoder/prepareEncoding(org.apache.fop.afp.AFPImageObjectInfo,org.apache.fop.afp.AFPPaintingState)#java/lang/Math/round(double)
org/apache/fop/render/afp/AFPImageHandlerRenderedImage/RenderedImageEncoder/prepareEncoding(org.apache.fop.afp.AFPImageObjectInfo,org.apache.fop.afp.AFPPaintingState)#java/awt/image/RenderedImage/getWidth()
org/apache/fop/render/afp/AFPImageHandlerRenderedImage/RenderedImageEncoder/prepareEncoding(org.apache.fop.afp.AFPImageObjectInfo,org.apache.fop.afp.AFPPaintingState)#org/apache/xmlgraphics/image/loader/ImageInfo/getSize()
org/apache/fop/render/afp/AFPImageHandlerRenderedImage/RenderedImageEncoder/prepareEncoding(org.apache.fop.afp.AFPImageObjectInfo,org.apache.fop.afp.AFPPaintingState)#org/apache/xmlgraphics/image/loader/ImageSize/getHeightPx()
org/apache/fop/render/afp/AFPImageHandlerRenderedImage/RenderedImageEncoder/prepareEncoding(org.apache.fop.afp.AFPImageObjectInfo,org.apache.fop.afp.AFPPaintingState)#org/apache/xmlgraphics/image/loader/ImageSize/getWidthPx()
org/apache/fop/render/afp/AFPImageHandlerRenderedImage/RenderedImageEncoder/prepareEncoding(org.apache.fop.afp.AFPImageObjectInfo,org.apache.fop.afp.AFPPaintingState)#org/apache/xmlgraphics/image/loader/ImageSize/getDpiVertical()
org/apache/fop/render/afp/AFPImageHandlerRenderedImage/RenderedImageEncoder/prepareEncoding(org.apache.fop.afp.AFPImageObjectInfo,org.apache.fop.afp.AFPPaintingState)#java/awt/Dimension/getHeight()
org/apache/fop/render/afp/AFPImageHandlerRenderedImage/RenderedImageEncoder/prepareEncoding(org.apache.fop.afp.AFPImageObjectInfo,org.apache.fop.afp.AFPPaintingState)#org/apache/xmlgraphics/image/loader/ImageSize/setSizeInPixels(int,int)
org/apache/fop/render/afp/AFPImageHandlerRenderedImage/RenderedImageEncoder/prepareEncoding(org.apache.fop.afp.AFPImageObjectInfo,org.apache.fop.afp.AFPPaintingState)#org/apache/xmlgraphics/image/loader/ImageSize/getDpiHorizontal()
org/apache/fop/render/afp/AFPImageHandlerRenderedImage/RenderedImageEncoder/prepareEncoding(org.apache.fop.afp.AFPImageObjectInfo,org.apache.fop.afp.AFPPaintingState)#java/awt/Dimension/Dimension(int,int)
org/apache/fop/render/afp/AFPImageHandlerRenderedImage/RenderedImageEncoder/prepareEncoding(org.apache.fop.afp.AFPImageObjectInfo,org.apache.fop.afp.AFPPaintingState)#org/apache/fop/afp/AFPImageObjectInfo/setDataWidthRes(int)
org/apache/fop/render/afp/AFPImageHandlerRenderedImage/RenderedImageEncoder/prepareEncoding(org.apache.fop.afp.AFPImageObjectInfo,org.apache.fop.afp.AFPPaintingState)#org/apache/fop/afp/AFPImageObjectInfo/setDataWidth(int)
org/apache/fop/render/afp/AFPImageHandlerRenderedImage/RenderedImageEncoder/prepareEncoding(org.apache.fop.afp.AFPImageObjectInfo,org.apache.fop.afp.AFPPaintingState)#java/awt/Dimension/getWidth()
org/apache/fop/render/afp/AFPImageHandlerRenderedImage/RenderedImageEncoder/prepareEncoding(org.apache.fop.afp.AFPImageObjectInfo,org.apache.fop.afp.AFPPaintingState)#org/apache/xmlgraphics/image/loader/impl/ImageRendered/getRenderedImage()
org/apache/fop/render/afp/AFPImageHandlerRenderedImage/RenderedImageEncoder/prepareEncoding(org.apache.fop.afp.AFPImageObjectInfo,org.apache.fop.afp.AFPPaintingState)#org/apache/xmlgraphics/image/loader/impl/ImageRendered/getInfo()
org/apache/fop/render/afp/AFPImageHandlerRenderedImage/RenderedImageEncoder/prepareEncoding(org.apache.fop.afp.AFPImageObjectInfo,org.apache.fop.afp.AFPPaintingState)#org/apache/fop/afp/AFPImageObjectInfo/setDataHeight(int)
org/apache/fop/render/afp/AFPImageHandlerRenderedImage/RenderedImageEncoder/prepareEncoding(org.apache.fop.afp.AFPImageObjectInfo,org.apache.fop.afp.AFPPaintingState)#org/apache/fop/afp/AFPImageObjectInfo/getObjectAreaInfo()
org/apache/fop/render/afp/AFPImageHandlerRenderedImage/RenderedImageEncoder/prepareEncoding(org.apache.fop.afp.AFPImageObjectInfo,org.apache.fop.afp.AFPPaintingState)#org/apache/xmlgraphics/image/loader/ImageSize/ImageSize(int,int,double)
org/apache/fop/render/afp/AFPImageHandlerRenderedImage/RenderedImageEncoder/prepareEncoding(org.apache.fop.afp.AFPImageObjectInfo,org.apache.fop.afp.AFPPaintingState)#java/awt/image/RenderedImage/getHeight()
org/apache/fop/render/afp/AFPImageHandlerRenderedImage/RenderedImageEncoder/prepareEncoding(org.apache.fop.afp.AFPImageObjectInfo,org.apache.fop.afp.AFPPaintingState)#org/apache/xmlgraphics/util/UnitConv/mpt2px(double,int)
org/apache/fop/render/afp/AFPImageHandlerRenderedImage/RenderedImageEncoder/prepareEncoding(org.apache.fop.afp.AFPImageObjectInfo,org.apache.fop.afp.AFPPaintingState)#org/apache/fop/afp/AFPImageObjectInfo/getResourceInfo()
org/apache/fop/svg/font/FOPGVTGlyphVector/getGlyphLogicalBounds(int)#java/awt/geom/AffineTransform/scale(double,double)
org/apache/fop/svg/font/FOPGVTGlyphVector/getGlyphLogicalBounds(int)#org/apache/batik/gvt/font/GVTLineMetrics/getAscent()
org/apache/fop/svg/font/FOPGVTGlyphVector/getGlyphLogicalBounds(int)#java/awt/geom/Rectangle2D$Float/Float(float,float,float,float)
org/apache/fop/svg/font/FOPGVTGlyphVector/getGlyphLogicalBounds(int)#java/awt/geom/AffineTransform/concatenate(java.awt.geom.AffineTransform)
org/apache/fop/svg/font/FOPGVTGlyphVector/getGlyphLogicalBounds(int)#java/awt/geom/AffineTransform/getTranslateInstance(double,double)
org/apache/fop/svg/font/FOPGVTGlyphVector/getGlyphLogicalBounds(int)#java/awt/geom/Point2D/getY()
org/apache/fop/svg/font/FOPGVTGlyphVector/getGlyphLogicalBounds(int)#org/apache/batik/gvt/font/GVTLineMetrics/getDescent()
org/apache/fop/svg/font/FOPGVTGlyphVector/getGlyphLogicalBounds(int)#org/apache/batik/gvt/font/GVTGlyphMetrics/getHorizontalAdvance()
org/apache/fop/svg/font/FOPGVTGlyphVector/getGlyphLogicalBounds(int)#java/awt/geom/Point2D/getX()
org/apache/fop/svg/font/FOPGVTGlyphVector/getGlyphLogicalBounds(int)#java/awt/geom/AffineTransform/createTransformedShape(java.awt.Shape)
org/apache/fop/afp/ptoca/PtocaBuilder/setExtendedTextColor(java.awt.Color)#java/awt/Color/getBlue()
org/apache/fop/afp/ptoca/PtocaBuilder/setExtendedTextColor(java.awt.Color)#java/awt/Color/getRed()
org/apache/fop/afp/ptoca/PtocaBuilder/setExtendedTextColor(java.awt.Color)#java/awt/Color/getColorSpace()
org/apache/fop/afp/ptoca/PtocaBuilder/setExtendedTextColor(java.awt.Color)#java/awt/color/ColorSpace/getType()
org/apache/fop/afp/ptoca/PtocaBuilder/setExtendedTextColor(java.awt.Color)#java/awt/Color/getGreen()
org/apache/fop/afp/ptoca/PtocaBuilder/setExtendedTextColor(java.awt.Color)#java/lang/Math/round(float)
org/apache/fop/afp/ptoca/PtocaBuilder/setExtendedTextColor(java.awt.Color)#org/apache/xmlgraphics/java2d/color/ColorUtil/isSameColor(java.awt.Color,java.awt.Color)
org/apache/fop/afp/ptoca/PtocaBuilder/setExtendedTextColor(java.awt.Color)#org/apache/xmlgraphics/java2d/color/ColorWithAlternatives/getFirstAlternativeOfType(int)
org/apache/fop/afp/ptoca/PtocaBuilder/setExtendedTextColor(java.awt.Color)#java/lang/AssertionError/AssertionError()
org/apache/fop/afp/ptoca/PtocaBuilder/setExtendedTextColor(java.awt.Color)#java/awt/Color/getColorComponents(float[])
org/apache/fop/svg/PDFANode/paint(java.awt.Graphics2D)#java/awt/geom/Rectangle2D/getY()
org/apache/fop/svg/PDFANode/paint(java.awt.Graphics2D)#java/lang/Float/parseFloat(java.lang.String)
org/apache/fop/svg/PDFANode/paint(java.awt.Graphics2D)#java/lang/String/length()
org/apache/fop/svg/PDFANode/paint(java.awt.Graphics2D)#java/awt/geom/Rectangle2D/getWidth()
org/apache/fop/svg/PDFANode/paint(java.awt.Graphics2D)#java/lang/String/substring(int,int)
org/apache/fop/svg/PDFANode/paint(java.awt.Graphics2D)#java/awt/geom/Rectangle2D/getHeight()
org/apache/fop/svg/PDFANode/paint(java.awt.Graphics2D)#java/lang/String/startsWith(java.lang.String)
org/apache/fop/svg/PDFANode/paint(java.awt.Graphics2D)#org/apache/fop/svg/PDFANode/getOutline()
org/apache/fop/svg/PDFANode/paint(java.awt.Graphics2D)#java/util/StringTokenizer/hasMoreTokens()
org/apache/fop/svg/PDFANode/paint(java.awt.Graphics2D)#java/lang/StringBuilder/append(float)
org/apache/fop/svg/PDFANode/paint(java.awt.Graphics2D)#java/awt/geom/AffineTransform/createTransformedShape(java.awt.Shape)
org/apache/fop/svg/PDFANode/paint(java.awt.Graphics2D)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/svg/PDFANode/paint(java.awt.Graphics2D)#java/util/StringTokenizer/StringTokenizer(java.lang.String,java.lang.String)
org/apache/fop/svg/PDFANode/paint(java.awt.Graphics2D)#org/apache/batik/gvt/CompositeGraphicsNode/paint(java.awt.Graphics2D)
org/apache/fop/svg/PDFANode/paint(java.awt.Graphics2D)#java/lang/Exception/printStackTrace()
org/apache/fop/svg/PDFANode/paint(java.awt.Graphics2D)#org/apache/fop/svg/PDFANode/getBounds()
org/apache/fop/svg/PDFANode/paint(java.awt.Graphics2D)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/svg/PDFANode/paint(java.awt.Graphics2D)#java/awt/geom/Rectangle2D$Float/Float(float,float,float,float)
org/apache/fop/svg/PDFANode/paint(java.awt.Graphics2D)#java/awt/Shape/getBounds()
org/apache/fop/svg/PDFANode/paint(java.awt.Graphics2D)#java/util/StringTokenizer/nextToken()
org/apache/fop/svg/PDFANode/paint(java.awt.Graphics2D)#java/lang/StringBuilder/toString()
org/apache/fop/svg/PDFANode/paint(java.awt.Graphics2D)#java/awt/geom/Rectangle2D/getX()
org/apache/fop/complexscripts/fonts/GlyphTable/ChainedCoverageSequenceRule/toString()#org/apache/fop/complexscripts/fonts/GlyphTable$ChainedCoverageSequenceRule/getLookups()
org/apache/fop/complexscripts/fonts/GlyphTable/ChainedCoverageSequenceRule/toString()#java/lang/StringBuffer/toString()
org/apache/fop/complexscripts/fonts/GlyphTable/ChainedCoverageSequenceRule/toString()#java/lang/StringBuilder/StringBuilder()
org/apache/fop/complexscripts/fonts/GlyphTable/ChainedCoverageSequenceRule/toString()#org/apache/fop/complexscripts/fonts/GlyphTable$ChainedCoverageSequenceRule/getCoverages()
org/apache/fop/complexscripts/fonts/GlyphTable/ChainedCoverageSequenceRule/toString()#java/lang/StringBuffer/append(java.lang.String)
org/apache/fop/complexscripts/fonts/GlyphTable/ChainedCoverageSequenceRule/toString()#java/lang/StringBuffer/StringBuffer()
org/apache/fop/complexscripts/fonts/GlyphTable/ChainedCoverageSequenceRule/toString()#java/lang/StringBuilder/toString()
org/apache/fop/complexscripts/fonts/GlyphTable/ChainedCoverageSequenceRule/toString()#java/util/Arrays/toString(java.lang.Object[])
org/apache/fop/complexscripts/fonts/GlyphTable/ChainedCoverageSequenceRule/toString()#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/fonts/substitute/FontSubstitutions/adjustFontInfo(org.apache.fop.fonts.FontInfo)#java/util/Iterator/hasNext()
org/apache/fop/fonts/substitute/FontSubstitutions/adjustFontInfo(org.apache.fop.fonts.FontInfo)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/fonts/substitute/FontSubstitutions/adjustFontInfo(org.apache.fop.fonts.FontInfo)#java/util/Iterator/next()
org/apache/fop/fonts/substitute/FontSubstitutions/adjustFontInfo(org.apache.fop.fonts.FontInfo)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/fonts/substitute/FontSubstitutions/adjustFontInfo(org.apache.fop.fonts.FontInfo)#org/apache/commons/logging/Log/error(java.lang.Object)
org/apache/fop/fonts/substitute/FontSubstitutions/adjustFontInfo(org.apache.fop.fonts.FontInfo)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/fop/fonts/substitute/FontSubstitutions/adjustFontInfo(org.apache.fop.fonts.FontInfo)#java/util/List/iterator()
org/apache/fop/fonts/substitute/FontSubstitutions/adjustFontInfo(org.apache.fop.fonts.FontInfo)#java/lang/StringBuilder/toString()
org/apache/fop/fonts/substitute/FontSubstitutions/adjustFontInfo(org.apache.fop.fonts.FontInfo)#java/util/ArrayList/iterator()
org/apache/fop/render/pcl/PCLRendererConfig/PCLRendererConfigParser/configure(org.apache.avalon.framework.configuration.Configuration,org.apache.fop.render.pcl.PCLRendererConfig)#java/lang/String/equalsIgnoreCase(java.lang.String)
org/apache/fop/render/pcl/PCLRendererConfig/PCLRendererConfigParser/configure(org.apache.avalon.framework.configuration.Configuration,org.apache.fop.render.pcl.PCLRendererConfig)#org/apache/avalon/framework/configuration/Configuration/getValueAsBoolean(boolean)
org/apache/fop/render/pcl/PCLRendererConfig/PCLRendererConfigParser/configure(org.apache.avalon.framework.configuration.Configuration,org.apache.fop.render.pcl.PCLRendererConfig)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/render/pcl/PCLRendererConfig/PCLRendererConfigParser/configure(org.apache.avalon.framework.configuration.Configuration,org.apache.fop.render.pcl.PCLRendererConfig)#org/apache/fop/render/pcl/Java2DRendererOption/getName()
org/apache/fop/render/pcl/PCLRendererConfig/PCLRendererConfigParser/configure(org.apache.avalon.framework.configuration.Configuration,org.apache.fop.render.pcl.PCLRendererConfig)#org/apache/avalon/framework/configuration/Configuration/getValue(java.lang.String)
org/apache/fop/render/pcl/PCLRendererConfig/PCLRendererConfigParser/configure(org.apache.avalon.framework.configuration.Configuration,org.apache.fop.render.pcl.PCLRendererConfig)#org/apache/fop/render/pcl/PCLRenderingMode/getValueOf(java.lang.String)
org/apache/fop/render/pcl/PCLRendererConfig/PCLRendererConfigParser/configure(org.apache.avalon.framework.configuration.Configuration,org.apache.fop.render.pcl.PCLRendererConfig)#java/lang/Boolean/valueOf(boolean)
org/apache/fop/render/pcl/PCLRendererConfig/PCLRendererConfigParser/configure(org.apache.avalon.framework.configuration.Configuration,org.apache.fop.render.pcl.PCLRendererConfig)#org/apache/avalon/framework/configuration/Configuration/getChild(java.lang.String)
org/apache/fop/render/pcl/PCLRendererConfig/PCLRendererConfigParser/configure(org.apache.avalon.framework.configuration.Configuration,org.apache.fop.render.pcl.PCLRendererConfig)#java/lang/StringBuilder/toString()
org/apache/fop/render/pcl/PCLRendererConfig/PCLRendererConfigParser/configure(org.apache.avalon.framework.configuration.Configuration,org.apache.fop.render.pcl.PCLRendererConfig)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/render/pdf/PDFRendererConfig/ParserHelper/buildFilterMapFromConfiguration(org.apache.avalon.framework.configuration.Configuration)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/render/pdf/PDFRendererConfig/ParserHelper/buildFilterMapFromConfiguration(org.apache.avalon.framework.configuration.Configuration)#org/apache/avalon/framework/configuration/ConfigurationException/ConfigurationException(java.lang.String)
org/apache/fop/render/pdf/PDFRendererConfig/ParserHelper/buildFilterMapFromConfiguration(org.apache.avalon.framework.configuration.Configuration)#java/util/List/size()
org/apache/fop/render/pdf/PDFRendererConfig/ParserHelper/buildFilterMapFromConfiguration(org.apache.avalon.framework.configuration.Configuration)#org/apache/avalon/framework/configuration/Configuration/getChildren(java.lang.String)
org/apache/fop/render/pdf/PDFRendererConfig/ParserHelper/buildFilterMapFromConfiguration(org.apache.avalon.framework.configuration.Configuration)#java/util/HashMap/HashMap()
org/apache/fop/render/pdf/PDFRendererConfig/ParserHelper/buildFilterMapFromConfiguration(org.apache.avalon.framework.configuration.Configuration)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/render/pdf/PDFRendererConfig/ParserHelper/buildFilterMapFromConfiguration(org.apache.avalon.framework.configuration.Configuration)#java/util/List/add(java.lang.Object)
org/apache/fop/render/pdf/PDFRendererConfig/ParserHelper/buildFilterMapFromConfiguration(org.apache.avalon.framework.configuration.Configuration)#java/util/List/get(int)
org/apache/fop/render/pdf/PDFRendererConfig/ParserHelper/buildFilterMapFromConfiguration(org.apache.avalon.framework.configuration.Configuration)#java/lang/StringBuffer/StringBuffer(java.lang.String)
org/apache/fop/render/pdf/PDFRendererConfig/ParserHelper/buildFilterMapFromConfiguration(org.apache.avalon.framework.configuration.Configuration)#java/lang/StringBuffer/append(java.lang.String)
org/apache/fop/render/pdf/PDFRendererConfig/ParserHelper/buildFilterMapFromConfiguration(org.apache.avalon.framework.configuration.Configuration)#java/lang/StringBuilder/toString()
org/apache/fop/render/pdf/PDFRendererConfig/ParserHelper/buildFilterMapFromConfiguration(org.apache.avalon.framework.configuration.Configuration)#org/apache/fop/render/pdf/PDFRendererConfig$ParserHelper/put(org.apache.fop.render.pdf.PDFRendererOption,java.lang.Object)
org/apache/fop/render/pdf/PDFRendererConfig/ParserHelper/buildFilterMapFromConfiguration(org.apache.avalon.framework.configuration.Configuration)#org/apache/fop/render/pdf/PDFRendererOption/getName()
org/apache/fop/render/pdf/PDFRendererConfig/ParserHelper/buildFilterMapFromConfiguration(org.apache.avalon.framework.configuration.Configuration)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/fop/render/pdf/PDFRendererConfig/ParserHelper/buildFilterMapFromConfiguration(org.apache.avalon.framework.configuration.Configuration)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/fop/render/pdf/PDFRendererConfig/ParserHelper/buildFilterMapFromConfiguration(org.apache.avalon.framework.configuration.Configuration)#java/util/ArrayList/ArrayList()
org/apache/fop/render/pdf/PDFRendererConfig/ParserHelper/buildFilterMapFromConfiguration(org.apache.avalon.framework.configuration.Configuration)#java/util/List/isEmpty()
org/apache/fop/render/pdf/PDFRendererConfig/ParserHelper/buildFilterMapFromConfiguration(org.apache.avalon.framework.configuration.Configuration)#org/apache/commons/logging/Log/isDebugEnabled()
org/apache/fop/render/pdf/PDFRendererConfig/ParserHelper/buildFilterMapFromConfiguration(org.apache.avalon.framework.configuration.Configuration)#java/util/Map/get(java.lang.Object)
org/apache/fop/render/pdf/PDFRendererConfig/ParserHelper/buildFilterMapFromConfiguration(org.apache.avalon.framework.configuration.Configuration)#java/lang/StringBuffer/toString()
org/apache/fop/render/pdf/PDFRendererConfig/ParserHelper/buildFilterMapFromConfiguration(org.apache.avalon.framework.configuration.Configuration)#org/apache/avalon/framework/configuration/Configuration/getValue()
org/apache/fop/render/pdf/PDFRendererConfig/ParserHelper/buildFilterMapFromConfiguration(org.apache.avalon.framework.configuration.Configuration)#org/apache/avalon/framework/configuration/Configuration/getAttribute(java.lang.String,java.lang.String)
org/apache/fop/fonts/type1/AFMParser/StartFontMetrics/parse(java.lang.String,int,java.util.Stack)#java/io/IOException/IOException(java.lang.String)
org/apache/fop/fonts/type1/AFMParser/StartFontMetrics/parse(java.lang.String,int,java.util.Stack)#org/apache/fop/fonts/type1/AFMParser$StartFontMetrics/findValue(java.lang.String,int)
org/apache/fop/fonts/type1/AFMParser/StartFontMetrics/parse(java.lang.String,int,java.util.Stack)#java/lang/Double/parseDouble(java.lang.String)
org/apache/fop/fonts/type1/AFMParser/StartFontMetrics/parse(java.lang.String,int,java.util.Stack)#java/lang/String/substring(int,int)
org/apache/fop/fonts/type1/AFMParser/StartFontMetrics/parse(java.lang.String,int,java.util.Stack)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/fonts/type1/AFMParser/StartFontMetrics/parse(java.lang.String,int,java.util.Stack)#java/lang/StringBuilder/append(double)
org/apache/fop/fonts/type1/AFMParser/StartFontMetrics/parse(java.lang.String,int,java.util.Stack)#java/lang/StringBuilder/toString()
org/apache/fop/fonts/type1/AFMParser/StartFontMetrics/parse(java.lang.String,int,java.util.Stack)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/fonts/type1/AFMParser/StartFontMetrics/parse(java.lang.String,int,java.util.Stack)#java/util/Stack/push(java.lang.Object)
org/apache/fop/render/intermediate/IFRenderer/renderBlockViewport(org.apache.fop.area.BlockViewport,java.util.List)#org/apache/fop/area/BlockViewport/getIPD()
org/apache/fop/render/intermediate/IFRenderer/renderBlockViewport(org.apache.fop.area.BlockViewport,java.util.List)#java/awt/Dimension/Dimension(int,int)
org/apache/fop/render/intermediate/IFRenderer/renderBlockViewport(org.apache.fop.area.BlockViewport,java.util.List)#org/apache/fop/area/BlockViewport/getBorderAndPaddingWidthEnd()
org/apache/fop/render/intermediate/IFRenderer/renderBlockViewport(org.apache.fop.area.BlockViewport,java.util.List)#org/apache/fop/area/BlockViewport/getXOffset()
org/apache/fop/render/intermediate/IFRenderer/renderBlockViewport(org.apache.fop.area.BlockViewport,java.util.List)#org/apache/fop/area/BlockViewport/getYOffset()
org/apache/fop/render/intermediate/IFRenderer/renderBlockViewport(org.apache.fop.area.BlockViewport,java.util.List)#org/apache/fop/area/BlockViewport/getStartIndent()
org/apache/fop/render/intermediate/IFRenderer/renderBlockViewport(org.apache.fop.area.BlockViewport,java.util.List)#org/apache/fop/area/BlockViewport/getBorderAndPaddingWidthStart()
org/apache/fop/render/intermediate/IFRenderer/renderBlockViewport(org.apache.fop.area.BlockViewport,java.util.List)#java/awt/geom/AffineTransform/concatenate(java.awt.geom.AffineTransform)
org/apache/fop/render/intermediate/IFRenderer/renderBlockViewport(org.apache.fop.area.BlockViewport,java.util.List)#org/apache/fop/render/intermediate/IFRenderer/drawBackAndBorders(org.apache.fop.area.Area,float,float,float,float)
org/apache/fop/render/intermediate/IFRenderer/renderBlockViewport(org.apache.fop.area.BlockViewport,java.util.List)#org/apache/fop/area/BlockViewport/getBPD()
org/apache/fop/render/intermediate/IFRenderer/renderBlockViewport(org.apache.fop.area.BlockViewport,java.util.List)#org/apache/fop/area/BlockViewport/getPositioning()
org/apache/fop/render/intermediate/IFRenderer/renderBlockViewport(org.apache.fop.area.BlockViewport,java.util.List)#org/apache/fop/area/BlockViewport/getBorderAndPaddingWidthBefore()
org/apache/fop/render/intermediate/IFRenderer/renderBlockViewport(org.apache.fop.area.BlockViewport,java.util.List)#java/util/Stack/pop()
org/apache/fop/render/intermediate/IFRenderer/renderBlockViewport(org.apache.fop.area.BlockViewport,java.util.List)#java/awt/geom/AffineTransform/translate(double,double)
org/apache/fop/render/intermediate/IFRenderer/renderBlockViewport(org.apache.fop.area.BlockViewport,java.util.List)#org/apache/fop/area/BlockViewport/getForeignAttributeValue(org.apache.xmlgraphics.util.QName)
org/apache/fop/render/intermediate/IFRenderer/renderBlockViewport(org.apache.fop.area.BlockViewport,java.util.List)#java/util/Stack/push(java.lang.Object)
org/apache/fop/render/intermediate/IFRenderer/renderBlockViewport(org.apache.fop.area.BlockViewport,java.util.List)#org/apache/fop/area/BlockViewport/getSpaceBefore()
org/apache/fop/render/intermediate/IFRenderer/renderBlockViewport(org.apache.fop.area.BlockViewport,java.util.List)#org/apache/fop/render/intermediate/IFRenderer/renderBlocks(org.apache.fop.area.Block,java.util.List)
org/apache/fop/render/intermediate/IFRenderer/renderBlockViewport(org.apache.fop.area.BlockViewport,java.util.List)#org/apache/fop/render/intermediate/IFRenderer/handleBlockTraits(org.apache.fop.area.Block)
org/apache/fop/render/intermediate/IFRenderer/renderBlockViewport(org.apache.fop.area.BlockViewport,java.util.List)#org/apache/fop/area/BlockViewport/getBorderAndPaddingWidthAfter()
org/apache/fop/render/intermediate/IFRenderer/renderBlockViewport(org.apache.fop.area.BlockViewport,java.util.List)#org/apache/fop/render/intermediate/IFRenderer/maybeStartLayer(org.apache.fop.area.Area)
org/apache/fop/render/intermediate/IFRenderer/renderBlockViewport(org.apache.fop.area.BlockViewport,java.util.List)#org/apache/fop/area/BlockViewport/getAllocBPD()
org/apache/fop/render/intermediate/IFRenderer/renderBlockViewport(org.apache.fop.area.BlockViewport,java.util.List)#org/apache/batik/parser/AWTTransformProducer/createAffineTransform(java.lang.String)
org/apache/fop/render/intermediate/IFRenderer/renderBlockViewport(org.apache.fop.area.BlockViewport,java.util.List)#org/apache/fop/render/intermediate/IFRenderer/maybeEndLayer(org.apache.fop.area.Area,boolean)
org/apache/fop/render/intermediate/IFRenderer/renderBlockViewport(org.apache.fop.area.BlockViewport,java.util.List)#java/awt/geom/AffineTransform/AffineTransform()
org/apache/fop/render/intermediate/IFRenderer/renderText(org.apache.fop.area.inline.TextArea)#org/apache/fop/area/inline/TextArea/getTextWordSpaceAdjust()
org/apache/fop/render/intermediate/IFRenderer/renderText(org.apache.fop.area.inline.TextArea)#org/apache/fop/render/intermediate/IFRenderer/getInternalFontNameForArea(org.apache.fop.area.Area)
org/apache/fop/render/intermediate/IFRenderer/renderText(org.apache.fop.area.inline.TextArea)#org/apache/fop/render/intermediate/IFRenderer/renderInlineAreaBackAndBorders(org.apache.fop.area.inline.InlineArea)
org/apache/fop/render/intermediate/IFRenderer/renderText(org.apache.fop.area.inline.TextArea)#org/apache/fop/area/inline/TextArea/getBorderAndPaddingWidthStart()
org/apache/fop/render/intermediate/IFRenderer/renderText(org.apache.fop.area.inline.TextArea)#org/apache/fop/render/intermediate/IFRenderer$TextUtil/setStartPosition(int,int)
org/apache/fop/render/intermediate/IFRenderer/renderText(org.apache.fop.area.inline.TextArea)#java/lang/StringBuilder/toString()
org/apache/fop/render/intermediate/IFRenderer/renderText(org.apache.fop.area.inline.TextArea)#org/apache/fop/render/intermediate/IFRenderer$TextUtil/setSpacing(int,int)
org/apache/fop/render/intermediate/IFRenderer/renderText(org.apache.fop.area.inline.TextArea)#org/apache/fop/render/intermediate/IFRenderer/renderTextDecoration(org.apache.fop.fonts.FontMetrics,int,org.apache.fop.area.inline.InlineArea,int,int)
org/apache/fop/render/intermediate/IFRenderer/renderText(org.apache.fop.area.inline.TextArea)#java/lang/Integer/intValue()
org/apache/fop/render/intermediate/IFRenderer/renderText(org.apache.fop.area.inline.TextArea)#org/apache/fop/area/inline/TextArea/getTrait(java.lang.Integer)
org/apache/fop/render/intermediate/IFRenderer/renderText(org.apache.fop.area.inline.TextArea)#org/apache/fop/area/inline/TextArea/getBaselineOffset()
org/apache/fop/render/intermediate/IFRenderer/renderText(org.apache.fop.area.inline.TextArea)#org/apache/fop/render/intermediate/IFRenderer$TextUtil/flush()
org/apache/fop/render/intermediate/IFRenderer/renderText(org.apache.fop.area.inline.TextArea)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/render/intermediate/IFRenderer/renderText(org.apache.fop.area.inline.TextArea)#java/lang/Integer/Integer(int)
org/apache/fop/render/intermediate/IFRenderer/renderText(org.apache.fop.area.inline.TextArea)#org/apache/fop/area/inline/TextArea/getTextLetterSpaceAdjust()
org/apache/fop/render/intermediate/IFRenderer/renderText(org.apache.fop.area.inline.TextArea)#org/apache/fop/area/inline/TextArea/getBlockProgressionOffset()
org/apache/fop/render/intermediate/IFRenderer/renderText(org.apache.fop.area.inline.TextArea)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/render/intermediate/IFRenderer/renderText(org.apache.fop.area.inline.TextArea)#org/apache/commons/logging/Log/trace(java.lang.Object)
org/apache/fop/render/intermediate/IFRenderer/renderText(org.apache.fop.area.inline.TextArea)#org/apache/fop/render/AbstractPathOrientedRenderer/renderText(org.apache.fop.area.inline.TextArea)
org/apache/fop/render/intermediate/IFRenderer/renderText(org.apache.fop.area.inline.TextArea)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/fop/render/intermediate/IFRenderer/renderText(org.apache.fop.area.inline.TextArea)#org/apache/commons/logging/Log/isTraceEnabled()
org/apache/fop/render/intermediate/IFRenderer/renderInlineParent(org.apache.fop.area.inline.InlineParent)#org/apache/fop/render/intermediate/IFGraphicContext/getTransform()
org/apache/fop/render/intermediate/IFRenderer/renderInlineParent(org.apache.fop.area.inline.InlineParent)#java/lang/Integer/intValue()
org/apache/fop/render/intermediate/IFRenderer/renderInlineParent(org.apache.fop.area.inline.InlineParent)#org/apache/fop/area/Trait$ExternalLink/getDestination()
org/apache/fop/render/intermediate/IFRenderer/renderInlineParent(org.apache.fop.area.inline.InlineParent)#java/awt/Rectangle/Rectangle(int,int,int,int)
org/apache/fop/render/intermediate/IFRenderer/renderInlineParent(org.apache.fop.area.inline.InlineParent)#org/apache/fop/area/inline/InlineParent/getBPD()
org/apache/fop/render/intermediate/IFRenderer/renderInlineParent(org.apache.fop.area.inline.InlineParent)#org/apache/fop/area/Trait$ExternalLink/newWindow()
org/apache/fop/render/intermediate/IFRenderer/renderInlineParent(org.apache.fop.area.inline.InlineParent)#org/apache/fop/area/Trait$InternalLink/getIDRef()
org/apache/fop/render/intermediate/IFRenderer/renderInlineParent(org.apache.fop.area.inline.InlineParent)#org/apache/fop/area/Trait$InternalLink/getPVKey()
org/apache/fop/render/intermediate/IFRenderer/renderInlineParent(org.apache.fop.area.inline.InlineParent)#java/awt/geom/AffineTransform/createTransformedShape(java.awt.Shape)
org/apache/fop/render/intermediate/IFRenderer/renderInlineParent(org.apache.fop.area.inline.InlineParent)#java/lang/String/length()
org/apache/fop/render/intermediate/IFRenderer/renderInlineParent(org.apache.fop.area.inline.InlineParent)#java/util/Map/get(java.lang.Object)
org/apache/fop/render/intermediate/IFRenderer/renderInlineParent(org.apache.fop.area.inline.InlineParent)#org/apache/fop/area/inline/InlineParent/getTrait(java.lang.Integer)
org/apache/fop/render/intermediate/IFRenderer/renderInlineParent(org.apache.fop.area.inline.InlineParent)#java/util/List/add(java.lang.Object)
org/apache/fop/render/intermediate/IFRenderer/renderInlineParent(org.apache.fop.area.inline.InlineParent)#org/apache/fop/render/AbstractPathOrientedRenderer/renderInlineParent(org.apache.fop.area.inline.InlineParent)
org/apache/fop/render/intermediate/IFRenderer/renderInlineParent(org.apache.fop.area.inline.InlineParent)#java/awt/Shape/getBounds()
org/apache/fop/render/intermediate/IFRenderer/renderInlineParent(org.apache.fop.area.inline.InlineParent)#org/apache/fop/area/inline/InlineParent/getBlockProgressionOffset()
org/apache/fop/render/intermediate/IFRenderer/renderInlineParent(org.apache.fop.area.inline.InlineParent)#org/apache/fop/area/inline/InlineParent/getIPD()
org/apache/fop/render/intermediate/IFRenderer/startRenderer(java.io.OutputStream)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/fop/render/intermediate/IFRenderer/startRenderer(java.io.OutputStream)#java/net/URL/toExternalForm()
org/apache/fop/render/intermediate/IFRenderer/startRenderer(java.io.OutputStream)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/render/intermediate/IFRenderer/startRenderer(java.io.OutputStream)#java/lang/Object/getClass()
org/apache/fop/render/intermediate/IFRenderer/startRenderer(java.io.OutputStream)#org/apache/fop/render/AbstractPathOrientedRenderer/startRenderer(java.io.OutputStream)
org/apache/fop/render/intermediate/IFRenderer/startRenderer(java.io.OutputStream)#org/apache/commons/logging/Log/isDebugEnabled()
org/apache/fop/render/intermediate/IFRenderer/startRenderer(java.io.OutputStream)#javax/xml/transform/stream/StreamResult/setSystemId(java.lang.String)
org/apache/fop/render/intermediate/IFRenderer/startRenderer(java.io.OutputStream)#java/net/URI/toURL()
org/apache/fop/render/intermediate/IFRenderer/startRenderer(java.io.OutputStream)#org/apache/fop/render/intermediate/IFRenderer/getUserAgent()
org/apache/fop/render/intermediate/IFRenderer/startRenderer(java.io.OutputStream)#java/lang/Class/getName()
org/apache/fop/render/intermediate/IFRenderer/startRenderer(java.io.OutputStream)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/render/intermediate/IFRenderer/startRenderer(java.io.OutputStream)#java/io/File/toURI()
org/apache/fop/render/intermediate/IFRenderer/startRenderer(java.io.OutputStream)#javax/xml/transform/stream/StreamResult/StreamResult(java.io.OutputStream)
org/apache/fop/render/intermediate/IFRenderer/startRenderer(java.io.OutputStream)#java/lang/StringBuilder/toString()
org/apache/fop/render/intermediate/IFRenderer/createDefaultDocumentMetadata()#org/apache/xmlgraphics/xmp/schemas/XMPBasicAdapter/setMetadataDate(java.util.Date)
org/apache/fop/render/intermediate/IFRenderer/createDefaultDocumentMetadata()#org/apache/xmlgraphics/xmp/schemas/XMPBasicAdapter/getMetadataDate()
org/apache/fop/render/intermediate/IFRenderer/createDefaultDocumentMetadata()#org/apache/xmlgraphics/xmp/schemas/XMPBasicSchema/getAdapter(org.apache.xmlgraphics.xmp.Metadata)
org/apache/fop/render/intermediate/IFRenderer/createDefaultDocumentMetadata()#org/apache/xmlgraphics/xmp/schemas/XMPBasicAdapter/setCreateDate(java.util.Date)
org/apache/fop/render/intermediate/IFRenderer/createDefaultDocumentMetadata()#org/apache/xmlgraphics/xmp/schemas/DublinCoreSchema/getAdapter(org.apache.xmlgraphics.xmp.Metadata)
org/apache/fop/render/intermediate/IFRenderer/createDefaultDocumentMetadata()#org/apache/xmlgraphics/xmp/schemas/XMPBasicAdapter/setCreatorTool(java.lang.String)
org/apache/fop/render/intermediate/IFRenderer/createDefaultDocumentMetadata()#org/apache/xmlgraphics/xmp/schemas/DublinCoreAdapter/setTitle(java.lang.String)
org/apache/fop/render/intermediate/IFRenderer/createDefaultDocumentMetadata()#org/apache/fop/render/intermediate/IFRenderer/getUserAgent()
org/apache/fop/render/intermediate/IFRenderer/createDefaultDocumentMetadata()#java/util/Date/Date()
org/apache/fop/render/intermediate/IFRenderer/createDefaultDocumentMetadata()#org/apache/xmlgraphics/xmp/schemas/DublinCoreAdapter/addCreator(java.lang.String)
org/apache/fop/render/intermediate/IFRenderer/createDefaultDocumentMetadata()#org/apache/xmlgraphics/xmp/schemas/DublinCoreAdapter/addSubject(java.lang.String)
org/apache/fop/render/intermediate/IFRenderer/createDefaultDocumentMetadata()#org/apache/xmlgraphics/xmp/Metadata/Metadata()
org/apache/fop/render/intermediate/IFRenderer/renderPage(org.apache.fop.area.PageViewport)#java/util/Iterator/remove()
org/apache/fop/render/intermediate/IFRenderer/renderPage(org.apache.fop.area.PageViewport)#java/util/Iterator/hasNext()
org/apache/fop/render/intermediate/IFRenderer/renderPage(org.apache.fop.area.PageViewport)#org/apache/fop/area/PageViewport/getForeignAttributes()
org/apache/fop/render/intermediate/IFRenderer/renderPage(org.apache.fop.area.PageViewport)#java/lang/Integer/Integer(int)
org/apache/fop/render/intermediate/IFRenderer/renderPage(org.apache.fop.area.PageViewport)#org/apache/fop/render/AbstractPathOrientedRenderer/renderPage(org.apache.fop.area.PageViewport)
org/apache/fop/render/intermediate/IFRenderer/renderPage(org.apache.fop.area.PageViewport)#java/util/Iterator/next()
org/apache/fop/render/intermediate/IFRenderer/renderPage(org.apache.fop.area.PageViewport)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/fop/render/intermediate/IFRenderer/renderPage(org.apache.fop.area.PageViewport)#java/awt/Dimension/Dimension(int,int)
org/apache/fop/render/intermediate/IFRenderer/renderPage(org.apache.fop.area.PageViewport)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/render/intermediate/IFRenderer/renderPage(org.apache.fop.area.PageViewport)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/render/intermediate/IFRenderer/renderPage(org.apache.fop.area.PageViewport)#org/apache/commons/logging/Log/trace(java.lang.Object)
org/apache/fop/render/intermediate/IFRenderer/renderPage(org.apache.fop.area.PageViewport)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/fop/render/intermediate/IFRenderer/renderPage(org.apache.fop.area.PageViewport)#org/apache/commons/logging/Log/isTraceEnabled()
org/apache/fop/render/intermediate/IFRenderer/renderPage(org.apache.fop.area.PageViewport)#java/util/List/iterator()
org/apache/fop/render/intermediate/IFRenderer/renderPage(org.apache.fop.area.PageViewport)#java/lang/StringBuilder/toString()
org/apache/fop/fonts/type1/PostscriptParser/PSDictionary/parseToken(java.lang.String,int)#org/apache/fop/fonts/type1/PostscriptParser$PSDictionary/addEntry(java.lang.String)
org/apache/fop/fonts/type1/PostscriptParser/PSDictionary/parseToken(java.lang.String,int)#org/apache/fop/fonts/type1/PostscriptParser$PSDictionary/isInteger(java.lang.String)
org/apache/fop/fonts/type1/PostscriptParser/PSDictionary/parseToken(java.lang.String,int)#java/util/List/size()
org/apache/fop/fonts/type1/PostscriptParser/PSDictionary/parseToken(java.lang.String,int)#java/lang/String/equals(java.lang.Object)
org/apache/fop/fonts/type1/PostscriptParser/PSDictionary/parseToken(java.lang.String,int)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/fonts/type1/PostscriptParser/PSDictionary/parseToken(java.lang.String,int)#java/util/List/add(java.lang.Object)
org/apache/fop/fonts/type1/PostscriptParser/PSDictionary/parseToken(java.lang.String,int)#java/lang/StringBuilder/toString()
org/apache/fop/fonts/type1/PostscriptParser/PSDictionary/parseToken(java.lang.String,int)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/fonts/type1/PostscriptParser/PSDictionary/parseToken(java.lang.String,int)#java/lang/String/trim()
org/apache/fop/fonts/type1/PostscriptParser/PSDictionary/parseToken(java.lang.String,int)#java/util/List/clear()
org/apache/fop/fonts/type1/PostscriptParser/PSDictionary/parseToken(java.lang.String,int)#java/lang/Integer/parseInt(java.lang.String)
org/apache/fop/fonts/type1/PostscriptParser/PSDictionary/parseToken(java.lang.String,int)#java/lang/String/startsWith(java.lang.String)
org/apache/fop/fonts/type1/PostscriptParser/PSDictionary/parseToken(java.lang.String,int)#java/util/List/get(int)
org/apache/fop/render/intermediate/extensions/DocumentNavigationHandler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#org/xml/sax/SAXException/SAXException(java.lang.String)
org/apache/fop/render/intermediate/extensions/DocumentNavigationHandler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#java/util/Stack/pop()
org/apache/fop/render/intermediate/extensions/DocumentNavigationHandler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#java/awt/Point/Point(int,int)
org/apache/fop/render/intermediate/extensions/DocumentNavigationHandler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#org/xml/sax/Attributes/getValue(java.lang.String,java.lang.String)
org/apache/fop/render/intermediate/extensions/DocumentNavigationHandler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/render/intermediate/extensions/DocumentNavigationHandler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#java/util/Stack/isEmpty()
org/apache/fop/render/intermediate/extensions/DocumentNavigationHandler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#java/util/Stack/peek()
org/apache/fop/render/intermediate/extensions/DocumentNavigationHandler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#org/apache/fop/render/intermediate/extensions/URIAction/setStructureTreeElement(org.apache.fop.accessibility.StructureTreeElement)
org/apache/fop/render/intermediate/extensions/DocumentNavigationHandler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#org/xml/sax/Attributes/getValue(java.lang.String)
org/apache/fop/render/intermediate/extensions/DocumentNavigationHandler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#org/apache/commons/logging/Log/warn(java.lang.Object)
org/apache/fop/render/intermediate/extensions/DocumentNavigationHandler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#org/apache/fop/render/intermediate/extensions/URIAction/setID(java.lang.String)
org/apache/fop/render/intermediate/extensions/DocumentNavigationHandler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/render/intermediate/extensions/DocumentNavigationHandler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#java/util/Stack/push(java.lang.Object)
org/apache/fop/render/intermediate/extensions/DocumentNavigationHandler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#org/apache/fop/render/intermediate/extensions/GoToXYAction/setStructureTreeElement(org.apache.fop.accessibility.StructureTreeElement)
org/apache/fop/render/intermediate/extensions/DocumentNavigationHandler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#java/util/Map/get(java.lang.Object)
org/apache/fop/render/intermediate/extensions/DocumentNavigationHandler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#java/lang/String/equals(java.lang.Object)
org/apache/fop/render/intermediate/extensions/DocumentNavigationHandler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#org/apache/xmlgraphics/util/QName/getLocalName()
org/apache/fop/render/intermediate/extensions/DocumentNavigationHandler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#java/lang/StringBuilder/toString()
org/apache/fop/area/inline/UnresolvedPageNumber/resolveIDRef(java.lang.String,java.util.List)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/fop/area/inline/UnresolvedPageNumber/resolveIDRef(java.lang.String,java.util.List)#org/apache/commons/logging/Log/warn(java.lang.Object)
org/apache/fop/area/inline/UnresolvedPageNumber/resolveIDRef(java.lang.String,java.util.List)#org/apache/fop/area/inline/UnresolvedPageNumber/handleIPDVariation(int)
org/apache/fop/area/inline/UnresolvedPageNumber/resolveIDRef(java.lang.String,java.util.List)#org/apache/commons/logging/Log/isDebugEnabled()
org/apache/fop/area/inline/UnresolvedPageNumber/resolveIDRef(java.lang.String,java.util.List)#java/util/List/size()
org/apache/fop/area/inline/UnresolvedPageNumber/resolveIDRef(java.lang.String,java.util.List)#org/apache/fop/area/inline/UnresolvedPageNumber/getBidiLevel()
org/apache/fop/area/inline/UnresolvedPageNumber/resolveIDRef(java.lang.String,java.util.List)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/area/inline/UnresolvedPageNumber/resolveIDRef(java.lang.String,java.util.List)#org/apache/fop/area/inline/UnresolvedPageNumber/getIPD()
org/apache/fop/area/inline/UnresolvedPageNumber/resolveIDRef(java.lang.String,java.util.List)#java/util/List/get(int)
org/apache/fop/area/inline/UnresolvedPageNumber/resolveIDRef(java.lang.String,java.util.List)#org/apache/fop/area/inline/UnresolvedPageNumber/addWord(java.lang.String,int,int)
org/apache/fop/area/inline/UnresolvedPageNumber/resolveIDRef(java.lang.String,java.util.List)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/area/inline/UnresolvedPageNumber/resolveIDRef(java.lang.String,java.util.List)#java/lang/String/equals(java.lang.Object)
org/apache/fop/area/inline/UnresolvedPageNumber/resolveIDRef(java.lang.String,java.util.List)#java/lang/StringBuilder/toString()
org/apache/fop/area/inline/UnresolvedPageNumber/resolveIDRef(java.lang.String,java.util.List)#org/apache/fop/area/inline/UnresolvedPageNumber/removeText()
org/apache/fop/util/bitmap/BitmapImageUtil/convertToMonochrome(java.awt.image.RenderedImage,java.awt.Dimension,float)#java/awt/Dimension/Dimension(int,int)
org/apache/fop/util/bitmap/BitmapImageUtil/convertToMonochrome(java.awt.image.RenderedImage,java.awt.Dimension,float)#java/awt/image/RenderedImage/getWidth()
org/apache/fop/util/bitmap/BitmapImageUtil/convertToMonochrome(java.awt.image.RenderedImage,java.awt.Dimension,float)#java/awt/Dimension/equals(java.lang.Object)
org/apache/fop/util/bitmap/BitmapImageUtil/convertToMonochrome(java.awt.image.RenderedImage,java.awt.Dimension,float)#java/awt/image/ColorModel/isAlphaPremultiplied()
org/apache/fop/util/bitmap/BitmapImageUtil/convertToMonochrome(java.awt.image.RenderedImage,java.awt.Dimension,float)#java/awt/image/ColorModel/createCompatibleWritableRaster(int,int)
org/apache/fop/util/bitmap/BitmapImageUtil/convertToMonochrome(java.awt.image.RenderedImage,java.awt.Dimension,float)#java/awt/image/BufferedImage/BufferedImage(java.awt.image.ColorModel,java.awt.image.WritableRaster,boolean,java.util.Hashtable)
org/apache/fop/util/bitmap/BitmapImageUtil/convertToMonochrome(java.awt.image.RenderedImage,java.awt.Dimension,float)#java/awt/image/RenderedImage/getColorModel()
org/apache/fop/util/bitmap/BitmapImageUtil/convertToMonochrome(java.awt.image.RenderedImage,java.awt.Dimension,float)#java/awt/image/RenderedImage/getHeight()
org/apache/fop/util/bitmap/BitmapImageUtil/convertToMonochrome(java.awt.image.RenderedImage,java.awt.Dimension,float)#java/lang/Boolean/toString()
org/apache/fop/util/bitmap/BitmapImageUtil/transferImage(java.awt.image.RenderedImage,java.awt.image.BufferedImage)#java/awt/geom/AffineTransform/scale(double,double)
org/apache/fop/util/bitmap/BitmapImageUtil/transferImage(java.awt.image.RenderedImage,java.awt.image.BufferedImage)#java/awt/image/BufferedImage/getHeight()
org/apache/fop/util/bitmap/BitmapImageUtil/transferImage(java.awt.image.RenderedImage,java.awt.image.BufferedImage)#java/awt/Graphics2D/clearRect(int,int,int,int)
org/apache/fop/util/bitmap/BitmapImageUtil/transferImage(java.awt.image.RenderedImage,java.awt.image.BufferedImage)#java/awt/geom/AffineTransform/AffineTransform()
org/apache/fop/util/bitmap/BitmapImageUtil/transferImage(java.awt.image.RenderedImage,java.awt.image.BufferedImage)#java/awt/image/RenderedImage/getHeight()
org/apache/fop/util/bitmap/BitmapImageUtil/transferImage(java.awt.image.RenderedImage,java.awt.image.BufferedImage)#java/awt/image/RenderedImage/getWidth()
org/apache/fop/util/bitmap/BitmapImageUtil/transferImage(java.awt.image.RenderedImage,java.awt.image.BufferedImage)#java/awt/Graphics2D/dispose()
org/apache/fop/util/bitmap/BitmapImageUtil/transferImage(java.awt.image.RenderedImage,java.awt.image.BufferedImage)#java/awt/image/BufferedImage/createGraphics()
org/apache/fop/util/bitmap/BitmapImageUtil/transferImage(java.awt.image.RenderedImage,java.awt.image.BufferedImage)#java/awt/Graphics2D/setColor(java.awt.Color)
org/apache/fop/util/bitmap/BitmapImageUtil/transferImage(java.awt.image.RenderedImage,java.awt.image.BufferedImage)#java/awt/Graphics2D/drawRenderedImage(java.awt.image.RenderedImage,java.awt.geom.AffineTransform)
org/apache/fop/util/bitmap/BitmapImageUtil/transferImage(java.awt.image.RenderedImage,java.awt.image.BufferedImage)#java/awt/image/BufferedImage/getWidth()
org/apache/fop/util/bitmap/BitmapImageUtil/transferImage(java.awt.image.RenderedImage,java.awt.image.BufferedImage)#java/awt/Graphics2D/setBackground(java.awt.Color)
org/apache/fop/pdf/AlphaRasterImage/outputContents(java.io.OutputStream)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/pdf/AlphaRasterImage/outputContents(java.io.OutputStream)#java/awt/image/Raster/getNumBands()
org/apache/fop/pdf/AlphaRasterImage/outputContents(java.io.OutputStream)#java/awt/image/Raster/getDataElements(int,int,int,int,java.lang.Object)
org/apache/fop/pdf/AlphaRasterImage/outputContents(java.io.OutputStream)#java/awt/image/SinglePixelPackedSampleModel/getBitOffsets()
org/apache/fop/pdf/AlphaRasterImage/outputContents(java.io.OutputStream)#java/lang/Class/getName()
org/apache/fop/pdf/AlphaRasterImage/outputContents(java.io.OutputStream)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/pdf/AlphaRasterImage/outputContents(java.io.OutputStream)#java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)
org/apache/fop/pdf/AlphaRasterImage/outputContents(java.io.OutputStream)#java/lang/Object/getClass()
org/apache/fop/pdf/AlphaRasterImage/outputContents(java.io.OutputStream)#java/awt/image/Raster/getDataBuffer()
org/apache/fop/pdf/AlphaRasterImage/outputContents(java.io.OutputStream)#java/io/OutputStream/write(byte[])
org/apache/fop/pdf/AlphaRasterImage/outputContents(java.io.OutputStream)#java/lang/StringBuilder/toString()
org/apache/fop/pdf/AlphaRasterImage/outputContents(java.io.OutputStream)#java/awt/image/Raster/getSampleModel()
org/apache/fop/pdf/AlphaRasterImage/outputContents(java.io.OutputStream)#java/awt/image/DataBuffer/getDataType()
org/apache/fop/afp/modca/MapCodedFont/addFont(int,org.apache.fop.afp.fonts.AFPFont,int,int)#org/apache/fop/afp/modca/MapCodedFont$FontDefinition/access$002(org.apache.fop.afp.modca.MapCodedFont$FontDefinition,int)
org/apache/fop/afp/modca/MapCodedFont/addFont(int,org.apache.fop.afp.fonts.AFPFont,int,int)#org/apache/fop/afp/modca/MapCodedFont$FontDefinition/access$100(org.apache.fop.afp.modca.MapCodedFont$FontDefinition)
org/apache/fop/afp/modca/MapCodedFont/addFont(int,org.apache.fop.afp.fonts.AFPFont,int,int)#org/apache/fop/afp/modca/MapCodedFont$FontDefinition/access$200(org.apache.fop.afp.modca.MapCodedFont$FontDefinition)
org/apache/fop/afp/modca/MapCodedFont/addFont(int,org.apache.fop.afp.fonts.AFPFont,int,int)#org/apache/fop/afp/modca/MapCodedFont$FontDefinition/FontDefinition(org.apache.fop.afp.modca.MapCodedFont$1)
org/apache/fop/afp/modca/MapCodedFont/addFont(int,org.apache.fop.afp.fonts.AFPFont,int,int)#java/util/List/size()
org/apache/fop/afp/modca/MapCodedFont/addFont(int,org.apache.fop.afp.fonts.AFPFont,int,int)#java/lang/String/String(byte[],java.lang.String)
org/apache/fop/afp/modca/MapCodedFont/addFont(int,org.apache.fop.afp.fonts.AFPFont,int,int)#org/apache/fop/afp/fonts/DoubleByteFont/getCharacterSet()
org/apache/fop/afp/modca/MapCodedFont/addFont(int,org.apache.fop.afp.fonts.AFPFont,int,int)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/afp/modca/MapCodedFont/addFont(int,org.apache.fop.afp.fonts.AFPFont,int,int)#java/lang/String/getBytes(java.lang.String)
org/apache/fop/afp/modca/MapCodedFont/addFont(int,org.apache.fop.afp.fonts.AFPFont,int,int)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/fop/afp/modca/MapCodedFont/addFont(int,org.apache.fop.afp.fonts.AFPFont,int,int)#java/lang/Object/getClass()
org/apache/fop/afp/modca/MapCodedFont/addFont(int,org.apache.fop.afp.fonts.AFPFont,int,int)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/afp/modca/MapCodedFont/addFont(int,org.apache.fop.afp.fonts.AFPFont,int,int)#org/apache/fop/afp/modca/MapCodedFont$FontDefinition/access$202(org.apache.fop.afp.modca.MapCodedFont$FontDefinition,byte[])
org/apache/fop/afp/modca/MapCodedFont/addFont(int,org.apache.fop.afp.fonts.AFPFont,int,int)#org/apache/fop/afp/modca/MapCodedFont$FontDefinition/access$402(org.apache.fop.afp.modca.MapCodedFont$FontDefinition,byte)
org/apache/fop/afp/modca/MapCodedFont/addFont(int,org.apache.fop.afp.fonts.AFPFont,int,int)#java/lang/StringBuilder/append(int)
org/apache/fop/afp/modca/MapCodedFont/addFont(int,org.apache.fop.afp.fonts.AFPFont,int,int)#org/apache/fop/afp/modca/MapCodedFont$FontDefinition/access$102(org.apache.fop.afp.modca.MapCodedFont$FontDefinition,byte[])
org/apache/fop/afp/modca/MapCodedFont/addFont(int,org.apache.fop.afp.fonts.AFPFont,int,int)#org/apache/fop/afp/modca/MapCodedFont$FontDefinition/access$302(org.apache.fop.afp.modca.MapCodedFont$FontDefinition,byte)
org/apache/fop/afp/modca/MapCodedFont/addFont(int,org.apache.fop.afp.fonts.AFPFont,int,int)#java/lang/Class/getName()
org/apache/fop/afp/modca/MapCodedFont/addFont(int,org.apache.fop.afp.fonts.AFPFont,int,int)#java/util/List/add(java.lang.Object)
org/apache/fop/afp/modca/MapCodedFont/addFont(int,org.apache.fop.afp.fonts.AFPFont,int,int)#org/apache/commons/logging/Log/error(java.lang.Object)
org/apache/fop/afp/modca/MapCodedFont/addFont(int,org.apache.fop.afp.fonts.AFPFont,int,int)#org/apache/fop/afp/fonts/OutlineFont/getCharacterSet()
org/apache/fop/afp/modca/MapCodedFont/addFont(int,org.apache.fop.afp.fonts.AFPFont,int,int)#java/lang/StringBuilder/toString()
org/apache/fop/afp/modca/MapCodedFont/writeToStream(java.io.OutputStream)#org/apache/fop/afp/modca/MapCodedFont$FontDefinition/access$000(org.apache.fop.afp.modca.MapCodedFont$FontDefinition)
org/apache/fop/afp/modca/MapCodedFont/writeToStream(java.io.OutputStream)#org/apache/fop/afp/modca/MapCodedFont$FontDefinition/access$100(org.apache.fop.afp.modca.MapCodedFont$FontDefinition)
org/apache/fop/afp/modca/MapCodedFont/writeToStream(java.io.OutputStream)#org/apache/fop/afp/modca/MapCodedFont$FontDefinition/access$200(org.apache.fop.afp.modca.MapCodedFont$FontDefinition)
org/apache/fop/afp/modca/MapCodedFont/writeToStream(java.io.OutputStream)#org/apache/fop/afp/modca/MapCodedFont$FontDefinition/access$300(org.apache.fop.afp.modca.MapCodedFont$FontDefinition)
org/apache/fop/afp/modca/MapCodedFont/writeToStream(java.io.OutputStream)#org/apache/fop/afp/modca/MapCodedFont/copySF(byte[],byte,byte)
org/apache/fop/afp/modca/MapCodedFont/writeToStream(java.io.OutputStream)#java/util/Iterator/next()
org/apache/fop/afp/modca/MapCodedFont/writeToStream(java.io.OutputStream)#java/io/ByteArrayOutputStream/write(int)
org/apache/fop/afp/modca/MapCodedFont/writeToStream(java.io.OutputStream)#java/io/ByteArrayOutputStream/write(byte[])
org/apache/fop/afp/modca/MapCodedFont/writeToStream(java.io.OutputStream)#java/io/ByteArrayOutputStream/toByteArray()
org/apache/fop/afp/modca/MapCodedFont/writeToStream(java.io.OutputStream)#java/util/List/iterator()
org/apache/fop/afp/modca/MapCodedFont/writeToStream(java.io.OutputStream)#java/io/ByteArrayOutputStream/ByteArrayOutputStream()
org/apache/fop/afp/modca/MapCodedFont/writeToStream(java.io.OutputStream)#java/io/OutputStream/write(byte[])
org/apache/fop/afp/modca/MapCodedFont/writeToStream(java.io.OutputStream)#java/util/Iterator/hasNext()
org/apache/fop/afp/modca/MapCodedFont/writeToStream(java.io.OutputStream)#org/apache/fop/afp/modca/MapCodedFont$FontDefinition/access$400(org.apache.fop.afp.modca.MapCodedFont$FontDefinition)
org/apache/fop/fo/expr/RGBNamedColorFunction/eval(org.apache.fop.fo.properties.Property[],org.apache.fop.fo.expr.PropertyInfo)#java/lang/Number/floatValue()
org/apache/fop/fo/expr/RGBNamedColorFunction/eval(org.apache.fop.fo.properties.Property[],org.apache.fop.fo.expr.PropertyInfo)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/fo/expr/RGBNamedColorFunction/eval(org.apache.fop.fo.properties.Property[],org.apache.fop.fo.expr.PropertyInfo)#java/lang/StringBuffer/toString()
org/apache/fop/fo/expr/RGBNamedColorFunction/eval(org.apache.fop.fo.properties.Property[],org.apache.fop.fo.expr.PropertyInfo)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/fo/expr/RGBNamedColorFunction/eval(org.apache.fop.fo.properties.Property[],org.apache.fop.fo.expr.PropertyInfo)#org/apache/fop/fo/FObj/getRoot()
org/apache/fop/fo/expr/RGBNamedColorFunction/eval(org.apache.fop.fo.properties.Property[],org.apache.fop.fo.expr.PropertyInfo)#java/lang/StringBuffer/StringBuffer()
org/apache/fop/fo/expr/RGBNamedColorFunction/eval(org.apache.fop.fo.properties.Property[],org.apache.fop.fo.expr.PropertyInfo)#java/lang/StringBuilder/toString()
org/apache/fop/fo/expr/RGBNamedColorFunction/eval(org.apache.fop.fo.properties.Property[],org.apache.fop.fo.expr.PropertyInfo)#java/lang/StringBuffer/append(char)
org/apache/fop/fo/expr/RGBNamedColorFunction/eval(org.apache.fop.fo.properties.Property[],org.apache.fop.fo.expr.PropertyInfo)#java/lang/StringBuffer/append(float)
org/apache/fop/fo/expr/RGBNamedColorFunction/eval(org.apache.fop.fo.properties.Property[],org.apache.fop.fo.expr.PropertyInfo)#java/lang/StringBuffer/append(java.lang.String)
org/apache/fop/fonts/FontReader/endElement(java.lang.String,java.lang.String,java.lang.String)#java/lang/Integer/intValue()
org/apache/fop/fonts/FontReader/endElement(java.lang.String,java.lang.String,java.lang.String)#org/apache/fop/fonts/SingleByteFont/getFontType()
org/apache/fop/fonts/FontReader/endElement(java.lang.String,java.lang.String,java.lang.String)#java/util/HashSet/HashSet()
org/apache/fop/fonts/FontReader/endElement(java.lang.String,java.lang.String,java.lang.String)#java/util/Set/add(java.lang.Object)
org/apache/fop/fonts/FontReader/endElement(java.lang.String,java.lang.String,java.lang.String)#java/lang/String/trim()
org/apache/fop/fonts/FontReader/endElement(java.lang.String,java.lang.String,java.lang.String)#java/util/List/size()
org/apache/fop/fonts/FontReader/endElement(java.lang.String,java.lang.String,java.lang.String)#java/lang/String/equals(java.lang.Object)
org/apache/fop/fonts/FontReader/endElement(java.lang.String,java.lang.String,java.lang.String)#java/lang/StringBuffer/toString()
org/apache/fop/fonts/FontReader/endElement(java.lang.String,java.lang.String,java.lang.String)#java/util/List/toArray(java.lang.Object[])
org/apache/fop/fonts/FontReader/endElement(java.lang.String,java.lang.String,java.lang.String)#org/apache/fop/fonts/MultiByteFont/setCMap(org.apache.fop.fonts.CMapSegment[])
org/apache/fop/fonts/FontReader/endElement(java.lang.String,java.lang.String,java.lang.String)#java/util/List/get(int)
org/apache/fop/fonts/FontReader/endElement(java.lang.String,java.lang.String,java.lang.String)#java/lang/StringBuffer/setLength(int)
org/apache/fop/fonts/FontReader/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/fonts/FontReader/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#java/util/HashMap/HashMap()
org/apache/fop/fonts/FontReader/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#java/lang/String/equals(java.lang.Object)
org/apache/fop/fonts/FontReader/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/fonts/FontReader/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#java/util/List/add(java.lang.Object)
org/apache/fop/fonts/FontReader/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#java/lang/Integer/valueOf(int)
org/apache/fop/fonts/FontReader/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#java/net/URISyntaxException/getMessage()
org/apache/fop/fonts/FontReader/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/fop/fonts/FontReader/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#org/xml/sax/Attributes/getValue(java.lang.String)
org/apache/fop/fonts/FontReader/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#java/util/ArrayList/ArrayList()
org/apache/fop/fonts/FontReader/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#org/xml/sax/SAXException/SAXException(java.lang.String,java.lang.Exception)
org/apache/fop/fonts/FontReader/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#org/apache/fop/fonts/SingleByteFont/setFontType(org.apache.fop.fonts.FontType)
org/apache/fop/fonts/FontReader/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#java/lang/StringBuilder/toString()
org/apache/fop/fonts/FontReader/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#java/lang/NumberFormatException/getMessage()
org/apache/fop/layoutmgr/BlockStackingLayoutManager/updateContentAreaIPDwithOverconstrainedAdjust(int)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/fop/layoutmgr/BlockStackingLayoutManager/updateContentAreaIPDwithOverconstrainedAdjust(int)#org/apache/fop/fo/FObj/getName()
org/apache/fop/layoutmgr/BlockStackingLayoutManager/updateContentAreaIPDwithOverconstrainedAdjust(int)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/layoutmgr/BlockStackingLayoutManager/updateContentAreaIPDwithOverconstrainedAdjust(int)#org/apache/fop/layoutmgr/BlockStackingLayoutManager/getFObj()
org/apache/fop/layoutmgr/BlockStackingLayoutManager/updateContentAreaIPDwithOverconstrainedAdjust(int)#org/apache/fop/fo/FObj/getLocator()
org/apache/fop/layoutmgr/BlockStackingLayoutManager/updateContentAreaIPDwithOverconstrainedAdjust(int)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/layoutmgr/BlockStackingLayoutManager/updateContentAreaIPDwithOverconstrainedAdjust(int)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/fop/layoutmgr/BlockStackingLayoutManager/updateContentAreaIPDwithOverconstrainedAdjust(int)#java/lang/StringBuilder/toString()
org/apache/fop/layoutmgr/BlockStackingLayoutManager/updateContentAreaIPDwithOverconstrainedAdjust(int)#org/apache/fop/fo/FObj/getUserAgent()
org/apache/fop/layoutmgr/BlockStackingLayoutManager/updateContentAreaIPDwithOverconstrainedAdjust(int)#org/apache/fop/layoutmgr/BlockLevelEventProducer$Provider/get(org.apache.fop.events.EventBroadcaster)
org/apache/fop/layoutmgr/BlockStackingLayoutManager/getChangedKnuthElements(java.util.List,int)#java/util/ListIterator/hasNext()
org/apache/fop/layoutmgr/BlockStackingLayoutManager/getChangedKnuthElements(java.util.List,int)#java/util/List/isEmpty()
org/apache/fop/layoutmgr/BlockStackingLayoutManager/getChangedKnuthElements(java.util.List,int)#java/util/List/size()
org/apache/fop/layoutmgr/BlockStackingLayoutManager/getChangedKnuthElements(java.util.List,int)#java/util/List/addAll(java.util.Collection)
org/apache/fop/layoutmgr/BlockStackingLayoutManager/getChangedKnuthElements(java.util.List,int)#java/util/List/add(java.lang.Object)
org/apache/fop/layoutmgr/BlockStackingLayoutManager/getChangedKnuthElements(java.util.List,int)#java/util/List/listIterator()
org/apache/fop/layoutmgr/BlockStackingLayoutManager/getChangedKnuthElements(java.util.List,int)#java/lang/AssertionError/AssertionError()
org/apache/fop/layoutmgr/BlockStackingLayoutManager/getChangedKnuthElements(java.util.List,int)#org/apache/fop/layoutmgr/KnuthElement/getPosition()
org/apache/fop/layoutmgr/BlockStackingLayoutManager/getChangedKnuthElements(java.util.List,int)#org/apache/fop/layoutmgr/KnuthElement/getLayoutManager()
org/apache/fop/layoutmgr/BlockStackingLayoutManager/getChangedKnuthElements(java.util.List,int)#java/util/Iterator/hasNext()
org/apache/fop/layoutmgr/BlockStackingLayoutManager/getChangedKnuthElements(java.util.List,int)#java/util/List/subList(int,int)
org/apache/fop/layoutmgr/BlockStackingLayoutManager/getChangedKnuthElements(java.util.List,int)#java/util/Iterator/next()
org/apache/fop/layoutmgr/BlockStackingLayoutManager/getChangedKnuthElements(java.util.List,int)#java/util/ListIterator/previousIndex()
org/apache/fop/layoutmgr/BlockStackingLayoutManager/getChangedKnuthElements(java.util.List,int)#java/util/ListIterator/next()
org/apache/fop/layoutmgr/BlockStackingLayoutManager/getChangedKnuthElements(java.util.List,int)#java/util/LinkedList/LinkedList()
org/apache/fop/layoutmgr/BlockStackingLayoutManager/getChangedKnuthElements(java.util.List,int)#org/apache/fop/layoutmgr/KnuthElement/isGlue()
org/apache/fop/layoutmgr/BlockStackingLayoutManager/getChangedKnuthElements(java.util.List,int)#org/apache/fop/layoutmgr/KnuthElement/setPosition(org.apache.fop.layoutmgr.Position)
org/apache/fop/layoutmgr/BlockStackingLayoutManager/getChangedKnuthElements(java.util.List,int)#org/apache/fop/layoutmgr/BlockLevelLayoutManager/getChangedKnuthElements(java.util.List,int)
org/apache/fop/layoutmgr/BlockStackingLayoutManager/getChangedKnuthElements(java.util.List,int)#java/util/List/iterator()
org/apache/fop/layoutmgr/BlockStackingLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int,java.util.Stack,org.apache.fop.layoutmgr.Position,org.apache.fop.layoutmgr.LayoutManager)#java/util/Stack/pop()
org/apache/fop/layoutmgr/BlockStackingLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int,java.util.Stack,org.apache.fop.layoutmgr.Position,org.apache.fop.layoutmgr.LayoutManager)#java/util/List/isEmpty()
org/apache/fop/layoutmgr/BlockStackingLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int,java.util.Stack,org.apache.fop.layoutmgr.Position,org.apache.fop.layoutmgr.LayoutManager)#java/util/List/size()
org/apache/fop/layoutmgr/BlockStackingLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int,java.util.Stack,org.apache.fop.layoutmgr.Position,org.apache.fop.layoutmgr.LayoutManager)#java/util/LinkedList/LinkedList()
org/apache/fop/layoutmgr/BlockStackingLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int,java.util.Stack,org.apache.fop.layoutmgr.Position,org.apache.fop.layoutmgr.LayoutManager)#org/apache/fop/layoutmgr/BlockStackingLayoutManager/getChildLM()
org/apache/fop/layoutmgr/BlockStackingLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int,java.util.Stack,org.apache.fop.layoutmgr.Position,org.apache.fop.layoutmgr.LayoutManager)#java/util/List/add(java.lang.Object)
org/apache/fop/layoutmgr/BlockStackingLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int,java.util.Stack,org.apache.fop.layoutmgr.Position,org.apache.fop.layoutmgr.LayoutManager)#org/apache/fop/layoutmgr/BlockStackingLayoutManager/setFinished(boolean)
org/apache/fop/layoutmgr/BlockStackingLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int,java.util.Stack,org.apache.fop.layoutmgr.Position,org.apache.fop.layoutmgr.LayoutManager)#org/apache/fop/layoutmgr/BlockStackingLayoutManager/setCurrentChildLM(org.apache.fop.layoutmgr.LayoutManager)
org/apache/fop/layoutmgr/BlockStackingLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int,java.util.Stack,org.apache.fop.layoutmgr.Position,org.apache.fop.layoutmgr.LayoutManager)#java/util/List/addAll(java.util.Collection)
org/apache/fop/layoutmgr/BlockStackingLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int,java.util.Stack,org.apache.fop.layoutmgr.Position,org.apache.fop.layoutmgr.LayoutManager)#java/util/Stack/isEmpty()
org/apache/fop/layoutmgr/BlockStackingLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int,java.util.Stack,org.apache.fop.layoutmgr.Position,org.apache.fop.layoutmgr.LayoutManager)#java/util/List/get(int)
org/apache/fop/layoutmgr/BlockStackingLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int,java.util.Stack,org.apache.fop.layoutmgr.Position,org.apache.fop.layoutmgr.LayoutManager)#org/apache/fop/layoutmgr/BlockStackingLayoutManager/hasNextChildLM()
org/apache/fop/layoutmgr/BlockStackingLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int,java.util.Stack,org.apache.fop.layoutmgr.Position,org.apache.fop.layoutmgr.LayoutManager)#java/lang/AssertionError/AssertionError()
org/apache/fop/layoutmgr/BlockStackingLayoutManager/updateContentAreaIPDwithOverconstrainedAdjust()#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/fop/layoutmgr/BlockStackingLayoutManager/updateContentAreaIPDwithOverconstrainedAdjust()#org/apache/fop/fo/FObj/getName()
org/apache/fop/layoutmgr/BlockStackingLayoutManager/updateContentAreaIPDwithOverconstrainedAdjust()#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/layoutmgr/BlockStackingLayoutManager/updateContentAreaIPDwithOverconstrainedAdjust()#org/apache/fop/layoutmgr/BlockStackingLayoutManager/getFObj()
org/apache/fop/layoutmgr/BlockStackingLayoutManager/updateContentAreaIPDwithOverconstrainedAdjust()#org/apache/fop/fo/FObj/getLocator()
org/apache/fop/layoutmgr/BlockStackingLayoutManager/updateContentAreaIPDwithOverconstrainedAdjust()#java/lang/StringBuilder/StringBuilder()
org/apache/fop/layoutmgr/BlockStackingLayoutManager/updateContentAreaIPDwithOverconstrainedAdjust()#java/lang/StringBuilder/append(java.lang.Object)
org/apache/fop/layoutmgr/BlockStackingLayoutManager/updateContentAreaIPDwithOverconstrainedAdjust()#java/lang/StringBuilder/toString()
org/apache/fop/layoutmgr/BlockStackingLayoutManager/updateContentAreaIPDwithOverconstrainedAdjust()#org/apache/fop/fo/FObj/getUserAgent()
org/apache/fop/layoutmgr/BlockStackingLayoutManager/updateContentAreaIPDwithOverconstrainedAdjust()#org/apache/fop/layoutmgr/BlockLevelEventProducer$Provider/get(org.apache.fop.events.EventBroadcaster)
org/apache/fop/layoutmgr/BlockStackingLayoutManager/negotiateBPDAdjustment(int,org.apache.fop.layoutmgr.KnuthElement)#java/util/ListIterator/next()
org/apache/fop/layoutmgr/BlockStackingLayoutManager/negotiateBPDAdjustment(int,org.apache.fop.layoutmgr.KnuthElement)#java/util/ListIterator/nextIndex()
org/apache/fop/layoutmgr/BlockStackingLayoutManager/negotiateBPDAdjustment(int,org.apache.fop.layoutmgr.KnuthElement)#java/util/List/get(int)
org/apache/fop/layoutmgr/BlockStackingLayoutManager/negotiateBPDAdjustment(int,org.apache.fop.layoutmgr.KnuthElement)#org/apache/fop/layoutmgr/KnuthElement/getPosition()
org/apache/fop/layoutmgr/BlockStackingLayoutManager/negotiateBPDAdjustment(int,org.apache.fop.layoutmgr.KnuthElement)#org/apache/fop/layoutmgr/BlockStackingLayoutManager$MappingPosition/getLastIndex()
org/apache/fop/layoutmgr/BlockStackingLayoutManager/negotiateBPDAdjustment(int,org.apache.fop.layoutmgr.KnuthElement)#org/apache/fop/layoutmgr/KnuthElement/getLayoutManager()
org/apache/fop/layoutmgr/BlockStackingLayoutManager/negotiateBPDAdjustment(int,org.apache.fop.layoutmgr.KnuthElement)#org/apache/fop/layoutmgr/KnuthElement/isGlue()
org/apache/fop/layoutmgr/BlockStackingLayoutManager/negotiateBPDAdjustment(int,org.apache.fop.layoutmgr.KnuthElement)#org/apache/fop/layoutmgr/BlockStackingLayoutManager$MappingPosition/getFirstIndex()
org/apache/fop/layoutmgr/BlockStackingLayoutManager/negotiateBPDAdjustment(int,org.apache.fop.layoutmgr.KnuthElement)#org/apache/fop/layoutmgr/KnuthElement/setPosition(org.apache.fop.layoutmgr.Position)
org/apache/fop/layoutmgr/BlockStackingLayoutManager/negotiateBPDAdjustment(int,org.apache.fop.layoutmgr.KnuthElement)#org/apache/fop/layoutmgr/KnuthPenalty/getLayoutManager()
org/apache/fop/layoutmgr/BlockStackingLayoutManager/negotiateBPDAdjustment(int,org.apache.fop.layoutmgr.KnuthElement)#org/apache/fop/layoutmgr/KnuthPenalty/getWidth()
org/apache/fop/layoutmgr/BlockStackingLayoutManager/negotiateBPDAdjustment(int,org.apache.fop.layoutmgr.KnuthElement)#org/apache/commons/logging/Log/error(java.lang.Object)
org/apache/fop/layoutmgr/BlockStackingLayoutManager/negotiateBPDAdjustment(int,org.apache.fop.layoutmgr.KnuthElement)#java/lang/AssertionError/AssertionError()
org/apache/fop/layoutmgr/BlockStackingLayoutManager/negotiateBPDAdjustment(int,org.apache.fop.layoutmgr.KnuthElement)#java/util/List/listIterator(int)
org/apache/fop/fo/FOText/textTransform()#java/nio/CharBuffer/get()
org/apache/fop/fo/FOText/textTransform()#java/lang/Character/toLowerCase(char)
org/apache/fop/fo/FOText/textTransform()#java/lang/Character/toUpperCase(char)
org/apache/fop/fo/FOText/textTransform()#java/nio/CharBuffer/put(char)
org/apache/fop/fo/FOText/textTransform()#org/apache/fop/fo/FOText/getBuilderContext()
org/apache/fop/fo/FOText/textTransform()#java/lang/Character/toTitleCase(char)
org/apache/fop/fo/FOText/textTransform()#java/nio/CharBuffer/slice()
org/apache/fop/fo/FOText/textTransform()#java/lang/AssertionError/AssertionError()
org/apache/fop/fo/FOText/textTransform()#java/nio/CharBuffer/rewind()
org/apache/fop/fo/FOText/textTransform()#java/nio/CharBuffer/limit()
org/apache/fop/area/AreaTreeParser/Handler/DestinationMaker/startElement(org.xml.sax.Attributes)#java/util/Stack/push(java.lang.Object)
org/apache/fop/area/AreaTreeParser/Handler/DestinationMaker/startElement(org.xml.sax.Attributes)#org/apache/fop/area/AreaTreeParser$Handler/access$3600(org.apache.fop.area.AreaTreeParser$Handler)
org/apache/fop/area/AreaTreeParser/Handler/DestinationMaker/startElement(org.xml.sax.Attributes)#org/apache/fop/area/Trait$InternalLink/parseXMLAttribute(java.lang.String)
org/apache/fop/area/AreaTreeParser/Handler/DestinationMaker/startElement(org.xml.sax.Attributes)#org/apache/fop/area/AreaTreeParser$Handler/access$3900(org.apache.fop.area.AreaTreeParser$Handler)
org/apache/fop/area/AreaTreeParser/Handler/DestinationMaker/startElement(org.xml.sax.Attributes)#java/util/List/add(java.lang.Object)
org/apache/fop/area/AreaTreeParser/Handler/DestinationMaker/startElement(org.xml.sax.Attributes)#org/xml/sax/Attributes/getValue(java.lang.String)
org/apache/fop/area/AreaTreeParser/Handler/DestinationMaker/startElement(org.xml.sax.Attributes)#java/util/ArrayList/ArrayList()
org/apache/fop/area/AreaTreeParser/Handler/DestinationMaker/startElement(org.xml.sax.Attributes)#java/util/Map/get(java.lang.Object)
org/apache/fop/area/AreaTreeParser/Handler/DestinationMaker/startElement(org.xml.sax.Attributes)#org/apache/fop/area/AreaTreeParser$Handler/access$5600(org.apache.fop.area.AreaTreeParser$Handler)
org/apache/fop/layoutmgr/inline/FloatLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#org/apache/fop/layoutmgr/inline/KnuthInlineBox/setPosition(org.apache.fop.layoutmgr.Position)
org/apache/fop/layoutmgr/inline/FloatLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#org/apache/fop/layoutmgr/inline/FloatLayoutManager/notifyPos(org.apache.fop.layoutmgr.Position)
org/apache/fop/layoutmgr/inline/FloatLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#org/apache/fop/layoutmgr/FloatContentLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)
org/apache/fop/layoutmgr/inline/FloatLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#java/util/LinkedList/add(java.lang.Object)
org/apache/fop/layoutmgr/inline/FloatLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#java/util/LinkedList/LinkedList()
org/apache/fop/layoutmgr/inline/FloatLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#org/apache/fop/layoutmgr/FloatContentLayoutManager/initialize()
org/apache/fop/layoutmgr/inline/FloatLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#org/apache/fop/layoutmgr/FloatContentLayoutManager/setParent(org.apache.fop.layoutmgr.LayoutManager)
org/apache/fop/layoutmgr/inline/FloatLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#org/apache/fop/layoutmgr/inline/FloatLayoutManager/setFinished(boolean)
org/apache/fop/layoutmgr/inline/FloatLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#org/apache/fop/layoutmgr/KnuthSequence/add(java.lang.Object)
org/apache/fop/layoutmgr/PageBreaker/addAreasForFloats(org.apache.fop.layoutmgr.PageBreakingAlgorithm,int,int,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence,org.apache.fop.layoutmgr.LayoutContext,int,int,int)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/fop/layoutmgr/PageBreaker/addAreasForFloats(org.apache.fop.layoutmgr.PageBreakingAlgorithm,int,int,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence,org.apache.fop.layoutmgr.LayoutContext,int,int,int)#java/util/Iterator/hasNext()
org/apache/fop/layoutmgr/PageBreaker/addAreasForFloats(org.apache.fop.layoutmgr.PageBreakingAlgorithm,int,int,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence,org.apache.fop.layoutmgr.LayoutContext,int,int,int)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/layoutmgr/PageBreaker/addAreasForFloats(org.apache.fop.layoutmgr.PageBreakingAlgorithm,int,int,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence,org.apache.fop.layoutmgr.LayoutContext,int,int,int)#org/apache/commons/logging/Log/isDebugEnabled()
org/apache/fop/layoutmgr/PageBreaker/addAreasForFloats(org.apache.fop.layoutmgr.PageBreakingAlgorithm,int,int,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence,org.apache.fop.layoutmgr.LayoutContext,int,int,int)#java/util/Iterator/next()
org/apache/fop/layoutmgr/PageBreaker/addAreasForFloats(org.apache.fop.layoutmgr.PageBreakingAlgorithm,int,int,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence,org.apache.fop.layoutmgr.LayoutContext,int,int,int)#org/apache/fop/layoutmgr/AbstractBreaker$BlockSequence/size()
org/apache/fop/layoutmgr/PageBreaker/addAreasForFloats(org.apache.fop.layoutmgr.PageBreakingAlgorithm,int,int,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence,org.apache.fop.layoutmgr.LayoutContext,int,int,int)#org/apache/fop/layoutmgr/AbstractBreaker$BlockSequence/getStartOn()
org/apache/fop/layoutmgr/PageBreaker/addAreasForFloats(org.apache.fop.layoutmgr.PageBreakingAlgorithm,int,int,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence,org.apache.fop.layoutmgr.LayoutContext,int,int,int)#org/apache/fop/layoutmgr/AbstractBreaker$BlockSequence/get(int)
org/apache/fop/layoutmgr/PageBreaker/addAreasForFloats(org.apache.fop.layoutmgr.PageBreakingAlgorithm,int,int,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence,org.apache.fop.layoutmgr.LayoutContext,int,int,int)#java/lang/StringBuilder/append(int)
org/apache/fop/layoutmgr/PageBreaker/addAreasForFloats(org.apache.fop.layoutmgr.PageBreakingAlgorithm,int,int,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence,org.apache.fop.layoutmgr.LayoutContext,int,int,int)#org/apache/fop/layoutmgr/KnuthElement/isGlue()
org/apache/fop/layoutmgr/PageBreaker/addAreasForFloats(org.apache.fop.layoutmgr.PageBreakingAlgorithm,int,int,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence,org.apache.fop.layoutmgr.LayoutContext,int,int,int)#org/apache/fop/layoutmgr/PageBreaker/getBreakClassName(int)
org/apache/fop/layoutmgr/PageBreaker/addAreasForFloats(org.apache.fop.layoutmgr.PageBreakingAlgorithm,int,int,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence,org.apache.fop.layoutmgr.LayoutContext,int,int,int)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/layoutmgr/PageBreaker/addAreasForFloats(org.apache.fop.layoutmgr.PageBreakingAlgorithm,int,int,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence,org.apache.fop.layoutmgr.LayoutContext,int,int,int)#java/util/List/iterator()
org/apache/fop/layoutmgr/PageBreaker/addAreasForFloats(org.apache.fop.layoutmgr.PageBreakingAlgorithm,int,int,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence,org.apache.fop.layoutmgr.LayoutContext,int,int,int)#org/apache/fop/layoutmgr/AbstractBreaker$BlockSequence/getElement(int)
org/apache/fop/layoutmgr/PageBreaker/addAreasForFloats(org.apache.fop.layoutmgr.PageBreakingAlgorithm,int,int,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence,org.apache.fop.layoutmgr.LayoutContext,int,int,int)#java/lang/StringBuilder/toString()
org/apache/fop/layoutmgr/PageBreaker/addAreasForFloats(org.apache.fop.layoutmgr.PageBreakingAlgorithm,int,int,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence,org.apache.fop.layoutmgr.LayoutContext,int,int,int)#org/apache/fop/layoutmgr/AbstractBreaker$FloatPosition/getLeafPos()
org/apache/fop/layoutmgr/PageBreaker/startPart(org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence,int)#org/apache/fop/layoutmgr/PageSequenceLayoutManager/getCurrentPV()
org/apache/fop/layoutmgr/PageBreaker/startPart(org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence,int)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/fop/layoutmgr/PageBreaker/startPart(org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence,int)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/apache/fop/layoutmgr/PageBreaker/startPart(org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence,int)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/layoutmgr/PageBreaker/startPart(org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence,int)#org/apache/fop/layoutmgr/PageSequenceLayoutManager/getCurrentPage()
org/apache/fop/layoutmgr/PageBreaker/startPart(org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence,int)#org/apache/fop/layoutmgr/PageSequenceLayoutManager/getCurrentPageNum()
org/apache/fop/layoutmgr/PageBreaker/startPart(org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence,int)#org/apache/fop/layoutmgr/PageBreaker/getBreakClassName(int)
org/apache/fop/layoutmgr/PageBreaker/startPart(org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence,int)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/layoutmgr/PageBreaker/startPart(org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence,int)#java/lang/StringBuilder/toString()
org/apache/fop/layoutmgr/PageBreaker/finishPart(org.apache.fop.layoutmgr.PageBreakingAlgorithm,org.apache.fop.layoutmgr.AbstractBreaker$PageBreakPosition)#java/util/Iterator/hasNext()
org/apache/fop/layoutmgr/PageBreaker/finishPart(org.apache.fop.layoutmgr.PageBreakingAlgorithm,org.apache.fop.layoutmgr.AbstractBreaker$PageBreakPosition)#java/util/List/isEmpty()
org/apache/fop/layoutmgr/PageBreaker/finishPart(org.apache.fop.layoutmgr.PageBreakingAlgorithm,org.apache.fop.layoutmgr.AbstractBreaker$PageBreakPosition)#org/apache/fop/area/BodyRegion/getBPD()
org/apache/fop/layoutmgr/PageBreaker/finishPart(org.apache.fop.layoutmgr.PageBreakingAlgorithm,org.apache.fop.layoutmgr.AbstractBreaker$PageBreakPosition)#org/apache/fop/layoutmgr/PageSequenceLayoutManager/getCurrentPV()
org/apache/fop/layoutmgr/PageBreaker/finishPart(org.apache.fop.layoutmgr.PageBreakingAlgorithm,org.apache.fop.layoutmgr.AbstractBreaker$PageBreakPosition)#org/apache/fop/area/Block/getBPD()
org/apache/fop/layoutmgr/PageBreaker/finishPart(org.apache.fop.layoutmgr.PageBreakingAlgorithm,org.apache.fop.layoutmgr.AbstractBreaker$PageBreakPosition)#org/apache/fop/area/Footnote/getBPD()
org/apache/fop/layoutmgr/PageBreaker/finishPart(org.apache.fop.layoutmgr.PageBreakingAlgorithm,org.apache.fop.layoutmgr.AbstractBreaker$PageBreakPosition)#java/util/List/size()
org/apache/fop/layoutmgr/PageBreaker/finishPart(org.apache.fop.layoutmgr.PageBreakingAlgorithm,org.apache.fop.layoutmgr.AbstractBreaker$PageBreakPosition)#java/util/Iterator/next()
org/apache/fop/layoutmgr/PageBreaker/finishPart(org.apache.fop.layoutmgr.PageBreakingAlgorithm,org.apache.fop.layoutmgr.AbstractBreaker$PageBreakPosition)#java/util/List/iterator()
org/apache/fop/layoutmgr/PageBreaker/getFootnoteKnuthElements(org.apache.fop.layoutmgr.FlowLayoutManager,org.apache.fop.layoutmgr.LayoutContext,java.util.List)#org/apache/fop/layoutmgr/PageSequenceLayoutManager/getCurrentPV()
org/apache/fop/layoutmgr/PageBreaker/getFootnoteKnuthElements(org.apache.fop.layoutmgr.FlowLayoutManager,org.apache.fop.layoutmgr.LayoutContext,java.util.List)#java/util/ArrayList/ArrayList()
org/apache/fop/layoutmgr/PageBreaker/getFootnoteKnuthElements(org.apache.fop.layoutmgr.FlowLayoutManager,org.apache.fop.layoutmgr.LayoutContext,java.util.List)#java/util/Iterator/hasNext()
org/apache/fop/layoutmgr/PageBreaker/getFootnoteKnuthElements(org.apache.fop.layoutmgr.FlowLayoutManager,org.apache.fop.layoutmgr.LayoutContext,java.util.List)#java/util/Iterator/next()
org/apache/fop/layoutmgr/PageBreaker/getFootnoteKnuthElements(org.apache.fop.layoutmgr.FlowLayoutManager,org.apache.fop.layoutmgr.LayoutContext,java.util.List)#org/apache/fop/layoutmgr/FootnoteBodyLayoutManager/setParent(org.apache.fop.layoutmgr.LayoutManager)
org/apache/fop/layoutmgr/PageBreaker/getFootnoteKnuthElements(org.apache.fop.layoutmgr.FlowLayoutManager,org.apache.fop.layoutmgr.LayoutContext,java.util.List)#java/util/List/add(java.lang.Object)
org/apache/fop/layoutmgr/PageBreaker/getFootnoteKnuthElements(org.apache.fop.layoutmgr.FlowLayoutManager,org.apache.fop.layoutmgr.LayoutContext,java.util.List)#org/apache/fop/layoutmgr/FootnoteBodyLayoutManager/initialize()
org/apache/fop/layoutmgr/PageBreaker/getFootnoteKnuthElements(org.apache.fop.layoutmgr.FlowLayoutManager,org.apache.fop.layoutmgr.LayoutContext,java.util.List)#org/apache/fop/area/RegionReference/getIPD()
org/apache/fop/layoutmgr/PageBreaker/getFootnoteKnuthElements(org.apache.fop.layoutmgr.FlowLayoutManager,org.apache.fop.layoutmgr.LayoutContext,java.util.List)#java/util/List/iterator()
org/apache/fop/layoutmgr/PageBreaker/getFootnoteKnuthElements(org.apache.fop.layoutmgr.FlowLayoutManager,org.apache.fop.layoutmgr.LayoutContext,java.util.List)#org/apache/fop/layoutmgr/FlowLayoutManager/getPSLM()
org/apache/fop/layoutmgr/PageBreaker/redoLayout(org.apache.fop.layoutmgr.PageBreakingAlgorithm,int,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence)#org/apache/fop/layoutmgr/PageBreaker/addAreas(org.apache.fop.layoutmgr.PageBreakingAlgorithm,int,int,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence)
org/apache/fop/layoutmgr/PageBreaker/redoLayout(org.apache.fop.layoutmgr.PageBreakingAlgorithm,int,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence)#java/util/LinkedList/size()
org/apache/fop/layoutmgr/PageBreaker/redoLayout(org.apache.fop.layoutmgr.PageBreakingAlgorithm,int,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence)#org/apache/fop/layoutmgr/PageSequenceLayoutManager/setCurrentPage(org.apache.fop.layoutmgr.Page)
org/apache/fop/layoutmgr/PageBreaker/redoLayout(org.apache.fop.layoutmgr.PageBreakingAlgorithm,int,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence)#org/apache/fop/layoutmgr/PageSequenceLayoutManager/getCurrentPV()
org/apache/fop/layoutmgr/PageBreaker/redoLayout(org.apache.fop.layoutmgr.PageBreakingAlgorithm,int,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/fop/layoutmgr/PageBreaker/redoLayout(org.apache.fop.layoutmgr.PageBreakingAlgorithm,int,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence)#org/apache/fop/layoutmgr/PageBreaker/isPartOverflowRecoveryActivated()
org/apache/fop/layoutmgr/PageBreaker/redoLayout(org.apache.fop.layoutmgr.PageBreakingAlgorithm,int,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence)#org/apache/commons/logging/Log/warn(java.lang.Object)
org/apache/fop/layoutmgr/PageBreaker/redoLayout(org.apache.fop.layoutmgr.PageBreakingAlgorithm,int,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/layoutmgr/PageBreaker/redoLayout(org.apache.fop.layoutmgr.PageBreakingAlgorithm,int,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence)#java/lang/StringBuilder/append(int)
org/apache/fop/layoutmgr/PageBreaker/redoLayout(org.apache.fop.layoutmgr.PageBreakingAlgorithm,int,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence)#org/apache/fop/layoutmgr/PageBreakingAlgorithm/findBreakingPoints(org.apache.fop.layoutmgr.KnuthSequence,int,double,boolean,int)
org/apache/fop/layoutmgr/PageBreaker/redoLayout(org.apache.fop.layoutmgr.PageBreakingAlgorithm,int,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence)#org/apache/fop/layoutmgr/AbstractBreaker$PageBreakPosition/getLeafPos()
org/apache/fop/layoutmgr/PageBreaker/redoLayout(org.apache.fop.layoutmgr.PageBreakingAlgorithm,int,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence)#org/apache/fop/layoutmgr/PageBreaker/addAreas(org.apache.fop.layoutmgr.PageBreakingAlgorithm,int,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence)
org/apache/fop/layoutmgr/PageBreaker/redoLayout(org.apache.fop.layoutmgr.PageBreakingAlgorithm,int,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence)#org/apache/fop/layoutmgr/PageBreakingAlgorithm/getAlignmentLast()
org/apache/fop/layoutmgr/PageBreaker/redoLayout(org.apache.fop.layoutmgr.PageBreakingAlgorithm,int,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence)#org/apache/fop/layoutmgr/PageSequenceLayoutManager/getCurrentPageNum()
org/apache/fop/layoutmgr/PageBreaker/redoLayout(org.apache.fop.layoutmgr.PageBreakingAlgorithm,int,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/layoutmgr/PageBreaker/redoLayout(org.apache.fop.layoutmgr.PageBreakingAlgorithm,int,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence)#org/apache/fop/layoutmgr/PageBreakingAlgorithm/getAlignment()
org/apache/fop/layoutmgr/PageBreaker/redoLayout(org.apache.fop.layoutmgr.PageBreakingAlgorithm,int,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence)#java/lang/StringBuilder/toString()
org/apache/fop/layoutmgr/PageBreaker/redoLayout(org.apache.fop.layoutmgr.PageBreakingAlgorithm,int,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence)#java/util/LinkedList/get(int)
org/apache/fop/layoutmgr/PageBreaker/handleFloatLayout(org.apache.fop.layoutmgr.PageBreakingAlgorithm,int,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence,org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/layoutmgr/KnuthElement/getPosition()
org/apache/fop/layoutmgr/PageBreaker/handleFloatLayout(org.apache.fop.layoutmgr.PageBreakingAlgorithm,int,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence,org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/layoutmgr/PageBreakingAlgorithm/getElement(int)
org/apache/fop/layoutmgr/PageBreaker/handleFloatLayout(org.apache.fop.layoutmgr.PageBreakingAlgorithm,int,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence,org.apache.fop.layoutmgr.LayoutContext)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/layoutmgr/PageBreaker/handleFloatLayout(org.apache.fop.layoutmgr.PageBreakingAlgorithm,int,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence,org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/layoutmgr/PageBreaker/addAreas(org.apache.fop.layoutmgr.PageBreakingAlgorithm,int,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence)
org/apache/fop/layoutmgr/PageBreaker/handleFloatLayout(org.apache.fop.layoutmgr.PageBreakingAlgorithm,int,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence,org.apache.fop.layoutmgr.LayoutContext)#java/util/Iterator/next()
org/apache/fop/layoutmgr/PageBreaker/handleFloatLayout(org.apache.fop.layoutmgr.PageBreakingAlgorithm,int,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence,org.apache.fop.layoutmgr.LayoutContext)#java/util/List/clear()
org/apache/fop/layoutmgr/PageBreaker/handleFloatLayout(org.apache.fop.layoutmgr.PageBreakingAlgorithm,int,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence,org.apache.fop.layoutmgr.LayoutContext)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/fop/layoutmgr/PageBreaker/handleFloatLayout(org.apache.fop.layoutmgr.PageBreakingAlgorithm,int,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence,org.apache.fop.layoutmgr.LayoutContext)#java/lang/StringBuilder/toString()
org/apache/fop/layoutmgr/PageBreaker/handleFloatLayout(org.apache.fop.layoutmgr.PageBreakingAlgorithm,int,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence,org.apache.fop.layoutmgr.LayoutContext)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/layoutmgr/PageBreaker/handleFloatLayout(org.apache.fop.layoutmgr.PageBreakingAlgorithm,int,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence,org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/layoutmgr/AbstractBreaker$BlockSequence/listIterator(int)
org/apache/fop/layoutmgr/PageBreaker/handleFloatLayout(org.apache.fop.layoutmgr.PageBreakingAlgorithm,int,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence,org.apache.fop.layoutmgr.LayoutContext)#java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)
org/apache/fop/layoutmgr/PageBreaker/handleBreakTrait(int)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/fop/layoutmgr/PageBreaker/handleBreakTrait(int)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/layoutmgr/PageBreaker/handleBreakTrait(int)#org/apache/fop/layoutmgr/PageSequenceLayoutManager/getCurrentPage()
org/apache/fop/layoutmgr/PageBreaker/handleBreakTrait(int)#java/lang/StringBuilder/append(int)
org/apache/fop/layoutmgr/PageBreaker/handleBreakTrait(int)#org/apache/fop/layoutmgr/PageSequenceLayoutManager/getCurrentPageNum()
org/apache/fop/layoutmgr/PageBreaker/handleBreakTrait(int)#org/apache/fop/layoutmgr/PageBreaker/getBreakClassName(int)
org/apache/fop/layoutmgr/PageBreaker/handleBreakTrait(int)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/layoutmgr/PageBreaker/handleBreakTrait(int)#org/apache/commons/logging/Log/trace(java.lang.Object)
org/apache/fop/layoutmgr/PageBreaker/handleBreakTrait(int)#java/lang/StringBuilder/toString()
org/apache/fop/layoutmgr/ExternalDocumentLayoutManager/activateLayout()#org/apache/xmlgraphics/image/loader/ImageManager/getImageInfo(java.lang.String,org.apache.xmlgraphics.image.loader.ImageSessionContext)
org/apache/fop/layoutmgr/ExternalDocumentLayoutManager/activateLayout()#java/lang/Boolean/equals(java.lang.Object)
org/apache/fop/layoutmgr/ExternalDocumentLayoutManager/activateLayout()#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/fop/layoutmgr/ExternalDocumentLayoutManager/activateLayout()#org/apache/fop/fo/pagination/AbstractPageSequence/getUserAgent()
org/apache/fop/layoutmgr/ExternalDocumentLayoutManager/activateLayout()#java/net/URI/getScheme()
org/apache/fop/layoutmgr/ExternalDocumentLayoutManager/activateLayout()#java/net/URI/getSchemeSpecificPart()
org/apache/fop/layoutmgr/ExternalDocumentLayoutManager/activateLayout()#org/apache/commons/logging/Log/isTraceEnabled()
org/apache/fop/layoutmgr/ExternalDocumentLayoutManager/activateLayout()#org/apache/fop/layoutmgr/ExternalDocumentLayoutManager/initialize()
org/apache/fop/layoutmgr/ExternalDocumentLayoutManager/activateLayout()#org/apache/xmlgraphics/image/loader/ImageSize/getDimensionMpt()
org/apache/fop/layoutmgr/ExternalDocumentLayoutManager/activateLayout()#java/net/URI/URI(java.lang.String)
org/apache/fop/layoutmgr/ExternalDocumentLayoutManager/activateLayout()#java/net/URI/URI(java.lang.String,java.lang.String,java.lang.String)
org/apache/fop/layoutmgr/ExternalDocumentLayoutManager/activateLayout()#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/layoutmgr/ExternalDocumentLayoutManager/activateLayout()#org/apache/xmlgraphics/image/loader/ImageInfo/getSize()
org/apache/fop/layoutmgr/ExternalDocumentLayoutManager/activateLayout()#java/lang/Integer/toString(int)
org/apache/fop/layoutmgr/ExternalDocumentLayoutManager/activateLayout()#org/apache/commons/logging/Log/isDebugEnabled()
org/apache/fop/layoutmgr/ExternalDocumentLayoutManager/activateLayout()#java/util/Map/get(java.lang.Object)
org/apache/fop/layoutmgr/ExternalDocumentLayoutManager/activateLayout()#org/apache/fop/fo/extensions/ExternalDocument/getLocator()
org/apache/fop/layoutmgr/ExternalDocumentLayoutManager/activateLayout()#org/apache/xmlgraphics/image/loader/util/ImageUtil/getPageIndexFromURI(java.lang.String)
org/apache/fop/layoutmgr/ExternalDocumentLayoutManager/activateLayout()#org/apache/xmlgraphics/image/loader/ImageInfo/getCustomObjects()
org/apache/fop/layoutmgr/ExternalDocumentLayoutManager/activateLayout()#java/lang/StringBuilder/StringBuilder()
org/apache/fop/layoutmgr/ExternalDocumentLayoutManager/activateLayout()#org/apache/commons/logging/Log/trace(java.lang.Object)
org/apache/fop/layoutmgr/ExternalDocumentLayoutManager/activateLayout()#org/apache/fop/layoutmgr/ExternalDocumentLayoutManager/transferExtensions(org.apache.fop.area.AreaTreeObject)
org/apache/fop/layoutmgr/ExternalDocumentLayoutManager/activateLayout()#java/lang/StringBuilder/toString()
org/apache/fop/layoutmgr/ExternalDocumentLayoutManager/activateLayout()#java/net/URI/toASCIIString()
org/apache/fop/render/gradient/Function/output(java.lang.StringBuilder,org.apache.fop.render.gradient.GradientMaker$DoubleFormatter,org.apache.fop.render.gradient.Function$SubFunctionRenderer)#java/lang/StringBuilder/append(int)
org/apache/fop/render/gradient/Function/output(java.lang.StringBuilder,org.apache.fop.render.gradient.GradientMaker$DoubleFormatter,org.apache.fop.render.gradient.Function$SubFunctionRenderer)#java/util/List/isEmpty()
org/apache/fop/render/gradient/Function/output(java.lang.StringBuilder,org.apache.fop.render.gradient.GradientMaker$DoubleFormatter,org.apache.fop.render.gradient.Function$SubFunctionRenderer)#java/util/List/size()
org/apache/fop/render/gradient/Function/output(java.lang.StringBuilder,org.apache.fop.render.gradient.GradientMaker$DoubleFormatter,org.apache.fop.render.gradient.Function$SubFunctionRenderer)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/render/gradient/Function/output(java.lang.StringBuilder,org.apache.fop.render.gradient.GradientMaker$DoubleFormatter,org.apache.fop.render.gradient.Function$SubFunctionRenderer)#org/apache/fop/render/gradient/GradientMaker$DoubleFormatter/formatDouble(double)
org/apache/fop/render/gradient/Function/output(java.lang.StringBuilder,org.apache.fop.render.gradient.GradientMaker$DoubleFormatter,org.apache.fop.render.gradient.Function$SubFunctionRenderer)#org/apache/fop/render/gradient/Function$SubFunctionRenderer/outputFunction(java.lang.StringBuilder,int)
org/apache/fop/render/gradient/Function/output(java.lang.StringBuilder,org.apache.fop.render.gradient.GradientMaker$DoubleFormatter,org.apache.fop.render.gradient.Function$SubFunctionRenderer)#java/lang/StringBuilder/toString()
org/apache/fop/render/gradient/Function/output(java.lang.StringBuilder,org.apache.fop.render.gradient.GradientMaker$DoubleFormatter,org.apache.fop.render.gradient.Function$SubFunctionRenderer)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/render/gradient/Function/output(java.lang.StringBuilder,org.apache.fop.render.gradient.GradientMaker$DoubleFormatter,org.apache.fop.render.gradient.Function$SubFunctionRenderer)#java/lang/StringBuilder/append(char)
org/apache/fop/layoutmgr/table/RowGroupLayoutManager/createElementsForRowGroup(org.apache.fop.layoutmgr.LayoutContext,int,int,java.util.LinkedList)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/fop/layoutmgr/table/RowGroupLayoutManager/createElementsForRowGroup(org.apache.fop.layoutmgr.LayoutContext,int,int,java.util.LinkedList)#java/lang/StringBuilder/append(int)
org/apache/fop/layoutmgr/table/RowGroupLayoutManager/createElementsForRowGroup(org.apache.fop.layoutmgr.LayoutContext,int,int,java.util.LinkedList)#java/util/Iterator/next()
org/apache/fop/layoutmgr/table/RowGroupLayoutManager/createElementsForRowGroup(org.apache.fop.layoutmgr.LayoutContext,int,int,java.util.LinkedList)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/layoutmgr/table/RowGroupLayoutManager/createElementsForRowGroup(org.apache.fop.layoutmgr.LayoutContext,int,int,java.util.LinkedList)#org/apache/fop/fo/flow/table/PrimaryGridUnit/getCell()
org/apache/fop/layoutmgr/table/RowGroupLayoutManager/createElementsForRowGroup(org.apache.fop.layoutmgr.LayoutContext,int,int,java.util.LinkedList)#java/util/Iterator/hasNext()
org/apache/fop/layoutmgr/table/RowGroupLayoutManager/createElementsForRowGroup(org.apache.fop.layoutmgr.LayoutContext,int,int,java.util.LinkedList)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/layoutmgr/table/RowGroupLayoutManager/createElementsForRowGroup(org.apache.fop.layoutmgr.LayoutContext,int,int,java.util.LinkedList)#org/apache/fop/fo/flow/table/TableCell/getId()
org/apache/fop/layoutmgr/table/RowGroupLayoutManager/createElementsForRowGroup(org.apache.fop.layoutmgr.LayoutContext,int,int,java.util.LinkedList)#java/util/LinkedList/addAll(java.util.Collection)
org/apache/fop/layoutmgr/table/RowGroupLayoutManager/createElementsForRowGroup(org.apache.fop.layoutmgr.LayoutContext,int,int,java.util.LinkedList)#java/util/List/iterator()
org/apache/fop/layoutmgr/table/RowGroupLayoutManager/createElementsForRowGroup(org.apache.fop.layoutmgr.LayoutContext,int,int,java.util.LinkedList)#java/util/List/listIterator(int)
org/apache/fop/layoutmgr/table/RowGroupLayoutManager/createElementsForRowGroup(org.apache.fop.layoutmgr.LayoutContext,int,int,java.util.LinkedList)#java/lang/StringBuilder/toString()
org/apache/fop/fonts/type1/AFMParser/BooleanSetter/parse(java.lang.String,int,java.util.Stack)#org/apache/fop/fonts/type1/AFMParser$BooleanSetter/getContextObject(java.util.Stack)
org/apache/fop/fonts/type1/AFMParser/BooleanSetter/parse(java.lang.String,int,java.util.Stack)#java/lang/Class/getMethod(java.lang.String,java.lang.Class[])
org/apache/fop/fonts/type1/AFMParser/BooleanSetter/parse(java.lang.String,int,java.util.Stack)#org/apache/fop/fonts/type1/AFMParser$BooleanSetter/getBooleanValue(java.lang.String,int)
org/apache/fop/fonts/type1/AFMParser/BooleanSetter/parse(java.lang.String,int,java.util.Stack)#java/lang/reflect/InvocationTargetException/getMessage()
org/apache/fop/fonts/type1/AFMParser/BooleanSetter/parse(java.lang.String,int,java.util.Stack)#java/lang/IllegalAccessException/getMessage()
org/apache/fop/fonts/type1/AFMParser/BooleanSetter/parse(java.lang.String,int,java.util.Stack)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/fonts/type1/AFMParser/BooleanSetter/parse(java.lang.String,int,java.util.Stack)#java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)
org/apache/fop/fonts/type1/AFMParser/BooleanSetter/parse(java.lang.String,int,java.util.Stack)#java/lang/Object/getClass()
org/apache/fop/fonts/type1/AFMParser/BooleanSetter/parse(java.lang.String,int,java.util.Stack)#java/lang/reflect/Method/invoke(java.lang.Object,java.lang.Object[])
org/apache/fop/fonts/type1/AFMParser/BooleanSetter/parse(java.lang.String,int,java.util.Stack)#java/lang/StringBuilder/toString()
org/apache/fop/fonts/type1/AFMParser/BooleanSetter/parse(java.lang.String,int,java.util.Stack)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/fonts/type1/AFMParser/BooleanSetter/parse(java.lang.String,int,java.util.Stack)#java/lang/NoSuchMethodException/getMessage()
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfColorTable/writeColors(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfHeader)#java/lang/Integer/intValue()
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfColorTable/writeColors(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfHeader)#org/apache/fop/render/rtf/rtflib/rtfdoc/RtfHeader/writeGroupMark(boolean)
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfColorTable/writeColors(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfHeader)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfColorTable/writeColors(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfHeader)#java/util/Vector/size()
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfColorTable/writeColors(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfHeader)#java/lang/StringBuilder/append(int)
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfColorTable/writeColors(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfHeader)#java/util/Vector/get(int)
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfColorTable/writeColors(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfHeader)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfColorTable/writeColors(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfHeader)#java/lang/StringBuilder/toString()
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfColorTable/writeColors(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfHeader)#org/apache/fop/render/rtf/rtflib/rtfdoc/RtfHeader/newLine()
org/apache/fop/svg/NativeTextPainter/paintTextRun(org.apache.batik.bridge.StrokingTextPainter$TextRun,java.awt.Graphics2D)#org/apache/batik/gvt/font/GVTGlyphVector/getFont()
org/apache/fop/svg/NativeTextPainter/paintTextRun(org.apache.batik.bridge.StrokingTextPainter$TextRun,java.awt.Graphics2D)#java/awt/Graphics2D/getTransform()
org/apache/fop/svg/NativeTextPainter/paintTextRun(org.apache.batik.bridge.StrokingTextPainter$TextRun,java.awt.Graphics2D)#org/apache/batik/bridge/TextSpanLayout/getGlyphVector()
org/apache/fop/svg/NativeTextPainter/paintTextRun(org.apache.batik.bridge.StrokingTextPainter$TextRun,java.awt.Graphics2D)#org/apache/commons/logging/Log/isDebugEnabled()
org/apache/fop/svg/NativeTextPainter/paintTextRun(org.apache.batik.bridge.StrokingTextPainter$TextRun,java.awt.Graphics2D)#java/awt/Graphics2D/draw(java.awt.Shape)
org/apache/fop/svg/NativeTextPainter/paintTextRun(org.apache.batik.bridge.StrokingTextPainter$TextRun,java.awt.Graphics2D)#java/awt/Graphics2D/getClip()
org/apache/fop/svg/NativeTextPainter/paintTextRun(org.apache.batik.bridge.StrokingTextPainter$TextRun,java.awt.Graphics2D)#org/apache/batik/bridge/StrokingTextPainter$TextRun/getACI()
org/apache/fop/svg/NativeTextPainter/paintTextRun(org.apache.batik.bridge.StrokingTextPainter$TextRun,java.awt.Graphics2D)#java/text/AttributedCharacterIterator/getAttribute(java.text.AttributedCharacterIterator$Attribute)
org/apache/fop/svg/NativeTextPainter/paintTextRun(org.apache.batik.bridge.StrokingTextPainter$TextRun,java.awt.Graphics2D)#java/awt/Graphics2D/setComposite(java.awt.Composite)
org/apache/fop/svg/NativeTextPainter/paintTextRun(org.apache.batik.bridge.StrokingTextPainter$TextRun,java.awt.Graphics2D)#java/awt/Graphics2D/setColor(java.awt.Color)
org/apache/fop/svg/NativeTextPainter/paintTextRun(org.apache.batik.bridge.StrokingTextPainter$TextRun,java.awt.Graphics2D)#java/awt/Graphics2D/setStroke(java.awt.Stroke)
org/apache/fop/svg/NativeTextPainter/paintTextRun(org.apache.batik.bridge.StrokingTextPainter$TextRun,java.awt.Graphics2D)#java/text/AttributedCharacterIterator/first()
org/apache/fop/svg/NativeTextPainter/paintTextRun(org.apache.batik.bridge.StrokingTextPainter$TextRun,java.awt.Graphics2D)#org/apache/batik/bridge/TextSpanLayout/draw(java.awt.Graphics2D)
org/apache/fop/svg/NativeTextPainter/paintTextRun(org.apache.batik.bridge.StrokingTextPainter$TextRun,java.awt.Graphics2D)#java/awt/BasicStroke/BasicStroke(float)
org/apache/fop/svg/NativeTextPainter/paintTextRun(org.apache.batik.bridge.StrokingTextPainter$TextRun,java.awt.Graphics2D)#org/apache/batik/bridge/StrokingTextPainter$TextRun/getLayout()
org/apache/fop/svg/NativeTextPainter/paintTextRun(org.apache.batik.bridge.StrokingTextPainter$TextRun,java.awt.Graphics2D)#java/awt/geom/GeneralPath/GeneralPath()
org/apache/fop/svg/NativeTextPainter/paintTextRun(org.apache.batik.bridge.StrokingTextPainter$TextRun,java.awt.Graphics2D)#java/lang/AssertionError/AssertionError()
org/apache/fop/svg/NativeTextPainter/logCharacter(char,org.apache.batik.bridge.TextSpanLayout,int,boolean)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/svg/NativeTextPainter/logCharacter(char,org.apache.batik.bridge.TextSpanLayout,int,boolean)#java/lang/StringBuilder/append(int)
org/apache/fop/svg/NativeTextPainter/logCharacter(char,org.apache.batik.bridge.TextSpanLayout,int,boolean)#org/apache/commons/logging/Log/isTraceEnabled()
org/apache/fop/svg/NativeTextPainter/logCharacter(char,org.apache.batik.bridge.TextSpanLayout,int,boolean)#java/lang/StringBuilder/toString()
org/apache/fop/svg/NativeTextPainter/logCharacter(char,org.apache.batik.bridge.TextSpanLayout,int,boolean)#java/lang/Integer/toHexString(int)
org/apache/fop/svg/NativeTextPainter/logCharacter(char,org.apache.batik.bridge.TextSpanLayout,int,boolean)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/svg/NativeTextPainter/logCharacter(char,org.apache.batik.bridge.TextSpanLayout,int,boolean)#org/apache/commons/logging/Log/trace(java.lang.Object)
org/apache/fop/svg/NativeTextPainter/logCharacter(char,org.apache.batik.bridge.TextSpanLayout,int,boolean)#org/apache/batik/bridge/TextSpanLayout/getGlyphIndex(int)
org/apache/fop/svg/NativeTextPainter/logCharacter(char,org.apache.batik.bridge.TextSpanLayout,int,boolean)#java/lang/StringBuilder/append(char)
org/apache/fop/svg/NativeTextPainter/paintTextRuns(java.util.List,java.awt.Graphics2D)#org/apache/batik/bridge/StrokingTextPainter/paintTextRuns(java.util.List,java.awt.Graphics2D)
org/apache/fop/svg/NativeTextPainter/paintTextRuns(java.util.List,java.awt.Graphics2D)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/svg/NativeTextPainter/paintTextRuns(java.util.List,java.awt.Graphics2D)#java/util/List/size()
org/apache/fop/svg/NativeTextPainter/paintTextRuns(java.util.List,java.awt.Graphics2D)#java/util/List/get(int)
org/apache/fop/svg/NativeTextPainter/paintTextRuns(java.util.List,java.awt.Graphics2D)#org/apache/commons/logging/Log/isTraceEnabled()
org/apache/fop/svg/NativeTextPainter/paintTextRuns(java.util.List,java.awt.Graphics2D)#java/lang/StringBuilder/toString()
org/apache/fop/svg/NativeTextPainter/paintTextRuns(java.util.List,java.awt.Graphics2D)#java/lang/RuntimeException/RuntimeException(java.lang.Throwable)
org/apache/fop/svg/NativeTextPainter/paintTextRuns(java.util.List,java.awt.Graphics2D)#java/lang/StringBuilder/append(int)
org/apache/fop/svg/NativeTextPainter/paintTextRuns(java.util.List,java.awt.Graphics2D)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/svg/NativeTextPainter/paintTextRuns(java.util.List,java.awt.Graphics2D)#org/apache/commons/logging/Log/trace(java.lang.Object)
org/apache/fop/svg/NativeTextPainter/logTextRun(org.apache.batik.bridge.StrokingTextPainter$TextRun)#java/text/AttributedCharacterIterator/getBeginIndex()
org/apache/fop/svg/NativeTextPainter/logTextRun(org.apache.batik.bridge.StrokingTextPainter$TextRun)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/svg/NativeTextPainter/logTextRun(org.apache.batik.bridge.StrokingTextPainter$TextRun)#java/lang/StringBuilder/append(int)
org/apache/fop/svg/NativeTextPainter/logTextRun(org.apache.batik.bridge.StrokingTextPainter$TextRun)#org/apache/batik/bridge/StrokingTextPainter$TextRun/getACI()
org/apache/fop/svg/NativeTextPainter/logTextRun(org.apache.batik.bridge.StrokingTextPainter$TextRun)#java/text/AttributedCharacterIterator/first()
org/apache/fop/svg/NativeTextPainter/logTextRun(org.apache.batik.bridge.StrokingTextPainter$TextRun)#org/apache/batik/bridge/StrokingTextPainter$TextRun/getLayout()
org/apache/fop/svg/NativeTextPainter/logTextRun(org.apache.batik.bridge.StrokingTextPainter$TextRun)#org/apache/commons/logging/Log/isTraceEnabled()
org/apache/fop/svg/NativeTextPainter/logTextRun(org.apache.batik.bridge.StrokingTextPainter$TextRun)#org/apache/batik/bridge/TextSpanLayout/getGlyphCount()
org/apache/fop/svg/NativeTextPainter/logTextRun(org.apache.batik.bridge.StrokingTextPainter$TextRun)#java/lang/StringBuilder/toString()
org/apache/fop/svg/NativeTextPainter/logTextRun(org.apache.batik.bridge.StrokingTextPainter$TextRun)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/svg/NativeTextPainter/logTextRun(org.apache.batik.bridge.StrokingTextPainter$TextRun)#java/text/AttributedCharacterIterator/getEndIndex()
org/apache/fop/svg/NativeTextPainter/logTextRun(org.apache.batik.bridge.StrokingTextPainter$TextRun)#org/apache/commons/logging/Log/trace(java.lang.Object)
org/apache/fop/svg/NativeTextPainter/writeGlyphs(org.apache.fop.svg.font.FOPGVTGlyphVector,java.awt.geom.GeneralPath)#java/awt/geom/AffineTransform/setToIdentity()
org/apache/fop/svg/NativeTextPainter/writeGlyphs(org.apache.fop.svg.font.FOPGVTGlyphVector,java.awt.geom.GeneralPath)#java/awt/geom/AffineTransform/translate(double,double)
org/apache/fop/svg/NativeTextPainter/writeGlyphs(org.apache.fop.svg.font.FOPGVTGlyphVector,java.awt.geom.GeneralPath)#java/awt/geom/GeneralPath/append(java.awt.Shape,boolean)
org/apache/fop/svg/NativeTextPainter/writeGlyphs(org.apache.fop.svg.font.FOPGVTGlyphVector,java.awt.geom.GeneralPath)#java/awt/geom/AffineTransform/scale(double,double)
org/apache/fop/svg/NativeTextPainter/writeGlyphs(org.apache.fop.svg.font.FOPGVTGlyphVector,java.awt.geom.GeneralPath)#java/awt/geom/AffineTransform/concatenate(java.awt.geom.AffineTransform)
org/apache/fop/svg/NativeTextPainter/writeGlyphs(org.apache.fop.svg.font.FOPGVTGlyphVector,java.awt.geom.GeneralPath)#java/awt/geom/Point2D/getX()
org/apache/fop/svg/NativeTextPainter/writeGlyphs(org.apache.fop.svg.font.FOPGVTGlyphVector,java.awt.geom.GeneralPath)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/svg/NativeTextPainter/writeGlyphs(org.apache.fop.svg.font.FOPGVTGlyphVector,java.awt.geom.GeneralPath)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/svg/NativeTextPainter/writeGlyphs(org.apache.fop.svg.font.FOPGVTGlyphVector,java.awt.geom.GeneralPath)#org/apache/commons/logging/Log/trace(java.lang.Object)
org/apache/fop/svg/NativeTextPainter/writeGlyphs(org.apache.fop.svg.font.FOPGVTGlyphVector,java.awt.geom.GeneralPath)#java/awt/geom/AffineTransform/AffineTransform()
org/apache/fop/svg/NativeTextPainter/writeGlyphs(org.apache.fop.svg.font.FOPGVTGlyphVector,java.awt.geom.GeneralPath)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/fop/svg/NativeTextPainter/writeGlyphs(org.apache.fop.svg.font.FOPGVTGlyphVector,java.awt.geom.GeneralPath)#org/apache/commons/logging/Log/isTraceEnabled()
org/apache/fop/svg/NativeTextPainter/writeGlyphs(org.apache.fop.svg.font.FOPGVTGlyphVector,java.awt.geom.GeneralPath)#java/lang/StringBuilder/toString()
org/apache/fop/svg/NativeTextPainter/writeGlyphs(org.apache.fop.svg.font.FOPGVTGlyphVector,java.awt.geom.GeneralPath)#java/awt/geom/Point2D/getY()
org/apache/fop/svg/NativeTextPainter/writeGlyphs(org.apache.fop.svg.font.FOPGVTGlyphVector,java.awt.geom.GeneralPath)#java/awt/geom/Ellipse2D$Double/Double(double,double,double,double)
org/apache/fop/layoutmgr/BalancingColumnBreakingAlgorithm/getElementIdBreaks(java.util.List,int)#java/util/ArrayList/ArrayList()
org/apache/fop/layoutmgr/BalancingColumnBreakingAlgorithm/getElementIdBreaks(java.util.List,int)#java/util/Iterator/hasNext()
org/apache/fop/layoutmgr/BalancingColumnBreakingAlgorithm/getElementIdBreaks(java.util.List,int)#java/util/List/size()
org/apache/fop/layoutmgr/BalancingColumnBreakingAlgorithm/getElementIdBreaks(java.util.List,int)#java/util/Iterator/next()
org/apache/fop/layoutmgr/BalancingColumnBreakingAlgorithm/getElementIdBreaks(java.util.List,int)#java/util/List/add(java.lang.Object)
org/apache/fop/layoutmgr/BalancingColumnBreakingAlgorithm/getElementIdBreaks(java.util.List,int)#org/apache/fop/layoutmgr/BalancingColumnBreakingAlgorithm$ColumnContent/equals(java.lang.Object)
org/apache/fop/layoutmgr/BalancingColumnBreakingAlgorithm/getElementIdBreaks(java.util.List,int)#java/util/List/iterator()
org/apache/fop/layoutmgr/BalancingColumnBreakingAlgorithm/getElementIdBreaks(java.util.List,int)#java/lang/Integer/valueOf(int)
org/apache/fop/layoutmgr/BalancingColumnBreakingAlgorithm/getElementIdBreaks(java.util.List,int)#java/util/List/get(int)
org/apache/fop/render/ps/PSGraphics2DAdapter/paintImage(org.apache.xmlgraphics.java2d.Graphics2DImagePainter,org.apache.fop.render.RendererContext,int,int,int,int)#org/apache/xmlgraphics/java2d/Graphics2DImagePainter/paint(java.awt.Graphics2D,java.awt.geom.Rectangle2D)
org/apache/fop/render/ps/PSGraphics2DAdapter/paintImage(org.apache.xmlgraphics.java2d.Graphics2DImagePainter,org.apache.fop.render.RendererContext,int,int,int,int)#org/apache/xmlgraphics/ps/PSGenerator/getCurrentState()
org/apache/fop/render/ps/PSGraphics2DAdapter/paintImage(org.apache.xmlgraphics.java2d.Graphics2DImagePainter,org.apache.fop.render.RendererContext,int,int,int,int)#org/apache/xmlgraphics/ps/PSGenerator/concatMatrix(double,double,double,double,double,double)
org/apache/fop/render/ps/PSGraphics2DAdapter/paintImage(org.apache.xmlgraphics.java2d.Graphics2DImagePainter,org.apache.fop.render.RendererContext,int,int,int,int)#java/awt/geom/AffineTransform/translate(double,double)
org/apache/fop/render/ps/PSGraphics2DAdapter/paintImage(org.apache.xmlgraphics.java2d.Graphics2DImagePainter,org.apache.fop.render.RendererContext,int,int,int,int)#org/apache/xmlgraphics/java2d/ps/PSGraphics2D/drawImage(java.awt.Image,java.awt.geom.AffineTransform,java.awt.image.ImageObserver)
org/apache/fop/render/ps/PSGraphics2DAdapter/paintImage(org.apache.xmlgraphics.java2d.Graphics2DImagePainter,org.apache.fop.render.RendererContext,int,int,int,int)#org/apache/xmlgraphics/java2d/ps/PSGraphics2D/setGraphicContext(org.apache.xmlgraphics.java2d.GraphicContext)
org/apache/fop/render/ps/PSGraphics2DAdapter/paintImage(org.apache.xmlgraphics.java2d.Graphics2DImagePainter,org.apache.fop.render.RendererContext,int,int,int,int)#org/apache/xmlgraphics/java2d/Graphics2DImagePainter/getImageSize()
org/apache/fop/render/ps/PSGraphics2DAdapter/paintImage(org.apache.xmlgraphics.java2d.Graphics2DImagePainter,org.apache.fop.render.RendererContext,int,int,int,int)#java/awt/geom/Rectangle2D$Double/Double(double,double,double,double)
org/apache/fop/render/ps/PSGraphics2DAdapter/paintImage(org.apache.xmlgraphics.java2d.Graphics2DImagePainter,org.apache.fop.render.RendererContext,int,int,int,int)#java/awt/geom/AffineTransform/AffineTransform(float,float,float,float,float,float)
org/apache/fop/render/ps/PSGraphics2DAdapter/paintImage(org.apache.xmlgraphics.java2d.Graphics2DImagePainter,org.apache.fop.render.RendererContext,int,int,int,int)#java/awt/Dimension/getWidth()
org/apache/fop/render/ps/PSGraphics2DAdapter/paintImage(org.apache.xmlgraphics.java2d.Graphics2DImagePainter,org.apache.fop.render.RendererContext,int,int,int,int)#org/apache/xmlgraphics/ps/PSState/concatMatrix(java.awt.geom.AffineTransform)
org/apache/fop/render/ps/PSGraphics2DAdapter/paintImage(org.apache.xmlgraphics.java2d.Graphics2DImagePainter,org.apache.fop.render.RendererContext,int,int,int,int)#org/apache/xmlgraphics/java2d/GeneralGraphics2DImagePainter/getGraphics(boolean,org.apache.xmlgraphics.ps.PSGenerator)
org/apache/fop/render/ps/PSGraphics2DAdapter/paintImage(org.apache.xmlgraphics.java2d.Graphics2DImagePainter,org.apache.fop.render.RendererContext,int,int,int,int)#org/apache/xmlgraphics/ps/PSGenerator/saveGraphicsState()
org/apache/fop/render/ps/PSGraphics2DAdapter/paintImage(org.apache.xmlgraphics.java2d.Graphics2DImagePainter,org.apache.fop.render.RendererContext,int,int,int,int)#java/awt/Dimension/getHeight()
org/apache/fop/render/ps/PSGraphics2DAdapter/paintImage(org.apache.xmlgraphics.java2d.Graphics2DImagePainter,org.apache.fop.render.RendererContext,int,int,int,int)#org/apache/xmlgraphics/ps/PSGenerator/writeln(java.lang.String)
org/apache/fop/render/ps/PSGraphics2DAdapter/paintImage(org.apache.xmlgraphics.java2d.Graphics2DImagePainter,org.apache.fop.render.RendererContext,int,int,int,int)#org/apache/xmlgraphics/ps/PSGenerator/commentln(java.lang.String)
org/apache/fop/render/ps/PSGraphics2DAdapter/paintImage(org.apache.xmlgraphics.java2d.Graphics2DImagePainter,org.apache.fop.render.RendererContext,int,int,int,int)#org/apache/xmlgraphics/java2d/ps/PSGraphics2D/PSGraphics2D(boolean,org.apache.xmlgraphics.ps.PSGenerator)
org/apache/fop/render/ps/PSGraphics2DAdapter/paintImage(org.apache.xmlgraphics.java2d.Graphics2DImagePainter,org.apache.fop.render.RendererContext,int,int,int,int)#java/lang/Math/round(float)
org/apache/fop/render/ps/PSGraphics2DAdapter/paintImage(org.apache.xmlgraphics.java2d.Graphics2DImagePainter,org.apache.fop.render.RendererContext,int,int,int,int)#org/apache/xmlgraphics/ps/PSGenerator/defineRect(double,double,double,double)
org/apache/fop/render/ps/PSGraphics2DAdapter/paintImage(org.apache.xmlgraphics.java2d.Graphics2DImagePainter,org.apache.fop.render.RendererContext,int,int,int,int)#java/awt/geom/AffineTransform/AffineTransform()
org/apache/fop/render/ps/PSGraphics2DAdapter/paintImage(org.apache.xmlgraphics.java2d.Graphics2DImagePainter,org.apache.fop.render.RendererContext,int,int,int,int)#org/apache/xmlgraphics/java2d/GraphicContext/GraphicContext()
org/apache/fop/render/ps/PSGraphics2DAdapter/paintImage(org.apache.xmlgraphics.java2d.Graphics2DImagePainter,org.apache.fop.render.RendererContext,int,int,int,int)#org/apache/fop/render/ps/PSGraphics2DAdapter/paintToBufferedImage(org.apache.xmlgraphics.java2d.Graphics2DImagePainter,org.apache.fop.render.RendererContext$RendererContextWrapper,int,boolean,boolean)
org/apache/fop/render/ps/PSGraphics2DAdapter/paintImage(org.apache.xmlgraphics.java2d.Graphics2DImagePainter,org.apache.fop.render.RendererContext,int,int,int,int)#org/apache/xmlgraphics/ps/PSGenerator/restoreGraphicsState()
org/apache/fop/layoutmgr/PageBreakingAlgorithm/getFootnoteSplit(int,int,int,int,boolean)#java/lang/Integer/intValue()
org/apache/fop/layoutmgr/PageBreakingAlgorithm/getFootnoteSplit(int,int,int,int,boolean)#org/apache/fop/layoutmgr/KnuthElement/isBox()
org/apache/fop/layoutmgr/PageBreakingAlgorithm/getFootnoteSplit(int,int,int,int,boolean)#java/util/List/size()
org/apache/fop/layoutmgr/PageBreakingAlgorithm/getFootnoteSplit(int,int,int,int,boolean)#org/apache/fop/layoutmgr/KnuthElement/isGlue()
org/apache/fop/layoutmgr/PageBreakingAlgorithm/getFootnoteSplit(int,int,int,int,boolean)#java/util/List/get(int)
org/apache/fop/layoutmgr/PageBreakingAlgorithm/getFootnoteSplit(int,int,int,int,boolean)#java/util/List/listIterator(int)
org/apache/fop/layoutmgr/PageBreakingAlgorithm/getFootnoteSplit(int,int,int,int,boolean)#java/util/ListIterator/hasNext()
org/apache/fop/layoutmgr/PageBreakingAlgorithm/getFootnoteSplit(int,int,int,int,boolean)#java/util/ListIterator/previousIndex()
org/apache/fop/layoutmgr/PageBreakingAlgorithm/getFootnoteSplit(int,int,int,int,boolean)#java/util/ListIterator/next()
org/apache/fop/layoutmgr/PageBreakingAlgorithm/handleFootnotes(java.util.List)#java/lang/Integer/intValue()
org/apache/fop/layoutmgr/PageBreakingAlgorithm/handleFootnotes(java.util.List)#java/util/ArrayList/ArrayList()
org/apache/fop/layoutmgr/PageBreakingAlgorithm/handleFootnotes(java.util.List)#org/apache/fop/layoutmgr/KnuthElement/isBox()
org/apache/fop/layoutmgr/PageBreakingAlgorithm/handleFootnotes(java.util.List)#java/util/Iterator/hasNext()
org/apache/fop/layoutmgr/PageBreakingAlgorithm/handleFootnotes(java.util.List)#java/util/List/isEmpty()
org/apache/fop/layoutmgr/PageBreakingAlgorithm/handleFootnotes(java.util.List)#java/util/List/size()
org/apache/fop/layoutmgr/PageBreakingAlgorithm/handleFootnotes(java.util.List)#java/util/Iterator/next()
org/apache/fop/layoutmgr/PageBreakingAlgorithm/handleFootnotes(java.util.List)#org/apache/fop/layoutmgr/KnuthElement/isGlue()
org/apache/fop/layoutmgr/PageBreakingAlgorithm/handleFootnotes(java.util.List)#java/util/List/add(java.lang.Object)
org/apache/fop/layoutmgr/PageBreakingAlgorithm/handleFootnotes(java.util.List)#java/lang/Integer/valueOf(int)
org/apache/fop/layoutmgr/PageBreakingAlgorithm/handleFootnotes(java.util.List)#java/util/List/iterator()
org/apache/fop/layoutmgr/PageBreakingAlgorithm/updateData2(org.apache.fop.layoutmgr.BreakingAlgorithm$KnuthNode,org.apache.fop.layoutmgr.KnuthSequence,int)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/fop/layoutmgr/PageBreakingAlgorithm/updateData2(org.apache.fop.layoutmgr.BreakingAlgorithm$KnuthNode,org.apache.fop.layoutmgr.KnuthSequence,int)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/layoutmgr/PageBreakingAlgorithm/updateData2(org.apache.fop.layoutmgr.BreakingAlgorithm$KnuthNode,org.apache.fop.layoutmgr.KnuthSequence,int)#java/lang/StringBuilder/append(int)
org/apache/fop/layoutmgr/PageBreakingAlgorithm/updateData2(org.apache.fop.layoutmgr.BreakingAlgorithm$KnuthNode,org.apache.fop.layoutmgr.KnuthSequence,int)#org/apache/fop/layoutmgr/PageBreakingAlgorithm$PageBreakingLayoutListener/notifyOverflow(int,int,org.apache.fop.fo.FObj)
org/apache/fop/layoutmgr/PageBreakingAlgorithm/updateData2(org.apache.fop.layoutmgr.BreakingAlgorithm$KnuthNode,org.apache.fop.layoutmgr.KnuthSequence,int)#org/apache/commons/logging/Log/isDebugEnabled()
org/apache/fop/layoutmgr/PageBreakingAlgorithm/updateData2(org.apache.fop.layoutmgr.BreakingAlgorithm$KnuthNode,org.apache.fop.layoutmgr.KnuthSequence,int)#java/util/List/size()
org/apache/fop/layoutmgr/PageBreakingAlgorithm/updateData2(org.apache.fop.layoutmgr.BreakingAlgorithm$KnuthNode,org.apache.fop.layoutmgr.KnuthSequence,int)#org/apache/fop/layoutmgr/WhitespaceManagementPenalty$Variant/getWhitespaceManagementPenalty()
org/apache/fop/layoutmgr/PageBreakingAlgorithm/updateData2(org.apache.fop.layoutmgr.BreakingAlgorithm$KnuthNode,org.apache.fop.layoutmgr.KnuthSequence,int)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/layoutmgr/PageBreakingAlgorithm/updateData2(org.apache.fop.layoutmgr.BreakingAlgorithm$KnuthNode,org.apache.fop.layoutmgr.KnuthSequence,int)#java/util/List/iterator()
org/apache/fop/layoutmgr/PageBreakingAlgorithm/updateData2(org.apache.fop.layoutmgr.BreakingAlgorithm$KnuthNode,org.apache.fop.layoutmgr.KnuthSequence,int)#org/apache/fop/layoutmgr/AbstractBreaker$PageBreakPosition/PageBreakPosition(org.apache.fop.layoutmgr.LayoutManager,int,int,int,int,int,double,int)
org/apache/fop/layoutmgr/PageBreakingAlgorithm/updateData2(org.apache.fop.layoutmgr.BreakingAlgorithm$KnuthNode,org.apache.fop.layoutmgr.KnuthSequence,int)#java/lang/StringBuilder/toString()
org/apache/fop/layoutmgr/PageBreakingAlgorithm/updateData2(org.apache.fop.layoutmgr.BreakingAlgorithm$KnuthNode,org.apache.fop.layoutmgr.KnuthSequence,int)#java/util/Iterator/hasNext()
org/apache/fop/layoutmgr/PageBreakingAlgorithm/updateData2(org.apache.fop.layoutmgr.BreakingAlgorithm$KnuthNode,org.apache.fop.layoutmgr.KnuthSequence,int)#java/util/Iterator/next()
org/apache/fop/layoutmgr/PageBreakingAlgorithm/updateData2(org.apache.fop.layoutmgr.BreakingAlgorithm$KnuthNode,org.apache.fop.layoutmgr.KnuthSequence,int)#org/apache/fop/layoutmgr/AbstractBreaker$FloatPosition/FloatPosition(org.apache.fop.layoutmgr.LayoutManager,int,double,int)
org/apache/fop/layoutmgr/PageBreakingAlgorithm/updateData2(org.apache.fop.layoutmgr.BreakingAlgorithm$KnuthNode,org.apache.fop.layoutmgr.KnuthSequence,int)#org/apache/fop/layoutmgr/PageBreakingAlgorithm$KnuthPageNode/access$500(org.apache.fop.layoutmgr.PageBreakingAlgorithm$KnuthPageNode)
org/apache/fop/layoutmgr/PageBreakingAlgorithm/updateData2(org.apache.fop.layoutmgr.BreakingAlgorithm$KnuthNode,org.apache.fop.layoutmgr.KnuthSequence,int)#java/lang/StringBuilder/append(double)
org/apache/fop/layoutmgr/PageBreakingAlgorithm/createNode(int,int,int,int,int,int)#org/apache/fop/layoutmgr/PageBreakingAlgorithm$BestPageRecords/getInsertedFootnotesLength(int)
org/apache/fop/layoutmgr/PageBreakingAlgorithm/createNode(int,int,int,int,int,int)#org/apache/fop/layoutmgr/BreakingAlgorithm$BestRecords/getNode(int)
org/apache/fop/layoutmgr/PageBreakingAlgorithm/createNode(int,int,int,int,int,int)#org/apache/fop/layoutmgr/PageBreakingAlgorithm$KnuthPageNode/KnuthPageNode(org.apache.fop.layoutmgr.PageBreakingAlgorithm,int,int,int,int,int,int,int,int,int,int,double,int,int,int,double,org.apache.fop.layoutmgr.BreakingAlgorithm$KnuthNode)
org/apache/fop/layoutmgr/PageBreakingAlgorithm/createNode(int,int,int,int,int,int)#org/apache/fop/layoutmgr/BreakingAlgorithm$BestRecords/getDifference(int)
org/apache/fop/layoutmgr/PageBreakingAlgorithm/createNode(int,int,int,int,int,int)#org/apache/fop/layoutmgr/BreakingAlgorithm$BestRecords/getAvailableStretch(int)
org/apache/fop/layoutmgr/PageBreakingAlgorithm/createNode(int,int,int,int,int,int)#org/apache/fop/layoutmgr/PageBreakingAlgorithm$BestPageRecords/getTotalFootnotesLength(int)
org/apache/fop/layoutmgr/PageBreakingAlgorithm/createNode(int,int,int,int,int,int)#org/apache/fop/layoutmgr/BreakingAlgorithm$BestRecords/getDemerits(int)
org/apache/fop/layoutmgr/PageBreakingAlgorithm/createNode(int,int,int,int,int,int)#org/apache/fop/layoutmgr/BreakingAlgorithm$BestRecords/getAdjust(int)
org/apache/fop/layoutmgr/PageBreakingAlgorithm/createNode(int,int,int,int,int,int)#org/apache/fop/layoutmgr/PageBreakingAlgorithm$BestPageRecords/getFootnoteElementIndex(int)
org/apache/fop/layoutmgr/PageBreakingAlgorithm/createNode(int,int,int,int,int,int)#org/apache/fop/layoutmgr/BreakingAlgorithm$BestRecords/getAvailableShrink(int)
org/apache/fop/layoutmgr/PageBreakingAlgorithm/createNode(int,int,int,int,int,int)#org/apache/fop/layoutmgr/PageBreakingAlgorithm$BestPageRecords/getFootnoteListIndex(int)
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfStringConverter/escape(java.lang.String)#java/lang/Character/equals(java.lang.Object)
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfStringConverter/escape(java.lang.String)#java/lang/StringBuffer/StringBuffer(int)
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfStringConverter/escape(java.lang.String)#java/lang/String/charAt(int)
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfStringConverter/escape(java.lang.String)#java/lang/Math/max(int,int)
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfStringConverter/escape(java.lang.String)#java/lang/StringBuffer/append(char)
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfStringConverter/escape(java.lang.String)#java/lang/StringBuffer/toString()
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfStringConverter/escape(java.lang.String)#java/lang/StringBuffer/append(java.lang.String)
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfStringConverter/escape(java.lang.String)#java/lang/Character/Character(char)
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfStringConverter/escape(java.lang.String)#java/lang/Character/charValue()
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfStringConverter/escape(java.lang.String)#java/lang/Integer/toString(int)
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfStringConverter/escape(java.lang.String)#java/lang/String/length()
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfStringConverter/escape(java.lang.String)#java/util/Map/get(java.lang.Object)
org/apache/fop/layoutmgr/inline/LineLayoutPossibilities/restorePossibilities()#java/util/List/remove(int)
org/apache/fop/layoutmgr/inline/LineLayoutPossibilities/restorePossibilities()#java/lang/StringBuilder/append(int)
org/apache/fop/layoutmgr/inline/LineLayoutPossibilities/restorePossibilities()#org/apache/fop/layoutmgr/inline/LineLayoutPossibilities$Possibility/access$200(org.apache.fop.layoutmgr.inline.LineLayoutPossibilities$Possibility)
org/apache/fop/layoutmgr/inline/LineLayoutPossibilities/restorePossibilities()#org/apache/fop/layoutmgr/inline/LineLayoutPossibilities$Possibility/access$100(org.apache.fop.layoutmgr.inline.LineLayoutPossibilities$Possibility)
org/apache/fop/layoutmgr/inline/LineLayoutPossibilities/restorePossibilities()#java/util/List/size()
org/apache/fop/layoutmgr/inline/LineLayoutPossibilities/restorePossibilities()#java/lang/StringBuilder/StringBuilder()
org/apache/fop/layoutmgr/inline/LineLayoutPossibilities/restorePossibilities()#org/apache/commons/logging/Log/error(java.lang.Object)
org/apache/fop/layoutmgr/inline/LineLayoutPossibilities/restorePossibilities()#java/util/List/add(int,java.lang.Object)
org/apache/fop/layoutmgr/inline/LineLayoutPossibilities/restorePossibilities()#java/util/List/set(int,java.lang.Object)
org/apache/fop/layoutmgr/inline/LineLayoutPossibilities/restorePossibilities()#java/lang/StringBuilder/toString()
org/apache/fop/layoutmgr/inline/LineLayoutPossibilities/restorePossibilities()#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/render/java2d/Java2DGraphics2DAdapter/paintImage(org.apache.xmlgraphics.java2d.Graphics2DImagePainter,org.apache.fop.render.RendererContext,int,int,int,int)#java/awt/Graphics2D/translate(double,double)
org/apache/fop/render/java2d/Java2DGraphics2DAdapter/paintImage(org.apache.xmlgraphics.java2d.Graphics2DImagePainter,org.apache.fop.render.RendererContext,int,int,int,int)#java/awt/Graphics2D/dispose()
org/apache/fop/render/java2d/Java2DGraphics2DAdapter/paintImage(org.apache.xmlgraphics.java2d.Graphics2DImagePainter,org.apache.fop.render.RendererContext,int,int,int,int)#java/awt/Graphics2D/setColor(java.awt.Color)
org/apache/fop/render/java2d/Java2DGraphics2DAdapter/paintImage(org.apache.xmlgraphics.java2d.Graphics2DImagePainter,org.apache.fop.render.RendererContext,int,int,int,int)#java/awt/Graphics2D/create()
org/apache/fop/render/java2d/Java2DGraphics2DAdapter/paintImage(org.apache.xmlgraphics.java2d.Graphics2DImagePainter,org.apache.fop.render.RendererContext,int,int,int,int)#org/apache/xmlgraphics/java2d/Graphics2DImagePainter/getImageSize()
org/apache/fop/render/java2d/Java2DGraphics2DAdapter/paintImage(org.apache.xmlgraphics.java2d.Graphics2DImagePainter,org.apache.fop.render.RendererContext,int,int,int,int)#java/awt/geom/Rectangle2D$Double/Double(double,double,double,double)
org/apache/fop/render/java2d/Java2DGraphics2DAdapter/paintImage(org.apache.xmlgraphics.java2d.Graphics2DImagePainter,org.apache.fop.render.RendererContext,int,int,int,int)#java/awt/Dimension/getHeight()
org/apache/fop/render/java2d/Java2DGraphics2DAdapter/paintImage(org.apache.xmlgraphics.java2d.Graphics2DImagePainter,org.apache.fop.render.RendererContext,int,int,int,int)#java/awt/Dimension/getWidth()
org/apache/fop/render/java2d/Java2DGraphics2DAdapter/paintImage(org.apache.xmlgraphics.java2d.Graphics2DImagePainter,org.apache.fop.render.RendererContext,int,int,int,int)#java/awt/geom/AffineTransform/isIdentity()
org/apache/fop/render/java2d/Java2DGraphics2DAdapter/paintImage(org.apache.xmlgraphics.java2d.Graphics2DImagePainter,org.apache.fop.render.RendererContext,int,int,int,int)#java/awt/Graphics2D/transform(java.awt.geom.AffineTransform)
org/apache/fop/render/java2d/Java2DGraphics2DAdapter/paintImage(org.apache.xmlgraphics.java2d.Graphics2DImagePainter,org.apache.fop.render.RendererContext,int,int,int,int)#java/awt/geom/AffineTransform/getScaleInstance(double,double)
org/apache/fop/render/java2d/Java2DGraphics2DAdapter/paintImage(org.apache.xmlgraphics.java2d.Graphics2DImagePainter,org.apache.fop.render.RendererContext,int,int,int,int)#org/apache/xmlgraphics/java2d/Graphics2DImagePainter/paint(java.awt.Graphics2D,java.awt.geom.Rectangle2D)
org/apache/fop/render/java2d/Java2DGraphics2DAdapter/paintImage(org.apache.xmlgraphics.java2d.Graphics2DImagePainter,org.apache.fop.render.RendererContext,int,int,int,int)#java/awt/Graphics2D/setBackground(java.awt.Color)
org/apache/fop/afp/apps/FontPatternExtractor/extract(java.io.File,java.io.File)#java/lang/String/toLowerCase()
org/apache/fop/afp/apps/FontPatternExtractor/extract(java.io.File,java.io.File)#java/io/DataInputStream/readInt()
org/apache/fop/afp/apps/FontPatternExtractor/extract(java.io.File,java.io.File)#java/io/DataInputStream/DataInputStream(java.io.InputStream)
org/apache/fop/afp/apps/FontPatternExtractor/extract(java.io.File,java.io.File)#java/lang/String/String(byte[],java.lang.String)
org/apache/fop/afp/apps/FontPatternExtractor/extract(java.io.File,java.io.File)#org/apache/commons/io/output/ByteArrayOutputStream/write(byte[])
org/apache/fop/afp/apps/FontPatternExtractor/extract(java.io.File,java.io.File)#org/apache/commons/io/IOUtils/copyLarge(java.io.InputStream,java.io.OutputStream)
org/apache/fop/afp/apps/FontPatternExtractor/extract(java.io.File,java.io.File)#java/io/DataInputStream/readFully(byte[])
org/apache/fop/afp/apps/FontPatternExtractor/extract(java.io.File,java.io.File)#java/io/DataInputStream/readUnsignedShort()
org/apache/fop/afp/apps/FontPatternExtractor/extract(java.io.File,java.io.File)#java/io/File/File(java.io.File,java.lang.String)
org/apache/fop/afp/apps/FontPatternExtractor/extract(java.io.File,java.io.File)#java/io/IOException/IOException(java.lang.String)
org/apache/fop/afp/apps/FontPatternExtractor/extract(java.io.File,java.io.File)#org/apache/commons/io/IOUtils/closeQuietly(java.io.InputStream)
org/apache/fop/afp/apps/FontPatternExtractor/extract(java.io.File,java.io.File)#java/io/DataInputStream/skip(long)
org/apache/fop/afp/apps/FontPatternExtractor/extract(java.io.File,java.io.File)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/afp/apps/FontPatternExtractor/extract(java.io.File,java.io.File)#java/io/ByteArrayInputStream/ByteArrayInputStream(byte[])
org/apache/fop/afp/apps/FontPatternExtractor/extract(java.io.File,java.io.File)#org/apache/commons/io/HexDump/dump(byte[],long,java.io.OutputStream,int)
org/apache/fop/afp/apps/FontPatternExtractor/extract(java.io.File,java.io.File)#org/apache/commons/io/output/ByteArrayOutputStream/toByteArray()
org/apache/fop/afp/apps/FontPatternExtractor/extract(java.io.File,java.io.File)#java/lang/StringBuilder/append(long)
org/apache/fop/afp/apps/FontPatternExtractor/extract(java.io.File,java.io.File)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/afp/apps/FontPatternExtractor/extract(java.io.File,java.io.File)#org/apache/commons/io/output/ByteArrayOutputStream/ByteArrayOutputStream()
org/apache/fop/afp/apps/FontPatternExtractor/extract(java.io.File,java.io.File)#org/apache/commons/io/IOUtils/closeQuietly(java.io.OutputStream)
org/apache/fop/afp/apps/FontPatternExtractor/extract(java.io.File,java.io.File)#java/io/FileInputStream/FileInputStream(java.io.File)
org/apache/fop/afp/apps/FontPatternExtractor/extract(java.io.File,java.io.File)#java/io/FileOutputStream/FileOutputStream(java.io.File)
org/apache/fop/afp/apps/FontPatternExtractor/extract(java.io.File,java.io.File)#java/lang/StringBuilder/toString()
org/apache/fop/afp/apps/FontPatternExtractor/extract(java.io.File,java.io.File)#java/lang/String/endsWith(java.lang.String)
org/apache/fop/afp/apps/FontPatternExtractor/main(java.lang.String[])#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/afp/apps/FontPatternExtractor/main(java.lang.String[])#java/lang/StringBuilder/StringBuilder()
org/apache/fop/afp/apps/FontPatternExtractor/main(java.lang.String[])#java/lang/System/exit(int)
org/apache/fop/afp/apps/FontPatternExtractor/main(java.lang.String[])#java/io/File/File(java.lang.String)
org/apache/fop/afp/apps/FontPatternExtractor/main(java.lang.String[])#java/lang/Exception/printStackTrace()
org/apache/fop/afp/apps/FontPatternExtractor/main(java.lang.String[])#java/lang/Class/getName()
org/apache/fop/afp/apps/FontPatternExtractor/main(java.lang.String[])#java/io/File/mkdirs()
org/apache/fop/afp/apps/FontPatternExtractor/main(java.lang.String[])#java/lang/StringBuilder/toString()
org/apache/fop/afp/apps/FontPatternExtractor/main(java.lang.String[])#java/io/File/getParentFile()
org/apache/fop/pdf/PDFColorHandler/establishDeviceRGB(java.lang.StringBuffer,java.awt.Color,boolean)#java/awt/Color/getColorComponents(java.awt.color.ColorSpace,float[])
org/apache/fop/pdf/PDFColorHandler/establishDeviceRGB(java.lang.StringBuffer,java.awt.Color,boolean)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/fop/pdf/PDFColorHandler/establishDeviceRGB(java.lang.StringBuffer,java.awt.Color,boolean)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/pdf/PDFColorHandler/establishDeviceRGB(java.lang.StringBuffer,java.awt.Color,boolean)#java/awt/Color/getColorSpace()
org/apache/fop/pdf/PDFColorHandler/establishDeviceRGB(java.lang.StringBuffer,java.awt.Color,boolean)#org/apache/commons/logging/Log/isDebugEnabled()
org/apache/fop/pdf/PDFColorHandler/establishDeviceRGB(java.lang.StringBuffer,java.awt.Color,boolean)#org/apache/xmlgraphics/java2d/color/ColorUtil/isGray(java.awt.Color)
org/apache/fop/pdf/PDFColorHandler/establishDeviceRGB(java.lang.StringBuffer,java.awt.Color,boolean)#java/awt/color/ColorSpace/getInstance(int)
org/apache/fop/pdf/PDFColorHandler/establishDeviceRGB(java.lang.StringBuffer,java.awt.Color,boolean)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/pdf/PDFColorHandler/establishDeviceRGB(java.lang.StringBuffer,java.awt.Color,boolean)#java/awt/color/ColorSpace/isCS_sRGB()
org/apache/fop/pdf/PDFColorHandler/establishDeviceRGB(java.lang.StringBuffer,java.awt.Color,boolean)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/fop/pdf/PDFColorHandler/establishDeviceRGB(java.lang.StringBuffer,java.awt.Color,boolean)#java/lang/StringBuilder/toString()
org/apache/fop/pdf/PDFColorHandler/establishDeviceRGB(java.lang.StringBuffer,java.awt.Color,boolean)#java/awt/Color/getColorComponents(float[])
org/apache/fop/render/afp/AFPFontConfig/ParserHelper/getRasterFont(java.util.List,java.lang.String,java.lang.String,java.lang.String,org.apache.avalon.framework.configuration.Configuration,org.apache.fop.afp.AFPEventProducer,java.lang.String)#org/apache/fop/render/afp/AFPFontConfig$RasterCharactersetData/RasterCharactersetData(java.lang.String,int,java.lang.String,org.apache.fop.render.afp.AFPFontConfig$1)
org/apache/fop/render/afp/AFPFontConfig/ParserHelper/getRasterFont(java.util.List,java.lang.String,java.lang.String,java.lang.String,org.apache.avalon.framework.configuration.Configuration,org.apache.fop.afp.AFPEventProducer,java.lang.String)#org/apache/fop/render/afp/AFPFontConfig$ParserHelper/isEmbbedable(java.util.List)
org/apache/fop/render/afp/AFPFontConfig/ParserHelper/getRasterFont(java.util.List,java.lang.String,java.lang.String,java.lang.String,org.apache.avalon.framework.configuration.Configuration,org.apache.fop.afp.AFPEventProducer,java.lang.String)#org/apache/avalon/framework/configuration/Configuration/getLocation()
org/apache/fop/render/afp/AFPFontConfig/ParserHelper/getRasterFont(java.util.List,java.lang.String,java.lang.String,java.lang.String,org.apache.avalon.framework.configuration.Configuration,org.apache.fop.afp.AFPEventProducer,java.lang.String)#org/apache/avalon/framework/configuration/Configuration/getChildren(java.lang.String)
org/apache/fop/render/afp/AFPFontConfig/ParserHelper/getRasterFont(java.util.List,java.lang.String,java.lang.String,java.lang.String,org.apache.avalon.framework.configuration.Configuration,org.apache.fop.afp.AFPEventProducer,java.lang.String)#java/util/List/add(java.lang.Object)
org/apache/fop/render/afp/AFPFontConfig/ParserHelper/getRasterFont(java.util.List,java.lang.String,java.lang.String,java.lang.String,org.apache.avalon.framework.configuration.Configuration,org.apache.fop.afp.AFPEventProducer,java.lang.String)#org/apache/avalon/framework/configuration/Configuration/getAttribute(java.lang.String)
org/apache/fop/render/afp/AFPFontConfig/ParserHelper/getRasterFont(java.util.List,java.lang.String,java.lang.String,java.lang.String,org.apache.avalon.framework.configuration.Configuration,org.apache.fop.afp.AFPEventProducer,java.lang.String)#org/apache/avalon/framework/configuration/Configuration/getAttribute(java.lang.String,java.lang.String)
org/apache/fop/render/afp/AFPFontConfig/ParserHelper/getRasterFont(java.util.List,java.lang.String,java.lang.String,java.lang.String,org.apache.avalon.framework.configuration.Configuration,org.apache.fop.afp.AFPEventProducer,java.lang.String)#org/apache/avalon/framework/configuration/Configuration/getAttributeAsFloat(java.lang.String)
org/apache/fop/render/afp/AFPFontConfig/ParserHelper/getRasterFont(java.util.List,java.lang.String,java.lang.String,java.lang.String,org.apache.avalon.framework.configuration.Configuration,org.apache.fop.afp.AFPEventProducer,java.lang.String)#org/apache/fop/render/afp/AFPFontConfig$RasterFontConfig/RasterFontConfig(java.util.List,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.List,boolean,org.apache.fop.render.afp.AFPFontConfig$1)
org/apache/fop/render/afp/AFPFontConfig/ParserHelper/getRasterFont(java.util.List,java.lang.String,java.lang.String,java.lang.String,org.apache.avalon.framework.configuration.Configuration,org.apache.fop.afp.AFPEventProducer,java.lang.String)#java/util/ArrayList/ArrayList()
org/apache/fop/render/afp/AFPFontConfig/ParserHelper/fontFromType(java.util.List,java.lang.String,java.lang.String,java.lang.String,org.apache.avalon.framework.configuration.Configuration,org.apache.fop.afp.AFPEventProducer,java.lang.String)#org/apache/fop/render/afp/AFPFontConfig$ParserHelper/getRasterFont(java.util.List,java.lang.String,java.lang.String,java.lang.String,org.apache.avalon.framework.configuration.Configuration,org.apache.fop.afp.AFPEventProducer,java.lang.String)
org/apache/fop/render/afp/AFPFontConfig/ParserHelper/fontFromType(java.util.List,java.lang.String,java.lang.String,java.lang.String,org.apache.avalon.framework.configuration.Configuration,org.apache.fop.afp.AFPEventProducer,java.lang.String)#java/lang/String/equalsIgnoreCase(java.lang.String)
org/apache/fop/render/afp/AFPFontConfig/ParserHelper/fontFromType(java.util.List,java.lang.String,java.lang.String,java.lang.String,org.apache.avalon.framework.configuration.Configuration,org.apache.fop.afp.AFPEventProducer,java.lang.String)#org/apache/fop/render/afp/AFPFontConfig$ParserHelper/getCIDKeyedFont(java.util.List,java.lang.String,java.lang.String,java.lang.String,org.apache.avalon.framework.configuration.Configuration,org.apache.fop.afp.AFPEventProducer,java.lang.String)
org/apache/fop/render/afp/AFPFontConfig/ParserHelper/fontFromType(java.util.List,java.lang.String,java.lang.String,java.lang.String,org.apache.avalon.framework.configuration.Configuration,org.apache.fop.afp.AFPEventProducer,java.lang.String)#org/apache/fop/render/afp/AFPFontConfig$ParserHelper/getOutlineFont(java.util.List,java.lang.String,java.lang.String,java.lang.String,org.apache.avalon.framework.configuration.Configuration,org.apache.fop.afp.AFPEventProducer,java.lang.String)
org/apache/fop/render/afp/AFPFontConfig/ParserHelper/fontFromType(java.util.List,java.lang.String,java.lang.String,java.lang.String,org.apache.avalon.framework.configuration.Configuration,org.apache.fop.afp.AFPEventProducer,java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/render/afp/AFPFontConfig/ParserHelper/fontFromType(java.util.List,java.lang.String,java.lang.String,java.lang.String,org.apache.avalon.framework.configuration.Configuration,org.apache.fop.afp.AFPEventProducer,java.lang.String)#java/lang/StringBuilder/toString()
org/apache/fop/render/afp/AFPFontConfig/ParserHelper/fontFromType(java.util.List,java.lang.String,java.lang.String,java.lang.String,org.apache.avalon.framework.configuration.Configuration,org.apache.fop.afp.AFPEventProducer,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/render/afp/AFPFontConfig/ParserHelper/fontFromType(java.util.List,java.lang.String,java.lang.String,java.lang.String,org.apache.avalon.framework.configuration.Configuration,org.apache.fop.afp.AFPEventProducer,java.lang.String)#java/util/List/add(java.lang.Object)
org/apache/fop/render/afp/AFPFontConfig/ParserHelper/fontFromType(java.util.List,java.lang.String,java.lang.String,java.lang.String,org.apache.avalon.framework.configuration.Configuration,org.apache.fop.afp.AFPEventProducer,java.lang.String)#org/apache/commons/logging/Log/error(java.lang.Object)
org/apache/fop/complexscripts/fonts/GlyphSubstitutionTable/SingleSubtableFormat2/populate(java.util.List)#java/lang/Integer/intValue()
org/apache/fop/complexscripts/fonts/GlyphSubstitutionTable/SingleSubtableFormat2/populate(java.util.List)#java/util/Iterator/hasNext()
org/apache/fop/complexscripts/fonts/GlyphSubstitutionTable/SingleSubtableFormat2/populate(java.util.List)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/complexscripts/fonts/GlyphSubstitutionTable/SingleSubtableFormat2/populate(java.util.List)#java/lang/StringBuilder/append(int)
org/apache/fop/complexscripts/fonts/GlyphSubstitutionTable/SingleSubtableFormat2/populate(java.util.List)#java/util/List/size()
org/apache/fop/complexscripts/fonts/GlyphSubstitutionTable/SingleSubtableFormat2/populate(java.util.List)#java/util/Iterator/next()
org/apache/fop/complexscripts/fonts/GlyphSubstitutionTable/SingleSubtableFormat2/populate(java.util.List)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/complexscripts/fonts/GlyphSubstitutionTable/SingleSubtableFormat2/populate(java.util.List)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/fop/complexscripts/fonts/GlyphSubstitutionTable/SingleSubtableFormat2/populate(java.util.List)#java/util/List/iterator()
org/apache/fop/complexscripts/fonts/GlyphSubstitutionTable/SingleSubtableFormat2/populate(java.util.List)#java/lang/AssertionError/AssertionError()
org/apache/fop/complexscripts/fonts/GlyphSubstitutionTable/SingleSubtableFormat2/populate(java.util.List)#java/lang/StringBuilder/toString()
org/apache/fop/render/rtf/rtflib/tools/TableContext/getColumnWidth()#java/lang/Float/Float(float)
org/apache/fop/render/rtf/rtflib/tools/TableContext/getColumnWidth()#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/apache/fop/render/rtf/rtflib/tools/TableContext/getColumnWidth()#org/apache/commons/logging/Log/warn(java.lang.Object)
org/apache/fop/render/rtf/rtflib/tools/TableContext/getColumnWidth()#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/render/rtf/rtflib/tools/TableContext/getColumnWidth()#java/lang/StringBuilder/append(int)
org/apache/fop/render/rtf/rtflib/tools/TableContext/getColumnWidth()#java/lang/StringBuilder/StringBuilder()
org/apache/fop/render/rtf/rtflib/tools/TableContext/getColumnWidth()#java/lang/Float/floatValue()
org/apache/fop/render/rtf/rtflib/tools/TableContext/getColumnWidth()#java/util/List/get(int)
org/apache/fop/render/rtf/rtflib/tools/TableContext/getColumnWidth()#java/lang/StringBuilder/append(float)
org/apache/fop/render/rtf/rtflib/tools/TableContext/getColumnWidth()#java/lang/StringBuilder/toString()
org/apache/fop/events/DefaultEventBroadcaster/loadModel(java.lang.Class)#java/lang/Class/getResourceAsStream(java.lang.String)
org/apache/fop/events/DefaultEventBroadcaster/loadModel(java.lang.Class)#org/apache/commons/io/IOUtils/closeQuietly(java.io.InputStream)
org/apache/fop/events/DefaultEventBroadcaster/loadModel(java.lang.Class)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/events/DefaultEventBroadcaster/loadModel(java.lang.Class)#java/util/MissingResourceException/MissingResourceException(java.lang.String,java.lang.String,java.lang.String)
org/apache/fop/events/DefaultEventBroadcaster/loadModel(java.lang.Class)#javax/xml/transform/stream/StreamSource/StreamSource(java.io.InputStream)
org/apache/fop/events/DefaultEventBroadcaster/loadModel(java.lang.Class)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/events/DefaultEventBroadcaster/loadModel(java.lang.Class)#java/lang/StringBuilder/toString()
org/apache/fop/events/DefaultEventBroadcaster/loadModel(java.lang.Class)#javax/xml/transform/TransformerException/getMessage()
org/apache/fop/events/DefaultEventBroadcaster/loadModel(java.lang.Class)#java/lang/Class/getName()
org/apache/fop/area/AreaTreeParser/Handler/InlineViewportMaker/startElement(org.xml.sax.Attributes)#org/apache/fop/area/AreaTreeParser$Handler/access$3500(org.xml.sax.Attributes,org.apache.fop.area.AreaTreeObject)
org/apache/fop/area/AreaTreeParser/Handler/InlineViewportMaker/startElement(org.xml.sax.Attributes)#java/util/Stack/push(java.lang.Object)
org/apache/fop/area/AreaTreeParser/Handler/InlineViewportMaker/startElement(org.xml.sax.Attributes)#org/apache/fop/area/AreaTreeParser$Handler/access$4300(org.apache.fop.area.AreaTreeParser$Handler,org.xml.sax.Attributes,org.apache.fop.area.Area,java.lang.Object[])
org/apache/fop/area/AreaTreeParser/Handler/InlineViewportMaker/startElement(org.xml.sax.Attributes)#org/apache/fop/area/AreaTreeParser$Handler/access$4100(org.apache.fop.area.AreaTreeParser$Handler,org.xml.sax.Attributes,org.apache.fop.area.Area)
org/apache/fop/area/AreaTreeParser/Handler/InlineViewportMaker/startElement(org.xml.sax.Attributes)#org/apache/fop/area/inline/InlineViewport/setBlockProgressionOffset(int)
org/apache/fop/area/AreaTreeParser/Handler/InlineViewportMaker/startElement(org.xml.sax.Attributes)#java/util/Stack/peek()
org/apache/fop/area/AreaTreeParser/Handler/InlineViewportMaker/startElement(org.xml.sax.Attributes)#org/apache/fop/area/AreaTreeParser$Handler/access$4200()
org/apache/fop/area/AreaTreeParser/Handler/InlineViewportMaker/startElement(org.xml.sax.Attributes)#org/apache/fop/area/AreaTreeParser$Handler/access$4400()
org/apache/fop/area/AreaTreeParser/Handler/InlineViewportMaker/startElement(org.xml.sax.Attributes)#org/apache/fop/area/AreaTreeParser$Handler/access$4500()
org/apache/fop/area/AreaTreeParser/Handler/InlineViewportMaker/startElement(org.xml.sax.Attributes)#org/apache/fop/area/AreaTreeParser$Handler/access$3600(org.apache.fop.area.AreaTreeParser$Handler)
org/apache/fop/area/AreaTreeParser/Handler/BlockMaker/startElement(org.xml.sax.Attributes)#org/apache/fop/area/AreaTreeParser$Handler/access$3500(org.xml.sax.Attributes,org.apache.fop.area.AreaTreeObject)
org/apache/fop/area/AreaTreeParser/Handler/BlockMaker/startElement(org.xml.sax.Attributes)#java/util/Stack/push(java.lang.Object)
org/apache/fop/area/AreaTreeParser/Handler/BlockMaker/startElement(org.xml.sax.Attributes)#org/apache/fop/area/BlockViewport/setXOffset(int)
org/apache/fop/area/AreaTreeParser/Handler/BlockMaker/startElement(org.xml.sax.Attributes)#java/util/Stack/peek()
org/apache/fop/area/AreaTreeParser/Handler/BlockMaker/startElement(org.xml.sax.Attributes)#org/apache/fop/area/AreaTreeParser$Handler/access$4400()
org/apache/fop/area/AreaTreeParser/Handler/BlockMaker/startElement(org.xml.sax.Attributes)#org/apache/fop/area/AreaTreeParser$Handler/access$4500()
org/apache/fop/area/AreaTreeParser/Handler/BlockMaker/startElement(org.xml.sax.Attributes)#java/lang/String/equalsIgnoreCase(java.lang.String)
org/apache/fop/area/AreaTreeParser/Handler/BlockMaker/startElement(org.xml.sax.Attributes)#org/xml/sax/Attributes/getValue(java.lang.String)
org/apache/fop/area/AreaTreeParser/Handler/BlockMaker/startElement(org.xml.sax.Attributes)#org/apache/fop/area/Block/setYOffset(int)
org/apache/fop/area/AreaTreeParser/Handler/BlockMaker/startElement(org.xml.sax.Attributes)#org/apache/fop/area/AreaTreeParser$Handler/access$4900(org.xml.sax.Attributes,java.lang.String)
org/apache/fop/area/AreaTreeParser/Handler/BlockMaker/startElement(org.xml.sax.Attributes)#org/apache/fop/area/Block/setXOffset(int)
org/apache/fop/area/AreaTreeParser/Handler/BlockMaker/startElement(org.xml.sax.Attributes)#org/apache/fop/area/AreaTreeParser$Handler/access$3600(org.apache.fop.area.AreaTreeParser$Handler)
org/apache/fop/area/AreaTreeParser/Handler/BlockMaker/startElement(org.xml.sax.Attributes)#org/apache/fop/area/AreaTreeParser$Handler/access$4300(org.apache.fop.area.AreaTreeParser$Handler,org.xml.sax.Attributes,org.apache.fop.area.Area,java.lang.Object[])
org/apache/fop/area/AreaTreeParser/Handler/BlockMaker/startElement(org.xml.sax.Attributes)#org/apache/fop/area/BlockViewport/setYOffset(int)
org/apache/fop/area/AreaTreeParser/Handler/BlockMaker/startElement(org.xml.sax.Attributes)#org/apache/fop/area/AreaTreeParser$Handler/access$4100(org.apache.fop.area.AreaTreeParser$Handler,org.xml.sax.Attributes,org.apache.fop.area.Area)
org/apache/fop/area/AreaTreeParser/Handler/BlockMaker/startElement(org.xml.sax.Attributes)#org/apache/fop/area/AreaTreeParser$Handler/access$4200()
org/apache/fop/area/AreaTreeParser/Handler/BlockMaker/startElement(org.xml.sax.Attributes)#org/apache/fop/area/BlockViewport/getPositioning()
org/apache/fop/render/bitmap/TIFFRenderer/stopRenderer()#org/apache/fop/render/bitmap/TIFFRenderer$LazyPageImagesIterator/LazyPageImagesIterator(org.apache.fop.render.bitmap.TIFFRenderer,int,org.apache.commons.logging.Log)
org/apache/fop/render/bitmap/TIFFRenderer/stopRenderer()#java/util/Iterator/hasNext()
org/apache/fop/render/bitmap/TIFFRenderer/stopRenderer()#java/io/OutputStream/flush()
org/apache/fop/render/bitmap/TIFFRenderer/stopRenderer()#org/apache/xmlgraphics/image/writer/ImageWriter/writeImage(java.awt.image.RenderedImage,java.io.OutputStream,org.apache.xmlgraphics.image.writer.ImageWriterParams)
org/apache/fop/render/bitmap/TIFFRenderer/stopRenderer()#org/apache/xmlgraphics/image/writer/ImageWriter/supportsMultiImageWriter()
org/apache/fop/render/bitmap/TIFFRenderer/stopRenderer()#org/apache/fop/render/bitmap/TIFFRenderer/getNumberOfPages()
org/apache/fop/render/bitmap/TIFFRenderer/stopRenderer()#org/apache/fop/render/bitmap/TIFFRenderer/clearViewportList()
org/apache/fop/render/bitmap/TIFFRenderer/stopRenderer()#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/fop/render/bitmap/TIFFRenderer/stopRenderer()#java/util/Iterator/next()
org/apache/fop/render/bitmap/TIFFRenderer/stopRenderer()#org/apache/fop/render/bitmap/TIFFRenderer/getUserAgent()
org/apache/fop/render/bitmap/TIFFRenderer/stopRenderer()#org/apache/xmlgraphics/image/writer/MultiImageWriter/writeImage(java.awt.image.RenderedImage,org.apache.xmlgraphics.image.writer.ImageWriterParams)
org/apache/fop/render/bitmap/TIFFRenderer/stopRenderer()#org/apache/xmlgraphics/image/writer/ImageWriter/createMultiImageWriter(java.io.OutputStream)
org/apache/fop/render/bitmap/TIFFRenderer/stopRenderer()#org/apache/fop/render/bitmap/BitmapRendererEventProducer$Provider/get(org.apache.fop.events.EventBroadcaster)
org/apache/fop/render/bitmap/TIFFRenderer/stopRenderer()#org/apache/xmlgraphics/image/writer/MultiImageWriter/close()
org/apache/fop/render/bitmap/TIFFRenderer/stopRenderer()#org/apache/xmlgraphics/image/writer/ImageWriterRegistry/getWriterFor(java.lang.String)
org/apache/fop/render/bitmap/TIFFRenderer/stopRenderer()#org/apache/xmlgraphics/image/writer/ImageWriterRegistry/getInstance()
org/apache/fop/render/afp/AFPFontConfig/getTypeFace(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/render/afp/AFPFontConfig/getTypeFace(java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/render/afp/AFPFontConfig/getTypeFace(java.lang.String)#org/apache/commons/logging/Log/error(java.lang.Object)
org/apache/fop/render/afp/AFPFontConfig/getTypeFace(java.lang.String)#java/lang/ClassNotFoundException/ClassNotFoundException(java.lang.String)
org/apache/fop/render/afp/AFPFontConfig/getTypeFace(java.lang.String)#java/lang/StringBuilder/toString()
org/apache/fop/render/afp/AFPFontConfig/getTypeFace(java.lang.String)#java/lang/Class/forName(java.lang.String)
org/apache/fop/render/afp/AFPFontConfig/getTypeFace(java.lang.String)#java/lang/ClassNotFoundException/getMessage()
org/apache/fop/render/afp/AFPFontConfig/getTypeFace(java.lang.String)#java/lang/Class/newInstance()
org/apache/fop/render/afp/AFPFontConfig/getTypeFace(java.lang.String)#java/lang/InstantiationException/getMessage()
org/apache/fop/render/afp/AFPFontConfig/getTypeFace(java.lang.String)#java/lang/Class/asSubclass(java.lang.Class)
org/apache/fop/render/afp/AFPFontConfig/getTypeFace(java.lang.String)#java/lang/IllegalAccessException/getMessage()
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfListTable/writeRtfContent()#org/apache/fop/render/rtf/rtflib/rtfdoc/RtfListTable/writeGroupMark(boolean)
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfListTable/writeRtfContent()#java/util/Iterator/hasNext()
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfListTable/writeRtfContent()#org/apache/fop/render/rtf/rtflib/rtfdoc/RtfListTable/writeOneAttributeNS(java.lang.String,java.lang.Object)
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfListTable/writeRtfContent()#java/lang/Integer/Integer(int)
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfListTable/writeRtfContent()#java/util/Iterator/next()
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfListTable/writeRtfContent()#org/apache/fop/render/rtf/rtflib/rtfdoc/RtfListTable/newLine()
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfListTable/writeRtfContent()#org/apache/fop/render/rtf/rtflib/rtfdoc/RtfListTable/writeStarControlWordNS(java.lang.String)
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfListTable/writeRtfContent()#java/util/LinkedList/iterator()
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfListTable/writeRtfContent()#java/lang/Integer/toString()
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfTableRow/writeRowAndCellsDefintions()#java/util/Iterator/hasNext()
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfTableRow/writeRowAndCellsDefintions()#org/apache/fop/render/rtf/rtflib/rtfdoc/RtfTableRow/writeOneAttribute(java.lang.String,java.lang.Object)
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfTableRow/writeRowAndCellsDefintions()#org/apache/fop/render/rtf/rtflib/rtfdoc/RtfTableRow/writeControlWord(java.lang.String)
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfTableRow/writeRowAndCellsDefintions()#java/util/Iterator/next()
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfTableRow/writeRowAndCellsDefintions()#org/apache/fop/render/rtf/rtflib/rtfdoc/RtfTableCell/getRtfAttributes()
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfTableRow/writeRowAndCellsDefintions()#org/apache/fop/render/rtf/rtflib/rtfdoc/RtfTableRow/getChildCount()
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfTableRow/writeRowAndCellsDefintions()#org/apache/fop/render/rtf/rtflib/rtfdoc/RtfTableRow/writeAttributes(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes,java.lang.String[])
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfTableRow/writeRowAndCellsDefintions()#java/util/List/iterator()
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfTableRow/writeRowAndCellsDefintions()#org/apache/fop/render/rtf/rtflib/rtfdoc/RtfTableRow/getChildren()
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfTableRow/writeRowAndCellsDefintions()#java/lang/Integer/intValue()
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfTableRow/writeRowAndCellsDefintions()#org/apache/fop/render/rtf/rtflib/rtfdoc/RtfTableRow/newLine()
org/apache/fop/area/RenderPagesModel/addPage(org.apache.fop.area.PageViewport)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/area/RenderPagesModel/addPage(org.apache.fop.area.PageViewport)#java/lang/Class/getName()
org/apache/fop/area/RenderPagesModel/addPage(org.apache.fop.area.PageViewport)#org/apache/commons/logging/Log/error(java.lang.Object,java.lang.Throwable)
org/apache/fop/area/RenderPagesModel/addPage(org.apache.fop.area.PageViewport)#org/apache/fop/render/RendererEventProducer$Provider/get(org.apache.fop.events.EventBroadcaster)
org/apache/fop/area/RenderPagesModel/addPage(org.apache.fop.area.PageViewport)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/apache/fop/area/RenderPagesModel/addPage(org.apache.fop.area.PageViewport)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/area/RenderPagesModel/addPage(org.apache.fop.area.PageViewport)#java/util/List/clear()
org/apache/fop/area/RenderPagesModel/addPage(org.apache.fop.area.PageViewport)#java/lang/Object/getClass()
org/apache/fop/area/RenderPagesModel/addPage(org.apache.fop.area.PageViewport)#java/lang/StringBuilder/toString()
org/apache/fop/area/RenderPagesModel/addPage(org.apache.fop.area.PageViewport)#org/apache/fop/area/RenderPagesModel/getCurrentPageSequence()
org/apache/fop/render/awt/viewer/PreviewDialog/setupMenu()#javax/swing/ButtonGroup/ButtonGroup()
org/apache/fop/render/awt/viewer/PreviewDialog/setupMenu()#javax/swing/JMenu/setMnemonic(int)
org/apache/fop/render/awt/viewer/PreviewDialog/setupMenu()#javax/swing/JMenuBar/JMenuBar()
org/apache/fop/render/awt/viewer/PreviewDialog/setupMenu()#javax/swing/JRadioButtonMenuItem/JRadioButtonMenuItem(javax.swing.Action)
org/apache/fop/render/awt/viewer/PreviewDialog/setupMenu()#javax/swing/JMenu/addSeparator()
org/apache/fop/render/awt/viewer/PreviewDialog/setupMenu()#javax/swing/JMenu/add(javax.swing.Action)
org/apache/fop/render/awt/viewer/PreviewDialog/setupMenu()#javax/swing/ButtonGroup/add(javax.swing.AbstractButton)
org/apache/fop/render/awt/viewer/PreviewDialog/setupMenu()#javax/swing/JMenu/add(javax.swing.JMenuItem)
org/apache/fop/render/awt/viewer/PreviewDialog/setupMenu()#javax/swing/JMenuBar/add(javax.swing.JMenu)
org/apache/fop/render/awt/viewer/PreviewDialog/setupMenu()#org/apache/fop/render/awt/viewer/PreviewDialog$19/19(org.apache.fop.render.awt.viewer.PreviewDialog,java.lang.String,int)
org/apache/fop/render/awt/viewer/PreviewDialog/setupMenu()#org/apache/fop/render/awt/viewer/PreviewDialog$30/30(org.apache.fop.render.awt.viewer.PreviewDialog,java.lang.String,int)
org/apache/fop/render/awt/viewer/PreviewDialog/setupMenu()#org/apache/fop/render/awt/viewer/PreviewDialog$22/22(org.apache.fop.render.awt.viewer.PreviewDialog,java.lang.String,int)
org/apache/fop/render/awt/viewer/PreviewDialog/setupMenu()#org/apache/fop/render/awt/viewer/PreviewDialog$31/31(org.apache.fop.render.awt.viewer.PreviewDialog,java.lang.String,int)
org/apache/fop/render/awt/viewer/PreviewDialog/setupMenu()#org/apache/fop/render/awt/viewer/PreviewDialog$20/20(org.apache.fop.render.awt.viewer.PreviewDialog,java.lang.String,int)
org/apache/fop/render/awt/viewer/PreviewDialog/setupMenu()#org/apache/fop/render/awt/viewer/PreviewDialog$18/18(org.apache.fop.render.awt.viewer.PreviewDialog,java.lang.String,int)
org/apache/fop/render/awt/viewer/PreviewDialog/setupMenu()#org/apache/fop/render/awt/viewer/PreviewDialog$29/29(org.apache.fop.render.awt.viewer.PreviewDialog,java.lang.String,int)
org/apache/fop/render/awt/viewer/PreviewDialog/setupMenu()#org/apache/fop/render/awt/viewer/PreviewDialog$28/28(org.apache.fop.render.awt.viewer.PreviewDialog,java.lang.String,int)
org/apache/fop/render/awt/viewer/PreviewDialog/setupMenu()#org/apache/fop/render/awt/viewer/PreviewDialog$17/17(org.apache.fop.render.awt.viewer.PreviewDialog,java.lang.String,int)
org/apache/fop/render/awt/viewer/PreviewDialog/setupMenu()#org/apache/fop/render/awt/viewer/PreviewDialog$27/27(org.apache.fop.render.awt.viewer.PreviewDialog,java.lang.String,int)
org/apache/fop/render/awt/viewer/PreviewDialog/setupMenu()#org/apache/fop/render/awt/viewer/PreviewDialog$16/16(org.apache.fop.render.awt.viewer.PreviewDialog,java.lang.String,int)
org/apache/fop/render/awt/viewer/PreviewDialog/setupMenu()#org/apache/fop/render/awt/viewer/PreviewDialog$26/26(org.apache.fop.render.awt.viewer.PreviewDialog,java.lang.String,int)
org/apache/fop/render/awt/viewer/PreviewDialog/setupMenu()#org/apache/fop/render/awt/viewer/PreviewDialog$15/15(org.apache.fop.render.awt.viewer.PreviewDialog,java.lang.String,int)
org/apache/fop/render/awt/viewer/PreviewDialog/setupMenu()#org/apache/fop/render/awt/viewer/PreviewDialog$25/25(org.apache.fop.render.awt.viewer.PreviewDialog,java.lang.String,int)
org/apache/fop/render/awt/viewer/PreviewDialog/setupMenu()#org/apache/fop/render/awt/viewer/PreviewDialog$14/14(org.apache.fop.render.awt.viewer.PreviewDialog,java.lang.String,int)
org/apache/fop/render/awt/viewer/PreviewDialog/setupMenu()#org/apache/fop/render/awt/viewer/PreviewDialog$24/24(org.apache.fop.render.awt.viewer.PreviewDialog,java.lang.String,int)
org/apache/fop/render/awt/viewer/PreviewDialog/setupMenu()#org/apache/fop/render/awt/viewer/PreviewDialog$13/13(org.apache.fop.render.awt.viewer.PreviewDialog,java.lang.String,int)
org/apache/fop/render/awt/viewer/PreviewDialog/setupMenu()#org/apache/fop/render/awt/viewer/PreviewDialog$23/23(org.apache.fop.render.awt.viewer.PreviewDialog,java.lang.String,int)
org/apache/fop/render/awt/viewer/PreviewDialog/setupMenu()#org/apache/fop/render/awt/viewer/PreviewDialog$12/12(org.apache.fop.render.awt.viewer.PreviewDialog,java.lang.String,int)
org/apache/fop/render/awt/viewer/PreviewDialog/setupMenu()#org/apache/fop/render/awt/viewer/PreviewDialog$32/32(org.apache.fop.render.awt.viewer.PreviewDialog,java.lang.String,int)
org/apache/fop/render/awt/viewer/PreviewDialog/setupMenu()#org/apache/fop/render/awt/viewer/PreviewDialog$21/21(org.apache.fop.render.awt.viewer.PreviewDialog,java.lang.String,int)
org/apache/fop/render/awt/viewer/PreviewDialog/setupMenu()#javax/swing/JRadioButtonMenuItem/setSelected(boolean)
org/apache/fop/render/awt/viewer/PreviewDialog/setupMenu()#javax/swing/JMenu/JMenu(java.lang.String)
org/apache/fop/fo/flow/Markers/register(java.util.Map,boolean,boolean,boolean)#java/util/Iterator/hasNext()
org/apache/fop/fo/flow/Markers/register(java.util.Map,boolean,boolean,boolean)#java/util/Map/putAll(java.util.Map)
org/apache/fop/fo/flow/Markers/register(java.util.Map,boolean,boolean,boolean)#org/apache/commons/logging/Log/isDebugEnabled()
org/apache/fop/fo/flow/Markers/register(java.util.Map,boolean,boolean,boolean)#java/util/Set/iterator()
org/apache/fop/fo/flow/Markers/register(java.util.Map,boolean,boolean,boolean)#java/util/Map/containsKey(java.lang.Object)
org/apache/fop/fo/flow/Markers/register(java.util.Map,boolean,boolean,boolean)#java/util/Map/entrySet()
org/apache/fop/fo/flow/Markers/register(java.util.Map,boolean,boolean,boolean)#java/lang/StringBuilder/toString()
org/apache/fop/fo/flow/Markers/register(java.util.Map,boolean,boolean,boolean)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/fop/fo/flow/Markers/register(java.util.Map,boolean,boolean,boolean)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/fop/fo/flow/Markers/register(java.util.Map,boolean,boolean,boolean)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/fo/flow/Markers/register(java.util.Map,boolean,boolean,boolean)#java/util/Map$Entry/getKey()
org/apache/fop/fo/flow/Markers/register(java.util.Map,boolean,boolean,boolean)#java/util/Iterator/next()
org/apache/fop/fo/flow/Markers/register(java.util.Map,boolean,boolean,boolean)#java/util/HashMap/HashMap()
org/apache/fop/fo/flow/Markers/register(java.util.Map,boolean,boolean,boolean)#java/util/Map/keySet()
org/apache/fop/fo/flow/Markers/register(java.util.Map,boolean,boolean,boolean)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/fo/flow/Markers/register(java.util.Map,boolean,boolean,boolean)#org/apache/commons/logging/Log/trace(java.lang.Object)
org/apache/fop/fo/flow/Markers/register(java.util.Map,boolean,boolean,boolean)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/fop/fo/flow/Markers/register(java.util.Map,boolean,boolean,boolean)#java/util/Map$Entry/getValue()
org/apache/fop/fo/flow/Markers/register(java.util.Map,boolean,boolean,boolean)#org/apache/commons/logging/Log/isTraceEnabled()
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfHeader/writeUserProperties()#java/lang/Object/toString()
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfHeader/writeUserProperties()#java/util/Map$Entry/getKey()
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfHeader/writeUserProperties()#java/util/Iterator/next()
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfHeader/writeUserProperties()#java/util/Set/iterator()
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfHeader/writeUserProperties()#java/util/Map$Entry/getValue()
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfHeader/writeUserProperties()#org/apache/fop/render/rtf/rtflib/rtfdoc/RtfHeader/writeStarControlWord(java.lang.String)
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfHeader/writeUserProperties()#java/util/Map/entrySet()
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfHeader/writeUserProperties()#org/apache/fop/render/rtf/rtflib/rtfdoc/RtfHeader/writeGroupMark(boolean)
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfHeader/writeUserProperties()#java/util/Iterator/hasNext()
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfHeader/writeUserProperties()#org/apache/fop/render/rtf/rtflib/rtfdoc/RtfHeader/writeControlWord(java.lang.String)
org/apache/fop/render/rtf/rtflib/rtfdoc/RtfHeader/writeUserProperties()#java/util/Map/size()
org/apache/fop/complexscripts/fonts/GlyphTable/ChainedClassSequenceRule/toString()#org/apache/fop/complexscripts/fonts/GlyphTable$ChainedClassSequenceRule/getClasses()
org/apache/fop/complexscripts/fonts/GlyphTable/ChainedClassSequenceRule/toString()#java/lang/StringBuffer/toString()
org/apache/fop/complexscripts/fonts/GlyphTable/ChainedClassSequenceRule/toString()#java/lang/StringBuilder/StringBuilder()
org/apache/fop/complexscripts/fonts/GlyphTable/ChainedClassSequenceRule/toString()#java/util/Arrays/toString(int[])
org/apache/fop/complexscripts/fonts/GlyphTable/ChainedClassSequenceRule/toString()#org/apache/fop/complexscripts/fonts/GlyphTable$ChainedClassSequenceRule/getLookups()
org/apache/fop/complexscripts/fonts/GlyphTable/ChainedClassSequenceRule/toString()#java/lang/StringBuffer/append(java.lang.String)
org/apache/fop/complexscripts/fonts/GlyphTable/ChainedClassSequenceRule/toString()#java/lang/StringBuffer/StringBuffer()
org/apache/fop/complexscripts/fonts/GlyphTable/ChainedClassSequenceRule/toString()#java/lang/StringBuilder/toString()
org/apache/fop/complexscripts/fonts/GlyphTable/ChainedClassSequenceRule/toString()#java/util/Arrays/toString(java.lang.Object[])
org/apache/fop/complexscripts/fonts/GlyphTable/ChainedClassSequenceRule/toString()#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/render/afp/AFPFontConfig/RasterFontConfig/getFontInfo(org.apache.fop.apps.io.InternalResourceResolver,org.apache.fop.afp.AFPEventProducer)#org/apache/fop/render/afp/AFPFontConfig$AFPFontConfigData/access$900(org.apache.fop.render.afp.AFPFontConfig$AFPFontConfigData)
org/apache/fop/render/afp/AFPFontConfig/RasterFontConfig/getFontInfo(org.apache.fop.apps.io.InternalResourceResolver,org.apache.fop.afp.AFPEventProducer)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/render/afp/AFPFontConfig/RasterFontConfig/getFontInfo(org.apache.fop.apps.io.InternalResourceResolver,org.apache.fop.afp.AFPEventProducer)#org/apache/fop/render/afp/AFPFontConfig$RasterCharactersetData/access$1600(org.apache.fop.render.afp.AFPFontConfig$RasterCharactersetData)
org/apache/fop/render/afp/AFPFontConfig/RasterFontConfig/getFontInfo(org.apache.fop.apps.io.InternalResourceResolver,org.apache.fop.afp.AFPEventProducer)#org/apache/fop/render/afp/AFPFontConfig$RasterCharactersetData/access$1700(org.apache.fop.render.afp.AFPFontConfig$RasterCharactersetData)
org/apache/fop/render/afp/AFPFontConfig/RasterFontConfig/getFontInfo(org.apache.fop.apps.io.InternalResourceResolver,org.apache.fop.afp.AFPEventProducer)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/render/afp/AFPFontConfig/RasterFontConfig/getFontInfo(org.apache.fop.apps.io.InternalResourceResolver,org.apache.fop.afp.AFPEventProducer)#org/apache/fop/render/afp/AFPFontConfig$AFPFontConfigData/access$1100(org.apache.fop.render.afp.AFPFontConfig$AFPFontConfigData)
org/apache/fop/render/afp/AFPFontConfig/RasterFontConfig/getFontInfo(org.apache.fop.apps.io.InternalResourceResolver,org.apache.fop.afp.AFPEventProducer)#java/lang/StringBuilder/toString()
org/apache/fop/render/afp/AFPFontConfig/RasterFontConfig/getFontInfo(org.apache.fop.apps.io.InternalResourceResolver,org.apache.fop.afp.AFPEventProducer)#java/util/Iterator/hasNext()
org/apache/fop/render/afp/AFPFontConfig/RasterFontConfig/getFontInfo(org.apache.fop.apps.io.InternalResourceResolver,org.apache.fop.afp.AFPEventProducer)#org/apache/fop/render/afp/AFPFontConfig$RasterFontConfig/getFontInfo(org.apache.fop.afp.fonts.AFPFont,org.apache.fop.render.afp.AFPFontConfig$AFPFontConfigData)
org/apache/fop/render/afp/AFPFontConfig/RasterFontConfig/getFontInfo(org.apache.fop.apps.io.InternalResourceResolver,org.apache.fop.afp.AFPEventProducer)#org/apache/fop/render/afp/AFPFontConfig$RasterFontConfig/getAccessor(org.apache.fop.apps.io.InternalResourceResolver)
org/apache/fop/render/afp/AFPFontConfig/RasterFontConfig/getFontInfo(org.apache.fop.apps.io.InternalResourceResolver,org.apache.fop.afp.AFPEventProducer)#java/util/Iterator/next()
org/apache/fop/render/afp/AFPFontConfig/RasterFontConfig/getFontInfo(org.apache.fop.apps.io.InternalResourceResolver,org.apache.fop.afp.AFPEventProducer)#org/apache/fop/render/afp/AFPFontConfig$RasterCharactersetData/access$1500(org.apache.fop.render.afp.AFPFontConfig$RasterCharactersetData)
org/apache/fop/render/afp/AFPFontConfig/RasterFontConfig/getFontInfo(org.apache.fop.apps.io.InternalResourceResolver,org.apache.fop.afp.AFPEventProducer)#org/apache/fop/render/afp/AFPFontConfig$AFPFontConfigData/access$1400(org.apache.fop.render.afp.AFPFontConfig$AFPFontConfigData)
org/apache/fop/render/afp/AFPFontConfig/RasterFontConfig/getFontInfo(org.apache.fop.apps.io.InternalResourceResolver,org.apache.fop.afp.AFPEventProducer)#org/apache/commons/logging/Log/error(java.lang.Object)
org/apache/fop/render/afp/AFPFontConfig/RasterFontConfig/getFontInfo(org.apache.fop.apps.io.InternalResourceResolver,org.apache.fop.afp.AFPEventProducer)#java/util/List/iterator()
org/apache/fop/render/afp/AFPFontConfig/RasterFontConfig/getFontInfo(org.apache.fop.apps.io.InternalResourceResolver,org.apache.fop.afp.AFPEventProducer)#org/apache/fop/render/afp/AFPFontConfig$AFPFontConfigData/access$1000(org.apache.fop.render.afp.AFPFontConfig$AFPFontConfigData)
org/apache/fop/render/awt/viewer/ImageProxyPanel/paintComponent(java.awt.Graphics)#java/awt/Graphics/fillRect(int,int,int,int)
org/apache/fop/render/awt/viewer/ImageProxyPanel/paintComponent(java.awt.Graphics)#org/apache/fop/render/awt/viewer/ImageProxyPanel/getHeight()
org/apache/fop/render/awt/viewer/ImageProxyPanel/paintComponent(java.awt.Graphics)#org/apache/fop/render/awt/AWTRenderer/getPageImage(int)
org/apache/fop/render/awt/viewer/ImageProxyPanel/paintComponent(java.awt.Graphics)#org/apache/fop/render/awt/viewer/ImageProxyPanel/getBackground()
org/apache/fop/render/awt/viewer/ImageProxyPanel/paintComponent(java.awt.Graphics)#java/awt/image/BufferedImage/getWidth()
org/apache/fop/render/awt/viewer/ImageProxyPanel/paintComponent(java.awt.Graphics)#java/awt/image/BufferedImage/getHeight()
org/apache/fop/render/awt/viewer/ImageProxyPanel/paintComponent(java.awt.Graphics)#java/lang/ref/SoftReference/SoftReference(java.lang.Object)
org/apache/fop/render/awt/viewer/ImageProxyPanel/paintComponent(java.awt.Graphics)#javax/swing/JPanel/paintComponent(java.awt.Graphics)
org/apache/fop/render/awt/viewer/ImageProxyPanel/paintComponent(java.awt.Graphics)#java/awt/Graphics/setColor(java.awt.Color)
org/apache/fop/render/awt/viewer/ImageProxyPanel/paintComponent(java.awt.Graphics)#org/apache/fop/render/awt/viewer/ImageProxyPanel/getWidth()
org/apache/fop/render/awt/viewer/ImageProxyPanel/paintComponent(java.awt.Graphics)#java/lang/ref/Reference/get()
org/apache/fop/render/awt/viewer/ImageProxyPanel/paintComponent(java.awt.Graphics)#org/apache/fop/render/awt/viewer/ImageProxyPanel/isOpaque()
org/apache/fop/render/awt/viewer/ImageProxyPanel/paintComponent(java.awt.Graphics)#java/awt/Graphics/drawImage(java.awt.Image,int,int,int,int,java.awt.image.ImageObserver)
org/apache/fop/servlet/ServletContextURIResolver/resolveServletContextURI(java.lang.String)#java/net/URL/toExternalForm()
org/apache/fop/servlet/ServletContextURIResolver/resolveServletContextURI(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/servlet/ServletContextURIResolver/resolveServletContextURI(java.lang.String)#javax/servlet/ServletContext/getResourceAsStream(java.lang.String)
org/apache/fop/servlet/ServletContextURIResolver/resolveServletContextURI(java.lang.String)#javax/xml/transform/stream/StreamSource/StreamSource(java.io.InputStream)
org/apache/fop/servlet/ServletContextURIResolver/resolveServletContextURI(java.lang.String)#javax/xml/transform/stream/StreamSource/StreamSource(java.io.InputStream,java.lang.String)
org/apache/fop/servlet/ServletContextURIResolver/resolveServletContextURI(java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/servlet/ServletContextURIResolver/resolveServletContextURI(java.lang.String)#java/lang/String/substring(int)
org/apache/fop/servlet/ServletContextURIResolver/resolveServletContextURI(java.lang.String)#javax/servlet/ServletContext/getResource(java.lang.String)
org/apache/fop/servlet/ServletContextURIResolver/resolveServletContextURI(java.lang.String)#java/lang/String/startsWith(java.lang.String)
org/apache/fop/servlet/ServletContextURIResolver/resolveServletContextURI(java.lang.String)#java/lang/StringBuilder/toString()
org/apache/fop/servlet/ServletContextURIResolver/resolveServletContextURI(java.lang.String)#javax/xml/transform/TransformerException/TransformerException(java.lang.String,java.lang.Throwable)
org/apache/fop/servlet/ServletContextURIResolver/resolveServletContextURI(java.lang.String)#javax/xml/transform/TransformerException/TransformerException(java.lang.String)
org/apache/fop/render/rtf/FoUnitsConverter/convertToTwips(java.lang.String)#java/lang/String/length()
org/apache/fop/render/rtf/FoUnitsConverter/convertToTwips(java.lang.String)#java/lang/Character/isDigit(char)
org/apache/fop/render/rtf/FoUnitsConverter/convertToTwips(java.lang.String)#java/lang/StringBuffer/toString()
org/apache/fop/render/rtf/FoUnitsConverter/convertToTwips(java.lang.String)#java/lang/String/substring(int)
org/apache/fop/render/rtf/FoUnitsConverter/convertToTwips(java.lang.String)#java/lang/StringBuffer/append(java.lang.String)
org/apache/fop/render/rtf/FoUnitsConverter/convertToTwips(java.lang.String)#java/lang/StringBuffer/StringBuffer()
org/apache/fop/render/rtf/FoUnitsConverter/convertToTwips(java.lang.String)#java/lang/String/charAt(int)
org/apache/fop/render/rtf/FoUnitsConverter/convertToTwips(java.lang.String)#java/lang/String/trim()
org/apache/fop/render/rtf/FoUnitsConverter/convertToTwips(java.lang.String)#java/lang/StringBuffer/append(char)
org/apache/fop/render/rtf/FoUnitsConverter/convertFontSize(java.lang.String)#java/lang/String/length()
org/apache/fop/render/rtf/FoUnitsConverter/convertFontSize(java.lang.String)#java/lang/String/substring(int,int)
org/apache/fop/render/rtf/FoUnitsConverter/convertFontSize(java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/render/rtf/FoUnitsConverter/convertFontSize(java.lang.String)#java/lang/Float/floatValue()
org/apache/fop/render/rtf/FoUnitsConverter/convertFontSize(java.lang.String)#java/lang/Float/valueOf(java.lang.String)
org/apache/fop/render/rtf/FoUnitsConverter/convertFontSize(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/render/rtf/FoUnitsConverter/convertFontSize(java.lang.String)#java/lang/String/trim()
org/apache/fop/render/rtf/FoUnitsConverter/convertFontSize(java.lang.String)#java/lang/StringBuilder/toString()
org/apache/fop/render/rtf/FoUnitsConverter/convertFontSize(java.lang.String)#java/lang/String/endsWith(java.lang.String)
org/apache/fop/render/rtf/FoUnitsConverter/numberToTwips(java.lang.String,java.lang.String)#java/lang/String/toLowerCase()
org/apache/fop/render/rtf/FoUnitsConverter/numberToTwips(java.lang.String,java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/render/rtf/FoUnitsConverter/numberToTwips(java.lang.String,java.lang.String)#java/lang/Float/floatValue()
org/apache/fop/render/rtf/FoUnitsConverter/numberToTwips(java.lang.String,java.lang.String)#java/lang/Float/valueOf(java.lang.String)
org/apache/fop/render/rtf/FoUnitsConverter/numberToTwips(java.lang.String,java.lang.String)#java/lang/StringBuilder/toString()
org/apache/fop/render/rtf/FoUnitsConverter/numberToTwips(java.lang.String,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/render/rtf/FoUnitsConverter/numberToTwips(java.lang.String,java.lang.String)#java/lang/String/trim()
org/apache/fop/render/rtf/FoUnitsConverter/numberToTwips(java.lang.String,java.lang.String)#java/lang/String/length()
org/apache/fop/render/rtf/FoUnitsConverter/numberToTwips(java.lang.String,java.lang.String)#java/util/Map/get(java.lang.Object)
org/apache/fop/complexscripts/fonts/GlyphTable/GlyphSequenceRule/toString()#org/apache/fop/complexscripts/fonts/GlyphTable$GlyphSequenceRule/getLookups()
org/apache/fop/complexscripts/fonts/GlyphTable/GlyphSequenceRule/toString()#java/lang/StringBuffer/toString()
org/apache/fop/complexscripts/fonts/GlyphTable/GlyphSequenceRule/toString()#java/lang/StringBuilder/StringBuilder()
org/apache/fop/complexscripts/fonts/GlyphTable/GlyphSequenceRule/toString()#java/util/Arrays/toString(int[])
org/apache/fop/complexscripts/fonts/GlyphTable/GlyphSequenceRule/toString()#java/lang/StringBuffer/append(java.lang.String)
org/apache/fop/complexscripts/fonts/GlyphTable/GlyphSequenceRule/toString()#java/lang/StringBuffer/StringBuffer()
org/apache/fop/complexscripts/fonts/GlyphTable/GlyphSequenceRule/toString()#java/lang/StringBuilder/toString()
org/apache/fop/complexscripts/fonts/GlyphTable/GlyphSequenceRule/toString()#java/util/Arrays/toString(java.lang.Object[])
org/apache/fop/complexscripts/fonts/GlyphTable/GlyphSequenceRule/toString()#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/render/java2d/Java2DFontMetrics/setFont(java.lang.String,int,int)#java/awt/geom/Rectangle2D/getY()
org/apache/fop/render/java2d/Java2DFontMetrics/setFont(java.lang.String,int,int)#java/awt/Graphics2D/getFontRenderContext()
org/apache/fop/render/java2d/Java2DFontMetrics/setFont(java.lang.String,int,int)#java/lang/Math/round(double)
org/apache/fop/render/java2d/Java2DFontMetrics/setFont(java.lang.String,int,int)#java/awt/font/TextLayout/TextLayout(java.lang.String,java.awt.Font,java.awt.font.FontRenderContext)
org/apache/fop/render/java2d/Java2DFontMetrics/setFont(java.lang.String,int,int)#java/lang/String/equals(java.lang.Object)
org/apache/fop/render/java2d/Java2DFontMetrics/setFont(java.lang.String,int,int)#java/awt/geom/Rectangle2D/getHeight()
org/apache/fop/render/java2d/Java2DFontMetrics/setFont(java.lang.String,int,int)#java/awt/font/TextLayout/getBounds()
org/apache/fop/render/java2d/Java2DFontMetrics/setFont(java.lang.String,int,int)#java/awt/Graphics2D/getFontMetrics(java.awt.Font)
org/apache/fop/render/java2d/Java2DFontMetrics/setFont(java.lang.String,int,int)#java/awt/Font/deriveFont(int,float)
org/apache/fop/render/java2d/Java2DFontMetrics/setFont(java.lang.String,int,int)#java/awt/Font/getLineMetrics(java.lang.String,java.awt.font.FontRenderContext)
org/apache/fop/events/DefaultEventBroadcaster/1/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/util/Iterator/hasNext()
org/apache/fop/events/DefaultEventBroadcaster/1/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/lang/reflect/Method/getName()
org/apache/fop/events/DefaultEventBroadcaster/1/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/lang/StringBuilder/StringBuilder()
org/apache/fop/events/DefaultEventBroadcaster/1/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/util/List/iterator()
org/apache/fop/events/DefaultEventBroadcaster/1/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#org/apache/fop/events/model/EventMethodModel$Parameter/getName()
org/apache/fop/events/DefaultEventBroadcaster/1/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/fop/events/DefaultEventBroadcaster/1/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/apache/fop/events/DefaultEventBroadcaster/1/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/events/DefaultEventBroadcaster/1/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/util/Iterator/next()
org/apache/fop/events/DefaultEventBroadcaster/1/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/util/HashMap/HashMap()
org/apache/fop/events/DefaultEventBroadcaster/1/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/lang/StringBuilder/toString()
org/apache/fop/layoutmgr/inline/TextLayoutManager/addALetterSpaceTo(java.util.List,int)#java/util/ListIterator/add(java.lang.Object)
org/apache/fop/layoutmgr/inline/TextLayoutManager/addALetterSpaceTo(java.util.List,int)#java/util/ListIterator/set(java.lang.Object)
org/apache/fop/layoutmgr/inline/TextLayoutManager/addALetterSpaceTo(java.util.List,int)#java/util/List/size()
org/apache/fop/layoutmgr/inline/TextLayoutManager/addALetterSpaceTo(java.util.List,int)#java/util/ListIterator/next()
org/apache/fop/layoutmgr/inline/TextLayoutManager/addALetterSpaceTo(java.util.List,int)#java/util/List/listIterator()
org/apache/fop/layoutmgr/inline/TextLayoutManager/addALetterSpaceTo(java.util.List,int)#org/apache/fop/layoutmgr/KnuthElement/getPosition()
org/apache/fop/layoutmgr/inline/TextLayoutManager/addALetterSpaceTo(java.util.List,int)#java/lang/AssertionError/AssertionError()
org/apache/fop/layoutmgr/inline/TextLayoutManager/addALetterSpaceTo(java.util.List,int)#java/util/List/listIterator(int)
org/apache/fop/layoutmgr/inline/TextLayoutManager/addALetterSpaceTo(java.util.List,int)#java/lang/String/indexOf(int)
org/apache/fop/layoutmgr/inline/TextLayoutManager/addMappingAreas(org.apache.fop.fonts.GlyphMapping,int,int,int,int,org.apache.fop.traits.MinOptMax,org.apache.fop.layoutmgr.LayoutContext)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/layoutmgr/inline/TextLayoutManager/addMappingAreas(org.apache.fop.fonts.GlyphMapping,int,int,int,int,org.apache.fop.traits.MinOptMax,org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/area/inline/TextArea/getTextLetterSpaceAdjust()
org/apache/fop/layoutmgr/inline/TextLayoutManager/addMappingAreas(org.apache.fop.fonts.GlyphMapping,int,int,int,int,org.apache.fop.traits.MinOptMax,org.apache.fop.layoutmgr.LayoutContext)#java/lang/StringBuilder/append(int)
org/apache/fop/layoutmgr/inline/TextLayoutManager/addMappingAreas(org.apache.fop.fonts.GlyphMapping,int,int,int,int,org.apache.fop.traits.MinOptMax,org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/layoutmgr/inline/TextLayoutManager$TextAreaBuilder/access$100(org.apache.fop.layoutmgr.inline.TextLayoutManager$TextAreaBuilder)
org/apache/fop/layoutmgr/inline/TextLayoutManager/addMappingAreas(org.apache.fop.fonts.GlyphMapping,int,int,int,int,org.apache.fop.traits.MinOptMax,org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/area/inline/TextArea/setSpaceDifference(int)
org/apache/fop/layoutmgr/inline/TextLayoutManager/addMappingAreas(org.apache.fop.fonts.GlyphMapping,int,int,int,int,org.apache.fop.traits.MinOptMax,org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/area/inline/TextArea/setTextLetterSpaceAdjust(int)
org/apache/fop/layoutmgr/inline/TextLayoutManager/addMappingAreas(org.apache.fop.fonts.GlyphMapping,int,int,int,int,org.apache.fop.traits.MinOptMax,org.apache.fop.layoutmgr.LayoutContext)#java/lang/StringBuilder/toString()
org/apache/fop/layoutmgr/inline/TextLayoutManager/addMappingAreas(org.apache.fop.fonts.GlyphMapping,int,int,int,int,org.apache.fop.traits.MinOptMax,org.apache.fop.layoutmgr.LayoutContext)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/layoutmgr/inline/TextLayoutManager/addMappingAreas(org.apache.fop.fonts.GlyphMapping,int,int,int,int,org.apache.fop.traits.MinOptMax,org.apache.fop.layoutmgr.LayoutContext)#org/apache/commons/logging/Log/trace(java.lang.Object)
org/apache/fop/layoutmgr/inline/TextLayoutManager/addMappingAreas(org.apache.fop.fonts.GlyphMapping,int,int,int,int,org.apache.fop.traits.MinOptMax,org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/layoutmgr/inline/TextLayoutManager$TextAreaBuilder/TextAreaBuilder(org.apache.fop.layoutmgr.inline.TextLayoutManager,org.apache.fop.traits.MinOptMax,int,org.apache.fop.layoutmgr.LayoutContext,int,int,boolean,org.apache.fop.fonts.Font,org.apache.fop.layoutmgr.inline.TextLayoutManager$1)
org/apache/fop/layoutmgr/inline/TextLayoutManager/addMappingAreas(org.apache.fop.fonts.GlyphMapping,int,int,int,int,org.apache.fop.traits.MinOptMax,org.apache.fop.layoutmgr.LayoutContext)#org/apache/fop/area/inline/TextArea/setTextWordSpaceAdjust(int)
org/apache/fop/layoutmgr/inline/TextLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#java/lang/StringBuilder/append(int)
org/apache/fop/layoutmgr/inline/TextLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#java/lang/StringBuilder/append(boolean)
org/apache/fop/layoutmgr/inline/TextLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/layoutmgr/inline/TextLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#java/lang/StringBuilder/toString()
org/apache/fop/layoutmgr/inline/TextLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/fop/layoutmgr/inline/TextLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/layoutmgr/inline/TextLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#java/util/List/isEmpty()
org/apache/fop/layoutmgr/inline/TextLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#org/apache/commons/logging/Log/isDebugEnabled()
org/apache/fop/layoutmgr/inline/TextLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#java/util/LinkedList/LinkedList()
org/apache/fop/layoutmgr/inline/TextLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#java/util/List/add(java.lang.Object)
org/apache/fop/layoutmgr/inline/TextLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#org/apache/commons/logging/Log/error(java.lang.Object)
org/apache/fop/layoutmgr/inline/TextLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#org/apache/fop/layoutmgr/inline/TextLayoutManager/setFinished(boolean)
org/apache/fop/layoutmgr/inline/TextLayoutManager/applyChanges(java.util.List,int)#org/apache/fop/layoutmgr/KnuthElement/getPosition()
org/apache/fop/layoutmgr/inline/TextLayoutManager/applyChanges(java.util.List,int)#java/util/ListIterator/hasNext()
org/apache/fop/layoutmgr/inline/TextLayoutManager/applyChanges(java.util.List,int)#org/apache/fop/layoutmgr/inline/TextLayoutManager$PendingChange/access$800(org.apache.fop.layoutmgr.inline.TextLayoutManager$PendingChange)
org/apache/fop/layoutmgr/inline/TextLayoutManager/applyChanges(java.util.List,int)#java/util/ListIterator/hasPrevious()
org/apache/fop/layoutmgr/inline/TextLayoutManager/applyChanges(java.util.List,int)#java/util/List/isEmpty()
org/apache/fop/layoutmgr/inline/TextLayoutManager/applyChanges(java.util.List,int)#java/util/List/size()
org/apache/fop/layoutmgr/inline/TextLayoutManager/applyChanges(java.util.List,int)#java/util/ListIterator/next()
org/apache/fop/layoutmgr/inline/TextLayoutManager/applyChanges(java.util.List,int)#java/util/List/listIterator()
org/apache/fop/layoutmgr/inline/TextLayoutManager/applyChanges(java.util.List,int)#org/apache/fop/layoutmgr/inline/TextLayoutManager$PendingChange/access$700(org.apache.fop.layoutmgr.inline.TextLayoutManager$PendingChange)
org/apache/fop/layoutmgr/inline/TextLayoutManager/applyChanges(java.util.List,int)#java/util/ListIterator/previous()
org/apache/fop/layoutmgr/inline/TextLayoutManager/applyChanges(java.util.List,int)#java/util/List/clear()
org/apache/fop/layoutmgr/inline/TextLayoutManager/applyChanges(java.util.List,int)#org/apache/fop/layoutmgr/inline/TextLayoutManager/setFinished(boolean)
org/apache/fop/layoutmgr/inline/TextLayoutManager/applyChanges(java.util.List,int)#java/lang/AssertionError/AssertionError()
org/apache/fop/layoutmgr/inline/TextLayoutManager/applyChanges(java.util.List,int)#java/util/List/listIterator(int)
org/apache/fop/complexscripts/fonts/GlyphSubstitutionTable/LigatureSubtable/substitute(org.apache.fop.complexscripts.fonts.GlyphSubstitutionState)#org/apache/fop/complexscripts/fonts/GlyphSubstitutionState/getIgnoredAssociations(int,int)
org/apache/fop/complexscripts/fonts/GlyphSubstitutionTable/LigatureSubtable/substitute(org.apache.fop.complexscripts.fonts.GlyphSubstitutionState)#org/apache/fop/complexscripts/fonts/GlyphSubstitutionTable$Ligature/getNumComponents()
org/apache/fop/complexscripts/fonts/GlyphSubstitutionTable/LigatureSubtable/substitute(org.apache.fop.complexscripts.fonts.GlyphSubstitutionState)#org/apache/fop/complexscripts/fonts/GlyphSubstitutionTable$LigatureSubtable/getCoverageIndex(int)
org/apache/fop/complexscripts/fonts/GlyphSubstitutionTable/LigatureSubtable/substitute(org.apache.fop.complexscripts.fonts.GlyphSubstitutionState)#org/apache/fop/complexscripts/fonts/GlyphSubstitutionState/getIgnoreDefault()
org/apache/fop/complexscripts/fonts/GlyphSubstitutionTable/LigatureSubtable/substitute(org.apache.fop.complexscripts.fonts.GlyphSubstitutionState)#org/apache/fop/complexscripts/fonts/GlyphSubstitutionTable$LigatureSubtable/findLigature(org.apache.fop.complexscripts.fonts.GlyphSubstitutionTable$LigatureSet,int[])
org/apache/fop/complexscripts/fonts/GlyphSubstitutionTable/LigatureSubtable/substitute(org.apache.fop.complexscripts.fonts.GlyphSubstitutionState)#org/apache/fop/complexscripts/fonts/GlyphSubstitutionTable$LigatureSubtable/getLigatureSetForCoverageIndex(int,int)
org/apache/fop/complexscripts/fonts/GlyphSubstitutionTable/LigatureSubtable/substitute(org.apache.fop.complexscripts.fonts.GlyphSubstitutionState)#org/apache/fop/complexscripts/fonts/GlyphSubstitutionState/consume(int)
org/apache/fop/complexscripts/fonts/GlyphSubstitutionTable/LigatureSubtable/substitute(org.apache.fop.complexscripts.fonts.GlyphSubstitutionState)#org/apache/fop/complexscripts/fonts/GlyphSubstitutionState/getGlyphsAvailable(int,boolean,org.apache.fop.complexscripts.util.GlyphTester)
org/apache/fop/complexscripts/fonts/GlyphSubstitutionTable/LigatureSubtable/substitute(org.apache.fop.complexscripts.fonts.GlyphSubstitutionState)#org/apache/fop/complexscripts/fonts/GlyphSubstitutionState/getIgnoredGlyphs(int,int)
org/apache/fop/complexscripts/fonts/GlyphSubstitutionTable/LigatureSubtable/substitute(org.apache.fop.complexscripts.fonts.GlyphSubstitutionState)#org/apache/fop/complexscripts/fonts/GlyphSubstitutionState/getGlyphs(int,int,boolean,org.apache.fop.complexscripts.util.GlyphTester,int[],int[])
org/apache/fop/complexscripts/fonts/GlyphSubstitutionTable/LigatureSubtable/substitute(org.apache.fop.complexscripts.fonts.GlyphSubstitutionState)#org/apache/fop/complexscripts/fonts/GlyphSubstitutionTable$Ligature/getLigature()
org/apache/fop/complexscripts/fonts/GlyphSubstitutionTable/LigatureSubtable/substitute(org.apache.fop.complexscripts.fonts.GlyphSubstitutionState)#org/apache/fop/complexscripts/fonts/GlyphSubstitutionState/getAssociations(int,int)
org/apache/fop/complexscripts/fonts/GlyphSubstitutionTable/LigatureSubtable/substitute(org.apache.fop.complexscripts.fonts.GlyphSubstitutionState)#org/apache/fop/complexscripts/fonts/GlyphSubstitutionState/getGlyph()
org/apache/fop/layoutmgr/PageProvider/getPage(boolean,int)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/fop/layoutmgr/PageProvider/getPage(boolean,int)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/layoutmgr/PageProvider/getPage(boolean,int)#java/lang/StringBuilder/append(int)
org/apache/fop/layoutmgr/PageProvider/getPage(boolean,int)#java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)
org/apache/fop/layoutmgr/PageProvider/getPage(boolean,int)#java/util/List/get(int)
org/apache/fop/layoutmgr/PageProvider/getPage(boolean,int)#org/apache/commons/logging/Log/isTraceEnabled()
org/apache/fop/layoutmgr/PageProvider/getPage(boolean,int)#java/lang/StringBuilder/toString()
org/apache/fop/layoutmgr/PageProvider/getPage(boolean,int)#java/util/List/size()
org/apache/fop/layoutmgr/PageProvider/getPage(boolean,int)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/layoutmgr/PageProvider/getPage(boolean,int)#org/apache/commons/logging/Log/trace(java.lang.Object)
org/apache/fop/fonts/truetype/OTFFile/getGIDMappings(org.apache.fontbox.cff.CFFFont)#org/apache/fontbox/cff/CFFFont/getCharset()
org/apache/fop/fonts/truetype/OTFFile/getGIDMappings(org.apache.fontbox.cff.CFFFont)#java/util/Iterator/hasNext()
org/apache/fop/fonts/truetype/OTFFile/getGIDMappings(org.apache.fontbox.cff.CFFFont)#org/apache/fop/fonts/truetype/OTFFile$Mapping/setSID(int)
org/apache/fop/fonts/truetype/OTFFile/getGIDMappings(org.apache.fontbox.cff.CFFFont)#java/util/Map/get(java.lang.Object)
org/apache/fop/fonts/truetype/OTFFile/getGIDMappings(org.apache.fontbox.cff.CFFFont)#java/util/Iterator/next()
org/apache/fop/fonts/truetype/OTFFile/getGIDMappings(org.apache.fontbox.cff.CFFFont)#org/apache/fontbox/cff/charset/CFFCharset$Entry/getSID()
org/apache/fop/fonts/truetype/OTFFile/getGIDMappings(org.apache.fontbox.cff.CFFFont)#java/util/List/add(java.lang.Object)
org/apache/fop/fonts/truetype/OTFFile/getGIDMappings(org.apache.fontbox.cff.CFFFont)#org/apache/fontbox/cff/CFFFont/getCharStringsDict()
org/apache/fop/fonts/truetype/OTFFile/getGIDMappings(org.apache.fontbox.cff.CFFFont)#java/util/List/iterator()
org/apache/fop/fonts/truetype/OTFFile/getGIDMappings(org.apache.fontbox.cff.CFFFont)#org/apache/fontbox/cff/charset/CFFCharset$Entry/getName()
org/apache/fop/fonts/truetype/OTFFile/getGIDMappings(org.apache.fontbox.cff.CFFFont)#org/apache/fop/fonts/truetype/OTFFile$Mapping/setBytes(byte[])
org/apache/fop/fonts/truetype/OTFFile/getGIDMappings(org.apache.fontbox.cff.CFFFont)#org/apache/fontbox/cff/charset/CFFCharset/getEntries()
org/apache/fop/fonts/truetype/OTFFile/getGIDMappings(org.apache.fontbox.cff.CFFFont)#java/util/ArrayList/ArrayList()
org/apache/fop/fonts/truetype/OTFFile/getGIDMappings(org.apache.fontbox.cff.CFFFont)#org/apache/fop/fonts/truetype/OTFFile$Mapping/Mapping(org.apache.fop.fonts.truetype.OTFFile$1)
org/apache/fop/fonts/truetype/OTFFile/getGIDMappings(org.apache.fontbox.cff.CFFFont)#org/apache/fop/fonts/truetype/OTFFile$Mapping/setName(java.lang.String)
org/apache/fop/render/rtf/rtflib/tools/ImageUtil/getInt(java.lang.String)#java/lang/Character/isDigit(char)
org/apache/fop/render/rtf/rtflib/tools/ImageUtil/getInt(java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/render/rtf/rtflib/tools/ImageUtil/getInt(java.lang.String)#java/lang/Integer/parseInt(java.lang.String)
org/apache/fop/render/rtf/rtflib/tools/ImageUtil/getInt(java.lang.String)#java/lang/StringBuilder/append(char)
org/apache/fop/render/rtf/rtflib/tools/ImageUtil/getInt(java.lang.String)#java/lang/StringBuffer/StringBuffer(java.lang.String)
org/apache/fop/render/rtf/rtflib/tools/ImageUtil/getInt(java.lang.String)#java/lang/StringBuilder/toString()
org/apache/fop/render/rtf/rtflib/tools/ImageUtil/getInt(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/render/rtf/rtflib/tools/ImageUtil/getInt(java.lang.String)#java/lang/StringBuffer/charAt(int)
org/apache/fop/render/rtf/rtflib/tools/ImageUtil/getInt(java.lang.String)#java/lang/String/length()
org/apache/fop/render/rtf/rtflib/tools/ImageUtil/getInt(java.lang.String)#java/lang/StringBuffer/length()
org/apache/fop/render/ps/PSImageHandlerSVG/recurseSVGElements(org.w3c.dom.NodeList,java.util.List,boolean)#java/lang/String/split(java.lang.String)
org/apache/fop/render/ps/PSImageHandlerSVG/recurseSVGElements(org.w3c.dom.NodeList,java.util.List,boolean)#org/w3c/dom/NodeList/getLength()
org/apache/fop/render/ps/PSImageHandlerSVG/recurseSVGElements(org.w3c.dom.NodeList,java.util.List,boolean)#org/w3c/dom/Node/getLocalName()
org/apache/fop/render/ps/PSImageHandlerSVG/recurseSVGElements(org.w3c.dom.NodeList,java.util.List,boolean)#java/lang/Double/parseDouble(java.lang.String)
org/apache/fop/render/ps/PSImageHandlerSVG/recurseSVGElements(org.w3c.dom.NodeList,java.util.List,boolean)#java/util/HashMap/put(java.lang.Object,java.lang.Object)
org/apache/fop/render/ps/PSImageHandlerSVG/recurseSVGElements(org.w3c.dom.NodeList,java.util.List,boolean)#java/lang/String/equals(java.lang.Object)
org/apache/fop/render/ps/PSImageHandlerSVG/recurseSVGElements(org.w3c.dom.NodeList,java.util.List,boolean)#org/w3c/dom/Node/getChildNodes()
org/apache/fop/render/ps/PSImageHandlerSVG/recurseSVGElements(org.w3c.dom.NodeList,java.util.List,boolean)#org/w3c/dom/Node/getAttributes()
org/apache/fop/render/ps/PSImageHandlerSVG/recurseSVGElements(org.w3c.dom.NodeList,java.util.List,boolean)#org/w3c/dom/NamedNodeMap/getNamedItem(java.lang.String)
org/apache/fop/render/ps/PSImageHandlerSVG/recurseSVGElements(org.w3c.dom.NodeList,java.util.List,boolean)#org/w3c/dom/Node/getNodeValue()
org/apache/fop/render/ps/PSImageHandlerSVG/recurseSVGElements(org.w3c.dom.NodeList,java.util.List,boolean)#java/lang/String/equalsIgnoreCase(java.lang.String)
org/apache/fop/render/ps/PSImageHandlerSVG/recurseSVGElements(org.w3c.dom.NodeList,java.util.List,boolean)#java/util/List/contains(java.lang.Object)
org/apache/fop/render/ps/PSImageHandlerSVG/recurseSVGElements(org.w3c.dom.NodeList,java.util.List,boolean)#org/w3c/dom/NodeList/item(int)
org/apache/fop/render/ps/PSImageHandlerSVG/renderSVGToInputStream(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.impl.ImageXMLDOM)#java/io/ByteArrayOutputStream/flush()
org/apache/fop/render/ps/PSImageHandlerSVG/renderSVGToInputStream(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.impl.ImageXMLDOM)#org/apache/batik/transcoder/image/PNGTranscoder/PNGTranscoder()
org/apache/fop/render/ps/PSImageHandlerSVG/renderSVGToInputStream(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.impl.ImageXMLDOM)#org/apache/xmlgraphics/image/loader/ImageInfo/getOriginalURI()
org/apache/fop/render/ps/PSImageHandlerSVG/renderSVGToInputStream(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.impl.ImageXMLDOM)#java/io/ByteArrayInputStream/ByteArrayInputStream(byte[])
org/apache/fop/render/ps/PSImageHandlerSVG/renderSVGToInputStream(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.impl.ImageXMLDOM)#org/apache/batik/transcoder/TranscoderInput/TranscoderInput(org.w3c.dom.Document)
org/apache/fop/render/ps/PSImageHandlerSVG/renderSVGToInputStream(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.impl.ImageXMLDOM)#java/lang/Float/floatValue()
org/apache/fop/render/ps/PSImageHandlerSVG/renderSVGToInputStream(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.impl.ImageXMLDOM)#org/apache/xmlgraphics/image/loader/impl/ImageXMLDOM/getDocument()
org/apache/fop/render/ps/PSImageHandlerSVG/renderSVGToInputStream(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.impl.ImageXMLDOM)#java/io/ByteArrayOutputStream/close()
org/apache/fop/render/ps/PSImageHandlerSVG/renderSVGToInputStream(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.impl.ImageXMLDOM)#java/io/ByteArrayOutputStream/ByteArrayOutputStream()
org/apache/fop/render/ps/PSImageHandlerSVG/renderSVGToInputStream(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.impl.ImageXMLDOM)#org/apache/xmlgraphics/image/loader/impl/ImageXMLDOM/getInfo()
org/apache/fop/render/ps/PSImageHandlerSVG/renderSVGToInputStream(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.impl.ImageXMLDOM)#org/apache/batik/transcoder/image/PNGTranscoder/transcode(org.apache.batik.transcoder.TranscoderInput,org.apache.batik.transcoder.TranscoderOutput)
org/apache/fop/render/ps/PSImageHandlerSVG/renderSVGToInputStream(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.impl.ImageXMLDOM)#java/lang/Float/valueOf(float)
org/apache/fop/render/ps/PSImageHandlerSVG/renderSVGToInputStream(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.impl.ImageXMLDOM)#org/apache/batik/transcoder/image/PNGTranscoder/addTranscodingHint(org.apache.batik.transcoder.TranscodingHints$Key,java.lang.Object)
org/apache/fop/render/ps/PSImageHandlerSVG/renderSVGToInputStream(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.impl.ImageXMLDOM)#org/apache/batik/transcoder/TranscoderOutput/TranscoderOutput(java.io.OutputStream)
org/apache/fop/render/ps/PSImageHandlerSVG/renderSVGToInputStream(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.impl.ImageXMLDOM)#org/apache/fop/svg/SVGEventProducer$Provider/get(org.apache.fop.events.EventBroadcaster)
org/apache/fop/render/ps/PSImageHandlerSVG/renderSVGToInputStream(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.impl.ImageXMLDOM)#java/io/ByteArrayOutputStream/toByteArray()
org/apache/fop/render/ps/PSImageHandlerSVG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/xmlgraphics/ps/ImageEncodingHelper/ImageEncodingHelper(java.awt.image.RenderedImage)
org/apache/fop/render/ps/PSImageHandlerSVG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/awt/geom/Rectangle2D$Double/Double(double,double,double,double)
org/apache/fop/render/ps/PSImageHandlerSVG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/xmlgraphics/ps/PSGenerator/commentln(java.lang.String)
org/apache/fop/render/ps/PSImageHandlerSVG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/xmlgraphics/ps/ImageEncodingHelper/getEncodedColorModel()
org/apache/fop/render/ps/PSImageHandlerSVG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/awt/Dimension/Dimension(int,int)
org/apache/fop/render/ps/PSImageHandlerSVG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/xmlgraphics/ps/PSGenerator/getCurrentState()
org/apache/fop/render/ps/PSImageHandlerSVG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/fop/render/ps/PSImageUtils/writeImage(org.apache.xmlgraphics.ps.ImageEncoder,java.awt.Dimension,java.lang.String,java.awt.geom.Rectangle2D,java.awt.image.ColorModel,org.apache.xmlgraphics.ps.PSGenerator,java.awt.image.RenderedImage,java.awt.Color)
org/apache/fop/render/ps/PSImageHandlerSVG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/fop/render/ps/PSImageHandlerSVG$MaskedImage/getImage()
org/apache/fop/render/ps/PSImageHandlerSVG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/xmlgraphics/ps/PSGenerator/concatMatrix(double,double,double,double,double,double)
org/apache/fop/render/ps/PSImageHandlerSVG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/xmlgraphics/image/loader/Image/getInfo()
org/apache/fop/render/ps/PSImageHandlerSVG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/awt/geom/AffineTransform/translate(double,double)
org/apache/fop/render/ps/PSImageHandlerSVG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/awt/Rectangle/getWidth()
org/apache/fop/render/ps/PSImageHandlerSVG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/xmlgraphics/image/loader/ImageInfo/getOriginalURI()
org/apache/fop/render/ps/PSImageHandlerSVG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/batik/bridge/BridgeContext/getDocumentSize()
org/apache/fop/render/ps/PSImageHandlerSVG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/awt/geom/Dimension2D/getHeight()
org/apache/fop/render/ps/PSImageHandlerSVG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/awt/image/BufferedImage/getWidth()
org/apache/fop/render/ps/PSImageHandlerSVG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/batik/bridge/GVTBuilder/build(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Document)
org/apache/fop/render/ps/PSImageHandlerSVG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/xmlgraphics/ps/ImageEncodingHelper/createRenderedImageEncoder(java.awt.image.RenderedImage)
org/apache/fop/render/ps/PSImageHandlerSVG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/awt/image/BufferedImage/getHeight()
org/apache/fop/render/ps/PSImageHandlerSVG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/lang/Class/getName()
org/apache/fop/render/ps/PSImageHandlerSVG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#javax/imageio/ImageIO/read(java.io.InputStream)
org/apache/fop/render/ps/PSImageHandlerSVG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/xmlgraphics/ps/PSState/concatMatrix(java.awt.geom.AffineTransform)
org/apache/fop/render/ps/PSImageHandlerSVG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/awt/geom/Dimension2D/getWidth()
org/apache/fop/render/ps/PSImageHandlerSVG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/fop/render/ps/svg/PSSVGGraphics2D/setGraphicContext(org.apache.xmlgraphics.java2d.GraphicContext)
org/apache/fop/render/ps/PSImageHandlerSVG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/awt/Rectangle/getMinX()
org/apache/fop/render/ps/PSImageHandlerSVG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/xmlgraphics/image/loader/impl/ImageXMLDOM/getDocument()
org/apache/fop/render/ps/PSImageHandlerSVG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/awt/Rectangle/getMinY()
org/apache/fop/render/ps/PSImageHandlerSVG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/fop/svg/SVGEventProducer$Provider/get(org.apache.fop.events.EventBroadcaster)
org/apache/fop/render/ps/PSImageHandlerSVG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/awt/Rectangle/getHeight()
org/apache/fop/render/ps/PSImageHandlerSVG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/awt/geom/AffineTransform/AffineTransform()
org/apache/fop/render/ps/PSImageHandlerSVG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/lang/Object/getClass()
org/apache/fop/render/ps/PSImageHandlerSVG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/xmlgraphics/java2d/GraphicContext/GraphicContext()
org/apache/fop/render/ps/PSImageHandlerSVG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/batik/bridge/GVTBuilder/GVTBuilder()
org/apache/fop/render/ps/PSImageHandlerSVG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/xmlgraphics/ps/PSGenerator/restoreGraphicsState()
org/apache/fop/render/ps/PSImageHandlerSVG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/awt/Rectangle/getX()
org/apache/fop/render/ps/PSImageHandlerSVG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#java/awt/Rectangle/getY()
org/apache/fop/render/ps/PSImageHandlerSVG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/batik/gvt/GraphicsNode/paint(java.awt.Graphics2D)
org/apache/fop/render/ps/PSImageHandlerSVG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/xmlgraphics/ps/PSGenerator/saveGraphicsState()
org/apache/fop/render/ps/PSImageHandlerSVG/handleImage(org.apache.fop.render.RenderingContext,org.apache.xmlgraphics.image.loader.Image,java.awt.Rectangle)#org/apache/fop/render/ps/PSImageHandlerSVG$MaskedImage/getMaskColor()
org/apache/fop/render/ps/PSImageHandlerSVG/convertToRGB(java.awt.image.BufferedImage)#java/awt/Color/getBlue()
org/apache/fop/render/ps/PSImageHandlerSVG/convertToRGB(java.awt.image.BufferedImage)#java/awt/Color/getRed()
org/apache/fop/render/ps/PSImageHandlerSVG/convertToRGB(java.awt.image.BufferedImage)#java/awt/image/BufferedImage/BufferedImage(int,int,int)
org/apache/fop/render/ps/PSImageHandlerSVG/convertToRGB(java.awt.image.BufferedImage)#java/awt/Color/Color(int)
org/apache/fop/render/ps/PSImageHandlerSVG/convertToRGB(java.awt.image.BufferedImage)#java/awt/image/BufferedImage/getWidth()
org/apache/fop/render/ps/PSImageHandlerSVG/convertToRGB(java.awt.image.BufferedImage)#java/awt/image/BufferedImage/getHeight()
org/apache/fop/render/ps/PSImageHandlerSVG/convertToRGB(java.awt.image.BufferedImage)#java/awt/Color/getGreen()
org/apache/fop/render/ps/PSImageHandlerSVG/convertToRGB(java.awt.image.BufferedImage)#java/awt/image/BufferedImage/getRGB(int,int)
org/apache/fop/render/ps/PSImageHandlerSVG/convertToRGB(java.awt.image.BufferedImage)#java/awt/Color/getRGB()
org/apache/fop/render/ps/PSImageHandlerSVG/convertToRGB(java.awt.image.BufferedImage)#org/apache/fop/render/ps/PSImageHandlerSVG$MaskedImage/MaskedImage(java.awt.image.BufferedImage,java.awt.Color)
org/apache/fop/render/ps/PSImageHandlerSVG/convertToRGB(java.awt.image.BufferedImage)#java/awt/image/BufferedImage/setRGB(int,int,int)
org/apache/fop/render/ps/PSImageHandlerSVG/convertToRGB(java.awt.image.BufferedImage)#java/awt/Color/Color(int,int,int)
org/apache/fop/pdf/PDFGState/contentEquals(org.apache.fop.pdf.PDFObject)#java/lang/Object/equals(java.lang.Object)
org/apache/fop/pdf/PDFGState/contentEquals(org.apache.fop.pdf.PDFObject)#java/util/Iterator/hasNext()
org/apache/fop/pdf/PDFGState/contentEquals(org.apache.fop.pdf.PDFObject)#java/util/Map$Entry/getKey()
org/apache/fop/pdf/PDFGState/contentEquals(org.apache.fop.pdf.PDFObject)#java/util/Map/get(java.lang.Object)
org/apache/fop/pdf/PDFGState/contentEquals(org.apache.fop.pdf.PDFObject)#java/util/Map/size()
org/apache/fop/pdf/PDFGState/contentEquals(org.apache.fop.pdf.PDFObject)#java/util/Iterator/next()
org/apache/fop/pdf/PDFGState/contentEquals(org.apache.fop.pdf.PDFObject)#java/util/Set/iterator()
org/apache/fop/pdf/PDFGState/contentEquals(org.apache.fop.pdf.PDFObject)#java/util/Map$Entry/getValue()
org/apache/fop/pdf/PDFGState/contentEquals(org.apache.fop.pdf.PDFObject)#java/util/Map/entrySet()
org/apache/fop/svg/PDFDocumentGraphics2D/startPage()#org/apache/fop/svg/PDFDocumentGraphics2D/getTransform()
org/apache/fop/svg/PDFDocumentGraphics2D/startPage()#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/apache/fop/svg/PDFDocumentGraphics2D/startPage()#org/apache/fop/svg/PDFDocumentGraphics2D/scale(double,double)
org/apache/fop/svg/PDFDocumentGraphics2D/startPage()#java/io/StringWriter/write(java.lang.String)
org/apache/fop/svg/PDFDocumentGraphics2D/startPage()#java/lang/StringBuilder/append(int)
org/apache/fop/svg/PDFDocumentGraphics2D/startPage()#java/awt/geom/AffineTransform/scale(double,double)
org/apache/fop/svg/PDFDocumentGraphics2D/startPage()#org/apache/fop/pdf/PDFPage/makeReference()
org/apache/fop/svg/PDFDocumentGraphics2D/startPage()#java/awt/geom/AffineTransform/AffineTransform(double,double,double,double,double,double)
org/apache/fop/svg/PDFDocumentGraphics2D/startPage()#org/apache/fop/svg/PDFDocumentGraphics2D/getClip()
org/apache/fop/svg/PDFDocumentGraphics2D/startPage()#java/lang/StringBuilder/StringBuilder()
org/apache/fop/svg/PDFDocumentGraphics2D/startPage()#java/io/StringWriter/StringWriter()
org/apache/fop/svg/PDFDocumentGraphics2D/startPage()#org/apache/fop/svg/PDFDocumentGraphics2D/setClip(java.awt.Shape)
org/apache/fop/svg/PDFDocumentGraphics2D/startPage()#org/apache/fop/svg/PDFDocumentGraphics2D/setTransform(java.awt.geom.AffineTransform)
org/apache/fop/svg/PDFDocumentGraphics2D/startPage()#java/lang/StringBuilder/toString()
org/apache/fop/svg/PDFDocumentGraphics2D/startPage()#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/svg/PDFDocumentGraphics2D/startPage()#org/apache/fop/pdf/PDFPaintingState/concatenate(java.awt.geom.AffineTransform)
org/apache/fop/fonts/base14/Helvetica/<clinit>()#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/fop/fonts/base14/Helvetica/<clinit>()#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/fonts/base14/Helvetica/<clinit>()#java/lang/Integer/Integer(int)
org/apache/fop/fonts/base14/Helvetica/<clinit>()#java/awt/Rectangle/Rectangle(int,int,int,int)
org/apache/fop/fonts/base14/Helvetica/<clinit>()#java/util/Map/get(java.lang.Object)
org/apache/fop/fonts/base14/Helvetica/<clinit>()#java/util/HashMap/HashMap()
org/apache/fop/fonts/base14/Helvetica/<clinit>()#java/lang/StringBuilder/StringBuilder()
org/apache/fop/fonts/base14/Helvetica/<clinit>()#java/util/HashSet/HashSet()
org/apache/fop/fonts/base14/Helvetica/<clinit>()#java/util/Set/add(java.lang.Object)
org/apache/fop/fonts/base14/Helvetica/<clinit>()#java/lang/StringBuilder/toString()
org/apache/fop/fonts/base14/Helvetica/<clinit>()#java/net/URI/URI(java.lang.String)
org/apache/fop/fonts/base14/Helvetica/<clinit>()#java/lang/String/toLowerCase()
org/apache/fop/area/CachedRenderPagesModel/savePage(org.apache.fop.area.PageViewport)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/area/CachedRenderPagesModel/savePage(org.apache.fop.area.PageViewport)#java/lang/StringBuilder/append(int)
org/apache/fop/area/CachedRenderPagesModel/savePage(org.apache.fop.area.PageViewport)#org/apache/commons/logging/Log/isDebugEnabled()
org/apache/fop/area/CachedRenderPagesModel/savePage(org.apache.fop.area.PageViewport)#org/apache/fop/area/AreaEventProducer$Provider/get(org.apache.fop.events.EventBroadcaster)
org/apache/fop/area/CachedRenderPagesModel/savePage(org.apache.fop.area.PageViewport)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/area/CachedRenderPagesModel/savePage(org.apache.fop.area.PageViewport)#org/apache/commons/io/IOUtils/closeQuietly(java.io.OutputStream)
org/apache/fop/area/CachedRenderPagesModel/savePage(org.apache.fop.area.PageViewport)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/fop/area/CachedRenderPagesModel/savePage(org.apache.fop.area.PageViewport)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/fop/area/CachedRenderPagesModel/savePage(org.apache.fop.area.PageViewport)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/fop/area/CachedRenderPagesModel/savePage(org.apache.fop.area.PageViewport)#java/io/ObjectOutputStream/ObjectOutputStream(java.io.OutputStream)
org/apache/fop/area/CachedRenderPagesModel/savePage(org.apache.fop.area.PageViewport)#java/io/BufferedOutputStream/BufferedOutputStream(java.io.OutputStream)
org/apache/fop/area/CachedRenderPagesModel/savePage(org.apache.fop.area.PageViewport)#java/lang/StringBuilder/toString()
org/apache/fop/area/CachedRenderPagesModel/savePage(org.apache.fop.area.PageViewport)#java/net/URI/resolve(java.lang.String)
org/apache/fop/area/CachedRenderPagesModel/checkPreparedPages(org.apache.fop.area.PageViewport,boolean)#java/util/Iterator/remove()
org/apache/fop/area/CachedRenderPagesModel/checkPreparedPages(org.apache.fop.area.PageViewport,boolean)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/fop/area/CachedRenderPagesModel/checkPreparedPages(org.apache.fop.area.PageViewport,boolean)#org/apache/commons/io/IOUtils/closeQuietly(java.io.InputStream)
org/apache/fop/area/CachedRenderPagesModel/checkPreparedPages(org.apache.fop.area.PageViewport,boolean)#java/util/Iterator/hasNext()
org/apache/fop/area/CachedRenderPagesModel/checkPreparedPages(org.apache.fop.area.PageViewport,boolean)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/area/CachedRenderPagesModel/checkPreparedPages(org.apache.fop.area.PageViewport,boolean)#org/apache/fop/area/AreaEventProducer$Provider/get(org.apache.fop.events.EventBroadcaster)
org/apache/fop/area/CachedRenderPagesModel/checkPreparedPages(org.apache.fop.area.PageViewport,boolean)#org/apache/fop/area/CachedRenderPagesModel/renderPage(org.apache.fop.area.PageViewport)
org/apache/fop/area/CachedRenderPagesModel/checkPreparedPages(org.apache.fop.area.PageViewport,boolean)#java/util/List/iterator()
org/apache/fop/area/CachedRenderPagesModel/checkPreparedPages(org.apache.fop.area.PageViewport,boolean)#java/lang/StringBuilder/toString()
org/apache/fop/area/CachedRenderPagesModel/checkPreparedPages(org.apache.fop.area.PageViewport,boolean)#java/util/List/isEmpty()
org/apache/fop/area/CachedRenderPagesModel/checkPreparedPages(org.apache.fop.area.PageViewport,boolean)#java/util/Map/get(java.lang.Object)
org/apache/fop/area/CachedRenderPagesModel/checkPreparedPages(org.apache.fop.area.PageViewport,boolean)#java/util/Iterator/next()
org/apache/fop/area/CachedRenderPagesModel/checkPreparedPages(org.apache.fop.area.PageViewport,boolean)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/area/CachedRenderPagesModel/checkPreparedPages(org.apache.fop.area.PageViewport,boolean)#java/io/BufferedInputStream/BufferedInputStream(java.io.InputStream)
org/apache/fop/area/CachedRenderPagesModel/checkPreparedPages(org.apache.fop.area.PageViewport,boolean)#java/io/ObjectInputStream/ObjectInputStream(java.io.InputStream)
org/apache/fop/area/CachedRenderPagesModel/checkPreparedPages(org.apache.fop.area.PageViewport,boolean)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/fop/area/CachedRenderPagesModel/checkPreparedPages(org.apache.fop.area.PageViewport,boolean)#java/util/Map/remove(java.lang.Object)
org/apache/fop/afp/svg/AFPTextHandler/drawString(java.awt.Graphics2D,java.lang.String,float,float)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/fop/afp/svg/AFPTextHandler/drawString(java.awt.Graphics2D,java.lang.String,float,float)#java/lang/StringBuilder/append(int)
org/apache/fop/afp/svg/AFPTextHandler/drawString(java.awt.Graphics2D,java.lang.String,float,float)#org/apache/fop/afp/AFPGraphics2D/getColor()
org/apache/fop/afp/svg/AFPTextHandler/drawString(java.awt.Graphics2D,java.lang.String,float,float)#java/lang/StringBuilder/append(float)
org/apache/fop/afp/svg/AFPTextHandler/drawString(java.awt.Graphics2D,java.lang.String,float,float)#java/awt/Graphics2D/drawString(java.lang.String,float,float)
org/apache/fop/afp/svg/AFPTextHandler/drawString(java.awt.Graphics2D,java.lang.String,float,float)#java/lang/Math/round(double)
org/apache/fop/afp/svg/AFPTextHandler/drawString(java.awt.Graphics2D,java.lang.String,float,float)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/afp/svg/AFPTextHandler/drawString(java.awt.Graphics2D,java.lang.String,float,float)#org/apache/commons/logging/Log/isDebugEnabled()
org/apache/fop/afp/svg/AFPTextHandler/drawString(java.awt.Graphics2D,java.lang.String,float,float)#java/util/Map/get(java.lang.Object)
org/apache/fop/afp/svg/AFPTextHandler/drawString(java.awt.Graphics2D,java.lang.String,float,float)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/afp/svg/AFPTextHandler/drawString(java.awt.Graphics2D,java.lang.String,float,float)#java/lang/Math/round(float)
org/apache/fop/afp/svg/AFPTextHandler/drawString(java.awt.Graphics2D,java.lang.String,float,float)#java/lang/StringBuilder/toString()
org/apache/fop/afp/svg/AFPTextHandler/drawString(java.awt.Graphics2D,java.lang.String,float,float)#org/apache/fop/afp/AFPPaintingState/setColor(java.awt.Color)
org/apache/fop/layoutmgr/inline/ContentLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#org/apache/fop/layoutmgr/inline/InlineLevelLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)
org/apache/fop/layoutmgr/inline/ContentLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#org/apache/fop/layoutmgr/inline/InlineLevelLayoutManager/initialize()
org/apache/fop/layoutmgr/inline/ContentLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#java/util/List/size()
org/apache/fop/layoutmgr/inline/ContentLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#java/util/Iterator/next()
org/apache/fop/layoutmgr/inline/ContentLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#org/apache/fop/layoutmgr/KnuthSequence/iterator()
org/apache/fop/layoutmgr/inline/ContentLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#java/util/LinkedList/LinkedList()
org/apache/fop/layoutmgr/inline/ContentLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#java/util/List/add(java.lang.Object)
org/apache/fop/layoutmgr/inline/ContentLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#org/apache/fop/layoutmgr/inline/InlineLevelLayoutManager/isFinished()
org/apache/fop/layoutmgr/inline/ContentLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#java/util/Iterator/hasNext()
org/apache/fop/layoutmgr/inline/ContentLayoutManager/getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)#java/util/List/remove(int)
org/apache/fop/render/pdf/PDFDocumentNavigationHandler/getAction(org.apache.fop.render.intermediate.extensions.AbstractAction)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/fop/render/pdf/PDFDocumentNavigationHandler/getAction(org.apache.fop.render.intermediate.extensions.AbstractAction)#org/apache/fop/render/intermediate/extensions/URIAction/isComplete()
org/apache/fop/render/pdf/PDFDocumentNavigationHandler/getAction(org.apache.fop.render.intermediate.extensions.AbstractAction)#java/util/Map/get(java.lang.Object)
org/apache/fop/render/pdf/PDFDocumentNavigationHandler/getAction(org.apache.fop.render.intermediate.extensions.AbstractAction)#java/lang/Class/getName()
org/apache/fop/render/pdf/PDFDocumentNavigationHandler/getAction(org.apache.fop.render.intermediate.extensions.AbstractAction)#java/lang/AssertionError/AssertionError()
org/apache/fop/render/pdf/PDFDocumentNavigationHandler/getAction(org.apache.fop.render.intermediate.extensions.AbstractAction)#java/lang/StringBuilder/toString()
org/apache/fop/render/pdf/PDFDocumentNavigationHandler/getAction(org.apache.fop.render.intermediate.extensions.AbstractAction)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/render/pdf/PDFDocumentNavigationHandler/getAction(org.apache.fop.render.intermediate.extensions.AbstractAction)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/render/pdf/PDFDocumentNavigationHandler/getAction(org.apache.fop.render.intermediate.extensions.AbstractAction)#java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)
org/apache/fop/render/pdf/PDFDocumentNavigationHandler/getAction(org.apache.fop.render.intermediate.extensions.AbstractAction)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/fop/render/pdf/PDFDocumentNavigationHandler/getAction(org.apache.fop.render.intermediate.extensions.AbstractAction)#org/apache/fop/pdf/PDFAction/hasObjectNumber()
org/apache/fop/render/pdf/PDFDocumentNavigationHandler/getAction(org.apache.fop.render.intermediate.extensions.AbstractAction)#java/lang/Object/getClass()
org/apache/fop/render/pdf/PDFDocumentNavigationHandler/updateTargetLocation(org.apache.fop.pdf.PDFGoTo,org.apache.fop.render.intermediate.extensions.GoToXYAction)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/fop/render/pdf/PDFDocumentNavigationHandler/updateTargetLocation(org.apache.fop.pdf.PDFGoTo,org.apache.fop.render.intermediate.extensions.GoToXYAction)#org/apache/fop/render/pdf/PDFDocumentHandler$PageReference/getPageRef()
org/apache/fop/render/pdf/PDFDocumentNavigationHandler/updateTargetLocation(org.apache.fop.pdf.PDFGoTo,org.apache.fop.render.intermediate.extensions.GoToXYAction)#java/awt/geom/Point2D$Double/Double(double,double)
org/apache/fop/render/pdf/PDFDocumentNavigationHandler/updateTargetLocation(org.apache.fop.pdf.PDFGoTo,org.apache.fop.render.intermediate.extensions.GoToXYAction)#java/lang/StringBuilder/StringBuilder()
org/apache/fop/render/pdf/PDFDocumentNavigationHandler/updateTargetLocation(org.apache.fop.pdf.PDFGoTo,org.apache.fop.render.intermediate.extensions.GoToXYAction)#org/apache/fop/render/intermediate/extensions/GoToXYAction/getID()
org/apache/fop/render/pdf/PDFDocumentNavigationHandler/updateTargetLocation(org.apache.fop.pdf.PDFGoTo,org.apache.fop.render.intermediate.extensions.GoToXYAction)#java/lang/StringBuilder/append(java.lang.String)
org/apache/fop/render/pdf/PDFDocumentNavigationHandler/updateTargetLocation(org.apache.fop.pdf.PDFGoTo,org.apache.fop.render.intermediate.extensions.GoToXYAction)#java/lang/StringBuilder/append(int)
org/apache/fop/render/pdf/PDFDocumentNavigationHandler/updateTargetLocation(org.apache.fop.pdf.PDFGoTo,org.apache.fop.render.intermediate.extensions.GoToXYAction)#java/lang/StringBuilder/toString()
org/apache/fop/render/pdf/PDFDocumentNavigationHandler/updateTargetLocation(org.apache.fop.pdf.PDFGoTo,org.apache.fop.render.intermediate.extensions.GoToXYAction)#org/apache/fop/render/pdf/PDFDocumentHandler$PageReference/getPageDimension()
org/apache/fop/render/pdf/extensions/PDFElementMapping/initialize()#org/apache/fop/render/pdf/extensions/PDFElementMapping$PDFPageElementMaker/PDFPageElementMaker()
org/apache/fop/render/pdf/extensions/PDFElementMapping/initialize()#org/apache/fop/render/pdf/extensions/PDFElementMapping$PDFCollectionEntryElementMaker/PDFCollectionEntryElementMaker(org.apache.fop.render.pdf.extensions.PDFObjectType)
org/apache/fop/render/pdf/extensions/PDFElementMapping/initialize()#org/apache/fop/render/pdf/extensions/PDFDictionaryType/elementName()
org/apache/fop/render/pdf/extensions/PDFElementMapping/initialize()#org/apache/fop/render/pdf/extensions/PDFObjectType/elementName()
org/apache/fop/render/pdf/extensions/PDFElementMapping/initialize()#org/apache/fop/render/pdf/extensions/PDFElementMapping$PDFVTElementMaker/PDFVTElementMaker()
org/apache/fop/render/pdf/extensions/PDFElementMapping/initialize()#org/apache/fop/render/pdf/extensions/PDFElementMapping$PDFPagePieceElementMaker/PDFPagePieceElementMaker()
org/apache/fop/render/pdf/extensions/PDFElementMapping/initialize()#org/apache/fop/render/pdf/extensions/PDFElementMapping$PDFArrayElementMaker/PDFArrayElementMaker()
org/apache/fop/render/pdf/extensions/PDFElementMapping/initialize()#org/apache/fop/render/pdf/extensions/PDFElementMapping$PDFReferenceElementMaker/PDFReferenceElementMaker()
org/apache/fop/render/pdf/extensions/PDFElementMapping/initialize()#org/apache/fop/render/pdf/extensions/PDFElementMapping$PDFNavigatorElementMaker/PDFNavigatorElementMaker()
org/apache/fop/render/pdf/extensions/PDFElementMapping/initialize()#org/apache/fop/render/pdf/extensions/PDFElementMapping$PDFCatalogElementMaker/PDFCatalogElementMaker()
org/apache/fop/render/pdf/extensions/PDFElementMapping/initialize()#org/apache/fop/render/pdf/extensions/PDFElementMapping$PDFLayerElementMaker/PDFLayerElementMaker()
org/apache/fop/render/pdf/extensions/PDFElementMapping/initialize()#org/apache/fop/render/pdf/extensions/PDFElementMapping$PDFDocumentInformationElementMaker/PDFDocumentInformationElementMaker()
org/apache/fop/render/pdf/extensions/PDFElementMapping/initialize()#org/apache/fop/render/pdf/extensions/PDFElementMapping$PDFActionElementMaker/PDFActionElementMaker()
org/apache/fop/render/pdf/extensions/PDFElementMapping/initialize()#org/apache/fop/render/pdf/extensions/PDFElementMapping$PDFEmbeddedFileElementMaker/PDFEmbeddedFileElementMaker()
org/apache/fop/render/pdf/extensions/PDFElementMapping/initialize()#org/apache/fop/render/pdf/extensions/PDFElementMapping$PDFDictionaryElementMaker/PDFDictionaryElementMaker()
org/apache/fop/render/pdf/extensions/PDFElementMapping/initialize()#java/util/HashMap/HashMap()
org/apache/fop/render/pdf/extensions/PDFElementMapping/initialize()#java/util/HashMap/put(java.lang.Object,java.lang.Object)
