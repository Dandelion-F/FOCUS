org/eclipse/osgi/internal/resolver/StateReader/readMap(java.io.DataInputStream)#java/lang/Class/forName(java.lang.String)
org/eclipse/osgi/internal/resolver/StateReader/readMap(java.io.DataInputStream)#java/lang/reflect/Constructor/newInstance(java.lang.Object[])
org/eclipse/osgi/internal/resolver/StateReader/readMap(java.io.DataInputStream)#java/lang/Long/Long(long)
org/eclipse/osgi/internal/resolver/StateReader/readMap(java.io.DataInputStream)#java/io/IOException/IOException(java.lang.String)
org/eclipse/osgi/internal/resolver/StateReader/readMap(java.io.DataInputStream)#java/lang/Integer/Integer(int)
org/eclipse/osgi/internal/resolver/StateReader/readMap(java.io.DataInputStream)#java/io/DataInputStream/readDouble()
org/eclipse/osgi/internal/resolver/StateReader/readMap(java.io.DataInputStream)#java/lang/Double/Double(double)
org/eclipse/osgi/internal/resolver/StateReader/readMap(java.io.DataInputStream)#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/eclipse/osgi/internal/resolver/StateReader/readMap(java.io.DataInputStream)#java/util/HashMap/HashMap(int)
org/eclipse/osgi/internal/resolver/StateReader/readMap(java.io.DataInputStream)#java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)
org/eclipse/osgi/internal/resolver/StateReader/readMap(java.io.DataInputStream)#java/io/DataInputStream/readBoolean()
org/eclipse/osgi/internal/resolver/StateReader/readMap(java.io.DataInputStream)#java/io/DataInputStream/readByte()
org/eclipse/osgi/internal/resolver/StateReader/readMap(java.io.DataInputStream)#java/util/ArrayList/ArrayList(int)
org/eclipse/osgi/internal/resolver/StateReader/readMap(java.io.DataInputStream)#java/lang/StringBuilder/append(int)
org/eclipse/osgi/internal/resolver/StateReader/readMap(java.io.DataInputStream)#java/io/DataInputStream/readInt()
org/eclipse/osgi/internal/resolver/StateReader/readMap(java.io.DataInputStream)#java/util/HashMap/put(java.lang.Object,java.lang.Object)
org/eclipse/osgi/internal/resolver/StateReader/readMap(java.io.DataInputStream)#java/util/List/add(java.lang.Object)
org/eclipse/osgi/internal/resolver/StateReader/readMap(java.io.DataInputStream)#java/io/DataInputStream/readLong()
org/eclipse/osgi/internal/resolver/StateReader/readMap(java.io.DataInputStream)#java/lang/Class/getConstructor(java.lang.Class[])
org/eclipse/osgi/internal/resolver/StateReader/readMap(java.io.DataInputStream)#java/lang/StringBuilder/toString()
org/eclipse/osgi/internal/resolver/StateReader/readMap(java.io.DataInputStream)#java/lang/Exception/getMessage()
org/eclipse/osgi/internal/resolver/StateReader/readState(org.eclipse.osgi.internal.resolver.StateImpl,long)#java/io/DataInputStream/close()
org/eclipse/osgi/internal/resolver/StateReader/readState(org.eclipse.osgi.internal.resolver.StateImpl,long)#java/io/DataInputStream/readInt()
org/eclipse/osgi/internal/resolver/StateReader/readState(org.eclipse.osgi.internal.resolver.StateImpl,long)#java/io/DataInputStream/DataInputStream(java.io.InputStream)
org/eclipse/osgi/internal/resolver/StateReader/readState(org.eclipse.osgi.internal.resolver.StateImpl,long)#java/util/Hashtable/Hashtable(int)
org/eclipse/osgi/internal/resolver/StateReader/readState(org.eclipse.osgi.internal.resolver.StateImpl,long)#java/io/DataInputStream/readLong()
org/eclipse/osgi/internal/resolver/StateReader/readState(org.eclipse.osgi.internal.resolver.StateImpl,long)#java/io/DataInputStream/readBoolean()
org/eclipse/osgi/internal/resolver/StateReader/readState(org.eclipse.osgi.internal.resolver.StateImpl,long)#java/io/DataInputStream/readByte()
org/eclipse/osgi/internal/resolver/StateReader/readState(org.eclipse.osgi.internal.resolver.StateImpl,long)#java/io/BufferedInputStream/BufferedInputStream(java.io.InputStream,int)
org/eclipse/osgi/internal/resolver/StateReader/readState(org.eclipse.osgi.internal.resolver.StateImpl,long)#org/eclipse/osgi/framework/util/SecureAction/getFileInputStream(java.io.File)
org/eclipse/osgi/internal/resolver/StateReader/readState(org.eclipse.osgi.internal.resolver.StateImpl,long)#java/util/Hashtable/put(java.lang.Object,java.lang.Object)
org/eclipse/osgi/internal/resolver/HostSpecificationImpl/isSatisfiedBy(org.eclipse.osgi.service.resolver.BaseDescription)#org/eclipse/osgi/internal/resolver/BundleDescriptionImpl/getVersion()
org/eclipse/osgi/internal/resolver/HostSpecificationImpl/isSatisfiedBy(org.eclipse.osgi.service.resolver.BaseDescription)#java/lang/Object/equals(java.lang.Object)
org/eclipse/osgi/internal/resolver/HostSpecificationImpl/isSatisfiedBy(org.eclipse.osgi.service.resolver.BaseDescription)#org/eclipse/osgi/service/resolver/VersionRange/isIncluded(org.osgi.framework.Version)
org/eclipse/osgi/internal/resolver/HostSpecificationImpl/isSatisfiedBy(org.eclipse.osgi.service.resolver.BaseDescription)#java/util/Set/iterator()
org/eclipse/osgi/internal/resolver/HostSpecificationImpl/isSatisfiedBy(org.eclipse.osgi.service.resolver.BaseDescription)#java/util/Iterator/hasNext()
org/eclipse/osgi/internal/resolver/HostSpecificationImpl/isSatisfiedBy(org.eclipse.osgi.service.resolver.BaseDescription)#java/util/Map/get(java.lang.Object)
org/eclipse/osgi/internal/resolver/HostSpecificationImpl/isSatisfiedBy(org.eclipse.osgi.service.resolver.BaseDescription)#java/util/Iterator/next()
org/eclipse/osgi/internal/resolver/HostSpecificationImpl/isSatisfiedBy(org.eclipse.osgi.service.resolver.BaseDescription)#java/util/Map/keySet()
org/eclipse/osgi/internal/resolver/HostSpecificationImpl/isSatisfiedBy(org.eclipse.osgi.service.resolver.BaseDescription)#java/lang/String/equals(java.lang.Object)
org/eclipse/osgi/internal/module/ResolverImpl/resolveDynamicImport(org.eclipse.osgi.internal.module.ResolverImport,java.lang.String)#java/util/ArrayList/ArrayList()
org/eclipse/osgi/internal/module/ResolverImpl/resolveDynamicImport(org.eclipse.osgi.internal.module.ResolverImport,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/eclipse/osgi/internal/module/ResolverImpl/resolveDynamicImport(org.eclipse.osgi.internal.module.ResolverImport,java.lang.String)#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/eclipse/osgi/internal/module/ResolverImpl/resolveDynamicImport(org.eclipse.osgi.internal.module.ResolverImport,java.lang.String)#java/lang/String/substring(int,int)
org/eclipse/osgi/internal/module/ResolverImpl/resolveDynamicImport(org.eclipse.osgi.internal.module.ResolverImport,java.lang.String)#org/eclipse/osgi/internal/module/ResolverImport/getVersionConstraint()
org/eclipse/osgi/internal/module/ResolverImpl/resolveDynamicImport(org.eclipse.osgi.internal.module.ResolverImport,java.lang.String)#org/eclipse/osgi/internal/module/ResolverImport/getBundle()
org/eclipse/osgi/internal/module/ResolverImpl/resolveDynamicImport(org.eclipse.osgi.internal.module.ResolverImport,java.lang.String)#java/lang/String/startsWith(java.lang.String)
org/eclipse/osgi/internal/module/ResolverImpl/resolveDynamicImport(org.eclipse.osgi.internal.module.ResolverImport,java.lang.String)#java/lang/StringBuilder/append(java.lang.Object)
org/eclipse/osgi/internal/module/ResolverImpl/resolveDynamicImport(org.eclipse.osgi.internal.module.ResolverImport,java.lang.String)#org/eclipse/osgi/internal/module/ResolverImport/getBundleDescription()
org/eclipse/osgi/internal/module/ResolverImpl/resolveDynamicImport(org.eclipse.osgi.internal.module.ResolverImport,java.lang.String)#org/eclipse/osgi/internal/module/ResolverImport/getSelectedSupplier()
org/eclipse/osgi/internal/module/ResolverImpl/resolveDynamicImport(org.eclipse.osgi.internal.module.ResolverImport,java.lang.String)#org/eclipse/osgi/internal/module/ResolverImport/clearPossibleSuppliers()
org/eclipse/osgi/internal/module/ResolverImpl/resolveDynamicImport(org.eclipse.osgi.internal.module.ResolverImport,java.lang.String)#org/eclipse/osgi/service/resolver/ExportPackageDescription/getExporter()
org/eclipse/osgi/internal/module/ResolverImpl/resolveDynamicImport(org.eclipse.osgi.internal.module.ResolverImport,java.lang.String)#java/lang/String/length()
org/eclipse/osgi/internal/module/ResolverImpl/resolveDynamicImport(org.eclipse.osgi.internal.module.ResolverImport,java.lang.String)#java/lang/String/equals(java.lang.Object)
org/eclipse/osgi/internal/module/ResolverImpl/resolveDynamicImport(org.eclipse.osgi.internal.module.ResolverImport,java.lang.String)#org/eclipse/osgi/internal/module/ResolverImport/selectNextSupplier()
org/eclipse/osgi/internal/module/ResolverImpl/resolveDynamicImport(org.eclipse.osgi.internal.module.ResolverImport,java.lang.String)#java/lang/StringBuilder/toString()
org/eclipse/osgi/internal/module/ResolverImpl/resolveDynamicImport(org.eclipse.osgi.internal.module.ResolverImport,java.lang.String)#java/lang/String/endsWith(java.lang.String)
org/eclipse/osgi/internal/module/ResolverImpl/printWirings()#org/eclipse/osgi/internal/module/BundleConstraint/getPossibleSuppliers()
org/eclipse/osgi/internal/module/ResolverImpl/printWirings()#java/util/Iterator/hasNext()
org/eclipse/osgi/internal/module/ResolverImpl/printWirings()#java/lang/StringBuilder/append(java.lang.String)
org/eclipse/osgi/internal/module/ResolverImpl/printWirings()#org/eclipse/osgi/service/resolver/BundleDescription/isResolved()
org/eclipse/osgi/internal/module/ResolverImpl/printWirings()#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/eclipse/osgi/internal/module/ResolverImpl/printWirings()#org/eclipse/osgi/internal/module/ResolverImport/getBundle()
org/eclipse/osgi/internal/module/ResolverImpl/printWirings()#java/util/List/iterator()
org/eclipse/osgi/internal/module/ResolverImpl/printWirings()#org/eclipse/osgi/internal/module/ResolverImport/getSelectedSupplier()
org/eclipse/osgi/internal/module/ResolverImpl/printWirings()#java/lang/StringBuilder/toString()
org/eclipse/osgi/internal/module/ResolverImpl/printWirings()#org/eclipse/osgi/internal/module/BundleConstraint/getSelectedSupplier()
org/eclipse/osgi/internal/module/ResolverImpl/printWirings()#java/util/Iterator/next()
org/eclipse/osgi/internal/module/ResolverImpl/printWirings()#org/eclipse/osgi/internal/module/VersionHashMap/getAllValues()
org/eclipse/osgi/internal/module/ResolverImpl/printWirings()#java/lang/StringBuilder/append(java.lang.Object)
org/eclipse/osgi/internal/module/ResolverImpl/attachFragment0(org.eclipse.osgi.internal.module.ResolverBundle)#java/util/Iterator/remove()
org/eclipse/osgi/internal/module/ResolverImpl/attachFragment0(org.eclipse.osgi.internal.module.ResolverBundle)#org/eclipse/osgi/internal/module/BundleConstraint/getVersionConstraint()
org/eclipse/osgi/internal/module/ResolverImpl/attachFragment0(org.eclipse.osgi.internal.module.ResolverBundle)#org/eclipse/osgi/service/resolver/BundleDescription/attachFragments()
org/eclipse/osgi/internal/module/ResolverImpl/attachFragment0(org.eclipse.osgi.internal.module.ResolverBundle)#org/eclipse/osgi/internal/module/VersionHashMap/get(java.lang.Object)
org/eclipse/osgi/internal/module/ResolverImpl/attachFragment0(org.eclipse.osgi.internal.module.ResolverBundle)#java/util/List/size()
org/eclipse/osgi/internal/module/ResolverImpl/attachFragment0(org.eclipse.osgi.internal.module.ResolverBundle)#org/eclipse/osgi/service/resolver/BundleDescription/getDeclaredCapabilities(java.lang.String)
org/eclipse/osgi/internal/module/ResolverImpl/attachFragment0(org.eclipse.osgi.internal.module.ResolverBundle)#org/eclipse/osgi/service/resolver/State/getTimeStamp()
org/eclipse/osgi/internal/module/ResolverImpl/attachFragment0(org.eclipse.osgi.internal.module.ResolverBundle)#org/eclipse/osgi/service/resolver/State/addResolverError(org.eclipse.osgi.service.resolver.BundleDescription,int,java.lang.String,org.eclipse.osgi.service.resolver.VersionConstraint)
org/eclipse/osgi/internal/module/ResolverImpl/attachFragment0(org.eclipse.osgi.internal.module.ResolverBundle)#org/eclipse/osgi/internal/module/BundleConstraint/isSatisfiedBy(org.eclipse.osgi.internal.module.VersionSupplier)
org/eclipse/osgi/internal/module/ResolverImpl/attachFragment0(org.eclipse.osgi.internal.module.ResolverBundle)#java/util/List/get(int)
org/eclipse/osgi/internal/module/ResolverImpl/attachFragment0(org.eclipse.osgi.internal.module.ResolverBundle)#org/eclipse/osgi/framework/util/ArrayMap/ArrayMap(java.util.List,java.util.List)
org/eclipse/osgi/internal/module/ResolverImpl/attachFragment0(org.eclipse.osgi.internal.module.ResolverBundle)#java/util/ArrayList/ArrayList(int)
org/eclipse/osgi/internal/module/ResolverImpl/attachFragment0(org.eclipse.osgi.internal.module.ResolverBundle)#org/osgi/framework/hooks/resolver/ResolverHook/filterMatches(org.osgi.framework.wiring.BundleRequirement,java.util.Collection)
org/eclipse/osgi/internal/module/ResolverImpl/attachFragment0(org.eclipse.osgi.internal.module.ResolverBundle)#java/lang/Object/toString()
org/eclipse/osgi/internal/module/ResolverImpl/attachFragment0(org.eclipse.osgi.internal.module.ResolverBundle)#java/util/ArrayList/ArrayList(java.util.Collection)
org/eclipse/osgi/internal/module/ResolverImpl/attachFragment0(org.eclipse.osgi.internal.module.ResolverBundle)#java/util/Iterator/hasNext()
org/eclipse/osgi/internal/module/ResolverImpl/attachFragment0(org.eclipse.osgi.internal.module.ResolverBundle)#org/eclipse/osgi/service/resolver/VersionConstraint/getName()
org/eclipse/osgi/internal/module/ResolverImpl/attachFragment0(org.eclipse.osgi.internal.module.ResolverBundle)#java/util/Iterator/next()
org/eclipse/osgi/internal/module/ResolverImpl/attachFragment0(org.eclipse.osgi.internal.module.ResolverBundle)#org/eclipse/osgi/internal/module/BundleConstraint/getRequirement()
org/eclipse/osgi/internal/module/ResolverImpl/attachFragment0(org.eclipse.osgi.internal.module.ResolverBundle)#java/util/List/add(java.lang.Object)
org/eclipse/osgi/internal/module/ResolverImpl/attachFragment0(org.eclipse.osgi.internal.module.ResolverBundle)#java/util/List/iterator()
org/eclipse/osgi/internal/module/ResolverImpl/rewireImport(org.eclipse.osgi.internal.module.ResolverImport,java.util.List)#java/util/Iterator/hasNext()
org/eclipse/osgi/internal/module/ResolverImpl/rewireImport(org.eclipse.osgi.internal.module.ResolverImport,java.util.List)#java/io/PrintStream/println(java.lang.String)
org/eclipse/osgi/internal/module/ResolverImpl/rewireImport(org.eclipse.osgi.internal.module.ResolverImport,java.util.List)#org/eclipse/osgi/service/resolver/VersionConstraint/getSupplier()
org/eclipse/osgi/internal/module/ResolverImpl/rewireImport(org.eclipse.osgi.internal.module.ResolverImport,java.util.List)#org/eclipse/osgi/internal/module/VersionHashMap/get(java.lang.Object)
org/eclipse/osgi/internal/module/ResolverImpl/rewireImport(org.eclipse.osgi.internal.module.ResolverImport,java.util.List)#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/eclipse/osgi/internal/module/ResolverImpl/rewireImport(org.eclipse.osgi.internal.module.ResolverImport,java.util.List)#java/util/Iterator/next()
org/eclipse/osgi/internal/module/ResolverImpl/rewireImport(org.eclipse.osgi.internal.module.ResolverImport,java.util.List)#org/eclipse/osgi/internal/module/ResolverImport/getVersionConstraint()
org/eclipse/osgi/internal/module/ResolverImpl/rewireImport(org.eclipse.osgi.internal.module.ResolverImport,java.util.List)#java/lang/StringBuilder/append(java.lang.Object)
org/eclipse/osgi/internal/module/ResolverImpl/rewireImport(org.eclipse.osgi.internal.module.ResolverImport,java.util.List)#java/util/List/iterator()
org/eclipse/osgi/internal/module/ResolverImpl/rewireImport(org.eclipse.osgi.internal.module.ResolverImport,java.util.List)#java/util/HashMap/get(java.lang.Object)
org/eclipse/osgi/internal/module/ResolverImpl/rewireImport(org.eclipse.osgi.internal.module.ResolverImport,java.util.List)#java/lang/StringBuilder/toString()
org/eclipse/osgi/internal/module/ResolverImpl/rewireImport(org.eclipse.osgi.internal.module.ResolverImport,java.util.List)#org/eclipse/osgi/internal/module/ResolverImport/addPossibleSupplier(org.eclipse.osgi.internal.module.VersionSupplier)
org/eclipse/osgi/internal/module/ResolverImpl/rewireImport(org.eclipse.osgi.internal.module.ResolverImport,java.util.List)#org/eclipse/osgi/service/resolver/ExportPackageDescription/getExporter()
org/eclipse/osgi/internal/module/ResolverImpl/rewireImport(org.eclipse.osgi.internal.module.ResolverImport,java.util.List)#org/eclipse/osgi/internal/module/ResolverImport/getSelectedSupplier()
org/eclipse/osgi/internal/module/ResolverImpl/rewireRequire(org.eclipse.osgi.internal.module.BundleConstraint,java.util.List)#org/eclipse/osgi/internal/module/BundleConstraint/getVersionConstraint()
org/eclipse/osgi/internal/module/ResolverImpl/rewireRequire(org.eclipse.osgi.internal.module.BundleConstraint,java.util.List)#java/io/PrintStream/println(java.lang.String)
org/eclipse/osgi/internal/module/ResolverImpl/rewireRequire(org.eclipse.osgi.internal.module.BundleConstraint,java.util.List)#org/eclipse/osgi/service/resolver/VersionConstraint/getSupplier()
org/eclipse/osgi/internal/module/ResolverImpl/rewireRequire(org.eclipse.osgi.internal.module.BundleConstraint,java.util.List)#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/eclipse/osgi/internal/module/ResolverImpl/rewireRequire(org.eclipse.osgi.internal.module.BundleConstraint,java.util.List)#org/eclipse/osgi/internal/module/BundleConstraint/getSelectedSupplier()
org/eclipse/osgi/internal/module/ResolverImpl/rewireRequire(org.eclipse.osgi.internal.module.BundleConstraint,java.util.List)#org/eclipse/osgi/internal/module/BundleConstraint/addPossibleSupplier(org.eclipse.osgi.internal.module.VersionSupplier)
org/eclipse/osgi/internal/module/ResolverImpl/rewireRequire(org.eclipse.osgi.internal.module.BundleConstraint,java.util.List)#java/lang/StringBuilder/append(java.lang.Object)
org/eclipse/osgi/internal/module/ResolverImpl/rewireRequire(org.eclipse.osgi.internal.module.BundleConstraint,java.util.List)#java/util/HashMap/get(java.lang.Object)
org/eclipse/osgi/internal/module/ResolverImpl/rewireRequire(org.eclipse.osgi.internal.module.BundleConstraint,java.util.List)#java/lang/StringBuilder/toString()
org/eclipse/osgi/internal/module/ResolverImpl/resolve(org.eclipse.osgi.service.resolver.BundleDescription[],java.util.Dictionary[])#java/util/Collection/removeAll(java.util.Collection)
org/eclipse/osgi/internal/module/ResolverImpl/resolve(org.eclipse.osgi.service.resolver.BundleDescription[],java.util.Dictionary[])#org/osgi/framework/hooks/resolver/ResolverHook/end()
org/eclipse/osgi/internal/module/ResolverImpl/resolve(org.eclipse.osgi.service.resolver.BundleDescription[],java.util.Dictionary[])#java/util/Iterator/next()
org/eclipse/osgi/internal/module/ResolverImpl/resolve(org.eclipse.osgi.service.resolver.BundleDescription[],java.util.Dictionary[])#java/util/List/add(java.lang.Object)
org/eclipse/osgi/internal/module/ResolverImpl/resolve(org.eclipse.osgi.service.resolver.BundleDescription[],java.util.Dictionary[])#java/util/Iterator/remove()
org/eclipse/osgi/internal/module/ResolverImpl/resolve(org.eclipse.osgi.service.resolver.BundleDescription[],java.util.Dictionary[])#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/eclipse/osgi/internal/module/ResolverImpl/resolve(org.eclipse.osgi.service.resolver.BundleDescription[],java.util.Dictionary[])#java/util/ArrayList/ArrayList(int)
org/eclipse/osgi/internal/module/ResolverImpl/resolve(org.eclipse.osgi.service.resolver.BundleDescription[],java.util.Dictionary[])#org/eclipse/osgi/framework/util/ArrayMap/size()
org/eclipse/osgi/internal/module/ResolverImpl/resolve(org.eclipse.osgi.service.resolver.BundleDescription[],java.util.Dictionary[])#java/util/Dictionary/get(java.lang.Object)
org/eclipse/osgi/internal/module/ResolverImpl/resolve(org.eclipse.osgi.service.resolver.BundleDescription[],java.util.Dictionary[])#java/util/ArrayList/ArrayList(java.util.Collection)
org/eclipse/osgi/internal/module/ResolverImpl/resolve(org.eclipse.osgi.service.resolver.BundleDescription[],java.util.Dictionary[])#java/util/Iterator/hasNext()
org/eclipse/osgi/internal/module/ResolverImpl/resolve(org.eclipse.osgi.service.resolver.BundleDescription[],java.util.Dictionary[])#java/util/List/isEmpty()
org/eclipse/osgi/internal/module/ResolverImpl/resolve(org.eclipse.osgi.service.resolver.BundleDescription[],java.util.Dictionary[])#java/util/List/size()
org/eclipse/osgi/internal/module/ResolverImpl/resolve(org.eclipse.osgi.service.resolver.BundleDescription[],java.util.Dictionary[])#java/util/Collection/toArray(java.lang.Object[])
org/eclipse/osgi/internal/module/ResolverImpl/resolve(org.eclipse.osgi.service.resolver.BundleDescription[],java.util.Dictionary[])#java/lang/String/equals(java.lang.Object)
org/eclipse/osgi/internal/module/ResolverImpl/resolve(org.eclipse.osgi.service.resolver.BundleDescription[],java.util.Dictionary[])#java/util/List/toArray(java.lang.Object[])
org/eclipse/osgi/internal/module/ResolverImpl/resolve(org.eclipse.osgi.service.resolver.BundleDescription[],java.util.Dictionary[])#org/eclipse/osgi/service/resolver/State/getResolvedBundles()
org/eclipse/osgi/internal/module/ResolverImpl/resolve(org.eclipse.osgi.service.resolver.BundleDescription[],java.util.Dictionary[])#org/osgi/framework/hooks/resolver/ResolverHook/filterResolvable(java.util.Collection)
org/eclipse/osgi/internal/module/ResolverImpl/resolve(org.eclipse.osgi.service.resolver.BundleDescription[],java.util.Dictionary[])#org/eclipse/osgi/service/resolver/State/resolveBundle(org.eclipse.osgi.service.resolver.BundleDescription,boolean,org.eclipse.osgi.service.resolver.BundleDescription[],org.eclipse.osgi.service.resolver.ExportPackageDescription[],org.eclipse.osgi.service.resolver.ExportPackageDescription[],org.eclipse.osgi.service.resolver.GenericDescription[],org.eclipse.osgi.service.resolver.BundleDescription[],org.eclipse.osgi.service.resolver.ExportPackageDescription[],org.eclipse.osgi.service.resolver.GenericDescription[],java.util.Map)
org/eclipse/osgi/internal/module/ResolverImpl/resolve(org.eclipse.osgi.service.resolver.BundleDescription[],java.util.Dictionary[])#java/util/List/iterator()
org/eclipse/osgi/internal/module/ResolverImpl/resolve(org.eclipse.osgi.service.resolver.BundleDescription[],java.util.Dictionary[])#java/util/Collection/iterator()
org/eclipse/osgi/internal/module/ResolverImpl/resolve(org.eclipse.osgi.service.resolver.BundleDescription[],java.util.Dictionary[])#java/util/HashMap/size()
org/eclipse/osgi/internal/module/ResolverImpl/resolve(org.eclipse.osgi.service.resolver.BundleDescription[],java.util.Dictionary[])#org/eclipse/osgi/framework/util/ArrayMap/ArrayMap(java.util.List,java.util.List)
org/eclipse/osgi/internal/module/ResolverImpl/resolve(org.eclipse.osgi.service.resolver.BundleDescription[],java.util.Dictionary[])#org/eclipse/osgi/internal/module/ResolverBundle/getName()
org/eclipse/osgi/internal/module/ResolverImpl/resolve(org.eclipse.osgi.service.resolver.BundleDescription[],java.util.Dictionary[])#java/util/HashMap/values()
org/eclipse/osgi/internal/module/ResolverImpl/resolve(org.eclipse.osgi.service.resolver.BundleDescription[],java.util.Dictionary[])#java/util/HashMap/get(java.lang.Object)
org/eclipse/osgi/internal/module/ResolverImpl/resolveOSGiEE(org.eclipse.osgi.internal.module.ResolverBundle)#org/eclipse/osgi/internal/module/GenericConstraint/getBundleDescription()
org/eclipse/osgi/internal/module/ResolverImpl/resolveOSGiEE(org.eclipse.osgi.internal.module.ResolverBundle)#java/lang/StringBuilder/append(java.lang.String)
org/eclipse/osgi/internal/module/ResolverImpl/resolveOSGiEE(org.eclipse.osgi.internal.module.ResolverBundle)#org/eclipse/osgi/service/resolver/VersionConstraint/getName()
org/eclipse/osgi/internal/module/ResolverImpl/resolveOSGiEE(org.eclipse.osgi.internal.module.ResolverBundle)#java/lang/String/equals(java.lang.Object)
org/eclipse/osgi/internal/module/ResolverImpl/resolveOSGiEE(org.eclipse.osgi.internal.module.ResolverBundle)#org/eclipse/osgi/service/resolver/GenericDescription/getAttributes()
org/eclipse/osgi/internal/module/ResolverImpl/resolveOSGiEE(org.eclipse.osgi.internal.module.ResolverBundle)#java/lang/StringBuilder/append(java.lang.Object)
org/eclipse/osgi/internal/module/ResolverImpl/resolveOSGiEE(org.eclipse.osgi.internal.module.ResolverBundle)#org/eclipse/osgi/internal/module/GenericConstraint/getVersionConstraint()
org/eclipse/osgi/internal/module/ResolverImpl/resolveOSGiEE(org.eclipse.osgi.internal.module.ResolverBundle)#org/eclipse/osgi/service/resolver/VersionConstraint/getBundle()
org/eclipse/osgi/internal/module/ResolverImpl/resolveOSGiEE(org.eclipse.osgi.internal.module.ResolverBundle)#java/lang/Integer/intValue()
org/eclipse/osgi/internal/module/ResolverImpl/resolveOSGiEE(org.eclipse.osgi.internal.module.ResolverBundle)#java/util/ArrayList/ArrayList(int)
org/eclipse/osgi/internal/module/ResolverImpl/resolveOSGiEE(org.eclipse.osgi.internal.module.ResolverBundle)#java/lang/Object/toString()
org/eclipse/osgi/internal/module/ResolverImpl/resolveOSGiEE(org.eclipse.osgi.internal.module.ResolverBundle)#java/util/Dictionary/get(java.lang.Object)
org/eclipse/osgi/internal/module/ResolverImpl/resolveOSGiEE(org.eclipse.osgi.internal.module.ResolverBundle)#org/eclipse/osgi/internal/module/ResolverBundle/getBaseDescription()
org/eclipse/osgi/internal/module/ResolverImpl/resolveOSGiEE(org.eclipse.osgi.internal.module.ResolverBundle)#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/eclipse/osgi/internal/module/ResolverImpl/resolveOSGiEE(org.eclipse.osgi.internal.module.ResolverBundle)#org/eclipse/osgi/service/resolver/State/addResolverError(org.eclipse.osgi.service.resolver.BundleDescription,int,java.lang.String,org.eclipse.osgi.service.resolver.VersionConstraint)
org/eclipse/osgi/internal/module/ResolverImpl/resolveOSGiEE(org.eclipse.osgi.internal.module.ResolverBundle)#org/eclipse/osgi/internal/module/GenericConstraint/getSelectedSupplier()
org/eclipse/osgi/internal/module/ResolverImpl/resolveOSGiEE(org.eclipse.osgi.internal.module.ResolverBundle)#java/lang/StringBuilder/toString()
org/eclipse/osgi/internal/module/ResolverImpl/getMultipleSuppliers(org.eclipse.osgi.internal.module.ResolverBundle[],java.util.Set,java.util.Set)#java/util/ArrayList/ArrayList()
org/eclipse/osgi/internal/module/ResolverImpl/getMultipleSuppliers(org.eclipse.osgi.internal.module.ResolverBundle[],java.util.Set,java.util.Set)#java/util/Iterator/hasNext()
org/eclipse/osgi/internal/module/ResolverImpl/getMultipleSuppliers(org.eclipse.osgi.internal.module.ResolverBundle[],java.util.Set,java.util.Set)#java/util/List/toArray(java.lang.Object[])
org/eclipse/osgi/internal/module/ResolverImpl/getMultipleSuppliers(org.eclipse.osgi.internal.module.ResolverBundle[],java.util.Set,java.util.Set)#java/util/Set/contains(java.lang.Object)
org/eclipse/osgi/internal/module/ResolverImpl/getMultipleSuppliers(org.eclipse.osgi.internal.module.ResolverBundle[],java.util.Set,java.util.Set)#org/eclipse/osgi/internal/module/BundleConstraint/getName()
org/eclipse/osgi/internal/module/ResolverImpl/getMultipleSuppliers(org.eclipse.osgi.internal.module.ResolverBundle[],java.util.Set,java.util.Set)#org/eclipse/osgi/internal/module/BundleConstraint/getNumPossibleSuppliers()
org/eclipse/osgi/internal/module/ResolverImpl/getMultipleSuppliers(org.eclipse.osgi.internal.module.ResolverBundle[],java.util.Set,java.util.Set)#java/util/List/iterator()
org/eclipse/osgi/internal/module/ResolverImpl/getMultipleSuppliers(org.eclipse.osgi.internal.module.ResolverBundle[],java.util.Set,java.util.Set)#org/eclipse/osgi/internal/module/GenericConstraint/getNumPossibleSuppliers()
org/eclipse/osgi/internal/module/ResolverImpl/getMultipleSuppliers(org.eclipse.osgi.internal.module.ResolverBundle[],java.util.Set,java.util.Set)#java/lang/Integer/intValue()
org/eclipse/osgi/internal/module/ResolverImpl/getMultipleSuppliers(org.eclipse.osgi.internal.module.ResolverBundle[],java.util.Set,java.util.Set)#java/util/ArrayList/ArrayList(int)
org/eclipse/osgi/internal/module/ResolverImpl/getMultipleSuppliers(org.eclipse.osgi.internal.module.ResolverBundle[],java.util.Set,java.util.Set)#org/eclipse/osgi/internal/module/ResolverImport/getNumPossibleSuppliers()
org/eclipse/osgi/internal/module/ResolverImpl/getMultipleSuppliers(org.eclipse.osgi.internal.module.ResolverBundle[],java.util.Set,java.util.Set)#java/util/List/size()
org/eclipse/osgi/internal/module/ResolverImpl/getMultipleSuppliers(org.eclipse.osgi.internal.module.ResolverBundle[],java.util.Set,java.util.Set)#java/util/Iterator/next()
org/eclipse/osgi/internal/module/ResolverImpl/getMultipleSuppliers(org.eclipse.osgi.internal.module.ResolverBundle[],java.util.Set,java.util.Set)#java/util/HashMap/HashMap()
org/eclipse/osgi/internal/module/ResolverImpl/getMultipleSuppliers(org.eclipse.osgi.internal.module.ResolverBundle[],java.util.Set,java.util.Set)#java/util/List/add(java.lang.Object)
org/eclipse/osgi/internal/module/ResolverImpl/getMultipleSuppliers(org.eclipse.osgi.internal.module.ResolverBundle[],java.util.Set,java.util.Set)#org/eclipse/osgi/internal/module/ResolverImport/getPossibleSuppliers()
org/eclipse/osgi/internal/module/ResolverImpl/getMultipleSuppliers(org.eclipse.osgi.internal.module.ResolverBundle[],java.util.Set,java.util.Set)#org/eclipse/osgi/service/resolver/ExportPackageDescription/getDirective(java.lang.String)
org/eclipse/osgi/internal/module/ResolverImpl/getMultipleSuppliers(org.eclipse.osgi.internal.module.ResolverBundle[],java.util.Set,java.util.Set)#org/eclipse/osgi/internal/module/ResolverImport/getSelectedSupplier()
org/eclipse/osgi/internal/module/ResolverImpl/unresolveBundle(org.eclipse.osgi.internal.module.ResolverBundle,boolean)#org/eclipse/osgi/service/resolver/BundleDescription/getBundleId()
org/eclipse/osgi/internal/module/ResolverImpl/unresolveBundle(org.eclipse.osgi.internal.module.ResolverBundle,boolean)#java/util/Iterator/hasNext()
org/eclipse/osgi/internal/module/ResolverImpl/unresolveBundle(org.eclipse.osgi.internal.module.ResolverBundle,boolean)#org/eclipse/osgi/service/resolver/BundleDescription/isResolved()
org/eclipse/osgi/internal/module/ResolverImpl/unresolveBundle(org.eclipse.osgi.internal.module.ResolverBundle,boolean)#java/util/HashMap/remove(java.lang.Object)
org/eclipse/osgi/internal/module/ResolverImpl/unresolveBundle(org.eclipse.osgi.internal.module.ResolverBundle,boolean)#java/util/Iterator/next()
org/eclipse/osgi/internal/module/ResolverImpl/unresolveBundle(org.eclipse.osgi.internal.module.ResolverBundle,boolean)#org/eclipse/osgi/service/resolver/BundleDescription/getDependents()
org/eclipse/osgi/internal/module/ResolverImpl/unresolveBundle(org.eclipse.osgi.internal.module.ResolverBundle,boolean)#java/lang/Long/Long(long)
org/eclipse/osgi/internal/module/ResolverImpl/unresolveBundle(org.eclipse.osgi.internal.module.ResolverBundle,boolean)#org/eclipse/osgi/service/resolver/State/removeBundleComplete(org.eclipse.osgi.service.resolver.BundleDescription)
org/eclipse/osgi/internal/module/ResolverImpl/unresolveBundle(org.eclipse.osgi.internal.module.ResolverBundle,boolean)#org/eclipse/osgi/service/resolver/State/resolveBundle(org.eclipse.osgi.service.resolver.BundleDescription,boolean,org.eclipse.osgi.service.resolver.BundleDescription[],org.eclipse.osgi.service.resolver.ExportPackageDescription[],org.eclipse.osgi.service.resolver.ExportPackageDescription[],org.eclipse.osgi.service.resolver.GenericDescription[],org.eclipse.osgi.service.resolver.BundleDescription[],org.eclipse.osgi.service.resolver.ExportPackageDescription[],org.eclipse.osgi.service.resolver.GenericDescription[],java.util.Map)
org/eclipse/osgi/internal/module/ResolverImpl/unresolveBundle(org.eclipse.osgi.internal.module.ResolverBundle,boolean)#java/util/List/iterator()
org/eclipse/osgi/internal/module/ResolverImpl/unresolveBundle(org.eclipse.osgi.internal.module.ResolverBundle,boolean)#java/util/HashMap/get(java.lang.Object)
org/eclipse/osgi/internal/module/ResolverImpl/checkUsesConstraints(org.eclipse.osgi.internal.module.ResolverBundle[],java.util.Dictionary[])#org/eclipse/osgi/service/resolver/VersionConstraint/getBundle()
org/eclipse/osgi/internal/module/ResolverImpl/checkUsesConstraints(org.eclipse.osgi.internal.module.ResolverBundle[],java.util.Dictionary[])#java/lang/Object/toString()
org/eclipse/osgi/internal/module/ResolverImpl/checkUsesConstraints(org.eclipse.osgi.internal.module.ResolverBundle[],java.util.Dictionary[])#java/util/Iterator/hasNext()
org/eclipse/osgi/internal/module/ResolverImpl/checkUsesConstraints(org.eclipse.osgi.internal.module.ResolverBundle[],java.util.Dictionary[])#java/util/List/size()
org/eclipse/osgi/internal/module/ResolverImpl/checkUsesConstraints(org.eclipse.osgi.internal.module.ResolverBundle[],java.util.Dictionary[])#java/util/Iterator/next()
org/eclipse/osgi/internal/module/ResolverImpl/checkUsesConstraints(org.eclipse.osgi.internal.module.ResolverBundle[],java.util.Dictionary[])#org/eclipse/osgi/service/resolver/State/addResolverError(org.eclipse.osgi.service.resolver.BundleDescription,int,java.lang.String,org.eclipse.osgi.service.resolver.VersionConstraint)
org/eclipse/osgi/internal/module/ResolverImpl/checkUsesConstraints(org.eclipse.osgi.internal.module.ResolverBundle[],java.util.Dictionary[])#java/util/List/iterator()
org/eclipse/osgi/internal/module/ResolverImpl/checkUsesConstraints(org.eclipse.osgi.internal.module.ResolverBundle[],java.util.Dictionary[])#java/util/Set/add(java.lang.Object)
org/eclipse/osgi/internal/module/ResolverImpl/checkUsesConstraints(org.eclipse.osgi.internal.module.ResolverBundle[],java.util.Dictionary[])#java/lang/StringBuilder/toString()
org/eclipse/osgi/internal/module/ResolverImpl/checkUsesConstraints(org.eclipse.osgi.internal.module.ResolverBundle[],java.util.Dictionary[])#java/lang/StringBuilder/append(java.lang.String)
org/eclipse/osgi/internal/module/ResolverImpl/checkUsesConstraints(org.eclipse.osgi.internal.module.ResolverBundle[],java.util.Dictionary[])#java/io/PrintStream/println(java.lang.String)
org/eclipse/osgi/internal/module/ResolverImpl/checkUsesConstraints(org.eclipse.osgi.internal.module.ResolverBundle[],java.util.Dictionary[])#java/util/HashSet/HashSet(int)
org/eclipse/osgi/internal/module/ResolverImpl/checkUsesConstraints(org.eclipse.osgi.internal.module.ResolverBundle[],java.util.Dictionary[])#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/eclipse/osgi/internal/module/ResolverImpl/checkUsesConstraints(org.eclipse.osgi.internal.module.ResolverBundle[],java.util.Dictionary[])#java/lang/StringBuilder/append(java.lang.Object)
org/eclipse/osgi/internal/module/ResolverImpl/checkUsesConstraints(org.eclipse.osgi.internal.module.ResolverBundle[],java.util.Dictionary[])#java/util/HashMap/get(java.lang.Object)
org/eclipse/osgi/internal/module/ResolverImpl/initialize()#java/util/ArrayList/iterator()
org/eclipse/osgi/internal/module/ResolverImpl/initialize()#java/util/Iterator/hasNext()
org/eclipse/osgi/internal/module/ResolverImpl/initialize()#org/eclipse/osgi/service/resolver/State/getBundles()
org/eclipse/osgi/internal/module/ResolverImpl/initialize()#java/util/List/iterator()
org/eclipse/osgi/internal/module/ResolverImpl/initialize()#org/eclipse/osgi/internal/module/BundleConstraint/getVersionConstraint()
org/eclipse/osgi/internal/module/ResolverImpl/initialize()#java/util/ArrayList/ArrayList()
org/eclipse/osgi/internal/module/ResolverImpl/initialize()#java/util/Iterator/next()
org/eclipse/osgi/internal/module/ResolverImpl/initialize()#java/util/HashMap/HashMap()
org/eclipse/osgi/internal/module/ResolverImpl/initialize()#org/eclipse/osgi/service/resolver/HostSpecification/getHosts()
org/eclipse/osgi/internal/module/ResolverImpl/initialize()#java/util/HashSet/HashSet()
org/eclipse/osgi/internal/module/ResolverImpl/initialize()#java/util/HashMap/get(java.lang.Object)
org/eclipse/osgi/internal/module/ResolverImpl/addConflicts(org.eclipse.osgi.internal.module.ResolverBundle,java.util.Set,java.util.Set,java.util.Collection,java.util.List)#java/util/ArrayList/ArrayList(int)
org/eclipse/osgi/internal/module/ResolverImpl/addConflicts(org.eclipse.osgi.internal.module.ResolverBundle,java.util.Set,java.util.Set,java.util.Collection,java.util.List)#java/util/Iterator/hasNext()
org/eclipse/osgi/internal/module/ResolverImpl/addConflicts(org.eclipse.osgi.internal.module.ResolverBundle,java.util.Set,java.util.Set,java.util.Collection,java.util.List)#java/util/Collection/size()
org/eclipse/osgi/internal/module/ResolverImpl/addConflicts(org.eclipse.osgi.internal.module.ResolverBundle,java.util.Set,java.util.Set,java.util.Collection,java.util.List)#java/util/Collection/iterator()
org/eclipse/osgi/internal/module/ResolverImpl/addConflicts(org.eclipse.osgi.internal.module.ResolverBundle,java.util.Set,java.util.Set,java.util.Collection,java.util.List)#org/eclipse/osgi/internal/module/ResolverImport/getSelectedSupplier()
org/eclipse/osgi/internal/module/ResolverImpl/addConflicts(org.eclipse.osgi.internal.module.ResolverBundle,java.util.Set,java.util.Set,java.util.Collection,java.util.List)#org/eclipse/osgi/internal/module/BundleConstraint/getSelectedSupplier()
org/eclipse/osgi/internal/module/ResolverImpl/addConflicts(org.eclipse.osgi.internal.module.ResolverBundle,java.util.Set,java.util.Set,java.util.Collection,java.util.List)#java/util/Iterator/next()
org/eclipse/osgi/internal/module/ResolverImpl/addConflicts(org.eclipse.osgi.internal.module.ResolverBundle,java.util.Set,java.util.Set,java.util.Collection,java.util.List)#java/util/List/add(java.lang.Object)
org/eclipse/osgi/internal/module/ResolverImpl/addConflicts(org.eclipse.osgi.internal.module.ResolverBundle,java.util.Set,java.util.Set,java.util.Collection,java.util.List)#java/util/Collection/add(java.lang.Object)
org/eclipse/osgi/internal/module/ResolverImpl/resolveBundle(org.eclipse.osgi.internal.module.ResolverBundle,java.util.List)#java/lang/StringBuilder/append(java.lang.String)
org/eclipse/osgi/internal/module/ResolverImpl/resolveBundle(org.eclipse.osgi.internal.module.ResolverBundle,java.util.List)#org/eclipse/osgi/service/resolver/VersionConstraint/getName()
org/eclipse/osgi/internal/module/ResolverImpl/resolveBundle(org.eclipse.osgi.internal.module.ResolverBundle,java.util.List)#org/eclipse/osgi/service/resolver/State/getResolverErrors(org.eclipse.osgi.service.resolver.BundleDescription)
org/eclipse/osgi/internal/module/ResolverImpl/resolveBundle(org.eclipse.osgi.internal.module.ResolverBundle,java.util.List)#org/eclipse/osgi/internal/module/GenericConstraint/getVersionConstraint()
org/eclipse/osgi/internal/module/ResolverImpl/resolveBundle(org.eclipse.osgi.internal.module.ResolverBundle,java.util.List)#org/eclipse/osgi/service/resolver/VersionConstraint/getBundle()
org/eclipse/osgi/internal/module/ResolverImpl/resolveBundle(org.eclipse.osgi.internal.module.ResolverBundle,java.util.List)#java/lang/Integer/intValue()
org/eclipse/osgi/internal/module/ResolverImpl/resolveBundle(org.eclipse.osgi.internal.module.ResolverBundle,java.util.List)#org/eclipse/osgi/internal/module/GenericConstraint/getBundleDescription()
org/eclipse/osgi/internal/module/ResolverImpl/resolveBundle(org.eclipse.osgi.internal.module.ResolverBundle,java.util.List)#org/eclipse/osgi/internal/module/BundleConstraint/getVersionConstraint()
org/eclipse/osgi/internal/module/ResolverImpl/resolveBundle(org.eclipse.osgi.internal.module.ResolverBundle,java.util.List)#org/eclipse/osgi/internal/module/GenericConstraint/isFromFragment()
org/eclipse/osgi/internal/module/ResolverImpl/resolveBundle(org.eclipse.osgi.internal.module.ResolverBundle,java.util.List)#java/lang/Object/toString()
org/eclipse/osgi/internal/module/ResolverImpl/resolveBundle(org.eclipse.osgi.internal.module.ResolverBundle,java.util.List)#java/util/Dictionary/get(java.lang.Object)
org/eclipse/osgi/internal/module/ResolverImpl/resolveBundle(org.eclipse.osgi.internal.module.ResolverBundle,java.util.List)#org/eclipse/osgi/internal/module/BundleConstraint/isFromFragment()
org/eclipse/osgi/internal/module/ResolverImpl/resolveBundle(org.eclipse.osgi.internal.module.ResolverBundle,java.util.List)#org/eclipse/osgi/internal/module/BundleConstraint/getBundleDescription()
org/eclipse/osgi/internal/module/ResolverImpl/resolveBundle(org.eclipse.osgi.internal.module.ResolverBundle,java.util.List)#org/eclipse/osgi/internal/module/ResolverBundle/getBaseDescription()
org/eclipse/osgi/internal/module/ResolverImpl/resolveBundle(org.eclipse.osgi.internal.module.ResolverBundle,java.util.List)#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/eclipse/osgi/internal/module/ResolverImpl/resolveBundle(org.eclipse.osgi.internal.module.ResolverBundle,java.util.List)#java/lang/String/equals(java.lang.Object)
org/eclipse/osgi/internal/module/ResolverImpl/resolveBundle(org.eclipse.osgi.internal.module.ResolverBundle,java.util.List)#java/lang/StringBuilder/StringBuilder()
org/eclipse/osgi/internal/module/ResolverImpl/resolveBundle(org.eclipse.osgi.internal.module.ResolverBundle,java.util.List)#org/eclipse/osgi/service/resolver/State/addResolverError(org.eclipse.osgi.service.resolver.BundleDescription,int,java.lang.String,org.eclipse.osgi.service.resolver.VersionConstraint)
org/eclipse/osgi/internal/module/ResolverImpl/resolveBundle(org.eclipse.osgi.internal.module.ResolverBundle,java.util.List)#org/eclipse/osgi/internal/module/GenericConstraint/getSelectedSupplier()
org/eclipse/osgi/internal/module/ResolverImpl/resolveBundle(org.eclipse.osgi.internal.module.ResolverBundle,java.util.List)#org/eclipse/osgi/service/resolver/GenericDescription/getAttributes()
org/eclipse/osgi/internal/module/ResolverImpl/resolveBundle(org.eclipse.osgi.internal.module.ResolverBundle,java.util.List)#org/eclipse/osgi/internal/module/ResolverImport/getVersionConstraint()
org/eclipse/osgi/internal/module/ResolverImpl/resolveBundle(org.eclipse.osgi.internal.module.ResolverBundle,java.util.List)#java/util/List/contains(java.lang.Object)
org/eclipse/osgi/internal/module/ResolverImpl/resolveBundle(org.eclipse.osgi.internal.module.ResolverBundle,java.util.List)#java/lang/StringBuilder/append(java.lang.Object)
org/eclipse/osgi/internal/module/ResolverImpl/resolveBundle(org.eclipse.osgi.internal.module.ResolverBundle,java.util.List)#org/eclipse/osgi/internal/module/ResolverImport/isFromFragment()
org/eclipse/osgi/internal/module/ResolverImpl/resolveBundle(org.eclipse.osgi.internal.module.ResolverBundle,java.util.List)#org/eclipse/osgi/internal/module/ResolverImport/getBundleDescription()
org/eclipse/osgi/internal/module/ResolverImpl/resolveBundle(org.eclipse.osgi.internal.module.ResolverBundle,java.util.List)#java/util/HashMap/get(java.lang.Object)
org/eclipse/osgi/internal/module/ResolverImpl/resolveBundle(org.eclipse.osgi.internal.module.ResolverBundle,java.util.List)#java/lang/StringBuilder/toString()
org/eclipse/osgi/internal/module/ResolverImpl/rewireGeneric(org.eclipse.osgi.internal.module.GenericConstraint,java.util.List)#java/io/PrintStream/println(java.lang.String)
org/eclipse/osgi/internal/module/ResolverImpl/rewireGeneric(org.eclipse.osgi.internal.module.GenericConstraint,java.util.List)#java/util/Map/get(java.lang.Object)
org/eclipse/osgi/internal/module/ResolverImpl/rewireGeneric(org.eclipse.osgi.internal.module.GenericConstraint,java.util.List)#org/eclipse/osgi/internal/module/VersionHashMap/get(java.lang.Object)
org/eclipse/osgi/internal/module/ResolverImpl/rewireGeneric(org.eclipse.osgi.internal.module.GenericConstraint,java.util.List)#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/eclipse/osgi/internal/module/ResolverImpl/rewireGeneric(org.eclipse.osgi.internal.module.GenericConstraint,java.util.List)#java/util/Iterator/next()
org/eclipse/osgi/internal/module/ResolverImpl/rewireGeneric(org.eclipse.osgi.internal.module.GenericConstraint,java.util.List)#org/eclipse/osgi/internal/module/GenericConstraint/getSelectedSupplier()
org/eclipse/osgi/internal/module/ResolverImpl/rewireGeneric(org.eclipse.osgi.internal.module.GenericConstraint,java.util.List)#org/eclipse/osgi/service/resolver/GenericSpecification/getSuppliers()
org/eclipse/osgi/internal/module/ResolverImpl/rewireGeneric(org.eclipse.osgi.internal.module.GenericConstraint,java.util.List)#org/eclipse/osgi/internal/module/GenericCapability/getBaseDescription()
org/eclipse/osgi/internal/module/ResolverImpl/rewireGeneric(org.eclipse.osgi.internal.module.GenericConstraint,java.util.List)#java/util/List/iterator()
org/eclipse/osgi/internal/module/ResolverImpl/rewireGeneric(org.eclipse.osgi.internal.module.GenericConstraint,java.util.List)#org/eclipse/osgi/internal/module/GenericConstraint/getVersionConstraint()
org/eclipse/osgi/internal/module/ResolverImpl/rewireGeneric(org.eclipse.osgi.internal.module.GenericConstraint,java.util.List)#org/eclipse/osgi/internal/module/GenericConstraint/getPossibleSuppliers()
org/eclipse/osgi/internal/module/ResolverImpl/rewireGeneric(org.eclipse.osgi.internal.module.GenericConstraint,java.util.List)#java/lang/StringBuilder/toString()
org/eclipse/osgi/internal/module/ResolverImpl/rewireGeneric(org.eclipse.osgi.internal.module.GenericConstraint,java.util.List)#java/util/Iterator/hasNext()
org/eclipse/osgi/internal/module/ResolverImpl/rewireGeneric(org.eclipse.osgi.internal.module.GenericConstraint,java.util.List)#org/eclipse/osgi/internal/module/VersionHashMap/getAllValues()
org/eclipse/osgi/internal/module/ResolverImpl/rewireGeneric(org.eclipse.osgi.internal.module.GenericConstraint,java.util.List)#org/eclipse/osgi/internal/module/GenericConstraint/getName()
org/eclipse/osgi/internal/module/ResolverImpl/rewireGeneric(org.eclipse.osgi.internal.module.GenericConstraint,java.util.List)#java/lang/StringBuilder/append(java.lang.Object)
org/eclipse/osgi/internal/module/ResolverImpl/rewireGeneric(org.eclipse.osgi.internal.module.GenericConstraint,java.util.List)#org/eclipse/osgi/internal/module/GenericConstraint/addPossibleSupplier(org.eclipse.osgi.internal.module.VersionSupplier)
org/eclipse/osgi/internal/module/ResolverImpl/resolveRequire(org.eclipse.osgi.internal.module.BundleConstraint,java.util.List)#java/util/Iterator/remove()
org/eclipse/osgi/internal/module/ResolverImpl/resolveRequire(org.eclipse.osgi.internal.module.BundleConstraint,java.util.List)#org/eclipse/osgi/internal/module/BundleConstraint/getVersionConstraint()
org/eclipse/osgi/internal/module/ResolverImpl/resolveRequire(org.eclipse.osgi.internal.module.BundleConstraint,java.util.List)#java/util/ArrayList/ArrayList(java.util.Collection)
org/eclipse/osgi/internal/module/ResolverImpl/resolveRequire(org.eclipse.osgi.internal.module.BundleConstraint,java.util.List)#org/eclipse/osgi/internal/module/BundleConstraint/getBundle()
org/eclipse/osgi/internal/module/ResolverImpl/resolveRequire(org.eclipse.osgi.internal.module.BundleConstraint,java.util.List)#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/eclipse/osgi/internal/module/ResolverImpl/resolveRequire(org.eclipse.osgi.internal.module.BundleConstraint,java.util.List)#org/eclipse/osgi/service/resolver/State/getTimeStamp()
org/eclipse/osgi/internal/module/ResolverImpl/resolveRequire(org.eclipse.osgi.internal.module.BundleConstraint,java.util.List)#org/eclipse/osgi/internal/module/BundleConstraint/isSatisfiedBy(org.eclipse.osgi.internal.module.VersionSupplier)
org/eclipse/osgi/internal/module/ResolverImpl/resolveRequire(org.eclipse.osgi.internal.module.BundleConstraint,java.util.List)#java/util/List/add(java.lang.Object)
org/eclipse/osgi/internal/module/ResolverImpl/resolveRequire(org.eclipse.osgi.internal.module.BundleConstraint,java.util.List)#java/lang/StringBuilder/append(java.lang.Object)
org/eclipse/osgi/internal/module/ResolverImpl/resolveRequire(org.eclipse.osgi.internal.module.BundleConstraint,java.util.List)#java/util/List/iterator()
org/eclipse/osgi/internal/module/ResolverImpl/resolveRequire(org.eclipse.osgi.internal.module.BundleConstraint,java.util.List)#org/eclipse/osgi/framework/util/ArrayMap/ArrayMap(java.util.List,java.util.List)
org/eclipse/osgi/internal/module/ResolverImpl/resolveRequire(org.eclipse.osgi.internal.module.BundleConstraint,java.util.List)#java/lang/StringBuilder/toString()
org/eclipse/osgi/internal/module/ResolverImpl/resolveRequire(org.eclipse.osgi.internal.module.BundleConstraint,java.util.List)#java/util/ArrayList/ArrayList(int)
org/eclipse/osgi/internal/module/ResolverImpl/resolveRequire(org.eclipse.osgi.internal.module.BundleConstraint,java.util.List)#org/osgi/framework/hooks/resolver/ResolverHook/filterMatches(org.osgi.framework.wiring.BundleRequirement,java.util.Collection)
org/eclipse/osgi/internal/module/ResolverImpl/resolveRequire(org.eclipse.osgi.internal.module.BundleConstraint,java.util.List)#java/util/Iterator/hasNext()
org/eclipse/osgi/internal/module/ResolverImpl/resolveRequire(org.eclipse.osgi.internal.module.BundleConstraint,java.util.List)#org/eclipse/osgi/internal/module/BundleConstraint/removePossibleSupplier(org.eclipse.osgi.internal.module.VersionSupplier)
org/eclipse/osgi/internal/module/ResolverImpl/resolveRequire(org.eclipse.osgi.internal.module.BundleConstraint,java.util.List)#java/lang/StringBuilder/append(java.lang.String)
org/eclipse/osgi/internal/module/ResolverImpl/resolveRequire(org.eclipse.osgi.internal.module.BundleConstraint,java.util.List)#org/eclipse/osgi/internal/module/ResolverBundle/getCapability()
org/eclipse/osgi/internal/module/ResolverImpl/resolveRequire(org.eclipse.osgi.internal.module.BundleConstraint,java.util.List)#org/eclipse/osgi/service/resolver/VersionConstraint/getName()
org/eclipse/osgi/internal/module/ResolverImpl/resolveRequire(org.eclipse.osgi.internal.module.BundleConstraint,java.util.List)#org/eclipse/osgi/internal/module/VersionHashMap/get(java.lang.Object)
org/eclipse/osgi/internal/module/ResolverImpl/resolveRequire(org.eclipse.osgi.internal.module.BundleConstraint,java.util.List)#java/util/List/size()
org/eclipse/osgi/internal/module/ResolverImpl/resolveRequire(org.eclipse.osgi.internal.module.BundleConstraint,java.util.List)#org/eclipse/osgi/internal/module/BundleConstraint/getSelectedSupplier()
org/eclipse/osgi/internal/module/ResolverImpl/resolveRequire(org.eclipse.osgi.internal.module.BundleConstraint,java.util.List)#java/util/Iterator/next()
org/eclipse/osgi/internal/module/ResolverImpl/resolveRequire(org.eclipse.osgi.internal.module.BundleConstraint,java.util.List)#org/eclipse/osgi/internal/module/BundleConstraint/getRequirement()
org/eclipse/osgi/internal/module/ResolverImpl/resolveRequire(org.eclipse.osgi.internal.module.BundleConstraint,java.util.List)#org/eclipse/osgi/internal/module/BundleConstraint/addPossibleSupplier(org.eclipse.osgi.internal.module.VersionSupplier)
org/eclipse/osgi/internal/module/ResolverImpl/resolveRequire(org.eclipse.osgi.internal.module.BundleConstraint,java.util.List)#java/util/List/contains(java.lang.Object)
org/eclipse/osgi/internal/module/ResolverImpl/resolveBundles0(org.eclipse.osgi.internal.module.ResolverBundle[],java.util.Dictionary[])#java/util/ArrayList/ArrayList(int)
org/eclipse/osgi/internal/module/ResolverImpl/resolveBundles0(org.eclipse.osgi.internal.module.ResolverBundle[],java.util.Dictionary[])#java/lang/StringBuilder/append(java.lang.String)
org/eclipse/osgi/internal/module/ResolverImpl/resolveBundles0(org.eclipse.osgi.internal.module.ResolverBundle[],java.util.Dictionary[])#java/util/HashSet/HashSet(int)
org/eclipse/osgi/internal/module/ResolverImpl/resolveBundles0(org.eclipse.osgi.internal.module.ResolverBundle[],java.util.Dictionary[])#java/util/HashSet/toArray(java.lang.Object[])
org/eclipse/osgi/internal/module/ResolverImpl/resolveBundles0(org.eclipse.osgi.internal.module.ResolverBundle[],java.util.Dictionary[])#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/eclipse/osgi/internal/module/ResolverImpl/resolveBundles0(org.eclipse.osgi.internal.module.ResolverBundle[],java.util.Dictionary[])#java/lang/StringBuilder/toString()
org/eclipse/osgi/internal/module/ResolverImpl/resolveBundles0(org.eclipse.osgi.internal.module.ResolverBundle[],java.util.Dictionary[])#java/util/HashSet/size()
org/eclipse/osgi/internal/module/ResolverImpl/resolveBundles0(org.eclipse.osgi.internal.module.ResolverBundle[],java.util.Dictionary[])#java/util/List/clear()
org/eclipse/osgi/internal/module/ResolverImpl/resolveBundles0(org.eclipse.osgi.internal.module.ResolverBundle[],java.util.Dictionary[])#java/lang/StringBuilder/append(java.lang.Object)
org/eclipse/osgi/internal/module/ResolverImpl/resolveBundles0(org.eclipse.osgi.internal.module.ResolverBundle[],java.util.Dictionary[])#java/util/Arrays/sort(java.lang.Object[])
org/eclipse/osgi/internal/module/ResolverImpl/selectSingletons(org.eclipse.osgi.internal.module.ResolverBundle[])#java/util/ArrayList/ArrayList(int)
org/eclipse/osgi/internal/module/ResolverImpl/selectSingletons(org.eclipse.osgi.internal.module.ResolverBundle[])#java/util/Iterator/hasNext()
org/eclipse/osgi/internal/module/ResolverImpl/selectSingletons(org.eclipse.osgi.internal.module.ResolverBundle[])#java/util/Map$Entry/getKey()
org/eclipse/osgi/internal/module/ResolverImpl/selectSingletons(org.eclipse.osgi.internal.module.ResolverBundle[])#java/util/Map/get(java.lang.Object)
org/eclipse/osgi/internal/module/ResolverImpl/selectSingletons(org.eclipse.osgi.internal.module.ResolverBundle[])#java/util/List/size()
org/eclipse/osgi/internal/module/ResolverImpl/selectSingletons(org.eclipse.osgi.internal.module.ResolverBundle[])#org/eclipse/osgi/service/resolver/BundleDescription/isSingleton()
org/eclipse/osgi/internal/module/ResolverImpl/selectSingletons(org.eclipse.osgi.internal.module.ResolverBundle[])#java/util/Iterator/next()
org/eclipse/osgi/internal/module/ResolverImpl/selectSingletons(org.eclipse.osgi.internal.module.ResolverBundle[])#org/eclipse/osgi/service/resolver/BundleDescription/toString()
org/eclipse/osgi/internal/module/ResolverImpl/selectSingletons(org.eclipse.osgi.internal.module.ResolverBundle[])#java/util/Collection/contains(java.lang.Object)
org/eclipse/osgi/internal/module/ResolverImpl/selectSingletons(org.eclipse.osgi.internal.module.ResolverBundle[])#java/util/Map$Entry/getValue()
org/eclipse/osgi/internal/module/ResolverImpl/selectSingletons(org.eclipse.osgi.internal.module.ResolverBundle[])#java/util/Map/put(java.lang.Object,java.lang.Object)
org/eclipse/osgi/internal/module/ResolverImpl/selectSingletons(org.eclipse.osgi.internal.module.ResolverBundle[])#java/util/ArrayList/ArrayList()
org/eclipse/osgi/internal/module/ResolverImpl/selectSingletons(org.eclipse.osgi.internal.module.ResolverBundle[])#org/eclipse/osgi/service/resolver/BundleDescription/isResolved()
org/eclipse/osgi/internal/module/ResolverImpl/selectSingletons(org.eclipse.osgi.internal.module.ResolverBundle[])#org/eclipse/osgi/internal/module/VersionHashMap/get(java.lang.Object)
org/eclipse/osgi/internal/module/ResolverImpl/selectSingletons(org.eclipse.osgi.internal.module.ResolverBundle[])#java/util/HashMap/HashMap(int)
org/eclipse/osgi/internal/module/ResolverImpl/selectSingletons(org.eclipse.osgi.internal.module.ResolverBundle[])#org/eclipse/osgi/service/resolver/State/addResolverError(org.eclipse.osgi.service.resolver.BundleDescription,int,java.lang.String,org.eclipse.osgi.service.resolver.VersionConstraint)
org/eclipse/osgi/internal/module/ResolverImpl/selectSingletons(org.eclipse.osgi.internal.module.ResolverBundle[])#java/util/Set/iterator()
org/eclipse/osgi/internal/module/ResolverImpl/selectSingletons(org.eclipse.osgi.internal.module.ResolverBundle[])#java/util/Collection/add(java.lang.Object)
org/eclipse/osgi/internal/module/ResolverImpl/selectSingletons(org.eclipse.osgi.internal.module.ResolverBundle[])#java/util/List/iterator()
org/eclipse/osgi/internal/module/ResolverImpl/selectSingletons(org.eclipse.osgi.internal.module.ResolverBundle[])#java/util/Collection/iterator()
org/eclipse/osgi/internal/module/ResolverImpl/selectSingletons(org.eclipse.osgi.internal.module.ResolverBundle[])#java/util/Map/entrySet()
org/eclipse/osgi/internal/module/ResolverImpl/selectSingletons(org.eclipse.osgi.internal.module.ResolverBundle[])#org/eclipse/osgi/internal/module/ResolverBundle/getName()
org/eclipse/osgi/internal/module/ResolverImpl/resolveImport(org.eclipse.osgi.internal.module.ResolverImport,java.util.List)#org/eclipse/osgi/internal/module/ResolverImport/isSatisfiedBy(org.eclipse.osgi.internal.module.VersionSupplier)
org/eclipse/osgi/internal/module/ResolverImpl/resolveImport(org.eclipse.osgi.internal.module.ResolverImport,java.util.List)#java/lang/StringBuilder/append(java.lang.String)
org/eclipse/osgi/internal/module/ResolverImpl/resolveImport(org.eclipse.osgi.internal.module.ResolverImport,java.util.List)#org/eclipse/osgi/internal/module/VersionHashMap/get(java.lang.Object)
org/eclipse/osgi/internal/module/ResolverImpl/resolveImport(org.eclipse.osgi.internal.module.ResolverImport,java.util.List)#java/util/Iterator/next()
org/eclipse/osgi/internal/module/ResolverImpl/resolveImport(org.eclipse.osgi.internal.module.ResolverImport,java.util.List)#org/eclipse/osgi/service/resolver/State/getTimeStamp()
org/eclipse/osgi/internal/module/ResolverImpl/resolveImport(org.eclipse.osgi.internal.module.ResolverImport,java.util.List)#java/lang/StringBuilder/append(java.lang.Object)
org/eclipse/osgi/internal/module/ResolverImpl/resolveImport(org.eclipse.osgi.internal.module.ResolverImport,java.util.List)#java/util/List/iterator()
org/eclipse/osgi/internal/module/ResolverImpl/resolveImport(org.eclipse.osgi.internal.module.ResolverImport,java.util.List)#java/lang/StringBuilder/toString()
org/eclipse/osgi/internal/module/ResolverImpl/resolveImport(org.eclipse.osgi.internal.module.ResolverImport,java.util.List)#org/eclipse/osgi/internal/module/ResolverImport/addPossibleSupplier(org.eclipse.osgi.internal.module.VersionSupplier)
org/eclipse/osgi/internal/module/ResolverImpl/resolveImport(org.eclipse.osgi.internal.module.ResolverImport,java.util.List)#java/util/Iterator/remove()
org/eclipse/osgi/internal/module/ResolverImpl/resolveImport(org.eclipse.osgi.internal.module.ResolverImport,java.util.List)#java/util/ArrayList/ArrayList(int)
org/eclipse/osgi/internal/module/ResolverImpl/resolveImport(org.eclipse.osgi.internal.module.ResolverImport,java.util.List)#org/osgi/framework/hooks/resolver/ResolverHook/filterMatches(org.osgi.framework.wiring.BundleRequirement,java.util.Collection)
org/eclipse/osgi/internal/module/ResolverImpl/resolveImport(org.eclipse.osgi.internal.module.ResolverImport,java.util.List)#org/eclipse/osgi/internal/module/ResolverImport/getRequirement()
org/eclipse/osgi/internal/module/ResolverImpl/resolveImport(org.eclipse.osgi.internal.module.ResolverImport,java.util.List)#java/util/ArrayList/ArrayList(java.util.Collection)
org/eclipse/osgi/internal/module/ResolverImpl/resolveImport(org.eclipse.osgi.internal.module.ResolverImport,java.util.List)#java/util/Iterator/hasNext()
org/eclipse/osgi/internal/module/ResolverImpl/resolveImport(org.eclipse.osgi.internal.module.ResolverImport,java.util.List)#java/util/List/size()
org/eclipse/osgi/internal/module/ResolverImpl/resolveImport(org.eclipse.osgi.internal.module.ResolverImport,java.util.List)#org/eclipse/osgi/internal/module/ResolverExport/setSubstitute(org.eclipse.osgi.internal.module.VersionSupplier)
org/eclipse/osgi/internal/module/ResolverImpl/resolveImport(org.eclipse.osgi.internal.module.ResolverImport,java.util.List)#org/eclipse/osgi/internal/module/ResolverExport/getName()
org/eclipse/osgi/internal/module/ResolverImpl/resolveImport(org.eclipse.osgi.internal.module.ResolverImport,java.util.List)#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/eclipse/osgi/internal/module/ResolverImpl/resolveImport(org.eclipse.osgi.internal.module.ResolverImport,java.util.List)#java/util/List/add(java.lang.Object)
org/eclipse/osgi/internal/module/ResolverImpl/resolveImport(org.eclipse.osgi.internal.module.ResolverImport,java.util.List)#org/eclipse/osgi/internal/module/ResolverImport/getBundle()
org/eclipse/osgi/internal/module/ResolverImpl/resolveImport(org.eclipse.osgi.internal.module.ResolverImport,java.util.List)#java/util/List/contains(java.lang.Object)
org/eclipse/osgi/internal/module/ResolverImpl/resolveImport(org.eclipse.osgi.internal.module.ResolverImport,java.util.List)#org/eclipse/osgi/internal/module/ResolverImport/removePossibleSupplier(org.eclipse.osgi.internal.module.VersionSupplier)
org/eclipse/osgi/internal/module/ResolverImpl/resolveImport(org.eclipse.osgi.internal.module.ResolverImport,java.util.List)#org/eclipse/osgi/internal/module/ResolverImport/getSelectedSupplier()
org/eclipse/osgi/internal/module/ResolverImpl/resolveImport(org.eclipse.osgi.internal.module.ResolverImport,java.util.List)#org/eclipse/osgi/internal/module/ResolverExport/getCapability()
org/eclipse/osgi/internal/module/ResolverImpl/resolveImport(org.eclipse.osgi.internal.module.ResolverImport,java.util.List)#org/eclipse/osgi/framework/util/ArrayMap/ArrayMap(java.util.List,java.util.List)
org/eclipse/osgi/internal/module/ResolverImpl/resolveImport(org.eclipse.osgi.internal.module.ResolverImport,java.util.List)#org/eclipse/osgi/internal/module/ResolverExport/getSubstitute()
org/eclipse/osgi/internal/module/ResolverImpl/addHostsFromFragmentConstraints(org.eclipse.osgi.internal.module.ResolverBundle,java.util.Set)#org/eclipse/osgi/internal/module/BundleConstraint/getVersionConstraint()
org/eclipse/osgi/internal/module/ResolverImpl/addHostsFromFragmentConstraints(org.eclipse.osgi.internal.module.ResolverBundle,java.util.Set)#org/eclipse/osgi/service/resolver/BundleDescription/getRequiredBundles()
org/eclipse/osgi/internal/module/ResolverImpl/addHostsFromFragmentConstraints(org.eclipse.osgi.internal.module.ResolverBundle,java.util.Set)#java/util/Iterator/hasNext()
org/eclipse/osgi/internal/module/ResolverImpl/addHostsFromFragmentConstraints(org.eclipse.osgi.internal.module.ResolverBundle,java.util.Set)#org/eclipse/osgi/service/resolver/VersionConstraint/getName()
org/eclipse/osgi/internal/module/ResolverImpl/addHostsFromFragmentConstraints(org.eclipse.osgi.internal.module.ResolverBundle,java.util.Set)#org/eclipse/osgi/internal/module/VersionHashMap/get(java.lang.Object)
org/eclipse/osgi/internal/module/ResolverImpl/addHostsFromFragmentConstraints(org.eclipse.osgi.internal.module.ResolverBundle,java.util.Set)#java/util/Iterator/next()
org/eclipse/osgi/internal/module/ResolverImpl/addHostsFromFragmentConstraints(org.eclipse.osgi.internal.module.ResolverBundle,java.util.Set)#java/util/List/iterator()
org/eclipse/osgi/internal/module/ResolverImpl/addHostsFromFragmentConstraints(org.eclipse.osgi.internal.module.ResolverBundle,java.util.Set)#java/util/Set/add(java.lang.Object)
org/eclipse/osgi/internal/module/ResolverImpl/addHostsFromFragmentConstraints(org.eclipse.osgi.internal.module.ResolverBundle,java.util.Set)#org/eclipse/osgi/service/resolver/BundleDescription/getImportPackages()
org/eclipse/osgi/internal/module/ResolverImpl/addHostsFromFragmentConstraints(org.eclipse.osgi.internal.module.ResolverBundle,java.util.Set)#org/eclipse/osgi/internal/module/BundleConstraint/isSatisfiedBy(org.eclipse.osgi.internal.module.VersionSupplier)
org/eclipse/osgi/internal/module/ResolverImpl/isResolvable(org.eclipse.osgi.internal.module.ResolverBundle,java.util.Dictionary[],java.util.Collection)#org/eclipse/osgi/service/resolver/NativeCodeSpecification/getPossibleSuppliers()
org/eclipse/osgi/internal/module/ResolverImpl/isResolvable(org.eclipse.osgi.internal.module.ResolverBundle,java.util.Dictionary[],java.util.Collection)#org/eclipse/osgi/service/resolver/NativeCodeDescription/hasInvalidNativePaths()
org/eclipse/osgi/internal/module/ResolverImpl/isResolvable(org.eclipse.osgi.internal.module.ResolverBundle,java.util.Dictionary[],java.util.Collection)#java/lang/StringBuffer/StringBuffer(int)
org/eclipse/osgi/internal/module/ResolverImpl/isResolvable(org.eclipse.osgi.internal.module.ResolverBundle,java.util.Dictionary[],java.util.Collection)#java/lang/String/length()
org/eclipse/osgi/internal/module/ResolverImpl/isResolvable(org.eclipse.osgi.internal.module.ResolverBundle,java.util.Dictionary[],java.util.Collection)#org/eclipse/osgi/service/resolver/NativeCodeSpecification/isOptional()
org/eclipse/osgi/internal/module/ResolverImpl/isResolvable(org.eclipse.osgi.internal.module.ResolverBundle,java.util.Dictionary[],java.util.Collection)#org/eclipse/osgi/service/resolver/BundleDescription/getPlatformFilter()
org/eclipse/osgi/internal/module/ResolverImpl/isResolvable(org.eclipse.osgi.internal.module.ResolverBundle,java.util.Dictionary[],java.util.Collection)#org/eclipse/osgi/service/resolver/BundleDescription/getNativeCodeSpecification()
org/eclipse/osgi/internal/module/ResolverImpl/isResolvable(org.eclipse.osgi.internal.module.ResolverBundle,java.util.Dictionary[],java.util.Collection)#org/osgi/framework/Filter/matchCase(java.util.Dictionary)
org/eclipse/osgi/internal/module/ResolverImpl/isResolvable(org.eclipse.osgi.internal.module.ResolverBundle,java.util.Dictionary[],java.util.Collection)#org/eclipse/osgi/service/resolver/State/resolveConstraint(org.eclipse.osgi.service.resolver.VersionConstraint,org.eclipse.osgi.service.resolver.BaseDescription)
org/eclipse/osgi/internal/module/ResolverImpl/isResolvable(org.eclipse.osgi.internal.module.ResolverBundle,java.util.Dictionary[],java.util.Collection)#org/eclipse/osgi/service/resolver/State/addResolverError(org.eclipse.osgi.service.resolver.BundleDescription,int,java.lang.String,org.eclipse.osgi.service.resolver.VersionConstraint)
org/eclipse/osgi/internal/module/ResolverImpl/isResolvable(org.eclipse.osgi.internal.module.ResolverBundle,java.util.Dictionary[],java.util.Collection)#org/eclipse/osgi/service/resolver/NativeCodeDescription/compareTo(org.eclipse.osgi.service.resolver.NativeCodeDescription)
org/eclipse/osgi/internal/module/ResolverImpl/isResolvable(org.eclipse.osgi.internal.module.ResolverBundle,java.util.Dictionary[],java.util.Collection)#java/lang/StringBuffer/append(java.lang.String)
org/eclipse/osgi/internal/module/ResolverImpl/isResolvable(org.eclipse.osgi.internal.module.ResolverBundle,java.util.Dictionary[],java.util.Collection)#org/eclipse/osgi/internal/framework/FilterImpl/newInstance(java.lang.String)
org/eclipse/osgi/internal/module/ResolverImpl/isResolvable(org.eclipse.osgi.internal.module.ResolverBundle,java.util.Dictionary[],java.util.Collection)#org/eclipse/osgi/service/resolver/State/getDisabledInfos(org.eclipse.osgi.service.resolver.BundleDescription)
org/eclipse/osgi/internal/module/ResolverImpl/isResolvable(org.eclipse.osgi.internal.module.ResolverBundle,java.util.Dictionary[],java.util.Collection)#org/eclipse/osgi/service/resolver/DisabledInfo/getPolicyName()
org/eclipse/osgi/internal/module/ResolverImpl/isResolvable(org.eclipse.osgi.internal.module.ResolverBundle,java.util.Dictionary[],java.util.Collection)#org/eclipse/osgi/service/resolver/NativeCodeSpecification/isSatisfiedBy(org.eclipse.osgi.service.resolver.BaseDescription)
org/eclipse/osgi/internal/module/ResolverImpl/isResolvable(org.eclipse.osgi.internal.module.ResolverBundle,java.util.Dictionary[],java.util.Collection)#java/lang/Object/toString()
org/eclipse/osgi/internal/module/ResolverImpl/isResolvable(org.eclipse.osgi.internal.module.ResolverBundle,java.util.Dictionary[],java.util.Collection)#java/lang/StringBuffer/append(char)
org/eclipse/osgi/internal/module/ResolverImpl/isResolvable(org.eclipse.osgi.internal.module.ResolverBundle,java.util.Dictionary[],java.util.Collection)#org/eclipse/osgi/service/resolver/BundleDescription/getExecutionEnvironments()
org/eclipse/osgi/internal/module/ResolverImpl/isResolvable(org.eclipse.osgi.internal.module.ResolverBundle,java.util.Dictionary[],java.util.Collection)#java/lang/String/equals(java.lang.Object)
org/eclipse/osgi/internal/module/ResolverImpl/isResolvable(org.eclipse.osgi.internal.module.ResolverBundle,java.util.Dictionary[],java.util.Collection)#java/lang/StringBuffer/toString()
org/eclipse/osgi/internal/module/ResolverImpl/isResolvable(org.eclipse.osgi.internal.module.ResolverBundle,java.util.Dictionary[],java.util.Collection)#java/util/Collection/contains(java.lang.Object)
org/eclipse/osgi/internal/module/ResolverImpl/isResolvable(org.eclipse.osgi.internal.module.ResolverBundle,java.util.Dictionary[],java.util.Collection)#org/eclipse/osgi/service/resolver/DisabledInfo/getMessage()
org/eclipse/osgi/internal/module/ResolverImpl/isResolvable(org.eclipse.osgi.internal.module.ResolverBundle,java.util.Dictionary[],java.util.Collection)#java/lang/StringBuffer/StringBuffer()
org/eclipse/osgi/internal/module/ResolverImpl/findBestCombination(org.eclipse.osgi.internal.module.ResolverBundle[],java.util.Dictionary[])#java/util/ArrayList/ArrayList()
org/eclipse/osgi/internal/module/ResolverImpl/findBestCombination(org.eclipse.osgi.internal.module.ResolverBundle[],java.util.Dictionary[])#java/util/Collection/isEmpty()
org/eclipse/osgi/internal/module/ResolverImpl/findBestCombination(org.eclipse.osgi.internal.module.ResolverBundle[],java.util.Dictionary[])#java/lang/String/equals(java.lang.Object)
org/eclipse/osgi/internal/module/ResolverImpl/findBestCombination(org.eclipse.osgi.internal.module.ResolverBundle[],java.util.Dictionary[])#org/eclipse/osgi/internal/module/GenericConstraint/removePossibleSupplier(org.eclipse.osgi.internal.module.VersionSupplier)
org/eclipse/osgi/internal/module/ResolverImpl/findBestCombination(org.eclipse.osgi.internal.module.ResolverBundle[],java.util.Dictionary[])#org/eclipse/osgi/framework/util/SecureAction/getProperty(java.lang.String)
org/eclipse/osgi/internal/module/ResolverImpl/findBestCombination(org.eclipse.osgi.internal.module.ResolverBundle[],java.util.Dictionary[])#java/util/Dictionary/get(java.lang.Object)
org/eclipse/osgi/internal/module/ResolverImpl/findBestCombination(org.eclipse.osgi.internal.module.ResolverBundle[],java.util.Dictionary[])#java/util/Iterator/hasNext()
org/eclipse/osgi/internal/module/ResolverImpl/findBestCombination(org.eclipse.osgi.internal.module.ResolverBundle[],java.util.Dictionary[])#java/io/PrintStream/print(java.lang.String)
org/eclipse/osgi/internal/module/ResolverImpl/findBestCombination(org.eclipse.osgi.internal.module.ResolverBundle[],java.util.Dictionary[])#java/util/Iterator/next()
org/eclipse/osgi/internal/module/ResolverImpl/findBestCombination(org.eclipse.osgi.internal.module.ResolverBundle[],java.util.Dictionary[])#org/eclipse/osgi/internal/module/GenericConstraint/getBundle()
org/eclipse/osgi/internal/module/ResolverImpl/findBestCombination(org.eclipse.osgi.internal.module.ResolverBundle[],java.util.Dictionary[])#java/util/Collection/iterator()
org/eclipse/osgi/internal/module/ResolverImpl/findBestCombination(org.eclipse.osgi.internal.module.ResolverBundle[],java.util.Dictionary[])#java/util/HashSet/HashSet()
org/eclipse/osgi/internal/module/ResolverImpl/resolveGenericReq(org.eclipse.osgi.internal.module.GenericConstraint,java.util.List)#java/util/ArrayList/ArrayList(java.util.Collection)
org/eclipse/osgi/internal/module/ResolverImpl/resolveGenericReq(org.eclipse.osgi.internal.module.GenericConstraint,java.util.List)#org/eclipse/osgi/internal/module/GenericConstraint/getRequirement()
org/eclipse/osgi/internal/module/ResolverImpl/resolveGenericReq(org.eclipse.osgi.internal.module.GenericConstraint,java.util.List)#java/util/Map/get(java.lang.Object)
org/eclipse/osgi/internal/module/ResolverImpl/resolveGenericReq(org.eclipse.osgi.internal.module.GenericConstraint,java.util.List)#org/eclipse/osgi/internal/module/VersionHashMap/get(java.lang.Object)
org/eclipse/osgi/internal/module/ResolverImpl/resolveGenericReq(org.eclipse.osgi.internal.module.GenericConstraint,java.util.List)#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/eclipse/osgi/internal/module/ResolverImpl/resolveGenericReq(org.eclipse.osgi.internal.module.GenericConstraint,java.util.List)#java/lang/String/equals(java.lang.Object)
org/eclipse/osgi/internal/module/ResolverImpl/resolveGenericReq(org.eclipse.osgi.internal.module.GenericConstraint,java.util.List)#java/util/List/add(java.lang.Object)
org/eclipse/osgi/internal/module/ResolverImpl/resolveGenericReq(org.eclipse.osgi.internal.module.GenericConstraint,java.util.List)#org/eclipse/osgi/internal/module/GenericCapability/getBaseDescription()
org/eclipse/osgi/internal/module/ResolverImpl/resolveGenericReq(org.eclipse.osgi.internal.module.GenericConstraint,java.util.List)#org/eclipse/osgi/framework/util/ArrayMap/ArrayMap(java.util.List,java.util.List)
org/eclipse/osgi/internal/module/ResolverImpl/resolveGenericReq(org.eclipse.osgi.internal.module.GenericConstraint,java.util.List)#org/eclipse/osgi/internal/module/GenericConstraint/getVersionConstraint()
org/eclipse/osgi/internal/module/ResolverImpl/resolveGenericReq(org.eclipse.osgi.internal.module.GenericConstraint,java.util.List)#java/lang/String/indexOf(int)
org/eclipse/osgi/internal/module/ResolverImpl/resolveGenericReq(org.eclipse.osgi.internal.module.GenericConstraint,java.util.List)#java/lang/StringBuilder/toString()
org/eclipse/osgi/internal/module/ResolverImpl/resolveGenericReq(org.eclipse.osgi.internal.module.GenericConstraint,java.util.List)#org/eclipse/osgi/internal/module/GenericCapability/getCapability()
org/eclipse/osgi/internal/module/ResolverImpl/resolveGenericReq(org.eclipse.osgi.internal.module.GenericConstraint,java.util.List)#java/util/Iterator/remove()
org/eclipse/osgi/internal/module/ResolverImpl/resolveGenericReq(org.eclipse.osgi.internal.module.GenericConstraint,java.util.List)#java/util/ArrayList/ArrayList(int)
org/eclipse/osgi/internal/module/ResolverImpl/resolveGenericReq(org.eclipse.osgi.internal.module.GenericConstraint,java.util.List)#org/eclipse/osgi/internal/module/GenericConstraint/removePossibleSupplier(org.eclipse.osgi.internal.module.VersionSupplier)
org/eclipse/osgi/internal/module/ResolverImpl/resolveGenericReq(org.eclipse.osgi.internal.module.GenericConstraint,java.util.List)#org/eclipse/osgi/internal/module/BundleConstraint/getPossibleSuppliers()
org/eclipse/osgi/internal/module/ResolverImpl/resolveGenericReq(org.eclipse.osgi.internal.module.GenericConstraint,java.util.List)#org/osgi/framework/hooks/resolver/ResolverHook/filterMatches(org.osgi.framework.wiring.BundleRequirement,java.util.Collection)
org/eclipse/osgi/internal/module/ResolverImpl/resolveGenericReq(org.eclipse.osgi.internal.module.GenericConstraint,java.util.List)#java/util/Iterator/hasNext()
org/eclipse/osgi/internal/module/ResolverImpl/resolveGenericReq(org.eclipse.osgi.internal.module.GenericConstraint,java.util.List)#java/lang/StringBuilder/append(java.lang.String)
org/eclipse/osgi/internal/module/ResolverImpl/resolveGenericReq(org.eclipse.osgi.internal.module.GenericConstraint,java.util.List)#java/util/List/size()
org/eclipse/osgi/internal/module/ResolverImpl/resolveGenericReq(org.eclipse.osgi.internal.module.GenericConstraint,java.util.List)#java/util/Iterator/next()
org/eclipse/osgi/internal/module/ResolverImpl/resolveGenericReq(org.eclipse.osgi.internal.module.GenericConstraint,java.util.List)#org/eclipse/osgi/internal/module/GenericConstraint/getBundle()
org/eclipse/osgi/internal/module/ResolverImpl/resolveGenericReq(org.eclipse.osgi.internal.module.GenericConstraint,java.util.List)#org/eclipse/osgi/service/resolver/State/getTimeStamp()
org/eclipse/osgi/internal/module/ResolverImpl/resolveGenericReq(org.eclipse.osgi.internal.module.GenericConstraint,java.util.List)#org/eclipse/osgi/internal/module/GenericConstraint/getSelectedSupplier()
org/eclipse/osgi/internal/module/ResolverImpl/resolveGenericReq(org.eclipse.osgi.internal.module.GenericConstraint,java.util.List)#java/util/List/contains(java.lang.Object)
org/eclipse/osgi/internal/module/ResolverImpl/resolveGenericReq(org.eclipse.osgi.internal.module.GenericConstraint,java.util.List)#org/eclipse/osgi/internal/module/VersionHashMap/getAllValues()
org/eclipse/osgi/internal/module/ResolverImpl/resolveGenericReq(org.eclipse.osgi.internal.module.GenericConstraint,java.util.List)#org/eclipse/osgi/internal/module/GenericConstraint/getName()
org/eclipse/osgi/internal/module/ResolverImpl/resolveGenericReq(org.eclipse.osgi.internal.module.GenericConstraint,java.util.List)#org/eclipse/osgi/internal/module/GenericConstraint/addPossibleSupplier(org.eclipse.osgi.internal.module.VersionSupplier)
org/eclipse/osgi/internal/module/ResolverImpl/resolveGenericReq(org.eclipse.osgi.internal.module.GenericConstraint,java.util.List)#java/lang/StringBuilder/append(java.lang.Object)
org/eclipse/osgi/internal/module/ResolverImpl/resolveGenericReq(org.eclipse.osgi.internal.module.GenericConstraint,java.util.List)#java/util/List/iterator()
org/eclipse/osgi/internal/module/ResolverImpl/resolveGenericReq(org.eclipse.osgi.internal.module.GenericConstraint,java.util.List)#org/eclipse/osgi/internal/module/GenericConstraint/isSatisfiedBy(org.eclipse.osgi.internal.module.VersionSupplier)
org/eclipse/osgi/internal/module/ResolverImpl/getExportsWiredTo(org.eclipse.osgi.internal.module.ResolverBundle,java.util.Map)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/eclipse/osgi/internal/module/ResolverImpl/getExportsWiredTo(org.eclipse.osgi.internal.module.ResolverBundle,java.util.Map)#org/eclipse/osgi/service/resolver/ExportPackageDescription/getExporter()
org/eclipse/osgi/internal/module/ResolverImpl/getExportsWiredTo(org.eclipse.osgi.internal.module.ResolverBundle,java.util.Map)#java/util/List/isEmpty()
org/eclipse/osgi/internal/module/ResolverImpl/getExportsWiredTo(org.eclipse.osgi.internal.module.ResolverBundle,java.util.Map)#java/util/List/size()
org/eclipse/osgi/internal/module/ResolverImpl/getExportsWiredTo(org.eclipse.osgi.internal.module.ResolverBundle,java.util.Map)#java/util/List/toArray(java.lang.Object[])
org/eclipse/osgi/internal/module/ResolverImpl/getExportsWiredTo(org.eclipse.osgi.internal.module.ResolverBundle,java.util.Map)#org/eclipse/osgi/internal/module/ResolverImport/getVersionConstraint()
org/eclipse/osgi/internal/module/ResolverImpl/getExportsWiredTo(org.eclipse.osgi.internal.module.ResolverBundle,java.util.Map)#java/util/List/add(java.lang.Object)
org/eclipse/osgi/internal/module/ResolverImpl/getExportsWiredTo(org.eclipse.osgi.internal.module.ResolverBundle,java.util.Map)#org/eclipse/osgi/internal/module/ResolverImport/getSelectedSupplier()
org/eclipse/osgi/internal/module/ResolverImpl/getExportsWiredTo(org.eclipse.osgi.internal.module.ResolverBundle,java.util.Map)#java/util/ArrayList/ArrayList(int)
org/eclipse/osgi/internal/module/ResolverImpl/checkCycle(java.util.List)#java/util/ArrayList/ArrayList(int)
org/eclipse/osgi/internal/module/ResolverImpl/checkCycle(java.util.List)#java/util/Iterator/hasNext()
org/eclipse/osgi/internal/module/ResolverImpl/checkCycle(java.util.List)#java/lang/StringBuilder/append(java.lang.String)
org/eclipse/osgi/internal/module/ResolverImpl/checkCycle(java.util.List)#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/eclipse/osgi/internal/module/ResolverImpl/checkCycle(java.util.List)#java/util/Iterator/next()
org/eclipse/osgi/internal/module/ResolverImpl/checkCycle(java.util.List)#org/eclipse/osgi/internal/module/ResolverImport/selectNextSupplier()
org/eclipse/osgi/internal/module/ResolverImpl/checkCycle(java.util.List)#org/eclipse/osgi/service/resolver/State/addResolverError(org.eclipse.osgi.service.resolver.BundleDescription,int,java.lang.String,org.eclipse.osgi.service.resolver.VersionConstraint)
org/eclipse/osgi/internal/module/ResolverImpl/checkCycle(java.util.List)#org/eclipse/osgi/internal/module/ResolverImport/getVersionConstraint()
org/eclipse/osgi/internal/module/ResolverImpl/checkCycle(java.util.List)#java/util/List/get(int)
org/eclipse/osgi/internal/module/ResolverImpl/checkCycle(java.util.List)#java/lang/StringBuilder/append(java.lang.Object)
org/eclipse/osgi/internal/module/ResolverImpl/checkCycle(java.util.List)#org/eclipse/osgi/internal/module/ResolverExport/getSubstitute()
org/eclipse/osgi/internal/module/ResolverImpl/checkCycle(java.util.List)#java/lang/StringBuilder/toString()
org/eclipse/osgi/internal/module/ResolverImpl/checkCycle(java.util.List)#java/util/Iterator/remove()
org/eclipse/osgi/internal/module/ResolverImpl/checkCycle(java.util.List)#org/eclipse/osgi/service/resolver/VersionConstraint/getBundle()
org/eclipse/osgi/internal/module/ResolverImpl/checkCycle(java.util.List)#java/lang/Object/toString()
org/eclipse/osgi/internal/module/ResolverImpl/checkCycle(java.util.List)#java/util/List/size()
org/eclipse/osgi/internal/module/ResolverImpl/checkCycle(java.util.List)#java/util/List/iterator()
org/eclipse/osgi/internal/module/ResolverImpl/checkCycle(java.util.List)#org/eclipse/osgi/internal/module/ResolverImport/getSelectedSupplier()
org/eclipse/osgi/internal/module/ResolverImpl/getCollisionMap(java.util.List)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/eclipse/osgi/internal/module/ResolverImpl/getCollisionMap(java.util.List)#java/util/ArrayList/ArrayList(int)
org/eclipse/osgi/internal/module/ResolverImpl/getCollisionMap(java.util.List)#java/util/List/size()
org/eclipse/osgi/internal/module/ResolverImpl/getCollisionMap(java.util.List)#org/eclipse/osgi/service/resolver/BundleDescription/isSingleton()
org/eclipse/osgi/internal/module/ResolverImpl/getCollisionMap(java.util.List)#org/osgi/framework/hooks/resolver/ResolverHook/filterSingletonCollisions(org.osgi.framework.wiring.BundleCapability,java.util.Collection)
org/eclipse/osgi/internal/module/ResolverImpl/getCollisionMap(java.util.List)#java/util/List/iterator()
org/eclipse/osgi/internal/module/ResolverImpl/getCollisionMap(java.util.List)#org/eclipse/osgi/framework/util/ArrayMap/ArrayMap(java.util.List,java.util.List)
org/eclipse/osgi/internal/module/ResolverImpl/getCollisionMap(java.util.List)#java/util/Iterator/hasNext()
org/eclipse/osgi/internal/module/ResolverImpl/getCollisionMap(java.util.List)#java/util/Iterator/next()
org/eclipse/osgi/internal/module/ResolverImpl/getCollisionMap(java.util.List)#java/util/HashMap/HashMap()
org/eclipse/osgi/internal/module/ResolverImpl/getCollisionMap(java.util.List)#java/util/List/add(java.lang.Object)
org/eclipse/osgi/internal/module/ResolverImpl/findBestCombination(org.eclipse.osgi.internal.module.ResolverBundle[],org.eclipse.osgi.internal.module.ResolverConstraint[][],int[],java.util.List)#java/lang/StringBuilder/append(int)
org/eclipse/osgi/internal/module/ResolverImpl/findBestCombination(org.eclipse.osgi.internal.module.ResolverBundle[],org.eclipse.osgi.internal.module.ResolverConstraint[][],int[],java.util.List)#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/eclipse/osgi/internal/module/ResolverImpl/findBestCombination(org.eclipse.osgi.internal.module.ResolverBundle[],org.eclipse.osgi.internal.module.ResolverConstraint[][],int[],java.util.List)#java/lang/StringBuilder/append(long)
org/eclipse/osgi/internal/module/ResolverImpl/findBestCombination(org.eclipse.osgi.internal.module.ResolverBundle[],org.eclipse.osgi.internal.module.ResolverConstraint[][],int[],java.util.List)#java/lang/System/currentTimeMillis()
org/eclipse/osgi/internal/module/ResolverImpl/findBestCombination(org.eclipse.osgi.internal.module.ResolverBundle[],org.eclipse.osgi.internal.module.ResolverConstraint[][],int[],java.util.List)#java/util/Arrays/toString(java.lang.Object[])
org/eclipse/osgi/internal/module/ResolverImpl/findBestCombination(org.eclipse.osgi.internal.module.ResolverBundle[],org.eclipse.osgi.internal.module.ResolverConstraint[][],int[],java.util.List)#java/lang/StringBuilder/append(java.lang.String)
org/eclipse/osgi/internal/module/ResolverImpl/findBestCombination(org.eclipse.osgi.internal.module.ResolverBundle[],org.eclipse.osgi.internal.module.ResolverConstraint[][],int[],java.util.List)#java/io/PrintStream/println(java.lang.String)
org/eclipse/osgi/internal/module/ResolverImpl/findBestCombination(org.eclipse.osgi.internal.module.ResolverBundle[],org.eclipse.osgi.internal.module.ResolverConstraint[][],int[],java.util.List)#java/lang/Math/min(int,int)
org/eclipse/osgi/internal/module/ResolverImpl/findBestCombination(org.eclipse.osgi.internal.module.ResolverBundle[],org.eclipse.osgi.internal.module.ResolverConstraint[][],int[],java.util.List)#java/lang/StringBuilder/toString()
org/eclipse/osgi/internal/module/ResolverImpl/findBestCombination(org.eclipse.osgi.internal.module.ResolverBundle[],org.eclipse.osgi.internal.module.ResolverConstraint[][],int[],java.util.List)#java/lang/String/valueOf(int)
org/eclipse/osgi/internal/module/ResolverImpl/stateResolveBundle(org.eclipse.osgi.internal.module.ResolverBundle)#org/eclipse/osgi/service/resolver/GenericDescription/getSupplier()
org/eclipse/osgi/internal/module/ResolverImpl/stateResolveBundle(org.eclipse.osgi.internal.module.ResolverBundle)#org/eclipse/osgi/service/resolver/BundleDescription/getSubstitutedExports()
org/eclipse/osgi/internal/module/ResolverImpl/stateResolveBundle(org.eclipse.osgi.internal.module.ResolverBundle)#org/eclipse/osgi/internal/module/GenericConstraint/getVersionConstraint()
org/eclipse/osgi/internal/module/ResolverImpl/stateResolveBundle(org.eclipse.osgi.internal.module.ResolverBundle)#org/eclipse/osgi/service/resolver/BundleDescription/getResolvedGenericRequires()
org/eclipse/osgi/internal/module/ResolverImpl/stateResolveBundle(org.eclipse.osgi.internal.module.ResolverBundle)#org/eclipse/osgi/internal/module/BundleConstraint/getVersionConstraint()
org/eclipse/osgi/internal/module/ResolverImpl/stateResolveBundle(org.eclipse.osgi.internal.module.ResolverBundle)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/eclipse/osgi/internal/module/ResolverImpl/stateResolveBundle(org.eclipse.osgi.internal.module.ResolverBundle)#java/util/ArrayList/ArrayList()
org/eclipse/osgi/internal/module/ResolverImpl/stateResolveBundle(org.eclipse.osgi.internal.module.ResolverBundle)#java/util/ArrayList/ArrayList(int)
org/eclipse/osgi/internal/module/ResolverImpl/stateResolveBundle(org.eclipse.osgi.internal.module.ResolverBundle)#org/eclipse/osgi/internal/module/BundleConstraint/getPossibleSuppliers()
org/eclipse/osgi/internal/module/ResolverImpl/stateResolveBundle(org.eclipse.osgi.internal.module.ResolverBundle)#org/eclipse/osgi/service/resolver/BundleDescription/getSelectedGenericCapabilities()
org/eclipse/osgi/internal/module/ResolverImpl/stateResolveBundle(org.eclipse.osgi.internal.module.ResolverBundle)#org/eclipse/osgi/service/resolver/BundleDescription/getResolvedImports()
org/eclipse/osgi/internal/module/ResolverImpl/stateResolveBundle(org.eclipse.osgi.internal.module.ResolverBundle)#org/eclipse/osgi/service/resolver/BundleDescription/getResolvedRequires()
org/eclipse/osgi/internal/module/ResolverImpl/stateResolveBundle(org.eclipse.osgi.internal.module.ResolverBundle)#org/eclipse/osgi/service/resolver/BundleDescription/isResolved()
org/eclipse/osgi/internal/module/ResolverImpl/stateResolveBundle(org.eclipse.osgi.internal.module.ResolverBundle)#java/util/List/isEmpty()
org/eclipse/osgi/internal/module/ResolverImpl/stateResolveBundle(org.eclipse.osgi.internal.module.ResolverBundle)#java/util/Map/get(java.lang.Object)
org/eclipse/osgi/internal/module/ResolverImpl/stateResolveBundle(org.eclipse.osgi.internal.module.ResolverBundle)#java/util/List/size()
org/eclipse/osgi/internal/module/ResolverImpl/stateResolveBundle(org.eclipse.osgi.internal.module.ResolverBundle)#org/eclipse/osgi/internal/module/BundleConstraint/getSelectedSupplier()
org/eclipse/osgi/internal/module/ResolverImpl/stateResolveBundle(org.eclipse.osgi.internal.module.ResolverBundle)#java/util/HashMap/HashMap()
org/eclipse/osgi/internal/module/ResolverImpl/stateResolveBundle(org.eclipse.osgi.internal.module.ResolverBundle)#java/util/List/toArray(java.lang.Object[])
org/eclipse/osgi/internal/module/ResolverImpl/stateResolveBundle(org.eclipse.osgi.internal.module.ResolverBundle)#org/eclipse/osgi/service/resolver/BundleDescription/getSelectedExports()
org/eclipse/osgi/internal/module/ResolverImpl/stateResolveBundle(org.eclipse.osgi.internal.module.ResolverBundle)#java/util/List/add(java.lang.Object)
org/eclipse/osgi/internal/module/ResolverImpl/stateResolveBundle(org.eclipse.osgi.internal.module.ResolverBundle)#org/eclipse/osgi/service/resolver/State/resolveBundle(org.eclipse.osgi.service.resolver.BundleDescription,boolean,org.eclipse.osgi.service.resolver.BundleDescription[],org.eclipse.osgi.service.resolver.ExportPackageDescription[],org.eclipse.osgi.service.resolver.ExportPackageDescription[],org.eclipse.osgi.service.resolver.GenericDescription[],org.eclipse.osgi.service.resolver.BundleDescription[],org.eclipse.osgi.service.resolver.ExportPackageDescription[],org.eclipse.osgi.service.resolver.GenericDescription[],java.util.Map)
org/eclipse/osgi/internal/resolver/StateDeltaImpl/getChanges(int,boolean)#java/util/ArrayList/ArrayList()
org/eclipse/osgi/internal/resolver/StateDeltaImpl/getChanges(int,boolean)#java/util/Iterator/hasNext()
org/eclipse/osgi/internal/resolver/StateDeltaImpl/getChanges(int,boolean)#java/util/List/size()
org/eclipse/osgi/internal/resolver/StateDeltaImpl/getChanges(int,boolean)#java/util/Map/values()
org/eclipse/osgi/internal/resolver/StateDeltaImpl/getChanges(int,boolean)#java/util/Iterator/next()
org/eclipse/osgi/internal/resolver/StateDeltaImpl/getChanges(int,boolean)#java/util/List/toArray(java.lang.Object[])
org/eclipse/osgi/internal/resolver/StateDeltaImpl/getChanges(int,boolean)#java/util/List/add(java.lang.Object)
org/eclipse/osgi/internal/resolver/StateDeltaImpl/getChanges(int,boolean)#org/eclipse/osgi/service/resolver/BundleDelta/getType()
org/eclipse/osgi/internal/resolver/StateDeltaImpl/getChanges(int,boolean)#java/util/Collection/iterator()
org/eclipse/osgi/internal/resolver/StateWriter/writeBundleDescription(org.eclipse.osgi.service.resolver.BundleDescription,java.io.DataOutputStream,boolean)#org/eclipse/osgi/service/resolver/BundleDescription/getBundleId()
org/eclipse/osgi/internal/resolver/StateWriter/writeBundleDescription(org.eclipse.osgi.service.resolver.BundleDescription,java.io.DataOutputStream,boolean)#java/io/DataOutputStream/writeInt(int)
org/eclipse/osgi/internal/resolver/StateWriter/writeBundleDescription(org.eclipse.osgi.service.resolver.BundleDescription,java.io.DataOutputStream,boolean)#java/util/Iterator/hasNext()
org/eclipse/osgi/internal/resolver/StateWriter/writeBundleDescription(org.eclipse.osgi.service.resolver.BundleDescription,java.io.DataOutputStream,boolean)#org/eclipse/osgi/service/resolver/BundleDescription/isResolved()
org/eclipse/osgi/internal/resolver/StateWriter/writeBundleDescription(org.eclipse.osgi.service.resolver.BundleDescription,java.io.DataOutputStream,boolean)#java/util/List/size()
org/eclipse/osgi/internal/resolver/StateWriter/writeBundleDescription(org.eclipse.osgi.service.resolver.BundleDescription,java.io.DataOutputStream,boolean)#org/eclipse/osgi/service/resolver/BundleDescription/isSingleton()
org/eclipse/osgi/internal/resolver/StateWriter/writeBundleDescription(org.eclipse.osgi.service.resolver.BundleDescription,java.io.DataOutputStream,boolean)#java/util/Iterator/next()
org/eclipse/osgi/internal/resolver/StateWriter/writeBundleDescription(org.eclipse.osgi.service.resolver.BundleDescription,java.io.DataOutputStream,boolean)#org/eclipse/osgi/service/resolver/BundleDescription/dynamicFragments()
org/eclipse/osgi/internal/resolver/StateWriter/writeBundleDescription(org.eclipse.osgi.service.resolver.BundleDescription,java.io.DataOutputStream,boolean)#org/eclipse/osgi/service/resolver/BundleDescription/getHost()
org/eclipse/osgi/internal/resolver/StateWriter/writeBundleDescription(org.eclipse.osgi.service.resolver.BundleDescription,java.io.DataOutputStream,boolean)#org/eclipse/osgi/service/resolver/BundleDescription/attachFragments()
org/eclipse/osgi/internal/resolver/StateWriter/writeBundleDescription(org.eclipse.osgi.service.resolver.BundleDescription,java.io.DataOutputStream,boolean)#java/io/DataOutputStream/writeBoolean(boolean)
org/eclipse/osgi/internal/resolver/StateWriter/writeBundleDescription(org.eclipse.osgi.service.resolver.BundleDescription,java.io.DataOutputStream,boolean)#java/io/DataOutputStream/writeLong(long)
org/eclipse/osgi/internal/resolver/StateWriter/writeBundleDescription(org.eclipse.osgi.service.resolver.BundleDescription,java.io.DataOutputStream,boolean)#java/util/List/add(java.lang.Object)
org/eclipse/osgi/internal/resolver/StateWriter/writeBundleDescription(org.eclipse.osgi.service.resolver.BundleDescription,java.io.DataOutputStream,boolean)#org/eclipse/osgi/service/resolver/BundleDescription/hasDynamicImports()
org/eclipse/osgi/internal/resolver/StateWriter/writeBundleDescription(org.eclipse.osgi.service.resolver.BundleDescription,java.io.DataOutputStream,boolean)#java/util/List/contains(java.lang.Object)
org/eclipse/osgi/internal/resolver/StateWriter/writeBundleDescription(org.eclipse.osgi.service.resolver.BundleDescription,java.io.DataOutputStream,boolean)#java/util/List/iterator()
org/eclipse/osgi/internal/resolver/StateWriter/writeBundleDescription(org.eclipse.osgi.service.resolver.BundleDescription,java.io.DataOutputStream,boolean)#org/eclipse/osgi/service/resolver/BundleDescription/getAttributes()
org/eclipse/osgi/internal/resolver/StateWriter/writeBundleDescription(org.eclipse.osgi.service.resolver.BundleDescription,java.io.DataOutputStream,boolean)#java/io/DataOutputStream/writeByte(int)
org/eclipse/osgi/internal/resolver/StateWriter/writeList(java.io.DataOutputStream,java.util.List)#java/lang/Integer/intValue()
org/eclipse/osgi/internal/resolver/StateWriter/writeList(java.io.DataOutputStream,java.util.List)#java/io/DataOutputStream/writeInt(int)
org/eclipse/osgi/internal/resolver/StateWriter/writeList(java.io.DataOutputStream,java.util.List)#java/util/Iterator/hasNext()
org/eclipse/osgi/internal/resolver/StateWriter/writeList(java.io.DataOutputStream,java.util.List)#java/util/List/size()
org/eclipse/osgi/internal/resolver/StateWriter/writeList(java.io.DataOutputStream,java.util.List)#java/util/List/iterator()
org/eclipse/osgi/internal/resolver/StateWriter/writeList(java.io.DataOutputStream,java.util.List)#java/io/DataOutputStream/writeByte(int)
org/eclipse/osgi/internal/resolver/StateWriter/writeList(java.io.DataOutputStream,java.util.List)#java/util/Iterator/next()
org/eclipse/osgi/internal/resolver/StateWriter/writeList(java.io.DataOutputStream,java.util.List)#java/lang/Long/longValue()
org/eclipse/osgi/internal/resolver/StateWriter/writeList(java.io.DataOutputStream,java.util.List)#java/lang/Double/doubleValue()
org/eclipse/osgi/internal/resolver/StateWriter/writeList(java.io.DataOutputStream,java.util.List)#java/io/DataOutputStream/writeDouble(double)
org/eclipse/osgi/internal/resolver/StateWriter/writeList(java.io.DataOutputStream,java.util.List)#java/io/DataOutputStream/writeLong(long)
org/eclipse/osgi/internal/resolver/StateWriter/writeStateWire(org.eclipse.osgi.service.resolver.StateWire,java.io.DataOutputStream)#org/eclipse/osgi/service/resolver/StateWire/getRequirementHost()
org/eclipse/osgi/internal/resolver/StateWriter/writeStateWire(org.eclipse.osgi.service.resolver.StateWire,java.io.DataOutputStream)#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/eclipse/osgi/internal/resolver/StateWriter/writeStateWire(org.eclipse.osgi.service.resolver.StateWire,java.io.DataOutputStream)#org/eclipse/osgi/service/resolver/StateWire/getDeclaredCapability()
org/eclipse/osgi/internal/resolver/StateWriter/writeStateWire(org.eclipse.osgi.service.resolver.StateWire,java.io.DataOutputStream)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/eclipse/osgi/internal/resolver/StateWriter/writeStateWire(org.eclipse.osgi.service.resolver.StateWire,java.io.DataOutputStream)#java/io/DataOutputStream/writeByte(int)
org/eclipse/osgi/internal/resolver/StateWriter/writeStateWire(org.eclipse.osgi.service.resolver.StateWire,java.io.DataOutputStream)#org/eclipse/osgi/service/resolver/StateWire/getCapabilityHost()
org/eclipse/osgi/internal/resolver/StateWriter/writeStateWire(org.eclipse.osgi.service.resolver.StateWire,java.io.DataOutputStream)#java/lang/StringBuilder/append(java.lang.Object)
org/eclipse/osgi/internal/resolver/StateWriter/writeStateWire(org.eclipse.osgi.service.resolver.StateWire,java.io.DataOutputStream)#java/lang/Object/getClass()
org/eclipse/osgi/internal/resolver/StateWriter/writeStateWire(org.eclipse.osgi.service.resolver.StateWire,java.io.DataOutputStream)#java/lang/StringBuilder/toString()
org/eclipse/osgi/internal/resolver/StateWriter/writeStateWire(org.eclipse.osgi.service.resolver.StateWire,java.io.DataOutputStream)#org/eclipse/osgi/service/resolver/StateWire/getDeclaredRequirement()
org/eclipse/osgi/internal/resolver/StateWriter/writeGenericDescription(org.eclipse.osgi.service.resolver.GenericDescription,java.io.DataOutputStream)#java/util/Dictionary/get(java.lang.Object)
org/eclipse/osgi/internal/resolver/StateWriter/writeGenericDescription(org.eclipse.osgi.service.resolver.GenericDescription,java.io.DataOutputStream)#java/util/Dictionary/keys()
org/eclipse/osgi/internal/resolver/StateWriter/writeGenericDescription(org.eclipse.osgi.service.resolver.GenericDescription,java.io.DataOutputStream)#org/eclipse/osgi/service/resolver/GenericDescription/getSupplier()
org/eclipse/osgi/internal/resolver/StateWriter/writeGenericDescription(org.eclipse.osgi.service.resolver.GenericDescription,java.io.DataOutputStream)#java/util/HashMap/HashMap(int)
org/eclipse/osgi/internal/resolver/StateWriter/writeGenericDescription(org.eclipse.osgi.service.resolver.GenericDescription,java.io.DataOutputStream)#org/eclipse/osgi/service/resolver/GenericDescription/getType()
org/eclipse/osgi/internal/resolver/StateWriter/writeGenericDescription(org.eclipse.osgi.service.resolver.GenericDescription,java.io.DataOutputStream)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/eclipse/osgi/internal/resolver/StateWriter/writeGenericDescription(org.eclipse.osgi.service.resolver.GenericDescription,java.io.DataOutputStream)#java/util/Dictionary/size()
org/eclipse/osgi/internal/resolver/StateWriter/writeGenericDescription(org.eclipse.osgi.service.resolver.GenericDescription,java.io.DataOutputStream)#org/eclipse/osgi/service/resolver/GenericDescription/getAttributes()
org/eclipse/osgi/internal/resolver/StateWriter/writeGenericDescription(org.eclipse.osgi.service.resolver.GenericDescription,java.io.DataOutputStream)#java/util/Enumeration/hasMoreElements()
org/eclipse/osgi/internal/resolver/StateWriter/writeGenericDescription(org.eclipse.osgi.service.resolver.GenericDescription,java.io.DataOutputStream)#java/util/Enumeration/nextElement()
org/eclipse/osgi/internal/resolver/StateWriter/writeGenericDescription(org.eclipse.osgi.service.resolver.GenericDescription,java.io.DataOutputStream)#org/eclipse/osgi/service/resolver/GenericDescription/getDeclaredDirectives()
org/eclipse/osgi/internal/resolver/StateWriter/saveState(org.eclipse.osgi.internal.resolver.StateImpl,java.io.File,java.io.File)#java/io/DataOutputStream/writeInt(int)
org/eclipse/osgi/internal/resolver/StateWriter/saveState(org.eclipse.osgi.internal.resolver.StateImpl,java.io.File,java.io.File)#java/util/Dictionary/get(java.lang.Object)
org/eclipse/osgi/internal/resolver/StateWriter/saveState(org.eclipse.osgi.internal.resolver.StateImpl,java.io.File,java.io.File)#java/io/DataOutputStream/write(int)
org/eclipse/osgi/internal/resolver/StateWriter/saveState(org.eclipse.osgi.internal.resolver.StateImpl,java.io.File,java.io.File)#org/eclipse/osgi/service/resolver/BundleDescription/getHost()
org/eclipse/osgi/internal/resolver/StateWriter/saveState(org.eclipse.osgi.internal.resolver.StateImpl,java.io.File,java.io.File)#java/io/DataOutputStream/flush()
org/eclipse/osgi/internal/resolver/StateWriter/saveState(org.eclipse.osgi.internal.resolver.StateImpl,java.io.File,java.io.File)#java/io/FileOutputStream/getFD()
org/eclipse/osgi/internal/resolver/StateWriter/saveState(org.eclipse.osgi.internal.resolver.StateImpl,java.io.File,java.io.File)#java/io/FileOutputStream/FileOutputStream(java.io.File)
org/eclipse/osgi/internal/resolver/StateWriter/saveState(org.eclipse.osgi.internal.resolver.StateImpl,java.io.File,java.io.File)#java/io/FileDescriptor/sync()
org/eclipse/osgi/internal/resolver/StateWriter/saveState(org.eclipse.osgi.internal.resolver.StateImpl,java.io.File,java.io.File)#java/io/DataOutputStream/close()
org/eclipse/osgi/internal/resolver/StateWriter/saveState(org.eclipse.osgi.internal.resolver.StateImpl,java.io.File,java.io.File)#java/io/DataOutputStream/writeBoolean(boolean)
org/eclipse/osgi/internal/resolver/StateWriter/saveState(org.eclipse.osgi.internal.resolver.StateImpl,java.io.File,java.io.File)#java/io/DataOutputStream/writeLong(long)
org/eclipse/osgi/internal/resolver/StateWriter/saveState(org.eclipse.osgi.internal.resolver.StateImpl,java.io.File,java.io.File)#java/io/DataOutputStream/DataOutputStream(java.io.OutputStream)
org/eclipse/osgi/internal/resolver/StateWriter/saveState(org.eclipse.osgi.internal.resolver.StateImpl,java.io.File,java.io.File)#java/io/BufferedOutputStream/BufferedOutputStream(java.io.OutputStream)
org/eclipse/osgi/internal/resolver/StateWriter/saveState(org.eclipse.osgi.internal.resolver.StateImpl,java.io.File,java.io.File)#org/eclipse/osgi/service/resolver/StateHelper/sortBundles(org.eclipse.osgi.service.resolver.BundleDescription[])
org/eclipse/osgi/internal/resolver/StateWriter/writeNativeCodeDescription(org.eclipse.osgi.service.resolver.NativeCodeDescription,java.io.DataOutputStream)#org/eclipse/osgi/service/resolver/NativeCodeDescription/getOSVersions()
org/eclipse/osgi/internal/resolver/StateWriter/writeNativeCodeDescription(org.eclipse.osgi.service.resolver.NativeCodeDescription,java.io.DataOutputStream)#org/eclipse/osgi/service/resolver/NativeCodeDescription/getProcessors()
org/eclipse/osgi/internal/resolver/StateWriter/writeNativeCodeDescription(org.eclipse.osgi.service.resolver.NativeCodeDescription,java.io.DataOutputStream)#org/eclipse/osgi/service/resolver/NativeCodeDescription/hasInvalidNativePaths()
org/eclipse/osgi/internal/resolver/StateWriter/writeNativeCodeDescription(org.eclipse.osgi.service.resolver.NativeCodeDescription,java.io.DataOutputStream)#org/eclipse/osgi/service/resolver/NativeCodeDescription/getNativePaths()
org/eclipse/osgi/internal/resolver/StateWriter/writeNativeCodeDescription(org.eclipse.osgi.service.resolver.NativeCodeDescription,java.io.DataOutputStream)#java/io/DataOutputStream/writeBoolean(boolean)
org/eclipse/osgi/internal/resolver/StateWriter/writeNativeCodeDescription(org.eclipse.osgi.service.resolver.NativeCodeDescription,java.io.DataOutputStream)#org/eclipse/osgi/service/resolver/NativeCodeDescription/getOSNames()
org/eclipse/osgi/internal/resolver/StateWriter/writeNativeCodeDescription(org.eclipse.osgi.service.resolver.NativeCodeDescription,java.io.DataOutputStream)#org/eclipse/osgi/service/resolver/NativeCodeDescription/getFilter()
org/eclipse/osgi/internal/resolver/StateWriter/writeNativeCodeDescription(org.eclipse.osgi.service.resolver.NativeCodeDescription,java.io.DataOutputStream)#org/eclipse/osgi/service/resolver/NativeCodeDescription/getSupplier()
org/eclipse/osgi/internal/resolver/StateWriter/writeNativeCodeDescription(org.eclipse.osgi.service.resolver.NativeCodeDescription,java.io.DataOutputStream)#org/osgi/framework/Filter/toString()
org/eclipse/osgi/internal/resolver/StateWriter/writeNativeCodeDescription(org.eclipse.osgi.service.resolver.NativeCodeDescription,java.io.DataOutputStream)#org/eclipse/osgi/service/resolver/NativeCodeDescription/getLanguages()
org/eclipse/osgi/internal/resolver/StateWriter/writeMap(java.io.DataOutputStream,java.util.Map)#java/lang/Integer/intValue()
org/eclipse/osgi/internal/resolver/StateWriter/writeMap(java.io.DataOutputStream,java.util.Map)#java/io/DataOutputStream/writeInt(int)
org/eclipse/osgi/internal/resolver/StateWriter/writeMap(java.io.DataOutputStream,java.util.Map)#java/util/Iterator/hasNext()
org/eclipse/osgi/internal/resolver/StateWriter/writeMap(java.io.DataOutputStream,java.util.Map)#java/util/Map/get(java.lang.Object)
org/eclipse/osgi/internal/resolver/StateWriter/writeMap(java.io.DataOutputStream,java.util.Map)#java/util/Map/size()
org/eclipse/osgi/internal/resolver/StateWriter/writeMap(java.io.DataOutputStream,java.util.Map)#java/util/Set/iterator()
org/eclipse/osgi/internal/resolver/StateWriter/writeMap(java.io.DataOutputStream,java.util.Map)#java/lang/Object/getClass()
org/eclipse/osgi/internal/resolver/StateWriter/writeMap(java.io.DataOutputStream,java.util.Map)#java/lang/Object/toString()
org/eclipse/osgi/internal/resolver/StateWriter/writeMap(java.io.DataOutputStream,java.util.Map)#java/util/Iterator/next()
org/eclipse/osgi/internal/resolver/StateWriter/writeMap(java.io.DataOutputStream,java.util.Map)#java/lang/Double/doubleValue()
org/eclipse/osgi/internal/resolver/StateWriter/writeMap(java.io.DataOutputStream,java.util.Map)#java/util/Map/keySet()
org/eclipse/osgi/internal/resolver/StateWriter/writeMap(java.io.DataOutputStream,java.util.Map)#java/lang/Long/longValue()
org/eclipse/osgi/internal/resolver/StateWriter/writeMap(java.io.DataOutputStream,java.util.Map)#java/io/DataOutputStream/writeDouble(double)
org/eclipse/osgi/internal/resolver/StateWriter/writeMap(java.io.DataOutputStream,java.util.Map)#java/io/DataOutputStream/writeBoolean(boolean)
org/eclipse/osgi/internal/resolver/StateWriter/writeMap(java.io.DataOutputStream,java.util.Map)#java/io/DataOutputStream/writeLong(long)
org/eclipse/osgi/internal/resolver/StateWriter/writeMap(java.io.DataOutputStream,java.util.Map)#java/lang/String/equals(java.lang.Object)
org/eclipse/osgi/internal/resolver/StateWriter/writeMap(java.io.DataOutputStream,java.util.Map)#java/lang/Class/getName()
org/eclipse/osgi/internal/resolver/StateWriter/writeMap(java.io.DataOutputStream,java.util.Map)#java/lang/Boolean/booleanValue()
org/eclipse/osgi/internal/resolver/StateWriter/writeMap(java.io.DataOutputStream,java.util.Map)#java/io/DataOutputStream/writeByte(int)
org/eclipse/osgi/internal/resolver/StateWriter/writeBundleDescriptionLazyData(org.eclipse.osgi.service.resolver.BundleDescription,java.io.DataOutputStream)#java/io/DataOutputStream/writeInt(int)
org/eclipse/osgi/internal/resolver/StateWriter/writeBundleDescriptionLazyData(org.eclipse.osgi.service.resolver.BundleDescription,java.io.DataOutputStream)#java/util/Iterator/hasNext()
org/eclipse/osgi/internal/resolver/StateWriter/writeBundleDescriptionLazyData(org.eclipse.osgi.service.resolver.BundleDescription,java.io.DataOutputStream)#org/eclipse/osgi/service/resolver/BundleDescription/getPlatformFilter()
org/eclipse/osgi/internal/resolver/StateWriter/writeBundleDescriptionLazyData(org.eclipse.osgi.service.resolver.BundleDescription,java.io.DataOutputStream)#java/util/Set/iterator()
org/eclipse/osgi/internal/resolver/StateWriter/writeBundleDescriptionLazyData(org.eclipse.osgi.service.resolver.BundleDescription,java.io.DataOutputStream)#org/eclipse/osgi/service/resolver/BundleDescription/getSelectedGenericCapabilities()
org/eclipse/osgi/internal/resolver/StateWriter/writeBundleDescriptionLazyData(org.eclipse.osgi.service.resolver.BundleDescription,java.io.DataOutputStream)#org/eclipse/osgi/service/resolver/BundleDescription/getRequiredBundles()
org/eclipse/osgi/internal/resolver/StateWriter/writeBundleDescriptionLazyData(org.eclipse.osgi.service.resolver.BundleDescription,java.io.DataOutputStream)#java/io/DataOutputStream/size()
org/eclipse/osgi/internal/resolver/StateWriter/writeBundleDescriptionLazyData(org.eclipse.osgi.service.resolver.BundleDescription,java.io.DataOutputStream)#org/eclipse/osgi/service/resolver/BundleDescription/getExportPackages()
org/eclipse/osgi/internal/resolver/StateWriter/writeBundleDescriptionLazyData(org.eclipse.osgi.service.resolver.BundleDescription,java.io.DataOutputStream)#org/eclipse/osgi/service/resolver/BundleDescription/getResolvedImports()
org/eclipse/osgi/internal/resolver/StateWriter/writeBundleDescriptionLazyData(org.eclipse.osgi.service.resolver.BundleDescription,java.io.DataOutputStream)#org/eclipse/osgi/service/resolver/BundleDescription/getExecutionEnvironments()
org/eclipse/osgi/internal/resolver/StateWriter/writeBundleDescriptionLazyData(org.eclipse.osgi.service.resolver.BundleDescription,java.io.DataOutputStream)#org/eclipse/osgi/service/resolver/BundleDescription/getResolvedRequires()
org/eclipse/osgi/internal/resolver/StateWriter/writeBundleDescriptionLazyData(org.eclipse.osgi.service.resolver.BundleDescription,java.io.DataOutputStream)#java/util/Map/get(java.lang.Object)
org/eclipse/osgi/internal/resolver/StateWriter/writeBundleDescriptionLazyData(org.eclipse.osgi.service.resolver.BundleDescription,java.io.DataOutputStream)#java/util/Map/size()
org/eclipse/osgi/internal/resolver/StateWriter/writeBundleDescriptionLazyData(org.eclipse.osgi.service.resolver.BundleDescription,java.io.DataOutputStream)#java/util/Iterator/next()
org/eclipse/osgi/internal/resolver/StateWriter/writeBundleDescriptionLazyData(org.eclipse.osgi.service.resolver.BundleDescription,java.io.DataOutputStream)#java/util/Map/keySet()
org/eclipse/osgi/internal/resolver/StateWriter/writeBundleDescriptionLazyData(org.eclipse.osgi.service.resolver.BundleDescription,java.io.DataOutputStream)#java/lang/Long/longValue()
org/eclipse/osgi/internal/resolver/StateWriter/writeBundleDescriptionLazyData(org.eclipse.osgi.service.resolver.BundleDescription,java.io.DataOutputStream)#org/eclipse/osgi/service/resolver/BundleDescription/getNativeCodeSpecification()
org/eclipse/osgi/internal/resolver/StateWriter/writeBundleDescriptionLazyData(org.eclipse.osgi.service.resolver.BundleDescription,java.io.DataOutputStream)#java/io/DataOutputStream/writeLong(long)
org/eclipse/osgi/internal/resolver/StateWriter/writeBundleDescriptionLazyData(org.eclipse.osgi.service.resolver.BundleDescription,java.io.DataOutputStream)#org/eclipse/osgi/service/resolver/BundleDescription/getImportPackages()
org/eclipse/osgi/internal/resolver/StateWriter/writeBundleDescriptionLazyData(org.eclipse.osgi.service.resolver.BundleDescription,java.io.DataOutputStream)#org/eclipse/osgi/service/resolver/BundleDescription/getSelectedExports()
org/eclipse/osgi/internal/resolver/StateWriter/writeBundleDescriptionLazyData(org.eclipse.osgi.service.resolver.BundleDescription,java.io.DataOutputStream)#org/eclipse/osgi/service/resolver/BundleDescription/getGenericRequires()
org/eclipse/osgi/internal/resolver/StateWriter/writeBundleDescriptionLazyData(org.eclipse.osgi.service.resolver.BundleDescription,java.io.DataOutputStream)#org/eclipse/osgi/service/resolver/BundleDescription/getSubstitutedExports()
org/eclipse/osgi/internal/resolver/StateWriter/writeBundleDescriptionLazyData(org.eclipse.osgi.service.resolver.BundleDescription,java.io.DataOutputStream)#org/eclipse/osgi/service/resolver/BundleDescription/getLocation()
org/eclipse/osgi/internal/resolver/StateWriter/writeBundleDescriptionLazyData(org.eclipse.osgi.service.resolver.BundleDescription,java.io.DataOutputStream)#org/eclipse/osgi/service/resolver/BundleDescription/getResolvedGenericRequires()
org/eclipse/osgi/internal/resolver/StateWriter/writeBundleDescriptionLazyData(org.eclipse.osgi.service.resolver.BundleDescription,java.io.DataOutputStream)#org/eclipse/osgi/service/resolver/BundleDescription/getGenericCapabilities()
org/eclipse/osgi/compatibility/state/PlatformBundleListener/1/filterMatches(org.osgi.framework.wiring.BundleRequirement,java.util.Collection)#java/util/ArrayList/ArrayList(int)
org/eclipse/osgi/compatibility/state/PlatformBundleListener/1/filterMatches(org.osgi.framework.wiring.BundleRequirement,java.util.Collection)#java/lang/Object/equals(java.lang.Object)
org/eclipse/osgi/compatibility/state/PlatformBundleListener/1/filterMatches(org.osgi.framework.wiring.BundleRequirement,java.util.Collection)#java/util/Iterator/hasNext()
org/eclipse/osgi/compatibility/state/PlatformBundleListener/1/filterMatches(org.osgi.framework.wiring.BundleRequirement,java.util.Collection)#org/eclipse/osgi/service/resolver/BundleDescription/getUserObject()
org/eclipse/osgi/compatibility/state/PlatformBundleListener/1/filterMatches(org.osgi.framework.wiring.BundleRequirement,java.util.Collection)#org/eclipse/osgi/internal/resolver/BaseDescriptionImpl$BaseCapability/getBaseDescription()
org/eclipse/osgi/compatibility/state/PlatformBundleListener/1/filterMatches(org.osgi.framework.wiring.BundleRequirement,java.util.Collection)#java/lang/String/equals(java.lang.Object)
org/eclipse/osgi/compatibility/state/PlatformBundleListener/1/filterMatches(org.osgi.framework.wiring.BundleRequirement,java.util.Collection)#java/util/Collection/clear()
org/eclipse/osgi/compatibility/state/PlatformBundleListener/1/filterMatches(org.osgi.framework.wiring.BundleRequirement,java.util.Collection)#java/util/Collection/add(java.lang.Object)
org/eclipse/osgi/compatibility/state/PlatformBundleListener/1/filterMatches(org.osgi.framework.wiring.BundleRequirement,java.util.Collection)#org/eclipse/osgi/container/ModuleWiring/getRequiredModuleWires(java.lang.String)
org/eclipse/osgi/compatibility/state/PlatformBundleListener/1/filterMatches(org.osgi.framework.wiring.BundleRequirement,java.util.Collection)#org/osgi/framework/wiring/BundleRequirement/getRevision()
org/eclipse/osgi/compatibility/state/PlatformBundleListener/1/filterMatches(org.osgi.framework.wiring.BundleRequirement,java.util.Collection)#org/eclipse/osgi/container/ModuleRevision/getTypes()
org/eclipse/osgi/compatibility/state/PlatformBundleListener/1/filterMatches(org.osgi.framework.wiring.BundleRequirement,java.util.Collection)#java/util/Iterator/remove()
org/eclipse/osgi/compatibility/state/PlatformBundleListener/1/filterMatches(org.osgi.framework.wiring.BundleRequirement,java.util.Collection)#org/eclipse/osgi/container/ModuleWire/getProvider()
org/eclipse/osgi/compatibility/state/PlatformBundleListener/1/filterMatches(org.osgi.framework.wiring.BundleRequirement,java.util.Collection)#org/osgi/framework/wiring/BundleRequirement/getNamespace()
org/eclipse/osgi/compatibility/state/PlatformBundleListener/1/filterMatches(org.osgi.framework.wiring.BundleRequirement,java.util.Collection)#org/eclipse/osgi/container/ModuleWire/getProviderWiring()
org/eclipse/osgi/compatibility/state/PlatformBundleListener/1/filterMatches(org.osgi.framework.wiring.BundleRequirement,java.util.Collection)#java/util/Iterator/next()
org/eclipse/osgi/compatibility/state/PlatformBundleListener/1/filterMatches(org.osgi.framework.wiring.BundleRequirement,java.util.Collection)#org/eclipse/osgi/container/ModuleWire/getCapability()
org/eclipse/osgi/compatibility/state/PlatformBundleListener/1/filterMatches(org.osgi.framework.wiring.BundleRequirement,java.util.Collection)#org/eclipse/osgi/container/ModuleRevision/getWiring()
org/eclipse/osgi/compatibility/state/PlatformBundleListener/1/filterMatches(org.osgi.framework.wiring.BundleRequirement,java.util.Collection)#java/util/List/iterator()
org/eclipse/osgi/compatibility/state/PlatformBundleListener/1/filterMatches(org.osgi.framework.wiring.BundleRequirement,java.util.Collection)#java/util/Collection/iterator()
org/eclipse/osgi/compatibility/state/StateConverter/toString(java.util.Map,java.lang.String,boolean)#java/util/Iterator/hasNext()
org/eclipse/osgi/compatibility/state/StateConverter/toString(java.util.Map,java.lang.String,boolean)#java/lang/StringBuffer/append(char)
org/eclipse/osgi/compatibility/state/StateConverter/toString(java.util.Map,java.lang.String,boolean)#java/lang/StringBuffer/append(java.lang.Object)
org/eclipse/osgi/compatibility/state/StateConverter/toString(java.util.Map,java.lang.String,boolean)#java/util/List/size()
org/eclipse/osgi/compatibility/state/StateConverter/toString(java.util.Map,java.lang.String,boolean)#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/eclipse/osgi/compatibility/state/StateConverter/toString(java.util.Map,java.lang.String,boolean)#java/util/Iterator/next()
org/eclipse/osgi/compatibility/state/StateConverter/toString(java.util.Map,java.lang.String,boolean)#java/lang/String/lastIndexOf(int)
org/eclipse/osgi/compatibility/state/StateConverter/toString(java.util.Map,java.lang.String,boolean)#java/util/Set/iterator()
org/eclipse/osgi/compatibility/state/StateConverter/toString(java.util.Map,java.lang.String,boolean)#java/lang/String/substring(int)
org/eclipse/osgi/compatibility/state/StateConverter/toString(java.util.Map,java.lang.String,boolean)#java/util/List/get(int)
org/eclipse/osgi/compatibility/state/StateConverter/toString(java.util.Map,java.lang.String,boolean)#java/util/Map/entrySet()
org/eclipse/osgi/compatibility/state/StateConverter/toString(java.util.Map,java.lang.String,boolean)#java/lang/StringBuffer/StringBuffer()
org/eclipse/osgi/compatibility/state/StateConverter/toString(java.util.Map,java.lang.String,boolean)#java/lang/StringBuilder/append(java.lang.String)
org/eclipse/osgi/compatibility/state/StateConverter/toString(java.util.Map,java.lang.String,boolean)#java/util/Map$Entry/getKey()
org/eclipse/osgi/compatibility/state/StateConverter/toString(java.util.Map,java.lang.String,boolean)#java/util/Map/isEmpty()
org/eclipse/osgi/compatibility/state/StateConverter/toString(java.util.Map,java.lang.String,boolean)#java/lang/StringBuffer/length()
org/eclipse/osgi/compatibility/state/StateConverter/toString(java.util.Map,java.lang.String,boolean)#java/lang/Class/getName()
org/eclipse/osgi/compatibility/state/StateConverter/toString(java.util.Map,java.lang.String,boolean)#java/lang/StringBuffer/toString()
org/eclipse/osgi/compatibility/state/StateConverter/toString(java.util.Map,java.lang.String,boolean)#java/lang/Object/getClass()
org/eclipse/osgi/compatibility/state/StateConverter/toString(java.util.Map,java.lang.String,boolean)#java/util/Map$Entry/getValue()
org/eclipse/osgi/compatibility/state/StateConverter/toString(java.util.Map,java.lang.String,boolean)#java/util/List/iterator()
org/eclipse/osgi/compatibility/state/StateConverter/toString(java.util.Map,java.lang.String,boolean)#java/lang/StringBuffer/append(java.lang.String)
org/eclipse/osgi/compatibility/state/StateConverter/toString(java.util.Map,java.lang.String,boolean)#java/lang/StringBuilder/toString()
org/eclipse/osgi/compatibility/state/StateConverter/toString(java.util.Map,java.lang.String,boolean)#java/lang/StringBuffer/setLength(int)
org/eclipse/osgi/compatibility/state/StateConverter/createProvideCapability(org.osgi.resource.Capability)#org/osgi/resource/Capability/getDirectives()
org/eclipse/osgi/compatibility/state/StateConverter/createProvideCapability(org.osgi.resource.Capability)#java/util/Iterator/hasNext()
org/eclipse/osgi/compatibility/state/StateConverter/createProvideCapability(org.osgi.resource.Capability)#java/lang/StringBuilder/append(java.lang.String)
org/eclipse/osgi/compatibility/state/StateConverter/createProvideCapability(org.osgi.resource.Capability)#org/eclipse/osgi/service/resolver/StateObjectFactory/createGenericDescriptions(java.lang.String)
org/eclipse/osgi/compatibility/state/StateConverter/createProvideCapability(org.osgi.resource.Capability)#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/eclipse/osgi/compatibility/state/StateConverter/createProvideCapability(org.osgi.resource.Capability)#java/util/Iterator/next()
org/eclipse/osgi/compatibility/state/StateConverter/createProvideCapability(org.osgi.resource.Capability)#org/osgi/resource/Capability/getAttributes()
org/eclipse/osgi/compatibility/state/StateConverter/createProvideCapability(org.osgi.resource.Capability)#org/osgi/resource/Capability/getNamespace()
org/eclipse/osgi/compatibility/state/StateConverter/createProvideCapability(org.osgi.resource.Capability)#java/util/List/iterator()
org/eclipse/osgi/compatibility/state/StateConverter/createProvideCapability(org.osgi.resource.Capability)#java/lang/StringBuilder/toString()
org/eclipse/osgi/compatibility/state/StateConverter/createProvideCapability(org.osgi.resource.Capability)#org/eclipse/osgi/service/resolver/GenericDescription/setUserObject(java.lang.Object)
org/eclipse/osgi/compatibility/state/StateConverter/createProvideCapability(org.osgi.resource.Capability)#java/lang/String/valueOf(java.lang.Object)
org/eclipse/osgi/compatibility/state/StateConverter/createProvideCapability(org.osgi.resource.Capability)#org/eclipse/osgi/service/resolver/State/getFactory()
org/eclipse/osgi/compatibility/state/StateConverter/createOSGiRequirement(org.osgi.resource.Requirement,java.lang.String,java.lang.String[])#org/eclipse/osgi/internal/framework/FilterImpl/newInstance(java.lang.String)
org/eclipse/osgi/compatibility/state/StateConverter/createOSGiRequirement(org.osgi.resource.Requirement,java.lang.String,java.lang.String[])#java/lang/String/valueOf(java.lang.Object)
org/eclipse/osgi/compatibility/state/StateConverter/createOSGiRequirement(org.osgi.resource.Requirement,java.lang.String,java.lang.String[])#org/osgi/resource/Requirement/getDirectives()
org/eclipse/osgi/compatibility/state/StateConverter/createOSGiRequirement(org.osgi.resource.Requirement,java.lang.String,java.lang.String[])#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/eclipse/osgi/compatibility/state/StateConverter/createOSGiRequirement(org.osgi.resource.Requirement,java.lang.String,java.lang.String[])#java/lang/StringBuilder/append(java.lang.Object)
org/eclipse/osgi/compatibility/state/StateConverter/createOSGiRequirement(org.osgi.resource.Requirement,java.lang.String,java.lang.String[])#java/util/Map/remove(java.lang.Object)
org/eclipse/osgi/compatibility/state/StateConverter/createOSGiRequirement(org.osgi.resource.Requirement,java.lang.String,java.lang.String[])#java/lang/StringBuilder/toString()
org/eclipse/osgi/compatibility/state/StateConverter/createOSGiRequirement(org.osgi.resource.Requirement,java.lang.String,java.lang.String[])#java/lang/StringBuilder/append(java.lang.String)
org/eclipse/osgi/compatibility/state/StateConverter/createOSGiRequirement(org.osgi.resource.Requirement,java.lang.String,java.lang.String[])#java/util/HashMap/HashMap(java.util.Map)
org/eclipse/osgi/compatibility/state/StateConverter/createOSGiRequirement(org.osgi.resource.Requirement,java.lang.String,java.lang.String[])#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/eclipse/osgi/compatibility/state/StateConverter/createOSGiRequirement(org.osgi.resource.Requirement,java.lang.String,java.lang.String[])#org/eclipse/osgi/internal/framework/FilterImpl/getStandardOSGiAttributes(java.lang.String[])
org/eclipse/osgi/compatibility/state/StateConverter/createOSGiRequirement(org.osgi.resource.Requirement,java.lang.String,java.lang.String[])#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String,java.lang.Throwable)
org/eclipse/osgi/compatibility/state/StateConverter/createDescription(org.osgi.framework.wiring.BundleRevision)#org/osgi/resource/Capability/getDirectives()
org/eclipse/osgi/compatibility/state/StateConverter/createDescription(org.osgi.framework.wiring.BundleRevision)#java/util/ArrayList/ArrayList(int)
org/eclipse/osgi/compatibility/state/StateConverter/createDescription(org.osgi.framework.wiring.BundleRevision)#org/osgi/framework/Bundle/getLocation()
org/eclipse/osgi/compatibility/state/StateConverter/createDescription(org.osgi.framework.wiring.BundleRevision)#org/osgi/framework/wiring/BundleRevision/getCapabilities(java.lang.String)
org/eclipse/osgi/compatibility/state/StateConverter/createDescription(org.osgi.framework.wiring.BundleRevision)#java/util/Iterator/next()
org/eclipse/osgi/compatibility/state/StateConverter/createDescription(org.osgi.framework.wiring.BundleRevision)#org/osgi/resource/Capability/getAttributes()
org/eclipse/osgi/compatibility/state/StateConverter/createDescription(org.osgi.framework.wiring.BundleRevision)#java/util/List/get(int)
org/eclipse/osgi/compatibility/state/StateConverter/createDescription(org.osgi.framework.wiring.BundleRevision)#java/lang/StringBuilder/append(java.lang.Object)
org/eclipse/osgi/compatibility/state/StateConverter/createDescription(org.osgi.framework.wiring.BundleRevision)#java/util/Collection/iterator()
org/eclipse/osgi/compatibility/state/StateConverter/createDescription(org.osgi.framework.wiring.BundleRevision)#org/eclipse/osgi/service/resolver/GenericDescription/setUserObject(java.lang.Object)
org/eclipse/osgi/compatibility/state/StateConverter/createDescription(org.osgi.framework.wiring.BundleRevision)#java/util/ArrayList/ArrayList()
org/eclipse/osgi/compatibility/state/StateConverter/createDescription(org.osgi.framework.wiring.BundleRevision)#java/lang/String/valueOf(java.lang.Object)
org/eclipse/osgi/compatibility/state/StateConverter/createDescription(org.osgi.framework.wiring.BundleRevision)#org/eclipse/osgi/service/resolver/State/getFactory()
org/eclipse/osgi/compatibility/state/StateConverter/createDescription(org.osgi.framework.wiring.BundleRevision)#java/util/Iterator/hasNext()
org/eclipse/osgi/compatibility/state/StateConverter/createDescription(org.osgi.framework.wiring.BundleRevision)#org/eclipse/osgi/service/resolver/StateObjectFactory/createBundleDescription(long,java.lang.String,org.osgi.framework.Version,java.lang.String,org.eclipse.osgi.service.resolver.BundleSpecification[],org.eclipse.osgi.service.resolver.HostSpecification,org.eclipse.osgi.service.resolver.ImportPackageSpecification[],org.eclipse.osgi.service.resolver.ExportPackageDescription[],java.lang.String,java.lang.String[],org.eclipse.osgi.service.resolver.GenericSpecification[],org.eclipse.osgi.service.resolver.GenericDescription[],org.eclipse.osgi.service.resolver.NativeCodeSpecification)
org/eclipse/osgi/compatibility/state/StateConverter/createDescription(org.osgi.framework.wiring.BundleRevision)#org/osgi/framework/wiring/BundleRevision/getRequirements(java.lang.String)
org/eclipse/osgi/compatibility/state/StateConverter/createDescription(org.osgi.framework.wiring.BundleRevision)#org/eclipse/osgi/service/resolver/BundleDescription/setUserObject(java.lang.Object)
org/eclipse/osgi/compatibility/state/StateConverter/createDescription(org.osgi.framework.wiring.BundleRevision)#java/lang/StringBuilder/append(java.lang.String)
org/eclipse/osgi/compatibility/state/StateConverter/createDescription(org.osgi.framework.wiring.BundleRevision)#java/util/HashMap/HashMap(java.util.Map)
org/eclipse/osgi/compatibility/state/StateConverter/createDescription(org.osgi.framework.wiring.BundleRevision)#java/util/List/size()
org/eclipse/osgi/compatibility/state/StateConverter/createDescription(org.osgi.framework.wiring.BundleRevision)#org/osgi/resource/Requirement/getNamespace()
org/eclipse/osgi/compatibility/state/StateConverter/createDescription(org.osgi.framework.wiring.BundleRevision)#java/util/Collection/size()
org/eclipse/osgi/compatibility/state/StateConverter/createDescription(org.osgi.framework.wiring.BundleRevision)#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/eclipse/osgi/compatibility/state/StateConverter/createDescription(org.osgi.framework.wiring.BundleRevision)#java/util/List/addAll(java.util.Collection)
org/eclipse/osgi/compatibility/state/StateConverter/createDescription(org.osgi.framework.wiring.BundleRevision)#org/osgi/framework/Bundle/getBundleId()
org/eclipse/osgi/compatibility/state/StateConverter/createDescription(org.osgi.framework.wiring.BundleRevision)#java/lang/String/equals(java.lang.Object)
org/eclipse/osgi/compatibility/state/StateConverter/createDescription(org.osgi.framework.wiring.BundleRevision)#java/util/List/toArray(java.lang.Object[])
org/eclipse/osgi/compatibility/state/StateConverter/createDescription(org.osgi.framework.wiring.BundleRevision)#org/osgi/resource/Capability/getNamespace()
org/eclipse/osgi/compatibility/state/StateConverter/createDescription(org.osgi.framework.wiring.BundleRevision)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/eclipse/osgi/compatibility/state/StateConverter/createDescription(org.osgi.framework.wiring.BundleRevision)#org/eclipse/osgi/service/resolver/GenericDescription/getType()
org/eclipse/osgi/compatibility/state/StateConverter/createDescription(org.osgi.framework.wiring.BundleRevision)#org/osgi/framework/wiring/BundleRevision/getBundle()
org/eclipse/osgi/compatibility/state/StateConverter/createDescription(org.osgi.framework.wiring.BundleRevision)#java/util/Map/remove(java.lang.Object)
org/eclipse/osgi/compatibility/state/StateConverter/createDescription(org.osgi.framework.wiring.BundleRevision)#java/lang/StringBuilder/toString()
org/eclipse/osgi/compatibility/state/StateConverter/createDescription(org.osgi.framework.wiring.BundleRevision)#org/eclipse/osgi/service/resolver/BundleDescription/getGenericCapabilities()
org/eclipse/osgi/compatibility/state/StateConverter/createRequireCapability(org.osgi.resource.Requirement)#org/eclipse/osgi/service/resolver/StateObjectFactory/createGenericSpecifications(java.lang.String)
org/eclipse/osgi/compatibility/state/StateConverter/createRequireCapability(org.osgi.resource.Requirement)#java/util/Iterator/hasNext()
org/eclipse/osgi/compatibility/state/StateConverter/createRequireCapability(org.osgi.resource.Requirement)#org/osgi/resource/Requirement/getDirectives()
org/eclipse/osgi/compatibility/state/StateConverter/createRequireCapability(org.osgi.resource.Requirement)#java/lang/StringBuilder/append(java.lang.String)
org/eclipse/osgi/compatibility/state/StateConverter/createRequireCapability(org.osgi.resource.Requirement)#org/eclipse/osgi/service/resolver/GenericSpecification/setUserObject(java.lang.Object)
org/eclipse/osgi/compatibility/state/StateConverter/createRequireCapability(org.osgi.resource.Requirement)#org/osgi/resource/Requirement/getNamespace()
org/eclipse/osgi/compatibility/state/StateConverter/createRequireCapability(org.osgi.resource.Requirement)#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/eclipse/osgi/compatibility/state/StateConverter/createRequireCapability(org.osgi.resource.Requirement)#java/util/Iterator/next()
org/eclipse/osgi/compatibility/state/StateConverter/createRequireCapability(org.osgi.resource.Requirement)#org/osgi/resource/Requirement/getAttributes()
org/eclipse/osgi/compatibility/state/StateConverter/createRequireCapability(org.osgi.resource.Requirement)#java/util/List/iterator()
org/eclipse/osgi/compatibility/state/StateConverter/createRequireCapability(org.osgi.resource.Requirement)#java/lang/StringBuilder/toString()
org/eclipse/osgi/compatibility/state/StateConverter/createRequireCapability(org.osgi.resource.Requirement)#java/lang/String/valueOf(java.lang.Object)
org/eclipse/osgi/compatibility/state/StateConverter/createRequireCapability(org.osgi.resource.Requirement)#org/eclipse/osgi/service/resolver/State/getFactory()
org/eclipse/osgi/compatibility/state/StateConverter/creatExportPackage(org.osgi.resource.Capability)#org/osgi/resource/Capability/getDirectives()
org/eclipse/osgi/compatibility/state/StateConverter/creatExportPackage(org.osgi.resource.Capability)#org/eclipse/osgi/service/resolver/ExportPackageDescription/setUserObject(java.lang.Object)
org/eclipse/osgi/compatibility/state/StateConverter/creatExportPackage(org.osgi.resource.Capability)#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/eclipse/osgi/compatibility/state/StateConverter/creatExportPackage(org.osgi.resource.Capability)#java/util/Iterator/next()
org/eclipse/osgi/compatibility/state/StateConverter/creatExportPackage(org.osgi.resource.Capability)#org/osgi/resource/Capability/getAttributes()
org/eclipse/osgi/compatibility/state/StateConverter/creatExportPackage(org.osgi.resource.Capability)#java/util/List/iterator()
org/eclipse/osgi/compatibility/state/StateConverter/creatExportPackage(org.osgi.resource.Capability)#java/util/Map/remove(java.lang.Object)
org/eclipse/osgi/compatibility/state/StateConverter/creatExportPackage(org.osgi.resource.Capability)#java/lang/StringBuilder/toString()
org/eclipse/osgi/compatibility/state/StateConverter/creatExportPackage(org.osgi.resource.Capability)#java/lang/String/valueOf(java.lang.Object)
org/eclipse/osgi/compatibility/state/StateConverter/creatExportPackage(org.osgi.resource.Capability)#org/eclipse/osgi/service/resolver/State/getFactory()
org/eclipse/osgi/compatibility/state/StateConverter/creatExportPackage(org.osgi.resource.Capability)#java/util/Iterator/hasNext()
org/eclipse/osgi/compatibility/state/StateConverter/creatExportPackage(org.osgi.resource.Capability)#org/eclipse/osgi/service/resolver/StateObjectFactory/createExportPackageDescriptions(java.lang.String)
org/eclipse/osgi/compatibility/state/StateConverter/creatExportPackage(org.osgi.resource.Capability)#java/lang/StringBuilder/append(java.lang.String)
org/eclipse/osgi/compatibility/state/StateConverter/creatExportPackage(org.osgi.resource.Capability)#java/util/HashMap/HashMap(java.util.Map)
org/eclipse/osgi/internal/resolver/StateImpl/setPlatformProperties(java.util.Dictionary[],boolean)#java/util/Dictionary/get(java.lang.Object)
org/eclipse/osgi/internal/resolver/StateImpl/setPlatformProperties(java.util.Dictionary[],boolean)#java/util/Dictionary/keys()
org/eclipse/osgi/internal/resolver/StateImpl/setPlatformProperties(java.util.Dictionary[],boolean)#java/util/Dictionary/put(java.lang.Object,java.lang.Object)
org/eclipse/osgi/internal/resolver/StateImpl/setPlatformProperties(java.util.Dictionary[],boolean)#java/util/Hashtable/Hashtable(int)
org/eclipse/osgi/internal/resolver/StateImpl/setPlatformProperties(java.util.Dictionary[],boolean)#java/lang/String/equals(java.lang.Object)
org/eclipse/osgi/internal/resolver/StateImpl/setPlatformProperties(java.util.Dictionary[],boolean)#java/lang/String/substring(int,int)
org/eclipse/osgi/internal/resolver/StateImpl/setPlatformProperties(java.util.Dictionary[],boolean)#java/util/Dictionary/size()
org/eclipse/osgi/internal/resolver/StateImpl/setPlatformProperties(java.util.Dictionary[],boolean)#java/util/Enumeration/hasMoreElements()
org/eclipse/osgi/internal/resolver/StateImpl/setPlatformProperties(java.util.Dictionary[],boolean)#java/util/Enumeration/nextElement()
org/eclipse/osgi/internal/resolver/StateImpl/setPlatformProperties(java.util.Dictionary[],boolean)#java/lang/IllegalArgumentException/IllegalArgumentException()
org/eclipse/osgi/internal/resolver/StateImpl/setPlatformProperties(java.util.Dictionary[],boolean)#java/lang/String/indexOf(int)
org/eclipse/osgi/internal/resolver/StateImpl/getExportedPackages()#java/util/Iterator/hasNext()
org/eclipse/osgi/internal/resolver/StateImpl/getExportedPackages()#java/util/List/size()
org/eclipse/osgi/internal/resolver/StateImpl/getExportedPackages()#java/util/Iterator/next()
org/eclipse/osgi/internal/resolver/StateImpl/getExportedPackages()#java/util/List/toArray(java.lang.Object[])
org/eclipse/osgi/internal/resolver/StateImpl/getExportedPackages()#org/eclipse/osgi/service/resolver/BundleDescription/getSelectedExports()
org/eclipse/osgi/internal/resolver/StateImpl/getExportedPackages()#java/util/List/add(java.lang.Object)
org/eclipse/osgi/internal/resolver/StateImpl/getExportedPackages()#org/eclipse/osgi/framework/util/KeyedHashSet/iterator()
org/eclipse/osgi/internal/resolver/StateImpl/getExportedPackages()#java/util/LinkedList/iterator()
org/eclipse/osgi/internal/resolver/StateImpl/getExportedPackages()#java/util/ArrayList/ArrayList()
org/eclipse/osgi/internal/resolver/StateImpl/getFragments(org.eclipse.osgi.service.resolver.BundleDescription)#java/util/ArrayList/ArrayList()
org/eclipse/osgi/internal/resolver/StateImpl/getFragments(org.eclipse.osgi.service.resolver.BundleDescription)#java/util/Iterator/hasNext()
org/eclipse/osgi/internal/resolver/StateImpl/getFragments(org.eclipse.osgi.service.resolver.BundleDescription)#org/eclipse/osgi/service/resolver/BundleDescription/getHost()
org/eclipse/osgi/internal/resolver/StateImpl/getFragments(org.eclipse.osgi.service.resolver.BundleDescription)#java/util/List/size()
org/eclipse/osgi/internal/resolver/StateImpl/getFragments(org.eclipse.osgi.service.resolver.BundleDescription)#java/util/Iterator/next()
org/eclipse/osgi/internal/resolver/StateImpl/getFragments(org.eclipse.osgi.service.resolver.BundleDescription)#java/util/List/toArray(java.lang.Object[])
org/eclipse/osgi/internal/resolver/StateImpl/getFragments(org.eclipse.osgi.service.resolver.BundleDescription)#java/util/List/add(java.lang.Object)
org/eclipse/osgi/internal/resolver/StateImpl/getFragments(org.eclipse.osgi.service.resolver.BundleDescription)#org/eclipse/osgi/service/resolver/HostSpecification/getHosts()
org/eclipse/osgi/internal/resolver/StateImpl/getFragments(org.eclipse.osgi.service.resolver.BundleDescription)#org/eclipse/osgi/framework/util/KeyedHashSet/iterator()
org/eclipse/osgi/internal/resolver/StateImpl/updateBundle(org.eclipse.osgi.service.resolver.BundleDescription)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/eclipse/osgi/internal/resolver/StateImpl/updateBundle(org.eclipse.osgi.service.resolver.BundleDescription)#java/util/ArrayList/ArrayList(int)
org/eclipse/osgi/internal/resolver/StateImpl/updateBundle(org.eclipse.osgi.service.resolver.BundleDescription)#java/util/Iterator/hasNext()
org/eclipse/osgi/internal/resolver/StateImpl/updateBundle(org.eclipse.osgi.service.resolver.BundleDescription)#java/util/List/size()
org/eclipse/osgi/internal/resolver/StateImpl/updateBundle(org.eclipse.osgi.service.resolver.BundleDescription)#org/eclipse/osgi/service/resolver/Resolver/bundleUpdated(org.eclipse.osgi.service.resolver.BundleDescription,org.eclipse.osgi.service.resolver.BundleDescription,boolean)
org/eclipse/osgi/internal/resolver/StateImpl/updateBundle(org.eclipse.osgi.service.resolver.BundleDescription)#java/lang/String/equals(java.lang.Object)
org/eclipse/osgi/internal/resolver/StateImpl/updateBundle(org.eclipse.osgi.service.resolver.BundleDescription)#java/util/List/add(java.lang.Object)
org/eclipse/osgi/internal/resolver/StateImpl/updateBundle(org.eclipse.osgi.service.resolver.BundleDescription)#org/eclipse/osgi/framework/util/KeyedHashSet/get(org.eclipse.osgi.framework.util.KeyedElement)
org/eclipse/osgi/internal/resolver/StateImpl/updateBundle(org.eclipse.osgi.service.resolver.BundleDescription)#java/util/List/iterator()
org/eclipse/osgi/internal/resolver/StateImpl/updateBundle(org.eclipse.osgi.service.resolver.BundleDescription)#org/eclipse/osgi/service/resolver/DisabledInfo/getPolicyName()
org/eclipse/osgi/internal/resolver/StateImpl/updateBundle(org.eclipse.osgi.service.resolver.BundleDescription)#org/eclipse/osgi/service/resolver/BundleDescription/getSymbolicName()
org/eclipse/osgi/internal/resolver/StateImpl/updateBundle(org.eclipse.osgi.service.resolver.BundleDescription)#java/util/Iterator/next()
org/eclipse/osgi/internal/resolver/StateImpl/updateBundle(org.eclipse.osgi.service.resolver.BundleDescription)#org/eclipse/osgi/framework/util/KeyedHashSet/remove(org.eclipse.osgi.framework.util.KeyedElement)
org/eclipse/osgi/internal/resolver/StateImpl/updateBundle(org.eclipse.osgi.service.resolver.BundleDescription)#org/eclipse/osgi/service/resolver/DisabledInfo/DisabledInfo(java.lang.String,java.lang.String,org.eclipse.osgi.service.resolver.BundleDescription)
org/eclipse/osgi/internal/resolver/StateImpl/updateBundle(org.eclipse.osgi.service.resolver.BundleDescription)#org/eclipse/osgi/service/resolver/DisabledInfo/getMessage()
org/eclipse/osgi/internal/resolver/StateImpl/updateBundle(org.eclipse.osgi.service.resolver.BundleDescription)#java/util/Map/remove(java.lang.Object)
org/eclipse/osgi/internal/resolver/StateImpl/addBundle(org.eclipse.osgi.service.resolver.BundleDescription)#org/eclipse/osgi/internal/framework/FilterImpl/newInstance(java.lang.String)
org/eclipse/osgi/internal/resolver/StateImpl/addBundle(org.eclipse.osgi.service.resolver.BundleDescription)#org/eclipse/osgi/service/resolver/BundleDescription/getSymbolicName()
org/eclipse/osgi/internal/resolver/StateImpl/addBundle(org.eclipse.osgi.service.resolver.BundleDescription)#org/eclipse/osgi/service/resolver/NativeCodeSpecification/getPossibleSuppliers()
org/eclipse/osgi/internal/resolver/StateImpl/addBundle(org.eclipse.osgi.service.resolver.BundleDescription)#org/eclipse/osgi/service/resolver/BundleDescription/getPlatformFilter()
org/eclipse/osgi/internal/resolver/StateImpl/addBundle(org.eclipse.osgi.service.resolver.BundleDescription)#org/eclipse/osgi/service/resolver/BundleDescription/getNativeCodeSpecification()
org/eclipse/osgi/internal/resolver/StateImpl/addBundle(org.eclipse.osgi.service.resolver.BundleDescription)#java/lang/String/equals(java.lang.Object)
org/eclipse/osgi/internal/resolver/StateImpl/addBundle(org.eclipse.osgi.service.resolver.BundleDescription)#org/eclipse/osgi/service/resolver/NativeCodeDescription/getFilter()
org/eclipse/osgi/internal/resolver/StateImpl/addBundle(org.eclipse.osgi.service.resolver.BundleDescription)#org/eclipse/osgi/internal/framework/FilterImpl/getAttributes()
org/eclipse/osgi/internal/resolver/StateImpl/addBundle(org.eclipse.osgi.service.resolver.BundleDescription)#org/eclipse/osgi/service/resolver/Resolver/bundleAdded(org.eclipse.osgi.service.resolver.BundleDescription)
org/eclipse/osgi/internal/resolver/StateImpl/resolve(boolean,org.eclipse.osgi.service.resolver.BundleDescription[],org.eclipse.osgi.service.resolver.BundleDescription[])#java/util/Dictionary/get(java.lang.Object)
org/eclipse/osgi/internal/resolver/StateImpl/resolve(boolean,org.eclipse.osgi.service.resolver.BundleDescription[],org.eclipse.osgi.service.resolver.BundleDescription[])#java/util/Set/size()
org/eclipse/osgi/internal/resolver/StateImpl/resolve(boolean,org.eclipse.osgi.service.resolver.BundleDescription[],org.eclipse.osgi.service.resolver.BundleDescription[])#java/util/Dictionary/keys()
org/eclipse/osgi/internal/resolver/StateImpl/resolve(boolean,org.eclipse.osgi.service.resolver.BundleDescription[],org.eclipse.osgi.service.resolver.BundleDescription[])#org/eclipse/osgi/framework/util/Headers/Headers(int)
org/eclipse/osgi/internal/resolver/StateImpl/resolve(boolean,org.eclipse.osgi.service.resolver.BundleDescription[],org.eclipse.osgi.service.resolver.BundleDescription[])#java/util/Arrays/asList(java.lang.Object[])
org/eclipse/osgi/internal/resolver/StateImpl/resolve(boolean,org.eclipse.osgi.service.resolver.BundleDescription[],org.eclipse.osgi.service.resolver.BundleDescription[])#java/util/Iterator/next()
org/eclipse/osgi/internal/resolver/StateImpl/resolve(boolean,org.eclipse.osgi.service.resolver.BundleDescription[],org.eclipse.osgi.service.resolver.BundleDescription[])#java/util/Collections/unmodifiableCollection(java.util.Collection)
org/eclipse/osgi/internal/resolver/StateImpl/resolve(boolean,org.eclipse.osgi.service.resolver.BundleDescription[],org.eclipse.osgi.service.resolver.BundleDescription[])#java/util/LinkedList/size()
org/eclipse/osgi/internal/resolver/StateImpl/resolve(boolean,org.eclipse.osgi.service.resolver.BundleDescription[],org.eclipse.osgi.service.resolver.BundleDescription[])#java/util/Collection/iterator()
org/eclipse/osgi/internal/resolver/StateImpl/resolve(boolean,org.eclipse.osgi.service.resolver.BundleDescription[],org.eclipse.osgi.service.resolver.BundleDescription[])#org/eclipse/osgi/framework/util/Headers/put(java.lang.Object,java.lang.Object)
org/eclipse/osgi/internal/resolver/StateImpl/resolve(boolean,org.eclipse.osgi.service.resolver.BundleDescription[],org.eclipse.osgi.service.resolver.BundleDescription[])#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/eclipse/osgi/internal/resolver/StateImpl/resolve(boolean,org.eclipse.osgi.service.resolver.BundleDescription[],org.eclipse.osgi.service.resolver.BundleDescription[])#java/util/Iterator/hasNext()
org/eclipse/osgi/internal/resolver/StateImpl/resolve(boolean,org.eclipse.osgi.service.resolver.BundleDescription[],org.eclipse.osgi.service.resolver.BundleDescription[])#org/eclipse/osgi/service/resolver/BundleDescription/getBundle()
org/eclipse/osgi/internal/resolver/StateImpl/resolve(boolean,org.eclipse.osgi.service.resolver.BundleDescription[],org.eclipse.osgi.service.resolver.BundleDescription[])#org/osgi/framework/Bundle/getState()
org/eclipse/osgi/internal/resolver/StateImpl/resolve(boolean,org.eclipse.osgi.service.resolver.BundleDescription[],org.eclipse.osgi.service.resolver.BundleDescription[])#java/util/Dictionary/size()
org/eclipse/osgi/internal/resolver/StateImpl/resolve(boolean,org.eclipse.osgi.service.resolver.BundleDescription[],org.eclipse.osgi.service.resolver.BundleDescription[])#org/eclipse/osgi/service/resolver/Resolver/resolve(org.eclipse.osgi.service.resolver.BundleDescription[],java.util.Dictionary[])
org/eclipse/osgi/internal/resolver/StateImpl/resolve(boolean,org.eclipse.osgi.service.resolver.BundleDescription[],org.eclipse.osgi.service.resolver.BundleDescription[])#java/util/Map/clear()
org/eclipse/osgi/internal/resolver/StateImpl/resolve(boolean,org.eclipse.osgi.service.resolver.BundleDescription[],org.eclipse.osgi.service.resolver.BundleDescription[])#java/util/Set/toArray(java.lang.Object[])
org/eclipse/osgi/internal/resolver/StateImpl/resolve(boolean,org.eclipse.osgi.service.resolver.BundleDescription[],org.eclipse.osgi.service.resolver.BundleDescription[])#java/util/Enumeration/hasMoreElements()
org/eclipse/osgi/internal/resolver/StateImpl/resolve(boolean,org.eclipse.osgi.service.resolver.BundleDescription[],org.eclipse.osgi.service.resolver.BundleDescription[])#java/util/HashSet/HashSet()
org/eclipse/osgi/internal/resolver/StateImpl/resolve(boolean,org.eclipse.osgi.service.resolver.BundleDescription[],org.eclipse.osgi.service.resolver.BundleDescription[])#java/util/Enumeration/nextElement()
org/eclipse/osgi/internal/resolver/StateImpl/resolve(boolean,org.eclipse.osgi.service.resolver.BundleDescription[],org.eclipse.osgi.service.resolver.BundleDescription[])#java/util/Set/add(java.lang.Object)
org/eclipse/osgi/internal/resolver/StateImpl/checkOSGiEE(java.util.List,java.lang.String,java.lang.Integer)#java/util/Dictionary/get(java.lang.Object)
org/eclipse/osgi/internal/resolver/StateImpl/checkOSGiEE(java.util.List,java.lang.String,java.lang.Integer)#java/util/Iterator/hasNext()
org/eclipse/osgi/internal/resolver/StateImpl/checkOSGiEE(java.util.List,java.lang.String,java.lang.Integer)#java/util/Map$Entry/getKey()
org/eclipse/osgi/internal/resolver/StateImpl/checkOSGiEE(java.util.List,java.lang.String,java.lang.Integer)#java/util/Dictionary/put(java.lang.Object,java.lang.Object)
org/eclipse/osgi/internal/resolver/StateImpl/checkOSGiEE(java.util.List,java.lang.String,java.lang.Integer)#java/lang/Integer/equals(java.lang.Object)
org/eclipse/osgi/internal/resolver/StateImpl/checkOSGiEE(java.util.List,java.lang.String,java.lang.Integer)#java/lang/String/equals(java.lang.Object)
org/eclipse/osgi/internal/resolver/StateImpl/checkOSGiEE(java.util.List,java.lang.String,java.lang.Integer)#java/util/Hashtable/Hashtable()
org/eclipse/osgi/internal/resolver/StateImpl/checkOSGiEE(java.util.List,java.lang.String,java.lang.Integer)#java/util/Set/iterator()
org/eclipse/osgi/internal/resolver/StateImpl/checkOSGiEE(java.util.List,java.lang.String,java.lang.Integer)#java/util/List/add(java.lang.Object)
org/eclipse/osgi/internal/resolver/StateImpl/checkOSGiEE(java.util.List,java.lang.String,java.lang.Integer)#java/util/Map$Entry/getValue()
org/eclipse/osgi/internal/resolver/StateImpl/checkOSGiEE(java.util.List,java.lang.String,java.lang.Integer)#java/util/List/iterator()
org/eclipse/osgi/internal/resolver/StateImpl/checkOSGiEE(java.util.List,java.lang.String,java.lang.Integer)#java/util/Map/entrySet()
org/eclipse/osgi/internal/resolver/StateImpl/checkOSGiEE(java.util.List,java.lang.String,java.lang.Integer)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/eclipse/osgi/internal/resolver/StateImpl/checkOSGiEE(java.util.List,java.lang.String,java.lang.Integer)#java/util/ArrayList/ArrayList()
org/eclipse/osgi/internal/resolver/StateImpl/checkOSGiEE(java.util.List,java.lang.String,java.lang.Integer)#java/util/ArrayList/ArrayList(int)
org/eclipse/osgi/internal/resolver/StateImpl/checkOSGiEE(java.util.List,java.lang.String,java.lang.Integer)#java/lang/String/length()
org/eclipse/osgi/internal/resolver/StateImpl/checkOSGiEE(java.util.List,java.lang.String,java.lang.Integer)#java/util/Map/get(java.lang.Object)
org/eclipse/osgi/internal/resolver/StateImpl/checkOSGiEE(java.util.List,java.lang.String,java.lang.Integer)#java/util/List/size()
org/eclipse/osgi/internal/resolver/StateImpl/checkOSGiEE(java.util.List,java.lang.String,java.lang.Integer)#org/osgi/framework/Version/Version(java.lang.String)
org/eclipse/osgi/internal/resolver/StateImpl/checkOSGiEE(java.util.List,java.lang.String,java.lang.Integer)#java/util/Iterator/next()
org/eclipse/osgi/internal/resolver/StateImpl/checkOSGiEE(java.util.List,java.lang.String,java.lang.Integer)#java/util/HashMap/HashMap()
org/eclipse/osgi/internal/resolver/StateImpl/checkOSGiEE(java.util.List,java.lang.String,java.lang.Integer)#org/eclipse/osgi/service/resolver/GenericDescription/getAttributes()
org/eclipse/osgi/internal/resolver/StateImpl/checkOSGiEE(java.util.List,java.lang.String,java.lang.Integer)#java/util/List/contains(java.lang.Object)
org/eclipse/osgi/internal/resolver/StateImpl/checkOSGiEE(java.util.List,java.lang.String,java.lang.Integer)#org/eclipse/osgi/service/resolver/GenericDescription/getType()
org/eclipse/osgi/internal/resolver/StateImpl/checkOSGiEE(java.util.List,java.lang.String,java.lang.Integer)#org/eclipse/osgi/util/ManifestElement/getArrayFromList(java.lang.String)
org/eclipse/osgi/internal/resolver/StateImpl/addDisabledInfo(org.eclipse.osgi.service.resolver.DisabledInfo)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/eclipse/osgi/internal/resolver/StateImpl/addDisabledInfo(org.eclipse.osgi.service.resolver.DisabledInfo)#java/util/ArrayList/ArrayList(int)
org/eclipse/osgi/internal/resolver/StateImpl/addDisabledInfo(org.eclipse.osgi.service.resolver.DisabledInfo)#org/eclipse/osgi/util/NLS/bind(java.lang.String,java.lang.Object)
org/eclipse/osgi/internal/resolver/StateImpl/addDisabledInfo(org.eclipse.osgi.service.resolver.DisabledInfo)#java/util/Map/get(java.lang.Object)
org/eclipse/osgi/internal/resolver/StateImpl/addDisabledInfo(org.eclipse.osgi.service.resolver.DisabledInfo)#java/util/Iterator/next()
org/eclipse/osgi/internal/resolver/StateImpl/addDisabledInfo(org.eclipse.osgi.service.resolver.DisabledInfo)#java/lang/String/equals(java.lang.Object)
org/eclipse/osgi/internal/resolver/StateImpl/addDisabledInfo(org.eclipse.osgi.service.resolver.DisabledInfo)#java/util/List/add(java.lang.Object)
org/eclipse/osgi/internal/resolver/StateImpl/addDisabledInfo(org.eclipse.osgi.service.resolver.DisabledInfo)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/eclipse/osgi/internal/resolver/StateImpl/addDisabledInfo(org.eclipse.osgi.service.resolver.DisabledInfo)#java/util/List/iterator()
org/eclipse/osgi/internal/resolver/StateImpl/addDisabledInfo(org.eclipse.osgi.service.resolver.DisabledInfo)#java/util/List/remove(java.lang.Object)
org/eclipse/osgi/internal/resolver/StateImpl/addDisabledInfo(org.eclipse.osgi.service.resolver.DisabledInfo)#org/eclipse/osgi/service/resolver/DisabledInfo/getPolicyName()
org/eclipse/osgi/internal/resolver/StateImpl/addDisabledInfo(org.eclipse.osgi.service.resolver.DisabledInfo)#org/eclipse/osgi/service/resolver/BundleDescription/getBundleId()
org/eclipse/osgi/internal/resolver/StateImpl/addDisabledInfo(org.eclipse.osgi.service.resolver.DisabledInfo)#java/util/Iterator/hasNext()
org/eclipse/osgi/internal/resolver/StateImpl/addDisabledInfo(org.eclipse.osgi.service.resolver.DisabledInfo)#org/eclipse/osgi/service/resolver/DisabledInfo/getBundle()
org/eclipse/osgi/internal/resolver/StateImpl/getBundles(java.lang.String)#org/eclipse/osgi/service/resolver/BundleDescription/getSymbolicName()
org/eclipse/osgi/internal/resolver/StateImpl/getBundles(java.lang.String)#java/util/ArrayList/ArrayList()
org/eclipse/osgi/internal/resolver/StateImpl/getBundles(java.lang.String)#java/util/Iterator/hasNext()
org/eclipse/osgi/internal/resolver/StateImpl/getBundles(java.lang.String)#java/util/List/size()
org/eclipse/osgi/internal/resolver/StateImpl/getBundles(java.lang.String)#java/util/Iterator/next()
org/eclipse/osgi/internal/resolver/StateImpl/getBundles(java.lang.String)#java/util/List/add(java.lang.Object)
org/eclipse/osgi/internal/resolver/StateImpl/getBundles(java.lang.String)#org/eclipse/osgi/framework/util/KeyedHashSet/iterator()
org/eclipse/osgi/internal/resolver/StateImpl/getBundles(java.lang.String)#java/lang/String/equals(java.lang.Object)
org/eclipse/osgi/internal/resolver/StateImpl/getBundles(java.lang.String)#java/util/List/toArray(java.lang.Object[])
org/eclipse/osgi/compatibility/state/PlatformAdminImpl/createSystemState()#org/osgi/framework/BundleContext/addBundleListener(org.osgi.framework.BundleListener)
org/eclipse/osgi/compatibility/state/PlatformAdminImpl/createSystemState()#java/util/Iterator/hasNext()
org/eclipse/osgi/compatibility/state/PlatformAdminImpl/createSystemState()#org/eclipse/osgi/service/resolver/State/setTimeStamp(long)
org/eclipse/osgi/compatibility/state/PlatformAdminImpl/createSystemState()#org/eclipse/osgi/container/ModuleDatabase/getRevisionsTimestamp()
org/eclipse/osgi/compatibility/state/PlatformAdminImpl/createSystemState()#org/eclipse/osgi/internal/framework/EquinoxConfiguration/getInitialConfig()
org/eclipse/osgi/compatibility/state/PlatformAdminImpl/createSystemState()#java/util/Iterator/next()
org/eclipse/osgi/compatibility/state/PlatformAdminImpl/createSystemState()#org/eclipse/osgi/container/ModuleDatabase/readUnlock()
org/eclipse/osgi/compatibility/state/PlatformAdminImpl/createSystemState()#org/osgi/framework/BundleContext/addFrameworkListener(org.osgi.framework.FrameworkListener)
org/eclipse/osgi/compatibility/state/PlatformAdminImpl/createSystemState()#java/util/List/iterator()
org/eclipse/osgi/compatibility/state/PlatformAdminImpl/createSystemState()#org/eclipse/osgi/service/resolver/State/addBundle(org.eclipse.osgi.service.resolver.BundleDescription)
org/eclipse/osgi/compatibility/state/PlatformAdminImpl/createSystemState()#org/eclipse/osgi/container/ModuleDatabase/readLock()
org/eclipse/osgi/compatibility/state/PlatformAdminImpl/createSystemState()#org/eclipse/osgi/service/resolver/StateObjectFactory/createState(boolean)
org/eclipse/osgi/compatibility/state/PlatformAdminImpl/createSystemState()#org/eclipse/osgi/container/ModuleContainer/getModules()
org/eclipse/osgi/compatibility/state/PlatformAdminImpl/createSystemState()#org/eclipse/osgi/service/resolver/State/setResolverHookFactory(org.osgi.framework.hooks.resolver.ResolverHookFactory)
org/eclipse/osgi/compatibility/state/PlatformAdminImpl/createSystemState()#org/eclipse/osgi/service/resolver/State/resolve()
org/eclipse/osgi/compatibility/state/PlatformAdminImpl/createSystemState()#org/eclipse/osgi/internal/framework/EquinoxContainer/getConfiguration()
org/eclipse/osgi/compatibility/state/PlatformAdminImpl/createSystemState()#org/eclipse/osgi/service/resolver/State/setPlatformProperties(java.util.Dictionary)
org/eclipse/osgi/compatibility/state/PlatformAdminImpl/createSystemState()#org/eclipse/osgi/container/Module/getCurrentRevision()
org/eclipse/osgi/compatibility/state/PlatformAdminImpl/createSystemState()#org/eclipse/osgi/storage/Storage/getModuleDatabase()
org/eclipse/osgi/compatibility/state/PlatformAdminImpl/createSystemState()#org/eclipse/osgi/internal/framework/EquinoxContainer/getStorage()
org/eclipse/osgi/compatibility/state/PlatformAdminImpl/createSystemState()#org/eclipse/osgi/storage/Storage/getModuleContainer()
org/eclipse/osgi/internal/resolver/StateObjectFactoryImpl/createNativeCodeSpecification(org.eclipse.osgi.service.resolver.NativeCodeSpecification)#org/eclipse/osgi/service/resolver/NativeCodeDescription/getOSVersions()
org/eclipse/osgi/internal/resolver/StateObjectFactoryImpl/createNativeCodeSpecification(org.eclipse.osgi.service.resolver.NativeCodeSpecification)#org/eclipse/osgi/internal/resolver/NativeCodeSpecificationImpl/setName(java.lang.String)
org/eclipse/osgi/internal/resolver/StateObjectFactoryImpl/createNativeCodeSpecification(org.eclipse.osgi.service.resolver.NativeCodeSpecification)#org/eclipse/osgi/service/resolver/NativeCodeDescription/getLanguages()
org/eclipse/osgi/internal/resolver/StateObjectFactoryImpl/createNativeCodeSpecification(org.eclipse.osgi.service.resolver.NativeCodeSpecification)#org/eclipse/osgi/service/resolver/NativeCodeSpecification/getName()
org/eclipse/osgi/internal/resolver/StateObjectFactoryImpl/createNativeCodeSpecification(org.eclipse.osgi.service.resolver.NativeCodeSpecification)#org/eclipse/osgi/service/resolver/NativeCodeDescription/getFilter()
org/eclipse/osgi/internal/resolver/StateObjectFactoryImpl/createNativeCodeSpecification(org.eclipse.osgi.service.resolver.NativeCodeSpecification)#org/eclipse/osgi/internal/resolver/NativeCodeDescriptionImpl/setName(java.lang.String)
org/eclipse/osgi/internal/resolver/StateObjectFactoryImpl/createNativeCodeSpecification(org.eclipse.osgi.service.resolver.NativeCodeSpecification)#org/eclipse/osgi/service/resolver/NativeCodeDescription/getProcessors()
org/eclipse/osgi/internal/resolver/StateObjectFactoryImpl/createNativeCodeSpecification(org.eclipse.osgi.service.resolver.NativeCodeSpecification)#org/eclipse/osgi/service/resolver/NativeCodeSpecification/getPossibleSuppliers()
org/eclipse/osgi/internal/resolver/StateObjectFactoryImpl/createNativeCodeSpecification(org.eclipse.osgi.service.resolver.NativeCodeSpecification)#org/eclipse/osgi/service/resolver/NativeCodeDescription/getNativePaths()
org/eclipse/osgi/internal/resolver/StateObjectFactoryImpl/createNativeCodeSpecification(org.eclipse.osgi.service.resolver.NativeCodeSpecification)#org/eclipse/osgi/service/resolver/NativeCodeDescription/getName()
org/eclipse/osgi/internal/resolver/StateObjectFactoryImpl/createNativeCodeSpecification(org.eclipse.osgi.service.resolver.NativeCodeSpecification)#org/eclipse/osgi/service/resolver/NativeCodeSpecification/isOptional()
org/eclipse/osgi/internal/resolver/StateObjectFactoryImpl/createNativeCodeSpecification(org.eclipse.osgi.service.resolver.NativeCodeSpecification)#org/osgi/framework/Filter/toString()
org/eclipse/osgi/internal/resolver/StateObjectFactoryImpl/createNativeCodeSpecification(org.eclipse.osgi.service.resolver.NativeCodeSpecification)#org/eclipse/osgi/service/resolver/NativeCodeDescription/getOSNames()
org/eclipse/osgi/internal/resolver/StateObjectFactoryImpl/createBundleSpecifications(java.lang.String)#java/util/ArrayList/ArrayList(int)
org/eclipse/osgi/internal/resolver/StateObjectFactoryImpl/createBundleSpecifications(java.lang.String)#java/lang/IllegalArgumentException/initCause(java.lang.Throwable)
org/eclipse/osgi/internal/resolver/StateObjectFactoryImpl/createBundleSpecifications(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/eclipse/osgi/internal/resolver/StateObjectFactoryImpl/createBundleSpecifications(java.lang.String)#java/util/Collections/emptyList()
org/eclipse/osgi/internal/resolver/StateObjectFactoryImpl/createBundleSpecifications(java.lang.String)#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/eclipse/osgi/internal/resolver/StateObjectFactoryImpl/createBundleSpecifications(java.lang.String)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/eclipse/osgi/internal/resolver/StateObjectFactoryImpl/createBundleSpecifications(java.lang.String)#org/eclipse/osgi/util/ManifestElement/parseHeader(java.lang.String,java.lang.String)
org/eclipse/osgi/internal/resolver/StateObjectFactoryImpl/createBundleSpecifications(java.lang.String)#java/util/List/add(java.lang.Object)
org/eclipse/osgi/internal/resolver/StateObjectFactoryImpl/createBundleSpecifications(java.lang.String)#java/lang/StringBuilder/toString()
org/eclipse/osgi/internal/resolver/StateObjectFactoryImpl/createBundleDescription(long,java.lang.String,org.osgi.framework.Version,java.lang.String,org.eclipse.osgi.service.resolver.BundleSpecification[],org.eclipse.osgi.service.resolver.HostSpecification,org.eclipse.osgi.service.resolver.ImportPackageSpecification[],org.eclipse.osgi.service.resolver.ExportPackageDescription[],java.lang.String,java.lang.String[],org.eclipse.osgi.service.resolver.GenericSpecification[],org.eclipse.osgi.service.resolver.GenericDescription[],org.eclipse.osgi.service.resolver.NativeCodeSpecification)#java/lang/IllegalArgumentException/initCause(java.lang.Throwable)
org/eclipse/osgi/internal/resolver/StateObjectFactoryImpl/createBundleDescription(long,java.lang.String,org.osgi.framework.Version,java.lang.String,org.eclipse.osgi.service.resolver.BundleSpecification[],org.eclipse.osgi.service.resolver.HostSpecification,org.eclipse.osgi.service.resolver.ImportPackageSpecification[],org.eclipse.osgi.service.resolver.ExportPackageDescription[],java.lang.String,java.lang.String[],org.eclipse.osgi.service.resolver.GenericSpecification[],org.eclipse.osgi.service.resolver.GenericDescription[],org.eclipse.osgi.service.resolver.NativeCodeSpecification)#org/eclipse/osgi/util/ManifestElement/getDirective(java.lang.String)
org/eclipse/osgi/internal/resolver/StateObjectFactoryImpl/createBundleDescription(long,java.lang.String,org.osgi.framework.Version,java.lang.String,org.eclipse.osgi.service.resolver.BundleSpecification[],org.eclipse.osgi.service.resolver.HostSpecification,org.eclipse.osgi.service.resolver.ImportPackageSpecification[],org.eclipse.osgi.service.resolver.ExportPackageDescription[],java.lang.String,java.lang.String[],org.eclipse.osgi.service.resolver.GenericSpecification[],org.eclipse.osgi.service.resolver.GenericDescription[],org.eclipse.osgi.service.resolver.NativeCodeSpecification)#java/lang/StringBuilder/append(java.lang.String)
org/eclipse/osgi/internal/resolver/StateObjectFactoryImpl/createBundleDescription(long,java.lang.String,org.osgi.framework.Version,java.lang.String,org.eclipse.osgi.service.resolver.BundleSpecification[],org.eclipse.osgi.service.resolver.HostSpecification,org.eclipse.osgi.service.resolver.ImportPackageSpecification[],org.eclipse.osgi.service.resolver.ExportPackageDescription[],java.lang.String,java.lang.String[],org.eclipse.osgi.service.resolver.GenericSpecification[],org.eclipse.osgi.service.resolver.GenericDescription[],org.eclipse.osgi.service.resolver.NativeCodeSpecification)#java/util/List/isEmpty()
org/eclipse/osgi/internal/resolver/StateObjectFactoryImpl/createBundleDescription(long,java.lang.String,org.osgi.framework.Version,java.lang.String,org.eclipse.osgi.service.resolver.BundleSpecification[],org.eclipse.osgi.service.resolver.HostSpecification,org.eclipse.osgi.service.resolver.ImportPackageSpecification[],org.eclipse.osgi.service.resolver.ExportPackageDescription[],java.lang.String,java.lang.String[],org.eclipse.osgi.service.resolver.GenericSpecification[],org.eclipse.osgi.service.resolver.GenericDescription[],org.eclipse.osgi.service.resolver.NativeCodeSpecification)#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/eclipse/osgi/internal/resolver/StateObjectFactoryImpl/createBundleDescription(long,java.lang.String,org.osgi.framework.Version,java.lang.String,org.eclipse.osgi.service.resolver.BundleSpecification[],org.eclipse.osgi.service.resolver.HostSpecification,org.eclipse.osgi.service.resolver.ImportPackageSpecification[],org.eclipse.osgi.service.resolver.ExportPackageDescription[],java.lang.String,java.lang.String[],org.eclipse.osgi.service.resolver.GenericSpecification[],org.eclipse.osgi.service.resolver.GenericDescription[],org.eclipse.osgi.service.resolver.NativeCodeSpecification)#java/lang/StringBuilder/toString()
org/eclipse/osgi/internal/resolver/StateObjectFactoryImpl/createBundleDescription(long,java.lang.String,org.osgi.framework.Version,java.lang.String,org.eclipse.osgi.service.resolver.BundleSpecification[],org.eclipse.osgi.service.resolver.HostSpecification,org.eclipse.osgi.service.resolver.ImportPackageSpecification[],org.eclipse.osgi.service.resolver.ExportPackageDescription[],java.lang.String,java.lang.String[],org.eclipse.osgi.service.resolver.GenericSpecification[],org.eclipse.osgi.service.resolver.GenericDescription[],org.eclipse.osgi.service.resolver.NativeCodeSpecification)#java/util/ArrayList/ArrayList(int)
org/eclipse/osgi/internal/resolver/StateObjectFactoryImpl/createBundleDescription(long,java.lang.String,org.osgi.framework.Version,java.lang.String,org.eclipse.osgi.service.resolver.BundleSpecification[],org.eclipse.osgi.service.resolver.HostSpecification,org.eclipse.osgi.service.resolver.ImportPackageSpecification[],org.eclipse.osgi.service.resolver.ExportPackageDescription[],java.lang.String,java.lang.String[],org.eclipse.osgi.service.resolver.GenericSpecification[],org.eclipse.osgi.service.resolver.GenericDescription[],org.eclipse.osgi.service.resolver.NativeCodeSpecification)#org/eclipse/osgi/internal/resolver/BundleDescriptionImpl/setVersion(org.osgi.framework.Version)
org/eclipse/osgi/internal/resolver/StateObjectFactoryImpl/createBundleDescription(long,java.lang.String,org.osgi.framework.Version,java.lang.String,org.eclipse.osgi.service.resolver.BundleSpecification[],org.eclipse.osgi.service.resolver.HostSpecification,org.eclipse.osgi.service.resolver.ImportPackageSpecification[],org.eclipse.osgi.service.resolver.ExportPackageDescription[],java.lang.String,java.lang.String[],org.eclipse.osgi.service.resolver.GenericSpecification[],org.eclipse.osgi.service.resolver.GenericDescription[],org.eclipse.osgi.service.resolver.NativeCodeSpecification)#org/eclipse/osgi/util/ManifestElement/getValue()
org/eclipse/osgi/internal/resolver/StateObjectFactoryImpl/createBundleDescription(long,java.lang.String,org.osgi.framework.Version,java.lang.String,org.eclipse.osgi.service.resolver.BundleSpecification[],org.eclipse.osgi.service.resolver.HostSpecification,org.eclipse.osgi.service.resolver.ImportPackageSpecification[],org.eclipse.osgi.service.resolver.ExportPackageDescription[],java.lang.String,java.lang.String[],org.eclipse.osgi.service.resolver.GenericSpecification[],org.eclipse.osgi.service.resolver.GenericDescription[],org.eclipse.osgi.service.resolver.NativeCodeSpecification)#java/util/List/size()
org/eclipse/osgi/internal/resolver/StateObjectFactoryImpl/createBundleDescription(long,java.lang.String,org.osgi.framework.Version,java.lang.String,org.eclipse.osgi.service.resolver.BundleSpecification[],org.eclipse.osgi.service.resolver.HostSpecification,org.eclipse.osgi.service.resolver.ImportPackageSpecification[],org.eclipse.osgi.service.resolver.ExportPackageDescription[],java.lang.String,java.lang.String[],org.eclipse.osgi.service.resolver.GenericSpecification[],org.eclipse.osgi.service.resolver.GenericDescription[],org.eclipse.osgi.service.resolver.NativeCodeSpecification)#java/lang/String/equals(java.lang.Object)
org/eclipse/osgi/internal/resolver/StateObjectFactoryImpl/createBundleDescription(long,java.lang.String,org.osgi.framework.Version,java.lang.String,org.eclipse.osgi.service.resolver.BundleSpecification[],org.eclipse.osgi.service.resolver.HostSpecification,org.eclipse.osgi.service.resolver.ImportPackageSpecification[],org.eclipse.osgi.service.resolver.ExportPackageDescription[],java.lang.String,java.lang.String[],org.eclipse.osgi.service.resolver.GenericSpecification[],org.eclipse.osgi.service.resolver.GenericDescription[],org.eclipse.osgi.service.resolver.NativeCodeSpecification)#java/util/List/toArray(java.lang.Object[])
org/eclipse/osgi/internal/resolver/StateObjectFactoryImpl/createBundleDescription(long,java.lang.String,org.osgi.framework.Version,java.lang.String,org.eclipse.osgi.service.resolver.BundleSpecification[],org.eclipse.osgi.service.resolver.HostSpecification,org.eclipse.osgi.service.resolver.ImportPackageSpecification[],org.eclipse.osgi.service.resolver.ExportPackageDescription[],java.lang.String,java.lang.String[],org.eclipse.osgi.service.resolver.GenericSpecification[],org.eclipse.osgi.service.resolver.GenericDescription[],org.eclipse.osgi.service.resolver.NativeCodeSpecification)#org/eclipse/osgi/util/ManifestElement/parseHeader(java.lang.String,java.lang.String)
org/eclipse/osgi/internal/resolver/StateObjectFactoryImpl/createBundleDescription(long,java.lang.String,org.osgi.framework.Version,java.lang.String,org.eclipse.osgi.service.resolver.BundleSpecification[],org.eclipse.osgi.service.resolver.HostSpecification,org.eclipse.osgi.service.resolver.ImportPackageSpecification[],org.eclipse.osgi.service.resolver.ExportPackageDescription[],java.lang.String,java.lang.String[],org.eclipse.osgi.service.resolver.GenericSpecification[],org.eclipse.osgi.service.resolver.GenericDescription[],org.eclipse.osgi.service.resolver.NativeCodeSpecification)#java/util/List/add(java.lang.Object)
org/eclipse/osgi/internal/resolver/StateObjectFactoryImpl/createBundleDescription(long,java.lang.String,org.osgi.framework.Version,java.lang.String,org.eclipse.osgi.service.resolver.BundleSpecification[],org.eclipse.osgi.service.resolver.HostSpecification,org.eclipse.osgi.service.resolver.ImportPackageSpecification[],org.eclipse.osgi.service.resolver.ExportPackageDescription[],java.lang.String,java.lang.String[],org.eclipse.osgi.service.resolver.GenericSpecification[],org.eclipse.osgi.service.resolver.GenericDescription[],org.eclipse.osgi.service.resolver.NativeCodeSpecification)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/eclipse/osgi/internal/resolver/StateObjectFactoryImpl/createBundleDescription(long,java.lang.String,org.osgi.framework.Version,java.lang.String,org.eclipse.osgi.service.resolver.BundleSpecification[],org.eclipse.osgi.service.resolver.HostSpecification,org.eclipse.osgi.service.resolver.ImportPackageSpecification[],org.eclipse.osgi.service.resolver.ExportPackageDescription[],java.lang.String,java.lang.String[],org.eclipse.osgi.service.resolver.GenericSpecification[],org.eclipse.osgi.service.resolver.GenericDescription[],org.eclipse.osgi.service.resolver.NativeCodeSpecification)#org/eclipse/osgi/util/ManifestElement/getArrayFromList(java.lang.String)
org/eclipse/osgi/internal/resolver/StateObjectFactoryImpl/createHostSpecifications(java.lang.String)#java/util/ArrayList/ArrayList(int)
org/eclipse/osgi/internal/resolver/StateObjectFactoryImpl/createHostSpecifications(java.lang.String)#java/lang/IllegalArgumentException/initCause(java.lang.Throwable)
org/eclipse/osgi/internal/resolver/StateObjectFactoryImpl/createHostSpecifications(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/eclipse/osgi/internal/resolver/StateObjectFactoryImpl/createHostSpecifications(java.lang.String)#java/util/Collections/emptyList()
org/eclipse/osgi/internal/resolver/StateObjectFactoryImpl/createHostSpecifications(java.lang.String)#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/eclipse/osgi/internal/resolver/StateObjectFactoryImpl/createHostSpecifications(java.lang.String)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/eclipse/osgi/internal/resolver/StateObjectFactoryImpl/createHostSpecifications(java.lang.String)#java/lang/StringBuilder/toString()
org/eclipse/osgi/internal/resolver/StateObjectFactoryImpl/createHostSpecifications(java.lang.String)#org/eclipse/osgi/util/ManifestElement/parseHeader(java.lang.String,java.lang.String)
org/eclipse/osgi/internal/resolver/StateObjectFactoryImpl/createHostSpecifications(java.lang.String)#java/util/List/add(java.lang.Object)
org/eclipse/osgi/internal/resolver/StateObjectFactoryImpl/createBundleDescription(org.eclipse.osgi.service.resolver.BundleDescription)#org/eclipse/osgi/service/resolver/BundleDescription/getNativeCodeSpecification()
org/eclipse/osgi/internal/resolver/StateObjectFactoryImpl/createBundleDescription(org.eclipse.osgi.service.resolver.BundleDescription)#org/eclipse/osgi/service/resolver/BundleDescription/getImportPackages()
org/eclipse/osgi/internal/resolver/StateObjectFactoryImpl/createBundleDescription(org.eclipse.osgi.service.resolver.BundleDescription)#org/eclipse/osgi/service/resolver/BundleDescription/getGenericCapabilities()
org/eclipse/osgi/internal/resolver/StateObjectFactoryImpl/createBundleDescription(org.eclipse.osgi.service.resolver.BundleDescription)#org/eclipse/osgi/service/resolver/BundleDescription/getSymbolicName()
org/eclipse/osgi/internal/resolver/StateObjectFactoryImpl/createBundleDescription(org.eclipse.osgi.service.resolver.BundleDescription)#org/eclipse/osgi/service/resolver/BundleDescription/getBundleId()
org/eclipse/osgi/internal/resolver/StateObjectFactoryImpl/createBundleDescription(org.eclipse.osgi.service.resolver.BundleDescription)#org/eclipse/osgi/service/resolver/BundleDescription/getRequiredBundles()
org/eclipse/osgi/internal/resolver/StateObjectFactoryImpl/createBundleDescription(org.eclipse.osgi.service.resolver.BundleDescription)#org/eclipse/osgi/service/resolver/BundleDescription/getExportPackages()
org/eclipse/osgi/internal/resolver/StateObjectFactoryImpl/createBundleDescription(org.eclipse.osgi.service.resolver.BundleDescription)#org/eclipse/osgi/service/resolver/BundleDescription/getExecutionEnvironments()
org/eclipse/osgi/internal/resolver/StateObjectFactoryImpl/createBundleDescription(org.eclipse.osgi.service.resolver.BundleDescription)#org/eclipse/osgi/service/resolver/BundleDescription/getVersion()
org/eclipse/osgi/internal/resolver/StateObjectFactoryImpl/createBundleDescription(org.eclipse.osgi.service.resolver.BundleDescription)#org/eclipse/osgi/internal/resolver/BundleDescriptionImpl/setVersion(org.osgi.framework.Version)
org/eclipse/osgi/internal/resolver/StateObjectFactoryImpl/createBundleDescription(org.eclipse.osgi.service.resolver.BundleDescription)#org/eclipse/osgi/service/resolver/BundleDescription/dynamicFragments()
org/eclipse/osgi/internal/resolver/StateObjectFactoryImpl/createBundleDescription(org.eclipse.osgi.service.resolver.BundleDescription)#org/eclipse/osgi/service/resolver/BundleDescription/getHost()
org/eclipse/osgi/internal/resolver/StateObjectFactoryImpl/createBundleDescription(org.eclipse.osgi.service.resolver.BundleDescription)#org/eclipse/osgi/service/resolver/BundleDescription/attachFragments()
org/eclipse/osgi/internal/resolver/StateObjectFactoryImpl/createBundleDescription(org.eclipse.osgi.service.resolver.BundleDescription)#org/eclipse/osgi/service/resolver/BundleDescription/getPlatformFilter()
org/eclipse/osgi/internal/resolver/StateObjectFactoryImpl/createBundleDescription(org.eclipse.osgi.service.resolver.BundleDescription)#org/eclipse/osgi/service/resolver/BundleDescription/isSingleton()
org/eclipse/osgi/internal/resolver/StateObjectFactoryImpl/createBundleDescription(org.eclipse.osgi.service.resolver.BundleDescription)#org/eclipse/osgi/service/resolver/BundleDescription/getGenericRequires()
org/eclipse/osgi/internal/resolver/StateObjectFactoryImpl/createBundleDescription(org.eclipse.osgi.service.resolver.BundleDescription)#org/eclipse/osgi/service/resolver/BundleDescription/hasDynamicImports()
org/eclipse/osgi/internal/resolver/StateObjectFactoryImpl/createBundleDescription(org.eclipse.osgi.service.resolver.BundleDescription)#org/eclipse/osgi/service/resolver/BundleDescription/getLocation()
org/eclipse/osgi/internal/resolver/StateObjectFactoryImpl/createBundleDescription(org.eclipse.osgi.service.resolver.BundleDescription)#org/eclipse/osgi/service/resolver/BundleDescription/getAttributes()
org/eclipse/osgi/internal/resolver/RequiresHolder/determineRequiresVisibility(org.eclipse.osgi.service.resolver.BundleDescription)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/eclipse/osgi/internal/resolver/RequiresHolder/determineRequiresVisibility(org.eclipse.osgi.service.resolver.BundleDescription)#org/eclipse/osgi/service/resolver/BundleDescription/getRequiredBundles()
org/eclipse/osgi/internal/resolver/RequiresHolder/determineRequiresVisibility(org.eclipse.osgi.service.resolver.BundleDescription)#java/util/Set/size()
org/eclipse/osgi/internal/resolver/RequiresHolder/determineRequiresVisibility(org.eclipse.osgi.service.resolver.BundleDescription)#java/util/Set/contains(java.lang.Object)
org/eclipse/osgi/internal/resolver/RequiresHolder/determineRequiresVisibility(org.eclipse.osgi.service.resolver.BundleDescription)#org/eclipse/osgi/service/resolver/BundleDescription/getFragments()
org/eclipse/osgi/internal/resolver/RequiresHolder/determineRequiresVisibility(org.eclipse.osgi.service.resolver.BundleDescription)#org/eclipse/osgi/service/resolver/BundleSpecification/getSupplier()
org/eclipse/osgi/internal/resolver/RequiresHolder/determineRequiresVisibility(org.eclipse.osgi.service.resolver.BundleDescription)#java/util/Set/remove(java.lang.Object)
org/eclipse/osgi/internal/resolver/RequiresHolder/determineRequiresVisibility(org.eclipse.osgi.service.resolver.BundleDescription)#java/util/Set/add(java.lang.Object)
org/eclipse/osgi/internal/resolver/RequiresHolder/determineRequiresVisibility(org.eclipse.osgi.service.resolver.BundleDescription)#org/eclipse/osgi/service/resolver/BundleSpecification/isExported()
org/eclipse/osgi/internal/resolver/RequiresHolder/determineRequiresVisibility(org.eclipse.osgi.service.resolver.BundleDescription)#java/lang/Boolean/Boolean(boolean)
org/eclipse/osgi/internal/resolver/RequiresHolder/determineRequiresVisibility(org.eclipse.osgi.service.resolver.BundleDescription)#java/util/HashSet/HashSet()
org/eclipse/osgi/internal/module/GroupingChecker/isConsistentInternal(org.eclipse.osgi.internal.module.ResolverBundle,org.eclipse.osgi.internal.module.ResolverExport,boolean,java.util.List)#org/eclipse/osgi/internal/module/GroupingChecker$PackageRoots/addConflicts(org.eclipse.osgi.internal.module.ResolverBundle,java.lang.String,java.util.List,java.util.List)
org/eclipse/osgi/internal/module/GroupingChecker/isConsistentInternal(org.eclipse.osgi.internal.module.ResolverBundle,org.eclipse.osgi.internal.module.ResolverExport,boolean,java.util.List)#org/eclipse/osgi/internal/module/GroupingChecker$PackageRoots/isConsistentClassSpace(org.eclipse.osgi.internal.module.ResolverBundle,java.util.List,java.util.List)
org/eclipse/osgi/internal/module/GroupingChecker/isConsistentInternal(org.eclipse.osgi.internal.module.ResolverBundle,org.eclipse.osgi.internal.module.ResolverExport,boolean,java.util.List)#java/util/Map/get(java.lang.Object)
org/eclipse/osgi/internal/module/GroupingChecker/isConsistentInternal(org.eclipse.osgi.internal.module.ResolverBundle,org.eclipse.osgi.internal.module.ResolverExport,boolean,java.util.List)#org/eclipse/osgi/internal/module/GroupingChecker$PackageRoots/isConsistentClassSpace(org.eclipse.osgi.internal.module.GroupingChecker$PackageRoots,org.eclipse.osgi.internal.module.ResolverBundle,java.util.List,java.util.List)
org/eclipse/osgi/internal/module/GroupingChecker/isConsistentInternal(org.eclipse.osgi.internal.module.ResolverBundle,org.eclipse.osgi.internal.module.ResolverExport,boolean,java.util.List)#java/lang/String/equals(java.lang.Object)
org/eclipse/osgi/internal/module/GroupingChecker/isConsistentInternal(org.eclipse.osgi.internal.module.ResolverBundle,org.eclipse.osgi.internal.module.ResolverExport,boolean,java.util.List)#java/util/Collection/iterator()
org/eclipse/osgi/internal/module/GroupingChecker/isConsistentInternal(org.eclipse.osgi.internal.module.ResolverBundle,org.eclipse.osgi.internal.module.ResolverExport,boolean,java.util.List)#java/util/Iterator/hasNext()
org/eclipse/osgi/internal/module/GroupingChecker/isConsistentInternal(org.eclipse.osgi.internal.module.ResolverBundle,org.eclipse.osgi.internal.module.ResolverExport,boolean,java.util.List)#org/eclipse/osgi/internal/module/ResolverExport/getName()
org/eclipse/osgi/internal/module/GroupingChecker/isConsistentInternal(org.eclipse.osgi.internal.module.ResolverBundle,org.eclipse.osgi.internal.module.ResolverExport,boolean,java.util.List)#java/util/Map/values()
org/eclipse/osgi/internal/module/GroupingChecker/isConsistentInternal(org.eclipse.osgi.internal.module.ResolverBundle,org.eclipse.osgi.internal.module.ResolverExport,boolean,java.util.List)#java/util/Iterator/next()
org/eclipse/osgi/internal/module/GroupingChecker/createPackageRoots(org.eclipse.osgi.internal.module.ResolverBundle,java.lang.String,java.util.List)#org/eclipse/osgi/internal/module/BundleConstraint/getVersionConstraint()
org/eclipse/osgi/internal/module/GroupingChecker/createPackageRoots(org.eclipse.osgi.internal.module.ResolverBundle,java.lang.String,java.util.List)#java/util/ArrayList/ArrayList(int)
org/eclipse/osgi/internal/module/GroupingChecker/createPackageRoots(org.eclipse.osgi.internal.module.ResolverBundle,java.lang.String,java.util.List)#org/eclipse/osgi/service/resolver/BundleDescription/getResolvedImports()
org/eclipse/osgi/internal/module/GroupingChecker/createPackageRoots(org.eclipse.osgi.internal.module.ResolverBundle,java.lang.String,java.util.List)#org/eclipse/osgi/service/resolver/BundleDescription/isResolved()
org/eclipse/osgi/internal/module/GroupingChecker/createPackageRoots(org.eclipse.osgi.internal.module.ResolverBundle,java.lang.String,java.util.List)#org/eclipse/osgi/internal/module/VersionHashMap/get(java.lang.Object)
org/eclipse/osgi/internal/module/GroupingChecker/createPackageRoots(org.eclipse.osgi.internal.module.ResolverBundle,java.lang.String,java.util.List)#org/eclipse/osgi/service/resolver/ExportPackageDescription/getName()
org/eclipse/osgi/internal/module/GroupingChecker/createPackageRoots(org.eclipse.osgi.internal.module.ResolverBundle,java.lang.String,java.util.List)#org/eclipse/osgi/internal/module/GroupingChecker$PackageRoots/superSet(org.eclipse.osgi.internal.module.GroupingChecker$PackageRoots)
org/eclipse/osgi/internal/module/GroupingChecker/createPackageRoots(org.eclipse.osgi.internal.module.ResolverBundle,java.lang.String,java.util.List)#org/eclipse/osgi/internal/module/GroupingChecker$PackageRoots/PackageRoots(org.eclipse.osgi.internal.module.GroupingChecker,java.lang.String)
org/eclipse/osgi/internal/module/GroupingChecker/createPackageRoots(org.eclipse.osgi.internal.module.ResolverBundle,java.lang.String,java.util.List)#java/util/List/add(java.lang.Object)
org/eclipse/osgi/internal/module/GroupingChecker/createPackageRoots(org.eclipse.osgi.internal.module.ResolverBundle,java.lang.String,java.util.List)#java/util/List/contains(java.lang.Object)
org/eclipse/osgi/internal/module/GroupingChecker/createPackageRoots(org.eclipse.osgi.internal.module.ResolverBundle,java.lang.String,java.util.List)#java/util/List/iterator()
org/eclipse/osgi/internal/module/GroupingChecker/createPackageRoots(org.eclipse.osgi.internal.module.ResolverBundle,java.lang.String,java.util.List)#org/eclipse/osgi/internal/module/ResolverImport/getSelectedSupplier()
org/eclipse/osgi/internal/module/GroupingChecker/createPackageRoots(org.eclipse.osgi.internal.module.ResolverBundle,java.lang.String,java.util.List)#org/eclipse/osgi/service/resolver/ExportPackageDescription/getExporter()
org/eclipse/osgi/internal/module/GroupingChecker/createPackageRoots(org.eclipse.osgi.internal.module.ResolverBundle,java.lang.String,java.util.List)#java/util/Iterator/hasNext()
org/eclipse/osgi/internal/module/GroupingChecker/createPackageRoots(org.eclipse.osgi.internal.module.ResolverBundle,java.lang.String,java.util.List)#java/util/List/size()
org/eclipse/osgi/internal/module/GroupingChecker/createPackageRoots(org.eclipse.osgi.internal.module.ResolverBundle,java.lang.String,java.util.List)#org/eclipse/osgi/internal/module/BundleConstraint/getSelectedSupplier()
org/eclipse/osgi/internal/module/GroupingChecker/createPackageRoots(org.eclipse.osgi.internal.module.ResolverBundle,java.lang.String,java.util.List)#org/eclipse/osgi/internal/module/GroupingChecker$PackageRoots/addRoot(org.eclipse.osgi.internal.module.ResolverExport)
org/eclipse/osgi/internal/module/GroupingChecker/createPackageRoots(org.eclipse.osgi.internal.module.ResolverBundle,java.lang.String,java.util.List)#java/util/Iterator/next()
org/eclipse/osgi/internal/module/GroupingChecker/createPackageRoots(org.eclipse.osgi.internal.module.ResolverBundle,java.lang.String,java.util.List)#java/lang/String/equals(java.lang.Object)
org/eclipse/osgi/internal/module/GroupingChecker/createPackageRoots(org.eclipse.osgi.internal.module.ResolverBundle,java.lang.String,java.util.List)#java/util/List/toArray(java.lang.Object[])
org/eclipse/osgi/internal/module/GroupingChecker/createPackageRoots(org.eclipse.osgi.internal.module.ResolverBundle,java.lang.String,java.util.List)#org/eclipse/osgi/internal/module/GroupingChecker$PackageRoots/merge(org.eclipse.osgi.internal.module.GroupingChecker$PackageRoots)
org/eclipse/osgi/internal/module/GroupingChecker/createPackageRoots(org.eclipse.osgi.internal.module.ResolverBundle,java.lang.String,java.util.List)#java/util/List/get(int)
org/eclipse/osgi/internal/module/GroupingChecker/createPackageRoots(org.eclipse.osgi.internal.module.ResolverBundle,java.lang.String,java.util.List)#org/eclipse/osgi/service/resolver/BundleSpecification/isExported()
org/eclipse/osgi/internal/module/GroupingChecker/populateRoots(org.eclipse.osgi.internal.module.ResolverBundle)#java/util/ArrayList/ArrayList(int)
org/eclipse/osgi/internal/module/GroupingChecker/populateRoots(org.eclipse.osgi.internal.module.ResolverBundle)#java/util/Iterator/hasNext()
org/eclipse/osgi/internal/module/GroupingChecker/populateRoots(org.eclipse.osgi.internal.module.ResolverBundle)#org/eclipse/osgi/service/resolver/BundleDescription/getResolvedImports()
org/eclipse/osgi/internal/module/GroupingChecker/populateRoots(org.eclipse.osgi.internal.module.ResolverBundle)#org/eclipse/osgi/internal/module/VersionHashMap/get(java.lang.Object)
org/eclipse/osgi/internal/module/GroupingChecker/populateRoots(org.eclipse.osgi.internal.module.ResolverBundle)#org/eclipse/osgi/service/resolver/ExportPackageDescription/getName()
org/eclipse/osgi/internal/module/GroupingChecker/populateRoots(org.eclipse.osgi.internal.module.ResolverBundle)#java/util/Map/containsKey(java.lang.Object)
org/eclipse/osgi/internal/module/GroupingChecker/populateRoots(org.eclipse.osgi.internal.module.ResolverBundle)#java/util/List/iterator()
org/eclipse/osgi/internal/module/GroupingChecker/populateRoots(org.eclipse.osgi.internal.module.ResolverBundle)#org/eclipse/osgi/internal/module/BundleConstraint/getSelectedSupplier()
org/eclipse/osgi/internal/module/GroupingChecker/populateRoots(org.eclipse.osgi.internal.module.ResolverBundle)#java/util/Iterator/next()
org/eclipse/osgi/internal/resolver/BundleDescriptionImpl/addDynamicImportPackages(org.eclipse.osgi.service.resolver.ImportPackageSpecification[])#java/util/Iterator/hasNext()
org/eclipse/osgi/internal/resolver/BundleDescriptionImpl/addDynamicImportPackages(org.eclipse.osgi.service.resolver.ImportPackageSpecification[])#java/util/Iterator/next()
org/eclipse/osgi/internal/resolver/BundleDescriptionImpl/addDynamicImportPackages(org.eclipse.osgi.service.resolver.ImportPackageSpecification[])#java/lang/String/equals(java.lang.Object)
org/eclipse/osgi/internal/resolver/BundleDescriptionImpl/addDynamicImportPackages(org.eclipse.osgi.service.resolver.ImportPackageSpecification[])#java/util/List/add(java.lang.Object)
org/eclipse/osgi/internal/resolver/BundleDescriptionImpl/addDynamicImportPackages(org.eclipse.osgi.service.resolver.ImportPackageSpecification[])#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/eclipse/osgi/internal/resolver/BundleDescriptionImpl/addDynamicImportPackages(org.eclipse.osgi.service.resolver.ImportPackageSpecification[])#java/util/List/iterator()
org/eclipse/osgi/internal/resolver/BundleDescriptionImpl/addDynamicImportPackages(org.eclipse.osgi.service.resolver.ImportPackageSpecification[])#java/util/ArrayList/ArrayList()
org/eclipse/osgi/internal/resolver/BundleDescriptionImpl/addDynamicImportPackages(org.eclipse.osgi.service.resolver.ImportPackageSpecification[])#org/eclipse/osgi/service/resolver/ImportPackageSpecification/getDirective(java.lang.String)
org/eclipse/osgi/internal/resolver/BundleDescriptionImpl/addDynamicImportPackages(org.eclipse.osgi.service.resolver.ImportPackageSpecification[])#org/eclipse/osgi/internal/resolver/ImportPackageSpecificationImpl/setBundle(org.eclipse.osgi.service.resolver.BundleDescription)
org/eclipse/osgi/internal/resolver/BundleDescriptionImpl/getDeclaredRequirements(java.lang.String)#java/util/ArrayList/ArrayList()
org/eclipse/osgi/internal/resolver/BundleDescriptionImpl/getDeclaredRequirements(java.lang.String)#org/eclipse/osgi/service/resolver/BundleSpecification/getRequirement()
org/eclipse/osgi/internal/resolver/BundleDescriptionImpl/getDeclaredRequirements(java.lang.String)#java/util/Collections/unmodifiableList(java.util.List)
org/eclipse/osgi/internal/resolver/BundleDescriptionImpl/getDeclaredRequirements(java.lang.String)#java/lang/String/equals(java.lang.Object)
org/eclipse/osgi/internal/resolver/BundleDescriptionImpl/getDeclaredRequirements(java.lang.String)#org/eclipse/osgi/service/resolver/GenericSpecification/getRequirement()
org/eclipse/osgi/internal/resolver/BundleDescriptionImpl/getDeclaredRequirements(java.lang.String)#org/eclipse/osgi/service/resolver/HostSpecification/getRequirement()
org/eclipse/osgi/internal/resolver/BundleDescriptionImpl/getDeclaredRequirements(java.lang.String)#java/util/List/add(java.lang.Object)
org/eclipse/osgi/internal/resolver/BundleDescriptionImpl/getDeclaredRequirements(java.lang.String)#org/eclipse/osgi/service/resolver/ImportPackageSpecification/getRequirement()
org/eclipse/osgi/internal/resolver/BundleDescriptionImpl/getDeclaredRequirements(java.lang.String)#org/eclipse/osgi/service/resolver/GenericSpecification/getType()
org/eclipse/osgi/internal/resolver/BundleDescriptionImpl/getDeclaredCapabilities(java.lang.String)#org/eclipse/osgi/internal/resolver/BundleDescriptionImpl/getCapability(java.lang.String)
org/eclipse/osgi/internal/resolver/BundleDescriptionImpl/getDeclaredCapabilities(java.lang.String)#java/util/ArrayList/ArrayList()
org/eclipse/osgi/internal/resolver/BundleDescriptionImpl/getDeclaredCapabilities(java.lang.String)#org/eclipse/osgi/internal/resolver/BundleDescriptionImpl/getCapability()
org/eclipse/osgi/internal/resolver/BundleDescriptionImpl/getDeclaredCapabilities(java.lang.String)#java/util/Collections/unmodifiableList(java.util.List)
org/eclipse/osgi/internal/resolver/BundleDescriptionImpl/getDeclaredCapabilities(java.lang.String)#java/lang/String/equals(java.lang.Object)
org/eclipse/osgi/internal/resolver/BundleDescriptionImpl/getDeclaredCapabilities(java.lang.String)#org/eclipse/osgi/service/resolver/GenericDescription/getType()
org/eclipse/osgi/internal/resolver/BundleDescriptionImpl/getDeclaredCapabilities(java.lang.String)#org/eclipse/osgi/service/resolver/ExportPackageDescription/getCapability()
org/eclipse/osgi/internal/resolver/BundleDescriptionImpl/getDeclaredCapabilities(java.lang.String)#org/eclipse/osgi/service/resolver/GenericDescription/getCapability()
org/eclipse/osgi/internal/resolver/BundleDescriptionImpl/getDeclaredCapabilities(java.lang.String)#java/util/List/add(java.lang.Object)
org/eclipse/osgi/internal/module/ResolverBundle/equivalentMaps(java.util.Map,java.util.Map,boolean)#java/lang/Object/equals(java.lang.Object)
org/eclipse/osgi/internal/module/ResolverBundle/equivalentMaps(java.util.Map,java.util.Map,boolean)#java/util/Iterator/hasNext()
org/eclipse/osgi/internal/module/ResolverBundle/equivalentMaps(java.util.Map,java.util.Map,boolean)#java/util/Map$Entry/getKey()
org/eclipse/osgi/internal/module/ResolverBundle/equivalentMaps(java.util.Map,java.util.Map,boolean)#java/util/Arrays/equals(java.lang.Object[],java.lang.Object[])
org/eclipse/osgi/internal/module/ResolverBundle/equivalentMaps(java.util.Map,java.util.Map,boolean)#java/util/Map/get(java.lang.Object)
org/eclipse/osgi/internal/module/ResolverBundle/equivalentMaps(java.util.Map,java.util.Map,boolean)#java/util/Map/size()
org/eclipse/osgi/internal/module/ResolverBundle/equivalentMaps(java.util.Map,java.util.Map,boolean)#java/util/Iterator/next()
org/eclipse/osgi/internal/module/ResolverBundle/equivalentMaps(java.util.Map,java.util.Map,boolean)#java/util/Set/iterator()
org/eclipse/osgi/internal/module/ResolverBundle/equivalentMaps(java.util.Map,java.util.Map,boolean)#java/util/Map/entrySet()
org/eclipse/osgi/internal/module/ResolverBundle/equivalentMaps(java.util.Map,java.util.Map,boolean)#java/lang/Object/getClass()
org/eclipse/osgi/internal/module/ResolverBundle/equivalentMaps(java.util.Map,java.util.Map,boolean)#java/util/Map$Entry/getValue()
org/eclipse/osgi/internal/module/ResolverBundle/hasUnresolvedConstraint(org.eclipse.osgi.internal.module.ResolverConstraint,org.eclipse.osgi.internal.module.ResolverBundle,org.eclipse.osgi.internal.module.ResolverBundle,org.eclipse.osgi.internal.module.ResolverImport[],org.eclipse.osgi.internal.module.BundleConstraint[],java.util.List,java.util.List)#org/eclipse/osgi/service/resolver/VersionConstraint/getBundle()
org/eclipse/osgi/internal/module/ResolverBundle/hasUnresolvedConstraint(org.eclipse.osgi.internal.module.ResolverConstraint,org.eclipse.osgi.internal.module.ResolverBundle,org.eclipse.osgi.internal.module.ResolverBundle,org.eclipse.osgi.internal.module.ResolverImport[],org.eclipse.osgi.internal.module.BundleConstraint[],java.util.List,java.util.List)#org/eclipse/osgi/internal/module/BundleConstraint/getVersionConstraint()
org/eclipse/osgi/internal/module/ResolverBundle/hasUnresolvedConstraint(org.eclipse.osgi.internal.module.ResolverConstraint,org.eclipse.osgi.internal.module.ResolverBundle,org.eclipse.osgi.internal.module.ResolverBundle,org.eclipse.osgi.internal.module.ResolverImport[],org.eclipse.osgi.internal.module.BundleConstraint[],java.util.List,java.util.List)#org/eclipse/osgi/service/resolver/BundleDescription/getRequiredBundles()
org/eclipse/osgi/internal/module/ResolverBundle/hasUnresolvedConstraint(org.eclipse.osgi.internal.module.ResolverConstraint,org.eclipse.osgi.internal.module.ResolverBundle,org.eclipse.osgi.internal.module.ResolverBundle,org.eclipse.osgi.internal.module.ResolverImport[],org.eclipse.osgi.internal.module.BundleConstraint[],java.util.List,java.util.List)#org/eclipse/osgi/service/resolver/ImportPackageSpecification/getName()
org/eclipse/osgi/internal/module/ResolverBundle/hasUnresolvedConstraint(org.eclipse.osgi.internal.module.ResolverConstraint,org.eclipse.osgi.internal.module.ResolverBundle,org.eclipse.osgi.internal.module.ResolverBundle,org.eclipse.osgi.internal.module.ResolverImport[],org.eclipse.osgi.internal.module.BundleConstraint[],java.util.List,java.util.List)#org/eclipse/osgi/service/resolver/VersionConstraint/getName()
org/eclipse/osgi/internal/module/ResolverBundle/hasUnresolvedConstraint(org.eclipse.osgi.internal.module.ResolverConstraint,org.eclipse.osgi.internal.module.ResolverBundle,org.eclipse.osgi.internal.module.ResolverBundle,org.eclipse.osgi.internal.module.ResolverImport[],org.eclipse.osgi.internal.module.BundleConstraint[],java.util.List,java.util.List)#java/lang/String/equals(java.lang.Object)
org/eclipse/osgi/internal/module/ResolverBundle/hasUnresolvedConstraint(org.eclipse.osgi.internal.module.ResolverConstraint,org.eclipse.osgi.internal.module.ResolverBundle,org.eclipse.osgi.internal.module.ResolverBundle,org.eclipse.osgi.internal.module.ResolverImport[],org.eclipse.osgi.internal.module.BundleConstraint[],java.util.List,java.util.List)#org/eclipse/osgi/internal/module/BundleConstraint/setVersionConstraint(org.eclipse.osgi.service.resolver.VersionConstraint)
org/eclipse/osgi/internal/module/ResolverBundle/hasUnresolvedConstraint(org.eclipse.osgi.internal.module.ResolverConstraint,org.eclipse.osgi.internal.module.ResolverBundle,org.eclipse.osgi.internal.module.ResolverBundle,org.eclipse.osgi.internal.module.ResolverImport[],org.eclipse.osgi.internal.module.BundleConstraint[],java.util.List,java.util.List)#org/eclipse/osgi/internal/module/BundleConstraint/getName()
org/eclipse/osgi/internal/module/ResolverBundle/hasUnresolvedConstraint(org.eclipse.osgi.internal.module.ResolverConstraint,org.eclipse.osgi.internal.module.ResolverBundle,org.eclipse.osgi.internal.module.ResolverBundle,org.eclipse.osgi.internal.module.ResolverImport[],org.eclipse.osgi.internal.module.BundleConstraint[],java.util.List,java.util.List)#java/util/List/add(java.lang.Object)
org/eclipse/osgi/internal/module/ResolverBundle/hasUnresolvedConstraint(org.eclipse.osgi.internal.module.ResolverConstraint,org.eclipse.osgi.internal.module.ResolverBundle,org.eclipse.osgi.internal.module.ResolverBundle,org.eclipse.osgi.internal.module.ResolverImport[],org.eclipse.osgi.internal.module.BundleConstraint[],java.util.List,java.util.List)#org/eclipse/osgi/internal/module/ResolverImport/setVersionConstraint(org.eclipse.osgi.service.resolver.VersionConstraint)
org/eclipse/osgi/internal/module/ResolverBundle/hasUnresolvedConstraint(org.eclipse.osgi.internal.module.ResolverConstraint,org.eclipse.osgi.internal.module.ResolverBundle,org.eclipse.osgi.internal.module.ResolverBundle,org.eclipse.osgi.internal.module.ResolverImport[],org.eclipse.osgi.internal.module.BundleConstraint[],java.util.List,java.util.List)#org/eclipse/osgi/service/resolver/BundleSpecification/getName()
org/eclipse/osgi/internal/module/ResolverBundle/hasUnresolvedConstraint(org.eclipse.osgi.internal.module.ResolverConstraint,org.eclipse.osgi.internal.module.ResolverBundle,org.eclipse.osgi.internal.module.ResolverBundle,org.eclipse.osgi.internal.module.ResolverImport[],org.eclipse.osgi.internal.module.BundleConstraint[],java.util.List,java.util.List)#org/eclipse/osgi/service/resolver/BundleDescription/getImportPackages()
org/eclipse/osgi/internal/module/ResolverBundle/hasUnresolvedConstraint(org.eclipse.osgi.internal.module.ResolverConstraint,org.eclipse.osgi.internal.module.ResolverBundle,org.eclipse.osgi.internal.module.ResolverBundle,org.eclipse.osgi.internal.module.ResolverImport[],org.eclipse.osgi.internal.module.BundleConstraint[],java.util.List,java.util.List)#org/eclipse/osgi/internal/module/ResolverImport/getVersionConstraint()
org/eclipse/osgi/internal/module/ResolverBundle/attachFragment(org.eclipse.osgi.internal.module.ResolverBundle,boolean)#org/eclipse/osgi/internal/module/BundleConstraint/getVersionConstraint()
org/eclipse/osgi/internal/module/ResolverBundle/attachFragment(org.eclipse.osgi.internal.module.ResolverBundle,boolean)#org/eclipse/osgi/service/resolver/BundleDescription/getRequiredBundles()
org/eclipse/osgi/internal/module/ResolverBundle/attachFragment(org.eclipse.osgi.internal.module.ResolverBundle,boolean)#java/util/ArrayList/toArray(java.lang.Object[])
org/eclipse/osgi/internal/module/ResolverBundle/attachFragment(org.eclipse.osgi.internal.module.ResolverBundle,boolean)#org/eclipse/osgi/internal/module/ResolverBundle/getName()
org/eclipse/osgi/internal/module/ResolverBundle/attachFragment(org.eclipse.osgi.internal.module.ResolverBundle,boolean)#org/eclipse/osgi/service/resolver/GenericSpecification/getType()
org/eclipse/osgi/internal/module/ResolverBundle/attachFragment(org.eclipse.osgi.internal.module.ResolverBundle,boolean)#java/util/ArrayList/iterator()
org/eclipse/osgi/internal/module/ResolverBundle/attachFragment(org.eclipse.osgi.internal.module.ResolverBundle,boolean)#java/util/ArrayList/ArrayList(int)
org/eclipse/osgi/internal/module/ResolverBundle/attachFragment(org.eclipse.osgi.internal.module.ResolverBundle,boolean)#org/eclipse/osgi/service/resolver/BundleDescription/getExportPackages()
org/eclipse/osgi/internal/module/ResolverBundle/attachFragment(org.eclipse.osgi.internal.module.ResolverBundle,boolean)#org/eclipse/osgi/service/resolver/HostSpecification/isMultiHost()
org/eclipse/osgi/internal/module/ResolverBundle/attachFragment(org.eclipse.osgi.internal.module.ResolverBundle,boolean)#java/util/Iterator/hasNext()
org/eclipse/osgi/internal/module/ResolverBundle/attachFragment(org.eclipse.osgi.internal.module.ResolverBundle,boolean)#java/util/ArrayList/isEmpty()
org/eclipse/osgi/internal/module/ResolverBundle/attachFragment(org.eclipse.osgi.internal.module.ResolverBundle,boolean)#org/eclipse/osgi/service/resolver/ImportPackageSpecification/getName()
org/eclipse/osgi/internal/module/ResolverBundle/attachFragment(org.eclipse.osgi.internal.module.ResolverBundle,boolean)#org/eclipse/osgi/service/resolver/BundleDescription/dynamicFragments()
org/eclipse/osgi/internal/module/ResolverBundle/attachFragment(org.eclipse.osgi.internal.module.ResolverBundle,boolean)#org/eclipse/osgi/service/resolver/BundleDescription/attachFragments()
org/eclipse/osgi/internal/module/ResolverBundle/attachFragment(org.eclipse.osgi.internal.module.ResolverBundle,boolean)#java/util/List/size()
org/eclipse/osgi/internal/module/ResolverBundle/attachFragment(org.eclipse.osgi.internal.module.ResolverBundle,boolean)#org/eclipse/osgi/service/resolver/ExportPackageDescription/getName()
org/eclipse/osgi/internal/module/ResolverBundle/attachFragment(org.eclipse.osgi.internal.module.ResolverBundle,boolean)#java/util/Iterator/next()
org/eclipse/osgi/internal/module/ResolverBundle/attachFragment(org.eclipse.osgi.internal.module.ResolverBundle,boolean)#java/util/HashMap/put(java.lang.Object,java.lang.Object)
org/eclipse/osgi/internal/module/ResolverBundle/attachFragment(org.eclipse.osgi.internal.module.ResolverBundle,boolean)#java/lang/String/equals(java.lang.Object)
org/eclipse/osgi/internal/module/ResolverBundle/attachFragment(org.eclipse.osgi.internal.module.ResolverBundle,boolean)#java/util/List/toArray(java.lang.Object[])
org/eclipse/osgi/internal/module/ResolverBundle/attachFragment(org.eclipse.osgi.internal.module.ResolverBundle,boolean)#java/util/ArrayList/add(java.lang.Object)
org/eclipse/osgi/internal/module/ResolverBundle/attachFragment(org.eclipse.osgi.internal.module.ResolverBundle,boolean)#java/util/ArrayList/size()
org/eclipse/osgi/internal/module/ResolverBundle/attachFragment(org.eclipse.osgi.internal.module.ResolverBundle,boolean)#org/eclipse/osgi/internal/module/BundleConstraint/addPossibleSupplier(org.eclipse.osgi.internal.module.VersionSupplier)
org/eclipse/osgi/internal/module/ResolverBundle/attachFragment(org.eclipse.osgi.internal.module.ResolverBundle,boolean)#org/eclipse/osgi/service/resolver/BundleSpecification/getName()
org/eclipse/osgi/internal/module/ResolverBundle/attachFragment(org.eclipse.osgi.internal.module.ResolverBundle,boolean)#org/eclipse/osgi/service/resolver/BundleDescription/getImportPackages()
org/eclipse/osgi/internal/module/ResolverBundle/attachFragment(org.eclipse.osgi.internal.module.ResolverBundle,boolean)#org/eclipse/osgi/service/resolver/BundleDescription/getGenericRequires()
org/eclipse/osgi/internal/module/ResolverBundle/attachFragment(org.eclipse.osgi.internal.module.ResolverBundle,boolean)#java/util/List/add(java.lang.Object)
org/eclipse/osgi/internal/module/ResolverBundle/attachFragment(org.eclipse.osgi.internal.module.ResolverBundle,boolean)#org/eclipse/osgi/internal/module/BundleConstraint/getNumPossibleSuppliers()
org/eclipse/osgi/internal/module/ResolverBundle/attachFragment(org.eclipse.osgi.internal.module.ResolverBundle,boolean)#org/eclipse/osgi/service/resolver/GenericDescription/getType()
org/eclipse/osgi/internal/module/ResolverBundle/attachFragment(org.eclipse.osgi.internal.module.ResolverBundle,boolean)#java/util/ArrayList/contains(java.lang.Object)
org/eclipse/osgi/internal/module/ResolverBundle/attachFragment(org.eclipse.osgi.internal.module.ResolverBundle,boolean)#org/eclipse/osgi/service/resolver/BundleDescription/getGenericCapabilities()
org/eclipse/osgi/internal/module/ResolverBundle/initialize(boolean)#org/eclipse/osgi/service/resolver/GenericSpecification/getType()
org/eclipse/osgi/internal/module/ResolverBundle/initialize(boolean)#java/util/ArrayList/ArrayList()
org/eclipse/osgi/internal/module/ResolverBundle/initialize(boolean)#java/util/ArrayList/ArrayList(int)
org/eclipse/osgi/internal/module/ResolverBundle/initialize(boolean)#org/eclipse/osgi/service/resolver/BundleDescription/getExportPackages()
org/eclipse/osgi/internal/module/ResolverBundle/initialize(boolean)#org/eclipse/osgi/service/resolver/BundleDescription/getHost()
org/eclipse/osgi/internal/module/ResolverBundle/initialize(boolean)#java/util/List/size()
org/eclipse/osgi/internal/module/ResolverBundle/initialize(boolean)#org/eclipse/osgi/service/resolver/GenericDescription/getType()
org/eclipse/osgi/internal/module/ResolverBundle/initialize(boolean)#java/util/List/add(int,java.lang.Object)
org/eclipse/osgi/internal/module/ResolverBundle/initialize(boolean)#org/eclipse/osgi/service/resolver/BundleDescription/getGenericCapabilities()
org/eclipse/osgi/internal/module/ResolverBundle/initialize(boolean)#org/eclipse/osgi/service/resolver/ImportPackageSpecification/getDirective(java.lang.String)
org/eclipse/osgi/internal/module/ResolverBundle/initialize(boolean)#org/eclipse/osgi/service/resolver/BundleDescription/getSelectedGenericCapabilities()
org/eclipse/osgi/internal/module/ResolverBundle/initialize(boolean)#org/eclipse/osgi/service/resolver/BundleDescription/getRequiredBundles()
org/eclipse/osgi/internal/module/ResolverBundle/initialize(boolean)#java/lang/String/equals(java.lang.Object)
org/eclipse/osgi/internal/module/ResolverBundle/initialize(boolean)#java/util/List/toArray(java.lang.Object[])
org/eclipse/osgi/internal/module/ResolverBundle/initialize(boolean)#org/eclipse/osgi/service/resolver/BundleDescription/getImportPackages()
org/eclipse/osgi/internal/module/ResolverBundle/initialize(boolean)#org/eclipse/osgi/service/resolver/BundleDescription/getSelectedExports()
org/eclipse/osgi/internal/module/ResolverBundle/initialize(boolean)#org/eclipse/osgi/service/resolver/BundleDescription/getGenericRequires()
org/eclipse/osgi/internal/module/ResolverBundle/initialize(boolean)#java/util/List/add(java.lang.Object)
org/eclipse/osgi/internal/module/ResolverBundle/constraintsConflict(org.eclipse.osgi.service.resolver.BundleDescription,org.eclipse.osgi.service.resolver.ImportPackageSpecification[],org.eclipse.osgi.service.resolver.BundleSpecification[],org.eclipse.osgi.service.resolver.GenericSpecification[])#org/eclipse/osgi/service/resolver/GenericSpecification/getType()
org/eclipse/osgi/internal/module/ResolverBundle/constraintsConflict(org.eclipse.osgi.service.resolver.BundleDescription,org.eclipse.osgi.service.resolver.ImportPackageSpecification[],org.eclipse.osgi.service.resolver.BundleSpecification[],org.eclipse.osgi.service.resolver.GenericSpecification[])#org/eclipse/osgi/service/resolver/ImportPackageSpecification/getName()
org/eclipse/osgi/internal/module/ResolverBundle/constraintsConflict(org.eclipse.osgi.service.resolver.BundleDescription,org.eclipse.osgi.service.resolver.ImportPackageSpecification[],org.eclipse.osgi.service.resolver.BundleSpecification[],org.eclipse.osgi.service.resolver.GenericSpecification[])#org/eclipse/osgi/internal/module/BundleConstraint/getSelectedSupplier()
org/eclipse/osgi/internal/module/ResolverBundle/constraintsConflict(org.eclipse.osgi.service.resolver.BundleDescription,org.eclipse.osgi.service.resolver.ImportPackageSpecification[],org.eclipse.osgi.service.resolver.BundleSpecification[],org.eclipse.osgi.service.resolver.GenericSpecification[])#org/eclipse/osgi/service/resolver/State/addResolverError(org.eclipse.osgi.service.resolver.BundleDescription,int,java.lang.String,org.eclipse.osgi.service.resolver.VersionConstraint)
org/eclipse/osgi/internal/module/ResolverBundle/constraintsConflict(org.eclipse.osgi.service.resolver.BundleDescription,org.eclipse.osgi.service.resolver.ImportPackageSpecification[],org.eclipse.osgi.service.resolver.BundleSpecification[],org.eclipse.osgi.service.resolver.GenericSpecification[])#org/eclipse/osgi/service/resolver/BundleSpecification/getName()
org/eclipse/osgi/internal/module/ResolverBundle/constraintsConflict(org.eclipse.osgi.service.resolver.BundleDescription,org.eclipse.osgi.service.resolver.ImportPackageSpecification[],org.eclipse.osgi.service.resolver.BundleSpecification[],org.eclipse.osgi.service.resolver.GenericSpecification[])#org/eclipse/osgi/service/resolver/BundleSpecification/isSatisfiedBy(org.eclipse.osgi.service.resolver.BaseDescription)
org/eclipse/osgi/internal/module/ResolverBundle/constraintsConflict(org.eclipse.osgi.service.resolver.BundleDescription,org.eclipse.osgi.service.resolver.ImportPackageSpecification[],org.eclipse.osgi.service.resolver.BundleSpecification[],org.eclipse.osgi.service.resolver.GenericSpecification[])#java/lang/Object/toString()
org/eclipse/osgi/internal/module/ResolverBundle/constraintsConflict(org.eclipse.osgi.service.resolver.BundleDescription,org.eclipse.osgi.service.resolver.ImportPackageSpecification[],org.eclipse.osgi.service.resolver.BundleSpecification[],org.eclipse.osgi.service.resolver.GenericSpecification[])#java/lang/String/equals(java.lang.Object)
org/eclipse/osgi/internal/module/ResolverBundle/constraintsConflict(org.eclipse.osgi.service.resolver.BundleDescription,org.eclipse.osgi.service.resolver.ImportPackageSpecification[],org.eclipse.osgi.service.resolver.BundleSpecification[],org.eclipse.osgi.service.resolver.GenericSpecification[])#org/eclipse/osgi/internal/module/ResolverImport/getSelectedSupplier()
org/eclipse/osgi/internal/module/ResolverBundle/detachFragment(org.eclipse.osgi.internal.module.ResolverBundle,org.eclipse.osgi.internal.module.ResolverConstraint)#org/eclipse/osgi/internal/module/BundleConstraint/removePossibleSupplier(org.eclipse.osgi.internal.module.VersionSupplier)
org/eclipse/osgi/internal/module/ResolverBundle/detachFragment(org.eclipse.osgi.internal.module.ResolverBundle,org.eclipse.osgi.internal.module.ResolverConstraint)#java/util/HashMap/remove(java.lang.Object)
org/eclipse/osgi/internal/module/ResolverBundle/detachFragment(org.eclipse.osgi.internal.module.ResolverBundle,org.eclipse.osgi.internal.module.ResolverConstraint)#java/util/ArrayList/toArray(java.lang.Object[])
org/eclipse/osgi/internal/module/ResolverBundle/detachFragment(org.eclipse.osgi.internal.module.ResolverBundle,org.eclipse.osgi.internal.module.ResolverConstraint)#java/util/HashMap/put(java.lang.Object,java.lang.Object)
org/eclipse/osgi/internal/module/ResolverBundle/detachFragment(org.eclipse.osgi.internal.module.ResolverBundle,org.eclipse.osgi.internal.module.ResolverConstraint)#java/util/HashMap/get(java.lang.Object)
org/eclipse/osgi/internal/module/ResolverBundle/detachFragment(org.eclipse.osgi.internal.module.ResolverBundle,org.eclipse.osgi.internal.module.ResolverConstraint)#java/util/ArrayList/ArrayList(int)
org/eclipse/osgi/internal/module/ResolverBundle/detachFragment(org.eclipse.osgi.internal.module.ResolverBundle,org.eclipse.osgi.internal.module.ResolverConstraint)#java/util/ArrayList/remove(java.lang.Object)
org/eclipse/osgi/internal/module/ResolverBundle/detachFragment(org.eclipse.osgi.internal.module.ResolverBundle,org.eclipse.osgi.internal.module.ResolverConstraint)#java/util/List/size()
org/eclipse/osgi/internal/module/ResolverBundle/detachFragment(org.eclipse.osgi.internal.module.ResolverBundle,org.eclipse.osgi.internal.module.ResolverConstraint)#org/eclipse/osgi/internal/module/ResolverExport/setSubstitute(org.eclipse.osgi.internal.module.VersionSupplier)
org/eclipse/osgi/internal/module/ResolverBundle/detachFragment(org.eclipse.osgi.internal.module.ResolverBundle,org.eclipse.osgi.internal.module.ResolverConstraint)#java/util/List/addAll(java.util.Collection)
org/eclipse/osgi/internal/module/ResolverBundle/detachFragment(org.eclipse.osgi.internal.module.ResolverBundle,org.eclipse.osgi.internal.module.ResolverConstraint)#java/util/List/toArray(java.lang.Object[])
org/eclipse/osgi/internal/module/ResolverBundle/detachFragment(org.eclipse.osgi.internal.module.ResolverBundle,org.eclipse.osgi.internal.module.ResolverConstraint)#java/util/ArrayList/size()
org/eclipse/osgi/internal/resolver/ImportPackageSpecificationImpl/isSatisfiedBy(org.eclipse.osgi.service.resolver.BaseDescription,boolean)#java/lang/Object/equals(java.lang.Object)
org/eclipse/osgi/internal/resolver/ImportPackageSpecificationImpl/isSatisfiedBy(org.eclipse.osgi.service.resolver.BaseDescription,boolean)#org/eclipse/osgi/internal/resolver/ExportPackageDescriptionImpl/getName()
org/eclipse/osgi/internal/resolver/ImportPackageSpecificationImpl/isSatisfiedBy(org.eclipse.osgi.service.resolver.BaseDescription,boolean)#org/eclipse/osgi/service/resolver/BundleDescription/getVersion()
org/eclipse/osgi/internal/resolver/ImportPackageSpecificationImpl/isSatisfiedBy(org.eclipse.osgi.service.resolver.BaseDescription,boolean)#java/lang/String/equals(java.lang.Object)
org/eclipse/osgi/internal/resolver/ImportPackageSpecificationImpl/isSatisfiedBy(org.eclipse.osgi.service.resolver.BaseDescription,boolean)#java/lang/String/substring(int,int)
org/eclipse/osgi/internal/resolver/ImportPackageSpecificationImpl/isSatisfiedBy(org.eclipse.osgi.service.resolver.BaseDescription,boolean)#java/lang/Boolean/booleanValue()
org/eclipse/osgi/internal/resolver/ImportPackageSpecificationImpl/isSatisfiedBy(org.eclipse.osgi.service.resolver.BaseDescription,boolean)#java/lang/Integer/intValue()
org/eclipse/osgi/internal/resolver/ImportPackageSpecificationImpl/isSatisfiedBy(org.eclipse.osgi.service.resolver.BaseDescription,boolean)#org/eclipse/osgi/service/resolver/BundleDescription/getSymbolicName()
org/eclipse/osgi/internal/resolver/ImportPackageSpecificationImpl/isSatisfiedBy(org.eclipse.osgi.service.resolver.BaseDescription,boolean)#java/util/Iterator/hasNext()
org/eclipse/osgi/internal/resolver/ImportPackageSpecificationImpl/isSatisfiedBy(org.eclipse.osgi.service.resolver.BaseDescription,boolean)#org/eclipse/osgi/service/resolver/VersionRange/isIncluded(org.osgi.framework.Version)
org/eclipse/osgi/internal/resolver/ImportPackageSpecificationImpl/isSatisfiedBy(org.eclipse.osgi.service.resolver.BaseDescription,boolean)#java/lang/String/length()
org/eclipse/osgi/internal/resolver/ImportPackageSpecificationImpl/isSatisfiedBy(org.eclipse.osgi.service.resolver.BaseDescription,boolean)#java/util/Map/get(java.lang.Object)
org/eclipse/osgi/internal/resolver/ImportPackageSpecificationImpl/isSatisfiedBy(org.eclipse.osgi.service.resolver.BaseDescription,boolean)#java/util/Iterator/next()
org/eclipse/osgi/internal/resolver/ImportPackageSpecificationImpl/isSatisfiedBy(org.eclipse.osgi.service.resolver.BaseDescription,boolean)#java/util/Map/keySet()
org/eclipse/osgi/internal/resolver/ImportPackageSpecificationImpl/isSatisfiedBy(org.eclipse.osgi.service.resolver.BaseDescription,boolean)#org/eclipse/osgi/internal/resolver/ExportPackageDescriptionImpl/getVersion()
org/eclipse/osgi/internal/resolver/ImportPackageSpecificationImpl/isSatisfiedBy(org.eclipse.osgi.service.resolver.BaseDescription,boolean)#org/eclipse/osgi/service/resolver/BundleDescription/getContainingState()
org/eclipse/osgi/internal/resolver/ImportPackageSpecificationImpl/isSatisfiedBy(org.eclipse.osgi.service.resolver.BaseDescription,boolean)#java/util/Set/iterator()
org/eclipse/osgi/internal/resolver/ImportPackageSpecificationImpl/isSatisfiedBy(org.eclipse.osgi.service.resolver.BaseDescription,boolean)#java/lang/String/startsWith(java.lang.String)
org/eclipse/osgi/internal/resolver/ImportPackageSpecificationImpl/isSatisfiedBy(org.eclipse.osgi.service.resolver.BaseDescription,boolean)#java/lang/String/endsWith(java.lang.String)
org/eclipse/osgi/internal/resolver/StateHelperImpl/getGenericsMap(org.eclipse.osgi.service.resolver.State,boolean)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/eclipse/osgi/internal/resolver/StateHelperImpl/getGenericsMap(org.eclipse.osgi.service.resolver.State,boolean)#java/util/ArrayList/ArrayList(int)
org/eclipse/osgi/internal/resolver/StateHelperImpl/getGenericsMap(org.eclipse.osgi.service.resolver.State,boolean)#java/util/HashMap/HashMap()
org/eclipse/osgi/internal/resolver/StateHelperImpl/getGenericsMap(org.eclipse.osgi.service.resolver.State,boolean)#java/util/List/add(java.lang.Object)
org/eclipse/osgi/internal/resolver/StateHelperImpl/getGenericsMap(org.eclipse.osgi.service.resolver.State,boolean)#org/eclipse/osgi/service/resolver/BundleDescription/getGenericCapabilities()
org/eclipse/osgi/internal/resolver/StateHelperImpl/getGenericsMap(org.eclipse.osgi.service.resolver.State,boolean)#org/eclipse/osgi/service/resolver/GenericDescription/getName()
org/eclipse/osgi/internal/resolver/StateHelperImpl/getGenericsMap(org.eclipse.osgi.service.resolver.State,boolean)#org/eclipse/osgi/service/resolver/BundleDescription/isResolved()
org/eclipse/osgi/internal/resolver/StateHelperImpl/getGenericsMap(org.eclipse.osgi.service.resolver.State,boolean)#org/eclipse/osgi/service/resolver/State/getBundles()
org/eclipse/osgi/internal/resolver/StateHelperImpl/getGenericsMap(org.eclipse.osgi.service.resolver.State,boolean)#java/util/Map/get(java.lang.Object)
org/eclipse/osgi/internal/resolver/StateHelperImpl/getVisiblePackages(org.eclipse.osgi.service.resolver.BundleDescription,int)#java/util/ArrayList/ArrayList()
org/eclipse/osgi/internal/resolver/StateHelperImpl/getVisiblePackages(org.eclipse.osgi.service.resolver.BundleDescription,int)#org/eclipse/osgi/service/resolver/BundleDescription/getRequiredBundles()
org/eclipse/osgi/internal/resolver/StateHelperImpl/getVisiblePackages(org.eclipse.osgi.service.resolver.BundleDescription,int)#org/eclipse/osgi/service/resolver/ExportPackageDescription/getExporter()
org/eclipse/osgi/internal/resolver/StateHelperImpl/getVisiblePackages(org.eclipse.osgi.service.resolver.BundleDescription,int)#java/util/HashSet/HashSet(int)
org/eclipse/osgi/internal/resolver/StateHelperImpl/getVisiblePackages(org.eclipse.osgi.service.resolver.BundleDescription,int)#java/util/List/size()
org/eclipse/osgi/internal/resolver/StateHelperImpl/getVisiblePackages(org.eclipse.osgi.service.resolver.BundleDescription,int)#org/eclipse/osgi/service/resolver/HostSpecification/getSupplier()
org/eclipse/osgi/internal/resolver/StateHelperImpl/getVisiblePackages(org.eclipse.osgi.service.resolver.BundleDescription,int)#java/util/List/toArray(java.lang.Object[])
org/eclipse/osgi/internal/resolver/StateHelperImpl/getVisiblePackages(org.eclipse.osgi.service.resolver.BundleDescription,int)#java/util/Set/contains(java.lang.Object)
org/eclipse/osgi/internal/resolver/StateHelperImpl/getVisiblePackages(org.eclipse.osgi.service.resolver.BundleDescription,int)#org/eclipse/osgi/service/resolver/BundleDescription/getContainingState()
org/eclipse/osgi/internal/resolver/StateHelperImpl/getVisiblePackages(org.eclipse.osgi.service.resolver.BundleDescription,int)#java/util/HashSet/HashSet()
org/eclipse/osgi/internal/resolver/StateHelperImpl/getVisiblePackages(org.eclipse.osgi.service.resolver.BundleDescription,int)#org/eclipse/osgi/service/resolver/BundleDescription/getSymbolicName()
org/eclipse/osgi/internal/resolver/StateHelperImpl/getVisiblePackages(org.eclipse.osgi.service.resolver.BundleDescription,int)#org/eclipse/osgi/service/resolver/BundleDescription/getHost()
org/eclipse/osgi/internal/resolver/StateHelperImpl/getVisiblePackages(org.eclipse.osgi.service.resolver.BundleDescription,int)#java/util/List/add(java.lang.Object)
org/eclipse/osgi/internal/resolver/StateHelperImpl/getVisiblePackages(org.eclipse.osgi.service.resolver.BundleDescription,int)#org/eclipse/osgi/service/resolver/BundleSpecification/getSupplier()
org/eclipse/osgi/internal/resolver/StateHelperImpl/getVisiblePackages(org.eclipse.osgi.service.resolver.BundleDescription,int)#java/util/Set/add(java.lang.Object)
org/eclipse/osgi/internal/resolver/StateHelperImpl/getPackages(org.eclipse.osgi.service.resolver.BundleDescription,java.lang.String,java.util.Set,java.util.List,java.util.Set,java.util.Set,boolean,java.util.Set,int)#org/eclipse/osgi/service/resolver/BundleDescription/getResolvedImports()
org/eclipse/osgi/internal/resolver/StateHelperImpl/getPackages(org.eclipse.osgi.service.resolver.BundleDescription,java.lang.String,java.util.Set,java.util.List,java.util.Set,java.util.Set,boolean,java.util.Set,int)#java/util/HashSet/HashSet(int)
org/eclipse/osgi/internal/resolver/StateHelperImpl/getPackages(org.eclipse.osgi.service.resolver.BundleDescription,java.lang.String,java.util.Set,java.util.List,java.util.Set,java.util.Set,boolean,java.util.Set,int)#org/eclipse/osgi/service/resolver/ExportPackageDescription/getSupplier()
org/eclipse/osgi/internal/resolver/StateHelperImpl/getPackages(org.eclipse.osgi.service.resolver.BundleDescription,java.lang.String,java.util.Set,java.util.List,java.util.Set,java.util.Set,boolean,java.util.Set,int)#java/lang/String/equals(java.lang.Object)
org/eclipse/osgi/internal/resolver/StateHelperImpl/getPackages(org.eclipse.osgi.service.resolver.BundleDescription,java.lang.String,java.util.Set,java.util.List,java.util.Set,java.util.Set,boolean,java.util.Set,int)#java/util/Set/contains(java.lang.Object)
org/eclipse/osgi/internal/resolver/StateHelperImpl/getPackages(org.eclipse.osgi.service.resolver.BundleDescription,java.lang.String,java.util.Set,java.util.List,java.util.Set,java.util.Set,boolean,java.util.Set,int)#java/util/List/add(java.lang.Object)
org/eclipse/osgi/internal/resolver/StateHelperImpl/getPackages(org.eclipse.osgi.service.resolver.BundleDescription,java.lang.String,java.util.Set,java.util.List,java.util.Set,java.util.Set,boolean,java.util.Set,int)#org/eclipse/osgi/service/resolver/BundleDescription/getSubstitutedExports()
org/eclipse/osgi/internal/resolver/StateHelperImpl/getPackages(org.eclipse.osgi.service.resolver.BundleDescription,java.lang.String,java.util.Set,java.util.List,java.util.Set,java.util.Set,boolean,java.util.Set,int)#java/util/Set/add(java.lang.Object)
org/eclipse/osgi/internal/resolver/StateHelperImpl/getPackages(org.eclipse.osgi.service.resolver.BundleDescription,java.lang.String,java.util.Set,java.util.List,java.util.Set,java.util.Set,boolean,java.util.Set,int)#java/util/HashSet/HashSet(java.util.Collection)
org/eclipse/osgi/internal/resolver/StateHelperImpl/getPackages(org.eclipse.osgi.service.resolver.BundleDescription,java.lang.String,java.util.Set,java.util.List,java.util.Set,java.util.Set,boolean,java.util.Set,int)#java/util/HashSet/contains(java.lang.Object)
org/eclipse/osgi/internal/resolver/StateHelperImpl/getPackages(org.eclipse.osgi.service.resolver.BundleDescription,java.lang.String,java.util.Set,java.util.List,java.util.Set,java.util.Set,boolean,java.util.Set,int)#org/eclipse/osgi/service/resolver/ExportPackageDescription/getName()
org/eclipse/osgi/internal/resolver/StateHelperImpl/getPackages(org.eclipse.osgi.service.resolver.BundleDescription,java.lang.String,java.util.Set,java.util.List,java.util.Set,java.util.Set,boolean,java.util.Set,int)#java/util/HashSet/add(java.lang.Object)
org/eclipse/osgi/internal/resolver/StateHelperImpl/getPackages(org.eclipse.osgi.service.resolver.BundleDescription,java.lang.String,java.util.Set,java.util.List,java.util.Set,java.util.Set,boolean,java.util.Set,int)#java/util/HashSet/size()
org/eclipse/osgi/internal/resolver/StateHelperImpl/getPackages(org.eclipse.osgi.service.resolver.BundleDescription,java.lang.String,java.util.Set,java.util.List,java.util.Set,java.util.Set,boolean,java.util.Set,int)#org/eclipse/osgi/service/resolver/BundleDescription/getSelectedExports()
org/eclipse/osgi/internal/resolver/StateHelperImpl/getPackages(org.eclipse.osgi.service.resolver.BundleDescription,java.lang.String,java.util.Set,java.util.List,java.util.Set,java.util.Set,boolean,java.util.Set,int)#java/util/Set/clear()
org/eclipse/osgi/internal/resolver/StateHelperImpl/getPackages(org.eclipse.osgi.service.resolver.BundleDescription,java.lang.String,java.util.Set,java.util.List,java.util.Set,java.util.Set,boolean,java.util.Set,int)#java/util/HashSet/HashSet()
org/eclipse/osgi/internal/resolver/StateHelperImpl/getUnsatisfiedConstraints(org.eclipse.osgi.service.resolver.BundleDescription,org.osgi.framework.hooks.resolver.ResolverHook)#java/util/ArrayList/ArrayList()
org/eclipse/osgi/internal/resolver/StateHelperImpl/getUnsatisfiedConstraints(org.eclipse.osgi.service.resolver.BundleDescription,org.osgi.framework.hooks.resolver.ResolverHook)#org/eclipse/osgi/service/resolver/NativeCodeSpecification/isResolved()
org/eclipse/osgi/internal/resolver/StateHelperImpl/getUnsatisfiedConstraints(org.eclipse.osgi.service.resolver.BundleDescription,org.osgi.framework.hooks.resolver.ResolverHook)#org/eclipse/osgi/service/resolver/GenericSpecification/isResolved()
org/eclipse/osgi/internal/resolver/StateHelperImpl/getUnsatisfiedConstraints(org.eclipse.osgi.service.resolver.BundleDescription,org.osgi.framework.hooks.resolver.ResolverHook)#org/eclipse/osgi/service/resolver/HostSpecification/isResolved()
org/eclipse/osgi/internal/resolver/StateHelperImpl/getUnsatisfiedConstraints(org.eclipse.osgi.service.resolver.BundleDescription,org.osgi.framework.hooks.resolver.ResolverHook)#org/eclipse/osgi/service/resolver/BundleDescription/isResolved()
org/eclipse/osgi/internal/resolver/StateHelperImpl/getUnsatisfiedConstraints(org.eclipse.osgi.service.resolver.BundleDescription,org.osgi.framework.hooks.resolver.ResolverHook)#org/eclipse/osgi/service/resolver/BundleDescription/getHost()
org/eclipse/osgi/internal/resolver/StateHelperImpl/getUnsatisfiedConstraints(org.eclipse.osgi.service.resolver.BundleDescription,org.osgi.framework.hooks.resolver.ResolverHook)#java/util/List/size()
org/eclipse/osgi/internal/resolver/StateHelperImpl/getUnsatisfiedConstraints(org.eclipse.osgi.service.resolver.BundleDescription,org.osgi.framework.hooks.resolver.ResolverHook)#org/eclipse/osgi/service/resolver/BundleDescription/getNativeCodeSpecification()
org/eclipse/osgi/internal/resolver/StateHelperImpl/getUnsatisfiedConstraints(org.eclipse.osgi.service.resolver.BundleDescription,org.osgi.framework.hooks.resolver.ResolverHook)#org/eclipse/osgi/service/resolver/BundleDescription/getContainingState()
org/eclipse/osgi/internal/resolver/StateHelperImpl/getUnsatisfiedConstraints(org.eclipse.osgi.service.resolver.BundleDescription,org.osgi.framework.hooks.resolver.ResolverHook)#org/eclipse/osgi/service/resolver/BundleDescription/getImportPackages()
org/eclipse/osgi/internal/resolver/StateHelperImpl/getUnsatisfiedConstraints(org.eclipse.osgi.service.resolver.BundleDescription,org.osgi.framework.hooks.resolver.ResolverHook)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/eclipse/osgi/internal/resolver/StateHelperImpl/getUnsatisfiedConstraints(org.eclipse.osgi.service.resolver.BundleDescription,org.osgi.framework.hooks.resolver.ResolverHook)#org/eclipse/osgi/service/resolver/BundleSpecification/isResolved()
org/eclipse/osgi/internal/resolver/StateHelperImpl/getUnsatisfiedConstraints(org.eclipse.osgi.service.resolver.BundleDescription,org.osgi.framework.hooks.resolver.ResolverHook)#org/eclipse/osgi/service/resolver/ImportPackageSpecification/getDirective(java.lang.String)
org/eclipse/osgi/internal/resolver/StateHelperImpl/getUnsatisfiedConstraints(org.eclipse.osgi.service.resolver.BundleDescription,org.osgi.framework.hooks.resolver.ResolverHook)#org/eclipse/osgi/service/resolver/BundleDescription/getRequiredBundles()
org/eclipse/osgi/internal/resolver/StateHelperImpl/getUnsatisfiedConstraints(org.eclipse.osgi.service.resolver.BundleDescription,org.osgi.framework.hooks.resolver.ResolverHook)#java/lang/String/equals(java.lang.Object)
org/eclipse/osgi/internal/resolver/StateHelperImpl/getUnsatisfiedConstraints(org.eclipse.osgi.service.resolver.BundleDescription,org.osgi.framework.hooks.resolver.ResolverHook)#java/util/List/toArray(java.lang.Object[])
org/eclipse/osgi/internal/resolver/StateHelperImpl/getUnsatisfiedConstraints(org.eclipse.osgi.service.resolver.BundleDescription,org.osgi.framework.hooks.resolver.ResolverHook)#org/eclipse/osgi/service/resolver/ImportPackageSpecification/isResolved()
org/eclipse/osgi/internal/resolver/StateHelperImpl/getUnsatisfiedConstraints(org.eclipse.osgi.service.resolver.BundleDescription,org.osgi.framework.hooks.resolver.ResolverHook)#org/eclipse/osgi/service/resolver/BundleDescription/getGenericRequires()
org/eclipse/osgi/internal/resolver/StateHelperImpl/getUnsatisfiedConstraints(org.eclipse.osgi.service.resolver.BundleDescription,org.osgi.framework.hooks.resolver.ResolverHook)#java/util/List/add(java.lang.Object)
org/eclipse/osgi/internal/resolver/StateHelperImpl/getUnsatisfiedLeaves(org.eclipse.osgi.service.resolver.State,org.eclipse.osgi.service.resolver.BundleDescription[],org.osgi.framework.hooks.resolver.ResolverHook)#java/util/ArrayList/ArrayList(int)
org/eclipse/osgi/internal/resolver/StateHelperImpl/getUnsatisfiedLeaves(org.eclipse.osgi.service.resolver.State,org.eclipse.osgi.service.resolver.BundleDescription[],org.osgi.framework.hooks.resolver.ResolverHook)#java/util/Iterator/hasNext()
org/eclipse/osgi/internal/resolver/StateHelperImpl/getUnsatisfiedLeaves(org.eclipse.osgi.service.resolver.State,org.eclipse.osgi.service.resolver.BundleDescription[],org.osgi.framework.hooks.resolver.ResolverHook)#org/eclipse/osgi/service/resolver/State/getBundles(java.lang.String)
org/eclipse/osgi/internal/resolver/StateHelperImpl/getUnsatisfiedLeaves(org.eclipse.osgi.service.resolver.State,org.eclipse.osgi.service.resolver.BundleDescription[],org.osgi.framework.hooks.resolver.ResolverHook)#java/util/Set/size()
org/eclipse/osgi/internal/resolver/StateHelperImpl/getUnsatisfiedLeaves(org.eclipse.osgi.service.resolver.State,org.eclipse.osgi.service.resolver.BundleDescription[],org.osgi.framework.hooks.resolver.ResolverHook)#java/util/List/toArray(java.lang.Object[])
org/eclipse/osgi/internal/resolver/StateHelperImpl/getUnsatisfiedLeaves(org.eclipse.osgi.service.resolver.State,org.eclipse.osgi.service.resolver.BundleDescription[],org.osgi.framework.hooks.resolver.ResolverHook)#java/util/List/add(java.lang.Object)
org/eclipse/osgi/internal/resolver/StateHelperImpl/getUnsatisfiedLeaves(org.eclipse.osgi.service.resolver.State,org.eclipse.osgi.service.resolver.BundleDescription[],org.osgi.framework.hooks.resolver.ResolverHook)#java/util/List/contains(java.lang.Object)
org/eclipse/osgi/internal/resolver/StateHelperImpl/getUnsatisfiedLeaves(org.eclipse.osgi.service.resolver.State,org.eclipse.osgi.service.resolver.BundleDescription[],org.osgi.framework.hooks.resolver.ResolverHook)#java/util/Collection/iterator()
org/eclipse/osgi/internal/resolver/StateHelperImpl/getUnsatisfiedLeaves(org.eclipse.osgi.service.resolver.State,org.eclipse.osgi.service.resolver.BundleDescription[],org.osgi.framework.hooks.resolver.ResolverHook)#java/util/HashSet/HashSet()
org/eclipse/osgi/internal/resolver/StateHelperImpl/getUnsatisfiedLeaves(org.eclipse.osgi.service.resolver.State,org.eclipse.osgi.service.resolver.BundleDescription[],org.osgi.framework.hooks.resolver.ResolverHook)#java/util/Set/add(java.lang.Object)
org/eclipse/osgi/internal/resolver/StateHelperImpl/getUnsatisfiedLeaves(org.eclipse.osgi.service.resolver.State,org.eclipse.osgi.service.resolver.BundleDescription[],org.osgi.framework.hooks.resolver.ResolverHook)#org/eclipse/osgi/service/resolver/BaseDescription/getSupplier()
org/eclipse/osgi/internal/resolver/StateHelperImpl/getUnsatisfiedLeaves(org.eclipse.osgi.service.resolver.State,org.eclipse.osgi.service.resolver.BundleDescription[],org.osgi.framework.hooks.resolver.ResolverHook)#org/eclipse/osgi/service/resolver/VersionConstraint/getName()
org/eclipse/osgi/internal/resolver/StateHelperImpl/getUnsatisfiedLeaves(org.eclipse.osgi.service.resolver.State,org.eclipse.osgi.service.resolver.BundleDescription[],org.osgi.framework.hooks.resolver.ResolverHook)#org/eclipse/osgi/service/resolver/BundleDescription/isResolved()
org/eclipse/osgi/internal/resolver/StateHelperImpl/getUnsatisfiedLeaves(org.eclipse.osgi.service.resolver.State,org.eclipse.osgi.service.resolver.BundleDescription[],org.osgi.framework.hooks.resolver.ResolverHook)#java/util/Map/get(java.lang.Object)
org/eclipse/osgi/internal/resolver/StateHelperImpl/getUnsatisfiedLeaves(org.eclipse.osgi.service.resolver.State,org.eclipse.osgi.service.resolver.BundleDescription[],org.osgi.framework.hooks.resolver.ResolverHook)#java/util/Collection/isEmpty()
org/eclipse/osgi/internal/resolver/StateHelperImpl/getUnsatisfiedLeaves(org.eclipse.osgi.service.resolver.State,org.eclipse.osgi.service.resolver.BundleDescription[],org.osgi.framework.hooks.resolver.ResolverHook)#java/util/List/size()
org/eclipse/osgi/internal/resolver/StateHelperImpl/getUnsatisfiedLeaves(org.eclipse.osgi.service.resolver.State,org.eclipse.osgi.service.resolver.BundleDescription[],org.osgi.framework.hooks.resolver.ResolverHook)#java/util/Iterator/next()
org/eclipse/osgi/internal/resolver/StateHelperImpl/getUnsatisfiedLeaves(org.eclipse.osgi.service.resolver.State,org.eclipse.osgi.service.resolver.BundleDescription[],org.osgi.framework.hooks.resolver.ResolverHook)#java/util/Set/toArray(java.lang.Object[])
org/eclipse/osgi/internal/resolver/StateHelperImpl/getUnsatisfiedLeaves(org.eclipse.osgi.service.resolver.State,org.eclipse.osgi.service.resolver.BundleDescription[],org.osgi.framework.hooks.resolver.ResolverHook)#java/util/List/get(int)
org/eclipse/osgi/internal/resolver/NativeCodeSpecificationImpl/isSatisfiedBy(org.eclipse.osgi.service.resolver.BaseDescription)#org/eclipse/osgi/internal/framework/AliasMapper/getCanonicalProcessor(java.lang.String)
org/eclipse/osgi/internal/resolver/NativeCodeSpecificationImpl/isSatisfiedBy(org.eclipse.osgi.service.resolver.BaseDescription)#org/eclipse/osgi/service/resolver/NativeCodeDescription/getProcessors()
org/eclipse/osgi/internal/resolver/NativeCodeSpecificationImpl/isSatisfiedBy(org.eclipse.osgi.service.resolver.BaseDescription)#java/util/Iterator/hasNext()
org/eclipse/osgi/internal/resolver/NativeCodeSpecificationImpl/isSatisfiedBy(org.eclipse.osgi.service.resolver.BaseDescription)#org/eclipse/osgi/service/resolver/VersionRange/isIncluded(org.osgi.framework.Version)
org/eclipse/osgi/internal/resolver/NativeCodeSpecificationImpl/isSatisfiedBy(org.eclipse.osgi.service.resolver.BaseDescription)#org/eclipse/osgi/internal/framework/AliasMapper/getProcessorAliases(java.lang.String)
org/eclipse/osgi/internal/resolver/NativeCodeSpecificationImpl/isSatisfiedBy(org.eclipse.osgi.service.resolver.BaseDescription)#org/eclipse/osgi/service/resolver/NativeCodeDescription/getLanguages()
org/eclipse/osgi/internal/resolver/NativeCodeSpecificationImpl/isSatisfiedBy(org.eclipse.osgi.service.resolver.BaseDescription)#java/util/Iterator/next()
org/eclipse/osgi/internal/resolver/NativeCodeSpecificationImpl/isSatisfiedBy(org.eclipse.osgi.service.resolver.BaseDescription)#org/osgi/framework/Filter/matchCase(java.util.Dictionary)
org/eclipse/osgi/internal/resolver/NativeCodeSpecificationImpl/isSatisfiedBy(org.eclipse.osgi.service.resolver.BaseDescription)#org/eclipse/osgi/service/resolver/NativeCodeDescription/getOSNames()
org/eclipse/osgi/internal/resolver/NativeCodeSpecificationImpl/isSatisfiedBy(org.eclipse.osgi.service.resolver.BaseDescription)#org/eclipse/osgi/internal/framework/AliasMapper/getOSNameAliases(java.lang.String)
org/eclipse/osgi/internal/resolver/NativeCodeSpecificationImpl/isSatisfiedBy(org.eclipse.osgi.service.resolver.BaseDescription)#java/util/Collection/iterator()
org/eclipse/osgi/internal/resolver/NativeCodeSpecificationImpl/isSatisfiedBy(org.eclipse.osgi.service.resolver.BaseDescription)#org/eclipse/osgi/service/resolver/State/getPlatformProperties()
org/eclipse/osgi/internal/resolver/NativeCodeSpecificationImpl/isSatisfiedBy(org.eclipse.osgi.service.resolver.BaseDescription)#org/eclipse/osgi/service/resolver/NativeCodeDescription/getOSVersions()
org/eclipse/osgi/internal/resolver/NativeCodeSpecificationImpl/isSatisfiedBy(org.eclipse.osgi.service.resolver.BaseDescription)#java/lang/String/equalsIgnoreCase(java.lang.String)
org/eclipse/osgi/internal/resolver/NativeCodeSpecificationImpl/isSatisfiedBy(org.eclipse.osgi.service.resolver.BaseDescription)#org/osgi/framework/Version/parseVersion(java.lang.String)
org/eclipse/osgi/internal/resolver/NativeCodeSpecificationImpl/isSatisfiedBy(org.eclipse.osgi.service.resolver.BaseDescription)#java/lang/Object/equals(java.lang.Object)
org/eclipse/osgi/internal/resolver/NativeCodeSpecificationImpl/isSatisfiedBy(org.eclipse.osgi.service.resolver.BaseDescription)#java/util/Dictionary/get(java.lang.Object)
org/eclipse/osgi/internal/resolver/NativeCodeSpecificationImpl/isSatisfiedBy(org.eclipse.osgi.service.resolver.BaseDescription)#java/util/Collections/emptyList()
org/eclipse/osgi/internal/resolver/NativeCodeSpecificationImpl/isSatisfiedBy(org.eclipse.osgi.service.resolver.BaseDescription)#org/eclipse/osgi/internal/framework/AliasMapper/getCanonicalOSName(java.lang.String)
org/eclipse/osgi/internal/resolver/NativeCodeSpecificationImpl/isSatisfiedBy(org.eclipse.osgi.service.resolver.BaseDescription)#org/eclipse/osgi/service/resolver/BundleDescription/getContainingState()
org/eclipse/osgi/internal/resolver/NativeCodeSpecificationImpl/isSatisfiedBy(org.eclipse.osgi.service.resolver.BaseDescription)#org/eclipse/osgi/service/resolver/NativeCodeDescription/getFilter()
org/eclipse/osgi/internal/resolver/NativeCodeSpecificationImpl/isSatisfiedBy(org.eclipse.osgi.service.resolver.BaseDescription)#java/util/Collections/singleton(java.lang.Object)
org/eclipse/osgi/internal/resolver/BundleSpecificationImpl/isSatisfiedBy(org.eclipse.osgi.service.resolver.BaseDescription)#java/lang/Object/equals(java.lang.Object)
org/eclipse/osgi/internal/resolver/BundleSpecificationImpl/isSatisfiedBy(org.eclipse.osgi.service.resolver.BaseDescription)#org/eclipse/osgi/service/resolver/VersionRange/isIncluded(org.osgi.framework.Version)
org/eclipse/osgi/internal/resolver/BundleSpecificationImpl/isSatisfiedBy(org.eclipse.osgi.service.resolver.BaseDescription)#java/util/Set/iterator()
org/eclipse/osgi/internal/resolver/BundleSpecificationImpl/isSatisfiedBy(org.eclipse.osgi.service.resolver.BaseDescription)#org/eclipse/osgi/internal/resolver/BundleDescriptionImpl/getVersion()
org/eclipse/osgi/internal/resolver/BundleSpecificationImpl/isSatisfiedBy(org.eclipse.osgi.service.resolver.BaseDescription)#java/util/Iterator/hasNext()
org/eclipse/osgi/internal/resolver/BundleSpecificationImpl/isSatisfiedBy(org.eclipse.osgi.service.resolver.BaseDescription)#java/util/Map/get(java.lang.Object)
org/eclipse/osgi/internal/resolver/BundleSpecificationImpl/isSatisfiedBy(org.eclipse.osgi.service.resolver.BaseDescription)#java/util/Iterator/next()
org/eclipse/osgi/internal/resolver/BundleSpecificationImpl/isSatisfiedBy(org.eclipse.osgi.service.resolver.BaseDescription)#java/util/Map/keySet()
org/eclipse/osgi/internal/resolver/BundleSpecificationImpl/isSatisfiedBy(org.eclipse.osgi.service.resolver.BaseDescription)#java/lang/String/equals(java.lang.Object)
org/eclipse/osgi/internal/resolver/ExportPackageDescriptionImpl/getDeclaredAttributes()#org/eclipse/osgi/service/resolver/BundleDescription/getSymbolicName()
org/eclipse/osgi/internal/resolver/ExportPackageDescriptionImpl/getDeclaredAttributes()#java/util/Map/put(java.lang.Object,java.lang.Object)
org/eclipse/osgi/internal/resolver/ExportPackageDescriptionImpl/getDeclaredAttributes()#org/eclipse/osgi/internal/resolver/ExportPackageDescriptionImpl/getName()
org/eclipse/osgi/internal/resolver/ExportPackageDescriptionImpl/getDeclaredAttributes()#java/util/Collections/unmodifiableMap(java.util.Map)
org/eclipse/osgi/internal/resolver/ExportPackageDescriptionImpl/getDeclaredAttributes()#org/eclipse/osgi/service/resolver/BundleDescription/getVersion()
org/eclipse/osgi/internal/resolver/ExportPackageDescriptionImpl/getDeclaredAttributes()#java/util/Map/putAll(java.util.Map)
org/eclipse/osgi/internal/resolver/ExportPackageDescriptionImpl/getDeclaredAttributes()#java/util/Arrays/asList(java.lang.Object[])
org/eclipse/osgi/internal/resolver/ExportPackageDescriptionImpl/getDeclaredAttributes()#java/lang/String/equals(java.lang.Object)
org/eclipse/osgi/internal/resolver/ExportPackageDescriptionImpl/getDeclaredAttributes()#org/eclipse/osgi/internal/resolver/ExportPackageDescriptionImpl/getVersion()
org/eclipse/osgi/internal/resolver/ExportPackageDescriptionImpl/getDeclaredAttributes()#java/util/HashMap/HashMap(int)
org/eclipse/osgi/internal/resolver/StateBuilder/createNativeCodeDescription(org.eclipse.osgi.util.ManifestElement)#org/eclipse/osgi/util/NLS/bind(java.lang.String,java.lang.Object,java.lang.Object)
org/eclipse/osgi/internal/resolver/StateBuilder/createNativeCodeDescription(org.eclipse.osgi.util.ManifestElement)#org/eclipse/osgi/util/ManifestElement/getValueComponents()
org/eclipse/osgi/internal/resolver/StateBuilder/createNativeCodeDescription(org.eclipse.osgi.util.ManifestElement)#java/lang/String/valueOf(java.lang.Object)
org/eclipse/osgi/internal/resolver/StateBuilder/createNativeCodeDescription(org.eclipse.osgi.util.ManifestElement)#java/lang/StringBuilder/append(java.lang.String)
org/eclipse/osgi/internal/resolver/StateBuilder/createNativeCodeDescription(org.eclipse.osgi.util.ManifestElement)#org/eclipse/osgi/util/ManifestElement/getAttribute(java.lang.String)
org/eclipse/osgi/internal/resolver/StateBuilder/createNativeCodeDescription(org.eclipse.osgi.util.ManifestElement)#org/eclipse/osgi/internal/resolver/NativeCodeDescriptionImpl/setName(java.lang.String)
org/eclipse/osgi/internal/resolver/StateBuilder/createNativeCodeDescription(org.eclipse.osgi.util.ManifestElement)#org/eclipse/osgi/util/ManifestElement/getAttributes(java.lang.String)
org/eclipse/osgi/internal/resolver/StateBuilder/createNativeCodeDescription(org.eclipse.osgi.util.ManifestElement)#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/eclipse/osgi/internal/resolver/StateBuilder/createNativeCodeDescription(org.eclipse.osgi.util.ManifestElement)#org/osgi/framework/BundleException/BundleException(java.lang.String,int,java.lang.Throwable)
org/eclipse/osgi/internal/resolver/StateBuilder/createNativeCodeDescription(org.eclipse.osgi.util.ManifestElement)#java/lang/StringBuilder/toString()
org/eclipse/osgi/internal/resolver/StateBuilder/createNativeCodeDescription(org.eclipse.osgi.util.ManifestElement)#org/eclipse/osgi/util/ManifestElement/toString()
org/eclipse/osgi/internal/resolver/StateBuilder/createEquinoxCapabilities(org.eclipse.osgi.util.ManifestElement[])#java/util/Dictionary/put(java.lang.Object,java.lang.Object)
org/eclipse/osgi/internal/resolver/StateBuilder/createEquinoxCapabilities(org.eclipse.osgi.util.ManifestElement[])#java/lang/String/substring(int,int)
org/eclipse/osgi/internal/resolver/StateBuilder/createEquinoxCapabilities(org.eclipse.osgi.util.ManifestElement[])#org/osgi/framework/BundleException/BundleException(java.lang.String)
org/eclipse/osgi/internal/resolver/StateBuilder/createEquinoxCapabilities(org.eclipse.osgi.util.ManifestElement[])#java/lang/String/indexOf(int)
org/eclipse/osgi/internal/resolver/StateBuilder/createEquinoxCapabilities(org.eclipse.osgi.util.ManifestElement[])#org/osgi/framework/Version/parseVersion(java.lang.String)
org/eclipse/osgi/internal/resolver/StateBuilder/createEquinoxCapabilities(org.eclipse.osgi.util.ManifestElement[])#java/util/ArrayList/ArrayList(int)
org/eclipse/osgi/internal/resolver/StateBuilder/createEquinoxCapabilities(org.eclipse.osgi.util.ManifestElement[])#java/util/Hashtable/Hashtable(java.util.Map)
org/eclipse/osgi/internal/resolver/StateBuilder/createEquinoxCapabilities(org.eclipse.osgi.util.ManifestElement[])#org/eclipse/osgi/util/ManifestElement/getValueComponents()
org/eclipse/osgi/internal/resolver/StateBuilder/createEquinoxCapabilities(org.eclipse.osgi.util.ManifestElement[])#java/lang/String/equals(java.lang.Object)
org/eclipse/osgi/internal/resolver/StateBuilder/createEquinoxCapabilities(org.eclipse.osgi.util.ManifestElement[])#java/util/ArrayList/add(java.lang.Object)
org/eclipse/osgi/internal/resolver/StateBuilder/createEquinoxCapabilities(org.eclipse.osgi.util.ManifestElement[])#java/util/Hashtable/Hashtable()
org/eclipse/osgi/internal/resolver/StateBuilder/createEquinoxCapabilities(org.eclipse.osgi.util.ManifestElement[])#org/eclipse/osgi/util/ManifestElement/getAttribute(java.lang.String)
org/eclipse/osgi/internal/resolver/StateBuilder/createEquinoxCapabilities(org.eclipse.osgi.util.ManifestElement[])#java/lang/String/substring(int)
org/eclipse/osgi/internal/resolver/StateBuilder/checkImportExportSyntax(java.lang.String,org.eclipse.osgi.util.ManifestElement[],boolean,boolean,boolean)#org/eclipse/osgi/util/NLS/bind(java.lang.String,java.lang.Object,java.lang.Object)
org/eclipse/osgi/internal/resolver/StateBuilder/checkImportExportSyntax(java.lang.String,org.eclipse.osgi.util.ManifestElement[],boolean,boolean,boolean)#java/lang/String/valueOf(java.lang.Object)
org/eclipse/osgi/internal/resolver/StateBuilder/checkImportExportSyntax(java.lang.String,org.eclipse.osgi.util.ManifestElement[],boolean,boolean,boolean)#java/lang/StringBuilder/append(java.lang.String)
org/eclipse/osgi/internal/resolver/StateBuilder/checkImportExportSyntax(java.lang.String,org.eclipse.osgi.util.ManifestElement[],boolean,boolean,boolean)#java/util/HashSet/HashSet(int)
org/eclipse/osgi/internal/resolver/StateBuilder/checkImportExportSyntax(java.lang.String,org.eclipse.osgi.util.ManifestElement[],boolean,boolean,boolean)#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/eclipse/osgi/internal/resolver/StateBuilder/checkImportExportSyntax(java.lang.String,org.eclipse.osgi.util.ManifestElement[],boolean,boolean,boolean)#java/lang/String/equals(java.lang.Object)
org/eclipse/osgi/internal/resolver/StateBuilder/checkImportExportSyntax(java.lang.String,org.eclipse.osgi.util.ManifestElement[],boolean,boolean,boolean)#java/util/Set/contains(java.lang.Object)
org/eclipse/osgi/internal/resolver/StateBuilder/checkImportExportSyntax(java.lang.String,org.eclipse.osgi.util.ManifestElement[],boolean,boolean,boolean)#org/eclipse/osgi/util/ManifestElement/getAttribute(java.lang.String)
org/eclipse/osgi/internal/resolver/StateBuilder/checkImportExportSyntax(java.lang.String,org.eclipse.osgi.util.ManifestElement[],boolean,boolean,boolean)#org/osgi/framework/BundleException/BundleException(java.lang.String,int)
org/eclipse/osgi/internal/resolver/StateBuilder/checkImportExportSyntax(java.lang.String,org.eclipse.osgi.util.ManifestElement[],boolean,boolean,boolean)#java/lang/String/startsWith(java.lang.String)
org/eclipse/osgi/internal/resolver/StateBuilder/checkImportExportSyntax(java.lang.String,org.eclipse.osgi.util.ManifestElement[],boolean,boolean,boolean)#java/util/Set/add(java.lang.Object)
org/eclipse/osgi/internal/resolver/StateBuilder/checkImportExportSyntax(java.lang.String,org.eclipse.osgi.util.ManifestElement[],boolean,boolean,boolean)#org/eclipse/osgi/util/NLS/bind(java.lang.String,java.lang.Object)
org/eclipse/osgi/internal/resolver/StateBuilder/checkImportExportSyntax(java.lang.String,org.eclipse.osgi.util.ManifestElement[],boolean,boolean,boolean)#org/eclipse/osgi/util/ManifestElement/getValueComponents()
org/eclipse/osgi/internal/resolver/StateBuilder/checkImportExportSyntax(java.lang.String,org.eclipse.osgi.util.ManifestElement[],boolean,boolean,boolean)#java/lang/StringBuilder/toString()
org/eclipse/osgi/internal/resolver/StateBuilder/checkImportExportSyntax(java.lang.String,org.eclipse.osgi.util.ManifestElement[],boolean,boolean,boolean)#org/eclipse/osgi/util/ManifestElement/toString()
org/eclipse/osgi/internal/resolver/StateBuilder/convertBREEs(java.lang.String[],java.util.List)#org/eclipse/osgi/internal/framework/FilterImpl/newInstance(java.lang.String)
org/eclipse/osgi/internal/resolver/StateBuilder/convertBREEs(java.lang.String[],java.util.List)#java/util/ArrayList/ArrayList()
org/eclipse/osgi/internal/resolver/StateBuilder/convertBREEs(java.lang.String[],java.util.List)#java/util/Iterator/hasNext()
org/eclipse/osgi/internal/resolver/StateBuilder/convertBREEs(java.lang.String[],java.util.List)#java/util/Iterator/next()
org/eclipse/osgi/internal/resolver/StateBuilder/convertBREEs(java.lang.String[],java.util.List)#java/lang/StringBuffer/toString()
org/eclipse/osgi/internal/resolver/StateBuilder/convertBREEs(java.lang.String[],java.util.List)#java/util/List/add(java.lang.Object)
org/eclipse/osgi/internal/resolver/StateBuilder/convertBREEs(java.lang.String[],java.util.List)#java/lang/StringBuffer/StringBuffer(java.lang.String)
org/eclipse/osgi/internal/resolver/StateBuilder/convertBREEs(java.lang.String[],java.util.List)#org/eclipse/osgi/internal/framework/FilterImpl/getPrimaryKeyValue(java.lang.String)
org/eclipse/osgi/internal/resolver/StateBuilder/convertBREEs(java.lang.String[],java.util.List)#java/util/ArrayList/ArrayList(int)
org/eclipse/osgi/internal/resolver/StateBuilder/convertBREEs(java.lang.String[],java.util.List)#java/util/List/size()
org/eclipse/osgi/internal/resolver/StateBuilder/convertBREEs(java.lang.String[],java.util.List)#org/eclipse/osgi/internal/resolver/GenericSpecificationImpl/setName(java.lang.String)
org/eclipse/osgi/internal/resolver/StateBuilder/convertBREEs(java.lang.String[],java.util.List)#org/osgi/framework/BundleException/BundleException(java.lang.String,java.lang.Throwable)
org/eclipse/osgi/internal/resolver/StateBuilder/convertBREEs(java.lang.String[],java.util.List)#java/util/List/get(int)
org/eclipse/osgi/internal/resolver/StateBuilder/convertBREEs(java.lang.String[],java.util.List)#java/util/List/iterator()
org/eclipse/osgi/internal/resolver/StateBuilder/convertBREEs(java.lang.String[],java.util.List)#java/lang/StringBuffer/append(java.lang.String)
org/eclipse/osgi/internal/resolver/StateBuilder/createImportPackages(org.eclipse.osgi.service.resolver.ExportPackageDescription[],java.util.List,org.eclipse.osgi.util.ManifestElement[],org.eclipse.osgi.util.ManifestElement[],int)#org/eclipse/osgi/internal/resolver/ImportPackageSpecificationImpl/setName(java.lang.String)
org/eclipse/osgi/internal/resolver/StateBuilder/createImportPackages(org.eclipse.osgi.service.resolver.ExportPackageDescription[],java.util.List,org.eclipse.osgi.util.ManifestElement[],org.eclipse.osgi.util.ManifestElement[],int)#org/eclipse/osgi/service/resolver/ExportPackageDescription/getVersion()
org/eclipse/osgi/internal/resolver/StateBuilder/createImportPackages(org.eclipse.osgi.service.resolver.ExportPackageDescription[],java.util.List,org.eclipse.osgi.util.ManifestElement[],org.eclipse.osgi.util.ManifestElement[],int)#org/eclipse/osgi/service/resolver/ExportPackageDescription/getName()
org/eclipse/osgi/internal/resolver/StateBuilder/createImportPackages(org.eclipse.osgi.service.resolver.ExportPackageDescription[],java.util.List,org.eclipse.osgi.util.ManifestElement[],org.eclipse.osgi.util.ManifestElement[],int)#java/util/List/toArray(java.lang.Object[])
org/eclipse/osgi/internal/resolver/StateBuilder/createImportPackages(org.eclipse.osgi.service.resolver.ExportPackageDescription[],java.util.List,org.eclipse.osgi.util.ManifestElement[],org.eclipse.osgi.util.ManifestElement[],int)#java/util/List/add(java.lang.Object)
org/eclipse/osgi/internal/resolver/StateBuilder/createImportPackages(org.eclipse.osgi.service.resolver.ExportPackageDescription[],java.util.List,org.eclipse.osgi.util.ManifestElement[],org.eclipse.osgi.util.ManifestElement[],int)#java/util/List/contains(java.lang.Object)
org/eclipse/osgi/internal/resolver/StateBuilder/createImportPackages(org.eclipse.osgi.service.resolver.ExportPackageDescription[],java.util.List,org.eclipse.osgi.util.ManifestElement[],org.eclipse.osgi.util.ManifestElement[],int)#java/util/ArrayList/ArrayList(int)
org/eclipse/osgi/internal/resolver/StateBuilder/createImportPackages(org.eclipse.osgi.service.resolver.ExportPackageDescription[],java.util.List,org.eclipse.osgi.util.ManifestElement[],org.eclipse.osgi.util.ManifestElement[],int)#org/eclipse/osgi/internal/resolver/ImportPackageSpecificationImpl/setVersionRange(org.eclipse.osgi.service.resolver.VersionRange)
org/eclipse/osgi/internal/resolver/StateBuilder/createImportPackages(org.eclipse.osgi.service.resolver.ExportPackageDescription[],java.util.List,org.eclipse.osgi.util.ManifestElement[],org.eclipse.osgi.util.ManifestElement[],int)#java/util/List/size()
org/eclipse/osgi/internal/resolver/StateBuilder/createImportPackages(org.eclipse.osgi.service.resolver.ExportPackageDescription[],java.util.List,org.eclipse.osgi.util.ManifestElement[],org.eclipse.osgi.util.ManifestElement[],int)#org/osgi/framework/Version/toString()
org/eclipse/osgi/internal/resolver/StateBuilder/addImportPackages(org.eclipse.osgi.util.ManifestElement,java.util.List,int,boolean)#java/util/Iterator/next()
org/eclipse/osgi/internal/resolver/StateBuilder/addImportPackages(org.eclipse.osgi.util.ManifestElement,java.util.List,int,boolean)#java/lang/String/equals(java.lang.Object)
org/eclipse/osgi/internal/resolver/StateBuilder/addImportPackages(org.eclipse.osgi.util.ManifestElement,java.util.List,int,boolean)#org/eclipse/osgi/util/ManifestElement/getAttribute(java.lang.String)
org/eclipse/osgi/internal/resolver/StateBuilder/addImportPackages(org.eclipse.osgi.util.ManifestElement,java.util.List,int,boolean)#java/util/List/add(java.lang.Object)
org/eclipse/osgi/internal/resolver/StateBuilder/addImportPackages(org.eclipse.osgi.util.ManifestElement,java.util.List,int,boolean)#java/util/List/iterator()
org/eclipse/osgi/internal/resolver/StateBuilder/addImportPackages(org.eclipse.osgi.util.ManifestElement,java.util.List,int,boolean)#java/util/Iterator/remove()
org/eclipse/osgi/internal/resolver/StateBuilder/addImportPackages(org.eclipse.osgi.util.ManifestElement,java.util.List,int,boolean)#org/eclipse/osgi/util/ManifestElement/getValueComponents()
org/eclipse/osgi/internal/resolver/StateBuilder/addImportPackages(org.eclipse.osgi.util.ManifestElement,java.util.List,int,boolean)#org/eclipse/osgi/internal/resolver/ImportPackageSpecificationImpl/setName(java.lang.String)
org/eclipse/osgi/internal/resolver/StateBuilder/addImportPackages(org.eclipse.osgi.util.ManifestElement,java.util.List,int,boolean)#java/util/Iterator/hasNext()
org/eclipse/osgi/internal/resolver/StateBuilder/addImportPackages(org.eclipse.osgi.util.ManifestElement,java.util.List,int,boolean)#org/eclipse/osgi/internal/resolver/ImportPackageSpecificationImpl/setVersionRange(org.eclipse.osgi.service.resolver.VersionRange)
org/eclipse/osgi/internal/resolver/StateBuilder/addImportPackages(org.eclipse.osgi.util.ManifestElement,java.util.List,int,boolean)#org/eclipse/osgi/util/ManifestElement/getDirective(java.lang.String)
org/eclipse/osgi/internal/resolver/StateBuilder/addImportPackages(org.eclipse.osgi.util.ManifestElement,java.util.List,int,boolean)#org/eclipse/osgi/service/resolver/ImportPackageSpecification/getName()
org/eclipse/osgi/internal/resolver/StateBuilder/getGenericRequires(java.util.Dictionary,java.lang.String[][])#java/util/ArrayList/ArrayList(int)
org/eclipse/osgi/internal/resolver/StateBuilder/getGenericRequires(java.util.Dictionary,java.lang.String[][])#java/util/Dictionary/get(java.lang.Object)
org/eclipse/osgi/internal/resolver/StateBuilder/getGenericRequires(java.util.Dictionary,java.lang.String[][])#java/lang/StringBuffer/append(char)
org/eclipse/osgi/internal/resolver/StateBuilder/getGenericRequires(java.util.Dictionary,java.lang.String[][])#org/eclipse/osgi/util/ManifestElement/getAttribute(java.lang.String)
org/eclipse/osgi/internal/resolver/StateBuilder/getGenericRequires(java.util.Dictionary,java.lang.String[][])#java/lang/StringBuffer/append(java.lang.String)
org/eclipse/osgi/internal/resolver/StateBuilder/getGenericRequires(java.util.Dictionary,java.lang.String[][])#java/lang/StringBuffer/StringBuffer()
org/eclipse/osgi/internal/resolver/StateBuilder/getGenericRequires(java.util.Dictionary,java.lang.String[][])#org/eclipse/osgi/util/ManifestElement/getValue()
org/eclipse/osgi/internal/resolver/StateBuilder/getGenericRequires(java.util.Dictionary,java.lang.String[][])#java/util/List/size()
org/eclipse/osgi/internal/resolver/StateBuilder/getGenericRequires(java.util.Dictionary,java.lang.String[][])#java/util/List/toArray(java.lang.Object[])
org/eclipse/osgi/internal/resolver/StateBuilder/getGenericRequires(java.util.Dictionary,java.lang.String[][])#java/lang/StringBuffer/toString()
org/eclipse/osgi/internal/resolver/StateBuilder/getGenericRequires(java.util.Dictionary,java.lang.String[][])#org/eclipse/osgi/util/ManifestElement/parseHeader(java.lang.String,java.lang.String)
org/eclipse/osgi/internal/resolver/StateBuilder/getGenericRequires(java.util.Dictionary,java.lang.String[][])#java/util/List/add(java.lang.Object)
org/eclipse/osgi/internal/resolver/StateBuilder/convertValue(java.lang.String,java.lang.String)#java/lang/Class/forName(java.lang.String)
org/eclipse/osgi/internal/resolver/StateBuilder/convertValue(java.lang.String,java.lang.String)#java/lang/reflect/Constructor/newInstance(java.lang.Object[])
org/eclipse/osgi/internal/resolver/StateBuilder/convertValue(java.lang.String,java.lang.String)#org/eclipse/osgi/internal/util/Tokenizer/getToken(java.lang.String)
org/eclipse/osgi/internal/resolver/StateBuilder/convertValue(java.lang.String,java.lang.String)#java/util/Iterator/hasNext()
org/eclipse/osgi/internal/resolver/StateBuilder/convertValue(java.lang.String,java.lang.String)#org/eclipse/osgi/internal/util/Tokenizer/getEscapedTokens(java.lang.String)
org/eclipse/osgi/internal/resolver/StateBuilder/convertValue(java.lang.String,java.lang.String)#org/osgi/framework/Version/Version(java.lang.String)
org/eclipse/osgi/internal/resolver/StateBuilder/convertValue(java.lang.String,java.lang.String)#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/eclipse/osgi/internal/resolver/StateBuilder/convertValue(java.lang.String,java.lang.String)#java/util/Iterator/next()
org/eclipse/osgi/internal/resolver/StateBuilder/convertValue(java.lang.String,java.lang.String)#java/util/List/iterator()
org/eclipse/osgi/internal/resolver/StateBuilder/convertValue(java.lang.String,java.lang.String)#org/eclipse/osgi/util/ManifestElement/getArrayFromList(java.lang.String,java.lang.String)
org/eclipse/osgi/internal/resolver/StateBuilder/convertValue(java.lang.String,java.lang.String)#org/eclipse/osgi/internal/util/Tokenizer/getChar()
org/eclipse/osgi/internal/resolver/StateBuilder/convertValue(java.lang.String,java.lang.String)#java/lang/String/equalsIgnoreCase(java.lang.String)
org/eclipse/osgi/internal/resolver/StateBuilder/convertValue(java.lang.String,java.lang.String)#java/util/ArrayList/ArrayList()
org/eclipse/osgi/internal/resolver/StateBuilder/convertValue(java.lang.String,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/eclipse/osgi/internal/resolver/StateBuilder/convertValue(java.lang.String,java.lang.String)#java/lang/String/trim()
org/eclipse/osgi/internal/resolver/StateBuilder/convertValue(java.lang.String,java.lang.String)#org/eclipse/osgi/internal/util/Tokenizer/Tokenizer(java.lang.String)
org/eclipse/osgi/internal/resolver/StateBuilder/convertValue(java.lang.String,java.lang.String)#java/util/List/add(java.lang.Object)
org/eclipse/osgi/internal/resolver/StateBuilder/convertValue(java.lang.String,java.lang.String)#java/lang/Class/getConstructor(java.lang.Class[])
org/eclipse/osgi/internal/resolver/StateBuilder/convertValue(java.lang.String,java.lang.String)#java/lang/Long/Long(java.lang.String)
org/eclipse/osgi/internal/resolver/StateBuilder/convertValue(java.lang.String,java.lang.String)#java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)
org/eclipse/osgi/internal/resolver/StateBuilder/convertValue(java.lang.String,java.lang.String)#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/eclipse/osgi/internal/resolver/StateBuilder/convertValue(java.lang.String,java.lang.String)#java/lang/Double/Double(java.lang.String)
org/eclipse/osgi/internal/resolver/StateBuilder/convertValue(java.lang.String,java.lang.String)#java/lang/StringBuilder/toString()
org/eclipse/osgi/internal/resolver/StateBuilder/convertValue(java.lang.String,java.lang.String)#java/lang/Exception/getMessage()
org/eclipse/osgi/internal/resolver/StateBuilder/createBundleDescription(org.eclipse.osgi.internal.resolver.StateImpl,java.util.Dictionary,java.lang.String)#org/eclipse/osgi/util/ManifestElement/getDirective(java.lang.String)
org/eclipse/osgi/internal/resolver/StateBuilder/createBundleDescription(org.eclipse.osgi.internal.resolver.StateImpl,java.util.Dictionary,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/eclipse/osgi/internal/resolver/StateBuilder/createBundleDescription(org.eclipse.osgi.internal.resolver.StateImpl,java.util.Dictionary,java.lang.String)#java/lang/IllegalArgumentException/getMessage()
org/eclipse/osgi/internal/resolver/StateBuilder/createBundleDescription(org.eclipse.osgi.internal.resolver.StateImpl,java.util.Dictionary,java.lang.String)#org/eclipse/osgi/util/ManifestElement/getValue()
org/eclipse/osgi/internal/resolver/StateBuilder/createBundleDescription(org.eclipse.osgi.internal.resolver.StateImpl,java.util.Dictionary,java.lang.String)#org/eclipse/osgi/util/ManifestElement/getAttribute(java.lang.String)
org/eclipse/osgi/internal/resolver/StateBuilder/createBundleDescription(org.eclipse.osgi.internal.resolver.StateImpl,java.util.Dictionary,java.lang.String)#org/osgi/framework/BundleException/BundleException(java.lang.String,int,java.lang.Throwable)
org/eclipse/osgi/internal/resolver/StateBuilder/createBundleDescription(org.eclipse.osgi.internal.resolver.StateImpl,java.util.Dictionary,java.lang.String)#java/lang/StringBuilder/toString()
org/eclipse/osgi/internal/resolver/StateBuilder/createBundleDescription(org.eclipse.osgi.internal.resolver.StateImpl,java.util.Dictionary,java.lang.String)#org/osgi/framework/Version/parseVersion(java.lang.String)
org/eclipse/osgi/internal/resolver/StateBuilder/createBundleDescription(org.eclipse.osgi.internal.resolver.StateImpl,java.util.Dictionary,java.lang.String)#java/util/ArrayList/ArrayList(int)
org/eclipse/osgi/internal/resolver/StateBuilder/createBundleDescription(org.eclipse.osgi.internal.resolver.StateImpl,java.util.Dictionary,java.lang.String)#org/eclipse/osgi/util/NLS/bind(java.lang.String,java.lang.Object,java.lang.Object)
org/eclipse/osgi/internal/resolver/StateBuilder/createBundleDescription(org.eclipse.osgi.internal.resolver.StateImpl,java.util.Dictionary,java.lang.String)#java/util/Dictionary/get(java.lang.Object)
org/eclipse/osgi/internal/resolver/StateBuilder/createBundleDescription(org.eclipse.osgi.internal.resolver.StateImpl,java.util.Dictionary,java.lang.String)#java/lang/String/valueOf(java.lang.Object)
org/eclipse/osgi/internal/resolver/StateBuilder/createBundleDescription(org.eclipse.osgi.internal.resolver.StateImpl,java.util.Dictionary,java.lang.String)#org/eclipse/osgi/internal/resolver/BundleDescriptionImpl/setVersion(org.osgi.framework.Version)
org/eclipse/osgi/internal/resolver/StateBuilder/createBundleDescription(org.eclipse.osgi.internal.resolver.StateImpl,java.util.Dictionary,java.lang.String)#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/eclipse/osgi/internal/resolver/StateBuilder/createBundleDescription(org.eclipse.osgi.internal.resolver.StateImpl,java.util.Dictionary,java.lang.String)#java/lang/String/equals(java.lang.Object)
org/eclipse/osgi/internal/resolver/StateBuilder/createBundleDescription(org.eclipse.osgi.internal.resolver.StateImpl,java.util.Dictionary,java.lang.String)#java/lang/Integer/parseInt(java.lang.String)
org/eclipse/osgi/internal/resolver/StateBuilder/createBundleDescription(org.eclipse.osgi.internal.resolver.StateImpl,java.util.Dictionary,java.lang.String)#org/eclipse/osgi/util/ManifestElement/parseHeader(java.lang.String,java.lang.String)
org/eclipse/osgi/internal/resolver/StateBuilder/createBundleDescription(org.eclipse.osgi.internal.resolver.StateImpl,java.util.Dictionary,java.lang.String)#org/eclipse/osgi/util/ManifestElement/getArrayFromList(java.lang.String)
org/eclipse/osgi/internal/resolver/StateBuilder/createOSGiRequires(org.eclipse.osgi.util.ManifestElement[],java.util.List)#org/eclipse/osgi/internal/framework/FilterImpl/newInstance(java.lang.String)
org/eclipse/osgi/internal/resolver/StateBuilder/createOSGiRequires(org.eclipse.osgi.util.ManifestElement[],java.util.List)#java/util/ArrayList/ArrayList()
org/eclipse/osgi/internal/resolver/StateBuilder/createOSGiRequires(org.eclipse.osgi.util.ManifestElement[],java.util.List)#org/eclipse/osgi/util/ManifestElement/getValueComponents()
org/eclipse/osgi/internal/resolver/StateBuilder/createOSGiRequires(org.eclipse.osgi.util.ManifestElement[],java.util.List)#java/lang/String/valueOf(java.lang.Object)
org/eclipse/osgi/internal/resolver/StateBuilder/createOSGiRequires(org.eclipse.osgi.util.ManifestElement[],java.util.List)#org/eclipse/osgi/util/ManifestElement/getDirective(java.lang.String)
org/eclipse/osgi/internal/resolver/StateBuilder/createOSGiRequires(org.eclipse.osgi.util.ManifestElement[],java.util.List)#java/lang/StringBuilder/append(java.lang.String)
org/eclipse/osgi/internal/resolver/StateBuilder/createOSGiRequires(org.eclipse.osgi.util.ManifestElement[],java.util.List)#org/eclipse/osgi/internal/resolver/GenericSpecificationImpl/setName(java.lang.String)
org/eclipse/osgi/internal/resolver/StateBuilder/createOSGiRequires(org.eclipse.osgi.util.ManifestElement[],java.util.List)#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/eclipse/osgi/internal/resolver/StateBuilder/createOSGiRequires(org.eclipse.osgi.util.ManifestElement[],java.util.List)#java/lang/String/equals(java.lang.Object)
org/eclipse/osgi/internal/resolver/StateBuilder/createOSGiRequires(org.eclipse.osgi.util.ManifestElement[],java.util.List)#org/osgi/framework/BundleException/BundleException(java.lang.String,int,java.lang.Throwable)
org/eclipse/osgi/internal/resolver/StateBuilder/createOSGiRequires(org.eclipse.osgi.util.ManifestElement[],java.util.List)#java/util/List/add(java.lang.Object)
org/eclipse/osgi/internal/resolver/StateBuilder/createOSGiRequires(org.eclipse.osgi.util.ManifestElement[],java.util.List)#org/eclipse/osgi/util/NLS/bind(java.lang.String,java.lang.Object,java.lang.Object)
org/eclipse/osgi/internal/resolver/StateBuilder/createOSGiRequires(org.eclipse.osgi.util.ManifestElement[],java.util.List)#java/lang/StringBuilder/toString()
org/eclipse/osgi/internal/resolver/StateBuilder/createOSGiRequires(org.eclipse.osgi.util.ManifestElement[],java.util.List)#org/eclipse/osgi/util/ManifestElement/toString()
org/eclipse/osgi/internal/resolver/StateBuilder/createOSGiRequires(org.eclipse.osgi.util.ManifestElement[],java.util.List)#org/eclipse/osgi/internal/framework/FilterImpl/getPrimaryKeyValue(java.lang.String)
org/eclipse/osgi/internal/resolver/StateBuilder/getAttributes(org.eclipse.osgi.util.ManifestElement,java.lang.String[])#java/util/Map/put(java.lang.Object,java.lang.Object)
org/eclipse/osgi/internal/resolver/StateBuilder/getAttributes(org.eclipse.osgi.util.ManifestElement,java.lang.String[])#java/lang/String/trim()
org/eclipse/osgi/internal/resolver/StateBuilder/getAttributes(org.eclipse.osgi.util.ManifestElement,java.lang.String[])#org/eclipse/osgi/util/ManifestElement/getKeys()
org/eclipse/osgi/internal/resolver/StateBuilder/getAttributes(org.eclipse.osgi.util.ManifestElement,java.lang.String[])#java/util/HashMap/HashMap()
org/eclipse/osgi/internal/resolver/StateBuilder/getAttributes(org.eclipse.osgi.util.ManifestElement,java.lang.String[])#java/lang/String/equals(java.lang.Object)
org/eclipse/osgi/internal/resolver/StateBuilder/getAttributes(org.eclipse.osgi.util.ManifestElement,java.lang.String[])#java/lang/String/substring(int,int)
org/eclipse/osgi/internal/resolver/StateBuilder/getAttributes(org.eclipse.osgi.util.ManifestElement,java.lang.String[])#org/eclipse/osgi/util/ManifestElement/getAttribute(java.lang.String)
org/eclipse/osgi/internal/resolver/StateBuilder/getAttributes(org.eclipse.osgi.util.ManifestElement,java.lang.String[])#java/lang/String/substring(int)
org/eclipse/osgi/internal/resolver/StateBuilder/getAttributes(org.eclipse.osgi.util.ManifestElement,java.lang.String[])#java/util/Enumeration/hasMoreElements()
org/eclipse/osgi/internal/resolver/StateBuilder/getAttributes(org.eclipse.osgi.util.ManifestElement,java.lang.String[])#java/util/Enumeration/nextElement()
org/eclipse/osgi/internal/resolver/StateBuilder/getAttributes(org.eclipse.osgi.util.ManifestElement,java.lang.String[])#java/lang/String/indexOf(int)
org/eclipse/osgi/internal/resolver/StateBuilder/checkForDuplicateDirectivesAttributes(java.lang.String,org.eclipse.osgi.util.ManifestElement[])#org/eclipse/osgi/util/ManifestElement/getDirectiveKeys()
org/eclipse/osgi/internal/resolver/StateBuilder/checkForDuplicateDirectivesAttributes(java.lang.String,org.eclipse.osgi.util.ManifestElement[])#org/eclipse/osgi/util/NLS/bind(java.lang.String,java.lang.Object,java.lang.Object)
org/eclipse/osgi/internal/resolver/StateBuilder/checkForDuplicateDirectivesAttributes(java.lang.String,org.eclipse.osgi.util.ManifestElement[])#org/eclipse/osgi/util/NLS/bind(java.lang.String,java.lang.Object)
org/eclipse/osgi/internal/resolver/StateBuilder/checkForDuplicateDirectivesAttributes(java.lang.String,org.eclipse.osgi.util.ManifestElement[])#java/lang/String/valueOf(java.lang.Object)
org/eclipse/osgi/internal/resolver/StateBuilder/checkForDuplicateDirectivesAttributes(java.lang.String,org.eclipse.osgi.util.ManifestElement[])#java/lang/StringBuilder/append(java.lang.String)
org/eclipse/osgi/internal/resolver/StateBuilder/checkForDuplicateDirectivesAttributes(java.lang.String,org.eclipse.osgi.util.ManifestElement[])#org/eclipse/osgi/util/ManifestElement/getAttributes(java.lang.String)
org/eclipse/osgi/internal/resolver/StateBuilder/checkForDuplicateDirectivesAttributes(java.lang.String,org.eclipse.osgi.util.ManifestElement[])#org/eclipse/osgi/util/ManifestElement/getKeys()
org/eclipse/osgi/internal/resolver/StateBuilder/checkForDuplicateDirectivesAttributes(java.lang.String,org.eclipse.osgi.util.ManifestElement[])#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/eclipse/osgi/internal/resolver/StateBuilder/checkForDuplicateDirectivesAttributes(java.lang.String,org.eclipse.osgi.util.ManifestElement[])#org/osgi/framework/BundleException/BundleException(java.lang.String,int)
org/eclipse/osgi/internal/resolver/StateBuilder/checkForDuplicateDirectivesAttributes(java.lang.String,org.eclipse.osgi.util.ManifestElement[])#org/eclipse/osgi/util/ManifestElement/getDirectives(java.lang.String)
org/eclipse/osgi/internal/resolver/StateBuilder/checkForDuplicateDirectivesAttributes(java.lang.String,org.eclipse.osgi.util.ManifestElement[])#java/util/Enumeration/hasMoreElements()
org/eclipse/osgi/internal/resolver/StateBuilder/checkForDuplicateDirectivesAttributes(java.lang.String,org.eclipse.osgi.util.ManifestElement[])#java/util/Enumeration/nextElement()
org/eclipse/osgi/internal/resolver/StateBuilder/checkForDuplicateDirectivesAttributes(java.lang.String,org.eclipse.osgi.util.ManifestElement[])#java/lang/StringBuilder/toString()
org/eclipse/osgi/internal/resolver/StateBuilder/checkForDuplicateDirectivesAttributes(java.lang.String,org.eclipse.osgi.util.ManifestElement[])#org/eclipse/osgi/util/ManifestElement/toString()
org/eclipse/osgi/internal/resolver/StateBuilder/addExportPackages(org.eclipse.osgi.util.ManifestElement,java.util.List,boolean)#org/osgi/framework/Version/parseVersion(java.lang.String)
org/eclipse/osgi/internal/resolver/StateBuilder/addExportPackages(org.eclipse.osgi.util.ManifestElement,java.util.List,boolean)#org/eclipse/osgi/util/ManifestElement/getDirective(java.lang.String)
org/eclipse/osgi/internal/resolver/StateBuilder/addExportPackages(org.eclipse.osgi.util.ManifestElement,java.util.List,boolean)#org/eclipse/osgi/internal/resolver/ExportPackageDescriptionImpl/setName(java.lang.String)
org/eclipse/osgi/internal/resolver/StateBuilder/addExportPackages(org.eclipse.osgi.util.ManifestElement,java.util.List,boolean)#java/lang/String/equals(java.lang.Object)
org/eclipse/osgi/internal/resolver/StateBuilder/addExportPackages(org.eclipse.osgi.util.ManifestElement,java.util.List,boolean)#org/eclipse/osgi/util/ManifestElement/getAttribute(java.lang.String)
org/eclipse/osgi/internal/resolver/StateBuilder/addExportPackages(org.eclipse.osgi.util.ManifestElement,java.util.List,boolean)#java/util/List/add(java.lang.Object)
org/eclipse/osgi/internal/resolver/StateBuilder/addExportPackages(org.eclipse.osgi.util.ManifestElement,java.util.List,boolean)#org/eclipse/osgi/util/ManifestElement/getArrayFromList(java.lang.String)
org/eclipse/osgi/internal/resolver/StateBuilder/addExportPackages(org.eclipse.osgi.util.ManifestElement,java.util.List,boolean)#org/eclipse/osgi/internal/resolver/ExportPackageDescriptionImpl/setVersion(org.osgi.framework.Version)
org/eclipse/osgi/internal/resolver/StateBuilder/addExportPackages(org.eclipse.osgi.util.ManifestElement,java.util.List,boolean)#org/eclipse/osgi/util/ManifestElement/getValueComponents()
org/eclipse/osgi/internal/resolver/StateBuilder/addExportPackages(org.eclipse.osgi.util.ManifestElement,java.util.List,boolean)#java/lang/Boolean/valueOf(java.lang.String)
org/eclipse/osgi/internal/resolver/StateBuilder/checkExtensionBundle(java.lang.String,org.eclipse.osgi.util.ManifestElement[])#org/eclipse/osgi/util/NLS/bind(java.lang.String,java.lang.Object,java.lang.Object)
org/eclipse/osgi/internal/resolver/StateBuilder/checkExtensionBundle(java.lang.String,org.eclipse.osgi.util.ManifestElement[])#org/eclipse/osgi/util/NLS/bind(java.lang.String,java.lang.Object)
org/eclipse/osgi/internal/resolver/StateBuilder/checkExtensionBundle(java.lang.String,org.eclipse.osgi.util.ManifestElement[])#java/lang/String/valueOf(java.lang.Object)
org/eclipse/osgi/internal/resolver/StateBuilder/checkExtensionBundle(java.lang.String,org.eclipse.osgi.util.ManifestElement[])#org/eclipse/osgi/util/ManifestElement/getDirective(java.lang.String)
org/eclipse/osgi/internal/resolver/StateBuilder/checkExtensionBundle(java.lang.String,org.eclipse.osgi.util.ManifestElement[])#java/lang/StringBuilder/append(java.lang.String)
org/eclipse/osgi/internal/resolver/StateBuilder/checkExtensionBundle(java.lang.String,org.eclipse.osgi.util.ManifestElement[])#org/eclipse/osgi/util/ManifestElement/getValue()
org/eclipse/osgi/internal/resolver/StateBuilder/checkExtensionBundle(java.lang.String,org.eclipse.osgi.util.ManifestElement[])#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/eclipse/osgi/internal/resolver/StateBuilder/checkExtensionBundle(java.lang.String,org.eclipse.osgi.util.ManifestElement[])#java/lang/String/equals(java.lang.Object)
org/eclipse/osgi/internal/resolver/StateBuilder/checkExtensionBundle(java.lang.String,org.eclipse.osgi.util.ManifestElement[])#org/osgi/framework/BundleException/BundleException(java.lang.String,int)
org/eclipse/osgi/internal/resolver/StateBuilder/checkExtensionBundle(java.lang.String,org.eclipse.osgi.util.ManifestElement[])#java/lang/StringBuilder/toString()
org/eclipse/osgi/internal/resolver/StateBuilder/checkExtensionBundle(java.lang.String,org.eclipse.osgi.util.ManifestElement[])#org/eclipse/osgi/util/ManifestElement/toString()
org/eclipse/osgi/internal/resolver/StateBuilder/createOsgiIdentityCapability(org.eclipse.osgi.service.resolver.BundleDescription)#org/eclipse/osgi/service/resolver/BundleDescription/getSymbolicName()
org/eclipse/osgi/internal/resolver/StateBuilder/createOsgiIdentityCapability(org.eclipse.osgi.service.resolver.BundleDescription)#java/util/Hashtable/Hashtable(java.util.Map)
org/eclipse/osgi/internal/resolver/StateBuilder/createOsgiIdentityCapability(org.eclipse.osgi.service.resolver.BundleDescription)#java/util/Dictionary/remove(java.lang.Object)
org/eclipse/osgi/internal/resolver/StateBuilder/createOsgiIdentityCapability(org.eclipse.osgi.service.resolver.BundleDescription)#java/util/HashMap/HashMap(java.util.Map)
org/eclipse/osgi/internal/resolver/StateBuilder/createOsgiIdentityCapability(org.eclipse.osgi.service.resolver.BundleDescription)#org/eclipse/osgi/service/resolver/BundleDescription/isSingleton()
org/eclipse/osgi/internal/resolver/StateBuilder/createOsgiIdentityCapability(org.eclipse.osgi.service.resolver.BundleDescription)#org/eclipse/osgi/service/resolver/BundleDescription/getDeclaredAttributes()
org/eclipse/osgi/internal/resolver/StateBuilder/createOsgiIdentityCapability(org.eclipse.osgi.service.resolver.BundleDescription)#java/util/Map/remove(java.lang.Object)
org/eclipse/osgi/internal/resolver/StateBuilder/createOsgiIdentityCapability(org.eclipse.osgi.service.resolver.BundleDescription)#org/eclipse/osgi/service/resolver/BundleDescription/getDeclaredDirectives()
org/eclipse/osgi/internal/resolver/StateBuilder/createOsgiIdentityCapability(org.eclipse.osgi.service.resolver.BundleDescription)#org/eclipse/osgi/service/resolver/BundleDescription/getVersion()
org/eclipse/osgi/internal/resolver/StateBuilder/createOsgiIdentityCapability(org.eclipse.osgi.service.resolver.BundleDescription)#java/util/Dictionary/put(java.lang.Object,java.lang.Object)
org/eclipse/osgi/internal/resolver/StateBuilder/createOsgiIdentityCapability(org.eclipse.osgi.service.resolver.BundleDescription)#org/eclipse/osgi/service/resolver/BundleDescription/dynamicFragments()
org/eclipse/osgi/internal/resolver/StateBuilder/createOsgiIdentityCapability(org.eclipse.osgi.service.resolver.BundleDescription)#org/eclipse/osgi/service/resolver/BundleDescription/getHost()
org/eclipse/osgi/internal/resolver/StateBuilder/createOsgiIdentityCapability(org.eclipse.osgi.service.resolver.BundleDescription)#org/eclipse/osgi/service/resolver/BundleDescription/attachFragments()
org/eclipse/osgi/internal/resolver/StateBuilder/createOSGiCapabilities(org.eclipse.osgi.util.ManifestElement[],java.util.List,java.lang.Integer)#org/eclipse/osgi/util/ManifestElement/getDirectiveKeys()
org/eclipse/osgi/internal/resolver/StateBuilder/createOSGiCapabilities(org.eclipse.osgi.util.ManifestElement[],java.util.List,java.lang.Integer)#org/eclipse/osgi/util/ManifestElement/getDirective(java.lang.String)
org/eclipse/osgi/internal/resolver/StateBuilder/createOSGiCapabilities(org.eclipse.osgi.util.ManifestElement[],java.util.List,java.lang.Integer)#java/util/HashMap/HashMap()
org/eclipse/osgi/internal/resolver/StateBuilder/createOSGiCapabilities(org.eclipse.osgi.util.ManifestElement[],java.util.List,java.lang.Integer)#java/lang/String/equals(java.lang.Object)
org/eclipse/osgi/internal/resolver/StateBuilder/createOSGiCapabilities(org.eclipse.osgi.util.ManifestElement[],java.util.List,java.lang.Integer)#java/util/Hashtable/Hashtable()
org/eclipse/osgi/internal/resolver/StateBuilder/createOSGiCapabilities(org.eclipse.osgi.util.ManifestElement[],java.util.List,java.lang.Integer)#java/util/List/add(java.lang.Object)
org/eclipse/osgi/internal/resolver/StateBuilder/createOSGiCapabilities(org.eclipse.osgi.util.ManifestElement[],java.util.List,java.lang.Integer)#org/osgi/framework/BundleException/BundleException(java.lang.String)
org/eclipse/osgi/internal/resolver/StateBuilder/createOSGiCapabilities(org.eclipse.osgi.util.ManifestElement[],java.util.List,java.lang.Integer)#java/util/Enumeration/hasMoreElements()
org/eclipse/osgi/internal/resolver/StateBuilder/createOSGiCapabilities(org.eclipse.osgi.util.ManifestElement[],java.util.List,java.lang.Integer)#java/util/Enumeration/nextElement()
org/eclipse/osgi/internal/resolver/StateBuilder/createOSGiCapabilities(org.eclipse.osgi.util.ManifestElement[],java.util.List,java.lang.Integer)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/eclipse/osgi/internal/resolver/StateBuilder/createOSGiCapabilities(org.eclipse.osgi.util.ManifestElement[],java.util.List,java.lang.Integer)#java/util/ArrayList/ArrayList(int)
org/eclipse/osgi/internal/resolver/StateBuilder/createOSGiCapabilities(org.eclipse.osgi.util.ManifestElement[],java.util.List,java.lang.Integer)#java/util/Hashtable/Hashtable(java.util.Map)
org/eclipse/osgi/internal/resolver/StateBuilder/createOSGiCapabilities(org.eclipse.osgi.util.ManifestElement[],java.util.List,java.lang.Integer)#org/eclipse/osgi/util/ManifestElement/getValueComponents()
org/eclipse/osgi/internal/resolver/StateBuilder/getGenericCapabilities(java.util.Dictionary,java.lang.String[][])#java/util/ArrayList/ArrayList(int)
org/eclipse/osgi/internal/resolver/StateBuilder/getGenericCapabilities(java.util.Dictionary,java.lang.String[][])#java/util/Dictionary/get(java.lang.Object)
org/eclipse/osgi/internal/resolver/StateBuilder/getGenericCapabilities(java.util.Dictionary,java.lang.String[][])#java/lang/StringBuffer/append(char)
org/eclipse/osgi/internal/resolver/StateBuilder/getGenericCapabilities(java.util.Dictionary,java.lang.String[][])#org/eclipse/osgi/util/ManifestElement/getKeys()
org/eclipse/osgi/internal/resolver/StateBuilder/getGenericCapabilities(java.util.Dictionary,java.lang.String[][])#org/eclipse/osgi/util/ManifestElement/getAttribute(java.lang.String)
org/eclipse/osgi/internal/resolver/StateBuilder/getGenericCapabilities(java.util.Dictionary,java.lang.String[][])#java/util/Enumeration/hasMoreElements()
org/eclipse/osgi/internal/resolver/StateBuilder/getGenericCapabilities(java.util.Dictionary,java.lang.String[][])#java/lang/StringBuffer/append(java.lang.String)
org/eclipse/osgi/internal/resolver/StateBuilder/getGenericCapabilities(java.util.Dictionary,java.lang.String[][])#java/util/Enumeration/nextElement()
org/eclipse/osgi/internal/resolver/StateBuilder/getGenericCapabilities(java.util.Dictionary,java.lang.String[][])#java/lang/StringBuffer/StringBuffer()
org/eclipse/osgi/internal/resolver/StateBuilder/getGenericCapabilities(java.util.Dictionary,java.lang.String[][])#org/eclipse/osgi/util/ManifestElement/getValue()
org/eclipse/osgi/internal/resolver/StateBuilder/getGenericCapabilities(java.util.Dictionary,java.lang.String[][])#java/util/List/size()
org/eclipse/osgi/internal/resolver/StateBuilder/getGenericCapabilities(java.util.Dictionary,java.lang.String[][])#java/util/List/toArray(java.lang.Object[])
org/eclipse/osgi/internal/resolver/StateBuilder/getGenericCapabilities(java.util.Dictionary,java.lang.String[][])#java/lang/StringBuffer/toString()
org/eclipse/osgi/internal/resolver/StateBuilder/getGenericCapabilities(java.util.Dictionary,java.lang.String[][])#org/eclipse/osgi/util/ManifestElement/parseHeader(java.lang.String,java.lang.String)
org/eclipse/osgi/internal/resolver/StateBuilder/getGenericCapabilities(java.util.Dictionary,java.lang.String[][])#java/util/List/add(java.lang.Object)
org/eclipse/osgi/internal/resolver/StateBuilder/getOSGiEENameVersion(java.lang.String)#java/lang/String/valueOf(java.lang.Object)
org/eclipse/osgi/internal/resolver/StateBuilder/getOSGiEENameVersion(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/eclipse/osgi/internal/resolver/StateBuilder/getOSGiEENameVersion(java.lang.String)#java/lang/String/length()
org/eclipse/osgi/internal/resolver/StateBuilder/getOSGiEENameVersion(java.lang.String)#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/eclipse/osgi/internal/resolver/StateBuilder/getOSGiEENameVersion(java.lang.String)#java/lang/String/equals(java.lang.Object)
org/eclipse/osgi/internal/resolver/StateBuilder/getOSGiEENameVersion(java.lang.String)#java/lang/String/substring(int,int)
org/eclipse/osgi/internal/resolver/StateBuilder/getOSGiEENameVersion(java.lang.String)#java/lang/String/substring(int)
org/eclipse/osgi/internal/resolver/StateBuilder/getOSGiEENameVersion(java.lang.String)#java/lang/String/indexOf(int)
org/eclipse/osgi/internal/resolver/StateBuilder/getOSGiEENameVersion(java.lang.String)#java/lang/StringBuilder/toString()
org/eclipse/osgi/internal/resolver/StateBuilder/getOSGiEENameVersion(java.lang.String)#java/lang/String/valueOf(char)
org/eclipse/osgi/internal/resolver/StateBuilder/getOSGiEENameVersion(java.lang.String)#org/osgi/framework/Version/parseVersion(java.lang.String)
org/eclipse/osgi/internal/resolver/StateBuilder/createEquinoxRequires(org.eclipse.osgi.util.ManifestElement[])#org/eclipse/osgi/util/ManifestElement/getValueComponents()
org/eclipse/osgi/internal/resolver/StateBuilder/createEquinoxRequires(org.eclipse.osgi.util.ManifestElement[])#java/lang/String/valueOf(java.lang.Object)
org/eclipse/osgi/internal/resolver/StateBuilder/createEquinoxRequires(org.eclipse.osgi.util.ManifestElement[])#java/lang/StringBuilder/append(java.lang.String)
org/eclipse/osgi/internal/resolver/StateBuilder/createEquinoxRequires(org.eclipse.osgi.util.ManifestElement[])#org/eclipse/osgi/internal/resolver/GenericSpecificationImpl/setName(java.lang.String)
org/eclipse/osgi/internal/resolver/StateBuilder/createEquinoxRequires(org.eclipse.osgi.util.ManifestElement[])#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/eclipse/osgi/internal/resolver/StateBuilder/createEquinoxRequires(org.eclipse.osgi.util.ManifestElement[])#java/lang/String/substring(int,int)
org/eclipse/osgi/internal/resolver/StateBuilder/createEquinoxRequires(org.eclipse.osgi.util.ManifestElement[])#org/eclipse/osgi/util/ManifestElement/getAttribute(java.lang.String)
org/eclipse/osgi/internal/resolver/StateBuilder/createEquinoxRequires(org.eclipse.osgi.util.ManifestElement[])#org/osgi/framework/BundleException/BundleException(java.lang.String,int,java.lang.Throwable)
org/eclipse/osgi/internal/resolver/StateBuilder/createEquinoxRequires(org.eclipse.osgi.util.ManifestElement[])#java/lang/String/substring(int)
org/eclipse/osgi/internal/resolver/StateBuilder/createEquinoxRequires(org.eclipse.osgi.util.ManifestElement[])#java/lang/String/indexOf(int)
org/eclipse/osgi/internal/resolver/StateBuilder/createEquinoxRequires(org.eclipse.osgi.util.ManifestElement[])#java/util/ArrayList/ArrayList(int)
org/eclipse/osgi/internal/resolver/StateBuilder/createEquinoxRequires(org.eclipse.osgi.util.ManifestElement[])#org/eclipse/osgi/util/NLS/bind(java.lang.String,java.lang.Object,java.lang.Object)
org/eclipse/osgi/internal/resolver/StateBuilder/createEquinoxRequires(org.eclipse.osgi.util.ManifestElement[])#java/lang/String/equals(java.lang.Object)
org/eclipse/osgi/internal/resolver/StateBuilder/createEquinoxRequires(org.eclipse.osgi.util.ManifestElement[])#java/util/ArrayList/add(java.lang.Object)
org/eclipse/osgi/internal/resolver/StateBuilder/createEquinoxRequires(org.eclipse.osgi.util.ManifestElement[])#java/lang/StringBuilder/toString()
org/eclipse/osgi/internal/resolver/StateBuilder/createEquinoxRequires(org.eclipse.osgi.util.ManifestElement[])#org/eclipse/osgi/util/ManifestElement/toString()
org/eclipse/osgi/internal/resolver/VersionConstraintImpl/BundleRequirementImpl/matches(org.osgi.resource.Capability)#org/osgi/resource/Capability/getDirectives()
org/eclipse/osgi/internal/resolver/VersionConstraintImpl/BundleRequirementImpl/matches(org.osgi.resource.Capability)#org/osgi/framework/Filter/matches(java.util.Map)
org/eclipse/osgi/internal/resolver/VersionConstraintImpl/BundleRequirementImpl/matches(org.osgi.resource.Capability)#org/osgi/framework/FrameworkUtil/createFilter(java.lang.String)
org/eclipse/osgi/internal/resolver/VersionConstraintImpl/BundleRequirementImpl/matches(org.osgi.resource.Capability)#org/eclipse/osgi/internal/resolver/VersionConstraintImpl$BundleRequirementImpl/getDirectives()
org/eclipse/osgi/internal/resolver/VersionConstraintImpl/BundleRequirementImpl/matches(org.osgi.resource.Capability)#org/eclipse/osgi/internal/resolver/VersionConstraintImpl$BundleRequirementImpl/matches(org.osgi.framework.wiring.BundleCapability)
org/eclipse/osgi/internal/resolver/VersionConstraintImpl/BundleRequirementImpl/matches(org.osgi.resource.Capability)#java/util/Map/get(java.lang.Object)
org/eclipse/osgi/internal/resolver/VersionConstraintImpl/BundleRequirementImpl/matches(org.osgi.resource.Capability)#org/osgi/resource/Capability/getAttributes()
org/eclipse/osgi/internal/resolver/VersionConstraintImpl/BundleRequirementImpl/matches(org.osgi.resource.Capability)#org/osgi/resource/Capability/getNamespace()
org/eclipse/osgi/internal/resolver/VersionConstraintImpl/BundleRequirementImpl/matches(org.osgi.resource.Capability)#org/eclipse/osgi/util/ManifestElement/getArrayFromList(java.lang.String)
org/eclipse/osgi/internal/resolver/VersionConstraintImpl/BundleRequirementImpl/matches(org.osgi.resource.Capability)#java/lang/String/equals(java.lang.Object)
org/eclipse/osgi/internal/resolver/BundleDescriptionImpl/DescriptionWiring/getRequiredWires(java.lang.String)#java/util/ArrayList/ArrayList()
org/eclipse/osgi/internal/resolver/BundleDescriptionImpl/DescriptionWiring/getRequiredWires(java.lang.String)#java/util/ArrayList/ArrayList(int)
org/eclipse/osgi/internal/resolver/BundleDescriptionImpl/DescriptionWiring/getRequiredWires(java.lang.String)#java/util/Iterator/hasNext()
org/eclipse/osgi/internal/resolver/BundleDescriptionImpl/DescriptionWiring/getRequiredWires(java.lang.String)#org/eclipse/osgi/internal/resolver/BundleDescriptionImpl$DescriptionWiring/isInUse()
org/eclipse/osgi/internal/resolver/BundleDescriptionImpl/DescriptionWiring/getRequiredWires(java.lang.String)#java/util/Map/get(java.lang.Object)
org/eclipse/osgi/internal/resolver/BundleDescriptionImpl/DescriptionWiring/getRequiredWires(java.lang.String)#java/util/Collections/emptyList()
org/eclipse/osgi/internal/resolver/BundleDescriptionImpl/DescriptionWiring/getRequiredWires(java.lang.String)#java/util/List/size()
org/eclipse/osgi/internal/resolver/BundleDescriptionImpl/DescriptionWiring/getRequiredWires(java.lang.String)#java/util/Map/values()
org/eclipse/osgi/internal/resolver/BundleDescriptionImpl/DescriptionWiring/getRequiredWires(java.lang.String)#java/util/Iterator/next()
org/eclipse/osgi/internal/resolver/BundleDescriptionImpl/DescriptionWiring/getRequiredWires(java.lang.String)#java/util/List/add(java.lang.Object)
org/eclipse/osgi/internal/resolver/BundleDescriptionImpl/DescriptionWiring/getRequiredWires(java.lang.String)#org/eclipse/osgi/internal/resolver/BundleDescriptionImpl$BundleWireImpl/BundleWireImpl(org.eclipse.osgi.service.resolver.StateWire)
org/eclipse/osgi/internal/resolver/BundleDescriptionImpl/DescriptionWiring/getRequiredWires(java.lang.String)#java/util/List/iterator()
org/eclipse/osgi/internal/resolver/BundleDescriptionImpl/DescriptionWiring/getRequiredWires(java.lang.String)#java/util/Collection/iterator()
org/eclipse/osgi/internal/resolver/BundleDescriptionImpl/DescriptionWiring/getRequirements(java.lang.String)#java/util/ArrayList/ArrayList(int)
org/eclipse/osgi/internal/resolver/BundleDescriptionImpl/DescriptionWiring/getRequirements(java.lang.String)#org/eclipse/osgi/service/resolver/ImportPackageSpecification/getDirective(java.lang.String)
org/eclipse/osgi/internal/resolver/BundleDescriptionImpl/DescriptionWiring/getRequirements(java.lang.String)#java/util/Iterator/hasNext()
org/eclipse/osgi/internal/resolver/BundleDescriptionImpl/DescriptionWiring/getRequirements(java.lang.String)#java/util/List/size()
org/eclipse/osgi/internal/resolver/BundleDescriptionImpl/DescriptionWiring/getRequirements(java.lang.String)#java/util/Iterator/next()
org/eclipse/osgi/internal/resolver/BundleDescriptionImpl/DescriptionWiring/getRequirements(java.lang.String)#java/lang/String/equals(java.lang.Object)
org/eclipse/osgi/internal/resolver/BundleDescriptionImpl/DescriptionWiring/getRequirements(java.lang.String)#org/osgi/framework/wiring/BundleWire/getRequirement()
org/eclipse/osgi/internal/resolver/BundleDescriptionImpl/DescriptionWiring/getRequirements(java.lang.String)#java/util/List/add(java.lang.Object)
org/eclipse/osgi/internal/resolver/BundleDescriptionImpl/DescriptionWiring/getRequirements(java.lang.String)#org/eclipse/osgi/internal/resolver/BundleDescriptionImpl$DescriptionWiring/getRequiredWires(java.lang.String)
org/eclipse/osgi/internal/resolver/BundleDescriptionImpl/DescriptionWiring/getRequirements(java.lang.String)#java/util/List/contains(java.lang.Object)
org/eclipse/osgi/internal/resolver/BundleDescriptionImpl/DescriptionWiring/getRequirements(java.lang.String)#java/util/List/iterator()
org/eclipse/osgi/internal/resolver/BundleDescriptionImpl/DescriptionWiring/getRequirements(java.lang.String)#org/eclipse/osgi/service/resolver/ImportPackageSpecification/getRequirement()
org/eclipse/osgi/internal/resolver/BundleDescriptionImpl/DescriptionWiring/getCapabilities(java.lang.String)#org/eclipse/osgi/internal/resolver/BundleDescriptionImpl/getCapability(java.lang.String)
org/eclipse/osgi/internal/resolver/BundleDescriptionImpl/DescriptionWiring/getCapabilities(java.lang.String)#java/util/ArrayList/ArrayList()
org/eclipse/osgi/internal/resolver/BundleDescriptionImpl/DescriptionWiring/getCapabilities(java.lang.String)#org/eclipse/osgi/internal/resolver/BundleDescriptionImpl/getCapability()
org/eclipse/osgi/internal/resolver/BundleDescriptionImpl/DescriptionWiring/getCapabilities(java.lang.String)#org/eclipse/osgi/internal/resolver/BundleDescriptionImpl$DescriptionWiring/isInUse()
org/eclipse/osgi/internal/resolver/BundleDescriptionImpl/DescriptionWiring/getCapabilities(java.lang.String)#java/lang/String/equals(java.lang.Object)
org/eclipse/osgi/internal/resolver/BundleDescriptionImpl/DescriptionWiring/getCapabilities(java.lang.String)#org/eclipse/osgi/service/resolver/GenericDescription/getType()
org/eclipse/osgi/internal/resolver/BundleDescriptionImpl/DescriptionWiring/getCapabilities(java.lang.String)#org/eclipse/osgi/service/resolver/ExportPackageDescription/getCapability()
org/eclipse/osgi/internal/resolver/BundleDescriptionImpl/DescriptionWiring/getCapabilities(java.lang.String)#org/eclipse/osgi/service/resolver/GenericDescription/getCapability()
org/eclipse/osgi/internal/resolver/BundleDescriptionImpl/DescriptionWiring/getCapabilities(java.lang.String)#java/util/List/add(java.lang.Object)
org/eclipse/osgi/internal/resolver/BundleDescriptionImpl/DescriptionWiring/getProvidedWires(java.lang.String)#java/util/Iterator/remove()
org/eclipse/osgi/internal/resolver/BundleDescriptionImpl/DescriptionWiring/getProvidedWires(java.lang.String)#java/util/ArrayList/ArrayList(int)
org/eclipse/osgi/internal/resolver/BundleDescriptionImpl/DescriptionWiring/getProvidedWires(java.lang.String)#org/eclipse/osgi/internal/resolver/BundleDescriptionImpl$DescriptionWiring/isInUse()
org/eclipse/osgi/internal/resolver/BundleDescriptionImpl/DescriptionWiring/getProvidedWires(java.lang.String)#java/util/List/size()
org/eclipse/osgi/internal/resolver/BundleDescriptionImpl/DescriptionWiring/getProvidedWires(java.lang.String)#java/util/Iterator/next()
org/eclipse/osgi/internal/resolver/BundleDescriptionImpl/DescriptionWiring/getProvidedWires(java.lang.String)#java/util/List/add(java.lang.Object)
org/eclipse/osgi/internal/resolver/BundleDescriptionImpl/DescriptionWiring/getProvidedWires(java.lang.String)#java/util/List/iterator()
org/eclipse/osgi/internal/resolver/BundleDescriptionImpl/DescriptionWiring/getProvidedWires(java.lang.String)#org/osgi/framework/wiring/BundleWiring/getRequiredWires(java.lang.String)
org/eclipse/osgi/internal/resolver/BundleDescriptionImpl/DescriptionWiring/getProvidedWires(java.lang.String)#org/osgi/framework/wiring/BundleWire/getCapability()
org/eclipse/osgi/internal/resolver/BundleDescriptionImpl/DescriptionWiring/getProvidedWires(java.lang.String)#org/osgi/framework/wiring/BundleCapability/equals(java.lang.Object)
org/eclipse/osgi/internal/resolver/BundleDescriptionImpl/DescriptionWiring/getProvidedWires(java.lang.String)#java/util/ArrayList/ArrayList()
org/eclipse/osgi/internal/resolver/BundleDescriptionImpl/DescriptionWiring/getProvidedWires(java.lang.String)#java/util/Iterator/hasNext()
org/eclipse/osgi/internal/resolver/BundleDescriptionImpl/DescriptionWiring/getProvidedWires(java.lang.String)#org/eclipse/osgi/service/resolver/BundleDescription/getWiring()
org/eclipse/osgi/internal/resolver/BundleDescriptionImpl/DescriptionWiring/getProvidedWires(java.lang.String)#org/osgi/framework/wiring/BundleWire/getProviderWiring()
org/eclipse/osgi/internal/resolver/BundleDescriptionImpl/DescriptionWiring/getProvidedWires(java.lang.String)#org/eclipse/osgi/internal/resolver/BundleDescriptionImpl$DescriptionWiring/getCapabilities(java.lang.String)
org/eclipse/osgi/compatibility/state/PlatformBundleListener/resolve(boolean)#java/util/ArrayList/ArrayList(int)
org/eclipse/osgi/compatibility/state/PlatformBundleListener/resolve(boolean)#org/eclipse/osgi/service/resolver/State/getRemovalPending()
org/eclipse/osgi/compatibility/state/PlatformBundleListener/resolve(boolean)#org/eclipse/osgi/service/resolver/State/setTimeStamp(long)
org/eclipse/osgi/compatibility/state/PlatformBundleListener/resolve(boolean)#org/eclipse/osgi/service/resolver/State/resolve(boolean)
org/eclipse/osgi/compatibility/state/PlatformBundleListener/resolve(boolean)#java/util/Collection/toArray(java.lang.Object[])
org/eclipse/osgi/compatibility/state/PlatformBundleListener/resolve(boolean)#org/eclipse/osgi/service/resolver/State/resolve(org.eclipse.osgi.service.resolver.BundleDescription[],boolean)
org/eclipse/osgi/compatibility/state/PlatformBundleListener/resolve(boolean)#java/util/Collection/add(java.lang.Object)
org/eclipse/osgi/compatibility/state/PlatformBundleListener/resolve(boolean)#org/eclipse/osgi/container/ModuleDatabase/readUnlock()
org/eclipse/osgi/compatibility/state/PlatformBundleListener/resolve(boolean)#java/util/Collection/contains(java.lang.Object)
org/eclipse/osgi/compatibility/state/PlatformBundleListener/resolve(boolean)#org/eclipse/osgi/container/ModuleContainer/getRemovalPending()
org/eclipse/osgi/compatibility/state/PlatformBundleListener/resolve(boolean)#org/eclipse/osgi/container/ModuleDatabase/readLock()
org/eclipse/osgi/compatibility/state/PlatformBundleListener/resolve(boolean)#org/eclipse/osgi/container/ModuleDatabase/getRevisionsTimestamp()
org/eclipse/osgi/compatibility/state/PlatformBundleListener/resolve(boolean)#java/util/Collection/isEmpty()
org/eclipse/osgi/compatibility/state/PlatformBundleListener/resolve(boolean)#java/util/Collection/size()
org/eclipse/osgi/compatibility/state/PlatformBundleListener/resolve(boolean)#org/eclipse/osgi/service/resolver/BundleDescription/getUserObject()
org/eclipse/osgi/compatibility/state/PlatformBundleListener/bundleChanged(org.osgi.framework.BundleEvent)#org/osgi/framework/Bundle/adapt(java.lang.Class)
org/eclipse/osgi/compatibility/state/PlatformBundleListener/bundleChanged(org.osgi.framework.BundleEvent)#org/osgi/framework/BundleEvent/getType()
org/eclipse/osgi/compatibility/state/PlatformBundleListener/bundleChanged(org.osgi.framework.BundleEvent)#org/eclipse/osgi/service/resolver/State/updateBundle(org.eclipse.osgi.service.resolver.BundleDescription)
org/eclipse/osgi/compatibility/state/PlatformBundleListener/bundleChanged(org.osgi.framework.BundleEvent)#org/osgi/framework/Bundle/getBundleId()
org/eclipse/osgi/compatibility/state/PlatformBundleListener/bundleChanged(org.osgi.framework.BundleEvent)#org/eclipse/osgi/service/resolver/State/removeBundle(long)
org/eclipse/osgi/compatibility/state/PlatformBundleListener/bundleChanged(org.osgi.framework.BundleEvent)#org/eclipse/osgi/service/resolver/State/addBundle(org.eclipse.osgi.service.resolver.BundleDescription)
org/eclipse/osgi/compatibility/state/PlatformBundleListener/bundleChanged(org.osgi.framework.BundleEvent)#java/util/concurrent/atomic/AtomicBoolean/set(boolean)
org/eclipse/osgi/compatibility/state/PlatformBundleListener/bundleChanged(org.osgi.framework.BundleEvent)#java/util/concurrent/atomic/AtomicBoolean/getAndSet(boolean)
org/eclipse/osgi/compatibility/state/PlatformBundleListener/bundleChanged(org.osgi.framework.BundleEvent)#org/eclipse/osgi/service/resolver/State/setTimeStamp(long)
org/eclipse/osgi/compatibility/state/PlatformBundleListener/bundleChanged(org.osgi.framework.BundleEvent)#org/eclipse/osgi/container/ModuleDatabase/getRevisionsTimestamp()
org/eclipse/osgi/compatibility/state/PlatformBundleListener/bundleChanged(org.osgi.framework.BundleEvent)#org/osgi/framework/BundleEvent/getBundle()
org/eclipse/osgi/internal/resolver/BaseDescriptionImpl/toString(java.util.Map,boolean)#java/util/Iterator/hasNext()
org/eclipse/osgi/internal/resolver/BaseDescriptionImpl/toString(java.util.Map,boolean)#java/lang/StringBuffer/append(char)
org/eclipse/osgi/internal/resolver/BaseDescriptionImpl/toString(java.util.Map,boolean)#java/lang/StringBuffer/length()
org/eclipse/osgi/internal/resolver/BaseDescriptionImpl/toString(java.util.Map,boolean)#java/lang/StringBuffer/append(java.lang.Object)
org/eclipse/osgi/internal/resolver/BaseDescriptionImpl/toString(java.util.Map,boolean)#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/eclipse/osgi/internal/resolver/BaseDescriptionImpl/toString(java.util.Map,boolean)#java/util/Iterator/next()
org/eclipse/osgi/internal/resolver/BaseDescriptionImpl/toString(java.util.Map,boolean)#java/lang/String/lastIndexOf(int)
org/eclipse/osgi/internal/resolver/BaseDescriptionImpl/toString(java.util.Map,boolean)#java/util/Set/iterator()
org/eclipse/osgi/internal/resolver/BaseDescriptionImpl/toString(java.util.Map,boolean)#java/lang/String/substring(int)
org/eclipse/osgi/internal/resolver/BaseDescriptionImpl/toString(java.util.Map,boolean)#java/util/List/get(int)
org/eclipse/osgi/internal/resolver/BaseDescriptionImpl/toString(java.util.Map,boolean)#java/util/Map/entrySet()
org/eclipse/osgi/internal/resolver/BaseDescriptionImpl/toString(java.util.Map,boolean)#java/lang/StringBuffer/StringBuffer()
org/eclipse/osgi/internal/resolver/BaseDescriptionImpl/toString(java.util.Map,boolean)#java/lang/StringBuilder/append(java.lang.String)
org/eclipse/osgi/internal/resolver/BaseDescriptionImpl/toString(java.util.Map,boolean)#java/util/Map$Entry/getKey()
org/eclipse/osgi/internal/resolver/BaseDescriptionImpl/toString(java.util.Map,boolean)#java/util/List/size()
org/eclipse/osgi/internal/resolver/BaseDescriptionImpl/toString(java.util.Map,boolean)#java/util/Map/size()
org/eclipse/osgi/internal/resolver/BaseDescriptionImpl/toString(java.util.Map,boolean)#java/lang/Class/getName()
org/eclipse/osgi/internal/resolver/BaseDescriptionImpl/toString(java.util.Map,boolean)#java/lang/StringBuffer/toString()
org/eclipse/osgi/internal/resolver/BaseDescriptionImpl/toString(java.util.Map,boolean)#java/lang/Object/getClass()
org/eclipse/osgi/internal/resolver/BaseDescriptionImpl/toString(java.util.Map,boolean)#java/util/Map$Entry/getValue()
org/eclipse/osgi/internal/resolver/BaseDescriptionImpl/toString(java.util.Map,boolean)#java/util/List/iterator()
org/eclipse/osgi/internal/resolver/BaseDescriptionImpl/toString(java.util.Map,boolean)#java/lang/StringBuffer/append(java.lang.String)
org/eclipse/osgi/internal/resolver/BaseDescriptionImpl/toString(java.util.Map,boolean)#java/lang/StringBuilder/toString()
org/eclipse/osgi/internal/resolver/BaseDescriptionImpl/toString(java.util.Map,boolean)#java/lang/StringBuffer/setLength(int)
org/eclipse/osgi/internal/module/PermissionChecker/checkPermission(org.eclipse.osgi.service.resolver.VersionConstraint,org.eclipse.osgi.service.resolver.BaseDescription)#org/eclipse/osgi/service/resolver/BaseDescription/getName()
org/eclipse/osgi/internal/module/PermissionChecker/checkPermission(org.eclipse.osgi.service.resolver.VersionConstraint,org.eclipse.osgi.service.resolver.BaseDescription)#org/eclipse/osgi/service/resolver/VersionConstraint/getName()
org/eclipse/osgi/internal/module/PermissionChecker/checkPermission(org.eclipse.osgi.service.resolver.VersionConstraint,org.eclipse.osgi.service.resolver.BaseDescription)#org/eclipse/osgi/service/resolver/GenericDescription/getDeclaredAttributes()
org/eclipse/osgi/internal/module/PermissionChecker/checkPermission(org.eclipse.osgi.service.resolver.VersionConstraint,org.eclipse.osgi.service.resolver.BaseDescription)#org/osgi/framework/Bundle/getState()
org/eclipse/osgi/internal/module/PermissionChecker/checkPermission(org.eclipse.osgi.service.resolver.VersionConstraint,org.eclipse.osgi.service.resolver.BaseDescription)#org/osgi/framework/Bundle/hasPermission(java.lang.Object)
org/eclipse/osgi/internal/module/PermissionChecker/checkPermission(org.eclipse.osgi.service.resolver.VersionConstraint,org.eclipse.osgi.service.resolver.BaseDescription)#org/eclipse/osgi/service/resolver/State/addResolverError(org.eclipse.osgi.service.resolver.BundleDescription,int,java.lang.String,org.eclipse.osgi.service.resolver.VersionConstraint)
org/eclipse/osgi/internal/module/PermissionChecker/checkPermission(org.eclipse.osgi.service.resolver.VersionConstraint,org.eclipse.osgi.service.resolver.BaseDescription)#org/eclipse/osgi/service/resolver/GenericDescription/getType()
org/eclipse/osgi/internal/module/PermissionChecker/checkPermission(org.eclipse.osgi.service.resolver.VersionConstraint,org.eclipse.osgi.service.resolver.BaseDescription)#org/osgi/framework/PackagePermission/PackagePermission(java.lang.String,org.osgi.framework.Bundle,java.lang.String)
org/eclipse/osgi/internal/module/PermissionChecker/checkPermission(org.eclipse.osgi.service.resolver.VersionConstraint,org.eclipse.osgi.service.resolver.BaseDescription)#org/eclipse/osgi/service/resolver/VersionConstraint/getBundle()
org/eclipse/osgi/internal/module/PermissionChecker/checkPermission(org.eclipse.osgi.service.resolver.VersionConstraint,org.eclipse.osgi.service.resolver.BaseDescription)#org/eclipse/osgi/service/resolver/BaseDescription/getSupplier()
org/eclipse/osgi/internal/module/PermissionChecker/checkPermission(org.eclipse.osgi.service.resolver.VersionConstraint,org.eclipse.osgi.service.resolver.BaseDescription)#java/security/Permission/toString()
org/eclipse/osgi/internal/module/PermissionChecker/checkPermission(org.eclipse.osgi.service.resolver.VersionConstraint,org.eclipse.osgi.service.resolver.BaseDescription)#org/eclipse/osgi/service/resolver/BundleDescription/getBundle()
org/eclipse/osgi/internal/module/PermissionChecker/checkPermission(org.eclipse.osgi.service.resolver.VersionConstraint,org.eclipse.osgi.service.resolver.BaseDescription)#org/osgi/framework/BundlePermission/BundlePermission(java.lang.String,java.lang.String)
org/eclipse/osgi/internal/module/PermissionChecker/checkPermission(org.eclipse.osgi.service.resolver.VersionConstraint,org.eclipse.osgi.service.resolver.BaseDescription)#org/osgi/framework/CapabilityPermission/CapabilityPermission(java.lang.String,java.lang.String)
org/eclipse/osgi/internal/module/PermissionChecker/checkPermission(org.eclipse.osgi.service.resolver.VersionConstraint,org.eclipse.osgi.service.resolver.BaseDescription)#org/osgi/framework/CapabilityPermission/CapabilityPermission(java.lang.String,java.util.Map,org.osgi.framework.Bundle,java.lang.String)
org/eclipse/osgi/internal/module/PermissionChecker/checkPermission(org.eclipse.osgi.service.resolver.VersionConstraint,org.eclipse.osgi.service.resolver.BaseDescription)#org/osgi/framework/PackagePermission/PackagePermission(java.lang.String,java.lang.String)
