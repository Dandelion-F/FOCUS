org/springframework/data/neo4j/util/IterableUtilsTest/checkContainsRealIterables()#org/junit/Assert/assertFalse(boolean)
org/springframework/data/neo4j/util/IterableUtilsTest/checkContainsRealIterables()#org/neo4j/graphdb/Node/delete()
org/springframework/data/neo4j/util/IterableUtilsTest/checkContainsRealIterables()#org/neo4j/graphdb/GraphDatabaseService/shutdown()
org/springframework/data/neo4j/util/IterableUtilsTest/checkContainsRealIterables()#org/neo4j/test/TestGraphDatabaseFactory/newImpermanentDatabase()
org/springframework/data/neo4j/util/IterableUtilsTest/checkContainsRealIterables()#org/neo4j/graphdb/GraphDatabaseService/createNode()
org/springframework/data/neo4j/util/IterableUtilsTest/checkContainsRealIterables()#org/junit/Assert/assertTrue(boolean)
org/springframework/data/neo4j/util/IterableUtilsTest/checkContainsRealIterables()#org/neo4j/graphdb/GraphDatabaseService/beginTx()
org/springframework/data/neo4j/util/IterableUtilsTest/checkContainsRealIterables()#org/neo4j/graphdb/GraphDatabaseService/getAllNodes()
org/springframework/data/neo4j/util/IterableUtilsTest/checkContainsRealIterables()#java/lang/Throwable/addSuppressed(java.lang.Throwable)
org/springframework/data/neo4j/util/IterableUtilsTest/checkContainsRealIterables()#org/neo4j/graphdb/GraphDatabaseService/getNodeById(long)
org/springframework/data/neo4j/util/IterableUtilsTest/checkContainsRealIterables()#org/springframework/data/neo4j/util/IterableUtils/contains(java.lang.Iterable,java.lang.Object)
org/springframework/data/neo4j/util/IterableUtilsTest/checkContainsRealIterables()#org/neo4j/graphdb/Transaction/close()
org/springframework/data/neo4j/util/IterableUtilsTest/checkContainsRealIterables()#org/neo4j/graphdb/Transaction/success()
org/springframework/data/neo4j/util/IterableUtilsTest/checkContainsRealIterables()#org/neo4j/test/TestGraphDatabaseFactory/TestGraphDatabaseFactory()
org/springframework/data/neo4j/auth/AuthenticationTest/testAuthorizedSessionWithSuppliedCredentials()#org/neo4j/ogm/session/Session/beginTransaction()
org/springframework/data/neo4j/auth/AuthenticationTest/testAuthorizedSessionWithSuppliedCredentials()#java/lang/StringBuilder/append(java.lang.String)
org/springframework/data/neo4j/auth/AuthenticationTest/testAuthorizedSessionWithSuppliedCredentials()#java/lang/Throwable/addSuppressed(java.lang.Throwable)
org/springframework/data/neo4j/auth/AuthenticationTest/testAuthorizedSessionWithSuppliedCredentials()#org/junit/Assume/assumeTrue(boolean)
org/springframework/data/neo4j/auth/AuthenticationTest/testAuthorizedSessionWithSuppliedCredentials()#org/neo4j/ogm/session/transaction/Transaction/close()
org/springframework/data/neo4j/auth/AuthenticationTest/testAuthorizedSessionWithSuppliedCredentials()#java/lang/StringBuilder/StringBuilder()
org/springframework/data/neo4j/auth/AuthenticationTest/testAuthorizedSessionWithSuppliedCredentials()#java/lang/Throwable/getLocalizedMessage()
org/springframework/data/neo4j/auth/AuthenticationTest/testAuthorizedSessionWithSuppliedCredentials()#java/lang/StringBuilder/toString()
org/springframework/data/neo4j/auth/AuthenticationTest/testAuthorizedSessionWithSuppliedCredentials()#org/neo4j/ogm/session/result/ResultProcessingException/getCause()
org/springframework/data/neo4j/auth/AuthenticationTest/testAuthorizedSessionWithSuppliedCredentials()#org/junit/Assert/fail(java.lang.String)
org/springframework/data/neo4j/auth/AuthenticationTest/testAuthorizedSessionWithSuppliedCredentials()#org/springframework/data/neo4j/template/Neo4jOperations/loadAll(java.lang.Class)
org/springframework/data/neo4j/auth/AuthenticationTest/testUnauthorizedSession()#org/neo4j/ogm/session/Session/beginTransaction()
org/springframework/data/neo4j/auth/AuthenticationTest/testUnauthorizedSession()#java/lang/Throwable/addSuppressed(java.lang.Throwable)
org/springframework/data/neo4j/auth/AuthenticationTest/testUnauthorizedSession()#java/lang/Throwable/getMessage()
org/springframework/data/neo4j/auth/AuthenticationTest/testUnauthorizedSession()#org/neo4j/ogm/session/transaction/Transaction/close()
org/springframework/data/neo4j/auth/AuthenticationTest/testUnauthorizedSession()#org/junit/Assume/assumeTrue(boolean)
org/springframework/data/neo4j/auth/AuthenticationTest/testUnauthorizedSession()#org/junit/Assert/assertTrue(boolean)
org/springframework/data/neo4j/auth/AuthenticationTest/testUnauthorizedSession()#org/neo4j/ogm/session/result/ResultProcessingException/getCause()
org/springframework/data/neo4j/auth/AuthenticationTest/testUnauthorizedSession()#org/junit/Assert/fail(java.lang.String)
org/springframework/data/neo4j/auth/AuthenticationTest/testUnauthorizedSession()#org/springframework/data/neo4j/template/Neo4jOperations/loadAll(java.lang.Class)
org/springframework/data/neo4j/auth/AuthenticationTest/testUnauthorizedSession()#org/junit/Assert/assertEquals(java.lang.Object,java.lang.Object)
org/springframework/data/neo4j/auth/AuthenticationTest/testUnauthorizedSessionWithSuppliedCredentials()#org/neo4j/ogm/session/Session/beginTransaction()
org/springframework/data/neo4j/auth/AuthenticationTest/testUnauthorizedSessionWithSuppliedCredentials()#java/lang/Throwable/addSuppressed(java.lang.Throwable)
org/springframework/data/neo4j/auth/AuthenticationTest/testUnauthorizedSessionWithSuppliedCredentials()#java/lang/Throwable/getMessage()
org/springframework/data/neo4j/auth/AuthenticationTest/testUnauthorizedSessionWithSuppliedCredentials()#org/neo4j/ogm/session/transaction/Transaction/close()
org/springframework/data/neo4j/auth/AuthenticationTest/testUnauthorizedSessionWithSuppliedCredentials()#org/junit/Assert/assertEquals(java.lang.Object,java.lang.Object)
org/springframework/data/neo4j/auth/AuthenticationTest/testUnauthorizedSessionWithSuppliedCredentials()#org/junit/Assume/assumeTrue(boolean)
org/springframework/data/neo4j/auth/AuthenticationTest/testUnauthorizedSessionWithSuppliedCredentials()#org/junit/Assert/assertTrue(boolean)
org/springframework/data/neo4j/auth/AuthenticationTest/testUnauthorizedSessionWithSuppliedCredentials()#org/neo4j/ogm/session/result/ResultProcessingException/getCause()
org/springframework/data/neo4j/auth/AuthenticationTest/testUnauthorizedSessionWithSuppliedCredentials()#org/junit/Assert/fail(java.lang.String)
org/springframework/data/neo4j/auth/AuthenticationTest/testUnauthorizedSessionWithSuppliedCredentials()#org/springframework/data/neo4j/template/Neo4jOperations/loadAll(java.lang.Class)
org/springframework/data/neo4j/auth/AuthenticationTest/testAuthorizedSession()#org/neo4j/ogm/session/Session/beginTransaction()
org/springframework/data/neo4j/auth/AuthenticationTest/testAuthorizedSession()#java/lang/StringBuilder/append(java.lang.String)
org/springframework/data/neo4j/auth/AuthenticationTest/testAuthorizedSession()#java/lang/Throwable/addSuppressed(java.lang.Throwable)
org/springframework/data/neo4j/auth/AuthenticationTest/testAuthorizedSession()#org/junit/Assume/assumeTrue(boolean)
org/springframework/data/neo4j/auth/AuthenticationTest/testAuthorizedSession()#org/neo4j/ogm/session/transaction/Transaction/close()
org/springframework/data/neo4j/auth/AuthenticationTest/testAuthorizedSession()#java/lang/StringBuilder/StringBuilder()
org/springframework/data/neo4j/auth/AuthenticationTest/testAuthorizedSession()#java/lang/Throwable/getLocalizedMessage()
org/springframework/data/neo4j/auth/AuthenticationTest/testAuthorizedSession()#java/lang/StringBuilder/toString()
org/springframework/data/neo4j/auth/AuthenticationTest/testAuthorizedSession()#org/neo4j/ogm/session/result/ResultProcessingException/getCause()
org/springframework/data/neo4j/auth/AuthenticationTest/testAuthorizedSession()#org/junit/Assert/fail(java.lang.String)
org/springframework/data/neo4j/auth/AuthenticationTest/testAuthorizedSession()#org/springframework/data/neo4j/template/Neo4jOperations/loadAll(java.lang.Class)
org/springframework/data/neo4j/auth/AuthenticationTest/testUnauthorizedSessionWithURI()#org/neo4j/ogm/session/Session/beginTransaction()
org/springframework/data/neo4j/auth/AuthenticationTest/testUnauthorizedSessionWithURI()#java/net/URI/toString()
org/springframework/data/neo4j/auth/AuthenticationTest/testUnauthorizedSessionWithURI()#java/lang/Throwable/addSuppressed(java.lang.Throwable)
org/springframework/data/neo4j/auth/AuthenticationTest/testUnauthorizedSessionWithURI()#java/lang/Throwable/getMessage()
org/springframework/data/neo4j/auth/AuthenticationTest/testUnauthorizedSessionWithURI()#org/neo4j/ogm/session/transaction/Transaction/close()
org/springframework/data/neo4j/auth/AuthenticationTest/testUnauthorizedSessionWithURI()#org/junit/Assert/assertEquals(java.lang.Object,java.lang.Object)
org/springframework/data/neo4j/auth/AuthenticationTest/testUnauthorizedSessionWithURI()#org/neo4j/server/AbstractNeoServer/baseUri()
org/springframework/data/neo4j/auth/AuthenticationTest/testUnauthorizedSessionWithURI()#org/junit/Assume/assumeTrue(boolean)
org/springframework/data/neo4j/auth/AuthenticationTest/testUnauthorizedSessionWithURI()#org/junit/Assert/assertTrue(boolean)
org/springframework/data/neo4j/auth/AuthenticationTest/testUnauthorizedSessionWithURI()#org/neo4j/ogm/session/result/ResultProcessingException/getCause()
org/springframework/data/neo4j/auth/AuthenticationTest/testUnauthorizedSessionWithURI()#org/junit/Assert/fail(java.lang.String)
org/springframework/data/neo4j/auth/AuthenticationTest/testUnauthorizedSessionWithURI()#org/springframework/data/neo4j/template/Neo4jOperations/loadAll(java.lang.Class)
org/springframework/data/neo4j/auth/AuthenticationTest/testAuthorizedSessionWithURI()#org/neo4j/ogm/session/Session/beginTransaction()
org/springframework/data/neo4j/auth/AuthenticationTest/testAuthorizedSessionWithURI()#java/lang/StringBuilder/append(java.lang.String)
org/springframework/data/neo4j/auth/AuthenticationTest/testAuthorizedSessionWithURI()#java/lang/StringBuilder/append(int)
org/springframework/data/neo4j/auth/AuthenticationTest/testAuthorizedSessionWithURI()#java/lang/Throwable/addSuppressed(java.lang.Throwable)
org/springframework/data/neo4j/auth/AuthenticationTest/testAuthorizedSessionWithURI()#java/net/URI/getPort()
org/springframework/data/neo4j/auth/AuthenticationTest/testAuthorizedSessionWithURI()#org/junit/Assume/assumeTrue(boolean)
org/springframework/data/neo4j/auth/AuthenticationTest/testAuthorizedSessionWithURI()#org/neo4j/ogm/session/transaction/Transaction/close()
org/springframework/data/neo4j/auth/AuthenticationTest/testAuthorizedSessionWithURI()#java/lang/StringBuilder/StringBuilder()
org/springframework/data/neo4j/auth/AuthenticationTest/testAuthorizedSessionWithURI()#java/net/URI/getHost()
org/springframework/data/neo4j/auth/AuthenticationTest/testAuthorizedSessionWithURI()#java/lang/Throwable/getLocalizedMessage()
org/springframework/data/neo4j/auth/AuthenticationTest/testAuthorizedSessionWithURI()#org/neo4j/ogm/session/result/ResultProcessingException/getCause()
org/springframework/data/neo4j/auth/AuthenticationTest/testAuthorizedSessionWithURI()#org/junit/Assert/fail(java.lang.String)
org/springframework/data/neo4j/auth/AuthenticationTest/testAuthorizedSessionWithURI()#org/springframework/data/neo4j/template/Neo4jOperations/loadAll(java.lang.Class)
org/springframework/data/neo4j/auth/AuthenticationTest/testAuthorizedSessionWithURI()#java/lang/StringBuilder/toString()
org/springframework/data/neo4j/auth/AuthenticationTest/testAuthorizedSessionWithURI()#org/neo4j/server/AbstractNeoServer/baseUri()
org/springframework/data/neo4j/auth/AuthenticationTest/setUp()#org/neo4j/harness/TestServerBuilder/withConfig(java.lang.String,java.lang.String)
org/springframework/data/neo4j/auth/AuthenticationTest/setUp()#org/apache/commons/io/IOUtils/write(java.lang.String,java.io.Writer)
org/springframework/data/neo4j/auth/AuthenticationTest/setUp()#java/nio/file/Path/toString()
org/springframework/data/neo4j/auth/AuthenticationTest/setUp()#org/neo4j/harness/TestServerBuilder/newServer()
org/springframework/data/neo4j/auth/AuthenticationTest/setUp()#java/lang/Throwable/addSuppressed(java.lang.Throwable)
org/springframework/data/neo4j/auth/AuthenticationTest/setUp()#org/neo4j/harness/TestServerBuilders/newInProcessBuilder()
org/springframework/data/neo4j/auth/AuthenticationTest/setUp()#org/neo4j/ogm/testutil/TestUtils/getAvailablePort()
org/springframework/data/neo4j/auth/AuthenticationTest/setUp()#java/io/File/deleteOnExit()
org/springframework/data/neo4j/auth/AuthenticationTest/setUp()#java/io/FileWriter/FileWriter(java.io.File)
org/springframework/data/neo4j/auth/AuthenticationTest/setUp()#java/lang/String/valueOf(int)
org/springframework/data/neo4j/auth/AuthenticationTest/setUp()#java/nio/file/Path/toAbsolutePath()
org/springframework/data/neo4j/auth/AuthenticationTest/setUp()#java/io/Writer/close()
org/springframework/data/neo4j/auth/AuthenticationTest/setUp()#java/nio/file/Path/toFile()
org/springframework/data/neo4j/auth/AuthenticationTest/setUp()#java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)
org/springframework/data/neo4j/auth/AuthenticationTest/setUp()#java/nio/file/Files/createTempFile(java.lang.String,java.lang.String,java.nio.file.attribute.FileAttribute[])
org/springframework/data/neo4j/web/controller/UserController/listImmediateFriends(java.lang.String,javax.servlet.http.HttpSession)#java/util/ArrayList/ArrayList()
org/springframework/data/neo4j/web/controller/UserController/listImmediateFriends(java.lang.String,javax.servlet.http.HttpSession)#java/util/Iterator/hasNext()
org/springframework/data/neo4j/web/controller/UserController/listImmediateFriends(java.lang.String,javax.servlet.http.HttpSession)#java/util/Iterator/next()
org/springframework/data/neo4j/web/controller/UserController/listImmediateFriends(java.lang.String,javax.servlet.http.HttpSession)#java/util/List/add(java.lang.Object)
org/springframework/data/neo4j/web/controller/UserController/listImmediateFriends(java.lang.String,javax.servlet.http.HttpSession)#java/lang/StringBuilder/append(java.lang.Object)
org/springframework/data/neo4j/web/controller/UserController/listImmediateFriends(java.lang.String,javax.servlet.http.HttpSession)#java/lang/StringBuilder/toString()
org/springframework/data/neo4j/web/controller/UserController/listImmediateFriends(java.lang.String,javax.servlet.http.HttpSession)#java/lang/StringBuilder/append(java.lang.String)
org/springframework/data/neo4j/web/controller/UserController/listImmediateFriends(java.lang.String,javax.servlet.http.HttpSession)#java/lang/String/trim()
org/springframework/data/neo4j/web/controller/UserController/listImmediateFriends(java.lang.String,javax.servlet.http.HttpSession)#java/io/PrintStream/println(java.lang.String)
org/springframework/data/neo4j/web/controller/UserController/listImmediateFriends(java.lang.String,javax.servlet.http.HttpSession)#java/lang/StringBuilder/StringBuilder()
org/springframework/data/neo4j/web/controller/UserController/listImmediateFriends(java.lang.String,javax.servlet.http.HttpSession)#java/util/Collections/sort(java.util.List)
org/springframework/data/neo4j/web/controller/UserController/listImmediateFriends(java.lang.String,javax.servlet.http.HttpSession)#java/util/List/iterator()
org/springframework/data/neo4j/web/controller/UserController/listImmediateFriends(java.lang.String,javax.servlet.http.HttpSession)#java/util/Collection/iterator()
org/springframework/data/neo4j/web/controller/UserController/listFriends(java.lang.String,javax.servlet.http.HttpSession)#java/util/Iterator/hasNext()
org/springframework/data/neo4j/web/controller/UserController/listFriends(java.lang.String,javax.servlet.http.HttpSession)#java/util/Iterator/next()
org/springframework/data/neo4j/web/controller/UserController/listFriends(java.lang.String,javax.servlet.http.HttpSession)#java/lang/StringBuilder/StringBuilder()
org/springframework/data/neo4j/web/controller/UserController/listFriends(java.lang.String,javax.servlet.http.HttpSession)#java/lang/StringBuilder/append(java.lang.Object)
org/springframework/data/neo4j/web/controller/UserController/listFriends(java.lang.String,javax.servlet.http.HttpSession)#java/util/Collection/iterator()
org/springframework/data/neo4j/web/controller/UserController/listFriends(java.lang.String,javax.servlet.http.HttpSession)#java/lang/StringBuilder/toString()
org/springframework/data/neo4j/web/controller/UserController/listFriends(java.lang.String,javax.servlet.http.HttpSession)#java/lang/StringBuilder/append(java.lang.String)
org/springframework/data/neo4j/web/controller/UserController/listFriends(java.lang.String,javax.servlet.http.HttpSession)#java/lang/String/trim()
org/springframework/data/neo4j/web/controller/UserController/listFriends(java.lang.String,javax.servlet.http.HttpSession)#java/io/PrintStream/println(java.lang.String)
org/springframework/data/neo4j/template/Neo4jTemplateTest/shouldReturnQueryStats()#org/neo4j/ogm/session/result/QueryStatistics/getNodesDeleted()
org/springframework/data/neo4j/template/Neo4jTemplateTest/shouldReturnQueryStats()#org/springframework/data/neo4j/template/Neo4jOperations/query(java.lang.String,java.util.Map)
org/springframework/data/neo4j/template/Neo4jTemplateTest/shouldReturnQueryStats()#org/neo4j/ogm/session/result/QueryStatistics/getRelationshipsCreated()
org/springframework/data/neo4j/template/Neo4jTemplateTest/shouldReturnQueryStats()#org/neo4j/ogm/session/result/Result/queryStatistics()
org/springframework/data/neo4j/template/Neo4jTemplateTest/shouldReturnQueryStats()#org/neo4j/ogm/session/result/QueryStatistics/getPropertiesSet()
org/springframework/data/neo4j/template/Neo4jTemplateTest/shouldReturnQueryStats()#org/neo4j/ogm/session/result/QueryStatistics/containsUpdates()
org/springframework/data/neo4j/template/Neo4jTemplateTest/shouldReturnQueryStats()#org/neo4j/ogm/session/result/QueryStatistics/getNodesCreated()
org/springframework/data/neo4j/template/Neo4jTemplateTest/shouldReturnQueryStats()#org/junit/Assert/assertTrue(boolean)
org/springframework/data/neo4j/template/Neo4jTemplateTest/shouldReturnQueryStats()#org/neo4j/ogm/session/result/QueryStatistics/getRelationshipsDeleted()
org/springframework/data/neo4j/template/Neo4jTemplateTest/shouldReturnQueryStats()#org/junit/Assert/assertEquals(long,long)
org/springframework/data/neo4j/template/Neo4jTemplateTest/shouldReturnQueryStats()#org/springframework/data/neo4j/template/Neo4jOperations/execute(java.lang.String)
org/springframework/data/neo4j/template/Neo4jTemplateTest/shouldReturnQueryStats()#org/neo4j/ogm/session/result/QueryStatistics/getLabelsRemoved()
org/springframework/data/neo4j/template/Neo4jTemplateTest/shouldReturnQueryStats()#org/neo4j/ogm/session/result/QueryStatistics/getLabelsAdded()
org/springframework/data/neo4j/template/Neo4jTemplateTest/shouldQueryForObjectCollectionUsingBespokeCypherQuery()#java/util/Collections/emptyMap()
org/springframework/data/neo4j/template/Neo4jTemplateTest/shouldQueryForObjectCollectionUsingBespokeCypherQuery()#java/util/Iterator/hasNext()
org/springframework/data/neo4j/template/Neo4jTemplateTest/shouldQueryForObjectCollectionUsingBespokeCypherQuery()#java/lang/StringBuilder/append(java.lang.String)
org/springframework/data/neo4j/template/Neo4jTemplateTest/shouldQueryForObjectCollectionUsingBespokeCypherQuery()#org/junit/Assert/assertTrue(java.lang.String,boolean)
org/springframework/data/neo4j/template/Neo4jTemplateTest/shouldQueryForObjectCollectionUsingBespokeCypherQuery()#java/util/Iterator/next()
org/springframework/data/neo4j/template/Neo4jTemplateTest/shouldQueryForObjectCollectionUsingBespokeCypherQuery()#org/springframework/data/neo4j/template/Neo4jOperations/save(java.lang.Object)
org/springframework/data/neo4j/template/Neo4jTemplateTest/shouldQueryForObjectCollectionUsingBespokeCypherQuery()#java/lang/String/equals(java.lang.Object)
org/springframework/data/neo4j/template/Neo4jTemplateTest/shouldQueryForObjectCollectionUsingBespokeCypherQuery()#java/lang/Iterable/iterator()
org/springframework/data/neo4j/template/Neo4jTemplateTest/shouldQueryForObjectCollectionUsingBespokeCypherQuery()#java/lang/StringBuilder/StringBuilder()
org/springframework/data/neo4j/template/Neo4jTemplateTest/shouldQueryForObjectCollectionUsingBespokeCypherQuery()#org/junit/Assert/assertNotNull(java.lang.String,java.lang.Object)
org/springframework/data/neo4j/template/Neo4jTemplateTest/shouldQueryForObjectCollectionUsingBespokeCypherQuery()#org/springframework/data/neo4j/template/Neo4jOperations/queryForObjects(java.lang.Class,java.lang.String,java.util.Map)
org/springframework/data/neo4j/template/Neo4jTemplateTest/shouldQueryForObjectCollectionUsingBespokeCypherQuery()#java/lang/StringBuilder/toString()
org/springframework/data/neo4j/template/Neo4jTemplateTest/shouldQueryForObjectCollectionUsingBespokeCypherQuery()#org/springframework/data/neo4j/examples/movies/domain/User/getName()
org/springframework/data/neo4j/template/Neo4jTemplateTest/shouldCountNumberOfEntitiesOfParticularTypeInGraphDatabase()#org/neo4j/ogm/annotation/NodeEntity/label()
org/springframework/data/neo4j/template/Neo4jTemplateTest/shouldCountNumberOfEntitiesOfParticularTypeInGraphDatabase()#org/neo4j/graphdb/GraphDatabaseService/createNode(org.neo4j.graphdb.Label[])
org/springframework/data/neo4j/template/Neo4jTemplateTest/shouldCountNumberOfEntitiesOfParticularTypeInGraphDatabase()#org/neo4j/graphdb/GraphDatabaseService/beginTx()
org/springframework/data/neo4j/template/Neo4jTemplateTest/shouldCountNumberOfEntitiesOfParticularTypeInGraphDatabase()#org/neo4j/graphdb/Transaction/close()
org/springframework/data/neo4j/template/Neo4jTemplateTest/shouldCountNumberOfEntitiesOfParticularTypeInGraphDatabase()#org/neo4j/ogm/testutil/Neo4jIntegrationTestRule/getGraphDatabaseService()
org/springframework/data/neo4j/template/Neo4jTemplateTest/shouldCountNumberOfEntitiesOfParticularTypeInGraphDatabase()#org/junit/Assert/assertEquals(long,long)
org/springframework/data/neo4j/template/Neo4jTemplateTest/shouldCountNumberOfEntitiesOfParticularTypeInGraphDatabase()#org/neo4j/graphdb/DynamicLabel/label(java.lang.String)
org/springframework/data/neo4j/template/Neo4jTemplateTest/shouldCountNumberOfEntitiesOfParticularTypeInGraphDatabase()#org/neo4j/graphdb/Transaction/success()
org/springframework/data/neo4j/template/Neo4jTemplateTest/shouldCountNumberOfEntitiesOfParticularTypeInGraphDatabase()#org/springframework/data/neo4j/template/Neo4jOperations/count(java.lang.Class)
org/springframework/data/neo4j/template/Neo4jTemplateTest/shouldCountNumberOfEntitiesOfParticularTypeInGraphDatabase()#java/lang/Class/getSimpleName()
org/springframework/data/neo4j/template/Neo4jTemplateTest/shouldCountNumberOfEntitiesOfParticularTypeInGraphDatabase()#java/lang/Class/getAnnotation(java.lang.Class)
org/springframework/data/neo4j/template/Neo4jTemplateTest/shouldCountNumberOfEntitiesOfParticularTypeInGraphDatabase()#java/lang/Throwable/addSuppressed(java.lang.Throwable)
org/springframework/data/neo4j/template/Neo4jTemplateTest/shouldExecuteArbitraryReadQuery()#org/springframework/data/neo4j/template/Neo4jOperations/query(java.lang.String,java.util.Map)
org/springframework/data/neo4j/template/Neo4jTemplateTest/shouldExecuteArbitraryReadQuery()#java/util/Collections/emptyMap()
org/springframework/data/neo4j/template/Neo4jTemplateTest/shouldExecuteArbitraryReadQuery()#java/util/Iterator/hasNext()
org/springframework/data/neo4j/template/Neo4jTemplateTest/shouldExecuteArbitraryReadQuery()#org/junit/Assert/assertEquals(double,double,double)
org/springframework/data/neo4j/template/Neo4jTemplateTest/shouldExecuteArbitraryReadQuery()#org/springframework/data/neo4j/template/Neo4jOperations/save(java.lang.Object)
org/springframework/data/neo4j/template/Neo4jTemplateTest/shouldExecuteArbitraryReadQuery()#java/lang/Iterable/iterator()
org/springframework/data/neo4j/template/Neo4jTemplateTest/shouldExecuteArbitraryReadQuery()#org/junit/Assert/assertTrue(java.lang.String,boolean)
org/springframework/data/neo4j/template/Neo4jTemplateTest/shouldExecuteArbitraryReadQuery()#java/util/Map/get(java.lang.Object)
org/springframework/data/neo4j/template/Neo4jTemplateTest/shouldExecuteArbitraryReadQuery()#java/util/Iterator/next()
org/springframework/data/neo4j/template/Neo4jTemplateTest/shouldExecuteArbitraryReadQuery()#java/lang/Double/doubleValue()
org/springframework/data/neo4j/template/Neo4jTemplateTest/addArbitraryDataToDatabase()#org/neo4j/graphdb/Node/createRelationshipTo(org.neo4j.graphdb.Node,org.neo4j.graphdb.RelationshipType)
org/springframework/data/neo4j/template/Neo4jTemplateTest/addArbitraryDataToDatabase()#java/lang/Throwable/addSuppressed(java.lang.Throwable)
org/springframework/data/neo4j/template/Neo4jTemplateTest/addArbitraryDataToDatabase()#org/neo4j/graphdb/GraphDatabaseService/createNode(org.neo4j.graphdb.Label[])
org/springframework/data/neo4j/template/Neo4jTemplateTest/addArbitraryDataToDatabase()#org/neo4j/graphdb/Transaction/close()
org/springframework/data/neo4j/template/Neo4jTemplateTest/addArbitraryDataToDatabase()#org/neo4j/graphdb/Node/setProperty(java.lang.String,java.lang.Object)
org/springframework/data/neo4j/template/Neo4jTemplateTest/addArbitraryDataToDatabase()#org/neo4j/graphdb/DynamicLabel/label(java.lang.String)
org/springframework/data/neo4j/template/Neo4jTemplateTest/addArbitraryDataToDatabase()#org/neo4j/graphdb/Transaction/success()
org/springframework/data/neo4j/template/Neo4jTemplateTest/addArbitraryDataToDatabase()#org/neo4j/graphdb/GraphDatabaseService/beginTx()
org/springframework/data/neo4j/template/Neo4jTemplateTest/addArbitraryDataToDatabase()#org/neo4j/graphdb/DynamicRelationshipType/withName(java.lang.String)
org/springframework/data/neo4j/template/Neo4jTemplateTest/addArbitraryDataToDatabase()#java/lang/Integer/valueOf(int)
org/springframework/data/neo4j/template/Neo4jTemplateTest/addArbitraryDataToDatabase()#org/neo4j/ogm/testutil/Neo4jIntegrationTestRule/getGraphDatabaseService()
org/springframework/data/neo4j/template/Neo4jTemplateTest/shouldAllowResultsToBeReturnedFromModifyingQueries()#org/springframework/data/neo4j/template/Neo4jOperations/query(java.lang.String,java.util.Map)
org/springframework/data/neo4j/template/Neo4jTemplateTest/shouldAllowResultsToBeReturnedFromModifyingQueries()#org/neo4j/ogm/session/result/Result/queryResults()
org/springframework/data/neo4j/template/Neo4jTemplateTest/shouldAllowResultsToBeReturnedFromModifyingQueries()#org/neo4j/ogm/session/result/Result/queryStatistics()
org/springframework/data/neo4j/template/Neo4jTemplateTest/shouldAllowResultsToBeReturnedFromModifyingQueries()#org/neo4j/ogm/session/result/QueryStatistics/containsUpdates()
org/springframework/data/neo4j/template/Neo4jTemplateTest/shouldAllowResultsToBeReturnedFromModifyingQueries()#org/junit/Assert/assertTrue(boolean)
org/springframework/data/neo4j/template/Neo4jTemplateTest/shouldAllowResultsToBeReturnedFromModifyingQueries()#java/lang/Iterable/iterator()
org/springframework/data/neo4j/template/Neo4jTemplateTest/shouldAllowResultsToBeReturnedFromModifyingQueries()#java/util/Iterator/hasNext()
org/springframework/data/neo4j/template/Neo4jTemplateTest/shouldAllowResultsToBeReturnedFromModifyingQueries()#org/neo4j/ogm/session/Utils/map(java.lang.Object[])
org/springframework/data/neo4j/template/Neo4jTemplateTest/shouldAllowResultsToBeReturnedFromModifyingQueries()#org/neo4j/ogm/session/result/QueryStatistics/getRelationshipsCreated()
org/springframework/data/neo4j/template/Neo4jTemplateTest/shouldAllowResultsToBeReturnedFromModifyingQueries()#java/util/Map/get(java.lang.Object)
org/springframework/data/neo4j/template/Neo4jTemplateTest/shouldAllowResultsToBeReturnedFromModifyingQueries()#org/neo4j/ogm/session/result/QueryStatistics/getPropertiesSet()
org/springframework/data/neo4j/template/Neo4jTemplateTest/shouldAllowResultsToBeReturnedFromModifyingQueries()#org/neo4j/ogm/session/result/QueryStatistics/getNodesCreated()
org/springframework/data/neo4j/template/Neo4jTemplateTest/shouldAllowResultsToBeReturnedFromModifyingQueries()#java/util/Iterator/next()
org/springframework/data/neo4j/template/Neo4jTemplateTest/shouldAllowResultsToBeReturnedFromModifyingQueries()#org/junit/Assert/assertEquals(long,long)
org/springframework/data/neo4j/template/Neo4jTemplateTest/shouldAllowResultsToBeReturnedFromModifyingQueries()#org/junit/Assert/assertEquals(java.lang.Object,java.lang.Object)
org/springframework/data/neo4j/template/Neo4jTemplateTest/shouldAllowResultsToBeReturnedFromModifyingQueries()#org/neo4j/ogm/session/result/QueryStatistics/getLabelsAdded()
org/springframework/data/neo4j/template/Neo4jTemplateTest/shouldAllowResultsToBeReturnedFromModifyingQueries()#org/junit/Assert/assertNotNull(java.lang.Object)
org/springframework/data/neo4j/template/Neo4jTemplateTest/shouldReturnQueryStatsForQueryWithParams()#org/neo4j/ogm/session/result/QueryStatistics/getNodesDeleted()
org/springframework/data/neo4j/template/Neo4jTemplateTest/shouldReturnQueryStatsForQueryWithParams()#org/springframework/data/neo4j/template/Neo4jOperations/query(java.lang.String,java.util.Map)
org/springframework/data/neo4j/template/Neo4jTemplateTest/shouldReturnQueryStatsForQueryWithParams()#org/neo4j/ogm/session/result/Result/queryStatistics()
org/springframework/data/neo4j/template/Neo4jTemplateTest/shouldReturnQueryStatsForQueryWithParams()#org/neo4j/ogm/session/result/QueryStatistics/getPropertiesSet()
org/springframework/data/neo4j/template/Neo4jTemplateTest/shouldReturnQueryStatsForQueryWithParams()#org/neo4j/ogm/session/result/QueryStatistics/containsUpdates()
org/springframework/data/neo4j/template/Neo4jTemplateTest/shouldReturnQueryStatsForQueryWithParams()#org/springframework/data/neo4j/template/Neo4jOperations/execute(java.lang.String,java.util.Map)
org/springframework/data/neo4j/template/Neo4jTemplateTest/shouldReturnQueryStatsForQueryWithParams()#org/neo4j/ogm/session/result/QueryStatistics/getNodesCreated()
org/springframework/data/neo4j/template/Neo4jTemplateTest/shouldReturnQueryStatsForQueryWithParams()#org/junit/Assert/assertTrue(boolean)
org/springframework/data/neo4j/template/Neo4jTemplateTest/shouldReturnQueryStatsForQueryWithParams()#org/neo4j/ogm/session/result/QueryStatistics/getRelationshipsDeleted()
org/springframework/data/neo4j/template/Neo4jTemplateTest/shouldReturnQueryStatsForQueryWithParams()#org/junit/Assert/assertEquals(long,long)
org/springframework/data/neo4j/template/Neo4jTemplateTest/shouldReturnQueryStatsForQueryWithParams()#org/springframework/data/neo4j/template/Neo4jOperations/execute(java.lang.String)
org/springframework/data/neo4j/template/Neo4jTemplateTest/shouldReturnQueryStatsForQueryWithParams()#org/neo4j/ogm/session/Utils/map(java.lang.Object[])
org/springframework/data/neo4j/template/Neo4jTemplateTest/shouldReturnQueryStatsForQueryWithParams()#org/neo4j/ogm/session/result/QueryStatistics/getRelationshipsCreated()
org/springframework/data/neo4j/template/Neo4jTemplateTest/shouldReturnQueryStatsForQueryWithParams()#org/neo4j/ogm/session/result/QueryStatistics/getLabelsRemoved()
org/springframework/data/neo4j/template/Neo4jTemplateTest/shouldReturnQueryStatsForQueryWithParams()#org/neo4j/ogm/session/result/QueryStatistics/getLabelsAdded()
org/springframework/data/neo4j/template/Neo4jTemplateTest/shouldDeleteExistingEntitiesByGraphId()#org/neo4j/cypher/javacompat/ExecutionEngine/ExecutionEngine(org.neo4j.graphdb.GraphDatabaseService)
org/springframework/data/neo4j/template/Neo4jTemplateTest/shouldDeleteExistingEntitiesByGraphId()#java/util/Collection/size()
org/springframework/data/neo4j/template/Neo4jTemplateTest/shouldDeleteExistingEntitiesByGraphId()#java/util/Iterator/next()
org/springframework/data/neo4j/template/Neo4jTemplateTest/shouldDeleteExistingEntitiesByGraphId()#org/neo4j/graphdb/ResourceIterator/next()
org/springframework/data/neo4j/template/Neo4jTemplateTest/shouldDeleteExistingEntitiesByGraphId()#org/neo4j/cypher/javacompat/ExecutionEngine/execute(java.lang.String)
org/springframework/data/neo4j/template/Neo4jTemplateTest/shouldDeleteExistingEntitiesByGraphId()#org/neo4j/ogm/testutil/Neo4jIntegrationTestRule/getGraphDatabaseService()
org/springframework/data/neo4j/template/Neo4jTemplateTest/shouldDeleteExistingEntitiesByGraphId()#org/neo4j/cypher/javacompat/ExecutionResult/columnAs(java.lang.String)
org/springframework/data/neo4j/template/Neo4jTemplateTest/shouldDeleteExistingEntitiesByGraphId()#java/util/Collection/iterator()
org/springframework/data/neo4j/template/Neo4jTemplateTest/shouldDeleteExistingEntitiesByGraphId()#org/junit/Assert/assertEquals(java.lang.Object,java.lang.Object)
org/springframework/data/neo4j/template/Neo4jTemplateTest/shouldDeleteExistingEntitiesByGraphId()#org/springframework/data/neo4j/template/Neo4jOperations/delete(java.lang.Object)
org/springframework/data/neo4j/template/Neo4jTemplateTest/shouldDeleteExistingEntitiesByGraphId()#org/springframework/data/neo4j/template/Neo4jOperations/load(java.lang.Class,java.lang.Long)
org/springframework/data/neo4j/template/Neo4jTemplateTest/shouldDeleteExistingEntitiesByGraphId()#org/springframework/data/neo4j/template/Neo4jOperations/loadAll(java.lang.Class,int)
org/springframework/data/neo4j/template/Neo4jTemplateTest/shouldDeleteExistingEntitiesByGraphId()#org/junit/Assert/assertEquals(java.lang.String,java.lang.Object,java.lang.Object)
org/springframework/data/neo4j/template/Neo4jTemplateTest/shouldDeleteExistingEntitiesByGraphId()#org/junit/Assert/assertEquals(java.lang.String,long,long)
org/springframework/data/neo4j/template/Neo4jTemplateTest/shouldRetrieveEntitiesByMatchingProperties()#org/springframework/data/neo4j/template/Neo4jOperations/loadAllByProperties(java.lang.Class,org.neo4j.ogm.cypher.Filters)
org/springframework/data/neo4j/template/Neo4jTemplateTest/shouldRetrieveEntitiesByMatchingProperties()#org/neo4j/ogm/cypher/Filters/add(org.neo4j.ogm.cypher.Filter[])
org/springframework/data/neo4j/template/Neo4jTemplateTest/shouldRetrieveEntitiesByMatchingProperties()#org/springframework/data/neo4j/template/Neo4jOperations/loadByProperties(java.lang.Class,org.neo4j.ogm.cypher.Filters)
org/springframework/data/neo4j/template/Neo4jTemplateTest/shouldRetrieveEntitiesByMatchingProperties()#org/neo4j/ogm/cypher/Filter/setComparisonOperator(org.neo4j.ogm.cypher.ComparisonOperator)
org/springframework/data/neo4j/template/Neo4jTemplateTest/shouldRetrieveEntitiesByMatchingProperties()#java/util/Collection/size()
org/springframework/data/neo4j/template/Neo4jTemplateTest/shouldRetrieveEntitiesByMatchingProperties()#java/util/Collection/contains(java.lang.Object)
org/springframework/data/neo4j/template/Neo4jTemplateTest/shouldRetrieveEntitiesByMatchingProperties()#org/neo4j/ogm/cypher/Filters/Filters()
org/springframework/data/neo4j/template/Neo4jTemplateTest/shouldRetrieveEntitiesByMatchingProperties()#org/junit/Assert/assertNotNull(java.lang.String,java.lang.Object)
org/springframework/data/neo4j/template/Neo4jTemplateTest/shouldRetrieveEntitiesByMatchingProperties()#org/junit/Assert/assertNotNull(java.lang.Object)
org/springframework/data/neo4j/template/Neo4jTemplateTest/shouldRetrieveEntitiesByMatchingProperties()#org/springframework/data/neo4j/template/Neo4jOperations/save(java.lang.Object)
org/springframework/data/neo4j/template/Neo4jTemplateTest/shouldRetrieveEntitiesByMatchingProperties()#org/junit/Assert/assertTrue(boolean)
org/springframework/data/neo4j/template/Neo4jTemplateTest/shouldRetrieveEntitiesByMatchingProperties()#org/neo4j/ogm/cypher/Filter/Filter(java.lang.String,java.lang.Object)
org/springframework/data/neo4j/template/Neo4jTemplateTest/shouldRetrieveEntitiesByMatchingProperties()#java/lang/Integer/valueOf(int)
org/springframework/data/neo4j/template/Neo4jTemplateTest/shouldRetrieveEntitiesByMatchingProperties()#org/junit/Assert/assertEquals(long,long)
org/springframework/data/neo4j/template/Neo4jTemplateTest/shouldRetrieveEntitiesByMatchingProperties()#org/junit/Assert/assertEquals(java.lang.Object,java.lang.Object)
org/springframework/data/neo4j/queries/DerivedQueryTest/shouldFindUsersByMiddleName()#org/junit/Assert/assertFalse(boolean)
org/springframework/data/neo4j/queries/DerivedQueryTest/shouldFindUsersByMiddleName()#java/util/Iterator/hasNext()
org/springframework/data/neo4j/queries/DerivedQueryTest/shouldFindUsersByMiddleName()#java/util/Collection/size()
org/springframework/data/neo4j/queries/DerivedQueryTest/shouldFindUsersByMiddleName()#java/util/Iterator/next()
org/springframework/data/neo4j/queries/DerivedQueryTest/shouldFindUsersByMiddleName()#org/junit/Assert/assertTrue(boolean)
org/springframework/data/neo4j/queries/DerivedQueryTest/shouldFindUsersByMiddleName()#java/util/Collection/iterator()
org/springframework/data/neo4j/queries/DerivedQueryTest/shouldFindUsersByMiddleName()#org/springframework/data/neo4j/examples/movies/domain/User/getName()
org/springframework/data/neo4j/queries/DerivedQueryTest/shouldFindUsersByMiddleName()#org/junit/Assert/assertEquals(long,long)
org/springframework/data/neo4j/queries/DerivedQueryTest/shouldFindUsersByMiddleName()#org/junit/Assert/assertEquals(java.lang.Object,java.lang.Object)
org/springframework/data/neo4j/queries/DerivedQueryTest/shouldFindUsersByName()#org/junit/Assert/assertFalse(boolean)
org/springframework/data/neo4j/queries/DerivedQueryTest/shouldFindUsersByName()#java/util/Iterator/hasNext()
org/springframework/data/neo4j/queries/DerivedQueryTest/shouldFindUsersByName()#java/util/Collection/size()
org/springframework/data/neo4j/queries/DerivedQueryTest/shouldFindUsersByName()#java/util/Iterator/next()
org/springframework/data/neo4j/queries/DerivedQueryTest/shouldFindUsersByName()#org/junit/Assert/assertTrue(boolean)
org/springframework/data/neo4j/queries/DerivedQueryTest/shouldFindUsersByName()#java/util/Collection/iterator()
org/springframework/data/neo4j/queries/DerivedQueryTest/shouldFindUsersByName()#org/springframework/data/neo4j/examples/movies/domain/User/getName()
org/springframework/data/neo4j/queries/DerivedQueryTest/shouldFindUsersByName()#org/junit/Assert/assertEquals(long,long)
org/springframework/data/neo4j/queries/DerivedQueryTest/shouldFindUsersByName()#org/junit/Assert/assertEquals(java.lang.Object,java.lang.Object)
org/springframework/data/neo4j/queries/DerivedQueryTest/shouldFindNodeEntitiesWithLabels()#org/junit/Assert/assertFalse(boolean)
org/springframework/data/neo4j/queries/DerivedQueryTest/shouldFindNodeEntitiesWithLabels()#java/util/Set/size()
org/springframework/data/neo4j/queries/DerivedQueryTest/shouldFindNodeEntitiesWithLabels()#java/util/List/size()
org/springframework/data/neo4j/queries/DerivedQueryTest/shouldFindNodeEntitiesWithLabels()#java/util/Iterator/next()
org/springframework/data/neo4j/queries/DerivedQueryTest/shouldFindNodeEntitiesWithLabels()#org/junit/Assert/assertTrue(boolean)
org/springframework/data/neo4j/queries/DerivedQueryTest/shouldFindNodeEntitiesWithLabels()#java/util/Set/iterator()
org/springframework/data/neo4j/queries/DerivedQueryTest/shouldFindNodeEntitiesWithLabels()#java/util/List/contains(java.lang.Object)
org/springframework/data/neo4j/queries/DerivedQueryTest/shouldFindNodeEntitiesWithLabels()#java/util/Collection/iterator()
org/springframework/data/neo4j/queries/DerivedQueryTest/shouldFindNodeEntitiesWithLabels()#org/springframework/data/neo4j/examples/movies/domain/User/getName()
org/springframework/data/neo4j/queries/DerivedQueryTest/shouldFindNodeEntitiesWithLabels()#java/util/Iterator/hasNext()
org/springframework/data/neo4j/queries/DerivedQueryTest/shouldFindNodeEntitiesWithLabels()#org/junit/Assert/assertEquals(long,long)
org/springframework/data/neo4j/queries/DerivedQueryTest/shouldFindNodeEntitiesWithLabels()#org/junit/Assert/assertEquals(java.lang.Object,java.lang.Object)
org/springframework/data/neo4j/queries/QueryIntegrationTest/shouldRetrieveUsersByGenderAndConvertToCorrectTypes()#org/junit/Assert/assertFalse(boolean)
org/springframework/data/neo4j/queries/QueryIntegrationTest/shouldRetrieveUsersByGenderAndConvertToCorrectTypes()#java/util/Iterator/hasNext()
org/springframework/data/neo4j/queries/QueryIntegrationTest/shouldRetrieveUsersByGenderAndConvertToCorrectTypes()#org/junit/Assert/assertArrayEquals(java.lang.Object[],java.lang.Object[])
org/springframework/data/neo4j/queries/QueryIntegrationTest/shouldRetrieveUsersByGenderAndConvertToCorrectTypes()#java/math/BigDecimal/valueOf(double)
org/springframework/data/neo4j/queries/QueryIntegrationTest/shouldRetrieveUsersByGenderAndConvertToCorrectTypes()#org/junit/Assert/assertTrue(boolean)
org/springframework/data/neo4j/queries/QueryIntegrationTest/shouldRetrieveUsersByGenderAndConvertToCorrectTypes()#java/lang/Iterable/iterator()
org/springframework/data/neo4j/queries/QueryIntegrationTest/shouldRetrieveUsersByGenderAndConvertToCorrectTypes()#org/junit/Assert/assertEquals(java.lang.Object,java.lang.Object)
org/springframework/data/neo4j/queries/QueryIntegrationTest/shouldRetrieveUsersByGenderAndConvertToCorrectTypes()#java/math/BigInteger/valueOf(long)
org/springframework/data/neo4j/queries/QueryIntegrationTest/shouldRetrieveUsersByGenderAndConvertToCorrectTypes()#java/util/Iterator/next()
org/springframework/data/neo4j/queries/QueryIntegrationTest/shouldRetrieveUsersByGenderAndConvertToCorrectTypes()#org/junit/Assert/assertNotNull(java.lang.String,java.lang.Object)
org/springframework/data/neo4j/queries/DerivedRelationshipEntityQueryTest/shouldFindREWithMultiplePropertiesDifferentComparisonOperatorsAnded()#java/util/List/size()
org/springframework/data/neo4j/queries/DerivedRelationshipEntityQueryTest/shouldFindREWithMultiplePropertiesDifferentComparisonOperatorsAnded()#org/springframework/data/neo4j/examples/movies/domain/User/getId()
org/springframework/data/neo4j/queries/DerivedRelationshipEntityQueryTest/shouldFindREWithMultiplePropertiesDifferentComparisonOperatorsAnded()#java/util/List/get(int)
org/springframework/data/neo4j/queries/DerivedRelationshipEntityQueryTest/shouldFindREWithMultiplePropertiesDifferentComparisonOperatorsAnded()#org/junit/Assert/assertNotNull(java.lang.String,java.lang.Object)
org/springframework/data/neo4j/queries/DerivedRelationshipEntityQueryTest/shouldFindREWithMultiplePropertiesDifferentComparisonOperatorsAnded()#org/junit/Assert/assertEquals(long,long)
org/springframework/data/neo4j/queries/DerivedRelationshipEntityQueryTest/shouldFindREWithMultiplePropertiesDifferentComparisonOperatorsAnded()#org/junit/Assert/assertNotNull(java.lang.Object)
org/springframework/data/neo4j/queries/DerivedRelationshipEntityQueryTest/shouldFindREWithMultiplePropertiesDifferentComparisonOperatorsAnded()#org/springframework/data/neo4j/examples/movies/repo/UserRepository/save(java.lang.Object)
org/springframework/data/neo4j/queries/DerivedRelationshipEntityQueryTest/shouldFindREWithMultiplePropertiesDifferentComparisonOperatorsAnded()#org/junit/Assert/assertEquals(java.lang.String,java.lang.Object,java.lang.Object)
org/springframework/data/neo4j/queries/DerivedRelationshipEntityQueryTest/shouldFindREWithMultiplePropertiesDifferentComparisonOperatorsAnded()#org/junit/Assert/assertEquals(java.lang.String,long,long)
org/springframework/data/neo4j/queries/DerivedRelationshipEntityQueryTest/shouldFindREWithMultiplePropertiesDifferentComparisonOperatorsOred()#java/util/List/size()
org/springframework/data/neo4j/queries/DerivedRelationshipEntityQueryTest/shouldFindREWithMultiplePropertiesDifferentComparisonOperatorsOred()#org/springframework/data/neo4j/examples/movies/domain/User/getId()
org/springframework/data/neo4j/queries/DerivedRelationshipEntityQueryTest/shouldFindREWithMultiplePropertiesDifferentComparisonOperatorsOred()#java/util/List/get(int)
org/springframework/data/neo4j/queries/DerivedRelationshipEntityQueryTest/shouldFindREWithMultiplePropertiesDifferentComparisonOperatorsOred()#org/junit/Assert/assertNotNull(java.lang.String,java.lang.Object)
org/springframework/data/neo4j/queries/DerivedRelationshipEntityQueryTest/shouldFindREWithMultiplePropertiesDifferentComparisonOperatorsOred()#org/junit/Assert/assertEquals(long,long)
org/springframework/data/neo4j/queries/DerivedRelationshipEntityQueryTest/shouldFindREWithMultiplePropertiesDifferentComparisonOperatorsOred()#org/junit/Assert/assertNotNull(java.lang.Object)
org/springframework/data/neo4j/queries/DerivedRelationshipEntityQueryTest/shouldFindREWithMultiplePropertiesDifferentComparisonOperatorsOred()#org/springframework/data/neo4j/examples/movies/repo/UserRepository/save(java.lang.Object)
org/springframework/data/neo4j/queries/DerivedRelationshipEntityQueryTest/shouldFindREWithMultiplePropertiesDifferentComparisonOperatorsOred()#org/junit/Assert/assertEquals(java.lang.String,java.lang.Object,java.lang.Object)
org/springframework/data/neo4j/queries/DerivedRelationshipEntityQueryTest/shouldFindREWithMultiplePropertiesDifferentComparisonOperatorsOred()#org/junit/Assert/assertEquals(java.lang.String,long,long)
org/springframework/data/neo4j/queries/DerivedRelationshipEntityQueryTest/shouldFindREWithMultiplePropertiesAnded()#java/util/List/size()
org/springframework/data/neo4j/queries/DerivedRelationshipEntityQueryTest/shouldFindREWithMultiplePropertiesAnded()#org/springframework/data/neo4j/examples/movies/domain/User/getId()
org/springframework/data/neo4j/queries/DerivedRelationshipEntityQueryTest/shouldFindREWithMultiplePropertiesAnded()#java/util/List/get(int)
org/springframework/data/neo4j/queries/DerivedRelationshipEntityQueryTest/shouldFindREWithMultiplePropertiesAnded()#org/junit/Assert/assertNotNull(java.lang.String,java.lang.Object)
org/springframework/data/neo4j/queries/DerivedRelationshipEntityQueryTest/shouldFindREWithMultiplePropertiesAnded()#org/junit/Assert/assertEquals(long,long)
org/springframework/data/neo4j/queries/DerivedRelationshipEntityQueryTest/shouldFindREWithMultiplePropertiesAnded()#org/junit/Assert/assertNotNull(java.lang.Object)
org/springframework/data/neo4j/queries/DerivedRelationshipEntityQueryTest/shouldFindREWithMultiplePropertiesAnded()#org/springframework/data/neo4j/examples/movies/repo/UserRepository/save(java.lang.Object)
org/springframework/data/neo4j/queries/DerivedRelationshipEntityQueryTest/shouldFindREWithMultiplePropertiesAnded()#org/junit/Assert/assertEquals(java.lang.String,java.lang.Object,java.lang.Object)
org/springframework/data/neo4j/queries/DerivedRelationshipEntityQueryTest/shouldFindREWithMultiplePropertiesAnded()#org/junit/Assert/assertEquals(java.lang.String,long,long)
org/springframework/data/neo4j/queries/DerivedRelationshipEntityQueryTest/shouldFindREWithMultiplePropertiesOred()#java/util/List/size()
org/springframework/data/neo4j/queries/DerivedRelationshipEntityQueryTest/shouldFindREWithMultiplePropertiesOred()#org/springframework/data/neo4j/examples/movies/domain/User/getId()
org/springframework/data/neo4j/queries/DerivedRelationshipEntityQueryTest/shouldFindREWithMultiplePropertiesOred()#java/util/List/get(int)
org/springframework/data/neo4j/queries/DerivedRelationshipEntityQueryTest/shouldFindREWithMultiplePropertiesOred()#org/junit/Assert/assertNotNull(java.lang.String,java.lang.Object)
org/springframework/data/neo4j/queries/DerivedRelationshipEntityQueryTest/shouldFindREWithMultiplePropertiesOred()#org/junit/Assert/assertEquals(long,long)
org/springframework/data/neo4j/queries/DerivedRelationshipEntityQueryTest/shouldFindREWithMultiplePropertiesOred()#org/junit/Assert/assertNotNull(java.lang.Object)
org/springframework/data/neo4j/queries/DerivedRelationshipEntityQueryTest/shouldFindREWithMultiplePropertiesOred()#org/springframework/data/neo4j/examples/movies/repo/UserRepository/save(java.lang.Object)
org/springframework/data/neo4j/queries/DerivedRelationshipEntityQueryTest/shouldFindREWithMultiplePropertiesOred()#org/junit/Assert/assertEquals(java.lang.String,java.lang.Object,java.lang.Object)
org/springframework/data/neo4j/queries/DerivedRelationshipEntityQueryTest/shouldFindREWithMultiplePropertiesOred()#org/junit/Assert/assertEquals(java.lang.String,long,long)
org/springframework/data/neo4j/web/WebIntegrationTest/shouldShareSessionBetweenRequestsDuringSameSession()#org/springframework/mock/web/MockHttpSession/MockHttpSession()
org/springframework/data/neo4j/web/WebIntegrationTest/shouldShareSessionBetweenRequestsDuringSameSession()#org/springframework/test/web/servlet/ResultActions/andExpect(org.springframework.test.web.servlet.ResultMatcher)
org/springframework/data/neo4j/web/WebIntegrationTest/shouldShareSessionBetweenRequestsDuringSameSession()#org/springframework/test/web/servlet/result/MockMvcResultMatchers/status()
org/springframework/data/neo4j/web/WebIntegrationTest/shouldShareSessionBetweenRequestsDuringSameSession()#org/springframework/test/web/servlet/result/StatusResultMatchers/isOk()
org/springframework/data/neo4j/web/WebIntegrationTest/shouldShareSessionBetweenRequestsDuringSameSession()#org/springframework/test/web/servlet/request/MockHttpServletRequestBuilder/session(org.springframework.mock.web.MockHttpSession)
org/springframework/data/neo4j/web/WebIntegrationTest/shouldShareSessionBetweenRequestsDuringSameSession()#org/springframework/test/web/servlet/result/MockMvcResultMatchers/content()
org/springframework/data/neo4j/web/WebIntegrationTest/shouldShareSessionBetweenRequestsDuringSameSession()#org/springframework/test/web/servlet/MockMvc/perform(org.springframework.test.web.servlet.RequestBuilder)
org/springframework/data/neo4j/web/WebIntegrationTest/shouldShareSessionBetweenRequestsDuringSameSession()#org/springframework/test/web/servlet/request/MockMvcRequestBuilders/get(java.lang.String,java.lang.Object[])
org/springframework/data/neo4j/web/WebIntegrationTest/shouldShareSessionBetweenRequestsDuringSameSession()#org/springframework/test/web/servlet/result/ContentResultMatchers/string(java.lang.String)
org/springframework/data/neo4j/integration/conversion/ConversionServiceTest/shouldUseSpecifiedAttributeConverterInsteadOfSprings()#org/springframework/core/convert/support/GenericConversionService/convert(java.lang.Object,java.lang.Class)
org/springframework/data/neo4j/integration/conversion/ConversionServiceTest/shouldUseSpecifiedAttributeConverterInsteadOfSprings()#org/neo4j/ogm/session/Session/loadAll(java.lang.Class)
org/springframework/data/neo4j/integration/conversion/ConversionServiceTest/shouldUseSpecifiedAttributeConverterInsteadOfSprings()#java/util/Arrays/equals(byte[],byte[])
org/springframework/data/neo4j/integration/conversion/ConversionServiceTest/shouldUseSpecifiedAttributeConverterInsteadOfSprings()#org/junit/Assert/assertArrayEquals(byte[],byte[])
org/springframework/data/neo4j/integration/conversion/ConversionServiceTest/shouldUseSpecifiedAttributeConverterInsteadOfSprings()#org/springframework/core/convert/support/GenericConversionService/addConverter(org.springframework.core.convert.converter.Converter)
org/springframework/data/neo4j/integration/conversion/ConversionServiceTest/shouldUseSpecifiedAttributeConverterInsteadOfSprings()#java/util/Iterator/next()
org/springframework/data/neo4j/integration/conversion/ConversionServiceTest/shouldUseSpecifiedAttributeConverterInsteadOfSprings()#java/util/Collection/iterator()
org/springframework/data/neo4j/integration/conversion/ConversionServiceTest/shouldUseSpecifiedAttributeConverterInsteadOfSprings()#org/junit/Assert/assertEquals(java.lang.Object,java.lang.Object)
org/springframework/data/neo4j/integration/conversion/ConversionServiceTest/shouldUseSpecifiedAttributeConverterInsteadOfSprings()#org/springframework/data/neo4j/integration/conversion/SiteMemberRepository/save(java.lang.Object)
org/springframework/data/neo4j/integration/conversion/ConversionServiceTest/shouldUseSpecifiedAttributeConverterInsteadOfSprings()#org/springframework/core/convert/support/GenericConversionService/canConvert(java.lang.Class,java.lang.Class)
org/springframework/data/neo4j/integration/conversion/ConversionServiceTest/shouldUseSpecifiedAttributeConverterInsteadOfSprings()#org/junit/Assert/assertTrue(boolean)
org/springframework/data/neo4j/integration/conversion/ConversionServiceTest/shouldUseSpecifiedAttributeConverterInsteadOfSprings()#org/neo4j/ogm/session/Session/clear()
org/springframework/data/neo4j/integration/conversion/ConversionServiceTest/shouldConvertFieldsUsingSpringConvertersAddedDirectlyToConversionService()#org/neo4j/graphdb/Result/columnAs(java.lang.String)
org/springframework/data/neo4j/integration/conversion/ConversionServiceTest/shouldConvertFieldsUsingSpringConvertersAddedDirectlyToConversionService()#org/neo4j/graphdb/ResourceIterator/hasNext()
org/springframework/data/neo4j/integration/conversion/ConversionServiceTest/shouldConvertFieldsUsingSpringConvertersAddedDirectlyToConversionService()#org/junit/Assert/assertTrue(java.lang.String,boolean)
org/springframework/data/neo4j/integration/conversion/ConversionServiceTest/shouldConvertFieldsUsingSpringConvertersAddedDirectlyToConversionService()#org/springframework/core/convert/support/GenericConversionService/addConverter(org.springframework.core.convert.converter.Converter)
org/springframework/data/neo4j/integration/conversion/ConversionServiceTest/shouldConvertFieldsUsingSpringConvertersAddedDirectlyToConversionService()#java/lang/Number/intValue()
org/springframework/data/neo4j/integration/conversion/ConversionServiceTest/shouldConvertFieldsUsingSpringConvertersAddedDirectlyToConversionService()#org/neo4j/ogm/testutil/Neo4jIntegrationTestRule/getGraphDatabaseService()
org/springframework/data/neo4j/integration/conversion/ConversionServiceTest/shouldConvertFieldsUsingSpringConvertersAddedDirectlyToConversionService()#org/neo4j/graphdb/ResourceIterator/next()
org/springframework/data/neo4j/integration/conversion/ConversionServiceTest/shouldConvertFieldsUsingSpringConvertersAddedDirectlyToConversionService()#org/springframework/data/neo4j/integration/conversion/PensionRepository/findOne(java.io.Serializable)
org/springframework/data/neo4j/integration/conversion/ConversionServiceTest/shouldConvertFieldsUsingSpringConvertersAddedDirectlyToConversionService()#org/neo4j/graphdb/GraphDatabaseService/execute(java.lang.String)
org/springframework/data/neo4j/integration/conversion/ConversionServiceTest/shouldConvertFieldsUsingSpringConvertersAddedDirectlyToConversionService()#org/junit/Assert/assertEquals(java.lang.String,java.lang.Object,java.lang.Object)
org/springframework/data/neo4j/integration/conversion/ConversionServiceTest/shouldConvertFieldsUsingSpringConvertersAddedDirectlyToConversionService()#org/junit/Assert/assertEquals(java.lang.String,long,long)
org/springframework/data/neo4j/integration/conversion/ConversionServiceTest/shouldConvertFieldsUsingSpringConvertersAddedDirectlyToConversionService()#org/springframework/data/neo4j/integration/conversion/PensionRepository/save(java.lang.Object)
org/springframework/data/neo4j/integration/conversion/ConversionServiceTest/shouldUseDefaultAttributeConverterInsteadOfSprings()#org/neo4j/ogm/session/Session/loadAll(java.lang.Class)
org/springframework/data/neo4j/integration/conversion/ConversionServiceTest/shouldUseDefaultAttributeConverterInsteadOfSprings()#org/springframework/data/neo4j/integration/conversion/SiteMemberRepository/save(java.lang.Object)
org/springframework/data/neo4j/integration/conversion/ConversionServiceTest/shouldUseDefaultAttributeConverterInsteadOfSprings()#org/junit/Assert/assertArrayEquals(byte[],byte[])
org/springframework/data/neo4j/integration/conversion/ConversionServiceTest/shouldUseDefaultAttributeConverterInsteadOfSprings()#org/springframework/core/convert/support/GenericConversionService/addConverter(org.springframework.core.convert.converter.Converter)
org/springframework/data/neo4j/integration/conversion/ConversionServiceTest/shouldUseDefaultAttributeConverterInsteadOfSprings()#java/util/Iterator/next()
org/springframework/data/neo4j/integration/conversion/ConversionServiceTest/shouldUseDefaultAttributeConverterInsteadOfSprings()#java/math/BigInteger/intValue()
org/springframework/data/neo4j/integration/conversion/ConversionServiceTest/shouldUseDefaultAttributeConverterInsteadOfSprings()#java/util/Collection/iterator()
org/springframework/data/neo4j/integration/conversion/ConversionServiceTest/shouldUseDefaultAttributeConverterInsteadOfSprings()#org/junit/Assert/assertEquals(long,long)
org/springframework/data/neo4j/integration/conversion/ConversionServiceTest/shouldUseDefaultAttributeConverterInsteadOfSprings()#java/math/BigInteger/valueOf(long)
org/springframework/data/neo4j/integration/conversion/ConversionServiceTest/shouldUseDefaultAttributeConverterInsteadOfSprings()#org/neo4j/ogm/session/Session/clear()
org/springframework/data/neo4j/integration/conversion/ConversionServiceTest/shouldOperateWithDefaultSpringConvertersToConvertObjectTypesNotInMetaData()#org/neo4j/graphdb/Result/columnAs(java.lang.String)
org/springframework/data/neo4j/integration/conversion/ConversionServiceTest/shouldOperateWithDefaultSpringConvertersToConvertObjectTypesNotInMetaData()#org/junit/Assert/assertTrue(java.lang.String,boolean)
org/springframework/data/neo4j/integration/conversion/ConversionServiceTest/shouldOperateWithDefaultSpringConvertersToConvertObjectTypesNotInMetaData()#org/springframework/core/convert/support/DefaultConversionService/addDefaultConverters(org.springframework.core.convert.converter.ConverterRegistry)
org/springframework/data/neo4j/integration/conversion/ConversionServiceTest/shouldOperateWithDefaultSpringConvertersToConvertObjectTypesNotInMetaData()#org/neo4j/graphdb/GraphDatabaseService/execute(java.lang.String)
org/springframework/data/neo4j/integration/conversion/ConversionServiceTest/shouldOperateWithDefaultSpringConvertersToConvertObjectTypesNotInMetaData()#org/junit/Assert/assertEquals(java.lang.String,java.lang.Object,java.lang.Object)
org/springframework/data/neo4j/integration/conversion/ConversionServiceTest/shouldOperateWithDefaultSpringConvertersToConvertObjectTypesNotInMetaData()#org/neo4j/graphdb/ResourceIterator/hasNext()
org/springframework/data/neo4j/integration/conversion/ConversionServiceTest/shouldOperateWithDefaultSpringConvertersToConvertObjectTypesNotInMetaData()#java/util/Iterator/next()
org/springframework/data/neo4j/integration/conversion/ConversionServiceTest/shouldOperateWithDefaultSpringConvertersToConvertObjectTypesNotInMetaData()#org/springframework/data/neo4j/integration/conversion/JavaElementRepository/save(java.lang.Object)
org/springframework/data/neo4j/integration/conversion/ConversionServiceTest/shouldOperateWithDefaultSpringConvertersToConvertObjectTypesNotInMetaData()#org/neo4j/graphdb/ResourceIterator/next()
org/springframework/data/neo4j/integration/conversion/ConversionServiceTest/shouldOperateWithDefaultSpringConvertersToConvertObjectTypesNotInMetaData()#java/lang/Iterable/iterator()
org/springframework/data/neo4j/integration/conversion/ConversionServiceTest/shouldOperateWithDefaultSpringConvertersToConvertObjectTypesNotInMetaData()#org/springframework/data/neo4j/integration/conversion/JavaElementRepository/findAll()
org/springframework/data/neo4j/integration/conversion/ConversionServiceTest/shouldOperateWithDefaultSpringConvertersToConvertObjectTypesNotInMetaData()#org/neo4j/ogm/testutil/Neo4jIntegrationTestRule/getGraphDatabaseService()
org/springframework/data/neo4j/integration/conversion/ConversionServiceTest/shouldConvertFieldsUsingAnAvailableSupertypeConverterIfExactTypesDoNotMatch()#java/lang/Integer/intValue()
org/springframework/data/neo4j/integration/conversion/ConversionServiceTest/shouldConvertFieldsUsingAnAvailableSupertypeConverterIfExactTypesDoNotMatch()#org/neo4j/graphdb/Result/columnAs(java.lang.String)
org/springframework/data/neo4j/integration/conversion/ConversionServiceTest/shouldConvertFieldsUsingAnAvailableSupertypeConverterIfExactTypesDoNotMatch()#org/neo4j/graphdb/ResourceIterator/hasNext()
org/springframework/data/neo4j/integration/conversion/ConversionServiceTest/shouldConvertFieldsUsingAnAvailableSupertypeConverterIfExactTypesDoNotMatch()#org/springframework/core/convert/support/GenericConversionService/addConverterFactory(org.springframework.core.convert.converter.ConverterFactory)
org/springframework/data/neo4j/integration/conversion/ConversionServiceTest/shouldConvertFieldsUsingAnAvailableSupertypeConverterIfExactTypesDoNotMatch()#org/junit/Assert/assertTrue(java.lang.String,boolean)
org/springframework/data/neo4j/integration/conversion/ConversionServiceTest/shouldConvertFieldsUsingAnAvailableSupertypeConverterIfExactTypesDoNotMatch()#org/neo4j/graphdb/GraphDatabaseService/execute(java.lang.String)
org/springframework/data/neo4j/integration/conversion/ConversionServiceTest/shouldConvertFieldsUsingAnAvailableSupertypeConverterIfExactTypesDoNotMatch()#org/neo4j/ogm/testutil/Neo4jIntegrationTestRule/getGraphDatabaseService()
org/springframework/data/neo4j/integration/conversion/ConversionServiceTest/shouldConvertFieldsUsingAnAvailableSupertypeConverterIfExactTypesDoNotMatch()#org/junit/Assert/assertEquals(java.lang.String,long,long)
org/springframework/data/neo4j/integration/conversion/ConversionServiceTest/shouldConvertFieldsUsingAnAvailableSupertypeConverterIfExactTypesDoNotMatch()#org/neo4j/graphdb/ResourceIterator/next()
org/springframework/data/neo4j/integration/conversion/ConversionServiceTest/shouldConvertFieldsUsingAnAvailableSupertypeConverterIfExactTypesDoNotMatch()#org/springframework/data/neo4j/integration/conversion/PensionRepository/save(java.lang.Object)
org/springframework/data/neo4j/examples/jsr303/JSR303Test/testCantCreateAnAdultUnderEighteen()#org/springframework/test/web/servlet/result/MockMvcResultMatchers/status()
org/springframework/data/neo4j/examples/jsr303/JSR303Test/testCantCreateAnAdultUnderEighteen()#org/springframework/test/web/servlet/request/MockMvcRequestBuilders/post(java.lang.String,java.lang.Object[])
org/springframework/data/neo4j/examples/jsr303/JSR303Test/testCantCreateAnAdultUnderEighteen()#org/springframework/test/web/servlet/result/StatusResultMatchers/isBadRequest()
org/springframework/data/neo4j/examples/jsr303/JSR303Test/testCantCreateAnAdultUnderEighteen()#java/lang/Integer/valueOf(int)
org/springframework/data/neo4j/examples/jsr303/JSR303Test/testCantCreateAnAdultUnderEighteen()#org/codehaus/jackson/map/ObjectMapper/writeValueAsString(java.lang.Object)
org/springframework/data/neo4j/examples/jsr303/JSR303Test/testCantCreateAnAdultUnderEighteen()#org/springframework/test/web/servlet/MockMvc/perform(org.springframework.test.web.servlet.RequestBuilder)
org/springframework/data/neo4j/examples/jsr303/JSR303Test/testCantCreateAnAdultUnderEighteen()#org/springframework/test/web/servlet/request/MockHttpServletRequestBuilder/content(java.lang.String)
org/springframework/data/neo4j/examples/jsr303/JSR303Test/testCantCreateAnAdultUnderEighteen()#org/springframework/test/web/servlet/request/MockHttpServletRequestBuilder/contentType(org.springframework.http.MediaType)
org/springframework/data/neo4j/examples/jsr303/JSR303Test/testCantCreateAnAdultUnderEighteen()#org/springframework/test/web/servlet/ResultActions/andExpect(org.springframework.test.web.servlet.ResultMatcher)
org/springframework/data/neo4j/examples/jsr303/JSR303Test/testCanCreateAnAdult()#org/springframework/test/web/servlet/result/MockMvcResultMatchers/status()
org/springframework/data/neo4j/examples/jsr303/JSR303Test/testCanCreateAnAdult()#org/springframework/test/web/servlet/result/StatusResultMatchers/isOk()
org/springframework/data/neo4j/examples/jsr303/JSR303Test/testCanCreateAnAdult()#org/springframework/test/web/servlet/request/MockMvcRequestBuilders/post(java.lang.String,java.lang.Object[])
org/springframework/data/neo4j/examples/jsr303/JSR303Test/testCanCreateAnAdult()#java/lang/Integer/valueOf(int)
org/springframework/data/neo4j/examples/jsr303/JSR303Test/testCanCreateAnAdult()#org/codehaus/jackson/map/ObjectMapper/writeValueAsString(java.lang.Object)
org/springframework/data/neo4j/examples/jsr303/JSR303Test/testCanCreateAnAdult()#org/springframework/test/web/servlet/MockMvc/perform(org.springframework.test.web.servlet.RequestBuilder)
org/springframework/data/neo4j/examples/jsr303/JSR303Test/testCanCreateAnAdult()#org/springframework/test/web/servlet/request/MockHttpServletRequestBuilder/content(java.lang.String)
org/springframework/data/neo4j/examples/jsr303/JSR303Test/testCanCreateAnAdult()#org/springframework/test/web/servlet/request/MockHttpServletRequestBuilder/contentType(org.springframework.http.MediaType)
org/springframework/data/neo4j/examples/jsr303/JSR303Test/testCanCreateAnAdult()#org/springframework/test/web/servlet/ResultActions/andExpect(org.springframework.test.web.servlet.ResultMatcher)
org/springframework/data/neo4j/repositories/ProgrammaticRepositoryTest/canInstantiateRepositoryProgrammatically()#org/springframework/data/neo4j/repository/support/GraphRepositoryFactory/GraphRepositoryFactory(org.neo4j.ogm.session.Session)
org/springframework/data/neo4j/repositories/ProgrammaticRepositoryTest/canInstantiateRepositoryProgrammatically()#org/junit/Assert/assertEquals(long,long)
org/springframework/data/neo4j/repositories/ProgrammaticRepositoryTest/canInstantiateRepositoryProgrammatically()#org/springframework/data/repository/core/support/RepositoryFactorySupport/getRepository(java.lang.Class)
org/springframework/data/neo4j/repositories/ProgrammaticRepositoryTest/canInstantiateRepositoryProgrammatically()#org/springframework/data/neo4j/util/IterableUtils/count(java.lang.Iterable)
org/springframework/data/neo4j/repositories/ProgrammaticRepositoryTest/canInstantiateRepositoryProgrammatically()#org/neo4j/ogm/testutil/Neo4jIntegrationTestRule/url()
org/springframework/data/neo4j/repositories/ProgrammaticRepositoryTest/canInstantiateRepositoryProgrammatically()#org/neo4j/ogm/session/SessionFactory/openSession(java.lang.String)
org/springframework/data/neo4j/repositories/ProgrammaticRepositoryTest/canInstantiateRepositoryProgrammatically()#org/neo4j/ogm/session/SessionFactory/SessionFactory(java.lang.String[])
org/springframework/data/neo4j/repositories/ProgrammaticRepositoryTest/canInstantiateRepositoryProgrammatically()#org/neo4j/ogm/testutil/GraphTestUtils/assertSameGraph(org.neo4j.graphdb.GraphDatabaseService,java.lang.String)
org/springframework/data/neo4j/repositories/ProgrammaticRepositoryTest/canInstantiateRepositoryProgrammatically()#org/neo4j/ogm/testutil/Neo4jIntegrationTestRule/getGraphDatabaseService()
org/springframework/data/neo4j/examples/movies/MoviesIntegrationTest/findOneShouldConsiderTheEntityType()#org/springframework/data/neo4j/examples/movies/repo/UserRepository/save(java.lang.Object)
org/springframework/data/neo4j/examples/movies/MoviesIntegrationTest/findOneShouldConsiderTheEntityType()#org/springframework/data/neo4j/examples/movies/repo/TempMovieRepository/save(java.lang.Object)
org/springframework/data/neo4j/examples/movies/MoviesIntegrationTest/findOneShouldConsiderTheEntityType()#org/springframework/data/neo4j/examples/movies/repo/TempMovieRepository/findOne(java.io.Serializable)
org/springframework/data/neo4j/examples/movies/MoviesIntegrationTest/findOneShouldConsiderTheEntityType()#org/springframework/data/neo4j/examples/movies/repo/UserRepository/findOne(java.io.Serializable)
org/springframework/data/neo4j/examples/movies/MoviesIntegrationTest/findOneShouldConsiderTheEntityType()#org/springframework/data/neo4j/examples/movies/domain/User/getId()
org/springframework/data/neo4j/examples/movies/MoviesIntegrationTest/findOneShouldConsiderTheEntityType()#java/util/Iterator/next()
org/springframework/data/neo4j/examples/movies/MoviesIntegrationTest/findOneShouldConsiderTheEntityType()#org/springframework/data/neo4j/examples/movies/domain/TempMovie/getId()
org/springframework/data/neo4j/examples/movies/MoviesIntegrationTest/findOneShouldConsiderTheEntityType()#org/junit/Assert/assertNull(java.lang.Object)
org/springframework/data/neo4j/examples/movies/MoviesIntegrationTest/findOneShouldConsiderTheEntityType()#org/springframework/data/neo4j/examples/movies/repo/UserRepository/findOne(java.lang.Long,int)
org/springframework/data/neo4j/examples/movies/MoviesIntegrationTest/findOneShouldConsiderTheEntityType()#java/util/Set/iterator()
org/springframework/data/neo4j/examples/movies/MoviesIntegrationTest/findOneShouldConsiderTheEntityType()#org/springframework/data/neo4j/examples/movies/repo/RatingRepository/findOne(java.io.Serializable)
org/springframework/data/neo4j/examples/movies/MoviesIntegrationTest/findOneShouldConsiderTheEntityType()#org/junit/Assert/assertEquals(long,long)
org/springframework/data/neo4j/examples/movies/MoviesIntegrationTest/findOneShouldConsiderTheEntityType()#org/junit/Assert/assertEquals(java.lang.Object,java.lang.Object)
org/springframework/data/neo4j/examples/movies/MoviesIntegrationTest/findOneShouldConsiderTheEntityType()#org/springframework/data/neo4j/examples/movies/domain/User/getName()
org/springframework/data/neo4j/examples/movies/MoviesIntegrationTest/shouldLoadFriends2()#org/neo4j/cypher/javacompat/ExecutionEngine/ExecutionEngine(org.neo4j.graphdb.GraphDatabaseService)
org/springframework/data/neo4j/examples/movies/MoviesIntegrationTest/shouldLoadFriends2()#java/util/Collection/size()
org/springframework/data/neo4j/examples/movies/MoviesIntegrationTest/shouldLoadFriends2()#java/util/Iterator/next()
org/springframework/data/neo4j/examples/movies/MoviesIntegrationTest/shouldLoadFriends2()#org/junit/Assert/assertTrue(boolean)
org/springframework/data/neo4j/examples/movies/MoviesIntegrationTest/shouldLoadFriends2()#java/lang/Iterable/iterator()
org/springframework/data/neo4j/examples/movies/MoviesIntegrationTest/shouldLoadFriends2()#org/neo4j/cypher/javacompat/ExecutionEngine/execute(java.lang.String)
org/springframework/data/neo4j/examples/movies/MoviesIntegrationTest/shouldLoadFriends2()#java/util/Collection/iterator()
org/springframework/data/neo4j/examples/movies/MoviesIntegrationTest/shouldLoadFriends2()#org/springframework/data/neo4j/examples/movies/domain/User/getName()
org/springframework/data/neo4j/examples/movies/MoviesIntegrationTest/shouldLoadFriends2()#org/springframework/data/neo4j/examples/movies/domain/User/equals(java.lang.Object)
org/springframework/data/neo4j/examples/movies/MoviesIntegrationTest/shouldLoadFriends2()#org/junit/Assert/assertEquals(long,long)
org/springframework/data/neo4j/examples/movies/MoviesIntegrationTest/shouldLoadFriends2()#org/junit/Assert/assertEquals(java.lang.Object,java.lang.Object)
org/springframework/data/neo4j/examples/movies/MoviesIntegrationTest/shouldFindUser()#org/springframework/data/neo4j/examples/movies/domain/User/equals(java.lang.Object)
org/springframework/data/neo4j/examples/movies/MoviesIntegrationTest/shouldFindUser()#org/springframework/data/neo4j/examples/movies/repo/UserRepository/save(java.lang.Object)
org/springframework/data/neo4j/examples/movies/MoviesIntegrationTest/shouldFindUser()#java/lang/Long/valueOf(long)
org/springframework/data/neo4j/examples/movies/MoviesIntegrationTest/shouldFindUser()#org/springframework/data/neo4j/examples/movies/repo/UserRepository/findOne(java.io.Serializable)
org/springframework/data/neo4j/examples/movies/MoviesIntegrationTest/shouldFindUser()#org/springframework/data/neo4j/examples/movies/domain/User/getId()
org/springframework/data/neo4j/examples/movies/MoviesIntegrationTest/shouldFindUser()#java/lang/Long/longValue()
org/springframework/data/neo4j/examples/movies/MoviesIntegrationTest/shouldFindUser()#org/junit/Assert/assertTrue(boolean)
org/springframework/data/neo4j/examples/movies/MoviesIntegrationTest/shouldFindUser()#org/springframework/data/neo4j/examples/movies/domain/User/getName()
org/springframework/data/neo4j/examples/movies/MoviesIntegrationTest/shouldFindUser()#org/junit/Assert/assertEquals(long,long)
org/springframework/data/neo4j/examples/movies/MoviesIntegrationTest/shouldFindUser()#org/junit/Assert/assertEquals(java.lang.Object,java.lang.Object)
org/springframework/data/neo4j/examples/movies/MoviesIntegrationTest/shouldFindUserWithoutName()#org/springframework/data/neo4j/examples/movies/domain/User/equals(java.lang.Object)
org/springframework/data/neo4j/examples/movies/MoviesIntegrationTest/shouldFindUserWithoutName()#org/springframework/data/neo4j/examples/movies/repo/UserRepository/save(java.lang.Object)
org/springframework/data/neo4j/examples/movies/MoviesIntegrationTest/shouldFindUserWithoutName()#java/lang/Long/valueOf(long)
org/springframework/data/neo4j/examples/movies/MoviesIntegrationTest/shouldFindUserWithoutName()#org/springframework/data/neo4j/examples/movies/repo/UserRepository/findOne(java.io.Serializable)
org/springframework/data/neo4j/examples/movies/MoviesIntegrationTest/shouldFindUserWithoutName()#org/springframework/data/neo4j/examples/movies/domain/User/getId()
org/springframework/data/neo4j/examples/movies/MoviesIntegrationTest/shouldFindUserWithoutName()#java/lang/Long/longValue()
org/springframework/data/neo4j/examples/movies/MoviesIntegrationTest/shouldFindUserWithoutName()#org/junit/Assert/assertTrue(boolean)
org/springframework/data/neo4j/examples/movies/MoviesIntegrationTest/shouldFindUserWithoutName()#org/junit/Assert/assertNull(java.lang.Object)
org/springframework/data/neo4j/examples/movies/MoviesIntegrationTest/shouldFindUserWithoutName()#org/junit/Assert/assertEquals(long,long)
org/springframework/data/neo4j/examples/movies/MoviesIntegrationTest/shouldFindUserWithoutName()#org/springframework/data/neo4j/examples/movies/domain/User/getName()
org/springframework/data/neo4j/examples/movies/MoviesIntegrationTest/shouldLoadFriends()#org/neo4j/cypher/javacompat/ExecutionEngine/ExecutionEngine(org.neo4j.graphdb.GraphDatabaseService)
org/springframework/data/neo4j/examples/movies/MoviesIntegrationTest/shouldLoadFriends()#java/util/Collection/size()
org/springframework/data/neo4j/examples/movies/MoviesIntegrationTest/shouldLoadFriends()#java/util/Iterator/next()
org/springframework/data/neo4j/examples/movies/MoviesIntegrationTest/shouldLoadFriends()#org/junit/Assert/assertTrue(boolean)
org/springframework/data/neo4j/examples/movies/MoviesIntegrationTest/shouldLoadFriends()#java/lang/Iterable/iterator()
org/springframework/data/neo4j/examples/movies/MoviesIntegrationTest/shouldLoadFriends()#org/neo4j/cypher/javacompat/ExecutionEngine/execute(java.lang.String)
org/springframework/data/neo4j/examples/movies/MoviesIntegrationTest/shouldLoadFriends()#java/util/Collection/iterator()
org/springframework/data/neo4j/examples/movies/MoviesIntegrationTest/shouldLoadFriends()#org/springframework/data/neo4j/examples/movies/domain/User/getName()
org/springframework/data/neo4j/examples/movies/MoviesIntegrationTest/shouldLoadFriends()#org/springframework/data/neo4j/examples/movies/domain/User/equals(java.lang.Object)
org/springframework/data/neo4j/examples/movies/MoviesIntegrationTest/shouldLoadFriends()#org/junit/Assert/assertEquals(long,long)
org/springframework/data/neo4j/examples/movies/MoviesIntegrationTest/shouldLoadFriends()#org/junit/Assert/assertEquals(java.lang.Object,java.lang.Object)
org/springframework/data/neo4j/examples/movies/MoviesIntegrationTest/shouldDeleteUser()#org/springframework/data/neo4j/examples/movies/repo/UserRepository/findAll()
org/springframework/data/neo4j/examples/movies/MoviesIntegrationTest/shouldDeleteUser()#org/neo4j/graphdb/ResourceIterator/hasNext()
org/springframework/data/neo4j/examples/movies/MoviesIntegrationTest/shouldDeleteUser()#org/junit/Assert/assertFalse(boolean)
org/springframework/data/neo4j/examples/movies/MoviesIntegrationTest/shouldDeleteUser()#java/lang/Long/valueOf(long)
org/springframework/data/neo4j/examples/movies/MoviesIntegrationTest/shouldDeleteUser()#org/springframework/data/neo4j/examples/movies/repo/UserRepository/count()
org/springframework/data/neo4j/examples/movies/MoviesIntegrationTest/shouldDeleteUser()#org/neo4j/graphdb/ResourceIterable/iterator()
org/springframework/data/neo4j/examples/movies/MoviesIntegrationTest/shouldDeleteUser()#org/springframework/data/neo4j/examples/movies/repo/UserRepository/findAll(int)
org/springframework/data/neo4j/examples/movies/MoviesIntegrationTest/shouldDeleteUser()#org/neo4j/tooling/GlobalGraphOperations/getAllNodes()
org/springframework/data/neo4j/examples/movies/MoviesIntegrationTest/shouldDeleteUser()#org/springframework/data/neo4j/examples/movies/repo/UserRepository/exists(java.io.Serializable)
org/springframework/data/neo4j/examples/movies/MoviesIntegrationTest/shouldDeleteUser()#org/neo4j/tooling/GlobalGraphOperations/at(org.neo4j.graphdb.GraphDatabaseService)
org/springframework/data/neo4j/examples/movies/MoviesIntegrationTest/shouldDeleteUser()#org/neo4j/graphdb/Transaction/success()
org/springframework/data/neo4j/examples/movies/MoviesIntegrationTest/shouldDeleteUser()#org/springframework/data/neo4j/examples/movies/repo/UserRepository/save(java.lang.Object)
org/springframework/data/neo4j/examples/movies/MoviesIntegrationTest/shouldDeleteUser()#java/util/Iterator/hasNext()
org/springframework/data/neo4j/examples/movies/MoviesIntegrationTest/shouldDeleteUser()#org/springframework/data/neo4j/examples/movies/repo/UserRepository/findOne(java.io.Serializable)
org/springframework/data/neo4j/examples/movies/MoviesIntegrationTest/shouldDeleteUser()#java/lang/Throwable/addSuppressed(java.lang.Throwable)
org/springframework/data/neo4j/examples/movies/MoviesIntegrationTest/shouldDeleteUser()#org/neo4j/graphdb/GraphDatabaseService/beginTx()
org/springframework/data/neo4j/examples/movies/MoviesIntegrationTest/shouldDeleteUser()#org/junit/Assert/assertNull(java.lang.Object)
org/springframework/data/neo4j/examples/movies/MoviesIntegrationTest/shouldDeleteUser()#java/lang/Iterable/iterator()
org/springframework/data/neo4j/examples/movies/MoviesIntegrationTest/shouldDeleteUser()#org/springframework/data/neo4j/examples/movies/repo/UserRepository/delete(java.lang.Object)
org/springframework/data/neo4j/examples/movies/MoviesIntegrationTest/shouldDeleteUser()#org/springframework/data/neo4j/examples/movies/repo/UserRepository/findOne(java.lang.Long,int)
org/springframework/data/neo4j/examples/movies/MoviesIntegrationTest/shouldDeleteUser()#org/neo4j/graphdb/Transaction/close()
org/springframework/data/neo4j/examples/movies/MoviesIntegrationTest/shouldDeleteUser()#org/junit/Assert/assertEquals(long,long)
org/springframework/data/neo4j/examples/galaxy/GalaxyServiceTest/shouldDetectLastPage()#org/junit/Assert/assertFalse(boolean)
org/springframework/data/neo4j/examples/galaxy/GalaxyServiceTest/shouldDetectLastPage()#java/util/Iterator/hasNext()
org/springframework/data/neo4j/examples/galaxy/GalaxyServiceTest/shouldDetectLastPage()#java/util/Collection/size()
org/springframework/data/neo4j/examples/galaxy/GalaxyServiceTest/shouldDetectLastPage()#java/util/Iterator/next()
org/springframework/data/neo4j/examples/galaxy/GalaxyServiceTest/shouldDetectLastPage()#java/lang/StringBuilder/StringBuilder()
org/springframework/data/neo4j/examples/galaxy/GalaxyServiceTest/shouldDetectLastPage()#org/springframework/data/domain/Page/hasNext()
org/springframework/data/neo4j/examples/galaxy/GalaxyServiceTest/shouldDetectLastPage()#java/lang/StringBuilder/append(java.lang.Object)
org/springframework/data/neo4j/examples/galaxy/GalaxyServiceTest/shouldDetectLastPage()#org/junit/Assert/assertEquals(long,long)
org/springframework/data/neo4j/examples/galaxy/GalaxyServiceTest/shouldDetectLastPage()#org/springframework/data/domain/PageRequest/PageRequest(int,int)
org/springframework/data/neo4j/examples/galaxy/GalaxyServiceTest/shouldDetectLastPage()#java/lang/StringBuilder/toString()
org/springframework/data/neo4j/examples/galaxy/GalaxyServiceTest/shouldDetectLastPage()#java/lang/StringBuilder/append(java.lang.String)
org/springframework/data/neo4j/examples/galaxy/GalaxyServiceTest/shouldDetectLastPage()#java/io/PrintStream/println(java.lang.String)
org/springframework/data/neo4j/examples/galaxy/GalaxyServiceTest/shouldDetectLastPage()#org/springframework/data/domain/Page/iterator()
org/springframework/data/neo4j/examples/galaxy/GalaxyServiceTest/shouldPageAllWorlds()#java/lang/StringBuilder/StringBuilder()
org/springframework/data/neo4j/examples/galaxy/GalaxyServiceTest/shouldPageAllWorlds()#org/springframework/data/domain/Page/hasNext()
org/springframework/data/neo4j/examples/galaxy/GalaxyServiceTest/shouldPageAllWorlds()#java/lang/StringBuilder/append(java.lang.Object)
org/springframework/data/neo4j/examples/galaxy/GalaxyServiceTest/shouldPageAllWorlds()#org/junit/Assert/assertEquals(long,long)
org/springframework/data/neo4j/examples/galaxy/GalaxyServiceTest/shouldPageAllWorlds()#org/springframework/data/domain/PageRequest/PageRequest(int,int)
org/springframework/data/neo4j/examples/galaxy/GalaxyServiceTest/shouldPageAllWorlds()#java/lang/StringBuilder/toString()
org/springframework/data/neo4j/examples/galaxy/GalaxyServiceTest/shouldPageAllWorlds()#java/util/Iterator/hasNext()
org/springframework/data/neo4j/examples/galaxy/GalaxyServiceTest/shouldPageAllWorlds()#org/springframework/data/domain/Pageable/next()
org/springframework/data/neo4j/examples/galaxy/GalaxyServiceTest/shouldPageAllWorlds()#java/lang/StringBuilder/append(java.lang.String)
org/springframework/data/neo4j/examples/galaxy/GalaxyServiceTest/shouldPageAllWorlds()#java/io/PrintStream/println(java.lang.String)
org/springframework/data/neo4j/examples/galaxy/GalaxyServiceTest/shouldPageAllWorlds()#java/util/Iterator/next()
org/springframework/data/neo4j/examples/galaxy/GalaxyServiceTest/shouldPageAllWorlds()#java/lang/Long/longValue()
org/springframework/data/neo4j/examples/galaxy/GalaxyServiceTest/shouldPageAllWorlds()#java/util/List/iterator()
org/springframework/data/neo4j/examples/galaxy/GalaxyServiceTest/shouldPageAllWorlds()#org/springframework/data/domain/Page/iterator()
org/springframework/data/neo4j/examples/galaxy/GalaxyServiceTest/shouldDetectNotOnLastPage()#java/util/Iterator/hasNext()
org/springframework/data/neo4j/examples/galaxy/GalaxyServiceTest/shouldDetectNotOnLastPage()#java/util/Collection/size()
org/springframework/data/neo4j/examples/galaxy/GalaxyServiceTest/shouldDetectNotOnLastPage()#java/util/Iterator/next()
org/springframework/data/neo4j/examples/galaxy/GalaxyServiceTest/shouldDetectNotOnLastPage()#org/junit/Assert/assertTrue(boolean)
org/springframework/data/neo4j/examples/galaxy/GalaxyServiceTest/shouldDetectNotOnLastPage()#java/lang/StringBuilder/StringBuilder()
org/springframework/data/neo4j/examples/galaxy/GalaxyServiceTest/shouldDetectNotOnLastPage()#org/springframework/data/domain/Page/hasNext()
org/springframework/data/neo4j/examples/galaxy/GalaxyServiceTest/shouldDetectNotOnLastPage()#java/lang/StringBuilder/append(java.lang.Object)
org/springframework/data/neo4j/examples/galaxy/GalaxyServiceTest/shouldDetectNotOnLastPage()#org/junit/Assert/assertEquals(long,long)
org/springframework/data/neo4j/examples/galaxy/GalaxyServiceTest/shouldDetectNotOnLastPage()#org/springframework/data/domain/PageRequest/PageRequest(int,int)
org/springframework/data/neo4j/examples/galaxy/GalaxyServiceTest/shouldDetectNotOnLastPage()#java/lang/StringBuilder/toString()
org/springframework/data/neo4j/examples/galaxy/GalaxyServiceTest/shouldDetectNotOnLastPage()#java/lang/StringBuilder/append(java.lang.String)
org/springframework/data/neo4j/examples/galaxy/GalaxyServiceTest/shouldDetectNotOnLastPage()#java/io/PrintStream/println(java.lang.String)
org/springframework/data/neo4j/examples/galaxy/GalaxyServiceTest/shouldDetectNotOnLastPage()#org/springframework/data/domain/Page/iterator()
org/springframework/data/neo4j/examples/galaxy/GalaxyServiceTest/shouldSupportPaging()#java/util/Iterator/hasNext()
org/springframework/data/neo4j/examples/galaxy/GalaxyServiceTest/shouldSupportPaging()#org/neo4j/ogm/cypher/query/Pagination/Pagination(int,int)
org/springframework/data/neo4j/examples/galaxy/GalaxyServiceTest/shouldSupportPaging()#java/util/List/size()
org/springframework/data/neo4j/examples/galaxy/GalaxyServiceTest/shouldSupportPaging()#java/lang/Iterable/iterator()
org/springframework/data/neo4j/examples/galaxy/GalaxyServiceTest/shouldSupportPaging()#java/lang/StringBuilder/StringBuilder()
org/springframework/data/neo4j/examples/galaxy/GalaxyServiceTest/shouldSupportPaging()#java/lang/StringBuilder/append(java.lang.Object)
org/springframework/data/neo4j/examples/galaxy/GalaxyServiceTest/shouldSupportPaging()#org/junit/Assert/assertEquals(long,long)
org/springframework/data/neo4j/examples/galaxy/GalaxyServiceTest/shouldSupportPaging()#java/lang/StringBuilder/toString()
org/springframework/data/neo4j/examples/galaxy/GalaxyServiceTest/shouldSupportPaging()#java/lang/StringBuilder/append(java.lang.String)
org/springframework/data/neo4j/examples/galaxy/GalaxyServiceTest/shouldSupportPaging()#java/io/PrintStream/println(java.lang.String)
org/springframework/data/neo4j/examples/galaxy/GalaxyServiceTest/shouldSupportPaging()#java/util/Iterator/next()
org/springframework/data/neo4j/examples/galaxy/GalaxyServiceTest/shouldSupportPaging()#java/lang/Long/longValue()
org/springframework/data/neo4j/examples/galaxy/GalaxyServiceTest/shouldSupportPaging()#java/util/List/iterator()
org/springframework/data/neo4j/examples/galaxy/GalaxyServiceTest/shouldPageAllWorldsSorted()#java/util/List/size()
org/springframework/data/neo4j/examples/galaxy/GalaxyServiceTest/shouldPageAllWorldsSorted()#java/util/Iterator/next()
org/springframework/data/neo4j/examples/galaxy/GalaxyServiceTest/shouldPageAllWorldsSorted()#org/springframework/data/domain/Page/hasNext()
org/springframework/data/neo4j/examples/galaxy/GalaxyServiceTest/shouldPageAllWorldsSorted()#java/util/Iterator/hasNext()
org/springframework/data/neo4j/examples/galaxy/GalaxyServiceTest/shouldPageAllWorldsSorted()#org/springframework/data/domain/Pageable/next()
org/springframework/data/neo4j/examples/galaxy/GalaxyServiceTest/shouldPageAllWorldsSorted()#org/springframework/data/domain/Page/iterator()
org/springframework/data/neo4j/examples/galaxy/GalaxyServiceTest/shouldPageAllWorldsSorted()#org/springframework/data/domain/PageRequest/PageRequest(int,int,org.springframework.data.domain.Sort$Direction,java.lang.String[])
org/springframework/data/neo4j/examples/galaxy/GalaxyServiceTest/shouldPageAllWorldsSorted()#org/junit/Assert/assertEquals(long,long)
org/springframework/data/neo4j/examples/galaxy/GalaxyServiceTest/shouldPageAllWorldsSorted()#org/junit/Assert/assertEquals(java.lang.Object,java.lang.Object)
