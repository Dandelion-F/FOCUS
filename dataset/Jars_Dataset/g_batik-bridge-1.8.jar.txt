org/apache/batik/bridge/AbstractSVGFilterPrimitiveElementBridge/getFilterSource(org.w3c.dom.Element,java.lang.String,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,java.util.Map,org.apache.batik.bridge.BridgeContext)#java/awt/Color/Color(int,int,int,int)
org/apache/batik/bridge/AbstractSVGFilterPrimitiveElementBridge/getFilterSource(org.w3c.dom.Element,java.lang.String,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,java.util.Map,org.apache.batik.bridge.BridgeContext)#java/lang/String/charAt(int)
org/apache/batik/bridge/AbstractSVGFilterPrimitiveElementBridge/getFilterSource(org.w3c.dom.Element,java.lang.String,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,java.util.Map,org.apache.batik.bridge.BridgeContext)#org/apache/batik/ext/awt/image/renderable/FloodRable8Bit/FloodRable8Bit(java.awt.geom.Rectangle2D,java.awt.Paint)
org/apache/batik/bridge/AbstractSVGFilterPrimitiveElementBridge/getFilterSource(org.w3c.dom.Element,java.lang.String,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,java.util.Map,org.apache.batik.bridge.BridgeContext)#java/lang/String/equals(java.lang.Object)
org/apache/batik/bridge/AbstractSVGFilterPrimitiveElementBridge/getFilterSource(org.w3c.dom.Element,java.lang.String,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,java.util.Map,org.apache.batik.bridge.BridgeContext)#org/apache/batik/ext/awt/image/renderable/PadRable8Bit/PadRable8Bit(org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,org.apache.batik.ext.awt.image.PadMode)
org/apache/batik/bridge/AbstractSVGFilterPrimitiveElementBridge/getFilterSource(org.w3c.dom.Element,java.lang.String,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,java.util.Map,org.apache.batik.bridge.BridgeContext)#org/apache/batik/gvt/filter/BackgroundRable8Bit/BackgroundRable8Bit(org.apache.batik.gvt.GraphicsNode)
org/apache/batik/bridge/AbstractSVGFilterPrimitiveElementBridge/getFilterSource(org.w3c.dom.Element,java.lang.String,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,java.util.Map,org.apache.batik.bridge.BridgeContext)#org/apache/batik/ext/awt/image/renderable/Filter/getBounds2D()
org/apache/batik/bridge/AbstractSVGFilterPrimitiveElementBridge/getFilterSource(org.w3c.dom.Element,java.lang.String,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,java.util.Map,org.apache.batik.bridge.BridgeContext)#java/lang/String/length()
org/apache/batik/bridge/AbstractSVGFilterPrimitiveElementBridge/getFilterSource(org.w3c.dom.Element,java.lang.String,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,java.util.Map,org.apache.batik.bridge.BridgeContext)#java/util/Map/get(java.lang.Object)
org/apache/batik/bridge/AbstractSVGFilterPrimitiveElementBridge/getFilterSource(org.w3c.dom.Element,java.lang.String,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,java.util.Map,org.apache.batik.bridge.BridgeContext)#org/apache/batik/ext/awt/image/renderable/FilterAlphaRable/FilterAlphaRable(org.apache.batik.ext.awt.image.renderable.Filter)
org/apache/batik/bridge/RhinoInterpreter/3/run(org.mozilla.javascript.Context)#java/util/Iterator/remove()
org/apache/batik/bridge/RhinoInterpreter/3/run(org.mozilla.javascript.Context)#java/util/LinkedList/removeFirst()
org/apache/batik/bridge/RhinoInterpreter/3/run(org.mozilla.javascript.Context)#org/mozilla/javascript/Script/exec(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable)
org/apache/batik/bridge/RhinoInterpreter/3/run(org.mozilla.javascript.Context)#java/util/Iterator/next()
org/apache/batik/bridge/RhinoInterpreter/3/run(org.mozilla.javascript.Context)#java/lang/String/equals(java.lang.Object)
org/apache/batik/bridge/RhinoInterpreter/3/run(org.mozilla.javascript.Context)#org/apache/batik/bridge/RhinoInterpreter$Entry/Entry(java.lang.String,org.mozilla.javascript.Script)
org/apache/batik/bridge/RhinoInterpreter/3/run(org.mozilla.javascript.Context)#java/util/LinkedList/size()
org/apache/batik/bridge/RhinoInterpreter/3/run(org.mozilla.javascript.Context)#java/security/AccessController/doPrivileged(java.security.PrivilegedAction)
org/apache/batik/bridge/RhinoInterpreter/3/run(org.mozilla.javascript.Context)#java/util/LinkedList/iterator()
org/apache/batik/bridge/RhinoInterpreter/3/run(org.mozilla.javascript.Context)#org/apache/batik/bridge/RhinoInterpreter$3$1/1(org.apache.batik.bridge.RhinoInterpreter$3,org.mozilla.javascript.Context)
org/apache/batik/bridge/RhinoInterpreter/3/run(org.mozilla.javascript.Context)#java/util/Iterator/hasNext()
org/apache/batik/bridge/RhinoInterpreter/3/run(org.mozilla.javascript.Context)#java/util/LinkedList/addLast(java.lang.Object)
org/apache/batik/bridge/svg12/SVG12BridgeEventSupport/Listener/dispatchMouseEvent(java.lang.String,org.w3c.dom.Element,org.w3c.dom.Element,java.awt.Point,org.apache.batik.gvt.event.GraphicsNodeMouseEvent,boolean,int)#org/apache/batik/gvt/event/GraphicsNodeMouseEvent/getModifiers()
org/apache/batik/bridge/svg12/SVG12BridgeEventSupport/Listener/dispatchMouseEvent(java.lang.String,org.w3c.dom.Element,org.w3c.dom.Element,java.awt.Point,org.apache.batik.gvt.event.GraphicsNodeMouseEvent,boolean,int)#org/w3c/dom/Element/getOwnerDocument()
org/apache/batik/bridge/svg12/SVG12BridgeEventSupport/Listener/dispatchMouseEvent(java.lang.String,org.w3c.dom.Element,org.w3c.dom.Element,java.awt.Point,org.apache.batik.gvt.event.GraphicsNodeMouseEvent,boolean,int)#org/apache/batik/gvt/event/GraphicsNodeMouseEvent/getScreenPoint()
org/apache/batik/bridge/svg12/SVG12BridgeEventSupport/Listener/dispatchMouseEvent(java.lang.String,org.w3c.dom.Element,org.w3c.dom.Element,java.awt.Point,org.apache.batik.gvt.event.GraphicsNodeMouseEvent,boolean,int)#org/apache/batik/gvt/event/GraphicsNodeMouseEvent/getLockState()
org/apache/batik/bridge/svg12/SVG12BridgeEventSupport/Listener/dispatchMouseEvent(java.lang.String,org.w3c.dom.Element,org.w3c.dom.Element,java.awt.Point,org.apache.batik.gvt.event.GraphicsNodeMouseEvent,boolean,int)#org/w3c/dom/events/DocumentEvent/createEvent(java.lang.String)
org/apache/batik/bridge/svg12/SVG12BridgeEventSupport/Listener/dispatchMouseEvent(java.lang.String,org.w3c.dom.Element,org.w3c.dom.Element,java.awt.Point,org.apache.batik.gvt.event.GraphicsNodeMouseEvent,boolean,int)#java/lang/String/equals(java.lang.Object)
org/apache/batik/bridge/svg12/SVG12BridgeEventSupport/Listener/dispatchMouseEvent(java.lang.String,org.w3c.dom.Element,org.w3c.dom.Element,java.awt.Point,org.apache.batik.gvt.event.GraphicsNodeMouseEvent,boolean,int)#org/apache/batik/gvt/event/GraphicsNodeMouseEvent/getClickCount()
org/apache/batik/bridge/svg12/SVG12BridgeEventSupport/Listener/dispatchMouseEvent(java.lang.String,org.w3c.dom.Element,org.w3c.dom.Element,java.awt.Point,org.apache.batik.gvt.event.GraphicsNodeMouseEvent,boolean,int)#org/apache/batik/dom/events/DOMMouseEvent/initMouseEventNS(java.lang.String,java.lang.String,boolean,boolean,org.w3c.dom.views.AbstractView,int,int,int,int,int,short,org.w3c.dom.events.EventTarget,java.lang.String)
org/apache/batik/bridge/svg12/SVG12BridgeEventSupport/Listener/dispatchMouseEvent(java.lang.String,org.w3c.dom.Element,org.w3c.dom.Element,java.awt.Point,org.apache.batik.gvt.event.GraphicsNodeMouseEvent,boolean,int)#org/apache/batik/dom/util/DOMUtilities/getModifiersList(int,int)
org/apache/batik/bridge/svg12/SVG12BridgeEventSupport/Listener/dispatchMouseEvent(java.lang.String,org.w3c.dom.Element,org.w3c.dom.Element,java.awt.Point,org.apache.batik.gvt.event.GraphicsNodeMouseEvent,boolean,int)#org/apache/batik/gvt/event/GraphicsNodeMouseEvent/getButton()
org/apache/batik/bridge/svg12/SVG12BridgeEventSupport/Listener/dispatchMouseEvent(java.lang.String,org.w3c.dom.Element,org.w3c.dom.Element,java.awt.Point,org.apache.batik.gvt.event.GraphicsNodeMouseEvent,boolean,int)#org/apache/batik/dom/events/NodeEventTarget/getParentNodeEventTarget()
org/apache/batik/bridge/svg12/SVG12BridgeEventSupport/Listener/dispatchMouseEvent(java.lang.String,org.w3c.dom.Element,org.w3c.dom.Element,java.awt.Point,org.apache.batik.gvt.event.GraphicsNodeMouseEvent,boolean,int)#org/w3c/dom/events/EventTarget/dispatchEvent(org.w3c.dom.events.Event)
org/apache/batik/bridge/svg12/SVG12BridgeEventSupport/Listener/dispatchMouseEvent(java.lang.String,org.w3c.dom.Element,org.w3c.dom.Element,java.awt.Point,org.apache.batik.gvt.event.GraphicsNodeMouseEvent,boolean,int)#org/apache/batik/dom/events/AbstractEvent/setBubbleLimit(int)
org/apache/batik/bridge/svg12/SVG12BridgeEventSupport/Listener/dispatchKeyboardEvent(java.lang.String,org.apache.batik.gvt.event.GraphicsNodeKeyEvent)#org/apache/batik/gvt/event/GraphicsNodeKeyEvent/getLockState()
org/apache/batik/bridge/svg12/SVG12BridgeEventSupport/Listener/dispatchKeyboardEvent(java.lang.String,org.apache.batik.gvt.event.GraphicsNodeKeyEvent)#org/w3c/dom/Element/getOwnerDocument()
org/apache/batik/bridge/svg12/SVG12BridgeEventSupport/Listener/dispatchKeyboardEvent(java.lang.String,org.apache.batik.gvt.event.GraphicsNodeKeyEvent)#org/apache/batik/gvt/event/GraphicsNodeKeyEvent/getKeyCode()
org/apache/batik/bridge/svg12/SVG12BridgeEventSupport/Listener/dispatchKeyboardEvent(java.lang.String,org.apache.batik.gvt.event.GraphicsNodeKeyEvent)#org/apache/batik/bridge/svg12/SVG12BridgeEventSupport$Listener/mapKeyLocation(int)
org/apache/batik/bridge/svg12/SVG12BridgeEventSupport/Listener/dispatchKeyboardEvent(java.lang.String,org.apache.batik.gvt.event.GraphicsNodeKeyEvent)#org/w3c/dom/events/DocumentEvent/createEvent(java.lang.String)
org/apache/batik/bridge/svg12/SVG12BridgeEventSupport/Listener/dispatchKeyboardEvent(java.lang.String,org.apache.batik.gvt.event.GraphicsNodeKeyEvent)#org/apache/batik/bridge/svg12/SVG12BridgeEventSupport$Listener/mapKeyCodeToIdentifier(int)
org/apache/batik/bridge/svg12/SVG12BridgeEventSupport/Listener/dispatchKeyboardEvent(java.lang.String,org.apache.batik.gvt.event.GraphicsNodeKeyEvent)#org/apache/batik/gvt/event/GraphicsNodeKeyEvent/getKeyLocation()
org/apache/batik/bridge/svg12/SVG12BridgeEventSupport/Listener/dispatchKeyboardEvent(java.lang.String,org.apache.batik.gvt.event.GraphicsNodeKeyEvent)#org/apache/batik/dom/events/DOMKeyboardEvent/initKeyboardEventNS(java.lang.String,java.lang.String,boolean,boolean,org.w3c.dom.views.AbstractView,java.lang.String,int,java.lang.String)
org/apache/batik/bridge/svg12/SVG12BridgeEventSupport/Listener/dispatchKeyboardEvent(java.lang.String,org.apache.batik.gvt.event.GraphicsNodeKeyEvent)#org/apache/batik/gvt/event/GraphicsNodeKeyEvent/getModifiers()
org/apache/batik/bridge/svg12/SVG12BridgeEventSupport/Listener/dispatchKeyboardEvent(java.lang.String,org.apache.batik.gvt.event.GraphicsNodeKeyEvent)#org/w3c/dom/Document/getDocumentElement()
org/apache/batik/bridge/svg12/SVG12BridgeEventSupport/Listener/dispatchKeyboardEvent(java.lang.String,org.apache.batik.gvt.event.GraphicsNodeKeyEvent)#org/apache/batik/dom/util/DOMUtilities/getModifiersList(int,int)
org/apache/batik/bridge/svg12/SVG12BridgeEventSupport/Listener/dispatchKeyboardEvent(java.lang.String,org.apache.batik.gvt.event.GraphicsNodeKeyEvent)#org/w3c/dom/events/EventTarget/dispatchEvent(org.w3c.dom.events.Event)
org/apache/batik/bridge/SVGImageElementBridge/ForwardEventListener/handleEvent(org.w3c.dom.events.Event)#org/apache/batik/dom/events/DOMMouseEvent/getScreenX()
org/apache/batik/bridge/SVGImageElementBridge/ForwardEventListener/handleEvent(org.w3c.dom.events.Event)#org/w3c/dom/events/DocumentEvent/createEvent(java.lang.String)
org/apache/batik/bridge/SVGImageElementBridge/ForwardEventListener/handleEvent(org.w3c.dom.events.Event)#org/apache/batik/dom/events/DOMMouseEvent/getDetail()
org/apache/batik/bridge/SVGImageElementBridge/ForwardEventListener/handleEvent(org.w3c.dom.events.Event)#org/apache/batik/dom/events/DOMMouseEvent/getButton()
org/apache/batik/bridge/SVGImageElementBridge/ForwardEventListener/handleEvent(org.w3c.dom.events.Event)#org/apache/batik/dom/events/DOMMouseEvent/getCancelable()
org/apache/batik/bridge/SVGImageElementBridge/ForwardEventListener/handleEvent(org.w3c.dom.events.Event)#org/apache/batik/dom/events/DOMMouseEvent/getType()
org/apache/batik/bridge/SVGImageElementBridge/ForwardEventListener/handleEvent(org.w3c.dom.events.Event)#org/apache/batik/dom/events/DOMMouseEvent/initMouseEventNS(java.lang.String,java.lang.String,boolean,boolean,org.w3c.dom.views.AbstractView,int,int,int,int,int,short,org.w3c.dom.events.EventTarget,java.lang.String)
org/apache/batik/bridge/SVGImageElementBridge/ForwardEventListener/handleEvent(org.w3c.dom.events.Event)#org/apache/batik/dom/events/DOMMouseEvent/getModifiersString()
org/apache/batik/bridge/SVGImageElementBridge/ForwardEventListener/handleEvent(org.w3c.dom.events.Event)#org/apache/batik/dom/events/DOMMouseEvent/getScreenY()
org/apache/batik/bridge/SVGImageElementBridge/ForwardEventListener/handleEvent(org.w3c.dom.events.Event)#org/apache/batik/dom/events/DOMMouseEvent/getClientX()
org/apache/batik/bridge/SVGImageElementBridge/ForwardEventListener/handleEvent(org.w3c.dom.events.Event)#org/apache/batik/dom/events/DOMMouseEvent/getView()
org/apache/batik/bridge/SVGImageElementBridge/ForwardEventListener/handleEvent(org.w3c.dom.events.Event)#org/w3c/dom/Element/getOwnerDocument()
org/apache/batik/bridge/SVGImageElementBridge/ForwardEventListener/handleEvent(org.w3c.dom.events.Event)#org/apache/batik/dom/events/DOMMouseEvent/getClientY()
org/apache/batik/bridge/SVGImageElementBridge/ForwardEventListener/handleEvent(org.w3c.dom.events.Event)#org/w3c/dom/events/EventTarget/dispatchEvent(org.w3c.dom.events.Event)
org/apache/batik/bridge/SVGImageElementBridge/ForwardEventListener/handleEvent(org.w3c.dom.events.Event)#org/apache/batik/dom/events/DOMMouseEvent/getBubbles()
org/apache/batik/bridge/svg12/XPathSubsetContentSelector/SelectedNodes/update()#java/util/ArrayList/clone()
org/apache/batik/bridge/svg12/XPathSubsetContentSelector/SelectedNodes/update()#org/apache/batik/anim/dom/XBLOMContentElement/lookupNamespaceURI(java.lang.String)
org/apache/batik/bridge/svg12/XPathSubsetContentSelector/SelectedNodes/update()#org/w3c/dom/Element/getFirstChild()
org/apache/batik/bridge/svg12/XPathSubsetContentSelector/SelectedNodes/update()#org/w3c/dom/Element/getLocalName()
org/apache/batik/bridge/svg12/XPathSubsetContentSelector/SelectedNodes/update()#org/w3c/dom/Element/getNamespaceURI()
org/apache/batik/bridge/svg12/XPathSubsetContentSelector/SelectedNodes/update()#java/util/ArrayList/clear()
org/apache/batik/bridge/svg12/XPathSubsetContentSelector/SelectedNodes/update()#java/util/ArrayList/size()
org/apache/batik/bridge/svg12/XPathSubsetContentSelector/SelectedNodes/update()#org/apache/batik/bridge/svg12/XPathSubsetContentSelector/isSelected(org.w3c.dom.Node)
org/apache/batik/bridge/svg12/XPathSubsetContentSelector/SelectedNodes/update()#java/util/ArrayList/get(int)
org/apache/batik/bridge/svg12/XPathSubsetContentSelector/SelectedNodes/update()#org/w3c/dom/Node/getNodeType()
org/apache/batik/bridge/svg12/XPathSubsetContentSelector/SelectedNodes/update()#org/w3c/dom/Element/getAttributeNS(java.lang.String,java.lang.String)
org/apache/batik/bridge/svg12/XPathSubsetContentSelector/SelectedNodes/update()#org/w3c/dom/Node/getNextSibling()
org/apache/batik/bridge/svg12/XPathSubsetContentSelector/SelectedNodes/update()#java/lang/String/equals(java.lang.Object)
org/apache/batik/bridge/svg12/XPathSubsetContentSelector/SelectedNodes/update()#java/util/ArrayList/add(java.lang.Object)
org/apache/batik/bridge/SVGPatternElementBridge/createPaint(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,float)#org/apache/batik/gvt/GraphicsNode/setTransform(java.awt.geom.AffineTransform)
org/apache/batik/bridge/SVGPatternElementBridge/createPaint(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,float)#org/apache/batik/ext/awt/image/ConcreteComponentTransferFunction/getIdentityTransfer()
org/apache/batik/bridge/SVGPatternElementBridge/createPaint(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,float)#org/apache/batik/bridge/SVGPatternElementBridge$PatternGraphicsNode/PatternGraphicsNode(org.apache.batik.gvt.GraphicsNode)
org/apache/batik/bridge/SVGPatternElementBridge/createPaint(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,float)#java/awt/geom/AffineTransform/scale(double,double)
org/apache/batik/bridge/SVGPatternElementBridge/createPaint(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,float)#org/apache/batik/gvt/GraphicsNode/getGraphicsNodeRable(boolean)
org/apache/batik/bridge/SVGPatternElementBridge/createPaint(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,float)#java/awt/geom/AffineTransform/concatenate(java.awt.geom.AffineTransform)
org/apache/batik/bridge/SVGPatternElementBridge/createPaint(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,float)#java/awt/geom/Rectangle2D/getHeight()
org/apache/batik/bridge/SVGPatternElementBridge/createPaint(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,float)#java/awt/geom/AffineTransform/AffineTransform()
org/apache/batik/bridge/SVGPatternElementBridge/createPaint(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,float)#org/apache/batik/ext/awt/image/renderable/ComponentTransferRable8Bit/ComponentTransferRable8Bit(org.apache.batik.ext.awt.image.renderable.Filter,org.apache.batik.ext.awt.image.ComponentTransferFunction,org.apache.batik.ext.awt.image.ComponentTransferFunction,org.apache.batik.ext.awt.image.ComponentTransferFunction,org.apache.batik.ext.awt.image.ComponentTransferFunction)
org/apache/batik/bridge/SVGPatternElementBridge/createPaint(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,float)#java/awt/geom/Rectangle2D/getY()
org/apache/batik/bridge/SVGPatternElementBridge/createPaint(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,float)#java/awt/geom/AffineTransform/translate(double,double)
org/apache/batik/bridge/SVGPatternElementBridge/createPaint(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,float)#java/lang/String/length()
org/apache/batik/bridge/SVGPatternElementBridge/createPaint(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,float)#java/awt/geom/Rectangle2D/getWidth()
org/apache/batik/bridge/SVGPatternElementBridge/createPaint(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,float)#org/apache/batik/ext/awt/image/ConcreteComponentTransferFunction/getLinearTransfer(float,float)
org/apache/batik/bridge/SVGPatternElementBridge/createPaint(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,float)#org/apache/batik/gvt/GraphicsNode/getGeometryBounds()
org/apache/batik/bridge/SVGPatternElementBridge/createPaint(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,float)#org/apache/batik/gvt/PatternPaint/PatternPaint(org.apache.batik.gvt.GraphicsNode,java.awt.geom.Rectangle2D,boolean,java.awt.geom.AffineTransform)
org/apache/batik/bridge/SVGPatternElementBridge/createPaint(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,float)#org/apache/batik/gvt/GraphicsNode/setFilter(org.apache.batik.ext.awt.image.renderable.Filter)
org/apache/batik/bridge/SVGPatternElementBridge/createPaint(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,float)#java/awt/geom/Rectangle2D/getX()
org/apache/batik/bridge/svg12/SVG12BridgeContext/addDOMListeners()#org/apache/batik/bridge/BridgeContext$DOMNodeRemovedEventListener/DOMNodeRemovedEventListener(org.apache.batik.bridge.BridgeContext)
org/apache/batik/bridge/svg12/SVG12BridgeContext/addDOMListeners()#org/apache/batik/bridge/svg12/SVG12BridgeContext$EventListenerWrapper/EventListenerWrapper(org.apache.batik.bridge.svg12.SVG12BridgeContext,org.w3c.dom.events.EventListener)
org/apache/batik/bridge/svg12/SVG12BridgeContext/addDOMListeners()#org/apache/batik/css/engine/CSSEngine/addCSSEngineListener(org.apache.batik.css.engine.CSSEngineListener)
org/apache/batik/bridge/svg12/SVG12BridgeContext/addDOMListeners()#org/apache/batik/anim/dom/SVGOMDocument/getCSSEngine()
org/apache/batik/bridge/svg12/SVG12BridgeContext/addDOMListeners()#org/apache/batik/anim/dom/XBLEventSupport/addImplementationEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean)
org/apache/batik/bridge/svg12/SVG12BridgeContext/addDOMListeners()#org/apache/batik/anim/dom/SVGOMDocument/addAnimatedAttributeListener(org.apache.batik.anim.dom.AnimatedAttributeListener)
org/apache/batik/bridge/svg12/SVG12BridgeContext/addDOMListeners()#org/apache/batik/bridge/BridgeContext$DOMCharacterDataModifiedEventListener/DOMCharacterDataModifiedEventListener(org.apache.batik.bridge.BridgeContext)
org/apache/batik/bridge/svg12/SVG12BridgeContext/addDOMListeners()#org/apache/batik/bridge/BridgeContext$AnimatedAttrListener/AnimatedAttrListener(org.apache.batik.bridge.BridgeContext)
org/apache/batik/bridge/svg12/SVG12BridgeContext/addDOMListeners()#org/apache/batik/bridge/BridgeContext$DOMNodeInsertedEventListener/DOMNodeInsertedEventListener(org.apache.batik.bridge.BridgeContext)
org/apache/batik/bridge/svg12/SVG12BridgeContext/addDOMListeners()#org/apache/batik/bridge/BridgeContext$DOMAttrModifiedEventListener/DOMAttrModifiedEventListener(org.apache.batik.bridge.BridgeContext)
org/apache/batik/bridge/svg12/SVG12BridgeContext/addDOMListeners()#org/apache/batik/bridge/BridgeContext$CSSPropertiesChangedListener/CSSPropertiesChangedListener(org.apache.batik.bridge.BridgeContext)
org/apache/batik/bridge/svg12/SVG12BridgeContext/addDOMListeners()#org/apache/batik/anim/dom/SVGOMDocument/initializeEventSupport()
org/apache/batik/bridge/svg12/SVG12BridgeContext/dispose()#org/apache/batik/bridge/BridgeContext$EventListenerMememto/getUseCapture()
org/apache/batik/bridge/svg12/SVG12BridgeContext/dispose()#org/w3c/dom/Node/getOwnerDocument()
org/apache/batik/bridge/svg12/SVG12BridgeContext/dispose()#java/util/Iterator/hasNext()
org/apache/batik/bridge/svg12/SVG12BridgeContext/dispose()#org/apache/batik/dom/events/NodeEventTarget/removeEventListener(java.lang.String,org.w3c.dom.events.EventListener,boolean)
org/apache/batik/bridge/svg12/SVG12BridgeContext/dispose()#org/apache/batik/bridge/BridgeContext$EventListenerMememto/getNamespaced()
org/apache/batik/bridge/svg12/SVG12BridgeContext/dispose()#java/util/Map/clear()
org/apache/batik/bridge/svg12/SVG12BridgeContext/dispose()#org/apache/batik/dom/events/NodeEventTarget/removeEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean)
org/apache/batik/bridge/svg12/SVG12BridgeContext/dispose()#org/apache/batik/bridge/BridgeContext$EventListenerMememto/getEventType()
org/apache/batik/bridge/svg12/SVG12BridgeContext/dispose()#java/util/Map/values()
org/apache/batik/bridge/svg12/SVG12BridgeContext/dispose()#org/apache/batik/dom/AbstractNode/initializeEventSupport()
org/apache/batik/bridge/svg12/SVG12BridgeContext/dispose()#java/util/Iterator/next()
org/apache/batik/bridge/svg12/SVG12BridgeContext/dispose()#org/apache/batik/script/Interpreter/dispose()
org/apache/batik/bridge/svg12/SVG12BridgeContext/dispose()#org/apache/batik/anim/dom/XBLEventSupport/removeImplementationEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean)
org/apache/batik/bridge/svg12/SVG12BridgeContext/dispose()#org/apache/batik/bridge/BridgeContext$EventListenerMememto/getNamespaceURI()
org/apache/batik/bridge/svg12/SVG12BridgeContext/dispose()#org/apache/batik/bridge/BridgeContext$EventListenerMememto/getTarget()
org/apache/batik/bridge/svg12/SVG12BridgeContext/dispose()#org/apache/batik/bridge/BridgeContext$EventListenerMememto/getListener()
org/apache/batik/bridge/svg12/SVG12BridgeContext/dispose()#java/util/Set/iterator()
org/apache/batik/bridge/svg12/SVG12BridgeContext/dispose()#org/apache/batik/bridge/svg12/SVG12BridgeContext/clearChildContexts()
org/apache/batik/bridge/svg12/SVG12BridgeContext/dispose()#java/util/Collection/iterator()
org/apache/batik/bridge/svg12/SVG12BridgeContext/removeUIEventListeners(org.w3c.dom.Document)#org/apache/batik/bridge/BridgeContext$EventListenerMememto/getUseCapture()
org/apache/batik/bridge/svg12/SVG12BridgeContext/removeUIEventListeners(org.w3c.dom.Document)#java/util/Iterator/hasNext()
org/apache/batik/bridge/svg12/SVG12BridgeContext/removeUIEventListeners(org.w3c.dom.Document)#org/apache/batik/dom/events/NodeEventTarget/removeEventListener(java.lang.String,org.w3c.dom.events.EventListener,boolean)
org/apache/batik/bridge/svg12/SVG12BridgeContext/removeUIEventListeners(org.w3c.dom.Document)#org/apache/batik/bridge/BridgeContext$EventListenerMememto/getEventType()
org/apache/batik/bridge/svg12/SVG12BridgeContext/removeUIEventListeners(org.w3c.dom.Document)#org/apache/batik/bridge/BridgeContext$EventListenerMememto/getNamespaced()
org/apache/batik/bridge/svg12/SVG12BridgeContext/removeUIEventListeners(org.w3c.dom.Document)#org/apache/batik/dom/AbstractNode/initializeEventSupport()
org/apache/batik/bridge/svg12/SVG12BridgeContext/removeUIEventListeners(org.w3c.dom.Document)#java/util/Iterator/next()
org/apache/batik/bridge/svg12/SVG12BridgeContext/removeUIEventListeners(org.w3c.dom.Document)#org/apache/batik/dom/events/NodeEventTarget/removeEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean)
org/apache/batik/bridge/svg12/SVG12BridgeContext/removeUIEventListeners(org.w3c.dom.Document)#org/w3c/dom/Document/getDocumentElement()
org/apache/batik/bridge/svg12/SVG12BridgeContext/removeUIEventListeners(org.w3c.dom.Document)#org/apache/batik/anim/dom/XBLEventSupport/removeImplementationEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean)
org/apache/batik/bridge/svg12/SVG12BridgeContext/removeUIEventListeners(org.w3c.dom.Document)#org/apache/batik/bridge/BridgeContext$EventListenerMememto/getNamespaceURI()
org/apache/batik/bridge/svg12/SVG12BridgeContext/removeUIEventListeners(org.w3c.dom.Document)#org/apache/batik/bridge/BridgeContext$EventListenerMememto/getTarget()
org/apache/batik/bridge/svg12/SVG12BridgeContext/removeUIEventListeners(org.w3c.dom.Document)#org/apache/batik/bridge/BridgeContext$EventListenerMememto/getListener()
org/apache/batik/bridge/svg12/SVG12BridgeContext/removeUIEventListeners(org.w3c.dom.Document)#java/util/Set/iterator()
org/apache/batik/bridge/svg12/SVG12BridgeContext/createSubBridgeContext(org.apache.batik.anim.dom.SVGOMDocument)#org/apache/batik/bridge/svg12/SVG12BridgeContext/isDynamic()
org/apache/batik/bridge/svg12/SVG12BridgeContext/createSubBridgeContext(org.apache.batik.anim.dom.SVGOMDocument)#org/apache/batik/bridge/svg12/SVG12BridgeContext/setUpdateManager(org.apache.batik.bridge.BridgeContext,org.apache.batik.bridge.UpdateManager)
org/apache/batik/bridge/svg12/SVG12BridgeContext/createSubBridgeContext(org.apache.batik.anim.dom.SVGOMDocument)#org/apache/batik/anim/dom/SVGOMDocument/getCSSEngine()
org/apache/batik/bridge/svg12/SVG12BridgeContext/createSubBridgeContext(org.apache.batik.anim.dom.SVGOMDocument)#org/apache/batik/bridge/svg12/SVG12BridgeContext/setXBLManager(org.apache.batik.bridge.BridgeContext,org.apache.batik.dom.xbl.XBLManager)
org/apache/batik/bridge/svg12/SVG12BridgeContext/createSubBridgeContext(org.apache.batik.anim.dom.SVGOMDocument)#org/apache/batik/anim/dom/SVGOMDocument/setXBLManager(org.apache.batik.dom.xbl.XBLManager)
org/apache/batik/bridge/svg12/SVG12BridgeContext/createSubBridgeContext(org.apache.batik.anim.dom.SVGOMDocument)#org/apache/batik/css/engine/CSSEngine/getCSSContext()
org/apache/batik/bridge/svg12/SVG12BridgeContext/createSubBridgeContext(org.apache.batik.anim.dom.SVGOMDocument)#org/apache/batik/bridge/ScriptingEnvironment/dispatchSVGLoadEvent()
org/apache/batik/bridge/svg12/SVG12BridgeContext/createSubBridgeContext(org.apache.batik.anim.dom.SVGOMDocument)#org/apache/batik/bridge/ScriptingEnvironment/loadScripts()
org/apache/batik/bridge/svg12/SVG12BridgeContext/createSubBridgeContext(org.apache.batik.anim.dom.SVGOMDocument)#org/apache/batik/anim/dom/SVGOMDocument/isSVG12()
org/apache/batik/bridge/SVGKernElementBridge/createKern(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.bridge.SVGGVTFont)#org/apache/batik/gvt/font/Kern/Kern(int[],int[],org.apache.batik.gvt.font.UnicodeRange[],org.apache.batik.gvt.font.UnicodeRange[],float)
org/apache/batik/bridge/SVGKernElementBridge/createKern(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.bridge.SVGGVTFont)#java/util/StringTokenizer/StringTokenizer(java.lang.String,java.lang.String)
org/apache/batik/bridge/SVGKernElementBridge/createKern(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.bridge.SVGGVTFont)#java/lang/String/length()
org/apache/batik/bridge/SVGKernElementBridge/createKern(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.bridge.SVGGVTFont)#java/util/List/size()
org/apache/batik/bridge/SVGKernElementBridge/createKern(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.bridge.SVGGVTFont)#java/util/List/add(java.lang.Object)
org/apache/batik/bridge/SVGKernElementBridge/createKern(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.bridge.SVGGVTFont)#java/lang/String/startsWith(java.lang.String)
org/apache/batik/bridge/SVGKernElementBridge/createKern(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.bridge.SVGGVTFont)#java/util/StringTokenizer/nextToken()
org/apache/batik/bridge/SVGKernElementBridge/createKern(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.bridge.SVGGVTFont)#java/lang/System/arraycopy(java.lang.Object,int,java.lang.Object,int,int)
org/apache/batik/bridge/SVGKernElementBridge/createKern(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.bridge.SVGGVTFont)#java/util/StringTokenizer/hasMoreTokens()
org/apache/batik/bridge/SVGKernElementBridge/createKern(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.bridge.SVGGVTFont)#java/util/ArrayList/ArrayList()
org/apache/batik/bridge/SVGKernElementBridge/createKern(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.bridge.SVGGVTFont)#org/w3c/dom/Element/getAttributeNS(java.lang.String,java.lang.String)
org/apache/batik/bridge/SVGKernElementBridge/createKern(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.bridge.SVGGVTFont)#org/apache/batik/gvt/font/UnicodeRange/UnicodeRange(java.lang.String)
org/apache/batik/bridge/SVGKernElementBridge/createKern(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.bridge.SVGGVTFont)#java/lang/Float/parseFloat(java.lang.String)
org/apache/batik/bridge/SVGKernElementBridge/createKern(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.bridge.SVGGVTFont)#java/util/List/toArray(java.lang.Object[])
org/apache/batik/bridge/DefaultFontFamilyResolver/<clinit>()#org/apache/batik/gvt/font/AWTFontFamily/AWTFontFamily(java.lang.String)
org/apache/batik/bridge/DefaultFontFamilyResolver/<clinit>()#java/awt/Font/getFontName()
org/apache/batik/bridge/DefaultFontFamilyResolver/<clinit>()#java/awt/GraphicsEnvironment/getAllFonts()
org/apache/batik/bridge/DefaultFontFamilyResolver/<clinit>()#java/util/Map/values()
org/apache/batik/bridge/DefaultFontFamilyResolver/<clinit>()#java/lang/String/equals(java.lang.Object)
org/apache/batik/bridge/DefaultFontFamilyResolver/<clinit>()#java/lang/StringBuilder/StringBuilder()
org/apache/batik/bridge/DefaultFontFamilyResolver/<clinit>()#java/lang/String/replace(char,char)
org/apache/batik/bridge/DefaultFontFamilyResolver/<clinit>()#java/util/StringTokenizer/nextToken()
org/apache/batik/bridge/DefaultFontFamilyResolver/<clinit>()#java/util/StringTokenizer/hasMoreTokens()
org/apache/batik/bridge/DefaultFontFamilyResolver/<clinit>()#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/batik/bridge/DefaultFontFamilyResolver/<clinit>()#java/util/ArrayList/ArrayList()
org/apache/batik/bridge/DefaultFontFamilyResolver/<clinit>()#java/util/Iterator/hasNext()
org/apache/batik/bridge/DefaultFontFamilyResolver/<clinit>()#java/lang/String/toLowerCase()
org/apache/batik/bridge/DefaultFontFamilyResolver/<clinit>()#java/awt/GraphicsEnvironment/getLocalGraphicsEnvironment()
org/apache/batik/bridge/DefaultFontFamilyResolver/<clinit>()#java/lang/StringBuilder/append(java.lang.String)
org/apache/batik/bridge/DefaultFontFamilyResolver/<clinit>()#java/util/Iterator/next()
org/apache/batik/bridge/DefaultFontFamilyResolver/<clinit>()#java/util/HashMap/HashMap()
org/apache/batik/bridge/DefaultFontFamilyResolver/<clinit>()#java/util/List/add(java.lang.Object)
org/apache/batik/bridge/DefaultFontFamilyResolver/<clinit>()#java/awt/GraphicsEnvironment/getAvailableFontFamilyNames()
org/apache/batik/bridge/DefaultFontFamilyResolver/<clinit>()#java/util/Collection/iterator()
org/apache/batik/bridge/DefaultFontFamilyResolver/<clinit>()#org/apache/batik/gvt/font/AWTFontFamily/getFamilyName()
org/apache/batik/bridge/DefaultFontFamilyResolver/<clinit>()#java/util/StringTokenizer/StringTokenizer(java.lang.String)
org/apache/batik/bridge/DefaultFontFamilyResolver/<clinit>()#java/lang/StringBuilder/toString()
org/apache/batik/bridge/DefaultFontFamilyResolver/<clinit>()#org/apache/batik/gvt/font/AWTGVTFont/AWTGVTFont(java.lang.String,int,int)
org/apache/batik/bridge/FontFace/getFontFamily(org.apache.batik.bridge.BridgeContext,org.apache.batik.util.ParsedURL)#org/w3c/dom/svg/SVGDocument/importNode(org.w3c.dom.Node,boolean)
org/apache/batik/bridge/FontFace/getFontFamily(org.apache.batik.bridge.BridgeContext,org.apache.batik.util.ParsedURL)#org/w3c/dom/Node/getNextSibling()
org/apache/batik/bridge/FontFace/getFontFamily(org.apache.batik.bridge.BridgeContext,org.apache.batik.util.ParsedURL)#org/w3c/dom/Element/getOwnerDocument()
org/apache/batik/bridge/FontFace/getFontFamily(org.apache.batik.bridge.BridgeContext,org.apache.batik.util.ParsedURL)#org/w3c/dom/Node/getLocalName()
org/apache/batik/bridge/FontFace/getFontFamily(org.apache.batik.bridge.BridgeContext,org.apache.batik.util.ParsedURL)#org/w3c/dom/Element/getFirstChild()
org/apache/batik/bridge/FontFace/getFontFamily(org.apache.batik.bridge.BridgeContext,org.apache.batik.util.ParsedURL)#org/w3c/dom/svg/SVGDocument/getURL()
org/apache/batik/bridge/FontFace/getFontFamily(org.apache.batik.bridge.BridgeContext,org.apache.batik.util.ParsedURL)#java/lang/String/equals(java.lang.Object)
org/apache/batik/bridge/FontFace/getFontFamily(org.apache.batik.bridge.BridgeContext,org.apache.batik.util.ParsedURL)#org/apache/batik/util/ParsedURL/ParsedURL(java.lang.String,java.lang.String)
org/apache/batik/bridge/FontFace/getFontFamily(org.apache.batik.bridge.BridgeContext,org.apache.batik.util.ParsedURL)#org/apache/batik/util/ParsedURL/getRef()
org/apache/batik/bridge/FontFace/getFontFamily(org.apache.batik.bridge.BridgeContext,org.apache.batik.util.ParsedURL)#org/w3c/dom/Element/setAttributeNS(java.lang.String,java.lang.String,java.lang.String)
org/apache/batik/bridge/FontFace/getFontFamily(org.apache.batik.bridge.BridgeContext,org.apache.batik.util.ParsedURL)#org/apache/batik/util/ParsedURL/ParsedURL(java.lang.String)
org/apache/batik/bridge/FontFace/getFontFamily(org.apache.batik.bridge.BridgeContext,org.apache.batik.util.ParsedURL)#org/w3c/dom/Element/appendChild(org.w3c.dom.Node)
org/apache/batik/bridge/FontFace/getFontFamily(org.apache.batik.bridge.BridgeContext,org.apache.batik.util.ParsedURL)#org/w3c/dom/Element/getLocalName()
org/apache/batik/bridge/FontFace/getFontFamily(org.apache.batik.bridge.BridgeContext,org.apache.batik.util.ParsedURL)#org/w3c/dom/Element/getNamespaceURI()
org/apache/batik/bridge/FontFace/getFontFamily(org.apache.batik.bridge.BridgeContext,org.apache.batik.util.ParsedURL)#org/apache/batik/dom/AbstractNode/getBaseURI(org.w3c.dom.Node)
org/apache/batik/bridge/FontFace/getFontFamily(org.apache.batik.bridge.BridgeContext,org.apache.batik.util.ParsedURL)#org/w3c/dom/svg/SVGDocument/createElementNS(java.lang.String,java.lang.String)
org/apache/batik/bridge/FontFace/getFontFamily(org.apache.batik.bridge.BridgeContext,org.apache.batik.util.ParsedURL)#org/apache/batik/util/ParsedURL/openStream()
org/apache/batik/bridge/FontFace/getFontFamily(org.apache.batik.bridge.BridgeContext,org.apache.batik.util.ParsedURL)#org/w3c/dom/Node/getNamespaceURI()
org/apache/batik/bridge/FontFace/getFontFamily(org.apache.batik.bridge.BridgeContext,org.apache.batik.util.ParsedURL)#org/apache/batik/util/ParsedURL/toString()
org/apache/batik/bridge/FontFace/getFontFamily(org.apache.batik.bridge.BridgeContext,org.apache.batik.util.ParsedURL)#org/w3c/dom/Node/getNodeType()
org/apache/batik/bridge/SVGClipPathElementBridge/createClip(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode)#java/awt/RenderingHints/get(java.lang.Object)
org/apache/batik/bridge/SVGClipPathElementBridge/createClip(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode)#org/apache/batik/gvt/GraphicsNode/getOutline()
org/apache/batik/bridge/SVGClipPathElementBridge/createClip(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode)#org/apache/batik/gvt/GraphicsNode/getGraphicsNodeRable(boolean)
org/apache/batik/bridge/SVGClipPathElementBridge/createClip(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode)#java/awt/geom/GeneralPath/setWindingRule(int)
org/apache/batik/bridge/SVGClipPathElementBridge/createClip(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode)#java/awt/geom/GeneralPath/GeneralPath(java.awt.Shape)
org/apache/batik/bridge/SVGClipPathElementBridge/createClip(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode)#org/apache/batik/ext/awt/image/renderable/ClipRable/getClipPath()
org/apache/batik/bridge/SVGClipPathElementBridge/createClip(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode)#java/awt/geom/Area/Area(java.awt.Shape)
org/apache/batik/bridge/SVGClipPathElementBridge/createClip(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode)#java/awt/geom/AffineTransform/AffineTransform()
org/apache/batik/bridge/SVGClipPathElementBridge/createClip(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode)#java/awt/geom/Area/Area()
org/apache/batik/bridge/SVGClipPathElementBridge/createClip(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode)#org/apache/batik/gvt/GraphicsNode/getFilter()
org/apache/batik/bridge/SVGClipPathElementBridge/createClip(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode)#org/apache/batik/gvt/ShapeNode/ShapeNode()
org/apache/batik/bridge/SVGClipPathElementBridge/createClip(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode)#org/w3c/dom/Element/getAttributeNS(java.lang.String,java.lang.String)
org/apache/batik/bridge/SVGClipPathElementBridge/createClip(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode)#org/w3c/dom/Node/getNextSibling()
org/apache/batik/bridge/SVGClipPathElementBridge/createClip(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode)#org/apache/batik/anim/dom/SVGOMUseElement/getCSSFirstChild()
org/apache/batik/bridge/SVGClipPathElementBridge/createClip(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode)#org/apache/batik/ext/awt/image/renderable/ClipRable8Bit/ClipRable8Bit(org.apache.batik.ext.awt.image.renderable.Filter,java.awt.Shape,boolean)
org/apache/batik/bridge/SVGClipPathElementBridge/createClip(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode)#java/awt/geom/Area/add(java.awt.geom.Area)
org/apache/batik/bridge/SVGClipPathElementBridge/createClip(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode)#org/w3c/dom/Element/getFirstChild()
org/apache/batik/bridge/SVGClipPathElementBridge/createClip(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode)#java/lang/String/length()
org/apache/batik/bridge/SVGClipPathElementBridge/createClip(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode)#java/awt/geom/AffineTransform/preConcatenate(java.awt.geom.AffineTransform)
org/apache/batik/bridge/SVGClipPathElementBridge/createClip(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode)#java/awt/geom/Area/subtract(java.awt.geom.Area)
org/apache/batik/bridge/SVGClipPathElementBridge/createClip(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode)#org/apache/batik/gvt/ShapeNode/setShape(java.awt.Shape)
org/apache/batik/bridge/SVGClipPathElementBridge/createClip(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode)#org/apache/batik/gvt/GraphicsNode/getTransform()
org/apache/batik/bridge/SVGClipPathElementBridge/createClip(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode)#java/awt/geom/AffineTransform/createTransformedShape(java.awt.Shape)
org/apache/batik/bridge/SVGClipPathElementBridge/createClip(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode)#org/w3c/dom/Node/getNodeType()
org/apache/batik/bridge/SVGAnimationEngine/AnimatablePaintValueFactory/createAnimatableValue(org.apache.batik.anim.dom.AnimationTarget,java.lang.String,org.apache.batik.css.engine.value.Value)#org/apache/batik/anim/values/AnimatablePaintValue/createURIPaintValue(org.apache.batik.anim.dom.AnimationTarget,java.lang.String)
org/apache/batik/bridge/SVGAnimationEngine/AnimatablePaintValueFactory/createAnimatableValue(org.apache.batik.anim.dom.AnimationTarget,java.lang.String,org.apache.batik.css.engine.value.Value)#org/apache/batik/css/engine/value/Value/getStringValue()
org/apache/batik/bridge/SVGAnimationEngine/AnimatablePaintValueFactory/createAnimatableValue(org.apache.batik.anim.dom.AnimationTarget,java.lang.String,org.apache.batik.css.engine.value.Value)#org/apache/batik/css/engine/value/Value/getPrimitiveType()
org/apache/batik/bridge/SVGAnimationEngine/AnimatablePaintValueFactory/createAnimatableValue(org.apache.batik.anim.dom.AnimationTarget,java.lang.String,org.apache.batik.css.engine.value.Value)#org/apache/batik/anim/dom/AnimationTarget/getElement()
org/apache/batik/bridge/SVGAnimationEngine/AnimatablePaintValueFactory/createAnimatableValue(org.apache.batik.anim.dom.AnimationTarget,java.lang.String,org.apache.batik.css.engine.value.Value)#org/apache/batik/bridge/SVGAnimationEngine$AnimatablePaintValueFactory/createColorPaintValue(org.apache.batik.anim.dom.AnimationTarget,java.awt.Color)
org/apache/batik/bridge/SVGAnimationEngine/AnimatablePaintValueFactory/createAnimatableValue(org.apache.batik.anim.dom.AnimationTarget,java.lang.String,org.apache.batik.css.engine.value.Value)#org/apache/batik/css/engine/value/Value/item(int)
org/apache/batik/bridge/SVGAnimationEngine/AnimatablePaintValueFactory/createAnimatableValue(org.apache.batik.anim.dom.AnimationTarget,java.lang.String,org.apache.batik.css.engine.value.Value)#org/apache/batik/anim/values/AnimatablePaintValue/createURINonePaintValue(org.apache.batik.anim.dom.AnimationTarget,java.lang.String)
org/apache/batik/bridge/SVGAnimationEngine/AnimatablePaintValueFactory/createAnimatableValue(org.apache.batik.anim.dom.AnimationTarget,java.lang.String,org.apache.batik.css.engine.value.Value)#org/apache/batik/anim/values/AnimatablePaintValue/createNonePaintValue(org.apache.batik.anim.dom.AnimationTarget)
org/apache/batik/bridge/SVGAnimationEngine/AnimatablePaintValueFactory/createAnimatableValue(org.apache.batik.anim.dom.AnimationTarget,java.lang.String,org.apache.batik.css.engine.value.Value)#org/apache/batik/css/engine/value/Value/getCssValueType()
org/apache/batik/bridge/BaseScriptingEnvironment/isDynamicElement(org.w3c.dom.Element,org.apache.batik.bridge.BridgeContext,java.util.List)#java/util/Iterator/hasNext()
org/apache/batik/bridge/BaseScriptingEnvironment/isDynamicElement(org.w3c.dom.Element,org.apache.batik.bridge.BridgeContext,java.util.List)#org/w3c/dom/Element/getFirstChild()
org/apache/batik/bridge/BaseScriptingEnvironment/isDynamicElement(org.w3c.dom.Element,org.apache.batik.bridge.BridgeContext,java.util.List)#java/lang/String/length()
org/apache/batik/bridge/BaseScriptingEnvironment/isDynamicElement(org.w3c.dom.Element,org.apache.batik.bridge.BridgeContext,java.util.List)#java/lang/String/equals(java.lang.Object)
org/apache/batik/bridge/BaseScriptingEnvironment/isDynamicElement(org.w3c.dom.Element,org.apache.batik.bridge.BridgeContext,java.util.List)#java/util/List/iterator()
org/apache/batik/bridge/BaseScriptingEnvironment/isDynamicElement(org.w3c.dom.Element,org.apache.batik.bridge.BridgeContext,java.util.List)#org/w3c/dom/Node/getNodeType()
org/apache/batik/bridge/BaseScriptingEnvironment/isDynamicElement(org.w3c.dom.Element,org.apache.batik.bridge.BridgeContext,java.util.List)#org/w3c/dom/Element/getAttributeNS(java.lang.String,java.lang.String)
org/apache/batik/bridge/BaseScriptingEnvironment/isDynamicElement(org.w3c.dom.Element,org.apache.batik.bridge.BridgeContext,java.util.List)#org/w3c/dom/Node/getNextSibling()
org/apache/batik/bridge/BaseScriptingEnvironment/isDynamicElement(org.w3c.dom.Element,org.apache.batik.bridge.BridgeContext,java.util.List)#java/util/Iterator/next()
org/apache/batik/bridge/BaseScriptingEnvironment/isDynamicElement(org.w3c.dom.Element,org.apache.batik.bridge.BridgeContext,java.util.List)#org/w3c/dom/Element/getNamespaceURI()
org/apache/batik/bridge/BaseScriptingEnvironment/dispatchSVGLoad(org.w3c.dom.Element,boolean,java.lang.String)#org/w3c/dom/Element/getOwnerDocument()
org/apache/batik/bridge/BaseScriptingEnvironment/dispatchSVGLoad(org.w3c.dom.Element,boolean,java.lang.String)#org/w3c/dom/events/DocumentEvent/createEvent(java.lang.String)
org/apache/batik/bridge/BaseScriptingEnvironment/dispatchSVGLoad(org.w3c.dom.Element,boolean,java.lang.String)#org/w3c/dom/svg/SVGDocument/getURL()
org/apache/batik/bridge/BaseScriptingEnvironment/dispatchSVGLoad(org.w3c.dom.Element,boolean,java.lang.String)#org/apache/batik/dom/events/NodeEventTarget/dispatchEvent(org.w3c.dom.events.Event)
org/apache/batik/bridge/BaseScriptingEnvironment/dispatchSVGLoad(org.w3c.dom.Element,boolean,java.lang.String)#org/w3c/dom/Element/getAttributeNS(java.lang.String,java.lang.String)
org/apache/batik/bridge/BaseScriptingEnvironment/dispatchSVGLoad(org.w3c.dom.Element,boolean,java.lang.String)#org/w3c/dom/Node/getNextSibling()
org/apache/batik/bridge/BaseScriptingEnvironment/dispatchSVGLoad(org.w3c.dom.Element,boolean,java.lang.String)#org/apache/batik/dom/events/AbstractEvent/initEventNS(java.lang.String,java.lang.String,boolean,boolean)
org/apache/batik/bridge/BaseScriptingEnvironment/dispatchSVGLoad(org.w3c.dom.Element,boolean,java.lang.String)#java/lang/Integer/Integer(int)
org/apache/batik/bridge/BaseScriptingEnvironment/dispatchSVGLoad(org.w3c.dom.Element,boolean,java.lang.String)#org/w3c/dom/Element/getFirstChild()
org/apache/batik/bridge/BaseScriptingEnvironment/dispatchSVGLoad(org.w3c.dom.Element,boolean,java.lang.String)#java/lang/String/length()
org/apache/batik/bridge/BaseScriptingEnvironment/dispatchSVGLoad(org.w3c.dom.Element,boolean,java.lang.String)#org/apache/batik/dom/events/NodeEventTarget/addEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean,java.lang.Object)
org/apache/batik/bridge/BaseScriptingEnvironment/dispatchSVGLoad(org.w3c.dom.Element,boolean,java.lang.String)#org/apache/batik/bridge/BaseScriptingEnvironment$1/1(org.apache.batik.bridge.BaseScriptingEnvironment,org.apache.batik.script.Interpreter,java.lang.String,java.lang.String)
org/apache/batik/bridge/BaseScriptingEnvironment/dispatchSVGLoad(org.w3c.dom.Element,boolean,java.lang.String)#org/apache/batik/dom/events/NodeEventTarget/removeEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean)
org/apache/batik/bridge/BaseScriptingEnvironment/dispatchSVGLoad(org.w3c.dom.Element,boolean,java.lang.String)#org/w3c/dom/Node/getNodeType()
org/apache/batik/bridge/BaseScriptingEnvironment/loadScript(org.apache.batik.dom.AbstractElement)#org/apache/batik/dom/util/XLinkSupport/getXLinkHref(org.w3c.dom.Element)
org/apache/batik/bridge/BaseScriptingEnvironment/loadScript(org.apache.batik.dom.AbstractElement)#java/lang/Class/newInstance()
org/apache/batik/bridge/BaseScriptingEnvironment/loadScript(org.apache.batik.dom.AbstractElement)#java/lang/Integer/Integer(int)
org/apache/batik/bridge/BaseScriptingEnvironment/loadScript(org.apache.batik.dom.AbstractElement)#org/apache/batik/bridge/DocumentJarClassLoader/findResource(java.lang.String)
org/apache/batik/bridge/BaseScriptingEnvironment/loadScript(org.apache.batik.dom.AbstractElement)#java/util/WeakHashMap/containsKey(java.lang.Object)
org/apache/batik/bridge/BaseScriptingEnvironment/loadScript(org.apache.batik.dom.AbstractElement)#java/io/PushbackInputStream/PushbackInputStream(java.io.InputStream,int)
org/apache/batik/bridge/BaseScriptingEnvironment/loadScript(org.apache.batik.dom.AbstractElement)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/batik/bridge/BaseScriptingEnvironment/loadScript(org.apache.batik.dom.AbstractElement)#org/w3c/dom/Node/getNodeValue()
org/apache/batik/bridge/BaseScriptingEnvironment/loadScript(org.apache.batik.dom.AbstractElement)#org/w3c/dom/Node/getNextSibling()
org/apache/batik/bridge/BaseScriptingEnvironment/loadScript(org.apache.batik.dom.AbstractElement)#org/apache/batik/dom/AbstractElement/getAttributeNS(java.lang.String,java.lang.String)
org/apache/batik/bridge/BaseScriptingEnvironment/loadScript(org.apache.batik.dom.AbstractElement)#java/net/URL/openStream()
org/apache/batik/bridge/BaseScriptingEnvironment/loadScript(org.apache.batik.dom.AbstractElement)#org/w3c/dom/Element/getOwnerDocument()
org/apache/batik/bridge/BaseScriptingEnvironment/loadScript(org.apache.batik.dom.AbstractElement)#java/util/jar/Manifest/Manifest(java.io.InputStream)
org/apache/batik/bridge/BaseScriptingEnvironment/loadScript(org.apache.batik.dom.AbstractElement)#java/lang/StringBuilder/append(java.lang.String)
org/apache/batik/bridge/BaseScriptingEnvironment/loadScript(org.apache.batik.dom.AbstractElement)#java/util/WeakHashMap/put(java.lang.Object,java.lang.Object)
org/apache/batik/bridge/BaseScriptingEnvironment/loadScript(org.apache.batik.dom.AbstractElement)#java/io/PrintStream/println(java.lang.String)
org/apache/batik/bridge/BaseScriptingEnvironment/loadScript(org.apache.batik.dom.AbstractElement)#java/io/PushbackInputStream/read(byte[])
org/apache/batik/bridge/BaseScriptingEnvironment/loadScript(org.apache.batik.dom.AbstractElement)#java/lang/String/length()
org/apache/batik/bridge/BaseScriptingEnvironment/loadScript(org.apache.batik.dom.AbstractElement)#org/apache/batik/dom/AbstractElement/getFirstChild()
org/apache/batik/bridge/BaseScriptingEnvironment/loadScript(org.apache.batik.dom.AbstractElement)#java/net/URL/URL(java.lang.String)
org/apache/batik/bridge/BaseScriptingEnvironment/loadScript(org.apache.batik.dom.AbstractElement)#org/apache/batik/util/ParsedURL/getContentTypeMediaType()
org/apache/batik/bridge/BaseScriptingEnvironment/loadScript(org.apache.batik.dom.AbstractElement)#org/apache/batik/dom/AbstractElement/getNodeName()
org/apache/batik/bridge/BaseScriptingEnvironment/loadScript(org.apache.batik.dom.AbstractElement)#org/w3c/dom/svg/EventListenerInitializer/initializeEventListeners(org.w3c.dom.svg.SVGDocument)
org/apache/batik/bridge/BaseScriptingEnvironment/loadScript(org.apache.batik.dom.AbstractElement)#org/w3c/dom/svg/SVGDocument/getURL()
org/apache/batik/bridge/BaseScriptingEnvironment/loadScript(org.apache.batik.dom.AbstractElement)#java/io/InputStreamReader/InputStreamReader(java.io.InputStream,java.lang.String)
org/apache/batik/bridge/BaseScriptingEnvironment/loadScript(org.apache.batik.dom.AbstractElement)#org/w3c/dom/Node/getParentNode()
org/apache/batik/bridge/BaseScriptingEnvironment/loadScript(org.apache.batik.dom.AbstractElement)#org/apache/batik/dom/AbstractElement/getBaseURI()
org/apache/batik/bridge/BaseScriptingEnvironment/loadScript(org.apache.batik.dom.AbstractElement)#java/io/StringReader/StringReader(java.lang.String)
org/apache/batik/bridge/BaseScriptingEnvironment/loadScript(org.apache.batik.dom.AbstractElement)#java/lang/String/equals(java.lang.Object)
org/apache/batik/bridge/BaseScriptingEnvironment/loadScript(org.apache.batik.dom.AbstractElement)#java/lang/StringBuffer/toString()
org/apache/batik/bridge/BaseScriptingEnvironment/loadScript(org.apache.batik.dom.AbstractElement)#java/util/jar/Manifest/getMainAttributes()
org/apache/batik/bridge/BaseScriptingEnvironment/loadScript(org.apache.batik.dom.AbstractElement)#java/lang/StringBuilder/StringBuilder()
org/apache/batik/bridge/BaseScriptingEnvironment/loadScript(org.apache.batik.dom.AbstractElement)#java/io/InputStreamReader/InputStreamReader(java.io.InputStream)
org/apache/batik/bridge/BaseScriptingEnvironment/loadScript(org.apache.batik.dom.AbstractElement)#org/apache/batik/util/ParsedURL/openStream()
org/apache/batik/bridge/BaseScriptingEnvironment/loadScript(org.apache.batik.dom.AbstractElement)#org/apache/batik/script/Interpreter/evaluate(java.io.Reader,java.lang.String)
org/apache/batik/bridge/BaseScriptingEnvironment/loadScript(org.apache.batik.dom.AbstractElement)#org/apache/batik/util/ParsedURL/toString()
org/apache/batik/bridge/BaseScriptingEnvironment/loadScript(org.apache.batik.dom.AbstractElement)#java/util/jar/Attributes/getValue(java.lang.String)
org/apache/batik/bridge/BaseScriptingEnvironment/loadScript(org.apache.batik.dom.AbstractElement)#org/apache/batik/util/ParsedURL/ParsedURL(java.lang.String,java.lang.String)
org/apache/batik/bridge/BaseScriptingEnvironment/loadScript(org.apache.batik.dom.AbstractElement)#org/apache/batik/util/ParsedURL/hasContentTypeParameter(java.lang.String)
org/apache/batik/bridge/BaseScriptingEnvironment/loadScript(org.apache.batik.dom.AbstractElement)#java/io/PushbackInputStream/unread(byte[],int,int)
org/apache/batik/bridge/BaseScriptingEnvironment/loadScript(org.apache.batik.dom.AbstractElement)#org/apache/batik/bridge/DocumentJarClassLoader/loadClass(java.lang.String)
org/apache/batik/bridge/BaseScriptingEnvironment/loadScript(org.apache.batik.dom.AbstractElement)#org/apache/batik/util/ParsedURL/getContentTypeCharset()
org/apache/batik/bridge/BaseScriptingEnvironment/loadScript(org.apache.batik.dom.AbstractElement)#java/lang/StringBuffer/append(java.lang.String)
org/apache/batik/bridge/BaseScriptingEnvironment/loadScript(org.apache.batik.dom.AbstractElement)#java/lang/StringBuffer/StringBuffer()
org/apache/batik/bridge/BaseScriptingEnvironment/loadScript(org.apache.batik.dom.AbstractElement)#java/lang/StringBuilder/toString()
org/apache/batik/bridge/BaseScriptingEnvironment/loadScript(org.apache.batik.dom.AbstractElement)#java/io/PushbackInputStream/skip(long)
org/apache/batik/bridge/BaseScriptingEnvironment/loadScript(org.apache.batik.dom.AbstractElement)#org/w3c/dom/Node/getNodeType()
org/apache/batik/bridge/SVGFeComponentTransferElementBridge/SVGFeFuncElementBridge/createComponentTransferFunction(org.w3c.dom.Element,org.w3c.dom.Element)#org/apache/batik/ext/awt/image/ConcreteComponentTransferFunction/getIdentityTransfer()
org/apache/batik/bridge/SVGFeComponentTransferElementBridge/SVGFeFuncElementBridge/createComponentTransferFunction(org.w3c.dom.Element,org.w3c.dom.Element)#java/lang/StringBuilder/append(java.lang.String)
org/apache/batik/bridge/SVGFeComponentTransferElementBridge/SVGFeFuncElementBridge/createComponentTransferFunction(org.w3c.dom.Element,org.w3c.dom.Element)#org/apache/batik/ext/awt/image/ConcreteComponentTransferFunction/getDiscreteTransfer(float[])
org/apache/batik/bridge/SVGFeComponentTransferElementBridge/SVGFeFuncElementBridge/createComponentTransferFunction(org.w3c.dom.Element,org.w3c.dom.Element)#java/lang/StringBuilder/append(int)
org/apache/batik/bridge/SVGFeComponentTransferElementBridge/SVGFeFuncElementBridge/createComponentTransferFunction(org.w3c.dom.Element,org.w3c.dom.Element)#java/lang/Error/Error(java.lang.String)
org/apache/batik/bridge/SVGFeComponentTransferElementBridge/SVGFeFuncElementBridge/createComponentTransferFunction(org.w3c.dom.Element,org.w3c.dom.Element)#org/apache/batik/ext/awt/image/ConcreteComponentTransferFunction/getLinearTransfer(float,float)
org/apache/batik/bridge/SVGFeComponentTransferElementBridge/SVGFeFuncElementBridge/createComponentTransferFunction(org.w3c.dom.Element,org.w3c.dom.Element)#org/apache/batik/bridge/SVGFeComponentTransferElementBridge$SVGFeFuncElementBridge/convertType(org.w3c.dom.Element,org.apache.batik.bridge.BridgeContext)
org/apache/batik/bridge/SVGFeComponentTransferElementBridge/SVGFeFuncElementBridge/createComponentTransferFunction(org.w3c.dom.Element,org.w3c.dom.Element)#org/apache/batik/bridge/SVGFeComponentTransferElementBridge$SVGFeFuncElementBridge/convertTableValues(org.w3c.dom.Element,org.apache.batik.bridge.BridgeContext)
org/apache/batik/bridge/SVGFeComponentTransferElementBridge/SVGFeFuncElementBridge/createComponentTransferFunction(org.w3c.dom.Element,org.w3c.dom.Element)#org/apache/batik/ext/awt/image/ConcreteComponentTransferFunction/getGammaTransfer(float,float,float)
org/apache/batik/bridge/SVGFeComponentTransferElementBridge/SVGFeFuncElementBridge/createComponentTransferFunction(org.w3c.dom.Element,org.w3c.dom.Element)#java/lang/StringBuilder/toString()
org/apache/batik/bridge/SVGFeComponentTransferElementBridge/SVGFeFuncElementBridge/createComponentTransferFunction(org.w3c.dom.Element,org.w3c.dom.Element)#java/lang/StringBuilder/StringBuilder()
org/apache/batik/bridge/SVGFeComponentTransferElementBridge/SVGFeFuncElementBridge/createComponentTransferFunction(org.w3c.dom.Element,org.w3c.dom.Element)#org/apache/batik/ext/awt/image/ConcreteComponentTransferFunction/getTableTransfer(float[])
org/apache/batik/bridge/SVGTextPathElementBridge/createTextPath(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)#org/apache/batik/parser/AWTPathProducer/getShape()
org/apache/batik/bridge/SVGTextPathElementBridge/createTextPath(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)#org/apache/batik/dom/util/XLinkSupport/getXLinkHref(org.w3c.dom.Element)
org/apache/batik/bridge/SVGTextPathElementBridge/createTextPath(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)#org/apache/batik/gvt/text/TextPath/setStartOffset(float)
org/apache/batik/bridge/SVGTextPathElementBridge/createTextPath(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)#org/apache/batik/gvt/text/TextPath/lengthOfPath()
org/apache/batik/bridge/SVGTextPathElementBridge/createTextPath(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)#java/lang/String/equals(java.lang.Object)
org/apache/batik/bridge/SVGTextPathElementBridge/createTextPath(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)#java/lang/String/substring(int,int)
org/apache/batik/bridge/SVGTextPathElementBridge/createTextPath(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)#java/awt/geom/GeneralPath/GeneralPath(java.awt.Shape)
org/apache/batik/bridge/SVGTextPathElementBridge/createTextPath(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)#org/apache/batik/gvt/text/TextPath/TextPath(java.awt.geom.GeneralPath)
org/apache/batik/bridge/SVGTextPathElementBridge/createTextPath(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)#org/apache/batik/parser/AWTPathProducer/AWTPathProducer()
org/apache/batik/bridge/SVGTextPathElementBridge/createTextPath(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)#org/w3c/dom/Element/getAttributeNS(java.lang.String,java.lang.String)
org/apache/batik/bridge/SVGTextPathElementBridge/createTextPath(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)#java/lang/String/length()
org/apache/batik/bridge/SVGTextPathElementBridge/createTextPath(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)#org/w3c/dom/Element/getLocalName()
org/apache/batik/bridge/SVGTextPathElementBridge/createTextPath(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)#org/apache/batik/parser/AWTPathProducer/setWindingRule(int)
org/apache/batik/bridge/SVGTextPathElementBridge/createTextPath(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)#org/apache/batik/parser/PathParser/PathParser()
org/apache/batik/bridge/SVGTextPathElementBridge/createTextPath(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)#org/w3c/dom/Element/getNamespaceURI()
org/apache/batik/bridge/SVGTextPathElementBridge/createTextPath(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)#org/apache/batik/parser/PathParser/setPathHandler(org.apache.batik.parser.PathHandler)
org/apache/batik/bridge/SVGTextPathElementBridge/createTextPath(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)#java/awt/geom/AffineTransform/createTransformedShape(java.awt.Shape)
org/apache/batik/bridge/SVGTextPathElementBridge/createTextPath(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)#java/lang/String/indexOf(int)
org/apache/batik/bridge/SVGTextPathElementBridge/createTextPath(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)#org/apache/batik/parser/PathParser/parse(java.lang.String)
org/apache/batik/bridge/SVGGlyphElementBridge/createGlyph(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,int,float,org.apache.batik.gvt.font.GVTFontFace,org.apache.batik.gvt.text.TextPaintInfo)#java/awt/geom/AffineTransform/getScaleInstance(double,double)
org/apache/batik/bridge/SVGGlyphElementBridge/createGlyph(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,int,float,org.apache.batik.gvt.font.GVTFontFace,org.apache.batik.gvt.text.TextPaintInfo)#org/apache/batik/parser/AWTPathProducer/getShape()
org/apache/batik/bridge/SVGGlyphElementBridge/createGlyph(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,int,float,org.apache.batik.gvt.font.GVTFontFace,org.apache.batik.gvt.text.TextPaintInfo)#org/apache/batik/gvt/font/GVTFontFace/getAscent()
org/apache/batik/bridge/SVGGlyphElementBridge/createGlyph(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,int,float,org.apache.batik.gvt.font.GVTFontFace,org.apache.batik.gvt.text.TextPaintInfo)#org/apache/batik/parser/AWTPathProducer/setWindingRule(int)
org/apache/batik/bridge/SVGGlyphElementBridge/createGlyph(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,int,float,org.apache.batik.gvt.font.GVTFontFace,org.apache.batik.gvt.text.TextPaintInfo)#org/apache/batik/parser/PathParser/PathParser()
org/apache/batik/bridge/SVGGlyphElementBridge/createGlyph(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,int,float,org.apache.batik.gvt.font.GVTFontFace,org.apache.batik.gvt.text.TextPaintInfo)#java/awt/geom/Point2D$Float/Float(float,float)
org/apache/batik/bridge/SVGGlyphElementBridge/createGlyph(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,int,float,org.apache.batik.gvt.font.GVTFontFace,org.apache.batik.gvt.text.TextPaintInfo)#org/w3c/dom/Element/getChildNodes()
org/apache/batik/bridge/SVGGlyphElementBridge/createGlyph(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,int,float,org.apache.batik.gvt.font.GVTFontFace,org.apache.batik.gvt.text.TextPaintInfo)#org/apache/batik/gvt/CompositeGraphicsNode/add(java.lang.Object)
org/apache/batik/bridge/SVGGlyphElementBridge/createGlyph(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,int,float,org.apache.batik.gvt.font.GVTFontFace,org.apache.batik.gvt.text.TextPaintInfo)#java/util/List/add(java.lang.Object)
org/apache/batik/bridge/SVGGlyphElementBridge/createGlyph(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,int,float,org.apache.batik.gvt.font.GVTFontFace,org.apache.batik.gvt.text.TextPaintInfo)#java/lang/Float/toString(float)
org/apache/batik/bridge/SVGGlyphElementBridge/createGlyph(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,int,float,org.apache.batik.gvt.font.GVTFontFace,org.apache.batik.gvt.text.TextPaintInfo)#org/w3c/dom/Element/getAttributeNS(java.lang.String,java.lang.String)
org/apache/batik/bridge/SVGGlyphElementBridge/createGlyph(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,int,float,org.apache.batik.gvt.font.GVTFontFace,org.apache.batik.gvt.text.TextPaintInfo)#org/apache/batik/gvt/CompositeGraphicsNode/CompositeGraphicsNode()
org/apache/batik/bridge/SVGGlyphElementBridge/createGlyph(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,int,float,org.apache.batik.gvt.font.GVTFontFace,org.apache.batik.gvt.text.TextPaintInfo)#java/util/ArrayList/ArrayList()
org/apache/batik/bridge/SVGGlyphElementBridge/createGlyph(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,int,float,org.apache.batik.gvt.font.GVTFontFace,org.apache.batik.gvt.text.TextPaintInfo)#org/apache/batik/gvt/font/GVTFontFace/getUnitsPerEm()
org/apache/batik/bridge/SVGGlyphElementBridge/createGlyph(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,int,float,org.apache.batik.gvt.font.GVTFontFace,org.apache.batik.gvt.text.TextPaintInfo)#org/w3c/dom/Element/removeChild(org.w3c.dom.Node)
org/apache/batik/bridge/SVGGlyphElementBridge/createGlyph(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,int,float,org.apache.batik.gvt.font.GVTFontFace,org.apache.batik.gvt.text.TextPaintInfo)#org/w3c/dom/NodeList/getLength()
org/apache/batik/bridge/SVGGlyphElementBridge/createGlyph(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,int,float,org.apache.batik.gvt.font.GVTFontFace,org.apache.batik.gvt.text.TextPaintInfo)#org/w3c/dom/NamedNodeMap/getLength()
org/apache/batik/bridge/SVGGlyphElementBridge/createGlyph(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,int,float,org.apache.batik.gvt.font.GVTFontFace,org.apache.batik.gvt.text.TextPaintInfo)#java/util/StringTokenizer/StringTokenizer(java.lang.String,java.lang.String)
org/apache/batik/bridge/SVGGlyphElementBridge/createGlyph(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,int,float,org.apache.batik.gvt.font.GVTFontFace,org.apache.batik.gvt.text.TextPaintInfo)#org/w3c/dom/Element/getParentNode()
org/apache/batik/bridge/SVGGlyphElementBridge/createGlyph(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,int,float,org.apache.batik.gvt.font.GVTFontFace,org.apache.batik.gvt.text.TextPaintInfo)#java/lang/String/length()
org/apache/batik/bridge/SVGGlyphElementBridge/createGlyph(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,int,float,org.apache.batik.gvt.font.GVTFontFace,org.apache.batik.gvt.text.TextPaintInfo)#org/w3c/dom/Element/appendChild(org.w3c.dom.Node)
org/apache/batik/bridge/SVGGlyphElementBridge/createGlyph(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,int,float,org.apache.batik.gvt.font.GVTFontFace,org.apache.batik.gvt.text.TextPaintInfo)#org/w3c/dom/Node/cloneNode(boolean)
org/apache/batik/bridge/SVGGlyphElementBridge/createGlyph(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,int,float,org.apache.batik.gvt.font.GVTFontFace,org.apache.batik.gvt.text.TextPaintInfo)#java/lang/String/valueOf(float)
org/apache/batik/bridge/SVGGlyphElementBridge/createGlyph(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,int,float,org.apache.batik.gvt.font.GVTFontFace,org.apache.batik.gvt.text.TextPaintInfo)#org/apache/batik/gvt/CompositeGraphicsNode/setTransform(java.awt.geom.AffineTransform)
org/apache/batik/bridge/SVGGlyphElementBridge/createGlyph(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,int,float,org.apache.batik.gvt.font.GVTFontFace,org.apache.batik.gvt.text.TextPaintInfo)#org/w3c/dom/Element/cloneNode(boolean)
org/apache/batik/bridge/SVGGlyphElementBridge/createGlyph(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,int,float,org.apache.batik.gvt.font.GVTFontFace,org.apache.batik.gvt.text.TextPaintInfo)#java/util/StringTokenizer/nextToken()
org/apache/batik/bridge/SVGGlyphElementBridge/createGlyph(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,int,float,org.apache.batik.gvt.font.GVTFontFace,org.apache.batik.gvt.text.TextPaintInfo)#org/w3c/dom/NodeList/item(int)
org/apache/batik/bridge/SVGGlyphElementBridge/createGlyph(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,int,float,org.apache.batik.gvt.font.GVTFontFace,org.apache.batik.gvt.text.TextPaintInfo)#org/w3c/dom/Node/getAttributes()
org/apache/batik/bridge/SVGGlyphElementBridge/createGlyph(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,int,float,org.apache.batik.gvt.font.GVTFontFace,org.apache.batik.gvt.text.TextPaintInfo)#org/w3c/dom/NamedNodeMap/item(int)
org/apache/batik/bridge/SVGGlyphElementBridge/createGlyph(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,int,float,org.apache.batik.gvt.font.GVTFontFace,org.apache.batik.gvt.text.TextPaintInfo)#org/apache/batik/parser/PathParser/setPathHandler(org.apache.batik.parser.PathHandler)
org/apache/batik/bridge/SVGGlyphElementBridge/createGlyph(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,int,float,org.apache.batik.gvt.font.GVTFontFace,org.apache.batik.gvt.text.TextPaintInfo)#org/w3c/dom/Element/setAttributeNode(org.w3c.dom.Attr)
org/apache/batik/bridge/SVGGlyphElementBridge/createGlyph(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,int,float,org.apache.batik.gvt.font.GVTFontFace,org.apache.batik.gvt.text.TextPaintInfo)#org/apache/batik/parser/AWTPathProducer/AWTPathProducer()
org/apache/batik/bridge/SVGGlyphElementBridge/createGlyph(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,int,float,org.apache.batik.gvt.font.GVTFontFace,org.apache.batik.gvt.text.TextPaintInfo)#java/util/StringTokenizer/hasMoreTokens()
org/apache/batik/bridge/SVGGlyphElementBridge/createGlyph(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,int,float,org.apache.batik.gvt.font.GVTFontFace,org.apache.batik.gvt.text.TextPaintInfo)#java/awt/geom/AffineTransform/createTransformedShape(java.awt.Shape)
org/apache/batik/bridge/SVGGlyphElementBridge/createGlyph(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,int,float,org.apache.batik.gvt.font.GVTFontFace,org.apache.batik.gvt.text.TextPaintInfo)#org/apache/batik/gvt/font/Glyph/Glyph(java.lang.String,java.util.List,java.lang.String,java.lang.String,java.lang.String,java.awt.geom.Point2D,java.awt.geom.Point2D,float,float,int,org.apache.batik.gvt.text.TextPaintInfo,java.awt.Shape,org.apache.batik.gvt.GraphicsNode)
org/apache/batik/bridge/SVGGlyphElementBridge/createGlyph(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,int,float,org.apache.batik.gvt.font.GVTFontFace,org.apache.batik.gvt.text.TextPaintInfo)#org/w3c/dom/Node/getNodeType()
org/apache/batik/bridge/SVGGlyphElementBridge/createGlyph(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,int,float,org.apache.batik.gvt.font.GVTFontFace,org.apache.batik.gvt.text.TextPaintInfo)#org/apache/batik/parser/PathParser/parse(java.lang.String)
org/apache/batik/bridge/SVGFeTurbulenceElementBridge/createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)#org/apache/batik/ext/awt/image/renderable/TurbulenceRable/setStitched(boolean)
org/apache/batik/bridge/SVGFeTurbulenceElementBridge/createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)#org/apache/batik/ext/awt/image/renderable/TurbulenceRable/setBaseFrequencyY(double)
org/apache/batik/bridge/SVGFeTurbulenceElementBridge/createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)#org/apache/batik/ext/awt/image/renderable/TurbulenceRable/setFractalNoise(boolean)
org/apache/batik/bridge/SVGFeTurbulenceElementBridge/createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)#org/apache/batik/ext/awt/image/renderable/TurbulenceRable/setNumOctaves(int)
org/apache/batik/bridge/SVGFeTurbulenceElementBridge/createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)#org/apache/batik/ext/awt/image/renderable/TurbulenceRable/setSeed(int)
org/apache/batik/bridge/SVGFeTurbulenceElementBridge/createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)#org/apache/batik/bridge/SVGFeTurbulenceElementBridge/getIn(org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.util.Map,org.apache.batik.bridge.BridgeContext)
org/apache/batik/bridge/SVGFeTurbulenceElementBridge/createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)#org/apache/batik/ext/awt/image/renderable/TurbulenceRable/setBaseFrequencyX(double)
org/apache/batik/bridge/SVGFeTurbulenceElementBridge/createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)#org/apache/batik/bridge/SVGFeTurbulenceElementBridge/updateFilterMap(org.w3c.dom.Element,org.apache.batik.ext.awt.image.renderable.Filter,java.util.Map)
org/apache/batik/bridge/SVGFeTurbulenceElementBridge/createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)#org/apache/batik/ext/awt/image/renderable/TurbulenceRable8Bit/TurbulenceRable8Bit(java.awt.geom.Rectangle2D)
org/apache/batik/bridge/SVGFeTurbulenceElementBridge/createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)#org/apache/batik/bridge/SVGFeTurbulenceElementBridge/handleColorInterpolationFilters(org.apache.batik.ext.awt.image.renderable.Filter,org.w3c.dom.Element)
org/apache/batik/bridge/SVGFeTurbulenceElementBridge/createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)#org/apache/batik/bridge/SVGFeTurbulenceElementBridge/convertInteger(org.w3c.dom.Element,java.lang.String,int,org.apache.batik.bridge.BridgeContext)
org/apache/batik/bridge/SVGGVTFont/createGlyphVector(java.awt.font.FontRenderContext,java.text.CharacterIterator)#java/text/CharacterIterator/setIndex(int)
org/apache/batik/bridge/SVGGVTFont/createGlyphVector(java.awt.font.FontRenderContext,java.text.CharacterIterator)#java/util/ArrayList/ArrayList()
org/apache/batik/bridge/SVGGVTFont/createGlyphVector(java.awt.font.FontRenderContext,java.text.CharacterIterator)#java/text/CharacterIterator/getIndex()
org/apache/batik/bridge/SVGGVTFont/createGlyphVector(java.awt.font.FontRenderContext,java.text.CharacterIterator)#java/lang/String/charAt(int)
org/apache/batik/bridge/SVGGVTFont/createGlyphVector(java.awt.font.FontRenderContext,java.text.CharacterIterator)#java/lang/String/length()
org/apache/batik/bridge/SVGGVTFont/createGlyphVector(java.awt.font.FontRenderContext,java.text.CharacterIterator)#java/util/List/size()
org/apache/batik/bridge/SVGGVTFont/createGlyphVector(java.awt.font.FontRenderContext,java.text.CharacterIterator)#java/util/List/toArray(java.lang.Object[])
org/apache/batik/bridge/SVGGVTFont/createGlyphVector(java.awt.font.FontRenderContext,java.text.CharacterIterator)#java/util/List/add(java.lang.Object)
org/apache/batik/bridge/SVGGVTFont/createGlyphVector(java.awt.font.FontRenderContext,java.text.CharacterIterator)#java/text/AttributedCharacterIterator/setIndex(int)
org/apache/batik/bridge/SVGGVTFont/createGlyphVector(java.awt.font.FontRenderContext,java.text.CharacterIterator)#java/text/CharacterIterator/next()
org/apache/batik/bridge/SVGGVTFont/createGlyphVector(java.awt.font.FontRenderContext,java.text.CharacterIterator)#java/lang/String/indexOf(int)
org/apache/batik/bridge/SVGGVTFont/createGlyphVector(java.awt.font.FontRenderContext,java.text.CharacterIterator)#org/apache/batik/gvt/font/SVGGVTGlyphVector/SVGGVTGlyphVector(org.apache.batik.gvt.font.GVTFont,org.apache.batik.gvt.font.Glyph[],java.awt.font.FontRenderContext)
org/apache/batik/bridge/SVGGVTFont/createGlyphVector(java.awt.font.FontRenderContext,java.text.CharacterIterator)#java/text/CharacterIterator/first()
org/apache/batik/bridge/SVGGVTFont/createGlyphVector(java.awt.font.FontRenderContext,java.text.CharacterIterator)#java/text/AttributedCharacterIterator/getAttribute(java.text.AttributedCharacterIterator$Attribute)
org/apache/batik/bridge/SVGGVTFont/getLineMetrics(int,int)#org/apache/batik/gvt/font/GVTFontFace/getUnitsPerEm()
org/apache/batik/bridge/SVGGVTFont/getLineMetrics(int,int)#org/apache/batik/gvt/font/GVTFontFace/getDescent()
org/apache/batik/bridge/SVGGVTFont/getLineMetrics(int,int)#org/apache/batik/gvt/font/GVTFontFace/getStrikethroughThickness()
org/apache/batik/bridge/SVGGVTFont/getLineMetrics(int,int)#org/apache/batik/gvt/font/GVTFontFace/getUnderlineThickness()
org/apache/batik/bridge/SVGGVTFont/getLineMetrics(int,int)#org/apache/batik/gvt/font/GVTFontFace/getOverlineThickness()
org/apache/batik/bridge/SVGGVTFont/getLineMetrics(int,int)#org/apache/batik/gvt/font/GVTFontFace/getOverlinePosition()
org/apache/batik/bridge/SVGGVTFont/getLineMetrics(int,int)#org/apache/batik/gvt/font/GVTFontFace/getUnderlinePosition()
org/apache/batik/bridge/SVGGVTFont/getLineMetrics(int,int)#org/apache/batik/gvt/font/GVTLineMetrics/GVTLineMetrics(float,int,float[],float,float,float,int,float,float,float,float,float,float)
org/apache/batik/bridge/SVGGVTFont/getLineMetrics(int,int)#org/apache/batik/gvt/font/GVTFontFace/getAscent()
org/apache/batik/bridge/SVGGVTFont/getLineMetrics(int,int)#org/apache/batik/gvt/font/GVTFontFace/getStrikethroughPosition()
org/apache/batik/bridge/ConcreteTextSelector/report(org.apache.batik.gvt.event.GraphicsNodeEvent,java.lang.String)#java/lang/String/String(char[])
org/apache/batik/bridge/ConcreteTextSelector/report(org.apache.batik.gvt.event.GraphicsNodeEvent,java.lang.String)#org/apache/batik/gvt/event/GraphicsNodeEvent/getGraphicsNode()
org/apache/batik/bridge/ConcreteTextSelector/report(org.apache.batik.gvt.event.GraphicsNodeEvent,java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/apache/batik/bridge/ConcreteTextSelector/report(org.apache.batik.gvt.event.GraphicsNodeEvent,java.lang.String)#java/text/CharacterIterator/next()
org/apache/batik/bridge/ConcreteTextSelector/report(org.apache.batik.gvt.event.GraphicsNodeEvent,java.lang.String)#java/text/CharacterIterator/getEndIndex()
org/apache/batik/bridge/ConcreteTextSelector/report(org.apache.batik.gvt.event.GraphicsNodeEvent,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/apache/batik/bridge/ConcreteTextSelector/report(org.apache.batik.gvt.event.GraphicsNodeEvent,java.lang.String)#java/io/PrintStream/println(java.lang.String)
org/apache/batik/bridge/ConcreteTextSelector/report(org.apache.batik.gvt.event.GraphicsNodeEvent,java.lang.String)#java/lang/StringBuilder/toString()
org/apache/batik/bridge/ConcreteTextSelector/report(org.apache.batik.gvt.event.GraphicsNodeEvent,java.lang.String)#java/text/CharacterIterator/first()
org/apache/batik/bridge/ConcreteTextSelector/checkSelectGesture(org.apache.batik.gvt.event.GraphicsNodeEvent)#org/apache/batik/gvt/event/GraphicsNodeMouseEvent/getPoint2D()
org/apache/batik/bridge/ConcreteTextSelector/checkSelectGesture(org.apache.batik.gvt.event.GraphicsNodeEvent)#org/apache/batik/gvt/RootGraphicsNode/addTreeGraphicsNodeChangeListener(org.apache.batik.gvt.event.GraphicsNodeChangeListener)
org/apache/batik/bridge/ConcreteTextSelector/checkSelectGesture(org.apache.batik.gvt.event.GraphicsNodeEvent)#org/apache/batik/gvt/Selectable/selectTo(double,double)
org/apache/batik/bridge/ConcreteTextSelector/checkSelectGesture(org.apache.batik.gvt.event.GraphicsNodeEvent)#org/apache/batik/gvt/GraphicsNode/getRoot()
org/apache/batik/bridge/ConcreteTextSelector/checkSelectGesture(org.apache.batik.gvt.event.GraphicsNodeEvent)#org/apache/batik/gvt/event/GraphicsNodeEvent/getGraphicsNode()
org/apache/batik/bridge/ConcreteTextSelector/checkSelectGesture(org.apache.batik.gvt.event.GraphicsNodeEvent)#org/apache/batik/gvt/Selectable/selectAt(double,double)
org/apache/batik/bridge/ConcreteTextSelector/checkSelectGesture(org.apache.batik.gvt.event.GraphicsNodeEvent)#org/apache/batik/gvt/Selectable/selectAll(double,double)
org/apache/batik/bridge/ConcreteTextSelector/checkSelectGesture(org.apache.batik.gvt.event.GraphicsNodeEvent)#java/awt/geom/Point2D/getY()
org/apache/batik/bridge/ConcreteTextSelector/checkSelectGesture(org.apache.batik.gvt.event.GraphicsNodeEvent)#org/apache/batik/gvt/RootGraphicsNode/removeTreeGraphicsNodeChangeListener(org.apache.batik.gvt.event.GraphicsNodeChangeListener)
org/apache/batik/bridge/ConcreteTextSelector/checkSelectGesture(org.apache.batik.gvt.event.GraphicsNodeEvent)#org/apache/batik/gvt/event/SelectionEvent/SelectionEvent(java.lang.Object,int,java.awt.Shape)
org/apache/batik/bridge/ConcreteTextSelector/checkSelectGesture(org.apache.batik.gvt.event.GraphicsNodeEvent)#java/awt/geom/Point2D/getX()
org/apache/batik/bridge/ConcreteTextSelector/checkSelectGesture(org.apache.batik.gvt.event.GraphicsNodeEvent)#org/apache/batik/gvt/Selectable/getHighlightShape()
org/apache/batik/bridge/SVGAnimationEngine/AnimationTickRunnable/run()#java/lang/Thread/sleep(long)
org/apache/batik/bridge/SVGAnimationEngine/AnimationTickRunnable/run()#org/apache/batik/bridge/SVGAnimationEngine$AnimationTickRunnable/getAnimationEngine()
org/apache/batik/bridge/SVGAnimationEngine/AnimationTickRunnable/run()#java/util/Calendar/setTime(java.util.Date)
org/apache/batik/bridge/SVGAnimationEngine/AnimationTickRunnable/run()#java/lang/Exception/printStackTrace()
org/apache/batik/bridge/SVGAnimationEngine/AnimationTickRunnable/run()#org/apache/batik/anim/timing/TimedElement/getElement()
org/apache/batik/bridge/SVGAnimationEngine/AnimationTickRunnable/run()#java/lang/System/currentTimeMillis()
org/apache/batik/bridge/SVGAnimationEngine/AnimationTickRunnable/run()#org/apache/batik/anim/AnimationException/getMessage()
org/apache/batik/bridge/SVGAnimationEngine/AnimationTickRunnable/run()#org/apache/batik/anim/timing/TimedDocumentRoot/convertWallclockTime(java.util.Calendar)
org/apache/batik/bridge/SVGAnimationEngine/AnimationTickRunnable/run()#org/apache/batik/anim/AnimationException/getElement()
org/apache/batik/bridge/SVGAnimationEngine/AnimationTickRunnable/run()#java/util/Date/Date(long)
org/apache/batik/bridge/SVGFontElementBridge/createFont(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,float,org.apache.batik.gvt.font.GVTFontFace)#org/w3c/dom/Element/getAttributeNS(java.lang.String,java.lang.String)
org/apache/batik/bridge/SVGFontElementBridge/createFont(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,float,org.apache.batik.gvt.font.GVTFontFace)#java/lang/String/charAt(int)
org/apache/batik/bridge/SVGFontElementBridge/createFont(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,float,org.apache.batik.gvt.font.GVTFontFace)#java/lang/String/length()
org/apache/batik/bridge/SVGFontElementBridge/createFont(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,float,org.apache.batik.gvt.font.GVTFontFace)#org/apache/batik/gvt/text/ArabicTextHandler/arabicChar(char)
org/apache/batik/bridge/SVGFontElementBridge/createFont(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,float,org.apache.batik.gvt.font.GVTFontFace)#org/w3c/dom/NodeList/getLength()
org/apache/batik/bridge/SVGFontElementBridge/createFont(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,float,org.apache.batik.gvt.font.GVTFontFace)#org/w3c/dom/Element/getElementsByTagNameNS(java.lang.String,java.lang.String)
org/apache/batik/bridge/SVGFontElementBridge/createFont(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,float,org.apache.batik.gvt.font.GVTFontFace)#java/lang/StringBuffer/reverse()
org/apache/batik/bridge/SVGFontElementBridge/createFont(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,float,org.apache.batik.gvt.font.GVTFontFace)#java/lang/StringBuffer/toString()
org/apache/batik/bridge/SVGFontElementBridge/createFont(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,float,org.apache.batik.gvt.font.GVTFontFace)#java/lang/StringBuffer/StringBuffer(java.lang.String)
org/apache/batik/bridge/SVGFontElementBridge/createFont(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,float,org.apache.batik.gvt.font.GVTFontFace)#org/w3c/dom/NodeList/item(int)
org/apache/batik/bridge/SVGFeComponentTransferElementBridge/createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)#org/apache/batik/ext/awt/image/renderable/PadRable8Bit/PadRable8Bit(org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,org.apache.batik.ext.awt.image.PadMode)
org/apache/batik/bridge/SVGFeComponentTransferElementBridge/createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)#org/apache/batik/bridge/SVGFeComponentTransferElementBridge/updateFilterMap(org.w3c.dom.Element,org.apache.batik.ext.awt.image.renderable.Filter,java.util.Map)
org/apache/batik/bridge/SVGFeComponentTransferElementBridge/createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)#org/apache/batik/ext/awt/image/renderable/Filter/getBounds2D()
org/apache/batik/bridge/SVGFeComponentTransferElementBridge/createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)#org/w3c/dom/Node/getNodeType()
org/apache/batik/bridge/SVGFeComponentTransferElementBridge/createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)#org/w3c/dom/Node/getNextSibling()
org/apache/batik/bridge/SVGFeComponentTransferElementBridge/createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)#org/apache/batik/bridge/SVGFeComponentTransferElementBridge/getIn(org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.util.Map,org.apache.batik.bridge.BridgeContext)
org/apache/batik/bridge/SVGFeComponentTransferElementBridge/createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)#org/apache/batik/bridge/SVGFeComponentTransferElementBridge$SVGFeFuncElementBridge/createComponentTransferFunction(org.w3c.dom.Element,org.w3c.dom.Element)
org/apache/batik/bridge/SVGFeComponentTransferElementBridge/createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)#org/w3c/dom/Element/getFirstChild()
org/apache/batik/bridge/SVGFeComponentTransferElementBridge/createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)#org/apache/batik/ext/awt/image/renderable/ComponentTransferRable8Bit/ComponentTransferRable8Bit(org.apache.batik.ext.awt.image.renderable.Filter,org.apache.batik.ext.awt.image.ComponentTransferFunction,org.apache.batik.ext.awt.image.ComponentTransferFunction,org.apache.batik.ext.awt.image.ComponentTransferFunction,org.apache.batik.ext.awt.image.ComponentTransferFunction)
org/apache/batik/bridge/SVGFeComponentTransferElementBridge/createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)#org/apache/batik/bridge/SVGFeComponentTransferElementBridge/handleColorInterpolationFilters(org.apache.batik.ext.awt.image.renderable.Filter,org.w3c.dom.Element)
org/apache/batik/bridge/SVGBridgeExtension/registerTags(org.apache.batik.bridge.BridgeContext)#org/apache/batik/bridge/AbstractSVGLightingElementBridge$SVGFeSpotLightElementBridge/SVGFeSpotLightElementBridge()
org/apache/batik/bridge/SVGBridgeExtension/registerTags(org.apache.batik.bridge.BridgeContext)#org/apache/batik/bridge/AbstractSVGGradientElementBridge$SVGStopElementBridge/SVGStopElementBridge()
org/apache/batik/bridge/SVGBridgeExtension/registerTags(org.apache.batik.bridge.BridgeContext)#org/apache/batik/bridge/SVGFeComponentTransferElementBridge$SVGFeFuncGElementBridge/SVGFeFuncGElementBridge()
org/apache/batik/bridge/SVGBridgeExtension/registerTags(org.apache.batik.bridge.BridgeContext)#org/apache/batik/bridge/SVGFeMergeElementBridge$SVGFeMergeNodeElementBridge/SVGFeMergeNodeElementBridge()
org/apache/batik/bridge/SVGBridgeExtension/registerTags(org.apache.batik.bridge.BridgeContext)#org/apache/batik/bridge/SVGFeComponentTransferElementBridge$SVGFeFuncRElementBridge/SVGFeFuncRElementBridge()
org/apache/batik/bridge/SVGBridgeExtension/registerTags(org.apache.batik.bridge.BridgeContext)#org/apache/batik/bridge/SVGFeComponentTransferElementBridge$SVGFeFuncBElementBridge/SVGFeFuncBElementBridge()
org/apache/batik/bridge/SVGBridgeExtension/registerTags(org.apache.batik.bridge.BridgeContext)#org/apache/batik/bridge/SVGFeComponentTransferElementBridge$SVGFeFuncAElementBridge/SVGFeFuncAElementBridge()
org/apache/batik/bridge/SVGBridgeExtension/registerTags(org.apache.batik.bridge.BridgeContext)#org/apache/batik/bridge/AbstractSVGLightingElementBridge$SVGFePointLightElementBridge/SVGFePointLightElementBridge()
org/apache/batik/bridge/SVGBridgeExtension/registerTags(org.apache.batik.bridge.BridgeContext)#org/apache/batik/bridge/AbstractSVGLightingElementBridge$SVGFeDistantLightElementBridge/SVGFeDistantLightElementBridge()
org/apache/batik/bridge/svg12/XPathSubsetContentSelector/Scanner/nextToken()#org/apache/batik/bridge/svg12/XPathSubsetContentSelector$Scanner/string1()
org/apache/batik/bridge/svg12/XPathSubsetContentSelector/Scanner/nextToken()#org/apache/batik/parser/ParseException/ParseException(java.lang.String,int,int)
org/apache/batik/bridge/svg12/XPathSubsetContentSelector/Scanner/nextToken()#org/apache/batik/bridge/svg12/XPathSubsetContentSelector$Scanner/nextToken()
org/apache/batik/bridge/svg12/XPathSubsetContentSelector/Scanner/nextToken()#org/apache/batik/parser/ParseException/ParseException(java.lang.Exception)
org/apache/batik/bridge/svg12/XPathSubsetContentSelector/Scanner/nextToken()#org/apache/batik/xml/XMLUtilities/isXMLNameCharacter(char)
org/apache/batik/bridge/svg12/XPathSubsetContentSelector/Scanner/nextToken()#org/apache/batik/xml/XMLUtilities/isXMLSpace(char)
org/apache/batik/bridge/svg12/XPathSubsetContentSelector/Scanner/nextToken()#org/apache/batik/util/io/NormalizingReader/getLine()
org/apache/batik/bridge/svg12/XPathSubsetContentSelector/Scanner/nextToken()#org/apache/batik/util/io/NormalizingReader/getColumn()
org/apache/batik/bridge/svg12/XPathSubsetContentSelector/Scanner/nextToken()#org/apache/batik/xml/XMLUtilities/isXMLNameFirstCharacter(char)
org/apache/batik/bridge/svg12/XPathSubsetContentSelector/Scanner/nextToken()#org/apache/batik/bridge/svg12/XPathSubsetContentSelector$Scanner/string2()
org/apache/batik/bridge/svg12/XPathSubsetContentSelector/Scanner/nextToken()#org/apache/batik/bridge/svg12/XPathSubsetContentSelector$Scanner/nextChar()
org/apache/batik/bridge/svg12/XPathSubsetContentSelector/Scanner/nextToken()#org/apache/batik/bridge/svg12/XPathSubsetContentSelector$Scanner/number()
org/apache/batik/bridge/PaintServer/convertDeviceColor(org.w3c.dom.Element,org.apache.batik.css.engine.value.Value,org.apache.batik.css.engine.value.svg12.DeviceColor,float,org.apache.batik.bridge.BridgeContext)#org/apache/xmlgraphics/java2d/color/ColorWithAlternatives/ColorWithAlternatives(int,int,int,int,java.awt.Color[])
org/apache/batik/bridge/PaintServer/convertDeviceColor(org.w3c.dom.Element,org.apache.batik.css.engine.value.Value,org.apache.batik.css.engine.value.svg12.DeviceColor,float,org.apache.batik.bridge.BridgeContext)#org/apache/batik/css/engine/value/svg12/DeviceColor/getColor(int)
org/apache/batik/bridge/PaintServer/convertDeviceColor(org.w3c.dom.Element,org.apache.batik.css.engine.value.Value,org.apache.batik.css.engine.value.svg12.DeviceColor,float,org.apache.batik.bridge.BridgeContext)#java/lang/Math/round(float)
org/apache/batik/bridge/PaintServer/convertDeviceColor(org.w3c.dom.Element,org.apache.batik.css.engine.value.Value,org.apache.batik.css.engine.value.svg12.DeviceColor,float,org.apache.batik.bridge.BridgeContext)#org/apache/batik/css/engine/value/Value/getBlue()
org/apache/batik/bridge/PaintServer/convertDeviceColor(org.w3c.dom.Element,org.apache.batik.css.engine.value.Value,org.apache.batik.css.engine.value.svg12.DeviceColor,float,org.apache.batik.bridge.BridgeContext)#org/apache/batik/css/engine/value/Value/getRed()
org/apache/batik/bridge/PaintServer/convertDeviceColor(org.w3c.dom.Element,org.apache.batik.css.engine.value.Value,org.apache.batik.css.engine.value.svg12.DeviceColor,float,org.apache.batik.bridge.BridgeContext)#org/apache/xmlgraphics/java2d/color/ColorSpaces/getDeviceCMYKColorSpace()
org/apache/batik/bridge/PaintServer/convertDeviceColor(org.w3c.dom.Element,org.apache.batik.css.engine.value.Value,org.apache.batik.css.engine.value.svg12.DeviceColor,float,org.apache.batik.bridge.BridgeContext)#org/apache/xmlgraphics/java2d/color/ColorWithAlternatives/ColorWithAlternatives(java.awt.color.ColorSpace,float[],float,java.awt.Color[])
org/apache/batik/bridge/PaintServer/convertDeviceColor(org.w3c.dom.Element,org.apache.batik.css.engine.value.Value,org.apache.batik.css.engine.value.svg12.DeviceColor,float,org.apache.batik.bridge.BridgeContext)#org/apache/batik/css/engine/value/svg12/DeviceColor/getNumberOfColors()
org/apache/batik/bridge/PaintServer/convertDeviceColor(org.w3c.dom.Element,org.apache.batik.css.engine.value.Value,org.apache.batik.css.engine.value.svg12.DeviceColor,float,org.apache.batik.bridge.BridgeContext)#org/apache/batik/css/engine/value/Value/getGreen()
org/apache/batik/bridge/PaintServer/convertDeviceColor(org.w3c.dom.Element,org.apache.batik.css.engine.value.Value,org.apache.batik.css.engine.value.svg12.DeviceColor,float,org.apache.batik.bridge.BridgeContext)#org/apache/batik/css/engine/value/svg12/DeviceColor/isNChannel()
org/apache/batik/bridge/svg12/SVGSolidColorElementBridge/extractOpacity(org.w3c.dom.Element,float,org.apache.batik.bridge.BridgeContext)#org/apache/batik/dom/util/XLinkSupport/getXLinkHref(org.w3c.dom.Element)
org/apache/batik/bridge/svg12/SVGSolidColorElementBridge/extractOpacity(org.w3c.dom.Element,float,org.apache.batik.bridge.BridgeContext)#org/w3c/dom/Element/getOwnerDocument()
org/apache/batik/bridge/svg12/SVGSolidColorElementBridge/extractOpacity(org.w3c.dom.Element,float,org.apache.batik.bridge.BridgeContext)#org/apache/batik/css/engine/StyleMap/isNullCascaded(int)
org/apache/batik/bridge/svg12/SVGSolidColorElementBridge/extractOpacity(org.w3c.dom.Element,float,org.apache.batik.bridge.BridgeContext)#java/util/HashMap/HashMap()
org/apache/batik/bridge/svg12/SVGSolidColorElementBridge/extractOpacity(org.w3c.dom.Element,float,org.apache.batik.bridge.BridgeContext)#org/apache/batik/css/engine/CSSStylableElement/getComputedStyleMap(java.lang.String)
org/apache/batik/bridge/svg12/SVGSolidColorElementBridge/extractOpacity(org.w3c.dom.Element,float,org.apache.batik.bridge.BridgeContext)#org/apache/batik/util/ParsedURL/ParsedURL(java.lang.String,java.lang.String)
org/apache/batik/bridge/svg12/SVGSolidColorElementBridge/extractOpacity(org.w3c.dom.Element,float,org.apache.batik.bridge.BridgeContext)#org/apache/batik/css/engine/CSSEngine/getPropertyIndex(java.lang.String)
org/apache/batik/bridge/svg12/SVGSolidColorElementBridge/extractOpacity(org.w3c.dom.Element,float,org.apache.batik.bridge.BridgeContext)#org/apache/batik/anim/dom/SVGOMDocument/getURL()
org/apache/batik/bridge/svg12/SVGSolidColorElementBridge/extractOpacity(org.w3c.dom.Element,float,org.apache.batik.bridge.BridgeContext)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/batik/bridge/svg12/SVGSolidColorElementBridge/extractOpacity(org.w3c.dom.Element,float,org.apache.batik.bridge.BridgeContext)#java/lang/String/length()
org/apache/batik/bridge/svg12/SVGSolidColorElementBridge/extractOpacity(org.w3c.dom.Element,float,org.apache.batik.bridge.BridgeContext)#java/util/Map/containsKey(java.lang.Object)
org/apache/batik/bridge/svg12/SVGSolidColorElementBridge/extractColor(org.w3c.dom.Element,float,org.apache.batik.bridge.BridgeContext)#org/apache/batik/dom/util/XLinkSupport/getXLinkHref(org.w3c.dom.Element)
org/apache/batik/bridge/svg12/SVGSolidColorElementBridge/extractColor(org.w3c.dom.Element,float,org.apache.batik.bridge.BridgeContext)#org/w3c/dom/Element/getOwnerDocument()
org/apache/batik/bridge/svg12/SVGSolidColorElementBridge/extractColor(org.w3c.dom.Element,float,org.apache.batik.bridge.BridgeContext)#org/apache/batik/css/engine/StyleMap/isNullCascaded(int)
org/apache/batik/bridge/svg12/SVGSolidColorElementBridge/extractColor(org.w3c.dom.Element,float,org.apache.batik.bridge.BridgeContext)#org/apache/batik/css/engine/value/Value/getCssValueType()
org/apache/batik/bridge/svg12/SVGSolidColorElementBridge/extractColor(org.w3c.dom.Element,float,org.apache.batik.bridge.BridgeContext)#java/awt/Color/Color(float,float,float,float)
org/apache/batik/bridge/svg12/SVGSolidColorElementBridge/extractColor(org.w3c.dom.Element,float,org.apache.batik.bridge.BridgeContext)#java/util/HashMap/HashMap()
org/apache/batik/bridge/svg12/SVGSolidColorElementBridge/extractColor(org.w3c.dom.Element,float,org.apache.batik.bridge.BridgeContext)#org/apache/batik/css/engine/CSSStylableElement/getComputedStyleMap(java.lang.String)
org/apache/batik/bridge/svg12/SVGSolidColorElementBridge/extractColor(org.w3c.dom.Element,float,org.apache.batik.bridge.BridgeContext)#org/apache/batik/util/ParsedURL/ParsedURL(java.lang.String,java.lang.String)
org/apache/batik/bridge/svg12/SVGSolidColorElementBridge/extractColor(org.w3c.dom.Element,float,org.apache.batik.bridge.BridgeContext)#org/apache/batik/anim/dom/SVGOMDocument/getURL()
org/apache/batik/bridge/svg12/SVGSolidColorElementBridge/extractColor(org.w3c.dom.Element,float,org.apache.batik.bridge.BridgeContext)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/batik/bridge/svg12/SVGSolidColorElementBridge/extractColor(org.w3c.dom.Element,float,org.apache.batik.bridge.BridgeContext)#java/lang/String/length()
org/apache/batik/bridge/svg12/SVGSolidColorElementBridge/extractColor(org.w3c.dom.Element,float,org.apache.batik.bridge.BridgeContext)#java/util/Map/containsKey(java.lang.Object)
org/apache/batik/bridge/svg12/SVGSolidColorElementBridge/extractColor(org.w3c.dom.Element,float,org.apache.batik.bridge.BridgeContext)#org/apache/batik/css/engine/CSSEngine/getPropertyIndex(java.lang.String)
org/apache/batik/bridge/svg12/SVGSolidColorElementBridge/extractColor(org.w3c.dom.Element,float,org.apache.batik.bridge.BridgeContext)#org/apache/batik/css/engine/value/Value/item(int)
org/apache/batik/bridge/SVGFeCompositeElementBridge/createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)#java/awt/geom/Rectangle2D/add(java.awt.geom.Rectangle2D)
org/apache/batik/bridge/SVGFeCompositeElementBridge/createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)#org/apache/batik/bridge/SVGFeCompositeElementBridge/getIn2(org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.util.Map,org.apache.batik.bridge.BridgeContext)
org/apache/batik/bridge/SVGFeCompositeElementBridge/createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)#org/apache/batik/ext/awt/image/renderable/CompositeRable8Bit/CompositeRable8Bit(java.util.List,org.apache.batik.ext.awt.image.CompositeRule,boolean)
org/apache/batik/bridge/SVGFeCompositeElementBridge/createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)#org/apache/batik/ext/awt/image/renderable/PadRable8Bit/PadRable8Bit(org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,org.apache.batik.ext.awt.image.PadMode)
org/apache/batik/bridge/SVGFeCompositeElementBridge/createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)#java/awt/geom/Rectangle2D/clone()
org/apache/batik/bridge/SVGFeCompositeElementBridge/createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)#java/util/List/add(java.lang.Object)
org/apache/batik/bridge/SVGFeCompositeElementBridge/createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)#org/apache/batik/bridge/SVGFeCompositeElementBridge/updateFilterMap(org.w3c.dom.Element,org.apache.batik.ext.awt.image.renderable.Filter,java.util.Map)
org/apache/batik/bridge/SVGFeCompositeElementBridge/createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)#org/apache/batik/bridge/SVGFeCompositeElementBridge/handleColorInterpolationFilters(org.apache.batik.ext.awt.image.renderable.Filter,org.w3c.dom.Element)
org/apache/batik/bridge/SVGFeCompositeElementBridge/createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)#org/apache/batik/ext/awt/image/renderable/Filter/getBounds2D()
org/apache/batik/bridge/SVGFeCompositeElementBridge/createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)#org/apache/batik/bridge/SVGFeCompositeElementBridge/getIn(org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.util.Map,org.apache.batik.bridge.BridgeContext)
org/apache/batik/bridge/SVGFeCompositeElementBridge/createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)#java/util/ArrayList/ArrayList(int)
org/apache/batik/bridge/svg12/XPathPatternContentSelector/SelectedNodes/update(org.w3c.dom.Node)#org/w3c/dom/Node/getNextSibling()
org/apache/batik/bridge/svg12/XPathPatternContentSelector/SelectedNodes/update(org.w3c.dom.Node)#org/apache/xpath/objects/XObject/num()
org/apache/batik/bridge/svg12/XPathPatternContentSelector/SelectedNodes/update(org.w3c.dom.Node)#org/apache/batik/bridge/svg12/XPathPatternContentSelector/isSelected(org.w3c.dom.Node)
org/apache/batik/bridge/svg12/XPathPatternContentSelector/SelectedNodes/update(org.w3c.dom.Node)#org/w3c/dom/Node/getFirstChild()
org/apache/batik/bridge/svg12/XPathPatternContentSelector/SelectedNodes/update(org.w3c.dom.Node)#org/apache/batik/bridge/svg12/XPathPatternContentSelector$SelectedNodes/update(org.w3c.dom.Node)
org/apache/batik/bridge/svg12/XPathPatternContentSelector/SelectedNodes/update(org.w3c.dom.Node)#org/apache/xpath/XPath/execute(org.apache.xpath.XPathContext,org.w3c.dom.Node,org.apache.xml.utils.PrefixResolver)
org/apache/batik/bridge/svg12/XPathPatternContentSelector/SelectedNodes/update(org.w3c.dom.Node)#org/apache/batik/bridge/svg12/XPathPatternContentSelector$SelectedNodes/descendantSelected(org.w3c.dom.Node)
org/apache/batik/bridge/svg12/XPathPatternContentSelector/SelectedNodes/update(org.w3c.dom.Node)#javax/xml/transform/TransformerException/getMessage()
org/apache/batik/bridge/svg12/XPathPatternContentSelector/SelectedNodes/update(org.w3c.dom.Node)#java/util/ArrayList/add(java.lang.Object)
org/apache/batik/bridge/svg12/XPathPatternContentSelector/SelectedNodes/update(org.w3c.dom.Node)#org/apache/batik/anim/dom/XBLOMContentElement/getOwnerDocument()
org/apache/batik/bridge/svg12/XPathPatternContentSelector/SelectedNodes/update(org.w3c.dom.Node)#org/apache/batik/dom/AbstractDocument/createXPathException(short,java.lang.String,java.lang.Object[])
org/apache/batik/bridge/svg12/DefaultXBLManager/addDefinitionRef(org.w3c.dom.Element)#org/apache/batik/anim/dom/XBLOMDefinitionElement/getElementLocalName()
org/apache/batik/bridge/svg12/DefaultXBLManager/addDefinitionRef(org.w3c.dom.Element)#org/apache/batik/bridge/svg12/DefaultXBLManager$ImportRecord/ImportRecord(org.apache.batik.bridge.svg12.DefaultXBLManager,org.w3c.dom.Element,org.w3c.dom.Node)
org/apache/batik/bridge/svg12/DefaultXBLManager/addDefinitionRef(org.w3c.dom.Element)#org/apache/batik/dom/events/NodeEventTarget/addEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean,java.lang.Object)
org/apache/batik/bridge/svg12/DefaultXBLManager/addDefinitionRef(org.w3c.dom.Element)#org/w3c/dom/Element/getLocalName()
org/apache/batik/bridge/svg12/DefaultXBLManager/addDefinitionRef(org.w3c.dom.Element)#org/w3c/dom/Element/getNamespaceURI()
org/apache/batik/bridge/svg12/DefaultXBLManager/addDefinitionRef(org.w3c.dom.Element)#java/lang/String/equals(java.lang.Object)
org/apache/batik/bridge/svg12/DefaultXBLManager/addDefinitionRef(org.w3c.dom.Element)#org/apache/batik/anim/dom/XBLOMDefinitionElement/getElementNamespaceURI()
org/apache/batik/bridge/svg12/DefaultXBLManager/addDefinitionRef(org.w3c.dom.Element)#org/w3c/dom/Element/getAttributeNS(java.lang.String,java.lang.String)
org/apache/batik/bridge/svg12/DefaultXBLManager/addDefinitionRef(org.w3c.dom.Element)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/batik/bridge/svg12/DefaultXBLManager/startProcessing()#org/apache/batik/anim/dom/XBLOMDefinitionElement/getElementLocalName()
org/apache/batik/bridge/svg12/DefaultXBLManager/startProcessing()#org/w3c/dom/Document/getElementsByTagNameNS(java.lang.String,java.lang.String)
org/apache/batik/bridge/svg12/DefaultXBLManager/startProcessing()#org/w3c/dom/NodeList/getLength()
org/apache/batik/bridge/svg12/DefaultXBLManager/startProcessing()#java/lang/String/length()
org/apache/batik/bridge/svg12/DefaultXBLManager/startProcessing()#org/apache/batik/dom/AbstractDocument/initializeEventSupport()
org/apache/batik/bridge/svg12/DefaultXBLManager/startProcessing()#org/w3c/dom/NodeList/item(int)
org/apache/batik/bridge/svg12/DefaultXBLManager/startProcessing()#org/w3c/dom/Document/getDocumentElement()
org/apache/batik/bridge/svg12/DefaultXBLManager/startProcessing()#org/apache/batik/anim/dom/XBLOMDefinitionElement/getElementNamespaceURI()
org/apache/batik/bridge/svg12/DefaultXBLManager/startProcessing()#org/apache/batik/anim/dom/XBLEventSupport/addImplementationEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean)
org/apache/batik/bridge/svg12/DefaultXBLManager/startProcessing()#org/apache/batik/anim/dom/XBLOMDefinitionElement/getAttributeNS(java.lang.String,java.lang.String)
org/apache/batik/bridge/svg12/DefaultXBLManager/cloneTemplate(org.apache.batik.anim.dom.XBLOMTemplateElement)#org/w3c/dom/Node/getNextSibling()
org/apache/batik/bridge/svg12/DefaultXBLManager/cloneTemplate(org.apache.batik.anim.dom.XBLOMTemplateElement)#org/apache/batik/anim/dom/XBLOMShadowTreeElement/setAttributeNodeNS(org.w3c.dom.Attr)
org/apache/batik/bridge/svg12/DefaultXBLManager/cloneTemplate(org.apache.batik.anim.dom.XBLOMTemplateElement)#org/apache/batik/anim/dom/XBLOMTemplateElement/getOwnerDocument()
org/apache/batik/bridge/svg12/DefaultXBLManager/cloneTemplate(org.apache.batik.anim.dom.XBLOMTemplateElement)#org/w3c/dom/NamedNodeMap/getLength()
org/apache/batik/bridge/svg12/DefaultXBLManager/cloneTemplate(org.apache.batik.anim.dom.XBLOMTemplateElement)#org/apache/batik/anim/dom/XBLOMShadowTreeElement/appendChild(org.w3c.dom.Node)
org/apache/batik/bridge/svg12/DefaultXBLManager/cloneTemplate(org.apache.batik.anim.dom.XBLOMTemplateElement)#org/apache/batik/anim/dom/XBLOMTemplateElement/getFirstChild()
org/apache/batik/bridge/svg12/DefaultXBLManager/cloneTemplate(org.apache.batik.anim.dom.XBLOMTemplateElement)#org/w3c/dom/Document/createElementNS(java.lang.String,java.lang.String)
org/apache/batik/bridge/svg12/DefaultXBLManager/cloneTemplate(org.apache.batik.anim.dom.XBLOMTemplateElement)#org/w3c/dom/Node/cloneNode(boolean)
org/apache/batik/bridge/svg12/DefaultXBLManager/cloneTemplate(org.apache.batik.anim.dom.XBLOMTemplateElement)#org/apache/batik/anim/dom/XBLOMTemplateElement/getAttributes()
org/apache/batik/bridge/svg12/DefaultXBLManager/cloneTemplate(org.apache.batik.anim.dom.XBLOMTemplateElement)#org/w3c/dom/NamedNodeMap/item(int)
org/apache/batik/bridge/svg12/DefaultXBLManager/cloneTemplate(org.apache.batik.anim.dom.XBLOMTemplateElement)#org/apache/batik/anim/dom/XBLOMShadowTreeElement/setAttributeNode(org.w3c.dom.Attr)
org/apache/batik/bridge/svg12/DefaultXBLManager/addDefinition(java.lang.String,java.lang.String,org.apache.batik.anim.dom.XBLOMDefinitionElement,org.w3c.dom.Element)#java/util/TreeSet/first()
org/apache/batik/bridge/svg12/DefaultXBLManager/addDefinition(java.lang.String,java.lang.String,org.apache.batik.anim.dom.XBLOMDefinitionElement,org.w3c.dom.Element)#org/apache/batik/bridge/svg12/DefaultXBLManager$DefinitionRecord/DefinitionRecord(org.apache.batik.bridge.svg12.DefaultXBLManager,java.lang.String,java.lang.String,org.apache.batik.anim.dom.XBLOMDefinitionElement,org.apache.batik.anim.dom.XBLOMTemplateElement,org.w3c.dom.Element)
org/apache/batik/bridge/svg12/DefaultXBLManager/addDefinition(java.lang.String,java.lang.String,org.apache.batik.anim.dom.XBLOMDefinitionElement,org.w3c.dom.Element)#java/util/TreeSet/size()
org/apache/batik/bridge/svg12/DefaultXBLManager/addDefinition(java.lang.String,java.lang.String,org.apache.batik.anim.dom.XBLOMDefinitionElement,org.w3c.dom.Element)#org/apache/batik/util/DoublyIndexedTable/put(java.lang.Object,java.lang.Object,java.lang.Object)
org/apache/batik/bridge/svg12/DefaultXBLManager/addDefinition(java.lang.String,java.lang.String,org.apache.batik.anim.dom.XBLOMDefinitionElement,org.w3c.dom.Element)#java/util/Map/get(java.lang.Object)
org/apache/batik/bridge/svg12/DefaultXBLManager/addDefinition(java.lang.String,java.lang.String,org.apache.batik.anim.dom.XBLOMDefinitionElement,org.w3c.dom.Element)#org/apache/batik/anim/dom/XBLOMDefinitionElement/getFirstChild()
org/apache/batik/bridge/svg12/DefaultXBLManager/addDefinition(java.lang.String,java.lang.String,org.apache.batik.anim.dom.XBLOMDefinitionElement,org.w3c.dom.Element)#org/w3c/dom/Document/getDocumentElement()
org/apache/batik/bridge/svg12/DefaultXBLManager/addDefinition(java.lang.String,java.lang.String,org.apache.batik.anim.dom.XBLOMDefinitionElement,org.w3c.dom.Element)#java/util/TreeSet/TreeSet()
org/apache/batik/bridge/svg12/DefaultXBLManager/addDefinition(java.lang.String,java.lang.String,org.apache.batik.anim.dom.XBLOMDefinitionElement,org.w3c.dom.Element)#java/util/TreeSet/add(java.lang.Object)
org/apache/batik/bridge/svg12/DefaultXBLManager/addDefinition(java.lang.String,java.lang.String,org.apache.batik.anim.dom.XBLOMDefinitionElement,org.w3c.dom.Element)#org/w3c/dom/Node/getNextSibling()
org/apache/batik/bridge/svg12/DefaultXBLManager/addDefinition(java.lang.String,java.lang.String,org.apache.batik.anim.dom.XBLOMDefinitionElement,org.w3c.dom.Element)#org/apache/batik/util/DoublyIndexedTable/get(java.lang.Object,java.lang.Object)
org/apache/batik/bridge/svg12/DefaultXBLManager/stopProcessing()#java/util/TreeSet/first()
org/apache/batik/bridge/svg12/DefaultXBLManager/stopProcessing()#org/apache/batik/util/DoublyIndexedTable/put(java.lang.Object,java.lang.Object,java.lang.Object)
org/apache/batik/bridge/svg12/DefaultXBLManager/stopProcessing()#org/apache/batik/util/DoublyIndexedTable/getValuesArray()
org/apache/batik/bridge/svg12/DefaultXBLManager/stopProcessing()#org/w3c/dom/Element/getLocalName()
org/apache/batik/bridge/svg12/DefaultXBLManager/stopProcessing()#java/util/Collection/size()
org/apache/batik/bridge/svg12/DefaultXBLManager/stopProcessing()#java/util/Map/values()
org/apache/batik/bridge/svg12/DefaultXBLManager/stopProcessing()#org/apache/batik/util/DoublyIndexedTable/DoublyIndexedTable()
org/apache/batik/bridge/svg12/DefaultXBLManager/stopProcessing()#org/apache/batik/util/DoublyIndexedTable/get(java.lang.Object,java.lang.Object)
org/apache/batik/bridge/svg12/DefaultXBLManager/stopProcessing()#java/util/Collection/toArray(java.lang.Object[])
org/apache/batik/bridge/svg12/DefaultXBLManager/stopProcessing()#java/lang/String/equals(java.lang.Object)
org/apache/batik/bridge/svg12/DefaultXBLManager/stopProcessing()#org/apache/batik/anim/dom/XBLEventSupport/removeImplementationEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean)
org/apache/batik/bridge/svg12/DefaultXBLManager/stopProcessing()#java/util/TreeSet/isEmpty()
org/apache/batik/bridge/svg12/DefaultXBLManager/stopProcessing()#org/apache/batik/dom/AbstractDocument/initializeEventSupport()
org/apache/batik/bridge/svg12/DefaultXBLManager/stopProcessing()#java/util/TreeSet/remove(java.lang.Object)
org/apache/batik/bridge/svg12/DefaultXBLManager/stopProcessing()#java/util/Map/clear()
org/apache/batik/bridge/svg12/DefaultXBLManager/stopProcessing()#org/apache/batik/util/DoublyIndexedTable/clear()
org/apache/batik/bridge/MultiResGraphicsNode/primitivePaint(java.awt.Graphics2D)#java/awt/geom/Rectangle2D/getY()
org/apache/batik/bridge/MultiResGraphicsNode/primitivePaint(java.awt.Graphics2D)#java/lang/Math/floor(double)
org/apache/batik/bridge/MultiResGraphicsNode/primitivePaint(java.awt.Graphics2D)#java/lang/Math/ceil(double)
org/apache/batik/bridge/MultiResGraphicsNode/primitivePaint(java.awt.Graphics2D)#java/awt/Graphics2D/getTransform()
org/apache/batik/bridge/MultiResGraphicsNode/primitivePaint(java.awt.Graphics2D)#java/awt/geom/AffineTransform/getTranslateX()
org/apache/batik/bridge/MultiResGraphicsNode/primitivePaint(java.awt.Graphics2D)#java/awt/geom/AffineTransform/getTranslateY()
org/apache/batik/bridge/MultiResGraphicsNode/primitivePaint(java.awt.Graphics2D)#java/awt/geom/AffineTransform/getScaleY()
org/apache/batik/bridge/MultiResGraphicsNode/primitivePaint(java.awt.Graphics2D)#java/awt/geom/Rectangle2D/getWidth()
org/apache/batik/bridge/MultiResGraphicsNode/primitivePaint(java.awt.Graphics2D)#java/awt/geom/AffineTransform/AffineTransform(double,double,double,double,double,double)
org/apache/batik/bridge/MultiResGraphicsNode/primitivePaint(java.awt.Graphics2D)#java/awt/geom/AffineTransform/getShearX()
org/apache/batik/bridge/MultiResGraphicsNode/primitivePaint(java.awt.Graphics2D)#java/awt/geom/AffineTransform/getShearY()
org/apache/batik/bridge/MultiResGraphicsNode/primitivePaint(java.awt.Graphics2D)#java/awt/geom/Rectangle2D/getHeight()
org/apache/batik/bridge/MultiResGraphicsNode/primitivePaint(java.awt.Graphics2D)#java/awt/Graphics2D/setTransform(java.awt.geom.AffineTransform)
org/apache/batik/bridge/MultiResGraphicsNode/primitivePaint(java.awt.Graphics2D)#java/lang/Math/sqrt(double)
org/apache/batik/bridge/MultiResGraphicsNode/primitivePaint(java.awt.Graphics2D)#java/awt/geom/Rectangle2D/getX()
org/apache/batik/bridge/MultiResGraphicsNode/primitivePaint(java.awt.Graphics2D)#java/awt/geom/AffineTransform/getScaleX()
org/apache/batik/bridge/MultiResGraphicsNode/primitivePaint(java.awt.Graphics2D)#org/apache/batik/gvt/GraphicsNode/getBounds()
org/apache/batik/bridge/MultiResGraphicsNode/primitivePaint(java.awt.Graphics2D)#org/apache/batik/gvt/GraphicsNode/paint(java.awt.Graphics2D)
org/apache/batik/bridge/SVGUseElementBridge/buildCompositeGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.CompositeGraphicsNode)#org/apache/batik/gvt/CompositeGraphicsNode/CompositeGraphicsNode()
org/apache/batik/bridge/SVGUseElementBridge/buildCompositeGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.CompositeGraphicsNode)#org/w3c/dom/Attr/getNamespaceURI()
org/apache/batik/bridge/SVGUseElementBridge/buildCompositeGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.CompositeGraphicsNode)#org/apache/batik/anim/dom/SVGOMUseElement/setUseShadowTree(org.apache.batik.dom.svg.SVGOMUseShadowRoot)
org/apache/batik/bridge/SVGUseElementBridge/buildCompositeGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.CompositeGraphicsNode)#org/w3c/dom/Element/getFirstChild()
org/apache/batik/bridge/SVGUseElementBridge/buildCompositeGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.CompositeGraphicsNode)#org/w3c/dom/Element/getLocalName()
org/apache/batik/bridge/SVGUseElementBridge/buildCompositeGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.CompositeGraphicsNode)#java/lang/String/equals(java.lang.Object)
org/apache/batik/bridge/SVGUseElementBridge/buildCompositeGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.CompositeGraphicsNode)#java/util/List/add(java.lang.Object)
org/apache/batik/bridge/SVGUseElementBridge/buildCompositeGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.CompositeGraphicsNode)#org/w3c/dom/NamedNodeMap/item(int)
org/apache/batik/bridge/SVGUseElementBridge/buildCompositeGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.CompositeGraphicsNode)#org/apache/batik/gvt/CompositeGraphicsNode/getChildren()
org/apache/batik/bridge/SVGUseElementBridge/buildCompositeGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.CompositeGraphicsNode)#org/apache/batik/gvt/CompositeGraphicsNode/setBackgroundEnable(java.awt.geom.Rectangle2D)
org/apache/batik/bridge/SVGUseElementBridge/buildCompositeGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.CompositeGraphicsNode)#org/apache/batik/gvt/CompositeGraphicsNode/setRenderingHints(java.awt.RenderingHints)
org/apache/batik/bridge/SVGUseElementBridge/buildCompositeGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.CompositeGraphicsNode)#org/apache/batik/css/engine/CSSEngine/getCSSContext()
org/apache/batik/bridge/SVGUseElementBridge/buildCompositeGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.CompositeGraphicsNode)#org/apache/batik/anim/dom/SVGOMAnimatedLength/isSpecified()
org/apache/batik/bridge/SVGUseElementBridge/buildCompositeGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.CompositeGraphicsNode)#org/apache/batik/anim/dom/SVGOMUseElement/getHeight()
org/apache/batik/bridge/SVGUseElementBridge/buildCompositeGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.CompositeGraphicsNode)#org/apache/batik/gvt/CompositeGraphicsNode/remove(int)
org/apache/batik/bridge/SVGUseElementBridge/buildCompositeGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.CompositeGraphicsNode)#org/w3c/dom/Element/getOwnerDocument()
org/apache/batik/bridge/SVGUseElementBridge/buildCompositeGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.CompositeGraphicsNode)#org/apache/batik/dom/svg/SVGOMUseShadowRoot/SVGOMUseShadowRoot(org.apache.batik.dom.AbstractDocument,org.w3c.dom.Element,boolean)
org/apache/batik/bridge/SVGUseElementBridge/buildCompositeGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.CompositeGraphicsNode)#org/w3c/dom/Element/setAttributeNS(java.lang.String,java.lang.String,java.lang.String)
org/apache/batik/bridge/SVGUseElementBridge/buildCompositeGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.CompositeGraphicsNode)#org/w3c/dom/NamedNodeMap/getLength()
org/apache/batik/bridge/SVGUseElementBridge/buildCompositeGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.CompositeGraphicsNode)#org/apache/batik/anim/dom/SVGOMUseElement/getCSSFirstChild()
org/apache/batik/bridge/SVGUseElementBridge/buildCompositeGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.CompositeGraphicsNode)#org/apache/batik/anim/dom/SVGOMDocument/createElementNS(java.lang.String,java.lang.String)
org/apache/batik/bridge/SVGUseElementBridge/buildCompositeGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.CompositeGraphicsNode)#org/w3c/dom/svg/SVGLength/getValueAsString()
org/apache/batik/bridge/SVGUseElementBridge/buildCompositeGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.CompositeGraphicsNode)#org/apache/batik/anim/dom/SVGOMUseElement/getHref()
org/apache/batik/bridge/SVGUseElementBridge/buildCompositeGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.CompositeGraphicsNode)#java/lang/String/length()
org/apache/batik/bridge/SVGUseElementBridge/buildCompositeGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.CompositeGraphicsNode)#org/apache/batik/dom/events/NodeEventTarget/addEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean,java.lang.Object)
org/apache/batik/bridge/SVGUseElementBridge/buildCompositeGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.CompositeGraphicsNode)#org/w3c/dom/Element/appendChild(org.w3c.dom.Node)
org/apache/batik/bridge/SVGUseElementBridge/buildCompositeGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.CompositeGraphicsNode)#org/apache/batik/bridge/SVGUseElementBridge/associateSVGContext(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode)
org/apache/batik/bridge/SVGUseElementBridge/buildCompositeGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.CompositeGraphicsNode)#org/apache/batik/bridge/SVGUseElementBridge$ReferencedElementMutationListener/ReferencedElementMutationListener(org.apache.batik.bridge.SVGUseElementBridge)
org/apache/batik/bridge/SVGUseElementBridge/buildCompositeGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.CompositeGraphicsNode)#org/apache/batik/gvt/CompositeGraphicsNode/size()
org/apache/batik/bridge/SVGUseElementBridge/buildCompositeGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.CompositeGraphicsNode)#org/apache/batik/bridge/SVGUseElementBridge/disposeTree(org.w3c.dom.Node)
org/apache/batik/bridge/SVGUseElementBridge/buildCompositeGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.CompositeGraphicsNode)#org/w3c/dom/Attr/getValue()
org/apache/batik/bridge/SVGUseElementBridge/buildCompositeGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.CompositeGraphicsNode)#org/apache/batik/anim/dom/SVGOMAnimatedLength/getAnimVal()
org/apache/batik/bridge/SVGUseElementBridge/buildCompositeGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.CompositeGraphicsNode)#org/apache/batik/gvt/CompositeGraphicsNode/setTransform(java.awt.geom.AffineTransform)
org/apache/batik/bridge/SVGUseElementBridge/buildCompositeGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.CompositeGraphicsNode)#org/w3c/dom/svg/SVGAnimatedString/getAnimVal()
org/apache/batik/bridge/SVGUseElementBridge/buildCompositeGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.CompositeGraphicsNode)#org/w3c/dom/Element/getAttributes()
org/apache/batik/bridge/SVGUseElementBridge/buildCompositeGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.CompositeGraphicsNode)#org/apache/batik/anim/dom/SVGOMDocument/getCSSEngine()
org/apache/batik/bridge/SVGUseElementBridge/buildCompositeGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.CompositeGraphicsNode)#org/apache/batik/dom/events/NodeEventTarget/removeEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean)
org/apache/batik/bridge/SVGUseElementBridge/buildCompositeGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.CompositeGraphicsNode)#org/apache/batik/anim/dom/SVGOMDocument/importNode(org.w3c.dom.Node,boolean,boolean)
org/apache/batik/bridge/SVGUseElementBridge/buildCompositeGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.CompositeGraphicsNode)#org/w3c/dom/Attr/getName()
org/apache/batik/bridge/SVGUseElementBridge/buildCompositeGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.CompositeGraphicsNode)#org/apache/batik/dom/svg/SVGOMUseShadowRoot/appendChild(org.w3c.dom.Node)
org/apache/batik/bridge/SVGUseElementBridge/buildCompositeGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.CompositeGraphicsNode)#org/apache/batik/gvt/CompositeGraphicsNode/setVisible(boolean)
org/apache/batik/bridge/SVGUseElementBridge/buildCompositeGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.CompositeGraphicsNode)#org/apache/batik/anim/dom/SVGOMUseElement/getWidth()
org/apache/batik/bridge/SVGTextElementBridge/getTextEnclosureSet(java.awt.geom.AffineTransform,java.awt.geom.Rectangle2D)#java/awt/Shape/getBounds2D()
org/apache/batik/bridge/SVGTextElementBridge/getTextEnclosureSet(java.awt.geom.AffineTransform,java.awt.geom.Rectangle2D)#java/util/List/size()
org/apache/batik/bridge/SVGTextElementBridge/getTextEnclosureSet(java.awt.geom.AffineTransform,java.awt.geom.Rectangle2D)#org/apache/batik/bridge/StrokingTextPainter$TextRun/getACI()
org/apache/batik/bridge/SVGTextElementBridge/getTextEnclosureSet(java.awt.geom.AffineTransform,java.awt.geom.Rectangle2D)#java/util/Set/contains(java.lang.Object)
org/apache/batik/bridge/SVGTextElementBridge/getTextEnclosureSet(java.awt.geom.AffineTransform,java.awt.geom.Rectangle2D)#java/lang/ref/SoftReference/get()
org/apache/batik/bridge/SVGTextElementBridge/getTextEnclosureSet(java.awt.geom.AffineTransform,java.awt.geom.Rectangle2D)#java/text/AttributedCharacterIterator/first()
org/apache/batik/bridge/SVGTextElementBridge/getTextEnclosureSet(java.awt.geom.AffineTransform,java.awt.geom.Rectangle2D)#java/awt/geom/AffineTransform/createTransformedShape(java.awt.Shape)
org/apache/batik/bridge/SVGTextElementBridge/getTextEnclosureSet(java.awt.geom.AffineTransform,java.awt.geom.Rectangle2D)#java/util/Set/remove(java.lang.Object)
org/apache/batik/bridge/SVGTextElementBridge/getTextEnclosureSet(java.awt.geom.AffineTransform,java.awt.geom.Rectangle2D)#org/apache/batik/bridge/StrokingTextPainter$TextRun/getLayout()
org/apache/batik/bridge/SVGTextElementBridge/getTextEnclosureSet(java.awt.geom.AffineTransform,java.awt.geom.Rectangle2D)#java/util/List/get(int)
org/apache/batik/bridge/SVGTextElementBridge/getTextEnclosureSet(java.awt.geom.AffineTransform,java.awt.geom.Rectangle2D)#java/util/HashSet/HashSet()
org/apache/batik/bridge/SVGTextElementBridge/getTextEnclosureSet(java.awt.geom.AffineTransform,java.awt.geom.Rectangle2D)#java/util/Set/add(java.lang.Object)
org/apache/batik/bridge/SVGTextElementBridge/getTextEnclosureSet(java.awt.geom.AffineTransform,java.awt.geom.Rectangle2D)#java/awt/geom/Rectangle2D/contains(java.awt.geom.Rectangle2D)
org/apache/batik/bridge/SVGTextElementBridge/getTextEnclosureSet(java.awt.geom.AffineTransform,java.awt.geom.Rectangle2D)#java/text/AttributedCharacterIterator/getAttribute(java.text.AttributedCharacterIterator$Attribute)
org/apache/batik/bridge/SVGTextElementBridge/addGlyphPositionAttributes(java.text.AttributedString,org.w3c.dom.Element,org.apache.batik.bridge.BridgeContext)#org/w3c/dom/svg/SVGTextPositioningElement/getY()
org/apache/batik/bridge/SVGTextElementBridge/addGlyphPositionAttributes(java.text.AttributedString,org.w3c.dom.Element,org.apache.batik.bridge.BridgeContext)#org/w3c/dom/svg/SVGNumberList/getNumberOfItems()
org/apache/batik/bridge/SVGTextElementBridge/addGlyphPositionAttributes(java.text.AttributedString,org.w3c.dom.Element,org.apache.batik.bridge.BridgeContext)#org/apache/batik/anim/dom/SVGOMAnimatedNumberList/getAnimVal()
org/apache/batik/bridge/SVGTextElementBridge/addGlyphPositionAttributes(java.text.AttributedString,org.w3c.dom.Element,org.apache.batik.bridge.BridgeContext)#org/w3c/dom/svg/SVGLengthList/getNumberOfItems()
org/apache/batik/bridge/SVGTextElementBridge/addGlyphPositionAttributes(java.text.AttributedString,org.w3c.dom.Element,org.apache.batik.bridge.BridgeContext)#org/apache/batik/anim/dom/SVGOMAnimatedLengthList/getAnimVal()
org/apache/batik/bridge/SVGTextElementBridge/addGlyphPositionAttributes(java.text.AttributedString,org.w3c.dom.Element,org.apache.batik.bridge.BridgeContext)#java/lang/Float/Float(float)
org/apache/batik/bridge/SVGTextElementBridge/addGlyphPositionAttributes(java.text.AttributedString,org.w3c.dom.Element,org.apache.batik.bridge.BridgeContext)#org/w3c/dom/svg/SVGTextPositioningElement/getDx()
org/apache/batik/bridge/SVGTextElementBridge/addGlyphPositionAttributes(java.text.AttributedString,org.w3c.dom.Element,org.apache.batik.bridge.BridgeContext)#org/w3c/dom/svg/SVGNumberList/getItem(int)
org/apache/batik/bridge/SVGTextElementBridge/addGlyphPositionAttributes(java.text.AttributedString,org.w3c.dom.Element,org.apache.batik.bridge.BridgeContext)#org/w3c/dom/svg/SVGTextPositioningElement/getDy()
org/apache/batik/bridge/SVGTextElementBridge/addGlyphPositionAttributes(java.text.AttributedString,org.w3c.dom.Element,org.apache.batik.bridge.BridgeContext)#org/apache/batik/anim/dom/SVGOMAnimatedLengthList/check()
org/apache/batik/bridge/SVGTextElementBridge/addGlyphPositionAttributes(java.text.AttributedString,org.w3c.dom.Element,org.apache.batik.bridge.BridgeContext)#org/w3c/dom/svg/SVGNumber/getValue()
org/apache/batik/bridge/SVGTextElementBridge/addGlyphPositionAttributes(java.text.AttributedString,org.w3c.dom.Element,org.apache.batik.bridge.BridgeContext)#org/w3c/dom/svg/SVGTextPositioningElement/getX()
org/apache/batik/bridge/SVGTextElementBridge/addGlyphPositionAttributes(java.text.AttributedString,org.w3c.dom.Element,org.apache.batik.bridge.BridgeContext)#org/w3c/dom/svg/SVGLengthList/getItem(int)
org/apache/batik/bridge/SVGTextElementBridge/addGlyphPositionAttributes(java.text.AttributedString,org.w3c.dom.Element,org.apache.batik.bridge.BridgeContext)#org/apache/batik/anim/dom/SVGOMAnimatedNumberList/check()
org/apache/batik/bridge/SVGTextElementBridge/addGlyphPositionAttributes(java.text.AttributedString,org.w3c.dom.Element,org.apache.batik.bridge.BridgeContext)#org/w3c/dom/svg/SVGLength/getValue()
org/apache/batik/bridge/SVGTextElementBridge/addGlyphPositionAttributes(java.text.AttributedString,org.w3c.dom.Element,org.apache.batik.bridge.BridgeContext)#java/text/AttributedString/addAttribute(java.text.AttributedCharacterIterator$Attribute,java.lang.Object,int,int)
org/apache/batik/bridge/SVGTextElementBridge/addGlyphPositionAttributes(java.text.AttributedString,org.w3c.dom.Element,org.apache.batik.bridge.BridgeContext)#org/w3c/dom/svg/SVGTextPositioningElement/getRotate()
org/apache/batik/bridge/SVGTextElementBridge/addGlyphPositionAttributes(java.text.AttributedString,org.w3c.dom.Element,org.apache.batik.bridge.BridgeContext)#java/lang/Float/Float(double)
org/apache/batik/bridge/SVGTextElementBridge/addGlyphPositionAttributes(java.text.AttributedString,org.w3c.dom.Element,org.apache.batik.bridge.BridgeContext)#org/w3c/dom/Element/getLocalName()
org/apache/batik/bridge/SVGTextElementBridge/addGlyphPositionAttributes(java.text.AttributedString,org.w3c.dom.Element,org.apache.batik.bridge.BridgeContext)#java/lang/Math/toRadians(double)
org/apache/batik/bridge/SVGTextElementBridge/addGlyphPositionAttributes(java.text.AttributedString,org.w3c.dom.Element,org.apache.batik.bridge.BridgeContext)#java/lang/String/equals(java.lang.Object)
org/apache/batik/bridge/SVGTextElementBridge/getEndPoint(org.apache.batik.bridge.SVGTextElementBridge$CharacterInformation)#org/apache/batik/gvt/font/GVTGlyphVector/getGlyphTransform(int)
org/apache/batik/bridge/SVGTextElementBridge/getEndPoint(org.apache.batik.bridge.SVGTextElementBridge$CharacterInformation)#java/awt/geom/AffineTransform/transform(java.awt.geom.Point2D,java.awt.geom.Point2D)
org/apache/batik/bridge/SVGTextElementBridge/getEndPoint(org.apache.batik.bridge.SVGTextElementBridge$CharacterInformation)#org/apache/batik/gvt/font/GVTGlyphVector/getGlyphMetrics(int)
org/apache/batik/bridge/SVGTextElementBridge/getEndPoint(org.apache.batik.bridge.SVGTextElementBridge$CharacterInformation)#org/apache/batik/gvt/font/GVTGlyphVector/isGlyphVisible(int)
org/apache/batik/bridge/SVGTextElementBridge/getEndPoint(org.apache.batik.bridge.SVGTextElementBridge$CharacterInformation)#java/awt/geom/Point2D$Float/Float(float,float)
org/apache/batik/bridge/SVGTextElementBridge/getEndPoint(org.apache.batik.bridge.SVGTextElementBridge$CharacterInformation)#org/apache/batik/gvt/font/GVTGlyphMetrics/getHorizontalAdvance()
org/apache/batik/bridge/SVGTextElementBridge/getEndPoint(org.apache.batik.bridge.SVGTextElementBridge$CharacterInformation)#java/awt/geom/Point2D/getX()
org/apache/batik/bridge/SVGTextElementBridge/getEndPoint(org.apache.batik.bridge.SVGTextElementBridge$CharacterInformation)#java/awt/geom/Point2D/getY()
org/apache/batik/bridge/SVGTextElementBridge/getEndPoint(org.apache.batik.bridge.SVGTextElementBridge$CharacterInformation)#org/apache/batik/gvt/font/GVTGlyphVector/getGlyphPosition(int)
org/apache/batik/bridge/SVGTextElementBridge/getAttributeMap(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.text.TextPath,java.lang.Integer,java.util.Map)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/apache/batik/bridge/SVGTextElementBridge/getAttributeMap(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.text.TextPath,java.lang.Integer,java.util.Map)#java/lang/Float/Float(double)
org/apache/batik/bridge/SVGTextElementBridge/getAttributeMap(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.text.TextPath,java.lang.Integer,java.util.Map)#java/lang/Integer/Integer(int)
org/apache/batik/bridge/SVGTextElementBridge/getAttributeMap(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.text.TextPath,java.lang.Integer,java.util.Map)#org/w3c/dom/Element/getLocalName()
org/apache/batik/bridge/SVGTextElementBridge/getAttributeMap(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.text.TextPath,java.lang.Integer,java.util.Map)#java/lang/String/equals(java.lang.Object)
org/apache/batik/bridge/SVGTextElementBridge/getAttributeMap(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.text.TextPath,java.lang.Integer,java.util.Map)#org/apache/batik/css/engine/value/Value/getStringValue()
org/apache/batik/bridge/SVGTextElementBridge/getAttributeMap(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.text.TextPath,java.lang.Integer,java.util.Map)#org/apache/batik/css/engine/value/Value/getFloatValue()
org/apache/batik/bridge/SVGTextElementBridge/getAttributeMap(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.text.TextPath,java.lang.Integer,java.util.Map)#org/apache/batik/anim/dom/SVGOMAnimatedEnumeration/getCheckedVal()
org/apache/batik/bridge/SVGTextElementBridge/getAttributeMap(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.text.TextPath,java.lang.Integer,java.util.Map)#java/lang/Float/Float(float)
org/apache/batik/bridge/SVGTextElementBridge/getAttributeMap(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.text.TextPath,java.lang.Integer,java.util.Map)#org/apache/batik/anim/dom/AbstractSVGAnimatedLength/isSpecified()
org/apache/batik/bridge/SVGTextElementBridge/getAttributeMap(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.text.TextPath,java.lang.Integer,java.util.Map)#java/lang/Integer/intValue()
org/apache/batik/bridge/SVGTextElementBridge/getAttributeMap(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.text.TextPath,java.lang.Integer,java.util.Map)#org/w3c/dom/svg/SVGTextContentElement/getLengthAdjust()
org/apache/batik/bridge/SVGTextElementBridge/getAttributeMap(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.text.TextPath,java.lang.Integer,java.util.Map)#java/lang/Math/toDegrees(double)
org/apache/batik/bridge/SVGTextElementBridge/getAttributeMap(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.text.TextPath,java.lang.Integer,java.util.Map)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/batik/bridge/SVGTextElementBridge/getAttributeMap(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.text.TextPath,java.lang.Integer,java.util.Map)#java/lang/StringBuilder/append(java.lang.String)
org/apache/batik/bridge/SVGTextElementBridge/getAttributeMap(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.text.TextPath,java.lang.Integer,java.util.Map)#java/util/WeakHashMap/put(java.lang.Object,java.lang.Object)
org/apache/batik/bridge/SVGTextElementBridge/getAttributeMap(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.text.TextPath,java.lang.Integer,java.util.Map)#java/lang/String/charAt(int)
org/apache/batik/bridge/SVGTextElementBridge/getAttributeMap(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.text.TextPath,java.lang.Integer,java.util.Map)#org/apache/batik/gvt/text/TextPaintInfo/TextPaintInfo()
org/apache/batik/bridge/SVGTextElementBridge/getAttributeMap(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.text.TextPath,java.lang.Integer,java.util.Map)#java/lang/StringBuilder/append(int)
org/apache/batik/bridge/SVGTextElementBridge/getAttributeMap(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.text.TextPath,java.lang.Integer,java.util.Map)#java/util/HashMap/HashMap()
org/apache/batik/bridge/SVGTextElementBridge/getAttributeMap(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.text.TextPath,java.lang.Integer,java.util.Map)#org/w3c/dom/Element/getNamespaceURI()
org/apache/batik/bridge/SVGTextElementBridge/getAttributeMap(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.text.TextPath,java.lang.Integer,java.util.Map)#java/lang/StringBuilder/StringBuilder()
org/apache/batik/bridge/SVGTextElementBridge/getAttributeMap(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.text.TextPath,java.lang.Integer,java.util.Map)#org/apache/batik/css/engine/value/Value/getPrimitiveType()
org/apache/batik/bridge/SVGTextElementBridge/getAttributeMap(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.text.TextPath,java.lang.Integer,java.util.Map)#org/apache/batik/anim/dom/AbstractSVGAnimatedLength/getCheckedValue()
org/apache/batik/bridge/SVGTextElementBridge/getAttributeMap(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.text.TextPath,java.lang.Integer,java.util.Map)#java/lang/StringBuilder/toString()
org/apache/batik/bridge/SVGTextElementBridge/getAttributeMap(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.text.TextPath,java.lang.Integer,java.util.Map)#org/w3c/dom/svg/SVGTextContentElement/getTextLength()
org/apache/batik/bridge/SVGTextElementBridge/getTextBounds(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean)#org/apache/batik/anim/dom/SVGOMElement/getSVGContext()
org/apache/batik/bridge/SVGTextElementBridge/getTextBounds(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean)#java/util/List/size()
org/apache/batik/bridge/SVGTextElementBridge/getTextBounds(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean)#org/apache/batik/bridge/StrokingTextPainter$TextRun/getACI()
org/apache/batik/bridge/SVGTextElementBridge/getTextBounds(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean)#java/lang/ref/SoftReference/get()
org/apache/batik/bridge/SVGTextElementBridge/getTextBounds(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean)#java/awt/geom/Rectangle2D/clone()
org/apache/batik/bridge/SVGTextElementBridge/getTextBounds(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean)#java/text/AttributedCharacterIterator/getAttribute(java.text.AttributedCharacterIterator$Attribute)
org/apache/batik/bridge/SVGTextElementBridge/getTextBounds(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean)#java/awt/geom/Rectangle2D/add(java.awt.geom.Rectangle2D)
org/apache/batik/bridge/SVGTextElementBridge/getTextBounds(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean)#java/text/AttributedCharacterIterator/first()
org/apache/batik/bridge/SVGTextElementBridge/getTextBounds(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean)#org/apache/batik/bridge/SVGTextElementBridge$AbstractTextChildSVGContext/getTextBridge()
org/apache/batik/bridge/SVGTextElementBridge/getTextBounds(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean)#org/apache/batik/bridge/StrokingTextPainter$TextRun/getLayout()
org/apache/batik/bridge/SVGTextElementBridge/getTextBounds(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean)#java/util/List/get(int)
org/apache/batik/bridge/SVGTextElementBridge/getFontList(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.util.Map)#org/apache/batik/css/engine/value/Value/getLength()
org/apache/batik/bridge/SVGTextElementBridge/getFontList(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.util.Map)#org/apache/batik/gvt/font/GVTFontFamily/deriveFont(float,java.util.Map)
org/apache/batik/bridge/SVGTextElementBridge/getFontList(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.util.Map)#java/lang/Float/floatValue()
org/apache/batik/bridge/SVGTextElementBridge/getFontList(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.util.Map)#java/util/List/add(java.lang.Object)
org/apache/batik/bridge/SVGTextElementBridge/getFontList(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.util.Map)#java/util/Map/remove(java.lang.Object)
org/apache/batik/bridge/SVGTextElementBridge/getFontList(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.util.Map)#org/apache/batik/gvt/font/GVTFontFamily/getFamilyName()
org/apache/batik/bridge/SVGTextElementBridge/getFontList(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.util.Map)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/batik/bridge/SVGTextElementBridge/getFontList(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.util.Map)#java/util/ArrayList/ArrayList()
org/apache/batik/bridge/SVGTextElementBridge/getFontList(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.util.Map)#org/apache/batik/css/engine/value/Value/getCssText()
org/apache/batik/bridge/SVGTextElementBridge/getFontList(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.util.Map)#org/apache/batik/gvt/font/GVTFontFamily/isComplex()
org/apache/batik/bridge/SVGTextElementBridge/getFontList(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.util.Map)#java/lang/ref/SoftReference/SoftReference(java.lang.Object)
org/apache/batik/bridge/SVGTextElementBridge/getFontList(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.util.Map)#org/apache/batik/css/engine/value/Value/getStringValue()
org/apache/batik/bridge/SVGTextElementBridge/getFontList(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.util.Map)#org/apache/batik/css/engine/value/Value/item(int)
org/apache/batik/bridge/SVGTextElementBridge/getTextIntersectionSet(java.awt.geom.AffineTransform,java.awt.geom.Rectangle2D)#java/awt/geom/Rectangle2D/intersects(java.awt.geom.Rectangle2D)
org/apache/batik/bridge/SVGTextElementBridge/getTextIntersectionSet(java.awt.geom.AffineTransform,java.awt.geom.Rectangle2D)#java/util/List/size()
org/apache/batik/bridge/SVGTextElementBridge/getTextIntersectionSet(java.awt.geom.AffineTransform,java.awt.geom.Rectangle2D)#org/apache/batik/bridge/StrokingTextPainter$TextRun/getACI()
org/apache/batik/bridge/SVGTextElementBridge/getTextIntersectionSet(java.awt.geom.AffineTransform,java.awt.geom.Rectangle2D)#org/apache/batik/gvt/font/GVTGlyphVector/getNumGlyphs()
org/apache/batik/bridge/SVGTextElementBridge/getTextIntersectionSet(java.awt.geom.AffineTransform,java.awt.geom.Rectangle2D)#org/apache/batik/gvt/font/GVTGlyphVector/getGlyphLogicalBounds(int)
org/apache/batik/bridge/SVGTextElementBridge/getTextIntersectionSet(java.awt.geom.AffineTransform,java.awt.geom.Rectangle2D)#java/util/Set/contains(java.lang.Object)
org/apache/batik/bridge/SVGTextElementBridge/getTextIntersectionSet(java.awt.geom.AffineTransform,java.awt.geom.Rectangle2D)#java/lang/ref/SoftReference/get()
org/apache/batik/bridge/SVGTextElementBridge/getTextIntersectionSet(java.awt.geom.AffineTransform,java.awt.geom.Rectangle2D)#java/text/AttributedCharacterIterator/first()
org/apache/batik/bridge/SVGTextElementBridge/getTextIntersectionSet(java.awt.geom.AffineTransform,java.awt.geom.Rectangle2D)#java/awt/geom/AffineTransform/createTransformedShape(java.awt.Shape)
org/apache/batik/bridge/SVGTextElementBridge/getTextIntersectionSet(java.awt.geom.AffineTransform,java.awt.geom.Rectangle2D)#java/awt/Shape/getBounds2D()
org/apache/batik/bridge/SVGTextElementBridge/getTextIntersectionSet(java.awt.geom.AffineTransform,java.awt.geom.Rectangle2D)#org/apache/batik/bridge/StrokingTextPainter$TextRun/getLayout()
org/apache/batik/bridge/SVGTextElementBridge/getTextIntersectionSet(java.awt.geom.AffineTransform,java.awt.geom.Rectangle2D)#java/util/List/get(int)
org/apache/batik/bridge/SVGTextElementBridge/getTextIntersectionSet(java.awt.geom.AffineTransform,java.awt.geom.Rectangle2D)#java/util/HashSet/HashSet()
org/apache/batik/bridge/SVGTextElementBridge/getTextIntersectionSet(java.awt.geom.AffineTransform,java.awt.geom.Rectangle2D)#java/util/Set/add(java.lang.Object)
org/apache/batik/bridge/SVGTextElementBridge/getTextIntersectionSet(java.awt.geom.AffineTransform,java.awt.geom.Rectangle2D)#java/awt/Shape/intersects(java.awt.geom.Rectangle2D)
org/apache/batik/bridge/SVGTextElementBridge/getTextIntersectionSet(java.awt.geom.AffineTransform,java.awt.geom.Rectangle2D)#java/text/AttributedCharacterIterator/getAttribute(java.text.AttributedCharacterIterator$Attribute)
org/apache/batik/bridge/SVGTextElementBridge/fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,org.apache.batik.gvt.text.TextPath,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer)#org/apache/batik/bridge/SVGTextElementBridge$AttributedStringBuffer/getLastChar()
org/apache/batik/bridge/SVGTextElementBridge/fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,org.apache.batik.gvt.text.TextPath,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer)#java/util/HashMap/HashMap(java.util.Map)
org/apache/batik/bridge/SVGTextElementBridge/fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,org.apache.batik.gvt.text.TextPath,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer)#org/w3c/dom/Node/getLocalName()
org/apache/batik/bridge/SVGTextElementBridge/fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,org.apache.batik.gvt.text.TextPath,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer)#java/lang/String/equals(java.lang.Object)
org/apache/batik/bridge/SVGTextElementBridge/fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,org.apache.batik.gvt.text.TextPath,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer)#org/w3c/dom/Node/getNamespaceURI()
org/apache/batik/bridge/SVGTextElementBridge/fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,org.apache.batik.gvt.text.TextPath,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer)#java/util/WeakHashMap/values()
org/apache/batik/bridge/SVGTextElementBridge/fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,org.apache.batik.gvt.text.TextPath,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer)#java/util/Collection/iterator()
org/apache/batik/bridge/SVGTextElementBridge/fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,org.apache.batik.gvt.text.TextPath,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer)#org/apache/batik/bridge/SVGTextElementBridge$AttributedStringBuffer/append(java.lang.String,java.util.Map)
org/apache/batik/bridge/SVGTextElementBridge/fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,org.apache.batik.gvt.text.TextPath,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer)#org/w3c/dom/Node/getNodeValue()
org/apache/batik/bridge/SVGTextElementBridge/fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,org.apache.batik.gvt.text.TextPath,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer)#org/apache/batik/bridge/SVGAElementBridge$CursorHolder/CursorHolder(java.awt.Cursor)
org/apache/batik/bridge/SVGTextElementBridge/fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,org.apache.batik.gvt.text.TextPath,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer)#org/apache/batik/dom/util/XLinkSupport/getXLinkHref(org.w3c.dom.Element)
org/apache/batik/bridge/SVGTextElementBridge/fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,org.apache.batik.gvt.text.TextPath,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer)#java/util/Iterator/hasNext()
org/apache/batik/bridge/SVGTextElementBridge/fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,org.apache.batik.gvt.text.TextPath,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer)#java/util/WeakHashMap/get(java.lang.Object)
org/apache/batik/bridge/SVGTextElementBridge/fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,org.apache.batik.gvt.text.TextPath,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer)#org/apache/batik/bridge/SVGTextElementBridge$AttributedStringBuffer/stripLast()
org/apache/batik/bridge/SVGTextElementBridge/fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,org.apache.batik.gvt.text.TextPath,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer)#java/lang/String/length()
org/apache/batik/bridge/SVGTextElementBridge/fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,org.apache.batik.gvt.text.TextPath,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer)#org/apache/batik/dom/events/NodeEventTarget/addEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean,java.lang.Object)
org/apache/batik/bridge/SVGTextElementBridge/fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,org.apache.batik.gvt.text.TextPath,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer)#java/util/Map/get(java.lang.Object)
org/apache/batik/bridge/SVGTextElementBridge/fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,org.apache.batik.gvt.text.TextPath,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer)#org/apache/batik/dom/util/XMLSupport/getXMLSpace(org.w3c.dom.Element)
org/apache/batik/bridge/SVGTextElementBridge/fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,org.apache.batik.gvt.text.TextPath,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer)#java/util/Iterator/next()
org/apache/batik/bridge/SVGTextElementBridge/fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,org.apache.batik.gvt.text.TextPath,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer)#java/util/HashMap/HashMap()
org/apache/batik/bridge/SVGTextElementBridge/fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,org.apache.batik.gvt.text.TextPath,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer)#org/apache/batik/bridge/SVGTextElementBridge$AttributedStringBuffer/length()
org/apache/batik/bridge/SVGTextElementBridge/fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,org.apache.batik.gvt.text.TextPath,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer)#org/apache/batik/bridge/SVGAElementBridge$AnchorListener/AnchorListener(org.apache.batik.bridge.UserAgent,org.apache.batik.bridge.SVGAElementBridge$CursorHolder)
org/apache/batik/bridge/SVGTextElementBridge/fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,org.apache.batik.gvt.text.TextPath,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer)#org/w3c/dom/Node/getNodeType()
org/apache/batik/bridge/SVGTextElementBridge/getTextIntersection(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.awt.geom.AffineTransform,java.awt.geom.Rectangle2D,boolean)#org/apache/batik/anim/dom/SVGOMElement/getSVGContext()
org/apache/batik/bridge/SVGTextElementBridge/getTextIntersection(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.awt.geom.AffineTransform,java.awt.geom.Rectangle2D,boolean)#java/awt/geom/Rectangle2D/intersects(java.awt.geom.Rectangle2D)
org/apache/batik/bridge/SVGTextElementBridge/getTextIntersection(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.awt.geom.AffineTransform,java.awt.geom.Rectangle2D,boolean)#java/awt/geom/AffineTransform/preConcatenate(java.awt.geom.AffineTransform)
org/apache/batik/bridge/SVGTextElementBridge/getTextIntersection(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.awt.geom.AffineTransform,java.awt.geom.Rectangle2D,boolean)#java/util/List/size()
org/apache/batik/bridge/SVGTextElementBridge/getTextIntersection(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.awt.geom.AffineTransform,java.awt.geom.Rectangle2D,boolean)#org/apache/batik/bridge/StrokingTextPainter$TextRun/getACI()
org/apache/batik/bridge/SVGTextElementBridge/getTextIntersection(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.awt.geom.AffineTransform,java.awt.geom.Rectangle2D,boolean)#org/apache/batik/gvt/font/GVTGlyphVector/getNumGlyphs()
org/apache/batik/bridge/SVGTextElementBridge/getTextIntersection(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.awt.geom.AffineTransform,java.awt.geom.Rectangle2D,boolean)#org/apache/batik/gvt/font/GVTGlyphVector/getGlyphLogicalBounds(int)
org/apache/batik/bridge/SVGTextElementBridge/getTextIntersection(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.awt.geom.AffineTransform,java.awt.geom.Rectangle2D,boolean)#java/lang/ref/SoftReference/get()
org/apache/batik/bridge/SVGTextElementBridge/getTextIntersection(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.awt.geom.AffineTransform,java.awt.geom.Rectangle2D,boolean)#java/awt/geom/AffineTransform/createTransformedShape(java.awt.Shape)
org/apache/batik/bridge/SVGTextElementBridge/getTextIntersection(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.awt.geom.AffineTransform,java.awt.geom.Rectangle2D,boolean)#java/awt/Shape/getBounds2D()
org/apache/batik/bridge/SVGTextElementBridge/getTextIntersection(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.awt.geom.AffineTransform,java.awt.geom.Rectangle2D,boolean)#org/apache/batik/bridge/SVGTextElementBridge$AbstractTextChildSVGContext/getTextBridge()
org/apache/batik/bridge/SVGTextElementBridge/getTextIntersection(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.awt.geom.AffineTransform,java.awt.geom.Rectangle2D,boolean)#java/text/AttributedCharacterIterator/first()
org/apache/batik/bridge/SVGTextElementBridge/getTextIntersection(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.awt.geom.AffineTransform,java.awt.geom.Rectangle2D,boolean)#org/apache/batik/bridge/TextNode/getGlobalTransform()
org/apache/batik/bridge/SVGTextElementBridge/getTextIntersection(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.awt.geom.AffineTransform,java.awt.geom.Rectangle2D,boolean)#org/apache/batik/bridge/StrokingTextPainter$TextRun/getLayout()
org/apache/batik/bridge/SVGTextElementBridge/getTextIntersection(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.awt.geom.AffineTransform,java.awt.geom.Rectangle2D,boolean)#java/util/List/get(int)
org/apache/batik/bridge/SVGTextElementBridge/getTextIntersection(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.awt.geom.AffineTransform,java.awt.geom.Rectangle2D,boolean)#org/apache/batik/bridge/TextNode/getBounds()
org/apache/batik/bridge/SVGTextElementBridge/getTextIntersection(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.awt.geom.AffineTransform,java.awt.geom.Rectangle2D,boolean)#java/awt/Shape/intersects(java.awt.geom.Rectangle2D)
org/apache/batik/bridge/SVGTextElementBridge/getTextIntersection(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.awt.geom.AffineTransform,java.awt.geom.Rectangle2D,boolean)#java/text/AttributedCharacterIterator/getAttribute(java.text.AttributedCharacterIterator$Attribute)
org/apache/batik/bridge/SVGFeDisplacementMapElementBridge/createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)#org/apache/batik/bridge/SVGFeDisplacementMapElementBridge/getIn(org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.util.Map,org.apache.batik.bridge.BridgeContext)
org/apache/batik/bridge/SVGFeDisplacementMapElementBridge/createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)#org/apache/batik/bridge/SVGFeDisplacementMapElementBridge/getIn2(org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.util.Map,org.apache.batik.bridge.BridgeContext)
org/apache/batik/bridge/SVGFeDisplacementMapElementBridge/createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)#org/apache/batik/bridge/SVGFeDisplacementMapElementBridge/convertNumber(org.w3c.dom.Element,java.lang.String,float,org.apache.batik.bridge.BridgeContext)
org/apache/batik/bridge/SVGFeDisplacementMapElementBridge/createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)#org/apache/batik/ext/awt/image/renderable/PadRable8Bit/PadRable8Bit(org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,org.apache.batik.ext.awt.image.PadMode)
org/apache/batik/bridge/SVGFeDisplacementMapElementBridge/createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)#java/awt/geom/Rectangle2D/clone()
org/apache/batik/bridge/SVGFeDisplacementMapElementBridge/createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)#java/util/List/add(java.lang.Object)
org/apache/batik/bridge/SVGFeDisplacementMapElementBridge/createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)#org/apache/batik/bridge/SVGFeDisplacementMapElementBridge/updateFilterMap(org.w3c.dom.Element,org.apache.batik.ext.awt.image.renderable.Filter,java.util.Map)
org/apache/batik/bridge/SVGFeDisplacementMapElementBridge/createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)#org/apache/batik/ext/awt/image/renderable/DisplacementMapRable8Bit/DisplacementMapRable8Bit(java.util.List,double,org.apache.batik.ext.awt.image.ARGBChannel,org.apache.batik.ext.awt.image.ARGBChannel)
org/apache/batik/bridge/SVGFeDisplacementMapElementBridge/createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)#java/awt/geom/Rectangle2D/add(java.awt.geom.Rectangle2D)
org/apache/batik/bridge/SVGFeDisplacementMapElementBridge/createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)#java/util/ArrayList/ArrayList(int)
org/apache/batik/bridge/SVGFeDisplacementMapElementBridge/createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)#org/apache/batik/ext/awt/image/renderable/Filter/getBounds2D()
org/apache/batik/bridge/SVGFeDisplacementMapElementBridge/createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)#org/apache/batik/bridge/SVGFeDisplacementMapElementBridge/handleColorInterpolationFilters(org.apache.batik.ext.awt.image.renderable.Filter,org.w3c.dom.Element)
org/apache/batik/bridge/ScriptingEnvironment/Window/parseXML(java.lang.String,org.w3c.dom.Document)#org/apache/batik/dom/util/DOMUtilities/parseXML(java.lang.String,org.w3c.dom.Document,java.lang.String,java.util.Map,java.lang.String,org.apache.batik.dom.util.SAXDocumentFactory)
org/apache/batik/bridge/ScriptingEnvironment/Window/parseXML(java.lang.String,org.w3c.dom.Document)#org/apache/batik/anim/dom/SVGOMDocument/getURLObject()
org/apache/batik/bridge/ScriptingEnvironment/Window/parseXML(java.lang.String,org.w3c.dom.Document)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/batik/bridge/ScriptingEnvironment/Window/parseXML(java.lang.String,org.w3c.dom.Document)#org/apache/batik/util/XMLResourceDescriptor/getXMLParserClassName()
org/apache/batik/bridge/ScriptingEnvironment/Window/parseXML(java.lang.String,org.w3c.dom.Document)#org/apache/batik/dom/util/SAXDocumentFactory/SAXDocumentFactory(org.w3c.dom.DOMImplementation,java.lang.String)
org/apache/batik/bridge/ScriptingEnvironment/Window/parseXML(java.lang.String,org.w3c.dom.Document)#java/net/URL/toString()
org/apache/batik/bridge/ScriptingEnvironment/Window/parseXML(java.lang.String,org.w3c.dom.Document)#org/w3c/dom/Document/getImplementation()
org/apache/batik/bridge/ScriptingEnvironment/Window/parseXML(java.lang.String,org.w3c.dom.Document)#java/util/HashMap/HashMap()
org/apache/batik/bridge/ScriptingEnvironment/Window/parseXML(java.lang.String,org.w3c.dom.Document)#org/apache/batik/dom/GenericDOMImplementation/GenericDOMImplementation()
org/apache/batik/bridge/ScriptingEnvironment/Window/parseXML(java.lang.String,org.w3c.dom.Document)#org/apache/batik/anim/dom/SAXSVGDocumentFactory/SAXSVGDocumentFactory(java.lang.String)
org/apache/batik/bridge/SVGMaskElementBridge/createMask(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode)#org/apache/batik/gvt/GraphicsNode/getFilter()
org/apache/batik/bridge/SVGMaskElementBridge/createMask(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode)#org/w3c/dom/Element/getFirstChild()
org/apache/batik/bridge/SVGMaskElementBridge/createMask(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode)#java/lang/String/length()
org/apache/batik/bridge/SVGMaskElementBridge/createMask(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode)#org/apache/batik/gvt/filter/MaskRable8Bit/MaskRable8Bit(org.apache.batik.ext.awt.image.renderable.Filter,org.apache.batik.gvt.GraphicsNode,java.awt.geom.Rectangle2D)
org/apache/batik/bridge/SVGMaskElementBridge/createMask(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode)#org/apache/batik/gvt/GraphicsNode/getGraphicsNodeRable(boolean)
org/apache/batik/bridge/SVGMaskElementBridge/createMask(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode)#org/apache/batik/gvt/CompositeGraphicsNode/setTransform(java.awt.geom.AffineTransform)
org/apache/batik/bridge/SVGMaskElementBridge/createMask(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode)#java/util/List/add(java.lang.Object)
org/apache/batik/bridge/SVGMaskElementBridge/createMask(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode)#java/awt/geom/AffineTransform/AffineTransform()
org/apache/batik/bridge/SVGMaskElementBridge/createMask(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode)#org/apache/batik/gvt/CompositeGraphicsNode/getChildren()
org/apache/batik/bridge/SVGMaskElementBridge/createMask(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode)#org/w3c/dom/Element/getAttributeNS(java.lang.String,java.lang.String)
org/apache/batik/bridge/SVGMaskElementBridge/createMask(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode)#org/w3c/dom/Node/getNextSibling()
org/apache/batik/bridge/SVGMaskElementBridge/createMask(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode)#org/apache/batik/gvt/CompositeGraphicsNode/CompositeGraphicsNode()
org/apache/batik/bridge/SVGMaskElementBridge/createMask(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode)#org/w3c/dom/Node/getNodeType()
org/apache/batik/bridge/SVGFontFaceElementBridge/getFontFaceSrcs(org.w3c.dom.Element)#org/w3c/dom/Node/getNextSibling()
org/apache/batik/bridge/SVGFontFaceElementBridge/getFontFaceSrcs(org.w3c.dom.Element)#org/apache/batik/dom/util/XLinkSupport/getXLinkHref(org.w3c.dom.Element)
org/apache/batik/bridge/SVGFontFaceElementBridge/getFontFaceSrcs(org.w3c.dom.Element)#org/w3c/dom/Node/getLocalName()
org/apache/batik/bridge/SVGFontFaceElementBridge/getFontFaceSrcs(org.w3c.dom.Element)#org/w3c/dom/Element/getFirstChild()
org/apache/batik/bridge/SVGFontFaceElementBridge/getFontFaceSrcs(org.w3c.dom.Element)#org/w3c/dom/Element/getAttribute(java.lang.String)
org/apache/batik/bridge/SVGFontFaceElementBridge/getFontFaceSrcs(org.w3c.dom.Element)#org/apache/batik/dom/AbstractNode/getBaseURI(org.w3c.dom.Node)
org/apache/batik/bridge/SVGFontFaceElementBridge/getFontFaceSrcs(org.w3c.dom.Element)#org/w3c/dom/Node/getNamespaceURI()
org/apache/batik/bridge/SVGFontFaceElementBridge/getFontFaceSrcs(org.w3c.dom.Element)#org/w3c/dom/Node/getNodeType()
org/apache/batik/bridge/SVGFontFaceElementBridge/getFontFaceSrcs(org.w3c.dom.Element)#java/lang/String/length()
org/apache/batik/bridge/SVGFontFaceElementBridge/getFontFaceSrcs(org.w3c.dom.Element)#org/apache/batik/util/ParsedURL/ParsedURL(java.lang.String)
org/apache/batik/bridge/SVGFontFaceElementBridge/getFontFaceSrcs(org.w3c.dom.Element)#java/lang/String/equals(java.lang.Object)
org/apache/batik/bridge/SVGFontFaceElementBridge/getFontFaceSrcs(org.w3c.dom.Element)#java/util/LinkedList/LinkedList()
org/apache/batik/bridge/SVGFontFaceElementBridge/getFontFaceSrcs(org.w3c.dom.Element)#org/apache/batik/util/ParsedURL/ParsedURL(java.lang.String,java.lang.String)
org/apache/batik/bridge/SVGFontFaceElementBridge/getFontFaceSrcs(org.w3c.dom.Element)#java/util/List/add(java.lang.Object)
org/apache/batik/bridge/SVGFeColorMatrixElementBridge/createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)#org/apache/batik/bridge/SVGFeColorMatrixElementBridge/getIn(org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.util.Map,org.apache.batik.bridge.BridgeContext)
org/apache/batik/bridge/SVGFeColorMatrixElementBridge/createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)#org/apache/batik/ext/awt/image/renderable/ColorMatrixRable8Bit/buildSaturate(float)
org/apache/batik/bridge/SVGFeColorMatrixElementBridge/createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)#java/lang/StringBuilder/append(java.lang.String)
org/apache/batik/bridge/SVGFeColorMatrixElementBridge/createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)#java/lang/StringBuilder/append(int)
org/apache/batik/bridge/SVGFeColorMatrixElementBridge/createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)#java/lang/Error/Error(java.lang.String)
org/apache/batik/bridge/SVGFeColorMatrixElementBridge/createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)#org/apache/batik/ext/awt/image/renderable/ColorMatrixRable8Bit/buildMatrix(float[][])
org/apache/batik/bridge/SVGFeColorMatrixElementBridge/createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)#org/apache/batik/ext/awt/image/renderable/PadRable8Bit/PadRable8Bit(org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,org.apache.batik.ext.awt.image.PadMode)
org/apache/batik/bridge/SVGFeColorMatrixElementBridge/createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)#java/lang/StringBuilder/StringBuilder()
org/apache/batik/bridge/SVGFeColorMatrixElementBridge/createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)#org/apache/batik/ext/awt/image/renderable/ColorMatrixRable8Bit/buildHueRotate(float)
org/apache/batik/bridge/SVGFeColorMatrixElementBridge/createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)#org/apache/batik/ext/awt/image/renderable/ColorMatrixRable/setSource(org.apache.batik.ext.awt.image.renderable.Filter)
org/apache/batik/bridge/SVGFeColorMatrixElementBridge/createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)#org/apache/batik/ext/awt/image/renderable/Filter/getBounds2D()
org/apache/batik/bridge/SVGFeColorMatrixElementBridge/createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)#org/apache/batik/bridge/SVGFeColorMatrixElementBridge/updateFilterMap(org.w3c.dom.Element,org.apache.batik.ext.awt.image.renderable.Filter,java.util.Map)
org/apache/batik/bridge/SVGFeColorMatrixElementBridge/createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)#java/lang/StringBuilder/toString()
org/apache/batik/bridge/SVGFeColorMatrixElementBridge/createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)#org/apache/batik/ext/awt/image/renderable/ColorMatrixRable8Bit/buildLuminanceToAlpha()
org/apache/batik/bridge/SVGFeColorMatrixElementBridge/createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)#org/apache/batik/bridge/SVGFeColorMatrixElementBridge/handleColorInterpolationFilters(org.apache.batik.ext.awt.image.renderable.Filter,org.w3c.dom.Element)
org/apache/batik/bridge/UpdateManager/<clinit>()#java/lang/System/getProperty(java.lang.String,java.lang.String)
org/apache/batik/bridge/UpdateManager/<clinit>()#org/apache/batik/bridge/UpdateManager$4/4()
org/apache/batik/bridge/UpdateManager/<clinit>()#org/apache/batik/bridge/UpdateManager$5/5()
org/apache/batik/bridge/UpdateManager/<clinit>()#org/apache/batik/bridge/UpdateManager$6/6()
org/apache/batik/bridge/UpdateManager/<clinit>()#org/apache/batik/bridge/UpdateManager$7/7()
org/apache/batik/bridge/UpdateManager/<clinit>()#org/apache/batik/bridge/UpdateManager$8/8()
org/apache/batik/bridge/UpdateManager/<clinit>()#org/apache/batik/bridge/UpdateManager$9/9()
org/apache/batik/bridge/UpdateManager/<clinit>()#java/lang/Integer/parseInt(java.lang.String)
org/apache/batik/bridge/UpdateManager/<clinit>()#org/apache/batik/bridge/UpdateManager$10/10()
org/apache/batik/bridge/SVGAnimateTransformElementBridge/parseValue(java.lang.String,short,org.apache.batik.anim.dom.AnimationTarget)#org/apache/batik/dom/svg/SVGOMTransform/setSkewY(float)
org/apache/batik/bridge/SVGAnimateTransformElementBridge/parseValue(java.lang.String,short,org.apache.batik.anim.dom.AnimationTarget)#org/apache/batik/anim/values/AnimatableTransformListValue/AnimatableTransformListValue(org.apache.batik.anim.dom.AnimationTarget,org.apache.batik.dom.svg.AbstractSVGTransform)
org/apache/batik/bridge/SVGAnimateTransformElementBridge/parseValue(java.lang.String,short,org.apache.batik.anim.dom.AnimationTarget)#java/lang/String/charAt(int)
org/apache/batik/bridge/SVGAnimateTransformElementBridge/parseValue(java.lang.String,short,org.apache.batik.anim.dom.AnimationTarget)#org/apache/batik/dom/svg/SVGOMTransform/SVGOMTransform()
org/apache/batik/bridge/SVGAnimateTransformElementBridge/parseValue(java.lang.String,short,org.apache.batik.anim.dom.AnimationTarget)#java/lang/String/length()
org/apache/batik/bridge/SVGAnimateTransformElementBridge/parseValue(java.lang.String,short,org.apache.batik.anim.dom.AnimationTarget)#org/apache/batik/dom/svg/SVGOMTransform/setRotate(float,float,float)
org/apache/batik/bridge/SVGAnimateTransformElementBridge/parseValue(java.lang.String,short,org.apache.batik.anim.dom.AnimationTarget)#java/lang/String/substring(int,int)
org/apache/batik/bridge/SVGAnimateTransformElementBridge/parseValue(java.lang.String,short,org.apache.batik.anim.dom.AnimationTarget)#org/apache/batik/dom/svg/SVGOMTransform/setTranslate(float,float)
org/apache/batik/bridge/SVGAnimateTransformElementBridge/parseValue(java.lang.String,short,org.apache.batik.anim.dom.AnimationTarget)#org/apache/batik/dom/svg/SVGOMTransform/setScale(float,float)
org/apache/batik/bridge/SVGAnimateTransformElementBridge/parseValue(java.lang.String,short,org.apache.batik.anim.dom.AnimationTarget)#java/lang/Float/parseFloat(java.lang.String)
org/apache/batik/bridge/SVGAnimateTransformElementBridge/parseValue(java.lang.String,short,org.apache.batik.anim.dom.AnimationTarget)#org/apache/batik/dom/svg/SVGOMTransform/setSkewX(float)
org/apache/batik/bridge/svg12/XBLContentElementBridge/buildCompositeGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.CompositeGraphicsNode)#org/apache/batik/gvt/CompositeGraphicsNode/remove(int)
org/apache/batik/bridge/svg12/XBLContentElementBridge/buildCompositeGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.CompositeGraphicsNode)#org/w3c/dom/Element/getOwnerDocument()
org/apache/batik/bridge/svg12/XBLContentElementBridge/buildCompositeGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.CompositeGraphicsNode)#org/apache/batik/dom/AbstractDocument/getXBLManager()
org/apache/batik/bridge/svg12/XBLContentElementBridge/buildCompositeGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.CompositeGraphicsNode)#org/apache/batik/bridge/svg12/XBLContentElementBridge/associateSVGContext(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode)
org/apache/batik/bridge/svg12/XBLContentElementBridge/buildCompositeGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.CompositeGraphicsNode)#org/apache/batik/bridge/svg12/XBLContentElementBridge$ContentChangedListener/ContentChangedListener(org.apache.batik.bridge.svg12.XBLContentElementBridge)
org/apache/batik/bridge/svg12/XBLContentElementBridge/buildCompositeGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.CompositeGraphicsNode)#org/apache/batik/gvt/CompositeGraphicsNode/add(java.lang.Object)
org/apache/batik/bridge/svg12/XBLContentElementBridge/buildCompositeGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.CompositeGraphicsNode)#org/w3c/dom/NodeList/item(int)
org/apache/batik/bridge/svg12/XBLContentElementBridge/buildCompositeGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.CompositeGraphicsNode)#org/w3c/dom/Node/getNodeType()
org/apache/batik/bridge/svg12/XBLContentElementBridge/buildCompositeGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.CompositeGraphicsNode)#org/apache/batik/gvt/CompositeGraphicsNode/CompositeGraphicsNode()
org/apache/batik/bridge/svg12/XBLContentElementBridge/buildCompositeGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.CompositeGraphicsNode)#org/w3c/dom/NodeList/getLength()
org/apache/batik/bridge/svg12/XBLContentElementBridge/buildCompositeGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.CompositeGraphicsNode)#org/apache/batik/gvt/CompositeGraphicsNode/size()
org/apache/batik/bridge/svg12/BindableElementBridge/buildCompositeGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.CompositeGraphicsNode)#org/apache/batik/gvt/CompositeGraphicsNode/remove(int)
org/apache/batik/bridge/svg12/BindableElementBridge/buildCompositeGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.CompositeGraphicsNode)#org/apache/batik/bridge/svg12/BindableElementBridge/associateSVGContext(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode)
org/apache/batik/bridge/svg12/BindableElementBridge/buildCompositeGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.CompositeGraphicsNode)#org/apache/batik/gvt/CompositeGraphicsNode/size()
org/apache/batik/bridge/svg12/BindableElementBridge/buildCompositeGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.CompositeGraphicsNode)#org/apache/batik/gvt/CompositeGraphicsNode/add(java.lang.Object)
org/apache/batik/bridge/svg12/BindableElementBridge/buildCompositeGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.CompositeGraphicsNode)#org/w3c/dom/Node/getNodeType()
org/apache/batik/bridge/svg12/BindableElementBridge/buildCompositeGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.CompositeGraphicsNode)#org/w3c/dom/Node/getNextSibling()
org/apache/batik/bridge/svg12/BindableElementBridge/buildCompositeGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.CompositeGraphicsNode)#org/apache/batik/gvt/CompositeGraphicsNode/CompositeGraphicsNode()
org/apache/batik/bridge/svg12/BindableElementBridge/buildCompositeGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.CompositeGraphicsNode)#org/apache/batik/anim/dom/BindableElement/getXblShadowTree()
org/apache/batik/bridge/svg12/BindableElementBridge/buildCompositeGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.CompositeGraphicsNode)#org/w3c/dom/Element/getFirstChild()
org/apache/batik/bridge/ScriptingEnvironment/Window/1/run()#org/apache/batik/util/EncodingUtilities/javaEncoding(java.lang.String)
org/apache/batik/bridge/ScriptingEnvironment/Window/1/run()#java/io/Reader/read(char[],int,int)
org/apache/batik/bridge/ScriptingEnvironment/Window/1/run()#org/apache/batik/util/RunnableQueue/invokeLater(java.lang.Runnable)
org/apache/batik/bridge/ScriptingEnvironment/Window/1/run()#org/apache/batik/bridge/ScriptingEnvironment$Window$1$2/2(org.apache.batik.bridge.ScriptingEnvironment$Window$1)
org/apache/batik/bridge/ScriptingEnvironment/Window/1/run()#org/apache/batik/bridge/ScriptingEnvironment$Window$1$1/1(org.apache.batik.bridge.ScriptingEnvironment$Window$1,org.apache.batik.util.ParsedURL,java.lang.StringBuffer)
org/apache/batik/bridge/ScriptingEnvironment/Window/1/run()#java/io/InputStreamReader/InputStreamReader(java.io.InputStream,java.lang.String)
org/apache/batik/bridge/ScriptingEnvironment/Window/1/run()#org/apache/batik/anim/dom/SVGOMDocument/getParsedURL()
org/apache/batik/bridge/ScriptingEnvironment/Window/1/run()#java/io/BufferedReader/BufferedReader(java.io.Reader)
org/apache/batik/bridge/ScriptingEnvironment/Window/1/run()#org/apache/batik/util/ParsedURL/ParsedURL(org.apache.batik.util.ParsedURL,java.lang.String)
org/apache/batik/bridge/ScriptingEnvironment/Window/1/run()#java/io/Reader/close()
org/apache/batik/bridge/ScriptingEnvironment/Window/1/run()#java/lang/StringBuffer/append(char[],int,int)
org/apache/batik/bridge/ScriptingEnvironment/Window/1/run()#java/io/InputStreamReader/InputStreamReader(java.io.InputStream)
org/apache/batik/bridge/ScriptingEnvironment/Window/1/run()#org/apache/batik/util/ParsedURL/openStream()
org/apache/batik/bridge/ScriptingEnvironment/Window/1/run()#java/lang/StringBuffer/StringBuffer()
org/apache/batik/bridge/SVGAnimationElementBridge/initializeAnimation()#org/w3c/dom/Node/getOwnerDocument()
org/apache/batik/bridge/SVGAnimationElementBridge/initializeAnimation()#org/apache/batik/anim/dom/SVGOMElement/getPropertyType(java.lang.String)
org/apache/batik/bridge/SVGAnimationElementBridge/initializeAnimation()#org/apache/batik/bridge/SVGAnimationEngine/addAnimation(org.apache.batik.anim.dom.AnimationTarget,short,java.lang.String,java.lang.String,org.apache.batik.anim.AbstractAnimation)
org/apache/batik/bridge/SVGAnimationElementBridge/initializeAnimation()#org/apache/batik/anim/dom/SVGOMElement/getNodeName()
org/apache/batik/bridge/SVGAnimationElementBridge/initializeAnimation()#org/apache/batik/anim/dom/SVGOMElement/getAttributeType(java.lang.String,java.lang.String)
org/apache/batik/bridge/SVGAnimationElementBridge/initializeAnimation()#org/apache/batik/anim/dom/SVGOMElement/isAttributeAnimatable(java.lang.String,java.lang.String)
org/apache/batik/bridge/SVGAnimationElementBridge/initializeAnimation()#java/lang/String/substring(int,int)
org/apache/batik/bridge/SVGAnimationElementBridge/initializeAnimation()#org/apache/batik/anim/dom/SVGOMElement/lookupNamespaceURI(java.lang.String)
org/apache/batik/bridge/SVGAnimationElementBridge/initializeAnimation()#java/lang/String/indexOf(int)
org/apache/batik/bridge/SVGAnimationElementBridge/initializeAnimation()#org/apache/batik/anim/dom/SVGOMElement/getParentNode()
org/apache/batik/bridge/SVGAnimationElementBridge/initializeAnimation()#org/apache/batik/dom/util/XLinkSupport/getXLinkHref(org.w3c.dom.Element)
org/apache/batik/bridge/SVGAnimationElementBridge/initializeAnimation()#org/apache/batik/anim/dom/SVGOMElement/hasProperty(java.lang.String)
org/apache/batik/bridge/SVGAnimationElementBridge/initializeAnimation()#org/apache/batik/anim/dom/SVGOMElement/isPropertyAnimatable(java.lang.String)
org/apache/batik/bridge/SVGAnimationElementBridge/initializeAnimation()#java/lang/String/length()
org/apache/batik/bridge/SVGAnimationElementBridge/initializeAnimation()#org/apache/batik/anim/dom/SVGOMElement/getOwnerDocument()
org/apache/batik/bridge/SVGAnimationElementBridge/initializeAnimation()#java/lang/String/substring(int)
org/apache/batik/bridge/SVGAnimationElementBridge/initializeAnimation()#org/apache/batik/anim/dom/SVGOMElement/getAttributeNS(java.lang.String,java.lang.String)
org/apache/batik/bridge/SVGFontUtilities/getFontFamily(org.w3c.dom.Element,org.apache.batik.bridge.BridgeContext,java.lang.String,java.lang.String,java.lang.String)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/batik/bridge/SVGFontUtilities/getFontFamily(org.w3c.dom.Element,org.apache.batik.bridge.BridgeContext,java.lang.String,java.lang.String,java.lang.String)#java/util/ArrayList/ArrayList(int)
org/apache/batik/bridge/SVGFontUtilities/getFontFamily(org.w3c.dom.Element,org.apache.batik.bridge.BridgeContext,java.lang.String,java.lang.String,java.lang.String)#java/util/ArrayList/ArrayList(java.util.Collection)
org/apache/batik/bridge/SVGFontUtilities/getFontFamily(org.w3c.dom.Element,org.apache.batik.bridge.BridgeContext,java.lang.String,java.lang.String,java.lang.String)#java/util/Iterator/next()
org/apache/batik/bridge/SVGFontUtilities/getFontFamily(org.w3c.dom.Element,org.apache.batik.bridge.BridgeContext,java.lang.String,java.lang.String,java.lang.String)#java/lang/Integer/parseInt(java.lang.String)
org/apache/batik/bridge/SVGFontUtilities/getFontFamily(org.w3c.dom.Element,org.apache.batik.bridge.BridgeContext,java.lang.String,java.lang.String,java.lang.String)#java/util/List/add(java.lang.Object)
org/apache/batik/bridge/SVGFontUtilities/getFontFamily(org.w3c.dom.Element,org.apache.batik.bridge.BridgeContext,java.lang.String,java.lang.String,java.lang.String)#java/util/List/get(int)
org/apache/batik/bridge/SVGFontUtilities/getFontFamily(org.w3c.dom.Element,org.apache.batik.bridge.BridgeContext,java.lang.String,java.lang.String,java.lang.String)#java/util/StringTokenizer/nextToken()
org/apache/batik/bridge/SVGFontUtilities/getFontFamily(org.w3c.dom.Element,org.apache.batik.bridge.BridgeContext,java.lang.String,java.lang.String,java.lang.String)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/batik/bridge/SVGFontUtilities/getFontFamily(org.w3c.dom.Element,org.apache.batik.bridge.BridgeContext,java.lang.String,java.lang.String,java.lang.String)#java/util/StringTokenizer/hasMoreTokens()
org/apache/batik/bridge/SVGFontUtilities/getFontFamily(org.w3c.dom.Element,org.apache.batik.bridge.BridgeContext,java.lang.String,java.lang.String,java.lang.String)#java/lang/Math/abs(int)
org/apache/batik/bridge/SVGFontUtilities/getFontFamily(org.w3c.dom.Element,org.apache.batik.bridge.BridgeContext,java.lang.String,java.lang.String,java.lang.String)#org/w3c/dom/Element/getOwnerDocument()
org/apache/batik/bridge/SVGFontUtilities/getFontFamily(org.w3c.dom.Element,org.apache.batik.bridge.BridgeContext,java.lang.String,java.lang.String,java.lang.String)#org/apache/batik/gvt/font/UnresolvedFontFamily/UnresolvedFontFamily(java.lang.String)
org/apache/batik/bridge/SVGFontUtilities/getFontFamily(org.w3c.dom.Element,org.apache.batik.bridge.BridgeContext,java.lang.String,java.lang.String,java.lang.String)#java/util/Iterator/hasNext()
org/apache/batik/bridge/SVGFontUtilities/getFontFamily(org.w3c.dom.Element,org.apache.batik.bridge.BridgeContext,java.lang.String,java.lang.String,java.lang.String)#java/lang/String/toLowerCase()
org/apache/batik/bridge/SVGFontUtilities/getFontFamily(org.w3c.dom.Element,org.apache.batik.bridge.BridgeContext,java.lang.String,java.lang.String,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/apache/batik/bridge/SVGFontUtilities/getFontFamily(org.w3c.dom.Element,org.apache.batik.bridge.BridgeContext,java.lang.String,java.lang.String,java.lang.String)#java/util/StringTokenizer/StringTokenizer(java.lang.String,java.lang.String)
org/apache/batik/bridge/SVGFontUtilities/getFontFamily(org.w3c.dom.Element,org.apache.batik.bridge.BridgeContext,java.lang.String,java.lang.String,java.lang.String)#java/util/Map/get(java.lang.Object)
org/apache/batik/bridge/SVGFontUtilities/getFontFamily(org.w3c.dom.Element,org.apache.batik.bridge.BridgeContext,java.lang.String,java.lang.String,java.lang.String)#java/util/List/size()
org/apache/batik/bridge/SVGFontUtilities/getFontFamily(org.w3c.dom.Element,org.apache.batik.bridge.BridgeContext,java.lang.String,java.lang.String,java.lang.String)#java/lang/String/equals(java.lang.Object)
org/apache/batik/bridge/SVGFontUtilities/getFontFamily(org.w3c.dom.Element,org.apache.batik.bridge.BridgeContext,java.lang.String,java.lang.String,java.lang.String)#java/util/LinkedList/LinkedList()
org/apache/batik/bridge/SVGFontUtilities/getFontFamily(org.w3c.dom.Element,org.apache.batik.bridge.BridgeContext,java.lang.String,java.lang.String,java.lang.String)#org/apache/batik/gvt/font/GVTFontFace/getFontWeight()
org/apache/batik/bridge/SVGFontUtilities/getFontFamily(org.w3c.dom.Element,org.apache.batik.bridge.BridgeContext,java.lang.String,java.lang.String,java.lang.String)#org/apache/batik/bridge/FontFace/getFontStyle()
org/apache/batik/bridge/SVGFontUtilities/getFontFamily(org.w3c.dom.Element,org.apache.batik.bridge.BridgeContext,java.lang.String,java.lang.String,java.lang.String)#org/apache/batik/bridge/FontFace/hasFamilyName(java.lang.String)
org/apache/batik/bridge/SVGFontUtilities/getFontFamily(org.w3c.dom.Element,org.apache.batik.bridge.BridgeContext,java.lang.String,java.lang.String,java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/apache/batik/bridge/SVGFontUtilities/getFontFamily(org.w3c.dom.Element,org.apache.batik.bridge.BridgeContext,java.lang.String,java.lang.String,java.lang.String)#java/lang/String/indexOf(java.lang.String)
org/apache/batik/bridge/SVGFontUtilities/getFontFamily(org.w3c.dom.Element,org.apache.batik.bridge.BridgeContext,java.lang.String,java.lang.String,java.lang.String)#java/util/List/iterator()
org/apache/batik/bridge/SVGFontUtilities/getFontFamily(org.w3c.dom.Element,org.apache.batik.bridge.BridgeContext,java.lang.String,java.lang.String,java.lang.String)#java/util/List/set(int,java.lang.Object)
org/apache/batik/bridge/SVGFontUtilities/getFontFamily(org.w3c.dom.Element,org.apache.batik.bridge.BridgeContext,java.lang.String,java.lang.String,java.lang.String)#java/lang/StringBuilder/toString()
org/apache/batik/bridge/SVGFontUtilities/getFontFamily(org.w3c.dom.Element,org.apache.batik.bridge.BridgeContext,java.lang.String,java.lang.String,java.lang.String)#org/apache/batik/gvt/font/GVTFontFamily/getFontFace()
org/apache/batik/bridge/SVGFontUtilities/getFontFamily(org.w3c.dom.Element,org.apache.batik.bridge.BridgeContext,java.lang.String,java.lang.String,java.lang.String)#java/lang/String/valueOf(int)
org/apache/batik/bridge/SVGFontUtilities/getFontFaces(org.w3c.dom.Document,org.apache.batik.bridge.BridgeContext)#org/w3c/dom/Document/getElementsByTagNameNS(java.lang.String,java.lang.String)
org/apache/batik/bridge/SVGFontUtilities/getFontFaces(org.w3c.dom.Document,org.apache.batik.bridge.BridgeContext)#java/util/Iterator/hasNext()
org/apache/batik/bridge/SVGFontUtilities/getFontFaces(org.w3c.dom.Document,org.apache.batik.bridge.BridgeContext)#org/w3c/dom/NodeList/getLength()
org/apache/batik/bridge/SVGFontUtilities/getFontFaces(org.w3c.dom.Document,org.apache.batik.bridge.BridgeContext)#org/apache/batik/css/engine/CSSEngine/getFontFaces()
org/apache/batik/bridge/SVGFontUtilities/getFontFaces(org.w3c.dom.Document,org.apache.batik.bridge.BridgeContext)#java/util/Map/get(java.lang.Object)
org/apache/batik/bridge/SVGFontUtilities/getFontFaces(org.w3c.dom.Document,org.apache.batik.bridge.BridgeContext)#java/util/Iterator/next()
org/apache/batik/bridge/SVGFontUtilities/getFontFaces(org.w3c.dom.Document,org.apache.batik.bridge.BridgeContext)#java/util/LinkedList/LinkedList()
org/apache/batik/bridge/SVGFontUtilities/getFontFaces(org.w3c.dom.Document,org.apache.batik.bridge.BridgeContext)#java/util/List/add(java.lang.Object)
org/apache/batik/bridge/SVGFontUtilities/getFontFaces(org.w3c.dom.Document,org.apache.batik.bridge.BridgeContext)#org/apache/batik/anim/dom/SVGOMDocument/getCSSEngine()
org/apache/batik/bridge/SVGFontUtilities/getFontFaces(org.w3c.dom.Document,org.apache.batik.bridge.BridgeContext)#org/w3c/dom/NodeList/item(int)
org/apache/batik/bridge/SVGFontUtilities/getFontFaces(org.w3c.dom.Document,org.apache.batik.bridge.BridgeContext)#java/util/List/iterator()
org/apache/batik/bridge/BridgeEventSupport/Listener/dispatchKeyEvent(java.lang.String,org.apache.batik.gvt.event.GraphicsNodeKeyEvent)#org/apache/batik/gvt/event/GraphicsNodeKeyEvent/isAltDown()
org/apache/batik/bridge/BridgeEventSupport/Listener/dispatchKeyEvent(java.lang.String,org.apache.batik.gvt.event.GraphicsNodeKeyEvent)#org/apache/batik/gvt/event/GraphicsNodeKeyEvent/getKeyCode()
org/apache/batik/bridge/BridgeEventSupport/Listener/dispatchKeyEvent(java.lang.String,org.apache.batik.gvt.event.GraphicsNodeKeyEvent)#org/w3c/dom/events/DocumentEvent/createEvent(java.lang.String)
org/apache/batik/bridge/BridgeEventSupport/Listener/dispatchKeyEvent(java.lang.String,org.apache.batik.gvt.event.GraphicsNodeKeyEvent)#org/apache/batik/gvt/event/GraphicsNodeKeyEvent/getKeyChar()
org/apache/batik/bridge/BridgeEventSupport/Listener/dispatchKeyEvent(java.lang.String,org.apache.batik.gvt.event.GraphicsNodeKeyEvent)#org/w3c/dom/Document/getDocumentElement()
org/apache/batik/bridge/BridgeEventSupport/Listener/dispatchKeyEvent(java.lang.String,org.apache.batik.gvt.event.GraphicsNodeKeyEvent)#org/apache/batik/gvt/event/GraphicsNodeKeyEvent/isShiftDown()
org/apache/batik/bridge/BridgeEventSupport/Listener/dispatchKeyEvent(java.lang.String,org.apache.batik.gvt.event.GraphicsNodeKeyEvent)#org/apache/batik/bridge/BridgeEventSupport$Listener/mapKeyCode(int)
org/apache/batik/bridge/BridgeEventSupport/Listener/dispatchKeyEvent(java.lang.String,org.apache.batik.gvt.event.GraphicsNodeKeyEvent)#org/apache/batik/gvt/event/GraphicsNodeKeyEvent/isMetaDown()
org/apache/batik/bridge/BridgeEventSupport/Listener/dispatchKeyEvent(java.lang.String,org.apache.batik.gvt.event.GraphicsNodeKeyEvent)#org/w3c/dom/Element/getOwnerDocument()
org/apache/batik/bridge/BridgeEventSupport/Listener/dispatchKeyEvent(java.lang.String,org.apache.batik.gvt.event.GraphicsNodeKeyEvent)#org/apache/batik/dom/events/DOMKeyEvent/initKeyEvent(java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,int,int,org.w3c.dom.views.AbstractView)
org/apache/batik/bridge/BridgeEventSupport/Listener/dispatchKeyEvent(java.lang.String,org.apache.batik.gvt.event.GraphicsNodeKeyEvent)#org/apache/batik/gvt/event/GraphicsNodeKeyEvent/isControlDown()
org/apache/batik/bridge/BridgeEventSupport/Listener/dispatchKeyEvent(java.lang.String,org.apache.batik.gvt.event.GraphicsNodeKeyEvent)#org/w3c/dom/events/EventTarget/dispatchEvent(org.w3c.dom.events.Event)
org/apache/batik/bridge/BridgeEventSupport/Listener/getEventTarget(org.apache.batik.gvt.GraphicsNode,java.awt.geom.Point2D)#java/util/List/size()
org/apache/batik/bridge/BridgeEventSupport/Listener/getEventTarget(org.apache.batik.gvt.GraphicsNode,java.awt.geom.Point2D)#org/apache/batik/bridge/StrokingTextPainter$TextRun/getACI()
org/apache/batik/bridge/BridgeEventSupport/Listener/getEventTarget(org.apache.batik.gvt.GraphicsNode,java.awt.geom.Point2D)#java/lang/ref/SoftReference/get()
org/apache/batik/bridge/BridgeEventSupport/Listener/getEventTarget(org.apache.batik.gvt.GraphicsNode,java.awt.geom.Point2D)#org/apache/batik/bridge/StrokingTextPainter$TextRun/getLayout()
org/apache/batik/bridge/BridgeEventSupport/Listener/getEventTarget(org.apache.batik.gvt.GraphicsNode,java.awt.geom.Point2D)#java/util/List/get(int)
org/apache/batik/bridge/BridgeEventSupport/Listener/getEventTarget(org.apache.batik.gvt.GraphicsNode,java.awt.geom.Point2D)#java/awt/geom/Point2D/getX()
org/apache/batik/bridge/BridgeEventSupport/Listener/getEventTarget(org.apache.batik.gvt.GraphicsNode,java.awt.geom.Point2D)#java/awt/geom/Rectangle2D/contains(double,double)
org/apache/batik/bridge/BridgeEventSupport/Listener/getEventTarget(org.apache.batik.gvt.GraphicsNode,java.awt.geom.Point2D)#java/awt/geom/Point2D/getY()
org/apache/batik/bridge/BridgeEventSupport/Listener/getEventTarget(org.apache.batik.gvt.GraphicsNode,java.awt.geom.Point2D)#java/text/AttributedCharacterIterator/getAttribute(java.text.AttributedCharacterIterator$Attribute)
org/apache/batik/bridge/BridgeEventSupport/Listener/dispatchMouseEvent(java.lang.String,org.w3c.dom.Element,org.w3c.dom.Element,java.awt.Point,org.apache.batik.gvt.event.GraphicsNodeMouseEvent,boolean)#org/apache/batik/gvt/event/GraphicsNodeMouseEvent/getModifiers()
org/apache/batik/bridge/BridgeEventSupport/Listener/dispatchMouseEvent(java.lang.String,org.w3c.dom.Element,org.w3c.dom.Element,java.awt.Point,org.apache.batik.gvt.event.GraphicsNodeMouseEvent,boolean)#org/apache/batik/gvt/event/GraphicsNodeMouseEvent/getButton()
org/apache/batik/bridge/BridgeEventSupport/Listener/dispatchMouseEvent(java.lang.String,org.w3c.dom.Element,org.w3c.dom.Element,java.awt.Point,org.apache.batik.gvt.event.GraphicsNodeMouseEvent,boolean)#org/w3c/dom/Element/getOwnerDocument()
org/apache/batik/bridge/BridgeEventSupport/Listener/dispatchMouseEvent(java.lang.String,org.w3c.dom.Element,org.w3c.dom.Element,java.awt.Point,org.apache.batik.gvt.event.GraphicsNodeMouseEvent,boolean)#org/apache/batik/gvt/event/GraphicsNodeMouseEvent/getScreenPoint()
org/apache/batik/bridge/BridgeEventSupport/Listener/dispatchMouseEvent(java.lang.String,org.w3c.dom.Element,org.w3c.dom.Element,java.awt.Point,org.apache.batik.gvt.event.GraphicsNodeMouseEvent,boolean)#org/apache/batik/gvt/event/GraphicsNodeMouseEvent/getLockState()
org/apache/batik/bridge/BridgeEventSupport/Listener/dispatchMouseEvent(java.lang.String,org.w3c.dom.Element,org.w3c.dom.Element,java.awt.Point,org.apache.batik.gvt.event.GraphicsNodeMouseEvent,boolean)#org/w3c/dom/events/DocumentEvent/createEvent(java.lang.String)
org/apache/batik/bridge/BridgeEventSupport/Listener/dispatchMouseEvent(java.lang.String,org.w3c.dom.Element,org.w3c.dom.Element,java.awt.Point,org.apache.batik.gvt.event.GraphicsNodeMouseEvent,boolean)#org/apache/batik/gvt/event/GraphicsNodeMouseEvent/getClickCount()
org/apache/batik/bridge/BridgeEventSupport/Listener/dispatchMouseEvent(java.lang.String,org.w3c.dom.Element,org.w3c.dom.Element,java.awt.Point,org.apache.batik.gvt.event.GraphicsNodeMouseEvent,boolean)#org/apache/batik/dom/events/DOMMouseEvent/initMouseEventNS(java.lang.String,java.lang.String,boolean,boolean,org.w3c.dom.views.AbstractView,int,int,int,int,int,short,org.w3c.dom.events.EventTarget,java.lang.String)
org/apache/batik/bridge/BridgeEventSupport/Listener/dispatchMouseEvent(java.lang.String,org.w3c.dom.Element,org.w3c.dom.Element,java.awt.Point,org.apache.batik.gvt.event.GraphicsNodeMouseEvent,boolean)#org/apache/batik/dom/util/DOMUtilities/getModifiersList(int,int)
org/apache/batik/bridge/BridgeEventSupport/Listener/dispatchMouseEvent(java.lang.String,org.w3c.dom.Element,org.w3c.dom.Element,java.awt.Point,org.apache.batik.gvt.event.GraphicsNodeMouseEvent,boolean)#org/w3c/dom/events/EventTarget/dispatchEvent(org.w3c.dom.events.Event)
org/apache/batik/bridge/SVGSVGElementBridge/checkIntersection(org.w3c.dom.Element,org.w3c.dom.svg.SVGRect)#org/apache/batik/anim/dom/SVGOMElement/getSVGContext()
org/apache/batik/bridge/SVGSVGElementBridge/checkIntersection(org.w3c.dom.Element,org.w3c.dom.svg.SVGRect)#org/w3c/dom/svg/SVGRect/getHeight()
org/apache/batik/bridge/SVGSVGElementBridge/checkIntersection(org.w3c.dom.Element,org.w3c.dom.svg.SVGRect)#java/awt/geom/Rectangle2D/intersects(java.awt.geom.Rectangle2D)
org/apache/batik/bridge/SVGSVGElementBridge/checkIntersection(org.w3c.dom.Element,org.w3c.dom.svg.SVGRect)#java/awt/Shape/getBounds2D()
org/apache/batik/bridge/SVGSVGElementBridge/checkIntersection(org.w3c.dom.Element,org.w3c.dom.svg.SVGRect)#java/awt/geom/AffineTransform/preConcatenate(java.awt.geom.AffineTransform)
org/apache/batik/bridge/SVGSVGElementBridge/checkIntersection(org.w3c.dom.Element,org.w3c.dom.svg.SVGRect)#org/apache/batik/gvt/ShapeNode/getSensitiveArea()
org/apache/batik/bridge/SVGSVGElementBridge/checkIntersection(org.w3c.dom.Element,org.w3c.dom.svg.SVGRect)#org/w3c/dom/svg/SVGRect/getX()
org/apache/batik/bridge/SVGSVGElementBridge/checkIntersection(org.w3c.dom.Element,org.w3c.dom.svg.SVGRect)#org/w3c/dom/svg/SVGRect/getY()
org/apache/batik/bridge/SVGSVGElementBridge/checkIntersection(org.w3c.dom.Element,org.w3c.dom.svg.SVGRect)#java/awt/geom/Rectangle2D$Float/Float(float,float,float,float)
org/apache/batik/bridge/SVGSVGElementBridge/checkIntersection(org.w3c.dom.Element,org.w3c.dom.svg.SVGRect)#org/apache/batik/gvt/GraphicsNode/getGlobalTransform()
org/apache/batik/bridge/SVGSVGElementBridge/checkIntersection(org.w3c.dom.Element,org.w3c.dom.svg.SVGRect)#java/awt/geom/AffineTransform/createTransformedShape(java.awt.Shape)
org/apache/batik/bridge/SVGSVGElementBridge/checkIntersection(org.w3c.dom.Element,org.w3c.dom.svg.SVGRect)#java/awt/geom/AffineTransform/createInverse()
org/apache/batik/bridge/SVGSVGElementBridge/checkIntersection(org.w3c.dom.Element,org.w3c.dom.svg.SVGRect)#org/apache/batik/gvt/GraphicsNode/getSensitiveBounds()
org/apache/batik/bridge/SVGSVGElementBridge/checkIntersection(org.w3c.dom.Element,org.w3c.dom.svg.SVGRect)#org/w3c/dom/svg/SVGRect/getWidth()
org/apache/batik/bridge/SVGSVGElementBridge/checkIntersection(org.w3c.dom.Element,org.w3c.dom.svg.SVGRect)#java/awt/Shape/intersects(java.awt.geom.Rectangle2D)
org/apache/batik/bridge/SVGSVGElementBridge/getIntersectionList(org.w3c.dom.svg.SVGRect,org.w3c.dom.Element)#org/apache/batik/anim/dom/SVGOMElement/getSVGContext()
org/apache/batik/bridge/SVGSVGElementBridge/getIntersectionList(org.w3c.dom.svg.SVGRect,org.w3c.dom.Element)#org/w3c/dom/svg/SVGRect/getHeight()
org/apache/batik/bridge/SVGSVGElementBridge/getIntersectionList(org.w3c.dom.svg.SVGRect,org.w3c.dom.Element)#java/awt/geom/Rectangle2D/intersects(java.awt.geom.Rectangle2D)
org/apache/batik/bridge/SVGSVGElementBridge/getIntersectionList(org.w3c.dom.svg.SVGRect,org.w3c.dom.Element)#java/awt/geom/AffineTransform/preConcatenate(java.awt.geom.AffineTransform)
org/apache/batik/bridge/SVGSVGElementBridge/getIntersectionList(org.w3c.dom.svg.SVGRect,org.w3c.dom.Element)#org/w3c/dom/Element/getNamespaceURI()
org/apache/batik/bridge/SVGSVGElementBridge/getIntersectionList(org.w3c.dom.svg.SVGRect,org.w3c.dom.Element)#java/lang/String/equals(java.lang.Object)
org/apache/batik/bridge/SVGSVGElementBridge/getIntersectionList(org.w3c.dom.svg.SVGRect,org.w3c.dom.Element)#java/util/Set/contains(java.lang.Object)
org/apache/batik/bridge/SVGSVGElementBridge/getIntersectionList(org.w3c.dom.svg.SVGRect,org.w3c.dom.Element)#java/awt/geom/Rectangle2D$Float/Float(float,float,float,float)
org/apache/batik/bridge/SVGSVGElementBridge/getIntersectionList(org.w3c.dom.svg.SVGRect,org.w3c.dom.Element)#org/w3c/dom/svg/SVGRect/getWidth()
org/apache/batik/bridge/SVGSVGElementBridge/getIntersectionList(org.w3c.dom.svg.SVGRect,org.w3c.dom.Element)#org/w3c/dom/Node/getNextSibling()
org/apache/batik/bridge/SVGSVGElementBridge/getIntersectionList(org.w3c.dom.svg.SVGRect,org.w3c.dom.Element)#java/util/ArrayList/ArrayList()
org/apache/batik/bridge/SVGSVGElementBridge/getIntersectionList(org.w3c.dom.svg.SVGRect,org.w3c.dom.Element)#java/awt/Shape/getBounds2D()
org/apache/batik/bridge/SVGSVGElementBridge/getIntersectionList(org.w3c.dom.svg.SVGRect,org.w3c.dom.Element)#org/w3c/dom/Element/getFirstChild()
org/apache/batik/bridge/SVGSVGElementBridge/getIntersectionList(org.w3c.dom.svg.SVGRect,org.w3c.dom.Element)#org/w3c/dom/Element/getLocalName()
org/apache/batik/bridge/SVGSVGElementBridge/getIntersectionList(org.w3c.dom.svg.SVGRect,org.w3c.dom.Element)#org/apache/batik/gvt/ShapeNode/getSensitiveArea()
org/apache/batik/bridge/SVGSVGElementBridge/getIntersectionList(org.w3c.dom.svg.SVGRect,org.w3c.dom.Element)#org/w3c/dom/svg/SVGRect/getX()
org/apache/batik/bridge/SVGSVGElementBridge/getIntersectionList(org.w3c.dom.svg.SVGRect,org.w3c.dom.Element)#org/w3c/dom/svg/SVGRect/getY()
org/apache/batik/bridge/SVGSVGElementBridge/getIntersectionList(org.w3c.dom.svg.SVGRect,org.w3c.dom.Element)#java/util/List/addAll(java.util.Collection)
org/apache/batik/bridge/SVGSVGElementBridge/getIntersectionList(org.w3c.dom.svg.SVGRect,org.w3c.dom.Element)#java/util/List/add(java.lang.Object)
org/apache/batik/bridge/SVGSVGElementBridge/getIntersectionList(org.w3c.dom.svg.SVGRect,org.w3c.dom.Element)#org/apache/batik/gvt/GraphicsNode/getGlobalTransform()
org/apache/batik/bridge/SVGSVGElementBridge/getIntersectionList(org.w3c.dom.svg.SVGRect,org.w3c.dom.Element)#java/awt/geom/AffineTransform/createInverse()
org/apache/batik/bridge/SVGSVGElementBridge/getIntersectionList(org.w3c.dom.svg.SVGRect,org.w3c.dom.Element)#org/apache/batik/gvt/GraphicsNode/getSensitiveBounds()
org/apache/batik/bridge/SVGSVGElementBridge/getIntersectionList(org.w3c.dom.svg.SVGRect,org.w3c.dom.Element)#java/awt/geom/AffineTransform/createTransformedShape(java.awt.Shape)
org/apache/batik/bridge/SVGSVGElementBridge/getIntersectionList(org.w3c.dom.svg.SVGRect,org.w3c.dom.Element)#java/awt/geom/Rectangle2D/contains(java.awt.geom.Rectangle2D)
org/apache/batik/bridge/SVGSVGElementBridge/getIntersectionList(org.w3c.dom.svg.SVGRect,org.w3c.dom.Element)#java/awt/Shape/intersects(java.awt.geom.Rectangle2D)
org/apache/batik/bridge/SVGSVGElementBridge/createGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)#org/w3c/dom/Element/getOwnerDocument()
org/apache/batik/bridge/SVGSVGElementBridge/createGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)#java/awt/geom/AffineTransform/getScaleY()
org/apache/batik/bridge/SVGSVGElementBridge/createGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)#org/apache/batik/anim/dom/SVGOMSVGElement/getX()
org/apache/batik/bridge/SVGSVGElementBridge/createGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)#java/awt/geom/AffineTransform/concatenate(java.awt.geom.AffineTransform)
org/apache/batik/bridge/SVGSVGElementBridge/createGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)#org/apache/batik/anim/dom/SVGOMAnimatedRect/getAnimVal()
org/apache/batik/bridge/SVGSVGElementBridge/createGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)#org/apache/batik/anim/dom/AbstractSVGAnimatedLength/getCheckedValue()
org/apache/batik/bridge/SVGSVGElementBridge/createGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)#org/apache/batik/anim/dom/SVGOMSVGElement/getPreserveAspectRatio()
org/apache/batik/bridge/SVGSVGElementBridge/createGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)#org/apache/batik/gvt/CanvasGraphicsNode/setVisible(boolean)
org/apache/batik/bridge/SVGSVGElementBridge/createGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)#org/apache/batik/gvt/CanvasGraphicsNode/setPositionTransform(java.awt.geom.AffineTransform)
org/apache/batik/bridge/SVGSVGElementBridge/createGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)#org/apache/batik/ext/awt/image/renderable/ClipRable8Bit/ClipRable8Bit(org.apache.batik.ext.awt.image.renderable.Filter,java.awt.Shape)
org/apache/batik/bridge/SVGSVGElementBridge/createGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)#java/awt/geom/AffineTransform/AffineTransform(java.awt.geom.AffineTransform)
org/apache/batik/bridge/SVGSVGElementBridge/createGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)#org/w3c/dom/svg/SVGRect/getHeight()
org/apache/batik/bridge/SVGSVGElementBridge/createGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)#org/apache/batik/bridge/SVGSVGElementBridge$SVGSVGElementViewport/SVGSVGElementViewport(float,float)
org/apache/batik/bridge/SVGSVGElementBridge/createGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)#org/apache/batik/anim/dom/SVGOMSVGElement/getHeight()
org/apache/batik/bridge/SVGSVGElementBridge/createGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)#org/apache/batik/bridge/SVGSVGElementBridge$1/1(org.apache.batik.bridge.SVGSVGElementBridge,double,double)
org/apache/batik/bridge/SVGSVGElementBridge/createGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)#java/awt/geom/AffineTransform/getScaleX()
org/apache/batik/bridge/SVGSVGElementBridge/createGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)#org/apache/batik/gvt/CanvasGraphicsNode/getGraphicsNodeRable(boolean)
org/apache/batik/bridge/SVGSVGElementBridge/createGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)#org/apache/batik/bridge/SVGSVGElementBridge/associateSVGContext(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode)
org/apache/batik/bridge/SVGSVGElementBridge/createGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)#org/apache/batik/gvt/CanvasGraphicsNode/setClip(org.apache.batik.ext.awt.image.renderable.ClipRable)
org/apache/batik/bridge/SVGSVGElementBridge/createGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)#org/apache/batik/anim/dom/SVGOMSVGElement/getY()
org/apache/batik/bridge/SVGSVGElementBridge/createGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)#java/awt/geom/Rectangle2D$Float/Float(float,float,float,float)
org/apache/batik/bridge/SVGSVGElementBridge/createGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)#org/apache/batik/gvt/CanvasGraphicsNode/setViewingTransform(java.awt.geom.AffineTransform)
org/apache/batik/bridge/SVGSVGElementBridge/createGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)#org/w3c/dom/svg/SVGDocument/getRootElement()
org/apache/batik/bridge/SVGSVGElementBridge/createGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)#java/awt/geom/AffineTransform/createInverse()
org/apache/batik/bridge/SVGSVGElementBridge/createGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)#java/awt/geom/AffineTransform/getTranslateInstance(double,double)
org/apache/batik/bridge/SVGSVGElementBridge/createGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)#org/w3c/dom/svg/SVGRect/getWidth()
org/apache/batik/bridge/SVGSVGElementBridge/createGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)#org/apache/batik/anim/dom/SVGOMSVGElement/getWidth()
org/apache/batik/bridge/SVGSVGElementBridge/createGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)#org/apache/batik/anim/dom/SVGOMSVGElement/getViewBox()
org/apache/batik/bridge/SVGSVGElementBridge/createGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)#java/awt/geom/AffineTransform/createTransformedShape(java.awt.Shape)
org/apache/batik/bridge/SVGSVGElementBridge/createGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)#org/apache/batik/gvt/CanvasGraphicsNode/setBackgroundEnable(java.awt.geom.Rectangle2D)
org/apache/batik/bridge/SVGSVGElementBridge/createGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)#org/apache/batik/gvt/CanvasGraphicsNode/setRenderingHints(java.awt.RenderingHints)
org/apache/batik/bridge/SVGSVGElementBridge/createGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)#org/apache/batik/anim/dom/SVGOMAnimatedRect/isSpecified()
org/apache/batik/bridge/SVGSVGElementBridge/checkEnclosure(org.w3c.dom.Element,org.w3c.dom.svg.SVGRect)#org/apache/batik/anim/dom/SVGOMElement/getSVGContext()
org/apache/batik/bridge/SVGSVGElementBridge/checkEnclosure(org.w3c.dom.Element,org.w3c.dom.svg.SVGRect)#org/w3c/dom/svg/SVGRect/getHeight()
org/apache/batik/bridge/SVGSVGElementBridge/checkEnclosure(org.w3c.dom.Element,org.w3c.dom.svg.SVGRect)#java/awt/geom/AffineTransform/preConcatenate(java.awt.geom.AffineTransform)
org/apache/batik/bridge/SVGSVGElementBridge/checkEnclosure(org.w3c.dom.Element,org.w3c.dom.svg.SVGRect)#org/w3c/dom/svg/SVGRect/getX()
org/apache/batik/bridge/SVGSVGElementBridge/checkEnclosure(org.w3c.dom.Element,org.w3c.dom.svg.SVGRect)#org/w3c/dom/svg/SVGRect/getY()
org/apache/batik/bridge/SVGSVGElementBridge/checkEnclosure(org.w3c.dom.Element,org.w3c.dom.svg.SVGRect)#java/awt/geom/Rectangle2D$Float/Float(float,float,float,float)
org/apache/batik/bridge/SVGSVGElementBridge/checkEnclosure(org.w3c.dom.Element,org.w3c.dom.svg.SVGRect)#org/apache/batik/gvt/GraphicsNode/getGlobalTransform()
org/apache/batik/bridge/SVGSVGElementBridge/checkEnclosure(org.w3c.dom.Element,org.w3c.dom.svg.SVGRect)#org/w3c/dom/svg/SVGRect/getWidth()
org/apache/batik/bridge/SVGSVGElementBridge/checkEnclosure(org.w3c.dom.Element,org.w3c.dom.svg.SVGRect)#java/awt/geom/AffineTransform/createTransformedShape(java.awt.Shape)
org/apache/batik/bridge/SVGSVGElementBridge/checkEnclosure(org.w3c.dom.Element,org.w3c.dom.svg.SVGRect)#org/w3c/dom/Element/getParentNode()
org/apache/batik/bridge/SVGSVGElementBridge/checkEnclosure(org.w3c.dom.Element,org.w3c.dom.svg.SVGRect)#java/awt/Shape/getBounds2D()
org/apache/batik/bridge/SVGSVGElementBridge/checkEnclosure(org.w3c.dom.Element,org.w3c.dom.svg.SVGRect)#java/awt/geom/AffineTransform/createInverse()
org/apache/batik/bridge/SVGSVGElementBridge/checkEnclosure(org.w3c.dom.Element,org.w3c.dom.svg.SVGRect)#org/apache/batik/gvt/GraphicsNode/getSensitiveBounds()
org/apache/batik/bridge/SVGSVGElementBridge/checkEnclosure(org.w3c.dom.Element,org.w3c.dom.svg.SVGRect)#java/awt/geom/Rectangle2D/contains(java.awt.geom.Rectangle2D)
org/apache/batik/bridge/SVGSVGElementBridge/getEnclosureList(org.w3c.dom.svg.SVGRect,org.w3c.dom.Element)#org/apache/batik/anim/dom/SVGOMElement/getSVGContext()
org/apache/batik/bridge/SVGSVGElementBridge/getEnclosureList(org.w3c.dom.svg.SVGRect,org.w3c.dom.Element)#org/w3c/dom/svg/SVGRect/getHeight()
org/apache/batik/bridge/SVGSVGElementBridge/getEnclosureList(org.w3c.dom.svg.SVGRect,org.w3c.dom.Element)#java/awt/geom/Rectangle2D/intersects(java.awt.geom.Rectangle2D)
org/apache/batik/bridge/SVGSVGElementBridge/getEnclosureList(org.w3c.dom.svg.SVGRect,org.w3c.dom.Element)#java/awt/geom/AffineTransform/preConcatenate(java.awt.geom.AffineTransform)
org/apache/batik/bridge/SVGSVGElementBridge/getEnclosureList(org.w3c.dom.svg.SVGRect,org.w3c.dom.Element)#org/w3c/dom/Element/getLocalName()
org/apache/batik/bridge/SVGSVGElementBridge/getEnclosureList(org.w3c.dom.svg.SVGRect,org.w3c.dom.Element)#org/w3c/dom/Element/getNamespaceURI()
org/apache/batik/bridge/SVGSVGElementBridge/getEnclosureList(org.w3c.dom.svg.SVGRect,org.w3c.dom.Element)#java/lang/String/equals(java.lang.Object)
org/apache/batik/bridge/SVGSVGElementBridge/getEnclosureList(org.w3c.dom.svg.SVGRect,org.w3c.dom.Element)#java/util/Set/contains(java.lang.Object)
org/apache/batik/bridge/SVGSVGElementBridge/getEnclosureList(org.w3c.dom.svg.SVGRect,org.w3c.dom.Element)#java/awt/geom/Rectangle2D$Float/Float(float,float,float,float)
org/apache/batik/bridge/SVGSVGElementBridge/getEnclosureList(org.w3c.dom.svg.SVGRect,org.w3c.dom.Element)#org/w3c/dom/svg/SVGRect/getWidth()
org/apache/batik/bridge/SVGSVGElementBridge/getEnclosureList(org.w3c.dom.svg.SVGRect,org.w3c.dom.Element)#org/w3c/dom/Node/getNextSibling()
org/apache/batik/bridge/SVGSVGElementBridge/getEnclosureList(org.w3c.dom.svg.SVGRect,org.w3c.dom.Element)#java/util/ArrayList/ArrayList()
org/apache/batik/bridge/SVGSVGElementBridge/getEnclosureList(org.w3c.dom.svg.SVGRect,org.w3c.dom.Element)#java/awt/Shape/getBounds2D()
org/apache/batik/bridge/SVGSVGElementBridge/getEnclosureList(org.w3c.dom.svg.SVGRect,org.w3c.dom.Element)#org/w3c/dom/Element/getFirstChild()
org/apache/batik/bridge/SVGSVGElementBridge/getEnclosureList(org.w3c.dom.svg.SVGRect,org.w3c.dom.Element)#org/w3c/dom/svg/SVGRect/getX()
org/apache/batik/bridge/SVGSVGElementBridge/getEnclosureList(org.w3c.dom.svg.SVGRect,org.w3c.dom.Element)#org/w3c/dom/svg/SVGRect/getY()
org/apache/batik/bridge/SVGSVGElementBridge/getEnclosureList(org.w3c.dom.svg.SVGRect,org.w3c.dom.Element)#java/util/List/addAll(java.util.Collection)
org/apache/batik/bridge/SVGSVGElementBridge/getEnclosureList(org.w3c.dom.svg.SVGRect,org.w3c.dom.Element)#java/util/List/add(java.lang.Object)
org/apache/batik/bridge/SVGSVGElementBridge/getEnclosureList(org.w3c.dom.svg.SVGRect,org.w3c.dom.Element)#org/apache/batik/gvt/GraphicsNode/getGlobalTransform()
org/apache/batik/bridge/SVGSVGElementBridge/getEnclosureList(org.w3c.dom.svg.SVGRect,org.w3c.dom.Element)#java/awt/geom/AffineTransform/createInverse()
org/apache/batik/bridge/SVGSVGElementBridge/getEnclosureList(org.w3c.dom.svg.SVGRect,org.w3c.dom.Element)#org/apache/batik/gvt/GraphicsNode/getSensitiveBounds()
org/apache/batik/bridge/SVGSVGElementBridge/getEnclosureList(org.w3c.dom.svg.SVGRect,org.w3c.dom.Element)#java/awt/geom/AffineTransform/createTransformedShape(java.awt.Shape)
org/apache/batik/bridge/SVGSVGElementBridge/getEnclosureList(org.w3c.dom.svg.SVGRect,org.w3c.dom.Element)#java/awt/geom/Rectangle2D/contains(java.awt.geom.Rectangle2D)
org/apache/batik/bridge/SVGSVGElementBridge/handleAnimatedAttributeChanged(org.apache.batik.anim.dom.AnimatedLiveAttributeValue)#org/apache/batik/gvt/CompositeGraphicsNode/remove(java.lang.Object)
org/apache/batik/bridge/SVGSVGElementBridge/handleAnimatedAttributeChanged(org.apache.batik.anim.dom.AnimatedLiveAttributeValue)#org/w3c/dom/Element/getOwnerDocument()
org/apache/batik/bridge/SVGSVGElementBridge/handleAnimatedAttributeChanged(org.apache.batik.anim.dom.AnimatedLiveAttributeValue)#org/apache/batik/anim/dom/SVGOMSVGElement/getHeight()
org/apache/batik/bridge/SVGSVGElementBridge/handleAnimatedAttributeChanged(org.apache.batik.anim.dom.AnimatedLiveAttributeValue)#org/w3c/dom/Element/getParentNode()
org/apache/batik/bridge/SVGSVGElementBridge/handleAnimatedAttributeChanged(org.apache.batik.anim.dom.AnimatedLiveAttributeValue)#org/apache/batik/anim/dom/SVGOMSVGElement/getX()
org/apache/batik/bridge/SVGSVGElementBridge/handleAnimatedAttributeChanged(org.apache.batik.anim.dom.AnimatedLiveAttributeValue)#java/awt/geom/AffineTransform/concatenate(java.awt.geom.AffineTransform)
org/apache/batik/bridge/SVGSVGElementBridge/handleAnimatedAttributeChanged(org.apache.batik.anim.dom.AnimatedLiveAttributeValue)#org/apache/batik/anim/dom/AbstractSVGAnimatedLength/getCheckedValue()
org/apache/batik/bridge/SVGSVGElementBridge/handleAnimatedAttributeChanged(org.apache.batik.anim.dom.AnimatedLiveAttributeValue)#org/apache/batik/anim/dom/SVGOMSVGElement/getPreserveAspectRatio()
org/apache/batik/bridge/SVGSVGElementBridge/handleAnimatedAttributeChanged(org.apache.batik.anim.dom.AnimatedLiveAttributeValue)#org/apache/batik/gvt/CanvasGraphicsNode/setPositionTransform(java.awt.geom.AffineTransform)
org/apache/batik/bridge/SVGSVGElementBridge/handleAnimatedAttributeChanged(org.apache.batik.anim.dom.AnimatedLiveAttributeValue)#org/apache/batik/bridge/SVGGElementBridge/handleAnimatedAttributeChanged(org.apache.batik.anim.dom.AnimatedLiveAttributeValue)
org/apache/batik/bridge/SVGSVGElementBridge/handleAnimatedAttributeChanged(org.apache.batik.anim.dom.AnimatedLiveAttributeValue)#org/apache/batik/ext/awt/image/renderable/ClipRable8Bit/ClipRable8Bit(org.apache.batik.ext.awt.image.renderable.Filter,java.awt.Shape)
org/apache/batik/bridge/SVGSVGElementBridge/handleAnimatedAttributeChanged(org.apache.batik.anim.dom.AnimatedLiveAttributeValue)#java/awt/geom/AffineTransform/AffineTransform(java.awt.geom.AffineTransform)
org/apache/batik/bridge/SVGSVGElementBridge/handleAnimatedAttributeChanged(org.apache.batik.anim.dom.AnimatedLiveAttributeValue)#java/awt/geom/AffineTransform/getScaleX()
org/apache/batik/bridge/SVGSVGElementBridge/handleAnimatedAttributeChanged(org.apache.batik.anim.dom.AnimatedLiveAttributeValue)#org/apache/batik/gvt/CanvasGraphicsNode/getGraphicsNodeRable(boolean)
org/apache/batik/bridge/SVGSVGElementBridge/handleAnimatedAttributeChanged(org.apache.batik.anim.dom.AnimatedLiveAttributeValue)#java/awt/geom/AffineTransform/getScaleY()
org/apache/batik/bridge/SVGSVGElementBridge/handleAnimatedAttributeChanged(org.apache.batik.anim.dom.AnimatedLiveAttributeValue)#org/apache/batik/anim/dom/AnimatedLiveAttributeValue/getLocalName()
org/apache/batik/bridge/SVGSVGElementBridge/handleAnimatedAttributeChanged(org.apache.batik.anim.dom.AnimatedLiveAttributeValue)#org/apache/batik/gvt/CanvasGraphicsNode/getViewingTransform()
org/apache/batik/bridge/SVGSVGElementBridge/handleAnimatedAttributeChanged(org.apache.batik.anim.dom.AnimatedLiveAttributeValue)#org/apache/batik/gvt/CanvasGraphicsNode/setClip(org.apache.batik.ext.awt.image.renderable.ClipRable)
org/apache/batik/bridge/SVGSVGElementBridge/handleAnimatedAttributeChanged(org.apache.batik.anim.dom.AnimatedLiveAttributeValue)#org/apache/batik/anim/dom/SVGOMSVGElement/getY()
org/apache/batik/bridge/SVGSVGElementBridge/handleAnimatedAttributeChanged(org.apache.batik.anim.dom.AnimatedLiveAttributeValue)#java/lang/String/equals(java.lang.Object)
org/apache/batik/bridge/SVGSVGElementBridge/handleAnimatedAttributeChanged(org.apache.batik.anim.dom.AnimatedLiveAttributeValue)#org/apache/batik/gvt/GraphicsNode/getParent()
org/apache/batik/bridge/SVGSVGElementBridge/handleAnimatedAttributeChanged(org.apache.batik.anim.dom.AnimatedLiveAttributeValue)#java/awt/geom/AffineTransform/getShearX()
org/apache/batik/bridge/SVGSVGElementBridge/handleAnimatedAttributeChanged(org.apache.batik.anim.dom.AnimatedLiveAttributeValue)#org/apache/batik/anim/dom/AnimatedLiveAttributeValue/getNamespaceURI()
org/apache/batik/bridge/SVGSVGElementBridge/handleAnimatedAttributeChanged(org.apache.batik.anim.dom.AnimatedLiveAttributeValue)#java/awt/geom/AffineTransform/getShearY()
org/apache/batik/bridge/SVGSVGElementBridge/handleAnimatedAttributeChanged(org.apache.batik.anim.dom.AnimatedLiveAttributeValue)#java/awt/geom/Rectangle2D$Float/Float(float,float,float,float)
org/apache/batik/bridge/SVGSVGElementBridge/handleAnimatedAttributeChanged(org.apache.batik.anim.dom.AnimatedLiveAttributeValue)#org/apache/batik/gvt/CanvasGraphicsNode/setViewingTransform(java.awt.geom.AffineTransform)
org/apache/batik/bridge/SVGSVGElementBridge/handleAnimatedAttributeChanged(org.apache.batik.anim.dom.AnimatedLiveAttributeValue)#org/apache/batik/gvt/CanvasGraphicsNode/getPositionTransform()
org/apache/batik/bridge/SVGSVGElementBridge/handleAnimatedAttributeChanged(org.apache.batik.anim.dom.AnimatedLiveAttributeValue)#java/awt/geom/AffineTransform/AffineTransform()
org/apache/batik/bridge/SVGSVGElementBridge/handleAnimatedAttributeChanged(org.apache.batik.anim.dom.AnimatedLiveAttributeValue)#org/w3c/dom/svg/SVGDocument/getRootElement()
org/apache/batik/bridge/SVGSVGElementBridge/handleAnimatedAttributeChanged(org.apache.batik.anim.dom.AnimatedLiveAttributeValue)#java/awt/geom/AffineTransform/createInverse()
org/apache/batik/bridge/SVGSVGElementBridge/handleAnimatedAttributeChanged(org.apache.batik.anim.dom.AnimatedLiveAttributeValue)#java/awt/geom/AffineTransform/getTranslateInstance(double,double)
org/apache/batik/bridge/SVGSVGElementBridge/handleAnimatedAttributeChanged(org.apache.batik.anim.dom.AnimatedLiveAttributeValue)#org/apache/batik/anim/dom/SVGOMSVGElement/getWidth()
org/apache/batik/bridge/SVGSVGElementBridge/handleAnimatedAttributeChanged(org.apache.batik.anim.dom.AnimatedLiveAttributeValue)#org/apache/batik/bridge/SVGSVGElementBridge/disposeTree(org.w3c.dom.Node,boolean)
org/apache/batik/bridge/SVGSVGElementBridge/handleAnimatedAttributeChanged(org.apache.batik.anim.dom.AnimatedLiveAttributeValue)#org/apache/batik/anim/dom/SVGOMSVGElement/getViewBox()
org/apache/batik/bridge/SVGSVGElementBridge/handleAnimatedAttributeChanged(org.apache.batik.anim.dom.AnimatedLiveAttributeValue)#java/awt/geom/AffineTransform/createTransformedShape(java.awt.Shape)
org/apache/batik/bridge/SVGSVGElementBridge/handleAnimatedAttributeChanged(org.apache.batik.anim.dom.AnimatedLiveAttributeValue)#org/apache/batik/bridge/SVGSVGElementBridge/handleElementAdded(org.apache.batik.gvt.CompositeGraphicsNode,org.w3c.dom.Node,org.w3c.dom.Element)
org/apache/batik/bridge/ScriptingEnvironment/Window/2/run()#java/io/OutputStream/close()
org/apache/batik/bridge/ScriptingEnvironment/Window/2/run()#org/apache/batik/util/EncodingUtilities/javaEncoding(java.lang.String)
org/apache/batik/bridge/ScriptingEnvironment/Window/2/run()#java/net/URL/openConnection()
org/apache/batik/bridge/ScriptingEnvironment/Window/2/run()#org/apache/batik/util/RunnableQueue/invokeLater(java.lang.Runnable)
org/apache/batik/bridge/ScriptingEnvironment/Window/2/run()#java/io/OutputStreamWriter/OutputStreamWriter(java.io.OutputStream,java.lang.String)
org/apache/batik/bridge/ScriptingEnvironment/Window/2/run()#java/net/URLConnection/setUseCaches(boolean)
org/apache/batik/bridge/ScriptingEnvironment/Window/2/run()#java/io/InputStreamReader/InputStreamReader(java.io.InputStream,java.lang.String)
org/apache/batik/bridge/ScriptingEnvironment/Window/2/run()#java/net/URLConnection/getOutputStream()
org/apache/batik/bridge/ScriptingEnvironment/Window/2/run()#java/io/Writer/close()
org/apache/batik/bridge/ScriptingEnvironment/Window/2/run()#java/lang/String/substring(int)
org/apache/batik/bridge/ScriptingEnvironment/Window/2/run()#java/lang/String/startsWith(java.lang.String)
org/apache/batik/bridge/ScriptingEnvironment/Window/2/run()#java/io/OutputStreamWriter/OutputStreamWriter(java.io.OutputStream)
org/apache/batik/bridge/ScriptingEnvironment/Window/2/run()#java/net/URLConnection/setRequestProperty(java.lang.String,java.lang.String)
org/apache/batik/bridge/ScriptingEnvironment/Window/2/run()#java/io/Reader/close()
org/apache/batik/bridge/ScriptingEnvironment/Window/2/run()#java/lang/StringBuffer/append(char[],int,int)
org/apache/batik/bridge/ScriptingEnvironment/Window/2/run()#org/apache/batik/anim/dom/SVGOMDocument/getDocumentURI()
org/apache/batik/bridge/ScriptingEnvironment/Window/2/run()#java/net/URL/URL(java.net.URL,java.lang.String)
org/apache/batik/bridge/ScriptingEnvironment/Window/2/run()#org/apache/batik/bridge/ScriptingEnvironment$Window$2$2/2(org.apache.batik.bridge.ScriptingEnvironment$Window$2)
org/apache/batik/bridge/ScriptingEnvironment/Window/2/run()#java/net/URLConnection/setDoInput(boolean)
org/apache/batik/bridge/ScriptingEnvironment/Window/2/run()#java/io/Reader/read(char[],int,int)
org/apache/batik/bridge/ScriptingEnvironment/Window/2/run()#java/util/zip/DeflaterOutputStream/DeflaterOutputStream(java.io.OutputStream)
org/apache/batik/bridge/ScriptingEnvironment/Window/2/run()#java/util/zip/GZIPOutputStream/GZIPOutputStream(java.io.OutputStream)
org/apache/batik/bridge/ScriptingEnvironment/Window/2/run()#java/lang/String/length()
org/apache/batik/bridge/ScriptingEnvironment/Window/2/run()#java/net/URL/URL(java.lang.String)
org/apache/batik/bridge/ScriptingEnvironment/Window/2/run()#org/apache/batik/bridge/ScriptingEnvironment$Window$2$1/1(org.apache.batik.bridge.ScriptingEnvironment$Window$2,java.net.URLConnection,java.lang.StringBuffer)
org/apache/batik/bridge/ScriptingEnvironment/Window/2/run()#java/net/URLConnection/getInputStream()
org/apache/batik/bridge/ScriptingEnvironment/Window/2/run()#java/io/InputStreamReader/InputStreamReader(java.io.InputStream)
org/apache/batik/bridge/ScriptingEnvironment/Window/2/run()#java/io/Writer/write(java.lang.String)
org/apache/batik/bridge/ScriptingEnvironment/Window/2/run()#java/io/BufferedReader/BufferedReader(java.io.Reader)
org/apache/batik/bridge/ScriptingEnvironment/Window/2/run()#java/net/URLConnection/setDoOutput(boolean)
org/apache/batik/bridge/ScriptingEnvironment/Window/2/run()#java/io/Writer/flush()
org/apache/batik/bridge/ScriptingEnvironment/Window/2/run()#java/lang/StringBuffer/StringBuffer()
org/apache/batik/bridge/ViewBox/getViewTransform(java.lang.String,org.w3c.dom.Element,float,float,org.apache.batik.bridge.BridgeContext)#org/w3c/dom/Element/getAttributeNS(java.lang.String,java.lang.String)
org/apache/batik/bridge/ViewBox/getViewTransform(java.lang.String,org.w3c.dom.Element,float,float,org.apache.batik.bridge.BridgeContext)#org/w3c/dom/Document/getElementById(java.lang.String)
org/apache/batik/bridge/ViewBox/getViewTransform(java.lang.String,org.w3c.dom.Element,float,float,org.apache.batik.bridge.BridgeContext)#org/w3c/dom/Element/getOwnerDocument()
org/apache/batik/bridge/ViewBox/getViewTransform(java.lang.String,org.w3c.dom.Element,float,float,org.apache.batik.bridge.BridgeContext)#org/apache/batik/bridge/ViewBox$ViewHandler/ViewHandler()
org/apache/batik/bridge/ViewBox/getViewTransform(java.lang.String,org.w3c.dom.Element,float,float,org.apache.batik.bridge.BridgeContext)#org/w3c/dom/Element/getLocalName()
org/apache/batik/bridge/ViewBox/getViewTransform(java.lang.String,org.w3c.dom.Element,float,float,org.apache.batik.bridge.BridgeContext)#java/lang/String/equals(java.lang.Object)
org/apache/batik/bridge/ViewBox/getViewTransform(java.lang.String,org.w3c.dom.Element,float,float,org.apache.batik.bridge.BridgeContext)#java/awt/geom/AffineTransform/concatenate(java.awt.geom.AffineTransform)
org/apache/batik/bridge/ViewBox/getViewTransform(java.lang.String,org.w3c.dom.Element,float,float,org.apache.batik.bridge.BridgeContext)#org/apache/batik/parser/FragmentIdentifierParser/setFragmentIdentifierHandler(org.apache.batik.parser.FragmentIdentifierHandler)
org/apache/batik/bridge/ViewBox/getViewTransform(java.lang.String,org.w3c.dom.Element,float,float,org.apache.batik.bridge.BridgeContext)#org/apache/batik/parser/PreserveAspectRatioParser/parse(java.lang.String)
org/apache/batik/bridge/ViewBox/getViewTransform(java.lang.String,org.w3c.dom.Element,float,float,org.apache.batik.bridge.BridgeContext)#java/lang/String/length()
org/apache/batik/bridge/ViewBox/getViewTransform(java.lang.String,org.w3c.dom.Element,float,float,org.apache.batik.bridge.BridgeContext)#org/apache/batik/parser/FragmentIdentifierParser/FragmentIdentifierParser()
org/apache/batik/bridge/ViewBox/getViewTransform(java.lang.String,org.w3c.dom.Element,float,float,org.apache.batik.bridge.BridgeContext)#org/w3c/dom/Element/getNamespaceURI()
org/apache/batik/bridge/ViewBox/getViewTransform(java.lang.String,org.w3c.dom.Element,float,float,org.apache.batik.bridge.BridgeContext)#org/apache/batik/bridge/ViewBox$ViewHandler/getAffineTransform()
org/apache/batik/bridge/ViewBox/getViewTransform(java.lang.String,org.w3c.dom.Element,float,float,org.apache.batik.bridge.BridgeContext)#org/apache/batik/parser/PreserveAspectRatioParser/setPreserveAspectRatioHandler(org.apache.batik.parser.PreserveAspectRatioHandler)
org/apache/batik/bridge/ViewBox/getViewTransform(java.lang.String,org.w3c.dom.Element,float,float,org.apache.batik.bridge.BridgeContext)#org/apache/batik/parser/FragmentIdentifierParser/parse(java.lang.String)
org/apache/batik/bridge/ViewBox/getViewTransform(java.lang.String,org.w3c.dom.Element,float,float,org.apache.batik.bridge.BridgeContext)#org/apache/batik/dom/util/DOMUtilities/isAttributeSpecifiedNS(org.w3c.dom.Element,java.lang.String,java.lang.String)
org/apache/batik/bridge/ViewBox/getViewTransform(java.lang.String,org.w3c.dom.Element,float,float,org.apache.batik.bridge.BridgeContext)#org/apache/batik/parser/PreserveAspectRatioParser/PreserveAspectRatioParser()
org/apache/batik/bridge/BridgeContext/removeUIEventListeners(org.w3c.dom.Document)#org/apache/batik/bridge/BridgeContext$EventListenerMememto/getUseCapture()
org/apache/batik/bridge/BridgeContext/removeUIEventListeners(org.w3c.dom.Document)#java/util/Iterator/hasNext()
org/apache/batik/bridge/BridgeContext/removeUIEventListeners(org.w3c.dom.Document)#org/apache/batik/dom/events/NodeEventTarget/removeEventListener(java.lang.String,org.w3c.dom.events.EventListener,boolean)
org/apache/batik/bridge/BridgeContext/removeUIEventListeners(org.w3c.dom.Document)#org/apache/batik/bridge/BridgeContext$EventListenerMememto/getEventType()
org/apache/batik/bridge/BridgeContext/removeUIEventListeners(org.w3c.dom.Document)#org/apache/batik/bridge/BridgeContext$EventListenerMememto/getNamespaced()
org/apache/batik/bridge/BridgeContext/removeUIEventListeners(org.w3c.dom.Document)#java/util/Iterator/next()
org/apache/batik/bridge/BridgeContext/removeUIEventListeners(org.w3c.dom.Document)#org/apache/batik/dom/events/NodeEventTarget/removeEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean)
org/apache/batik/bridge/BridgeContext/removeUIEventListeners(org.w3c.dom.Document)#org/w3c/dom/Document/getDocumentElement()
org/apache/batik/bridge/BridgeContext/removeUIEventListeners(org.w3c.dom.Document)#org/apache/batik/bridge/BridgeContext$EventListenerMememto/getNamespaceURI()
org/apache/batik/bridge/BridgeContext/removeUIEventListeners(org.w3c.dom.Document)#org/apache/batik/bridge/BridgeContext$EventListenerMememto/getTarget()
org/apache/batik/bridge/BridgeContext/removeUIEventListeners(org.w3c.dom.Document)#org/apache/batik/bridge/BridgeContext$EventListenerMememto/getListener()
org/apache/batik/bridge/BridgeContext/removeUIEventListeners(org.w3c.dom.Document)#java/util/Set/iterator()
org/apache/batik/bridge/BridgeContext/initializeDocument(org.w3c.dom.Document)#org/apache/batik/anim/dom/SVGOMDocument/setCSSEngine(org.apache.batik.css.engine.CSSEngine)
org/apache/batik/bridge/BridgeContext/initializeDocument(org.w3c.dom.Document)#org/apache/batik/util/ParsedURL/ParsedURL(java.lang.String)
org/apache/batik/bridge/BridgeContext/initializeDocument(org.w3c.dom.Document)#org/apache/batik/css/engine/CSSEngine/setCSSEngineUserAgent(org.apache.batik.css.engine.CSSEngineUserAgent)
org/apache/batik/bridge/BridgeContext/initializeDocument(org.w3c.dom.Document)#org/apache/batik/css/engine/CSSEngine/parseStyleSheet(org.apache.batik.util.ParsedURL,java.lang.String)
org/apache/batik/bridge/BridgeContext/initializeDocument(org.w3c.dom.Document)#org/apache/batik/css/engine/CSSEngine/setMedia(java.lang.String)
org/apache/batik/bridge/BridgeContext/initializeDocument(org.w3c.dom.Document)#org/apache/batik/css/engine/CSSEngine/setUserAgentStyleSheet(org.apache.batik.css.engine.StyleSheet)
org/apache/batik/bridge/BridgeContext/initializeDocument(org.w3c.dom.Document)#org/apache/batik/anim/dom/SVGOMDocument/getImplementation()
org/apache/batik/bridge/BridgeContext/initializeDocument(org.w3c.dom.Document)#org/apache/batik/anim/dom/SVGOMDocument/getCSSEngine()
org/apache/batik/bridge/BridgeContext/initializeDocument(org.w3c.dom.Document)#org/apache/batik/css/engine/CSSEngine/setAlternateStyleSheet(java.lang.String)
org/apache/batik/bridge/BridgeContext/initializeDocument(org.w3c.dom.Document)#org/apache/batik/bridge/BridgeContext$CSSEngineUserAgentWrapper/CSSEngineUserAgentWrapper(org.apache.batik.bridge.UserAgent)
org/apache/batik/bridge/BridgeContext/initializeDocument(org.w3c.dom.Document)#org/apache/batik/anim/dom/SVGDOMImplementation/createCSSEngine(org.apache.batik.dom.AbstractStylableDocument,org.apache.batik.css.engine.CSSContext)
org/apache/batik/bridge/BridgeContext/getGlobalBridgeExtensions()#java/util/ListIterator/hasNext()
org/apache/batik/bridge/BridgeContext/getGlobalBridgeExtensions()#java/util/Iterator/hasNext()
org/apache/batik/bridge/BridgeContext/getGlobalBridgeExtensions()#java/util/Iterator/next()
org/apache/batik/bridge/BridgeContext/getGlobalBridgeExtensions()#java/util/ListIterator/previous()
org/apache/batik/bridge/BridgeContext/getGlobalBridgeExtensions()#java/util/List/listIterator()
org/apache/batik/bridge/BridgeContext/getGlobalBridgeExtensions()#org/apache/batik/util/Service/providers(java.lang.Class)
org/apache/batik/bridge/BridgeContext/getGlobalBridgeExtensions()#java/util/ListIterator/add(java.lang.Object)
org/apache/batik/bridge/BridgeContext/getGlobalBridgeExtensions()#java/util/ListIterator/next()
org/apache/batik/bridge/BridgeContext/getGlobalBridgeExtensions()#java/util/LinkedList/LinkedList()
org/apache/batik/bridge/BridgeContext/putBridge(java.lang.String,java.lang.String,org.apache.batik.bridge.Bridge)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/batik/bridge/BridgeContext/putBridge(java.lang.String,java.lang.String,org.apache.batik.bridge.Bridge)#java/lang/StringBuilder/append(java.lang.String)
org/apache/batik/bridge/BridgeContext/putBridge(java.lang.String,java.lang.String,org.apache.batik.bridge.Bridge)#java/lang/Error/Error(java.lang.String)
org/apache/batik/bridge/BridgeContext/putBridge(java.lang.String,java.lang.String,org.apache.batik.bridge.Bridge)#java/util/Map/get(java.lang.Object)
org/apache/batik/bridge/BridgeContext/putBridge(java.lang.String,java.lang.String,org.apache.batik.bridge.Bridge)#java/lang/String/equals(java.lang.Object)
org/apache/batik/bridge/BridgeContext/putBridge(java.lang.String,java.lang.String,org.apache.batik.bridge.Bridge)#java/lang/StringBuilder/StringBuilder()
org/apache/batik/bridge/BridgeContext/putBridge(java.lang.String,java.lang.String,org.apache.batik.bridge.Bridge)#java/lang/StringBuilder/toString()
org/apache/batik/bridge/BridgeContext/putBridge(java.lang.String,java.lang.String,org.apache.batik.bridge.Bridge)#java/util/HashMap/HashMap()
org/apache/batik/bridge/BridgeContext/putBridge(java.lang.String,java.lang.String,org.apache.batik.bridge.Bridge)#java/util/HashMap/put(java.lang.Object,java.lang.Object)
org/apache/batik/bridge/BridgeContext/putBridge(java.lang.String,java.lang.String,org.apache.batik.bridge.Bridge)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/batik/bridge/BridgeContext/putBridge(java.lang.String,java.lang.String,org.apache.batik.bridge.Bridge)#java/lang/Object/getClass()
org/apache/batik/bridge/BridgeContext/getBridgeExtensions(org.w3c.dom.Document)#org/w3c/dom/Element/getAttributeNS(java.lang.String,java.lang.String)
org/apache/batik/bridge/BridgeContext/getBridgeExtensions(org.w3c.dom.Document)#java/util/ListIterator/hasNext()
org/apache/batik/bridge/BridgeContext/getBridgeExtensions(org.w3c.dom.Document)#java/lang/String/length()
org/apache/batik/bridge/BridgeContext/getBridgeExtensions(org.w3c.dom.Document)#org/apache/batik/anim/dom/SVGOMDocument/getRootElement()
org/apache/batik/bridge/BridgeContext/getBridgeExtensions(org.w3c.dom.Document)#java/util/LinkedList/LinkedList(java.util.Collection)
org/apache/batik/bridge/BridgeContext/getBridgeExtensions(org.w3c.dom.Document)#java/util/ListIterator/previous()
org/apache/batik/bridge/BridgeContext/getBridgeExtensions(org.w3c.dom.Document)#java/util/List/listIterator()
org/apache/batik/bridge/BridgeContext/getBridgeExtensions(org.w3c.dom.Document)#java/util/ListIterator/add(java.lang.Object)
org/apache/batik/bridge/BridgeContext/getBridgeExtensions(org.w3c.dom.Document)#java/lang/String/equals(java.lang.Object)
org/apache/batik/bridge/BridgeContext/getBridgeExtensions(org.w3c.dom.Document)#java/util/ListIterator/next()
org/apache/batik/bridge/BridgeContext/addDOMListeners()#org/apache/batik/bridge/BridgeContext$DOMNodeRemovedEventListener/DOMNodeRemovedEventListener(org.apache.batik.bridge.BridgeContext)
org/apache/batik/bridge/BridgeContext/addDOMListeners()#org/apache/batik/css/engine/CSSEngine/addCSSEngineListener(org.apache.batik.css.engine.CSSEngineListener)
org/apache/batik/bridge/BridgeContext/addDOMListeners()#org/apache/batik/anim/dom/SVGOMDocument/getCSSEngine()
org/apache/batik/bridge/BridgeContext/addDOMListeners()#org/apache/batik/anim/dom/SVGOMDocument/addEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean,java.lang.Object)
org/apache/batik/bridge/BridgeContext/addDOMListeners()#org/apache/batik/anim/dom/SVGOMDocument/addAnimatedAttributeListener(org.apache.batik.anim.dom.AnimatedAttributeListener)
org/apache/batik/bridge/BridgeContext/addDOMListeners()#org/apache/batik/bridge/BridgeContext$DOMCharacterDataModifiedEventListener/DOMCharacterDataModifiedEventListener(org.apache.batik.bridge.BridgeContext)
org/apache/batik/bridge/BridgeContext/addDOMListeners()#org/apache/batik/bridge/BridgeContext$AnimatedAttrListener/AnimatedAttrListener(org.apache.batik.bridge.BridgeContext)
org/apache/batik/bridge/BridgeContext/addDOMListeners()#org/apache/batik/bridge/BridgeContext$DOMNodeInsertedEventListener/DOMNodeInsertedEventListener(org.apache.batik.bridge.BridgeContext)
org/apache/batik/bridge/BridgeContext/addDOMListeners()#org/apache/batik/bridge/BridgeContext$DOMAttrModifiedEventListener/DOMAttrModifiedEventListener(org.apache.batik.bridge.BridgeContext)
org/apache/batik/bridge/BridgeContext/addDOMListeners()#org/apache/batik/bridge/BridgeContext$CSSPropertiesChangedListener/CSSPropertiesChangedListener(org.apache.batik.bridge.BridgeContext)
org/apache/batik/bridge/BridgeContext/dispose()#org/apache/batik/bridge/BridgeContext$EventListenerMememto/getUseCapture()
org/apache/batik/bridge/BridgeContext/dispose()#java/util/Iterator/hasNext()
org/apache/batik/bridge/BridgeContext/dispose()#org/apache/batik/dom/events/NodeEventTarget/removeEventListener(java.lang.String,org.w3c.dom.events.EventListener,boolean)
org/apache/batik/bridge/BridgeContext/dispose()#org/apache/batik/bridge/BridgeContext$EventListenerMememto/getEventType()
org/apache/batik/bridge/BridgeContext/dispose()#org/apache/batik/bridge/BridgeContext$EventListenerMememto/getNamespaced()
org/apache/batik/bridge/BridgeContext/dispose()#java/util/Map/values()
org/apache/batik/bridge/BridgeContext/dispose()#java/util/Map/clear()
org/apache/batik/bridge/BridgeContext/dispose()#org/apache/batik/dom/events/NodeEventTarget/removeEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean)
org/apache/batik/bridge/BridgeContext/dispose()#java/util/Collection/iterator()
org/apache/batik/bridge/BridgeContext/dispose()#java/util/Iterator/next()
org/apache/batik/bridge/BridgeContext/dispose()#org/apache/batik/script/Interpreter/dispose()
org/apache/batik/bridge/BridgeContext/dispose()#org/apache/batik/bridge/BridgeContext$EventListenerMememto/getNamespaceURI()
org/apache/batik/bridge/BridgeContext/dispose()#org/apache/batik/bridge/BridgeContext$EventListenerMememto/getTarget()
org/apache/batik/bridge/BridgeContext/dispose()#org/apache/batik/bridge/BridgeContext$EventListenerMememto/getListener()
org/apache/batik/bridge/BridgeContext/dispose()#java/util/Set/iterator()
org/apache/batik/bridge/BridgeContext/getInterpreter(java.lang.String)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/batik/bridge/BridgeContext/getInterpreter(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/apache/batik/bridge/BridgeContext/getInterpreter(java.lang.String)#java/util/Map/get(java.lang.Object)
org/apache/batik/bridge/BridgeContext/getInterpreter(java.lang.String)#org/apache/batik/script/InterpreterPool/createInterpreter(org.w3c.dom.Document,java.lang.String,org.apache.batik.script.ImportInfo)
org/apache/batik/bridge/BridgeContext/getInterpreter(java.lang.String)#java/lang/StringBuilder/toString()
org/apache/batik/bridge/BridgeContext/getInterpreter(java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/apache/batik/bridge/BridgeContext/getInterpreter(java.lang.String)#org/apache/batik/script/Interpreter/getMimeTypes()
org/apache/batik/bridge/BridgeContext/getInterpreter(java.lang.String)#java/lang/Exception/Exception(java.lang.String)
org/apache/batik/bridge/BridgeContext/getInterpreter(java.lang.String)#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/apache/batik/bridge/BridgeContext/checkInteractiveElement(org.w3c.dom.svg.SVGDocument,org.w3c.dom.Element)#org/w3c/dom/Node/getNextSibling()
org/apache/batik/bridge/BridgeContext/checkInteractiveElement(org.w3c.dom.svg.SVGDocument,org.w3c.dom.Element)#java/lang/String/length()
org/apache/batik/bridge/BridgeContext/checkInteractiveElement(org.w3c.dom.svg.SVGDocument,org.w3c.dom.Element)#org/w3c/dom/Element/getLocalName()
org/apache/batik/bridge/BridgeContext/checkInteractiveElement(org.w3c.dom.svg.SVGDocument,org.w3c.dom.Element)#org/w3c/dom/Element/getAttribute(java.lang.String)
org/apache/batik/bridge/BridgeContext/checkInteractiveElement(org.w3c.dom.svg.SVGDocument,org.w3c.dom.Element)#org/w3c/dom/Element/getNamespaceURI()
org/apache/batik/bridge/BridgeContext/checkInteractiveElement(org.w3c.dom.svg.SVGDocument,org.w3c.dom.Element)#java/lang/String/equals(java.lang.Object)
org/apache/batik/bridge/BridgeContext/checkInteractiveElement(org.w3c.dom.svg.SVGDocument,org.w3c.dom.Element)#org/w3c/dom/svg/SVGDocument/getRootElement()
org/apache/batik/bridge/BridgeContext/checkInteractiveElement(org.w3c.dom.svg.SVGDocument,org.w3c.dom.Element)#org/w3c/dom/Node/getNodeType()
org/apache/batik/bridge/BridgeContext/checkInteractiveElement(org.w3c.dom.svg.SVGDocument,org.w3c.dom.Element)#org/w3c/dom/Element/getParentNode()
org/apache/batik/bridge/BridgeContext/checkInteractiveElement(org.w3c.dom.svg.SVGDocument,org.w3c.dom.Element)#org/w3c/dom/Element/getFirstChild()
org/apache/batik/bridge/EventTargetWrapper/FunctionAddNSProxy/call(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[])#org/apache/batik/bridge/EventTargetWrapper$FunctionEventListener/FunctionEventListener(org.mozilla.javascript.Function,org.apache.batik.bridge.RhinoInterpreter)
org/apache/batik/bridge/EventTargetWrapper/FunctionAddNSProxy/call(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[])#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/batik/bridge/EventTargetWrapper/FunctionAddNSProxy/call(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[])#org/mozilla/javascript/Function/call(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[])
org/apache/batik/bridge/EventTargetWrapper/FunctionAddNSProxy/call(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[])#org/apache/batik/bridge/EventTargetWrapper$HandleEventListener/HandleEventListener(org.mozilla.javascript.Scriptable,org.apache.batik.bridge.RhinoInterpreter)
org/apache/batik/bridge/EventTargetWrapper/FunctionAddNSProxy/call(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[])#org/mozilla/javascript/Context/jsToJava(java.lang.Object,java.lang.Class)
org/apache/batik/bridge/EventTargetWrapper/FunctionAddNSProxy/call(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[])#java/lang/ref/SoftReference/SoftReference(java.lang.Object)
org/apache/batik/bridge/EventTargetWrapper/FunctionAddNSProxy/call(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[])#org/mozilla/javascript/NativeJavaObject/unwrap()
org/apache/batik/bridge/EventTargetWrapper/FunctionAddNSProxy/call(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[])#org/apache/batik/dom/AbstractNode/addEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean,java.lang.Object)
org/apache/batik/bridge/EventTargetWrapper/FunctionAddNSProxy/call(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[])#java/lang/Boolean/booleanValue()
org/apache/batik/bridge/SVGAnimateElementBridge/parseKeyTimes()#java/lang/Float/Float(float)
org/apache/batik/bridge/SVGAnimateElementBridge/parseKeyTimes()#java/util/ArrayList/ArrayList(int)
org/apache/batik/bridge/SVGAnimateElementBridge/parseKeyTimes()#java/lang/Float/parseFloat(java.lang.String)
org/apache/batik/bridge/SVGAnimateElementBridge/parseKeyTimes()#java/lang/String/charAt(int)
org/apache/batik/bridge/SVGAnimateElementBridge/parseKeyTimes()#java/util/ArrayList/add(java.lang.Object)
org/apache/batik/bridge/SVGAnimateElementBridge/parseKeyTimes()#java/lang/Float/floatValue()
org/apache/batik/bridge/SVGAnimateElementBridge/parseKeyTimes()#org/apache/batik/anim/dom/SVGOMElement/getAttributeNS(java.lang.String,java.lang.String)
org/apache/batik/bridge/SVGAnimateElementBridge/parseKeyTimes()#java/util/ArrayList/get(int)
org/apache/batik/bridge/SVGAnimateElementBridge/parseKeyTimes()#java/lang/String/length()
org/apache/batik/bridge/SVGAnimateElementBridge/parseKeyTimes()#java/util/ArrayList/size()
org/apache/batik/bridge/SVGAnimateElementBridge/parseKeyTimes()#java/lang/String/substring(int,int)
org/apache/batik/bridge/SVGAnimateElementBridge/parseValues()#java/util/ArrayList/ArrayList(int)
org/apache/batik/bridge/SVGAnimateElementBridge/parseValues()#org/apache/batik/bridge/SVGAnimateElementBridge/checkValueType(org.apache.batik.anim.values.AnimatableValue)
org/apache/batik/bridge/SVGAnimateElementBridge/parseValues()#java/lang/String/length()
org/apache/batik/bridge/SVGAnimateElementBridge/parseValues()#java/util/ArrayList/toArray(java.lang.Object[])
org/apache/batik/bridge/SVGAnimateElementBridge/parseValues()#java/util/ArrayList/add(java.lang.Object)
org/apache/batik/bridge/SVGAnimateElementBridge/parseValues()#java/lang/String/charAt(int)
org/apache/batik/bridge/SVGAnimateElementBridge/parseValues()#java/util/ArrayList/size()
org/apache/batik/bridge/SVGAnimateElementBridge/parseValues()#java/lang/String/substring(int,int)
org/apache/batik/bridge/SVGAnimateElementBridge/parseValues()#org/apache/batik/anim/dom/SVGOMElement/getAttributeNS(java.lang.String,java.lang.String)
org/apache/batik/bridge/SVGAnimateElementBridge/parseKeySplines()#java/lang/Float/Float(float)
org/apache/batik/bridge/SVGAnimateElementBridge/parseKeySplines()#java/util/ArrayList/ArrayList(int)
org/apache/batik/bridge/SVGAnimateElementBridge/parseKeySplines()#java/lang/Float/parseFloat(java.lang.String)
org/apache/batik/bridge/SVGAnimateElementBridge/parseKeySplines()#java/lang/String/charAt(int)
org/apache/batik/bridge/SVGAnimateElementBridge/parseKeySplines()#java/util/List/size()
org/apache/batik/bridge/SVGAnimateElementBridge/parseKeySplines()#java/lang/String/substring(int,int)
org/apache/batik/bridge/SVGAnimateElementBridge/parseKeySplines()#java/lang/Float/floatValue()
org/apache/batik/bridge/SVGAnimateElementBridge/parseKeySplines()#java/util/List/add(java.lang.Object)
org/apache/batik/bridge/SVGAnimateElementBridge/parseKeySplines()#java/util/List/get(int)
org/apache/batik/bridge/SVGAnimateElementBridge/parseKeySplines()#java/lang/String/length()
org/apache/batik/bridge/SVGAnimateElementBridge/parseKeySplines()#org/apache/batik/anim/dom/SVGOMElement/getAttributeNS(java.lang.String,java.lang.String)
org/apache/batik/bridge/svg12/SVGFlowRootElementBridge/gatherFlowPara(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)#java/util/ArrayList/ArrayList()
org/apache/batik/bridge/svg12/SVGFlowRootElementBridge/gatherFlowPara(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)#java/util/Iterator/hasNext()
org/apache/batik/bridge/svg12/SVGFlowRootElementBridge/gatherFlowPara(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)#java/lang/Integer/Integer(int)
org/apache/batik/bridge/svg12/SVGFlowRootElementBridge/gatherFlowPara(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)#org/apache/batik/bridge/SVGTextElementBridge$AttributedStringBuffer/toAttributedString()
org/apache/batik/bridge/svg12/SVGFlowRootElementBridge/gatherFlowPara(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)#org/w3c/dom/Element/getLocalName()
org/apache/batik/bridge/svg12/SVGFlowRootElementBridge/gatherFlowPara(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)#java/util/List/size()
org/apache/batik/bridge/svg12/SVGFlowRootElementBridge/gatherFlowPara(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)#java/util/Iterator/next()
org/apache/batik/bridge/svg12/SVGFlowRootElementBridge/gatherFlowPara(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)#org/w3c/dom/Node/getNamespaceURI()
org/apache/batik/bridge/svg12/SVGFlowRootElementBridge/gatherFlowPara(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)#java/util/List/add(java.lang.Object)
org/apache/batik/bridge/svg12/SVGFlowRootElementBridge/gatherFlowPara(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)#java/util/List/iterator()
org/apache/batik/bridge/svg12/SVGFlowRootElementBridge/gatherFlowPara(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)#org/w3c/dom/Node/getNodeType()
org/apache/batik/bridge/svg12/SVGFlowRootElementBridge/gatherFlowPara(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)#java/lang/Integer/intValue()
org/apache/batik/bridge/svg12/SVGFlowRootElementBridge/gatherFlowPara(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)#org/apache/batik/bridge/svg12/SVGFlowRootElementBridge/getFirstChild(org.w3c.dom.Node)
org/apache/batik/bridge/svg12/SVGFlowRootElementBridge/gatherFlowPara(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)#java/text/AttributedString/addAttribute(java.text.AttributedCharacterIterator$Attribute,java.lang.Object,int,int)
org/apache/batik/bridge/svg12/SVGFlowRootElementBridge/gatherFlowPara(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)#java/util/WeakHashMap/put(java.lang.Object,java.lang.Object)
org/apache/batik/bridge/svg12/SVGFlowRootElementBridge/gatherFlowPara(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)#org/apache/batik/gvt/text/TextPaintInfo/TextPaintInfo()
org/apache/batik/bridge/svg12/SVGFlowRootElementBridge/gatherFlowPara(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)#java/lang/String/equals(java.lang.Object)
org/apache/batik/bridge/svg12/SVGFlowRootElementBridge/gatherFlowPara(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)#org/apache/batik/bridge/svg12/SVGFlowRootElementBridge/getNextSibling(org.w3c.dom.Node)
org/apache/batik/bridge/svg12/SVGFlowRootElementBridge/gatherFlowPara(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)#java/util/LinkedList/LinkedList()
org/apache/batik/bridge/svg12/SVGFlowRootElementBridge/gatherFlowPara(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)#org/apache/batik/bridge/SVGTextElementBridge$AttributedStringBuffer/AttributedStringBuffer()
org/apache/batik/bridge/svg12/SVGFlowRootElementBridge/gatherFlowPara(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)#java/util/List/get(int)
org/apache/batik/bridge/svg12/SVGFlowRootElementBridge/gatherFlowPara(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)#java/lang/Object/Object()
org/apache/batik/bridge/svg12/SVGFlowRootElementBridge/gatherFlowPara(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)#org/apache/batik/bridge/SVGTextElementBridge$AttributedStringBuffer/length()
org/apache/batik/bridge/svg12/SVGFlowRootElementBridge/createGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)#org/apache/batik/bridge/svg12/SVGFlowRootElementBridge/associateSVGContext(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode)
org/apache/batik/bridge/svg12/SVGFlowRootElementBridge/createGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)#java/lang/String/length()
org/apache/batik/bridge/svg12/SVGFlowRootElementBridge/createGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)#org/apache/batik/bridge/svg12/SVGFlowRootElementBridge/getNextSibling(org.w3c.dom.Node)
org/apache/batik/bridge/svg12/SVGFlowRootElementBridge/createGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)#org/apache/batik/gvt/CompositeGraphicsNode/setTransform(java.awt.geom.AffineTransform)
org/apache/batik/bridge/svg12/SVGFlowRootElementBridge/createGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)#org/apache/batik/gvt/CompositeGraphicsNode/setRenderingHints(java.awt.RenderingHints)
org/apache/batik/bridge/svg12/SVGFlowRootElementBridge/createGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)#org/apache/batik/bridge/svg12/SVGFlowRootElementBridge/getFirstChild(org.w3c.dom.Node)
org/apache/batik/bridge/svg12/SVGFlowRootElementBridge/createGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)#org/w3c/dom/Element/getAttributeNS(java.lang.String,java.lang.String)
org/apache/batik/bridge/svg12/SVGFlowRootElementBridge/createGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)#org/apache/batik/gvt/CompositeGraphicsNode/CompositeGraphicsNode()
org/apache/batik/bridge/svg12/SVGFlowRootElementBridge/createGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)#org/apache/batik/bridge/FlowTextNode/setLocation(java.awt.geom.Point2D)
org/apache/batik/bridge/svg12/SVGFlowRootElementBridge/createGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)#org/apache/batik/gvt/CompositeGraphicsNode/add(java.lang.Object)
org/apache/batik/bridge/svg12/SVGFlowRootElementBridge/createGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)#org/apache/batik/gvt/CompositeGraphicsNode/setVisible(boolean)
org/apache/batik/bridge/svg12/SVGFlowRootElementBridge/createGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)#org/w3c/dom/Node/getNodeType()
org/apache/batik/bridge/svg12/SVGFlowRootElementBridge/dumpACIWord(java.text.AttributedString)#java/text/AttributedCharacterIterator/current()
org/apache/batik/bridge/svg12/SVGFlowRootElementBridge/dumpACIWord(java.text.AttributedString)#java/lang/Integer/intValue()
org/apache/batik/bridge/svg12/SVGFlowRootElementBridge/dumpACIWord(java.text.AttributedString)#java/text/AttributedCharacterIterator/next()
org/apache/batik/bridge/svg12/SVGFlowRootElementBridge/dumpACIWord(java.text.AttributedString)#java/io/PrintStream/println(java.lang.String)
org/apache/batik/bridge/svg12/SVGFlowRootElementBridge/dumpACIWord(java.text.AttributedString)#java/lang/StringBuffer/append(char)
org/apache/batik/bridge/svg12/SVGFlowRootElementBridge/dumpACIWord(java.text.AttributedString)#java/lang/StringBuffer/toString()
org/apache/batik/bridge/svg12/SVGFlowRootElementBridge/dumpACIWord(java.text.AttributedString)#java/lang/StringBuffer/append(int)
org/apache/batik/bridge/svg12/SVGFlowRootElementBridge/dumpACIWord(java.text.AttributedString)#java/text/AttributedString/getIterator()
org/apache/batik/bridge/svg12/SVGFlowRootElementBridge/dumpACIWord(java.text.AttributedString)#java/lang/StringBuffer/StringBuffer()
org/apache/batik/bridge/svg12/SVGFlowRootElementBridge/dumpACIWord(java.text.AttributedString)#java/text/AttributedCharacterIterator/getAttribute(java.text.AttributedCharacterIterator$Attribute)
org/apache/batik/bridge/svg12/SVGFlowRootElementBridge/buildGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode)#org/apache/batik/bridge/svg12/SVGFlowRootElementBridge/getFirstChild(org.w3c.dom.Node)
org/apache/batik/bridge/svg12/SVGFlowRootElementBridge/buildGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/batik/bridge/svg12/SVGFlowRootElementBridge/buildGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode)#org/apache/batik/bridge/svg12/SVGFlowRootElementBridge$RegionChangeListener/RegionChangeListener(org.apache.batik.bridge.svg12.SVGFlowRootElementBridge)
org/apache/batik/bridge/svg12/SVGFlowRootElementBridge/buildGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode)#org/apache/batik/dom/AbstractNode/initializeEventSupport()
org/apache/batik/bridge/svg12/SVGFlowRootElementBridge/buildGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode)#org/apache/batik/bridge/svg12/SVGFlowRootElementBridge/getNextSibling(org.w3c.dom.Node)
org/apache/batik/bridge/svg12/SVGFlowRootElementBridge/buildGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode)#org/apache/batik/bridge/svg12/SVG12TextElementBridge/buildGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode)
org/apache/batik/bridge/svg12/SVGFlowRootElementBridge/buildGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode)#org/apache/batik/gvt/CompositeGraphicsNode/add(java.lang.Object)
org/apache/batik/bridge/svg12/SVGFlowRootElementBridge/buildGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode)#org/apache/batik/gvt/CompositeGraphicsNode/get(int)
org/apache/batik/bridge/svg12/SVGFlowRootElementBridge/buildGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode)#org/apache/batik/anim/dom/XBLEventSupport/addImplementationEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean)
org/apache/batik/bridge/svg12/SVGFlowRootElementBridge/buildGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode)#org/w3c/dom/Node/getNodeType()
org/apache/batik/bridge/svg12/SVGFlowRootElementBridge/buildGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode)#java/util/HashMap/HashMap()
org/apache/batik/bridge/svg12/SVGFlowRootElementBridge/fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer,java.util.List)#org/apache/batik/bridge/SVGTextElementBridge$AttributedStringBuffer/getLastChar()
org/apache/batik/bridge/svg12/SVGFlowRootElementBridge/fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer,java.util.List)#java/util/HashMap/HashMap(java.util.Map)
org/apache/batik/bridge/svg12/SVGFlowRootElementBridge/fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer,java.util.List)#org/apache/batik/dom/util/XMLSupport/getXMLSpace(org.w3c.dom.Element)
org/apache/batik/bridge/svg12/SVGFlowRootElementBridge/fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer,java.util.List)#org/w3c/dom/Node/getNamespaceURI()
org/apache/batik/bridge/svg12/SVGFlowRootElementBridge/fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer,java.util.List)#java/util/WeakHashMap/values()
org/apache/batik/bridge/svg12/SVGFlowRootElementBridge/fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer,java.util.List)#java/util/List/add(java.lang.Object)
org/apache/batik/bridge/svg12/SVGFlowRootElementBridge/fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer,java.util.List)#java/util/List/get(int)
org/apache/batik/bridge/svg12/SVGFlowRootElementBridge/fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer,java.util.List)#org/apache/batik/bridge/SVGTextElementBridge$AttributedStringBuffer/append(java.lang.String,java.util.Map)
org/apache/batik/bridge/svg12/SVGFlowRootElementBridge/fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer,java.util.List)#java/lang/Integer/intValue()
org/apache/batik/bridge/svg12/SVGFlowRootElementBridge/fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer,java.util.List)#org/apache/batik/bridge/svg12/SVGFlowRootElementBridge/getFirstChild(org.w3c.dom.Node)
org/apache/batik/bridge/svg12/SVGFlowRootElementBridge/fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer,java.util.List)#org/w3c/dom/Node/getNodeValue()
org/apache/batik/bridge/svg12/SVGFlowRootElementBridge/fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer,java.util.List)#org/apache/batik/bridge/SVGAElementBridge$CursorHolder/CursorHolder(java.awt.Cursor)
org/apache/batik/bridge/svg12/SVGFlowRootElementBridge/fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer,java.util.List)#org/apache/batik/dom/util/XLinkSupport/getXLinkHref(org.w3c.dom.Element)
org/apache/batik/bridge/svg12/SVGFlowRootElementBridge/fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer,java.util.List)#java/util/Iterator/hasNext()
org/apache/batik/bridge/svg12/SVGFlowRootElementBridge/fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer,java.util.List)#java/util/List/remove(int)
org/apache/batik/bridge/svg12/SVGFlowRootElementBridge/fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer,java.util.List)#java/util/WeakHashMap/get(java.lang.Object)
org/apache/batik/bridge/svg12/SVGFlowRootElementBridge/fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer,java.util.List)#java/lang/Integer/Integer(int)
org/apache/batik/bridge/svg12/SVGFlowRootElementBridge/fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer,java.util.List)#org/w3c/dom/Node/getLocalName()
org/apache/batik/bridge/svg12/SVGFlowRootElementBridge/fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer,java.util.List)#org/apache/batik/bridge/SVGTextElementBridge$AttributedStringBuffer/stripLast()
org/apache/batik/bridge/svg12/SVGFlowRootElementBridge/fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer,java.util.List)#java/lang/String/length()
org/apache/batik/bridge/svg12/SVGFlowRootElementBridge/fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer,java.util.List)#org/apache/batik/dom/events/NodeEventTarget/addEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean,java.lang.Object)
org/apache/batik/bridge/svg12/SVGFlowRootElementBridge/fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer,java.util.List)#java/util/Map/get(java.lang.Object)
org/apache/batik/bridge/svg12/SVGFlowRootElementBridge/fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer,java.util.List)#java/util/List/size()
org/apache/batik/bridge/svg12/SVGFlowRootElementBridge/fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer,java.util.List)#org/apache/batik/bridge/SVGAElementBridge$CursorMouseOverListener/CursorMouseOverListener(org.apache.batik.bridge.UserAgent,org.apache.batik.bridge.SVGAElementBridge$CursorHolder)
org/apache/batik/bridge/svg12/SVGFlowRootElementBridge/fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer,java.util.List)#java/util/Iterator/next()
org/apache/batik/bridge/svg12/SVGFlowRootElementBridge/fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer,java.util.List)#java/util/HashMap/HashMap()
org/apache/batik/bridge/svg12/SVGFlowRootElementBridge/fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer,java.util.List)#java/lang/String/equals(java.lang.Object)
org/apache/batik/bridge/svg12/SVGFlowRootElementBridge/fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer,java.util.List)#org/apache/batik/bridge/svg12/SVGFlowRootElementBridge/getNextSibling(org.w3c.dom.Node)
org/apache/batik/bridge/svg12/SVGFlowRootElementBridge/fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer,java.util.List)#java/util/Collection/iterator()
org/apache/batik/bridge/svg12/SVGFlowRootElementBridge/fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer,java.util.List)#java/util/List/set(int,java.lang.Object)
org/apache/batik/bridge/svg12/SVGFlowRootElementBridge/fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer,java.util.List)#org/apache/batik/bridge/SVGTextElementBridge$AttributedStringBuffer/length()
org/apache/batik/bridge/svg12/SVGFlowRootElementBridge/fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer,java.util.List)#org/apache/batik/bridge/SVGAElementBridge$AnchorListener/AnchorListener(org.apache.batik.bridge.UserAgent,org.apache.batik.bridge.SVGAElementBridge$CursorHolder)
org/apache/batik/bridge/svg12/SVGFlowRootElementBridge/fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer,java.util.List)#org/apache/batik/bridge/SVGAElementBridge$CursorMouseOutListener/CursorMouseOutListener(org.apache.batik.bridge.UserAgent,org.apache.batik.bridge.SVGAElementBridge$CursorHolder)
org/apache/batik/bridge/svg12/SVGFlowRootElementBridge/fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer,java.util.List)#org/apache/batik/bridge/svg12/SVGFlowRootElementBridge/normalizeString(java.lang.String,boolean,boolean)
org/apache/batik/bridge/svg12/SVGFlowRootElementBridge/fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer,java.util.List)#org/w3c/dom/Node/getNodeType()
org/apache/batik/bridge/svg12/SVGFlowRootElementBridge/gatherRegionInfo(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,float,java.util.List)#org/apache/batik/bridge/svg12/SVGFlowRootElementBridge/getFirstChild(org.w3c.dom.Node)
org/apache/batik/bridge/svg12/SVGFlowRootElementBridge/gatherRegionInfo(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,float,java.util.List)#java/util/Map/get(java.lang.Object)
org/apache/batik/bridge/svg12/SVGFlowRootElementBridge/gatherRegionInfo(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,float,java.util.List)#org/apache/batik/bridge/svg12/SVGFlowRootElementBridge/getNextSibling(org.w3c.dom.Node)
org/apache/batik/bridge/svg12/SVGFlowRootElementBridge/gatherRegionInfo(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,float,java.util.List)#org/apache/batik/gvt/flow/RegionInfo/RegionInfo(java.awt.Shape,float)
org/apache/batik/bridge/svg12/SVGFlowRootElementBridge/gatherRegionInfo(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,float,java.util.List)#java/util/List/add(java.lang.Object)
org/apache/batik/bridge/svg12/SVGFlowRootElementBridge/gatherRegionInfo(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,float,java.util.List)#org/apache/batik/gvt/GraphicsNode/getTransform()
org/apache/batik/bridge/svg12/SVGFlowRootElementBridge/gatherRegionInfo(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,float,java.util.List)#java/awt/geom/AffineTransform/createTransformedShape(java.awt.Shape)
org/apache/batik/bridge/svg12/SVGFlowRootElementBridge/gatherRegionInfo(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,float,java.util.List)#org/apache/batik/gvt/GraphicsNode/getOutline()
org/apache/batik/bridge/svg12/SVGFlowRootElementBridge/gatherRegionInfo(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,float,java.util.List)#org/w3c/dom/Node/getNodeType()
org/apache/batik/bridge/svg12/SVG12ScriptingEnvironment/HandlerScriptingEventListener/handleEvent(org.w3c.dom.events.Event)#org/apache/batik/dom/AbstractElement/getOwnerDocument()
org/apache/batik/bridge/svg12/SVG12ScriptingEnvironment/HandlerScriptingEventListener/handleEvent(org.w3c.dom.events.Event)#java/lang/Integer/Integer(int)
org/apache/batik/bridge/svg12/SVG12ScriptingEnvironment/HandlerScriptingEventListener/handleEvent(org.w3c.dom.events.Event)#org/w3c/dom/Element/getLocalName()
org/apache/batik/bridge/svg12/SVG12ScriptingEnvironment/HandlerScriptingEventListener/handleEvent(org.w3c.dom.events.Event)#org/w3c/dom/Element/getNamespaceURI()
org/apache/batik/bridge/svg12/SVG12ScriptingEnvironment/HandlerScriptingEventListener/handleEvent(org.w3c.dom.events.Event)#java/lang/String/equals(java.lang.Object)
org/apache/batik/bridge/svg12/SVG12ScriptingEnvironment/HandlerScriptingEventListener/handleEvent(org.w3c.dom.events.Event)#org/apache/batik/bridge/svg12/SVG12ScriptingEnvironment/runEventHandler(java.lang.String,org.w3c.dom.events.Event,java.lang.String,java.lang.String)
org/apache/batik/bridge/svg12/SVG12ScriptingEnvironment/HandlerScriptingEventListener/handleEvent(org.w3c.dom.events.Event)#org/w3c/dom/events/Event/getCurrentTarget()
org/apache/batik/bridge/svg12/SVG12ScriptingEnvironment/HandlerScriptingEventListener/handleEvent(org.w3c.dom.events.Event)#org/w3c/dom/Element/getAttributeNS(java.lang.String,java.lang.String)
org/apache/batik/bridge/svg12/SVG12ScriptingEnvironment/HandlerScriptingEventListener/handleEvent(org.w3c.dom.events.Event)#org/apache/batik/dom/AbstractElement/getTextContent()
org/apache/batik/bridge/svg12/SVG12ScriptingEnvironment/HandlerScriptingEventListener/handleEvent(org.w3c.dom.events.Event)#org/apache/batik/dom/AbstractElement/getAttributeNS(java.lang.String,java.lang.String)
org/apache/batik/bridge/svg12/SVG12ScriptingEnvironment/HandlerScriptingEventListener/handleEvent(org.w3c.dom.events.Event)#java/lang/String/length()
org/apache/batik/bridge/svg12/SVG12ScriptingEnvironment/HandlerScriptingEventListener/handleEvent(org.w3c.dom.events.Event)#org/apache/batik/dom/AbstractDocument/getDocumentURI()
org/apache/batik/bridge/StrokingTextPainter/printAttrs(java.text.AttributedCharacterIterator)#java/text/AttributedCharacterIterator/current()
org/apache/batik/bridge/StrokingTextPainter/printAttrs(java.text.AttributedCharacterIterator)#java/lang/StringBuilder/append(int)
org/apache/batik/bridge/StrokingTextPainter/printAttrs(java.text.AttributedCharacterIterator)#java/text/AttributedCharacterIterator/getRunLimit()
org/apache/batik/bridge/StrokingTextPainter/printAttrs(java.text.AttributedCharacterIterator)#java/lang/StringBuilder/StringBuilder()
org/apache/batik/bridge/StrokingTextPainter/printAttrs(java.text.AttributedCharacterIterator)#java/text/AttributedCharacterIterator/first()
org/apache/batik/bridge/StrokingTextPainter/printAttrs(java.text.AttributedCharacterIterator)#java/text/AttributedCharacterIterator/setIndex(int)
org/apache/batik/bridge/StrokingTextPainter/printAttrs(java.text.AttributedCharacterIterator)#java/lang/StringBuilder/toString()
org/apache/batik/bridge/StrokingTextPainter/printAttrs(java.text.AttributedCharacterIterator)#java/text/AttributedCharacterIterator/getBeginIndex()
org/apache/batik/bridge/StrokingTextPainter/printAttrs(java.text.AttributedCharacterIterator)#java/io/PrintStream/print(java.lang.String)
org/apache/batik/bridge/StrokingTextPainter/printAttrs(java.text.AttributedCharacterIterator)#java/lang/StringBuilder/append(java.lang.String)
org/apache/batik/bridge/StrokingTextPainter/printAttrs(java.text.AttributedCharacterIterator)#java/io/PrintStream/println(java.lang.String)
org/apache/batik/bridge/StrokingTextPainter/createModifiedACIForFontMatching(java.text.AttributedCharacterIterator)#java/text/AttributedCharacterIterator/getRunStart(java.text.AttributedCharacterIterator$Attribute)
org/apache/batik/bridge/StrokingTextPainter/createModifiedACIForFontMatching(java.text.AttributedCharacterIterator)#java/text/AttributedCharacterIterator/getBeginIndex()
org/apache/batik/bridge/StrokingTextPainter/createModifiedACIForFontMatching(java.text.AttributedCharacterIterator)#java/text/AttributedCharacterIterator/getRunLimit(java.text.AttributedCharacterIterator$Attribute)
org/apache/batik/bridge/StrokingTextPainter/createModifiedACIForFontMatching(java.text.AttributedCharacterIterator)#java/util/List/size()
org/apache/batik/bridge/StrokingTextPainter/createModifiedACIForFontMatching(java.text.AttributedCharacterIterator)#java/lang/Float/floatValue()
org/apache/batik/bridge/StrokingTextPainter/createModifiedACIForFontMatching(java.text.AttributedCharacterIterator)#java/text/AttributedCharacterIterator/getAttribute(java.text.AttributedCharacterIterator$Attribute)
org/apache/batik/bridge/StrokingTextPainter/createModifiedACIForFontMatching(java.text.AttributedCharacterIterator)#java/text/AttributedString/addAttribute(java.text.AttributedCharacterIterator$Attribute,java.lang.Object,int,int)
org/apache/batik/bridge/StrokingTextPainter/createModifiedACIForFontMatching(java.text.AttributedCharacterIterator)#org/apache/batik/gvt/font/GVTFontFamily/deriveFont(float,java.text.AttributedCharacterIterator)
org/apache/batik/bridge/StrokingTextPainter/createModifiedACIForFontMatching(java.text.AttributedCharacterIterator)#java/util/List/add(java.lang.Object)
org/apache/batik/bridge/StrokingTextPainter/createModifiedACIForFontMatching(java.text.AttributedCharacterIterator)#java/text/AttributedCharacterIterator/first()
org/apache/batik/bridge/StrokingTextPainter/createModifiedACIForFontMatching(java.text.AttributedCharacterIterator)#java/text/AttributedCharacterIterator/setIndex(int)
org/apache/batik/bridge/StrokingTextPainter/createModifiedACIForFontMatching(java.text.AttributedCharacterIterator)#java/util/List/get(int)
org/apache/batik/bridge/StrokingTextPainter/createModifiedACIForFontMatching(java.text.AttributedCharacterIterator)#org/apache/batik/gvt/font/GVTFont/canDisplayUpTo(java.text.CharacterIterator,int,int)
org/apache/batik/bridge/StrokingTextPainter/createModifiedACIForFontMatching(java.text.AttributedCharacterIterator)#java/text/AttributedString/AttributedString(java.text.AttributedCharacterIterator)
org/apache/batik/bridge/StrokingTextPainter/createModifiedACIForFontMatching(java.text.AttributedCharacterIterator)#java/text/AttributedString/getIterator()
org/apache/batik/bridge/StrokingTextPainter/paintDecorations(java.util.List,java.awt.Graphics2D,int)#java/awt/geom/Rectangle2D/getY()
org/apache/batik/bridge/StrokingTextPainter/paintDecorations(java.util.List,java.awt.Graphics2D,int)#java/lang/Math/min(double,double)
org/apache/batik/bridge/StrokingTextPainter/paintDecorations(java.util.List,java.awt.Graphics2D,int)#java/awt/geom/Rectangle2D/getMaxX()
org/apache/batik/bridge/StrokingTextPainter/paintDecorations(java.util.List,java.awt.Graphics2D,int)#java/awt/Shape/getBounds2D()
org/apache/batik/bridge/StrokingTextPainter/paintDecorations(java.util.List,java.awt.Graphics2D,int)#java/awt/Graphics2D/fill(java.awt.Shape)
org/apache/batik/bridge/StrokingTextPainter/paintDecorations(java.util.List,java.awt.Graphics2D,int)#java/awt/Graphics2D/setStroke(java.awt.Stroke)
org/apache/batik/bridge/StrokingTextPainter/paintDecorations(java.util.List,java.awt.Graphics2D,int)#java/awt/geom/Rectangle2D/getHeight()
org/apache/batik/bridge/StrokingTextPainter/paintDecorations(java.util.List,java.awt.Graphics2D,int)#java/text/AttributedCharacterIterator/first()
org/apache/batik/bridge/StrokingTextPainter/paintDecorations(java.util.List,java.awt.Graphics2D,int)#java/awt/Graphics2D/setPaint(java.awt.Paint)
org/apache/batik/bridge/StrokingTextPainter/paintDecorations(java.util.List,java.awt.Graphics2D,int)#java/awt/Graphics2D/setComposite(java.awt.Composite)
org/apache/batik/bridge/StrokingTextPainter/paintDecorations(java.util.List,java.awt.Graphics2D,int)#java/awt/geom/Rectangle2D/getWidth()
org/apache/batik/bridge/StrokingTextPainter/paintDecorations(java.util.List,java.awt.Graphics2D,int)#java/awt/Graphics2D/draw(java.awt.Shape)
org/apache/batik/bridge/StrokingTextPainter/paintDecorations(java.util.List,java.awt.Graphics2D,int)#java/util/List/size()
org/apache/batik/bridge/StrokingTextPainter/paintDecorations(java.util.List,java.awt.Graphics2D,int)#java/awt/geom/Rectangle2D$Double/Double(double,double,double,double)
org/apache/batik/bridge/StrokingTextPainter/paintDecorations(java.util.List,java.awt.Graphics2D,int)#org/apache/batik/bridge/StrokingTextPainter$TextRun/getACI()
org/apache/batik/bridge/StrokingTextPainter/paintDecorations(java.util.List,java.awt.Graphics2D,int)#java/lang/Math/max(double,double)
org/apache/batik/bridge/StrokingTextPainter/paintDecorations(java.util.List,java.awt.Graphics2D,int)#org/apache/batik/bridge/StrokingTextPainter$TextRun/getLayout()
org/apache/batik/bridge/StrokingTextPainter/paintDecorations(java.util.List,java.awt.Graphics2D,int)#java/util/List/get(int)
org/apache/batik/bridge/StrokingTextPainter/paintDecorations(java.util.List,java.awt.Graphics2D,int)#java/awt/geom/Rectangle2D/setRect(double,double,double,double)
org/apache/batik/bridge/StrokingTextPainter/paintDecorations(java.util.List,java.awt.Graphics2D,int)#org/apache/batik/bridge/StrokingTextPainter$TextRun/isFirstRunInChunk()
org/apache/batik/bridge/StrokingTextPainter/paintDecorations(java.util.List,java.awt.Graphics2D,int)#java/awt/geom/Rectangle2D/getX()
org/apache/batik/bridge/StrokingTextPainter/paintDecorations(java.util.List,java.awt.Graphics2D,int)#java/text/AttributedCharacterIterator/getAttribute(java.text.AttributedCharacterIterator$Attribute)
org/apache/batik/bridge/StrokingTextPainter/getDecorationOutline(java.util.List,int)#java/awt/geom/Rectangle2D/getY()
org/apache/batik/bridge/StrokingTextPainter/getDecorationOutline(java.util.List,int)#java/lang/Math/min(double,double)
org/apache/batik/bridge/StrokingTextPainter/getDecorationOutline(java.util.List,int)#java/awt/geom/Rectangle2D/getMaxX()
org/apache/batik/bridge/StrokingTextPainter/getDecorationOutline(java.util.List,int)#java/awt/geom/GeneralPath/append(java.awt.Shape,boolean)
org/apache/batik/bridge/StrokingTextPainter/getDecorationOutline(java.util.List,int)#java/awt/Shape/getBounds2D()
org/apache/batik/bridge/StrokingTextPainter/getDecorationOutline(java.util.List,int)#java/awt/geom/Rectangle2D/getWidth()
org/apache/batik/bridge/StrokingTextPainter/getDecorationOutline(java.util.List,int)#java/awt/geom/GeneralPath/GeneralPath(java.awt.Shape)
org/apache/batik/bridge/StrokingTextPainter/getDecorationOutline(java.util.List,int)#java/awt/geom/Rectangle2D/getHeight()
org/apache/batik/bridge/StrokingTextPainter/getDecorationOutline(java.util.List,int)#java/text/AttributedCharacterIterator/first()
org/apache/batik/bridge/StrokingTextPainter/getDecorationOutline(java.util.List,int)#java/util/List/size()
org/apache/batik/bridge/StrokingTextPainter/getDecorationOutline(java.util.List,int)#java/awt/geom/Rectangle2D$Double/Double(double,double,double,double)
org/apache/batik/bridge/StrokingTextPainter/getDecorationOutline(java.util.List,int)#org/apache/batik/bridge/StrokingTextPainter$TextRun/getACI()
org/apache/batik/bridge/StrokingTextPainter/getDecorationOutline(java.util.List,int)#java/lang/Math/max(double,double)
org/apache/batik/bridge/StrokingTextPainter/getDecorationOutline(java.util.List,int)#org/apache/batik/bridge/StrokingTextPainter$TextRun/getLayout()
org/apache/batik/bridge/StrokingTextPainter/getDecorationOutline(java.util.List,int)#java/util/List/get(int)
org/apache/batik/bridge/StrokingTextPainter/getDecorationOutline(java.util.List,int)#java/awt/geom/Rectangle2D/setRect(double,double,double,double)
org/apache/batik/bridge/StrokingTextPainter/getDecorationOutline(java.util.List,int)#org/apache/batik/bridge/StrokingTextPainter$TextRun/isFirstRunInChunk()
org/apache/batik/bridge/StrokingTextPainter/getDecorationOutline(java.util.List,int)#java/awt/geom/Rectangle2D/getX()
org/apache/batik/bridge/StrokingTextPainter/getDecorationOutline(java.util.List,int)#java/text/AttributedCharacterIterator/getAttribute(java.text.AttributedCharacterIterator$Attribute)
org/apache/batik/bridge/StrokingTextPainter/getTextChunk(org.apache.batik.bridge.TextNode,java.text.AttributedCharacterIterator,int[],java.util.List,org.apache.batik.bridge.StrokingTextPainter$TextChunk)#java/text/AttributedCharacterIterator/current()
org/apache/batik/bridge/StrokingTextPainter/getTextChunk(org.apache.batik.bridge.TextNode,java.text.AttributedCharacterIterator,int[],java.util.List,org.apache.batik.bridge.StrokingTextPainter$TextChunk)#org/apache/batik/bridge/TextNode/getRenderingHints()
org/apache/batik/bridge/StrokingTextPainter/getTextChunk(org.apache.batik.bridge.TextNode,java.text.AttributedCharacterIterator,int[],java.util.List,org.apache.batik.bridge.StrokingTextPainter$TextChunk)#java/awt/RenderingHints/get(java.lang.Object)
org/apache/batik/bridge/StrokingTextPainter/getTextChunk(org.apache.batik.bridge.TextNode,java.text.AttributedCharacterIterator,int[],java.util.List,org.apache.batik.bridge.StrokingTextPainter$TextChunk)#java/awt/geom/Point2D$Float/Float(float,float)
org/apache/batik/bridge/StrokingTextPainter/getTextChunk(org.apache.batik.bridge.TextNode,java.text.AttributedCharacterIterator,int[],java.util.List,org.apache.batik.bridge.StrokingTextPainter$TextChunk)#org/apache/batik/bridge/StrokingTextPainter/getTextLayoutFactory()
org/apache/batik/bridge/StrokingTextPainter/getTextChunk(org.apache.batik.bridge.TextNode,java.text.AttributedCharacterIterator,int[],java.util.List,org.apache.batik.bridge.StrokingTextPainter$TextChunk)#java/lang/System/arraycopy(java.lang.Object,int,java.lang.Object,int,int)
org/apache/batik/bridge/StrokingTextPainter/getTextChunk(org.apache.batik.bridge.TextNode,java.text.AttributedCharacterIterator,int[],java.util.List,org.apache.batik.bridge.StrokingTextPainter$TextChunk)#org/apache/batik/bridge/StrokingTextPainter$TextChunk/TextChunk(org.apache.batik.bridge.StrokingTextPainter,int,int,java.awt.geom.Point2D)
org/apache/batik/bridge/StrokingTextPainter/getTextChunk(org.apache.batik.bridge.TextNode,java.text.AttributedCharacterIterator,int[],java.util.List,org.apache.batik.bridge.StrokingTextPainter$TextChunk)#java/awt/geom/Point2D/getX()
org/apache/batik/bridge/StrokingTextPainter/getTextChunk(org.apache.batik.bridge.TextNode,java.text.AttributedCharacterIterator,int[],java.util.List,org.apache.batik.bridge.StrokingTextPainter$TextChunk)#java/text/AttributedCharacterIterator/getIndex()
org/apache/batik/bridge/StrokingTextPainter/getTextChunk(org.apache.batik.bridge.TextNode,java.text.AttributedCharacterIterator,int[],java.util.List,org.apache.batik.bridge.StrokingTextPainter$TextChunk)#java/text/AttributedCharacterIterator/getRunStart(java.util.Set)
org/apache/batik/bridge/StrokingTextPainter/getTextChunk(org.apache.batik.bridge.TextNode,java.text.AttributedCharacterIterator,int[],java.util.List,org.apache.batik.bridge.StrokingTextPainter$TextChunk)#java/util/List/add(java.lang.Object)
org/apache/batik/bridge/StrokingTextPainter/getTextChunk(org.apache.batik.bridge.TextNode,java.text.AttributedCharacterIterator,int[],java.util.List,org.apache.batik.bridge.StrokingTextPainter$TextChunk)#java/text/AttributedCharacterIterator/getRunLimit(java.util.Set)
org/apache/batik/bridge/StrokingTextPainter/getTextChunk(org.apache.batik.bridge.TextNode,java.text.AttributedCharacterIterator,int[],java.util.List,org.apache.batik.bridge.StrokingTextPainter$TextChunk)#org/apache/batik/gvt/text/AttributedCharacterSpanIterator/AttributedCharacterSpanIterator(java.text.AttributedCharacterIterator,int,int)
org/apache/batik/bridge/StrokingTextPainter/getTextChunk(org.apache.batik.bridge.TextNode,java.text.AttributedCharacterIterator,int[],java.util.List,org.apache.batik.bridge.StrokingTextPainter$TextChunk)#java/text/AttributedCharacterIterator/setIndex(int)
org/apache/batik/bridge/StrokingTextPainter/getTextChunk(org.apache.batik.bridge.TextNode,java.text.AttributedCharacterIterator,int[],java.util.List,org.apache.batik.bridge.StrokingTextPainter$TextChunk)#java/awt/geom/Point2D/getY()
org/apache/batik/bridge/StrokingTextPainter/getTextChunk(org.apache.batik.bridge.TextNode,java.text.AttributedCharacterIterator,int[],java.util.List,org.apache.batik.bridge.StrokingTextPainter$TextChunk)#org/apache/batik/bridge/StrokingTextPainter$TextRun/TextRun(org.apache.batik.bridge.StrokingTextPainter,org.apache.batik.bridge.TextSpanLayout,java.text.AttributedCharacterIterator,boolean)
org/apache/batik/bridge/StrokingTextPainter/getHighlightShape(org.apache.batik.bridge.Mark,org.apache.batik.bridge.Mark)#org/apache/batik/bridge/BasicTextPainter$BasicMark/getHit()
org/apache/batik/bridge/StrokingTextPainter/getHighlightShape(org.apache.batik.bridge.Mark,org.apache.batik.bridge.Mark)#java/awt/geom/GeneralPath/append(java.awt.Shape,boolean)
org/apache/batik/bridge/StrokingTextPainter/getHighlightShape(org.apache.batik.bridge.Mark,org.apache.batik.bridge.Mark)#java/lang/Error/Error(java.lang.String)
org/apache/batik/bridge/StrokingTextPainter/getHighlightShape(org.apache.batik.bridge.Mark,org.apache.batik.bridge.Mark)#java/util/List/size()
org/apache/batik/bridge/StrokingTextPainter/getHighlightShape(org.apache.batik.bridge.Mark,org.apache.batik.bridge.Mark)#org/apache/batik/bridge/BasicTextPainter$BasicMark/getTextNode()
org/apache/batik/bridge/StrokingTextPainter/getHighlightShape(org.apache.batik.bridge.Mark,org.apache.batik.bridge.Mark)#java/awt/Rectangle/isEmpty()
org/apache/batik/bridge/StrokingTextPainter/getHighlightShape(org.apache.batik.bridge.Mark,org.apache.batik.bridge.Mark)#org/apache/batik/bridge/StrokingTextPainter$TextRun/getLayout()
org/apache/batik/bridge/StrokingTextPainter/getHighlightShape(org.apache.batik.bridge.Mark,org.apache.batik.bridge.Mark)#java/util/List/get(int)
org/apache/batik/bridge/StrokingTextPainter/getHighlightShape(org.apache.batik.bridge.Mark,org.apache.batik.bridge.Mark)#java/awt/Shape/getBounds()
org/apache/batik/bridge/StrokingTextPainter/getHighlightShape(org.apache.batik.bridge.Mark,org.apache.batik.bridge.Mark)#java/awt/geom/GeneralPath/GeneralPath()
org/apache/batik/bridge/StrokingTextPainter/adjustChunkOffsets(java.awt.geom.Point2D,java.util.List,org.apache.batik.bridge.StrokingTextPainter$TextChunk)#java/awt/geom/Rectangle2D/getY()
org/apache/batik/bridge/StrokingTextPainter/adjustChunkOffsets(java.awt.geom.Point2D,java.util.List,org.apache.batik.bridge.StrokingTextPainter$TextChunk)#org/apache/batik/bridge/StrokingTextPainter$TextRun/getLengthAdjust()
org/apache/batik/bridge/StrokingTextPainter/adjustChunkOffsets(java.awt.geom.Point2D,java.util.List,org.apache.batik.bridge.StrokingTextPainter$TextChunk)#org/apache/batik/bridge/StrokingTextPainter$TextRun/getACI()
org/apache/batik/bridge/StrokingTextPainter/adjustChunkOffsets(java.awt.geom.Point2D,java.util.List,org.apache.batik.bridge.StrokingTextPainter$TextChunk)#java/awt/geom/Point2D$Float/Float(float,float)
org/apache/batik/bridge/StrokingTextPainter/adjustChunkOffsets(java.awt.geom.Point2D,java.util.List,org.apache.batik.bridge.StrokingTextPainter$TextChunk)#java/text/AttributedCharacterIterator/first()
org/apache/batik/bridge/StrokingTextPainter/adjustChunkOffsets(java.awt.geom.Point2D,java.util.List,org.apache.batik.bridge.StrokingTextPainter$TextChunk)#java/text/AttributedCharacterIterator/getBeginIndex()
org/apache/batik/bridge/StrokingTextPainter/adjustChunkOffsets(java.awt.geom.Point2D,java.util.List,org.apache.batik.bridge.StrokingTextPainter$TextChunk)#java/lang/Float/isNaN()
org/apache/batik/bridge/StrokingTextPainter/adjustChunkOffsets(java.awt.geom.Point2D,java.util.List,org.apache.batik.bridge.StrokingTextPainter$TextChunk)#org/apache/batik/gvt/font/GVTGlyphMetrics/getVerticalAdvance()
org/apache/batik/bridge/StrokingTextPainter/adjustChunkOffsets(java.awt.geom.Point2D,java.util.List,org.apache.batik.bridge.StrokingTextPainter$TextChunk)#org/apache/batik/gvt/font/GVTLineMetrics/getAscent()
org/apache/batik/bridge/StrokingTextPainter/adjustChunkOffsets(java.awt.geom.Point2D,java.util.List,org.apache.batik.bridge.StrokingTextPainter$TextChunk)#java/awt/geom/Rectangle2D/getWidth()
org/apache/batik/bridge/StrokingTextPainter/adjustChunkOffsets(java.awt.geom.Point2D,java.util.List,org.apache.batik.bridge.StrokingTextPainter$TextChunk)#java/text/AttributedCharacterIterator/getEndIndex()
org/apache/batik/bridge/StrokingTextPainter/adjustChunkOffsets(java.awt.geom.Point2D,java.util.List,org.apache.batik.bridge.StrokingTextPainter$TextChunk)#org/apache/batik/bridge/StrokingTextPainter$TextRun/getLength()
org/apache/batik/bridge/StrokingTextPainter/adjustChunkOffsets(java.awt.geom.Point2D,java.util.List,org.apache.batik.bridge.StrokingTextPainter$TextChunk)#java/awt/geom/Rectangle2D/getHeight()
org/apache/batik/bridge/StrokingTextPainter/adjustChunkOffsets(java.awt.geom.Point2D,java.util.List,org.apache.batik.bridge.StrokingTextPainter$TextChunk)#java/lang/Float/floatValue()
org/apache/batik/bridge/StrokingTextPainter/adjustChunkOffsets(java.awt.geom.Point2D,java.util.List,org.apache.batik.bridge.StrokingTextPainter$TextChunk)#org/apache/batik/bridge/StrokingTextPainter$TextRun/getLayout()
org/apache/batik/bridge/StrokingTextPainter/adjustChunkOffsets(java.awt.geom.Point2D,java.util.List,org.apache.batik.bridge.StrokingTextPainter$TextChunk)#java/util/List/get(int)
org/apache/batik/bridge/StrokingTextPainter/adjustChunkOffsets(java.awt.geom.Point2D,java.util.List,org.apache.batik.bridge.StrokingTextPainter$TextChunk)#org/apache/batik/gvt/font/GVTLineMetrics/getDescent()
org/apache/batik/bridge/StrokingTextPainter/adjustChunkOffsets(java.awt.geom.Point2D,java.util.List,org.apache.batik.bridge.StrokingTextPainter$TextChunk)#org/apache/batik/bridge/StrokingTextPainter$TextRun/getAnchorType()
org/apache/batik/bridge/StrokingTextPainter/adjustChunkOffsets(java.awt.geom.Point2D,java.util.List,org.apache.batik.bridge.StrokingTextPainter$TextChunk)#org/apache/batik/gvt/font/GVTGlyphMetrics/getHorizontalAdvance()
org/apache/batik/bridge/StrokingTextPainter/adjustChunkOffsets(java.awt.geom.Point2D,java.util.List,org.apache.batik.bridge.StrokingTextPainter$TextChunk)#java/awt/geom/Point2D/getX()
org/apache/batik/bridge/StrokingTextPainter/adjustChunkOffsets(java.awt.geom.Point2D,java.util.List,org.apache.batik.bridge.StrokingTextPainter$TextChunk)#org/apache/batik/gvt/font/GVTGlyphMetrics/getBounds2D()
org/apache/batik/bridge/StrokingTextPainter/adjustChunkOffsets(java.awt.geom.Point2D,java.util.List,org.apache.batik.bridge.StrokingTextPainter$TextChunk)#java/awt/geom/Point2D/getY()
org/apache/batik/bridge/StrokingTextPainter/adjustChunkOffsets(java.awt.geom.Point2D,java.util.List,org.apache.batik.bridge.StrokingTextPainter$TextChunk)#java/awt/geom/Rectangle2D/getX()
org/apache/batik/bridge/StrokingTextPainter/adjustChunkOffsets(java.awt.geom.Point2D,java.util.List,org.apache.batik.bridge.StrokingTextPainter$TextChunk)#java/text/AttributedCharacterIterator/getAttribute(java.text.AttributedCharacterIterator$Attribute)
org/apache/batik/bridge/StrokingTextPainter/getDecorationStrokeOutline(java.util.List,int)#java/awt/geom/Rectangle2D/getY()
org/apache/batik/bridge/StrokingTextPainter/getDecorationStrokeOutline(java.util.List,int)#java/lang/Math/min(double,double)
org/apache/batik/bridge/StrokingTextPainter/getDecorationStrokeOutline(java.util.List,int)#java/awt/geom/Rectangle2D/getMaxX()
org/apache/batik/bridge/StrokingTextPainter/getDecorationStrokeOutline(java.util.List,int)#java/awt/geom/GeneralPath/append(java.awt.Shape,boolean)
org/apache/batik/bridge/StrokingTextPainter/getDecorationStrokeOutline(java.util.List,int)#java/awt/Shape/getBounds2D()
org/apache/batik/bridge/StrokingTextPainter/getDecorationStrokeOutline(java.util.List,int)#java/awt/geom/Rectangle2D/getWidth()
org/apache/batik/bridge/StrokingTextPainter/getDecorationStrokeOutline(java.util.List,int)#java/awt/geom/GeneralPath/GeneralPath(java.awt.Shape)
org/apache/batik/bridge/StrokingTextPainter/getDecorationStrokeOutline(java.util.List,int)#java/awt/geom/Rectangle2D/getHeight()
org/apache/batik/bridge/StrokingTextPainter/getDecorationStrokeOutline(java.util.List,int)#java/text/AttributedCharacterIterator/first()
org/apache/batik/bridge/StrokingTextPainter/getDecorationStrokeOutline(java.util.List,int)#java/util/List/size()
org/apache/batik/bridge/StrokingTextPainter/getDecorationStrokeOutline(java.util.List,int)#java/awt/geom/Rectangle2D$Double/Double(double,double,double,double)
org/apache/batik/bridge/StrokingTextPainter/getDecorationStrokeOutline(java.util.List,int)#org/apache/batik/bridge/StrokingTextPainter$TextRun/getACI()
org/apache/batik/bridge/StrokingTextPainter/getDecorationStrokeOutline(java.util.List,int)#java/lang/Math/max(double,double)
org/apache/batik/bridge/StrokingTextPainter/getDecorationStrokeOutline(java.util.List,int)#org/apache/batik/bridge/StrokingTextPainter$TextRun/getLayout()
org/apache/batik/bridge/StrokingTextPainter/getDecorationStrokeOutline(java.util.List,int)#java/util/List/get(int)
org/apache/batik/bridge/StrokingTextPainter/getDecorationStrokeOutline(java.util.List,int)#java/awt/geom/Rectangle2D/setRect(double,double,double,double)
org/apache/batik/bridge/StrokingTextPainter/getDecorationStrokeOutline(java.util.List,int)#org/apache/batik/bridge/StrokingTextPainter$TextRun/isFirstRunInChunk()
org/apache/batik/bridge/StrokingTextPainter/getDecorationStrokeOutline(java.util.List,int)#java/awt/Stroke/createStrokedShape(java.awt.Shape)
org/apache/batik/bridge/StrokingTextPainter/getDecorationStrokeOutline(java.util.List,int)#java/awt/geom/Rectangle2D/getX()
org/apache/batik/bridge/StrokingTextPainter/getDecorationStrokeOutline(java.util.List,int)#java/text/AttributedCharacterIterator/getAttribute(java.text.AttributedCharacterIterator$Attribute)
org/apache/batik/bridge/StrokingTextPainter/getTextChunkACIs(java.text.AttributedCharacterIterator)#java/util/ArrayList/ArrayList()
org/apache/batik/bridge/StrokingTextPainter/getTextChunkACIs(java.text.AttributedCharacterIterator)#java/text/AttributedCharacterIterator/getRunLimit(java.text.AttributedCharacterIterator$Attribute)
org/apache/batik/bridge/StrokingTextPainter/getTextChunkACIs(java.text.AttributedCharacterIterator)#java/text/AttributedCharacterIterator/getIndex()
org/apache/batik/bridge/StrokingTextPainter/getTextChunkACIs(java.text.AttributedCharacterIterator)#java/util/List/size()
org/apache/batik/bridge/StrokingTextPainter/getTextChunkACIs(java.text.AttributedCharacterIterator)#java/util/Iterator/next()
org/apache/batik/bridge/StrokingTextPainter/getTextChunkACIs(java.text.AttributedCharacterIterator)#java/util/List/iterator()
org/apache/batik/bridge/StrokingTextPainter/getTextChunkACIs(java.text.AttributedCharacterIterator)#java/text/AttributedCharacterIterator/getAttribute(java.text.AttributedCharacterIterator$Attribute)
org/apache/batik/bridge/StrokingTextPainter/getTextChunkACIs(java.text.AttributedCharacterIterator)#java/util/Iterator/hasNext()
org/apache/batik/bridge/StrokingTextPainter/getTextChunkACIs(java.text.AttributedCharacterIterator)#java/text/AttributedCharacterIterator/getBeginIndex()
org/apache/batik/bridge/StrokingTextPainter/getTextChunkACIs(java.text.AttributedCharacterIterator)#java/lang/Float/isNaN()
org/apache/batik/bridge/StrokingTextPainter/getTextChunkACIs(java.text.AttributedCharacterIterator)#java/util/List/add(java.lang.Object)
org/apache/batik/bridge/StrokingTextPainter/getTextChunkACIs(java.text.AttributedCharacterIterator)#java/text/AttributedCharacterIterator/first()
org/apache/batik/bridge/StrokingTextPainter/getTextChunkACIs(java.text.AttributedCharacterIterator)#org/apache/batik/gvt/text/AttributedCharacterSpanIterator/AttributedCharacterSpanIterator(java.text.AttributedCharacterIterator,int,int)
org/apache/batik/bridge/StrokingTextPainter/getTextChunkACIs(java.text.AttributedCharacterIterator)#java/text/AttributedCharacterIterator/setIndex(int)
org/apache/batik/bridge/SVGColorProfileElementBridge/createICCColorSpaceWithIntent(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.lang.String)#org/apache/batik/util/ParsedURL/complete()
org/apache/batik/bridge/SVGColorProfileElementBridge/createICCColorSpaceWithIntent(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.lang.String)#org/w3c/dom/Element/getOwnerDocument()
org/apache/batik/bridge/SVGColorProfileElementBridge/createICCColorSpaceWithIntent(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.lang.String)#java/lang/String/toLowerCase()
org/apache/batik/bridge/SVGColorProfileElementBridge/createICCColorSpaceWithIntent(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.lang.String)#org/apache/batik/ext/awt/color/NamedProfileCache/request(java.lang.String)
org/apache/batik/bridge/SVGColorProfileElementBridge/createICCColorSpaceWithIntent(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.lang.String)#org/apache/batik/util/ParsedURL/openStream()
org/apache/batik/bridge/SVGColorProfileElementBridge/createICCColorSpaceWithIntent(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.lang.String)#org/w3c/dom/Element/getAttributeNS(java.lang.String,java.lang.String)
org/apache/batik/bridge/SVGColorProfileElementBridge/createICCColorSpaceWithIntent(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.lang.String)#java/lang/String/equalsIgnoreCase(java.lang.String)
org/apache/batik/bridge/SVGColorProfileElementBridge/createICCColorSpaceWithIntent(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.lang.String)#org/w3c/dom/Document/getElementsByTagNameNS(java.lang.String,java.lang.String)
org/apache/batik/bridge/SVGColorProfileElementBridge/createICCColorSpaceWithIntent(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.lang.String)#org/apache/batik/dom/util/XLinkSupport/getXLinkHref(org.w3c.dom.Element)
org/apache/batik/bridge/SVGColorProfileElementBridge/createICCColorSpaceWithIntent(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.lang.String)#org/w3c/dom/NodeList/getLength()
org/apache/batik/bridge/SVGColorProfileElementBridge/createICCColorSpaceWithIntent(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.lang.String)#org/apache/xmlgraphics/java2d/color/ICCColorSpaceWithIntent/ICCColorSpaceWithIntent(java.awt.color.ICC_Profile,org.apache.xmlgraphics.java2d.color.RenderingIntent,java.lang.String,java.lang.String)
org/apache/batik/bridge/SVGColorProfileElementBridge/createICCColorSpaceWithIntent(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.lang.String)#org/apache/batik/util/ParsedURL/ParsedURL(java.lang.String)
org/apache/batik/bridge/SVGColorProfileElementBridge/createICCColorSpaceWithIntent(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.lang.String)#org/apache/batik/dom/AbstractNode/getBaseURI()
org/apache/batik/bridge/SVGColorProfileElementBridge/createICCColorSpaceWithIntent(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.lang.String)#org/apache/batik/ext/awt/color/NamedProfileCache/put(java.lang.String,org.apache.xmlgraphics.java2d.color.ICCColorSpaceWithIntent)
org/apache/batik/bridge/SVGColorProfileElementBridge/createICCColorSpaceWithIntent(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.lang.String)#java/awt/color/ICC_Profile/getInstance(java.io.InputStream)
org/apache/batik/bridge/SVGColorProfileElementBridge/createICCColorSpaceWithIntent(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.lang.String)#org/w3c/dom/NodeList/item(int)
org/apache/batik/bridge/SVGColorProfileElementBridge/createICCColorSpaceWithIntent(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.lang.String)#org/apache/batik/util/ParsedURL/ParsedURL(org.apache.batik.util.ParsedURL,java.lang.String)
org/apache/batik/bridge/SVGColorProfileElementBridge/createICCColorSpaceWithIntent(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.lang.String)#org/w3c/dom/Node/getNodeType()
org/apache/batik/bridge/ScriptingEnvironment/ScriptingEventListener/handleEvent(org.w3c.dom.events.Event)#org/w3c/dom/Element/getAttributeNS(java.lang.String,java.lang.String)
org/apache/batik/bridge/ScriptingEnvironment/ScriptingEventListener/handleEvent(org.w3c.dom.events.Event)#org/w3c/dom/Element/getOwnerDocument()
org/apache/batik/bridge/ScriptingEnvironment/ScriptingEventListener/handleEvent(org.w3c.dom.events.Event)#java/lang/Integer/Integer(int)
org/apache/batik/bridge/ScriptingEnvironment/ScriptingEventListener/handleEvent(org.w3c.dom.events.Event)#java/lang/String/length()
org/apache/batik/bridge/ScriptingEnvironment/ScriptingEventListener/handleEvent(org.w3c.dom.events.Event)#org/w3c/dom/Element/getLocalName()
org/apache/batik/bridge/ScriptingEnvironment/ScriptingEventListener/handleEvent(org.w3c.dom.events.Event)#org/w3c/dom/svg/SVGDocument/getURL()
org/apache/batik/bridge/ScriptingEnvironment/ScriptingEventListener/handleEvent(org.w3c.dom.events.Event)#org/w3c/dom/Element/getNamespaceURI()
org/apache/batik/bridge/ScriptingEnvironment/ScriptingEventListener/handleEvent(org.w3c.dom.events.Event)#java/lang/String/equals(java.lang.Object)
org/apache/batik/bridge/ScriptingEnvironment/ScriptingEventListener/handleEvent(org.w3c.dom.events.Event)#org/w3c/dom/events/Event/getCurrentTarget()
org/apache/batik/bridge/SVGRectElementBridge/buildShape(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.ShapeNode)#java/awt/geom/Rectangle2D$Float/Float(float,float,float,float)
org/apache/batik/bridge/SVGRectElementBridge/buildShape(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.ShapeNode)#org/apache/batik/anim/dom/SVGOMRectElement/getWidth()
org/apache/batik/bridge/SVGRectElementBridge/buildShape(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.ShapeNode)#java/awt/geom/RoundRectangle2D$Float/Float(float,float,float,float,float,float)
org/apache/batik/bridge/SVGRectElementBridge/buildShape(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.ShapeNode)#org/apache/batik/anim/dom/SVGOMRectElement/getRx()
org/apache/batik/bridge/SVGRectElementBridge/buildShape(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.ShapeNode)#org/apache/batik/gvt/ShapeNode/setShape(java.awt.Shape)
org/apache/batik/bridge/SVGRectElementBridge/buildShape(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.ShapeNode)#org/apache/batik/anim/dom/SVGOMRectElement/getX()
org/apache/batik/bridge/SVGRectElementBridge/buildShape(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.ShapeNode)#org/apache/batik/anim/dom/SVGOMRectElement/getHeight()
org/apache/batik/bridge/SVGRectElementBridge/buildShape(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.ShapeNode)#org/apache/batik/anim/dom/SVGOMRectElement/getRy()
org/apache/batik/bridge/SVGRectElementBridge/buildShape(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.ShapeNode)#org/apache/batik/anim/dom/AbstractSVGAnimatedLength/getCheckedValue()
org/apache/batik/bridge/SVGRectElementBridge/buildShape(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.ShapeNode)#org/apache/batik/anim/dom/SVGOMRectElement/getY()
org/apache/batik/bridge/EventTargetWrapper/FunctionAddProxy/call(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[])#org/apache/batik/bridge/EventTargetWrapper$FunctionEventListener/FunctionEventListener(org.mozilla.javascript.Function,org.apache.batik.bridge.RhinoInterpreter)
org/apache/batik/bridge/EventTargetWrapper/FunctionAddProxy/call(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[])#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/batik/bridge/EventTargetWrapper/FunctionAddProxy/call(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[])#org/mozilla/javascript/Function/call(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[])
org/apache/batik/bridge/EventTargetWrapper/FunctionAddProxy/call(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[])#org/w3c/dom/events/EventTarget/addEventListener(java.lang.String,org.w3c.dom.events.EventListener,boolean)
org/apache/batik/bridge/EventTargetWrapper/FunctionAddProxy/call(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[])#java/util/Map/get(java.lang.Object)
org/apache/batik/bridge/EventTargetWrapper/FunctionAddProxy/call(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[])#org/apache/batik/bridge/EventTargetWrapper$HandleEventListener/HandleEventListener(org.mozilla.javascript.Scriptable,org.apache.batik.bridge.RhinoInterpreter)
org/apache/batik/bridge/EventTargetWrapper/FunctionAddProxy/call(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[])#org/mozilla/javascript/Context/jsToJava(java.lang.Object,java.lang.Class)
org/apache/batik/bridge/EventTargetWrapper/FunctionAddProxy/call(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[])#java/lang/ref/SoftReference/SoftReference(java.lang.Object)
org/apache/batik/bridge/EventTargetWrapper/FunctionAddProxy/call(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[])#java/lang/ref/SoftReference/get()
org/apache/batik/bridge/EventTargetWrapper/FunctionAddProxy/call(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[])#org/mozilla/javascript/NativeJavaObject/unwrap()
org/apache/batik/bridge/EventTargetWrapper/FunctionAddProxy/call(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[])#java/lang/Boolean/booleanValue()
org/apache/batik/bridge/SVGAltGlyphElementBridge/createAltGlyphArray(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,float,java.text.AttributedCharacterIterator)#org/apache/batik/dom/util/XLinkSupport/getXLinkHref(org.w3c.dom.Element)
org/apache/batik/bridge/SVGAltGlyphElementBridge/createAltGlyphArray(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,float,java.text.AttributedCharacterIterator)#org/w3c/dom/Element/getOwnerDocument()
org/apache/batik/bridge/SVGAltGlyphElementBridge/createAltGlyphArray(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,float,java.text.AttributedCharacterIterator)#org/apache/batik/anim/dom/SVGOMDocument/createElementNS(java.lang.String,java.lang.String)
org/apache/batik/bridge/SVGAltGlyphElementBridge/createAltGlyphArray(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,float,java.text.AttributedCharacterIterator)#org/w3c/dom/Element/appendChild(org.w3c.dom.Node)
org/apache/batik/bridge/SVGAltGlyphElementBridge/createAltGlyphArray(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,float,java.text.AttributedCharacterIterator)#org/w3c/dom/Element/getLocalName()
org/apache/batik/bridge/SVGAltGlyphElementBridge/createAltGlyphArray(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,float,java.text.AttributedCharacterIterator)#java/lang/String/equals(java.lang.Object)
org/apache/batik/bridge/SVGAltGlyphElementBridge/createAltGlyphArray(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,float,java.text.AttributedCharacterIterator)#org/w3c/dom/Element/getChildNodes()
org/apache/batik/bridge/SVGAltGlyphElementBridge/createAltGlyphArray(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,float,java.text.AttributedCharacterIterator)#org/apache/batik/anim/dom/SVGOMDocument/importNode(org.w3c.dom.Node,boolean)
org/apache/batik/bridge/SVGAltGlyphElementBridge/createAltGlyphArray(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,float,java.text.AttributedCharacterIterator)#org/w3c/dom/NodeList/item(int)
org/apache/batik/bridge/SVGAltGlyphElementBridge/createAltGlyphArray(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,float,java.text.AttributedCharacterIterator)#org/w3c/dom/NodeList/getLength()
org/apache/batik/bridge/SVGAltGlyphElementBridge/createAltGlyphArray(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,float,java.text.AttributedCharacterIterator)#org/w3c/dom/Element/setAttributeNS(java.lang.String,java.lang.String,java.lang.String)
org/apache/batik/bridge/SVGAltGlyphElementBridge/createAltGlyphArray(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,float,java.text.AttributedCharacterIterator)#org/w3c/dom/Element/getElementsByTagNameNS(java.lang.String,java.lang.String)
org/apache/batik/bridge/SVGAltGlyphElementBridge/createAltGlyphArray(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,float,java.text.AttributedCharacterIterator)#org/w3c/dom/Element/getNamespaceURI()
org/apache/batik/bridge/SVGAltGlyphElementBridge/createAltGlyphArray(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,float,java.text.AttributedCharacterIterator)#org/apache/batik/dom/AbstractNode/getBaseURI(org.w3c.dom.Node)
org/apache/batik/bridge/SVGAltGlyphElementBridge/createAltGlyphArray(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,float,java.text.AttributedCharacterIterator)#org/w3c/dom/Node/getNodeType()
org/apache/batik/bridge/SVGAltGlyphElementBridge/getGlyph(org.apache.batik.bridge.BridgeContext,java.lang.String,org.w3c.dom.Element,float,java.text.AttributedCharacterIterator)#org/w3c/dom/Element/getAttributeNS(java.lang.String,java.lang.String)
org/apache/batik/bridge/SVGAltGlyphElementBridge/getGlyph(org.apache.batik.bridge.BridgeContext,java.lang.String,org.w3c.dom.Element,float,java.text.AttributedCharacterIterator)#org/w3c/dom/Element/getOwnerDocument()
org/apache/batik/bridge/SVGAltGlyphElementBridge/getGlyph(org.apache.batik.bridge.BridgeContext,java.lang.String,org.w3c.dom.Element,float,java.text.AttributedCharacterIterator)#org/apache/batik/anim/dom/SVGOMDocument/createElementNS(java.lang.String,java.lang.String)
org/apache/batik/bridge/SVGAltGlyphElementBridge/getGlyph(org.apache.batik.bridge.BridgeContext,java.lang.String,org.w3c.dom.Element,float,java.text.AttributedCharacterIterator)#org/w3c/dom/Element/getParentNode()
org/apache/batik/bridge/SVGAltGlyphElementBridge/getGlyph(org.apache.batik.bridge.BridgeContext,java.lang.String,org.w3c.dom.Element,float,java.text.AttributedCharacterIterator)#org/w3c/dom/Element/appendChild(org.w3c.dom.Node)
org/apache/batik/bridge/SVGAltGlyphElementBridge/getGlyph(org.apache.batik.bridge.BridgeContext,java.lang.String,org.w3c.dom.Element,float,java.text.AttributedCharacterIterator)#java/lang/String/equals(java.lang.Object)
org/apache/batik/bridge/SVGAltGlyphElementBridge/getGlyph(org.apache.batik.bridge.BridgeContext,java.lang.String,org.w3c.dom.Element,float,java.text.AttributedCharacterIterator)#org/apache/batik/anim/dom/SVGOMDocument/importNode(org.w3c.dom.Node,boolean)
org/apache/batik/bridge/SVGAltGlyphElementBridge/getGlyph(org.apache.batik.bridge.BridgeContext,java.lang.String,org.w3c.dom.Element,float,java.text.AttributedCharacterIterator)#java/text/AttributedCharacterIterator/first()
org/apache/batik/bridge/SVGAltGlyphElementBridge/getGlyph(org.apache.batik.bridge.BridgeContext,java.lang.String,org.w3c.dom.Element,float,java.text.AttributedCharacterIterator)#org/w3c/dom/NodeList/getLength()
org/apache/batik/bridge/SVGAltGlyphElementBridge/getGlyph(org.apache.batik.bridge.BridgeContext,java.lang.String,org.w3c.dom.Element,float,java.text.AttributedCharacterIterator)#org/w3c/dom/Element/setAttributeNS(java.lang.String,java.lang.String,java.lang.String)
org/apache/batik/bridge/SVGAltGlyphElementBridge/getGlyph(org.apache.batik.bridge.BridgeContext,java.lang.String,org.w3c.dom.Element,float,java.text.AttributedCharacterIterator)#org/w3c/dom/Element/getElementsByTagNameNS(java.lang.String,java.lang.String)
org/apache/batik/bridge/SVGAltGlyphElementBridge/getGlyph(org.apache.batik.bridge.BridgeContext,java.lang.String,org.w3c.dom.Element,float,java.text.AttributedCharacterIterator)#org/w3c/dom/Element/getLocalName()
org/apache/batik/bridge/SVGAltGlyphElementBridge/getGlyph(org.apache.batik.bridge.BridgeContext,java.lang.String,org.w3c.dom.Element,float,java.text.AttributedCharacterIterator)#org/w3c/dom/Element/getNamespaceURI()
org/apache/batik/bridge/SVGAltGlyphElementBridge/getGlyph(org.apache.batik.bridge.BridgeContext,java.lang.String,org.w3c.dom.Element,float,java.text.AttributedCharacterIterator)#org/apache/batik/dom/AbstractNode/getBaseURI(org.w3c.dom.Node)
org/apache/batik/bridge/SVGAltGlyphElementBridge/getGlyph(org.apache.batik.bridge.BridgeContext,java.lang.String,org.w3c.dom.Element,float,java.text.AttributedCharacterIterator)#org/w3c/dom/NodeList/item(int)
org/apache/batik/bridge/SVGAltGlyphElementBridge/getGlyph(org.apache.batik.bridge.BridgeContext,java.lang.String,org.w3c.dom.Element,float,java.text.AttributedCharacterIterator)#java/text/AttributedCharacterIterator/getAttribute(java.text.AttributedCharacterIterator$Attribute)
org/apache/batik/bridge/svg12/ContentManager/update(boolean)#java/util/HashSet/removeAll(java.util.Collection)
org/apache/batik/bridge/svg12/ContentManager/update(boolean)#java/util/Iterator/hasNext()
org/apache/batik/bridge/svg12/ContentManager/update(boolean)#org/w3c/dom/NodeList/getLength()
org/apache/batik/bridge/svg12/ContentManager/update(boolean)#java/util/HashMap/entrySet()
org/apache/batik/bridge/svg12/ContentManager/update(boolean)#java/util/Iterator/next()
org/apache/batik/bridge/svg12/ContentManager/update(boolean)#java/util/Set/iterator()
org/apache/batik/bridge/svg12/ContentManager/update(boolean)#java/util/HashSet/addAll(java.util.Collection)
org/apache/batik/bridge/svg12/ContentManager/update(boolean)#org/apache/batik/dom/events/NodeEventTarget/removeEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean)
org/apache/batik/bridge/svg12/ContentManager/update(boolean)#org/w3c/dom/NodeList/item(int)
org/apache/batik/bridge/svg12/ContentManager/update(boolean)#java/util/Map$Entry/getValue()
org/apache/batik/bridge/svg12/ContentManager/update(boolean)#java/util/HashSet/HashSet()
org/apache/batik/bridge/svg12/ContentManager/update(boolean)#java/util/LinkedList/iterator()
org/apache/batik/bridge/svg12/ContentManager/update(boolean)#org/w3c/dom/Node/getNextSibling()
org/apache/batik/bridge/svg12/ContentManager/update(boolean)#org/apache/batik/anim/dom/XBLOMShadowTreeElement/getFirstChild()
org/apache/batik/bridge/svg12/ContentManager/update(boolean)#java/util/HashMap/clear()
org/apache/batik/bridge/svg12/ContentManager/update(boolean)#java/util/LinkedList/clear()
org/apache/batik/bridge/svg12/ContentManager/update(boolean)#java/util/HashSet/add(java.lang.Object)
org/apache/batik/bridge/svg12/ContentManager/dispose()#java/util/LinkedList/iterator()
org/apache/batik/bridge/svg12/ContentManager/dispose()#java/util/Iterator/hasNext()
org/apache/batik/bridge/svg12/ContentManager/dispose()#org/w3c/dom/NodeList/getLength()
org/apache/batik/bridge/svg12/ContentManager/dispose()#java/util/HashMap/clear()
org/apache/batik/bridge/svg12/ContentManager/dispose()#java/util/LinkedList/clear()
org/apache/batik/bridge/svg12/ContentManager/dispose()#java/util/Iterator/next()
org/apache/batik/bridge/svg12/ContentManager/dispose()#org/apache/batik/anim/dom/XBLEventSupport/removeImplementationEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean)
org/apache/batik/bridge/svg12/ContentManager/dispose()#java/util/Set/iterator()
org/apache/batik/bridge/svg12/ContentManager/dispose()#org/apache/batik/dom/AbstractNode/getEventSupport()
org/apache/batik/bridge/svg12/ContentManager/dispose()#org/apache/batik/dom/events/NodeEventTarget/removeEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean)
org/apache/batik/bridge/svg12/ContentManager/dispose()#org/w3c/dom/NodeList/item(int)
org/apache/batik/bridge/svg12/ContentManager/dispose()#java/util/Map$Entry/getValue()
org/apache/batik/bridge/svg12/ContentManager/dispose()#java/util/HashMap/entrySet()
org/apache/batik/bridge/svg12/ContentManager/update(boolean,org.w3c.dom.Node)#org/w3c/dom/Node/getNextSibling()
org/apache/batik/bridge/svg12/ContentManager/update(boolean,org.w3c.dom.Node)#org/apache/batik/anim/dom/XBLOMContentElement/addEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean,java.lang.Object)
org/apache/batik/bridge/svg12/ContentManager/update(boolean,org.w3c.dom.Node)#org/w3c/dom/NodeList/getLength()
org/apache/batik/bridge/svg12/ContentManager/update(boolean,org.w3c.dom.Node)#org/apache/batik/anim/dom/XBLOMContentElement/getAttributeNS(java.lang.String,java.lang.String)
org/apache/batik/bridge/svg12/ContentManager/update(boolean,org.w3c.dom.Node)#org/w3c/dom/Node/getFirstChild()
org/apache/batik/bridge/svg12/ContentManager/update(boolean,org.w3c.dom.Node)#org/w3c/dom/NodeList/item(int)
org/apache/batik/bridge/svg12/ContentManager/update(boolean,org.w3c.dom.Node)#org/apache/batik/anim/dom/XBLOMContentElement/hasAttributeNS(java.lang.String,java.lang.String)
org/apache/batik/bridge/svg12/ContentManager/update(boolean,org.w3c.dom.Node)#java/util/LinkedList/add(java.lang.Object)
org/apache/batik/bridge/svg12/ContentManager/update(boolean,org.w3c.dom.Node)#java/util/HashMap/put(java.lang.Object,java.lang.Object)
org/apache/batik/bridge/svg12/ContentManager/update(boolean,org.w3c.dom.Node)#java/util/HashMap/get(java.lang.Object)
org/apache/batik/bridge/SVGFeImageElementBridge/createRasterFeImage(org.apache.batik.bridge.BridgeContext,java.awt.geom.Rectangle2D,org.apache.batik.util.ParsedURL)#org/apache/batik/ext/awt/image/spi/ImageTagRegistry/readURL(org.apache.batik.util.ParsedURL)
org/apache/batik/bridge/SVGFeImageElementBridge/createRasterFeImage(org.apache.batik.bridge.BridgeContext,java.awt.geom.Rectangle2D,org.apache.batik.util.ParsedURL)#java/awt/geom/AffineTransform/translate(double,double)
org/apache/batik/bridge/SVGFeImageElementBridge/createRasterFeImage(org.apache.batik.bridge.BridgeContext,java.awt.geom.Rectangle2D,org.apache.batik.util.ParsedURL)#java/awt/geom/AffineTransform/scale(double,double)
org/apache/batik/bridge/SVGFeImageElementBridge/createRasterFeImage(org.apache.batik.bridge.BridgeContext,java.awt.geom.Rectangle2D,org.apache.batik.util.ParsedURL)#java/awt/geom/Rectangle2D/getWidth()
org/apache/batik/bridge/SVGFeImageElementBridge/createRasterFeImage(org.apache.batik.bridge.BridgeContext,java.awt.geom.Rectangle2D,org.apache.batik.util.ParsedURL)#java/awt/geom/AffineTransform/AffineTransform()
org/apache/batik/bridge/SVGFeImageElementBridge/createRasterFeImage(org.apache.batik.bridge.BridgeContext,java.awt.geom.Rectangle2D,org.apache.batik.util.ParsedURL)#org/apache/batik/ext/awt/image/renderable/Filter/getBounds2D()
org/apache/batik/bridge/SVGFeImageElementBridge/createRasterFeImage(org.apache.batik.bridge.BridgeContext,java.awt.geom.Rectangle2D,org.apache.batik.util.ParsedURL)#java/awt/geom/Rectangle2D/getX()
org/apache/batik/bridge/SVGFeImageElementBridge/createRasterFeImage(org.apache.batik.bridge.BridgeContext,java.awt.geom.Rectangle2D,org.apache.batik.util.ParsedURL)#java/awt/geom/Rectangle2D/getY()
org/apache/batik/bridge/SVGFeImageElementBridge/createRasterFeImage(org.apache.batik.bridge.BridgeContext,java.awt.geom.Rectangle2D,org.apache.batik.util.ParsedURL)#org/apache/batik/ext/awt/image/spi/ImageTagRegistry/getRegistry()
org/apache/batik/bridge/SVGFeImageElementBridge/createRasterFeImage(org.apache.batik.bridge.BridgeContext,java.awt.geom.Rectangle2D,org.apache.batik.util.ParsedURL)#java/awt/geom/Rectangle2D/getHeight()
org/apache/batik/bridge/SVGFeImageElementBridge/createRasterFeImage(org.apache.batik.bridge.BridgeContext,java.awt.geom.Rectangle2D,org.apache.batik.util.ParsedURL)#org/apache/batik/ext/awt/image/renderable/AffineRable8Bit/AffineRable8Bit(org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.AffineTransform)
org/apache/batik/bridge/SVGFeImageElementBridge/createSVGFeImage(org.apache.batik.bridge.BridgeContext,java.awt.geom.Rectangle2D,org.w3c.dom.Element,boolean,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode)#org/w3c/dom/Element/getParentNode()
org/apache/batik/bridge/SVGFeImageElementBridge/createSVGFeImage(org.apache.batik.bridge.BridgeContext,java.awt.geom.Rectangle2D,org.w3c.dom.Element,boolean,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode)#org/apache/batik/gvt/GraphicsNode/getGeometryBounds()
org/apache/batik/bridge/SVGFeImageElementBridge/createSVGFeImage(org.apache.batik.bridge.BridgeContext,java.awt.geom.Rectangle2D,org.w3c.dom.Element,boolean,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode)#org/apache/batik/gvt/GraphicsNode/getGraphicsNodeRable(boolean)
org/apache/batik/bridge/SVGFeImageElementBridge/createSVGFeImage(org.apache.batik.bridge.BridgeContext,java.awt.geom.Rectangle2D,org.w3c.dom.Element,boolean,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode)#org/apache/batik/ext/awt/image/renderable/AffineRable8Bit/AffineRable8Bit(org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.AffineTransform)
org/apache/batik/bridge/SVGFeImageElementBridge/createSVGFeImage(org.apache.batik.bridge.BridgeContext,java.awt.geom.Rectangle2D,org.w3c.dom.Element,boolean,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode)#java/awt/geom/AffineTransform/AffineTransform()
org/apache/batik/bridge/SVGFeImageElementBridge/createSVGFeImage(org.apache.batik.bridge.BridgeContext,java.awt.geom.Rectangle2D,org.w3c.dom.Element,boolean,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode)#java/awt/geom/AffineTransform/getTranslateInstance(double,double)
org/apache/batik/bridge/SVGFeImageElementBridge/createSVGFeImage(org.apache.batik.bridge.BridgeContext,java.awt.geom.Rectangle2D,org.w3c.dom.Element,boolean,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode)#java/awt/geom/Rectangle2D/getX()
org/apache/batik/bridge/SVGFeImageElementBridge/createSVGFeImage(org.apache.batik.bridge.BridgeContext,java.awt.geom.Rectangle2D,org.w3c.dom.Element,boolean,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode)#java/awt/geom/Rectangle2D/getY()
org/apache/batik/bridge/SVGFeImageElementBridge/createSVGFeImage(org.apache.batik.bridge.BridgeContext,java.awt.geom.Rectangle2D,org.w3c.dom.Element,boolean,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode)#java/awt/geom/AffineTransform/translate(double,double)
org/apache/batik/bridge/SVGFeImageElementBridge/createSVGFeImage(org.apache.batik.bridge.BridgeContext,java.awt.geom.Rectangle2D,org.w3c.dom.Element,boolean,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode)#java/lang/String/length()
org/apache/batik/bridge/SVGFeImageElementBridge/createSVGFeImage(org.apache.batik.bridge.BridgeContext,java.awt.geom.Rectangle2D,org.w3c.dom.Element,boolean,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode)#java/awt/geom/AffineTransform/preConcatenate(java.awt.geom.AffineTransform)
org/apache/batik/bridge/SVGFeImageElementBridge/createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)#org/apache/batik/dom/util/XLinkSupport/getXLinkHref(org.w3c.dom.Element)
org/apache/batik/bridge/SVGFeImageElementBridge/createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)#org/w3c/dom/Element/getOwnerDocument()
org/apache/batik/bridge/SVGFeImageElementBridge/createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)#org/w3c/dom/Element/getParentNode()
org/apache/batik/bridge/SVGFeImageElementBridge/createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)#java/awt/geom/Rectangle2D/getWidth()
org/apache/batik/bridge/SVGFeImageElementBridge/createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)#org/w3c/dom/Document/createElementNS(java.lang.String,java.lang.String)
org/apache/batik/bridge/SVGFeImageElementBridge/createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)#org/apache/batik/gvt/GraphicsNode/getGraphicsNodeRable(boolean)
org/apache/batik/bridge/SVGFeImageElementBridge/createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)#java/awt/geom/AffineTransform/AffineTransform()
org/apache/batik/bridge/SVGFeImageElementBridge/createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)#java/awt/geom/Rectangle2D/getX()
org/apache/batik/bridge/SVGFeImageElementBridge/createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)#java/awt/geom/Rectangle2D/getY()
org/apache/batik/bridge/SVGFeImageElementBridge/createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)#org/apache/batik/bridge/SVGFeImageElementBridge/updateFilterMap(org.w3c.dom.Element,org.apache.batik.ext.awt.image.renderable.Filter,java.util.Map)
org/apache/batik/bridge/SVGFeImageElementBridge/createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)#org/w3c/dom/Element/setAttributeNS(java.lang.String,java.lang.String,java.lang.String)
org/apache/batik/bridge/SVGFeImageElementBridge/createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)#java/lang/String/valueOf(double)
org/apache/batik/bridge/SVGFeImageElementBridge/createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)#org/apache/batik/bridge/SVGFeImageElementBridge/handleColorInterpolationFilters(org.apache.batik.ext.awt.image.renderable.Filter,org.w3c.dom.Element)
org/apache/batik/bridge/SVGFeImageElementBridge/createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)#java/lang/String/length()
org/apache/batik/bridge/SVGFeImageElementBridge/createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)#org/w3c/dom/Element/appendChild(org.w3c.dom.Node)
org/apache/batik/bridge/SVGFeImageElementBridge/createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)#org/apache/batik/ext/awt/image/renderable/PadRable8Bit/PadRable8Bit(org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,org.apache.batik.ext.awt.image.PadMode)
org/apache/batik/bridge/SVGFeImageElementBridge/createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)#java/awt/geom/Rectangle2D/getHeight()
org/apache/batik/bridge/SVGFeImageElementBridge/createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)#org/apache/batik/ext/awt/image/renderable/AffineRable8Bit/AffineRable8Bit(org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.AffineTransform)
org/apache/batik/bridge/SVGFeImageElementBridge/createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)#java/lang/String/indexOf(int)
org/apache/batik/bridge/SVGFeGaussianBlurElementBridge/createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)#org/apache/batik/bridge/SVGFeGaussianBlurElementBridge/handleColorInterpolationFilters(org.apache.batik.ext.awt.image.renderable.Filter,org.w3c.dom.Element)
org/apache/batik/bridge/SVGFeGaussianBlurElementBridge/createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)#org/apache/batik/bridge/SVGFeGaussianBlurElementBridge/getIn(org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.util.Map,org.apache.batik.bridge.BridgeContext)
org/apache/batik/bridge/SVGFeGaussianBlurElementBridge/createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)#java/lang/String/valueOf(float)
org/apache/batik/bridge/SVGFeGaussianBlurElementBridge/createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)#org/apache/batik/ext/awt/image/renderable/PadRable8Bit/PadRable8Bit(org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,org.apache.batik.ext.awt.image.PadMode)
org/apache/batik/bridge/SVGFeGaussianBlurElementBridge/createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)#java/lang/StringBuilder/StringBuilder()
org/apache/batik/bridge/SVGFeGaussianBlurElementBridge/createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)#java/lang/StringBuilder/append(float)
org/apache/batik/bridge/SVGFeGaussianBlurElementBridge/createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)#org/apache/batik/ext/awt/image/renderable/Filter/getBounds2D()
org/apache/batik/bridge/SVGFeGaussianBlurElementBridge/createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)#java/lang/StringBuilder/toString()
org/apache/batik/bridge/SVGFeGaussianBlurElementBridge/createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)#org/apache/batik/bridge/SVGFeGaussianBlurElementBridge/updateFilterMap(org.w3c.dom.Element,org.apache.batik.ext.awt.image.renderable.Filter,java.util.Map)
org/apache/batik/bridge/SVGFeGaussianBlurElementBridge/createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)#java/lang/StringBuilder/append(java.lang.String)
org/apache/batik/bridge/SVGFeGaussianBlurElementBridge/createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)#org/apache/batik/ext/awt/image/renderable/GaussianBlurRable8Bit/GaussianBlurRable8Bit(org.apache.batik.ext.awt.image.renderable.Filter,double,double)
org/apache/batik/bridge/SVGImageElementBridge/createImageGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.util.ParsedURL)#org/apache/batik/ext/awt/image/spi/ImageTagRegistry/readURL(java.io.InputStream,org.apache.batik.util.ParsedURL,org.apache.xmlgraphics.java2d.color.ICCColorSpaceWithIntent,boolean,boolean)
org/apache/batik/bridge/SVGImageElementBridge/createImageGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.util.ParsedURL)#java/awt/geom/Rectangle2D/getWidth()
org/apache/batik/bridge/SVGImageElementBridge/createImageGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.util.ParsedURL)#org/w3c/dom/svg/SVGDocument/getURL()
org/apache/batik/bridge/SVGImageElementBridge/createImageGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.util.ParsedURL)#org/apache/batik/bridge/SVGImageElementBridge$ProtectedStream/release()
org/apache/batik/bridge/SVGImageElementBridge/createImageGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.util.ParsedURL)#org/apache/batik/bridge/SVGImageElementBridge$ProtectedStream/retry()
org/apache/batik/bridge/SVGImageElementBridge/createImageGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.util.ParsedURL)#java/io/IOException/getLocalizedMessage()
org/apache/batik/bridge/SVGImageElementBridge/createImageGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.util.ParsedURL)#org/apache/batik/bridge/SVGImageElementBridge$ProtectedStream/tie()
org/apache/batik/bridge/SVGImageElementBridge/createImageGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.util.ParsedURL)#org/apache/batik/gvt/ShapeNode/ShapeNode()
org/apache/batik/bridge/SVGImageElementBridge/createImageGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.util.ParsedURL)#org/apache/batik/ext/awt/image/spi/ImageTagRegistry/getRegistry()
org/apache/batik/bridge/SVGImageElementBridge/createImageGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.util.ParsedURL)#org/w3c/dom/Element/getOwnerDocument()
org/apache/batik/bridge/SVGImageElementBridge/createImageGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.util.ParsedURL)#org/apache/batik/ext/awt/image/spi/ImageTagRegistry/checkCache(org.apache.batik.util.ParsedURL,org.apache.xmlgraphics.java2d.color.ICCColorSpaceWithIntent)
org/apache/batik/bridge/SVGImageElementBridge/createImageGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.util.ParsedURL)#org/apache/batik/util/ParsedURL/ParsedURL(java.lang.String)
org/apache/batik/bridge/SVGImageElementBridge/createImageGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.util.ParsedURL)#java/awt/geom/Rectangle2D/getHeight()
org/apache/batik/bridge/SVGImageElementBridge/createImageGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.util.ParsedURL)#org/apache/batik/util/ParsedURL/toString()
org/apache/batik/bridge/SVGImageElementBridge/createImageGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.util.ParsedURL)#org/apache/batik/gvt/ShapeNode/setShape(java.awt.Shape)
org/apache/batik/bridge/SVGImageElementBridge/createImageGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.util.ParsedURL)#org/apache/batik/util/HaltingThread/hasBeenHalted()
org/apache/batik/bridge/SVGImageElementBridge/createRasterImageNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.ext.awt.image.renderable.Filter,org.apache.batik.util.ParsedURL)#org/apache/batik/gvt/ShapeNode/ShapeNode()
org/apache/batik/bridge/SVGImageElementBridge/createRasterImageNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.ext.awt.image.renderable.Filter,org.apache.batik.util.ParsedURL)#org/apache/batik/gvt/RasterImageNode/setImage(org.apache.batik.ext.awt.image.renderable.Filter)
org/apache/batik/bridge/SVGImageElementBridge/createRasterImageNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.ext.awt.image.renderable.Filter,org.apache.batik.util.ParsedURL)#org/apache/batik/ext/awt/image/renderable/Filter/getProperty(java.lang.String)
org/apache/batik/bridge/SVGImageElementBridge/createRasterImageNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.ext.awt.image.renderable.Filter,org.apache.batik.util.ParsedURL)#java/awt/geom/Rectangle2D/getWidth()
org/apache/batik/bridge/SVGImageElementBridge/createRasterImageNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.ext.awt.image.renderable.Filter,org.apache.batik.util.ParsedURL)#org/apache/batik/ext/awt/image/renderable/Filter/getBounds2D()
org/apache/batik/bridge/SVGImageElementBridge/createRasterImageNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.ext.awt.image.renderable.Filter,org.apache.batik.util.ParsedURL)#java/awt/geom/Rectangle2D/getHeight()
org/apache/batik/bridge/SVGImageElementBridge/createRasterImageNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.ext.awt.image.renderable.Filter,org.apache.batik.util.ParsedURL)#org/apache/batik/ext/awt/image/spi/BrokenLinkProvider/hasBrokenLinkProperty(org.apache.batik.ext.awt.image.renderable.Filter)
org/apache/batik/bridge/SVGImageElementBridge/createRasterImageNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.ext.awt.image.renderable.Filter,org.apache.batik.util.ParsedURL)#org/apache/batik/util/ParsedURL/toString()
org/apache/batik/bridge/SVGImageElementBridge/createRasterImageNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.ext.awt.image.renderable.Filter,org.apache.batik.util.ParsedURL)#org/apache/batik/gvt/ShapeNode/setShape(java.awt.Shape)
org/apache/batik/bridge/SVGImageElementBridge/createRasterImageNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.ext.awt.image.renderable.Filter,org.apache.batik.util.ParsedURL)#org/apache/batik/gvt/RasterImageNode/RasterImageNode()
org/apache/batik/bridge/SVGImageElementBridge/createSVGImageNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.svg.SVGDocument)#org/apache/batik/gvt/ShapeNode/ShapeNode()
org/apache/batik/bridge/SVGImageElementBridge/createSVGImageNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.svg.SVGDocument)#org/apache/batik/gvt/CompositeGraphicsNode/setBackgroundEnable(java.awt.geom.Rectangle2D)
org/apache/batik/bridge/SVGImageElementBridge/createSVGImageNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.svg.SVGDocument)#org/apache/batik/gvt/CompositeGraphicsNode/CompositeGraphicsNode()
org/apache/batik/bridge/SVGImageElementBridge/createSVGImageNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.svg.SVGDocument)#org/apache/batik/dom/events/NodeEventTarget/addEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean,java.lang.Object)
org/apache/batik/bridge/SVGImageElementBridge/createSVGImageNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.svg.SVGDocument)#java/awt/geom/Rectangle2D/getWidth()
org/apache/batik/bridge/SVGImageElementBridge/createSVGImageNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.svg.SVGDocument)#org/apache/batik/gvt/CanvasGraphicsNode/setClip(org.apache.batik.ext.awt.image.renderable.ClipRable)
org/apache/batik/bridge/SVGImageElementBridge/createSVGImageNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.svg.SVGDocument)#java/awt/geom/Rectangle2D/getHeight()
org/apache/batik/bridge/SVGImageElementBridge/createSVGImageNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.svg.SVGDocument)#org/apache/batik/gvt/ShapeNode/setShape(java.awt.Shape)
org/apache/batik/bridge/SVGImageElementBridge/createSVGImageNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.svg.SVGDocument)#org/apache/batik/gvt/CompositeGraphicsNode/getChildren()
org/apache/batik/bridge/SVGImageElementBridge/createSVGImageNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.svg.SVGDocument)#org/apache/batik/gvt/CanvasGraphicsNode/setViewingTransform(java.awt.geom.AffineTransform)
org/apache/batik/bridge/SVGImageElementBridge/createSVGImageNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.svg.SVGDocument)#java/util/List/add(java.lang.Object)
org/apache/batik/bridge/SVGImageElementBridge/createSVGImageNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.svg.SVGDocument)#org/w3c/dom/svg/SVGSVGElement/getAttributeNS(java.lang.String,java.lang.String)
org/apache/batik/bridge/SVGImageElementBridge/createSVGImageNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.svg.SVGDocument)#org/apache/batik/anim/dom/SVGOMDocument/getCSSEngine()
org/apache/batik/bridge/SVGImageElementBridge/createSVGImageNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.svg.SVGDocument)#org/w3c/dom/svg/SVGDocument/getRootElement()
org/apache/batik/bridge/SVGImageElementBridge/createSVGImageNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.svg.SVGDocument)#java/awt/geom/AffineTransform/AffineTransform()
org/apache/batik/bridge/SVGImageElementBridge/createSVGImageNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.svg.SVGDocument)#org/apache/batik/bridge/SVGImageElementBridge$ForwardEventListener/ForwardEventListener(org.w3c.dom.Element,org.w3c.dom.Element)
org/apache/batik/bridge/SVGImageElementBridge/initializeViewport(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,float[],java.awt.geom.Rectangle2D)#org/apache/batik/gvt/GraphicsNode/setTransform(java.awt.geom.AffineTransform)
org/apache/batik/bridge/SVGImageElementBridge/initializeViewport(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,float[],java.awt.geom.Rectangle2D)#org/apache/batik/ext/awt/image/renderable/ClipRable8Bit/ClipRable8Bit(org.apache.batik.ext.awt.image.renderable.Filter,java.awt.Shape)
org/apache/batik/bridge/SVGImageElementBridge/initializeViewport(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,float[],java.awt.geom.Rectangle2D)#org/apache/batik/gvt/GraphicsNode/setClip(org.apache.batik.ext.awt.image.renderable.ClipRable)
org/apache/batik/bridge/SVGImageElementBridge/initializeViewport(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,float[],java.awt.geom.Rectangle2D)#java/awt/geom/AffineTransform/preConcatenate(java.awt.geom.AffineTransform)
org/apache/batik/bridge/SVGImageElementBridge/initializeViewport(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,float[],java.awt.geom.Rectangle2D)#java/awt/geom/Rectangle2D/getWidth()
org/apache/batik/bridge/SVGImageElementBridge/initializeViewport(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,float[],java.awt.geom.Rectangle2D)#org/apache/batik/gvt/GraphicsNode/getGraphicsNodeRable(boolean)
org/apache/batik/bridge/SVGImageElementBridge/initializeViewport(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,float[],java.awt.geom.Rectangle2D)#java/awt/geom/Rectangle2D$Float/Float(float,float,float,float)
org/apache/batik/bridge/SVGImageElementBridge/initializeViewport(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,float[],java.awt.geom.Rectangle2D)#java/awt/geom/Rectangle2D/getHeight()
org/apache/batik/bridge/SVGImageElementBridge/initializeViewport(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,float[],java.awt.geom.Rectangle2D)#java/awt/geom/AffineTransform/createInverse()
org/apache/batik/bridge/SVGImageElementBridge/initializeViewport(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,float[],java.awt.geom.Rectangle2D)#java/awt/geom/AffineTransform/getTranslateInstance(double,double)
org/apache/batik/bridge/SVGImageElementBridge/initializeViewport(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,float[],java.awt.geom.Rectangle2D)#java/awt/geom/AffineTransform/createTransformedShape(java.awt.Shape)
org/apache/batik/bridge/SVGImageElementBridge/initializeViewport(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,float[],java.awt.geom.Rectangle2D)#java/awt/geom/Rectangle2D/getX()
org/apache/batik/bridge/SVGImageElementBridge/initializeViewport(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,float[],java.awt.geom.Rectangle2D)#org/w3c/dom/svg/SVGImageElement/getPreserveAspectRatio()
org/apache/batik/bridge/SVGImageElementBridge/initializeViewport(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,float[],java.awt.geom.Rectangle2D)#java/awt/geom/Rectangle2D/getY()
org/apache/batik/bridge/SVGImageElementBridge/initializeViewport(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,float[],java.awt.geom.Rectangle2D)#org/apache/batik/anim/dom/SVGOMAnimatedPreserveAspectRatio/check()
org/apache/batik/bridge/SVGPolygonElementBridge/buildShape(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.ShapeNode)#org/apache/batik/parser/AWTPolygonProducer/getShape()
org/apache/batik/bridge/SVGPolygonElementBridge/buildShape(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.ShapeNode)#org/w3c/dom/svg/SVGPointList/getItem(int)
org/apache/batik/bridge/SVGPolygonElementBridge/buildShape(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.ShapeNode)#org/apache/batik/parser/AWTPolygonProducer/point(float,float)
org/apache/batik/bridge/SVGPolygonElementBridge/buildShape(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.ShapeNode)#org/apache/batik/parser/AWTPolygonProducer/AWTPolygonProducer()
org/apache/batik/bridge/SVGPolygonElementBridge/buildShape(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.ShapeNode)#org/w3c/dom/svg/SVGPoint/getX()
org/apache/batik/bridge/SVGPolygonElementBridge/buildShape(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.ShapeNode)#org/w3c/dom/svg/SVGPoint/getY()
org/apache/batik/bridge/SVGPolygonElementBridge/buildShape(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.ShapeNode)#org/apache/batik/parser/AWTPolygonProducer/endPoints()
org/apache/batik/bridge/SVGPolygonElementBridge/buildShape(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.ShapeNode)#org/apache/batik/gvt/ShapeNode/setShape(java.awt.Shape)
org/apache/batik/bridge/SVGPolygonElementBridge/buildShape(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.ShapeNode)#org/w3c/dom/svg/SVGPointList/getNumberOfItems()
org/apache/batik/bridge/SVGPolygonElementBridge/buildShape(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.ShapeNode)#org/apache/batik/parser/AWTPolygonProducer/startPoints()
org/apache/batik/bridge/SVGPolygonElementBridge/buildShape(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.ShapeNode)#org/apache/batik/anim/dom/SVGOMAnimatedPoints/check()
org/apache/batik/bridge/SVGPolygonElementBridge/buildShape(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.ShapeNode)#org/apache/batik/parser/AWTPolygonProducer/setWindingRule(int)
org/apache/batik/bridge/SVGPolygonElementBridge/buildShape(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.ShapeNode)#org/apache/batik/anim/dom/SVGOMPolygonElement/getSVGOMAnimatedPoints()
org/apache/batik/bridge/SVGPolygonElementBridge/buildShape(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.ShapeNode)#org/apache/batik/anim/dom/SVGOMAnimatedPoints/getAnimatedPoints()
org/apache/batik/bridge/CSSFontFace/createCSSFontFace(org.apache.batik.css.engine.CSSEngine,org.apache.batik.css.engine.FontFaceRule)#org/apache/batik/css/engine/value/Value/getCssText()
org/apache/batik/bridge/CSSFontFace/createCSSFontFace(org.apache.batik.css.engine.CSSEngine,org.apache.batik.css.engine.FontFaceRule)#org/apache/batik/css/engine/value/Value/getCssValueType()
org/apache/batik/bridge/CSSFontFace/createCSSFontFace(org.apache.batik.css.engine.CSSEngine,org.apache.batik.css.engine.FontFaceRule)#org/apache/batik/css/engine/StyleMap/getValue(int)
org/apache/batik/bridge/CSSFontFace/createCSSFontFace(org.apache.batik.css.engine.CSSEngine,org.apache.batik.css.engine.FontFaceRule)#java/util/LinkedList/LinkedList()
org/apache/batik/bridge/CSSFontFace/createCSSFontFace(org.apache.batik.css.engine.CSSEngine,org.apache.batik.css.engine.FontFaceRule)#java/util/List/add(java.lang.Object)
org/apache/batik/bridge/CSSFontFace/createCSSFontFace(org.apache.batik.css.engine.CSSEngine,org.apache.batik.css.engine.FontFaceRule)#org/apache/batik/css/engine/value/Value/item(int)
org/apache/batik/bridge/CSSFontFace/createCSSFontFace(org.apache.batik.css.engine.CSSEngine,org.apache.batik.css.engine.FontFaceRule)#org/apache/batik/css/engine/FontFaceRule/getStyleMap()
org/apache/batik/bridge/CSSFontFace/createCSSFontFace(org.apache.batik.css.engine.CSSEngine,org.apache.batik.css.engine.FontFaceRule)#org/apache/batik/css/engine/FontFaceRule/getURL()
org/apache/batik/bridge/CSSFontFace/createCSSFontFace(org.apache.batik.css.engine.CSSEngine,org.apache.batik.css.engine.FontFaceRule)#org/apache/batik/css/engine/value/Value/getLength()
org/apache/batik/bridge/SVGFeConvolveMatrixElementBridge/createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)#org/apache/batik/ext/awt/image/renderable/ConvolveMatrixRable/setKernel(java.awt.image.Kernel)
org/apache/batik/bridge/SVGFeConvolveMatrixElementBridge/createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)#org/apache/batik/ext/awt/image/renderable/ConvolveMatrixRable/setEdgeMode(org.apache.batik.ext.awt.image.PadMode)
org/apache/batik/bridge/SVGFeConvolveMatrixElementBridge/createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)#org/apache/batik/ext/awt/image/renderable/ConvolveMatrixRable/setBias(double)
org/apache/batik/bridge/SVGFeConvolveMatrixElementBridge/createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)#org/apache/batik/bridge/SVGFeConvolveMatrixElementBridge/updateFilterMap(org.w3c.dom.Element,org.apache.batik.ext.awt.image.renderable.Filter,java.util.Map)
org/apache/batik/bridge/SVGFeConvolveMatrixElementBridge/createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)#org/apache/batik/bridge/SVGFeConvolveMatrixElementBridge/handleColorInterpolationFilters(org.apache.batik.ext.awt.image.renderable.Filter,org.w3c.dom.Element)
org/apache/batik/bridge/SVGFeConvolveMatrixElementBridge/createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)#org/apache/batik/ext/awt/image/renderable/ConvolveMatrixRable/setKernelUnitLength(double[])
org/apache/batik/bridge/SVGFeConvolveMatrixElementBridge/createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)#org/apache/batik/bridge/SVGFeConvolveMatrixElementBridge/getIn(org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.util.Map,org.apache.batik.bridge.BridgeContext)
org/apache/batik/bridge/SVGFeConvolveMatrixElementBridge/createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)#org/apache/batik/ext/awt/image/renderable/PadRable8Bit/PadRable8Bit(org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,org.apache.batik.ext.awt.image.PadMode)
org/apache/batik/bridge/SVGFeConvolveMatrixElementBridge/createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)#org/apache/batik/ext/awt/image/renderable/ConvolveMatrixRable/setTarget(java.awt.Point)
org/apache/batik/bridge/SVGFeConvolveMatrixElementBridge/createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)#org/apache/batik/bridge/SVGFeConvolveMatrixElementBridge/convertNumber(org.w3c.dom.Element,java.lang.String,float,org.apache.batik.bridge.BridgeContext)
org/apache/batik/bridge/SVGFeConvolveMatrixElementBridge/createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)#org/apache/batik/ext/awt/image/renderable/ConvolveMatrixRable8Bit/ConvolveMatrixRable8Bit(org.apache.batik.ext.awt.image.renderable.Filter)
org/apache/batik/bridge/SVGFeConvolveMatrixElementBridge/createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)#org/apache/batik/ext/awt/image/renderable/Filter/getBounds2D()
org/apache/batik/bridge/SVGFeConvolveMatrixElementBridge/createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)#java/awt/Point/Point(int,int)
org/apache/batik/bridge/SVGFeConvolveMatrixElementBridge/createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)#org/apache/batik/ext/awt/image/renderable/ConvolveMatrixRable/setPreserveAlpha(boolean)
org/apache/batik/bridge/SVGFeConvolveMatrixElementBridge/createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)#java/awt/image/Kernel/Kernel(int,int,float[])
org/apache/batik/bridge/SVGPolylineElementBridge/buildShape(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.ShapeNode)#org/w3c/dom/svg/SVGPointList/getItem(int)
org/apache/batik/bridge/SVGPolylineElementBridge/buildShape(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.ShapeNode)#org/apache/batik/parser/AWTPolylineProducer/point(float,float)
org/apache/batik/bridge/SVGPolylineElementBridge/buildShape(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.ShapeNode)#org/apache/batik/parser/AWTPolylineProducer/AWTPolylineProducer()
org/apache/batik/bridge/SVGPolylineElementBridge/buildShape(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.ShapeNode)#org/apache/batik/anim/dom/SVGOMAnimatedPoints/getAnimatedPoints()
org/apache/batik/bridge/SVGPolylineElementBridge/buildShape(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.ShapeNode)#org/w3c/dom/svg/SVGPoint/getX()
org/apache/batik/bridge/SVGPolylineElementBridge/buildShape(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.ShapeNode)#org/w3c/dom/svg/SVGPoint/getY()
org/apache/batik/bridge/SVGPolylineElementBridge/buildShape(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.ShapeNode)#org/apache/batik/parser/AWTPolylineProducer/endPoints()
org/apache/batik/bridge/SVGPolylineElementBridge/buildShape(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.ShapeNode)#org/apache/batik/gvt/ShapeNode/setShape(java.awt.Shape)
org/apache/batik/bridge/SVGPolylineElementBridge/buildShape(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.ShapeNode)#org/w3c/dom/svg/SVGPointList/getNumberOfItems()
org/apache/batik/bridge/SVGPolylineElementBridge/buildShape(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.ShapeNode)#org/apache/batik/anim/dom/SVGOMAnimatedPoints/check()
org/apache/batik/bridge/SVGPolylineElementBridge/buildShape(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.ShapeNode)#org/apache/batik/parser/AWTPolylineProducer/startPoints()
org/apache/batik/bridge/SVGPolylineElementBridge/buildShape(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.ShapeNode)#org/apache/batik/parser/AWTPolylineProducer/getShape()
org/apache/batik/bridge/SVGPolylineElementBridge/buildShape(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.ShapeNode)#org/apache/batik/anim/dom/SVGOMPolylineElement/getSVGOMAnimatedPoints()
org/apache/batik/bridge/SVGPolylineElementBridge/buildShape(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.ShapeNode)#org/apache/batik/parser/AWTPolylineProducer/setWindingRule(int)
org/apache/batik/bridge/FlowTextPainter/doWordAnalysis(org.apache.batik.gvt.font.GVTGlyphVector,java.text.AttributedCharacterIterator,int,java.awt.font.FontRenderContext)#java/lang/Integer/intValue()
org/apache/batik/bridge/FlowTextPainter/doWordAnalysis(org.apache.batik.gvt.font.GVTGlyphVector,java.text.AttributedCharacterIterator,int,java.awt.font.FontRenderContext)#org/apache/batik/gvt/font/GVTFont/getLineMetrics(java.text.CharacterIterator,int,int,java.awt.font.FontRenderContext)
org/apache/batik/bridge/FlowTextPainter/doWordAnalysis(org.apache.batik.gvt.font.GVTGlyphVector,java.text.AttributedCharacterIterator,int,java.awt.font.FontRenderContext)#org/apache/batik/gvt/font/GVTFont/getHKern(int,int)
org/apache/batik/bridge/FlowTextPainter/doWordAnalysis(org.apache.batik.gvt.font.GVTGlyphVector,java.text.AttributedCharacterIterator,int,java.awt.font.FontRenderContext)#org/apache/batik/gvt/font/GVTGlyphVector/getNumGlyphs()
org/apache/batik/bridge/FlowTextPainter/doWordAnalysis(org.apache.batik.gvt.font.GVTGlyphVector,java.text.AttributedCharacterIterator,int,java.awt.font.FontRenderContext)#org/apache/batik/gvt/font/GVTGlyphVector/getGlyphPositions(int,int,float[])
org/apache/batik/bridge/FlowTextPainter/doWordAnalysis(org.apache.batik.gvt.font.GVTGlyphVector,java.text.AttributedCharacterIterator,int,java.awt.font.FontRenderContext)#java/text/AttributedCharacterIterator/getEndIndex()
org/apache/batik/bridge/FlowTextPainter/doWordAnalysis(org.apache.batik.gvt.font.GVTGlyphVector,java.text.AttributedCharacterIterator,int,java.awt.font.FontRenderContext)#java/lang/Float/floatValue()
org/apache/batik/bridge/FlowTextPainter/doWordAnalysis(org.apache.batik.gvt.font.GVTGlyphVector,java.text.AttributedCharacterIterator,int,java.awt.font.FontRenderContext)#java/text/AttributedCharacterIterator/getRunLimit(java.util.Set)
org/apache/batik/bridge/FlowTextPainter/doWordAnalysis(org.apache.batik.gvt.font.GVTGlyphVector,java.text.AttributedCharacterIterator,int,java.awt.font.FontRenderContext)#java/text/AttributedCharacterIterator/setIndex(int)
org/apache/batik/bridge/FlowTextPainter/doWordAnalysis(org.apache.batik.gvt.font.GVTGlyphVector,java.text.AttributedCharacterIterator,int,java.awt.font.FontRenderContext)#org/apache/batik/gvt/flow/WordInfo/WordInfo(int)
org/apache/batik/bridge/FlowTextPainter/doWordAnalysis(org.apache.batik.gvt.font.GVTGlyphVector,java.text.AttributedCharacterIterator,int,java.awt.font.FontRenderContext)#org/apache/batik/gvt/flow/WordInfo/setFlowLine(java.lang.Object)
org/apache/batik/bridge/FlowTextPainter/doWordAnalysis(org.apache.batik.gvt.font.GVTGlyphVector,java.text.AttributedCharacterIterator,int,java.awt.font.FontRenderContext)#java/text/AttributedCharacterIterator/getAttribute(java.text.AttributedCharacterIterator$Attribute)
org/apache/batik/bridge/FlowTextPainter/doWordAnalysis(org.apache.batik.gvt.font.GVTGlyphVector,java.text.AttributedCharacterIterator,int,java.awt.font.FontRenderContext)#org/apache/batik/gvt/flow/WordInfo/addLineHeight(float)
org/apache/batik/bridge/FlowTextPainter/doWordAnalysis(org.apache.batik.gvt.font.GVTGlyphVector,java.text.AttributedCharacterIterator,int,java.awt.font.FontRenderContext)#java/text/AttributedCharacterIterator/next()
org/apache/batik/bridge/FlowTextPainter/doWordAnalysis(org.apache.batik.gvt.font.GVTGlyphVector,java.text.AttributedCharacterIterator,int,java.awt.font.FontRenderContext)#org/apache/batik/gvt/flow/GlyphGroupInfo/GlyphGroupInfo(org.apache.batik.gvt.font.GVTGlyphVector,int,int,boolean[],boolean,float[],float[],float[],boolean[])
org/apache/batik/bridge/FlowTextPainter/doWordAnalysis(org.apache.batik.gvt.font.GVTGlyphVector,java.text.AttributedCharacterIterator,int,java.awt.font.FontRenderContext)#org/apache/batik/gvt/flow/WordInfo/addLineMetrics(org.apache.batik.gvt.font.GVTFont,org.apache.batik.gvt.font.GVTLineMetrics)
org/apache/batik/bridge/FlowTextPainter/doWordAnalysis(org.apache.batik.gvt.font.GVTGlyphVector,java.text.AttributedCharacterIterator,int,java.awt.font.FontRenderContext)#org/apache/batik/gvt/flow/WordInfo/getFlowLine()
org/apache/batik/bridge/FlowTextPainter/doWordAnalysis(org.apache.batik.gvt.font.GVTGlyphVector,java.text.AttributedCharacterIterator,int,java.awt.font.FontRenderContext)#java/text/AttributedCharacterIterator/getBeginIndex()
org/apache/batik/bridge/FlowTextPainter/doWordAnalysis(org.apache.batik.gvt.font.GVTGlyphVector,java.text.AttributedCharacterIterator,int,java.awt.font.FontRenderContext)#org/apache/batik/gvt/flow/WordInfo/getIndex()
org/apache/batik/bridge/FlowTextPainter/doWordAnalysis(org.apache.batik.gvt.font.GVTGlyphVector,java.text.AttributedCharacterIterator,int,java.awt.font.FontRenderContext)#java/text/AttributedCharacterIterator/previous()
org/apache/batik/bridge/FlowTextPainter/doWordAnalysis(org.apache.batik.gvt.font.GVTGlyphVector,java.text.AttributedCharacterIterator,int,java.awt.font.FontRenderContext)#org/apache/batik/gvt/flow/WordInfo/setGlyphGroups(org.apache.batik.gvt.flow.GlyphGroupInfo[])
org/apache/batik/bridge/FlowTextPainter/doWordAnalysis(org.apache.batik.gvt.font.GVTGlyphVector,java.text.AttributedCharacterIterator,int,java.awt.font.FontRenderContext)#org/apache/batik/gvt/font/GVTGlyphVector/getCharacterCount(int,int)
org/apache/batik/bridge/FlowTextPainter/getTextRuns(org.apache.batik.bridge.TextNode,java.text.AttributedCharacterIterator)#java/util/ArrayList/ArrayList()
org/apache/batik/bridge/FlowTextPainter/getTextRuns(org.apache.batik.bridge.TextNode,java.text.AttributedCharacterIterator)#org/apache/batik/bridge/FlowTextPainter/getTextChunkACIs(java.text.AttributedCharacterIterator)
org/apache/batik/bridge/FlowTextPainter/getTextRuns(org.apache.batik.bridge.TextNode,java.text.AttributedCharacterIterator)#java/util/Iterator/hasNext()
org/apache/batik/bridge/FlowTextPainter/getTextRuns(org.apache.batik.bridge.TextNode,java.text.AttributedCharacterIterator)#org/apache/batik/bridge/FlowTextPainter/computeTextRuns(org.apache.batik.bridge.TextNode,java.text.AttributedCharacterIterator,java.text.AttributedCharacterIterator[])
org/apache/batik/bridge/FlowTextPainter/getTextRuns(org.apache.batik.bridge.TextNode,java.text.AttributedCharacterIterator)#java/util/Iterator/next()
org/apache/batik/bridge/FlowTextPainter/getTextRuns(org.apache.batik.bridge.TextNode,java.text.AttributedCharacterIterator)#org/apache/batik/bridge/StrokingTextPainter$TextRun/getLayout()
org/apache/batik/bridge/FlowTextPainter/getTextRuns(org.apache.batik.bridge.TextNode,java.text.AttributedCharacterIterator)#java/text/AttributedCharacterIterator/getAttribute(java.text.AttributedCharacterIterator$Attribute)
org/apache/batik/bridge/FlowTextPainter/getTextRuns(org.apache.batik.bridge.TextNode,java.text.AttributedCharacterIterator)#java/util/List/add(java.lang.Object)
org/apache/batik/bridge/FlowTextPainter/getTextRuns(org.apache.batik.bridge.TextNode,java.text.AttributedCharacterIterator)#java/text/AttributedCharacterIterator/first()
org/apache/batik/bridge/FlowTextPainter/getTextRuns(org.apache.batik.bridge.TextNode,java.text.AttributedCharacterIterator)#java/util/List/iterator()
org/apache/batik/bridge/FlowTextPainter/getTextRuns(org.apache.batik.bridge.TextNode,java.text.AttributedCharacterIterator)#org/apache/batik/bridge/StrokingTextPainter$TextRun/isFirstRunInChunk()
org/apache/batik/bridge/FlowTextPainter/textWrap(java.text.AttributedCharacterIterator[],java.util.List,java.util.List,java.awt.font.FontRenderContext)#org/apache/batik/gvt/flow/WordInfo/getGlyphGroup(int)
org/apache/batik/bridge/FlowTextPainter/textWrap(java.text.AttributedCharacterIterator[],java.util.List,java.util.List,java.awt.font.FontRenderContext)#org/apache/batik/gvt/flow/LineInfo/setParaEnd(boolean)
org/apache/batik/bridge/FlowTextPainter/textWrap(java.text.AttributedCharacterIterator[],java.util.List,java.util.List,java.awt.font.FontRenderContext)#org/apache/batik/gvt/flow/FlowRegions/FlowRegions(java.awt.Shape)
org/apache/batik/bridge/FlowTextPainter/textWrap(java.text.AttributedCharacterIterator[],java.util.List,java.util.List,java.awt.font.FontRenderContext)#org/apache/batik/gvt/flow/LineInfo/layout()
org/apache/batik/bridge/FlowTextPainter/textWrap(java.text.AttributedCharacterIterator[],java.util.List,java.util.List,java.awt.font.FontRenderContext)#org/apache/batik/gvt/flow/RegionInfo/getShape()
org/apache/batik/bridge/FlowTextPainter/textWrap(java.text.AttributedCharacterIterator[],java.util.List,java.util.List,java.awt.font.FontRenderContext)#org/apache/batik/gvt/flow/GlyphGroupInfo/getStart()
org/apache/batik/bridge/FlowTextPainter/textWrap(java.text.AttributedCharacterIterator[],java.util.List,java.util.List,java.awt.font.FontRenderContext)#org/apache/batik/gvt/flow/BlockInfo/getBottomMargin()
org/apache/batik/bridge/FlowTextPainter/textWrap(java.text.AttributedCharacterIterator[],java.util.List,java.util.List,java.awt.font.FontRenderContext)#java/lang/Math/max(float,float)
org/apache/batik/bridge/FlowTextPainter/textWrap(java.text.AttributedCharacterIterator[],java.util.List,java.util.List,java.awt.font.FontRenderContext)#org/apache/batik/gvt/flow/FlowRegions/newLine(double)
org/apache/batik/bridge/FlowTextPainter/textWrap(java.text.AttributedCharacterIterator[],java.util.List,java.util.List,java.awt.font.FontRenderContext)#org/apache/batik/gvt/flow/GlyphGroupInfo/getGlyphVector()
org/apache/batik/bridge/FlowTextPainter/textWrap(java.text.AttributedCharacterIterator[],java.util.List,java.util.List,java.awt.font.FontRenderContext)#org/apache/batik/gvt/flow/WordInfo/getNumGlyphGroups()
org/apache/batik/bridge/FlowTextPainter/textWrap(java.text.AttributedCharacterIterator[],java.util.List,java.util.List,java.awt.font.FontRenderContext)#org/apache/batik/gvt/flow/WordInfo/getLineHeight()
org/apache/batik/bridge/FlowTextPainter/textWrap(java.text.AttributedCharacterIterator[],java.util.List,java.util.List,java.awt.font.FontRenderContext)#org/apache/batik/gvt/flow/LineInfo/LineInfo(org.apache.batik.gvt.flow.FlowRegions,org.apache.batik.gvt.flow.BlockInfo,boolean)
org/apache/batik/bridge/FlowTextPainter/textWrap(java.text.AttributedCharacterIterator[],java.util.List,java.util.List,java.awt.font.FontRenderContext)#org/apache/batik/gvt/flow/FlowRegions/done()
org/apache/batik/bridge/FlowTextPainter/textWrap(java.text.AttributedCharacterIterator[],java.util.List,java.util.List,java.awt.font.FontRenderContext)#org/apache/batik/gvt/flow/BlockInfo/getTopMargin()
org/apache/batik/bridge/FlowTextPainter/textWrap(java.text.AttributedCharacterIterator[],java.util.List,java.util.List,java.awt.font.FontRenderContext)#org/apache/batik/gvt/flow/WordInfo/getFlowLine()
org/apache/batik/bridge/FlowTextPainter/textWrap(java.text.AttributedCharacterIterator[],java.util.List,java.util.List,java.awt.font.FontRenderContext)#java/util/Iterator/hasNext()
org/apache/batik/bridge/FlowTextPainter/textWrap(java.text.AttributedCharacterIterator[],java.util.List,java.util.List,java.awt.font.FontRenderContext)#org/apache/batik/gvt/flow/GlyphGroupInfo/getEnd()
org/apache/batik/bridge/FlowTextPainter/textWrap(java.text.AttributedCharacterIterator[],java.util.List,java.util.List,java.awt.font.FontRenderContext)#org/apache/batik/gvt/flow/LineInfo/getCurrentY()
org/apache/batik/bridge/FlowTextPainter/textWrap(java.text.AttributedCharacterIterator[],java.util.List,java.util.List,java.awt.font.FontRenderContext)#org/apache/batik/gvt/font/MultiGlyphVector/MultiGlyphVector(java.util.List)
org/apache/batik/bridge/FlowTextPainter/textWrap(java.text.AttributedCharacterIterator[],java.util.List,java.util.List,java.awt.font.FontRenderContext)#java/util/Iterator/next()
org/apache/batik/bridge/FlowTextPainter/textWrap(java.text.AttributedCharacterIterator[],java.util.List,java.util.List,java.awt.font.FontRenderContext)#org/apache/batik/gvt/flow/BlockInfo/getLineHeight()
org/apache/batik/bridge/FlowTextPainter/textWrap(java.text.AttributedCharacterIterator[],java.util.List,java.util.List,java.awt.font.FontRenderContext)#org/apache/batik/gvt/flow/BlockInfo/isFlowRegionBreak()
org/apache/batik/bridge/FlowTextPainter/textWrap(java.text.AttributedCharacterIterator[],java.util.List,java.util.List,java.awt.font.FontRenderContext)#java/util/LinkedList/LinkedList()
org/apache/batik/bridge/FlowTextPainter/textWrap(java.text.AttributedCharacterIterator[],java.util.List,java.util.List,java.awt.font.FontRenderContext)#org/apache/batik/gvt/font/GVTGlyphVector/setGlyphVisible(int,boolean)
org/apache/batik/bridge/FlowTextPainter/textWrap(java.text.AttributedCharacterIterator[],java.util.List,java.util.List,java.awt.font.FontRenderContext)#org/apache/batik/gvt/flow/BlockInfo/initLineInfo(java.awt.font.FontRenderContext)
org/apache/batik/bridge/FlowTextPainter/textWrap(java.text.AttributedCharacterIterator[],java.util.List,java.util.List,java.awt.font.FontRenderContext)#java/util/List/add(java.lang.Object)
org/apache/batik/bridge/FlowTextPainter/textWrap(java.text.AttributedCharacterIterator[],java.util.List,java.util.List,java.awt.font.FontRenderContext)#java/text/AttributedCharacterIterator/first()
org/apache/batik/bridge/FlowTextPainter/textWrap(java.text.AttributedCharacterIterator[],java.util.List,java.util.List,java.awt.font.FontRenderContext)#org/apache/batik/gvt/flow/LineInfo/gotoY(double)
org/apache/batik/bridge/FlowTextPainter/textWrap(java.text.AttributedCharacterIterator[],java.util.List,java.util.List,java.awt.font.FontRenderContext)#java/util/List/iterator()
org/apache/batik/bridge/FlowTextPainter/textWrap(java.text.AttributedCharacterIterator[],java.util.List,java.util.List,java.awt.font.FontRenderContext)#org/apache/batik/gvt/flow/LineInfo/addWord(org.apache.batik.gvt.flow.WordInfo)
org/apache/batik/bridge/FlowTextPainter/textWrap(java.text.AttributedCharacterIterator[],java.util.List,java.util.List,java.awt.font.FontRenderContext)#java/text/AttributedCharacterIterator/getAttribute(java.text.AttributedCharacterIterator$Attribute)
org/apache/batik/bridge/SVGFeMergeElementBridge/createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)#java/awt/geom/Rectangle2D/add(java.awt.geom.Rectangle2D)
org/apache/batik/bridge/SVGFeMergeElementBridge/createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)#java/util/Iterator/hasNext()
org/apache/batik/bridge/SVGFeMergeElementBridge/createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)#org/apache/batik/bridge/SVGFeMergeElementBridge/updateFilterMap(org.w3c.dom.Element,org.apache.batik.ext.awt.image.renderable.Filter,java.util.Map)
org/apache/batik/bridge/SVGFeMergeElementBridge/createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)#org/apache/batik/bridge/SVGFeMergeElementBridge/handleColorInterpolationFilters(org.apache.batik.ext.awt.image.renderable.Filter,org.w3c.dom.Element)
org/apache/batik/bridge/SVGFeMergeElementBridge/createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)#java/util/List/size()
org/apache/batik/bridge/SVGFeMergeElementBridge/createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)#org/apache/batik/ext/awt/image/renderable/PadRable8Bit/PadRable8Bit(org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,org.apache.batik.ext.awt.image.PadMode)
org/apache/batik/bridge/SVGFeMergeElementBridge/createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)#java/awt/geom/Rectangle2D/clone()
org/apache/batik/bridge/SVGFeMergeElementBridge/createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)#java/util/List/iterator()
org/apache/batik/bridge/SVGFeMergeElementBridge/createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)#org/apache/batik/ext/awt/image/renderable/Filter/getBounds2D()
org/apache/batik/bridge/SVGFeMergeElementBridge/createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)#java/util/Iterator/next()
org/apache/batik/bridge/SVGFeMergeElementBridge/createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)#org/apache/batik/ext/awt/image/renderable/CompositeRable8Bit/CompositeRable8Bit(java.util.List,org.apache.batik.ext.awt.image.CompositeRule,boolean)
org/apache/batik/bridge/SVGAnimationEngine/getUnderlyingCSSValue(org.w3c.dom.Element,org.apache.batik.anim.dom.AnimationTarget,java.lang.String)#org/w3c/dom/css/CSSStyleDeclaration/getPropertyValue(java.lang.String)
org/apache/batik/bridge/SVGAnimationEngine/getUnderlyingCSSValue(org.w3c.dom.Element,org.apache.batik.anim.dom.AnimationTarget,java.lang.String)#java/lang/String/equals(java.lang.Object)
org/apache/batik/bridge/SVGAnimationEngine/getUnderlyingCSSValue(org.w3c.dom.Element,org.apache.batik.anim.dom.AnimationTarget,java.lang.String)#org/apache/batik/anim/dom/SVGStylableElement/getOverrideStyle()
org/apache/batik/bridge/SVGAnimationEngine/getUnderlyingCSSValue(org.w3c.dom.Element,org.apache.batik.anim.dom.AnimationTarget,java.lang.String)#org/apache/batik/bridge/SVGAnimationEngine$Factory/createValue(org.apache.batik.anim.dom.AnimationTarget,java.lang.String,org.apache.batik.css.engine.value.Value)
org/apache/batik/bridge/SVGAnimationEngine/getUnderlyingCSSValue(org.w3c.dom.Element,org.apache.batik.anim.dom.AnimationTarget,java.lang.String)#org/apache/batik/anim/dom/AnimationTarget/getElement()
org/apache/batik/bridge/SVGAnimationEngine/getUnderlyingCSSValue(org.w3c.dom.Element,org.apache.batik.anim.dom.AnimationTarget,java.lang.String)#org/apache/batik/css/engine/CSSEngine/getValueManagers()
org/apache/batik/bridge/SVGAnimationEngine/getUnderlyingCSSValue(org.w3c.dom.Element,org.apache.batik.anim.dom.AnimationTarget,java.lang.String)#org/apache/batik/css/engine/CSSEngine/getPropertyIndex(java.lang.String)
org/apache/batik/bridge/SVGAnimationEngine/getUnderlyingCSSValue(org.w3c.dom.Element,org.apache.batik.anim.dom.AnimationTarget,java.lang.String)#org/w3c/dom/css/CSSStyleDeclaration/setProperty(java.lang.String,java.lang.String,java.lang.String)
org/apache/batik/bridge/SVGAnimationEngine/getUnderlyingCSSValue(org.w3c.dom.Element,org.apache.batik.anim.dom.AnimationTarget,java.lang.String)#org/apache/batik/css/engine/CSSEngine/getComputedStyle(org.apache.batik.css.engine.CSSStylableElement,java.lang.String,int)
org/apache/batik/bridge/SVGAnimationEngine/getUnderlyingCSSValue(org.w3c.dom.Element,org.apache.batik.anim.dom.AnimationTarget,java.lang.String)#org/w3c/dom/Element/getNodeName()
org/apache/batik/bridge/SVGAnimationEngine/getUnderlyingCSSValue(org.w3c.dom.Element,org.apache.batik.anim.dom.AnimationTarget,java.lang.String)#org/apache/batik/css/engine/value/ValueManager/getPropertyType()
org/apache/batik/bridge/SVGAnimationEngine/getUnderlyingCSSValue(org.w3c.dom.Element,org.apache.batik.anim.dom.AnimationTarget,java.lang.String)#org/w3c/dom/css/CSSStyleDeclaration/removeProperty(java.lang.String)
org/apache/batik/bridge/SVGAnimationEngine/parseAnimatableValue(org.w3c.dom.Element,org.apache.batik.anim.dom.AnimationTarget,java.lang.String,java.lang.String,boolean,java.lang.String)#org/apache/batik/anim/dom/SVGOMElement/getPropertyType(java.lang.String)
org/apache/batik/bridge/SVGAnimationEngine/parseAnimatableValue(org.w3c.dom.Element,org.apache.batik.anim.dom.AnimationTarget,java.lang.String,java.lang.String,boolean,java.lang.String)#org/apache/batik/bridge/SVGAnimationEngine$Factory/createValue(org.apache.batik.anim.dom.AnimationTarget,java.lang.String,java.lang.String,boolean,java.lang.String)
org/apache/batik/bridge/SVGAnimationEngine/parseAnimatableValue(org.w3c.dom.Element,org.apache.batik.anim.dom.AnimationTarget,java.lang.String,java.lang.String,boolean,java.lang.String)#org/apache/batik/anim/dom/SVGOMElement/getAttributeType(java.lang.String,java.lang.String)
org/apache/batik/bridge/SVGAnimationEngine/parseAnimatableValue(org.w3c.dom.Element,org.apache.batik.anim.dom.AnimationTarget,java.lang.String,java.lang.String,boolean,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/apache/batik/bridge/SVGAnimationEngine/parseAnimatableValue(org.w3c.dom.Element,org.apache.batik.anim.dom.AnimationTarget,java.lang.String,java.lang.String,boolean,java.lang.String)#org/w3c/dom/Element/getNodeName()
org/apache/batik/bridge/SVGAnimationEngine/parseAnimatableValue(org.w3c.dom.Element,org.apache.batik.anim.dom.AnimationTarget,java.lang.String,java.lang.String,boolean,java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/apache/batik/bridge/SVGAnimationEngine/parseAnimatableValue(org.w3c.dom.Element,org.apache.batik.anim.dom.AnimationTarget,java.lang.String,java.lang.String,boolean,java.lang.String)#java/lang/StringBuilder/toString()
org/apache/batik/bridge/SVGAnimationEngine/parseAnimatableValue(org.w3c.dom.Element,org.apache.batik.anim.dom.AnimationTarget,java.lang.String,java.lang.String,boolean,java.lang.String)#java/lang/StringBuilder/append(char)
org/apache/batik/bridge/SVGAnimationEngine/parseAnimatableValue(org.w3c.dom.Element,org.apache.batik.anim.dom.AnimationTarget,java.lang.String,java.lang.String,boolean,java.lang.String)#org/apache/batik/anim/dom/AnimationTarget/getElement()
org/apache/batik/bridge/SVGAnimationEngine/start(long)#java/util/LinkedList/toArray()
org/apache/batik/bridge/SVGAnimationEngine/start(long)#org/apache/batik/anim/AnimationException/getMessage()
org/apache/batik/bridge/SVGAnimationEngine/start(long)#java/util/Calendar/setTime(java.util.Date)
org/apache/batik/bridge/SVGAnimationEngine/start(long)#org/apache/batik/bridge/SVGAnimationEngine$AnimationTickRunnable/AnimationTickRunnable(org.apache.batik.util.RunnableQueue,org.apache.batik.bridge.SVGAnimationEngine)
org/apache/batik/bridge/SVGAnimationEngine/start(long)#java/util/Calendar/getInstance()
org/apache/batik/bridge/SVGAnimationEngine/start(long)#java/lang/Exception/printStackTrace()
org/apache/batik/bridge/SVGAnimationEngine/start(long)#org/apache/batik/util/RunnableQueue/setIdleRunnable(org.apache.batik.util.RunnableQueue$IdleRunnable)
org/apache/batik/bridge/SVGAnimationEngine/start(long)#org/apache/batik/anim/timing/TimedElement/getElement()
org/apache/batik/bridge/SVGAnimationEngine/start(long)#org/apache/batik/anim/AnimationException/getElement()
org/apache/batik/bridge/SVGAnimationEngine/start(long)#org/apache/batik/anim/timing/TimedDocumentRoot/resetDocument(java.util.Calendar)
org/apache/batik/bridge/SVGAnimationEngine/start(long)#java/util/Date/Date(long)
org/apache/batik/bridge/RepaintManager/updateRendering(java.util.Collection)#java/awt/geom/Rectangle2D/getY()
org/apache/batik/bridge/RepaintManager/updateRendering(java.util.Collection)#org/apache/batik/gvt/renderer/ImageRenderer/repaint(org.apache.batik.ext.awt.geom.RectListManager)
org/apache/batik/bridge/RepaintManager/updateRendering(java.util.Collection)#java/lang/Math/floor(double)
org/apache/batik/bridge/RepaintManager/updateRendering(java.util.Collection)#java/awt/Rectangle/Rectangle(int,int,int,int)
org/apache/batik/bridge/RepaintManager/updateRendering(java.util.Collection)#java/awt/Shape/getBounds2D()
org/apache/batik/bridge/RepaintManager/updateRendering(java.util.Collection)#java/awt/geom/Rectangle2D/getWidth()
org/apache/batik/bridge/RepaintManager/updateRendering(java.util.Collection)#java/util/Collection/size()
org/apache/batik/bridge/RepaintManager/updateRendering(java.util.Collection)#java/util/Iterator/next()
org/apache/batik/bridge/RepaintManager/updateRendering(java.util.Collection)#java/lang/Exception/printStackTrace()
org/apache/batik/bridge/RepaintManager/updateRendering(java.util.Collection)#org/apache/batik/gvt/renderer/ImageRenderer/getTransform()
org/apache/batik/bridge/RepaintManager/updateRendering(java.util.Collection)#java/awt/geom/Rectangle2D/getHeight()
org/apache/batik/bridge/RepaintManager/updateRendering(java.util.Collection)#java/util/List/add(java.lang.Object)
org/apache/batik/bridge/RepaintManager/updateRendering(java.util.Collection)#org/apache/batik/ext/awt/geom/RectListManager/mergeRects(int,int)
org/apache/batik/bridge/RepaintManager/updateRendering(java.util.Collection)#java/util/Collection/iterator()
org/apache/batik/bridge/RepaintManager/updateRendering(java.util.Collection)#org/apache/batik/gvt/renderer/ImageRenderer/flush(java.util.Collection)
org/apache/batik/bridge/RepaintManager/updateRendering(java.util.Collection)#java/awt/geom/AffineTransform/createTransformedShape(java.awt.Shape)
org/apache/batik/bridge/RepaintManager/updateRendering(java.util.Collection)#java/awt/geom/Rectangle2D/getX()
org/apache/batik/bridge/RepaintManager/updateRendering(java.util.Collection)#java/lang/Math/ceil(double)
org/apache/batik/bridge/RepaintManager/updateRendering(java.util.Collection)#java/util/ArrayList/ArrayList(int)
org/apache/batik/bridge/RepaintManager/updateRendering(java.util.Collection)#java/util/Iterator/hasNext()
org/apache/batik/bridge/RepaintManager/updateRendering(java.util.Collection)#org/apache/batik/ext/awt/geom/RectListManager/RectListManager(java.util.Collection)
org/apache/batik/bridge/URIResolver/getNode(java.lang.String,org.w3c.dom.Element)#org/apache/batik/anim/dom/SVGOMDocument/getURL()
org/apache/batik/bridge/URIResolver/getNode(java.lang.String,org.w3c.dom.Element)#org/w3c/dom/Document/getElementById(java.lang.String)
org/apache/batik/bridge/URIResolver/getNode(java.lang.String,org.w3c.dom.Element)#org/apache/batik/util/ParsedURL/getRef()
org/apache/batik/bridge/URIResolver/getNode(java.lang.String,org.w3c.dom.Element)#java/lang/String/charAt(int)
org/apache/batik/bridge/URIResolver/getNode(java.lang.String,org.w3c.dom.Element)#java/lang/String/substring(int,int)
org/apache/batik/bridge/URIResolver/getNode(java.lang.String,org.w3c.dom.Element)#org/apache/batik/util/ParsedURL/ParsedURL(java.lang.String,java.lang.String)
org/apache/batik/bridge/URIResolver/getNode(java.lang.String,org.w3c.dom.Element)#org/apache/batik/util/ParsedURL/sameFile(org.apache.batik.util.ParsedURL)
org/apache/batik/bridge/URIResolver/getNode(java.lang.String,org.w3c.dom.Element)#java/lang/String/length()
org/apache/batik/bridge/URIResolver/getNode(java.lang.String,org.w3c.dom.Element)#org/apache/batik/util/ParsedURL/ParsedURL(java.lang.String)
org/apache/batik/bridge/URIResolver/getNode(java.lang.String,org.w3c.dom.Element)#java/lang/String/substring(int)
org/apache/batik/bridge/URIResolver/getNode(java.lang.String,org.w3c.dom.Element)#org/apache/batik/util/ParsedURL/toString()
org/apache/batik/bridge/URIResolver/getNode(java.lang.String,org.w3c.dom.Element)#org/apache/batik/anim/dom/SVGOMDocument/getElementById(java.lang.String)
org/apache/batik/bridge/SVGAnimateMotionElementBridge/parsePath()#org/apache/batik/parser/AWTPathProducer/getShape()
org/apache/batik/bridge/SVGAnimateMotionElementBridge/parsePath()#org/w3c/dom/Node/getNextSibling()
org/apache/batik/bridge/SVGAnimateMotionElementBridge/parsePath()#org/w3c/dom/Node/getLocalName()
org/apache/batik/bridge/SVGAnimateMotionElementBridge/parsePath()#org/apache/batik/dom/svg/SVGAnimatedPathDataSupport/handlePathSegList(org.w3c.dom.svg.SVGPathSegList,org.apache.batik.parser.PathHandler)
org/apache/batik/bridge/SVGAnimateMotionElementBridge/parsePath()#org/w3c/dom/Element/getLocalName()
org/apache/batik/bridge/SVGAnimateMotionElementBridge/parsePath()#org/apache/batik/anim/dom/SVGOMPathElement/getPathSegList()
org/apache/batik/bridge/SVGAnimateMotionElementBridge/parsePath()#java/lang/String/equals(java.lang.Object)
org/apache/batik/bridge/SVGAnimateMotionElementBridge/parsePath()#org/w3c/dom/Node/getNamespaceURI()
org/apache/batik/bridge/SVGAnimateMotionElementBridge/parsePath()#org/apache/batik/parser/AWTPathProducer/AWTPathProducer()
org/apache/batik/bridge/SVGAnimateMotionElementBridge/parsePath()#org/apache/batik/anim/dom/SVGOMElement/getFirstChild()
org/apache/batik/bridge/SVGAnimateMotionElementBridge/parsePath()#org/apache/batik/dom/util/XLinkSupport/getXLinkHref(org.w3c.dom.Element)
org/apache/batik/bridge/SVGAnimateMotionElementBridge/parsePath()#java/lang/String/length()
org/apache/batik/bridge/SVGAnimateMotionElementBridge/parsePath()#org/apache/batik/parser/PathParser/PathParser()
org/apache/batik/bridge/SVGAnimateMotionElementBridge/parsePath()#org/w3c/dom/Element/getNamespaceURI()
org/apache/batik/bridge/SVGAnimateMotionElementBridge/parsePath()#org/apache/batik/parser/PathParser/setPathHandler(org.apache.batik.parser.PathHandler)
org/apache/batik/bridge/SVGAnimateMotionElementBridge/parsePath()#org/apache/batik/anim/dom/SVGOMElement/getAttributeNS(java.lang.String,java.lang.String)
org/apache/batik/bridge/SVGAnimateMotionElementBridge/parsePath()#org/w3c/dom/Node/getNodeType()
org/apache/batik/bridge/SVGAnimateMotionElementBridge/parsePath()#org/apache/batik/parser/PathParser/parse(java.lang.String)
org/apache/batik/bridge/SVGAnimateMotionElementBridge/parseKeyPoints()#java/lang/Float/Float(float)
org/apache/batik/bridge/SVGAnimateMotionElementBridge/parseKeyPoints()#java/util/ArrayList/ArrayList(int)
org/apache/batik/bridge/SVGAnimateMotionElementBridge/parseKeyPoints()#java/lang/Float/parseFloat(java.lang.String)
org/apache/batik/bridge/SVGAnimateMotionElementBridge/parseKeyPoints()#java/lang/String/charAt(int)
org/apache/batik/bridge/SVGAnimateMotionElementBridge/parseKeyPoints()#java/util/List/size()
org/apache/batik/bridge/SVGAnimateMotionElementBridge/parseKeyPoints()#java/lang/String/substring(int,int)
org/apache/batik/bridge/SVGAnimateMotionElementBridge/parseKeyPoints()#java/lang/Float/floatValue()
org/apache/batik/bridge/SVGAnimateMotionElementBridge/parseKeyPoints()#java/util/List/add(java.lang.Object)
org/apache/batik/bridge/SVGAnimateMotionElementBridge/parseKeyPoints()#java/util/List/get(int)
org/apache/batik/bridge/SVGAnimateMotionElementBridge/parseKeyPoints()#org/apache/batik/anim/dom/SVGOMElement/getAttributeNS(java.lang.String,java.lang.String)
org/apache/batik/bridge/SVGAnimateMotionElementBridge/parseKeyPoints()#java/lang/String/length()
org/apache/batik/bridge/SVGAnimateMotionElementBridge/createAnimation(org.apache.batik.anim.dom.AnimationTarget)#org/apache/batik/bridge/SVGAnimateMotionElementBridge/parseKeyTimes()
org/apache/batik/bridge/SVGAnimateMotionElementBridge/createAnimation(org.apache.batik.anim.dom.AnimationTarget)#org/apache/batik/bridge/SVGAnimateMotionElementBridge/parseAdditive()
org/apache/batik/bridge/SVGAnimateMotionElementBridge/createAnimation(org.apache.batik.anim.dom.AnimationTarget)#org/apache/batik/parser/AngleParser/parse(java.lang.String)
org/apache/batik/bridge/SVGAnimateMotionElementBridge/createAnimation(org.apache.batik.anim.dom.AnimationTarget)#org/apache/batik/parser/AngleParser/AngleParser()
org/apache/batik/bridge/SVGAnimateMotionElementBridge/createAnimation(org.apache.batik.anim.dom.AnimationTarget)#org/apache/batik/anim/dom/SVGOMElement/getAttributeNS(java.lang.String,java.lang.String)
org/apache/batik/bridge/SVGAnimateMotionElementBridge/createAnimation(org.apache.batik.anim.dom.AnimationTarget)#java/lang/String/length()
org/apache/batik/bridge/SVGAnimateMotionElementBridge/createAnimation(org.apache.batik.anim.dom.AnimationTarget)#java/lang/String/equals(java.lang.Object)
org/apache/batik/bridge/SVGAnimateMotionElementBridge/createAnimation(org.apache.batik.anim.dom.AnimationTarget)#org/apache/batik/bridge/SVGAnimateMotionElementBridge$1Handler/1Handler(org.apache.batik.bridge.SVGAnimateMotionElementBridge)
org/apache/batik/bridge/SVGAnimateMotionElementBridge/createAnimation(org.apache.batik.anim.dom.AnimationTarget)#org/apache/batik/bridge/SVGAnimateMotionElementBridge/parseCalcMode()
org/apache/batik/bridge/SVGAnimateMotionElementBridge/createAnimation(org.apache.batik.anim.dom.AnimationTarget)#org/apache/batik/bridge/SVGAnimateMotionElementBridge/parseAccumulate()
org/apache/batik/bridge/SVGAnimateMotionElementBridge/createAnimation(org.apache.batik.anim.dom.AnimationTarget)#org/apache/batik/bridge/SVGAnimateMotionElementBridge/parseKeySplines()
org/apache/batik/bridge/SVGAnimateMotionElementBridge/createAnimation(org.apache.batik.anim.dom.AnimationTarget)#org/apache/batik/parser/AngleParser/setAngleHandler(org.apache.batik.parser.AngleHandler)
org/apache/batik/bridge/SVGAnimateMotionElementBridge/createAnimation(org.apache.batik.anim.dom.AnimationTarget)#org/apache/batik/anim/MotionAnimation/MotionAnimation(org.apache.batik.anim.timing.TimedElement,org.apache.batik.anim.dom.AnimatableElement,int,float[],float[],boolean,boolean,org.apache.batik.anim.values.AnimatableValue[],org.apache.batik.anim.values.AnimatableValue,org.apache.batik.anim.values.AnimatableValue,org.apache.batik.anim.values.AnimatableValue,org.apache.batik.ext.awt.geom.ExtendedGeneralPath,float[],boolean,boolean,float,short)
org/apache/batik/bridge/RhinoInterpreter/evaluate(java.lang.String)#org/apache/batik/script/InterpreterException/InterpreterException(java.lang.Exception,java.lang.String,int,int)
org/apache/batik/bridge/RhinoInterpreter/evaluate(java.lang.String)#org/mozilla/javascript/ContextFactory/call(org.mozilla.javascript.ContextAction)
org/apache/batik/bridge/RhinoInterpreter/evaluate(java.lang.String)#java/lang/Throwable/getMessage()
org/apache/batik/bridge/RhinoInterpreter/evaluate(java.lang.String)#org/mozilla/javascript/JavaScriptException/getValue()
org/apache/batik/bridge/RhinoInterpreter/evaluate(java.lang.String)#java/lang/Exception/getMessage()
org/apache/batik/bridge/RhinoInterpreter/evaluate(java.lang.String)#org/mozilla/javascript/WrappedException/getWrappedException()
org/apache/batik/bridge/RhinoInterpreter/evaluate(java.lang.String)#org/apache/batik/bridge/RhinoInterpreter$3/3(org.apache.batik.bridge.RhinoInterpreter,java.lang.String)
org/apache/batik/bridge/RhinoInterpreter/evaluate(java.lang.String)#java/lang/RuntimeException/getMessage()
org/apache/batik/bridge/RhinoInterpreter/evaluate(java.lang.String)#org/apache/batik/script/InterpreterException/InterpreterException(java.lang.String,int,int)
org/apache/batik/bridge/RhinoInterpreter/evaluate(java.io.Reader,java.lang.String)#org/apache/batik/script/InterpreterException/InterpreterException(java.lang.Exception,java.lang.String,int,int)
org/apache/batik/bridge/RhinoInterpreter/evaluate(java.io.Reader,java.lang.String)#org/mozilla/javascript/ContextFactory/call(org.mozilla.javascript.ContextAction)
org/apache/batik/bridge/RhinoInterpreter/evaluate(java.io.Reader,java.lang.String)#org/apache/batik/bridge/RhinoInterpreter$2/2(org.apache.batik.bridge.RhinoInterpreter,java.io.Reader,java.lang.String)
org/apache/batik/bridge/RhinoInterpreter/evaluate(java.io.Reader,java.lang.String)#java/lang/Throwable/getMessage()
org/apache/batik/bridge/RhinoInterpreter/evaluate(java.io.Reader,java.lang.String)#org/mozilla/javascript/WrappedException/getWrappedException()
org/apache/batik/bridge/RhinoInterpreter/evaluate(java.io.Reader,java.lang.String)#org/mozilla/javascript/JavaScriptException/getValue()
org/apache/batik/bridge/RhinoInterpreter/evaluate(java.io.Reader,java.lang.String)#java/lang/Exception/getMessage()
org/apache/batik/bridge/RhinoInterpreter/evaluate(java.io.Reader,java.lang.String)#java/lang/RuntimeException/getMessage()
org/apache/batik/bridge/RhinoInterpreter/evaluate(java.io.Reader,java.lang.String)#org/apache/batik/script/InterpreterException/InterpreterException(java.lang.String,int,int)
org/apache/batik/bridge/SVGUtilities/getChainableAttributeNS(org.w3c.dom.Element,java.lang.String,java.lang.String,org.apache.batik.bridge.BridgeContext)#org/w3c/dom/Element/getAttributeNS(java.lang.String,java.lang.String)
org/apache/batik/bridge/SVGUtilities/getChainableAttributeNS(org.w3c.dom.Element,java.lang.String,java.lang.String,org.apache.batik.bridge.BridgeContext)#org/apache/batik/dom/util/XLinkSupport/getXLinkHref(org.w3c.dom.Element)
org/apache/batik/bridge/SVGUtilities/getChainableAttributeNS(org.w3c.dom.Element,java.lang.String,java.lang.String,org.apache.batik.bridge.BridgeContext)#org/w3c/dom/Element/getOwnerDocument()
org/apache/batik/bridge/SVGUtilities/getChainableAttributeNS(org.w3c.dom.Element,java.lang.String,java.lang.String,org.apache.batik.bridge.BridgeContext)#java/util/Iterator/hasNext()
org/apache/batik/bridge/SVGUtilities/getChainableAttributeNS(org.w3c.dom.Element,java.lang.String,java.lang.String,org.apache.batik.bridge.BridgeContext)#org/apache/batik/dom/AbstractNode/getBaseURI()
org/apache/batik/bridge/SVGUtilities/getChainableAttributeNS(org.w3c.dom.Element,java.lang.String,java.lang.String,org.apache.batik.bridge.BridgeContext)#java/util/Iterator/next()
org/apache/batik/bridge/SVGUtilities/getChainableAttributeNS(org.w3c.dom.Element,java.lang.String,java.lang.String,org.apache.batik.bridge.BridgeContext)#java/util/LinkedList/LinkedList()
org/apache/batik/bridge/SVGUtilities/getChainableAttributeNS(org.w3c.dom.Element,java.lang.String,java.lang.String,org.apache.batik.bridge.BridgeContext)#java/lang/String/length()
org/apache/batik/bridge/SVGUtilities/getChainableAttributeNS(org.w3c.dom.Element,java.lang.String,java.lang.String,org.apache.batik.bridge.BridgeContext)#org/apache/batik/util/ParsedURL/toString()
org/apache/batik/bridge/SVGUtilities/getChainableAttributeNS(org.w3c.dom.Element,java.lang.String,java.lang.String,org.apache.batik.bridge.BridgeContext)#org/apache/batik/util/ParsedURL/equals(java.lang.Object)
org/apache/batik/bridge/SVGUtilities/getChainableAttributeNS(org.w3c.dom.Element,java.lang.String,java.lang.String,org.apache.batik.bridge.BridgeContext)#org/apache/batik/util/ParsedURL/ParsedURL(java.lang.String,java.lang.String)
org/apache/batik/bridge/SVGUtilities/getChainableAttributeNS(org.w3c.dom.Element,java.lang.String,java.lang.String,org.apache.batik.bridge.BridgeContext)#java/util/List/add(java.lang.Object)
org/apache/batik/bridge/SVGUtilities/getChainableAttributeNS(org.w3c.dom.Element,java.lang.String,java.lang.String,org.apache.batik.bridge.BridgeContext)#java/util/List/iterator()
org/apache/batik/bridge/SVGUtilities/toObjectBBox(java.awt.geom.AffineTransform,org.apache.batik.gvt.GraphicsNode)#java/awt/geom/Rectangle2D/getY()
org/apache/batik/bridge/SVGUtilities/toObjectBBox(java.awt.geom.AffineTransform,org.apache.batik.gvt.GraphicsNode)#java/awt/geom/AffineTransform/translate(double,double)
org/apache/batik/bridge/SVGUtilities/toObjectBBox(java.awt.geom.AffineTransform,org.apache.batik.gvt.GraphicsNode)#java/awt/geom/AffineTransform/scale(double,double)
org/apache/batik/bridge/SVGUtilities/toObjectBBox(java.awt.geom.AffineTransform,org.apache.batik.gvt.GraphicsNode)#java/awt/geom/Rectangle2D/getWidth()
org/apache/batik/bridge/SVGUtilities/toObjectBBox(java.awt.geom.AffineTransform,org.apache.batik.gvt.GraphicsNode)#org/apache/batik/gvt/GraphicsNode/getGeometryBounds()
org/apache/batik/bridge/SVGUtilities/toObjectBBox(java.awt.geom.AffineTransform,org.apache.batik.gvt.GraphicsNode)#java/awt/geom/AffineTransform/concatenate(java.awt.geom.AffineTransform)
org/apache/batik/bridge/SVGUtilities/toObjectBBox(java.awt.geom.AffineTransform,org.apache.batik.gvt.GraphicsNode)#java/awt/geom/Rectangle2D/getHeight()
org/apache/batik/bridge/SVGUtilities/toObjectBBox(java.awt.geom.AffineTransform,org.apache.batik.gvt.GraphicsNode)#java/awt/geom/AffineTransform/AffineTransform()
org/apache/batik/bridge/SVGUtilities/toObjectBBox(java.awt.geom.AffineTransform,org.apache.batik.gvt.GraphicsNode)#java/awt/geom/Rectangle2D/getX()
org/apache/batik/bridge/SVGUtilities/convertFilterPrimitiveRegion(org.w3c.dom.Element,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.apache.batik.bridge.BridgeContext)#java/awt/geom/Rectangle2D/intersect(java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D)
org/apache/batik/bridge/SVGUtilities/convertFilterPrimitiveRegion(org.w3c.dom.Element,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.apache.batik.bridge.BridgeContext)#java/lang/StringBuilder/append(java.lang.String)
org/apache/batik/bridge/SVGUtilities/convertFilterPrimitiveRegion(org.w3c.dom.Element,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.apache.batik.bridge.BridgeContext)#java/lang/Error/Error(java.lang.String)
org/apache/batik/bridge/SVGUtilities/convertFilterPrimitiveRegion(org.w3c.dom.Element,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.apache.batik.bridge.BridgeContext)#java/lang/String/length()
org/apache/batik/bridge/SVGUtilities/convertFilterPrimitiveRegion(org.w3c.dom.Element,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.apache.batik.bridge.BridgeContext)#java/awt/geom/Rectangle2D/getWidth()
org/apache/batik/bridge/SVGUtilities/convertFilterPrimitiveRegion(org.w3c.dom.Element,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.apache.batik.bridge.BridgeContext)#java/lang/StringBuilder/StringBuilder()
org/apache/batik/bridge/SVGUtilities/convertFilterPrimitiveRegion(org.w3c.dom.Element,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.apache.batik.bridge.BridgeContext)#java/awt/geom/Rectangle2D/getHeight()
org/apache/batik/bridge/SVGUtilities/convertFilterPrimitiveRegion(org.w3c.dom.Element,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.apache.batik.bridge.BridgeContext)#java/awt/geom/Rectangle2D/getY()
org/apache/batik/bridge/SVGUtilities/convertFilterPrimitiveRegion(org.w3c.dom.Element,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.apache.batik.bridge.BridgeContext)#org/w3c/dom/Element/getAttributeNS(java.lang.String,java.lang.String)
org/apache/batik/bridge/SVGUtilities/convertFilterPrimitiveRegion(org.w3c.dom.Element,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.apache.batik.bridge.BridgeContext)#java/lang/StringBuilder/append(int)
org/apache/batik/bridge/SVGUtilities/convertFilterPrimitiveRegion(org.w3c.dom.Element,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.apache.batik.bridge.BridgeContext)#java/awt/geom/Rectangle2D$Double/Double(double,double,double,double)
org/apache/batik/bridge/SVGUtilities/convertFilterPrimitiveRegion(org.w3c.dom.Element,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.apache.batik.bridge.BridgeContext)#org/apache/batik/gvt/GraphicsNode/getGeometryBounds()
org/apache/batik/bridge/SVGUtilities/convertFilterPrimitiveRegion(org.w3c.dom.Element,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.apache.batik.bridge.BridgeContext)#java/lang/StringBuilder/toString()
org/apache/batik/bridge/SVGUtilities/convertFilterPrimitiveRegion(org.w3c.dom.Element,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.apache.batik.bridge.BridgeContext)#java/awt/geom/Rectangle2D/getX()
org/apache/batik/bridge/SVGUtilities/getDescription(org.w3c.dom.svg.SVGElement)#org/apache/batik/dom/util/XMLSupport/defaultXMLSpace(java.lang.String)
org/apache/batik/bridge/SVGUtilities/getDescription(org.w3c.dom.svg.SVGElement)#java/lang/StringBuilder/append(java.lang.String)
org/apache/batik/bridge/SVGUtilities/getDescription(org.w3c.dom.svg.SVGElement)#org/w3c/dom/Node/getLocalName()
org/apache/batik/bridge/SVGUtilities/getDescription(org.w3c.dom.svg.SVGElement)#java/lang/String/equals(java.lang.Object)
org/apache/batik/bridge/SVGUtilities/getDescription(org.w3c.dom.svg.SVGElement)#java/lang/StringBuilder/StringBuilder()
org/apache/batik/bridge/SVGUtilities/getDescription(org.w3c.dom.svg.SVGElement)#org/w3c/dom/Node/getPrefix()
org/apache/batik/bridge/SVGUtilities/getDescription(org.w3c.dom.svg.SVGElement)#org/apache/batik/dom/util/XMLSupport/preserveXMLSpace(java.lang.String)
org/apache/batik/bridge/SVGUtilities/getDescription(org.w3c.dom.svg.SVGElement)#org/w3c/dom/Node/getNodeValue()
org/apache/batik/bridge/SVGUtilities/getDescription(org.w3c.dom.svg.SVGElement)#org/w3c/dom/Node/getNextSibling()
org/apache/batik/bridge/SVGUtilities/getDescription(org.w3c.dom.svg.SVGElement)#org/w3c/dom/Node/getFirstChild()
org/apache/batik/bridge/SVGUtilities/getDescription(org.w3c.dom.svg.SVGElement)#org/w3c/dom/svg/SVGLangSpace/getXMLspace()
org/apache/batik/bridge/SVGUtilities/getDescription(org.w3c.dom.svg.SVGElement)#org/w3c/dom/Node/getNodeName()
org/apache/batik/bridge/SVGUtilities/getDescription(org.w3c.dom.svg.SVGElement)#org/w3c/dom/svg/SVGElement/getFirstChild()
org/apache/batik/bridge/SVGUtilities/getDescription(org.w3c.dom.svg.SVGElement)#java/lang/StringBuilder/toString()
org/apache/batik/bridge/SVGUtilities/getDescription(org.w3c.dom.svg.SVGElement)#org/w3c/dom/Node/getNodeType()
org/apache/batik/bridge/SVGUtilities/convertRegion(java.lang.String,java.lang.String,java.lang.String,java.lang.String,short,org.apache.batik.gvt.GraphicsNode,org.apache.batik.parser.UnitProcessor$Context)#java/awt/geom/Rectangle2D/getY()
org/apache/batik/bridge/SVGUtilities/convertRegion(java.lang.String,java.lang.String,java.lang.String,java.lang.String,short,org.apache.batik.gvt.GraphicsNode,org.apache.batik.parser.UnitProcessor$Context)#java/lang/StringBuilder/append(java.lang.String)
org/apache/batik/bridge/SVGUtilities/convertRegion(java.lang.String,java.lang.String,java.lang.String,java.lang.String,short,org.apache.batik.gvt.GraphicsNode,org.apache.batik.parser.UnitProcessor$Context)#java/lang/Error/Error(java.lang.String)
org/apache/batik/bridge/SVGUtilities/convertRegion(java.lang.String,java.lang.String,java.lang.String,java.lang.String,short,org.apache.batik.gvt.GraphicsNode,org.apache.batik.parser.UnitProcessor$Context)#java/awt/geom/Rectangle2D/getWidth()
org/apache/batik/bridge/SVGUtilities/convertRegion(java.lang.String,java.lang.String,java.lang.String,java.lang.String,short,org.apache.batik.gvt.GraphicsNode,org.apache.batik.parser.UnitProcessor$Context)#java/lang/StringBuilder/StringBuilder()
org/apache/batik/bridge/SVGUtilities/convertRegion(java.lang.String,java.lang.String,java.lang.String,java.lang.String,short,org.apache.batik.gvt.GraphicsNode,org.apache.batik.parser.UnitProcessor$Context)#java/awt/geom/Rectangle2D/getHeight()
org/apache/batik/bridge/SVGUtilities/convertRegion(java.lang.String,java.lang.String,java.lang.String,java.lang.String,short,org.apache.batik.gvt.GraphicsNode,org.apache.batik.parser.UnitProcessor$Context)#java/lang/StringBuilder/append(int)
org/apache/batik/bridge/SVGUtilities/convertRegion(java.lang.String,java.lang.String,java.lang.String,java.lang.String,short,org.apache.batik.gvt.GraphicsNode,org.apache.batik.parser.UnitProcessor$Context)#java/awt/geom/Rectangle2D$Double/Double(double,double,double,double)
org/apache/batik/bridge/SVGUtilities/convertRegion(java.lang.String,java.lang.String,java.lang.String,java.lang.String,short,org.apache.batik.gvt.GraphicsNode,org.apache.batik.parser.UnitProcessor$Context)#org/apache/batik/gvt/GraphicsNode/getGeometryBounds()
org/apache/batik/bridge/SVGUtilities/convertRegion(java.lang.String,java.lang.String,java.lang.String,java.lang.String,short,org.apache.batik.gvt.GraphicsNode,org.apache.batik.parser.UnitProcessor$Context)#java/lang/StringBuilder/toString()
org/apache/batik/bridge/SVGUtilities/convertRegion(java.lang.String,java.lang.String,java.lang.String,java.lang.String,short,org.apache.batik.gvt.GraphicsNode,org.apache.batik.parser.UnitProcessor$Context)#java/awt/geom/Rectangle2D/getX()
org/apache/batik/bridge/SVGTextElementBridge/AttributedStringBuffer/toAttributedString()#java/text/AttributedString/addAttribute(java.text.AttributedCharacterIterator$Attribute,java.lang.Object,int,int)
org/apache/batik/bridge/SVGTextElementBridge/AttributedStringBuffer/toAttributedString()#java/util/Iterator/hasNext()
org/apache/batik/bridge/SVGTextElementBridge/AttributedStringBuffer/toAttributedString()#java/lang/StringBuffer/StringBuffer(int)
org/apache/batik/bridge/SVGTextElementBridge/AttributedStringBuffer/toAttributedString()#java/text/AttributedString/AttributedString(java.lang.String,java.util.Map)
org/apache/batik/bridge/SVGTextElementBridge/AttributedStringBuffer/toAttributedString()#java/lang/String/length()
org/apache/batik/bridge/SVGTextElementBridge/AttributedStringBuffer/toAttributedString()#java/util/List/size()
org/apache/batik/bridge/SVGTextElementBridge/AttributedStringBuffer/toAttributedString()#java/util/Map/values()
org/apache/batik/bridge/SVGTextElementBridge/AttributedStringBuffer/toAttributedString()#java/lang/StringBuffer/toString()
org/apache/batik/bridge/SVGTextElementBridge/AttributedStringBuffer/toAttributedString()#java/util/Set/iterator()
org/apache/batik/bridge/SVGTextElementBridge/AttributedStringBuffer/toAttributedString()#java/util/Iterator/next()
org/apache/batik/bridge/SVGTextElementBridge/AttributedStringBuffer/toAttributedString()#java/util/Map/keySet()
org/apache/batik/bridge/SVGTextElementBridge/AttributedStringBuffer/toAttributedString()#java/text/AttributedString/AttributedString(java.lang.String)
org/apache/batik/bridge/SVGTextElementBridge/AttributedStringBuffer/toAttributedString()#java/util/List/get(int)
org/apache/batik/bridge/SVGTextElementBridge/AttributedStringBuffer/toAttributedString()#java/util/List/iterator()
org/apache/batik/bridge/SVGTextElementBridge/AttributedStringBuffer/toAttributedString()#java/util/Collection/iterator()
org/apache/batik/bridge/SVGTextElementBridge/AttributedStringBuffer/toAttributedString()#java/lang/StringBuffer/append(java.lang.String)
org/apache/batik/bridge/CSSUtilities/convertEnableBackground(org.w3c.dom.Element)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/apache/batik/bridge/CSSUtilities/convertEnableBackground(org.w3c.dom.Element)#java/lang/StringBuilder/append(java.lang.String)
org/apache/batik/bridge/CSSUtilities/convertEnableBackground(org.w3c.dom.Element)#org/apache/batik/css/engine/value/Value/getFloatValue()
org/apache/batik/bridge/CSSUtilities/convertEnableBackground(org.w3c.dom.Element)#org/apache/batik/css/engine/value/ListValue/item(int)
org/apache/batik/bridge/CSSUtilities/convertEnableBackground(org.w3c.dom.Element)#java/lang/StringBuilder/toString()
org/apache/batik/bridge/CSSUtilities/convertEnableBackground(org.w3c.dom.Element)#java/lang/StringBuilder/append(int)
org/apache/batik/bridge/CSSUtilities/convertEnableBackground(org.w3c.dom.Element)#org/apache/batik/css/engine/value/ListValue/getLength()
org/apache/batik/bridge/CSSUtilities/convertEnableBackground(org.w3c.dom.Element)#org/apache/batik/css/engine/value/Value/getCssValueType()
org/apache/batik/bridge/CSSUtilities/convertEnableBackground(org.w3c.dom.Element)#java/lang/StringBuilder/StringBuilder()
org/apache/batik/bridge/CSSUtilities/convertEnableBackground(org.w3c.dom.Element)#java/awt/geom/Rectangle2D$Float/Float(float,float,float,float)
org/apache/batik/bridge/CSSUtilities/convertClip(org.w3c.dom.Element)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/apache/batik/bridge/CSSUtilities/convertClip(org.w3c.dom.Element)#org/apache/batik/css/engine/value/Value/getBottom()
org/apache/batik/bridge/CSSUtilities/convertClip(org.w3c.dom.Element)#org/apache/batik/css/engine/value/Value/getRight()
org/apache/batik/bridge/CSSUtilities/convertClip(org.w3c.dom.Element)#org/apache/batik/css/engine/value/Value/getFloatValue()
org/apache/batik/bridge/CSSUtilities/convertClip(org.w3c.dom.Element)#java/lang/StringBuilder/toString()
org/apache/batik/bridge/CSSUtilities/convertClip(org.w3c.dom.Element)#org/apache/batik/css/engine/value/Value/getTop()
org/apache/batik/bridge/CSSUtilities/convertClip(org.w3c.dom.Element)#java/lang/StringBuilder/append(java.lang.String)
org/apache/batik/bridge/CSSUtilities/convertClip(org.w3c.dom.Element)#java/lang/StringBuilder/append(int)
org/apache/batik/bridge/CSSUtilities/convertClip(org.w3c.dom.Element)#org/apache/batik/css/engine/value/Value/getLeft()
org/apache/batik/bridge/CSSUtilities/convertClip(org.w3c.dom.Element)#java/lang/StringBuilder/StringBuilder()
org/apache/batik/bridge/CSSUtilities/convertClip(org.w3c.dom.Element)#org/apache/batik/css/engine/value/Value/getPrimitiveType()
org/apache/batik/bridge/SVGAElementBridge/AnchorDefaultActionable/run()#org/apache/batik/anim/dom/SVGOMAElement/getOwnerDocument()
org/apache/batik/bridge/SVGAElementBridge/AnchorDefaultActionable/run()#java/lang/Float/isNaN(float)
org/apache/batik/bridge/SVGAElementBridge/AnchorDefaultActionable/run()#org/apache/batik/util/ParsedURL/getRef()
org/apache/batik/bridge/SVGAElementBridge/AnchorDefaultActionable/run()#java/lang/String/length()
org/apache/batik/bridge/SVGAElementBridge/AnchorDefaultActionable/run()#org/apache/batik/anim/dom/SVGOMAnimationElement/getHyperlinkBeginTime()
org/apache/batik/bridge/SVGAElementBridge/AnchorDefaultActionable/run()#org/apache/batik/anim/dom/SVGOMDocument/getParsedURL()
org/apache/batik/bridge/SVGAElementBridge/AnchorDefaultActionable/run()#org/w3c/dom/svg/SVGAnimatedString/getAnimVal()
org/apache/batik/bridge/SVGAElementBridge/AnchorDefaultActionable/run()#org/apache/batik/util/ParsedURL/ParsedURL(java.lang.String,java.lang.String)
org/apache/batik/bridge/SVGAElementBridge/AnchorDefaultActionable/run()#org/apache/batik/util/ParsedURL/sameFile(org.apache.batik.util.ParsedURL)
org/apache/batik/bridge/SVGAElementBridge/AnchorDefaultActionable/run()#org/apache/batik/anim/dom/SVGOMDocument/getElementById(java.lang.String)
org/apache/batik/bridge/SVGAElementBridge/AnchorDefaultActionable/run()#org/apache/batik/anim/dom/SVGOMAnimationElement/beginElement()
org/apache/batik/bridge/SVGAElementBridge/AnchorDefaultActionable/run()#org/apache/batik/bridge/SVGAElementBridge$CursorHolder/getCursor()
org/apache/batik/bridge/SVGAElementBridge/AnchorDefaultActionable/run()#org/apache/batik/anim/dom/SVGOMDocument/getRootElement()
org/apache/batik/bridge/SVGAElementBridge/AnchorDefaultActionable/run()#org/w3c/dom/svg/SVGSVGElement/setCurrentTime(float)
org/apache/batik/bridge/SVGAElementBridge/AnchorDefaultActionable/run()#org/apache/batik/anim/dom/SVGOMAElement/getBaseURI()
org/apache/batik/bridge/SVGAElementBridge/AnchorDefaultActionable/run()#org/apache/batik/anim/dom/SVGOMAElement/getHref()
org/apache/batik/bridge/SVGMarkerElementBridge/createMarker(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element)#org/apache/batik/ext/awt/image/renderable/ClipRable8Bit/ClipRable8Bit(org.apache.batik.ext.awt.image.renderable.Filter,java.awt.Shape)
org/apache/batik/bridge/SVGMarkerElementBridge/createMarker(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element)#org/apache/batik/gvt/CompositeGraphicsNode/getGraphicsNodeRable(boolean)
org/apache/batik/bridge/SVGMarkerElementBridge/createMarker(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element)#java/awt/geom/Point2D$Float/Float(float,float)
org/apache/batik/bridge/SVGMarkerElementBridge/createMarker(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element)#java/awt/geom/Rectangle2D$Float/Float(float,float,float,float)
org/apache/batik/bridge/SVGMarkerElementBridge/createMarker(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element)#java/awt/geom/AffineTransform/concatenate(java.awt.geom.AffineTransform)
org/apache/batik/bridge/SVGMarkerElementBridge/createMarker(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element)#org/apache/batik/gvt/CompositeGraphicsNode/setTransform(java.awt.geom.AffineTransform)
org/apache/batik/bridge/SVGMarkerElementBridge/createMarker(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element)#java/util/List/add(java.lang.Object)
org/apache/batik/bridge/SVGMarkerElementBridge/createMarker(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element)#org/apache/batik/css/engine/value/Value/getFloatValue()
org/apache/batik/bridge/SVGMarkerElementBridge/createMarker(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element)#java/awt/geom/AffineTransform/AffineTransform()
org/apache/batik/bridge/SVGMarkerElementBridge/createMarker(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element)#org/w3c/dom/Node/getNodeType()
org/apache/batik/bridge/SVGMarkerElementBridge/createMarker(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element)#org/w3c/dom/Element/getAttributeNS(java.lang.String,java.lang.String)
org/apache/batik/bridge/SVGMarkerElementBridge/createMarker(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element)#org/w3c/dom/Node/getNextSibling()
org/apache/batik/bridge/SVGMarkerElementBridge/createMarker(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element)#org/apache/batik/gvt/CompositeGraphicsNode/CompositeGraphicsNode()
org/apache/batik/bridge/SVGMarkerElementBridge/createMarker(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element)#java/awt/geom/AffineTransform/scale(double,double)
org/apache/batik/bridge/SVGMarkerElementBridge/createMarker(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element)#org/w3c/dom/Element/getFirstChild()
org/apache/batik/bridge/SVGMarkerElementBridge/createMarker(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element)#java/lang/String/length()
org/apache/batik/bridge/SVGMarkerElementBridge/createMarker(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element)#java/lang/String/equals(java.lang.Object)
org/apache/batik/bridge/SVGMarkerElementBridge/createMarker(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element)#org/apache/batik/gvt/CompositeGraphicsNode/setClip(org.apache.batik.ext.awt.image.renderable.ClipRable)
org/apache/batik/bridge/SVGMarkerElementBridge/createMarker(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element)#org/apache/batik/gvt/CompositeGraphicsNode/getChildren()
org/apache/batik/bridge/SVGMarkerElementBridge/createMarker(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element)#java/awt/geom/AffineTransform/transform(float[],int,float[],int,int)
org/apache/batik/bridge/SVGMarkerElementBridge/createMarker(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element)#org/apache/batik/gvt/Marker/Marker(org.apache.batik.gvt.GraphicsNode,java.awt.geom.Point2D,double)
org/apache/batik/bridge/GlyphLayout/doExplicitGlyphLayout()#org/apache/batik/gvt/font/GVTGlyphVector/getLogicalBounds()
org/apache/batik/bridge/GlyphLayout/doExplicitGlyphLayout()#org/apache/batik/gvt/font/GVTLineMetrics/getStrikethroughOffset()
org/apache/batik/bridge/GlyphLayout/doExplicitGlyphLayout()#org/apache/batik/gvt/text/ArabicTextHandler/arabicCharTransparent(char)
org/apache/batik/bridge/GlyphLayout/doExplicitGlyphLayout()#java/awt/geom/AffineTransform/AffineTransform(float,float,float,float,float,float)
org/apache/batik/bridge/GlyphLayout/doExplicitGlyphLayout()#org/apache/batik/gvt/font/GVTGlyphVector/getNumGlyphs()
org/apache/batik/bridge/GlyphLayout/doExplicitGlyphLayout()#java/text/AttributedCharacterIterator/setIndex(int)
org/apache/batik/bridge/GlyphLayout/doExplicitGlyphLayout()#java/awt/geom/AffineTransform/AffineTransform()
org/apache/batik/bridge/GlyphLayout/doExplicitGlyphLayout()#java/awt/geom/AffineTransform/getRotateInstance(double)
org/apache/batik/bridge/GlyphLayout/doExplicitGlyphLayout()#java/awt/geom/AffineTransform/getTranslateInstance(double,double)
org/apache/batik/bridge/GlyphLayout/doExplicitGlyphLayout()#org/apache/batik/gvt/font/GVTGlyphVector/performDefaultLayout()
org/apache/batik/bridge/GlyphLayout/doExplicitGlyphLayout()#java/awt/geom/Rectangle2D/getMaxX()
org/apache/batik/bridge/GlyphLayout/doExplicitGlyphLayout()#org/apache/batik/gvt/font/GVTGlyphVector/getGlyphTransform(int)
org/apache/batik/bridge/GlyphLayout/doExplicitGlyphLayout()#java/text/AttributedCharacterIterator/getBeginIndex()
org/apache/batik/bridge/GlyphLayout/doExplicitGlyphLayout()#java/lang/Float/isNaN()
org/apache/batik/bridge/GlyphLayout/doExplicitGlyphLayout()#org/apache/batik/gvt/font/GVTGlyphVector/setGlyphPosition(int,java.awt.geom.Point2D)
org/apache/batik/bridge/GlyphLayout/doExplicitGlyphLayout()#java/awt/Shape/getBounds2D()
org/apache/batik/bridge/GlyphLayout/doExplicitGlyphLayout()#org/apache/batik/gvt/font/GVTGlyphMetrics/getVerticalAdvance()
org/apache/batik/bridge/GlyphLayout/doExplicitGlyphLayout()#org/apache/batik/gvt/font/GVTLineMetrics/getAscent()
org/apache/batik/bridge/GlyphLayout/doExplicitGlyphLayout()#org/apache/batik/gvt/font/GVTGlyphVector/setGlyphTransform(int,java.awt.geom.AffineTransform)
org/apache/batik/bridge/GlyphLayout/doExplicitGlyphLayout()#java/awt/geom/Rectangle2D/getWidth()
org/apache/batik/bridge/GlyphLayout/doExplicitGlyphLayout()#java/lang/Math/toRadians(double)
org/apache/batik/bridge/GlyphLayout/doExplicitGlyphLayout()#org/apache/batik/gvt/font/GVTGlyphVector/getGlyphMetrics(int)
org/apache/batik/bridge/GlyphLayout/doExplicitGlyphLayout()#java/awt/geom/Point2D$Double/Double(double,double)
org/apache/batik/bridge/GlyphLayout/doExplicitGlyphLayout()#java/lang/Math/abs(float)
org/apache/batik/bridge/GlyphLayout/doExplicitGlyphLayout()#org/apache/batik/gvt/font/GVTGlyphVector/getGlyphPositions(int,int,float[])
org/apache/batik/bridge/GlyphLayout/doExplicitGlyphLayout()#java/awt/geom/Point2D$Float/Float(float,float)
org/apache/batik/bridge/GlyphLayout/doExplicitGlyphLayout()#org/apache/batik/gvt/font/GVTGlyphVector/getGlyphVisualBounds(int)
org/apache/batik/bridge/GlyphLayout/doExplicitGlyphLayout()#java/awt/geom/AffineTransform/concatenate(java.awt.geom.AffineTransform)
org/apache/batik/bridge/GlyphLayout/doExplicitGlyphLayout()#java/awt/geom/Point2D$Float/Float()
org/apache/batik/bridge/GlyphLayout/doExplicitGlyphLayout()#java/awt/geom/Rectangle2D/getHeight()
org/apache/batik/bridge/GlyphLayout/doExplicitGlyphLayout()#java/lang/Float/floatValue()
org/apache/batik/bridge/GlyphLayout/doExplicitGlyphLayout()#java/text/AttributedCharacterIterator/first()
org/apache/batik/bridge/GlyphLayout/doExplicitGlyphLayout()#java/text/AttributedCharacterIterator/getRunLimit(java.util.Set)
org/apache/batik/bridge/GlyphLayout/doExplicitGlyphLayout()#org/apache/batik/gvt/font/GVTGlyphVector/getCharacterCount(int,int)
org/apache/batik/bridge/GlyphLayout/doExplicitGlyphLayout()#org/apache/batik/gvt/font/GVTLineMetrics/getDescent()
org/apache/batik/bridge/GlyphLayout/doExplicitGlyphLayout()#org/apache/batik/gvt/font/GVTGlyphMetrics/getHorizontalAdvance()
org/apache/batik/bridge/GlyphLayout/doExplicitGlyphLayout()#java/awt/geom/Point2D/getX()
org/apache/batik/bridge/GlyphLayout/doExplicitGlyphLayout()#org/apache/batik/gvt/font/GVTGlyphMetrics/getBounds2D()
org/apache/batik/bridge/GlyphLayout/doExplicitGlyphLayout()#java/awt/geom/Point2D/getY()
org/apache/batik/bridge/GlyphLayout/doExplicitGlyphLayout()#java/text/AttributedCharacterIterator/getAttribute(java.text.AttributedCharacterIterator$Attribute)
org/apache/batik/bridge/GlyphLayout/doExplicitGlyphLayout()#org/apache/batik/gvt/font/GVTGlyphVector/getGlyphPosition(int)
org/apache/batik/bridge/GlyphLayout/doSpacing(java.lang.Float,java.lang.Float,java.lang.Float)#org/apache/batik/gvt/font/GVTFont/getVKern(int,int)
org/apache/batik/bridge/GlyphLayout/doSpacing(java.lang.Float,java.lang.Float,java.lang.Float)#org/apache/batik/gvt/font/GVTGlyphVector/getFont()
org/apache/batik/bridge/GlyphLayout/doSpacing(java.lang.Float,java.lang.Float,java.lang.Float)#java/lang/Float/isNaN()
org/apache/batik/bridge/GlyphLayout/doSpacing(java.lang.Float,java.lang.Float,java.lang.Float)#java/awt/geom/Point2D/setLocation(double,double)
org/apache/batik/bridge/GlyphLayout/doSpacing(java.lang.Float,java.lang.Float,java.lang.Float)#org/apache/batik/gvt/font/GVTGlyphVector/setGlyphPosition(int,java.awt.geom.Point2D)
org/apache/batik/bridge/GlyphLayout/doSpacing(java.lang.Float,java.lang.Float,java.lang.Float)#org/apache/batik/gvt/font/GVTFont/getHKern(int,int)
org/apache/batik/bridge/GlyphLayout/doSpacing(java.lang.Float,java.lang.Float,java.lang.Float)#org/apache/batik/gvt/font/GVTGlyphVector/getNumGlyphs()
org/apache/batik/bridge/GlyphLayout/doSpacing(java.lang.Float,java.lang.Float,java.lang.Float)#java/lang/Exception/printStackTrace()
org/apache/batik/bridge/GlyphLayout/doSpacing(java.lang.Float,java.lang.Float,java.lang.Float)#java/awt/geom/Point2D$Float/Float(float,float)
org/apache/batik/bridge/GlyphLayout/doSpacing(java.lang.Float,java.lang.Float,java.lang.Float)#java/lang/Float/floatValue()
org/apache/batik/bridge/GlyphLayout/doSpacing(java.lang.Float,java.lang.Float,java.lang.Float)#org/apache/batik/gvt/font/GVTGlyphVector/getGlyphCode(int)
org/apache/batik/bridge/GlyphLayout/doSpacing(java.lang.Float,java.lang.Float,java.lang.Float)#org/apache/batik/gvt/font/GVTGlyphMetrics/isWhitespace()
org/apache/batik/bridge/GlyphLayout/doSpacing(java.lang.Float,java.lang.Float,java.lang.Float)#java/awt/geom/Rectangle2D/getWidth()
org/apache/batik/bridge/GlyphLayout/doSpacing(java.lang.Float,java.lang.Float,java.lang.Float)#org/apache/batik/gvt/font/GVTGlyphVector/getGlyphMetrics(int)
org/apache/batik/bridge/GlyphLayout/doSpacing(java.lang.Float,java.lang.Float,java.lang.Float)#java/awt/geom/Point2D$Double/Double(double,double)
org/apache/batik/bridge/GlyphLayout/doSpacing(java.lang.Float,java.lang.Float,java.lang.Float)#java/awt/geom/Point2D/getX()
org/apache/batik/bridge/GlyphLayout/doSpacing(java.lang.Float,java.lang.Float,java.lang.Float)#org/apache/batik/gvt/font/GVTGlyphMetrics/getBounds2D()
org/apache/batik/bridge/GlyphLayout/doSpacing(java.lang.Float,java.lang.Float,java.lang.Float)#java/awt/geom/Point2D/getY()
org/apache/batik/bridge/GlyphLayout/doSpacing(java.lang.Float,java.lang.Float,java.lang.Float)#org/apache/batik/gvt/font/GVTGlyphVector/getGlyphPosition(int)
org/apache/batik/bridge/GlyphLayout/doPathLayout()#java/awt/geom/Rectangle2D/getY()
org/apache/batik/bridge/GlyphLayout/doPathLayout()#org/apache/batik/gvt/font/GVTGlyphVector/getLogicalBounds()
org/apache/batik/bridge/GlyphLayout/doPathLayout()#java/text/AttributedCharacterIterator/getBeginIndex()
org/apache/batik/bridge/GlyphLayout/doPathLayout()#java/awt/geom/AffineTransform/translate(double,double)
org/apache/batik/bridge/GlyphLayout/doPathLayout()#org/apache/batik/gvt/font/GVTGlyphVector/getNumGlyphs()
org/apache/batik/bridge/GlyphLayout/doPathLayout()#org/apache/batik/gvt/text/TextPath/lengthOfPath()
org/apache/batik/bridge/GlyphLayout/doPathLayout()#java/awt/geom/AffineTransform/concatenate(java.awt.geom.AffineTransform)
org/apache/batik/bridge/GlyphLayout/doPathLayout()#java/text/AttributedCharacterIterator/setIndex(int)
org/apache/batik/bridge/GlyphLayout/doPathLayout()#java/awt/geom/AffineTransform/AffineTransform()
org/apache/batik/bridge/GlyphLayout/doPathLayout()#org/apache/batik/gvt/text/TextPath/pointAtLength(float)
org/apache/batik/bridge/GlyphLayout/doPathLayout()#java/awt/geom/Point2D/getX()
org/apache/batik/bridge/GlyphLayout/doPathLayout()#org/apache/batik/gvt/font/GVTGlyphVector/getGlyphTransform(int)
org/apache/batik/bridge/GlyphLayout/doPathLayout()#org/apache/batik/gvt/font/GVTGlyphVector/setGlyphPosition(int,java.awt.geom.Point2D)
org/apache/batik/bridge/GlyphLayout/doPathLayout()#java/awt/Shape/getBounds2D()
org/apache/batik/bridge/GlyphLayout/doPathLayout()#java/awt/geom/Point2D$Double/Double(double,double)
org/apache/batik/bridge/GlyphLayout/doPathLayout()#org/apache/batik/gvt/font/GVTGlyphVector/setGlyphTransform(int,java.awt.geom.AffineTransform)
org/apache/batik/bridge/GlyphLayout/doPathLayout()#java/awt/geom/Rectangle2D/getWidth()
org/apache/batik/bridge/GlyphLayout/doPathLayout()#org/apache/batik/gvt/font/GVTGlyphVector/getGlyphOutline(int)
org/apache/batik/bridge/GlyphLayout/doPathLayout()#org/apache/batik/gvt/text/TextPath/getStartOffset()
org/apache/batik/bridge/GlyphLayout/doPathLayout()#java/awt/geom/Rectangle2D/getHeight()
org/apache/batik/bridge/GlyphLayout/doPathLayout()#org/apache/batik/gvt/font/GVTGlyphVector/setGlyphVisible(int,boolean)
org/apache/batik/bridge/GlyphLayout/doPathLayout()#org/apache/batik/gvt/text/TextPath/angleAtLength(float)
org/apache/batik/bridge/GlyphLayout/doPathLayout()#java/text/AttributedCharacterIterator/first()
org/apache/batik/bridge/GlyphLayout/doPathLayout()#org/apache/batik/gvt/font/GVTGlyphVector/getCharacterCount(int,int)
org/apache/batik/bridge/GlyphLayout/doPathLayout()#java/awt/geom/AffineTransform/rotate(double)
org/apache/batik/bridge/GlyphLayout/doPathLayout()#java/awt/geom/Point2D/getY()
org/apache/batik/bridge/GlyphLayout/doPathLayout()#java/awt/geom/Rectangle2D/getX()
org/apache/batik/bridge/GlyphLayout/doPathLayout()#org/apache/batik/gvt/font/GVTGlyphVector/getGlyphPosition(int)
org/apache/batik/bridge/GlyphLayout/getHighlightShape(int,int)#java/awt/geom/GeneralPath/append(java.awt.Shape,boolean)
org/apache/batik/bridge/GlyphLayout/getHighlightShape(int,int)#java/awt/geom/PathIterator/currentSegment(float[])
org/apache/batik/bridge/GlyphLayout/getHighlightShape(int,int)#org/apache/batik/gvt/font/GVTGlyphVector/isGlyphVisible(int)
org/apache/batik/bridge/GlyphLayout/getHighlightShape(int,int)#java/awt/geom/PathIterator/isDone()
org/apache/batik/bridge/GlyphLayout/getHighlightShape(int,int)#org/apache/batik/gvt/font/GVTGlyphVector/getGlyphLogicalBounds(int)
org/apache/batik/bridge/GlyphLayout/getHighlightShape(int,int)#java/awt/geom/Point2D$Float/Float(float,float)
org/apache/batik/bridge/GlyphLayout/getHighlightShape(int,int)#java/awt/geom/PathIterator/next()
org/apache/batik/bridge/GlyphLayout/getHighlightShape(int,int)#java/awt/Shape/getPathIterator(java.awt.geom.AffineTransform)
org/apache/batik/bridge/GlyphLayout/getHighlightShape(int,int)#java/awt/geom/GeneralPath/GeneralPath()
org/apache/batik/bridge/GlyphLayout/getOverlineShape()#java/awt/geom/Rectangle2D/getMaxX()
org/apache/batik/bridge/GlyphLayout/getOverlineShape()#org/apache/batik/gvt/font/GVTLineMetrics/getOverlineOffset()
org/apache/batik/bridge/GlyphLayout/getOverlineShape()#org/apache/batik/gvt/font/GVTLineMetrics/getOverlineThickness()
org/apache/batik/bridge/GlyphLayout/getOverlineShape()#java/awt/geom/Rectangle2D/getMinX()
org/apache/batik/bridge/GlyphLayout/getOverlineShape()#java/lang/Float/floatValue()
org/apache/batik/bridge/GlyphLayout/getOverlineShape()#java/text/AttributedCharacterIterator/first()
org/apache/batik/bridge/GlyphLayout/getOverlineShape()#java/awt/BasicStroke/BasicStroke(float)
org/apache/batik/bridge/GlyphLayout/getOverlineShape()#org/apache/batik/gvt/font/GVTGlyphVector/getLogicalBounds()
org/apache/batik/bridge/GlyphLayout/getOverlineShape()#java/awt/geom/Line2D$Double/Double(double,double,double,double)
org/apache/batik/bridge/GlyphLayout/getOverlineShape()#java/awt/geom/Point2D/getY()
org/apache/batik/bridge/GlyphLayout/getOverlineShape()#java/awt/Stroke/createStrokedShape(java.awt.Shape)
org/apache/batik/bridge/GlyphLayout/getOverlineShape()#java/text/AttributedCharacterIterator/getAttribute(java.text.AttributedCharacterIterator$Attribute)
org/apache/batik/bridge/GlyphLayout/getStrikethroughShape()#java/awt/geom/Rectangle2D/getMaxX()
org/apache/batik/bridge/GlyphLayout/getStrikethroughShape()#org/apache/batik/gvt/font/GVTLineMetrics/getStrikethroughOffset()
org/apache/batik/bridge/GlyphLayout/getStrikethroughShape()#org/apache/batik/gvt/font/GVTLineMetrics/getStrikethroughThickness()
org/apache/batik/bridge/GlyphLayout/getStrikethroughShape()#java/awt/geom/Rectangle2D/getMinX()
org/apache/batik/bridge/GlyphLayout/getStrikethroughShape()#java/lang/Float/floatValue()
org/apache/batik/bridge/GlyphLayout/getStrikethroughShape()#java/text/AttributedCharacterIterator/first()
org/apache/batik/bridge/GlyphLayout/getStrikethroughShape()#java/awt/BasicStroke/BasicStroke(float)
org/apache/batik/bridge/GlyphLayout/getStrikethroughShape()#org/apache/batik/gvt/font/GVTGlyphVector/getLogicalBounds()
org/apache/batik/bridge/GlyphLayout/getStrikethroughShape()#java/awt/geom/Line2D$Double/Double(double,double,double,double)
org/apache/batik/bridge/GlyphLayout/getStrikethroughShape()#java/awt/geom/Point2D/getY()
org/apache/batik/bridge/GlyphLayout/getStrikethroughShape()#java/awt/Stroke/createStrokedShape(java.awt.Shape)
org/apache/batik/bridge/GlyphLayout/getStrikethroughShape()#java/text/AttributedCharacterIterator/getAttribute(java.text.AttributedCharacterIterator$Attribute)
org/apache/batik/bridge/GlyphLayout/getUnderlineShape()#org/apache/batik/gvt/font/GVTLineMetrics/getUnderlineOffset()
org/apache/batik/bridge/GlyphLayout/getUnderlineShape()#java/awt/geom/Rectangle2D/getMaxX()
org/apache/batik/bridge/GlyphLayout/getUnderlineShape()#java/awt/BasicStroke/createStrokedShape(java.awt.Shape)
org/apache/batik/bridge/GlyphLayout/getUnderlineShape()#java/awt/geom/Rectangle2D/getMinX()
org/apache/batik/bridge/GlyphLayout/getUnderlineShape()#java/lang/Float/floatValue()
org/apache/batik/bridge/GlyphLayout/getUnderlineShape()#java/text/AttributedCharacterIterator/first()
org/apache/batik/bridge/GlyphLayout/getUnderlineShape()#java/awt/BasicStroke/BasicStroke(float)
org/apache/batik/bridge/GlyphLayout/getUnderlineShape()#org/apache/batik/gvt/font/GVTLineMetrics/getUnderlineThickness()
org/apache/batik/bridge/GlyphLayout/getUnderlineShape()#org/apache/batik/gvt/font/GVTGlyphVector/getLogicalBounds()
org/apache/batik/bridge/GlyphLayout/getUnderlineShape()#java/awt/geom/Line2D$Double/Double(double,double,double,double)
org/apache/batik/bridge/GlyphLayout/getUnderlineShape()#java/awt/geom/Point2D/getY()
org/apache/batik/bridge/GlyphLayout/getUnderlineShape()#java/text/AttributedCharacterIterator/getAttribute(java.text.AttributedCharacterIterator$Attribute)
org/apache/batik/bridge/GlyphLayout/applyStretchTransform(boolean)#java/awt/geom/AffineTransform/getScaleInstance(double,double)
org/apache/batik/bridge/GlyphLayout/applyStretchTransform(boolean)#org/apache/batik/gvt/font/GVTGlyphVector/getGlyphTransform(int)
org/apache/batik/bridge/GlyphLayout/applyStretchTransform(boolean)#org/apache/batik/gvt/font/GVTGlyphVector/setGlyphPosition(int,java.awt.geom.Point2D)
org/apache/batik/bridge/GlyphLayout/applyStretchTransform(boolean)#java/awt/geom/AffineTransform/preConcatenate(java.awt.geom.AffineTransform)
org/apache/batik/bridge/GlyphLayout/applyStretchTransform(boolean)#org/apache/batik/gvt/font/GVTGlyphVector/setGlyphTransform(int,java.awt.geom.AffineTransform)
org/apache/batik/bridge/GlyphLayout/applyStretchTransform(boolean)#org/apache/batik/gvt/font/GVTGlyphVector/getNumGlyphs()
org/apache/batik/bridge/GlyphLayout/applyStretchTransform(boolean)#org/apache/batik/gvt/font/GVTGlyphVector/getGlyphPositions(int,int,float[])
org/apache/batik/bridge/GlyphLayout/applyStretchTransform(boolean)#java/awt/geom/Point2D$Float/Float(float,float)
org/apache/batik/bridge/GlyphLayout/applyStretchTransform(boolean)#java/awt/geom/Point2D$Float/Float()
org/apache/batik/bridge/GlyphLayout/applyStretchTransform(boolean)#java/awt/geom/Point2D/getX()
org/apache/batik/bridge/GlyphLayout/applyStretchTransform(boolean)#java/awt/geom/Point2D/getY()
org/apache/batik/bridge/GlyphLayout/addPtsToPath(java.awt.geom.GeneralPath,java.awt.geom.Point2D$Float[],java.awt.geom.Point2D$Float[],int)#java/awt/geom/GeneralPath/closePath()
org/apache/batik/bridge/GlyphLayout/addPtsToPath(java.awt.geom.GeneralPath,java.awt.geom.Point2D$Float[],java.awt.geom.Point2D$Float[],int)#java/awt/geom/GeneralPath/append(java.awt.Shape,boolean)
org/apache/batik/bridge/GlyphLayout/addPtsToPath(java.awt.geom.GeneralPath,java.awt.geom.Point2D$Float[],java.awt.geom.Point2D$Float[],int)#java/awt/geom/GeneralPath/reset()
org/apache/batik/bridge/GlyphLayout/addPtsToPath(java.awt.geom.GeneralPath,java.awt.geom.Point2D$Float[],java.awt.geom.Point2D$Float[],int)#java/awt/geom/Area/Area(java.awt.Shape)
org/apache/batik/bridge/GlyphLayout/addPtsToPath(java.awt.geom.GeneralPath,java.awt.geom.Point2D$Float[],java.awt.geom.Point2D$Float[],int)#java/awt/geom/GeneralPath/GeneralPath()
org/apache/batik/bridge/GlyphLayout/addPtsToPath(java.awt.geom.GeneralPath,java.awt.geom.Point2D$Float[],java.awt.geom.Point2D$Float[],int)#java/awt/geom/GeneralPath/lineTo(float,float)
org/apache/batik/bridge/GlyphLayout/addPtsToPath(java.awt.geom.GeneralPath,java.awt.geom.Point2D$Float[],java.awt.geom.Point2D$Float[],int)#java/lang/System/arraycopy(java.lang.Object,int,java.lang.Object,int,int)
org/apache/batik/bridge/GlyphLayout/addPtsToPath(java.awt.geom.GeneralPath,java.awt.geom.Point2D$Float[],java.awt.geom.Point2D$Float[],int)#java/awt/geom/GeneralPath/moveTo(float,float)
org/apache/batik/bridge/GlyphLayout/addPtsToPath(java.awt.geom.GeneralPath,java.awt.geom.Point2D$Float[],java.awt.geom.Point2D$Float[],int)#java/lang/Math/sqrt(double)
org/apache/batik/bridge/RhinoInterpreter/1/run(org.mozilla.javascript.Context)#org/mozilla/javascript/Context/evaluateString(org.mozilla.javascript.Scriptable,java.lang.String,java.lang.String,int,java.lang.Object)
org/apache/batik/bridge/RhinoInterpreter/1/run(org.mozilla.javascript.Context)#org/mozilla/javascript/ClassCache/get(org.mozilla.javascript.Scriptable)
org/apache/batik/bridge/RhinoInterpreter/1/run(org.mozilla.javascript.Context)#org/mozilla/javascript/Context/initStandardObjects(org.mozilla.javascript.ScriptableObject,boolean)
org/apache/batik/bridge/RhinoInterpreter/1/run(org.mozilla.javascript.Context)#java/util/Iterator/hasNext()
org/apache/batik/bridge/RhinoInterpreter/1/run(org.mozilla.javascript.Context)#org/mozilla/javascript/ClassCache/setCachingEnabled(boolean)
org/apache/batik/bridge/RhinoInterpreter/1/run(org.mozilla.javascript.Context)#java/util/Iterator/next()
org/apache/batik/bridge/RhinoInterpreter/1/run(org.mozilla.javascript.Context)#org/apache/batik/script/ImportInfo/getPackages()
org/apache/batik/bridge/RhinoInterpreter/1/run(org.mozilla.javascript.Context)#org/apache/batik/script/ImportInfo/getImports()
org/apache/batik/bridge/RhinoInterpreter/1/run(org.mozilla.javascript.Context)#java/lang/StringBuffer/append(java.lang.String)
org/apache/batik/bridge/RhinoInterpreter/1/run(org.mozilla.javascript.Context)#java/lang/StringBuffer/StringBuffer()
org/apache/batik/bridge/RhinoInterpreter/1/run(org.mozilla.javascript.Context)#org/apache/batik/script/ImportInfo/getClasses()
org/apache/batik/bridge/RhinoInterpreter/1/run(org.mozilla.javascript.Context)#java/lang/StringBuffer/toString()
org/apache/batik/bridge/svg12/SVG12ScriptingEnvironment/addScriptingListenersOn(org.w3c.dom.Element)#org/w3c/dom/Element/getAttributeNS(java.lang.String,java.lang.String)
org/apache/batik/bridge/svg12/SVG12ScriptingEnvironment/addScriptingListenersOn(org.w3c.dom.Element)#org/apache/batik/bridge/svg12/SVG12ScriptingEnvironment$HandlerScriptingEventListener/HandlerScriptingEventListener(org.apache.batik.bridge.svg12.SVG12ScriptingEnvironment,java.lang.String,java.lang.String,org.apache.batik.dom.AbstractElement)
org/apache/batik/bridge/svg12/SVG12ScriptingEnvironment/addScriptingListenersOn(org.w3c.dom.Element)#org/apache/batik/dom/util/DOMUtilities/getPrefix(java.lang.String)
org/apache/batik/bridge/svg12/SVG12ScriptingEnvironment/addScriptingListenersOn(org.w3c.dom.Element)#org/w3c/dom/Element/getParentNode()
org/apache/batik/bridge/svg12/SVG12ScriptingEnvironment/addScriptingListenersOn(org.w3c.dom.Element)#org/apache/batik/dom/util/DOMUtilities/getLocalName(java.lang.String)
org/apache/batik/bridge/svg12/SVG12ScriptingEnvironment/addScriptingListenersOn(org.w3c.dom.Element)#org/w3c/dom/Element/getLocalName()
org/apache/batik/bridge/svg12/SVG12ScriptingEnvironment/addScriptingListenersOn(org.w3c.dom.Element)#org/w3c/dom/Element/getNamespaceURI()
org/apache/batik/bridge/svg12/SVG12ScriptingEnvironment/addScriptingListenersOn(org.w3c.dom.Element)#org/apache/batik/dom/AbstractElement/addEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean,java.lang.Object)
org/apache/batik/bridge/svg12/SVG12ScriptingEnvironment/addScriptingListenersOn(org.w3c.dom.Element)#java/lang/String/indexOf(int)
org/apache/batik/bridge/svg12/SVG12ScriptingEnvironment/addScriptingListenersOn(org.w3c.dom.Element)#org/apache/batik/dom/util/TriplyIndexedTable/put(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
org/apache/batik/bridge/svg12/SVG12ScriptingEnvironment/addScriptingListenersOn(org.w3c.dom.Element)#org/apache/batik/dom/util/TriplyIndexedTable/TriplyIndexedTable()
org/apache/batik/bridge/svg12/SVG12ScriptingEnvironment/addScriptingListenersOn(org.w3c.dom.Element)#org/apache/batik/dom/AbstractElement/lookupNamespaceURI(java.lang.String)
org/apache/batik/bridge/svg12/SVG12ScriptingEnvironment/addScriptingListenersOn(org.w3c.dom.Element)#java/lang/String/equals(java.lang.Object)
org/apache/batik/bridge/svg12/SVG12ScriptingEnvironment/removeScriptingListenersOn(org.w3c.dom.Element)#org/w3c/dom/Element/getAttributeNS(java.lang.String,java.lang.String)
org/apache/batik/bridge/svg12/SVG12ScriptingEnvironment/removeScriptingListenersOn(org.w3c.dom.Element)#org/apache/batik/dom/AbstractElement/removeEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean)
org/apache/batik/bridge/svg12/SVG12ScriptingEnvironment/removeScriptingListenersOn(org.w3c.dom.Element)#org/apache/batik/dom/util/DOMUtilities/getPrefix(java.lang.String)
org/apache/batik/bridge/svg12/SVG12ScriptingEnvironment/removeScriptingListenersOn(org.w3c.dom.Element)#org/w3c/dom/Element/getParentNode()
org/apache/batik/bridge/svg12/SVG12ScriptingEnvironment/removeScriptingListenersOn(org.w3c.dom.Element)#org/apache/batik/dom/util/DOMUtilities/getLocalName(java.lang.String)
org/apache/batik/bridge/svg12/SVG12ScriptingEnvironment/removeScriptingListenersOn(org.w3c.dom.Element)#org/w3c/dom/Element/getLocalName()
org/apache/batik/bridge/svg12/SVG12ScriptingEnvironment/removeScriptingListenersOn(org.w3c.dom.Element)#org/w3c/dom/Element/getNamespaceURI()
org/apache/batik/bridge/svg12/SVG12ScriptingEnvironment/removeScriptingListenersOn(org.w3c.dom.Element)#java/lang/String/indexOf(int)
org/apache/batik/bridge/svg12/SVG12ScriptingEnvironment/removeScriptingListenersOn(org.w3c.dom.Element)#org/apache/batik/dom/util/TriplyIndexedTable/put(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
org/apache/batik/bridge/svg12/SVG12ScriptingEnvironment/removeScriptingListenersOn(org.w3c.dom.Element)#org/apache/batik/dom/AbstractElement/lookupNamespaceURI(java.lang.String)
org/apache/batik/bridge/svg12/SVG12ScriptingEnvironment/removeScriptingListenersOn(org.w3c.dom.Element)#java/lang/String/equals(java.lang.Object)
org/apache/batik/bridge/SVGFeBlendElementBridge/createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)#java/awt/geom/Rectangle2D/add(java.awt.geom.Rectangle2D)
org/apache/batik/bridge/SVGFeBlendElementBridge/createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)#org/apache/batik/ext/awt/image/renderable/CompositeRable8Bit/CompositeRable8Bit(java.util.List,org.apache.batik.ext.awt.image.CompositeRule,boolean)
org/apache/batik/bridge/SVGFeBlendElementBridge/createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)#org/apache/batik/bridge/SVGFeBlendElementBridge/updateFilterMap(org.w3c.dom.Element,org.apache.batik.ext.awt.image.renderable.Filter,java.util.Map)
org/apache/batik/bridge/SVGFeBlendElementBridge/createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)#org/apache/batik/bridge/SVGFeBlendElementBridge/handleColorInterpolationFilters(org.apache.batik.ext.awt.image.renderable.Filter,org.w3c.dom.Element)
org/apache/batik/bridge/SVGFeBlendElementBridge/createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)#java/awt/geom/Rectangle2D/clone()
org/apache/batik/bridge/SVGFeBlendElementBridge/createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)#java/util/List/add(java.lang.Object)
org/apache/batik/bridge/SVGFeBlendElementBridge/createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)#org/apache/batik/bridge/SVGFeBlendElementBridge/getIn(org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.util.Map,org.apache.batik.bridge.BridgeContext)
org/apache/batik/bridge/SVGFeBlendElementBridge/createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)#org/apache/batik/ext/awt/image/renderable/Filter/getBounds2D()
org/apache/batik/bridge/SVGFeBlendElementBridge/createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)#java/util/ArrayList/ArrayList(int)
org/apache/batik/bridge/SVGFeBlendElementBridge/createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)#org/apache/batik/ext/awt/image/renderable/PadRable8Bit/PadRable8Bit(org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,org.apache.batik.ext.awt.image.PadMode)
org/apache/batik/bridge/SVGFeBlendElementBridge/createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)#org/apache/batik/bridge/SVGFeBlendElementBridge/getIn2(org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.util.Map,org.apache.batik.bridge.BridgeContext)
org/apache/batik/bridge/CursorManager/convertSVGCursorElement(org.w3c.dom.Element)#org/w3c/dom/Element/getAttributeNS(java.lang.String,java.lang.String)
org/apache/batik/bridge/CursorManager/convertSVGCursorElement(org.w3c.dom.Element)#org/apache/batik/bridge/CursorManager$CursorDescriptor/CursorDescriptor(org.apache.batik.util.ParsedURL,float,float)
org/apache/batik/bridge/CursorManager/convertSVGCursorElement(org.w3c.dom.Element)#org/apache/batik/bridge/CursorManager$CursorCache/putCursor(org.apache.batik.bridge.CursorManager$CursorDescriptor,java.awt.Cursor)
org/apache/batik/bridge/CursorManager/convertSVGCursorElement(org.w3c.dom.Element)#org/apache/batik/dom/AbstractNode/getBaseURI(org.w3c.dom.Node)
org/apache/batik/bridge/CursorManager/convertSVGCursorElement(org.w3c.dom.Element)#java/awt/geom/Point2D$Float/Float(float,float)
org/apache/batik/bridge/CursorManager/convertSVGCursorElement(org.w3c.dom.Element)#java/lang/Math/round(float)
org/apache/batik/bridge/CursorManager/convertSVGCursorElement(org.w3c.dom.Element)#org/apache/batik/util/ParsedURL/ParsedURL(java.lang.String,java.lang.String)
org/apache/batik/bridge/CursorManager/convertSVGCursorElement(org.w3c.dom.Element)#java/awt/geom/Rectangle2D/getBounds()
org/apache/batik/bridge/CursorManager/convertSVGCursorElement(org.w3c.dom.Element)#org/apache/batik/dom/util/XLinkSupport/getXLinkHref(org.w3c.dom.Element)
org/apache/batik/bridge/CursorManager/convertSVGCursorElement(org.w3c.dom.Element)#java/lang/String/length()
org/apache/batik/bridge/CursorManager/convertSVGCursorElement(org.w3c.dom.Element)#org/apache/batik/util/ParsedURL/ParsedURL(java.lang.String)
org/apache/batik/bridge/CursorManager/convertSVGCursorElement(org.w3c.dom.Element)#org/apache/batik/ext/awt/image/renderable/Filter/createScaledRendering(int,int,java.awt.RenderingHints)
org/apache/batik/bridge/CursorManager/convertSVGCursorElement(org.w3c.dom.Element)#org/apache/batik/bridge/CursorManager$CursorCache/clearCursor(org.apache.batik.bridge.CursorManager$CursorDescriptor)
org/apache/batik/bridge/CursorManager/convertSVGCursorElement(org.w3c.dom.Element)#java/awt/Point/Point(int,int)
org/apache/batik/bridge/CursorManager/convertSVGCursorElement(org.w3c.dom.Element)#org/apache/batik/bridge/CursorManager$CursorCache/getCursor(org.apache.batik.bridge.CursorManager$CursorDescriptor)
org/apache/batik/bridge/CursorManager/convertSVGCursorElement(org.w3c.dom.Element)#org/apache/batik/util/ParsedURL/toString()
org/apache/batik/bridge/CursorManager/convertSVGCursorElement(org.w3c.dom.Element)#org/apache/batik/ext/awt/image/renderable/Filter/getBounds2D()
org/apache/batik/bridge/CursorManager/convertSVGCursorElement(org.w3c.dom.Element)#java/awt/Toolkit/createCustomCursor(java.awt.Image,java.awt.Point,java.lang.String)
org/apache/batik/bridge/CursorManager/convertSVGCursorElement(org.w3c.dom.Element)#java/awt/Toolkit/getDefaultToolkit()
org/apache/batik/bridge/CursorManager/cursorHrefToFilter(org.w3c.dom.Element,org.apache.batik.util.ParsedURL,java.awt.geom.Point2D)#org/apache/batik/ext/awt/image/spi/ImageTagRegistry/getRegistry()
org/apache/batik/bridge/CursorManager/cursorHrefToFilter(org.w3c.dom.Element,org.apache.batik.util.ParsedURL,java.awt.geom.Point2D)#org/apache/batik/ext/awt/image/spi/ImageTagRegistry/readURL(org.apache.batik.util.ParsedURL)
org/apache/batik/bridge/CursorManager/cursorHrefToFilter(org.w3c.dom.Element,org.apache.batik.util.ParsedURL,java.awt.geom.Point2D)#java/awt/geom/Rectangle2D/getBounds()
org/apache/batik/bridge/CursorManager/cursorHrefToFilter(org.w3c.dom.Element,org.apache.batik.util.ParsedURL,java.awt.geom.Point2D)#org/w3c/dom/Element/getOwnerDocument()
org/apache/batik/bridge/CursorManager/cursorHrefToFilter(org.w3c.dom.Element,org.apache.batik.util.ParsedURL,java.awt.geom.Point2D)#java/awt/geom/AffineTransform/transform(java.awt.geom.Point2D,java.awt.geom.Point2D)
org/apache/batik/bridge/CursorManager/cursorHrefToFilter(org.w3c.dom.Element,org.apache.batik.util.ParsedURL,java.awt.geom.Point2D)#org/apache/batik/gvt/GraphicsNode/getGraphicsNodeRable(boolean)
org/apache/batik/bridge/CursorManager/cursorHrefToFilter(org.w3c.dom.Element,org.apache.batik.util.ParsedURL,java.awt.geom.Point2D)#org/apache/batik/ext/awt/image/renderable/PadRable8Bit/PadRable8Bit(org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,org.apache.batik.ext.awt.image.PadMode)
org/apache/batik/bridge/CursorManager/cursorHrefToFilter(org.w3c.dom.Element,org.apache.batik.util.ParsedURL,java.awt.geom.Point2D)#java/lang/Math/round(float)
org/apache/batik/bridge/CursorManager/cursorHrefToFilter(org.w3c.dom.Element,org.apache.batik.util.ParsedURL,java.awt.geom.Point2D)#java/awt/Toolkit/getBestCursorSize(int,int)
org/apache/batik/bridge/CursorManager/cursorHrefToFilter(org.w3c.dom.Element,org.apache.batik.util.ParsedURL,java.awt.geom.Point2D)#org/apache/batik/ext/awt/image/renderable/AffineRable8Bit/getAffine()
org/apache/batik/bridge/CursorManager/cursorHrefToFilter(org.w3c.dom.Element,org.apache.batik.util.ParsedURL,java.awt.geom.Point2D)#java/awt/Rectangle/Rectangle(int,int,int,int)
org/apache/batik/bridge/CursorManager/cursorHrefToFilter(org.w3c.dom.Element,org.apache.batik.util.ParsedURL,java.awt.geom.Point2D)#java/lang/String/length()
org/apache/batik/bridge/CursorManager/cursorHrefToFilter(org.w3c.dom.Element,org.apache.batik.util.ParsedURL,java.awt.geom.Point2D)#org/w3c/dom/Element/getAttribute(java.lang.String)
org/apache/batik/bridge/CursorManager/cursorHrefToFilter(org.w3c.dom.Element,org.apache.batik.util.ParsedURL,java.awt.geom.Point2D)#org/apache/batik/ext/awt/image/spi/BrokenLinkProvider/hasBrokenLinkProperty(org.apache.batik.ext.awt.image.renderable.Filter)
org/apache/batik/bridge/CursorManager/cursorHrefToFilter(org.w3c.dom.Element,org.apache.batik.util.ParsedURL,java.awt.geom.Point2D)#org/apache/batik/util/ParsedURL/toString()
org/apache/batik/bridge/CursorManager/cursorHrefToFilter(org.w3c.dom.Element,org.apache.batik.util.ParsedURL,java.awt.geom.Point2D)#org/apache/batik/ext/awt/image/renderable/AffineRable8Bit/AffineRable8Bit(org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.AffineTransform)
org/apache/batik/bridge/CursorManager/cursorHrefToFilter(org.w3c.dom.Element,org.apache.batik.util.ParsedURL,java.awt.geom.Point2D)#org/w3c/dom/svg/SVGDocument/getRootElement()
org/apache/batik/bridge/CursorManager/cursorHrefToFilter(org.w3c.dom.Element,org.apache.batik.util.ParsedURL,java.awt.geom.Point2D)#java/awt/geom/AffineTransform/AffineTransform()
org/apache/batik/bridge/CursorManager/cursorHrefToFilter(org.w3c.dom.Element,org.apache.batik.util.ParsedURL,java.awt.geom.Point2D)#org/apache/batik/ext/awt/image/renderable/Filter/getBounds2D()
org/apache/batik/bridge/CursorManager/cursorHrefToFilter(org.w3c.dom.Element,org.apache.batik.util.ParsedURL,java.awt.geom.Point2D)#java/awt/Toolkit/getDefaultToolkit()
org/apache/batik/bridge/CursorManager/cursorHrefToFilter(org.w3c.dom.Element,org.apache.batik.util.ParsedURL,java.awt.geom.Point2D)#org/w3c/dom/Node/getNodeType()
org/apache/batik/bridge/CursorManager/renderedImageToImage(java.awt.image.RenderedImage)#java/awt/image/RenderedImage/getSampleModel()
org/apache/batik/bridge/CursorManager/renderedImageToImage(java.awt.image.RenderedImage)#java/awt/image/Raster/createWritableRaster(java.awt.image.SampleModel,java.awt.Point)
org/apache/batik/bridge/CursorManager/renderedImageToImage(java.awt.image.RenderedImage)#java/awt/image/RenderedImage/copyData(java.awt.image.WritableRaster)
org/apache/batik/bridge/CursorManager/renderedImageToImage(java.awt.image.RenderedImage)#java/awt/Point/Point(int,int)
org/apache/batik/bridge/CursorManager/renderedImageToImage(java.awt.image.RenderedImage)#java/awt/image/ColorModel/isAlphaPremultiplied()
org/apache/batik/bridge/CursorManager/renderedImageToImage(java.awt.image.RenderedImage)#java/awt/image/BufferedImage/BufferedImage(java.awt.image.ColorModel,java.awt.image.WritableRaster,boolean,java.util.Hashtable)
org/apache/batik/bridge/CursorManager/renderedImageToImage(java.awt.image.RenderedImage)#java/awt/image/RenderedImage/getMinY()
org/apache/batik/bridge/CursorManager/renderedImageToImage(java.awt.image.RenderedImage)#java/awt/image/RenderedImage/getMinX()
org/apache/batik/bridge/CursorManager/renderedImageToImage(java.awt.image.RenderedImage)#java/awt/image/RenderedImage/getColorModel()
org/apache/batik/bridge/svg12/SVGMultiImageElementBridge/addRefInfo(org.w3c.dom.Element,java.util.Collection,java.util.Collection,java.util.Collection,java.awt.geom.Rectangle2D)#org/w3c/dom/Attr/getNamespaceURI()
org/apache/batik/bridge/svg12/SVGMultiImageElementBridge/addRefInfo(org.w3c.dom.Element,java.util.Collection,java.util.Collection,java.util.Collection,java.awt.geom.Rectangle2D)#org/w3c/dom/Element/getOwnerDocument()
org/apache/batik/bridge/svg12/SVGMultiImageElementBridge/addRefInfo(org.w3c.dom.Element,java.util.Collection,java.util.Collection,java.util.Collection,java.awt.geom.Rectangle2D)#org/w3c/dom/Element/setAttributeNS(java.lang.String,java.lang.String,java.lang.String)
org/apache/batik/bridge/svg12/SVGMultiImageElementBridge/addRefInfo(org.w3c.dom.Element,java.util.Collection,java.util.Collection,java.util.Collection,java.awt.geom.Rectangle2D)#org/w3c/dom/NamedNodeMap/getLength()
org/apache/batik/bridge/svg12/SVGMultiImageElementBridge/addRefInfo(org.w3c.dom.Element,java.util.Collection,java.util.Collection,java.util.Collection,java.awt.geom.Rectangle2D)#org/w3c/dom/Element/getAttribute(java.lang.String)
org/apache/batik/bridge/svg12/SVGMultiImageElementBridge/addRefInfo(org.w3c.dom.Element,java.util.Collection,java.util.Collection,java.util.Collection,java.awt.geom.Rectangle2D)#org/w3c/dom/Document/createElementNS(java.lang.String,java.lang.String)
org/apache/batik/bridge/svg12/SVGMultiImageElementBridge/addRefInfo(org.w3c.dom.Element,java.util.Collection,java.util.Collection,java.util.Collection,java.awt.geom.Rectangle2D)#org/apache/batik/dom/AbstractNode/getBaseURI(org.w3c.dom.Node)
org/apache/batik/bridge/svg12/SVGMultiImageElementBridge/addRefInfo(org.w3c.dom.Element,java.util.Collection,java.util.Collection,java.util.Collection,java.awt.geom.Rectangle2D)#org/w3c/dom/Element/setAttribute(java.lang.String,java.lang.String)
org/apache/batik/bridge/svg12/SVGMultiImageElementBridge/addRefInfo(org.w3c.dom.Element,java.util.Collection,java.util.Collection,java.util.Collection,java.awt.geom.Rectangle2D)#org/w3c/dom/Attr/getValue()
org/apache/batik/bridge/svg12/SVGMultiImageElementBridge/addRefInfo(org.w3c.dom.Element,java.util.Collection,java.util.Collection,java.util.Collection,java.awt.geom.Rectangle2D)#org/w3c/dom/NamedNodeMap/item(int)
org/apache/batik/bridge/svg12/SVGMultiImageElementBridge/addRefInfo(org.w3c.dom.Element,java.util.Collection,java.util.Collection,java.util.Collection,java.awt.geom.Rectangle2D)#org/w3c/dom/Attr/getName()
org/apache/batik/bridge/svg12/SVGMultiImageElementBridge/addRefInfo(org.w3c.dom.Element,java.util.Collection,java.util.Collection,java.util.Collection,java.awt.geom.Rectangle2D)#org/apache/batik/dom/util/XLinkSupport/getXLinkHref(org.w3c.dom.Element)
org/apache/batik/bridge/svg12/SVGMultiImageElementBridge/addRefInfo(org.w3c.dom.Element,java.util.Collection,java.util.Collection,java.util.Collection,java.awt.geom.Rectangle2D)#java/lang/String/length()
org/apache/batik/bridge/svg12/SVGMultiImageElementBridge/addRefInfo(org.w3c.dom.Element,java.util.Collection,java.util.Collection,java.util.Collection,java.awt.geom.Rectangle2D)#org/apache/batik/util/ParsedURL/ParsedURL(java.lang.String)
org/apache/batik/bridge/svg12/SVGMultiImageElementBridge/addRefInfo(org.w3c.dom.Element,java.util.Collection,java.util.Collection,java.util.Collection,java.awt.geom.Rectangle2D)#org/w3c/dom/Element/appendChild(org.w3c.dom.Node)
org/apache/batik/bridge/svg12/SVGMultiImageElementBridge/addRefInfo(org.w3c.dom.Element,java.util.Collection,java.util.Collection,java.util.Collection,java.awt.geom.Rectangle2D)#org/w3c/dom/Element/getAttributes()
org/apache/batik/bridge/svg12/SVGMultiImageElementBridge/addRefInfo(org.w3c.dom.Element,java.util.Collection,java.util.Collection,java.util.Collection,java.awt.geom.Rectangle2D)#org/apache/batik/util/ParsedURL/toString()
org/apache/batik/bridge/svg12/SVGMultiImageElementBridge/addRefInfo(org.w3c.dom.Element,java.util.Collection,java.util.Collection,java.util.Collection,java.awt.geom.Rectangle2D)#org/apache/batik/util/ParsedURL/ParsedURL(java.lang.String,java.lang.String)
org/apache/batik/bridge/svg12/SVGMultiImageElementBridge/addRefInfo(org.w3c.dom.Element,java.util.Collection,java.util.Collection,java.util.Collection,java.awt.geom.Rectangle2D)#java/util/Collection/add(java.lang.Object)
org/apache/batik/bridge/svg12/SVGMultiImageElementBridge/addInfo(org.w3c.dom.Element,java.util.Collection,java.util.Collection,java.util.Collection,java.awt.geom.Rectangle2D)#org/w3c/dom/Attr/getNamespaceURI()
org/apache/batik/bridge/svg12/SVGMultiImageElementBridge/addInfo(org.w3c.dom.Element,java.util.Collection,java.util.Collection,java.util.Collection,java.awt.geom.Rectangle2D)#org/w3c/dom/Element/getOwnerDocument()
org/apache/batik/bridge/svg12/SVGMultiImageElementBridge/addInfo(org.w3c.dom.Element,java.util.Collection,java.util.Collection,java.util.Collection,java.awt.geom.Rectangle2D)#org/w3c/dom/Element/setAttributeNS(java.lang.String,java.lang.String,java.lang.String)
org/apache/batik/bridge/svg12/SVGMultiImageElementBridge/addInfo(org.w3c.dom.Element,java.util.Collection,java.util.Collection,java.util.Collection,java.awt.geom.Rectangle2D)#org/w3c/dom/NamedNodeMap/getLength()
org/apache/batik/bridge/svg12/SVGMultiImageElementBridge/addInfo(org.w3c.dom.Element,java.util.Collection,java.util.Collection,java.util.Collection,java.awt.geom.Rectangle2D)#org/w3c/dom/Element/getFirstChild()
org/apache/batik/bridge/svg12/SVGMultiImageElementBridge/addInfo(org.w3c.dom.Element,java.util.Collection,java.util.Collection,java.util.Collection,java.awt.geom.Rectangle2D)#org/w3c/dom/Element/appendChild(org.w3c.dom.Node)
org/apache/batik/bridge/svg12/SVGMultiImageElementBridge/addInfo(org.w3c.dom.Element,java.util.Collection,java.util.Collection,java.util.Collection,java.awt.geom.Rectangle2D)#org/w3c/dom/Document/createElementNS(java.lang.String,java.lang.String)
org/apache/batik/bridge/svg12/SVGMultiImageElementBridge/addInfo(org.w3c.dom.Element,java.util.Collection,java.util.Collection,java.util.Collection,java.awt.geom.Rectangle2D)#org/w3c/dom/Attr/getValue()
org/apache/batik/bridge/svg12/SVGMultiImageElementBridge/addInfo(org.w3c.dom.Element,java.util.Collection,java.util.Collection,java.util.Collection,java.awt.geom.Rectangle2D)#java/util/Collection/add(java.lang.Object)
org/apache/batik/bridge/svg12/SVGMultiImageElementBridge/addInfo(org.w3c.dom.Element,java.util.Collection,java.util.Collection,java.util.Collection,java.awt.geom.Rectangle2D)#org/w3c/dom/NamedNodeMap/item(int)
org/apache/batik/bridge/svg12/SVGMultiImageElementBridge/addInfo(org.w3c.dom.Element,java.util.Collection,java.util.Collection,java.util.Collection,java.awt.geom.Rectangle2D)#org/w3c/dom/Attr/getName()
org/apache/batik/bridge/svg12/SVGMultiImageElementBridge/addInfo(org.w3c.dom.Element,java.util.Collection,java.util.Collection,java.util.Collection,java.awt.geom.Rectangle2D)#org/w3c/dom/Element/getAttributes()
org/apache/batik/bridge/svg12/SVGMultiImageElementBridge/createGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)#org/w3c/dom/Node/getNextSibling()
org/apache/batik/bridge/svg12/SVGMultiImageElementBridge/createGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)#org/apache/batik/bridge/svg12/SVGMultiImageElementBridge/instantiateGraphicsNode()
org/apache/batik/bridge/svg12/SVGMultiImageElementBridge/createGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)#java/util/Iterator/hasNext()
org/apache/batik/bridge/svg12/SVGMultiImageElementBridge/createGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)#java/awt/geom/AffineTransform/translate(double,double)
org/apache/batik/bridge/svg12/SVGMultiImageElementBridge/createGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)#org/apache/batik/gvt/ImageNode/setVisible(boolean)
org/apache/batik/bridge/svg12/SVGMultiImageElementBridge/createGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)#org/apache/batik/gvt/ImageNode/setClip(org.apache.batik.ext.awt.image.renderable.ClipRable)
org/apache/batik/bridge/svg12/SVGMultiImageElementBridge/createGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)#org/w3c/dom/Element/getFirstChild()
org/apache/batik/bridge/svg12/SVGMultiImageElementBridge/createGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)#java/lang/String/length()
org/apache/batik/bridge/svg12/SVGMultiImageElementBridge/createGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)#java/awt/geom/Rectangle2D/getHeight()
org/apache/batik/bridge/svg12/SVGMultiImageElementBridge/createGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)#java/util/List/iterator()
org/apache/batik/bridge/svg12/SVGMultiImageElementBridge/createGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)#java/awt/geom/Rectangle2D/getY()
org/apache/batik/bridge/svg12/SVGMultiImageElementBridge/createGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)#org/apache/batik/ext/awt/image/renderable/ClipRable8Bit/ClipRable8Bit(org.apache.batik.ext.awt.image.renderable.Filter,java.awt.Shape)
org/apache/batik/bridge/svg12/SVGMultiImageElementBridge/createGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)#org/apache/batik/gvt/ImageNode/setImage(org.apache.batik.gvt.GraphicsNode)
org/apache/batik/bridge/svg12/SVGMultiImageElementBridge/createGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)#org/w3c/dom/Element/getLocalName()
org/apache/batik/bridge/svg12/SVGMultiImageElementBridge/createGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)#java/awt/geom/Rectangle2D/getWidth()
org/apache/batik/bridge/svg12/SVGMultiImageElementBridge/createGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)#java/util/List/size()
org/apache/batik/bridge/svg12/SVGMultiImageElementBridge/createGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)#java/awt/geom/Rectangle2D$Double/Double(double,double,double,double)
org/apache/batik/bridge/svg12/SVGMultiImageElementBridge/createGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)#org/w3c/dom/Element/getAttribute(java.lang.String)
org/apache/batik/bridge/svg12/SVGMultiImageElementBridge/createGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)#org/apache/batik/gvt/ImageNode/getGraphicsNodeRable(boolean)
org/apache/batik/bridge/svg12/SVGMultiImageElementBridge/createGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)#java/util/Iterator/next()
org/apache/batik/bridge/svg12/SVGMultiImageElementBridge/createGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)#org/w3c/dom/Element/getNamespaceURI()
org/apache/batik/bridge/svg12/SVGMultiImageElementBridge/createGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)#java/lang/String/equals(java.lang.Object)
org/apache/batik/bridge/svg12/SVGMultiImageElementBridge/createGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)#java/util/LinkedList/LinkedList()
org/apache/batik/bridge/svg12/SVGMultiImageElementBridge/createGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)#org/apache/batik/gvt/ImageNode/setBackgroundEnable(java.awt.geom.Rectangle2D)
org/apache/batik/bridge/svg12/SVGMultiImageElementBridge/createGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)#org/apache/batik/bridge/svg12/SVGMultiImageElementBridge/associateSVGContext(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode)
org/apache/batik/bridge/svg12/SVGMultiImageElementBridge/createGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)#org/apache/batik/bridge/svg12/SVGMultiImageElementBridge$MultiImageElementViewport/MultiImageElementViewport(float,float)
org/apache/batik/bridge/svg12/SVGMultiImageElementBridge/createGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)#java/awt/geom/AffineTransform/AffineTransform()
org/apache/batik/bridge/svg12/SVGMultiImageElementBridge/createGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)#java/awt/geom/Rectangle2D/getX()
org/apache/batik/bridge/svg12/SVGMultiImageElementBridge/createGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)#org/w3c/dom/Node/getNodeType()
org/apache/batik/bridge/svg12/SVGMultiImageElementBridge/createGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)#org/apache/batik/gvt/ImageNode/setTransform(java.awt.geom.AffineTransform)
