org/apache/pdfbox/pdfparser/XrefTrailerResolver/setStartxref(int)#java/util/ArrayList/ArrayList()
org/apache/pdfbox/pdfparser/XrefTrailerResolver/setStartxref(int)#org/apache/pdfbox/pdfparser/XrefTrailerResolver$XrefTrailerObj/XrefTrailerObj(org.apache.pdfbox.pdfparser.XrefTrailerResolver)
org/apache/pdfbox/pdfparser/XrefTrailerResolver/setStartxref(int)#org/apache/commons/logging/Log/warn(java.lang.Object)
org/apache/pdfbox/pdfparser/XrefTrailerResolver/setStartxref(int)#java/lang/StringBuilder/append(java.lang.String)
org/apache/pdfbox/pdfparser/XrefTrailerResolver/setStartxref(int)#java/util/Map/putAll(java.util.Map)
org/apache/pdfbox/pdfparser/XrefTrailerResolver/setStartxref(int)#java/util/Map/get(java.lang.Object)
org/apache/pdfbox/pdfparser/XrefTrailerResolver/setStartxref(int)#java/lang/StringBuilder/toString()
org/apache/pdfbox/pdfparser/XrefTrailerResolver/setStartxref(int)#java/util/Iterator/hasNext()
org/apache/pdfbox/pdfparser/XrefTrailerResolver/setStartxref(int)#java/util/Collections/reverse(java.util.List)
org/apache/pdfbox/pdfparser/XrefTrailerResolver/setStartxref(int)#java/lang/StringBuilder/append(int)
org/apache/pdfbox/pdfparser/XrefTrailerResolver/setStartxref(int)#java/util/List/size()
org/apache/pdfbox/pdfparser/XrefTrailerResolver/setStartxref(int)#java/util/Map/size()
org/apache/pdfbox/pdfparser/XrefTrailerResolver/setStartxref(int)#org/apache/pdfbox/pdfparser/XrefTrailerResolver$XrefTrailerObj/access$102(org.apache.pdfbox.pdfparser.XrefTrailerResolver$XrefTrailerObj,org.apache.pdfbox.cos.COSDictionary)
org/apache/pdfbox/pdfparser/XrefTrailerResolver/setStartxref(int)#java/util/List/addAll(java.util.Collection)
org/apache/pdfbox/pdfparser/XrefTrailerResolver/setStartxref(int)#java/util/Iterator/next()
org/apache/pdfbox/pdfparser/XrefTrailerResolver/setStartxref(int)#java/util/Map/keySet()
org/apache/pdfbox/pdfparser/XrefTrailerResolver/setStartxref(int)#java/lang/StringBuilder/StringBuilder()
org/apache/pdfbox/pdfparser/XrefTrailerResolver/setStartxref(int)#java/util/Collections/sort(java.util.List)
org/apache/pdfbox/pdfparser/XrefTrailerResolver/setStartxref(int)#java/util/List/add(java.lang.Object)
org/apache/pdfbox/pdfparser/XrefTrailerResolver/setStartxref(int)#org/apache/pdfbox/pdfparser/XrefTrailerResolver$XrefTrailerObj/access$000(org.apache.pdfbox.pdfparser.XrefTrailerResolver$XrefTrailerObj)
org/apache/pdfbox/pdfparser/XrefTrailerResolver/setStartxref(int)#java/lang/Integer/valueOf(int)
org/apache/pdfbox/pdfparser/XrefTrailerResolver/setStartxref(int)#org/apache/pdfbox/pdfparser/XrefTrailerResolver$XrefTrailerObj/access$100(org.apache.pdfbox.pdfparser.XrefTrailerResolver$XrefTrailerObj)
org/apache/pdfbox/pdfparser/XrefTrailerResolver/setStartxref(int)#java/util/List/iterator()
org/apache/pdfbox/pdmodel/interactive/form/PDField/importFDF(org.apache.pdfbox.pdmodel.fdf.FDFField)#java/lang/StringBuilder/append(java.lang.String)
org/apache/pdfbox/pdmodel/interactive/form/PDField/importFDF(org.apache.pdfbox.pdmodel.fdf.FDFField)#org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationWidget/getAnnotationFlags()
org/apache/pdfbox/pdmodel/interactive/form/PDField/importFDF(org.apache.pdfbox.pdmodel.fdf.FDFField)#java/util/List/size()
org/apache/pdfbox/pdmodel/interactive/form/PDField/importFDF(org.apache.pdfbox.pdmodel.fdf.FDFField)#java/lang/StringBuilder/StringBuilder()
org/apache/pdfbox/pdmodel/interactive/form/PDField/importFDF(org.apache.pdfbox.pdmodel.fdf.FDFField)#java/lang/Object/getClass()
org/apache/pdfbox/pdmodel/interactive/form/PDField/importFDF(org.apache.pdfbox.pdmodel.fdf.FDFField)#java/lang/Integer/intValue()
org/apache/pdfbox/pdmodel/interactive/form/PDField/importFDF(org.apache.pdfbox.pdmodel.fdf.FDFField)#java/io/IOException/IOException(java.lang.String)
org/apache/pdfbox/pdmodel/interactive/form/PDField/importFDF(org.apache.pdfbox.pdmodel.fdf.FDFField)#java/lang/String/equals(java.lang.Object)
org/apache/pdfbox/pdmodel/interactive/form/PDField/importFDF(org.apache.pdfbox.pdmodel.fdf.FDFField)#java/lang/Class/getName()
org/apache/pdfbox/pdmodel/interactive/form/PDField/importFDF(org.apache.pdfbox.pdmodel.fdf.FDFField)#org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationWidget/setAnnotationFlags(int)
org/apache/pdfbox/pdmodel/interactive/form/PDField/importFDF(org.apache.pdfbox.pdmodel.fdf.FDFField)#java/util/List/get(int)
org/apache/pdfbox/pdmodel/interactive/form/PDField/importFDF(org.apache.pdfbox.pdmodel.fdf.FDFField)#java/lang/StringBuilder/toString()
org/apache/pdfbox/pdfwriter/ContentStreamWriter/writeObject(java.lang.Object)#java/io/IOException/IOException(java.lang.String)
org/apache/pdfbox/pdfwriter/ContentStreamWriter/writeObject(java.lang.Object)#java/util/Iterator/hasNext()
org/apache/pdfbox/pdfwriter/ContentStreamWriter/writeObject(java.lang.Object)#java/util/Iterator/next()
org/apache/pdfbox/pdfwriter/ContentStreamWriter/writeObject(java.lang.Object)#java/lang/StringBuilder/StringBuilder()
org/apache/pdfbox/pdfwriter/ContentStreamWriter/writeObject(java.lang.Object)#java/lang/String/getBytes(java.lang.String)
org/apache/pdfbox/pdfwriter/ContentStreamWriter/writeObject(java.lang.Object)#java/io/OutputStream/write(byte[])
org/apache/pdfbox/pdfwriter/ContentStreamWriter/writeObject(java.lang.Object)#java/lang/StringBuilder/toString()
org/apache/pdfbox/pdfwriter/ContentStreamWriter/writeObject(java.lang.Object)#java/lang/StringBuilder/append(java.lang.String)
org/apache/pdfbox/pdfwriter/ContentStreamWriter/writeObject(java.lang.Object)#java/util/Map$Entry/getKey()
org/apache/pdfbox/pdfwriter/ContentStreamWriter/writeObject(java.lang.Object)#java/lang/String/equals(java.lang.Object)
org/apache/pdfbox/pdfwriter/ContentStreamWriter/writeObject(java.lang.Object)#java/util/Set/iterator()
org/apache/pdfbox/pdfwriter/ContentStreamWriter/writeObject(java.lang.Object)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/pdfbox/pdfwriter/ContentStreamWriter/writeObject(java.lang.Object)#java/util/Map$Entry/getValue()
org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/StandardStructureTypes/<clinit>()#java/lang/Class/getFields()
org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/StandardStructureTypes/<clinit>()#java/util/ArrayList/ArrayList()
org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/StandardStructureTypes/<clinit>()#java/lang/reflect/Modifier/isFinal(int)
org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/StandardStructureTypes/<clinit>()#java/lang/IllegalArgumentException/printStackTrace()
org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/StandardStructureTypes/<clinit>()#java/util/Collections/sort(java.util.List)
org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/StandardStructureTypes/<clinit>()#java/util/List/add(java.lang.Object)
org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/StandardStructureTypes/<clinit>()#java/lang/reflect/Field/getModifiers()
org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/StandardStructureTypes/<clinit>()#java/lang/IllegalAccessException/printStackTrace()
org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/StandardStructureTypes/<clinit>()#java/lang/Object/toString()
org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/StandardStructureTypes/<clinit>()#java/lang/reflect/Field/get(java.lang.Object)
org/apache/pdfbox/pdmodel/encryption/PDEncryptionManager/getEncryptionDictionary(org.apache.pdfbox.cos.COSDictionary)#java/lang/reflect/Constructor/newInstance(java.lang.Object[])
org/apache/pdfbox/pdmodel/encryption/PDEncryptionManager/getEncryptionDictionary(org.apache.pdfbox.cos.COSDictionary)#java/io/IOException/IOException(java.lang.String)
org/apache/pdfbox/pdmodel/encryption/PDEncryptionManager/getEncryptionDictionary(org.apache.pdfbox.cos.COSDictionary)#java/lang/InstantiationException/getMessage()
org/apache/pdfbox/pdmodel/encryption/PDEncryptionManager/getEncryptionDictionary(org.apache.pdfbox.cos.COSDictionary)#java/util/Map/get(java.lang.Object)
org/apache/pdfbox/pdmodel/encryption/PDEncryptionManager/getEncryptionDictionary(org.apache.pdfbox.cos.COSDictionary)#java/lang/reflect/InvocationTargetException/getMessage()
org/apache/pdfbox/pdmodel/encryption/PDEncryptionManager/getEncryptionDictionary(org.apache.pdfbox.cos.COSDictionary)#java/lang/IllegalAccessException/getMessage()
org/apache/pdfbox/pdmodel/encryption/PDEncryptionManager/getEncryptionDictionary(org.apache.pdfbox.cos.COSDictionary)#java/lang/StringBuilder/StringBuilder()
org/apache/pdfbox/pdmodel/encryption/PDEncryptionManager/getEncryptionDictionary(org.apache.pdfbox.cos.COSDictionary)#java/lang/Class/getConstructor(java.lang.Class[])
org/apache/pdfbox/pdmodel/encryption/PDEncryptionManager/getEncryptionDictionary(org.apache.pdfbox.cos.COSDictionary)#java/lang/StringBuilder/toString()
org/apache/pdfbox/pdmodel/encryption/PDEncryptionManager/getEncryptionDictionary(org.apache.pdfbox.cos.COSDictionary)#java/lang/StringBuilder/append(java.lang.String)
org/apache/pdfbox/pdmodel/encryption/PDEncryptionManager/getEncryptionDictionary(org.apache.pdfbox.cos.COSDictionary)#java/lang/NoSuchMethodException/getMessage()
org/apache/pdfbox/pdfviewer/PDFTreeModel/getIndexOfChild(java.lang.Object,java.lang.Object)#java/util/ArrayList/ArrayList(java.util.Collection)
org/apache/pdfbox/pdfviewer/PDFTreeModel/getIndexOfChild(java.lang.Object,java.lang.Object)#java/lang/StringBuilder/append(java.lang.String)
org/apache/pdfbox/pdfviewer/PDFTreeModel/getIndexOfChild(java.lang.Object,java.lang.Object)#java/util/List/size()
org/apache/pdfbox/pdfviewer/PDFTreeModel/getIndexOfChild(java.lang.Object,java.lang.Object)#java/lang/Class/getName()
org/apache/pdfbox/pdfviewer/PDFTreeModel/getIndexOfChild(java.lang.Object,java.lang.Object)#java/util/List/get(int)
org/apache/pdfbox/pdfviewer/PDFTreeModel/getIndexOfChild(java.lang.Object,java.lang.Object)#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/apache/pdfbox/pdfviewer/PDFTreeModel/getIndexOfChild(java.lang.Object,java.lang.Object)#java/lang/Object/getClass()
org/apache/pdfbox/pdfviewer/PDFTreeModel/getIndexOfChild(java.lang.Object,java.lang.Object)#java/lang/StringBuilder/StringBuilder()
org/apache/pdfbox/pdfviewer/PDFTreeModel/getIndexOfChild(java.lang.Object,java.lang.Object)#java/util/Collections/sort(java.util.List)
org/apache/pdfbox/pdfviewer/PDFTreeModel/getIndexOfChild(java.lang.Object,java.lang.Object)#java/lang/StringBuilder/toString()
org/apache/pdfbox/pdfviewer/PDFTreeModel/getIndexOfChild(java.lang.Object,java.lang.Object)#java/util/List/indexOf(java.lang.Object)
org/apache/pdfbox/pdfviewer/PDFTreeModel/getChild(java.lang.Object,int)#java/util/ArrayList/ArrayList(java.util.Collection)
org/apache/pdfbox/pdfviewer/PDFTreeModel/getChild(java.lang.Object,int)#java/lang/StringBuilder/append(java.lang.String)
org/apache/pdfbox/pdfviewer/PDFTreeModel/getChild(java.lang.Object,int)#java/lang/Class/getName()
org/apache/pdfbox/pdfviewer/PDFTreeModel/getChild(java.lang.Object,int)#java/util/List/get(int)
org/apache/pdfbox/pdfviewer/PDFTreeModel/getChild(java.lang.Object,int)#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/apache/pdfbox/pdfviewer/PDFTreeModel/getChild(java.lang.Object,int)#java/lang/Object/getClass()
org/apache/pdfbox/pdfviewer/PDFTreeModel/getChild(java.lang.Object,int)#java/lang/StringBuilder/toString()
org/apache/pdfbox/pdfviewer/PDFTreeModel/getChild(java.lang.Object,int)#java/lang/StringBuilder/StringBuilder()
org/apache/pdfbox/pdfviewer/PDFTreeModel/getChild(java.lang.Object,int)#java/util/Collections/sort(java.util.List)
org/apache/pdfbox/util/ICU4JImpl/normalizeDiac(java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/apache/pdfbox/util/ICU4JImpl/normalizeDiac(java.lang.String)#java/lang/StringBuilder/append(char)
org/apache/pdfbox/util/ICU4JImpl/normalizeDiac(java.lang.String)#java/lang/Character/getType(char)
org/apache/pdfbox/util/ICU4JImpl/normalizeDiac(java.lang.String)#java/lang/StringBuilder/toString()
org/apache/pdfbox/util/ICU4JImpl/normalizeDiac(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/apache/pdfbox/util/ICU4JImpl/normalizeDiac(java.lang.String)#java/lang/String/charAt(int)
org/apache/pdfbox/util/ICU4JImpl/normalizeDiac(java.lang.String)#java/lang/String/trim()
org/apache/pdfbox/util/ICU4JImpl/normalizeDiac(java.lang.String)#com/ibm/icu/text/Normalizer/normalize(int,com.ibm.icu.text.Normalizer$Mode)
org/apache/pdfbox/util/ICU4JImpl/normalizeDiac(java.lang.String)#java/lang/String/length()
org/apache/pdfbox/examples/pdmodel/RubberStampWithImage/doIt(java.lang.String[])#java/util/ArrayList/ArrayList()
org/apache/pdfbox/examples/pdmodel/RubberStampWithImage/doIt(java.lang.String[])#java/io/FileInputStream/FileInputStream(java.lang.String)
org/apache/pdfbox/examples/pdmodel/RubberStampWithImage/doIt(java.lang.String[])#org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationRubberStamp/setRectangle(org.apache.pdfbox.pdmodel.common.PDRectangle)
org/apache/pdfbox/examples/pdmodel/RubberStampWithImage/doIt(java.lang.String[])#java/util/List/get(int)
org/apache/pdfbox/examples/pdmodel/RubberStampWithImage/doIt(java.lang.String[])#java/io/OutputStream/close()
org/apache/pdfbox/examples/pdmodel/RubberStampWithImage/doIt(java.lang.String[])#java/io/IOException/IOException(java.lang.String)
org/apache/pdfbox/examples/pdmodel/RubberStampWithImage/doIt(java.lang.String[])#java/lang/StringBuilder/append(java.lang.String)
org/apache/pdfbox/examples/pdmodel/RubberStampWithImage/doIt(java.lang.String[])#java/io/PrintStream/println(java.lang.String)
org/apache/pdfbox/examples/pdmodel/RubberStampWithImage/doIt(java.lang.String[])#java/util/List/size()
org/apache/pdfbox/examples/pdmodel/RubberStampWithImage/doIt(java.lang.String[])#java/lang/StringBuilder/StringBuilder()
org/apache/pdfbox/examples/pdmodel/RubberStampWithImage/doIt(java.lang.String[])#org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationRubberStamp/setAppearance(org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary)
org/apache/pdfbox/examples/pdmodel/RubberStampWithImage/doIt(java.lang.String[])#java/util/List/add(java.lang.Object)
org/apache/pdfbox/examples/pdmodel/RubberStampWithImage/doIt(java.lang.String[])#org/apache/pdfbox/pdmodel/graphics/xobject/PDXObjectForm/getCOSStream()
org/apache/pdfbox/examples/pdmodel/RubberStampWithImage/doIt(java.lang.String[])#org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationRubberStamp/setContents(java.lang.String)
org/apache/pdfbox/examples/pdmodel/RubberStampWithImage/doIt(java.lang.String[])#java/lang/StringBuilder/append(java.lang.Object)
org/apache/pdfbox/examples/pdmodel/RubberStampWithImage/doIt(java.lang.String[])#java/lang/StringBuilder/toString()
org/apache/pdfbox/util/TextPosition/insertDiacritic(int,org.apache.pdfbox.util.TextPosition,org.apache.pdfbox.util.TextNormalize)#java/lang/Character/getDirectionality(char)
org/apache/pdfbox/util/TextPosition/insertDiacritic(int,org.apache.pdfbox.util.TextPosition,org.apache.pdfbox.util.TextNormalize)#java/lang/String/charAt(int)
org/apache/pdfbox/util/TextPosition/insertDiacritic(int,org.apache.pdfbox.util.TextPosition,org.apache.pdfbox.util.TextNormalize)#java/lang/StringBuffer/append(char)
org/apache/pdfbox/util/TextPosition/insertDiacritic(int,org.apache.pdfbox.util.TextPosition,org.apache.pdfbox.util.TextNormalize)#java/lang/String/length()
org/apache/pdfbox/util/TextPosition/insertDiacritic(int,org.apache.pdfbox.util.TextPosition,org.apache.pdfbox.util.TextNormalize)#java/lang/StringBuffer/toString()
org/apache/pdfbox/util/TextPosition/insertDiacritic(int,org.apache.pdfbox.util.TextPosition,org.apache.pdfbox.util.TextNormalize)#java/lang/String/substring(int,int)
org/apache/pdfbox/util/TextPosition/insertDiacritic(int,org.apache.pdfbox.util.TextPosition,org.apache.pdfbox.util.TextNormalize)#java/lang/StringBuffer/StringBuffer()
org/apache/pdfbox/util/TextPosition/insertDiacritic(int,org.apache.pdfbox.util.TextPosition,org.apache.pdfbox.util.TextNormalize)#java/lang/StringBuffer/append(java.lang.String)
org/apache/pdfbox/util/TextPosition/insertDiacritic(int,org.apache.pdfbox.util.TextPosition,org.apache.pdfbox.util.TextNormalize)#java/lang/System/arraycopy(java.lang.Object,int,java.lang.Object,int,int)
org/apache/pdfbox/PrintPDF/main(java.lang.String[])#java/awt/print/PrinterJob/lookupPrintServices()
org/apache/pdfbox/PrintPDF/main(java.lang.String[])#java/io/File/getName()
org/apache/pdfbox/PrintPDF/main(java.lang.String[])#java/awt/print/PrinterJob/setJobName(java.lang.String)
org/apache/pdfbox/PrintPDF/main(java.lang.String[])#java/awt/print/PrinterJob/getPrinterJob()
org/apache/pdfbox/PrintPDF/main(java.lang.String[])#javax/print/PrintService/getName()
org/apache/pdfbox/PrintPDF/main(java.lang.String[])#java/lang/String/equals(java.lang.Object)
org/apache/pdfbox/PrintPDF/main(java.lang.String[])#java/lang/String/indexOf(java.lang.String)
org/apache/pdfbox/PrintPDF/main(java.lang.String[])#java/awt/print/PrinterJob/setPrintService(javax.print.PrintService)
org/apache/pdfbox/PrintPDF/main(java.lang.String[])#java/io/File/File(java.lang.String)
org/apache/pdfbox/util/DateConverter/toString(java.util.Calendar)#java/lang/StringBuffer/append(long)
org/apache/pdfbox/util/DateConverter/toString(java.util.Calendar)#java/text/SimpleDateFormat/format(java.util.Date)
org/apache/pdfbox/util/DateConverter/toString(java.util.Calendar)#java/util/Calendar/getTime()
org/apache/pdfbox/util/DateConverter/toString(java.util.Calendar)#java/util/TimeZone/getOffset(long)
org/apache/pdfbox/util/DateConverter/toString(java.util.Calendar)#java/lang/StringBuffer/toString()
org/apache/pdfbox/util/DateConverter/toString(java.util.Calendar)#java/text/SimpleDateFormat/SimpleDateFormat(java.lang.String,java.util.Locale)
org/apache/pdfbox/util/DateConverter/toString(java.util.Calendar)#java/util/Calendar/getTimeInMillis()
org/apache/pdfbox/util/DateConverter/toString(java.util.Calendar)#java/util/Calendar/getTimeZone()
org/apache/pdfbox/util/DateConverter/toString(java.util.Calendar)#java/lang/StringBuffer/append(java.lang.String)
org/apache/pdfbox/util/DateConverter/toString(java.util.Calendar)#java/lang/Math/abs(long)
org/apache/pdfbox/util/DateConverter/toString(java.util.Calendar)#java/lang/StringBuffer/StringBuffer()
org/apache/pdfbox/util/DateConverter/toCalendar(java.lang.String)#java/util/GregorianCalendar/GregorianCalendar(java.util.TimeZone)
org/apache/pdfbox/util/DateConverter/toCalendar(java.lang.String)#java/util/Calendar/set(int,int)
org/apache/pdfbox/util/DateConverter/toCalendar(java.lang.String)#java/util/Calendar/setTime(java.util.Date)
org/apache/pdfbox/util/DateConverter/toCalendar(java.lang.String)#java/lang/String/length()
org/apache/pdfbox/util/DateConverter/toCalendar(java.lang.String)#java/util/SimpleTimeZone/SimpleTimeZone(int,java.lang.String)
org/apache/pdfbox/util/DateConverter/toCalendar(java.lang.String)#java/lang/String/substring(int,int)
org/apache/pdfbox/util/DateConverter/toCalendar(java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/apache/pdfbox/util/DateConverter/toCalendar(java.lang.String)#java/lang/Integer/parseInt(java.lang.String)
org/apache/pdfbox/util/DateConverter/toCalendar(java.lang.String)#java/lang/String/startsWith(java.lang.String)
org/apache/pdfbox/util/DateConverter/toCalendar(java.lang.String)#java/util/GregorianCalendar/GregorianCalendar()
org/apache/pdfbox/util/DateConverter/toCalendar(java.lang.String)#java/util/Calendar/set(int,int,int,int,int,int)
org/apache/pdfbox/util/DateConverter/toCalendar(java.lang.String)#java/lang/StringBuilder/toString()
org/apache/pdfbox/util/DateConverter/toCalendar(java.lang.String)#java/io/IOException/IOException(java.lang.String)
org/apache/pdfbox/util/DateConverter/toCalendar(java.lang.String)#java/text/SimpleDateFormat/parse(java.lang.String)
org/apache/pdfbox/util/DateConverter/toCalendar(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/apache/pdfbox/util/DateConverter/toCalendar(java.lang.String)#java/lang/String/charAt(int)
org/apache/pdfbox/util/DateConverter/toCalendar(java.lang.String)#java/lang/String/trim()
org/apache/pdfbox/util/PDFStreamEngine/processSubStream(org.apache.pdfbox.cos.COSStream)#java/util/Iterator/hasNext()
org/apache/pdfbox/util/PDFStreamEngine/processSubStream(org.apache.pdfbox.cos.COSStream)#java/lang/StringBuilder/append(java.lang.String)
org/apache/pdfbox/util/PDFStreamEngine/processSubStream(org.apache.pdfbox.cos.COSStream)#org/apache/commons/logging/Log/isDebugEnabled()
org/apache/pdfbox/util/PDFStreamEngine/processSubStream(org.apache.pdfbox.cos.COSStream)#java/util/Iterator/next()
org/apache/pdfbox/util/PDFStreamEngine/processSubStream(org.apache.pdfbox.cos.COSStream)#java/lang/StringBuilder/StringBuilder()
org/apache/pdfbox/util/PDFStreamEngine/processSubStream(org.apache.pdfbox.cos.COSStream)#java/util/List/add(java.lang.Object)
org/apache/pdfbox/util/PDFStreamEngine/processSubStream(org.apache.pdfbox.cos.COSStream)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/pdfbox/util/PDFStreamEngine/processSubStream(org.apache.pdfbox.cos.COSStream)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/pdfbox/util/PDFStreamEngine/processSubStream(org.apache.pdfbox.cos.COSStream)#java/util/ArrayList/ArrayList()
org/apache/pdfbox/util/PDFStreamEngine/processSubStream(org.apache.pdfbox.cos.COSStream)#java/lang/StringBuilder/toString()
org/apache/pdfbox/Encrypt/encrypt(java.lang.String[])#java/lang/Integer/parseInt(java.lang.String)
org/apache/pdfbox/Encrypt/encrypt(java.lang.String[])#java/lang/NumberFormatException/NumberFormatException(java.lang.String)
org/apache/pdfbox/Encrypt/encrypt(java.lang.String[])#org/apache/pdfbox/pdmodel/encryption/PublicKeyProtectionPolicy/setEncryptionKeyLength(int)
org/apache/pdfbox/Encrypt/encrypt(java.lang.String[])#java/lang/String/equalsIgnoreCase(java.lang.String)
org/apache/pdfbox/Encrypt/encrypt(java.lang.String[])#org/apache/pdfbox/pdmodel/encryption/StandardProtectionPolicy/setEncryptionKeyLength(int)
org/apache/pdfbox/Encrypt/encrypt(java.lang.String[])#java/lang/StringBuilder/append(java.lang.String)
org/apache/pdfbox/Encrypt/encrypt(java.lang.String[])#java/io/PrintStream/println(java.lang.String)
org/apache/pdfbox/Encrypt/encrypt(java.lang.String[])#java/security/cert/CertificateFactory/generateCertificate(java.io.InputStream)
org/apache/pdfbox/Encrypt/encrypt(java.lang.String[])#java/io/FileInputStream/FileInputStream(java.lang.String)
org/apache/pdfbox/Encrypt/encrypt(java.lang.String[])#java/security/cert/CertificateFactory/getInstance(java.lang.String)
org/apache/pdfbox/Encrypt/encrypt(java.lang.String[])#java/lang/String/equals(java.lang.Object)
org/apache/pdfbox/Encrypt/encrypt(java.lang.String[])#java/io/InputStream/close()
org/apache/pdfbox/Encrypt/encrypt(java.lang.String[])#java/lang/StringBuilder/StringBuilder()
org/apache/pdfbox/Encrypt/encrypt(java.lang.String[])#java/lang/StringBuilder/toString()
org/apache/pdfbox/pdmodel/graphics/color/PDIndexed/getLookupData()#java/io/InputStream/read(byte[],int,int)
org/apache/pdfbox/pdmodel/graphics/color/PDIndexed/getLookupData()#java/io/IOException/IOException(java.lang.String)
org/apache/pdfbox/pdmodel/graphics/color/PDIndexed/getLookupData()#java/lang/StringBuilder/append(java.lang.String)
org/apache/pdfbox/pdmodel/graphics/color/PDIndexed/getLookupData()#java/io/ByteArrayOutputStream/ByteArrayOutputStream(int)
org/apache/pdfbox/pdmodel/graphics/color/PDIndexed/getLookupData()#java/lang/StringBuilder/StringBuilder()
org/apache/pdfbox/pdmodel/graphics/color/PDIndexed/getLookupData()#java/io/ByteArrayOutputStream/toByteArray()
org/apache/pdfbox/pdmodel/graphics/color/PDIndexed/getLookupData()#java/lang/StringBuilder/append(java.lang.Object)
org/apache/pdfbox/pdmodel/graphics/color/PDIndexed/getLookupData()#java/lang/StringBuilder/toString()
org/apache/pdfbox/pdmodel/graphics/color/PDIndexed/getLookupData()#java/io/ByteArrayOutputStream/write(byte[],int,int)
org/apache/pdfbox/pdmodel/graphics/color/PDIndexed/createColorModel(int)#java/awt/image/ColorModel/getTransferType()
org/apache/pdfbox/pdmodel/graphics/color/PDIndexed/createColorModel(int)#java/awt/image/ColorModel/getBlue(java.lang.Object)
org/apache/pdfbox/pdmodel/graphics/color/PDIndexed/createColorModel(int)#java/io/IOException/IOException(java.lang.String)
org/apache/pdfbox/pdmodel/graphics/color/PDIndexed/createColorModel(int)#java/awt/image/ColorModel/getAlpha(java.lang.Object)
org/apache/pdfbox/pdmodel/graphics/color/PDIndexed/createColorModel(int)#java/awt/image/ColorModel/getGreen(java.lang.Object)
org/apache/pdfbox/pdmodel/graphics/color/PDIndexed/createColorModel(int)#java/awt/image/IndexColorModel/IndexColorModel(int,int,byte[],int,boolean)
org/apache/pdfbox/pdmodel/graphics/color/PDIndexed/createColorModel(int)#java/awt/image/IndexColorModel/IndexColorModel(int,int,byte[],byte[],byte[],byte[])
org/apache/pdfbox/pdmodel/graphics/color/PDIndexed/createColorModel(int)#java/awt/image/ColorModel/hasAlpha()
org/apache/pdfbox/pdmodel/graphics/color/PDIndexed/createColorModel(int)#java/awt/image/ColorModel/getNumComponents()
org/apache/pdfbox/pdmodel/graphics/color/PDIndexed/createColorModel(int)#java/lang/System/arraycopy(java.lang.Object,int,java.lang.Object,int,int)
org/apache/pdfbox/pdmodel/graphics/color/PDIndexed/createColorModel(int)#java/awt/image/IndexColorModel/IndexColorModel(int,int,byte[],byte[],byte[])
org/apache/pdfbox/pdmodel/graphics/color/PDIndexed/createColorModel(int)#java/awt/image/ColorModel/getRed(java.lang.Object)
org/apache/pdfbox/pdmodel/graphics/xobject/PDInlinedImage/createImage(java.util.Map)#java/io/ByteArrayOutputStream/ByteArrayOutputStream(int)
org/apache/pdfbox/pdmodel/graphics/xobject/PDInlinedImage/createImage(java.util.Map)#java/io/ByteArrayInputStream/ByteArrayInputStream(byte[])
org/apache/pdfbox/pdmodel/graphics/xobject/PDInlinedImage/createImage(java.util.Map)#java/awt/image/DataBufferByte/getData()
org/apache/pdfbox/pdmodel/graphics/xobject/PDInlinedImage/createImage(java.util.Map)#java/awt/image/ColorModel/createCompatibleWritableRaster(int,int)
org/apache/pdfbox/pdmodel/graphics/xobject/PDInlinedImage/createImage(java.util.Map)#java/awt/image/BufferedImage/BufferedImage(java.awt.image.ColorModel,java.awt.image.WritableRaster,boolean,java.util.Hashtable)
org/apache/pdfbox/pdmodel/graphics/xobject/PDInlinedImage/createImage(java.util.Map)#java/lang/System/arraycopy(java.lang.Object,int,java.lang.Object,int,int)
org/apache/pdfbox/pdmodel/graphics/xobject/PDInlinedImage/createImage(java.util.Map)#java/awt/image/WritableRaster/getDataBuffer()
org/apache/pdfbox/pdmodel/graphics/xobject/PDInlinedImage/createImage(java.util.Map)#java/awt/image/DataBufferInt/getData()
org/apache/pdfbox/pdmodel/graphics/xobject/PDInlinedImage/createImage(java.util.Map)#java/util/List/size()
org/apache/pdfbox/pdmodel/graphics/xobject/PDInlinedImage/createImage(java.util.Map)#java/awt/image/IndexColorModel/IndexColorModel(int,int,byte[],byte[],byte[],byte[])
org/apache/pdfbox/pdmodel/graphics/xobject/PDInlinedImage/createImage(java.util.Map)#java/io/ByteArrayOutputStream/reset()
org/apache/pdfbox/pdmodel/graphics/xobject/PDInlinedImage/createImage(java.util.Map)#java/util/List/get(int)
org/apache/pdfbox/pdmodel/graphics/xobject/PDInlinedImage/createImage(java.util.Map)#java/awt/image/BufferedImage/setData(java.awt.image.Raster)
org/apache/pdfbox/pdmodel/graphics/xobject/PDInlinedImage/createImage(java.util.Map)#java/io/ByteArrayOutputStream/toByteArray()
org/apache/pdfbox/PDFSplit/split(java.lang.String[])#java/lang/StringBuilder/append(int)
org/apache/pdfbox/PDFSplit/split(java.lang.String[])#java/lang/System/exit(int)
org/apache/pdfbox/PDFSplit/split(java.lang.String[])#java/lang/String/equals(java.lang.Object)
org/apache/pdfbox/PDFSplit/split(java.lang.String[])#java/lang/Integer/parseInt(java.lang.String)
org/apache/pdfbox/PDFSplit/split(java.lang.String[])#java/util/List/get(int)
org/apache/pdfbox/PDFSplit/split(java.lang.String[])#java/lang/StringBuilder/toString()
org/apache/pdfbox/PDFSplit/split(java.lang.String[])#java/lang/StringBuilder/append(java.lang.String)
org/apache/pdfbox/PDFSplit/split(java.lang.String[])#java/io/PrintStream/println(java.lang.String)
org/apache/pdfbox/PDFSplit/split(java.lang.String[])#java/lang/String/length()
org/apache/pdfbox/PDFSplit/split(java.lang.String[])#java/util/List/size()
org/apache/pdfbox/PDFSplit/split(java.lang.String[])#java/io/FileInputStream/FileInputStream(java.lang.String)
org/apache/pdfbox/PDFSplit/split(java.lang.String[])#java/io/InputStream/close()
org/apache/pdfbox/PDFSplit/split(java.lang.String[])#java/lang/String/substring(int,int)
org/apache/pdfbox/PDFSplit/split(java.lang.String[])#java/lang/StringBuilder/StringBuilder()
org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler/createDERForRecipient(byte[],java.security.cert.X509Certificate)#javax/crypto/KeyGenerator/generateKey()
org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler/createDERForRecipient(byte[],java.security.cert.X509Certificate)#javax/crypto/Cipher/init(int,java.security.Key,java.security.AlgorithmParameters)
org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler/createDERForRecipient(byte[],java.security.cert.X509Certificate)#java/security/AlgorithmParameters/getEncoded(java.lang.String)
org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler/createDERForRecipient(byte[],java.security.cert.X509Certificate)#javax/crypto/SecretKey/getEncoded()
org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler/createDERForRecipient(byte[],java.security.cert.X509Certificate)#java/security/AlgorithmParameterGenerator/getInstance(java.lang.String)
org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler/createDERForRecipient(byte[],java.security.cert.X509Certificate)#javax/crypto/Cipher/doFinal(byte[])
org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler/createDERForRecipient(byte[],java.security.cert.X509Certificate)#org/bouncycastle/asn1/cms/EnvelopedData/EnvelopedData(org.bouncycastle.asn1.cms.OriginatorInfo,org.bouncycastle.asn1.ASN1Set,org.bouncycastle.asn1.cms.EncryptedContentInfo,org.bouncycastle.asn1.ASN1Set)
org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler/createDERForRecipient(byte[],java.security.cert.X509Certificate)#java/security/AlgorithmParameterGenerator/generateParameters()
org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler/createDERForRecipient(byte[],java.security.cert.X509Certificate)#org/bouncycastle/asn1/cms/ContentInfo/ContentInfo(org.bouncycastle.asn1.DERObjectIdentifier,org.bouncycastle.asn1.DEREncodable)
org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler/createDERForRecipient(byte[],java.security.cert.X509Certificate)#javax/crypto/KeyGenerator/getInstance(java.lang.String)
org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler/createDERForRecipient(byte[],java.security.cert.X509Certificate)#org/bouncycastle/asn1/DEROctetString/DEROctetString(byte[])
org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler/createDERForRecipient(byte[],java.security.cert.X509Certificate)#org/bouncycastle/asn1/x509/AlgorithmIdentifier/AlgorithmIdentifier(org.bouncycastle.asn1.DERObjectIdentifier,org.bouncycastle.asn1.DEREncodable)
org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler/createDERForRecipient(byte[],java.security.cert.X509Certificate)#javax/crypto/KeyGenerator/init(int)
org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler/createDERForRecipient(byte[],java.security.cert.X509Certificate)#org/bouncycastle/asn1/DERSet/DERSet(org.bouncycastle.asn1.DEREncodable)
org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler/createDERForRecipient(byte[],java.security.cert.X509Certificate)#java/io/ByteArrayInputStream/ByteArrayInputStream(byte[])
org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler/createDERForRecipient(byte[],java.security.cert.X509Certificate)#org/bouncycastle/asn1/cms/ContentInfo/getDERObject()
org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler/createDERForRecipient(byte[],java.security.cert.X509Certificate)#org/bouncycastle/asn1/ASN1InputStream/ASN1InputStream(java.io.InputStream)
org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler/createDERForRecipient(byte[],java.security.cert.X509Certificate)#org/bouncycastle/asn1/cms/RecipientInfo/RecipientInfo(org.bouncycastle.asn1.cms.KeyTransRecipientInfo)
org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler/createDERForRecipient(byte[],java.security.cert.X509Certificate)#javax/crypto/Cipher/getInstance(java.lang.String)
org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler/createDERForRecipient(byte[],java.security.cert.X509Certificate)#org/bouncycastle/asn1/ASN1InputStream/readObject()
org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler/createDERForRecipient(byte[],java.security.cert.X509Certificate)#org/bouncycastle/asn1/DERObjectIdentifier/DERObjectIdentifier(java.lang.String)
org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler/createDERForRecipient(byte[],java.security.cert.X509Certificate)#org/bouncycastle/asn1/cms/EncryptedContentInfo/EncryptedContentInfo(org.bouncycastle.asn1.DERObjectIdentifier,org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1OctetString)
org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler/decryptDocument(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.encryption.DecryptionMaterial)#org/bouncycastle/cms/RecipientInformation/getContent(java.security.Key,java.lang.String)
org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler/decryptDocument(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.encryption.DecryptionMaterial)#org/bouncycastle/cms/RecipientInformationStore/getRecipients()
org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler/decryptDocument(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.encryption.DecryptionMaterial)#org/bouncycastle/cms/RecipientInformation/getRID()
org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler/decryptDocument(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.encryption.DecryptionMaterial)#org/bouncycastle/cms/RecipientId/match(java.security.cert.Certificate)
org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler/decryptDocument(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.encryption.DecryptionMaterial)#java/util/Iterator/hasNext()
org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler/decryptDocument(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.encryption.DecryptionMaterial)#org/bouncycastle/cms/CMSEnvelopedData/CMSEnvelopedData(byte[])
org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler/decryptDocument(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.encryption.DecryptionMaterial)#java/util/Iterator/next()
org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler/decryptDocument(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.encryption.DecryptionMaterial)#org/bouncycastle/cms/CMSEnvelopedData/getRecipientInfos()
org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler/decryptDocument(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.encryption.DecryptionMaterial)#java/security/MessageDigest/digest(byte[])
org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler/decryptDocument(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.encryption.DecryptionMaterial)#java/util/Collection/iterator()
org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler/decryptDocument(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.encryption.DecryptionMaterial)#java/lang/System/arraycopy(java.lang.Object,int,java.lang.Object,int,int)
org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler/decryptDocument(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.encryption.DecryptionMaterial)#java/security/MessageDigest/getInstance(java.lang.String)
org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler/decryptDocument(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.encryption.DecryptionMaterial)#org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler/proceedDecryption()
org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler/computeRecipientInfo(java.security.cert.X509Certificate,byte[])#org/bouncycastle/asn1/x509/TBSCertificateStructure/getSerialNumber()
org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler/computeRecipientInfo(java.security.cert.X509Certificate,byte[])#java/security/cert/X509Certificate/getPublicKey()
org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler/computeRecipientInfo(java.security.cert.X509Certificate,byte[])#org/bouncycastle/asn1/x509/TBSCertificateStructure/getInstance(java.lang.Object)
org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler/computeRecipientInfo(java.security.cert.X509Certificate,byte[])#java/io/ByteArrayInputStream/ByteArrayInputStream(byte[])
org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler/computeRecipientInfo(java.security.cert.X509Certificate,byte[])#javax/crypto/Cipher/doFinal(byte[])
org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler/computeRecipientInfo(java.security.cert.X509Certificate,byte[])#org/bouncycastle/asn1/DERInteger/getValue()
org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler/computeRecipientInfo(java.security.cert.X509Certificate,byte[])#org/bouncycastle/asn1/ASN1InputStream/ASN1InputStream(java.io.InputStream)
org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler/computeRecipientInfo(java.security.cert.X509Certificate,byte[])#org/bouncycastle/asn1/x509/AlgorithmIdentifier/getObjectId()
org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler/computeRecipientInfo(java.security.cert.X509Certificate,byte[])#org/bouncycastle/asn1/cms/KeyTransRecipientInfo/KeyTransRecipientInfo(org.bouncycastle.asn1.cms.RecipientIdentifier,org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1OctetString)
org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler/computeRecipientInfo(java.security.cert.X509Certificate,byte[])#org/bouncycastle/asn1/x509/TBSCertificateStructure/getIssuer()
org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler/computeRecipientInfo(java.security.cert.X509Certificate,byte[])#org/bouncycastle/asn1/DEROctetString/DEROctetString(byte[])
org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler/computeRecipientInfo(java.security.cert.X509Certificate,byte[])#org/bouncycastle/asn1/cms/RecipientIdentifier/RecipientIdentifier(org.bouncycastle.asn1.cms.IssuerAndSerialNumber)
org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler/computeRecipientInfo(java.security.cert.X509Certificate,byte[])#org/bouncycastle/asn1/x509/SubjectPublicKeyInfo/getAlgorithmId()
org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler/computeRecipientInfo(java.security.cert.X509Certificate,byte[])#org/bouncycastle/asn1/cms/IssuerAndSerialNumber/IssuerAndSerialNumber(org.bouncycastle.asn1.x509.X509Name,java.math.BigInteger)
org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler/computeRecipientInfo(java.security.cert.X509Certificate,byte[])#org/bouncycastle/asn1/DERObjectIdentifier/getId()
org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler/computeRecipientInfo(java.security.cert.X509Certificate,byte[])#javax/crypto/Cipher/init(int,java.security.Key)
org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler/computeRecipientInfo(java.security.cert.X509Certificate,byte[])#javax/crypto/Cipher/getInstance(java.lang.String)
org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler/computeRecipientInfo(java.security.cert.X509Certificate,byte[])#org/bouncycastle/asn1/ASN1InputStream/readObject()
org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler/computeRecipientInfo(java.security.cert.X509Certificate,byte[])#java/security/cert/X509Certificate/getTBSCertificate()
org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler/computeRecipientInfo(java.security.cert.X509Certificate,byte[])#org/bouncycastle/asn1/x509/TBSCertificateStructure/getSubjectPublicKeyInfo()
org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler/prepareDocumentForEncryption(org.apache.pdfbox.pdmodel.PDDocument)#javax/crypto/SecretKey/getEncoded()
org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler/prepareDocumentForEncryption(org.apache.pdfbox.pdmodel.PDDocument)#org/bouncycastle/asn1/DEROutputStream/DEROutputStream(java.io.OutputStream)
org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler/prepareDocumentForEncryption(org.apache.pdfbox.pdmodel.PDDocument)#java/lang/Exception/printStackTrace()
org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler/prepareDocumentForEncryption(org.apache.pdfbox.pdmodel.PDDocument)#java/io/ByteArrayOutputStream/toByteArray()
org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler/prepareDocumentForEncryption(org.apache.pdfbox.pdmodel.PDDocument)#java/security/MessageDigest/digest(byte[])
org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler/prepareDocumentForEncryption(org.apache.pdfbox.pdmodel.PDDocument)#javax/crypto/KeyGenerator/generateKey()
org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler/prepareDocumentForEncryption(org.apache.pdfbox.pdmodel.PDDocument)#org/bouncycastle/asn1/DEROutputStream/writeObject(java.lang.Object)
org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler/prepareDocumentForEncryption(org.apache.pdfbox.pdmodel.PDDocument)#java/util/Iterator/hasNext()
org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler/prepareDocumentForEncryption(org.apache.pdfbox.pdmodel.PDDocument)#org/bouncycastle/jce/provider/BouncyCastleProvider/BouncyCastleProvider()
org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler/prepareDocumentForEncryption(org.apache.pdfbox.pdmodel.PDDocument)#java/security/Security/addProvider(java.security.Provider)
org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler/prepareDocumentForEncryption(org.apache.pdfbox.pdmodel.PDDocument)#java/util/Iterator/next()
org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler/prepareDocumentForEncryption(org.apache.pdfbox.pdmodel.PDDocument)#java/security/SecureRandom/SecureRandom()
org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler/prepareDocumentForEncryption(org.apache.pdfbox.pdmodel.PDDocument)#javax/crypto/KeyGenerator/init(int,java.security.SecureRandom)
org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler/prepareDocumentForEncryption(org.apache.pdfbox.pdmodel.PDDocument)#java/lang/System/arraycopy(java.lang.Object,int,java.lang.Object,int,int)
org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler/prepareDocumentForEncryption(org.apache.pdfbox.pdmodel.PDDocument)#javax/crypto/KeyGenerator/getInstance(java.lang.String)
org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler/prepareDocumentForEncryption(org.apache.pdfbox.pdmodel.PDDocument)#java/security/MessageDigest/getInstance(java.lang.String)
org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler/prepareDocumentForEncryption(org.apache.pdfbox.pdmodel.PDDocument)#java/io/ByteArrayOutputStream/ByteArrayOutputStream()
org/apache/pdfbox/encryption/PDFEncryption/computeUserPassword(byte[],byte[],int,byte[],int,int)#java/security/MessageDigest/digest()
org/apache/pdfbox/encryption/PDFEncryption/computeUserPassword(byte[],byte[],int,byte[],int,int)#java/io/ByteArrayOutputStream/write(byte[])
org/apache/pdfbox/encryption/PDFEncryption/computeUserPassword(byte[],byte[],int,byte[],int,int)#java/security/MessageDigest/update(byte[])
org/apache/pdfbox/encryption/PDFEncryption/computeUserPassword(byte[],byte[],int,byte[],int,int)#java/io/ByteArrayInputStream/ByteArrayInputStream(byte[])
org/apache/pdfbox/encryption/PDFEncryption/computeUserPassword(byte[],byte[],int,byte[],int,int)#java/io/ByteArrayOutputStream/reset()
org/apache/pdfbox/encryption/PDFEncryption/computeUserPassword(byte[],byte[],int,byte[],int,int)#java/io/ByteArrayOutputStream/toByteArray()
org/apache/pdfbox/encryption/PDFEncryption/computeUserPassword(byte[],byte[],int,byte[],int,int)#java/lang/System/arraycopy(java.lang.Object,int,java.lang.Object,int,int)
org/apache/pdfbox/encryption/PDFEncryption/computeUserPassword(byte[],byte[],int,byte[],int,int)#java/security/MessageDigest/getInstance(java.lang.String)
org/apache/pdfbox/encryption/PDFEncryption/computeUserPassword(byte[],byte[],int,byte[],int,int)#java/io/ByteArrayOutputStream/ByteArrayOutputStream()
org/apache/pdfbox/encryption/PDFEncryption/getUserPassword(byte[],byte[],int,long)#java/security/MessageDigest/digest()
org/apache/pdfbox/encryption/PDFEncryption/getUserPassword(byte[],byte[],int,long)#java/security/MessageDigest/reset()
org/apache/pdfbox/encryption/PDFEncryption/getUserPassword(byte[],byte[],int,long)#java/io/ByteArrayOutputStream/toByteArray()
org/apache/pdfbox/encryption/PDFEncryption/getUserPassword(byte[],byte[],int,long)#java/lang/System/arraycopy(java.lang.Object,int,java.lang.Object,int,int)
org/apache/pdfbox/encryption/PDFEncryption/getUserPassword(byte[],byte[],int,long)#java/lang/StringBuilder/append(java.lang.String)
org/apache/pdfbox/encryption/PDFEncryption/getUserPassword(byte[],byte[],int,long)#java/lang/StringBuilder/append(long)
org/apache/pdfbox/encryption/PDFEncryption/getUserPassword(byte[],byte[],int,long)#java/io/ByteArrayOutputStream/reset()
org/apache/pdfbox/encryption/PDFEncryption/getUserPassword(byte[],byte[],int,long)#java/lang/StringBuilder/StringBuilder()
org/apache/pdfbox/encryption/PDFEncryption/getUserPassword(byte[],byte[],int,long)#java/security/MessageDigest/getInstance(java.lang.String)
org/apache/pdfbox/encryption/PDFEncryption/getUserPassword(byte[],byte[],int,long)#java/io/ByteArrayOutputStream/ByteArrayOutputStream()
org/apache/pdfbox/encryption/PDFEncryption/getUserPassword(byte[],byte[],int,long)#java/lang/StringBuilder/toString()
org/apache/pdfbox/encryption/PDFEncryption/getUserPassword(byte[],byte[],int,long)#java/security/MessageDigest/update(byte[])
org/apache/pdfbox/encryption/PDFEncryption/computeEncryptedKey(byte[],byte[],int,byte[],int,int)#java/security/MessageDigest/update(byte)
org/apache/pdfbox/encryption/PDFEncryption/computeEncryptedKey(byte[],byte[],int,byte[],int,int)#java/security/MessageDigest/digest()
org/apache/pdfbox/encryption/PDFEncryption/computeEncryptedKey(byte[],byte[],int,byte[],int,int)#java/security/MessageDigest/reset()
org/apache/pdfbox/encryption/PDFEncryption/computeEncryptedKey(byte[],byte[],int,byte[],int,int)#java/lang/StringBuilder/append(int)
org/apache/pdfbox/encryption/PDFEncryption/computeEncryptedKey(byte[],byte[],int,byte[],int,int)#java/security/MessageDigest/update(byte[],int,int)
org/apache/pdfbox/encryption/PDFEncryption/computeEncryptedKey(byte[],byte[],int,byte[],int,int)#java/lang/System/arraycopy(java.lang.Object,int,java.lang.Object,int,int)
org/apache/pdfbox/encryption/PDFEncryption/computeEncryptedKey(byte[],byte[],int,byte[],int,int)#java/security/MessageDigest/getInstance(java.lang.String)
org/apache/pdfbox/encryption/PDFEncryption/computeEncryptedKey(byte[],byte[],int,byte[],int,int)#java/lang/StringBuilder/append(java.lang.String)
org/apache/pdfbox/encryption/PDFEncryption/computeEncryptedKey(byte[],byte[],int,byte[],int,int)#java/lang/StringBuilder/StringBuilder()
org/apache/pdfbox/encryption/PDFEncryption/computeEncryptedKey(byte[],byte[],int,byte[],int,int)#java/lang/StringBuilder/toString()
org/apache/pdfbox/encryption/PDFEncryption/computeEncryptedKey(byte[],byte[],int,byte[],int,int)#java/security/MessageDigest/update(byte[])
org/apache/pdfbox/encryption/PDFEncryption/computeOwnerPassword(byte[],byte[],int,int)#java/security/MessageDigest/digest()
org/apache/pdfbox/encryption/PDFEncryption/computeOwnerPassword(byte[],byte[],int,int)#java/security/MessageDigest/reset()
org/apache/pdfbox/encryption/PDFEncryption/computeOwnerPassword(byte[],byte[],int,int)#java/lang/StringBuilder/append(int)
org/apache/pdfbox/encryption/PDFEncryption/computeOwnerPassword(byte[],byte[],int,int)#java/io/ByteArrayInputStream/ByteArrayInputStream(byte[])
org/apache/pdfbox/encryption/PDFEncryption/computeOwnerPassword(byte[],byte[],int,int)#java/lang/StringBuilder/append(java.lang.String)
org/apache/pdfbox/encryption/PDFEncryption/computeOwnerPassword(byte[],byte[],int,int)#java/security/NoSuchAlgorithmException/getMessage()
org/apache/pdfbox/encryption/PDFEncryption/computeOwnerPassword(byte[],byte[],int,int)#java/io/ByteArrayOutputStream/reset()
org/apache/pdfbox/encryption/PDFEncryption/computeOwnerPassword(byte[],byte[],int,int)#java/lang/StringBuilder/StringBuilder()
org/apache/pdfbox/encryption/PDFEncryption/computeOwnerPassword(byte[],byte[],int,int)#java/security/MessageDigest/update(byte[],int,int)
org/apache/pdfbox/encryption/PDFEncryption/computeOwnerPassword(byte[],byte[],int,int)#java/io/ByteArrayOutputStream/toByteArray()
org/apache/pdfbox/encryption/PDFEncryption/computeOwnerPassword(byte[],byte[],int,int)#java/lang/System/arraycopy(java.lang.Object,int,java.lang.Object,int,int)
org/apache/pdfbox/encryption/PDFEncryption/computeOwnerPassword(byte[],byte[],int,int)#java/security/MessageDigest/getInstance(java.lang.String)
org/apache/pdfbox/encryption/PDFEncryption/computeOwnerPassword(byte[],byte[],int,int)#java/io/ByteArrayOutputStream/ByteArrayOutputStream()
org/apache/pdfbox/encryption/PDFEncryption/computeOwnerPassword(byte[],byte[],int,int)#java/lang/StringBuilder/toString()
org/apache/pdfbox/encryption/PDFEncryption/computeOwnerPassword(byte[],byte[],int,int)#java/security/MessageDigest/update(byte[])
org/apache/pdfbox/pdmodel/PDDocument/addSignature(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureInterface,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions)#org/apache/pdfbox/pdmodel/interactive/form/PDSignatureField/getWidget()
org/apache/pdfbox/pdmodel/PDDocument/addSignature(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureInterface,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions)#java/lang/Object/equals(java.lang.Object)
org/apache/pdfbox/pdmodel/PDDocument/addSignature(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureInterface,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions)#java/util/Iterator/next()
org/apache/pdfbox/pdmodel/PDDocument/addSignature(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureInterface,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions)#java/util/List/get(int)
org/apache/pdfbox/pdmodel/PDDocument/addSignature(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureInterface,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions)#java/util/List/iterator()
org/apache/pdfbox/pdmodel/PDDocument/addSignature(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureInterface,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions)#java/util/ArrayList/ArrayList()
org/apache/pdfbox/pdmodel/PDDocument/addSignature(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureInterface,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions)#org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationWidget/setPage(org.apache.pdfbox.pdmodel.PDPage)
org/apache/pdfbox/pdmodel/PDDocument/addSignature(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureInterface,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions)#java/util/Iterator/hasNext()
org/apache/pdfbox/pdmodel/PDDocument/addSignature(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureInterface,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions)#org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationWidget/setRectangle(org.apache.pdfbox.pdmodel.common.PDRectangle)
org/apache/pdfbox/pdmodel/PDDocument/addSignature(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureInterface,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions)#org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationWidget/setAppearance(org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary)
org/apache/pdfbox/pdmodel/PDDocument/addSignature(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureInterface,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions)#org/apache/pdfbox/cos/COSDictionary/setDirect(boolean)
org/apache/pdfbox/pdmodel/PDDocument/addSignature(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureInterface,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions)#java/util/List/add(java.lang.Object)
org/apache/pdfbox/pdmodel/interactive/form/PDFieldFactory/isButton(org.apache.pdfbox.pdmodel.interactive.form.PDField)#java/io/IOException/IOException(java.lang.String)
org/apache/pdfbox/pdmodel/interactive/form/PDFieldFactory/isButton(org.apache.pdfbox.pdmodel.interactive.form.PDField)#java/util/List/size()
org/apache/pdfbox/pdmodel/interactive/form/PDFieldFactory/isButton(org.apache.pdfbox.pdmodel.interactive.form.PDField)#java/lang/String/equals(java.lang.Object)
org/apache/pdfbox/pdmodel/interactive/form/PDFieldFactory/isButton(org.apache.pdfbox.pdmodel.interactive.form.PDField)#java/lang/StringBuilder/StringBuilder()
org/apache/pdfbox/pdmodel/interactive/form/PDFieldFactory/isButton(org.apache.pdfbox.pdmodel.interactive.form.PDField)#java/util/List/get(int)
org/apache/pdfbox/pdmodel/interactive/form/PDFieldFactory/isButton(org.apache.pdfbox.pdmodel.interactive.form.PDField)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/pdfbox/pdmodel/interactive/form/PDFieldFactory/isButton(org.apache.pdfbox.pdmodel.interactive.form.PDField)#java/lang/StringBuilder/toString()
org/apache/pdfbox/pdmodel/interactive/form/PDFieldFactory/isButton(org.apache.pdfbox.pdmodel.interactive.form.PDField)#java/lang/StringBuilder/append(java.lang.String)
org/apache/pdfbox/pdmodel/interactive/form/PDFieldFactory/isButton(org.apache.pdfbox.pdmodel.interactive.form.PDField)#org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationWidget/getDictionary()
org/apache/pdfbox/util/LayerUtility/importPageAsForm(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDPage)#org/apache/fontbox/util/BoundingBox/BoundingBox()
org/apache/pdfbox/util/LayerUtility/importPageAsForm(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDPage)#java/awt/geom/AffineTransform/translate(double,double)
org/apache/pdfbox/util/LayerUtility/importPageAsForm(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDPage)#org/apache/fontbox/util/BoundingBox/setLowerLeftY(float)
org/apache/pdfbox/util/LayerUtility/importPageAsForm(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDPage)#org/apache/fontbox/util/BoundingBox/setUpperRightY(float)
org/apache/pdfbox/util/LayerUtility/importPageAsForm(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDPage)#org/apache/fontbox/util/BoundingBox/setLowerLeftX(float)
org/apache/pdfbox/util/LayerUtility/importPageAsForm(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDPage)#org/apache/fontbox/util/BoundingBox/setUpperRightX(float)
org/apache/pdfbox/util/LayerUtility/importPageAsForm(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDPage)#java/awt/geom/AffineTransform/scale(double,double)
org/apache/pdfbox/util/LayerUtility/importPageAsForm(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDPage)#org/apache/pdfbox/pdmodel/graphics/xobject/PDXObjectForm/getCOSStream()
org/apache/pdfbox/util/LayerUtility/importPageAsForm(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDPage)#java/awt/geom/AffineTransform/isIdentity()
org/apache/pdfbox/util/LayerUtility/importPageAsForm(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDPage)#java/awt/geom/AffineTransform/AffineTransform()
org/apache/pdfbox/util/LayerUtility/importPageAsForm(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDPage)#java/awt/geom/AffineTransform/rotate(double)
org/apache/pdfbox/util/LayerUtility/wrapInSaveRestore(org.apache.pdfbox.pdmodel.PDPage)#java/lang/StringBuilder/append(java.lang.String)
org/apache/pdfbox/util/LayerUtility/wrapInSaveRestore(org.apache.pdfbox.pdmodel.PDPage)#java/io/OutputStream/flush()
org/apache/pdfbox/util/LayerUtility/wrapInSaveRestore(org.apache.pdfbox.pdmodel.PDPage)#java/lang/Class/getName()
org/apache/pdfbox/util/LayerUtility/wrapInSaveRestore(org.apache.pdfbox.pdmodel.PDPage)#java/lang/StringBuilder/StringBuilder()
org/apache/pdfbox/util/LayerUtility/wrapInSaveRestore(org.apache.pdfbox.pdmodel.PDPage)#java/lang/Object/getClass()
org/apache/pdfbox/util/LayerUtility/wrapInSaveRestore(org.apache.pdfbox.pdmodel.PDPage)#java/io/IOException/IOException(java.lang.String)
org/apache/pdfbox/util/LayerUtility/wrapInSaveRestore(org.apache.pdfbox.pdmodel.PDPage)#java/lang/String/getBytes(java.lang.String)
org/apache/pdfbox/util/LayerUtility/wrapInSaveRestore(org.apache.pdfbox.pdmodel.PDPage)#java/io/OutputStream/write(byte[])
org/apache/pdfbox/util/LayerUtility/wrapInSaveRestore(org.apache.pdfbox.pdmodel.PDPage)#java/lang/StringBuilder/toString()
org/apache/pdfbox/filter/LZWFilter/encode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)#java/io/ByteArrayOutputStream/write(int)
org/apache/pdfbox/filter/LZWFilter/encode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)#java/io/ByteArrayOutputStream/ByteArrayOutputStream()
org/apache/pdfbox/filter/LZWFilter/encode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)#java/io/PushbackInputStream/unread(byte[])
org/apache/pdfbox/filter/LZWFilter/encode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)#java/io/PushbackInputStream/unread(int)
org/apache/pdfbox/filter/LZWFilter/encode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)#java/io/OutputStream/flush()
org/apache/pdfbox/filter/LZWFilter/encode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)#java/io/PushbackInputStream/read()
org/apache/pdfbox/filter/LZWFilter/encode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)#java/io/ByteArrayOutputStream/reset()
org/apache/pdfbox/filter/LZWFilter/encode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)#java/io/PushbackInputStream/PushbackInputStream(java.io.InputStream,int)
org/apache/pdfbox/filter/LZWFilter/encode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)#java/io/ByteArrayOutputStream/toByteArray()
org/apache/pdfbox/pdmodel/common/PDNameTreeNode/setNames(java.util.Map)#java/util/ArrayList/ArrayList(java.util.Collection)
org/apache/pdfbox/pdmodel/common/PDNameTreeNode/setNames(java.util.Map)#java/util/Iterator/hasNext()
org/apache/pdfbox/pdmodel/common/PDNameTreeNode/setNames(java.util.Map)#java/util/Collections/sort(java.util.List)
org/apache/pdfbox/pdmodel/common/PDNameTreeNode/setNames(java.util.Map)#java/util/List/get(int)
org/apache/pdfbox/pdmodel/common/PDNameTreeNode/setNames(java.util.Map)#java/util/List/iterator()
org/apache/pdfbox/pdmodel/common/PDNameTreeNode/setNames(java.util.Map)#java/util/Map/get(java.lang.Object)
org/apache/pdfbox/pdmodel/common/PDNameTreeNode/setNames(java.util.Map)#java/util/List/size()
org/apache/pdfbox/pdmodel/common/PDNameTreeNode/setNames(java.util.Map)#java/util/Iterator/next()
org/apache/pdfbox/pdmodel/common/PDNameTreeNode/setNames(java.util.Map)#java/util/Map/keySet()
org/apache/pdfbox/examples/util/PrintImageLocations/main(java.lang.String[])#java/lang/System/exit(int)
org/apache/pdfbox/examples/util/PrintImageLocations/main(java.lang.String[])#java/lang/StringBuilder/toString()
org/apache/pdfbox/examples/util/PrintImageLocations/main(java.lang.String[])#org/apache/pdfbox/examples/util/PrintImageLocations/processStream(org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.pdmodel.PDResources,org.apache.pdfbox.cos.COSStream)
org/apache/pdfbox/examples/util/PrintImageLocations/main(java.lang.String[])#java/lang/StringBuilder/append(java.lang.String)
org/apache/pdfbox/examples/util/PrintImageLocations/main(java.lang.String[])#java/io/PrintStream/println(java.lang.String)
org/apache/pdfbox/examples/util/PrintImageLocations/main(java.lang.String[])#java/lang/StringBuilder/append(int)
org/apache/pdfbox/examples/util/PrintImageLocations/main(java.lang.String[])#java/util/List/size()
org/apache/pdfbox/examples/util/PrintImageLocations/main(java.lang.String[])#java/lang/StringBuilder/StringBuilder()
org/apache/pdfbox/examples/util/PrintImageLocations/main(java.lang.String[])#java/util/List/get(int)
org/apache/pdfbox/examples/util/PrintImageLocations/processOperator(org.apache.pdfbox.util.PDFOperator,java.util.List)#java/util/Map/get(java.lang.Object)
org/apache/pdfbox/examples/util/PrintImageLocations/processOperator(org.apache.pdfbox.util.PDFOperator,java.util.List)#java/lang/StringBuilder/StringBuilder()
org/apache/pdfbox/examples/util/PrintImageLocations/processOperator(org.apache.pdfbox.util.PDFOperator,java.util.List)#java/lang/StringBuilder/append(float)
org/apache/pdfbox/examples/util/PrintImageLocations/processOperator(org.apache.pdfbox.util.PDFOperator,java.util.List)#java/lang/StringBuilder/append(java.lang.String)
org/apache/pdfbox/examples/util/PrintImageLocations/processOperator(org.apache.pdfbox.util.PDFOperator,java.util.List)#java/io/PrintStream/println(java.lang.String)
org/apache/pdfbox/examples/util/PrintImageLocations/processOperator(org.apache.pdfbox.util.PDFOperator,java.util.List)#java/awt/geom/AffineTransform/setToRotation(double)
org/apache/pdfbox/examples/util/PrintImageLocations/processOperator(org.apache.pdfbox.util.PDFOperator,java.util.List)#org/apache/pdfbox/examples/util/PrintImageLocations/getResources()
org/apache/pdfbox/examples/util/PrintImageLocations/processOperator(org.apache.pdfbox.util.PDFOperator,java.util.List)#org/apache/pdfbox/examples/util/PrintImageLocations/getGraphicsState()
org/apache/pdfbox/examples/util/PrintImageLocations/processOperator(org.apache.pdfbox.util.PDFOperator,java.util.List)#java/lang/String/equals(java.lang.Object)
org/apache/pdfbox/examples/util/PrintImageLocations/processOperator(org.apache.pdfbox.util.PDFOperator,java.util.List)#org/apache/pdfbox/examples/util/PrintImageLocations/getCurrentPage()
org/apache/pdfbox/examples/util/PrintImageLocations/processOperator(org.apache.pdfbox.util.PDFOperator,java.util.List)#java/util/List/get(int)
org/apache/pdfbox/examples/util/PrintImageLocations/processOperator(org.apache.pdfbox.util.PDFOperator,java.util.List)#java/awt/geom/AffineTransform/createInverse()
org/apache/pdfbox/examples/util/PrintImageLocations/processOperator(org.apache.pdfbox.util.PDFOperator,java.util.List)#java/awt/geom/AffineTransform/AffineTransform()
org/apache/pdfbox/examples/util/PrintImageLocations/processOperator(org.apache.pdfbox.util.PDFOperator,java.util.List)#java/lang/StringBuilder/toString()
org/apache/pdfbox/examples/util/PrintTextLocations/main(java.lang.String[])#java/lang/System/exit(int)
org/apache/pdfbox/examples/util/PrintTextLocations/main(java.lang.String[])#java/lang/StringBuilder/toString()
org/apache/pdfbox/examples/util/PrintTextLocations/main(java.lang.String[])#org/apache/pdfbox/examples/util/PrintTextLocations/processStream(org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.pdmodel.PDResources,org.apache.pdfbox.cos.COSStream)
org/apache/pdfbox/examples/util/PrintTextLocations/main(java.lang.String[])#java/lang/StringBuilder/append(java.lang.String)
org/apache/pdfbox/examples/util/PrintTextLocations/main(java.lang.String[])#java/io/PrintStream/println(java.lang.String)
org/apache/pdfbox/examples/util/PrintTextLocations/main(java.lang.String[])#java/lang/StringBuilder/append(int)
org/apache/pdfbox/examples/util/PrintTextLocations/main(java.lang.String[])#java/util/List/size()
org/apache/pdfbox/examples/util/PrintTextLocations/main(java.lang.String[])#java/lang/StringBuilder/StringBuilder()
org/apache/pdfbox/examples/util/PrintTextLocations/main(java.lang.String[])#java/util/List/get(int)
org/apache/pdfbox/pdmodel/edit/PDPageContentStream/setStrokingColor(java.awt.Color)#java/awt/Color/getBlue()
org/apache/pdfbox/pdmodel/edit/PDPageContentStream/setStrokingColor(java.awt.Color)#java/awt/Color/getRed()
org/apache/pdfbox/pdmodel/edit/PDPageContentStream/setStrokingColor(java.awt.Color)#java/lang/StringBuilder/append(java.lang.String)
org/apache/pdfbox/pdmodel/edit/PDPageContentStream/setStrokingColor(java.awt.Color)#java/awt/Color/getColorSpace()
org/apache/pdfbox/pdmodel/edit/PDPageContentStream/setStrokingColor(java.awt.Color)#java/awt/color/ColorSpace/getType()
org/apache/pdfbox/pdmodel/edit/PDPageContentStream/setStrokingColor(java.awt.Color)#java/awt/Color/getGreen()
org/apache/pdfbox/pdmodel/edit/PDPageContentStream/setStrokingColor(java.awt.Color)#java/lang/StringBuilder/StringBuilder()
org/apache/pdfbox/pdmodel/edit/PDPageContentStream/setStrokingColor(java.awt.Color)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/pdfbox/pdmodel/edit/PDPageContentStream/setStrokingColor(java.awt.Color)#java/io/IOException/IOException(java.lang.String)
org/apache/pdfbox/pdmodel/edit/PDPageContentStream/setStrokingColor(java.awt.Color)#java/lang/StringBuilder/toString()
org/apache/pdfbox/pdmodel/edit/PDPageContentStream/setStrokingColor(java.awt.Color)#java/awt/Color/getColorComponents(float[])
org/apache/pdfbox/pdmodel/edit/PDPageContentStream/setNonStrokingColor(java.awt.Color)#java/awt/Color/getBlue()
org/apache/pdfbox/pdmodel/edit/PDPageContentStream/setNonStrokingColor(java.awt.Color)#java/io/IOException/IOException(java.lang.String)
org/apache/pdfbox/pdmodel/edit/PDPageContentStream/setNonStrokingColor(java.awt.Color)#java/awt/Color/getColorSpace()
org/apache/pdfbox/pdmodel/edit/PDPageContentStream/setNonStrokingColor(java.awt.Color)#java/awt/color/ColorSpace/getType()
org/apache/pdfbox/pdmodel/edit/PDPageContentStream/setNonStrokingColor(java.awt.Color)#java/awt/Color/getGreen()
org/apache/pdfbox/pdmodel/edit/PDPageContentStream/setNonStrokingColor(java.awt.Color)#java/lang/StringBuilder/StringBuilder()
org/apache/pdfbox/pdmodel/edit/PDPageContentStream/setNonStrokingColor(java.awt.Color)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/pdfbox/pdmodel/edit/PDPageContentStream/setNonStrokingColor(java.awt.Color)#java/awt/Color/getRed()
org/apache/pdfbox/pdmodel/edit/PDPageContentStream/setNonStrokingColor(java.awt.Color)#java/lang/StringBuilder/append(java.lang.String)
org/apache/pdfbox/pdmodel/edit/PDPageContentStream/setNonStrokingColor(java.awt.Color)#java/lang/StringBuilder/toString()
org/apache/pdfbox/pdmodel/edit/PDPageContentStream/setNonStrokingColor(java.awt.Color)#java/awt/Color/getColorComponents(float[])
org/apache/pdfbox/pdmodel/edit/PDPageContentStream/reverseMap(java.util.Map,java.lang.Class)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/pdfbox/pdmodel/edit/PDPageContentStream/reverseMap(java.util.Map,java.lang.Class)#java/util/Iterator/hasNext()
org/apache/pdfbox/pdmodel/edit/PDPageContentStream/reverseMap(java.util.Map,java.lang.Class)#java/util/Map$Entry/getKey()
org/apache/pdfbox/pdmodel/edit/PDPageContentStream/reverseMap(java.util.Map,java.lang.Class)#java/lang/Class/cast(java.lang.Object)
org/apache/pdfbox/pdmodel/edit/PDPageContentStream/reverseMap(java.util.Map,java.lang.Class)#java/util/Set/iterator()
org/apache/pdfbox/pdmodel/edit/PDPageContentStream/reverseMap(java.util.Map,java.lang.Class)#java/util/Map$Entry/getValue()
org/apache/pdfbox/pdmodel/edit/PDPageContentStream/reverseMap(java.util.Map,java.lang.Class)#java/util/Map/entrySet()
org/apache/pdfbox/pdmodel/edit/PDPageContentStream/reverseMap(java.util.Map,java.lang.Class)#java/util/Iterator/next()
org/apache/pdfbox/pdmodel/edit/PDPageContentStream/reverseMap(java.util.Map,java.lang.Class)#java/util/HashMap/HashMap()
org/apache/pdfbox/util/operator/pagedrawer/Invoke/process(org.apache.pdfbox.util.PDFOperator,java.util.List)#java/lang/Math/acos(double)
org/apache/pdfbox/util/operator/pagedrawer/Invoke/process(org.apache.pdfbox.util.PDFOperator,java.util.List)#java/lang/StringBuilder/append(int)
org/apache/pdfbox/util/operator/pagedrawer/Invoke/process(org.apache.pdfbox.util.PDFOperator,java.util.List)#java/lang/Math/sin(double)
org/apache/pdfbox/util/operator/pagedrawer/Invoke/process(org.apache.pdfbox.util.PDFOperator,java.util.List)#org/apache/pdfbox/pdfviewer/PageDrawer/getResources()
org/apache/pdfbox/util/operator/pagedrawer/Invoke/process(org.apache.pdfbox.util.PDFOperator,java.util.List)#java/awt/image/BufferedImage/getWidth()
org/apache/pdfbox/util/operator/pagedrawer/Invoke/process(org.apache.pdfbox.util.PDFOperator,java.util.List)#org/apache/commons/logging/Log/error(java.lang.Object,java.lang.Throwable)
org/apache/pdfbox/util/operator/pagedrawer/Invoke/process(org.apache.pdfbox.util.PDFOperator,java.util.List)#java/lang/Math/cos(double)
org/apache/pdfbox/util/operator/pagedrawer/Invoke/process(org.apache.pdfbox.util.PDFOperator,java.util.List)#java/lang/StringBuilder/toString()
org/apache/pdfbox/util/operator/pagedrawer/Invoke/process(org.apache.pdfbox.util.PDFOperator,java.util.List)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/pdfbox/util/operator/pagedrawer/Invoke/process(org.apache.pdfbox.util.PDFOperator,java.util.List)#java/util/Stack/pop()
org/apache/pdfbox/util/operator/pagedrawer/Invoke/process(org.apache.pdfbox.util.PDFOperator,java.util.List)#org/apache/commons/logging/Log/warn(java.lang.Object)
org/apache/pdfbox/util/operator/pagedrawer/Invoke/process(org.apache.pdfbox.util.PDFOperator,java.util.List)#java/lang/StringBuilder/append(java.lang.String)
org/apache/pdfbox/util/operator/pagedrawer/Invoke/process(org.apache.pdfbox.util.PDFOperator,java.util.List)#java/util/Stack/push(java.lang.Object)
org/apache/pdfbox/util/operator/pagedrawer/Invoke/process(org.apache.pdfbox.util.PDFOperator,java.util.List)#java/awt/geom/AffineTransform/scale(double,double)
org/apache/pdfbox/util/operator/pagedrawer/Invoke/process(org.apache.pdfbox.util.PDFOperator,java.util.List)#java/util/Map/get(java.lang.Object)
org/apache/pdfbox/util/operator/pagedrawer/Invoke/process(org.apache.pdfbox.util.PDFOperator,java.util.List)#java/awt/Dimension/getHeight()
org/apache/pdfbox/util/operator/pagedrawer/Invoke/process(org.apache.pdfbox.util.PDFOperator,java.util.List)#org/apache/pdfbox/pdfviewer/PageDrawer/getGraphicsState()
org/apache/pdfbox/util/operator/pagedrawer/Invoke/process(org.apache.pdfbox.util.PDFOperator,java.util.List)#java/awt/image/BufferedImage/getHeight()
org/apache/pdfbox/util/operator/pagedrawer/Invoke/process(org.apache.pdfbox.util.PDFOperator,java.util.List)#java/lang/Exception/printStackTrace()
org/apache/pdfbox/util/operator/pagedrawer/Invoke/process(org.apache.pdfbox.util.PDFOperator,java.util.List)#java/lang/StringBuilder/StringBuilder()
org/apache/pdfbox/util/operator/pagedrawer/Invoke/process(org.apache.pdfbox.util.PDFOperator,java.util.List)#org/apache/pdfbox/pdmodel/graphics/xobject/PDXObjectForm/getCOSObject()
org/apache/pdfbox/util/operator/pagedrawer/Invoke/process(org.apache.pdfbox.util.PDFOperator,java.util.List)#java/util/List/get(int)
org/apache/pdfbox/util/operator/pagedrawer/Invoke/process(org.apache.pdfbox.util.PDFOperator,java.util.List)#org/apache/pdfbox/util/operator/pagedrawer/Invoke/getContext()
org/apache/pdfbox/pdmodel/common/COSDictionaryMap/convertBasicTypesToMap(org.apache.pdfbox.cos.COSDictionary)#java/lang/Float/Float(float)
org/apache/pdfbox/pdmodel/common/COSDictionaryMap/convertBasicTypesToMap(org.apache.pdfbox.cos.COSDictionary)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/pdfbox/pdmodel/common/COSDictionaryMap/convertBasicTypesToMap(org.apache.pdfbox.cos.COSDictionary)#java/io/IOException/IOException(java.lang.String)
org/apache/pdfbox/pdmodel/common/COSDictionaryMap/convertBasicTypesToMap(org.apache.pdfbox.cos.COSDictionary)#java/util/Iterator/hasNext()
org/apache/pdfbox/pdmodel/common/COSDictionaryMap/convertBasicTypesToMap(org.apache.pdfbox.cos.COSDictionary)#java/lang/StringBuilder/append(java.lang.String)
org/apache/pdfbox/pdmodel/common/COSDictionaryMap/convertBasicTypesToMap(org.apache.pdfbox.cos.COSDictionary)#java/lang/Integer/Integer(int)
org/apache/pdfbox/pdmodel/common/COSDictionaryMap/convertBasicTypesToMap(org.apache.pdfbox.cos.COSDictionary)#java/lang/StringBuilder/StringBuilder()
org/apache/pdfbox/pdmodel/common/COSDictionaryMap/convertBasicTypesToMap(org.apache.pdfbox.cos.COSDictionary)#java/util/Set/iterator()
org/apache/pdfbox/pdmodel/common/COSDictionaryMap/convertBasicTypesToMap(org.apache.pdfbox.cos.COSDictionary)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/pdfbox/pdmodel/common/COSDictionaryMap/convertBasicTypesToMap(org.apache.pdfbox.cos.COSDictionary)#java/lang/StringBuilder/toString()
org/apache/pdfbox/pdmodel/common/COSDictionaryMap/convertBasicTypesToMap(org.apache.pdfbox.cos.COSDictionary)#java/util/Iterator/next()
org/apache/pdfbox/pdmodel/common/COSDictionaryMap/convertBasicTypesToMap(org.apache.pdfbox.cos.COSDictionary)#java/util/HashMap/HashMap()
org/apache/pdfbox/pdfviewer/PageDrawer/processTextPosition(org.apache.pdfbox.util.TextPosition)#java/awt/Color/getBlue()
org/apache/pdfbox/pdfviewer/PageDrawer/processTextPosition(org.apache.pdfbox.util.TextPosition)#java/awt/Color/getRed()
org/apache/pdfbox/pdfviewer/PageDrawer/processTextPosition(org.apache.pdfbox.util.TextPosition)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/pdfbox/pdfviewer/PageDrawer/processTextPosition(org.apache.pdfbox.util.TextPosition)#java/io/IOException/printStackTrace()
org/apache/pdfbox/pdfviewer/PageDrawer/processTextPosition(org.apache.pdfbox.util.TextPosition)#java/awt/geom/AffineTransform/scale(double,double)
org/apache/pdfbox/pdfviewer/PageDrawer/processTextPosition(org.apache.pdfbox.util.TextPosition)#java/awt/Color/Color(java.awt.color.ColorSpace,float[],float)
org/apache/pdfbox/pdfviewer/PageDrawer/processTextPosition(org.apache.pdfbox.util.TextPosition)#java/awt/Color/getGreen()
org/apache/pdfbox/pdfviewer/PageDrawer/processTextPosition(org.apache.pdfbox.util.TextPosition)#java/lang/StringBuilder/StringBuilder()
org/apache/pdfbox/pdfviewer/PageDrawer/processTextPosition(org.apache.pdfbox.util.TextPosition)#java/lang/StringBuilder/toString()
org/apache/pdfbox/pdfviewer/PageDrawer/processTextPosition(org.apache.pdfbox.util.TextPosition)#java/awt/Graphics2D/setComposite(java.awt.Composite)
org/apache/pdfbox/pdfviewer/PageDrawer/processTextPosition(org.apache.pdfbox.util.TextPosition)#java/lang/StringBuilder/append(java.lang.String)
org/apache/pdfbox/pdfviewer/PageDrawer/processTextPosition(org.apache.pdfbox.util.TextPosition)#java/awt/Graphics2D/setColor(java.awt.Color)
org/apache/pdfbox/pdfviewer/PageDrawer/processTextPosition(org.apache.pdfbox.util.TextPosition)#java/awt/Color/getColorSpace()
org/apache/pdfbox/pdfviewer/PageDrawer/processTextPosition(org.apache.pdfbox.util.TextPosition)#java/lang/StringBuilder/append(int)
org/apache/pdfbox/pdfviewer/PageDrawer/processTextPosition(org.apache.pdfbox.util.TextPosition)#org/apache/pdfbox/pdfviewer/PageDrawer/getGraphicsState()
org/apache/pdfbox/pdfviewer/PageDrawer/processTextPosition(org.apache.pdfbox.util.TextPosition)#java/awt/Graphics2D/setClip(java.awt.Shape)
org/apache/pdfbox/util/PDFImageWriter/writeImage(org.apache.pdfbox.pdmodel.PDDocument,java.lang.String,java.lang.String,int,int,java.lang.String,int,int)#javax/imageio/ImageWriteParam/setCompressionQuality(float)
org/apache/pdfbox/util/PDFImageWriter/writeImage(org.apache.pdfbox.pdmodel.PDDocument,java.lang.String,java.lang.String,int,int,java.lang.String,int,int)#javax/imageio/ImageWriter/write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)
org/apache/pdfbox/util/PDFImageWriter/writeImage(org.apache.pdfbox.pdmodel.PDDocument,java.lang.String,java.lang.String,int,int,java.lang.String,int,int)#javax/imageio/stream/ImageOutputStream/flush()
org/apache/pdfbox/util/PDFImageWriter/writeImage(org.apache.pdfbox.pdmodel.PDDocument,java.lang.String,java.lang.String,int,int,java.lang.String,int,int)#javax/imageio/ImageWriter/setOutput(java.lang.Object)
org/apache/pdfbox/util/PDFImageWriter/writeImage(org.apache.pdfbox.pdmodel.PDDocument,java.lang.String,java.lang.String,int,int,java.lang.String,int,int)#java/io/IOException/IOException(java.lang.String)
org/apache/pdfbox/util/PDFImageWriter/writeImage(org.apache.pdfbox.pdmodel.PDDocument,java.lang.String,java.lang.String,int,int,java.lang.String,int,int)#java/util/Iterator/hasNext()
org/apache/pdfbox/util/PDFImageWriter/writeImage(org.apache.pdfbox.pdmodel.PDDocument,java.lang.String,java.lang.String,int,int,java.lang.String,int,int)#javax/imageio/ImageWriteParam/setCompressionMode(int)
org/apache/pdfbox/util/PDFImageWriter/writeImage(org.apache.pdfbox.pdmodel.PDDocument,java.lang.String,java.lang.String,int,int,java.lang.String,int,int)#java/util/Iterator/next()
org/apache/pdfbox/util/PDFImageWriter/writeImage(org.apache.pdfbox.pdmodel.PDDocument,java.lang.String,java.lang.String,int,int,java.lang.String,int,int)#java/io/File/File(java.lang.String)
org/apache/pdfbox/util/PDFImageWriter/writeImage(org.apache.pdfbox.pdmodel.PDDocument,java.lang.String,java.lang.String,int,int,java.lang.String,int,int)#javax/imageio/ImageWriter/dispose()
org/apache/pdfbox/util/PDFImageWriter/writeImage(org.apache.pdfbox.pdmodel.PDDocument,java.lang.String,java.lang.String,int,int,java.lang.String,int,int)#javax/imageio/IIOException/getMessage()
org/apache/pdfbox/util/PDFImageWriter/writeImage(org.apache.pdfbox.pdmodel.PDDocument,java.lang.String,java.lang.String,int,int,java.lang.String,int,int)#java/util/List/get(int)
org/apache/pdfbox/util/PDFImageWriter/writeImage(org.apache.pdfbox.pdmodel.PDDocument,java.lang.String,java.lang.String,int,int,java.lang.String,int,int)#javax/imageio/ImageWriter/getDefaultWriteParam()
org/apache/pdfbox/util/PDFImageWriter/writeImage(org.apache.pdfbox.pdmodel.PDDocument,java.lang.String,java.lang.String,int,int,java.lang.String,int,int)#java/lang/StringBuilder/toString()
org/apache/pdfbox/util/PDFImageWriter/writeImage(org.apache.pdfbox.pdmodel.PDDocument,java.lang.String,java.lang.String,int,int,java.lang.String,int,int)#java/lang/StringBuilder/append(java.lang.String)
org/apache/pdfbox/util/PDFImageWriter/writeImage(org.apache.pdfbox.pdmodel.PDDocument,java.lang.String,java.lang.String,int,int,java.lang.String,int,int)#java/io/PrintStream/println(java.lang.String)
org/apache/pdfbox/util/PDFImageWriter/writeImage(org.apache.pdfbox.pdmodel.PDDocument,java.lang.String,java.lang.String,int,int,java.lang.String,int,int)#java/lang/StringBuilder/append(int)
org/apache/pdfbox/util/PDFImageWriter/writeImage(org.apache.pdfbox.pdmodel.PDDocument,java.lang.String,java.lang.String,int,int,java.lang.String,int,int)#java/util/List/size()
org/apache/pdfbox/util/PDFImageWriter/writeImage(org.apache.pdfbox.pdmodel.PDDocument,java.lang.String,java.lang.String,int,int,java.lang.String,int,int)#javax/imageio/IIOImage/IIOImage(java.awt.image.RenderedImage,java.util.List,javax.imageio.metadata.IIOMetadata)
org/apache/pdfbox/util/PDFImageWriter/writeImage(org.apache.pdfbox.pdmodel.PDDocument,java.lang.String,java.lang.String,int,int,java.lang.String,int,int)#java/lang/StringBuilder/StringBuilder()
org/apache/pdfbox/util/PDFImageWriter/writeImage(org.apache.pdfbox.pdmodel.PDDocument,java.lang.String,java.lang.String,int,int,java.lang.String,int,int)#javax/imageio/ImageIO/createImageOutputStream(java.lang.Object)
org/apache/pdfbox/util/PDFImageWriter/writeImage(org.apache.pdfbox.pdmodel.PDDocument,java.lang.String,java.lang.String,int,int,java.lang.String,int,int)#javax/imageio/ImageIO/getImageWritersByFormatName(java.lang.String)
org/apache/pdfbox/util/PDFImageWriter/writeImage(org.apache.pdfbox.pdmodel.PDDocument,java.lang.String,java.lang.String,int,int,java.lang.String,int,int)#javax/imageio/ImageWriteParam/canWriteCompressed()
org/apache/pdfbox/util/PDFImageWriter/writeImage(org.apache.pdfbox.pdmodel.PDDocument,java.lang.String,java.lang.String,int,int,java.lang.String,int,int)#javax/imageio/stream/ImageOutputStream/close()
org/apache/pdfbox/util/PDFImageWriter/addResolution(javax.imageio.metadata.IIOMetadata,int)#java/lang/Double/toString(double)
org/apache/pdfbox/util/PDFImageWriter/addResolution(javax.imageio.metadata.IIOMetadata,int)#java/lang/StringBuilder/append(java.lang.String)
org/apache/pdfbox/util/PDFImageWriter/addResolution(javax.imageio.metadata.IIOMetadata,int)#javax/imageio/metadata/IIOMetadataNode/appendChild(org.w3c.dom.Node)
org/apache/pdfbox/util/PDFImageWriter/addResolution(javax.imageio.metadata.IIOMetadata,int)#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/apache/pdfbox/util/PDFImageWriter/addResolution(javax.imageio.metadata.IIOMetadata,int)#javax/imageio/metadata/IIOMetadata/mergeTree(java.lang.String,org.w3c.dom.Node)
org/apache/pdfbox/util/PDFImageWriter/addResolution(javax.imageio.metadata.IIOMetadata,int)#javax/imageio/metadata/IIOMetadataNode/setAttribute(java.lang.String,java.lang.String)
org/apache/pdfbox/util/PDFImageWriter/addResolution(javax.imageio.metadata.IIOMetadata,int)#java/lang/StringBuilder/toString()
org/apache/pdfbox/util/PDFImageWriter/addResolution(javax.imageio.metadata.IIOMetadata,int)#javax/imageio/metadata/IIOInvalidTreeException/getMessage()
org/apache/pdfbox/util/PDFImageWriter/addResolution(javax.imageio.metadata.IIOMetadata,int)#javax/imageio/metadata/IIOMetadata/isStandardMetadataFormatSupported()
org/apache/pdfbox/util/PDFImageWriter/addResolution(javax.imageio.metadata.IIOMetadata,int)#javax/imageio/metadata/IIOMetadata/getAsTree(java.lang.String)
org/apache/pdfbox/util/PDFImageWriter/addResolution(javax.imageio.metadata.IIOMetadata,int)#java/lang/StringBuilder/StringBuilder()
org/apache/pdfbox/util/PDFImageWriter/addResolution(javax.imageio.metadata.IIOMetadata,int)#javax/imageio/metadata/IIOMetadataNode/IIOMetadataNode(java.lang.String)
org/apache/pdfbox/encryption/DocumentEncryption/initForEncryption()#java/lang/String/getBytes(java.lang.String)
org/apache/pdfbox/encryption/DocumentEncryption/initForEncryption()#java/security/MessageDigest/update(byte[])
org/apache/pdfbox/encryption/DocumentEncryption/initForEncryption()#java/lang/Object/toString()
org/apache/pdfbox/encryption/DocumentEncryption/initForEncryption()#org/apache/pdfbox/pdmodel/encryption/PDStandardEncryption/getCOSDictionary()
org/apache/pdfbox/encryption/DocumentEncryption/initForEncryption()#org/apache/pdfbox/pdmodel/encryption/PDStandardEncryption/getLength()
org/apache/pdfbox/encryption/DocumentEncryption/initForEncryption()#java/math/BigInteger/valueOf(long)
org/apache/pdfbox/encryption/DocumentEncryption/initForEncryption()#java/math/BigInteger/toByteArray()
org/apache/pdfbox/encryption/DocumentEncryption/initForEncryption()#java/security/MessageDigest/digest(byte[])
org/apache/pdfbox/encryption/DocumentEncryption/initForEncryption()#java/lang/System/currentTimeMillis()
org/apache/pdfbox/encryption/DocumentEncryption/initForEncryption()#java/lang/String/getBytes()
org/apache/pdfbox/encryption/DocumentEncryption/initForEncryption()#java/security/MessageDigest/getInstance(java.lang.String)
org/apache/pdfbox/pdmodel/font/PDType1Font/getEncodingFromFont(boolean)#java/lang/Float/parseFloat(java.lang.String)
org/apache/pdfbox/pdmodel/font/PDType1Font/getEncodingFromFont(boolean)#org/apache/pdfbox/pdmodel/font/PDType1Font/getFontDescriptor()
org/apache/pdfbox/pdmodel/font/PDType1Font/getEncodingFromFont(boolean)#org/apache/pdfbox/pdmodel/font/PDType1Font/getFontEncoding()
org/apache/pdfbox/pdmodel/font/PDType1Font/getEncodingFromFont(boolean)#java/lang/String/substring(int,int)
org/apache/pdfbox/pdmodel/font/PDType1Font/getEncodingFromFont(boolean)#java/lang/String/startsWith(java.lang.String)
org/apache/pdfbox/pdmodel/font/PDType1Font/getEncodingFromFont(boolean)#java/lang/String/contains(java.lang.CharSequence)
org/apache/pdfbox/pdmodel/font/PDType1Font/getEncodingFromFont(boolean)#java/lang/String/lastIndexOf(java.lang.String)
org/apache/pdfbox/pdmodel/font/PDType1Font/getEncodingFromFont(boolean)#java/io/BufferedReader/close()
org/apache/pdfbox/pdmodel/font/PDType1Font/getEncodingFromFont(boolean)#java/lang/String/replaceAll(java.lang.String,java.lang.String)
org/apache/pdfbox/pdmodel/font/PDType1Font/getEncodingFromFont(boolean)#org/apache/commons/logging/Log/warn(java.lang.Object)
org/apache/pdfbox/pdmodel/font/PDType1Font/getEncodingFromFont(boolean)#java/lang/String/indexOf(java.lang.String)
org/apache/pdfbox/pdmodel/font/PDType1Font/getEncodingFromFont(boolean)#java/io/InputStreamReader/InputStreamReader(java.io.InputStream)
org/apache/pdfbox/pdmodel/font/PDType1Font/getEncodingFromFont(boolean)#org/apache/pdfbox/encoding/Type1Encoding/addCharacterEncoding(int,java.lang.String)
org/apache/pdfbox/pdmodel/font/PDType1Font/getEncodingFromFont(boolean)#java/lang/Integer/parseInt(java.lang.String)
org/apache/pdfbox/pdmodel/font/PDType1Font/getEncodingFromFont(boolean)#java/lang/String/replace(java.lang.CharSequence,java.lang.CharSequence)
org/apache/pdfbox/pdmodel/font/PDType1Font/getEncodingFromFont(boolean)#java/io/BufferedReader/BufferedReader(java.io.Reader)
org/apache/pdfbox/pdmodel/font/PDType1Font/getEncodingFromFont(boolean)#java/io/BufferedReader/readLine()
org/apache/pdfbox/pdmodel/font/PDType1Font/getEncodingFromFont(boolean)#org/apache/commons/logging/Log/error(java.lang.Object)
org/apache/pdfbox/pdmodel/font/PDType1Font/getEncodingFromFont(boolean)#java/util/StringTokenizer/nextToken()
org/apache/pdfbox/pdmodel/font/PDType1Font/getEncodingFromFont(boolean)#java/util/StringTokenizer/StringTokenizer(java.lang.String)
org/apache/pdfbox/pdmodel/font/PDType1Font/getEncodingFromFont(boolean)#java/util/StringTokenizer/countTokens()
org/apache/pdfbox/pdmodel/font/PDType1Font/getEncodingFromFont(boolean)#java/util/StringTokenizer/nextElement()
org/apache/pdfbox/pdmodel/font/PDType1Font/getEncodingFromFont(boolean)#org/apache/pdfbox/pdmodel/font/PDType1Font/setFontEncoding(org.apache.pdfbox.encoding.Encoding)
org/apache/pdfbox/util/operator/pagedrawer/BeginInlineImage/process(org.apache.pdfbox.util.PDFOperator,java.util.List)#java/awt/geom/AffineTransform/getScaleX()
org/apache/pdfbox/util/operator/pagedrawer/BeginInlineImage/process(org.apache.pdfbox.util.PDFOperator,java.util.List)#java/awt/geom/AffineTransform/scale(double,double)
org/apache/pdfbox/util/operator/pagedrawer/BeginInlineImage/process(org.apache.pdfbox.util.PDFOperator,java.util.List)#java/awt/geom/AffineTransform/AffineTransform(float,float,float,float,float,float)
org/apache/pdfbox/util/operator/pagedrawer/BeginInlineImage/process(org.apache.pdfbox.util.PDFOperator,java.util.List)#java/lang/Math/cos(double)
org/apache/pdfbox/util/operator/pagedrawer/BeginInlineImage/process(org.apache.pdfbox.util.PDFOperator,java.util.List)#org/apache/commons/logging/Log/warn(java.lang.Object)
org/apache/pdfbox/util/operator/pagedrawer/BeginInlineImage/process(org.apache.pdfbox.util.PDFOperator,java.util.List)#java/lang/Math/sin(double)
org/apache/pdfbox/util/operator/pagedrawer/BeginInlineImage/process(org.apache.pdfbox.util.PDFOperator,java.util.List)#java/awt/Dimension/getHeight()
org/apache/pdfbox/util/operator/pagedrawer/BeginInlineImage/process(org.apache.pdfbox.util.PDFOperator,java.util.List)#org/apache/pdfbox/pdfviewer/PageDrawer/getGraphicsState()
org/apache/pdfbox/util/operator/pagedrawer/BeginInlineImage/process(org.apache.pdfbox.util.PDFOperator,java.util.List)#java/awt/image/BufferedImage/getWidth()
org/apache/pdfbox/util/operator/pagedrawer/BeginInlineImage/process(org.apache.pdfbox.util.PDFOperator,java.util.List)#java/awt/image/BufferedImage/getHeight()
org/apache/pdfbox/util/operator/pagedrawer/BeginInlineImage/process(org.apache.pdfbox.util.PDFOperator,java.util.List)#java/awt/geom/AffineTransform/getShearX()
org/apache/pdfbox/util/operator/pagedrawer/BeginInlineImage/process(org.apache.pdfbox.util.PDFOperator,java.util.List)#java/lang/Math/atan(double)
org/apache/pdfbox/TextToPDF/createPDFFromText(java.io.Reader)#java/lang/StringBuffer/toString()
org/apache/pdfbox/TextToPDF/createPDFFromText(java.io.Reader)#java/lang/StringBuilder/StringBuilder()
org/apache/pdfbox/TextToPDF/createPDFFromText(java.io.Reader)#java/lang/StringBuffer/append(java.lang.String)
org/apache/pdfbox/TextToPDF/createPDFFromText(java.io.Reader)#org/apache/pdfbox/pdmodel/font/PDSimpleFont/getFontDescriptor()
org/apache/pdfbox/TextToPDF/createPDFFromText(java.io.Reader)#java/lang/StringBuilder/toString()
org/apache/pdfbox/TextToPDF/createPDFFromText(java.io.Reader)#java/lang/String/split(java.lang.String)
org/apache/pdfbox/TextToPDF/createPDFFromText(java.io.Reader)#java/io/IOException/IOException(java.lang.String)
org/apache/pdfbox/TextToPDF/createPDFFromText(java.io.Reader)#java/lang/StringBuilder/append(java.lang.String)
org/apache/pdfbox/TextToPDF/createPDFFromText(java.io.Reader)#java/lang/String/trim()
org/apache/pdfbox/TextToPDF/createPDFFromText(java.io.Reader)#org/apache/pdfbox/pdmodel/font/PDSimpleFont/getStringWidth(java.lang.String)
org/apache/pdfbox/TextToPDF/createPDFFromText(java.io.Reader)#java/io/BufferedReader/BufferedReader(java.io.Reader)
org/apache/pdfbox/TextToPDF/createPDFFromText(java.io.Reader)#java/io/BufferedReader/readLine()
org/apache/pdfbox/TextToPDF/createPDFFromText(java.io.Reader)#java/lang/StringBuffer/StringBuffer()
org/apache/pdfbox/TextToPDF/main(java.lang.String[])#java/lang/Integer/parseInt(java.lang.String)
org/apache/pdfbox/TextToPDF/main(java.lang.String[])#java/lang/StringBuilder/toString()
org/apache/pdfbox/TextToPDF/main(java.lang.String[])#java/io/IOException/IOException(java.lang.String)
org/apache/pdfbox/TextToPDF/main(java.lang.String[])#java/lang/StringBuilder/append(java.lang.String)
org/apache/pdfbox/TextToPDF/main(java.lang.String[])#java/io/FileReader/FileReader(java.lang.String)
org/apache/pdfbox/TextToPDF/main(java.lang.String[])#java/io/File/File(java.lang.String)
org/apache/pdfbox/TextToPDF/main(java.lang.String[])#java/lang/String/equals(java.lang.Object)
org/apache/pdfbox/TextToPDF/main(java.lang.String[])#java/lang/Exception/printStackTrace()
org/apache/pdfbox/TextToPDF/main(java.lang.String[])#java/lang/StringBuilder/StringBuilder()
org/apache/pdfbox/util/PDFText2HTML/getTitle()#java/util/Iterator/hasNext()
org/apache/pdfbox/util/PDFText2HTML/getTitle()#java/util/Iterator/next()
org/apache/pdfbox/util/PDFText2HTML/getTitle()#java/lang/StringBuffer/toString()
org/apache/pdfbox/util/PDFText2HTML/getTitle()#java/lang/StringBuffer/StringBuffer()
org/apache/pdfbox/util/PDFText2HTML/getTitle()#java/lang/String/length()
org/apache/pdfbox/util/PDFText2HTML/getTitle()#java/lang/StringBuffer/length()
org/apache/pdfbox/util/PDFText2HTML/getTitle()#java/util/Vector/iterator()
org/apache/pdfbox/util/PDFText2HTML/getTitle()#java/util/List/iterator()
org/apache/pdfbox/util/PDFText2HTML/getTitle()#java/lang/StringBuffer/append(java.lang.String)
org/apache/pdfbox/util/PDFText2HTML/getTitle()#org/apache/pdfbox/util/PDFText2HTML/getCharactersByArticle()
org/apache/pdfbox/examples/util/ExtractTextByArea/main(java.lang.String[])#java/lang/System/exit(int)
org/apache/pdfbox/examples/util/ExtractTextByArea/main(java.lang.String[])#java/lang/StringBuilder/StringBuilder()
org/apache/pdfbox/examples/util/ExtractTextByArea/main(java.lang.String[])#java/lang/StringBuilder/append(java.lang.Object)
org/apache/pdfbox/examples/util/ExtractTextByArea/main(java.lang.String[])#java/lang/StringBuilder/toString()
org/apache/pdfbox/examples/util/ExtractTextByArea/main(java.lang.String[])#java/lang/StringBuilder/append(java.lang.String)
org/apache/pdfbox/examples/util/ExtractTextByArea/main(java.lang.String[])#java/io/PrintStream/println(java.lang.String)
org/apache/pdfbox/examples/util/ExtractTextByArea/main(java.lang.String[])#java/awt/Rectangle/Rectangle(int,int,int,int)
org/apache/pdfbox/examples/util/ExtractTextByArea/main(java.lang.String[])#org/apache/pdfbox/util/PDFTextStripperByArea/setSortByPosition(boolean)
org/apache/pdfbox/examples/util/ExtractTextByArea/main(java.lang.String[])#java/util/List/get(int)
org/apache/pdfbox/filter/FlateFilter/decodePredictor(int,int,int,int,java.io.InputStream)#java/io/InputStream/read(byte[],int,int)
org/apache/pdfbox/filter/FlateFilter/decodePredictor(int,int,int,int,java.io.InputStream)#java/lang/Math/floor(double)
org/apache/pdfbox/filter/FlateFilter/decodePredictor(int,int,int,int,java.io.InputStream)#java/io/InputStream/available()
org/apache/pdfbox/filter/FlateFilter/decodePredictor(int,int,int,int,java.io.InputStream)#java/io/IOException/IOException(java.lang.String)
org/apache/pdfbox/filter/FlateFilter/decodePredictor(int,int,int,int,java.io.InputStream)#java/io/InputStream/read(byte[])
org/apache/pdfbox/filter/FlateFilter/decodePredictor(int,int,int,int,java.io.InputStream)#java/lang/StringBuilder/append(java.lang.String)
org/apache/pdfbox/filter/FlateFilter/decodePredictor(int,int,int,int,java.io.InputStream)#java/lang/StringBuilder/append(int)
org/apache/pdfbox/filter/FlateFilter/decodePredictor(int,int,int,int,java.io.InputStream)#[B/clone()
org/apache/pdfbox/filter/FlateFilter/decodePredictor(int,int,int,int,java.io.InputStream)#java/io/InputStream/read()
org/apache/pdfbox/filter/FlateFilter/decodePredictor(int,int,int,int,java.io.InputStream)#java/io/ByteArrayOutputStream/write(byte[],int,int)
org/apache/pdfbox/filter/FlateFilter/decodePredictor(int,int,int,int,java.io.InputStream)#java/lang/StringBuilder/StringBuilder()
org/apache/pdfbox/filter/FlateFilter/decodePredictor(int,int,int,int,java.io.InputStream)#java/io/ByteArrayOutputStream/toByteArray()
org/apache/pdfbox/filter/FlateFilter/decodePredictor(int,int,int,int,java.io.InputStream)#java/io/ByteArrayOutputStream/ByteArrayOutputStream()
org/apache/pdfbox/filter/FlateFilter/decodePredictor(int,int,int,int,java.io.InputStream)#java/lang/Math/abs(int)
org/apache/pdfbox/filter/FlateFilter/decodePredictor(int,int,int,int,java.io.InputStream)#java/lang/StringBuilder/toString()
org/apache/pdfbox/filter/FlateFilter/decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)#java/util/zip/InflaterInputStream/InflaterInputStream(java.io.InputStream)
org/apache/pdfbox/filter/FlateFilter/decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)#java/io/InputStream/available()
org/apache/pdfbox/filter/FlateFilter/decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)#java/io/IOException/IOException(java.lang.String)
org/apache/pdfbox/filter/FlateFilter/decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)#java/io/ByteArrayOutputStream/flush()
org/apache/pdfbox/filter/FlateFilter/decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)#java/lang/StringBuilder/append(java.lang.String)
org/apache/pdfbox/filter/FlateFilter/decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)#java/lang/StringBuilder/StringBuilder()
org/apache/pdfbox/filter/FlateFilter/decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)#java/util/zip/InflaterInputStream/close()
org/apache/pdfbox/filter/FlateFilter/decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)#java/io/ByteArrayInputStream/close()
org/apache/pdfbox/filter/FlateFilter/decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)#java/io/ByteArrayOutputStream/toByteArray()
org/apache/pdfbox/filter/FlateFilter/decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)#java/lang/Object/getClass()
org/apache/pdfbox/filter/FlateFilter/decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)#java/io/ByteArrayOutputStream/ByteArrayOutputStream()
org/apache/pdfbox/filter/FlateFilter/decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)#java/util/zip/InflaterInputStream/read(byte[],int,int)
org/apache/pdfbox/filter/FlateFilter/decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)#java/lang/StringBuilder/toString()
org/apache/pdfbox/filter/FlateFilter/decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)#java/io/ByteArrayInputStream/ByteArrayInputStream(byte[])
org/apache/pdfbox/filter/FlateFilter/decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)#java/io/OutputStream/flush()
org/apache/pdfbox/filter/FlateFilter/decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)#java/io/ByteArrayOutputStream/write(byte[],int,int)
org/apache/pdfbox/filter/FlateFilter/decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)#java/lang/Class/getName()
org/apache/pdfbox/filter/FlateFilter/decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)#java/io/OutputStream/write(byte[],int,int)
org/apache/pdfbox/filter/FlateFilter/decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)#org/apache/commons/logging/Log/error(java.lang.Object)
org/apache/pdfbox/filter/FlateFilter/decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)#java/io/ByteArrayOutputStream/close()
org/apache/pdfbox/filter/FlateFilter/decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)#java/lang/Math/min(int,int)
org/apache/pdfbox/filter/FlateFilter/decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)#java/io/OutputStream/write(byte[])
org/apache/pdfbox/pdmodel/graphics/xobject/PDPixelMap/getRGBImage()#java/awt/image/ColorModel/getTransferType()
org/apache/pdfbox/pdmodel/graphics/xobject/PDPixelMap/getRGBImage()#java/io/IOException/IOException(java.lang.String)
org/apache/pdfbox/pdmodel/graphics/xobject/PDPixelMap/getRGBImage()#java/lang/StringBuilder/append(java.lang.String)
org/apache/pdfbox/pdmodel/graphics/xobject/PDPixelMap/getRGBImage()#java/awt/image/IndexColorModel/IndexColorModel(int,int,byte[],byte[],byte[],int)
org/apache/pdfbox/pdmodel/graphics/xobject/PDPixelMap/getRGBImage()#java/lang/StringBuilder/append(int)
org/apache/pdfbox/pdmodel/graphics/xobject/PDPixelMap/getRGBImage()#java/awt/image/DataBufferByte/getData()
org/apache/pdfbox/pdmodel/graphics/xobject/PDPixelMap/getRGBImage()#java/lang/StringBuilder/StringBuilder()
org/apache/pdfbox/pdmodel/graphics/xobject/PDPixelMap/getRGBImage()#java/awt/image/ColorModel/getBlue(java.lang.Object)
org/apache/pdfbox/pdmodel/graphics/xobject/PDPixelMap/getRGBImage()#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/pdfbox/pdmodel/graphics/xobject/PDPixelMap/getRGBImage()#org/apache/pdfbox/pdmodel/graphics/xobject/PDPixelMap/getPDStream()
org/apache/pdfbox/pdmodel/graphics/xobject/PDPixelMap/getRGBImage()#java/awt/image/ColorModel/getAlpha(java.lang.Object)
org/apache/pdfbox/pdmodel/graphics/xobject/PDPixelMap/getRGBImage()#org/apache/pdfbox/pdmodel/graphics/xobject/PDPixelMap/getSMaskImage()
org/apache/pdfbox/pdmodel/graphics/xobject/PDPixelMap/getRGBImage()#java/awt/image/ColorModel/getGreen(java.lang.Object)
org/apache/pdfbox/pdmodel/graphics/xobject/PDPixelMap/getRGBImage()#java/awt/image/IndexColorModel/IndexColorModel(int,int,byte[],byte[],byte[])
org/apache/pdfbox/pdmodel/graphics/xobject/PDPixelMap/getRGBImage()#org/apache/pdfbox/pdmodel/graphics/xobject/PDPixelMap/getWidth()
org/apache/pdfbox/pdmodel/graphics/xobject/PDPixelMap/getRGBImage()#org/apache/pdfbox/pdmodel/graphics/xobject/PDPixelMap/getColorSpace()
org/apache/pdfbox/pdmodel/graphics/xobject/PDPixelMap/getRGBImage()#java/awt/image/IndexColorModel/IndexColorModel(int,int,byte[],byte[],byte[],byte[])
org/apache/pdfbox/pdmodel/graphics/xobject/PDPixelMap/getRGBImage()#org/apache/pdfbox/pdmodel/graphics/xobject/PDPixelMap/getBitsPerComponent()
org/apache/pdfbox/pdmodel/graphics/xobject/PDPixelMap/getRGBImage()#java/awt/image/ColorModel/hasAlpha()
org/apache/pdfbox/pdmodel/graphics/xobject/PDPixelMap/getRGBImage()#java/awt/image/ColorModel/createCompatibleWritableRaster(int,int)
org/apache/pdfbox/pdmodel/graphics/xobject/PDPixelMap/getRGBImage()#org/apache/pdfbox/pdmodel/graphics/xobject/PDPixelMap/getHeight()
org/apache/pdfbox/pdmodel/graphics/xobject/PDPixelMap/getRGBImage()#java/awt/image/ColorModel/getNumComponents()
org/apache/pdfbox/pdmodel/graphics/xobject/PDPixelMap/getRGBImage()#java/awt/image/BufferedImage/BufferedImage(java.awt.image.ColorModel,java.awt.image.WritableRaster,boolean,java.util.Hashtable)
org/apache/pdfbox/pdmodel/graphics/xobject/PDPixelMap/getRGBImage()#org/apache/commons/logging/Log/error(java.lang.Object,java.lang.Throwable)
org/apache/pdfbox/pdmodel/graphics/xobject/PDPixelMap/getRGBImage()#org/apache/commons/logging/Log/error(java.lang.Object)
org/apache/pdfbox/pdmodel/graphics/xobject/PDPixelMap/getRGBImage()#java/awt/image/ColorModel/getRed(java.lang.Object)
org/apache/pdfbox/pdmodel/graphics/xobject/PDPixelMap/getRGBImage()#org/apache/pdfbox/pdmodel/graphics/xobject/PDPixelMap/getMask()
org/apache/pdfbox/pdmodel/graphics/xobject/PDPixelMap/getRGBImage()#java/lang/System/arraycopy(java.lang.Object,int,java.lang.Object,int,int)
org/apache/pdfbox/pdmodel/graphics/xobject/PDPixelMap/getRGBImage()#java/awt/image/WritableRaster/getDataBuffer()
org/apache/pdfbox/pdmodel/graphics/xobject/PDPixelMap/getRGBImage()#java/awt/image/ColorModel/toString()
org/apache/pdfbox/pdmodel/graphics/xobject/PDPixelMap/getRGBImage()#org/apache/pdfbox/pdmodel/graphics/xobject/PDPixelMap/getDecode()
org/apache/pdfbox/pdmodel/graphics/xobject/PDPixelMap/getRGBImage()#java/lang/StringBuilder/toString()
org/apache/pdfbox/PDFToImage/main(java.lang.String[])#java/lang/String/equalsIgnoreCase(java.lang.String)
org/apache/pdfbox/PDFToImage/main(java.lang.String[])#java/lang/System/exit(int)
org/apache/pdfbox/PDFToImage/main(java.lang.String[])#java/lang/String/equals(java.lang.Object)
org/apache/pdfbox/PDFToImage/main(java.lang.String[])#java/lang/String/substring(int,int)
org/apache/pdfbox/PDFToImage/main(java.lang.String[])#java/lang/Float/valueOf(java.lang.String)
org/apache/pdfbox/PDFToImage/main(java.lang.String[])#java/awt/Toolkit/getScreenResolution()
org/apache/pdfbox/PDFToImage/main(java.lang.String[])#java/awt/Toolkit/getDefaultToolkit()
org/apache/pdfbox/PDFToImage/main(java.lang.String[])#java/lang/StringBuilder/toString()
org/apache/pdfbox/PDFToImage/main(java.lang.String[])#java/lang/StringBuilder/append(java.lang.String)
org/apache/pdfbox/PDFToImage/main(java.lang.String[])#java/io/PrintStream/println(java.lang.String)
org/apache/pdfbox/PDFToImage/main(java.lang.String[])#java/lang/StringBuilder/StringBuilder()
org/apache/pdfbox/PDFToImage/main(java.lang.String[])#java/lang/String/lastIndexOf(int)
org/apache/pdfbox/PDFToImage/main(java.lang.String[])#java/lang/Float/floatValue()
org/apache/pdfbox/PDFToImage/main(java.lang.String[])#java/lang/Integer/parseInt(java.lang.String)
org/apache/pdfbox/PDFToImage/main(java.lang.String[])#java/io/PrintStream/println(java.lang.Object)
org/apache/pdfbox/pdfparser/BaseParser/parseCOSString()#java/io/IOException/IOException(java.lang.String)
org/apache/pdfbox/pdfparser/BaseParser/parseCOSString()#java/lang/StringBuilder/append(java.lang.String)
org/apache/pdfbox/pdfparser/BaseParser/parseCOSString()#java/lang/StringBuffer/append(char)
org/apache/pdfbox/pdfparser/BaseParser/parseCOSString()#java/lang/StringBuffer/toString()
org/apache/pdfbox/pdfparser/BaseParser/parseCOSString()#java/lang/Integer/parseInt(java.lang.String,int)
org/apache/pdfbox/pdfparser/BaseParser/parseCOSString()#java/lang/StringBuilder/StringBuilder()
org/apache/pdfbox/pdfparser/BaseParser/parseCOSString()#java/lang/StringBuilder/append(char)
org/apache/pdfbox/pdfparser/BaseParser/parseCOSString()#java/lang/StringBuilder/append(java.lang.Object)
org/apache/pdfbox/pdfparser/BaseParser/parseCOSString()#java/lang/StringBuffer/StringBuffer()
org/apache/pdfbox/pdfparser/BaseParser/parseCOSString()#java/lang/StringBuilder/toString()
org/apache/pdfbox/pdfparser/BaseParser/readExpectedString(java.lang.String)#java/io/IOException/IOException(java.lang.String)
org/apache/pdfbox/pdfparser/BaseParser/readExpectedString(java.lang.String)#java/lang/StringBuffer/StringBuffer(int)
org/apache/pdfbox/pdfparser/BaseParser/readExpectedString(java.lang.String)#java/lang/StringBuffer/append(char)
org/apache/pdfbox/pdfparser/BaseParser/readExpectedString(java.lang.String)#java/lang/String/length()
org/apache/pdfbox/pdfparser/BaseParser/readExpectedString(java.lang.String)#java/lang/StringBuffer/toString()
org/apache/pdfbox/pdfparser/BaseParser/readExpectedString(java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/apache/pdfbox/pdfparser/BaseParser/readExpectedString(java.lang.String)#java/lang/String/getBytes(java.lang.String)
org/apache/pdfbox/pdfparser/BaseParser/readExpectedString(java.lang.String)#java/lang/StringBuilder/toString()
org/apache/pdfbox/pdfparser/BaseParser/readExpectedString(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/apache/pdfbox/pdfparser/BaseParser/readExpectedString(java.lang.String)#java/lang/String/charAt(int)
org/apache/pdfbox/pdfparser/BaseParser/parseCOSName()#java/io/IOException/IOException(java.lang.String)
org/apache/pdfbox/pdfparser/BaseParser/parseCOSName()#java/lang/StringBuilder/append(java.lang.String)
org/apache/pdfbox/pdfparser/BaseParser/parseCOSName()#java/lang/StringBuffer/toString()
org/apache/pdfbox/pdfparser/BaseParser/parseCOSName()#java/lang/Integer/parseInt(java.lang.String,int)
org/apache/pdfbox/pdfparser/BaseParser/parseCOSName()#java/lang/StringBuilder/StringBuilder()
org/apache/pdfbox/pdfparser/BaseParser/parseCOSName()#java/lang/StringBuilder/append(char)
org/apache/pdfbox/pdfparser/BaseParser/parseCOSName()#java/lang/StringBuilder/append(java.lang.Object)
org/apache/pdfbox/pdfparser/BaseParser/parseCOSName()#java/lang/StringBuffer/StringBuffer()
org/apache/pdfbox/pdfparser/BaseParser/parseCOSName()#java/lang/StringBuilder/toString()
org/apache/pdfbox/pdfparser/BaseParser/parseCOSName()#java/lang/StringBuffer/append(char)
org/apache/pdfbox/pdfparser/BaseParser/parseCOSName()#java/lang/StringBuilder/append(int)
org/apache/pdfbox/pdfparser/BaseParser/parseCOSDictionary()#java/io/IOException/IOException(java.lang.String)
org/apache/pdfbox/pdfparser/BaseParser/parseCOSDictionary()#org/apache/commons/logging/Log/warn(java.lang.Object)
org/apache/pdfbox/pdfparser/BaseParser/parseCOSDictionary()#java/lang/StringBuilder/append(java.lang.String)
org/apache/pdfbox/pdfparser/BaseParser/parseCOSDictionary()#java/lang/String/equals(java.lang.Object)
org/apache/pdfbox/pdfparser/BaseParser/parseCOSDictionary()#java/lang/StringBuilder/StringBuilder()
org/apache/pdfbox/pdfparser/BaseParser/parseCOSDictionary()#java/lang/String/getBytes(java.lang.String)
org/apache/pdfbox/pdfparser/BaseParser/parseCOSDictionary()#java/lang/StringBuilder/append(char)
org/apache/pdfbox/pdfparser/BaseParser/parseCOSDictionary()#java/lang/StringBuilder/append(java.lang.Object)
org/apache/pdfbox/pdfparser/BaseParser/parseCOSDictionary()#java/lang/StringBuilder/toString()
org/apache/pdfbox/pdfparser/BaseParser/readInt()#java/io/IOException/IOException(java.lang.String)
org/apache/pdfbox/pdfparser/BaseParser/readInt()#java/lang/StringBuilder/append(java.lang.String)
org/apache/pdfbox/pdfparser/BaseParser/readInt()#java/lang/StringBuffer/append(char)
org/apache/pdfbox/pdfparser/BaseParser/readInt()#java/lang/StringBuffer/toString()
org/apache/pdfbox/pdfparser/BaseParser/readInt()#java/lang/StringBuilder/StringBuilder()
org/apache/pdfbox/pdfparser/BaseParser/readInt()#java/lang/StringBuilder/append(java.lang.Object)
org/apache/pdfbox/pdfparser/BaseParser/readInt()#java/lang/StringBuffer/StringBuffer()
org/apache/pdfbox/pdfparser/BaseParser/readInt()#java/lang/StringBuilder/toString()
org/apache/pdfbox/pdfparser/BaseParser/readInt()#java/lang/String/getBytes(java.lang.String)
org/apache/pdfbox/pdfparser/BaseParser/readInt()#java/lang/Integer/parseInt(java.lang.String)
org/apache/pdfbox/pdfparser/BaseParser/parseDirObject()#java/io/IOException/IOException(java.lang.String)
org/apache/pdfbox/pdfparser/BaseParser/parseDirObject()#java/lang/StringBuilder/append(java.lang.String)
org/apache/pdfbox/pdfparser/BaseParser/parseDirObject()#java/lang/String/length()
org/apache/pdfbox/pdfparser/BaseParser/parseDirObject()#java/lang/StringBuilder/StringBuilder()
org/apache/pdfbox/pdfparser/BaseParser/parseDirObject()#java/lang/String/getBytes(java.lang.String)
org/apache/pdfbox/pdfparser/BaseParser/parseDirObject()#java/lang/StringBuilder/append(char)
org/apache/pdfbox/pdfparser/BaseParser/parseDirObject()#java/lang/StringBuilder/append(java.lang.Object)
org/apache/pdfbox/pdfparser/BaseParser/parseDirObject()#java/lang/StringBuilder/toString()
org/apache/pdfbox/pdfparser/BaseParser/parseDirObject()#java/lang/StringBuffer/append(char)
org/apache/pdfbox/pdfparser/BaseParser/parseDirObject()#java/lang/StringBuilder/append(int)
org/apache/pdfbox/pdfparser/BaseParser/parseDirObject()#java/lang/Character/isDigit(char)
org/apache/pdfbox/pdfparser/BaseParser/parseDirObject()#java/lang/String/String(byte[],java.lang.String)
org/apache/pdfbox/pdfparser/BaseParser/parseDirObject()#java/lang/String/equals(java.lang.Object)
org/apache/pdfbox/pdfparser/BaseParser/parseDirObject()#java/lang/StringBuffer/toString()
org/apache/pdfbox/pdfparser/BaseParser/parseDirObject()#java/lang/StringBuffer/StringBuffer()
org/apache/pdfbox/pdfparser/BaseParser/parseCOSStream(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.io.RandomAccess)#java/io/OutputStream/close()
org/apache/pdfbox/pdfparser/BaseParser/parseCOSStream(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.io.RandomAccess)#java/io/IOException/IOException(java.lang.String)
org/apache/pdfbox/pdfparser/BaseParser/parseCOSStream(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.io.RandomAccess)#java/lang/StringBuilder/append(java.lang.String)
org/apache/pdfbox/pdfparser/BaseParser/parseCOSStream(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.io.RandomAccess)#java/lang/String/length()
org/apache/pdfbox/pdfparser/BaseParser/parseCOSStream(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.io.RandomAccess)#java/lang/String/equals(java.lang.Object)
org/apache/pdfbox/pdfparser/BaseParser/parseCOSStream(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.io.RandomAccess)#java/lang/StringBuilder/StringBuilder()
org/apache/pdfbox/pdfparser/BaseParser/parseCOSStream(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.io.RandomAccess)#java/lang/String/getBytes(java.lang.String)
org/apache/pdfbox/pdfparser/BaseParser/parseCOSStream(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.io.RandomAccess)#java/lang/String/startsWith(java.lang.String)
org/apache/pdfbox/pdfparser/BaseParser/parseCOSStream(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.io.RandomAccess)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/pdfbox/pdfparser/BaseParser/parseCOSStream(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.io.RandomAccess)#java/lang/String/substring(int,int)
org/apache/pdfbox/pdfparser/BaseParser/parseCOSStream(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.io.RandomAccess)#java/lang/StringBuilder/toString()
org/apache/pdfbox/pdmodel/common/PDPageLabels/computeLabels(org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelHandler)#org/apache/pdfbox/pdmodel/common/PDPageLabels$LabelGenerator/LabelGenerator(org.apache.pdfbox.pdmodel.common.PDPageLabelRange,int)
org/apache/pdfbox/pdmodel/common/PDPageLabels/computeLabels(org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelHandler)#java/lang/Integer/intValue()
org/apache/pdfbox/pdmodel/common/PDPageLabels/computeLabels(org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelHandler)#java/util/Iterator/hasNext()
org/apache/pdfbox/pdmodel/common/PDPageLabels/computeLabels(org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelHandler)#org/apache/pdfbox/pdmodel/common/PDPageLabels$LabelGenerator/next()
org/apache/pdfbox/pdmodel/common/PDPageLabels/computeLabels(org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelHandler)#java/util/Map$Entry/getKey()
org/apache/pdfbox/pdmodel/common/PDPageLabels/computeLabels(org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelHandler)#java/util/Set/iterator()
org/apache/pdfbox/pdmodel/common/PDPageLabels/computeLabels(org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelHandler)#org/apache/pdfbox/pdmodel/common/PDPageLabels$LabelGenerator/hasNext()
org/apache/pdfbox/pdmodel/common/PDPageLabels/computeLabels(org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelHandler)#org/apache/pdfbox/pdmodel/common/PDPageLabels$LabelHandler/newLabel(int,java.lang.String)
org/apache/pdfbox/pdmodel/common/PDPageLabels/computeLabels(org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelHandler)#java/util/Iterator/next()
org/apache/pdfbox/pdmodel/common/PDPageLabels/computeLabels(org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelHandler)#java/util/Map$Entry/getValue()
org/apache/pdfbox/pdmodel/common/PDPageLabels/computeLabels(org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelHandler)#java/util/SortedMap/entrySet()
org/apache/pdfbox/pdmodel/common/PDPageLabels/findLabels(org.apache.pdfbox.pdmodel.common.PDNumberTreeNode)#java/lang/Integer/intValue()
org/apache/pdfbox/pdmodel/common/PDPageLabels/findLabels(org.apache.pdfbox.pdmodel.common.PDNumberTreeNode)#java/util/Iterator/hasNext()
org/apache/pdfbox/pdmodel/common/PDPageLabels/findLabels(org.apache.pdfbox.pdmodel.common.PDNumberTreeNode)#java/util/Map$Entry/getKey()
org/apache/pdfbox/pdmodel/common/PDPageLabels/findLabels(org.apache.pdfbox.pdmodel.common.PDNumberTreeNode)#java/util/Iterator/next()
org/apache/pdfbox/pdmodel/common/PDPageLabels/findLabels(org.apache.pdfbox.pdmodel.common.PDNumberTreeNode)#java/util/Set/iterator()
org/apache/pdfbox/pdmodel/common/PDPageLabels/findLabels(org.apache.pdfbox.pdmodel.common.PDNumberTreeNode)#java/util/Map$Entry/getValue()
org/apache/pdfbox/pdmodel/common/PDPageLabels/findLabels(org.apache.pdfbox.pdmodel.common.PDNumberTreeNode)#java/util/List/iterator()
org/apache/pdfbox/pdmodel/common/PDPageLabels/findLabels(org.apache.pdfbox.pdmodel.common.PDNumberTreeNode)#java/util/Map/entrySet()
org/apache/pdfbox/pdmodel/common/PDPageLabels/findLabels(org.apache.pdfbox.pdmodel.common.PDNumberTreeNode)#java/util/SortedMap/put(java.lang.Object,java.lang.Object)
org/apache/pdfbox/pdfviewer/PDFPagePanel/paint(java.awt.Graphics)#java/awt/Graphics/fillRect(int,int,int,int)
org/apache/pdfbox/pdfviewer/PDFPagePanel/paint(java.awt.Graphics)#java/awt/Dimension/getWidth()
org/apache/pdfbox/pdfviewer/PDFPagePanel/paint(java.awt.Graphics)#org/apache/pdfbox/pdfviewer/PDFPagePanel/getHeight()
org/apache/pdfbox/pdfviewer/PDFPagePanel/paint(java.awt.Graphics)#java/awt/Graphics2D/rotate(double)
org/apache/pdfbox/pdfviewer/PDFPagePanel/paint(java.awt.Graphics)#java/awt/Graphics/setColor(java.awt.Color)
org/apache/pdfbox/pdfviewer/PDFPagePanel/paint(java.awt.Graphics)#java/io/IOException/printStackTrace()
org/apache/pdfbox/pdfviewer/PDFPagePanel/paint(java.awt.Graphics)#java/awt/Graphics2D/translate(double,double)
org/apache/pdfbox/pdfviewer/PDFPagePanel/paint(java.awt.Graphics)#org/apache/pdfbox/pdfviewer/PDFPagePanel/getWidth()
org/apache/pdfbox/pdfviewer/PDFPagePanel/paint(java.awt.Graphics)#java/lang/Math/toRadians(double)
org/apache/pdfbox/pdfviewer/PDFPagePanel/paint(java.awt.Graphics)#org/apache/pdfbox/pdfviewer/PDFPagePanel/getBackground()
org/apache/pdfbox/examples/pdmodel/AddMetadataFromDocInfo/main(java.lang.String[])#org/apache/jempbox/xmp/XMPSchemaDublinCore/addCreator(java.lang.String)
org/apache/pdfbox/examples/pdmodel/AddMetadataFromDocInfo/main(java.lang.String[])#org/apache/jempbox/xmp/XMPSchemaDublinCore/setTitle(java.lang.String)
org/apache/pdfbox/examples/pdmodel/AddMetadataFromDocInfo/main(java.lang.String[])#org/apache/jempbox/xmp/XMPSchemaPDF/setKeywords(java.lang.String)
org/apache/pdfbox/examples/pdmodel/AddMetadataFromDocInfo/main(java.lang.String[])#org/apache/jempbox/xmp/XMPSchemaBasic/setModifyDate(java.util.Calendar)
org/apache/pdfbox/examples/pdmodel/AddMetadataFromDocInfo/main(java.lang.String[])#org/apache/jempbox/xmp/XMPSchemaBasic/setCreateDate(java.util.Calendar)
org/apache/pdfbox/examples/pdmodel/AddMetadataFromDocInfo/main(java.lang.String[])#org/apache/jempbox/xmp/XMPMetadata/addBasicSchema()
org/apache/pdfbox/examples/pdmodel/AddMetadataFromDocInfo/main(java.lang.String[])#org/apache/jempbox/xmp/XMPSchemaPDF/setProducer(java.lang.String)
org/apache/pdfbox/examples/pdmodel/AddMetadataFromDocInfo/main(java.lang.String[])#org/apache/jempbox/xmp/XMPSchemaBasic/setCreatorTool(java.lang.String)
org/apache/pdfbox/examples/pdmodel/AddMetadataFromDocInfo/main(java.lang.String[])#java/io/PrintStream/println(java.lang.String)
org/apache/pdfbox/examples/pdmodel/AddMetadataFromDocInfo/main(java.lang.String[])#org/apache/jempbox/xmp/XMPMetadata/addDublinCoreSchema()
org/apache/pdfbox/examples/pdmodel/AddMetadataFromDocInfo/main(java.lang.String[])#org/apache/jempbox/xmp/XMPSchemaBasic/setMetadataDate(java.util.Calendar)
org/apache/pdfbox/examples/pdmodel/AddMetadataFromDocInfo/main(java.lang.String[])#java/lang/System/exit(int)
org/apache/pdfbox/examples/pdmodel/AddMetadataFromDocInfo/main(java.lang.String[])#org/apache/jempbox/xmp/XMPSchemaDublinCore/setDescription(java.lang.String)
org/apache/pdfbox/examples/pdmodel/AddMetadataFromDocInfo/main(java.lang.String[])#org/apache/jempbox/xmp/XMPMetadata/XMPMetadata()
org/apache/pdfbox/examples/pdmodel/AddMetadataFromDocInfo/main(java.lang.String[])#java/util/GregorianCalendar/GregorianCalendar()
org/apache/pdfbox/examples/pdmodel/AddMetadataFromDocInfo/main(java.lang.String[])#org/apache/jempbox/xmp/XMPMetadata/addPDFSchema()
org/apache/pdfbox/pdfparser/PDFXrefStreamParser/parse()#java/util/ArrayList/iterator()
org/apache/pdfbox/pdfparser/PDFXrefStreamParser/parse()#java/lang/Integer/intValue()
org/apache/pdfbox/pdfparser/PDFXrefStreamParser/parse()#java/util/Iterator/hasNext()
org/apache/pdfbox/pdfparser/PDFXrefStreamParser/parse()#java/lang/Integer/Integer(int)
org/apache/pdfbox/pdfparser/PDFXrefStreamParser/parse()#java/util/Iterator/next()
org/apache/pdfbox/pdfparser/PDFXrefStreamParser/parse()#java/util/ArrayList/add(java.lang.Object)
org/apache/pdfbox/pdfparser/PDFXrefStreamParser/parse()#org/apache/pdfbox/io/PushBackInputStream/available()
org/apache/pdfbox/pdfparser/PDFXrefStreamParser/parse()#java/util/ArrayList/ArrayList()
org/apache/pdfbox/pdfparser/PDFXrefStreamParser/parse()#org/apache/pdfbox/cos/COSStream/getDictionaryObject(org.apache.pdfbox.cos.COSName)
org/apache/pdfbox/pdfparser/PDFXrefStreamParser/parse()#org/apache/pdfbox/io/PushBackInputStream/close()
org/apache/pdfbox/examples/pdmodel/ExtractMetadata/main(java.lang.String[])#org/apache/jempbox/xmp/XMPMetadata/getBasicSchema()
org/apache/pdfbox/examples/pdmodel/ExtractMetadata/main(java.lang.String[])#org/apache/jempbox/xmp/XMPSchemaBasic/getModifyDate()
org/apache/pdfbox/examples/pdmodel/ExtractMetadata/main(java.lang.String[])#org/apache/pdfbox/exceptions/CryptographyException/printStackTrace()
org/apache/pdfbox/examples/pdmodel/ExtractMetadata/main(java.lang.String[])#java/lang/System/exit(int)
org/apache/pdfbox/examples/pdmodel/ExtractMetadata/main(java.lang.String[])#org/apache/jempbox/xmp/XMPSchemaBasic/getCreatorTool()
org/apache/pdfbox/examples/pdmodel/ExtractMetadata/main(java.lang.String[])#org/apache/jempbox/xmp/XMPSchemaDublinCore/getTitle()
org/apache/pdfbox/examples/pdmodel/ExtractMetadata/main(java.lang.String[])#org/apache/jempbox/xmp/XMPMetadata/getDublinCoreSchema()
org/apache/pdfbox/examples/pdmodel/ExtractMetadata/main(java.lang.String[])#org/apache/jempbox/xmp/XMPSchemaDublinCore/getDescription()
org/apache/pdfbox/examples/pdmodel/ExtractMetadata/main(java.lang.String[])#java/io/PrintStream/println(java.lang.String)
org/apache/pdfbox/examples/pdmodel/ExtractMetadata/main(java.lang.String[])#org/apache/jempbox/xmp/XMPMetadata/getPDFSchema()
org/apache/pdfbox/examples/pdmodel/ExtractMetadata/main(java.lang.String[])#org/apache/jempbox/xmp/XMPSchemaDublinCore/getDates()
org/apache/pdfbox/examples/pdmodel/ExtractMetadata/main(java.lang.String[])#org/apache/jempbox/xmp/XMPSchemaBasic/getCreateDate()
org/apache/pdfbox/examples/pdmodel/ExtractMetadata/main(java.lang.String[])#org/apache/jempbox/xmp/XMPSchemaPDF/getPDFVersion()
org/apache/pdfbox/examples/pdmodel/ExtractMetadata/main(java.lang.String[])#org/apache/jempbox/xmp/XMPSchemaPDF/getKeywords()
org/apache/pdfbox/examples/pdmodel/ExtractMetadata/main(java.lang.String[])#org/apache/jempbox/xmp/XMPSchemaDublinCore/getCreators()
org/apache/pdfbox/examples/pdmodel/ExtractMetadata/main(java.lang.String[])#org/apache/jempbox/xmp/XMPSchemaPDF/getProducer()
org/apache/pdfbox/ExtractText/startExtraction(java.lang.String[])#java/io/IOException/IOException(java.lang.String)
org/apache/pdfbox/ExtractText/startExtraction(java.lang.String[])#java/io/OutputStreamWriter/OutputStreamWriter(java.io.OutputStream,java.lang.String)
org/apache/pdfbox/ExtractText/startExtraction(java.lang.String[])#java/net/URL/getFile()
org/apache/pdfbox/ExtractText/startExtraction(java.lang.String[])#org/apache/pdfbox/util/PDFTextStripper/setForceParsing(boolean)
org/apache/pdfbox/ExtractText/startExtraction(java.lang.String[])#java/lang/Integer/parseInt(java.lang.String)
org/apache/pdfbox/ExtractText/startExtraction(java.lang.String[])#java/lang/StringBuilder/toString()
org/apache/pdfbox/ExtractText/startExtraction(java.lang.String[])#java/io/File/getName()
org/apache/pdfbox/ExtractText/startExtraction(java.lang.String[])#java/lang/StringBuilder/append(java.lang.String)
org/apache/pdfbox/ExtractText/startExtraction(java.lang.String[])#java/net/URL/URL(java.lang.String)
org/apache/pdfbox/ExtractText/startExtraction(java.lang.String[])#java/lang/String/length()
org/apache/pdfbox/ExtractText/startExtraction(java.lang.String[])#java/io/FileOutputStream/FileOutputStream(java.lang.String)
org/apache/pdfbox/ExtractText/startExtraction(java.lang.String[])#java/io/File/File(java.lang.String)
org/apache/pdfbox/ExtractText/startExtraction(java.lang.String[])#java/io/Writer/close()
org/apache/pdfbox/ExtractText/startExtraction(java.lang.String[])#java/lang/String/equals(java.lang.Object)
org/apache/pdfbox/ExtractText/startExtraction(java.lang.String[])#java/lang/String/substring(int,int)
org/apache/pdfbox/ExtractText/startExtraction(java.lang.String[])#java/lang/StringBuilder/StringBuilder()
org/apache/pdfbox/ExtractText/startExtraction(java.lang.String[])#java/io/OutputStreamWriter/OutputStreamWriter(java.io.OutputStream)
org/apache/pdfbox/pdmodel/font/PDType1AfmPfbFont/load(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,java.io.InputStream)#org/apache/fontbox/afm/FontMetric/getItalicAngle()
org/apache/pdfbox/pdmodel/font/PDType1AfmPfbFont/load(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,java.io.InputStream)#java/lang/StringBuilder/append(java.lang.String)
org/apache/pdfbox/pdmodel/font/PDType1AfmPfbFont/load(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,java.io.InputStream)#org/apache/pdfbox/cos/COSStream/setInt(java.lang.String,int)
org/apache/pdfbox/pdmodel/font/PDType1AfmPfbFont/load(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,java.io.InputStream)#java/lang/StringBuilder/StringBuilder()
org/apache/pdfbox/pdmodel/font/PDType1AfmPfbFont/load(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,java.io.InputStream)#org/apache/fontbox/afm/AFMParser/AFMParser(java.io.InputStream)
org/apache/pdfbox/pdmodel/font/PDType1AfmPfbFont/load(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,java.io.InputStream)#org/apache/pdfbox/pdmodel/font/PDType1AfmPfbFont/setFontDescriptor(org.apache.pdfbox.pdmodel.font.PDFontDescriptorDictionary)
org/apache/pdfbox/pdmodel/font/PDType1AfmPfbFont/load(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,java.io.InputStream)#org/apache/fontbox/afm/FontMetric/getCapHeight()
org/apache/pdfbox/pdmodel/font/PDType1AfmPfbFont/load(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,java.io.InputStream)#org/apache/fontbox/afm/FontMetric/getAverageCharacterWidth()
org/apache/pdfbox/pdmodel/font/PDType1AfmPfbFont/load(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,java.io.InputStream)#org/apache/fontbox/pfb/PfbParser/getInputStream()
org/apache/pdfbox/pdmodel/font/PDType1AfmPfbFont/load(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,java.io.InputStream)#java/lang/Float/Float(float)
org/apache/pdfbox/pdmodel/font/PDType1AfmPfbFont/load(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,java.io.InputStream)#org/apache/fontbox/afm/FontMetric/getFamilyName()
org/apache/pdfbox/pdmodel/font/PDType1AfmPfbFont/load(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,java.io.InputStream)#org/apache/fontbox/afm/FontMetric/getXHeight()
org/apache/pdfbox/pdmodel/font/PDType1AfmPfbFont/load(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,java.io.InputStream)#java/util/ArrayList/ArrayList(int)
org/apache/pdfbox/pdmodel/font/PDType1AfmPfbFont/load(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,java.io.InputStream)#org/apache/fontbox/pfb/PfbParser/getLengths()
org/apache/pdfbox/pdmodel/font/PDType1AfmPfbFont/load(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,java.io.InputStream)#org/apache/fontbox/afm/CharMetric/getName()
org/apache/pdfbox/pdmodel/font/PDType1AfmPfbFont/load(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,java.io.InputStream)#java/util/Iterator/hasNext()
org/apache/pdfbox/pdmodel/font/PDType1AfmPfbFont/load(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,java.io.InputStream)#org/apache/pdfbox/pdmodel/font/PDFontDescriptorDictionary/setNonSymbolic(boolean)
org/apache/pdfbox/pdmodel/font/PDType1AfmPfbFont/load(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,java.io.InputStream)#java/lang/Math/max(int,int)
org/apache/pdfbox/pdmodel/font/PDType1AfmPfbFont/load(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,java.io.InputStream)#org/apache/fontbox/afm/FontMetric/getAscender()
org/apache/pdfbox/pdmodel/font/PDType1AfmPfbFont/load(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,java.io.InputStream)#java/lang/StringBuilder/append(int)
org/apache/pdfbox/pdmodel/font/PDType1AfmPfbFont/load(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,java.io.InputStream)#org/apache/fontbox/afm/FontMetric/getFontBBox()
org/apache/pdfbox/pdmodel/font/PDType1AfmPfbFont/load(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,java.io.InputStream)#org/apache/fontbox/pfb/PfbParser/PfbParser(java.io.InputStream)
org/apache/pdfbox/pdmodel/font/PDType1AfmPfbFont/load(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,java.io.InputStream)#org/apache/fontbox/afm/FontMetric/getCharacterSet()
org/apache/pdfbox/pdmodel/font/PDType1AfmPfbFont/load(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,java.io.InputStream)#org/apache/pdfbox/pdmodel/font/PDType1AfmPfbFont/setWidths(java.util.List)
org/apache/pdfbox/pdmodel/font/PDType1AfmPfbFont/load(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,java.io.InputStream)#org/apache/fontbox/afm/FontMetric/getFontName()
org/apache/pdfbox/pdmodel/font/PDType1AfmPfbFont/load(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,java.io.InputStream)#org/apache/fontbox/pfb/PfbParser/size()
org/apache/pdfbox/pdmodel/font/PDType1AfmPfbFont/load(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,java.io.InputStream)#java/lang/Float/valueOf(float)
org/apache/pdfbox/pdmodel/font/PDType1AfmPfbFont/load(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,java.io.InputStream)#org/apache/pdfbox/pdmodel/font/PDType1AfmPfbFont/setLastChar(int)
org/apache/pdfbox/pdmodel/font/PDType1AfmPfbFont/load(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,java.io.InputStream)#java/util/Iterator/next()
org/apache/pdfbox/pdmodel/font/PDType1AfmPfbFont/load(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,java.io.InputStream)#org/apache/fontbox/afm/FontMetric/getCharMetrics()
org/apache/pdfbox/pdmodel/font/PDType1AfmPfbFont/load(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,java.io.InputStream)#java/lang/String/equals(java.lang.Object)
org/apache/pdfbox/pdmodel/font/PDType1AfmPfbFont/load(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,java.io.InputStream)#org/apache/fontbox/afm/CharMetric/getCharacterCode()
org/apache/pdfbox/pdmodel/font/PDType1AfmPfbFont/load(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,java.io.InputStream)#java/io/InputStream/close()
org/apache/pdfbox/pdmodel/font/PDType1AfmPfbFont/load(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,java.io.InputStream)#org/apache/pdfbox/pdmodel/font/PDType1AfmPfbFont/getFontEncoding()
org/apache/pdfbox/pdmodel/font/PDType1AfmPfbFont/load(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,java.io.InputStream)#org/apache/fontbox/afm/AFMParser/parse()
org/apache/pdfbox/pdmodel/font/PDType1AfmPfbFont/load(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,java.io.InputStream)#org/apache/fontbox/afm/AFMParser/getResult()
org/apache/pdfbox/pdmodel/font/PDType1AfmPfbFont/load(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,java.io.InputStream)#java/util/List/add(java.lang.Object)
org/apache/pdfbox/pdmodel/font/PDType1AfmPfbFont/load(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,java.io.InputStream)#org/apache/pdfbox/pdmodel/font/PDType1AfmPfbFont/setFirstChar(int)
org/apache/pdfbox/pdmodel/font/PDType1AfmPfbFont/load(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,java.io.InputStream)#org/apache/pdfbox/pdmodel/font/PDType1AfmPfbFont/setFontEncoding(org.apache.pdfbox.encoding.Encoding)
org/apache/pdfbox/pdmodel/font/PDType1AfmPfbFont/load(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,java.io.InputStream)#org/apache/pdfbox/pdmodel/font/PDType1AfmPfbFont/setBaseFont(java.lang.String)
org/apache/pdfbox/pdmodel/font/PDType1AfmPfbFont/load(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,java.io.InputStream)#java/util/List/get(int)
org/apache/pdfbox/pdmodel/font/PDType1AfmPfbFont/load(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,java.io.InputStream)#org/apache/fontbox/afm/CharMetric/getWx()
org/apache/pdfbox/pdmodel/font/PDType1AfmPfbFont/load(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,java.io.InputStream)#java/util/List/iterator()
org/apache/pdfbox/pdmodel/font/PDType1AfmPfbFont/load(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,java.io.InputStream)#java/util/List/set(int,java.lang.Object)
org/apache/pdfbox/pdmodel/font/PDType1AfmPfbFont/load(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,java.io.InputStream)#java/lang/Math/min(int,int)
org/apache/pdfbox/pdmodel/font/PDType1AfmPfbFont/load(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,java.io.InputStream)#org/apache/fontbox/afm/FontMetric/getDescender()
org/apache/pdfbox/pdmodel/font/PDType1AfmPfbFont/load(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,java.io.InputStream)#java/lang/StringBuilder/toString()
org/apache/pdfbox/encoding/Encoding/<clinit>()#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/pdfbox/encoding/Encoding/<clinit>()#java/util/Iterator/hasNext()
org/apache/pdfbox/encoding/Encoding/<clinit>()#java/util/Map$Entry/getKey()
org/apache/pdfbox/encoding/Encoding/<clinit>()#java/io/File/exists()
org/apache/pdfbox/encoding/Encoding/<clinit>()#java/io/File/File(java.lang.String)
org/apache/pdfbox/encoding/Encoding/<clinit>()#java/lang/System/getProperty(java.lang.String)
org/apache/pdfbox/encoding/Encoding/<clinit>()#java/util/Set/iterator()
org/apache/pdfbox/encoding/Encoding/<clinit>()#java/util/Map$Entry/getValue()
org/apache/pdfbox/encoding/Encoding/<clinit>()#java/util/Map/entrySet()
org/apache/pdfbox/encoding/Encoding/<clinit>()#org/apache/commons/logging/LogFactory/getLog(java.lang.Class)
org/apache/pdfbox/encoding/Encoding/<clinit>()#java/util/Iterator/next()
org/apache/pdfbox/encoding/Encoding/<clinit>()#java/util/HashMap/HashMap()
org/apache/pdfbox/encoding/Encoding/getCharacter(java.lang.String)#java/lang/Integer/intValue()
org/apache/pdfbox/encoding/Encoding/getCharacter(java.lang.String)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/pdfbox/encoding/Encoding/getCharacter(java.lang.String)#org/apache/commons/logging/Log/warn(java.lang.Object)
org/apache/pdfbox/encoding/Encoding/getCharacter(java.lang.String)#java/lang/Character/toString(char)
org/apache/pdfbox/encoding/Encoding/getCharacter(java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/apache/pdfbox/encoding/Encoding/getCharacter(java.lang.String)#java/util/Map/containsKey(java.lang.Object)
org/apache/pdfbox/encoding/Encoding/getCharacter(java.lang.String)#java/lang/StringBuilder/append(char)
org/apache/pdfbox/encoding/Encoding/getCharacter(java.lang.String)#java/lang/String/startsWith(java.lang.String)
org/apache/pdfbox/encoding/Encoding/getCharacter(java.lang.String)#java/lang/String/indexOf(int)
org/apache/pdfbox/encoding/Encoding/getCharacter(java.lang.String)#java/lang/StringBuilder/toString()
org/apache/pdfbox/encoding/Encoding/getCharacter(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/apache/pdfbox/encoding/Encoding/getCharacter(java.lang.String)#java/lang/String/length()
org/apache/pdfbox/encoding/Encoding/getCharacter(java.lang.String)#java/util/Map/get(java.lang.Object)
org/apache/pdfbox/encoding/Encoding/getCharacter(java.lang.String)#java/lang/Integer/parseInt(java.lang.String,int)
org/apache/pdfbox/encoding/Encoding/getCharacter(java.lang.String)#java/lang/String/substring(int,int)
org/apache/pdfbox/encoding/Encoding/loadGlyphList(java.lang.String)#java/io/BufferedReader/close()
org/apache/pdfbox/encoding/Encoding/loadGlyphList(java.lang.String)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/pdfbox/encoding/Encoding/loadGlyphList(java.lang.String)#java/io/IOException/printStackTrace()
org/apache/pdfbox/encoding/Encoding/loadGlyphList(java.lang.String)#org/apache/commons/logging/Log/warn(java.lang.Object)
org/apache/pdfbox/encoding/Encoding/loadGlyphList(java.lang.String)#java/util/MissingResourceException/MissingResourceException(java.lang.String,java.lang.String,java.lang.String)
org/apache/pdfbox/encoding/Encoding/loadGlyphList(java.lang.String)#java/util/Map/containsKey(java.lang.Object)
org/apache/pdfbox/encoding/Encoding/loadGlyphList(java.lang.String)#java/lang/String/startsWith(java.lang.String)
org/apache/pdfbox/encoding/Encoding/loadGlyphList(java.lang.String)#java/util/StringTokenizer/nextToken()
org/apache/pdfbox/encoding/Encoding/loadGlyphList(java.lang.String)#java/util/StringTokenizer/hasMoreTokens()
org/apache/pdfbox/encoding/Encoding/loadGlyphList(java.lang.String)#java/lang/String/indexOf(int)
org/apache/pdfbox/encoding/Encoding/loadGlyphList(java.lang.String)#java/lang/StringBuilder/toString()
org/apache/pdfbox/encoding/Encoding/loadGlyphList(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/apache/pdfbox/encoding/Encoding/loadGlyphList(java.lang.String)#java/lang/String/trim()
org/apache/pdfbox/encoding/Encoding/loadGlyphList(java.lang.String)#java/util/StringTokenizer/StringTokenizer(java.lang.String,java.lang.String,boolean)
org/apache/pdfbox/encoding/Encoding/loadGlyphList(java.lang.String)#java/lang/String/length()
org/apache/pdfbox/encoding/Encoding/loadGlyphList(java.lang.String)#java/lang/NumberFormatException/printStackTrace()
org/apache/pdfbox/encoding/Encoding/loadGlyphList(java.lang.String)#java/lang/Class/getName()
org/apache/pdfbox/encoding/Encoding/loadGlyphList(java.lang.String)#java/lang/Integer/parseInt(java.lang.String,int)
org/apache/pdfbox/encoding/Encoding/loadGlyphList(java.lang.String)#java/lang/String/substring(int,int)
org/apache/pdfbox/encoding/Encoding/loadGlyphList(java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/apache/pdfbox/encoding/Encoding/loadGlyphList(java.lang.String)#java/io/InputStreamReader/InputStreamReader(java.io.InputStream)
org/apache/pdfbox/encoding/Encoding/loadGlyphList(java.lang.String)#java/io/BufferedReader/BufferedReader(java.io.Reader)
org/apache/pdfbox/encoding/Encoding/loadGlyphList(java.lang.String)#java/lang/StringBuilder/append(char)
org/apache/pdfbox/encoding/Encoding/loadGlyphList(java.lang.String)#java/io/BufferedReader/readLine()
org/apache/pdfbox/examples/pdmodel/PrintURLs/main(java.lang.String[])#java/util/List/get(int)
org/apache/pdfbox/examples/pdmodel/PrintURLs/main(java.lang.String[])#java/lang/StringBuilder/toString()
org/apache/pdfbox/examples/pdmodel/PrintURLs/main(java.lang.String[])#java/lang/StringBuilder/append(java.lang.String)
org/apache/pdfbox/examples/pdmodel/PrintURLs/main(java.lang.String[])#java/io/PrintStream/println(java.lang.String)
org/apache/pdfbox/examples/pdmodel/PrintURLs/main(java.lang.String[])#java/lang/StringBuilder/append(int)
org/apache/pdfbox/examples/pdmodel/PrintURLs/main(java.lang.String[])#org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLink/getRectangle()
org/apache/pdfbox/examples/pdmodel/PrintURLs/main(java.lang.String[])#java/util/List/size()
org/apache/pdfbox/examples/pdmodel/PrintURLs/main(java.lang.String[])#java/lang/StringBuilder/StringBuilder()
org/apache/pdfbox/examples/pdmodel/PrintURLs/main(java.lang.String[])#java/awt/geom/Rectangle2D$Float/Float(float,float,float,float)
org/apache/pdfbox/examples/pdmodel/Annotation/main(java.lang.String[])#org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLine/setRectangle(org.apache.pdfbox.pdmodel.common.PDRectangle)
org/apache/pdfbox/examples/pdmodel/Annotation/main(java.lang.String[])#org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationSquareCircle/setColour(org.apache.pdfbox.pdmodel.graphics.color.PDGamma)
org/apache/pdfbox/examples/pdmodel/Annotation/main(java.lang.String[])#org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationTextMarkup/setConstantOpacity(float)
org/apache/pdfbox/examples/pdmodel/Annotation/main(java.lang.String[])#org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationSquareCircle/setContents(java.lang.String)
org/apache/pdfbox/examples/pdmodel/Annotation/main(java.lang.String[])#org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLine/setColour(org.apache.pdfbox.pdmodel.graphics.color.PDGamma)
org/apache/pdfbox/examples/pdmodel/Annotation/main(java.lang.String[])#org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationTextMarkup/setColour(org.apache.pdfbox.pdmodel.graphics.color.PDGamma)
org/apache/pdfbox/examples/pdmodel/Annotation/main(java.lang.String[])#org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLink/setRectangle(org.apache.pdfbox.pdmodel.common.PDRectangle)
org/apache/pdfbox/examples/pdmodel/Annotation/main(java.lang.String[])#org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLine/setContents(java.lang.String)
org/apache/pdfbox/examples/pdmodel/Annotation/main(java.lang.String[])#org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationTextMarkup/setRectangle(org.apache.pdfbox.pdmodel.common.PDRectangle)
org/apache/pdfbox/examples/pdmodel/Annotation/main(java.lang.String[])#org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationTextMarkup/setContents(java.lang.String)
org/apache/pdfbox/examples/pdmodel/Annotation/main(java.lang.String[])#java/util/List/add(java.lang.Object)
org/apache/pdfbox/examples/pdmodel/Annotation/main(java.lang.String[])#org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationSquareCircle/setRectangle(org.apache.pdfbox.pdmodel.common.PDRectangle)
org/apache/pdfbox/pdmodel/encryption/SecurityHandlersManager/getSecurityHandler(org.apache.pdfbox.pdmodel.encryption.ProtectionPolicy)#java/lang/reflect/Constructor/newInstance(java.lang.Object[])
org/apache/pdfbox/pdmodel/encryption/SecurityHandlersManager/getSecurityHandler(org.apache.pdfbox.pdmodel.encryption.ProtectionPolicy)#java/lang/StringBuilder/append(java.lang.String)
org/apache/pdfbox/pdmodel/encryption/SecurityHandlersManager/getSecurityHandler(org.apache.pdfbox.pdmodel.encryption.ProtectionPolicy)#java/util/Hashtable/get(java.lang.Object)
org/apache/pdfbox/pdmodel/encryption/SecurityHandlersManager/getSecurityHandler(org.apache.pdfbox.pdmodel.encryption.ProtectionPolicy)#java/lang/Class/getDeclaredConstructor(java.lang.Class[])
org/apache/pdfbox/pdmodel/encryption/SecurityHandlersManager/getSecurityHandler(org.apache.pdfbox.pdmodel.encryption.ProtectionPolicy)#java/lang/StringBuilder/StringBuilder()
org/apache/pdfbox/pdmodel/encryption/SecurityHandlersManager/getSecurityHandler(org.apache.pdfbox.pdmodel.encryption.ProtectionPolicy)#java/lang/Object/getClass()
org/apache/pdfbox/pdmodel/encryption/SecurityHandlersManager/getSecurityHandler(org.apache.pdfbox.pdmodel.encryption.ProtectionPolicy)#java/lang/Exception/printStackTrace()
org/apache/pdfbox/pdmodel/encryption/SecurityHandlersManager/getSecurityHandler(org.apache.pdfbox.pdmodel.encryption.ProtectionPolicy)#java/lang/Class/getName()
org/apache/pdfbox/pdmodel/encryption/SecurityHandlersManager/getSecurityHandler(org.apache.pdfbox.pdmodel.encryption.ProtectionPolicy)#java/lang/StringBuilder/toString()
org/apache/pdfbox/pdmodel/encryption/SecurityHandlersManager/getSecurityHandler(org.apache.pdfbox.pdmodel.encryption.ProtectionPolicy)#java/lang/Exception/getMessage()
org/apache/pdfbox/pdmodel/encryption/SecurityHandlersManager/getSecurityHandler(java.lang.String)#java/lang/reflect/Constructor/newInstance(java.lang.Object[])
org/apache/pdfbox/pdmodel/encryption/SecurityHandlersManager/getSecurityHandler(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/apache/pdfbox/pdmodel/encryption/SecurityHandlersManager/getSecurityHandler(java.lang.String)#java/util/Hashtable/get(java.lang.Object)
org/apache/pdfbox/pdmodel/encryption/SecurityHandlersManager/getSecurityHandler(java.lang.String)#java/lang/Class/getDeclaredConstructor(java.lang.Class[])
org/apache/pdfbox/pdmodel/encryption/SecurityHandlersManager/getSecurityHandler(java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/apache/pdfbox/pdmodel/encryption/SecurityHandlersManager/getSecurityHandler(java.lang.String)#java/lang/Exception/printStackTrace()
org/apache/pdfbox/pdmodel/encryption/SecurityHandlersManager/getSecurityHandler(java.lang.String)#java/lang/Class/getName()
org/apache/pdfbox/pdmodel/encryption/SecurityHandlersManager/getSecurityHandler(java.lang.String)#java/lang/StringBuilder/toString()
org/apache/pdfbox/pdmodel/encryption/SecurityHandlersManager/getSecurityHandler(java.lang.String)#java/lang/Exception/getMessage()
org/apache/pdfbox/Overlay/collectLayoutPages(java.util.List)#java/io/IOException/IOException(java.lang.String)
org/apache/pdfbox/Overlay/collectLayoutPages(java.util.List)#java/util/Iterator/hasNext()
org/apache/pdfbox/Overlay/collectLayoutPages(java.util.List)#java/lang/StringBuilder/append(java.lang.String)
org/apache/pdfbox/Overlay/collectLayoutPages(java.util.List)#org/apache/pdfbox/Overlay$LayoutPage/LayoutPage(org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.cos.COSDictionary,java.util.Map)
org/apache/pdfbox/Overlay/collectLayoutPages(java.util.List)#java/lang/Class/getName()
org/apache/pdfbox/Overlay/collectLayoutPages(java.util.List)#java/util/List/add(java.lang.Object)
org/apache/pdfbox/Overlay/collectLayoutPages(java.util.List)#java/lang/Object/getClass()
org/apache/pdfbox/Overlay/collectLayoutPages(java.util.List)#java/util/List/iterator()
org/apache/pdfbox/Overlay/collectLayoutPages(java.util.List)#java/lang/StringBuilder/toString()
org/apache/pdfbox/Overlay/collectLayoutPages(java.util.List)#java/util/TreeMap/TreeMap()
org/apache/pdfbox/Overlay/collectLayoutPages(java.util.List)#java/util/Iterator/next()
org/apache/pdfbox/Overlay/collectLayoutPages(java.util.List)#java/lang/StringBuilder/StringBuilder()
org/apache/pdfbox/Overlay/collectLayoutPages(java.util.List)#java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)
org/apache/pdfbox/Overlay/processPages(java.util.List)#java/io/IOException/IOException(java.lang.String)
org/apache/pdfbox/Overlay/processPages(java.util.List)#java/util/Iterator/hasNext()
org/apache/pdfbox/Overlay/processPages(java.util.List)#java/lang/StringBuilder/append(java.lang.String)
org/apache/pdfbox/Overlay/processPages(java.util.List)#java/util/Iterator/next()
org/apache/pdfbox/Overlay/processPages(java.util.List)#java/lang/Class/getName()
org/apache/pdfbox/Overlay/processPages(java.util.List)#java/lang/StringBuilder/StringBuilder()
org/apache/pdfbox/Overlay/processPages(java.util.List)#java/lang/Object/getClass()
org/apache/pdfbox/Overlay/processPages(java.util.List)#java/util/List/iterator()
org/apache/pdfbox/Overlay/processPages(java.util.List)#java/lang/StringBuilder/toString()
org/apache/pdfbox/Overlay/makeUniqObjectNames(java.util.Map,org.apache.pdfbox.cos.COSStream)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/pdfbox/Overlay/makeUniqObjectNames(java.util.Map,org.apache.pdfbox.cos.COSStream)#java/lang/StringBuffer/delete(int,int)
org/apache/pdfbox/Overlay/makeUniqObjectNames(java.util.Map,org.apache.pdfbox.cos.COSStream)#java/lang/StringBuilder/append(java.lang.String)
org/apache/pdfbox/Overlay/makeUniqObjectNames(java.util.Map,org.apache.pdfbox.cos.COSStream)#java/io/ByteArrayOutputStream/ByteArrayOutputStream(int)
org/apache/pdfbox/Overlay/makeUniqObjectNames(java.util.Map,org.apache.pdfbox.cos.COSStream)#java/lang/StringBuffer/append(char)
org/apache/pdfbox/Overlay/makeUniqObjectNames(java.util.Map,org.apache.pdfbox.cos.COSStream)#java/lang/StringBuffer/length()
org/apache/pdfbox/Overlay/makeUniqObjectNames(java.util.Map,org.apache.pdfbox.cos.COSStream)#java/io/ByteArrayOutputStream/write(int)
org/apache/pdfbox/Overlay/makeUniqObjectNames(java.util.Map,org.apache.pdfbox.cos.COSStream)#java/io/ByteArrayOutputStream/write(byte[])
org/apache/pdfbox/Overlay/makeUniqObjectNames(java.util.Map,org.apache.pdfbox.cos.COSStream)#java/io/ByteArrayOutputStream/toByteArray()
org/apache/pdfbox/Overlay/makeUniqObjectNames(java.util.Map,org.apache.pdfbox.cos.COSStream)#java/io/OutputStream/close()
org/apache/pdfbox/Overlay/makeUniqObjectNames(java.util.Map,org.apache.pdfbox.cos.COSStream)#java/io/ByteArrayOutputStream/writeTo(java.io.OutputStream)
org/apache/pdfbox/Overlay/makeUniqObjectNames(java.util.Map,org.apache.pdfbox.cos.COSStream)#java/lang/Character/isWhitespace(char)
org/apache/pdfbox/Overlay/makeUniqObjectNames(java.util.Map,org.apache.pdfbox.cos.COSStream)#java/lang/StringBuffer/StringBuffer(int)
org/apache/pdfbox/Overlay/makeUniqObjectNames(java.util.Map,org.apache.pdfbox.cos.COSStream)#java/io/InputStream/read(byte[])
org/apache/pdfbox/Overlay/makeUniqObjectNames(java.util.Map,org.apache.pdfbox.cos.COSStream)#java/io/ByteArrayOutputStream/write(byte[],int,int)
org/apache/pdfbox/Overlay/makeUniqObjectNames(java.util.Map,org.apache.pdfbox.cos.COSStream)#java/lang/StringBuffer/toString()
org/apache/pdfbox/Overlay/makeUniqObjectNames(java.util.Map,org.apache.pdfbox.cos.COSStream)#java/lang/StringBuilder/StringBuilder()
org/apache/pdfbox/Overlay/makeUniqObjectNames(java.util.Map,org.apache.pdfbox.cos.COSStream)#java/io/ByteArrayOutputStream/size()
org/apache/pdfbox/Overlay/makeUniqObjectNames(java.util.Map,org.apache.pdfbox.cos.COSStream)#java/lang/String/getBytes(java.lang.String)
org/apache/pdfbox/Overlay/makeUniqObjectNames(java.util.Map,org.apache.pdfbox.cos.COSStream)#java/lang/String/substring(int)
org/apache/pdfbox/Overlay/makeUniqObjectNames(java.util.Map,org.apache.pdfbox.cos.COSStream)#java/lang/StringBuilder/toString()
org/apache/pdfbox/pdfwriter/COSWriter/doWriteSignature(org.apache.pdfbox.cos.COSDocument)#java/io/IOException/IOException(java.lang.String)
org/apache/pdfbox/pdfwriter/COSWriter/doWriteSignature(org.apache.pdfbox.cos.COSDocument)#java/io/InputStream/read(byte[])
org/apache/pdfbox/pdfwriter/COSWriter/doWriteSignature(org.apache.pdfbox.cos.COSDocument)#java/lang/StringBuilder/append(java.lang.String)
org/apache/pdfbox/pdfwriter/COSWriter/doWriteSignature(org.apache.pdfbox.cos.COSDocument)#java/lang/StringBuilder/append(int)
org/apache/pdfbox/pdfwriter/COSWriter/doWriteSignature(org.apache.pdfbox.cos.COSDocument)#java/io/InputStream/close()
org/apache/pdfbox/pdfwriter/COSWriter/doWriteSignature(org.apache.pdfbox.cos.COSDocument)#java/lang/StringBuilder/StringBuilder()
org/apache/pdfbox/pdfwriter/COSWriter/doWriteSignature(org.apache.pdfbox.cos.COSDocument)#java/io/ByteArrayOutputStream/ByteArrayOutputStream()
org/apache/pdfbox/pdfwriter/COSWriter/doWriteSignature(org.apache.pdfbox.cos.COSDocument)#org/apache/pdfbox/pdfwriter/COSStandardOutputStream/write(byte[])
org/apache/pdfbox/pdfwriter/COSWriter/doWriteSignature(org.apache.pdfbox.cos.COSDocument)#java/lang/StringBuilder/toString()
org/apache/pdfbox/pdfwriter/COSWriter/doWriteSignature(org.apache.pdfbox.cos.COSDocument)#java/io/ByteArrayInputStream/ByteArrayInputStream(byte[])
org/apache/pdfbox/pdfwriter/COSWriter/doWriteSignature(org.apache.pdfbox.cos.COSDocument)#java/lang/String/length()
org/apache/pdfbox/pdfwriter/COSWriter/doWriteSignature(org.apache.pdfbox.cos.COSDocument)#java/io/ByteArrayOutputStream/write(byte[],int,int)
org/apache/pdfbox/pdfwriter/COSWriter/doWriteSignature(org.apache.pdfbox.cos.COSDocument)#java/io/ByteArrayOutputStream/toByteArray()
org/apache/pdfbox/pdfwriter/COSWriter/doWriteSignature(org.apache.pdfbox.cos.COSDocument)#java/lang/String/getBytes()
org/apache/pdfbox/pdfwriter/COSWriter/getXRefRanges(java.util.List)#java/util/Iterator/hasNext()
org/apache/pdfbox/pdfwriter/COSWriter/getXRefRanges(java.util.List)#java/util/List/size()
org/apache/pdfbox/pdfwriter/COSWriter/getXRefRanges(java.util.List)#java/util/Iterator/next()
org/apache/pdfbox/pdfwriter/COSWriter/getXRefRanges(java.util.List)#java/util/ArrayList/add(java.lang.Object)
org/apache/pdfbox/pdfwriter/COSWriter/getXRefRanges(java.util.List)#java/util/ArrayList/size()
org/apache/pdfbox/pdfwriter/COSWriter/getXRefRanges(java.util.List)#java/lang/Integer/valueOf(int)
org/apache/pdfbox/pdfwriter/COSWriter/getXRefRanges(java.util.List)#java/util/List/iterator()
org/apache/pdfbox/pdfwriter/COSWriter/getXRefRanges(java.util.List)#java/util/ArrayList/ArrayList()
org/apache/pdfbox/pdfwriter/COSWriter/getXRefRanges(java.util.List)#java/util/ArrayList/toArray(java.lang.Object[])
org/apache/pdfbox/pdfwriter/COSWriter/write(org.apache.pdfbox.pdmodel.PDDocument)#java/util/Iterator/hasNext()
org/apache/pdfbox/pdfwriter/COSWriter/write(org.apache.pdfbox.pdmodel.PDDocument)#java/lang/Long/toString(long)
org/apache/pdfbox/pdfwriter/COSWriter/write(org.apache.pdfbox.pdmodel.PDDocument)#java/util/Iterator/next()
org/apache/pdfbox/pdfwriter/COSWriter/write(org.apache.pdfbox.pdmodel.PDDocument)#java/util/Collection/iterator()
org/apache/pdfbox/pdfwriter/COSWriter/write(org.apache.pdfbox.pdmodel.PDDocument)#java/security/MessageDigest/getInstance(java.lang.String)
org/apache/pdfbox/pdfwriter/COSWriter/write(org.apache.pdfbox.pdmodel.PDDocument)#java/security/MessageDigest/update(byte[])
org/apache/pdfbox/pdfwriter/COSWriter/write(org.apache.pdfbox.pdmodel.PDDocument)#java/lang/Object/toString()
org/apache/pdfbox/pdfwriter/COSWriter/write(org.apache.pdfbox.pdmodel.PDDocument)#java/security/MessageDigest/digest()
org/apache/pdfbox/pdfwriter/COSWriter/write(org.apache.pdfbox.pdmodel.PDDocument)#java/lang/String/getBytes(java.lang.String)
org/apache/pdfbox/pdfwriter/COSWriter/write(org.apache.pdfbox.pdmodel.PDDocument)#java/lang/System/currentTimeMillis()
org/apache/pdfbox/cos/COSString/createFromHexString(java.lang.String,boolean)#java/lang/StringBuilder/substring(int,int)
org/apache/pdfbox/cos/COSString/createFromHexString(java.lang.String,boolean)#java/io/IOException/IOException(java.lang.String)
org/apache/pdfbox/cos/COSString/createFromHexString(java.lang.String,boolean)#java/io/IOException/initCause(java.lang.Throwable)
org/apache/pdfbox/cos/COSString/createFromHexString(java.lang.String,boolean)#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/apache/pdfbox/cos/COSString/createFromHexString(java.lang.String,boolean)#java/lang/Integer/parseInt(java.lang.String,int)
org/apache/pdfbox/cos/COSString/createFromHexString(java.lang.String,boolean)#java/lang/StringBuilder/StringBuilder()
org/apache/pdfbox/cos/COSString/createFromHexString(java.lang.String,boolean)#java/lang/StringBuilder/append(char)
org/apache/pdfbox/cos/COSString/createFromHexString(java.lang.String,boolean)#java/lang/StringBuilder/length()
org/apache/pdfbox/cos/COSString/createFromHexString(java.lang.String,boolean)#java/lang/StringBuilder/toString()
org/apache/pdfbox/cos/COSString/createFromHexString(java.lang.String,boolean)#java/lang/StringBuilder/append(java.lang.String)
org/apache/pdfbox/cos/COSString/createFromHexString(java.lang.String,boolean)#java/lang/String/trim()
org/apache/pdfbox/pdmodel/font/PDTrueTypeFont/loadDescriptorDictionary(org.apache.pdfbox.pdmodel.font.PDFontDescriptorDictionary,java.io.InputStream)#org/apache/fontbox/ttf/NameRecord/getString()
org/apache/pdfbox/pdmodel/font/PDTrueTypeFont/loadDescriptorDictionary(org.apache.pdfbox.pdmodel.font.PDFontDescriptorDictionary,java.io.InputStream)#org/apache/fontbox/ttf/TrueTypeFont/getCMAP()
org/apache/pdfbox/pdmodel/font/PDTrueTypeFont/loadDescriptorDictionary(org.apache.pdfbox.pdmodel.font.PDFontDescriptorDictionary,java.io.InputStream)#org/apache/fontbox/ttf/CMAPTable/getCmaps()
org/apache/pdfbox/pdmodel/font/PDTrueTypeFont/loadDescriptorDictionary(org.apache.pdfbox.pdmodel.font.PDFontDescriptorDictionary,java.io.InputStream)#org/apache/fontbox/ttf/TrueTypeFont/getHeader()
org/apache/pdfbox/pdmodel/font/PDTrueTypeFont/loadDescriptorDictionary(org.apache.pdfbox.pdmodel.font.PDFontDescriptorDictionary,java.io.InputStream)#org/apache/fontbox/ttf/TrueTypeFont/getOS2Windows()
org/apache/pdfbox/pdmodel/font/PDTrueTypeFont/loadDescriptorDictionary(org.apache.pdfbox.pdmodel.font.PDFontDescriptorDictionary,java.io.InputStream)#org/apache/fontbox/ttf/HorizontalHeaderTable/getDescender()
org/apache/pdfbox/pdmodel/font/PDTrueTypeFont/loadDescriptorDictionary(org.apache.pdfbox.pdmodel.font.PDFontDescriptorDictionary,java.io.InputStream)#org/apache/fontbox/ttf/OS2WindowsMetricsTable/getWeightClass()
org/apache/pdfbox/pdmodel/font/PDTrueTypeFont/loadDescriptorDictionary(org.apache.pdfbox.pdmodel.font.PDFontDescriptorDictionary,java.io.InputStream)#java/util/ArrayList/ArrayList(int)
org/apache/pdfbox/pdmodel/font/PDTrueTypeFont/loadDescriptorDictionary(org.apache.pdfbox.pdmodel.font.PDFontDescriptorDictionary,java.io.InputStream)#org/apache/fontbox/ttf/CMAPEncodingEntry/getPlatformId()
org/apache/pdfbox/pdmodel/font/PDTrueTypeFont/loadDescriptorDictionary(org.apache.pdfbox.pdmodel.font.PDFontDescriptorDictionary,java.io.InputStream)#org/apache/fontbox/ttf/HorizontalHeaderTable/getAscender()
org/apache/pdfbox/pdmodel/font/PDTrueTypeFont/loadDescriptorDictionary(org.apache.pdfbox.pdmodel.font.PDFontDescriptorDictionary,java.io.InputStream)#org/apache/pdfbox/pdmodel/font/PDFontDescriptorDictionary/setNonSymbolic(boolean)
org/apache/pdfbox/pdmodel/font/PDTrueTypeFont/loadDescriptorDictionary(org.apache.pdfbox.pdmodel.font.PDFontDescriptorDictionary,java.io.InputStream)#org/apache/fontbox/ttf/HeaderTable/getUnitsPerEm()
org/apache/pdfbox/pdmodel/font/PDTrueTypeFont/loadDescriptorDictionary(org.apache.pdfbox.pdmodel.font.PDFontDescriptorDictionary,java.io.InputStream)#org/apache/fontbox/ttf/PostScriptTable/getItalicAngle()
org/apache/pdfbox/pdmodel/font/PDTrueTypeFont/loadDescriptorDictionary(org.apache.pdfbox.pdmodel.font.PDFontDescriptorDictionary,java.io.InputStream)#org/apache/fontbox/ttf/OS2WindowsMetricsTable/getWidthClass()
org/apache/pdfbox/pdmodel/font/PDTrueTypeFont/loadDescriptorDictionary(org.apache.pdfbox.pdmodel.font.PDFontDescriptorDictionary,java.io.InputStream)#org/apache/fontbox/ttf/HorizontalMetricsTable/getAdvanceWidth()
org/apache/pdfbox/pdmodel/font/PDTrueTypeFont/loadDescriptorDictionary(org.apache.pdfbox.pdmodel.font.PDFontDescriptorDictionary,java.io.InputStream)#org/apache/fontbox/ttf/PostScriptTable/getIsFixedPitch()
org/apache/pdfbox/pdmodel/font/PDTrueTypeFont/loadDescriptorDictionary(org.apache.pdfbox.pdmodel.font.PDFontDescriptorDictionary,java.io.InputStream)#org/apache/pdfbox/pdmodel/font/PDFontDescriptorDictionary/setSerif(boolean)
org/apache/pdfbox/pdmodel/font/PDTrueTypeFont/loadDescriptorDictionary(org.apache.pdfbox.pdmodel.font.PDFontDescriptorDictionary,java.io.InputStream)#org/apache/fontbox/ttf/CMAPEncodingEntry/getGlyphIdToCharacterCode()
org/apache/pdfbox/pdmodel/font/PDTrueTypeFont/loadDescriptorDictionary(org.apache.pdfbox.pdmodel.font.PDFontDescriptorDictionary,java.io.InputStream)#org/apache/fontbox/ttf/HeaderTable/getYMin()
org/apache/pdfbox/pdmodel/font/PDTrueTypeFont/loadDescriptorDictionary(org.apache.pdfbox.pdmodel.font.PDFontDescriptorDictionary,java.io.InputStream)#org/apache/fontbox/ttf/TrueTypeFont/getHorizontalMetrics()
org/apache/pdfbox/pdmodel/font/PDTrueTypeFont/loadDescriptorDictionary(org.apache.pdfbox.pdmodel.font.PDFontDescriptorDictionary,java.io.InputStream)#org/apache/fontbox/ttf/HeaderTable/getXMin()
org/apache/pdfbox/pdmodel/font/PDTrueTypeFont/loadDescriptorDictionary(org.apache.pdfbox.pdmodel.font.PDFontDescriptorDictionary,java.io.InputStream)#org/apache/fontbox/ttf/TTFParser/TTFParser()
org/apache/pdfbox/pdmodel/font/PDTrueTypeFont/loadDescriptorDictionary(org.apache.pdfbox.pdmodel.font.PDFontDescriptorDictionary,java.io.InputStream)#org/apache/pdfbox/pdmodel/font/PDTrueTypeFont/setLastChar(int)
org/apache/pdfbox/pdmodel/font/PDTrueTypeFont/loadDescriptorDictionary(org.apache.pdfbox.pdmodel.font.PDFontDescriptorDictionary,java.io.InputStream)#org/apache/fontbox/ttf/TTFParser/parseTTF(java.io.InputStream)
org/apache/pdfbox/pdmodel/font/PDTrueTypeFont/loadDescriptorDictionary(org.apache.pdfbox.pdmodel.font.PDFontDescriptorDictionary,java.io.InputStream)#java/lang/Float/valueOf(float)
org/apache/pdfbox/pdmodel/font/PDTrueTypeFont/loadDescriptorDictionary(org.apache.pdfbox.pdmodel.font.PDFontDescriptorDictionary,java.io.InputStream)#org/apache/fontbox/ttf/PostScriptTable/getGlyphNames()
org/apache/pdfbox/pdmodel/font/PDTrueTypeFont/loadDescriptorDictionary(org.apache.pdfbox.pdmodel.font.PDFontDescriptorDictionary,java.io.InputStream)#java/util/List/size()
org/apache/pdfbox/pdmodel/font/PDTrueTypeFont/loadDescriptorDictionary(org.apache.pdfbox.pdmodel.font.PDFontDescriptorDictionary,java.io.InputStream)#org/apache/fontbox/ttf/TrueTypeFont/close()
org/apache/pdfbox/pdmodel/font/PDTrueTypeFont/loadDescriptorDictionary(org.apache.pdfbox.pdmodel.font.PDFontDescriptorDictionary,java.io.InputStream)#org/apache/pdfbox/pdmodel/font/PDFontDescriptorDictionary/setSymbolic(boolean)
org/apache/pdfbox/pdmodel/font/PDTrueTypeFont/loadDescriptorDictionary(org.apache.pdfbox.pdmodel.font.PDFontDescriptorDictionary,java.io.InputStream)#org/apache/fontbox/util/BoundingBox/getUpperRightY()
org/apache/pdfbox/pdmodel/font/PDTrueTypeFont/loadDescriptorDictionary(org.apache.pdfbox.pdmodel.font.PDFontDescriptorDictionary,java.io.InputStream)#org/apache/pdfbox/pdmodel/font/PDTrueTypeFont/setWidths(java.util.List)
org/apache/pdfbox/pdmodel/font/PDTrueTypeFont/loadDescriptorDictionary(org.apache.pdfbox.pdmodel.font.PDFontDescriptorDictionary,java.io.InputStream)#java/lang/String/equals(java.lang.Object)
org/apache/pdfbox/pdmodel/font/PDTrueTypeFont/loadDescriptorDictionary(org.apache.pdfbox.pdmodel.font.PDFontDescriptorDictionary,java.io.InputStream)#org/apache/fontbox/ttf/TrueTypeFont/getNaming()
org/apache/pdfbox/pdmodel/font/PDTrueTypeFont/loadDescriptorDictionary(org.apache.pdfbox.pdmodel.font.PDFontDescriptorDictionary,java.io.InputStream)#org/apache/fontbox/ttf/OS2WindowsMetricsTable/getFamilyClass()
org/apache/pdfbox/pdmodel/font/PDTrueTypeFont/loadDescriptorDictionary(org.apache.pdfbox.pdmodel.font.PDFontDescriptorDictionary,java.io.InputStream)#org/apache/pdfbox/pdmodel/font/PDFontDescriptorDictionary/setFixedPitch(boolean)
org/apache/pdfbox/pdmodel/font/PDTrueTypeFont/loadDescriptorDictionary(org.apache.pdfbox.pdmodel.font.PDFontDescriptorDictionary,java.io.InputStream)#org/apache/pdfbox/pdmodel/font/PDFontDescriptorDictionary/setScript(boolean)
org/apache/pdfbox/pdmodel/font/PDTrueTypeFont/loadDescriptorDictionary(org.apache.pdfbox.pdmodel.font.PDFontDescriptorDictionary,java.io.InputStream)#org/apache/fontbox/ttf/CMAPEncodingEntry/getPlatformEncodingId()
org/apache/pdfbox/pdmodel/font/PDTrueTypeFont/loadDescriptorDictionary(org.apache.pdfbox.pdmodel.font.PDFontDescriptorDictionary,java.io.InputStream)#org/apache/fontbox/ttf/TrueTypeFont/getGlyph()
org/apache/pdfbox/pdmodel/font/PDTrueTypeFont/loadDescriptorDictionary(org.apache.pdfbox.pdmodel.font.PDFontDescriptorDictionary,java.io.InputStream)#java/lang/Float/floatValue()
org/apache/pdfbox/pdmodel/font/PDTrueTypeFont/loadDescriptorDictionary(org.apache.pdfbox.pdmodel.font.PDFontDescriptorDictionary,java.io.InputStream)#java/util/List/add(java.lang.Object)
org/apache/pdfbox/pdmodel/font/PDTrueTypeFont/loadDescriptorDictionary(org.apache.pdfbox.pdmodel.font.PDFontDescriptorDictionary,java.io.InputStream)#org/apache/fontbox/ttf/TrueTypeFont/getPostScript()
org/apache/pdfbox/pdmodel/font/PDTrueTypeFont/loadDescriptorDictionary(org.apache.pdfbox.pdmodel.font.PDFontDescriptorDictionary,java.io.InputStream)#org/apache/fontbox/ttf/NameRecord/getNameId()
org/apache/pdfbox/pdmodel/font/PDTrueTypeFont/loadDescriptorDictionary(org.apache.pdfbox.pdmodel.font.PDFontDescriptorDictionary,java.io.InputStream)#org/apache/fontbox/ttf/NamingTable/getNameRecords()
org/apache/pdfbox/pdmodel/font/PDTrueTypeFont/loadDescriptorDictionary(org.apache.pdfbox.pdmodel.font.PDFontDescriptorDictionary,java.io.InputStream)#org/apache/fontbox/ttf/GlyphData/getBoundingBox()
org/apache/pdfbox/pdmodel/font/PDTrueTypeFont/loadDescriptorDictionary(org.apache.pdfbox.pdmodel.font.PDFontDescriptorDictionary,java.io.InputStream)#java/util/List/get(int)
org/apache/pdfbox/pdmodel/font/PDTrueTypeFont/loadDescriptorDictionary(org.apache.pdfbox.pdmodel.font.PDFontDescriptorDictionary,java.io.InputStream)#org/apache/pdfbox/pdmodel/font/PDTrueTypeFont/setBaseFont(java.lang.String)
org/apache/pdfbox/pdmodel/font/PDTrueTypeFont/loadDescriptorDictionary(org.apache.pdfbox.pdmodel.font.PDFontDescriptorDictionary,java.io.InputStream)#java/util/List/set(int,java.lang.Object)
org/apache/pdfbox/pdmodel/font/PDTrueTypeFont/loadDescriptorDictionary(org.apache.pdfbox.pdmodel.font.PDFontDescriptorDictionary,java.io.InputStream)#org/apache/pdfbox/pdmodel/font/PDTrueTypeFont/setFirstChar(int)
org/apache/pdfbox/pdmodel/font/PDTrueTypeFont/loadDescriptorDictionary(org.apache.pdfbox.pdmodel.font.PDFontDescriptorDictionary,java.io.InputStream)#org/apache/fontbox/ttf/HeaderTable/getYMax()
org/apache/pdfbox/pdmodel/font/PDTrueTypeFont/loadDescriptorDictionary(org.apache.pdfbox.pdmodel.font.PDFontDescriptorDictionary,java.io.InputStream)#org/apache/fontbox/ttf/HeaderTable/getXMax()
org/apache/pdfbox/pdmodel/font/PDTrueTypeFont/loadDescriptorDictionary(org.apache.pdfbox.pdmodel.font.PDFontDescriptorDictionary,java.io.InputStream)#org/apache/fontbox/ttf/TrueTypeFont/getHorizontalHeader()
org/apache/pdfbox/pdmodel/font/PDTrueTypeFont/loadDescriptorDictionary(org.apache.pdfbox.pdmodel.font.PDFontDescriptorDictionary,java.io.InputStream)#org/apache/fontbox/ttf/GlyphTable/getGlyphs()
org/apache/pdfbox/pdmodel/font/PDTrueTypeFont/getExternalFontFile2(org.apache.pdfbox.pdmodel.font.PDFontDescriptorDictionary)#java/util/Properties/get(java.lang.Object)
org/apache/pdfbox/pdmodel/font/PDTrueTypeFont/getExternalFontFile2(org.apache.pdfbox.pdmodel.font.PDFontDescriptorDictionary)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/pdfbox/pdmodel/font/PDTrueTypeFont/getExternalFontFile2(org.apache.pdfbox.pdmodel.font.PDFontDescriptorDictionary)#java/util/Properties/getProperty(java.lang.String)
org/apache/pdfbox/pdmodel/font/PDTrueTypeFont/getExternalFontFile2(org.apache.pdfbox.pdmodel.font.PDFontDescriptorDictionary)#java/io/IOException/IOException(java.lang.String)
org/apache/pdfbox/pdmodel/font/PDTrueTypeFont/getExternalFontFile2(org.apache.pdfbox.pdmodel.font.PDFontDescriptorDictionary)#java/lang/StringBuilder/append(java.lang.String)
org/apache/pdfbox/pdmodel/font/PDTrueTypeFont/getExternalFontFile2(org.apache.pdfbox.pdmodel.font.PDFontDescriptorDictionary)#java/util/Properties/containsKey(java.lang.Object)
org/apache/pdfbox/pdmodel/font/PDTrueTypeFont/getExternalFontFile2(org.apache.pdfbox.pdmodel.font.PDFontDescriptorDictionary)#java/util/Map/get(java.lang.Object)
org/apache/pdfbox/pdmodel/font/PDTrueTypeFont/getExternalFontFile2(org.apache.pdfbox.pdmodel.font.PDFontDescriptorDictionary)#org/apache/fontbox/ttf/TTFParser/parseTTF(java.io.InputStream)
org/apache/pdfbox/pdmodel/font/PDTrueTypeFont/getExternalFontFile2(org.apache.pdfbox.pdmodel.font.PDFontDescriptorDictionary)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/pdfbox/pdmodel/font/PDTrueTypeFont/getExternalFontFile2(org.apache.pdfbox.pdmodel.font.PDFontDescriptorDictionary)#java/lang/StringBuilder/toString()
org/apache/pdfbox/pdmodel/font/PDTrueTypeFont/getExternalFontFile2(org.apache.pdfbox.pdmodel.font.PDFontDescriptorDictionary)#org/apache/fontbox/ttf/TTFParser/TTFParser()
org/apache/pdfbox/pdmodel/font/PDTrueTypeFont/getExternalFontFile2(org.apache.pdfbox.pdmodel.font.PDFontDescriptorDictionary)#java/lang/StringBuilder/StringBuilder()
org/apache/pdfbox/pdmodel/font/PDTrueTypeFont/getExternalFontFile2(org.apache.pdfbox.pdmodel.font.PDFontDescriptorDictionary)#org/apache/pdfbox/pdmodel/font/PDTrueTypeFont/getBaseFont()
org/apache/pdfbox/filter/JPXFilter/decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)#java/awt/image/DataBuffer/getDataType()
org/apache/pdfbox/filter/JPXFilter/decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)#java/lang/StringBuilder/append(java.lang.String)
org/apache/pdfbox/filter/JPXFilter/decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)#java/lang/StringBuilder/append(int)
org/apache/pdfbox/filter/JPXFilter/decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)#java/awt/image/DataBufferByte/getData()
org/apache/pdfbox/filter/JPXFilter/decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)#javax/imageio/ImageIO/read(java.io.InputStream)
org/apache/pdfbox/filter/JPXFilter/decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)#java/lang/StringBuilder/StringBuilder()
org/apache/pdfbox/filter/JPXFilter/decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)#java/awt/image/BufferedImage/getData()
org/apache/pdfbox/filter/JPXFilter/decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)#org/apache/commons/logging/Log/error(java.lang.Object)
org/apache/pdfbox/filter/JPXFilter/decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)#java/awt/image/Raster/getDataBuffer()
org/apache/pdfbox/filter/JPXFilter/decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)#java/io/OutputStream/write(byte[])
org/apache/pdfbox/filter/JPXFilter/decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)#java/lang/StringBuilder/toString()
org/apache/pdfbox/pdmodel/font/PDCIDFont/determineEncoding()#org/apache/pdfbox/pdmodel/font/PDCIDFont/parseCmap(java.lang.String,java.io.InputStream)
org/apache/pdfbox/pdmodel/font/PDCIDFont/determineEncoding()#java/lang/StringBuilder/append(java.lang.String)
org/apache/pdfbox/pdmodel/font/PDCIDFont/determineEncoding()#java/util/Map/get(java.lang.Object)
org/apache/pdfbox/pdmodel/font/PDCIDFont/determineEncoding()#java/lang/String/substring(int,int)
org/apache/pdfbox/pdmodel/font/PDCIDFont/determineEncoding()#java/lang/StringBuilder/StringBuilder()
org/apache/pdfbox/pdmodel/font/PDCIDFont/determineEncoding()#org/apache/commons/logging/Log/error(java.lang.Object)
org/apache/pdfbox/pdmodel/font/PDCIDFont/determineEncoding()#java/lang/String/startsWith(java.lang.String)
org/apache/pdfbox/pdmodel/font/PDCIDFont/determineEncoding()#java/lang/String/contains(java.lang.CharSequence)
org/apache/pdfbox/pdmodel/font/PDCIDFont/determineEncoding()#java/lang/String/lastIndexOf(java.lang.String)
org/apache/pdfbox/pdmodel/font/PDCIDFont/determineEncoding()#java/lang/StringBuilder/toString()
org/apache/pdfbox/pdmodel/graphics/xobject/PDCcitt/getRGBImage()#java/io/InputStream/read(byte[],int,int)
org/apache/pdfbox/pdmodel/graphics/xobject/PDCcitt/getRGBImage()#org/apache/pdfbox/cos/COSStream/getDictionaryObject(org.apache.pdfbox.cos.COSName)
org/apache/pdfbox/pdmodel/graphics/xobject/PDCcitt/getRGBImage()#java/io/ByteArrayOutputStream/flush()
org/apache/pdfbox/pdmodel/graphics/xobject/PDCcitt/getRGBImage()#java/awt/image/DataBufferByte/getData()
org/apache/pdfbox/pdmodel/graphics/xobject/PDCcitt/getRGBImage()#java/awt/image/ColorModel/createCompatibleWritableRaster(int,int)
org/apache/pdfbox/pdmodel/graphics/xobject/PDCcitt/getRGBImage()#java/awt/image/BufferedImage/BufferedImage(java.awt.image.ColorModel,java.awt.image.WritableRaster,boolean,java.util.Hashtable)
org/apache/pdfbox/pdmodel/graphics/xobject/PDCcitt/getRGBImage()#java/io/ByteArrayOutputStream/toByteArray()
org/apache/pdfbox/pdmodel/graphics/xobject/PDCcitt/getRGBImage()#java/lang/Math/max(int,int)
org/apache/pdfbox/pdmodel/graphics/xobject/PDCcitt/getRGBImage()#java/awt/image/IndexColorModel/IndexColorModel(int,int,byte[],byte[],byte[],int)
org/apache/pdfbox/pdmodel/graphics/xobject/PDCcitt/getRGBImage()#org/apache/pdfbox/pdmodel/graphics/xobject/PDCcitt/getCOSStream()
org/apache/pdfbox/pdmodel/graphics/xobject/PDCcitt/getRGBImage()#java/io/ByteArrayOutputStream/write(byte[],int,int)
org/apache/pdfbox/pdmodel/graphics/xobject/PDCcitt/getRGBImage()#org/apache/pdfbox/cos/COSStream/getInt(org.apache.pdfbox.cos.COSName,int)
org/apache/pdfbox/pdmodel/graphics/xobject/PDCcitt/getRGBImage()#java/io/ByteArrayOutputStream/size()
org/apache/pdfbox/pdmodel/graphics/xobject/PDCcitt/getRGBImage()#java/lang/Math/min(int,int)
org/apache/pdfbox/pdmodel/graphics/xobject/PDCcitt/getRGBImage()#java/lang/System/arraycopy(java.lang.Object,int,java.lang.Object,int,int)
org/apache/pdfbox/pdmodel/graphics/xobject/PDCcitt/getRGBImage()#java/awt/image/WritableRaster/getDataBuffer()
org/apache/pdfbox/pdmodel/graphics/xobject/PDCcitt/getRGBImage()#java/io/ByteArrayOutputStream/ByteArrayOutputStream()
org/apache/pdfbox/pdfparser/PDFObjectStreamParser/parse()#java/lang/Integer/intValue()
org/apache/pdfbox/pdfparser/PDFObjectStreamParser/parse()#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/pdfbox/pdfparser/PDFObjectStreamParser/parse()#java/lang/StringBuilder/append(java.lang.String)
org/apache/pdfbox/pdfparser/PDFObjectStreamParser/parse()#java/lang/Integer/Integer(int)
org/apache/pdfbox/pdfparser/PDFObjectStreamParser/parse()#org/apache/commons/logging/Log/isDebugEnabled()
org/apache/pdfbox/pdfparser/PDFObjectStreamParser/parse()#org/apache/pdfbox/pdfparser/PDFObjectStreamParser/parseDirObject()
org/apache/pdfbox/pdfparser/PDFObjectStreamParser/parse()#java/lang/StringBuilder/StringBuilder()
org/apache/pdfbox/pdfparser/PDFObjectStreamParser/parse()#java/util/List/add(java.lang.Object)
org/apache/pdfbox/pdfparser/PDFObjectStreamParser/parse()#java/lang/StringBuilder/append(java.lang.Object)
org/apache/pdfbox/pdfparser/PDFObjectStreamParser/parse()#org/apache/pdfbox/cos/COSStream/getInt(java.lang.String)
org/apache/pdfbox/pdfparser/PDFObjectStreamParser/parse()#java/lang/StringBuilder/toString()
org/apache/pdfbox/pdfparser/PDFObjectStreamParser/parse()#java/util/ArrayList/ArrayList(int)
org/apache/pdfbox/pdfparser/PDFObjectStreamParser/parse()#org/apache/pdfbox/io/PushBackInputStream/close()
org/apache/pdfbox/pdfparser/PDFObjectStreamParser/parse()#org/apache/pdfbox/pdfparser/PDFObjectStreamParser/readInt()
org/apache/pdfbox/pdfparser/PDFObjectStreamParser/parse()#java/util/List/get(int)
org/apache/pdfbox/util/PDFCloneUtility/cloneMerge(org.apache.pdfbox.pdmodel.common.COSObjectable,org.apache.pdfbox.pdmodel.common.COSObjectable)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/pdfbox/util/PDFCloneUtility/cloneMerge(org.apache.pdfbox.pdmodel.common.COSObjectable,org.apache.pdfbox.pdmodel.common.COSObjectable)#java/util/Iterator/hasNext()
org/apache/pdfbox/util/PDFCloneUtility/cloneMerge(org.apache.pdfbox.pdmodel.common.COSObjectable,org.apache.pdfbox.pdmodel.common.COSObjectable)#java/util/Map/get(java.lang.Object)
org/apache/pdfbox/util/PDFCloneUtility/cloneMerge(org.apache.pdfbox.pdmodel.common.COSObjectable,org.apache.pdfbox.pdmodel.common.COSObjectable)#java/util/Iterator/next()
org/apache/pdfbox/util/PDFCloneUtility/cloneMerge(org.apache.pdfbox.pdmodel.common.COSObjectable,org.apache.pdfbox.pdmodel.common.COSObjectable)#org/apache/pdfbox/cos/COSStream/setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)
org/apache/pdfbox/util/PDFCloneUtility/cloneMerge(org.apache.pdfbox.pdmodel.common.COSObjectable,org.apache.pdfbox.pdmodel.common.COSObjectable)#java/util/Set/iterator()
org/apache/pdfbox/util/PDFCloneUtility/cloneMerge(org.apache.pdfbox.pdmodel.common.COSObjectable,org.apache.pdfbox.pdmodel.common.COSObjectable)#java/util/List/add(java.lang.Object)
org/apache/pdfbox/util/PDFCloneUtility/cloneMerge(org.apache.pdfbox.pdmodel.common.COSObjectable,org.apache.pdfbox.pdmodel.common.COSObjectable)#java/util/List/get(int)
org/apache/pdfbox/util/PDFCloneUtility/cloneMerge(org.apache.pdfbox.pdmodel.common.COSObjectable,org.apache.pdfbox.pdmodel.common.COSObjectable)#java/util/Map$Entry/getKey()
org/apache/pdfbox/util/PDFCloneUtility/cloneMerge(org.apache.pdfbox.pdmodel.common.COSObjectable,org.apache.pdfbox.pdmodel.common.COSObjectable)#java/util/List/size()
org/apache/pdfbox/util/PDFCloneUtility/cloneMerge(org.apache.pdfbox.pdmodel.common.COSObjectable,org.apache.pdfbox.pdmodel.common.COSObjectable)#java/util/Map$Entry/getValue()
org/apache/pdfbox/util/PDFCloneUtility/cloneMerge(org.apache.pdfbox.pdmodel.common.COSObjectable,org.apache.pdfbox.pdmodel.common.COSObjectable)#org/apache/pdfbox/cos/COSStream/entrySet()
org/apache/pdfbox/util/PDFCloneUtility/cloneForNewDocument(java.lang.Object)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/pdfbox/util/PDFCloneUtility/cloneForNewDocument(java.lang.Object)#java/util/Map$Entry/getKey()
org/apache/pdfbox/util/PDFCloneUtility/cloneForNewDocument(java.lang.Object)#java/util/Map/get(java.lang.Object)
org/apache/pdfbox/util/PDFCloneUtility/cloneForNewDocument(java.lang.Object)#java/util/Iterator/next()
org/apache/pdfbox/util/PDFCloneUtility/cloneForNewDocument(java.lang.Object)#org/apache/pdfbox/cos/COSStream/setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)
org/apache/pdfbox/util/PDFCloneUtility/cloneForNewDocument(java.lang.Object)#java/util/Set/iterator()
org/apache/pdfbox/util/PDFCloneUtility/cloneForNewDocument(java.lang.Object)#java/util/List/get(int)
org/apache/pdfbox/util/PDFCloneUtility/cloneForNewDocument(java.lang.Object)#java/util/Iterator/hasNext()
org/apache/pdfbox/util/PDFCloneUtility/cloneForNewDocument(java.lang.Object)#java/util/List/size()
org/apache/pdfbox/util/PDFCloneUtility/cloneForNewDocument(java.lang.Object)#java/util/Map$Entry/getValue()
org/apache/pdfbox/util/PDFCloneUtility/cloneForNewDocument(java.lang.Object)#org/apache/pdfbox/cos/COSStream/entrySet()
org/apache/pdfbox/pdfparser/PDFParser/parseXrefTable(int)#org/apache/pdfbox/pdfparser/PDFParser/readLine()
org/apache/pdfbox/pdfparser/PDFParser/parseXrefTable(int)#org/apache/commons/logging/Log/warn(java.lang.Object)
org/apache/pdfbox/pdfparser/PDFParser/parseXrefTable(int)#java/lang/StringBuilder/append(int)
org/apache/pdfbox/pdfparser/PDFParser/parseXrefTable(int)#java/lang/String/equals(java.lang.Object)
org/apache/pdfbox/pdfparser/PDFParser/parseXrefTable(int)#java/lang/StringBuilder/StringBuilder()
org/apache/pdfbox/pdfparser/PDFParser/parseXrefTable(int)#java/lang/Integer/parseInt(java.lang.String)
org/apache/pdfbox/pdfparser/PDFParser/parseXrefTable(int)#org/apache/pdfbox/pdfparser/PDFParser/readInt()
org/apache/pdfbox/pdfparser/PDFParser/parseXrefTable(int)#org/apache/pdfbox/pdfparser/PDFParser/skipSpaces()
org/apache/pdfbox/pdfparser/PDFParser/parseXrefTable(int)#java/lang/String/split(java.lang.String)
org/apache/pdfbox/pdfparser/PDFParser/parseXrefTable(int)#java/io/IOException/IOException(java.lang.String)
org/apache/pdfbox/pdfparser/PDFParser/parseXrefTable(int)#java/lang/StringBuilder/append(java.lang.String)
org/apache/pdfbox/pdfparser/PDFParser/parseXrefTable(int)#java/lang/String/trim()
org/apache/pdfbox/pdfparser/PDFParser/parseXrefTable(int)#org/apache/pdfbox/pdfparser/PDFParser/isEndOfName(char)
org/apache/pdfbox/pdfparser/PDFParser/parseXrefTable(int)#org/apache/pdfbox/pdfparser/PDFParser/readString()
org/apache/pdfbox/pdfparser/PDFParser/parseXrefTable(int)#java/lang/StringBuilder/toString()
org/apache/pdfbox/pdfparser/PDFParser/parseXrefTable(int)#java/lang/NumberFormatException/getMessage()
org/apache/pdfbox/pdfparser/PDFParser/parseObject()#org/apache/pdfbox/pdfparser/PDFParser/skipSpaces()
org/apache/pdfbox/pdfparser/PDFParser/parseObject()#org/apache/commons/logging/Log/warn(java.lang.Object)
org/apache/pdfbox/pdfparser/PDFParser/parseObject()#java/lang/String/equals(java.lang.Object)
org/apache/pdfbox/pdfparser/PDFParser/parseObject()#java/lang/String/startsWith(java.lang.String)
org/apache/pdfbox/pdfparser/PDFParser/parseObject()#org/apache/pdfbox/pdfparser/PDFParser/readInt()
org/apache/pdfbox/pdfparser/PDFParser/parseObject()#org/apache/pdfbox/pdfparser/PDFParser/readLine()
org/apache/pdfbox/pdfparser/PDFParser/parseObject()#org/apache/pdfbox/pdfparser/PDFParser/parseCOSStream(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.io.RandomAccess)
org/apache/pdfbox/pdfparser/PDFParser/parseObject()#java/io/IOException/IOException(java.lang.String)
org/apache/pdfbox/pdfparser/PDFParser/parseObject()#org/apache/pdfbox/cos/COSStream/getItem(org.apache.pdfbox.cos.COSName)
org/apache/pdfbox/pdfparser/PDFParser/parseObject()#java/lang/String/trim()
org/apache/pdfbox/pdfparser/PDFParser/parseObject()#java/lang/StringBuilder/append(java.lang.String)
org/apache/pdfbox/pdfparser/PDFParser/parseObject()#org/apache/pdfbox/pdfparser/PDFParser/parseDirObject()
org/apache/pdfbox/pdfparser/PDFParser/parseObject()#java/lang/StringBuilder/StringBuilder()
org/apache/pdfbox/pdfparser/PDFParser/parseObject()#java/lang/String/getBytes(java.lang.String)
org/apache/pdfbox/pdfparser/PDFParser/parseObject()#java/lang/String/substring(int)
org/apache/pdfbox/pdfparser/PDFParser/parseObject()#java/lang/StringBuilder/append(java.lang.Object)
org/apache/pdfbox/pdfparser/PDFParser/parseObject()#org/apache/pdfbox/pdfparser/PDFParser/readString(int)
org/apache/pdfbox/pdfparser/PDFParser/parseObject()#org/apache/pdfbox/pdfparser/PDFParser/isWhitespace(int)
org/apache/pdfbox/pdfparser/PDFParser/parseObject()#org/apache/pdfbox/pdfparser/PDFParser/readString()
org/apache/pdfbox/pdfparser/PDFParser/parseObject()#java/lang/StringBuilder/toString()
org/apache/pdfbox/pdfparser/PDFParser/parseObject()#java/lang/String/endsWith(java.lang.String)
org/apache/pdfbox/pdfparser/PDFParser/parseHeader()#org/apache/pdfbox/pdfparser/PDFParser/readLine()
org/apache/pdfbox/pdfparser/PDFParser/parseHeader()#java/lang/String/length()
org/apache/pdfbox/pdfparser/PDFParser/parseHeader()#java/lang/Character/isDigit(char)
org/apache/pdfbox/pdfparser/PDFParser/parseHeader()#java/lang/String/substring(int,int)
org/apache/pdfbox/pdfparser/PDFParser/parseHeader()#java/lang/String/getBytes(java.lang.String)
org/apache/pdfbox/pdfparser/PDFParser/parseHeader()#java/lang/String/startsWith(java.lang.String)
org/apache/pdfbox/pdfparser/PDFParser/parseHeader()#java/lang/StringBuilder/append(java.lang.Object)
org/apache/pdfbox/pdfparser/PDFParser/parseHeader()#java/lang/Math/min(int,int)
org/apache/pdfbox/pdfparser/PDFParser/parseHeader()#java/lang/String/matches(java.lang.String)
org/apache/pdfbox/pdfparser/PDFParser/parseHeader()#java/lang/StringBuilder/toString()
org/apache/pdfbox/pdfparser/PDFParser/parseHeader()#java/lang/Float/parseFloat(java.lang.String)
org/apache/pdfbox/pdfparser/PDFParser/parseHeader()#java/io/IOException/IOException(java.lang.String)
org/apache/pdfbox/pdfparser/PDFParser/parseHeader()#java/lang/StringBuilder/append(java.lang.String)
org/apache/pdfbox/pdfparser/PDFParser/parseHeader()#java/lang/String/charAt(int)
org/apache/pdfbox/pdfparser/PDFParser/parseHeader()#java/lang/StringBuilder/StringBuilder()
org/apache/pdfbox/pdfparser/PDFParser/parseHeader()#java/lang/String/indexOf(java.lang.String)
org/apache/pdfbox/PDFDebugger/convertToString(java.lang.Object)#java/io/InputStream/read(byte[],int,int)
org/apache/pdfbox/PDFDebugger/convertToString(java.lang.Object)#java/lang/StringBuilder/append(java.lang.String)
org/apache/pdfbox/PDFDebugger/convertToString(java.lang.Object)#java/lang/StringBuilder/append(int)
org/apache/pdfbox/PDFDebugger/convertToString(java.lang.Object)#java/lang/StringBuilder/append(boolean)
org/apache/pdfbox/PDFDebugger/convertToString(java.lang.Object)#java/lang/StringBuilder/StringBuilder()
org/apache/pdfbox/PDFDebugger/convertToString(java.lang.Object)#java/io/ByteArrayOutputStream/ByteArrayOutputStream()
org/apache/pdfbox/PDFDebugger/convertToString(java.lang.Object)#java/io/IOException/printStackTrace()
org/apache/pdfbox/PDFDebugger/convertToString(java.lang.Object)#java/io/ByteArrayOutputStream/write(byte[],int,int)
org/apache/pdfbox/PDFDebugger/convertToString(java.lang.Object)#java/lang/StringBuilder/append(float)
org/apache/pdfbox/PDFDebugger/convertToString(java.lang.Object)#java/lang/StringBuilder/toString()
org/apache/pdfbox/PDFDebugger/convertToString(java.lang.Object)#java/io/ByteArrayOutputStream/toString()
org/apache/pdfbox/PDFDebugger/openMenuItemActionPerformed(java.awt.event.ActionEvent)#java/io/File/File(java.lang.String)
org/apache/pdfbox/PDFDebugger/openMenuItemActionPerformed(java.awt.event.ActionEvent)#java/lang/Exception/printStackTrace()
org/apache/pdfbox/PDFDebugger/openMenuItemActionPerformed(java.awt.event.ActionEvent)#javax/swing/JFileChooser/setFileFilter(javax.swing.filechooser.FileFilter)
org/apache/pdfbox/PDFDebugger/openMenuItemActionPerformed(java.awt.event.ActionEvent)#javax/swing/JFileChooser/getSelectedFile()
org/apache/pdfbox/PDFDebugger/openMenuItemActionPerformed(java.awt.event.ActionEvent)#javax/swing/JFileChooser/showOpenDialog(java.awt.Component)
org/apache/pdfbox/PDFDebugger/openMenuItemActionPerformed(java.awt.event.ActionEvent)#java/io/File/getPath()
org/apache/pdfbox/PDFDebugger/openMenuItemActionPerformed(java.awt.event.ActionEvent)#javax/swing/JFileChooser/setCurrentDirectory(java.io.File)
org/apache/pdfbox/PDFDebugger/openMenuItemActionPerformed(java.awt.event.ActionEvent)#javax/swing/JFileChooser/JFileChooser()
org/apache/pdfbox/PDFDebugger/openMenuItemActionPerformed(java.awt.event.ActionEvent)#java/io/File/getParentFile()
org/apache/pdfbox/PDFDebugger/initComponents()#org/apache/pdfbox/PDFDebugger/getContentPane()
org/apache/pdfbox/PDFDebugger/initComponents()#org/apache/pdfbox/PDFDebugger/setTitle(java.lang.String)
org/apache/pdfbox/PDFDebugger/initComponents()#javax/swing/JScrollPane/setPreferredSize(java.awt.Dimension)
org/apache/pdfbox/PDFDebugger/initComponents()#org/apache/pdfbox/PDFDebugger/addWindowListener(java.awt.event.WindowListener)
org/apache/pdfbox/PDFDebugger/initComponents()#javax/swing/JScrollPane/setBorder(javax.swing.border.Border)
org/apache/pdfbox/PDFDebugger/initComponents()#javax/swing/JTree/addTreeSelectionListener(javax.swing.event.TreeSelectionListener)
org/apache/pdfbox/PDFDebugger/initComponents()#org/apache/pdfbox/PDFDebugger$4/4(org.apache.pdfbox.PDFDebugger)
org/apache/pdfbox/PDFDebugger/initComponents()#javax/swing/JMenu/setText(java.lang.String)
org/apache/pdfbox/PDFDebugger/initComponents()#org/apache/pdfbox/PDFDebugger$1/1(org.apache.pdfbox.PDFDebugger)
org/apache/pdfbox/PDFDebugger/initComponents()#java/awt/Toolkit/getDefaultToolkit()
org/apache/pdfbox/PDFDebugger/initComponents()#javax/swing/border/BevelBorder/BevelBorder(int)
org/apache/pdfbox/PDFDebugger/initComponents()#javax/swing/JMenuItem/setToolTipText(java.lang.String)
org/apache/pdfbox/PDFDebugger/initComponents()#java/awt/Dimension/Dimension(int,int)
org/apache/pdfbox/PDFDebugger/initComponents()#javax/swing/JMenuItem/JMenuItem()
org/apache/pdfbox/PDFDebugger/initComponents()#javax/swing/JMenuItem/addActionListener(java.awt.event.ActionListener)
org/apache/pdfbox/PDFDebugger/initComponents()#javax/swing/JMenu/add(javax.swing.JMenuItem)
org/apache/pdfbox/PDFDebugger/initComponents()#javax/swing/JMenuBar/add(javax.swing.JMenu)
org/apache/pdfbox/PDFDebugger/initComponents()#javax/swing/JSplitPane/JSplitPane()
org/apache/pdfbox/PDFDebugger/initComponents()#javax/swing/JScrollPane/JScrollPane()
org/apache/pdfbox/PDFDebugger/initComponents()#javax/swing/JMenuBar/JMenuBar()
org/apache/pdfbox/PDFDebugger/initComponents()#javax/swing/JTextPane/JTextPane()
org/apache/pdfbox/PDFDebugger/initComponents()#javax/swing/JMenuItem/setText(java.lang.String)
org/apache/pdfbox/PDFDebugger/initComponents()#javax/swing/JTree/setCellRenderer(javax.swing.tree.TreeCellRenderer)
org/apache/pdfbox/PDFDebugger/initComponents()#javax/swing/JScrollPane/setViewportView(java.awt.Component)
org/apache/pdfbox/PDFDebugger/initComponents()#java/awt/Toolkit/getScreenSize()
org/apache/pdfbox/PDFDebugger/initComponents()#javax/swing/JTree/setModel(javax.swing.tree.TreeModel)
org/apache/pdfbox/PDFDebugger/initComponents()#javax/swing/JSplitPane/setRightComponent(java.awt.Component)
org/apache/pdfbox/PDFDebugger/initComponents()#org/apache/pdfbox/PDFDebugger$3/3(org.apache.pdfbox.PDFDebugger)
org/apache/pdfbox/PDFDebugger/initComponents()#org/apache/pdfbox/PDFDebugger/setBounds(int,int,int,int)
org/apache/pdfbox/PDFDebugger/initComponents()#java/awt/Container/add(java.awt.Component,java.lang.Object)
org/apache/pdfbox/PDFDebugger/initComponents()#org/apache/pdfbox/PDFDebugger$2/2(org.apache.pdfbox.PDFDebugger)
org/apache/pdfbox/PDFDebugger/initComponents()#javax/swing/JTree/JTree()
org/apache/pdfbox/PDFDebugger/initComponents()#org/apache/pdfbox/PDFDebugger/setJMenuBar(javax.swing.JMenuBar)
org/apache/pdfbox/PDFDebugger/initComponents()#javax/swing/JMenu/JMenu()
org/apache/pdfbox/PDFDebugger/initComponents()#javax/swing/JSplitPane/setLeftComponent(java.awt.Component)
org/apache/pdfbox/pdfparser/PDFStreamParser/parseNextToken()#org/apache/pdfbox/pdfparser/PDFStreamParser/parseCOSDictionary()
org/apache/pdfbox/pdfparser/PDFStreamParser/parseNextToken()#org/apache/pdfbox/pdfparser/PDFStreamParser/skipSpaces()
org/apache/pdfbox/pdfparser/PDFStreamParser/parseNextToken()#java/lang/String/length()
org/apache/pdfbox/pdfparser/PDFStreamParser/parseNextToken()#java/lang/Character/isDigit(char)
org/apache/pdfbox/pdfparser/PDFStreamParser/parseNextToken()#java/lang/StringBuilder/StringBuilder()
org/apache/pdfbox/pdfparser/PDFStreamParser/parseNextToken()#java/lang/StringBuilder/append(char)
org/apache/pdfbox/pdfparser/PDFStreamParser/parseNextToken()#java/io/ByteArrayOutputStream/toByteArray()
org/apache/pdfbox/pdfparser/PDFStreamParser/parseNextToken()#org/apache/pdfbox/pdfparser/PDFStreamParser/isWhitespace(int)
org/apache/pdfbox/pdfparser/PDFStreamParser/parseNextToken()#java/io/ByteArrayOutputStream/ByteArrayOutputStream()
org/apache/pdfbox/pdfparser/PDFStreamParser/parseNextToken()#java/lang/StringBuffer/StringBuffer()
org/apache/pdfbox/pdfparser/PDFStreamParser/parseNextToken()#java/lang/StringBuilder/toString()
org/apache/pdfbox/pdfparser/PDFStreamParser/parseNextToken()#org/apache/pdfbox/pdfparser/PDFStreamParser/parseCOSStream(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.io.RandomAccess)
org/apache/pdfbox/pdfparser/PDFStreamParser/parseNextToken()#java/io/IOException/IOException(java.lang.String)
org/apache/pdfbox/pdfparser/PDFStreamParser/parseNextToken()#org/apache/pdfbox/pdfparser/PDFStreamParser/parseCOSArray()
org/apache/pdfbox/pdfparser/PDFStreamParser/parseNextToken()#java/lang/StringBuilder/append(java.lang.String)
org/apache/pdfbox/pdfparser/PDFStreamParser/parseNextToken()#java/lang/String/trim()
org/apache/pdfbox/pdfparser/PDFStreamParser/parseNextToken()#java/lang/StringBuffer/append(char)
org/apache/pdfbox/pdfparser/PDFStreamParser/parseNextToken()#java/lang/String/equals(java.lang.Object)
org/apache/pdfbox/pdfparser/PDFStreamParser/parseNextToken()#java/lang/StringBuffer/toString()
org/apache/pdfbox/pdfparser/PDFStreamParser/parseNextToken()#org/apache/pdfbox/pdfparser/PDFStreamParser/parseCOSName()
org/apache/pdfbox/pdfparser/PDFStreamParser/parseNextToken()#java/io/ByteArrayOutputStream/write(int)
org/apache/pdfbox/pdfparser/PDFStreamParser/parseNextToken()#org/apache/pdfbox/pdfparser/PDFStreamParser/parseCOSString()
org/apache/pdfbox/pdfparser/PDFStreamParser/parseNextToken()#org/apache/pdfbox/pdfparser/PDFStreamParser/isWhitespace()
org/apache/pdfbox/pdfparser/PDFStreamParser/parseNextToken()#org/apache/pdfbox/pdfparser/PDFStreamParser/readString()
org/apache/pdfbox/pdmodel/graphics/color/PDICCBased/getAlternateColorSpaces()#java/util/ArrayList/ArrayList()
org/apache/pdfbox/pdmodel/graphics/color/PDICCBased/getAlternateColorSpaces()#org/apache/pdfbox/cos/COSStream/getDictionaryObject(org.apache.pdfbox.cos.COSName)
org/apache/pdfbox/pdmodel/graphics/color/PDICCBased/getAlternateColorSpaces()#java/io/IOException/IOException(java.lang.String)
org/apache/pdfbox/pdmodel/graphics/color/PDICCBased/getAlternateColorSpaces()#java/lang/StringBuilder/StringBuilder()
org/apache/pdfbox/pdmodel/graphics/color/PDICCBased/getAlternateColorSpaces()#java/util/List/add(java.lang.Object)
org/apache/pdfbox/pdmodel/graphics/color/PDICCBased/getAlternateColorSpaces()#java/lang/Object/getClass()
org/apache/pdfbox/pdmodel/graphics/color/PDICCBased/getAlternateColorSpaces()#java/lang/StringBuilder/toString()
org/apache/pdfbox/pdmodel/graphics/color/PDICCBased/getAlternateColorSpaces()#java/lang/StringBuilder/append(java.lang.String)
org/apache/pdfbox/pdmodel/graphics/color/PDICCBased/getAlternateColorSpaces()#java/lang/StringBuilder/append(int)
org/apache/pdfbox/pdmodel/graphics/color/PDICCBased/getAlternateColorSpaces()#java/lang/Class/getName()
org/apache/pdfbox/PDFReader/initComponents()#javax/swing/JMenuItem/setToolTipText(java.lang.String)
org/apache/pdfbox/PDFReader/initComponents()#javax/swing/KeyStroke/getKeyStroke(char)
org/apache/pdfbox/PDFReader/initComponents()#javax/swing/JMenuItem/setText(java.lang.String)
org/apache/pdfbox/PDFReader/initComponents()#org/apache/pdfbox/PDFReader/addWindowListener(java.awt.event.WindowListener)
org/apache/pdfbox/PDFReader/initComponents()#org/apache/pdfbox/PDFReader$6/6(org.apache.pdfbox.PDFReader)
org/apache/pdfbox/PDFReader/initComponents()#org/apache/pdfbox/PDFReader$5/5(org.apache.pdfbox.PDFReader)
org/apache/pdfbox/PDFReader/initComponents()#org/apache/pdfbox/PDFReader$4/4(org.apache.pdfbox.PDFReader)
org/apache/pdfbox/PDFReader/initComponents()#org/apache/pdfbox/PDFReader$3/3(org.apache.pdfbox.PDFReader)
org/apache/pdfbox/PDFReader/initComponents()#javax/swing/JMenu/setText(java.lang.String)
org/apache/pdfbox/PDFReader/initComponents()#java/awt/Container/add(java.awt.Component,java.lang.Object)
org/apache/pdfbox/PDFReader/initComponents()#java/awt/Toolkit/getDefaultToolkit()
org/apache/pdfbox/PDFReader/initComponents()#org/apache/pdfbox/PDFReader/getContentPane()
org/apache/pdfbox/PDFReader/initComponents()#javax/swing/JMenuItem/JMenuItem()
org/apache/pdfbox/PDFReader/initComponents()#javax/swing/JMenuItem/addActionListener(java.awt.event.ActionListener)
org/apache/pdfbox/PDFReader/initComponents()#org/apache/pdfbox/PDFReader/setTitle(java.lang.String)
org/apache/pdfbox/PDFReader/initComponents()#javax/swing/JMenu/add(javax.swing.JMenuItem)
org/apache/pdfbox/PDFReader/initComponents()#javax/swing/JMenuBar/add(javax.swing.JMenu)
org/apache/pdfbox/PDFReader/initComponents()#javax/swing/JScrollPane/JScrollPane()
org/apache/pdfbox/PDFReader/initComponents()#javax/swing/JMenuBar/JMenuBar()
org/apache/pdfbox/PDFReader/initComponents()#javax/swing/JScrollPane/setViewportView(java.awt.Component)
org/apache/pdfbox/PDFReader/initComponents()#java/awt/Toolkit/getScreenSize()
org/apache/pdfbox/PDFReader/initComponents()#org/apache/pdfbox/PDFReader$2/2(org.apache.pdfbox.PDFReader)
org/apache/pdfbox/PDFReader/initComponents()#org/apache/pdfbox/PDFReader/setBounds(int,int,int,int)
org/apache/pdfbox/PDFReader/initComponents()#javax/swing/JMenuItem/setAccelerator(javax.swing.KeyStroke)
org/apache/pdfbox/PDFReader/initComponents()#org/apache/pdfbox/PDFReader$1/1(org.apache.pdfbox.PDFReader)
org/apache/pdfbox/PDFReader/initComponents()#org/apache/pdfbox/PDFReader/setJMenuBar(javax.swing.JMenuBar)
org/apache/pdfbox/PDFReader/initComponents()#javax/swing/JMenu/JMenu()
org/apache/pdfbox/PDFReader/openMenuItemActionPerformed(java.awt.event.ActionEvent)#java/io/File/File(java.lang.String)
org/apache/pdfbox/PDFReader/openMenuItemActionPerformed(java.awt.event.ActionEvent)#java/lang/Exception/printStackTrace()
org/apache/pdfbox/PDFReader/openMenuItemActionPerformed(java.awt.event.ActionEvent)#javax/swing/JFileChooser/setFileFilter(javax.swing.filechooser.FileFilter)
org/apache/pdfbox/PDFReader/openMenuItemActionPerformed(java.awt.event.ActionEvent)#javax/swing/JFileChooser/getSelectedFile()
org/apache/pdfbox/PDFReader/openMenuItemActionPerformed(java.awt.event.ActionEvent)#javax/swing/JFileChooser/showOpenDialog(java.awt.Component)
org/apache/pdfbox/PDFReader/openMenuItemActionPerformed(java.awt.event.ActionEvent)#java/io/File/getPath()
org/apache/pdfbox/PDFReader/openMenuItemActionPerformed(java.awt.event.ActionEvent)#javax/swing/JFileChooser/setCurrentDirectory(java.io.File)
org/apache/pdfbox/PDFReader/openMenuItemActionPerformed(java.awt.event.ActionEvent)#javax/swing/JFileChooser/JFileChooser()
org/apache/pdfbox/PDFReader/openMenuItemActionPerformed(java.awt.event.ActionEvent)#java/io/File/getParentFile()
org/apache/pdfbox/pdmodel/font/PDType1CFont/getFontWidth(byte[],int,int)#java/lang/StringBuilder/append(java.lang.String)
org/apache/pdfbox/pdmodel/font/PDType1CFont/getFontWidth(byte[],int,int)#org/apache/fontbox/cff/CFFFont/getName()
org/apache/pdfbox/pdmodel/font/PDType1CFont/getFontWidth(byte[],int,int)#java/util/Map/get(java.lang.Object)
org/apache/pdfbox/pdmodel/font/PDType1CFont/getFontWidth(byte[],int,int)#java/lang/Float/valueOf(float)
org/apache/pdfbox/pdmodel/font/PDType1CFont/getFontWidth(byte[],int,int)#java/lang/StringBuilder/StringBuilder()
org/apache/pdfbox/pdmodel/font/PDType1CFont/getFontWidth(byte[],int,int)#java/lang/Float/floatValue()
org/apache/pdfbox/pdmodel/font/PDType1CFont/getFontWidth(byte[],int,int)#java/lang/StringBuilder/toString()
org/apache/pdfbox/pdmodel/font/PDType1CFont/getFontWidth(byte[],int,int)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/pdfbox/pdmodel/font/PDType1CFont/getFontWidth(byte[],int,int)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/pdfbox/pdmodel/font/PDType1CFont/getFontWidth(byte[],int,int)#java/lang/StringBuilder/append(int)
org/apache/pdfbox/pdmodel/font/PDType1CFont/getFontWidth(byte[],int,int)#java/util/Arrays/equals(byte[],byte[])
org/apache/pdfbox/pdmodel/font/PDType1CFont/getFontWidth(byte[],int,int)#org/apache/fontbox/afm/FontMetric/getCharacterWidth(java.lang.String)
org/apache/pdfbox/pdmodel/font/PDType1CFont/getFontHeight(byte[],int,int)#java/lang/StringBuilder/append(java.lang.String)
org/apache/pdfbox/pdmodel/font/PDType1CFont/getFontHeight(byte[],int,int)#org/apache/fontbox/cff/CFFFont/getName()
org/apache/pdfbox/pdmodel/font/PDType1CFont/getFontHeight(byte[],int,int)#java/lang/StringBuilder/append(int)
org/apache/pdfbox/pdmodel/font/PDType1CFont/getFontHeight(byte[],int,int)#java/util/Map/get(java.lang.Object)
org/apache/pdfbox/pdmodel/font/PDType1CFont/getFontHeight(byte[],int,int)#java/lang/Float/valueOf(float)
org/apache/pdfbox/pdmodel/font/PDType1CFont/getFontHeight(byte[],int,int)#org/apache/fontbox/afm/FontMetric/getCharacterHeight(java.lang.String)
org/apache/pdfbox/pdmodel/font/PDType1CFont/getFontHeight(byte[],int,int)#java/lang/StringBuilder/StringBuilder()
org/apache/pdfbox/pdmodel/font/PDType1CFont/getFontHeight(byte[],int,int)#java/lang/Float/floatValue()
org/apache/pdfbox/pdmodel/font/PDType1CFont/getFontHeight(byte[],int,int)#java/lang/StringBuilder/toString()
org/apache/pdfbox/pdmodel/font/PDType1CFont/getFontHeight(byte[],int,int)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/pdfbox/pdmodel/font/PDType1CFont/getFontHeight(byte[],int,int)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/pdfbox/pdmodel/font/PDType1CFont/prepareFontMetric(org.apache.fontbox.cff.CFFFont)#org/apache/fontbox/cff/CFFFont/addValueToTopDict(java.lang.String,java.lang.Object)
org/apache/pdfbox/pdmodel/font/PDType1CFont/prepareFontMetric(org.apache.fontbox.cff.CFFFont)#org/apache/fontbox/util/BoundingBox/getUpperRightX()
org/apache/pdfbox/pdmodel/font/PDType1CFont/prepareFontMetric(org.apache.fontbox.cff.CFFFont)#org/apache/fontbox/util/BoundingBox/getUpperRightY()
org/apache/pdfbox/pdmodel/font/PDType1CFont/prepareFontMetric(org.apache.fontbox.cff.CFFFont)#java/io/InputStream/close()
org/apache/pdfbox/pdmodel/font/PDType1CFont/prepareFontMetric(org.apache.fontbox.cff.CFFFont)#org/apache/fontbox/util/BoundingBox/getLowerLeftY()
org/apache/pdfbox/pdmodel/font/PDType1CFont/prepareFontMetric(org.apache.fontbox.cff.CFFFont)#java/lang/Integer/valueOf(int)
org/apache/pdfbox/pdmodel/font/PDType1CFont/prepareFontMetric(org.apache.fontbox.cff.CFFFont)#org/apache/fontbox/cff/AFMFormatter/format(org.apache.fontbox.cff.CFFFont)
org/apache/pdfbox/pdmodel/font/PDType1CFont/prepareFontMetric(org.apache.fontbox.cff.CFFFont)#org/apache/fontbox/afm/FontMetric/getFontBBox()
org/apache/pdfbox/pdmodel/font/PDType1CFont/prepareFontMetric(org.apache.fontbox.cff.CFFFont)#java/io/ByteArrayInputStream/ByteArrayInputStream(byte[])
org/apache/pdfbox/pdmodel/font/PDType1CFont/prepareFontMetric(org.apache.fontbox.cff.CFFFont)#java/util/Arrays/asList(java.lang.Object[])
org/apache/pdfbox/pdmodel/font/PDType1CFont/prepareFontMetric(org.apache.fontbox.cff.CFFFont)#org/apache/fontbox/afm/AFMParser/parse()
org/apache/pdfbox/pdmodel/font/PDType1CFont/prepareFontMetric(org.apache.fontbox.cff.CFFFont)#org/apache/fontbox/afm/AFMParser/getResult()
org/apache/pdfbox/pdmodel/font/PDType1CFont/prepareFontMetric(org.apache.fontbox.cff.CFFFont)#org/apache/fontbox/util/BoundingBox/getLowerLeftX()
org/apache/pdfbox/pdmodel/font/PDType1CFont/prepareFontMetric(org.apache.fontbox.cff.CFFFont)#org/apache/fontbox/afm/AFMParser/AFMParser(java.io.InputStream)
org/apache/pdfbox/pdmodel/font/PDType1CFont/load()#org/apache/pdfbox/pdmodel/font/PDType1CFont$PDFEncoding/PDFEncoding(org.apache.fontbox.cff.encoding.CFFEncoding,org.apache.pdfbox.pdmodel.font.PDType1CFont$1)
org/apache/pdfbox/pdmodel/font/PDType1CFont/load()#java/lang/reflect/Field/setAccessible(boolean)
org/apache/pdfbox/pdmodel/font/PDType1CFont/load()#java/util/Map/putAll(java.util.Map)
org/apache/pdfbox/pdmodel/font/PDType1CFont/load()#java/lang/Float/valueOf(float)
org/apache/pdfbox/pdmodel/font/PDType1CFont/load()#org/apache/fontbox/cff/CFFFont/getProperty(java.lang.String)
org/apache/pdfbox/pdmodel/font/PDType1CFont/load()#java/util/Map/values()
org/apache/pdfbox/pdmodel/font/PDType1CFont/load()#org/apache/fontbox/cff/CFFFont/getEncoding()
org/apache/pdfbox/pdmodel/font/PDType1CFont/load()#java/lang/StringBuilder/StringBuilder()
org/apache/pdfbox/pdmodel/font/PDType1CFont/load()#java/util/Map/clear()
org/apache/pdfbox/pdmodel/font/PDType1CFont/load()#org/apache/pdfbox/pdmodel/font/PDType1CFont$PDFCharset/PDFCharset(org.apache.fontbox.cff.charset.CFFCharset,org.apache.pdfbox.pdmodel.font.PDType1CFont$1)
org/apache/pdfbox/pdmodel/font/PDType1CFont/load()#java/util/Map/entrySet()
org/apache/pdfbox/pdmodel/font/PDType1CFont/load()#java/lang/StringBuilder/toString()
org/apache/pdfbox/pdmodel/font/PDType1CFont/load()#org/apache/fontbox/cff/CFFParser/parse(byte[])
org/apache/pdfbox/pdmodel/font/PDType1CFont/load()#java/lang/Integer/intValue()
org/apache/pdfbox/pdmodel/font/PDType1CFont/load()#org/apache/fontbox/cff/CFFParser/CFFParser()
org/apache/pdfbox/pdmodel/font/PDType1CFont/load()#java/lang/String/valueOf(char)
org/apache/pdfbox/pdmodel/font/PDType1CFont/load()#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/pdfbox/pdmodel/font/PDType1CFont/load()#java/lang/Number/floatValue()
org/apache/pdfbox/pdmodel/font/PDType1CFont/load()#org/apache/pdfbox/pdmodel/font/PDType1CFont$PDFCharset/register(int,java.lang.String)
org/apache/pdfbox/pdmodel/font/PDType1CFont/load()#org/apache/fontbox/cff/CFFFont/getMappings()
org/apache/pdfbox/pdmodel/font/PDType1CFont/load()#java/lang/reflect/Field/get(java.lang.Object)
org/apache/pdfbox/pdmodel/font/PDType1CFont/load()#org/apache/fontbox/cff/CFFFont/getCharset()
org/apache/pdfbox/pdmodel/font/PDType1CFont/load()#java/util/Iterator/hasNext()
org/apache/pdfbox/pdmodel/font/PDType1CFont/load()#java/lang/StringBuilder/append(java.lang.String)
org/apache/pdfbox/pdmodel/font/PDType1CFont/load()#java/lang/String/charAt(int)
org/apache/pdfbox/pdmodel/font/PDType1CFont/load()#java/util/Map$Entry/getKey()
org/apache/pdfbox/pdmodel/font/PDType1CFont/load()#java/lang/RuntimeException/RuntimeException(java.lang.Throwable)
org/apache/pdfbox/pdmodel/font/PDType1CFont/load()#java/lang/Class/getDeclaredField(java.lang.String)
org/apache/pdfbox/pdmodel/font/PDType1CFont/load()#java/lang/String/length()
org/apache/pdfbox/pdmodel/font/PDType1CFont/load()#java/util/Map/get(java.lang.Object)
org/apache/pdfbox/pdmodel/font/PDType1CFont/load()#java/util/Iterator/next()
org/apache/pdfbox/pdmodel/font/PDType1CFont/load()#org/apache/fontbox/cff/CFFFont/setCharset(org.apache.fontbox.cff.charset.CFFCharset)
org/apache/pdfbox/pdmodel/font/PDType1CFont/load()#org/apache/fontbox/cff/CFFFont$Mapping/getName()
org/apache/pdfbox/pdmodel/font/PDType1CFont/load()#java/util/Set/contains(java.lang.Object)
org/apache/pdfbox/pdmodel/font/PDType1CFont/load()#org/apache/fontbox/cff/CFFFont$Mapping/getCode()
org/apache/pdfbox/pdmodel/font/PDType1CFont/load()#java/util/Set/iterator()
org/apache/pdfbox/pdmodel/font/PDType1CFont/load()#java/lang/Integer/valueOf(int)
org/apache/pdfbox/pdmodel/font/PDType1CFont/load()#java/util/List/get(int)
org/apache/pdfbox/pdmodel/font/PDType1CFont/load()#java/util/Map$Entry/getValue()
org/apache/pdfbox/pdmodel/font/PDType1CFont/load()#org/apache/fontbox/cff/CFFFont/getCharStringsDict()
org/apache/pdfbox/pdmodel/font/PDType1CFont/load()#org/apache/fontbox/cff/CFFFont/setEncoding(org.apache.fontbox.cff.encoding.CFFEncoding)
org/apache/pdfbox/pdmodel/font/PDType1CFont/load()#java/util/Collection/iterator()
org/apache/pdfbox/pdmodel/font/PDType1CFont/load()#java/util/LinkedHashMap/LinkedHashMap()
org/apache/pdfbox/pdmodel/font/PDType1CFont/load()#java/util/HashSet/HashSet(java.util.Collection)
org/apache/pdfbox/pdmodel/font/PDType1CFont/load()#org/apache/pdfbox/pdmodel/font/PDType1CFont$PDFEncoding/register(int,int)
org/apache/pdfbox/util/PDFTextStripper/processPage(org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.cos.COSStream)#java/util/Vector/set(int,java.lang.Object)
org/apache/pdfbox/util/PDFTextStripper/processPage(org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.cos.COSStream)#java/util/ArrayList/ArrayList()
org/apache/pdfbox/util/PDFTextStripper/processPage(org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.cos.COSStream)#java/util/Vector/setSize(int)
org/apache/pdfbox/util/PDFTextStripper/processPage(org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.cos.COSStream)#java/util/Vector/size()
org/apache/pdfbox/util/PDFTextStripper/processPage(org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.cos.COSStream)#java/util/List/size()
org/apache/pdfbox/util/PDFTextStripper/processPage(org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.cos.COSStream)#java/util/Vector/get(int)
org/apache/pdfbox/util/PDFTextStripper/processPage(org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.cos.COSStream)#org/apache/pdfbox/util/PDFTextStripper/processStream(org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.pdmodel.PDResources,org.apache.pdfbox.cos.COSStream)
org/apache/pdfbox/util/PDFTextStripper/processPage(org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.cos.COSStream)#java/util/List/clear()
org/apache/pdfbox/util/PDFTextStripper/processPage(org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.cos.COSStream)#java/util/Map/clear()
org/apache/pdfbox/util/PDFTextStripper/writePage()#java/util/Vector/get(int)
org/apache/pdfbox/util/PDFTextStripper/writePage()#java/util/List/add(java.lang.Object)
org/apache/pdfbox/util/PDFTextStripper/writePage()#java/lang/String/endsWith(java.lang.String)
org/apache/pdfbox/util/PDFTextStripper/writePage()#java/lang/Math/min(float,float)
org/apache/pdfbox/util/PDFTextStripper/writePage()#java/util/ArrayList/ArrayList()
org/apache/pdfbox/util/PDFTextStripper/writePage()#java/util/Iterator/hasNext()
org/apache/pdfbox/util/PDFTextStripper/writePage()#java/lang/Character/getDirectionality(char)
org/apache/pdfbox/util/PDFTextStripper/writePage()#java/lang/String/charAt(int)
org/apache/pdfbox/util/PDFTextStripper/writePage()#java/util/Vector/size()
org/apache/pdfbox/util/PDFTextStripper/writePage()#java/lang/String/length()
org/apache/pdfbox/util/PDFTextStripper/writePage()#org/apache/pdfbox/util/PDFTextStripper$WordSeparator/getSeparator()
org/apache/pdfbox/util/PDFTextStripper/writePage()#java/util/List/size()
org/apache/pdfbox/util/PDFTextStripper/writePage()#java/lang/Math/max(float,float)
org/apache/pdfbox/util/PDFTextStripper/writePage()#java/util/Iterator/next()
org/apache/pdfbox/util/PDFTextStripper/writePage()#java/util/Collections/sort(java.util.List,java.util.Comparator)
org/apache/pdfbox/util/PDFTextStripper/writePage()#java/util/List/clear()
org/apache/pdfbox/util/PDFTextStripper/writePage()#java/util/List/iterator()
org/apache/pdfbox/util/PDFTextStripper/normalize(java.util.List,boolean,boolean)#java/util/Iterator/hasNext()
org/apache/pdfbox/util/PDFTextStripper/normalize(java.util.List,boolean,boolean)#java/lang/StringBuilder/append(java.lang.String)
org/apache/pdfbox/util/PDFTextStripper/normalize(java.util.List,boolean,boolean)#java/util/LinkedList/LinkedList()
org/apache/pdfbox/util/PDFTextStripper/normalize(java.util.List,boolean,boolean)#java/lang/StringBuilder/StringBuilder()
org/apache/pdfbox/util/PDFTextStripper/normalize(java.util.List,boolean,boolean)#java/util/List/iterator()
org/apache/pdfbox/util/PDFTextStripper/normalize(java.util.List,boolean,boolean)#java/lang/StringBuilder/toString()
org/apache/pdfbox/util/PDFTextStripper/normalize(java.util.List,boolean,boolean)#java/util/Iterator/next()
org/apache/pdfbox/util/PDFTextStripper/normalize(java.util.List,boolean,boolean)#java/util/LinkedList/add(java.lang.Object)
org/apache/pdfbox/util/PDFTextStripper/normalize(java.util.List,boolean,boolean)#java/lang/StringBuilder/length()
org/apache/pdfbox/util/PDFTextStripper/processTextPosition(org.apache.pdfbox.util.TextPosition)#java/util/List/remove(int)
org/apache/pdfbox/util/PDFTextStripper/processTextPosition(org.apache.pdfbox.util.TextPosition)#java/util/List/size()
org/apache/pdfbox/util/PDFTextStripper/processTextPosition(org.apache.pdfbox.util.TextPosition)#java/util/Vector/get(int)
org/apache/pdfbox/util/PDFTextStripper/processTextPosition(org.apache.pdfbox.util.TextPosition)#java/util/List/add(java.lang.Object)
org/apache/pdfbox/util/PDFTextStripper/processTextPosition(org.apache.pdfbox.util.TextPosition)#java/util/List/get(int)
org/apache/pdfbox/util/PDFTextStripper/processTextPosition(org.apache.pdfbox.util.TextPosition)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/pdfbox/util/PDFTextStripper/processTextPosition(org.apache.pdfbox.util.TextPosition)#java/util/ArrayList/ArrayList()
org/apache/pdfbox/util/PDFTextStripper/processTextPosition(org.apache.pdfbox.util.TextPosition)#java/util/Vector/size()
org/apache/pdfbox/util/PDFTextStripper/processTextPosition(org.apache.pdfbox.util.TextPosition)#java/util/List/isEmpty()
org/apache/pdfbox/util/PDFTextStripper/processTextPosition(org.apache.pdfbox.util.TextPosition)#java/lang/String/length()
org/apache/pdfbox/util/PDFTextStripper/processTextPosition(org.apache.pdfbox.util.TextPosition)#java/util/Map/get(java.lang.Object)
org/apache/pdfbox/cos/COSDictionary/toString()#java/lang/Object/toString()
org/apache/pdfbox/cos/COSDictionary/toString()#java/util/Iterator/hasNext()
org/apache/pdfbox/cos/COSDictionary/toString()#java/lang/StringBuilder/append(java.lang.String)
org/apache/pdfbox/cos/COSDictionary/toString()#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/apache/pdfbox/cos/COSDictionary/toString()#java/lang/StringBuilder/StringBuilder()
org/apache/pdfbox/cos/COSDictionary/toString()#java/util/Set/iterator()
org/apache/pdfbox/cos/COSDictionary/toString()#java/lang/StringBuilder/append(java.lang.Object)
org/apache/pdfbox/cos/COSDictionary/toString()#java/lang/StringBuilder/toString()
org/apache/pdfbox/cos/COSDictionary/toString()#java/util/Iterator/next()
org/apache/pdfbox/cos/COSDictionary/toString()#java/util/Map/keySet()
org/apache/pdfbox/pdmodel/PDPageable/getPageFormat(int)#java/awt/Dimension/equals(java.lang.Object)
org/apache/pdfbox/pdmodel/PDPageable/getPageFormat(int)#java/awt/Dimension/getHeight()
org/apache/pdfbox/pdmodel/PDPageable/getPageFormat(int)#java/awt/Dimension/getWidth()
org/apache/pdfbox/pdmodel/PDPageable/getPageFormat(int)#java/util/List/get(int)
org/apache/pdfbox/pdmodel/PDPageable/getPageFormat(int)#java/awt/print/PageFormat/getPaper()
org/apache/pdfbox/pdmodel/PDPageable/getPageFormat(int)#javax/print/PrintService/getDefaultAttributeValue(java.lang.Class)
org/apache/pdfbox/pdmodel/PDPageable/getPageFormat(int)#java/awt/print/Paper/setImageableArea(double,double,double,double)
org/apache/pdfbox/pdmodel/PDPageable/getPageFormat(int)#java/awt/print/PageFormat/setPaper(java.awt.print.Paper)
org/apache/pdfbox/pdmodel/PDPageable/getPageFormat(int)#java/awt/print/PrinterJob/defaultPage()
org/apache/pdfbox/pdmodel/PDPageable/getPageFormat(int)#java/awt/print/Paper/setSize(double,double)
org/apache/pdfbox/pdmodel/PDPageable/getPageFormat(int)#java/awt/print/PageFormat/setOrientation(int)
org/apache/pdfbox/pdmodel/PDPageable/getPageFormat(int)#java/awt/print/PrinterJob/getPrintService()
org/apache/pdfbox/pdmodel/font/FontManager/loadFonts()#java/util/HashMap/put(java.lang.Object,java.lang.Object)
org/apache/pdfbox/pdmodel/font/FontManager/loadFonts()#java/lang/String/equals(java.lang.Object)
org/apache/pdfbox/pdmodel/font/FontManager/loadFonts()#java/awt/Font/getPSName()
org/apache/pdfbox/pdmodel/font/FontManager/loadFonts()#java/lang/StringBuilder/toString()
org/apache/pdfbox/pdmodel/font/FontManager/loadFonts()#java/awt/GraphicsEnvironment/getLocalGraphicsEnvironment()
org/apache/pdfbox/pdmodel/font/FontManager/loadFonts()#java/lang/StringBuilder/append(java.lang.String)
org/apache/pdfbox/pdmodel/font/FontManager/loadFonts()#java/awt/GraphicsEnvironment/getAllFonts()
org/apache/pdfbox/pdmodel/font/FontManager/loadFonts()#java/lang/StringBuilder/StringBuilder()
org/apache/pdfbox/pdmodel/font/FontManager/loadFonts()#java/awt/Font/getFamily()
org/apache/pdfbox/ConvertColorspace/replaceRGBTokensWithCMYKTokens(java.util.List,java.util.List,int,java.util.Hashtable)#org/apache/pdfbox/ConvertColorspace$ColorSpaceInstance/access$102(org.apache.pdfbox.ConvertColorspace$ColorSpaceInstance,java.lang.String)
org/apache/pdfbox/ConvertColorspace/replaceRGBTokensWithCMYKTokens(java.util.List,java.util.List,int,java.util.Hashtable)#org/apache/pdfbox/ConvertColorspace$ColorSpaceInstance/ColorSpaceInstance(org.apache.pdfbox.ConvertColorspace$1)
org/apache/pdfbox/ConvertColorspace/replaceRGBTokensWithCMYKTokens(java.util.List,java.util.List,int,java.util.Hashtable)#org/apache/pdfbox/ConvertColorspace$ColorSpaceInstance/access$202(org.apache.pdfbox.ConvertColorspace$ColorSpaceInstance,int[])
org/apache/pdfbox/ConvertColorspace/replaceRGBTokensWithCMYKTokens(java.util.List,java.util.List,int,java.util.Hashtable)#java/util/Hashtable/get(java.lang.Object)
org/apache/pdfbox/ConvertColorspace/replaceRGBTokensWithCMYKTokens(java.util.List,java.util.List,int,java.util.Hashtable)#org/apache/pdfbox/ConvertColorspace$ColorSpaceInstance/access$200(org.apache.pdfbox.ConvertColorspace$ColorSpaceInstance)
org/apache/pdfbox/ConvertColorspace/replaceRGBTokensWithCMYKTokens(java.util.List,java.util.List,int,java.util.Hashtable)#java/lang/Math/round(float)
org/apache/pdfbox/ConvertColorspace/replaceRGBTokensWithCMYKTokens(java.util.List,java.util.List,int,java.util.Hashtable)#java/util/List/add(java.lang.Object)
org/apache/pdfbox/ConvertColorspace/replaceRGBTokensWithCMYKTokens(java.util.List,java.util.List,int,java.util.Hashtable)#java/util/List/get(int)
org/apache/pdfbox/ConvertColorspace/replaceRGBTokensWithCMYKTokens(java.util.List,java.util.List,int,java.util.Hashtable)#java/util/List/remove(int)
org/apache/pdfbox/ConvertColorspace/replaceRGBTokensWithCMYKTokens(java.util.List,java.util.List,int,java.util.Hashtable)#java/util/List/size()
org/apache/pdfbox/ConvertColorspace/main(java.lang.String[])#java/util/regex/Matcher/group(int)
org/apache/pdfbox/ConvertColorspace/main(java.lang.String[])#org/apache/pdfbox/ConvertColorspace$ColorSpaceInstance/access$102(org.apache.pdfbox.ConvertColorspace$ColorSpaceInstance,java.lang.String)
org/apache/pdfbox/ConvertColorspace/main(java.lang.String[])#java/io/PrintStream/println(java.lang.String)
org/apache/pdfbox/ConvertColorspace/main(java.lang.String[])#java/util/regex/Matcher/matches()
org/apache/pdfbox/ConvertColorspace/main(java.lang.String[])#org/apache/pdfbox/ConvertColorspace$ColorSpaceInstance/access$202(org.apache.pdfbox.ConvertColorspace$ColorSpaceInstance,int[])
org/apache/pdfbox/ConvertColorspace/main(java.lang.String[])#java/lang/System/exit(int)
org/apache/pdfbox/ConvertColorspace/main(java.lang.String[])#java/lang/String/equals(java.lang.Object)
org/apache/pdfbox/ConvertColorspace/main(java.lang.String[])#java/util/Hashtable/Hashtable()
org/apache/pdfbox/ConvertColorspace/main(java.lang.String[])#java/util/Hashtable/put(java.lang.Object,java.lang.Object)
org/apache/pdfbox/ConvertColorspace/main(java.lang.String[])#java/util/regex/Pattern/compile(java.lang.String)
org/apache/pdfbox/ConvertColorspace/main(java.lang.String[])#org/apache/pdfbox/ConvertColorspace$ColorSpaceInstance/ColorSpaceInstance(org.apache.pdfbox.ConvertColorspace$1)
org/apache/pdfbox/ConvertColorspace/main(java.lang.String[])#java/util/regex/Pattern/matcher(java.lang.CharSequence)
org/apache/pdfbox/ConvertColorspace/replaceGrayTokensWithCMYKTokens(java.util.List,java.util.List,int,java.util.Hashtable)#org/apache/pdfbox/ConvertColorspace$ColorSpaceInstance/access$102(org.apache.pdfbox.ConvertColorspace$ColorSpaceInstance,java.lang.String)
org/apache/pdfbox/ConvertColorspace/replaceGrayTokensWithCMYKTokens(java.util.List,java.util.List,int,java.util.Hashtable)#java/util/List/remove(int)
org/apache/pdfbox/ConvertColorspace/replaceGrayTokensWithCMYKTokens(java.util.List,java.util.List,int,java.util.Hashtable)#org/apache/pdfbox/ConvertColorspace$ColorSpaceInstance/ColorSpaceInstance(org.apache.pdfbox.ConvertColorspace$1)
org/apache/pdfbox/ConvertColorspace/replaceGrayTokensWithCMYKTokens(java.util.List,java.util.List,int,java.util.Hashtable)#org/apache/pdfbox/ConvertColorspace$ColorSpaceInstance/access$202(org.apache.pdfbox.ConvertColorspace$ColorSpaceInstance,int[])
org/apache/pdfbox/ConvertColorspace/replaceGrayTokensWithCMYKTokens(java.util.List,java.util.List,int,java.util.Hashtable)#java/util/Hashtable/get(java.lang.Object)
org/apache/pdfbox/ConvertColorspace/replaceGrayTokensWithCMYKTokens(java.util.List,java.util.List,int,java.util.Hashtable)#org/apache/pdfbox/ConvertColorspace$ColorSpaceInstance/access$200(org.apache.pdfbox.ConvertColorspace$ColorSpaceInstance)
org/apache/pdfbox/ConvertColorspace/replaceGrayTokensWithCMYKTokens(java.util.List,java.util.List,int,java.util.Hashtable)#java/lang/Math/round(float)
org/apache/pdfbox/ConvertColorspace/replaceGrayTokensWithCMYKTokens(java.util.List,java.util.List,int,java.util.Hashtable)#java/util/List/add(java.lang.Object)
org/apache/pdfbox/ConvertColorspace/replaceGrayTokensWithCMYKTokens(java.util.List,java.util.List,int,java.util.Hashtable)#java/util/List/get(int)
org/apache/pdfbox/ConvertColorspace/replaceGrayTokensWithCMYKTokens(java.util.List,java.util.List,int,java.util.Hashtable)#java/util/List/size()
org/apache/pdfbox/ConvertColorspace/replaceColors(org.apache.pdfbox.pdmodel.PDDocument,java.util.Hashtable,java.lang.String)#java/util/ArrayList/ArrayList()
org/apache/pdfbox/ConvertColorspace/replaceColors(org.apache.pdfbox.pdmodel.PDDocument,java.util.Hashtable,java.lang.String)#java/util/List/size()
org/apache/pdfbox/ConvertColorspace/replaceColors(org.apache.pdfbox.pdmodel.PDDocument,java.util.Hashtable,java.lang.String)#java/lang/String/equals(java.lang.Object)
org/apache/pdfbox/ConvertColorspace/replaceColors(org.apache.pdfbox.pdmodel.PDDocument,java.util.Hashtable,java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/apache/pdfbox/ConvertColorspace/replaceColors(org.apache.pdfbox.pdmodel.PDDocument,java.util.Hashtable,java.lang.String)#java/util/List/add(java.lang.Object)
org/apache/pdfbox/ConvertColorspace/replaceColors(org.apache.pdfbox.pdmodel.PDDocument,java.util.Hashtable,java.lang.String)#java/io/IOException/IOException(java.lang.String)
org/apache/pdfbox/ConvertColorspace/replaceColors(org.apache.pdfbox.pdmodel.PDDocument,java.util.Hashtable,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/apache/pdfbox/ConvertColorspace/replaceColors(org.apache.pdfbox.pdmodel.PDDocument,java.util.Hashtable,java.lang.String)#java/util/List/get(int)
org/apache/pdfbox/ConvertColorspace/replaceColors(org.apache.pdfbox.pdmodel.PDDocument,java.util.Hashtable,java.lang.String)#java/lang/StringBuilder/toString()
org/apache/pdfbox/pdmodel/encryption/SecurityHandler/encryptData(long,long,java.io.InputStream,java.io.OutputStream,boolean)#java/io/InputStream/read(byte[])
org/apache/pdfbox/pdmodel/encryption/SecurityHandler/encryptData(long,long,java.io.InputStream,java.io.OutputStream,boolean)#java/security/MessageDigest/getInstance(java.lang.String)
org/apache/pdfbox/pdmodel/encryption/SecurityHandler/encryptData(long,long,java.io.InputStream,java.io.OutputStream,boolean)#java/security/MessageDigest/update(byte[])
org/apache/pdfbox/pdmodel/encryption/SecurityHandler/encryptData(long,long,java.io.InputStream,java.io.OutputStream,boolean)#javax/crypto/spec/SecretKeySpec/SecretKeySpec(byte[],java.lang.String)
org/apache/pdfbox/pdmodel/encryption/SecurityHandler/encryptData(long,long,java.io.InputStream,java.io.OutputStream,boolean)#java/security/MessageDigest/digest()
org/apache/pdfbox/pdmodel/encryption/SecurityHandler/encryptData(long,long,java.io.InputStream,java.io.OutputStream,boolean)#java/io/OutputStream/flush()
org/apache/pdfbox/pdmodel/encryption/SecurityHandler/encryptData(long,long,java.io.InputStream,java.io.OutputStream,boolean)#javax/crypto/CipherInputStream/close()
org/apache/pdfbox/pdmodel/encryption/SecurityHandler/encryptData(long,long,java.io.InputStream,java.io.OutputStream,boolean)#javax/crypto/CipherInputStream/read(byte[])
org/apache/pdfbox/pdmodel/encryption/SecurityHandler/encryptData(long,long,java.io.InputStream,java.io.OutputStream,boolean)#javax/crypto/Cipher/getInstance(java.lang.String)
org/apache/pdfbox/pdmodel/encryption/SecurityHandler/encryptData(long,long,java.io.InputStream,java.io.OutputStream,boolean)#javax/crypto/Cipher/init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)
org/apache/pdfbox/pdmodel/encryption/SecurityHandler/encryptData(long,long,java.io.InputStream,java.io.OutputStream,boolean)#javax/crypto/CipherInputStream/CipherInputStream(java.io.InputStream,javax.crypto.Cipher)
org/apache/pdfbox/pdmodel/encryption/SecurityHandler/encryptData(long,long,java.io.InputStream,java.io.OutputStream,boolean)#java/io/OutputStream/write(byte[],int,int)
org/apache/pdfbox/pdmodel/encryption/SecurityHandler/encryptData(long,long,java.io.InputStream,java.io.OutputStream,boolean)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/pdfbox/pdmodel/encryption/SecurityHandler/encryptData(long,long,java.io.InputStream,java.io.OutputStream,boolean)#javax/crypto/spec/IvParameterSpec/IvParameterSpec(byte[])
org/apache/pdfbox/pdmodel/encryption/SecurityHandler/encryptData(long,long,java.io.InputStream,java.io.OutputStream,boolean)#java/lang/Math/min(int,int)
org/apache/pdfbox/pdmodel/encryption/SecurityHandler/encryptData(long,long,java.io.InputStream,java.io.OutputStream,boolean)#java/lang/System/arraycopy(java.lang.Object,int,java.lang.Object,int,int)
org/apache/pdfbox/examples/fdf/PrintFields/printFields(org.apache.pdfbox.pdmodel.PDDocument)#java/util/Iterator/hasNext()
org/apache/pdfbox/examples/fdf/PrintFields/printFields(org.apache.pdfbox.pdmodel.PDDocument)#java/lang/Integer/Integer(int)
org/apache/pdfbox/examples/fdf/PrintFields/printFields(org.apache.pdfbox.pdmodel.PDDocument)#java/lang/Integer/toString()
org/apache/pdfbox/examples/fdf/PrintFields/printFields(org.apache.pdfbox.pdmodel.PDDocument)#java/util/List/size()
org/apache/pdfbox/examples/fdf/PrintFields/printFields(org.apache.pdfbox.pdmodel.PDDocument)#java/util/Iterator/next()
org/apache/pdfbox/examples/fdf/PrintFields/printFields(org.apache.pdfbox.pdmodel.PDDocument)#java/lang/StringBuilder/StringBuilder()
org/apache/pdfbox/examples/fdf/PrintFields/printFields(org.apache.pdfbox.pdmodel.PDDocument)#java/util/List/iterator()
org/apache/pdfbox/examples/fdf/PrintFields/printFields(org.apache.pdfbox.pdmodel.PDDocument)#java/lang/StringBuilder/append(java.lang.String)
org/apache/pdfbox/examples/fdf/PrintFields/printFields(org.apache.pdfbox.pdmodel.PDDocument)#java/io/PrintStream/println(java.lang.String)
org/apache/pdfbox/examples/fdf/PrintFields/printFields(org.apache.pdfbox.pdmodel.PDDocument)#java/lang/StringBuilder/toString()
org/apache/pdfbox/examples/fdf/PrintFields/processField(org.apache.pdfbox.pdmodel.interactive.form.PDField,java.lang.String,java.lang.String)#java/util/Iterator/hasNext()
org/apache/pdfbox/examples/fdf/PrintFields/processField(org.apache.pdfbox.pdmodel.interactive.form.PDField,java.lang.String,java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/apache/pdfbox/examples/fdf/PrintFields/processField(org.apache.pdfbox.pdmodel.interactive.form.PDField,java.lang.String,java.lang.String)#java/lang/Object/getClass()
org/apache/pdfbox/examples/fdf/PrintFields/processField(org.apache.pdfbox.pdmodel.interactive.form.PDField,java.lang.String,java.lang.String)#java/util/List/iterator()
org/apache/pdfbox/examples/fdf/PrintFields/processField(org.apache.pdfbox.pdmodel.interactive.form.PDField,java.lang.String,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/apache/pdfbox/examples/fdf/PrintFields/processField(org.apache.pdfbox.pdmodel.interactive.form.PDField,java.lang.String,java.lang.String)#java/io/PrintStream/println(java.lang.String)
org/apache/pdfbox/examples/fdf/PrintFields/processField(org.apache.pdfbox.pdmodel.interactive.form.PDField,java.lang.String,java.lang.String)#java/util/Iterator/next()
org/apache/pdfbox/examples/fdf/PrintFields/processField(org.apache.pdfbox.pdmodel.interactive.form.PDField,java.lang.String,java.lang.String)#java/lang/String/equals(java.lang.Object)
org/apache/pdfbox/examples/fdf/PrintFields/processField(org.apache.pdfbox.pdmodel.interactive.form.PDField,java.lang.String,java.lang.String)#java/lang/Class/getName()
org/apache/pdfbox/examples/fdf/PrintFields/processField(org.apache.pdfbox.pdmodel.interactive.form.PDField,java.lang.String,java.lang.String)#java/lang/StringBuilder/toString()
org/apache/pdfbox/PdfDecompressor/main(java.lang.String[])#java/lang/String/replaceAll(java.lang.String,java.lang.String)
org/apache/pdfbox/PdfDecompressor/main(java.lang.String[])#java/util/Iterator/next()
org/apache/pdfbox/PdfDecompressor/main(java.lang.String[])#java/lang/StringBuilder/StringBuilder()
org/apache/pdfbox/PdfDecompressor/main(java.lang.String[])#java/util/List/iterator()
org/apache/pdfbox/PdfDecompressor/main(java.lang.String[])#java/lang/String/matches(java.lang.String)
org/apache/pdfbox/PdfDecompressor/main(java.lang.String[])#java/util/Iterator/hasNext()
org/apache/pdfbox/PdfDecompressor/main(java.lang.String[])#java/io/PrintStream/println(java.lang.String)
org/apache/pdfbox/PdfDecompressor/main(java.lang.String[])#java/lang/StringBuilder/append(java.lang.String)
org/apache/pdfbox/PdfDecompressor/main(java.lang.String[])#java/lang/StringBuilder/toString()
org/apache/pdfbox/PdfDecompressor/main(java.lang.String[])#java/lang/Exception/getMessage()
org/apache/pdfbox/pdmodel/graphics/color/PDColorState/createColor()#java/lang/StringBuilder/append(java.lang.String)
org/apache/pdfbox/pdmodel/graphics/color/PDColorState/createColor()#java/lang/StringBuilder/append(int)
org/apache/pdfbox/pdmodel/graphics/color/PDColorState/createColor()#java/awt/Color/Color(java.awt.color.ColorSpace,float[],float)
org/apache/pdfbox/pdmodel/graphics/color/PDColorState/createColor()#java/lang/String/equals(java.lang.Object)
org/apache/pdfbox/pdmodel/graphics/color/PDColorState/createColor()#java/lang/StringBuilder/StringBuilder()
org/apache/pdfbox/pdmodel/graphics/color/PDColorState/createColor()#java/awt/Color/Color(float,float,float)
org/apache/pdfbox/pdmodel/graphics/color/PDColorState/createColor()#java/lang/StringBuilder/toString()
org/apache/pdfbox/pdmodel/graphics/color/PDColorState/createColor()#org/apache/commons/logging/Log/warn(java.lang.Object,java.lang.Throwable)
org/apache/pdfbox/pdmodel/graphics/color/PDColorState/createColor()#org/apache/commons/logging/Log/warn(java.lang.Object)
org/apache/pdfbox/pdmodel/graphics/color/PDColorState/createColor()#java/awt/Color/Color(int)
org/apache/pdfbox/pdmodel/graphics/color/PDColorState/createColor()#java/util/Arrays/toString(float[])
org/apache/pdfbox/pdmodel/graphics/color/PDColorState/createColor()#java/lang/StringBuilder/append(java.lang.Object)
org/apache/pdfbox/pdmodel/graphics/color/PDColorState/createColor()#java/lang/Exception/toString()
org/apache/pdfbox/filter/ASCIIHexFilter/decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)#java/lang/StringBuilder/append(java.lang.String)
org/apache/pdfbox/filter/ASCIIHexFilter/decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)#java/lang/StringBuilder/append(int)
org/apache/pdfbox/filter/ASCIIHexFilter/decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)#java/io/OutputStream/flush()
org/apache/pdfbox/filter/ASCIIHexFilter/decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)#java/io/OutputStream/write(int)
org/apache/pdfbox/filter/ASCIIHexFilter/decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)#java/io/InputStream/read()
org/apache/pdfbox/filter/ASCIIHexFilter/decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)#java/lang/StringBuilder/StringBuilder()
org/apache/pdfbox/filter/ASCIIHexFilter/decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)#java/lang/StringBuilder/toString()
org/apache/pdfbox/filter/ASCIIHexFilter/decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)#java/lang/StringBuilder/append(char)
org/apache/pdfbox/filter/ASCIIHexFilter/decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)#org/apache/commons/logging/Log/error(java.lang.Object)
org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler/getUserPassword(byte[],byte[],int,long)#java/security/MessageDigest/digest()
org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler/getUserPassword(byte[],byte[],int,long)#java/security/MessageDigest/reset()
org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler/getUserPassword(byte[],byte[],int,long)#java/lang/StringBuilder/StringBuilder()
org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler/getUserPassword(byte[],byte[],int,long)#java/io/ByteArrayOutputStream/toByteArray()
org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler/getUserPassword(byte[],byte[],int,long)#java/lang/System/arraycopy(java.lang.Object,int,java.lang.Object,int,int)
org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler/getUserPassword(byte[],byte[],int,long)#java/lang/StringBuilder/append(java.lang.String)
org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler/getUserPassword(byte[],byte[],int,long)#java/lang/StringBuilder/append(long)
org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler/getUserPassword(byte[],byte[],int,long)#java/io/ByteArrayOutputStream/reset()
org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler/getUserPassword(byte[],byte[],int,long)#java/security/MessageDigest/getInstance(java.lang.String)
org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler/getUserPassword(byte[],byte[],int,long)#java/io/ByteArrayOutputStream/ByteArrayOutputStream()
org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler/getUserPassword(byte[],byte[],int,long)#java/lang/StringBuilder/toString()
org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler/getUserPassword(byte[],byte[],int,long)#java/security/MessageDigest/update(byte[])
org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler/computeOwnerPassword(byte[],byte[],int,int)#java/security/MessageDigest/digest()
org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler/computeOwnerPassword(byte[],byte[],int,int)#java/security/MessageDigest/reset()
org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler/computeOwnerPassword(byte[],byte[],int,int)#java/lang/StringBuilder/append(int)
org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler/computeOwnerPassword(byte[],byte[],int,int)#java/io/ByteArrayInputStream/ByteArrayInputStream(byte[])
org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler/computeOwnerPassword(byte[],byte[],int,int)#java/lang/StringBuilder/StringBuilder()
org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler/computeOwnerPassword(byte[],byte[],int,int)#java/lang/StringBuilder/append(java.lang.String)
org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler/computeOwnerPassword(byte[],byte[],int,int)#java/security/NoSuchAlgorithmException/getMessage()
org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler/computeOwnerPassword(byte[],byte[],int,int)#java/io/ByteArrayOutputStream/reset()
org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler/computeOwnerPassword(byte[],byte[],int,int)#java/security/MessageDigest/update(byte[],int,int)
org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler/computeOwnerPassword(byte[],byte[],int,int)#java/io/ByteArrayOutputStream/toByteArray()
org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler/computeOwnerPassword(byte[],byte[],int,int)#java/lang/System/arraycopy(java.lang.Object,int,java.lang.Object,int,int)
org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler/computeOwnerPassword(byte[],byte[],int,int)#java/security/MessageDigest/getInstance(java.lang.String)
org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler/computeOwnerPassword(byte[],byte[],int,int)#java/io/ByteArrayOutputStream/ByteArrayOutputStream()
org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler/computeOwnerPassword(byte[],byte[],int,int)#java/lang/StringBuilder/toString()
org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler/computeOwnerPassword(byte[],byte[],int,int)#java/security/MessageDigest/update(byte[])
org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler/prepareDocumentForEncryption(org.apache.pdfbox.pdmodel.PDDocument)#java/lang/Object/toString()
org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler/prepareDocumentForEncryption(org.apache.pdfbox.pdmodel.PDDocument)#java/lang/String/getBytes(java.lang.String)
org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler/prepareDocumentForEncryption(org.apache.pdfbox.pdmodel.PDDocument)#java/math/BigInteger/toByteArray()
org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler/prepareDocumentForEncryption(org.apache.pdfbox.pdmodel.PDDocument)#java/lang/String/getBytes()
org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler/prepareDocumentForEncryption(org.apache.pdfbox.pdmodel.PDDocument)#java/security/MessageDigest/update(byte[])
org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler/prepareDocumentForEncryption(org.apache.pdfbox.pdmodel.PDDocument)#java/math/BigInteger/valueOf(long)
org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler/prepareDocumentForEncryption(org.apache.pdfbox.pdmodel.PDDocument)#java/security/MessageDigest/digest(byte[])
org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler/prepareDocumentForEncryption(org.apache.pdfbox.pdmodel.PDDocument)#java/lang/System/currentTimeMillis()
org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler/prepareDocumentForEncryption(org.apache.pdfbox.pdmodel.PDDocument)#java/security/MessageDigest/getInstance(java.lang.String)
org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler/computeEncryptedKey(byte[],byte[],int,byte[],int,int,boolean)#java/security/MessageDigest/update(byte)
org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler/computeEncryptedKey(byte[],byte[],int,byte[],int,int,boolean)#java/security/MessageDigest/digest()
org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler/computeEncryptedKey(byte[],byte[],int,byte[],int,int,boolean)#java/security/MessageDigest/reset()
org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler/computeEncryptedKey(byte[],byte[],int,byte[],int,int,boolean)#java/lang/StringBuilder/append(int)
org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler/computeEncryptedKey(byte[],byte[],int,byte[],int,int,boolean)#java/lang/StringBuilder/StringBuilder()
org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler/computeEncryptedKey(byte[],byte[],int,byte[],int,int,boolean)#java/security/MessageDigest/update(byte[],int,int)
org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler/computeEncryptedKey(byte[],byte[],int,byte[],int,int,boolean)#java/lang/System/arraycopy(java.lang.Object,int,java.lang.Object,int,int)
org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler/computeEncryptedKey(byte[],byte[],int,byte[],int,int,boolean)#java/security/MessageDigest/getInstance(java.lang.String)
org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler/computeEncryptedKey(byte[],byte[],int,byte[],int,int,boolean)#java/lang/StringBuilder/append(java.lang.String)
org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler/computeEncryptedKey(byte[],byte[],int,byte[],int,int,boolean)#java/lang/StringBuilder/toString()
org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler/computeEncryptedKey(byte[],byte[],int,byte[],int,int,boolean)#java/security/MessageDigest/update(byte[])
org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler/computeUserPassword(byte[],byte[],int,byte[],int,int,boolean)#java/security/MessageDigest/digest()
org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler/computeUserPassword(byte[],byte[],int,byte[],int,int,boolean)#java/io/ByteArrayOutputStream/write(byte[])
org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler/computeUserPassword(byte[],byte[],int,byte[],int,int,boolean)#java/io/ByteArrayOutputStream/toByteArray()
org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler/computeUserPassword(byte[],byte[],int,byte[],int,int,boolean)#java/security/MessageDigest/update(byte[])
org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler/computeUserPassword(byte[],byte[],int,byte[],int,int,boolean)#java/io/ByteArrayInputStream/ByteArrayInputStream(byte[])
org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler/computeUserPassword(byte[],byte[],int,byte[],int,int,boolean)#java/io/ByteArrayOutputStream/reset()
org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler/computeUserPassword(byte[],byte[],int,byte[],int,int,boolean)#java/lang/System/arraycopy(java.lang.Object,int,java.lang.Object,int,int)
org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler/computeUserPassword(byte[],byte[],int,byte[],int,int,boolean)#java/security/MessageDigest/getInstance(java.lang.String)
org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler/computeUserPassword(byte[],byte[],int,byte[],int,int,boolean)#java/io/ByteArrayOutputStream/ByteArrayOutputStream()
org/apache/pdfbox/util/PDFTextStripperByArea/extractRegions(org.apache.pdfbox.pdmodel.PDPage)#org/apache/pdfbox/util/PDFTextStripperByArea/getCurrentPageNo()
org/apache/pdfbox/util/PDFTextStripperByArea/extractRegions(org.apache.pdfbox.pdmodel.PDPage)#java/util/Iterator/hasNext()
org/apache/pdfbox/util/PDFTextStripperByArea/extractRegions(org.apache.pdfbox.pdmodel.PDPage)#java/util/Iterator/next()
org/apache/pdfbox/util/PDFTextStripperByArea/extractRegions(org.apache.pdfbox.pdmodel.PDPage)#java/util/Vector/Vector()
org/apache/pdfbox/util/PDFTextStripperByArea/extractRegions(org.apache.pdfbox.pdmodel.PDPage)#org/apache/pdfbox/util/PDFTextStripperByArea/processPage(org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.cos.COSStream)
org/apache/pdfbox/util/PDFTextStripperByArea/extractRegions(org.apache.pdfbox.pdmodel.PDPage)#java/io/StringWriter/StringWriter()
org/apache/pdfbox/util/PDFTextStripperByArea/extractRegions(org.apache.pdfbox.pdmodel.PDPage)#java/util/List/iterator()
org/apache/pdfbox/util/PDFTextStripperByArea/extractRegions(org.apache.pdfbox.pdmodel.PDPage)#java/util/Vector/add(java.lang.Object)
org/apache/pdfbox/util/PDFTextStripperByArea/extractRegions(org.apache.pdfbox.pdmodel.PDPage)#org/apache/pdfbox/util/PDFTextStripperByArea/setEndPage(int)
org/apache/pdfbox/util/PDFTextStripperByArea/extractRegions(org.apache.pdfbox.pdmodel.PDPage)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/pdfbox/util/PDFTextStripperByArea/extractRegions(org.apache.pdfbox.pdmodel.PDPage)#java/util/ArrayList/ArrayList()
org/apache/pdfbox/util/PDFTextStripperByArea/extractRegions(org.apache.pdfbox.pdmodel.PDPage)#org/apache/pdfbox/util/PDFTextStripperByArea/setStartPage(int)
org/apache/pdfbox/pdfparser/VisualSignatureParser/parseObject()#org/apache/pdfbox/pdfparser/VisualSignatureParser/readString(int)
org/apache/pdfbox/pdfparser/VisualSignatureParser/parseObject()#org/apache/pdfbox/pdfparser/VisualSignatureParser/parseCOSStream(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.io.RandomAccess)
org/apache/pdfbox/pdfparser/VisualSignatureParser/parseObject()#org/apache/pdfbox/pdfparser/VisualSignatureParser/parseDirObject()
org/apache/pdfbox/pdfparser/VisualSignatureParser/parseObject()#org/apache/pdfbox/pdfparser/VisualSignatureParser/readExpectedString(java.lang.String)
org/apache/pdfbox/pdfparser/VisualSignatureParser/parseObject()#org/apache/pdfbox/pdfparser/VisualSignatureParser/isClosing()
org/apache/pdfbox/pdfparser/VisualSignatureParser/parseObject()#java/lang/String/equals(java.lang.Object)
org/apache/pdfbox/pdfparser/VisualSignatureParser/parseObject()#java/lang/String/substring(int)
org/apache/pdfbox/pdfparser/VisualSignatureParser/parseObject()#java/lang/String/startsWith(java.lang.String)
org/apache/pdfbox/pdfparser/VisualSignatureParser/parseObject()#java/lang/StringBuilder/append(java.lang.Object)
org/apache/pdfbox/pdfparser/VisualSignatureParser/parseObject()#java/lang/String/getBytes()
org/apache/pdfbox/pdfparser/VisualSignatureParser/parseObject()#org/apache/pdfbox/pdfparser/VisualSignatureParser/skipSpaces()
org/apache/pdfbox/pdfparser/VisualSignatureParser/parseObject()#java/lang/Float/parseFloat(java.lang.String)
org/apache/pdfbox/pdfparser/VisualSignatureParser/parseObject()#java/io/IOException/IOException(java.lang.String)
org/apache/pdfbox/pdfparser/VisualSignatureParser/parseObject()#java/lang/StringBuilder/append(java.lang.String)
org/apache/pdfbox/pdfparser/VisualSignatureParser/parseObject()#java/lang/StringBuilder/StringBuilder()
org/apache/pdfbox/pdfparser/VisualSignatureParser/parseObject()#java/lang/String/indexOf(java.lang.String)
org/apache/pdfbox/pdfparser/VisualSignatureParser/parseObject()#org/apache/pdfbox/pdfparser/VisualSignatureParser/readString()
org/apache/pdfbox/pdfparser/VisualSignatureParser/parseObject()#java/lang/StringBuilder/toString()
org/apache/pdfbox/pdfparser/VisualSignatureParser/parseObject()#org/apache/pdfbox/pdfparser/VisualSignatureParser/readInt()
org/apache/pdfbox/ExtractImages/extractImages(java.lang.String[])#java/io/IOException/IOException(java.lang.String)
org/apache/pdfbox/ExtractImages/extractImages(java.lang.String[])#java/lang/String/substring(int,int)
org/apache/pdfbox/ExtractImages/extractImages(java.lang.String[])#java/lang/StringBuilder/StringBuilder()
org/apache/pdfbox/ExtractImages/extractImages(java.lang.String[])#java/util/Set/iterator()
org/apache/pdfbox/ExtractImages/extractImages(java.lang.String[])#java/util/List/iterator()
org/apache/pdfbox/ExtractImages/extractImages(java.lang.String[])#java/lang/StringBuilder/toString()
org/apache/pdfbox/ExtractImages/extractImages(java.lang.String[])#java/util/Iterator/hasNext()
org/apache/pdfbox/ExtractImages/extractImages(java.lang.String[])#java/lang/StringBuilder/append(java.lang.String)
org/apache/pdfbox/ExtractImages/extractImages(java.lang.String[])#java/io/PrintStream/println(java.lang.String)
org/apache/pdfbox/ExtractImages/extractImages(java.lang.String[])#java/util/Map/get(java.lang.Object)
org/apache/pdfbox/ExtractImages/extractImages(java.lang.String[])#java/lang/String/length()
org/apache/pdfbox/ExtractImages/extractImages(java.lang.String[])#java/util/Iterator/next()
org/apache/pdfbox/ExtractImages/extractImages(java.lang.String[])#java/util/Map/keySet()
org/apache/pdfbox/ExtractImages/extractImages(java.lang.String[])#java/lang/String/equals(java.lang.Object)
org/apache/pdfbox/pdmodel/interactive/form/PDSignatureField/generatePartialName()#org/apache/pdfbox/pdmodel/interactive/form/PDSignatureField/getAcroForm()
org/apache/pdfbox/pdmodel/interactive/form/PDSignatureField/generatePartialName()#org/apache/pdfbox/pdmodel/interactive/form/PDSignatureField/getPartialName()
org/apache/pdfbox/pdmodel/interactive/form/PDSignatureField/generatePartialName()#java/util/Iterator/hasNext()
org/apache/pdfbox/pdmodel/interactive/form/PDSignatureField/generatePartialName()#java/lang/StringBuilder/append(java.lang.String)
org/apache/pdfbox/pdmodel/interactive/form/PDSignatureField/generatePartialName()#java/lang/StringBuilder/append(int)
org/apache/pdfbox/pdmodel/interactive/form/PDSignatureField/generatePartialName()#java/util/Iterator/next()
org/apache/pdfbox/pdmodel/interactive/form/PDSignatureField/generatePartialName()#java/util/Set/contains(java.lang.Object)
org/apache/pdfbox/pdmodel/interactive/form/PDSignatureField/generatePartialName()#java/lang/StringBuilder/StringBuilder()
org/apache/pdfbox/pdmodel/interactive/form/PDSignatureField/generatePartialName()#java/util/List/iterator()
org/apache/pdfbox/pdmodel/interactive/form/PDSignatureField/generatePartialName()#java/util/HashSet/HashSet()
org/apache/pdfbox/pdmodel/interactive/form/PDSignatureField/generatePartialName()#java/util/Set/add(java.lang.Object)
org/apache/pdfbox/pdmodel/interactive/form/PDSignatureField/generatePartialName()#java/lang/StringBuilder/toString()
org/apache/pdfbox/pdmodel/common/COSArrayList/converterToCOSArray(java.util.List)#java/lang/Number/floatValue()
org/apache/pdfbox/pdmodel/common/COSArrayList/converterToCOSArray(java.util.List)#java/util/Iterator/hasNext()
org/apache/pdfbox/pdmodel/common/COSArrayList/converterToCOSArray(java.util.List)#java/lang/StringBuilder/append(java.lang.String)
org/apache/pdfbox/pdmodel/common/COSArrayList/converterToCOSArray(java.util.List)#java/util/Iterator/next()
org/apache/pdfbox/pdmodel/common/COSArrayList/converterToCOSArray(java.util.List)#java/lang/Class/getName()
org/apache/pdfbox/pdmodel/common/COSArrayList/converterToCOSArray(java.util.List)#java/lang/StringBuilder/StringBuilder()
org/apache/pdfbox/pdmodel/common/COSArrayList/converterToCOSArray(java.util.List)#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/apache/pdfbox/pdmodel/common/COSArrayList/converterToCOSArray(java.util.List)#java/lang/Object/getClass()
org/apache/pdfbox/pdmodel/common/COSArrayList/converterToCOSArray(java.util.List)#java/util/List/iterator()
org/apache/pdfbox/pdmodel/common/COSArrayList/converterToCOSArray(java.util.List)#java/lang/Number/longValue()
org/apache/pdfbox/pdmodel/common/COSArrayList/converterToCOSArray(java.util.List)#java/lang/StringBuilder/toString()
org/apache/pdfbox/util/PDFMarkedContentExtractor/processTextPosition(org.apache.pdfbox.util.TextPosition)#java/util/List/remove(int)
org/apache/pdfbox/util/PDFMarkedContentExtractor/processTextPosition(org.apache.pdfbox.util.TextPosition)#java/util/List/size()
org/apache/pdfbox/util/PDFMarkedContentExtractor/processTextPosition(org.apache.pdfbox.util.TextPosition)#java/util/List/add(java.lang.Object)
org/apache/pdfbox/util/PDFMarkedContentExtractor/processTextPosition(org.apache.pdfbox.util.TextPosition)#java/util/Stack/peek()
org/apache/pdfbox/util/PDFMarkedContentExtractor/processTextPosition(org.apache.pdfbox.util.TextPosition)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/pdfbox/util/PDFMarkedContentExtractor/processTextPosition(org.apache.pdfbox.util.TextPosition)#java/util/ArrayList/ArrayList()
org/apache/pdfbox/util/PDFMarkedContentExtractor/processTextPosition(org.apache.pdfbox.util.TextPosition)#java/util/List/isEmpty()
org/apache/pdfbox/util/PDFMarkedContentExtractor/processTextPosition(org.apache.pdfbox.util.TextPosition)#java/lang/String/length()
org/apache/pdfbox/util/PDFMarkedContentExtractor/processTextPosition(org.apache.pdfbox.util.TextPosition)#java/util/Map/get(java.lang.Object)
org/apache/pdfbox/util/PDFMarkedContentExtractor/processTextPosition(org.apache.pdfbox.util.TextPosition)#java/util/Stack/isEmpty()
org/apache/pdfbox/util/PDFMarkedContentExtractor/processTextPosition(org.apache.pdfbox.util.TextPosition)#java/util/List/get(int)
org/apache/pdfbox/examples/pdmodel/AddImageToPDF/createPDFFromImage(java.lang.String,java.lang.String,java.lang.String)#java/lang/String/toLowerCase()
org/apache/pdfbox/examples/pdmodel/AddImageToPDF/createPDFFromImage(java.lang.String,java.lang.String,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/apache/pdfbox/examples/pdmodel/AddImageToPDF/createPDFFromImage(java.lang.String,java.lang.String,java.lang.String)#java/io/File/File(java.lang.String)
org/apache/pdfbox/examples/pdmodel/AddImageToPDF/createPDFFromImage(java.lang.String,java.lang.String,java.lang.String)#java/util/List/get(int)
org/apache/pdfbox/examples/pdmodel/AddImageToPDF/createPDFFromImage(java.lang.String,java.lang.String,java.lang.String)#java/io/IOException/IOException(java.lang.String)
org/apache/pdfbox/examples/pdmodel/AddImageToPDF/createPDFFromImage(java.lang.String,java.lang.String,java.lang.String)#java/io/FileInputStream/FileInputStream(java.lang.String)
org/apache/pdfbox/examples/pdmodel/AddImageToPDF/createPDFFromImage(java.lang.String,java.lang.String,java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/apache/pdfbox/examples/pdmodel/AddImageToPDF/createPDFFromImage(java.lang.String,java.lang.String,java.lang.String)#java/lang/StringBuilder/toString()
org/apache/pdfbox/examples/pdmodel/AddImageToPDF/createPDFFromImage(java.lang.String,java.lang.String,java.lang.String)#java/lang/String/endsWith(java.lang.String)
org/apache/pdfbox/filter/JBIG2Filter/decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)#java/awt/image/DataBuffer/getDataType()
org/apache/pdfbox/filter/JBIG2Filter/decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)#java/lang/StringBuilder/append(java.lang.String)
org/apache/pdfbox/filter/JBIG2Filter/decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)#java/lang/StringBuilder/append(int)
org/apache/pdfbox/filter/JBIG2Filter/decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)#java/awt/image/DataBufferByte/getData()
org/apache/pdfbox/filter/JBIG2Filter/decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)#javax/imageio/ImageIO/read(java.io.InputStream)
org/apache/pdfbox/filter/JBIG2Filter/decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)#java/lang/StringBuilder/StringBuilder()
org/apache/pdfbox/filter/JBIG2Filter/decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)#java/awt/image/BufferedImage/getData()
org/apache/pdfbox/filter/JBIG2Filter/decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)#org/apache/commons/logging/Log/error(java.lang.Object)
org/apache/pdfbox/filter/JBIG2Filter/decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)#java/awt/image/Raster/getDataBuffer()
org/apache/pdfbox/filter/JBIG2Filter/decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)#java/io/OutputStream/write(byte[])
org/apache/pdfbox/filter/JBIG2Filter/decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)#java/lang/StringBuilder/toString()
org/apache/pdfbox/pdmodel/PDPage/convertToImage(int,int)#java/awt/Dimension/Dimension(int,int)
org/apache/pdfbox/pdmodel/PDPage/convertToImage(int,int)#java/lang/Math/toRadians(double)
org/apache/pdfbox/pdmodel/PDPage/convertToImage(int,int)#java/awt/image/BufferedImage/getHeight()
org/apache/pdfbox/pdmodel/PDPage/convertToImage(int,int)#java/awt/Graphics2D/drawImage(java.awt.image.BufferedImage,java.awt.image.BufferedImageOp,int,int)
org/apache/pdfbox/pdmodel/PDPage/convertToImage(int,int)#java/awt/image/BufferedImage/getGraphics()
org/apache/pdfbox/pdmodel/PDPage/convertToImage(int,int)#java/awt/Graphics2D/rotate(double,double,double)
org/apache/pdfbox/pdmodel/PDPage/convertToImage(int,int)#java/awt/image/BufferedImage/getType()
org/apache/pdfbox/pdmodel/PDPage/convertToImage(int,int)#java/awt/image/BufferedImage/BufferedImage(int,int,int)
org/apache/pdfbox/pdmodel/PDPage/convertToImage(int,int)#org/apache/commons/logging/Log/warn(java.lang.Object,java.lang.Throwable)
org/apache/pdfbox/pdmodel/PDPage/convertToImage(int,int)#java/awt/Graphics2D/scale(double,double)
org/apache/pdfbox/pdmodel/PDPage/convertToImage(int,int)#java/awt/image/BufferedImage/createGraphics()
org/apache/pdfbox/pdmodel/PDPage/convertToImage(int,int)#java/awt/image/BufferedImage/getWidth()
org/apache/pdfbox/pdmodel/PDPage/convertToImage(int,int)#java/awt/Graphics2D/setBackground(java.awt.Color)
org/apache/pdfbox/pdmodel/PDPage/convertToImage(int,int)#java/lang/Math/round(float)
org/apache/pdfbox/pdmodel/PDPage/convertToImage(int,int)#java/awt/Graphics2D/clearRect(int,int,int,int)
org/apache/pdfbox/pdmodel/font/PDSimpleFont/writeFont(java.awt.Graphics2D,java.awt.geom.AffineTransform,java.awt.Font,float,float,java.lang.String)#java/awt/Graphics2D/setFont(java.awt.Font)
org/apache/pdfbox/pdmodel/font/PDSimpleFont/writeFont(java.awt.Graphics2D,java.awt.geom.AffineTransform,java.awt.Font,float,float,java.lang.String)#java/awt/geom/Point2D$Float/getX()
org/apache/pdfbox/pdmodel/font/PDSimpleFont/writeFont(java.awt.Graphics2D,java.awt.geom.AffineTransform,java.awt.Font,float,float,java.lang.String)#java/awt/geom/Point2D$Float/getY()
org/apache/pdfbox/pdmodel/font/PDSimpleFont/writeFont(java.awt.Graphics2D,java.awt.geom.AffineTransform,java.awt.Font,float,float,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/apache/pdfbox/pdmodel/font/PDSimpleFont/writeFont(java.awt.Graphics2D,java.awt.geom.AffineTransform,java.awt.Font,float,float,java.lang.String)#java/awt/geom/AffineTransform/transform(java.awt.geom.Point2D,java.awt.geom.Point2D)
org/apache/pdfbox/pdmodel/font/PDSimpleFont/writeFont(java.awt.Graphics2D,java.awt.geom.AffineTransform,java.awt.Font,float,float,java.lang.String)#java/lang/Class/getName()
org/apache/pdfbox/pdmodel/font/PDSimpleFont/writeFont(java.awt.Graphics2D,java.awt.geom.AffineTransform,java.awt.Font,float,float,java.lang.String)#java/awt/geom/Point2D$Float/Float(float,float)
org/apache/pdfbox/pdmodel/font/PDSimpleFont/writeFont(java.awt.Graphics2D,java.awt.geom.AffineTransform,java.awt.Font,float,float,java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/apache/pdfbox/pdmodel/font/PDSimpleFont/writeFont(java.awt.Graphics2D,java.awt.geom.AffineTransform,java.awt.Font,float,float,java.lang.String)#org/apache/commons/logging/Log/error(java.lang.Object,java.lang.Throwable)
org/apache/pdfbox/pdmodel/font/PDSimpleFont/writeFont(java.awt.Graphics2D,java.awt.geom.AffineTransform,java.awt.Font,float,float,java.lang.String)#java/awt/Font/deriveFont(float)
org/apache/pdfbox/pdmodel/font/PDSimpleFont/writeFont(java.awt.Graphics2D,java.awt.geom.AffineTransform,java.awt.Font,float,float,java.lang.String)#java/lang/Object/getClass()
org/apache/pdfbox/pdmodel/font/PDSimpleFont/writeFont(java.awt.Graphics2D,java.awt.geom.AffineTransform,java.awt.Font,float,float,java.lang.String)#java/awt/Graphics2D/transform(java.awt.geom.AffineTransform)
org/apache/pdfbox/pdmodel/font/PDSimpleFont/writeFont(java.awt.Graphics2D,java.awt.geom.AffineTransform,java.awt.Font,float,float,java.lang.String)#java/awt/Font/deriveFont(java.awt.geom.AffineTransform)
org/apache/pdfbox/pdmodel/font/PDSimpleFont/writeFont(java.awt.Graphics2D,java.awt.geom.AffineTransform,java.awt.Font,float,float,java.lang.String)#java/awt/Graphics2D/drawString(java.lang.String,float,float)
org/apache/pdfbox/pdmodel/font/PDSimpleFont/writeFont(java.awt.Graphics2D,java.awt.geom.AffineTransform,java.awt.Font,float,float,java.lang.String)#java/lang/StringBuilder/toString()
org/apache/pdfbox/pdmodel/font/PDSimpleFont/writeFont(java.awt.Graphics2D,java.awt.geom.AffineTransform,java.awt.Font,float,float,java.lang.String)#java/awt/geom/AffineTransform/isIdentity()
org/apache/pdfbox/pdmodel/font/PDSimpleFont/writeFont(java.awt.Graphics2D,java.awt.geom.AffineTransform,java.awt.Font,float,float,java.lang.String)#java/awt/geom/AffineTransform/createInverse()
org/apache/pdfbox/pdmodel/font/PDSimpleFont/drawString(java.lang.String,java.awt.Graphics,float,java.awt.geom.AffineTransform,float,float)#org/apache/pdfbox/pdmodel/font/PDSimpleFont/isType1Font()
org/apache/pdfbox/pdmodel/font/PDSimpleFont/drawString(java.lang.String,java.awt.Graphics,float,java.awt.geom.AffineTransform,float,float)#org/apache/commons/logging/Log/warn(java.lang.Object)
org/apache/pdfbox/pdmodel/font/PDSimpleFont/drawString(java.lang.String,java.awt.Graphics,float,java.awt.geom.AffineTransform,float,float)#java/lang/StringBuilder/StringBuilder()
org/apache/pdfbox/pdmodel/font/PDSimpleFont/drawString(java.lang.String,java.awt.Graphics,float,java.awt.geom.AffineTransform,float,float)#java/awt/Graphics2D/setRenderingHint(java.awt.RenderingHints$Key,java.lang.Object)
org/apache/pdfbox/pdmodel/font/PDSimpleFont/drawString(java.lang.String,java.awt.Graphics,float,java.awt.geom.AffineTransform,float,float)#java/awt/Font/getName()
org/apache/pdfbox/pdmodel/font/PDSimpleFont/drawString(java.lang.String,java.awt.Graphics,float,java.awt.geom.AffineTransform,float,float)#java/awt/Font/decode(java.lang.String)
org/apache/pdfbox/pdmodel/font/PDSimpleFont/drawString(java.lang.String,java.awt.Graphics,float,java.awt.geom.AffineTransform,float,float)#java/lang/StringBuilder/append(java.lang.String)
org/apache/pdfbox/pdmodel/font/PDSimpleFont/drawString(java.lang.String,java.awt.Graphics,float,java.awt.geom.AffineTransform,float,float)#java/lang/StringBuilder/toString()
org/apache/pdfbox/pdmodel/font/PDSimpleFont/drawString(java.lang.String,java.awt.Graphics,float,java.awt.geom.AffineTransform,float,float)#java/awt/Font/canDisplayUpTo(java.lang.String)
org/apache/pdfbox/pdmodel/font/PDSimpleFont/determineEncoding()#org/apache/pdfbox/pdmodel/font/PDSimpleFont/setFontEncoding(org.apache.pdfbox.encoding.Encoding)
org/apache/pdfbox/pdmodel/font/PDSimpleFont/determineEncoding()#java/util/Map/get(java.lang.Object)
org/apache/pdfbox/pdmodel/font/PDSimpleFont/determineEncoding()#org/apache/pdfbox/pdmodel/font/PDSimpleFont/parseCmap(java.lang.String,java.io.InputStream)
org/apache/pdfbox/pdmodel/font/PDSimpleFont/determineEncoding()#org/apache/pdfbox/pdmodel/font/PDSimpleFont/getEncoding()
org/apache/pdfbox/pdmodel/font/PDSimpleFont/determineEncoding()#java/lang/StringBuilder/StringBuilder()
org/apache/pdfbox/pdmodel/font/PDSimpleFont/determineEncoding()#org/apache/commons/logging/Log/error(java.lang.Object)
org/apache/pdfbox/pdmodel/font/PDSimpleFont/determineEncoding()#java/lang/StringBuilder/append(java.lang.Object)
org/apache/pdfbox/pdmodel/font/PDSimpleFont/determineEncoding()#java/lang/StringBuilder/toString()
org/apache/pdfbox/pdmodel/font/PDSimpleFont/determineEncoding()#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/pdfbox/pdmodel/font/PDSimpleFont/determineEncoding()#java/lang/StringBuilder/append(java.lang.String)
org/apache/pdfbox/pdmodel/graphics/color/PDColorSpaceFactory/createColorSpace(org.apache.pdfbox.pdmodel.PDDocument,java.awt.color.ColorSpace)#java/io/OutputStream/close()
org/apache/pdfbox/pdmodel/graphics/color/PDColorSpaceFactory/createColorSpace(org.apache.pdfbox.pdmodel.PDDocument,java.awt.color.ColorSpace)#java/awt/color/ColorSpace/getNumComponents()
org/apache/pdfbox/pdmodel/graphics/color/PDColorSpaceFactory/createColorSpace(org.apache.pdfbox.pdmodel.PDDocument,java.awt.color.ColorSpace)#java/awt/color/ICC_ColorSpace/getMaxValue(int)
org/apache/pdfbox/pdmodel/graphics/color/PDColorSpaceFactory/createColorSpace(org.apache.pdfbox.pdmodel.PDDocument,java.awt.color.ColorSpace)#java/io/IOException/IOException(java.lang.String)
org/apache/pdfbox/pdmodel/graphics/color/PDColorSpaceFactory/createColorSpace(org.apache.pdfbox.pdmodel.PDDocument,java.awt.color.ColorSpace)#java/awt/color/ICC_ColorSpace/getMinValue(int)
org/apache/pdfbox/pdmodel/graphics/color/PDColorSpaceFactory/createColorSpace(org.apache.pdfbox.pdmodel.PDDocument,java.awt.color.ColorSpace)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/pdfbox/pdmodel/graphics/color/PDColorSpaceFactory/createColorSpace(org.apache.pdfbox.pdmodel.PDDocument,java.awt.color.ColorSpace)#java/io/OutputStream/write(byte[])
org/apache/pdfbox/pdmodel/graphics/color/PDColorSpaceFactory/createColorSpace(org.apache.pdfbox.pdmodel.PDDocument,java.awt.color.ColorSpace)#java/lang/StringBuilder/toString()
org/apache/pdfbox/pdmodel/graphics/color/PDColorSpaceFactory/createColorSpace(org.apache.pdfbox.pdmodel.PDDocument,java.awt.color.ColorSpace)#java/lang/StringBuilder/append(java.lang.String)
org/apache/pdfbox/pdmodel/graphics/color/PDColorSpaceFactory/createColorSpace(org.apache.pdfbox.pdmodel.PDDocument,java.awt.color.ColorSpace)#java/lang/StringBuilder/StringBuilder()
org/apache/pdfbox/pdmodel/graphics/color/PDColorSpaceFactory/createColorSpace(org.apache.pdfbox.pdmodel.PDDocument,java.awt.color.ColorSpace)#java/awt/color/ICC_Profile/getData()
org/apache/pdfbox/pdmodel/graphics/color/PDColorSpaceFactory/createColorSpace(org.apache.pdfbox.pdmodel.PDDocument,java.awt.color.ColorSpace)#java/awt/color/ICC_ColorSpace/getProfile()
org/apache/pdfbox/pdmodel/graphics/color/PDColorSpaceFactory/createColorSpace(org.apache.pdfbox.pdmodel.PDDocument,java.awt.color.ColorSpace)#java/awt/color/ColorSpace/isCS_sRGB()
org/apache/pdfbox/cos/COSFloat/writePDF(java.io.OutputStream)#java/text/DecimalFormat/getDecimalFormatSymbols()
org/apache/pdfbox/cos/COSFloat/writePDF(java.io.OutputStream)#java/text/DecimalFormat/setDecimalFormatSymbols(java.text.DecimalFormatSymbols)
org/apache/pdfbox/cos/COSFloat/writePDF(java.io.OutputStream)#java/text/DecimalFormatSymbols/setDecimalSeparator(char)
org/apache/pdfbox/cos/COSFloat/writePDF(java.io.OutputStream)#java/text/NumberFormat/getNumberInstance()
org/apache/pdfbox/cos/COSFloat/writePDF(java.io.OutputStream)#java/lang/String/getBytes(java.lang.String)
org/apache/pdfbox/cos/COSFloat/writePDF(java.io.OutputStream)#java/text/DecimalFormat/setMaximumFractionDigits(int)
org/apache/pdfbox/cos/COSFloat/writePDF(java.io.OutputStream)#java/io/OutputStream/write(byte[])
org/apache/pdfbox/cos/COSFloat/writePDF(java.io.OutputStream)#java/text/DecimalFormat/setGroupingUsed(boolean)
org/apache/pdfbox/cos/COSFloat/writePDF(java.io.OutputStream)#java/text/DecimalFormat/format(double)
org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject/toString()#org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject/isSpecified(java.lang.String)
org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject/toString()#java/lang/String/valueOf(float)
org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject/toString()#java/lang/String/valueOf(java.lang.Object)
org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject/toString()#java/lang/StringBuilder/append(java.lang.String)
org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject/toString()#org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDStandardAttributeObject/toString()
org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject/toString()#java/lang/StringBuilder/StringBuilder()
org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject/toString()#org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject/arrayToString(java.lang.Object[])
org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject/toString()#java/lang/StringBuilder/append(java.lang.Object)
org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject/toString()#org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject/arrayToString(float[])
org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject/toString()#java/lang/StringBuilder/toString()
org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject/toString()#java/lang/String/valueOf(int)
org/apache/pdfbox/util/PDFHighlighter/endPage(org.apache.pdfbox.pdmodel.PDPage)#java/lang/String/replaceAll(java.lang.String,java.lang.String)
org/apache/pdfbox/util/PDFHighlighter/endPage(org.apache.pdfbox.pdmodel.PDPage)#java/lang/StringBuilder/append(java.lang.String)
org/apache/pdfbox/util/PDFHighlighter/endPage(org.apache.pdfbox.pdmodel.PDPage)#java/lang/StringBuilder/append(int)
org/apache/pdfbox/util/PDFHighlighter/endPage(org.apache.pdfbox.pdmodel.PDPage)#java/lang/String/String(byte[],java.lang.String)
org/apache/pdfbox/util/PDFHighlighter/endPage(org.apache.pdfbox.pdmodel.PDPage)#java/util/regex/Matcher/find()
org/apache/pdfbox/util/PDFHighlighter/endPage(org.apache.pdfbox.pdmodel.PDPage)#java/util/regex/Pattern/matcher(java.lang.CharSequence)
org/apache/pdfbox/util/PDFHighlighter/endPage(org.apache.pdfbox.pdmodel.PDPage)#java/io/Writer/flush()
org/apache/pdfbox/util/PDFHighlighter/endPage(org.apache.pdfbox.pdmodel.PDPage)#java/lang/StringBuilder/toString()
org/apache/pdfbox/util/PDFHighlighter/endPage(org.apache.pdfbox.pdmodel.PDPage)#org/apache/pdfbox/util/PDFHighlighter/getCurrentPageNo()
org/apache/pdfbox/util/PDFHighlighter/endPage(org.apache.pdfbox.pdmodel.PDPage)#java/util/regex/Pattern/compile(java.lang.String,int)
org/apache/pdfbox/util/PDFHighlighter/endPage(org.apache.pdfbox.pdmodel.PDPage)#java/util/regex/Matcher/end()
org/apache/pdfbox/util/PDFHighlighter/endPage(org.apache.pdfbox.pdmodel.PDPage)#java/io/ByteArrayOutputStream/reset()
org/apache/pdfbox/util/PDFHighlighter/endPage(org.apache.pdfbox.pdmodel.PDPage)#java/lang/StringBuilder/StringBuilder()
org/apache/pdfbox/util/PDFHighlighter/endPage(org.apache.pdfbox.pdmodel.PDPage)#java/lang/String/indexOf(java.lang.String)
org/apache/pdfbox/util/PDFHighlighter/endPage(org.apache.pdfbox.pdmodel.PDPage)#java/io/Writer/write(java.lang.String)
org/apache/pdfbox/util/PDFHighlighter/endPage(org.apache.pdfbox.pdmodel.PDPage)#java/util/regex/Matcher/start()
org/apache/pdfbox/util/PDFHighlighter/endPage(org.apache.pdfbox.pdmodel.PDPage)#java/io/ByteArrayOutputStream/toByteArray()
org/apache/pdfbox/pdmodel/interactive/form/PDAppearance/setAppearanceValue(java.lang.String)#org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationWidget/getRectangle()
org/apache/pdfbox/pdmodel/interactive/form/PDAppearance/setAppearanceValue(java.lang.String)#java/lang/String/getBytes(java.lang.String)
org/apache/pdfbox/pdmodel/interactive/form/PDAppearance/setAppearanceValue(java.lang.String)#java/lang/String/indexOf(int)
org/apache/pdfbox/pdmodel/interactive/form/PDAppearance/setAppearanceValue(java.lang.String)#java/util/List/indexOf(java.lang.Object)
org/apache/pdfbox/pdmodel/interactive/form/PDAppearance/setAppearanceValue(java.lang.String)#java/util/Iterator/hasNext()
org/apache/pdfbox/pdmodel/interactive/form/PDAppearance/setAppearanceValue(java.lang.String)#org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationWidget/getAppearance()
org/apache/pdfbox/pdmodel/interactive/form/PDAppearance/setAppearanceValue(java.lang.String)#org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationWidget/setAppearance(org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary)
org/apache/pdfbox/pdmodel/interactive/form/PDAppearance/setAppearanceValue(java.lang.String)#java/util/Map/get(java.lang.Object)
org/apache/pdfbox/pdmodel/interactive/form/PDAppearance/setAppearanceValue(java.lang.String)#java/util/List/size()
org/apache/pdfbox/pdmodel/interactive/form/PDAppearance/setAppearanceValue(java.lang.String)#java/util/Iterator/next()
org/apache/pdfbox/pdmodel/interactive/form/PDAppearance/setAppearanceValue(java.lang.String)#java/util/List/addAll(int,java.util.Collection)
org/apache/pdfbox/pdmodel/interactive/form/PDAppearance/setAppearanceValue(java.lang.String)#java/io/ByteArrayOutputStream/write(byte[])
org/apache/pdfbox/pdmodel/interactive/form/PDAppearance/setAppearanceValue(java.lang.String)#java/util/List/get(int)
org/apache/pdfbox/pdmodel/interactive/form/PDAppearance/setAppearanceValue(java.lang.String)#org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationWidget/getDictionary()
org/apache/pdfbox/pdmodel/interactive/form/PDAppearance/setAppearanceValue(java.lang.String)#java/io/ByteArrayOutputStream/toByteArray()
org/apache/pdfbox/pdmodel/interactive/form/PDAppearance/setAppearanceValue(java.lang.String)#java/util/List/iterator()
org/apache/pdfbox/pdmodel/interactive/form/PDAppearance/setAppearanceValue(java.lang.String)#java/util/List/set(int,java.lang.Object)
org/apache/pdfbox/pdmodel/interactive/form/PDAppearance/setAppearanceValue(java.lang.String)#java/io/ByteArrayOutputStream/ByteArrayOutputStream()
org/apache/pdfbox/pdmodel/interactive/form/PDAppearance/insertGeneratedAppearance(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget,java.io.OutputStream,org.apache.pdfbox.pdmodel.font.PDFont,java.util.List,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream)#org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationWidget/getRectangle()
org/apache/pdfbox/pdmodel/interactive/form/PDAppearance/insertGeneratedAppearance(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget,java.io.OutputStream,org.apache.pdfbox.pdmodel.font.PDFont,java.util.List,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream)#java/io/ByteArrayInputStream/ByteArrayInputStream(byte[])
org/apache/pdfbox/pdmodel/interactive/form/PDAppearance/insertGeneratedAppearance(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget,java.io.OutputStream,org.apache.pdfbox.pdmodel.font.PDFont,java.util.List,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream)#java/lang/StringBuilder/StringBuilder()
org/apache/pdfbox/pdmodel/interactive/form/PDAppearance/insertGeneratedAppearance(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget,java.io.OutputStream,org.apache.pdfbox.pdmodel.font.PDFont,java.util.List,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream)#java/io/PrintWriter/flush()
org/apache/pdfbox/pdmodel/interactive/form/PDAppearance/insertGeneratedAppearance(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget,java.io.OutputStream,org.apache.pdfbox.pdmodel.font.PDFont,java.util.List,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream)#java/lang/String/getBytes(java.lang.String)
org/apache/pdfbox/pdmodel/interactive/form/PDAppearance/insertGeneratedAppearance(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget,java.io.OutputStream,org.apache.pdfbox.pdmodel.font.PDFont,java.util.List,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream)#java/lang/StringBuilder/append(float)
org/apache/pdfbox/pdmodel/interactive/form/PDAppearance/insertGeneratedAppearance(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget,java.io.OutputStream,org.apache.pdfbox.pdmodel.font.PDFont,java.util.List,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream)#java/io/IOException/IOException(java.lang.String)
org/apache/pdfbox/pdmodel/interactive/form/PDAppearance/insertGeneratedAppearance(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget,java.io.OutputStream,org.apache.pdfbox.pdmodel.font.PDFont,java.util.List,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream)#java/lang/StringBuilder/append(java.lang.String)
org/apache/pdfbox/pdmodel/interactive/form/PDAppearance/insertGeneratedAppearance(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget,java.io.OutputStream,org.apache.pdfbox.pdmodel.font.PDFont,java.util.List,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream)#java/lang/StringBuilder/append(int)
org/apache/pdfbox/pdmodel/interactive/form/PDAppearance/insertGeneratedAppearance(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget,java.io.OutputStream,org.apache.pdfbox.pdmodel.font.PDFont,java.util.List,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream)#java/util/List/set(int,java.lang.Object)
org/apache/pdfbox/pdmodel/interactive/form/PDAppearance/insertGeneratedAppearance(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget,java.io.OutputStream,org.apache.pdfbox.pdmodel.font.PDFont,java.util.List,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream)#java/io/PrintWriter/println(java.lang.String)
org/apache/pdfbox/pdmodel/interactive/form/PDAppearance/insertGeneratedAppearance(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget,java.io.OutputStream,org.apache.pdfbox.pdmodel.font.PDFont,java.util.List,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream)#java/lang/StringBuilder/toString()
org/apache/pdfbox/pdmodel/interactive/form/PDAppearance/insertGeneratedAppearance(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget,java.io.OutputStream,org.apache.pdfbox.pdmodel.font.PDFont,java.util.List,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream)#java/io/PrintWriter/PrintWriter(java.io.OutputStream,boolean)
org/apache/pdfbox/pdmodel/interactive/form/PDAppearance/insertGeneratedAppearance(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget,java.io.OutputStream,org.apache.pdfbox.pdmodel.font.PDFont,java.util.List,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream)#java/util/List/indexOf(java.lang.Object)
org/apache/pdfbox/examples/signature/ShowSignature/showSignature(java.lang.String[])#java/security/cert/CertificateFactory/getInstance(java.lang.String)
org/apache/pdfbox/examples/signature/ShowSignature/showSignature(java.lang.String[])#java/lang/StringBuilder/StringBuilder()
org/apache/pdfbox/examples/signature/ShowSignature/showSignature(java.lang.String[])#java/lang/StringBuilder/toString()
org/apache/pdfbox/examples/signature/ShowSignature/showSignature(java.lang.String[])#java/io/IOException/IOException(java.lang.String)
org/apache/pdfbox/examples/signature/ShowSignature/showSignature(java.lang.String[])#java/lang/StringBuilder/append(java.lang.String)
org/apache/pdfbox/examples/signature/ShowSignature/showSignature(java.lang.String[])#java/io/PrintStream/println(java.lang.String)
org/apache/pdfbox/examples/signature/ShowSignature/showSignature(java.lang.String[])#java/io/ByteArrayInputStream/ByteArrayInputStream(byte[])
org/apache/pdfbox/examples/signature/ShowSignature/showSignature(java.lang.String[])#java/lang/String/equals(java.lang.Object)
org/apache/pdfbox/examples/signature/ShowSignature/showSignature(java.lang.String[])#java/lang/StringBuilder/append(java.lang.Object)
org/apache/pdfbox/examples/signature/ShowSignature/showSignature(java.lang.String[])#java/security/cert/CertificateFactory/generateCertificates(java.io.InputStream)
org/apache/pdfbox/pdmodel/graphics/xobject/PDJpeg/getBytesFromFile(java.io.File)#java/io/InputStream/read(byte[],int,int)
org/apache/pdfbox/pdmodel/graphics/xobject/PDJpeg/getBytesFromFile(java.io.File)#java/io/File/getName()
org/apache/pdfbox/pdmodel/graphics/xobject/PDJpeg/getBytesFromFile(java.io.File)#java/io/IOException/IOException(java.lang.String)
org/apache/pdfbox/pdmodel/graphics/xobject/PDJpeg/getBytesFromFile(java.io.File)#java/lang/StringBuilder/append(java.lang.String)
org/apache/pdfbox/pdmodel/graphics/xobject/PDJpeg/getBytesFromFile(java.io.File)#java/io/InputStream/close()
org/apache/pdfbox/pdmodel/graphics/xobject/PDJpeg/getBytesFromFile(java.io.File)#java/lang/StringBuilder/StringBuilder()
org/apache/pdfbox/pdmodel/graphics/xobject/PDJpeg/getBytesFromFile(java.io.File)#java/io/File/length()
org/apache/pdfbox/pdmodel/graphics/xobject/PDJpeg/getBytesFromFile(java.io.File)#java/io/FileInputStream/FileInputStream(java.io.File)
org/apache/pdfbox/pdmodel/graphics/xobject/PDJpeg/getBytesFromFile(java.io.File)#java/lang/StringBuilder/toString()
org/apache/pdfbox/pdmodel/graphics/xobject/PDJpeg/createImageStream(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage,float)#java/awt/Color/getRed()
org/apache/pdfbox/pdmodel/graphics/xobject/PDJpeg/createImageStream(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage,float)#org/apache/pdfbox/pdmodel/graphics/xobject/PDJpeg/setHeight(int)
org/apache/pdfbox/pdmodel/graphics/xobject/PDJpeg/createImageStream(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage,float)#java/awt/image/BufferedImage/setRGB(int,int,int)
org/apache/pdfbox/pdmodel/graphics/xobject/PDJpeg/createImageStream(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage,float)#java/util/Iterator/hasNext()
org/apache/pdfbox/pdmodel/graphics/xobject/PDJpeg/createImageStream(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage,float)#java/awt/image/BufferedImage/BufferedImage(int,int,int)
org/apache/pdfbox/pdmodel/graphics/xobject/PDJpeg/createImageStream(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage,float)#java/awt/Color/Color(int)
org/apache/pdfbox/pdmodel/graphics/xobject/PDJpeg/createImageStream(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage,float)#javax/imageio/IIOImage/IIOImage(java.awt.image.RenderedImage,java.util.List,javax.imageio.metadata.IIOMetadata)
org/apache/pdfbox/pdmodel/graphics/xobject/PDJpeg/createImageStream(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage,float)#java/util/Iterator/next()
org/apache/pdfbox/pdmodel/graphics/xobject/PDJpeg/createImageStream(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage,float)#java/awt/image/BufferedImage/getHeight()
org/apache/pdfbox/pdmodel/graphics/xobject/PDJpeg/createImageStream(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage,float)#javax/imageio/ImageIO/getImageWritersByFormatName(java.lang.String)
org/apache/pdfbox/pdmodel/graphics/xobject/PDJpeg/createImageStream(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage,float)#java/awt/image/ColorModel/getNumComponents()
org/apache/pdfbox/pdmodel/graphics/xobject/PDJpeg/createImageStream(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage,float)#java/awt/Graphics2D/drawRect(int,int,int,int)
org/apache/pdfbox/pdmodel/graphics/xobject/PDJpeg/createImageStream(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage,float)#java/awt/Graphics2D/drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)
org/apache/pdfbox/pdmodel/graphics/xobject/PDJpeg/createImageStream(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage,float)#java/awt/Color/getBlue()
org/apache/pdfbox/pdmodel/graphics/xobject/PDJpeg/createImageStream(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage,float)#java/io/OutputStream/close()
org/apache/pdfbox/pdmodel/graphics/xobject/PDJpeg/createImageStream(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage,float)#javax/imageio/ImageWriter/write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)
org/apache/pdfbox/pdmodel/graphics/xobject/PDJpeg/createImageStream(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage,float)#org/apache/pdfbox/pdmodel/graphics/xobject/PDJpeg/setBitsPerComponent(int)
org/apache/pdfbox/pdmodel/graphics/xobject/PDJpeg/createImageStream(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage,float)#javax/imageio/ImageWriter/setOutput(java.lang.Object)
org/apache/pdfbox/pdmodel/graphics/xobject/PDJpeg/createImageStream(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage,float)#java/lang/IllegalStateException/IllegalStateException()
org/apache/pdfbox/pdmodel/graphics/xobject/PDJpeg/createImageStream(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage,float)#java/awt/image/BufferedImage/createGraphics()
org/apache/pdfbox/pdmodel/graphics/xobject/PDJpeg/createImageStream(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage,float)#java/awt/Graphics2D/setColor(java.awt.Color)
org/apache/pdfbox/pdmodel/graphics/xobject/PDJpeg/createImageStream(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage,float)#org/apache/pdfbox/pdmodel/graphics/xobject/PDJpeg/setWidth(int)
org/apache/pdfbox/pdmodel/graphics/xobject/PDJpeg/createImageStream(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage,float)#javax/imageio/plugins/jpeg/JPEGImageWriteParam/JPEGImageWriteParam(java.util.Locale)
org/apache/pdfbox/pdmodel/graphics/xobject/PDJpeg/createImageStream(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage,float)#org/apache/pdfbox/pdmodel/graphics/xobject/PDJpeg/setColorSpace(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)
org/apache/pdfbox/pdmodel/graphics/xobject/PDJpeg/createImageStream(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage,float)#java/awt/image/BufferedImage/getWidth()
org/apache/pdfbox/pdmodel/graphics/xobject/PDJpeg/createImageStream(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage,float)#java/awt/image/BufferedImage/getColorModel()
org/apache/pdfbox/pdmodel/graphics/xobject/PDJpeg/createImageStream(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage,float)#javax/imageio/ImageWriter/dispose()
org/apache/pdfbox/pdmodel/graphics/xobject/PDJpeg/createImageStream(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage,float)#java/awt/Color/getGreen()
org/apache/pdfbox/pdmodel/graphics/xobject/PDJpeg/createImageStream(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage,float)#javax/imageio/ImageIO/createImageOutputStream(java.lang.Object)
org/apache/pdfbox/pdmodel/graphics/xobject/PDJpeg/createImageStream(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage,float)#javax/imageio/plugins/jpeg/JPEGImageWriteParam/setCompressionQuality(float)
org/apache/pdfbox/pdmodel/graphics/xobject/PDJpeg/createImageStream(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage,float)#javax/imageio/plugins/jpeg/JPEGImageWriteParam/setCompressionMode(int)
org/apache/pdfbox/pdmodel/graphics/xobject/PDJpeg/createImageStream(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage,float)#java/awt/image/ColorModel/hasAlpha()
org/apache/pdfbox/pdmodel/graphics/xobject/PDJpeg/createImageStream(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage,float)#java/awt/image/BufferedImage/getRGB(int,int)
org/apache/pdfbox/pdmodel/graphics/xobject/PDJpeg/createImageStream(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage,float)#org/apache/pdfbox/pdmodel/graphics/xobject/PDJpeg/getCOSStream()
org/apache/pdfbox/pdmodel/graphics/xobject/PDJpeg/createImageStream(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage,float)#java/util/Locale/getDefault()
org/apache/pdfbox/pdmodel/graphics/xobject/PDJpeg/createImageStream(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage,float)#java/awt/Color/getRGB()
org/apache/pdfbox/examples/pdmodel/CreateBookmarks/main(java.lang.String[])#org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDDocumentOutline/appendChild(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem)
org/apache/pdfbox/examples/pdmodel/CreateBookmarks/main(java.lang.String[])#java/lang/System/exit(int)
org/apache/pdfbox/examples/pdmodel/CreateBookmarks/main(java.lang.String[])#java/lang/StringBuilder/StringBuilder()
org/apache/pdfbox/examples/pdmodel/CreateBookmarks/main(java.lang.String[])#java/util/List/get(int)
org/apache/pdfbox/examples/pdmodel/CreateBookmarks/main(java.lang.String[])#org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItem/openNode()
org/apache/pdfbox/examples/pdmodel/CreateBookmarks/main(java.lang.String[])#java/lang/StringBuilder/toString()
org/apache/pdfbox/examples/pdmodel/CreateBookmarks/main(java.lang.String[])#java/lang/StringBuilder/append(java.lang.String)
org/apache/pdfbox/examples/pdmodel/CreateBookmarks/main(java.lang.String[])#java/io/PrintStream/println(java.lang.String)
org/apache/pdfbox/examples/pdmodel/CreateBookmarks/main(java.lang.String[])#java/lang/StringBuilder/append(int)
org/apache/pdfbox/examples/pdmodel/CreateBookmarks/main(java.lang.String[])#org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDDocumentOutline/openNode()
org/apache/pdfbox/examples/pdmodel/CreateBookmarks/main(java.lang.String[])#java/util/List/size()
org/apache/pdfbox/examples/pdmodel/CreateBookmarks/main(java.lang.String[])#org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItem/appendChild(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem)
org/apache/pdfbox/examples/pdmodel/CreateBookmarks/main(java.lang.String[])#org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitWidthDestination/setPage(org.apache.pdfbox.pdmodel.PDPage)
