org/springframework/integration/mail/transformer/MailToStringTransformer/doTransform(javax.mail.Message)#javax/mail/Message/getContentType()
org/springframework/integration/mail/transformer/MailToStringTransformer/doTransform(javax.mail.Message)#javax/mail/Message/getContent()
org/springframework/integration/mail/transformer/MailToStringTransformer/doTransform(javax.mail.Message)#java/lang/StringBuilder/append(java.lang.String)
org/springframework/integration/mail/transformer/MailToStringTransformer/doTransform(javax.mail.Message)#java/lang/String/String(byte[],java.lang.String)
org/springframework/integration/mail/transformer/MailToStringTransformer/doTransform(javax.mail.Message)#javax/mail/Multipart/writeTo(java.io.OutputStream)
org/springframework/integration/mail/transformer/MailToStringTransformer/doTransform(javax.mail.Message)#java/io/ByteArrayOutputStream/ByteArrayOutputStream()
org/springframework/integration/mail/transformer/MailToStringTransformer/doTransform(javax.mail.Message)#java/lang/StringBuilder/StringBuilder()
org/springframework/integration/mail/transformer/MailToStringTransformer/doTransform(javax.mail.Message)#org/springframework/integration/support/MessageBuilderFactory/withPayload(java.lang.Object)
org/springframework/integration/mail/transformer/MailToStringTransformer/doTransform(javax.mail.Message)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/springframework/integration/mail/transformer/MailToStringTransformer/doTransform(javax.mail.Message)#java/io/ByteArrayOutputStream/toByteArray()
org/springframework/integration/mail/transformer/MailToStringTransformer/doTransform(javax.mail.Message)#java/lang/StringBuilder/toString()
org/springframework/integration/mail/transformer/MailToStringTransformer/doTransform(javax.mail.Message)#org/springframework/integration/mail/transformer/MailToStringTransformer/getMessageBuilderFactory()
org/springframework/integration/mail/MailTransportUtils/toPasswordProtectedString(javax.mail.URLName)#org/springframework/util/StringUtils/hasLength(java.lang.String)
org/springframework/integration/mail/MailTransportUtils/toPasswordProtectedString(javax.mail.URLName)#javax/mail/URLName/getHost()
org/springframework/integration/mail/MailTransportUtils/toPasswordProtectedString(javax.mail.URLName)#java/lang/StringBuffer/append(char)
org/springframework/integration/mail/MailTransportUtils/toPasswordProtectedString(javax.mail.URLName)#java/lang/Integer/toString(int)
org/springframework/integration/mail/MailTransportUtils/toPasswordProtectedString(javax.mail.URLName)#javax/mail/URLName/getRef()
org/springframework/integration/mail/MailTransportUtils/toPasswordProtectedString(javax.mail.URLName)#javax/mail/URLName/getProtocol()
org/springframework/integration/mail/MailTransportUtils/toPasswordProtectedString(javax.mail.URLName)#javax/mail/URLName/getPassword()
org/springframework/integration/mail/MailTransportUtils/toPasswordProtectedString(javax.mail.URLName)#javax/mail/URLName/getFile()
org/springframework/integration/mail/MailTransportUtils/toPasswordProtectedString(javax.mail.URLName)#java/lang/StringBuffer/append(java.lang.String)
org/springframework/integration/mail/MailTransportUtils/toPasswordProtectedString(javax.mail.URLName)#javax/mail/URLName/getPort()
org/springframework/integration/mail/MailTransportUtils/toPasswordProtectedString(javax.mail.URLName)#java/lang/StringBuffer/StringBuffer()
org/springframework/integration/mail/MailTransportUtils/toPasswordProtectedString(javax.mail.URLName)#javax/mail/URLName/getUsername()
org/springframework/integration/mail/MailTransportUtils/toPasswordProtectedString(javax.mail.URLName)#java/lang/StringBuffer/toString()
org/springframework/integration/mail/transformer/AbstractMailMessageTransformer/transform(org.springframework.messaging.Message)#java/lang/Class/getSimpleName()
org/springframework/integration/mail/transformer/AbstractMailMessageTransformer/transform(org.springframework.messaging.Message)#java/lang/StringBuilder/append(java.lang.String)
org/springframework/integration/mail/transformer/AbstractMailMessageTransformer/transform(org.springframework.messaging.Message)#org/springframework/integration/support/AbstractIntegrationMessageBuilder/copyHeaders(java.util.Map)
org/springframework/integration/mail/transformer/AbstractMailMessageTransformer/transform(org.springframework.messaging.Message)#org/springframework/messaging/Message/getPayload()
org/springframework/integration/mail/transformer/AbstractMailMessageTransformer/transform(org.springframework.messaging.Message)#java/lang/StringBuilder/StringBuilder()
org/springframework/integration/mail/transformer/AbstractMailMessageTransformer/transform(org.springframework.messaging.Message)#java/lang/Object/getClass()
org/springframework/integration/mail/transformer/AbstractMailMessageTransformer/transform(org.springframework.messaging.Message)#java/lang/StringBuilder/toString()
org/springframework/integration/mail/transformer/AbstractMailMessageTransformer/transform(org.springframework.messaging.Message)#org/springframework/integration/support/AbstractIntegrationMessageBuilder/build()
org/springframework/integration/mail/transformer/AbstractMailMessageTransformer/transform(org.springframework.messaging.Message)#org/springframework/integration/transformer/MessageTransformationException/MessageTransformationException(org.springframework.messaging.Message,java.lang.String)
org/springframework/integration/mail/transformer/AbstractMailMessageTransformer/transform(org.springframework.messaging.Message)#org/springframework/integration/transformer/MessageTransformationException/MessageTransformationException(org.springframework.messaging.Message,java.lang.String,java.lang.Throwable)
org/springframework/integration/mail/ImapIdleChannelAdapter/IdleTask/run()#java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)
org/springframework/integration/mail/ImapIdleChannelAdapter/IdleTask/run()#org/apache/commons/logging/Log/isDebugEnabled()
org/springframework/integration/mail/ImapIdleChannelAdapter/IdleTask/run()#javax/mail/Folder/isOpen()
org/springframework/integration/mail/ImapIdleChannelAdapter/IdleTask/run()#org/apache/commons/logging/Log/isWarnEnabled()
org/springframework/integration/mail/ImapIdleChannelAdapter/IdleTask/run()#org/springframework/util/Assert/notNull(java.lang.Object,java.lang.String)
org/springframework/integration/mail/ImapIdleChannelAdapter/IdleTask/run()#org/springframework/messaging/MessagingException/MessagingException(java.lang.String,java.lang.Throwable)
org/springframework/integration/mail/ImapIdleChannelAdapter/IdleTask/run()#java/util/concurrent/Executor/execute(java.lang.Runnable)
org/springframework/integration/mail/ImapIdleChannelAdapter/IdleTask/run()#org/springframework/integration/mail/ImapMailReceiver/receive()
org/springframework/integration/mail/ImapIdleChannelAdapter/IdleTask/run()#org/springframework/integration/mail/ImapMailReceiver/getFolder()
org/springframework/integration/mail/ImapIdleChannelAdapter/IdleTask/run()#org/apache/commons/logging/Log/debug(java.lang.Object)
org/springframework/integration/mail/ImapIdleChannelAdapter/IdleTask/run()#org/apache/commons/logging/Log/warn(java.lang.Object,java.lang.Throwable)
org/springframework/integration/mail/ImapIdleChannelAdapter/IdleTask/run()#java/lang/StringBuilder/append(java.lang.String)
org/springframework/integration/mail/ImapIdleChannelAdapter/IdleTask/run()#java/lang/StringBuilder/append(int)
org/springframework/integration/mail/ImapIdleChannelAdapter/IdleTask/run()#java/lang/StringBuilder/StringBuilder()
org/springframework/integration/mail/ImapIdleChannelAdapter/IdleTask/run()#java/lang/StringBuilder/toString()
org/springframework/integration/mail/ImapIdleChannelAdapter/IdleTask/run()#org/springframework/util/Assert/state(boolean,java.lang.String)
org/springframework/integration/mail/ImapMailReceiver/DefaultSearchTermStrategy/generateSearchTerm(javax.mail.Flags,javax.mail.Folder)#javax/mail/Flags/Flags()
org/springframework/integration/mail/ImapMailReceiver/DefaultSearchTermStrategy/generateSearchTerm(javax.mail.Flags,javax.mail.Folder)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/springframework/integration/mail/ImapMailReceiver/DefaultSearchTermStrategy/generateSearchTerm(javax.mail.Flags,javax.mail.Folder)#javax/mail/search/FlagTerm/FlagTerm(javax.mail.Flags,boolean)
org/springframework/integration/mail/ImapMailReceiver/DefaultSearchTermStrategy/generateSearchTerm(javax.mail.Flags,javax.mail.Folder)#javax/mail/Folder/getPermanentFlags()
org/springframework/integration/mail/ImapMailReceiver/DefaultSearchTermStrategy/generateSearchTerm(javax.mail.Flags,javax.mail.Folder)#javax/mail/Flags/Flags(javax.mail.Flags$Flag)
org/springframework/integration/mail/ImapMailReceiver/DefaultSearchTermStrategy/generateSearchTerm(javax.mail.Flags,javax.mail.Folder)#javax/mail/search/AndTerm/AndTerm(javax.mail.search.SearchTerm,javax.mail.search.SearchTerm)
org/springframework/integration/mail/ImapMailReceiver/DefaultSearchTermStrategy/generateSearchTerm(javax.mail.Flags,javax.mail.Folder)#javax/mail/Flags/contains(javax.mail.Flags$Flag)
org/springframework/integration/mail/ImapMailReceiver/DefaultSearchTermStrategy/generateSearchTerm(javax.mail.Flags,javax.mail.Folder)#javax/mail/search/NotTerm/NotTerm(javax.mail.search.SearchTerm)
org/springframework/integration/mail/ImapMailReceiver/DefaultSearchTermStrategy/generateSearchTerm(javax.mail.Flags,javax.mail.Folder)#javax/mail/Flags/add(java.lang.String)
org/springframework/integration/mail/config/MailOutboundChannelAdapterParser/parseConsumer(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)#org/springframework/beans/factory/support/BeanDefinitionBuilder/getBeanDefinition()
org/springframework/integration/mail/config/MailOutboundChannelAdapterParser/parseConsumer(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)#org/springframework/beans/factory/support/BeanDefinitionBuilder/addPropertyValue(java.lang.String,java.lang.Object)
org/springframework/integration/mail/config/MailOutboundChannelAdapterParser/parseConsumer(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)#org/springframework/util/StringUtils/hasText(java.lang.String)
org/springframework/integration/mail/config/MailOutboundChannelAdapterParser/parseConsumer(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)#org/springframework/beans/factory/support/BeanDefinitionReaderUtils/registerWithGeneratedName(org.springframework.beans.factory.support.AbstractBeanDefinition,org.springframework.beans.factory.support.BeanDefinitionRegistry)
org/springframework/integration/mail/config/MailOutboundChannelAdapterParser/parseConsumer(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)#org/springframework/beans/factory/support/BeanDefinitionBuilder/addConstructorArgReference(java.lang.String)
org/springframework/integration/mail/config/MailOutboundChannelAdapterParser/parseConsumer(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)#org/springframework/integration/config/xml/IntegrationNamespaceUtils/setReferenceIfAttributeDefined(org.springframework.beans.factory.support.BeanDefinitionBuilder,org.w3c.dom.Element,java.lang.String,java.lang.String)
org/springframework/integration/mail/config/MailOutboundChannelAdapterParser/parseConsumer(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)#org/springframework/util/Assert/hasText(java.lang.String,java.lang.String)
org/springframework/integration/mail/config/MailOutboundChannelAdapterParser/parseConsumer(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)#org/springframework/beans/factory/support/BeanDefinitionBuilder/genericBeanDefinition(java.lang.Class)
org/springframework/integration/mail/config/MailOutboundChannelAdapterParser/parseConsumer(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)#org/springframework/beans/factory/xml/ParserContext/getRegistry()
org/springframework/integration/mail/config/MailOutboundChannelAdapterParser/parseConsumer(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)#org/springframework/util/Assert/isTrue(boolean,java.lang.String)
org/springframework/integration/mail/config/MailOutboundChannelAdapterParser/parseConsumer(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)#org/w3c/dom/Element/getAttribute(java.lang.String)
org/springframework/integration/mail/config/ImapIdleChannelAdapterParser/parseImapMailReceiver(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)#org/springframework/integration/config/xml/IntegrationNamespaceUtils/setValueIfAttributeDefined(org.springframework.beans.factory.support.BeanDefinitionBuilder,org.w3c.dom.Element,java.lang.String)
org/springframework/integration/mail/config/ImapIdleChannelAdapterParser/parseImapMailReceiver(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)#org/springframework/beans/factory/xml/ParserContext/getReaderContext()
org/springframework/integration/mail/config/ImapIdleChannelAdapterParser/parseImapMailReceiver(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)#org/springframework/beans/factory/support/BeanDefinitionBuilder/getBeanDefinition()
org/springframework/integration/mail/config/ImapIdleChannelAdapterParser/parseImapMailReceiver(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)#org/springframework/beans/factory/support/BeanDefinitionBuilder/addPropertyValue(java.lang.String,java.lang.Object)
org/springframework/integration/mail/config/ImapIdleChannelAdapterParser/parseImapMailReceiver(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)#org/springframework/util/StringUtils/hasText(java.lang.String)
org/springframework/integration/mail/config/ImapIdleChannelAdapterParser/parseImapMailReceiver(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)#org/w3c/dom/Element/hasAttribute(java.lang.String)
org/springframework/integration/mail/config/ImapIdleChannelAdapterParser/parseImapMailReceiver(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)#org/springframework/beans/factory/support/BeanDefinitionBuilder/addConstructorArgValue(java.lang.Object)
org/springframework/integration/mail/config/ImapIdleChannelAdapterParser/parseImapMailReceiver(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)#org/w3c/dom/Element/getAttribute(java.lang.String)
org/springframework/integration/mail/config/ImapIdleChannelAdapterParser/parseImapMailReceiver(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)#org/springframework/beans/factory/support/RootBeanDefinition/getConstructorArgumentValues()
org/springframework/integration/mail/config/ImapIdleChannelAdapterParser/parseImapMailReceiver(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)#org/springframework/beans/factory/xml/XmlReaderContext/error(java.lang.String,java.lang.Object)
org/springframework/integration/mail/config/ImapIdleChannelAdapterParser/parseImapMailReceiver(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)#org/springframework/beans/factory/support/RootBeanDefinition/RootBeanDefinition(java.lang.String)
org/springframework/integration/mail/config/ImapIdleChannelAdapterParser/parseImapMailReceiver(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)#org/springframework/beans/factory/xml/ParserContext/extractSource(java.lang.Object)
org/springframework/integration/mail/config/ImapIdleChannelAdapterParser/parseImapMailReceiver(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)#org/springframework/integration/config/xml/IntegrationNamespaceUtils/setReferenceIfAttributeDefined(org.springframework.beans.factory.support.BeanDefinitionBuilder,org.w3c.dom.Element,java.lang.String,java.lang.String)
org/springframework/integration/mail/config/ImapIdleChannelAdapterParser/parseImapMailReceiver(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)#org/springframework/beans/factory/config/ConstructorArgumentValues/addGenericArgumentValue(java.lang.Object)
org/springframework/integration/mail/config/ImapIdleChannelAdapterParser/parseImapMailReceiver(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)#org/springframework/beans/factory/support/BeanDefinitionBuilder/genericBeanDefinition(java.lang.Class)
org/springframework/integration/mail/config/ImapIdleChannelAdapterParser/parseImapMailReceiver(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)#org/springframework/beans/factory/support/BeanDefinitionBuilder/addPropertyReference(java.lang.String,java.lang.String)
org/springframework/integration/mail/config/ImapIdleChannelAdapterParser/parseImapMailReceiver(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)#org/springframework/integration/config/xml/IntegrationNamespaceUtils/setReferenceIfAttributeDefined(org.springframework.beans.factory.support.BeanDefinitionBuilder,org.w3c.dom.Element,java.lang.String)
org/springframework/integration/mail/MailReceivingMessageSource/receive()#org/apache/commons/logging/Log/debug(java.lang.Object)
org/springframework/integration/mail/MailReceivingMessageSource/receive()#java/lang/StringBuilder/append(java.lang.String)
org/springframework/integration/mail/MailReceivingMessageSource/receive()#java/util/Queue/poll()
org/springframework/integration/mail/MailReceivingMessageSource/receive()#org/springframework/messaging/MessagingException/MessagingException(java.lang.String,java.lang.Throwable)
org/springframework/integration/mail/MailReceivingMessageSource/receive()#org/springframework/integration/support/AbstractIntegrationMessageBuilder/build()
org/springframework/integration/mail/MailReceivingMessageSource/receive()#java/lang/StringBuilder/toString()
org/springframework/integration/mail/MailReceivingMessageSource/receive()#org/apache/commons/logging/Log/isDebugEnabled()
org/springframework/integration/mail/MailReceivingMessageSource/receive()#java/util/Arrays/asList(java.lang.Object[])
org/springframework/integration/mail/MailReceivingMessageSource/receive()#java/lang/StringBuilder/StringBuilder()
org/springframework/integration/mail/MailReceivingMessageSource/receive()#org/springframework/integration/support/MessageBuilderFactory/withPayload(java.lang.Object)
org/springframework/integration/mail/MailReceivingMessageSource/receive()#java/lang/StringBuilder/append(java.lang.Object)
org/springframework/integration/mail/MailReceivingMessageSource/receive()#java/util/Queue/addAll(java.util.Collection)
org/springframework/integration/mail/ImapMailReceiver/waitForNewMessages()#com/sun/mail/imap/IMAPFolder/removeMessageCountListener(javax.mail.event.MessageCountListener)
org/springframework/integration/mail/ImapMailReceiver/waitForNewMessages()#java/lang/StringBuilder/append(java.lang.String)
org/springframework/integration/mail/ImapMailReceiver/waitForNewMessages()#java/util/concurrent/ScheduledFuture/cancel(boolean)
org/springframework/integration/mail/ImapMailReceiver/waitForNewMessages()#java/lang/Class/getName()
org/springframework/integration/mail/ImapMailReceiver/waitForNewMessages()#java/util/Date/Date(long)
org/springframework/integration/mail/ImapMailReceiver/waitForNewMessages()#com/sun/mail/imap/IMAPFolder/addMessageCountListener(javax.mail.event.MessageCountListener)
org/springframework/integration/mail/ImapMailReceiver/waitForNewMessages()#java/lang/System/currentTimeMillis()
org/springframework/integration/mail/ImapMailReceiver/waitForNewMessages()#javax/mail/Flags/contains(javax.mail.Flags$Flag)
org/springframework/integration/mail/ImapMailReceiver/waitForNewMessages()#org/springframework/integration/mail/ImapMailReceiver/getFolder()
org/springframework/integration/mail/ImapMailReceiver/waitForNewMessages()#com/sun/mail/imap/IMAPFolder/hasNewMessages()
org/springframework/integration/mail/ImapMailReceiver/waitForNewMessages()#javax/mail/Folder/getPermanentFlags()
org/springframework/integration/mail/ImapMailReceiver/waitForNewMessages()#com/sun/mail/imap/IMAPFolder/idle()
org/springframework/integration/mail/ImapMailReceiver/waitForNewMessages()#org/springframework/integration/mail/ImapMailReceiver/openFolder()
org/springframework/integration/mail/ImapMailReceiver/waitForNewMessages()#java/lang/StringBuilder/StringBuilder()
org/springframework/integration/mail/ImapMailReceiver/waitForNewMessages()#java/lang/StringBuilder/toString()
org/springframework/integration/mail/ImapMailReceiver/waitForNewMessages()#org/springframework/util/Assert/state(boolean,java.lang.String)
org/springframework/integration/mail/ImapMailReceiver/waitForNewMessages()#org/springframework/scheduling/TaskScheduler/schedule(java.lang.Runnable,java.util.Date)
org/springframework/integration/mail/MailSendingMessageHandler/applyHeadersToMailMessage(org.springframework.mail.MailMessage,org.springframework.messaging.MessageHeaders)#org/springframework/mail/MailMessage/setTo(java.lang.String[])
org/springframework/integration/mail/MailSendingMessageHandler/applyHeadersToMailMessage(org.springframework.mail.MailMessage,org.springframework.messaging.MessageHeaders)#org/springframework/mail/MailMessage/setBcc(java.lang.String[])
org/springframework/integration/mail/MailSendingMessageHandler/applyHeadersToMailMessage(org.springframework.mail.MailMessage,org.springframework.messaging.MessageHeaders)#org/springframework/mail/MailMessage/setReplyTo(java.lang.String)
org/springframework/integration/mail/MailSendingMessageHandler/applyHeadersToMailMessage(org.springframework.mail.MailMessage,org.springframework.messaging.MessageHeaders)#org/springframework/messaging/MessageHeaders/get(java.lang.Object,java.lang.Class)
org/springframework/integration/mail/MailSendingMessageHandler/applyHeadersToMailMessage(org.springframework.mail.MailMessage,org.springframework.messaging.MessageHeaders)#org/springframework/mail/SimpleMailMessage/getTo()
org/springframework/integration/mail/MailSendingMessageHandler/applyHeadersToMailMessage(org.springframework.mail.MailMessage,org.springframework.messaging.MessageHeaders)#org/springframework/mail/MailMessage/setSubject(java.lang.String)
org/springframework/integration/mail/MailSendingMessageHandler/applyHeadersToMailMessage(org.springframework.mail.MailMessage,org.springframework.messaging.MessageHeaders)#org/springframework/mail/MailMessage/setFrom(java.lang.String)
org/springframework/integration/mail/MailSendingMessageHandler/applyHeadersToMailMessage(org.springframework.mail.MailMessage,org.springframework.messaging.MessageHeaders)#org/springframework/util/Assert/state(boolean,java.lang.String)
org/springframework/integration/mail/MailSendingMessageHandler/applyHeadersToMailMessage(org.springframework.mail.MailMessage,org.springframework.messaging.MessageHeaders)#org/springframework/util/ObjectUtils/isEmpty(java.lang.Object[])
org/springframework/integration/mail/MailSendingMessageHandler/applyHeadersToMailMessage(org.springframework.mail.MailMessage,org.springframework.messaging.MessageHeaders)#org/springframework/mail/MailMessage/setCc(java.lang.String[])
org/springframework/integration/mail/MailSendingMessageHandler/convertMessageToMailMessage(org.springframework.messaging.Message)#org/springframework/messaging/MessageHeaders/get(java.lang.Object)
org/springframework/integration/mail/MailSendingMessageHandler/convertMessageToMailMessage(org.springframework.messaging.Message)#org/springframework/messaging/MessageHandlingException/MessageHandlingException(org.springframework.messaging.Message,java.lang.String)
org/springframework/integration/mail/MailSendingMessageHandler/convertMessageToMailMessage(org.springframework.messaging.Message)#org/springframework/messaging/Message/getHeaders()
org/springframework/integration/mail/MailSendingMessageHandler/convertMessageToMailMessage(org.springframework.messaging.Message)#java/lang/StringBuilder/append(java.lang.String)
org/springframework/integration/mail/MailSendingMessageHandler/convertMessageToMailMessage(org.springframework.messaging.Message)#org/springframework/util/StringUtils/hasText(java.lang.String)
org/springframework/integration/mail/MailSendingMessageHandler/convertMessageToMailMessage(org.springframework.messaging.Message)#org/springframework/mail/javamail/MimeMailMessage/MimeMailMessage(javax.mail.internet.MimeMessage)
org/springframework/integration/mail/MailSendingMessageHandler/convertMessageToMailMessage(org.springframework.messaging.Message)#org/springframework/messaging/Message/getPayload()
org/springframework/integration/mail/MailSendingMessageHandler/convertMessageToMailMessage(org.springframework.messaging.Message)#java/lang/Class/getName()
org/springframework/integration/mail/MailSendingMessageHandler/convertMessageToMailMessage(org.springframework.messaging.Message)#java/lang/StringBuilder/StringBuilder()
org/springframework/integration/mail/MailSendingMessageHandler/convertMessageToMailMessage(org.springframework.messaging.Message)#org/springframework/mail/MailMessage/setText(java.lang.String)
org/springframework/integration/mail/MailSendingMessageHandler/convertMessageToMailMessage(org.springframework.messaging.Message)#java/lang/Object/getClass()
org/springframework/integration/mail/MailSendingMessageHandler/convertMessageToMailMessage(org.springframework.messaging.Message)#java/lang/StringBuilder/toString()
org/springframework/integration/mail/MailSendingMessageHandler/convertMessageToMailMessage(org.springframework.messaging.Message)#org/springframework/mail/SimpleMailMessage/SimpleMailMessage()
org/springframework/integration/mail/MailSendingMessageHandler/createMailMessageFromByteArrayMessage(org.springframework.messaging.Message)#java/lang/Integer/intValue()
org/springframework/integration/mail/MailSendingMessageHandler/createMailMessageFromByteArrayMessage(org.springframework.messaging.Message)#org/springframework/messaging/MessageHeaders/get(java.lang.Object,java.lang.Class)
org/springframework/integration/mail/MailSendingMessageHandler/createMailMessageFromByteArrayMessage(org.springframework.messaging.Message)#org/springframework/mail/javamail/MimeMessageHelper/addAttachment(java.lang.String,org.springframework.core.io.InputStreamSource)
org/springframework/integration/mail/MailSendingMessageHandler/createMailMessageFromByteArrayMessage(org.springframework.messaging.Message)#org/springframework/messaging/Message/getPayload()
org/springframework/integration/mail/MailSendingMessageHandler/createMailMessageFromByteArrayMessage(org.springframework.messaging.Message)#org/springframework/mail/javamail/MimeMailMessage/MimeMailMessage(org.springframework.mail.javamail.MimeMessageHelper)
org/springframework/integration/mail/MailSendingMessageHandler/createMailMessageFromByteArrayMessage(org.springframework.messaging.Message)#org/springframework/mail/javamail/JavaMailSender/createMimeMessage()
org/springframework/integration/mail/MailSendingMessageHandler/createMailMessageFromByteArrayMessage(org.springframework.messaging.Message)#java/lang/Integer/valueOf(int)
org/springframework/integration/mail/MailSendingMessageHandler/createMailMessageFromByteArrayMessage(org.springframework.messaging.Message)#org/springframework/mail/javamail/MimeMessageHelper/MimeMessageHelper(javax.mail.internet.MimeMessage,int)
org/springframework/integration/mail/MailSendingMessageHandler/createMailMessageFromByteArrayMessage(org.springframework.messaging.Message)#org/springframework/integration/mapping/MessageMappingException/MessageMappingException(org.springframework.messaging.Message,java.lang.String)
org/springframework/integration/mail/MailSendingMessageHandler/createMailMessageFromByteArrayMessage(org.springframework.messaging.Message)#org/springframework/integration/mapping/MessageMappingException/MessageMappingException(org.springframework.messaging.Message,java.lang.String,java.lang.Throwable)
org/springframework/integration/mail/MailSendingMessageHandler/createMailMessageFromByteArrayMessage(org.springframework.messaging.Message)#org/springframework/messaging/Message/getHeaders()
org/springframework/integration/mail/MailSendingMessageHandler/createMailMessageFromByteArrayMessage(org.springframework.messaging.Message)#org/springframework/core/io/ByteArrayResource/ByteArrayResource(byte[])
org/springframework/integration/mail/MailSendingMessageHandler/handleMessageInternal(org.springframework.messaging.Message)#org/springframework/mail/javamail/JavaMailSender/send(javax.mail.internet.MimeMessage)
org/springframework/integration/mail/MailSendingMessageHandler/handleMessageInternal(org.springframework.messaging.Message)#java/lang/StringBuilder/append(java.lang.String)
org/springframework/integration/mail/MailSendingMessageHandler/handleMessageInternal(org.springframework.messaging.Message)#org/springframework/mail/javamail/JavaMailSender/send(org.springframework.mail.SimpleMailMessage)
org/springframework/integration/mail/MailSendingMessageHandler/handleMessageInternal(org.springframework.messaging.Message)#org/springframework/mail/javamail/MimeMailMessage/getMimeMessage()
org/springframework/integration/mail/MailSendingMessageHandler/handleMessageInternal(org.springframework.messaging.Message)#java/lang/StringBuilder/StringBuilder()
org/springframework/integration/mail/MailSendingMessageHandler/handleMessageInternal(org.springframework.messaging.Message)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/springframework/integration/mail/MailSendingMessageHandler/handleMessageInternal(org.springframework.messaging.Message)#java/lang/Object/getClass()
org/springframework/integration/mail/MailSendingMessageHandler/handleMessageInternal(org.springframework.messaging.Message)#java/lang/StringBuilder/toString()
org/springframework/integration/mail/MailSendingMessageHandler/handleMessageInternal(org.springframework.messaging.Message)#java/lang/Class/getName()
org/springframework/integration/mail/config/MailInboundChannelAdapterParser/parseMailReceiver(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)#org/springframework/integration/config/xml/IntegrationNamespaceUtils/setValueIfAttributeDefined(org.springframework.beans.factory.support.BeanDefinitionBuilder,org.w3c.dom.Element,java.lang.String)
org/springframework/integration/mail/config/MailInboundChannelAdapterParser/parseMailReceiver(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)#org/springframework/beans/factory/xml/ParserContext/getReaderContext()
org/springframework/integration/mail/config/MailInboundChannelAdapterParser/parseMailReceiver(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)#org/springframework/beans/factory/support/BeanDefinitionBuilder/addPropertyValue(java.lang.String,java.lang.Object)
org/springframework/integration/mail/config/MailInboundChannelAdapterParser/parseMailReceiver(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)#org/springframework/util/StringUtils/hasText(java.lang.String)
org/springframework/integration/mail/config/MailInboundChannelAdapterParser/parseMailReceiver(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)#org/w3c/dom/Element/hasAttribute(java.lang.String)
org/springframework/integration/mail/config/MailInboundChannelAdapterParser/parseMailReceiver(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)#org/w3c/dom/Element/getAttribute(java.lang.String)
org/springframework/integration/mail/config/MailInboundChannelAdapterParser/parseMailReceiver(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)#org/springframework/beans/factory/support/RootBeanDefinition/getConstructorArgumentValues()
org/springframework/integration/mail/config/MailInboundChannelAdapterParser/parseMailReceiver(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)#org/springframework/beans/factory/xml/XmlReaderContext/error(java.lang.String,java.lang.Object)
org/springframework/integration/mail/config/MailInboundChannelAdapterParser/parseMailReceiver(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)#org/springframework/beans/factory/support/RootBeanDefinition/RootBeanDefinition(java.lang.String)
org/springframework/integration/mail/config/MailInboundChannelAdapterParser/parseMailReceiver(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)#org/springframework/beans/factory/xml/ParserContext/extractSource(java.lang.Object)
org/springframework/integration/mail/config/MailInboundChannelAdapterParser/parseMailReceiver(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)#org/springframework/beans/factory/config/ConstructorArgumentValues/addGenericArgumentValue(java.lang.Object)
org/springframework/integration/mail/config/MailInboundChannelAdapterParser/parseMailReceiver(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)#org/springframework/beans/factory/support/BeanDefinitionBuilder/genericBeanDefinition(java.lang.Class)
org/springframework/integration/mail/config/MailInboundChannelAdapterParser/parseMailReceiver(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)#org/springframework/beans/factory/support/BeanDefinitionBuilder/getBeanDefinition()
org/springframework/integration/mail/config/MailInboundChannelAdapterParser/parseMailReceiver(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)#org/springframework/util/xml/DomUtils/getChildElementByTagName(org.w3c.dom.Element,java.lang.String)
org/springframework/integration/mail/config/MailInboundChannelAdapterParser/parseMailReceiver(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)#org/springframework/beans/factory/support/BeanDefinitionBuilder/addPropertyReference(java.lang.String,java.lang.String)
org/springframework/integration/mail/config/MailInboundChannelAdapterParser/parseMailReceiver(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)#org/springframework/integration/config/xml/IntegrationNamespaceUtils/setReferenceIfAttributeDefined(org.springframework.beans.factory.support.BeanDefinitionBuilder,org.w3c.dom.Element,java.lang.String)
org/springframework/integration/mail/config/MailReceiverFactoryBean/createReceiver()#org/springframework/integration/mail/AbstractMailReceiver/afterPropertiesSet()
org/springframework/integration/mail/config/MailReceiverFactoryBean/createReceiver()#org/apache/commons/logging/Log/warn(java.lang.Object)
org/springframework/integration/mail/config/MailReceiverFactoryBean/createReceiver()#org/springframework/util/Assert/isTrue(boolean,java.lang.String)
org/springframework/integration/mail/config/MailReceiverFactoryBean/createReceiver()#org/apache/commons/logging/Log/isWarnEnabled()
org/springframework/integration/mail/config/MailReceiverFactoryBean/createReceiver()#java/lang/Boolean/booleanValue()
org/springframework/integration/mail/config/MailReceiverFactoryBean/createReceiver()#java/lang/String/toLowerCase()
org/springframework/integration/mail/config/MailReceiverFactoryBean/createReceiver()#org/springframework/util/Assert/isNull(java.lang.Object,java.lang.String)
org/springframework/integration/mail/config/MailReceiverFactoryBean/createReceiver()#java/lang/String/startsWith(java.lang.String)
org/springframework/integration/mail/config/MailReceiverFactoryBean/createReceiver()#org/springframework/integration/mail/AbstractMailReceiver/setBeanFactory(org.springframework.beans.factory.BeanFactory)
org/springframework/integration/mail/AbstractMailReceiver/receive()#org/apache/commons/logging/Log/debug(java.lang.Object)
org/springframework/integration/mail/AbstractMailReceiver/receive()#java/lang/StringBuilder/append(java.lang.String)
org/springframework/integration/mail/AbstractMailReceiver/receive()#org/apache/commons/logging/Log/isInfoEnabled()
org/springframework/integration/mail/AbstractMailReceiver/receive()#org/apache/commons/logging/Log/isDebugEnabled()
org/springframework/integration/mail/AbstractMailReceiver/receive()#org/apache/commons/logging/Log/info(java.lang.Object)
org/springframework/integration/mail/AbstractMailReceiver/receive()#java/lang/StringBuilder/StringBuilder()
org/springframework/integration/mail/AbstractMailReceiver/receive()#java/lang/System/arraycopy(java.lang.Object,int,java.lang.Object,int,int)
org/springframework/integration/mail/AbstractMailReceiver/receive()#java/lang/StringBuilder/toString()
org/springframework/integration/mail/AbstractMailReceiver/receive()#java/lang/StringBuilder/append(int)
org/springframework/integration/mail/AbstractMailReceiver/receive()#javax/mail/Folder/getFullName()
org/springframework/integration/mail/AbstractMailReceiver/connectStoreIfNecessary()#org/apache/commons/logging/Log/debug(java.lang.Object)
org/springframework/integration/mail/AbstractMailReceiver/connectStoreIfNecessary()#javax/mail/Session/getStore(javax.mail.URLName)
org/springframework/integration/mail/AbstractMailReceiver/connectStoreIfNecessary()#java/lang/StringBuilder/append(java.lang.String)
org/springframework/integration/mail/AbstractMailReceiver/connectStoreIfNecessary()#java/lang/StringBuilder/StringBuilder()
org/springframework/integration/mail/AbstractMailReceiver/connectStoreIfNecessary()#javax/mail/Store/connect()
org/springframework/integration/mail/AbstractMailReceiver/connectStoreIfNecessary()#javax/mail/Session/getStore(java.lang.String)
org/springframework/integration/mail/AbstractMailReceiver/connectStoreIfNecessary()#org/apache/commons/logging/Log/isDebugEnabled()
org/springframework/integration/mail/AbstractMailReceiver/connectStoreIfNecessary()#javax/mail/Store/isConnected()
org/springframework/integration/mail/AbstractMailReceiver/connectStoreIfNecessary()#javax/mail/Session/getStore()
org/springframework/integration/mail/AbstractMailReceiver/connectStoreIfNecessary()#java/lang/StringBuilder/toString()
org/springframework/integration/mail/AbstractMailReceiver/openFolder()#org/apache/commons/logging/Log/debug(java.lang.Object)
org/springframework/integration/mail/AbstractMailReceiver/openFolder()#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/springframework/integration/mail/AbstractMailReceiver/openFolder()#java/lang/StringBuilder/append(java.lang.String)
org/springframework/integration/mail/AbstractMailReceiver/openFolder()#org/apache/commons/logging/Log/isDebugEnabled()
org/springframework/integration/mail/AbstractMailReceiver/openFolder()#javax/mail/Folder/isOpen()
org/springframework/integration/mail/AbstractMailReceiver/openFolder()#javax/mail/Folder/open(int)
org/springframework/integration/mail/AbstractMailReceiver/openFolder()#java/lang/StringBuilder/StringBuilder()
org/springframework/integration/mail/AbstractMailReceiver/openFolder()#java/lang/StringBuilder/toString()
org/springframework/integration/mail/AbstractMailReceiver/openFolder()#javax/mail/Folder/exists()
org/springframework/integration/mail/AbstractMailReceiver/openFolder()#javax/mail/URLName/getFile()
org/springframework/integration/mail/AbstractMailReceiver/filterMessagesThruSelector(javax.mail.Message[])#org/apache/commons/logging/Log/debug(java.lang.Object)
org/springframework/integration/mail/AbstractMailReceiver/filterMessagesThruSelector(javax.mail.Message[])#java/lang/StringBuilder/append(java.lang.String)
org/springframework/integration/mail/AbstractMailReceiver/filterMessagesThruSelector(javax.mail.Message[])#org/apache/commons/logging/Log/isDebugEnabled()
org/springframework/integration/mail/AbstractMailReceiver/filterMessagesThruSelector(javax.mail.Message[])#java/util/List/size()
org/springframework/integration/mail/AbstractMailReceiver/filterMessagesThruSelector(javax.mail.Message[])#java/lang/StringBuilder/StringBuilder()
org/springframework/integration/mail/AbstractMailReceiver/filterMessagesThruSelector(javax.mail.Message[])#org/springframework/expression/Expression/getValue(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Class)
org/springframework/integration/mail/AbstractMailReceiver/filterMessagesThruSelector(javax.mail.Message[])#java/util/List/add(java.lang.Object)
org/springframework/integration/mail/AbstractMailReceiver/filterMessagesThruSelector(javax.mail.Message[])#javax/mail/internet/MimeMessage/getSubject()
org/springframework/integration/mail/AbstractMailReceiver/filterMessagesThruSelector(javax.mail.Message[])#java/lang/Boolean/booleanValue()
org/springframework/integration/mail/AbstractMailReceiver/filterMessagesThruSelector(javax.mail.Message[])#java/lang/StringBuilder/toString()
org/springframework/integration/mail/AbstractMailReceiver/filterMessagesThruSelector(javax.mail.Message[])#java/util/List/toArray(java.lang.Object[])
org/springframework/integration/mail/AbstractMailReceiver/filterMessagesThruSelector(javax.mail.Message[])#java/util/LinkedList/LinkedList()
org/springframework/integration/mail/ImapIdleChannelAdapter/ReceivingTask/run()#org/apache/commons/logging/Log/debug(java.lang.Object)
org/springframework/integration/mail/ImapIdleChannelAdapter/ReceivingTask/run()#java/lang/StringBuilder/append(long)
org/springframework/integration/mail/ImapIdleChannelAdapter/ReceivingTask/run()#java/lang/StringBuilder/StringBuilder()
org/springframework/integration/mail/ImapIdleChannelAdapter/ReceivingTask/run()#org/springframework/integration/mail/ImapIdleChannelAdapter$ExceptionAwarePeriodicTrigger/delayNextExecution()
org/springframework/integration/mail/ImapIdleChannelAdapter/ReceivingTask/run()#java/lang/StringBuilder/toString()
org/springframework/integration/mail/ImapIdleChannelAdapter/ReceivingTask/run()#org/apache/commons/logging/Log/warn(java.lang.Object,java.lang.Throwable)
org/springframework/integration/mail/ImapIdleChannelAdapter/ReceivingTask/run()#java/lang/StringBuilder/append(java.lang.String)
org/springframework/integration/mail/ImapIdleChannelAdapter/ReceivingTask/run()#org/springframework/integration/mail/ImapIdleChannelAdapter$IdleTask/run()
org/springframework/integration/mail/ImapIdleChannelAdapter/ReceivingTask/run()#org/apache/commons/logging/Log/isDebugEnabled()
