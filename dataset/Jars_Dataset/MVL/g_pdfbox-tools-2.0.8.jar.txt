org/apache/pdfbox/tools/imageio/ImageIOUtil/writeImage(java.awt.image.BufferedImage,java.lang.String,java.io.OutputStream,int,float)#javax/imageio/ImageWriter/write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)
org/apache/pdfbox/tools/imageio/ImageIOUtil/writeImage(java.awt.image.BufferedImage,java.lang.String,java.io.OutputStream,int,float)#java/lang/StringBuilder/append(java.lang.String)
org/apache/pdfbox/tools/imageio/ImageIOUtil/writeImage(java.awt.image.BufferedImage,java.lang.String,java.io.OutputStream,int,float)#javax/imageio/ImageWriteParam/setCompressionMode(int)
org/apache/pdfbox/tools/imageio/ImageIOUtil/writeImage(java.awt.image.BufferedImage,java.lang.String,java.io.OutputStream,int,float)#javax/imageio/ImageWriter/getDefaultImageMetadata(javax.imageio.ImageTypeSpecifier,javax.imageio.ImageWriteParam)
org/apache/pdfbox/tools/imageio/ImageIOUtil/writeImage(java.awt.image.BufferedImage,java.lang.String,java.io.OutputStream,int,float)#javax/imageio/IIOImage/IIOImage(java.awt.image.RenderedImage,java.util.List,javax.imageio.metadata.IIOMetadata)
org/apache/pdfbox/tools/imageio/ImageIOUtil/writeImage(java.awt.image.BufferedImage,java.lang.String,java.io.OutputStream,int,float)#javax/imageio/metadata/IIOMetadata/isStandardMetadataFormatSupported()
org/apache/pdfbox/tools/imageio/ImageIOUtil/writeImage(java.awt.image.BufferedImage,java.lang.String,java.io.OutputStream,int,float)#javax/imageio/ImageWriter/dispose()
org/apache/pdfbox/tools/imageio/ImageIOUtil/writeImage(java.awt.image.BufferedImage,java.lang.String,java.io.OutputStream,int,float)#javax/imageio/ImageIO/getImageWritersByFormatName(java.lang.String)
org/apache/pdfbox/tools/imageio/ImageIOUtil/writeImage(java.awt.image.BufferedImage,java.lang.String,java.io.OutputStream,int,float)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/pdfbox/tools/imageio/ImageIOUtil/writeImage(java.awt.image.BufferedImage,java.lang.String,java.io.OutputStream,int,float)#java/lang/StringBuilder/toString()
org/apache/pdfbox/tools/imageio/ImageIOUtil/writeImage(java.awt.image.BufferedImage,java.lang.String,java.io.OutputStream,int,float)#javax/imageio/ImageWriteParam/setCompressionQuality(float)
org/apache/pdfbox/tools/imageio/ImageIOUtil/writeImage(java.awt.image.BufferedImage,java.lang.String,java.io.OutputStream,int,float)#javax/imageio/ImageWriteParam/setCompressionType(java.lang.String)
org/apache/pdfbox/tools/imageio/ImageIOUtil/writeImage(java.awt.image.BufferedImage,java.lang.String,java.io.OutputStream,int,float)#javax/imageio/ImageWriter/setOutput(java.lang.Object)
org/apache/pdfbox/tools/imageio/ImageIOUtil/writeImage(java.awt.image.BufferedImage,java.lang.String,java.io.OutputStream,int,float)#java/util/Iterator/hasNext()
org/apache/pdfbox/tools/imageio/ImageIOUtil/writeImage(java.awt.image.BufferedImage,java.lang.String,java.io.OutputStream,int,float)#java/lang/String/toLowerCase()
org/apache/pdfbox/tools/imageio/ImageIOUtil/writeImage(java.awt.image.BufferedImage,java.lang.String,java.io.OutputStream,int,float)#java/util/Iterator/next()
org/apache/pdfbox/tools/imageio/ImageIOUtil/writeImage(java.awt.image.BufferedImage,java.lang.String,java.io.OutputStream,int,float)#java/lang/String/equals(java.lang.Object)
org/apache/pdfbox/tools/imageio/ImageIOUtil/writeImage(java.awt.image.BufferedImage,java.lang.String,java.io.OutputStream,int,float)#javax/imageio/metadata/IIOMetadata/isReadOnly()
org/apache/pdfbox/tools/imageio/ImageIOUtil/writeImage(java.awt.image.BufferedImage,java.lang.String,java.io.OutputStream,int,float)#javax/imageio/ImageIO/createImageOutputStream(java.lang.Object)
org/apache/pdfbox/tools/imageio/ImageIOUtil/writeImage(java.awt.image.BufferedImage,java.lang.String,java.io.OutputStream,int,float)#java/lang/StringBuilder/StringBuilder()
org/apache/pdfbox/tools/imageio/ImageIOUtil/writeImage(java.awt.image.BufferedImage,java.lang.String,java.io.OutputStream,int,float)#javax/imageio/ImageTypeSpecifier/ImageTypeSpecifier(java.awt.image.RenderedImage)
org/apache/pdfbox/tools/imageio/ImageIOUtil/writeImage(java.awt.image.BufferedImage,java.lang.String,java.io.OutputStream,int,float)#java/lang/StringBuilder/append(char)
org/apache/pdfbox/tools/imageio/ImageIOUtil/writeImage(java.awt.image.BufferedImage,java.lang.String,java.io.OutputStream,int,float)#javax/imageio/ImageWriteParam/canWriteCompressed()
org/apache/pdfbox/tools/imageio/ImageIOUtil/writeImage(java.awt.image.BufferedImage,java.lang.String,java.io.OutputStream,int,float)#javax/imageio/stream/ImageOutputStream/close()
org/apache/pdfbox/tools/imageio/ImageIOUtil/writeImage(java.awt.image.BufferedImage,java.lang.String,java.io.OutputStream,int,float)#javax/imageio/ImageIO/getWriterFormatNames()
org/apache/pdfbox/tools/imageio/ImageIOUtil/writeImage(java.awt.image.BufferedImage,java.lang.String,java.io.OutputStream,int,float)#org/apache/commons/logging/Log/error(java.lang.Object)
org/apache/pdfbox/tools/imageio/ImageIOUtil/writeImage(java.awt.image.BufferedImage,java.lang.String,java.io.OutputStream,int,float)#javax/imageio/ImageWriteParam/getCompressionTypes()
org/apache/pdfbox/tools/imageio/ImageIOUtil/writeImage(java.awt.image.BufferedImage,java.lang.String,java.io.OutputStream,int,float)#java/lang/String/startsWith(java.lang.String)
org/apache/pdfbox/tools/imageio/ImageIOUtil/writeImage(java.awt.image.BufferedImage,java.lang.String,java.io.OutputStream,int,float)#javax/imageio/ImageWriter/getDefaultWriteParam()
org/apache/pdfbox/tools/PDFText2HTML/FontState/push(java.lang.String,java.util.List)#java/util/List/size()
org/apache/pdfbox/tools/PDFText2HTML/FontState/push(java.lang.String,java.util.List)#java/lang/String/isEmpty()
org/apache/pdfbox/tools/PDFText2HTML/FontState/push(java.lang.String,java.util.List)#java/lang/StringBuilder/StringBuilder()
org/apache/pdfbox/tools/PDFText2HTML/FontState/push(java.lang.String,java.util.List)#java/lang/String/substring(int)
org/apache/pdfbox/tools/PDFText2HTML/FontState/push(java.lang.String,java.util.List)#java/util/List/get(int)
org/apache/pdfbox/tools/PDFText2HTML/FontState/push(java.lang.String,java.util.List)#org/apache/pdfbox/tools/PDFText2HTML$FontState/push(java.lang.StringBuilder,char,org.apache.pdfbox.text.TextPosition)
org/apache/pdfbox/tools/PDFText2HTML/FontState/push(java.lang.String,java.util.List)#java/lang/StringBuilder/toString()
org/apache/pdfbox/tools/PDFText2HTML/FontState/push(java.lang.String,java.util.List)#java/lang/StringBuilder/append(java.lang.String)
org/apache/pdfbox/tools/PDFText2HTML/FontState/push(java.lang.String,java.util.List)#java/lang/String/charAt(int)
org/apache/pdfbox/tools/PDFText2HTML/FontState/push(java.lang.String,java.util.List)#java/util/List/isEmpty()
org/apache/pdfbox/tools/PDFText2HTML/FontState/push(java.lang.String,java.util.List)#java/lang/String/length()
org/apache/pdfbox/tools/PDFText2HTML/FontState/close(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/apache/pdfbox/tools/PDFText2HTML/FontState/close(java.lang.String)#java/util/List/size()
org/apache/pdfbox/tools/PDFText2HTML/FontState/close(java.lang.String)#java/util/Set/contains(java.lang.Object)
org/apache/pdfbox/tools/PDFText2HTML/FontState/close(java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/apache/pdfbox/tools/PDFText2HTML/FontState/close(java.lang.String)#java/lang/StringBuilder/toString()
org/apache/pdfbox/tools/PDFText2HTML/FontState/close(java.lang.String)#org/apache/pdfbox/tools/PDFText2HTML$FontState/closeUntil(java.lang.StringBuilder,java.lang.String)
org/apache/pdfbox/tools/PDFText2HTML/FontState/close(java.lang.String)#java/util/List/remove(int)
org/apache/pdfbox/tools/PDFText2HTML/FontState/close(java.lang.String)#org/apache/pdfbox/tools/PDFText2HTML$FontState/openTag(java.lang.String)
org/apache/pdfbox/tools/PDFText2HTML/FontState/close(java.lang.String)#java/util/Set/remove(java.lang.Object)
org/apache/pdfbox/tools/PDFText2HTML/FontState/close(java.lang.String)#java/util/List/get(int)
org/apache/pdfbox/tools/ExtractImages/extract(java.lang.String,java.lang.String)#org/apache/pdfbox/tools/ExtractImages$ImageGraphicsEngine/run()
org/apache/pdfbox/tools/ExtractImages/extract(java.lang.String,java.lang.String)#org/apache/pdfbox/pdmodel/PDDocument/close()
org/apache/pdfbox/tools/ExtractImages/extract(java.lang.String,java.lang.String)#org/apache/pdfbox/pdmodel/PDDocument/getNumberOfPages()
org/apache/pdfbox/tools/ExtractImages/extract(java.lang.String,java.lang.String)#java/io/File/File(java.lang.String)
org/apache/pdfbox/tools/ExtractImages/extract(java.lang.String,java.lang.String)#org/apache/pdfbox/pdmodel/PDDocument/getCurrentAccessPermission()
org/apache/pdfbox/tools/ExtractImages/extract(java.lang.String,java.lang.String)#org/apache/pdfbox/pdmodel/encryption/AccessPermission/canExtractContent()
org/apache/pdfbox/tools/ExtractImages/extract(java.lang.String,java.lang.String)#org/apache/pdfbox/pdmodel/PDDocument/getPage(int)
org/apache/pdfbox/tools/ExtractImages/extract(java.lang.String,java.lang.String)#org/apache/pdfbox/pdmodel/PDDocument/load(java.io.File,java.lang.String)
org/apache/pdfbox/tools/ExtractImages/extract(java.lang.String,java.lang.String)#java/io/IOException/IOException(java.lang.String)
org/apache/pdfbox/tools/ExtractImages/extract(java.lang.String,java.lang.String)#org/apache/pdfbox/tools/ExtractImages$ImageGraphicsEngine/ImageGraphicsEngine(org.apache.pdfbox.tools.ExtractImages,org.apache.pdfbox.pdmodel.PDPage)
org/apache/pdfbox/tools/ExtractImages/write2file(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.lang.String,boolean)#org/apache/pdfbox/io/IOUtils/copy(java.io.InputStream,java.io.OutputStream)
org/apache/pdfbox/tools/ExtractImages/write2file(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.lang.String,boolean)#org/apache/pdfbox/pdmodel/graphics/image/PDImage/createInputStream(java.util.List)
org/apache/pdfbox/tools/ExtractImages/write2file(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.lang.String,boolean)#org/apache/pdfbox/pdmodel/graphics/image/PDImage/getImage()
org/apache/pdfbox/tools/ExtractImages/write2file(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.lang.String,boolean)#java/util/Arrays/asList(java.lang.Object[])
org/apache/pdfbox/tools/ExtractImages/write2file(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.lang.String,boolean)#org/apache/pdfbox/pdmodel/graphics/image/PDImage/getColorSpace()
org/apache/pdfbox/tools/ExtractImages/write2file(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.lang.String,boolean)#java/lang/String/equals(java.lang.Object)
org/apache/pdfbox/tools/ExtractImages/write2file(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.lang.String,boolean)#java/lang/StringBuilder/StringBuilder()
org/apache/pdfbox/tools/ExtractImages/write2file(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.lang.String,boolean)#org/apache/pdfbox/cos/COSName/getName()
org/apache/pdfbox/tools/ExtractImages/write2file(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.lang.String,boolean)#org/apache/pdfbox/pdmodel/graphics/color/PDDeviceRGB/getName()
org/apache/pdfbox/tools/ExtractImages/write2file(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.lang.String,boolean)#java/io/FileOutputStream/close()
org/apache/pdfbox/tools/ExtractImages/write2file(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.lang.String,boolean)#org/apache/pdfbox/io/IOUtils/closeQuietly(java.io.Closeable)
org/apache/pdfbox/tools/ExtractImages/write2file(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.lang.String,boolean)#java/io/FileOutputStream/flush()
org/apache/pdfbox/tools/ExtractImages/write2file(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.lang.String,boolean)#java/lang/StringBuilder/append(java.lang.String)
org/apache/pdfbox/tools/ExtractImages/write2file(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.lang.String,boolean)#java/io/FileOutputStream/FileOutputStream(java.lang.String)
org/apache/pdfbox/tools/ExtractImages/write2file(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.lang.String,boolean)#org/apache/pdfbox/pdmodel/graphics/color/PDDeviceGray/getName()
org/apache/pdfbox/tools/ExtractImages/write2file(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.lang.String,boolean)#org/apache/pdfbox/pdmodel/graphics/color/PDColorSpace/getName()
org/apache/pdfbox/tools/ExtractImages/write2file(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.lang.String,boolean)#org/apache/pdfbox/pdmodel/graphics/image/PDImage/getSuffix()
org/apache/pdfbox/tools/ExtractImages/write2file(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.lang.String,boolean)#java/lang/StringBuilder/toString()
org/apache/pdfbox/tools/imageio/JPEGUtil/updateMetadata(javax.imageio.metadata.IIOMetadata,int)#javax/imageio/metadata/IIOMetadata/setFromTree(java.lang.String,org.w3c.dom.Node)
org/apache/pdfbox/tools/imageio/JPEGUtil/updateMetadata(javax.imageio.metadata.IIOMetadata,int)#org/w3c/dom/NodeList/getLength()
org/apache/pdfbox/tools/imageio/JPEGUtil/updateMetadata(javax.imageio.metadata.IIOMetadata,int)#org/w3c/dom/Element/getElementsByTagName(java.lang.String)
org/apache/pdfbox/tools/imageio/JPEGUtil/updateMetadata(javax.imageio.metadata.IIOMetadata,int)#org/w3c/dom/Element/getAttribute(java.lang.String)
org/apache/pdfbox/tools/imageio/JPEGUtil/updateMetadata(javax.imageio.metadata.IIOMetadata,int)#javax/imageio/metadata/IIOMetadata/getAsTree(java.lang.String)
org/apache/pdfbox/tools/imageio/JPEGUtil/updateMetadata(javax.imageio.metadata.IIOMetadata,int)#javax/imageio/metadata/IIOMetadataNode/IIOMetadataNode(java.lang.String)
org/apache/pdfbox/tools/imageio/JPEGUtil/updateMetadata(javax.imageio.metadata.IIOMetadata,int)#org/w3c/dom/NodeList/item(int)
org/apache/pdfbox/tools/imageio/JPEGUtil/updateMetadata(javax.imageio.metadata.IIOMetadata,int)#java/lang/Integer/toString(int)
org/apache/pdfbox/tools/imageio/JPEGUtil/updateMetadata(javax.imageio.metadata.IIOMetadata,int)#org/w3c/dom/Element/appendChild(org.w3c.dom.Node)
org/apache/pdfbox/tools/imageio/JPEGUtil/updateMetadata(javax.imageio.metadata.IIOMetadata,int)#org/w3c/dom/Element/setAttribute(java.lang.String,java.lang.String)
org/apache/pdfbox/tools/imageio/JPEGUtil/updateMetadata(javax.imageio.metadata.IIOMetadata,int)#java/lang/String/isEmpty()
org/apache/pdfbox/tools/WriteDecodedDoc/doIt(java.lang.String,java.lang.String,java.lang.String,boolean)#org/apache/pdfbox/pdmodel/common/PDStream/toByteArray()
org/apache/pdfbox/tools/WriteDecodedDoc/doIt(java.lang.String,java.lang.String,java.lang.String,boolean)#org/apache/pdfbox/cos/COSObject/getGenerationNumber()
org/apache/pdfbox/tools/WriteDecodedDoc/doIt(java.lang.String,java.lang.String,java.lang.String,boolean)#java/util/Iterator/hasNext()
org/apache/pdfbox/tools/WriteDecodedDoc/doIt(java.lang.String,java.lang.String,java.lang.String,boolean)#org/apache/pdfbox/cos/COSObject/getObjectNumber()
org/apache/pdfbox/tools/WriteDecodedDoc/doIt(java.lang.String,java.lang.String,java.lang.String,boolean)#org/apache/pdfbox/cos/COSName/equals(java.lang.Object)
org/apache/pdfbox/tools/WriteDecodedDoc/doIt(java.lang.String,java.lang.String,java.lang.String,boolean)#org/apache/pdfbox/pdmodel/PDDocument/close()
org/apache/pdfbox/tools/WriteDecodedDoc/doIt(java.lang.String,java.lang.String,java.lang.String,boolean)#java/util/Iterator/next()
org/apache/pdfbox/tools/WriteDecodedDoc/doIt(java.lang.String,java.lang.String,java.lang.String,boolean)#java/lang/StringBuilder/StringBuilder()
org/apache/pdfbox/tools/WriteDecodedDoc/doIt(java.lang.String,java.lang.String,java.lang.String,boolean)#org/apache/pdfbox/cos/COSStream/removeItem(org.apache.pdfbox.cos.COSName)
org/apache/pdfbox/tools/WriteDecodedDoc/doIt(java.lang.String,java.lang.String,java.lang.String,boolean)#org/apache/pdfbox/pdmodel/PDDocument/save(java.lang.String)
org/apache/pdfbox/tools/WriteDecodedDoc/doIt(java.lang.String,java.lang.String,java.lang.String,boolean)#java/util/List/iterator()
org/apache/pdfbox/tools/WriteDecodedDoc/doIt(java.lang.String,java.lang.String,java.lang.String,boolean)#java/io/OutputStream/write(byte[])
org/apache/pdfbox/tools/WriteDecodedDoc/doIt(java.lang.String,java.lang.String,java.lang.String,boolean)#java/lang/StringBuilder/toString()
org/apache/pdfbox/tools/WriteDecodedDoc/doIt(java.lang.String,java.lang.String,java.lang.String,boolean)#org/apache/pdfbox/cos/COSObject/getObject()
org/apache/pdfbox/tools/WriteDecodedDoc/doIt(java.lang.String,java.lang.String,java.lang.String,boolean)#java/io/OutputStream/close()
org/apache/pdfbox/tools/WriteDecodedDoc/doIt(java.lang.String,java.lang.String,java.lang.String,boolean)#org/apache/pdfbox/pdmodel/PDDocument/load(java.io.File,java.lang.String)
org/apache/pdfbox/tools/WriteDecodedDoc/doIt(java.lang.String,java.lang.String,java.lang.String,boolean)#org/apache/pdfbox/pdmodel/PDDocument/getDocument()
org/apache/pdfbox/tools/WriteDecodedDoc/doIt(java.lang.String,java.lang.String,java.lang.String,boolean)#org/apache/pdfbox/cos/COSStream/getItem(org.apache.pdfbox.cos.COSName)
org/apache/pdfbox/tools/WriteDecodedDoc/doIt(java.lang.String,java.lang.String,java.lang.String,boolean)#org/apache/pdfbox/pdmodel/PDDocument/setAllSecurityToBeRemoved(boolean)
org/apache/pdfbox/tools/WriteDecodedDoc/doIt(java.lang.String,java.lang.String,java.lang.String,boolean)#org/apache/pdfbox/cos/COSStream/createOutputStream()
org/apache/pdfbox/tools/WriteDecodedDoc/doIt(java.lang.String,java.lang.String,java.lang.String,boolean)#java/lang/StringBuilder/append(java.lang.String)
org/apache/pdfbox/tools/WriteDecodedDoc/doIt(java.lang.String,java.lang.String,java.lang.String,boolean)#java/io/PrintStream/println(java.lang.String)
org/apache/pdfbox/tools/WriteDecodedDoc/doIt(java.lang.String,java.lang.String,java.lang.String,boolean)#java/lang/StringBuilder/append(int)
org/apache/pdfbox/tools/WriteDecodedDoc/doIt(java.lang.String,java.lang.String,java.lang.String,boolean)#org/apache/pdfbox/pdmodel/PDDocument/getDocumentCatalog()
org/apache/pdfbox/tools/WriteDecodedDoc/doIt(java.lang.String,java.lang.String,java.lang.String,boolean)#org/apache/pdfbox/cos/COSDocument/getObjects()
org/apache/pdfbox/tools/WriteDecodedDoc/doIt(java.lang.String,java.lang.String,java.lang.String,boolean)#org/apache/pdfbox/pdmodel/common/PDStream/PDStream(org.apache.pdfbox.cos.COSStream)
org/apache/pdfbox/tools/WriteDecodedDoc/doIt(java.lang.String,java.lang.String,java.lang.String,boolean)#java/io/IOException/getMessage()
org/apache/pdfbox/tools/WriteDecodedDoc/doIt(java.lang.String,java.lang.String,java.lang.String,boolean)#java/lang/StringBuilder/append(long)
org/apache/pdfbox/tools/WriteDecodedDoc/doIt(java.lang.String,java.lang.String,java.lang.String,boolean)#java/io/File/File(java.lang.String)
org/apache/pdfbox/tools/PDFText2HTML/getTitle()#java/util/Iterator/hasNext()
org/apache/pdfbox/tools/PDFText2HTML/getTitle()#org/apache/pdfbox/text/TextPosition/getFontSize()
org/apache/pdfbox/tools/PDFText2HTML/getTitle()#java/lang/String/length()
org/apache/pdfbox/tools/PDFText2HTML/getTitle()#java/util/Iterator/next()
org/apache/pdfbox/tools/PDFText2HTML/getTitle()#java/lang/StringBuilder/StringBuilder()
org/apache/pdfbox/tools/PDFText2HTML/getTitle()#java/lang/StringBuilder/length()
org/apache/pdfbox/tools/PDFText2HTML/getTitle()#java/util/List/iterator()
org/apache/pdfbox/tools/PDFText2HTML/getTitle()#org/apache/pdfbox/pdmodel/PDDocument/getDocumentInformation()
org/apache/pdfbox/tools/PDFText2HTML/getTitle()#java/lang/StringBuilder/toString()
org/apache/pdfbox/tools/PDFText2HTML/getTitle()#java/lang/StringBuilder/append(java.lang.String)
org/apache/pdfbox/tools/PDFText2HTML/getTitle()#org/apache/pdfbox/pdmodel/PDDocumentInformation/getTitle()
org/apache/pdfbox/tools/PDFText2HTML/getTitle()#org/apache/pdfbox/text/TextPosition/getUnicode()
org/apache/pdfbox/tools/PDFText2HTML/getTitle()#org/apache/pdfbox/tools/PDFText2HTML/getCharactersByArticle()
org/apache/pdfbox/tools/Encrypt/encrypt(java.lang.String[])#org/apache/pdfbox/pdmodel/encryption/AccessPermission/setCanFillInForm(boolean)
org/apache/pdfbox/tools/Encrypt/encrypt(java.lang.String[])#org/apache/pdfbox/pdmodel/encryption/PublicKeyRecipient/setX509(java.security.cert.X509Certificate)
org/apache/pdfbox/tools/Encrypt/encrypt(java.lang.String[])#org/apache/pdfbox/pdmodel/PDDocument/protect(org.apache.pdfbox.pdmodel.encryption.ProtectionPolicy)
org/apache/pdfbox/tools/Encrypt/encrypt(java.lang.String[])#org/apache/pdfbox/pdmodel/PDDocument/close()
org/apache/pdfbox/tools/Encrypt/encrypt(java.lang.String[])#org/apache/pdfbox/pdmodel/PDDocument/isEncrypted()
org/apache/pdfbox/tools/Encrypt/encrypt(java.lang.String[])#java/io/File/File(java.lang.String)
org/apache/pdfbox/tools/Encrypt/encrypt(java.lang.String[])#java/io/InputStream/close()
org/apache/pdfbox/tools/Encrypt/encrypt(java.lang.String[])#java/lang/Integer/parseInt(java.lang.String)
org/apache/pdfbox/tools/Encrypt/encrypt(java.lang.String[])#java/lang/NumberFormatException/NumberFormatException(java.lang.String)
org/apache/pdfbox/tools/Encrypt/encrypt(java.lang.String[])#org/apache/pdfbox/pdmodel/PDDocument/save(java.lang.String)
org/apache/pdfbox/tools/Encrypt/encrypt(java.lang.String[])#org/apache/pdfbox/pdmodel/encryption/PublicKeyProtectionPolicy/setEncryptionKeyLength(int)
org/apache/pdfbox/tools/Encrypt/encrypt(java.lang.String[])#org/apache/pdfbox/pdmodel/encryption/PublicKeyProtectionPolicy/addRecipient(org.apache.pdfbox.pdmodel.encryption.PublicKeyRecipient)
org/apache/pdfbox/tools/Encrypt/encrypt(java.lang.String[])#org/apache/pdfbox/pdmodel/encryption/PublicKeyProtectionPolicy/PublicKeyProtectionPolicy()
org/apache/pdfbox/tools/Encrypt/encrypt(java.lang.String[])#java/lang/String/equalsIgnoreCase(java.lang.String)
org/apache/pdfbox/tools/Encrypt/encrypt(java.lang.String[])#org/apache/pdfbox/pdmodel/encryption/StandardProtectionPolicy/setEncryptionKeyLength(int)
org/apache/pdfbox/tools/Encrypt/encrypt(java.lang.String[])#java/lang/StringBuilder/append(java.lang.String)
org/apache/pdfbox/tools/Encrypt/encrypt(java.lang.String[])#java/io/PrintStream/println(java.lang.String)
org/apache/pdfbox/tools/Encrypt/encrypt(java.lang.String[])#org/apache/pdfbox/pdmodel/encryption/PublicKeyRecipient/setPermission(org.apache.pdfbox.pdmodel.encryption.AccessPermission)
org/apache/pdfbox/tools/Encrypt/encrypt(java.lang.String[])#org/apache/pdfbox/pdmodel/encryption/AccessPermission/setCanPrint(boolean)
org/apache/pdfbox/tools/Encrypt/encrypt(java.lang.String[])#java/security/cert/CertificateFactory/generateCertificate(java.io.InputStream)
org/apache/pdfbox/tools/Encrypt/encrypt(java.lang.String[])#java/io/FileInputStream/FileInputStream(java.lang.String)
org/apache/pdfbox/tools/Encrypt/encrypt(java.lang.String[])#java/security/cert/CertificateFactory/getInstance(java.lang.String)
org/apache/pdfbox/tools/Encrypt/encrypt(java.lang.String[])#org/apache/pdfbox/pdmodel/encryption/AccessPermission/setCanModifyAnnotations(boolean)
org/apache/pdfbox/tools/Encrypt/encrypt(java.lang.String[])#org/apache/pdfbox/pdmodel/PDDocument/load(java.io.File)
org/apache/pdfbox/tools/Encrypt/encrypt(java.lang.String[])#org/apache/pdfbox/pdmodel/encryption/StandardProtectionPolicy/StandardProtectionPolicy(java.lang.String,java.lang.String,org.apache.pdfbox.pdmodel.encryption.AccessPermission)
org/apache/pdfbox/tools/Encrypt/encrypt(java.lang.String[])#java/lang/String/equals(java.lang.Object)
org/apache/pdfbox/tools/Encrypt/encrypt(java.lang.String[])#org/apache/pdfbox/pdmodel/encryption/AccessPermission/setCanModify(boolean)
org/apache/pdfbox/tools/Encrypt/encrypt(java.lang.String[])#org/apache/pdfbox/pdmodel/encryption/AccessPermission/setCanExtractForAccessibility(boolean)
org/apache/pdfbox/tools/Encrypt/encrypt(java.lang.String[])#java/lang/StringBuilder/StringBuilder()
org/apache/pdfbox/tools/Encrypt/encrypt(java.lang.String[])#org/apache/pdfbox/pdmodel/encryption/AccessPermission/setCanExtractContent(boolean)
org/apache/pdfbox/tools/Encrypt/encrypt(java.lang.String[])#org/apache/pdfbox/pdmodel/encryption/AccessPermission/AccessPermission()
org/apache/pdfbox/tools/Encrypt/encrypt(java.lang.String[])#org/apache/pdfbox/pdmodel/encryption/PublicKeyRecipient/PublicKeyRecipient()
org/apache/pdfbox/tools/Encrypt/encrypt(java.lang.String[])#java/lang/StringBuilder/toString()
org/apache/pdfbox/tools/Encrypt/encrypt(java.lang.String[])#org/apache/pdfbox/pdmodel/encryption/AccessPermission/setCanPrintDegraded(boolean)
org/apache/pdfbox/tools/Encrypt/encrypt(java.lang.String[])#org/apache/pdfbox/pdmodel/encryption/AccessPermission/setCanAssembleDocument(boolean)
org/apache/pdfbox/tools/OverlayPDF/main(java.lang.String[])#org/apache/pdfbox/multipdf/Overlay/getInputFile()
org/apache/pdfbox/tools/OverlayPDF/main(java.lang.String[])#org/apache/pdfbox/multipdf/Overlay/getDefaultOverlayFile()
org/apache/pdfbox/tools/OverlayPDF/main(java.lang.String[])#org/apache/pdfbox/multipdf/Overlay/setOverlayPosition(org.apache.pdfbox.multipdf.Overlay$Position)
org/apache/pdfbox/tools/OverlayPDF/main(java.lang.String[])#org/apache/pdfbox/pdmodel/PDDocument/close()
org/apache/pdfbox/tools/OverlayPDF/main(java.lang.String[])#org/apache/pdfbox/multipdf/Overlay/setFirstPageOverlayFile(java.lang.String)
org/apache/pdfbox/tools/OverlayPDF/main(java.lang.String[])#org/apache/pdfbox/multipdf/Overlay/setLastPageOverlayFile(java.lang.String)
org/apache/pdfbox/tools/OverlayPDF/main(java.lang.String[])#java/lang/String/equals(java.lang.Object)
org/apache/pdfbox/tools/OverlayPDF/main(java.lang.String[])#org/apache/pdfbox/multipdf/Overlay/setAllPagesOverlayFile(java.lang.String)
org/apache/pdfbox/tools/OverlayPDF/main(java.lang.String[])#java/lang/StringBuilder/StringBuilder()
org/apache/pdfbox/tools/OverlayPDF/main(java.lang.String[])#java/lang/Integer/parseInt(java.lang.String)
org/apache/pdfbox/tools/OverlayPDF/main(java.lang.String[])#org/apache/commons/logging/Log/error(java.lang.Object,java.lang.Throwable)
org/apache/pdfbox/tools/OverlayPDF/main(java.lang.String[])#java/lang/Integer/valueOf(int)
org/apache/pdfbox/tools/OverlayPDF/main(java.lang.String[])#org/apache/pdfbox/pdmodel/PDDocument/save(java.lang.String)
org/apache/pdfbox/tools/OverlayPDF/main(java.lang.String[])#org/apache/pdfbox/multipdf/Overlay/Overlay()
org/apache/pdfbox/tools/OverlayPDF/main(java.lang.String[])#org/apache/pdfbox/multipdf/Overlay/close()
org/apache/pdfbox/tools/OverlayPDF/main(java.lang.String[])#java/lang/StringBuilder/toString()
org/apache/pdfbox/tools/OverlayPDF/main(java.lang.String[])#org/apache/pdfbox/multipdf/Overlay$Position/toString()
org/apache/pdfbox/tools/OverlayPDF/main(java.lang.String[])#java/lang/String/equalsIgnoreCase(java.lang.String)
org/apache/pdfbox/tools/OverlayPDF/main(java.lang.String[])#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/pdfbox/tools/OverlayPDF/main(java.lang.String[])#java/lang/StringBuilder/append(java.lang.String)
org/apache/pdfbox/tools/OverlayPDF/main(java.lang.String[])#java/lang/String/trim()
org/apache/pdfbox/tools/OverlayPDF/main(java.lang.String[])#org/apache/pdfbox/multipdf/Overlay/setEvenPageOverlayFile(java.lang.String)
org/apache/pdfbox/tools/OverlayPDF/main(java.lang.String[])#java/io/IOException/getMessage()
org/apache/pdfbox/tools/OverlayPDF/main(java.lang.String[])#org/apache/pdfbox/multipdf/Overlay/setDefaultOverlayFile(java.lang.String)
org/apache/pdfbox/tools/OverlayPDF/main(java.lang.String[])#java/util/HashMap/HashMap()
org/apache/pdfbox/tools/OverlayPDF/main(java.lang.String[])#org/apache/pdfbox/multipdf/Overlay/setOddPageOverlayFile(java.lang.String)
org/apache/pdfbox/tools/OverlayPDF/main(java.lang.String[])#org/apache/pdfbox/multipdf/Overlay/setInputFile(java.lang.String)
org/apache/pdfbox/tools/OverlayPDF/main(java.lang.String[])#org/apache/pdfbox/multipdf/Overlay/overlay(java.util.Map)
org/apache/pdfbox/tools/OverlayPDF/main(java.lang.String[])#java/lang/System/setProperty(java.lang.String,java.lang.String)
org/apache/pdfbox/tools/Decrypt/decrypt()#java/io/IOException/IOException(java.lang.String)
org/apache/pdfbox/tools/Decrypt/decrypt()#org/apache/pdfbox/pdmodel/PDDocument/setAllSecurityToBeRemoved(boolean)
org/apache/pdfbox/tools/Decrypt/decrypt()#java/io/PrintStream/println(java.lang.String)
org/apache/pdfbox/tools/Decrypt/decrypt()#org/apache/pdfbox/pdmodel/encryption/AccessPermission/isOwnerPermission()
org/apache/pdfbox/tools/Decrypt/decrypt()#org/apache/pdfbox/pdmodel/PDDocument/close()
org/apache/pdfbox/tools/Decrypt/decrypt()#org/apache/pdfbox/pdmodel/PDDocument/isEncrypted()
org/apache/pdfbox/tools/Decrypt/decrypt()#java/io/FileInputStream/FileInputStream(java.lang.String)
org/apache/pdfbox/tools/Decrypt/decrypt()#java/io/File/File(java.lang.String)
org/apache/pdfbox/tools/Decrypt/decrypt()#org/apache/pdfbox/pdmodel/PDDocument/load(java.io.File,java.lang.String,java.io.InputStream,java.lang.String)
org/apache/pdfbox/tools/Decrypt/decrypt()#org/apache/pdfbox/pdmodel/PDDocument/getCurrentAccessPermission()
org/apache/pdfbox/tools/Decrypt/decrypt()#org/apache/pdfbox/pdmodel/PDDocument/save(java.lang.String)
org/apache/pdfbox/tools/Decrypt/decrypt()#org/apache/pdfbox/io/IOUtils/closeQuietly(java.io.Closeable)
org/apache/pdfbox/tools/DecompressObjectstreams/main(java.lang.String[])#org/apache/pdfbox/cos/COSObject/getObject()
org/apache/pdfbox/tools/DecompressObjectstreams/main(java.lang.String[])#org/apache/pdfbox/cos/COSDocument/getObjectFromPool(org.apache.pdfbox.cos.COSObjectKey)
org/apache/pdfbox/tools/DecompressObjectstreams/main(java.lang.String[])#org/apache/pdfbox/pdmodel/PDDocument/getDocument()
org/apache/pdfbox/tools/DecompressObjectstreams/main(java.lang.String[])#java/util/Iterator/hasNext()
org/apache/pdfbox/tools/DecompressObjectstreams/main(java.lang.String[])#java/lang/String/replaceAll(java.lang.String,java.lang.String)
org/apache/pdfbox/tools/DecompressObjectstreams/main(java.lang.String[])#org/apache/pdfbox/cos/COSObjectKey/COSObjectKey(org.apache.pdfbox.cos.COSObject)
org/apache/pdfbox/tools/DecompressObjectstreams/main(java.lang.String[])#org/apache/pdfbox/pdmodel/PDDocument/close()
org/apache/pdfbox/tools/DecompressObjectstreams/main(java.lang.String[])#org/apache/pdfbox/pdfparser/PDFObjectStreamParser/PDFObjectStreamParser(org.apache.pdfbox.cos.COSStream,org.apache.pdfbox.cos.COSDocument)
org/apache/pdfbox/tools/DecompressObjectstreams/main(java.lang.String[])#java/io/File/File(java.lang.String)
org/apache/pdfbox/tools/DecompressObjectstreams/main(java.lang.String[])#org/apache/pdfbox/pdfparser/PDFObjectStreamParser/parse()
org/apache/pdfbox/tools/DecompressObjectstreams/main(java.lang.String[])#org/apache/pdfbox/cos/COSDocument/removeObject(org.apache.pdfbox.cos.COSObjectKey)
org/apache/pdfbox/tools/DecompressObjectstreams/main(java.lang.String[])#java/lang/StringBuilder/StringBuilder()
org/apache/pdfbox/tools/DecompressObjectstreams/main(java.lang.String[])#org/apache/pdfbox/pdmodel/PDDocument/save(java.lang.String)
org/apache/pdfbox/tools/DecompressObjectstreams/main(java.lang.String[])#java/util/List/iterator()
org/apache/pdfbox/tools/DecompressObjectstreams/main(java.lang.String[])#org/apache/pdfbox/cos/COSDocument/getObjectsByType(org.apache.pdfbox.cos.COSName)
org/apache/pdfbox/tools/DecompressObjectstreams/main(java.lang.String[])#java/lang/String/matches(java.lang.String)
org/apache/pdfbox/tools/DecompressObjectstreams/main(java.lang.String[])#java/io/PrintStream/println(java.lang.String)
org/apache/pdfbox/tools/DecompressObjectstreams/main(java.lang.String[])#org/apache/pdfbox/cos/COSObject/setObject(org.apache.pdfbox.cos.COSBase)
org/apache/pdfbox/tools/DecompressObjectstreams/main(java.lang.String[])#java/lang/StringBuilder/append(java.lang.String)
org/apache/pdfbox/tools/DecompressObjectstreams/main(java.lang.String[])#java/util/Iterator/next()
org/apache/pdfbox/tools/DecompressObjectstreams/main(java.lang.String[])#org/apache/pdfbox/pdmodel/PDDocument/load(java.io.File)
org/apache/pdfbox/tools/DecompressObjectstreams/main(java.lang.String[])#java/lang/System/setProperty(java.lang.String,java.lang.String)
org/apache/pdfbox/tools/DecompressObjectstreams/main(java.lang.String[])#org/apache/pdfbox/pdfparser/PDFObjectStreamParser/getObjects()
org/apache/pdfbox/tools/DecompressObjectstreams/main(java.lang.String[])#java/lang/StringBuilder/toString()
org/apache/pdfbox/tools/DecompressObjectstreams/main(java.lang.String[])#java/lang/Exception/getMessage()
org/apache/pdfbox/tools/ExtractImages/ImageGraphicsEngine/run()#org/apache/pdfbox/pdmodel/graphics/state/PDSoftMask/getGroup()
org/apache/pdfbox/tools/ExtractImages/ImageGraphicsEngine/run()#java/util/Iterator/hasNext()
org/apache/pdfbox/tools/ExtractImages/ImageGraphicsEngine/run()#org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState/getSoftMask()
org/apache/pdfbox/tools/ExtractImages/ImageGraphicsEngine/run()#java/util/Iterator/next()
org/apache/pdfbox/tools/ExtractImages/ImageGraphicsEngine/run()#org/apache/pdfbox/tools/ExtractImages$ImageGraphicsEngine/processPage(org.apache.pdfbox.pdmodel.PDPage)
org/apache/pdfbox/tools/ExtractImages/ImageGraphicsEngine/run()#org/apache/pdfbox/tools/ExtractImages$ImageGraphicsEngine/getPage()
org/apache/pdfbox/tools/ExtractImages/ImageGraphicsEngine/run()#org/apache/pdfbox/pdmodel/PDPage/getResources()
org/apache/pdfbox/tools/ExtractImages/ImageGraphicsEngine/run()#org/apache/pdfbox/pdmodel/PDResources/getExtGState(org.apache.pdfbox.cos.COSName)
org/apache/pdfbox/tools/ExtractImages/ImageGraphicsEngine/run()#java/lang/Iterable/iterator()
org/apache/pdfbox/tools/ExtractImages/ImageGraphicsEngine/run()#org/apache/pdfbox/tools/ExtractImages$ImageGraphicsEngine/processSoftMask(org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup)
org/apache/pdfbox/tools/ExtractImages/ImageGraphicsEngine/run()#org/apache/pdfbox/pdmodel/PDResources/getExtGStateNames()
org/apache/pdfbox/tools/PDFToImage/changeCropBox(org.apache.pdfbox.pdmodel.PDDocument,float,float,float,float)#java/util/Iterator/hasNext()
org/apache/pdfbox/tools/PDFToImage/changeCropBox(org.apache.pdfbox.pdmodel.PDDocument,float,float,float,float)#java/io/PrintStream/println(java.lang.String)
org/apache/pdfbox/tools/PDFToImage/changeCropBox(org.apache.pdfbox.pdmodel.PDDocument,float,float,float,float)#org/apache/pdfbox/pdmodel/common/PDRectangle/setUpperRightY(float)
org/apache/pdfbox/tools/PDFToImage/changeCropBox(org.apache.pdfbox.pdmodel.PDDocument,float,float,float,float)#org/apache/pdfbox/pdmodel/common/PDRectangle/setUpperRightX(float)
org/apache/pdfbox/tools/PDFToImage/changeCropBox(org.apache.pdfbox.pdmodel.PDDocument,float,float,float,float)#org/apache/pdfbox/pdmodel/PDPage/setCropBox(org.apache.pdfbox.pdmodel.common.PDRectangle)
org/apache/pdfbox/tools/PDFToImage/changeCropBox(org.apache.pdfbox.pdmodel.PDDocument,float,float,float,float)#org/apache/pdfbox/pdmodel/common/PDRectangle/setLowerLeftY(float)
org/apache/pdfbox/tools/PDFToImage/changeCropBox(org.apache.pdfbox.pdmodel.PDDocument,float,float,float,float)#org/apache/pdfbox/pdmodel/common/PDRectangle/setLowerLeftX(float)
org/apache/pdfbox/tools/PDFToImage/changeCropBox(org.apache.pdfbox.pdmodel.PDDocument,float,float,float,float)#java/util/Iterator/next()
org/apache/pdfbox/tools/PDFToImage/changeCropBox(org.apache.pdfbox.pdmodel.PDDocument,float,float,float,float)#org/apache/pdfbox/pdmodel/PDDocument/getPages()
org/apache/pdfbox/tools/PDFToImage/changeCropBox(org.apache.pdfbox.pdmodel.PDDocument,float,float,float,float)#org/apache/pdfbox/pdmodel/PDPageTree/iterator()
org/apache/pdfbox/tools/PDFToImage/changeCropBox(org.apache.pdfbox.pdmodel.PDDocument,float,float,float,float)#org/apache/pdfbox/pdmodel/common/PDRectangle/PDRectangle()
org/apache/pdfbox/tools/PDFToImage/main(java.lang.String[])#java/lang/String/equalsIgnoreCase(java.lang.String)
org/apache/pdfbox/tools/PDFToImage/main(java.lang.String[])#org/apache/pdfbox/pdmodel/PDDocument/load(java.io.File,java.lang.String)
org/apache/pdfbox/tools/PDFToImage/main(java.lang.String[])#java/lang/Long/valueOf(long)
org/apache/pdfbox/tools/PDFToImage/main(java.lang.String[])#java/lang/System/nanoTime()
org/apache/pdfbox/tools/PDFToImage/main(java.lang.String[])#java/lang/StringBuilder/append(int)
org/apache/pdfbox/tools/PDFToImage/main(java.lang.String[])#org/apache/pdfbox/pdmodel/PDDocument/close()
org/apache/pdfbox/tools/PDFToImage/main(java.lang.String[])#org/apache/pdfbox/pdmodel/PDDocument/getNumberOfPages()
org/apache/pdfbox/tools/PDFToImage/main(java.lang.String[])#java/lang/String/equals(java.lang.Object)
org/apache/pdfbox/tools/PDFToImage/main(java.lang.String[])#java/lang/String/substring(int,int)
org/apache/pdfbox/tools/PDFToImage/main(java.lang.String[])#java/lang/System/setProperty(java.lang.String,java.lang.String)
org/apache/pdfbox/tools/PDFToImage/main(java.lang.String[])#java/awt/Toolkit/getDefaultToolkit()
org/apache/pdfbox/tools/PDFToImage/main(java.lang.String[])#java/lang/StringBuilder/toString()
org/apache/pdfbox/tools/PDFToImage/main(java.lang.String[])#java/lang/StringBuilder/append(java.lang.String)
org/apache/pdfbox/tools/PDFToImage/main(java.lang.String[])#java/io/PrintStream/println(java.lang.String)
org/apache/pdfbox/tools/PDFToImage/main(java.lang.String[])#java/lang/System/exit(int)
org/apache/pdfbox/tools/PDFToImage/main(java.lang.String[])#java/io/File/File(java.lang.String)
org/apache/pdfbox/tools/PDFToImage/main(java.lang.String[])#java/lang/StringBuilder/StringBuilder()
org/apache/pdfbox/tools/PDFToImage/main(java.lang.String[])#org/apache/pdfbox/rendering/PDFRenderer/PDFRenderer(org.apache.pdfbox.pdmodel.PDDocument)
org/apache/pdfbox/tools/PDFToImage/main(java.lang.String[])#java/lang/String/lastIndexOf(int)
org/apache/pdfbox/tools/PDFToImage/main(java.lang.String[])#java/lang/Float/floatValue()
org/apache/pdfbox/tools/PDFToImage/main(java.lang.String[])#org/apache/pdfbox/rendering/PDFRenderer/renderImageWithDPI(int,float,org.apache.pdfbox.rendering.ImageType)
org/apache/pdfbox/tools/PDFToImage/main(java.lang.String[])#java/lang/Integer/parseInt(java.lang.String)
org/apache/pdfbox/tools/PDFToImage/main(java.lang.String[])#java/lang/Integer/valueOf(int)
org/apache/pdfbox/tools/PDFToImage/main(java.lang.String[])#java/lang/Float/valueOf(java.lang.String)
org/apache/pdfbox/tools/PDFToImage/main(java.lang.String[])#java/io/PrintStream/printf(java.lang.String,java.lang.Object[])
org/apache/pdfbox/tools/PDFToImage/main(java.lang.String[])#java/awt/Toolkit/getScreenResolution()
org/apache/pdfbox/tools/PDFToImage/main(java.lang.String[])#java/lang/Math/min(int,int)
org/apache/pdfbox/tools/ExportFDF/exportFDF(java.lang.String[])#org/apache/pdfbox/pdmodel/PDDocument/getDocumentCatalog()
org/apache/pdfbox/tools/ExportFDF/exportFDF(java.lang.String[])#java/lang/String/length()
org/apache/pdfbox/tools/ExportFDF/exportFDF(java.lang.String[])#org/apache/pdfbox/pdmodel/PDDocument/load(java.io.File)
org/apache/pdfbox/tools/ExportFDF/exportFDF(java.lang.String[])#java/io/File/File(java.lang.String)
org/apache/pdfbox/tools/ExportFDF/exportFDF(java.lang.String[])#java/lang/String/substring(int,int)
org/apache/pdfbox/tools/ExportFDF/exportFDF(java.lang.String[])#java/lang/StringBuilder/StringBuilder()
org/apache/pdfbox/tools/ExportFDF/exportFDF(java.lang.String[])#org/apache/pdfbox/pdmodel/PDDocumentCatalog/getAcroForm()
org/apache/pdfbox/tools/ExportFDF/exportFDF(java.lang.String[])#java/lang/StringBuilder/append(java.lang.String)
org/apache/pdfbox/tools/ExportFDF/exportFDF(java.lang.String[])#java/io/PrintStream/println(java.lang.String)
org/apache/pdfbox/tools/ExportFDF/exportFDF(java.lang.String[])#org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm/exportFDF()
org/apache/pdfbox/tools/ExportFDF/exportFDF(java.lang.String[])#java/lang/StringBuilder/toString()
org/apache/pdfbox/tools/ExportFDF/exportFDF(java.lang.String[])#org/apache/pdfbox/pdmodel/fdf/FDFDocument/save(java.lang.String)
org/apache/pdfbox/tools/imageio/MetaUtil/debugLogMetadata(javax.imageio.metadata.IIOMetadata,java.lang.String)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/pdfbox/tools/imageio/MetaUtil/debugLogMetadata(javax.imageio.metadata.IIOMetadata,java.lang.String)#javax/xml/transform/TransformerFactory/newInstance()
org/apache/pdfbox/tools/imageio/MetaUtil/debugLogMetadata(javax.imageio.metadata.IIOMetadata,java.lang.String)#javax/xml/transform/stream/StreamResult/StreamResult(java.io.Writer)
org/apache/pdfbox/tools/imageio/MetaUtil/debugLogMetadata(javax.imageio.metadata.IIOMetadata,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/apache/pdfbox/tools/imageio/MetaUtil/debugLogMetadata(javax.imageio.metadata.IIOMetadata,java.lang.String)#org/apache/commons/logging/Log/isDebugEnabled()
org/apache/pdfbox/tools/imageio/MetaUtil/debugLogMetadata(javax.imageio.metadata.IIOMetadata,java.lang.String)#javax/xml/transform/dom/DOMSource/DOMSource(org.w3c.dom.Node)
org/apache/pdfbox/tools/imageio/MetaUtil/debugLogMetadata(javax.imageio.metadata.IIOMetadata,java.lang.String)#javax/xml/transform/Transformer/setOutputProperty(java.lang.String,java.lang.String)
org/apache/pdfbox/tools/imageio/MetaUtil/debugLogMetadata(javax.imageio.metadata.IIOMetadata,java.lang.String)#javax/imageio/metadata/IIOMetadata/getAsTree(java.lang.String)
org/apache/pdfbox/tools/imageio/MetaUtil/debugLogMetadata(javax.imageio.metadata.IIOMetadata,java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/apache/pdfbox/tools/imageio/MetaUtil/debugLogMetadata(javax.imageio.metadata.IIOMetadata,java.lang.String)#java/io/StringWriter/StringWriter()
org/apache/pdfbox/tools/imageio/MetaUtil/debugLogMetadata(javax.imageio.metadata.IIOMetadata,java.lang.String)#org/apache/commons/logging/Log/error(java.lang.Object,java.lang.Throwable)
org/apache/pdfbox/tools/imageio/MetaUtil/debugLogMetadata(javax.imageio.metadata.IIOMetadata,java.lang.String)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/pdfbox/tools/imageio/MetaUtil/debugLogMetadata(javax.imageio.metadata.IIOMetadata,java.lang.String)#javax/xml/transform/Transformer/transform(javax.xml.transform.Source,javax.xml.transform.Result)
org/apache/pdfbox/tools/imageio/MetaUtil/debugLogMetadata(javax.imageio.metadata.IIOMetadata,java.lang.String)#java/lang/StringBuilder/toString()
org/apache/pdfbox/tools/imageio/MetaUtil/debugLogMetadata(javax.imageio.metadata.IIOMetadata,java.lang.String)#javax/xml/transform/TransformerFactory/newTransformer()
org/apache/pdfbox/tools/ExportXFDF/exportXFDF(java.lang.String[])#org/apache/pdfbox/pdmodel/PDDocument/getDocumentCatalog()
org/apache/pdfbox/tools/ExportXFDF/exportXFDF(java.lang.String[])#java/lang/String/length()
org/apache/pdfbox/tools/ExportXFDF/exportXFDF(java.lang.String[])#org/apache/pdfbox/pdmodel/fdf/FDFDocument/saveXFDF(java.lang.String)
org/apache/pdfbox/tools/ExportXFDF/exportXFDF(java.lang.String[])#org/apache/pdfbox/pdmodel/PDDocument/load(java.io.File)
org/apache/pdfbox/tools/ExportXFDF/exportXFDF(java.lang.String[])#java/io/File/File(java.lang.String)
org/apache/pdfbox/tools/ExportXFDF/exportXFDF(java.lang.String[])#java/lang/String/substring(int,int)
org/apache/pdfbox/tools/ExportXFDF/exportXFDF(java.lang.String[])#org/apache/pdfbox/pdmodel/PDDocumentCatalog/getAcroForm()
org/apache/pdfbox/tools/ExportXFDF/exportXFDF(java.lang.String[])#org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm/exportFDF()
org/apache/pdfbox/tools/ExportXFDF/exportXFDF(java.lang.String[])#java/lang/StringBuilder/toString()
org/apache/pdfbox/tools/ExportXFDF/exportXFDF(java.lang.String[])#java/lang/StringBuilder/append(java.lang.String)
org/apache/pdfbox/tools/ExportXFDF/exportXFDF(java.lang.String[])#java/io/PrintStream/println(java.lang.String)
org/apache/pdfbox/tools/ExportXFDF/exportXFDF(java.lang.String[])#java/lang/StringBuilder/StringBuilder()
org/apache/pdfbox/tools/TextToPDF/main(java.lang.String[])#org/apache/pdfbox/pdmodel/font/PDType0Font/load(org.apache.pdfbox.pdmodel.PDDocument,java.io.File)
org/apache/pdfbox/tools/TextToPDF/main(java.lang.String[])#java/io/IOException/IOException(java.lang.String)
org/apache/pdfbox/tools/TextToPDF/main(java.lang.String[])#org/apache/pdfbox/pdmodel/PDDocument/close()
org/apache/pdfbox/tools/TextToPDF/main(java.lang.String[])#java/lang/System/setProperty(java.lang.String,java.lang.String)
org/apache/pdfbox/tools/TextToPDF/main(java.lang.String[])#java/lang/Integer/parseInt(java.lang.String)
org/apache/pdfbox/tools/TextToPDF/main(java.lang.String[])#org/apache/pdfbox/pdmodel/PDDocument/PDDocument()
org/apache/pdfbox/tools/TextToPDF/main(java.lang.String[])#org/apache/pdfbox/pdmodel/PDDocument/save(java.lang.String)
org/apache/pdfbox/tools/TextToPDF/main(java.lang.String[])#java/lang/StringBuilder/toString()
org/apache/pdfbox/tools/TextToPDF/main(java.lang.String[])#java/lang/StringBuilder/append(java.lang.String)
org/apache/pdfbox/tools/TextToPDF/main(java.lang.String[])#java/io/FileReader/FileReader(java.lang.String)
org/apache/pdfbox/tools/TextToPDF/main(java.lang.String[])#java/io/File/File(java.lang.String)
org/apache/pdfbox/tools/TextToPDF/main(java.lang.String[])#java/lang/String/equals(java.lang.Object)
org/apache/pdfbox/tools/TextToPDF/main(java.lang.String[])#java/lang/StringBuilder/StringBuilder()
org/apache/pdfbox/tools/TextToPDF/createPDFFromText(org.apache.pdfbox.pdmodel.PDDocument,java.io.Reader)#org/apache/pdfbox/pdmodel/PDPageContentStream/close()
org/apache/pdfbox/tools/TextToPDF/createPDFFromText(org.apache.pdfbox.pdmodel.PDDocument,java.io.Reader)#java/lang/String/replaceAll(java.lang.String,java.lang.String)
org/apache/pdfbox/tools/TextToPDF/createPDFFromText(org.apache.pdfbox.pdmodel.PDDocument,java.io.Reader)#org/apache/pdfbox/pdmodel/PDDocument/addPage(org.apache.pdfbox.pdmodel.PDPage)
org/apache/pdfbox/tools/TextToPDF/createPDFFromText(org.apache.pdfbox.pdmodel.PDDocument,java.io.Reader)#org/apache/fontbox/util/BoundingBox/getHeight()
org/apache/pdfbox/tools/TextToPDF/createPDFFromText(org.apache.pdfbox.pdmodel.PDDocument,java.io.Reader)#org/apache/pdfbox/pdmodel/PDPageContentStream/PDPageContentStream(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDPage)
org/apache/pdfbox/tools/TextToPDF/createPDFFromText(org.apache.pdfbox.pdmodel.PDDocument,java.io.Reader)#java/lang/String/substring(int,int)
org/apache/pdfbox/tools/TextToPDF/createPDFFromText(org.apache.pdfbox.pdmodel.PDDocument,java.io.Reader)#java/lang/StringBuilder/StringBuilder()
org/apache/pdfbox/tools/TextToPDF/createPDFFromText(org.apache.pdfbox.pdmodel.PDDocument,java.io.Reader)#java/lang/String/substring(int)
org/apache/pdfbox/tools/TextToPDF/createPDFFromText(org.apache.pdfbox.pdmodel.PDDocument,java.io.Reader)#org/apache/pdfbox/pdmodel/common/PDRectangle/getHeight()
org/apache/pdfbox/tools/TextToPDF/createPDFFromText(org.apache.pdfbox.pdmodel.PDDocument,java.io.Reader)#org/apache/pdfbox/pdmodel/font/PDFont/getStringWidth(java.lang.String)
org/apache/pdfbox/tools/TextToPDF/createPDFFromText(org.apache.pdfbox.pdmodel.PDDocument,java.io.Reader)#java/lang/String/indexOf(int)
org/apache/pdfbox/tools/TextToPDF/createPDFFromText(org.apache.pdfbox.pdmodel.PDDocument,java.io.Reader)#java/lang/String/split(java.lang.String)
org/apache/pdfbox/tools/TextToPDF/createPDFFromText(org.apache.pdfbox.pdmodel.PDDocument,java.io.Reader)#org/apache/pdfbox/pdmodel/PDPage/getMediaBox()
org/apache/pdfbox/tools/TextToPDF/createPDFFromText(org.apache.pdfbox.pdmodel.PDDocument,java.io.Reader)#java/io/IOException/IOException(java.lang.String)
org/apache/pdfbox/tools/TextToPDF/createPDFFromText(org.apache.pdfbox.pdmodel.PDDocument,java.io.Reader)#java/lang/StringBuilder/append(java.lang.String)
org/apache/pdfbox/tools/TextToPDF/createPDFFromText(org.apache.pdfbox.pdmodel.PDDocument,java.io.Reader)#org/apache/pdfbox/pdmodel/PDPage/PDPage(org.apache.pdfbox.pdmodel.common.PDRectangle)
org/apache/pdfbox/tools/TextToPDF/createPDFFromText(org.apache.pdfbox.pdmodel.PDDocument,java.io.Reader)#org/apache/pdfbox/pdmodel/common/PDRectangle/getWidth()
org/apache/pdfbox/tools/TextToPDF/createPDFFromText(org.apache.pdfbox.pdmodel.PDDocument,java.io.Reader)#org/apache/pdfbox/pdmodel/common/PDRectangle/PDRectangle(float,float)
org/apache/pdfbox/tools/TextToPDF/createPDFFromText(org.apache.pdfbox.pdmodel.PDDocument,java.io.Reader)#org/apache/pdfbox/pdmodel/PDDocument/close()
org/apache/pdfbox/tools/TextToPDF/createPDFFromText(org.apache.pdfbox.pdmodel.PDDocument,java.io.Reader)#java/lang/String/length()
org/apache/pdfbox/tools/TextToPDF/createPDFFromText(org.apache.pdfbox.pdmodel.PDDocument,java.io.Reader)#org/apache/pdfbox/pdmodel/PDPageContentStream/endText()
org/apache/pdfbox/tools/TextToPDF/createPDFFromText(org.apache.pdfbox.pdmodel.PDDocument,java.io.Reader)#org/apache/pdfbox/pdmodel/font/PDFont/getBoundingBox()
org/apache/pdfbox/tools/TextToPDF/createPDFFromText(org.apache.pdfbox.pdmodel.PDDocument,java.io.Reader)#org/apache/pdfbox/pdmodel/PDPageContentStream/showText(java.lang.String)
org/apache/pdfbox/tools/TextToPDF/createPDFFromText(org.apache.pdfbox.pdmodel.PDDocument,java.io.Reader)#org/apache/pdfbox/pdmodel/PDPageContentStream/setFont(org.apache.pdfbox.pdmodel.font.PDFont,float)
org/apache/pdfbox/tools/TextToPDF/createPDFFromText(org.apache.pdfbox.pdmodel.PDDocument,java.io.Reader)#java/io/BufferedReader/BufferedReader(java.io.Reader)
org/apache/pdfbox/tools/TextToPDF/createPDFFromText(org.apache.pdfbox.pdmodel.PDDocument,java.io.Reader)#org/apache/pdfbox/pdmodel/PDPageContentStream/newLineAtOffset(float,float)
org/apache/pdfbox/tools/TextToPDF/createPDFFromText(org.apache.pdfbox.pdmodel.PDDocument,java.io.Reader)#java/io/BufferedReader/readLine()
org/apache/pdfbox/tools/TextToPDF/createPDFFromText(org.apache.pdfbox.pdmodel.PDDocument,java.io.Reader)#java/lang/StringBuilder/toString()
org/apache/pdfbox/tools/TextToPDF/createPDFFromText(org.apache.pdfbox.pdmodel.PDDocument,java.io.Reader)#org/apache/pdfbox/pdmodel/PDPageContentStream/beginText()
org/apache/pdfbox/tools/PrintPDF/main(java.lang.String[])#java/awt/print/PrinterJob/lookupPrintServices()
org/apache/pdfbox/tools/PrintPDF/main(java.lang.String[])#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/pdfbox/tools/PrintPDF/main(java.lang.String[])#java/io/File/getName()
org/apache/pdfbox/tools/PrintPDF/main(java.lang.String[])#java/awt/print/PrinterJob/setJobName(java.lang.String)
org/apache/pdfbox/tools/PrintPDF/main(java.lang.String[])#java/awt/print/PrinterJob/getPrinterJob()
org/apache/pdfbox/tools/PrintPDF/main(java.lang.String[])#javax/print/PrintService/getName()
org/apache/pdfbox/tools/PrintPDF/main(java.lang.String[])#java/util/HashMap/HashMap()
org/apache/pdfbox/tools/PrintPDF/main(java.lang.String[])#java/io/File/File(java.lang.String)
org/apache/pdfbox/tools/PrintPDF/main(java.lang.String[])#java/lang/String/equals(java.lang.Object)
org/apache/pdfbox/tools/PrintPDF/main(java.lang.String[])#java/lang/System/setProperty(java.lang.String,java.lang.String)
org/apache/pdfbox/tools/PrintPDF/main(java.lang.String[])#java/lang/Integer/parseInt(java.lang.String)
org/apache/pdfbox/tools/PrintPDF/main(java.lang.String[])#java/awt/print/PrinterJob/setPrintService(javax.print.PrintService)
org/apache/pdfbox/tools/PrintPDF/main(java.lang.String[])#java/lang/String/contains(java.lang.CharSequence)
org/apache/pdfbox/tools/PrintPDF/main(java.lang.String[])#java/awt/print/PrinterJob/print()
org/apache/pdfbox/tools/PrintPDF/main(java.lang.String[])#org/apache/pdfbox/printing/PDFPageable/PDFPageable(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.printing.Orientation,boolean,float)
org/apache/pdfbox/tools/PrintPDF/main(java.lang.String[])#org/apache/pdfbox/pdmodel/PDDocument/load(java.io.File,java.lang.String)
org/apache/pdfbox/tools/PrintPDF/main(java.lang.String[])#java/awt/print/PrinterJob/printDialog()
org/apache/pdfbox/tools/PrintPDF/main(java.lang.String[])#java/awt/print/PrinterJob/setPageable(java.awt.print.Pageable)
org/apache/pdfbox/tools/PrintPDF/main(java.lang.String[])#org/apache/pdfbox/pdmodel/PDDocument/close()
org/apache/pdfbox/tools/PrintPDF/main(java.lang.String[])#java/util/Map/get(java.lang.Object)
org/apache/pdfbox/tools/imageio/TIFFUtil/updateMetadata(javax.imageio.metadata.IIOMetadata,java.awt.image.BufferedImage,int)#java/awt/image/BufferedImage/getType()
org/apache/pdfbox/tools/imageio/TIFFUtil/updateMetadata(javax.imageio.metadata.IIOMetadata,java.awt.image.BufferedImage,int)#javax/imageio/metadata/IIOMetadata/getNativeMetadataFormatName()
org/apache/pdfbox/tools/imageio/TIFFUtil/updateMetadata(javax.imageio.metadata.IIOMetadata,java.awt.image.BufferedImage,int)#java/awt/image/BufferedImage/getColorModel()
org/apache/pdfbox/tools/imageio/TIFFUtil/updateMetadata(javax.imageio.metadata.IIOMetadata,java.awt.image.BufferedImage,int)#java/awt/image/BufferedImage/getHeight()
org/apache/pdfbox/tools/imageio/TIFFUtil/updateMetadata(javax.imageio.metadata.IIOMetadata,java.awt.image.BufferedImage,int)#javax/imageio/metadata/IIOMetadataNode/IIOMetadataNode(java.lang.String)
org/apache/pdfbox/tools/imageio/TIFFUtil/updateMetadata(javax.imageio.metadata.IIOMetadata,java.awt.image.BufferedImage,int)#javax/imageio/metadata/IIOMetadataNode/appendChild(org.w3c.dom.Node)
org/apache/pdfbox/tools/imageio/TIFFUtil/updateMetadata(javax.imageio.metadata.IIOMetadata,java.awt.image.BufferedImage,int)#org/w3c/dom/NodeList/item(int)
org/apache/pdfbox/tools/imageio/TIFFUtil/updateMetadata(javax.imageio.metadata.IIOMetadata,java.awt.image.BufferedImage,int)#javax/imageio/metadata/IIOMetadataNode/getElementsByTagName(java.lang.String)
org/apache/pdfbox/tools/imageio/TIFFUtil/updateMetadata(javax.imageio.metadata.IIOMetadata,java.awt.image.BufferedImage,int)#java/awt/image/ColorModel/getPixelSize()
org/apache/pdfbox/tools/imageio/TIFFUtil/updateMetadata(javax.imageio.metadata.IIOMetadata,java.awt.image.BufferedImage,int)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/apache/pdfbox/tools/imageio/TIFFUtil/updateMetadata(javax.imageio.metadata.IIOMetadata,java.awt.image.BufferedImage,int)#org/w3c/dom/NodeList/getLength()
org/apache/pdfbox/tools/imageio/TIFFUtil/updateMetadata(javax.imageio.metadata.IIOMetadata,java.awt.image.BufferedImage,int)#javax/imageio/metadata/IIOMetadata/mergeTree(java.lang.String,org.w3c.dom.Node)
org/apache/pdfbox/tools/PDFSplit/split(java.lang.String[])#org/apache/pdfbox/multipdf/Splitter/setEndPage(int)
org/apache/pdfbox/tools/PDFSplit/split(java.lang.String[])#org/apache/pdfbox/pdmodel/PDDocument/load(java.io.File,java.lang.String)
org/apache/pdfbox/tools/PDFSplit/split(java.lang.String[])#java/lang/StringBuilder/append(int)
org/apache/pdfbox/tools/PDFSplit/split(java.lang.String[])#org/apache/pdfbox/pdmodel/PDDocument/close()
org/apache/pdfbox/tools/PDFSplit/split(java.lang.String[])#java/util/List/size()
org/apache/pdfbox/tools/PDFSplit/split(java.lang.String[])#org/apache/pdfbox/pdmodel/PDDocument/getNumberOfPages()
org/apache/pdfbox/tools/PDFSplit/split(java.lang.String[])#java/lang/String/equals(java.lang.Object)
org/apache/pdfbox/tools/PDFSplit/split(java.lang.String[])#java/lang/String/substring(int,int)
org/apache/pdfbox/tools/PDFSplit/split(java.lang.String[])#java/lang/Integer/parseInt(java.lang.String)
org/apache/pdfbox/tools/PDFSplit/split(java.lang.String[])#java/util/List/get(int)
org/apache/pdfbox/tools/PDFSplit/split(java.lang.String[])#org/apache/pdfbox/multipdf/Splitter/Splitter()
org/apache/pdfbox/tools/PDFSplit/split(java.lang.String[])#org/apache/pdfbox/multipdf/Splitter/setStartPage(int)
org/apache/pdfbox/tools/PDFSplit/split(java.lang.String[])#org/apache/pdfbox/multipdf/Splitter/split(org.apache.pdfbox.pdmodel.PDDocument)
org/apache/pdfbox/tools/PDFSplit/split(java.lang.String[])#java/lang/StringBuilder/toString()
org/apache/pdfbox/tools/PDFSplit/split(java.lang.String[])#java/lang/StringBuilder/append(java.lang.String)
org/apache/pdfbox/tools/PDFSplit/split(java.lang.String[])#org/apache/pdfbox/multipdf/Splitter/setSplitAtPage(int)
org/apache/pdfbox/tools/PDFSplit/split(java.lang.String[])#java/io/File/File(java.lang.String)
org/apache/pdfbox/tools/PDFSplit/split(java.lang.String[])#java/lang/StringBuilder/StringBuilder()
org/apache/pdfbox/tools/PDFSplit/split(java.lang.String[])#java/lang/String/lastIndexOf(int)
org/apache/pdfbox/tools/ExtractText/startExtraction(java.lang.String[])#org/apache/pdfbox/pdmodel/common/filespecification/PDEmbeddedFile/getSubtype()
org/apache/pdfbox/tools/ExtractText/startExtraction(java.lang.String[])#org/apache/pdfbox/pdmodel/common/filespecification/PDEmbeddedFile/createInputStream()
org/apache/pdfbox/tools/ExtractText/startExtraction(java.lang.String[])#org/apache/pdfbox/pdmodel/PDDocumentCatalog/getNames()
org/apache/pdfbox/tools/ExtractText/startExtraction(java.lang.String[])#java/lang/String/length()
org/apache/pdfbox/tools/ExtractText/startExtraction(java.lang.String[])#java/lang/String/equals(java.lang.Object)
org/apache/pdfbox/tools/ExtractText/startExtraction(java.lang.String[])#java/lang/StringBuilder/StringBuilder()
org/apache/pdfbox/tools/ExtractText/startExtraction(java.lang.String[])#java/lang/Integer/parseInt(java.lang.String)
org/apache/pdfbox/tools/ExtractText/startExtraction(java.lang.String[])#org/apache/pdfbox/text/PDFTextStripper/writeText(org.apache.pdfbox.pdmodel.PDDocument,java.io.Writer)
org/apache/pdfbox/tools/ExtractText/startExtraction(java.lang.String[])#java/util/Map/entrySet()
org/apache/pdfbox/tools/ExtractText/startExtraction(java.lang.String[])#org/apache/pdfbox/pdmodel/PDDocument/load(java.io.File,java.lang.String)
org/apache/pdfbox/tools/ExtractText/startExtraction(java.lang.String[])#java/io/IOException/IOException(java.lang.String)
org/apache/pdfbox/tools/ExtractText/startExtraction(java.lang.String[])#java/util/Iterator/hasNext()
org/apache/pdfbox/tools/ExtractText/startExtraction(java.lang.String[])#org/apache/pdfbox/text/PDFTextStripper/setEndPage(int)
org/apache/pdfbox/tools/ExtractText/startExtraction(java.lang.String[])#org/apache/pdfbox/pdmodel/common/filespecification/PDComplexFileSpecification/getEmbeddedFile()
org/apache/pdfbox/tools/ExtractText/startExtraction(java.lang.String[])#java/lang/StringBuilder/append(java.lang.String)
org/apache/pdfbox/tools/ExtractText/startExtraction(java.lang.String[])#java/util/Map$Entry/getKey()
org/apache/pdfbox/tools/ExtractText/startExtraction(java.lang.String[])#java/io/PrintStream/println(java.lang.String)
org/apache/pdfbox/tools/ExtractText/startExtraction(java.lang.String[])#java/io/OutputStreamWriter/OutputStreamWriter(java.io.OutputStream,java.lang.String)
org/apache/pdfbox/tools/ExtractText/startExtraction(java.lang.String[])#java/lang/StringBuilder/append(int)
org/apache/pdfbox/tools/ExtractText/startExtraction(java.lang.String[])#org/apache/pdfbox/pdmodel/PDDocument/getDocumentCatalog()
org/apache/pdfbox/tools/ExtractText/startExtraction(java.lang.String[])#org/apache/pdfbox/pdmodel/common/filespecification/PDEmbeddedFile/getSize()
org/apache/pdfbox/tools/ExtractText/startExtraction(java.lang.String[])#org/apache/pdfbox/pdmodel/PDDocument/load(java.io.InputStream)
org/apache/pdfbox/tools/ExtractText/startExtraction(java.lang.String[])#java/util/Iterator/next()
org/apache/pdfbox/tools/ExtractText/startExtraction(java.lang.String[])#org/apache/pdfbox/pdmodel/PDEmbeddedFilesNameTreeNode/getNames()
org/apache/pdfbox/tools/ExtractText/startExtraction(java.lang.String[])#java/io/FileOutputStream/FileOutputStream(java.lang.String)
org/apache/pdfbox/tools/ExtractText/startExtraction(java.lang.String[])#org/apache/pdfbox/text/PDFTextStripper/setSortByPosition(boolean)
org/apache/pdfbox/tools/ExtractText/startExtraction(java.lang.String[])#java/io/File/File(java.lang.String)
org/apache/pdfbox/tools/ExtractText/startExtraction(java.lang.String[])#java/io/InputStream/close()
org/apache/pdfbox/tools/ExtractText/startExtraction(java.lang.String[])#java/lang/String/substring(int,int)
org/apache/pdfbox/tools/ExtractText/startExtraction(java.lang.String[])#java/io/File/getAbsolutePath()
org/apache/pdfbox/tools/ExtractText/startExtraction(java.lang.String[])#java/util/Set/iterator()
org/apache/pdfbox/tools/ExtractText/startExtraction(java.lang.String[])#org/apache/pdfbox/text/PDFTextStripper/setShouldSeparateByBeads(boolean)
org/apache/pdfbox/tools/ExtractText/startExtraction(java.lang.String[])#org/apache/pdfbox/text/PDFTextStripper/PDFTextStripper()
org/apache/pdfbox/tools/ExtractText/startExtraction(java.lang.String[])#org/apache/pdfbox/pdmodel/PDDocumentNameDictionary/getEmbeddedFiles()
org/apache/pdfbox/tools/ExtractText/startExtraction(java.lang.String[])#org/apache/pdfbox/pdmodel/PDDocument/getCurrentAccessPermission()
org/apache/pdfbox/tools/ExtractText/startExtraction(java.lang.String[])#java/util/Map$Entry/getValue()
org/apache/pdfbox/tools/ExtractText/startExtraction(java.lang.String[])#org/apache/pdfbox/pdmodel/encryption/AccessPermission/canExtractContent()
org/apache/pdfbox/tools/ExtractText/startExtraction(java.lang.String[])#org/apache/pdfbox/io/IOUtils/closeQuietly(java.io.Closeable)
org/apache/pdfbox/tools/ExtractText/startExtraction(java.lang.String[])#java/lang/StringBuilder/toString()
org/apache/pdfbox/tools/ExtractText/startExtraction(java.lang.String[])#org/apache/pdfbox/text/PDFTextStripper/setStartPage(int)
