org/jgrapht/alg/cycle/JohnsonSimpleCycles/getSCCs(int,int)#java/lang/Integer/intValue()
org/jgrapht/alg/cycle/JohnsonSimpleCycles/getSCCs(int,int)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/jgrapht/alg/cycle/JohnsonSimpleCycles/getSCCs(int,int)#java/util/ArrayDeque/pop()
org/jgrapht/alg/cycle/JohnsonSimpleCycles/getSCCs(int,int)#java/lang/Object/equals(java.lang.Object)
org/jgrapht/alg/cycle/JohnsonSimpleCycles/getSCCs(int,int)#java/util/Iterator/hasNext()
org/jgrapht/alg/cycle/JohnsonSimpleCycles/getSCCs(int,int)#java/util/Map/get(java.lang.Object)
org/jgrapht/alg/cycle/JohnsonSimpleCycles/getSCCs(int,int)#java/util/Iterator/next()
org/jgrapht/alg/cycle/JohnsonSimpleCycles/getSCCs(int,int)#java/util/Set/contains(java.lang.Object)
org/jgrapht/alg/cycle/JohnsonSimpleCycles/getSCCs(int,int)#java/util/Set/iterator()
org/jgrapht/alg/cycle/JohnsonSimpleCycles/getSCCs(int,int)#java/util/Map/containsKey(java.lang.Object)
org/jgrapht/alg/cycle/JohnsonSimpleCycles/getSCCs(int,int)#org/jgrapht/DirectedGraph/getEdgeTarget(java.lang.Object)
org/jgrapht/alg/cycle/JohnsonSimpleCycles/getSCCs(int,int)#java/lang/Math/min(int,int)
org/jgrapht/alg/cycle/JohnsonSimpleCycles/getSCCs(int,int)#java/util/HashSet/HashSet()
org/jgrapht/alg/cycle/JohnsonSimpleCycles/getSCCs(int,int)#java/util/Set/add(java.lang.Object)
org/jgrapht/alg/cycle/JohnsonSimpleCycles/getSCCs(int,int)#java/util/Set/size()
org/jgrapht/alg/cycle/JohnsonSimpleCycles/getSCCs(int,int)#java/util/ArrayDeque/push(java.lang.Object)
org/jgrapht/alg/cycle/JohnsonSimpleCycles/getSCCs(int,int)#java/lang/Integer/equals(java.lang.Object)
org/jgrapht/alg/cycle/JohnsonSimpleCycles/getSCCs(int,int)#org/jgrapht/DirectedGraph/containsEdge(java.lang.Object,java.lang.Object)
org/jgrapht/alg/cycle/JohnsonSimpleCycles/getSCCs(int,int)#java/util/List/add(java.lang.Object)
org/jgrapht/alg/cycle/JohnsonSimpleCycles/getSCCs(int,int)#java/lang/Integer/valueOf(int)
org/jgrapht/alg/cycle/JohnsonSimpleCycles/getSCCs(int,int)#java/util/Set/remove(java.lang.Object)
org/jgrapht/alg/cycle/JohnsonSimpleCycles/findSimpleCycles()#java/lang/Integer/intValue()
org/jgrapht/alg/cycle/JohnsonSimpleCycles/findSimpleCycles()#java/util/Iterator/hasNext()
org/jgrapht/alg/cycle/JohnsonSimpleCycles/findSimpleCycles()#org/jgrapht/DirectedGraph/vertexSet()
org/jgrapht/alg/cycle/JohnsonSimpleCycles/findSimpleCycles()#java/util/Set/size()
org/jgrapht/alg/cycle/JohnsonSimpleCycles/findSimpleCycles()#java/util/Set/iterator()
org/jgrapht/alg/cycle/JohnsonSimpleCycles/findSimpleCycles()#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/jgrapht/alg/cycle/JohnsonSimpleCycles/findSimpleCycles()#org/jgrapht/DirectedGraph/getEdgeTarget(java.lang.Object)
org/jgrapht/alg/cycle/JohnsonSimpleCycles/findSimpleCycles()#java/util/Set/clear()
org/jgrapht/alg/cycle/JohnsonSimpleCycles/findSimpleCycles()#java/util/Iterator/next()
org/jgrapht/alg/cycle/JohnsonSimpleCycles/findSimpleCycles()#java/lang/Integer/valueOf(int)
org/jgrapht/alg/cycle/JohnsonSimpleCycles/findSimpleCycles()#java/util/Set/remove(java.lang.Object)
org/jgrapht/alg/cycle/JohnsonSimpleCycles/findCyclesInSCG(int,int,org.jgrapht.DirectedGraph)#java/lang/Integer/intValue()
org/jgrapht/alg/cycle/JohnsonSimpleCycles/findCyclesInSCG(int,int,org.jgrapht.DirectedGraph)#java/util/ArrayList/ArrayList()
org/jgrapht/alg/cycle/JohnsonSimpleCycles/findCyclesInSCG(int,int,org.jgrapht.DirectedGraph)#java/util/ArrayDeque/pop()
org/jgrapht/alg/cycle/JohnsonSimpleCycles/findCyclesInSCG(int,int,org.jgrapht.DirectedGraph)#java/util/Iterator/hasNext()
org/jgrapht/alg/cycle/JohnsonSimpleCycles/findCyclesInSCG(int,int,org.jgrapht.DirectedGraph)#java/util/ArrayDeque/push(java.lang.Object)
org/jgrapht/alg/cycle/JohnsonSimpleCycles/findCyclesInSCG(int,int,org.jgrapht.DirectedGraph)#java/util/List/addAll(java.util.Collection)
org/jgrapht/alg/cycle/JohnsonSimpleCycles/findCyclesInSCG(int,int,org.jgrapht.DirectedGraph)#java/util/Set/contains(java.lang.Object)
org/jgrapht/alg/cycle/JohnsonSimpleCycles/findCyclesInSCG(int,int,org.jgrapht.DirectedGraph)#java/util/Set/iterator()
org/jgrapht/alg/cycle/JohnsonSimpleCycles/findCyclesInSCG(int,int,org.jgrapht.DirectedGraph)#java/lang/Integer/valueOf(int)
org/jgrapht/alg/cycle/JohnsonSimpleCycles/findCyclesInSCG(int,int,org.jgrapht.DirectedGraph)#org/jgrapht/DirectedGraph/getEdgeTarget(java.lang.Object)
org/jgrapht/alg/cycle/JohnsonSimpleCycles/findCyclesInSCG(int,int,org.jgrapht.DirectedGraph)#java/util/Set/add(java.lang.Object)
org/jgrapht/alg/cycle/JohnsonSimpleCycles/findCyclesInSCG(int,int,org.jgrapht.DirectedGraph)#java/util/Iterator/next()
org/jgrapht/alg/cycle/JohnsonSimpleCycles/findCyclesInSCG(int,int,org.jgrapht.DirectedGraph)#java/util/List/add(java.lang.Object)
org/jgrapht/alg/cycle/JohnsonSimpleCycles/findMinSCSG(int)#java/lang/Integer/intValue()
org/jgrapht/alg/cycle/JohnsonSimpleCycles/findMinSCSG(int)#java/util/Iterator/hasNext()
org/jgrapht/alg/cycle/JohnsonSimpleCycles/findMinSCSG(int)#java/util/Iterator/next()
org/jgrapht/alg/cycle/JohnsonSimpleCycles/findMinSCSG(int)#org/jgrapht/DirectedGraph/containsEdge(java.lang.Object,java.lang.Object)
org/jgrapht/alg/cycle/JohnsonSimpleCycles/findMinSCSG(int)#org/jgrapht/DirectedGraph/addEdge(java.lang.Object,java.lang.Object)
org/jgrapht/alg/cycle/JohnsonSimpleCycles/findMinSCSG(int)#java/lang/Integer/valueOf(int)
org/jgrapht/alg/cycle/JohnsonSimpleCycles/findMinSCSG(int)#java/util/Set/iterator()
org/jgrapht/alg/cycle/JohnsonSimpleCycles/findMinSCSG(int)#java/util/List/iterator()
org/jgrapht/alg/cycle/JohnsonSimpleCycles/findMinSCSG(int)#org/jgrapht/DirectedGraph/addVertex(java.lang.Object)
org/jgrapht/graph/AbstractGraph/toStringFromSets(java.util.Collection,java.util.Collection,boolean)#java/util/ArrayList/ArrayList()
org/jgrapht/graph/AbstractGraph/toStringFromSets(java.util.Collection,java.util.Collection,boolean)#java/lang/Object/toString()
org/jgrapht/graph/AbstractGraph/toStringFromSets(java.util.Collection,java.util.Collection,boolean)#java/util/Iterator/hasNext()
org/jgrapht/graph/AbstractGraph/toStringFromSets(java.util.Collection,java.util.Collection,boolean)#java/lang/StringBuilder/append(java.lang.String)
org/jgrapht/graph/AbstractGraph/toStringFromSets(java.util.Collection,java.util.Collection,boolean)#org/jgrapht/graph/AbstractGraph/getEdgeSource(java.lang.Object)
org/jgrapht/graph/AbstractGraph/toStringFromSets(java.util.Collection,java.util.Collection,boolean)#java/lang/StringBuffer/append(java.lang.Object)
org/jgrapht/graph/AbstractGraph/toStringFromSets(java.util.Collection,java.util.Collection,boolean)#java/util/Iterator/next()
org/jgrapht/graph/AbstractGraph/toStringFromSets(java.util.Collection,java.util.Collection,boolean)#java/lang/StringBuffer/toString()
org/jgrapht/graph/AbstractGraph/toStringFromSets(java.util.Collection,java.util.Collection,boolean)#java/lang/StringBuilder/StringBuilder()
org/jgrapht/graph/AbstractGraph/toStringFromSets(java.util.Collection,java.util.Collection,boolean)#java/util/List/add(java.lang.Object)
org/jgrapht/graph/AbstractGraph/toStringFromSets(java.util.Collection,java.util.Collection,boolean)#java/lang/StringBuffer/StringBuffer()
org/jgrapht/graph/AbstractGraph/toStringFromSets(java.util.Collection,java.util.Collection,boolean)#java/lang/StringBuilder/append(java.lang.Object)
org/jgrapht/graph/AbstractGraph/toStringFromSets(java.util.Collection,java.util.Collection,boolean)#java/lang/Object/getClass()
org/jgrapht/graph/AbstractGraph/toStringFromSets(java.util.Collection,java.util.Collection,boolean)#java/util/Collection/iterator()
org/jgrapht/graph/AbstractGraph/toStringFromSets(java.util.Collection,java.util.Collection,boolean)#java/lang/StringBuffer/append(java.lang.String)
org/jgrapht/graph/AbstractGraph/toStringFromSets(java.util.Collection,java.util.Collection,boolean)#java/lang/StringBuilder/toString()
org/jgrapht/graph/AbstractGraph/toStringFromSets(java.util.Collection,java.util.Collection,boolean)#org/jgrapht/graph/AbstractGraph/getEdgeTarget(java.lang.Object)
org/jgrapht/graph/AbstractGraph/toStringFromSets(java.util.Collection,java.util.Collection,boolean)#java/lang/StringBuffer/setLength(int)
org/jgrapht/graph/AbstractGraph/hashCode()#java/util/Set/hashCode()
org/jgrapht/graph/AbstractGraph/hashCode()#org/jgrapht/graph/AbstractGraph/getEdgeSource(java.lang.Object)
org/jgrapht/graph/AbstractGraph/hashCode()#org/jgrapht/graph/AbstractGraph/vertexSet()
org/jgrapht/graph/AbstractGraph/hashCode()#java/util/Iterator/next()
org/jgrapht/graph/AbstractGraph/hashCode()#java/util/Set/iterator()
org/jgrapht/graph/AbstractGraph/hashCode()#org/jgrapht/graph/AbstractGraph/getEdgeTarget(java.lang.Object)
org/jgrapht/graph/AbstractGraph/hashCode()#java/util/Iterator/hasNext()
org/jgrapht/graph/AbstractGraph/hashCode()#org/jgrapht/graph/AbstractGraph/getEdgeWeight(java.lang.Object)
org/jgrapht/graph/AbstractGraph/hashCode()#org/jgrapht/graph/AbstractGraph/edgeSet()
org/jgrapht/graph/AbstractGraph/hashCode()#java/lang/Object/hashCode()
org/jgrapht/graph/AbstractGraph/equals(java.lang.Object)#java/lang/Object/equals(java.lang.Object)
org/jgrapht/graph/AbstractGraph/equals(java.lang.Object)#java/util/Iterator/next()
org/jgrapht/graph/AbstractGraph/equals(java.lang.Object)#java/util/Set/iterator()
org/jgrapht/graph/AbstractGraph/equals(java.lang.Object)#java/lang/Object/getClass()
org/jgrapht/graph/AbstractGraph/equals(java.lang.Object)#org/jgrapht/graph/AbstractGraph/getEdgeTarget(java.lang.Object)
org/jgrapht/graph/AbstractGraph/equals(java.lang.Object)#java/util/Iterator/hasNext()
org/jgrapht/graph/AbstractGraph/equals(java.lang.Object)#org/jgrapht/graph/AbstractGraph/getEdgeWeight(java.lang.Object)
org/jgrapht/graph/AbstractGraph/equals(java.lang.Object)#java/util/Set/size()
org/jgrapht/graph/AbstractGraph/equals(java.lang.Object)#java/lang/Math/abs(double)
org/jgrapht/graph/AbstractGraph/equals(java.lang.Object)#org/jgrapht/graph/AbstractGraph/getEdgeSource(java.lang.Object)
org/jgrapht/graph/AbstractGraph/equals(java.lang.Object)#org/jgrapht/graph/AbstractGraph/vertexSet()
org/jgrapht/graph/AbstractGraph/equals(java.lang.Object)#java/util/Set/equals(java.lang.Object)
org/jgrapht/graph/AbstractGraph/equals(java.lang.Object)#org/jgrapht/graph/AbstractGraph/edgeSet()
org/jgrapht/alg/ChromaticNumber/findGreedyColoredGroups(org.jgrapht.UndirectedGraph)#java/util/Iterator/remove()
org/jgrapht/alg/ChromaticNumber/findGreedyColoredGroups(org.jgrapht.UndirectedGraph)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/jgrapht/alg/ChromaticNumber/findGreedyColoredGroups(org.jgrapht.UndirectedGraph)#org/jgrapht/UndirectedGraph/vertexSet()
org/jgrapht/alg/ChromaticNumber/findGreedyColoredGroups(org.jgrapht.UndirectedGraph)#java/util/LinkedList/LinkedList(java.util.Collection)
org/jgrapht/alg/ChromaticNumber/findGreedyColoredGroups(org.jgrapht.UndirectedGraph)#java/util/Set/iterator()
org/jgrapht/alg/ChromaticNumber/findGreedyColoredGroups(org.jgrapht.UndirectedGraph)#java/util/List/iterator()
org/jgrapht/alg/ChromaticNumber/findGreedyColoredGroups(org.jgrapht.UndirectedGraph)#java/util/Set/add(java.lang.Object)
org/jgrapht/alg/ChromaticNumber/findGreedyColoredGroups(org.jgrapht.UndirectedGraph)#java/util/Iterator/hasNext()
org/jgrapht/alg/ChromaticNumber/findGreedyColoredGroups(org.jgrapht.UndirectedGraph)#java/util/Collections/reverse(java.util.List)
org/jgrapht/alg/ChromaticNumber/findGreedyColoredGroups(org.jgrapht.UndirectedGraph)#java/util/Set/size()
org/jgrapht/alg/ChromaticNumber/findGreedyColoredGroups(org.jgrapht.UndirectedGraph)#org/jgrapht/UndirectedGraph/removeAllVertices(java.util.Collection)
org/jgrapht/alg/ChromaticNumber/findGreedyColoredGroups(org.jgrapht.UndirectedGraph)#java/util/Iterator/next()
org/jgrapht/alg/ChromaticNumber/findGreedyColoredGroups(org.jgrapht.UndirectedGraph)#java/util/Collections/sort(java.util.List,java.util.Comparator)
org/jgrapht/alg/ChromaticNumber/findGreedyColoredGroups(org.jgrapht.UndirectedGraph)#java/util/HashMap/HashMap()
org/jgrapht/alg/ChromaticNumber/findGreedyColoredGroups(org.jgrapht.UndirectedGraph)#org/jgrapht/UndirectedGraph/containsEdge(java.lang.Object,java.lang.Object)
org/jgrapht/alg/ChromaticNumber/findGreedyColoredGroups(org.jgrapht.UndirectedGraph)#java/lang/Integer/valueOf(int)
org/jgrapht/alg/ChromaticNumber/findGreedyColoredGroups(org.jgrapht.UndirectedGraph)#java/util/HashSet/HashSet()
org/jgrapht/alg/BronKerboschCliqueFinder/findCliques(java.util.List,java.util.List,java.util.List)#java/util/ArrayList/ArrayList()
org/jgrapht/alg/BronKerboschCliqueFinder/findCliques(java.util.List,java.util.List,java.util.List)#java/util/ArrayList/ArrayList(java.util.Collection)
org/jgrapht/alg/BronKerboschCliqueFinder/findCliques(java.util.List,java.util.List,java.util.List)#java/util/Iterator/hasNext()
org/jgrapht/alg/BronKerboschCliqueFinder/findCliques(java.util.List,java.util.List,java.util.List)#java/util/Iterator/next()
org/jgrapht/alg/BronKerboschCliqueFinder/findCliques(java.util.List,java.util.List,java.util.List)#java/util/List/iterator()
org/jgrapht/alg/BronKerboschCliqueFinder/findCliques(java.util.List,java.util.List,java.util.List)#java/util/List/isEmpty()
org/jgrapht/alg/BronKerboschCliqueFinder/findCliques(java.util.List,java.util.List,java.util.List)#java/util/List/add(java.lang.Object)
org/jgrapht/alg/BronKerboschCliqueFinder/findCliques(java.util.List,java.util.List,java.util.List)#java/util/Collection/add(java.lang.Object)
org/jgrapht/alg/BronKerboschCliqueFinder/findCliques(java.util.List,java.util.List,java.util.List)#java/util/List/remove(java.lang.Object)
org/jgrapht/alg/BronKerboschCliqueFinder/findCliques(java.util.List,java.util.List,java.util.List)#java/util/HashSet/HashSet(java.util.Collection)
org/jgrapht/graph/ParanoidGraph/verifyAdd(java.util.Set,java.lang.Object)#java/lang/Object/equals(java.lang.Object)
org/jgrapht/graph/ParanoidGraph/verifyAdd(java.util.Set,java.lang.Object)#java/util/Iterator/hasNext()
org/jgrapht/graph/ParanoidGraph/verifyAdd(java.util.Set,java.lang.Object)#java/lang/StringBuilder/append(java.lang.String)
org/jgrapht/graph/ParanoidGraph/verifyAdd(java.util.Set,java.lang.Object)#java/lang/StringBuilder/append(int)
org/jgrapht/graph/ParanoidGraph/verifyAdd(java.util.Set,java.lang.Object)#java/util/Iterator/next()
org/jgrapht/graph/ParanoidGraph/verifyAdd(java.util.Set,java.lang.Object)#java/lang/Object/hashCode()
org/jgrapht/graph/ParanoidGraph/verifyAdd(java.util.Set,java.lang.Object)#java/lang/StringBuilder/StringBuilder()
org/jgrapht/graph/ParanoidGraph/verifyAdd(java.util.Set,java.lang.Object)#java/util/Set/iterator()
org/jgrapht/graph/ParanoidGraph/verifyAdd(java.util.Set,java.lang.Object)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/jgrapht/graph/ParanoidGraph/verifyAdd(java.util.Set,java.lang.Object)#java/lang/StringBuilder/toString()
org/jgrapht/alg/HopcroftKarpBipartiteMatching/greedyMatch()#java/util/HashSet/contains(java.lang.Object)
org/jgrapht/alg/HopcroftKarpBipartiteMatching/greedyMatch()#java/util/Iterator/hasNext()
org/jgrapht/alg/HopcroftKarpBipartiteMatching/greedyMatch()#java/util/HashSet/add(java.lang.Object)
org/jgrapht/alg/HopcroftKarpBipartiteMatching/greedyMatch()#java/util/Iterator/next()
org/jgrapht/alg/HopcroftKarpBipartiteMatching/greedyMatch()#java/util/Set/iterator()
org/jgrapht/alg/HopcroftKarpBipartiteMatching/greedyMatch()#org/jgrapht/UndirectedGraph/getEdge(java.lang.Object,java.lang.Object)
org/jgrapht/alg/HopcroftKarpBipartiteMatching/greedyMatch()#java/util/Set/remove(java.lang.Object)
org/jgrapht/alg/HopcroftKarpBipartiteMatching/greedyMatch()#java/util/List/iterator()
org/jgrapht/alg/HopcroftKarpBipartiteMatching/greedyMatch()#java/util/HashSet/HashSet()
org/jgrapht/alg/HopcroftKarpBipartiteMatching/greedyMatch()#java/util/Set/add(java.lang.Object)
org/jgrapht/alg/HopcroftKarpBipartiteMatching/getAugmentingPaths()#java/util/Iterator/hasNext()
org/jgrapht/alg/HopcroftKarpBipartiteMatching/getAugmentingPaths()#java/util/Set/size()
org/jgrapht/alg/HopcroftKarpBipartiteMatching/getAugmentingPaths()#java/util/Map/get(java.lang.Object)
org/jgrapht/alg/HopcroftKarpBipartiteMatching/getAugmentingPaths()#java/util/Set/retainAll(java.util.Collection)
org/jgrapht/alg/HopcroftKarpBipartiteMatching/getAugmentingPaths()#java/util/Set/contains(java.lang.Object)
org/jgrapht/alg/HopcroftKarpBipartiteMatching/getAugmentingPaths()#java/util/Set/iterator()
org/jgrapht/alg/HopcroftKarpBipartiteMatching/getAugmentingPaths()#java/util/Map/containsKey(java.lang.Object)
org/jgrapht/alg/HopcroftKarpBipartiteMatching/getAugmentingPaths()#java/util/List/iterator()
org/jgrapht/alg/HopcroftKarpBipartiteMatching/getAugmentingPaths()#java/util/HashSet/HashSet()
org/jgrapht/alg/HopcroftKarpBipartiteMatching/getAugmentingPaths()#java/util/Set/add(java.lang.Object)
org/jgrapht/alg/HopcroftKarpBipartiteMatching/getAugmentingPaths()#java/util/LinkedList/iterator()
org/jgrapht/alg/HopcroftKarpBipartiteMatching/getAugmentingPaths()#java/util/Map/put(java.lang.Object,java.lang.Object)
org/jgrapht/alg/HopcroftKarpBipartiteMatching/getAugmentingPaths()#java/util/ArrayList/ArrayList()
org/jgrapht/alg/HopcroftKarpBipartiteMatching/getAugmentingPaths()#java/util/Set/addAll(java.util.Collection)
org/jgrapht/alg/HopcroftKarpBipartiteMatching/getAugmentingPaths()#java/util/Iterator/next()
org/jgrapht/alg/HopcroftKarpBipartiteMatching/getAugmentingPaths()#java/util/HashMap/HashMap()
org/jgrapht/alg/HopcroftKarpBipartiteMatching/getAugmentingPaths()#java/util/List/add(java.lang.Object)
org/jgrapht/alg/HopcroftKarpBipartiteMatching/getAugmentingPaths()#org/jgrapht/UndirectedGraph/getEdge(java.lang.Object,java.lang.Object)
org/jgrapht/alg/HopcroftKarpBipartiteMatching/getAugmentingPaths()#java/util/HashSet/HashSet(java.util.Collection)
org/jgrapht/alg/HopcroftKarpBipartiteMatching/getAugmentingPaths()#java/util/Map/remove(java.lang.Object)
org/jgrapht/alg/HopcroftKarpBipartiteMatching/maxMatching()#java/util/Iterator/remove()
org/jgrapht/alg/HopcroftKarpBipartiteMatching/maxMatching()#java/util/Iterator/hasNext()
org/jgrapht/alg/HopcroftKarpBipartiteMatching/maxMatching()#java/util/List/isEmpty()
org/jgrapht/alg/HopcroftKarpBipartiteMatching/maxMatching()#java/util/List/addAll(java.util.Collection)
org/jgrapht/alg/HopcroftKarpBipartiteMatching/maxMatching()#java/util/Iterator/next()
org/jgrapht/alg/HopcroftKarpBipartiteMatching/maxMatching()#java/util/Set/remove(java.lang.Object)
org/jgrapht/alg/HopcroftKarpBipartiteMatching/maxMatching()#java/util/List/iterator()
org/jgrapht/alg/HopcroftKarpBipartiteMatching/maxMatching()#java/util/LinkedList/getLast()
org/jgrapht/alg/HopcroftKarpBipartiteMatching/maxMatching()#java/util/LinkedList/getFirst()
org/jgrapht/alg/CliqueMinimalSeparatorDecomposition/computeMinimalTriangulation()#java/util/HashSet/iterator()
org/jgrapht/alg/CliqueMinimalSeparatorDecomposition/computeMinimalTriangulation()#java/util/HashSet/add(java.lang.Object)
org/jgrapht/alg/CliqueMinimalSeparatorDecomposition/computeMinimalTriangulation()#java/util/LinkedList/LinkedList()
org/jgrapht/alg/CliqueMinimalSeparatorDecomposition/computeMinimalTriangulation()#java/util/LinkedList/LinkedList(java.util.Collection)
org/jgrapht/alg/CliqueMinimalSeparatorDecomposition/computeMinimalTriangulation()#java/util/Set/iterator()
org/jgrapht/alg/CliqueMinimalSeparatorDecomposition/computeMinimalTriangulation()#java/util/HashSet/size()
org/jgrapht/alg/CliqueMinimalSeparatorDecomposition/computeMinimalTriangulation()#java/util/List/add(java.lang.Object)
org/jgrapht/alg/CliqueMinimalSeparatorDecomposition/computeMinimalTriangulation()#java/util/HashSet/HashSet()
org/jgrapht/alg/CliqueMinimalSeparatorDecomposition/computeMinimalTriangulation()#java/util/HashSet/contains(java.lang.Object)
org/jgrapht/alg/CliqueMinimalSeparatorDecomposition/computeMinimalTriangulation()#java/lang/Integer/intValue()
org/jgrapht/alg/CliqueMinimalSeparatorDecomposition/computeMinimalTriangulation()#java/util/LinkedList/iterator()
org/jgrapht/alg/CliqueMinimalSeparatorDecomposition/computeMinimalTriangulation()#org/jgrapht/UndirectedGraph/addVertex(java.lang.Object)
org/jgrapht/alg/CliqueMinimalSeparatorDecomposition/computeMinimalTriangulation()#java/util/Map/put(java.lang.Object,java.lang.Object)
org/jgrapht/alg/CliqueMinimalSeparatorDecomposition/computeMinimalTriangulation()#java/util/ArrayList/ArrayList()
org/jgrapht/alg/CliqueMinimalSeparatorDecomposition/computeMinimalTriangulation()#java/util/Iterator/hasNext()
org/jgrapht/alg/CliqueMinimalSeparatorDecomposition/computeMinimalTriangulation()#java/util/HashSet/remove(java.lang.Object)
org/jgrapht/alg/CliqueMinimalSeparatorDecomposition/computeMinimalTriangulation()#java/util/LinkedList/addLast(java.lang.Object)
org/jgrapht/alg/CliqueMinimalSeparatorDecomposition/computeMinimalTriangulation()#java/util/Set/size()
org/jgrapht/alg/CliqueMinimalSeparatorDecomposition/computeMinimalTriangulation()#java/util/HashMap/containsKey(java.lang.Object)
org/jgrapht/alg/CliqueMinimalSeparatorDecomposition/computeMinimalTriangulation()#org/jgrapht/UndirectedGraph/addEdge(java.lang.Object,java.lang.Object)
org/jgrapht/alg/CliqueMinimalSeparatorDecomposition/computeMinimalTriangulation()#java/util/Map/get(java.lang.Object)
org/jgrapht/alg/CliqueMinimalSeparatorDecomposition/computeMinimalTriangulation()#org/jgrapht/UndirectedGraph/vertexSet()
org/jgrapht/alg/CliqueMinimalSeparatorDecomposition/computeMinimalTriangulation()#java/util/Iterator/next()
org/jgrapht/alg/CliqueMinimalSeparatorDecomposition/computeMinimalTriangulation()#java/util/HashMap/HashMap()
org/jgrapht/alg/CliqueMinimalSeparatorDecomposition/computeMinimalTriangulation()#java/util/LinkedList/add(java.lang.Object)
org/jgrapht/alg/CliqueMinimalSeparatorDecomposition/computeMinimalTriangulation()#java/lang/Integer/valueOf(int)
org/jgrapht/alg/CliqueMinimalSeparatorDecomposition/computeMinimalTriangulation()#java/util/List/iterator()
org/jgrapht/alg/CliqueMinimalSeparatorDecomposition/computeMinimalTriangulation()#org/jgrapht/UndirectedGraph/removeVertex(java.lang.Object)
org/jgrapht/alg/CliqueMinimalSeparatorDecomposition/computeMinimalTriangulation()#java/util/Set/add(java.lang.Object)
org/jgrapht/alg/CliqueMinimalSeparatorDecomposition/computeMinimalTriangulation()#org/jgrapht/UndirectedGraph/getEdgeFactory()
org/jgrapht/alg/CliqueMinimalSeparatorDecomposition/computeMinimalTriangulation()#java/util/HashMap/get(java.lang.Object)
org/jgrapht/alg/CliqueMinimalSeparatorDecomposition/computeMinimalTriangulation()#java/util/Map/remove(java.lang.Object)
org/jgrapht/alg/CliqueMinimalSeparatorDecomposition/computeAtoms()#java/lang/Integer/intValue()
org/jgrapht/alg/CliqueMinimalSeparatorDecomposition/computeAtoms()#java/util/Map/put(java.lang.Object,java.lang.Object)
org/jgrapht/alg/CliqueMinimalSeparatorDecomposition/computeAtoms()#java/util/Iterator/hasNext()
org/jgrapht/alg/CliqueMinimalSeparatorDecomposition/computeAtoms()#java/util/Set/addAll(java.util.Collection)
org/jgrapht/alg/CliqueMinimalSeparatorDecomposition/computeAtoms()#java/util/Map/get(java.lang.Object)
org/jgrapht/alg/CliqueMinimalSeparatorDecomposition/computeAtoms()#org/jgrapht/UndirectedGraph/vertexSet()
org/jgrapht/alg/CliqueMinimalSeparatorDecomposition/computeAtoms()#java/util/Iterator/next()
org/jgrapht/alg/CliqueMinimalSeparatorDecomposition/computeAtoms()#java/util/Set/contains(java.lang.Object)
org/jgrapht/alg/CliqueMinimalSeparatorDecomposition/computeAtoms()#java/util/LinkedList/descendingIterator()
org/jgrapht/alg/CliqueMinimalSeparatorDecomposition/computeAtoms()#java/util/HashSet/HashSet()
org/jgrapht/alg/CliqueMinimalSeparatorDecomposition/computeAtoms()#java/util/Set/add(java.lang.Object)
org/jgrapht/alg/CliqueMinimalSeparatorDecomposition/computeAtoms()#java/util/Set/size()
org/jgrapht/alg/CliqueMinimalSeparatorDecomposition/computeAtoms()#org/jgrapht/UndirectedGraph/removeAllVertices(java.util.Collection)
org/jgrapht/alg/CliqueMinimalSeparatorDecomposition/computeAtoms()#java/lang/Integer/valueOf(int)
org/jgrapht/alg/CliqueMinimalSeparatorDecomposition/computeAtoms()#java/util/List/contains(java.lang.Object)
org/jgrapht/alg/CliqueMinimalSeparatorDecomposition/computeAtoms()#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/jgrapht/alg/CliqueMinimalSeparatorDecomposition/computeAtoms()#java/util/List/iterator()
org/jgrapht/alg/CliqueMinimalSeparatorDecomposition/computeAtoms()#org/jgrapht/UndirectedGraph/removeVertex(java.lang.Object)
org/jgrapht/alg/CliqueMinimalSeparatorDecomposition/computeAtoms()#java/lang/AssertionError/AssertionError()
org/jgrapht/alg/CliqueMinimalSeparatorDecomposition/computeAtoms()#java/util/HashSet/HashSet(java.util.Collection)
org/jgrapht/alg/CliqueMinimalSeparatorDecomposition/copyAsSimpleGraph(org.jgrapht.UndirectedGraph)#org/jgrapht/UndirectedGraph/getEdgeTarget(java.lang.Object)
org/jgrapht/alg/CliqueMinimalSeparatorDecomposition/copyAsSimpleGraph(org.jgrapht.UndirectedGraph)#java/util/Iterator/hasNext()
org/jgrapht/alg/CliqueMinimalSeparatorDecomposition/copyAsSimpleGraph(org.jgrapht.UndirectedGraph)#org/jgrapht/UndirectedGraph/getEdgeSource(java.lang.Object)
org/jgrapht/alg/CliqueMinimalSeparatorDecomposition/copyAsSimpleGraph(org.jgrapht.UndirectedGraph)#org/jgrapht/UndirectedGraph/addEdge(java.lang.Object,java.lang.Object)
org/jgrapht/alg/CliqueMinimalSeparatorDecomposition/copyAsSimpleGraph(org.jgrapht.UndirectedGraph)#org/jgrapht/UndirectedGraph/containsEdge(java.lang.Object)
org/jgrapht/alg/CliqueMinimalSeparatorDecomposition/copyAsSimpleGraph(org.jgrapht.UndirectedGraph)#java/util/Iterator/next()
org/jgrapht/alg/CliqueMinimalSeparatorDecomposition/copyAsSimpleGraph(org.jgrapht.UndirectedGraph)#org/jgrapht/UndirectedGraph/vertexSet()
org/jgrapht/alg/CliqueMinimalSeparatorDecomposition/copyAsSimpleGraph(org.jgrapht.UndirectedGraph)#org/jgrapht/UndirectedGraph/edgeSet()
org/jgrapht/alg/CliqueMinimalSeparatorDecomposition/copyAsSimpleGraph(org.jgrapht.UndirectedGraph)#java/util/Set/iterator()
org/jgrapht/alg/CliqueMinimalSeparatorDecomposition/copyAsSimpleGraph(org.jgrapht.UndirectedGraph)#org/jgrapht/UndirectedGraph/getEdgeFactory()
org/jgrapht/alg/HamiltonianCycle/getApproximateOptimalForCompleteGraph(org.jgrapht.graph.SimpleWeightedGraph)#org/jgrapht/graph/SimpleWeightedGraph/getEdge(java.lang.Object,java.lang.Object)
org/jgrapht/alg/HamiltonianCycle/getApproximateOptimalForCompleteGraph(org.jgrapht.graph.SimpleWeightedGraph)#org/jgrapht/graph/SimpleWeightedGraph/vertexSet()
org/jgrapht/alg/HamiltonianCycle/getApproximateOptimalForCompleteGraph(org.jgrapht.graph.SimpleWeightedGraph)#java/util/List/remove(int)
org/jgrapht/alg/HamiltonianCycle/getApproximateOptimalForCompleteGraph(org.jgrapht.graph.SimpleWeightedGraph)#java/util/Set/size()
org/jgrapht/alg/HamiltonianCycle/getApproximateOptimalForCompleteGraph(org.jgrapht.graph.SimpleWeightedGraph)#org/jgrapht/graph/SimpleWeightedGraph/edgeSet()
org/jgrapht/alg/HamiltonianCycle/getApproximateOptimalForCompleteGraph(org.jgrapht.graph.SimpleWeightedGraph)#java/util/List/size()
org/jgrapht/alg/HamiltonianCycle/getApproximateOptimalForCompleteGraph(org.jgrapht.graph.SimpleWeightedGraph)#java/util/LinkedList/LinkedList()
org/jgrapht/alg/HamiltonianCycle/getApproximateOptimalForCompleteGraph(org.jgrapht.graph.SimpleWeightedGraph)#java/util/LinkedList/LinkedList(java.util.Collection)
org/jgrapht/alg/HamiltonianCycle/getApproximateOptimalForCompleteGraph(org.jgrapht.graph.SimpleWeightedGraph)#java/util/List/get(int)
org/jgrapht/alg/HamiltonianCycle/getApproximateOptimalForCompleteGraph(org.jgrapht.graph.SimpleWeightedGraph)#java/util/List/add(int,java.lang.Object)
org/jgrapht/alg/HamiltonianCycle/getApproximateOptimalForCompleteGraph(org.jgrapht.graph.SimpleWeightedGraph)#org/jgrapht/graph/SimpleWeightedGraph/getEdgeWeight(java.lang.Object)
org/jgrapht/generate/ScaleFreeGraphGenerator/generateGraph(org.jgrapht.Graph,org.jgrapht.VertexFactory,java.util.Map)#java/lang/Integer/intValue()
org/jgrapht/generate/ScaleFreeGraphGenerator/generateGraph(org.jgrapht.Graph,org.jgrapht.VertexFactory,java.util.Map)#java/util/ArrayList/ArrayList()
org/jgrapht/generate/ScaleFreeGraphGenerator/generateGraph(org.jgrapht.Graph,org.jgrapht.VertexFactory,java.util.Map)#java/util/Random/setSeed(long)
org/jgrapht/generate/ScaleFreeGraphGenerator/generateGraph(org.jgrapht.Graph,org.jgrapht.VertexFactory,java.util.Map)#java/util/List/size()
org/jgrapht/generate/ScaleFreeGraphGenerator/generateGraph(org.jgrapht.Graph,org.jgrapht.VertexFactory,java.util.Map)#java/util/List/add(java.lang.Object)
org/jgrapht/generate/ScaleFreeGraphGenerator/generateGraph(org.jgrapht.Graph,org.jgrapht.VertexFactory,java.util.Map)#java/util/List/set(int,java.lang.Object)
org/jgrapht/generate/ScaleFreeGraphGenerator/generateGraph(org.jgrapht.Graph,org.jgrapht.VertexFactory,java.util.Map)#java/util/Random/nextInt(int)
org/jgrapht/generate/ScaleFreeGraphGenerator/generateGraph(org.jgrapht.Graph,org.jgrapht.VertexFactory,java.util.Map)#java/lang/Integer/valueOf(int)
org/jgrapht/generate/ScaleFreeGraphGenerator/generateGraph(org.jgrapht.Graph,org.jgrapht.VertexFactory,java.util.Map)#java/util/List/get(int)
org/jgrapht/generate/SimpleWeightedBipartiteGraphMatrixGenerator/generateGraph(org.jgrapht.WeightedGraph,org.jgrapht.VertexFactory,java.util.Map)#org/jgrapht/WeightedGraph/addEdge(java.lang.Object,java.lang.Object)
org/jgrapht/generate/SimpleWeightedBipartiteGraphMatrixGenerator/generateGraph(org.jgrapht.WeightedGraph,org.jgrapht.VertexFactory,java.util.Map)#java/util/Iterator/hasNext()
org/jgrapht/generate/SimpleWeightedBipartiteGraphMatrixGenerator/generateGraph(org.jgrapht.WeightedGraph,org.jgrapht.VertexFactory,java.util.Map)#org/jgrapht/WeightedGraph/addVertex(java.lang.Object)
org/jgrapht/generate/SimpleWeightedBipartiteGraphMatrixGenerator/generateGraph(org.jgrapht.WeightedGraph,org.jgrapht.VertexFactory,java.util.Map)#java/util/List/size()
org/jgrapht/generate/SimpleWeightedBipartiteGraphMatrixGenerator/generateGraph(org.jgrapht.WeightedGraph,org.jgrapht.VertexFactory,java.util.Map)#java/util/Iterator/next()
org/jgrapht/generate/SimpleWeightedBipartiteGraphMatrixGenerator/generateGraph(org.jgrapht.WeightedGraph,org.jgrapht.VertexFactory,java.util.Map)#java/util/List/get(int)
org/jgrapht/generate/SimpleWeightedBipartiteGraphMatrixGenerator/generateGraph(org.jgrapht.WeightedGraph,org.jgrapht.VertexFactory,java.util.Map)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/jgrapht/generate/SimpleWeightedBipartiteGraphMatrixGenerator/generateGraph(org.jgrapht.WeightedGraph,org.jgrapht.VertexFactory,java.util.Map)#java/util/List/iterator()
org/jgrapht/generate/SimpleWeightedBipartiteGraphMatrixGenerator/generateGraph(org.jgrapht.WeightedGraph,org.jgrapht.VertexFactory,java.util.Map)#java/lang/AssertionError/AssertionError()
org/jgrapht/alg/StrongConnectivityInspector/stronglyConnectedSets()#java/util/LinkedList/iterator()
org/jgrapht/alg/StrongConnectivityInspector/stronglyConnectedSets()#java/util/Iterator/hasNext()
org/jgrapht/alg/StrongConnectivityInspector/stronglyConnectedSets()#java/util/List/add(java.lang.Object)
org/jgrapht/alg/StrongConnectivityInspector/stronglyConnectedSets()#java/util/Collection/iterator()
org/jgrapht/alg/StrongConnectivityInspector/stronglyConnectedSets()#java/util/HashSet/HashSet()
org/jgrapht/alg/StrongConnectivityInspector/stronglyConnectedSets()#java/util/Map/values()
org/jgrapht/alg/StrongConnectivityInspector/stronglyConnectedSets()#java/util/Iterator/next()
org/jgrapht/alg/StrongConnectivityInspector/stronglyConnectedSets()#org/jgrapht/alg/StrongConnectivityInspector$VertexData/access$000(org.jgrapht.alg.StrongConnectivityInspector$VertexData)
org/jgrapht/alg/StrongConnectivityInspector/stronglyConnectedSets()#java/util/Vector/Vector()
org/jgrapht/alg/StrongConnectivityInspector/stronglyConnectedSets()#java/util/LinkedList/LinkedList()
org/jgrapht/alg/StrongConnectivityInspector/dfsVisit(org.jgrapht.DirectedGraph,org.jgrapht.alg.StrongConnectivityInspector$VertexData,java.util.Set)#java/util/Iterator/hasNext()
org/jgrapht/alg/StrongConnectivityInspector/dfsVisit(org.jgrapht.DirectedGraph,org.jgrapht.alg.StrongConnectivityInspector$VertexData,java.util.Set)#org/jgrapht/alg/StrongConnectivityInspector$VertexData/getVertex()
org/jgrapht/alg/StrongConnectivityInspector/dfsVisit(org.jgrapht.DirectedGraph,org.jgrapht.alg.StrongConnectivityInspector$VertexData,java.util.Set)#java/util/Map/get(java.lang.Object)
org/jgrapht/alg/StrongConnectivityInspector/dfsVisit(org.jgrapht.DirectedGraph,org.jgrapht.alg.StrongConnectivityInspector$VertexData,java.util.Set)#java/util/Set/iterator()
org/jgrapht/alg/StrongConnectivityInspector/dfsVisit(org.jgrapht.DirectedGraph,org.jgrapht.alg.StrongConnectivityInspector$VertexData,java.util.Set)#org/jgrapht/alg/StrongConnectivityInspector$VertexData/access$400(org.jgrapht.alg.StrongConnectivityInspector$VertexData)
org/jgrapht/alg/StrongConnectivityInspector/dfsVisit(org.jgrapht.DirectedGraph,org.jgrapht.alg.StrongConnectivityInspector$VertexData,java.util.Set)#org/jgrapht/alg/StrongConnectivityInspector$VertexData/access$200(org.jgrapht.alg.StrongConnectivityInspector$VertexData,boolean)
org/jgrapht/alg/StrongConnectivityInspector/dfsVisit(org.jgrapht.DirectedGraph,org.jgrapht.alg.StrongConnectivityInspector$VertexData,java.util.Set)#org/jgrapht/DirectedGraph/getEdgeTarget(java.lang.Object)
org/jgrapht/alg/StrongConnectivityInspector/dfsVisit(org.jgrapht.DirectedGraph,org.jgrapht.alg.StrongConnectivityInspector$VertexData,java.util.Set)#java/util/Deque/add(java.lang.Object)
org/jgrapht/alg/StrongConnectivityInspector/dfsVisit(org.jgrapht.DirectedGraph,org.jgrapht.alg.StrongConnectivityInspector$VertexData,java.util.Set)#java/util/Set/add(java.lang.Object)
org/jgrapht/alg/StrongConnectivityInspector/dfsVisit(org.jgrapht.DirectedGraph,org.jgrapht.alg.StrongConnectivityInspector$VertexData,java.util.Set)#java/util/Deque/removeLast()
org/jgrapht/alg/StrongConnectivityInspector/dfsVisit(org.jgrapht.DirectedGraph,org.jgrapht.alg.StrongConnectivityInspector$VertexData,java.util.Set)#org/jgrapht/alg/StrongConnectivityInspector$VertexData/getFinishedData()
org/jgrapht/alg/StrongConnectivityInspector/dfsVisit(org.jgrapht.DirectedGraph,org.jgrapht.alg.StrongConnectivityInspector$VertexData,java.util.Set)#java/util/Iterator/next()
org/jgrapht/alg/StrongConnectivityInspector/dfsVisit(org.jgrapht.DirectedGraph,org.jgrapht.alg.StrongConnectivityInspector$VertexData,java.util.Set)#java/util/Deque/isEmpty()
org/jgrapht/alg/StrongConnectivityInspector/dfsVisit(org.jgrapht.DirectedGraph,org.jgrapht.alg.StrongConnectivityInspector$VertexData,java.util.Set)#java/util/LinkedList/addFirst(java.lang.Object)
org/jgrapht/alg/StrongConnectivityInspector/dfsVisit(org.jgrapht.DirectedGraph,org.jgrapht.alg.StrongConnectivityInspector$VertexData,java.util.Set)#org/jgrapht/alg/StrongConnectivityInspector$VertexData/access$000(org.jgrapht.alg.StrongConnectivityInspector$VertexData)
org/jgrapht/alg/StrongConnectivityInspector/dfsVisit(org.jgrapht.DirectedGraph,org.jgrapht.alg.StrongConnectivityInspector$VertexData,java.util.Set)#java/util/ArrayDeque/ArrayDeque()
org/jgrapht/alg/StrongConnectivityInspector/dfsVisit(org.jgrapht.DirectedGraph,org.jgrapht.alg.StrongConnectivityInspector$VertexData,java.util.Set)#org/jgrapht/alg/StrongConnectivityInspector$VertexData1/VertexData1(org.jgrapht.alg.StrongConnectivityInspector$VertexData,boolean,boolean,org.jgrapht.alg.StrongConnectivityInspector$1)
org/jgrapht/util/FibonacciHeap/toString()#java/util/Stack/empty()
org/jgrapht/util/FibonacciHeap/toString()#java/util/Stack/Stack()
org/jgrapht/util/FibonacciHeap/toString()#java/util/Stack/pop()
org/jgrapht/util/FibonacciHeap/toString()#java/lang/StringBuffer/StringBuffer(int)
org/jgrapht/util/FibonacciHeap/toString()#java/util/Stack/push(java.lang.Object)
org/jgrapht/util/FibonacciHeap/toString()#java/lang/StringBuffer/append(char)
org/jgrapht/util/FibonacciHeap/toString()#java/lang/StringBuffer/append(java.lang.Object)
org/jgrapht/util/FibonacciHeap/toString()#java/lang/StringBuffer/toString()
org/jgrapht/util/FibonacciHeap/toString()#java/lang/StringBuffer/append(java.lang.String)
org/jgrapht/alg/BlockCutpointGraph/dfsVisit(java.lang.Object,java.lang.Object)#java/lang/Object/equals(java.lang.Object)
org/jgrapht/alg/BlockCutpointGraph/dfsVisit(java.lang.Object,java.lang.Object)#org/jgrapht/UndirectedGraph/edgesOf(java.lang.Object)
org/jgrapht/alg/BlockCutpointGraph/dfsVisit(java.lang.Object,java.lang.Object)#java/util/Iterator/next()
org/jgrapht/alg/BlockCutpointGraph/dfsVisit(java.lang.Object,java.lang.Object)#org/jgrapht/DirectedGraph/addEdge(java.lang.Object,java.lang.Object,java.lang.Object)
org/jgrapht/alg/BlockCutpointGraph/dfsVisit(java.lang.Object,java.lang.Object)#java/util/Set/iterator()
org/jgrapht/alg/BlockCutpointGraph/dfsVisit(java.lang.Object,java.lang.Object)#org/jgrapht/alg/BlockCutpointGraph$BCGEdge/BCGEdge(org.jgrapht.alg.BlockCutpointGraph,java.lang.Object,java.lang.Object)
org/jgrapht/alg/BlockCutpointGraph/dfsVisit(java.lang.Object,java.lang.Object)#java/util/Iterator/hasNext()
org/jgrapht/alg/BlockCutpointGraph/dfsVisit(java.lang.Object,java.lang.Object)#org/jgrapht/DirectedGraph/addVertex(java.lang.Object)
org/jgrapht/alg/BlockCutpointGraph/dfsVisit(java.lang.Object,java.lang.Object)#java/util/Deque/add(java.lang.Object)
org/jgrapht/alg/BlockCutpointGraph/dfsVisit(java.lang.Object,java.lang.Object)#java/lang/Math/min(int,int)
org/jgrapht/alg/BlockCutpointGraph/biconnectedComponentFinished(java.lang.Object,java.lang.Object)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/jgrapht/alg/BlockCutpointGraph/biconnectedComponentFinished(java.lang.Object,java.lang.Object)#java/util/Deque/removeLast()
org/jgrapht/alg/BlockCutpointGraph/biconnectedComponentFinished(java.lang.Object,java.lang.Object)#org/jgrapht/alg/BlockCutpointGraph$BCGEdge/getSource()
org/jgrapht/alg/BlockCutpointGraph/biconnectedComponentFinished(java.lang.Object,java.lang.Object)#org/jgrapht/alg/BlockCutpointGraph/addVertex(java.lang.Object)
org/jgrapht/alg/BlockCutpointGraph/biconnectedComponentFinished(java.lang.Object,java.lang.Object)#org/jgrapht/alg/BlockCutpointGraph$VertexComponentForbiddenFunction/VertexComponentForbiddenFunction(org.jgrapht.alg.BlockCutpointGraph,java.util.Set)
org/jgrapht/alg/BlockCutpointGraph/biconnectedComponentFinished(java.lang.Object,java.lang.Object)#java/util/HashSet/HashSet()
org/jgrapht/alg/BlockCutpointGraph/biconnectedComponentFinished(java.lang.Object,java.lang.Object)#java/util/Set/add(java.lang.Object)
org/jgrapht/alg/BlockCutpointGraph/biconnectedComponentFinished(java.lang.Object,java.lang.Object)#org/jgrapht/alg/BlockCutpointGraph$BCGEdge/getTarget()
org/jgrapht/alg/BlockCutpointGraph/biconnectedComponentFinished(java.lang.Object,java.lang.Object)#java/util/Iterator/hasNext()
org/jgrapht/alg/BlockCutpointGraph/biconnectedComponentFinished(java.lang.Object,java.lang.Object)#java/util/Iterator/next()
org/jgrapht/alg/BlockCutpointGraph/biconnectedComponentFinished(java.lang.Object,java.lang.Object)#java/util/Deque/isEmpty()
org/jgrapht/alg/BlockCutpointGraph/biconnectedComponentFinished(java.lang.Object,java.lang.Object)#java/util/Set/iterator()
org/jgrapht/alg/TarjanLowestCommonAncestor/Worker/calculate(java.lang.Object)#java/lang/Object/equals(java.lang.Object)
org/jgrapht/alg/TarjanLowestCommonAncestor/Worker/calculate(java.lang.Object)#java/util/Iterator/hasNext()
org/jgrapht/alg/TarjanLowestCommonAncestor/Worker/calculate(java.lang.Object)#org/jgrapht/alg/TarjanLowestCommonAncestor$LcaRequestResponse/getA()
org/jgrapht/alg/TarjanLowestCommonAncestor/Worker/calculate(java.lang.Object)#org/jgrapht/alg/TarjanLowestCommonAncestor$LcaRequestResponse/getB()
org/jgrapht/alg/TarjanLowestCommonAncestor/Worker/calculate(java.lang.Object)#java/util/Iterator/next()
org/jgrapht/alg/TarjanLowestCommonAncestor/Worker/calculate(java.lang.Object)#java/util/Set/iterator()
org/jgrapht/alg/TarjanLowestCommonAncestor/Worker/calculate(java.lang.Object)#java/util/List/add(java.lang.Object)
org/jgrapht/alg/TarjanLowestCommonAncestor/Worker/calculate(java.lang.Object)#org/jgrapht/alg/TarjanLowestCommonAncestor$MultiMap/get(java.lang.Object)
org/jgrapht/alg/TarjanLowestCommonAncestor/Worker/calculate(java.lang.Object)#java/util/Set/add(java.lang.Object)
org/jgrapht/alg/TarjanLowestCommonAncestor/Worker/calculate(java.lang.Object)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/jgrapht/alg/TarjanLowestCommonAncestor/Worker/calculate(java.lang.Object)#org/jgrapht/alg/TarjanLowestCommonAncestor$Worker/calculate(java.lang.Object)
org/jgrapht/alg/TarjanLowestCommonAncestor/Worker/calculate(java.lang.Object)#java/util/Map/get(java.lang.Object)
org/jgrapht/alg/TarjanLowestCommonAncestor/Worker/calculate(java.lang.Object)#org/jgrapht/alg/TarjanLowestCommonAncestor$LcaRequestResponse/getLca()
org/jgrapht/alg/TarjanLowestCommonAncestor/Worker/calculate(java.lang.Object)#java/util/LinkedList/LinkedList()
org/jgrapht/alg/TarjanLowestCommonAncestor/Worker/calculate(java.lang.Object)#org/jgrapht/alg/TarjanLowestCommonAncestor$MultiMap/remove(java.lang.Object)
org/jgrapht/alg/TarjanLowestCommonAncestor/Worker/calculate(java.lang.Object)#org/jgrapht/alg/TarjanLowestCommonAncestor$LcaRequestResponse/setLca(java.lang.Object)
org/jgrapht/alg/TarjanLowestCommonAncestor/Worker/calculate(java.lang.Object)#java/util/Set/contains(java.lang.Object)
org/jgrapht/alg/TarjanLowestCommonAncestor/Worker/calculate(java.lang.Object)#java/util/List/iterator()
org/jgrapht/alg/CycleDetector/findCycles()#java/util/Iterator/hasNext()
org/jgrapht/alg/CycleDetector/findCycles()#java/util/Set/size()
org/jgrapht/alg/CycleDetector/findCycles()#java/util/Set/addAll(java.util.Collection)
org/jgrapht/alg/CycleDetector/findCycles()#java/util/Iterator/next()
org/jgrapht/alg/CycleDetector/findCycles()#org/jgrapht/DirectedGraph/containsEdge(java.lang.Object,java.lang.Object)
org/jgrapht/alg/CycleDetector/findCycles()#java/util/Set/iterator()
org/jgrapht/alg/CycleDetector/findCycles()#java/util/List/iterator()
org/jgrapht/alg/CycleDetector/findCycles()#java/util/HashSet/HashSet()
org/jgrapht/alg/CycleDetector/findCycles()#java/util/Set/add(java.lang.Object)
org/jgrapht/alg/StoerWagnerMinimumCut/mergeVertices(java.util.Set,java.util.Set)#org/jgrapht/WeightedGraph/addEdge(java.lang.Object,java.lang.Object)
org/jgrapht/alg/StoerWagnerMinimumCut/mergeVertices(java.util.Set,java.util.Set)#java/util/Set/addAll(java.util.Collection)
org/jgrapht/alg/StoerWagnerMinimumCut/mergeVertices(java.util.Set,java.util.Set)#org/jgrapht/WeightedGraph/addVertex(java.lang.Object)
org/jgrapht/alg/StoerWagnerMinimumCut/mergeVertices(java.util.Set,java.util.Set)#org/jgrapht/WeightedGraph/getEdge(java.lang.Object,java.lang.Object)
org/jgrapht/alg/StoerWagnerMinimumCut/mergeVertices(java.util.Set,java.util.Set)#java/util/Iterator/next()
org/jgrapht/alg/StoerWagnerMinimumCut/mergeVertices(java.util.Set,java.util.Set)#org/jgrapht/WeightedGraph/removeVertex(java.lang.Object)
org/jgrapht/alg/StoerWagnerMinimumCut/mergeVertices(java.util.Set,java.util.Set)#org/jgrapht/WeightedGraph/getEdgeWeight(java.lang.Object)
org/jgrapht/alg/StoerWagnerMinimumCut/mergeVertices(java.util.Set,java.util.Set)#java/util/Set/iterator()
org/jgrapht/alg/StoerWagnerMinimumCut/mergeVertices(java.util.Set,java.util.Set)#org/jgrapht/WeightedGraph/vertexSet()
org/jgrapht/alg/StoerWagnerMinimumCut/mergeVertices(java.util.Set,java.util.Set)#java/util/HashSet/HashSet()
org/jgrapht/alg/StoerWagnerMinimumCut/mergeVertices(java.util.Set,java.util.Set)#java/util/Iterator/hasNext()
org/jgrapht/alg/StoerWagnerMinimumCut/mergeVertices(java.util.Set,java.util.Set)#org/jgrapht/alg/StoerWagnerMinimumCut$VertexAndWeight/VertexAndWeight(org.jgrapht.alg.StoerWagnerMinimumCut,java.util.Set,double,boolean)
org/jgrapht/alg/StoerWagnerMinimumCut/minimumCutPhase(java.util.Set)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/jgrapht/alg/StoerWagnerMinimumCut/minimumCutPhase(java.util.Set)#java/lang/Double/valueOf(double)
org/jgrapht/alg/StoerWagnerMinimumCut/minimumCutPhase(java.util.Set)#java/util/PriorityQueue/add(java.lang.Object)
org/jgrapht/alg/StoerWagnerMinimumCut/minimumCutPhase(java.util.Set)#java/util/Map/get(java.lang.Object)
org/jgrapht/alg/StoerWagnerMinimumCut/minimumCutPhase(java.util.Set)#java/util/PriorityQueue/PriorityQueue()
org/jgrapht/alg/StoerWagnerMinimumCut/minimumCutPhase(java.util.Set)#org/jgrapht/WeightedGraph/getEdgeWeight(java.lang.Object)
org/jgrapht/alg/StoerWagnerMinimumCut/minimumCutPhase(java.util.Set)#org/jgrapht/WeightedGraph/edgesOf(java.lang.Object)
org/jgrapht/alg/StoerWagnerMinimumCut/minimumCutPhase(java.util.Set)#java/util/Set/iterator()
org/jgrapht/alg/StoerWagnerMinimumCut/minimumCutPhase(java.util.Set)#org/jgrapht/WeightedGraph/vertexSet()
org/jgrapht/alg/StoerWagnerMinimumCut/minimumCutPhase(java.util.Set)#java/util/PriorityQueue/poll()
org/jgrapht/alg/StoerWagnerMinimumCut/minimumCutPhase(java.util.Set)#java/util/PriorityQueue/isEmpty()
org/jgrapht/alg/StoerWagnerMinimumCut/minimumCutPhase(java.util.Set)#java/util/Map/remove(java.lang.Object)
org/jgrapht/alg/StoerWagnerMinimumCut/minimumCutPhase(java.util.Set)#java/util/Iterator/hasNext()
org/jgrapht/alg/StoerWagnerMinimumCut/minimumCutPhase(java.util.Set)#org/jgrapht/alg/StoerWagnerMinimumCut$VertexAndWeight/VertexAndWeight(org.jgrapht.alg.StoerWagnerMinimumCut,java.util.Set,double,boolean)
org/jgrapht/alg/StoerWagnerMinimumCut/minimumCutPhase(java.util.Set)#java/util/PriorityQueue/remove(java.lang.Object)
org/jgrapht/alg/StoerWagnerMinimumCut/minimumCutPhase(java.util.Set)#org/jgrapht/WeightedGraph/getEdge(java.lang.Object,java.lang.Object)
org/jgrapht/alg/StoerWagnerMinimumCut/minimumCutPhase(java.util.Set)#java/util/Iterator/next()
org/jgrapht/alg/StoerWagnerMinimumCut/minimumCutPhase(java.util.Set)#java/util/HashMap/HashMap()
org/jgrapht/alg/StoerWagnerMinimumCut/minimumCutPhase(java.util.Set)#java/lang/Double/doubleValue()
org/jgrapht/experimental/GraphTests/isBipartite(org.jgrapht.Graph)#java/util/LinkedList/isEmpty()
org/jgrapht/experimental/GraphTests/isBipartite(org.jgrapht.Graph)#java/util/Iterator/hasNext()
org/jgrapht/experimental/GraphTests/isBipartite(org.jgrapht.Graph)#java/util/Set/size()
org/jgrapht/experimental/GraphTests/isBipartite(org.jgrapht.Graph)#java/util/LinkedList/removeFirst()
org/jgrapht/experimental/GraphTests/isBipartite(org.jgrapht.Graph)#java/util/Set/contains(java.lang.Object)
org/jgrapht/experimental/GraphTests/isBipartite(org.jgrapht.Graph)#java/util/Set/iterator()
org/jgrapht/experimental/GraphTests/isBipartite(org.jgrapht.Graph)#java/util/Set/remove(java.lang.Object)
org/jgrapht/experimental/GraphTests/isBipartite(org.jgrapht.Graph)#java/util/List/iterator()
org/jgrapht/experimental/GraphTests/isBipartite(org.jgrapht.Graph)#java/util/HashSet/HashSet()
org/jgrapht/experimental/GraphTests/isBipartite(org.jgrapht.Graph)#java/util/Set/add(java.lang.Object)
org/jgrapht/experimental/GraphTests/isBipartite(org.jgrapht.Graph)#java/util/HashSet/HashSet(java.util.Collection)
org/jgrapht/experimental/GraphTests/isBipartite(org.jgrapht.Graph)#java/util/Iterator/next()
org/jgrapht/experimental/GraphTests/isBipartite(org.jgrapht.Graph)#java/util/LinkedList/add(java.lang.Object)
org/jgrapht/experimental/GraphTests/isBipartite(org.jgrapht.Graph)#java/util/Set/isEmpty()
org/jgrapht/experimental/GraphTests/isBipartite(org.jgrapht.Graph)#java/util/LinkedList/LinkedList()
org/jgrapht/experimental/GraphTests/isConnected(org.jgrapht.Graph)#java/util/LinkedList/isEmpty()
org/jgrapht/experimental/GraphTests/isConnected(org.jgrapht.Graph)#java/util/Iterator/hasNext()
org/jgrapht/experimental/GraphTests/isConnected(org.jgrapht.Graph)#java/util/Set/size()
org/jgrapht/experimental/GraphTests/isConnected(org.jgrapht.Graph)#java/util/LinkedList/removeFirst()
org/jgrapht/experimental/GraphTests/isConnected(org.jgrapht.Graph)#java/util/LinkedList/LinkedList()
org/jgrapht/experimental/GraphTests/isConnected(org.jgrapht.Graph)#java/util/Set/contains(java.lang.Object)
org/jgrapht/experimental/GraphTests/isConnected(org.jgrapht.Graph)#java/util/Set/iterator()
org/jgrapht/experimental/GraphTests/isConnected(org.jgrapht.Graph)#java/util/List/iterator()
org/jgrapht/experimental/GraphTests/isConnected(org.jgrapht.Graph)#java/util/HashSet/HashSet()
org/jgrapht/experimental/GraphTests/isConnected(org.jgrapht.Graph)#java/util/Set/add(java.lang.Object)
org/jgrapht/experimental/GraphTests/isConnected(org.jgrapht.Graph)#java/util/Iterator/next()
org/jgrapht/experimental/GraphTests/isConnected(org.jgrapht.Graph)#java/util/LinkedList/add(java.lang.Object)
org/jgrapht/alg/cycle/TiernanSimpleCycles/findSimpleCycles()#java/lang/Integer/compareTo(java.lang.Integer)
org/jgrapht/alg/cycle/TiernanSimpleCycles/findSimpleCycles()#org/jgrapht/DirectedGraph/vertexSet()
org/jgrapht/alg/cycle/TiernanSimpleCycles/findSimpleCycles()#java/util/Map/get(java.lang.Object)
org/jgrapht/alg/cycle/TiernanSimpleCycles/findSimpleCycles()#java/util/List/size()
org/jgrapht/alg/cycle/TiernanSimpleCycles/findSimpleCycles()#java/util/List/addAll(java.util.Collection)
org/jgrapht/alg/cycle/TiernanSimpleCycles/findSimpleCycles()#org/jgrapht/DirectedGraph/containsEdge(java.lang.Object,java.lang.Object)
org/jgrapht/alg/cycle/TiernanSimpleCycles/findSimpleCycles()#java/util/LinkedList/LinkedList()
org/jgrapht/alg/cycle/TiernanSimpleCycles/findSimpleCycles()#java/util/Set/contains(java.lang.Object)
org/jgrapht/alg/cycle/TiernanSimpleCycles/findSimpleCycles()#java/util/Set/iterator()
org/jgrapht/alg/cycle/TiernanSimpleCycles/findSimpleCycles()#java/util/List/clear()
org/jgrapht/alg/cycle/TiernanSimpleCycles/findSimpleCycles()#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/jgrapht/alg/cycle/TiernanSimpleCycles/findSimpleCycles()#org/jgrapht/DirectedGraph/getEdgeTarget(java.lang.Object)
org/jgrapht/alg/cycle/TiernanSimpleCycles/findSimpleCycles()#java/util/Set/add(java.lang.Object)
org/jgrapht/alg/cycle/TiernanSimpleCycles/findSimpleCycles()#java/util/Map/put(java.lang.Object,java.lang.Object)
org/jgrapht/alg/cycle/TiernanSimpleCycles/findSimpleCycles()#java/util/ArrayList/ArrayList()
org/jgrapht/alg/cycle/TiernanSimpleCycles/findSimpleCycles()#java/util/Iterator/hasNext()
org/jgrapht/alg/cycle/TiernanSimpleCycles/findSimpleCycles()#java/util/List/remove(int)
org/jgrapht/alg/cycle/TiernanSimpleCycles/findSimpleCycles()#java/util/Iterator/next()
org/jgrapht/alg/cycle/TiernanSimpleCycles/findSimpleCycles()#java/util/HashMap/HashMap()
org/jgrapht/alg/cycle/TiernanSimpleCycles/findSimpleCycles()#java/util/Map/keySet()
org/jgrapht/alg/cycle/TiernanSimpleCycles/findSimpleCycles()#java/util/List/add(java.lang.Object)
org/jgrapht/alg/cycle/TiernanSimpleCycles/findSimpleCycles()#java/lang/Integer/valueOf(int)
org/jgrapht/alg/cycle/TiernanSimpleCycles/findSimpleCycles()#java/util/Set/remove(java.lang.Object)
org/jgrapht/alg/cycle/TiernanSimpleCycles/findSimpleCycles()#java/util/List/get(int)
org/jgrapht/alg/cycle/TiernanSimpleCycles/findSimpleCycles()#java/util/Set/clear()
org/jgrapht/alg/cycle/TiernanSimpleCycles/findSimpleCycles()#java/util/HashSet/HashSet()
org/jgrapht/experimental/equivalence/EquivalenceSetCreator/createEqualityGroupOrderedArray(java.util.Collection,org.jgrapht.experimental.equivalence.EquivalenceComparator,java.lang.Object)#java/util/ArrayList/ArrayList()
org/jgrapht/experimental/equivalence/EquivalenceSetCreator/createEqualityGroupOrderedArray(java.util.Collection,org.jgrapht.experimental.equivalence.EquivalenceComparator,java.lang.Object)#java/util/Iterator/hasNext()
org/jgrapht/experimental/equivalence/EquivalenceSetCreator/createEqualityGroupOrderedArray(java.util.Collection,org.jgrapht.experimental.equivalence.EquivalenceComparator,java.lang.Object)#java/util/Arrays/sort(java.lang.Object[],java.util.Comparator)
org/jgrapht/experimental/equivalence/EquivalenceSetCreator/createEqualityGroupOrderedArray(java.util.Collection,org.jgrapht.experimental.equivalence.EquivalenceComparator,java.lang.Object)#java/util/ArrayList/toArray(java.lang.Object[])
org/jgrapht/experimental/equivalence/EquivalenceSetCreator/createEqualityGroupOrderedArray(java.util.Collection,org.jgrapht.experimental.equivalence.EquivalenceComparator,java.lang.Object)#java/util/Iterator/next()
org/jgrapht/experimental/equivalence/EquivalenceSetCreator/createEqualityGroupOrderedArray(java.util.Collection,org.jgrapht.experimental.equivalence.EquivalenceComparator,java.lang.Object)#java/util/ArrayList/add(java.lang.Object)
org/jgrapht/experimental/equivalence/EquivalenceSetCreator/createEqualityGroupOrderedArray(java.util.Collection,org.jgrapht.experimental.equivalence.EquivalenceComparator,java.lang.Object)#java/util/ArrayList/size()
org/jgrapht/experimental/equivalence/EquivalenceSetCreator/createEqualityGroupOrderedArray(java.util.Collection,org.jgrapht.experimental.equivalence.EquivalenceComparator,java.lang.Object)#java/util/HashMap/values()
org/jgrapht/experimental/equivalence/EquivalenceSetCreator/createEqualityGroupOrderedArray(java.util.Collection,org.jgrapht.experimental.equivalence.EquivalenceComparator,java.lang.Object)#java/util/List/iterator()
org/jgrapht/experimental/equivalence/EquivalenceSetCreator/createEqualityGroupOrderedArray(java.util.Collection,org.jgrapht.experimental.equivalence.EquivalenceComparator,java.lang.Object)#java/util/Collection/iterator()
org/jgrapht/experimental/equivalence/EquivalenceSetCreator/createEqualityGroupMap(java.util.Collection,org.jgrapht.experimental.equivalence.EquivalenceComparator,java.lang.Object)#java/util/Collection/size()
org/jgrapht/experimental/equivalence/EquivalenceSetCreator/createEqualityGroupMap(java.util.Collection,org.jgrapht.experimental.equivalence.EquivalenceComparator,java.lang.Object)#java/util/LinkedList/LinkedList()
org/jgrapht/experimental/equivalence/EquivalenceSetCreator/createEqualityGroupMap(java.util.Collection,org.jgrapht.experimental.equivalence.EquivalenceComparator,java.lang.Object)#java/util/HashMap/HashMap(int)
org/jgrapht/experimental/equivalence/EquivalenceSetCreator/createEqualityGroupMap(java.util.Collection,org.jgrapht.experimental.equivalence.EquivalenceComparator,java.lang.Object)#java/util/List/add(java.lang.Object)
org/jgrapht/experimental/equivalence/EquivalenceSetCreator/createEqualityGroupMap(java.util.Collection,org.jgrapht.experimental.equivalence.EquivalenceComparator,java.lang.Object)#java/lang/Integer/valueOf(int)
org/jgrapht/experimental/equivalence/EquivalenceSetCreator/createEqualityGroupMap(java.util.Collection,org.jgrapht.experimental.equivalence.EquivalenceComparator,java.lang.Object)#java/util/HashMap/get(java.lang.Object)
org/jgrapht/experimental/equivalence/EquivalenceSetCreator/createEqualityGroupMap(java.util.Collection,org.jgrapht.experimental.equivalence.EquivalenceComparator,java.lang.Object)#java/util/Iterator/hasNext()
org/jgrapht/experimental/equivalence/EquivalenceSetCreator/createEqualityGroupMap(java.util.Collection,org.jgrapht.experimental.equivalence.EquivalenceComparator,java.lang.Object)#java/util/Iterator/next()
org/jgrapht/experimental/equivalence/EquivalenceSetCreator/createEqualityGroupMap(java.util.Collection,org.jgrapht.experimental.equivalence.EquivalenceComparator,java.lang.Object)#java/util/HashMap/put(java.lang.Object,java.lang.Object)
org/jgrapht/experimental/equivalence/EquivalenceSetCreator/createEqualityGroupMap(java.util.Collection,org.jgrapht.experimental.equivalence.EquivalenceComparator,java.lang.Object)#java/util/List/iterator()
org/jgrapht/experimental/equivalence/EquivalenceSetCreator/createEqualityGroupMap(java.util.Collection,org.jgrapht.experimental.equivalence.EquivalenceComparator,java.lang.Object)#java/util/Collection/iterator()
org/jgrapht/alg/cycle/SzwarcfiterLauerSimpleCycles/initState()#org/jgrapht/DirectedGraph/vertexSet()
org/jgrapht/alg/cycle/SzwarcfiterLauerSimpleCycles/initState()#java/util/Set/size()
org/jgrapht/alg/cycle/SzwarcfiterLauerSimpleCycles/initState()#java/util/Set/toArray()
org/jgrapht/alg/cycle/SzwarcfiterLauerSimpleCycles/initState()#java/util/HashMap/HashMap()
org/jgrapht/alg/cycle/SzwarcfiterLauerSimpleCycles/initState()#java/util/ArrayDeque/ArrayDeque()
org/jgrapht/alg/cycle/SzwarcfiterLauerSimpleCycles/initState()#java/lang/Integer/valueOf(int)
org/jgrapht/alg/cycle/SzwarcfiterLauerSimpleCycles/initState()#java/util/HashSet/HashSet()
org/jgrapht/alg/cycle/SzwarcfiterLauerSimpleCycles/initState()#java/util/Map/put(java.lang.Object,java.lang.Object)
org/jgrapht/alg/cycle/SzwarcfiterLauerSimpleCycles/initState()#java/util/ArrayList/ArrayList()
org/jgrapht/alg/cycle/SzwarcfiterLauerSimpleCycles/cycle(int,int)#java/lang/Integer/intValue()
org/jgrapht/alg/cycle/SzwarcfiterLauerSimpleCycles/cycle(int,int)#java/util/ArrayList/ArrayList()
org/jgrapht/alg/cycle/SzwarcfiterLauerSimpleCycles/cycle(int,int)#java/util/ArrayDeque/pop()
org/jgrapht/alg/cycle/SzwarcfiterLauerSimpleCycles/cycle(int,int)#java/lang/Object/equals(java.lang.Object)
org/jgrapht/alg/cycle/SzwarcfiterLauerSimpleCycles/cycle(int,int)#java/util/ArrayDeque/size()
org/jgrapht/alg/cycle/SzwarcfiterLauerSimpleCycles/cycle(int,int)#java/util/Iterator/hasNext()
org/jgrapht/alg/cycle/SzwarcfiterLauerSimpleCycles/cycle(int,int)#org/jgrapht/DirectedGraph/vertexSet()
org/jgrapht/alg/cycle/SzwarcfiterLauerSimpleCycles/cycle(int,int)#java/util/Set/size()
org/jgrapht/alg/cycle/SzwarcfiterLauerSimpleCycles/cycle(int,int)#java/util/ArrayDeque/descendingIterator()
org/jgrapht/alg/cycle/SzwarcfiterLauerSimpleCycles/cycle(int,int)#java/util/ArrayDeque/push(java.lang.Object)
org/jgrapht/alg/cycle/SzwarcfiterLauerSimpleCycles/cycle(int,int)#java/util/Iterator/next()
org/jgrapht/alg/cycle/SzwarcfiterLauerSimpleCycles/cycle(int,int)#java/util/Set/contains(java.lang.Object)
org/jgrapht/alg/cycle/SzwarcfiterLauerSimpleCycles/cycle(int,int)#java/util/Set/iterator()
org/jgrapht/alg/cycle/SzwarcfiterLauerSimpleCycles/cycle(int,int)#org/jgrapht/DirectedGraph/getEdgeTarget(java.lang.Object)
org/jgrapht/alg/cycle/SzwarcfiterLauerSimpleCycles/cycle(int,int)#java/util/Set/add(java.lang.Object)
org/jgrapht/alg/cycle/SzwarcfiterLauerSimpleCycles/cycle(int,int)#java/util/List/add(java.lang.Object)
org/jgrapht/experimental/isomorphism/GraphOrdering/toString()#java/lang/Integer/intValue()
org/jgrapht/experimental/isomorphism/GraphOrdering/toString()#java/lang/Object/toString()
org/jgrapht/experimental/isomorphism/GraphOrdering/toString()#java/util/Iterator/hasNext()
org/jgrapht/experimental/isomorphism/GraphOrdering/toString()#java/util/Arrays/toString(java.lang.Object[])
org/jgrapht/experimental/isomorphism/GraphOrdering/toString()#java/util/Map/get(java.lang.Object)
org/jgrapht/experimental/isomorphism/GraphOrdering/toString()#java/util/Map/size()
org/jgrapht/experimental/isomorphism/GraphOrdering/toString()#java/lang/StringBuffer/toString()
org/jgrapht/experimental/isomorphism/GraphOrdering/toString()#java/util/Set/iterator()
org/jgrapht/experimental/isomorphism/GraphOrdering/toString()#java/lang/StringBuffer/append(java.lang.String)
org/jgrapht/experimental/isomorphism/GraphOrdering/toString()#java/lang/StringBuffer/StringBuffer()
org/jgrapht/experimental/isomorphism/GraphOrdering/toString()#java/util/Iterator/next()
org/jgrapht/experimental/isomorphism/GraphOrdering/toString()#java/util/Map/keySet()
org/jgrapht/experimental/isomorphism/GraphOrdering/init(org.jgrapht.Graph,java.util.Set,java.util.Set)#java/lang/Integer/intValue()
org/jgrapht/experimental/isomorphism/GraphOrdering/init(org.jgrapht.Graph,java.util.Set,java.util.Set)#java/util/Set/size()
org/jgrapht/experimental/isomorphism/GraphOrdering/init(org.jgrapht.Graph,java.util.Set,java.util.Set)#java/util/Iterator/next()
org/jgrapht/experimental/isomorphism/GraphOrdering/init(org.jgrapht.Graph,java.util.Set,java.util.Set)#java/util/Set/add(java.lang.Object)
org/jgrapht/experimental/isomorphism/GraphOrdering/init(org.jgrapht.Graph,java.util.Set,java.util.Set)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/jgrapht/experimental/isomorphism/GraphOrdering/init(org.jgrapht.Graph,java.util.Set,java.util.Set)#java/util/Iterator/hasNext()
org/jgrapht/experimental/isomorphism/GraphOrdering/init(org.jgrapht.Graph,java.util.Set,java.util.Set)#org/jgrapht/experimental/isomorphism/GraphOrdering$LabelsEdge/LabelsEdge(org.jgrapht.experimental.isomorphism.GraphOrdering,int,int)
org/jgrapht/experimental/isomorphism/GraphOrdering/init(org.jgrapht.Graph,java.util.Set,java.util.Set)#java/util/HashSet/HashSet(int)
org/jgrapht/experimental/isomorphism/GraphOrdering/init(org.jgrapht.Graph,java.util.Set,java.util.Set)#java/lang/Integer/Integer(int)
org/jgrapht/experimental/isomorphism/GraphOrdering/init(org.jgrapht.Graph,java.util.Set,java.util.Set)#java/util/Map/get(java.lang.Object)
org/jgrapht/experimental/isomorphism/GraphOrdering/init(org.jgrapht.Graph,java.util.Set,java.util.Set)#java/util/HashMap/HashMap(int)
org/jgrapht/experimental/isomorphism/GraphOrdering/init(org.jgrapht.Graph,java.util.Set,java.util.Set)#java/util/Set/iterator()
org/jgrapht/generate/HyperCubeGraphGenerator/generateGraph(org.jgrapht.Graph,org.jgrapht.VertexFactory,java.util.Map)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/jgrapht/generate/HyperCubeGraphGenerator/generateGraph(org.jgrapht.Graph,org.jgrapht.VertexFactory,java.util.Map)#java/lang/StringBuilder/append(java.lang.String)
org/jgrapht/generate/HyperCubeGraphGenerator/generateGraph(org.jgrapht.Graph,org.jgrapht.VertexFactory,java.util.Map)#java/lang/String/length()
org/jgrapht/generate/HyperCubeGraphGenerator/generateGraph(org.jgrapht.Graph,org.jgrapht.VertexFactory,java.util.Map)#java/util/LinkedList/add(java.lang.Object)
org/jgrapht/generate/HyperCubeGraphGenerator/generateGraph(org.jgrapht.Graph,org.jgrapht.VertexFactory,java.util.Map)#java/util/LinkedList/LinkedList()
org/jgrapht/generate/HyperCubeGraphGenerator/generateGraph(org.jgrapht.Graph,org.jgrapht.VertexFactory,java.util.Map)#java/lang/StringBuilder/StringBuilder()
org/jgrapht/generate/HyperCubeGraphGenerator/generateGraph(org.jgrapht.Graph,org.jgrapht.VertexFactory,java.util.Map)#java/lang/Math/pow(double,double)
org/jgrapht/generate/HyperCubeGraphGenerator/generateGraph(org.jgrapht.Graph,org.jgrapht.VertexFactory,java.util.Map)#java/lang/Integer/toBinaryString(int)
org/jgrapht/generate/HyperCubeGraphGenerator/generateGraph(org.jgrapht.Graph,org.jgrapht.VertexFactory,java.util.Map)#java/lang/StringBuilder/toString()
org/jgrapht/generate/HyperCubeGraphGenerator/generateGraph(org.jgrapht.Graph,org.jgrapht.VertexFactory,java.util.Map)#java/util/LinkedList/get(int)
org/jgrapht/alg/cycle/TarjanSimpleCycles/initState()#java/util/Iterator/hasNext()
org/jgrapht/alg/cycle/TarjanSimpleCycles/initState()#org/jgrapht/DirectedGraph/vertexSet()
org/jgrapht/alg/cycle/TarjanSimpleCycles/initState()#java/util/ArrayDeque/ArrayDeque()
org/jgrapht/alg/cycle/TarjanSimpleCycles/initState()#java/util/Set/iterator()
org/jgrapht/alg/cycle/TarjanSimpleCycles/initState()#java/lang/Integer/valueOf(int)
org/jgrapht/alg/cycle/TarjanSimpleCycles/initState()#java/util/HashSet/HashSet()
org/jgrapht/alg/cycle/TarjanSimpleCycles/initState()#java/util/Map/put(java.lang.Object,java.lang.Object)
org/jgrapht/alg/cycle/TarjanSimpleCycles/initState()#java/util/ArrayList/ArrayList()
org/jgrapht/alg/cycle/TarjanSimpleCycles/initState()#java/util/Iterator/next()
org/jgrapht/alg/cycle/TarjanSimpleCycles/initState()#java/util/HashMap/HashMap()
org/jgrapht/alg/cycle/TarjanSimpleCycles/backtrack(java.lang.Object,java.lang.Object)#java/util/ArrayList/ArrayList()
org/jgrapht/alg/cycle/TarjanSimpleCycles/backtrack(java.lang.Object,java.lang.Object)#java/util/ArrayDeque/pop()
org/jgrapht/alg/cycle/TarjanSimpleCycles/backtrack(java.lang.Object,java.lang.Object)#java/lang/Object/equals(java.lang.Object)
org/jgrapht/alg/cycle/TarjanSimpleCycles/backtrack(java.lang.Object,java.lang.Object)#java/lang/Integer/compareTo(java.lang.Integer)
org/jgrapht/alg/cycle/TarjanSimpleCycles/backtrack(java.lang.Object,java.lang.Object)#java/util/Iterator/hasNext()
org/jgrapht/alg/cycle/TarjanSimpleCycles/backtrack(java.lang.Object,java.lang.Object)#java/util/ArrayDeque/descendingIterator()
org/jgrapht/alg/cycle/TarjanSimpleCycles/backtrack(java.lang.Object,java.lang.Object)#java/util/Iterator/next()
org/jgrapht/alg/cycle/TarjanSimpleCycles/backtrack(java.lang.Object,java.lang.Object)#java/util/Set/contains(java.lang.Object)
org/jgrapht/alg/cycle/TarjanSimpleCycles/backtrack(java.lang.Object,java.lang.Object)#java/util/Set/iterator()
org/jgrapht/alg/cycle/TarjanSimpleCycles/backtrack(java.lang.Object,java.lang.Object)#java/util/Set/remove(java.lang.Object)
org/jgrapht/alg/cycle/TarjanSimpleCycles/backtrack(java.lang.Object,java.lang.Object)#org/jgrapht/DirectedGraph/getEdgeTarget(java.lang.Object)
org/jgrapht/alg/cycle/TarjanSimpleCycles/backtrack(java.lang.Object,java.lang.Object)#java/util/ArrayDeque/peek()
org/jgrapht/alg/cycle/TarjanSimpleCycles/backtrack(java.lang.Object,java.lang.Object)#java/util/ArrayDeque/push(java.lang.Object)
org/jgrapht/alg/cycle/TarjanSimpleCycles/backtrack(java.lang.Object,java.lang.Object)#java/util/List/add(java.lang.Object)
org/jgrapht/alg/cycle/TarjanSimpleCycles/backtrack(java.lang.Object,java.lang.Object)#java/util/Set/add(java.lang.Object)
org/jgrapht/alg/EdmondsBlossomShrinking/findMatch()#java/util/Map/put(java.lang.Object,java.lang.Object)
org/jgrapht/alg/EdmondsBlossomShrinking/findMatch()#java/util/Iterator/hasNext()
org/jgrapht/alg/EdmondsBlossomShrinking/findMatch()#java/util/Map/get(java.lang.Object)
org/jgrapht/alg/EdmondsBlossomShrinking/findMatch()#org/jgrapht/UndirectedGraph/vertexSet()
org/jgrapht/alg/EdmondsBlossomShrinking/findMatch()#java/util/ArrayDeque/ArrayDeque()
org/jgrapht/alg/EdmondsBlossomShrinking/findMatch()#java/util/Set/contains(java.lang.Object)
org/jgrapht/alg/EdmondsBlossomShrinking/findMatch()#java/util/Set/iterator()
org/jgrapht/alg/EdmondsBlossomShrinking/findMatch()#java/util/Map/containsKey(java.lang.Object)
org/jgrapht/alg/EdmondsBlossomShrinking/findMatch()#org/jgrapht/UndirectedGraph/getEdge(java.lang.Object,java.lang.Object)
org/jgrapht/alg/EdmondsBlossomShrinking/findMatch()#java/util/HashSet/HashSet()
org/jgrapht/alg/EdmondsBlossomShrinking/findMatch()#java/util/Set/add(java.lang.Object)
org/jgrapht/alg/EdmondsBlossomShrinking/findMatch()#java/util/Iterator/next()
org/jgrapht/alg/EdmondsBlossomShrinking/findMatch()#java/util/HashMap/HashMap()
org/jgrapht/alg/EdmondsBlossomShrinking/findPath(java.lang.Object)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/jgrapht/alg/EdmondsBlossomShrinking/findPath(java.lang.Object)#java/util/Iterator/hasNext()
org/jgrapht/alg/EdmondsBlossomShrinking/findPath(java.lang.Object)#org/jgrapht/UndirectedGraph/edgesOf(java.lang.Object)
org/jgrapht/alg/EdmondsBlossomShrinking/findPath(java.lang.Object)#org/jgrapht/UndirectedGraph/getEdgeSource(java.lang.Object)
org/jgrapht/alg/EdmondsBlossomShrinking/findPath(java.lang.Object)#org/jgrapht/UndirectedGraph/vertexSet()
org/jgrapht/alg/EdmondsBlossomShrinking/findPath(java.lang.Object)#java/util/Iterator/next()
org/jgrapht/alg/EdmondsBlossomShrinking/findPath(java.lang.Object)#java/util/Set/add(java.lang.Object)
org/jgrapht/alg/EdmondsBlossomShrinking/findPath(java.lang.Object)#org/jgrapht/UndirectedGraph/getEdgeTarget(java.lang.Object)
org/jgrapht/alg/EdmondsBlossomShrinking/findPath(java.lang.Object)#java/util/Queue/isEmpty()
org/jgrapht/alg/EdmondsBlossomShrinking/findPath(java.lang.Object)#java/util/Queue/add(java.lang.Object)
org/jgrapht/alg/EdmondsBlossomShrinking/findPath(java.lang.Object)#java/util/Map/get(java.lang.Object)
org/jgrapht/alg/EdmondsBlossomShrinking/findPath(java.lang.Object)#java/util/Set/contains(java.lang.Object)
org/jgrapht/alg/EdmondsBlossomShrinking/findPath(java.lang.Object)#java/util/Set/iterator()
org/jgrapht/alg/EdmondsBlossomShrinking/findPath(java.lang.Object)#java/util/Map/containsKey(java.lang.Object)
org/jgrapht/alg/EdmondsBlossomShrinking/findPath(java.lang.Object)#java/util/Map/clear()
org/jgrapht/alg/EdmondsBlossomShrinking/findPath(java.lang.Object)#java/util/Set/clear()
org/jgrapht/alg/EdmondsBlossomShrinking/findPath(java.lang.Object)#java/util/Queue/remove()
org/jgrapht/graph/UndirectedSubgraph/degreeOf(java.lang.Object)#org/jgrapht/graph/UndirectedSubgraph/getEdgeSource(java.lang.Object)
org/jgrapht/graph/UndirectedSubgraph/degreeOf(java.lang.Object)#java/lang/Object/equals(java.lang.Object)
org/jgrapht/graph/UndirectedSubgraph/degreeOf(java.lang.Object)#java/util/Iterator/hasNext()
org/jgrapht/graph/UndirectedSubgraph/degreeOf(java.lang.Object)#org/jgrapht/UndirectedGraph/edgesOf(java.lang.Object)
org/jgrapht/graph/UndirectedSubgraph/degreeOf(java.lang.Object)#org/jgrapht/graph/UndirectedSubgraph/getBase()
org/jgrapht/graph/UndirectedSubgraph/degreeOf(java.lang.Object)#java/util/Iterator/next()
org/jgrapht/graph/UndirectedSubgraph/degreeOf(java.lang.Object)#java/util/Set/iterator()
org/jgrapht/graph/UndirectedSubgraph/degreeOf(java.lang.Object)#org/jgrapht/graph/UndirectedSubgraph/getEdgeTarget(java.lang.Object)
org/jgrapht/graph/UndirectedSubgraph/degreeOf(java.lang.Object)#org/jgrapht/graph/UndirectedSubgraph/containsEdge(java.lang.Object)
org/jgrapht/graph/UndirectedSubgraph/degreeOf(java.lang.Object)#org/jgrapht/graph/UndirectedSubgraph/assertVertexExist(java.lang.Object)
org/jgrapht/generate/RandomGraphGenerator/generateGraph(org.jgrapht.Graph,org.jgrapht.VertexFactory,java.util.Map)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/jgrapht/generate/RandomGraphGenerator/generateGraph(org.jgrapht.Graph,org.jgrapht.VertexFactory,java.util.Map)#java/lang/StringBuilder/append(int)
org/jgrapht/generate/RandomGraphGenerator/generateGraph(org.jgrapht.Graph,org.jgrapht.VertexFactory,java.util.Map)#java/lang/StringBuilder/StringBuilder()
org/jgrapht/generate/RandomGraphGenerator/generateGraph(org.jgrapht.Graph,org.jgrapht.VertexFactory,java.util.Map)#java/util/HashMap/HashMap(int)
org/jgrapht/generate/RandomGraphGenerator/generateGraph(org.jgrapht.Graph,org.jgrapht.VertexFactory,java.util.Map)#org/jgrapht/generate/RandomGraphGenerator$EdgeTopologyFactory/isNumberOfEdgesValid(org.jgrapht.Graph,int)
org/jgrapht/generate/RandomGraphGenerator/generateGraph(org.jgrapht.Graph,org.jgrapht.VertexFactory,java.util.Map)#java/lang/Integer/valueOf(int)
org/jgrapht/generate/RandomGraphGenerator/generateGraph(org.jgrapht.Graph,org.jgrapht.VertexFactory,java.util.Map)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/jgrapht/generate/RandomGraphGenerator/generateGraph(org.jgrapht.Graph,org.jgrapht.VertexFactory,java.util.Map)#java/lang/StringBuilder/toString()
org/jgrapht/generate/RandomGraphGenerator/generateGraph(org.jgrapht.Graph,org.jgrapht.VertexFactory,java.util.Map)#org/jgrapht/generate/RandomGraphGenerator$EdgeTopologyFactory/createEdges(org.jgrapht.Graph,java.util.Map,int,java.util.Random)
org/jgrapht/generate/RandomGraphGenerator/generateGraph(org.jgrapht.Graph,org.jgrapht.VertexFactory,java.util.Map)#java/util/Set/size()
org/jgrapht/generate/RandomGraphGenerator/generateGraph(org.jgrapht.Graph,org.jgrapht.VertexFactory,java.util.Map)#java/lang/StringBuilder/append(java.lang.String)
org/jgrapht/generate/RandomGraphGenerator/generateGraph(org.jgrapht.Graph,org.jgrapht.VertexFactory,java.util.Map)#java/lang/StringBuilder/append(java.lang.Object)
org/jgrapht/generate/RandomGraphGenerator/generateGraph(org.jgrapht.Graph,org.jgrapht.VertexFactory,java.util.Map)#java/lang/Object/getClass()
org/jgrapht/alg/cycle/PatonCycleBase/findCycleBase()#org/jgrapht/UndirectedGraph/getEdgeTarget(java.lang.Object)
org/jgrapht/alg/cycle/PatonCycleBase/findCycleBase()#java/util/ArrayDeque/pop()
org/jgrapht/alg/cycle/PatonCycleBase/findCycleBase()#java/lang/Object/equals(java.lang.Object)
org/jgrapht/alg/cycle/PatonCycleBase/findCycleBase()#java/util/Iterator/hasNext()
org/jgrapht/alg/cycle/PatonCycleBase/findCycleBase()#org/jgrapht/UndirectedGraph/edgesOf(java.lang.Object)
org/jgrapht/alg/cycle/PatonCycleBase/findCycleBase()#java/util/Map/get(java.lang.Object)
org/jgrapht/alg/cycle/PatonCycleBase/findCycleBase()#org/jgrapht/UndirectedGraph/vertexSet()
org/jgrapht/alg/cycle/PatonCycleBase/findCycleBase()#java/util/ArrayDeque/ArrayDeque()
org/jgrapht/alg/cycle/PatonCycleBase/findCycleBase()#java/util/Set/contains(java.lang.Object)
org/jgrapht/alg/cycle/PatonCycleBase/findCycleBase()#java/util/List/add(java.lang.Object)
org/jgrapht/alg/cycle/PatonCycleBase/findCycleBase()#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/jgrapht/alg/cycle/PatonCycleBase/findCycleBase()#java/util/HashSet/HashSet()
org/jgrapht/alg/cycle/PatonCycleBase/findCycleBase()#java/util/Set/add(java.lang.Object)
org/jgrapht/alg/cycle/PatonCycleBase/findCycleBase()#java/util/Map/put(java.lang.Object,java.lang.Object)
org/jgrapht/alg/cycle/PatonCycleBase/findCycleBase()#java/util/ArrayList/ArrayList()
org/jgrapht/alg/cycle/PatonCycleBase/findCycleBase()#java/util/ArrayDeque/push(java.lang.Object)
org/jgrapht/alg/cycle/PatonCycleBase/findCycleBase()#org/jgrapht/UndirectedGraph/getEdgeSource(java.lang.Object)
org/jgrapht/alg/cycle/PatonCycleBase/findCycleBase()#java/util/Iterator/next()
org/jgrapht/alg/cycle/PatonCycleBase/findCycleBase()#java/util/HashMap/HashMap()
org/jgrapht/alg/cycle/PatonCycleBase/findCycleBase()#java/util/ArrayDeque/isEmpty()
org/jgrapht/alg/cycle/PatonCycleBase/findCycleBase()#java/util/Set/iterator()
org/jgrapht/alg/cycle/PatonCycleBase/findCycleBase()#java/util/Map/containsKey(java.lang.Object)
org/jgrapht/alg/cycle/PatonCycleBase/findCycleBase()#java/util/Map/clear()
org/jgrapht/alg/EdmondsKarpMaximumFlow/calculateMaximumFlow(java.lang.Object,java.lang.Object)#java/lang/Integer/intValue()
org/jgrapht/alg/EdmondsKarpMaximumFlow/calculateMaximumFlow(java.lang.Object,java.lang.Object)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/jgrapht/alg/EdmondsKarpMaximumFlow/calculateMaximumFlow(java.lang.Object,java.lang.Object)#java/lang/Object/equals(java.lang.Object)
org/jgrapht/alg/EdmondsKarpMaximumFlow/calculateMaximumFlow(java.lang.Object,java.lang.Object)#java/util/Iterator/hasNext()
org/jgrapht/alg/EdmondsKarpMaximumFlow/calculateMaximumFlow(java.lang.Object,java.lang.Object)#java/lang/Double/valueOf(double)
org/jgrapht/alg/EdmondsKarpMaximumFlow/calculateMaximumFlow(java.lang.Object,java.lang.Object)#java/util/Map/get(java.lang.Object)
org/jgrapht/alg/EdmondsKarpMaximumFlow/calculateMaximumFlow(java.lang.Object,java.lang.Object)#java/util/List/get(int)
org/jgrapht/alg/EdmondsKarpMaximumFlow/calculateMaximumFlow(java.lang.Object,java.lang.Object)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/jgrapht/alg/EdmondsKarpMaximumFlow/calculateMaximumFlow(java.lang.Object,java.lang.Object)#java/util/List/iterator()
org/jgrapht/alg/EdmondsKarpMaximumFlow/calculateMaximumFlow(java.lang.Object,java.lang.Object)#org/jgrapht/DirectedGraph/containsVertex(java.lang.Object)
org/jgrapht/alg/EdmondsKarpMaximumFlow/calculateMaximumFlow(java.lang.Object,java.lang.Object)#java/util/Iterator/next()
org/jgrapht/alg/EdmondsKarpMaximumFlow/calculateMaximumFlow(java.lang.Object,java.lang.Object)#java/util/HashMap/HashMap()
org/jgrapht/alg/EdmondsKarpMaximumFlow/buildInternalNetwork()#org/jgrapht/DirectedGraph/vertexSet()
org/jgrapht/alg/EdmondsKarpMaximumFlow/buildInternalNetwork()#java/util/Set/size()
org/jgrapht/alg/EdmondsKarpMaximumFlow/buildInternalNetwork()#java/util/Map/get(java.lang.Object)
org/jgrapht/alg/EdmondsKarpMaximumFlow/buildInternalNetwork()#org/jgrapht/alg/EdmondsKarpMaximumFlow$Arc/Arc(org.jgrapht.alg.EdmondsKarpMaximumFlow,int,int,double,java.lang.Object)
org/jgrapht/alg/EdmondsKarpMaximumFlow/buildInternalNetwork()#java/util/Set/iterator()
org/jgrapht/alg/EdmondsKarpMaximumFlow/buildInternalNetwork()#org/jgrapht/DirectedGraph/getEdgeTarget(java.lang.Object)
org/jgrapht/alg/EdmondsKarpMaximumFlow/buildInternalNetwork()#org/jgrapht/DirectedGraph/getEdgeWeight(java.lang.Object)
org/jgrapht/alg/EdmondsKarpMaximumFlow/buildInternalNetwork()#java/lang/Integer/intValue()
org/jgrapht/alg/EdmondsKarpMaximumFlow/buildInternalNetwork()#java/util/Map/put(java.lang.Object,java.lang.Object)
org/jgrapht/alg/EdmondsKarpMaximumFlow/buildInternalNetwork()#java/util/ArrayList/ArrayList()
org/jgrapht/alg/EdmondsKarpMaximumFlow/buildInternalNetwork()#java/util/Iterator/hasNext()
org/jgrapht/alg/EdmondsKarpMaximumFlow/buildInternalNetwork()#org/jgrapht/alg/EdmondsKarpMaximumFlow$Node/Node(org.jgrapht.alg.EdmondsKarpMaximumFlow,java.lang.Object)
org/jgrapht/alg/EdmondsKarpMaximumFlow/buildInternalNetwork()#java/util/Iterator/next()
org/jgrapht/alg/EdmondsKarpMaximumFlow/buildInternalNetwork()#java/util/HashMap/HashMap()
org/jgrapht/alg/EdmondsKarpMaximumFlow/buildInternalNetwork()#java/util/List/add(java.lang.Object)
org/jgrapht/alg/EdmondsKarpMaximumFlow/buildInternalNetwork()#java/lang/Integer/valueOf(int)
org/jgrapht/alg/EdmondsKarpMaximumFlow/buildInternalNetwork()#java/util/List/get(int)
org/jgrapht/alg/EdmondsKarpMaximumFlow/breadthFirstSearch()#java/util/Iterator/hasNext()
org/jgrapht/alg/EdmondsKarpMaximumFlow/breadthFirstSearch()#java/util/Queue/offer(java.lang.Object)
org/jgrapht/alg/EdmondsKarpMaximumFlow/breadthFirstSearch()#java/util/Queue/add(java.lang.Object)
org/jgrapht/alg/EdmondsKarpMaximumFlow/breadthFirstSearch()#java/util/Iterator/next()
org/jgrapht/alg/EdmondsKarpMaximumFlow/breadthFirstSearch()#java/util/LinkedList/LinkedList()
org/jgrapht/alg/EdmondsKarpMaximumFlow/breadthFirstSearch()#java/util/Queue/poll()
org/jgrapht/alg/EdmondsKarpMaximumFlow/breadthFirstSearch()#java/util/Queue/size()
org/jgrapht/alg/EdmondsKarpMaximumFlow/breadthFirstSearch()#java/util/List/iterator()
org/jgrapht/alg/EdmondsKarpMaximumFlow/breadthFirstSearch()#java/lang/Math/min(double,double)
org/jgrapht/alg/EdmondsKarpMaximumFlow/breadthFirstSearch()#java/lang/Integer/intValue()
org/jgrapht/alg/EdmondsKarpMaximumFlow/breadthFirstSearch()#java/lang/Integer/valueOf(int)
org/jgrapht/alg/EdmondsKarpMaximumFlow/breadthFirstSearch()#java/util/List/get(int)
org/jgrapht/alg/TransitiveClosure/closeSimpleDirectedGraph(org.jgrapht.graph.SimpleDirectedGraph)#org/jgrapht/graph/SimpleDirectedGraph/getEdgeTarget(java.lang.Object)
org/jgrapht/alg/TransitiveClosure/closeSimpleDirectedGraph(org.jgrapht.graph.SimpleDirectedGraph)#java/util/Set/size()
org/jgrapht/alg/TransitiveClosure/closeSimpleDirectedGraph(org.jgrapht.graph.SimpleDirectedGraph)#java/util/Iterator/next()
org/jgrapht/alg/TransitiveClosure/closeSimpleDirectedGraph(org.jgrapht.graph.SimpleDirectedGraph)#org/jgrapht/graph/SimpleDirectedGraph/getEdge(java.lang.Object,java.lang.Object)
org/jgrapht/alg/TransitiveClosure/closeSimpleDirectedGraph(org.jgrapht.graph.SimpleDirectedGraph)#org/jgrapht/graph/SimpleDirectedGraph/vertexSet()
org/jgrapht/alg/TransitiveClosure/closeSimpleDirectedGraph(org.jgrapht.graph.SimpleDirectedGraph)#java/util/Set/iterator()
org/jgrapht/alg/TransitiveClosure/closeSimpleDirectedGraph(org.jgrapht.graph.SimpleDirectedGraph)#java/util/Set/add(java.lang.Object)
org/jgrapht/alg/TransitiveClosure/closeSimpleDirectedGraph(org.jgrapht.graph.SimpleDirectedGraph)#java/lang/Object/equals(java.lang.Object)
org/jgrapht/alg/TransitiveClosure/closeSimpleDirectedGraph(org.jgrapht.graph.SimpleDirectedGraph)#org/jgrapht/graph/SimpleDirectedGraph/outgoingEdgesOf(java.lang.Object)
org/jgrapht/alg/TransitiveClosure/closeSimpleDirectedGraph(org.jgrapht.graph.SimpleDirectedGraph)#java/util/Iterator/hasNext()
org/jgrapht/alg/TransitiveClosure/closeSimpleDirectedGraph(org.jgrapht.graph.SimpleDirectedGraph)#org/jgrapht/graph/SimpleDirectedGraph/addEdge(java.lang.Object,java.lang.Object)
org/jgrapht/alg/TransitiveClosure/closeSimpleDirectedGraph(org.jgrapht.graph.SimpleDirectedGraph)#java/util/Set/clear()
org/jgrapht/alg/TransitiveClosure/closeSimpleDirectedGraph(org.jgrapht.graph.SimpleDirectedGraph)#java/util/HashSet/HashSet()
org/jgrapht/graph/AbstractBaseGraph/DirectedSpecifics/edgesOf(java.lang.Object)#org/jgrapht/util/ArrayUnenforcedSet/get(int)
org/jgrapht/graph/AbstractBaseGraph/DirectedSpecifics/edgesOf(java.lang.Object)#java/util/Set/contains(java.lang.Object)
org/jgrapht/graph/AbstractBaseGraph/DirectedSpecifics/edgesOf(java.lang.Object)#java/util/Set/remove(java.lang.Object)
org/jgrapht/graph/AbstractBaseGraph/DirectedSpecifics/edgesOf(java.lang.Object)#org/jgrapht/util/ArrayUnenforcedSet/size()
org/jgrapht/graph/AbstractBaseGraph/DirectedSpecifics/edgesOf(java.lang.Object)#org/jgrapht/util/ArrayUnenforcedSet/addAll(java.util.Collection)
org/jgrapht/graph/AbstractBaseGraph/DirectedSpecifics/edgesOf(java.lang.Object)#org/jgrapht/util/ArrayUnenforcedSet/remove(int)
org/jgrapht/graph/AbstractBaseGraph/DirectedSpecifics/edgesOf(java.lang.Object)#org/jgrapht/graph/AbstractBaseGraph$DirectedSpecifics/getEdgeContainer(java.lang.Object)
org/jgrapht/graph/AbstractBaseGraph/DirectedSpecifics/edgesOf(java.lang.Object)#org/jgrapht/graph/AbstractBaseGraph$DirectedSpecifics/getAllEdges(java.lang.Object,java.lang.Object)
org/jgrapht/graph/AbstractBaseGraph/DirectedSpecifics/edgesOf(java.lang.Object)#java/util/Collections/unmodifiableSet(java.util.Set)
org/jgrapht/experimental/alg/color/GreedyColoring/smallestDegreeLastOrder()#java/lang/Integer/intValue()
org/jgrapht/experimental/alg/color/GreedyColoring/smallestDegreeLastOrder()#java/util/ArrayList/ArrayList()
org/jgrapht/experimental/alg/color/GreedyColoring/smallestDegreeLastOrder()#java/util/ArrayList/ArrayList(int)
org/jgrapht/experimental/alg/color/GreedyColoring/smallestDegreeLastOrder()#java/util/List/remove(int)
org/jgrapht/experimental/alg/color/GreedyColoring/smallestDegreeLastOrder()#java/lang/Integer/Integer(int)
org/jgrapht/experimental/alg/color/GreedyColoring/smallestDegreeLastOrder()#java/util/List/size()
org/jgrapht/experimental/alg/color/GreedyColoring/smallestDegreeLastOrder()#java/util/List/add(java.lang.Object)
org/jgrapht/experimental/alg/color/GreedyColoring/smallestDegreeLastOrder()#java/util/List/remove(java.lang.Object)
org/jgrapht/experimental/alg/color/GreedyColoring/smallestDegreeLastOrder()#java/lang/Integer/valueOf(int)
org/jgrapht/experimental/alg/color/GreedyColoring/smallestDegreeLastOrder()#java/util/List/get(int)
org/jgrapht/generate/GridGraphGenerator/generateGraph(org.jgrapht.Graph,org.jgrapht.VertexFactory,java.util.Map)#java/lang/Integer/intValue()
org/jgrapht/generate/GridGraphGenerator/generateGraph(org.jgrapht.Graph,org.jgrapht.VertexFactory,java.util.Map)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/jgrapht/generate/GridGraphGenerator/generateGraph(org.jgrapht.Graph,org.jgrapht.VertexFactory,java.util.Map)#java/util/Iterator/hasNext()
org/jgrapht/generate/GridGraphGenerator/generateGraph(org.jgrapht.Graph,org.jgrapht.VertexFactory,java.util.Map)#java/lang/StringBuilder/append(java.lang.String)
org/jgrapht/generate/GridGraphGenerator/generateGraph(org.jgrapht.Graph,org.jgrapht.VertexFactory,java.util.Map)#java/lang/StringBuilder/append(int)
org/jgrapht/generate/GridGraphGenerator/generateGraph(org.jgrapht.Graph,org.jgrapht.VertexFactory,java.util.Map)#java/util/Map/get(java.lang.Object)
org/jgrapht/generate/GridGraphGenerator/generateGraph(org.jgrapht.Graph,org.jgrapht.VertexFactory,java.util.Map)#java/lang/StringBuilder/StringBuilder()
org/jgrapht/generate/GridGraphGenerator/generateGraph(org.jgrapht.Graph,org.jgrapht.VertexFactory,java.util.Map)#java/util/Set/iterator()
org/jgrapht/generate/GridGraphGenerator/generateGraph(org.jgrapht.Graph,org.jgrapht.VertexFactory,java.util.Map)#java/lang/Integer/valueOf(int)
org/jgrapht/generate/GridGraphGenerator/generateGraph(org.jgrapht.Graph,org.jgrapht.VertexFactory,java.util.Map)#java/lang/StringBuilder/toString()
org/jgrapht/generate/GridGraphGenerator/generateGraph(org.jgrapht.Graph,org.jgrapht.VertexFactory,java.util.Map)#java/util/TreeMap/TreeMap()
org/jgrapht/generate/GridGraphGenerator/generateGraph(org.jgrapht.Graph,org.jgrapht.VertexFactory,java.util.Map)#java/util/Iterator/next()
org/jgrapht/generate/GridGraphGenerator/generateGraph(org.jgrapht.Graph,org.jgrapht.VertexFactory,java.util.Map)#java/util/Map/keySet()
org/jgrapht/alg/BiconnectivityInspector/getBiconnectedVertexComponents()#java/util/Iterator/hasNext()
org/jgrapht/alg/BiconnectivityInspector/getBiconnectedVertexComponents()#org/jgrapht/UndirectedGraph/vertexSet()
org/jgrapht/alg/BiconnectivityInspector/getBiconnectedVertexComponents()#java/util/Iterator/next()
org/jgrapht/alg/BiconnectivityInspector/getBiconnectedVertexComponents()#java/util/Set/isEmpty()
org/jgrapht/alg/BiconnectivityInspector/getBiconnectedVertexComponents()#org/jgrapht/alg/BlockCutpointGraph/vertexSet()
org/jgrapht/alg/BiconnectivityInspector/getBiconnectedVertexComponents()#java/util/HashSet/HashSet()
org/jgrapht/alg/BiconnectivityInspector/getBiconnectedVertexComponents()#java/util/Set/add(java.lang.Object)
org/jgrapht/alg/BiconnectivityInspector/getBiconnectedVertexComponents()#org/jgrapht/UndirectedGraph/edgeSet()
org/jgrapht/alg/BiconnectivityInspector/getBiconnectedVertexComponents()#java/util/Set/iterator()
org/jgrapht/alg/MinSourceSinkCut/computeMinCut(java.lang.Object,java.lang.Object)#java/util/Iterator/hasNext()
org/jgrapht/alg/MinSourceSinkCut/computeMinCut(java.lang.Object,java.lang.Object)#java/util/LinkedList/LinkedList()
org/jgrapht/alg/MinSourceSinkCut/computeMinCut(java.lang.Object,java.lang.Object)#java/util/Set/contains(java.lang.Object)
org/jgrapht/alg/MinSourceSinkCut/computeMinCut(java.lang.Object,java.lang.Object)#java/util/Set/iterator()
org/jgrapht/alg/MinSourceSinkCut/computeMinCut(java.lang.Object,java.lang.Object)#java/util/HashSet/HashSet(java.util.Collection)
org/jgrapht/alg/MinSourceSinkCut/computeMinCut(java.lang.Object,java.lang.Object)#java/util/Queue/isEmpty()
org/jgrapht/alg/MinSourceSinkCut/computeMinCut(java.lang.Object,java.lang.Object)#org/jgrapht/DirectedGraph/getEdgeWeight(java.lang.Object)
org/jgrapht/alg/MinSourceSinkCut/computeMinCut(java.lang.Object,java.lang.Object)#java/util/Iterator/remove()
org/jgrapht/alg/MinSourceSinkCut/computeMinCut(java.lang.Object,java.lang.Object)#java/lang/Math/abs(double)
org/jgrapht/alg/MinSourceSinkCut/computeMinCut(java.lang.Object,java.lang.Object)#java/util/Queue/add(java.lang.Object)
org/jgrapht/alg/MinSourceSinkCut/computeMinCut(java.lang.Object,java.lang.Object)#java/util/Map/get(java.lang.Object)
org/jgrapht/alg/MinSourceSinkCut/computeMinCut(java.lang.Object,java.lang.Object)#java/util/Iterator/next()
org/jgrapht/alg/MinSourceSinkCut/computeMinCut(java.lang.Object,java.lang.Object)#java/lang/Double/doubleValue()
org/jgrapht/alg/MinSourceSinkCut/computeMinCut(java.lang.Object,java.lang.Object)#java/util/Queue/remove()
org/jgrapht/alg/MinSourceSinkCut/computeMinCut(java.lang.Object,java.lang.Object)#java/util/HashSet/HashSet()
org/jgrapht/alg/MinSourceSinkCut/computeMinCut(java.lang.Object,java.lang.Object)#java/util/Set/add(java.lang.Object)
org/jgrapht/generate/SimpleWeightedGraphMatrixGenerator/generateGraph(org.jgrapht.WeightedGraph,org.jgrapht.VertexFactory,java.util.Map)#org/jgrapht/WeightedGraph/addEdge(java.lang.Object,java.lang.Object)
org/jgrapht/generate/SimpleWeightedGraphMatrixGenerator/generateGraph(org.jgrapht.WeightedGraph,org.jgrapht.VertexFactory,java.util.Map)#java/util/Iterator/hasNext()
org/jgrapht/generate/SimpleWeightedGraphMatrixGenerator/generateGraph(org.jgrapht.WeightedGraph,org.jgrapht.VertexFactory,java.util.Map)#org/jgrapht/WeightedGraph/addVertex(java.lang.Object)
org/jgrapht/generate/SimpleWeightedGraphMatrixGenerator/generateGraph(org.jgrapht.WeightedGraph,org.jgrapht.VertexFactory,java.util.Map)#java/util/List/size()
org/jgrapht/generate/SimpleWeightedGraphMatrixGenerator/generateGraph(org.jgrapht.WeightedGraph,org.jgrapht.VertexFactory,java.util.Map)#java/util/Iterator/next()
org/jgrapht/generate/SimpleWeightedGraphMatrixGenerator/generateGraph(org.jgrapht.WeightedGraph,org.jgrapht.VertexFactory,java.util.Map)#java/util/List/get(int)
org/jgrapht/generate/SimpleWeightedGraphMatrixGenerator/generateGraph(org.jgrapht.WeightedGraph,org.jgrapht.VertexFactory,java.util.Map)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/jgrapht/generate/SimpleWeightedGraphMatrixGenerator/generateGraph(org.jgrapht.WeightedGraph,org.jgrapht.VertexFactory,java.util.Map)#java/util/List/iterator()
org/jgrapht/generate/SimpleWeightedGraphMatrixGenerator/generateGraph(org.jgrapht.WeightedGraph,org.jgrapht.VertexFactory,java.util.Map)#java/lang/AssertionError/AssertionError()
org/jgrapht/experimental/dag/DirectedAcyclicGraph/dfsF(java.lang.Object,java.util.Set,org.jgrapht.experimental.dag.DirectedAcyclicGraph$Visited,org.jgrapht.experimental.dag.DirectedAcyclicGraph$Region)#java/util/Iterator/hasNext()
org/jgrapht/experimental/dag/DirectedAcyclicGraph/dfsF(java.lang.Object,java.util.Set,org.jgrapht.experimental.dag.DirectedAcyclicGraph$Visited,org.jgrapht.experimental.dag.DirectedAcyclicGraph$Region)#org/jgrapht/experimental/dag/DirectedAcyclicGraph$Visited/setVisited(int)
org/jgrapht/experimental/dag/DirectedAcyclicGraph/dfsF(java.lang.Object,java.util.Set,org.jgrapht.experimental.dag.DirectedAcyclicGraph$Visited,org.jgrapht.experimental.dag.DirectedAcyclicGraph$Region)#java/util/Iterator/next()
org/jgrapht/experimental/dag/DirectedAcyclicGraph/dfsF(java.lang.Object,java.util.Set,org.jgrapht.experimental.dag.DirectedAcyclicGraph$Visited,org.jgrapht.experimental.dag.DirectedAcyclicGraph$Region)#org/jgrapht/experimental/dag/DirectedAcyclicGraph$TopoOrderMapping/getTopologicalIndex(java.lang.Object)
org/jgrapht/experimental/dag/DirectedAcyclicGraph/dfsF(java.lang.Object,java.util.Set,org.jgrapht.experimental.dag.DirectedAcyclicGraph$Visited,org.jgrapht.experimental.dag.DirectedAcyclicGraph$Region)#org/jgrapht/experimental/dag/DirectedAcyclicGraph$CycleFoundException/CycleFoundException()
org/jgrapht/experimental/dag/DirectedAcyclicGraph/dfsF(java.lang.Object,java.util.Set,org.jgrapht.experimental.dag.DirectedAcyclicGraph$Visited,org.jgrapht.experimental.dag.DirectedAcyclicGraph$Region)#org/jgrapht/experimental/dag/DirectedAcyclicGraph$Region/isIn(int)
org/jgrapht/experimental/dag/DirectedAcyclicGraph/dfsF(java.lang.Object,java.util.Set,org.jgrapht.experimental.dag.DirectedAcyclicGraph$Visited,org.jgrapht.experimental.dag.DirectedAcyclicGraph$Region)#org/jgrapht/experimental/dag/DirectedAcyclicGraph/outgoingEdgesOf(java.lang.Object)
org/jgrapht/experimental/dag/DirectedAcyclicGraph/dfsF(java.lang.Object,java.util.Set,org.jgrapht.experimental.dag.DirectedAcyclicGraph$Visited,org.jgrapht.experimental.dag.DirectedAcyclicGraph$Region)#org/jgrapht/experimental/dag/DirectedAcyclicGraph/getEdgeTarget(java.lang.Object)
org/jgrapht/experimental/dag/DirectedAcyclicGraph/dfsF(java.lang.Object,java.util.Set,org.jgrapht.experimental.dag.DirectedAcyclicGraph$Visited,org.jgrapht.experimental.dag.DirectedAcyclicGraph$Region)#java/util/Set/add(java.lang.Object)
org/jgrapht/experimental/dag/DirectedAcyclicGraph/dfsF(java.lang.Object,java.util.Set,org.jgrapht.experimental.dag.DirectedAcyclicGraph$Visited,org.jgrapht.experimental.dag.DirectedAcyclicGraph$Region)#org/jgrapht/experimental/dag/DirectedAcyclicGraph$Visited/getVisited(int)
org/jgrapht/experimental/dag/DirectedAcyclicGraph/dfsF(java.lang.Object,java.util.Set,org.jgrapht.experimental.dag.DirectedAcyclicGraph$Visited,org.jgrapht.experimental.dag.DirectedAcyclicGraph$Region)#java/lang/Integer/intValue()
org/jgrapht/experimental/dag/DirectedAcyclicGraph/dfsF(java.lang.Object,java.util.Set,org.jgrapht.experimental.dag.DirectedAcyclicGraph$Visited,org.jgrapht.experimental.dag.DirectedAcyclicGraph$Region)#org/jgrapht/experimental/dag/DirectedAcyclicGraph$Visited/clearVisited(int)
org/jgrapht/experimental/dag/DirectedAcyclicGraph/dfsF(java.lang.Object,java.util.Set,org.jgrapht.experimental.dag.DirectedAcyclicGraph$Visited,org.jgrapht.experimental.dag.DirectedAcyclicGraph$Region)#java/util/Set/iterator()
org/jgrapht/experimental/dag/DirectedAcyclicGraph/dfsB(java.lang.Object,java.util.Set,org.jgrapht.experimental.dag.DirectedAcyclicGraph$Visited,org.jgrapht.experimental.dag.DirectedAcyclicGraph$Region)#java/lang/Integer/intValue()
org/jgrapht/experimental/dag/DirectedAcyclicGraph/dfsB(java.lang.Object,java.util.Set,org.jgrapht.experimental.dag.DirectedAcyclicGraph$Visited,org.jgrapht.experimental.dag.DirectedAcyclicGraph$Region)#org/jgrapht/experimental/dag/DirectedAcyclicGraph$Visited/setVisited(int)
org/jgrapht/experimental/dag/DirectedAcyclicGraph/dfsB(java.lang.Object,java.util.Set,org.jgrapht.experimental.dag.DirectedAcyclicGraph$Visited,org.jgrapht.experimental.dag.DirectedAcyclicGraph$Region)#java/util/Iterator/next()
org/jgrapht/experimental/dag/DirectedAcyclicGraph/dfsB(java.lang.Object,java.util.Set,org.jgrapht.experimental.dag.DirectedAcyclicGraph$Visited,org.jgrapht.experimental.dag.DirectedAcyclicGraph$Region)#org/jgrapht/experimental/dag/DirectedAcyclicGraph$TopoOrderMapping/getTopologicalIndex(java.lang.Object)
org/jgrapht/experimental/dag/DirectedAcyclicGraph/dfsB(java.lang.Object,java.util.Set,org.jgrapht.experimental.dag.DirectedAcyclicGraph$Visited,org.jgrapht.experimental.dag.DirectedAcyclicGraph$Region)#java/util/Set/iterator()
org/jgrapht/experimental/dag/DirectedAcyclicGraph/dfsB(java.lang.Object,java.util.Set,org.jgrapht.experimental.dag.DirectedAcyclicGraph$Visited,org.jgrapht.experimental.dag.DirectedAcyclicGraph$Region)#org/jgrapht/experimental/dag/DirectedAcyclicGraph$Region/isIn(int)
org/jgrapht/experimental/dag/DirectedAcyclicGraph/dfsB(java.lang.Object,java.util.Set,org.jgrapht.experimental.dag.DirectedAcyclicGraph$Visited,org.jgrapht.experimental.dag.DirectedAcyclicGraph$Region)#java/util/Set/add(java.lang.Object)
org/jgrapht/experimental/dag/DirectedAcyclicGraph/dfsB(java.lang.Object,java.util.Set,org.jgrapht.experimental.dag.DirectedAcyclicGraph$Visited,org.jgrapht.experimental.dag.DirectedAcyclicGraph$Region)#org/jgrapht/experimental/dag/DirectedAcyclicGraph$Visited/getVisited(int)
org/jgrapht/experimental/dag/DirectedAcyclicGraph/dfsB(java.lang.Object,java.util.Set,org.jgrapht.experimental.dag.DirectedAcyclicGraph$Visited,org.jgrapht.experimental.dag.DirectedAcyclicGraph$Region)#org/jgrapht/experimental/dag/DirectedAcyclicGraph/incomingEdgesOf(java.lang.Object)
org/jgrapht/experimental/dag/DirectedAcyclicGraph/dfsB(java.lang.Object,java.util.Set,org.jgrapht.experimental.dag.DirectedAcyclicGraph$Visited,org.jgrapht.experimental.dag.DirectedAcyclicGraph$Region)#java/util/Iterator/hasNext()
org/jgrapht/experimental/dag/DirectedAcyclicGraph/dfsB(java.lang.Object,java.util.Set,org.jgrapht.experimental.dag.DirectedAcyclicGraph$Visited,org.jgrapht.experimental.dag.DirectedAcyclicGraph$Region)#org/jgrapht/experimental/dag/DirectedAcyclicGraph/getEdgeSource(java.lang.Object)
org/jgrapht/experimental/dag/DirectedAcyclicGraph/reorder(java.util.Set,java.util.Set,org.jgrapht.experimental.dag.DirectedAcyclicGraph$Visited)#java/util/SortedSet/add(java.lang.Object)
org/jgrapht/experimental/dag/DirectedAcyclicGraph/reorder(java.util.Set,java.util.Set,org.jgrapht.experimental.dag.DirectedAcyclicGraph$Visited)#java/lang/Integer/intValue()
org/jgrapht/experimental/dag/DirectedAcyclicGraph/reorder(java.util.Set,java.util.Set,org.jgrapht.experimental.dag.DirectedAcyclicGraph$Visited)#java/util/ArrayList/ArrayList(java.util.Collection)
org/jgrapht/experimental/dag/DirectedAcyclicGraph/reorder(java.util.Set,java.util.Set,org.jgrapht.experimental.dag.DirectedAcyclicGraph$Visited)#java/util/Iterator/hasNext()
org/jgrapht/experimental/dag/DirectedAcyclicGraph/reorder(java.util.Set,java.util.Set,org.jgrapht.experimental.dag.DirectedAcyclicGraph$Visited)#java/util/Set/size()
org/jgrapht/experimental/dag/DirectedAcyclicGraph/reorder(java.util.Set,java.util.Set,org.jgrapht.experimental.dag.DirectedAcyclicGraph$Visited)#org/jgrapht/experimental/dag/DirectedAcyclicGraph$TopoOrderMapping/putVertex(java.lang.Integer,java.lang.Object)
org/jgrapht/experimental/dag/DirectedAcyclicGraph/reorder(java.util.Set,java.util.Set,org.jgrapht.experimental.dag.DirectedAcyclicGraph$Visited)#org/jgrapht/experimental/dag/DirectedAcyclicGraph$TopoOrderMapping/getTopologicalIndex(java.lang.Object)
org/jgrapht/experimental/dag/DirectedAcyclicGraph/reorder(java.util.Set,java.util.Set,org.jgrapht.experimental.dag.DirectedAcyclicGraph$Visited)#java/util/SortedSet/iterator()
org/jgrapht/experimental/dag/DirectedAcyclicGraph/reorder(java.util.Set,java.util.Set,org.jgrapht.experimental.dag.DirectedAcyclicGraph$Visited)#org/jgrapht/experimental/dag/DirectedAcyclicGraph$Visited/clearVisited(int)
org/jgrapht/experimental/dag/DirectedAcyclicGraph/reorder(java.util.Set,java.util.Set,org.jgrapht.experimental.dag.DirectedAcyclicGraph$Visited)#java/util/List/iterator()
org/jgrapht/experimental/dag/DirectedAcyclicGraph/reorder(java.util.Set,java.util.Set,org.jgrapht.experimental.dag.DirectedAcyclicGraph$Visited)#java/util/TreeSet/TreeSet()
org/jgrapht/experimental/dag/DirectedAcyclicGraph/reorder(java.util.Set,java.util.Set,org.jgrapht.experimental.dag.DirectedAcyclicGraph$Visited)#java/util/Iterator/next()
org/jgrapht/experimental/dag/DirectedAcyclicGraph/reorder(java.util.Set,java.util.Set,org.jgrapht.experimental.dag.DirectedAcyclicGraph$Visited)#java/util/Collections/sort(java.util.List,java.util.Comparator)
org/jgrapht/alg/EulerianCircuit/getEulerianCircuitVertices(org.jgrapht.UndirectedGraph)#java/util/Iterator/hasNext()
org/jgrapht/alg/EulerianCircuit/getEulerianCircuitVertices(org.jgrapht.UndirectedGraph)#java/util/Set/size()
org/jgrapht/alg/EulerianCircuit/getEulerianCircuitVertices(org.jgrapht.UndirectedGraph)#org/jgrapht/UndirectedGraph/vertexSet()
org/jgrapht/alg/EulerianCircuit/getEulerianCircuitVertices(org.jgrapht.UndirectedGraph)#java/util/Iterator/next()
org/jgrapht/alg/EulerianCircuit/getEulerianCircuitVertices(org.jgrapht.UndirectedGraph)#java/util/LinkedList/LinkedList()
org/jgrapht/alg/EulerianCircuit/getEulerianCircuitVertices(org.jgrapht.UndirectedGraph)#org/jgrapht/UndirectedGraph/removeEdge(java.lang.Object,java.lang.Object)
org/jgrapht/alg/EulerianCircuit/getEulerianCircuitVertices(org.jgrapht.UndirectedGraph)#java/util/List/add(java.lang.Object)
org/jgrapht/alg/EulerianCircuit/getEulerianCircuitVertices(org.jgrapht.UndirectedGraph)#org/jgrapht/UndirectedGraph/containsEdge(java.lang.Object,java.lang.Object)
org/jgrapht/alg/EulerianCircuit/getEulerianCircuitVertices(org.jgrapht.UndirectedGraph)#java/util/List/add(int,java.lang.Object)
org/jgrapht/alg/EulerianCircuit/getEulerianCircuitVertices(org.jgrapht.UndirectedGraph)#java/util/List/iterator()
org/jgrapht/alg/EulerianCircuit/getEulerianCircuitVertices(org.jgrapht.UndirectedGraph)#org/jgrapht/UndirectedGraph/edgeSet()
org/jgrapht/alg/EulerianCircuit/getEulerianCircuitVertices(org.jgrapht.UndirectedGraph)#java/util/Set/iterator()
