org/eclipse/acceleo/model/mtl/resource/AcceleoResourceSetImpl/delegatedGetResource(org.eclipse.emf.common.util.URI,boolean)#org/eclipse/emf/common/util/EList/iterator()
org/eclipse/acceleo/model/mtl/resource/AcceleoResourceSetImpl/delegatedGetResource(org.eclipse.emf.common.util.URI,boolean)#java/lang/Object/toString()
org/eclipse/acceleo/model/mtl/resource/AcceleoResourceSetImpl/delegatedGetResource(org.eclipse.emf.common.util.URI,boolean)#java/lang/String/valueOf(java.lang.Object)
org/eclipse/acceleo/model/mtl/resource/AcceleoResourceSetImpl/delegatedGetResource(org.eclipse.emf.common.util.URI,boolean)#java/util/Iterator/hasNext()
org/eclipse/acceleo/model/mtl/resource/AcceleoResourceSetImpl/delegatedGetResource(org.eclipse.emf.common.util.URI,boolean)#java/lang/StringBuilder/append(java.lang.String)
org/eclipse/acceleo/model/mtl/resource/AcceleoResourceSetImpl/delegatedGetResource(org.eclipse.emf.common.util.URI,boolean)#org/eclipse/emf/common/util/URI/segments()
org/eclipse/acceleo/model/mtl/resource/AcceleoResourceSetImpl/delegatedGetResource(org.eclipse.emf.common.util.URI,boolean)#java/lang/String/length()
org/eclipse/acceleo/model/mtl/resource/AcceleoResourceSetImpl/delegatedGetResource(org.eclipse.emf.common.util.URI,boolean)#java/lang/String/equals(java.lang.Object)
org/eclipse/acceleo/model/mtl/resource/AcceleoResourceSetImpl/delegatedGetResource(org.eclipse.emf.common.util.URI,boolean)#org/eclipse/emf/common/util/URI/isPlatformResource()
org/eclipse/acceleo/model/mtl/resource/AcceleoResourceSetImpl/delegatedGetResource(org.eclipse.emf.common.util.URI,boolean)#java/lang/String/substring(int)
org/eclipse/acceleo/model/mtl/resource/AcceleoResourceSetImpl/delegatedGetResource(org.eclipse.emf.common.util.URI,boolean)#org/eclipse/emf/common/util/URI/createURI(java.lang.String)
org/eclipse/acceleo/model/mtl/resource/AcceleoResourceSetImpl/delegatedGetResource(org.eclipse.emf.common.util.URI,boolean)#java/lang/String/startsWith(java.lang.String)
org/eclipse/acceleo/model/mtl/resource/AcceleoResourceSetImpl/delegatedGetResource(org.eclipse.emf.common.util.URI,boolean)#java/lang/String/contains(java.lang.CharSequence)
org/eclipse/acceleo/model/mtl/resource/AcceleoResourceSetImpl/delegatedGetResource(org.eclipse.emf.common.util.URI,boolean)#java/io/File/exists()
org/eclipse/acceleo/model/mtl/resource/AcceleoResourceSetImpl/delegatedGetResource(org.eclipse.emf.common.util.URI,boolean)#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/eclipse/acceleo/model/mtl/resource/AcceleoResourceSetImpl/delegatedGetResource(org.eclipse.emf.common.util.URI,boolean)#java/util/Iterator/next()
org/eclipse/acceleo/model/mtl/resource/AcceleoResourceSetImpl/delegatedGetResource(org.eclipse.emf.common.util.URI,boolean)#org/eclipse/emf/common/util/URI/isFile()
org/eclipse/acceleo/model/mtl/resource/AcceleoResourceSetImpl/delegatedGetResource(org.eclipse.emf.common.util.URI,boolean)#org/eclipse/emf/ecore/resource/impl/ResourceSetImpl/delegatedGetResource(org.eclipse.emf.common.util.URI,boolean)
org/eclipse/acceleo/model/mtl/resource/AcceleoResourceSetImpl/delegatedGetResource(org.eclipse.emf.common.util.URI,boolean)#java/io/File/File(java.lang.String)
org/eclipse/acceleo/model/mtl/resource/AcceleoResourceSetImpl/delegatedGetResource(org.eclipse.emf.common.util.URI,boolean)#org/eclipse/emf/common/util/URI/decode(java.lang.String)
org/eclipse/acceleo/model/mtl/resource/AcceleoResourceSetImpl/delegatedGetResource(org.eclipse.emf.common.util.URI,boolean)#java/lang/String/substring(int,int)
org/eclipse/acceleo/model/mtl/resource/AcceleoResourceSetImpl/delegatedGetResource(org.eclipse.emf.common.util.URI,boolean)#org/eclipse/acceleo/model/mtl/resource/AcceleoResourceSetImpl/getResource(org.eclipse.emf.common.util.URI,boolean)
org/eclipse/acceleo/model/mtl/resource/AcceleoResourceSetImpl/delegatedGetResource(org.eclipse.emf.common.util.URI,boolean)#org/eclipse/emf/common/util/EList/size()
org/eclipse/acceleo/model/mtl/resource/AcceleoResourceSetImpl/delegatedGetResource(org.eclipse.emf.common.util.URI,boolean)#java/lang/String/indexOf(java.lang.String)
org/eclipse/acceleo/model/mtl/resource/AcceleoResourceSetImpl/delegatedGetResource(org.eclipse.emf.common.util.URI,boolean)#java/lang/StringBuilder/toString()
org/eclipse/acceleo/model/mtl/resource/AcceleoResourceSetImpl/delegatedGetResource(org.eclipse.emf.common.util.URI,boolean)#org/eclipse/emf/ecore/resource/Resource/getURI()
org/eclipse/acceleo/model/mtl/resource/EMtlResourceImpl/getPositions(boolean)#org/eclipse/emf/common/util/EList/iterator()
org/eclipse/acceleo/model/mtl/resource/EMtlResourceImpl/getPositions(boolean)#org/eclipse/emf/ecore/EAnnotation/getSource()
org/eclipse/acceleo/model/mtl/resource/EMtlResourceImpl/getPositions(boolean)#java/util/Iterator/hasNext()
org/eclipse/acceleo/model/mtl/resource/EMtlResourceImpl/getPositions(boolean)#org/eclipse/emf/ecore/EAnnotation/setSource(java.lang.String)
org/eclipse/acceleo/model/mtl/resource/EMtlResourceImpl/getPositions(boolean)#org/eclipse/acceleo/model/mtl/resource/EMtlResourceImpl/getContents()
org/eclipse/acceleo/model/mtl/resource/EMtlResourceImpl/getPositions(boolean)#java/util/Iterator/next()
org/eclipse/acceleo/model/mtl/resource/EMtlResourceImpl/getPositions(boolean)#org/eclipse/emf/common/util/EList/add(java.lang.Object)
org/eclipse/acceleo/model/mtl/resource/EMtlResourceImpl/getPositions(boolean)#java/lang/String/equals(java.lang.Object)
org/eclipse/acceleo/model/mtl/resource/EMtlResourceImpl/getPositions(boolean)#org/eclipse/emf/ecore/EcoreFactory/createEAnnotation()
org/eclipse/acceleo/model/mtl/resource/EMtlResourceImpl/fixVariableAmbiguities(org.eclipse.emf.ecore.EObject)#java/lang/Integer/intValue()
org/eclipse/acceleo/model/mtl/resource/EMtlResourceImpl/fixVariableAmbiguities(org.eclipse.emf.ecore.EObject)#org/eclipse/ocl/expressions/Variable/getName()
org/eclipse/acceleo/model/mtl/resource/EMtlResourceImpl/fixVariableAmbiguities(org.eclipse.emf.ecore.EObject)#java/lang/StringBuilder/append(int)
org/eclipse/acceleo/model/mtl/resource/EMtlResourceImpl/fixVariableAmbiguities(org.eclipse.emf.ecore.EObject)#java/lang/String/length()
org/eclipse/acceleo/model/mtl/resource/EMtlResourceImpl/fixVariableAmbiguities(org.eclipse.emf.ecore.EObject)#org/eclipse/ocl/expressions/Variable/setName(java.lang.String)
org/eclipse/acceleo/model/mtl/resource/EMtlResourceImpl/fixVariableAmbiguities(org.eclipse.emf.ecore.EObject)#java/util/List/size()
org/eclipse/acceleo/model/mtl/resource/EMtlResourceImpl/fixVariableAmbiguities(org.eclipse.emf.ecore.EObject)#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/eclipse/acceleo/model/mtl/resource/EMtlResourceImpl/fixVariableAmbiguities(org.eclipse.emf.ecore.EObject)#java/lang/String/substring(int)
org/eclipse/acceleo/model/mtl/resource/EMtlResourceImpl/fixVariableAmbiguities(org.eclipse.emf.ecore.EObject)#java/util/List/add(java.lang.Object)
org/eclipse/acceleo/model/mtl/resource/EMtlResourceImpl/fixVariableAmbiguities(org.eclipse.emf.ecore.EObject)#java/util/List/contains(java.lang.Object)
org/eclipse/acceleo/model/mtl/resource/EMtlResourceImpl/fixVariableAmbiguities(org.eclipse.emf.ecore.EObject)#java/lang/Integer/valueOf(java.lang.String)
org/eclipse/acceleo/model/mtl/resource/EMtlResourceImpl/fixVariableAmbiguities(org.eclipse.emf.ecore.EObject)#java/lang/String/matches(java.lang.String)
org/eclipse/acceleo/model/mtl/resource/EMtlResourceImpl/fixVariableAmbiguities(org.eclipse.emf.ecore.EObject)#java/lang/StringBuilder/toString()
org/eclipse/acceleo/model/mtl/resource/EMtlResourceImpl/fixVariableAmbiguities(org.eclipse.emf.ecore.EObject)#java/lang/String/startsWith(java.lang.String)
org/eclipse/acceleo/model/mtl/resource/EMtlResourceImpl/fixVariableAmbiguities(org.eclipse.emf.ecore.EObject)#java/util/List/get(int)
org/eclipse/acceleo/model/mtl/resource/EMtlResourceImpl/savePosition(org.eclipse.emf.ecore.EAnnotation,org.eclipse.ocl.utilities.ASTNode,int,int,int)#org/eclipse/emf/ecore/EAnnotation/getEAnnotations()
org/eclipse/acceleo/model/mtl/resource/EMtlResourceImpl/savePosition(org.eclipse.emf.ecore.EAnnotation,org.eclipse.ocl.utilities.ASTNode,int,int,int)#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/eclipse/acceleo/model/mtl/resource/EMtlResourceImpl/savePosition(org.eclipse.emf.ecore.EAnnotation,org.eclipse.ocl.utilities.ASTNode,int,int,int)#org/eclipse/emf/common/util/EList/add(java.lang.Object)
org/eclipse/acceleo/model/mtl/resource/EMtlResourceImpl/savePosition(org.eclipse.emf.ecore.EAnnotation,org.eclipse.ocl.utilities.ASTNode,int,int,int)#org/eclipse/emf/common/util/EList/size()
org/eclipse/acceleo/model/mtl/resource/EMtlResourceImpl/savePosition(org.eclipse.emf.ecore.EAnnotation,org.eclipse.ocl.utilities.ASTNode,int,int,int)#org/eclipse/emf/ecore/EcoreFactory/createEAnnotation()
org/eclipse/acceleo/model/mtl/resource/EMtlResourceImpl/savePosition(org.eclipse.emf.ecore.EAnnotation,org.eclipse.ocl.utilities.ASTNode,int,int,int)#org/eclipse/emf/common/util/EMap/put(java.lang.Object,java.lang.Object)
org/eclipse/acceleo/model/mtl/resource/EMtlResourceImpl/savePosition(org.eclipse.emf.ecore.EAnnotation,org.eclipse.ocl.utilities.ASTNode,int,int,int)#java/lang/StringBuilder/append(int)
org/eclipse/acceleo/model/mtl/resource/EMtlResourceImpl/savePosition(org.eclipse.emf.ecore.EAnnotation,org.eclipse.ocl.utilities.ASTNode,int,int,int)#org/eclipse/emf/ecore/EAnnotation/setSource(java.lang.String)
org/eclipse/acceleo/model/mtl/resource/EMtlResourceImpl/savePosition(org.eclipse.emf.ecore.EAnnotation,org.eclipse.ocl.utilities.ASTNode,int,int,int)#org/eclipse/emf/ecore/EAnnotation/getReferences()
org/eclipse/acceleo/model/mtl/resource/EMtlResourceImpl/savePosition(org.eclipse.emf.ecore.EAnnotation,org.eclipse.ocl.utilities.ASTNode,int,int,int)#org/eclipse/emf/ecore/EAnnotation/getDetails()
org/eclipse/acceleo/model/mtl/resource/EMtlResourceImpl/savePosition(org.eclipse.emf.ecore.EAnnotation,org.eclipse.ocl.utilities.ASTNode,int,int,int)#java/lang/StringBuilder/toString()
org/eclipse/acceleo/model/mtl/resource/EMtlResourceImpl/savePosition(org.eclipse.emf.ecore.EAnnotation,org.eclipse.ocl.utilities.ASTNode,int,int,int)#java/lang/String/valueOf(int)
org/eclipse/acceleo/model/mtl/resource/EMtlResourceImpl/restorePositions(org.eclipse.emf.ecore.EAnnotation)#org/eclipse/ocl/utilities/ASTNode/getEndPosition()
org/eclipse/acceleo/model/mtl/resource/EMtlResourceImpl/restorePositions(org.eclipse.emf.ecore.EAnnotation)#java/util/Iterator/hasNext()
org/eclipse/acceleo/model/mtl/resource/EMtlResourceImpl/restorePositions(org.eclipse.emf.ecore.EAnnotation)#org/eclipse/emf/ecore/EAnnotation/getEAnnotations()
org/eclipse/acceleo/model/mtl/resource/EMtlResourceImpl/restorePositions(org.eclipse.emf.ecore.EAnnotation)#org/eclipse/ocl/utilities/ASTNode/getStartPosition()
org/eclipse/acceleo/model/mtl/resource/EMtlResourceImpl/restorePositions(org.eclipse.emf.ecore.EAnnotation)#org/eclipse/emf/common/util/EList/add(java.lang.Object)
org/eclipse/acceleo/model/mtl/resource/EMtlResourceImpl/restorePositions(org.eclipse.emf.ecore.EAnnotation)#org/eclipse/emf/common/util/EMap/get(java.lang.Object)
org/eclipse/acceleo/model/mtl/resource/EMtlResourceImpl/restorePositions(org.eclipse.emf.ecore.EAnnotation)#java/lang/Integer/parseInt(java.lang.String)
org/eclipse/acceleo/model/mtl/resource/EMtlResourceImpl/restorePositions(org.eclipse.emf.ecore.EAnnotation)#org/eclipse/ocl/utilities/ASTNode/setStartPosition(int)
org/eclipse/acceleo/model/mtl/resource/EMtlResourceImpl/restorePositions(org.eclipse.emf.ecore.EAnnotation)#org/eclipse/emf/common/util/EList/get(int)
org/eclipse/acceleo/model/mtl/resource/EMtlResourceImpl/restorePositions(org.eclipse.emf.ecore.EAnnotation)#org/eclipse/ocl/utilities/ASTNode/setEndPosition(int)
org/eclipse/acceleo/model/mtl/resource/EMtlResourceImpl/restorePositions(org.eclipse.emf.ecore.EAnnotation)#org/eclipse/emf/common/util/EList/iterator()
org/eclipse/acceleo/model/mtl/resource/EMtlResourceImpl/restorePositions(org.eclipse.emf.ecore.EAnnotation)#org/eclipse/acceleo/common/utils/AcceleoASTNodeAdapter/AcceleoASTNodeAdapter(int)
org/eclipse/acceleo/model/mtl/resource/EMtlResourceImpl/restorePositions(org.eclipse.emf.ecore.EAnnotation)#org/eclipse/ocl/utilities/ASTNode/eAdapters()
org/eclipse/acceleo/model/mtl/resource/EMtlResourceImpl/restorePositions(org.eclipse.emf.ecore.EAnnotation)#org/eclipse/emf/ecore/EAnnotation/getReferences()
org/eclipse/acceleo/model/mtl/resource/EMtlResourceImpl/restorePositions(org.eclipse.emf.ecore.EAnnotation)#java/util/Iterator/next()
org/eclipse/acceleo/model/mtl/resource/EMtlResourceImpl/restorePositions(org.eclipse.emf.ecore.EAnnotation)#org/eclipse/emf/ecore/EAnnotation/getDetails()
org/eclipse/acceleo/model/mtl/resource/EMtlResourceImpl/fixVariablesAndPositions(org.eclipse.emf.ecore.EAnnotation)#java/util/ArrayList/ArrayList()
org/eclipse/acceleo/model/mtl/resource/EMtlResourceImpl/fixVariablesAndPositions(org.eclipse.emf.ecore.EAnnotation)#org/eclipse/emf/common/util/TreeIterator/next()
org/eclipse/acceleo/model/mtl/resource/EMtlResourceImpl/fixVariablesAndPositions(org.eclipse.emf.ecore.EAnnotation)#java/util/Iterator/hasNext()
org/eclipse/acceleo/model/mtl/resource/EMtlResourceImpl/fixVariablesAndPositions(org.eclipse.emf.ecore.EAnnotation)#java/util/Collections/synchronizedList(java.util.List)
org/eclipse/acceleo/model/mtl/resource/EMtlResourceImpl/fixVariablesAndPositions(org.eclipse.emf.ecore.EAnnotation)#org/eclipse/acceleo/model/mtl/resource/EMtlResourceImpl/getContents()
org/eclipse/acceleo/model/mtl/resource/EMtlResourceImpl/fixVariablesAndPositions(org.eclipse.emf.ecore.EAnnotation)#java/util/Iterator/next()
org/eclipse/acceleo/model/mtl/resource/EMtlResourceImpl/fixVariablesAndPositions(org.eclipse.emf.ecore.EAnnotation)#org/eclipse/emf/common/util/TreeIterator/hasNext()
org/eclipse/acceleo/model/mtl/resource/EMtlResourceImpl/fixVariablesAndPositions(org.eclipse.emf.ecore.EAnnotation)#org/eclipse/acceleo/model/mtl/Module/eAllContents()
org/eclipse/acceleo/model/mtl/resource/EMtlResourceImpl/fixVariablesAndPositions(org.eclipse.emf.ecore.EAnnotation)#java/util/List/clear()
org/eclipse/acceleo/model/mtl/resource/EMtlResourceImpl/fixVariablesAndPositions(org.eclipse.emf.ecore.EAnnotation)#java/util/List/iterator()
org/eclipse/acceleo/model/mtl/resource/AcceleoXMIURIHandler/resolve(org.eclipse.emf.common.util.URI)#java/lang/Object/toString()
org/eclipse/acceleo/model/mtl/resource/AcceleoXMIURIHandler/resolve(org.eclipse.emf.common.util.URI)#java/util/Map$Entry/getKey()
org/eclipse/acceleo/model/mtl/resource/AcceleoXMIURIHandler/resolve(org.eclipse.emf.common.util.URI)#org/eclipse/emf/common/util/URI/appendFragment(java.lang.String)
org/eclipse/acceleo/model/mtl/resource/AcceleoXMIURIHandler/resolve(org.eclipse.emf.common.util.URI)#java/util/Iterator/next()
org/eclipse/acceleo/model/mtl/resource/AcceleoXMIURIHandler/resolve(org.eclipse.emf.common.util.URI)#java/lang/String/equals(java.lang.Object)
org/eclipse/acceleo/model/mtl/resource/AcceleoXMIURIHandler/resolve(org.eclipse.emf.common.util.URI)#java/util/Set/iterator()
org/eclipse/acceleo/model/mtl/resource/AcceleoXMIURIHandler/resolve(org.eclipse.emf.common.util.URI)#org/eclipse/emf/common/util/URI/createURI(java.lang.String)
org/eclipse/acceleo/model/mtl/resource/AcceleoXMIURIHandler/resolve(org.eclipse.emf.common.util.URI)#org/eclipse/acceleo/common/internal/utils/AcceleoPackageRegistry/getDynamicEcorePackagePaths()
org/eclipse/acceleo/model/mtl/resource/AcceleoXMIURIHandler/resolve(org.eclipse.emf.common.util.URI)#org/eclipse/emf/common/util/URI/trimFragment()
org/eclipse/acceleo/model/mtl/resource/AcceleoXMIURIHandler/resolve(org.eclipse.emf.common.util.URI)#java/util/Map/entrySet()
org/eclipse/acceleo/model/mtl/resource/AcceleoXMIURIHandler/resolve(org.eclipse.emf.common.util.URI)#java/util/Iterator/hasNext()
org/eclipse/acceleo/model/mtl/resource/AcceleoXMIURIHandler/resolve(org.eclipse.emf.common.util.URI)#org/eclipse/emf/ecore/xmi/impl/URIHandlerImpl$PlatformSchemeAware/resolve(org.eclipse.emf.common.util.URI)
org/eclipse/acceleo/model/mtl/resource/AcceleoXMIURIHandler/resolve(org.eclipse.emf.common.util.URI)#java/util/Map$Entry/getValue()
org/eclipse/acceleo/model/mtl/resource/AcceleoXMIURIHandler/resolve(org.eclipse.emf.common.util.URI)#org/eclipse/emf/common/util/URI/fragment()
org/eclipse/acceleo/model/mtl/resource/AcceleoXMIURIHandler/deresolve(org.eclipse.emf.common.util.URI)#java/lang/Object/toString()
org/eclipse/acceleo/model/mtl/resource/AcceleoXMIURIHandler/deresolve(org.eclipse.emf.common.util.URI)#java/util/Iterator/hasNext()
org/eclipse/acceleo/model/mtl/resource/AcceleoXMIURIHandler/deresolve(org.eclipse.emf.common.util.URI)#org/eclipse/emf/ecore/xmi/impl/URIHandlerImpl$PlatformSchemeAware/deresolve(org.eclipse.emf.common.util.URI)
org/eclipse/acceleo/model/mtl/resource/AcceleoXMIURIHandler/deresolve(org.eclipse.emf.common.util.URI)#java/util/Map$Entry/getKey()
org/eclipse/acceleo/model/mtl/resource/AcceleoXMIURIHandler/deresolve(org.eclipse.emf.common.util.URI)#org/eclipse/emf/common/util/URI/appendFragment(java.lang.String)
org/eclipse/acceleo/model/mtl/resource/AcceleoXMIURIHandler/deresolve(org.eclipse.emf.common.util.URI)#java/util/Iterator/next()
org/eclipse/acceleo/model/mtl/resource/AcceleoXMIURIHandler/deresolve(org.eclipse.emf.common.util.URI)#java/lang/String/equals(java.lang.Object)
org/eclipse/acceleo/model/mtl/resource/AcceleoXMIURIHandler/deresolve(org.eclipse.emf.common.util.URI)#java/util/Set/iterator()
org/eclipse/acceleo/model/mtl/resource/AcceleoXMIURIHandler/deresolve(org.eclipse.emf.common.util.URI)#org/eclipse/emf/common/util/URI/createURI(java.lang.String)
org/eclipse/acceleo/model/mtl/resource/AcceleoXMIURIHandler/deresolve(org.eclipse.emf.common.util.URI)#org/eclipse/acceleo/common/internal/utils/AcceleoPackageRegistry/getDynamicEcorePackagePaths()
org/eclipse/acceleo/model/mtl/resource/AcceleoXMIURIHandler/deresolve(org.eclipse.emf.common.util.URI)#org/eclipse/emf/common/util/URI/trimFragment()
org/eclipse/acceleo/model/mtl/resource/AcceleoXMIURIHandler/deresolve(org.eclipse.emf.common.util.URI)#java/util/Map/entrySet()
org/eclipse/acceleo/model/mtl/resource/AcceleoXMIURIHandler/deresolve(org.eclipse.emf.common.util.URI)#java/util/Map$Entry/getValue()
org/eclipse/acceleo/model/mtl/resource/AcceleoXMIURIHandler/deresolve(org.eclipse.emf.common.util.URI)#org/eclipse/emf/common/util/URI/fragment()
org/eclipse/acceleo/model/mtl/impl/spec/ForBlockSpec/toString()#org/eclipse/acceleo/model/mtl/impl/spec/ForBlockSpec/getEach()
org/eclipse/acceleo/model/mtl/impl/spec/ForBlockSpec/toString()#java/lang/StringBuilder/append(java.lang.String)
org/eclipse/acceleo/model/mtl/impl/spec/ForBlockSpec/toString()#org/eclipse/acceleo/model/mtl/impl/spec/ForBlockSpec/getAfter()
org/eclipse/acceleo/model/mtl/impl/spec/ForBlockSpec/toString()#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/eclipse/acceleo/model/mtl/impl/spec/ForBlockSpec/toString()#org/eclipse/acceleo/model/mtl/impl/spec/ForBlockSpec/getInit()
org/eclipse/acceleo/model/mtl/impl/spec/ForBlockSpec/toString()#org/eclipse/acceleo/model/mtl/impl/spec/ForBlockSpec/getGuard()
org/eclipse/acceleo/model/mtl/impl/spec/ForBlockSpec/toString()#java/lang/StringBuilder/append(char)
org/eclipse/acceleo/model/mtl/impl/spec/ForBlockSpec/toString()#org/eclipse/acceleo/model/mtl/impl/spec/ForBlockSpec/getIterSet()
org/eclipse/acceleo/model/mtl/impl/spec/ForBlockSpec/toString()#java/lang/StringBuilder/toString()
org/eclipse/acceleo/model/mtl/impl/spec/ForBlockSpec/toString()#java/lang/Object/toString()
org/eclipse/acceleo/model/mtl/impl/spec/ForBlockSpec/toString()#org/eclipse/acceleo/model/mtl/impl/spec/ForBlockSpec/getBefore()
org/eclipse/acceleo/model/mtl/resource/XMLContentDescriber/readXMLDecl(java.io.Reader)#java/lang/String/valueOf(java.lang.Object)
org/eclipse/acceleo/model/mtl/resource/XMLContentDescriber/readXMLDecl(java.io.Reader)#java/lang/StringBuilder/append(java.lang.String)
org/eclipse/acceleo/model/mtl/resource/XMLContentDescriber/readXMLDecl(java.io.Reader)#java/lang/String/length()
org/eclipse/acceleo/model/mtl/resource/XMLContentDescriber/readXMLDecl(java.io.Reader)#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/eclipse/acceleo/model/mtl/resource/XMLContentDescriber/readXMLDecl(java.io.Reader)#java/lang/String/substring(int,int)
org/eclipse/acceleo/model/mtl/resource/XMLContentDescriber/readXMLDecl(java.io.Reader)#java/lang/String/indexOf(java.lang.String)
org/eclipse/acceleo/model/mtl/resource/XMLContentDescriber/readXMLDecl(java.io.Reader)#java/lang/String/String()
org/eclipse/acceleo/model/mtl/resource/XMLContentDescriber/readXMLDecl(java.io.Reader)#java/lang/StringBuilder/toString()
org/eclipse/acceleo/model/mtl/resource/XMLContentDescriber/readXMLDecl(java.io.Reader)#java/io/BufferedReader/BufferedReader(java.io.Reader)
org/eclipse/acceleo/model/mtl/resource/XMLContentDescriber/readXMLDecl(java.io.Reader)#java/io/BufferedReader/readLine()
org/eclipse/acceleo/model/mtl/impl/spec/FileBlockSpec/toString()#java/lang/Object/toString()
org/eclipse/acceleo/model/mtl/impl/spec/FileBlockSpec/toString()#java/lang/StringBuilder/append(java.lang.String)
org/eclipse/acceleo/model/mtl/impl/spec/FileBlockSpec/toString()#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/eclipse/acceleo/model/mtl/impl/spec/FileBlockSpec/toString()#org/eclipse/acceleo/model/mtl/impl/spec/FileBlockSpec/getCharset()
org/eclipse/acceleo/model/mtl/impl/spec/FileBlockSpec/toString()#org/eclipse/acceleo/model/mtl/impl/spec/FileBlockSpec/getInit()
org/eclipse/acceleo/model/mtl/impl/spec/FileBlockSpec/toString()#org/eclipse/acceleo/model/mtl/impl/spec/FileBlockSpec/getOpenMode()
org/eclipse/acceleo/model/mtl/impl/spec/FileBlockSpec/toString()#java/lang/StringBuilder/append(char)
org/eclipse/acceleo/model/mtl/impl/spec/FileBlockSpec/toString()#java/lang/StringBuilder/toString()
org/eclipse/acceleo/model/mtl/impl/spec/FileBlockSpec/toString()#org/eclipse/acceleo/model/mtl/impl/spec/FileBlockSpec/getFileUrl()
org/eclipse/acceleo/model/mtl/resource/AcceleoResourceFactoryRegistry/computeFactory(org.eclipse.emf.common.util.URI,java.lang.String)#java/lang/String/length()
org/eclipse/acceleo/model/mtl/resource/AcceleoResourceFactoryRegistry/computeFactory(org.eclipse.emf.common.util.URI,java.lang.String)#java/io/File/File(java.lang.String)
org/eclipse/acceleo/model/mtl/resource/AcceleoResourceFactoryRegistry/computeFactory(org.eclipse.emf.common.util.URI,java.lang.String)#java/lang/String/substring(int)
org/eclipse/acceleo/model/mtl/resource/AcceleoResourceFactoryRegistry/computeFactory(org.eclipse.emf.common.util.URI,java.lang.String)#java/lang/String/startsWith(java.lang.String)
org/eclipse/acceleo/model/mtl/resource/AcceleoResourceFactoryRegistry/computeFactory(org.eclipse.emf.common.util.URI,java.lang.String)#java/lang/String/contains(java.lang.CharSequence)
org/eclipse/acceleo/model/mtl/resource/AcceleoResourceFactoryRegistry/computeFactory(org.eclipse.emf.common.util.URI,java.lang.String)#java/util/jar/JarFile/getEntry(java.lang.String)
org/eclipse/acceleo/model/mtl/resource/AcceleoResourceFactoryRegistry/computeFactory(org.eclipse.emf.common.util.URI,java.lang.String)#org/eclipse/acceleo/common/AcceleoCommonPlugin/log(java.lang.Exception,boolean)
org/eclipse/acceleo/model/mtl/resource/AcceleoResourceFactoryRegistry/computeFactory(org.eclipse.emf.common.util.URI,java.lang.String)#java/lang/Object/toString()
org/eclipse/acceleo/model/mtl/resource/AcceleoResourceFactoryRegistry/computeFactory(org.eclipse.emf.common.util.URI,java.lang.String)#java/lang/String/toLowerCase()
org/eclipse/acceleo/model/mtl/resource/AcceleoResourceFactoryRegistry/computeFactory(org.eclipse.emf.common.util.URI,java.lang.String)#java/util/jar/JarFile/JarFile(java.lang.String)
org/eclipse/acceleo/model/mtl/resource/AcceleoResourceFactoryRegistry/computeFactory(org.eclipse.emf.common.util.URI,java.lang.String)#java/io/File/exists()
org/eclipse/acceleo/model/mtl/resource/AcceleoResourceFactoryRegistry/computeFactory(org.eclipse.emf.common.util.URI,java.lang.String)#org/eclipse/emf/common/util/URI/fileExtension()
org/eclipse/acceleo/model/mtl/resource/AcceleoResourceFactoryRegistry/computeFactory(org.eclipse.emf.common.util.URI,java.lang.String)#java/lang/String/equals(java.lang.Object)
org/eclipse/acceleo/model/mtl/resource/AcceleoResourceFactoryRegistry/computeFactory(org.eclipse.emf.common.util.URI,java.lang.String)#org/eclipse/emf/common/util/URI/toFileString()
org/eclipse/acceleo/model/mtl/resource/AcceleoResourceFactoryRegistry/computeFactory(org.eclipse.emf.common.util.URI,java.lang.String)#java/io/InputStream/close()
org/eclipse/acceleo/model/mtl/resource/AcceleoResourceFactoryRegistry/computeFactory(org.eclipse.emf.common.util.URI,java.lang.String)#org/eclipse/emf/common/util/URI/decode(java.lang.String)
org/eclipse/acceleo/model/mtl/resource/AcceleoResourceFactoryRegistry/computeFactory(org.eclipse.emf.common.util.URI,java.lang.String)#java/lang/String/substring(int,int)
org/eclipse/acceleo/model/mtl/resource/AcceleoResourceFactoryRegistry/computeFactory(org.eclipse.emf.common.util.URI,java.lang.String)#java/lang/System/getProperty(java.lang.String)
org/eclipse/acceleo/model/mtl/resource/AcceleoResourceFactoryRegistry/computeFactory(org.eclipse.emf.common.util.URI,java.lang.String)#java/lang/String/indexOf(java.lang.String)
org/eclipse/acceleo/model/mtl/resource/AcceleoResourceFactoryRegistry/computeFactory(org.eclipse.emf.common.util.URI,java.lang.String)#java/io/FileInputStream/FileInputStream(java.io.File)
org/eclipse/acceleo/model/mtl/resource/AcceleoResourceFactoryRegistry/computeFactory(org.eclipse.emf.common.util.URI,java.lang.String)#java/util/jar/JarFile/getInputStream(java.util.zip.ZipEntry)
org/eclipse/acceleo/model/mtl/impl/spec/TemplateInvocationSpec/toString()#java/lang/Object/toString()
org/eclipse/acceleo/model/mtl/impl/spec/TemplateInvocationSpec/toString()#org/eclipse/acceleo/model/mtl/Template/getName()
org/eclipse/acceleo/model/mtl/impl/spec/TemplateInvocationSpec/toString()#java/util/List/size()
org/eclipse/acceleo/model/mtl/impl/spec/TemplateInvocationSpec/toString()#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/eclipse/acceleo/model/mtl/impl/spec/TemplateInvocationSpec/toString()#java/lang/StringBuilder/append(char)
org/eclipse/acceleo/model/mtl/impl/spec/TemplateInvocationSpec/toString()#java/util/List/get(int)
org/eclipse/acceleo/model/mtl/impl/spec/TemplateInvocationSpec/toString()#org/eclipse/acceleo/model/mtl/impl/spec/TemplateInvocationSpec/getDefinition()
org/eclipse/acceleo/model/mtl/impl/spec/TemplateInvocationSpec/toString()#java/lang/StringBuilder/toString()
org/eclipse/acceleo/model/mtl/impl/spec/TemplateInvocationSpec/toString()#org/eclipse/acceleo/model/mtl/impl/spec/TemplateInvocationSpec/getArgument()
org/eclipse/acceleo/model/mtl/impl/spec/TemplateInvocationSpec/toString()#java/lang/StringBuilder/append(java.lang.String)
org/eclipse/acceleo/model/mtl/impl/DocumentationImpl/setDocumentedElement(org.eclipse.acceleo.model.mtl.DocumentedElement)#org/eclipse/acceleo/model/mtl/impl/DocumentationImpl/eNotificationRequired()
org/eclipse/acceleo/model/mtl/impl/DocumentationImpl/setDocumentedElement(org.eclipse.acceleo.model.mtl.DocumentedElement)#java/lang/StringBuilder/append(java.lang.String)
org/eclipse/acceleo/model/mtl/impl/DocumentationImpl/setDocumentedElement(org.eclipse.acceleo.model.mtl.DocumentedElement)#org/eclipse/acceleo/model/mtl/impl/DocumentationImpl/eContainerFeatureID()
org/eclipse/acceleo/model/mtl/impl/DocumentationImpl/setDocumentedElement(org.eclipse.acceleo.model.mtl.DocumentedElement)#org/eclipse/acceleo/model/mtl/impl/DocumentationImpl/toString()
org/eclipse/acceleo/model/mtl/impl/DocumentationImpl/setDocumentedElement(org.eclipse.acceleo.model.mtl.DocumentedElement)#org/eclipse/emf/ecore/InternalEObject/eInverseAdd(org.eclipse.emf.ecore.InternalEObject,int,java.lang.Class,org.eclipse.emf.common.notify.NotificationChain)
org/eclipse/acceleo/model/mtl/impl/DocumentationImpl/setDocumentedElement(org.eclipse.acceleo.model.mtl.DocumentedElement)#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/eclipse/acceleo/model/mtl/impl/DocumentationImpl/setDocumentedElement(org.eclipse.acceleo.model.mtl.DocumentedElement)#org/eclipse/acceleo/model/mtl/impl/DocumentationImpl/eNotify(org.eclipse.emf.common.notify.Notification)
org/eclipse/acceleo/model/mtl/impl/DocumentationImpl/setDocumentedElement(org.eclipse.acceleo.model.mtl.DocumentedElement)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/eclipse/acceleo/model/mtl/impl/DocumentationImpl/setDocumentedElement(org.eclipse.acceleo.model.mtl.DocumentedElement)#org/eclipse/emf/ecore/util/EcoreUtil/isAncestor(org.eclipse.emf.ecore.EObject,org.eclipse.emf.ecore.EObject)
org/eclipse/acceleo/model/mtl/impl/DocumentationImpl/setDocumentedElement(org.eclipse.acceleo.model.mtl.DocumentedElement)#org/eclipse/emf/ecore/impl/ENotificationImpl/ENotificationImpl(org.eclipse.emf.ecore.InternalEObject,int,int,java.lang.Object,java.lang.Object)
org/eclipse/acceleo/model/mtl/impl/DocumentationImpl/setDocumentedElement(org.eclipse.acceleo.model.mtl.DocumentedElement)#org/eclipse/acceleo/model/mtl/impl/DocumentationImpl/eBasicRemoveFromContainer(org.eclipse.emf.common.notify.NotificationChain)
org/eclipse/acceleo/model/mtl/impl/DocumentationImpl/setDocumentedElement(org.eclipse.acceleo.model.mtl.DocumentedElement)#org/eclipse/emf/common/notify/NotificationChain/dispatch()
org/eclipse/acceleo/model/mtl/impl/DocumentationImpl/setDocumentedElement(org.eclipse.acceleo.model.mtl.DocumentedElement)#java/lang/StringBuilder/toString()
org/eclipse/acceleo/model/mtl/impl/DocumentationImpl/setDocumentedElement(org.eclipse.acceleo.model.mtl.DocumentedElement)#org/eclipse/acceleo/model/mtl/impl/DocumentationImpl/eInternalContainer()
org/eclipse/acceleo/model/mtl/impl/spec/ModuleSpec/toString()#org/eclipse/acceleo/model/mtl/impl/spec/ModuleSpec/getExtends()
org/eclipse/acceleo/model/mtl/impl/spec/ModuleSpec/toString()#java/lang/Object/toString()
org/eclipse/acceleo/model/mtl/impl/spec/ModuleSpec/toString()#java/lang/StringBuilder/append(java.lang.String)
org/eclipse/acceleo/model/mtl/impl/spec/ModuleSpec/toString()#java/util/List/size()
org/eclipse/acceleo/model/mtl/impl/spec/ModuleSpec/toString()#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/eclipse/acceleo/model/mtl/impl/spec/ModuleSpec/toString()#org/eclipse/acceleo/model/mtl/impl/spec/ModuleSpec/getInput()
org/eclipse/acceleo/model/mtl/impl/spec/ModuleSpec/toString()#java/lang/StringBuilder/append(char)
org/eclipse/acceleo/model/mtl/impl/spec/ModuleSpec/toString()#java/lang/StringBuilder/toString()
org/eclipse/acceleo/model/mtl/impl/spec/ModuleSpec/toString()#org/eclipse/acceleo/model/mtl/impl/spec/ModuleSpec/getName()
org/eclipse/acceleo/model/mtl/impl/spec/ModuleSpec/toString()#java/util/List/get(int)
org/eclipse/acceleo/model/mtl/impl/spec/QueryInvocationSpec/toString()#org/eclipse/acceleo/model/mtl/Query/eIsProxy()
org/eclipse/acceleo/model/mtl/impl/spec/QueryInvocationSpec/toString()#java/lang/StringBuilder/append(java.lang.String)
org/eclipse/acceleo/model/mtl/impl/spec/QueryInvocationSpec/toString()#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/eclipse/acceleo/model/mtl/impl/spec/QueryInvocationSpec/toString()#org/eclipse/acceleo/model/mtl/Query/getName()
org/eclipse/acceleo/model/mtl/impl/spec/QueryInvocationSpec/toString()#java/lang/StringBuilder/append(char)
org/eclipse/acceleo/model/mtl/impl/spec/QueryInvocationSpec/toString()#java/util/List/get(int)
org/eclipse/acceleo/model/mtl/impl/spec/QueryInvocationSpec/toString()#org/eclipse/acceleo/model/mtl/impl/spec/QueryInvocationSpec/getName()
org/eclipse/acceleo/model/mtl/impl/spec/QueryInvocationSpec/toString()#java/lang/StringBuilder/toString()
org/eclipse/acceleo/model/mtl/impl/spec/QueryInvocationSpec/toString()#java/lang/Object/toString()
org/eclipse/acceleo/model/mtl/impl/spec/QueryInvocationSpec/toString()#org/eclipse/acceleo/model/mtl/impl/spec/QueryInvocationSpec/getDefinition()
org/eclipse/acceleo/model/mtl/impl/spec/QueryInvocationSpec/toString()#java/util/List/size()
org/eclipse/acceleo/model/mtl/impl/spec/QueryInvocationSpec/toString()#org/eclipse/acceleo/model/mtl/impl/spec/QueryInvocationSpec/getArgument()
org/eclipse/acceleo/model/mtl/resource/EMtlBinaryResourceImpl/getPositions(boolean)#org/eclipse/emf/common/util/EList/iterator()
org/eclipse/acceleo/model/mtl/resource/EMtlBinaryResourceImpl/getPositions(boolean)#org/eclipse/emf/ecore/EAnnotation/getSource()
org/eclipse/acceleo/model/mtl/resource/EMtlBinaryResourceImpl/getPositions(boolean)#java/util/Iterator/hasNext()
org/eclipse/acceleo/model/mtl/resource/EMtlBinaryResourceImpl/getPositions(boolean)#org/eclipse/emf/ecore/EAnnotation/setSource(java.lang.String)
org/eclipse/acceleo/model/mtl/resource/EMtlBinaryResourceImpl/getPositions(boolean)#org/eclipse/acceleo/model/mtl/resource/EMtlBinaryResourceImpl/getContents()
org/eclipse/acceleo/model/mtl/resource/EMtlBinaryResourceImpl/getPositions(boolean)#java/util/Iterator/next()
org/eclipse/acceleo/model/mtl/resource/EMtlBinaryResourceImpl/getPositions(boolean)#org/eclipse/emf/common/util/EList/add(java.lang.Object)
org/eclipse/acceleo/model/mtl/resource/EMtlBinaryResourceImpl/getPositions(boolean)#java/lang/String/equals(java.lang.Object)
org/eclipse/acceleo/model/mtl/resource/EMtlBinaryResourceImpl/getPositions(boolean)#org/eclipse/emf/ecore/EcoreFactory/createEAnnotation()
org/eclipse/acceleo/model/mtl/resource/EMtlBinaryResourceImpl/fixVariableAmbiguities(org.eclipse.emf.ecore.EObject)#java/lang/Integer/intValue()
org/eclipse/acceleo/model/mtl/resource/EMtlBinaryResourceImpl/fixVariableAmbiguities(org.eclipse.emf.ecore.EObject)#org/eclipse/ocl/expressions/Variable/getName()
org/eclipse/acceleo/model/mtl/resource/EMtlBinaryResourceImpl/fixVariableAmbiguities(org.eclipse.emf.ecore.EObject)#java/lang/StringBuilder/append(int)
org/eclipse/acceleo/model/mtl/resource/EMtlBinaryResourceImpl/fixVariableAmbiguities(org.eclipse.emf.ecore.EObject)#java/lang/String/length()
org/eclipse/acceleo/model/mtl/resource/EMtlBinaryResourceImpl/fixVariableAmbiguities(org.eclipse.emf.ecore.EObject)#org/eclipse/ocl/expressions/Variable/setName(java.lang.String)
org/eclipse/acceleo/model/mtl/resource/EMtlBinaryResourceImpl/fixVariableAmbiguities(org.eclipse.emf.ecore.EObject)#java/util/List/size()
org/eclipse/acceleo/model/mtl/resource/EMtlBinaryResourceImpl/fixVariableAmbiguities(org.eclipse.emf.ecore.EObject)#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/eclipse/acceleo/model/mtl/resource/EMtlBinaryResourceImpl/fixVariableAmbiguities(org.eclipse.emf.ecore.EObject)#java/lang/String/substring(int)
org/eclipse/acceleo/model/mtl/resource/EMtlBinaryResourceImpl/fixVariableAmbiguities(org.eclipse.emf.ecore.EObject)#java/util/List/add(java.lang.Object)
org/eclipse/acceleo/model/mtl/resource/EMtlBinaryResourceImpl/fixVariableAmbiguities(org.eclipse.emf.ecore.EObject)#java/util/List/contains(java.lang.Object)
org/eclipse/acceleo/model/mtl/resource/EMtlBinaryResourceImpl/fixVariableAmbiguities(org.eclipse.emf.ecore.EObject)#java/lang/Integer/valueOf(java.lang.String)
org/eclipse/acceleo/model/mtl/resource/EMtlBinaryResourceImpl/fixVariableAmbiguities(org.eclipse.emf.ecore.EObject)#java/lang/String/matches(java.lang.String)
org/eclipse/acceleo/model/mtl/resource/EMtlBinaryResourceImpl/fixVariableAmbiguities(org.eclipse.emf.ecore.EObject)#java/lang/StringBuilder/toString()
org/eclipse/acceleo/model/mtl/resource/EMtlBinaryResourceImpl/fixVariableAmbiguities(org.eclipse.emf.ecore.EObject)#java/lang/String/startsWith(java.lang.String)
org/eclipse/acceleo/model/mtl/resource/EMtlBinaryResourceImpl/fixVariableAmbiguities(org.eclipse.emf.ecore.EObject)#java/util/List/get(int)
org/eclipse/acceleo/model/mtl/resource/EMtlBinaryResourceImpl/savePosition(org.eclipse.emf.ecore.EAnnotation,org.eclipse.ocl.utilities.ASTNode,int,int,int)#org/eclipse/emf/ecore/EAnnotation/getEAnnotations()
org/eclipse/acceleo/model/mtl/resource/EMtlBinaryResourceImpl/savePosition(org.eclipse.emf.ecore.EAnnotation,org.eclipse.ocl.utilities.ASTNode,int,int,int)#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/eclipse/acceleo/model/mtl/resource/EMtlBinaryResourceImpl/savePosition(org.eclipse.emf.ecore.EAnnotation,org.eclipse.ocl.utilities.ASTNode,int,int,int)#org/eclipse/emf/common/util/EList/add(java.lang.Object)
org/eclipse/acceleo/model/mtl/resource/EMtlBinaryResourceImpl/savePosition(org.eclipse.emf.ecore.EAnnotation,org.eclipse.ocl.utilities.ASTNode,int,int,int)#org/eclipse/emf/common/util/EList/size()
org/eclipse/acceleo/model/mtl/resource/EMtlBinaryResourceImpl/savePosition(org.eclipse.emf.ecore.EAnnotation,org.eclipse.ocl.utilities.ASTNode,int,int,int)#org/eclipse/emf/ecore/EcoreFactory/createEAnnotation()
org/eclipse/acceleo/model/mtl/resource/EMtlBinaryResourceImpl/savePosition(org.eclipse.emf.ecore.EAnnotation,org.eclipse.ocl.utilities.ASTNode,int,int,int)#org/eclipse/emf/common/util/EMap/put(java.lang.Object,java.lang.Object)
org/eclipse/acceleo/model/mtl/resource/EMtlBinaryResourceImpl/savePosition(org.eclipse.emf.ecore.EAnnotation,org.eclipse.ocl.utilities.ASTNode,int,int,int)#java/lang/StringBuilder/append(int)
org/eclipse/acceleo/model/mtl/resource/EMtlBinaryResourceImpl/savePosition(org.eclipse.emf.ecore.EAnnotation,org.eclipse.ocl.utilities.ASTNode,int,int,int)#org/eclipse/emf/ecore/EAnnotation/setSource(java.lang.String)
org/eclipse/acceleo/model/mtl/resource/EMtlBinaryResourceImpl/savePosition(org.eclipse.emf.ecore.EAnnotation,org.eclipse.ocl.utilities.ASTNode,int,int,int)#org/eclipse/emf/ecore/EAnnotation/getReferences()
org/eclipse/acceleo/model/mtl/resource/EMtlBinaryResourceImpl/savePosition(org.eclipse.emf.ecore.EAnnotation,org.eclipse.ocl.utilities.ASTNode,int,int,int)#org/eclipse/emf/ecore/EAnnotation/getDetails()
org/eclipse/acceleo/model/mtl/resource/EMtlBinaryResourceImpl/savePosition(org.eclipse.emf.ecore.EAnnotation,org.eclipse.ocl.utilities.ASTNode,int,int,int)#java/lang/StringBuilder/toString()
org/eclipse/acceleo/model/mtl/resource/EMtlBinaryResourceImpl/savePosition(org.eclipse.emf.ecore.EAnnotation,org.eclipse.ocl.utilities.ASTNode,int,int,int)#java/lang/String/valueOf(int)
org/eclipse/acceleo/model/mtl/resource/EMtlBinaryResourceImpl/restorePositions(org.eclipse.emf.ecore.EAnnotation)#org/eclipse/ocl/utilities/ASTNode/getEndPosition()
org/eclipse/acceleo/model/mtl/resource/EMtlBinaryResourceImpl/restorePositions(org.eclipse.emf.ecore.EAnnotation)#java/util/Iterator/hasNext()
org/eclipse/acceleo/model/mtl/resource/EMtlBinaryResourceImpl/restorePositions(org.eclipse.emf.ecore.EAnnotation)#org/eclipse/emf/ecore/EAnnotation/getEAnnotations()
org/eclipse/acceleo/model/mtl/resource/EMtlBinaryResourceImpl/restorePositions(org.eclipse.emf.ecore.EAnnotation)#org/eclipse/ocl/utilities/ASTNode/getStartPosition()
org/eclipse/acceleo/model/mtl/resource/EMtlBinaryResourceImpl/restorePositions(org.eclipse.emf.ecore.EAnnotation)#org/eclipse/emf/common/util/EList/add(java.lang.Object)
org/eclipse/acceleo/model/mtl/resource/EMtlBinaryResourceImpl/restorePositions(org.eclipse.emf.ecore.EAnnotation)#org/eclipse/emf/common/util/EMap/get(java.lang.Object)
org/eclipse/acceleo/model/mtl/resource/EMtlBinaryResourceImpl/restorePositions(org.eclipse.emf.ecore.EAnnotation)#java/lang/Integer/parseInt(java.lang.String)
org/eclipse/acceleo/model/mtl/resource/EMtlBinaryResourceImpl/restorePositions(org.eclipse.emf.ecore.EAnnotation)#org/eclipse/ocl/utilities/ASTNode/setStartPosition(int)
org/eclipse/acceleo/model/mtl/resource/EMtlBinaryResourceImpl/restorePositions(org.eclipse.emf.ecore.EAnnotation)#org/eclipse/emf/common/util/EList/get(int)
org/eclipse/acceleo/model/mtl/resource/EMtlBinaryResourceImpl/restorePositions(org.eclipse.emf.ecore.EAnnotation)#org/eclipse/ocl/utilities/ASTNode/setEndPosition(int)
org/eclipse/acceleo/model/mtl/resource/EMtlBinaryResourceImpl/restorePositions(org.eclipse.emf.ecore.EAnnotation)#org/eclipse/emf/common/util/EList/iterator()
org/eclipse/acceleo/model/mtl/resource/EMtlBinaryResourceImpl/restorePositions(org.eclipse.emf.ecore.EAnnotation)#org/eclipse/acceleo/common/utils/AcceleoASTNodeAdapter/AcceleoASTNodeAdapter(int)
org/eclipse/acceleo/model/mtl/resource/EMtlBinaryResourceImpl/restorePositions(org.eclipse.emf.ecore.EAnnotation)#org/eclipse/ocl/utilities/ASTNode/eAdapters()
org/eclipse/acceleo/model/mtl/resource/EMtlBinaryResourceImpl/restorePositions(org.eclipse.emf.ecore.EAnnotation)#org/eclipse/emf/ecore/EAnnotation/getReferences()
org/eclipse/acceleo/model/mtl/resource/EMtlBinaryResourceImpl/restorePositions(org.eclipse.emf.ecore.EAnnotation)#java/util/Iterator/next()
org/eclipse/acceleo/model/mtl/resource/EMtlBinaryResourceImpl/restorePositions(org.eclipse.emf.ecore.EAnnotation)#org/eclipse/emf/ecore/EAnnotation/getDetails()
org/eclipse/acceleo/model/mtl/resource/EMtlBinaryResourceImpl/fixVariablesAndPositions(org.eclipse.emf.ecore.EAnnotation)#org/eclipse/emf/common/util/EList/iterator()
org/eclipse/acceleo/model/mtl/resource/EMtlBinaryResourceImpl/fixVariablesAndPositions(org.eclipse.emf.ecore.EAnnotation)#java/util/ArrayList/ArrayList()
org/eclipse/acceleo/model/mtl/resource/EMtlBinaryResourceImpl/fixVariablesAndPositions(org.eclipse.emf.ecore.EAnnotation)#org/eclipse/emf/common/util/TreeIterator/next()
org/eclipse/acceleo/model/mtl/resource/EMtlBinaryResourceImpl/fixVariablesAndPositions(org.eclipse.emf.ecore.EAnnotation)#org/eclipse/acceleo/model/mtl/resource/EMtlBinaryResourceImpl/getContents()
org/eclipse/acceleo/model/mtl/resource/EMtlBinaryResourceImpl/fixVariablesAndPositions(org.eclipse.emf.ecore.EAnnotation)#java/util/Iterator/next()
org/eclipse/acceleo/model/mtl/resource/EMtlBinaryResourceImpl/fixVariablesAndPositions(org.eclipse.emf.ecore.EAnnotation)#org/eclipse/emf/common/util/TreeIterator/hasNext()
org/eclipse/acceleo/model/mtl/resource/EMtlBinaryResourceImpl/fixVariablesAndPositions(org.eclipse.emf.ecore.EAnnotation)#org/eclipse/acceleo/model/mtl/Module/eAllContents()
org/eclipse/acceleo/model/mtl/resource/EMtlBinaryResourceImpl/fixVariablesAndPositions(org.eclipse.emf.ecore.EAnnotation)#java/util/List/clear()
org/eclipse/acceleo/model/mtl/resource/EMtlBinaryResourceImpl/fixVariablesAndPositions(org.eclipse.emf.ecore.EAnnotation)#java/util/Iterator/hasNext()
org/eclipse/acceleo/model/mtl/impl/MtlPackageImpl/initializePackageContents()#org/eclipse/emf/ecore/EcorePackage/getEInt()
org/eclipse/acceleo/model/mtl/impl/MtlPackageImpl/initializePackageContents()#org/eclipse/acceleo/model/mtl/impl/MtlPackageImpl/initEReference(org.eclipse.emf.ecore.EReference,org.eclipse.emf.ecore.EClassifier,org.eclipse.emf.ecore.EReference,java.lang.String,java.lang.String,int,int,java.lang.Class,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean)
org/eclipse/acceleo/model/mtl/impl/MtlPackageImpl/initializePackageContents()#org/eclipse/acceleo/model/mtl/impl/MtlPackageImpl/setName(java.lang.String)
org/eclipse/acceleo/model/mtl/impl/MtlPackageImpl/initializePackageContents()#org/eclipse/acceleo/model/mtl/impl/MtlPackageImpl/addEEnumLiteral(org.eclipse.emf.ecore.EEnum,org.eclipse.emf.common.util.Enumerator)
org/eclipse/acceleo/model/mtl/impl/MtlPackageImpl/initializePackageContents()#org/eclipse/emf/ecore/EcorePackage/getEClassifier()
org/eclipse/acceleo/model/mtl/impl/MtlPackageImpl/initializePackageContents()#org/eclipse/emf/ecore/EcorePackage/getENamedElement()
org/eclipse/acceleo/model/mtl/impl/MtlPackageImpl/initializePackageContents()#org/eclipse/ocl/ecore/EcorePackage/getOCLExpression()
org/eclipse/acceleo/model/mtl/impl/MtlPackageImpl/initializePackageContents()#org/eclipse/ocl/utilities/UtilitiesPackage/getASTNode()
org/eclipse/acceleo/model/mtl/impl/MtlPackageImpl/initializePackageContents()#org/eclipse/emf/ecore/EPackage$Registry/getEPackage(java.lang.String)
org/eclipse/acceleo/model/mtl/impl/MtlPackageImpl/initializePackageContents()#org/eclipse/emf/common/util/EList/add(java.lang.Object)
org/eclipse/acceleo/model/mtl/impl/MtlPackageImpl/initializePackageContents()#org/eclipse/acceleo/model/mtl/impl/MtlPackageImpl/setNsPrefix(java.lang.String)
org/eclipse/acceleo/model/mtl/impl/MtlPackageImpl/initializePackageContents()#org/eclipse/acceleo/model/mtl/impl/MtlPackageImpl/initEAttribute(org.eclipse.emf.ecore.EAttribute,org.eclipse.emf.ecore.EClassifier,java.lang.String,java.lang.String,int,int,java.lang.Class,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean)
org/eclipse/acceleo/model/mtl/impl/MtlPackageImpl/initializePackageContents()#org/eclipse/emf/ecore/EcorePackage/getEPackage()
org/eclipse/acceleo/model/mtl/impl/MtlPackageImpl/initializePackageContents()#org/eclipse/ocl/ecore/EcorePackage/getVariable()
org/eclipse/acceleo/model/mtl/impl/MtlPackageImpl/initializePackageContents()#org/eclipse/emf/ecore/EcorePackage/getEBoolean()
org/eclipse/acceleo/model/mtl/impl/MtlPackageImpl/initializePackageContents()#org/eclipse/acceleo/model/mtl/impl/MtlPackageImpl/initEEnum(org.eclipse.emf.ecore.EEnum,java.lang.Class,java.lang.String)
org/eclipse/acceleo/model/mtl/impl/MtlPackageImpl/initializePackageContents()#org/eclipse/emf/ecore/EClass/getESuperTypes()
org/eclipse/acceleo/model/mtl/impl/MtlPackageImpl/initializePackageContents()#org/eclipse/acceleo/model/mtl/impl/MtlPackageImpl/setNsURI(java.lang.String)
org/eclipse/acceleo/model/mtl/impl/MtlPackageImpl/initializePackageContents()#org/eclipse/emf/ecore/EcorePackage/getEString()
org/eclipse/acceleo/model/mtl/impl/MtlPackageImpl/initializePackageContents()#org/eclipse/acceleo/model/mtl/impl/MtlPackageImpl/initEClass(org.eclipse.emf.ecore.EClass,java.lang.Class,java.lang.String,boolean,boolean,boolean)
org/eclipse/acceleo/model/mtl/impl/MtlPackageImpl/initializePackageContents()#org/eclipse/acceleo/model/mtl/impl/MtlPackageImpl/createResource(java.lang.String)
org/eclipse/acceleo/model/mtl/impl/spec/CommentBodySpec/toString()#org/eclipse/acceleo/model/mtl/impl/spec/CommentBodySpec/getEndPosition()
org/eclipse/acceleo/model/mtl/impl/spec/CommentBodySpec/toString()#org/eclipse/acceleo/model/mtl/impl/spec/CommentBodySpec/getStartPosition()
org/eclipse/acceleo/model/mtl/impl/spec/CommentBodySpec/toString()#java/lang/StringBuilder/append(int)
org/eclipse/acceleo/model/mtl/impl/spec/CommentBodySpec/toString()#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/eclipse/acceleo/model/mtl/impl/spec/CommentBodySpec/toString()#java/lang/StringBuffer/toString()
org/eclipse/acceleo/model/mtl/impl/spec/CommentBodySpec/toString()#java/lang/StringBuilder/append(char)
org/eclipse/acceleo/model/mtl/impl/spec/CommentBodySpec/toString()#java/lang/StringBuffer/append(java.lang.String)
org/eclipse/acceleo/model/mtl/impl/spec/CommentBodySpec/toString()#java/lang/StringBuffer/StringBuffer()
org/eclipse/acceleo/model/mtl/impl/spec/CommentBodySpec/toString()#java/lang/StringBuilder/toString()
org/eclipse/acceleo/model/mtl/impl/spec/TemplateSpec/toString()#org/eclipse/acceleo/model/mtl/impl/spec/TemplateSpec/getParameter()
org/eclipse/acceleo/model/mtl/impl/spec/TemplateSpec/toString()#org/eclipse/emf/ecore/EClassifier/getName()
org/eclipse/acceleo/model/mtl/impl/spec/TemplateSpec/toString()#org/eclipse/acceleo/model/mtl/impl/spec/TemplateSpec/getName()
org/eclipse/acceleo/model/mtl/impl/spec/TemplateSpec/toString()#java/lang/StringBuilder/append(java.lang.String)
org/eclipse/acceleo/model/mtl/impl/spec/TemplateSpec/toString()#org/eclipse/ocl/ecore/Variable/getType()
org/eclipse/acceleo/model/mtl/impl/spec/TemplateSpec/toString()#java/util/List/size()
org/eclipse/acceleo/model/mtl/impl/spec/TemplateSpec/toString()#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/eclipse/acceleo/model/mtl/impl/spec/TemplateSpec/toString()#java/lang/StringBuilder/append(char)
org/eclipse/acceleo/model/mtl/impl/spec/TemplateSpec/toString()#java/util/List/get(int)
org/eclipse/acceleo/model/mtl/impl/spec/TemplateSpec/toString()#java/lang/StringBuilder/toString()
org/eclipse/acceleo/model/mtl/impl/spec/QuerySpec/toString()#org/eclipse/emf/ecore/EClassifier/getName()
org/eclipse/acceleo/model/mtl/impl/spec/QuerySpec/toString()#java/lang/StringBuilder/append(java.lang.String)
org/eclipse/acceleo/model/mtl/impl/spec/QuerySpec/toString()#java/util/List/size()
org/eclipse/acceleo/model/mtl/impl/spec/QuerySpec/toString()#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/eclipse/acceleo/model/mtl/impl/spec/QuerySpec/toString()#java/lang/StringBuilder/append(char)
org/eclipse/acceleo/model/mtl/impl/spec/QuerySpec/toString()#java/util/List/get(int)
org/eclipse/acceleo/model/mtl/impl/spec/QuerySpec/toString()#org/eclipse/acceleo/model/mtl/impl/spec/QuerySpec/getParameter()
org/eclipse/acceleo/model/mtl/impl/spec/QuerySpec/toString()#java/lang/StringBuilder/toString()
org/eclipse/acceleo/model/mtl/impl/spec/QuerySpec/toString()#org/eclipse/ocl/ecore/Variable/getType()
org/eclipse/acceleo/model/mtl/impl/spec/QuerySpec/toString()#org/eclipse/acceleo/model/mtl/impl/spec/QuerySpec/getName()
