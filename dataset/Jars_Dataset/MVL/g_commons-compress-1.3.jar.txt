org/apache/commons/compress/archivers/tar/TarArchiveOutputStream/putArchiveEntry(org.apache.commons.compress.archivers.ArchiveEntry)#org/apache/commons/compress/archivers/tar/TarArchiveOutputStream/write(byte[])
org/apache/commons/compress/archivers/tar/TarArchiveOutputStream/putArchiveEntry(org.apache.commons.compress.archivers.ArchiveEntry)#java/io/IOException/IOException(java.lang.String)
org/apache/commons/compress/archivers/tar/TarArchiveOutputStream/putArchiveEntry(org.apache.commons.compress.archivers.ArchiveEntry)#java/lang/StringBuilder/append(java.lang.String)
org/apache/commons/compress/archivers/tar/TarArchiveOutputStream/putArchiveEntry(org.apache.commons.compress.archivers.ArchiveEntry)#org/apache/commons/compress/archivers/tar/TarArchiveOutputStream/write(int)
org/apache/commons/compress/archivers/tar/TarArchiveOutputStream/putArchiveEntry(org.apache.commons.compress.archivers.ArchiveEntry)#java/lang/StringBuilder/append(int)
org/apache/commons/compress/archivers/tar/TarArchiveOutputStream/putArchiveEntry(org.apache.commons.compress.archivers.ArchiveEntry)#java/lang/String/length()
org/apache/commons/compress/archivers/tar/TarArchiveOutputStream/putArchiveEntry(org.apache.commons.compress.archivers.ArchiveEntry)#java/lang/StringBuilder/StringBuilder()
org/apache/commons/compress/archivers/tar/TarArchiveOutputStream/putArchiveEntry(org.apache.commons.compress.archivers.ArchiveEntry)#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/apache/commons/compress/archivers/tar/TarArchiveOutputStream/putArchiveEntry(org.apache.commons.compress.archivers.ArchiveEntry)#java/lang/StringBuilder/toString()
org/apache/commons/compress/archivers/dump/DumpArchiveEntry/parse(byte[])#org/apache/commons/compress/archivers/dump/DumpArchiveEntry$TapeSegmentHeader/access$402(org.apache.commons.compress.archivers.dump.DumpArchiveEntry$TapeSegmentHeader,int)
org/apache/commons/compress/archivers/dump/DumpArchiveEntry/parse(byte[])#org/apache/commons/compress/archivers/dump/DumpArchiveEntry$TapeSegmentHeader/access$202(org.apache.commons.compress.archivers.dump.DumpArchiveEntry$TapeSegmentHeader,int)
org/apache/commons/compress/archivers/dump/DumpArchiveEntry/parse(byte[])#org/apache/commons/compress/archivers/dump/DumpArchiveEntry$TapeSegmentHeader/access$500(org.apache.commons.compress.archivers.dump.DumpArchiveEntry$TapeSegmentHeader)
org/apache/commons/compress/archivers/dump/DumpArchiveEntry/parse(byte[])#org/apache/commons/compress/archivers/dump/DumpArchiveEntry$TapeSegmentHeader/access$300(org.apache.commons.compress.archivers.dump.DumpArchiveEntry$TapeSegmentHeader)
org/apache/commons/compress/archivers/dump/DumpArchiveEntry/parse(byte[])#org/apache/commons/compress/archivers/dump/DumpArchiveEntry$TYPE/find(int)
org/apache/commons/compress/archivers/dump/DumpArchiveEntry/parse(byte[])#java/util/Date/Date(long)
org/apache/commons/compress/archivers/dump/DumpArchiveEntry/parse(byte[])#org/apache/commons/compress/archivers/dump/DumpArchiveEntry$TapeSegmentHeader/getVolume()
org/apache/commons/compress/archivers/dump/DumpArchiveEntry/parse(byte[])#java/lang/System/arraycopy(java.lang.Object,int,java.lang.Object,int,int)
org/apache/commons/compress/archivers/dump/DumpArchiveEntry/parse(byte[])#org/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE/find(int)
org/apache/commons/compress/archivers/dump/DumpArchiveEntry/parse(byte[])#org/apache/commons/compress/archivers/dump/DumpArchiveEntry$TapeSegmentHeader/access$408(org.apache.commons.compress.archivers.dump.DumpArchiveEntry$TapeSegmentHeader)
org/apache/commons/compress/archivers/dump/DumpArchiveEntry/parse(byte[])#org/apache/commons/compress/archivers/dump/DumpArchiveEntry$TapeSegmentHeader/access$002(org.apache.commons.compress.archivers.dump.DumpArchiveEntry$TapeSegmentHeader,org.apache.commons.compress.archivers.dump.DumpArchiveConstants$SEGMENT_TYPE)
org/apache/commons/compress/archivers/dump/DumpArchiveEntry/parse(byte[])#org/apache/commons/compress/archivers/dump/DumpArchiveEntry$TapeSegmentHeader/access$302(org.apache.commons.compress.archivers.dump.DumpArchiveEntry$TapeSegmentHeader,int)
org/apache/commons/compress/archivers/dump/DumpArchiveEntry/parse(byte[])#org/apache/commons/compress/archivers/dump/DumpArchiveEntry$TapeSegmentHeader/access$102(org.apache.commons.compress.archivers.dump.DumpArchiveEntry$TapeSegmentHeader,int)
org/apache/commons/compress/archivers/Lister/main(java.lang.String[])#org/apache/commons/compress/archivers/ArchiveInputStream/close()
org/apache/commons/compress/archivers/Lister/main(java.lang.String[])#java/io/File/File(java.lang.String)
org/apache/commons/compress/archivers/Lister/main(java.lang.String[])#java/lang/StringBuilder/StringBuilder()
org/apache/commons/compress/archivers/Lister/main(java.lang.String[])#java/io/File/isFile()
org/apache/commons/compress/archivers/Lister/main(java.lang.String[])#java/lang/StringBuilder/append(java.lang.Object)
org/apache/commons/compress/archivers/Lister/main(java.lang.String[])#java/io/FileInputStream/FileInputStream(java.io.File)
org/apache/commons/compress/archivers/Lister/main(java.lang.String[])#java/lang/StringBuilder/toString()
org/apache/commons/compress/archivers/Lister/main(java.lang.String[])#java/lang/Object/toString()
org/apache/commons/compress/archivers/Lister/main(java.lang.String[])#java/lang/StringBuilder/append(java.lang.String)
org/apache/commons/compress/archivers/Lister/main(java.lang.String[])#java/io/PrintStream/println(java.lang.String)
org/apache/commons/compress/archivers/Lister/main(java.lang.String[])#java/io/InputStream/close()
org/apache/commons/compress/archivers/Lister/main(java.lang.String[])#java/io/BufferedInputStream/BufferedInputStream(java.io.InputStream)
org/apache/commons/compress/archivers/tar/TarArchiveInputStream/paxHeaders()#java/lang/String/String(char[],int,int)
org/apache/commons/compress/archivers/tar/TarArchiveInputStream/paxHeaders()#java/util/Iterator/hasNext()
org/apache/commons/compress/archivers/tar/TarArchiveInputStream/paxHeaders()#java/lang/StringBuilder/StringBuilder()
org/apache/commons/compress/archivers/tar/TarArchiveInputStream/paxHeaders()#java/util/Set/iterator()
org/apache/commons/compress/archivers/tar/TarArchiveInputStream/paxHeaders()#java/lang/Integer/parseInt(java.lang.String)
org/apache/commons/compress/archivers/tar/TarArchiveInputStream/paxHeaders()#java/util/Map$Entry/getValue()
org/apache/commons/compress/archivers/tar/TarArchiveInputStream/paxHeaders()#java/lang/StringBuilder/toString()
org/apache/commons/compress/archivers/tar/TarArchiveInputStream/paxHeaders()#java/io/Reader/close()
org/apache/commons/compress/archivers/tar/TarArchiveInputStream/paxHeaders()#java/io/Reader/read()
org/apache/commons/compress/archivers/tar/TarArchiveInputStream/paxHeaders()#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/commons/compress/archivers/tar/TarArchiveInputStream/paxHeaders()#java/lang/Long/parseLong(java.lang.String)
org/apache/commons/compress/archivers/tar/TarArchiveInputStream/paxHeaders()#java/io/IOException/IOException(java.lang.String)
org/apache/commons/compress/archivers/tar/TarArchiveInputStream/paxHeaders()#java/lang/StringBuilder/append(java.lang.String)
org/apache/commons/compress/archivers/tar/TarArchiveInputStream/paxHeaders()#java/util/Map$Entry/getKey()
org/apache/commons/compress/archivers/tar/TarArchiveInputStream/paxHeaders()#java/lang/StringBuffer/append(char)
org/apache/commons/compress/archivers/tar/TarArchiveInputStream/paxHeaders()#java/io/Reader/read(char[])
org/apache/commons/compress/archivers/tar/TarArchiveInputStream/paxHeaders()#java/lang/StringBuilder/append(int)
org/apache/commons/compress/archivers/tar/TarArchiveInputStream/paxHeaders()#java/util/Iterator/next()
org/apache/commons/compress/archivers/tar/TarArchiveInputStream/paxHeaders()#java/util/HashMap/HashMap()
org/apache/commons/compress/archivers/tar/TarArchiveInputStream/paxHeaders()#java/lang/String/equals(java.lang.Object)
org/apache/commons/compress/archivers/tar/TarArchiveInputStream/paxHeaders()#java/lang/StringBuffer/toString()
org/apache/commons/compress/archivers/tar/TarArchiveInputStream/paxHeaders()#org/apache/commons/compress/archivers/tar/TarArchiveInputStream$1/1(org.apache.commons.compress.archivers.tar.TarArchiveInputStream,java.io.InputStream,java.lang.String)
org/apache/commons/compress/archivers/tar/TarArchiveInputStream/paxHeaders()#java/util/Map/entrySet()
org/apache/commons/compress/archivers/tar/TarArchiveInputStream/paxHeaders()#java/lang/StringBuffer/StringBuffer()
org/apache/commons/compress/archivers/tar/TarArchiveInputStream/getNextTarEntry()#java/lang/StringBuffer/charAt(int)
org/apache/commons/compress/archivers/tar/TarArchiveInputStream/getNextTarEntry()#java/lang/StringBuffer/toString()
org/apache/commons/compress/archivers/tar/TarArchiveInputStream/getNextTarEntry()#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/apache/commons/compress/archivers/tar/TarArchiveInputStream/getNextTarEntry()#java/lang/StringBuffer/deleteCharAt(int)
org/apache/commons/compress/archivers/tar/TarArchiveInputStream/getNextTarEntry()#java/lang/StringBuffer/StringBuffer()
org/apache/commons/compress/archivers/tar/TarArchiveInputStream/getNextTarEntry()#java/lang/StringBuffer/length()
org/apache/commons/compress/archivers/tar/TarArchiveInputStream/getNextTarEntry()#java/lang/String/String(byte[],int,int)
org/apache/commons/compress/archivers/tar/TarArchiveInputStream/getNextTarEntry()#org/apache/commons/compress/archivers/tar/TarArchiveInputStream/read(byte[])
org/apache/commons/compress/archivers/tar/TarArchiveInputStream/getNextTarEntry()#java/lang/StringBuffer/append(java.lang.String)
org/apache/commons/compress/archivers/tar/TarArchiveInputStream/read(byte[],int,int)#java/io/IOException/IOException(java.lang.String)
org/apache/commons/compress/archivers/tar/TarArchiveInputStream/read(byte[],int,int)#java/lang/StringBuilder/append(java.lang.String)
org/apache/commons/compress/archivers/tar/TarArchiveInputStream/read(byte[],int,int)#java/lang/StringBuilder/append(int)
org/apache/commons/compress/archivers/tar/TarArchiveInputStream/read(byte[],int,int)#org/apache/commons/compress/archivers/tar/TarArchiveInputStream/getBytesRead()
org/apache/commons/compress/archivers/tar/TarArchiveInputStream/read(byte[],int,int)#java/lang/System/arraycopy(java.lang.Object,int,java.lang.Object,int,int)
org/apache/commons/compress/archivers/tar/TarArchiveInputStream/read(byte[],int,int)#java/lang/StringBuilder/toString()
org/apache/commons/compress/archivers/tar/TarArchiveInputStream/read(byte[],int,int)#java/lang/StringBuilder/append(long)
org/apache/commons/compress/archivers/tar/TarArchiveInputStream/read(byte[],int,int)#java/lang/StringBuilder/StringBuilder()
org/apache/commons/compress/archivers/tar/TarArchiveInputStream/read(byte[],int,int)#org/apache/commons/compress/archivers/tar/TarArchiveInputStream/count(int)
org/apache/commons/compress/archivers/zip/NioZipEncoding/encode(java.lang.String)#java/nio/charset/CoderResult/isOverflow()
org/apache/commons/compress/archivers/zip/NioZipEncoding/encode(java.lang.String)#java/nio/ByteBuffer/position()
org/apache/commons/compress/archivers/zip/NioZipEncoding/encode(java.lang.String)#java/nio/charset/CoderResult/isUnmappable()
org/apache/commons/compress/archivers/zip/NioZipEncoding/encode(java.lang.String)#java/nio/charset/Charset/newEncoder()
org/apache/commons/compress/archivers/zip/NioZipEncoding/encode(java.lang.String)#java/nio/charset/CharsetEncoder/encode(java.nio.CharBuffer,java.nio.ByteBuffer,boolean)
org/apache/commons/compress/archivers/zip/NioZipEncoding/encode(java.lang.String)#java/nio/CharBuffer/wrap(java.lang.CharSequence)
org/apache/commons/compress/archivers/zip/NioZipEncoding/encode(java.lang.String)#java/nio/charset/CharsetEncoder/onMalformedInput(java.nio.charset.CodingErrorAction)
org/apache/commons/compress/archivers/zip/NioZipEncoding/encode(java.lang.String)#java/nio/ByteBuffer/rewind()
org/apache/commons/compress/archivers/zip/NioZipEncoding/encode(java.lang.String)#java/nio/charset/CoderResult/length()
org/apache/commons/compress/archivers/zip/NioZipEncoding/encode(java.lang.String)#java/nio/charset/CoderResult/isUnderflow()
org/apache/commons/compress/archivers/zip/NioZipEncoding/encode(java.lang.String)#java/nio/CharBuffer/remaining()
org/apache/commons/compress/archivers/zip/NioZipEncoding/encode(java.lang.String)#java/nio/ByteBuffer/allocate(int)
org/apache/commons/compress/archivers/zip/NioZipEncoding/encode(java.lang.String)#java/nio/CharBuffer/get()
org/apache/commons/compress/archivers/zip/NioZipEncoding/encode(java.lang.String)#java/lang/String/length()
org/apache/commons/compress/archivers/zip/NioZipEncoding/encode(java.lang.String)#java/nio/charset/CharsetEncoder/flush(java.nio.ByteBuffer)
org/apache/commons/compress/archivers/zip/NioZipEncoding/encode(java.lang.String)#java/nio/ByteBuffer/remaining()
org/apache/commons/compress/archivers/zip/NioZipEncoding/encode(java.lang.String)#java/nio/charset/CoderResult/isMalformed()
org/apache/commons/compress/archivers/zip/NioZipEncoding/encode(java.lang.String)#java/nio/ByteBuffer/limit(int)
org/apache/commons/compress/archivers/zip/NioZipEncoding/encode(java.lang.String)#java/nio/charset/CharsetEncoder/onUnmappableCharacter(java.nio.charset.CodingErrorAction)
org/apache/commons/compress/compressors/bzip2/BZip2Utils/getUncompressedFilename(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/apache/commons/compress/compressors/bzip2/BZip2Utils/getUncompressedFilename(java.lang.String)#java/lang/String/substring(int,int)
org/apache/commons/compress/compressors/bzip2/BZip2Utils/getUncompressedFilename(java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/apache/commons/compress/compressors/bzip2/BZip2Utils/getUncompressedFilename(java.lang.String)#java/lang/String/substring(int)
org/apache/commons/compress/compressors/bzip2/BZip2Utils/getUncompressedFilename(java.lang.String)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/commons/compress/compressors/bzip2/BZip2Utils/getUncompressedFilename(java.lang.String)#java/lang/StringBuilder/toString()
org/apache/commons/compress/compressors/bzip2/BZip2Utils/getUncompressedFilename(java.lang.String)#java/lang/String/toLowerCase(java.util.Locale)
org/apache/commons/compress/compressors/bzip2/BZip2Utils/getUncompressedFilename(java.lang.String)#java/lang/String/length()
org/apache/commons/compress/compressors/bzip2/BZip2Utils/getUncompressedFilename(java.lang.String)#java/util/Map/get(java.lang.Object)
org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream/writeLocalFileHeader(org.apache.commons.compress.archivers.zip.ZipArchiveEntry)#org/apache/commons/compress/archivers/zip/ZipArchiveEntry/getCrc()
org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream/writeLocalFileHeader(org.apache.commons.compress.archivers.zip.ZipArchiveEntry)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream/writeLocalFileHeader(org.apache.commons.compress.archivers.zip.ZipArchiveEntry)#java/lang/Long/valueOf(long)
org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream/writeLocalFileHeader(org.apache.commons.compress.archivers.zip.ZipArchiveEntry)#org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry/access$100(org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream$CurrentEntry)
org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream/writeLocalFileHeader(org.apache.commons.compress.archivers.zip.ZipArchiveEntry)#java/nio/ByteBuffer/array()
org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream/writeLocalFileHeader(org.apache.commons.compress.archivers.zip.ZipArchiveEntry)#org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry/access$402(org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream$CurrentEntry,long)
org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream/writeLocalFileHeader(org.apache.commons.compress.archivers.zip.ZipArchiveEntry)#java/nio/ByteBuffer/arrayOffset()
org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream/writeLocalFileHeader(org.apache.commons.compress.archivers.zip.ZipArchiveEntry)#org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry/access$202(org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream$CurrentEntry,long)
org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream/writeLocalFileHeader(org.apache.commons.compress.archivers.zip.ZipArchiveEntry)#org/apache/commons/compress/archivers/zip/ZipArchiveEntry/getTime()
org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream/writeLocalFileHeader(org.apache.commons.compress.archivers.zip.ZipArchiveEntry)#java/nio/ByteBuffer/limit()
org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream/handleSizesAndCrc(long,long,org.apache.commons.compress.archivers.zip.Zip64Mode)#org/apache/commons/compress/archivers/zip/ZipArchiveEntry/getCrc()
org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream/handleSizesAndCrc(long,long,org.apache.commons.compress.archivers.zip.Zip64Mode)#org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry/access$100(org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream$CurrentEntry)
org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream/handleSizesAndCrc(long,long,org.apache.commons.compress.archivers.zip.Zip64Mode)#org/apache/commons/compress/archivers/zip/ZipArchiveEntry/getCompressedSize()
org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream/handleSizesAndCrc(long,long,org.apache.commons.compress.archivers.zip.Zip64Mode)#java/util/zip/Deflater/reset()
org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream/handleSizesAndCrc(long,long,org.apache.commons.compress.archivers.zip.Zip64Mode)#java/lang/Long/toHexString(long)
org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream/handleSizesAndCrc(long,long,org.apache.commons.compress.archivers.zip.Zip64Mode)#java/lang/StringBuilder/append(long)
org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream/handleSizesAndCrc(long,long,org.apache.commons.compress.archivers.zip.Zip64Mode)#java/lang/StringBuilder/StringBuilder()
org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream/handleSizesAndCrc(long,long,org.apache.commons.compress.archivers.zip.Zip64Mode)#org/apache/commons/compress/archivers/zip/ZipArchiveEntry/setCompressedSize(long)
org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream/handleSizesAndCrc(long,long,org.apache.commons.compress.archivers.zip.Zip64Mode)#java/lang/StringBuilder/append(java.lang.String)
org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream/handleSizesAndCrc(long,long,org.apache.commons.compress.archivers.zip.Zip64Mode)#org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry/access$300(org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream$CurrentEntry)
org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream/handleSizesAndCrc(long,long,org.apache.commons.compress.archivers.zip.Zip64Mode)#org/apache/commons/compress/archivers/zip/ZipArchiveEntry/setCrc(long)
org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream/handleSizesAndCrc(long,long,org.apache.commons.compress.archivers.zip.Zip64Mode)#java/lang/StringBuilder/toString()
org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream/handleSizesAndCrc(long,long,org.apache.commons.compress.archivers.zip.Zip64Mode)#java/util/zip/ZipException/ZipException(java.lang.String)
org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream/writeCentralFileHeader(org.apache.commons.compress.archivers.zip.ZipArchiveEntry)#org/apache/commons/compress/archivers/zip/ZipArchiveEntry/getCrc()
org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream/writeCentralFileHeader(org.apache.commons.compress.archivers.zip.ZipArchiveEntry)#java/lang/Math/min(long,long)
org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream/writeCentralFileHeader(org.apache.commons.compress.archivers.zip.ZipArchiveEntry)#java/nio/ByteBuffer/arrayOffset()
org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream/writeCentralFileHeader(org.apache.commons.compress.archivers.zip.ZipArchiveEntry)#java/nio/ByteBuffer/array()
org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream/writeCentralFileHeader(org.apache.commons.compress.archivers.zip.ZipArchiveEntry)#org/apache/commons/compress/archivers/zip/ZipArchiveEntry/getTime()
org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream/writeCentralFileHeader(org.apache.commons.compress.archivers.zip.ZipArchiveEntry)#org/apache/commons/compress/archivers/zip/ZipArchiveEntry/getComment()
org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream/writeCentralFileHeader(org.apache.commons.compress.archivers.zip.ZipArchiveEntry)#java/util/Map/get(java.lang.Object)
org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream/writeCentralFileHeader(org.apache.commons.compress.archivers.zip.ZipArchiveEntry)#org/apache/commons/compress/archivers/zip/ZipArchiveEntry/getCompressedSize()
org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream/writeCentralFileHeader(org.apache.commons.compress.archivers.zip.ZipArchiveEntry)#java/lang/Long/longValue()
org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream/writeCentralFileHeader(org.apache.commons.compress.archivers.zip.ZipArchiveEntry)#java/nio/ByteBuffer/limit()
org/apache/commons/compress/archivers/ar/ArArchiveOutputStream/writeEntryHeader(org.apache.commons.compress.archivers.ar.ArArchiveEntry)#java/lang/String/valueOf(long)
org/apache/commons/compress/archivers/ar/ArArchiveOutputStream/writeEntryHeader(org.apache.commons.compress.archivers.ar.ArArchiveEntry)#java/io/IOException/IOException(java.lang.String)
org/apache/commons/compress/archivers/ar/ArArchiveOutputStream/writeEntryHeader(org.apache.commons.compress.archivers.ar.ArArchiveEntry)#java/lang/StringBuilder/append(java.lang.String)
org/apache/commons/compress/archivers/ar/ArArchiveOutputStream/writeEntryHeader(org.apache.commons.compress.archivers.ar.ArArchiveEntry)#java/lang/Integer/toString(int,int)
org/apache/commons/compress/archivers/ar/ArArchiveOutputStream/writeEntryHeader(org.apache.commons.compress.archivers.ar.ArArchiveEntry)#java/lang/StringBuilder/append(int)
org/apache/commons/compress/archivers/ar/ArArchiveOutputStream/writeEntryHeader(org.apache.commons.compress.archivers.ar.ArArchiveEntry)#java/lang/String/length()
org/apache/commons/compress/archivers/ar/ArArchiveOutputStream/writeEntryHeader(org.apache.commons.compress.archivers.ar.ArArchiveEntry)#java/lang/StringBuilder/append(long)
org/apache/commons/compress/archivers/ar/ArArchiveOutputStream/writeEntryHeader(org.apache.commons.compress.archivers.ar.ArArchiveEntry)#java/lang/StringBuilder/StringBuilder()
org/apache/commons/compress/archivers/ar/ArArchiveOutputStream/writeEntryHeader(org.apache.commons.compress.archivers.ar.ArArchiveEntry)#java/lang/String/indexOf(java.lang.String)
org/apache/commons/compress/archivers/ar/ArArchiveOutputStream/writeEntryHeader(org.apache.commons.compress.archivers.ar.ArArchiveEntry)#java/lang/StringBuilder/toString()
org/apache/commons/compress/archivers/ar/ArArchiveOutputStream/writeEntryHeader(org.apache.commons.compress.archivers.ar.ArArchiveEntry)#java/lang/String/valueOf(int)
org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream/writeAsciiLong(long,int,int)#java/lang/Long/toOctalString(long)
org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream/writeAsciiLong(long,int,int)#java/lang/Long/toString(long)
org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream/writeAsciiLong(long,int,int)#java/lang/StringBuffer/length()
org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream/writeAsciiLong(long,int,int)#org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream/count(int)
org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream/writeAsciiLong(long,int,int)#java/lang/Long/toHexString(long)
org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream/writeAsciiLong(long,int,int)#java/lang/StringBuffer/toString()
org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream/writeAsciiLong(long,int,int)#java/lang/StringBuffer/substring(int)
org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream/writeAsciiLong(long,int,int)#java/lang/StringBuffer/append(java.lang.String)
org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream/writeAsciiLong(long,int,int)#java/io/OutputStream/write(byte[])
org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream/writeAsciiLong(long,int,int)#java/lang/StringBuffer/insert(int,java.lang.String)
org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream/writeAsciiLong(long,int,int)#java/lang/StringBuffer/StringBuffer()
org/apache/commons/compress/archivers/tar/TarArchiveEntry/normalizeFileName(java.lang.String,boolean)#java/lang/String/charAt(int)
org/apache/commons/compress/archivers/tar/TarArchiveEntry/normalizeFileName(java.lang.String,boolean)#java/lang/String/startsWith(java.lang.String)
org/apache/commons/compress/archivers/tar/TarArchiveEntry/normalizeFileName(java.lang.String,boolean)#java/lang/String/indexOf(int)
org/apache/commons/compress/archivers/tar/TarArchiveEntry/normalizeFileName(java.lang.String,boolean)#java/lang/String/toLowerCase(java.util.Locale)
org/apache/commons/compress/archivers/tar/TarArchiveEntry/normalizeFileName(java.lang.String,boolean)#java/lang/String/length()
org/apache/commons/compress/archivers/tar/TarArchiveEntry/normalizeFileName(java.lang.String,boolean)#java/lang/System/getProperty(java.lang.String)
org/apache/commons/compress/archivers/tar/TarArchiveEntry/normalizeFileName(java.lang.String,boolean)#java/lang/String/indexOf(java.lang.String)
org/apache/commons/compress/archivers/tar/TarArchiveEntry/normalizeFileName(java.lang.String,boolean)#java/lang/String/substring(int)
org/apache/commons/compress/archivers/tar/TarArchiveEntry/normalizeFileName(java.lang.String,boolean)#java/lang/String/replace(char,char)
org/apache/commons/compress/compressors/gzip/GzipUtils/getUncompressedFilename(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/apache/commons/compress/compressors/gzip/GzipUtils/getUncompressedFilename(java.lang.String)#java/lang/String/substring(int,int)
org/apache/commons/compress/compressors/gzip/GzipUtils/getUncompressedFilename(java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/apache/commons/compress/compressors/gzip/GzipUtils/getUncompressedFilename(java.lang.String)#java/lang/String/substring(int)
org/apache/commons/compress/compressors/gzip/GzipUtils/getUncompressedFilename(java.lang.String)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/commons/compress/compressors/gzip/GzipUtils/getUncompressedFilename(java.lang.String)#java/lang/StringBuilder/toString()
org/apache/commons/compress/compressors/gzip/GzipUtils/getUncompressedFilename(java.lang.String)#java/lang/String/toLowerCase(java.util.Locale)
org/apache/commons/compress/compressors/gzip/GzipUtils/getUncompressedFilename(java.lang.String)#java/lang/String/length()
org/apache/commons/compress/compressors/gzip/GzipUtils/getUncompressedFilename(java.lang.String)#java/util/Map/get(java.lang.Object)
org/apache/commons/compress/compressors/gzip/GzipUtils/getCompressedFilename(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/apache/commons/compress/compressors/gzip/GzipUtils/getCompressedFilename(java.lang.String)#java/lang/String/substring(int,int)
org/apache/commons/compress/compressors/gzip/GzipUtils/getCompressedFilename(java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/apache/commons/compress/compressors/gzip/GzipUtils/getCompressedFilename(java.lang.String)#java/lang/String/substring(int)
org/apache/commons/compress/compressors/gzip/GzipUtils/getCompressedFilename(java.lang.String)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/commons/compress/compressors/gzip/GzipUtils/getCompressedFilename(java.lang.String)#java/lang/StringBuilder/toString()
org/apache/commons/compress/compressors/gzip/GzipUtils/getCompressedFilename(java.lang.String)#java/lang/String/toLowerCase(java.util.Locale)
org/apache/commons/compress/compressors/gzip/GzipUtils/getCompressedFilename(java.lang.String)#java/lang/String/length()
org/apache/commons/compress/compressors/gzip/GzipUtils/getCompressedFilename(java.lang.String)#java/util/Map/get(java.lang.Object)
org/apache/commons/compress/archivers/zip/ZipFile/readCentralDirectoryEntry(java.util.Map)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/commons/compress/archivers/zip/ZipFile/readCentralDirectoryEntry(java.util.Map)#org/apache/commons/compress/archivers/zip/ZipArchiveEntry/setTime(long)
org/apache/commons/compress/archivers/zip/ZipFile/readCentralDirectoryEntry(java.util.Map)#org/apache/commons/compress/archivers/zip/ZipFile$OffsetEntry/access$202(org.apache.commons.compress.archivers.zip.ZipFile$OffsetEntry,long)
org/apache/commons/compress/archivers/zip/ZipFile/readCentralDirectoryEntry(java.util.Map)#org/apache/commons/compress/archivers/zip/ZipArchiveEntry/setComment(java.lang.String)
org/apache/commons/compress/archivers/zip/ZipFile/readCentralDirectoryEntry(java.util.Map)#org/apache/commons/compress/archivers/zip/ZipFile$OffsetEntry/OffsetEntry(org.apache.commons.compress.archivers.zip.ZipFile$1)
org/apache/commons/compress/archivers/zip/ZipFile/readCentralDirectoryEntry(java.util.Map)#org/apache/commons/compress/archivers/zip/ZipFile$NameAndComment/NameAndComment(byte[],byte[],org.apache.commons.compress.archivers.zip.ZipFile$1)
org/apache/commons/compress/archivers/zip/ZipFile/readCentralDirectoryEntry(java.util.Map)#java/io/RandomAccessFile/readFully(byte[])
org/apache/commons/compress/archivers/zip/ZipFile/readCentralDirectoryEntry(java.util.Map)#org/apache/commons/compress/archivers/zip/ZipArchiveEntry/setCrc(long)
org/apache/commons/compress/archivers/zip/ZipFile/readCentralDirectoryEntry(java.util.Map)#org/apache/commons/compress/archivers/zip/ZipArchiveEntry/setCompressedSize(long)
org/apache/commons/compress/archivers/zip/ZipFile/resolveLocalFileHeaderData(java.util.Map)#java/io/RandomAccessFile/skipBytes(int)
org/apache/commons/compress/archivers/zip/ZipFile/resolveLocalFileHeaderData(java.util.Map)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/commons/compress/archivers/zip/ZipFile/resolveLocalFileHeaderData(java.util.Map)#java/io/RandomAccessFile/seek(long)
org/apache/commons/compress/archivers/zip/ZipFile/resolveLocalFileHeaderData(java.util.Map)#org/apache/commons/compress/archivers/zip/ZipFile$OffsetEntry/access$200(org.apache.commons.compress.archivers.zip.ZipFile$OffsetEntry)
org/apache/commons/compress/archivers/zip/ZipFile/resolveLocalFileHeaderData(java.util.Map)#java/util/Map/get(java.lang.Object)
org/apache/commons/compress/archivers/zip/ZipFile/resolveLocalFileHeaderData(java.util.Map)#java/lang/String/equals(java.lang.Object)
org/apache/commons/compress/archivers/zip/ZipFile/resolveLocalFileHeaderData(java.util.Map)#java/io/RandomAccessFile/readFully(byte[])
org/apache/commons/compress/archivers/zip/ZipFile/resolveLocalFileHeaderData(java.util.Map)#java/util/Map/containsKey(java.lang.Object)
org/apache/commons/compress/archivers/zip/ZipFile/resolveLocalFileHeaderData(java.util.Map)#org/apache/commons/compress/archivers/zip/ZipFile$NameAndComment/access$500(org.apache.commons.compress.archivers.zip.ZipFile$NameAndComment)
org/apache/commons/compress/archivers/zip/ZipFile/resolveLocalFileHeaderData(java.util.Map)#java/util/Map/remove(java.lang.Object)
org/apache/commons/compress/archivers/zip/ZipFile/resolveLocalFileHeaderData(java.util.Map)#java/util/Iterator/hasNext()
org/apache/commons/compress/archivers/zip/ZipFile/resolveLocalFileHeaderData(java.util.Map)#java/util/Iterator/next()
org/apache/commons/compress/archivers/zip/ZipFile/resolveLocalFileHeaderData(java.util.Map)#java/util/Map/keySet()
org/apache/commons/compress/archivers/zip/ZipFile/resolveLocalFileHeaderData(java.util.Map)#org/apache/commons/compress/archivers/zip/ZipFile$OffsetEntry/access$002(org.apache.commons.compress.archivers.zip.ZipFile$OffsetEntry,long)
org/apache/commons/compress/archivers/zip/ZipFile/resolveLocalFileHeaderData(java.util.Map)#java/util/Set/iterator()
org/apache/commons/compress/archivers/zip/ZipFile/resolveLocalFileHeaderData(java.util.Map)#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/apache/commons/compress/archivers/zip/ZipFile/resolveLocalFileHeaderData(java.util.Map)#org/apache/commons/compress/archivers/zip/ZipFile$NameAndComment/access$400(org.apache.commons.compress.archivers.zip.ZipFile$NameAndComment)
org/apache/commons/compress/archivers/zip/ZipFile/getInputStream(org.apache.commons.compress.archivers.zip.ZipArchiveEntry)#org/apache/commons/compress/archivers/zip/ZipFile$1/1(org.apache.commons.compress.archivers.zip.ZipFile,java.io.InputStream,java.util.zip.Inflater,java.util.zip.Inflater)
org/apache/commons/compress/archivers/zip/ZipFile/getInputStream(org.apache.commons.compress.archivers.zip.ZipArchiveEntry)#org/apache/commons/compress/archivers/zip/ZipFile$BoundedInputStream/BoundedInputStream(org.apache.commons.compress.archivers.zip.ZipFile,long,long)
org/apache/commons/compress/archivers/zip/ZipFile/getInputStream(org.apache.commons.compress.archivers.zip.ZipArchiveEntry)#java/lang/StringBuilder/append(java.lang.String)
org/apache/commons/compress/archivers/zip/ZipFile/getInputStream(org.apache.commons.compress.archivers.zip.ZipArchiveEntry)#java/util/zip/Inflater/Inflater(boolean)
org/apache/commons/compress/archivers/zip/ZipFile/getInputStream(org.apache.commons.compress.archivers.zip.ZipArchiveEntry)#java/lang/StringBuilder/append(int)
org/apache/commons/compress/archivers/zip/ZipFile/getInputStream(org.apache.commons.compress.archivers.zip.ZipArchiveEntry)#org/apache/commons/compress/archivers/zip/ZipFile$OffsetEntry/access$000(org.apache.commons.compress.archivers.zip.ZipFile$OffsetEntry)
org/apache/commons/compress/archivers/zip/ZipFile/getInputStream(org.apache.commons.compress.archivers.zip.ZipArchiveEntry)#java/util/Map/get(java.lang.Object)
org/apache/commons/compress/archivers/zip/ZipFile/getInputStream(org.apache.commons.compress.archivers.zip.ZipArchiveEntry)#org/apache/commons/compress/archivers/zip/ZipArchiveEntry/getCompressedSize()
org/apache/commons/compress/archivers/zip/ZipFile/getInputStream(org.apache.commons.compress.archivers.zip.ZipArchiveEntry)#java/lang/StringBuilder/StringBuilder()
org/apache/commons/compress/archivers/zip/ZipFile/getInputStream(org.apache.commons.compress.archivers.zip.ZipArchiveEntry)#org/apache/commons/compress/archivers/zip/ZipFile$BoundedInputStream/addDummy()
org/apache/commons/compress/archivers/zip/ZipFile/getInputStream(org.apache.commons.compress.archivers.zip.ZipArchiveEntry)#java/lang/StringBuilder/toString()
org/apache/commons/compress/archivers/zip/ZipFile/getInputStream(org.apache.commons.compress.archivers.zip.ZipArchiveEntry)#java/util/zip/ZipException/ZipException(java.lang.String)
org/apache/commons/compress/changes/ChangeSetPerformer/perform(org.apache.commons.compress.archivers.ArchiveInputStream,org.apache.commons.compress.archivers.ArchiveOutputStream)#java/util/Iterator/remove()
org/apache/commons/compress/changes/ChangeSetPerformer/perform(org.apache.commons.compress.archivers.ArchiveInputStream,org.apache.commons.compress.archivers.ArchiveOutputStream)#java/util/Iterator/hasNext()
org/apache/commons/compress/changes/ChangeSetPerformer/perform(org.apache.commons.compress.archivers.ArchiveInputStream,org.apache.commons.compress.archivers.ArchiveOutputStream)#java/lang/StringBuilder/append(java.lang.String)
org/apache/commons/compress/changes/ChangeSetPerformer/perform(org.apache.commons.compress.archivers.ArchiveInputStream,org.apache.commons.compress.archivers.ArchiveOutputStream)#java/lang/String/equals(java.lang.Object)
org/apache/commons/compress/changes/ChangeSetPerformer/perform(org.apache.commons.compress.archivers.ArchiveInputStream,org.apache.commons.compress.archivers.ArchiveOutputStream)#java/lang/StringBuilder/StringBuilder()
org/apache/commons/compress/changes/ChangeSetPerformer/perform(org.apache.commons.compress.archivers.ArchiveInputStream,org.apache.commons.compress.archivers.ArchiveOutputStream)#java/util/LinkedHashSet/LinkedHashSet(java.util.Collection)
org/apache/commons/compress/changes/ChangeSetPerformer/perform(org.apache.commons.compress.archivers.ArchiveInputStream,org.apache.commons.compress.archivers.ArchiveOutputStream)#java/util/Iterator/next()
org/apache/commons/compress/changes/ChangeSetPerformer/perform(org.apache.commons.compress.archivers.ArchiveInputStream,org.apache.commons.compress.archivers.ArchiveOutputStream)#java/util/Set/iterator()
org/apache/commons/compress/changes/ChangeSetPerformer/perform(org.apache.commons.compress.archivers.ArchiveInputStream,org.apache.commons.compress.archivers.ArchiveOutputStream)#java/lang/String/startsWith(java.lang.String)
org/apache/commons/compress/changes/ChangeSetPerformer/perform(org.apache.commons.compress.archivers.ArchiveInputStream,org.apache.commons.compress.archivers.ArchiveOutputStream)#java/lang/StringBuilder/toString()
org/apache/commons/compress/changes/ChangeSetPerformer/isDeletedLater(java.util.Set,org.apache.commons.compress.archivers.ArchiveEntry)#java/util/Iterator/hasNext()
org/apache/commons/compress/changes/ChangeSetPerformer/isDeletedLater(java.util.Set,org.apache.commons.compress.archivers.ArchiveEntry)#java/lang/StringBuilder/append(java.lang.String)
org/apache/commons/compress/changes/ChangeSetPerformer/isDeletedLater(java.util.Set,org.apache.commons.compress.archivers.ArchiveEntry)#java/util/Iterator/next()
org/apache/commons/compress/changes/ChangeSetPerformer/isDeletedLater(java.util.Set,org.apache.commons.compress.archivers.ArchiveEntry)#java/lang/StringBuilder/StringBuilder()
org/apache/commons/compress/changes/ChangeSetPerformer/isDeletedLater(java.util.Set,org.apache.commons.compress.archivers.ArchiveEntry)#java/util/Set/iterator()
org/apache/commons/compress/changes/ChangeSetPerformer/isDeletedLater(java.util.Set,org.apache.commons.compress.archivers.ArchiveEntry)#java/lang/StringBuilder/toString()
org/apache/commons/compress/changes/ChangeSetPerformer/isDeletedLater(java.util.Set,org.apache.commons.compress.archivers.ArchiveEntry)#java/lang/String/equals(java.lang.Object)
org/apache/commons/compress/changes/ChangeSetPerformer/isDeletedLater(java.util.Set,org.apache.commons.compress.archivers.ArchiveEntry)#java/util/Set/isEmpty()
org/apache/commons/compress/changes/ChangeSetPerformer/isDeletedLater(java.util.Set,org.apache.commons.compress.archivers.ArchiveEntry)#java/lang/String/startsWith(java.lang.String)
org/apache/commons/compress/changes/ChangeSet/addDeletion(org.apache.commons.compress.changes.Change)#java/util/Iterator/remove()
org/apache/commons/compress/changes/ChangeSet/addDeletion(org.apache.commons.compress.changes.Change)#java/util/Iterator/hasNext()
org/apache/commons/compress/changes/ChangeSet/addDeletion(org.apache.commons.compress.changes.Change)#java/lang/StringBuilder/append(java.lang.String)
org/apache/commons/compress/changes/ChangeSet/addDeletion(org.apache.commons.compress.changes.Change)#java/util/Iterator/next()
org/apache/commons/compress/changes/ChangeSet/addDeletion(org.apache.commons.compress.changes.Change)#java/lang/StringBuilder/StringBuilder()
org/apache/commons/compress/changes/ChangeSet/addDeletion(org.apache.commons.compress.changes.Change)#java/util/Set/iterator()
org/apache/commons/compress/changes/ChangeSet/addDeletion(org.apache.commons.compress.changes.Change)#java/util/Set/add(java.lang.Object)
org/apache/commons/compress/changes/ChangeSet/addDeletion(org.apache.commons.compress.changes.Change)#java/lang/String/matches(java.lang.String)
org/apache/commons/compress/changes/ChangeSet/addDeletion(org.apache.commons.compress.changes.Change)#java/lang/StringBuilder/toString()
org/apache/commons/compress/changes/ChangeSet/addDeletion(org.apache.commons.compress.changes.Change)#java/lang/String/equals(java.lang.Object)
org/apache/commons/compress/changes/ChangeSet/addDeletion(org.apache.commons.compress.changes.Change)#java/util/Set/isEmpty()
org/apache/commons/compress/archivers/zip/AsiExtraField/parseFromLocalFileData(byte[],int,int)#java/util/zip/CRC32/update(byte[])
org/apache/commons/compress/archivers/zip/AsiExtraField/parseFromLocalFileData(byte[],int,int)#java/lang/StringBuilder/append(java.lang.String)
org/apache/commons/compress/archivers/zip/AsiExtraField/parseFromLocalFileData(byte[],int,int)#java/lang/Long/toHexString(long)
org/apache/commons/compress/archivers/zip/AsiExtraField/parseFromLocalFileData(byte[],int,int)#java/lang/System/arraycopy(java.lang.Object,int,java.lang.Object,int,int)
org/apache/commons/compress/archivers/zip/AsiExtraField/parseFromLocalFileData(byte[],int,int)#java/util/zip/CRC32/reset()
org/apache/commons/compress/archivers/zip/AsiExtraField/parseFromLocalFileData(byte[],int,int)#java/lang/StringBuilder/StringBuilder()
org/apache/commons/compress/archivers/zip/AsiExtraField/parseFromLocalFileData(byte[],int,int)#java/lang/String/String(byte[])
org/apache/commons/compress/archivers/zip/AsiExtraField/parseFromLocalFileData(byte[],int,int)#java/lang/StringBuilder/toString()
org/apache/commons/compress/archivers/zip/AsiExtraField/parseFromLocalFileData(byte[],int,int)#java/util/zip/CRC32/getValue()
org/apache/commons/compress/archivers/zip/AsiExtraField/parseFromLocalFileData(byte[],int,int)#java/util/zip/ZipException/ZipException(java.lang.String)
org/apache/commons/compress/archivers/ar/ArArchiveInputStream/getNextArEntry()#java/lang/StringBuilder/append(long)
org/apache/commons/compress/archivers/ar/ArArchiveInputStream/getNextArEntry()#java/lang/StringBuilder/StringBuilder()
org/apache/commons/compress/archivers/ar/ArArchiveInputStream/getNextArEntry()#org/apache/commons/compress/archivers/ar/ArArchiveInputStream/getBytesRead()
org/apache/commons/compress/archivers/ar/ArArchiveInputStream/getNextArEntry()#org/apache/commons/compress/archivers/ar/ArArchiveInputStream/read(byte[])
org/apache/commons/compress/archivers/ar/ArArchiveInputStream/getNextArEntry()#org/apache/commons/compress/archivers/ar/ArArchiveInputStream/read()
org/apache/commons/compress/archivers/ar/ArArchiveInputStream/getNextArEntry()#java/io/InputStream/available()
org/apache/commons/compress/archivers/ar/ArArchiveInputStream/getNextArEntry()#java/io/IOException/IOException(java.lang.String)
org/apache/commons/compress/archivers/ar/ArArchiveInputStream/getNextArEntry()#java/lang/StringBuilder/append(java.lang.String)
org/apache/commons/compress/archivers/ar/ArArchiveInputStream/getNextArEntry()#java/lang/String/trim()
org/apache/commons/compress/archivers/ar/ArArchiveInputStream/getNextArEntry()#java/lang/String/length()
org/apache/commons/compress/archivers/ar/ArArchiveInputStream/getNextArEntry()#java/lang/String/substring(int,int)
org/apache/commons/compress/archivers/ar/ArArchiveInputStream/getNextArEntry()#java/lang/String/substring(int)
org/apache/commons/compress/archivers/ar/ArArchiveInputStream/getNextArEntry()#java/lang/Integer/parseInt(java.lang.String)
org/apache/commons/compress/archivers/ar/ArArchiveInputStream/getNextArEntry()#java/lang/StringBuilder/toString()
org/apache/commons/compress/archivers/ar/ArArchiveInputStream/getNextArEntry()#java/lang/String/endsWith(java.lang.String)
org/apache/commons/compress/archivers/dump/DumpArchiveInputStream/getPath(org.apache.commons.compress.archivers.dump.DumpArchiveEntry)#java/util/Stack/Stack()
org/apache/commons/compress/archivers/dump/DumpArchiveInputStream/getPath(org.apache.commons.compress.archivers.dump.DumpArchiveEntry)#java/util/Stack/pop()
org/apache/commons/compress/archivers/dump/DumpArchiveInputStream/getPath(org.apache.commons.compress.archivers.dump.DumpArchiveEntry)#java/util/Map/get(java.lang.Object)
org/apache/commons/compress/archivers/dump/DumpArchiveInputStream/getPath(org.apache.commons.compress.archivers.dump.DumpArchiveEntry)#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/apache/commons/compress/archivers/dump/DumpArchiveInputStream/getPath(org.apache.commons.compress.archivers.dump.DumpArchiveEntry)#java/lang/StringBuilder/append(char)
org/apache/commons/compress/archivers/dump/DumpArchiveInputStream/getPath(org.apache.commons.compress.archivers.dump.DumpArchiveEntry)#java/lang/StringBuilder/toString()
org/apache/commons/compress/archivers/dump/DumpArchiveInputStream/getPath(org.apache.commons.compress.archivers.dump.DumpArchiveEntry)#java/util/Stack/clear()
org/apache/commons/compress/archivers/dump/DumpArchiveInputStream/getPath(org.apache.commons.compress.archivers.dump.DumpArchiveEntry)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/commons/compress/archivers/dump/DumpArchiveInputStream/getPath(org.apache.commons.compress.archivers.dump.DumpArchiveEntry)#java/lang/StringBuilder/append(java.lang.String)
org/apache/commons/compress/archivers/dump/DumpArchiveInputStream/getPath(org.apache.commons.compress.archivers.dump.DumpArchiveEntry)#java/util/Stack/push(java.lang.Object)
org/apache/commons/compress/archivers/dump/DumpArchiveInputStream/getPath(org.apache.commons.compress.archivers.dump.DumpArchiveEntry)#java/util/Map/containsKey(java.lang.Object)
org/apache/commons/compress/archivers/dump/DumpArchiveInputStream/getPath(org.apache.commons.compress.archivers.dump.DumpArchiveEntry)#java/util/Stack/isEmpty()
org/apache/commons/compress/archivers/dump/DumpArchiveInputStream/getPath(org.apache.commons.compress.archivers.dump.DumpArchiveEntry)#java/lang/Integer/valueOf(int)
org/apache/commons/compress/archivers/dump/DumpArchiveInputStream/readDirectoryEntry(org.apache.commons.compress.archivers.dump.DumpArchiveEntry)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/commons/compress/archivers/dump/DumpArchiveInputStream/readDirectoryEntry(org.apache.commons.compress.archivers.dump.DumpArchiveEntry)#java/lang/String/String(byte[],int,int)
org/apache/commons/compress/archivers/dump/DumpArchiveInputStream/readDirectoryEntry(org.apache.commons.compress.archivers.dump.DumpArchiveEntry)#java/util/Iterator/next()
org/apache/commons/compress/archivers/dump/DumpArchiveInputStream/readDirectoryEntry(org.apache.commons.compress.archivers.dump.DumpArchiveEntry)#java/util/Map/remove(java.lang.Object)
org/apache/commons/compress/archivers/dump/DumpArchiveInputStream/readDirectoryEntry(org.apache.commons.compress.archivers.dump.DumpArchiveEntry)#java/util/Iterator/hasNext()
org/apache/commons/compress/archivers/dump/DumpArchiveInputStream/readDirectoryEntry(org.apache.commons.compress.archivers.dump.DumpArchiveEntry)#java/util/Queue/iterator()
org/apache/commons/compress/archivers/dump/DumpArchiveInputStream/readDirectoryEntry(org.apache.commons.compress.archivers.dump.DumpArchiveEntry)#java/util/Map$Entry/getKey()
org/apache/commons/compress/archivers/dump/DumpArchiveInputStream/readDirectoryEntry(org.apache.commons.compress.archivers.dump.DumpArchiveEntry)#java/util/Queue/add(java.lang.Object)
org/apache/commons/compress/archivers/dump/DumpArchiveInputStream/readDirectoryEntry(org.apache.commons.compress.archivers.dump.DumpArchiveEntry)#java/util/Map/get(java.lang.Object)
org/apache/commons/compress/archivers/dump/DumpArchiveInputStream/readDirectoryEntry(org.apache.commons.compress.archivers.dump.DumpArchiveEntry)#java/lang/String/equals(java.lang.Object)
org/apache/commons/compress/archivers/dump/DumpArchiveInputStream/readDirectoryEntry(org.apache.commons.compress.archivers.dump.DumpArchiveEntry)#java/util/Set/iterator()
org/apache/commons/compress/archivers/dump/DumpArchiveInputStream/readDirectoryEntry(org.apache.commons.compress.archivers.dump.DumpArchiveEntry)#java/io/EOFException/EOFException()
org/apache/commons/compress/archivers/dump/DumpArchiveInputStream/readDirectoryEntry(org.apache.commons.compress.archivers.dump.DumpArchiveEntry)#java/util/Map/containsKey(java.lang.Object)
org/apache/commons/compress/archivers/dump/DumpArchiveInputStream/readDirectoryEntry(org.apache.commons.compress.archivers.dump.DumpArchiveEntry)#java/lang/Integer/valueOf(int)
org/apache/commons/compress/archivers/dump/DumpArchiveInputStream/readDirectoryEntry(org.apache.commons.compress.archivers.dump.DumpArchiveEntry)#java/util/Map$Entry/getValue()
org/apache/commons/compress/archivers/dump/DumpArchiveInputStream/readDirectoryEntry(org.apache.commons.compress.archivers.dump.DumpArchiveEntry)#java/util/Map/entrySet()
org/apache/commons/compress/compressors/pack200/Pack200Utils/normalize(java.io.File,java.io.File,java.util.Map)#java/io/OutputStream/close()
org/apache/commons/compress/compressors/pack200/Pack200Utils/normalize(java.io.File,java.io.File,java.util.Map)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/commons/compress/compressors/pack200/Pack200Utils/normalize(java.io.File,java.io.File,java.util.Map)#java/util/jar/JarFile/close()
org/apache/commons/compress/compressors/pack200/Pack200Utils/normalize(java.io.File,java.io.File,java.util.Map)#java/util/jar/Pack200$Unpacker/unpack(java.io.File,java.util.jar.JarOutputStream)
org/apache/commons/compress/compressors/pack200/Pack200Utils/normalize(java.io.File,java.io.File,java.util.Map)#java/util/SortedMap/putAll(java.util.Map)
org/apache/commons/compress/compressors/pack200/Pack200Utils/normalize(java.io.File,java.io.File,java.util.Map)#java/util/HashMap/HashMap()
org/apache/commons/compress/compressors/pack200/Pack200Utils/normalize(java.io.File,java.io.File,java.util.Map)#java/util/jar/Pack200/newUnpacker()
org/apache/commons/compress/compressors/pack200/Pack200Utils/normalize(java.io.File,java.io.File,java.util.Map)#java/util/jar/JarFile/JarFile(java.io.File)
org/apache/commons/compress/compressors/pack200/Pack200Utils/normalize(java.io.File,java.io.File,java.util.Map)#java/util/jar/Pack200/newPacker()
org/apache/commons/compress/compressors/pack200/Pack200Utils/normalize(java.io.File,java.io.File,java.util.Map)#java/util/jar/Pack200$Packer/properties()
org/apache/commons/compress/compressors/pack200/Pack200Utils/normalize(java.io.File,java.io.File,java.util.Map)#java/util/jar/Pack200$Packer/pack(java.util.jar.JarFile,java.io.OutputStream)
org/apache/commons/compress/compressors/pack200/Pack200Utils/normalize(java.io.File,java.io.File,java.util.Map)#java/io/File/createTempFile(java.lang.String,java.lang.String)
org/apache/commons/compress/compressors/pack200/Pack200Utils/normalize(java.io.File,java.io.File,java.util.Map)#java/util/jar/JarOutputStream/JarOutputStream(java.io.OutputStream)
org/apache/commons/compress/compressors/pack200/Pack200Utils/normalize(java.io.File,java.io.File,java.util.Map)#java/io/File/deleteOnExit()
org/apache/commons/compress/compressors/pack200/Pack200Utils/normalize(java.io.File,java.io.File,java.util.Map)#java/io/File/delete()
org/apache/commons/compress/compressors/pack200/Pack200Utils/normalize(java.io.File,java.io.File,java.util.Map)#java/io/FileOutputStream/FileOutputStream(java.io.File)
org/apache/commons/compress/archivers/zip/ExtraFieldUtils/parse(byte[],boolean,org.apache.commons.compress.archivers.zip.ExtraFieldUtils$UnparseableExtraField)#java/util/ArrayList/ArrayList()
org/apache/commons/compress/archivers/zip/ExtraFieldUtils/parse(byte[],boolean,org.apache.commons.compress.archivers.zip.ExtraFieldUtils$UnparseableExtraField)#java/lang/InstantiationException/getMessage()
org/apache/commons/compress/archivers/zip/ExtraFieldUtils/parse(byte[],boolean,org.apache.commons.compress.archivers.zip.ExtraFieldUtils$UnparseableExtraField)#java/lang/StringBuilder/append(java.lang.String)
org/apache/commons/compress/archivers/zip/ExtraFieldUtils/parse(byte[],boolean,org.apache.commons.compress.archivers.zip.ExtraFieldUtils$UnparseableExtraField)#java/lang/StringBuilder/append(int)
org/apache/commons/compress/archivers/zip/ExtraFieldUtils/parse(byte[],boolean,org.apache.commons.compress.archivers.zip.ExtraFieldUtils$UnparseableExtraField)#java/util/List/size()
org/apache/commons/compress/archivers/zip/ExtraFieldUtils/parse(byte[],boolean,org.apache.commons.compress.archivers.zip.ExtraFieldUtils$UnparseableExtraField)#java/util/List/toArray(java.lang.Object[])
org/apache/commons/compress/archivers/zip/ExtraFieldUtils/parse(byte[],boolean,org.apache.commons.compress.archivers.zip.ExtraFieldUtils$UnparseableExtraField)#java/lang/IllegalAccessException/getMessage()
org/apache/commons/compress/archivers/zip/ExtraFieldUtils/parse(byte[],boolean,org.apache.commons.compress.archivers.zip.ExtraFieldUtils$UnparseableExtraField)#java/lang/StringBuilder/StringBuilder()
org/apache/commons/compress/archivers/zip/ExtraFieldUtils/parse(byte[],boolean,org.apache.commons.compress.archivers.zip.ExtraFieldUtils$UnparseableExtraField)#java/util/List/add(java.lang.Object)
org/apache/commons/compress/archivers/zip/ExtraFieldUtils/parse(byte[],boolean,org.apache.commons.compress.archivers.zip.ExtraFieldUtils$UnparseableExtraField)#org/apache/commons/compress/archivers/zip/ExtraFieldUtils$UnparseableExtraField/getKey()
org/apache/commons/compress/archivers/zip/ExtraFieldUtils/parse(byte[],boolean,org.apache.commons.compress.archivers.zip.ExtraFieldUtils$UnparseableExtraField)#java/lang/StringBuilder/toString()
org/apache/commons/compress/archivers/zip/ExtraFieldUtils/parse(byte[],boolean,org.apache.commons.compress.archivers.zip.ExtraFieldUtils$UnparseableExtraField)#java/util/zip/ZipException/ZipException(java.lang.String)
org/apache/commons/compress/archivers/zip/ZipArchiveInputStream/readDeflated(byte[],int,int)#java/util/zip/Inflater/finished()
org/apache/commons/compress/archivers/zip/ZipArchiveInputStream/readDeflated(byte[],int,int)#java/io/IOException/IOException(java.lang.String)
org/apache/commons/compress/archivers/zip/ZipArchiveInputStream/readDeflated(byte[],int,int)#org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry/access$914(org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$CurrentEntry,long)
org/apache/commons/compress/archivers/zip/ZipArchiveInputStream/readDeflated(byte[],int,int)#java/util/zip/DataFormatException/getMessage()
org/apache/commons/compress/archivers/zip/ZipArchiveInputStream/readDeflated(byte[],int,int)#java/util/zip/CRC32/update(byte[],int,int)
org/apache/commons/compress/archivers/zip/ZipArchiveInputStream/readDeflated(byte[],int,int)#java/util/zip/Inflater/inflate(byte[],int,int)
org/apache/commons/compress/archivers/zip/ZipArchiveInputStream/readDeflated(byte[],int,int)#org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$Buffer/access$800(org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$Buffer)
org/apache/commons/compress/archivers/zip/ZipArchiveInputStream/readDeflated(byte[],int,int)#java/util/zip/Inflater/needsInput()
org/apache/commons/compress/archivers/zip/ZipArchiveInputStream/readDeflated(byte[],int,int)#java/util/zip/ZipException/ZipException(java.lang.String)
org/apache/commons/compress/archivers/zip/ZipArchiveInputStream/closeEntry()#java/util/zip/CRC32/reset()
org/apache/commons/compress/archivers/zip/ZipArchiveInputStream/closeEntry()#org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry/access$300(org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$CurrentEntry)
org/apache/commons/compress/archivers/zip/ZipArchiveInputStream/closeEntry()#org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry/access$900(org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$CurrentEntry)
org/apache/commons/compress/archivers/zip/ZipArchiveInputStream/closeEntry()#java/util/zip/Inflater/reset()
org/apache/commons/compress/archivers/zip/ZipArchiveInputStream/closeEntry()#org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$Buffer/access$100(org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$Buffer)
org/apache/commons/compress/archivers/zip/ZipArchiveInputStream/closeEntry()#java/io/IOException/IOException(java.lang.String)
org/apache/commons/compress/archivers/zip/ZipArchiveInputStream/closeEntry()#org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry/access$400(org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$CurrentEntry)
org/apache/commons/compress/archivers/zip/ZipArchiveInputStream/closeEntry()#org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry/access$600(org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$CurrentEntry)
org/apache/commons/compress/archivers/zip/ZipArchiveInputStream/closeEntry()#org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$Buffer/access$1000(org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$Buffer)
org/apache/commons/compress/archivers/zip/ZipArchiveInputStream/closeEntry()#org/apache/commons/compress/archivers/zip/ZipArchiveEntry/getCompressedSize()
org/apache/commons/compress/archivers/zip/ZipArchiveInputStream/closeEntry()#org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$Buffer/access$800(org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$Buffer)
org/apache/commons/compress/archivers/zip/ZipArchiveInputStream/drainCurrentEntryData()#org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry/access$300(org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$CurrentEntry)
org/apache/commons/compress/archivers/zip/ZipArchiveInputStream/drainCurrentEntryData()#java/lang/StringBuilder/append(java.lang.String)
org/apache/commons/compress/archivers/zip/ZipArchiveInputStream/drainCurrentEntryData()#org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry/access$900(org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$CurrentEntry)
org/apache/commons/compress/archivers/zip/ZipArchiveInputStream/drainCurrentEntryData()#org/apache/commons/compress/archivers/zip/ZipArchiveEntry/getCompressedSize()
org/apache/commons/compress/archivers/zip/ZipArchiveInputStream/drainCurrentEntryData()#java/io/EOFException/EOFException(java.lang.String)
org/apache/commons/compress/archivers/zip/ZipArchiveInputStream/drainCurrentEntryData()#java/io/InputStream/read(byte[],int,int)
org/apache/commons/compress/archivers/zip/ZipArchiveInputStream/drainCurrentEntryData()#java/lang/Math/min(long,long)
org/apache/commons/compress/archivers/zip/ZipArchiveInputStream/drainCurrentEntryData()#java/lang/StringBuilder/StringBuilder()
org/apache/commons/compress/archivers/zip/ZipArchiveInputStream/drainCurrentEntryData()#org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$Buffer/access$100(org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$Buffer)
org/apache/commons/compress/archivers/zip/ZipArchiveInputStream/drainCurrentEntryData()#java/lang/StringBuilder/toString()
org/apache/commons/compress/archivers/zip/ZipArchiveInputStream/drainCurrentEntryData()#org/apache/commons/compress/archivers/zip/ZipArchiveInputStream/count(long)
org/apache/commons/compress/archivers/zip/ZipArchiveInputStream/readStored(byte[],int,int)#org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry/access$300(org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$CurrentEntry)
org/apache/commons/compress/archivers/zip/ZipArchiveInputStream/readStored(byte[],int,int)#org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry/access$914(org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$CurrentEntry,long)
org/apache/commons/compress/archivers/zip/ZipArchiveInputStream/readStored(byte[],int,int)#org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$Buffer/access$712(org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$Buffer,int)
org/apache/commons/compress/archivers/zip/ZipArchiveInputStream/readStored(byte[],int,int)#org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$Buffer/access$702(org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$Buffer,int)
org/apache/commons/compress/archivers/zip/ZipArchiveInputStream/readStored(byte[],int,int)#java/util/zip/CRC32/update(byte[],int,int)
org/apache/commons/compress/archivers/zip/ZipArchiveInputStream/readStored(byte[],int,int)#org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry/access$400(org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$CurrentEntry)
org/apache/commons/compress/archivers/zip/ZipArchiveInputStream/readStored(byte[],int,int)#java/io/InputStream/read(byte[])
org/apache/commons/compress/archivers/zip/ZipArchiveInputStream/readStored(byte[],int,int)#org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry/access$600(org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$CurrentEntry)
org/apache/commons/compress/archivers/zip/ZipArchiveInputStream/readStored(byte[],int,int)#org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$Buffer/access$100(org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$Buffer)
org/apache/commons/compress/archivers/zip/ZipArchiveInputStream/readStored(byte[],int,int)#org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry/access$614(org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$CurrentEntry,long)
org/apache/commons/compress/archivers/zip/ZipArchiveInputStream/readStored(byte[],int,int)#org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$Buffer/access$802(org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$Buffer,int)
org/apache/commons/compress/archivers/zip/ZipArchiveInputStream/readStored(byte[],int,int)#org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$Buffer/access$700(org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$Buffer)
org/apache/commons/compress/archivers/zip/ZipArchiveInputStream/readStored(byte[],int,int)#org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$Buffer/access$800(org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$Buffer)
org/apache/commons/compress/archivers/zip/ZipArchiveInputStream/readStored(byte[],int,int)#java/lang/System/arraycopy(java.lang.Object,int,java.lang.Object,int,int)
org/apache/commons/compress/archivers/zip/ZipArchiveInputStream/readStored(byte[],int,int)#org/apache/commons/compress/archivers/zip/ZipArchiveInputStream/count(int)
org/apache/commons/compress/archivers/zip/ZipArchiveInputStream/readStored(byte[],int,int)#java/io/ByteArrayInputStream/read(byte[],int,int)
