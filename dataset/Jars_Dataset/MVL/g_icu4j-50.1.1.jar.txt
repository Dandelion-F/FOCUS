com/ibm/icu/text/DateTimePatternGenerator/FormatParser/set(java.lang.String,boolean)#java/lang/StringBuffer/charAt(int)
com/ibm/icu/text/DateTimePatternGenerator/FormatParser/set(java.lang.String,boolean)#java/lang/StringBuffer/toString()
com/ibm/icu/text/DateTimePatternGenerator/FormatParser/set(java.lang.String,boolean)#java/util/List/clear()
com/ibm/icu/text/DateTimePatternGenerator/FormatParser/set(java.lang.String,boolean)#java/util/List/add(java.lang.Object)
com/ibm/icu/text/DateTimePatternGenerator/FormatParser/set(java.lang.String,boolean)#java/lang/StringBuffer/append(java.lang.StringBuffer)
com/ibm/icu/text/DateTimePatternGenerator/FormatParser/set(java.lang.String,boolean)#java/lang/StringBuffer/setLength(int)
com/ibm/icu/text/DateTimePatternGenerator/FormatParser/set(java.lang.String,boolean)#java/lang/String/length()
com/ibm/icu/text/DateTimePatternGenerator/FormatParser/set(java.lang.String,boolean)#java/lang/StringBuffer/length()
com/ibm/icu/text/DateTimePatternGenerator/FormatParser/set(java.lang.String,boolean)#java/lang/StringBuffer/StringBuffer()
com/ibm/icu/text/DateTimePatternGenerator/FormatParser/set(java.lang.String,boolean)#com/ibm/icu/text/DateTimePatternGenerator$FormatParser/addVariable(java.lang.StringBuffer,boolean)
com/ibm/icu/impl/duration/impl/DataRecord/read(java.lang.String,com.ibm.icu.impl.duration.impl.RecordReader)#java/util/ArrayList/ArrayList()
com/ibm/icu/impl/duration/impl/DataRecord/read(java.lang.String,com.ibm.icu.impl.duration.impl.RecordReader)#com/ibm/icu/impl/duration/impl/DataRecord$ScopeData/read(com.ibm.icu.impl.duration.impl.RecordReader)
com/ibm/icu/impl/duration/impl/DataRecord/read(java.lang.String,com.ibm.icu.impl.duration.impl.RecordReader)#java/lang/StringBuilder/append(java.lang.String)
com/ibm/icu/impl/duration/impl/DataRecord/read(java.lang.String,com.ibm.icu.impl.duration.impl.RecordReader)#java/util/List/size()
com/ibm/icu/impl/duration/impl/DataRecord/read(java.lang.String,com.ibm.icu.impl.duration.impl.RecordReader)#java/util/List/toArray(java.lang.Object[])
com/ibm/icu/impl/duration/impl/DataRecord/read(java.lang.String,com.ibm.icu.impl.duration.impl.RecordReader)#java/util/List/add(java.lang.Object)
com/ibm/icu/impl/duration/impl/DataRecord/read(java.lang.String,com.ibm.icu.impl.duration.impl.RecordReader)#java/lang/InternalError/InternalError(java.lang.String)
com/ibm/icu/impl/duration/impl/DataRecord/read(java.lang.String,com.ibm.icu.impl.duration.impl.RecordReader)#java/lang/StringBuilder/StringBuilder()
com/ibm/icu/impl/duration/impl/DataRecord/read(java.lang.String,com.ibm.icu.impl.duration.impl.RecordReader)#java/lang/StringBuilder/toString()
com/ibm/icu/text/DecimalFormat/subparse(java.lang.String,java.text.ParsePosition,com.ibm.icu.text.DigitList,boolean[],com.ibm.icu.util.Currency[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)#java/lang/String/regionMatches(int,java.lang.String,int,int)
com/ibm/icu/text/DecimalFormat/subparse(java.lang.String,java.text.ParsePosition,com.ibm.icu.text.DigitList,boolean[],com.ibm.icu.util.Currency[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)#com/ibm/icu/text/DecimalFormat/isParseIntegerOnly()
com/ibm/icu/text/DecimalFormat/subparse(java.lang.String,java.text.ParsePosition,com.ibm.icu.text.DigitList,boolean[],com.ibm.icu.util.Currency[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)#java/lang/String/length()
com/ibm/icu/text/DecimalFormat/subparse(java.lang.String,java.text.ParsePosition,com.ibm.icu.text.DigitList,boolean[],com.ibm.icu.util.Currency[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)#java/text/ParsePosition/setErrorIndex(int)
com/ibm/icu/text/DecimalFormat/subparse(java.lang.String,java.text.ParsePosition,com.ibm.icu.text.DigitList,boolean[],com.ibm.icu.util.Currency[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)#com/ibm/icu/text/DecimalFormat/isParseStrict()
com/ibm/icu/text/DecimalFormat/subparse(java.lang.String,java.text.ParsePosition,com.ibm.icu.text.DigitList,boolean[],com.ibm.icu.util.Currency[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)#java/lang/String/regionMatches(boolean,int,java.lang.String,int,int)
com/ibm/icu/text/DecimalFormat/subparse(java.lang.String,java.text.ParsePosition,com.ibm.icu.text.DigitList,boolean[],com.ibm.icu.util.Currency[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)#java/text/ParsePosition/setIndex(int)
com/ibm/icu/text/DecimalFormat/subparse(java.lang.String,java.text.ParsePosition,com.ibm.icu.text.DigitList,boolean[],com.ibm.icu.util.Currency[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)#com/ibm/icu/text/DecimalFormat/isGroupingUsed()
com/ibm/icu/text/DecimalFormat/subparse(java.lang.String,java.text.ParsePosition,com.ibm.icu.text.DigitList,boolean[],com.ibm.icu.util.Currency[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)#java/lang/String/equals(java.lang.Object)
com/ibm/icu/text/DecimalFormat/subparse(java.lang.String,java.text.ParsePosition,com.ibm.icu.text.DigitList,boolean[],com.ibm.icu.util.Currency[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)#java/text/ParsePosition/getIndex()
com/ibm/icu/text/DecimalFormat/expandAffix(java.lang.String,java.lang.String,java.lang.StringBuffer,boolean)#java/lang/String/length()
com/ibm/icu/text/DecimalFormat/expandAffix(java.lang.String,java.lang.String,java.lang.StringBuffer,boolean)#java/text/ChoiceFormat/format(double,java.lang.StringBuffer,java.text.FieldPosition)
com/ibm/icu/text/DecimalFormat/expandAffix(java.lang.String,java.lang.String,java.lang.StringBuffer,boolean)#java/lang/String/substring(int,int)
com/ibm/icu/text/DecimalFormat/expandAffix(java.lang.String,java.lang.String,java.lang.StringBuffer,boolean)#com/ibm/icu/text/DecimalFormat/getCurrency()
com/ibm/icu/text/DecimalFormat/expandAffix(java.lang.String,java.lang.String,java.lang.StringBuffer,boolean)#java/lang/RuntimeException/RuntimeException()
com/ibm/icu/text/DecimalFormat/expandAffix(java.lang.String,java.lang.String,java.lang.StringBuffer,boolean)#java/lang/StringBuffer/setLength(int)
com/ibm/icu/text/DecimalFormat/expandAffix(java.lang.String,java.lang.String,java.lang.StringBuffer,boolean)#java/text/FieldPosition/FieldPosition(int)
com/ibm/icu/text/DecimalFormat/expandAffix(java.lang.String,java.lang.String,java.lang.StringBuffer,boolean)#java/lang/String/valueOf(char)
com/ibm/icu/text/DecimalFormat/expandAffix(java.lang.String,java.lang.String,java.lang.StringBuffer,boolean)#java/lang/String/charAt(int)
com/ibm/icu/text/DecimalFormat/expandAffix(java.lang.String,java.lang.String,java.lang.StringBuffer,boolean)#java/lang/StringBuffer/append(char)
com/ibm/icu/text/DecimalFormat/expandAffix(java.lang.String,java.lang.String,java.lang.StringBuffer,boolean)#java/text/ChoiceFormat/ChoiceFormat(java.lang.String)
com/ibm/icu/text/DecimalFormat/expandAffix(java.lang.String,java.lang.String,java.lang.StringBuffer,boolean)#java/lang/String/indexOf(int,int)
com/ibm/icu/text/DecimalFormat/expandAffix(java.lang.String,java.lang.String,java.lang.StringBuffer,boolean)#java/lang/StringBuffer/append(java.lang.String)
com/ibm/icu/text/DecimalFormat/formatToCharacterIterator(java.lang.Object,com.ibm.icu.text.DecimalFormat$Unit)#java/text/FieldPosition/FieldPosition(int)
com/ibm/icu/text/DecimalFormat/formatToCharacterIterator(java.lang.Object,com.ibm.icu.text.DecimalFormat$Unit)#java/text/AttributedString/addAttribute(java.text.AttributedCharacterIterator$Attribute,java.lang.Object,int,int)
com/ibm/icu/text/DecimalFormat/formatToCharacterIterator(java.lang.Object,com.ibm.icu.text.DecimalFormat$Unit)#java/util/ArrayList/clear()
com/ibm/icu/text/DecimalFormat/formatToCharacterIterator(java.lang.Object,com.ibm.icu.text.DecimalFormat$Unit)#java/lang/StringBuffer/toString()
com/ibm/icu/text/DecimalFormat/formatToCharacterIterator(java.lang.Object,com.ibm.icu.text.DecimalFormat$Unit)#java/text/AttributedString/AttributedString(java.lang.String)
com/ibm/icu/text/DecimalFormat/formatToCharacterIterator(java.lang.Object,com.ibm.icu.text.DecimalFormat$Unit)#java/text/FieldPosition/getBeginIndex()
com/ibm/icu/text/DecimalFormat/formatToCharacterIterator(java.lang.Object,com.ibm.icu.text.DecimalFormat$Unit)#java/text/FieldPosition/getEndIndex()
com/ibm/icu/text/DecimalFormat/formatToCharacterIterator(java.lang.Object,com.ibm.icu.text.DecimalFormat$Unit)#java/lang/Number/doubleValue()
com/ibm/icu/text/DecimalFormat/formatToCharacterIterator(java.lang.Object,com.ibm.icu.text.DecimalFormat$Unit)#java/util/ArrayList/size()
com/ibm/icu/text/DecimalFormat/formatToCharacterIterator(java.lang.Object,com.ibm.icu.text.DecimalFormat$Unit)#java/text/FieldPosition/getFieldAttribute()
com/ibm/icu/text/DecimalFormat/formatToCharacterIterator(java.lang.Object,com.ibm.icu.text.DecimalFormat$Unit)#com/ibm/icu/text/DecimalFormat$Unit/writeSuffix(java.lang.StringBuffer)
com/ibm/icu/text/DecimalFormat/formatToCharacterIterator(java.lang.Object,com.ibm.icu.text.DecimalFormat$Unit)#java/text/AttributedString/getIterator()
com/ibm/icu/text/DecimalFormat/formatToCharacterIterator(java.lang.Object,com.ibm.icu.text.DecimalFormat$Unit)#java/lang/Number/longValue()
com/ibm/icu/text/DecimalFormat/formatToCharacterIterator(java.lang.Object,com.ibm.icu.text.DecimalFormat$Unit)#java/util/ArrayList/get(int)
com/ibm/icu/text/DecimalFormat/formatToCharacterIterator(java.lang.Object,com.ibm.icu.text.DecimalFormat$Unit)#java/lang/IllegalArgumentException/IllegalArgumentException()
com/ibm/icu/text/DecimalFormat/formatToCharacterIterator(java.lang.Object,com.ibm.icu.text.DecimalFormat$Unit)#com/ibm/icu/text/DecimalFormat$Unit/writePrefix(java.lang.StringBuffer)
com/ibm/icu/text/DecimalFormat/formatToCharacterIterator(java.lang.Object,com.ibm.icu.text.DecimalFormat$Unit)#java/lang/StringBuffer/StringBuffer()
com/ibm/icu/text/DecimalFormat/subformatFixed(java.lang.StringBuffer,java.text.FieldPosition,boolean,boolean)#java/text/FieldPosition/setEndIndex(int)
com/ibm/icu/text/DecimalFormat/subformatFixed(java.lang.StringBuffer,java.text.FieldPosition,boolean,boolean)#java/lang/Math/max(int,int)
com/ibm/icu/text/DecimalFormat/subformatFixed(java.lang.StringBuffer,java.text.FieldPosition,boolean,boolean)#java/text/FieldPosition/setBeginIndex(int)
com/ibm/icu/text/DecimalFormat/subformatFixed(java.lang.StringBuffer,java.text.FieldPosition,boolean,boolean)#java/text/FieldPosition/getFieldAttribute()
com/ibm/icu/text/DecimalFormat/subformatFixed(java.lang.StringBuffer,java.text.FieldPosition,boolean,boolean)#java/text/FieldPosition/getField()
com/ibm/icu/text/DecimalFormat/subformatFixed(java.lang.StringBuffer,java.text.FieldPosition,boolean,boolean)#com/ibm/icu/text/DecimalFormat/getMinimumFractionDigits()
com/ibm/icu/text/DecimalFormat/subformatFixed(java.lang.StringBuffer,java.text.FieldPosition,boolean,boolean)#com/ibm/icu/text/DecimalFormat/getMaximumIntegerDigits()
com/ibm/icu/text/DecimalFormat/subformatFixed(java.lang.StringBuffer,java.text.FieldPosition,boolean,boolean)#java/lang/StringBuffer/append(char)
com/ibm/icu/text/DecimalFormat/subformatFixed(java.lang.StringBuffer,java.text.FieldPosition,boolean,boolean)#java/lang/StringBuffer/length()
com/ibm/icu/text/DecimalFormat/subformatFixed(java.lang.StringBuffer,java.text.FieldPosition,boolean,boolean)#com/ibm/icu/text/DecimalFormat/getMinimumIntegerDigits()
com/ibm/icu/text/DecimalFormat/subformatFixed(java.lang.StringBuffer,java.text.FieldPosition,boolean,boolean)#com/ibm/icu/text/DecimalFormat/getMaximumFractionDigits()
com/ibm/icu/text/DecimalFormat/parse(java.lang.String,java.text.ParsePosition,com.ibm.icu.util.Currency[])#java/lang/Double/Double(double)
com/ibm/icu/text/DecimalFormat/parse(java.lang.String,java.text.ParsePosition,com.ibm.icu.util.Currency[])#com/ibm/icu/math/BigDecimal/valueOf(long)
com/ibm/icu/text/DecimalFormat/parse(java.lang.String,java.text.ParsePosition,com.ibm.icu.util.Currency[])#java/text/ParsePosition/getIndex()
com/ibm/icu/text/DecimalFormat/parse(java.lang.String,java.text.ParsePosition,com.ibm.icu.util.Currency[])#java/text/ParsePosition/setIndex(int)
com/ibm/icu/text/DecimalFormat/parse(java.lang.String,java.text.ParsePosition,com.ibm.icu.util.Currency[])#java/lang/Long/valueOf(long)
com/ibm/icu/text/DecimalFormat/parse(java.lang.String,java.text.ParsePosition,com.ibm.icu.util.Currency[])#java/lang/String/regionMatches(int,java.lang.String,int,int)
com/ibm/icu/text/DecimalFormat/parse(java.lang.String,java.text.ParsePosition,com.ibm.icu.util.Currency[])#java/lang/String/length()
com/ibm/icu/text/DecimalFormat/parse(java.lang.String,java.text.ParsePosition,com.ibm.icu.util.Currency[])#java/math/BigInteger/bitLength()
com/ibm/icu/text/DecimalFormat/parse(java.lang.String,java.text.ParsePosition,com.ibm.icu.util.Currency[])#java/math/BigInteger/longValue()
com/ibm/icu/text/DecimalFormat/parse(java.lang.String,java.text.ParsePosition,com.ibm.icu.util.Currency[])#java/lang/Double/Double(java.lang.String)
com/ibm/icu/text/DecimalFormat/compareComplexAffix(java.lang.String,java.lang.String,int,int,com.ibm.icu.util.Currency[])#com/ibm/icu/text/DecimalFormat/getLocale(com.ibm.icu.util.ULocale$Type)
com/ibm/icu/text/DecimalFormat/compareComplexAffix(java.lang.String,java.lang.String,int,int,com.ibm.icu.util.Currency[])#java/lang/String/compareTo(java.lang.String)
com/ibm/icu/text/DecimalFormat/compareComplexAffix(java.lang.String,java.lang.String,int,int,com.ibm.icu.util.Currency[])#java/lang/String/length()
com/ibm/icu/text/DecimalFormat/compareComplexAffix(java.lang.String,java.lang.String,int,int,com.ibm.icu.util.Currency[])#java/text/ParsePosition/ParsePosition(int)
com/ibm/icu/text/DecimalFormat/compareComplexAffix(java.lang.String,java.lang.String,int,int,com.ibm.icu.util.Currency[])#java/lang/String/indexOf(int,int)
com/ibm/icu/text/DecimalFormat/compareComplexAffix(java.lang.String,java.lang.String,int,int,com.ibm.icu.util.Currency[])#java/lang/String/charAt(int)
com/ibm/icu/text/DecimalFormat/compareComplexAffix(java.lang.String,java.lang.String,int,int,com.ibm.icu.util.Currency[])#java/lang/String/substring(int,int)
com/ibm/icu/text/DecimalFormat/compareComplexAffix(java.lang.String,java.lang.String,int,int,com.ibm.icu.util.Currency[])#java/lang/RuntimeException/RuntimeException()
com/ibm/icu/text/DecimalFormat/compareComplexAffix(java.lang.String,java.lang.String,int,int,com.ibm.icu.util.Currency[])#java/text/ParsePosition/getIndex()
com/ibm/icu/text/DecimalFormat/format(double,java.lang.StringBuffer,java.text.FieldPosition,boolean)#java/lang/Double/isNaN(double)
com/ibm/icu/text/DecimalFormat/format(double,java.lang.StringBuffer,java.text.FieldPosition,boolean)#java/text/FieldPosition/setBeginIndex(int)
com/ibm/icu/text/DecimalFormat/format(double,java.lang.StringBuffer,java.text.FieldPosition,boolean)#java/text/FieldPosition/getField()
com/ibm/icu/text/DecimalFormat/format(double,java.lang.StringBuffer,java.text.FieldPosition,boolean)#java/text/FieldPosition/setEndIndex(int)
com/ibm/icu/text/DecimalFormat/format(double,java.lang.StringBuffer,java.text.FieldPosition,boolean)#java/lang/String/length()
com/ibm/icu/text/DecimalFormat/format(double,java.lang.StringBuffer,java.text.FieldPosition,boolean)#java/lang/StringBuffer/length()
com/ibm/icu/text/DecimalFormat/format(double,java.lang.StringBuffer,java.text.FieldPosition,boolean)#java/lang/Double/isInfinite(double)
com/ibm/icu/text/DecimalFormat/format(double,java.lang.StringBuffer,java.text.FieldPosition,boolean)#java/text/FieldPosition/getFieldAttribute()
com/ibm/icu/text/DecimalFormat/format(double,java.lang.StringBuffer,java.text.FieldPosition,boolean)#java/lang/StringBuffer/append(java.lang.String)
com/ibm/icu/text/DecimalFormat/appendAffixPattern(java.lang.StringBuffer,boolean,boolean,boolean)#java/lang/StringBuffer/append(char)
com/ibm/icu/text/DecimalFormat/appendAffixPattern(java.lang.StringBuffer,boolean,boolean,boolean)#java/lang/String/length()
com/ibm/icu/text/DecimalFormat/appendAffixPattern(java.lang.StringBuffer,boolean,boolean,boolean)#java/lang/String/substring(int,int)
com/ibm/icu/text/DecimalFormat/appendAffixPattern(java.lang.StringBuffer,boolean,boolean,boolean)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/ibm/icu/text/DecimalFormat/appendAffixPattern(java.lang.StringBuffer,boolean,boolean,boolean)#java/lang/StringBuilder/toString()
com/ibm/icu/text/DecimalFormat/appendAffixPattern(java.lang.StringBuffer,boolean,boolean,boolean)#java/lang/StringBuilder/append(java.lang.String)
com/ibm/icu/text/DecimalFormat/appendAffixPattern(java.lang.StringBuffer,boolean,boolean,boolean)#java/lang/String/charAt(int)
com/ibm/icu/text/DecimalFormat/appendAffixPattern(java.lang.StringBuffer,boolean,boolean,boolean)#java/lang/StringBuilder/StringBuilder()
com/ibm/icu/text/DecimalFormat/appendAffixPattern(java.lang.StringBuffer,boolean,boolean,boolean)#java/lang/String/indexOf(int,int)
com/ibm/icu/text/DecimalFormat/appendAffixPattern(java.lang.StringBuffer,boolean,boolean,boolean)#java/lang/StringBuffer/append(java.lang.String)
com/ibm/icu/text/DecimalFormat/subformatExponential(java.lang.StringBuffer,java.text.FieldPosition,boolean)#java/text/FieldPosition/setEndIndex(int)
com/ibm/icu/text/DecimalFormat/subformatExponential(java.lang.StringBuffer,java.text.FieldPosition,boolean)#java/text/FieldPosition/getFieldAttribute()
com/ibm/icu/text/DecimalFormat/subformatExponential(java.lang.StringBuffer,java.text.FieldPosition,boolean)#java/lang/StringBuffer/append(java.lang.String)
com/ibm/icu/text/DecimalFormat/subformatExponential(java.lang.StringBuffer,java.text.FieldPosition,boolean)#java/text/FieldPosition/getField()
com/ibm/icu/text/DecimalFormat/subformatExponential(java.lang.StringBuffer,java.text.FieldPosition,boolean)#com/ibm/icu/text/DecimalFormat/getMinimumFractionDigits()
com/ibm/icu/text/DecimalFormat/subformatExponential(java.lang.StringBuffer,java.text.FieldPosition,boolean)#java/text/FieldPosition/getEndIndex()
com/ibm/icu/text/DecimalFormat/subformatExponential(java.lang.StringBuffer,java.text.FieldPosition,boolean)#com/ibm/icu/text/DecimalFormat/getMaximumIntegerDigits()
com/ibm/icu/text/DecimalFormat/subformatExponential(java.lang.StringBuffer,java.text.FieldPosition,boolean)#java/lang/StringBuffer/append(char)
com/ibm/icu/text/DecimalFormat/subformatExponential(java.lang.StringBuffer,java.text.FieldPosition,boolean)#java/lang/String/length()
com/ibm/icu/text/DecimalFormat/subformatExponential(java.lang.StringBuffer,java.text.FieldPosition,boolean)#java/lang/StringBuffer/length()
com/ibm/icu/text/DecimalFormat/subformatExponential(java.lang.StringBuffer,java.text.FieldPosition,boolean)#java/text/FieldPosition/setBeginIndex(int)
com/ibm/icu/text/DecimalFormat/subformatExponential(java.lang.StringBuffer,java.text.FieldPosition,boolean)#com/ibm/icu/text/DecimalFormat/getMinimumIntegerDigits()
com/ibm/icu/text/DecimalFormat/subformatExponential(java.lang.StringBuffer,java.text.FieldPosition,boolean)#java/text/FieldPosition/getBeginIndex()
com/ibm/icu/text/DecimalFormat/applyPatternWithoutExpandAffix(java.lang.String,boolean)#java/lang/String/regionMatches(int,java.lang.String,int,int)
com/ibm/icu/text/DecimalFormat/applyPatternWithoutExpandAffix(java.lang.String,boolean)#java/lang/StringBuilder/append(char)
com/ibm/icu/text/DecimalFormat/applyPatternWithoutExpandAffix(java.lang.String,boolean)#java/lang/StringBuilder/toString()
com/ibm/icu/text/DecimalFormat/applyPatternWithoutExpandAffix(java.lang.String,boolean)#java/lang/String/valueOf(char)
com/ibm/icu/text/DecimalFormat/applyPatternWithoutExpandAffix(java.lang.String,boolean)#java/lang/StringBuilder/append(java.lang.String)
com/ibm/icu/text/DecimalFormat/applyPatternWithoutExpandAffix(java.lang.String,boolean)#java/lang/String/charAt(int)
com/ibm/icu/text/DecimalFormat/applyPatternWithoutExpandAffix(java.lang.String,boolean)#java/lang/String/length()
com/ibm/icu/text/DecimalFormat/applyPatternWithoutExpandAffix(java.lang.String,boolean)#com/ibm/icu/text/DecimalFormat/setGroupingUsed(boolean)
com/ibm/icu/text/DecimalFormat/applyPatternWithoutExpandAffix(java.lang.String,boolean)#com/ibm/icu/text/DecimalFormat/setLocale(com.ibm.icu.util.ULocale,com.ibm.icu.util.ULocale)
com/ibm/icu/text/DecimalFormat/applyPatternWithoutExpandAffix(java.lang.String,boolean)#com/ibm/icu/math/BigDecimal/valueOf(long,int)
com/ibm/icu/text/DecimalFormat/applyPatternWithoutExpandAffix(java.lang.String,boolean)#java/lang/String/equals(java.lang.Object)
com/ibm/icu/text/DecimalFormat/applyPatternWithoutExpandAffix(java.lang.String,boolean)#java/lang/StringBuilder/StringBuilder()
com/ibm/icu/text/DecimalFormat/applyPatternWithoutExpandAffix(java.lang.String,boolean)#com/ibm/icu/text/DecimalFormat/getCurrency()
com/ibm/icu/text/DecimalFormat/parseForCurrency(java.lang.String,java.text.ParsePosition,com.ibm.icu.util.Currency[],boolean[])#java/util/Iterator/hasNext()
com/ibm/icu/text/DecimalFormat/parseForCurrency(java.lang.String,java.text.ParsePosition,com.ibm.icu.util.Currency[],boolean[])#com/ibm/icu/text/DecimalFormat$AffixForCurrency/getNegPrefix()
com/ibm/icu/text/DecimalFormat/parseForCurrency(java.lang.String,java.text.ParsePosition,com.ibm.icu.util.Currency[],boolean[])#com/ibm/icu/text/DecimalFormat$AffixForCurrency/getPosSuffix()
com/ibm/icu/text/DecimalFormat/parseForCurrency(java.lang.String,java.text.ParsePosition,com.ibm.icu.util.Currency[],boolean[])#java/util/Iterator/next()
com/ibm/icu/text/DecimalFormat/parseForCurrency(java.lang.String,java.text.ParsePosition,com.ibm.icu.util.Currency[],boolean[])#com/ibm/icu/text/DecimalFormat$AffixForCurrency/getPatternType()
com/ibm/icu/text/DecimalFormat/parseForCurrency(java.lang.String,java.text.ParsePosition,com.ibm.icu.util.Currency[],boolean[])#java/text/ParsePosition/getErrorIndex()
com/ibm/icu/text/DecimalFormat/parseForCurrency(java.lang.String,java.text.ParsePosition,com.ibm.icu.util.Currency[],boolean[])#java/util/Set/iterator()
com/ibm/icu/text/DecimalFormat/parseForCurrency(java.lang.String,java.text.ParsePosition,com.ibm.icu.util.Currency[],boolean[])#java/text/ParsePosition/getIndex()
com/ibm/icu/text/DecimalFormat/parseForCurrency(java.lang.String,java.text.ParsePosition,com.ibm.icu.util.Currency[],boolean[])#java/text/ParsePosition/setIndex(int)
com/ibm/icu/text/DecimalFormat/parseForCurrency(java.lang.String,java.text.ParsePosition,com.ibm.icu.util.Currency[],boolean[])#com/ibm/icu/text/DecimalFormat$AffixForCurrency/getNegSuffix()
com/ibm/icu/text/DecimalFormat/parseForCurrency(java.lang.String,java.text.ParsePosition,com.ibm.icu.util.Currency[],boolean[])#java/text/ParsePosition/ParsePosition(int)
com/ibm/icu/text/DecimalFormat/parseForCurrency(java.lang.String,java.text.ParsePosition,com.ibm.icu.util.Currency[],boolean[])#com/ibm/icu/text/DecimalFormat$AffixForCurrency/getPosPrefix()
com/ibm/icu/text/DecimalFormat/parseForCurrency(java.lang.String,java.text.ParsePosition,com.ibm.icu.util.Currency[],boolean[])#java/text/ParsePosition/setErrorIndex(int)
com/ibm/icu/text/DecimalFormat/toPattern(boolean)#java/lang/StringBuffer/StringBuffer(int)
com/ibm/icu/text/DecimalFormat/toPattern(boolean)#java/lang/StringBuilder/StringBuilder()
com/ibm/icu/text/DecimalFormat/toPattern(boolean)#java/lang/StringBuilder/append(char)
com/ibm/icu/text/DecimalFormat/toPattern(boolean)#java/lang/StringBuffer/append(java.lang.String)
com/ibm/icu/text/DecimalFormat/toPattern(boolean)#java/lang/StringBuffer/StringBuffer()
com/ibm/icu/text/DecimalFormat/toPattern(boolean)#java/lang/StringBuilder/toString()
com/ibm/icu/text/DecimalFormat/toPattern(boolean)#com/ibm/icu/text/DecimalFormat/getMinimumFractionDigits()
com/ibm/icu/text/DecimalFormat/toPattern(boolean)#com/ibm/icu/text/DecimalFormat/getMaximumIntegerDigits()
com/ibm/icu/text/DecimalFormat/toPattern(boolean)#java/lang/StringBuilder/append(java.lang.String)
com/ibm/icu/text/DecimalFormat/toPattern(boolean)#java/lang/String/charAt(int)
com/ibm/icu/text/DecimalFormat/toPattern(boolean)#java/lang/Math/max(int,int)
com/ibm/icu/text/DecimalFormat/toPattern(boolean)#java/lang/StringBuffer/append(char)
com/ibm/icu/text/DecimalFormat/toPattern(boolean)#java/lang/String/length()
com/ibm/icu/text/DecimalFormat/toPattern(boolean)#java/lang/StringBuffer/insert(int,char)
com/ibm/icu/text/DecimalFormat/toPattern(boolean)#java/lang/StringBuffer/length()
com/ibm/icu/text/DecimalFormat/toPattern(boolean)#java/lang/StringBuffer/toString()
com/ibm/icu/text/DecimalFormat/toPattern(boolean)#com/ibm/icu/text/DecimalFormat/isGroupingUsed()
com/ibm/icu/text/DecimalFormat/toPattern(boolean)#java/lang/String/equals(java.lang.Object)
com/ibm/icu/text/DecimalFormat/toPattern(boolean)#com/ibm/icu/text/DecimalFormat/getMinimumIntegerDigits()
com/ibm/icu/text/DecimalFormat/toPattern(boolean)#com/ibm/icu/text/DecimalFormat/getMaximumFractionDigits()
com/ibm/icu/util/Currency/parse(com.ibm.icu.util.ULocale,java.lang.String,int,java.text.ParsePosition)#com/ibm/icu/util/Currency$CurrencyNameResultHandler/getMatchedCurrencyNames()
com/ibm/icu/util/Currency/parse(com.ibm.icu.util.ULocale,java.lang.String,int,java.text.ParsePosition)#java/util/Iterator/hasNext()
com/ibm/icu/util/Currency/parse(com.ibm.icu.util.ULocale,java.lang.String,int,java.text.ParsePosition)#java/lang/String/length()
com/ibm/icu/util/Currency/parse(com.ibm.icu.util.ULocale,java.lang.String,int,java.text.ParsePosition)#java/util/List/size()
com/ibm/icu/util/Currency/parse(com.ibm.icu.util.ULocale,java.lang.String,int,java.text.ParsePosition)#java/util/Iterator/next()
com/ibm/icu/util/Currency/parse(com.ibm.icu.util.ULocale,java.lang.String,int,java.text.ParsePosition)#com/ibm/icu/util/Currency$CurrencyNameResultHandler/CurrencyNameResultHandler(com.ibm.icu.util.Currency$1)
com/ibm/icu/util/Currency/parse(com.ibm.icu.util.ULocale,java.lang.String,int,java.text.ParsePosition)#java/util/List/add(java.lang.Object)
com/ibm/icu/util/Currency/parse(com.ibm.icu.util.ULocale,java.lang.String,int,java.text.ParsePosition)#com/ibm/icu/util/Currency$CurrencyStringInfo/access$200(com.ibm.icu.util.Currency$CurrencyStringInfo)
com/ibm/icu/util/Currency/parse(com.ibm.icu.util.ULocale,java.lang.String,int,java.text.ParsePosition)#java/util/List/iterator()
com/ibm/icu/util/Currency/parse(com.ibm.icu.util.ULocale,java.lang.String,int,java.text.ParsePosition)#java/text/ParsePosition/getIndex()
com/ibm/icu/util/Currency/parse(com.ibm.icu.util.ULocale,java.lang.String,int,java.text.ParsePosition)#java/util/ArrayList/ArrayList()
com/ibm/icu/util/Currency/parse(com.ibm.icu.util.ULocale,java.lang.String,int,java.text.ParsePosition)#java/text/ParsePosition/setIndex(int)
com/ibm/icu/util/Currency/parse(com.ibm.icu.util.ULocale,java.lang.String,int,java.text.ParsePosition)#com/ibm/icu/util/Currency$CurrencyStringInfo/access$100(com.ibm.icu.util.Currency$CurrencyStringInfo)
com/ibm/icu/util/Currency/parse(com.ibm.icu.util.ULocale,java.lang.String,int,java.text.ParsePosition)#java/util/List/get(int)
com/ibm/icu/text/RBBIRuleBuilder/flattenData(java.io.OutputStream)#java/lang/Integer/intValue()
com/ibm/icu/text/RBBIRuleBuilder/flattenData(java.io.OutputStream)#java/io/DataOutputStream/writeInt(int)
com/ibm/icu/text/RBBIRuleBuilder/flattenData(java.io.OutputStream)#java/io/DataOutputStream/write(byte[])
com/ibm/icu/text/RBBIRuleBuilder/flattenData(java.io.OutputStream)#java/lang/String/length()
com/ibm/icu/text/RBBIRuleBuilder/flattenData(java.io.OutputStream)#java/util/List/size()
com/ibm/icu/text/RBBIRuleBuilder/flattenData(java.io.OutputStream)#java/util/List/iterator()
com/ibm/icu/text/RBBIRuleBuilder/flattenData(java.io.OutputStream)#java/io/DataOutputStream/writeChars(java.lang.String)
com/ibm/icu/text/RBBIRuleBuilder/flattenData(java.io.OutputStream)#java/util/Iterator/hasNext()
com/ibm/icu/text/RBBIRuleBuilder/flattenData(java.io.OutputStream)#java/io/DataOutputStream/write(int)
com/ibm/icu/text/RBBIRuleBuilder/flattenData(java.io.OutputStream)#java/util/Iterator/next()
com/ibm/icu/text/RBBIRuleBuilder/flattenData(java.io.OutputStream)#java/io/DataOutputStream/writeShort(int)
com/ibm/icu/text/RBBIRuleBuilder/flattenData(java.io.OutputStream)#java/io/DataOutputStream/DataOutputStream(java.io.OutputStream)
com/ibm/icu/impl/locale/InternalLocaleBuilder/setLocale(com.ibm.icu.impl.locale.BaseLocale,com.ibm.icu.impl.locale.LocaleExtensions)#java/lang/StringBuilder/StringBuilder()
com/ibm/icu/impl/locale/InternalLocaleBuilder/setLocale(com.ibm.icu.impl.locale.BaseLocale,com.ibm.icu.impl.locale.LocaleExtensions)#java/lang/Character/charValue()
com/ibm/icu/impl/locale/InternalLocaleBuilder/setLocale(com.ibm.icu.impl.locale.BaseLocale,com.ibm.icu.impl.locale.LocaleExtensions)#java/lang/StringBuilder/toString()
com/ibm/icu/impl/locale/InternalLocaleBuilder/setLocale(com.ibm.icu.impl.locale.BaseLocale,com.ibm.icu.impl.locale.LocaleExtensions)#java/util/Iterator/hasNext()
com/ibm/icu/impl/locale/InternalLocaleBuilder/setLocale(com.ibm.icu.impl.locale.BaseLocale,com.ibm.icu.impl.locale.LocaleExtensions)#java/lang/StringBuilder/append(java.lang.String)
com/ibm/icu/impl/locale/InternalLocaleBuilder/setLocale(com.ibm.icu.impl.locale.BaseLocale,com.ibm.icu.impl.locale.LocaleExtensions)#com/ibm/icu/impl/locale/InternalLocaleBuilder$CaseInsensitiveChar/CaseInsensitiveChar(char)
com/ibm/icu/impl/locale/InternalLocaleBuilder/setLocale(com.ibm.icu.impl.locale.BaseLocale,com.ibm.icu.impl.locale.LocaleExtensions)#java/util/HashSet/HashSet(int)
com/ibm/icu/impl/locale/InternalLocaleBuilder/setLocale(com.ibm.icu.impl.locale.BaseLocale,com.ibm.icu.impl.locale.LocaleExtensions)#java/lang/String/length()
com/ibm/icu/impl/locale/InternalLocaleBuilder/setLocale(com.ibm.icu.impl.locale.BaseLocale,com.ibm.icu.impl.locale.LocaleExtensions)#java/util/HashSet/add(java.lang.Object)
com/ibm/icu/impl/locale/InternalLocaleBuilder/setLocale(com.ibm.icu.impl.locale.BaseLocale,com.ibm.icu.impl.locale.LocaleExtensions)#java/util/Iterator/next()
com/ibm/icu/impl/locale/InternalLocaleBuilder/setLocale(com.ibm.icu.impl.locale.BaseLocale,com.ibm.icu.impl.locale.LocaleExtensions)#java/util/HashMap/put(java.lang.Object,java.lang.Object)
com/ibm/icu/impl/locale/InternalLocaleBuilder/setLocale(com.ibm.icu.impl.locale.BaseLocale,com.ibm.icu.impl.locale.LocaleExtensions)#com/ibm/icu/impl/locale/InternalLocaleBuilder$CaseInsensitiveString/CaseInsensitiveString(java.lang.String)
com/ibm/icu/impl/locale/InternalLocaleBuilder/setLocale(com.ibm.icu.impl.locale.BaseLocale,com.ibm.icu.impl.locale.LocaleExtensions)#java/util/HashMap/HashMap(int)
com/ibm/icu/impl/locale/InternalLocaleBuilder/setLocale(com.ibm.icu.impl.locale.BaseLocale,com.ibm.icu.impl.locale.LocaleExtensions)#java/util/Set/iterator()
com/ibm/icu/impl/locale/InternalLocaleBuilder/setUnicodeLocaleExtension(java.lang.String)#java/util/HashSet/clear()
com/ibm/icu/impl/locale/InternalLocaleBuilder/setUnicodeLocaleExtension(java.lang.String)#java/util/HashSet/add(java.lang.Object)
com/ibm/icu/impl/locale/InternalLocaleBuilder/setUnicodeLocaleExtension(java.lang.String)#java/lang/String/substring(int,int)
com/ibm/icu/impl/locale/InternalLocaleBuilder/setUnicodeLocaleExtension(java.lang.String)#java/util/HashMap/HashMap(int)
com/ibm/icu/impl/locale/InternalLocaleBuilder/setUnicodeLocaleExtension(java.lang.String)#java/lang/AssertionError/AssertionError()
com/ibm/icu/impl/locale/InternalLocaleBuilder/setUnicodeLocaleExtension(java.lang.String)#java/util/HashMap/clear()
com/ibm/icu/impl/locale/InternalLocaleBuilder/setUnicodeLocaleExtension(java.lang.String)#java/util/HashMap/containsKey(java.lang.Object)
com/ibm/icu/impl/locale/InternalLocaleBuilder/setUnicodeLocaleExtension(java.lang.String)#java/util/HashSet/HashSet(int)
com/ibm/icu/impl/locale/InternalLocaleBuilder/setUnicodeLocaleExtension(java.lang.String)#java/util/HashMap/put(java.lang.Object,java.lang.Object)
com/ibm/icu/impl/locale/InternalLocaleBuilder/setUnicodeLocaleExtension(java.lang.String)#com/ibm/icu/impl/locale/InternalLocaleBuilder$CaseInsensitiveString/CaseInsensitiveString(java.lang.String)
com/ibm/icu/impl/locale/InternalLocaleBuilder/setUnicodeLocaleKeyword(java.lang.String,java.lang.String)#java/lang/String/replaceAll(java.lang.String,java.lang.String)
com/ibm/icu/impl/locale/InternalLocaleBuilder/setUnicodeLocaleKeyword(java.lang.String,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/ibm/icu/impl/locale/InternalLocaleBuilder/setUnicodeLocaleKeyword(java.lang.String,java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/ibm/icu/impl/locale/InternalLocaleBuilder/setUnicodeLocaleKeyword(java.lang.String,java.lang.String)#java/util/HashMap/HashMap(int)
com/ibm/icu/impl/locale/InternalLocaleBuilder/setUnicodeLocaleKeyword(java.lang.String,java.lang.String)#java/lang/String/length()
com/ibm/icu/impl/locale/InternalLocaleBuilder/setUnicodeLocaleKeyword(java.lang.String,java.lang.String)#java/util/HashMap/remove(java.lang.Object)
com/ibm/icu/impl/locale/InternalLocaleBuilder/setUnicodeLocaleKeyword(java.lang.String,java.lang.String)#java/util/HashMap/put(java.lang.Object,java.lang.Object)
com/ibm/icu/impl/locale/InternalLocaleBuilder/setUnicodeLocaleKeyword(java.lang.String,java.lang.String)#com/ibm/icu/impl/locale/InternalLocaleBuilder$CaseInsensitiveString/CaseInsensitiveString(java.lang.String)
com/ibm/icu/impl/locale/InternalLocaleBuilder/setUnicodeLocaleKeyword(java.lang.String,java.lang.String)#java/lang/StringBuilder/toString()
com/ibm/icu/impl/locale/InternalLocaleBuilder/setExtension(char,java.lang.String)#java/lang/String/replaceAll(java.lang.String,java.lang.String)
com/ibm/icu/impl/locale/InternalLocaleBuilder/setExtension(char,java.lang.String)#java/util/HashSet/clear()
com/ibm/icu/impl/locale/InternalLocaleBuilder/setExtension(char,java.lang.String)#com/ibm/icu/impl/locale/InternalLocaleBuilder$CaseInsensitiveChar/value()
com/ibm/icu/impl/locale/InternalLocaleBuilder/setExtension(char,java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/ibm/icu/impl/locale/InternalLocaleBuilder/setExtension(char,java.lang.String)#java/util/HashMap/HashMap(int)
com/ibm/icu/impl/locale/InternalLocaleBuilder/setExtension(char,java.lang.String)#java/util/HashMap/clear()
com/ibm/icu/impl/locale/InternalLocaleBuilder/setExtension(char,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/ibm/icu/impl/locale/InternalLocaleBuilder/setExtension(char,java.lang.String)#java/util/HashMap/containsKey(java.lang.Object)
com/ibm/icu/impl/locale/InternalLocaleBuilder/setExtension(char,java.lang.String)#com/ibm/icu/impl/locale/InternalLocaleBuilder$CaseInsensitiveChar/CaseInsensitiveChar(char)
com/ibm/icu/impl/locale/InternalLocaleBuilder/setExtension(char,java.lang.String)#java/lang/String/length()
com/ibm/icu/impl/locale/InternalLocaleBuilder/setExtension(char,java.lang.String)#java/util/HashMap/remove(java.lang.Object)
com/ibm/icu/impl/locale/InternalLocaleBuilder/setExtension(char,java.lang.String)#java/util/HashMap/put(java.lang.Object,java.lang.Object)
com/ibm/icu/impl/locale/InternalLocaleBuilder/setExtension(char,java.lang.String)#java/lang/StringBuilder/append(char)
com/ibm/icu/impl/locale/InternalLocaleBuilder/setExtension(char,java.lang.String)#java/lang/StringBuilder/toString()
com/ibm/icu/impl/locale/InternalLocaleBuilder/setExtensions(java.util.List,java.lang.String)#java/util/HashSet/contains(java.lang.Object)
com/ibm/icu/impl/locale/InternalLocaleBuilder/setExtensions(java.util.List,java.lang.String)#java/util/Iterator/hasNext()
com/ibm/icu/impl/locale/InternalLocaleBuilder/setExtensions(java.util.List,java.lang.String)#java/lang/String/charAt(int)
com/ibm/icu/impl/locale/InternalLocaleBuilder/setExtensions(java.util.List,java.lang.String)#java/lang/String/length()
com/ibm/icu/impl/locale/InternalLocaleBuilder/setExtensions(java.util.List,java.lang.String)#java/util/List/size()
com/ibm/icu/impl/locale/InternalLocaleBuilder/setExtensions(java.util.List,java.lang.String)#com/ibm/icu/impl/locale/InternalLocaleBuilder$CaseInsensitiveChar/value()
com/ibm/icu/impl/locale/InternalLocaleBuilder/setExtensions(java.util.List,java.lang.String)#java/util/HashMap/HashMap(int)
com/ibm/icu/impl/locale/InternalLocaleBuilder/setExtensions(java.util.List,java.lang.String)#java/lang/String/substring(int)
com/ibm/icu/impl/locale/InternalLocaleBuilder/setExtensions(java.util.List,java.lang.String)#java/util/List/iterator()
com/ibm/icu/impl/locale/InternalLocaleBuilder/setExtensions(java.util.List,java.lang.String)#com/ibm/icu/impl/locale/InternalLocaleBuilder$CaseInsensitiveChar/CaseInsensitiveChar(char)
com/ibm/icu/impl/locale/InternalLocaleBuilder/setExtensions(java.util.List,java.lang.String)#java/util/HashSet/HashSet(int)
com/ibm/icu/impl/locale/InternalLocaleBuilder/setExtensions(java.util.List,java.lang.String)#java/util/Iterator/next()
com/ibm/icu/impl/locale/InternalLocaleBuilder/setExtensions(java.util.List,java.lang.String)#java/util/HashMap/put(java.lang.Object,java.lang.Object)
com/ibm/icu/impl/locale/InternalLocaleBuilder/setExtensions(java.lang.String)#java/util/ArrayList/ArrayList(int)
com/ibm/icu/impl/locale/InternalLocaleBuilder/setExtensions(java.lang.String)#java/lang/String/replaceAll(java.lang.String,java.lang.String)
com/ibm/icu/impl/locale/InternalLocaleBuilder/setExtensions(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/ibm/icu/impl/locale/InternalLocaleBuilder/setExtensions(java.lang.String)#java/lang/String/length()
com/ibm/icu/impl/locale/InternalLocaleBuilder/setExtensions(java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/ibm/icu/impl/locale/InternalLocaleBuilder/setExtensions(java.lang.String)#java/util/List/add(java.lang.Object)
com/ibm/icu/impl/locale/InternalLocaleBuilder/setExtensions(java.lang.String)#java/lang/StringBuilder/StringBuilder(java.lang.String)
com/ibm/icu/impl/locale/InternalLocaleBuilder/setExtensions(java.lang.String)#java/lang/String/substring(int)
com/ibm/icu/impl/locale/InternalLocaleBuilder/setExtensions(java.lang.String)#java/lang/StringBuilder/toString()
com/ibm/icu/impl/UTS46/process(java.lang.CharSequence,boolean,boolean,java.lang.StringBuilder,com.ibm.icu.text.IDNA$Info)#com/ibm/icu/impl/UTS46/isBiDi(com.ibm.icu.text.IDNA$Info)
com/ibm/icu/impl/UTS46/process(java.lang.CharSequence,boolean,boolean,java.lang.StringBuilder,com.ibm.icu.text.IDNA$Info)#com/ibm/icu/impl/UTS46/addError(com.ibm.icu.text.IDNA$Info,com.ibm.icu.text.IDNA$Error)
com/ibm/icu/impl/UTS46/process(java.lang.CharSequence,boolean,boolean,java.lang.StringBuilder,com.ibm.icu.text.IDNA$Info)#java/lang/CharSequence/length()
com/ibm/icu/impl/UTS46/process(java.lang.CharSequence,boolean,boolean,java.lang.StringBuilder,com.ibm.icu.text.IDNA$Info)#com/ibm/icu/impl/UTS46/hasCertainErrors(com.ibm.icu.text.IDNA$Info,java.util.EnumSet)
com/ibm/icu/impl/UTS46/process(java.lang.CharSequence,boolean,boolean,java.lang.StringBuilder,com.ibm.icu.text.IDNA$Info)#java/lang/CharSequence/charAt(int)
com/ibm/icu/impl/UTS46/process(java.lang.CharSequence,boolean,boolean,java.lang.StringBuilder,com.ibm.icu.text.IDNA$Info)#com/ibm/icu/impl/UTS46/resetInfo(com.ibm.icu.text.IDNA$Info)
com/ibm/icu/impl/UTS46/process(java.lang.CharSequence,boolean,boolean,java.lang.StringBuilder,com.ibm.icu.text.IDNA$Info)#com/ibm/icu/impl/UTS46/promoteAndResetLabelErrors(com.ibm.icu.text.IDNA$Info)
com/ibm/icu/impl/UTS46/process(java.lang.CharSequence,boolean,boolean,java.lang.StringBuilder,com.ibm.icu.text.IDNA$Info)#java/lang/StringBuilder/delete(int,int)
com/ibm/icu/impl/UTS46/process(java.lang.CharSequence,boolean,boolean,java.lang.StringBuilder,com.ibm.icu.text.IDNA$Info)#java/lang/StringBuilder/append(char)
com/ibm/icu/impl/UTS46/process(java.lang.CharSequence,boolean,boolean,java.lang.StringBuilder,com.ibm.icu.text.IDNA$Info)#com/ibm/icu/impl/UTS46/addLabelError(com.ibm.icu.text.IDNA$Info,com.ibm.icu.text.IDNA$Error)
com/ibm/icu/impl/UTS46/process(java.lang.CharSequence,boolean,boolean,java.lang.StringBuilder,com.ibm.icu.text.IDNA$Info)#com/ibm/icu/impl/UTS46/isOkBiDi(com.ibm.icu.text.IDNA$Info)
com/ibm/icu/impl/UTS46/process(java.lang.CharSequence,boolean,boolean,java.lang.StringBuilder,com.ibm.icu.text.IDNA$Info)#java/lang/IllegalArgumentException/IllegalArgumentException()
com/ibm/icu/impl/UTS46/processLabel(java.lang.StringBuilder,int,int,boolean,com.ibm.icu.text.IDNA$Info)#com/ibm/icu/impl/UTS46/isBiDi(com.ibm.icu.text.IDNA$Info)
com/ibm/icu/impl/UTS46/processLabel(java.lang.StringBuilder,int,int,boolean,com.ibm.icu.text.IDNA$Info)#com/ibm/icu/impl/UTS46/hasCertainLabelErrors(com.ibm.icu.text.IDNA$Info,java.util.EnumSet)
com/ibm/icu/impl/UTS46/processLabel(java.lang.StringBuilder,int,int,boolean,com.ibm.icu.text.IDNA$Info)#com/ibm/icu/impl/UTS46/addLabelError(com.ibm.icu.text.IDNA$Info,com.ibm.icu.text.IDNA$Error)
com/ibm/icu/impl/UTS46/processLabel(java.lang.StringBuilder,int,int,boolean,com.ibm.icu.text.IDNA$Info)#com/ibm/icu/impl/UTS46/isOkBiDi(com.ibm.icu.text.IDNA$Info)
com/ibm/icu/impl/UTS46/processLabel(java.lang.StringBuilder,int,int,boolean,com.ibm.icu.text.IDNA$Info)#java/lang/StringBuilder/codePointAt(int)
com/ibm/icu/impl/UTS46/processLabel(java.lang.StringBuilder,int,int,boolean,com.ibm.icu.text.IDNA$Info)#java/lang/RuntimeException/RuntimeException(java.lang.Throwable)
com/ibm/icu/impl/UTS46/processLabel(java.lang.StringBuilder,int,int,boolean,com.ibm.icu.text.IDNA$Info)#java/lang/StringBuilder/insert(int,java.lang.String)
com/ibm/icu/impl/UTS46/processLabel(java.lang.StringBuilder,int,int,boolean,com.ibm.icu.text.IDNA$Info)#java/lang/StringBuilder/subSequence(int,int)
com/ibm/icu/impl/UTS46/processLabel(java.lang.StringBuilder,int,int,boolean,com.ibm.icu.text.IDNA$Info)#java/lang/StringBuilder/deleteCharAt(int)
com/ibm/icu/impl/UTS46/processLabel(java.lang.StringBuilder,int,int,boolean,com.ibm.icu.text.IDNA$Info)#java/lang/StringBuilder/length()
com/ibm/icu/impl/UTS46/processLabel(java.lang.StringBuilder,int,int,boolean,com.ibm.icu.text.IDNA$Info)#java/lang/StringBuilder/setCharAt(int,char)
com/ibm/icu/impl/UTS46/processLabel(java.lang.StringBuilder,int,int,boolean,com.ibm.icu.text.IDNA$Info)#java/lang/StringBuilder/charAt(int)
com/ibm/icu/text/CjkBreakEngine/findBreaks(java.text.CharacterIterator,int,int,boolean,int,java.util.Stack)#java/text/CharacterIterator/getIndex()
com/ibm/icu/text/CjkBreakEngine/findBreaks(java.text.CharacterIterator,int,int,boolean,int,java.util.Stack)#java/lang/String/length()
com/ibm/icu/text/CjkBreakEngine/findBreaks(java.text.CharacterIterator,int,int,boolean,int,java.util.Stack)#java/util/Stack/contains(java.lang.Object)
com/ibm/icu/text/CjkBreakEngine/findBreaks(java.text.CharacterIterator,int,int,boolean,int,java.util.Stack)#java/lang/String/codePointAt(int)
com/ibm/icu/text/CjkBreakEngine/findBreaks(java.text.CharacterIterator,int,int,boolean,int,java.util.Stack)#java/lang/Integer/valueOf(int)
com/ibm/icu/text/CjkBreakEngine/findBreaks(java.text.CharacterIterator,int,int,boolean,int,java.util.Stack)#java/text/CharacterIterator/setIndex(int)
com/ibm/icu/text/CjkBreakEngine/findBreaks(java.text.CharacterIterator,int,int,boolean,int,java.util.Stack)#java/lang/Integer/intValue()
com/ibm/icu/text/CjkBreakEngine/findBreaks(java.text.CharacterIterator,int,int,boolean,int,java.util.Stack)#java/util/Stack/empty()
com/ibm/icu/text/CjkBreakEngine/findBreaks(java.text.CharacterIterator,int,int,boolean,int,java.util.Stack)#java/util/Stack/size()
com/ibm/icu/text/CjkBreakEngine/findBreaks(java.text.CharacterIterator,int,int,boolean,int,java.util.Stack)#java/util/Stack/pop()
com/ibm/icu/text/CjkBreakEngine/findBreaks(java.text.CharacterIterator,int,int,boolean,int,java.util.Stack)#java/text/StringCharacterIterator/StringCharacterIterator(java.lang.String)
com/ibm/icu/text/CjkBreakEngine/findBreaks(java.text.CharacterIterator,int,int,boolean,int,java.util.Stack)#java/text/CharacterIterator/current()
com/ibm/icu/text/CjkBreakEngine/findBreaks(java.text.CharacterIterator,int,int,boolean,int,java.util.Stack)#java/util/Stack/push(java.lang.Object)
com/ibm/icu/text/CjkBreakEngine/findBreaks(java.text.CharacterIterator,int,int,boolean,int,java.util.Stack)#java/lang/StringBuffer/append(char)
com/ibm/icu/text/CjkBreakEngine/findBreaks(java.text.CharacterIterator,int,int,boolean,int,java.util.Stack)#java/lang/StringBuffer/toString()
com/ibm/icu/text/CjkBreakEngine/findBreaks(java.text.CharacterIterator,int,int,boolean,int,java.util.Stack)#java/lang/StringBuffer/StringBuffer(java.lang.String)
com/ibm/icu/text/CjkBreakEngine/findBreaks(java.text.CharacterIterator,int,int,boolean,int,java.util.Stack)#java/text/CharacterIterator/next()
com/ibm/icu/text/CjkBreakEngine/findBreaks(java.text.CharacterIterator,int,int,boolean,int,java.util.Stack)#java/lang/Character/charCount(int)
com/ibm/icu/text/CjkBreakEngine/findBreaks(java.text.CharacterIterator,int,int,boolean,int,java.util.Stack)#java/util/Stack/peek()
com/ibm/icu/impl/ZoneMeta/getAvailableIDs(com.ibm.icu.util.TimeZone$SystemTimeZoneType,java.lang.String,java.lang.Integer)#java/lang/Integer/equals(java.lang.Object)
com/ibm/icu/impl/ZoneMeta/getAvailableIDs(com.ibm.icu.util.TimeZone$SystemTimeZoneType,java.lang.String,java.lang.Integer)#java/lang/String/toUpperCase(java.util.Locale)
com/ibm/icu/impl/ZoneMeta/getAvailableIDs(com.ibm.icu.util.TimeZone$SystemTimeZoneType,java.lang.String,java.lang.Integer)#java/util/Iterator/next()
com/ibm/icu/impl/ZoneMeta/getAvailableIDs(com.ibm.icu.util.TimeZone$SystemTimeZoneType,java.lang.String,java.lang.Integer)#java/lang/Integer/valueOf(int)
com/ibm/icu/impl/ZoneMeta/getAvailableIDs(com.ibm.icu.util.TimeZone$SystemTimeZoneType,java.lang.String,java.lang.Integer)#java/util/TreeSet/TreeSet()
com/ibm/icu/impl/ZoneMeta/getAvailableIDs(com.ibm.icu.util.TimeZone$SystemTimeZoneType,java.lang.String,java.lang.Integer)#java/util/Iterator/hasNext()
com/ibm/icu/impl/ZoneMeta/getAvailableIDs(com.ibm.icu.util.TimeZone$SystemTimeZoneType,java.lang.String,java.lang.Integer)#java/util/Collections/emptySet()
com/ibm/icu/impl/ZoneMeta/getAvailableIDs(com.ibm.icu.util.TimeZone$SystemTimeZoneType,java.lang.String,java.lang.Integer)#java/lang/String/equals(java.lang.Object)
com/ibm/icu/impl/ZoneMeta/getAvailableIDs(com.ibm.icu.util.TimeZone$SystemTimeZoneType,java.lang.String,java.lang.Integer)#java/util/Set/isEmpty()
com/ibm/icu/impl/ZoneMeta/getAvailableIDs(com.ibm.icu.util.TimeZone$SystemTimeZoneType,java.lang.String,java.lang.Integer)#java/util/Set/iterator()
com/ibm/icu/impl/ZoneMeta/getAvailableIDs(com.ibm.icu.util.TimeZone$SystemTimeZoneType,java.lang.String,java.lang.Integer)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/ibm/icu/impl/ZoneMeta/getAvailableIDs(com.ibm.icu.util.TimeZone$SystemTimeZoneType,java.lang.String,java.lang.Integer)#com/ibm/icu/util/TimeZone$SystemTimeZoneType/ordinal()
com/ibm/icu/impl/ZoneMeta/getAvailableIDs(com.ibm.icu.util.TimeZone$SystemTimeZoneType,java.lang.String,java.lang.Integer)#java/util/Set/add(java.lang.Object)
com/ibm/icu/impl/ZoneMeta/getAvailableIDs(com.ibm.icu.util.TimeZone$SystemTimeZoneType,java.lang.String,java.lang.Integer)#java/util/Collections/unmodifiableSet(java.util.Set)
com/ibm/icu/text/StringPrep/getInstance(int)#java/lang/ref/WeakReference/get()
com/ibm/icu/text/StringPrep/getInstance(int)#java/io/InputStream/close()
com/ibm/icu/text/StringPrep/getInstance(int)#java/lang/StringBuilder/StringBuilder()
com/ibm/icu/text/StringPrep/getInstance(int)#java/lang/ref/WeakReference/WeakReference(java.lang.Object)
com/ibm/icu/text/StringPrep/getInstance(int)#java/lang/StringBuilder/toString()
com/ibm/icu/text/StringPrep/getInstance(int)#java/lang/StringBuilder/append(java.lang.String)
com/ibm/icu/text/StringPrep/getInstance(int)#java/io/IOException/toString()
com/ibm/icu/text/StringPrep/getInstance(int)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/ibm/icu/text/StringPrep/getInstance(int)#java/lang/RuntimeException/RuntimeException(java.lang.String)
com/ibm/icu/text/CompactDecimalDataCache/populatePrefixSuffix(java.lang.String,int,java.lang.String,com.ibm.icu.util.ULocale,java.lang.String,com.ibm.icu.text.CompactDecimalDataCache$Data)#java/lang/String/length()
com/ibm/icu/text/CompactDecimalDataCache/populatePrefixSuffix(java.lang.String,int,java.lang.String,com.ibm.icu.util.ULocale,java.lang.String,com.ibm.icu.text.CompactDecimalDataCache$Data)#java/lang/String/substring(int,int)
com/ibm/icu/text/CompactDecimalDataCache/populatePrefixSuffix(java.lang.String,int,java.lang.String,com.ibm.icu.util.ULocale,java.lang.String,com.ibm.icu.text.CompactDecimalDataCache$Data)#java/lang/String/substring(int)
com/ibm/icu/text/CompactDecimalDataCache/populatePrefixSuffix(java.lang.String,int,java.lang.String,com.ibm.icu.util.ULocale,java.lang.String,com.ibm.icu.text.CompactDecimalDataCache$Data)#java/lang/String/lastIndexOf(java.lang.String)
com/ibm/icu/text/CompactDecimalDataCache/populatePrefixSuffix(java.lang.String,int,java.lang.String,com.ibm.icu.util.ULocale,java.lang.String,com.ibm.icu.text.CompactDecimalDataCache$Data)#java/lang/StringBuilder/toString()
com/ibm/icu/text/CompactDecimalDataCache/populatePrefixSuffix(java.lang.String,int,java.lang.String,com.ibm.icu.util.ULocale,java.lang.String,com.ibm.icu.text.CompactDecimalDataCache$Data)#java/lang/StringBuilder/append(java.lang.String)
com/ibm/icu/text/CompactDecimalDataCache/populatePrefixSuffix(java.lang.String,int,java.lang.String,com.ibm.icu.util.ULocale,java.lang.String,com.ibm.icu.text.CompactDecimalDataCache$Data)#java/lang/String/charAt(int)
com/ibm/icu/text/CompactDecimalDataCache/populatePrefixSuffix(java.lang.String,int,java.lang.String,com.ibm.icu.util.ULocale,java.lang.String,com.ibm.icu.text.CompactDecimalDataCache$Data)#java/lang/String/trim()
com/ibm/icu/text/CompactDecimalDataCache/populatePrefixSuffix(java.lang.String,int,java.lang.String,com.ibm.icu.util.ULocale,java.lang.String,com.ibm.icu.text.CompactDecimalDataCache$Data)#java/lang/StringBuilder/append(int)
com/ibm/icu/text/CompactDecimalDataCache/populatePrefixSuffix(java.lang.String,int,java.lang.String,com.ibm.icu.util.ULocale,java.lang.String,com.ibm.icu.text.CompactDecimalDataCache$Data)#java/lang/StringBuilder/StringBuilder()
com/ibm/icu/text/CompactDecimalDataCache/populatePrefixSuffix(java.lang.String,int,java.lang.String,com.ibm.icu.util.ULocale,java.lang.String,com.ibm.icu.text.CompactDecimalDataCache$Data)#java/lang/String/indexOf(java.lang.String)
com/ibm/icu/text/CompactDecimalDataCache/populatePrefixSuffix(java.lang.String,int,java.lang.String,com.ibm.icu.util.ULocale,java.lang.String,com.ibm.icu.text.CompactDecimalDataCache$Data)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/ibm/icu/text/CompactDecimalDataCache/populatePrefixSuffix(java.lang.String,int,java.lang.String,com.ibm.icu.util.ULocale,java.lang.String,com.ibm.icu.text.CompactDecimalDataCache$Data)#com/ibm/icu/text/DecimalFormat$Unit/Unit(java.lang.String,java.lang.String)
com/ibm/icu/util/Currency/CurrencyNameResultHandler/handlePrefixMatch(int,java.util.Iterator)#java/util/ArrayList/ArrayList()
com/ibm/icu/util/Currency/CurrencyNameResultHandler/handlePrefixMatch(int,java.util.Iterator)#java/util/Iterator/hasNext()
com/ibm/icu/util/Currency/CurrencyNameResultHandler/handlePrefixMatch(int,java.util.Iterator)#java/lang/String/length()
com/ibm/icu/util/Currency/CurrencyNameResultHandler/handlePrefixMatch(int,java.util.Iterator)#java/util/Iterator/next()
com/ibm/icu/util/Currency/CurrencyNameResultHandler/handlePrefixMatch(int,java.util.Iterator)#java/util/ArrayList/add(java.lang.Object)
com/ibm/icu/util/Currency/CurrencyNameResultHandler/handlePrefixMatch(int,java.util.Iterator)#java/util/ArrayList/size()
com/ibm/icu/util/Currency/CurrencyNameResultHandler/handlePrefixMatch(int,java.util.Iterator)#java/util/ArrayList/set(int,java.lang.Object)
com/ibm/icu/util/Currency/CurrencyNameResultHandler/handlePrefixMatch(int,java.util.Iterator)#com/ibm/icu/util/Currency$CurrencyStringInfo/access$100(com.ibm.icu.util.Currency$CurrencyStringInfo)
com/ibm/icu/util/Currency/CurrencyNameResultHandler/handlePrefixMatch(int,java.util.Iterator)#com/ibm/icu/util/Currency$CurrencyStringInfo/access$200(com.ibm.icu.util.Currency$CurrencyStringInfo)
com/ibm/icu/util/Currency/CurrencyNameResultHandler/handlePrefixMatch(int,java.util.Iterator)#java/util/ArrayList/get(int)
com/ibm/icu/text/SpoofChecker/Builder/ConfusabledataBuilder/outputData()#java/lang/Integer/intValue()
com/ibm/icu/text/SpoofChecker/Builder/ConfusabledataBuilder/outputData()#java/io/DataOutputStream/writeInt(int)
com/ibm/icu/text/SpoofChecker/Builder/ConfusabledataBuilder/outputData()#com/ibm/icu/text/SpoofChecker$SpoofData/initPtrs(java.io.DataInputStream)
com/ibm/icu/text/SpoofChecker/Builder/ConfusabledataBuilder/outputData()#java/lang/String/charAt(int)
com/ibm/icu/text/SpoofChecker/Builder/ConfusabledataBuilder/outputData()#java/util/Vector/size()
com/ibm/icu/text/SpoofChecker/Builder/ConfusabledataBuilder/outputData()#java/io/DataInputStream/DataInputStream(java.io.InputStream)
com/ibm/icu/text/SpoofChecker/Builder/ConfusabledataBuilder/outputData()#java/io/DataOutputStream/writeChar(int)
com/ibm/icu/text/SpoofChecker/Builder/ConfusabledataBuilder/outputData()#java/lang/StringBuffer/toString()
com/ibm/icu/text/SpoofChecker/Builder/ConfusabledataBuilder/outputData()#java/io/ByteArrayOutputStream/toByteArray()
com/ibm/icu/text/SpoofChecker/Builder/ConfusabledataBuilder/outputData()#java/util/Vector/elementAt(int)
com/ibm/icu/text/SpoofChecker/Builder/ConfusabledataBuilder/outputData()#java/lang/AssertionError/AssertionError()
com/ibm/icu/text/SpoofChecker/Builder/ConfusabledataBuilder/outputData()#java/io/DataInputStream/mark(int)
com/ibm/icu/text/SpoofChecker/Builder/ConfusabledataBuilder/outputData()#java/io/DataOutputStream/size()
com/ibm/icu/text/SpoofChecker/Builder/ConfusabledataBuilder/outputData()#java/io/ByteArrayInputStream/ByteArrayInputStream(byte[])
com/ibm/icu/text/SpoofChecker/Builder/ConfusabledataBuilder/outputData()#java/lang/StringBuffer/length()
com/ibm/icu/text/SpoofChecker/Builder/ConfusabledataBuilder/outputData()#java/io/DataOutputStream/flush()
com/ibm/icu/text/SpoofChecker/Builder/ConfusabledataBuilder/outputData()#com/ibm/icu/text/SpoofChecker$SpoofDataHeader/output(java.io.DataOutputStream)
com/ibm/icu/text/SpoofChecker/Builder/ConfusabledataBuilder/outputData()#java/io/DataOutputStream/writeShort(int)
com/ibm/icu/text/SpoofChecker/Builder/ConfusabledataBuilder/addKeyEntry(int,java.util.Hashtable,int)#java/lang/Integer/intValue()
com/ibm/icu/text/SpoofChecker/Builder/ConfusabledataBuilder/addKeyEntry(int,java.util.Hashtable,int)#java/util/Vector/size()
com/ibm/icu/text/SpoofChecker/Builder/ConfusabledataBuilder/addKeyEntry(int,java.util.Hashtable,int)#java/lang/String/length()
com/ibm/icu/text/SpoofChecker/Builder/ConfusabledataBuilder/addKeyEntry(int,java.util.Hashtable,int)#com/ibm/icu/text/SpoofChecker$Builder$ConfusabledataBuilder/getMapping(int)
com/ibm/icu/text/SpoofChecker/Builder/ConfusabledataBuilder/addKeyEntry(int,java.util.Hashtable,int)#java/lang/String/equals(java.lang.Object)
com/ibm/icu/text/SpoofChecker/Builder/ConfusabledataBuilder/addKeyEntry(int,java.util.Hashtable,int)#java/lang/Integer/valueOf(int)
com/ibm/icu/text/SpoofChecker/Builder/ConfusabledataBuilder/addKeyEntry(int,java.util.Hashtable,int)#java/util/Vector/elementAt(int)
com/ibm/icu/text/SpoofChecker/Builder/ConfusabledataBuilder/addKeyEntry(int,java.util.Hashtable,int)#java/util/Vector/setElementAt(java.lang.Object,int)
com/ibm/icu/text/SpoofChecker/Builder/ConfusabledataBuilder/addKeyEntry(int,java.util.Hashtable,int)#java/util/Hashtable/get(java.lang.Object)
com/ibm/icu/text/SpoofChecker/Builder/ConfusabledataBuilder/addKeyEntry(int,java.util.Hashtable,int)#java/util/Vector/addElement(java.lang.Object)
com/ibm/icu/text/SpoofChecker/Builder/ConfusabledataBuilder/build(java.io.Reader)#com/ibm/icu/text/SpoofChecker$Builder$ConfusabledataBuilder/addKeyEntry(int,java.util.Hashtable,int)
com/ibm/icu/text/SpoofChecker/Builder/ConfusabledataBuilder/build(java.io.Reader)#java/lang/Integer/toString(int,int)
com/ibm/icu/text/SpoofChecker/Builder/ConfusabledataBuilder/build(java.io.Reader)#java/lang/StringBuilder/append(int)
com/ibm/icu/text/SpoofChecker/Builder/ConfusabledataBuilder/build(java.io.Reader)#java/lang/StringBuilder/appendCodePoint(int)
com/ibm/icu/text/SpoofChecker/Builder/ConfusabledataBuilder/build(java.io.Reader)#com/ibm/icu/text/SpoofChecker$Builder$ConfusabledataBuilder$SPUStringPool/sort()
com/ibm/icu/text/SpoofChecker/Builder/ConfusabledataBuilder/build(java.io.Reader)#java/util/Vector/Vector()
com/ibm/icu/text/SpoofChecker/Builder/ConfusabledataBuilder/build(java.io.Reader)#java/lang/Integer/parseInt(java.lang.String,int)
com/ibm/icu/text/SpoofChecker/Builder/ConfusabledataBuilder/build(java.io.Reader)#java/text/ParseException/ParseException(java.lang.String,int)
com/ibm/icu/text/SpoofChecker/Builder/ConfusabledataBuilder/build(java.io.Reader)#java/lang/StringBuilder/length()
com/ibm/icu/text/SpoofChecker/Builder/ConfusabledataBuilder/build(java.io.Reader)#java/util/regex/Pattern/matcher(java.lang.CharSequence)
com/ibm/icu/text/SpoofChecker/Builder/ConfusabledataBuilder/build(java.io.Reader)#java/util/regex/Matcher/group(int)
com/ibm/icu/text/SpoofChecker/Builder/ConfusabledataBuilder/build(java.io.Reader)#com/ibm/icu/text/SpoofChecker$Builder$WSConfusableDataBuilder/readWholeFileToString(java.io.Reader,java.lang.StringBuffer)
com/ibm/icu/text/SpoofChecker/Builder/ConfusabledataBuilder/build(java.io.Reader)#java/util/regex/Pattern/compile(java.lang.String)
com/ibm/icu/text/SpoofChecker/Builder/ConfusabledataBuilder/build(java.io.Reader)#com/ibm/icu/text/SpoofChecker$Builder$ConfusabledataBuilder$SPUStringPool/getByIndex(int)
com/ibm/icu/text/SpoofChecker/Builder/ConfusabledataBuilder/build(java.io.Reader)#java/lang/StringBuffer/setCharAt(int,char)
com/ibm/icu/text/SpoofChecker/Builder/ConfusabledataBuilder/build(java.io.Reader)#java/lang/StringBuilder/append(java.lang.String)
com/ibm/icu/text/SpoofChecker/Builder/ConfusabledataBuilder/build(java.io.Reader)#java/lang/String/charAt(int)
com/ibm/icu/text/SpoofChecker/Builder/ConfusabledataBuilder/build(java.io.Reader)#java/lang/StringBuffer/charAt(int)
com/ibm/icu/text/SpoofChecker/Builder/ConfusabledataBuilder/build(java.io.Reader)#java/lang/String/length()
com/ibm/icu/text/SpoofChecker/Builder/ConfusabledataBuilder/build(java.io.Reader)#java/lang/StringBuffer/length()
com/ibm/icu/text/SpoofChecker/Builder/ConfusabledataBuilder/build(java.io.Reader)#com/ibm/icu/text/SpoofChecker$Builder$ConfusabledataBuilder$SPUStringPool/size()
com/ibm/icu/text/SpoofChecker/Builder/ConfusabledataBuilder/build(java.io.Reader)#java/util/Vector/addElement(java.lang.Object)
com/ibm/icu/text/SpoofChecker/Builder/ConfusabledataBuilder/build(java.io.Reader)#java/lang/StringBuilder/StringBuilder()
com/ibm/icu/text/SpoofChecker/Builder/ConfusabledataBuilder/build(java.io.Reader)#com/ibm/icu/text/SpoofChecker$Builder$ConfusabledataBuilder$SPUStringPool/addString(java.lang.String)
com/ibm/icu/text/SpoofChecker/Builder/ConfusabledataBuilder/build(java.io.Reader)#java/util/regex/Matcher/find()
com/ibm/icu/text/SpoofChecker/Builder/ConfusabledataBuilder/build(java.io.Reader)#java/lang/Integer/valueOf(int)
com/ibm/icu/text/SpoofChecker/Builder/ConfusabledataBuilder/build(java.io.Reader)#com/ibm/icu/text/SpoofChecker$Builder$ConfusabledataBuilder/outputData()
com/ibm/icu/text/SpoofChecker/Builder/ConfusabledataBuilder/build(java.io.Reader)#java/lang/StringBuffer/append(java.lang.String)
com/ibm/icu/text/SpoofChecker/Builder/ConfusabledataBuilder/build(java.io.Reader)#java/lang/AssertionError/AssertionError()
com/ibm/icu/text/SpoofChecker/Builder/ConfusabledataBuilder/build(java.io.Reader)#java/util/Hashtable/put(java.lang.Object,java.lang.Object)
com/ibm/icu/text/SpoofChecker/Builder/ConfusabledataBuilder/build(java.io.Reader)#java/util/regex/Matcher/start(int)
com/ibm/icu/text/SpoofChecker/Builder/ConfusabledataBuilder/build(java.io.Reader)#java/lang/StringBuffer/StringBuffer()
com/ibm/icu/text/SpoofChecker/Builder/ConfusabledataBuilder/build(java.io.Reader)#java/lang/StringBuilder/toString()
com/ibm/icu/text/DateTimePatternGenerator/getBestRaw(com.ibm.icu.text.DateTimePatternGenerator$DateTimeMatcher,int,com.ibm.icu.text.DateTimePatternGenerator$DistanceInfo,com.ibm.icu.text.DateTimePatternGenerator$DateTimeMatcher)#com/ibm/icu/text/DateTimePatternGenerator$PatternWithMatcher/PatternWithMatcher(java.lang.String,com.ibm.icu.text.DateTimePatternGenerator$DateTimeMatcher)
com/ibm/icu/text/DateTimePatternGenerator/getBestRaw(com.ibm.icu.text.DateTimePatternGenerator$DateTimeMatcher,int,com.ibm.icu.text.DateTimePatternGenerator$DistanceInfo,com.ibm.icu.text.DateTimePatternGenerator$DateTimeMatcher)#java/util/Iterator/hasNext()
com/ibm/icu/text/DateTimePatternGenerator/getBestRaw(com.ibm.icu.text.DateTimePatternGenerator$DateTimeMatcher,int,com.ibm.icu.text.DateTimePatternGenerator$DistanceInfo,com.ibm.icu.text.DateTimePatternGenerator$DateTimeMatcher)#com/ibm/icu/text/DateTimePatternGenerator$DistanceInfo/setTo(com.ibm.icu.text.DateTimePatternGenerator$DistanceInfo)
com/ibm/icu/text/DateTimePatternGenerator/getBestRaw(com.ibm.icu.text.DateTimePatternGenerator$DateTimeMatcher,int,com.ibm.icu.text.DateTimePatternGenerator$DistanceInfo,com.ibm.icu.text.DateTimePatternGenerator$DateTimeMatcher)#java/util/Iterator/next()
com/ibm/icu/text/DateTimePatternGenerator/getBestRaw(com.ibm.icu.text.DateTimePatternGenerator$DateTimeMatcher,int,com.ibm.icu.text.DateTimePatternGenerator$DistanceInfo,com.ibm.icu.text.DateTimePatternGenerator$DateTimeMatcher)#com/ibm/icu/text/DateTimePatternGenerator$DistanceInfo/DistanceInfo(com.ibm.icu.text.DateTimePatternGenerator$1)
com/ibm/icu/text/DateTimePatternGenerator/getBestRaw(com.ibm.icu.text.DateTimePatternGenerator$DateTimeMatcher,int,com.ibm.icu.text.DateTimePatternGenerator$DistanceInfo,com.ibm.icu.text.DateTimePatternGenerator$DateTimeMatcher)#java/util/Set/iterator()
com/ibm/icu/text/DateTimePatternGenerator/getBestRaw(com.ibm.icu.text.DateTimePatternGenerator$DateTimeMatcher,int,com.ibm.icu.text.DateTimePatternGenerator$DistanceInfo,com.ibm.icu.text.DateTimePatternGenerator$DateTimeMatcher)#com/ibm/icu/text/DateTimePatternGenerator$DateTimeMatcher/getDistance(com.ibm.icu.text.DateTimePatternGenerator$DateTimeMatcher,int,com.ibm.icu.text.DateTimePatternGenerator$DistanceInfo)
com/ibm/icu/text/DateTimePatternGenerator/getBestRaw(com.ibm.icu.text.DateTimePatternGenerator$DateTimeMatcher,int,com.ibm.icu.text.DateTimePatternGenerator$DistanceInfo,com.ibm.icu.text.DateTimePatternGenerator$DateTimeMatcher)#com/ibm/icu/text/DateTimePatternGenerator$DateTimeMatcher/equals(java.lang.Object)
com/ibm/icu/text/DateTimePatternGenerator/getBestRaw(com.ibm.icu.text.DateTimePatternGenerator$DateTimeMatcher,int,com.ibm.icu.text.DateTimePatternGenerator$DistanceInfo,com.ibm.icu.text.DateTimePatternGenerator$DateTimeMatcher)#java/util/TreeMap/get(java.lang.Object)
com/ibm/icu/text/DateTimePatternGenerator/getBestRaw(com.ibm.icu.text.DateTimePatternGenerator$DateTimeMatcher,int,com.ibm.icu.text.DateTimePatternGenerator$DistanceInfo,com.ibm.icu.text.DateTimePatternGenerator$DateTimeMatcher)#java/util/TreeMap/keySet()
com/ibm/icu/text/DateTimePatternGenerator/getSet(java.lang.String)#java/lang/Object/toString()
com/ibm/icu/text/DateTimePatternGenerator/getSet(java.lang.String)#java/util/Iterator/hasNext()
com/ibm/icu/text/DateTimePatternGenerator/getSet(java.lang.String)#java/util/Iterator/next()
com/ibm/icu/text/DateTimePatternGenerator/getSet(java.lang.String)#java/lang/String/startsWith(java.lang.String)
com/ibm/icu/text/DateTimePatternGenerator/getSet(java.lang.String)#java/util/List/iterator()
com/ibm/icu/text/DateTimePatternGenerator/getSet(java.lang.String)#java/util/TreeSet/TreeSet()
com/ibm/icu/text/DateTimePatternGenerator/getSet(java.lang.String)#com/ibm/icu/text/DateTimePatternGenerator$FormatParser/getItems()
com/ibm/icu/text/DateTimePatternGenerator/getSet(java.lang.String)#com/ibm/icu/text/DateTimePatternGenerator$FormatParser/set(java.lang.String)
com/ibm/icu/text/DateTimePatternGenerator/getSet(java.lang.String)#java/util/TreeSet/add(java.lang.Object)
com/ibm/icu/text/DateTimePatternGenerator/getRedundants(java.util.Collection)#java/util/Iterator/hasNext()
com/ibm/icu/text/DateTimePatternGenerator/getRedundants(java.util.Collection)#java/util/LinkedHashSet/LinkedHashSet()
com/ibm/icu/text/DateTimePatternGenerator/getRedundants(java.util.Collection)#java/util/Iterator/next()
com/ibm/icu/text/DateTimePatternGenerator/getRedundants(java.util.Collection)#java/lang/String/equals(java.lang.Object)
com/ibm/icu/text/DateTimePatternGenerator/getRedundants(java.util.Collection)#java/util/Set/contains(java.lang.Object)
com/ibm/icu/text/DateTimePatternGenerator/getRedundants(java.util.Collection)#java/util/Set/iterator()
com/ibm/icu/text/DateTimePatternGenerator/getRedundants(java.util.Collection)#java/util/Collection/add(java.lang.Object)
com/ibm/icu/text/DateTimePatternGenerator/getRedundants(java.util.Collection)#com/ibm/icu/text/DateTimePatternGenerator$DateTimeMatcher/toString()
com/ibm/icu/text/DateTimePatternGenerator/getRedundants(java.util.Collection)#java/util/TreeMap/get(java.lang.Object)
com/ibm/icu/text/DateTimePatternGenerator/getRedundants(java.util.Collection)#java/util/TreeMap/keySet()
com/ibm/icu/text/DateTimePatternGenerator/adjustFieldTypes(com.ibm.icu.text.DateTimePatternGenerator$PatternWithMatcher,com.ibm.icu.text.DateTimePatternGenerator$DateTimeMatcher,boolean,int)#com/ibm/icu/text/DateTimePatternGenerator$DateTimeMatcher/origStringForField(int)
com/ibm/icu/text/DateTimePatternGenerator/adjustFieldTypes(com.ibm.icu.text.DateTimePatternGenerator$PatternWithMatcher,com.ibm.icu.text.DateTimePatternGenerator$DateTimeMatcher,boolean,int)#com/ibm/icu/text/DateTimePatternGenerator$DateTimeMatcher/access$700(com.ibm.icu.text.DateTimePatternGenerator$DateTimeMatcher)
com/ibm/icu/text/DateTimePatternGenerator/adjustFieldTypes(com.ibm.icu.text.DateTimePatternGenerator$PatternWithMatcher,com.ibm.icu.text.DateTimePatternGenerator$DateTimeMatcher,boolean,int)#com/ibm/icu/text/DateTimePatternGenerator$DateTimeMatcher/access$600(com.ibm.icu.text.DateTimePatternGenerator$DateTimeMatcher)
com/ibm/icu/text/DateTimePatternGenerator/adjustFieldTypes(com.ibm.icu.text.DateTimePatternGenerator$PatternWithMatcher,com.ibm.icu.text.DateTimePatternGenerator$DateTimeMatcher,boolean,int)#java/util/Iterator/hasNext()
com/ibm/icu/text/DateTimePatternGenerator/adjustFieldTypes(com.ibm.icu.text.DateTimePatternGenerator$PatternWithMatcher,com.ibm.icu.text.DateTimePatternGenerator$DateTimeMatcher,boolean,int)#java/lang/String/length()
com/ibm/icu/text/DateTimePatternGenerator/adjustFieldTypes(com.ibm.icu.text.DateTimePatternGenerator$PatternWithMatcher,com.ibm.icu.text.DateTimePatternGenerator$DateTimeMatcher,boolean,int)#com/ibm/icu/text/DateTimePatternGenerator$VariableField/isNumeric()
com/ibm/icu/text/DateTimePatternGenerator/adjustFieldTypes(com.ibm.icu.text.DateTimePatternGenerator$PatternWithMatcher,com.ibm.icu.text.DateTimePatternGenerator$DateTimeMatcher,boolean,int)#java/lang/StringBuilder/StringBuilder(java.lang.String)
com/ibm/icu/text/DateTimePatternGenerator/adjustFieldTypes(com.ibm.icu.text.DateTimePatternGenerator$PatternWithMatcher,com.ibm.icu.text.DateTimePatternGenerator$DateTimeMatcher,boolean,int)#java/util/Iterator/next()
com/ibm/icu/text/DateTimePatternGenerator/adjustFieldTypes(com.ibm.icu.text.DateTimePatternGenerator$PatternWithMatcher,com.ibm.icu.text.DateTimePatternGenerator$DateTimeMatcher,boolean,int)#java/lang/StringBuilder/StringBuilder()
com/ibm/icu/text/DateTimePatternGenerator/adjustFieldTypes(com.ibm.icu.text.DateTimePatternGenerator$PatternWithMatcher,com.ibm.icu.text.DateTimePatternGenerator$DateTimeMatcher,boolean,int)#java/lang/StringBuilder/append(char)
com/ibm/icu/text/DateTimePatternGenerator/adjustFieldTypes(com.ibm.icu.text.DateTimePatternGenerator$PatternWithMatcher,com.ibm.icu.text.DateTimePatternGenerator$DateTimeMatcher,boolean,int)#com/ibm/icu/text/DateTimePatternGenerator$VariableField/toString()
com/ibm/icu/text/DateTimePatternGenerator/adjustFieldTypes(com.ibm.icu.text.DateTimePatternGenerator$PatternWithMatcher,com.ibm.icu.text.DateTimePatternGenerator$DateTimeMatcher,boolean,int)#java/lang/StringBuilder/length()
com/ibm/icu/text/DateTimePatternGenerator/adjustFieldTypes(com.ibm.icu.text.DateTimePatternGenerator$PatternWithMatcher,com.ibm.icu.text.DateTimePatternGenerator$DateTimeMatcher,boolean,int)#com/ibm/icu/text/DateTimePatternGenerator$FormatParser/getItems()
com/ibm/icu/text/DateTimePatternGenerator/adjustFieldTypes(com.ibm.icu.text.DateTimePatternGenerator$PatternWithMatcher,com.ibm.icu.text.DateTimePatternGenerator$DateTimeMatcher,boolean,int)#java/lang/StringBuilder/append(java.lang.CharSequence)
com/ibm/icu/text/DateTimePatternGenerator/adjustFieldTypes(com.ibm.icu.text.DateTimePatternGenerator$PatternWithMatcher,com.ibm.icu.text.DateTimePatternGenerator$DateTimeMatcher,boolean,int)#com/ibm/icu/text/DateTimePatternGenerator$FormatParser/quoteLiteral(java.lang.String)
com/ibm/icu/text/DateTimePatternGenerator/adjustFieldTypes(com.ibm.icu.text.DateTimePatternGenerator$PatternWithMatcher,com.ibm.icu.text.DateTimePatternGenerator$DateTimeMatcher,boolean,int)#java/lang/StringBuilder/append(java.lang.String)
com/ibm/icu/text/DateTimePatternGenerator/adjustFieldTypes(com.ibm.icu.text.DateTimePatternGenerator$PatternWithMatcher,com.ibm.icu.text.DateTimePatternGenerator$DateTimeMatcher,boolean,int)#java/lang/String/charAt(int)
com/ibm/icu/text/DateTimePatternGenerator/adjustFieldTypes(com.ibm.icu.text.DateTimePatternGenerator$PatternWithMatcher,com.ibm.icu.text.DateTimePatternGenerator$DateTimeMatcher,boolean,int)#java/lang/StringBuilder/append(java.lang.Object)
com/ibm/icu/text/DateTimePatternGenerator/adjustFieldTypes(com.ibm.icu.text.DateTimePatternGenerator$PatternWithMatcher,com.ibm.icu.text.DateTimePatternGenerator$DateTimeMatcher,boolean,int)#com/ibm/icu/text/DateTimePatternGenerator$VariableField/getType()
com/ibm/icu/text/DateTimePatternGenerator/adjustFieldTypes(com.ibm.icu.text.DateTimePatternGenerator$PatternWithMatcher,com.ibm.icu.text.DateTimePatternGenerator$DateTimeMatcher,boolean,int)#java/util/List/iterator()
com/ibm/icu/text/DateTimePatternGenerator/adjustFieldTypes(com.ibm.icu.text.DateTimePatternGenerator$PatternWithMatcher,com.ibm.icu.text.DateTimePatternGenerator$DateTimeMatcher,boolean,int)#com/ibm/icu/text/DateTimePatternGenerator$DateTimeMatcher/fieldIsNumeric(int)
com/ibm/icu/text/DateTimePatternGenerator/adjustFieldTypes(com.ibm.icu.text.DateTimePatternGenerator$PatternWithMatcher,com.ibm.icu.text.DateTimePatternGenerator$DateTimeMatcher,boolean,int)#java/lang/StringBuilder/charAt(int)
com/ibm/icu/text/DateTimePatternGenerator/adjustFieldTypes(com.ibm.icu.text.DateTimePatternGenerator$PatternWithMatcher,com.ibm.icu.text.DateTimePatternGenerator$DateTimeMatcher,boolean,int)#java/lang/StringBuilder/toString()
com/ibm/icu/text/DateTimePatternGenerator/adjustFieldTypes(com.ibm.icu.text.DateTimePatternGenerator$PatternWithMatcher,com.ibm.icu.text.DateTimePatternGenerator$DateTimeMatcher,boolean,int)#com/ibm/icu/text/DateTimePatternGenerator$FormatParser/set(java.lang.String)
com/ibm/icu/text/DateTimePatternGenerator/getFilteredPattern(com.ibm.icu.text.DateTimePatternGenerator$FormatParser,java.util.BitSet)#java/util/BitSet/get(int)
com/ibm/icu/text/DateTimePatternGenerator/getFilteredPattern(com.ibm.icu.text.DateTimePatternGenerator$FormatParser,java.util.BitSet)#com/ibm/icu/text/DateTimePatternGenerator$FormatParser/quoteLiteral(java.lang.String)
com/ibm/icu/text/DateTimePatternGenerator/getFilteredPattern(com.ibm.icu.text.DateTimePatternGenerator$FormatParser,java.util.BitSet)#java/lang/Object/toString()
com/ibm/icu/text/DateTimePatternGenerator/getFilteredPattern(com.ibm.icu.text.DateTimePatternGenerator$FormatParser,java.util.BitSet)#java/lang/StringBuilder/append(java.lang.String)
com/ibm/icu/text/DateTimePatternGenerator/getFilteredPattern(com.ibm.icu.text.DateTimePatternGenerator$FormatParser,java.util.BitSet)#java/util/List/size()
com/ibm/icu/text/DateTimePatternGenerator/getFilteredPattern(com.ibm.icu.text.DateTimePatternGenerator$FormatParser,java.util.BitSet)#com/ibm/icu/text/DateTimePatternGenerator$FormatParser/access$000(com.ibm.icu.text.DateTimePatternGenerator$FormatParser)
com/ibm/icu/text/DateTimePatternGenerator/getFilteredPattern(com.ibm.icu.text.DateTimePatternGenerator$FormatParser,java.util.BitSet)#java/lang/StringBuilder/StringBuilder()
com/ibm/icu/text/DateTimePatternGenerator/getFilteredPattern(com.ibm.icu.text.DateTimePatternGenerator$FormatParser,java.util.BitSet)#java/util/List/get(int)
com/ibm/icu/text/DateTimePatternGenerator/getFilteredPattern(com.ibm.icu.text.DateTimePatternGenerator$FormatParser,java.util.BitSet)#java/lang/StringBuilder/append(java.lang.Object)
com/ibm/icu/text/DateTimePatternGenerator/getFilteredPattern(com.ibm.icu.text.DateTimePatternGenerator$FormatParser,java.util.BitSet)#java/lang/StringBuilder/toString()
com/ibm/icu/text/DateTimePatternGenerator/getSkeletons(java.util.Map)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/ibm/icu/text/DateTimePatternGenerator/getSkeletons(java.util.Map)#java/util/Iterator/hasNext()
com/ibm/icu/text/DateTimePatternGenerator/getSkeletons(java.util.Map)#java/util/Iterator/next()
com/ibm/icu/text/DateTimePatternGenerator/getSkeletons(java.util.Map)#java/util/Set/contains(java.lang.Object)
com/ibm/icu/text/DateTimePatternGenerator/getSkeletons(java.util.Map)#java/util/Set/iterator()
com/ibm/icu/text/DateTimePatternGenerator/getSkeletons(java.util.Map)#java/util/LinkedHashMap/LinkedHashMap()
com/ibm/icu/text/DateTimePatternGenerator/getSkeletons(java.util.Map)#com/ibm/icu/text/DateTimePatternGenerator$DateTimeMatcher/toString()
com/ibm/icu/text/DateTimePatternGenerator/getSkeletons(java.util.Map)#java/util/TreeMap/get(java.lang.Object)
com/ibm/icu/text/DateTimePatternGenerator/getSkeletons(java.util.Map)#java/util/TreeMap/keySet()
com/ibm/icu/text/DateTimePatternGenerator/getFields(java.lang.String)#com/ibm/icu/text/DateTimePatternGenerator$FormatParser/quoteLiteral(java.lang.String)
com/ibm/icu/text/DateTimePatternGenerator/getFields(java.lang.String)#java/lang/Object/toString()
com/ibm/icu/text/DateTimePatternGenerator/getFields(java.lang.String)#java/util/Iterator/hasNext()
com/ibm/icu/text/DateTimePatternGenerator/getFields(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/ibm/icu/text/DateTimePatternGenerator/getFields(java.lang.String)#java/util/Iterator/next()
com/ibm/icu/text/DateTimePatternGenerator/getFields(java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/ibm/icu/text/DateTimePatternGenerator/getFields(java.lang.String)#java/lang/StringBuilder/append(java.lang.Object)
com/ibm/icu/text/DateTimePatternGenerator/getFields(java.lang.String)#java/util/List/iterator()
com/ibm/icu/text/DateTimePatternGenerator/getFields(java.lang.String)#com/ibm/icu/text/DateTimePatternGenerator$FormatParser/getItems()
com/ibm/icu/text/DateTimePatternGenerator/getFields(java.lang.String)#java/lang/StringBuilder/toString()
com/ibm/icu/text/DateTimePatternGenerator/getFields(java.lang.String)#com/ibm/icu/text/DateTimePatternGenerator$FormatParser/set(java.lang.String)
com/ibm/icu/text/DateTimePatternGenerator/hackTimes(com.ibm.icu.text.DateTimePatternGenerator,com.ibm.icu.text.DateTimePatternGenerator$PatternInfo,java.lang.String)#com/ibm/icu/text/DateTimePatternGenerator$FormatParser/quoteLiteral(java.lang.String)
com/ibm/icu/text/DateTimePatternGenerator/hackTimes(com.ibm.icu.text.DateTimePatternGenerator,com.ibm.icu.text.DateTimePatternGenerator$PatternInfo,java.lang.String)#java/lang/Object/toString()
com/ibm/icu/text/DateTimePatternGenerator/hackTimes(com.ibm.icu.text.DateTimePatternGenerator,com.ibm.icu.text.DateTimePatternGenerator$PatternInfo,java.lang.String)#java/lang/String/charAt(int)
com/ibm/icu/text/DateTimePatternGenerator/hackTimes(com.ibm.icu.text.DateTimePatternGenerator,com.ibm.icu.text.DateTimePatternGenerator$PatternInfo,java.lang.String)#java/util/List/size()
com/ibm/icu/text/DateTimePatternGenerator/hackTimes(com.ibm.icu.text.DateTimePatternGenerator,com.ibm.icu.text.DateTimePatternGenerator$PatternInfo,java.lang.String)#com/ibm/icu/text/DateTimePatternGenerator$FormatParser/access$000(com.ibm.icu.text.DateTimePatternGenerator$FormatParser)
com/ibm/icu/text/DateTimePatternGenerator/hackTimes(com.ibm.icu.text.DateTimePatternGenerator,com.ibm.icu.text.DateTimePatternGenerator$PatternInfo,java.lang.String)#java/util/BitSet/BitSet()
com/ibm/icu/text/DateTimePatternGenerator/hackTimes(com.ibm.icu.text.DateTimePatternGenerator,com.ibm.icu.text.DateTimePatternGenerator$PatternInfo,java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/ibm/icu/text/DateTimePatternGenerator/hackTimes(com.ibm.icu.text.DateTimePatternGenerator,com.ibm.icu.text.DateTimePatternGenerator$PatternInfo,java.lang.String)#java/util/BitSet/set(int)
com/ibm/icu/text/DateTimePatternGenerator/hackTimes(com.ibm.icu.text.DateTimePatternGenerator,com.ibm.icu.text.DateTimePatternGenerator$PatternInfo,java.lang.String)#java/util/List/get(int)
com/ibm/icu/text/DateTimePatternGenerator/hackTimes(com.ibm.icu.text.DateTimePatternGenerator,com.ibm.icu.text.DateTimePatternGenerator$PatternInfo,java.lang.String)#java/lang/StringBuilder/append(java.lang.Object)
com/ibm/icu/text/DateTimePatternGenerator/hackTimes(com.ibm.icu.text.DateTimePatternGenerator,com.ibm.icu.text.DateTimePatternGenerator$PatternInfo,java.lang.String)#java/util/BitSet/get(int)
com/ibm/icu/text/DateTimePatternGenerator/hackTimes(com.ibm.icu.text.DateTimePatternGenerator,com.ibm.icu.text.DateTimePatternGenerator$PatternInfo,java.lang.String)#java/lang/StringBuilder/toString()
com/ibm/icu/text/DateTimePatternGenerator/hackTimes(com.ibm.icu.text.DateTimePatternGenerator,com.ibm.icu.text.DateTimePatternGenerator$PatternInfo,java.lang.String)#com/ibm/icu/text/DateTimePatternGenerator$FormatParser/set(java.lang.String)
com/ibm/icu/text/DateTimePatternGenerator/getFrozenInstance(com.ibm.icu.util.ULocale)#java/lang/String/valueOf(char)
com/ibm/icu/text/DateTimePatternGenerator/getFrozenInstance(com.ibm.icu.util.ULocale)#com/ibm/icu/text/DateTimePatternGenerator$FormatParser/FormatParser()
com/ibm/icu/text/DateTimePatternGenerator/getFrozenInstance(com.ibm.icu.util.ULocale)#com/ibm/icu/text/DateTimePatternGenerator$VariableField/getType()
com/ibm/icu/text/DateTimePatternGenerator/getFrozenInstance(com.ibm.icu.util.ULocale)#java/lang/StringBuilder/append(java.lang.String)
com/ibm/icu/text/DateTimePatternGenerator/getFrozenInstance(com.ibm.icu.util.ULocale)#java/lang/String/charAt(int)
com/ibm/icu/text/DateTimePatternGenerator/getFrozenInstance(com.ibm.icu.util.ULocale)#com/ibm/icu/impl/ICUResourceBundle/getString()
com/ibm/icu/text/DateTimePatternGenerator/getFrozenInstance(com.ibm.icu.util.ULocale)#java/util/List/size()
com/ibm/icu/text/DateTimePatternGenerator/getFrozenInstance(com.ibm.icu.util.ULocale)#com/ibm/icu/text/DateTimePatternGenerator$PatternInfo/PatternInfo()
com/ibm/icu/text/DateTimePatternGenerator/getFrozenInstance(com.ibm.icu.util.ULocale)#java/lang/StringBuilder/StringBuilder()
com/ibm/icu/text/DateTimePatternGenerator/getFrozenInstance(com.ibm.icu.util.ULocale)#com/ibm/icu/text/DateTimePatternGenerator$VariableField/toString()
com/ibm/icu/text/DateTimePatternGenerator/getFrozenInstance(com.ibm.icu.util.ULocale)#java/util/List/get(int)
com/ibm/icu/text/DateTimePatternGenerator/getFrozenInstance(com.ibm.icu.util.ULocale)#com/ibm/icu/impl/ICUResourceBundle/getSize()
com/ibm/icu/text/DateTimePatternGenerator/getFrozenInstance(com.ibm.icu.util.ULocale)#com/ibm/icu/impl/ICUResourceBundle/get(int)
com/ibm/icu/text/DateTimePatternGenerator/getFrozenInstance(com.ibm.icu.util.ULocale)#com/ibm/icu/text/DateTimePatternGenerator$FormatParser/getItems()
com/ibm/icu/text/DateTimePatternGenerator/getFrozenInstance(com.ibm.icu.util.ULocale)#java/lang/StringBuilder/toString()
com/ibm/icu/text/DateTimePatternGenerator/getFrozenInstance(com.ibm.icu.util.ULocale)#com/ibm/icu/text/DateTimePatternGenerator$FormatParser/set(java.lang.String)
com/ibm/icu/util/Region/getInstance(int)#java/lang/StringBuilder/append(java.lang.String)
com/ibm/icu/util/Region/getInstance(int)#java/lang/StringBuilder/append(int)
com/ibm/icu/util/Region/getInstance(int)#java/util/List/size()
com/ibm/icu/util/Region/getInstance(int)#java/lang/StringBuilder/StringBuilder()
com/ibm/icu/util/Region/getInstance(int)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/ibm/icu/util/Region/getInstance(int)#java/lang/StringBuilder/toString()
com/ibm/icu/util/Region/getInstance(int)#java/lang/Integer/toString(int)
com/ibm/icu/util/Region/getInstance(int)#java/util/Map/get(java.lang.Object)
com/ibm/icu/util/Region/getInstance(int)#java/lang/Integer/valueOf(int)
com/ibm/icu/util/Region/getInstance(int)#java/util/List/get(int)
com/ibm/icu/util/Region/loadRegionData()#java/util/ArrayList/ArrayList(int)
com/ibm/icu/util/Region/loadRegionData()#java/lang/String/split(java.lang.String)
com/ibm/icu/util/Region/loadRegionData()#java/util/Iterator/hasNext()
com/ibm/icu/util/Region/loadRegionData()#com/ibm/icu/util/Region$RegionType/ordinal()
com/ibm/icu/util/Region/loadRegionData()#java/util/ArrayList/add(java.lang.Object)
com/ibm/icu/util/Region/loadRegionData()#java/lang/Integer/valueOf(int)
com/ibm/icu/util/Region/loadRegionData()#java/lang/Integer/valueOf(java.lang.String)
com/ibm/icu/util/Region/loadRegionData()#java/util/List/iterator()
com/ibm/icu/util/Region/loadRegionData()#java/util/TreeSet/TreeSet()
com/ibm/icu/util/Region/loadRegionData()#java/lang/String/matches(java.lang.String)
com/ibm/icu/util/Region/loadRegionData()#java/util/ArrayList/iterator()
com/ibm/icu/util/Region/loadRegionData()#java/lang/Integer/intValue()
com/ibm/icu/util/Region/loadRegionData()#java/util/Map/put(java.lang.Object,java.lang.Object)
com/ibm/icu/util/Region/loadRegionData()#java/util/ArrayList/ArrayList()
com/ibm/icu/util/Region/loadRegionData()#java/util/Arrays/asList(java.lang.Object[])
com/ibm/icu/util/Region/loadRegionData()#java/util/Map/get(java.lang.Object)
com/ibm/icu/util/Region/loadRegionData()#java/util/Iterator/next()
com/ibm/icu/util/Region/loadRegionData()#java/util/HashMap/HashMap()
com/ibm/icu/util/Region/loadRegionData()#java/util/ArrayList/set(int,java.lang.Object)
com/ibm/icu/util/Region/loadRegionData()#java/util/Map/containsKey(java.lang.Object)
com/ibm/icu/util/Region/loadRegionData()#java/util/List/add(java.lang.Object)
com/ibm/icu/util/Region/loadRegionData()#java/util/Set/add(java.lang.Object)
com/ibm/icu/util/Region/loadRegionData()#java/util/ArrayList/get(int)
com/ibm/icu/util/Region/loadRegionData()#com/ibm/icu/util/Region$RegionType/values()
com/ibm/icu/impl/Trie2Writable/freeze(com.ibm.icu.impl.Trie2,com.ibm.icu.impl.Trie2$ValueWidth)#java/lang/Integer/toHexString(int)
com/ibm/icu/impl/Trie2Writable/freeze(com.ibm.icu.impl.Trie2,com.ibm.icu.impl.Trie2$ValueWidth)#com/ibm/icu/impl/Trie2$ValueWidth/ordinal()
com/ibm/icu/impl/Trie2Writable/freeze(com.ibm.icu.impl.Trie2,com.ibm.icu.impl.Trie2$ValueWidth)#com/ibm/icu/impl/Trie2$UTrie2Header/UTrie2Header()
com/ibm/icu/impl/Trie2Writable/freeze(com.ibm.icu.impl.Trie2,com.ibm.icu.impl.Trie2$ValueWidth)#java/lang/StringBuilder/StringBuilder()
com/ibm/icu/impl/Trie2Writable/freeze(com.ibm.icu.impl.Trie2,com.ibm.icu.impl.Trie2$ValueWidth)#java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)
com/ibm/icu/impl/Trie2Writable/freeze(com.ibm.icu.impl.Trie2,com.ibm.icu.impl.Trie2$ValueWidth)#java/lang/AssertionError/AssertionError()
com/ibm/icu/impl/Trie2Writable/freeze(com.ibm.icu.impl.Trie2,com.ibm.icu.impl.Trie2$ValueWidth)#java/lang/StringBuilder/toString()
com/ibm/icu/impl/Trie2Writable/freeze(com.ibm.icu.impl.Trie2,com.ibm.icu.impl.Trie2$ValueWidth)#java/lang/StringBuilder/append(java.lang.String)
com/ibm/icu/impl/Trie2Writable/freeze(com.ibm.icu.impl.Trie2,com.ibm.icu.impl.Trie2$ValueWidth)#java/io/PrintStream/println(java.lang.String)
com/ibm/icu/impl/SoftCache/getInstance(java.lang.Object,java.lang.Object)#com/ibm/icu/impl/SoftCache/createInstance(java.lang.Object,java.lang.Object)
com/ibm/icu/impl/SoftCache/getInstance(java.lang.Object,java.lang.Object)#com/ibm/icu/impl/SoftCache$SettableSoftReference/SettableSoftReference(java.lang.Object,com.ibm.icu.impl.SoftCache$1)
com/ibm/icu/impl/SoftCache/getInstance(java.lang.Object,java.lang.Object)#java/util/concurrent/ConcurrentHashMap/get(java.lang.Object)
com/ibm/icu/impl/SoftCache/getInstance(java.lang.Object,java.lang.Object)#com/ibm/icu/impl/SoftCache$SettableSoftReference/access$000(com.ibm.icu.impl.SoftCache$SettableSoftReference)
com/ibm/icu/impl/SoftCache/getInstance(java.lang.Object,java.lang.Object)#java/lang/ref/SoftReference/SoftReference(java.lang.Object)
com/ibm/icu/impl/SoftCache/getInstance(java.lang.Object,java.lang.Object)#java/lang/ref/SoftReference/get()
com/ibm/icu/impl/SoftCache/getInstance(java.lang.Object,java.lang.Object)#com/ibm/icu/impl/SoftCache$SettableSoftReference/access$200(com.ibm.icu.impl.SoftCache$SettableSoftReference,java.lang.Object)
com/ibm/icu/impl/SoftCache/getInstance(java.lang.Object,java.lang.Object)#java/util/concurrent/ConcurrentHashMap/putIfAbsent(java.lang.Object,java.lang.Object)
com/ibm/icu/impl/SoftCache/getInstance(java.lang.Object,java.lang.Object)#com/ibm/icu/impl/SoftCache$SettableSoftReference/access$002(com.ibm.icu.impl.SoftCache$SettableSoftReference,java.lang.ref.SoftReference)
com/ibm/icu/text/DictionaryData/loadDictionaryFor(java.lang.String)#java/io/DataInputStream/readByte()
com/ibm/icu/text/DictionaryData/loadDictionaryFor(java.lang.String)#java/lang/String/String(char[])
com/ibm/icu/text/DictionaryData/loadDictionaryFor(java.lang.String)#java/io/DataInputStream/close()
com/ibm/icu/text/DictionaryData/loadDictionaryFor(java.lang.String)#java/io/DataInputStream/readInt()
com/ibm/icu/text/DictionaryData/loadDictionaryFor(java.lang.String)#java/io/DataInputStream/readChar()
com/ibm/icu/text/DictionaryData/loadDictionaryFor(java.lang.String)#java/io/InputStream/close()
com/ibm/icu/text/DictionaryData/loadDictionaryFor(java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/ibm/icu/text/DictionaryData/loadDictionaryFor(java.lang.String)#java/io/DataInputStream/skipBytes(int)
com/ibm/icu/text/DictionaryData/loadDictionaryFor(java.lang.String)#java/lang/StringBuilder/toString()
com/ibm/icu/text/DictionaryData/loadDictionaryFor(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/ibm/icu/text/DictionaryData/loadDictionaryFor(java.lang.String)#java/io/DataInputStream/DataInputStream(java.io.InputStream)
com/ibm/icu/text/DateIntervalInfo/setup(com.ibm.icu.util.ULocale)#java/util/HashSet/contains(java.lang.Object)
com/ibm/icu/text/DateIntervalInfo/setup(com.ibm.icu.util.ULocale)#java/lang/String/length()
com/ibm/icu/text/DateIntervalInfo/setup(com.ibm.icu.util.ULocale)#java/util/HashSet/add(java.lang.Object)
com/ibm/icu/text/DateIntervalInfo/setup(com.ibm.icu.util.ULocale)#java/lang/String/equals(java.lang.Object)
com/ibm/icu/text/DateIntervalInfo/setup(com.ibm.icu.util.ULocale)#java/lang/String/compareTo(java.lang.String)
com/ibm/icu/text/DateIntervalInfo/setup(com.ibm.icu.util.ULocale)#java/util/HashMap/HashMap(int)
com/ibm/icu/text/DateIntervalInfo/setup(com.ibm.icu.util.ULocale)#com/ibm/icu/impl/ICUResourceBundle/get(java.lang.String)
com/ibm/icu/text/DateIntervalInfo/setup(com.ibm.icu.util.ULocale)#com/ibm/icu/impl/ICUResourceBundle/getSize()
com/ibm/icu/text/DateIntervalInfo/setup(com.ibm.icu.util.ULocale)#java/util/HashSet/HashSet()
com/ibm/icu/text/DateIntervalInfo/setup(com.ibm.icu.util.ULocale)#com/ibm/icu/impl/ICUResourceBundle/get(int)
com/ibm/icu/text/DateIntervalInfo/getPatterns()#java/util/Iterator/hasNext()
com/ibm/icu/text/DateIntervalInfo/getPatterns()#java/util/Map$Entry/getKey()
com/ibm/icu/text/DateIntervalInfo/getPatterns()#java/util/LinkedHashMap/put(java.lang.Object,java.lang.Object)
com/ibm/icu/text/DateIntervalInfo/getPatterns()#java/util/LinkedHashSet/LinkedHashSet(java.util.Collection)
com/ibm/icu/text/DateIntervalInfo/getPatterns()#java/util/Set/iterator()
com/ibm/icu/text/DateIntervalInfo/getPatterns()#java/util/Map$Entry/getValue()
com/ibm/icu/text/DateIntervalInfo/getPatterns()#java/util/Map/entrySet()
com/ibm/icu/text/DateIntervalInfo/getPatterns()#java/util/LinkedHashMap/LinkedHashMap()
com/ibm/icu/text/DateIntervalInfo/getPatterns()#java/util/Iterator/next()
com/ibm/icu/text/DateIntervalInfo/getPatterns()#java/util/Map/keySet()
com/ibm/icu/text/DateIntervalInfo/cloneUnfrozenDII()#java/util/Map/put(java.lang.Object,java.lang.Object)
com/ibm/icu/text/DateIntervalInfo/cloneUnfrozenDII()#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
com/ibm/icu/text/DateIntervalInfo/cloneUnfrozenDII()#java/util/Iterator/hasNext()
com/ibm/icu/text/DateIntervalInfo/cloneUnfrozenDII()#java/util/Map$Entry/getKey()
com/ibm/icu/text/DateIntervalInfo/cloneUnfrozenDII()#java/util/Map/get(java.lang.Object)
com/ibm/icu/text/DateIntervalInfo/cloneUnfrozenDII()#java/util/Set/iterator()
com/ibm/icu/text/DateIntervalInfo/cloneUnfrozenDII()#java/util/Map$Entry/getValue()
com/ibm/icu/text/DateIntervalInfo/cloneUnfrozenDII()#java/lang/Object/clone()
com/ibm/icu/text/DateIntervalInfo/cloneUnfrozenDII()#java/util/Map/entrySet()
com/ibm/icu/text/DateIntervalInfo/cloneUnfrozenDII()#java/util/Iterator/next()
com/ibm/icu/text/DateIntervalInfo/cloneUnfrozenDII()#java/util/HashMap/HashMap()
com/ibm/icu/text/DateIntervalInfo/cloneUnfrozenDII()#java/util/Map/keySet()
com/ibm/icu/text/CollationElementIterator/nextDiscontiguous(com.ibm.icu.text.RuleBasedCollator,int)#java/lang/StringBuilder/appendCodePoint(int)
com/ibm/icu/text/CollationElementIterator/nextDiscontiguous(com.ibm.icu.text.RuleBasedCollator,int)#java/lang/StringBuilder/append(char)
com/ibm/icu/text/CollationElementIterator/nextDiscontiguous(com.ibm.icu.text.RuleBasedCollator,int)#java/lang/Character/isHighSurrogate(char)
com/ibm/icu/text/CollationElementIterator/nextDiscontiguous(com.ibm.icu.text.RuleBasedCollator,int)#java/lang/StringBuilder/charAt(int)
com/ibm/icu/text/CollationElementIterator/nextDiscontiguous(com.ibm.icu.text.RuleBasedCollator,int)#java/lang/StringBuilder/setLength(int)
com/ibm/icu/text/CollationElementIterator/nextDiscontiguous(com.ibm.icu.text.RuleBasedCollator,int)#java/lang/Character/isLowSurrogate(char)
com/ibm/icu/text/CollationElementIterator/nextDiscontiguous(com.ibm.icu.text.RuleBasedCollator,int)#java/lang/Character/toCodePoint(char,char)
com/ibm/icu/text/CollationElementIterator/nextDiscontiguous(com.ibm.icu.text.RuleBasedCollator,int)#com/ibm/icu/text/CollationElementIterator$Backup/Backup()
com/ibm/icu/text/CollationElementIterator/nextDiscontiguous(com.ibm.icu.text.RuleBasedCollator,int)#java/lang/StringBuilder/StringBuilder()
com/ibm/icu/text/CollationElementIterator/nextDiscontiguous(com.ibm.icu.text.RuleBasedCollator,int)#java/lang/StringBuilder/length()
com/ibm/icu/text/TransliteratorParser/RuleHalf/parseSection(java.lang.String,int,int,com.ibm.icu.text.TransliteratorParser,java.lang.StringBuffer,com.ibm.icu.text.UnicodeSet,boolean)#java/text/ParsePosition/setIndex(int)
com/ibm/icu/text/TransliteratorParser/RuleHalf/parseSection(java.lang.String,int,int,com.ibm.icu.text.TransliteratorParser,java.lang.StringBuffer,com.ibm.icu.text.UnicodeSet,boolean)#java/text/ParsePosition/ParsePosition(int)
com/ibm/icu/text/TransliteratorParser/RuleHalf/parseSection(java.lang.String,int,int,com.ibm.icu.text.TransliteratorParser,java.lang.StringBuffer,com.ibm.icu.text.UnicodeSet,boolean)#java/lang/StringBuffer/toString()
com/ibm/icu/text/TransliteratorParser/RuleHalf/parseSection(java.lang.String,int,int,com.ibm.icu.text.TransliteratorParser,java.lang.StringBuffer,com.ibm.icu.text.UnicodeSet,boolean)#java/lang/String/substring(int,int)
com/ibm/icu/text/TransliteratorParser/RuleHalf/parseSection(java.lang.String,int,int,com.ibm.icu.text.TransliteratorParser,java.lang.StringBuffer,com.ibm.icu.text.UnicodeSet,boolean)#java/lang/StringBuilder/append(char)
com/ibm/icu/text/TransliteratorParser/RuleHalf/parseSection(java.lang.String,int,int,com.ibm.icu.text.TransliteratorParser,java.lang.StringBuffer,com.ibm.icu.text.UnicodeSet,boolean)#java/lang/StringBuilder/append(java.lang.String)
com/ibm/icu/text/TransliteratorParser/RuleHalf/parseSection(java.lang.String,int,int,com.ibm.icu.text.TransliteratorParser,java.lang.StringBuffer,com.ibm.icu.text.UnicodeSet,boolean)#java/lang/String/charAt(int)
com/ibm/icu/text/TransliteratorParser/RuleHalf/parseSection(java.lang.String,int,int,com.ibm.icu.text.TransliteratorParser,java.lang.StringBuffer,com.ibm.icu.text.UnicodeSet,boolean)#java/lang/StringBuffer/charAt(int)
com/ibm/icu/text/TransliteratorParser/RuleHalf/parseSection(java.lang.String,int,int,com.ibm.icu.text.TransliteratorParser,java.lang.StringBuffer,com.ibm.icu.text.UnicodeSet,boolean)#java/lang/StringBuffer/append(char)
com/ibm/icu/text/TransliteratorParser/RuleHalf/parseSection(java.lang.String,int,int,com.ibm.icu.text.TransliteratorParser,java.lang.StringBuffer,com.ibm.icu.text.UnicodeSet,boolean)#com/ibm/icu/text/TransliteratorIDParser$SingleID/getInstance()
com/ibm/icu/text/TransliteratorParser/RuleHalf/parseSection(java.lang.String,int,int,com.ibm.icu.text.TransliteratorParser,java.lang.StringBuffer,com.ibm.icu.text.UnicodeSet,boolean)#java/lang/StringBuffer/length()
com/ibm/icu/text/TransliteratorParser/RuleHalf/parseSection(java.lang.String,int,int,com.ibm.icu.text.TransliteratorParser,java.lang.StringBuffer,com.ibm.icu.text.UnicodeSet,boolean)#com/ibm/icu/text/TransliteratorParser$ParseData/parseReference(java.lang.String,java.text.ParsePosition,int)
com/ibm/icu/text/TransliteratorParser/RuleHalf/parseSection(java.lang.String,int,int,com.ibm.icu.text.TransliteratorParser,java.lang.StringBuffer,com.ibm.icu.text.UnicodeSet,boolean)#com/ibm/icu/text/TransliteratorParser$RuleHalf/parseSection(java.lang.String,int,int,com.ibm.icu.text.TransliteratorParser,java.lang.StringBuffer,com.ibm.icu.text.UnicodeSet,boolean)
com/ibm/icu/text/TransliteratorParser/RuleHalf/parseSection(java.lang.String,int,int,com.ibm.icu.text.TransliteratorParser,java.lang.StringBuffer,com.ibm.icu.text.UnicodeSet,boolean)#java/lang/StringBuilder/StringBuilder()
com/ibm/icu/text/TransliteratorParser/RuleHalf/parseSection(java.lang.String,int,int,com.ibm.icu.text.TransliteratorParser,java.lang.StringBuffer,com.ibm.icu.text.UnicodeSet,boolean)#java/lang/StringBuffer/substring(int)
com/ibm/icu/text/TransliteratorParser/RuleHalf/parseSection(java.lang.String,int,int,com.ibm.icu.text.TransliteratorParser,java.lang.StringBuffer,com.ibm.icu.text.UnicodeSet,boolean)#java/lang/String/indexOf(int,int)
com/ibm/icu/text/TransliteratorParser/RuleHalf/parseSection(java.lang.String,int,int,com.ibm.icu.text.TransliteratorParser,java.lang.StringBuffer,com.ibm.icu.text.UnicodeSet,boolean)#java/lang/StringBuffer/append(java.lang.String)
com/ibm/icu/text/TransliteratorParser/RuleHalf/parseSection(java.lang.String,int,int,com.ibm.icu.text.TransliteratorParser,java.lang.StringBuffer,com.ibm.icu.text.UnicodeSet,boolean)#java/text/ParsePosition/getIndex()
com/ibm/icu/text/TransliteratorParser/RuleHalf/parseSection(java.lang.String,int,int,com.ibm.icu.text.TransliteratorParser,java.lang.StringBuffer,com.ibm.icu.text.UnicodeSet,boolean)#java/lang/String/indexOf(int)
com/ibm/icu/text/TransliteratorParser/RuleHalf/parseSection(java.lang.String,int,int,com.ibm.icu.text.TransliteratorParser,java.lang.StringBuffer,com.ibm.icu.text.UnicodeSet,boolean)#java/lang/StringBuilder/toString()
com/ibm/icu/text/TransliteratorParser/RuleHalf/parseSection(java.lang.String,int,int,com.ibm.icu.text.TransliteratorParser,java.lang.StringBuffer,com.ibm.icu.text.UnicodeSet,boolean)#java/lang/StringBuffer/setLength(int)
com/ibm/icu/impl/LocaleIDParser/setKeywordValue(java.lang.String,java.lang.String,boolean)#java/util/Collections/emptyMap()
com/ibm/icu/impl/LocaleIDParser/setKeywordValue(java.lang.String,java.lang.String,boolean)#java/lang/String/trim()
com/ibm/icu/impl/LocaleIDParser/setKeywordValue(java.lang.String,java.lang.String,boolean)#java/util/Map/containsKey(java.lang.Object)
com/ibm/icu/impl/LocaleIDParser/setKeywordValue(java.lang.String,java.lang.String,boolean)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/ibm/icu/impl/LocaleIDParser/setKeywordValue(java.lang.String,java.lang.String,boolean)#java/util/TreeMap/TreeMap(java.util.Comparator)
com/ibm/icu/impl/LocaleIDParser/setKeywordValue(java.lang.String,java.lang.String,boolean)#java/util/Map/remove(java.lang.Object)
com/ibm/icu/impl/LocaleIDParser/setKeywordValue(java.lang.String,java.lang.String,boolean)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/ibm/icu/impl/LocaleIDParser/setKeywordValue(java.lang.String,java.lang.String,boolean)#java/lang/String/length()
com/ibm/icu/impl/LocaleIDParser/setKeywordValue(java.lang.String,java.lang.String,boolean)#java/util/Map/isEmpty()
com/ibm/icu/impl/UPropertyAliases/load(java.io.InputStream)#java/io/DataInputStream/readByte()
com/ibm/icu/impl/UPropertyAliases/load(java.io.InputStream)#java/io/IOException/IOException(java.lang.String)
com/ibm/icu/impl/UPropertyAliases/load(java.io.InputStream)#java/io/DataInputStream/readInt()
com/ibm/icu/impl/UPropertyAliases/load(java.io.InputStream)#java/io/DataInputStream/DataInputStream(java.io.InputStream)
com/ibm/icu/impl/UPropertyAliases/load(java.io.InputStream)#java/lang/StringBuilder/StringBuilder(int)
com/ibm/icu/impl/UPropertyAliases/load(java.io.InputStream)#java/io/InputStream/close()
com/ibm/icu/impl/UPropertyAliases/load(java.io.InputStream)#java/io/BufferedInputStream/BufferedInputStream(java.io.InputStream)
com/ibm/icu/impl/UPropertyAliases/load(java.io.InputStream)#java/io/DataInputStream/readFully(byte[])
com/ibm/icu/impl/UPropertyAliases/load(java.io.InputStream)#java/lang/StringBuilder/toString()
com/ibm/icu/impl/UPropertyAliases/load(java.io.InputStream)#java/lang/StringBuilder/append(char)
com/ibm/icu/util/LocaleMatcher/getBestMatchInternal(com.ibm.icu.util.ULocale)#com/ibm/icu/impl/Row$R2/get1()
com/ibm/icu/util/LocaleMatcher/getBestMatchInternal(com.ibm.icu.util.ULocale)#java/util/Map/get(java.lang.Object)
com/ibm/icu/util/LocaleMatcher/getBestMatchInternal(com.ibm.icu.util.ULocale)#java/util/Set/iterator()
com/ibm/icu/util/LocaleMatcher/getBestMatchInternal(com.ibm.icu.util.ULocale)#com/ibm/icu/impl/Row$R2/of(java.lang.Object,java.lang.Object)
com/ibm/icu/util/LocaleMatcher/getBestMatchInternal(com.ibm.icu.util.ULocale)#java/util/Iterator/hasNext()
com/ibm/icu/util/LocaleMatcher/getBestMatchInternal(com.ibm.icu.util.ULocale)#com/ibm/icu/impl/Row$R2/get0()
com/ibm/icu/util/LocaleMatcher/getBestMatchInternal(com.ibm.icu.util.ULocale)#java/lang/Double/valueOf(double)
com/ibm/icu/util/LocaleMatcher/getBestMatchInternal(com.ibm.icu.util.ULocale)#java/util/Iterator/next()
com/ibm/icu/util/LocaleMatcher/getBestMatchInternal(com.ibm.icu.util.ULocale)#java/util/Map/keySet()
com/ibm/icu/util/LocaleMatcher/getBestMatchInternal(com.ibm.icu.util.ULocale)#java/lang/Double/doubleValue()
com/ibm/icu/impl/TimeZoneNamesImpl/MZ2TZsCache/createInstance(java.lang.String,java.lang.String)#java/util/Collections/emptyMap()
com/ibm/icu/impl/TimeZoneNamesImpl/MZ2TZsCache/createInstance(java.lang.String,java.lang.String)#java/util/Iterator/hasNext()
com/ibm/icu/impl/TimeZoneNamesImpl/MZ2TZsCache/createInstance(java.lang.String,java.lang.String)#java/util/Set/size()
com/ibm/icu/impl/TimeZoneNamesImpl/MZ2TZsCache/createInstance(java.lang.String,java.lang.String)#java/util/Iterator/next()
com/ibm/icu/impl/TimeZoneNamesImpl/MZ2TZsCache/createInstance(java.lang.String,java.lang.String)#java/lang/String/intern()
com/ibm/icu/impl/TimeZoneNamesImpl/MZ2TZsCache/createInstance(java.lang.String,java.lang.String)#com/ibm/icu/util/UResourceBundle/getString(java.lang.String)
com/ibm/icu/impl/TimeZoneNamesImpl/MZ2TZsCache/createInstance(java.lang.String,java.lang.String)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/ibm/icu/impl/TimeZoneNamesImpl/MZ2TZsCache/createInstance(java.lang.String,java.lang.String)#java/util/HashMap/HashMap(int)
com/ibm/icu/impl/TimeZoneNamesImpl/MZ2TZsCache/createInstance(java.lang.String,java.lang.String)#java/util/Set/iterator()
com/ibm/icu/util/GlobalizationPreferences/getDisplayName(java.lang.String,int)#java/util/Iterator/hasNext()
com/ibm/icu/util/GlobalizationPreferences/getDisplayName(java.lang.String,int)#java/lang/StringBuilder/append(int)
com/ibm/icu/util/GlobalizationPreferences/getDisplayName(java.lang.String,int)#java/lang/String/length()
com/ibm/icu/util/GlobalizationPreferences/getDisplayName(java.lang.String,int)#java/util/Iterator/next()
com/ibm/icu/util/GlobalizationPreferences/getDisplayName(java.lang.String,int)#java/lang/String/substring(int,int)
com/ibm/icu/util/GlobalizationPreferences/getDisplayName(java.lang.String,int)#java/lang/StringBuilder/StringBuilder()
com/ibm/icu/util/GlobalizationPreferences/getDisplayName(java.lang.String,int)#com/ibm/icu/text/SimpleDateFormat/format(java.util.Date)
com/ibm/icu/util/GlobalizationPreferences/getDisplayName(java.lang.String,int)#com/ibm/icu/text/SimpleDateFormat/setTimeZone(com.ibm.icu.util.TimeZone)
com/ibm/icu/util/GlobalizationPreferences/getDisplayName(java.lang.String,int)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/ibm/icu/util/GlobalizationPreferences/getDisplayName(java.lang.String,int)#java/lang/String/indexOf(int)
com/ibm/icu/util/GlobalizationPreferences/getDisplayName(java.lang.String,int)#java/lang/StringBuilder/append(java.lang.String)
com/ibm/icu/util/GlobalizationPreferences/getDisplayName(java.lang.String,int)#java/lang/String/charAt(int)
com/ibm/icu/util/GlobalizationPreferences/getDisplayName(java.lang.String,int)#java/lang/String/equals(java.lang.Object)
com/ibm/icu/util/GlobalizationPreferences/getDisplayName(java.lang.String,int)#java/util/Date/Date()
com/ibm/icu/util/GlobalizationPreferences/getDisplayName(java.lang.String,int)#java/util/List/iterator()
com/ibm/icu/util/GlobalizationPreferences/getDisplayName(java.lang.String,int)#java/lang/StringBuilder/toString()
com/ibm/icu/text/MessageFormat/AppendableWrapper/formatAndAppend(java.text.Format,java.lang.Object)#java/text/Format/format(java.lang.Object)
com/ibm/icu/text/MessageFormat/AppendableWrapper/formatAndAppend(java.text.Format,java.lang.Object)#java/util/Map$Entry/getKey()
com/ibm/icu/text/MessageFormat/AppendableWrapper/formatAndAppend(java.text.Format,java.lang.Object)#java/text/Format/formatToCharacterIterator(java.lang.Object)
com/ibm/icu/text/MessageFormat/AppendableWrapper/formatAndAppend(java.text.Format,java.lang.Object)#java/text/AttributedCharacterIterator/getIndex()
com/ibm/icu/text/MessageFormat/AppendableWrapper/formatAndAppend(java.text.Format,java.lang.Object)#java/text/AttributedCharacterIterator/getRunLimit()
com/ibm/icu/text/MessageFormat/AppendableWrapper/formatAndAppend(java.text.Format,java.lang.Object)#java/util/Map/size()
com/ibm/icu/text/MessageFormat/AppendableWrapper/formatAndAppend(java.text.Format,java.lang.Object)#java/util/Iterator/next()
com/ibm/icu/text/MessageFormat/AppendableWrapper/formatAndAppend(java.text.Format,java.lang.Object)#com/ibm/icu/text/MessageFormat$AttributeAndPosition/AttributeAndPosition(java.text.AttributedCharacterIterator$Attribute,java.lang.Object,int,int)
com/ibm/icu/text/MessageFormat/AppendableWrapper/formatAndAppend(java.text.Format,java.lang.Object)#com/ibm/icu/text/MessageFormat$AppendableWrapper/append(java.text.CharacterIterator)
com/ibm/icu/text/MessageFormat/AppendableWrapper/formatAndAppend(java.text.Format,java.lang.Object)#java/util/Set/iterator()
com/ibm/icu/text/MessageFormat/AppendableWrapper/formatAndAppend(java.text.Format,java.lang.Object)#java/text/AttributedCharacterIterator/setIndex(int)
com/ibm/icu/text/MessageFormat/AppendableWrapper/formatAndAppend(java.text.Format,java.lang.Object)#java/util/Map$Entry/getValue()
com/ibm/icu/text/MessageFormat/AppendableWrapper/formatAndAppend(java.text.Format,java.lang.Object)#java/util/Map/entrySet()
com/ibm/icu/text/MessageFormat/AppendableWrapper/formatAndAppend(java.text.Format,java.lang.Object)#java/util/Iterator/hasNext()
com/ibm/icu/text/MessageFormat/AppendableWrapper/formatAndAppend(java.text.Format,java.lang.Object)#com/ibm/icu/text/MessageFormat$AppendableWrapper/append(java.lang.CharSequence)
com/ibm/icu/text/MessageFormat/AppendableWrapper/formatAndAppend(java.text.Format,java.lang.Object)#java/text/AttributedCharacterIterator/getEndIndex()
com/ibm/icu/text/MessageFormat/AppendableWrapper/formatAndAppend(java.text.Format,java.lang.Object)#java/text/AttributedCharacterIterator/getAttributes()
com/ibm/icu/text/MessageFormat/AppendableWrapper/formatAndAppend(java.text.Format,java.lang.Object)#java/util/List/add(java.lang.Object)
com/ibm/icu/text/MessageFormat/AppendableWrapper/formatAndAppend(java.text.Format,java.lang.Object)#java/text/AttributedCharacterIterator/first()
com/ibm/icu/text/SpoofChecker/Builder/WSConfusableDataBuilder/buildWSConfusableData(com.ibm.icu.text.SpoofChecker$SpoofData,java.io.DataOutputStream,java.io.Reader)#java/util/regex/Pattern/compile(java.lang.String)
com/ibm/icu/text/SpoofChecker/Builder/WSConfusableDataBuilder/buildWSConfusableData(com.ibm.icu.text.SpoofChecker$SpoofData,java.io.DataOutputStream,java.io.Reader)#java/lang/StringBuilder/append(int)
com/ibm/icu/text/SpoofChecker/Builder/WSConfusableDataBuilder/buildWSConfusableData(com.ibm.icu.text.SpoofChecker$SpoofData,java.io.DataOutputStream,java.io.Reader)#java/lang/Integer/parseInt(java.lang.String,int)
com/ibm/icu/text/SpoofChecker/Builder/WSConfusableDataBuilder/buildWSConfusableData(com.ibm.icu.text.SpoofChecker$SpoofData,java.io.DataOutputStream,java.io.Reader)#java/lang/StringBuilder/StringBuilder()
com/ibm/icu/text/SpoofChecker/Builder/WSConfusableDataBuilder/buildWSConfusableData(com.ibm.icu.text.SpoofChecker$SpoofData,java.io.DataOutputStream,java.io.Reader)#java/util/regex/Matcher/group()
com/ibm/icu/text/SpoofChecker/Builder/WSConfusableDataBuilder/buildWSConfusableData(com.ibm.icu.text.SpoofChecker$SpoofData,java.io.DataOutputStream,java.io.Reader)#com/ibm/icu/text/SpoofChecker$ScriptSet/Union(int)
com/ibm/icu/text/SpoofChecker/Builder/WSConfusableDataBuilder/buildWSConfusableData(com.ibm.icu.text.SpoofChecker$SpoofData,java.io.DataOutputStream,java.io.Reader)#java/util/regex/Matcher/find()
com/ibm/icu/text/SpoofChecker/Builder/WSConfusableDataBuilder/buildWSConfusableData(com.ibm.icu.text.SpoofChecker$SpoofData,java.io.DataOutputStream,java.io.Reader)#java/util/regex/Matcher/start()
com/ibm/icu/text/SpoofChecker/Builder/WSConfusableDataBuilder/buildWSConfusableData(com.ibm.icu.text.SpoofChecker$SpoofData,java.io.DataOutputStream,java.io.Reader)#java/util/Vector/elementAt(int)
com/ibm/icu/text/SpoofChecker/Builder/WSConfusableDataBuilder/buildWSConfusableData(com.ibm.icu.text.SpoofChecker$SpoofData,java.io.DataOutputStream,java.io.Reader)#java/util/regex/Matcher/group(int)
com/ibm/icu/text/SpoofChecker/Builder/WSConfusableDataBuilder/buildWSConfusableData(com.ibm.icu.text.SpoofChecker$SpoofData,java.io.DataOutputStream,java.io.Reader)#com/ibm/icu/text/SpoofChecker$Builder$WSConfusableDataBuilder/readWholeFileToString(java.io.Reader,java.lang.StringBuffer)
com/ibm/icu/text/SpoofChecker/Builder/WSConfusableDataBuilder/buildWSConfusableData(com.ibm.icu.text.SpoofChecker$SpoofData,java.io.DataOutputStream,java.io.Reader)#java/lang/StringBuffer/setCharAt(int,char)
com/ibm/icu/text/SpoofChecker/Builder/WSConfusableDataBuilder/buildWSConfusableData(com.ibm.icu.text.SpoofChecker$SpoofData,java.io.DataOutputStream,java.io.Reader)#java/lang/StringBuilder/append(java.lang.String)
com/ibm/icu/text/SpoofChecker/Builder/WSConfusableDataBuilder/buildWSConfusableData(com.ibm.icu.text.SpoofChecker$SpoofData,java.io.DataOutputStream,java.io.Reader)#java/lang/StringBuffer/charAt(int)
com/ibm/icu/text/SpoofChecker/Builder/WSConfusableDataBuilder/buildWSConfusableData(com.ibm.icu.text.SpoofChecker$SpoofData,java.io.DataOutputStream,java.io.Reader)#java/util/Vector/size()
com/ibm/icu/text/SpoofChecker/Builder/WSConfusableDataBuilder/buildWSConfusableData(com.ibm.icu.text.SpoofChecker$SpoofData,java.io.DataOutputStream,java.io.Reader)#java/lang/Integer/toString(int,int)
com/ibm/icu/text/SpoofChecker/Builder/WSConfusableDataBuilder/buildWSConfusableData(com.ibm.icu.text.SpoofChecker$SpoofData,java.io.DataOutputStream,java.io.Reader)#com/ibm/icu/text/SpoofChecker$Builder$WSConfusableDataBuilder$BuilderScriptSet/BuilderScriptSet()
com/ibm/icu/text/SpoofChecker/Builder/WSConfusableDataBuilder/buildWSConfusableData(com.ibm.icu.text.SpoofChecker$SpoofData,java.io.DataOutputStream,java.io.Reader)#com/ibm/icu/text/SpoofChecker$ScriptSet/ScriptSet()
com/ibm/icu/text/SpoofChecker/Builder/WSConfusableDataBuilder/buildWSConfusableData(com.ibm.icu.text.SpoofChecker$SpoofData,java.io.DataOutputStream,java.io.Reader)#java/util/Vector/addElement(java.lang.Object)
com/ibm/icu/text/SpoofChecker/Builder/WSConfusableDataBuilder/buildWSConfusableData(com.ibm.icu.text.SpoofChecker$SpoofData,java.io.DataOutputStream,java.io.Reader)#java/util/Vector/Vector()
com/ibm/icu/text/SpoofChecker/Builder/WSConfusableDataBuilder/buildWSConfusableData(com.ibm.icu.text.SpoofChecker$SpoofData,java.io.DataOutputStream,java.io.Reader)#java/text/ParseException/ParseException(java.lang.String,int)
com/ibm/icu/text/SpoofChecker/Builder/WSConfusableDataBuilder/buildWSConfusableData(com.ibm.icu.text.SpoofChecker$SpoofData,java.io.DataOutputStream,java.io.Reader)#com/ibm/icu/text/SpoofChecker$ScriptSet/equals(com.ibm.icu.text.SpoofChecker$ScriptSet)
com/ibm/icu/text/SpoofChecker/Builder/WSConfusableDataBuilder/buildWSConfusableData(com.ibm.icu.text.SpoofChecker$SpoofData,java.io.DataOutputStream,java.io.Reader)#java/util/regex/Pattern/matcher(java.lang.CharSequence)
com/ibm/icu/text/SpoofChecker/Builder/WSConfusableDataBuilder/buildWSConfusableData(com.ibm.icu.text.SpoofChecker$SpoofData,java.io.DataOutputStream,java.io.Reader)#java/lang/AssertionError/AssertionError()
com/ibm/icu/text/SpoofChecker/Builder/WSConfusableDataBuilder/buildWSConfusableData(com.ibm.icu.text.SpoofChecker$SpoofData,java.io.DataOutputStream,java.io.Reader)#java/util/regex/Matcher/start(int)
com/ibm/icu/text/SpoofChecker/Builder/WSConfusableDataBuilder/buildWSConfusableData(com.ibm.icu.text.SpoofChecker$SpoofData,java.io.DataOutputStream,java.io.Reader)#java/lang/StringBuffer/StringBuffer()
com/ibm/icu/text/SpoofChecker/Builder/WSConfusableDataBuilder/buildWSConfusableData(com.ibm.icu.text.SpoofChecker$SpoofData,java.io.DataOutputStream,java.io.Reader)#java/lang/StringBuilder/toString()
com/ibm/icu/text/SpoofChecker/Builder/WSConfusableDataBuilder/buildWSConfusableData(com.ibm.icu.text.SpoofChecker$SpoofData,java.io.DataOutputStream,java.io.Reader)#com/ibm/icu/text/SpoofChecker$ScriptSet/output(java.io.DataOutputStream)
com/ibm/icu/text/NFRuleSet/parseRules(java.lang.String,com.ibm.icu.text.RuleBasedNumberFormat)#java/util/ArrayList/ArrayList()
com/ibm/icu/text/NFRuleSet/parseRules(java.lang.String,com.ibm.icu.text.RuleBasedNumberFormat)#java/util/List/remove(int)
com/ibm/icu/text/NFRuleSet/parseRules(java.lang.String,com.ibm.icu.text.RuleBasedNumberFormat)#java/lang/StringBuilder/append(java.lang.String)
com/ibm/icu/text/NFRuleSet/parseRules(java.lang.String,com.ibm.icu.text.RuleBasedNumberFormat)#java/lang/String/length()
com/ibm/icu/text/NFRuleSet/parseRules(java.lang.String,com.ibm.icu.text.RuleBasedNumberFormat)#java/util/List/size()
com/ibm/icu/text/NFRuleSet/parseRules(java.lang.String,com.ibm.icu.text.RuleBasedNumberFormat)#java/lang/StringBuilder/append(long)
com/ibm/icu/text/NFRuleSet/parseRules(java.lang.String,com.ibm.icu.text.RuleBasedNumberFormat)#java/lang/String/substring(int,int)
com/ibm/icu/text/NFRuleSet/parseRules(java.lang.String,com.ibm.icu.text.RuleBasedNumberFormat)#java/lang/StringBuilder/StringBuilder()
com/ibm/icu/text/NFRuleSet/parseRules(java.lang.String,com.ibm.icu.text.RuleBasedNumberFormat)#java/lang/String/substring(int)
com/ibm/icu/text/NFRuleSet/parseRules(java.lang.String,com.ibm.icu.text.RuleBasedNumberFormat)#java/util/List/add(java.lang.Object)
com/ibm/icu/text/NFRuleSet/parseRules(java.lang.String,com.ibm.icu.text.RuleBasedNumberFormat)#java/util/List/get(int)
com/ibm/icu/text/NFRuleSet/parseRules(java.lang.String,com.ibm.icu.text.RuleBasedNumberFormat)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/ibm/icu/text/NFRuleSet/parseRules(java.lang.String,com.ibm.icu.text.RuleBasedNumberFormat)#java/lang/String/indexOf(int,int)
com/ibm/icu/text/NFRuleSet/parseRules(java.lang.String,com.ibm.icu.text.RuleBasedNumberFormat)#java/lang/String/indexOf(int)
com/ibm/icu/text/NFRuleSet/parseRules(java.lang.String,com.ibm.icu.text.RuleBasedNumberFormat)#java/lang/StringBuilder/toString()
com/ibm/icu/text/NFRuleSet/parseRules(java.lang.String,com.ibm.icu.text.RuleBasedNumberFormat)#java/util/List/toArray(java.lang.Object[])
com/ibm/icu/util/ULocale/JDKLocaleHelper/toULocale7(java.util.Locale)#java/util/Locale/getVariant()
com/ibm/icu/util/ULocale/JDKLocaleHelper/toULocale7(java.util.Locale)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/ibm/icu/util/ULocale/JDKLocaleHelper/toULocale7(java.util.Locale)#java/lang/String/valueOf(java.lang.Object)
com/ibm/icu/util/ULocale/JDKLocaleHelper/toULocale7(java.util.Locale)#java/lang/RuntimeException/RuntimeException(java.lang.Throwable)
com/ibm/icu/util/ULocale/JDKLocaleHelper/toULocale7(java.util.Locale)#java/lang/String/length()
com/ibm/icu/util/ULocale/JDKLocaleHelper/toULocale7(java.util.Locale)#java/lang/StringBuilder/StringBuilder(java.lang.String)
com/ibm/icu/util/ULocale/JDKLocaleHelper/toULocale7(java.util.Locale)#java/util/Locale/getCountry()
com/ibm/icu/util/ULocale/JDKLocaleHelper/toULocale7(java.util.Locale)#java/util/Locale/getLanguage()
com/ibm/icu/util/ULocale/JDKLocaleHelper/toULocale7(java.util.Locale)#java/lang/StringBuilder/StringBuilder()
com/ibm/icu/util/ULocale/JDKLocaleHelper/toULocale7(java.util.Locale)#java/util/Set/iterator()
com/ibm/icu/util/ULocale/JDKLocaleHelper/toULocale7(java.util.Locale)#java/lang/StringBuilder/append(char)
com/ibm/icu/util/ULocale/JDKLocaleHelper/toULocale7(java.util.Locale)#java/util/Map$Entry/getValue()
com/ibm/icu/util/ULocale/JDKLocaleHelper/toULocale7(java.util.Locale)#java/lang/StringBuilder/toString()
com/ibm/icu/util/ULocale/JDKLocaleHelper/toULocale7(java.util.Locale)#java/util/Iterator/hasNext()
com/ibm/icu/util/ULocale/JDKLocaleHelper/toULocale7(java.util.Locale)#java/lang/StringBuilder/append(java.lang.String)
com/ibm/icu/util/ULocale/JDKLocaleHelper/toULocale7(java.util.Locale)#java/util/Map$Entry/getKey()
com/ibm/icu/util/ULocale/JDKLocaleHelper/toULocale7(java.util.Locale)#java/util/TreeMap/TreeMap()
com/ibm/icu/util/ULocale/JDKLocaleHelper/toULocale7(java.util.Locale)#java/util/Iterator/next()
com/ibm/icu/util/ULocale/JDKLocaleHelper/toULocale7(java.util.Locale)#java/lang/String/equals(java.lang.Object)
com/ibm/icu/util/ULocale/JDKLocaleHelper/toULocale7(java.util.Locale)#java/util/Set/isEmpty()
com/ibm/icu/util/ULocale/JDKLocaleHelper/toULocale7(java.util.Locale)#java/lang/StringBuilder/length()
com/ibm/icu/util/ULocale/JDKLocaleHelper/toULocale7(java.util.Locale)#java/util/TreeSet/TreeSet()
com/ibm/icu/util/ULocale/JDKLocaleHelper/toULocale7(java.util.Locale)#java/lang/reflect/Method/invoke(java.lang.Object,java.lang.Object[])
com/ibm/icu/util/ULocale/JDKLocaleHelper/toULocale7(java.util.Locale)#java/util/Map/entrySet()
com/ibm/icu/util/ULocale/JDKLocaleHelper/toULocale7(java.util.Locale)#java/lang/Character/charValue()
com/ibm/icu/util/ULocale/JDKLocaleHelper/toULocale7(java.util.Locale)#java/util/Set/add(java.lang.Object)
com/ibm/icu/text/Collator/getKeywordValuesForLocale(java.lang.String,com.ibm.icu.util.ULocale,boolean)#java/util/LinkedList/contains(java.lang.Object)
com/ibm/icu/text/Collator/getKeywordValuesForLocale(java.lang.String,com.ibm.icu.util.ULocale,boolean)#java/util/Iterator/hasNext()
com/ibm/icu/text/Collator/getKeywordValuesForLocale(java.lang.String,com.ibm.icu.util.ULocale,boolean)#java/util/LinkedList/size()
com/ibm/icu/text/Collator/getKeywordValuesForLocale(java.lang.String,com.ibm.icu.util.ULocale,boolean)#java/util/Enumeration/hasMoreElements()
com/ibm/icu/text/Collator/getKeywordValuesForLocale(java.lang.String,com.ibm.icu.util.ULocale,boolean)#java/util/Enumeration/nextElement()
com/ibm/icu/text/Collator/getKeywordValuesForLocale(java.lang.String,com.ibm.icu.util.ULocale,boolean)#java/util/LinkedList/iterator()
com/ibm/icu/text/Collator/getKeywordValuesForLocale(java.lang.String,com.ibm.icu.util.ULocale,boolean)#com/ibm/icu/util/UResourceBundle/getString(java.lang.String)
com/ibm/icu/text/Collator/getKeywordValuesForLocale(java.lang.String,com.ibm.icu.util.ULocale,boolean)#java/util/Iterator/next()
com/ibm/icu/text/Collator/getKeywordValuesForLocale(java.lang.String,com.ibm.icu.util.ULocale,boolean)#java/util/LinkedList/add(java.lang.Object)
com/ibm/icu/text/Collator/getKeywordValuesForLocale(java.lang.String,com.ibm.icu.util.ULocale,boolean)#java/lang/String/equals(java.lang.Object)
com/ibm/icu/text/Collator/getKeywordValuesForLocale(java.lang.String,com.ibm.icu.util.ULocale,boolean)#java/util/LinkedList/LinkedList()
com/ibm/icu/util/BytesTrie/Iterator/next()#java/util/ArrayList/remove(int)
com/ibm/icu/util/BytesTrie/Iterator/next()#java/util/ArrayList/isEmpty()
com/ibm/icu/util/BytesTrie/Iterator/next()#com/ibm/icu/util/BytesTrie$Entry/access$1000(com.ibm.icu.util.BytesTrie$Entry)
com/ibm/icu/util/BytesTrie/Iterator/next()#com/ibm/icu/util/BytesTrie$Entry/access$600(com.ibm.icu.util.BytesTrie$Entry,byte[],int,int)
com/ibm/icu/util/BytesTrie/Iterator/next()#java/lang/Long/longValue()
com/ibm/icu/util/BytesTrie/Iterator/next()#java/util/NoSuchElementException/NoSuchElementException()
com/ibm/icu/util/BytesTrie/Iterator/next()#com/ibm/icu/util/BytesTrie$Entry/access$700(com.ibm.icu.util.BytesTrie$Entry,int)
com/ibm/icu/util/BytesTrie/Iterator/next()#com/ibm/icu/util/BytesTrie$Iterator/truncateAndStop()
com/ibm/icu/util/BytesTrie/Iterator/next()#com/ibm/icu/util/BytesTrie$Entry/access$800(com.ibm.icu.util.BytesTrie$Entry,byte)
com/ibm/icu/util/BytesTrie/Iterator/next()#java/util/ArrayList/size()
com/ibm/icu/util/BytesTrie/Iterator/next()#com/ibm/icu/util/BytesTrie$Iterator/branchNext(int,int)
com/ibm/icu/util/BytesTrie/Iterator/next()#com/ibm/icu/util/BytesTrie$Iterator/next()
com/ibm/icu/text/CurrencyPluralInfo/setupCurrencyPluralPattern(com.ibm.icu.util.ULocale)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/ibm/icu/text/CurrencyPluralInfo/setupCurrencyPluralPattern(com.ibm.icu.util.ULocale)#java/util/Iterator/hasNext()
com/ibm/icu/text/CurrencyPluralInfo/setupCurrencyPluralPattern(com.ibm.icu.util.ULocale)#java/lang/StringBuilder/StringBuilder(java.lang.String)
com/ibm/icu/text/CurrencyPluralInfo/setupCurrencyPluralPattern(com.ibm.icu.util.ULocale)#com/ibm/icu/impl/CurrencyData$CurrencyDisplayInfo/getUnitPatterns()
com/ibm/icu/text/CurrencyPluralInfo/setupCurrencyPluralPattern(com.ibm.icu.util.ULocale)#java/lang/String/substring(int,int)
com/ibm/icu/text/CurrencyPluralInfo/setupCurrencyPluralPattern(com.ibm.icu.util.ULocale)#java/lang/String/indexOf(java.lang.String)
com/ibm/icu/text/CurrencyPluralInfo/setupCurrencyPluralPattern(com.ibm.icu.util.ULocale)#java/util/Set/iterator()
com/ibm/icu/text/CurrencyPluralInfo/setupCurrencyPluralPattern(com.ibm.icu.util.ULocale)#com/ibm/icu/impl/CurrencyData$CurrencyDisplayInfoProvider/getInstance(com.ibm.icu.util.ULocale,boolean)
com/ibm/icu/text/CurrencyPluralInfo/setupCurrencyPluralPattern(com.ibm.icu.util.ULocale)#java/util/Map$Entry/getValue()
com/ibm/icu/text/CurrencyPluralInfo/setupCurrencyPluralPattern(com.ibm.icu.util.ULocale)#java/util/Map/entrySet()
com/ibm/icu/text/CurrencyPluralInfo/setupCurrencyPluralPattern(com.ibm.icu.util.ULocale)#java/lang/StringBuilder/toString()
com/ibm/icu/text/CurrencyPluralInfo/setupCurrencyPluralPattern(com.ibm.icu.util.ULocale)#java/lang/StringBuilder/append(java.lang.String)
com/ibm/icu/text/CurrencyPluralInfo/setupCurrencyPluralPattern(com.ibm.icu.util.ULocale)#java/util/Map$Entry/getKey()
com/ibm/icu/text/CurrencyPluralInfo/setupCurrencyPluralPattern(com.ibm.icu.util.ULocale)#java/util/Iterator/next()
com/ibm/icu/text/CurrencyPluralInfo/setupCurrencyPluralPattern(com.ibm.icu.util.ULocale)#java/util/HashMap/HashMap()
com/ibm/icu/text/CurrencyPluralInfo/setupCurrencyPluralPattern(com.ibm.icu.util.ULocale)#java/lang/String/substring(int)
com/ibm/icu/text/CurrencyPluralInfo/setupCurrencyPluralPattern(com.ibm.icu.util.ULocale)#java/lang/String/replace(java.lang.CharSequence,java.lang.CharSequence)
com/ibm/icu/text/CurrencyPluralInfo/clone()#java/util/Map/put(java.lang.Object,java.lang.Object)
com/ibm/icu/text/CurrencyPluralInfo/clone()#java/util/Iterator/hasNext()
com/ibm/icu/text/CurrencyPluralInfo/clone()#java/lang/IllegalStateException/IllegalStateException()
com/ibm/icu/text/CurrencyPluralInfo/clone()#java/util/Map/get(java.lang.Object)
com/ibm/icu/text/CurrencyPluralInfo/clone()#java/util/Set/iterator()
com/ibm/icu/text/CurrencyPluralInfo/clone()#java/lang/Object/clone()
com/ibm/icu/text/CurrencyPluralInfo/clone()#java/util/Iterator/next()
com/ibm/icu/text/CurrencyPluralInfo/clone()#java/util/HashMap/HashMap()
com/ibm/icu/text/CurrencyPluralInfo/clone()#java/util/Map/keySet()
com/ibm/icu/text/CurrencyMetaInfo/debugString(java.lang.Object)#java/lang/Class/getFields()
com/ibm/icu/text/CurrencyMetaInfo/debugString(java.lang.Object)#java/lang/reflect/Field/getName()
com/ibm/icu/text/CurrencyMetaInfo/debugString(java.lang.Object)#java/lang/String/valueOf(java.lang.Object)
com/ibm/icu/text/CurrencyMetaInfo/debugString(java.lang.Object)#java/lang/StringBuilder/append(java.lang.String)
com/ibm/icu/text/CurrencyMetaInfo/debugString(java.lang.Object)#java/lang/StringBuilder/insert(int,java.lang.String)
com/ibm/icu/text/CurrencyMetaInfo/debugString(java.lang.Object)#java/lang/Long/longValue()
com/ibm/icu/text/CurrencyMetaInfo/debugString(java.lang.Object)#java/lang/StringBuilder/StringBuilder()
com/ibm/icu/text/CurrencyMetaInfo/debugString(java.lang.Object)#java/lang/StringBuilder/length()
com/ibm/icu/text/CurrencyMetaInfo/debugString(java.lang.Object)#java/lang/Object/getClass()
com/ibm/icu/text/CurrencyMetaInfo/debugString(java.lang.Object)#java/util/Date/getTime()
com/ibm/icu/text/CurrencyMetaInfo/debugString(java.lang.Object)#java/lang/StringBuilder/toString()
com/ibm/icu/text/CurrencyMetaInfo/debugString(java.lang.Object)#java/lang/Class/getSimpleName()
com/ibm/icu/text/CurrencyMetaInfo/debugString(java.lang.Object)#java/lang/reflect/Field/get(java.lang.Object)
com/ibm/icu/text/RBBITableBuilder/buildStateTable()#java/util/Iterator/hasNext()
com/ibm/icu/text/RBBITableBuilder/buildStateTable()#java/util/Set/size()
com/ibm/icu/text/RBBITableBuilder/buildStateTable()#java/util/Set/addAll(java.util.Collection)
com/ibm/icu/text/RBBITableBuilder/buildStateTable()#java/util/List/size()
com/ibm/icu/text/RBBITableBuilder/buildStateTable()#java/util/Iterator/next()
com/ibm/icu/text/RBBITableBuilder/buildStateTable()#java/util/Set/equals(java.lang.Object)
com/ibm/icu/text/RBBITableBuilder/buildStateTable()#java/util/Set/iterator()
com/ibm/icu/text/RBBITableBuilder/buildStateTable()#java/util/List/add(java.lang.Object)
com/ibm/icu/text/RBBITableBuilder/buildStateTable()#java/util/List/get(int)
com/ibm/icu/text/RBBITableBuilder/buildStateTable()#com/ibm/icu/text/RBBITableBuilder$RBBIStateDescriptor/RBBIStateDescriptor(int)
com/ibm/icu/text/RBBITableBuilder/buildStateTable()#java/util/HashSet/HashSet()
com/ibm/icu/text/RBBITableBuilder/mergeRuleStatusVals()#java/util/SortedSet/add(java.lang.Object)
com/ibm/icu/text/RBBITableBuilder/mergeRuleStatusVals()#java/lang/Integer/intValue()
com/ibm/icu/text/RBBITableBuilder/mergeRuleStatusVals()#java/util/Map/put(java.lang.Object,java.lang.Object)
com/ibm/icu/text/RBBITableBuilder/mergeRuleStatusVals()#java/util/Set/size()
com/ibm/icu/text/RBBITableBuilder/mergeRuleStatusVals()#java/util/Map/get(java.lang.Object)
com/ibm/icu/text/RBBITableBuilder/mergeRuleStatusVals()#java/util/List/size()
com/ibm/icu/text/RBBITableBuilder/mergeRuleStatusVals()#java/util/List/addAll(java.util.Collection)
com/ibm/icu/text/RBBITableBuilder/mergeRuleStatusVals()#java/util/List/add(java.lang.Object)
com/ibm/icu/text/RBBITableBuilder/mergeRuleStatusVals()#java/util/TreeSet/TreeSet()
com/ibm/icu/text/RBBITableBuilder/mergeRuleStatusVals()#java/lang/Integer/valueOf(int)
com/ibm/icu/text/RBBITableBuilder/mergeRuleStatusVals()#java/util/List/get(int)
com/ibm/icu/text/MessagePatternUtil/MessageNode/addContentsNode(com.ibm.icu.text.MessagePatternUtil$MessageContentsNode)#java/lang/StringBuilder/append(java.lang.String)
com/ibm/icu/text/MessagePatternUtil/MessageNode/addContentsNode(com.ibm.icu.text.MessagePatternUtil$MessageContentsNode)#java/util/List/isEmpty()
com/ibm/icu/text/MessagePatternUtil/MessageNode/addContentsNode(com.ibm.icu.text.MessagePatternUtil$MessageContentsNode)#java/util/List/size()
com/ibm/icu/text/MessagePatternUtil/MessageNode/addContentsNode(com.ibm.icu.text.MessagePatternUtil$MessageContentsNode)#java/lang/StringBuilder/StringBuilder()
com/ibm/icu/text/MessagePatternUtil/MessageNode/addContentsNode(com.ibm.icu.text.MessagePatternUtil$MessageContentsNode)#java/util/List/add(java.lang.Object)
com/ibm/icu/text/MessagePatternUtil/MessageNode/addContentsNode(com.ibm.icu.text.MessagePatternUtil$MessageContentsNode)#com/ibm/icu/text/MessagePatternUtil$TextNode/access$102(com.ibm.icu.text.MessagePatternUtil$TextNode,java.lang.String)
com/ibm/icu/text/MessagePatternUtil/MessageNode/addContentsNode(com.ibm.icu.text.MessagePatternUtil$MessageContentsNode)#java/lang/StringBuilder/toString()
com/ibm/icu/text/MessagePatternUtil/MessageNode/addContentsNode(com.ibm.icu.text.MessagePatternUtil$MessageContentsNode)#com/ibm/icu/text/MessagePatternUtil$TextNode/access$100(com.ibm.icu.text.MessagePatternUtil$TextNode)
com/ibm/icu/text/MessagePatternUtil/MessageNode/addContentsNode(com.ibm.icu.text.MessagePatternUtil$MessageContentsNode)#java/util/List/get(int)
com/ibm/icu/impl/ICUDebug/value(java.lang.String)#java/lang/String/length()
com/ibm/icu/impl/ICUDebug/value(java.lang.String)#java/lang/String/indexOf(java.lang.String,int)
com/ibm/icu/impl/ICUDebug/value(java.lang.String)#java/lang/String/substring(int,int)
com/ibm/icu/impl/ICUDebug/value(java.lang.String)#java/lang/StringBuilder/toString()
com/ibm/icu/impl/ICUDebug/value(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/ibm/icu/impl/ICUDebug/value(java.lang.String)#java/lang/String/charAt(int)
com/ibm/icu/impl/ICUDebug/value(java.lang.String)#java/io/PrintStream/println(java.lang.String)
com/ibm/icu/impl/ICUDebug/value(java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/ibm/icu/impl/ICUDebug/value(java.lang.String)#java/lang/String/indexOf(java.lang.String)
com/ibm/icu/text/CollatorReader/readImp(com.ibm.icu.text.RuleBasedCollator,com.ibm.icu.text.RuleBasedCollator$UCAConstants,com.ibm.icu.text.RuleBasedCollator$LeadByteConstants,com.ibm.icu.util.Output)#java/io/DataInputStream/readByte()
com/ibm/icu/text/CollatorReader/readImp(com.ibm.icu.text.RuleBasedCollator,com.ibm.icu.text.RuleBasedCollator$UCAConstants,com.ibm.icu.text.RuleBasedCollator$LeadByteConstants,com.ibm.icu.util.Output)#java/io/IOException/IOException(java.lang.String)
com/ibm/icu/text/CollatorReader/readImp(com.ibm.icu.text.RuleBasedCollator,com.ibm.icu.text.RuleBasedCollator$UCAConstants,com.ibm.icu.text.RuleBasedCollator$LeadByteConstants,com.ibm.icu.util.Output)#com/ibm/icu/impl/IntTrie/getSerializedDataSize()
com/ibm/icu/text/CollatorReader/readImp(com.ibm.icu.text.RuleBasedCollator,com.ibm.icu.text.RuleBasedCollator$UCAConstants,com.ibm.icu.text.RuleBasedCollator$LeadByteConstants,com.ibm.icu.util.Output)#java/io/DataInputStream/skip(long)
com/ibm/icu/text/CollatorReader/readImp(com.ibm.icu.text.RuleBasedCollator,com.ibm.icu.text.RuleBasedCollator$UCAConstants,com.ibm.icu.text.RuleBasedCollator$LeadByteConstants,com.ibm.icu.util.Output)#java/io/DataInputStream/readInt()
com/ibm/icu/text/CollatorReader/readImp(com.ibm.icu.text.RuleBasedCollator,com.ibm.icu.text.RuleBasedCollator$UCAConstants,com.ibm.icu.text.RuleBasedCollator$LeadByteConstants,com.ibm.icu.util.Output)#com/ibm/icu/text/RuleBasedCollator$LeadByteConstants/getSerializedDataSize()
com/ibm/icu/text/CollatorReader/readImp(com.ibm.icu.text.RuleBasedCollator,com.ibm.icu.text.RuleBasedCollator$UCAConstants,com.ibm.icu.text.RuleBasedCollator$LeadByteConstants,com.ibm.icu.util.Output)#com/ibm/icu/text/RuleBasedCollator$DataManipulate/getInstance()
com/ibm/icu/text/CollatorReader/readImp(com.ibm.icu.text.RuleBasedCollator,com.ibm.icu.text.RuleBasedCollator$UCAConstants,com.ibm.icu.text.RuleBasedCollator$LeadByteConstants,com.ibm.icu.util.Output)#com/ibm/icu/impl/IntTrie/isLatin1Linear()
com/ibm/icu/text/CollatorReader/readImp(com.ibm.icu.text.RuleBasedCollator,com.ibm.icu.text.RuleBasedCollator$UCAConstants,com.ibm.icu.text.RuleBasedCollator$LeadByteConstants,com.ibm.icu.util.Output)#java/io/DataInputStream/readChar()
com/ibm/icu/text/CollatorReader/readImp(com.ibm.icu.text.RuleBasedCollator,com.ibm.icu.text.RuleBasedCollator$UCAConstants,com.ibm.icu.text.RuleBasedCollator$LeadByteConstants,com.ibm.icu.util.Output)#com/ibm/icu/text/RuleBasedCollator$LeadByteConstants/read(java.io.DataInputStream)
com/ibm/icu/text/CollatorReader/readImp(com.ibm.icu.text.RuleBasedCollator,com.ibm.icu.text.RuleBasedCollator$UCAConstants,com.ibm.icu.text.RuleBasedCollator$LeadByteConstants,com.ibm.icu.util.Output)#java/lang/AssertionError/AssertionError()
com/ibm/icu/impl/ICUCurrencyDisplayInfoProvider/ICUCurrencyDisplayInfo/_createNameMap()#java/util/Collections/unmodifiableMap(java.util.Map)
com/ibm/icu/impl/ICUCurrencyDisplayInfoProvider/ICUCurrencyDisplayInfo/_createNameMap()#java/util/HashMap/HashMap()
com/ibm/icu/impl/ICUCurrencyDisplayInfoProvider/ICUCurrencyDisplayInfo/_createNameMap()#java/util/Set/contains(java.lang.Object)
com/ibm/icu/impl/ICUCurrencyDisplayInfoProvider/ICUCurrencyDisplayInfo/_createNameMap()#java/util/TreeMap/TreeMap(java.util.Comparator)
com/ibm/icu/impl/ICUCurrencyDisplayInfoProvider/ICUCurrencyDisplayInfo/_createNameMap()#java/util/HashSet/HashSet()
com/ibm/icu/impl/ICUCurrencyDisplayInfoProvider/ICUCurrencyDisplayInfo/_createNameMap()#java/util/Set/add(java.lang.Object)
com/ibm/icu/impl/ICUCurrencyDisplayInfoProvider/ICUCurrencyDisplayInfo/_createNameMap()#java/util/Map/put(java.lang.Object,java.lang.Object)
com/ibm/icu/impl/ICUCurrencyDisplayInfoProvider/ICUCurrencyDisplayInfo/_createNameMap()#com/ibm/icu/impl/ICUResourceBundle/getString()
com/ibm/icu/impl/ICUCurrencyDisplayInfoProvider/ICUCurrencyDisplayInfo/_createNameMap()#com/ibm/icu/impl/ICUResourceBundle/getString(int)
com/ibm/icu/impl/ICUCurrencyDisplayInfoProvider/ICUCurrencyDisplayInfo/_createNameMap()#java/util/Map/get(java.lang.Object)
com/ibm/icu/impl/ICUCurrencyDisplayInfoProvider/ICUCurrencyDisplayInfo/_createNameMap()#com/ibm/icu/impl/ICUResourceBundle/getSize()
com/ibm/icu/text/UnicodeSet/applyPattern(java.lang.String,java.text.ParsePosition,com.ibm.icu.text.SymbolTable,int)#java/lang/StringBuilder/append(java.lang.String)
com/ibm/icu/text/UnicodeSet/applyPattern(java.lang.String,java.text.ParsePosition,com.ibm.icu.text.SymbolTable,int)#java/lang/StringBuilder/append(int)
com/ibm/icu/text/UnicodeSet/applyPattern(java.lang.String,java.text.ParsePosition,com.ibm.icu.text.SymbolTable,int)#java/lang/String/length()
com/ibm/icu/text/UnicodeSet/applyPattern(java.lang.String,java.text.ParsePosition,com.ibm.icu.text.SymbolTable,int)#java/text/ParsePosition/ParsePosition(int)
com/ibm/icu/text/UnicodeSet/applyPattern(java.lang.String,java.text.ParsePosition,com.ibm.icu.text.SymbolTable,int)#java/lang/StringBuffer/toString()
com/ibm/icu/text/UnicodeSet/applyPattern(java.lang.String,java.text.ParsePosition,com.ibm.icu.text.SymbolTable,int)#java/lang/StringBuilder/StringBuilder()
com/ibm/icu/text/UnicodeSet/applyPattern(java.lang.String,java.text.ParsePosition,com.ibm.icu.text.SymbolTable,int)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/ibm/icu/text/UnicodeSet/applyPattern(java.lang.String,java.text.ParsePosition,com.ibm.icu.text.SymbolTable,int)#java/lang/StringBuilder/toString()
com/ibm/icu/text/UnicodeSet/applyPattern(java.lang.String,java.text.ParsePosition,com.ibm.icu.text.SymbolTable,int)#java/text/ParsePosition/getIndex()
com/ibm/icu/text/UnicodeSet/applyPattern(java.lang.String,java.text.ParsePosition,com.ibm.icu.text.SymbolTable,int)#java/lang/StringBuffer/StringBuffer()
com/ibm/icu/text/UnicodeSet/applyPropertyAlias(java.lang.String,java.lang.String,com.ibm.icu.text.SymbolTable)#java/lang/StringBuilder/append(java.lang.String)
com/ibm/icu/text/UnicodeSet/applyPropertyAlias(java.lang.String,java.lang.String,com.ibm.icu.text.SymbolTable)#java/lang/String/length()
com/ibm/icu/text/UnicodeSet/applyPropertyAlias(java.lang.String,java.lang.String,com.ibm.icu.text.SymbolTable)#java/lang/Double/parseDouble(java.lang.String)
com/ibm/icu/text/UnicodeSet/applyPropertyAlias(java.lang.String,java.lang.String,com.ibm.icu.text.SymbolTable)#java/lang/Integer/parseInt(java.lang.String)
com/ibm/icu/text/UnicodeSet/applyPropertyAlias(java.lang.String,java.lang.String,com.ibm.icu.text.SymbolTable)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/ibm/icu/text/UnicodeSet/applyPropertyAlias(java.lang.String,java.lang.String,com.ibm.icu.text.SymbolTable)#com/ibm/icu/text/UnicodeSet$VersionFilter/VersionFilter(com.ibm.icu.util.VersionInfo)
com/ibm/icu/text/UnicodeSet/applyPropertyAlias(java.lang.String,java.lang.String,com.ibm.icu.text.SymbolTable)#com/ibm/icu/text/UnicodeSet$NumericValueFilter/NumericValueFilter(double)
com/ibm/icu/text/UnicodeSet/applyPropertyAlias(java.lang.String,java.lang.String,com.ibm.icu.text.SymbolTable)#java/lang/StringBuilder/StringBuilder()
com/ibm/icu/text/UnicodeSet/applyPropertyAlias(java.lang.String,java.lang.String,com.ibm.icu.text.SymbolTable)#com/ibm/icu/text/UnicodeSet$XSymbolTable/applyPropertyAlias(java.lang.String,java.lang.String,com.ibm.icu.text.UnicodeSet)
com/ibm/icu/text/UnicodeSet/applyPropertyAlias(java.lang.String,java.lang.String,com.ibm.icu.text.SymbolTable)#java/lang/StringBuilder/toString()
com/ibm/icu/text/UnicodeSet/applyPropertyPattern(java.lang.String,java.text.ParsePosition,com.ibm.icu.text.SymbolTable)#java/lang/String/regionMatches(boolean,int,java.lang.String,int,int)
com/ibm/icu/text/UnicodeSet/applyPropertyPattern(java.lang.String,java.text.ParsePosition,com.ibm.icu.text.SymbolTable)#java/lang/String/regionMatches(int,java.lang.String,int,int)
com/ibm/icu/text/UnicodeSet/applyPropertyPattern(java.lang.String,java.text.ParsePosition,com.ibm.icu.text.SymbolTable)#java/lang/String/charAt(int)
com/ibm/icu/text/UnicodeSet/applyPropertyPattern(java.lang.String,java.text.ParsePosition,com.ibm.icu.text.SymbolTable)#java/lang/String/length()
com/ibm/icu/text/UnicodeSet/applyPropertyPattern(java.lang.String,java.text.ParsePosition,com.ibm.icu.text.SymbolTable)#java/lang/String/indexOf(java.lang.String,int)
com/ibm/icu/text/UnicodeSet/applyPropertyPattern(java.lang.String,java.text.ParsePosition,com.ibm.icu.text.SymbolTable)#java/lang/String/substring(int,int)
com/ibm/icu/text/UnicodeSet/applyPropertyPattern(java.lang.String,java.text.ParsePosition,com.ibm.icu.text.SymbolTable)#java/lang/String/indexOf(int,int)
com/ibm/icu/text/UnicodeSet/applyPropertyPattern(java.lang.String,java.text.ParsePosition,com.ibm.icu.text.SymbolTable)#java/text/ParsePosition/getIndex()
com/ibm/icu/text/UnicodeSet/applyPropertyPattern(java.lang.String,java.text.ParsePosition,com.ibm.icu.text.SymbolTable)#java/text/ParsePosition/setIndex(int)
com/ibm/icu/text/Normalizer/cmpEquivFold(java.lang.CharSequence,java.lang.CharSequence,int)#com/ibm/icu/impl/Normalizer2Impl$UTF16Plus/isSurrogateLead(int)
com/ibm/icu/text/Normalizer/cmpEquivFold(java.lang.CharSequence,java.lang.CharSequence,int)#java/lang/CharSequence/length()
com/ibm/icu/text/Normalizer/cmpEquivFold(java.lang.CharSequence,java.lang.CharSequence,int)#java/lang/StringBuilder/appendCodePoint(int)
com/ibm/icu/text/Normalizer/cmpEquivFold(java.lang.CharSequence,java.lang.CharSequence,int)#java/lang/CharSequence/charAt(int)
com/ibm/icu/text/Normalizer/cmpEquivFold(java.lang.CharSequence,java.lang.CharSequence,int)#java/lang/Character/toCodePoint(char,char)
com/ibm/icu/text/Normalizer/cmpEquivFold(java.lang.CharSequence,java.lang.CharSequence,int)#java/lang/StringBuilder/delete(int,int)
com/ibm/icu/text/Normalizer/cmpEquivFold(java.lang.CharSequence,java.lang.CharSequence,int)#java/lang/Character/isHighSurrogate(char)
com/ibm/icu/text/Normalizer/cmpEquivFold(java.lang.CharSequence,java.lang.CharSequence,int)#java/lang/StringBuilder/length()
com/ibm/icu/text/Normalizer/cmpEquivFold(java.lang.CharSequence,java.lang.CharSequence,int)#java/lang/StringBuilder/setLength(int)
com/ibm/icu/text/Normalizer/cmpEquivFold(java.lang.CharSequence,java.lang.CharSequence,int)#java/lang/String/length()
com/ibm/icu/text/Normalizer/cmpEquivFold(java.lang.CharSequence,java.lang.CharSequence,int)#java/lang/Character/isLowSurrogate(char)
com/ibm/icu/text/Normalizer/cmpEquivFold(java.lang.CharSequence,java.lang.CharSequence,int)#java/lang/StringBuilder/StringBuilder()
com/ibm/icu/text/Normalizer/concatenate(char[],int,int,char[],int,int,char[],int,int,com.ibm.icu.text.Normalizer$Mode,int)#java/lang/StringBuilder/getChars(int,int,char[],int)
com/ibm/icu/text/Normalizer/concatenate(char[],int,int,char[],int,int,char[],int,int,com.ibm.icu.text.Normalizer$Mode,int)#java/lang/IndexOutOfBoundsException/IndexOutOfBoundsException(java.lang.String)
com/ibm/icu/text/Normalizer/concatenate(char[],int,int,char[],int,int,char[],int,int,com.ibm.icu.text.Normalizer$Mode,int)#java/lang/Integer/toString(int)
com/ibm/icu/text/Normalizer/concatenate(char[],int,int,char[],int,int,char[],int,int,com.ibm.icu.text.Normalizer$Mode,int)#java/lang/StringBuilder/append(char[],int,int)
com/ibm/icu/text/Normalizer/concatenate(char[],int,int,char[],int,int,char[],int,int,com.ibm.icu.text.Normalizer$Mode,int)#java/lang/StringBuilder/StringBuilder(int)
com/ibm/icu/text/Normalizer/concatenate(char[],int,int,char[],int,int,char[],int,int,com.ibm.icu.text.Normalizer$Mode,int)#com/ibm/icu/text/Normalizer$Mode/getNormalizer2(int)
com/ibm/icu/text/Normalizer/concatenate(char[],int,int,char[],int,int,char[],int,int,com.ibm.icu.text.Normalizer$Mode,int)#java/nio/CharBuffer/wrap(char[],int,int)
com/ibm/icu/text/Normalizer/concatenate(char[],int,int,char[],int,int,char[],int,int,com.ibm.icu.text.Normalizer$Mode,int)#java/lang/IllegalArgumentException/IllegalArgumentException()
com/ibm/icu/text/Normalizer/concatenate(char[],int,int,char[],int,int,char[],int,int,com.ibm.icu.text.Normalizer$Mode,int)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/ibm/icu/text/Normalizer/concatenate(char[],int,int,char[],int,int,char[],int,int,com.ibm.icu.text.Normalizer$Mode,int)#java/lang/StringBuilder/length()
com/ibm/icu/text/CollationParsedRuleBuilder/addMultiCMontractions(com.ibm.icu.text.CollationParsedRuleBuilder$BuildTable,com.ibm.icu.text.CollationElementIterator,com.ibm.icu.text.CollationParsedRuleBuilder$Elements,char[],int[],int,char,int,java.lang.String)#java/lang/String/String(char[])
com/ibm/icu/text/CollationParsedRuleBuilder/addMultiCMontractions(com.ibm.icu.text.CollationParsedRuleBuilder$BuildTable,com.ibm.icu.text.CollationElementIterator,com.ibm.icu.text.CollationParsedRuleBuilder$Elements,char[],int[],int,char,int,java.lang.String)#java/lang/StringBuilder/StringBuilder(java.lang.String)
com/ibm/icu/text/CollationParsedRuleBuilder/addMultiCMontractions(com.ibm.icu.text.CollationParsedRuleBuilder$BuildTable,com.ibm.icu.text.CollationElementIterator,com.ibm.icu.text.CollationParsedRuleBuilder$Elements,char[],int[],int,char,int,java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/ibm/icu/text/CollationParsedRuleBuilder/addMultiCMontractions(com.ibm.icu.text.CollationParsedRuleBuilder$BuildTable,com.ibm.icu.text.CollationElementIterator,com.ibm.icu.text.CollationParsedRuleBuilder$Elements,char[],int[],int,char,int,java.lang.String)#java/lang/StringBuilder/append(char)
com/ibm/icu/text/CollationParsedRuleBuilder/addMultiCMontractions(com.ibm.icu.text.CollationParsedRuleBuilder$BuildTable,com.ibm.icu.text.CollationElementIterator,com.ibm.icu.text.CollationParsedRuleBuilder$Elements,char[],int[],int,char,int,java.lang.String)#java/lang/StringBuilder/toString()
com/ibm/icu/text/CollationParsedRuleBuilder/addMultiCMontractions(com.ibm.icu.text.CollationParsedRuleBuilder$BuildTable,com.ibm.icu.text.CollationElementIterator,com.ibm.icu.text.CollationParsedRuleBuilder$Elements,char[],int[],int,char,int,java.lang.String)#java/lang/String/String(char[],int,int)
com/ibm/icu/text/CollationParsedRuleBuilder/addMultiCMontractions(com.ibm.icu.text.CollationParsedRuleBuilder$BuildTable,com.ibm.icu.text.CollationElementIterator,com.ibm.icu.text.CollationParsedRuleBuilder$Elements,char[],int[],int,char,int,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/ibm/icu/text/CollationParsedRuleBuilder/addMultiCMontractions(com.ibm.icu.text.CollationParsedRuleBuilder$BuildTable,com.ibm.icu.text.CollationElementIterator,com.ibm.icu.text.CollationParsedRuleBuilder$Elements,char[],int[],int,char,int,java.lang.String)#java/lang/String/charAt(int)
com/ibm/icu/text/CollationParsedRuleBuilder/addMultiCMontractions(com.ibm.icu.text.CollationParsedRuleBuilder$BuildTable,com.ibm.icu.text.CollationElementIterator,com.ibm.icu.text.CollationParsedRuleBuilder$Elements,char[],int[],int,char,int,java.lang.String)#java/lang/String/length()
com/ibm/icu/text/CollationParsedRuleBuilder/addMultiCMontractions(com.ibm.icu.text.CollationParsedRuleBuilder$BuildTable,com.ibm.icu.text.CollationElementIterator,com.ibm.icu.text.CollationParsedRuleBuilder$Elements,char[],int[],int,char,int,java.lang.String)#java/util/Map/get(java.lang.Object)
com/ibm/icu/text/CollationParsedRuleBuilder/constructTable(com.ibm.icu.text.CollationParsedRuleBuilder$ContractionTable)#java/lang/Integer/intValue()
com/ibm/icu/text/CollationParsedRuleBuilder/constructTable(com.ibm.icu.text.CollationParsedRuleBuilder$ContractionTable)#java/util/List/size()
com/ibm/icu/text/CollationParsedRuleBuilder/constructTable(com.ibm.icu.text.CollationParsedRuleBuilder$ContractionTable)#java/util/List/clear()
com/ibm/icu/text/CollationParsedRuleBuilder/constructTable(com.ibm.icu.text.CollationParsedRuleBuilder$ContractionTable)#java/lang/StringBuilder/delete(int,int)
com/ibm/icu/text/CollationParsedRuleBuilder/constructTable(com.ibm.icu.text.CollationParsedRuleBuilder$ContractionTable)#java/util/List/add(java.lang.Object)
com/ibm/icu/text/CollationParsedRuleBuilder/constructTable(com.ibm.icu.text.CollationParsedRuleBuilder$ContractionTable)#java/lang/StringBuilder/append(char)
com/ibm/icu/text/CollationParsedRuleBuilder/constructTable(com.ibm.icu.text.CollationParsedRuleBuilder$ContractionTable)#java/lang/Integer/valueOf(int)
com/ibm/icu/text/CollationParsedRuleBuilder/constructTable(com.ibm.icu.text.CollationParsedRuleBuilder$ContractionTable)#java/util/List/get(int)
com/ibm/icu/text/CollationParsedRuleBuilder/constructTable(com.ibm.icu.text.CollationParsedRuleBuilder$ContractionTable)#java/lang/StringBuilder/length()
com/ibm/icu/text/CollationParsedRuleBuilder/constructTable(com.ibm.icu.text.CollationParsedRuleBuilder$ContractionTable)#java/lang/StringBuilder/insert(int,char)
com/ibm/icu/text/CollationParsedRuleBuilder/constructTable(com.ibm.icu.text.CollationParsedRuleBuilder$ContractionTable)#java/util/List/set(int,java.lang.Object)
com/ibm/icu/text/CollationParsedRuleBuilder/constructTable(com.ibm.icu.text.CollationParsedRuleBuilder$ContractionTable)#java/lang/StringBuilder/charAt(int)
com/ibm/icu/text/CollationParsedRuleBuilder/assembleTailoringTable(com.ibm.icu.text.RuleBasedCollator)#java/lang/String/String(char[],int,int)
com/ibm/icu/text/CollationParsedRuleBuilder/assembleTailoringTable(com.ibm.icu.text.RuleBasedCollator)#com/ibm/icu/text/CollationParsedRuleBuilder$Elements/clear()
com/ibm/icu/text/CollationParsedRuleBuilder/assembleTailoringTable(com.ibm.icu.text.RuleBasedCollator)#java/lang/StringBuilder/StringBuilder()
com/ibm/icu/text/CollationParsedRuleBuilder/assembleTailoringTable(com.ibm.icu.text.RuleBasedCollator)#com/ibm/icu/text/CollationParsedRuleBuilder$Elements/Elements()
com/ibm/icu/text/CollationParsedRuleBuilder/assembleTailoringTable(com.ibm.icu.text.RuleBasedCollator)#com/ibm/icu/text/CollationParsedRuleBuilder$BuildTable/BuildTable(com.ibm.icu.text.CollationRuleParser)
com/ibm/icu/text/CollationParsedRuleBuilder/assembleTailoringTable(com.ibm.icu.text.RuleBasedCollator)#java/lang/StringBuilder/append(java.lang.String)
com/ibm/icu/text/CollationParsedRuleBuilder/assembleTailoringTable(com.ibm.icu.text.RuleBasedCollator)#java/lang/String/charAt(int)
com/ibm/icu/text/CollationParsedRuleBuilder/assembleTailoringTable(com.ibm.icu.text.RuleBasedCollator)#java/lang/Character/toString(char)
com/ibm/icu/text/CollationParsedRuleBuilder/assembleTailoringTable(com.ibm.icu.text.RuleBasedCollator)#java/util/Map/get(java.lang.Object)
com/ibm/icu/text/CollationParsedRuleBuilder/assembleTailoringTable(com.ibm.icu.text.RuleBasedCollator)#java/lang/Character/charCount(int)
com/ibm/icu/text/CollationParsedRuleBuilder/assembleTailoringTable(com.ibm.icu.text.RuleBasedCollator)#java/lang/Character/codePointAt(char[],int)
com/ibm/icu/text/CollationParsedRuleBuilder/assembleTailoringTable(com.ibm.icu.text.RuleBasedCollator)#java/lang/StringBuilder/toString()
com/ibm/icu/text/DateTimePatternGenerator/DateTimeMatcher/set(java.lang.String,com.ibm.icu.text.DateTimePatternGenerator$FormatParser,boolean)#java/lang/String/valueOf(char)
com/ibm/icu/text/DateTimePatternGenerator/DateTimeMatcher/set(java.lang.String,com.ibm.icu.text.DateTimePatternGenerator$FormatParser,boolean)#com/ibm/icu/text/DateTimePatternGenerator$VariableField/access$800(com.ibm.icu.text.DateTimePatternGenerator$VariableField)
com/ibm/icu/text/DateTimePatternGenerator/DateTimeMatcher/set(java.lang.String,com.ibm.icu.text.DateTimePatternGenerator$FormatParser,boolean)#java/util/Iterator/hasNext()
com/ibm/icu/text/DateTimePatternGenerator/DateTimeMatcher/set(java.lang.String,com.ibm.icu.text.DateTimePatternGenerator$FormatParser,boolean)#java/lang/String/length()
com/ibm/icu/text/DateTimePatternGenerator/DateTimeMatcher/set(java.lang.String,com.ibm.icu.text.DateTimePatternGenerator$FormatParser,boolean)#java/util/Iterator/next()
com/ibm/icu/text/DateTimePatternGenerator/DateTimeMatcher/set(java.lang.String,com.ibm.icu.text.DateTimePatternGenerator$FormatParser,boolean)#java/lang/StringBuilder/StringBuilder()
com/ibm/icu/text/DateTimePatternGenerator/DateTimeMatcher/set(java.lang.String,com.ibm.icu.text.DateTimePatternGenerator$FormatParser,boolean)#com/ibm/icu/text/DateTimePatternGenerator$VariableField/toString()
com/ibm/icu/text/DateTimePatternGenerator/DateTimeMatcher/set(java.lang.String,com.ibm.icu.text.DateTimePatternGenerator$FormatParser,boolean)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/ibm/icu/text/DateTimePatternGenerator/DateTimeMatcher/set(java.lang.String,com.ibm.icu.text.DateTimePatternGenerator$FormatParser,boolean)#java/util/List/iterator()
com/ibm/icu/text/DateTimePatternGenerator/DateTimeMatcher/set(java.lang.String,com.ibm.icu.text.DateTimePatternGenerator$FormatParser,boolean)#java/lang/StringBuilder/append(java.lang.String)
com/ibm/icu/text/DateTimePatternGenerator/DateTimeMatcher/set(java.lang.String,com.ibm.icu.text.DateTimePatternGenerator$FormatParser,boolean)#java/lang/String/charAt(int)
com/ibm/icu/text/DateTimePatternGenerator/DateTimeMatcher/set(java.lang.String,com.ibm.icu.text.DateTimePatternGenerator$FormatParser,boolean)#java/lang/String/indexOf(int)
com/ibm/icu/text/DateTimePatternGenerator/DateTimeMatcher/set(java.lang.String,com.ibm.icu.text.DateTimePatternGenerator$FormatParser,boolean)#com/ibm/icu/text/DateTimePatternGenerator$FormatParser/getItems()
com/ibm/icu/text/DateTimePatternGenerator/DateTimeMatcher/set(java.lang.String,com.ibm.icu.text.DateTimePatternGenerator$FormatParser,boolean)#java/lang/StringBuilder/toString()
com/ibm/icu/text/DateTimePatternGenerator/DateTimeMatcher/set(java.lang.String,com.ibm.icu.text.DateTimePatternGenerator$FormatParser,boolean)#com/ibm/icu/text/DateTimePatternGenerator$FormatParser/set(java.lang.String)
com/ibm/icu/text/CharsetDetector/createRecognizers()#com/ibm/icu/text/CharsetRecog_mbcs$CharsetRecog_big5/CharsetRecog_big5()
com/ibm/icu/text/CharsetDetector/createRecognizers()#com/ibm/icu/text/CharsetRecog_sbcs$CharsetRecog_windows_1251/CharsetRecog_windows_1251()
com/ibm/icu/text/CharsetDetector/createRecognizers()#com/ibm/icu/text/CharsetRecog_mbcs$CharsetRecog_euc$CharsetRecog_euc_jp/CharsetRecog_euc_jp()
com/ibm/icu/text/CharsetDetector/createRecognizers()#java/util/ArrayList/size()
com/ibm/icu/text/CharsetDetector/createRecognizers()#com/ibm/icu/text/CharsetRecog_2022$CharsetRecog_2022JP/CharsetRecog_2022JP()
com/ibm/icu/text/CharsetDetector/createRecognizers()#com/ibm/icu/text/CharsetRecog_mbcs$CharsetRecog_sjis/CharsetRecog_sjis()
com/ibm/icu/text/CharsetDetector/createRecognizers()#com/ibm/icu/text/CharsetRecog_2022$CharsetRecog_2022KR/CharsetRecog_2022KR()
com/ibm/icu/text/CharsetDetector/createRecognizers()#com/ibm/icu/text/CharsetRecog_sbcs$CharsetRecog_8859_2/CharsetRecog_8859_2()
com/ibm/icu/text/CharsetDetector/createRecognizers()#com/ibm/icu/text/CharsetRecog_2022$CharsetRecog_2022CN/CharsetRecog_2022CN()
com/ibm/icu/text/CharsetDetector/createRecognizers()#java/util/ArrayList/ArrayList()
com/ibm/icu/text/CharsetDetector/createRecognizers()#com/ibm/icu/text/CharsetRecog_sbcs$CharsetRecog_8859_5_ru/CharsetRecog_8859_5_ru()
com/ibm/icu/text/CharsetDetector/createRecognizers()#com/ibm/icu/text/CharsetRecog_sbcs$CharsetRecog_8859_6_ar/CharsetRecog_8859_6_ar()
com/ibm/icu/text/CharsetDetector/createRecognizers()#com/ibm/icu/text/CharsetRecog_sbcs$CharsetRecog_8859_7_el/CharsetRecog_8859_7_el()
com/ibm/icu/text/CharsetDetector/createRecognizers()#com/ibm/icu/text/CharsetRecog_sbcs$CharsetRecog_IBM424_he_rtl/CharsetRecog_IBM424_he_rtl()
com/ibm/icu/text/CharsetDetector/createRecognizers()#com/ibm/icu/text/CharsetRecog_sbcs$CharsetRecog_IBM424_he_ltr/CharsetRecog_IBM424_he_ltr()
com/ibm/icu/text/CharsetDetector/createRecognizers()#com/ibm/icu/text/CharsetRecog_sbcs$CharsetRecog_IBM420_ar_rtl/CharsetRecog_IBM420_ar_rtl()
com/ibm/icu/text/CharsetDetector/createRecognizers()#com/ibm/icu/text/CharsetRecog_sbcs$CharsetRecog_IBM420_ar_ltr/CharsetRecog_IBM420_ar_ltr()
com/ibm/icu/text/CharsetDetector/createRecognizers()#com/ibm/icu/text/CharsetRecog_sbcs$CharsetRecog_8859_9_tr/CharsetRecog_8859_9_tr()
com/ibm/icu/text/CharsetDetector/createRecognizers()#com/ibm/icu/text/CharsetRecog_sbcs$CharsetRecog_8859_8_he/CharsetRecog_8859_8_he()
com/ibm/icu/text/CharsetDetector/createRecognizers()#com/ibm/icu/text/CharsetRecog_sbcs$CharsetRecog_8859_8_I_he/CharsetRecog_8859_8_I_he()
com/ibm/icu/text/CharsetDetector/createRecognizers()#com/ibm/icu/text/CharsetRecog_Unicode$CharsetRecog_UTF_16_BE/CharsetRecog_UTF_16_BE()
com/ibm/icu/text/CharsetDetector/createRecognizers()#com/ibm/icu/text/CharsetRecog_Unicode$CharsetRecog_UTF_32_LE/CharsetRecog_UTF_32_LE()
com/ibm/icu/text/CharsetDetector/createRecognizers()#com/ibm/icu/text/CharsetRecog_mbcs$CharsetRecog_euc$CharsetRecog_euc_kr/CharsetRecog_euc_kr()
com/ibm/icu/text/CharsetDetector/createRecognizers()#com/ibm/icu/text/CharsetRecog_Unicode$CharsetRecog_UTF_32_BE/CharsetRecog_UTF_32_BE()
com/ibm/icu/text/CharsetDetector/createRecognizers()#com/ibm/icu/text/CharsetRecog_sbcs$CharsetRecog_windows_1256/CharsetRecog_windows_1256()
com/ibm/icu/text/CharsetDetector/createRecognizers()#com/ibm/icu/text/CharsetRecog_Unicode$CharsetRecog_UTF_16_LE/CharsetRecog_UTF_16_LE()
com/ibm/icu/text/CharsetDetector/createRecognizers()#java/lang/String/equals(java.lang.Object)
com/ibm/icu/text/CharsetDetector/createRecognizers()#java/util/ArrayList/add(java.lang.Object)
com/ibm/icu/text/CharsetDetector/createRecognizers()#com/ibm/icu/text/CharsetRecog_mbcs$CharsetRecog_gb_18030/CharsetRecog_gb_18030()
com/ibm/icu/text/CharsetDetector/createRecognizers()#java/lang/System/arraycopy(java.lang.Object,int,java.lang.Object,int,int)
com/ibm/icu/text/CharsetDetector/createRecognizers()#com/ibm/icu/text/CharsetRecog_sbcs$CharsetRecog_8859_1/CharsetRecog_8859_1()
com/ibm/icu/text/CharsetDetector/createRecognizers()#com/ibm/icu/text/CharsetRecog_sbcs$CharsetRecog_KOI8_R/CharsetRecog_KOI8_R()
com/ibm/icu/text/CharsetDetector/createRecognizers()#java/util/ArrayList/get(int)
com/ibm/icu/text/CharsetDetector/detectAll()#java/util/ArrayList/iterator()
com/ibm/icu/text/CharsetDetector/detectAll()#java/util/ArrayList/ArrayList()
com/ibm/icu/text/CharsetDetector/detectAll()#java/util/ArrayList/toArray(java.lang.Object[])
com/ibm/icu/text/CharsetDetector/detectAll()#java/util/ArrayList/add(java.lang.Object)
com/ibm/icu/text/CharsetDetector/detectAll()#java/util/ArrayList/size()
com/ibm/icu/text/CharsetDetector/detectAll()#java/util/Collections/sort(java.util.List)
com/ibm/icu/text/CharsetDetector/detectAll()#java/util/Iterator/hasNext()
com/ibm/icu/text/CharsetDetector/detectAll()#java/util/Collections/reverse(java.util.List)
com/ibm/icu/text/CharsetDetector/detectAll()#java/util/Iterator/next()
com/ibm/icu/text/RBBIDataWrapper/get(java.io.InputStream)#java/io/DataInputStream/reset()
com/ibm/icu/text/RBBIDataWrapper/get(java.io.InputStream)#java/io/DataInputStream/skip(long)
com/ibm/icu/text/RBBIDataWrapper/get(java.io.InputStream)#java/io/DataInputStream/readInt()
com/ibm/icu/text/RBBIDataWrapper/get(java.io.InputStream)#java/io/DataInputStream/DataInputStream(java.io.InputStream)
com/ibm/icu/text/RBBIDataWrapper/get(java.io.InputStream)#java/lang/String/indexOf(java.lang.String)
com/ibm/icu/text/RBBIDataWrapper/get(java.io.InputStream)#java/io/BufferedInputStream/BufferedInputStream(java.io.InputStream)
com/ibm/icu/text/RBBIDataWrapper/get(java.io.InputStream)#com/ibm/icu/text/RBBIDataWrapper$RBBIDataHeader/RBBIDataHeader()
com/ibm/icu/text/RBBIDataWrapper/get(java.io.InputStream)#java/lang/StringBuilder/toString()
com/ibm/icu/text/RBBIDataWrapper/get(java.io.InputStream)#java/io/DataInputStream/mark(int)
com/ibm/icu/text/RBBIDataWrapper/get(java.io.InputStream)#java/io/IOException/IOException(java.lang.String)
com/ibm/icu/text/RBBIDataWrapper/get(java.io.InputStream)#java/io/DataInputStream/readChar()
com/ibm/icu/text/RBBIDataWrapper/get(java.io.InputStream)#java/lang/StringBuilder/StringBuilder(int)
com/ibm/icu/text/RBBIDataWrapper/get(java.io.InputStream)#java/io/DataInputStream/readShort()
com/ibm/icu/text/RBBIDataWrapper/get(java.io.InputStream)#java/lang/StringBuilder/append(char)
com/ibm/icu/impl/ICUService/getDisplayNames(com.ibm.icu.util.ULocale,java.util.Comparator,java.lang.String)#com/ibm/icu/impl/ICUService$Key/isFallbackOf(java.lang.String)
com/ibm/icu/impl/ICUService/getDisplayNames(com.ibm.icu.util.ULocale,java.util.Comparator,java.lang.String)#java/util/Iterator/remove()
com/ibm/icu/impl/ICUService/getDisplayNames(com.ibm.icu.util.ULocale,java.util.Comparator,java.lang.String)#java/util/Collections/unmodifiableSortedMap(java.util.SortedMap)
com/ibm/icu/impl/ICUService/getDisplayNames(com.ibm.icu.util.ULocale,java.util.Comparator,java.lang.String)#java/util/TreeMap/TreeMap(java.util.SortedMap)
com/ibm/icu/impl/ICUService/getDisplayNames(com.ibm.icu.util.ULocale,java.util.Comparator,java.lang.String)#java/util/Iterator/hasNext()
com/ibm/icu/impl/ICUService/getDisplayNames(com.ibm.icu.util.ULocale,java.util.Comparator,java.lang.String)#java/util/Map$Entry/getKey()
com/ibm/icu/impl/ICUService/getDisplayNames(com.ibm.icu.util.ULocale,java.util.Comparator,java.lang.String)#com/ibm/icu/impl/ICUService$LocaleRef/LocaleRef(java.util.SortedMap,com.ibm.icu.util.ULocale,java.util.Comparator)
com/ibm/icu/impl/ICUService/getDisplayNames(com.ibm.icu.util.ULocale,java.util.Comparator,java.lang.String)#java/util/Iterator/next()
com/ibm/icu/impl/ICUService/getDisplayNames(com.ibm.icu.util.ULocale,java.util.Comparator,java.lang.String)#com/ibm/icu/impl/ICUService$Factory/getDisplayName(java.lang.String,com.ibm.icu.util.ULocale)
com/ibm/icu/impl/ICUService/getDisplayNames(com.ibm.icu.util.ULocale,java.util.Comparator,java.lang.String)#java/util/Set/iterator()
com/ibm/icu/impl/ICUService/getDisplayNames(com.ibm.icu.util.ULocale,java.util.Comparator,java.lang.String)#java/util/SortedMap/put(java.lang.Object,java.lang.Object)
com/ibm/icu/impl/ICUService/getDisplayNames(com.ibm.icu.util.ULocale,java.util.Comparator,java.lang.String)#java/util/Map$Entry/getValue()
com/ibm/icu/impl/ICUService/getDisplayNames(com.ibm.icu.util.ULocale,java.util.Comparator,java.lang.String)#java/util/SortedMap/entrySet()
com/ibm/icu/impl/ICUService/getDisplayNames(com.ibm.icu.util.ULocale,java.util.Comparator,java.lang.String)#java/util/TreeMap/TreeMap(java.util.Comparator)
com/ibm/icu/impl/ICUService/getDisplayNames(com.ibm.icu.util.ULocale,java.util.Comparator,java.lang.String)#java/util/Map/entrySet()
com/ibm/icu/impl/ICUService/getDisplayNames(com.ibm.icu.util.ULocale,java.util.Comparator,java.lang.String)#com/ibm/icu/impl/ICUService$LocaleRef/get(com.ibm.icu.util.ULocale,java.util.Comparator)
com/ibm/icu/impl/ICUService/getKey(com.ibm.icu.impl.ICUService$Key,java.lang.String[],com.ibm.icu.impl.ICUService$Factory)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/ibm/icu/impl/ICUService/getKey(com.ibm.icu.impl.ICUService$Key,java.lang.String[],com.ibm.icu.impl.ICUService$Factory)#java/util/Iterator/hasNext()
com/ibm/icu/impl/ICUService/getKey(com.ibm.icu.impl.ICUService$Key,java.lang.String[],com.ibm.icu.impl.ICUService$Factory)#java/lang/StringBuilder/append(int)
com/ibm/icu/impl/ICUService/getKey(com.ibm.icu.impl.ICUService$Key,java.lang.String[],com.ibm.icu.impl.ICUService$Factory)#java/util/Map/get(java.lang.Object)
com/ibm/icu/impl/ICUService/getKey(com.ibm.icu.impl.ICUService$Key,java.lang.String[],com.ibm.icu.impl.ICUService$Factory)#java/util/List/size()
com/ibm/icu/impl/ICUService/getKey(com.ibm.icu.impl.ICUService$Key,java.lang.String[],com.ibm.icu.impl.ICUService$Factory)#java/util/ArrayList/add(java.lang.Object)
com/ibm/icu/impl/ICUService/getKey(com.ibm.icu.impl.ICUService$Key,java.lang.String[],com.ibm.icu.impl.ICUService$Factory)#java/lang/ref/SoftReference/SoftReference(java.lang.Object)
com/ibm/icu/impl/ICUService/getKey(com.ibm.icu.impl.ICUService$Key,java.lang.String[],com.ibm.icu.impl.ICUService$Factory)#java/lang/String/substring(int)
com/ibm/icu/impl/ICUService/getKey(com.ibm.icu.impl.ICUService$Key,java.lang.String[],com.ibm.icu.impl.ICUService$Factory)#java/util/List/get(int)
com/ibm/icu/impl/ICUService/getKey(com.ibm.icu.impl.ICUService$Key,java.lang.String[],com.ibm.icu.impl.ICUService$Factory)#java/lang/StringBuilder/append(java.lang.Object)
com/ibm/icu/impl/ICUService/getKey(com.ibm.icu.impl.ICUService$Key,java.lang.String[],com.ibm.icu.impl.ICUService$Factory)#com/ibm/icu/impl/ICUService$Key/currentDescriptor()
com/ibm/icu/impl/ICUService/getKey(com.ibm.icu.impl.ICUService$Key,java.lang.String[],com.ibm.icu.impl.ICUService$Factory)#java/lang/StringBuilder/toString()
com/ibm/icu/impl/ICUService/getKey(com.ibm.icu.impl.ICUService$Key,java.lang.String[],com.ibm.icu.impl.ICUService$Factory)#java/util/Collections/synchronizedMap(java.util.Map)
com/ibm/icu/impl/ICUService/getKey(com.ibm.icu.impl.ICUService$Key,java.lang.String[],com.ibm.icu.impl.ICUService$Factory)#java/util/ArrayList/iterator()
com/ibm/icu/impl/ICUService/getKey(com.ibm.icu.impl.ICUService$Key,java.lang.String[],com.ibm.icu.impl.ICUService$Factory)#com/ibm/icu/impl/ICUService$CacheEntry/CacheEntry(java.lang.String,java.lang.Object)
com/ibm/icu/impl/ICUService/getKey(com.ibm.icu.impl.ICUService$Key,java.lang.String[],com.ibm.icu.impl.ICUService$Factory)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
com/ibm/icu/impl/ICUService/getKey(com.ibm.icu.impl.ICUService$Key,java.lang.String[],com.ibm.icu.impl.ICUService$Factory)#com/ibm/icu/impl/ICUService$Key/canonicalID()
com/ibm/icu/impl/ICUService/getKey(com.ibm.icu.impl.ICUService$Key,java.lang.String[],com.ibm.icu.impl.ICUService$Factory)#java/util/ArrayList/ArrayList(int)
com/ibm/icu/impl/ICUService/getKey(com.ibm.icu.impl.ICUService$Key,java.lang.String[],com.ibm.icu.impl.ICUService$Factory)#java/lang/Object/toString()
com/ibm/icu/impl/ICUService/getKey(com.ibm.icu.impl.ICUService$Key,java.lang.String[],com.ibm.icu.impl.ICUService$Factory)#com/ibm/icu/impl/ICUService$Key/fallback()
com/ibm/icu/impl/ICUService/getKey(com.ibm.icu.impl.ICUService$Key,java.lang.String[],com.ibm.icu.impl.ICUService$Factory)#java/lang/StringBuilder/append(java.lang.String)
com/ibm/icu/impl/ICUService/getKey(com.ibm.icu.impl.ICUService$Key,java.lang.String[],com.ibm.icu.impl.ICUService$Factory)#com/ibm/icu/impl/ICUService$Factory/create(com.ibm.icu.impl.ICUService$Key,com.ibm.icu.impl.ICUService)
com/ibm/icu/impl/ICUService/getKey(com.ibm.icu.impl.ICUService$Key,java.lang.String[],com.ibm.icu.impl.ICUService$Factory)#java/io/PrintStream/println(java.lang.String)
com/ibm/icu/impl/ICUService/getKey(com.ibm.icu.impl.ICUService$Key,java.lang.String[],com.ibm.icu.impl.ICUService$Factory)#java/util/Iterator/next()
com/ibm/icu/impl/ICUService/getKey(com.ibm.icu.impl.ICUService$Key,java.lang.String[],com.ibm.icu.impl.ICUService$Factory)#java/util/HashMap/HashMap()
com/ibm/icu/impl/ICUService/getKey(com.ibm.icu.impl.ICUService$Key,java.lang.String[],com.ibm.icu.impl.ICUService$Factory)#java/lang/StringBuilder/StringBuilder()
com/ibm/icu/impl/ICUService/getKey(com.ibm.icu.impl.ICUService$Key,java.lang.String[],com.ibm.icu.impl.ICUService$Factory)#java/lang/String/indexOf(java.lang.String)
com/ibm/icu/impl/ICUService/getKey(com.ibm.icu.impl.ICUService$Key,java.lang.String[],com.ibm.icu.impl.ICUService$Factory)#java/lang/ref/SoftReference/get()
com/ibm/icu/impl/ICUService/getVisibleIDMap()#com/ibm/icu/impl/ICUService$Factory/updateVisibleIDs(java.util.Map)
com/ibm/icu/impl/ICUService/getVisibleIDMap()#java/util/ListIterator/hasPrevious()
com/ibm/icu/impl/ICUService/getVisibleIDMap()#java/util/Collections/unmodifiableMap(java.util.Map)
com/ibm/icu/impl/ICUService/getVisibleIDMap()#java/util/List/size()
com/ibm/icu/impl/ICUService/getVisibleIDMap()#java/lang/ref/SoftReference/SoftReference(java.lang.Object)
com/ibm/icu/impl/ICUService/getVisibleIDMap()#java/lang/ref/SoftReference/get()
com/ibm/icu/impl/ICUService/getVisibleIDMap()#java/util/ListIterator/previous()
com/ibm/icu/impl/ICUService/getVisibleIDMap()#java/util/List/listIterator(int)
com/ibm/icu/impl/ICUService/getVisibleIDMap()#java/util/HashMap/HashMap()
com/ibm/icu/util/LocalePriorityList/toString()#java/util/Iterator/hasNext()
com/ibm/icu/util/LocalePriorityList/toString()#java/lang/StringBuilder/append(java.lang.String)
com/ibm/icu/util/LocalePriorityList/toString()#java/util/Map/get(java.lang.Object)
com/ibm/icu/util/LocalePriorityList/toString()#java/lang/StringBuilder/StringBuilder()
com/ibm/icu/util/LocalePriorityList/toString()#java/util/Set/iterator()
com/ibm/icu/util/LocalePriorityList/toString()#java/lang/StringBuilder/length()
com/ibm/icu/util/LocalePriorityList/toString()#java/lang/StringBuilder/append(java.lang.Object)
com/ibm/icu/util/LocalePriorityList/toString()#java/lang/StringBuilder/append(double)
com/ibm/icu/util/LocalePriorityList/toString()#java/lang/StringBuilder/toString()
com/ibm/icu/util/LocalePriorityList/toString()#java/util/Iterator/next()
com/ibm/icu/util/LocalePriorityList/toString()#java/util/Map/keySet()
com/ibm/icu/util/LocalePriorityList/toString()#java/lang/Double/doubleValue()
com/ibm/icu/text/PluralRules/parseConstraint(java.lang.String)#java/lang/Math/min(long,long)
com/ibm/icu/text/PluralRules/parseConstraint(java.lang.String)#java/lang/Long/parseLong(java.lang.String)
com/ibm/icu/text/PluralRules/parseConstraint(java.lang.String)#java/lang/String/trim()
com/ibm/icu/text/PluralRules/parseConstraint(java.lang.String)#com/ibm/icu/text/PluralRules$RangeConstraint/RangeConstraint(int,boolean,boolean,long,long,long[])
com/ibm/icu/text/PluralRules/parseConstraint(java.lang.String)#java/lang/Math/max(long,long)
com/ibm/icu/text/PluralRules/parseConstraint(java.lang.String)#java/lang/Integer/parseInt(java.lang.String)
com/ibm/icu/text/PluralRules/parseConstraint(java.lang.String)#com/ibm/icu/text/PluralRules$OrConstraint/OrConstraint(com.ibm.icu.text.PluralRules$Constraint,com.ibm.icu.text.PluralRules$Constraint)
com/ibm/icu/text/PluralRules/parseConstraint(java.lang.String)#java/lang/String/toLowerCase(java.util.Locale)
com/ibm/icu/text/PluralRules/parseConstraint(java.lang.String)#java/lang/String/equals(java.lang.Object)
com/ibm/icu/text/PluralRules/parseConstraint(java.lang.String)#com/ibm/icu/text/PluralRules$AndConstraint/AndConstraint(com.ibm.icu.text.PluralRules$Constraint,com.ibm.icu.text.PluralRules$Constraint)
com/ibm/icu/text/PluralRules/parseRule(java.lang.String)#java/lang/String/length()
com/ibm/icu/text/PluralRules/parseRule(java.lang.String)#com/ibm/icu/text/PluralRules$ConstrainedRule/ConstrainedRule(java.lang.String,com.ibm.icu.text.PluralRules$Constraint)
com/ibm/icu/text/PluralRules/parseRule(java.lang.String)#java/lang/String/substring(int,int)
com/ibm/icu/text/PluralRules/parseRule(java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/ibm/icu/text/PluralRules/parseRule(java.lang.String)#java/text/ParseException/ParseException(java.lang.String,int)
com/ibm/icu/text/PluralRules/parseRule(java.lang.String)#java/lang/String/substring(int)
com/ibm/icu/text/PluralRules/parseRule(java.lang.String)#java/lang/String/indexOf(int)
com/ibm/icu/text/PluralRules/parseRule(java.lang.String)#java/lang/StringBuilder/toString()
com/ibm/icu/text/PluralRules/parseRule(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/ibm/icu/text/PluralRules/parseRule(java.lang.String)#java/lang/String/trim()
com/ibm/icu/text/PluralRules/getKeywordStatus(java.lang.String,int,java.util.Set,com.ibm.icu.util.Output)#java/util/HashSet/iterator()
com/ibm/icu/text/PluralRules/getKeywordStatus(java.lang.String,int,java.util.Set,com.ibm.icu.util.Output)#java/lang/Double/valueOf(double)
com/ibm/icu/text/PluralRules/getKeywordStatus(java.lang.String,int,java.util.Set,com.ibm.icu.util.Output)#java/util/Set/size()
com/ibm/icu/text/PluralRules/getKeywordStatus(java.lang.String,int,java.util.Set,com.ibm.icu.util.Output)#java/util/Collections/emptySet()
com/ibm/icu/text/PluralRules/getKeywordStatus(java.lang.String,int,java.util.Set,com.ibm.icu.util.Output)#java/util/Collection/size()
com/ibm/icu/text/PluralRules/getKeywordStatus(java.lang.String,int,java.util.Set,com.ibm.icu.util.Output)#java/util/Set/contains(java.lang.Object)
com/ibm/icu/text/PluralRules/getKeywordStatus(java.lang.String,int,java.util.Set,com.ibm.icu.util.Output)#java/util/Set/iterator()
com/ibm/icu/text/PluralRules/getKeywordStatus(java.lang.String,int,java.util.Set,com.ibm.icu.util.Output)#java/util/HashSet/size()
com/ibm/icu/text/PluralRules/getKeywordStatus(java.lang.String,int,java.util.Set,com.ibm.icu.util.Output)#java/util/Collection/iterator()
com/ibm/icu/text/PluralRules/getKeywordStatus(java.lang.String,int,java.util.Set,com.ibm.icu.util.Output)#com/ibm/icu/text/PluralRules$RuleList/getKeywords()
com/ibm/icu/text/PluralRules/getKeywordStatus(java.lang.String,int,java.util.Set,com.ibm.icu.util.Output)#java/util/HashSet/HashSet(java.util.Collection)
com/ibm/icu/text/PluralRules/getKeywordStatus(java.lang.String,int,java.util.Set,com.ibm.icu.util.Output)#java/util/Iterator/hasNext()
com/ibm/icu/text/PluralRules/getKeywordStatus(java.lang.String,int,java.util.Set,com.ibm.icu.util.Output)#java/util/HashSet/remove(java.lang.Object)
com/ibm/icu/text/PluralRules/getKeywordStatus(java.lang.String,int,java.util.Set,com.ibm.icu.util.Output)#java/util/Iterator/next()
com/ibm/icu/text/PluralRules/getKeywordStatus(java.lang.String,int,java.util.Set,com.ibm.icu.util.Output)#java/lang/Double/doubleValue()
com/ibm/icu/text/PluralRules/initKeyMaps()#java/util/Map/put(java.lang.Object,java.lang.Object)
com/ibm/icu/text/PluralRules/initKeyMaps()#java/util/ArrayList/ArrayList(int)
com/ibm/icu/text/PluralRules/initKeyMaps()#java/util/Iterator/hasNext()
com/ibm/icu/text/PluralRules/initKeyMaps()#java/lang/Math/max(int,int)
com/ibm/icu/text/PluralRules/initKeyMaps()#java/util/Map/get(java.lang.Object)
com/ibm/icu/text/PluralRules/initKeyMaps()#java/util/Collections/emptyList()
com/ibm/icu/text/PluralRules/initKeyMaps()#java/util/List/size()
com/ibm/icu/text/PluralRules/initKeyMaps()#java/util/Collections/unmodifiableList(java.util.List)
com/ibm/icu/text/PluralRules/initKeyMaps()#java/util/Map/containsKey(java.lang.Object)
com/ibm/icu/text/PluralRules/initKeyMaps()#java/util/List/add(java.lang.Object)
com/ibm/icu/text/PluralRules/initKeyMaps()#java/util/Map$Entry/getValue()
com/ibm/icu/text/PluralRules/initKeyMaps()#java/util/Map/entrySet()
com/ibm/icu/text/PluralRules/initKeyMaps()#java/lang/Boolean/booleanValue()
com/ibm/icu/text/PluralRules/initKeyMaps()#java/lang/Double/valueOf(double)
com/ibm/icu/text/PluralRules/initKeyMaps()#java/util/Set/size()
com/ibm/icu/text/PluralRules/initKeyMaps()#java/util/Map$Entry/getKey()
com/ibm/icu/text/PluralRules/initKeyMaps()#com/ibm/icu/text/PluralRules$RuleList/isLimited(java.lang.String)
com/ibm/icu/text/PluralRules/initKeyMaps()#java/util/Iterator/next()
com/ibm/icu/text/PluralRules/initKeyMaps()#java/util/HashMap/HashMap()
com/ibm/icu/text/PluralRules/initKeyMaps()#java/lang/Boolean/valueOf(boolean)
com/ibm/icu/text/PluralRules/initKeyMaps()#java/util/Set/iterator()
com/ibm/icu/impl/SortedSetRelation/doOperation(java.util.SortedSet,int,java.util.SortedSet)#java/util/SortedSet/addAll(java.util.Collection)
com/ibm/icu/impl/SortedSetRelation/doOperation(java.util.SortedSet,int,java.util.SortedSet)#java/lang/StringBuilder/append(java.lang.String)
com/ibm/icu/impl/SortedSetRelation/doOperation(java.util.SortedSet,int,java.util.SortedSet)#java/lang/StringBuilder/append(int)
com/ibm/icu/impl/SortedSetRelation/doOperation(java.util.SortedSet,int,java.util.SortedSet)#java/util/SortedSet/removeAll(java.util.Collection)
com/ibm/icu/impl/SortedSetRelation/doOperation(java.util.SortedSet,int,java.util.SortedSet)#java/util/TreeSet/TreeSet(java.util.SortedSet)
com/ibm/icu/impl/SortedSetRelation/doOperation(java.util.SortedSet,int,java.util.SortedSet)#java/lang/StringBuilder/StringBuilder()
com/ibm/icu/impl/SortedSetRelation/doOperation(java.util.SortedSet,int,java.util.SortedSet)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/ibm/icu/impl/SortedSetRelation/doOperation(java.util.SortedSet,int,java.util.SortedSet)#java/util/SortedSet/retainAll(java.util.Collection)
com/ibm/icu/impl/SortedSetRelation/doOperation(java.util.SortedSet,int,java.util.SortedSet)#java/util/TreeSet/removeAll(java.util.Collection)
com/ibm/icu/impl/SortedSetRelation/doOperation(java.util.SortedSet,int,java.util.SortedSet)#java/lang/StringBuilder/toString()
com/ibm/icu/impl/SortedSetRelation/doOperation(java.util.SortedSet,int,java.util.SortedSet)#java/util/SortedSet/clear()
com/ibm/icu/impl/SortedSetRelation/hasRelation(java.util.SortedSet,int,java.util.SortedSet)#java/util/SortedSet/size()
com/ibm/icu/impl/SortedSetRelation/hasRelation(java.util.SortedSet,int,java.util.SortedSet)#java/lang/StringBuilder/append(java.lang.String)
com/ibm/icu/impl/SortedSetRelation/hasRelation(java.util.SortedSet,int,java.util.SortedSet)#java/lang/StringBuilder/append(int)
com/ibm/icu/impl/SortedSetRelation/hasRelation(java.util.SortedSet,int,java.util.SortedSet)#java/util/Iterator/next()
com/ibm/icu/impl/SortedSetRelation/hasRelation(java.util.SortedSet,int,java.util.SortedSet)#java/util/SortedSet/iterator()
com/ibm/icu/impl/SortedSetRelation/hasRelation(java.util.SortedSet,int,java.util.SortedSet)#java/lang/StringBuilder/StringBuilder()
com/ibm/icu/impl/SortedSetRelation/hasRelation(java.util.SortedSet,int,java.util.SortedSet)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/ibm/icu/impl/SortedSetRelation/hasRelation(java.util.SortedSet,int,java.util.SortedSet)#java/lang/StringBuilder/toString()
com/ibm/icu/impl/SortedSetRelation/hasRelation(java.util.SortedSet,int,java.util.SortedSet)#java/util/Iterator/hasNext()
com/ibm/icu/impl/SortedSetRelation/hasRelation(java.util.SortedSet,int,java.util.SortedSet)#java/lang/Comparable/compareTo(java.lang.Object)
com/ibm/icu/text/TimeUnitFormat/parseObject(java.lang.String,java.text.ParsePosition)#java/text/ParsePosition/setIndex(int)
com/ibm/icu/text/TimeUnitFormat/parseObject(java.lang.String,java.text.ParsePosition)#java/util/Iterator/hasNext()
com/ibm/icu/text/TimeUnitFormat/parseObject(java.lang.String,java.text.ParsePosition)#java/lang/String/equals(java.lang.Object)
com/ibm/icu/text/TimeUnitFormat/parseObject(java.lang.String,java.text.ParsePosition)#java/text/ParsePosition/getErrorIndex()
com/ibm/icu/text/TimeUnitFormat/parseObject(java.lang.String,java.text.ParsePosition)#java/util/Set/iterator()
com/ibm/icu/text/TimeUnitFormat/parseObject(java.lang.String,java.text.ParsePosition)#java/lang/Integer/valueOf(int)
com/ibm/icu/text/TimeUnitFormat/parseObject(java.lang.String,java.text.ParsePosition)#java/util/Map$Entry/getValue()
com/ibm/icu/text/TimeUnitFormat/parseObject(java.lang.String,java.text.ParsePosition)#java/util/Map/entrySet()
com/ibm/icu/text/TimeUnitFormat/parseObject(java.lang.String,java.text.ParsePosition)#java/text/ParsePosition/getIndex()
com/ibm/icu/text/TimeUnitFormat/parseObject(java.lang.String,java.text.ParsePosition)#java/lang/Number/doubleValue()
com/ibm/icu/text/TimeUnitFormat/parseObject(java.lang.String,java.text.ParsePosition)#java/util/Map$Entry/getKey()
com/ibm/icu/text/TimeUnitFormat/parseObject(java.lang.String,java.text.ParsePosition)#java/util/Map/get(java.lang.Object)
com/ibm/icu/text/TimeUnitFormat/parseObject(java.lang.String,java.text.ParsePosition)#java/util/Iterator/next()
com/ibm/icu/text/TimeUnitFormat/parseObject(java.lang.String,java.text.ParsePosition)#java/util/Map/keySet()
com/ibm/icu/text/TimeUnitFormat/parseObject(java.lang.String,java.text.ParsePosition)#java/text/ParsePosition/setErrorIndex(int)
com/ibm/icu/text/TimeUnitFormat/setup(java.lang.String,java.util.Map,int,java.util.Set)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/ibm/icu/text/TimeUnitFormat/setup(java.lang.String,java.util.Map,int,java.util.Set)#java/util/Iterator/hasNext()
com/ibm/icu/text/TimeUnitFormat/setup(java.lang.String,java.util.Map,int,java.util.Set)#com/ibm/icu/util/TimeUnit/values()
com/ibm/icu/text/TimeUnitFormat/setup(java.lang.String,java.util.Map,int,java.util.Set)#java/util/Map/get(java.lang.Object)
com/ibm/icu/text/TimeUnitFormat/setup(java.lang.String,java.util.Map,int,java.util.Set)#java/lang/String/equals(java.lang.Object)
com/ibm/icu/text/TimeUnitFormat/setup(java.lang.String,java.util.Map,int,java.util.Set)#java/util/Set/contains(java.lang.Object)
com/ibm/icu/text/TimeUnitFormat/setup(java.lang.String,java.util.Map,int,java.util.Set)#com/ibm/icu/impl/ICUResourceBundle/getSize()
com/ibm/icu/text/TimeUnitFormat/setup(java.lang.String,java.util.Map,int,java.util.Set)#java/util/TreeMap/TreeMap()
com/ibm/icu/text/TimeUnitFormat/setup(java.lang.String,java.util.Map,int,java.util.Set)#java/util/Iterator/next()
com/ibm/icu/text/TimeUnitFormat/setup(java.lang.String,java.util.Map,int,java.util.Set)#java/util/Set/iterator()
com/ibm/icu/text/TimeUnitFormat/setup(java.lang.String,java.util.Map,int,java.util.Set)#com/ibm/icu/impl/ICUResourceBundle/get(int)
com/ibm/icu/impl/URLHandler/<clinit>()#java/lang/Class/forName(java.lang.String)
com/ibm/icu/impl/URLHandler/<clinit>()#java/io/BufferedReader/close()
com/ibm/icu/impl/URLHandler/<clinit>()#java/lang/Class/getDeclaredMethod(java.lang.String,java.lang.Class[])
com/ibm/icu/impl/URLHandler/<clinit>()#java/lang/String/length()
com/ibm/icu/impl/URLHandler/<clinit>()#java/util/HashMap/HashMap()
com/ibm/icu/impl/URLHandler/<clinit>()#java/lang/ClassLoader/getResourceAsStream(java.lang.String)
com/ibm/icu/impl/URLHandler/<clinit>()#java/lang/String/substring(int)
com/ibm/icu/impl/URLHandler/<clinit>()#java/io/PrintStream/println(java.lang.Object)
com/ibm/icu/impl/URLHandler/<clinit>()#java/lang/String/indexOf(int)
com/ibm/icu/impl/URLHandler/<clinit>()#java/lang/StringBuilder/toString()
com/ibm/icu/impl/URLHandler/<clinit>()#java/util/Map/put(java.lang.Object,java.lang.Object)
com/ibm/icu/impl/URLHandler/<clinit>()#java/lang/Class/getResourceAsStream(java.lang.String)
com/ibm/icu/impl/URLHandler/<clinit>()#java/lang/StringBuilder/append(java.lang.String)
com/ibm/icu/impl/URLHandler/<clinit>()#java/lang/String/charAt(int)
com/ibm/icu/impl/URLHandler/<clinit>()#java/lang/String/trim()
com/ibm/icu/impl/URLHandler/<clinit>()#java/io/PrintStream/println(java.lang.String)
com/ibm/icu/impl/URLHandler/<clinit>()#java/lang/String/substring(int,int)
com/ibm/icu/impl/URLHandler/<clinit>()#java/lang/StringBuilder/StringBuilder()
com/ibm/icu/impl/URLHandler/<clinit>()#java/io/InputStreamReader/InputStreamReader(java.io.InputStream)
com/ibm/icu/impl/URLHandler/<clinit>()#java/io/BufferedReader/BufferedReader(java.io.Reader)
com/ibm/icu/impl/URLHandler/<clinit>()#java/io/BufferedReader/readLine()
com/ibm/icu/impl/TextTrieMap/Node/add(char[],int,java.lang.Object)#com/ibm/icu/impl/TextTrieMap$Node/Node(com.ibm.icu.impl.TextTrieMap,char[],java.util.List,java.util.List)
com/ibm/icu/impl/TextTrieMap/Node/add(char[],int,java.lang.Object)#java/util/ListIterator/hasNext()
com/ibm/icu/impl/TextTrieMap/Node/add(char[],int,java.lang.Object)#java/util/ListIterator/add(java.lang.Object)
com/ibm/icu/impl/TextTrieMap/Node/add(char[],int,java.lang.Object)#com/ibm/icu/impl/TextTrieMap$Node/lenMatches(char[],int)
com/ibm/icu/impl/TextTrieMap/Node/add(char[],int,java.lang.Object)#com/ibm/icu/impl/TextTrieMap$Node/split(int)
com/ibm/icu/impl/TextTrieMap/Node/add(char[],int,java.lang.Object)#com/ibm/icu/impl/TextTrieMap$Node/addValue(java.util.List,java.lang.Object)
com/ibm/icu/impl/TextTrieMap/Node/add(char[],int,java.lang.Object)#com/ibm/icu/impl/TextTrieMap$Node/add(char[],int,java.lang.Object)
com/ibm/icu/impl/TextTrieMap/Node/add(char[],int,java.lang.Object)#java/util/ListIterator/previous()
com/ibm/icu/impl/TextTrieMap/Node/add(char[],int,java.lang.Object)#java/util/List/add(java.lang.Object)
com/ibm/icu/impl/TextTrieMap/Node/add(char[],int,java.lang.Object)#java/util/List/listIterator()
com/ibm/icu/impl/TextTrieMap/Node/add(char[],int,java.lang.Object)#java/util/ListIterator/next()
com/ibm/icu/impl/TextTrieMap/Node/add(char[],int,java.lang.Object)#java/util/LinkedList/LinkedList()
com/ibm/icu/util/Calendar/toString()#java/lang/StringBuilder/append(java.lang.String)
com/ibm/icu/util/Calendar/toString()#java/lang/StringBuilder/append(int)
com/ibm/icu/util/Calendar/toString()#java/lang/StringBuilder/append(boolean)
com/ibm/icu/util/Calendar/toString()#java/lang/Class/getName()
com/ibm/icu/util/Calendar/toString()#java/lang/StringBuilder/StringBuilder()
com/ibm/icu/util/Calendar/toString()#java/lang/String/valueOf(long)
com/ibm/icu/util/Calendar/toString()#java/lang/StringBuilder/append(char)
com/ibm/icu/util/Calendar/toString()#java/lang/StringBuilder/append(java.lang.Object)
com/ibm/icu/util/Calendar/toString()#java/lang/Object/getClass()
com/ibm/icu/util/Calendar/toString()#java/lang/StringBuilder/toString()
com/ibm/icu/util/Calendar/toString()#java/lang/String/valueOf(int)
com/ibm/icu/util/Calendar/expandOverride(java.lang.String,java.lang.String)#java/text/StringCharacterIterator/StringCharacterIterator(java.lang.String)
com/ibm/icu/util/Calendar/expandOverride(java.lang.String,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/ibm/icu/util/Calendar/expandOverride(java.lang.String,java.lang.String)#java/text/StringCharacterIterator/next()
com/ibm/icu/util/Calendar/expandOverride(java.lang.String,java.lang.String)#java/text/StringCharacterIterator/first()
com/ibm/icu/util/Calendar/expandOverride(java.lang.String,java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/ibm/icu/util/Calendar/expandOverride(java.lang.String,java.lang.String)#java/lang/StringBuilder/append(char)
com/ibm/icu/util/Calendar/expandOverride(java.lang.String,java.lang.String)#java/lang/StringBuilder/length()
com/ibm/icu/util/Calendar/expandOverride(java.lang.String,java.lang.String)#java/lang/String/indexOf(int)
com/ibm/icu/util/Calendar/expandOverride(java.lang.String,java.lang.String)#java/lang/StringBuilder/toString()
com/ibm/icu/text/MessagePattern/prefix(java.lang.String,int)#java/lang/StringBuilder/append(int)
com/ibm/icu/text/MessagePattern/prefix(java.lang.String,int)#java/lang/String/length()
com/ibm/icu/text/MessagePattern/prefix(java.lang.String,int)#java/lang/StringBuilder/StringBuilder(int)
com/ibm/icu/text/MessagePattern/prefix(java.lang.String,int)#java/lang/String/substring(int)
com/ibm/icu/text/MessagePattern/prefix(java.lang.String,int)#java/lang/Character/isHighSurrogate(char)
com/ibm/icu/text/MessagePattern/prefix(java.lang.String,int)#java/lang/StringBuilder/append(java.lang.CharSequence,int,int)
com/ibm/icu/text/MessagePattern/prefix(java.lang.String,int)#java/lang/StringBuilder/toString()
com/ibm/icu/text/MessagePattern/prefix(java.lang.String,int)#java/lang/StringBuilder/append(java.lang.String)
com/ibm/icu/text/MessagePattern/prefix(java.lang.String,int)#java/lang/String/charAt(int)
com/ibm/icu/text/MessagePattern/parsePluralOrSelectStyle(com.ibm.icu.text.MessagePattern$ArgType,int,int)#com/ibm/icu/text/MessagePattern$ArgType/hasPluralStyle()
com/ibm/icu/text/MessagePattern/parsePluralOrSelectStyle(com.ibm.icu.text.MessagePattern$ArgType,int,int)#java/lang/String/regionMatches(int,java.lang.String,int,int)
com/ibm/icu/text/MessagePattern/parsePluralOrSelectStyle(com.ibm.icu.text.MessagePattern$ArgType,int,int)#java/lang/IndexOutOfBoundsException/IndexOutOfBoundsException(java.lang.String)
com/ibm/icu/text/MessagePattern/parsePluralOrSelectStyle(com.ibm.icu.text.MessagePattern$ArgType,int,int)#com/ibm/icu/text/MessagePattern$ArgType/toString()
com/ibm/icu/text/MessagePattern/parsePluralOrSelectStyle(com.ibm.icu.text.MessagePattern$ArgType,int,int)#java/lang/StringBuilder/toString()
com/ibm/icu/text/MessagePattern/parsePluralOrSelectStyle(com.ibm.icu.text.MessagePattern$ArgType,int,int)#java/lang/StringBuilder/append(java.lang.String)
com/ibm/icu/text/MessagePattern/parsePluralOrSelectStyle(com.ibm.icu.text.MessagePattern$ArgType,int,int)#java/lang/String/charAt(int)
com/ibm/icu/text/MessagePattern/parsePluralOrSelectStyle(com.ibm.icu.text.MessagePattern$ArgType,int,int)#java/lang/String/toLowerCase(java.util.Locale)
com/ibm/icu/text/MessagePattern/parsePluralOrSelectStyle(com.ibm.icu.text.MessagePattern$ArgType,int,int)#java/lang/String/length()
com/ibm/icu/text/MessagePattern/parsePluralOrSelectStyle(com.ibm.icu.text.MessagePattern$ArgType,int,int)#java/lang/StringBuilder/StringBuilder()
com/ibm/icu/text/MessagePattern/parsePluralOrSelectStyle(com.ibm.icu.text.MessagePattern$ArgType,int,int)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/ibm/icu/text/MessagePattern/parseMessage(int,int,int,com.ibm.icu.text.MessagePattern$ArgType)#com/ibm/icu/text/MessagePattern$ArgType/hasPluralStyle()
com/ibm/icu/text/MessagePattern/parseMessage(int,int,int,com.ibm.icu.text.MessagePattern$ArgType)#java/lang/String/length()
com/ibm/icu/text/MessagePattern/parseMessage(int,int,int,com.ibm.icu.text.MessagePattern$ArgType)#java/lang/IndexOutOfBoundsException/IndexOutOfBoundsException()
com/ibm/icu/text/MessagePattern/parseMessage(int,int,int,com.ibm.icu.text.MessagePattern$ArgType)#java/lang/StringBuilder/StringBuilder()
com/ibm/icu/text/MessagePattern/parseMessage(int,int,int,com.ibm.icu.text.MessagePattern$ArgType)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/ibm/icu/text/MessagePattern/parseMessage(int,int,int,com.ibm.icu.text.MessagePattern$ArgType)#java/lang/StringBuilder/toString()
com/ibm/icu/text/MessagePattern/parseMessage(int,int,int,com.ibm.icu.text.MessagePattern$ArgType)#java/lang/StringBuilder/append(java.lang.String)
com/ibm/icu/text/MessagePattern/parseMessage(int,int,int,com.ibm.icu.text.MessagePattern$ArgType)#java/lang/String/charAt(int)
com/ibm/icu/text/MessagePattern/parseMessage(int,int,int,com.ibm.icu.text.MessagePattern$ArgType)#java/util/ArrayList/size()
com/ibm/icu/text/MessagePattern/parseMessage(int,int,int,com.ibm.icu.text.MessagePattern$ArgType)#java/lang/String/indexOf(int,int)
com/ibm/icu/text/MessagePattern/parseArg(int,int,int)#java/lang/IndexOutOfBoundsException/IndexOutOfBoundsException(java.lang.String)
com/ibm/icu/text/MessagePattern/parseArg(int,int,int)#java/lang/String/length()
com/ibm/icu/text/MessagePattern/parseArg(int,int,int)#java/util/ArrayList/size()
com/ibm/icu/text/MessagePattern/parseArg(int,int,int)#com/ibm/icu/text/MessagePattern$ArgType/ordinal()
com/ibm/icu/text/MessagePattern/parseArg(int,int,int)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/ibm/icu/text/MessagePattern/parseArg(int,int,int)#java/util/ArrayList/get(int)
com/ibm/icu/text/MessagePattern/parseArg(int,int,int)#com/ibm/icu/text/MessagePattern$Part/access$102(com.ibm.icu.text.MessagePattern$Part,short)
com/ibm/icu/text/MessagePattern/parseArg(int,int,int)#java/lang/StringBuilder/toString()
com/ibm/icu/text/MessagePattern/parseArg(int,int,int)#java/lang/StringBuilder/append(java.lang.String)
com/ibm/icu/text/MessagePattern/parseArg(int,int,int)#java/lang/String/charAt(int)
com/ibm/icu/text/MessagePattern/parseArg(int,int,int)#java/lang/StringBuilder/StringBuilder()
com/ibm/icu/impl/ResourceBundleWrapper/instantiateBundle(java.lang.String,java.lang.String,java.lang.ClassLoader,boolean)#java/lang/Class/newInstance()
com/ibm/icu/impl/ResourceBundleWrapper/instantiateBundle(java.lang.String,java.lang.String,java.lang.ClassLoader,boolean)#com/ibm/icu/impl/ResourceBundleWrapper$1/1(java.lang.ClassLoader,java.lang.String)
com/ibm/icu/impl/ResourceBundleWrapper/instantiateBundle(java.lang.String,java.lang.String,java.lang.ClassLoader,boolean)#com/ibm/icu/impl/ResourceBundleWrapper/loadFromCache(java.lang.ClassLoader,java.lang.String,com.ibm.icu.util.ULocale)
com/ibm/icu/impl/ResourceBundleWrapper/instantiateBundle(java.lang.String,java.lang.String,java.lang.ClassLoader,boolean)#java/lang/String/length()
com/ibm/icu/impl/ResourceBundleWrapper/instantiateBundle(java.lang.String,java.lang.String,java.lang.ClassLoader,boolean)#com/ibm/icu/impl/ResourceBundleWrapper/addToCache(java.lang.ClassLoader,java.lang.String,com.ibm.icu.util.ULocale,com.ibm.icu.util.UResourceBundle)
com/ibm/icu/impl/ResourceBundleWrapper/instantiateBundle(java.lang.String,java.lang.String,java.lang.ClassLoader,boolean)#java/lang/ClassLoader/loadClass(java.lang.String)
com/ibm/icu/impl/ResourceBundleWrapper/instantiateBundle(java.lang.String,java.lang.String,java.lang.ClassLoader,boolean)#java/io/PrintStream/println(java.lang.Object)
com/ibm/icu/impl/ResourceBundleWrapper/instantiateBundle(java.lang.String,java.lang.String,java.lang.ClassLoader,boolean)#java/security/AccessController/doPrivileged(java.security.PrivilegedAction)
com/ibm/icu/impl/ResourceBundleWrapper/instantiateBundle(java.lang.String,java.lang.String,java.lang.ClassLoader,boolean)#java/lang/String/indexOf(int)
com/ibm/icu/impl/ResourceBundleWrapper/instantiateBundle(java.lang.String,java.lang.String,java.lang.ClassLoader,boolean)#java/lang/StringBuilder/toString()
com/ibm/icu/impl/ResourceBundleWrapper/instantiateBundle(java.lang.String,java.lang.String,java.lang.ClassLoader,boolean)#java/lang/StringBuilder/append(java.lang.String)
com/ibm/icu/impl/ResourceBundleWrapper/instantiateBundle(java.lang.String,java.lang.String,java.lang.ClassLoader,boolean)#java/io/PrintStream/println(java.lang.String)
com/ibm/icu/impl/ResourceBundleWrapper/instantiateBundle(java.lang.String,java.lang.String,java.lang.ClassLoader,boolean)#java/lang/Class/asSubclass(java.lang.Class)
com/ibm/icu/impl/ResourceBundleWrapper/instantiateBundle(java.lang.String,java.lang.String,java.lang.ClassLoader,boolean)#java/io/InputStream/close()
com/ibm/icu/impl/ResourceBundleWrapper/instantiateBundle(java.lang.String,java.lang.String,java.lang.ClassLoader,boolean)#java/lang/String/substring(int,int)
com/ibm/icu/impl/ResourceBundleWrapper/instantiateBundle(java.lang.String,java.lang.String,java.lang.ClassLoader,boolean)#java/lang/StringBuilder/StringBuilder()
com/ibm/icu/impl/ResourceBundleWrapper/instantiateBundle(java.lang.String,java.lang.String,java.lang.ClassLoader,boolean)#java/lang/String/indexOf(java.lang.String)
com/ibm/icu/impl/ResourceBundleWrapper/instantiateBundle(java.lang.String,java.lang.String,java.lang.ClassLoader,boolean)#java/util/PropertyResourceBundle/PropertyResourceBundle(java.io.InputStream)
com/ibm/icu/impl/ResourceBundleWrapper/instantiateBundle(java.lang.String,java.lang.String,java.lang.ClassLoader,boolean)#java/lang/String/lastIndexOf(int)
com/ibm/icu/impl/ResourceBundleWrapper/instantiateBundle(java.lang.String,java.lang.String,java.lang.ClassLoader,boolean)#java/lang/String/replace(char,char)
com/ibm/icu/impl/ResourceBundleWrapper/instantiateBundle(java.lang.String,java.lang.String,java.lang.ClassLoader,boolean)#java/io/BufferedInputStream/BufferedInputStream(java.io.InputStream)
com/ibm/icu/impl/ResourceBundleWrapper/instantiateBundle(java.lang.String,java.lang.String,java.lang.ClassLoader,boolean)#com/ibm/icu/impl/ResourceBundleWrapper/setParent(java.util.ResourceBundle)
com/ibm/icu/impl/locale/LocaleExtensions/toID(java.util.SortedMap)#java/util/Iterator/hasNext()
com/ibm/icu/impl/locale/LocaleExtensions/toID(java.util.SortedMap)#java/util/Iterator/next()
com/ibm/icu/impl/locale/LocaleExtensions/toID(java.util.SortedMap)#java/lang/StringBuilder/StringBuilder()
com/ibm/icu/impl/locale/LocaleExtensions/toID(java.util.SortedMap)#java/util/Set/iterator()
com/ibm/icu/impl/locale/LocaleExtensions/toID(java.util.SortedMap)#java/lang/StringBuilder/length()
com/ibm/icu/impl/locale/LocaleExtensions/toID(java.util.SortedMap)#java/lang/Character/charValue()
com/ibm/icu/impl/locale/LocaleExtensions/toID(java.util.SortedMap)#java/lang/StringBuilder/toString()
com/ibm/icu/impl/locale/LocaleExtensions/toID(java.util.SortedMap)#java/lang/StringBuilder/append(java.lang.String)
com/ibm/icu/impl/locale/LocaleExtensions/toID(java.util.SortedMap)#java/util/Map$Entry/getKey()
com/ibm/icu/impl/locale/LocaleExtensions/toID(java.util.SortedMap)#java/lang/StringBuilder/append(java.lang.Object)
com/ibm/icu/impl/locale/LocaleExtensions/toID(java.util.SortedMap)#java/util/Map$Entry/getValue()
com/ibm/icu/impl/locale/LocaleExtensions/toID(java.util.SortedMap)#java/util/SortedMap/entrySet()
com/ibm/icu/text/DateIntervalFormat/initializeIntervalPattern(java.lang.String,com.ibm.icu.util.ULocale)#java/lang/StringBuilder/append(java.lang.String)
com/ibm/icu/text/DateIntervalFormat/initializeIntervalPattern(java.lang.String,com.ibm.icu.util.ULocale)#java/lang/String/length()
com/ibm/icu/text/DateIntervalFormat/initializeIntervalPattern(java.lang.String,com.ibm.icu.util.ULocale)#java/lang/StringBuilder/length()
com/ibm/icu/text/DateIntervalFormat/initializeIntervalPattern(java.lang.String,com.ibm.icu.util.ULocale)#com/ibm/icu/text/DateIntervalInfo$PatternInfo/PatternInfo(java.lang.String,java.lang.String,boolean)
com/ibm/icu/text/DateIntervalFormat/initializeIntervalPattern(java.lang.String,com.ibm.icu.util.ULocale)#java/lang/StringBuilder/toString()
com/ibm/icu/text/DateIntervalFormat/initializeIntervalPattern(java.lang.String,com.ibm.icu.util.ULocale)#java/util/HashMap/HashMap()
com/ibm/icu/text/DateIntervalFormat/initializeIntervalPattern(java.lang.String,com.ibm.icu.util.ULocale)#java/util/HashMap/put(java.lang.Object,java.lang.Object)
com/ibm/icu/text/DateIntervalFormat/initializeIntervalPattern(java.lang.String,com.ibm.icu.util.ULocale)#java/lang/StringBuilder/StringBuilder(int)
com/ibm/icu/text/DateIntervalFormat/initializeIntervalPattern(java.lang.String,com.ibm.icu.util.ULocale)#java/lang/StringBuilder/StringBuilder()
com/ibm/icu/text/DateIntervalFormat/genIntervalPattern(int,java.lang.String,java.lang.String,int,java.util.Map)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/ibm/icu/text/DateIntervalFormat/genIntervalPattern(int,java.lang.String,java.lang.String,int,java.util.Map)#java/lang/StringBuilder/append(java.lang.String)
com/ibm/icu/text/DateIntervalFormat/genIntervalPattern(int,java.lang.String,java.lang.String,int,java.util.Map)#com/ibm/icu/text/DateIntervalInfo$PatternInfo/getSecondPart()
com/ibm/icu/text/DateIntervalFormat/genIntervalPattern(int,java.lang.String,java.lang.String,int,java.util.Map)#java/lang/String/length()
com/ibm/icu/text/DateIntervalFormat/genIntervalPattern(int,java.lang.String,java.lang.String,int,java.util.Map)#java/lang/StringBuilder/StringBuilder()
com/ibm/icu/text/DateIntervalFormat/genIntervalPattern(int,java.lang.String,java.lang.String,int,java.util.Map)#com/ibm/icu/text/DateIntervalInfo$PatternInfo/PatternInfo(java.lang.String,java.lang.String,boolean)
com/ibm/icu/text/DateIntervalFormat/genIntervalPattern(int,java.lang.String,java.lang.String,int,java.util.Map)#java/lang/StringBuilder/toString()
com/ibm/icu/text/DateIntervalFormat/genIntervalPattern(int,java.lang.String,java.lang.String,int,java.util.Map)#com/ibm/icu/text/DateIntervalFormat$SkeletonAndItsBestMatch/SkeletonAndItsBestMatch(java.lang.String,java.lang.String)
com/ibm/icu/text/DateIntervalFormat/genIntervalPattern(int,java.lang.String,java.lang.String,int,java.util.Map)#com/ibm/icu/text/DateIntervalInfo$PatternInfo/getFirstPart()
com/ibm/icu/text/DateIntervalFormat/genIntervalPattern(int,java.lang.String,java.lang.String,int,java.util.Map)#com/ibm/icu/text/DateIntervalInfo$PatternInfo/firstDateInPtnIsLaterDate()
com/ibm/icu/text/RuleBasedNumberFormat/postProcess(java.lang.StringBuffer,com.ibm.icu.text.NFRuleSet)#java/lang/Class/forName(java.lang.String)
com/ibm/icu/text/RuleBasedNumberFormat/postProcess(java.lang.StringBuffer,com.ibm.icu.text.NFRuleSet)#java/lang/Class/newInstance()
com/ibm/icu/text/RuleBasedNumberFormat/postProcess(java.lang.StringBuffer,com.ibm.icu.text.NFRuleSet)#java/lang/String/length()
com/ibm/icu/text/RuleBasedNumberFormat/postProcess(java.lang.StringBuffer,com.ibm.icu.text.NFRuleSet)#java/lang/Class/getName()
com/ibm/icu/text/RuleBasedNumberFormat/postProcess(java.lang.StringBuffer,com.ibm.icu.text.NFRuleSet)#java/lang/String/substring(int,int)
com/ibm/icu/text/RuleBasedNumberFormat/postProcess(java.lang.StringBuffer,com.ibm.icu.text.NFRuleSet)#java/lang/Object/getClass()
com/ibm/icu/text/RuleBasedNumberFormat/postProcess(java.lang.StringBuffer,com.ibm.icu.text.NFRuleSet)#java/lang/StringBuilder/append(java.lang.String)
com/ibm/icu/text/RuleBasedNumberFormat/postProcess(java.lang.StringBuffer,com.ibm.icu.text.NFRuleSet)#java/lang/String/trim()
com/ibm/icu/text/RuleBasedNumberFormat/postProcess(java.lang.StringBuffer,com.ibm.icu.text.NFRuleSet)#java/io/PrintStream/println(java.lang.String)
com/ibm/icu/text/RuleBasedNumberFormat/postProcess(java.lang.StringBuffer,com.ibm.icu.text.NFRuleSet)#java/lang/StringBuilder/StringBuilder()
com/ibm/icu/text/RuleBasedNumberFormat/postProcess(java.lang.StringBuffer,com.ibm.icu.text.NFRuleSet)#java/lang/String/indexOf(java.lang.String)
com/ibm/icu/text/RuleBasedNumberFormat/postProcess(java.lang.StringBuffer,com.ibm.icu.text.NFRuleSet)#java/lang/StringBuilder/toString()
com/ibm/icu/text/RuleBasedNumberFormat/postProcess(java.lang.StringBuffer,com.ibm.icu.text.NFRuleSet)#java/lang/Exception/getMessage()
com/ibm/icu/text/RuleBasedNumberFormat/init(java.lang.String,java.lang.String[][])#java/lang/StringBuilder/substring(int,int)
com/ibm/icu/text/RuleBasedNumberFormat/init(java.lang.String,java.lang.String[][])#java/lang/StringBuilder/substring(int)
com/ibm/icu/text/RuleBasedNumberFormat/init(java.lang.String,java.lang.String[][])#java/lang/StringBuilder/indexOf(java.lang.String,int)
com/ibm/icu/text/RuleBasedNumberFormat/init(java.lang.String,java.lang.String[][])#java/lang/StringBuilder/indexOf(java.lang.String)
com/ibm/icu/text/RuleBasedNumberFormat/init(java.lang.String,java.lang.String[][])#java/lang/StringBuilder/append(java.lang.String)
com/ibm/icu/text/RuleBasedNumberFormat/init(java.lang.String,java.lang.String[][])#java/lang/String/equals(java.lang.Object)
com/ibm/icu/text/RuleBasedNumberFormat/init(java.lang.String,java.lang.String[][])#java/lang/StringBuilder/StringBuilder()
com/ibm/icu/text/RuleBasedNumberFormat/init(java.lang.String,java.lang.String[][])#java/lang/String/startsWith(java.lang.String)
com/ibm/icu/text/RuleBasedNumberFormat/init(java.lang.String,java.lang.String[][])#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/ibm/icu/text/RuleBasedNumberFormat/init(java.lang.String,java.lang.String[][])#java/lang/StringBuilder/toString()
com/ibm/icu/text/RuleBasedNumberFormat/initLocalizations(java.lang.String[][])#java/util/Map/put(java.lang.Object,java.lang.Object)
com/ibm/icu/text/RuleBasedNumberFormat/initLocalizations(java.lang.String[][])#java/lang/StringBuilder/append(java.lang.String)
com/ibm/icu/text/RuleBasedNumberFormat/initLocalizations(java.lang.String[][])#java/lang/StringBuilder/append(int)
com/ibm/icu/text/RuleBasedNumberFormat/initLocalizations(java.lang.String[][])#java/util/Map/isEmpty()
com/ibm/icu/text/RuleBasedNumberFormat/initLocalizations(java.lang.String[][])#[Ljava/lang/String;/clone()
com/ibm/icu/text/RuleBasedNumberFormat/initLocalizations(java.lang.String[][])#java/util/HashMap/HashMap()
com/ibm/icu/text/RuleBasedNumberFormat/initLocalizations(java.lang.String[][])#java/lang/StringBuilder/StringBuilder()
com/ibm/icu/text/RuleBasedNumberFormat/initLocalizations(java.lang.String[][])#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/ibm/icu/text/RuleBasedNumberFormat/initLocalizations(java.lang.String[][])#java/lang/System/arraycopy(java.lang.Object,int,java.lang.Object,int,int)
com/ibm/icu/text/RuleBasedNumberFormat/initLocalizations(java.lang.String[][])#java/lang/StringBuilder/toString()
com/ibm/icu/text/MessagePatternUtil/buildPluralStyleNode(com.ibm.icu.text.MessagePattern,int,int,com.ibm.icu.text.MessagePattern$ArgType)#com/ibm/icu/text/MessagePattern$Part$Type/hasNumericValue()
com/ibm/icu/text/MessagePatternUtil/buildPluralStyleNode(com.ibm.icu.text.MessagePattern,int,int,com.ibm.icu.text.MessagePattern$ArgType)#com/ibm/icu/text/MessagePatternUtil$VariantNode/access$1802(com.ibm.icu.text.MessagePatternUtil$VariantNode,double)
com/ibm/icu/text/MessagePatternUtil/buildPluralStyleNode(com.ibm.icu.text.MessagePattern,int,int,com.ibm.icu.text.MessagePattern$ArgType)#com/ibm/icu/text/MessagePattern$Part/getType()
com/ibm/icu/text/MessagePatternUtil/buildPluralStyleNode(com.ibm.icu.text.MessagePattern,int,int,com.ibm.icu.text.MessagePattern$ArgType)#com/ibm/icu/text/MessagePatternUtil$ComplexArgStyleNode/access$2100(com.ibm.icu.text.MessagePatternUtil$ComplexArgStyleNode)
com/ibm/icu/text/MessagePatternUtil/buildPluralStyleNode(com.ibm.icu.text.MessagePattern,int,int,com.ibm.icu.text.MessagePattern$ArgType)#com/ibm/icu/text/MessagePatternUtil$ComplexArgStyleNode/ComplexArgStyleNode(com.ibm.icu.text.MessagePattern$ArgType,com.ibm.icu.text.MessagePatternUtil$1)
com/ibm/icu/text/MessagePatternUtil/buildPluralStyleNode(com.ibm.icu.text.MessagePattern,int,int,com.ibm.icu.text.MessagePattern$ArgType)#com/ibm/icu/text/MessagePatternUtil$VariantNode/access$1702(com.ibm.icu.text.MessagePatternUtil$VariantNode,java.lang.String)
com/ibm/icu/text/MessagePatternUtil/buildPluralStyleNode(com.ibm.icu.text.MessagePattern,int,int,com.ibm.icu.text.MessagePattern$ArgType)#com/ibm/icu/text/MessagePatternUtil$ComplexArgStyleNode/access$2000(com.ibm.icu.text.MessagePatternUtil$ComplexArgStyleNode,com.ibm.icu.text.MessagePatternUtil$VariantNode)
com/ibm/icu/text/MessagePatternUtil/buildPluralStyleNode(com.ibm.icu.text.MessagePattern,int,int,com.ibm.icu.text.MessagePattern$ArgType)#com/ibm/icu/text/MessagePatternUtil$VariantNode/VariantNode(com.ibm.icu.text.MessagePatternUtil$1)
com/ibm/icu/text/MessagePatternUtil/buildPluralStyleNode(com.ibm.icu.text.MessagePattern,int,int,com.ibm.icu.text.MessagePattern$ArgType)#com/ibm/icu/text/MessagePatternUtil$ComplexArgStyleNode/access$2202(com.ibm.icu.text.MessagePatternUtil$ComplexArgStyleNode,boolean)
com/ibm/icu/text/MessagePatternUtil/buildPluralStyleNode(com.ibm.icu.text.MessagePattern,int,int,com.ibm.icu.text.MessagePattern$ArgType)#com/ibm/icu/text/MessagePatternUtil$ComplexArgStyleNode/access$2302(com.ibm.icu.text.MessagePatternUtil$ComplexArgStyleNode,double)
com/ibm/icu/text/MessagePatternUtil/buildPluralStyleNode(com.ibm.icu.text.MessagePattern,int,int,com.ibm.icu.text.MessagePattern$ArgType)#com/ibm/icu/text/MessagePatternUtil$VariantNode/access$1902(com.ibm.icu.text.MessagePatternUtil$VariantNode,com.ibm.icu.text.MessagePatternUtil$MessageNode)
com/ibm/icu/text/MessagePatternUtil/buildArgNode(com.ibm.icu.text.MessagePattern,int,int)#com/ibm/icu/text/MessagePattern$Part/getType()
com/ibm/icu/text/MessagePatternUtil/buildArgNode(com.ibm.icu.text.MessagePattern,int,int)#com/ibm/icu/text/MessagePatternUtil$ArgNode/access$1002(com.ibm.icu.text.MessagePatternUtil$ArgNode,java.lang.String)
com/ibm/icu/text/MessagePatternUtil/buildArgNode(com.ibm.icu.text.MessagePattern,int,int)#com/ibm/icu/text/MessagePatternUtil$ArgNode/access$1202(com.ibm.icu.text.MessagePatternUtil$ArgNode,java.lang.String)
com/ibm/icu/text/MessagePatternUtil/buildArgNode(com.ibm.icu.text.MessagePattern,int,int)#com/ibm/icu/text/MessagePatternUtil$ArgNode/access$902(com.ibm.icu.text.MessagePatternUtil$ArgNode,com.ibm.icu.text.MessagePattern$ArgType)
com/ibm/icu/text/MessagePatternUtil/buildArgNode(com.ibm.icu.text.MessagePattern,int,int)#com/ibm/icu/text/MessagePattern$ArgType/ordinal()
com/ibm/icu/text/MessagePatternUtil/buildArgNode(com.ibm.icu.text.MessagePattern,int,int)#com/ibm/icu/text/MessagePatternUtil$ArgNode/access$1402(com.ibm.icu.text.MessagePatternUtil$ArgNode,com.ibm.icu.text.MessagePatternUtil$ComplexArgStyleNode)
com/ibm/icu/text/MessagePatternUtil/buildArgNode(com.ibm.icu.text.MessagePattern,int,int)#com/ibm/icu/text/MessagePattern$Part/getArgType()
com/ibm/icu/text/MessagePatternUtil/buildArgNode(com.ibm.icu.text.MessagePattern,int,int)#com/ibm/icu/text/MessagePatternUtil$ArgNode/access$1102(com.ibm.icu.text.MessagePatternUtil$ArgNode,int)
com/ibm/icu/text/MessagePatternUtil/buildArgNode(com.ibm.icu.text.MessagePattern,int,int)#com/ibm/icu/text/MessagePatternUtil$ArgNode/access$1302(com.ibm.icu.text.MessagePatternUtil$ArgNode,java.lang.String)
com/ibm/icu/text/MessagePatternUtil/buildArgNode(com.ibm.icu.text.MessagePattern,int,int)#com/ibm/icu/text/MessagePattern$Part/getValue()
com/ibm/icu/text/MessagePatternUtil/buildArgNode(com.ibm.icu.text.MessagePattern,int,int)#com/ibm/icu/text/MessagePatternUtil$ArgNode/access$800()
com/ibm/icu/text/MessagePatternUtil/buildMessageNode(com.ibm.icu.text.MessagePattern,int,int)#com/ibm/icu/text/MessagePatternUtil$MessageNode/access$500(com.ibm.icu.text.MessagePatternUtil$MessageNode,com.ibm.icu.text.MessagePatternUtil$MessageContentsNode)
com/ibm/icu/text/MessagePatternUtil/buildMessageNode(com.ibm.icu.text.MessagePattern,int,int)#com/ibm/icu/text/MessagePatternUtil$MessageNode/MessageNode(com.ibm.icu.text.MessagePatternUtil$1)
com/ibm/icu/text/MessagePatternUtil/buildMessageNode(com.ibm.icu.text.MessagePattern,int,int)#com/ibm/icu/text/MessagePattern$Part/getLimit()
com/ibm/icu/text/MessagePatternUtil/buildMessageNode(com.ibm.icu.text.MessagePattern,int,int)#com/ibm/icu/text/MessagePatternUtil$MessageContentsNode/access$600()
com/ibm/icu/text/MessagePatternUtil/buildMessageNode(com.ibm.icu.text.MessagePattern,int,int)#com/ibm/icu/text/MessagePattern$Part/getIndex()
com/ibm/icu/text/MessagePatternUtil/buildMessageNode(com.ibm.icu.text.MessagePattern,int,int)#com/ibm/icu/text/MessagePattern$Part/getType()
com/ibm/icu/text/MessagePatternUtil/buildMessageNode(com.ibm.icu.text.MessagePattern,int,int)#com/ibm/icu/text/MessagePatternUtil$MessageNode/access$700(com.ibm.icu.text.MessagePatternUtil$MessageNode)
com/ibm/icu/text/MessagePatternUtil/buildMessageNode(com.ibm.icu.text.MessagePattern,int,int)#com/ibm/icu/text/MessagePatternUtil$TextNode/TextNode(java.lang.String,com.ibm.icu.text.MessagePatternUtil$1)
com/ibm/icu/text/MessagePatternUtil/buildMessageNode(com.ibm.icu.text.MessagePattern,int,int)#java/lang/String/substring(int,int)
com/ibm/icu/text/TransliteratorIDParser/parseCompoundID(java.lang.String,int,java.lang.StringBuffer,java.util.List,com.ibm.icu.text.UnicodeSet[])#java/lang/StringBuffer/append(char)
com/ibm/icu/text/TransliteratorIDParser/parseCompoundID(java.lang.String,int,java.lang.StringBuffer,java.util.List,com.ibm.icu.text.UnicodeSet[])#java/lang/String/length()
com/ibm/icu/text/TransliteratorIDParser/parseCompoundID(java.lang.String,int,java.lang.StringBuffer,java.util.List,com.ibm.icu.text.UnicodeSet[])#java/util/List/size()
com/ibm/icu/text/TransliteratorIDParser/parseCompoundID(java.lang.String,int,java.lang.StringBuffer,java.util.List,com.ibm.icu.text.UnicodeSet[])#java/util/List/clear()
com/ibm/icu/text/TransliteratorIDParser/parseCompoundID(java.lang.String,int,java.lang.StringBuffer,java.util.List,com.ibm.icu.text.UnicodeSet[])#java/util/List/add(java.lang.Object)
com/ibm/icu/text/TransliteratorIDParser/parseCompoundID(java.lang.String,int,java.lang.StringBuffer,java.util.List,com.ibm.icu.text.UnicodeSet[])#java/util/List/get(int)
com/ibm/icu/text/TransliteratorIDParser/parseCompoundID(java.lang.String,int,java.lang.StringBuffer,java.util.List,com.ibm.icu.text.UnicodeSet[])#java/util/List/add(int,java.lang.Object)
com/ibm/icu/text/TransliteratorIDParser/parseCompoundID(java.lang.String,int,java.lang.StringBuffer,java.util.List,com.ibm.icu.text.UnicodeSet[])#java/lang/StringBuffer/setLength(int)
com/ibm/icu/text/TransliteratorIDParser/parseCompoundID(java.lang.String,int,java.lang.StringBuffer,java.util.List,com.ibm.icu.text.UnicodeSet[])#java/lang/StringBuffer/append(java.lang.String)
com/ibm/icu/text/TransliteratorIDParser/parseGlobalFilter(java.lang.String,int[],int,int[],java.lang.StringBuffer)#java/lang/String/valueOf(char)
com/ibm/icu/text/TransliteratorIDParser/parseGlobalFilter(java.lang.String,int[],int,int[],java.lang.StringBuffer)#java/lang/StringBuilder/append(java.lang.String)
com/ibm/icu/text/TransliteratorIDParser/parseGlobalFilter(java.lang.String,int[],int,int[],java.lang.StringBuffer)#java/lang/String/substring(int,int)
com/ibm/icu/text/TransliteratorIDParser/parseGlobalFilter(java.lang.String,int[],int,int[],java.lang.StringBuffer)#java/lang/StringBuilder/StringBuilder()
com/ibm/icu/text/TransliteratorIDParser/parseGlobalFilter(java.lang.String,int[],int,int[],java.lang.StringBuffer)#java/lang/StringBuilder/append(char)
com/ibm/icu/text/TransliteratorIDParser/parseGlobalFilter(java.lang.String,int[],int,int[],java.lang.StringBuffer)#java/lang/StringBuffer/append(java.lang.String)
com/ibm/icu/text/TransliteratorIDParser/parseGlobalFilter(java.lang.String,int[],int,int[],java.lang.StringBuffer)#java/lang/StringBuffer/insert(int,java.lang.String)
com/ibm/icu/text/TransliteratorIDParser/parseGlobalFilter(java.lang.String,int[],int,int[],java.lang.StringBuffer)#java/text/ParsePosition/getIndex()
com/ibm/icu/text/TransliteratorIDParser/parseGlobalFilter(java.lang.String,int[],int,int[],java.lang.StringBuffer)#java/lang/StringBuilder/toString()
com/ibm/icu/text/TransliteratorIDParser/parseGlobalFilter(java.lang.String,int[],int,int[],java.lang.StringBuffer)#java/text/ParsePosition/ParsePosition(int)
com/ibm/icu/text/TransliteratorIDParser/instantiateList(java.util.List)#java/util/ArrayList/ArrayList()
com/ibm/icu/text/TransliteratorIDParser/instantiateList(java.util.List)#java/util/Iterator/hasNext()
com/ibm/icu/text/TransliteratorIDParser/instantiateList(java.util.List)#java/lang/StringBuilder/append(java.lang.String)
com/ibm/icu/text/TransliteratorIDParser/instantiateList(java.util.List)#java/util/List/size()
com/ibm/icu/text/TransliteratorIDParser/instantiateList(java.util.List)#java/util/Iterator/next()
com/ibm/icu/text/TransliteratorIDParser/instantiateList(java.util.List)#java/lang/StringBuilder/StringBuilder()
com/ibm/icu/text/TransliteratorIDParser/instantiateList(java.util.List)#java/util/List/add(java.lang.Object)
com/ibm/icu/text/TransliteratorIDParser/instantiateList(java.util.List)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/ibm/icu/text/TransliteratorIDParser/instantiateList(java.util.List)#java/lang/StringBuilder/toString()
com/ibm/icu/text/TransliteratorIDParser/instantiateList(java.util.List)#java/lang/String/length()
com/ibm/icu/text/TransliteratorIDParser/instantiateList(java.util.List)#com/ibm/icu/text/TransliteratorIDParser$SingleID/getInstance()
com/ibm/icu/text/TransliteratorIDParser/instantiateList(java.util.List)#java/util/List/iterator()
com/ibm/icu/util/StringTrieBuilder/LinearMatchNode/add(com.ibm.icu.util.StringTrieBuilder,java.lang.CharSequence,int,int)#com/ibm/icu/util/StringTrieBuilder$LinearMatchNode/LinearMatchNode(java.lang.CharSequence,int,int,com.ibm.icu.util.StringTrieBuilder$Node)
com/ibm/icu/util/StringTrieBuilder/LinearMatchNode/add(com.ibm.icu.util.StringTrieBuilder,java.lang.CharSequence,int,int)#java/lang/CharSequence/length()
com/ibm/icu/util/StringTrieBuilder/LinearMatchNode/add(com.ibm.icu.util.StringTrieBuilder,java.lang.CharSequence,int,int)#java/lang/CharSequence/charAt(int)
com/ibm/icu/util/StringTrieBuilder/LinearMatchNode/add(com.ibm.icu.util.StringTrieBuilder,java.lang.CharSequence,int,int)#com/ibm/icu/util/StringTrieBuilder$Node/add(com.ibm.icu.util.StringTrieBuilder,java.lang.CharSequence,int,int)
com/ibm/icu/util/StringTrieBuilder/LinearMatchNode/add(com.ibm.icu.util.StringTrieBuilder,java.lang.CharSequence,int,int)#com/ibm/icu/util/StringTrieBuilder$DynamicBranchNode/DynamicBranchNode()
com/ibm/icu/util/StringTrieBuilder/LinearMatchNode/add(com.ibm.icu.util.StringTrieBuilder,java.lang.CharSequence,int,int)#com/ibm/icu/util/StringTrieBuilder$LinearMatchNode/setValue(int)
com/ibm/icu/util/StringTrieBuilder/LinearMatchNode/add(com.ibm.icu.util.StringTrieBuilder,java.lang.CharSequence,int,int)#com/ibm/icu/util/StringTrieBuilder$DynamicBranchNode/setValue(int)
com/ibm/icu/util/StringTrieBuilder/LinearMatchNode/add(com.ibm.icu.util.StringTrieBuilder,java.lang.CharSequence,int,int)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/ibm/icu/util/StringTrieBuilder/LinearMatchNode/add(com.ibm.icu.util.StringTrieBuilder,java.lang.CharSequence,int,int)#com/ibm/icu/util/StringTrieBuilder$DynamicBranchNode/add(char,com.ibm.icu.util.StringTrieBuilder$Node)
com/ibm/icu/impl/ICUData/getStream(java.lang.Class,java.lang.String,boolean)#java/lang/Package/getName()
com/ibm/icu/impl/ICUData/getStream(java.lang.Class,java.lang.String,boolean)#java/lang/Class/getResourceAsStream(java.lang.String)
com/ibm/icu/impl/ICUData/getStream(java.lang.Class,java.lang.String,boolean)#java/lang/StringBuilder/append(java.lang.String)
com/ibm/icu/impl/ICUData/getStream(java.lang.Class,java.lang.String,boolean)#java/util/MissingResourceException/MissingResourceException(java.lang.String,java.lang.String,java.lang.String)
com/ibm/icu/impl/ICUData/getStream(java.lang.Class,java.lang.String,boolean)#java/lang/StringBuilder/StringBuilder()
com/ibm/icu/impl/ICUData/getStream(java.lang.Class,java.lang.String,boolean)#java/lang/Class/getPackage()
com/ibm/icu/impl/ICUData/getStream(java.lang.Class,java.lang.String,boolean)#com/ibm/icu/impl/ICUData$2/2(java.lang.Class,java.lang.String)
com/ibm/icu/impl/ICUData/getStream(java.lang.Class,java.lang.String,boolean)#java/security/AccessController/doPrivileged(java.security.PrivilegedAction)
com/ibm/icu/impl/ICUData/getStream(java.lang.Class,java.lang.String,boolean)#java/lang/StringBuilder/toString()
com/ibm/icu/impl/ICUData/getStream(java.lang.Class,java.lang.String,boolean)#java/lang/System/getSecurityManager()
com/ibm/icu/impl/UnicodeSetStringSpan/span(java.lang.CharSequence,int,int,com.ibm.icu.text.UnicodeSet$SpanCondition)#com/ibm/icu/impl/UnicodeSetStringSpan$OffsetList/popMinimum()
com/ibm/icu/impl/UnicodeSetStringSpan/span(java.lang.CharSequence,int,int,com.ibm.icu.text.UnicodeSet$SpanCondition)#java/lang/String/length()
com/ibm/icu/impl/UnicodeSetStringSpan/span(java.lang.CharSequence,int,int,com.ibm.icu.text.UnicodeSet$SpanCondition)#java/util/ArrayList/size()
com/ibm/icu/impl/UnicodeSetStringSpan/span(java.lang.CharSequence,int,int,com.ibm.icu.text.UnicodeSet$SpanCondition)#java/lang/String/offsetByCodePoints(int,int)
com/ibm/icu/impl/UnicodeSetStringSpan/span(java.lang.CharSequence,int,int,com.ibm.icu.text.UnicodeSet$SpanCondition)#com/ibm/icu/impl/UnicodeSetStringSpan$OffsetList/addOffset(int)
com/ibm/icu/impl/UnicodeSetStringSpan/span(java.lang.CharSequence,int,int,com.ibm.icu.text.UnicodeSet$SpanCondition)#com/ibm/icu/impl/UnicodeSetStringSpan$OffsetList/setMaxLength(int)
com/ibm/icu/impl/UnicodeSetStringSpan/span(java.lang.CharSequence,int,int,com.ibm.icu.text.UnicodeSet$SpanCondition)#com/ibm/icu/impl/UnicodeSetStringSpan$OffsetList/shift(int)
com/ibm/icu/impl/UnicodeSetStringSpan/span(java.lang.CharSequence,int,int,com.ibm.icu.text.UnicodeSet$SpanCondition)#com/ibm/icu/impl/UnicodeSetStringSpan$OffsetList/isEmpty()
com/ibm/icu/impl/UnicodeSetStringSpan/span(java.lang.CharSequence,int,int,com.ibm.icu.text.UnicodeSet$SpanCondition)#java/lang/CharSequence/subSequence(int,int)
com/ibm/icu/impl/UnicodeSetStringSpan/span(java.lang.CharSequence,int,int,com.ibm.icu.text.UnicodeSet$SpanCondition)#com/ibm/icu/impl/UnicodeSetStringSpan$OffsetList/containsOffset(int)
com/ibm/icu/impl/UnicodeSetStringSpan/span(java.lang.CharSequence,int,int,com.ibm.icu.text.UnicodeSet$SpanCondition)#java/util/ArrayList/get(int)
com/ibm/icu/impl/UnicodeSetStringSpan/spanBack(java.lang.CharSequence,int,com.ibm.icu.text.UnicodeSet$SpanCondition)#com/ibm/icu/impl/UnicodeSetStringSpan$OffsetList/popMinimum()
com/ibm/icu/impl/UnicodeSetStringSpan/spanBack(java.lang.CharSequence,int,com.ibm.icu.text.UnicodeSet$SpanCondition)#java/lang/String/length()
com/ibm/icu/impl/UnicodeSetStringSpan/spanBack(java.lang.CharSequence,int,com.ibm.icu.text.UnicodeSet$SpanCondition)#com/ibm/icu/impl/UnicodeSetStringSpan$OffsetList/isEmpty()
com/ibm/icu/impl/UnicodeSetStringSpan/spanBack(java.lang.CharSequence,int,com.ibm.icu.text.UnicodeSet$SpanCondition)#java/util/ArrayList/size()
com/ibm/icu/impl/UnicodeSetStringSpan/spanBack(java.lang.CharSequence,int,com.ibm.icu.text.UnicodeSet$SpanCondition)#com/ibm/icu/impl/UnicodeSetStringSpan$OffsetList/setMaxLength(int)
com/ibm/icu/impl/UnicodeSetStringSpan/spanBack(java.lang.CharSequence,int,com.ibm.icu.text.UnicodeSet$SpanCondition)#com/ibm/icu/impl/UnicodeSetStringSpan$OffsetList/shift(int)
com/ibm/icu/impl/UnicodeSetStringSpan/spanBack(java.lang.CharSequence,int,com.ibm.icu.text.UnicodeSet$SpanCondition)#java/lang/String/offsetByCodePoints(int,int)
com/ibm/icu/impl/UnicodeSetStringSpan/spanBack(java.lang.CharSequence,int,com.ibm.icu.text.UnicodeSet$SpanCondition)#com/ibm/icu/impl/UnicodeSetStringSpan$OffsetList/addOffset(int)
com/ibm/icu/impl/UnicodeSetStringSpan/spanBack(java.lang.CharSequence,int,com.ibm.icu.text.UnicodeSet$SpanCondition)#com/ibm/icu/impl/UnicodeSetStringSpan$OffsetList/containsOffset(int)
com/ibm/icu/impl/UnicodeSetStringSpan/spanBack(java.lang.CharSequence,int,com.ibm.icu.text.UnicodeSet$SpanCondition)#java/util/ArrayList/get(int)
com/ibm/icu/text/TransliteratorRegistry/CompoundRBTEntry/getInstance()#java/util/ArrayList/ArrayList()
com/ibm/icu/text/TransliteratorRegistry/CompoundRBTEntry/getInstance()#java/lang/StringBuilder/append(java.lang.String)
com/ibm/icu/text/TransliteratorRegistry/CompoundRBTEntry/getInstance()#java/lang/Math/max(int,int)
com/ibm/icu/text/TransliteratorRegistry/CompoundRBTEntry/getInstance()#java/lang/String/length()
com/ibm/icu/text/TransliteratorRegistry/CompoundRBTEntry/getInstance()#java/util/List/size()
com/ibm/icu/text/TransliteratorRegistry/CompoundRBTEntry/getInstance()#java/lang/StringBuilder/StringBuilder()
com/ibm/icu/text/TransliteratorRegistry/CompoundRBTEntry/getInstance()#java/util/List/add(java.lang.Object)
com/ibm/icu/text/TransliteratorRegistry/CompoundRBTEntry/getInstance()#java/util/List/get(int)
com/ibm/icu/text/TransliteratorRegistry/CompoundRBTEntry/getInstance()#java/lang/StringBuilder/toString()
com/ibm/icu/text/TransliteratorRegistry/CompoundRBTEntry/getInstance()#java/lang/StringBuilder/append(int)
com/ibm/icu/util/StringTrieBuilder/DynamicBranchNode/add(com.ibm.icu.util.StringTrieBuilder,java.lang.CharSequence,int,int)#java/lang/CharSequence/length()
com/ibm/icu/util/StringTrieBuilder/DynamicBranchNode/add(com.ibm.icu.util.StringTrieBuilder,java.lang.CharSequence,int,int)#java/lang/CharSequence/charAt(int)
com/ibm/icu/util/StringTrieBuilder/DynamicBranchNode/add(com.ibm.icu.util.StringTrieBuilder,java.lang.CharSequence,int,int)#com/ibm/icu/util/StringTrieBuilder$DynamicBranchNode/find(char)
com/ibm/icu/util/StringTrieBuilder/DynamicBranchNode/add(com.ibm.icu.util.StringTrieBuilder,java.lang.CharSequence,int,int)#com/ibm/icu/util/StringTrieBuilder$Node/add(com.ibm.icu.util.StringTrieBuilder,java.lang.CharSequence,int,int)
com/ibm/icu/util/StringTrieBuilder/DynamicBranchNode/add(com.ibm.icu.util.StringTrieBuilder,java.lang.CharSequence,int,int)#java/util/ArrayList/add(int,java.lang.Object)
com/ibm/icu/util/StringTrieBuilder/DynamicBranchNode/add(com.ibm.icu.util.StringTrieBuilder,java.lang.CharSequence,int,int)#java/util/ArrayList/set(int,java.lang.Object)
com/ibm/icu/util/StringTrieBuilder/DynamicBranchNode/add(com.ibm.icu.util.StringTrieBuilder,java.lang.CharSequence,int,int)#java/lang/StringBuilder/charAt(int)
com/ibm/icu/util/StringTrieBuilder/DynamicBranchNode/add(com.ibm.icu.util.StringTrieBuilder,java.lang.CharSequence,int,int)#com/ibm/icu/util/StringTrieBuilder$DynamicBranchNode/setValue(int)
com/ibm/icu/util/StringTrieBuilder/DynamicBranchNode/add(com.ibm.icu.util.StringTrieBuilder,java.lang.CharSequence,int,int)#java/util/ArrayList/get(int)
com/ibm/icu/util/StringTrieBuilder/DynamicBranchNode/add(com.ibm.icu.util.StringTrieBuilder,java.lang.CharSequence,int,int)#java/lang/StringBuilder/insert(int,char)
com/ibm/icu/util/StringTrieBuilder/DynamicBranchNode/add(com.ibm.icu.util.StringTrieBuilder,java.lang.CharSequence,int,int)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/ibm/icu/util/StringTrieBuilder/DynamicBranchNode/add(com.ibm.icu.util.StringTrieBuilder,java.lang.CharSequence,int,int)#java/lang/StringBuilder/length()
com/ibm/icu/util/StringTrieBuilder/DynamicBranchNode/register(com.ibm.icu.util.StringTrieBuilder,int,int)#com/ibm/icu/util/StringTrieBuilder$ListBranchNode/add(int,int)
com/ibm/icu/util/StringTrieBuilder/DynamicBranchNode/register(com.ibm.icu.util.StringTrieBuilder,int,int)#com/ibm/icu/util/StringTrieBuilder$ListBranchNode/add(int,com.ibm.icu.util.StringTrieBuilder$Node)
com/ibm/icu/util/StringTrieBuilder/DynamicBranchNode/register(com.ibm.icu.util.StringTrieBuilder,int,int)#com/ibm/icu/util/StringTrieBuilder$Node/register(com.ibm.icu.util.StringTrieBuilder)
com/ibm/icu/util/StringTrieBuilder/DynamicBranchNode/register(com.ibm.icu.util.StringTrieBuilder,int,int)#com/ibm/icu/util/StringTrieBuilder$DynamicBranchNode/register(com.ibm.icu.util.StringTrieBuilder,int,int)
com/ibm/icu/util/StringTrieBuilder/DynamicBranchNode/register(com.ibm.icu.util.StringTrieBuilder,int,int)#com/ibm/icu/util/StringTrieBuilder$ListBranchNode/ListBranchNode(int)
com/ibm/icu/util/StringTrieBuilder/DynamicBranchNode/register(com.ibm.icu.util.StringTrieBuilder,int,int)#java/lang/Object/getClass()
com/ibm/icu/util/StringTrieBuilder/DynamicBranchNode/register(com.ibm.icu.util.StringTrieBuilder,int,int)#java/lang/StringBuilder/charAt(int)
com/ibm/icu/util/StringTrieBuilder/DynamicBranchNode/register(com.ibm.icu.util.StringTrieBuilder,int,int)#com/ibm/icu/util/StringTrieBuilder$SplitBranchNode/SplitBranchNode(char,com.ibm.icu.util.StringTrieBuilder$Node,com.ibm.icu.util.StringTrieBuilder$Node)
com/ibm/icu/util/StringTrieBuilder/DynamicBranchNode/register(com.ibm.icu.util.StringTrieBuilder,int,int)#java/util/ArrayList/get(int)
com/ibm/icu/text/RBNFChinesePostProcessor/process(java.lang.StringBuffer,com.ibm.icu.text.NFRuleSet)#java/lang/StringBuffer/delete(int,int)
com/ibm/icu/text/RBNFChinesePostProcessor/process(java.lang.StringBuffer,com.ibm.icu.text.NFRuleSet)#java/lang/StringBuffer/indexOf(java.lang.String,int)
com/ibm/icu/text/RBNFChinesePostProcessor/process(java.lang.StringBuffer,com.ibm.icu.text.NFRuleSet)#java/lang/String/equals(java.lang.Object)
com/ibm/icu/text/RBNFChinesePostProcessor/process(java.lang.StringBuffer,com.ibm.icu.text.NFRuleSet)#java/lang/StringBuffer/indexOf(java.lang.String)
com/ibm/icu/text/RBNFChinesePostProcessor/process(java.lang.StringBuffer,com.ibm.icu.text.NFRuleSet)#java/lang/StringBuffer/lastIndexOf(java.lang.String,int)
com/ibm/icu/text/RBNFChinesePostProcessor/process(java.lang.StringBuffer,com.ibm.icu.text.NFRuleSet)#java/lang/IllegalStateException/IllegalStateException()
com/ibm/icu/text/RBNFChinesePostProcessor/process(java.lang.StringBuffer,com.ibm.icu.text.NFRuleSet)#java/lang/StringBuffer/charAt(int)
com/ibm/icu/text/RBNFChinesePostProcessor/process(java.lang.StringBuffer,com.ibm.icu.text.NFRuleSet)#java/lang/String/length()
com/ibm/icu/text/RBNFChinesePostProcessor/process(java.lang.StringBuffer,com.ibm.icu.text.NFRuleSet)#java/lang/StringBuffer/insert(int,char)
com/ibm/icu/text/RBNFChinesePostProcessor/process(java.lang.StringBuffer,com.ibm.icu.text.NFRuleSet)#java/lang/StringBuffer/length()
com/ibm/icu/impl/LocaleDisplayNamesImpl/localeDisplayNameInternal(com.ibm.icu.util.ULocale)#java/util/Iterator/hasNext()
com/ibm/icu/impl/LocaleDisplayNamesImpl/localeDisplayNameInternal(com.ibm.icu.util.ULocale)#java/lang/StringBuilder/append(java.lang.String)
com/ibm/icu/impl/LocaleDisplayNamesImpl/localeDisplayNameInternal(com.ibm.icu.util.ULocale)#java/util/Iterator/next()
com/ibm/icu/impl/LocaleDisplayNamesImpl/localeDisplayNameInternal(com.ibm.icu.util.ULocale)#java/lang/StringBuilder/StringBuilder()
com/ibm/icu/impl/LocaleDisplayNamesImpl/localeDisplayNameInternal(com.ibm.icu.util.ULocale)#com/ibm/icu/text/MessageFormat/format(java.lang.Object)
com/ibm/icu/impl/LocaleDisplayNamesImpl/localeDisplayNameInternal(com.ibm.icu.util.ULocale)#java/lang/StringBuilder/append(char)
com/ibm/icu/impl/LocaleDisplayNamesImpl/localeDisplayNameInternal(com.ibm.icu.util.ULocale)#java/lang/StringBuilder/length()
com/ibm/icu/impl/LocaleDisplayNamesImpl/localeDisplayNameInternal(com.ibm.icu.util.ULocale)#java/lang/StringBuilder/toString()
com/ibm/icu/impl/LocaleDisplayNamesImpl/localeDisplayNameInternal(com.ibm.icu.util.ULocale)#java/lang/String/length()
com/ibm/icu/impl/LocaleDisplayNamesImpl/localeDisplayNameInternal(com.ibm.icu.util.ULocale)#java/lang/String/equals(java.lang.Object)
com/ibm/icu/impl/LocaleDisplayNamesImpl/localeDisplayNameInternal(com.ibm.icu.util.ULocale)#com/ibm/icu/impl/LocaleDisplayNamesImpl$Appender/append(java.lang.String,java.lang.StringBuilder)
com/ibm/icu/text/RuleBasedCollator/getEquivalentReorderCodes(int)#java/lang/Integer/intValue()
com/ibm/icu/text/RuleBasedCollator/getEquivalentReorderCodes(int)#java/util/Iterator/hasNext()
com/ibm/icu/text/RuleBasedCollator/getEquivalentReorderCodes(int)#java/util/Set/size()
com/ibm/icu/text/RuleBasedCollator/getEquivalentReorderCodes(int)#com/ibm/icu/text/RuleBasedCollator$LeadByteConstants/getLeadBytesForReorderCode(int)
com/ibm/icu/text/RuleBasedCollator/getEquivalentReorderCodes(int)#java/util/Iterator/next()
com/ibm/icu/text/RuleBasedCollator/getEquivalentReorderCodes(int)#java/util/Set/iterator()
com/ibm/icu/text/RuleBasedCollator/getEquivalentReorderCodes(int)#java/lang/Integer/valueOf(int)
com/ibm/icu/text/RuleBasedCollator/getEquivalentReorderCodes(int)#com/ibm/icu/text/RuleBasedCollator$LeadByteConstants/getReorderCodesForLeadByte(int)
com/ibm/icu/text/RuleBasedCollator/getEquivalentReorderCodes(int)#java/util/HashSet/HashSet()
com/ibm/icu/text/RuleBasedCollator/getEquivalentReorderCodes(int)#java/util/Set/add(java.lang.Object)
com/ibm/icu/text/TransliterationRuleSet/freeze()#java/util/ArrayList/ArrayList(int)
com/ibm/icu/text/TransliterationRuleSet/freeze()#java/lang/StringBuilder/append(java.lang.String)
com/ibm/icu/text/TransliterationRuleSet/freeze()#java/util/List/size()
com/ibm/icu/text/TransliterationRuleSet/freeze()#java/util/List/toArray(java.lang.Object[])
com/ibm/icu/text/TransliterationRuleSet/freeze()#java/util/List/add(java.lang.Object)
com/ibm/icu/text/TransliterationRuleSet/freeze()#java/util/List/get(int)
com/ibm/icu/text/TransliterationRuleSet/freeze()#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/ibm/icu/text/TransliterationRuleSet/freeze()#java/lang/StringBuilder/append(java.lang.Object)
com/ibm/icu/text/TransliterationRuleSet/freeze()#java/lang/StringBuilder/toString()
com/ibm/icu/text/TransliterationRuleSet/freeze()#java/lang/StringBuilder/StringBuilder()
com/ibm/icu/impl/PropsVectors/compact(com.ibm.icu.impl.PropsVectors$CompactHandler)#java/lang/Integer/intValue()
com/ibm/icu/impl/PropsVectors/compact(com.ibm.icu.impl.PropsVectors$CompactHandler)#com/ibm/icu/impl/PropsVectors$CompactHandler/setRowIndexForInitialValue(int)
com/ibm/icu/impl/PropsVectors/compact(com.ibm.icu.impl.PropsVectors$CompactHandler)#java/util/Arrays/sort(java.lang.Object[],java.util.Comparator)
com/ibm/icu/impl/PropsVectors/compact(com.ibm.icu.impl.PropsVectors$CompactHandler)#com/ibm/icu/impl/PropsVectors$CompactHandler/setRowIndexForErrorValue(int)
com/ibm/icu/impl/PropsVectors/compact(com.ibm.icu.impl.PropsVectors$CompactHandler)#com/ibm/icu/impl/PropsVectors$CompactHandler/startRealValues(int)
com/ibm/icu/impl/PropsVectors/compact(com.ibm.icu.impl.PropsVectors$CompactHandler)#java/lang/Integer/valueOf(int)
com/ibm/icu/impl/PropsVectors/compact(com.ibm.icu.impl.PropsVectors$CompactHandler)#java/lang/System/arraycopy(java.lang.Object,int,java.lang.Object,int,int)
com/ibm/icu/impl/PropsVectors/compact(com.ibm.icu.impl.PropsVectors$CompactHandler)#com/ibm/icu/impl/PropsVectors$CompactHandler/setRowIndexForRange(int,int,int)
com/ibm/icu/impl/PropsVectors/compact(com.ibm.icu.impl.PropsVectors$CompactHandler)#com/ibm/icu/impl/PropsVectors$1/1(com.ibm.icu.impl.PropsVectors)
com/ibm/icu/impl/URLHandler/JarURLHandler/guide(com.ibm.icu.impl.URLHandler$URLVisitor,boolean,boolean)#java/util/jar/JarFile/entries()
com/ibm/icu/impl/URLHandler/JarURLHandler/guide(com.ibm.icu.impl.URLHandler$URLVisitor,boolean,boolean)#com/ibm/icu/impl/URLHandler$URLVisitor/visit(java.lang.String)
com/ibm/icu/impl/URLHandler/JarURLHandler/guide(com.ibm.icu.impl.URLHandler$URLVisitor,boolean,boolean)#java/lang/String/substring(int)
com/ibm/icu/impl/URLHandler/JarURLHandler/guide(com.ibm.icu.impl.URLHandler$URLVisitor,boolean,boolean)#java/util/jar/JarEntry/getName()
com/ibm/icu/impl/URLHandler/JarURLHandler/guide(com.ibm.icu.impl.URLHandler$URLVisitor,boolean,boolean)#java/lang/String/startsWith(java.lang.String)
com/ibm/icu/impl/URLHandler/JarURLHandler/guide(com.ibm.icu.impl.URLHandler$URLVisitor,boolean,boolean)#java/util/jar/JarEntry/isDirectory()
com/ibm/icu/impl/URLHandler/JarURLHandler/guide(com.ibm.icu.impl.URLHandler$URLVisitor,boolean,boolean)#java/util/Enumeration/nextElement()
com/ibm/icu/impl/URLHandler/JarURLHandler/guide(com.ibm.icu.impl.URLHandler$URLVisitor,boolean,boolean)#java/lang/StringBuilder/toString()
com/ibm/icu/impl/URLHandler/JarURLHandler/guide(com.ibm.icu.impl.URLHandler$URLVisitor,boolean,boolean)#java/lang/StringBuilder/append(java.lang.String)
com/ibm/icu/impl/URLHandler/JarURLHandler/guide(com.ibm.icu.impl.URLHandler$URLVisitor,boolean,boolean)#java/io/PrintStream/println(java.lang.String)
com/ibm/icu/impl/URLHandler/JarURLHandler/guide(com.ibm.icu.impl.URLHandler$URLVisitor,boolean,boolean)#java/lang/String/length()
com/ibm/icu/impl/URLHandler/JarURLHandler/guide(com.ibm.icu.impl.URLHandler$URLVisitor,boolean,boolean)#java/lang/StringBuilder/StringBuilder()
com/ibm/icu/impl/URLHandler/JarURLHandler/guide(com.ibm.icu.impl.URLHandler$URLVisitor,boolean,boolean)#java/lang/String/lastIndexOf(int)
com/ibm/icu/impl/URLHandler/JarURLHandler/guide(com.ibm.icu.impl.URLHandler$URLVisitor,boolean,boolean)#java/lang/StringBuilder/append(java.lang.Object)
com/ibm/icu/impl/URLHandler/JarURLHandler/guide(com.ibm.icu.impl.URLHandler$URLVisitor,boolean,boolean)#java/util/Enumeration/hasMoreElements()
com/ibm/icu/text/TransliteratorRegistry/instantiateEntry(java.lang.String,java.lang.Object[],java.lang.StringBuffer)#java/lang/Class/newInstance()
com/ibm/icu/text/TransliteratorRegistry/instantiateEntry(java.lang.String,java.lang.Object[],java.lang.StringBuffer)#java/lang/StringBuilder/append(java.lang.String)
com/ibm/icu/text/TransliteratorRegistry/instantiateEntry(java.lang.String,java.lang.Object[],java.lang.StringBuffer)#com/ibm/icu/text/Transliterator$Factory/getInstance(java.lang.String)
com/ibm/icu/text/TransliteratorRegistry/instantiateEntry(java.lang.String,java.lang.Object[],java.lang.StringBuffer)#java/util/List/get(int)
com/ibm/icu/text/TransliteratorRegistry/instantiateEntry(java.lang.String,java.lang.Object[],java.lang.StringBuffer)#java/lang/StringBuffer/append(java.lang.String)
com/ibm/icu/text/TransliteratorRegistry/instantiateEntry(java.lang.String,java.lang.Object[],java.lang.StringBuffer)#java/util/List/size()
com/ibm/icu/text/TransliteratorRegistry/instantiateEntry(java.lang.String,java.lang.Object[],java.lang.StringBuffer)#java/lang/StringBuilder/StringBuilder()
com/ibm/icu/text/TransliteratorRegistry/instantiateEntry(java.lang.String,java.lang.Object[],java.lang.StringBuffer)#com/ibm/icu/text/TransliteratorRegistry$AliasEntry/AliasEntry(java.lang.String)
com/ibm/icu/text/TransliteratorRegistry/instantiateEntry(java.lang.String,java.lang.Object[],java.lang.StringBuffer)#com/ibm/icu/text/TransliteratorRegistry$CompoundRBTEntry/CompoundRBTEntry(java.lang.String,java.util.List,java.util.List,com.ibm.icu.text.UnicodeSet)
com/ibm/icu/text/TransliteratorRegistry/instantiateEntry(java.lang.String,java.lang.Object[],java.lang.StringBuffer)#java/lang/StringBuilder/toString()
com/ibm/icu/text/TransliteratorRegistry/instantiateEntry(java.lang.String,java.lang.Object[],java.lang.StringBuffer)#com/ibm/icu/text/TransliteratorRegistry$CompoundRBTEntry/getInstance()
com/ibm/icu/text/TransliteratorRegistry/findInBundle(com.ibm.icu.text.TransliteratorRegistry$Spec,com.ibm.icu.text.TransliteratorRegistry$Spec,java.lang.String,int)#java/lang/String/equalsIgnoreCase(java.lang.String)
com/ibm/icu/text/TransliteratorRegistry/findInBundle(com.ibm.icu.text.TransliteratorRegistry$Spec,com.ibm.icu.text.TransliteratorRegistry$Spec,java.lang.String,int)#java/lang/String/toUpperCase(java.util.Locale)
com/ibm/icu/text/TransliteratorRegistry/findInBundle(com.ibm.icu.text.TransliteratorRegistry$Spec,com.ibm.icu.text.TransliteratorRegistry$Spec,java.lang.String,int)#com/ibm/icu/text/TransliteratorRegistry$Spec/getBundle()
com/ibm/icu/text/TransliteratorRegistry/findInBundle(com.ibm.icu.text.TransliteratorRegistry$Spec,com.ibm.icu.text.TransliteratorRegistry$Spec,java.lang.String,int)#java/lang/StringBuilder/StringBuilder()
com/ibm/icu/text/TransliteratorRegistry/findInBundle(com.ibm.icu.text.TransliteratorRegistry$Spec,com.ibm.icu.text.TransliteratorRegistry$Spec,java.lang.String,int)#java/lang/StringBuilder/toString()
com/ibm/icu/text/TransliteratorRegistry/findInBundle(com.ibm.icu.text.TransliteratorRegistry$Spec,com.ibm.icu.text.TransliteratorRegistry$Spec,java.lang.String,int)#java/lang/StringBuilder/append(java.lang.String)
com/ibm/icu/text/TransliteratorRegistry/findInBundle(com.ibm.icu.text.TransliteratorRegistry$Spec,com.ibm.icu.text.TransliteratorRegistry$Spec,java.lang.String,int)#java/util/ResourceBundle/getStringArray(java.lang.String)
com/ibm/icu/text/TransliteratorRegistry/findInBundle(com.ibm.icu.text.TransliteratorRegistry$Spec,com.ibm.icu.text.TransliteratorRegistry$Spec,java.lang.String,int)#java/lang/String/length()
com/ibm/icu/text/TransliteratorRegistry/findInBundle(com.ibm.icu.text.TransliteratorRegistry$Spec,com.ibm.icu.text.TransliteratorRegistry$Spec,java.lang.String,int)#com/ibm/icu/text/TransliteratorRegistry$LocaleEntry/LocaleEntry(java.lang.String,int)
com/ibm/icu/text/TransliteratorRegistry/findInBundle(com.ibm.icu.text.TransliteratorRegistry$Spec,com.ibm.icu.text.TransliteratorRegistry$Spec,java.lang.String,int)#com/ibm/icu/text/TransliteratorRegistry$Spec/get()
com/ibm/icu/text/TransliteratorRegistry/registerSTV(java.lang.String,java.lang.String,java.lang.String)#java/util/Collections/synchronizedMap(java.util.Map)
com/ibm/icu/text/TransliteratorRegistry/registerSTV(java.lang.String,java.lang.String,java.lang.String)#java/util/HashMap/HashMap()
com/ibm/icu/text/TransliteratorRegistry/registerSTV(java.lang.String,java.lang.String,java.lang.String)#java/util/List/add(java.lang.Object)
com/ibm/icu/text/TransliteratorRegistry/registerSTV(java.lang.String,java.lang.String,java.lang.String)#java/util/List/contains(java.lang.Object)
com/ibm/icu/text/TransliteratorRegistry/registerSTV(java.lang.String,java.lang.String,java.lang.String)#java/util/List/add(int,java.lang.Object)
com/ibm/icu/text/TransliteratorRegistry/registerSTV(java.lang.String,java.lang.String,java.lang.String)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/ibm/icu/text/TransliteratorRegistry/registerSTV(java.lang.String,java.lang.String,java.lang.String)#java/util/ArrayList/ArrayList()
com/ibm/icu/text/TransliteratorRegistry/registerSTV(java.lang.String,java.lang.String,java.lang.String)#java/lang/String/length()
com/ibm/icu/text/TransliteratorRegistry/registerSTV(java.lang.String,java.lang.String,java.lang.String)#java/util/Map/get(java.lang.Object)
com/ibm/icu/impl/data/TokenIterator/nextToken(int)#java/lang/String/length()
com/ibm/icu/impl/data/TokenIterator/nextToken(int)#java/lang/StringBuilder/append(char)
com/ibm/icu/impl/data/TokenIterator/nextToken(int)#java/lang/StringBuilder/toString()
com/ibm/icu/impl/data/TokenIterator/nextToken(int)#java/lang/StringBuilder/append(java.lang.String)
com/ibm/icu/impl/data/TokenIterator/nextToken(int)#java/lang/String/charAt(int)
com/ibm/icu/impl/data/TokenIterator/nextToken(int)#java/lang/StringBuffer/append(char)
com/ibm/icu/impl/data/TokenIterator/nextToken(int)#java/lang/StringBuilder/append(int)
com/ibm/icu/impl/data/TokenIterator/nextToken(int)#java/lang/StringBuilder/StringBuilder()
com/ibm/icu/impl/data/TokenIterator/nextToken(int)#java/lang/RuntimeException/RuntimeException(java.lang.String)
com/ibm/icu/impl/UCharacterNameReader/readAlg()#java/io/DataInputStream/readInt()
com/ibm/icu/impl/UCharacterNameReader/readAlg()#com/ibm/icu/impl/UCharacterName$AlgorithmName/setFactorString(byte[])
com/ibm/icu/impl/UCharacterNameReader/readAlg()#com/ibm/icu/impl/UCharacterName$AlgorithmName/setFactor(char[])
com/ibm/icu/impl/UCharacterNameReader/readAlg()#com/ibm/icu/impl/UCharacterName$AlgorithmName/setInfo(int,int,byte,byte)
com/ibm/icu/impl/UCharacterNameReader/readAlg()#java/io/DataInputStream/readChar()
com/ibm/icu/impl/UCharacterNameReader/readAlg()#java/lang/StringBuilder/StringBuilder()
com/ibm/icu/impl/UCharacterNameReader/readAlg()#com/ibm/icu/impl/UCharacterName$AlgorithmName/AlgorithmName()
com/ibm/icu/impl/UCharacterNameReader/readAlg()#java/lang/StringBuilder/append(char)
com/ibm/icu/impl/UCharacterNameReader/readAlg()#java/lang/StringBuilder/length()
com/ibm/icu/impl/UCharacterNameReader/readAlg()#java/io/DataInputStream/readFully(byte[])
com/ibm/icu/impl/UCharacterNameReader/readAlg()#java/lang/StringBuilder/toString()
com/ibm/icu/impl/UCharacterNameReader/readAlg()#java/io/DataInputStream/readByte()
com/ibm/icu/impl/UCharacterNameReader/readAlg()#com/ibm/icu/impl/UCharacterName$AlgorithmName/setPrefix(java.lang.String)
com/ibm/icu/util/LocaleData/getExemplarSet(int,int)#java/util/regex/Matcher/replaceAll(java.lang.String)
com/ibm/icu/util/LocaleData/getExemplarSet(int,int)#java/lang/StringBuilder/append(java.lang.String)
com/ibm/icu/util/LocaleData/getExemplarSet(int,int)#java/lang/String/length()
com/ibm/icu/util/LocaleData/getExemplarSet(int,int)#java/lang/String/substring(int,int)
com/ibm/icu/util/LocaleData/getExemplarSet(int,int)#com/ibm/icu/impl/ICUResourceBundle/get(java.lang.String)
com/ibm/icu/util/LocaleData/getExemplarSet(int,int)#java/lang/StringBuilder/append(char)
com/ibm/icu/util/LocaleData/getExemplarSet(int,int)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String,java.lang.Throwable)
com/ibm/icu/util/LocaleData/getExemplarSet(int,int)#java/lang/StringBuilder/append(java.lang.Object)
com/ibm/icu/util/LocaleData/getExemplarSet(int,int)#java/util/regex/Pattern/matcher(java.lang.CharSequence)
com/ibm/icu/util/LocaleData/getExemplarSet(int,int)#java/lang/StringBuilder/toString()
com/ibm/icu/util/LocaleData/getExemplarSet(int,int)#com/ibm/icu/impl/ICUResourceBundle/getString()
com/ibm/icu/util/LocaleData/getExemplarSet(int,int)#java/lang/StringBuilder/StringBuilder()
com/ibm/icu/text/TimeZoneFormat/formatOffsetWithAsciiDigits(int,java.lang.Character,com.ibm.icu.text.TimeZoneFormat$OffsetFields,com.ibm.icu.text.TimeZoneFormat$OffsetFields)#java/lang/StringBuilder/append(java.lang.String)
com/ibm/icu/text/TimeZoneFormat/formatOffsetWithAsciiDigits(int,java.lang.Character,com.ibm.icu.text.TimeZoneFormat$OffsetFields,com.ibm.icu.text.TimeZoneFormat$OffsetFields)#java/lang/StringBuilder/append(int)
com/ibm/icu/text/TimeZoneFormat/formatOffsetWithAsciiDigits(int,java.lang.Character,com.ibm.icu.text.TimeZoneFormat$OffsetFields,com.ibm.icu.text.TimeZoneFormat$OffsetFields)#java/lang/StringBuilder/StringBuilder()
com/ibm/icu/text/TimeZoneFormat/formatOffsetWithAsciiDigits(int,java.lang.Character,com.ibm.icu.text.TimeZoneFormat$OffsetFields,com.ibm.icu.text.TimeZoneFormat$OffsetFields)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/ibm/icu/text/TimeZoneFormat/formatOffsetWithAsciiDigits(int,java.lang.Character,com.ibm.icu.text.TimeZoneFormat$OffsetFields,com.ibm.icu.text.TimeZoneFormat$OffsetFields)#java/lang/StringBuilder/append(java.lang.Object)
com/ibm/icu/text/TimeZoneFormat/formatOffsetWithAsciiDigits(int,java.lang.Character,com.ibm.icu.text.TimeZoneFormat$OffsetFields,com.ibm.icu.text.TimeZoneFormat$OffsetFields)#java/lang/StringBuilder/toString()
com/ibm/icu/text/TimeZoneFormat/formatOffsetWithAsciiDigits(int,java.lang.Character,com.ibm.icu.text.TimeZoneFormat$OffsetFields,com.ibm.icu.text.TimeZoneFormat$OffsetFields)#java/lang/StringBuilder/append(char)
com/ibm/icu/text/TimeZoneFormat/formatOffsetWithAsciiDigits(int,java.lang.Character,com.ibm.icu.text.TimeZoneFormat$OffsetFields,com.ibm.icu.text.TimeZoneFormat$OffsetFields)#com/ibm/icu/text/TimeZoneFormat$OffsetFields/ordinal()
com/ibm/icu/text/TimeZoneFormat/formatOffsetWithAsciiDigits(int,java.lang.Character,com.ibm.icu.text.TimeZoneFormat$OffsetFields,com.ibm.icu.text.TimeZoneFormat$OffsetFields)#java/lang/AssertionError/AssertionError()
com/ibm/icu/text/TimeZoneFormat/formatOffsetWithAsciiDigits(int,java.lang.Character,com.ibm.icu.text.TimeZoneFormat$OffsetFields,com.ibm.icu.text.TimeZoneFormat$OffsetFields)#java/lang/Math/abs(int)
com/ibm/icu/text/TimeZoneFormat/parseOffsetISO8601(java.lang.String,java.text.ParsePosition,boolean,com.ibm.icu.util.Output)#java/lang/Character/toUpperCase(char)
com/ibm/icu/text/TimeZoneFormat/parseOffsetISO8601(java.lang.String,java.text.ParsePosition,boolean,com.ibm.icu.util.Output)#java/text/ParsePosition/setIndex(int)
com/ibm/icu/text/TimeZoneFormat/parseOffsetISO8601(java.lang.String,java.text.ParsePosition,boolean,com.ibm.icu.util.Output)#java/lang/String/charAt(int)
com/ibm/icu/text/TimeZoneFormat/parseOffsetISO8601(java.lang.String,java.text.ParsePosition,boolean,com.ibm.icu.util.Output)#java/lang/String/length()
com/ibm/icu/text/TimeZoneFormat/parseOffsetISO8601(java.lang.String,java.text.ParsePosition,boolean,com.ibm.icu.util.Output)#java/text/ParsePosition/ParsePosition(int)
com/ibm/icu/text/TimeZoneFormat/parseOffsetISO8601(java.lang.String,java.text.ParsePosition,boolean,com.ibm.icu.util.Output)#java/lang/Boolean/valueOf(boolean)
com/ibm/icu/text/TimeZoneFormat/parseOffsetISO8601(java.lang.String,java.text.ParsePosition,boolean,com.ibm.icu.util.Output)#java/text/ParsePosition/setErrorIndex(int)
com/ibm/icu/text/TimeZoneFormat/parseOffsetISO8601(java.lang.String,java.text.ParsePosition,boolean,com.ibm.icu.util.Output)#java/text/ParsePosition/getIndex()
com/ibm/icu/text/TimeZoneFormat/parseOffsetISO8601(java.lang.String,java.text.ParsePosition,boolean,com.ibm.icu.util.Output)#java/text/ParsePosition/getErrorIndex()
com/ibm/icu/text/TimeZoneFormat/parse(com.ibm.icu.text.TimeZoneFormat$Style,java.lang.String,java.text.ParsePosition,java.util.EnumSet,com.ibm.icu.util.Output)#java/text/ParsePosition/setIndex(int)
com/ibm/icu/text/TimeZoneFormat/parse(com.ibm.icu.text.TimeZoneFormat$Style,java.lang.String,java.text.ParsePosition,java.util.EnumSet,com.ibm.icu.util.Output)#com/ibm/icu/impl/TimeZoneGenericNames$GenericMatchInfo/tzID()
com/ibm/icu/text/TimeZoneFormat/parse(com.ibm.icu.text.TimeZoneFormat$Style,java.lang.String,java.text.ParsePosition,java.util.EnumSet,com.ibm.icu.util.Output)#java/lang/String/length()
com/ibm/icu/text/TimeZoneFormat/parse(com.ibm.icu.text.TimeZoneFormat$Style,java.lang.String,java.text.ParsePosition,java.util.EnumSet,com.ibm.icu.util.Output)#java/util/Iterator/next()
com/ibm/icu/text/TimeZoneFormat/parse(com.ibm.icu.text.TimeZoneFormat$Style,java.lang.String,java.text.ParsePosition,java.util.EnumSet,com.ibm.icu.util.Output)#com/ibm/icu/text/TimeZoneNames$MatchInfo/tzID()
com/ibm/icu/text/TimeZoneFormat/parse(com.ibm.icu.text.TimeZoneFormat$Style,java.lang.String,java.text.ParsePosition,java.util.EnumSet,com.ibm.icu.util.Output)#java/lang/Boolean/valueOf(boolean)
com/ibm/icu/text/TimeZoneFormat/parse(com.ibm.icu.text.TimeZoneFormat$Style,java.lang.String,java.text.ParsePosition,java.util.EnumSet,com.ibm.icu.util.Output)#com/ibm/icu/text/TimeZoneFormat$Style/ordinal()
com/ibm/icu/text/TimeZoneFormat/parse(com.ibm.icu.text.TimeZoneFormat$Style,java.lang.String,java.text.ParsePosition,java.util.EnumSet,com.ibm.icu.util.Output)#java/util/Iterator/hasNext()
com/ibm/icu/text/TimeZoneFormat/parse(com.ibm.icu.text.TimeZoneFormat$Style,java.lang.String,java.text.ParsePosition,java.util.EnumSet,com.ibm.icu.util.Output)#java/util/EnumSet/of(java.lang.Enum)
com/ibm/icu/text/TimeZoneFormat/parse(com.ibm.icu.text.TimeZoneFormat$Style,java.lang.String,java.text.ParsePosition,java.util.EnumSet,com.ibm.icu.util.Output)#java/text/ParsePosition/ParsePosition(int)
com/ibm/icu/text/TimeZoneFormat/parse(com.ibm.icu.text.TimeZoneFormat$Style,java.lang.String,java.text.ParsePosition,java.util.EnumSet,com.ibm.icu.util.Output)#com/ibm/icu/impl/TimeZoneGenericNames$GenericMatchInfo/timeType()
com/ibm/icu/text/TimeZoneFormat/parse(com.ibm.icu.text.TimeZoneFormat$Style,java.lang.String,java.text.ParsePosition,java.util.EnumSet,com.ibm.icu.util.Output)#com/ibm/icu/text/TimeZoneNames$MatchInfo/matchLength()
com/ibm/icu/text/TimeZoneFormat/parse(com.ibm.icu.text.TimeZoneFormat$Style,java.lang.String,java.text.ParsePosition,java.util.EnumSet,com.ibm.icu.util.Output)#java/text/ParsePosition/getErrorIndex()
com/ibm/icu/text/TimeZoneFormat/parse(com.ibm.icu.text.TimeZoneFormat$Style,java.lang.String,java.text.ParsePosition,java.util.EnumSet,com.ibm.icu.util.Output)#java/util/EnumSet/contains(java.lang.Object)
com/ibm/icu/text/TimeZoneFormat/parse(com.ibm.icu.text.TimeZoneFormat$Style,java.lang.String,java.text.ParsePosition,java.util.EnumSet,com.ibm.icu.util.Output)#java/text/ParsePosition/setErrorIndex(int)
com/ibm/icu/text/TimeZoneFormat/parse(com.ibm.icu.text.TimeZoneFormat$Style,java.lang.String,java.text.ParsePosition,java.util.EnumSet,com.ibm.icu.util.Output)#com/ibm/icu/text/TimeZoneNames$MatchInfo/nameType()
com/ibm/icu/text/TimeZoneFormat/parse(com.ibm.icu.text.TimeZoneFormat$Style,java.lang.String,java.text.ParsePosition,java.util.EnumSet,com.ibm.icu.util.Output)#com/ibm/icu/impl/TimeZoneGenericNames$GenericMatchInfo/matchLength()
com/ibm/icu/text/TimeZoneFormat/parse(com.ibm.icu.text.TimeZoneFormat$Style,java.lang.String,java.text.ParsePosition,java.util.EnumSet,com.ibm.icu.util.Output)#com/ibm/icu/text/TimeZoneNames$MatchInfo/mzID()
com/ibm/icu/text/TimeZoneFormat/parse(com.ibm.icu.text.TimeZoneFormat$Style,java.lang.String,java.text.ParsePosition,java.util.EnumSet,com.ibm.icu.util.Output)#java/util/Collection/iterator()
com/ibm/icu/text/TimeZoneFormat/parse(com.ibm.icu.text.TimeZoneFormat$Style,java.lang.String,java.text.ParsePosition,java.util.EnumSet,com.ibm.icu.util.Output)#java/util/EnumSet/of(java.lang.Enum,java.lang.Enum)
com/ibm/icu/text/TimeZoneFormat/parse(com.ibm.icu.text.TimeZoneFormat$Style,java.lang.String,java.text.ParsePosition,java.util.EnumSet,com.ibm.icu.util.Output)#java/text/ParsePosition/getIndex()
com/ibm/icu/text/TimeZoneFormat/parse(com.ibm.icu.text.TimeZoneFormat$Style,java.lang.String,java.text.ParsePosition,java.util.EnumSet,com.ibm.icu.util.Output)#java/lang/AssertionError/AssertionError()
com/ibm/icu/text/TimeZoneFormat/parse(com.ibm.icu.text.TimeZoneFormat$Style,java.lang.String,java.text.ParsePosition,java.util.EnumSet,com.ibm.icu.util.Output)#java/lang/Boolean/booleanValue()
com/ibm/icu/text/TimeZoneFormat/format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)#java/lang/StringBuilder/append(java.lang.String)
com/ibm/icu/text/TimeZoneFormat/format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)#java/lang/String/length()
com/ibm/icu/text/TimeZoneFormat/format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)#java/text/FieldPosition/setBeginIndex(int)
com/ibm/icu/text/TimeZoneFormat/format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)#java/lang/Class/getName()
com/ibm/icu/text/TimeZoneFormat/format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)#java/text/FieldPosition/getFieldAttribute()
com/ibm/icu/text/TimeZoneFormat/format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)#java/lang/StringBuilder/StringBuilder()
com/ibm/icu/text/TimeZoneFormat/format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/ibm/icu/text/TimeZoneFormat/format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)#java/lang/StringBuffer/append(java.lang.String)
com/ibm/icu/text/TimeZoneFormat/format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)#java/lang/AssertionError/AssertionError()
com/ibm/icu/text/TimeZoneFormat/format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)#java/text/FieldPosition/setEndIndex(int)
com/ibm/icu/text/TimeZoneFormat/format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)#java/lang/Object/getClass()
com/ibm/icu/text/TimeZoneFormat/format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)#java/lang/System/currentTimeMillis()
com/ibm/icu/text/TimeZoneFormat/format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)#java/lang/StringBuilder/toString()
com/ibm/icu/text/TimeZoneFormat/format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)#java/text/FieldPosition/getField()
com/ibm/icu/text/TimeZoneFormat/parseOffsetPattern(java.lang.String,java.lang.String)#java/util/ArrayList/ArrayList()
com/ibm/icu/text/TimeZoneFormat/parseOffsetPattern(java.lang.String,java.lang.String)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
com/ibm/icu/text/TimeZoneFormat/parseOffsetPattern(java.lang.String,java.lang.String)#com/ibm/icu/text/TimeZoneFormat$GMTOffsetField/GMTOffsetField(char,int)
com/ibm/icu/text/TimeZoneFormat/parseOffsetPattern(java.lang.String,java.lang.String)#java/util/List/toArray(java.lang.Object[])
com/ibm/icu/text/TimeZoneFormat/parseOffsetPattern(java.lang.String,java.lang.String)#java/util/BitSet/BitSet(int)
com/ibm/icu/text/TimeZoneFormat/parseOffsetPattern(java.lang.String,java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/ibm/icu/text/TimeZoneFormat/parseOffsetPattern(java.lang.String,java.lang.String)#java/util/BitSet/set(int)
com/ibm/icu/text/TimeZoneFormat/parseOffsetPattern(java.lang.String,java.lang.String)#java/lang/StringBuilder/length()
com/ibm/icu/text/TimeZoneFormat/parseOffsetPattern(java.lang.String,java.lang.String)#java/lang/String/indexOf(int)
com/ibm/icu/text/TimeZoneFormat/parseOffsetPattern(java.lang.String,java.lang.String)#java/lang/StringBuilder/toString()
com/ibm/icu/text/TimeZoneFormat/parseOffsetPattern(java.lang.String,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/ibm/icu/text/TimeZoneFormat/parseOffsetPattern(java.lang.String,java.lang.String)#java/lang/String/charAt(int)
com/ibm/icu/text/TimeZoneFormat/parseOffsetPattern(java.lang.String,java.lang.String)#com/ibm/icu/text/TimeZoneFormat$GMTOffsetField/isValid(char,int)
com/ibm/icu/text/TimeZoneFormat/parseOffsetPattern(java.lang.String,java.lang.String)#java/lang/StringBuilder/setLength(int)
com/ibm/icu/text/TimeZoneFormat/parseOffsetPattern(java.lang.String,java.lang.String)#java/lang/String/length()
com/ibm/icu/text/TimeZoneFormat/parseOffsetPattern(java.lang.String,java.lang.String)#java/util/List/size()
com/ibm/icu/text/TimeZoneFormat/parseOffsetPattern(java.lang.String,java.lang.String)#java/util/BitSet/cardinality()
com/ibm/icu/text/TimeZoneFormat/parseOffsetPattern(java.lang.String,java.lang.String)#java/util/List/add(java.lang.Object)
com/ibm/icu/text/TimeZoneFormat/parseOffsetPattern(java.lang.String,java.lang.String)#java/lang/StringBuilder/append(char)
com/ibm/icu/util/BasicTimeZone/getTimeZoneRules(long)#java/util/BitSet/get(int)
com/ibm/icu/util/BasicTimeZone/getTimeZoneRules(long)#java/lang/Object/equals(java.lang.Object)
com/ibm/icu/util/BasicTimeZone/getTimeZoneRules(long)#com/ibm/icu/util/TimeArrayTimeZoneRule/getDSTSavings()
com/ibm/icu/util/BasicTimeZone/getTimeZoneRules(long)#com/ibm/icu/util/AnnualTimeZoneRule/getRawOffset()
com/ibm/icu/util/BasicTimeZone/getTimeZoneRules(long)#java/util/BitSet/set(int)
com/ibm/icu/util/BasicTimeZone/getTimeZoneRules(long)#java/util/List/add(java.lang.Object)
com/ibm/icu/util/BasicTimeZone/getTimeZoneRules(long)#com/ibm/icu/util/TimeArrayTimeZoneRule/getName()
com/ibm/icu/util/BasicTimeZone/getTimeZoneRules(long)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
com/ibm/icu/util/BasicTimeZone/getTimeZoneRules(long)#java/util/List/size()
com/ibm/icu/util/BasicTimeZone/getTimeZoneRules(long)#com/ibm/icu/util/AnnualTimeZoneRule/getName()
com/ibm/icu/util/BasicTimeZone/getTimeZoneRules(long)#java/util/List/toArray(java.lang.Object[])
com/ibm/icu/util/BasicTimeZone/getTimeZoneRules(long)#java/util/LinkedList/LinkedList()
com/ibm/icu/util/BasicTimeZone/getTimeZoneRules(long)#java/util/BitSet/BitSet(int)
com/ibm/icu/util/BasicTimeZone/getTimeZoneRules(long)#com/ibm/icu/util/AnnualTimeZoneRule/getDSTSavings()
com/ibm/icu/util/BasicTimeZone/getTimeZoneRules(long)#java/lang/System/arraycopy(java.lang.Object,int,java.lang.Object,int,int)
com/ibm/icu/util/BasicTimeZone/getTimeZoneRules(long)#java/util/Date/getTime()
com/ibm/icu/util/BasicTimeZone/getTimeZoneRules(long)#com/ibm/icu/util/TimeArrayTimeZoneRule/getRawOffset()
com/ibm/icu/text/RBBISetBuilder/build()#java/util/Iterator/hasNext()
com/ibm/icu/text/RBBISetBuilder/build()#com/ibm/icu/text/RBBISetBuilder$RangeDescriptor/setDictionaryFlag()
com/ibm/icu/text/RBBISetBuilder/build()#java/util/Iterator/next()
com/ibm/icu/text/RBBISetBuilder/build()#com/ibm/icu/text/RBBISetBuilder$RangeDescriptor/split(int)
com/ibm/icu/text/RBBISetBuilder/build()#java/lang/String/indexOf(java.lang.String)
com/ibm/icu/text/RBBISetBuilder/build()#java/util/List/add(java.lang.Object)
com/ibm/icu/text/RBBISetBuilder/build()#java/util/List/iterator()
com/ibm/icu/text/RBBISetBuilder/build()#com/ibm/icu/text/RBBISetBuilder$RangeDescriptor/RangeDescriptor()
com/ibm/icu/text/RBBISetBuilder/build()#java/util/List/equals(java.lang.Object)
com/ibm/icu/text/RBBISetBuilder/build()#java/util/List/indexOf(java.lang.Object)
com/ibm/icu/text/TransliteratorParser/parseRule(java.lang.String,int,int)#com/ibm/icu/text/TransliteratorParser$RuleHalf/parse(java.lang.String,int,int,com.ibm.icu.text.TransliteratorParser)
com/ibm/icu/text/TransliteratorParser/parseRule(java.lang.String,int,int)#java/lang/StringBuilder/append(int)
com/ibm/icu/text/TransliteratorParser/parseRule(java.lang.String,int,int)#com/ibm/icu/text/TransliteratorParser$RuleHalf/RuleHalf(com.ibm.icu.text.TransliteratorParser$1)
com/ibm/icu/text/TransliteratorParser/parseRule(java.lang.String,int,int)#java/util/List/toArray(java.lang.Object[])
com/ibm/icu/text/TransliteratorParser/parseRule(java.lang.String,int,int)#java/lang/StringBuilder/StringBuilder()
com/ibm/icu/text/TransliteratorParser/parseRule(java.lang.String,int,int)#java/lang/StringBuilder/toString()
com/ibm/icu/text/TransliteratorParser/parseRule(java.lang.String,int,int)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/ibm/icu/text/TransliteratorParser/parseRule(java.lang.String,int,int)#java/util/ArrayList/ArrayList()
com/ibm/icu/text/TransliteratorParser/parseRule(java.lang.String,int,int)#java/lang/StringBuilder/append(java.lang.String)
com/ibm/icu/text/TransliteratorParser/parseRule(java.lang.String,int,int)#java/lang/String/charAt(int)
com/ibm/icu/text/TransliteratorParser/parseRule(java.lang.String,int,int)#com/ibm/icu/text/TransliteratorParser$RuleHalf/isValidInput(com.ibm.icu.text.TransliteratorParser)
com/ibm/icu/text/TransliteratorParser/parseRule(java.lang.String,int,int)#java/lang/StringBuffer/charAt(int)
com/ibm/icu/text/TransliteratorParser/parseRule(java.lang.String,int,int)#java/lang/String/length()
com/ibm/icu/text/TransliteratorParser/parseRule(java.lang.String,int,int)#java/lang/StringBuffer/length()
com/ibm/icu/text/TransliteratorParser/parseRule(java.lang.String,int,int)#java/util/List/size()
com/ibm/icu/text/TransliteratorParser/parseRule(java.lang.String,int,int)#com/ibm/icu/text/TransliteratorParser$RuleHalf/isValidOutput(com.ibm.icu.text.TransliteratorParser)
com/ibm/icu/text/TransliteratorParser/parseRule(java.lang.String,int,int)#com/ibm/icu/text/TransliteratorParser$RuleHalf/removeContext()
com/ibm/icu/text/TransliteratorParser/parseRule(java.lang.String,int,int)#java/lang/String/getChars(int,int,char[],int)
com/ibm/icu/text/TransliteratorParser/parseRule(java.lang.String,int,int)#java/util/List/get(int)
com/ibm/icu/text/TransliteratorParser/parseRule(java.lang.String,int,int)#java/lang/String/indexOf(int)
com/ibm/icu/text/TransliteratorParser/parseRule(java.lang.String,int,int)#java/lang/StringBuffer/StringBuffer()
com/ibm/icu/text/TransliteratorParser/parseRules(com.ibm.icu.text.TransliteratorParser$RuleBody,int)#com/ibm/icu/text/TransliteratorParser$ParseData/ParseData(com.ibm.icu.text.TransliteratorParser,com.ibm.icu.text.TransliteratorParser$1)
com/ibm/icu/text/TransliteratorParser/parseRules(com.ibm.icu.text.TransliteratorParser$RuleBody,int)#java/lang/StringBuilder/insert(int,java.lang.String)
com/ibm/icu/text/TransliteratorParser/parseRules(com.ibm.icu.text.TransliteratorParser$RuleBody,int)#java/lang/String/length()
com/ibm/icu/text/TransliteratorParser/parseRules(com.ibm.icu.text.TransliteratorParser$RuleBody,int)#java/lang/String/indexOf(java.lang.String,int)
com/ibm/icu/text/TransliteratorParser/parseRules(com.ibm.icu.text.TransliteratorParser$RuleBody,int)#java/util/List/toArray(java.lang.Object[])
com/ibm/icu/text/TransliteratorParser/parseRules(com.ibm.icu.text.TransliteratorParser$RuleBody,int)#java/lang/RuntimeException/getCause()
com/ibm/icu/text/TransliteratorParser/parseRules(com.ibm.icu.text.TransliteratorParser$RuleBody,int)#java/lang/StringBuilder/delete(int,int)
com/ibm/icu/text/TransliteratorParser/parseRules(com.ibm.icu.text.TransliteratorParser$RuleBody,int)#java/util/List/get(int)
com/ibm/icu/text/TransliteratorParser/parseRules(com.ibm.icu.text.TransliteratorParser$RuleBody,int)#java/util/List/add(int,java.lang.Object)
com/ibm/icu/text/TransliteratorParser/parseRules(com.ibm.icu.text.TransliteratorParser$RuleBody,int)#java/lang/StringBuilder/toString()
com/ibm/icu/text/TransliteratorParser/parseRules(com.ibm.icu.text.TransliteratorParser$RuleBody,int)#java/lang/IllegalArgumentException/fillInStackTrace()
com/ibm/icu/text/TransliteratorParser/parseRules(com.ibm.icu.text.TransliteratorParser$RuleBody,int)#java/util/ArrayList/ArrayList()
com/ibm/icu/text/TransliteratorParser/parseRules(com.ibm.icu.text.TransliteratorParser$RuleBody,int)#com/ibm/icu/text/TransliteratorParser$RuleBody/nextLine()
com/ibm/icu/text/TransliteratorParser/parseRules(com.ibm.icu.text.TransliteratorParser$RuleBody,int)#java/util/List/remove(int)
com/ibm/icu/text/TransliteratorParser/parseRules(com.ibm.icu.text.TransliteratorParser$RuleBody,int)#com/ibm/icu/text/TransliteratorParser$RuleBody/reset()
com/ibm/icu/text/TransliteratorParser/parseRules(com.ibm.icu.text.TransliteratorParser$RuleBody,int)#java/lang/String/regionMatches(int,java.lang.String,int,int)
com/ibm/icu/text/TransliteratorParser/parseRules(com.ibm.icu.text.TransliteratorParser$RuleBody,int)#java/lang/StringBuilder/append(java.lang.String)
com/ibm/icu/text/TransliteratorParser/parseRules(com.ibm.icu.text.TransliteratorParser$RuleBody,int)#java/lang/String/charAt(int)
com/ibm/icu/text/TransliteratorParser/parseRules(com.ibm.icu.text.TransliteratorParser$RuleBody,int)#java/lang/RuntimeException/initCause(java.lang.Throwable)
com/ibm/icu/text/TransliteratorParser/parseRules(com.ibm.icu.text.TransliteratorParser$RuleBody,int)#java/util/Map/putAll(java.util.Map)
com/ibm/icu/text/TransliteratorParser/parseRules(com.ibm.icu.text.TransliteratorParser$RuleBody,int)#java/util/List/size()
com/ibm/icu/text/TransliteratorParser/parseRules(com.ibm.icu.text.TransliteratorParser$RuleBody,int)#com/ibm/icu/text/RuleBasedTransliterator$Data/Data()
com/ibm/icu/text/TransliteratorParser/parseRules(com.ibm.icu.text.TransliteratorParser$RuleBody,int)#java/util/HashMap/HashMap()
com/ibm/icu/text/TransliteratorParser/parseRules(com.ibm.icu.text.TransliteratorParser$RuleBody,int)#java/lang/StringBuilder/StringBuilder()
com/ibm/icu/text/TransliteratorParser/parseRules(com.ibm.icu.text.TransliteratorParser$RuleBody,int)#java/util/List/add(java.lang.Object)
com/ibm/icu/text/TransliteratorParser/parseRules(com.ibm.icu.text.TransliteratorParser$RuleBody,int)#java/lang/StringBuilder/append(char)
com/ibm/icu/text/TransliteratorParser/parseRules(com.ibm.icu.text.TransliteratorParser$RuleBody,int)#java/lang/StringBuilder/length()
com/ibm/icu/util/CharsTrie/Iterator/next()#java/util/ArrayList/isEmpty()
com/ibm/icu/util/CharsTrie/Iterator/next()#com/ibm/icu/util/CharsTrie$Iterator/truncateAndStop()
com/ibm/icu/util/CharsTrie/Iterator/next()#java/lang/StringBuilder/setLength(int)
com/ibm/icu/util/CharsTrie/Iterator/next()#java/lang/CharSequence/charAt(int)
com/ibm/icu/util/CharsTrie/Iterator/next()#java/lang/Long/longValue()
com/ibm/icu/util/CharsTrie/Iterator/next()#com/ibm/icu/util/CharsTrie$Iterator/next()
com/ibm/icu/util/CharsTrie/Iterator/next()#java/util/NoSuchElementException/NoSuchElementException()
com/ibm/icu/util/CharsTrie/Iterator/next()#java/util/ArrayList/size()
com/ibm/icu/util/CharsTrie/Iterator/next()#java/lang/StringBuilder/append(char)
com/ibm/icu/util/CharsTrie/Iterator/next()#java/lang/StringBuilder/length()
com/ibm/icu/util/CharsTrie/Iterator/next()#java/lang/StringBuilder/append(java.lang.CharSequence,int,int)
com/ibm/icu/util/CharsTrie/Iterator/next()#com/ibm/icu/util/CharsTrie$Iterator/branchNext(int,int)
com/ibm/icu/util/CharsTrie/Iterator/next()#java/util/ArrayList/remove(int)
com/ibm/icu/text/PluralRules/RangeConstraint/toString()#java/lang/StringBuilder/append(java.lang.String)
com/ibm/icu/text/PluralRules/RangeConstraint/toString()#com/ibm/icu/text/PluralRules$RangeConstraint$1ListBuilder/toString()
com/ibm/icu/text/PluralRules/RangeConstraint/toString()#com/ibm/icu/text/PluralRules$RangeConstraint$1ListBuilder/1ListBuilder(com.ibm.icu.text.PluralRules$RangeConstraint)
com/ibm/icu/text/PluralRules/RangeConstraint/toString()#com/ibm/icu/text/PluralRules$RangeConstraint$1ListBuilder/add(java.lang.String,java.lang.Object)
com/ibm/icu/text/PluralRules/RangeConstraint/toString()#java/lang/StringBuilder/StringBuilder()
com/ibm/icu/text/PluralRules/RangeConstraint/toString()#com/ibm/icu/text/PluralRules$RangeConstraint$1ListBuilder/add(java.lang.String)
com/ibm/icu/text/PluralRules/RangeConstraint/toString()#java/lang/Integer/valueOf(int)
com/ibm/icu/text/PluralRules/RangeConstraint/toString()#java/lang/String/valueOf(long)
com/ibm/icu/text/PluralRules/RangeConstraint/toString()#java/lang/StringBuilder/toString()
com/ibm/icu/text/PluralRules/RangeConstraint/toString()#java/util/Arrays/toString(long[])
com/ibm/icu/text/AnyTransliterator/register()#java/lang/String/equalsIgnoreCase(java.lang.String)
com/ibm/icu/text/AnyTransliterator/register()#java/util/Set/contains(java.lang.Object)
com/ibm/icu/text/AnyTransliterator/register()#java/util/Enumeration/hasMoreElements()
com/ibm/icu/text/AnyTransliterator/register()#java/util/HashSet/HashSet()
com/ibm/icu/text/AnyTransliterator/register()#java/util/HashMap/get(java.lang.Object)
com/ibm/icu/text/AnyTransliterator/register()#java/util/HashMap/HashMap()
com/ibm/icu/text/AnyTransliterator/register()#java/util/HashMap/put(java.lang.Object,java.lang.Object)
com/ibm/icu/text/AnyTransliterator/register()#java/util/Enumeration/nextElement()
com/ibm/icu/text/AnyTransliterator/register()#java/util/Set/add(java.lang.Object)
com/ibm/icu/text/AnyTransliterator/getTransliterator(int)#java/util/Map/get(java.lang.Object)
com/ibm/icu/text/AnyTransliterator/getTransliterator(int)#java/lang/StringBuilder/StringBuilder()
com/ibm/icu/text/AnyTransliterator/getTransliterator(int)#java/lang/Integer/valueOf(int)
com/ibm/icu/text/AnyTransliterator/getTransliterator(int)#java/lang/StringBuilder/toString()
com/ibm/icu/text/AnyTransliterator/getTransliterator(int)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/ibm/icu/text/AnyTransliterator/getTransliterator(int)#java/util/ArrayList/ArrayList()
com/ibm/icu/text/AnyTransliterator/getTransliterator(int)#java/lang/StringBuilder/append(java.lang.String)
com/ibm/icu/text/AnyTransliterator/getTransliterator(int)#java/util/List/add(java.lang.Object)
com/ibm/icu/text/AnyTransliterator/getTransliterator(int)#java/lang/StringBuilder/append(char)
com/ibm/icu/impl/ICUResourceBundle/instantiateBundle(java.lang.String,java.lang.String,java.lang.ClassLoader,boolean)#com/ibm/icu/impl/ICUResourceBundle/loadFromCache(java.lang.ClassLoader,java.lang.String,com.ibm.icu.util.ULocale)
com/ibm/icu/impl/ICUResourceBundle/instantiateBundle(java.lang.String,java.lang.String,java.lang.ClassLoader,boolean)#com/ibm/icu/impl/ICUResourceBundle/getString(java.lang.String)
com/ibm/icu/impl/ICUResourceBundle/instantiateBundle(java.lang.String,java.lang.String,java.lang.ClassLoader,boolean)#java/lang/String/length()
com/ibm/icu/impl/ICUResourceBundle/instantiateBundle(java.lang.String,java.lang.String,java.lang.ClassLoader,boolean)#java/lang/StringBuilder/append(boolean)
com/ibm/icu/impl/ICUResourceBundle/instantiateBundle(java.lang.String,java.lang.String,java.lang.ClassLoader,boolean)#java/lang/String/equals(java.lang.Object)
com/ibm/icu/impl/ICUResourceBundle/instantiateBundle(java.lang.String,java.lang.String,java.lang.ClassLoader,boolean)#java/lang/StringBuilder/append(java.lang.Object)
com/ibm/icu/impl/ICUResourceBundle/instantiateBundle(java.lang.String,java.lang.String,java.lang.ClassLoader,boolean)#java/lang/StringBuilder/append(java.lang.String)
com/ibm/icu/impl/ICUResourceBundle/instantiateBundle(java.lang.String,java.lang.String,java.lang.ClassLoader,boolean)#com/ibm/icu/impl/ICUResourceBundle/addToCache(java.lang.ClassLoader,java.lang.String,com.ibm.icu.util.ULocale,com.ibm.icu.util.UResourceBundle)
com/ibm/icu/impl/ICUResourceBundle/instantiateBundle(java.lang.String,java.lang.String,java.lang.ClassLoader,boolean)#java/io/PrintStream/println(java.lang.String)
com/ibm/icu/impl/ICUResourceBundle/instantiateBundle(java.lang.String,java.lang.String,java.lang.ClassLoader,boolean)#java/lang/String/substring(int,int)
com/ibm/icu/impl/ICUResourceBundle/instantiateBundle(java.lang.String,java.lang.String,java.lang.ClassLoader,boolean)#java/lang/StringBuilder/StringBuilder()
com/ibm/icu/impl/ICUResourceBundle/instantiateBundle(java.lang.String,java.lang.String,java.lang.ClassLoader,boolean)#java/lang/String/indexOf(java.lang.String)
com/ibm/icu/impl/ICUResourceBundle/instantiateBundle(java.lang.String,java.lang.String,java.lang.ClassLoader,boolean)#java/lang/String/lastIndexOf(int)
com/ibm/icu/impl/ICUResourceBundle/instantiateBundle(java.lang.String,java.lang.String,java.lang.ClassLoader,boolean)#java/lang/String/indexOf(int)
com/ibm/icu/impl/ICUResourceBundle/instantiateBundle(java.lang.String,java.lang.String,java.lang.ClassLoader,boolean)#java/lang/StringBuilder/toString()
com/ibm/icu/impl/ICUResourceBundle/findResource(java.lang.String,java.lang.String,int,java.util.HashMap,com.ibm.icu.util.UResourceBundle)#java/lang/String/length()
com/ibm/icu/impl/ICUResourceBundle/findResource(java.lang.String,java.lang.String,int,java.util.HashMap,com.ibm.icu.util.UResourceBundle)#java/util/MissingResourceException/MissingResourceException(java.lang.String,java.lang.String,java.lang.String)
com/ibm/icu/impl/ICUResourceBundle/findResource(java.lang.String,java.lang.String,int,java.util.HashMap,com.ibm.icu.util.UResourceBundle)#java/lang/String/equals(java.lang.Object)
com/ibm/icu/impl/ICUResourceBundle/findResource(java.lang.String,java.lang.String,int,java.util.HashMap,com.ibm.icu.util.UResourceBundle)#java/lang/String/substring(int,int)
com/ibm/icu/impl/ICUResourceBundle/findResource(java.lang.String,java.lang.String,int,java.util.HashMap,com.ibm.icu.util.UResourceBundle)#java/lang/String/substring(int)
com/ibm/icu/impl/ICUResourceBundle/findResource(java.lang.String,java.lang.String,int,java.util.HashMap,com.ibm.icu.util.UResourceBundle)#java/lang/String/indexOf(int,int)
com/ibm/icu/impl/ICUResourceBundle/findResource(java.lang.String,java.lang.String,int,java.util.HashMap,com.ibm.icu.util.UResourceBundle)#java/lang/StringBuilder/toString()
com/ibm/icu/impl/ICUResourceBundle/findResource(java.lang.String,java.lang.String,int,java.util.HashMap,com.ibm.icu.util.UResourceBundle)#java/lang/StringBuilder/append(java.lang.String)
com/ibm/icu/impl/ICUResourceBundle/findResource(java.lang.String,java.lang.String,int,java.util.HashMap,com.ibm.icu.util.UResourceBundle)#java/util/StringTokenizer/StringTokenizer(java.lang.String,java.lang.String)
com/ibm/icu/impl/ICUResourceBundle/findResource(java.lang.String,java.lang.String,int,java.util.HashMap,com.ibm.icu.util.UResourceBundle)#java/util/HashMap/HashMap()
com/ibm/icu/impl/ICUResourceBundle/findResource(java.lang.String,java.lang.String,int,java.util.HashMap,com.ibm.icu.util.UResourceBundle)#java/util/HashMap/put(java.lang.Object,java.lang.Object)
com/ibm/icu/impl/ICUResourceBundle/findResource(java.lang.String,java.lang.String,int,java.util.HashMap,com.ibm.icu.util.UResourceBundle)#java/lang/StringBuilder/StringBuilder()
com/ibm/icu/impl/ICUResourceBundle/findResource(java.lang.String,java.lang.String,int,java.util.HashMap,com.ibm.icu.util.UResourceBundle)#java/lang/String/indexOf(java.lang.String)
com/ibm/icu/impl/ICUResourceBundle/findResource(java.lang.String,java.lang.String,int,java.util.HashMap,com.ibm.icu.util.UResourceBundle)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/ibm/icu/impl/ICUResourceBundle/findResource(java.lang.String,java.lang.String,int,java.util.HashMap,com.ibm.icu.util.UResourceBundle)#java/util/StringTokenizer/nextToken()
com/ibm/icu/impl/ICUResourceBundle/findResource(java.lang.String,java.lang.String,int,java.util.HashMap,com.ibm.icu.util.UResourceBundle)#java/util/StringTokenizer/hasMoreTokens()
com/ibm/icu/impl/ICUResourceBundle/findResource(java.lang.String,java.lang.String,int,java.util.HashMap,com.ibm.icu.util.UResourceBundle)#java/util/HashMap/get(java.lang.Object)
com/ibm/icu/impl/ICUResourceBundle/findResource(java.lang.String,java.lang.String,int,java.util.HashMap,com.ibm.icu.util.UResourceBundle)#java/lang/String/indexOf(int)
com/ibm/icu/impl/ICUResourceBundle/getFunctionalEquivalent(java.lang.String,java.lang.ClassLoader,java.lang.String,java.lang.String,com.ibm.icu.util.ULocale,boolean[],boolean)#com/ibm/icu/impl/ICUResourceBundle/getString(java.lang.String)
com/ibm/icu/impl/ICUResourceBundle/getFunctionalEquivalent(java.lang.String,java.lang.ClassLoader,java.lang.String,java.lang.String,com.ibm.icu.util.ULocale,boolean[],boolean)#java/lang/StringBuilder/append(java.lang.String)
com/ibm/icu/impl/ICUResourceBundle/getFunctionalEquivalent(java.lang.String,java.lang.ClassLoader,java.lang.String,java.lang.String,com.ibm.icu.util.ULocale,boolean[],boolean)#java/lang/String/length()
com/ibm/icu/impl/ICUResourceBundle/getFunctionalEquivalent(java.lang.String,java.lang.ClassLoader,java.lang.String,java.lang.String,com.ibm.icu.util.ULocale,boolean[],boolean)#java/lang/StringBuilder/StringBuilder()
com/ibm/icu/impl/ICUResourceBundle/getFunctionalEquivalent(java.lang.String,java.lang.ClassLoader,java.lang.String,java.lang.String,com.ibm.icu.util.ULocale,boolean[],boolean)#java/util/Locale/toString()
com/ibm/icu/impl/ICUResourceBundle/getFunctionalEquivalent(java.lang.String,java.lang.ClassLoader,java.lang.String,java.lang.String,com.ibm.icu.util.ULocale,boolean[],boolean)#java/lang/StringBuilder/toString()
com/ibm/icu/impl/ICUResourceBundle/getFunctionalEquivalent(java.lang.String,java.lang.ClassLoader,java.lang.String,java.lang.String,com.ibm.icu.util.ULocale,boolean[],boolean)#java/util/MissingResourceException/MissingResourceException(java.lang.String,java.lang.String,java.lang.String)
com/ibm/icu/impl/ICUResourceBundle/getFunctionalEquivalent(java.lang.String,java.lang.ClassLoader,java.lang.String,java.lang.String,com.ibm.icu.util.ULocale,boolean[],boolean)#com/ibm/icu/impl/ICUResourceBundle$AvailEntry/getULocaleList()
com/ibm/icu/impl/ICUResourceBundle/getFunctionalEquivalent(java.lang.String,java.lang.ClassLoader,java.lang.String,java.lang.String,com.ibm.icu.util.ULocale,boolean[],boolean)#java/lang/String/equals(java.lang.Object)
com/ibm/icu/impl/ICUResourceBundle/getFunctionalEquivalent(java.lang.String,java.lang.ClassLoader,java.lang.String,java.lang.String,com.ibm.icu.util.ULocale,boolean[],boolean)#com/ibm/icu/impl/ICUResourceBundle/get(java.lang.String)
com/ibm/icu/impl/ICUResourceBundle/createLocaleNameSet(java.lang.String,java.lang.ClassLoader)#java/util/Collections/emptySet()
com/ibm/icu/impl/ICUResourceBundle/createLocaleNameSet(java.lang.String,java.lang.ClassLoader)#java/lang/StringBuilder/StringBuilder()
com/ibm/icu/impl/ICUResourceBundle/createLocaleNameSet(java.lang.String,java.lang.ClassLoader)#java/util/HashSet/addAll(java.util.Collection)
com/ibm/icu/impl/ICUResourceBundle/createLocaleNameSet(java.lang.String,java.lang.ClassLoader)#java/util/HashSet/HashSet()
com/ibm/icu/impl/ICUResourceBundle/createLocaleNameSet(java.lang.String,java.lang.ClassLoader)#java/lang/StringBuilder/toString()
com/ibm/icu/impl/ICUResourceBundle/createLocaleNameSet(java.lang.String,java.lang.ClassLoader)#java/lang/StringBuilder/append(java.lang.String)
com/ibm/icu/impl/ICUResourceBundle/createLocaleNameSet(java.lang.String,java.lang.ClassLoader)#java/io/PrintStream/println(java.lang.String)
com/ibm/icu/impl/ICUResourceBundle/createLocaleNameSet(java.lang.String,java.lang.ClassLoader)#java/util/Arrays/asList(java.lang.Object[])
com/ibm/icu/impl/ICUResourceBundle/createLocaleNameSet(java.lang.String,java.lang.ClassLoader)#java/lang/Thread/dumpStack()
com/ibm/icu/impl/ICUResourceBundle/createLocaleNameSet(java.lang.String,java.lang.ClassLoader)#java/util/Collections/unmodifiableSet(java.util.Set)
com/ibm/icu/impl/ICUResourceBundle/getWithFallback(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/ibm/icu/impl/ICUResourceBundle/getWithFallback(java.lang.String)#java/lang/StringBuilder/append(int)
com/ibm/icu/impl/ICUResourceBundle/getWithFallback(java.lang.String)#com/ibm/icu/impl/ICUResourceBundle/getString()
com/ibm/icu/impl/ICUResourceBundle/getWithFallback(java.lang.String)#java/util/MissingResourceException/MissingResourceException(java.lang.String,java.lang.String,java.lang.String)
com/ibm/icu/impl/ICUResourceBundle/getWithFallback(java.lang.String)#java/lang/Object/getClass()
com/ibm/icu/impl/ICUResourceBundle/getWithFallback(java.lang.String)#java/lang/StringBuilder/toString()
com/ibm/icu/impl/ICUResourceBundle/getWithFallback(java.lang.String)#java/lang/String/equals(java.lang.Object)
com/ibm/icu/impl/ICUResourceBundle/getWithFallback(java.lang.String)#java/lang/Class/getName()
com/ibm/icu/impl/ICUResourceBundle/getWithFallback(java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/ibm/icu/text/MessageFormat/clone()#java/util/Map/put(java.lang.Object,java.lang.Object)
com/ibm/icu/text/MessageFormat/clone()#java/util/Iterator/hasNext()
com/ibm/icu/text/MessageFormat/clone()#java/util/Map$Entry/getKey()
com/ibm/icu/text/MessageFormat/clone()#com/ibm/icu/text/UFormat/clone()
com/ibm/icu/text/MessageFormat/clone()#java/text/Format/clone()
com/ibm/icu/text/MessageFormat/clone()#java/util/Set/iterator()
com/ibm/icu/text/MessageFormat/clone()#java/util/Map$Entry/getValue()
com/ibm/icu/text/MessageFormat/clone()#java/util/HashSet/HashSet()
com/ibm/icu/text/MessageFormat/clone()#java/util/Iterator/next()
com/ibm/icu/text/MessageFormat/clone()#java/util/HashMap/HashMap()
com/ibm/icu/text/MessageFormat/clone()#java/util/Map/entrySet()
com/ibm/icu/text/MessageFormat/clone()#java/util/Set/add(java.lang.Object)
com/ibm/icu/text/MessageFormat/formatComplexSubMessage(int,double,java.lang.Object[],java.util.Map,com.ibm.icu.text.MessageFormat$AppendableWrapper)#java/text/Format/format(java.lang.Object)
com/ibm/icu/text/MessageFormat/formatComplexSubMessage(int,double,java.lang.Object[],java.util.Map,com.ibm.icu.text.MessageFormat$AppendableWrapper)#com/ibm/icu/text/MessagePattern$Part/getType()
com/ibm/icu/text/MessageFormat/formatComplexSubMessage(int,double,java.lang.Object[],java.util.Map,com.ibm.icu.text.MessageFormat$AppendableWrapper)#java/lang/StringBuilder/append(java.lang.String)
com/ibm/icu/text/MessageFormat/formatComplexSubMessage(int,double,java.lang.Object[],java.util.Map,com.ibm.icu.text.MessageFormat$AppendableWrapper)#java/lang/StringBuilder/StringBuilder()
com/ibm/icu/text/MessageFormat/formatComplexSubMessage(int,double,java.lang.Object[],java.util.Map,com.ibm.icu.text.MessageFormat$AppendableWrapper)#java/lang/StringBuilder/append(java.lang.CharSequence,int,int)
com/ibm/icu/text/MessageFormat/formatComplexSubMessage(int,double,java.lang.Object[],java.util.Map,com.ibm.icu.text.MessageFormat$AppendableWrapper)#java/lang/StringBuilder/toString()
com/ibm/icu/text/MessageFormat/formatComplexSubMessage(int,double,java.lang.Object[],java.util.Map,com.ibm.icu.text.MessageFormat$AppendableWrapper)#com/ibm/icu/text/MessageFormat$AppendableWrapper/append(java.lang.CharSequence)
com/ibm/icu/text/MessageFormat/formatComplexSubMessage(int,double,java.lang.Object[],java.util.Map,com.ibm.icu.text.MessageFormat$AppendableWrapper)#com/ibm/icu/text/MessagePattern$Part/getLimit()
com/ibm/icu/text/MessageFormat/formatComplexSubMessage(int,double,java.lang.Object[],java.util.Map,com.ibm.icu.text.MessageFormat$AppendableWrapper)#java/lang/Double/valueOf(double)
com/ibm/icu/text/MessageFormat/formatComplexSubMessage(int,double,java.lang.Object[],java.util.Map,com.ibm.icu.text.MessageFormat$AppendableWrapper)#java/lang/String/substring(int,int)
com/ibm/icu/text/MessageFormat/formatComplexSubMessage(int,double,java.lang.Object[],java.util.Map,com.ibm.icu.text.MessageFormat$AppendableWrapper)#java/lang/String/indexOf(int)
com/ibm/icu/text/MessageFormat/formatComplexSubMessage(int,double,java.lang.Object[],java.util.Map,com.ibm.icu.text.MessageFormat$AppendableWrapper)#com/ibm/icu/text/MessagePattern$Part/getIndex()
com/ibm/icu/text/MessageFormat/format(int,double,java.lang.Object[],java.util.Map,com.ibm.icu.text.MessageFormat$AppendableWrapper,java.text.FieldPosition)#java/lang/StringBuilder/append(int)
com/ibm/icu/text/MessageFormat/format(int,double,java.lang.Object[],java.util.Map,com.ibm.icu.text.MessageFormat$AppendableWrapper,java.text.FieldPosition)#com/ibm/icu/text/MessageFormat$AppendableWrapper/access$000(com.ibm.icu.text.MessageFormat$AppendableWrapper)
com/ibm/icu/text/MessageFormat/format(int,double,java.lang.Object[],java.util.Map,com.ibm.icu.text.MessageFormat$AppendableWrapper,java.text.FieldPosition)#java/util/Map/containsKey(java.lang.Object)
com/ibm/icu/text/MessageFormat/format(int,double,java.lang.Object[],java.util.Map,com.ibm.icu.text.MessageFormat$AppendableWrapper,java.text.FieldPosition)#java/lang/Integer/valueOf(int)
com/ibm/icu/text/MessageFormat/format(int,double,java.lang.Object[],java.util.Map,com.ibm.icu.text.MessageFormat$AppendableWrapper,java.text.FieldPosition)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/ibm/icu/text/MessageFormat/format(int,double,java.lang.Object[],java.util.Map,com.ibm.icu.text.MessageFormat$AppendableWrapper,java.text.FieldPosition)#com/ibm/icu/text/MessagePattern$Part/getArgType()
com/ibm/icu/text/MessageFormat/format(int,double,java.lang.Object[],java.util.Map,com.ibm.icu.text.MessageFormat$AppendableWrapper,java.text.FieldPosition)#com/ibm/icu/text/MessagePattern$Part/getValue()
com/ibm/icu/text/MessageFormat/format(int,double,java.lang.Object[],java.util.Map,com.ibm.icu.text.MessageFormat$AppendableWrapper,java.text.FieldPosition)#java/lang/StringBuilder/toString()
com/ibm/icu/text/MessageFormat/format(int,double,java.lang.Object[],java.util.Map,com.ibm.icu.text.MessageFormat$AppendableWrapper,java.text.FieldPosition)#com/ibm/icu/text/MessageFormat$AppendableWrapper/append(java.lang.CharSequence,int,int)
com/ibm/icu/text/MessageFormat/format(int,double,java.lang.Object[],java.util.Map,com.ibm.icu.text.MessageFormat$AppendableWrapper,java.text.FieldPosition)#com/ibm/icu/text/MessagePattern$ArgType/hasPluralStyle()
com/ibm/icu/text/MessageFormat/format(int,double,java.lang.Object[],java.util.Map,com.ibm.icu.text.MessageFormat$AppendableWrapper,java.text.FieldPosition)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
com/ibm/icu/text/MessageFormat/format(int,double,java.lang.Object[],java.util.Map,com.ibm.icu.text.MessageFormat$AppendableWrapper,java.text.FieldPosition)#java/text/Format/format(java.lang.Object)
com/ibm/icu/text/MessageFormat/format(int,double,java.lang.Object[],java.util.Map,com.ibm.icu.text.MessageFormat$AppendableWrapper,java.text.FieldPosition)#com/ibm/icu/text/MessagePattern$Part/getType()
com/ibm/icu/text/MessageFormat/format(int,double,java.lang.Object[],java.util.Map,com.ibm.icu.text.MessageFormat$AppendableWrapper,java.text.FieldPosition)#java/lang/Object/toString()
com/ibm/icu/text/MessageFormat/format(int,double,java.lang.Object[],java.util.Map,com.ibm.icu.text.MessageFormat$AppendableWrapper,java.text.FieldPosition)#com/ibm/icu/text/MessageFormat$AppendableWrapper/append(java.lang.CharSequence)
com/ibm/icu/text/MessageFormat/format(int,double,java.lang.Object[],java.util.Map,com.ibm.icu.text.MessageFormat$AppendableWrapper,java.text.FieldPosition)#com/ibm/icu/text/MessagePattern$Part/getLimit()
com/ibm/icu/text/MessageFormat/format(int,double,java.lang.Object[],java.util.Map,com.ibm.icu.text.MessageFormat$AppendableWrapper,java.text.FieldPosition)#java/lang/Double/valueOf(double)
com/ibm/icu/text/MessageFormat/format(int,double,java.lang.Object[],java.util.Map,com.ibm.icu.text.MessageFormat$AppendableWrapper,java.text.FieldPosition)#java/lang/Number/doubleValue()
com/ibm/icu/text/MessageFormat/format(int,double,java.lang.Object[],java.util.Map,com.ibm.icu.text.MessageFormat$AppendableWrapper,java.text.FieldPosition)#java/lang/StringBuilder/append(java.lang.String)
com/ibm/icu/text/MessageFormat/format(int,double,java.lang.Object[],java.util.Map,com.ibm.icu.text.MessageFormat$AppendableWrapper,java.text.FieldPosition)#java/lang/Integer/toString(int)
com/ibm/icu/text/MessageFormat/format(int,double,java.lang.Object[],java.util.Map,com.ibm.icu.text.MessageFormat$AppendableWrapper,java.text.FieldPosition)#java/util/Map/get(java.lang.Object)
com/ibm/icu/text/MessageFormat/format(int,double,java.lang.Object[],java.util.Map,com.ibm.icu.text.MessageFormat$AppendableWrapper,java.text.FieldPosition)#java/lang/StringBuilder/StringBuilder()
com/ibm/icu/text/MessageFormat/format(int,double,java.lang.Object[],java.util.Map,com.ibm.icu.text.MessageFormat$AppendableWrapper,java.text.FieldPosition)#java/lang/StringBuilder/append(java.lang.Object)
com/ibm/icu/text/MessageFormat/format(int,double,java.lang.Object[],java.util.Map,com.ibm.icu.text.MessageFormat$AppendableWrapper,java.text.FieldPosition)#com/ibm/icu/text/MessageFormat$AppendableWrapper/formatAndAppend(java.text.Format,java.lang.Object)
com/ibm/icu/text/MessageFormat/format(int,double,java.lang.Object[],java.util.Map,com.ibm.icu.text.MessageFormat$AppendableWrapper,java.text.FieldPosition)#com/ibm/icu/text/MessageFormat$AppendableWrapper/access$500(com.ibm.icu.text.MessageFormat$AppendableWrapper)
com/ibm/icu/text/MessageFormat/format(int,double,java.lang.Object[],java.util.Map,com.ibm.icu.text.MessageFormat$AppendableWrapper,java.text.FieldPosition)#com/ibm/icu/text/MessageFormat$PluralSelectorProvider/PluralSelectorProvider(com.ibm.icu.util.ULocale,com.ibm.icu.text.PluralRules$PluralType)
com/ibm/icu/text/MessageFormat/format(int,double,java.lang.Object[],java.util.Map,com.ibm.icu.text.MessageFormat$AppendableWrapper,java.text.FieldPosition)#java/lang/String/indexOf(int)
com/ibm/icu/text/MessageFormat/format(int,double,java.lang.Object[],java.util.Map,com.ibm.icu.text.MessageFormat$AppendableWrapper,java.text.FieldPosition)#com/ibm/icu/text/MessagePattern$Part/getIndex()
com/ibm/icu/text/MessageFormat/getLiteralStringUntilNextArgument(int)#com/ibm/icu/text/MessagePattern$Part/getType()
com/ibm/icu/text/MessageFormat/getLiteralStringUntilNextArgument(int)#com/ibm/icu/text/MessagePattern$Part/getLimit()
com/ibm/icu/text/MessageFormat/getLiteralStringUntilNextArgument(int)#java/lang/StringBuilder/append(java.lang.String)
com/ibm/icu/text/MessageFormat/getLiteralStringUntilNextArgument(int)#java/lang/AssertionError/AssertionError(java.lang.Object)
com/ibm/icu/text/MessageFormat/getLiteralStringUntilNextArgument(int)#java/lang/StringBuilder/StringBuilder()
com/ibm/icu/text/MessageFormat/getLiteralStringUntilNextArgument(int)#java/lang/StringBuilder/append(java.lang.Object)
com/ibm/icu/text/MessageFormat/getLiteralStringUntilNextArgument(int)#java/lang/StringBuilder/append(java.lang.CharSequence,int,int)
com/ibm/icu/text/MessageFormat/getLiteralStringUntilNextArgument(int)#com/ibm/icu/text/MessagePattern$Part/getIndex()
com/ibm/icu/text/MessageFormat/getLiteralStringUntilNextArgument(int)#java/lang/StringBuilder/toString()
com/ibm/icu/text/MessageFormat/formatToCharacterIterator(java.lang.Object)#java/text/AttributedString/addAttribute(java.text.AttributedCharacterIterator$Attribute,java.lang.Object,int,int)
com/ibm/icu/text/MessageFormat/formatToCharacterIterator(java.lang.Object)#java/util/Iterator/hasNext()
com/ibm/icu/text/MessageFormat/formatToCharacterIterator(java.lang.Object)#com/ibm/icu/text/MessageFormat$AttributeAndPosition/access$400(com.ibm.icu.text.MessageFormat$AttributeAndPosition)
com/ibm/icu/text/MessageFormat/formatToCharacterIterator(java.lang.Object)#com/ibm/icu/text/MessageFormat$AttributeAndPosition/access$300(com.ibm.icu.text.MessageFormat$AttributeAndPosition)
com/ibm/icu/text/MessageFormat/formatToCharacterIterator(java.lang.Object)#com/ibm/icu/text/MessageFormat$AttributeAndPosition/access$200(com.ibm.icu.text.MessageFormat$AttributeAndPosition)
com/ibm/icu/text/MessageFormat/formatToCharacterIterator(java.lang.Object)#com/ibm/icu/text/MessageFormat$AttributeAndPosition/access$100(com.ibm.icu.text.MessageFormat$AttributeAndPosition)
com/ibm/icu/text/MessageFormat/formatToCharacterIterator(java.lang.Object)#java/lang/StringBuilder/StringBuilder()
com/ibm/icu/text/MessageFormat/formatToCharacterIterator(java.lang.Object)#com/ibm/icu/text/MessageFormat$AppendableWrapper/access$000(com.ibm.icu.text.MessageFormat$AppendableWrapper)
com/ibm/icu/text/MessageFormat/formatToCharacterIterator(java.lang.Object)#java/text/AttributedString/AttributedString(java.lang.String)
com/ibm/icu/text/MessageFormat/formatToCharacterIterator(java.lang.Object)#java/util/List/iterator()
com/ibm/icu/text/MessageFormat/formatToCharacterIterator(java.lang.Object)#java/lang/StringBuilder/toString()
com/ibm/icu/text/MessageFormat/formatToCharacterIterator(java.lang.Object)#java/util/Iterator/next()
com/ibm/icu/text/MessageFormat/formatToCharacterIterator(java.lang.Object)#com/ibm/icu/text/MessageFormat$AppendableWrapper/AppendableWrapper(java.lang.StringBuilder)
com/ibm/icu/text/MessageFormat/formatToCharacterIterator(java.lang.Object)#java/lang/NullPointerException/NullPointerException(java.lang.String)
com/ibm/icu/text/MessageFormat/formatToCharacterIterator(java.lang.Object)#java/text/AttributedString/getIterator()
com/ibm/icu/text/MessageFormat/formatToCharacterIterator(java.lang.Object)#com/ibm/icu/text/MessageFormat$AppendableWrapper/useAttributes()
com/ibm/icu/text/MessageFormat/parse(int,java.lang.String,java.text.ParsePosition,java.lang.Object[],java.util.Map)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
com/ibm/icu/text/MessageFormat/parse(int,java.lang.String,java.text.ParsePosition,java.lang.Object[],java.util.Map)#java/text/ParsePosition/setIndex(int)
com/ibm/icu/text/MessageFormat/parse(int,java.lang.String,java.text.ParsePosition,java.lang.Object[],java.util.Map)#java/lang/StringBuilder/append(java.lang.String)
com/ibm/icu/text/MessageFormat/parse(int,java.lang.String,java.text.ParsePosition,java.lang.Object[],java.util.Map)#java/text/Format/parseObject(java.lang.String,java.text.ParsePosition)
com/ibm/icu/text/MessageFormat/parse(int,java.lang.String,java.text.ParsePosition,java.lang.Object[],java.util.Map)#java/lang/AssertionError/AssertionError(java.lang.Object)
com/ibm/icu/text/MessageFormat/parse(int,java.lang.String,java.text.ParsePosition,java.lang.Object[],java.util.Map)#java/text/ParsePosition/ParsePosition(int)
com/ibm/icu/text/MessageFormat/parse(int,java.lang.String,java.text.ParsePosition,java.lang.Object[],java.util.Map)#java/lang/String/indexOf(java.lang.String,int)
com/ibm/icu/text/MessageFormat/parse(int,java.lang.String,java.text.ParsePosition,java.lang.Object[],java.util.Map)#java/lang/String/equals(java.lang.Object)
com/ibm/icu/text/MessageFormat/parse(int,java.lang.String,java.text.ParsePosition,java.lang.Object[],java.util.Map)#java/lang/StringBuilder/StringBuilder()
com/ibm/icu/text/MessageFormat/parse(int,java.lang.String,java.text.ParsePosition,java.lang.Object[],java.util.Map)#java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)
com/ibm/icu/text/MessageFormat/parse(int,java.lang.String,java.text.ParsePosition,java.lang.Object[],java.util.Map)#java/util/Map/containsKey(java.lang.Object)
com/ibm/icu/text/MessageFormat/parse(int,java.lang.String,java.text.ParsePosition,java.lang.Object[],java.util.Map)#java/text/ParsePosition/setErrorIndex(int)
com/ibm/icu/text/MessageFormat/parse(int,java.lang.String,java.text.ParsePosition,java.lang.Object[],java.util.Map)#java/lang/Integer/valueOf(int)
com/ibm/icu/text/MessageFormat/parse(int,java.lang.String,java.text.ParsePosition,java.lang.Object[],java.util.Map)#java/lang/StringBuilder/append(java.lang.Object)
com/ibm/icu/text/MessageFormat/parse(int,java.lang.String,java.text.ParsePosition,java.lang.Object[],java.util.Map)#com/ibm/icu/text/MessagePattern$Part/getValue()
com/ibm/icu/text/MessageFormat/parse(int,java.lang.String,java.text.ParsePosition,java.lang.Object[],java.util.Map)#java/lang/StringBuilder/toString()
com/ibm/icu/text/MessageFormat/parse(int,java.lang.String,java.text.ParsePosition,java.lang.Object[],java.util.Map)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/ibm/icu/text/MessageFormat/parse(int,java.lang.String,java.text.ParsePosition,java.lang.Object[],java.util.Map)#com/ibm/icu/text/MessagePattern$ArgType/hasPluralStyle()
com/ibm/icu/text/MessageFormat/parse(int,java.lang.String,java.text.ParsePosition,java.lang.Object[],java.util.Map)#com/ibm/icu/text/MessagePattern$Part/getType()
com/ibm/icu/text/MessageFormat/parse(int,java.lang.String,java.text.ParsePosition,java.lang.Object[],java.util.Map)#java/lang/Object/toString()
com/ibm/icu/text/MessageFormat/parse(int,java.lang.String,java.text.ParsePosition,java.lang.Object[],java.util.Map)#com/ibm/icu/text/MessagePattern$Part/getLimit()
com/ibm/icu/text/MessageFormat/parse(int,java.lang.String,java.text.ParsePosition,java.lang.Object[],java.util.Map)#java/lang/Double/valueOf(double)
com/ibm/icu/text/MessageFormat/parse(int,java.lang.String,java.text.ParsePosition,java.lang.Object[],java.util.Map)#java/lang/String/regionMatches(int,java.lang.String,int,int)
com/ibm/icu/text/MessageFormat/parse(int,java.lang.String,java.text.ParsePosition,java.lang.Object[],java.util.Map)#java/lang/Integer/toString(int)
com/ibm/icu/text/MessageFormat/parse(int,java.lang.String,java.text.ParsePosition,java.lang.Object[],java.util.Map)#java/lang/String/length()
com/ibm/icu/text/MessageFormat/parse(int,java.lang.String,java.text.ParsePosition,java.lang.Object[],java.util.Map)#java/util/Map/get(java.lang.Object)
com/ibm/icu/text/MessageFormat/parse(int,java.lang.String,java.text.ParsePosition,java.lang.Object[],java.util.Map)#java/lang/String/substring(int,int)
com/ibm/icu/text/MessageFormat/parse(int,java.lang.String,java.text.ParsePosition,java.lang.Object[],java.util.Map)#com/ibm/icu/text/MessagePattern$Part/getArgType()
com/ibm/icu/text/MessageFormat/parse(int,java.lang.String,java.text.ParsePosition,java.lang.Object[],java.util.Map)#java/text/ParsePosition/getIndex()
com/ibm/icu/text/MessageFormat/parse(int,java.lang.String,java.text.ParsePosition,java.lang.Object[],java.util.Map)#com/ibm/icu/text/MessagePattern$Part/getIndex()
com/ibm/icu/text/MessageFormat/getFormatsByArgumentIndex()#java/util/ArrayList/ArrayList()
com/ibm/icu/text/MessageFormat/getFormatsByArgumentIndex()#java/util/Map/get(java.lang.Object)
com/ibm/icu/text/MessageFormat/getFormatsByArgumentIndex()#java/util/ArrayList/toArray(java.lang.Object[])
com/ibm/icu/text/MessageFormat/getFormatsByArgumentIndex()#java/util/ArrayList/set(int,java.lang.Object)
com/ibm/icu/text/MessageFormat/getFormatsByArgumentIndex()#java/lang/Integer/valueOf(int)
com/ibm/icu/text/MessageFormat/getFormatsByArgumentIndex()#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/ibm/icu/text/MessageFormat/getFormatsByArgumentIndex()#com/ibm/icu/text/MessagePattern$Part/getValue()
com/ibm/icu/text/MessageFormat/getFormatsByArgumentIndex()#java/util/ArrayList/add(java.lang.Object)
com/ibm/icu/text/MessageFormat/getFormatsByArgumentIndex()#java/util/ArrayList/size()
com/ibm/icu/impl/URLHandler/FileURLHandler/process(com.ibm.icu.impl.URLHandler$URLVisitor,boolean,boolean,java.lang.String,java.io.File[])#java/io/File/getName()
com/ibm/icu/impl/URLHandler/FileURLHandler/process(com.ibm.icu.impl.URLHandler$URLVisitor,boolean,boolean,java.lang.String,java.io.File[])#java/io/File/isDirectory()
com/ibm/icu/impl/URLHandler/FileURLHandler/process(com.ibm.icu.impl.URLHandler$URLVisitor,boolean,boolean,java.lang.String,java.io.File[])#java/lang/StringBuilder/append(java.lang.String)
com/ibm/icu/impl/URLHandler/FileURLHandler/process(com.ibm.icu.impl.URLHandler$URLVisitor,boolean,boolean,java.lang.String,java.io.File[])#java/lang/StringBuilder/StringBuilder()
com/ibm/icu/impl/URLHandler/FileURLHandler/process(com.ibm.icu.impl.URLHandler$URLVisitor,boolean,boolean,java.lang.String,java.io.File[])#java/lang/StringBuilder/append(char)
com/ibm/icu/impl/URLHandler/FileURLHandler/process(com.ibm.icu.impl.URLHandler$URLVisitor,boolean,boolean,java.lang.String,java.io.File[])#java/io/File/listFiles()
com/ibm/icu/impl/URLHandler/FileURLHandler/process(com.ibm.icu.impl.URLHandler$URLVisitor,boolean,boolean,java.lang.String,java.io.File[])#java/lang/StringBuilder/toString()
com/ibm/icu/impl/URLHandler/FileURLHandler/process(com.ibm.icu.impl.URLHandler$URLVisitor,boolean,boolean,java.lang.String,java.io.File[])#com/ibm/icu/impl/URLHandler$FileURLHandler/process(com.ibm.icu.impl.URLHandler$URLVisitor,boolean,boolean,java.lang.String,java.io.File[])
com/ibm/icu/impl/URLHandler/FileURLHandler/process(com.ibm.icu.impl.URLHandler$URLVisitor,boolean,boolean,java.lang.String,java.io.File[])#com/ibm/icu/impl/URLHandler$URLVisitor/visit(java.lang.String)
com/ibm/icu/text/Transliterator/createFromRules(java.lang.String,java.lang.String,int)#java/util/ArrayList/ArrayList()
com/ibm/icu/text/Transliterator/createFromRules(java.lang.String,java.lang.String,int)#java/lang/StringBuilder/append(java.lang.String)
com/ibm/icu/text/Transliterator/createFromRules(java.lang.String,java.lang.String,int)#java/lang/Math/max(int,int)
com/ibm/icu/text/Transliterator/createFromRules(java.lang.String,java.lang.String,int)#java/lang/String/length()
com/ibm/icu/text/Transliterator/createFromRules(java.lang.String,java.lang.String,int)#java/lang/StringBuilder/StringBuilder()
com/ibm/icu/text/Transliterator/createFromRules(java.lang.String,java.lang.String,int)#java/util/List/add(java.lang.Object)
com/ibm/icu/text/Transliterator/createFromRules(java.lang.String,java.lang.String,int)#java/util/List/get(int)
com/ibm/icu/text/Transliterator/createFromRules(java.lang.String,java.lang.String,int)#java/lang/StringBuilder/toString()
com/ibm/icu/text/Transliterator/createFromRules(java.lang.String,java.lang.String,int)#java/lang/StringBuilder/append(int)
com/ibm/icu/text/Transliterator/createFromRules(java.lang.String,java.lang.String,int)#java/util/List/size()
com/ibm/icu/text/Transliterator/getInstance(java.lang.String,int)#java/util/ArrayList/ArrayList()
com/ibm/icu/text/Transliterator/getInstance(java.lang.String,int)#java/util/List/size()
com/ibm/icu/text/Transliterator/getInstance(java.lang.String,int)#java/lang/StringBuffer/toString()
com/ibm/icu/text/Transliterator/getInstance(java.lang.String,int)#java/util/List/get(int)
com/ibm/icu/text/Transliterator/getInstance(java.lang.String,int)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/ibm/icu/text/Transliterator/getInstance(java.lang.String,int)#java/lang/StringBuffer/StringBuffer()
com/ibm/icu/text/Transliterator/getInstance(java.lang.String,int)#java/lang/StringBuilder/toString()
com/ibm/icu/text/Transliterator/getInstance(java.lang.String,int)#java/lang/StringBuilder/append(java.lang.String)
com/ibm/icu/text/Transliterator/getInstance(java.lang.String,int)#java/lang/StringBuilder/StringBuilder()
com/ibm/icu/text/Transliterator/getInstance(java.lang.String,int)#java/lang/StringBuffer/indexOf(java.lang.String)
com/ibm/icu/text/Transliterator/baseToRules(boolean)#java/lang/StringBuilder/append(java.lang.String)
com/ibm/icu/text/Transliterator/baseToRules(boolean)#java/lang/StringBuffer/append(char)
com/ibm/icu/text/Transliterator/baseToRules(boolean)#java/lang/String/length()
com/ibm/icu/text/Transliterator/baseToRules(boolean)#java/lang/StringBuffer/toString()
com/ibm/icu/text/Transliterator/baseToRules(boolean)#java/lang/StringBuilder/StringBuilder()
com/ibm/icu/text/Transliterator/baseToRules(boolean)#java/lang/StringBuilder/append(char)
com/ibm/icu/text/Transliterator/baseToRules(boolean)#java/lang/StringBuffer/insert(int,java.lang.String)
com/ibm/icu/text/Transliterator/baseToRules(boolean)#java/lang/StringBuffer/StringBuffer()
com/ibm/icu/text/Transliterator/baseToRules(boolean)#java/lang/StringBuilder/toString()
com/ibm/icu/text/Transliterator/getDisplayName(java.lang.String,com.ibm.icu.util.ULocale)#java/text/MessageFormat/format(java.lang.Object)
com/ibm/icu/text/Transliterator/getDisplayName(java.lang.String,com.ibm.icu.util.ULocale)#com/ibm/icu/impl/ICUResourceBundle/getString(java.lang.String)
com/ibm/icu/text/Transliterator/getDisplayName(java.lang.String,com.ibm.icu.util.ULocale)#java/lang/StringBuilder/append(java.lang.String)
com/ibm/icu/text/Transliterator/getDisplayName(java.lang.String,com.ibm.icu.util.ULocale)#java/lang/StringBuilder/StringBuilder()
com/ibm/icu/text/Transliterator/getDisplayName(java.lang.String,com.ibm.icu.util.ULocale)#java/text/MessageFormat/MessageFormat(java.lang.String)
com/ibm/icu/text/Transliterator/getDisplayName(java.lang.String,com.ibm.icu.util.ULocale)#java/lang/StringBuilder/append(char)
com/ibm/icu/text/Transliterator/getDisplayName(java.lang.String,com.ibm.icu.util.ULocale)#java/lang/RuntimeException/RuntimeException()
com/ibm/icu/text/Transliterator/getDisplayName(java.lang.String,com.ibm.icu.util.ULocale)#java/lang/StringBuilder/toString()
com/ibm/icu/text/Transliterator/getDisplayName(java.lang.String,com.ibm.icu.util.ULocale)#java/lang/String/length()
com/ibm/icu/text/Transliterator/getDisplayName(java.lang.String,com.ibm.icu.util.ULocale)#java/util/Map/get(java.lang.Object)
com/ibm/icu/text/Transliterator/getDisplayName(java.lang.String,com.ibm.icu.util.ULocale)#java/lang/Integer/valueOf(int)
com/ibm/icu/text/Transliterator/<clinit>()#java/util/Collections/synchronizedMap(java.util.Map)
com/ibm/icu/text/Transliterator/<clinit>()#com/ibm/icu/util/UResourceBundle/getString(java.lang.String)
com/ibm/icu/text/Transliterator/<clinit>()#java/lang/StringBuilder/append(java.lang.String)
com/ibm/icu/text/Transliterator/<clinit>()#java/lang/String/charAt(int)
com/ibm/icu/text/Transliterator/<clinit>()#java/util/HashMap/HashMap()
com/ibm/icu/text/Transliterator/<clinit>()#java/lang/String/equals(java.lang.Object)
com/ibm/icu/text/Transliterator/<clinit>()#java/lang/StringBuilder/StringBuilder()
com/ibm/icu/text/Transliterator/<clinit>()#java/lang/RuntimeException/RuntimeException(java.lang.String)
com/ibm/icu/text/Transliterator/<clinit>()#java/lang/StringBuilder/toString()
com/ibm/icu/impl/ICUResourceBundleImpl/createBundleObject(java.lang.String,int,java.util.HashMap,com.ibm.icu.util.UResourceBundle,boolean[])#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
com/ibm/icu/impl/ICUResourceBundleImpl/createBundleObject(java.lang.String,int,java.util.HashMap,com.ibm.icu.util.UResourceBundle,boolean[])#com/ibm/icu/impl/ICUResourceBundleImpl$ResourceInt/ResourceInt(com.ibm.icu.impl.ICUResourceBundleReader,java.lang.String,java.lang.String,int,com.ibm.icu.impl.ICUResourceBundleImpl)
com/ibm/icu/impl/ICUResourceBundleImpl/createBundleObject(java.lang.String,int,java.util.HashMap,com.ibm.icu.util.UResourceBundle,boolean[])#com/ibm/icu/impl/ICUResourceBundleImpl$ResourceTable/ResourceTable(com.ibm.icu.impl.ICUResourceBundleReader,java.lang.String,java.lang.String,int,com.ibm.icu.impl.ICUResourceBundleImpl)
com/ibm/icu/impl/ICUResourceBundleImpl/createBundleObject(java.lang.String,int,java.util.HashMap,com.ibm.icu.util.UResourceBundle,boolean[])#java/lang/StringBuilder/append(java.lang.String)
com/ibm/icu/impl/ICUResourceBundleImpl/createBundleObject(java.lang.String,int,java.util.HashMap,com.ibm.icu.util.UResourceBundle,boolean[])#com/ibm/icu/impl/ICUResourceBundleImpl/findResource(java.lang.String,java.lang.String,int,java.util.HashMap,com.ibm.icu.util.UResourceBundle)
com/ibm/icu/impl/ICUResourceBundleImpl/createBundleObject(java.lang.String,int,java.util.HashMap,com.ibm.icu.util.UResourceBundle,boolean[])#com/ibm/icu/impl/ICUResourceBundleImpl$ResourceArray/ResourceArray(com.ibm.icu.impl.ICUResourceBundleReader,java.lang.String,java.lang.String,int,com.ibm.icu.impl.ICUResourceBundleImpl)
com/ibm/icu/impl/ICUResourceBundleImpl/createBundleObject(java.lang.String,int,java.util.HashMap,com.ibm.icu.util.UResourceBundle,boolean[])#java/lang/StringBuilder/StringBuilder()
com/ibm/icu/impl/ICUResourceBundleImpl/createBundleObject(java.lang.String,int,java.util.HashMap,com.ibm.icu.util.UResourceBundle,boolean[])#com/ibm/icu/impl/ICUResourceBundleImpl$ResourceString/ResourceString(com.ibm.icu.impl.ICUResourceBundleReader,java.lang.String,java.lang.String,int,com.ibm.icu.impl.ICUResourceBundleImpl)
com/ibm/icu/impl/ICUResourceBundleImpl/createBundleObject(java.lang.String,int,java.util.HashMap,com.ibm.icu.util.UResourceBundle,boolean[])#com/ibm/icu/impl/ICUResourceBundleImpl$ResourceBinary/ResourceBinary(com.ibm.icu.impl.ICUResourceBundleReader,java.lang.String,java.lang.String,int,com.ibm.icu.impl.ICUResourceBundleImpl)
com/ibm/icu/impl/ICUResourceBundleImpl/createBundleObject(java.lang.String,int,java.util.HashMap,com.ibm.icu.util.UResourceBundle,boolean[])#java/lang/StringBuilder/toString()
com/ibm/icu/impl/ICUResourceBundleImpl/createBundleObject(java.lang.String,int,java.util.HashMap,com.ibm.icu.util.UResourceBundle,boolean[])#com/ibm/icu/impl/ICUResourceBundleImpl$ResourceIntVector/ResourceIntVector(com.ibm.icu.impl.ICUResourceBundleReader,java.lang.String,java.lang.String,int,com.ibm.icu.impl.ICUResourceBundleImpl)
com/ibm/icu/util/LocalePriorityList/Builder/add(java.lang.String)#java/util/regex/Matcher/group(int)
com/ibm/icu/util/LocalePriorityList/Builder/add(java.lang.String)#java/util/regex/Pattern/split(java.lang.CharSequence)
com/ibm/icu/util/LocalePriorityList/Builder/add(java.lang.String)#java/util/regex/Matcher/matches()
com/ibm/icu/util/LocalePriorityList/Builder/add(java.lang.String)#java/lang/String/length()
com/ibm/icu/util/LocalePriorityList/Builder/add(java.lang.String)#java/lang/Double/doubleValue()
com/ibm/icu/util/LocalePriorityList/Builder/add(java.lang.String)#com/ibm/icu/util/LocalePriorityList$Builder/add(com.ibm.icu.util.ULocale,double)
com/ibm/icu/util/LocalePriorityList/Builder/add(java.lang.String)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/ibm/icu/util/LocalePriorityList/Builder/add(java.lang.String)#java/lang/StringBuilder/toString()
com/ibm/icu/util/LocalePriorityList/Builder/add(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/ibm/icu/util/LocalePriorityList/Builder/add(java.lang.String)#java/lang/String/trim()
com/ibm/icu/util/LocalePriorityList/Builder/add(java.lang.String)#java/lang/Double/parseDouble(java.lang.String)
com/ibm/icu/util/LocalePriorityList/Builder/add(java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/ibm/icu/util/LocalePriorityList/Builder/add(java.lang.String)#com/ibm/icu/util/LocalePriorityList$Builder/add(com.ibm.icu.util.ULocale)
com/ibm/icu/util/LocalePriorityList/Builder/add(java.lang.String)#java/util/regex/Matcher/reset(java.lang.CharSequence)
com/ibm/icu/util/LocalePriorityList/Builder/add(java.lang.String)#java/lang/StringBuilder/append(double)
com/ibm/icu/util/LocalePriorityList/Builder/add(java.lang.String)#java/util/regex/Pattern/matcher(java.lang.CharSequence)
com/ibm/icu/util/LocalePriorityList/Builder/build(boolean)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/ibm/icu/util/LocalePriorityList/Builder/build(boolean)#java/util/Iterator/hasNext()
com/ibm/icu/util/LocalePriorityList/Builder/build(boolean)#java/util/Map$Entry/getKey()
com/ibm/icu/util/LocalePriorityList/Builder/build(boolean)#java/util/LinkedHashSet/LinkedHashSet()
com/ibm/icu/util/LocalePriorityList/Builder/build(boolean)#java/util/Map/get(java.lang.Object)
com/ibm/icu/util/LocalePriorityList/Builder/build(boolean)#java/util/Set/iterator()
com/ibm/icu/util/LocalePriorityList/Builder/build(boolean)#java/util/LinkedHashMap/LinkedHashMap()
com/ibm/icu/util/LocalePriorityList/Builder/build(boolean)#java/util/Collections/unmodifiableMap(java.util.Map)
com/ibm/icu/util/LocalePriorityList/Builder/build(boolean)#java/util/Iterator/next()
com/ibm/icu/util/LocalePriorityList/Builder/build(boolean)#java/util/Map/keySet()
com/ibm/icu/util/LocalePriorityList/Builder/build(boolean)#java/util/Map$Entry/getValue()
com/ibm/icu/util/LocalePriorityList/Builder/build(boolean)#java/util/TreeMap/TreeMap(java.util.Comparator)
com/ibm/icu/util/LocalePriorityList/Builder/build(boolean)#java/util/Map/entrySet()
com/ibm/icu/util/LocalePriorityList/Builder/build(boolean)#java/util/Set/add(java.lang.Object)
com/ibm/icu/impl/Utility/unescape(java.lang.String)#java/lang/StringBuilder/appendCodePoint(int)
com/ibm/icu/impl/Utility/unescape(java.lang.String)#java/lang/String/length()
com/ibm/icu/impl/Utility/unescape(java.lang.String)#java/lang/String/substring(int,int)
com/ibm/icu/impl/Utility/unescape(java.lang.String)#java/lang/StringBuilder/append(char)
com/ibm/icu/impl/Utility/unescape(java.lang.String)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/ibm/icu/impl/Utility/unescape(java.lang.String)#java/lang/Math/min(int,int)
com/ibm/icu/impl/Utility/unescape(java.lang.String)#java/lang/StringBuilder/toString()
com/ibm/icu/impl/Utility/unescape(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/ibm/icu/impl/Utility/unescape(java.lang.String)#java/lang/String/charAt(int)
com/ibm/icu/impl/Utility/unescape(java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/ibm/icu/text/DecimalFormatSymbols/initialize(com.ibm.icu.util.ULocale)#java/text/ChoiceFormat/format(double)
com/ibm/icu/text/DecimalFormatSymbols/initialize(com.ibm.icu.util.ULocale)#java/lang/String/equals(java.lang.Object)
com/ibm/icu/text/DecimalFormatSymbols/initialize(com.ibm.icu.util.ULocale)#java/lang/StringBuilder/StringBuilder()
com/ibm/icu/text/DecimalFormatSymbols/initialize(com.ibm.icu.util.ULocale)#java/lang/StringBuilder/toString()
com/ibm/icu/text/DecimalFormatSymbols/initialize(com.ibm.icu.util.ULocale)#java/lang/StringBuilder/append(java.lang.String)
com/ibm/icu/text/DecimalFormatSymbols/initialize(com.ibm.icu.util.ULocale)#java/lang/String/charAt(int)
com/ibm/icu/text/DecimalFormatSymbols/initialize(com.ibm.icu.util.ULocale)#com/ibm/icu/impl/CurrencyData$CurrencyDisplayInfo/getFormatInfo(java.lang.String)
com/ibm/icu/text/DecimalFormatSymbols/initialize(com.ibm.icu.util.ULocale)#java/text/ChoiceFormat/ChoiceFormat(java.lang.String)
com/ibm/icu/text/DecimalFormatSymbols/initialize(com.ibm.icu.util.ULocale)#com/ibm/icu/impl/CurrencyData$CurrencyDisplayInfoProvider/getInstance(com.ibm.icu.util.ULocale,boolean)
com/ibm/icu/text/DecimalFormatSymbols/initialize(com.ibm.icu.util.ULocale)#com/ibm/icu/impl/CurrencyData$CurrencyDisplayInfo/getSpacingInfo()
com/ibm/icu/text/SelectFormat/format(java.lang.String)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
com/ibm/icu/text/SelectFormat/format(java.lang.String)#com/ibm/icu/text/MessagePattern$Part/getLimit()
com/ibm/icu/text/SelectFormat/format(java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/ibm/icu/text/SelectFormat/format(java.lang.String)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/ibm/icu/text/SelectFormat/format(java.lang.String)#java/lang/StringBuilder/append(java.lang.CharSequence,int,int)
com/ibm/icu/text/SelectFormat/format(java.lang.String)#com/ibm/icu/text/MessagePattern$Part/getIndex()
com/ibm/icu/text/SelectFormat/format(java.lang.String)#com/ibm/icu/text/MessagePattern$Part/getType()
com/ibm/icu/text/SelectFormat/format(java.lang.String)#java/lang/String/substring(int,int)
com/ibm/icu/text/SelectFormat/format(java.lang.String)#java/lang/StringBuilder/toString()
com/ibm/icu/lang/UCharacter/toTitleCase(com.ibm.icu.util.ULocale,java.lang.String,com.ibm.icu.text.BreakIterator,int)#com/ibm/icu/lang/UCharacter$StringContextIterator/getCPLimit()
com/ibm/icu/lang/UCharacter/toTitleCase(com.ibm.icu.util.ULocale,java.lang.String,com.ibm.icu.text.BreakIterator,int)#java/lang/String/length()
com/ibm/icu/lang/UCharacter/toTitleCase(com.ibm.icu.util.ULocale,java.lang.String,com.ibm.icu.text.BreakIterator,int)#java/lang/StringBuilder/StringBuilder(int)
com/ibm/icu/lang/UCharacter/toTitleCase(com.ibm.icu.util.ULocale,java.lang.String,com.ibm.icu.text.BreakIterator,int)#java/lang/String/equals(java.lang.Object)
com/ibm/icu/lang/UCharacter/toTitleCase(com.ibm.icu.util.ULocale,java.lang.String,com.ibm.icu.text.BreakIterator,int)#java/lang/StringBuilder/StringBuilder()
com/ibm/icu/lang/UCharacter/toTitleCase(com.ibm.icu.util.ULocale,java.lang.String,com.ibm.icu.text.BreakIterator,int)#com/ibm/icu/lang/UCharacter$StringContextIterator/setLimit(int)
com/ibm/icu/lang/UCharacter/toTitleCase(com.ibm.icu.util.ULocale,java.lang.String,com.ibm.icu.text.BreakIterator,int)#com/ibm/icu/lang/UCharacter$StringContextIterator/StringContextIterator(java.lang.String)
com/ibm/icu/lang/UCharacter/toTitleCase(com.ibm.icu.util.ULocale,java.lang.String,com.ibm.icu.text.BreakIterator,int)#java/lang/StringBuilder/toString()
com/ibm/icu/lang/UCharacter/toTitleCase(com.ibm.icu.util.ULocale,java.lang.String,com.ibm.icu.text.BreakIterator,int)#com/ibm/icu/lang/UCharacter$StringContextIterator/getCPStart()
com/ibm/icu/lang/UCharacter/toTitleCase(com.ibm.icu.util.ULocale,java.lang.String,com.ibm.icu.text.BreakIterator,int)#java/lang/StringBuilder/append(java.lang.String)
com/ibm/icu/lang/UCharacter/toTitleCase(com.ibm.icu.util.ULocale,java.lang.String,com.ibm.icu.text.BreakIterator,int)#java/lang/StringBuilder/appendCodePoint(int)
com/ibm/icu/lang/UCharacter/toTitleCase(com.ibm.icu.util.ULocale,java.lang.String,com.ibm.icu.text.BreakIterator,int)#com/ibm/icu/lang/UCharacter$StringContextIterator/nextCaseMapCP()
com/ibm/icu/lang/UCharacter/toTitleCase(com.ibm.icu.util.ULocale,java.lang.String,com.ibm.icu.text.BreakIterator,int)#java/lang/String/substring(int,int)
com/ibm/icu/lang/UCharacter/toTitleCase(com.ibm.icu.util.ULocale,java.lang.String,com.ibm.icu.text.BreakIterator,int)#java/lang/String/substring(int)
com/ibm/icu/lang/UCharacter/toTitleCase(com.ibm.icu.util.ULocale,java.lang.String,com.ibm.icu.text.BreakIterator,int)#java/lang/String/startsWith(java.lang.String)
com/ibm/icu/lang/UCharacter/toTitleCase(com.ibm.icu.util.ULocale,java.lang.String,com.ibm.icu.text.BreakIterator,int)#com/ibm/icu/lang/UCharacter$StringContextIterator/moveToLimit()
com/ibm/icu/lang/UCharacter/toTitleCase(com.ibm.icu.util.ULocale,java.lang.String,com.ibm.icu.text.BreakIterator,int)#java/lang/StringBuilder/append(java.lang.CharSequence,int,int)
com/ibm/icu/impl/Normalizer2Impl/load(java.io.InputStream)#java/io/IOException/IOException(java.lang.String)
com/ibm/icu/impl/Normalizer2Impl/load(java.io.InputStream)#java/lang/String/String(char[])
com/ibm/icu/impl/Normalizer2Impl/load(java.io.InputStream)#java/io/DataInputStream/readChar()
com/ibm/icu/impl/Normalizer2Impl/load(java.io.InputStream)#java/io/InputStream/close()
com/ibm/icu/impl/Normalizer2Impl/load(java.io.InputStream)#java/lang/String/substring(int)
com/ibm/icu/impl/Normalizer2Impl/load(java.io.InputStream)#java/io/BufferedInputStream/BufferedInputStream(java.io.InputStream)
com/ibm/icu/impl/Normalizer2Impl/load(java.io.InputStream)#java/io/DataInputStream/skipBytes(int)
com/ibm/icu/impl/Normalizer2Impl/load(java.io.InputStream)#java/io/DataInputStream/readByte()
com/ibm/icu/impl/Normalizer2Impl/load(java.io.InputStream)#java/lang/RuntimeException/RuntimeException(java.lang.Throwable)
com/ibm/icu/impl/Normalizer2Impl/load(java.io.InputStream)#java/io/DataInputStream/readInt()
com/ibm/icu/impl/Normalizer2Impl/load(java.io.InputStream)#java/io/DataInputStream/DataInputStream(java.io.InputStream)
com/ibm/icu/impl/Normalizer2Impl/composeAndAppend(java.lang.CharSequence,boolean,boolean,com.ibm.icu.impl.Normalizer2Impl$ReorderingBuffer)#com/ibm/icu/impl/Normalizer2Impl$ReorderingBuffer/isEmpty()
com/ibm/icu/impl/Normalizer2Impl/composeAndAppend(java.lang.CharSequence,boolean,boolean,com.ibm.icu.impl.Normalizer2Impl$ReorderingBuffer)#com/ibm/icu/impl/Normalizer2Impl$ReorderingBuffer/append(java.lang.CharSequence,int,int)
com/ibm/icu/impl/Normalizer2Impl/composeAndAppend(java.lang.CharSequence,boolean,boolean,com.ibm.icu.impl.Normalizer2Impl$ReorderingBuffer)#java/lang/CharSequence/length()
com/ibm/icu/impl/Normalizer2Impl/composeAndAppend(java.lang.CharSequence,boolean,boolean,com.ibm.icu.impl.Normalizer2Impl$ReorderingBuffer)#com/ibm/icu/impl/Normalizer2Impl$ReorderingBuffer/getStringBuilder()
com/ibm/icu/impl/Normalizer2Impl/composeAndAppend(java.lang.CharSequence,boolean,boolean,com.ibm.icu.impl.Normalizer2Impl$ReorderingBuffer)#java/lang/StringBuilder/StringBuilder(int)
com/ibm/icu/impl/Normalizer2Impl/composeAndAppend(java.lang.CharSequence,boolean,boolean,com.ibm.icu.impl.Normalizer2Impl$ReorderingBuffer)#java/lang/StringBuilder/length()
com/ibm/icu/impl/Normalizer2Impl/composeAndAppend(java.lang.CharSequence,boolean,boolean,com.ibm.icu.impl.Normalizer2Impl$ReorderingBuffer)#java/lang/StringBuilder/append(java.lang.CharSequence,int,int)
com/ibm/icu/impl/Normalizer2Impl/composeAndAppend(java.lang.CharSequence,boolean,boolean,com.ibm.icu.impl.Normalizer2Impl$ReorderingBuffer)#com/ibm/icu/impl/Normalizer2Impl$ReorderingBuffer/length()
com/ibm/icu/impl/Normalizer2Impl/composeAndAppend(java.lang.CharSequence,boolean,boolean,com.ibm.icu.impl.Normalizer2Impl$ReorderingBuffer)#com/ibm/icu/impl/Normalizer2Impl$ReorderingBuffer/removeSuffix(int)
com/ibm/icu/impl/Normalizer2Impl/makeFCD(java.lang.CharSequence,int,int,com.ibm.icu.impl.Normalizer2Impl$ReorderingBuffer)#com/ibm/icu/impl/Normalizer2Impl$ReorderingBuffer/append(java.lang.CharSequence,int,int)
com/ibm/icu/impl/Normalizer2Impl/makeFCD(java.lang.CharSequence,int,int,com.ibm.icu.impl.Normalizer2Impl$ReorderingBuffer)#com/ibm/icu/impl/Normalizer2Impl$UTF16Plus/isSurrogateLead(int)
com/ibm/icu/impl/Normalizer2Impl/makeFCD(java.lang.CharSequence,int,int,com.ibm.icu.impl.Normalizer2Impl$ReorderingBuffer)#com/ibm/icu/impl/Normalizer2Impl$ReorderingBuffer/removeSuffix(int)
com/ibm/icu/impl/Normalizer2Impl/makeFCD(java.lang.CharSequence,int,int,com.ibm.icu.impl.Normalizer2Impl$ReorderingBuffer)#java/lang/Character/isLowSurrogate(char)
com/ibm/icu/impl/Normalizer2Impl/makeFCD(java.lang.CharSequence,int,int,com.ibm.icu.impl.Normalizer2Impl$ReorderingBuffer)#java/lang/CharSequence/charAt(int)
com/ibm/icu/impl/Normalizer2Impl/makeFCD(java.lang.CharSequence,int,int,com.ibm.icu.impl.Normalizer2Impl$ReorderingBuffer)#java/lang/Character/toCodePoint(char,char)
com/ibm/icu/impl/Normalizer2Impl/makeFCD(java.lang.CharSequence,int,int,com.ibm.icu.impl.Normalizer2Impl$ReorderingBuffer)#java/lang/Character/isHighSurrogate(char)
com/ibm/icu/impl/Normalizer2Impl/makeFCD(java.lang.CharSequence,int,int,com.ibm.icu.impl.Normalizer2Impl$ReorderingBuffer)#com/ibm/icu/impl/Normalizer2Impl$ReorderingBuffer/flushAndAppendZeroCC(java.lang.CharSequence,int,int)
com/ibm/icu/impl/Normalizer2Impl/makeFCD(java.lang.CharSequence,int,int,com.ibm.icu.impl.Normalizer2Impl$ReorderingBuffer)#java/lang/Character/charCount(int)
com/ibm/icu/impl/Normalizer2Impl/makeFCD(java.lang.CharSequence,int,int,com.ibm.icu.impl.Normalizer2Impl$ReorderingBuffer)#com/ibm/icu/impl/Normalizer2Impl$ReorderingBuffer/appendZeroCC(int)
com/ibm/icu/impl/Normalizer2Impl/compose(java.lang.CharSequence,int,int,boolean,boolean,com.ibm.icu.impl.Normalizer2Impl$ReorderingBuffer)#com/ibm/icu/impl/Normalizer2Impl$ReorderingBuffer/append(int,int)
com/ibm/icu/impl/Normalizer2Impl/compose(java.lang.CharSequence,int,int,boolean,boolean,com.ibm.icu.impl.Normalizer2Impl$ReorderingBuffer)#com/ibm/icu/impl/Normalizer2Impl$ReorderingBuffer/append(java.lang.CharSequence,int,int)
com/ibm/icu/impl/Normalizer2Impl/compose(java.lang.CharSequence,int,int,boolean,boolean,com.ibm.icu.impl.Normalizer2Impl$ReorderingBuffer)#com/ibm/icu/impl/Normalizer2Impl$UTF16Plus/isSurrogateLead(int)
com/ibm/icu/impl/Normalizer2Impl/compose(java.lang.CharSequence,int,int,boolean,boolean,com.ibm.icu.impl.Normalizer2Impl$ReorderingBuffer)#java/lang/Character/isLowSurrogate(char)
com/ibm/icu/impl/Normalizer2Impl/compose(java.lang.CharSequence,int,int,boolean,boolean,com.ibm.icu.impl.Normalizer2Impl$ReorderingBuffer)#java/lang/CharSequence/charAt(int)
com/ibm/icu/impl/Normalizer2Impl/compose(java.lang.CharSequence,int,int,boolean,boolean,com.ibm.icu.impl.Normalizer2Impl$ReorderingBuffer)#com/ibm/icu/impl/Normalizer2Impl$ReorderingBuffer/setLastChar(char)
com/ibm/icu/impl/Normalizer2Impl/compose(java.lang.CharSequence,int,int,boolean,boolean,com.ibm.icu.impl.Normalizer2Impl$ReorderingBuffer)#java/lang/Character/isHighSurrogate(char)
com/ibm/icu/impl/Normalizer2Impl/compose(java.lang.CharSequence,int,int,boolean,boolean,com.ibm.icu.impl.Normalizer2Impl$ReorderingBuffer)#com/ibm/icu/impl/Normalizer2Impl$ReorderingBuffer/length()
com/ibm/icu/impl/Normalizer2Impl/compose(java.lang.CharSequence,int,int,boolean,boolean,com.ibm.icu.impl.Normalizer2Impl$ReorderingBuffer)#com/ibm/icu/impl/Normalizer2Impl$ReorderingBuffer/equals(java.lang.CharSequence,int,int)
com/ibm/icu/impl/Normalizer2Impl/compose(java.lang.CharSequence,int,int,boolean,boolean,com.ibm.icu.impl.Normalizer2Impl$ReorderingBuffer)#com/ibm/icu/impl/Normalizer2Impl$Hangul/isHangulWithoutJamoT(char)
com/ibm/icu/impl/Normalizer2Impl/compose(java.lang.CharSequence,int,int,boolean,boolean,com.ibm.icu.impl.Normalizer2Impl$ReorderingBuffer)#com/ibm/icu/impl/Normalizer2Impl$ReorderingBuffer/removeSuffix(int)
com/ibm/icu/impl/Normalizer2Impl/compose(java.lang.CharSequence,int,int,boolean,boolean,com.ibm.icu.impl.Normalizer2Impl$ReorderingBuffer)#com/ibm/icu/impl/Normalizer2Impl$ReorderingBuffer/getLastCC()
com/ibm/icu/impl/Normalizer2Impl/compose(java.lang.CharSequence,int,int,boolean,boolean,com.ibm.icu.impl.Normalizer2Impl$ReorderingBuffer)#java/lang/Character/toCodePoint(char,char)
com/ibm/icu/impl/Normalizer2Impl/compose(java.lang.CharSequence,int,int,boolean,boolean,com.ibm.icu.impl.Normalizer2Impl$ReorderingBuffer)#java/lang/Character/charCount(int)
com/ibm/icu/impl/Normalizer2Impl/compose(java.lang.CharSequence,int,int,boolean,boolean,com.ibm.icu.impl.Normalizer2Impl$ReorderingBuffer)#com/ibm/icu/impl/Normalizer2Impl$ReorderingBuffer/flushAndAppendZeroCC(java.lang.CharSequence,int,int)
com/ibm/icu/impl/Normalizer2Impl/compose(java.lang.CharSequence,int,int,boolean,boolean,com.ibm.icu.impl.Normalizer2Impl$ReorderingBuffer)#com/ibm/icu/impl/Normalizer2Impl$ReorderingBuffer/remove()
com/ibm/icu/impl/Normalizer2Impl/compose(java.lang.CharSequence,int,int,boolean,boolean,com.ibm.icu.impl.Normalizer2Impl$ReorderingBuffer)#com/ibm/icu/impl/Normalizer2Impl$ReorderingBuffer/append(char)
com/ibm/icu/impl/Normalizer2Impl/recompose(com.ibm.icu.impl.Normalizer2Impl$ReorderingBuffer,int,boolean)#com/ibm/icu/impl/Normalizer2Impl$ReorderingBuffer/flush()
com/ibm/icu/impl/Normalizer2Impl/recompose(com.ibm.icu.impl.Normalizer2Impl$ReorderingBuffer,int,boolean)#java/lang/StringBuilder/deleteCharAt(int)
com/ibm/icu/impl/Normalizer2Impl/recompose(com.ibm.icu.impl.Normalizer2Impl$ReorderingBuffer,int,boolean)#java/lang/Character/charCount(int)
com/ibm/icu/impl/Normalizer2Impl/recompose(com.ibm.icu.impl.Normalizer2Impl$ReorderingBuffer,int,boolean)#java/lang/StringBuilder/codePointAt(int)
com/ibm/icu/impl/Normalizer2Impl/recompose(com.ibm.icu.impl.Normalizer2Impl$ReorderingBuffer,int,boolean)#com/ibm/icu/impl/Normalizer2Impl$ReorderingBuffer/getStringBuilder()
com/ibm/icu/impl/Normalizer2Impl/recompose(com.ibm.icu.impl.Normalizer2Impl$ReorderingBuffer,int,boolean)#java/lang/StringBuilder/delete(int,int)
com/ibm/icu/impl/Normalizer2Impl/recompose(com.ibm.icu.impl.Normalizer2Impl$ReorderingBuffer,int,boolean)#java/lang/StringBuilder/length()
com/ibm/icu/impl/Normalizer2Impl/recompose(com.ibm.icu.impl.Normalizer2Impl$ReorderingBuffer,int,boolean)#java/lang/StringBuilder/insert(int,char)
com/ibm/icu/impl/Normalizer2Impl/recompose(com.ibm.icu.impl.Normalizer2Impl$ReorderingBuffer,int,boolean)#java/lang/StringBuilder/setCharAt(int,char)
com/ibm/icu/impl/Normalizer2Impl/recompose(com.ibm.icu.impl.Normalizer2Impl$ReorderingBuffer,int,boolean)#java/lang/StringBuilder/charAt(int)
com/ibm/icu/impl/Normalizer2Impl/getRawDecomposition(int)#java/lang/String/charAt(int)
com/ibm/icu/impl/Normalizer2Impl/getRawDecomposition(int)#java/lang/String/substring(int,int)
com/ibm/icu/impl/Normalizer2Impl/getRawDecomposition(int)#java/lang/StringBuilder/append(java.lang.CharSequence,int,int)
com/ibm/icu/impl/Normalizer2Impl/getRawDecomposition(int)#com/ibm/icu/text/UTF16/valueOf(int)
com/ibm/icu/impl/Normalizer2Impl/getRawDecomposition(int)#java/lang/StringBuilder/toString()
com/ibm/icu/impl/Normalizer2Impl/getRawDecomposition(int)#com/ibm/icu/impl/Normalizer2Impl$Hangul/getRawDecomposition(int,java.lang.Appendable)
com/ibm/icu/impl/Normalizer2Impl/getRawDecomposition(int)#java/lang/StringBuilder/StringBuilder(int)
com/ibm/icu/impl/Normalizer2Impl/getRawDecomposition(int)#java/lang/StringBuilder/StringBuilder()
com/ibm/icu/impl/Normalizer2Impl/getRawDecomposition(int)#java/lang/StringBuilder/append(char)
com/ibm/icu/impl/Normalizer2Impl/makeFCDAndAppend(java.lang.CharSequence,boolean,com.ibm.icu.impl.Normalizer2Impl$ReorderingBuffer)#com/ibm/icu/impl/Normalizer2Impl$ReorderingBuffer/isEmpty()
com/ibm/icu/impl/Normalizer2Impl/makeFCDAndAppend(java.lang.CharSequence,boolean,com.ibm.icu.impl.Normalizer2Impl$ReorderingBuffer)#com/ibm/icu/impl/Normalizer2Impl$ReorderingBuffer/append(java.lang.CharSequence,int,int)
com/ibm/icu/impl/Normalizer2Impl/makeFCDAndAppend(java.lang.CharSequence,boolean,com.ibm.icu.impl.Normalizer2Impl$ReorderingBuffer)#java/lang/CharSequence/length()
com/ibm/icu/impl/Normalizer2Impl/makeFCDAndAppend(java.lang.CharSequence,boolean,com.ibm.icu.impl.Normalizer2Impl$ReorderingBuffer)#com/ibm/icu/impl/Normalizer2Impl$ReorderingBuffer/removeSuffix(int)
com/ibm/icu/impl/Normalizer2Impl/makeFCDAndAppend(java.lang.CharSequence,boolean,com.ibm.icu.impl.Normalizer2Impl$ReorderingBuffer)#com/ibm/icu/impl/Normalizer2Impl$ReorderingBuffer/getStringBuilder()
com/ibm/icu/impl/Normalizer2Impl/makeFCDAndAppend(java.lang.CharSequence,boolean,com.ibm.icu.impl.Normalizer2Impl$ReorderingBuffer)#java/lang/StringBuilder/StringBuilder(int)
com/ibm/icu/impl/Normalizer2Impl/makeFCDAndAppend(java.lang.CharSequence,boolean,com.ibm.icu.impl.Normalizer2Impl$ReorderingBuffer)#java/lang/StringBuilder/append(java.lang.CharSequence,int,int)
com/ibm/icu/impl/Normalizer2Impl/makeFCDAndAppend(java.lang.CharSequence,boolean,com.ibm.icu.impl.Normalizer2Impl$ReorderingBuffer)#com/ibm/icu/impl/Normalizer2Impl$ReorderingBuffer/length()
com/ibm/icu/impl/Normalizer2Impl/makeFCDAndAppend(java.lang.CharSequence,boolean,com.ibm.icu.impl.Normalizer2Impl$ReorderingBuffer)#java/lang/StringBuilder/length()
com/ibm/icu/impl/ICUResourceBundle/1/run()#java/io/BufferedReader/close()
com/ibm/icu/impl/ICUResourceBundle/1/run()#java/util/ArrayList/ArrayList(java.util.Collection)
com/ibm/icu/impl/ICUResourceBundle/1/run()#java/lang/String/length()
com/ibm/icu/impl/ICUResourceBundle/1/run()#java/io/IOException/getMessage()
com/ibm/icu/impl/ICUResourceBundle/1/run()#java/lang/StringBuilder/StringBuilder()
com/ibm/icu/impl/ICUResourceBundle/1/run()#java/lang/ClassLoader/getResourceAsStream(java.lang.String)
com/ibm/icu/impl/ICUResourceBundle/1/run()#java/util/Enumeration/nextElement()
com/ibm/icu/impl/ICUResourceBundle/1/run()#java/lang/String/equalsIgnoreCase(java.lang.String)
com/ibm/icu/impl/ICUResourceBundle/1/run()#java/util/ArrayList/ArrayList()
com/ibm/icu/impl/ICUResourceBundle/1/run()#java/lang/StringBuilder/append(java.lang.String)
com/ibm/icu/impl/ICUResourceBundle/1/run()#java/io/PrintStream/println(java.lang.String)
com/ibm/icu/impl/ICUResourceBundle/1/run()#java/io/InputStreamReader/InputStreamReader(java.io.InputStream,java.lang.String)
com/ibm/icu/impl/ICUResourceBundle/1/run()#java/util/List/addAll(java.util.Collection)
com/ibm/icu/impl/ICUResourceBundle/1/run()#java/util/List/add(java.lang.Object)
com/ibm/icu/impl/ICUResourceBundle/1/run()#java/io/BufferedReader/BufferedReader(java.io.Reader)
com/ibm/icu/impl/ICUResourceBundle/1/run()#java/io/BufferedReader/readLine()
com/ibm/icu/impl/ICUResourceBundle/1/run()#java/lang/String/startsWith(java.lang.String)
com/ibm/icu/impl/ICUResourceBundle/1/run()#com/ibm/icu/impl/ICUResourceBundle$1$1/1(com.ibm.icu.impl.ICUResourceBundle$1,java.util.List)
com/ibm/icu/impl/ICUResourceBundle/1/run()#java/lang/StringBuilder/append(java.lang.Object)
com/ibm/icu/impl/ICUResourceBundle/1/run()#java/util/Enumeration/hasMoreElements()
com/ibm/icu/impl/ICUResourceBundle/1/run()#com/ibm/icu/impl/ICUResourceBundle$1/run()
com/ibm/icu/impl/ICUResourceBundle/1/run()#java/lang/ClassLoader/getResources(java.lang.String)
com/ibm/icu/impl/ICUResourceBundle/1/run()#java/lang/StringBuilder/toString()
com/ibm/icu/impl/ICUResourceBundle/1/run()#java/lang/String/endsWith(java.lang.String)
com/ibm/icu/text/NFRule/makeRules(java.lang.String,com.ibm.icu.text.NFRuleSet,com.ibm.icu.text.NFRule,com.ibm.icu.text.RuleBasedNumberFormat)#java/lang/StringBuilder/append(java.lang.String)
com/ibm/icu/text/NFRule/makeRules(java.lang.String,com.ibm.icu.text.NFRuleSet,com.ibm.icu.text.NFRule,com.ibm.icu.text.RuleBasedNumberFormat)#java/lang/String/substring(int,int)
com/ibm/icu/text/NFRule/makeRules(java.lang.String,com.ibm.icu.text.NFRuleSet,com.ibm.icu.text.NFRule,com.ibm.icu.text.RuleBasedNumberFormat)#java/lang/String/substring(int)
com/ibm/icu/text/NFRule/makeRules(java.lang.String,com.ibm.icu.text.NFRuleSet,com.ibm.icu.text.NFRule,com.ibm.icu.text.RuleBasedNumberFormat)#java/lang/StringBuilder/setLength(int)
com/ibm/icu/text/NFRule/makeRules(java.lang.String,com.ibm.icu.text.NFRuleSet,com.ibm.icu.text.NFRule,com.ibm.icu.text.RuleBasedNumberFormat)#java/lang/String/length()
com/ibm/icu/text/NFRule/makeRules(java.lang.String,com.ibm.icu.text.NFRuleSet,com.ibm.icu.text.NFRule,com.ibm.icu.text.RuleBasedNumberFormat)#java/lang/StringBuilder/StringBuilder()
com/ibm/icu/text/NFRule/makeRules(java.lang.String,com.ibm.icu.text.NFRuleSet,com.ibm.icu.text.NFRule,com.ibm.icu.text.RuleBasedNumberFormat)#java/lang/String/indexOf(java.lang.String)
com/ibm/icu/text/NFRule/makeRules(java.lang.String,com.ibm.icu.text.NFRuleSet,com.ibm.icu.text.NFRule,com.ibm.icu.text.RuleBasedNumberFormat)#java/lang/Math/pow(double,double)
com/ibm/icu/text/NFRule/makeRules(java.lang.String,com.ibm.icu.text.NFRuleSet,com.ibm.icu.text.NFRule,com.ibm.icu.text.RuleBasedNumberFormat)#java/lang/StringBuilder/toString()
com/ibm/icu/text/NFRule/doParse(java.lang.String,java.text.ParsePosition,boolean,double)#java/text/ParsePosition/setIndex(int)
com/ibm/icu/text/NFRule/doParse(java.lang.String,java.text.ParsePosition,boolean,double)#java/lang/Long/valueOf(long)
com/ibm/icu/text/NFRule/doParse(java.lang.String,java.text.ParsePosition,boolean,double)#java/lang/Number/doubleValue()
com/ibm/icu/text/NFRule/doParse(java.lang.String,java.text.ParsePosition,boolean,double)#java/lang/String/length()
com/ibm/icu/text/NFRule/doParse(java.lang.String,java.text.ParsePosition,boolean,double)#java/text/ParsePosition/ParsePosition(int)
com/ibm/icu/text/NFRule/doParse(java.lang.String,java.text.ParsePosition,boolean,double)#java/lang/String/substring(int,int)
com/ibm/icu/text/NFRule/doParse(java.lang.String,java.text.ParsePosition,boolean,double)#java/lang/String/substring(int)
com/ibm/icu/text/NFRule/doParse(java.lang.String,java.text.ParsePosition,boolean,double)#java/text/ParsePosition/getIndex()
com/ibm/icu/text/NFRule/doParse(java.lang.String,java.text.ParsePosition,boolean,double)#java/lang/Double/Double(double)
com/ibm/icu/text/NFRule/doParse(java.lang.String,java.text.ParsePosition,boolean,double)#java/lang/Math/max(long,long)
com/ibm/icu/text/NFRule/toString()#java/lang/StringBuilder/append(java.lang.String)
com/ibm/icu/text/NFRule/toString()#java/lang/StringBuilder/insert(int,java.lang.String)
com/ibm/icu/text/NFRule/toString()#java/lang/StringBuilder/StringBuilder(java.lang.String)
com/ibm/icu/text/NFRule/toString()#java/lang/StringBuilder/StringBuilder()
com/ibm/icu/text/NFRule/toString()#java/lang/String/startsWith(java.lang.String)
com/ibm/icu/text/NFRule/toString()#java/lang/String/valueOf(long)
com/ibm/icu/text/NFRule/toString()#java/lang/StringBuilder/append(char)
com/ibm/icu/text/NFRule/toString()#java/lang/StringBuilder/toString()
com/ibm/icu/text/NFRule/toString()#java/lang/String/valueOf(int)
com/ibm/icu/text/NFRule/extractSubstitution(com.ibm.icu.text.NFRuleSet,com.ibm.icu.text.NFRule,com.ibm.icu.text.RuleBasedNumberFormat)#java/lang/String/substring(int,int)
com/ibm/icu/text/NFRule/extractSubstitution(com.ibm.icu.text.NFRuleSet,com.ibm.icu.text.NFRule,com.ibm.icu.text.RuleBasedNumberFormat)#java/lang/StringBuilder/StringBuilder()
com/ibm/icu/text/NFRule/extractSubstitution(com.ibm.icu.text.NFRuleSet,com.ibm.icu.text.NFRule,com.ibm.icu.text.RuleBasedNumberFormat)#java/lang/String/substring(int)
com/ibm/icu/text/NFRule/extractSubstitution(com.ibm.icu.text.NFRuleSet,com.ibm.icu.text.NFRule,com.ibm.icu.text.RuleBasedNumberFormat)#java/lang/String/startsWith(java.lang.String)
com/ibm/icu/text/NFRule/extractSubstitution(com.ibm.icu.text.NFRuleSet,com.ibm.icu.text.NFRule,com.ibm.icu.text.RuleBasedNumberFormat)#java/lang/String/indexOf(int,int)
com/ibm/icu/text/NFRule/extractSubstitution(com.ibm.icu.text.NFRuleSet,com.ibm.icu.text.NFRule,com.ibm.icu.text.RuleBasedNumberFormat)#java/lang/StringBuilder/append(java.lang.String)
com/ibm/icu/text/NFRule/extractSubstitution(com.ibm.icu.text.NFRuleSet,com.ibm.icu.text.NFRule,com.ibm.icu.text.RuleBasedNumberFormat)#java/lang/String/charAt(int)
com/ibm/icu/text/NFRule/extractSubstitution(com.ibm.icu.text.NFRuleSet,com.ibm.icu.text.NFRule,com.ibm.icu.text.RuleBasedNumberFormat)#java/lang/String/length()
com/ibm/icu/text/NFRule/extractSubstitution(com.ibm.icu.text.NFRuleSet,com.ibm.icu.text.NFRule,com.ibm.icu.text.RuleBasedNumberFormat)#java/lang/StringBuilder/toString()
com/ibm/icu/text/NFRule/parseRuleDescriptor(java.lang.String)#java/lang/Long/parseLong(java.lang.String)
com/ibm/icu/text/NFRule/parseRuleDescriptor(java.lang.String)#java/lang/String/charAt(int)
com/ibm/icu/text/NFRule/parseRuleDescriptor(java.lang.String)#java/lang/String/substring(int,int)
com/ibm/icu/text/NFRule/parseRuleDescriptor(java.lang.String)#java/lang/StringBuilder/toString()
com/ibm/icu/text/NFRule/parseRuleDescriptor(java.lang.String)#java/lang/StringBuilder/setLength(int)
com/ibm/icu/text/NFRule/parseRuleDescriptor(java.lang.String)#java/lang/String/length()
com/ibm/icu/text/NFRule/parseRuleDescriptor(java.lang.String)#java/lang/String/equals(java.lang.Object)
com/ibm/icu/text/NFRule/parseRuleDescriptor(java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/ibm/icu/text/NFRule/parseRuleDescriptor(java.lang.String)#java/lang/String/indexOf(java.lang.String)
com/ibm/icu/text/NFRule/parseRuleDescriptor(java.lang.String)#java/lang/String/substring(int)
com/ibm/icu/text/NFRule/parseRuleDescriptor(java.lang.String)#java/lang/Integer/parseInt(java.lang.String)
com/ibm/icu/text/NFRule/parseRuleDescriptor(java.lang.String)#java/lang/StringBuilder/append(char)
com/ibm/icu/text/NFRule/parseRuleDescriptor(java.lang.String)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/ibm/icu/impl/OlsonTimeZone/toString()#java/lang/Object/toString()
com/ibm/icu/impl/OlsonTimeZone/toString()#java/lang/StringBuilder/append(java.lang.String)
com/ibm/icu/impl/OlsonTimeZone/toString()#java/lang/StringBuilder/append(int)
com/ibm/icu/impl/OlsonTimeZone/toString()#java/lang/Long/toString(long)
com/ibm/icu/impl/OlsonTimeZone/toString()#java/lang/Integer/toString(int)
com/ibm/icu/impl/OlsonTimeZone/toString()#java/lang/Byte/toString(byte)
com/ibm/icu/impl/OlsonTimeZone/toString()#java/lang/StringBuilder/StringBuilder()
com/ibm/icu/impl/OlsonTimeZone/toString()#java/lang/StringBuilder/append(char)
com/ibm/icu/impl/OlsonTimeZone/toString()#java/lang/StringBuilder/append(java.lang.Object)
com/ibm/icu/impl/OlsonTimeZone/toString()#java/lang/StringBuilder/append(double)
com/ibm/icu/impl/OlsonTimeZone/toString()#java/lang/StringBuilder/toString()
com/ibm/icu/text/RuleBasedBreakIterator/handleNext(short[])#java/text/CharacterIterator/setIndex(int)
com/ibm/icu/text/RuleBasedBreakIterator/handleNext(short[])#java/text/CharacterIterator/getIndex()
com/ibm/icu/text/RuleBasedBreakIterator/handleNext(short[])#java/io/PrintStream/print(java.lang.String)
com/ibm/icu/text/RuleBasedBreakIterator/handleNext(short[])#java/lang/StringBuilder/append(int)
com/ibm/icu/text/RuleBasedBreakIterator/handleNext(short[])#java/text/CharacterIterator/next()
com/ibm/icu/text/RuleBasedBreakIterator/handleNext(short[])#java/lang/StringBuilder/toString()
com/ibm/icu/text/RuleBasedBreakIterator/handleNext(short[])#java/text/CharacterIterator/current()
com/ibm/icu/text/RuleBasedBreakIterator/handleNext(short[])#java/lang/StringBuilder/append(java.lang.String)
com/ibm/icu/text/RuleBasedBreakIterator/handleNext(short[])#java/io/PrintStream/println(java.lang.String)
com/ibm/icu/text/RuleBasedBreakIterator/handleNext(short[])#java/lang/StringBuilder/StringBuilder()
com/ibm/icu/text/RuleBasedBreakIterator/handlePrevious(short[])#java/text/CharacterIterator/setIndex(int)
com/ibm/icu/text/RuleBasedBreakIterator/handlePrevious(short[])#java/text/CharacterIterator/getIndex()
com/ibm/icu/text/RuleBasedBreakIterator/handlePrevious(short[])#java/io/PrintStream/print(java.lang.String)
com/ibm/icu/text/RuleBasedBreakIterator/handlePrevious(short[])#java/lang/StringBuilder/append(int)
com/ibm/icu/text/RuleBasedBreakIterator/handlePrevious(short[])#java/lang/Integer/toHexString(int)
com/ibm/icu/text/RuleBasedBreakIterator/handlePrevious(short[])#java/lang/StringBuilder/StringBuilder()
com/ibm/icu/text/RuleBasedBreakIterator/handlePrevious(short[])#java/lang/StringBuilder/toString()
com/ibm/icu/text/RuleBasedBreakIterator/handlePrevious(short[])#java/lang/StringBuilder/append(java.lang.String)
com/ibm/icu/text/RuleBasedBreakIterator/handlePrevious(short[])#java/io/PrintStream/println(java.lang.String)
com/ibm/icu/impl/TimeZoneNamesImpl/find(java.lang.CharSequence,int,java.util.EnumSet)#com/ibm/icu/impl/TimeZoneNamesImpl$NameSearchHandler/resetResults()
com/ibm/icu/impl/TimeZoneNamesImpl/find(java.lang.CharSequence,int,java.util.EnumSet)#java/util/Iterator/next()
com/ibm/icu/impl/TimeZoneNamesImpl/find(java.lang.CharSequence,int,java.util.EnumSet)#java/util/Set/iterator()
com/ibm/icu/impl/TimeZoneNamesImpl/find(java.lang.CharSequence,int,java.util.EnumSet)#com/ibm/icu/impl/TimeZoneNamesImpl$NameSearchHandler/getMatches()
com/ibm/icu/impl/TimeZoneNamesImpl/find(java.lang.CharSequence,int,java.util.EnumSet)#com/ibm/icu/impl/TimeZoneNamesImpl$NameSearchHandler/NameSearchHandler(java.util.EnumSet)
com/ibm/icu/impl/TimeZoneNamesImpl/find(java.lang.CharSequence,int,java.util.EnumSet)#java/util/Iterator/hasNext()
com/ibm/icu/impl/TimeZoneNamesImpl/find(java.lang.CharSequence,int,java.util.EnumSet)#java/lang/CharSequence/length()
com/ibm/icu/impl/TimeZoneNamesImpl/find(java.lang.CharSequence,int,java.util.EnumSet)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/ibm/icu/impl/TimeZoneNamesImpl/find(java.lang.CharSequence,int,java.util.EnumSet)#com/ibm/icu/impl/TimeZoneNamesImpl$NameSearchHandler/getMaxMatchLen()
com/ibm/icu/impl/TimeZoneNamesImpl/loadMetaZoneNames(java.lang.String)#com/ibm/icu/impl/TimeZoneNamesImpl$ZNames/getName(com.ibm.icu.text.TimeZoneNames$NameType)
com/ibm/icu/impl/TimeZoneNamesImpl/loadMetaZoneNames(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/ibm/icu/impl/TimeZoneNamesImpl/loadMetaZoneNames(java.lang.String)#com/ibm/icu/text/TimeZoneNames$NameType/values()
com/ibm/icu/impl/TimeZoneNamesImpl/loadMetaZoneNames(java.lang.String)#java/util/concurrent/ConcurrentHashMap/get(java.lang.Object)
com/ibm/icu/impl/TimeZoneNamesImpl/loadMetaZoneNames(java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/ibm/icu/impl/TimeZoneNamesImpl/loadMetaZoneNames(java.lang.String)#java/lang/String/intern()
com/ibm/icu/impl/TimeZoneNamesImpl/loadMetaZoneNames(java.lang.String)#com/ibm/icu/impl/TimeZoneNamesImpl$NameInfo/NameInfo(com.ibm.icu.impl.TimeZoneNamesImpl$1)
com/ibm/icu/impl/TimeZoneNamesImpl/loadMetaZoneNames(java.lang.String)#java/util/concurrent/ConcurrentHashMap/put(java.lang.Object,java.lang.Object)
com/ibm/icu/impl/TimeZoneNamesImpl/loadMetaZoneNames(java.lang.String)#java/lang/StringBuilder/toString()
com/ibm/icu/impl/TimeZoneNamesImpl/loadMetaZoneNames(java.lang.String)#com/ibm/icu/impl/TimeZoneNamesImpl$ZNames/getInstance(com.ibm.icu.impl.ICUResourceBundle,java.lang.String)
com/ibm/icu/impl/TimeZoneNamesImpl/getAvailableMetaZoneIDs(java.lang.String)#com/ibm/icu/impl/TimeZoneNamesImpl$TZ2MZsCache/getInstance(java.lang.Object,java.lang.Object)
com/ibm/icu/impl/TimeZoneNamesImpl/getAvailableMetaZoneIDs(java.lang.String)#java/util/Iterator/hasNext()
com/ibm/icu/impl/TimeZoneNamesImpl/getAvailableMetaZoneIDs(java.lang.String)#com/ibm/icu/impl/TimeZoneNamesImpl$MZMapEntry/mzID()
com/ibm/icu/impl/TimeZoneNamesImpl/getAvailableMetaZoneIDs(java.lang.String)#java/util/List/size()
com/ibm/icu/impl/TimeZoneNamesImpl/getAvailableMetaZoneIDs(java.lang.String)#java/util/Iterator/next()
com/ibm/icu/impl/TimeZoneNamesImpl/getAvailableMetaZoneIDs(java.lang.String)#java/util/List/iterator()
com/ibm/icu/impl/TimeZoneNamesImpl/getAvailableMetaZoneIDs(java.lang.String)#java/util/HashSet/HashSet(int)
com/ibm/icu/impl/TimeZoneNamesImpl/getAvailableMetaZoneIDs(java.lang.String)#java/util/Collections/emptySet()
com/ibm/icu/impl/TimeZoneNamesImpl/getAvailableMetaZoneIDs(java.lang.String)#java/util/List/isEmpty()
com/ibm/icu/impl/TimeZoneNamesImpl/getAvailableMetaZoneIDs(java.lang.String)#java/lang/String/length()
com/ibm/icu/impl/TimeZoneNamesImpl/getAvailableMetaZoneIDs(java.lang.String)#java/util/Set/add(java.lang.Object)
com/ibm/icu/impl/TimeZoneNamesImpl/getAvailableMetaZoneIDs(java.lang.String)#java/util/Collections/unmodifiableSet(java.util.Set)
com/ibm/icu/util/LocaleMatcher/LanguageMatcherData/addDistance(java.lang.String,java.lang.String,int,boolean,java.lang.String)#com/ibm/icu/util/LocaleMatcher$Level/ordinal()
com/ibm/icu/util/LocaleMatcher/LanguageMatcherData/addDistance(java.lang.String,java.lang.String,int,boolean,java.lang.String)#com/ibm/icu/util/LocaleMatcher$LocalePatternMatcher/getScript()
com/ibm/icu/util/LocaleMatcher/LanguageMatcherData/addDistance(java.lang.String,java.lang.String,int,boolean,java.lang.String)#com/ibm/icu/util/LocaleMatcher$LocalePatternMatcher/getLanguage()
com/ibm/icu/util/LocaleMatcher/LanguageMatcherData/addDistance(java.lang.String,java.lang.String,int,boolean,java.lang.String)#com/ibm/icu/util/LocaleMatcher$ScoreData/addDataToScores(java.lang.String,java.lang.String,com.ibm.icu.impl.Row$R3)
com/ibm/icu/util/LocaleMatcher/LanguageMatcherData/addDistance(java.lang.String,java.lang.String,int,boolean,java.lang.String)#java/lang/IllegalArgumentException/IllegalArgumentException()
com/ibm/icu/util/LocaleMatcher/LanguageMatcherData/addDistance(java.lang.String,java.lang.String,int,boolean,java.lang.String)#com/ibm/icu/util/LocaleMatcher$LocalePatternMatcher/getLevel()
com/ibm/icu/util/LocaleMatcher/LanguageMatcherData/addDistance(java.lang.String,java.lang.String,int,boolean,java.lang.String)#java/lang/Double/valueOf(double)
com/ibm/icu/util/LocaleMatcher/LanguageMatcherData/addDistance(java.lang.String,java.lang.String,int,boolean,java.lang.String)#com/ibm/icu/util/LocaleMatcher$LocalePatternMatcher/getRegion()
com/ibm/icu/util/LocaleMatcher/LanguageMatcherData/addDistance(java.lang.String,java.lang.String,int,boolean,java.lang.String)#com/ibm/icu/util/LocaleMatcher$LocalePatternMatcher/LocalePatternMatcher(java.lang.String)
com/ibm/icu/text/CanonicalIterator/setSource(java.lang.String)#java/util/ArrayList/ArrayList()
com/ibm/icu/text/CanonicalIterator/setSource(java.lang.String)#java/io/PrintStream/println(java.lang.String)
com/ibm/icu/text/CanonicalIterator/setSource(java.lang.String)#java/lang/String/length()
com/ibm/icu/text/CanonicalIterator/setSource(java.lang.String)#java/util/List/size()
com/ibm/icu/text/CanonicalIterator/setSource(java.lang.String)#java/lang/String/codePointAt(int)
com/ibm/icu/text/CanonicalIterator/setSource(java.lang.String)#java/lang/String/substring(int,int)
com/ibm/icu/text/CanonicalIterator/setSource(java.lang.String)#java/util/List/get(int)
com/ibm/icu/text/CanonicalIterator/setSource(java.lang.String)#java/util/List/add(java.lang.Object)
com/ibm/icu/text/CanonicalIterator/setSource(java.lang.String)#java/lang/Character/charCount(int)
com/ibm/icu/text/CanonicalIterator/getEquivalents2(java.lang.String)#java/util/Iterator/hasNext()
com/ibm/icu/text/CanonicalIterator/getEquivalents2(java.lang.String)#java/lang/String/length()
com/ibm/icu/text/CanonicalIterator/getEquivalents2(java.lang.String)#java/util/Iterator/next()
com/ibm/icu/text/CanonicalIterator/getEquivalents2(java.lang.String)#java/lang/String/substring(int,int)
com/ibm/icu/text/CanonicalIterator/getEquivalents2(java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/ibm/icu/text/CanonicalIterator/getEquivalents2(java.lang.String)#java/lang/StringBuffer/StringBuffer()
com/ibm/icu/text/CanonicalIterator/getEquivalents2(java.lang.String)#java/lang/StringBuilder/toString()
com/ibm/icu/text/CanonicalIterator/getEquivalents2(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/ibm/icu/text/CanonicalIterator/getEquivalents2(java.lang.String)#java/io/PrintStream/println(java.lang.String)
com/ibm/icu/text/CanonicalIterator/getEquivalents2(java.lang.String)#java/lang/String/codePointAt(int)
com/ibm/icu/text/CanonicalIterator/getEquivalents2(java.lang.String)#java/util/Set/iterator()
com/ibm/icu/text/CanonicalIterator/getEquivalents2(java.lang.String)#java/lang/Character/charCount(int)
com/ibm/icu/text/CanonicalIterator/getEquivalents2(java.lang.String)#java/util/HashSet/HashSet()
com/ibm/icu/text/CanonicalIterator/getEquivalents2(java.lang.String)#com/ibm/icu/text/UTF16/valueOf(int)
com/ibm/icu/text/CanonicalIterator/getEquivalents2(java.lang.String)#java/util/Set/add(java.lang.Object)
com/ibm/icu/text/CanonicalIterator/extract(int,java.lang.String,int,java.lang.StringBuffer)#java/lang/StringBuffer/toString()
com/ibm/icu/text/CanonicalIterator/extract(int,java.lang.String,int,java.lang.StringBuffer)#com/ibm/icu/text/UTF16/valueOf(int)
com/ibm/icu/text/CanonicalIterator/extract(int,java.lang.String,int,java.lang.StringBuffer)#java/lang/StringBuilder/append(java.lang.String)
com/ibm/icu/text/CanonicalIterator/extract(int,java.lang.String,int,java.lang.StringBuffer)#java/io/PrintStream/println(java.lang.String)
com/ibm/icu/text/CanonicalIterator/extract(int,java.lang.String,int,java.lang.StringBuffer)#java/lang/String/length()
com/ibm/icu/text/CanonicalIterator/extract(int,java.lang.String,int,java.lang.StringBuffer)#java/lang/StringBuffer/length()
com/ibm/icu/text/CanonicalIterator/extract(int,java.lang.String,int,java.lang.StringBuffer)#java/lang/StringBuilder/StringBuilder()
com/ibm/icu/text/CanonicalIterator/extract(int,java.lang.String,int,java.lang.StringBuffer)#java/lang/String/substring(int)
com/ibm/icu/text/CanonicalIterator/extract(int,java.lang.String,int,java.lang.StringBuffer)#java/lang/StringBuffer/append(java.lang.String)
com/ibm/icu/text/CanonicalIterator/extract(int,java.lang.String,int,java.lang.StringBuffer)#java/lang/StringBuilder/toString()
com/ibm/icu/text/CanonicalIterator/extract(int,java.lang.String,int,java.lang.StringBuffer)#java/lang/StringBuffer/setLength(int)
com/ibm/icu/text/CanonicalIterator/getEquivalents(java.lang.String)#java/util/Iterator/hasNext()
com/ibm/icu/text/CanonicalIterator/getEquivalents(java.lang.String)#java/util/Iterator/next()
com/ibm/icu/text/CanonicalIterator/getEquivalents(java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/ibm/icu/text/CanonicalIterator/getEquivalents(java.lang.String)#java/util/Set/toArray(java.lang.Object[])
com/ibm/icu/text/CanonicalIterator/getEquivalents(java.lang.String)#java/util/Set/add(java.lang.Object)
com/ibm/icu/text/CanonicalIterator/getEquivalents(java.lang.String)#java/lang/StringBuilder/toString()
com/ibm/icu/text/CanonicalIterator/getEquivalents(java.lang.String)#java/util/Set/size()
com/ibm/icu/text/CanonicalIterator/getEquivalents(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/ibm/icu/text/CanonicalIterator/getEquivalents(java.lang.String)#java/io/PrintStream/println(java.lang.String)
com/ibm/icu/text/CanonicalIterator/getEquivalents(java.lang.String)#java/util/Set/iterator()
com/ibm/icu/text/CanonicalIterator/getEquivalents(java.lang.String)#java/util/Set/clear()
com/ibm/icu/text/CanonicalIterator/getEquivalents(java.lang.String)#java/util/HashSet/HashSet()
com/ibm/icu/text/CanonicalIterator/permute(java.lang.String,boolean,java.util.Set)#java/util/Iterator/hasNext()
com/ibm/icu/text/CanonicalIterator/permute(java.lang.String,boolean,java.util.Set)#java/lang/StringBuilder/append(java.lang.String)
com/ibm/icu/text/CanonicalIterator/permute(java.lang.String,boolean,java.util.Set)#java/lang/String/length()
com/ibm/icu/text/CanonicalIterator/permute(java.lang.String,boolean,java.util.Set)#com/ibm/icu/text/UTF16/valueOf(java.lang.String,int)
com/ibm/icu/text/CanonicalIterator/permute(java.lang.String,boolean,java.util.Set)#java/lang/StringBuilder/StringBuilder()
com/ibm/icu/text/CanonicalIterator/permute(java.lang.String,boolean,java.util.Set)#java/util/Set/iterator()
com/ibm/icu/text/CanonicalIterator/permute(java.lang.String,boolean,java.util.Set)#java/lang/String/substring(int)
com/ibm/icu/text/CanonicalIterator/permute(java.lang.String,boolean,java.util.Set)#java/util/Set/add(java.lang.Object)
com/ibm/icu/text/CanonicalIterator/permute(java.lang.String,boolean,java.util.Set)#java/lang/StringBuilder/toString()
com/ibm/icu/text/CanonicalIterator/permute(java.lang.String,boolean,java.util.Set)#java/util/Iterator/next()
com/ibm/icu/text/CanonicalIterator/permute(java.lang.String,boolean,java.util.Set)#java/lang/String/substring(int,int)
com/ibm/icu/text/CanonicalIterator/permute(java.lang.String,boolean,java.util.Set)#java/util/Set/clear()
com/ibm/icu/text/CanonicalIterator/permute(java.lang.String,boolean,java.util.Set)#java/util/HashSet/HashSet()
com/ibm/icu/text/SimpleDateFormat/intervalFormatByAlgorithm(com.ibm.icu.util.Calendar,com.ibm.icu.util.Calendar,java.lang.StringBuffer,java.text.FieldPosition)#java/text/FieldPosition/setEndIndex(int)
com/ibm/icu/text/SimpleDateFormat/intervalFormatByAlgorithm(com.ibm.icu.util.Calendar,com.ibm.icu.util.Calendar,java.lang.StringBuffer,java.text.FieldPosition)#java/lang/IllegalArgumentException/toString()
com/ibm/icu/text/SimpleDateFormat/intervalFormatByAlgorithm(com.ibm.icu.util.Calendar,com.ibm.icu.util.Calendar,java.lang.StringBuffer,java.text.FieldPosition)#java/lang/StringBuilder/append(java.lang.String)
com/ibm/icu/text/SimpleDateFormat/intervalFormatByAlgorithm(com.ibm.icu.util.Calendar,com.ibm.icu.util.Calendar,java.lang.StringBuffer,java.text.FieldPosition)#java/text/FieldPosition/setBeginIndex(int)
com/ibm/icu/text/SimpleDateFormat/intervalFormatByAlgorithm(com.ibm.icu.util.Calendar,com.ibm.icu.util.Calendar,java.lang.StringBuffer,java.text.FieldPosition)#java/lang/StringBuilder/StringBuilder()
com/ibm/icu/text/SimpleDateFormat/intervalFormatByAlgorithm(com.ibm.icu.util.Calendar,com.ibm.icu.util.Calendar,java.lang.StringBuffer,java.text.FieldPosition)#java/lang/StringBuilder/append(char)
com/ibm/icu/text/SimpleDateFormat/intervalFormatByAlgorithm(com.ibm.icu.util.Calendar,com.ibm.icu.util.Calendar,java.lang.StringBuffer,java.text.FieldPosition)#java/lang/StringBuffer/append(java.lang.String)
com/ibm/icu/text/SimpleDateFormat/intervalFormatByAlgorithm(com.ibm.icu.util.Calendar,com.ibm.icu.util.Calendar,java.lang.StringBuffer,java.text.FieldPosition)#java/lang/StringBuilder/toString()
com/ibm/icu/text/SimpleDateFormat/intervalFormatByAlgorithm(com.ibm.icu.util.Calendar,com.ibm.icu.util.Calendar,java.lang.StringBuffer,java.text.FieldPosition)#java/lang/StringBuffer/length()
com/ibm/icu/text/SimpleDateFormat/intervalFormatByAlgorithm(com.ibm.icu.util.Calendar,com.ibm.icu.util.Calendar,java.lang.StringBuffer,java.text.FieldPosition)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/ibm/icu/text/SimpleDateFormat/getPatternItems()#java/util/ArrayList/ArrayList()
com/ibm/icu/text/SimpleDateFormat/getPatternItems()#java/lang/String/charAt(int)
com/ibm/icu/text/SimpleDateFormat/getPatternItems()#java/util/List/size()
com/ibm/icu/text/SimpleDateFormat/getPatternItems()#java/util/List/toArray(java.lang.Object[])
com/ibm/icu/text/SimpleDateFormat/getPatternItems()#java/lang/StringBuilder/StringBuilder()
com/ibm/icu/text/SimpleDateFormat/getPatternItems()#java/lang/StringBuilder/toString()
com/ibm/icu/text/SimpleDateFormat/getPatternItems()#java/lang/StringBuilder/setLength(int)
com/ibm/icu/text/SimpleDateFormat/getPatternItems()#java/lang/String/length()
com/ibm/icu/text/SimpleDateFormat/getPatternItems()#java/util/List/add(java.lang.Object)
com/ibm/icu/text/SimpleDateFormat/getPatternItems()#java/lang/StringBuilder/append(char)
com/ibm/icu/text/SimpleDateFormat/getPatternItems()#java/lang/StringBuilder/length()
com/ibm/icu/text/SimpleDateFormat/getPatternItems()#com/ibm/icu/text/SimpleDateFormat$PatternItem/PatternItem(char,int)
com/ibm/icu/text/SimpleDateFormat/subFormat(java.lang.StringBuffer,char,int,int,int,com.ibm.icu.text.DisplayContext,java.text.FieldPosition,com.ibm.icu.util.Calendar)#java/text/FieldPosition/setEndIndex(int)
com/ibm/icu/text/SimpleDateFormat/subFormat(java.lang.StringBuffer,char,int,int,int,com.ibm.icu.text.DisplayContext,java.text.FieldPosition,com.ibm.icu.util.Calendar)#java/lang/StringBuffer/replace(int,int,java.lang.String)
com/ibm/icu/text/SimpleDateFormat/subFormat(java.lang.StringBuffer,char,int,int,int,com.ibm.icu.text.DisplayContext,java.text.FieldPosition,com.ibm.icu.util.Calendar)#com/ibm/icu/text/DisplayContext/ordinal()
com/ibm/icu/text/SimpleDateFormat/subFormat(java.lang.StringBuffer,char,int,int,int,com.ibm.icu.text.DisplayContext,java.text.FieldPosition,com.ibm.icu.util.Calendar)#java/text/FieldPosition/getFieldAttribute()
com/ibm/icu/text/SimpleDateFormat/subFormat(java.lang.StringBuffer,char,int,int,int,com.ibm.icu.text.DisplayContext,java.text.FieldPosition,com.ibm.icu.util.Calendar)#java/lang/StringBuffer/substring(int)
com/ibm/icu/text/SimpleDateFormat/subFormat(java.lang.StringBuffer,char,int,int,int,com.ibm.icu.text.DisplayContext,java.text.FieldPosition,com.ibm.icu.util.Calendar)#java/lang/StringBuilder/append(char)
com/ibm/icu/text/SimpleDateFormat/subFormat(java.lang.StringBuffer,char,int,int,int,com.ibm.icu.text.DisplayContext,java.text.FieldPosition,com.ibm.icu.util.Calendar)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/ibm/icu/text/SimpleDateFormat/subFormat(java.lang.StringBuffer,char,int,int,int,com.ibm.icu.text.DisplayContext,java.text.FieldPosition,com.ibm.icu.util.Calendar)#java/text/FieldPosition/getBeginIndex()
com/ibm/icu/text/SimpleDateFormat/subFormat(java.lang.StringBuffer,char,int,int,int,com.ibm.icu.text.DisplayContext,java.text.FieldPosition,com.ibm.icu.util.Calendar)#java/lang/StringBuffer/StringBuffer()
com/ibm/icu/text/SimpleDateFormat/subFormat(java.lang.StringBuffer,char,int,int,int,com.ibm.icu.text.DisplayContext,java.text.FieldPosition,com.ibm.icu.util.Calendar)#java/text/FieldPosition/FieldPosition(int)
com/ibm/icu/text/SimpleDateFormat/subFormat(java.lang.StringBuffer,char,int,int,int,com.ibm.icu.text.DisplayContext,java.text.FieldPosition,com.ibm.icu.util.Calendar)#java/text/FieldPosition/getEndIndex()
com/ibm/icu/text/SimpleDateFormat/subFormat(java.lang.StringBuffer,char,int,int,int,com.ibm.icu.text.DisplayContext,java.text.FieldPosition,com.ibm.icu.util.Calendar)#java/lang/StringBuilder/append(java.lang.String)
com/ibm/icu/text/SimpleDateFormat/subFormat(java.lang.StringBuffer,char,int,int,int,com.ibm.icu.text.DisplayContext,java.text.FieldPosition,com.ibm.icu.util.Calendar)#java/lang/String/compareTo(java.lang.String)
com/ibm/icu/text/SimpleDateFormat/subFormat(java.lang.StringBuffer,char,int,int,int,com.ibm.icu.text.DisplayContext,java.text.FieldPosition,com.ibm.icu.util.Calendar)#java/util/Map/get(java.lang.Object)
com/ibm/icu/text/SimpleDateFormat/subFormat(java.lang.StringBuffer,char,int,int,int,com.ibm.icu.text.DisplayContext,java.text.FieldPosition,com.ibm.icu.util.Calendar)#java/lang/StringBuffer/length()
com/ibm/icu/text/SimpleDateFormat/subFormat(java.lang.StringBuffer,char,int,int,int,com.ibm.icu.text.DisplayContext,java.text.FieldPosition,com.ibm.icu.util.Calendar)#java/text/FieldPosition/setBeginIndex(int)
com/ibm/icu/text/SimpleDateFormat/subFormat(java.lang.StringBuffer,char,int,int,int,com.ibm.icu.text.DisplayContext,java.text.FieldPosition,com.ibm.icu.util.Calendar)#java/lang/String/equals(java.lang.Object)
com/ibm/icu/text/SimpleDateFormat/subFormat(java.lang.StringBuffer,char,int,int,int,com.ibm.icu.text.DisplayContext,java.text.FieldPosition,com.ibm.icu.util.Calendar)#java/lang/StringBuffer/toString()
com/ibm/icu/text/SimpleDateFormat/subFormat(java.lang.StringBuffer,char,int,int,int,com.ibm.icu.text.DisplayContext,java.text.FieldPosition,com.ibm.icu.util.Calendar)#java/lang/StringBuilder/StringBuilder()
com/ibm/icu/text/SimpleDateFormat/subFormat(java.lang.StringBuffer,char,int,int,int,com.ibm.icu.text.DisplayContext,java.text.FieldPosition,com.ibm.icu.util.Calendar)#java/lang/String/indexOf(java.lang.String)
com/ibm/icu/text/SimpleDateFormat/subFormat(java.lang.StringBuffer,char,int,int,int,com.ibm.icu.text.DisplayContext,java.text.FieldPosition,com.ibm.icu.util.Calendar)#java/lang/Math/min(int,int)
com/ibm/icu/text/SimpleDateFormat/subFormat(java.lang.StringBuffer,char,int,int,int,com.ibm.icu.text.DisplayContext,java.text.FieldPosition,com.ibm.icu.util.Calendar)#java/lang/StringBuffer/append(java.lang.String)
com/ibm/icu/text/SimpleDateFormat/subFormat(java.lang.StringBuffer,char,int,int,int,com.ibm.icu.text.DisplayContext,java.text.FieldPosition,com.ibm.icu.util.Calendar)#java/lang/StringBuilder/toString()
com/ibm/icu/text/SimpleDateFormat/subFormat(java.lang.StringBuffer,char,int,int,int,com.ibm.icu.text.DisplayContext,java.text.FieldPosition,com.ibm.icu.util.Calendar)#java/text/FieldPosition/getField()
com/ibm/icu/text/SimpleDateFormat/subParse(java.lang.String,int,char,int,boolean,boolean,boolean[],com.ibm.icu.util.Calendar,com.ibm.icu.text.MessageFormat)#java/lang/String/charAt(int)
com/ibm/icu/text/SimpleDateFormat/subParse(java.lang.String,int,char,int,boolean,boolean,boolean[],com.ibm.icu.util.Calendar,com.ibm.icu.text.MessageFormat)#java/lang/String/indexOf(java.lang.String)
com/ibm/icu/text/SimpleDateFormat/subParse(java.lang.String,int,char,int,boolean,boolean,boolean[],com.ibm.icu.util.Calendar,com.ibm.icu.text.MessageFormat)#com/ibm/icu/text/SimpleDateFormat/isLenient()
com/ibm/icu/text/SimpleDateFormat/subParse(java.lang.String,int,char,int,boolean,boolean,boolean[],com.ibm.icu.util.Calendar,com.ibm.icu.text.MessageFormat)#java/text/ParsePosition/getIndex()
com/ibm/icu/text/SimpleDateFormat/subParse(java.lang.String,int,char,int,boolean,boolean,boolean[],com.ibm.icu.util.Calendar,com.ibm.icu.text.MessageFormat)#java/text/ParsePosition/setIndex(int)
com/ibm/icu/text/SimpleDateFormat/subParse(java.lang.String,int,char,int,boolean,boolean,boolean[],com.ibm.icu.util.Calendar,com.ibm.icu.text.MessageFormat)#java/lang/String/compareTo(java.lang.String)
com/ibm/icu/text/SimpleDateFormat/subParse(java.lang.String,int,char,int,boolean,boolean,boolean[],com.ibm.icu.util.Calendar,com.ibm.icu.text.MessageFormat)#java/lang/String/length()
com/ibm/icu/text/SimpleDateFormat/subParse(java.lang.String,int,char,int,boolean,boolean,boolean[],com.ibm.icu.util.Calendar,com.ibm.icu.text.MessageFormat)#java/text/ParsePosition/ParsePosition(int)
com/ibm/icu/text/SimpleDateFormat/subParse(java.lang.String,int,char,int,boolean,boolean,boolean[],com.ibm.icu.util.Calendar,com.ibm.icu.text.MessageFormat)#java/lang/Number/intValue()
com/ibm/icu/text/SimpleDateFormat/subParse(java.lang.String,int,char,int,boolean,boolean,boolean[],com.ibm.icu.util.Calendar,com.ibm.icu.text.MessageFormat)#java/lang/String/equals(java.lang.Object)
com/ibm/icu/text/SimpleDateFormat/parse(java.lang.String,com.ibm.icu.util.Calendar,java.text.ParsePosition)#java/lang/String/equals(java.lang.Object)
com/ibm/icu/text/SimpleDateFormat/parse(java.lang.String,com.ibm.icu.util.Calendar,java.text.ParsePosition)#com/ibm/icu/text/SimpleDateFormat/isLenient()
com/ibm/icu/text/SimpleDateFormat/parse(java.lang.String,com.ibm.icu.util.Calendar,java.text.ParsePosition)#java/text/ParsePosition/setIndex(int)
com/ibm/icu/text/SimpleDateFormat/parse(java.lang.String,com.ibm.icu.util.Calendar,java.text.ParsePosition)#java/lang/String/charAt(int)
com/ibm/icu/text/SimpleDateFormat/parse(java.lang.String,com.ibm.icu.util.Calendar,java.text.ParsePosition)#com/ibm/icu/util/BasicTimeZone/getDSTSavings()
com/ibm/icu/text/SimpleDateFormat/parse(java.lang.String,com.ibm.icu.util.Calendar,java.text.ParsePosition)#java/lang/String/length()
com/ibm/icu/text/SimpleDateFormat/parse(java.lang.String,com.ibm.icu.util.Calendar,java.text.ParsePosition)#java/util/Date/before(java.util.Date)
com/ibm/icu/text/SimpleDateFormat/parse(java.lang.String,com.ibm.icu.util.Calendar,java.text.ParsePosition)#java/text/ParsePosition/setErrorIndex(int)
com/ibm/icu/text/SimpleDateFormat/parse(java.lang.String,com.ibm.icu.util.Calendar,java.text.ParsePosition)#java/text/ParsePosition/getIndex()
com/ibm/icu/text/SimpleDateFormat/formatToCharacterIterator(java.lang.Object)#java/text/FieldPosition/FieldPosition(int)
com/ibm/icu/text/SimpleDateFormat/formatToCharacterIterator(java.lang.Object)#java/util/ArrayList/ArrayList()
com/ibm/icu/text/SimpleDateFormat/formatToCharacterIterator(java.lang.Object)#java/text/AttributedString/addAttribute(java.text.AttributedCharacterIterator$Attribute,java.lang.Object,int,int)
com/ibm/icu/text/SimpleDateFormat/formatToCharacterIterator(java.lang.Object)#java/text/FieldPosition/getEndIndex()
com/ibm/icu/text/SimpleDateFormat/formatToCharacterIterator(java.lang.Object)#java/util/List/size()
com/ibm/icu/text/SimpleDateFormat/formatToCharacterIterator(java.lang.Object)#java/lang/StringBuffer/toString()
com/ibm/icu/text/SimpleDateFormat/formatToCharacterIterator(java.lang.Object)#java/text/FieldPosition/getBeginIndex()
com/ibm/icu/text/SimpleDateFormat/formatToCharacterIterator(java.lang.Object)#java/lang/StringBuffer/StringBuffer()
com/ibm/icu/text/SimpleDateFormat/formatToCharacterIterator(java.lang.Object)#java/text/FieldPosition/getFieldAttribute()
com/ibm/icu/text/SimpleDateFormat/formatToCharacterIterator(java.lang.Object)#java/text/AttributedString/AttributedString(java.lang.String)
com/ibm/icu/text/SimpleDateFormat/formatToCharacterIterator(java.lang.Object)#java/util/List/get(int)
com/ibm/icu/text/SimpleDateFormat/formatToCharacterIterator(java.lang.Object)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/ibm/icu/text/SimpleDateFormat/formatToCharacterIterator(java.lang.Object)#java/text/AttributedString/getIterator()
com/ibm/icu/text/SimpleDateFormat/formatToCharacterIterator(java.lang.Object)#java/lang/Number/longValue()
com/ibm/icu/text/SimpleDateFormat/processOverrideString(com.ibm.icu.util.ULocale,java.lang.String)#java/lang/String/length()
com/ibm/icu/text/SimpleDateFormat/processOverrideString(com.ibm.icu.util.ULocale,java.lang.String)#java/util/HashMap/put(java.lang.Object,java.lang.Object)
com/ibm/icu/text/SimpleDateFormat/processOverrideString(com.ibm.icu.util.ULocale,java.lang.String)#java/lang/String/indexOf(java.lang.String,int)
com/ibm/icu/text/SimpleDateFormat/processOverrideString(com.ibm.icu.util.ULocale,java.lang.String)#java/lang/String/substring(int,int)
com/ibm/icu/text/SimpleDateFormat/processOverrideString(com.ibm.icu.util.ULocale,java.lang.String)#java/lang/String/substring(int)
com/ibm/icu/text/SimpleDateFormat/processOverrideString(com.ibm.icu.util.ULocale,java.lang.String)#java/lang/StringBuilder/toString()
com/ibm/icu/text/SimpleDateFormat/processOverrideString(com.ibm.icu.util.ULocale,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/ibm/icu/text/SimpleDateFormat/processOverrideString(com.ibm.icu.util.ULocale,java.lang.String)#java/lang/String/charAt(int)
com/ibm/icu/text/SimpleDateFormat/processOverrideString(com.ibm.icu.util.ULocale,java.lang.String)#java/util/HashMap/containsKey(java.lang.Object)
com/ibm/icu/text/SimpleDateFormat/processOverrideString(com.ibm.icu.util.ULocale,java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/ibm/icu/text/SimpleDateFormat/processOverrideString(com.ibm.icu.util.ULocale,java.lang.String)#java/lang/String/indexOf(java.lang.String)
com/ibm/icu/text/SimpleDateFormat/processOverrideString(com.ibm.icu.util.ULocale,java.lang.String)#java/lang/Character/valueOf(char)
com/ibm/icu/impl/TimeZoneGenericNames/formatPattern(com.ibm.icu.impl.TimeZoneGenericNames$Pattern,java.lang.String[])#com/ibm/icu/impl/TimeZoneGenericNames$Pattern/values()
com/ibm/icu/impl/TimeZoneGenericNames/formatPattern(com.ibm.icu.impl.TimeZoneGenericNames$Pattern,java.lang.String[])#java/text/MessageFormat/format(java.lang.Object)
com/ibm/icu/impl/TimeZoneGenericNames/formatPattern(com.ibm.icu.impl.TimeZoneGenericNames$Pattern,java.lang.String[])#com/ibm/icu/impl/TimeZoneGenericNames$Pattern/ordinal()
com/ibm/icu/impl/TimeZoneGenericNames/formatPattern(com.ibm.icu.impl.TimeZoneGenericNames$Pattern,java.lang.String[])#java/lang/StringBuilder/append(java.lang.String)
com/ibm/icu/impl/TimeZoneGenericNames/formatPattern(com.ibm.icu.impl.TimeZoneGenericNames$Pattern,java.lang.String[])#java/text/MessageFormat/MessageFormat(java.lang.String)
com/ibm/icu/impl/TimeZoneGenericNames/formatPattern(com.ibm.icu.impl.TimeZoneGenericNames$Pattern,java.lang.String[])#java/lang/StringBuilder/toString()
com/ibm/icu/impl/TimeZoneGenericNames/formatPattern(com.ibm.icu.impl.TimeZoneGenericNames$Pattern,java.lang.String[])#com/ibm/icu/impl/TimeZoneGenericNames$Pattern/defaultValue()
com/ibm/icu/impl/TimeZoneGenericNames/formatPattern(com.ibm.icu.impl.TimeZoneGenericNames$Pattern,java.lang.String[])#com/ibm/icu/impl/ICUResourceBundle/getBundleInstance(java.lang.String,com.ibm.icu.util.ULocale)
com/ibm/icu/impl/TimeZoneGenericNames/formatPattern(com.ibm.icu.impl.TimeZoneGenericNames$Pattern,java.lang.String[])#java/lang/StringBuilder/StringBuilder()
com/ibm/icu/impl/TimeZoneGenericNames/formatPattern(com.ibm.icu.impl.TimeZoneGenericNames$Pattern,java.lang.String[])#com/ibm/icu/impl/TimeZoneGenericNames$Pattern/key()
com/ibm/icu/impl/UnicodeRegex/getVariables(java.util.List)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/ibm/icu/impl/UnicodeRegex/getVariables(java.util.List)#java/util/Iterator/hasNext()
com/ibm/icu/impl/UnicodeRegex/getVariables(java.util.List)#java/lang/StringBuilder/append(int)
com/ibm/icu/impl/UnicodeRegex/getVariables(java.util.List)#java/lang/String/length()
com/ibm/icu/impl/UnicodeRegex/getVariables(java.util.List)#java/util/Iterator/next()
com/ibm/icu/impl/UnicodeRegex/getVariables(java.util.List)#java/lang/StringBuffer/toString()
com/ibm/icu/impl/UnicodeRegex/getVariables(java.util.List)#java/lang/String/substring(int,int)
com/ibm/icu/impl/UnicodeRegex/getVariables(java.util.List)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/ibm/icu/impl/UnicodeRegex/getVariables(java.util.List)#java/util/TreeMap/TreeMap(java.util.Comparator)
com/ibm/icu/impl/UnicodeRegex/getVariables(java.util.List)#java/lang/StringBuffer/StringBuffer()
com/ibm/icu/impl/UnicodeRegex/getVariables(java.util.List)#java/lang/StringBuilder/append(java.lang.String)
com/ibm/icu/impl/UnicodeRegex/getVariables(java.util.List)#java/lang/String/charAt(int)
com/ibm/icu/impl/UnicodeRegex/getVariables(java.util.List)#java/lang/String/trim()
com/ibm/icu/impl/UnicodeRegex/getVariables(java.util.List)#java/lang/StringBuilder/StringBuilder()
com/ibm/icu/impl/UnicodeRegex/getVariables(java.util.List)#java/lang/String/indexOf(java.lang.String)
com/ibm/icu/impl/UnicodeRegex/getVariables(java.util.List)#java/lang/String/lastIndexOf(int)
com/ibm/icu/impl/UnicodeRegex/getVariables(java.util.List)#java/lang/String/substring(int)
com/ibm/icu/impl/UnicodeRegex/getVariables(java.util.List)#java/util/Map/containsKey(java.lang.Object)
com/ibm/icu/impl/UnicodeRegex/getVariables(java.util.List)#java/util/List/iterator()
com/ibm/icu/impl/UnicodeRegex/getVariables(java.util.List)#java/lang/StringBuffer/append(java.lang.String)
com/ibm/icu/impl/UnicodeRegex/getVariables(java.util.List)#java/lang/StringBuilder/toString()
com/ibm/icu/impl/UnicodeRegex/getVariables(java.util.List)#java/lang/String/endsWith(java.lang.String)
com/ibm/icu/impl/UnicodeRegex/getVariables(java.util.List)#java/lang/StringBuffer/setLength(int)
com/ibm/icu/impl/UnicodeRegex/compileBnf(java.util.List)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/ibm/icu/impl/UnicodeRegex/compileBnf(java.util.List)#java/lang/StringBuilder/StringBuilder()
com/ibm/icu/impl/UnicodeRegex/compileBnf(java.util.List)#java/util/Set/iterator()
com/ibm/icu/impl/UnicodeRegex/compileBnf(java.util.List)#java/lang/String/replace(java.lang.CharSequence,java.lang.CharSequence)
com/ibm/icu/impl/UnicodeRegex/compileBnf(java.util.List)#java/util/Set/remove(java.lang.Object)
com/ibm/icu/impl/UnicodeRegex/compileBnf(java.util.List)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/ibm/icu/impl/UnicodeRegex/compileBnf(java.util.List)#java/util/Map/entrySet()
com/ibm/icu/impl/UnicodeRegex/compileBnf(java.util.List)#java/lang/IllegalArgumentException/IllegalArgumentException()
com/ibm/icu/impl/UnicodeRegex/compileBnf(java.util.List)#java/lang/StringBuilder/toString()
com/ibm/icu/impl/UnicodeRegex/compileBnf(java.util.List)#java/util/Iterator/hasNext()
com/ibm/icu/impl/UnicodeRegex/compileBnf(java.util.List)#java/lang/IllegalArgumentException/initCause(java.lang.Throwable)
com/ibm/icu/impl/UnicodeRegex/compileBnf(java.util.List)#java/util/Set/size()
com/ibm/icu/impl/UnicodeRegex/compileBnf(java.util.List)#java/lang/StringBuilder/append(java.lang.String)
com/ibm/icu/impl/UnicodeRegex/compileBnf(java.util.List)#java/util/Map$Entry/getKey()
com/ibm/icu/impl/UnicodeRegex/compileBnf(java.util.List)#java/util/LinkedHashSet/LinkedHashSet(java.util.Collection)
com/ibm/icu/impl/UnicodeRegex/compileBnf(java.util.List)#java/util/Map/get(java.lang.Object)
com/ibm/icu/impl/UnicodeRegex/compileBnf(java.util.List)#java/util/Iterator/next()
com/ibm/icu/impl/UnicodeRegex/compileBnf(java.util.List)#java/util/Map/keySet()
com/ibm/icu/impl/UnicodeRegex/compileBnf(java.util.List)#java/lang/String/equals(java.lang.Object)
com/ibm/icu/impl/UnicodeRegex/compileBnf(java.util.List)#java/lang/Appendable/append(java.lang.CharSequence)
com/ibm/icu/impl/UnicodeRegex/compileBnf(java.util.List)#java/lang/StringBuilder/append(java.lang.Object)
com/ibm/icu/impl/UnicodeRegex/compileBnf(java.util.List)#java/util/Map$Entry/getValue()
com/ibm/icu/text/CollationRuleParser/parseScriptReorder()#java/lang/Integer/intValue()
com/ibm/icu/text/CollationRuleParser/parseScriptReorder()#java/util/ArrayList/add(java.lang.Object)
com/ibm/icu/text/CollationRuleParser/parseScriptReorder()#java/text/ParseException/ParseException(java.lang.String,int)
com/ibm/icu/text/CollationRuleParser/parseScriptReorder()#java/lang/Integer/valueOf(int)
com/ibm/icu/text/CollationRuleParser/parseScriptReorder()#java/lang/String/indexOf(int,int)
com/ibm/icu/text/CollationRuleParser/parseScriptReorder()#java/util/ArrayList/get(int)
com/ibm/icu/text/CollationRuleParser/parseScriptReorder()#java/lang/String/split(java.lang.String,int)
com/ibm/icu/text/CollationRuleParser/parseScriptReorder()#java/util/ArrayList/ArrayList()
com/ibm/icu/text/CollationRuleParser/parseScriptReorder()#java/util/ArrayList/size()
com/ibm/icu/text/CollationRuleParser/parseScriptReorder()#java/lang/String/substring(int,int)
com/ibm/icu/text/CollationRuleParser/assembleTokenList()#java/lang/StringBuilder/substring(int,int)
com/ibm/icu/text/CollationRuleParser/assembleTokenList()#java/util/Map/put(java.lang.Object,java.lang.Object)
com/ibm/icu/text/CollationRuleParser/assembleTokenList()#java/lang/StringBuilder/append(java.lang.String)
com/ibm/icu/text/CollationRuleParser/assembleTokenList()#java/util/Map/get(java.lang.Object)
com/ibm/icu/text/CollationRuleParser/assembleTokenList()#com/ibm/icu/text/CollationParsedRuleBuilder$InverseUCA/getInversePrevCE(int,int,int,int[])
com/ibm/icu/text/CollationRuleParser/assembleTokenList()#com/ibm/icu/text/CollationRuleParser$TokenListHeader/TokenListHeader()
com/ibm/icu/text/CollationRuleParser/assembleTokenList()#java/lang/StringBuilder/length()
com/ibm/icu/text/CollationRuleParser/assembleTokenList()#java/lang/StringBuilder/toString()
com/ibm/icu/text/CollationRuleParser/assembleTokenList()#com/ibm/icu/text/CollationRuleParser$Token/Token()
com/ibm/icu/util/VTimeZone/load(java.io.Reader)#java/io/Reader/read()
com/ibm/icu/util/VTimeZone/load(java.io.Reader)#java/lang/StringBuilder/setLength(int)
com/ibm/icu/util/VTimeZone/load(java.io.Reader)#java/util/LinkedList/LinkedList()
com/ibm/icu/util/VTimeZone/load(java.io.Reader)#java/lang/StringBuilder/StringBuilder()
com/ibm/icu/util/VTimeZone/load(java.io.Reader)#java/lang/String/startsWith(java.lang.String)
com/ibm/icu/util/VTimeZone/load(java.io.Reader)#java/lang/StringBuilder/length()
com/ibm/icu/util/VTimeZone/load(java.io.Reader)#java/lang/StringBuilder/toString()
com/ibm/icu/util/VTimeZone/load(java.io.Reader)#java/util/List/add(java.lang.Object)
com/ibm/icu/util/VTimeZone/load(java.io.Reader)#java/lang/StringBuilder/append(char)
com/ibm/icu/util/VTimeZone/parseRRULE(java.lang.String,long[])#java/lang/String/length()
com/ibm/icu/util/VTimeZone/parseRRULE(java.lang.String,long[])#java/lang/String/equals(java.lang.Object)
com/ibm/icu/util/VTimeZone/parseRRULE(java.lang.String,long[])#java/lang/String/substring(int,int)
com/ibm/icu/util/VTimeZone/parseRRULE(java.lang.String,long[])#java/lang/String/indexOf(java.lang.String)
com/ibm/icu/util/VTimeZone/parseRRULE(java.lang.String,long[])#java/util/StringTokenizer/nextToken()
com/ibm/icu/util/VTimeZone/parseRRULE(java.lang.String,long[])#java/lang/String/charAt(int)
com/ibm/icu/util/VTimeZone/parseRRULE(java.lang.String,long[])#java/util/StringTokenizer/StringTokenizer(java.lang.String,java.lang.String)
com/ibm/icu/util/VTimeZone/parseRRULE(java.lang.String,long[])#java/lang/String/substring(int)
com/ibm/icu/util/VTimeZone/parseRRULE(java.lang.String,long[])#java/lang/Integer/parseInt(java.lang.String)
com/ibm/icu/util/VTimeZone/parseRRULE(java.lang.String,long[])#java/util/StringTokenizer/countTokens()
com/ibm/icu/util/VTimeZone/parseRRULE(java.lang.String,long[])#java/util/StringTokenizer/hasMoreTokens()
com/ibm/icu/util/VTimeZone/write(java.io.Writer)#java/util/Iterator/hasNext()
com/ibm/icu/util/VTimeZone/write(java.io.Writer)#java/io/BufferedWriter/BufferedWriter(java.io.Writer)
com/ibm/icu/util/VTimeZone/write(java.io.Writer)#java/lang/StringBuilder/append(java.lang.String)
com/ibm/icu/util/VTimeZone/write(java.io.Writer)#java/util/Iterator/next()
com/ibm/icu/util/VTimeZone/write(java.io.Writer)#java/io/BufferedWriter/write(java.lang.String)
com/ibm/icu/util/VTimeZone/write(java.io.Writer)#java/lang/String/startsWith(java.lang.String)
com/ibm/icu/util/VTimeZone/write(java.io.Writer)#java/util/List/iterator()
com/ibm/icu/util/VTimeZone/write(java.io.Writer)#java/util/Date/getTime()
com/ibm/icu/util/VTimeZone/write(java.io.Writer)#java/io/BufferedWriter/flush()
com/ibm/icu/util/VTimeZone/write(java.io.Writer)#java/lang/StringBuilder/toString()
com/ibm/icu/util/VTimeZone/write(java.io.Writer)#java/lang/StringBuilder/StringBuilder()
com/ibm/icu/util/VTimeZone/parse()#java/util/Iterator/hasNext()
com/ibm/icu/util/VTimeZone/parse()#java/util/StringTokenizer/StringTokenizer(java.lang.String,java.lang.String)
com/ibm/icu/util/VTimeZone/parse()#com/ibm/icu/util/AnnualTimeZoneRule/getRawOffset()
com/ibm/icu/util/VTimeZone/parse()#java/util/Iterator/next()
com/ibm/icu/util/VTimeZone/parse()#java/lang/String/substring(int,int)
com/ibm/icu/util/VTimeZone/parse()#java/lang/String/indexOf(java.lang.String)
com/ibm/icu/util/VTimeZone/parse()#java/util/List/add(java.lang.Object)
com/ibm/icu/util/VTimeZone/parse()#java/util/List/get(int)
com/ibm/icu/util/VTimeZone/parse()#com/ibm/icu/util/VTimeZone/setID(java.lang.String)
com/ibm/icu/util/VTimeZone/parse()#java/util/ArrayList/ArrayList()
com/ibm/icu/util/VTimeZone/parse()#java/util/Date/after(java.util.Date)
com/ibm/icu/util/VTimeZone/parse()#java/util/List/size()
com/ibm/icu/util/VTimeZone/parse()#com/ibm/icu/util/AnnualTimeZoneRule/getName()
com/ibm/icu/util/VTimeZone/parse()#java/lang/String/equals(java.lang.Object)
com/ibm/icu/util/VTimeZone/parse()#java/util/LinkedList/LinkedList()
com/ibm/icu/util/VTimeZone/parse()#java/lang/String/substring(int)
com/ibm/icu/util/VTimeZone/parse()#java/util/List/clear()
com/ibm/icu/util/VTimeZone/parse()#java/util/Date/Date(long)
com/ibm/icu/util/VTimeZone/parse()#java/util/StringTokenizer/nextToken()
com/ibm/icu/util/VTimeZone/parse()#java/util/List/iterator()
com/ibm/icu/util/VTimeZone/parse()#com/ibm/icu/util/AnnualTimeZoneRule/getDSTSavings()
com/ibm/icu/util/VTimeZone/parse()#java/util/List/set(int,java.lang.Object)
com/ibm/icu/util/VTimeZone/parse()#java/util/Date/getTime()
com/ibm/icu/util/VTimeZone/parse()#java/util/StringTokenizer/hasMoreTokens()
com/ibm/icu/util/ULocale/getInstance(com.ibm.icu.impl.locale.BaseLocale,com.ibm.icu.impl.locale.LocaleExtensions)#java/util/TreeMap/put(java.lang.Object,java.lang.Object)
com/ibm/icu/util/ULocale/getInstance(com.ibm.icu.impl.locale.BaseLocale,com.ibm.icu.impl.locale.LocaleExtensions)#java/lang/String/valueOf(java.lang.Object)
com/ibm/icu/util/ULocale/getInstance(com.ibm.icu.impl.locale.BaseLocale,com.ibm.icu.impl.locale.LocaleExtensions)#java/lang/StringBuilder/StringBuilder(java.lang.String)
com/ibm/icu/util/ULocale/getInstance(com.ibm.icu.impl.locale.BaseLocale,com.ibm.icu.impl.locale.LocaleExtensions)#java/lang/StringBuilder/StringBuilder()
com/ibm/icu/util/ULocale/getInstance(com.ibm.icu.impl.locale.BaseLocale,com.ibm.icu.impl.locale.LocaleExtensions)#java/lang/StringBuilder/append(char)
com/ibm/icu/util/ULocale/getInstance(com.ibm.icu.impl.locale.BaseLocale,com.ibm.icu.impl.locale.LocaleExtensions)#java/lang/StringBuilder/length()
com/ibm/icu/util/ULocale/getInstance(com.ibm.icu.impl.locale.BaseLocale,com.ibm.icu.impl.locale.LocaleExtensions)#java/lang/StringBuilder/toString()
com/ibm/icu/util/ULocale/getInstance(com.ibm.icu.impl.locale.BaseLocale,com.ibm.icu.impl.locale.LocaleExtensions)#java/util/Iterator/hasNext()
com/ibm/icu/util/ULocale/getInstance(com.ibm.icu.impl.locale.BaseLocale,com.ibm.icu.impl.locale.LocaleExtensions)#java/util/Set/size()
com/ibm/icu/util/ULocale/getInstance(com.ibm.icu.impl.locale.BaseLocale,com.ibm.icu.impl.locale.LocaleExtensions)#java/lang/StringBuilder/append(java.lang.String)
com/ibm/icu/util/ULocale/getInstance(com.ibm.icu.impl.locale.BaseLocale,com.ibm.icu.impl.locale.LocaleExtensions)#java/util/Map$Entry/getKey()
com/ibm/icu/util/ULocale/getInstance(com.ibm.icu.impl.locale.BaseLocale,com.ibm.icu.impl.locale.LocaleExtensions)#java/lang/String/length()
com/ibm/icu/util/ULocale/getInstance(com.ibm.icu.impl.locale.BaseLocale,com.ibm.icu.impl.locale.LocaleExtensions)#java/util/TreeMap/isEmpty()
com/ibm/icu/util/ULocale/getInstance(com.ibm.icu.impl.locale.BaseLocale,com.ibm.icu.impl.locale.LocaleExtensions)#java/util/TreeMap/TreeMap()
com/ibm/icu/util/ULocale/getInstance(com.ibm.icu.impl.locale.BaseLocale,com.ibm.icu.impl.locale.LocaleExtensions)#java/util/Iterator/next()
com/ibm/icu/util/ULocale/getInstance(com.ibm.icu.impl.locale.BaseLocale,com.ibm.icu.impl.locale.LocaleExtensions)#java/lang/String/equals(java.lang.Object)
com/ibm/icu/util/ULocale/getInstance(com.ibm.icu.impl.locale.BaseLocale,com.ibm.icu.impl.locale.LocaleExtensions)#java/util/Set/isEmpty()
com/ibm/icu/util/ULocale/getInstance(com.ibm.icu.impl.locale.BaseLocale,com.ibm.icu.impl.locale.LocaleExtensions)#java/util/Set/iterator()
com/ibm/icu/util/ULocale/getInstance(com.ibm.icu.impl.locale.BaseLocale,com.ibm.icu.impl.locale.LocaleExtensions)#java/util/Map$Entry/getValue()
com/ibm/icu/util/ULocale/getInstance(com.ibm.icu.impl.locale.BaseLocale,com.ibm.icu.impl.locale.LocaleExtensions)#java/util/TreeMap/entrySet()
com/ibm/icu/util/ULocale/getFallbackString(java.lang.String)#java/lang/String/length()
com/ibm/icu/util/ULocale/getFallbackString(java.lang.String)#java/lang/String/lastIndexOf(int,int)
com/ibm/icu/util/ULocale/getFallbackString(java.lang.String)#java/lang/String/substring(int,int)
com/ibm/icu/util/ULocale/getFallbackString(java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/ibm/icu/util/ULocale/getFallbackString(java.lang.String)#java/lang/String/substring(int)
com/ibm/icu/util/ULocale/getFallbackString(java.lang.String)#java/lang/String/indexOf(int)
com/ibm/icu/util/ULocale/getFallbackString(java.lang.String)#java/lang/StringBuilder/toString()
com/ibm/icu/util/ULocale/getFallbackString(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/ibm/icu/util/ULocale/getFallbackString(java.lang.String)#java/lang/String/charAt(int)
com/ibm/icu/util/ULocale/toLanguageTag()#java/lang/String/equalsIgnoreCase(java.lang.String)
com/ibm/icu/util/ULocale/toLanguageTag()#java/lang/StringBuilder/append(java.lang.String)
com/ibm/icu/util/ULocale/toLanguageTag()#java/lang/RuntimeException/RuntimeException(java.lang.Throwable)
com/ibm/icu/util/ULocale/toLanguageTag()#java/lang/StringBuilder/StringBuilder()
com/ibm/icu/util/ULocale/toLanguageTag()#java/util/List/iterator()
com/ibm/icu/util/ULocale/toLanguageTag()#java/lang/StringBuilder/toString()
com/ibm/icu/util/ULocale/toLanguageTag()#java/util/Iterator/hasNext()
com/ibm/icu/util/ULocale/toLanguageTag()#java/lang/String/length()
com/ibm/icu/util/ULocale/toLanguageTag()#java/util/Iterator/next()
com/ibm/icu/util/ULocale/toLanguageTag()#java/lang/StringBuilder/length()
com/ibm/icu/util/ULocale/<clinit>()#com/ibm/icu/util/ULocale$JDKLocaleHelper/isOriginalDefaultLocale(java.util.Locale)
com/ibm/icu/util/ULocale/<clinit>()#com/ibm/icu/util/ULocale$Category/values()
com/ibm/icu/util/ULocale/<clinit>()#com/ibm/icu/util/ULocale$JDKLocaleHelper/getSystemProperty(java.lang.String)
com/ibm/icu/util/ULocale/<clinit>()#java/util/Locale/getDefault()
com/ibm/icu/util/ULocale/<clinit>()#com/ibm/icu/util/ULocale$JDKLocaleHelper/getDefault(com.ibm.icu.util.ULocale$Category)
com/ibm/icu/util/ULocale/<clinit>()#com/ibm/icu/util/ULocale$Category/ordinal()
com/ibm/icu/util/ULocale/<clinit>()#com/ibm/icu/util/ULocale$Type/Type(com.ibm.icu.util.ULocale$1)
com/ibm/icu/util/ULocale/<clinit>()#com/ibm/icu/util/ULocale$JDKLocaleHelper/isJava7orNewer()
com/ibm/icu/util/ULocale/<clinit>()#java/util/Locale/Locale(java.lang.String,java.lang.String)
com/ibm/icu/util/ULocale/parseAcceptLanguage(java.lang.String,boolean)#java/util/TreeMap/put(java.lang.Object,java.lang.Object)
com/ibm/icu/util/ULocale/parseAcceptLanguage(java.lang.String,boolean)#java/util/TreeMap/values()
com/ibm/icu/util/ULocale/parseAcceptLanguage(java.lang.String,boolean)#java/lang/Double/parseDouble(java.lang.String)
com/ibm/icu/util/ULocale/parseAcceptLanguage(java.lang.String,boolean)#java/util/TreeMap/TreeMap()
com/ibm/icu/util/ULocale/parseAcceptLanguage(java.lang.String,boolean)#java/util/Collection/toArray(java.lang.Object[])
com/ibm/icu/util/ULocale/parseAcceptLanguage(java.lang.String,boolean)#java/lang/StringBuilder/StringBuilder()
com/ibm/icu/util/ULocale/parseAcceptLanguage(java.lang.String,boolean)#java/text/ParseException/ParseException(java.lang.String,int)
com/ibm/icu/util/ULocale/parseAcceptLanguage(java.lang.String,boolean)#java/lang/StringBuilder/append(char)
com/ibm/icu/util/ULocale/parseAcceptLanguage(java.lang.String,boolean)#java/lang/StringBuilder/length()
com/ibm/icu/util/ULocale/parseAcceptLanguage(java.lang.String,boolean)#java/lang/StringBuilder/append(java.lang.String)
com/ibm/icu/util/ULocale/parseAcceptLanguage(java.lang.String,boolean)#java/lang/String/charAt(int)
com/ibm/icu/util/ULocale/parseAcceptLanguage(java.lang.String,boolean)#java/lang/String/length()
com/ibm/icu/util/ULocale/parseAcceptLanguage(java.lang.String,boolean)#java/lang/StringBuilder/setLength(int)
com/ibm/icu/util/ULocale/parseAcceptLanguage(java.lang.String,boolean)#java/util/TreeMap/size()
com/ibm/icu/util/ULocale/parseAcceptLanguage(java.lang.String,boolean)#java/lang/StringBuilder/charAt(int)
com/ibm/icu/util/ULocale/parseAcceptLanguage(java.lang.String,boolean)#java/lang/StringBuilder/toString()
com/ibm/icu/util/ULocale/parseAcceptLanguage(java.lang.String,boolean)#com/ibm/icu/util/ULocale$1ULocaleAcceptLanguageQ/1ULocaleAcceptLanguageQ(double,int)
com/ibm/icu/text/ThaiBreakEngine/findBreaks(java.text.CharacterIterator,int,int,boolean,int,java.util.Stack)#java/text/CharacterIterator/setIndex(int)
com/ibm/icu/text/ThaiBreakEngine/findBreaks(java.text.CharacterIterator,int,int,boolean,int,java.util.Stack)#java/lang/Integer/intValue()
com/ibm/icu/text/ThaiBreakEngine/findBreaks(java.text.CharacterIterator,int,int,boolean,int,java.util.Stack)#java/text/CharacterIterator/getIndex()
com/ibm/icu/text/ThaiBreakEngine/findBreaks(java.text.CharacterIterator,int,int,boolean,int,java.util.Stack)#com/ibm/icu/text/ThaiBreakEngine$PossibleWord/PossibleWord()
com/ibm/icu/text/ThaiBreakEngine/findBreaks(java.text.CharacterIterator,int,int,boolean,int,java.util.Stack)#java/text/CharacterIterator/next()
com/ibm/icu/text/ThaiBreakEngine/findBreaks(java.text.CharacterIterator,int,int,boolean,int,java.util.Stack)#java/util/Stack/peek()
com/ibm/icu/text/ThaiBreakEngine/findBreaks(java.text.CharacterIterator,int,int,boolean,int,java.util.Stack)#java/text/CharacterIterator/previous()
com/ibm/icu/text/ThaiBreakEngine/findBreaks(java.text.CharacterIterator,int,int,boolean,int,java.util.Stack)#com/ibm/icu/text/ThaiBreakEngine$PossibleWord/acceptMarked(java.text.CharacterIterator)
com/ibm/icu/text/ThaiBreakEngine/findBreaks(java.text.CharacterIterator,int,int,boolean,int,java.util.Stack)#java/util/Stack/pop()
com/ibm/icu/text/ThaiBreakEngine/findBreaks(java.text.CharacterIterator,int,int,boolean,int,java.util.Stack)#java/text/CharacterIterator/current()
com/ibm/icu/text/ThaiBreakEngine/findBreaks(java.text.CharacterIterator,int,int,boolean,int,java.util.Stack)#java/util/Stack/push(java.lang.Object)
com/ibm/icu/text/ThaiBreakEngine/findBreaks(java.text.CharacterIterator,int,int,boolean,int,java.util.Stack)#com/ibm/icu/text/ThaiBreakEngine$PossibleWord/longestPrefix()
com/ibm/icu/text/ThaiBreakEngine/findBreaks(java.text.CharacterIterator,int,int,boolean,int,java.util.Stack)#com/ibm/icu/text/ThaiBreakEngine$PossibleWord/backUp(java.text.CharacterIterator)
com/ibm/icu/text/ThaiBreakEngine/findBreaks(java.text.CharacterIterator,int,int,boolean,int,java.util.Stack)#java/lang/Integer/valueOf(int)
com/ibm/icu/text/ThaiBreakEngine/findBreaks(java.text.CharacterIterator,int,int,boolean,int,java.util.Stack)#com/ibm/icu/text/ThaiBreakEngine$PossibleWord/markCurrent()
com/ibm/icu/text/ThaiBreakEngine/findBreaks(java.text.CharacterIterator,int,int,boolean,int,java.util.Stack)#com/ibm/icu/text/ThaiBreakEngine$PossibleWord/candidates(java.text.CharacterIterator,com.ibm.icu.text.DictionaryMatcher,int)
com/ibm/icu/util/RuleBasedTimeZone/complete()#java/util/BitSet/get(int)
com/ibm/icu/util/RuleBasedTimeZone/complete()#java/util/ArrayList/ArrayList()
com/ibm/icu/util/RuleBasedTimeZone/complete()#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
com/ibm/icu/util/RuleBasedTimeZone/complete()#java/util/Date/after(java.util.Date)
com/ibm/icu/util/RuleBasedTimeZone/complete()#com/ibm/icu/util/AnnualTimeZoneRule/getRawOffset()
com/ibm/icu/util/RuleBasedTimeZone/complete()#java/lang/String/equals(java.lang.Object)
com/ibm/icu/util/RuleBasedTimeZone/complete()#java/util/BitSet/set(int)
com/ibm/icu/util/RuleBasedTimeZone/complete()#java/util/List/add(java.lang.Object)
com/ibm/icu/util/RuleBasedTimeZone/complete()#java/util/List/get(int)
com/ibm/icu/util/RuleBasedTimeZone/complete()#com/ibm/icu/util/AnnualTimeZoneRule/getDSTSavings()
com/ibm/icu/util/RuleBasedTimeZone/complete()#java/util/List/size()
com/ibm/icu/util/RuleBasedTimeZone/complete()#java/util/BitSet/BitSet(int)
com/ibm/icu/util/RuleBasedTimeZone/complete()#java/util/Date/getTime()
com/ibm/icu/text/CharsetMatch/getString(int)#java/io/Reader/close()
com/ibm/icu/text/CharsetMatch/getString(int)#java/lang/String/substring(int,int)
com/ibm/icu/text/CharsetMatch/getString(int)#java/lang/Math/min(int,int)
com/ibm/icu/text/CharsetMatch/getString(int)#java/lang/StringBuilder/toString()
com/ibm/icu/text/CharsetMatch/getString(int)#java/io/Reader/read(char[],int,int)
com/ibm/icu/text/CharsetMatch/getString(int)#java/lang/StringBuilder/append(char[],int,int)
com/ibm/icu/text/CharsetMatch/getString(int)#java/lang/String/String(byte[],java.lang.String)
com/ibm/icu/text/CharsetMatch/getString(int)#java/lang/StringBuilder/StringBuilder()
com/ibm/icu/text/CharsetMatch/getString(int)#java/lang/String/indexOf(java.lang.String)
com/ibm/icu/text/AlphabeticIndex/initBuckets()#com/ibm/icu/text/AlphabeticIndex$Record/access$600(com.ibm.icu.text.AlphabeticIndex$Record)
com/ibm/icu/text/AlphabeticIndex/initBuckets()#java/util/TreeSet/addAll(java.util.Collection)
com/ibm/icu/text/AlphabeticIndex/initBuckets()#com/ibm/icu/text/AlphabeticIndex$Bucket/access$200(com.ibm.icu.text.AlphabeticIndex$Bucket)
com/ibm/icu/text/AlphabeticIndex/initBuckets()#com/ibm/icu/text/AlphabeticIndex$BucketList/access$100(com.ibm.icu.text.AlphabeticIndex$BucketList)
com/ibm/icu/text/AlphabeticIndex/initBuckets()#com/ibm/icu/text/AlphabeticIndex$BucketList/BucketList(com.ibm.icu.text.AlphabeticIndex,com.ibm.icu.text.AlphabeticIndex$1)
com/ibm/icu/text/AlphabeticIndex/initBuckets()#java/util/Iterator/next()
com/ibm/icu/text/AlphabeticIndex/initBuckets()#com/ibm/icu/text/AlphabeticIndex$1/1(com.ibm.icu.text.AlphabeticIndex)
com/ibm/icu/text/AlphabeticIndex/initBuckets()#com/ibm/icu/text/RuleBasedCollator/compare(java.lang.Object,java.lang.Object)
com/ibm/icu/text/AlphabeticIndex/initBuckets()#java/util/Iterator/hasNext()
com/ibm/icu/text/AlphabeticIndex/initBuckets()#java/util/TreeSet/TreeSet(java.util.Comparator)
com/ibm/icu/text/AlphabeticIndex/initBuckets()#com/ibm/icu/text/AlphabeticIndex$BucketList/access$900(com.ibm.icu.text.AlphabeticIndex$BucketList,com.ibm.icu.text.AlphabeticIndex$Record,com.ibm.icu.text.AlphabeticIndex$Bucket)
com/ibm/icu/text/AlphabeticIndex/initBuckets()#java/util/TreeSet/iterator()
com/ibm/icu/text/AlphabeticIndex/initLabels()#java/util/Iterator/remove()
com/ibm/icu/text/AlphabeticIndex/initLabels()#java/util/ArrayList/ArrayList(java.util.Collection)
com/ibm/icu/text/AlphabeticIndex/initLabels()#java/util/LinkedHashMap/get(java.lang.Object)
com/ibm/icu/text/AlphabeticIndex/initLabels()#java/util/LinkedHashMap/put(java.lang.Object,java.lang.Object)
com/ibm/icu/text/AlphabeticIndex/initLabels()#java/util/LinkedHashSet/LinkedHashSet()
com/ibm/icu/text/AlphabeticIndex/initLabels()#java/util/Iterator/next()
com/ibm/icu/text/AlphabeticIndex/initLabels()#java/util/TreeSet/contains(java.lang.Object)
com/ibm/icu/text/AlphabeticIndex/initLabels()#java/util/Set/iterator()
com/ibm/icu/text/AlphabeticIndex/initLabels()#java/util/List/add(java.lang.Object)
com/ibm/icu/text/AlphabeticIndex/initLabels()#java/util/TreeSet/add(java.lang.Object)
com/ibm/icu/text/AlphabeticIndex/initLabels()#java/util/Iterator/hasNext()
com/ibm/icu/text/AlphabeticIndex/initLabels()#java/util/TreeSet/TreeSet(java.util.Comparator)
com/ibm/icu/text/AlphabeticIndex/initLabels()#java/util/TreeSet/size()
com/ibm/icu/text/AlphabeticIndex/initLabels()#java/util/TreeSet/iterator()
com/ibm/icu/text/AlphabeticIndex/initLabels()#java/util/Set/add(java.lang.Object)
com/ibm/icu/text/StringSearch/doPreviousCanonicalSuffixMatch(int,int)#java/text/CharacterIterator/setIndex(int)
com/ibm/icu/text/StringSearch/doPreviousCanonicalSuffixMatch(int,int)#java/text/CharacterIterator/getIndex()
com/ibm/icu/text/StringSearch/doPreviousCanonicalSuffixMatch(int,int)#java/lang/StringBuilder/append(java.lang.String)
com/ibm/icu/text/StringSearch/doPreviousCanonicalSuffixMatch(int,int)#java/lang/StringBuilder/StringBuilder()
com/ibm/icu/text/StringSearch/doPreviousCanonicalSuffixMatch(int,int)#java/lang/StringBuilder/delete(int,int)
com/ibm/icu/text/StringSearch/doPreviousCanonicalSuffixMatch(int,int)#java/lang/StringBuilder/append(char)
com/ibm/icu/text/StringSearch/doPreviousCanonicalSuffixMatch(int,int)#java/lang/StringBuilder/length()
com/ibm/icu/text/StringSearch/doPreviousCanonicalSuffixMatch(int,int)#java/text/CharacterIterator/next()
com/ibm/icu/text/StringSearch/doPreviousCanonicalSuffixMatch(int,int)#java/lang/StringBuilder/charAt(int)
com/ibm/icu/text/StringSearch/doPreviousCanonicalSuffixMatch(int,int)#java/text/CharacterIterator/previous()
com/ibm/icu/text/StringSearch/doPreviousCanonicalSuffixMatch(int,int)#java/lang/StringBuilder/toString()
com/ibm/icu/text/StringSearch/doNextCanonicalMatch(int)#java/text/CharacterIterator/setIndex(int)
com/ibm/icu/text/StringSearch/doNextCanonicalMatch(int)#java/text/CharacterIterator/getIndex()
com/ibm/icu/text/StringSearch/doNextCanonicalMatch(int)#java/lang/StringBuilder/append(java.lang.String)
com/ibm/icu/text/StringSearch/doNextCanonicalMatch(int)#java/lang/StringBuilder/StringBuilder()
com/ibm/icu/text/StringSearch/doNextCanonicalMatch(int)#java/lang/StringBuilder/delete(int,int)
com/ibm/icu/text/StringSearch/doNextCanonicalMatch(int)#java/lang/StringBuilder/append(char)
com/ibm/icu/text/StringSearch/doNextCanonicalMatch(int)#java/lang/StringBuilder/length()
com/ibm/icu/text/StringSearch/doNextCanonicalMatch(int)#java/text/CharacterIterator/next()
com/ibm/icu/text/StringSearch/doNextCanonicalMatch(int)#java/lang/StringBuilder/charAt(int)
com/ibm/icu/text/StringSearch/doNextCanonicalMatch(int)#java/text/CharacterIterator/previous()
com/ibm/icu/impl/duration/impl/ResourceBasedPeriodFormatterDataService/get(java.lang.String)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/ibm/icu/impl/duration/impl/ResourceBasedPeriodFormatterDataService/get(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/ibm/icu/impl/duration/impl/ResourceBasedPeriodFormatterDataService/get(java.lang.String)#java/util/Map/get(java.lang.Object)
com/ibm/icu/impl/duration/impl/ResourceBasedPeriodFormatterDataService/get(java.lang.String)#java/util/MissingResourceException/MissingResourceException(java.lang.String,java.lang.String,java.lang.String)
com/ibm/icu/impl/duration/impl/ResourceBasedPeriodFormatterDataService/get(java.lang.String)#java/io/InputStreamReader/InputStreamReader(java.io.InputStream,java.lang.String)
com/ibm/icu/impl/duration/impl/ResourceBasedPeriodFormatterDataService/get(java.lang.String)#java/lang/String/equals(java.lang.Object)
com/ibm/icu/impl/duration/impl/ResourceBasedPeriodFormatterDataService/get(java.lang.String)#java/lang/String/substring(int,int)
com/ibm/icu/impl/duration/impl/ResourceBasedPeriodFormatterDataService/get(java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/ibm/icu/impl/duration/impl/ResourceBasedPeriodFormatterDataService/get(java.lang.String)#java/util/Collection/contains(java.lang.Object)
com/ibm/icu/impl/duration/impl/ResourceBasedPeriodFormatterDataService/get(java.lang.String)#java/lang/Object/getClass()
com/ibm/icu/impl/duration/impl/ResourceBasedPeriodFormatterDataService/get(java.lang.String)#java/lang/StringBuilder/toString()
com/ibm/icu/impl/duration/impl/ResourceBasedPeriodFormatterDataService/get(java.lang.String)#java/lang/String/lastIndexOf(java.lang.String)
com/ibm/icu/impl/duration/impl/ResourceBasedPeriodFormatterDataService/get(java.lang.String)#java/lang/String/indexOf(int)
com/ibm/icu/text/NumeratorSubstitution/doParse(java.lang.String,java.text.ParsePosition,double,double,boolean)#java/text/ParsePosition/setIndex(int)
com/ibm/icu/text/NumeratorSubstitution/doParse(java.lang.String,java.text.ParsePosition,double,double,boolean)#java/lang/String/charAt(int)
com/ibm/icu/text/NumeratorSubstitution/doParse(java.lang.String,java.text.ParsePosition,double,double,boolean)#java/lang/String/length()
com/ibm/icu/text/NumeratorSubstitution/doParse(java.lang.String,java.text.ParsePosition,double,double,boolean)#java/lang/Double/Double(double)
com/ibm/icu/text/NumeratorSubstitution/doParse(java.lang.String,java.text.ParsePosition,double,double,boolean)#java/text/ParsePosition/ParsePosition(int)
com/ibm/icu/text/NumeratorSubstitution/doParse(java.lang.String,java.text.ParsePosition,double,double,boolean)#java/lang/Number/intValue()
com/ibm/icu/text/NumeratorSubstitution/doParse(java.lang.String,java.text.ParsePosition,double,double,boolean)#java/lang/String/substring(int)
com/ibm/icu/text/NumeratorSubstitution/doParse(java.lang.String,java.text.ParsePosition,double,double,boolean)#java/lang/Number/longValue()
com/ibm/icu/text/NumeratorSubstitution/doParse(java.lang.String,java.text.ParsePosition,double,double,boolean)#java/text/ParsePosition/getIndex()
com/ibm/icu/impl/locale/LanguageTag/parseLocale(com.ibm.icu.impl.locale.BaseLocale,com.ibm.icu.impl.locale.LocaleExtensions)#java/lang/Character/toString()
com/ibm/icu/impl/locale/LanguageTag/parseLocale(com.ibm.icu.impl.locale.BaseLocale,com.ibm.icu.impl.locale.LocaleExtensions)#java/lang/String/equals(java.lang.Object)
com/ibm/icu/impl/locale/LanguageTag/parseLocale(com.ibm.icu.impl.locale.BaseLocale,com.ibm.icu.impl.locale.LocaleExtensions)#java/lang/StringBuilder/StringBuilder()
com/ibm/icu/impl/locale/LanguageTag/parseLocale(com.ibm.icu.impl.locale.BaseLocale,com.ibm.icu.impl.locale.LocaleExtensions)#java/lang/String/replace(java.lang.CharSequence,java.lang.CharSequence)
com/ibm/icu/impl/locale/LanguageTag/parseLocale(com.ibm.icu.impl.locale.BaseLocale,com.ibm.icu.impl.locale.LocaleExtensions)#java/util/List/add(java.lang.Object)
com/ibm/icu/impl/locale/LanguageTag/parseLocale(com.ibm.icu.impl.locale.BaseLocale,com.ibm.icu.impl.locale.LocaleExtensions)#java/lang/Character/charValue()
com/ibm/icu/impl/locale/LanguageTag/parseLocale(com.ibm.icu.impl.locale.BaseLocale,com.ibm.icu.impl.locale.LocaleExtensions)#java/lang/StringBuilder/toString()
com/ibm/icu/impl/locale/LanguageTag/parseLocale(com.ibm.icu.impl.locale.BaseLocale,com.ibm.icu.impl.locale.LocaleExtensions)#java/util/ArrayList/ArrayList()
com/ibm/icu/impl/locale/LanguageTag/parseLocale(com.ibm.icu.impl.locale.BaseLocale,com.ibm.icu.impl.locale.LocaleExtensions)#java/util/Iterator/hasNext()
com/ibm/icu/impl/locale/LanguageTag/parseLocale(com.ibm.icu.impl.locale.BaseLocale,com.ibm.icu.impl.locale.LocaleExtensions)#java/lang/StringBuilder/append(java.lang.String)
com/ibm/icu/impl/locale/LanguageTag/parseLocale(com.ibm.icu.impl.locale.BaseLocale,com.ibm.icu.impl.locale.LocaleExtensions)#java/lang/String/length()
com/ibm/icu/impl/locale/LanguageTag/parseLocale(com.ibm.icu.impl.locale.BaseLocale,com.ibm.icu.impl.locale.LocaleExtensions)#java/util/Iterator/next()
com/ibm/icu/impl/locale/LanguageTag/parseLocale(com.ibm.icu.impl.locale.BaseLocale,com.ibm.icu.impl.locale.LocaleExtensions)#java/util/Set/iterator()
com/ibm/icu/impl/locale/LanguageTag/parseLocale(com.ibm.icu.impl.locale.BaseLocale,com.ibm.icu.impl.locale.LocaleExtensions)#java/lang/StringBuilder/length()
