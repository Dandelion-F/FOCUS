org/eclipse/aether/util/graph/selector/ExclusionDependencySelector/deriveChildSelector(org.eclipse.aether.collection.DependencyCollectionContext)#java/util/Arrays/binarySearch(java.lang.Object[],java.lang.Object,java.util.Comparator)
org/eclipse/aether/util/graph/selector/ExclusionDependencySelector/deriveChildSelector(org.eclipse.aether.collection.DependencyCollectionContext)#java/util/Iterator/hasNext()
org/eclipse/aether/util/graph/selector/ExclusionDependencySelector/deriveChildSelector(org.eclipse.aether.collection.DependencyCollectionContext)#org/eclipse/aether/graph/Dependency/getExclusions()
org/eclipse/aether/util/graph/selector/ExclusionDependencySelector/deriveChildSelector(org.eclipse.aether.collection.DependencyCollectionContext)#java/util/Collection/isEmpty()
org/eclipse/aether/util/graph/selector/ExclusionDependencySelector/deriveChildSelector(org.eclipse.aether.collection.DependencyCollectionContext)#java/util/Collection/size()
org/eclipse/aether/util/graph/selector/ExclusionDependencySelector/deriveChildSelector(org.eclipse.aether.collection.DependencyCollectionContext)#java/util/Iterator/next()
org/eclipse/aether/util/graph/selector/ExclusionDependencySelector/deriveChildSelector(org.eclipse.aether.collection.DependencyCollectionContext)#org/eclipse/aether/collection/DependencyCollectionContext/getDependency()
org/eclipse/aether/util/graph/selector/ExclusionDependencySelector/deriveChildSelector(org.eclipse.aether.collection.DependencyCollectionContext)#java/util/Collection/iterator()
org/eclipse/aether/util/graph/selector/ExclusionDependencySelector/deriveChildSelector(org.eclipse.aether.collection.DependencyCollectionContext)#java/lang/System/arraycopy(java.lang.Object,int,java.lang.Object,int,int)
org/eclipse/aether/util/graph/transformer/ConflictIdSorter/transformGraph(org.eclipse.aether.graph.DependencyNode,org.eclipse.aether.collection.DependencyGraphTransformationContext)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/eclipse/aether/util/graph/transformer/ConflictIdSorter/transformGraph(org.eclipse.aether.graph.DependencyNode,org.eclipse.aether.collection.DependencyGraphTransformationContext)#org/eclipse/aether/collection/DependencyGraphTransformationContext/get(java.lang.Object)
org/eclipse/aether/util/graph/transformer/ConflictIdSorter/transformGraph(org.eclipse.aether.graph.DependencyNode,org.eclipse.aether.collection.DependencyGraphTransformationContext)#java/util/Map/get(java.lang.Object)
org/eclipse/aether/util/graph/transformer/ConflictIdSorter/transformGraph(org.eclipse.aether.graph.DependencyNode,org.eclipse.aether.collection.DependencyGraphTransformationContext)#java/util/Map/size()
org/eclipse/aether/util/graph/transformer/ConflictIdSorter/transformGraph(org.eclipse.aether.graph.DependencyNode,org.eclipse.aether.collection.DependencyGraphTransformationContext)#java/util/Map/values()
org/eclipse/aether/util/graph/transformer/ConflictIdSorter/transformGraph(org.eclipse.aether.graph.DependencyNode,org.eclipse.aether.collection.DependencyGraphTransformationContext)#java/util/IdentityHashMap/IdentityHashMap(int)
org/eclipse/aether/util/graph/transformer/ConflictIdSorter/transformGraph(org.eclipse.aether.graph.DependencyNode,org.eclipse.aether.collection.DependencyGraphTransformationContext)#java/lang/Integer/valueOf(int)
org/eclipse/aether/util/graph/transformer/ConflictIdSorter/transformGraph(org.eclipse.aether.graph.DependencyNode,org.eclipse.aether.collection.DependencyGraphTransformationContext)#java/lang/System/currentTimeMillis()
org/eclipse/aether/util/graph/transformer/ConflictIdSorter/transformGraph(org.eclipse.aether.graph.DependencyNode,org.eclipse.aether.collection.DependencyGraphTransformationContext)#org/eclipse/aether/util/graph/transformer/ConflictIdSorter$ConflictId/ConflictId(java.lang.Object,int)
org/eclipse/aether/util/graph/transformer/ConflictIdSorter/transformGraph(org.eclipse.aether.graph.DependencyNode,org.eclipse.aether.collection.DependencyGraphTransformationContext)#java/lang/Long/valueOf(long)
org/eclipse/aether/util/graph/transformer/ConflictIdSorter/transformGraph(org.eclipse.aether.graph.DependencyNode,org.eclipse.aether.collection.DependencyGraphTransformationContext)#java/util/LinkedHashMap/LinkedHashMap(int)
org/eclipse/aether/util/graph/transformer/ConflictIdSorter/buildConflitIdDAG(java.util.Map,org.eclipse.aether.graph.DependencyNode,org.eclipse.aether.util.graph.transformer.ConflictIdSorter$ConflictId,int,java.util.Map,java.util.Map)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/eclipse/aether/util/graph/transformer/ConflictIdSorter/buildConflitIdDAG(java.util.Map,org.eclipse.aether.graph.DependencyNode,org.eclipse.aether.util.graph.transformer.ConflictIdSorter$ConflictId,int,java.util.Map,java.util.Map)#java/util/Iterator/hasNext()
org/eclipse/aether/util/graph/transformer/ConflictIdSorter/buildConflitIdDAG(java.util.Map,org.eclipse.aether.graph.DependencyNode,org.eclipse.aether.util.graph.transformer.ConflictIdSorter$ConflictId,int,java.util.Map,java.util.Map)#org/eclipse/aether/graph/DependencyNode/getChildren()
org/eclipse/aether/util/graph/transformer/ConflictIdSorter/buildConflitIdDAG(java.util.Map,org.eclipse.aether.graph.DependencyNode,org.eclipse.aether.util.graph.transformer.ConflictIdSorter$ConflictId,int,java.util.Map,java.util.Map)#java/util/Map/get(java.lang.Object)
org/eclipse/aether/util/graph/transformer/ConflictIdSorter/buildConflitIdDAG(java.util.Map,org.eclipse.aether.graph.DependencyNode,org.eclipse.aether.util.graph.transformer.ConflictIdSorter$ConflictId,int,java.util.Map,java.util.Map)#org/eclipse/aether/util/graph/transformer/ConflictIdSorter$ConflictId/pullup(int)
org/eclipse/aether/util/graph/transformer/ConflictIdSorter/buildConflitIdDAG(java.util.Map,org.eclipse.aether.graph.DependencyNode,org.eclipse.aether.util.graph.transformer.ConflictIdSorter$ConflictId,int,java.util.Map,java.util.Map)#org/eclipse/aether/util/graph/transformer/ConflictIdSorter$ConflictId/add(org.eclipse.aether.util.graph.transformer.ConflictIdSorter$ConflictId)
org/eclipse/aether/util/graph/transformer/ConflictIdSorter/buildConflitIdDAG(java.util.Map,org.eclipse.aether.graph.DependencyNode,org.eclipse.aether.util.graph.transformer.ConflictIdSorter$ConflictId,int,java.util.Map,java.util.Map)#java/util/Iterator/next()
org/eclipse/aether/util/graph/transformer/ConflictIdSorter/buildConflitIdDAG(java.util.Map,org.eclipse.aether.graph.DependencyNode,org.eclipse.aether.util.graph.transformer.ConflictIdSorter$ConflictId,int,java.util.Map,java.util.Map)#java/util/List/iterator()
org/eclipse/aether/util/graph/transformer/ConflictIdSorter/buildConflitIdDAG(java.util.Map,org.eclipse.aether.graph.DependencyNode,org.eclipse.aether.util.graph.transformer.ConflictIdSorter$ConflictId,int,java.util.Map,java.util.Map)#org/eclipse/aether/util/graph/transformer/ConflictIdSorter$ConflictId/ConflictId(java.lang.Object,int)
org/eclipse/aether/util/graph/transformer/ConflictIdSorter/findCycles(org.eclipse.aether.util.graph.transformer.ConflictIdSorter$ConflictId,java.util.Map,java.util.Map,java.util.Collection)#java/lang/Integer/intValue()
org/eclipse/aether/util/graph/transformer/ConflictIdSorter/findCycles(org.eclipse.aether.util.graph.transformer.ConflictIdSorter$ConflictId,java.util.Map,java.util.Map,java.util.Collection)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/eclipse/aether/util/graph/transformer/ConflictIdSorter/findCycles(org.eclipse.aether.util.graph.transformer.ConflictIdSorter$ConflictId,java.util.Map,java.util.Map,java.util.Collection)#java/util/Iterator/hasNext()
org/eclipse/aether/util/graph/transformer/ConflictIdSorter/findCycles(org.eclipse.aether.util.graph.transformer.ConflictIdSorter$ConflictId,java.util.Map,java.util.Map,java.util.Collection)#java/util/Map$Entry/getKey()
org/eclipse/aether/util/graph/transformer/ConflictIdSorter/findCycles(org.eclipse.aether.util.graph.transformer.ConflictIdSorter$ConflictId,java.util.Map,java.util.Map,java.util.Collection)#java/util/Map/size()
org/eclipse/aether/util/graph/transformer/ConflictIdSorter/findCycles(org.eclipse.aether.util.graph.transformer.ConflictIdSorter$ConflictId,java.util.Map,java.util.Map,java.util.Collection)#java/util/Iterator/next()
org/eclipse/aether/util/graph/transformer/ConflictIdSorter/findCycles(org.eclipse.aether.util.graph.transformer.ConflictIdSorter$ConflictId,java.util.Map,java.util.Map,java.util.Collection)#java/util/Set/iterator()
org/eclipse/aether/util/graph/transformer/ConflictIdSorter/findCycles(org.eclipse.aether.util.graph.transformer.ConflictIdSorter$ConflictId,java.util.Map,java.util.Map,java.util.Collection)#java/util/Collection/add(java.lang.Object)
org/eclipse/aether/util/graph/transformer/ConflictIdSorter/findCycles(org.eclipse.aether.util.graph.transformer.ConflictIdSorter$ConflictId,java.util.Map,java.util.Map,java.util.Collection)#java/lang/Integer/valueOf(int)
org/eclipse/aether/util/graph/transformer/ConflictIdSorter/findCycles(org.eclipse.aether.util.graph.transformer.ConflictIdSorter$ConflictId,java.util.Map,java.util.Map,java.util.Collection)#java/util/Map$Entry/getValue()
org/eclipse/aether/util/graph/transformer/ConflictIdSorter/findCycles(org.eclipse.aether.util.graph.transformer.ConflictIdSorter$ConflictId,java.util.Map,java.util.Map,java.util.Collection)#java/util/Collection/iterator()
org/eclipse/aether/util/graph/transformer/ConflictIdSorter/findCycles(org.eclipse.aether.util.graph.transformer.ConflictIdSorter$ConflictId,java.util.Map,java.util.Map,java.util.Collection)#java/util/HashSet/HashSet()
org/eclipse/aether/util/graph/transformer/ConflictIdSorter/findCycles(org.eclipse.aether.util.graph.transformer.ConflictIdSorter$ConflictId,java.util.Map,java.util.Map,java.util.Collection)#java/util/Map/entrySet()
org/eclipse/aether/util/graph/transformer/ConflictIdSorter/findCycles(org.eclipse.aether.util.graph.transformer.ConflictIdSorter$ConflictId,java.util.Map,java.util.Map,java.util.Collection)#java/util/Map/remove(java.lang.Object)
org/eclipse/aether/util/graph/transformer/ConflictIdSorter/topsortConflictIds(java.util.Collection,org.eclipse.aether.collection.DependencyGraphTransformationContext)#java/util/Iterator/hasNext()
org/eclipse/aether/util/graph/transformer/ConflictIdSorter/topsortConflictIds(java.util.Collection,org.eclipse.aether.collection.DependencyGraphTransformationContext)#java/util/Collections/emptySet()
org/eclipse/aether/util/graph/transformer/ConflictIdSorter/topsortConflictIds(java.util.Collection,org.eclipse.aether.collection.DependencyGraphTransformationContext)#java/util/Iterator/next()
org/eclipse/aether/util/graph/transformer/ConflictIdSorter/topsortConflictIds(java.util.Collection,org.eclipse.aether.collection.DependencyGraphTransformationContext)#org/eclipse/aether/util/graph/transformer/ConflictIdSorter$RootQueue/RootQueue(int)
org/eclipse/aether/util/graph/transformer/ConflictIdSorter/topsortConflictIds(java.util.Collection,org.eclipse.aether.collection.DependencyGraphTransformationContext)#org/eclipse/aether/util/graph/transformer/ConflictIdSorter$RootQueue/add(org.eclipse.aether.util.graph.transformer.ConflictIdSorter$ConflictId)
org/eclipse/aether/util/graph/transformer/ConflictIdSorter/topsortConflictIds(java.util.Collection,org.eclipse.aether.collection.DependencyGraphTransformationContext)#java/util/Collection/iterator()
org/eclipse/aether/util/graph/transformer/ConflictIdSorter/topsortConflictIds(java.util.Collection,org.eclipse.aether.collection.DependencyGraphTransformationContext)#java/util/ArrayList/ArrayList(int)
org/eclipse/aether/util/graph/transformer/ConflictIdSorter/topsortConflictIds(java.util.Collection,org.eclipse.aether.collection.DependencyGraphTransformationContext)#org/eclipse/aether/collection/DependencyGraphTransformationContext/put(java.lang.Object,java.lang.Object)
org/eclipse/aether/util/graph/transformer/ConflictIdSorter/topsortConflictIds(java.util.Collection,org.eclipse.aether.collection.DependencyGraphTransformationContext)#java/util/List/size()
org/eclipse/aether/util/graph/transformer/ConflictIdSorter/topsortConflictIds(java.util.Collection,org.eclipse.aether.collection.DependencyGraphTransformationContext)#java/util/Collection/size()
org/eclipse/aether/util/graph/transformer/ConflictResolver/transformGraph(org.eclipse.aether.graph.DependencyNode,org.eclipse.aether.collection.DependencyGraphTransformationContext)#org/eclipse/aether/RepositoryException/RepositoryException(java.lang.String)
org/eclipse/aether/util/graph/transformer/ConflictResolver/transformGraph(org.eclipse.aether.graph.DependencyNode,org.eclipse.aether.collection.DependencyGraphTransformationContext)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/eclipse/aether/util/graph/transformer/ConflictResolver/transformGraph(org.eclipse.aether.graph.DependencyNode,org.eclipse.aether.collection.DependencyGraphTransformationContext)#org/eclipse/aether/graph/Dependency/getScope()
org/eclipse/aether/util/graph/transformer/ConflictResolver/transformGraph(org.eclipse.aether.graph.DependencyNode,org.eclipse.aether.collection.DependencyGraphTransformationContext)#java/lang/Long/valueOf(long)
org/eclipse/aether/util/graph/transformer/ConflictResolver/transformGraph(org.eclipse.aether.graph.DependencyNode,org.eclipse.aether.collection.DependencyGraphTransformationContext)#java/lang/StringBuilder/append(java.lang.String)
org/eclipse/aether/util/graph/transformer/ConflictResolver/transformGraph(org.eclipse.aether.graph.DependencyNode,org.eclipse.aether.collection.DependencyGraphTransformationContext)#java/util/Collection/addAll(java.util.Collection)
org/eclipse/aether/util/graph/transformer/ConflictResolver/transformGraph(org.eclipse.aether.graph.DependencyNode,org.eclipse.aether.collection.DependencyGraphTransformationContext)#org/eclipse/aether/graph/DependencyNode/getDependency()
org/eclipse/aether/util/graph/transformer/ConflictResolver/transformGraph(org.eclipse.aether.graph.DependencyNode,org.eclipse.aether.collection.DependencyGraphTransformationContext)#java/lang/StringBuilder/StringBuilder()
org/eclipse/aether/util/graph/transformer/ConflictResolver/transformGraph(org.eclipse.aether.graph.DependencyNode,org.eclipse.aether.collection.DependencyGraphTransformationContext)#java/lang/Boolean/valueOf(boolean)
org/eclipse/aether/util/graph/transformer/ConflictResolver/transformGraph(org.eclipse.aether.graph.DependencyNode,org.eclipse.aether.collection.DependencyGraphTransformationContext)#org/eclipse/aether/util/graph/transformer/ConflictResolver$ScopeSelector/selectScope(org.eclipse.aether.util.graph.transformer.ConflictResolver$ConflictContext)
org/eclipse/aether/util/graph/transformer/ConflictResolver/transformGraph(org.eclipse.aether.graph.DependencyNode,org.eclipse.aether.collection.DependencyGraphTransformationContext)#org/eclipse/aether/graph/DependencyNode/setOptional(java.lang.Boolean)
org/eclipse/aether/util/graph/transformer/ConflictResolver/transformGraph(org.eclipse.aether.graph.DependencyNode,org.eclipse.aether.collection.DependencyGraphTransformationContext)#java/lang/StringBuilder/toString()
org/eclipse/aether/util/graph/transformer/ConflictResolver/transformGraph(org.eclipse.aether.graph.DependencyNode,org.eclipse.aether.collection.DependencyGraphTransformationContext)#org/eclipse/aether/util/graph/transformer/ConflictResolver$VersionSelector/selectVersion(org.eclipse.aether.util.graph.transformer.ConflictResolver$ConflictContext)
org/eclipse/aether/util/graph/transformer/ConflictResolver/transformGraph(org.eclipse.aether.graph.DependencyNode,org.eclipse.aether.collection.DependencyGraphTransformationContext)#org/eclipse/aether/util/graph/transformer/ConflictResolver$State/State(org.eclipse.aether.util.graph.transformer.ConflictResolver,org.eclipse.aether.graph.DependencyNode,java.util.Map,int,org.eclipse.aether.collection.DependencyGraphTransformationContext)
org/eclipse/aether/util/graph/transformer/ConflictResolver/transformGraph(org.eclipse.aether.graph.DependencyNode,org.eclipse.aether.collection.DependencyGraphTransformationContext)#java/util/Iterator/hasNext()
org/eclipse/aether/util/graph/transformer/ConflictResolver/transformGraph(org.eclipse.aether.graph.DependencyNode,org.eclipse.aether.collection.DependencyGraphTransformationContext)#org/eclipse/aether/collection/DependencyGraphTransformationContext/get(java.lang.Object)
org/eclipse/aether/util/graph/transformer/ConflictResolver/transformGraph(org.eclipse.aether.graph.DependencyNode,org.eclipse.aether.collection.DependencyGraphTransformationContext)#org/eclipse/aether/util/graph/transformer/ConflictResolver$State/prepare(java.lang.Object,java.util.Collection)
org/eclipse/aether/util/graph/transformer/ConflictResolver/transformGraph(org.eclipse.aether.graph.DependencyNode,org.eclipse.aether.collection.DependencyGraphTransformationContext)#java/util/List/isEmpty()
org/eclipse/aether/util/graph/transformer/ConflictResolver/transformGraph(org.eclipse.aether.graph.DependencyNode,org.eclipse.aether.collection.DependencyGraphTransformationContext)#org/eclipse/aether/util/graph/transformer/ConflictResolver$State/finish()
org/eclipse/aether/util/graph/transformer/ConflictResolver/transformGraph(org.eclipse.aether.graph.DependencyNode,org.eclipse.aether.collection.DependencyGraphTransformationContext)#java/util/Map/get(java.lang.Object)
org/eclipse/aether/util/graph/transformer/ConflictResolver/transformGraph(org.eclipse.aether.graph.DependencyNode,org.eclipse.aether.collection.DependencyGraphTransformationContext)#java/util/Collection/isEmpty()
org/eclipse/aether/util/graph/transformer/ConflictResolver/transformGraph(org.eclipse.aether.graph.DependencyNode,org.eclipse.aether.collection.DependencyGraphTransformationContext)#java/util/List/size()
org/eclipse/aether/util/graph/transformer/ConflictResolver/transformGraph(org.eclipse.aether.graph.DependencyNode,org.eclipse.aether.collection.DependencyGraphTransformationContext)#java/util/Iterator/next()
org/eclipse/aether/util/graph/transformer/ConflictResolver/transformGraph(org.eclipse.aether.graph.DependencyNode,org.eclipse.aether.collection.DependencyGraphTransformationContext)#java/util/HashMap/HashMap()
org/eclipse/aether/util/graph/transformer/ConflictResolver/transformGraph(org.eclipse.aether.graph.DependencyNode,org.eclipse.aether.collection.DependencyGraphTransformationContext)#org/eclipse/aether/graph/Dependency/isOptional()
org/eclipse/aether/util/graph/transformer/ConflictResolver/transformGraph(org.eclipse.aether.graph.DependencyNode,org.eclipse.aether.collection.DependencyGraphTransformationContext)#org/eclipse/aether/util/graph/transformer/ConflictResolver$OptionalitySelector/selectOptionality(org.eclipse.aether.util.graph.transformer.ConflictResolver$ConflictContext)
org/eclipse/aether/util/graph/transformer/ConflictResolver/transformGraph(org.eclipse.aether.graph.DependencyNode,org.eclipse.aether.collection.DependencyGraphTransformationContext)#org/eclipse/aether/graph/DependencyNode/setScope(java.lang.String)
org/eclipse/aether/util/graph/transformer/ConflictResolver/transformGraph(org.eclipse.aether.graph.DependencyNode,org.eclipse.aether.collection.DependencyGraphTransformationContext)#java/lang/Integer/valueOf(int)
org/eclipse/aether/util/graph/transformer/ConflictResolver/transformGraph(org.eclipse.aether.graph.DependencyNode,org.eclipse.aether.collection.DependencyGraphTransformationContext)#org/eclipse/aether/util/graph/transformer/ConflictResolver$State/winner()
org/eclipse/aether/util/graph/transformer/ConflictResolver/transformGraph(org.eclipse.aether.graph.DependencyNode,org.eclipse.aether.collection.DependencyGraphTransformationContext)#java/lang/StringBuilder/append(java.lang.Object)
org/eclipse/aether/util/graph/transformer/ConflictResolver/transformGraph(org.eclipse.aether.graph.DependencyNode,org.eclipse.aether.collection.DependencyGraphTransformationContext)#java/lang/System/currentTimeMillis()
org/eclipse/aether/util/graph/transformer/ConflictResolver/transformGraph(org.eclipse.aether.graph.DependencyNode,org.eclipse.aether.collection.DependencyGraphTransformationContext)#java/util/List/iterator()
org/eclipse/aether/util/graph/transformer/ConflictResolver/transformGraph(org.eclipse.aether.graph.DependencyNode,org.eclipse.aether.collection.DependencyGraphTransformationContext)#java/util/Collection/iterator()
org/eclipse/aether/util/graph/transformer/ConflictResolver/transformGraph(org.eclipse.aether.graph.DependencyNode,org.eclipse.aether.collection.DependencyGraphTransformationContext)#java/util/HashSet/HashSet()
org/eclipse/aether/util/graph/transformer/ConflictResolver/transformGraph(org.eclipse.aether.graph.DependencyNode,org.eclipse.aether.collection.DependencyGraphTransformationContext)#org/eclipse/aether/graph/DependencyNode/setData(java.lang.Object,java.lang.Object)
org/eclipse/aether/util/graph/transformer/ConflictResolver/gatherConflictItems(org.eclipse.aether.graph.DependencyNode,org.eclipse.aether.util.graph.transformer.ConflictResolver$State)#org/eclipse/aether/util/graph/transformer/ConflictResolver$State/loser(org.eclipse.aether.graph.DependencyNode,java.lang.Object)
org/eclipse/aether/util/graph/transformer/ConflictResolver/gatherConflictItems(org.eclipse.aether.graph.DependencyNode,org.eclipse.aether.util.graph.transformer.ConflictResolver$State)#java/util/Iterator/remove()
org/eclipse/aether/util/graph/transformer/ConflictResolver/gatherConflictItems(org.eclipse.aether.graph.DependencyNode,org.eclipse.aether.util.graph.transformer.ConflictResolver$State)#org/eclipse/aether/util/graph/transformer/ConflictResolver$State/add(org.eclipse.aether.graph.DependencyNode)
org/eclipse/aether/util/graph/transformer/ConflictResolver/gatherConflictItems(org.eclipse.aether.graph.DependencyNode,org.eclipse.aether.util.graph.transformer.ConflictResolver$State)#java/lang/Object/equals(java.lang.Object)
org/eclipse/aether/util/graph/transformer/ConflictResolver/gatherConflictItems(org.eclipse.aether.graph.DependencyNode,org.eclipse.aether.util.graph.transformer.ConflictResolver$State)#java/util/Iterator/hasNext()
org/eclipse/aether/util/graph/transformer/ConflictResolver/gatherConflictItems(org.eclipse.aether.graph.DependencyNode,org.eclipse.aether.util.graph.transformer.ConflictResolver$State)#org/eclipse/aether/graph/DependencyNode/getChildren()
org/eclipse/aether/util/graph/transformer/ConflictResolver/gatherConflictItems(org.eclipse.aether.graph.DependencyNode,org.eclipse.aether.util.graph.transformer.ConflictResolver$State)#java/util/Map/get(java.lang.Object)
org/eclipse/aether/util/graph/transformer/ConflictResolver/gatherConflictItems(org.eclipse.aether.graph.DependencyNode,org.eclipse.aether.util.graph.transformer.ConflictResolver$State)#java/util/Iterator/next()
org/eclipse/aether/util/graph/transformer/ConflictResolver/gatherConflictItems(org.eclipse.aether.graph.DependencyNode,org.eclipse.aether.util.graph.transformer.ConflictResolver$State)#org/eclipse/aether/util/graph/transformer/ConflictResolver$State/push(org.eclipse.aether.graph.DependencyNode,java.lang.Object)
org/eclipse/aether/util/graph/transformer/ConflictResolver/gatherConflictItems(org.eclipse.aether.graph.DependencyNode,org.eclipse.aether.util.graph.transformer.ConflictResolver$State)#java/util/List/iterator()
org/eclipse/aether/util/graph/transformer/ConflictResolver/gatherConflictItems(org.eclipse.aether.graph.DependencyNode,org.eclipse.aether.util.graph.transformer.ConflictResolver$State)#org/eclipse/aether/util/graph/transformer/ConflictResolver$State/pop()
org/eclipse/aether/util/graph/transformer/ConflictResolver/removeLosers(org.eclipse.aether.util.graph.transformer.ConflictResolver$State)#java/util/ListIterator/remove()
org/eclipse/aether/util/graph/transformer/ConflictResolver/removeLosers(org.eclipse.aether.util.graph.transformer.ConflictResolver$State)#java/util/Collections/emptyList()
org/eclipse/aether/util/graph/transformer/ConflictResolver/removeLosers(org.eclipse.aether.util.graph.transformer.ConflictResolver$State)#org/eclipse/aether/graph/DependencyNode/setScope(java.lang.String)
org/eclipse/aether/util/graph/transformer/ConflictResolver/removeLosers(org.eclipse.aether.util.graph.transformer.ConflictResolver$State)#java/util/ListIterator/next()
org/eclipse/aether/util/graph/transformer/ConflictResolver/removeLosers(org.eclipse.aether.util.graph.transformer.ConflictResolver$State)#org/eclipse/aether/graph/DependencyNode/getDependency()
org/eclipse/aether/util/graph/transformer/ConflictResolver/removeLosers(org.eclipse.aether.util.graph.transformer.ConflictResolver$State)#org/eclipse/aether/graph/DependencyNode/setData(java.lang.Object,java.lang.Object)
org/eclipse/aether/util/graph/transformer/ConflictResolver/removeLosers(org.eclipse.aether.util.graph.transformer.ConflictResolver$State)#org/eclipse/aether/graph/Dependency/getScope()
org/eclipse/aether/util/graph/transformer/ConflictResolver/removeLosers(org.eclipse.aether.util.graph.transformer.ConflictResolver$State)#java/util/ListIterator/hasNext()
org/eclipse/aether/util/graph/transformer/ConflictResolver/removeLosers(org.eclipse.aether.util.graph.transformer.ConflictResolver$State)#java/util/Iterator/hasNext()
org/eclipse/aether/util/graph/transformer/ConflictResolver/removeLosers(org.eclipse.aether.util.graph.transformer.ConflictResolver$State)#org/eclipse/aether/util/graph/transformer/ConflictResolver$ConflictItem/getScopes()
org/eclipse/aether/util/graph/transformer/ConflictResolver/removeLosers(org.eclipse.aether.util.graph.transformer.ConflictResolver$State)#java/util/ListIterator/set(java.lang.Object)
org/eclipse/aether/util/graph/transformer/ConflictResolver/removeLosers(org.eclipse.aether.util.graph.transformer.ConflictResolver$State)#java/util/Iterator/next()
org/eclipse/aether/util/graph/transformer/ConflictResolver/removeLosers(org.eclipse.aether.util.graph.transformer.ConflictResolver$State)#org/eclipse/aether/graph/Dependency/isOptional()
org/eclipse/aether/util/graph/transformer/ConflictResolver/removeLosers(org.eclipse.aether.util.graph.transformer.ConflictResolver$State)#java/lang/Boolean/valueOf(boolean)
org/eclipse/aether/util/graph/transformer/ConflictResolver/removeLosers(org.eclipse.aether.util.graph.transformer.ConflictResolver$State)#org/eclipse/aether/graph/DependencyNode/setChildren(java.util.List)
org/eclipse/aether/util/graph/transformer/ConflictResolver/removeLosers(org.eclipse.aether.util.graph.transformer.ConflictResolver$State)#org/eclipse/aether/graph/DefaultDependencyNode/DefaultDependencyNode(org.eclipse.aether.graph.DependencyNode)
org/eclipse/aether/util/graph/transformer/ConflictResolver/removeLosers(org.eclipse.aether.util.graph.transformer.ConflictResolver$State)#java/util/List/listIterator()
org/eclipse/aether/util/graph/transformer/ConflictResolver/removeLosers(org.eclipse.aether.util.graph.transformer.ConflictResolver$State)#java/util/List/iterator()
org/eclipse/aether/util/graph/transformer/ConflictResolver/removeLosers(org.eclipse.aether.util.graph.transformer.ConflictResolver$State)#java/util/Collection/iterator()
org/eclipse/aether/util/graph/transformer/NearestVersionSelector/selectVersion(org.eclipse.aether.util.graph.transformer.ConflictResolver$ConflictContext)#org/eclipse/aether/version/VersionConstraint/containsVersion(org.eclipse.aether.version.Version)
org/eclipse/aether/util/graph/transformer/NearestVersionSelector/selectVersion(org.eclipse.aether.util.graph.transformer.ConflictResolver$ConflictContext)#org/eclipse/aether/graph/DependencyNode/getVersionConstraint()
org/eclipse/aether/util/graph/transformer/NearestVersionSelector/selectVersion(org.eclipse.aether.util.graph.transformer.ConflictResolver$ConflictContext)#org/eclipse/aether/util/graph/transformer/ConflictResolver$ConflictItem/getNode()
org/eclipse/aether/util/graph/transformer/NearestVersionSelector/selectVersion(org.eclipse.aether.util.graph.transformer.ConflictResolver$ConflictContext)#org/eclipse/aether/version/VersionConstraint/getRange()
org/eclipse/aether/util/graph/transformer/NearestVersionSelector/selectVersion(org.eclipse.aether.util.graph.transformer.ConflictResolver$ConflictContext)#org/eclipse/aether/util/graph/transformer/NearestVersionSelector$ConflictGroup/ConflictGroup()
org/eclipse/aether/util/graph/transformer/NearestVersionSelector/selectVersion(org.eclipse.aether.util.graph.transformer.ConflictResolver$ConflictContext)#java/util/Iterator/next()
org/eclipse/aether/util/graph/transformer/NearestVersionSelector/selectVersion(org.eclipse.aether.util.graph.transformer.ConflictResolver$ConflictContext)#org/eclipse/aether/util/graph/transformer/ConflictResolver$ConflictContext/setWinner(org.eclipse.aether.util.graph.transformer.ConflictResolver$ConflictItem)
org/eclipse/aether/util/graph/transformer/NearestVersionSelector/selectVersion(org.eclipse.aether.util.graph.transformer.ConflictResolver$ConflictContext)#java/util/Collection/iterator()
org/eclipse/aether/util/graph/transformer/NearestVersionSelector/selectVersion(org.eclipse.aether.util.graph.transformer.ConflictResolver$ConflictContext)#java/util/Iterator/hasNext()
org/eclipse/aether/util/graph/transformer/NearestVersionSelector/selectVersion(org.eclipse.aether.util.graph.transformer.ConflictResolver$ConflictContext)#org/eclipse/aether/graph/DependencyNode/getVersion()
org/eclipse/aether/util/graph/transformer/NearestVersionSelector/selectVersion(org.eclipse.aether.util.graph.transformer.ConflictResolver$ConflictContext)#org/eclipse/aether/util/graph/transformer/ConflictResolver$ConflictContext/getItems()
org/eclipse/aether/util/graph/transformer/NearestVersionSelector/selectVersion(org.eclipse.aether.util.graph.transformer.ConflictResolver$ConflictContext)#java/util/Collection/add(java.lang.Object)
org/eclipse/aether/util/graph/transformer/JavaScopeSelector/chooseEffectiveScope(java.util.Collection)#org/eclipse/aether/graph/Dependency/getScope()
org/eclipse/aether/util/graph/transformer/JavaScopeSelector/chooseEffectiveScope(java.util.Collection)#java/util/Set/addAll(java.util.Collection)
org/eclipse/aether/util/graph/transformer/JavaScopeSelector/chooseEffectiveScope(java.util.Collection)#java/util/Iterator/next()
org/eclipse/aether/util/graph/transformer/JavaScopeSelector/chooseEffectiveScope(java.util.Collection)#java/util/HashSet/HashSet()
org/eclipse/aether/util/graph/transformer/JavaScopeSelector/chooseEffectiveScope(java.util.Collection)#java/util/Iterator/hasNext()
org/eclipse/aether/util/graph/transformer/JavaScopeSelector/chooseEffectiveScope(java.util.Collection)#org/eclipse/aether/util/graph/transformer/ConflictResolver$ConflictItem/getScopes()
org/eclipse/aether/util/graph/transformer/JavaScopeSelector/chooseEffectiveScope(java.util.Collection)#org/eclipse/aether/util/graph/transformer/ConflictResolver$ConflictItem/getDependency()
org/eclipse/aether/util/graph/transformer/JavaScopeSelector/chooseEffectiveScope(java.util.Collection)#org/eclipse/aether/util/graph/transformer/ConflictResolver$ConflictItem/getDepth()
org/eclipse/aether/util/graph/transformer/JavaScopeSelector/chooseEffectiveScope(java.util.Collection)#java/util/Collection/iterator()
org/eclipse/aether/util/graph/transformer/ConflictResolver/State/push(org.eclipse.aether.graph.DependencyNode,java.lang.Object)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/eclipse/aether/util/graph/transformer/ConflictResolver/State/push(org.eclipse.aether.graph.DependencyNode,java.lang.Object)#org/eclipse/aether/util/graph/transformer/ConflictResolver$NodeInfo/update(int,java.lang.String,boolean)
org/eclipse/aether/util/graph/transformer/ConflictResolver/State/push(org.eclipse.aether.graph.DependencyNode,java.lang.Object)#org/eclipse/aether/util/graph/transformer/ConflictResolver$State/deriveOptional(org.eclipse.aether.graph.DependencyNode,java.lang.Object)
org/eclipse/aether/util/graph/transformer/ConflictResolver/State/push(org.eclipse.aether.graph.DependencyNode,java.lang.Object)#org/eclipse/aether/graph/DependencyNode/getChildren()
org/eclipse/aether/util/graph/transformer/ConflictResolver/State/push(org.eclipse.aether.graph.DependencyNode,java.lang.Object)#java/lang/StringBuilder/append(java.lang.String)
org/eclipse/aether/util/graph/transformer/ConflictResolver/State/push(org.eclipse.aether.graph.DependencyNode,java.lang.Object)#java/util/List/size()
org/eclipse/aether/util/graph/transformer/ConflictResolver/State/push(org.eclipse.aether.graph.DependencyNode,java.lang.Object)#org/eclipse/aether/util/graph/transformer/ConflictResolver$State/deriveScope(org.eclipse.aether.graph.DependencyNode,java.lang.Object)
org/eclipse/aether/util/graph/transformer/ConflictResolver/State/push(org.eclipse.aether.graph.DependencyNode,java.lang.Object)#org/eclipse/aether/graph/DependencyNode/getData()
org/eclipse/aether/util/graph/transformer/ConflictResolver/State/push(org.eclipse.aether.graph.DependencyNode,java.lang.Object)#java/lang/StringBuilder/StringBuilder()
org/eclipse/aether/util/graph/transformer/ConflictResolver/State/push(org.eclipse.aether.graph.DependencyNode,java.lang.Object)#java/lang/Boolean/valueOf(boolean)
org/eclipse/aether/util/graph/transformer/ConflictResolver/State/push(org.eclipse.aether.graph.DependencyNode,java.lang.Object)#java/util/List/add(java.lang.Object)
org/eclipse/aether/util/graph/transformer/ConflictResolver/State/push(org.eclipse.aether.graph.DependencyNode,java.lang.Object)#java/util/List/get(int)
org/eclipse/aether/util/graph/transformer/ConflictResolver/State/push(org.eclipse.aether.graph.DependencyNode,java.lang.Object)#java/util/Collection/contains(java.lang.Object)
org/eclipse/aether/util/graph/transformer/ConflictResolver/State/push(org.eclipse.aether.graph.DependencyNode,java.lang.Object)#java/lang/StringBuilder/append(java.lang.Object)
org/eclipse/aether/util/graph/transformer/ConflictResolver/State/push(org.eclipse.aether.graph.DependencyNode,java.lang.Object)#java/util/Map/remove(java.lang.Object)
org/eclipse/aether/util/graph/transformer/ConflictResolver/State/push(org.eclipse.aether.graph.DependencyNode,java.lang.Object)#java/lang/StringBuilder/toString()
org/eclipse/aether/util/graph/transformer/ConflictResolver/State/push(org.eclipse.aether.graph.DependencyNode,java.lang.Object)#org/eclipse/aether/RepositoryException/RepositoryException(java.lang.String)
org/eclipse/aether/util/graph/transformer/ConflictResolver/State/push(org.eclipse.aether.graph.DependencyNode,java.lang.Object)#org/eclipse/aether/util/graph/transformer/ConflictResolver$State/depth()
org/eclipse/aether/util/graph/transformer/ConflictResolver/State/push(org.eclipse.aether.graph.DependencyNode,java.lang.Object)#java/util/Map/get(java.lang.Object)
org/eclipse/aether/util/graph/transformer/ConflictResolver/State/push(org.eclipse.aether.graph.DependencyNode,java.lang.Object)#org/eclipse/aether/util/graph/transformer/ConflictResolver$ConflictItem/addOptional(boolean)
org/eclipse/aether/util/graph/transformer/ConflictResolver/State/push(org.eclipse.aether.graph.DependencyNode,java.lang.Object)#org/eclipse/aether/util/graph/transformer/ConflictResolver$NodeInfo/NodeInfo(int,java.lang.String,boolean)
org/eclipse/aether/util/graph/transformer/ConflictResolver/State/push(org.eclipse.aether.graph.DependencyNode,java.lang.Object)#org/eclipse/aether/graph/DependencyNode/getDependency()
org/eclipse/aether/util/graph/transformer/ConflictResolver/State/push(org.eclipse.aether.graph.DependencyNode,java.lang.Object)#org/eclipse/aether/util/graph/transformer/ConflictResolver$ConflictItem/addScope(java.lang.String)
org/eclipse/aether/util/graph/manager/ClassicDependencyManager/manageDependency(org.eclipse.aether.graph.Dependency)#org/eclipse/aether/graph/Dependency/getScope()
org/eclipse/aether/util/graph/manager/ClassicDependencyManager/manageDependency(org.eclipse.aether.graph.Dependency)#java/util/HashMap/HashMap(java.util.Map)
org/eclipse/aether/util/graph/manager/ClassicDependencyManager/manageDependency(org.eclipse.aether.graph.Dependency)#org/eclipse/aether/graph/Dependency/getExclusions()
org/eclipse/aether/util/graph/manager/ClassicDependencyManager/manageDependency(org.eclipse.aether.graph.Dependency)#java/util/Collection/addAll(java.util.Collection)
org/eclipse/aether/util/graph/manager/ClassicDependencyManager/manageDependency(org.eclipse.aether.graph.Dependency)#org/eclipse/aether/collection/DependencyManagement/setScope(java.lang.String)
org/eclipse/aether/util/graph/manager/ClassicDependencyManager/manageDependency(org.eclipse.aether.graph.Dependency)#java/lang/String/equals(java.lang.Object)
org/eclipse/aether/util/graph/manager/ClassicDependencyManager/manageDependency(org.eclipse.aether.graph.Dependency)#org/eclipse/aether/collection/DependencyManagement/setVersion(java.lang.String)
org/eclipse/aether/util/graph/manager/ClassicDependencyManager/manageDependency(org.eclipse.aether.graph.Dependency)#org/eclipse/aether/collection/DependencyManagement/setExclusions(java.util.Collection)
org/eclipse/aether/util/graph/manager/ClassicDependencyManager/manageDependency(org.eclipse.aether.graph.Dependency)#org/eclipse/aether/collection/DependencyManagement/setOptional(java.lang.Boolean)
org/eclipse/aether/util/graph/manager/ClassicDependencyManager/manageDependency(org.eclipse.aether.graph.Dependency)#java/util/Map/remove(java.lang.Object)
org/eclipse/aether/util/graph/manager/ClassicDependencyManager/manageDependency(org.eclipse.aether.graph.Dependency)#org/eclipse/aether/collection/DependencyManagement/setProperties(java.util.Map)
org/eclipse/aether/util/graph/manager/ClassicDependencyManager/manageDependency(org.eclipse.aether.graph.Dependency)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/eclipse/aether/util/graph/manager/ClassicDependencyManager/manageDependency(org.eclipse.aether.graph.Dependency)#java/util/LinkedHashSet/LinkedHashSet(java.util.Collection)
org/eclipse/aether/util/graph/manager/ClassicDependencyManager/manageDependency(org.eclipse.aether.graph.Dependency)#java/util/Map/get(java.lang.Object)
org/eclipse/aether/util/graph/manager/ClassicDependencyManager/manageDependency(org.eclipse.aether.graph.Dependency)#org/eclipse/aether/artifact/Artifact/getProperties()
org/eclipse/aether/util/graph/manager/ClassicDependencyManager/manageDependency(org.eclipse.aether.graph.Dependency)#org/eclipse/aether/artifact/Artifact/getProperty(java.lang.String,java.lang.String)
org/eclipse/aether/util/graph/manager/ClassicDependencyManager/manageDependency(org.eclipse.aether.graph.Dependency)#org/eclipse/aether/graph/Dependency/getArtifact()
org/eclipse/aether/util/graph/manager/ClassicDependencyManager/manageDependency(org.eclipse.aether.graph.Dependency)#org/eclipse/aether/collection/DependencyManagement/DependencyManagement()
org/eclipse/aether/util/graph/manager/ClassicDependencyManager/deriveChildManager(org.eclipse.aether.collection.DependencyCollectionContext)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/eclipse/aether/util/graph/manager/ClassicDependencyManager/deriveChildManager(org.eclipse.aether.collection.DependencyCollectionContext)#org/eclipse/aether/graph/Dependency/getScope()
org/eclipse/aether/util/graph/manager/ClassicDependencyManager/deriveChildManager(org.eclipse.aether.collection.DependencyCollectionContext)#java/util/HashMap/HashMap(java.util.Map)
org/eclipse/aether/util/graph/manager/ClassicDependencyManager/deriveChildManager(org.eclipse.aether.collection.DependencyCollectionContext)#java/util/LinkedHashSet/LinkedHashSet()
org/eclipse/aether/util/graph/manager/ClassicDependencyManager/deriveChildManager(org.eclipse.aether.collection.DependencyCollectionContext)#org/eclipse/aether/graph/Dependency/getExclusions()
org/eclipse/aether/util/graph/manager/ClassicDependencyManager/deriveChildManager(org.eclipse.aether.collection.DependencyCollectionContext)#java/util/Iterator/next()
org/eclipse/aether/util/graph/manager/ClassicDependencyManager/deriveChildManager(org.eclipse.aether.collection.DependencyCollectionContext)#java/util/Map/containsKey(java.lang.Object)
org/eclipse/aether/util/graph/manager/ClassicDependencyManager/deriveChildManager(org.eclipse.aether.collection.DependencyCollectionContext)#org/eclipse/aether/graph/Dependency/getArtifact()
org/eclipse/aether/util/graph/manager/ClassicDependencyManager/deriveChildManager(org.eclipse.aether.collection.DependencyCollectionContext)#java/util/List/iterator()
org/eclipse/aether/util/graph/manager/ClassicDependencyManager/deriveChildManager(org.eclipse.aether.collection.DependencyCollectionContext)#java/util/Iterator/hasNext()
org/eclipse/aether/util/graph/manager/ClassicDependencyManager/deriveChildManager(org.eclipse.aether.collection.DependencyCollectionContext)#org/eclipse/aether/graph/Dependency/getOptional()
org/eclipse/aether/util/graph/manager/ClassicDependencyManager/deriveChildManager(org.eclipse.aether.collection.DependencyCollectionContext)#java/lang/String/length()
org/eclipse/aether/util/graph/manager/ClassicDependencyManager/deriveChildManager(org.eclipse.aether.collection.DependencyCollectionContext)#org/eclipse/aether/artifact/Artifact/getProperty(java.lang.String,java.lang.String)
org/eclipse/aether/util/graph/manager/ClassicDependencyManager/deriveChildManager(org.eclipse.aether.collection.DependencyCollectionContext)#java/util/Map/get(java.lang.Object)
org/eclipse/aether/util/graph/manager/ClassicDependencyManager/deriveChildManager(org.eclipse.aether.collection.DependencyCollectionContext)#java/util/Collection/isEmpty()
org/eclipse/aether/util/graph/manager/ClassicDependencyManager/deriveChildManager(org.eclipse.aether.collection.DependencyCollectionContext)#java/util/Collection/addAll(java.util.Collection)
org/eclipse/aether/util/graph/manager/ClassicDependencyManager/deriveChildManager(org.eclipse.aether.collection.DependencyCollectionContext)#org/eclipse/aether/collection/DependencyCollectionContext/getManagedDependencies()
org/eclipse/aether/util/graph/manager/ClassicDependencyManager/deriveChildManager(org.eclipse.aether.collection.DependencyCollectionContext)#org/eclipse/aether/artifact/Artifact/getVersion()
org/eclipse/aether/util/filter/ExclusionsDependencyFilter/accept(org.eclipse.aether.graph.DependencyNode,java.util.List)#org/eclipse/aether/artifact/Artifact/getArtifactId()
org/eclipse/aether/util/filter/ExclusionsDependencyFilter/accept(org.eclipse.aether.graph.DependencyNode,java.util.List)#java/lang/StringBuilder/append(java.lang.String)
org/eclipse/aether/util/filter/ExclusionsDependencyFilter/accept(org.eclipse.aether.graph.DependencyNode,java.util.List)#java/lang/StringBuilder/StringBuilder()
org/eclipse/aether/util/filter/ExclusionsDependencyFilter/accept(org.eclipse.aether.graph.DependencyNode,java.util.List)#org/eclipse/aether/graph/Dependency/getArtifact()
org/eclipse/aether/util/filter/ExclusionsDependencyFilter/accept(org.eclipse.aether.graph.DependencyNode,java.util.List)#java/lang/StringBuilder/toString()
org/eclipse/aether/util/filter/ExclusionsDependencyFilter/accept(org.eclipse.aether.graph.DependencyNode,java.util.List)#org/eclipse/aether/graph/DependencyNode/getDependency()
org/eclipse/aether/util/filter/ExclusionsDependencyFilter/accept(org.eclipse.aether.graph.DependencyNode,java.util.List)#java/util/Set/contains(java.lang.Object)
org/eclipse/aether/util/filter/ExclusionsDependencyFilter/accept(org.eclipse.aether.graph.DependencyNode,java.util.List)#org/eclipse/aether/artifact/Artifact/getGroupId()
org/eclipse/aether/util/filter/ExclusionsDependencyFilter/accept(org.eclipse.aether.graph.DependencyNode,java.util.List)#java/lang/StringBuilder/append(char)
org/eclipse/aether/util/filter/DependencyFilterUtils/classpathFilter(java.util.Collection)#java/lang/String/split(java.lang.String)
org/eclipse/aether/util/filter/DependencyFilterUtils/classpathFilter(java.util.Collection)#java/util/Iterator/hasNext()
org/eclipse/aether/util/filter/DependencyFilterUtils/classpathFilter(java.util.Collection)#java/lang/String/length()
org/eclipse/aether/util/filter/DependencyFilterUtils/classpathFilter(java.util.Collection)#java/util/Collections/addAll(java.util.Collection,java.lang.Object[])
org/eclipse/aether/util/filter/DependencyFilterUtils/classpathFilter(java.util.Collection)#java/util/Iterator/next()
org/eclipse/aether/util/filter/DependencyFilterUtils/classpathFilter(java.util.Collection)#java/lang/String/equals(java.lang.Object)
org/eclipse/aether/util/filter/DependencyFilterUtils/classpathFilter(java.util.Collection)#java/util/Collection/add(java.lang.Object)
org/eclipse/aether/util/filter/DependencyFilterUtils/classpathFilter(java.util.Collection)#java/util/Collection/iterator()
org/eclipse/aether/util/filter/DependencyFilterUtils/classpathFilter(java.util.Collection)#java/util/HashSet/HashSet()
org/eclipse/aether/util/filter/DependencyFilterUtils/classpathFilter(java.util.Collection)#java/util/Collection/removeAll(java.util.Collection)
org/eclipse/aether/util/filter/DependencyFilterUtils/classpathFilter(java.util.Collection)#java/lang/String/trim()
org/eclipse/aether/util/graph/visitor/AbstractDepthFirstNodeListGenerator/getDependencies(boolean)#java/util/ArrayList/ArrayList(int)
org/eclipse/aether/util/graph/visitor/AbstractDepthFirstNodeListGenerator/getDependencies(boolean)#java/util/Iterator/hasNext()
org/eclipse/aether/util/graph/visitor/AbstractDepthFirstNodeListGenerator/getDependencies(boolean)#java/util/List/size()
org/eclipse/aether/util/graph/visitor/AbstractDepthFirstNodeListGenerator/getDependencies(boolean)#java/util/Iterator/next()
org/eclipse/aether/util/graph/visitor/AbstractDepthFirstNodeListGenerator/getDependencies(boolean)#org/eclipse/aether/graph/DependencyNode/getDependency()
org/eclipse/aether/util/graph/visitor/AbstractDepthFirstNodeListGenerator/getDependencies(boolean)#org/eclipse/aether/artifact/Artifact/getFile()
org/eclipse/aether/util/graph/visitor/AbstractDepthFirstNodeListGenerator/getDependencies(boolean)#java/util/List/add(java.lang.Object)
org/eclipse/aether/util/graph/visitor/AbstractDepthFirstNodeListGenerator/getDependencies(boolean)#java/util/List/iterator()
org/eclipse/aether/util/graph/visitor/AbstractDepthFirstNodeListGenerator/getDependencies(boolean)#org/eclipse/aether/graph/Dependency/getArtifact()
org/eclipse/aether/util/graph/visitor/AbstractDepthFirstNodeListGenerator/getArtifacts(boolean)#java/util/ArrayList/ArrayList(int)
org/eclipse/aether/util/graph/visitor/AbstractDepthFirstNodeListGenerator/getArtifacts(boolean)#java/util/Iterator/hasNext()
org/eclipse/aether/util/graph/visitor/AbstractDepthFirstNodeListGenerator/getArtifacts(boolean)#java/util/List/size()
org/eclipse/aether/util/graph/visitor/AbstractDepthFirstNodeListGenerator/getArtifacts(boolean)#java/util/Iterator/next()
org/eclipse/aether/util/graph/visitor/AbstractDepthFirstNodeListGenerator/getArtifacts(boolean)#org/eclipse/aether/graph/DependencyNode/getDependency()
org/eclipse/aether/util/graph/visitor/AbstractDepthFirstNodeListGenerator/getArtifacts(boolean)#org/eclipse/aether/artifact/Artifact/getFile()
org/eclipse/aether/util/graph/visitor/AbstractDepthFirstNodeListGenerator/getArtifacts(boolean)#java/util/List/add(java.lang.Object)
org/eclipse/aether/util/graph/visitor/AbstractDepthFirstNodeListGenerator/getArtifacts(boolean)#java/util/List/iterator()
org/eclipse/aether/util/graph/visitor/AbstractDepthFirstNodeListGenerator/getArtifacts(boolean)#org/eclipse/aether/graph/Dependency/getArtifact()
org/eclipse/aether/util/graph/visitor/AbstractDepthFirstNodeListGenerator/getFiles()#java/util/ArrayList/ArrayList(int)
org/eclipse/aether/util/graph/visitor/AbstractDepthFirstNodeListGenerator/getFiles()#java/util/Iterator/hasNext()
org/eclipse/aether/util/graph/visitor/AbstractDepthFirstNodeListGenerator/getFiles()#java/util/List/size()
org/eclipse/aether/util/graph/visitor/AbstractDepthFirstNodeListGenerator/getFiles()#java/util/Iterator/next()
org/eclipse/aether/util/graph/visitor/AbstractDepthFirstNodeListGenerator/getFiles()#org/eclipse/aether/graph/DependencyNode/getDependency()
org/eclipse/aether/util/graph/visitor/AbstractDepthFirstNodeListGenerator/getFiles()#org/eclipse/aether/artifact/Artifact/getFile()
org/eclipse/aether/util/graph/visitor/AbstractDepthFirstNodeListGenerator/getFiles()#java/util/List/add(java.lang.Object)
org/eclipse/aether/util/graph/visitor/AbstractDepthFirstNodeListGenerator/getFiles()#java/util/List/iterator()
org/eclipse/aether/util/graph/visitor/AbstractDepthFirstNodeListGenerator/getFiles()#org/eclipse/aether/graph/Dependency/getArtifact()
org/eclipse/aether/util/graph/visitor/AbstractDepthFirstNodeListGenerator/getClassPath()#java/util/Iterator/hasNext()
org/eclipse/aether/util/graph/visitor/AbstractDepthFirstNodeListGenerator/getClassPath()#java/lang/StringBuilder/append(java.lang.String)
org/eclipse/aether/util/graph/visitor/AbstractDepthFirstNodeListGenerator/getClassPath()#java/util/Iterator/next()
org/eclipse/aether/util/graph/visitor/AbstractDepthFirstNodeListGenerator/getClassPath()#java/lang/StringBuilder/StringBuilder(int)
org/eclipse/aether/util/graph/visitor/AbstractDepthFirstNodeListGenerator/getClassPath()#org/eclipse/aether/graph/DependencyNode/getDependency()
org/eclipse/aether/util/graph/visitor/AbstractDepthFirstNodeListGenerator/getClassPath()#java/lang/StringBuilder/append(char)
org/eclipse/aether/util/graph/visitor/AbstractDepthFirstNodeListGenerator/getClassPath()#java/util/List/iterator()
org/eclipse/aether/util/graph/visitor/AbstractDepthFirstNodeListGenerator/getClassPath()#java/lang/StringBuilder/toString()
org/eclipse/aether/util/graph/visitor/AbstractDepthFirstNodeListGenerator/getClassPath()#java/io/File/getAbsolutePath()
org/eclipse/aether/util/graph/visitor/AbstractDepthFirstNodeListGenerator/getClassPath()#org/eclipse/aether/artifact/Artifact/getFile()
org/eclipse/aether/util/graph/visitor/AbstractDepthFirstNodeListGenerator/getClassPath()#org/eclipse/aether/graph/Dependency/getArtifact()
org/eclipse/aether/util/graph/transformer/JavaDependencyContextRefiner/transformGraph(org.eclipse.aether.graph.DependencyNode,org.eclipse.aether.collection.DependencyGraphTransformationContext)#java/util/Iterator/hasNext()
org/eclipse/aether/util/graph/transformer/JavaDependencyContextRefiner/transformGraph(org.eclipse.aether.graph.DependencyNode,org.eclipse.aether.collection.DependencyGraphTransformationContext)#org/eclipse/aether/graph/DependencyNode/getChildren()
org/eclipse/aether/util/graph/transformer/JavaDependencyContextRefiner/transformGraph(org.eclipse.aether.graph.DependencyNode,org.eclipse.aether.collection.DependencyGraphTransformationContext)#org/eclipse/aether/graph/DependencyNode/setRequestContext(java.lang.String)
org/eclipse/aether/util/graph/transformer/JavaDependencyContextRefiner/transformGraph(org.eclipse.aether.graph.DependencyNode,org.eclipse.aether.collection.DependencyGraphTransformationContext)#java/util/Iterator/next()
org/eclipse/aether/util/graph/transformer/JavaDependencyContextRefiner/transformGraph(org.eclipse.aether.graph.DependencyNode,org.eclipse.aether.collection.DependencyGraphTransformationContext)#java/lang/String/equals(java.lang.Object)
org/eclipse/aether/util/graph/transformer/JavaDependencyContextRefiner/transformGraph(org.eclipse.aether.graph.DependencyNode,org.eclipse.aether.collection.DependencyGraphTransformationContext)#java/lang/StringBuilder/StringBuilder()
org/eclipse/aether/util/graph/transformer/JavaDependencyContextRefiner/transformGraph(org.eclipse.aether.graph.DependencyNode,org.eclipse.aether.collection.DependencyGraphTransformationContext)#java/lang/StringBuilder/append(char)
org/eclipse/aether/util/graph/transformer/JavaDependencyContextRefiner/transformGraph(org.eclipse.aether.graph.DependencyNode,org.eclipse.aether.collection.DependencyGraphTransformationContext)#java/lang/StringBuilder/toString()
org/eclipse/aether/util/graph/transformer/JavaDependencyContextRefiner/transformGraph(org.eclipse.aether.graph.DependencyNode,org.eclipse.aether.collection.DependencyGraphTransformationContext)#java/lang/StringBuilder/append(java.lang.String)
org/eclipse/aether/util/graph/transformer/JavaDependencyContextRefiner/transformGraph(org.eclipse.aether.graph.DependencyNode,org.eclipse.aether.collection.DependencyGraphTransformationContext)#org/eclipse/aether/graph/DependencyNode/getRequestContext()
org/eclipse/aether/util/graph/transformer/JavaDependencyContextRefiner/transformGraph(org.eclipse.aether.graph.DependencyNode,org.eclipse.aether.collection.DependencyGraphTransformationContext)#java/util/List/iterator()
org/eclipse/aether/util/repository/DefaultMirrorSelector/getMirror(org.eclipse.aether.repository.RemoteRepository)#org/eclipse/aether/repository/RemoteRepository$Builder/setContentType(java.lang.String)
org/eclipse/aether/util/repository/DefaultMirrorSelector/getMirror(org.eclipse.aether.repository.RemoteRepository)#org/eclipse/aether/repository/RemoteRepository$Builder/setReleasePolicy(org.eclipse.aether.repository.RepositoryPolicy)
org/eclipse/aether/util/repository/DefaultMirrorSelector/getMirror(org.eclipse.aether.repository.RemoteRepository)#org/eclipse/aether/repository/RemoteRepository$Builder/setRepositoryManager(boolean)
org/eclipse/aether/util/repository/DefaultMirrorSelector/getMirror(org.eclipse.aether.repository.RemoteRepository)#java/lang/String/length()
org/eclipse/aether/util/repository/DefaultMirrorSelector/getMirror(org.eclipse.aether.repository.RemoteRepository)#org/eclipse/aether/repository/RemoteRepository/getPolicy(boolean)
org/eclipse/aether/util/repository/DefaultMirrorSelector/getMirror(org.eclipse.aether.repository.RemoteRepository)#org/eclipse/aether/repository/RemoteRepository$Builder/build()
org/eclipse/aether/util/repository/DefaultMirrorSelector/getMirror(org.eclipse.aether.repository.RemoteRepository)#org/eclipse/aether/repository/RemoteRepository$Builder/setSnapshotPolicy(org.eclipse.aether.repository.RepositoryPolicy)
org/eclipse/aether/util/repository/DefaultMirrorSelector/getMirror(org.eclipse.aether.repository.RemoteRepository)#java/util/Collections/singletonList(java.lang.Object)
org/eclipse/aether/util/repository/DefaultMirrorSelector/getMirror(org.eclipse.aether.repository.RemoteRepository)#org/eclipse/aether/repository/RemoteRepository$Builder/Builder(java.lang.String,java.lang.String,java.lang.String)
org/eclipse/aether/util/repository/DefaultMirrorSelector/getMirror(org.eclipse.aether.repository.RemoteRepository)#org/eclipse/aether/repository/RemoteRepository$Builder/setMirroredRepositories(java.util.List)
org/eclipse/aether/util/repository/DefaultMirrorSelector/getMirror(org.eclipse.aether.repository.RemoteRepository)#org/eclipse/aether/repository/RemoteRepository/getContentType()
org/eclipse/aether/util/version/GenericVersionScheme/parseVersionConstraint(java.lang.String)#java/util/ArrayList/ArrayList()
org/eclipse/aether/util/version/GenericVersionScheme/parseVersionConstraint(java.lang.String)#org/eclipse/aether/version/InvalidVersionSpecificationException/InvalidVersionSpecificationException(java.lang.String,java.lang.String)
org/eclipse/aether/util/version/GenericVersionScheme/parseVersionConstraint(java.lang.String)#java/lang/String/substring(int,int)
org/eclipse/aether/util/version/GenericVersionScheme/parseVersionConstraint(java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/eclipse/aether/util/version/GenericVersionScheme/parseVersionConstraint(java.lang.String)#java/lang/String/substring(int)
org/eclipse/aether/util/version/GenericVersionScheme/parseVersionConstraint(java.lang.String)#java/util/Collection/add(java.lang.Object)
org/eclipse/aether/util/version/GenericVersionScheme/parseVersionConstraint(java.lang.String)#java/lang/String/indexOf(int)
org/eclipse/aether/util/version/GenericVersionScheme/parseVersionConstraint(java.lang.String)#java/lang/StringBuilder/toString()
org/eclipse/aether/util/version/GenericVersionScheme/parseVersionConstraint(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/eclipse/aether/util/version/GenericVersionScheme/parseVersionConstraint(java.lang.String)#java/lang/String/trim()
org/eclipse/aether/util/version/GenericVersionScheme/parseVersionConstraint(java.lang.String)#java/lang/String/length()
org/eclipse/aether/util/version/GenericVersionScheme/parseVersionConstraint(java.lang.String)#java/util/Collection/isEmpty()
org/eclipse/aether/util/version/GenericVersionScheme/parseVersionConstraint(java.lang.String)#java/lang/String/startsWith(java.lang.String)
org/eclipse/aether/util/version/GenericVersion/Item/compareTo(org.eclipse.aether.util.version.GenericVersion$Item)#java/lang/Integer/intValue()
org/eclipse/aether/util/version/GenericVersion/Item/compareTo(org.eclipse.aether.util.version.GenericVersion$Item)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/eclipse/aether/util/version/GenericVersion/Item/compareTo(org.eclipse.aether.util.version.GenericVersion$Item)#java/lang/Integer/compareTo(java.lang.Integer)
org/eclipse/aether/util/version/GenericVersion/Item/compareTo(org.eclipse.aether.util.version.GenericVersion$Item)#java/lang/StringBuilder/append(java.lang.String)
org/eclipse/aether/util/version/GenericVersion/Item/compareTo(org.eclipse.aether.util.version.GenericVersion$Item)#java/lang/StringBuilder/append(int)
org/eclipse/aether/util/version/GenericVersion/Item/compareTo(org.eclipse.aether.util.version.GenericVersion$Item)#java/math/BigInteger/compareTo(java.math.BigInteger)
org/eclipse/aether/util/version/GenericVersion/Item/compareTo(org.eclipse.aether.util.version.GenericVersion$Item)#java/lang/String/compareToIgnoreCase(java.lang.String)
org/eclipse/aether/util/version/GenericVersion/Item/compareTo(org.eclipse.aether.util.version.GenericVersion$Item)#java/lang/StringBuilder/StringBuilder()
org/eclipse/aether/util/version/GenericVersion/Item/compareTo(org.eclipse.aether.util.version.GenericVersion$Item)#java/lang/StringBuilder/toString()
org/eclipse/aether/util/version/GenericVersion/Tokenizer/toItem()#java/lang/IllegalStateException/IllegalStateException(java.lang.Throwable)
org/eclipse/aether/util/version/GenericVersion/Tokenizer/toItem()#java/lang/String/equalsIgnoreCase(java.lang.String)
org/eclipse/aether/util/version/GenericVersion/Tokenizer/toItem()#java/lang/String/charAt(int)
org/eclipse/aether/util/version/GenericVersion/Tokenizer/toItem()#org/eclipse/aether/util/version/GenericVersion$Item/Item(int,java.lang.Object)
org/eclipse/aether/util/version/GenericVersion/Tokenizer/toItem()#java/math/BigInteger/BigInteger(java.lang.String)
org/eclipse/aether/util/version/GenericVersion/Tokenizer/toItem()#java/lang/Integer/parseInt(java.lang.String)
org/eclipse/aether/util/version/GenericVersion/Tokenizer/toItem()#java/lang/Integer/valueOf(int)
org/eclipse/aether/util/version/GenericVersion/Tokenizer/toItem()#java/lang/String/toLowerCase(java.util.Locale)
org/eclipse/aether/util/version/GenericVersion/Tokenizer/toItem()#java/lang/String/length()
org/eclipse/aether/util/version/GenericVersion/Tokenizer/toItem()#java/util/Map/get(java.lang.Object)
org/eclipse/aether/util/repository/layout/MavenDefaultLayout/getPath(org.eclipse.aether.metadata.Metadata)#org/eclipse/aether/metadata/Metadata/getArtifactId()
org/eclipse/aether/util/repository/layout/MavenDefaultLayout/getPath(org.eclipse.aether.metadata.Metadata)#java/lang/StringBuilder/append(java.lang.String)
org/eclipse/aether/util/repository/layout/MavenDefaultLayout/getPath(org.eclipse.aether.metadata.Metadata)#java/lang/String/length()
org/eclipse/aether/util/repository/layout/MavenDefaultLayout/getPath(org.eclipse.aether.metadata.Metadata)#java/lang/StringBuilder/StringBuilder(int)
org/eclipse/aether/util/repository/layout/MavenDefaultLayout/getPath(org.eclipse.aether.metadata.Metadata)#org/eclipse/aether/metadata/Metadata/getType()
org/eclipse/aether/util/repository/layout/MavenDefaultLayout/getPath(org.eclipse.aether.metadata.Metadata)#org/eclipse/aether/metadata/Metadata/getVersion()
org/eclipse/aether/util/repository/layout/MavenDefaultLayout/getPath(org.eclipse.aether.metadata.Metadata)#java/lang/String/replace(char,char)
org/eclipse/aether/util/repository/layout/MavenDefaultLayout/getPath(org.eclipse.aether.metadata.Metadata)#java/lang/StringBuilder/toString()
org/eclipse/aether/util/repository/layout/MavenDefaultLayout/getPath(org.eclipse.aether.metadata.Metadata)#org/eclipse/aether/metadata/Metadata/getGroupId()
org/eclipse/aether/util/repository/layout/MavenDefaultLayout/getPath(org.eclipse.aether.metadata.Metadata)#java/lang/StringBuilder/append(char)
org/eclipse/aether/util/repository/layout/MavenDefaultLayout/getPath(org.eclipse.aether.artifact.Artifact)#org/eclipse/aether/artifact/Artifact/getBaseVersion()
org/eclipse/aether/util/repository/layout/MavenDefaultLayout/getPath(org.eclipse.aether.artifact.Artifact)#org/eclipse/aether/artifact/Artifact/getArtifactId()
org/eclipse/aether/util/repository/layout/MavenDefaultLayout/getPath(org.eclipse.aether.artifact.Artifact)#java/lang/StringBuilder/append(java.lang.String)
org/eclipse/aether/util/repository/layout/MavenDefaultLayout/getPath(org.eclipse.aether.artifact.Artifact)#java/lang/String/length()
org/eclipse/aether/util/repository/layout/MavenDefaultLayout/getPath(org.eclipse.aether.artifact.Artifact)#java/lang/StringBuilder/StringBuilder(int)
org/eclipse/aether/util/repository/layout/MavenDefaultLayout/getPath(org.eclipse.aether.artifact.Artifact)#org/eclipse/aether/artifact/Artifact/getVersion()
org/eclipse/aether/util/repository/layout/MavenDefaultLayout/getPath(org.eclipse.aether.artifact.Artifact)#java/lang/String/replace(char,char)
org/eclipse/aether/util/repository/layout/MavenDefaultLayout/getPath(org.eclipse.aether.artifact.Artifact)#org/eclipse/aether/artifact/Artifact/getClassifier()
org/eclipse/aether/util/repository/layout/MavenDefaultLayout/getPath(org.eclipse.aether.artifact.Artifact)#org/eclipse/aether/artifact/Artifact/getExtension()
org/eclipse/aether/util/repository/layout/MavenDefaultLayout/getPath(org.eclipse.aether.artifact.Artifact)#java/lang/StringBuilder/toString()
org/eclipse/aether/util/repository/layout/MavenDefaultLayout/getPath(org.eclipse.aether.artifact.Artifact)#org/eclipse/aether/artifact/Artifact/getGroupId()
org/eclipse/aether/util/repository/layout/MavenDefaultLayout/getPath(org.eclipse.aether.artifact.Artifact)#java/lang/StringBuilder/append(char)
org/eclipse/aether/util/repository/JreProxySelector/JreProxyAuthentication/fill(org.eclipse.aether.repository.AuthenticationContext,java.lang.String,java.util.Map)#org/eclipse/aether/repository/Proxy/getPort()
org/eclipse/aether/util/repository/JreProxySelector/JreProxyAuthentication/fill(org.eclipse.aether.repository.AuthenticationContext,java.lang.String,java.util.Map)#org/eclipse/aether/repository/RemoteRepository/getUrl()
org/eclipse/aether/util/repository/JreProxySelector/JreProxyAuthentication/fill(org.eclipse.aether.repository.AuthenticationContext,java.lang.String,java.util.Map)#org/eclipse/aether/repository/AuthenticationContext/put(java.lang.String,java.lang.Object)
org/eclipse/aether/util/repository/JreProxySelector/JreProxyAuthentication/fill(org.eclipse.aether.repository.AuthenticationContext,java.lang.String,java.util.Map)#java/lang/StringBuilder/append(java.lang.String)
org/eclipse/aether/util/repository/JreProxySelector/JreProxyAuthentication/fill(org.eclipse.aether.repository.AuthenticationContext,java.lang.String,java.util.Map)#java/net/URL/URL(java.lang.String)
org/eclipse/aether/util/repository/JreProxySelector/JreProxyAuthentication/fill(org.eclipse.aether.repository.AuthenticationContext,java.lang.String,java.util.Map)#java/net/PasswordAuthentication/getPassword()
org/eclipse/aether/util/repository/JreProxySelector/JreProxyAuthentication/fill(org.eclipse.aether.repository.AuthenticationContext,java.lang.String,java.util.Map)#java/net/Authenticator/requestPasswordAuthentication(java.lang.String,java.net.InetAddress,int,java.lang.String,java.lang.String,java.lang.String,java.net.URL,java.net.Authenticator$RequestorType)
org/eclipse/aether/util/repository/JreProxySelector/JreProxyAuthentication/fill(org.eclipse.aether.repository.AuthenticationContext,java.lang.String,java.util.Map)#java/lang/String/equals(java.lang.Object)
org/eclipse/aether/util/repository/JreProxySelector/JreProxyAuthentication/fill(org.eclipse.aether.repository.AuthenticationContext,java.lang.String,java.util.Map)#org/eclipse/aether/repository/AuthenticationContext/getRepository()
org/eclipse/aether/util/repository/JreProxySelector/JreProxyAuthentication/fill(org.eclipse.aether.repository.AuthenticationContext,java.lang.String,java.util.Map)#org/eclipse/aether/repository/AuthenticationContext/getProxy()
org/eclipse/aether/util/repository/JreProxySelector/JreProxyAuthentication/fill(org.eclipse.aether.repository.AuthenticationContext,java.lang.String,java.util.Map)#java/lang/StringBuilder/append(java.lang.Object)
org/eclipse/aether/util/repository/JreProxySelector/JreProxyAuthentication/fill(org.eclipse.aether.repository.AuthenticationContext,java.lang.String,java.util.Map)#java/lang/StringBuilder/toString()
org/eclipse/aether/util/repository/JreProxySelector/JreProxyAuthentication/fill(org.eclipse.aether.repository.AuthenticationContext,java.lang.String,java.util.Map)#java/net/PasswordAuthentication/getUserName()
org/eclipse/aether/util/repository/JreProxySelector/JreProxyAuthentication/fill(org.eclipse.aether.repository.AuthenticationContext,java.lang.String,java.util.Map)#org/eclipse/aether/repository/Proxy/getHost()
org/eclipse/aether/util/repository/JreProxySelector/JreProxyAuthentication/fill(org.eclipse.aether.repository.AuthenticationContext,java.lang.String,java.util.Map)#java/lang/System/getProperty(java.lang.String)
org/eclipse/aether/util/repository/JreProxySelector/JreProxyAuthentication/fill(org.eclipse.aether.repository.AuthenticationContext,java.lang.String,java.util.Map)#java/lang/StringBuilder/StringBuilder()
org/eclipse/aether/util/graph/transformer/ConflictMarker/analyze(org.eclipse.aether.graph.DependencyNode,java.util.Map,java.util.Map,int[])#java/util/Map/put(java.lang.Object,java.lang.Object)
org/eclipse/aether/util/graph/transformer/ConflictMarker/analyze(org.eclipse.aether.graph.DependencyNode,java.util.Map,java.util.Map,int[])#java/util/Iterator/hasNext()
org/eclipse/aether/util/graph/transformer/ConflictMarker/analyze(org.eclipse.aether.graph.DependencyNode,java.util.Map,java.util.Map,int[])#org/eclipse/aether/graph/DependencyNode/getChildren()
org/eclipse/aether/util/graph/transformer/ConflictMarker/analyze(org.eclipse.aether.graph.DependencyNode,java.util.Map,java.util.Map,int[])#org/eclipse/aether/util/graph/transformer/ConflictMarker$ConflictGroup/ConflictGroup(java.util.Set,int)
org/eclipse/aether/util/graph/transformer/ConflictMarker/analyze(org.eclipse.aether.graph.DependencyNode,java.util.Map,java.util.Map,int[])#java/util/Iterator/next()
org/eclipse/aether/util/graph/transformer/ConflictMarker/analyze(org.eclipse.aether.graph.DependencyNode,java.util.Map,java.util.Map,int[])#java/util/Set/iterator()
org/eclipse/aether/util/graph/transformer/ConflictMarker/analyze(org.eclipse.aether.graph.DependencyNode,java.util.Map,java.util.Map,int[])#java/util/List/iterator()
org/eclipse/aether/util/graph/transformer/ConflictMarker/analyze(org.eclipse.aether.graph.DependencyNode,java.util.Map,java.util.Map,int[])#java/util/Map/get(java.lang.Object)
org/eclipse/aether/util/graph/transformer/ConflictMarker/analyze(org.eclipse.aether.graph.DependencyNode,java.util.Map,java.util.Map,int[])#java/util/Set/isEmpty()
org/eclipse/aether/util/graph/transformer/ConflictMarker/mark(java.util.Collection,java.util.Map)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/eclipse/aether/util/graph/transformer/ConflictMarker/mark(java.util.Collection,java.util.Map)#java/util/Iterator/hasNext()
org/eclipse/aether/util/graph/transformer/ConflictMarker/mark(java.util.Collection,java.util.Map)#java/util/Map/get(java.lang.Object)
org/eclipse/aether/util/graph/transformer/ConflictMarker/mark(java.util.Collection,java.util.Map)#java/util/Collection/size()
org/eclipse/aether/util/graph/transformer/ConflictMarker/mark(java.util.Collection,java.util.Map)#java/util/Iterator/next()
org/eclipse/aether/util/graph/transformer/ConflictMarker/mark(java.util.Collection,java.util.Map)#java/util/IdentityHashMap/IdentityHashMap(int)
org/eclipse/aether/util/graph/transformer/ConflictMarker/mark(java.util.Collection,java.util.Map)#org/eclipse/aether/graph/DependencyNode/getDependency()
org/eclipse/aether/util/graph/transformer/ConflictMarker/mark(java.util.Collection,java.util.Map)#java/util/Collection/iterator()
org/eclipse/aether/util/graph/transformer/ConflictMarker/mark(java.util.Collection,java.util.Map)#java/lang/Integer/valueOf(int)
org/eclipse/aether/util/graph/transformer/ConflictMarker/mark(java.util.Collection,java.util.Map)#org/eclipse/aether/graph/Dependency/getArtifact()
org/eclipse/aether/util/graph/transformer/ConflictMarker/getKeys(org.eclipse.aether.graph.DependencyNode)#java/util/Iterator/hasNext()
org/eclipse/aether/util/graph/transformer/ConflictMarker/getKeys(org.eclipse.aether.graph.DependencyNode)#java/util/Collections/emptySet()
org/eclipse/aether/util/graph/transformer/ConflictMarker/getKeys(org.eclipse.aether.graph.DependencyNode)#java/util/Iterator/next()
org/eclipse/aether/util/graph/transformer/ConflictMarker/getKeys(org.eclipse.aether.graph.DependencyNode)#org/eclipse/aether/graph/DependencyNode/getDependency()
org/eclipse/aether/util/graph/transformer/ConflictMarker/getKeys(org.eclipse.aether.graph.DependencyNode)#org/eclipse/aether/graph/Dependency/getArtifact()
org/eclipse/aether/util/graph/transformer/ConflictMarker/getKeys(org.eclipse.aether.graph.DependencyNode)#org/eclipse/aether/graph/DependencyNode/getRelocations()
org/eclipse/aether/util/graph/transformer/ConflictMarker/getKeys(org.eclipse.aether.graph.DependencyNode)#java/util/Collections/singleton(java.lang.Object)
org/eclipse/aether/util/graph/transformer/ConflictMarker/getKeys(org.eclipse.aether.graph.DependencyNode)#java/util/HashSet/HashSet()
org/eclipse/aether/util/graph/transformer/ConflictMarker/getKeys(org.eclipse.aether.graph.DependencyNode)#java/util/Set/add(java.lang.Object)
org/eclipse/aether/util/graph/transformer/ConflictMarker/getKeys(org.eclipse.aether.graph.DependencyNode)#java/util/List/isEmpty()
org/eclipse/aether/util/graph/transformer/ConflictMarker/getKeys(org.eclipse.aether.graph.DependencyNode)#org/eclipse/aether/graph/DependencyNode/getAliases()
org/eclipse/aether/util/graph/transformer/ConflictMarker/getKeys(org.eclipse.aether.graph.DependencyNode)#java/util/Collection/isEmpty()
org/eclipse/aether/util/graph/transformer/ConflictMarker/getKeys(org.eclipse.aether.graph.DependencyNode)#java/util/List/iterator()
org/eclipse/aether/util/graph/transformer/ConflictMarker/getKeys(org.eclipse.aether.graph.DependencyNode)#java/util/Collection/iterator()
org/eclipse/aether/util/graph/transformer/ConflictMarker/transformGraph(org.eclipse.aether.graph.DependencyNode,org.eclipse.aether.collection.DependencyGraphTransformationContext)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/eclipse/aether/util/graph/transformer/ConflictMarker/transformGraph(org.eclipse.aether.graph.DependencyNode,org.eclipse.aether.collection.DependencyGraphTransformationContext)#org/eclipse/aether/collection/DependencyGraphTransformationContext/put(java.lang.Object,java.lang.Object)
org/eclipse/aether/util/graph/transformer/ConflictMarker/transformGraph(org.eclipse.aether.graph.DependencyNode,org.eclipse.aether.collection.DependencyGraphTransformationContext)#java/lang/Long/valueOf(long)
org/eclipse/aether/util/graph/transformer/ConflictMarker/transformGraph(org.eclipse.aether.graph.DependencyNode,org.eclipse.aether.collection.DependencyGraphTransformationContext)#org/eclipse/aether/collection/DependencyGraphTransformationContext/get(java.lang.Object)
org/eclipse/aether/util/graph/transformer/ConflictMarker/transformGraph(org.eclipse.aether.graph.DependencyNode,org.eclipse.aether.collection.DependencyGraphTransformationContext)#java/util/Map/size()
org/eclipse/aether/util/graph/transformer/ConflictMarker/transformGraph(org.eclipse.aether.graph.DependencyNode,org.eclipse.aether.collection.DependencyGraphTransformationContext)#java/util/Map/keySet()
org/eclipse/aether/util/graph/transformer/ConflictMarker/transformGraph(org.eclipse.aether.graph.DependencyNode,org.eclipse.aether.collection.DependencyGraphTransformationContext)#java/util/HashMap/HashMap(int)
org/eclipse/aether/util/graph/transformer/ConflictMarker/transformGraph(org.eclipse.aether.graph.DependencyNode,org.eclipse.aether.collection.DependencyGraphTransformationContext)#java/lang/Integer/valueOf(int)
org/eclipse/aether/util/graph/transformer/ConflictMarker/transformGraph(org.eclipse.aether.graph.DependencyNode,org.eclipse.aether.collection.DependencyGraphTransformationContext)#java/lang/System/currentTimeMillis()
org/eclipse/aether/util/graph/transformer/ConflictMarker/transformGraph(org.eclipse.aether.graph.DependencyNode,org.eclipse.aether.collection.DependencyGraphTransformationContext)#java/util/IdentityHashMap/IdentityHashMap(int)
org/eclipse/aether/util/concurrency/RunnableErrorForwarder/awaitTerminationOfAllRunnables()#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/eclipse/aether/util/concurrency/RunnableErrorForwarder/awaitTerminationOfAllRunnables()#java/lang/Object/equals(java.lang.Object)
org/eclipse/aether/util/concurrency/RunnableErrorForwarder/awaitTerminationOfAllRunnables()#java/lang/StringBuilder/append(java.lang.String)
org/eclipse/aether/util/concurrency/RunnableErrorForwarder/awaitTerminationOfAllRunnables()#java/util/concurrent/atomic/AtomicInteger/get()
org/eclipse/aether/util/concurrency/RunnableErrorForwarder/awaitTerminationOfAllRunnables()#java/lang/Thread/interrupted()
org/eclipse/aether/util/concurrency/RunnableErrorForwarder/awaitTerminationOfAllRunnables()#java/util/concurrent/locks/LockSupport/park()
org/eclipse/aether/util/concurrency/RunnableErrorForwarder/awaitTerminationOfAllRunnables()#java/lang/StringBuilder/StringBuilder()
org/eclipse/aether/util/concurrency/RunnableErrorForwarder/awaitTerminationOfAllRunnables()#java/lang/StringBuilder/append(java.lang.Object)
org/eclipse/aether/util/concurrency/RunnableErrorForwarder/awaitTerminationOfAllRunnables()#java/lang/StringBuilder/toString()
org/eclipse/aether/util/concurrency/RunnableErrorForwarder/awaitTerminationOfAllRunnables()#java/lang/Thread/currentThread()
org/eclipse/aether/util/concurrency/RunnableErrorForwarder/awaitTerminationOfAllRunnables()#java/lang/Thread/interrupt()
org/eclipse/aether/util/ChecksumUtils/calc(java.io.File,java.util.Collection)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/eclipse/aether/util/ChecksumUtils/calc(java.io.File,java.util.Collection)#java/io/FileInputStream/read(byte[])
org/eclipse/aether/util/ChecksumUtils/calc(java.io.File,java.util.Collection)#java/security/MessageDigest/digest()
org/eclipse/aether/util/ChecksumUtils/calc(java.io.File,java.util.Collection)#java/util/Iterator/hasNext()
org/eclipse/aether/util/ChecksumUtils/calc(java.io.File,java.util.Collection)#java/util/Map$Entry/getKey()
org/eclipse/aether/util/ChecksumUtils/calc(java.io.File,java.util.Collection)#java/util/Map/values()
org/eclipse/aether/util/ChecksumUtils/calc(java.io.File,java.util.Collection)#java/util/Iterator/next()
org/eclipse/aether/util/ChecksumUtils/calc(java.io.File,java.util.Collection)#java/util/Set/iterator()
org/eclipse/aether/util/ChecksumUtils/calc(java.io.File,java.util.Collection)#java/io/FileInputStream/close()
org/eclipse/aether/util/ChecksumUtils/calc(java.io.File,java.util.Collection)#java/security/MessageDigest/update(byte[],int,int)
org/eclipse/aether/util/ChecksumUtils/calc(java.io.File,java.util.Collection)#java/util/Map$Entry/getValue()
org/eclipse/aether/util/ChecksumUtils/calc(java.io.File,java.util.Collection)#java/util/Collection/iterator()
org/eclipse/aether/util/ChecksumUtils/calc(java.io.File,java.util.Collection)#java/util/Map/entrySet()
org/eclipse/aether/util/ChecksumUtils/calc(java.io.File,java.util.Collection)#java/util/LinkedHashMap/LinkedHashMap()
org/eclipse/aether/util/ChecksumUtils/calc(java.io.File,java.util.Collection)#java/io/FileInputStream/FileInputStream(java.io.File)
org/eclipse/aether/util/ChecksumUtils/calc(java.io.File,java.util.Collection)#java/security/MessageDigest/getInstance(java.lang.String)
org/eclipse/aether/util/ChecksumUtils/read(java.io.File)#java/io/BufferedReader/close()
org/eclipse/aether/util/ChecksumUtils/read(java.io.File)#java/lang/String/trim()
org/eclipse/aether/util/ChecksumUtils/read(java.io.File)#java/lang/String/length()
org/eclipse/aether/util/ChecksumUtils/read(java.io.File)#java/io/InputStreamReader/InputStreamReader(java.io.InputStream,java.lang.String)
org/eclipse/aether/util/ChecksumUtils/read(java.io.File)#java/lang/String/substring(int,int)
org/eclipse/aether/util/ChecksumUtils/read(java.io.File)#java/lang/String/substring(int)
org/eclipse/aether/util/ChecksumUtils/read(java.io.File)#java/io/FileInputStream/FileInputStream(java.io.File)
org/eclipse/aether/util/ChecksumUtils/read(java.io.File)#java/io/BufferedReader/BufferedReader(java.io.Reader,int)
org/eclipse/aether/util/ChecksumUtils/read(java.io.File)#java/lang/String/lastIndexOf(int)
org/eclipse/aether/util/ChecksumUtils/read(java.io.File)#java/io/FileInputStream/close()
org/eclipse/aether/util/ChecksumUtils/read(java.io.File)#java/io/BufferedReader/readLine()
org/eclipse/aether/util/ChecksumUtils/read(java.io.File)#java/lang/String/matches(java.lang.String)
org/eclipse/aether/util/ChecksumUtils/read(java.io.File)#java/lang/String/indexOf(int)
org/eclipse/aether/util/repository/DefaultProxySelector/getProxy(org.eclipse.aether.repository.RemoteRepository)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/eclipse/aether/util/repository/DefaultProxySelector/getProxy(org.eclipse.aether.repository.RemoteRepository)#java/util/Iterator/hasNext()
org/eclipse/aether/util/repository/DefaultProxySelector/getProxy(org.eclipse.aether.repository.RemoteRepository)#org/eclipse/aether/repository/RemoteRepository/getHost()
org/eclipse/aether/util/repository/DefaultProxySelector/getProxy(org.eclipse.aether.repository.RemoteRepository)#org/eclipse/aether/repository/RemoteRepository/getProtocol()
org/eclipse/aether/util/repository/DefaultProxySelector/getProxy(org.eclipse.aether.repository.RemoteRepository)#java/lang/String/startsWith(java.lang.String)
org/eclipse/aether/util/repository/DefaultProxySelector/getProxy(org.eclipse.aether.repository.RemoteRepository)#java/util/List/iterator()
org/eclipse/aether/util/repository/DefaultProxySelector/getProxy(org.eclipse.aether.repository.RemoteRepository)#org/eclipse/aether/repository/Proxy/getType()
org/eclipse/aether/util/repository/DefaultProxySelector/getProxy(org.eclipse.aether.repository.RemoteRepository)#java/lang/String/toLowerCase(java.util.Locale)
org/eclipse/aether/util/repository/DefaultProxySelector/getProxy(org.eclipse.aether.repository.RemoteRepository)#java/lang/String/length()
org/eclipse/aether/util/repository/DefaultProxySelector/getProxy(org.eclipse.aether.repository.RemoteRepository)#java/util/Map/get(java.lang.Object)
org/eclipse/aether/util/repository/DefaultProxySelector/getProxy(org.eclipse.aether.repository.RemoteRepository)#java/util/Iterator/next()
org/eclipse/aether/util/repository/DefaultProxySelector/getProxy(org.eclipse.aether.repository.RemoteRepository)#java/util/HashMap/HashMap()
org/eclipse/aether/util/repository/DefaultProxySelector/getProxy(org.eclipse.aether.repository.RemoteRepository)#java/lang/String/equals(java.lang.Object)
org/eclipse/aether/util/repository/DefaultProxySelector/getProxy(org.eclipse.aether.repository.RemoteRepository)#java/lang/String/substring(int)
org/eclipse/aether/util/repository/DefaultProxySelector/getProxy(org.eclipse.aether.repository.RemoteRepository)#java/util/Map/containsKey(java.lang.Object)
org/eclipse/aether/util/repository/JreProxySelector/getProxy(org.eclipse.aether.repository.RemoteRepository)#org/eclipse/aether/repository/Proxy/Proxy(java.lang.String,java.lang.String,int,org.eclipse.aether.repository.Authentication)
org/eclipse/aether/util/repository/JreProxySelector/getProxy(org.eclipse.aether.repository.RemoteRepository)#java/net/InetSocketAddress/getHostName()
org/eclipse/aether/util/repository/JreProxySelector/getProxy(org.eclipse.aether.repository.RemoteRepository)#java/net/ProxySelector/getDefault()
org/eclipse/aether/util/repository/JreProxySelector/getProxy(org.eclipse.aether.repository.RemoteRepository)#java/net/ProxySelector/select(java.net.URI)
org/eclipse/aether/util/repository/JreProxySelector/getProxy(org.eclipse.aether.repository.RemoteRepository)#java/net/URI/parseServerAuthority()
org/eclipse/aether/util/repository/JreProxySelector/getProxy(org.eclipse.aether.repository.RemoteRepository)#java/net/Proxy/address()
org/eclipse/aether/util/repository/JreProxySelector/getProxy(org.eclipse.aether.repository.RemoteRepository)#java/net/Proxy/type()
org/eclipse/aether/util/repository/JreProxySelector/getProxy(org.eclipse.aether.repository.RemoteRepository)#java/util/List/iterator()
org/eclipse/aether/util/repository/JreProxySelector/getProxy(org.eclipse.aether.repository.RemoteRepository)#java/util/Iterator/hasNext()
org/eclipse/aether/util/repository/JreProxySelector/getProxy(org.eclipse.aether.repository.RemoteRepository)#java/net/URI/URI(java.lang.String)
org/eclipse/aether/util/repository/JreProxySelector/getProxy(org.eclipse.aether.repository.RemoteRepository)#org/eclipse/aether/repository/RemoteRepository/getUrl()
org/eclipse/aether/util/repository/JreProxySelector/getProxy(org.eclipse.aether.repository.RemoteRepository)#java/net/Proxy$Type/equals(java.lang.Object)
org/eclipse/aether/util/repository/JreProxySelector/getProxy(org.eclipse.aether.repository.RemoteRepository)#java/util/Iterator/next()
org/eclipse/aether/util/repository/JreProxySelector/getProxy(org.eclipse.aether.repository.RemoteRepository)#java/net/InetSocketAddress/getPort()
